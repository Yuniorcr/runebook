<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="node">
    <body>
      <group id="node">
        <trans-unit id="b992a9b66ecf9c509977f4e79d71ce4d083dbf97" translate="yes" xml:space="preserve">
          <source>On the client side, instances of &lt;a href=&quot;#http2_class_clienthttp2stream&quot;&gt;&lt;code&gt;ClientHttp2Stream&lt;/code&gt;&lt;/a&gt; are created when the &lt;code&gt;http2session.request()&lt;/code&gt; method is called.</source>
          <target state="translated">クライアント側では、インスタンスの&lt;a href=&quot;#http2_class_clienthttp2stream&quot;&gt; &lt;code&gt;ClientHttp2Stream&lt;/code&gt; を&lt;/a&gt;したときに作成され &lt;code&gt;http2session.request()&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ac9f26bc28901e0da3bba962837c8a762d501500" translate="yes" xml:space="preserve">
          <source>On the client, the &lt;code&gt;Http2Stream&lt;/code&gt; instance returned by &lt;code&gt;http2session.request()&lt;/code&gt; may not be immediately ready for use if the parent &lt;code&gt;Http2Session&lt;/code&gt; has not yet been fully established. In such cases, operations called on the &lt;code&gt;Http2Stream&lt;/code&gt; will be buffered until the &lt;code&gt;'ready'&lt;/code&gt; event is emitted. User code should rarely, if ever, need to handle the &lt;code&gt;'ready'&lt;/code&gt; event directly. The ready status of an &lt;code&gt;Http2Stream&lt;/code&gt; can be determined by checking the value of &lt;code&gt;http2stream.id&lt;/code&gt;. If the value is &lt;code&gt;undefined&lt;/code&gt;, the stream is not yet ready for use.</source>
          <target state="translated">クライアントでは、親の &lt;code&gt;Http2Session&lt;/code&gt; がまだ完全に確立されていない場合、 &lt;code&gt;http2session.request()&lt;/code&gt; によって返された &lt;code&gt;Http2Stream&lt;/code&gt; インスタンスをすぐに使用できるとは限りません。このような場合、 &lt;code&gt;Http2Stream&lt;/code&gt; で呼び出された操作は、 &lt;code&gt;'ready'&lt;/code&gt; イベントが発行されるまでバッファリングされます。ユーザーコードが &lt;code&gt;'ready'&lt;/code&gt; イベントを直接処理する必要が生じることはほとんどありません。レディ状態 &lt;code&gt;Http2Stream&lt;/code&gt; は、の値をチェックすることによって決定することができる &lt;code&gt;http2stream.id&lt;/code&gt; を。値が &lt;code&gt;undefined&lt;/code&gt; の場合、ストリームはまだ使用できる状態ではありません。</target>
        </trans-unit>
        <trans-unit id="f16439cf41d36a278e3eaf44e9d440d888072b10" translate="yes" xml:space="preserve">
          <source>On the client, the &lt;code&gt;session&lt;/code&gt; can be provided to the &lt;code&gt;session&lt;/code&gt; option of &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt; to resume the connection.</source>
          <target state="translated">クライアントでは、 &lt;code&gt;session&lt;/code&gt; を&lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;session&lt;/code&gt; オプションに提供して、接続を再開できます。</target>
        </trans-unit>
        <trans-unit id="df17243448ce58a6e9d8efe145f7f94cbbd06305" translate="yes" xml:space="preserve">
          <source>On the first line, &lt;code&gt;foo.js&lt;/code&gt; loads the module &lt;code&gt;circle.js&lt;/code&gt; that is in the same directory as &lt;code&gt;foo.js&lt;/code&gt;.</source>
          <target state="translated">最初の行に、 &lt;code&gt;foo.js&lt;/code&gt; は負荷にモジュール &lt;code&gt;circle.js&lt;/code&gt; を同じディレクトリにある &lt;code&gt;foo.js&lt;/code&gt; はに。</target>
        </trans-unit>
        <trans-unit id="3b07e2e6f8a12bd63b2638139eb922d67ad2dfaf" translate="yes" xml:space="preserve">
          <source>On the main thread, values are removed from the queue associated with the thread-safe function in an idle loop. This error indicates that an error has occurred when attempting to start the loop.</source>
          <target state="translated">メインスレッドでは、アイドルループ内のスレッドセーフ関数に関連付けられたキューから値が削除されます。このエラーは、ループを開始しようとしたときにエラーが発生したことを示します。</target>
        </trans-unit>
        <trans-unit id="1a21df9b2f395bf348632f07253f5adab79a3235" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;node-inspect&lt;/code&gt; can be installed locally through a package manager, as it is published on the npm registry under the same name. No source code modification is necessary if that is done.</source>
          <target state="translated">一方、 &lt;code&gt;node-inspect&lt;/code&gt; は、同じ名前でnpmレジストリに公開されているため、パッケージマネージャーを介してローカルにインストールできます。その場合、ソースコードを変更する必要はありません。</target>
        </trans-unit>
        <trans-unit id="bfb69afb09660b281005b2feb90d4b1d5ba3d6e1" translate="yes" xml:space="preserve">
          <source>On the other hand, &lt;code&gt;node-inspect&lt;/code&gt; may be installed locally through a package manager, as it is published on the npm registry under the same name. No source code modification is necessary if that is done.</source>
          <target state="translated">一方、 &lt;code&gt;node-inspect&lt;/code&gt; はnpmレジストリで同じ名前で公開されているため、パッケージマネージャーを介してローカルにインストールできます。それが行われた場合、ソースコードの変更は必要ありません。</target>
        </trans-unit>
        <trans-unit id="45d01237536f26cbcba80929de5b721832402940" translate="yes" xml:space="preserve">
          <source>On the server side, instances of &lt;a href=&quot;#http2_class_serverhttp2stream&quot;&gt;&lt;code&gt;ServerHttp2Stream&lt;/code&gt;&lt;/a&gt; are created either when:</source>
          <target state="translated">サーバー側では、次の場合に&lt;a href=&quot;#http2_class_serverhttp2stream&quot;&gt; &lt;code&gt;ServerHttp2Stream&lt;/code&gt; の&lt;/a&gt;インスタンスが作成されます。</target>
        </trans-unit>
        <trans-unit id="93fbaba0c5ebedfd2d6fa15d405cceb8572a7ff1" translate="yes" xml:space="preserve">
          <source>On the server side, user code will typically not listen for this event directly, and would instead register a handler for the &lt;code&gt;'stream'&lt;/code&gt; event emitted by the &lt;code&gt;net.Server&lt;/code&gt; or &lt;code&gt;tls.Server&lt;/code&gt; instances returned by &lt;code&gt;http2.createServer()&lt;/code&gt; and &lt;code&gt;http2.createSecureServer()&lt;/code&gt;, respectively, as in the example below:</source>
          <target state="translated">サーバー側では、ユーザコードは通常、直接、このイベントのために耳を傾けず、代わりのハンドラを登録します &lt;code&gt;'stream'&lt;/code&gt; から放出されたイベント &lt;code&gt;net.Server&lt;/code&gt; または &lt;code&gt;tls.Server&lt;/code&gt; によって返されるインスタンス &lt;code&gt;http2.createServer()&lt;/code&gt; と &lt;code&gt;http2.createSecureServer()&lt;/code&gt; それぞれ、以下の例のように：</target>
        </trans-unit>
        <trans-unit id="db98c36f8419db12b0191adee61e97e682faea7d" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;destroy()&lt;/code&gt; has been called any further calls will be a no-op and no further errors except from &lt;code&gt;_destroy()&lt;/code&gt; may be emitted as &lt;code&gt;'error'&lt;/code&gt;.</source>
          <target state="translated">一度 &lt;code&gt;destroy()&lt;/code&gt; 任意のさらなる呼び出しが無OPとから除いてさらにエラーないであろうと呼ばれている &lt;code&gt;_destroy()&lt;/code&gt; として放出される &lt;code&gt;'error'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4ea59c46dc0807588619ccf2c0d9fae3a8fddb2c" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;destroy()&lt;/code&gt; has been called, any further calls will be a no-op and no further errors except from &lt;code&gt;_destroy()&lt;/code&gt; may be emitted as &lt;code&gt;'error'&lt;/code&gt;.</source>
          <target state="translated">一度 &lt;code&gt;destroy()&lt;/code&gt; 任意のさらなる呼び出しが無OPとから除いてさらにエラーないであろう、と呼ばれている &lt;code&gt;_destroy()&lt;/code&gt; として放出される &lt;code&gt;'error'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b28a2e0cd081287892b62dd1e0f530cc16c1da53" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;process.connected&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, it is no longer possible to send messages over the IPC channel using &lt;code&gt;process.send()&lt;/code&gt;.</source>
          <target state="translated">いったん &lt;code&gt;process.connected&lt;/code&gt; で &lt;code&gt;false&lt;/code&gt; 、使用してIPCチャネルを介してメッセージを送信することはできなくなりました &lt;code&gt;process.send()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ffa23dc4c315219e395e0590efe1a2b70ca58a09" translate="yes" xml:space="preserve">
          <source>Once a &lt;code&gt;Socket&lt;/code&gt; has been bound to an &lt;code&gt;Http2Session&lt;/code&gt;, user code should rely solely on the API of the &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">一度 &lt;code&gt;Socket&lt;/code&gt; にバインドされている &lt;code&gt;Http2Session&lt;/code&gt; 、ユーザーコードは、もっぱらのAPIに依存している必要があります &lt;code&gt;Http2Session&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d73920c9a9f1ea9d30889c8dfb8841df2a90c168" translate="yes" xml:space="preserve">
          <source>Once a socket has been passed to a child, the parent is no longer capable of tracking when the socket is destroyed. To indicate this, the &lt;code&gt;.connections&lt;/code&gt; property becomes &lt;code&gt;null&lt;/code&gt;. It is recommended not to use &lt;code&gt;.maxConnections&lt;/code&gt; when this occurs.</source>
          <target state="translated">ソケットが子に渡されると、親はソケットが破棄されたときに追跡できなくなります。これを示すために、 &lt;code&gt;.connections&lt;/code&gt; プロパティは &lt;code&gt;null&lt;/code&gt; になります。これが発生した場合は、 &lt;code&gt;.maxConnections&lt;/code&gt; を使用しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a692176ad95c5de300944c8834aa875a0d87f9b1" translate="yes" xml:space="preserve">
          <source>Once a socket is assigned to this request and is connected &lt;a href=&quot;net#net_socket_setkeepalive_enable_initialdelay&quot;&gt;&lt;code&gt;socket.setKeepAlive()&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">ソケットがこのリクエストに割り当てられて接続されると、&lt;a href=&quot;net#net_socket_setkeepalive_enable_initialdelay&quot;&gt; &lt;code&gt;socket.setKeepAlive()&lt;/code&gt; &lt;/a&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7f52f26999bdf868260d070323acc69b57258b58" translate="yes" xml:space="preserve">
          <source>Once a socket is assigned to this request and is connected &lt;a href=&quot;net#net_socket_setnodelay_nodelay&quot;&gt;&lt;code&gt;socket.setNoDelay()&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">ソケットがこのリクエストに割り当てられ、接続されると、&lt;a href=&quot;net#net_socket_setnodelay_nodelay&quot;&gt; &lt;code&gt;socket.setNoDelay()&lt;/code&gt; &lt;/a&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="33c79533c7386872c12f4b58db6859df57263cfa" translate="yes" xml:space="preserve">
          <source>Once a socket is assigned to this request and is connected &lt;a href=&quot;net#net_socket_settimeout_timeout_callback&quot;&gt;&lt;code&gt;socket.setTimeout()&lt;/code&gt;&lt;/a&gt; will be called.</source>
          <target state="translated">ソケットがこのリクエストに割り当てられ、接続されると、&lt;a href=&quot;net#net_socket_settimeout_timeout_callback&quot;&gt; &lt;code&gt;socket.setTimeout()&lt;/code&gt; &lt;/a&gt;が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="efd079e73c7a96e390596e9440343bcb5e17ed66" translate="yes" xml:space="preserve">
          <source>Once again, to build this example, the &lt;code&gt;myobject.cc&lt;/code&gt; file must be added to the &lt;code&gt;binding.gyp&lt;/code&gt;:</source>
          <target state="translated">もう一度、この例をビルドするには、 &lt;code&gt;myobject.cc&lt;/code&gt; ファイルを &lt;code&gt;binding.gyp&lt;/code&gt; に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="a0f447123bcb9f711d107a546941eab8691f611f" translate="yes" xml:space="preserve">
          <source>Once an event has been emitted, all listeners attached to it at the time of emitting will be called in order. This implies that any &lt;code&gt;removeListener()&lt;/code&gt; or &lt;code&gt;removeAllListeners()&lt;/code&gt; calls &lt;em&gt;after&lt;/em&gt; emitting and &lt;em&gt;before&lt;/em&gt; the last listener finishes execution will not remove them from &lt;code&gt;emit()&lt;/code&gt; in progress. Subsequent events will behave as expected.</source>
          <target state="translated">イベントが発行されると、発行時にそれに接続されているすべてのリスナーが順番に呼び出されます。これは、 &lt;code&gt;removeListener()&lt;/code&gt; &lt;em&gt;後&lt;/em&gt;、最後のリスナーの実行が&lt;em&gt;完了&lt;/em&gt;する&lt;em&gt;前に&lt;/em&gt;removeListener（）または &lt;code&gt;removeAllListeners()&lt;/code&gt; を呼び出して&lt;em&gt;も&lt;/em&gt;、進行中の &lt;code&gt;emit()&lt;/code&gt; からそれらが削除されないことを意味します。後続のイベントは期待どおりに動作します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f94fa29a6ba027494d2efe834bdc10a1975cff01" translate="yes" xml:space="preserve">
          <source>Once an event is emitted, all listeners attached to it at the time of emitting are called in order. This implies that any &lt;code&gt;removeListener()&lt;/code&gt; or &lt;code&gt;removeAllListeners()&lt;/code&gt; calls &lt;em&gt;after&lt;/em&gt; emitting and &lt;em&gt;before&lt;/em&gt; the last listener finishes execution will not remove them from &lt;code&gt;emit()&lt;/code&gt; in progress. Subsequent events behave as expected.</source>
          <target state="translated">イベントが発行されると、発行時にそれに接続されているすべてのリスナーが順番に呼び出されます。これは、任意のことを意味 &lt;code&gt;removeListener()&lt;/code&gt; または &lt;code&gt;removeAllListeners()&lt;/code&gt; 呼び出し&lt;em&gt;の後に&lt;/em&gt;発光し、&lt;em&gt;前の&lt;/em&gt;最後のリスナー終了の実行からそれらを削除されません &lt;code&gt;emit()&lt;/code&gt; 進行中。後続のイベントは期待どおりに動作します。</target>
        </trans-unit>
        <trans-unit id="e2b0e5947e0cec9da5491e6da952ace81743900d" translate="yes" xml:space="preserve">
          <source>Once built, the binary Addon can be used from within Node.js by pointing &lt;a href=&quot;modules#modules_require_id&quot;&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/a&gt; to the built &lt;code&gt;addon.node&lt;/code&gt; module:</source>
          <target state="translated">ビルドされたバイナリAddonは、ビルドされた &lt;code&gt;addon.node&lt;/code&gt; モジュールに&lt;a href=&quot;modules#modules_require_id&quot;&gt; &lt;code&gt;require()&lt;/code&gt; &lt;/a&gt;をポイントすることにより、Node.js内から使用できます。</target>
        </trans-unit>
        <trans-unit id="c6a5e03fd76a0c9401995bf6c32afa91bc8f4c48" translate="yes" xml:space="preserve">
          <source>Once built, the binary addon can be used from within Node.js by pointing &lt;a href=&quot;modules#modules_require_id&quot;&gt;&lt;code&gt;require()&lt;/code&gt;&lt;/a&gt; to the built &lt;code&gt;addon.node&lt;/code&gt; module:</source>
          <target state="translated">ビルドが完了すると、&lt;a href=&quot;modules#modules_require_id&quot;&gt; &lt;code&gt;require()&lt;/code&gt; &lt;/a&gt;をビルドされた &lt;code&gt;addon.node&lt;/code&gt; モジュールにポイントすることで、Node.js内からバイナリアドオンを使用できます。</target>
        </trans-unit>
        <trans-unit id="15b98e33970016f35017b9cd3f8d13b67f71f0b2" translate="yes" xml:space="preserve">
          <source>Once called, the &lt;code&gt;http2session.pendingSettingsAck&lt;/code&gt; property will be &lt;code&gt;true&lt;/code&gt; while the session is waiting for the remote peer to acknowledge the new settings.</source>
          <target state="translated">呼び出されると、セッションがリモートピアが新しい設定を確認するのを待っている間、 &lt;code&gt;http2session.pendingSettingsAck&lt;/code&gt; プロパティは &lt;code&gt;true&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="b7b49eb661c1323cc9c21687a30ad06fc5aca2c4" translate="yes" xml:space="preserve">
          <source>Once compiled, the example Addon can be required and used from within Node.js:</source>
          <target state="translated">コンパイルしたら、Node.js内から例のアドオンを必要とし、使用することができます。</target>
        </trans-unit>
        <trans-unit id="a257431910afb0a71f29f84ab098cccf906f7a42" translate="yes" xml:space="preserve">
          <source>Once compiled, the example addon can be required and used from within Node.js:</source>
          <target state="translated">コンパイルしたら、Node.js内から例のアドオンを必要とし、使用することができます。</target>
        </trans-unit>
        <trans-unit id="c860007d4d4eedf037226ad7546486c7073ead4f" translate="yes" xml:space="preserve">
          <source>Once created the async worker can be queued for execution using the &lt;a href=&quot;#n_api_napi_queue_async_work&quot;&gt;&lt;code&gt;napi_queue_async_work&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">作成された非同期ワーカーは、&lt;a href=&quot;#n_api_napi_queue_async_work&quot;&gt; &lt;code&gt;napi_queue_async_work&lt;/code&gt; &lt;/a&gt;関数を使用して実行キューに入れることができます。</target>
        </trans-unit>
        <trans-unit id="fde554252391956e05e5ec8e1b886df2dade9a50" translate="yes" xml:space="preserve">
          <source>Once destroyed, the &lt;code&gt;Http2Session&lt;/code&gt; will emit the &lt;code&gt;'close'&lt;/code&gt; event. If &lt;code&gt;error&lt;/code&gt; is not undefined, an &lt;code&gt;'error'&lt;/code&gt; event will be emitted immediately before the &lt;code&gt;'close'&lt;/code&gt; event.</source>
          <target state="translated">破棄されると、 &lt;code&gt;Http2Session&lt;/code&gt; は &lt;code&gt;'close'&lt;/code&gt; イベントを発行します。 &lt;code&gt;error&lt;/code&gt; が未定義でない場合、 &lt;code&gt;'error'&lt;/code&gt; イベントは &lt;code&gt;'close'&lt;/code&gt; イベントの直前に発行されます。</target>
        </trans-unit>
        <trans-unit id="6b2d38c26dd12cdd65c7b3c851e009727e58fdc0" translate="yes" xml:space="preserve">
          <source>Once enabled, Node.js will treat the following as ES modules when passed to &lt;code&gt;node&lt;/code&gt; as the initial input, or when referenced by &lt;code&gt;import&lt;/code&gt; statements within ES module code:</source>
          <target state="translated">有効にすると、Node.jsは、 &lt;code&gt;node&lt;/code&gt; に初期入力として渡されたとき、またはESモジュールコード内の &lt;code&gt;import&lt;/code&gt; ステートメントによって参照されたときに、以下をESモジュールとして扱います。</target>
        </trans-unit>
        <trans-unit id="73e0f4c1adc95b4748965a8b094cee1cd3d7802c" translate="yes" xml:space="preserve">
          <source>Once no more items are left in the queue, the idle loop must be suspended. This error indicates that the idle loop has failed to stop.</source>
          <target state="translated">キューにこれ以上のアイテムが残らないと、アイドルループは中断されなければなりません。このエラーは、アイドルループの停止に失敗したことを示します。</target>
        </trans-unit>
        <trans-unit id="56f48e595782eee9bf460b4ddf8f7f4ab9ce4be3" translate="yes" xml:space="preserve">
          <source>Once the &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; method has been called, it will not be called again until more data is pushed through the &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;readable.push()&lt;/code&gt;&lt;/a&gt; method. Empty data such as empty buffers and strings will not cause &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; to be called.</source>
          <target state="translated">いったん&lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出された多くのデータがを通して押されるまで、それが再び呼び出されることはありません&lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;readable.push()&lt;/code&gt; &lt;/a&gt;メソッド。空のバッファや文字列などの空のデータでは、&lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt;は呼び出されません。</target>
        </trans-unit>
        <trans-unit id="82ae60722591a3b5fc366c0deb82c1caaa5403c3" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;binding.gyp&lt;/code&gt; file has been created, use &lt;code&gt;node-gyp configure&lt;/code&gt; to generate the appropriate project build files for the current platform. This will generate either a &lt;code&gt;Makefile&lt;/code&gt; (on Unix platforms) or a &lt;code&gt;vcxproj&lt;/code&gt; file (on Windows) in the &lt;code&gt;build/&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;binding.gyp&lt;/code&gt; ファイルが作成されたら、 &lt;code&gt;node-gyp configure&lt;/code&gt; を使用して、現在のプラットフォームに適したプロジェクトビルドファイルを生成します。これにより、 &lt;code&gt;Makefile&lt;/code&gt; （UNIXプラットフォームの場合）または &lt;code&gt;vcxproj&lt;/code&gt; ファイル（Windowsの場合）が &lt;code&gt;build/&lt;/code&gt; ディレクトリーに生成されます。</target>
        </trans-unit>
        <trans-unit id="546e3d8231cb1e62063ceda275311eaa096e3438" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;binding.gyp&lt;/code&gt; file is ready, the example Addons can be configured and built using &lt;code&gt;node-gyp&lt;/code&gt;:</source>
          <target state="translated">いったん &lt;code&gt;binding.gyp&lt;/code&gt; のファイルの準備ができている、例のアドオンが構成され、使用して構築することができます &lt;code&gt;node-gyp&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="c72da0d7dea0742ac9e442107cf2b82db83e160c" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;binding.gyp&lt;/code&gt; file is ready, the example addons can be configured and built using &lt;code&gt;node-gyp&lt;/code&gt;:</source>
          <target state="translated">いったん &lt;code&gt;binding.gyp&lt;/code&gt; のファイルの準備ができ、例えば、アドオンが構成され、使用して構築することができます &lt;code&gt;node-gyp&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9da60f44e80b948826dc67bb1bcd8aec425f7132" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;cipher.final()&lt;/code&gt; method has been called, the &lt;code&gt;Cipher&lt;/code&gt; object can no longer be used to encrypt data. Attempts to call &lt;code&gt;cipher.final()&lt;/code&gt; more than once will result in an error being thrown.</source>
          <target state="translated">一旦 &lt;code&gt;cipher.final()&lt;/code&gt; メソッドが呼び出された、 &lt;code&gt;Cipher&lt;/code&gt; オブジェクトは、暗号化データにもはや使用することができます。 &lt;code&gt;cipher.final()&lt;/code&gt; を2回以上呼び出そうとすると、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="6673a87b1a83c087904fc3e05640c35e0ffaa21b" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;decipher.final()&lt;/code&gt; method has been called, the &lt;code&gt;Decipher&lt;/code&gt; object can no longer be used to decrypt data. Attempts to call &lt;code&gt;decipher.final()&lt;/code&gt; more than once will result in an error being thrown.</source>
          <target state="translated">一旦 &lt;code&gt;decipher.final()&lt;/code&gt; メソッドが呼び出された、 &lt;code&gt;Decipher&lt;/code&gt; 対象は、もはや復号化データに使用することができません。 &lt;code&gt;decipher.final()&lt;/code&gt; を複数回呼び出そうとすると、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="52f4dfed9ec5522e12f3e2b5320ac83fe3e4216c" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;readable._read()&lt;/code&gt; method has been called, it will not be called again until the &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;readable.push()&lt;/code&gt;&lt;/a&gt; method is called.</source>
          <target state="translated">いったん &lt;code&gt;readable._read()&lt;/code&gt; メソッドが呼び出されると、&lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;readable.push()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されるまで、再度呼び出されることはありません。</target>
        </trans-unit>
        <trans-unit id="1a22398bb64d578f5216c8a024b94cc6d8495243" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;readline.Interface&lt;/code&gt; instance is created, the most common case is to listen for the &lt;code&gt;'line'&lt;/code&gt; event:</source>
          <target state="translated">いったん &lt;code&gt;readline.Interface&lt;/code&gt; のインスタンスが作成され、最も一般的なケースはをリッスンするためにある &lt;code&gt;'line'&lt;/code&gt; イベント：</target>
        </trans-unit>
        <trans-unit id="c00e5c746b27e93abda9669983083d6308ff5915" translate="yes" xml:space="preserve">
          <source>Once the CSR file is generated, it can either be sent to a Certificate Authority for signing or used to generate a self-signed certificate.</source>
          <target state="translated">CSRファイルが生成されると、それを証明書局に送って署名するか、自己署名証明書を生成するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="c814183de4ee5ac446ac54e8c1b050300c264185" translate="yes" xml:space="preserve">
          <source>Once the certificate is generated, it can be used to generate a &lt;code&gt;.pfx&lt;/code&gt; or &lt;code&gt;.p12&lt;/code&gt; file:</source>
          <target state="translated">証明書が生成されると、それを使用して &lt;code&gt;.pfx&lt;/code&gt; または &lt;code&gt;.p12&lt;/code&gt; ファイルを生成できます。</target>
        </trans-unit>
        <trans-unit id="96a60a169bcc053e92f04ade6da11c5c2f124427" translate="yes" xml:space="preserve">
          <source>Once the client receives the &lt;code&gt;SETTINGS&lt;/code&gt; frame from the server indicating that the extended CONNECT may be used, it may send &lt;code&gt;CONNECT&lt;/code&gt; requests that use the &lt;code&gt;':protocol'&lt;/code&gt; HTTP/2 pseudo-header:</source>
          <target state="translated">クライアントが拡張CONNECTを使用できることを示す &lt;code&gt;SETTINGS&lt;/code&gt; フレームをサーバーから受信すると、 &lt;code&gt;':protocol'&lt;/code&gt; HTTP / 2疑似ヘッダーを使用する &lt;code&gt;CONNECT&lt;/code&gt; リクエストを送信できます。</target>
        </trans-unit>
        <trans-unit id="23163b4a5b1c314b71549df1d1817513f8d243c4" translate="yes" xml:space="preserve">
          <source>Once the debugger is run, a breakpoint will occur at line 3:</source>
          <target state="translated">デバッガが実行されると、3 行目でブレークポイントが発生します。</target>
        </trans-unit>
        <trans-unit id="06333cf16cd00d4e14a36bbf306106e9fe7a8631" translate="yes" xml:space="preserve">
          <source>Once the number of threads making use of a &lt;code&gt;napi_threadsafe_function&lt;/code&gt; reaches zero, no further threads can start making use of it by calling &lt;code&gt;napi_acquire_threadsafe_function()&lt;/code&gt;. In fact, all subsequent API calls associated with it, except &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt;, will return an error value of &lt;code&gt;napi_closing&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;napi_threadsafe_function&lt;/code&gt; を使用するスレッドの数がゼロに達すると、それ以上のスレッドは &lt;code&gt;napi_acquire_threadsafe_function()&lt;/code&gt; を呼び出してそれを使用できなくなります。実際、 &lt;code&gt;napi_release_threadsafe_function()&lt;/code&gt; を除いて、それに関連付けられている後続のすべてのAPI呼び出しは、 &lt;code&gt;napi_closing&lt;/code&gt; のエラー値を返します。</target>
        </trans-unit>
        <trans-unit id="697685409a68c8f36ef5cf0d11b15316e24adea9" translate="yes" xml:space="preserve">
          <source>Once the server is now shared between the parent and child, some connections can be handled by the parent and some by the child.</source>
          <target state="translated">サーバが親と子で共有されるようになると、いくつかの接続は親が処理し、いくつかは子が処理することができるようになります。</target>
        </trans-unit>
        <trans-unit id="54c3869b5e878ba059e38cec56d8324aec191fbe" translate="yes" xml:space="preserve">
          <source>Once the socket is created, calling &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt;&lt;code&gt;socket.bind()&lt;/code&gt;&lt;/a&gt; will instruct the socket to begin listening for datagram messages. When &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; are not passed to &lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt;&lt;code&gt;socket.bind()&lt;/code&gt;&lt;/a&gt; the method will bind the socket to the &quot;all interfaces&quot; address on a random port (it does the right thing for both &lt;code&gt;udp4&lt;/code&gt; and &lt;code&gt;udp6&lt;/code&gt; sockets). The bound address and port can be retrieved using &lt;a href=&quot;#dgram_socket_address&quot;&gt;&lt;code&gt;socket.address().address&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#dgram_socket_address&quot;&gt;&lt;code&gt;socket.address().port&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ソケットが作成されたら、&lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt; &lt;code&gt;socket.bind()&lt;/code&gt; &lt;/a&gt;を呼び出すと、ソケットにデータグラムメッセージのリスニングを開始するように指示します。 &lt;code&gt;address&lt;/code&gt; と &lt;code&gt;port&lt;/code&gt; が&lt;a href=&quot;#dgram_socket_bind_port_address_callback&quot;&gt; &lt;code&gt;socket.bind()&lt;/code&gt; に&lt;/a&gt;渡されない場合、メソッドはソケットをランダムポートの「すべてのインターフェース」アドレスにバインドします（ &lt;code&gt;udp4&lt;/code&gt; ソケットと &lt;code&gt;udp6&lt;/code&gt; ソケットの両方で正しく機能します）。バインドされたアドレスとポートは、&lt;a href=&quot;#dgram_socket_address&quot;&gt; &lt;code&gt;socket.address().address&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#dgram_socket_address&quot;&gt; &lt;code&gt;socket.address().port&lt;/code&gt; &lt;/a&gt;を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="d9dd7de7e1c91ec7335bd144924ed7a2032f6d8f" translate="yes" xml:space="preserve">
          <source>Once the source code has been written, it must be compiled into the binary &lt;code&gt;addon.node&lt;/code&gt; file. To do so, create a file called &lt;code&gt;binding.gyp&lt;/code&gt; in the top-level of the project describing the build configuration of the module using a JSON-like format. This file is used by &lt;a href=&quot;https://github.com/nodejs/node-gyp&quot;&gt;node-gyp&lt;/a&gt; &amp;mdash; a tool written specifically to compile Node.js Addons.</source>
          <target state="translated">ソースコードを作成したら、それをバイナリの &lt;code&gt;addon.node&lt;/code&gt; ファイルにコンパイルする必要があります。これを行うには、JSONのような形式を使用して、モジュールのビルド構成を記述したプロジェクトの最上位に &lt;code&gt;binding.gyp&lt;/code&gt; というファイルを作成します。このファイルは、Node.jsアドオンをコンパイルするために特別に記述されたツールである&lt;a href=&quot;https://github.com/nodejs/node-gyp&quot;&gt;node-gyp&lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="4c1ec49d0c8b41620816e4acc922a0bb808c5323" translate="yes" xml:space="preserve">
          <source>Once the source code has been written, it must be compiled into the binary &lt;code&gt;addon.node&lt;/code&gt; file. To do so, create a file called &lt;code&gt;binding.gyp&lt;/code&gt; in the top-level of the project describing the build configuration of the module using a JSON-like format. This file is used by &lt;a href=&quot;https://github.com/nodejs/node-gyp&quot;&gt;node-gyp&lt;/a&gt;, a tool written specifically to compile Node.js addons.</source>
          <target state="translated">ソースコードを記述したら、バイナリの &lt;code&gt;addon.node&lt;/code&gt; ファイルにコンパイルする必要があります。これを行うには、プロジェクトのトップレベルに &lt;code&gt;binding.gyp&lt;/code&gt; というファイルを作成し、JSONのような形式を使用してモジュールのビルド構成を記述します。このファイルは、Node.jsアドオンをコンパイルするために特別に作成されたツールである&lt;a href=&quot;https://github.com/nodejs/node-gyp&quot;&gt;node-gyp&lt;/a&gt;によって使用されます。</target>
        </trans-unit>
        <trans-unit id="bcbfb2f9203bc4c118a7a189cee574fa849e67c8" translate="yes" xml:space="preserve">
          <source>Once the total size of the internal read buffer reaches the threshold specified by &lt;code&gt;highWaterMark&lt;/code&gt;, the stream will temporarily stop reading data from the underlying resource until the data currently buffered can be consumed (that is, the stream will stop calling the internal &lt;a href=&quot;#stream_readable_read_size_1&quot;&gt;&lt;code&gt;readable._read()&lt;/code&gt;&lt;/a&gt; method that is used to fill the read buffer).</source>
          <target state="translated">内部読み取りバッファーの合計サイズが &lt;code&gt;highWaterMark&lt;/code&gt; で指定されたしきい値に達すると、ストリームは、現在バッファーに入れられているデータが消費されるまで、基になるリソースからのデータの読み取りを一時的に停止します（つまり、ストリームは内部&lt;a href=&quot;#stream_readable_read_size_1&quot;&gt; &lt;code&gt;readable._read()&lt;/code&gt; &lt;/a&gt;読み取りバッファを埋めるために使用されるメソッド）。</target>
        </trans-unit>
        <trans-unit id="3ab067988cb8464f26b4eae4e55c63ed294db10f" translate="yes" xml:space="preserve">
          <source>Once the total size of the internal read buffer reaches the threshold specified by &lt;code&gt;highWaterMark&lt;/code&gt;, the stream will temporarily stop reading data from the underlying resource until the data currently buffered can be consumed (that is, the stream will stop calling the internal &lt;code&gt;readable._read()&lt;/code&gt; method that is used to fill the read buffer).</source>
          <target state="translated">内部読み取りバッファーの合計サイズが &lt;code&gt;highWaterMark&lt;/code&gt; で指定されたしきい値に達すると、ストリームは、現在バッファーされているデータを消費できるようになるまで（つまり、ストリームは内部の &lt;code&gt;readable._read()&lt;/code&gt; コードの呼び出しを停止するまで）、基になるリソースからのデータの読み取りを一時的に停止します。）読み取りバッファを埋めるために使用されるメソッド）。</target>
        </trans-unit>
        <trans-unit id="ad2356ff474e553c5985844e65af0e12776a0075" translate="yes" xml:space="preserve">
          <source>Once this code is invoked, the Node.js application will not terminate until the &lt;code&gt;readline.Interface&lt;/code&gt; is closed because the interface waits for data to be received on the &lt;code&gt;input&lt;/code&gt; stream.</source>
          <target state="translated">このコードが呼び出されると、インターフェースが &lt;code&gt;input&lt;/code&gt; ストリームでデータが受信されるのを待機するため、 &lt;code&gt;readline.Interface&lt;/code&gt; が閉じられるまで、Node.jsアプリケーションは終了しません。</target>
        </trans-unit>
        <trans-unit id="8fc3a43e7dfa64098d2c09722663a4214268b6eb" translate="yes" xml:space="preserve">
          <source>Once this has been set, all modules must conform to a policy manifest file passed to the flag:</source>
          <target state="translated">これが設定されると、すべてのモジュールはフラグに渡されたポリシーマニフェストファイルに準拠しなければなりません。</target>
        </trans-unit>
        <trans-unit id="3519b2f373a34f74cf339382a013f3959d2d1fd2" translate="yes" xml:space="preserve">
          <source>One can provide the context by &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;&quot;contextifying&quot;&lt;/a&gt; a sandbox object. The sandboxed code treats any property in the sandbox like a global variable. Any changes to global variables caused by the sandboxed code are reflected in the sandbox object.</source>
          <target state="translated">サンドボックスオブジェクトを&lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;「&lt;/a&gt;コンテキスト化」することでコンテキストを提供できます。サンドボックス化されたコードは、サンドボックス内のすべてのプロパティをグローバル変数のように扱います。サンドボックス化されたコードによるグローバル変数への変更は、サンドボックスオブジェクトに反映されます。</target>
        </trans-unit>
        <trans-unit id="187c68bb8a264278e9942712292d71404fc271e4" translate="yes" xml:space="preserve">
          <source>One can provide the context by &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;&lt;em&gt;contextifying&lt;/em&gt;&lt;/a&gt; an object. The invoked code treats any property in the context like a global variable. Any changes to global variables caused by the invoked code are reflected in the context object.</source>
          <target state="translated">一つはでコンテキストを提供することができ&lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;&lt;em&gt;contextifying&lt;/em&gt;&lt;/a&gt;オブジェクトを。呼び出されたコードは、コンテキスト内のすべてのプロパティをグローバル変数のように扱います。呼び出されたコードによって引き起こされたグローバル変数への変更は、コンテキストオブジェクトに反映されます。</target>
        </trans-unit>
        <trans-unit id="351de5baff893d4ca3128780d0df95fddb77cebd" translate="yes" xml:space="preserve">
          <source>One convenient use of &lt;code&gt;buf.swap16()&lt;/code&gt; is to perform a fast in-place conversion between UTF-16 little-endian and UTF-16 big-endian:</source>
          <target state="translated">&lt;code&gt;buf.swap16()&lt;/code&gt; の便利な使用法の1つは、UTF-16リトルエンディアンとUTF-16ビッグエンディアンの間で高速インプレース変換を実行することです。</target>
        </trans-unit>
        <trans-unit id="e3a507f120a673bd98a67457d61883d39ae2de1c" translate="yes" xml:space="preserve">
          <source>One important caveat is that if the &lt;code&gt;Readable&lt;/code&gt; stream emits an error during processing, the &lt;code&gt;Writable&lt;/code&gt; destination &lt;em&gt;is not closed&lt;/em&gt; automatically. If an error occurs, it will be necessary to &lt;em&gt;manually&lt;/em&gt; close each stream in order to prevent memory leaks.</source>
          <target state="translated">重要な注意点の1つは、 &lt;code&gt;Readable&lt;/code&gt; ストリームが処理中にエラーを発行した場合、 &lt;code&gt;Writable&lt;/code&gt; 宛先&lt;em&gt;が&lt;/em&gt;自動的に&lt;em&gt;閉じられないこと&lt;/em&gt;です。エラーが発生した場合は、メモリリークを防ぐために、各ストリームを&lt;em&gt;手動で&lt;/em&gt;閉じる必要があります。</target>
        </trans-unit>
        <trans-unit id="fe5f45681577d4b399916698594c49e0ceea86c0" translate="yes" xml:space="preserve">
          <source>One of the most common errors raised when listening is &lt;code&gt;EADDRINUSE&lt;/code&gt;. This happens when another server is already listening on the requested &lt;code&gt;port&lt;/code&gt;/&lt;code&gt;path&lt;/code&gt;/&lt;code&gt;handle&lt;/code&gt;. One way to handle this would be to retry after a certain amount of time:</source>
          <target state="translated">リスニング時に発生する最も一般的なエラーの1つは &lt;code&gt;EADDRINUSE&lt;/code&gt; です。これは、要求された &lt;code&gt;port&lt;/code&gt; / &lt;code&gt;path&lt;/code&gt; / &lt;code&gt;handle&lt;/code&gt; 別のサーバーがすでにリッスンしているときに発生します。これを処理する1つの方法は、一定時間後に再試行することです。</target>
        </trans-unit>
        <trans-unit id="aa135875bf0bd9017b9a196225817756a41d1812" translate="yes" xml:space="preserve">
          <source>One or more &lt;a href=&quot;crypto#crypto_crypto_scrypt_password_salt_keylen_options_callback&quot;&gt;&lt;code&gt;crypto.scrypt()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;crypto#crypto_crypto_scryptsync_password_salt_keylen_options&quot;&gt;&lt;code&gt;crypto.scryptSync()&lt;/code&gt;&lt;/a&gt; parameters are outside their legal range.</source>
          <target state="translated">1つ以上の&lt;a href=&quot;crypto#crypto_crypto_scrypt_password_salt_keylen_options_callback&quot;&gt; &lt;code&gt;crypto.scrypt()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;crypto#crypto_crypto_scryptsync_password_salt_keylen_options&quot;&gt; &lt;code&gt;crypto.scryptSync()&lt;/code&gt; &lt;/a&gt;パラメーターがそれらの有効範囲外です。</target>
        </trans-unit>
        <trans-unit id="6a2562b4150db0fb4119fd85c182ca57d6db6994" translate="yes" xml:space="preserve">
          <source>One possible use case would be as follows:</source>
          <target state="translated">考えられるユースケースとしては、以下のようなものが考えられます。</target>
        </trans-unit>
        <trans-unit id="bb47b123548d590aa8c68a0428d092779ba76f44" translate="yes" xml:space="preserve">
          <source>Only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;enumerable &quot;own&quot; properties&lt;/a&gt; are considered.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Enumerability_and_ownership_of_properties&quot;&gt;列挙可能な「独自の」プロパティ&lt;/a&gt;のみが考慮されます。</target>
        </trans-unit>
        <trans-unit id="63f3372d23540753a3045f20a2de73ac6d501f2c" translate="yes" xml:space="preserve">
          <source>Only &lt;code&gt;file://&lt;/code&gt; URLs are supported. A specifier like &lt;code&gt;'https://example.com/app.js'&lt;/code&gt; may be supported by browsers but it is not supported in Node.js.</source>
          <target state="translated">&lt;code&gt;file://&lt;/code&gt; URL のみがサポートされています。 &lt;code&gt;'https://example.com/app.js'&lt;/code&gt; などの指定子はブラウザでサポートされている可能性がありますが、Node.jsではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="edb7a1ea5f66df14050f6a0d49ae943ee3604742" translate="yes" xml:space="preserve">
          <source>Only available on macOS.</source>
          <target state="translated">macOSでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="7c246cd36bac7738a349801c82a2c89fa583ff6e" translate="yes" xml:space="preserve">
          <source>Only paths that can be converted to UTF8 strings are supported.</source>
          <target state="translated">UTF8文字列に変換できるパスのみ対応しています。</target>
        </trans-unit>
        <trans-unit id="c92c05e05a8e3fc5db502dc24b267e7e1531b49e" translate="yes" xml:space="preserve">
          <source>Only present when &lt;code&gt;bigint: true&lt;/code&gt; is passed into the method that generates the object. The timestamp indicating the creation time of this file expressed in nanoseconds since the POSIX Epoch.</source>
          <target state="translated">&lt;code&gt;bigint: true&lt;/code&gt; がオブジェクトを生成するメソッドに渡された場合にのみ存在します。POSIXエポック以降のナノ秒で表されたこのファイルの作成時間を示すタイムスタンプ。</target>
        </trans-unit>
        <trans-unit id="29a7376fbab5583bd507e910da3f14f9f7f21537" translate="yes" xml:space="preserve">
          <source>Only present when &lt;code&gt;bigint: true&lt;/code&gt; is passed into the method that generates the object. The timestamp indicating the last time the file status was changed expressed in nanoseconds since the POSIX Epoch.</source>
          <target state="translated">&lt;code&gt;bigint: true&lt;/code&gt; がオブジェクトを生成するメソッドに渡された場合にのみ存在します。ファイルステータスが最後に変更された時刻を示すタイムスタンプは、POSIXエポック以降のナノ秒単位で表されます。</target>
        </trans-unit>
        <trans-unit id="9afa75ceeef673960abb4793c84e0579e41fbbc0" translate="yes" xml:space="preserve">
          <source>Only present when &lt;code&gt;bigint: true&lt;/code&gt; is passed into the method that generates the object. The timestamp indicating the last time this file was accessed expressed in nanoseconds since the POSIX Epoch.</source>
          <target state="translated">&lt;code&gt;bigint: true&lt;/code&gt; がオブジェクトを生成するメソッドに渡された場合にのみ存在します。このファイルが最後にアクセスされた時間を示すタイムスタンプは、POSIXエポック以降のナノ秒で表されます。</target>
        </trans-unit>
        <trans-unit id="37769cfc20877109a333d1d761074b615aa57389" translate="yes" xml:space="preserve">
          <source>Only present when &lt;code&gt;bigint: true&lt;/code&gt; is passed into the method that generates the object. The timestamp indicating the last time this file was modified expressed in nanoseconds since the POSIX Epoch.</source>
          <target state="translated">&lt;code&gt;bigint: true&lt;/code&gt; がオブジェクトを生成するメソッドに渡された場合にのみ存在します。このファイルが最後に変更された時刻を示すタイムスタンプは、POSIXエポック以降のナノ秒で表されます。</target>
        </trans-unit>
        <trans-unit id="ce8407018b2098f6ff3ff68520f9ad9648a860e0" translate="yes" xml:space="preserve">
          <source>Only trace event categories &lt;em&gt;not&lt;/em&gt; covered by other enabled &lt;code&gt;Tracing&lt;/code&gt; objects and &lt;em&gt;not&lt;/em&gt; specified by the &lt;code&gt;--trace-event-categories&lt;/code&gt; flag will be disabled.</source>
          <target state="translated">唯一のトレースイベントのカテゴリ&lt;em&gt;ではない&lt;/em&gt;他の有効でカバー &lt;code&gt;Tracing&lt;/code&gt; オブジェクトをして&lt;em&gt;いない&lt;/em&gt;ことにより、指定された &lt;code&gt;--trace-event-categories&lt;/code&gt; フラグが無効になります。</target>
        </trans-unit>
        <trans-unit id="818c8ba602efd4344b71ff0610ac1f11fe2091e8" translate="yes" xml:space="preserve">
          <source>Only using &lt;code&gt;execution&lt;/code&gt; to graph resource allocation results in the following:</source>
          <target state="translated">&lt;code&gt;execution&lt;/code&gt; のみを使用してリソース割り当てをグラフ化すると、次の結果になります。</target>
        </trans-unit>
        <trans-unit id="0866a6679f2304150872475ce947118962cb398a" translate="yes" xml:space="preserve">
          <source>Only valid HTTP/2 pseudoheaders (&lt;code&gt;:status&lt;/code&gt;, &lt;code&gt;:path&lt;/code&gt;, &lt;code&gt;:authority&lt;/code&gt;, &lt;code&gt;:scheme&lt;/code&gt;, and &lt;code&gt;:method&lt;/code&gt;) may be used.</source>
          <target state="translated">有効なHTTP / 2疑似ヘッダー（ &lt;code&gt;:status&lt;/code&gt; 、 &lt;code&gt;:path&lt;/code&gt; 、 &lt;code&gt;:authority&lt;/code&gt; 、 &lt;code&gt;:scheme&lt;/code&gt; 、および &lt;code&gt;:method&lt;/code&gt; ）のみを使用できます。</target>
        </trans-unit>
        <trans-unit id="2fbb5394b0bbacb4a606f59c117f48e95ac40839" translate="yes" xml:space="preserve">
          <source>Opaque datatype that is passed to a callback function. It can be used for getting additional information about the context in which the callback was invoked.</source>
          <target state="translated">コールバック関数に渡される不透明なデータ型。これは、コールバックが呼び出されたコンテキストに関する追加情報を取得するために使用できます。</target>
        </trans-unit>
        <trans-unit id="cb30108139981163d74614839e16a5955e865262" translate="yes" xml:space="preserve">
          <source>OpenSSL Engine Constants</source>
          <target state="translated">OpenSSL エンジン定数</target>
        </trans-unit>
        <trans-unit id="bd2ab4c32295a0bfd4af5d2e107b139bdf7ea2ec" translate="yes" xml:space="preserve">
          <source>OpenSSL Errors</source>
          <target state="translated">OpenSSL エラー</target>
        </trans-unit>
        <trans-unit id="0a23fe56e977cbe8b8b37050f90075b125e835ce" translate="yes" xml:space="preserve">
          <source>OpenSSL Options</source>
          <target state="translated">OpenSSL オプション</target>
        </trans-unit>
        <trans-unit id="8639ec8eb250b9459a4daef900bb6db2e08c3fda" translate="yes" xml:space="preserve">
          <source>OpenSSL engine constants</source>
          <target state="translated">OpenSSL エンジン定数</target>
        </trans-unit>
        <trans-unit id="8a6027a433eaa432acaa17693b4a1c30ab97c94f" translate="yes" xml:space="preserve">
          <source>OpenSSL errors</source>
          <target state="translated">OpenSSL エラー</target>
        </trans-unit>
        <trans-unit id="e71dbc791da44d2e31d2e955ee345838f69ae994" translate="yes" xml:space="preserve">
          <source>OpenSSL options</source>
          <target state="translated">OpenSSL オプション</target>
        </trans-unit>
        <trans-unit id="a237923919a0fc450b15f5528b59e5cb5a8fbb77" translate="yes" xml:space="preserve">
          <source>Opens the REPL even if stdin does not appear to be a terminal.</source>
          <target state="translated">stdinがターミナルではないように見える場合でもREPLを開く。</target>
        </trans-unit>
        <trans-unit id="a7b66539f223c2feb1537a76d67d4fea7a2e1c62" translate="yes" xml:space="preserve">
          <source>Operate on written data, then read the result</source>
          <target state="translated">書き込まれたデータを操作し、結果を読み出す</target>
        </trans-unit>
        <trans-unit id="87f8bbdfe0b61a783e46f76e062c44f9356165fb" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;code&gt;unref()&lt;/code&gt;, calling &lt;code&gt;ref()&lt;/code&gt; on a previously &lt;code&gt;unref()&lt;/code&gt;ed worker will &lt;em&gt;not&lt;/em&gt; let the program exit if it's the only active handle left (the default behavior). If the worker is &lt;code&gt;ref()&lt;/code&gt;ed, calling &lt;code&gt;ref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">&lt;code&gt;unref()&lt;/code&gt; の反対で、以前に &lt;code&gt;unref()&lt;/code&gt; edワーカーで &lt;code&gt;ref()&lt;/code&gt; を呼び出しても、それが唯一のアクティブなハンドルである場合（デフォルトの動作）、プログラムは終了し&lt;em&gt;ません&lt;/em&gt;。ワーカーが &lt;code&gt;ref()&lt;/code&gt; edの場合、 &lt;code&gt;ref()&lt;/code&gt; を再度呼び出しても効果はありません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="127baba5a6519d8806b45f384daa393ccb33987f" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;code&gt;unref()&lt;/code&gt;, calling &lt;code&gt;ref()&lt;/code&gt; on a previously &lt;code&gt;unref&lt;/code&gt;ed server will &lt;em&gt;not&lt;/em&gt; let the program exit if it's the only server left (the default behavior). If the server is &lt;code&gt;ref&lt;/code&gt;ed calling &lt;code&gt;ref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">&lt;code&gt;unref()&lt;/code&gt; の反対で、以前に &lt;code&gt;unref&lt;/code&gt; &lt;code&gt;ref()&lt;/code&gt; サーバーでref（）を呼び出しても、それが唯一のサーバーである場合（デフォルトの動作）、プログラムは終了し&lt;em&gt;ません&lt;/em&gt;。サーバーが &lt;code&gt;ref&lt;/code&gt; 場合、再度 &lt;code&gt;ref()&lt;/code&gt; を呼び出しても効果はありません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b1e004053c4c47fd31d633fd984504a42cd13164" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;code&gt;unref()&lt;/code&gt;, calling &lt;code&gt;ref()&lt;/code&gt; on a previously &lt;code&gt;unref&lt;/code&gt;ed socket will &lt;em&gt;not&lt;/em&gt; let the program exit if it's the only socket left (the default behavior). If the socket is &lt;code&gt;ref&lt;/code&gt;ed calling &lt;code&gt;ref&lt;/code&gt; again will have no effect.</source>
          <target state="translated">&lt;code&gt;unref()&lt;/code&gt; の反対で、以前に &lt;code&gt;unref&lt;/code&gt; され&lt;em&gt;なかった&lt;/em&gt;ソケットで &lt;code&gt;ref()&lt;/code&gt; を呼び出しても、それが唯一のソケットである場合（デフォルトの動作）、プログラムは終了し&lt;em&gt;ません&lt;/em&gt;。ソケットがある場合は &lt;code&gt;ref&lt;/code&gt; 呼び出す編 &lt;code&gt;ref&lt;/code&gt; 再びは効果がありません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="187484a87b2bdaeb306f2e48ad4e7b75c2b51f2c" translate="yes" xml:space="preserve">
          <source>Opposite of &lt;code&gt;unref()&lt;/code&gt;. Calling &lt;code&gt;ref()&lt;/code&gt; on a previously &lt;code&gt;unref()&lt;/code&gt;ed port will &lt;em&gt;not&lt;/em&gt; let the program exit if it's the only active handle left (the default behavior). If the port is &lt;code&gt;ref()&lt;/code&gt;ed, calling &lt;code&gt;ref()&lt;/code&gt; again will have no effect.</source>
          <target state="translated">&lt;code&gt;unref()&lt;/code&gt; の反対。以前に &lt;code&gt;unref()&lt;/code&gt; されたポートで &lt;code&gt;ref()&lt;/code&gt; を呼び出しても、それが唯一のアクティブなハンドルである場合（デフォルトの動作）、プログラムは終了し&lt;em&gt;ません&lt;/em&gt;。ポートが &lt;code&gt;ref()&lt;/code&gt; で編集されている場合、再度 &lt;code&gt;ref()&lt;/code&gt; を呼び出しても効果はありません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="16ca2c93ac54542b570f86014504b2bc62e323b2" translate="yes" xml:space="preserve">
          <source>Optionally, &lt;code&gt;interface&lt;/code&gt; specifies a &lt;code&gt;readline.Interface&lt;/code&gt; instance for which autocompletion is disabled when copy-pasted input is detected.</source>
          <target state="translated">必要に応じて、 &lt;code&gt;interface&lt;/code&gt; は &lt;code&gt;readline.Interface&lt;/code&gt; インスタンスを指定します。このインスタンスでは、コピー貼り付けされた入力が検出されたときにオートコンプリートが無効になります。</target>
        </trans-unit>
        <trans-unit id="75bdbbf93799777386e709ca5d720716b97938f9" translate="yes" xml:space="preserve">
          <source>Optionally, arguments can be passed to the function. They will be passed to the callback function.</source>
          <target state="translated">オプションで、引数を関数に渡すことができます。それらはコールバック関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="27df34d71d94fdab4738a760c4077a1c04332aa3" translate="yes" xml:space="preserve">
          <source>Options for building Node.js</source>
          <target state="translated">Node.jsを構築するためのオプション</target>
        </trans-unit>
        <trans-unit id="b93bb573dee58e55bb32463b9cef2deb790f7477" translate="yes" xml:space="preserve">
          <source>Options object can be passed in to make Buffer, offset, length and position optional.</source>
          <target state="translated">Optionsオブジェクトを渡すことで、Buffer,offset,length,positionをオプションにすることができます。</target>
        </trans-unit>
        <trans-unit id="f4e9726239c006b0e965730fee055ac4cbf6886c" translate="yes" xml:space="preserve">
          <source>Options object can be passed in to make offset, length and position optional.</source>
          <target state="translated">オプションオブジェクトを渡すことで、オフセット、長さ、位置をオプションにすることができます。</target>
        </trans-unit>
        <trans-unit id="e72184f55cc026514b7160d78c3c5aef63c2a050" translate="yes" xml:space="preserve">
          <source>Or</source>
          <target state="translated">Or</target>
        </trans-unit>
        <trans-unit id="c7e0842c5f7b422b4114fdf246b98ff6f90ee641" translate="yes" xml:space="preserve">
          <source>Or, equivalently using &lt;code&gt;async function&lt;/code&gt;s:</source>
          <target state="translated">または、同等に &lt;code&gt;async function&lt;/code&gt; s を使用します。</target>
        </trans-unit>
        <trans-unit id="e816604026d7740b43374cfc44852e8f51d1183b" translate="yes" xml:space="preserve">
          <source>Or, use the promise-based API:</source>
          <target state="translated">または、プロミスベースのAPIを使用します。</target>
        </trans-unit>
        <trans-unit id="c0289332a46a6ab2e924e9c07a7ed2d872fb2621" translate="yes" xml:space="preserve">
          <source>Or, using the Simplified Constructor approach:</source>
          <target state="translated">または、簡略化されたコンストラクタのアプローチを使用します。</target>
        </trans-unit>
        <trans-unit id="b56eff52bda552b1862e7020e3d5ee7f56194e65" translate="yes" xml:space="preserve">
          <source>Or, using the simplified constructor approach:</source>
          <target state="translated">または、簡略化されたコンストラクタのアプローチを使用します。</target>
        </trans-unit>
        <trans-unit id="5e7a93f63ae163c5764065111e0ff2aa8c6b54d2" translate="yes" xml:space="preserve">
          <source>Or, when using pre-ES6 style constructors:</source>
          <target state="translated">または、ES6以前のスタイルのコンストラクタを使用する場合。</target>
        </trans-unit>
        <trans-unit id="7db574b20758bcfdd491a74a600d14dfc9e7afab" translate="yes" xml:space="preserve">
          <source>Ordering of callback and promise-based operations</source>
          <target state="translated">コールバックとプロミスベースの操作の順序付け</target>
        </trans-unit>
        <trans-unit id="671a21fedde0585f7faaf69719a570097901bbc7" translate="yes" xml:space="preserve">
          <source>Organization of this Document</source>
          <target state="translated">この文書の構成</target>
        </trans-unit>
        <trans-unit id="669a6b82a27dc15aa96ec2ab10476304cf3cee5a" translate="yes" xml:space="preserve">
          <source>Organization of this document</source>
          <target state="translated">本文書の構成</target>
        </trans-unit>
        <trans-unit id="313f2a96e22fad5296235e128769de9aee89d6ce" translate="yes" xml:space="preserve">
          <source>Other OpenSSL Constants</source>
          <target state="translated">その他の OpenSSL 定数</target>
        </trans-unit>
        <trans-unit id="cd7220cc905e8dcd9a741b9d3e5f8dcd1f550b45" translate="yes" xml:space="preserve">
          <source>Other OpenSSL constants</source>
          <target state="translated">その他の OpenSSL 定数</target>
        </trans-unit>
        <trans-unit id="663f15f8e36af763b3a8a1715a35b224493b1cd9" translate="yes" xml:space="preserve">
          <source>Other error codes</source>
          <target state="translated">その他のエラーコード</target>
        </trans-unit>
        <trans-unit id="8fb96cf0c37ad348df64552829c5186f76337aa4" translate="yes" xml:space="preserve">
          <source>Other than &lt;code&gt;'errored'&lt;/code&gt;, this status string corresponds to the specification's &lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic Module Record&lt;/a&gt;'s &lt;code&gt;[[Status]]&lt;/code&gt; field. &lt;code&gt;'errored'&lt;/code&gt; corresponds to &lt;code&gt;'evaluated'&lt;/code&gt; in the specification, but with &lt;code&gt;[[EvaluationError]]&lt;/code&gt; set to a value that is not &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'errored'&lt;/code&gt; 以外のこのステータス文字列は、仕様の&lt;a href=&quot;https://tc39.es/ecma262/#sec-cyclic-module-records&quot;&gt;Cyclic ModuleRecord&lt;/a&gt;の &lt;code&gt;[[Status]]&lt;/code&gt; フィールドに対応します。 &lt;code&gt;'errored'&lt;/code&gt; は仕様の &lt;code&gt;'evaluated'&lt;/code&gt; に対応しますが、 &lt;code&gt;[[EvaluationError]]&lt;/code&gt; は &lt;code&gt;undefined&lt;/code&gt; ではない値に設定されています。</target>
        </trans-unit>
        <trans-unit id="d16bc73dffef4caa71f76fa9eec1d728a29e8862" translate="yes" xml:space="preserve">
          <source>Other than &lt;code&gt;'errored'&lt;/code&gt;, this status string corresponds to the specification's &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;'s &lt;code&gt;[[Status]]&lt;/code&gt; field. &lt;code&gt;'errored'&lt;/code&gt; corresponds to &lt;code&gt;'evaluated'&lt;/code&gt; in the specification, but with &lt;code&gt;[[EvaluationError]]&lt;/code&gt; set to a value that is not &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;'errored'&lt;/code&gt; 以外は、このステータス文字列は仕様の&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-source-text-module-records&quot;&gt;Source Text Module Record&lt;/a&gt;の &lt;code&gt;[[Status]]&lt;/code&gt; フィールドに対応しています。 &lt;code&gt;'errored'&lt;/code&gt; は仕様の &lt;code&gt;'evaluated'&lt;/code&gt; に対応しますが、 &lt;code&gt;[[EvaluationError]]&lt;/code&gt; が &lt;code&gt;undefined&lt;/code&gt; ではない値に設定されています。</target>
        </trans-unit>
        <trans-unit id="c03d329eb9dfc1e4e5f3f81c39eeba7e7989837f" translate="yes" xml:space="preserve">
          <source>Others may read and execute the file.</source>
          <target state="translated">他の人が読み込んで実行することもあります。</target>
        </trans-unit>
        <trans-unit id="0abd3dc8f76b7c09573e4c76373b00a4045aeb77" translate="yes" xml:space="preserve">
          <source>Otherwise if &lt;em&gt;exports&lt;/em&gt; is an Object containing a &lt;em&gt;&quot;.&quot;&lt;/em&gt; property, then</source>
          <target state="translated">それ以外の場合、&lt;em&gt;exports&lt;/em&gt;が&lt;em&gt;「。」&lt;/em&gt;を含むオブジェクトである場合&lt;em&gt;。&lt;/em&gt;プロパティ、その後</target>
        </trans-unit>
        <trans-unit id="c02ff0f840a7e18efb9cbc8a237670bf5418237d" translate="yes" xml:space="preserve">
          <source>Otherwise throw an &lt;em&gt;Invalid Package Target&lt;/em&gt; error.</source>
          <target state="translated">それ以外の場合は、&lt;em&gt;無効なパッケージターゲット&lt;/em&gt;エラーをスローします。</target>
        </trans-unit>
        <trans-unit id="2d9bc18b21194155ea10d0ea79b6439d4c3e5a90" translate="yes" xml:space="preserve">
          <source>Otherwise,</source>
          <target state="translated">Otherwise,</target>
        </trans-unit>
        <trans-unit id="c7913bda121913a068639f18e4186893941adf35" translate="yes" xml:space="preserve">
          <source>Otherwise, behavior generally matches that of &lt;a href=&quot;#n_api_napi_add_env_cleanup_hook&quot;&gt;&lt;code&gt;napi_add_env_cleanup_hook&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それ以外の場合、動作は通常&lt;a href=&quot;#n_api_napi_add_env_cleanup_hook&quot;&gt; &lt;code&gt;napi_add_env_cleanup_hook&lt;/code&gt; の&lt;/a&gt;動作と一致します。</target>
        </trans-unit>
        <trans-unit id="c4b82831779189c383dabc4e146234017af09e29" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;urlObject.hostname&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt; and is not a string, an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;urlObject.hostname&lt;/code&gt; が &lt;code&gt;undefined&lt;/code&gt; でなく、文字列でもない場合、&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="d05789be53a1b6d3a37a3cfa388a27a062e85bcc" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;urlObject.pathname&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt; and is not a string, an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;urlObject.pathname&lt;/code&gt; が &lt;code&gt;undefined&lt;/code&gt; でなく、文字列でもない場合、&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="3028596961bd8400259bc561fca50c1918691c1e" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;urlObject.protocol&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt; and is not a string, an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;urlObject.protocol&lt;/code&gt; が &lt;code&gt;undefined&lt;/code&gt; ではなく、文字列でもない場合、&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="019a7dea222ae0d5248e2924ffd6756a37e26b0e" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;urlObject.search&lt;/code&gt; is a string:</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;urlObject.search&lt;/code&gt; が文字列の場合：</target>
        </trans-unit>
        <trans-unit id="b57a26c4233692980c3734e6c6632c76d2438b1d" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;urlObject.search&lt;/code&gt; is not &lt;code&gt;undefined&lt;/code&gt; and is not a string, an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;urlObject.search&lt;/code&gt; が &lt;code&gt;undefined&lt;/code&gt; ではなく、文字列でもない場合、&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="0f29a7ff99198e35a0bd2c7b3da5f3f7735bd7d9" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;exports&lt;/em&gt; is an Object and all keys of &lt;em&gt;exports&lt;/em&gt; start with &lt;em&gt;&quot;.&quot;&lt;/em&gt;, then</source>
          <target state="translated">それ以外の場合、&lt;em&gt;exports&lt;/em&gt;がオブジェクトであり、&lt;em&gt;exportsの&lt;/em&gt;すべてのキーが&lt;em&gt;「。」で&lt;/em&gt;始まる場合&lt;em&gt;。&lt;/em&gt;、その後</target>
        </trans-unit>
        <trans-unit id="e45fc522c9cb0daaaf495b921b4d37a35277ead2" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;packageSubpath&lt;/em&gt; is equal to &lt;em&gt;&quot;.&quot;&lt;/em&gt;, then</source>
          <target state="translated">それ以外の場合、&lt;em&gt;packageSubpath&lt;/em&gt;が&lt;em&gt;「。」&lt;/em&gt;と等しい場合&lt;em&gt;。&lt;/em&gt;、その後</target>
        </trans-unit>
        <trans-unit id="e00ace135f4846630f53756b4ef62f1402b8703b" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;specifier&lt;/em&gt; starts with &lt;em&gt;&quot;#&quot;&lt;/em&gt;, then</source>
          <target state="translated">それ以外の場合、&lt;em&gt;指定子&lt;/em&gt;が&lt;em&gt;「＃」&lt;/em&gt;で始まる場合は、</target>
        </trans-unit>
        <trans-unit id="eb5fe908afb5d0cb70939f4f10d7c4d1f21c5481" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;specifier&lt;/em&gt; starts with &lt;em&gt;&quot;./&quot;&lt;/em&gt; or &lt;em&gt;&quot;../&quot;&lt;/em&gt;, then</source>
          <target state="translated">それ以外で、&lt;em&gt;指定子&lt;/em&gt;が&lt;em&gt;&quot;./&quot;&lt;/em&gt;または&lt;em&gt;&quot;../&quot;&lt;/em&gt;で始まる場合、</target>
        </trans-unit>
        <trans-unit id="5a46782b0bd0e2ca1e8fb7024065121b8b05b41c" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;specifier&lt;/em&gt; starts with &lt;em&gt;&quot;/&quot;&lt;/em&gt;, &lt;em&gt;&quot;./&quot;&lt;/em&gt; or &lt;em&gt;&quot;../&quot;&lt;/em&gt;, then</source>
          <target state="translated">そうでない場合、&lt;em&gt;指定&lt;/em&gt;して起動し&lt;em&gt;、「/」&lt;/em&gt;、&lt;em&gt;「./」&lt;/em&gt;または&lt;em&gt;「../」&lt;/em&gt;そして、</target>
        </trans-unit>
        <trans-unit id="26d1d5da0079c52704cb235445b5c20e065cda34" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;specifier&lt;/em&gt; starts with &lt;em&gt;&quot;/&quot;&lt;/em&gt;, then</source>
          <target state="translated">それ以外で、&lt;em&gt;指定子&lt;/em&gt;が&lt;em&gt;&quot;/&quot;&lt;/em&gt;で始まる場合、</target>
        </trans-unit>
        <trans-unit id="4beaee6cc707869036a18773039fe24845a3e2d0" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;target&lt;/em&gt; is &lt;em&gt;null&lt;/em&gt;, return &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="translated">それ以外の場合、&lt;em&gt;ターゲット&lt;/em&gt;が&lt;em&gt;nullの&lt;/em&gt;場合は、&lt;em&gt;null&lt;/em&gt;を返し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="5143ccffae663f5a9995cf027741bf81cb0fd369" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;target&lt;/em&gt; is a non-null Object, then</source>
          <target state="translated">それ以外の場合、&lt;em&gt;ターゲット&lt;/em&gt;がnull以外のオブジェクトの場合、</target>
        </trans-unit>
        <trans-unit id="85ba9fed38521506b4d5c579c572dad483f0c6b5" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;target&lt;/em&gt; is an Array, then</source>
          <target state="translated">それ以外の場合、&lt;em&gt;ターゲット&lt;/em&gt;が配列の場合、</target>
        </trans-unit>
        <trans-unit id="baff8c909c01e8b443adf4d5d60fa66faff1cb0d" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;urlObject.hash&lt;/code&gt; property is not &lt;code&gt;undefined&lt;/code&gt; and is not a string, an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;urlObject.hash&lt;/code&gt; プロパティが &lt;code&gt;undefined&lt;/code&gt; ではなく、文字列でもない場合、&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;がスローされます。</target>
        </trans-unit>
        <trans-unit id="ddbb3f7abfc149ace62e4793649bb29bd4e1b4ac" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;urlObject.host&lt;/code&gt; property value is truthy, the value of &lt;code&gt;urlObject.host&lt;/code&gt; is coerced to a string and appended to &lt;code&gt;result&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;urlObject.host&lt;/code&gt; プロパティの値がtrue であれば、urlObject.hostの値は文字列に強制 &lt;code&gt;urlObject.host&lt;/code&gt; され、 &lt;code&gt;result&lt;/code&gt; に追加されます。</target>
        </trans-unit>
        <trans-unit id="0b7a1147e9bc6658eed14e938907299c19a2b915" translate="yes" xml:space="preserve">
          <source>Otherwise, return &lt;strong&gt;undefined&lt;/strong&gt;.</source>
          <target state="translated">それ以外の場合は、&lt;strong&gt;undefinedを&lt;/strong&gt;返します。</target>
        </trans-unit>
        <trans-unit id="30114944794d0b3247bc8943e187ffb5318dcd09" translate="yes" xml:space="preserve">
          <source>Otherwise, the value of &lt;code&gt;options.stdio&lt;/code&gt; is an array where each index corresponds to an fd in the child. The fds 0, 1, and 2 correspond to stdin, stdout, and stderr, respectively. Additional fds can be specified to create additional pipes between the parent and child. The value is one of the following:</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;options.stdio&lt;/code&gt; の値は、各インデックスが子のfdに対応する配列です。fds 0、1、および2は、それぞれstdin、stdout、およびstderrに対応します。追加のfdsを指定して、親と子の間に追加のパイプを作成できます。値は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="4cc4ada7d607fff2d2fb5b0661fd2dfbc2b8eaaa" translate="yes" xml:space="preserve">
          <source>Otherwise, throw an &lt;em&gt;Invalid Package Target&lt;/em&gt; error.</source>
          <target state="translated">それ以外の場合は、&lt;em&gt;無効なパッケージターゲット&lt;/em&gt;エラーをスローします。</target>
        </trans-unit>
        <trans-unit id="0f44779997c1068f729a825e4cd8329cf3b6df7e" translate="yes" xml:space="preserve">
          <source>Output from only starting the server:</source>
          <target state="translated">サーバー起動時のみの出力</target>
        </trans-unit>
        <trans-unit id="f29a22741cf8ff14fb33b32cfebfd6e76a83b4e1" translate="yes" xml:space="preserve">
          <source>Output when hitting the server with &lt;code&gt;nc localhost 8080&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;nc localhost 8080&lt;/code&gt; でサーバーにアクセスしたときの出力：</target>
        </trans-unit>
        <trans-unit id="e3e7399cbb487228a7f49b5b23a51e0913aa6ae7" translate="yes" xml:space="preserve">
          <source>Outputs for example:</source>
          <target state="translated">例えば、出力。</target>
        </trans-unit>
        <trans-unit id="994db3e9eea6ba91b51023290a7d28ae4a00a66e" translate="yes" xml:space="preserve">
          <source>Overrides the default value of &lt;code&gt;http&lt;/code&gt;, &lt;code&gt;https&lt;/code&gt; and &lt;code&gt;http2&lt;/code&gt; server socket timeout. Setting the value to 0 disables server socket timeout. Unless provided, http server sockets timeout after 120s (2 minutes). Programmatic setting of the timeout takes precedence over the value set through this flag.</source>
          <target state="translated">&lt;code&gt;http&lt;/code&gt; 、 &lt;code&gt;https&lt;/code&gt; 、および &lt;code&gt;http2&lt;/code&gt; サーバーのソケットタイムアウトのデフォルト値を上書きします。値を0に設定すると、サーバーソケットのタイムアウトが無効になります。指定しない限り、httpサーバーソケットは120秒（2分）後にタイムアウトします。タイムアウトのプログラムによる設定は、このフラグで設定された値よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="38030653f1e036c05fa72230b5093ec3b1b98d12" translate="yes" xml:space="preserve">
          <source>PKCS#1, SEC1, and PKCS#8 type keys can be encrypted by using a combination of the &lt;code&gt;cipher&lt;/code&gt; and &lt;code&gt;format&lt;/code&gt; options. The PKCS#8 &lt;code&gt;type&lt;/code&gt; can be used with any &lt;code&gt;format&lt;/code&gt; to encrypt any key algorithm (RSA, EC, or DH) by specifying a &lt;code&gt;cipher&lt;/code&gt;. PKCS#1 and SEC1 can only be encrypted by specifying a &lt;code&gt;cipher&lt;/code&gt; when the PEM &lt;code&gt;format&lt;/code&gt; is used. For maximum compatibility, use PKCS#8 for encrypted private keys. Since PKCS#8 defines its own encryption mechanism, PEM-level encryption is not supported when encrypting a PKCS#8 key. See &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc5208.txt&quot;&gt;RFC 5208&lt;/a&gt; for PKCS#8 encryption and &lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc1421.txt&quot;&gt;RFC 1421&lt;/a&gt; for PKCS#1 and SEC1 encryption.</source>
          <target state="translated">PKCS＃1、SEC1、およびPKCS＃8タイプの鍵は、 &lt;code&gt;cipher&lt;/code&gt; オプションと &lt;code&gt;format&lt;/code&gt; オプションの組み合わせを使用して暗号化できます。 PKCS＃8 &lt;code&gt;type&lt;/code&gt; を任意の &lt;code&gt;format&lt;/code&gt; で使用して、 &lt;code&gt;cipher&lt;/code&gt; 指定することにより、任意の鍵アルゴリズム（RSA、EC、またはDH）を暗号化できます。 PKCS＃1およびSEC1は、PEM &lt;code&gt;format&lt;/code&gt; が使用されている場合、 &lt;code&gt;cipher&lt;/code&gt; 指定することによってのみ暗号化できます。互換性を最大限に高めるには、暗号化された秘密鍵にPKCS＃8を使用してください。 PKCS＃8は独自の暗号化メカニズムを定義しているため、PKCS＃8鍵を暗号化する場合、PEMレベルの暗号化はサポートされません。PKCS＃8暗号化については&lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc5208.txt&quot;&gt;RFC 5208&lt;/a&gt;を、PKCS＃1およびSEC1暗号化については&lt;a href=&quot;https://www.rfc-editor.org/rfc/rfc1421.txt&quot;&gt;RFC 1421&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="630cf368a4fbe56871f6057988d221149a0a6f0b" translate="yes" xml:space="preserve">
          <source>POSIX Error Constants</source>
          <target state="translated">POSIX エラー定数</target>
        </trans-unit>
        <trans-unit id="813df17f9f8d146acf4bcbfd8da1b8d2c1940798" translate="yes" xml:space="preserve">
          <source>POSIX error constants</source>
          <target state="translated">POSIXエラー定数</target>
        </trans-unit>
        <trans-unit id="c05711853b0d84b39144b04eb992e7ecf657c71d" translate="yes" xml:space="preserve">
          <source>PSK ciphers are disabled by default, and using TLS-PSK thus requires explicitly specifying a cipher suite with the &lt;code&gt;ciphers&lt;/code&gt; option. The list of available ciphers can be retrieved via &lt;code&gt;openssl ciphers -v 'PSK'&lt;/code&gt;. All TLS 1.3 ciphers are eligible for PSK but currently only those that use SHA256 digest are supported they can be retrieved via &lt;code&gt;openssl ciphers -v -s -tls1_3 -psk&lt;/code&gt;.</source>
          <target state="translated">PSK暗号はデフォルトで無効になっているため、TLS-PSKを使用するには、 &lt;code&gt;ciphers&lt;/code&gt; オプションを使用して暗号スイートを明示的に指定する必要があります。使用可能な暗号のリストは、 &lt;code&gt;openssl ciphers -v 'PSK'&lt;/code&gt; を介して取得できます。すべてのTLS1.3暗号はPSKに適格ですが、現在、SHA256ダイジェストを使用する暗号のみがサポートされており、 &lt;code&gt;openssl ciphers -v -s -tls1_3 -psk&lt;/code&gt; 介して取得できます。</target>
        </trans-unit>
        <trans-unit id="126b1873e96aa59d61beefbfa96976d9334b8ba6" translate="yes" xml:space="preserve">
          <source>Package Entry Points</source>
          <target state="translated">パッケージエントリーポイント</target>
        </trans-unit>
        <trans-unit id="088555c8e20f88ac5dfd6afbf6e226933408ca9c" translate="yes" xml:space="preserve">
          <source>Package Exports</source>
          <target state="translated">パッケージ輸出</target>
        </trans-unit>
        <trans-unit id="5298f089fdfda3773971e873567439dc17eb87db" translate="yes" xml:space="preserve">
          <source>Package Scope and File Extensions</source>
          <target state="translated">パッケージスコープとファイル拡張子</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="b105dd67aeea3a80cf91cc4cae23a0830a903533" translate="yes" xml:space="preserve">
          <source>Packages can depend on one another. In order to install package &lt;code&gt;foo&lt;/code&gt;, it may be necessary to install a specific version of package &lt;code&gt;bar&lt;/code&gt;. The &lt;code&gt;bar&lt;/code&gt; package may itself have dependencies, and in some cases, these may even collide or form cyclic dependencies.</source>
          <target state="translated">パッケージは相互に依存する場合があります。パッケージ &lt;code&gt;foo&lt;/code&gt; をインストールするには、特定のバージョンのパッケージ &lt;code&gt;bar&lt;/code&gt; をインストールする必要がある場合があります。 &lt;code&gt;bar&lt;/code&gt; パッケージ自体は依存性を有していてもよく、場合によっては、これらも衝突または環状の依存関係を形成してもよいです。</target>
        </trans-unit>
        <trans-unit id="007f92dc52c83abe19f8d3e595f8684aae45891d" translate="yes" xml:space="preserve">
          <source>Parse the &lt;code&gt;string&lt;/code&gt; as a query string, and use it to instantiate a new &lt;code&gt;URLSearchParams&lt;/code&gt; object. A leading &lt;code&gt;'?'&lt;/code&gt;, if present, is ignored.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; をクエリ文字列として解析し、それを使用して新しい &lt;code&gt;URLSearchParams&lt;/code&gt; オブジェクトをインスタンス化します。先頭の &lt;code&gt;'?'&lt;/code&gt; は、存在しても無視されます。</target>
        </trans-unit>
        <trans-unit id="a62f528d752f6902c2c021974e4a3ac9206da888" translate="yes" xml:space="preserve">
          <source>Parsing the URL string using the Legacy API:</source>
          <target state="translated">レガシー API を使用して URL 文字列をパースします。</target>
        </trans-unit>
        <trans-unit id="1ac4bd27fa80c0cddae1cb5d2244972b92d1573d" translate="yes" xml:space="preserve">
          <source>Parsing the URL string using the WHATWG API:</source>
          <target state="translated">WHATWG API を使用して URL 文字列をパースします。</target>
        </trans-unit>
        <trans-unit id="88f6f0a57c529d1f033ace70532d6cfd1696906a" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;v8::External&lt;/code&gt; to all methods exposed to JavaScript by passing it to &lt;code&gt;v8::FunctionTemplate::New()&lt;/code&gt; or &lt;code&gt;v8::Function::New()&lt;/code&gt; which creates the native-backed JavaScript functions. The third parameter of &lt;code&gt;v8::FunctionTemplate::New()&lt;/code&gt; or &lt;code&gt;v8::Function::New()&lt;/code&gt; accepts the &lt;code&gt;v8::External&lt;/code&gt; and makes it available in the native callback using the &lt;code&gt;v8::FunctionCallbackInfo::Data()&lt;/code&gt; method.</source>
          <target state="translated">パス &lt;code&gt;v8::External&lt;/code&gt; それを渡すことによって、JavaScriptに公開されるすべてのメソッドに &lt;code&gt;v8::FunctionTemplate::New()&lt;/code&gt; または &lt;code&gt;v8::Function::New()&lt;/code&gt; ネイティブ担保JavaScript関数を作成します。 &lt;code&gt;v8::FunctionTemplate::New()&lt;/code&gt; または &lt;code&gt;v8::Function::New()&lt;/code&gt; の3番目のパラメーターは、 &lt;code&gt;v8::External&lt;/code&gt; を受け入れ、 &lt;code&gt;v8::FunctionCallbackInfo::Data()&lt;/code&gt; メソッドを使用してネイティブコールバックで使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="c3b9589a76128e7eedf9dcfcc7a38c1a2039e7e5" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;chunk&lt;/code&gt; as &lt;code&gt;null&lt;/code&gt; signals the end of the stream (EOF) and behaves the same as &lt;code&gt;readable.push(null)&lt;/code&gt;, after which no more data can be written. The EOF signal is put at the end of the buffer and any buffered data will still be flushed.</source>
          <target state="translated">&lt;code&gt;chunk&lt;/code&gt; を &lt;code&gt;null&lt;/code&gt; として渡すと、ストリームの終了（EOF）が通知され、 &lt;code&gt;readable.push(null)&lt;/code&gt; と同じように動作します。その後、データを書き込むことはできなくなります。EOF信号はバッファの最後に配置され、バッファリングされたデータは引き続きフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="caf337fb7b428ef0cda9bc754bad6681a39c1d8e" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;chunk&lt;/code&gt; as &lt;code&gt;null&lt;/code&gt; signals the end of the stream (EOF), after which no more data can be written.</source>
          <target state="translated">&lt;code&gt;chunk&lt;/code&gt; を &lt;code&gt;null&lt;/code&gt; として渡すと、ストリーム（EOF）の終わりを示します。その後、データを書き込むことができなくなります。</target>
        </trans-unit>
        <trans-unit id="e2fb435a7742758b2ed7fd9143c5eb5697582315" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;null&lt;/code&gt; as the &lt;code&gt;callback&lt;/code&gt; argument now throws &lt;code&gt;ERR_INVALID_CALLBACK&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 引数として &lt;code&gt;null&lt;/code&gt; を渡すと、 &lt;code&gt;ERR_INVALID_CALLBACK&lt;/code&gt; がスローされるようになりました。</target>
        </trans-unit>
        <trans-unit id="c4cb274ae0fac3ad0cf4488ca57ded2504a2742d" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;null&lt;/code&gt; as the &lt;code&gt;chunk&lt;/code&gt; parameter will always be considered invalid now, even in object mode.</source>
          <target state="translated">オブジェクトモードでも、 &lt;code&gt;chunk&lt;/code&gt; パラメータとして &lt;code&gt;null&lt;/code&gt; を渡すと、常に無効と見なされます。</target>
        </trans-unit>
        <trans-unit id="b363c1f7472c26765d6997faabde2cf251aeb2cb" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;true&lt;/code&gt; for &lt;code&gt;noDelay&lt;/code&gt; or not passing an argument will disable Nagle's algorithm for the socket. Passing &lt;code&gt;false&lt;/code&gt; for &lt;code&gt;noDelay&lt;/code&gt; will enable Nagle's algorithm.</source>
          <target state="translated">渡す &lt;code&gt;true&lt;/code&gt; のために &lt;code&gt;noDelay&lt;/code&gt; ソケットのNagleアルゴリズムを無効にします引数を渡すかどうか。渡す &lt;code&gt;false&lt;/code&gt; ため &lt;code&gt;noDelay&lt;/code&gt; Nagleアルゴリズムを有効にします。</target>
        </trans-unit>
        <trans-unit id="a630b4518d8c793f8975f346ac5ea16cec9139fc" translate="yes" xml:space="preserve">
          <source>Passing a &lt;code&gt;Buffer&lt;/code&gt; to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; constructor will copy the &lt;code&gt;Buffer&lt;/code&gt;s contents, interpreted as an array of integers, and not as a byte sequence of the target type.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;コンストラクターに &lt;code&gt;Buffer&lt;/code&gt; を渡すと、 &lt;code&gt;Buffer&lt;/code&gt; の内容がコピーされ、ターゲットタイプのバイトシーケンスとしてではなく、整数の配列として解釈されます。</target>
        </trans-unit>
        <trans-unit id="c25415d5de99c758ca9f8012c3ca13381d4c98e7" translate="yes" xml:space="preserve">
          <source>Passing a callback to &lt;a href=&quot;worker_threads#worker_threads_worker_terminate&quot;&gt;&lt;code&gt;worker.terminate()&lt;/code&gt;&lt;/a&gt; is deprecated. Use the returned &lt;code&gt;Promise&lt;/code&gt; instead, or a listener to the worker&amp;rsquo;s &lt;code&gt;'exit'&lt;/code&gt; event.</source>
          <target state="translated">コールバックを&lt;a href=&quot;worker_threads#worker_threads_worker_terminate&quot;&gt; &lt;code&gt;worker.terminate()&lt;/code&gt; に&lt;/a&gt;渡すことは非推奨です。代わりに、返された &lt;code&gt;Promise&lt;/code&gt; 、またはワーカーの &lt;code&gt;'exit'&lt;/code&gt; イベントのリスナーを使用してください。</target>
        </trans-unit>
        <trans-unit id="d8d725c2a889b1d852067945503fc27bf3467751" translate="yes" xml:space="preserve">
          <source>Passing a file descriptor is deprecated and may result in an error being thrown in the future.</source>
          <target state="translated">ファイル記述子を渡すことは非推奨であり、将来エラーが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="e6c58eb24fa5978dcc90c6d0e55212d51047fb5c" translate="yes" xml:space="preserve">
          <source>Passing a negative &lt;code&gt;size&lt;/code&gt; will now throw an error.</source>
          <target state="translated">負の &lt;code&gt;size&lt;/code&gt; を渡すと、エラーがスローされます。</target>
        </trans-unit>
        <trans-unit id="c5cb3de49a792a446a3e5ecf415be046bad29ee5" translate="yes" xml:space="preserve">
          <source>Passing a non-string as the &lt;code&gt;path&lt;/code&gt; argument will throw now.</source>
          <target state="translated">文字列以外を &lt;code&gt;path&lt;/code&gt; 引数として渡すとスローされます。</target>
        </trans-unit>
        <trans-unit id="82a8c916b00253f3b9c6cb272e3b0055559de061" translate="yes" xml:space="preserve">
          <source>Passing a number as the first argument to &lt;code&gt;Buffer()&lt;/code&gt; (e.g. &lt;code&gt;new Buffer(10)&lt;/code&gt;) allocates a new &lt;code&gt;Buffer&lt;/code&gt; object of the specified size. Prior to Node.js 8.0.0, the memory allocated for such &lt;code&gt;Buffer&lt;/code&gt; instances is &lt;em&gt;not&lt;/em&gt; initialized and &lt;em&gt;can contain sensitive data&lt;/em&gt;. Such &lt;code&gt;Buffer&lt;/code&gt; instances &lt;em&gt;must&lt;/em&gt; be subsequently initialized by using either &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt;&lt;code&gt;buf.fill(0)&lt;/code&gt;&lt;/a&gt; or by writing to the entire &lt;code&gt;Buffer&lt;/code&gt; before reading data from the &lt;code&gt;Buffer&lt;/code&gt;. While this behavior is &lt;em&gt;intentional&lt;/em&gt; to improve performance, development experience has demonstrated that a more explicit distinction is required between creating a fast-but-uninitialized &lt;code&gt;Buffer&lt;/code&gt; versus creating a slower-but-safer &lt;code&gt;Buffer&lt;/code&gt;. Since Node.js 8.0.0, &lt;code&gt;Buffer(num)&lt;/code&gt; and &lt;code&gt;new Buffer(num)&lt;/code&gt; return a &lt;code&gt;Buffer&lt;/code&gt; with initialized memory.</source>
          <target state="translated">&lt;code&gt;Buffer()&lt;/code&gt; に最初の引数として数値を渡すと（たとえば、 &lt;code&gt;new Buffer(10)&lt;/code&gt; ）、指定されたサイズの新しい &lt;code&gt;Buffer&lt;/code&gt; オブジェクトが割り当てられます。 Node.js 8.0.0より前では、このような &lt;code&gt;Buffer&lt;/code&gt; インスタンスに割り当てられたメモリ&lt;em&gt;は&lt;/em&gt;初期化され&lt;em&gt;ず&lt;/em&gt;&lt;em&gt;、機密データを含む可能性があります&lt;/em&gt;。このような &lt;code&gt;Buffer&lt;/code&gt; インスタンス&lt;em&gt;は&lt;/em&gt;、その後、&lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt; &lt;code&gt;buf.fill(0)&lt;/code&gt; &lt;/a&gt;を使用するか、 &lt;code&gt;Buffer&lt;/code&gt; からデータを読み取る前に &lt;code&gt;Buffer&lt;/code&gt; 全体に書き込むことによって初期化する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。この動作は&lt;em&gt;意図的&lt;/em&gt;なものですが&lt;em&gt;&lt;/em&gt;パフォーマンスを向上させるために、開発経験は、高速であるが初期化されていない &lt;code&gt;Buffer&lt;/code&gt; 作成することと、低速であるがより安全な &lt;code&gt;Buffer&lt;/code&gt; 作成することとの間で、より明確な区別が必要であることを示しています。Node.js 8.0.0以降、 &lt;code&gt;Buffer(num)&lt;/code&gt; と &lt;code&gt;new Buffer(num)&lt;/code&gt; は、初期化されたメモリを含む &lt;code&gt;Buffer&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="56c07724734004d918ea842ebc675c76944090ba" translate="yes" xml:space="preserve">
          <source>Passing a number as the first argument to &lt;code&gt;Buffer()&lt;/code&gt; (e.g. &lt;code&gt;new Buffer(10)&lt;/code&gt;) allocates a new &lt;code&gt;Buffer&lt;/code&gt; object of the specified size. Prior to Node.js 8.0.0, the memory allocated for such &lt;code&gt;Buffer&lt;/code&gt; instances is &lt;em&gt;not&lt;/em&gt; initialized and &lt;em&gt;can contain sensitive data&lt;/em&gt;. Such &lt;code&gt;Buffer&lt;/code&gt; instances &lt;em&gt;must&lt;/em&gt; be subsequently initialized by using either &lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt;&lt;code&gt;buf.fill(0)&lt;/code&gt;&lt;/a&gt; or by writing to the entire &lt;code&gt;Buffer&lt;/code&gt;. While this behavior is &lt;em&gt;intentional&lt;/em&gt; to improve performance, development experience has demonstrated that a more explicit distinction is required between creating a fast-but-uninitialized &lt;code&gt;Buffer&lt;/code&gt; versus creating a slower-but-safer &lt;code&gt;Buffer&lt;/code&gt;. Since Node.js 8.0.0, &lt;code&gt;Buffer(num)&lt;/code&gt; and &lt;code&gt;new Buffer(num)&lt;/code&gt; return a &lt;code&gt;Buffer&lt;/code&gt; with initialized memory.</source>
          <target state="translated">最初の引数として &lt;code&gt;Buffer()&lt;/code&gt; に数値を渡すと（例： &lt;code&gt;new Buffer(10)&lt;/code&gt; ）、指定されたサイズの新しい &lt;code&gt;Buffer&lt;/code&gt; オブジェクトが割り当てられます。 Node.js 8.0.0より前のバージョンでは、このような &lt;code&gt;Buffer&lt;/code&gt; インスタンスに割り当てられたメモリ&lt;em&gt;は&lt;/em&gt;初期化されて&lt;em&gt;おらず&lt;/em&gt;&lt;em&gt;、機密データを含むことができます&lt;/em&gt;。このような &lt;code&gt;Buffer&lt;/code&gt; インスタンス&lt;em&gt;は&lt;/em&gt;、&lt;a href=&quot;#buffer_buf_fill_value_offset_end_encoding&quot;&gt; &lt;code&gt;buf.fill(0)&lt;/code&gt; &lt;/a&gt;を使用するか、 &lt;code&gt;Buffer&lt;/code&gt; 全体に書き込むことによって、後で初期化する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。この動作ではあるが&lt;em&gt;、意図的な&lt;/em&gt;パフォーマンスを向上させるために、開発の経験は、より明確な区別が高速であるが初期化されていないの作成の間に必要とされていることを実証しています &lt;code&gt;Buffer&lt;/code&gt; と、低速ではあるが安全な &lt;code&gt;Buffer&lt;/code&gt; 作成。Node.js 8.0.0以降、 &lt;code&gt;Buffer(num)&lt;/code&gt; および &lt;code&gt;new Buffer(num)&lt;/code&gt; は、初期化されたメモリを持つ &lt;code&gt;Buffer&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f6181cdf0236416728df3c07a913246b4849876f" translate="yes" xml:space="preserve">
          <source>Passing a string, array, or &lt;code&gt;Buffer&lt;/code&gt; as the first argument copies the passed object's data into the &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">文字列、配列、または &lt;code&gt;Buffer&lt;/code&gt; を最初の引数として渡すと、渡されたオブジェクトのデータが &lt;code&gt;Buffer&lt;/code&gt; にコピーされます。</target>
        </trans-unit>
        <trans-unit id="02b139d88df2e11354692bd57710d65347c4c6ad" translate="yes" xml:space="preserve">
          <source>Passing an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; returns a &lt;code&gt;Buffer&lt;/code&gt; that shares allocated memory with the given array buffer.</source>
          <target state="translated">通過&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; する&lt;/a&gt;戻り &lt;code&gt;Buffer&lt;/code&gt; 共有は、所与の配列バッファとメモリを割り当てられていること。</target>
        </trans-unit>
        <trans-unit id="ac27f690f37bb6425acccbd82efa0bfcecd2a071" translate="yes" xml:space="preserve">
          <source>Passing arguments and &lt;code&gt;this&lt;/code&gt; to listeners</source>
          <target state="translated">引数と &lt;code&gt;this&lt;/code&gt; をリスナーに渡す</target>
        </trans-unit>
        <trans-unit id="3f2013cf5caf58ccd8ea896c7e451fa5ea7133a2" translate="yes" xml:space="preserve">
          <source>Passing illegal value as &lt;code&gt;name&lt;/code&gt; will result in a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; being thrown, identified by &lt;code&gt;code: 'ERR_INVALID_HTTP_TOKEN'&lt;/code&gt;.</source>
          <target state="translated">不正な値を &lt;code&gt;name&lt;/code&gt; として渡すと、&lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;がスローされ、 &lt;code&gt;code: 'ERR_INVALID_HTTP_TOKEN'&lt;/code&gt; で識別されます。</target>
        </trans-unit>
        <trans-unit id="c96f98ccecfa5d1264f99c282816890ef707c29c" translate="yes" xml:space="preserve">
          <source>Passing illegal value as &lt;code&gt;value&lt;/code&gt; will result in a &lt;a href=&quot;errors#errors_class_typeerror&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; being thrown.</source>
          <target state="translated">不正な値を渡す &lt;code&gt;value&lt;/code&gt; になります&lt;a href=&quot;errors#errors_class_typeerror&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 例外が&lt;/a&gt;スローされます。</target>
        </trans-unit>
        <trans-unit id="4a04c754fe59165f84f9165d79143c01514bf798" translate="yes" xml:space="preserve">
          <source>Passing in a user-defined object instead of the result of a previous call to &lt;code&gt;eventLoopUtilization()&lt;/code&gt; will lead to undefined behavior. The return values are not guaranteed to reflect any correct state of the event loop.</source>
          <target state="translated">以前の &lt;code&gt;eventLoopUtilization()&lt;/code&gt; の呼び出しの結果の代わりにユーザー定義オブジェクトを渡すと、未定義の動作が発生します。戻り値は、イベントループの正しい状態を反映することが保証されていません。</target>
        </trans-unit>
        <trans-unit id="2b3fce4364194feea5e19b8ac1bd58c0cb3ea3f4" translate="yes" xml:space="preserve">
          <source>Passing invalid input will now throw an error.</source>
          <target state="translated">無効な入力を渡すとエラーが発生するようになりました。</target>
        </trans-unit>
        <trans-unit id="24fd77023a20e9be68e40f7a10ecc8a4e03e9dd5" translate="yes" xml:space="preserve">
          <source>Passing the &lt;code&gt;Buffer&lt;/code&gt;s underlying &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; will create a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; that shares its memory with the &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;の基礎となる &lt;code&gt;Buffer&lt;/code&gt; を渡すと、そのメモリを &lt;code&gt;Buffer&lt;/code&gt; と共有する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;が作成されます。</target>
        </trans-unit>
        <trans-unit id="f935efae738e01c6da3152f05be162e9c183db3b" translate="yes" xml:space="preserve">
          <source>Passing wrapped objects around</source>
          <target state="translated">ラップされたオブジェクトの周りを渡す</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="68e11182f7131f98561de12e8e704f9073eee3c9" translate="yes" xml:space="preserve">
          <source>Path is a directory.</source>
          <target state="translated">パスはディレクトリです。</target>
        </trans-unit>
        <trans-unit id="769b2fcf925c4d9bf45f8994209d63164e272a36" translate="yes" xml:space="preserve">
          <source>Path to a Node.js module which will be loaded in place of the built-in REPL. Overriding this value to an empty string (&lt;code&gt;''&lt;/code&gt;) will use the built-in REPL.</source>
          <target state="translated">組み込みのREPLの代わりにロードされるNode.jsモジュールへのパス。この値を空の文字列（ &lt;code&gt;''&lt;/code&gt; ）にオーバーライドすると、組み込みのREPLが使用されます。</target>
        </trans-unit>
        <trans-unit id="c51348745e7a987c01dc3a1051365e48a45e57cc" translate="yes" xml:space="preserve">
          <source>Path to the file used to store the persistent REPL history. The default path is &lt;code&gt;~/.node_repl_history&lt;/code&gt;, which is overridden by this variable. Setting the value to an empty string (&lt;code&gt;''&lt;/code&gt; or &lt;code&gt;' '&lt;/code&gt;) disables persistent REPL history.</source>
          <target state="translated">永続的なREPL履歴を格納するために使用されるファイルへのパス。デフォルトのパスは &lt;code&gt;~/.node_repl_history&lt;/code&gt; 、この変数によって上書きされます。値を空の文字列（ &lt;code&gt;''&lt;/code&gt; または &lt;code&gt;' '&lt;/code&gt; ）に設定すると、永続的なREPL履歴が無効になります。</target>
        </trans-unit>
        <trans-unit id="18f9c06d8825e9bbfb7842b887595cd1c430cc12" translate="yes" xml:space="preserve">
          <source>Paths specified using a &lt;a href=&quot;buffer#buffer_buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; are useful primarily on certain POSIX operating systems that treat file paths as opaque byte sequences. On such systems, it is possible for a single file path to contain sub-sequences that use multiple character encodings. As with string paths, &lt;code&gt;Buffer&lt;/code&gt; paths may be relative or absolute:</source>
          <target state="translated">&lt;a href=&quot;buffer#buffer_buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;を使用して指定されたパスは、ファイルパスを不透明なバイトシーケンスとして扱う特定のPOSIXオペレーティングシステムで主に役立ちます。このようなシステムでは、単一のファイルパスに複数の文字エンコーディングを使用するサブシーケンスを含めることができます。文字列パスと同様に、 &lt;code&gt;Buffer&lt;/code&gt; パスは相対パスでも絶対パスでもかまいません。</target>
        </trans-unit>
        <trans-unit id="f6b2be1832ec5d79b7b64f00a6a934a1f60f17b2" translate="yes" xml:space="preserve">
          <source>Pauses the reading of data. That is, &lt;a href=&quot;#net_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; events will not be emitted. Useful to throttle back an upload.</source>
          <target state="translated">データの読み取りを一時停止します。つまり、&lt;a href=&quot;#net_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt;イベントは発行されません。アップロードを抑制するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="391fd89d6a4a2539603b28a2931a82b778e0b197" translate="yes" xml:space="preserve">
          <source>Pending deprecations are generally identical to a runtime deprecation with the notable exception that they are turned &lt;em&gt;off&lt;/em&gt; by default and will not be emitted unless either the &lt;code&gt;--pending-deprecation&lt;/code&gt; command line flag, or the &lt;code&gt;NODE_PENDING_DEPRECATION=1&lt;/code&gt; environment variable, is set. Pending deprecations are used to provide a kind of selective &quot;early warning&quot; mechanism that developers may leverage to detect deprecated API usage.</source>
          <target state="translated">保留中の廃止予定は、ランタイムの廃止予定とほぼ同じですが、例外がデフォルトで&lt;em&gt;オフ&lt;/em&gt;になっており、 &lt;code&gt;--pending-deprecation&lt;/code&gt; コマンドラインフラグまたは &lt;code&gt;NODE_PENDING_DEPRECATION=1&lt;/code&gt; 環境変数が設定されていない限り、発行されません。保留中の非推奨は、開発者が非推奨のAPI使用を検出するために利用できる一種の選択的な「早期警告」メカニズムを提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="3b9b5a76911a5490a5ecda0473c87ff18259f952" translate="yes" xml:space="preserve">
          <source>Pending deprecations are generally identical to a runtime deprecation with the notable exception that they are turned &lt;em&gt;off&lt;/em&gt; by default and will not be emitted unless either the &lt;code&gt;--pending-deprecation&lt;/code&gt; command-line flag, or the &lt;code&gt;NODE_PENDING_DEPRECATION=1&lt;/code&gt; environment variable, is set. Pending deprecations are used to provide a kind of selective &quot;early warning&quot; mechanism that developers may leverage to detect deprecated API usage.</source>
          <target state="translated">保留中の非推奨は、デフォルトで&lt;em&gt;オフになっ&lt;/em&gt;ていて、 &lt;code&gt;--pending-deprecation&lt;/code&gt; コマンドラインフラグまたは &lt;code&gt;NODE_PENDING_DEPRECATION=1&lt;/code&gt; 環境変数が設定されていない限り発行されないという注目すべき例外を除いて、通常はランタイム非推奨と同じです。保留中の非推奨は、開発者が非推奨のAPIの使用を検出するために利用できる一種の選択的な「早期警告」メカニズムを提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="e286971f20d3f6d6631e7f551a4ebba6c1d9dd5e" translate="yes" xml:space="preserve">
          <source>Per the &lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWG Encoding Standard&lt;/a&gt;, the encodings supported by the &lt;code&gt;TextDecoder&lt;/code&gt; API are outlined in the tables below. For each encoding, one or more aliases may be used.</source>
          <target state="translated">パー&lt;a href=&quot;https://encoding.spec.whatwg.org/&quot;&gt;WHATWGエンコーディング標準&lt;/a&gt;でサポートされているエンコーディング &lt;code&gt;TextDecoder&lt;/code&gt; の APIは以下の表に記載されています。エンコーディングごとに、1つ以上のエイリアスを使用できます。</target>
        </trans-unit>
        <trans-unit id="983967999b0a46bbbedf3bf77fc614b234c702b4" translate="yes" xml:space="preserve">
          <source>Percent-Encoding in URLs</source>
          <target state="translated">URLにおけるパーセントエンコーディング</target>
        </trans-unit>
        <trans-unit id="bda26a3277c8996d6a97793ca2091756862217fc" translate="yes" xml:space="preserve">
          <source>Percent-encoding in URLs</source>
          <target state="translated">URL のパーセントエンコーディング</target>
        </trans-unit>
        <trans-unit id="7c0e3bdd317f52eeae3cbea40f6b4d310b3a555a" translate="yes" xml:space="preserve">
          <source>Perfect Forward Secrecy</source>
          <target state="translated">パーフェクトフォワードシークレット</target>
        </trans-unit>
        <trans-unit id="c4c03ce41c086567b1e274bf9831ee2f88f1a10b" translate="yes" xml:space="preserve">
          <source>Perfect Forward Secrecy is achieved by randomly generating a key pair for key-agreement on every TLS/SSL handshake (in contrast to using the same key for all sessions). Methods implementing this technique are called &quot;ephemeral&quot;.</source>
          <target state="translated">完全前方秘匿は、TLS/SSL ハンドシェイクのたびに、鍵の合意のための鍵ペアをランダムに生成することで達成されます(すべてのセッションで同じ鍵を使用するのとは対照的です)。この技術を実装した方法は「エフェメラル」と呼ばれています。</target>
        </trans-unit>
        <trans-unit id="dc8925b8985c4be414476f58d8e2ed75edcb366a" translate="yes" xml:space="preserve">
          <source>Perfect Forward Secrecy was optional up to TLSv1.2, but it is not optional for TLSv1.3, because all TLSv1.3 cipher suites use ECDHE.</source>
          <target state="translated">Perfect Forward Secrecy は TLSv1.2 まではオプションでしたが、TLSv1.3 ではすべての TLSv1.3 暗号スイートが ECDHE を使用しているため、TLSv1.3 ではオプションではありません。</target>
        </trans-unit>
        <trans-unit id="98bd6f54236b9e445516217510a0d96383d0a74d" translate="yes" xml:space="preserve">
          <source>Perfect forward secrecy</source>
          <target state="translated">パーフェクトフォワードシークレット</target>
        </trans-unit>
        <trans-unit id="1d72c26cc10bc971bf6b41a4004df8ec3a9bcb1f" translate="yes" xml:space="preserve">
          <source>Perfect forward secrecy is achieved by randomly generating a key pair for key-agreement on every TLS/SSL handshake (in contrast to using the same key for all sessions). Methods implementing this technique are called &quot;ephemeral&quot;.</source>
          <target state="translated">完全な前方秘匿は、TLS/SSL のハンドシェイクのたびに、キー・アグリーメントのためのキー・ペアをランダムに生成することで達成されます(すべてのセッションで同じキーを使用するのとは対照的です)。この技術を実装した方法は「エフェメラル」と呼ばれています。</target>
        </trans-unit>
        <trans-unit id="46746bd69248004568f369281501f5aafcd17d6d" translate="yes" xml:space="preserve">
          <source>Perfect forward secrecy was optional up to TLSv1.2, but it is not optional for TLSv1.3, because all TLSv1.3 cipher suites use ECDHE.</source>
          <target state="translated">完全な前方秘匿は TLSv1.2 まではオプションでしたが、TLSv1.3 ではオプションではなく、TLSv1.3 のすべての暗号スイートが ECDHE を使用しているからです。</target>
        </trans-unit>
        <trans-unit id="30c6e87bfcef8363e703089b902f74c17f331f5b" translate="yes" xml:space="preserve">
          <source>Perform lazy binding. Node.js sets this flag by default.</source>
          <target state="translated">遅延バインディングを実行します。Node.jsはデフォルトでこのフラグを設定しています。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="8c7f0532aad540af3ea1be9fd65ad0c0e7a4168b" translate="yes" xml:space="preserve">
          <source>Performance Hooks</source>
          <target state="translated">パフォーマンスフック</target>
        </trans-unit>
        <trans-unit id="71f8e1a76f69e5be47518162c01fa085769c50dc" translate="yes" xml:space="preserve">
          <source>Performance Timeline</source>
          <target state="translated">パフォーマンスタイムライン</target>
        </trans-unit>
        <trans-unit id="7b2b65806f423fdfaa0433da4c57d56a22fd3d5d" translate="yes" xml:space="preserve">
          <source>Performance Timing API</source>
          <target state="translated">パフォーマンスタイミングAPI</target>
        </trans-unit>
        <trans-unit id="ee0d0feded5c3dee3d64c389ffd8def9d3e99835" translate="yes" xml:space="preserve">
          <source>Performance hooks</source>
          <target state="translated">パフォーマンスフック</target>
        </trans-unit>
        <trans-unit id="9a2b9715e7c5806b26a62903c575c9fdd677bb37" translate="yes" xml:space="preserve">
          <source>Performance is not on par with the traditional &lt;code&gt;'line'&lt;/code&gt; event API. Use &lt;code&gt;'line'&lt;/code&gt; instead for performance-sensitive applications.</source>
          <target state="translated">パフォーマンスは、従来の &lt;code&gt;'line'&lt;/code&gt; イベントAPI と同等ではありません。パフォーマンスを重視するアプリケーションでは、代わりに &lt;code&gt;'line'&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="196d57ae39f219d59334df34f5845369f97d8486" translate="yes" xml:space="preserve">
          <source>Performance measurement APIs</source>
          <target state="translated">パフォーマンス測定API</target>
        </trans-unit>
        <trans-unit id="6d92e540da2b876784399520d9f3c31bd060c5de" translate="yes" xml:space="preserve">
          <source>PerformanceEntry</source>
          <target state="translated">PerformanceEntry</target>
        </trans-unit>
        <trans-unit id="b11b70f57c8786ec716704340ecdfd0ed58df97b" translate="yes" xml:space="preserve">
          <source>PerformanceNodeTiming extends PerformanceEntry</source>
          <target state="translated">PerformanceNodeTiming は PerformanceEntry を継承しています。</target>
        </trans-unit>
        <trans-unit id="84623955bed39288b6dfcfbdd63a0f3ebc13b288" translate="yes" xml:space="preserve">
          <source>PerformanceObserver</source>
          <target state="translated">PerformanceObserver</target>
        </trans-unit>
        <trans-unit id="91504c202101df50dca0d9c6a08aae2c1349b0c3" translate="yes" xml:space="preserve">
          <source>PerformanceObserverEntryList</source>
          <target state="translated">PerformanceObserverEntryList</target>
        </trans-unit>
        <trans-unit id="906c835d85be1a56dd6f4f27178b471ab1bc9042" translate="yes" xml:space="preserve">
          <source>Performs a reverse DNS query that resolves an IPv4 or IPv6 address to an array of host names.</source>
          <target state="translated">IPv4 または IPv6 アドレスをホスト名の配列に解決するリバース DNS クエリを実行します。</target>
        </trans-unit>
        <trans-unit id="be3c1281f680f0086fce68a8aa9223c80c969311" translate="yes" xml:space="preserve">
          <source>Performs a reverse DNS query that resolves an IPv4 or IPv6 address to an array of hostnames.</source>
          <target state="translated">IPv4 または IPv6 アドレスをホスト名の配列に解決する DNS クエリを実行します。</target>
        </trans-unit>
        <trans-unit id="e1a9643e280ac3eeefd6ce9c44aafb4fbf7197d6" translate="yes" xml:space="preserve">
          <source>Performs the low-level validations on the provided &lt;code&gt;name&lt;/code&gt; that are done when &lt;code&gt;res.setHeader(name, value)&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;res.setHeader(name, value)&lt;/code&gt; が呼び出されたときに実行される、指定された &lt;code&gt;name&lt;/code&gt; の低レベルの検証を実行します。</target>
        </trans-unit>
        <trans-unit id="b6eff22a9d9b4fc2367378a3f7dce9cc45b172c2" translate="yes" xml:space="preserve">
          <source>Performs the low-level validations on the provided &lt;code&gt;value&lt;/code&gt; that are done when &lt;code&gt;res.setHeader(name, value)&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;res.setHeader(name, value)&lt;/code&gt; が呼び出されたときに実行される、指定された &lt;code&gt;value&lt;/code&gt; に対して低レベルの検証を実行します。</target>
        </trans-unit>
        <trans-unit id="767ed4488c7a675e6204c746715c42eb6d1fd836" translate="yes" xml:space="preserve">
          <source>Performs transparent encryption of written data and all required TLS negotiation.</source>
          <target state="translated">書き込まれたデータの透過的な暗号化と、必要なすべてのTLSネゴシエーションを実行します。</target>
        </trans-unit>
        <trans-unit id="caa7a25e9c9ed1d27cf744a7151f04025e33bef4" translate="yes" xml:space="preserve">
          <source>Persistent History</source>
          <target state="translated">永続的な歴史</target>
        </trans-unit>
        <trans-unit id="25e4e146fd006f4c32f3afe432525e35d7c4cdda" translate="yes" xml:space="preserve">
          <source>Persistent history</source>
          <target state="translated">永続的な歴史</target>
        </trans-unit>
        <trans-unit id="6433f7fa56804ab6a9ea067199187f9cdd551682" translate="yes" xml:space="preserve">
          <source>Pipe/Socket resolve support was added.</source>
          <target state="translated">パイプ/ソケット解決サポートを追加しました。</target>
        </trans-unit>
        <trans-unit id="f0bd8c3429e270b8141550502e8df9455b3b61ca" translate="yes" xml:space="preserve">
          <source>Pipes (and sockets): &lt;em&gt;synchronous&lt;/em&gt; on Windows, &lt;em&gt;asynchronous&lt;/em&gt; on POSIX</source>
          <target state="translated">パイプ（とソケット）：&lt;em&gt;同期&lt;/em&gt;、Windows上の&lt;em&gt;非同期&lt;/em&gt; POSIX上</target>
        </trans-unit>
        <trans-unit id="f984ce47265d260ed6684e7e3805d910579031ec" translate="yes" xml:space="preserve">
          <source>Piping to Writable Streams from Async Iterators</source>
          <target state="translated">非同期イテレータから書き込み可能なストリームへのパイピング</target>
        </trans-unit>
        <trans-unit id="6c4fb6383b90d7227a1296fef6a824092d00fdd3" translate="yes" xml:space="preserve">
          <source>Piping to writable streams from async iterators</source>
          <target state="translated">非同期イテレータから書き込み可能なストリームへのパイピング</target>
        </trans-unit>
        <trans-unit id="1ffc74ea4ef76aac30439ada668a6baaefe7b280" translate="yes" xml:space="preserve">
          <source>Please ensure that all &lt;code&gt;fs.FileHandle&lt;/code&gt; objects are explicitly closed using &lt;code&gt;FileHandle.prototype.close()&lt;/code&gt; when the &lt;code&gt;fs.FileHandle&lt;/code&gt; is no longer needed:</source>
          <target state="translated">&lt;code&gt;fs.FileHandle&lt;/code&gt; が不要になった場合は、 &lt;code&gt;FileHandle.prototype.close()&lt;/code&gt; を使用してすべての &lt;code&gt;fs.FileHandle&lt;/code&gt; オブジェクトが明示的に閉じられていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="c5b60c1d044f889af9114b00cef97543049fd5ae" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;esm#esm_customizing_esm_specifier_resolution_algorithm&quot;&gt;customizing esm specifier resolution&lt;/a&gt; for example usage.</source>
          <target state="translated">使用例については&lt;a href=&quot;esm#esm_customizing_esm_specifier_resolution_algorithm&quot;&gt;、ESM指定子解像度のカスタマイズを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="134d2aea7415f33ad7a7ba8a89d2b36d4b6701d5" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;https://en.wikipedia.org/wiki/Uname#Examples&quot;&gt;https://en.wikipedia.org/wiki/Uname#Examples&lt;/a&gt; for additional information about the output of running &lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt;&lt;code&gt;uname(3)&lt;/code&gt;&lt;/a&gt; on various operating systems.</source>
          <target state="translated">さまざまなオペレーティングシステムでの&lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt; &lt;code&gt;uname(3)&lt;/code&gt; の&lt;/a&gt;実行結果の詳細については、&lt;a href=&quot;https://en.wikipedia.org/wiki/Uname#Examples&quot;&gt;https：//en.wikipedia.org/wiki/Uname#Examples&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d9d106f268a8a569059b32ec890993436f9e7b98" translate="yes" xml:space="preserve">
          <source>Please use &lt;code&gt;Server.prototype.setSecureContext()&lt;/code&gt; instead.</source>
          <target state="translated">代わりに &lt;code&gt;Server.prototype.setSecureContext()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="8d61184962dda249c7c096096c40ff46b825f4a7" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="translated">Policies</target>
        </trans-unit>
        <trans-unit id="a5fc37ddc4309cc138777b270c1e10e6b9c94bd1" translate="yes" xml:space="preserve">
          <source>Policies are a security feature intended to allow guarantees about what code Node.js is able to load. The use of policies assumes safe practices for the policy files such as ensuring that policy files cannot be overwritten by the Node.js application by using file permissions.</source>
          <target state="translated">ポリシーは、Node.jsがどのようなコードをロードできるかを保証することを目的としたセキュリティ機能です。ポリシーの使用は、ファイルパーミッションを使用してポリシーファイルがNode.jsアプリケーションによって上書きされないようにするなど、ポリシーファイルの安全な動作を前提としています。</target>
        </trans-unit>
        <trans-unit id="bfe3b858c8b1d161b2a5e17f0f202df7a3fc9efb" translate="yes" xml:space="preserve">
          <source>Policy files must use integrity checks with Subresource Integrity strings compatible with the browser &lt;a href=&quot;https://www.w3.org/TR/SRI/#the-integrity-attribute&quot;&gt;integrity attribute&lt;/a&gt; associated with absolute URLs.</source>
          <target state="translated">ポリシーファイルは、絶対URLに関連付けられているブラウザーの&lt;a href=&quot;https://www.w3.org/TR/SRI/#the-integrity-attribute&quot;&gt;整合性属性&lt;/a&gt;と互換性のあるサブリソース整合性文字列を使用して整合性チェックを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8716030375185a002eae425045da203011f9374c" translate="yes" xml:space="preserve">
          <source>Pooled connections have TCP Keep-Alive enabled for them, but servers may still close idle connections, in which case they will be removed from the pool and a new connection will be made when a new HTTP request is made for that host and port. Servers may also refuse to allow multiple requests over the same connection, in which case the connection will have to be remade for every request and cannot be pooled. The &lt;code&gt;Agent&lt;/code&gt; will still make the requests to that server, but each one will occur over a new connection.</source>
          <target state="translated">プールされた接続ではTCPキープアライブが有効になっていますが、サーバーはアイドル接続を閉じる場合があります。その場合、それらはプールから削除され、そのホストとポートに対して新しいHTTP要求が行われたときに新しい接続が作成されます。サーバーは、同じ接続を介した複数の要求の許可を拒否する場合もあります。その場合、接続は要求ごとに再作成する必要があり、プールできません。 &lt;code&gt;Agent&lt;/code&gt; 、まだそのサーバーにリクエストを行いますが、それぞれが新しい接続を介して行われます。</target>
        </trans-unit>
        <trans-unit id="78191a9d7360efa4dfcf69d5c322fd4d102df56a" translate="yes" xml:space="preserve">
          <source>Positive integer - The integer value is interpreted as a file descriptor that is currently open in the parent process. It is shared with the child process, similar to how &lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;Stream&amp;gt;&lt;/a&gt; objects can be shared. Passing sockets is not supported on Windows.</source>
          <target state="translated">正の整数-整数値は、現在親プロセスで開いているファイル記述子として解釈されます。&lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;Stream&amp;gt;&lt;/a&gt;オブジェクトを共有する方法と同様に、子プロセスと共有されます。ソケットの受け渡しはWindowsではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="e263c539e76def3656d89fd2bef007bd19081221" translate="yes" xml:space="preserve">
          <source>Positive integer: The integer value is interpreted as a file descriptor that is currently open in the parent process. It is shared with the child process, similar to how &lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;Stream&amp;gt;&lt;/a&gt; objects can be shared. Passing sockets is not supported on Windows.</source>
          <target state="translated">正の整数：整数値は、親プロセスで現在開いているファイル記述子として解釈されます。&lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;Stream&amp;gt;&lt;/a&gt;オブジェクトを共有する方法と同様に、子プロセスと共有されます。ソケットの受け渡しは、Windowsではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="73aaa69917a12de1c79105c772ef07cffb56a08c" translate="yes" xml:space="preserve">
          <source>Possible signatures:</source>
          <target state="translated">可能性のある署名。</target>
        </trans-unit>
        <trans-unit id="2696b6320f592d396097e7a9ab905634e2ee2ebd" translate="yes" xml:space="preserve">
          <source>Possible values are &lt;code&gt;'BE'&lt;/code&gt; for big endian and &lt;code&gt;'LE'&lt;/code&gt; for little endian.</source>
          <target state="translated">可能な値は、ビッグエンディアンの場合は &lt;code&gt;'BE'&lt;/code&gt; 、リトルエンディアンの場合は「 &lt;code&gt;'LE'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7280aa9b126e519bb5acdcab7417841a30bb930a" translate="yes" xml:space="preserve">
          <source>Possible values are:</source>
          <target state="translated">可能な値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="059ac471ac776a59e791dd1377b2188fae2648f9" translate="yes" xml:space="preserve">
          <source>Posts a message to the inspector back-end. &lt;code&gt;callback&lt;/code&gt; will be notified when a response is received. &lt;code&gt;callback&lt;/code&gt; is a function that accepts two optional arguments - error and message-specific result.</source>
          <target state="translated">インスペクターバックエンドにメッセージを投稿します。応答を受信すると、 &lt;code&gt;callback&lt;/code&gt; が通知されます。 &lt;code&gt;callback&lt;/code&gt; は、エラーとメッセージ固有の結果の2つのオプションの引数を受け入れる関数です。</target>
        </trans-unit>
        <trans-unit id="07ca36b59c468549fd1512ac399a808933377630" translate="yes" xml:space="preserve">
          <source>Posts a message to the inspector back-end. &lt;code&gt;callback&lt;/code&gt; will be notified when a response is received. &lt;code&gt;callback&lt;/code&gt; is a function that accepts two optional arguments: error and message-specific result.</source>
          <target state="translated">インスペクターバックエンドにメッセージを投稿します。応答を受信すると、 &lt;code&gt;callback&lt;/code&gt; が通知されます。 &lt;code&gt;callback&lt;/code&gt; は、エラーとメッセージ固有の結果の2つのオプションの引数を受け入れる関数です。</target>
        </trans-unit>
        <trans-unit id="d27ffc769e1d965733d4bb252ab3a66f898fff36" translate="yes" xml:space="preserve">
          <source>Pre-shared keys</source>
          <target state="translated">事前共有キー</target>
        </trans-unit>
        <trans-unit id="17f11f9801c4cdeb573eb15fcd0b1f87f55831a6" translate="yes" xml:space="preserve">
          <source>Predefined control codes are listed below (grouped as &quot;Modifiers&quot;, &quot;Foreground colors&quot;, and &quot;Background colors&quot;).</source>
          <target state="translated">定義済みの制御コードを以下に示します(「修飾子」、「前景色」、「背景色」に分類)。</target>
        </trans-unit>
        <trans-unit id="992e8b087ac31d52c7cb6b7ed0dfa34588b59cab" translate="yes" xml:space="preserve">
          <source>Prefer &lt;a href=&quot;http#http_response_socket&quot;&gt;&lt;code&gt;response.socket&lt;/code&gt;&lt;/a&gt; over &lt;a href=&quot;http#http_response_connection&quot;&gt;&lt;code&gt;response.connection&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;http#http_request_socket&quot;&gt;&lt;code&gt;request.socket&lt;/code&gt;&lt;/a&gt; over &lt;a href=&quot;http#http_request_connection&quot;&gt;&lt;code&gt;request.connection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">優先&lt;a href=&quot;http#http_response_socket&quot;&gt; &lt;code&gt;response.socket&lt;/code&gt; を&lt;/a&gt;かけ&lt;a href=&quot;http#http_response_connection&quot;&gt; &lt;code&gt;response.connection&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;http#http_request_socket&quot;&gt; &lt;code&gt;request.socket&lt;/code&gt; &lt;/a&gt;オーバー&lt;a href=&quot;http#http_request_connection&quot;&gt; &lt;code&gt;request.connection&lt;/code&gt; から&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e8b41dbc1ba5a4df63f44e9b7cc953ecbd6b962" translate="yes" xml:space="preserve">
          <source>Preload the specified module at startup.</source>
          <target state="translated">起動時に指定したモジュールをプリロードします。</target>
        </trans-unit>
        <trans-unit id="48d834aff5d03ca7046c2cc28e8b92759ab0a2f0" translate="yes" xml:space="preserve">
          <source>Pressing &lt;code&gt;enter&lt;/code&gt; without typing a command will repeat the previous debugger command.</source>
          <target state="translated">コマンドを &lt;code&gt;enter&lt;/code&gt; せずにEnterキーを押すと、前のデバッガコマンドが繰り返されます。</target>
        </trans-unit>
        <trans-unit id="1742b6b7afd792924e3dc141792dd499dcda806e" translate="yes" xml:space="preserve">
          <source>Prevents an abort if a string decoder was set on the Socket or if the decoder is in &lt;code&gt;objectMode&lt;/code&gt;.</source>
          <target state="translated">文字列デコーダーがSocketに設定されている場合、またはデコーダーが &lt;code&gt;objectMode&lt;/code&gt; にある場合、中止を防止します。</target>
        </trans-unit>
        <trans-unit id="11ced36a0c5dda489ffa3aa3624a71d155efc788" translate="yes" xml:space="preserve">
          <source>Previous history item</source>
          <target state="translated">過去の履歴項目</target>
        </trans-unit>
        <trans-unit id="74c97dcc9c4c30282873d6e9de5cb76ffa0aa054" translate="yes" xml:space="preserve">
          <source>Previous versions of Node.js exposed handles to internal native objects through the &lt;code&gt;_handle&lt;/code&gt; property of the &lt;code&gt;Cipher&lt;/code&gt;, &lt;code&gt;Decipher&lt;/code&gt;, &lt;code&gt;DiffieHellman&lt;/code&gt;, &lt;code&gt;DiffieHellmanGroup&lt;/code&gt;, &lt;code&gt;ECDH&lt;/code&gt;, &lt;code&gt;Hash&lt;/code&gt;, &lt;code&gt;Hmac&lt;/code&gt;, &lt;code&gt;Sign&lt;/code&gt;, and &lt;code&gt;Verify&lt;/code&gt; classes. The &lt;code&gt;_handle&lt;/code&gt; property has been removed because improper use of the native object can lead to crashing the application.</source>
          <target state="translated">以前のバージョンのNode.js は、 &lt;code&gt;Cipher&lt;/code&gt; 、 &lt;code&gt;Decipher&lt;/code&gt; 、 &lt;code&gt;DiffieHellman&lt;/code&gt; 、 &lt;code&gt;DiffieHellmanGroup&lt;/code&gt; 、 &lt;code&gt;ECDH&lt;/code&gt; 、 &lt;code&gt;Hash&lt;/code&gt; 、 &lt;code&gt;Hmac&lt;/code&gt; 、 &lt;code&gt;Sign&lt;/code&gt; 、および &lt;code&gt;Verify&lt;/code&gt; クラスの &lt;code&gt;_handle&lt;/code&gt; プロパティを通じて内部ネイティブオブジェクトへのハンドルを公開していました。ネイティブオブジェクトを不適切に使用すると、アプリケーションがクラッシュする可能性があるため、 &lt;code&gt;_handle&lt;/code&gt; プロパティが削除されました。</target>
        </trans-unit>
        <trans-unit id="2548341fd27d2709b74854b61fd8f1c81e11a405" translate="yes" xml:space="preserve">
          <source>Previous versions of Node.js supported &lt;code&gt;dns.lookup()&lt;/code&gt; with a falsy host name like &lt;code&gt;dns.lookup(false)&lt;/code&gt; due to backward compatibility. This behavior is undocumented and is thought to be unused in real world apps. It will become an error in future versions of Node.js.</source>
          <target state="translated">以前のバージョンのNode.jsは、下位互換性のために &lt;code&gt;dns.lookup(false)&lt;/code&gt; のような偽のホスト名を持つ &lt;code&gt;dns.lookup()&lt;/code&gt; をサポートしていました。この動作は文書化されておらず、実際のアプリでは使用されていないと考えられています。Node.jsの将来のバージョンではエラーになります。</target>
        </trans-unit>
        <trans-unit id="0a9ec572cae8ecef23f586a6cd6918eec49e9789" translate="yes" xml:space="preserve">
          <source>Previous versions of Node.js supported &lt;code&gt;dns.lookup()&lt;/code&gt; with a falsy hostname like &lt;code&gt;dns.lookup(false)&lt;/code&gt; due to backward compatibility. This behavior is undocumented and is thought to be unused in real world apps. It will become an error in future versions of Node.js.</source>
          <target state="translated">以前のバージョンのNode.jsでは、下位互換性のため、 &lt;code&gt;dns.lookup(false)&lt;/code&gt; のような偽のホスト名で &lt;code&gt;dns.lookup()&lt;/code&gt; がサポートされていました。この動作は文書化されておらず、実際のアプリでは使用されていないと考えられています。Node.jsの将来のバージョンではエラーになります。</target>
        </trans-unit>
        <trans-unit id="a555e43820fa40adc814153e381baa06410e9d93" translate="yes" xml:space="preserve">
          <source>Previously, the constants were available directly from &lt;code&gt;require('zlib')&lt;/code&gt;, for instance &lt;code&gt;zlib.Z_NO_FLUSH&lt;/code&gt;. Accessing the constants directly from the module is currently still possible but is deprecated.</source>
          <target state="translated">以前は、定数は &lt;code&gt;require('zlib')&lt;/code&gt; から直接利用可能でした（例： &lt;code&gt;zlib.Z_NO_FLUSH&lt;/code&gt; )。モジュールから定数に直接アクセスすることは現在も可能ですが、非推奨です。</target>
        </trans-unit>
        <trans-unit id="4eebbdec037d97714daaf46088074f8f095416a2" translate="yes" xml:space="preserve">
          <source>Primitive values are compared using the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-samevalue&quot;&gt;SameValue Comparison&lt;/a&gt;, used by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is&quot;&gt;&lt;code&gt;Object.is()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プリミティブ値は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is&quot;&gt; &lt;code&gt;Object.is()&lt;/code&gt; &lt;/a&gt;で使用されるSameValue&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-samevalue&quot;&gt;比較&lt;/a&gt;を使用して比較されます。</target>
        </trans-unit>
        <trans-unit id="3aa13805a48149c8d001d8db1731cc6054a3a97b" translate="yes" xml:space="preserve">
          <source>Primitive values are compared with the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;Abstract Equality Comparison&lt;/a&gt; ( &lt;code&gt;==&lt;/code&gt; ) with the exception of &lt;code&gt;NaN&lt;/code&gt;. It is treated as being identical in case both sides are &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">プリミティブ値は、 &lt;code&gt;NaN&lt;/code&gt; を除いて、&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;抽象等価比較&lt;/a&gt;（ &lt;code&gt;==&lt;/code&gt; ）と比較されます。両側が &lt;code&gt;NaN&lt;/code&gt; の場合、同一として扱われます。</target>
        </trans-unit>
        <trans-unit id="ced42f45036cc483c9d374d870dad4ed474bdc21" translate="yes" xml:space="preserve">
          <source>Primitive values are compared with the &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;Abstract Equality Comparison&lt;/a&gt; ( &lt;code&gt;==&lt;/code&gt; ).</source>
          <target state="translated">プリミティブ値は、&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-abstract-equality-comparison&quot;&gt;抽象等価比較&lt;/a&gt;（ &lt;code&gt;==&lt;/code&gt; ）と比較されます。</target>
        </trans-unit>
        <trans-unit id="70bf0d81505af6384899a96c96fb75a7c80d1d78" translate="yes" xml:space="preserve">
          <source>Print V8 command line options.</source>
          <target state="translated">V8 のコマンドラインオプションを表示します。</target>
        </trans-unit>
        <trans-unit id="f2f38862321cc2871d8e2df5dc1d9730bd82d2f1" translate="yes" xml:space="preserve">
          <source>Print V8 command-line options.</source>
          <target state="translated">V8 コマンドラインオプションを表示します。</target>
        </trans-unit>
        <trans-unit id="095eafa1ee05b0e4cfb091f53ba3406eab5be3dc" translate="yes" xml:space="preserve">
          <source>Print node command line options. The output of this option is less detailed than this document.</source>
          <target state="translated">ノードのコマンドラインオプションを表示します。このオプションの出力は、このドキュメントよりも詳細ではありません。</target>
        </trans-unit>
        <trans-unit id="23fe4b683483713475054b7ae501a7bb20ea1256" translate="yes" xml:space="preserve">
          <source>Print node command-line options. The output of this option is less detailed than this document.</source>
          <target state="translated">ノードのコマンドラインオプションを表示します。このオプションの出力は、このドキュメントよりも詳細ではありません。</target>
        </trans-unit>
        <trans-unit id="4e8927fd4c74cbc78d568adb9a1b17b406a08a9b" translate="yes" xml:space="preserve">
          <source>Print node's version.</source>
          <target state="translated">ノードのバージョンを表示します。</target>
        </trans-unit>
        <trans-unit id="53faa5e77298001da39c4847073219812fd872b9" translate="yes" xml:space="preserve">
          <source>Print short summaries of calls to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait&quot;&gt;&lt;code&gt;Atomics.wait()&lt;/code&gt;&lt;/a&gt; to stderr. The output could look like this:</source>
          <target state="translated">stderrへの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/wait&quot;&gt; &lt;code&gt;Atomics.wait()&lt;/code&gt; の&lt;/a&gt;呼び出しの短い要約を出力します。出力は次のようになります。</target>
        </trans-unit>
        <trans-unit id="fc88690634368ae78e24e38bdcbae6ae6003e688" translate="yes" xml:space="preserve">
          <source>Print source-able bash completion script for Node.js.</source>
          <target state="translated">Node.js用のソース付きbash補完スクリプトを印刷します。</target>
        </trans-unit>
        <trans-unit id="9e3c3ab4fa30dd6f1be84ef6ddb9d661a65ee164" translate="yes" xml:space="preserve">
          <source>Print stack traces for deprecations.</source>
          <target state="translated">非推奨のスタックトレースを表示します。</target>
        </trans-unit>
        <trans-unit id="61c177a398e7c1674438c1d5434da56f8918bd35" translate="yes" xml:space="preserve">
          <source>Print stack traces for process warnings (including deprecations).</source>
          <target state="translated">プロセスの警告(非推奨を含む)のためのスタックトレースを表示します。</target>
        </trans-unit>
        <trans-unit id="ebc310a0ea3748b6ac4905fbe13acc453959cf46" translate="yes" xml:space="preserve">
          <source>Print stack traces for uncaught exceptions; usually, the stack trace associated with the creation of an &lt;code&gt;Error&lt;/code&gt; is printed, whereas this makes Node.js also print the stack trace associated with throwing the value (which does not need to be an &lt;code&gt;Error&lt;/code&gt; instance).</source>
          <target state="translated">キャッチされなかった例外のスタックトレースを出力します。通常、 &lt;code&gt;Error&lt;/code&gt; の作成に関連するスタックトレースが出力されますが、これにより、Node.jsは値のスローに関連するスタックトレースも出力します（これは &lt;code&gt;Error&lt;/code&gt; インスタンスである必要はありません）。</target>
        </trans-unit>
        <trans-unit id="068081f9461c8aae0f3ae57847ff9307cc39ab12" translate="yes" xml:space="preserve">
          <source>Printing in AsyncHooks callbacks</source>
          <target state="translated">AsyncHooks コールバックでの印刷</target>
        </trans-unit>
        <trans-unit id="70c453d54073c5fb784eeaeafb1094d31a8dcf12" translate="yes" xml:space="preserve">
          <source>Prints TLS packet trace information to &lt;code&gt;stderr&lt;/code&gt;. This can be used to debug TLS connection problems.</source>
          <target state="translated">TLSパケットのトレース情報を &lt;code&gt;stderr&lt;/code&gt; に出力します。これは、TLS接続の問題をデバッグするために使用できます。</target>
        </trans-unit>
        <trans-unit id="0f312b6b1137a45b692aa4476fc7f61de3717b1a" translate="yes" xml:space="preserve">
          <source>Prints a stack trace on SIGINT.</source>
          <target state="translated">スタックトレースをSIGINTに出力します。</target>
        </trans-unit>
        <trans-unit id="b39a7dcfa31675a5873a5b343bc968e701e489df" translate="yes" xml:space="preserve">
          <source>Prints a stack trace whenever an environment is exited proactively, i.e. invoking &lt;code&gt;process.exit()&lt;/code&gt;.</source>
          <target state="translated">環境がプロアクティブに終了するとき、つまり &lt;code&gt;process.exit()&lt;/code&gt; を呼び出すときはいつでも、スタックトレースを出力します。</target>
        </trans-unit>
        <trans-unit id="4c6797896530a7086252151eb2d808af0acd5708" translate="yes" xml:space="preserve">
          <source>Prints a stack trace whenever synchronous I/O is detected after the first turn of the event loop.</source>
          <target state="translated">イベントループの最初のターンの後に同期I/Oが検出されると、スタックトレースを表示します。</target>
        </trans-unit>
        <trans-unit id="5622b8fe97527f9555a95d48db72e2ef47db69da" translate="yes" xml:space="preserve">
          <source>Prints to &lt;code&gt;stderr&lt;/code&gt; the string &lt;code&gt;'Trace: '&lt;/code&gt;, followed by the &lt;a href=&quot;util#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format()&lt;/code&gt;&lt;/a&gt; formatted message and stack trace to the current position in the code.</source>
          <target state="translated">文字列 &lt;code&gt;'Trace: '&lt;/code&gt; を &lt;code&gt;stderr&lt;/code&gt; に出力し、その後に&lt;a href=&quot;util#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format()&lt;/code&gt; &lt;/a&gt;形式のメッセージとスタックトレースをコードの現在の位置に出力します。</target>
        </trans-unit>
        <trans-unit id="74fac35d9a2e096837c2d3881e8f19985ada046a" translate="yes" xml:space="preserve">
          <source>Prints to &lt;code&gt;stderr&lt;/code&gt; with newline. Multiple arguments can be passed, with the first used as the primary message and all additional used as substitution values similar to &lt;a href=&quot;http://man7.org/linux/man-pages/man3/printf.3.html&quot;&gt;&lt;code&gt;printf(3)&lt;/code&gt;&lt;/a&gt; (the arguments are all passed to &lt;a href=&quot;util#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">するプリント &lt;code&gt;stderr&lt;/code&gt; 改行で。複数の引数を渡すことができます。最初のメッセージがプライマリメッセージとして使用され、すべての引数は&lt;a href=&quot;http://man7.org/linux/man-pages/man3/printf.3.html&quot;&gt; &lt;code&gt;printf(3)&lt;/code&gt; &lt;/a&gt;と同様に置換値として使用されます（引数はすべて&lt;a href=&quot;util#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format()&lt;/code&gt; に&lt;/a&gt;渡されます）。</target>
        </trans-unit>
        <trans-unit id="1e1280f741bd1d400df3250b0cb8b1d0b821d4de" translate="yes" xml:space="preserve">
          <source>Prints to &lt;code&gt;stdout&lt;/code&gt; with newline. Multiple arguments can be passed, with the first used as the primary message and all additional used as substitution values similar to &lt;a href=&quot;http://man7.org/linux/man-pages/man3/printf.3.html&quot;&gt;&lt;code&gt;printf(3)&lt;/code&gt;&lt;/a&gt; (the arguments are all passed to &lt;a href=&quot;util#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">するプリント &lt;code&gt;stdout&lt;/code&gt; 改行で。複数の引数を渡すことができます。最初のメッセージがプライマリメッセージとして使用され、すべての引数は&lt;a href=&quot;http://man7.org/linux/man-pages/man3/printf.3.html&quot;&gt; &lt;code&gt;printf(3)&lt;/code&gt; &lt;/a&gt;と同様に置換値として使用されます（引数はすべて&lt;a href=&quot;util#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format()&lt;/code&gt; に&lt;/a&gt;渡されます）。</target>
        </trans-unit>
        <trans-unit id="e3855ce03c293b66a787d44a3e98b526098b5f3a" translate="yes" xml:space="preserve">
          <source>Prior to Node.js 0.10, streams did not implement the entire &lt;code&gt;stream&lt;/code&gt; module API as it is currently defined. (See &lt;a href=&quot;#stream_compatibility_with_older_node_js_versions&quot;&gt;Compatibility&lt;/a&gt; for more information.)</source>
          <target state="translated">Node.js 0.10より前は、ストリームは現在定義されているため、 &lt;code&gt;stream&lt;/code&gt; モジュールAPI 全体を実装していませんでした。（詳細については、&lt;a href=&quot;#stream_compatibility_with_older_node_js_versions&quot;&gt;互換性&lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="0e4d74cf100d9d93df5e134d1bdc3544f13a9126" translate="yes" xml:space="preserve">
          <source>Prior to Node.js 0.10, the &lt;code&gt;Readable&lt;/code&gt; stream interface was simpler, but also less powerful and less useful.</source>
          <target state="translated">Node.js 0.10より前のバージョンでは、 &lt;code&gt;Readable&lt;/code&gt; ストリームインターフェースはよりシンプルでしたが、強力でなく有用性も低くなりました。</target>
        </trans-unit>
        <trans-unit id="b73773217fd9db14de34c02fb46b27a87b1d65d7" translate="yes" xml:space="preserve">
          <source>Prior to Node.js 0.10, the incoming message data would be simply discarded. However, in Node.js 0.10 and beyond, the socket remains paused forever.</source>
          <target state="translated">Node.js 0.10以前では、受信したメッセージデータは単純に破棄されていました。しかし、Node.js 0.10以降では、ソケットは永遠に一時停止したままです。</target>
        </trans-unit>
        <trans-unit id="799804e4ff65ca9b801a959d1f72b0f2c0736e67" translate="yes" xml:space="preserve">
          <source>Prior to Node.js 0.12, the &lt;code&gt;ctime&lt;/code&gt; held the &lt;code&gt;birthtime&lt;/code&gt; on Windows systems. As of 0.12, &lt;code&gt;ctime&lt;/code&gt; is not &quot;creation time&quot;, and on Unix systems, it never was.</source>
          <target state="translated">Node.js 0.12より前は、 &lt;code&gt;ctime&lt;/code&gt; はWindowsシステムで &lt;code&gt;birthtime&lt;/code&gt; を保持していました。0.12の時点では、 &lt;code&gt;ctime&lt;/code&gt; は「作成時間」ではなく、Unixシステムではそうではありませんでした。</target>
        </trans-unit>
        <trans-unit id="b5ea6f80e9b75421ec86a674535539182e1cb12a" translate="yes" xml:space="preserve">
          <source>Prior to Node.js 8.0.0, the underlying memory for &lt;code&gt;Buffer&lt;/code&gt; instances created in this way is &lt;em&gt;not initialized&lt;/em&gt;. The contents of a newly created &lt;code&gt;Buffer&lt;/code&gt; are unknown and &lt;em&gt;may contain sensitive data&lt;/em&gt;. Use &lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc(size)&lt;/code&gt;&lt;/a&gt; instead to initialize a &lt;code&gt;Buffer&lt;/code&gt; with zeroes.</source>
          <target state="translated">Node.js 8.0.0より前のバージョンでは、この方法で作成された &lt;code&gt;Buffer&lt;/code&gt; インスタンスの基礎となるメモリ&lt;em&gt;は初期化&lt;/em&gt;されて&lt;em&gt;いません&lt;/em&gt;。新しく作成された &lt;code&gt;Buffer&lt;/code&gt; の内容は不明で&lt;em&gt;あり、機密データが含まれている可能性があります&lt;/em&gt;。使用&lt;a href=&quot;#buffer_class_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc(size)&lt;/code&gt; &lt;/a&gt;の代わりに初期化するための &lt;code&gt;Buffer&lt;/code&gt; ゼロで。</target>
        </trans-unit>
        <trans-unit id="4f60d8e68c695de16bea08464736b901943f2657" translate="yes" xml:space="preserve">
          <source>Prior to the introduction of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt;, the JavaScript language had no mechanism for reading or manipulating streams of binary data. The &lt;code&gt;Buffer&lt;/code&gt; class was introduced as part of the Node.js API to enable interaction with octet streams in TCP streams, file system operations, and other contexts.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;が導入される前は、JavaScript言語にはバイナリデータのストリームを読み取ったり操作したりするためのメカニズムがありませんでした。 &lt;code&gt;Buffer&lt;/code&gt; クラスは、TCPストリームでのオクテットストリーム、ファイルシステムの操作、および他のコンテキストとの相互作用を可能にするためのNode.js APIの一部として導入されました。</target>
        </trans-unit>
        <trans-unit id="569010eb9f361cf8faa56363beee5080dfaf7c82" translate="yes" xml:space="preserve">
          <source>Prior versions of Node.js required the use of the &lt;code&gt;--trace-events-enabled&lt;/code&gt; flag to enable trace events. This requirement has been removed. However, the &lt;code&gt;--trace-events-enabled&lt;/code&gt; flag &lt;em&gt;may&lt;/em&gt; still be used and will enable the &lt;code&gt;node&lt;/code&gt;, &lt;code&gt;node.async_hooks&lt;/code&gt;, and &lt;code&gt;v8&lt;/code&gt; trace event categories by default.</source>
          <target state="translated">Node.jsの以前のバージョンでは、トレースイベントを有効にするために &lt;code&gt;--trace-events-enabled&lt;/code&gt; フラグを使用する必要がありました。この要件は削除されました。ただし、 &lt;code&gt;--trace-events-enabled&lt;/code&gt; フラグ&lt;em&gt;は&lt;/em&gt;引き続き使用でき、デフォルトで &lt;code&gt;node&lt;/code&gt; 、 &lt;code&gt;node.async_hooks&lt;/code&gt; 、および &lt;code&gt;v8&lt;/code&gt; トレースイベントカテゴリを有効にします。</target>
        </trans-unit>
        <trans-unit id="3eba8ee76ad475accca8e383aa6bd46bc54cf3ec" translate="yes" xml:space="preserve">
          <source>Priority Constants</source>
          <target state="translated">優先度定数</target>
        </trans-unit>
        <trans-unit id="5854455f2e22400232f16336a9364fcaf6b673d5" translate="yes" xml:space="preserve">
          <source>Priority constants</source>
          <target state="translated">優先度定数</target>
        </trans-unit>
        <trans-unit id="87b811635ab3b8310c66cfb0ad327bc513d1a5e4" translate="yes" xml:space="preserve">
          <source>Private keys can be generated in multiple ways. The example below illustrates use of the OpenSSL command-line interface to generate a 2048-bit RSA private key:</source>
          <target state="translated">秘密鍵は複数の方法で生成することができます。以下の例では、OpenSSL コマンドラインインターフェースを使用して 2048 ビットの RSA 秘密鍵を生成しています。</target>
        </trans-unit>
        <trans-unit id="12f4c13a6a06f999cc56eb966c94f71ef2658a3f" translate="yes" xml:space="preserve">
          <source>Process</source>
          <target state="translated">Process</target>
        </trans-unit>
        <trans-unit id="ed79e49db97c3aadec62bbfc9a3a18e8ab948618" translate="yes" xml:space="preserve">
          <source>Process Events</source>
          <target state="translated">プロセスイベント</target>
        </trans-unit>
        <trans-unit id="edc85c4767f043b93bfae05f56b87a8f8bb981b7" translate="yes" xml:space="preserve">
          <source>Process V8 profiler output generated using the V8 option &lt;code&gt;--prof&lt;/code&gt;.</source>
          <target state="translated">V8オプション &lt;code&gt;--prof&lt;/code&gt; を使用して生成されたV8プロファイラー出力を処理します。</target>
        </trans-unit>
        <trans-unit id="47df027e667d25601ac34f1f4644c627704be9e6" translate="yes" xml:space="preserve">
          <source>Process events</source>
          <target state="translated">プロセスイベント</target>
        </trans-unit>
        <trans-unit id="e6d3d70d87f346ad17706fe9b8c8f0efbcfe18a8" translate="yes" xml:space="preserve">
          <source>Process files with the extension &lt;code&gt;.sjs&lt;/code&gt; as &lt;code&gt;.js&lt;/code&gt;:</source>
          <target state="translated">拡張子が &lt;code&gt;.sjs&lt;/code&gt; のファイルを &lt;code&gt;.js&lt;/code&gt; として処理します。</target>
        </trans-unit>
        <trans-unit id="d9847a8200568ca69ca441425bfe0107e7fd28da" translate="yes" xml:space="preserve">
          <source>Produces a socket/stream to be used for HTTP requests.</source>
          <target state="translated">HTTP リクエストに使用するソケット/ストリームを生成します。</target>
        </trans-unit>
        <trans-unit id="23b6ae6a9a0d6b931ccd8b07912cb3226d2ccadf" translate="yes" xml:space="preserve">
          <source>Promise callbacks are entered into the microtask queue of the context in which they were created. For example, if &lt;code&gt;() =&amp;gt; loop()&lt;/code&gt; is replaced with just &lt;code&gt;loop&lt;/code&gt; in the above example, then &lt;code&gt;loop&lt;/code&gt; will be pushed into the global microtask queue, because it is a function from the outer (main) context, and thus will also be able to escape the timeout.</source>
          <target state="translated">Promiseコールバックは、それらが作成されたコンテキストのマイクロタスクキューに入力されます。たとえば、上記の例で &lt;code&gt;() =&amp;gt; loop()&lt;/code&gt; がjust &lt;code&gt;loop&lt;/code&gt; に置き換えられた場合、 &lt;code&gt;loop&lt;/code&gt; は外部（メイン）コンテキストからの関数であるため、グローバルマイクロタスクキューにプッシュされます。タイムアウトを回避することができます。</target>
        </trans-unit>
        <trans-unit id="2a3887e3a4c754b37f057f5ba4d7665b5decc898" translate="yes" xml:space="preserve">
          <source>Promise contexts may not get precise &lt;code&gt;executionAsyncIds&lt;/code&gt; by default. See the section on &lt;a href=&quot;#async_hooks_promise_execution_tracking&quot;&gt;promise execution tracking&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、Promiseコンテキストは正確な &lt;code&gt;executionAsyncIds&lt;/code&gt; を取得しない場合があります。&lt;a href=&quot;#async_hooks_promise_execution_tracking&quot;&gt;promiseの実行追跡&lt;/a&gt;に関するセクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="91e0c399a6037f8f6a98e138a55d44f0df19487f" translate="yes" xml:space="preserve">
          <source>Promise contexts may not get valid &lt;code&gt;triggerAsyncId&lt;/code&gt;s by default. See the section on &lt;a href=&quot;#async_hooks_promise_execution_tracking&quot;&gt;promise execution tracking&lt;/a&gt;.</source>
          <target state="translated">デフォルトでは、Promiseコンテキストは有効な &lt;code&gt;triggerAsyncId&lt;/code&gt; を取得しない場合があります。&lt;a href=&quot;#async_hooks_promise_execution_tracking&quot;&gt;promiseの実行追跡&lt;/a&gt;に関するセクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="8f2a21a1defb506a66631b97bc5212a2e135f6ee" translate="yes" xml:space="preserve">
          <source>Promise example</source>
          <target state="translated">プロミスの例</target>
        </trans-unit>
        <trans-unit id="de39bc50f647464d04975bfae7e18eac651d9d44" translate="yes" xml:space="preserve">
          <source>Promise execution tracking</source>
          <target state="translated">プロミスの実行追跡</target>
        </trans-unit>
        <trans-unit id="be1729ccf03641bd80e66019be462b4be810f180" translate="yes" xml:space="preserve">
          <source>Promise-based operations return a &lt;code&gt;Promise&lt;/code&gt; that is resolved when the asynchronous operation is complete.</source>
          <target state="translated">Promiseベースの操作は、非同期操作が完了すると解決される &lt;code&gt;Promise&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b1d472e424c03ff52490d1edc8a0e23f95babb92" translate="yes" xml:space="preserve">
          <source>Promises</source>
          <target state="translated">Promises</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="72dc7e3756821ec64d8f538c6a9ac277daf6e8db" translate="yes" xml:space="preserve">
          <source>Properties assigned to the &lt;code&gt;import.meta&lt;/code&gt; object that are objects may allow the &lt;code&gt;Module&lt;/code&gt; to access information outside the specified &lt;code&gt;context&lt;/code&gt;, if the object is created in the top level context. Use &lt;code&gt;vm.runInContext()&lt;/code&gt; to create objects in a specific context.</source>
          <target state="translated">オブジェクトが最上位のコンテキストで作成されている場合、オブジェクトである &lt;code&gt;import.meta&lt;/code&gt; オブジェクトに割り当てられたプロパティにより、 &lt;code&gt;Module&lt;/code&gt; は指定された &lt;code&gt;context&lt;/code&gt; 外の情報にアクセスできます。特定のコンテキストでオブジェクトを作成するには、 &lt;code&gt;vm.runInContext()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="d40b6e7862b9d2391f0703753844d2fa029aa95f" translate="yes" xml:space="preserve">
          <source>Properties assigned to the &lt;code&gt;import.meta&lt;/code&gt; object that are objects may allow the module to access information outside the specified &lt;code&gt;context&lt;/code&gt;. Use &lt;code&gt;vm.runInContext()&lt;/code&gt; to create objects in a specific context.</source>
          <target state="translated">オブジェクトである &lt;code&gt;import.meta&lt;/code&gt; オブジェクトに割り当てられたプロパティにより、モジュールは指定された &lt;code&gt;context&lt;/code&gt; 外の情報にアクセスできる場合があります。使用 &lt;code&gt;vm.runInContext()&lt;/code&gt; 特定のコンテキスト内のオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="bda4491517fdbddb3ce43bec61f6056056bde879" translate="yes" xml:space="preserve">
          <source>Properties can be retrieved using the APIs described in this section. Consider the following JavaScript snippet:</source>
          <target state="translated">プロパティは、このセクションで説明するAPIを使用して取得できます。次の JavaScript スニペットを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="a3cd4663725b21a7660b35ccc8b4e9e0fdf9e0f8" translate="yes" xml:space="preserve">
          <source>Properties in JavaScript are represented as a tuple of a key and a value. Fundamentally, all property keys in N-API can be represented in one of the following forms:</source>
          <target state="translated">JavaScript のプロパティは、キーと値のタプルとして表現されます。基本的に、N-API のすべてのプロパティキーは、以下のいずれかの形式で表すことができます。</target>
        </trans-unit>
        <trans-unit id="5549e5f59a69fbebbf7d638b195aee138301480f" translate="yes" xml:space="preserve">
          <source>Properties in the &lt;code&gt;context&lt;/code&gt; object appear as local within the REPL:</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; オブジェクトのプロパティは、REPL内でローカルとして表示されます。</target>
        </trans-unit>
        <trans-unit id="0d5acab121bd42e12883f7dbf5c731dccc9ca8c5" translate="yes" xml:space="preserve">
          <source>Properties on the constructor function corresponding to &lt;em&gt;static&lt;/em&gt; data properties, accessors, and methods of the C++ class (defined by property descriptors with the &lt;code&gt;napi_static&lt;/code&gt; attribute).</source>
          <target state="translated">C ++クラスの&lt;em&gt;静的&lt;/em&gt;データプロパティ、アクセサー、およびメソッドに対応するコンストラクター関数のプロパティ（ &lt;code&gt;napi_static&lt;/code&gt; 属性を持つプロパティ記述子で定義）。</target>
        </trans-unit>
        <trans-unit id="5afbb5e9cfdc5d6daed992275088c08794789f8a" translate="yes" xml:space="preserve">
          <source>Properties on the constructor function's &lt;code&gt;prototype&lt;/code&gt; object corresponding to &lt;em&gt;non-static&lt;/em&gt; data properties, accessors, and methods of the C++ class (defined by property descriptors without the &lt;code&gt;napi_static&lt;/code&gt; attribute).</source>
          <target state="translated">C ++クラスの&lt;em&gt;非静的&lt;/em&gt;データプロパティ、アクセサー、およびメソッドに対応するコンストラクター関数の &lt;code&gt;prototype&lt;/code&gt; オブジェクトのプロパティ（ &lt;code&gt;napi_static&lt;/code&gt; 属性のないプロパティ記述子で定義）。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6d26588704be37bebc003478fce78026f44e2d08" translate="yes" xml:space="preserve">
          <source>Property filter bits. They can be or'ed to build a composite filter.</source>
          <target state="translated">プロパティフィルタビットです。これらは合成フィルタを構築するために使用できます。</target>
        </trans-unit>
        <trans-unit id="af895c10b69648206dba04a4d2a069103e37930c" translate="yes" xml:space="preserve">
          <source>Property for checking and controlling whether a FIPS compliant crypto provider is currently in use. Setting to true requires a FIPS build of Node.js.</source>
          <target state="translated">FIPS 準拠の crypto プロバイダが現在使用されているかどうかをチェックして制御するためのプロパティです。trueに設定するには、Node.jsのFIPSビルドが必要です。</target>
        </trans-unit>
        <trans-unit id="155652a094bbdea0dbf7c9376121d001ea20f42a" translate="yes" xml:space="preserve">
          <source>Protocol Error</source>
          <target state="translated">プロトコルエラー</target>
        </trans-unit>
        <trans-unit id="5317fa8a548ff6ef690547e3ed30ee12c1cd86a5" translate="yes" xml:space="preserve">
          <source>Protocol errors occur when various HTTP/2 protocol constraints are violated. These will be reported using either a synchronous &lt;code&gt;throw&lt;/code&gt; or via an &lt;code&gt;'error'&lt;/code&gt; event on the &lt;code&gt;Http2Stream&lt;/code&gt;, &lt;code&gt;Http2Session&lt;/code&gt; or HTTP/2 Server objects, depending on where and when the error occurs.</source>
          <target state="translated">さまざまなHTTP / 2プロトコルの制約に違反すると、プロトコルエラーが発生します。これらは、エラーが発生した場所とタイミングに応じて、同期 &lt;code&gt;throw&lt;/code&gt; を使用するか、 &lt;code&gt;Http2Stream&lt;/code&gt; 、 &lt;code&gt;Http2Session&lt;/code&gt; 、またはHTTP / 2サーバーオブジェクトの &lt;code&gt;'error'&lt;/code&gt; イベントを介して報告されます。</target>
        </trans-unit>
        <trans-unit id="3b198e3442989fa4a3689376e625c3223e1db34c" translate="yes" xml:space="preserve">
          <source>Protocol versions are:</source>
          <target state="translated">プロトコルのバージョンは</target>
        </trans-unit>
        <trans-unit id="eb29f59c18852f12d855a2fa9b3651a9881ec7a7" translate="yes" xml:space="preserve">
          <source>Provided &lt;code&gt;require.cache&lt;/code&gt; is not modified, multiple calls to &lt;code&gt;require('foo')&lt;/code&gt; will not cause the module code to be executed multiple times. This is an important feature. With it, &quot;partially done&quot; objects can be returned, thus allowing transitive dependencies to be loaded even when they would cause cycles.</source>
          <target state="translated">提供 &lt;code&gt;require.cache&lt;/code&gt; が変更されない、複数の呼び出しがする &lt;code&gt;require('foo')&lt;/code&gt; モジュールコードが複数回実行されることはありません。これは重要な機能です。これを使用すると、「部分的に完了した」オブジェクトを返すことができるため、循環が発生する場合でも推移的な依存関係をロードできます。</target>
        </trans-unit>
        <trans-unit id="0c15028f134fa4c88efa3d7de86ae9936f73da16" translate="yes" xml:space="preserve">
          <source>Provides a synchronous &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;scrypt&lt;/a&gt; implementation. Scrypt is a password-based key derivation function that is designed to be expensive computationally and memory-wise in order to make brute-force attacks unrewarding.</source>
          <target state="translated">同期&lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;scrypt&lt;/a&gt;実装を提供します。Scryptはパスワードベースの鍵導出関数であり、ブルートフォース攻撃を無価値なものにするために、計算およびメモリのコストが高くなるように設計されています。</target>
        </trans-unit>
        <trans-unit id="eeab70e17b0b0e0845fd186040b5e0f5b565ce54" translate="yes" xml:space="preserve">
          <source>Provides a synchronous Password-Based Key Derivation Function 2 (PBKDF2) implementation. A selected HMAC digest algorithm specified by &lt;code&gt;digest&lt;/code&gt; is applied to derive a key of the requested byte length (&lt;code&gt;keylen&lt;/code&gt;) from the &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;salt&lt;/code&gt; and &lt;code&gt;iterations&lt;/code&gt;.</source>
          <target state="translated">同期のパスワードベースの鍵導出関数2（PBKDF2）実装を提供します。選択されたHMACダイジェストアルゴリズムによって指定された &lt;code&gt;digest&lt;/code&gt; 要求されたバイト長（のキー導き出すために適用され &lt;code&gt;keylen&lt;/code&gt; から） &lt;code&gt;password&lt;/code&gt; 、 &lt;code&gt;salt&lt;/code&gt; と &lt;code&gt;iterations&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="671bd8b3482bdbabbdbdc13642129e08deefce79" translate="yes" xml:space="preserve">
          <source>Provides an asynchronous &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;scrypt&lt;/a&gt; implementation. Scrypt is a password-based key derivation function that is designed to be expensive computationally and memory-wise in order to make brute-force attacks unrewarding.</source>
          <target state="translated">非同期の&lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;scrypt&lt;/a&gt;実装を提供します。Scryptはパスワードベースの鍵導出関数であり、ブルートフォース攻撃を無価値なものにするために、計算およびメモリのコストが高くなるように設計されています。</target>
        </trans-unit>
        <trans-unit id="28f74a902b84db45aac590c9e42f75d38af51ca5" translate="yes" xml:space="preserve">
          <source>Provides an asynchronous Password-Based Key Derivation Function 2 (PBKDF2) implementation. A selected HMAC digest algorithm specified by &lt;code&gt;digest&lt;/code&gt; is applied to derive a key of the requested byte length (&lt;code&gt;keylen&lt;/code&gt;) from the &lt;code&gt;password&lt;/code&gt;, &lt;code&gt;salt&lt;/code&gt; and &lt;code&gt;iterations&lt;/code&gt;.</source>
          <target state="translated">非同期のパスワードベースの鍵導出関数2（PBKDF2）実装を提供します。選択されたHMACダイジェストアルゴリズムによって指定された &lt;code&gt;digest&lt;/code&gt; 要求されたバイト長（のキー導き出すために適用され &lt;code&gt;keylen&lt;/code&gt; から） &lt;code&gt;password&lt;/code&gt; 、 &lt;code&gt;salt&lt;/code&gt; と &lt;code&gt;iterations&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="34eec4209af800878c03f529aec7398b061ddef6" translate="yes" xml:space="preserve">
          <source>Provides an object enumerating Zlib-related constants.</source>
          <target state="translated">Zlib関連の定数を列挙するオブジェクトを提供します。</target>
        </trans-unit>
        <trans-unit id="cca54bd7ec63a04da6ab61ba04a16a403e25d956" translate="yes" xml:space="preserve">
          <source>Provides general utility methods when interacting with instances of &lt;code&gt;Module&lt;/code&gt; &amp;mdash; the &lt;code&gt;module&lt;/code&gt; variable often seen in file modules. Accessed via &lt;code&gt;require('module')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; のインスタンスと対話するときに一般的なユーティリティメソッドを提供します&amp;mdash; ファイルモジュールでよく見られる &lt;code&gt;module&lt;/code&gt; 変数。 &lt;code&gt;require('module')&lt;/code&gt; を介してアクセスされます。</target>
        </trans-unit>
        <trans-unit id="86976b8c266ce5cb62c49fa552154b6074f635e6" translate="yes" xml:space="preserve">
          <source>Provides miscellaneous information about the current state of the &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; の現在の状態に関するさまざまな情報を提供します。</target>
        </trans-unit>
        <trans-unit id="1326cbdc3a0868919b0e32c44d1897dc8783d7a1" translate="yes" xml:space="preserve">
          <source>Provides miscellaneous information about the current state of the &lt;code&gt;Http2Stream&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Http2Stream&lt;/code&gt; の現在の状態に関するさまざまな情報を提供します。</target>
        </trans-unit>
        <trans-unit id="ad70e72f07264fd0bc24c8c411658b7f9c8a1b32" translate="yes" xml:space="preserve">
          <source>Provides the platform-specific path delimiter:</source>
          <target state="translated">プラットフォーム固有のパス区切り文字を提供します。</target>
        </trans-unit>
        <trans-unit id="67855b4b44a418b468f0d88f842eb5464fcdec60" translate="yes" xml:space="preserve">
          <source>Provides the platform-specific path segment separator:</source>
          <target state="translated">プラットフォーム固有のパスセグメントセパレータを提供します。</target>
        </trans-unit>
        <trans-unit id="ec57e8a11eb6beb37383d8d34ec129377ac0db36" translate="yes" xml:space="preserve">
          <source>Provides the set of JS engine resource constraints for this Worker thread. If the &lt;code&gt;resourceLimits&lt;/code&gt; option was passed to the &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; constructor, this matches its values.</source>
          <target state="translated">このワーカースレッドのJSエンジンリソース制約のセットを提供します。 &lt;code&gt;resourceLimits&lt;/code&gt; オプションが&lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;コンストラクターに渡された場合、これはその値と一致します。</target>
        </trans-unit>
        <trans-unit id="23ae937f6c6ba054b9da928b1405f874c4b249ff" translate="yes" xml:space="preserve">
          <source>Provides the set of JS engine resource constraints inside this Worker thread. If the &lt;code&gt;resourceLimits&lt;/code&gt; option was passed to the &lt;a href=&quot;#worker_threads_class_worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; constructor, this matches its values.</source>
          <target state="translated">このワーカースレッド内のJSエンジンリソース制約のセットを提供します。 &lt;code&gt;resourceLimits&lt;/code&gt; オプションが&lt;a href=&quot;#worker_threads_class_worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;コンストラクターに渡された場合、これはその値と一致します。</target>
        </trans-unit>
        <trans-unit id="6e28f21515cb14f988bc5355746c689a6b4390a1" translate="yes" xml:space="preserve">
          <source>Provides timing details for Node.js itself.</source>
          <target state="translated">Node.js自体のタイミングの詳細を提供します。</target>
        </trans-unit>
        <trans-unit id="cbc34debf2a361d24f06ccb998d8d42104d27f49" translate="yes" xml:space="preserve">
          <source>Provides timing details for Node.js itself. The constructor of this class is not exposed to users.</source>
          <target state="translated">Node.js 自体のタイミングの詳細を提供します。このクラスのコンストラクタはユーザに公開されていません。</target>
        </trans-unit>
        <trans-unit id="0ae13bf1edd59476003114625157218e8695bbb6" translate="yes" xml:space="preserve">
          <source>Providing &lt;code&gt;filename&lt;/code&gt; argument in the callback is only supported on Linux, macOS, Windows, and AIX. Even on supported platforms, &lt;code&gt;filename&lt;/code&gt; is not always guaranteed to be provided. Therefore, don't assume that &lt;code&gt;filename&lt;/code&gt; argument is always provided in the callback, and have some fallback logic if it is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">コールバックでの &lt;code&gt;filename&lt;/code&gt; 引数の提供は、Linux、macOS、Windows、およびAIXでのみサポートされています。サポートされているプラ​​ットフォームでも、 &lt;code&gt;filename&lt;/code&gt; が提供されるとは限りません。したがって、 &lt;code&gt;filename&lt;/code&gt; 引数が常にコールバックで提供されると想定しないでください。引数が &lt;code&gt;null&lt;/code&gt; の場合、いくつかのフォールバックロジックを使用してください。</target>
        </trans-unit>
        <trans-unit id="423d97867307641e5bfb4670da1a3d250f2b3cf4" translate="yes" xml:space="preserve">
          <source>Providing ICU data at runtime</source>
          <target state="translated">実行時にICUデータを提供</target>
        </trans-unit>
        <trans-unit id="6ae22c161ea98cdfc51e0fe5643ee1613027f054" translate="yes" xml:space="preserve">
          <source>Public API</source>
          <target state="translated">パブリックAPI</target>
        </trans-unit>
        <trans-unit id="600036ef4dd93f433b81d22b2c4158e4bab15338" translate="yes" xml:space="preserve">
          <source>Punycode</source>
          <target state="translated">Punycode</target>
        </trans-unit>
        <trans-unit id="f4f6f1bf430484188d9b8e0107bc80405c8c550c" translate="yes" xml:space="preserve">
          <source>Push streams on the client</source>
          <target state="translated">クライアント上のプッシュストリーム</target>
        </trans-unit>
        <trans-unit id="ad297c3b470a4f58a6487e3378b107be2593c542" translate="yes" xml:space="preserve">
          <source>Pushing a zero-byte string, &lt;code&gt;Buffer&lt;/code&gt; or &lt;code&gt;Uint8Array&lt;/code&gt; to a stream that is not in object mode has an interesting side effect. Because it &lt;em&gt;is&lt;/em&gt; a call to &lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt;&lt;code&gt;readable.push()&lt;/code&gt;&lt;/a&gt;, the call will end the reading process. However, because the argument is an empty string, no data is added to the readable buffer so there is nothing for a user to consume.</source>
          <target state="translated">0バイト文字列、 &lt;code&gt;Buffer&lt;/code&gt; 、または &lt;code&gt;Uint8Array&lt;/code&gt; をオブジェクトモードでないストリームにプッシュすると、興味深い副作用が生じます。これ&lt;em&gt;は&lt;/em&gt;&lt;a href=&quot;#stream_readable_push_chunk_encoding&quot;&gt; &lt;code&gt;readable.push()&lt;/code&gt; の&lt;/a&gt;呼び出しなので、呼び出しは読み取りプロセスを終了します。ただし、引数は空の文字列であるため、読み取り可能なバッファーにデータは追加されないため、ユーザーが使用するものはありません。</target>
        </trans-unit>
        <trans-unit id="c49a13f303ff804cc28c2df646069f2275fed36e" translate="yes" xml:space="preserve">
          <source>Putting together all of the above, here is the high-level algorithm in pseudocode of what &lt;code&gt;require()&lt;/code&gt; does:</source>
          <target state="translated">上記のすべてをまとめると、 &lt;code&gt;require()&lt;/code&gt; が実行する処理の疑似コード内の高レベルアルゴリズムは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="fc58d1871ca5b0c182173d616404a1ecb2d6c3fd" translate="yes" xml:space="preserve">
          <source>Query String</source>
          <target state="translated">クエリ文字列</target>
        </trans-unit>
        <trans-unit id="076be96f4dae094d0076aa47a176bbe952ccc89c" translate="yes" xml:space="preserve">
          <source>Query Strings</source>
          <target state="translated">クエリ文字列</target>
        </trans-unit>
        <trans-unit id="206b06ce5521136c11e6e475bdaa1b65cb9f9eea" translate="yes" xml:space="preserve">
          <source>Query string</source>
          <target state="translated">クエリ文字列</target>
        </trans-unit>
        <trans-unit id="259cd35285b7f492b57a6c1a9b7b3f512f463350" translate="yes" xml:space="preserve">
          <source>Query strings</source>
          <target state="translated">クエリ文字列</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="73775a59948e85039bd898e23e868a9ee126c00f" translate="yes" xml:space="preserve">
          <source>REPL</source>
          <target state="translated">REPL</target>
        </trans-unit>
        <trans-unit id="92e6317b431b79746e56b224cb48154bd3fd2791" translate="yes" xml:space="preserve">
          <source>RangeError</source>
          <target state="translated">RangeError</target>
        </trans-unit>
        <trans-unit id="73a558c834408d5c23ec4695d745a8f2a7e71a24" translate="yes" xml:space="preserve">
          <source>Ranges from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;15 &amp;lt;&amp;lt; NPOSTFIX&lt;/code&gt; in steps of &lt;code&gt;1 &amp;lt;&amp;lt; NPOSTFIX&lt;/code&gt;.</source>
          <target state="translated">範囲である &lt;code&gt;0&lt;/code&gt; へ &lt;code&gt;15 &amp;lt;&amp;lt; NPOSTFIX&lt;/code&gt; のステップで &lt;code&gt;1 &amp;lt;&amp;lt; NPOSTFIX&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fe84bc838dde0db273bd3df4f3f71b2b5448eff0" translate="yes" xml:space="preserve">
          <source>Ranges from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;BROTLI_MAX_NPOSTFIX&lt;/code&gt;.</source>
          <target state="translated">範囲であり、 &lt;code&gt;0&lt;/code&gt; に &lt;code&gt;BROTLI_MAX_NPOSTFIX&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7e1f1ec43312a6f92748690eb53428502b0fd70" translate="yes" xml:space="preserve">
          <source>Ranges from &lt;code&gt;BROTLI_MIN_INPUT_BLOCK_BITS&lt;/code&gt; to &lt;code&gt;BROTLI_MAX_INPUT_BLOCK_BITS&lt;/code&gt;.</source>
          <target state="translated">範囲は &lt;code&gt;BROTLI_MIN_INPUT_BLOCK_BITS&lt;/code&gt; から &lt;code&gt;BROTLI_MAX_INPUT_BLOCK_BITS&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a36fb1fbbc4b058e775ad3f8d98956c7de281db4" translate="yes" xml:space="preserve">
          <source>Ranges from &lt;code&gt;BROTLI_MIN_QUALITY&lt;/code&gt; to &lt;code&gt;BROTLI_MAX_QUALITY&lt;/code&gt;, with a default of &lt;code&gt;BROTLI_DEFAULT_QUALITY&lt;/code&gt;.</source>
          <target state="translated">範囲は &lt;code&gt;BROTLI_MIN_QUALITY&lt;/code&gt; から &lt;code&gt;BROTLI_MAX_QUALITY&lt;/code&gt; で、デフォルトは &lt;code&gt;BROTLI_DEFAULT_QUALITY&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="619c2d1751063f8f10517bc8824cc89009a9dc83" translate="yes" xml:space="preserve">
          <source>Ranges from &lt;code&gt;BROTLI_MIN_WINDOW_BITS&lt;/code&gt; to &lt;code&gt;BROTLI_MAX_WINDOW_BITS&lt;/code&gt;, with a default of &lt;code&gt;BROTLI_DEFAULT_WINDOW&lt;/code&gt;, or up to &lt;code&gt;BROTLI_LARGE_MAX_WINDOW_BITS&lt;/code&gt; if the &lt;code&gt;BROTLI_PARAM_LARGE_WINDOW&lt;/code&gt; flag is set.</source>
          <target state="translated">範囲は &lt;code&gt;BROTLI_MIN_WINDOW_BITS&lt;/code&gt; から &lt;code&gt;BROTLI_MAX_WINDOW_BITS&lt;/code&gt; で、デフォルトは &lt;code&gt;BROTLI_DEFAULT_WINDOW&lt;/code&gt; です &lt;code&gt;BROTLI_PARAM_LARGE_WINDOW&lt;/code&gt; フラグが設定されている場合は最大 &lt;code&gt;BROTLI_LARGE_MAX_WINDOW_BITS&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="49473280b3f01a4a1832170f8480aec3105d0042" translate="yes" xml:space="preserve">
          <source>Rather than calling &lt;code&gt;process.exit()&lt;/code&gt; directly, the code &lt;em&gt;should&lt;/em&gt; set the &lt;code&gt;process.exitCode&lt;/code&gt; and allow the process to exit naturally by avoiding scheduling any additional work for the event loop:</source>
          <target state="translated">コード&lt;em&gt;は&lt;/em&gt;、 &lt;code&gt;process.exit()&lt;/code&gt; を直接呼び出すのではなく、 &lt;code&gt;process.exitCode&lt;/code&gt; を設定し、イベントループの追加作業のスケジュールを回避することにより、プロセスが自然に終了できるようにする&lt;em&gt;必要&lt;/em&gt;があります。</target>
        </trans-unit>
        <trans-unit id="e87d50c3f9f679c215b3d236646e293484972476" translate="yes" xml:space="preserve">
          <source>Rather than emitting an error, &lt;code&gt;process.stderr.end()&lt;/code&gt; now only closes the stream side but not the underlying resource, making this error obsolete.</source>
          <target state="translated">エラーを出力するのではなく、 &lt;code&gt;process.stderr.end()&lt;/code&gt; はストリーム側のみを閉じるようになりましたが、基になるリソースは閉じないため、このエラーは廃止されました。</target>
        </trans-unit>
        <trans-unit id="072d4cf268b7aceb4a63b9acadee2bedbe504737" translate="yes" xml:space="preserve">
          <source>Rather than waiting for calls to the &lt;a href=&quot;#stream_readable_read_size&quot;&gt;&lt;code&gt;stream.read()&lt;/code&gt;&lt;/a&gt; method, &lt;a href=&quot;#stream_event_data&quot;&gt;&lt;code&gt;'data'&lt;/code&gt;&lt;/a&gt; events would begin emitting immediately. Applications that would need to perform some amount of work to decide how to handle data were required to store read data into buffers so the data would not be lost.</source>
          <target state="translated">&lt;a href=&quot;#stream_event_data&quot;&gt; &lt;code&gt;'data'&lt;/code&gt; &lt;/a&gt;イベントは、&lt;a href=&quot;#stream_readable_read_size&quot;&gt; &lt;code&gt;stream.read()&lt;/code&gt; &lt;/a&gt;メソッドの呼び出しを待つのではなく、すぐに発行を開始します。データの処理方法を決定するためにある程度の作業を実行する必要があるアプリケーションは、読み取りデータをバッファーに格納してデータが失われないようにする必要がありました。</target>
        </trans-unit>
        <trans-unit id="e416dba574a149f94ecc4e249323d96f61895c6f" translate="yes" xml:space="preserve">
          <source>Re-encodes the given &lt;code&gt;Buffer&lt;/code&gt; or &lt;code&gt;Uint8Array&lt;/code&gt; instance from one character encoding to another. Returns a new &lt;code&gt;Buffer&lt;/code&gt; instance.</source>
          <target state="translated">指定された &lt;code&gt;Buffer&lt;/code&gt; または &lt;code&gt;Uint8Array&lt;/code&gt; インスタンスを、ある文字エンコードから別の文字エンコードに再エンコードします。新しい &lt;code&gt;Buffer&lt;/code&gt; インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="dbd00159e8482026240bd9581ebd27c65e0cdb79" translate="yes" xml:space="preserve">
          <source>Re-map the Node.js static code to large memory pages at startup. If supported on the target system, this will cause the Node.js static code to be moved onto 2 MiB pages instead of 4 KiB pages.</source>
          <target state="translated">起動時にNode.jsの静的コードを大容量メモリページに再マッピングします。ターゲットシステムでサポートされている場合、これによりNode.jsの静的コードは4KiBページではなく2MiBページに移動されます。</target>
        </trans-unit>
        <trans-unit id="623222be33f85922759dcb4bc2840b36a6a6275e" translate="yes" xml:space="preserve">
          <source>Read a JS &lt;code&gt;number&lt;/code&gt; value. For use inside of a custom &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt;&lt;code&gt;deserializer._readHostObject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JS &lt;code&gt;number&lt;/code&gt; 値を読み取ります。カスタム&lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt; &lt;code&gt;deserializer._readHostObject()&lt;/code&gt; &lt;/a&gt;内で使用します。</target>
        </trans-unit>
        <trans-unit id="479c6b2b23e67dd3c363c728e9b671fb759cf26a" translate="yes" xml:space="preserve">
          <source>Read a raw 32-bit unsigned integer and return it. For use inside of a custom &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt;&lt;code&gt;deserializer._readHostObject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">生の32ビット符号なし整数を読み取り、それを返します。カスタム&lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt; &lt;code&gt;deserializer._readHostObject()&lt;/code&gt; &lt;/a&gt;内で使用します。</target>
        </trans-unit>
        <trans-unit id="6628472c8b59ba02e5848460448095256f84f63a" translate="yes" xml:space="preserve">
          <source>Read a raw 64-bit unsigned integer and return it as an array &lt;code&gt;[hi, lo]&lt;/code&gt; with two 32-bit unsigned integer entries. For use inside of a custom &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt;&lt;code&gt;deserializer._readHostObject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">生の64ビット符号なし整数を読み取り、2つの32ビット符号なし整数エントリを持つ配列 &lt;code&gt;[hi, lo]&lt;/code&gt; として返します。カスタム&lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt; &lt;code&gt;deserializer._readHostObject()&lt;/code&gt; &lt;/a&gt;内で使用します。</target>
        </trans-unit>
        <trans-unit id="59ce8b18338cb003a5eb344e97ace21f7db9a6cd" translate="yes" xml:space="preserve">
          <source>Read data from the file specified by &lt;code&gt;fd&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; で指定されたファイルからデータを読み取ります。</target>
        </trans-unit>
        <trans-unit id="1e9653f0a30ac773e8e9cec6a8aa46baaee6e015" translate="yes" xml:space="preserve">
          <source>Read data from the file.</source>
          <target state="translated">ファイルからデータを読み込みます。</target>
        </trans-unit>
        <trans-unit id="8a46ae032e8f643c9a43b2d7934746aadeb89f8c" translate="yes" xml:space="preserve">
          <source>Read from a file and write to an array of &lt;code&gt;ArrayBufferView&lt;/code&gt;s</source>
          <target state="translated">ファイルから読み取り、 &lt;code&gt;ArrayBufferView&lt;/code&gt; の配列に書き込みます。</target>
        </trans-unit>
        <trans-unit id="875b11002af9351243e81010c1683541b928e807" translate="yes" xml:space="preserve">
          <source>Read from a file specified by &lt;code&gt;fd&lt;/code&gt; and write to an array of &lt;code&gt;ArrayBufferView&lt;/code&gt;s using &lt;code&gt;readv()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fd&lt;/code&gt; で指定されたファイルから読み取り、 &lt;code&gt;readv()&lt;/code&gt; を使用して &lt;code&gt;ArrayBufferView&lt;/code&gt; の配列に書き込みます。</target>
        </trans-unit>
        <trans-unit id="350f1abe715c076469943ce23239c968fc3ee0f4" translate="yes" xml:space="preserve">
          <source>Read raw bytes from the deserializer&amp;rsquo;s internal buffer. The &lt;code&gt;length&lt;/code&gt; parameter must correspond to the length of the buffer that was passed to &lt;a href=&quot;#v8_serializer_writerawbytes_buffer&quot;&gt;&lt;code&gt;serializer.writeRawBytes()&lt;/code&gt;&lt;/a&gt;. For use inside of a custom &lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt;&lt;code&gt;deserializer._readHostObject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">デシリアライザの内部バッファから生のバイトを読み取ります。 &lt;code&gt;length&lt;/code&gt; パラメータが渡されたバッファの長さに対応しなければならない&lt;a href=&quot;#v8_serializer_writerawbytes_buffer&quot;&gt; &lt;code&gt;serializer.writeRawBytes()&lt;/code&gt; &lt;/a&gt;。カスタム&lt;a href=&quot;#v8_deserializer_readhostobject&quot;&gt; &lt;code&gt;deserializer._readHostObject()&lt;/code&gt; &lt;/a&gt;内で使用します。</target>
        </trans-unit>
        <trans-unit id="cc55213cdd15ca1bbab1499008d56f7fd8bb160c" translate="yes" xml:space="preserve">
          <source>Read through the debug output. The first connection should say &quot;New&quot;, for example:</source>
          <target state="translated">デバッグ出力を読んでみてください。最初の接続は、例えば「New」と書かれているはずです。</target>
        </trans-unit>
        <trans-unit id="268bc4e394cb29df42fae486d00becbf9255636f" translate="yes" xml:space="preserve">
          <source>Read-only property mapped to the &lt;code&gt;SETTINGS_ENABLE_PUSH&lt;/code&gt; flag of the remote client's most recent &lt;code&gt;SETTINGS&lt;/code&gt; frame. Will be &lt;code&gt;true&lt;/code&gt; if the remote peer accepts push streams, &lt;code&gt;false&lt;/code&gt; otherwise. Settings are the same for every &lt;code&gt;Http2Stream&lt;/code&gt; in the same &lt;code&gt;Http2Session&lt;/code&gt;.</source>
          <target state="translated">リモートクライアントの最新の &lt;code&gt;SETTINGS&lt;/code&gt; フレームの &lt;code&gt;SETTINGS_ENABLE_PUSH&lt;/code&gt; フラグにマップされた読み取り専用プロパティ。なり &lt;code&gt;true&lt;/code&gt; リモートピアは、プッシュ・ストリームを受け入れる場合 &lt;code&gt;false&lt;/code&gt; そう。設定は、同じ &lt;code&gt;Http2Stream&lt;/code&gt; すべてのHttp2Streamで同じ &lt;code&gt;Http2Session&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2e2ec5f4d80c9ac33aa8f72da2e88f56b8d622c1" translate="yes" xml:space="preserve">
          <source>Read-only property specifying the maximum allowed size of HTTP headers in bytes. Defaults to 8KB. Configurable using the &lt;a href=&quot;cli#cli_max_http_header_size_size&quot;&gt;&lt;code&gt;--max-http-header-size&lt;/code&gt;&lt;/a&gt; CLI option.</source>
          <target state="translated">HTTPヘッダーの最大許容サイズをバイト単位で指定する読み取り専用プロパティ。デフォルトは8KBです。&lt;a href=&quot;cli#cli_max_http_header_size_size&quot;&gt; &lt;code&gt;--max-http-header-size&lt;/code&gt; &lt;/a&gt; CLIオプションを使用して設定可能。</target>
        </trans-unit>
        <trans-unit id="16ad5532401355b48824a3ad0fbdcda8662d9094" translate="yes" xml:space="preserve">
          <source>Readable Streams</source>
          <target state="translated">読み取り可能なストリーム</target>
        </trans-unit>
        <trans-unit id="27e7ec72ff450dffcb40780d1c8122cc6fe15275" translate="yes" xml:space="preserve">
          <source>Readable streams</source>
          <target state="translated">読み取り可能なストリーム</target>
        </trans-unit>
        <trans-unit id="9e6492ac9b38e065b18ddf889a3cd4369470057e" translate="yes" xml:space="preserve">
          <source>Readable streams are an abstraction for a &lt;em&gt;source&lt;/em&gt; from which data is consumed.</source>
          <target state="translated">読み取り可能なストリームは、データが消費される&lt;em&gt;ソース&lt;/em&gt;を抽象化したもの&lt;em&gt;です&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="ceb93f69e25dd4f67fafd5c0c9bcf1b6c00353d6" translate="yes" xml:space="preserve">
          <source>Reading and writing</source>
          <target state="translated">読み書き</target>
        </trans-unit>
        <trans-unit id="44ac5e30f92164ff15b5a3d99babd48c470aaa74" translate="yes" xml:space="preserve">
          <source>Reading only</source>
          <target state="translated">読書のみ</target>
        </trans-unit>
        <trans-unit id="2755293789538b24cd3e2e278f82a4c989b92a15" translate="yes" xml:space="preserve">
          <source>Readline</source>
          <target state="translated">Readline</target>
        </trans-unit>
        <trans-unit id="003e6cfc4a6386f75248f81eb1dd52d3dcaafaeb" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as a big-endian, two's complement signed value supporting up to 48 bits of accuracy.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から &lt;code&gt;byteLength&lt;/code&gt; バイト数を読み取り、その結果をビッグエンディアン、最大48ビットの精度をサポートする2の補数符号付き値として解釈します。</target>
        </trans-unit>
        <trans-unit id="6bdeb476294744c365320747386306932e9fe457" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as a little-endian, two's complement signed value supporting up to 48 bits of accuracy.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から &lt;code&gt;byteLength&lt;/code&gt; バイト数を読み取り、結果をリトルエンディアン、最大48ビットの精度をサポートする2の補数符号付き値として解釈します。</target>
        </trans-unit>
        <trans-unit id="32d2d033a19ffa24c65f1c109f371a73977400d9" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as a two's complement signed value. Supports up to 48 bits of accuracy.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から &lt;code&gt;byteLength&lt;/code&gt; バイト数を読み取り、その結果を2の補数の符号付き値として解釈します。最大48ビットの精度をサポートします。</target>
        </trans-unit>
        <trans-unit id="65be5c132b2a7f185c6e16c52f1d90d227d548d9" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as an unsigned big-endian integer supporting up to 48 bits of accuracy.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から &lt;code&gt;byteLength&lt;/code&gt; バイト数を読み取り、その結果を最大48ビットの精度をサポートする符号なしビッグエンディアン整数として解釈します。</target>
        </trans-unit>
        <trans-unit id="4189ea81ab4cd4dcf9d7462997b6d51031a35777" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as an unsigned integer. Supports up to 48 bits of accuracy.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から &lt;code&gt;byteLength&lt;/code&gt; バイト数を読み取り、その結果を符号なし整数として解釈します。最大48ビットの精度をサポートします。</target>
        </trans-unit>
        <trans-unit id="b282fb364a58e3926f5b700cb0309cb8171c48f5" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;byteLength&lt;/code&gt; number of bytes from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; and interprets the result as an unsigned, little-endian integer supporting up to 48 bits of accuracy.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から &lt;code&gt;byteLength&lt;/code&gt; バイト数を読み取り、その結果を最大48ビットの精度をサポートする符号なしリトルエンディアン整数として解釈します。</target>
        </trans-unit>
        <trans-unit id="d7c25cbe698485381fede8d70e2c9be67d367225" translate="yes" xml:space="preserve">
          <source>Reads a 32-bit float from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with specified endian format (&lt;code&gt;readFloatBE()&lt;/code&gt; returns big endian, &lt;code&gt;readFloatLE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">指定されたエンディアン形式の指定された &lt;code&gt;offset&lt;/code&gt; で &lt;code&gt;buf&lt;/code&gt; から32ビットfloatを読み取ります（ &lt;code&gt;readFloatBE()&lt;/code&gt; はビッグエンディアンを返し、 &lt;code&gt;readFloatLE()&lt;/code&gt; はリトルエンディアンを返します）。</target>
        </trans-unit>
        <trans-unit id="e782a844a8884c76683545d2dbede5abd5a393ac" translate="yes" xml:space="preserve">
          <source>Reads a 32-bit, big-endian float from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から32ビットのビッグエンディアンフロートを読み取ります。</target>
        </trans-unit>
        <trans-unit id="323c10e3fb20039e769ab7b9e0bd440eae10b19b" translate="yes" xml:space="preserve">
          <source>Reads a 32-bit, little-endian float from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から32ビットのリトルエンディアンフロートを読み取ります。</target>
        </trans-unit>
        <trans-unit id="d2edaf0ce341cda679e006ea5a4cca48fae0daff" translate="yes" xml:space="preserve">
          <source>Reads a 64-bit double from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with specified endian format (&lt;code&gt;readDoubleBE()&lt;/code&gt; returns big endian, &lt;code&gt;readDoubleLE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">指定されたエンディアン形式の指定された &lt;code&gt;offset&lt;/code&gt; で &lt;code&gt;buf&lt;/code&gt; から64ビットdoubleを読み取ります（ &lt;code&gt;readDoubleBE()&lt;/code&gt; はビッグエンディアンを返し、 &lt;code&gt;readDoubleLE()&lt;/code&gt; はリトルエンディアンを返します）。</target>
        </trans-unit>
        <trans-unit id="99f29ff0cb3d8ea04de297a6c135848cd3e8be6a" translate="yes" xml:space="preserve">
          <source>Reads a 64-bit, big-endian double from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から64ビットのビッグエンディアンdoubleを読み取ります。</target>
        </trans-unit>
        <trans-unit id="64f4f66d32c023775fffbec83cc2ae2ae0dcb077" translate="yes" xml:space="preserve">
          <source>Reads a 64-bit, little-endian double from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から64ビットのリトルエンディアンdoubleを読み取ります。</target>
        </trans-unit>
        <trans-unit id="3e499677be257aef94079fd43ba014820e0eaf74" translate="yes" xml:space="preserve">
          <source>Reads a signed 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with the specified endian format (&lt;code&gt;readInt16BE()&lt;/code&gt; returns big endian, &lt;code&gt;readInt16LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">指定されたエンディアン形式で指定された &lt;code&gt;offset&lt;/code&gt; で &lt;code&gt;buf&lt;/code&gt; から符号付き16ビット整数を読み取ります（ &lt;code&gt;readInt16BE()&lt;/code&gt; はビッグエンディアンを返し、 &lt;code&gt;readInt16LE()&lt;/code&gt; はリトルエンディアンを返します）。</target>
        </trans-unit>
        <trans-unit id="29ef095a4521e31a0fac666fa51f3ebac6494b14" translate="yes" xml:space="preserve">
          <source>Reads a signed 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with the specified endian format (&lt;code&gt;readInt32BE()&lt;/code&gt; returns big endian, &lt;code&gt;readInt32LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">指定されたエンディアン形式で指定された &lt;code&gt;offset&lt;/code&gt; で &lt;code&gt;buf&lt;/code&gt; から符号付き32ビット整数を読み取ります（ &lt;code&gt;readInt32BE()&lt;/code&gt; はビッグエンディアンを返し、 &lt;code&gt;readInt32LE()&lt;/code&gt; はリトルエンディアンを返します）。</target>
        </trans-unit>
        <trans-unit id="108cf67413ffd3740ba5d0b7f786008ac5ab1113" translate="yes" xml:space="preserve">
          <source>Reads a signed 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with the specified endian format (&lt;code&gt;readBigInt64BE()&lt;/code&gt; returns big endian, &lt;code&gt;readBigInt64LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">指定されたエンディアン形式の指定された &lt;code&gt;offset&lt;/code&gt; で &lt;code&gt;buf&lt;/code&gt; から符号付き64ビット整数を読み取ります（ &lt;code&gt;readBigInt64BE()&lt;/code&gt; はビッグエンディアンを返し、 &lt;code&gt;readBigInt64LE()&lt;/code&gt; はリトルエンディアンを返します）。</target>
        </trans-unit>
        <trans-unit id="ddf179054c104315d5413710c1e2aec21112c058" translate="yes" xml:space="preserve">
          <source>Reads a signed 8-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号付き8ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="175ce9b7d04d510f16b6aaef57112d6ae2cf4bd8" translate="yes" xml:space="preserve">
          <source>Reads a signed, big-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号付きビッグエンディアン16ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="6ed96d1458ba729626be024f02eaae9abc6ad481" translate="yes" xml:space="preserve">
          <source>Reads a signed, big-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号付きビッグエンディアン32ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="8c6a6f5b329aa72afec7a5ea5449a729f3a40a77" translate="yes" xml:space="preserve">
          <source>Reads a signed, big-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号付きビッグエンディアン64ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="a63a332328383ce6de982ace7b122dfde9139033" translate="yes" xml:space="preserve">
          <source>Reads a signed, little-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号付きリトルエンディアン16ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="4b363e9ea2a152294a37fae3fbb5a0d1606cca3f" translate="yes" xml:space="preserve">
          <source>Reads a signed, little-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号付きリトルエンディアン32ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="f31b635253131e2d6bce53c63dfceb946acc0f29" translate="yes" xml:space="preserve">
          <source>Reads a signed, little-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号付きリトルエンディアン64ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="0b3c2a4a6d208adb7498e2bd675e58b6b100581d" translate="yes" xml:space="preserve">
          <source>Reads an unsigned 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with specified endian format (&lt;code&gt;readUInt16BE()&lt;/code&gt; returns big endian, &lt;code&gt;readUInt16LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">指定されたエンディアン形式で指定された &lt;code&gt;offset&lt;/code&gt; で &lt;code&gt;buf&lt;/code&gt; から符号なし16ビット整数を読み取ります（ &lt;code&gt;readUInt16BE()&lt;/code&gt; はビッグエンディアンを返し、 &lt;code&gt;readUInt16LE()&lt;/code&gt; はリトルエンディアンを返します）。</target>
        </trans-unit>
        <trans-unit id="43f24416e70c75877a074b862fdd686d83f6b53b" translate="yes" xml:space="preserve">
          <source>Reads an unsigned 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with specified endian format (&lt;code&gt;readUInt32BE()&lt;/code&gt; returns big endian, &lt;code&gt;readUInt32LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">指定されたエンディアン形式で指定された &lt;code&gt;offset&lt;/code&gt; で &lt;code&gt;buf&lt;/code&gt; から符号なし32ビット整数を読み取ります（ &lt;code&gt;readUInt32BE()&lt;/code&gt; はビッグエンディアンを返し、 &lt;code&gt;readUInt32LE()&lt;/code&gt; はリトルエンディアンを返します）。</target>
        </trans-unit>
        <trans-unit id="545500aca09845013eea94c5817eb7546fdb1447" translate="yes" xml:space="preserve">
          <source>Reads an unsigned 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt; with specified endian format (&lt;code&gt;readBigUInt64BE()&lt;/code&gt; returns big endian, &lt;code&gt;readBigUInt64LE()&lt;/code&gt; returns little endian).</source>
          <target state="translated">指定されたエンディアン形式で指定された &lt;code&gt;offset&lt;/code&gt; で &lt;code&gt;buf&lt;/code&gt; から符号なし64ビット整数を読み取ります（ &lt;code&gt;readBigUInt64BE()&lt;/code&gt; はビッグエンディアンを返し、 &lt;code&gt;readBigUInt64LE()&lt;/code&gt; はリトルエンディアンを返します）。</target>
        </trans-unit>
        <trans-unit id="d6daccb70280e74a5b1c5281fe90fedadbd661ce" translate="yes" xml:space="preserve">
          <source>Reads an unsigned 8-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号なし8ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="a20ddd6d2192086f3149736ef69715d774e55a15" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, big-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号なしビッグエンディアン16ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="90caa657f3a7c78c1ac0e74e8cd60591760e588f" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, big-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号なしビッグエンディアン32ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="714505b70ae07fdd65953236a96d5c3d219da2f6" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, big-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号なしビッグエンディアン64ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="e4c1cb2f1f63ff46c613700e47daa38b6becac50" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, little-endian 16-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号なしリトルエンディアンの16ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="708b484f6ae8db20cbc80b98ce58edfccfc8742a" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, little-endian 32-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号なしリトルエンディアンの32ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="baea91c0e117d276b5a89bba8fb9ac6d62019041" translate="yes" xml:space="preserve">
          <source>Reads an unsigned, little-endian 64-bit integer from &lt;code&gt;buf&lt;/code&gt; at the specified &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;offset&lt;/code&gt; &lt;code&gt;buf&lt;/code&gt; から符号なしリトルエンディアン64ビット整数を読み取ります。</target>
        </trans-unit>
        <trans-unit id="150da24c3abf9c4c64cc460c321ec1255e6333ae" translate="yes" xml:space="preserve">
          <source>Reads and validates a header (including the format version). May, for example, reject an invalid or unsupported wire format. In that case, an &lt;code&gt;Error&lt;/code&gt; is thrown.</source>
          <target state="translated">ヘッダー（フォーマットバージョンを含む）を読み取って検証します。たとえば、無効またはサポートされていないワイヤフォーマットを拒否する場合があります。その場合、 &lt;code&gt;Error&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="97575c02de70dda4247da0ea2a67276fef9666d6" translate="yes" xml:space="preserve">
          <source>Reads out a header on the request. The name is case-insensitive. The type of the return value depends on the arguments provided to &lt;a href=&quot;#http_request_setheader_name_value&quot;&gt;&lt;code&gt;request.setHeader()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リクエストのヘッダーを読み取ります。名前は大文字と小文字が区別されません。戻り値のタイプは、&lt;a href=&quot;#http_request_setheader_name_value&quot;&gt; &lt;code&gt;request.setHeader()&lt;/code&gt; に&lt;/a&gt;提供される引数によって異なります。</target>
        </trans-unit>
        <trans-unit id="a371e801b9b6617b73258b9ef4b995e7d60c0151" translate="yes" xml:space="preserve">
          <source>Reads out a header that has already been queued but not sent to the client. The name is case-insensitive.</source>
          <target state="translated">既にキューに入っているがクライアントには送信されていないヘッダを読み出します。名前は大文字小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="8a9d93232ab860196f9ba53fa70f189d0ed16e2f" translate="yes" xml:space="preserve">
          <source>Reads out a header that's already been queued but not sent to the client. The name is case-insensitive. The type of the return value depends on the arguments provided to &lt;a href=&quot;#http_response_setheader_name_value&quot;&gt;&lt;code&gt;response.setHeader()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">すでにキューに入れられているがクライアントには送信されていないヘッダーを読み取ります。名前は大文字と小文字が区別されません。戻り値のタイプは、&lt;a href=&quot;#http_response_setheader_name_value&quot;&gt; &lt;code&gt;response.setHeader()&lt;/code&gt; に&lt;/a&gt;提供される引数によって異なります。</target>
        </trans-unit>
        <trans-unit id="77ed5137d8e9579b44a6cab74cec4901b7acf6ad" translate="yes" xml:space="preserve">
          <source>Reads the contents of a directory then resolves the &lt;code&gt;Promise&lt;/code&gt; with an array of the names of the files in the directory excluding &lt;code&gt;'.'&lt;/code&gt; and &lt;code&gt;'..'&lt;/code&gt;.</source>
          <target state="translated">ディレクトリの内容を読み取り、 &lt;code&gt;'.'&lt;/code&gt; を除くディレクトリ内のファイルの名前の配列で &lt;code&gt;Promise&lt;/code&gt; を解決します。および &lt;code&gt;'..'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc0fe6fe29a25ab46444a3d3eb37f0c6a5fc70f1" translate="yes" xml:space="preserve">
          <source>Reads the underlying wire format version. Likely mostly to be useful to legacy code reading old wire format versions. May not be called before &lt;code&gt;.readHeader()&lt;/code&gt;.</source>
          <target state="translated">基本となるワイヤフォーマットバージョンを読み取ります。ほとんどの場合、古いワイヤー形式のバージョンを読み取るレガシーコードに役立ちます。 &lt;code&gt;.readHeader()&lt;/code&gt; の前に呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="3457427973a1a8aec098f23d0df9bd56be97853a" translate="yes" xml:space="preserve">
          <source>Receive a single message from a given &lt;code&gt;MessagePort&lt;/code&gt;. If no message is available, &lt;code&gt;undefined&lt;/code&gt; is returned, otherwise an object with a single &lt;code&gt;message&lt;/code&gt; property that contains the message payload, corresponding to the oldest message in the &lt;code&gt;MessagePort&lt;/code&gt;&amp;rsquo;s queue.</source>
          <target state="translated">指定された &lt;code&gt;MessagePort&lt;/code&gt; から単一のメッセージを受信します。使用可能なメッセージがない場合、 &lt;code&gt;undefined&lt;/code&gt; が返されます。それ以外の場合は、 &lt;code&gt;MessagePort&lt;/code&gt; のキュー内の最も古いメッセージに対応する、メッセージペイロードを含む単一の &lt;code&gt;message&lt;/code&gt; プロパティを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="91869fff46dfb0abe88a4d8fd2dd9e191e0ca4e9" translate="yes" xml:space="preserve">
          <source>Recent ECDH Changes</source>
          <target state="translated">最近のECDHの変化</target>
        </trans-unit>
        <trans-unit id="1d85af69b48f964feb1715a89a342f94b3ad7510" translate="yes" xml:space="preserve">
          <source>Recent ECDH changes</source>
          <target state="translated">最近のECDHの変化</target>
        </trans-unit>
        <trans-unit id="067062e444eecf689ecb7f4ca7d9d324b38c3c8a" translate="yes" xml:space="preserve">
          <source>Recoverable Errors</source>
          <target state="translated">回復可能なエラー</target>
        </trans-unit>
        <trans-unit id="2de988cb731df4437ddd49d61b6eec3a762206e7" translate="yes" xml:space="preserve">
          <source>Recoverable errors</source>
          <target state="translated">回復可能なエラー</target>
        </trans-unit>
        <trans-unit id="51831c0535b85f30395c9b6b76211c69b9010388" translate="yes" xml:space="preserve">
          <source>Recursion stops when both sides differ or both sides encounter a circular reference.</source>
          <target state="translated">両者が異なる場合や、両者が循環参照に遭遇した場合は、再帰が停止します。</target>
        </trans-unit>
        <trans-unit id="f4d3b515fac19a2424b2229ce822e329ed03ca12" translate="yes" xml:space="preserve">
          <source>Redirected dependencies can provide attenuated or modified functionality as fits the application. For example, log data about timing of function durations by wrapping the original:</source>
          <target state="translated">リダイレクトされた依存関係は、アプリケーションに合わせて機能を減衰させたり、変更したりすることができます。例えば、関数の持続時間のタイミングに関するデータを、元の関数をラップしてログに記録します。</target>
        </trans-unit>
        <trans-unit id="b84857d524e01113de84de33d4b6d0c26e26c415" translate="yes" xml:space="preserve">
          <source>Redirection does not prevent access to APIs through means such as direct access to &lt;code&gt;require.cache&lt;/code&gt; or through &lt;code&gt;module.constructor&lt;/code&gt; which allow access to loading modules. Policy redirection only affects specifiers to &lt;code&gt;require()&lt;/code&gt; and &lt;code&gt;import&lt;/code&gt;. Other means, such as to prevent undesired access to APIs through variables, are necessary to lock down that path of loading modules.</source>
          <target state="translated">リダイレクトは、 &lt;code&gt;require.cache&lt;/code&gt; への直接アクセスや、読み込み中のモジュールへのアクセスを許可する &lt;code&gt;module.constructor&lt;/code&gt; などの手段によるAPIへのアクセスを妨げません。ポリシーリダイレクトは、 &lt;code&gt;require()&lt;/code&gt; および &lt;code&gt;import&lt;/code&gt; への指定子にのみ影響します。モジュールをロードするパスをロックダウンするには、変数を介したAPIへの望ましくないアクセスを防ぐなどの他の手段が必要です。</target>
        </trans-unit>
        <trans-unit id="62e28e25efd5c5d02281bc8a8eece63785358f21" translate="yes" xml:space="preserve">
          <source>Redirection will not prevent access to APIs through means such as direct access to &lt;code&gt;require.cache&lt;/code&gt; and/or through &lt;code&gt;module.constructor&lt;/code&gt; which allow access to loading modules. Policy redirection only affect specifiers to &lt;code&gt;require()&lt;/code&gt;. Other means such as to prevent undesired access to APIs through variables are necessary to lock down that path of loading modules.</source>
          <target state="translated">リダイレクションは、 &lt;code&gt;require.cache&lt;/code&gt; への直接アクセスやロードモジュールへのアクセスを許可する &lt;code&gt;module.constructor&lt;/code&gt; への直接アクセスなどの手段によるAPIへのアクセスを妨げません。ポリシーのリダイレクトは &lt;code&gt;require()&lt;/code&gt; の指定子にのみ影響します。ロードモジュールのパスをロックダウンするには、変数を介したAPIへの不要なアクセスを防ぐなどの他の手段が必要です。</target>
        </trans-unit>
        <trans-unit id="6f0e657010a4b37c8f1ef6590554b5c7b94a1714" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dns_resolvemx_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveMx()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dns_resolvemx_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveMx()&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="1689b08e612cf84f75582f3ca9ff01353f4e359e" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dns_resolvenaptr_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveNaptr()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dns_resolvenaptr_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveNaptr()&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="0c278e2b9bee058e8c62d811563533125002ec16" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dns_resolvesoa_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveSoa()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dns_resolvesoa_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveSoa()&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="4912b44f79a79f0d6185626cffbbc5c97905a706" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dns_resolvesrv_hostname_callback&quot;&gt;&lt;code&gt;dns.resolveSrv()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dns_resolvesrv_hostname_callback&quot;&gt; &lt;code&gt;dns.resolveSrv()&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="550021836a4206599a99972c5f7a71f3ce2d533d" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dnspromises_resolvemx_hostname&quot;&gt;&lt;code&gt;dnsPromises.resolveMx()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dnspromises_resolvemx_hostname&quot;&gt; &lt;code&gt;dnsPromises.resolveMx()&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="9a6abda979ad411f7579d56446cb9d353cae3d45" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dnspromises_resolvenaptr_hostname&quot;&gt;&lt;code&gt;dnsPromises.resolveNaptr()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dnspromises_resolvenaptr_hostname&quot;&gt; &lt;code&gt;dnsPromises.resolveNaptr()&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="2e70832b6b6035a3287d9dc0c23c95fa278e499b" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dnspromises_resolvesoa_hostname&quot;&gt;&lt;code&gt;dnsPromises.resolveSoa()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dnspromises_resolvesoa_hostname&quot;&gt; &lt;code&gt;dnsPromises.resolveSoa()&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="9ce5cc7ba46e57b41d1977f0f5f0b647b47de083" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;#dns_dnspromises_resolvesrv_hostname&quot;&gt;&lt;code&gt;dnsPromises.resolveSrv()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#dns_dnspromises_resolvesrv_hostname&quot;&gt; &lt;code&gt;dnsPromises.resolveSrv()&lt;/code&gt; を&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="948c1fe9289ccb8e632edbe9cddbb21004b7e4c3" translate="yes" xml:space="preserve">
          <source>Reference counting of thread-safe functions</source>
          <target state="translated">スレッドセーフ関数の参照カウント</target>
        </trans-unit>
        <trans-unit id="8c5860a129288d69ad5c94907be8821c7e3ab849" translate="yes" xml:space="preserve">
          <source>Reference to the underlying socket. Usually users will not want to access this property. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket.</source>
          <target state="translated">基になるソケットへの参照。通常、ユーザーはこのプロパティにアクセスしたくないでしょう。特に、プロトコルパーサーがソケットに接続する方法が原因で、ソケットは &lt;code&gt;'readable'&lt;/code&gt; イベントを発行しません。</target>
        </trans-unit>
        <trans-unit id="699eed09db52dd6a836543a03b9da86a4ed4de9a" translate="yes" xml:space="preserve">
          <source>Reference to the underlying socket. Usually users will not want to access this property. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket. After &lt;code&gt;response.end()&lt;/code&gt;, the property is nulled.</source>
          <target state="translated">基になるソケットへの参照。通常、ユーザーはこのプロパティにアクセスしたくないでしょう。特に、プロトコルパーサーがソケットに接続する方法が原因で、ソケットは &lt;code&gt;'readable'&lt;/code&gt; イベントを発行しません。後 &lt;code&gt;response.end()&lt;/code&gt; 、プロパティがゼロにされています。</target>
        </trans-unit>
        <trans-unit id="143dec086491ddb9a3bff3d401cdad790d01ad5b" translate="yes" xml:space="preserve">
          <source>Reference to the underlying socket. Usually users will not want to access this property. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket. After &lt;code&gt;response.end()&lt;/code&gt;, the property is nulled. The &lt;code&gt;socket&lt;/code&gt; may also be accessed via &lt;code&gt;response.connection&lt;/code&gt;.</source>
          <target state="translated">基になるソケットへの参照。通常、ユーザーはこのプロパティにアクセスする必要はありません。特に、プロトコルパーサーがソケットに接続する方法が原因で、ソケットは &lt;code&gt;'readable'&lt;/code&gt; イベントを発行しません。後 &lt;code&gt;response.end()&lt;/code&gt; 、プロパティがゼロにされています。 &lt;code&gt;socket&lt;/code&gt; また、を介してアクセスすることができる &lt;code&gt;response.connection&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ed271f56353159b152694dd33727d0978922795" translate="yes" xml:space="preserve">
          <source>Reference to the underlying socket. Usually users will not want to access this property. In particular, the socket will not emit &lt;code&gt;'readable'&lt;/code&gt; events because of how the protocol parser attaches to the socket. The &lt;code&gt;socket&lt;/code&gt; may also be accessed via &lt;code&gt;request.connection&lt;/code&gt;.</source>
          <target state="translated">基になるソケットへの参照。通常、ユーザーはこのプロパティにアクセスする必要はありません。特に、プロトコルパーサーがソケットに接続する方法が原因で、ソケットは &lt;code&gt;'readable'&lt;/code&gt; イベントを発行しません。 &lt;code&gt;socket&lt;/code&gt; また、を介してアクセスすることができる &lt;code&gt;request.connection&lt;/code&gt; から。</target>
        </trans-unit>
        <trans-unit id="2eca1b4d68aeba600d4d3d5d19a63fddf76c2ea9" translate="yes" xml:space="preserve">
          <source>ReferenceError</source>
          <target state="translated">ReferenceError</target>
        </trans-unit>
        <trans-unit id="f4277e0b175a11243c7e452a046c6d7e79543f95" translate="yes" xml:space="preserve">
          <source>References can be created with an initial reference count. The count can then be modified through &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt;&lt;code&gt;napi_reference_ref&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#n_api_napi_reference_unref&quot;&gt;&lt;code&gt;napi_reference_unref&lt;/code&gt;&lt;/a&gt;. If an object is collected while the count for a reference is 0, all subsequent calls to get the object associated with the reference &lt;a href=&quot;#n_api_napi_get_reference_value&quot;&gt;&lt;code&gt;napi_get_reference_value&lt;/code&gt;&lt;/a&gt; will return &lt;code&gt;NULL&lt;/code&gt; for the returned &lt;code&gt;napi_value&lt;/code&gt;. An attempt to call &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt;&lt;code&gt;napi_reference_ref&lt;/code&gt;&lt;/a&gt; for a reference whose object has been collected results in an error.</source>
          <target state="translated">参照は、初期参照カウントで作成できます。カウントは、&lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt; &lt;code&gt;napi_reference_ref&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#n_api_napi_reference_unref&quot;&gt; &lt;code&gt;napi_reference_unref&lt;/code&gt; を&lt;/a&gt;介して変更できます。参照のカウントが0のときにオブジェクトが収集された場合、参照&lt;a href=&quot;#n_api_napi_get_reference_value&quot;&gt; &lt;code&gt;napi_get_reference_value&lt;/code&gt; に&lt;/a&gt;関連付けられたオブジェクトを取得するための後続のすべての呼び出しは、返された &lt;code&gt;napi_value&lt;/code&gt; に対して &lt;code&gt;NULL&lt;/code&gt; を返します。オブジェクトが収集された参照に対して&lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt; &lt;code&gt;napi_reference_ref&lt;/code&gt; &lt;/a&gt;を呼び出そうとすると、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="87ce1307d1b1792207830310e0c6a4bb721d2994" translate="yes" xml:space="preserve">
          <source>References can be created with an initial reference count. The count can then be modified through &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt;&lt;code&gt;napi_reference_ref&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#n_api_napi_reference_unref&quot;&gt;&lt;code&gt;napi_reference_unref&lt;/code&gt;&lt;/a&gt;. If an object is collected while the count for a reference is 0, all subsequent calls to get the object associated with the reference &lt;a href=&quot;#n_api_napi_get_reference_value&quot;&gt;&lt;code&gt;napi_get_reference_value&lt;/code&gt;&lt;/a&gt; will return NULL for the returned &lt;code&gt;napi_value&lt;/code&gt;. An attempt to call &lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt;&lt;code&gt;napi_reference_ref&lt;/code&gt;&lt;/a&gt; for a reference whose object has been collected will result in an error.</source>
          <target state="translated">参照は、初期参照カウントで作成できます。その後、&lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt; &lt;code&gt;napi_reference_ref&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#n_api_napi_reference_unref&quot;&gt; &lt;code&gt;napi_reference_unref&lt;/code&gt; &lt;/a&gt;を使用してカウントを変更できます。参照のカウントが0のときにオブジェクトが収集された場合、参照&lt;a href=&quot;#n_api_napi_get_reference_value&quot;&gt; &lt;code&gt;napi_get_reference_value&lt;/code&gt; に&lt;/a&gt;関連付けられているオブジェクトを取得する後続のすべての呼び出しは、返された &lt;code&gt;napi_value&lt;/code&gt; に対してNULLを返します。オブジェクトが収集された参照の&lt;a href=&quot;#n_api_napi_reference_ref&quot;&gt; &lt;code&gt;napi_reference_ref&lt;/code&gt; &lt;/a&gt;を呼び出そうとすると、エラーが発生します。</target>
        </trans-unit>
        <trans-unit id="5f42708045e9b577a8cfc64b8866cddaa2d17159" translate="yes" xml:space="preserve">
          <source>References must be deleted once they are no longer required by the addon. When a reference is deleted it will no longer prevent the corresponding object from being collected. Failure to delete a persistent reference will result in a 'memory leak' with both the native memory for the persistent reference and the corresponding object on the heap being retained forever.</source>
          <target state="translated">アドオンで必要とされなくなったら、参照は削除する必要があります。参照が削除されると、対応するオブジェクトが収集されなくなります。永続的な参照の削除に失敗すると、永続的な参照のネイティブメモリとヒープ上の対応するオブジェクトの両方が永遠に保持される「メモリリーク」になります。</target>
        </trans-unit>
        <trans-unit id="78d3b8603eb59ada22c0147e306d35d4a4b79a8b" translate="yes" xml:space="preserve">
          <source>References must be deleted once they are no longer required by the addon. When a reference is deleted, it will no longer prevent the corresponding object from being collected. Failure to delete a persistent reference results in a 'memory leak' with both the native memory for the persistent reference and the corresponding object on the heap being retained forever.</source>
          <target state="translated">アドオンで必要とされなくなったら、参照は削除する必要があります。参照が削除されると、対応するオブジェクトが収集されなくなります。永続的な参照の削除に失敗すると、永続的な参照のネイティブメモリとヒープ上の対応するオブジェクトの両方が永遠に保持される「メモリリーク」になります。</target>
        </trans-unit>
        <trans-unit id="6807f7e84d57ae256bd324368a502c1f30075849" translate="yes" xml:space="preserve">
          <source>References to &lt;code&gt;__filename&lt;/code&gt; within &lt;code&gt;b.js&lt;/code&gt; will return &lt;code&gt;/Users/mjr/app/node_modules/b/b.js&lt;/code&gt; while references to &lt;code&gt;__filename&lt;/code&gt; within &lt;code&gt;a.js&lt;/code&gt; will return &lt;code&gt;/Users/mjr/app/a.js&lt;/code&gt;.</source>
          <target state="translated">参照 &lt;code&gt;__filename&lt;/code&gt; 内 &lt;code&gt;b.js&lt;/code&gt; が返されます &lt;code&gt;/Users/mjr/app/node_modules/b/b.js&lt;/code&gt; をへの参照しながら、 &lt;code&gt;__filename&lt;/code&gt; 内 &lt;code&gt;a.js&lt;/code&gt; が返されます &lt;code&gt;/Users/mjr/app/a.js&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="e2d6d3de052de95b7c06191007b2659842ad5413" translate="yes" xml:space="preserve">
          <source>References to objects with a lifespan longer than that of the native method</source>
          <target state="translated">ネイティブメソッドの寿命よりも長いオブジェクトへの参照</target>
        </trans-unit>
        <trans-unit id="486e5b60c85424f27d906f0dbb76c17db2b5dc30" translate="yes" xml:space="preserve">
          <source>Refused Stream</source>
          <target state="translated">拒否されたストリーム</target>
        </trans-unit>
        <trans-unit id="3f0a03433d4e24a0f0fdbd1209a19dda4e2b4c5e" translate="yes" xml:space="preserve">
          <source>Registers &lt;code&gt;fun&lt;/code&gt; as a function to be run with the &lt;code&gt;arg&lt;/code&gt; parameter once the current Node.js environment exits.</source>
          <target state="translated">現在のNode.js環境が終了すると、 &lt;code&gt;arg&lt;/code&gt; パラメーターを使用して実行される関数として &lt;code&gt;fun&lt;/code&gt; を登録します。</target>
        </trans-unit>
        <trans-unit id="49f360dc5b5dc137b4bb8acbdb572dcef53d306e" translate="yes" xml:space="preserve">
          <source>Registers &lt;code&gt;hook&lt;/code&gt;, which is a function of type &lt;a href=&quot;#n_api_napi_async_cleanup_hook&quot;&gt;&lt;code&gt;napi_async_cleanup_hook&lt;/code&gt;&lt;/a&gt;, as a function to be run with the &lt;code&gt;remove_handle&lt;/code&gt; and &lt;code&gt;arg&lt;/code&gt; parameters once the current Node.js environment exits.</source>
          <target state="translated">現在のNode.js環境が終了すると、 &lt;code&gt;remove_handle&lt;/code&gt; パラメーターと &lt;code&gt;arg&lt;/code&gt; パラメーターを使用して実行される関数として、タイプ&lt;a href=&quot;#n_api_napi_async_cleanup_hook&quot;&gt; &lt;code&gt;napi_async_cleanup_hook&lt;/code&gt; の&lt;/a&gt;関数である &lt;code&gt;hook&lt;/code&gt; を登録します。</target>
        </trans-unit>
        <trans-unit id="9563ce6b6a0d8d1b0f20d724673c8f497562c28f" translate="yes" xml:space="preserve">
          <source>Registers exit hooks that run after the event loop has ended but before the VM is killed.</source>
          <target state="translated">イベントループが終了した後、VMが終了する前に実行する終了フックを登録します。</target>
        </trans-unit>
        <trans-unit id="025c46f6fdf88b92b28080b7b553ad9dd747013f" translate="yes" xml:space="preserve">
          <source>Registers functions to be called for different lifetime events of each async operation.</source>
          <target state="translated">各非同期操作の異なるライフタイムイベントに対して呼び出される関数を登録します。</target>
        </trans-unit>
        <trans-unit id="ba6865d6a340dd4b2fee2f3fb721da208de17d62" translate="yes" xml:space="preserve">
          <source>Rejected after resolve.</source>
          <target state="translated">解決後に却下された。</target>
        </trans-unit>
        <trans-unit id="480085d8cd1a12ca9bfb88811776098e07fc38b8" translate="yes" xml:space="preserve">
          <source>Rejected more than once.</source>
          <target state="translated">何度も断られた。</target>
        </trans-unit>
        <trans-unit id="f91a207f75395e0de504575d818372fe57f66ef1" translate="yes" xml:space="preserve">
          <source>Relative and absolute URL resolution</source>
          <target state="translated">相対的および絶対的な URL の解決</target>
        </trans-unit>
        <trans-unit id="d65b57a74928a0be4f660454d2b48888cccb0bba" translate="yes" xml:space="preserve">
          <source>Relative targets are relative to the link&amp;rsquo;s parent directory.</source>
          <target state="translated">相対ターゲットは、リンクの親ディレクトリを基準にしています。</target>
        </trans-unit>
        <trans-unit id="ad12364d0fe9e947eddc76e791d6924658fc1767" translate="yes" xml:space="preserve">
          <source>Removal of &lt;code&gt;importModuleDynamically&lt;/code&gt; due to compatibility issues.</source>
          <target state="translated">互換性の問題による &lt;code&gt;importModuleDynamically&lt;/code&gt; の削除。</target>
        </trans-unit>
        <trans-unit id="ee53e06692c8f38b41e9c247511556d08d525567" translate="yes" xml:space="preserve">
          <source>Remove all name-value pairs whose name is &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">名前が &lt;code&gt;name&lt;/code&gt; である名前と値のペアをすべて削除します。</target>
        </trans-unit>
        <trans-unit id="9118b5c0a30a0a081414d34e6dc112bb77f3e34a" translate="yes" xml:space="preserve">
          <source>Remove max limit of &lt;code&gt;crlfDelay&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;crlfDelay&lt;/code&gt; オプションの上限を削除します。</target>
        </trans-unit>
        <trans-unit id="3f5afc69c7213aff1b31ed6a1468011f5d56dd8c" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;env&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; パラメーターを削除しました。</target>
        </trans-unit>
        <trans-unit id="de74ec8f1f64217caeb726e873039874abce386a" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;noAssert&lt;/code&gt; and no implicit coercion of the offset and &lt;code&gt;byteLength&lt;/code&gt; to &lt;code&gt;uint32&lt;/code&gt; anymore.</source>
          <target state="translated">&lt;code&gt;noAssert&lt;/code&gt; を削除し、 &lt;code&gt;uint32&lt;/code&gt; へのオフセットと &lt;code&gt;byteLength&lt;/code&gt; の暗黙的な強制を行わなくなりました。</target>
        </trans-unit>
        <trans-unit id="208f636ea64100a6bd07324c8f534918ff1764b8" translate="yes" xml:space="preserve">
          <source>Removed &lt;code&gt;noAssert&lt;/code&gt; and no implicit coercion of the offset to &lt;code&gt;uint32&lt;/code&gt; anymore.</source>
          <target state="translated">&lt;code&gt;noAssert&lt;/code&gt; を削除し、 &lt;code&gt;uint32&lt;/code&gt; へのオフセットの暗黙的な強制を行わなくなりました。</target>
        </trans-unit>
        <trans-unit id="3dae0344cce2d5e6295abe6239df3bcdf9694e5f" translate="yes" xml:space="preserve">
          <source>Removed functionality.</source>
          <target state="translated">機能を削除しました。</target>
        </trans-unit>
        <trans-unit id="4f26fbeadc3581562cd5dd9ca922ad8e40ebf216" translate="yes" xml:space="preserve">
          <source>Removed in: v10.12.0</source>
          <target state="translated">削除されたバージョン:v10.12.0</target>
        </trans-unit>
        <trans-unit id="bd823364d875378b9943c2c16f5ae195223dfe0f" translate="yes" xml:space="preserve">
          <source>Removed the deprecated &lt;code&gt;raw&lt;/code&gt; and &lt;code&gt;raws&lt;/code&gt; encodings.</source>
          <target state="translated">非推奨の &lt;code&gt;raw&lt;/code&gt; および &lt;code&gt;raws&lt;/code&gt; エンコーディングを削除しました。</target>
        </trans-unit>
        <trans-unit id="e8aa4ed70c6a68bd9f873cfc51d2791a8ac258ba" translate="yes" xml:space="preserve">
          <source>Removes a header that has been queued for implicit sending.</source>
          <target state="translated">暗黙の送信のためにキューに入れられたヘッダを削除します。</target>
        </trans-unit>
        <trans-unit id="5a0b7378e6cb8f4474b74da59aa3512b94178b4f" translate="yes" xml:space="preserve">
          <source>Removes a header that's already defined into headers object.</source>
          <target state="translated">headersオブジェクトに定義されているヘッダを削除します。</target>
        </trans-unit>
        <trans-unit id="14ab31f14a2b24400605785232d5b77e4291cd5b" translate="yes" xml:space="preserve">
          <source>Removes a header that's queued for implicit sending.</source>
          <target state="translated">暗黙の送信用にキューに入っているヘッダを削除します。</target>
        </trans-unit>
        <trans-unit id="47cc856ca9392ee0076bf9a7023dd004b3a6953f" translate="yes" xml:space="preserve">
          <source>Removes all listeners, or those of the specified &lt;code&gt;eventName&lt;/code&gt;.</source>
          <target state="translated">すべてのリスナー、または指定された &lt;code&gt;eventName&lt;/code&gt; のリスナーを削除します。</target>
        </trans-unit>
        <trans-unit id="ad958ec42253c0777e7c7cd34f43c56ef6beb35e" translate="yes" xml:space="preserve">
          <source>Removes files and directories (modeled on the standard POSIX &lt;code&gt;rm&lt;/code&gt; utility). Resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments on success.</source>
          <target state="translated">ファイルとディレクトリを削除します（標準のPOSIX &lt;code&gt;rm&lt;/code&gt; ユーティリティをモデルにしています）。成功についての議論なしで &lt;code&gt;Promise&lt;/code&gt; を解決します。</target>
        </trans-unit>
        <trans-unit id="f3b4271cc4ce1d0bd826613a541e11a87e7c55f4" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;listener&lt;/code&gt; from the list of handlers for event &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">イベント &lt;code&gt;type&lt;/code&gt; のハンドラーのリストから &lt;code&gt;listener&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="a406d49e49c432bf46bd86a5a72a71da2b54502a" translate="yes" xml:space="preserve">
          <source>Removes the directory identified by &lt;code&gt;path&lt;/code&gt; then resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 識別されたディレクトリを削除し、成功時に引数なしで &lt;code&gt;Promise&lt;/code&gt; を解決します。</target>
        </trans-unit>
        <trans-unit id="8cc322fa17c26da2aed60940444a7334545e1e60" translate="yes" xml:space="preserve">
          <source>Removes the specified &lt;code&gt;listener&lt;/code&gt; from the listener array for the event named &lt;code&gt;eventName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; という名前のイベントのリスナー配列から指定された &lt;code&gt;listener&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="31f9d0a7b059e1db3d5493d4bcc44201ec942512" translate="yes" xml:space="preserve">
          <source>Removing this hook can be done by using &lt;a href=&quot;#n_api_napi_remove_env_cleanup_hook&quot;&gt;&lt;code&gt;napi_remove_env_cleanup_hook&lt;/code&gt;&lt;/a&gt;. Typically, that happens when the resource for which this hook was added is being torn down anyway.</source>
          <target state="translated">このフックの削除は、&lt;a href=&quot;#n_api_napi_remove_env_cleanup_hook&quot;&gt; &lt;code&gt;napi_remove_env_cleanup_hook&lt;/code&gt; &lt;/a&gt;を使用して実行できます。通常、これは、このフックが追加されたリソースがとにかく破棄されているときに発生します。</target>
        </trans-unit>
        <trans-unit id="fd6ebfcb69f72d96b2b9d228d3e963eced720907" translate="yes" xml:space="preserve">
          <source>Removing this hook can be done by using &lt;code&gt;napi_remove_env_cleanup_hook&lt;/code&gt;. Typically, that happens when the resource for which this hook was added is being torn down anyway.</source>
          <target state="translated">このフックを削除するには、 &lt;code&gt;napi_remove_env_cleanup_hook&lt;/code&gt; を使用します。通常、これは、このフックが追加されたリソースが取り壊されているときに発生します。</target>
        </trans-unit>
        <trans-unit id="5a13622503343612316b4482232aa24faa89fdd4" translate="yes" xml:space="preserve">
          <source>Renamed from &lt;code&gt;currentId&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;currentId&lt;/code&gt; から名前が変更されました</target>
        </trans-unit>
        <trans-unit id="0ef11194a1bed32126c4889dae1150ad53122f33" translate="yes" xml:space="preserve">
          <source>Renamed from &lt;code&gt;currentId&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;currentId&lt;/code&gt; から名前が変更されました。</target>
        </trans-unit>
        <trans-unit id="f955c95b534cb974ec6da7bc1d9810ff2375c702" translate="yes" xml:space="preserve">
          <source>Renames &lt;code&gt;oldPath&lt;/code&gt; to &lt;code&gt;newPath&lt;/code&gt; and resolves the &lt;code&gt;Promise&lt;/code&gt; with no arguments upon success.</source>
          <target state="translated">名前を変更 &lt;code&gt;oldPath&lt;/code&gt; する &lt;code&gt;newPath&lt;/code&gt; し、解決 &lt;code&gt;Promise&lt;/code&gt; 成功時に引数なしで。</target>
        </trans-unit>
        <trans-unit id="ee45c30326b750387589752c0f75e1dd87ddc7e4" translate="yes" xml:space="preserve">
          <source>Report</source>
          <target state="translated">Report</target>
        </trans-unit>
        <trans-unit id="d5438edddf74651406b54e7da7089349a9272e6c" translate="yes" xml:space="preserve">
          <source>Reports will include information on any Workers that are children of the current thread as part of the &lt;code&gt;workers&lt;/code&gt; section, with each Worker generating a report in the standard report format.</source>
          <target state="translated">レポートには、 &lt;code&gt;workers&lt;/code&gt; セクションの一部として現在のスレッドの子であるワーカーに関する情報が含まれ、各ワーカーは標準のレポート形式でレポートを生成します。</target>
        </trans-unit>
        <trans-unit id="5cb2a10e8758980a2aaa5ce15e1b83561bc0de66" translate="yes" xml:space="preserve">
          <source>Represents the largest &lt;code&gt;length&lt;/code&gt; that a &lt;code&gt;string&lt;/code&gt; primitive can have, counted in UTF-16 code units.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; プリミティブが持つことができる最大の &lt;code&gt;length&lt;/code&gt; を表し、UTF-16コード単位でカウントされます。</target>
        </trans-unit>
        <trans-unit id="61c03071a19d7828ffdb7e7019c925ea60613acd" translate="yes" xml:space="preserve">
          <source>Represents the readable side of a TTY. In normal circumstances &lt;a href=&quot;process#process_process_stdin&quot;&gt;&lt;code&gt;process.stdin&lt;/code&gt;&lt;/a&gt; will be the only &lt;code&gt;tty.ReadStream&lt;/code&gt; instance in a Node.js process and there should be no reason to create additional instances.</source>
          <target state="translated">TTYの読み取り可能な側を表します。通常の状況では、&lt;a href=&quot;process#process_process_stdin&quot;&gt; &lt;code&gt;process.stdin&lt;/code&gt; &lt;/a&gt;はNode.jsプロセス内の唯一の &lt;code&gt;tty.ReadStream&lt;/code&gt; インスタンスであり、追加のインスタンスを作成する理由はありません。</target>
        </trans-unit>
        <trans-unit id="de90bb395892f0a63050b34157d1cea4c4d7653d" translate="yes" xml:space="preserve">
          <source>Represents the writable side of a TTY. In normal circumstances, &lt;a href=&quot;process#process_process_stdout&quot;&gt;&lt;code&gt;process.stdout&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;process#process_process_stderr&quot;&gt;&lt;code&gt;process.stderr&lt;/code&gt;&lt;/a&gt; will be the only &lt;code&gt;tty.WriteStream&lt;/code&gt; instances created for a Node.js process and there should be no reason to create additional instances.</source>
          <target state="translated">TTYの書き込み可能な側を表します。通常の状況では、&lt;a href=&quot;process#process_process_stdout&quot;&gt; &lt;code&gt;process.stdout&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;process#process_process_stderr&quot;&gt; &lt;code&gt;process.stderr&lt;/code&gt; &lt;/a&gt;がNode.jsプロセス用に作成される唯一の &lt;code&gt;tty.WriteStream&lt;/code&gt; インスタンスであり、追加のインスタンスを作成する理由はありません。</target>
        </trans-unit>
        <trans-unit id="1c662d5530f12430fdecb0881b180be006e48301" translate="yes" xml:space="preserve">
          <source>Request URL string. This contains only the URL that is present in the actual HTTP request. If the request is:</source>
          <target state="translated">リクエスト URL 文字列。これには、実際の HTTP リクエストに存在する URL のみが含まれます。リクエストが</target>
        </trans-unit>
        <trans-unit id="3ab3941bdee524dd3cd5882b2b086cc97e9b933f" translate="yes" xml:space="preserve">
          <source>Request URL string. This contains only the URL that is present in the actual HTTP request. Take the following request:</source>
          <target state="translated">リクエスト URL 文字列。これには、実際の HTTP リクエストに存在する URL のみが含まれます。以下のリクエストを例にしてみましょう。</target>
        </trans-unit>
        <trans-unit id="2b3c10609231468fa578ee99cb4a43f3634bf23c" translate="yes" xml:space="preserve">
          <source>Reset the compressor/decompressor to factory defaults. Only applicable to the inflate and deflate algorithms.</source>
          <target state="translated">コンプレッサ/デコンプレッサを工場出荷時のデフォルトにリセットします。インフレーションおよびデフレーションアルゴリズムにのみ適用されます。</target>
        </trans-unit>
        <trans-unit id="db3d4094dbadcebd79b1794c5337f64facdbc701" translate="yes" xml:space="preserve">
          <source>Resets the collected histogram data.</source>
          <target state="translated">収集したヒストグラムデータをリセットします。</target>
        </trans-unit>
        <trans-unit id="64ad7d46df157e7bdc1f26933e813f5571d92e46" translate="yes" xml:space="preserve">
          <source>Resets the internal counter specific to &lt;code&gt;label&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; に固有の内部カウンターをリセットします。</target>
        </trans-unit>
        <trans-unit id="7aba40a3872ae97a59cb607688d2ac64c68a401c" translate="yes" xml:space="preserve">
          <source>Resolution Algorithm</source>
          <target state="translated">分解能アルゴリズム</target>
        </trans-unit>
        <trans-unit id="ed85a9c998ec9600778f949e55641f6ff19bba5c" translate="yes" xml:space="preserve">
          <source>Resolution algorithm</source>
          <target state="translated">分解能アルゴリズム</target>
        </trans-unit>
        <trans-unit id="c6a168e6ae4f3cec426776f7c35842fd34a04fcb" translate="yes" xml:space="preserve">
          <source>Resolve all undefined symbols in the library before dlopen(3) returns.</source>
          <target state="translated">dlopen(3)が戻る前に、ライブラリ内のすべての未定義のシンボルを解決。</target>
        </trans-unit>
        <trans-unit id="24fbb23632a725673f71fda81f293032178e773d" translate="yes" xml:space="preserve">
          <source>Resolve hook</source>
          <target state="translated">フックを解決する</target>
        </trans-unit>
        <trans-unit id="b7dc3600181a3299713c18736dcc47c30c09d536" translate="yes" xml:space="preserve">
          <source>Resolved after reject.</source>
          <target state="translated">リジェクト後に解決しました。</target>
        </trans-unit>
        <trans-unit id="fe6423d8b774ab42e2899806fade7814f17b6993" translate="yes" xml:space="preserve">
          <source>Resolved more than once.</source>
          <target state="translated">複数回解決しました。</target>
        </trans-unit>
        <trans-unit id="30f1eb57d2c3fa3a7e0b93c43e4cd261c1d14344" translate="yes" xml:space="preserve">
          <source>Resolver Algorithm</source>
          <target state="translated">レゾルバアルゴリズム</target>
        </trans-unit>
        <trans-unit id="a702841308e11bf27f71e1a74cdd7fb83aaa18fe" translate="yes" xml:space="preserve">
          <source>Resolver Algorithm Specification</source>
          <target state="translated">レゾルバアルゴリズム仕様</target>
        </trans-unit>
        <trans-unit id="04243d78153ec0127d54f41424cacb5f3c944288" translate="yes" xml:space="preserve">
          <source>Resolver algorithm</source>
          <target state="translated">レゾルバアルゴリズム</target>
        </trans-unit>
        <trans-unit id="6aac88644eb90552ba03cb6989809ab486566904" translate="yes" xml:space="preserve">
          <source>Resolver algorithm specification</source>
          <target state="translated">レゾルバアルゴリズム仕様</target>
        </trans-unit>
        <trans-unit id="ae90f97aaf56685ddb2e0390e67ea8cae6f53870" translate="yes" xml:space="preserve">
          <source>Resolves a host name (e.g. &lt;code&gt;'nodejs.org'&lt;/code&gt;) into the first found A (IPv4) or AAAA (IPv6) record. All &lt;code&gt;option&lt;/code&gt; properties are optional. If &lt;code&gt;options&lt;/code&gt; is an integer, then it must be &lt;code&gt;4&lt;/code&gt; or &lt;code&gt;6&lt;/code&gt; &amp;ndash; if &lt;code&gt;options&lt;/code&gt; is not provided, then IPv4 and IPv6 addresses are both returned if found.</source>
          <target state="translated">ホスト名（例： &lt;code&gt;'nodejs.org'&lt;/code&gt; ）を最初に見つかったA（IPv4）またはAAAA（IPv6）レコードに解決します。すべての &lt;code&gt;option&lt;/code&gt; プロパティはオプションです。場合 &lt;code&gt;options&lt;/code&gt; 整数であり、それがなければならない &lt;code&gt;4&lt;/code&gt; または &lt;code&gt;6&lt;/code&gt; 場合- &lt;code&gt;options&lt;/code&gt; 見つかったならば、IPv4アドレスとIPv6アドレスの両方が返され、提供されていません。</target>
        </trans-unit>
        <trans-unit id="7633f27bc6ad5138d274b448ca1b4d0af2762059" translate="yes" xml:space="preserve">
          <source>Resolves a hostname (e.g. &lt;code&gt;'nodejs.org'&lt;/code&gt;) into the first found A (IPv4) or AAAA (IPv6) record. All &lt;code&gt;option&lt;/code&gt; properties are optional. If &lt;code&gt;options&lt;/code&gt; is an integer, then it must be &lt;code&gt;4&lt;/code&gt; or &lt;code&gt;6&lt;/code&gt; &amp;ndash; if &lt;code&gt;options&lt;/code&gt; is not provided, then IPv4 and IPv6 addresses are both returned if found.</source>
          <target state="translated">ホスト名（例： &lt;code&gt;'nodejs.org'&lt;/code&gt; ）を最初に見つかったA（IPv4）またはAAAA（IPv6）レコードに解決します。すべての &lt;code&gt;option&lt;/code&gt; プロパティはオプションです。場合 &lt;code&gt;options&lt;/code&gt; 整数であり、それがなければならない &lt;code&gt;4&lt;/code&gt; または &lt;code&gt;6&lt;/code&gt; 場合- &lt;code&gt;options&lt;/code&gt; 見つかったならば、IPv4アドレスとIPv6アドレスの両方が返され、提供されていません。</target>
        </trans-unit>
        <trans-unit id="11f42a3795a26884c3a18acf61b1f3387f723b16" translate="yes" xml:space="preserve">
          <source>Resolves the given &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; into a host name and service using the operating system's underlying &lt;code&gt;getnameinfo&lt;/code&gt; implementation.</source>
          <target state="translated">オペレーティングシステムの基盤となる &lt;code&gt;getnameinfo&lt;/code&gt; 実装を使用して、 &lt;code&gt;port&lt;/code&gt; された &lt;code&gt;address&lt;/code&gt; とポートをホスト名とサービスに解決します。</target>
        </trans-unit>
        <trans-unit id="08e1d2d118e7eb0a81c52289da289dfec9abfbfc" translate="yes" xml:space="preserve">
          <source>Resolves the given &lt;code&gt;address&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; into a hostname and service using the operating system's underlying &lt;code&gt;getnameinfo&lt;/code&gt; implementation.</source>
          <target state="translated">オペレーティングシステムの基盤となる &lt;code&gt;getnameinfo&lt;/code&gt; 実装を使用して、 &lt;code&gt;port&lt;/code&gt; された &lt;code&gt;address&lt;/code&gt; とポートをホスト名とサービスに解決します。</target>
        </trans-unit>
        <trans-unit id="6811650af7c828025da4acabc8d4bf9999181ba5" translate="yes" xml:space="preserve">
          <source>Resource objects returned by &lt;code&gt;executionAsyncResource()&lt;/code&gt; are most often internal Node.js handle objects with undocumented APIs. Using any functions or properties on the object is likely to crash your application and should be avoided.</source>
          <target state="translated">executeAsyncResource &lt;code&gt;executionAsyncResource()&lt;/code&gt; によって返されるリソースオブジェクトは、ほとんどの場合、ドキュメント化されていないAPIを持つ内部Node.jsハンドルオブジェクトです。オブジェクトで関数やプロパティを使用すると、アプリケーションがクラッシュする可能性があるため、避ける必要があります。</target>
        </trans-unit>
        <trans-unit id="3209d576f81c84414e8e8f7fb17ec71753c4c605" translate="yes" xml:space="preserve">
          <source>Result type</source>
          <target state="translated">結果の種類</target>
        </trans-unit>
        <trans-unit id="9fc5c69700d9a9c537cdd38a9b499942ad2a8977" translate="yes" xml:space="preserve">
          <source>Results in &lt;code&gt;process.execArgv&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;process.execArgv&lt;/code&gt; の結果：</target>
        </trans-unit>
        <trans-unit id="7358da28fa39f752fc4c17b10b499d2099cee1fb" translate="yes" xml:space="preserve">
          <source>Resumes reading after a call to &lt;a href=&quot;#net_socket_pause&quot;&gt;&lt;code&gt;socket.pause()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#net_socket_pause&quot;&gt; &lt;code&gt;socket.pause()&lt;/code&gt; の&lt;/a&gt;呼び出し後に読み取りを再開します。</target>
        </trans-unit>
        <trans-unit id="402840e8a9c08bfd3f2e41a34b14990e4b777b1a" translate="yes" xml:space="preserve">
          <source>Resumption using session identifiers is supported by most web browsers when making HTTPS requests.</source>
          <target state="translated">セッション識別子を使用した再開は、HTTPS リクエストを行う際に、ほとんどの Web ブラウザでサポートされています。</target>
        </trans-unit>
        <trans-unit id="a6beeeb78733d214a3f8f7863f6669afd3e1189d" translate="yes" xml:space="preserve">
          <source>Resumption using session tickets is becoming commonly supported by many web browsers when making HTTPS requests.</source>
          <target state="translated">セッションチケットを使用した再開は、HTTPS リクエストを行う際に多くの Web ブラウザで一般的にサポートされるようになってきています。</target>
        </trans-unit>
        <trans-unit id="e07f6fe70a4d91e5062dde99b0f2db3e952e1977" translate="yes" xml:space="preserve">
          <source>Retrieves a native instance that was previously wrapped in a JavaScript object using &lt;code&gt;napi_wrap()&lt;/code&gt;.</source>
          <target state="translated">以前に &lt;code&gt;napi_wrap()&lt;/code&gt; を使用してJavaScriptオブジェクトにラップされたネイティブインスタンスを取得します。</target>
        </trans-unit>
        <trans-unit id="ac2f36be4ce2d8046d907e815c0acf007c7f17d2" translate="yes" xml:space="preserve">
          <source>Retrieves a native instance that was previously wrapped in the JavaScript object &lt;code&gt;js_object&lt;/code&gt; using &lt;code&gt;napi_wrap()&lt;/code&gt; and removes the wrapping. If a finalize callback was associated with the wrapping, it will no longer be called when the JavaScript object becomes garbage-collected.</source>
          <target state="translated">&lt;code&gt;napi_wrap()&lt;/code&gt; を使用して以前にJavaScriptオブジェクト &lt;code&gt;js_object&lt;/code&gt; にラップされたネイティブインスタンスを取得し、ラッピングを削除します。finalizeコールバックがラッピングに関連付けられていた場合、JavaScriptオブジェクトがガベージコレクションされたときに呼び出されなくなります。</target>
        </trans-unit>
        <trans-unit id="4184c813fcb4aac15c98cc136fcd37956c32d5ff" translate="yes" xml:space="preserve">
          <source>Retrieves the &lt;a href=&quot;#fs_class_fs_stats&quot;&gt;&lt;code&gt;fs.Stats&lt;/code&gt;&lt;/a&gt; for the file.</source>
          <target state="translated">ファイルの&lt;a href=&quot;#fs_class_fs_stats&quot;&gt; &lt;code&gt;fs.Stats&lt;/code&gt; &lt;/a&gt;を取得します。</target>
        </trans-unit>
        <trans-unit id="1b3a254075630b84faf8d95f7f64d248675d4d96" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;napi_would_deadlock&lt;/code&gt; when called with &lt;code&gt;napi_tsfn_blocking&lt;/code&gt; from the main thread or a worker thread and the queue is full.</source>
          <target state="translated">戻り &lt;code&gt;napi_would_deadlock&lt;/code&gt; と呼ば &lt;code&gt;napi_tsfn_blocking&lt;/code&gt; メインスレッドまたはワーカースレッドから、キューがいっぱいになっています。</target>
        </trans-unit>
        <trans-unit id="67d4a7e39476f8bdb298e2a6d010b4bb6a81769a" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;this&lt;/code&gt; from &lt;code&gt;writeHead()&lt;/code&gt; to allow chaining with &lt;code&gt;end()&lt;/code&gt;.</source>
          <target state="translated">戻り &lt;code&gt;this&lt;/code&gt; から &lt;code&gt;writeHead()&lt;/code&gt; とチェーン接続できるように、 &lt;code&gt;end()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3ab24f0ee2a18d66876671807f5f78a2d1247434" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;&quot;commonjs&quot;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;&quot;commonjs&quot;を&lt;/em&gt;返します。</target>
        </trans-unit>
        <trans-unit id="27dc905ead70c77231c8dbd71cbaf11b8e3960e1" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;&quot;module&quot;&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;「モジュール」を&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="2a53900dda92bd3e52310eac41e1ee025eba664a" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;legacyMainURL&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;legacyMainURLを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="61ee7020ac490772ac30f15e37c9d0f95bb4c316" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;pjson&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;pjsonを&lt;/em&gt;返し&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="40493ab4badb7b762e0f014ba960440e59fe60ec" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;resolved&lt;/em&gt;.</source>
          <target state="translated">返品を&lt;em&gt;解決しました&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="bf9571d5ae3200f1a4ebe4137dfe2d541a25e1f0" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;resolvedMain&lt;/em&gt;.</source>
          <target state="translated">戻り&lt;em&gt;resolvedMain&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="7ee7b059358ad691f1f6ad884fe8a7bee0e587ec" translate="yes" xml:space="preserve">
          <source>Return &lt;em&gt;resolvedMatch&lt;/em&gt;.</source>
          <target state="translated">戻り&lt;em&gt;resolvedMatch&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="af892f7d42d348b7dd0896a8b6b41be3c01c48c3" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;packageSubpath&lt;/em&gt;, &lt;em&gt;pjson.exports&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;（&lt;em&gt;packageURL&lt;/em&gt;、&lt;em&gt;packageSubpath&lt;/em&gt;、&lt;em&gt;pjson.exports&lt;/em&gt;）を返します。</target>
        </trans-unit>
        <trans-unit id="612a5c5e5b606670540f8e08403492fd655e8061" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;PACKAGE_EXPORTS_TARGET_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;target&lt;/em&gt;, &lt;em&gt;&quot;&quot;&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;PACKAGE_EXPORTS_TARGET_RESOLVE&lt;/strong&gt;（&lt;em&gt;packageURL&lt;/em&gt;、&lt;em&gt;target&lt;/em&gt;、&lt;em&gt;&quot;&quot;&lt;/em&gt;）を返します。</target>
        </trans-unit>
        <trans-unit id="94bb434a79db60c70ef43965b2b64472f9fba18c" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;PACKAGE_EXPORTS_TARGET_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;target&lt;/em&gt;, &lt;em&gt;subpath&lt;/em&gt;).</source>
          <target state="translated">戻り&lt;strong&gt;PACKAGE_EXPORTS_TARGET_RESOLVE&lt;/strong&gt;（&lt;em&gt;たPackageURL&lt;/em&gt;、&lt;em&gt;ターゲット&lt;/em&gt;、&lt;em&gt;サブパス&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="efb5305cc294ba10cf3e9b764242b8542997f9f2" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;PACKAGE_RESOLVE&lt;/strong&gt;(&lt;em&gt;target&lt;/em&gt; + &lt;em&gt;subpath&lt;/em&gt;, &lt;em&gt;packageURL&lt;/em&gt; + &lt;em&gt;&quot;/&quot;&lt;/em&gt;)_.</source>
          <target state="translated">&lt;strong&gt;PACKAGE_RESOLVE&lt;/strong&gt;（&lt;em&gt;ターゲット&lt;/em&gt;+&lt;em&gt;サブパス&lt;/em&gt;、&lt;em&gt;packageURL&lt;/em&gt; + &lt;em&gt;&quot;/&quot;&lt;/em&gt;）_を返します。</target>
        </trans-unit>
        <trans-unit id="8be492caa85a5af1ee5f6da07df9f56daad0e312" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;PACKAGE_RESOLVE&lt;/strong&gt;(&lt;em&gt;target&lt;/em&gt; with every instance of &lt;em&gt;&quot;*&quot;&lt;/em&gt; replaced by &lt;em&gt;subpath&lt;/em&gt;, &lt;em&gt;packageURL&lt;/em&gt; + &lt;em&gt;&quot;/&quot;&lt;/em&gt;)_.</source>
          <target state="translated">戻り&lt;strong&gt;PACKAGE_RESOLVE&lt;/strong&gt;（&lt;em&gt;ターゲット&lt;/em&gt;のすべてのインスタンスを持つ&lt;em&gt;&quot;*&quot;&lt;/em&gt;に置き換え&lt;em&gt;サブパス&lt;/em&gt;、&lt;em&gt;たPackageURL&lt;/em&gt; + &lt;em&gt;&quot;/&quot;&lt;/em&gt;）_。</target>
        </trans-unit>
        <trans-unit id="40609974c5c72ad927a26bc91534ae15b7cff8ff" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;nullを&lt;/strong&gt;返し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="aea755e2ab440aa31185135c409dd518a163fb73" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;undefined&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;未定義を&lt;/strong&gt;返します。</target>
        </trans-unit>
        <trans-unit id="f7d3c51d0a8c2c8e99bac646c9709abb5ffb27a7" translate="yes" xml:space="preserve">
          <source>Return a &lt;code&gt;napi_value&lt;/code&gt; back from the callback.</source>
          <target state="translated">戻り &lt;code&gt;napi_value&lt;/code&gt; のコールバックからバックを。</target>
        </trans-unit>
        <trans-unit id="4d09466a68676bd47dead7153efe390c06f215b2" translate="yes" xml:space="preserve">
          <source>Return a random integer &lt;code&gt;n&lt;/code&gt; such that &lt;code&gt;min &amp;lt;= n &amp;lt; max&lt;/code&gt;. This implementation avoids &lt;a href=&quot;https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#Modulo_bias&quot;&gt;modulo bias&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;min &amp;lt;= n &amp;lt; max&lt;/code&gt; ようなランダムな整数 &lt;code&gt;n&lt;/code&gt; を返します。この実装は、&lt;a href=&quot;https://en.wikipedia.org/wiki/Fisher%E2%80%93Yates_shuffle#Modulo_bias&quot;&gt;モジュロバイアス&lt;/a&gt;を回避します。</target>
        </trans-unit>
        <trans-unit id="d97db77b81b13f6e4eab70e655926c8838345ab1" translate="yes" xml:space="preserve">
          <source>Return codes for the compression/decompression functions. Negative values are errors, positive values are used for special but normal events.</source>
          <target state="translated">圧縮/伸長関数のリターンコード。負の値はエラーであり、正の値は特別だが通常のイベントに使用されます。</target>
        </trans-unit>
        <trans-unit id="0f77bb2a55081f57868af6297ef637dce8dc13ce" translate="yes" xml:space="preserve">
          <source>Return or throw the last fallback resolution &lt;strong&gt;null&lt;/strong&gt; return or error.</source>
          <target state="translated">最後のフォールバック解決&lt;strong&gt;null&lt;/strong&gt;リターンまたはエラーを返すかスローします。</target>
        </trans-unit>
        <trans-unit id="0796223e5904f2004cc9c84cdda1c97140f83da1" translate="yes" xml:space="preserve">
          <source>Return the &lt;em&gt;resolved&lt;/em&gt; destructured value of the result of &lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;packageSubpath&lt;/em&gt;, &lt;em&gt;pjson.exports&lt;/em&gt;, &lt;em&gt;defaultConditions&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;（&lt;em&gt;packageURL&lt;/em&gt;、&lt;em&gt;packageSubpath&lt;/em&gt;、&lt;em&gt;pjson.exports&lt;/em&gt;、&lt;em&gt;defaultConditions&lt;/em&gt;）の結果の&lt;em&gt;解決された非構造化&lt;/em&gt;値を&lt;em&gt;返し&lt;/em&gt;ます。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="20c663fe154fda49ed1fce401117b2a6714b5411" translate="yes" xml:space="preserve">
          <source>Return the &lt;em&gt;resolved&lt;/em&gt; destructured value of the result of &lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;subpath&lt;/em&gt;, &lt;em&gt;pjson.exports&lt;/em&gt;, &lt;em&gt;defaultConditions&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;PACKAGE_EXPORTS_RESOLVE&lt;/strong&gt;（&lt;em&gt;packageURL&lt;/em&gt;、&lt;em&gt;サブパス&lt;/em&gt;、&lt;em&gt;pjson.exports&lt;/em&gt;、&lt;em&gt;defaultConditions&lt;/em&gt;）の結果の&lt;em&gt;解決された非構造化&lt;/em&gt;値を&lt;em&gt;返し&lt;/em&gt;ます。&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d7715161740732b40547bc687fa73ce9c3f2bfc0" translate="yes" xml:space="preserve">
          <source>Return the IETF cipher name as &lt;code&gt;standardName&lt;/code&gt;.</source>
          <target state="translated">IETF暗号名を &lt;code&gt;standardName&lt;/code&gt; として返します。</target>
        </trans-unit>
        <trans-unit id="18abf64727800799d857e05f66f4e3f2c2a87ac1" translate="yes" xml:space="preserve">
          <source>Return the URL of the active inspector, or &lt;code&gt;undefined&lt;/code&gt; if there is none.</source>
          <target state="translated">アクティブなインスペクタのURLを返すか、存在し &lt;code&gt;undefined&lt;/code&gt; 場合はundefinedを返します。</target>
        </trans-unit>
        <trans-unit id="61784f517e10733ead68d5b879f29b51472e1253" translate="yes" xml:space="preserve">
          <source>Return the URL resolution of &lt;em&gt;packageSubpath&lt;/em&gt; in &lt;em&gt;packageURL&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;packageSubpath&lt;/em&gt;のURL解決を&lt;em&gt;packageURL&lt;/em&gt;に&lt;em&gt;返し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="50cce687f1a8816a4c2b5f3419a26b081a28dbfe" translate="yes" xml:space="preserve">
          <source>Return the URL resolution of &lt;em&gt;resolvedTarget&lt;/em&gt; with every instance of &lt;em&gt;&quot;*&quot;&lt;/em&gt; replaced with &lt;em&gt;subpath&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;「*」の&lt;/em&gt;すべてのインスタンスが&lt;em&gt;サブパスに&lt;/em&gt;置き換えられた&lt;em&gt;resolvedTarget&lt;/em&gt;のURL解決を返します。&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="02ff4aa2a24dbefce68146e9d7999ca226842cf2" translate="yes" xml:space="preserve">
          <source>Return the URL resolution of the concatenation of &lt;em&gt;subpath&lt;/em&gt; and &lt;em&gt;resolvedTarget&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;サブパス&lt;/em&gt;と&lt;em&gt;resolvedTargetの&lt;/em&gt;連結のURL解決を返します。</target>
        </trans-unit>
        <trans-unit id="c4ded376427d36228ba9e609eb18cb96f5c44a1d" translate="yes" xml:space="preserve">
          <source>Return the minimum cipher version, instead of a fixed string (&lt;code&gt;'TLSv1/SSLv3'&lt;/code&gt;).</source>
          <target state="translated">固定文字列（ &lt;code&gt;'TLSv1/SSLv3'&lt;/code&gt; ）ではなく、最小の暗号バージョンを返します。</target>
        </trans-unit>
        <trans-unit id="7a0f3c07dd82f1166c105f5e9f302a6872c9cffc" translate="yes" xml:space="preserve">
          <source>Return the object &lt;em&gt;{ resolved, exact: &lt;strong&gt;false&lt;/strong&gt; }&lt;/em&gt;.</source>
          <target state="translated">オブジェクトを返します&lt;em&gt;{解決済み、正確：&lt;strong&gt;false&lt;/strong&gt; }&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="986fc56b376869dd068a769fbdc33a64d8fc889b" translate="yes" xml:space="preserve">
          <source>Return the object &lt;em&gt;{ resolved, exact: &lt;strong&gt;true&lt;/strong&gt; }&lt;/em&gt;.</source>
          <target state="translated">オブジェクトを返します&lt;em&gt;{解決済み、正確：&lt;strong&gt;true&lt;/strong&gt; }&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="a83789a2a48702bd675a5014be299313bda8a0ba" translate="yes" xml:space="preserve">
          <source>Return the object &lt;em&gt;{ resolved: &lt;strong&gt;null&lt;/strong&gt;, exact: &lt;strong&gt;true&lt;/strong&gt; }&lt;/em&gt;.</source>
          <target state="translated">オブジェクトを返します&lt;em&gt;{解決済み：&lt;strong&gt;null&lt;/strong&gt;、正確：&lt;strong&gt;true&lt;/strong&gt; }&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="c439b6050f467a5fd6cc42a86edd7ee5181db31e" translate="yes" xml:space="preserve">
          <source>Return the parsed JSON source of the file at &lt;em&gt;pjsonURL&lt;/em&gt;.</source>
          <target state="translated">解析されたファイルのJSONソースを&lt;em&gt;pjsonURLに返し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="1e98b9797506b2df5f0081349b994c7f7dba909d" translate="yes" xml:space="preserve">
          <source>Return the result applying the legacy &lt;strong&gt;LOAD_AS_DIRECTORY&lt;/strong&gt; CommonJS resolver to &lt;em&gt;packageURL&lt;/em&gt;, throwing a &lt;em&gt;Module Not Found&lt;/em&gt; error for no resolution.</source>
          <target state="translated">従来の&lt;strong&gt;LOAD_AS_DIRECTORYCommonJS&lt;/strong&gt;リゾルバーを&lt;em&gt;packageURL&lt;/em&gt;に適用した結果を返し、解決が&lt;em&gt;ない&lt;/em&gt;場合は&lt;em&gt;Module &lt;/em&gt;&lt;em&gt;NotFound&lt;/em&gt;エラーをスローします。</target>
        </trans-unit>
        <trans-unit id="f4a9d092d65c3ad0af4eafbea10490f890efa46d" translate="yes" xml:space="preserve">
          <source>Return the result of &lt;strong&gt;PACKAGE_MAIN_RESOLVE&lt;/strong&gt;(&lt;em&gt;packageURL&lt;/em&gt;, &lt;em&gt;pjson&lt;/em&gt;).</source>
          <target state="translated">&lt;strong&gt;PACKAGE_MAIN_RESOLVE&lt;/strong&gt;（&lt;em&gt;packageURL&lt;/em&gt;、&lt;em&gt;pjson&lt;/em&gt;）の結果を返します。</target>
        </trans-unit>
        <trans-unit id="1a10f2337fcee347d4a14d464423ec2fe6b0c41f" translate="yes" xml:space="preserve">
          <source>Return the string &lt;em&gt;&quot;node:&quot;&lt;/em&gt; concatenated with &lt;em&gt;packageSpecifier&lt;/em&gt;.</source>
          <target state="translated">文字列&lt;em&gt;&quot;node：&quot;&lt;/em&gt;を&lt;em&gt;packageSpecifierと&lt;/em&gt;連結して&lt;em&gt;返し&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="93b5d476bf0e0bb9381b0893a8415851a4a099e0" translate="yes" xml:space="preserve">
          <source>Return the value of &lt;code&gt;highWaterMark&lt;/code&gt; passed when constructing this &lt;code&gt;Writable&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Writable&lt;/code&gt; の構築時に渡された &lt;code&gt;highWaterMark&lt;/code&gt; の値を返します。</target>
        </trans-unit>
        <trans-unit id="9d42e2f739c476b4724ed40443cd1bdc8b0b0c31" translate="yes" xml:space="preserve">
          <source>Return values</source>
          <target state="translated">戻り値</target>
        </trans-unit>
        <trans-unit id="74d9648a1f382268d4c8f65f58523764be803b8b" translate="yes" xml:space="preserve">
          <source>Returned by &lt;a href=&quot;#tls_tls_createsecurepair_context_isserver_requestcert_rejectunauthorized_options&quot;&gt;&lt;code&gt;tls.createSecurePair()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#tls_tls_createsecurepair_context_isserver_requestcert_rejectunauthorized_options&quot;&gt; &lt;code&gt;tls.createSecurePair()&lt;/code&gt; &lt;/a&gt;によって返されます。</target>
        </trans-unit>
        <trans-unit id="420b6ab0ef2aceed43ffa10c584355083c9b9029" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;を&lt;/a&gt;返します</target>
        </trans-unit>
        <trans-unit id="91e5be8b12b3ac52e7caeab3a75e9c306ff4349d" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; object, populating it with &lt;code&gt;reason&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, and &lt;code&gt;cert&lt;/code&gt; on failure. On success, returns &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt;オブジェクトを返し、失敗した場合は &lt;code&gt;reason&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; 、および &lt;code&gt;cert&lt;/code&gt; を入力します。成功した場合、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="5d31334356baf98d9e927d499dc5d4a0b2905f3b" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;を&lt;/a&gt;返します</target>
        </trans-unit>
        <trans-unit id="42ba9945553c3bec262a78b4a6b0b86b881b546a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded.</source>
          <target state="translated">APIが成功した場合は &lt;code&gt;napi_ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e7e95480ebf30137b762a3c77bc482cc9b451137" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-&lt;code&gt;BigInt&lt;/code&gt; is passed in it returns &lt;code&gt;napi_bigint_expected&lt;/code&gt;.</source>
          <target state="translated">APIが成功した場合は &lt;code&gt;napi_ok&lt;/code&gt; を返します。非場合 &lt;code&gt;BigInt&lt;/code&gt; それに渡された返し &lt;code&gt;napi_bigint_expected&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6490e121e190346eb949c231127b7b17ce3e190f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-&lt;code&gt;String&lt;/code&gt;&lt;code&gt;napi_value&lt;/code&gt; is passed in it returns &lt;code&gt;napi_string_expected&lt;/code&gt;.</source>
          <target state="translated">APIが成功した場合は &lt;code&gt;napi_ok&lt;/code&gt; を返します。非場合は &lt;code&gt;String&lt;/code&gt; &lt;code&gt;napi_value&lt;/code&gt; が、それに渡される返し &lt;code&gt;napi_string_expected&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fe03832713868cb497a4f8daae1c73856a340a5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-boolean &lt;code&gt;napi_value&lt;/code&gt; is passed in it returns &lt;code&gt;napi_boolean_expected&lt;/code&gt;.</source>
          <target state="translated">APIが成功した場合は &lt;code&gt;napi_ok&lt;/code&gt; を返します。非ブールの &lt;code&gt;napi_value&lt;/code&gt; が渡された場合は、 &lt;code&gt;napi_boolean_expected&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="01302c569fc84ae4d0477708f7191fa7853a34a1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-date &lt;code&gt;napi_value&lt;/code&gt; is passed in it returns &lt;code&gt;napi_date_expected&lt;/code&gt;.</source>
          <target state="translated">APIが成功した場合は &lt;code&gt;napi_ok&lt;/code&gt; を返します。日付以外の &lt;code&gt;napi_value&lt;/code&gt; が渡された場合は、 &lt;code&gt;napi_date_expected&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="feabd2bb4096a677fb9e9ef279fa731422ed4ae1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-detachable &lt;code&gt;ArrayBuffer&lt;/code&gt; is passed in it returns &lt;code&gt;napi_detachable_arraybuffer_expected&lt;/code&gt;.</source>
          <target state="translated">APIが成功した場合、 &lt;code&gt;napi_ok&lt;/code&gt; を返します。取り外し不可能な &lt;code&gt;ArrayBuffer&lt;/code&gt; が渡されると、 &lt;code&gt;napi_detachable_arraybuffer_expected&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="31244b3acfd586ba675eb591e660183d97f41fd1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-external &lt;code&gt;napi_value&lt;/code&gt; is passed in it returns &lt;code&gt;napi_invalid_arg&lt;/code&gt;.</source>
          <target state="translated">APIが成功した場合は &lt;code&gt;napi_ok&lt;/code&gt; を返します。非外部の場合 &lt;code&gt;napi_value&lt;/code&gt; が渡され、それを返し &lt;code&gt;napi_invalid_arg&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="23329f493b922c8c4a2dff1057e433060f168da7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-number &lt;code&gt;napi_value&lt;/code&gt; is passed in &lt;code&gt;napi_number_expected&lt;/code&gt;.</source>
          <target state="translated">APIが成功した場合は &lt;code&gt;napi_ok&lt;/code&gt; を返します。数値以外の &lt;code&gt;napi_value&lt;/code&gt; がnapi_number_expectedで渡された &lt;code&gt;napi_number_expected&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58a71a2991bdd62518b85281b0ee26ed6c433b0b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;napi_ok&lt;/code&gt; if the API succeeded. If a non-number &lt;code&gt;napi_value&lt;/code&gt; is passed in it returns &lt;code&gt;napi_number_expected&lt;/code&gt;.</source>
          <target state="translated">APIが成功した場合は &lt;code&gt;napi_ok&lt;/code&gt; を返します。非数値の &lt;code&gt;napi_value&lt;/code&gt; が渡された場合は、 &lt;code&gt;napi_number_expected&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="912046b5c0c3eff4b526fd9c1265c0a7605d1daf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;encoding&lt;/code&gt; contains a supported character encoding, or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; にサポートされている文字エンコーディングが含まれている場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5ba1c55d1e171d79aa0c489fbf4c605287dd3422" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;encoding&lt;/code&gt; is the name of a supported character encoding, or &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">戻り値 &lt;code&gt;true&lt;/code&gt; 場合 &lt;code&gt;encoding&lt;/code&gt; サポートされる文字エンコーディングの名前、またはである &lt;code&gt;false&lt;/code&gt; そう。</target>
        </trans-unit>
        <trans-unit id="a48585932f64a3376abdd2c47c6fc8d706314a00" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; が &lt;code&gt;Buffer&lt;/code&gt; の場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a83bc02a5fc390ffd39171e640645db7b7d4513a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if both &lt;code&gt;buf&lt;/code&gt; and &lt;code&gt;otherBuffer&lt;/code&gt; have exactly the same bytes, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; と &lt;code&gt;otherBuffer&lt;/code&gt; の両方がまったく同じバイトで &lt;code&gt;true&lt;/code&gt; 場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d405073b8dd050b974e8a247a7a58f2cc6de7f9c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if both &lt;code&gt;buf&lt;/code&gt; and &lt;code&gt;otherBuffer&lt;/code&gt; have exactly the same bytes, &lt;code&gt;false&lt;/code&gt; otherwise. Equivalent to &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt;&lt;code&gt;buf.compare(otherBuffer) === 0&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; と &lt;code&gt;otherBuffer&lt;/code&gt; の両方がまったく同じバイトを持っている場合は &lt;code&gt;true&lt;/code&gt; を返し、そうでない場合は &lt;code&gt;false&lt;/code&gt; を返します。&lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt; &lt;code&gt;buf.compare(otherBuffer) === 0&lt;/code&gt; &lt;/a&gt;同等です。</target>
        </trans-unit>
        <trans-unit id="c74363a01bd33635ca70935b465f81abdc17463f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if input is a version 4 IP address, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">戻り値 &lt;code&gt;true&lt;/code&gt; 入力はそう返し、バージョン4 IPアドレスである場合 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="293882fadee11416122fe70ed15e68f42702edb6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if input is a version 6 IP address, otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">戻り値 &lt;code&gt;true&lt;/code&gt; 入力はそう返し、バージョン6のIPアドレスである場合 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7df2cb53778ad5c09b59473658953c42bd6f01ab" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a block device.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; オブジェクトがブロックデバイスを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="48239c2b02562cb4d9584ca8c2f102296f26d742" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a character device.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; オブジェクトがキャラクターデバイスを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="acb62bbca56fec68d599da18ea22540e2b6c6214" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a file system directory.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; オブジェクトがファイルシステムディレクトリを表す場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="04f25724fe3f12c0436716ef4f77aa48bdc0f76f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a first-in-first-out (FIFO) pipe.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; オブジェクトが先入れ先出し（FIFO）パイプを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="818b436682c0daa0cb2532a311a2ee51cdd1ff23" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a regular file.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; オブジェクトが通常のファイルを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="648df0c44f2c9d68714003672ae601685a5a7be6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a socket.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; オブジェクトがソケットを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="61f3a2330b03e689eddc5f10458e200f8898e66a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Dirent&lt;/code&gt; object describes a symbolic link.</source>
          <target state="translated">&lt;code&gt;fs.Dirent&lt;/code&gt; オブジェクトがシンボリックリンクを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="06dd61ec6166ec63a2c1decfe9f64a9e31122295" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a block device.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; オブジェクトがブロックデバイスを表す場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5a5f63a6cfd5978d9b19ef38fb1b2df3611d6c2f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a character device.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; オブジェクトがキャラクターデバイスを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f8d14d0aa6a6d02f13d4b7e5842e3787d6793053" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a file system directory.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; オブジェクトがファイルシステムディレクトリを表す場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7e03465dae609471ab00113998dc3aaf405b5d14" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a first-in-first-out (FIFO) pipe.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; オブジェクトが先入れ先出し（FIFO）パイプを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3bbba6ccdbc98f57abe757077c945f5fdf172650" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a regular file.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; オブジェクトが通常のファイルを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="74c8d66d60f566f4e487f6feb8f1002c51e3e20d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a socket.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; オブジェクトがソケットを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5e5a581c7f7c795e704c94eae44e820b3925fa79" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;fs.Stats&lt;/code&gt; object describes a symbolic link.</source>
          <target state="translated">&lt;code&gt;fs.Stats&lt;/code&gt; オブジェクトがシンボリックリンクを記述している場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="34a4efcc3b91389e895d7623498133e381ec263b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;writeStream&lt;/code&gt; supports at least as many colors as provided in &lt;code&gt;count&lt;/code&gt;. Minimum support is 2 (black and white).</source>
          <target state="translated">&lt;code&gt;writeStream&lt;/code&gt; が少なくとも &lt;code&gt;count&lt;/code&gt; で提供される色と同じ数の色をサポートする場合、 &lt;code&gt;true&lt;/code&gt; を返します。最小サポートは2（白黒）です。</target>
        </trans-unit>
        <trans-unit id="ce963ad02fc7f7b8a079c4291f1f2a46690b8619" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the entire data was flushed successfully to the kernel buffer. Returns &lt;code&gt;false&lt;/code&gt; if all or part of the data was queued in user memory. &lt;a href=&quot;#net_event_drain&quot;&gt;&lt;code&gt;'drain'&lt;/code&gt;&lt;/a&gt; will be emitted when the buffer is again free.</source>
          <target state="translated">データ全体がカーネルバッファーに正常にフラッシュされた場合は &lt;code&gt;true&lt;/code&gt; を返します。データのすべてまたは一部がユーザーメモリにキューイングされている場合は &lt;code&gt;false&lt;/code&gt; を返します。バッファが再び解放されると、&lt;a href=&quot;#net_event_drain&quot;&gt; &lt;code&gt;'drain'&lt;/code&gt; &lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="276348c91eff63ca223f2f15967acbc96026fbdc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the entire data was flushed successfully to the kernel buffer. Returns &lt;code&gt;false&lt;/code&gt; if all or part of the data was queued in user memory. &lt;code&gt;'drain'&lt;/code&gt; will be emitted when the buffer is free again.</source>
          <target state="translated">データ全体がカーネルバッファーに正常にフラッシュされた場合は &lt;code&gt;true&lt;/code&gt; を返します。データのすべてまたは一部がユーザーメモリにキューイングされている場合は &lt;code&gt;false&lt;/code&gt; を返します。バッファが再び解放されると、 &lt;code&gt;'drain'&lt;/code&gt; が発生します。</target>
        </trans-unit>
        <trans-unit id="1a263323063f8db241c7a78af74e645839d34a7a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the event had listeners, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">イベントにリスナーが &lt;code&gt;true&lt;/code&gt; 場合はtrueを返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0df8d5ed27d5e40fa6549bcb180c4ddde3c200ad" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;undefined&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8b6a8e2068708c0a787cf9eb85cd09ef0a590d62" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is &lt;code&gt;undefined&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;undefined&lt;/code&gt; 場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e98bf54552be62359aaa6c0a4600d48c15165cbd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Boolean&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;Boolean&lt;/code&gt; の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5ee02b7f3f67da9ea4aab2d8f37774decdb82f02" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;Buffer&lt;/code&gt; の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7eb68872f279fb28b66c7311067cba32716303cc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Date&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;Date&lt;/code&gt; の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="13b545705c012ef53a3f698e8724fa828f144ad0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Function&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;Function&lt;/code&gt; の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="786576f537835bb677a577429422eed9d2a0df86" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Number&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;Number&lt;/code&gt; の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5b704dd0e99f586eb7e183844e4ba75b2a2f5b80" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;RegExp&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;RegExp&lt;/code&gt; の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="407e623414879e14451f183b09bc8d24ea9ee4c1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;Symbol&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;Symbol&lt;/code&gt; の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7fe70afc521e84ff7ddccb86dbd1572568e6ec1b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a &lt;code&gt;string&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;string&lt;/code&gt; 場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f81985b1de8afa8aa39b9fe0be8326fc5d80ea9a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is a primitive type. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; がプリミティブ型の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f0068d56a7c46ebed38480ad97024f96da835a3e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is an &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; の&lt;/a&gt;場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d13abc8b8314332f3313e017433598383f9e16c7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is an &lt;code&gt;Array&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が &lt;code&gt;Array&lt;/code&gt; の場合、 &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5184cf2fc4889b4b3db75643697a5afcb8744203" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is strictly &lt;code&gt;null&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が厳密に &lt;code&gt;null&lt;/code&gt; の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="194f3efb259177bb08cf8915711756496b2d3a54" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;object&lt;/code&gt; is strictly an &lt;code&gt;Object&lt;/code&gt;&lt;strong&gt;and&lt;/strong&gt; not a &lt;code&gt;Function&lt;/code&gt; (even though functions are objects in JavaScript). Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;object&lt;/code&gt; が厳密には &lt;code&gt;Object&lt;/code&gt; &lt;strong&gt;で&lt;/strong&gt;あり、 &lt;code&gt;Function&lt;/code&gt; &lt;strong&gt;で&lt;/strong&gt;はない場合に &lt;code&gt;true&lt;/code&gt; を返します（関数はJavaScriptのオブジェクトです）。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14894e7ab47bf2f6ade6f9ef401fc1f28dece1bc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;oject&lt;/code&gt; object has been &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt; using &lt;a href=&quot;#vm_vm_createcontext_contextobject_options&quot;&gt;&lt;code&gt;vm.createContext()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値 &lt;code&gt;true&lt;/code&gt; 与えられた場合 &lt;code&gt;oject&lt;/code&gt; オブジェクトがされてい&lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt;使用&lt;a href=&quot;#vm_vm_createcontext_contextobject_options&quot;&gt; &lt;code&gt;vm.createContext()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bfab5141fb6d9533fb194f62952086c49e46eeb3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;sandbox&lt;/code&gt; object has been &lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt; using &lt;a href=&quot;#vm_vm_createcontext_sandbox_options&quot;&gt;&lt;code&gt;vm.createContext()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値 &lt;code&gt;true&lt;/code&gt; 与えられた場合には &lt;code&gt;sandbox&lt;/code&gt; オブジェクトがされてい&lt;a href=&quot;#vm_what_does_it_mean_to_contextify_an_object&quot;&gt;contextified&lt;/a&gt;使用&lt;a href=&quot;#vm_vm_createcontext_sandbox_options&quot;&gt; &lt;code&gt;vm.createContext()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e442fed8858ab3568a2f501205a99e6557f747a0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the header identified by &lt;code&gt;name&lt;/code&gt; is currently set in the outgoing headers. The header name matching is case-insensitive.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; で識別されるヘッダーが現在送信ヘッダーに設定されている場合は &lt;code&gt;true&lt;/code&gt; を返します。ヘッダー名の照合では大文字と小文字は区別されません。</target>
        </trans-unit>
        <trans-unit id="8676260fe2a524103344cf76bf9692cd06df9462" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the path exists, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">パスが存在する場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b10e09e916d9e5d7423d4a9a04d037e6c6e3b14f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the peer certificate was signed by one of the CAs specified when creating the &lt;code&gt;tls.TLSSocket&lt;/code&gt; instance, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ピア証明書が &lt;code&gt;tls.TLSSocket&lt;/code&gt; インスタンスの作成時に指定されたいずれかのCAによって署名された場合は &lt;code&gt;true&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d979ce67fa8fc912118de321a335e72e91785756" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;インスタンスの場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7e2218d28bfc20ce7c16027ba849da041614969d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a &lt;code&gt;BigInt64Array&lt;/code&gt; instance.</source>
          <target state="translated">値が &lt;code&gt;BigInt64Array&lt;/code&gt; インスタンスで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="9a71b8bf4466e8da20235d42bee1074b60bc3667" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a &lt;code&gt;BigUint64Array&lt;/code&gt; instance.</source>
          <target state="translated">値が &lt;code&gt;BigUint64Array&lt;/code&gt; インスタンスの場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="785a8decd76012464a77c6ff201ef68f1e442d68" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a boolean object, e.g. created by &lt;code&gt;new Boolean()&lt;/code&gt;.</source>
          <target state="translated">値がブールオブジェクトの場合、たとえば &lt;code&gt;new Boolean()&lt;/code&gt; によって作成された場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8e9d777564e8280dd92fe7bf879c1493c358437b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; instance. This does &lt;em&gt;not&lt;/em&gt; include &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; instances. Usually, it is desirable to test for both; See &lt;a href=&quot;#util_util_types_isanyarraybuffer_value&quot;&gt;&lt;code&gt;util.types.isAnyArrayBuffer()&lt;/code&gt;&lt;/a&gt; for that.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。これには&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt;インスタンス&lt;em&gt;は&lt;/em&gt;含まれませ&lt;em&gt;ん&lt;/em&gt;。通常、両方をテストすることが望ましいです。これについては、&lt;a href=&quot;#util_util_types_isanyarraybuffer_value&quot;&gt; &lt;code&gt;util.types.isAnyArrayBuffer()&lt;/code&gt; &lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="46a4a458ef06f69a52e4d467b655f17d4b91321a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt;インスタンスの場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="95a8829b37cc62df639f4cad050338a64cc7aa03" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="d0beb0a41140a866fd845948a45a7fdad21eaf7a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt;インスタンスの場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a0853dc1e92d1be28c9b762a713fa968b1ae8dc6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="0a2d9fc4e538fef1607eac08da400ea6bab78fa5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array&quot;&gt;&lt;code&gt;Float64Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array&quot;&gt; &lt;code&gt;Float64Array&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="381685b0086a635e974585de21b006fe9ba072a7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array&quot;&gt;&lt;code&gt;Int16Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array&quot;&gt; &lt;code&gt;Int16Array&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="9c6039e3f7a5dafea69bb0fa22e6fe541270f088" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="8f5ade9e8bde9b6721d22e9c3351910696aa3e1f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array&quot;&gt;&lt;code&gt;Int8Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array&quot;&gt; &lt;code&gt;Int8Array&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="1d02d0201b201f4f6285e2a30d4744fac035db06" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="2db25b1d49660162babe876e0be3068615ee807b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; の&lt;/a&gt;場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="af5361daba0540c3983283ca384636daa9203016" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;インスタンスの場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6ab7ec82b84a92ac78c41795a8660fbc762c13ec" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt;&lt;code&gt;SharedArrayBuffer&lt;/code&gt;&lt;/a&gt; instance. This does &lt;em&gt;not&lt;/em&gt; include &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; instances. Usually, it is desirable to test for both; See &lt;a href=&quot;#util_util_types_isanyarraybuffer_value&quot;&gt;&lt;code&gt;util.types.isAnyArrayBuffer()&lt;/code&gt;&lt;/a&gt; for that.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer&quot;&gt; &lt;code&gt;SharedArrayBuffer&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。これには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;インスタンス&lt;em&gt;は&lt;/em&gt;含まれませ&lt;em&gt;ん&lt;/em&gt;。通常、両方をテストすることが望ましいです。これについては、&lt;a href=&quot;#util_util_types_isanyarraybuffer_value&quot;&gt; &lt;code&gt;util.types.isAnyArrayBuffer()&lt;/code&gt; &lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bf667220ccedd11a105679db49bde30d96cb98e7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&lt;code&gt;TypedArray&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt; &lt;code&gt;TypedArray&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="57f86e99feca19e77059f26340ae09817ab29891" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array&quot;&gt;&lt;code&gt;Uint16Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array&quot;&gt; &lt;code&gt;Uint16Array&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="4866de8dbd9aee00ebab0b66968aff8eca72fa5c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array&quot;&gt;&lt;code&gt;Uint32Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array&quot;&gt; &lt;code&gt;Uint32Array&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="52128487d75957d98ccd96e1acd89159dafc07fe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="4639c621526db92c2b5f776eebd50368dede70ee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray&quot;&gt;&lt;code&gt;Uint8ClampedArray&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray&quot;&gt; &lt;code&gt;Uint8ClampedArray&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="43869c58a969fb26c2f6a81142b88851e1d3ecc4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap&quot;&gt;&lt;code&gt;WeakMap&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap&quot;&gt; &lt;code&gt;WeakMap&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="564226bfb0fc0f9f2b322b6d0d250a68617bee4b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet&quot;&gt;&lt;code&gt;WeakSet&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet&quot;&gt; &lt;code&gt;WeakSet&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="0cb7d867d2930d648f0bbf9f34e6a8000d345e83" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Module&quot;&gt;&lt;code&gt;WebAssembly.Module&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Module&quot;&gt; &lt;code&gt;WebAssembly.Module&lt;/code&gt; &lt;/a&gt;インスタンスで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="3191f19eb059f70378a32281476692e94760a755" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a generator function. This only reports back what the JavaScript engine is seeing; in particular, the return value may not match the original source code if a transpilation tool was used.</source>
          <target state="translated">値がジェネレーター関数の場合は &lt;code&gt;true&lt;/code&gt; を返します。これはJavaScriptエンジンが見ているものを報告するだけです。特に、変換ツールを使用した場合、戻り値は元のソースコードと一致しない場合があります。</target>
        </trans-unit>
        <trans-unit id="b101301698d2fbd006f1e5232d0b5ab65343c235" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a generator object as returned from a built-in generator function. This only reports back what the JavaScript engine is seeing; in particular, the return value may not match the original source code if a transpilation tool was used.</source>
          <target state="translated">値が組み込みジェネレーター関数から返されたジェネレーターオブジェクトで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。これはJavaScriptエンジンが見ているものを報告するだけです。特に、変換ツールを使用した場合、戻り値は元のソースコードと一致しない場合があります。</target>
        </trans-unit>
        <trans-unit id="a60e78d28d6919c6def76200b18070989f9aa410" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a native &lt;code&gt;External&lt;/code&gt; value.</source>
          <target state="translated">値がネイティブの &lt;code&gt;External&lt;/code&gt; 値の場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a86428fe19e2818340020c32c786bceb6c15bcdd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a number object, e.g. created by &lt;code&gt;new Number()&lt;/code&gt;.</source>
          <target state="translated">値が数値オブジェクトの場合、たとえば &lt;code&gt;new Number()&lt;/code&gt; によって作成された場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d078b558fe9990a23e8bd4e04cc229cfd3e87353" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a regular expression object.</source>
          <target state="translated">値が正規表現オブジェクトの場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="04820d210aee11f78d8f6ebd4f4369c4c9878dcb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a string object, e.g. created by &lt;code&gt;new String()&lt;/code&gt;.</source>
          <target state="translated">値が文字列オブジェクトの場合、たとえば &lt;code&gt;new String()&lt;/code&gt; によって作成された場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e7fddb44ac889e46814e6a47a68fcab54ec0f747" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is a symbol object, created by calling &lt;code&gt;Object()&lt;/code&gt; on a &lt;code&gt;Symbol&lt;/code&gt; primitive.</source>
          <target state="translated">値が &lt;code&gt;Symbol&lt;/code&gt; プリミティブで &lt;code&gt;Object()&lt;/code&gt; を呼び出して作成されたシンボルオブジェクトの場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ae2d046d6307eeecfad15dbe0ce2387449ca0c3a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async function&lt;/a&gt;. This only reports back what the JavaScript engine is seeing; in particular, the return value may not match the original source code if a transpilation tool was used.</source>
          <target state="translated">値が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;非同期関数の&lt;/a&gt;場合は &lt;code&gt;true&lt;/code&gt; を返します。これはJavaScriptエンジンが見ているものを報告するだけです。特に、変換ツールを使用した場合、戻り値は元のソースコードと一致しない場合があります。</target>
        </trans-unit>
        <trans-unit id="cdfb29a07e3feb600ab95eed3f4c5465b3d4556e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an &lt;code&gt;arguments&lt;/code&gt; object.</source>
          <target state="translated">値が &lt;code&gt;arguments&lt;/code&gt; オブジェクトの場合、 &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="421220f1caa6bcf5d09904118d19904eba29f7de" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an instance of a &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;Module Namespace Object&lt;/a&gt;.</source>
          <target state="translated">値が&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;Module Namespace Objectの&lt;/a&gt;インスタンスである場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="06f92ac6dd6d93eeddd1e952804fbef3b74e556f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an instance of a built-in &lt;a href=&quot;errors#errors_class_error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; type.</source>
          <target state="translated">値が組み込み&lt;a href=&quot;errors#errors_class_error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt;タイプのインスタンスである場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="adc10d62fefab2383e2e8c1fdba42db604befcf2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an instance of one of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; views, such as typed array objects or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&lt;code&gt;DataView&lt;/code&gt;&lt;/a&gt;. Equivalent to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/isView&quot;&gt;&lt;code&gt;ArrayBuffer.isView()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値が、型付き配列オブジェクトや&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt; &lt;code&gt;DataView&lt;/code&gt; &lt;/a&gt;などの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;ビューの1つのインスタンスである場合に &lt;code&gt;true&lt;/code&gt; を返します。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer/isView&quot;&gt; &lt;code&gt;ArrayBuffer.isView()&lt;/code&gt; と&lt;/a&gt;同等です。</target>
        </trans-unit>
        <trans-unit id="ca44b39caa3bacec6113495d3298ae10fc0e3c36" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an iterator returned for a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">戻り値 &lt;code&gt;true&lt;/code&gt; 値は、内蔵のために返されるイテレータの場合は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt;のインスタンス。</target>
        </trans-unit>
        <trans-unit id="4753788dd1d8c9b62099f552212bfb4d7642670b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is an iterator returned for a built-in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt;&lt;code&gt;Set&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">値が組み込みの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set&quot;&gt; &lt;code&gt;Set&lt;/code&gt; &lt;/a&gt;インスタンスに対して返されたイテレータで &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="0f4fb1e79ea81956c2b50639b3cc851585b90546" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if the value is any boxed primitive object, e.g. created by &lt;code&gt;new Boolean()&lt;/code&gt;, &lt;code&gt;new String()&lt;/code&gt; or &lt;code&gt;Object(Symbol())&lt;/code&gt;.</source>
          <target state="translated">値がボックス化されたプリミティブオブジェクト（たとえば、 &lt;code&gt;new Boolean()&lt;/code&gt; 、 &lt;code&gt;new String()&lt;/code&gt; または &lt;code&gt;Object(Symbol())&lt;/code&gt; によって作成されたもの）で &lt;code&gt;true&lt;/code&gt; 場合、trueを返します。</target>
        </trans-unit>
        <trans-unit id="302b39171b929e5c6ddf8ea831569128861c8a14" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if there is at least one name-value pair whose name is &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">名前が &lt;code&gt;name&lt;/code&gt; である名前と値のペアが少なくとも1つ &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="08d0c2f34b1e650fe6a3e93fa011df3d9d222b22" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;true&lt;/code&gt; if there is deep strict equality between &lt;code&gt;val1&lt;/code&gt; and &lt;code&gt;val2&lt;/code&gt;. Otherwise, returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;val1&lt;/code&gt; と &lt;code&gt;val2&lt;/code&gt; の間に厳密な同等性が &lt;code&gt;true&lt;/code&gt; 場合はtrueを返します。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7c5da7ae7d9cba5e1321061ca1271e2b2b012333" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;undefined&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8cd10fd9bdaf7de603a180069f8fcd41f44537bf" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;#http2_settings_object&quot;&gt;HTTP/2 Settings Object&lt;/a&gt; containing the deserialized settings from the given &lt;code&gt;Buffer&lt;/code&gt; as generated by &lt;code&gt;http2.getPackedSettings()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;http2.getPackedSettings()&lt;/code&gt; によって生成された、指定された &lt;code&gt;Buffer&lt;/code&gt; からの直列化復元された設定を含む&lt;a href=&quot;#http2_settings_object&quot;&gt;HTTP / 2設定オブジェクト&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="2cf79f58f261d9563b0bb87a960f2a4fb191efeb" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Buffer&lt;/code&gt; instance containing serialized representation of the given HTTP/2 settings as specified in the &lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;HTTP/2&lt;/a&gt; specification. This is intended for use with the &lt;code&gt;HTTP2-Settings&lt;/code&gt; header field.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc7540&quot;&gt;HTTP / 2&lt;/a&gt;仕様で指定されている特定のHTTP / 2設定のシリアル化された表現を含む &lt;code&gt;Buffer&lt;/code&gt; インスタンスを返します。これは、 &lt;code&gt;HTTP2-Settings&lt;/code&gt; ヘッダーフィールドで使用するためのものです。</target>
        </trans-unit>
        <trans-unit id="d3e2a617166322b6cc4d00d24f8a35085a2c120b" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;ClientHttp2Session&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;ClientHttp2Session&lt;/code&gt; インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="6198af787c0e22e468f07e42308242edaf843ade" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Map&lt;/code&gt; object detailing the accumulated percentile distribution.</source>
          <target state="translated">累積パーセンタイル分布の詳細を示す &lt;code&gt;Map&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="06e17f8cb8bafe3a65a4eed325f4f81206edea4c" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Proxy&lt;/code&gt; object that acts as a &lt;code&gt;net.Socket&lt;/code&gt; (or &lt;code&gt;tls.TLSSocket&lt;/code&gt;) but applies getters, setters, and methods based on HTTP/2 logic.</source>
          <target state="translated">戻り &lt;code&gt;Proxy&lt;/code&gt; として動作するオブジェクト &lt;code&gt;net.Socket&lt;/code&gt; （又は &lt;code&gt;tls.TLSSocket&lt;/code&gt; HTTP / 2論理に基づいてゲッター、セッター、および方法）が、適用されます。</target>
        </trans-unit>
        <trans-unit id="ef2783dbbcdbce6612d524e1a6dff27404b17f41" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;Proxy&lt;/code&gt; object that acts as a &lt;code&gt;net.Socket&lt;/code&gt; (or &lt;code&gt;tls.TLSSocket&lt;/code&gt;) but limits available methods to ones safe to use with HTTP/2.</source>
          <target state="translated">戻り &lt;code&gt;Proxy&lt;/code&gt; として動作するオブジェクト &lt;code&gt;net.Socket&lt;/code&gt; （又は &lt;code&gt;tls.TLSSocket&lt;/code&gt; ）が、HTTP / 2を使用して安全なものに利用可能な方法を制限します。</target>
        </trans-unit>
        <trans-unit id="a9f259b4b73b05a85b76cb1f0780607ba2f51b08" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;net.Server&lt;/code&gt; instance that creates and manages &lt;code&gt;Http2Session&lt;/code&gt; instances.</source>
          <target state="translated">返し &lt;code&gt;net.Server&lt;/code&gt; の作成および管理インスタンス &lt;code&gt;Http2Session&lt;/code&gt; インスタンスを。</target>
        </trans-unit>
        <trans-unit id="04d228587f4430bd40ebc764f057dbf38931561e" translate="yes" xml:space="preserve">
          <source>Returns a &lt;code&gt;tls.Server&lt;/code&gt; instance that creates and manages &lt;code&gt;Http2Session&lt;/code&gt; instances.</source>
          <target state="translated">返し &lt;code&gt;tls.Server&lt;/code&gt; の作成および管理インスタンス &lt;code&gt;Http2Session&lt;/code&gt; インスタンスを。</target>
        </trans-unit>
        <trans-unit id="22e9b7d263dcf296973d738cd61d1abcbeee8b0f" translate="yes" xml:space="preserve">
          <source>Returns a JSON representation of &lt;code&gt;buf&lt;/code&gt;. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt; implicitly calls this function when stringifying a &lt;code&gt;Buffer&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; の JSON表現を返します。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt;は、 &lt;code&gt;Buffer&lt;/code&gt; インスタンスを文字列化するときに、この関数を暗黙的に呼び出します。</target>
        </trans-unit>
        <trans-unit id="1bf67c6959afd59239c42b866dae376572d88073" translate="yes" xml:space="preserve">
          <source>Returns a JavaScript Object representation of a diagnostic report for the running process. The report's JavaScript stack trace is taken from &lt;code&gt;err&lt;/code&gt;, if present.</source>
          <target state="translated">実行中のプロセスの診断レポートのJavaScriptオブジェクト表現を返します。レポートのJavaScriptスタックトレースは、存在する場合は &lt;code&gt;err&lt;/code&gt; から取得されます。</target>
        </trans-unit>
        <trans-unit id="4bd1198eccb6fd1eeec688bf52bc50f2f8a8ef2c" translate="yes" xml:space="preserve">
          <source>Returns a comma-separated list of all currently-enabled trace event categories. The current set of enabled trace event categories is determined by the &lt;em&gt;union&lt;/em&gt; of all currently-enabled &lt;code&gt;Tracing&lt;/code&gt; objects and any categories enabled using the &lt;code&gt;--trace-event-categories&lt;/code&gt; flag.</source>
          <target state="translated">現在有効になっているすべてのトレースイベントカテゴリのコンマ区切りのリストを返します。現在有効になっているトレースイベントカテゴリのセットは、現在有効になっているすべての &lt;code&gt;Tracing&lt;/code&gt; オブジェクトと &lt;code&gt;--trace-event-categories&lt;/code&gt; フラグを使用して有効になっているカテゴリの&lt;em&gt;和集合&lt;/em&gt;によって決まります。</target>
        </trans-unit>
        <trans-unit id="bc9bf0e51d33d4623a8d79de12c3e7e1595b9fb4" translate="yes" xml:space="preserve">
          <source>Returns a copy of the array of listeners for the event named &lt;code&gt;eventName&lt;/code&gt;, including any wrappers (such as those created by &lt;code&gt;.once()&lt;/code&gt;).</source>
          <target state="translated">ラッパー（ &lt;code&gt;.once()&lt;/code&gt; によって作成されたものなど）を含む、 &lt;code&gt;eventName&lt;/code&gt; というイベントのリスナーの配列のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="561819be046868a5ca91844a64c9020453c9aeb3" translate="yes" xml:space="preserve">
          <source>Returns a copy of the array of listeners for the event named &lt;code&gt;eventName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; という名前のイベントのリスナーの配列のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="4d0b998461932078601bb6ac86686584b61de78b" translate="yes" xml:space="preserve">
          <source>Returns a customizable serialization of a URL &lt;code&gt;String&lt;/code&gt; representation of a &lt;a href=&quot;#url_the_whatwg_url_api&quot;&gt;WHATWG URL&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;#url_the_whatwg_url_api&quot;&gt;WHATWG URL&lt;/a&gt;オブジェクトのURL &lt;code&gt;String&lt;/code&gt; 表現のカスタマイズ可能なシリアル化を返します。</target>
        </trans-unit>
        <trans-unit id="e4857cf64255db0b704173d9734cd3e3b581c2ea" translate="yes" xml:space="preserve">
          <source>Returns a decoded string, ensuring that any incomplete multibyte characters at the end of the &lt;code&gt;Buffer&lt;/code&gt;, or &lt;code&gt;TypedArray&lt;/code&gt;, or &lt;code&gt;DataView&lt;/code&gt; are omitted from the returned string and stored in an internal buffer for the next call to &lt;code&gt;stringDecoder.write()&lt;/code&gt; or &lt;code&gt;stringDecoder.end()&lt;/code&gt;.</source>
          <target state="translated">デコードされた文字列を返し、 &lt;code&gt;Buffer&lt;/code&gt; 、 &lt;code&gt;TypedArray&lt;/code&gt; 、または &lt;code&gt;DataView&lt;/code&gt; の最後の不完全なマルチバイト文字が返された文字列から省略され、次に &lt;code&gt;stringDecoder.write()&lt;/code&gt; または &lt;code&gt;stringDecoder.end()&lt;/code&gt; ）を呼び出すために内部バッファーに格納されるようにします。）。</target>
        </trans-unit>
        <trans-unit id="7fba362afeb49d4190078c47c49a5c6efdef37d0" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;PerformanceEntry&lt;/code&gt; objects in chronological order with respect to &lt;code&gt;performanceEntry.startTime&lt;/code&gt; whose &lt;code&gt;performanceEntry.entryType&lt;/code&gt; is equal to &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">戻り値のリスト &lt;code&gt;PerformanceEntry&lt;/code&gt; はに対して時系列順にオブジェクト &lt;code&gt;performanceEntry.startTime&lt;/code&gt; &lt;code&gt;performanceEntry.entryType&lt;/code&gt; に等しい &lt;code&gt;type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc020e28fd54d781f26128ae61c68e8b316b94af" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;PerformanceEntry&lt;/code&gt; objects in chronological order with respect to &lt;code&gt;performanceEntry.startTime&lt;/code&gt; whose &lt;code&gt;performanceEntry.name&lt;/code&gt; is equal to &lt;code&gt;name&lt;/code&gt;, and optionally, whose &lt;code&gt;performanceEntry.entryType&lt;/code&gt; is equal to &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">戻り値のリスト &lt;code&gt;PerformanceEntry&lt;/code&gt; はに対して時系列順にオブジェクト &lt;code&gt;performanceEntry.startTime&lt;/code&gt; &lt;code&gt;performanceEntry.name&lt;/code&gt; に等しく &lt;code&gt;name&lt;/code&gt; 、および必要に応じて、 &lt;code&gt;performanceEntry.entryType&lt;/code&gt; に等しい &lt;code&gt;type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="902f165f855c55df84bc96cfdf2001130c464832" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;PerformanceEntry&lt;/code&gt; objects in chronological order with respect to &lt;code&gt;performanceEntry.startTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;performanceEntry.startTime&lt;/code&gt; に関して時系列で &lt;code&gt;PerformanceEntry&lt;/code&gt; オブジェクトのリストを返します。</target>
        </trans-unit>
        <trans-unit id="74472aebff535334dadb398c3110fe6551d8c39e" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Buffer&lt;/code&gt; that references the same memory as the original, but offset and cropped by the &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; indices.</source>
          <target state="translated">元のメモリと同じメモリを参照する新しい &lt;code&gt;Buffer&lt;/code&gt; を返しますが、 &lt;code&gt;start&lt;/code&gt; インデックスと &lt;code&gt;end&lt;/code&gt; インデックスによってオフセットおよびトリミングされます。</target>
        </trans-unit>
        <trans-unit id="0811cb7de5a492d0366c29eab2286ed5937a1371" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;Buffer&lt;/code&gt; which is the result of concatenating all the &lt;code&gt;Buffer&lt;/code&gt; instances in the &lt;code&gt;list&lt;/code&gt; together.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 内のすべての &lt;code&gt;Buffer&lt;/code&gt; インスタンスを連結した結果である新しい &lt;code&gt;Buffer&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e62382e933431fd6a4460e4dc99f09dbd42a2f8b" translate="yes" xml:space="preserve">
          <source>Returns a new instance of &lt;a href=&quot;#http_class_http_server&quot;&gt;&lt;code&gt;http.Server&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http_class_http_server&quot;&gt; &lt;code&gt;http.Server&lt;/code&gt; の&lt;/a&gt;新しいインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="61af73ef1319d23e3ea8ccec936c0e689dc3594d" translate="yes" xml:space="preserve">
          <source>Returns a readable stream for a V8 snapshot of the current state of the Worker. See &lt;a href=&quot;v8#v8_v8_getheapsnapshot&quot;&gt;&lt;code&gt;v8.getHeapSnapshot()&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">ワーカーの現在の状態のV8スナップショットの読み取り可能なストリームを返します。詳細については、&lt;a href=&quot;v8#v8_v8_getheapsnapshot&quot;&gt; &lt;code&gt;v8.getHeapSnapshot()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="91cef74dac3bad7cb671c8d3b6aa495a757054a0" translate="yes" xml:space="preserve">
          <source>Returns a reference to the &lt;code&gt;EventEmitter&lt;/code&gt;, so that calls can be chained.</source>
          <target state="translated">呼び出しをチェーンできるように、 &lt;code&gt;EventEmitter&lt;/code&gt; への参照を返します。</target>
        </trans-unit>
        <trans-unit id="ac1587ed14e45504cd58f731e7734854c2de4ca8" translate="yes" xml:space="preserve">
          <source>Returns a reference to the &lt;code&gt;Http2ServerResponse&lt;/code&gt;, so that calls can be chained.</source>
          <target state="translated">&lt;code&gt;Http2ServerResponse&lt;/code&gt; への参照を返すため、呼び出しをチェーンできます。</target>
        </trans-unit>
        <trans-unit id="07ee2fe786b45ed6c10ed6a3b125a63c301b0b67" translate="yes" xml:space="preserve">
          <source>Returns a reference to the &lt;code&gt;ServerResponse&lt;/code&gt;, so that calls can be chained.</source>
          <target state="translated">&lt;code&gt;ServerResponse&lt;/code&gt; への参照を返すため、呼び出しをチェーンできます。</target>
        </trans-unit>
        <trans-unit id="fe8bd3a155addbecddaa417c2cc184546bee6ff7" translate="yes" xml:space="preserve">
          <source>Returns a shallow copy of the current outgoing headers. Since a shallow copy is used, array values may be mutated without additional calls to various header-related http module methods. The keys of the returned object are the header names and the values are the respective header values. All header names are lowercase.</source>
          <target state="translated">現在の送信ヘッダの浅いコピーを返します。浅いコピーが使用されるので、ヘッダ関連の様々な http モジュールのメソッドを追加で呼び出すことなく、 配列の値を変更することができます。返されるオブジェクトのキーがヘッダ名で、値がそれぞれのヘッダの値となります。すべてのヘッダ名は小文字です。</target>
        </trans-unit>
        <trans-unit id="b28dfb562525c1018427ed741596cec3c8a62565" translate="yes" xml:space="preserve">
          <source>Returns a string containing the negotiated SSL/TLS protocol version of the current connection. The value &lt;code&gt;'unknown'&lt;/code&gt; will be returned for connected sockets that have not completed the handshaking process. The value &lt;code&gt;null&lt;/code&gt; will be returned for server sockets or disconnected client sockets.</source>
          <target state="translated">現在の接続のネゴシエートされたSSL / TLSプロトコルバージョンを含む文字列を返します。ハンドシェイクプロセスを完了していない接続されたソケットの場合、値 &lt;code&gt;'unknown'&lt;/code&gt; が返されます。サーバーソケットまたは切断されたクライアントソケットの場合、値 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e1ac5be082fda93c073231aaf981056e948f3750" translate="yes" xml:space="preserve">
          <source>Returns a string identifying the current &lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;Punycode.js&lt;/a&gt; version number.</source>
          <target state="translated">現在の&lt;a href=&quot;https://github.com/bestiejs/punycode.js&quot;&gt;Punycode.js&lt;/a&gt;バージョン番号を識別する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="db4e785ebd5e486824f2256f59b97dc0e9bea7df" translate="yes" xml:space="preserve">
          <source>Returns a string identifying the endianness of the CPU for which the Node.js binary was compiled.</source>
          <target state="translated">Node.jsバイナリがコンパイルされたCPUのエンディアンを識別する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="1ead390c99e527f03619f732576a35ed206ac3d5" translate="yes" xml:space="preserve">
          <source>Returns a string identifying the kernel version.</source>
          <target state="translated">カーネルのバージョンを識別する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="11de7b0768d4643ea18873fed8ca59b87ca9a8fe" translate="yes" xml:space="preserve">
          <source>Returns a string identifying the operating system platform. The value is set at compile time. Possible values are &lt;code&gt;'aix'&lt;/code&gt;, &lt;code&gt;'darwin'&lt;/code&gt;, &lt;code&gt;'freebsd'&lt;/code&gt;, &lt;code&gt;'linux'&lt;/code&gt;, &lt;code&gt;'openbsd'&lt;/code&gt;, &lt;code&gt;'sunos'&lt;/code&gt;, and &lt;code&gt;'win32'&lt;/code&gt;.</source>
          <target state="translated">オペレーティングシステムプラットフォームを識別する文字列を返します。値はコンパイル時に設定されます。可能な値は、 &lt;code&gt;'aix'&lt;/code&gt; 、 &lt;code&gt;'darwin'&lt;/code&gt; 、 &lt;code&gt;'freebsd'&lt;/code&gt; 、 &lt;code&gt;'linux'&lt;/code&gt; 、 &lt;code&gt;'openbsd'&lt;/code&gt; 、 &lt;code&gt;'sunos'&lt;/code&gt; 、および &lt;code&gt;'win32'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="66119e2b8c80566d77b06e6e2706a1c6b6b77a95" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;AsyncIterator&lt;/code&gt; that iterates &lt;code&gt;eventName&lt;/code&gt; events. It will throw if the &lt;code&gt;EventEmitter&lt;/code&gt; emits &lt;code&gt;'error'&lt;/code&gt;. It removes all listeners when exiting the loop. The &lt;code&gt;value&lt;/code&gt; returned by each iteration is an array composed of the emitted event arguments.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; イベントを反復する &lt;code&gt;AsyncIterator&lt;/code&gt; を返します。 &lt;code&gt;EventEmitter&lt;/code&gt; が &lt;code&gt;'error'&lt;/code&gt; 発した場合にスローされます。ループを終了すると、すべてのリスナーが削除されます。 &lt;code&gt;value&lt;/code&gt; 各反復によって返さは、放出されたイベント引数からなる配列です。</target>
        </trans-unit>
        <trans-unit id="1236c23dbd8e5c478f8383b1c11432ce57448ee1" translate="yes" xml:space="preserve">
          <source>Returns an ES6 &lt;code&gt;Iterator&lt;/code&gt; over each of the name-value pairs in the query string. Each item of the iterator is a JavaScript &lt;code&gt;Array&lt;/code&gt;. The first item of the &lt;code&gt;Array&lt;/code&gt; is the &lt;code&gt;name&lt;/code&gt;, the second item of the &lt;code&gt;Array&lt;/code&gt; is the &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">クエリ文字列の名前と値のペアごとにES6 &lt;code&gt;Iterator&lt;/code&gt; を返します。イテレータの各項目はJavaScript &lt;code&gt;Array&lt;/code&gt; です。最初の項目 &lt;code&gt;Array&lt;/code&gt; ある &lt;code&gt;name&lt;/code&gt; の2番目の項目、 &lt;code&gt;Array&lt;/code&gt; ある &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bfe2a7322bab735edd23097775de1c25db3eb319" translate="yes" xml:space="preserve">
          <source>Returns an ES6 &lt;code&gt;Iterator&lt;/code&gt; over each of the name-value pairs in the query. Each item of the iterator is a JavaScript &lt;code&gt;Array&lt;/code&gt;. The first item of the &lt;code&gt;Array&lt;/code&gt; is the &lt;code&gt;name&lt;/code&gt;, the second item of the &lt;code&gt;Array&lt;/code&gt; is the &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">クエリ内の名前と値のペアごとにES6 &lt;code&gt;Iterator&lt;/code&gt; を返します。イテレータの各項目はJavaScript &lt;code&gt;Array&lt;/code&gt; です。最初の項目 &lt;code&gt;Array&lt;/code&gt; ある &lt;code&gt;name&lt;/code&gt; の2番目の項目、 &lt;code&gt;Array&lt;/code&gt; ある &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e337341122048affa51857fd79670f7b5062640" translate="yes" xml:space="preserve">
          <source>Returns an ES6 &lt;code&gt;Iterator&lt;/code&gt; over the names of each name-value pair.</source>
          <target state="translated">名前と値の各ペアの名前に対するES6 &lt;code&gt;Iterator&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ebe6f9a33188642fe746f00bde8af994bbf8ed37" translate="yes" xml:space="preserve">
          <source>Returns an ES6 &lt;code&gt;Iterator&lt;/code&gt; over the values of each name-value pair.</source>
          <target state="translated">名前と値の各ペアの値に対するES6 &lt;code&gt;Iterator&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a462fa6350d4732602d072a57657744880738c71" translate="yes" xml:space="preserve">
          <source>Returns an array containing the 1, 5, and 15 minute load averages.</source>
          <target state="translated">1分、5分、15分の負荷平均を含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="123039f4e87b5ca30ab90bcb4e8b070180c85be8" translate="yes" xml:space="preserve">
          <source>Returns an array containing the current &lt;code&gt;EventTarget&lt;/code&gt; as the only entry or empty if the event is not being dispatched. This is not used in Node.js and is provided purely for completeness.</source>
          <target state="translated">現在の &lt;code&gt;EventTarget&lt;/code&gt; を唯一のエントリとして含む配列を返します。イベントがディスパッチされていない場合は、空を返します。これはNode.jsでは使用されず、完全を期すためにのみ提供されています。</target>
        </trans-unit>
        <trans-unit id="3bb88c4b58e79ea0b0a4326f90077a48177a924b" translate="yes" xml:space="preserve">
          <source>Returns an array containing the paths searched during resolution of &lt;code&gt;request&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; if the &lt;code&gt;request&lt;/code&gt; string references a core module, for example &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;fs&lt;/code&gt;.</source>
          <target state="translated">戻り経路を含む配列の解決時に検索 &lt;code&gt;request&lt;/code&gt; または &lt;code&gt;null&lt;/code&gt; なら &lt;code&gt;request&lt;/code&gt; 例えば、文字列参照コアモジュール &lt;code&gt;http&lt;/code&gt; または &lt;code&gt;fs&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6e5e1037f722a6f0cb3b9503536eb54ca40f1a3" translate="yes" xml:space="preserve">
          <source>Returns an array containing the unique names of the current outgoing headers. All header names are lowercase.</source>
          <target state="translated">現在の送信ヘッダの一意の名前を含む配列を返します。すべてのヘッダ名は小文字です。</target>
        </trans-unit>
        <trans-unit id="e926b97e7d3a43fdc438eb706b5720705f93f9b3" translate="yes" xml:space="preserve">
          <source>Returns an array listing the events for which the emitter has registered listeners. The values in the array are strings or &lt;code&gt;Symbol&lt;/code&gt;s.</source>
          <target state="translated">エミッターがリスナーを登録したイベントをリストする配列を返します。配列の値は文字列または &lt;code&gt;Symbol&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a68ef3d0d9fccec086b9111913ffd95d29034dd7" translate="yes" xml:space="preserve">
          <source>Returns an array listing the events for which the emitter has registered listeners. The values in the array will be strings or &lt;code&gt;Symbol&lt;/code&gt;s.</source>
          <target state="translated">エミッターがリスナーを登録したイベントをリストする配列を返します。配列の値は文字列または &lt;code&gt;Symbol&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="610ddb8e961538ad03654dde2b21839e8808b226" translate="yes" xml:space="preserve">
          <source>Returns an array of IP address strings, formatted according to &lt;a href=&quot;https://tools.ietf.org/html/rfc5952#section-6&quot;&gt;RFC 5952&lt;/a&gt;, that are currently configured for DNS resolution. A string will include a port section if a custom port is used.</source>
          <target state="translated">現在DNS解決用に構成されている、&lt;a href=&quot;https://tools.ietf.org/html/rfc5952#section-6&quot;&gt;RFC 5952&lt;/a&gt;に従ってフォーマットされたIPアドレス文字列の配列を返します。カスタムポートが使用されている場合、文字列にはポートセクションが含まれます。</target>
        </trans-unit>
        <trans-unit id="e8a122a0aff7510e87d2b9116049afacc2d1c2e9" translate="yes" xml:space="preserve">
          <source>Returns an array of objects containing information about each logical CPU core.</source>
          <target state="translated">各論理 CPU コアに関する情報を含むオブジェクトの配列を返します。</target>
        </trans-unit>
        <trans-unit id="b1ebe410734a4b05055e09aa8191eb7f70359917" translate="yes" xml:space="preserve">
          <source>Returns an array with the names of the supported TLS ciphers. The names are lower-case for historical reasons, but must be uppercased to be used in the &lt;code&gt;ciphers&lt;/code&gt; option of &lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt;&lt;code&gt;tls.createSecureContext()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">サポートされているTLS暗号の名前を含む配列を返します。名前は歴史的な理由のために小文字であるが、に使用する大文字されなければならない &lt;code&gt;ciphers&lt;/code&gt; のオプション&lt;a href=&quot;#tls_tls_createsecurecontext_options&quot;&gt; &lt;code&gt;tls.createSecureContext()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="25947ce891e464a86af71ee6580ee05e3aba08f6" translate="yes" xml:space="preserve">
          <source>Returns an integer representing a &quot;version tag&quot; derived from the V8 version, command line flags and detected CPU features. This is useful for determining whether a &lt;a href=&quot;vm#vm_constructor_new_vm_script_code_options&quot;&gt;&lt;code&gt;vm.Script&lt;/code&gt;&lt;/a&gt;&lt;code&gt;cachedData&lt;/code&gt; buffer is compatible with this instance of V8.</source>
          <target state="translated">V8バージョン、コマンドラインフラグ、および検出されたCPU機能から派生した「バージョンタグ」を表す整数を返します。これは、&lt;a href=&quot;vm#vm_constructor_new_vm_script_code_options&quot;&gt; &lt;code&gt;vm.Script&lt;/code&gt; &lt;/a&gt; &lt;code&gt;cachedData&lt;/code&gt; バッファーがV8のこのインスタンスと互換性があるかどうかを判断するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="26cf7573bd22e44c59283ee695a853fa11beb926" translate="yes" xml:space="preserve">
          <source>Returns an integer representing a &quot;version tag&quot; derived from the V8 version, command-line flags and detected CPU features. This is useful for determining whether a &lt;a href=&quot;vm#vm_new_vm_script_code_options&quot;&gt;&lt;code&gt;vm.Script&lt;/code&gt;&lt;/a&gt;&lt;code&gt;cachedData&lt;/code&gt; buffer is compatible with this instance of V8.</source>
          <target state="translated">V8バージョン、コマンドラインフラグ、および検出されたCPU機能から派生した「バージョンタグ」を表す整数を返します。これは、 &lt;code&gt;cachedData&lt;/code&gt; バッファーがV8のこのインスタンスと互換性があるかどうかを判断するのに&lt;a href=&quot;vm#vm_new_vm_script_code_options&quot;&gt; &lt;code&gt;vm.Script&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="cf612284e77484bffbfe2d8234c0c3a88bb05e82" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the file descriptor.</source>
          <target state="translated">ファイルディスクリプタを表す整数を返します。</target>
        </trans-unit>
        <trans-unit id="d456891518c2009e39374ef8bcf41f5ae84b4d1e" translate="yes" xml:space="preserve">
          <source>Returns an object containing commonly used constants for file system operations. The specific constants currently defined are described in &lt;a href=&quot;#fs_fs_constants_1&quot;&gt;FS Constants&lt;/a&gt;.</source>
          <target state="translated">ファイルシステム操作に一般的に使用される定数を含むオブジェクトを返します。現在定義されている特定の定数については、「&lt;a href=&quot;#fs_fs_constants_1&quot;&gt;FS定数」で&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="1fc4429cedc17ba4b6f16260996593c97a18d5da" translate="yes" xml:space="preserve">
          <source>Returns an object containing commonly used constants for file system operations. The specific constants currently defined are described in &lt;a href=&quot;#fs_fs_constants_1&quot;&gt;FS constants&lt;/a&gt;.</source>
          <target state="translated">ファイルシステム操作で一般的に使用される定数を含むオブジェクトを返します。現在定義されている特定の定数は、&lt;a href=&quot;#fs_fs_constants_1&quot;&gt;FS定数で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="4e572bb804a1147bd064b30d81099aa7a3dc137f" translate="yes" xml:space="preserve">
          <source>Returns an object containing commonly used operating system specific constants for error codes, process signals, and so on. The specific constants currently defined are described in &lt;a href=&quot;#os_os_constants_1&quot;&gt;OS Constants&lt;/a&gt;.</source>
          <target state="translated">エラーコード、プロセス信号などに一般的に使用されるオペレーティングシステム固有の定数を含むオブジェクトを返します。現在定義されている特定の定数については、&lt;a href=&quot;#os_os_constants_1&quot;&gt;OS定数で&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="173effd1912d413c3c7d0e6a153f7bf24a5cc776" translate="yes" xml:space="preserve">
          <source>Returns an object containing information on the negotiated cipher suite.</source>
          <target state="translated">ネゴシエートされた暗号スイートに関する情報を含むオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="748cdd242f7bb2d7b6df39aee0de1a0c4d6442a5" translate="yes" xml:space="preserve">
          <source>Returns an object containing network interfaces that have been assigned a network address.</source>
          <target state="translated">ネットワークアドレスが割り当てられたネットワークインターフェースを含むオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="da8195a7211af5cae4886b2fed4d7f6905fa2cf0" translate="yes" xml:space="preserve">
          <source>Returns an object containing the &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, and &lt;code&gt;port&lt;/code&gt; of the remote endpoint. It throws an &lt;a href=&quot;errors#errors_err_socket_dgram_not_connected&quot;&gt;&lt;code&gt;ERR_SOCKET_DGRAM_NOT_CONNECTED&lt;/code&gt;&lt;/a&gt; exception if the socket is not connected.</source>
          <target state="translated">リモートエンドポイントの &lt;code&gt;address&lt;/code&gt; 、 &lt;code&gt;family&lt;/code&gt; 、および &lt;code&gt;port&lt;/code&gt; を含むオブジェクトを返します。ソケットが接続されていない場合は、&lt;a href=&quot;errors#errors_err_socket_dgram_not_connected&quot;&gt; &lt;code&gt;ERR_SOCKET_DGRAM_NOT_CONNECTED&lt;/code&gt; &lt;/a&gt;例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="2e39dd35f7e67f65dcecc7348c28e082d09f299b" translate="yes" xml:space="preserve">
          <source>Returns an object containing the &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt;, and &lt;code&gt;port&lt;/code&gt; of the remote endpoint. This method throws an &lt;a href=&quot;errors#errors_err_socket_dgram_not_connected&quot;&gt;&lt;code&gt;ERR_SOCKET_DGRAM_NOT_CONNECTED&lt;/code&gt;&lt;/a&gt; exception if the socket is not connected.</source>
          <target state="translated">リモートエンドポイントの &lt;code&gt;address&lt;/code&gt; 、 &lt;code&gt;family&lt;/code&gt; 、および &lt;code&gt;port&lt;/code&gt; を含むオブジェクトを返します。このメソッドは、ソケットが接続されていない場合、&lt;a href=&quot;errors#errors_err_socket_dgram_not_connected&quot;&gt; &lt;code&gt;ERR_SOCKET_DGRAM_NOT_CONNECTED&lt;/code&gt; &lt;/a&gt;例外をスローします。</target>
        </trans-unit>
        <trans-unit id="7ed293ba4253d486315065868e45cc74fab4cb64" translate="yes" xml:space="preserve">
          <source>Returns an object containing the address information for a socket. For UDP sockets, this object will contain &lt;code&gt;address&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; properties.</source>
          <target state="translated">ソケットのアドレス情報を含むオブジェクトを返します。UDPソケットの場合、このオブジェクトには、 &lt;code&gt;address&lt;/code&gt; 、 &lt;code&gt;family&lt;/code&gt; 、および &lt;code&gt;port&lt;/code&gt; プロパティが含まれます。</target>
        </trans-unit>
        <trans-unit id="750fa8850c8540e221a90bc0891080e9adc18780" translate="yes" xml:space="preserve">
          <source>Returns an object containing the default settings for an &lt;code&gt;Http2Session&lt;/code&gt; instance. This method returns a new object instance every time it is called so instances returned may be safely modified for use.</source>
          <target state="translated">&lt;code&gt;Http2Session&lt;/code&gt; インスタンスのデフォルト設定を含むオブジェクトを返します。このメソッドは、呼び出されるたびに新しいオブジェクトインスタンスを返すため、返されたインスタンスは安全に変更して使用できます。</target>
        </trans-unit>
        <trans-unit id="2820150cc3e1eaf834f7299a6835fc7f855875b4" translate="yes" xml:space="preserve">
          <source>Returns an object representing the local certificate. The returned object has some properties corresponding to the fields of the certificate.</source>
          <target state="translated">ローカル証明書を表すオブジェクトを返します。返されるオブジェクトは、証明書のフィールドに対応するいくつかのプロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="7531e2092f9bfbe2a3eaa62713494a2261e891e5" translate="yes" xml:space="preserve">
          <source>Returns an object representing the peer's certificate. If the peer does not provide a certificate, an empty object will be returned. If the socket has been destroyed, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">ピアの証明書を表すオブジェクトを返します。ピアが証明書を提供しない場合、空のオブジェクトが返されます。ソケットが破棄された場合、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="995d65522c158e88648a08776250cd3d9e63dbf5" translate="yes" xml:space="preserve">
          <source>Returns an object representing the type, name, and size of parameter of an ephemeral key exchange in &lt;a href=&quot;#tls_perfect_forward_secrecy&quot;&gt;Perfect Forward Secrecy&lt;/a&gt; on a client connection. It returns an empty object when the key exchange is not ephemeral. As this is only supported on a client socket; &lt;code&gt;null&lt;/code&gt; is returned if called on a server socket. The supported types are &lt;code&gt;'DH'&lt;/code&gt; and &lt;code&gt;'ECDH'&lt;/code&gt;. The &lt;code&gt;name&lt;/code&gt; property is available only when type is &lt;code&gt;'ECDH'&lt;/code&gt;.</source>
          <target state="translated">クライアント接続の&lt;a href=&quot;#tls_perfect_forward_secrecy&quot;&gt;Perfect Forward Secrecyの&lt;/a&gt;一時鍵交換のタイプ、名前、およびパラメータのサイズを表すオブジェクトを返します。鍵交換が一時的でない場合、空のオブジェクトを返します。これはクライアントソケットでのみサポートされているため、サーバーソケットで呼び出された場合は &lt;code&gt;null&lt;/code&gt; が返されます。サポートされているタイプは &lt;code&gt;'DH'&lt;/code&gt; と &lt;code&gt;'ECDH'&lt;/code&gt; です。 &lt;code&gt;name&lt;/code&gt; タイプがある場合にのみ、プロパティが提供されています &lt;code&gt;'ECDH'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3507c243576c93ffd0250b3494357ed54b67a93e" translate="yes" xml:space="preserve">
          <source>Returns an object representing the type, name, and size of parameter of an ephemeral key exchange in &lt;a href=&quot;#tls_perfect_forward_secrecy&quot;&gt;perfect forward secrecy&lt;/a&gt; on a client connection. It returns an empty object when the key exchange is not ephemeral. As this is only supported on a client socket; &lt;code&gt;null&lt;/code&gt; is returned if called on a server socket. The supported types are &lt;code&gt;'DH'&lt;/code&gt; and &lt;code&gt;'ECDH'&lt;/code&gt;. The &lt;code&gt;name&lt;/code&gt; property is available only when type is &lt;code&gt;'ECDH'&lt;/code&gt;.</source>
          <target state="translated">クライアント接続で&lt;a href=&quot;#tls_perfect_forward_secrecy&quot;&gt;完全転送秘密&lt;/a&gt;でエフェメラルキー交換のパラメータのタイプ、名前、およびサイズを表すオブジェクトを返します。鍵交換が一時的でない場合は、空のオブジェクトを返します。これはクライアントソケットでのみサポートされているため、サーバーソケットで呼び出された場合、 &lt;code&gt;null&lt;/code&gt; が返されます。サポートされているタイプは &lt;code&gt;'DH'&lt;/code&gt; と &lt;code&gt;'ECDH'&lt;/code&gt; です。 &lt;code&gt;name&lt;/code&gt; タイプがある場合にのみ、プロパティが提供されています &lt;code&gt;'ECDH'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4aa378ad70b6c268d4283ae1d4f0b9e2cf709a82" translate="yes" xml:space="preserve">
          <source>Returns an object with the following properties:</source>
          <target state="translated">以下のプロパティを持つオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="9c4d4a07a5fcbaacee5ee35f84b852f3b32d8425" translate="yes" xml:space="preserve">
          <source>Returns an un-pooled &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">プールされていない &lt;code&gt;Buffer&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3a9a91c3e09581ccb37580de798a48cf9803a5b8" translate="yes" xml:space="preserve">
          <source>Returns any remaining input stored in the internal buffer as a string. Bytes representing incomplete UTF-8 and UTF-16 characters will be replaced with substitution characters appropriate for the character encoding.</source>
          <target state="translated">内部バッファに格納されている残りの入力を文字列として返します。不完全な UTF-8 および UTF-16 文字を表すバイトは、文字エンコーディングに適した置換文字で置き換えられます。</target>
        </trans-unit>
        <trans-unit id="a9b1a82cf7c7d8bd2044be6f4234cba1d8644b00" translate="yes" xml:space="preserve">
          <source>Returns information about the currently effective user. On POSIX platforms, this is typically a subset of the password file. The returned object includes the &lt;code&gt;username&lt;/code&gt;, &lt;code&gt;uid&lt;/code&gt;, &lt;code&gt;gid&lt;/code&gt;, &lt;code&gt;shell&lt;/code&gt;, and &lt;code&gt;homedir&lt;/code&gt;. On Windows, the &lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;gid&lt;/code&gt; fields are &lt;code&gt;-1&lt;/code&gt;, and &lt;code&gt;shell&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">現在有効なユーザーに関する情報を返します。POSIXプラットフォームでは、これは通常、パスワードファイルのサブセットです。返されるオブジェクトには、 &lt;code&gt;username&lt;/code&gt; 、 &lt;code&gt;uid&lt;/code&gt; 、 &lt;code&gt;gid&lt;/code&gt; 、 &lt;code&gt;shell&lt;/code&gt; 、および &lt;code&gt;homedir&lt;/code&gt; が含まれます。Windowsでは、 &lt;code&gt;uid&lt;/code&gt; フィールドと &lt;code&gt;gid&lt;/code&gt; フィールドは &lt;code&gt;-1&lt;/code&gt; であり、 &lt;code&gt;shell&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4b052bbeb43177eb562f5dcbb97ec364f16cf417" translate="yes" xml:space="preserve">
          <source>Returns statistics about the V8 heap spaces, i.e. the segments which make up the V8 heap. Neither the ordering of heap spaces, nor the availability of a heap space can be guaranteed as the statistics are provided via the V8 &lt;a href=&quot;https://v8docs.nodesource.com/node-10.6/d5/dda/classv8_1_1_isolate.html#ac673576f24fdc7a33378f8f57e1d13a4&quot;&gt;&lt;code&gt;GetHeapSpaceStatistics&lt;/code&gt;&lt;/a&gt; function and may change from one V8 version to the next.</source>
          <target state="translated">V8ヒープスペース、つまりV8ヒープを構成するセグメントに関する統計を返します。統計はV8の&lt;a href=&quot;https://v8docs.nodesource.com/node-10.6/d5/dda/classv8_1_1_isolate.html#ac673576f24fdc7a33378f8f57e1d13a4&quot;&gt; &lt;code&gt;GetHeapSpaceStatistics&lt;/code&gt; &lt;/a&gt;関数を介して提供され、V8のバージョンによって変わる可能性があるため、ヒープスペースの順序やヒープスペースの可用性は保証されません。</target>
        </trans-unit>
        <trans-unit id="44ec07d74cc27b20f6c6074328c1e8ed3c1b476c" translate="yes" xml:space="preserve">
          <source>Returns statistics about the V8 heap spaces, i.e. the segments which make up the V8 heap. Neither the ordering of heap spaces, nor the availability of a heap space can be guaranteed as the statistics are provided via the V8 &lt;a href=&quot;https://v8docs.nodesource.com/node-13.2/d5/dda/classv8_1_1_isolate.html#ac673576f24fdc7a33378f8f57e1d13a4&quot;&gt;&lt;code&gt;GetHeapSpaceStatistics&lt;/code&gt;&lt;/a&gt; function and may change from one V8 version to the next.</source>
          <target state="translated">V8ヒープスペース、つまりV8ヒープを構成するセグメントに関する統計を返します。統計は&lt;a href=&quot;https://v8docs.nodesource.com/node-13.2/d5/dda/classv8_1_1_isolate.html#ac673576f24fdc7a33378f8f57e1d13a4&quot;&gt; &lt;code&gt;GetHeapSpaceStatistics&lt;/code&gt; &lt;/a&gt;関数を介して提供され、V8バージョンごとに変更される可能性があるため、ヒープスペースの順序もヒープスペースの可用性も保証されません。</target>
        </trans-unit>
        <trans-unit id="45db15db2dcfb072ce8605ea2bf68458199b15ef" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; ASCII serialization of the &lt;code&gt;domain&lt;/code&gt;. If &lt;code&gt;domain&lt;/code&gt; is an invalid domain, the empty string is returned.</source>
          <target state="translated">&lt;code&gt;domain&lt;/code&gt; &lt;a href=&quot;https://tools.ietf.org/html/rfc5891#section-4.4&quot;&gt;Punycode&lt;/a&gt; ASCIIシリアル化を返します。場合は &lt;code&gt;domain&lt;/code&gt; 無効なドメインである、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="98898842cd6551d8800bdbfeebfc44ab04ab2665" translate="yes" xml:space="preserve">
          <source>Returns the Diffie-Hellman generator in the specified &lt;code&gt;encoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">指定された &lt;code&gt;encoding&lt;/code&gt; でDiffie-Hellmanジェネレータを返します。場合 &lt;code&gt;encoding&lt;/code&gt; 提供された文字列が返されます。それ以外の場合は、&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="6a0a7927638c2649823b5cbac3a879f06a186a66" translate="yes" xml:space="preserve">
          <source>Returns the Diffie-Hellman prime in the specified &lt;code&gt;encoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">指定された &lt;code&gt;encoding&lt;/code&gt; でDiffie-Hellmanプライムを返します。場合 &lt;code&gt;encoding&lt;/code&gt; 提供された文字列が返されます。それ以外の場合は、&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="6627764123ab141ec400365e75bdf78a99dd4bdc" translate="yes" xml:space="preserve">
          <source>Returns the Diffie-Hellman private key in the specified &lt;code&gt;encoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">指定された &lt;code&gt;encoding&lt;/code&gt; でDiffie-Hellman秘密鍵を返します。場合 &lt;code&gt;encoding&lt;/code&gt; 提供された文字列が返されます。それ以外の場合は、&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="9ef4010a3c1c90585980b5f9eb86b11fe7769642" translate="yes" xml:space="preserve">
          <source>Returns the Diffie-Hellman public key in the specified &lt;code&gt;encoding&lt;/code&gt;. If &lt;code&gt;encoding&lt;/code&gt; is provided a string is returned; otherwise a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">指定された &lt;code&gt;encoding&lt;/code&gt; でDiffie-Hellman公開鍵を返します。場合 &lt;code&gt;encoding&lt;/code&gt; 提供された文字列が返されます。それ以外の場合は、&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="edbef7b2c1ed2c9e7830fd035d00024de41a885b" translate="yes" xml:space="preserve">
          <source>Returns the TLS session data or &lt;code&gt;undefined&lt;/code&gt; if no session was negotiated. On the client, the data can be provided to the &lt;code&gt;session&lt;/code&gt; option of &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt; to resume the connection. On the server, it may be useful for debugging.</source>
          <target state="translated">TLSセッションデータを返すか、セッションがネゴシエートされてい &lt;code&gt;undefined&lt;/code&gt; 場合はundefinedを返します。クライアントでは、データを&lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;session&lt;/code&gt; オプションに提供して、接続を再開できます。サーバーでは、デバッグに役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="57b27aa48986b75bb3551c198e16b773599b9b8c" translate="yes" xml:space="preserve">
          <source>Returns the Unicode serialization of the &lt;code&gt;domain&lt;/code&gt;. If &lt;code&gt;domain&lt;/code&gt; is an invalid domain, the empty string is returned.</source>
          <target state="translated">&lt;code&gt;domain&lt;/code&gt; Unicodeシリアル化を返します。場合は &lt;code&gt;domain&lt;/code&gt; 無効なドメインである、空の文字列が返されます。</target>
        </trans-unit>
        <trans-unit id="0068da462d18b054608370aac757b84d634716d4" translate="yes" xml:space="preserve">
          <source>Returns the actual byte length of a string. This is not the same as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt;&lt;code&gt;String.prototype.length&lt;/code&gt;&lt;/a&gt; since that returns the number of &lt;em&gt;characters&lt;/em&gt; in a string.</source>
          <target state="translated">文字列の実際のバイト長を返します。これは文字列の&lt;em&gt;文字数&lt;/em&gt;を返すため、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt; &lt;code&gt;String.prototype.length&lt;/code&gt; &lt;/a&gt;とは異なります。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="ff03537cfe9bed4f0f672d2c3d8385deba2ad896" translate="yes" xml:space="preserve">
          <source>Returns the amount of free system memory in bytes as an integer.</source>
          <target state="translated">システムメモリの空き容量をバイト単位で整数で返します。</target>
        </trans-unit>
        <trans-unit id="eff8baf78545477617253b6617803f45f21d82d4" translate="yes" xml:space="preserve">
          <source>Returns the amount of memory allocated for &lt;code&gt;buf&lt;/code&gt; in bytes. This does not necessarily reflect the amount of &quot;usable&quot; data within &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; に割り当てられたメモリの量をバイト単位で返します。これは、 &lt;code&gt;buf&lt;/code&gt; 内の「使用可能な」データの量を必ずしも反映しているわけではありません。</target>
        </trans-unit>
        <trans-unit id="9adc1dc6b3119619aa6757948115b873a2cb7a0e" translate="yes" xml:space="preserve">
          <source>Returns the bound &lt;code&gt;address&lt;/code&gt;, the address &lt;code&gt;family&lt;/code&gt; name and &lt;code&gt;port&lt;/code&gt; of the socket as reported by the operating system: &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt;</source>
          <target state="translated">オペレーティングシステムから報告された、バインドされた &lt;code&gt;address&lt;/code&gt; 、アドレス &lt;code&gt;family&lt;/code&gt; 名、およびソケットの &lt;code&gt;port&lt;/code&gt; を返します。 &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61a395fa48acb9e3b01e1eb83c79ea596ddc0f42" translate="yes" xml:space="preserve">
          <source>Returns the bound &lt;code&gt;address&lt;/code&gt;, the address &lt;code&gt;family&lt;/code&gt; name, and &lt;code&gt;port&lt;/code&gt; of the server as reported by the operating system if listening on an IP socket (useful to find which port was assigned when getting an OS-assigned address): &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt;.</source>
          <target state="translated">IPソケットをリッスンしている場合にオペレーティングシステムによって報告された、バインドされた &lt;code&gt;address&lt;/code&gt; 、アドレス &lt;code&gt;family&lt;/code&gt; 名、およびサーバーの &lt;code&gt;port&lt;/code&gt; を返します（OS割り当てアドレスを取得するときに割り当てられたポートを見つけるのに役立ちます）： &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="374ed6b9a5508a74572575b672e0d5c72a48b13c" translate="yes" xml:space="preserve">
          <source>Returns the bound &lt;code&gt;address&lt;/code&gt;, the address &lt;code&gt;family&lt;/code&gt; name, and &lt;code&gt;port&lt;/code&gt; of the underlying socket as reported by the operating system: &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt;.</source>
          <target state="translated">オペレーティングシステムによって報告された、バインドされた &lt;code&gt;address&lt;/code&gt; 、アドレス &lt;code&gt;family&lt;/code&gt; 名、および基になるソケットの &lt;code&gt;port&lt;/code&gt; を返します： &lt;code&gt;{ port: 12346, family: 'IPv4', address: '127.0.0.1' }&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6082e6b174694a1a1eed3e9eddf7ccbf0829c911" translate="yes" xml:space="preserve">
          <source>Returns the bound address, the address family name, and port of the server as reported by the operating system. See &lt;a href=&quot;net#net_server_address&quot;&gt;&lt;code&gt;net.Server.address()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">オペレーティングシステムによって報告された、バインドされたアドレス、アドレスファミリ名、およびサーバーのポートを返します。詳細については、&lt;a href=&quot;net#net_server_address&quot;&gt; &lt;code&gt;net.Server.address()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2d902c811b6b56aec9ea9c49e5208a0b8d4200ef" translate="yes" xml:space="preserve">
          <source>Returns the byte length of a string when encoded using &lt;code&gt;encoding&lt;/code&gt;. This is not the same as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt;&lt;code&gt;String.prototype.length&lt;/code&gt;&lt;/a&gt;, which does not account for the encoding that is used to convert the string into bytes.</source>
          <target state="translated">&lt;code&gt;encoding&lt;/code&gt; を使用してエンコードされた場合の文字列のバイト長を返します。これは、文字列をバイトに変換するために使用されるエンコーディングを考慮しない&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length&quot;&gt; &lt;code&gt;String.prototype.length&lt;/code&gt; &lt;/a&gt;と同じではありません。</target>
        </trans-unit>
        <trans-unit id="071cebe2872a8ea37b4886d971ed479585e668bd" translate="yes" xml:space="preserve">
          <source>Returns the contents of the &lt;code&gt;path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; の内容を返します。</target>
        </trans-unit>
        <trans-unit id="ea5b212a444f0cb0505ba2ddb70a8efb8677b87e" translate="yes" xml:space="preserve">
          <source>Returns the created directory path.</source>
          <target state="translated">作成されたディレクトリのパスを返します。</target>
        </trans-unit>
        <trans-unit id="5836f2f216bdcc81566cb1f8c1b4f11262594afa" translate="yes" xml:space="preserve">
          <source>Returns the created folder path.</source>
          <target state="translated">作成されたフォルダのパスを返します。</target>
        </trans-unit>
        <trans-unit id="fb236989cd3f1b1bc41f2e815e115dc73f6e3727" translate="yes" xml:space="preserve">
          <source>Returns the current high resolution millisecond timestamp, where 0 represents the start of the current &lt;code&gt;node&lt;/code&gt; process.</source>
          <target state="translated">現在の高解像度ミリ秒のタイムスタンプを返します。0は現在の &lt;code&gt;node&lt;/code&gt; プロセスの開始を表します。</target>
        </trans-unit>
        <trans-unit id="ec5241b9d16cda2178e57fa4c3714774bdf911c3" translate="yes" xml:space="preserve">
          <source>Returns the current max listener value for the &lt;code&gt;EventEmitter&lt;/code&gt; which is either set by &lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt;&lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt;&lt;/a&gt; or defaults to &lt;a href=&quot;#events_eventemitter_defaultmaxlisteners&quot;&gt;&lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EventEmitter&lt;/code&gt; の現在の最大リスナー値を返します。この値は、&lt;a href=&quot;#events_emitter_setmaxlisteners_n&quot;&gt; &lt;code&gt;emitter.setMaxListeners(n)&lt;/code&gt; &lt;/a&gt;によって設定されるか、デフォルトで&lt;a href=&quot;#events_eventemitter_defaultmaxlisteners&quot;&gt; &lt;code&gt;EventEmitter.defaultMaxListeners&lt;/code&gt; に&lt;/a&gt;設定されます。</target>
        </trans-unit>
        <trans-unit id="9145e2a409d9fdfbacefef665729af53fc3fad5a" translate="yes" xml:space="preserve">
          <source>Returns the current number of concurrent connections on the server.</source>
          <target state="translated">サーバ上での現在の同時接続数を返します。</target>
        </trans-unit>
        <trans-unit id="6a9bdbfae31a8d0d931c3c82482340f061a5bb3f" translate="yes" xml:space="preserve">
          <source>Returns the host name of the operating system as a string.</source>
          <target state="translated">オペレーティングシステムのホスト名を文字列で返します。</target>
        </trans-unit>
        <trans-unit id="ef504216da3f0e4259ee7d9ff984238f04c7eaf8" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of bytes that will be returned when &lt;code&gt;buf.inspect()&lt;/code&gt; is called. This can be overridden by user modules. See &lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt;&lt;code&gt;util.inspect()&lt;/code&gt;&lt;/a&gt; for more details on &lt;code&gt;buf.inspect()&lt;/code&gt; behavior.</source>
          <target state="translated">&lt;code&gt;buf.inspect()&lt;/code&gt; が呼び出されたときに返される最大バイト数を返します。これは、ユーザーモジュールによってオーバーライドできます。参照&lt;a href=&quot;util#util_util_inspect_object_options&quot;&gt; &lt;code&gt;util.inspect()&lt;/code&gt; &lt;/a&gt;の詳細については &lt;code&gt;buf.inspect()&lt;/code&gt; の挙動を。</target>
        </trans-unit>
        <trans-unit id="6dd943f3f2b8d1e6152925a2e81b61fca45d16a6" translate="yes" xml:space="preserve">
          <source>Returns the number of &lt;code&gt;bytesRead&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bytesRead&lt;/code&gt; 数を返します。</target>
        </trans-unit>
        <trans-unit id="69b7126e4358107d393e0aa002bcbe6ba9ee393a" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes in &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;buf&lt;/code&gt; のバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="d58236714d6024bf32d6e0a028f2a5dbd354b9a5" translate="yes" xml:space="preserve">
          <source>Returns the number of listeners listening to the event named &lt;code&gt;eventName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eventName&lt;/code&gt; という名前のイベントをリスニングしているリスナーの数を返します。</target>
        </trans-unit>
        <trans-unit id="53492b1e727540b40dc4ecc74a016733338f873d" translate="yes" xml:space="preserve">
          <source>Returns the numeric representation of the local port.</source>
          <target state="translated">ローカルポートの数値表現を返します。</target>
        </trans-unit>
        <trans-unit id="6982249d36f4d8f98edd319d6201ff42981dcde9" translate="yes" xml:space="preserve">
          <source>Returns the numeric representation of the remote port. For example, &lt;code&gt;443&lt;/code&gt;.</source>
          <target state="translated">リモートポートの数値表現を返します。たとえば、 &lt;code&gt;443&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dee1377bd13b4f741a90953bedb6f28b9669a300" translate="yes" xml:space="preserve">
          <source>Returns the operating system CPU architecture for which the Node.js binary was compiled. Possible values are &lt;code&gt;'arm'&lt;/code&gt;, &lt;code&gt;'arm64'&lt;/code&gt;, &lt;code&gt;'ia32'&lt;/code&gt;, &lt;code&gt;'mips'&lt;/code&gt;, &lt;code&gt;'mipsel'&lt;/code&gt;, &lt;code&gt;'ppc'&lt;/code&gt;, &lt;code&gt;'ppc64'&lt;/code&gt;, &lt;code&gt;'s390'&lt;/code&gt;, &lt;code&gt;'s390x'&lt;/code&gt;, &lt;code&gt;'x32'&lt;/code&gt;, and &lt;code&gt;'x64'&lt;/code&gt;.</source>
          <target state="translated">Node.jsバイナリがコンパイルされたオペレーティングシステムのCPUアーキテクチャを返します。可能な値は、 &lt;code&gt;'arm'&lt;/code&gt; 、 &lt;code&gt;'arm64'&lt;/code&gt; 、 &lt;code&gt;'ia32'&lt;/code&gt; 、 &lt;code&gt;'mips'&lt;/code&gt; 、 &lt;code&gt;'mipsel'&lt;/code&gt; 、 &lt;code&gt;'ppc'&lt;/code&gt; 、 &lt;code&gt;'ppc64'&lt;/code&gt; 、 &lt;code&gt;'s390'&lt;/code&gt; 、 &lt;code&gt;'s390x'&lt;/code&gt; 、 &lt;code&gt;'x32'&lt;/code&gt; 、および &lt;code&gt;'x64'&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e50265dcfc76ffca7193349f579d08e2a4308cc5" translate="yes" xml:space="preserve">
          <source>Returns the operating system as a string.</source>
          <target state="translated">オペレーティングシステムを文字列で返します。</target>
        </trans-unit>
        <trans-unit id="6317e8c41a82b97dcd592f2ec7e42e4d01621826" translate="yes" xml:space="preserve">
          <source>Returns the operating system name as returned by &lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt;&lt;code&gt;uname(3)&lt;/code&gt;&lt;/a&gt;. For example, it returns &lt;code&gt;'Linux'&lt;/code&gt; on Linux, &lt;code&gt;'Darwin'&lt;/code&gt; on macOS, and &lt;code&gt;'Windows_NT'&lt;/code&gt; on Windows.</source>
          <target state="translated">&lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt; &lt;code&gt;uname(3)&lt;/code&gt; &lt;/a&gt;によって返されるオペレーティングシステム名を返します。たとえば、 &lt;code&gt;'Linux'&lt;/code&gt; Linux &lt;code&gt;'Darwin'&lt;/code&gt; 、macOSでは「Darwin &lt;code&gt;'Windows_NT'&lt;/code&gt; 、Windowsでは「Windows_NT」を返します。</target>
        </trans-unit>
        <trans-unit id="40cc7639f933dccb6b0f7ddff1c6a33c1816bd7e" translate="yes" xml:space="preserve">
          <source>Returns the operating system's default directory for temporary files as a string.</source>
          <target state="translated">一時ファイル用のオペレーティングシステムのデフォルトディレクトリを文字列で返します。</target>
        </trans-unit>
        <trans-unit id="4d82fa58b1c14c3793098eb50b5d7e6983075073" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (PID) of the child process.</source>
          <target state="translated">子プロセスのプロセス識別子(PID)を返します。</target>
        </trans-unit>
        <trans-unit id="df0ebc3538d52e588049a38e4f32f5d69114bcfb" translate="yes" xml:space="preserve">
          <source>Returns the real position of the cursor in relation to the input prompt + string. Long input (wrapping) strings, as well as multiple line prompts are included in the calculations.</source>
          <target state="translated">入力プロンプト+文字列に対するカーソルの実位置を返します。長い入力(ラッピング)文字列や複数行のプロンプトも計算に含まれます。</target>
        </trans-unit>
        <trans-unit id="db69158a96de834eafe2dff64fb97332c62b7f60" translate="yes" xml:space="preserve">
          <source>Returns the reason why the peer's certificate was not been verified. This property is set only when &lt;code&gt;tlsSocket.authorized === false&lt;/code&gt;.</source>
          <target state="translated">ピアの証明書が検証されなかった理由を返します。このプロパティは、 &lt;code&gt;tlsSocket.authorized === false&lt;/code&gt; 場合にのみ設定されます。</target>
        </trans-unit>
        <trans-unit id="04c70ec43b749ee998de7fb550ee6dead266c171" translate="yes" xml:space="preserve">
          <source>Returns the resolved pathname.</source>
          <target state="translated">解決したパス名を返します。</target>
        </trans-unit>
        <trans-unit id="a2355716360152b28c81b3a5297260607d51e4d7" translate="yes" xml:space="preserve">
          <source>Returns the scheduling priority for the process specified by &lt;code&gt;pid&lt;/code&gt;. If &lt;code&gt;pid&lt;/code&gt; is not provided or is &lt;code&gt;0&lt;/code&gt;, the priority of the current process is returned.</source>
          <target state="translated">&lt;code&gt;pid&lt;/code&gt; で指定されたプロセスのスケジューリング優先度を返します。場合 &lt;code&gt;pid&lt;/code&gt; 提供またはされないが &lt;code&gt;0&lt;/code&gt; 、現在のプロセスの優先度が返されます。</target>
        </trans-unit>
        <trans-unit id="200273a822e3aaa1bc2bbb9d27ba8b6a35fa7abe" translate="yes" xml:space="preserve">
          <source>Returns the search parameters serialized as a string, with characters percent-encoded where necessary.</source>
          <target state="translated">検索パラメータを文字列としてシリアライズし、必要に応じてパーセンテージエンコードして返します。</target>
        </trans-unit>
        <trans-unit id="e916ce1f1336be8da02872aa51272138e120c899" translate="yes" xml:space="preserve">
          <source>Returns the session ticket keys.</source>
          <target state="translated">セッションチケットのキーを返します。</target>
        </trans-unit>
        <trans-unit id="cf7d46cf475b05865b4c7cbeaf9171f009b1f150" translate="yes" xml:space="preserve">
          <source>Returns the stored internal buffer. This serializer should not be used once the buffer is released. Calling this method results in undefined behavior if a previous write has failed.</source>
          <target state="translated">保存されている内部バッファを返します。このシリアライザは、バッファが解放された後は使用しないでください。このメソッドを呼び出すと、前の書き込みが失敗した場合に未定義の動作になります。</target>
        </trans-unit>
        <trans-unit id="e7819a63e0a625c45d827c29558e1c5508469ead" translate="yes" xml:space="preserve">
          <source>Returns the string name for a numeric error code that comes from a Node.js API. The mapping between error codes and error names is platform-dependent. See &lt;a href=&quot;errors#errors_common_system_errors&quot;&gt;Common System Errors&lt;/a&gt; for the names of common errors.</source>
          <target state="translated">Node.js APIからの数値エラーコードの文字列名を返します。エラーコードとエラー名の間のマッピングはプラットフォームに依存します。一般的なエラーの名前については、一般的&lt;a href=&quot;errors#errors_common_system_errors&quot;&gt;なシステムエラー&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="18f3b7b4a1306c8021422d2fb5b5972cf57054f8" translate="yes" xml:space="preserve">
          <source>Returns the string path of the current user's home directory.</source>
          <target state="translated">現在のユーザのホームディレクトリの文字列パスを返します。</target>
        </trans-unit>
        <trans-unit id="759c0f0f1e622c8003e49a8fd92ad5175fce066b" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the local IP address.</source>
          <target state="translated">ローカルIPアドレスの文字列表現を返します。</target>
        </trans-unit>
        <trans-unit id="d975c4d372aa6db34e85b9a72f9c40912341c3a7" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the remote IP address. For example, &lt;code&gt;'74.125.127.100'&lt;/code&gt; or &lt;code&gt;'2001:4860:a005::68'&lt;/code&gt;.</source>
          <target state="translated">リモートIPアドレスの文字列表現を返します。たとえば、 &lt;code&gt;'74.125.127.100'&lt;/code&gt; または &lt;code&gt;'2001:4860:a005::68'&lt;/code&gt; a005 :: 68 'です。</target>
        </trans-unit>
        <trans-unit id="31a0881e6c107c6cf8c4aa32244a29272114a296" translate="yes" xml:space="preserve">
          <source>Returns the string representation of the remote IP family. &lt;code&gt;'IPv4'&lt;/code&gt; or &lt;code&gt;'IPv6'&lt;/code&gt;.</source>
          <target state="translated">リモートIPファミリの文字列表現を返します。 &lt;code&gt;'IPv4'&lt;/code&gt; または &lt;code&gt;'IPv6'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="425b8f0997948d49962446dda105e9e704cde96c" translate="yes" xml:space="preserve">
          <source>Returns the system uptime in number of seconds.</source>
          <target state="translated">システムの稼働時間を秒単位で返します。</target>
        </trans-unit>
        <trans-unit id="55aec27b031c7379c992a8a1228d22ec603c36bc" translate="yes" xml:space="preserve">
          <source>Returns the total amount of system memory in bytes as an integer.</source>
          <target state="translated">システムメモリの総量をバイト単位で整数で返します。</target>
        </trans-unit>
        <trans-unit id="fe8ad9f0cbd6bd65ca0017f8fd6eee29f777b6e9" translate="yes" xml:space="preserve">
          <source>Returns the value at the given percentile.</source>
          <target state="translated">指定したパーセンタイルの値を返します。</target>
        </trans-unit>
        <trans-unit id="aee11e2c3f5b7a58d5f35df7a8a6b19cdcd93e38" translate="yes" xml:space="preserve">
          <source>Returns the value of &lt;code&gt;highWaterMark&lt;/code&gt; passed when constructing this &lt;code&gt;Readable&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Readable&lt;/code&gt; の構築時に渡された &lt;code&gt;highWaterMark&lt;/code&gt; の値を返します。</target>
        </trans-unit>
        <trans-unit id="01c2d7f74a46b64ca833036aed85b7df17d0c19f" translate="yes" xml:space="preserve">
          <source>Returns the value of the first name-value pair whose name is &lt;code&gt;name&lt;/code&gt;. If there are no such pairs, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">名前が &lt;code&gt;name&lt;/code&gt; である最初の名前と値のペアの値を返します。そのようなペアがない場合、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="0cba16c334cb3a6e22542a99f3d4faba02875cbb" translate="yes" xml:space="preserve">
          <source>Returns the values of all name-value pairs whose name is &lt;code&gt;name&lt;/code&gt;. If there are no such pairs, an empty array is returned.</source>
          <target state="translated">名前が &lt;code&gt;name&lt;/code&gt; であるすべての名前と値のペアの値を返します。そのようなペアがない場合は、空の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="b27809aa4afa35639351a1bde16f5f62e14cc743" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;async_hooks#async_hooks_async_hooks_createhook_callbacks&quot;&gt;&amp;lt;AsyncHook&amp;gt;&lt;/a&gt; A reference to &lt;code&gt;asyncHook&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;async_hooks#async_hooks_async_hooks_createhook_callbacks&quot;&gt;&amp;lt;AsyncHook&amp;gt; &lt;/a&gt; &lt;code&gt;asyncHook&lt;/code&gt; への参照。</target>
        </trans-unit>
        <trans-unit id="53d4e51fba70a5949c3d8dfb7144610744be21a1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;async_hooks#async_hooks_async_hooks_createhook_callbacks&quot;&gt;&amp;lt;AsyncHook&amp;gt;&lt;/a&gt; Instance used for disabling and enabling hooks</source>
          <target state="translated">戻り値：&lt;a href=&quot;async_hooks#async_hooks_async_hooks_createhook_callbacks&quot;&gt;&amp;lt;AsyncHook&amp;gt;&lt;/a&gt;フックの無効化と有効化に使用されるインスタンス</target>
        </trans-unit>
        <trans-unit id="c49509a21fae79ba834bd46f4ba8decd2ca596a4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;async_hooks#async_hooks_class_asyncresource&quot;&gt;&amp;lt;AsyncResource&amp;gt;&lt;/a&gt; A reference to &lt;code&gt;asyncResource&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;async_hooks#async_hooks_class_asyncresource&quot;&gt;&amp;lt;AsyncResource&amp;gt; &lt;/a&gt; &lt;code&gt;asyncResource&lt;/code&gt; への参照。</target>
        </trans-unit>
        <trans-unit id="d05f9960e9157089593dc608b33a44459d25bb26" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec8c25536a811e7f76c3455e5ac56cb802742d5b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; A 48-byte buffer containing the session ticket keys.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;セッションチケットキーを含む48バイトのバッファ。</target>
        </trans-unit>
        <trans-unit id="7b4cfe33f12970cc8131188e9a6130c82dae1e3b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; A new &lt;code&gt;Buffer&lt;/code&gt; with the decrypted content.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;復号化されたコンテンツを含む新しい &lt;code&gt;Buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46d4e0041f35dbf70d0444719807fb3233f621b2" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; A new &lt;code&gt;Buffer&lt;/code&gt; with the encrypted content.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;暗号化されたコンテンツを含む新しい &lt;code&gt;Buffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e4ee4ea5a1b6ac2a523dc57bd880fe6589aab09" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; A reference to &lt;code&gt;buf&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt; &lt;/a&gt; &lt;code&gt;buf&lt;/code&gt; への参照。</target>
        </trans-unit>
        <trans-unit id="33304fc5eedb1f580a95a9378c85e20c3538b602" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; The challenge component of the &lt;code&gt;spkac&lt;/code&gt; data structure, which includes a public key and a challenge.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt; &lt;/a&gt; &lt;code&gt;spkac&lt;/code&gt; データ構造のチャレンジコンポーネント。公開鍵とチャレンジが含まれます。</target>
        </trans-unit>
        <trans-unit id="f84a3873c93bc30081f41253fec83554c999b424" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; The public key component of the &lt;code&gt;spkac&lt;/code&gt; data structure, which includes a public key and a challenge.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt; &lt;/a&gt; &lt;code&gt;spkac&lt;/code&gt; データ構造の公開鍵コンポーネント。公開鍵とチャレンジが含まれます。</target>
        </trans-unit>
        <trans-unit id="dedfd48e9684624bb8788952dfa151bb36102b7e" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; When using an authenticated encryption mode (&lt;code&gt;GCM&lt;/code&gt;, &lt;code&gt;CCM&lt;/code&gt; and &lt;code&gt;OCB&lt;/code&gt; are currently supported), the &lt;code&gt;cipher.getAuthTag()&lt;/code&gt; method returns a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; containing the &lt;em&gt;authentication tag&lt;/em&gt; that has been computed from the given data.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;認証された暗号化モード（ &lt;code&gt;GCM&lt;/code&gt; 、 &lt;code&gt;CCM&lt;/code&gt; および &lt;code&gt;OCB&lt;/code&gt; が現在サポートされています）を使用している場合、 &lt;code&gt;cipher.getAuthTag()&lt;/code&gt; メソッドは、指定されたデータから計算された&lt;em&gt;認証タグ&lt;/em&gt;を含む&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;を返します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6615bb33e455396904663d440a93a6a2649dfe38" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; if the &lt;code&gt;callback&lt;/code&gt; function is not provided.</source>
          <target state="translated">戻り値： &lt;code&gt;callback&lt;/code&gt; 関数が提供されていない場合、&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="131fbe48df213189e8f6aabe058dc51ce9451ef0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; requested bytes of the keying material</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;がキーイングマテリアルのバイトを要求しました</target>
        </trans-unit>
        <trans-unit id="1f4d97a7b7cb99aa29253d49cb2663b09c4e366f" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;文字列&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6eefdd73a6dde53adc1879b745b0609f5274ab1b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Any remaining deciphered contents. If &lt;code&gt;outputEncoding&lt;/code&gt; is specified, a string is returned. If an &lt;code&gt;outputEncoding&lt;/code&gt; is not provided, a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;解読された残りのコンテンツ。場合 &lt;code&gt;outputEncoding&lt;/code&gt; が指定され、文字列が返されます。場合 &lt;code&gt;outputEncoding&lt;/code&gt; が設けられておらず、&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="bf9d17e21edabb9d1092237e35808ff3bfe1a8bb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Any remaining enciphered contents. If &lt;code&gt;outputEncoding&lt;/code&gt; is specified, a string is returned. If an &lt;code&gt;outputEncoding&lt;/code&gt; is not provided, a &lt;a href=&quot;buffer&quot;&gt;&lt;code&gt;Buffer&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;残りの暗号化されたコンテンツ。場合 &lt;code&gt;outputEncoding&lt;/code&gt; が指定され、文字列が返されます。場合 &lt;code&gt;outputEncoding&lt;/code&gt; が設けられておらず、&lt;a href=&quot;buffer&quot;&gt; &lt;code&gt;Buffer&lt;/code&gt; &lt;/a&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="aab093f52a0732f9c15db6aa1a3efce668631c60" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The EC Diffie-Hellman in the specified &lt;code&gt;encoding&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;指定された &lt;code&gt;encoding&lt;/code&gt; のEC Diffie-Hellman 。</target>
        </trans-unit>
        <trans-unit id="42da4f2825a94f86db69adc62b41419dd0fdc1bb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The EC Diffie-Hellman public key in the specified &lt;code&gt;encoding&lt;/code&gt; and &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;指定された &lt;code&gt;encoding&lt;/code&gt; と &lt;code&gt;format&lt;/code&gt; のEC Diffie-Hellman公開鍵。</target>
        </trans-unit>
        <trans-unit id="9c384ff9d0fb236f01573fa12242bf332e14fd76" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The stdout from the command.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;コマンドのstdout。</target>
        </trans-unit>
        <trans-unit id="b16bbcc7c16195d56c569dfb2ac8b7f75a895c6d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt; The latest &lt;code&gt;Finished&lt;/code&gt; message that has been sent to the socket as part of a SSL/TLS handshake, or &lt;code&gt;undefined&lt;/code&gt; if no &lt;code&gt;Finished&lt;/code&gt; message has been sent yet.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt; SSL / TLSハンドシェイクの一部としてソケットに送信された最新の &lt;code&gt;Finished&lt;/code&gt; メッセージ、または &lt;code&gt;Finished&lt;/code&gt; メッセージがまだ送信されてい &lt;code&gt;undefined&lt;/code&gt; 場合は未定義。</target>
        </trans-unit>
        <trans-unit id="919563d4fe32b255579575f1dd72e0ade347f4d6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt; The latest &lt;code&gt;Finished&lt;/code&gt; message that is expected or has actually been received from the socket as part of a SSL/TLS handshake, or &lt;code&gt;undefined&lt;/code&gt; if there is no &lt;code&gt;Finished&lt;/code&gt; message so far.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt; SSLまたはTLSハンドシェイクの一部として予期されている、または実際にソケットから受信された最新の &lt;code&gt;Finished&lt;/code&gt; メッセージ、またはこれまでに &lt;code&gt;Finished&lt;/code&gt; メッセージがない場合は &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21fdc8347968db59589a896b56926b2ec37115b6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;DataView&amp;gt;&lt;/a&gt; The object passed as &lt;code&gt;buffer&lt;/code&gt; argument.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;Da​​taView&amp;gt; &lt;/a&gt; &lt;code&gt;buffer&lt;/code&gt; 引数として渡されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="7e58472a49959e9ef61372bd3ed647fac0bc591e" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;DataView&amp;gt;&lt;/a&gt; pre-shared key that must either be a buffer or &lt;code&gt;null&lt;/code&gt; to stop the negotiation process. Returned PSK must be compatible with the selected cipher's digest. When negotiating TLS-PSK (pre-shared keys), this function is called with the identity provided by the client. If the return value is &lt;code&gt;null&lt;/code&gt; the negotiation process will stop and an &quot;unknown_psk_identity&quot; alert message will be sent to the other party. If the server wishes to hide the fact that the PSK identity was not known, the callback must provide some random data as &lt;code&gt;psk&lt;/code&gt; to make the connection fail with &quot;decrypt_error&quot; before negotiation is finished. PSK ciphers are disabled by default, and using TLS-PSK thus requires explicitly specifying a cipher suite with the &lt;code&gt;ciphers&lt;/code&gt; option. More information can be found in the &lt;a href=&quot;https://tools.ietf.org/html/rfc4279&quot;&gt;RFC 4279&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypedArray&quot;&gt;&amp;lt;TypedArray&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView&quot;&gt;&amp;lt;Da​​taView&amp;gt;&lt;/a&gt;事前共有キー。ネゴシエーションプロセスを停止するには、バッファーまたは &lt;code&gt;null&lt;/code&gt; のいずれかである必要があります。返されるPSKは、選択した暗号のダイジェストと互換性がある必要があります。 TLS-PSK（事前共有キー）をネゴシエートする場合、この関数はクライアントから提供されたIDを使用して呼び出されます。戻り値が &lt;code&gt;null&lt;/code&gt; の場合、ネゴシエーションプロセスは停止し、「unknown_psk_identity」アラートメッセージが相手に送信されます。サーバーがPSKIDが不明であるという事実を隠したい場合、コールバックは &lt;code&gt;psk&lt;/code&gt; としていくつかのランダムデータを提供する必要がありますネゴシエーションが終了する前に「decrypt_error」で接続を失敗させます。PSK暗号はデフォルトで無効になっているため、TLS-PSKを使用するには、 &lt;code&gt;ciphers&lt;/code&gt; オプションを使用して暗号スイートを明示的に指定する必要があります。詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc4279&quot;&gt;RFC4279を参照&lt;/a&gt;してください。</target>
        </trans-unit>
        <trans-unit id="ae8bd2536722f6dc91ea8a2bd1eb877bd8dff7d7" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;child_process#child_process_class_childprocess&quot;&gt;&amp;lt;ChildProcess&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;child_process#child_process_class_childprocess&quot;&gt;&amp;lt;ChildProcess&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a70949f769e4c258ef4cde31ef92ff5cdf06539e" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;cluster#cluster_class_worker&quot;&gt;&amp;lt;cluster.Worker&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;cluster#cluster_class_worker&quot;&gt;&amp;lt;cluster.Worker&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="013aa47c912c8b453124ba61edbe830b0698c970" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;cluster#cluster_class_worker&quot;&gt;&amp;lt;cluster.Worker&amp;gt;&lt;/a&gt; A reference to &lt;code&gt;worker&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;cluster#cluster_class_worker&quot;&gt;&amp;lt;cluster.Worker&amp;gt; &lt;/a&gt; &lt;code&gt;worker&lt;/code&gt; への参照。</target>
        </trans-unit>
        <trans-unit id="3f9040de9ef5512f559636043aa552677042fd03" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_cipher&quot;&gt;&amp;lt;Cipher&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;crypto#crypto_class_cipher&quot;&gt;&amp;lt;Cipher&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="444655b0f8c10bec5dd4612626ab1744193bdee4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_cipher&quot;&gt;&amp;lt;Cipher&amp;gt;&lt;/a&gt; for method chaining.</source>
          <target state="translated">戻り値：メソッドチェーンの&lt;a href=&quot;crypto#crypto_class_cipher&quot;&gt;&amp;lt;Cipher&amp;gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09e0a3fa63815e5f5b5bede1de4d166ac8c07178" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_decipher&quot;&gt;&amp;lt;Decipher&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;crypto#crypto_class_decipher&quot;&gt;&amp;lt;解読&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d89a7f918ef66a8d90fa89f295de2d17464028ec" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_decipher&quot;&gt;&amp;lt;Decipher&amp;gt;&lt;/a&gt; for method chaining.</source>
          <target state="translated">戻り値：メソッドチェーンの&lt;a href=&quot;crypto#crypto_class_decipher&quot;&gt;&amp;lt;解読&amp;gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f7124e4b9550e3a0669cbca29b5c01e0908bf1b6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_diffiehellman&quot;&gt;&amp;lt;DiffieHellman&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;crypto#crypto_class_diffiehellman&quot;&gt;&amp;lt;DiffieHellman&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b20a9b59fa78a2b6517cd3d287921e684802625" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_diffiehellmangroup&quot;&gt;&amp;lt;DiffieHellmanGroup&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;crypto#crypto_class_diffiehellmangroup&quot;&gt;&amp;lt;DiffieHellmanGroup&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3643ce302dae7bc62c40ab665760c83d494ff887" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_ecdh&quot;&gt;&amp;lt;ECDH&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;crypto#crypto_class_ecdh&quot;&gt;&amp;lt;ECDH&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc7ef7d0f9b5668e54b0a487e9eb96ee469abbcb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_hash&quot;&gt;&amp;lt;Hash&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;crypto#crypto_class_hash&quot;&gt;&amp;lt;ハッシュ&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7a499a792b38bae69415172c35bd373823b75b1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_hmac&quot;&gt;&amp;lt;Hmac&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;crypto#crypto_class_hmac&quot;&gt;&amp;lt;Hmac&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ac38d34ef74ad34ae5646ffab58a9a945c93eef" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_keyobject&quot;&gt;&amp;lt;KeyObject&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;crypto#crypto_class_keyobject&quot;&gt;&amp;lt;KeyObject&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="55b2c44c180c51b415214d56be1ce138ea523f7c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_sign&quot;&gt;&amp;lt;Sign&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;crypto#crypto_class_sign&quot;&gt;&amp;lt;Sign&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c76dee1275f5fddc33bd95b4901b7219f07e8e3b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;crypto#crypto_class_verify&quot;&gt;&amp;lt;Verify&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;crypto#crypto_class_verify&quot;&gt;&amp;lt;確認&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="806ddf30a44642b3b5e9007d0b63b61c6dece4eb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;dgram#dgram_class_dgram_socket&quot;&gt;&amp;lt;dgram.Socket&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;dgram#dgram_class_dgram_socket&quot;&gt;&amp;lt;dgram.Socket&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6f9a9aa05f61c3eee9bd8969f851cc1f48a08ed" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;domain#domain_class_domain&quot;&gt;&amp;lt;Domain&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;domain#domain_class_domain&quot;&gt;&amp;lt;ドメイン&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="603810ed099ab0d6e6b376e9276c39d6b7f468a6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&amp;lt;EventEmitter&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;events#events_class_eventemitter&quot;&gt;&amp;lt;EventEmitter&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0708eede96e0d054f95c018aff1b12ed513831fc" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;events#events_class_eventtarget&quot;&gt;&amp;lt;EventTarget&amp;gt;&lt;/a&gt; this</source>
          <target state="translated">戻り値：&lt;a href=&quot;events#events_class_eventtarget&quot;&gt;&amp;lt;EventTarget&amp;gt;&lt;/a&gt; this</target>
        </trans-unit>
        <trans-unit id="c44b5e245f57cbddd91f5c3fb53284b610b92005" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_dir&quot;&gt;&amp;lt;fs.Dir&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;fs#fs_class_fs_dir&quot;&gt;&amp;lt;fs.Dir&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f339c8d54099a976aa0f5a49f9dbfdd43ed8991" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b852ef9942796ccd878be5330b88ca957021e0c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_fswatcher&quot;&gt;&amp;lt;fs.FSWatcher&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;fs#fs_class_fs_fswatcher&quot;&gt;&amp;lt;fs.FSWatcher&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="876b2de43dfcec370aaaac3abc8f83910cf60914" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt;&amp;lt;fs.ReadStream&amp;gt;&lt;/a&gt; See &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;Readable Stream&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt;&amp;lt;fs.ReadStream&amp;gt;&lt;/a&gt;&lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;読み取り可能なストリームを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fbcba3826687347ba7f3635d5bcfda33be4d5901" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt;&amp;lt;fs.ReadStream&amp;gt;&lt;/a&gt; See &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;Readable Streams&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;fs#fs_class_fs_readstream&quot;&gt;&amp;lt;fs.ReadStream&amp;gt;&lt;/a&gt;「&lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;読み取り可能なストリーム&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="bd9de61b11b75f0ca2ade1e2f56d986f68b48a78" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_stats&quot;&gt;&amp;lt;fs.Stats&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;fs#fs_class_fs_stats&quot;&gt;&amp;lt;fs.Stats&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="577b10e2fee0ca00282e2d0483e3d40b753b44e8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_statwatcher&quot;&gt;&amp;lt;fs.StatWatcher&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;fs#fs_class_fs_statwatcher&quot;&gt;&amp;lt;fs.StatWatcher&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="05ee9d6836b2d12f5622eab42a605196e6f3b837" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;fs#fs_class_fs_writestream&quot;&gt;&amp;lt;fs.WriteStream&amp;gt;&lt;/a&gt; See &lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt;Writable Stream&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;fs#fs_class_fs_writestream&quot;&gt;&amp;lt;fs.WriteStream&amp;gt; &lt;/a&gt;&lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt;Writable Streamを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4dcd2f7f5415bbfbd9ee66c4abdbf189fe61822f" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http#http_class_http_clientrequest&quot;&gt;&amp;lt;http.ClientRequest&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http#http_class_http_clientrequest&quot;&gt;&amp;lt;http.ClientRequest&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e91638b42314999320ff415b27e7850c98b2efb6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http#http_class_http_incomingmessage&quot;&gt;&amp;lt;http.IncomingMessage&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http#http_class_http_incomingmessage&quot;&gt;&amp;lt;http.IncomingMessage&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0de24cb6de36c90c2e2cb2e979dcd1446aa86ab7" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http#http_class_http_server&quot;&gt;&amp;lt;http.Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http#http_class_http_server&quot;&gt;&amp;lt;http.Server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="16831f0203cedc1ff779fcd71e58a601dbb29bf3" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http#http_class_http_serverresponse&quot;&gt;&amp;lt;http.ServerResponse&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http#http_class_http_serverresponse&quot;&gt;&amp;lt;http.ServerResponse&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60d5dfae1f7988129b93e1efc189479a23104579" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_clienthttp2session&quot;&gt;&amp;lt;ClientHttp2Session&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http2#http2_class_clienthttp2session&quot;&gt;&amp;lt;ClientHttp2Session&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74997eb5feff1ee9eeaf260042b9fabb28c40f4d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_clienthttp2stream&quot;&gt;&amp;lt;ClientHttp2Stream&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http2#http2_class_clienthttp2stream&quot;&gt;&amp;lt;ClientHttp2Stream&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d7ed357eff2f567e229ba821ddbd619cd4851a98" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_http2_http2serverrequest&quot;&gt;&amp;lt;http2.Http2ServerRequest&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http2#http2_class_http2_http2serverrequest&quot;&gt;&amp;lt;http2.Http2ServerRequest&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c32e9fdba5e0fbe3ce6e16e2141fb8cc9f37f9ce" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_http2_http2serverresponse&quot;&gt;&amp;lt;http2.Http2ServerResponse&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http2#http2_class_http2_http2serverresponse&quot;&gt;&amp;lt;http2.Http2ServerResponse&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec5685de3b5da8e5e526e6bbf6c9acc01622d3d5" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_http2secureserver&quot;&gt;&amp;lt;Http2SecureServer&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http2#http2_class_http2secureserver&quot;&gt;&amp;lt;Http2SecureServer&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c3a94b4629469ac31d67ea00b3b12446b89d147" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_class_http2server&quot;&gt;&amp;lt;Http2Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http2#http2_class_http2server&quot;&gt;&amp;lt;Http2Server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dcc3ea905e606dc7f41fa0a0ca1e84c215b3f10e" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;http2#http2_settings_object&quot;&gt;&amp;lt;HTTP/2 Settings Object&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;http2#http2_settings_object&quot;&gt;&amp;lt;HTTP / 2設定オブジェクト&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c635449bc566c397cf3930557d2784c55aa9267" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https#https_class_https_server&quot;&gt;&amp;lt;https.Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https#https_class_https_server&quot;&gt;&amp;lt;https.server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0df660f0f3da6b0bd0331a026f5dc103d64b900" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;ブール値&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be063cd1414ba19767d534fa889c8717d2bd8734" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;false&lt;/code&gt; if &lt;code&gt;stream&lt;/code&gt; wishes for the calling code to wait for the &lt;code&gt;'drain'&lt;/code&gt; event to be emitted before continuing to write additional data; otherwise &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;追加のデータの書き込みを続ける前に、 &lt;code&gt;stream&lt;/code&gt; が呼び出しコードが &lt;code&gt;'drain'&lt;/code&gt; イベントの発行を待機することを望む場合は &lt;code&gt;false&lt;/code&gt; 。そうでなければ &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86f12d85a752db253837e6d06dccae1f465417e7" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;false&lt;/code&gt; if the stream wishes for the calling code to wait for the &lt;code&gt;'drain'&lt;/code&gt; event to be emitted before continuing to write additional data; otherwise &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;追加のデータの書き込みを続ける前に、ストリームが呼び出しコードが &lt;code&gt;'drain'&lt;/code&gt; イベントの発行を待機することを望む場合は &lt;code&gt;false&lt;/code&gt; 。そうでなければ &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44a8f2fedd54c0539cc41e4127ede7d69ce652ec" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if &lt;code&gt;value&lt;/code&gt; was found in &lt;code&gt;buf&lt;/code&gt;, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;ブール&amp;gt; &lt;/a&gt; &lt;code&gt;true&lt;/code&gt; ならば &lt;code&gt;value&lt;/code&gt; で発見された &lt;code&gt;buf&lt;/code&gt; は、 &lt;code&gt;false&lt;/code&gt; そう。</target>
        </trans-unit>
        <trans-unit id="26f63843b00321e1dae4809a4fbe82ef80dc91c5" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if additional chunks of data may continue to be pushed; &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;追加のデータチャンクが引き続きプッシュされる場合は &lt;code&gt;true&lt;/code&gt; 。それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9e46d8ac578ec4f6c1ed98e13840b0b8ee6851d2" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if and only if a FIPS compliant crypto provider is currently in use.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt; FIPS準拠の暗号プロバイダーが現在使用されている場合にのみ &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0d13f506670da01f186fb7a40480053756302d7a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if renegotiation was initiated, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;再ネゴシエーションが開始された場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41bb4c3501e619cd28dd7d6c3b1344e17b98eab3" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if the given &lt;code&gt;spkac&lt;/code&gt; data structure is valid, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;指定された &lt;code&gt;spkac&lt;/code&gt; データ構造が有効な場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="63cfeb13e95a7b0de5efc7609415bfc0abd591e1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; if the session was reused, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;セッションが再利用された場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9893cb6f0236aa13e1278187a6ad41a3f0626804" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on the validity of the signature for the data and public key.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;データおよび公開鍵の署名の有効性に応じて &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7aced3f1b9b95169067a601083de10c6ba6d8899" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8dee1ce15736e6128f15bacaa30d9398f9fc3fed" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt; exported module content</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;エクスポートされたモジュールのコンテンツ</target>
        </trans-unit>
        <trans-unit id="e2ebedba2d6a99928bd6f4822837a660adf31d4b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt; the result of the very last statement executed in the script.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;スクリプトで実行された最後のステートメントの結果。</target>
        </trans-unit>
        <trans-unit id="1db835a75081e96999ef6258a8f8705018933199" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;整数&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c845b37cb885dd7e298babba5449181d2abe869e" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; Either &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, depending on the result of the comparison. See &lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt;&lt;code&gt;buf.compare()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;整数&amp;gt;&lt;/a&gt;のいずれか &lt;code&gt;-1&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; 、又は &lt;code&gt;1&lt;/code&gt; 、比較の結果に応じ。詳細については、&lt;a href=&quot;#buffer_buf_compare_target_targetstart_targetend_sourcestart_sourceend&quot;&gt; &lt;code&gt;buf.compare()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9807d8a0910e257f7a4817dcc026a2ae272579f0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; Number of bytes written.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;整数&amp;gt;&lt;/a&gt;書き込まれたバイト数。</target>
        </trans-unit>
        <trans-unit id="d433ad7ace687c1ab7f5516c08f7501b09befac0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; The index of the first occurrence of &lt;code&gt;value&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;buf&lt;/code&gt; does not contain &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;整数&amp;gt;&lt;/a&gt;の最初の出現の指標 &lt;code&gt;value&lt;/code&gt; で &lt;code&gt;buf&lt;/code&gt; 、または &lt;code&gt;-1&lt;/code&gt; 場合は &lt;code&gt;buf&lt;/code&gt; が含まれていない &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0070595b48c68e41d9f2b595be1f943e8ceabee2" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; The index of the last occurrence of &lt;code&gt;value&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;buf&lt;/code&gt; does not contain &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;整数&amp;gt;&lt;/a&gt;が最後に出現する位置のインデックス &lt;code&gt;value&lt;/code&gt; で &lt;code&gt;buf&lt;/code&gt; 、または &lt;code&gt;-1&lt;/code&gt; 場合は &lt;code&gt;buf&lt;/code&gt; が含まれていない &lt;code&gt;value&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c292621cfaf1587833d2f46308a79f2c3b43c188" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; The number of bytes contained within &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;整数&amp;gt; &lt;/a&gt; &lt;code&gt;string&lt;/code&gt; に含まれるバイト数。</target>
        </trans-unit>
        <trans-unit id="6f4d6e4a422e8739da1715a33be3a7cf83819023" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; The number of bytes copied.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt;コピーされたバイト数。</target>
        </trans-unit>
        <trans-unit id="b221f5668324f459144fdb1e4a7aeffa035cb8d5" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt; a number that can be used to reference this &lt;code&gt;timeout&lt;/code&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt;この &lt;code&gt;timeout&lt;/code&gt; を参照するために使用できる数値</target>
        </trans-unit>
        <trans-unit id="220a853613277d87ca92d1d4c67ed71fe4a598ae" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt;&lt;/a&gt;&lt;code&gt;offset&lt;/code&gt; plus the number of bytes written.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer&amp;gt; &lt;/a&gt; &lt;code&gt;offset&lt;/code&gt; と書き込まれたバイト数。</target>
        </trans-unit>
        <trans-unit id="698165badce4f854d20df1a8d1eb9c251e1391c1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;integer []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7acec063c5367a30f97cbe8185c80d5cd70931a3" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;数値&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec5d51f3d0117e32847b63292b9fcb5bf7f1b6b1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The &lt;code&gt;asyncId&lt;/code&gt; of the current execution context. Useful to track when something calls.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;現在の実行コンテキストの &lt;code&gt;asyncId&lt;/code&gt; 。何かが呼び出されたときに追跡するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="dda0e3ae8bd4f0948da8efa8db917afd92d6ba99" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The ID of the resource responsible for calling the callback that is currently being executed.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;現在実行中のコールバックの呼び出しを担当するリソースのID。</target>
        </trans-unit>
        <trans-unit id="f97d784a4ed9b3bda3bca8bc3897113707d746fa" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The number of bytes read.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;読み取られたバイト数。</target>
        </trans-unit>
        <trans-unit id="a05b53dad5773a1e948b97a82b24b8886d894d60" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The number of bytes written.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;書き込まれたバイト数。</target>
        </trans-unit>
        <trans-unit id="ef16715edcd255a48f108d33cb7c709a0575ace4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The same &lt;code&gt;triggerAsyncId&lt;/code&gt; that is passed to the &lt;code&gt;AsyncResource&lt;/code&gt; constructor.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt; &lt;/a&gt; &lt;code&gt;AsyncResource&lt;/code&gt; コンストラクターに渡されるのと同じ &lt;code&gt;triggerAsyncId&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1e0c294a2932c44dca31b7a9a487cf71554ffcf4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; The unique &lt;code&gt;asyncId&lt;/code&gt; assigned to the resource.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;リソースに割り当てられた一意の &lt;code&gt;asyncId&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bca9f554346a2ef07fbfadd229e0da434e43b0de" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; the &lt;code&gt;SO_RCVBUF&lt;/code&gt; socket receive buffer size in bytes.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;番号&amp;gt; &lt;/a&gt; &lt;code&gt;SO_RCVBUF&lt;/code&gt; のソケットはバイト単位でサイズを受信バッファ。</target>
        </trans-unit>
        <trans-unit id="cc358f178236186b63b19b32bcca1889cf06b2f6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; the &lt;code&gt;SO_SNDBUF&lt;/code&gt; socket send buffer size in bytes.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;番号&amp;gt; &lt;/a&gt; &lt;code&gt;SO_SNDBUF&lt;/code&gt; のバイト単位のソケット送信バッファサイズ。</target>
        </trans-unit>
        <trans-unit id="5ba695e50b1de6cf8b0c963b1afbb98b8b0e9171" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt;&lt;code&gt;1&lt;/code&gt; if and only if a FIPS compliant crypto provider is currently in use, &lt;code&gt;0&lt;/code&gt; otherwise. A future semver-major release may change the return type of this API to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number&amp;gt;&lt;/a&gt; FIPS準拠の暗号化プロバイダーが現在使用されている場合にのみ &lt;code&gt;1&lt;/code&gt; 、それ以外の場合は &lt;code&gt;0&lt;/code&gt; 。将来のsemver-majorリリースでは、このAPIの戻り値の型が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type&quot;&gt;&amp;lt;boolean&amp;gt;に&lt;/a&gt;変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="9a56d5f416057574bc59cec56d28335cd2c7c391" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Number_type&quot;&gt;&amp;lt;number []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b5b61aee0b6a004c75adfe899e769141af026a8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="052bfecc8ba7fbecd2068e5687ece13f0c603090" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; Returns the filename of the generated report.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;生成されたレポートのファイル名を返します。</target>
        </trans-unit>
        <trans-unit id="4fe01dce7c3ea47f3b97d1e8831c6579e4d9000c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The filename where the snapshot was saved.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;スナップショットが保存されたファイルの名前。</target>
        </trans-unit>
        <trans-unit id="4cded4a831f1ae88a97960ee3ac2a1b56ffc9252" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The formatted string</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;フォーマットされた文字列</target>
        </trans-unit>
        <trans-unit id="37e0415d5373f4d4c80cbe709057edf2ff3569fe" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The fully-resolved platform-specific Node.js file path.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;完全に解決されたプラットフォーム固有のNode.jsファイルパス。</target>
        </trans-unit>
        <trans-unit id="9ff2c78c33df8cc30393d855e4d3fa9b9c890de9" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; The representation of &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt; &lt;/a&gt; &lt;code&gt;object&lt;/code&gt; の表現。</target>
        </trans-unit>
        <trans-unit id="173ebdea4fa3a2cf8ee229a684f3645aeb74989f" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; or &lt;code&gt;null&lt;/code&gt; if there is no name-value pair with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;、&lt;/a&gt;または指定された &lt;code&gt;name&lt;/code&gt; の名前と値のペアがない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a9b3be7f76dcd1e66d64e7899564a2d3c6199cf1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5240485ade2ca9145cf0ae3afe5ab61a6cd68f63" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;any&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Data_types&quot;&gt;&amp;lt;どれでも&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d338a09656bfc230b080df56fee08298d881748d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb77ac8822475251a22488d9af0ab6270221c120" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;未定義&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9dcedab7624fe5c7df256f835ff1bb14b0a122f" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b21892d87f158d05937356a533310ba7d3fe3a6f" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt; An array of the names of the supported hash algorithms, such as &lt;code&gt;'RSA-SHA256'&lt;/code&gt;. Hash algorithms are also called &quot;digest&quot; algorithms.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt;サポートされているハッシュアルゴリズムの名前の配列（ &lt;code&gt;'RSA-SHA256'&lt;/code&gt; など)。ハッシュアルゴリズムは「ダイジェスト」アルゴリズムとも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="00a4cef14bdeadecaaaccf05705e128eb521f4c8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt; An array with the names of the supported cipher algorithms.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt;サポートされる暗号アルゴリズムの名前を含む配列。</target>
        </trans-unit>
        <trans-unit id="032b3835c7cba9babb69ad1e26b5ff4fe37c28c0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt; An array with the names of the supported elliptic curves.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt;サポートされる楕円曲線の名前を含む配列。</target>
        </trans-unit>
        <trans-unit id="182a549d38a43e6af4e1239818a207a156549511" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;Buffer[]&amp;gt;&lt;/a&gt; | &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt; | &lt;a href=&quot;buffer#buffer_class_buffer&quot;&gt;&amp;lt;バッファ[]&amp;gt;&lt;/a&gt; | &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1b1c3fdc77f3fab3711a26ddaef33645970f665" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string[]&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string []&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6b2cb499aa33750e7e22eacc59ec9bc0d3bf536" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;Array&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;配列&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f9796eb7f458587e2e7dd22aa2b85d2e0634296" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;Array&amp;gt;&lt;/a&gt; List of signature algorithms shared between the server and the client in the order of decreasing preference.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;Array&amp;gt;&lt;/a&gt;優先度の高い順にサーバーとクライアント間で共有される署名アルゴリズムのリスト。</target>
        </trans-unit>
        <trans-unit id="e5beddf71818d553b6d3b2acbcb97cfa190f2690" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;Array&amp;gt;&lt;/a&gt; of objects containing information about the wrapper functions returned by &lt;a href=&quot;#assert_tracker_calls_fn_exact&quot;&gt;&lt;code&gt;tracker.calls()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;#assert_tracker_calls_fn_exact&quot;&gt; &lt;code&gt;tracker.calls()&lt;/code&gt; &lt;/a&gt;によって返されるラッパー関数に関する情報を含むオブジェクトの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&amp;lt;配列&amp;gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3e5d02a55e1d2e8587cf57bf949dcaa20137bc33" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt&quot;&gt;&amp;lt;bigint&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt&quot;&gt;&amp;lt;bigint&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6122eb8066d40d230fdd9b25813fe3fbea8f1a6a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;Error&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error&quot;&gt;&amp;lt;エラー&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;未定義&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fa872d2be269abb0435c9a5dec369029ddbb598" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;関数&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="43bb2d68ae0f54d13e91a372814b667822886cdd" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; A cleanup function which removes all registered listeners.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;関数&amp;gt;&lt;/a&gt;登録されているすべてのリスナーを削除するクリーンアップ関数。</target>
        </trans-unit>
        <trans-unit id="c6a799aad0d88b403edc0f4bdc7a0908b7fb73c9" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; The bound function</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;関数&amp;gt;&lt;/a&gt;バインドされた関数</target>
        </trans-unit>
        <trans-unit id="55d60e868a577809e7cbda600f07c4c077e132f4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; The deprecated function wrapped to emit a warning.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;関数&amp;gt;&lt;/a&gt;警告を出すためにラップされた非推奨の関数。</target>
        </trans-unit>
        <trans-unit id="9b4b73f14da2681ff6d6bf888ef1e476e3fd55e8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; The intercepted function</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;関数&amp;gt;&lt;/a&gt;インターセプトされた関数</target>
        </trans-unit>
        <trans-unit id="eb02da3ec7cce1838d388478eae2325970a02ad8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; The logging function</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;関数&amp;gt;&lt;/a&gt;ロギング関数</target>
        </trans-unit>
        <trans-unit id="5f909cb2fcc0a70995cfa24603243c42a6a9be3c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; a callback style function</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt;コールバックスタイル関数</target>
        </trans-unit>
        <trans-unit id="04f00d0d6717a07c4d72472c88d41e3d9302aec7" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function&amp;gt;&lt;/a&gt; that wraps &lt;code&gt;fn&lt;/code&gt;.</source>
          <target state="translated">戻り値： &lt;code&gt;fn&lt;/code&gt; をラップする&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;関数&amp;gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5b1adc4fd3300d3f9f27eda78beb4e2e4e6c3d3b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function&quot;&gt;&amp;lt;Function []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4fc38ac3ab2f807a75582ab6623eaa598816e6ee" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;オブジェクト&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e137fe41a661688463e10136dadbcf1015b0f54" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; A certificate object.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;オブジェクト&amp;gt;&lt;/a&gt;証明書オブジェクト。</target>
        </trans-unit>
        <trans-unit id="e2ba781e37e5711142ad8fcd4620c01c8bfe11cc" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; An object containing commonly used constants for crypto and security related operations. The specific constants currently defined are described in &lt;a href=&quot;#crypto_crypto_constants_1&quot;&gt;Crypto Constants&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;暗号およびセキュリティ関連の操作に一般的に使用される定数を含むオブジェクト。現在定義されている特定の定数については、&lt;a href=&quot;#crypto_crypto_constants_1&quot;&gt;暗号定数で&lt;/a&gt;説明しています。</target>
        </trans-unit>
        <trans-unit id="bb71ad01de36bb04a14cbe1bc6b5c0b4c464bdc0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; An object containing commonly used constants for crypto and security related operations. The specific constants currently defined are described in &lt;a href=&quot;#crypto_crypto_constants_1&quot;&gt;Crypto constants&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;暗号化およびセキュリティ関連の操作に一般的に使用される定数を含むオブジェクト。現在定義されている特定の定数は、&lt;a href=&quot;#crypto_crypto_constants_1&quot;&gt;暗号定数で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="2d90b0836e587ca41432b2105157b104c85d03c5" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; The resource representing the current execution. Useful to store data within the resource.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;現在の実行を表すリソース。リソース内にデータを保存するのに便利です。</target>
        </trans-unit>
        <trans-unit id="11d37d1594181062de1e9e054ac8bc31dcceb7ab" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; contextified object.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;コンテキスト化されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0f3646d7ffee5336f4cda46cdeb050d8e0b1085b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; contextified sandbox.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;コンテキスト付きサンドボックス。</target>
        </trans-unit>
        <trans-unit id="4743232a5f0c10b15624693eb5927f8c24dc03c3" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; in the form &lt;code&gt;{ psk: &amp;lt;Buffer|TypedArray|DataView&amp;gt;, identity: &amp;lt;string&amp;gt; }&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; to stop the negotiation process. &lt;code&gt;psk&lt;/code&gt; must be compatible with the selected cipher's digest. &lt;code&gt;identity&lt;/code&gt; must use UTF-8 encoding. When negotiating TLS-PSK (pre-shared keys), this function is called with optional identity &lt;code&gt;hint&lt;/code&gt; provided by the server or &lt;code&gt;null&lt;/code&gt; in case of TLS 1.3 where &lt;code&gt;hint&lt;/code&gt; was removed. It will be necessary to provide a custom &lt;code&gt;tls.checkServerIdentity()&lt;/code&gt; for the connection as the default one will try to check host name/IP of the server against the certificate but that's not applicable for PSK because there won't be a certificate present. More information can be found in the &lt;a href=&quot;https://tools.ietf.org/html/rfc4279&quot;&gt;RFC 4279&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;の形式 &lt;code&gt;{ psk: &amp;lt;Buffer|TypedArray|DataView&amp;gt;, identity: &amp;lt;string&amp;gt; }&lt;/code&gt; または &lt;code&gt;null&lt;/code&gt; の場合、ネゴシエーションプロセスを停止します。 &lt;code&gt;psk&lt;/code&gt; は、選択した暗号のダイジェストと互換性がある必要があります。 &lt;code&gt;identity&lt;/code&gt; はUTF-8エンコーディングを使用する必要があります。 TLS-PSK（事前共有キー）をネゴシエートする場合、この関数は、サーバーによって提供されるオプションのID &lt;code&gt;hint&lt;/code&gt; 、または &lt;code&gt;hint&lt;/code&gt; が削除されたTLS1.3の場合は &lt;code&gt;null&lt;/code&gt; を使用して呼び出されます。カスタム &lt;code&gt;tls.checkServerIdentity()&lt;/code&gt; を提供する必要がありますデフォルトの接続では、サーバーのホスト名/ IPを証明書と照合しようとしますが、証明書が存在しないため、PSKには適用されません。詳細については、&lt;a href=&quot;https://tools.ietf.org/html/rfc4279&quot;&gt;RFC4279を参照&lt;/a&gt;してください。</target>
        </trans-unit>
        <trans-unit id="5709a79906fec79eacb57382aa81988e277c28b6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; the resource usage for the current process. All of these values come from the &lt;code&gt;uv_getrusage&lt;/code&gt; call which returns a &lt;a href=&quot;http://docs.libuv.org/en/v1.x/misc.html#c.uv_rusage_t&quot;&gt;&lt;code&gt;uv_rusage_t&lt;/code&gt; struct&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;現在のプロセスのリソース使用量。これらの値はすべて、&lt;a href=&quot;http://docs.libuv.org/en/v1.x/misc.html#c.uv_rusage_t&quot;&gt; &lt;code&gt;uv_rusage_t&lt;/code&gt; &lt;/a&gt;構造体を返す &lt;code&gt;uv_getrusage&lt;/code&gt; 呼び出しから取得されます。</target>
        </trans-unit>
        <trans-unit id="fa478a897c2ce78ee6072ef0926026246389ece0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; the resource usage for the current process. All of these values come from the &lt;code&gt;uv_getrusage&lt;/code&gt; call which returns a &lt;a href=&quot;https://docs.libuv.org/en/v1.x/misc.html#c.uv_rusage_t&quot;&gt;&lt;code&gt;uv_rusage_t&lt;/code&gt; struct&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt;現在のプロセスのリソース使用量。これらの値はすべて、&lt;a href=&quot;https://docs.libuv.org/en/v1.x/misc.html#c.uv_rusage_t&quot;&gt; &lt;code&gt;uv_rusage_t&lt;/code&gt; &lt;/a&gt;構造体を返す &lt;code&gt;uv_getrusage&lt;/code&gt; 呼び出しから取得されます。</target>
        </trans-unit>
        <trans-unit id="d400f14998a97f6e042dcb73070824fad3dbaef4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;オブジェクト&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;文字列&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a13e23c488aeb0e3cd142c726d47c4424cac482" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;string&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;オブジェクト&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#String_type&quot;&gt;&amp;lt;文字列&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee8a44323a36269db138085e6105ee5f18e48ad6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;undefined&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;オブジェクト&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Undefined_type&quot;&gt;&amp;lt;未定義&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46c96540a5664fa051f7fd4449fad8c60a81182b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&amp;lt;Object []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b545f593f30cf43c7a4fa6376a66eaffeb943456" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt;</source>
          <target state="translated">返品：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;約束&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f674dc4112dbd6b41fb0c5dcf52a365fae622b93" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; A &lt;code&gt;Promise&lt;/code&gt; that will be resolved once the underlying file descriptor is closed, or will be rejected if an error occurs while closing.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;約束&amp;gt;&lt;/a&gt; A &lt;code&gt;Promise&lt;/code&gt; 基礎となるファイルディスクリプタがクローズされ、または閉じているときにエラーが発生した場合に拒否されます一度解決されます。</target>
        </trans-unit>
        <trans-unit id="fdd2b9f62b0157017c86888a1d67cb874cf06b96" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; A promise for a Readable Stream containing a V8 heap snapshot</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; V8ヒープスナップショットを含む読み取り可能なストリームのPromise</target>
        </trans-unit>
        <trans-unit id="685898aaa7fe63ccd2733ebfe574dd3a87c79d50" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; If the memory is successfully measured the promise will resolve with an object containing information about the memory usage.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt;メモリが正常に測定されると、メモリ使用量に関する情報を含むオブジェクトでPromiseが解決されます。</target>
        </trans-unit>
        <trans-unit id="d5531e1848e6298906ccc9c381c093d7799f47ad" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; containing &lt;a href=&quot;fs#fs_class_fs_dir&quot;&gt;&amp;lt;fs.Dir&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt; &lt;/a&gt;&lt;a href=&quot;fs#fs_class_fs_dir&quot;&gt;fs.Dir&amp;gt;&lt;/a&gt;を含む&amp;lt;Promise&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3b62ee219aaec1ccf0fda41eb0dba33b16b76f26" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt; containing &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt; &lt;/a&gt;&lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;fs.Dirent&amp;gt;&lt;/a&gt;を含む&amp;lt;Promise&amp;gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Null_type&quot;&gt;&amp;lt;null&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0928543b59059522475dd3783daca8ef9721520" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&amp;lt;Uint8Array&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array&quot;&gt;&amp;lt;Uint8Array&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="668d1eb3cf22c0db62c85399144fcf4745922453" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol&quot;&gt;&amp;lt;Iterable&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterable_protocol&quot;&gt;&amp;lt;Iterable&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39bdf2d740075981eb7df28b42f8086f8a234688" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol&quot;&gt;&amp;lt;Iterator&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#The_iterator_protocol&quot;&gt;&amp;lt;イテレータ&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5e0d311361bd412c847519a646c796ecdd35aa5" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbb5ea5f2e9255e7f38d1505b353caef362dad18" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt; - the read stream instance.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt; -読み取りストリームインスタンス。</target>
        </trans-unit>
        <trans-unit id="a923e36849c997bfbbbcce41ccb2b5a89726c2db" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt; The read stream instance.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&amp;lt;this&amp;gt;&lt;/a&gt;読み取りストリームインスタンス。</target>
        </trans-unit>
        <trans-unit id="4a842b5c3dac441c131d71e9c1665770edab1d3d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a836135e467affca06757fa02f5d36173ac7403" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterable-interface&quot;&gt;&amp;lt;AsyncIterable&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;約束&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd5e5ba06a8af2157fbddc5f568d481f3109f926" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="942d0666f33b8236c5d1244548ca8f5d6e5180d3" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt; of &lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;fs.Dirent&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;fs.Dirent&amp;gt;&lt;/a&gt;の&lt;a href=&quot;fs#fs_class_fs_dirent&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34d6b2b67c150fd7011173ce80ea64583b95639a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt; that iterates &lt;code&gt;eventName&lt;/code&gt; events emitted by the &lt;code&gt;emitter&lt;/code&gt;</source>
          <target state="translated">戻り値： &lt;code&gt;emitter&lt;/code&gt; によって&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;発行&lt;/a&gt;された &lt;code&gt;eventName&lt;/code&gt; イベントを反復する&amp;lt;AsyncIterator&amp;gt;</target>
        </trans-unit>
        <trans-unit id="aece63ac77c64422a00aea29bb3801618092c5af" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt; to fully consume the stream.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-asynciterator-interface&quot;&gt;&amp;lt;AsyncIterator&amp;gt;&lt;/a&gt;は、ストリームを完全に消費します。</target>
        </trans-unit>
        <trans-unit id="5d005c40c9713aaf471a9b06fc538536b40808ff" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;&amp;lt;Module Namespace Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;vm#vm_class_vm_module&quot;&gt;&amp;lt;vm.Module&amp;gt;&lt;/a&gt; Returning a &lt;code&gt;vm.Module&lt;/code&gt; is recommended in order to take advantage of error tracking, and to avoid issues with namespaces that contain &lt;code&gt;then&lt;/code&gt; function exports.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;&amp;lt;モジュール名前空間オブジェクト&amp;gt;&lt;/a&gt; | &lt;a href=&quot;vm#vm_class_vm_module&quot;&gt;&amp;lt;vm.Module&amp;gt;&lt;/a&gt;エラートラッキングを利用し &lt;code&gt;then&lt;/code&gt; 関数のエクスポートを含む名前空間の問題を回避するために、 &lt;code&gt;vm.Module&lt;/code&gt; を返すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6bb26b201832e0fd13ad1b3d1d492d4d15f775ef" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;&amp;lt;Module Namespace Object&amp;gt;&lt;/a&gt; | &lt;a href=&quot;vm#vm_class_vm_sourcetextmodule&quot;&gt;&amp;lt;vm.SourceTextModule&amp;gt;&lt;/a&gt; Returning a &lt;code&gt;vm.SourceTextModule&lt;/code&gt; is recommended in order to take advantage of error tracking, and to avoid issues with namespaces that contain &lt;code&gt;then&lt;/code&gt; function exports.</source>
          <target state="translated">戻り値：&lt;a href=&quot;https://tc39.github.io/ecma262/#sec-module-namespace-exotic-objects&quot;&gt;&amp;lt;モジュール名前空間オブジェクト&amp;gt;&lt;/a&gt; | &lt;a href=&quot;vm#vm_class_vm_sourcetextmodule&quot;&gt;&amp;lt;vm.SourceTextModule&amp;gt;&lt;/a&gt;エラー追跡を利用し &lt;code&gt;then&lt;/code&gt; 関数のエクスポートを含む名前空間の問題を回避するために、 &lt;code&gt;vm.SourceTextModule&lt;/code&gt; を返すことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="b01186b15836286d67ad47df373ab2eadd982744" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;modules#modules_require_id&quot;&gt;&amp;lt;require&amp;gt;&lt;/a&gt; Require function</source>
          <target state="translated">戻り値：&lt;a href=&quot;modules#modules_require_id&quot;&gt;&amp;lt;require&amp;gt;必須&lt;/a&gt;機能</target>
        </trans-unit>
        <trans-unit id="c28a4f7c953054030ec49bd2980f9bd792b6ef44" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;net#net_class_net_server&quot;&gt;&amp;lt;net.Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;net#net_class_net_server&quot;&gt;&amp;lt;net.Server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b782bb17161ecea7c1fccf6597fca0aaef0dbc17" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e82507e4e4dc5596126b103814282208cdedc382" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt; The newly created socket used to start the connection.</source>
          <target state="translated">戻り値：&lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt;接続の開始に使用される、新しく作成されたソケット。</target>
        </trans-unit>
        <trans-unit id="d75dad4059a808698b1fb2f2acdf658065b33b5a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt; The socket itself.</source>
          <target state="translated">戻り値：&lt;a href=&quot;net#net_class_net_socket&quot;&gt;&amp;lt;net.Socket&amp;gt;&lt;/a&gt;ソケット自体。</target>
        </trans-unit>
        <trans-unit id="0adf285edfb79238d0d75e52fb7377e070708061" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;perf_hooks#perf_hooks_class_histogram&quot;&gt;&amp;lt;Histogram&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;perf_hooks#perf_hooks_class_histogram&quot;&gt;&amp;lt;ヒストグラム&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="717cfb6a5e93a80876de8e824aa2733bc3c8244c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;perf_hooks#perf_hooks_class_performanceentry&quot;&gt;&amp;lt;PerformanceEntry[]&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;perf_hooks#perf_hooks_class_performanceentry&quot;&gt;&amp;lt;PerformanceEntry []&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee5d5a1f48c1e98a1870b93fe93a1f34ce9d1de4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;repl#repl_class_replserver&quot;&gt;&amp;lt;repl.REPLServer&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;repl#repl_class_replserver&quot;&gt;&amp;lt;repl.REPLServer&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d1a6882b8766eb3e7d188147b83c5d6270ee68cd" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&amp;lt;stream.Duplex&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;stream#stream_class_stream_duplex&quot;&gt;&amp;lt;stream.Duplex&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14a4534e620a1fe54b48dca1112014ee9d83ed7b" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;&amp;lt;stream.Readable&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;&amp;lt;stream.Readable&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="790515494e14f552422f8ae89623c3c23fb59246" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;&amp;lt;stream.Readable&amp;gt;&lt;/a&gt; A Readable Stream containing the V8 heap snapshot</source>
          <target state="translated">戻り値：&lt;a href=&quot;stream#stream_class_stream_readable&quot;&gt;&amp;lt;stream.Readable&amp;gt;&lt;/a&gt; V8ヒープスナップショットを含む読み取り可能なストリーム</target>
        </trans-unit>
        <trans-unit id="807a31a190025b18cf7287ab6e303ba7c0ba6fed" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt;&amp;lt;stream.Writable&amp;gt;&lt;/a&gt; The &lt;em&gt;destination&lt;/em&gt;, allowing for a chain of pipes if it is a &lt;a href=&quot;#stream_class_stream_duplex&quot;&gt;&lt;code&gt;Duplex&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;#stream_class_stream_transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt; stream</source>
          <target state="translated">戻り値：&lt;a href=&quot;stream#stream_class_stream_writable&quot;&gt;&amp;lt;stream.Writable&amp;gt; &lt;/a&gt;&lt;em&gt;先&lt;/em&gt;、それがある場合には、パイプの連鎖を可能に&lt;a href=&quot;#stream_class_stream_duplex&quot;&gt; &lt;code&gt;Duplex&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;#stream_class_stream_transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt;ストリーム</target>
        </trans-unit>
        <trans-unit id="bd7830aff0f974c2d75baa6ae89954d8f1b744a0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;Stream&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;stream#stream_stream&quot;&gt;&amp;lt;ストリーム&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db32e39fc5242787f44d532251a3c5acc3465bb0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;timers#timers_class_immediate&quot;&gt;&amp;lt;Immediate&amp;gt;&lt;/a&gt; a reference to &lt;code&gt;immediate&lt;/code&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;timers#timers_class_immediate&quot;&gt;&amp;lt;即時&amp;gt;&lt;/a&gt;への参照 &lt;code&gt;immediate&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5c0a096fa1372ad2b0e30d52a56f7eb4e21843d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;timers#timers_class_immediate&quot;&gt;&amp;lt;Immediate&amp;gt;&lt;/a&gt; for use with &lt;a href=&quot;timers#timers_clearimmediate_immediate&quot;&gt;&lt;code&gt;clearImmediate()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;timers#timers_class_immediate&quot;&gt;&amp;lt;Immediate&amp;gt; &lt;/a&gt;&lt;a href=&quot;timers#timers_clearimmediate_immediate&quot;&gt; &lt;code&gt;clearImmediate()&lt;/code&gt; &lt;/a&gt;で使用）</target>
        </trans-unit>
        <trans-unit id="fbac0ed5392b72d10f878fa1fe487395ffefbf2c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;Timeout&amp;gt;&lt;/a&gt; a reference to &lt;code&gt;timeout&lt;/code&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;Timeout&amp;gt; &lt;/a&gt; &lt;code&gt;timeout&lt;/code&gt; への参照</target>
        </trans-unit>
        <trans-unit id="408a4251f4f463c66110368d192b9fc180bfecc6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;Timeout&amp;gt;&lt;/a&gt; for use with &lt;a href=&quot;timers#timers_clearinterval_timeout&quot;&gt;&lt;code&gt;clearInterval()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;timers#timers_clearinterval_timeout&quot;&gt; &lt;code&gt;clearInterval()&lt;/code&gt; &lt;/a&gt;で使用する&lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;タイムアウト&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b314795f032ac27b869e4a82e1e938ea99d11323" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;Timeout&amp;gt;&lt;/a&gt; for use with &lt;a href=&quot;timers#timers_cleartimeout_timeout&quot;&gt;&lt;code&gt;clearTimeout()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;timers#timers_cleartimeout_timeout&quot;&gt; &lt;code&gt;clearTimeout()&lt;/code&gt; &lt;/a&gt;で使用する&lt;a href=&quot;timers#timers_class_timeout&quot;&gt;&amp;lt;Timeout&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b45c7b2923ec37df2675b27295e6ba08f05d6041" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;tls#tls_class_tls_server&quot;&gt;&amp;lt;tls.Server&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;tls#tls_class_tls_server&quot;&gt;&amp;lt;tls.Server&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a49ac4e11a4bfd6bf374abb3dca8f918c8e76084" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;tls#tls_class_tls_tlssocket&quot;&gt;&amp;lt;tls.TLSSocket&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;tls#tls_class_tls_tlssocket&quot;&gt;&amp;lt;tls.TLSSocket&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7121e7c37ee8833ea4c359aa11062c97078ae40a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;tracing#tracing_tracing_object&quot;&gt;&amp;lt;Tracing&amp;gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値：&lt;a href=&quot;tracing#tracing_tracing_object&quot;&gt;&amp;lt;Tracing&amp;gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="de69ca5b881190be36f8166fb8b801ae4dfa2180" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;&amp;lt;URL&amp;gt;&lt;/a&gt; The file URL object.</source>
          <target state="translated">戻り値：&lt;a href=&quot;url#url_the_whatwg_url_api&quot;&gt;&amp;lt;URL&amp;gt;&lt;/a&gt;ファイルURLオブジェクト。</target>
        </trans-unit>
        <trans-unit id="4bc5f51b290715fdbb111c75b2f73fbc07cebaa6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;vm#vm_class_vm_module&quot;&gt;&amp;lt;vm.Module&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;vm#vm_class_vm_module&quot;&gt;&amp;lt;vm.Module&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;約束&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0d3e4ab10e6282aa4de82cf03eee2ed4b9b779d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;vm#vm_class_vm_sourcetextmodule&quot;&gt;&amp;lt;vm.SourceTextModule&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;Promise&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;vm#vm_class_vm_sourcetextmodule&quot;&gt;&amp;lt;vm.SourceTextModule&amp;gt;&lt;/a&gt; | &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&amp;lt;約束&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d859542b4ea0aed70ef505dce7ba7cba5dc4b657" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;worker_threads#worker_threads_class_messageport&quot;&gt;&amp;lt;MessagePort&amp;gt;&lt;/a&gt;</source>
          <target state="translated">戻り値：&lt;a href=&quot;worker_threads#worker_threads_class_messageport&quot;&gt;&amp;lt;MessagePort&amp;gt;&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82c3493e3899c65b5b90bb74c36b74d80fd327dc" translate="yes" xml:space="preserve">
          <source>Reverse-i-search</source>
          <target state="translated">Reverse-i-search</target>
        </trans-unit>
        <trans-unit id="81e14d508f4d4bf7b2d9867052e8da129ffce7e6" translate="yes" xml:space="preserve">
          <source>Revoking deprecations</source>
          <target state="translated">非推奨事項の取り消し</target>
        </trans-unit>
        <trans-unit id="e36b8811144401b42950170dd3b3c10848f04aeb" translate="yes" xml:space="preserve">
          <source>Run the supplied function in the context of the domain, implicitly binding all event emitters, timers, and lowlevel requests that are created in that context. Optionally, arguments can be passed to the function.</source>
          <target state="translated">与えられた関数をドメインのコンテキストで実行し、そのコンテキストで作成されたすべてのイベントエミッタ、タイマー、および低レベルリクエストを暗黙的にバインドします。オプションで、引数を関数に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="4362c872f2a39ffb45795e69858910885462d41c" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;node example.js&lt;/code&gt; from &lt;code&gt;/Users/mjr&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/Users/mjr&lt;/code&gt; から &lt;code&gt;node example.js&lt;/code&gt; を実行する</target>
        </trans-unit>
        <trans-unit id="775c52f3d5f45f9251b8f53ebfc7c7a0277c9fe7" translate="yes" xml:space="preserve">
          <source>Running Node.js will now share port 8000 between the workers:</source>
          <target state="translated">Node.jsを実行していると、ワーカー間で8000番ポートを共有するようになりました。</target>
        </trans-unit>
        <trans-unit id="f7e7ff16843182fb2b49dcc678679cb6c5b82b5c" translate="yes" xml:space="preserve">
          <source>Running Node.js with tracing enabled will produce log files that can be opened in the &lt;a href=&quot;https://www.chromium.org/developers/how-tos/trace-event-profiling-tool&quot;&gt;&lt;code&gt;chrome://tracing&lt;/code&gt;&lt;/a&gt; tab of Chrome.</source>
          <target state="translated">トレースを有効にしてNode.jsを実行すると、Chromeの&lt;a href=&quot;https://www.chromium.org/developers/how-tos/trace-event-profiling-tool&quot;&gt; &lt;code&gt;chrome://tracing&lt;/code&gt; &lt;/a&gt;タブで開くことができるログファイルが生成されます。</target>
        </trans-unit>
        <trans-unit id="31f1bb7e43a5ab501d44d5282989b57b1cd8bf56" translate="yes" xml:space="preserve">
          <source>Running this application from the command line will start a REPL on stdin. Other REPL clients may connect through the Unix socket or TCP socket. &lt;code&gt;telnet&lt;/code&gt;, for instance, is useful for connecting to TCP sockets, while &lt;code&gt;socat&lt;/code&gt; can be used to connect to both Unix and TCP sockets.</source>
          <target state="translated">このアプリケーションをコマンドラインから実行すると、stdinでREPLが開始されます。他のREPLクライアントは、UnixソケットまたはTCPソケットを介して接続できます。たとえば &lt;code&gt;telnet&lt;/code&gt; はTCPソケットへの接続に役立ちますが、 &lt;code&gt;socat&lt;/code&gt; はUnixとTCPソケットの両方への接続に使用できます。</target>
        </trans-unit>
        <trans-unit id="f93b2d80c204eeed2b43aa6d91f213ab7c7e2e2c" translate="yes" xml:space="preserve">
          <source>Runs the compiled code contained by the &lt;code&gt;vm.Script&lt;/code&gt; object within the given &lt;code&gt;contextifiedObject&lt;/code&gt; and returns the result. Running code does not have access to local scope.</source>
          <target state="translated">含まれるコンパイルされたコード実行 &lt;code&gt;vm.Script&lt;/code&gt; の所与内のオブジェクト &lt;code&gt;contextifiedObject&lt;/code&gt; し、その結果を返します。実行中のコードはローカルスコープにアクセスできません。</target>
        </trans-unit>
        <trans-unit id="8550387fd879ad30e46d60c0e02cf7e8a22f7c64" translate="yes" xml:space="preserve">
          <source>Runs the compiled code contained by the &lt;code&gt;vm.Script&lt;/code&gt; object within the given &lt;code&gt;contextifiedSandbox&lt;/code&gt; and returns the result. Running code does not have access to local scope.</source>
          <target state="translated">含まれるコンパイルされたコード実行 &lt;code&gt;vm.Script&lt;/code&gt; の所与内のオブジェクト &lt;code&gt;contextifiedSandbox&lt;/code&gt; し、その結果を返します。実行中のコードはローカルスコープにアクセスできません。</target>
        </trans-unit>
        <trans-unit id="af9e6d425eb3048d66a3c5499e226d2304c83554" translate="yes" xml:space="preserve">
          <source>Runs the compiled code contained by the &lt;code&gt;vm.Script&lt;/code&gt; within the context of the current &lt;code&gt;global&lt;/code&gt; object. Running code does not have access to local scope, but &lt;em&gt;does&lt;/em&gt; have access to the current &lt;code&gt;global&lt;/code&gt; object.</source>
          <target state="translated">現在の &lt;code&gt;global&lt;/code&gt; オブジェクトのコンテキスト内で &lt;code&gt;vm.Script&lt;/code&gt; に含まれているコンパイル済みコードを実行します。コードを実行すると、ローカルスコープにアクセスすることはできませんが、&lt;em&gt;ない&lt;/em&gt;現在へのアクセス持っている &lt;code&gt;global&lt;/code&gt; オブジェクトを。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c4740e4ca28c9c8d6a8447aef5c33425e6de4802" translate="yes" xml:space="preserve">
          <source>Runtime</source>
          <target state="translated">Runtime</target>
        </trans-unit>
        <trans-unit id="e350f56a93742f4a707fef2f8f281f16f290ccf4" translate="yes" xml:space="preserve">
          <source>Runtime deprecation (for &lt;code&gt;digest === null&lt;/code&gt;).</source>
          <target state="translated">ランタイムの廃止（ &lt;code&gt;digest === null&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="744c1f31538bb4d9cdfa6b584ba679e6d5ae05f7" translate="yes" xml:space="preserve">
          <source>Runtime deprecation (for &lt;code&gt;digest === undefined&lt;/code&gt;).</source>
          <target state="translated">ランタイムの廃止（ &lt;code&gt;digest === undefined&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9dc60a5ccf15479aa34b7ed8ce88a7b16b3ba92c" translate="yes" xml:space="preserve">
          <source>Runtime deprecation.</source>
          <target state="translated">ランタイム非推奨。</target>
        </trans-unit>
        <trans-unit id="02aa629c8b16cd17a44f3a0efec2feed43937642" translate="yes" xml:space="preserve">
          <source>S</source>
          <target state="translated">S</target>
        </trans-unit>
        <trans-unit id="a7790f6b0afe6cd43166c75446f3f8d3f299ee7e" translate="yes" xml:space="preserve">
          <source>SIGCONT event (Interface)</source>
          <target state="translated">SIGCONT イベント (インタフェース)</target>
        </trans-unit>
        <trans-unit id="7fd52b90248d3570eac27355100ad36f765434a9" translate="yes" xml:space="preserve">
          <source>SIGINT event (Interface)</source>
          <target state="translated">シギントイベント</target>
        </trans-unit>
        <trans-unit id="c327fd3f159bff88ba42d591f4524fc32900c591" translate="yes" xml:space="preserve">
          <source>SIGTSTP event (Interface)</source>
          <target state="translated">SIGTSTP イベント (インタフェース)</target>
        </trans-unit>
        <trans-unit id="d600c946b16aa2c17dbb1fb2205d305f7c1f84b4" translate="yes" xml:space="preserve">
          <source>SNI - Allows the use of one TLS server for multiple hostnames with different SSL certificates.</source>
          <target state="translated">SNI-異なる SSL 証明書を持つ複数のホスト名に対して、1 台の TLS サーバーを使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="c7dee86678fbbb71bd9ab3a96e429efa4bd14896" translate="yes" xml:space="preserve">
          <source>SNI: Allows the use of one TLS server for multiple hostnames with different SSL certificates.</source>
          <target state="translated">SNI:異なる SSL 証明書を持つ複数のホスト名に対して、1 台の TLS サーバを使用することができます。</target>
        </trans-unit>
        <trans-unit id="a9ca099291b3b0906f90c443700ae0626d3e101c" translate="yes" xml:space="preserve">
          <source>SPKAC is a Certificate Signing Request mechanism originally implemented by Netscape and was specified formally as part of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen&quot;&gt;HTML5's &lt;code&gt;keygen&lt;/code&gt; element&lt;/a&gt;.</source>
          <target state="translated">SPKACは、もともとNetscapeによって実装された証明書署名要求メカニズムであり、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen&quot;&gt;HTML5の &lt;code&gt;keygen&lt;/code&gt; 要素の&lt;/a&gt;一部として正式に指定されました。</target>
        </trans-unit>
        <trans-unit id="3ecbea7b48f03d48c528834cb2789bf7e045753c" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt; except that &lt;code&gt;path&lt;/code&gt; can be provided as an argument instead of an option.</source>
          <target state="translated">オプションの代わりに &lt;code&gt;path&lt;/code&gt; を引数として提供できることを除いて、&lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; と&lt;/a&gt;同じです。</target>
        </trans-unit>
        <trans-unit id="238580765ce69cb2b6a8ab97728bb27d2e7028c3" translate="yes" xml:space="preserve">
          <source>Same as &lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt;&lt;code&gt;tls.connect()&lt;/code&gt;&lt;/a&gt; except that &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;host&lt;/code&gt; can be provided as arguments instead of options.</source>
          <target state="translated">オプションの代わりに &lt;code&gt;port&lt;/code&gt; と &lt;code&gt;host&lt;/code&gt; を引数として提供できることを除いて、&lt;a href=&quot;#tls_tls_connect_options_callback&quot;&gt; &lt;code&gt;tls.connect()&lt;/code&gt; と&lt;/a&gt;同じです。</target>
        </trans-unit>
        <trans-unit id="d9c25c977ea2b9270771555ea5c3d366ce4760c7" translate="yes" xml:space="preserve">
          <source>Schedules execution of a one-time &lt;code&gt;callback&lt;/code&gt; after &lt;code&gt;delay&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;delay&lt;/code&gt; ミリ秒後に1回限りの &lt;code&gt;callback&lt;/code&gt; 実行をスケジュールします。</target>
        </trans-unit>
        <trans-unit id="00bb19f9f8d739a94c414945c7165f76a217535f" translate="yes" xml:space="preserve">
          <source>Schedules repeated execution of &lt;code&gt;callback&lt;/code&gt; every &lt;code&gt;delay&lt;/code&gt; milliseconds.</source>
          <target state="translated">&lt;code&gt;delay&lt;/code&gt; ミリ秒ごとに &lt;code&gt;callback&lt;/code&gt; 繰り返し実行をスケジュールします。</target>
        </trans-unit>
        <trans-unit id="7c326d2efa679e38a827aaa1a796290f511403d2" translate="yes" xml:space="preserve">
          <source>Schedules the &quot;immediate&quot; execution of the &lt;code&gt;callback&lt;/code&gt; after I/O events' callbacks.</source>
          <target state="translated">I / Oイベントのコール &lt;code&gt;callback&lt;/code&gt; 後のコールバックの「即時」実行をスケジュールします。</target>
        </trans-unit>
        <trans-unit id="0a9ca121ecbd8ae1e654321b5bc8b74e2b97c930" translate="yes" xml:space="preserve">
          <source>Scheduling Timers</source>
          <target state="translated">スケジューリングタイマー</target>
        </trans-unit>
        <trans-unit id="bf864c4fbd6d45085e1433d86c5453f234de7f5c" translate="yes" xml:space="preserve">
          <source>Scheduling timers</source>
          <target state="translated">スケジューリングタイマー</target>
        </trans-unit>
        <trans-unit id="c23540e5fb551edff0ac95649a1d551f9736d55e" translate="yes" xml:space="preserve">
          <source>Scopes</source>
          <target state="translated">Scopes</target>
        </trans-unit>
        <trans-unit id="b4dbbb0709b0c3a86fdb5edcad9cb0b6b324abd3" translate="yes" xml:space="preserve">
          <source>Script execution</source>
          <target state="translated">スクリプトの実行</target>
        </trans-unit>
        <trans-unit id="2a4c554b1c30626d61e43047e9bc04e1f369919b" translate="yes" xml:space="preserve">
          <source>Script execution timed out, possibly due to bugs in the script being executed.</source>
          <target state="translated">スクリプトの実行がタイムアウトしました。</target>
        </trans-unit>
        <trans-unit id="4b4248d454f623f4ee361f3fbb621f57bb1433c7" translate="yes" xml:space="preserve">
          <source>Script execution was interrupted by &lt;code&gt;SIGINT&lt;/code&gt; (For example,</source>
          <target state="translated">スクリプトの実行が &lt;code&gt;SIGINT&lt;/code&gt; によって中断されました（たとえば、</target>
        </trans-unit>
        <trans-unit id="49e1ec145f3eac20c76b8b591356f3a119727b12" translate="yes" xml:space="preserve">
          <source>Script execution was interrupted by &lt;code&gt;SIGINT&lt;/code&gt; (For example, when Ctrl+C was pressed).</source>
          <target state="translated">スクリプトの実行が &lt;code&gt;SIGINT&lt;/code&gt; によって中断されました（たとえば、Ctrl + Cが押されたとき）。</target>
        </trans-unit>
        <trans-unit id="f5e75a4eef42b2e082246fd524cbfd25b4149e99" translate="yes" xml:space="preserve">
          <source>SearchParams</source>
          <target state="translated">SearchParams</target>
        </trans-unit>
        <trans-unit id="ca7ca0f7f3fa047ca04c4a111524d86afd7c12d3" translate="yes" xml:space="preserve">
          <source>SecurePair</source>
          <target state="translated">SecurePair</target>
        </trans-unit>
        <trans-unit id="fca315334ff3b061a2d6e14dbdd1fcc7f6b8ae95" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt;. This variant of the constructor is equivalent to &lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt;&lt;code&gt;Buffer.alloc()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;#buffer_static_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; を&lt;/a&gt;参照してください。コンストラクターのこのバリアントは、&lt;a href=&quot;#buffer_static_method_buffer_alloc_size_fill_encoding&quot;&gt; &lt;code&gt;Buffer.alloc()&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="a09a22758a093c2499e87070df0da538f0053547" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_allocunsafeslow_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_allocunsafeslow_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b76b96d1413bd104e50bac29233121ca78df6931" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_allocunsafeslow_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt;&lt;/a&gt;. This was never a class in the sense that the constructor always returned a &lt;code&gt;Buffer&lt;/code&gt; instance, rather than a &lt;code&gt;SlowBuffer&lt;/code&gt; instance.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_allocunsafeslow_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafeSlow()&lt;/code&gt; を&lt;/a&gt;参照してください。これは、コンストラクターが &lt;code&gt;SlowBuffer&lt;/code&gt; インスタンスではなく、常に &lt;code&gt;Buffer&lt;/code&gt; インスタンスを返すという意味でクラスではありませんでした。</target>
        </trans-unit>
        <trans-unit id="24e3b6551ceb147de0666fb318a16f939e80b36e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_from_array&quot;&gt;&lt;code&gt;Buffer.from(array)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_from_array&quot;&gt; &lt;code&gt;Buffer.from(array)&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7762be8b35300dd7bc072f55b953fab21044162c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_from_arraybuffer_byteoffset_length&quot;&gt;&lt;code&gt;Buffer.from(arrayBuffer[, byteOffset[, length]])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_from_arraybuffer_byteoffset_length&quot;&gt; &lt;code&gt;Buffer.from(arrayBuffer[, byteOffset[, length]])&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0f25c2ea4bc5412440ba31ff2e5cfc8cd3c06dfd" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_from_buffer&quot;&gt;&lt;code&gt;Buffer.from(buffer)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_from_buffer&quot;&gt; &lt;code&gt;Buffer.from(buffer)&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="c8415d9db0bd5edf7e3a0f28ccc0587cd8c93228" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#buffer_static_method_buffer_from_string_encoding&quot;&gt;&lt;code&gt;Buffer.from(string[, encoding])&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#buffer_static_method_buffer_from_string_encoding&quot;&gt; &lt;code&gt;Buffer.from(string[, encoding])&lt;/code&gt; &lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b14138eee605f5a71ebbb8222c4a111819a52b75" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#crypto_class_sign&quot;&gt;&lt;code&gt;Sign&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">例については、&lt;a href=&quot;#crypto_class_sign&quot;&gt; &lt;code&gt;Sign&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="5380a50e335bcbedbfc7463797f108b89f80a88c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#fs_class_fs_dir&quot;&gt;&lt;code&gt;fs.Dir&lt;/code&gt;&lt;/a&gt; for an example.</source>
          <target state="translated">例については、&lt;a href=&quot;#fs_class_fs_dir&quot;&gt; &lt;code&gt;fs.Dir&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c9c0a6d655cc6e29e110402ea9fb62a9528d3a9e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http2_headers_object&quot;&gt;HTTP/2 Headers Object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http2_headers_object&quot;&gt;HTTP / 2ヘッダーオブジェクトを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1a205d305a5be99590d6c867ef63c9ca86e102d8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http2_request_socket&quot;&gt;&lt;code&gt;request.socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http2_request_socket&quot;&gt; &lt;code&gt;request.socket&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="358354022e09543b0010781dc086aedcc97c2881" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http2_response_socket&quot;&gt;&lt;code&gt;response.socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http2_response_socket&quot;&gt; &lt;code&gt;response.socket&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="141f1b05cc911409a6773dde0587abfda30e3a59" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http_message_headers&quot;&gt;&lt;code&gt;message.headers&lt;/code&gt;&lt;/a&gt; for details on how duplicate headers are handled.</source>
          <target state="translated">参照してください&lt;a href=&quot;#http_message_headers&quot;&gt; &lt;code&gt;message.headers&lt;/code&gt; &lt;/a&gt;どのように扱われるか、重複ヘッダーの詳細については、を。</target>
        </trans-unit>
        <trans-unit id="f5b076f1ef7dbb3db9f712a7a18a8f570c210f83" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http_request_socket&quot;&gt;&lt;code&gt;request.socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http_request_socket&quot;&gt; &lt;code&gt;request.socket&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="0ab78199777d44dd2ae84fb42ad1642003892b8e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#http_response_socket&quot;&gt;&lt;code&gt;response.socket&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#http_response_socket&quot;&gt; &lt;code&gt;response.socket&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7775e532310728adf19ab9bf24d48fa32be0da4b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#modules_dirname&quot;&gt;&lt;code&gt;__dirname&lt;/code&gt;&lt;/a&gt; for the directory name of the current module.</source>
          <target state="translated">現在のモジュールのディレクトリ名については、&lt;a href=&quot;#modules_dirname&quot;&gt; &lt;code&gt;__dirname&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b53beecea8c43065d7ae497ad8724a8ab07633d1" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#tls_session_resumption&quot;&gt;Session Resumption&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#tls_session_resumption&quot;&gt;セッションの再開&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2ae2ff22ea902aa41ef0a485c7ab55ac4c3f840f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#tls_tlssocket_getpeercertificate_detailed&quot;&gt;&lt;code&gt;tls.TLSSocket.getPeerCertificate()&lt;/code&gt;&lt;/a&gt; for an example of the certificate structure.</source>
          <target state="translated">証明書の構造の例については、&lt;a href=&quot;#tls_tlssocket_getpeercertificate_detailed&quot;&gt; &lt;code&gt;tls.TLSSocket.getPeerCertificate()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="317bc5a5ad778c05cdb5ed811f73dfb2d1711275" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#util_custom_inspection_functions_on_objects&quot;&gt;Custom inspection functions on Objects&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については&lt;a href=&quot;#util_custom_inspection_functions_on_objects&quot;&gt;、オブジェクトのカスタム検査関数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="41af94146d57ab10f20803c82a5ab5a3ef55fd51" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#worker_threads_port_postmessage_value_transferlist&quot;&gt;&lt;code&gt;port.postMessage()&lt;/code&gt;&lt;/a&gt; for more information on how messages are passed, and what kind of JavaScript values can be successfully transported through the thread barrier.</source>
          <target state="translated">メッセージの受け渡し方法、およびスレッドバリアを介して正常に転送できるJavaScript値の種類の詳細については、&lt;a href=&quot;#worker_threads_port_postmessage_value_transferlist&quot;&gt; &lt;code&gt;port.postMessage()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="844ffc7de89eb55190d966dce8da5b5556eec2a6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#zlib_brotli_constants&quot;&gt;below&lt;/a&gt; for more details on Brotli-specific options.</source>
          <target state="translated">Brotli固有のオプションの詳細については、&lt;a href=&quot;#zlib_brotli_constants&quot;&gt;以下&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2a55161c1f15cc33e2fca11926d7f876c51ee210" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;assert#assert_assert_deepstrictequal_actual_expected_message&quot;&gt;&lt;code&gt;assert.deepStrictEqual()&lt;/code&gt;&lt;/a&gt; for more information about deep strict equality.</source>
          <target state="translated">厳密な同等性の詳細については、&lt;a href=&quot;assert#assert_assert_deepstrictequal_actual_expected_message&quot;&gt; &lt;code&gt;assert.deepStrictEqual()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9c74ca079f26427c19c2c4e40a6903f34a0e4507" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;buffer#buffer_static_method_buffer_allocunsafe_size&quot;&gt;&lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt;&lt;/a&gt; for more details on &lt;code&gt;Buffer&lt;/code&gt; pooling.</source>
          <target state="translated">&lt;code&gt;Buffer&lt;/code&gt; プーリングの詳細については、&lt;a href=&quot;buffer#buffer_static_method_buffer_allocunsafe_size&quot;&gt; &lt;code&gt;Buffer.allocUnsafe()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="2150dd24e2633b36d3b09f518539998c81f8bb81" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;child_process#child_process_event_exit&quot;&gt;&lt;code&gt;child_process&lt;/code&gt; event: &lt;code&gt;'exit'&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;child_process#child_process_event_exit&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; イベント： &lt;code&gt;'exit'&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="14e8ca4700b6aac17aded2e20fdab465dceef9f3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;child_process#child_process_event_message&quot;&gt;&lt;code&gt;child_process&lt;/code&gt; event: &lt;code&gt;'message'&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;child_process#child_process_event_message&quot;&gt; &lt;code&gt;child_process&lt;/code&gt; イベント： &lt;code&gt;'message'&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="231f39f43bbdd49d0bccca7359a063eaf7e04b05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;esm#esm_customizing_esm_specifier_resolution_algorithm&quot;&gt;customizing ESM specifier resolution&lt;/a&gt; for example usage.</source>
          <target state="translated">使用例については&lt;a href=&quot;esm#esm_customizing_esm_specifier_resolution_algorithm&quot;&gt;、ESM指定子の解像度のカスタマイズを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dd56af45a65d6d14c6b359c75c51d32da9ad8a7b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_class_http_server&quot;&gt;&lt;code&gt;http.Server&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;http#http_class_http_server&quot;&gt; &lt;code&gt;http.Server&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3b51922cd39978e91e621b1052e84099c0109cef" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_close_callback&quot;&gt;&lt;code&gt;server.close()&lt;/code&gt;&lt;/a&gt; from the HTTP module for details.</source>
          <target state="translated">詳細については、HTTPモジュールの&lt;a href=&quot;http#http_server_close_callback&quot;&gt; &lt;code&gt;server.close()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="848963fefc2c0b43e5eed2ea4a5b06f45dd8f4d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_headerstimeout&quot;&gt;&lt;code&gt;http.Server#headersTimeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_headerstimeout&quot;&gt; &lt;code&gt;http.Server#headersTimeout&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="49a9f424125db043691373d5611b0129e20c0317" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_keepalivetimeout&quot;&gt;&lt;code&gt;http.Server#keepAliveTimeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_keepalivetimeout&quot;&gt; &lt;code&gt;http.Server#keepAliveTimeout&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fd8dabd77ad828d58e78821482f11065c4e744b4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_maxheaderscount&quot;&gt;&lt;code&gt;http.Server#maxHeadersCount&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_maxheaderscount&quot;&gt; &lt;code&gt;http.Server#maxHeadersCount&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a17bedb869dd7072d33a54e649346ca34da43e25" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_requesttimeout&quot;&gt;&lt;code&gt;http.Server#requestTimeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_requesttimeout&quot;&gt; &lt;code&gt;http.Server#requestTimeout&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="1b957a30fb40f77bc6389b673974eb9de1fd5339" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_settimeout_msecs_callback&quot;&gt;&lt;code&gt;http.Server#setTimeout()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_settimeout_msecs_callback&quot;&gt; &lt;code&gt;http.Server#setTimeout()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5bb6915c092ff71c6e505b5637e2c56874c477d2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http#http_server_timeout&quot;&gt;&lt;code&gt;http.Server#timeout&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http#http_server_timeout&quot;&gt; &lt;code&gt;http.Server#timeout&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8671de77f1e92b3287e370a8e050133a6f6bbffb" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://man7.org/linux/man-pages/man2/kill.2.html&quot;&gt;&lt;code&gt;kill(2)&lt;/code&gt;&lt;/a&gt; for reference.</source>
          <target state="translated">参考の&lt;a href=&quot;http://man7.org/linux/man-pages/man2/kill.2.html&quot;&gt; &lt;code&gt;kill(2)&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="51aa5321367589a2fdb3988773ce3c73ba01f5c9" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;http://man7.org/linux/man-pages/man2/waitpid.2.html&quot;&gt;&lt;code&gt;waitpid(2)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://man7.org/linux/man-pages/man2/waitpid.2.html&quot;&gt; &lt;code&gt;waitpid(2)&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fd7f5df44f32ad70b4bd716b72825ce6a2aa2916" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://en.wikipedia.org/wiki/Uname#Examples&quot;&gt;https://en.wikipedia.org/wiki/Uname#Examples&lt;/a&gt; for additional information about the output of running &lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt;&lt;code&gt;uname(3)&lt;/code&gt;&lt;/a&gt; on various operating systems.</source>
          <target state="translated">さまざまなオペレーティングシステムで&lt;a href=&quot;https://linux.die.net/man/3/uname&quot;&gt; &lt;code&gt;uname(3)&lt;/code&gt; &lt;/a&gt;を実行した場合の出力の詳細については、&lt;a href=&quot;https://en.wikipedia.org/wiki/Uname#Examples&quot;&gt;https：//en.wikipedia.org/wiki/Uname#Examples&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a33a2e12ed05d0cb5a4e16a527302d878789025e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_CIPHER_get_name.html&quot;&gt;OpenSSL&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_CIPHER_get_name.html&quot;&gt;OpenSSL&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8c66da93ae58591dbd6f7b182675d82bd51d84a5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_CIPHER_get_name.html&quot;&gt;SSL_CIPHER_get_name&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_CIPHER_get_name.html&quot;&gt;SSL_CIPHER_get_name&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="ca87ae4dd2fdd09252bdd00672a1d95d54d38e88" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_get_shared_sigalgs.html&quot;&gt;SSL_get_shared_sigalgs&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://www.openssl.org/docs/man1.1.1/man3/SSL_get_shared_sigalgs.html&quot;&gt;SSL_get_shared_sigalgs&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="99bbe7b815b5dfeeaa7f384772773cdb7a58a444" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;process#process_event_message&quot;&gt;&lt;code&gt;process&lt;/code&gt; event: &lt;code&gt;'message'&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;process#process_event_message&quot;&gt; &lt;code&gt;process&lt;/code&gt; イベント： &lt;code&gt;'message'&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3c26f1da9a1d0ce33eb8230b21bfecdb88f3f918" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#stream_writable_cork&quot;&gt;&lt;code&gt;writable.cork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stream#stream_writable_cork&quot;&gt; &lt;code&gt;writable.cork()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="db495bc94c7a8b82b37b411eeaba06717babb61e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#stream_writable_destroy_error&quot;&gt;&lt;code&gt;writable.destroy()&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;stream#stream_writable_destroy_error&quot;&gt; &lt;code&gt;writable.destroy()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="280db6179ee945665779f144be6e189c5dc65ce2" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#stream_writable_destroyed&quot;&gt;&lt;code&gt;writable.destroyed&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;stream#stream_writable_destroyed&quot;&gt; &lt;code&gt;writable.destroyed&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="dc32170b7b41017de6577360a918f33cb5676a14" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#stream_writable_end_chunk_encoding_callback&quot;&gt;&lt;code&gt;writable.end()&lt;/code&gt;&lt;/a&gt; for further details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;stream#stream_writable_end_chunk_encoding_callback&quot;&gt; &lt;code&gt;writable.end()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4de81f844aacf48db1af5a6fe4a5daa173726664" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;stream#stream_writable_uncork&quot;&gt;&lt;code&gt;writable.uncork()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;stream#stream_writable_uncork&quot;&gt; &lt;code&gt;writable.uncork()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ce46aa7f6b235c4b32463e04f5be9893ebb5aa05" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;tls#tls_session_resumption&quot;&gt;&lt;code&gt;Session Resumption&lt;/code&gt;&lt;/a&gt; for information about TLS session reuse.</source>
          <target state="translated">TLSセッションの再利用については、&lt;a href=&quot;tls#tls_session_resumption&quot;&gt; &lt;code&gt;Session Resumption&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3ea7bb3a392c8a98f431a5e4e937acacb8f20780" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;util#util_util_format_format_args&quot;&gt;&lt;code&gt;util.format()&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;util#util_util_format_format_args&quot;&gt; &lt;code&gt;util.format()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
