<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="7ac7297d7f0505f6c3e3fa62936529433ca869bc" translate="yes" xml:space="preserve">
          <source>Shuffles items in the playlist.</source>
          <target state="translated">プレイリストのアイテムをシャッフルします。</target>
        </trans-unit>
        <trans-unit id="775334f1b48b16b931b1fff169843ebe4ebe5889" translate="yes" xml:space="preserve">
          <source>Shuts down the ActiveX control and destroys the &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; widget, cleaning up all allocated resources.</source>
          <target state="translated">ActiveXコントロールをシャットダウンし、&lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt;ウィジェットを破棄して、割り当てられたすべてのリソースをクリーンアップします。</target>
        </trans-unit>
        <trans-unit id="cb0d04fa1013cc4fa76c87c62f07e59b1b64f776" translate="yes" xml:space="preserve">
          <source>Shuts down the ActiveX control.</source>
          <target state="translated">ActiveX コントロールをシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="d13e2f621b32283a593bbcda2aafea6b567ecb8d" translate="yes" xml:space="preserve">
          <source>Shuts down the COM object and destroys the &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; object.</source>
          <target state="translated">COMオブジェクトをシャットダウンし、&lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt;オブジェクトを破棄します。</target>
        </trans-unit>
        <trans-unit id="c4f9b3640fa47b60bc297f95a627c248d50aca11" translate="yes" xml:space="preserve">
          <source>Shutter speed in seconds, specified as qreal.</source>
          <target state="translated">シャッタ速度は秒単位で、qreal で指定します。</target>
        </trans-unit>
        <trans-unit id="55727ec5728d7c6eb8e5674a1b8324882ada93eb" translate="yes" xml:space="preserve">
          <source>Sibling</source>
          <target state="translated">Sibling</target>
        </trans-unit>
        <trans-unit id="419395df95cec91c2661559db0e022f64f7cf8eb" translate="yes" xml:space="preserve">
          <source>Siblings or parents for document nodes.</source>
          <target state="translated">ドキュメントノードの兄弟または親。</target>
        </trans-unit>
        <trans-unit id="be372316463762ae0cb90acdf20e550795b546a2" translate="yes" xml:space="preserve">
          <source>Side panel that can be opened and closed using a swipe gesture</source>
          <target state="translated">スワイプジェスチャーで開閉できるサイドパネル</target>
        </trans-unit>
        <trans-unit id="9f474ee4575eb061b5d9d9d80f1b2e8751e6c837" translate="yes" xml:space="preserve">
          <source>Side panel that can be opened and closed using a swipe gesture. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">スワイプ操作で開閉できるサイドパネル。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8492cc1deac31fd73c80bbca9ae51f0def25837" translate="yes" xml:space="preserve">
          <source>Sign In</source>
          <target state="translated">サインイン</target>
        </trans-unit>
        <trans-unit id="27bed13a88c60350c3de92ec3820e1cc4f7d6ec3" translate="yes" xml:space="preserve">
          <source>Signal</source>
          <target state="translated">Signal</target>
        </trans-unit>
        <trans-unit id="9606f945ed08868a160e968f39f13ae0a8b305d2" translate="yes" xml:space="preserve">
          <source>Signal Attributes</source>
          <target state="translated">信号属性</target>
        </trans-unit>
        <trans-unit id="cbeeaaf0df77c42d7b32c80e1902090425c19b5b" translate="yes" xml:space="preserve">
          <source>Signal Documentation</source>
          <target state="translated">信号資料</target>
        </trans-unit>
        <trans-unit id="01f2e165008aa691f9980b87990e2e8dbcf00f67" translate="yes" xml:space="preserve">
          <source>Signal Handler</source>
          <target state="translated">シグナルハンドラ</target>
        </trans-unit>
        <trans-unit id="f99eaa9a3302e984452e16a49ecb2eebc5d039bb" translate="yes" xml:space="preserve">
          <source>Signal Handler Attributes</source>
          <target state="translated">シグナルハンドラの属性</target>
        </trans-unit>
        <trans-unit id="64e36136abc08fe5a5badf32c765cfe5eead1689" translate="yes" xml:space="preserve">
          <source>Signal Support</source>
          <target state="translated">信号サポート</target>
        </trans-unit>
        <trans-unit id="cf65126b6332c3b318586aba34691632b7555634" translate="yes" xml:space="preserve">
          <source>Signal a change in the notify interval period to</source>
          <target state="translated">に通知間隔の変更を通知します。</target>
        </trans-unit>
        <trans-unit id="ba2c37db6fa62fdb24006feb1b2d481483b3c3fe" translate="yes" xml:space="preserve">
          <source>Signal a change in the writable status of meta-data,</source>
          <target state="translated">メタデータの書き込み可能な状態の変更を通知します。</target>
        </trans-unit>
        <trans-unit id="c0a7e225d11b482a4db979763ab5e446a5fb9a61" translate="yes" xml:space="preserve">
          <source>Signal and Handler Event System</source>
          <target state="translated">シグナルとハンドラのイベントシステム</target>
        </trans-unit>
        <trans-unit id="b9eb7aca9c67e295cb62168db4bd2d67a5deaab3" translate="yes" xml:space="preserve">
          <source>Signal and Slots</source>
          <target state="translated">信号とスロット</target>
        </trans-unit>
        <trans-unit id="0ed0320cd72c48e4db4b2606e1a25db32245e55e" translate="yes" xml:space="preserve">
          <source>Signal by some platforms to display a pairing confirmation dialog for</source>
          <target state="translated">のためのペアリング確認ダイアログを表示するためのいくつかのプラットフォームによるシグナル</target>
        </trans-unit>
        <trans-unit id="84ff2da5a3a6918b97231c7b8d7842cc68457f05" translate="yes" xml:space="preserve">
          <source>Signal by some platforms to display the</source>
          <target state="translated">を表示するためのいくつかのプラットフォームによるシグナル</target>
        </trans-unit>
        <trans-unit id="8f56fc22c66b0dca94f23b40cdae6e8f5da1883a" translate="yes" xml:space="preserve">
          <source>Signal documentation typically begin with &quot;This signal is triggered when...&quot;. Here are alternate styles:</source>
          <target state="translated">シグナルのドキュメントは通常、&quot;This signal is triggered when...&quot;で始まります。以下に代替のスタイルを示します。</target>
        </trans-unit>
        <trans-unit id="f3010e6213c9d3b44468b466db6c875138fa5949" translate="yes" xml:space="preserve">
          <source>Signal emissions</source>
          <target state="translated">信号の放出</target>
        </trans-unit>
        <trans-unit id="687117e9f2e52d40cd2c3a78f29223391b1df43f" translate="yes" xml:space="preserve">
          <source>Signal emitted if failed to load playlist.</source>
          <target state="translated">プレイリストのロードに失敗した場合に表示される信号。</target>
        </trans-unit>
        <trans-unit id="6aa5896fcd5e5cf33ed59a9bda54ba8455f8508d" translate="yes" xml:space="preserve">
          <source>Signal emitted if there's an exceptional</source>
          <target state="translated">例外的な</target>
        </trans-unit>
        <trans-unit id="e5ba7ea88cb5c7750c372f76ada6ea4c71d00b39" translate="yes" xml:space="preserve">
          <source>Signal emitted when active audio input changes to</source>
          <target state="translated">アクティブオーディオ入力が</target>
        </trans-unit>
        <trans-unit id="15061748155af474a86f3c73ca4585749aad37aa" translate="yes" xml:space="preserve">
          <source>Signal emitted when an error occurs with error code</source>
          <target state="translated">エラーコードでエラーが発生した場合に発せられる信号</target>
        </trans-unit>
        <trans-unit id="46865b531ee05c1b3efa23d49e67a64b7096676f" translate="yes" xml:space="preserve">
          <source>Signal emitted when aperature changes to</source>
          <target state="translated">に変化したときに発生する信号</target>
        </trans-unit>
        <trans-unit id="bc506c14213a696f9dca4f65953eb90eae2964cd" translate="yes" xml:space="preserve">
          <source>Signal emitted when aperature range has changed.</source>
          <target state="translated">温度範囲が変更された場合に出力される信号です。</target>
        </trans-unit>
        <trans-unit id="59fe50364d972e55e1aeaedaa9c709185b84306f" translate="yes" xml:space="preserve">
          <source>Signal emitted when current media changes to</source>
          <target state="translated">現在のメディアが</target>
        </trans-unit>
        <trans-unit id="00038e751fb6470161d98ef9be5729e05c364d0d" translate="yes" xml:space="preserve">
          <source>Signal emitted when digital zoom value changes to new</source>
          <target state="translated">デジタルズーム値が新しい値に変化したときに発する信号</target>
        </trans-unit>
        <trans-unit id="74c030844f4b77d24c0d994075931b0f3b50c535" translate="yes" xml:space="preserve">
          <source>Signal emitted when error state changes to</source>
          <target state="translated">エラー状態が</target>
        </trans-unit>
        <trans-unit id="bda61f07960d2bbb8417fa29cc60d40f83327383" translate="yes" xml:space="preserve">
          <source>Signal emitted when flash state changes to</source>
          <target state="translated">フラッシュ状態が</target>
        </trans-unit>
        <trans-unit id="3fe3f5aaf31945a0006587255701ec192980abd4" translate="yes" xml:space="preserve">
          <source>Signal emitted when item are to be deleted at</source>
          <target state="translated">でアイテムが削除されたときに発する信号</target>
        </trans-unit>
        <trans-unit id="4953a2fad320b98260a4ba65fb514a5fcc5df01f" translate="yes" xml:space="preserve">
          <source>Signal emitted when items are to be inserted at</source>
          <target state="translated">でアイテムが挿入されたときに発する信号</target>
        </trans-unit>
        <trans-unit id="f6c3c3bc834d4b8243508ca00983aca95bb38b54" translate="yes" xml:space="preserve">
          <source>Signal emitted when optical zoom value changes to new</source>
          <target state="translated">光学ズーム値が新しい値に変化したときに発する信号</target>
        </trans-unit>
        <trans-unit id="6fcdf60999b6e0c0172ad2c48510ae0323c90230" translate="yes" xml:space="preserve">
          <source>Signal emitted when playback mode changed to</source>
          <target state="translated">再生モードが</target>
        </trans-unit>
        <trans-unit id="a41c8b9b16c98f2bf231fb8600abb2810272aaf9" translate="yes" xml:space="preserve">
          <source>Signal emitted when playback rate changes to</source>
          <target state="translated">再生レートが</target>
        </trans-unit>
        <trans-unit id="cae0d7f93f551c458a206075749fc53bb0442a44" translate="yes" xml:space="preserve">
          <source>Signal emitted when playlist finished loading.</source>
          <target state="translated">プレイリストのロードが終了したときに発する信号。</target>
        </trans-unit>
        <trans-unit id="aba6a2f01f3d1510a8daf375798ec42a314fa976" translate="yes" xml:space="preserve">
          <source>Signal emitted when playlist position changed to</source>
          <target state="translated">プレイリストの位置が</target>
        </trans-unit>
        <trans-unit id="535ee76dccd1035fa5c16d4972e78b941c6fa879" translate="yes" xml:space="preserve">
          <source>Signal emitted when sensitivity changes to</source>
          <target state="translated">感度が</target>
        </trans-unit>
        <trans-unit id="6170d93df21fe490b66062e5d9fd57c585d79562" translate="yes" xml:space="preserve">
          <source>Signal emitted when the</source>
          <target state="translated">のときに発せられる信号</target>
        </trans-unit>
        <trans-unit id="36a8b7db700bcf3288654bc5cc6b3edd99826968" translate="yes" xml:space="preserve">
          <source>Signal emitted when the actual exposure</source>
          <target state="translated">実際の露光時に発せられる信号</target>
        </trans-unit>
        <trans-unit id="f6c9af5f081b7a5ffd734c599a66bf9db985fba2" translate="yes" xml:space="preserve">
          <source>Signal emitted when the audio</source>
          <target state="translated">オーディオ時に発せられる信号</target>
        </trans-unit>
        <trans-unit id="f8e3181193b312c85a60aec4395969eab68ce275" translate="yes" xml:space="preserve">
          <source>Signal emitted when the availability of the service has changed to</source>
          <target state="translated">サービスの利用可能性が次のように変更された場合に発せられる信号</target>
        </trans-unit>
        <trans-unit id="3d3962e2316e3f6b6b92737fd30174612eadba74" translate="yes" xml:space="preserve">
          <source>Signal emitted when the availability state has changed to</source>
          <target state="translated">アベイラビリティ状態が</target>
        </trans-unit>
        <trans-unit id="35c3c0d0a0b3a26b0ee04255ada8d858d6bd01a4" translate="yes" xml:space="preserve">
          <source>Signal emitted when the buffer</source>
          <target state="translated">バッファ時に放出される信号</target>
        </trans-unit>
        <trans-unit id="5d754ab63aa6be4892609ca93f8ef10cd07d6f73" translate="yes" xml:space="preserve">
          <source>Signal emitted when the camera</source>
          <target state="translated">カメラ時に発せられる信号</target>
        </trans-unit>
        <trans-unit id="cf72768933d8fc5e7931b7e6a2058caea22924bf" translate="yes" xml:space="preserve">
          <source>Signal emitted when the camera capture</source>
          <target state="translated">カメラキャプチャ時に発せられる信号</target>
        </trans-unit>
        <trans-unit id="aab848b6c5fe7e59892d16fb66a5cb3da86fe104" translate="yes" xml:space="preserve">
          <source>Signal emitted when the capture</source>
          <target state="translated">キャプチャ時に発する信号</target>
        </trans-unit>
        <trans-unit id="0a6a5328774f2ddfcf55d781306f292a041a295b" translate="yes" xml:space="preserve">
          <source>Signal emitted when the current</source>
          <target state="translated">電流が流れているときに発せられる信号</target>
        </trans-unit>
        <trans-unit id="15074588f925189a4e420f5eda06a5fd5b9790c6" translate="yes" xml:space="preserve">
          <source>Signal emitted when the current digital</source>
          <target state="translated">現在のデジタル信号を受信したときに発せられる信号</target>
        </trans-unit>
        <trans-unit id="a2879ad0b29fa61e409e05fa27872003e1fd67bc" translate="yes" xml:space="preserve">
          <source>Signal emitted when the current optical</source>
          <target state="translated">現在の光学式の場合に発せられる信号</target>
        </trans-unit>
        <trans-unit id="26d19d4000f19c5182eb42499dcb13d44ec5c7f4" translate="yes" xml:space="preserve">
          <source>Signal emitted when the exposure compensation changes to</source>
          <target state="translated">に変化したときに発せられる信号です。</target>
        </trans-unit>
        <trans-unit id="d486c3b25c78bd74343c94880aa8a0426d1691f7" translate="yes" xml:space="preserve">
          <source>Signal emitted when the frame with request</source>
          <target state="translated">リクエストのあるフレームの場合に発行される信号</target>
        </trans-unit>
        <trans-unit id="59a4b14dec30840090d841939117aa80168eebe3" translate="yes" xml:space="preserve">
          <source>Signal emitted when the maximum supported digital</source>
          <target state="translated">最大サポートされているデジタルの場合に放出される信号</target>
        </trans-unit>
        <trans-unit id="c31a56abcde81f3a22a5f078bd5af422ae35823e" translate="yes" xml:space="preserve">
          <source>Signal emitted when the maximum supported optical</source>
          <target state="translated">最大サポートされている光学的な最大のときに放出される信号</target>
        </trans-unit>
        <trans-unit id="73c57997a713ed6fef041f2828d9d932e9a9b92e" translate="yes" xml:space="preserve">
          <source>Signal emitted when the reply server receives the authorization callback from the server:</source>
          <target state="translated">応答サーバがサーバからの認可コールバックを受信したときに発せられる信号。</target>
        </trans-unit>
        <trans-unit id="2b366ecb8f3bbfdd3aaccc419d4d2397ac77d4fa" translate="yes" xml:space="preserve">
          <source>Signal emitted when the requested digital</source>
          <target state="translated">要求されたデジタル</target>
        </trans-unit>
        <trans-unit id="8e2d9658c365dfdfd10f7dfb27e69e51c8696ca4" translate="yes" xml:space="preserve">
          <source>Signal emitted when the requested exposure</source>
          <target state="translated">要求された露光が行われたときに発する信号</target>
        </trans-unit>
        <trans-unit id="e2a11f9d3b694cce2e1dc2b209c9b2e611734285" translate="yes" xml:space="preserve">
          <source>Signal emitted when the requested optical</source>
          <target state="translated">要求されたオプティカル</target>
        </trans-unit>
        <trans-unit id="b03346c1197f98a1cabd8de0061dc0b35dbf7a26" translate="yes" xml:space="preserve">
          <source>Signal emitted when the server responds to the request with an error:</source>
          <target state="translated">サーバがリクエストに対してエラーで応答したときに発せられる信号。</target>
        </trans-unit>
        <trans-unit id="b5bc97d817d236d805bdaa9f4063e8e63419d66a" translate="yes" xml:space="preserve">
          <source>Signal emitted when the shutter speed range has changed.</source>
          <target state="translated">シャッタスピードの範囲が変更された場合に発せられる信号です。</target>
        </trans-unit>
        <trans-unit id="0e1272eb6d55e72e328756dec8eaa457f39966a8" translate="yes" xml:space="preserve">
          <source>Signal emitted when the supported range of exposure</source>
          <target state="translated">サポートされている露光範囲の場合に発行される信号</target>
        </trans-unit>
        <trans-unit id="13732027b8e647a885f1fc6ccd28e5c083ded6de" translate="yes" xml:space="preserve">
          <source>Signal handlers are a special sort of &lt;a href=&quot;#method-attributes&quot;&gt;method attribute&lt;/a&gt;, where the method implementation is invoked by the QML engine whenever the associated signal is emitted. Adding a signal to an object definition in QML will automatically add an associated signal handler to the object definition, which has, by default, an empty implementation. Clients can provide an implementation, to implement program logic.</source>
          <target state="translated">シグナルハンドラーは特別な種類の&lt;a href=&quot;#method-attributes&quot;&gt;メソッド属性&lt;/a&gt;であり、関連するシグナルが発行されるたびに、メソッド実装がQMLエンジンによって呼び出されます。QMLのオブジェクト定義にシグナルを追加すると、関連付けられたシグナルハンドラーがデフォルトで空の実装を持つオブジェクト定義に自動的に追加されます。クライアントは、プログラムロジックを実装するための実装を提供できます。</target>
        </trans-unit>
        <trans-unit id="cd8958f0af96c3c367ae0f110c46b250b5b2e11a" translate="yes" xml:space="preserve">
          <source>Signal handlers are a special sort of &lt;a href=&quot;qtqml-syntax-objectattributes#method-attributes&quot;&gt;method attribute&lt;/a&gt;, where the method implementation is invoked by the QML engine whenever the associated signal is emitted. Adding a signal to an object definition in QML will automatically add an associated signal handler to the object definition, which has, by default, an empty implementation. Clients can provide an implementation, to implement program logic.</source>
          <target state="translated">シグナルハンドラは特別な種類の&lt;a href=&quot;qtqml-syntax-objectattributes#method-attributes&quot;&gt;メソッド属性&lt;/a&gt;であり、関連するシグナルが発行されるたびに、メソッドの実装がQMLエンジンによって呼び出されます。QMLのオブジェクト定義にシグナルを追加すると、関連付けられたシグナルハンドラーがオブジェクト定義に自動的に追加されます。オブジェクト定義には、デフォルトで空の実装があります。クライアントは、プログラムロジックを実装するための実装を提供できます。</target>
        </trans-unit>
        <trans-unit id="0036174ff73ff91f1d76ec0051265b359d2cb1fa" translate="yes" xml:space="preserve">
          <source>Signal handlers for property change signal take the syntax form</source>
          <target state="translated">プロパティ変更シグナルのシグナルハンドラは、構文の形式をとります。</target>
        </trans-unit>
        <trans-unit id="ab2cd5df165d4a4ed7ff75560d4d31122d564466" translate="yes" xml:space="preserve">
          <source>Signal is emitted when the available audio inputs change.</source>
          <target state="translated">使用可能なオーディオ入力が変化したときに信号を発します。</target>
        </trans-unit>
        <trans-unit id="057d0c7d41f8dd04a12d2e6334d7bc158347df5e" translate="yes" xml:space="preserve">
          <source>Signal is emitted when the custom focus</source>
          <target state="translated">カスタムフォーカス</target>
        </trans-unit>
        <trans-unit id="ef73e75926584d7c0517bd48e4e26d0de5ef38d3" translate="yes" xml:space="preserve">
          <source>Signal is emitted when the focus</source>
          <target state="translated">焦点が合うと信号が出ます。</target>
        </trans-unit>
        <trans-unit id="bc777800b021710954e855670bd4c066b4b83f0e" translate="yes" xml:space="preserve">
          <source>Signal is emitted when the focus point</source>
          <target state="translated">フォーカスポイントがあるときに信号が出ます。</target>
        </trans-unit>
        <trans-unit id="02b0e7e2604aeb9c002491082b0a029947c66d1e" translate="yes" xml:space="preserve">
          <source>Signal is emitted when the set of zones, camera focused on is changed.</source>
          <target state="translated">ゾーンのセット、カメラのフォーカスを変更すると信号が出ます。</target>
        </trans-unit>
        <trans-unit id="a9f94dbe336d730f84dfa2c681266ae3cdca727f" translate="yes" xml:space="preserve">
          <source>Signal objects have a &lt;code&gt;connect()&lt;/code&gt; method to a connect a signal either to a method or another signal. When a signal is connected to a method, the method is automatically invoked whenever the signal is emitted. This mechanism enables a signal to be received by a method instead of a signal handler.</source>
          <target state="translated">信号オブジェクトには、信号をメソッドまたは別の信号に &lt;code&gt;connect()&lt;/code&gt; メソッドがあります。シグナルがメソッドに接続されると、シグナルが発信されるたびにメソッドが自動的に呼び出されます。このメカニズムにより、シグナルハンドラーの代わりにメソッドがシグナルを受信できるようになります。</target>
        </trans-unit>
        <trans-unit id="db6ee2085cddb3309ac4bd5e6891ee643103b0d1" translate="yes" xml:space="preserve">
          <source>Signal that the active in use network access point has been changed to</source>
          <target state="translated">アクティブな使用中のネットワークアクセスポイントが</target>
        </trans-unit>
        <trans-unit id="7bb161641056a2961b42378645eb0706f6b8c5b7" translate="yes" xml:space="preserve">
          <source>Signal that the availability of visual content has changed to</source>
          <target state="translated">映像コンテンツの利用可能性が変更されたことを示す信号</target>
        </trans-unit>
        <trans-unit id="644c83d427b38b1d766153e751f5185012d5ea87" translate="yes" xml:space="preserve">
          <source>Signal the</source>
          <target state="translated">に信号を送ります。</target>
        </trans-unit>
        <trans-unit id="c1ee222c068d53089d3a9a4f73375b2742667cc7" translate="yes" xml:space="preserve">
          <source>Signal the amount of the local buffer filled as a percentage by</source>
          <target state="translated">ローカルバッファが満たされている量をパーセントで表示します。</target>
        </trans-unit>
        <trans-unit id="5a083ee2415c615ba47967174b624392221aecc5" translate="yes" xml:space="preserve">
          <source>Signal the availability of meta-data has changed,</source>
          <target state="translated">メタデータの利用可能性が変更されたことを示します。</target>
        </trans-unit>
        <trans-unit id="2ca1fc606e2968057f73848ee6fde4d36c3c21cb" translate="yes" xml:space="preserve">
          <source>Signal the availability of visual content has changed to</source>
          <target state="translated">映像コンテンツの利用可能性を表示するように変更されました。</target>
        </trans-unit>
        <trans-unit id="2837a0badedcd8ba9d2d65064fef9aa49be68419" translate="yes" xml:space="preserve">
          <source>Signal the changes of meta-data.</source>
          <target state="translated">メタデータの変更を通知します。</target>
        </trans-unit>
        <trans-unit id="71c502d901b1376a0795b0714ec6954fffa26cc5" translate="yes" xml:space="preserve">
          <source>Signal the changes of one meta-data element</source>
          <target state="translated">1つのmeta-data要素の変更を通知します。</target>
        </trans-unit>
        <trans-unit id="ed26ebf9c5cafd536daabd1a911e4d1597cac55b" translate="yes" xml:space="preserve">
          <source>Signal the duration of the content has changed to</source>
          <target state="translated">コンテンツの持続時間が</target>
        </trans-unit>
        <trans-unit id="c06894115adfa0296978a3b0675399c07a7364ca" translate="yes" xml:space="preserve">
          <source>Signal the flash</source>
          <target state="translated">フラッシュに信号を送る</target>
        </trans-unit>
        <trans-unit id="82403c95b6eb242351e1450071c1ff5e6ad62ae5" translate="yes" xml:space="preserve">
          <source>Signal the mute state has changed to</source>
          <target state="translated">ミュート状態が</target>
        </trans-unit>
        <trans-unit id="0a7d0991396d240301209b4e2aed2c906ffe943f" translate="yes" xml:space="preserve">
          <source>Signal the playback volume has changed to</source>
          <target state="translated">再生音量が</target>
        </trans-unit>
        <trans-unit id="1d310ca0a0de4cb6c35e5b312f5492fb7ff31970" translate="yes" xml:space="preserve">
          <source>Signal the position of the content has changed to</source>
          <target state="translated">コンテンツの位置が</target>
        </trans-unit>
        <trans-unit id="82aee052d584a15a710bdf9396c3e345a11dbca4" translate="yes" xml:space="preserve">
          <source>Signal to signal connect</source>
          <target state="translated">信号から信号への接続</target>
        </trans-unit>
        <trans-unit id="5606ef08f055d1eb5648f63c0425ca6e8b46a79f" translate="yes" xml:space="preserve">
          <source>Signal/Slot return types cannot be references</source>
          <target state="translated">信号/スロット・リターン・タイプは参照できません。</target>
        </trans-unit>
        <trans-unit id="b7c3405c5c7680422b22415658f0a7382e769c4f" translate="yes" xml:space="preserve">
          <source>SignalEvent Class</source>
          <target state="translated">SignalEvent クラス</target>
        </trans-unit>
        <trans-unit id="79af38a38edeb99c8aebe2c1314bd50eefa3b87d" translate="yes" xml:space="preserve">
          <source>SignalSpy (QML type)</source>
          <target state="translated">シグナルスパイ(QML型</target>
        </trans-unit>
        <trans-unit id="17d49b8c0fe4acaa206851999e914ce66b43b365" translate="yes" xml:space="preserve">
          <source>SignalSpy QML Type</source>
          <target state="translated">SignalSpy QMLタイプ</target>
        </trans-unit>
        <trans-unit id="fc3a5b13bf5ec22a903cbb0822b6eb66812c3837" translate="yes" xml:space="preserve">
          <source>SignalSpy.clear()</source>
          <target state="translated">SignalSpy.clear()</target>
        </trans-unit>
        <trans-unit id="d6bc817324c2e6d723e9d3617866642c833a1170" translate="yes" xml:space="preserve">
          <source>SignalSpy.count</source>
          <target state="translated">SignalSpy.count</target>
        </trans-unit>
        <trans-unit id="15f24b36a16eeaefab93c168209d85ab1eed2f63" translate="yes" xml:space="preserve">
          <source>SignalSpy.signalArguments</source>
          <target state="translated">SignalSpy.signalArguments</target>
        </trans-unit>
        <trans-unit id="bc0eefa6ea5058fe861e248b52a8b4eee08288ed" translate="yes" xml:space="preserve">
          <source>SignalSpy.signalName</source>
          <target state="translated">SignalSpy.signalName</target>
        </trans-unit>
        <trans-unit id="f7ca22e97f377aa04dfd141087cb841c96915f91" translate="yes" xml:space="preserve">
          <source>SignalSpy.target</source>
          <target state="translated">SignalSpy.target</target>
        </trans-unit>
        <trans-unit id="40b52c6cff310e25984163944e6ae3e0534e443c" translate="yes" xml:space="preserve">
          <source>SignalSpy.valid</source>
          <target state="translated">SignalSpy.valid</target>
        </trans-unit>
        <trans-unit id="f3879ea3662acd059e469cf5f0f880efb62398cf" translate="yes" xml:space="preserve">
          <source>SignalSpy.wait()</source>
          <target state="translated">SignalSpy.wait()</target>
        </trans-unit>
        <trans-unit id="f7a9b98e35e644c6559460503dc11e1ab090554f" translate="yes" xml:space="preserve">
          <source>SignalTransition</source>
          <target state="translated">SignalTransition</target>
        </trans-unit>
        <trans-unit id="4b033e12c22455d72a078fea5ab90f49cecca728" translate="yes" xml:space="preserve">
          <source>SignalTransition (QML type)</source>
          <target state="translated">シグナルトランジション(QML型</target>
        </trans-unit>
        <trans-unit id="f8ef3443f55e7551ee4aeb2a48ccaf6e6f8d6443" translate="yes" xml:space="preserve">
          <source>SignalTransition QML Type</source>
          <target state="translated">SignalTransition QML 型</target>
        </trans-unit>
        <trans-unit id="1cda61fff7c49b5a745c42dba9f2326abe8cda51" translate="yes" xml:space="preserve">
          <source>SignalTransition is part of &lt;a href=&quot;qmlstatemachine&quot;&gt;The Declarative State Machine Framework&lt;/a&gt;.</source>
          <target state="translated">SignalTransitionは、&lt;a href=&quot;qmlstatemachine&quot;&gt;宣言型ステートマシンフレームワークの&lt;/a&gt;一部です。</target>
        </trans-unit>
        <trans-unit id="9c89d481d3e7ab63c000192aff27569061e11078" translate="yes" xml:space="preserve">
          <source>SignalTransition.guard</source>
          <target state="translated">SignalTransition.guard</target>
        </trans-unit>
        <trans-unit id="3767ab2ab1f22aea23c1fadbb29bc021c5e990f9" translate="yes" xml:space="preserve">
          <source>SignalTransition.signal</source>
          <target state="translated">SignalTransition.signal</target>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="translated">Signals</target>
        </trans-unit>
        <trans-unit id="29099fea9bfc2b1e054453c71c6da9dbf07d216d" translate="yes" xml:space="preserve">
          <source>Signals &amp;amp; Slots</source>
          <target state="translated">信号とスロット</target>
        </trans-unit>
        <trans-unit id="90b214f841d4239adf6c14125adf5e56f8f5187c" translate="yes" xml:space="preserve">
          <source>Signals And Slots With Default Arguments</source>
          <target state="translated">デフォルトの引数を持つシグナルとスロット</target>
        </trans-unit>
        <trans-unit id="449bde4656459a5a0ae56344d219405151b9e90c" translate="yes" xml:space="preserve">
          <source>Signals a change in the</source>
          <target state="translated">の変化を示しています。</target>
        </trans-unit>
        <trans-unit id="ba232538b628773b73e365575469b20b0eced376" translate="yes" xml:space="preserve">
          <source>Signals a radio tuner's</source>
          <target state="translated">ラジオチューナーの</target>
        </trans-unit>
        <trans-unit id="54fe9d2902d0456acc9b035369de91307fa9d1d4" translate="yes" xml:space="preserve">
          <source>Signals all the requested camera settings are locked.</source>
          <target state="translated">要求されたすべてのカメラ設定がロックされていることを示します。</target>
        </trans-unit>
        <trans-unit id="47c21b43043d14baba2b1c65a926434cb7f31ff1" translate="yes" xml:space="preserve">
          <source>Signals and Handlers Documentation</source>
          <target state="translated">シグナルとハンドラのドキュメント</target>
        </trans-unit>
        <trans-unit id="9bfe589cd79482eb0a1558cb9df149d383a6fecb" translate="yes" xml:space="preserve">
          <source>Signals and Slots</source>
          <target state="translated">シグナルとスロット</target>
        </trans-unit>
        <trans-unit id="584f1650025ef87fc332586f2b7a5263e0eb11b8" translate="yes" xml:space="preserve">
          <source>Signals and Slots Across Threads</source>
          <target state="translated">スレッドをまたいだシグナルとスロット</target>
        </trans-unit>
        <trans-unit id="a1dc5ce177ca6eb8428c8a7dacb3551ca31cddf5" translate="yes" xml:space="preserve">
          <source>Signals and Slots Editing Mode</source>
          <target state="translated">シグナルとスロットの編集モード</target>
        </trans-unit>
        <trans-unit id="d9eded6e9fcfb40daf7cc68d8d4e8c3b55dc0e85" translate="yes" xml:space="preserve">
          <source>Signals and slots are used for communication between objects.</source>
          <target state="translated">シグナルとスロットは、オブジェクト間の通信に使用されます。</target>
        </trans-unit>
        <trans-unit id="8a17b2c029e03e5b21f74c190c36879385fdf5f1" translate="yes" xml:space="preserve">
          <source>Signals and slots are used for communication between objects. The signals and slots mechanism is a central feature of Qt and probably the part that differs most from the features provided by other frameworks.</source>
          <target state="translated">シグナルとスロットはオブジェクト間の通信に使われます。シグナルとスロットの仕組みは Qt の中心的な機能であり、おそらく他のフレームワークが提供する機能と最も異なる部分でしょう。</target>
        </trans-unit>
        <trans-unit id="84ec94f21953453176df3fd2c6e562d46b96a4e5" translate="yes" xml:space="preserve">
          <source>Signals and slots are used for communication between objects. The signals and slots mechanism is a central feature of Qt and probably the part that differs most from the features provided by other frameworks. ...</source>
          <target state="translated">シグナルとスロットはオブジェクト間の通信に使われます。シグナルとスロットのメカニズムは Qt の中心的な機能であり、おそらく他のフレームワークが提供する機能と最も異なる部分です。...</target>
        </trans-unit>
        <trans-unit id="46c7957e5a532fce3e69e4f473c70a68a2bc4c05" translate="yes" xml:space="preserve">
          <source>Signals and slots are used for communication between objects. The signals and slots mechanism is a central feature of Qt and probably the part that differs most from the features provided by other frameworks. Signals and slots are made possible by Qt's &lt;a href=&quot;metaobjects&quot;&gt;meta-object system&lt;/a&gt;.</source>
          <target state="translated">信号とスロットは、オブジェクト間の通信に使用されます。信号とスロットのメカニズムはQtの中心的な機能であり、おそらく他のフレームワークによって提供される機能と最も異なる部分です。シグナルとスロットは、Qtの&lt;a href=&quot;metaobjects&quot;&gt;メタオブジェクトシステム&lt;/a&gt;によって可能になります。</target>
        </trans-unit>
        <trans-unit id="71ee84ad9c9a7f96b379e08cc8e14b36440d8822" translate="yes" xml:space="preserve">
          <source>Signals and slots are used for communication between objects. The signals and slots mechanism is a central feature of Qt and probably the part that differs most from the features provided by other frameworks. Signals and slots are made possible by Qt's &lt;a href=&quot;metaobjects#&quot;&gt;meta-object system&lt;/a&gt;.</source>
          <target state="translated">信号とスロットは、オブジェクト間の通信に使用されます。シグナルとスロットのメカニズムはQtの中心的な機能であり、おそらく他のフレームワークが提供する機能と最も異なる部分です。シグナルとスロットはQtの&lt;a href=&quot;metaobjects#&quot;&gt;メタオブジェクトシステム&lt;/a&gt;によって可能になりました。</target>
        </trans-unit>
        <trans-unit id="980b1649f1e100dd4cca1a1943bf8483655dba59" translate="yes" xml:space="preserve">
          <source>Signals and slots can have return types, but signals or slots returning references will be treated as returning void.</source>
          <target state="translated">シグナルやスロットは戻り値の型を持つことができますが、参照を返すシグナルやスロットはvoidを返すものとして扱われます。</target>
        </trans-unit>
        <trans-unit id="32b8687de905ba18ff11c7a9fbdaabc5f93f821b" translate="yes" xml:space="preserve">
          <source>Signals and slots, properties and children of</source>
          <target state="translated">のシグナルとスロット、プロパティと子</target>
        </trans-unit>
        <trans-unit id="67c72e45973357935f10004c91c4a9fca01fecb3" translate="yes" xml:space="preserve">
          <source>Signals are automatically generated by the &lt;a href=&quot;moc&quot;&gt;moc&lt;/a&gt; and must not be implemented in the &lt;code&gt;.cpp&lt;/code&gt; file. They can never have return types (i.e. use &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">信号は&lt;a href=&quot;moc&quot;&gt;moc&lt;/a&gt;によって自動的に生成され、 &lt;code&gt;.cpp&lt;/code&gt; ファイルに実装しないでください。戻り値の型を持つことはできません（つまり、 &lt;code&gt;void&lt;/code&gt; を使用します）。</target>
        </trans-unit>
        <trans-unit id="15bd1ce55eeba3b0112698c2ac5b7b9e4e331a72" translate="yes" xml:space="preserve">
          <source>Signals are emitted by an object when its internal state has changed in some way that might be interesting to the object's client or owner. Signals are public access functions and can be emitted from anywhere, but we recommend to only emit them from the class that defines the signal and its subclasses.</source>
          <target state="translated">シグナルは、オブジェクトの内部状態が変化したときに、オブジェクトのクライアントや所有者が興味を持つような方法で発行されます。シグナルはパブリックアクセス関数であり、どこからでも発行することができますが、シグナルを定義したクラスとそのサブクラスからのみ発行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="300c056b9e6bd63487a024f2f177ad05e635aa2e" translate="yes" xml:space="preserve">
          <source>Signals are not blocked by default.</source>
          <target state="translated">シグナルはデフォルトではブロックされません。</target>
        </trans-unit>
        <trans-unit id="356d20e0d201349baed33fa4738458e953ae8a4b" translate="yes" xml:space="preserve">
          <source>Signals can be added to custom QML types through the &lt;code&gt;signal&lt;/code&gt; keyword.</source>
          <target state="translated">シグナルは、 &lt;code&gt;signal&lt;/code&gt; キーワードを使用してカスタムQMLタイプに追加できます。</target>
        </trans-unit>
        <trans-unit id="1d6abbcfbe792cc7c100b5e7c839ae3ff9be5aa8" translate="yes" xml:space="preserve">
          <source>Signals emitted while being blocked are not buffered.</source>
          <target state="translated">ブロックされている間に放出された信号はバッファリングされません。</target>
        </trans-unit>
        <trans-unit id="9c42b191e9e7ed37785498a69e64e6f3322b1ca6" translate="yes" xml:space="preserve">
          <source>Signals from the delegate are used during editing to tell the model and view about the state of the editor.</source>
          <target state="translated">デリゲートからのシグナルは、編集中にモデルとビューにエディタの状態を伝えるために使用されます。</target>
        </trans-unit>
        <trans-unit id="c6f6851aa32169c39251813705da6c7f22489f2a" translate="yes" xml:space="preserve">
          <source>Signals from the model inform the view about changes to the data held by the data source.</source>
          <target state="translated">モデルからの信号は、データソースが保持するデータの変更についてビューに通知します。</target>
        </trans-unit>
        <trans-unit id="217aa4877ca4be0f3bafed07bbd39a1b706fbcc2" translate="yes" xml:space="preserve">
          <source>Signals from the view provide information about the user's interaction with the items being displayed.</source>
          <target state="translated">ビューからの信号は、表示されているアイテムとユーザーのインタラクションに関する情報を提供します。</target>
        </trans-unit>
        <trans-unit id="51c3a425f11bd84613afccd835baea7035850997" translate="yes" xml:space="preserve">
          <source>Signals locking of at least one requested camera settings failed.</source>
          <target state="translated">要求された少なくとも 1 つのカメラ設定のロックに失敗しました。</target>
        </trans-unit>
        <trans-unit id="b3c32970342c5ee6d821cfe9a008db53ca0e581d" translate="yes" xml:space="preserve">
          <source>Signals that a camera's</source>
          <target state="translated">カメラの</target>
        </trans-unit>
        <trans-unit id="f07ce0a6956909ed9a9f3a9b27928fa635fa6aa1" translate="yes" xml:space="preserve">
          <source>Signals that a camera's shutter</source>
          <target state="translated">カメラのシャッターが切れたことを知らせる</target>
        </trans-unit>
        <trans-unit id="8850791da6a0e13210f0faf40050b5b8653649bc" translate="yes" xml:space="preserve">
          <source>Signals that a capture control's</source>
          <target state="translated">キャプチャコントロールの</target>
        </trans-unit>
        <trans-unit id="3e1b576e8be7ca99ef33ea8272077f8aba248347" translate="yes" xml:space="preserve">
          <source>Signals that a captured</source>
          <target state="translated">捕獲されたことを示すシグナル</target>
        </trans-unit>
        <trans-unit id="9815cf844765db536ffb0ac52395e70e027d7a83" translate="yes" xml:space="preserve">
          <source>Signals that a captured image with a</source>
          <target state="translated">でキャプチャされた画像が</target>
        </trans-unit>
        <trans-unit id="dbd6f4bbdf7ebb29e286dceb1880c39a1f872f1f" translate="yes" xml:space="preserve">
          <source>Signals that a media object's meta-data has changed.</source>
          <target state="translated">メディアオブジェクトのメタデータが変更されたことを示します。</target>
        </trans-unit>
        <trans-unit id="3f0e2c4798d445a7b19bc99ea76c83c8b564f976" translate="yes" xml:space="preserve">
          <source>Signals that a media recorder's</source>
          <target state="translated">メディアレコーダーの</target>
        </trans-unit>
        <trans-unit id="52d6e7c4f040e48eb606afcc09a04df6ae1c0e61" translate="yes" xml:space="preserve">
          <source>Signals that a metadata for an image with request</source>
          <target state="translated">リクエストを持つ画像のメタデータが</target>
        </trans-unit>
        <trans-unit id="53f528fb8511eec4de5c5bb6c1c655266d1a2c77" translate="yes" xml:space="preserve">
          <source>Signals that a new buffer is ready for reading.</source>
          <target state="translated">新しいバッファの読み込み準備ができたことを示します。</target>
        </trans-unit>
        <trans-unit id="69e7763900df70205ea06e13a72ac5e77d6fead4" translate="yes" xml:space="preserve">
          <source>Signals that a new decoded audio buffer is available to be read.</source>
          <target state="translated">新しいデコードされたオーディオバッファの読み込みが可能であることを示します。</target>
        </trans-unit>
        <trans-unit id="1b40d96ef0f2c6a02d851bac6e22ee6605006566" translate="yes" xml:space="preserve">
          <source>Signals that a station was found in</source>
          <target state="translated">にステーションが発見されたことを示しています。</target>
        </trans-unit>
        <trans-unit id="4bf4ca0c35766ea9d383c229f31228e217456eb4" translate="yes" xml:space="preserve">
          <source>Signals that a video overlay's</source>
          <target state="translated">ビデオオーバーレイの</target>
        </trans-unit>
        <trans-unit id="b73a68d81a57e5fbae220d261161091314dc9edd" translate="yes" xml:space="preserve">
          <source>Signals that a video widget's</source>
          <target state="translated">動画ウィジェットの</target>
        </trans-unit>
        <trans-unit id="90684cc21dc91f32b49fbfb12f7f25a73c92390f" translate="yes" xml:space="preserve">
          <source>Signals that a video widgets's</source>
          <target state="translated">ビデオウィジェットの</target>
        </trans-unit>
        <trans-unit id="789261040149916bdbe6490c76ed7793771433a8" translate="yes" xml:space="preserve">
          <source>Signals that an</source>
          <target state="translated">があることを示しています。</target>
        </trans-unit>
        <trans-unit id="1fb2ec8e95add3af5176ae83c3e8eb9e7b8dddf3" translate="yes" xml:space="preserve">
          <source>Signals that an image with it</source>
          <target state="translated">それを持つ画像があることを示す</target>
        </trans-unit>
        <trans-unit id="9e7835816e402ac98ec83ef797ec16f3e768dc80" translate="yes" xml:space="preserve">
          <source>Signals that automatically tuning to alternative frequencies has been enabled or disabled according to</source>
          <target state="translated">代替周波数への自動チューニングが有効または無効になっていることを示しています。</target>
        </trans-unit>
        <trans-unit id="2310d5f035d35db6d6c82e5d8577ca8fd5a3c0d2" translate="yes" xml:space="preserve">
          <source>Signals that list of available inputs has changed.</source>
          <target state="translated">使用可能な入力リストが変更されたことを示します。</target>
        </trans-unit>
        <trans-unit id="9530e1f6432a71cc64bf181be513d99a1cb47209" translate="yes" xml:space="preserve">
          <source>Signals that list of available outputs has changed.</source>
          <target state="translated">使用可能な出力のリストが変更されたことを示します。</target>
        </trans-unit>
        <trans-unit id="e6222568e9b6a03e7f6ffd52f1eebbeac5317a73" translate="yes" xml:space="preserve">
          <source>Signals that new station with</source>
          <target state="translated">新駅があることを示しています。</target>
        </trans-unit>
        <trans-unit id="5885bf4cfe7265f51fad61de2f84b7a9133c4216" translate="yes" xml:space="preserve">
          <source>Signals that the</source>
          <target state="translated">というサインが出ています。</target>
        </trans-unit>
        <trans-unit id="d95b660e09694269714710a469eb507c9293ee81" translate="yes" xml:space="preserve">
          <source>Signals that the &lt;a href=&quot;qaudiodecodercontrol#bufferAvailable&quot;&gt;bufferAvailable&lt;/a&gt; property has changed to</source>
          <target state="translated">シグナル&lt;a href=&quot;qaudiodecodercontrol#bufferAvailable&quot;&gt;bufferAvailable&lt;/a&gt;プロパティがに変更されました</target>
        </trans-unit>
        <trans-unit id="2e6ac4a7f1ade7b3150dcf28643c266faea9e609" translate="yes" xml:space="preserve">
          <source>Signals that the Program Identification</source>
          <target state="translated">プログラムの識別が行われていることを示す</target>
        </trans-unit>
        <trans-unit id="69cfc6607feef1c61331bbf24d59057347fc89e2" translate="yes" xml:space="preserve">
          <source>Signals that the Program Identification code has changed to</source>
          <target state="translated">プログラム識別コードが変更されたことを示します。</target>
        </trans-unit>
        <trans-unit id="c9e79520104774d2143f938247dbbbabfcc92287" translate="yes" xml:space="preserve">
          <source>Signals that the Program Service</source>
          <target state="translated">プログラムサービスがあることを示しています。</target>
        </trans-unit>
        <trans-unit id="3460195c1c3b07adc154d5cd7f38a3961fb5a128" translate="yes" xml:space="preserve">
          <source>Signals that the Program Service has changed to</source>
          <target state="translated">プログラムサービスが</target>
        </trans-unit>
        <trans-unit id="5904a53369d6b2a09d27f82b12dbc80a862109e6" translate="yes" xml:space="preserve">
          <source>Signals that the Program Type</source>
          <target state="translated">プログラムタイプが</target>
        </trans-unit>
        <trans-unit id="c7deae78a9c0220d67d972b650c7b936f93eab84" translate="yes" xml:space="preserve">
          <source>Signals that the Program Type Name</source>
          <target state="translated">プログラムタイプ名が</target>
        </trans-unit>
        <trans-unit id="bd0e8319ca8e2ddbac4ea9d78b480184d5a8e08c" translate="yes" xml:space="preserve">
          <source>Signals that the Program Type Name has changed to</source>
          <target state="translated">プログラムタイプ名が</target>
        </trans-unit>
        <trans-unit id="3fbfd9d49161b636d45292c64bb99e675149289e" translate="yes" xml:space="preserve">
          <source>Signals that the Program Type code has changed to</source>
          <target state="translated">プログラムタイプコードが</target>
        </trans-unit>
        <trans-unit id="98e1405b7e95ae605b94c5463cc293448af95fdd" translate="yes" xml:space="preserve">
          <source>Signals that the Radio Text</source>
          <target state="translated">ラジオのテキストが示す信号</target>
        </trans-unit>
        <trans-unit id="2dd2cd83cf9106619bc11db78702678617ad8c46" translate="yes" xml:space="preserve">
          <source>Signals that the Radio Text property has changed to</source>
          <target state="translated">Radio Text プロパティが</target>
        </trans-unit>
        <trans-unit id="cbb7e0a5a12b090ccb4cbc3bccbfa8d53c6e3dcf" translate="yes" xml:space="preserve">
          <source>Signals that the actual</source>
          <target state="translated">実際の</target>
        </trans-unit>
        <trans-unit id="9b640910af85b405952f7f65a5fd0ac91fc5cbfa" translate="yes" xml:space="preserve">
          <source>Signals that the actual media</source>
          <target state="translated">実際のメディアがそうであることを示している</target>
        </trans-unit>
        <trans-unit id="80bd8228c63b4fa309edb2365988a347ed59c960" translate="yes" xml:space="preserve">
          <source>Signals that the alternative frequencies setting has changed to the value of</source>
          <target state="translated">代替周波数の設定が</target>
        </trans-unit>
        <trans-unit id="aab8d1c2fe60b63d0a732ec6eca99c5d7d668abf" translate="yes" xml:space="preserve">
          <source>Signals that the antenna has either been connected or disconnected as reflected with the</source>
          <target state="translated">で反射されたアンテナが接続されているか、切断されていることを示しています。</target>
        </trans-unit>
        <trans-unit id="e963828e6983d64ee1ca503002382d0b2cb138b2" translate="yes" xml:space="preserve">
          <source>Signals that the audio</source>
          <target state="translated">オーディオが</target>
        </trans-unit>
        <trans-unit id="9f81a861bb8e11a04cf5237b282a94e4ad5c1a6e" translate="yes" xml:space="preserve">
          <source>Signals that the audio input has changed to</source>
          <target state="translated">オーディオ入力が</target>
        </trans-unit>
        <trans-unit id="455149ffba4757f9afdc696a7639c25e801c14fe" translate="yes" xml:space="preserve">
          <source>Signals that the audio output has changed to</source>
          <target state="translated">オーディオ出力が</target>
        </trans-unit>
        <trans-unit id="db97243e1855b12fbec8c84bb671ee23169e00a5" translate="yes" xml:space="preserve">
          <source>Signals that the available media playback</source>
          <target state="translated">利用可能なメディアの再生が可能であることを示す</target>
        </trans-unit>
        <trans-unit id="943a8726db641c8fa08e4e305a8397af6cc2533b" translate="yes" xml:space="preserve">
          <source>Signals that the capture request</source>
          <target state="translated">キャプチャ要求があったことを示す</target>
        </trans-unit>
        <trans-unit id="33aad887852a17e86e6271b5647c3d7e864fdf78" translate="yes" xml:space="preserve">
          <source>Signals that the configured</source>
          <target state="translated">設定された</target>
        </trans-unit>
        <trans-unit id="eff996e3ebb862cf8a951f7ab98cb6916ee07504" translate="yes" xml:space="preserve">
          <source>Signals that the current</source>
          <target state="translated">現在の</target>
        </trans-unit>
        <trans-unit id="10e8555f857ed4c3fc1d3fa9fb46d3510f84db09" translate="yes" xml:space="preserve">
          <source>Signals that the current audio format of the decoder has changed to</source>
          <target state="translated">デコーダの現在のオーディオフォーマットが</target>
        </trans-unit>
        <trans-unit id="605b77b4a8890e428c79b103603cbc0d9a7b99d7" translate="yes" xml:space="preserve">
          <source>Signals that the current media</source>
          <target state="translated">現在のメディアがそうであることを示している</target>
        </trans-unit>
        <trans-unit id="da89389f6691b25dc49a72769182e50509d75ee3" translate="yes" xml:space="preserve">
          <source>Signals that the current playing content has been changed to</source>
          <target state="translated">現在のプレイ内容が</target>
        </trans-unit>
        <trans-unit id="941c49e64fd8856a487df40adfdd40991846e602" translate="yes" xml:space="preserve">
          <source>Signals that the current source of the decoder has changed.</source>
          <target state="translated">デコーダの現在のソースが変更されたことを示します。</target>
        </trans-unit>
        <trans-unit id="a7e7fb7be2b96679848e7b330406915ab35ea689" translate="yes" xml:space="preserve">
          <source>Signals that the decoding has finished successfully. If decoding fails, error signal is emitted instead.</source>
          <target state="translated">デコードが正常に終了したことを示します。デコードに失敗した場合は、代わりにエラー信号を発します。</target>
        </trans-unit>
        <trans-unit id="04646b6da0459a4cd3285d1f870d497649a70100" translate="yes" xml:space="preserve">
          <source>Signals that the estimated</source>
          <target state="translated">推定された</target>
        </trans-unit>
        <trans-unit id="89c988dcd8148839b3b1b2dcc6ea915740b92c71" translate="yes" xml:space="preserve">
          <source>Signals that the frequency</source>
          <target state="translated">周波数が</target>
        </trans-unit>
        <trans-unit id="24ace6fd48cd946fe1e80d8a51df51b35f4c8f8b" translate="yes" xml:space="preserve">
          <source>Signals that the job execution has finished (be it successfully, because an error happened or because it was cancelled).</source>
          <target state="translated">ジョブの実行が終了したことを示します(エラーが発生したために正常に終了したか、キャンセルされたために終了したかに関わらず)。</target>
        </trans-unit>
        <trans-unit id="2924a88b63013a7ce000c48fb8a6fdc14af63156" translate="yes" xml:space="preserve">
          <source>Signals that the list of available video devices has changed.</source>
          <target state="translated">使用可能なビデオデバイスのリストが変更されたことを示します。</target>
        </trans-unit>
        <trans-unit id="b86f6dc2958d55953c68604d266c38896fe589f2" translate="yes" xml:space="preserve">
          <source>Signals that the media recorder is now available (if</source>
          <target state="translated">メディアレコーダーが使用可能になったことを示します。</target>
        </trans-unit>
        <trans-unit id="2c18f3154a32b30fb36f6106a7bc7382d5bba2ec" translate="yes" xml:space="preserve">
          <source>Signals that the media source has been changed to</source>
          <target state="translated">メディアソースが</target>
        </trans-unit>
        <trans-unit id="7b9d7626715bcffad870626e8601dc1be86d21c0" translate="yes" xml:space="preserve">
          <source>Signals that the native</source>
          <target state="translated">ネイティブが</target>
        </trans-unit>
        <trans-unit id="dbf5e0c42e11e30f3cce5bdfd0aa09ae40480efd" translate="yes" xml:space="preserve">
          <source>Signals that the native dimensions of the video have changed.</source>
          <target state="translated">ビデオのネイティブディメンションが変更されたことを示します。</target>
        </trans-unit>
        <trans-unit id="986476f5745e5a074ecc265fda76e08ce43c2859" translate="yes" xml:space="preserve">
          <source>Signals that the next</source>
          <target state="translated">次のシグナル</target>
        </trans-unit>
        <trans-unit id="940cfedcb2776cbf5d264b4cb25a53c16076d920" translate="yes" xml:space="preserve">
          <source>Signals that the percentage</source>
          <target state="translated">パーセントであることを示しています。</target>
        </trans-unit>
        <trans-unit id="f97a38c9f62a7708f4e65fb198b9a86ac3573497" translate="yes" xml:space="preserve">
          <source>Signals that the selected video device</source>
          <target state="translated">選択されたビデオデバイスがあることを示します。</target>
        </trans-unit>
        <trans-unit id="b6f83f1d5f8720f70449040ce8ecad237d994070" translate="yes" xml:space="preserve">
          <source>Signals that the service availability has changed to</source>
          <target state="translated">サービスの利用可能性が</target>
        </trans-unit>
        <trans-unit id="24e54a6c5277b54622570362abbf8a2d96d84bee" translate="yes" xml:space="preserve">
          <source>Signals that the set of formats supported by a video surface has changed.</source>
          <target state="translated">ビデオサーフェスがサポートするフォーマットのセットが変更されたことを示します。</target>
        </trans-unit>
        <trans-unit id="4ce85e2b4f2eed4a1fe5e45567dd7a8b702f5663" translate="yes" xml:space="preserve">
          <source>Signals that the state of a player control has changed to</source>
          <target state="translated">プレーヤ・コントロールの状態が</target>
        </trans-unit>
        <trans-unit id="42e129d3bbe48c1c24df7437c02f12d8a4a0f4c3" translate="yes" xml:space="preserve">
          <source>Signals that there has been a change in the availability of audio output</source>
          <target state="translated">音声出力の利用可能性に変更があったことを示しています。</target>
        </trans-unit>
        <trans-unit id="aaa30a037e45aab9c6167e83c8e7143034e46f42" translate="yes" xml:space="preserve">
          <source>Signals that this media object's meta-data has changed.</source>
          <target state="translated">このメディア・オブジェクトのメタデータが変更されたことを示します。</target>
        </trans-unit>
        <trans-unit id="6d77aa940a7489111001057f0ceecca094775707" translate="yes" xml:space="preserve">
          <source>Signals the</source>
          <target state="translated">を通知します。</target>
        </trans-unit>
        <trans-unit id="38f099c4b5a2ba7713503e27d57a858355e126fc" translate="yes" xml:space="preserve">
          <source>Signals the &lt;a href=&quot;qmediaplayer#playbackRate-prop&quot;&gt;playbackRate&lt;/a&gt; has changed to</source>
          <target state="translated">&lt;a href=&quot;qmediaplayer#playbackRate-prop&quot;&gt;再生レート&lt;/a&gt;が変更されたことを通知します</target>
        </trans-unit>
        <trans-unit id="2cd2b40f8e594260804cdff63ceb1dbc15d530a1" translate="yes" xml:space="preserve">
          <source>Signals the audio</source>
          <target state="translated">オーディオに信号を送る</target>
        </trans-unit>
        <trans-unit id="fec5e67295a5287b8aaf50bf33832bd08afb73f3" translate="yes" xml:space="preserve">
          <source>Signals the availability (if</source>
          <target state="translated">アベイラビリティを通知します。</target>
        </trans-unit>
        <trans-unit id="295a0881f9f49906debb883e28fd9989c7cd8d65" translate="yes" xml:space="preserve">
          <source>Signals the availability of audio content has changed to</source>
          <target state="translated">音声コンテンツの利用可能性が変更されたことを示す</target>
        </trans-unit>
        <trans-unit id="a780ec064e3e76645854d5d895d75aff9fe4952c" translate="yes" xml:space="preserve">
          <source>Signals the buffer image capture format changed to</source>
          <target state="translated">バッファイメージのキャプチャフォーマットが</target>
        </trans-unit>
        <trans-unit id="2202134b937d7e31e284fe22a29ebbd911685eb8" translate="yes" xml:space="preserve">
          <source>Signals the camera</source>
          <target state="translated">カメラに信号を送る</target>
        </trans-unit>
        <trans-unit id="573a13c87fd9b6c28e579a8ce047db40b603123b" translate="yes" xml:space="preserve">
          <source>Signals the capture</source>
          <target state="translated">キャプチャの合図</target>
        </trans-unit>
        <trans-unit id="d16434feef68d6c64cebf5d3c4a560255c89ed35" translate="yes" xml:space="preserve">
          <source>Signals the capture request</source>
          <target state="translated">キャプチャ要求を通知する</target>
        </trans-unit>
        <trans-unit id="9ab88d4cdea5d385cfad03fb3c793cb9786f968b" translate="yes" xml:space="preserve">
          <source>Signals the image capture</source>
          <target state="translated">画像の取り込みを指示します。</target>
        </trans-unit>
        <trans-unit id="833916af1e7b4e40928e2cbf5fd05ea1c3059be7" translate="yes" xml:space="preserve">
          <source>Signals the lock</source>
          <target state="translated">ロックに信号を送る</target>
        </trans-unit>
        <trans-unit id="e0af0e0834a1e989c2121d3e751d8640921b0e77" translate="yes" xml:space="preserve">
          <source>Signals the native</source>
          <target state="translated">ネイティブにシグナルを送る</target>
        </trans-unit>
        <trans-unit id="78cfbbd3997108e5069a287bd03b18b05a153b3d" translate="yes" xml:space="preserve">
          <source>Signals the overall</source>
          <target state="translated">全体的なシグナル</target>
        </trans-unit>
        <trans-unit id="681c3a48328420b6ddfea2fc275f89c847f1f25d" translate="yes" xml:space="preserve">
          <source>Signals the playback</source>
          <target state="translated">再生を指示する</target>
        </trans-unit>
        <trans-unit id="ad602abbf633197dc0196386295c3db71a517f04" translate="yes" xml:space="preserve">
          <source>Signals when a gesture is recognized. Implementors can use this signal to send recognizer-specific gestures, such as &lt;code&gt;detected(&quot;shake_left&quot;)&lt;/code&gt; or implement custom signals such as &lt;code&gt;shakeLeft()&lt;/code&gt;.</source>
          <target state="translated">ジェスチャが認識されたときに通知します。実装者は、このシグナルを使用して、 &lt;code&gt;detected(&quot;shake_left&quot;)&lt;/code&gt; などの認識機能固有のジェスチャを送信したり、 &lt;code&gt;shakeLeft()&lt;/code&gt; などのカスタムシグナルを実装したりできます。</target>
        </trans-unit>
        <trans-unit id="dd42ec132f826d9303723dc1141a71fdd3366169" translate="yes" xml:space="preserve">
          <source>Signals when a new sensor gesture becomes available for use.</source>
          <target state="translated">新しいセンサージェスチャーが使用可能になったときに通知します。</target>
        </trans-unit>
        <trans-unit id="351377d05222e1cea0ce7adbd4aa8f737c5e2c69" translate="yes" xml:space="preserve">
          <source>Signals when the</source>
          <target state="translated">の時の信号を表示します。</target>
        </trans-unit>
        <trans-unit id="04d5be657f39d3dde6c7adf8ddfb3baef9dcb442" translate="yes" xml:space="preserve">
          <source>Signals when the gesture has been recognized.</source>
          <target state="translated">ジェスチャーが認識されたときに通知します。</target>
        </trans-unit>
        <trans-unit id="cfd20fc91dba9699b28f9ec45cbc48e0e5eefb99" translate="yes" xml:space="preserve">
          <source>Signals when the gesture with id</source>
          <target state="translated">id を持つジェスチャーが表示されたときに通知します。</target>
        </trans-unit>
        <trans-unit id="de67e36270268650464e3922fb5ed284dc715746" translate="yes" xml:space="preserve">
          <source>Signals when the player advances to the next media (the content of next media will be cleared).</source>
          <target state="translated">次のメディアに進むときの信号(次のメディアの内容がクリアされます)。</target>
        </trans-unit>
        <trans-unit id="66bdf1c21cf844366388d6cb40a8194ee88f00fc" translate="yes" xml:space="preserve">
          <source>Signals, Notifiers, and Slots</source>
          <target state="translated">シグナル、通知器、スロット</target>
        </trans-unit>
        <trans-unit id="2f32be1dc74166373c988ec03b0bd86f0a576919" translate="yes" xml:space="preserve">
          <source>Signature</source>
          <target state="translated">Signature</target>
        </trans-unit>
        <trans-unit id="c84b7f8a95c9e5a785d8ae865780888571b0ed57" translate="yes" xml:space="preserve">
          <source>Signed integer, stored in 8, 16, 24, 32, 48, or 64-bits depending on the magnitude of the value.</source>
          <target state="translated">値の大きさに応じて8、16、24、32、48、64ビットで格納される符号付き整数。</target>
        </trans-unit>
        <trans-unit id="6e640bc6cc5785ca0b0113c57ef1e5c59d9063f4" translate="yes" xml:space="preserve">
          <source>Signifies the &lt;code&gt;\&amp;gt;\&amp;gt;&lt;/code&gt; operator. Test whether the first operand follows the second in the document.</source>
          <target state="translated">意味 &lt;code&gt;\&amp;gt;\&amp;gt;&lt;/code&gt; 演算子を。ドキュメントの最初のオペランドが2番目のオペランドの後に続くかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="2d4230819457eff32a9baaf93dcd71a17046ad2b" translate="yes" xml:space="preserve">
          <source>Signifies the &lt;code&gt;\&amp;lt;\&amp;lt;&lt;/code&gt; operator. Test whether the first operand precedes the second in the document.</source>
          <target state="translated">意味 &lt;code&gt;\&amp;lt;\&amp;lt;&lt;/code&gt; 演算子を。ドキュメントの最初のオペランドが2番目のオペランドの前にあるかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="1d3d2ec477bb19437cd59fcbd996fbe4bf10fbac" translate="yes" xml:space="preserve">
          <source>Signifies the &lt;code&gt;is&lt;/code&gt; operator. Test whether two nodes have the same node identity.</source>
          <target state="translated">が意味が &lt;code&gt;is&lt;/code&gt; 演算子。2つのノードが同じノードIDを持っているかどうかをテストします。</target>
        </trans-unit>
        <trans-unit id="88ecaa02105d340336f3001d1968ed82942b0e81" translate="yes" xml:space="preserve">
          <source>Signing the Application</source>
          <target state="translated">申請書への署名</target>
        </trans-unit>
        <trans-unit id="8a68754dd0dd881bddc888c2ad5477fb5eb2213a" translate="yes" xml:space="preserve">
          <source>Signs the</source>
          <target state="translated">サイン</target>
        </trans-unit>
        <trans-unit id="2e0e193befb178eb40523a1c87a966d321bac9e7" translate="yes" xml:space="preserve">
          <source>Silhouette Opacity Maps</source>
          <target state="translated">シルエットの不透明度マップ</target>
        </trans-unit>
        <trans-unit id="b2996b8fb2c90420a380cfd35d6f289626fca231" translate="yes" xml:space="preserve">
          <source>Silicon Valley</source>
          <target state="translated">シリコンバレー</target>
        </trans-unit>
        <trans-unit id="788f22142886155ce5d4729bcb0c9b92b7d9337b" translate="yes" xml:space="preserve">
          <source>Similar differences are possible in the buffer sizes, for example, the resulting context may have a larger depth buffer than requested. This is perfectly normal.</source>
          <target state="translated">バッファサイズにも同様の違いがあり、例えば、結果として得られるコンテキストのバッファの深さは要求されたものよりも大きくなる可能性があります。これは完全に正常なことです。</target>
        </trans-unit>
        <trans-unit id="e7be3cd89c9ee32035611e529d18fe299a808833" translate="yes" xml:space="preserve">
          <source>Similar semantics for the &lt;code&gt;&amp;lt;Qualifier&amp;gt;&lt;/code&gt; apply to directory imports as for module imports; for more information on the topic, please see the previous section about &lt;a href=&quot;#importing-into-a-qualified-local-namespace&quot;&gt;Importing into a Qualified Local Namespace&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Qualifier&amp;gt;&lt;/code&gt; の同様のセマンティクスは、モジュールのインポートと同様にディレクトリのインポートにも適用されます。トピックの詳細については&lt;a href=&quot;#importing-into-a-qualified-local-namespace&quot;&gt;、修飾されたローカル名前空間へのインポート&lt;/a&gt;に関する前のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="47b7a33817eb5c8877186071a9653acf8965ee63" translate="yes" xml:space="preserve">
          <source>Similar semantics for the &lt;code&gt;&amp;lt;Qualifier&amp;gt;&lt;/code&gt; apply to directory imports as for module imports; for more information on the topic, please see the previous section about &lt;a href=&quot;qtqml-syntax-imports#importing-into-a-qualified-local-namespace&quot;&gt;Importing into a Qualified Local Namespace&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Qualifier&amp;gt;&lt;/code&gt; の同様のセマンティクスは、モジュールのインポートと同様にディレクトリのインポートにも適用されます。このトピックの詳細については&lt;a href=&quot;qtqml-syntax-imports#importing-into-a-qualified-local-namespace&quot;&gt;、修飾されたローカル名前空間へのインポート&lt;/a&gt;に関する前のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="7b008ce816f37207706f5ae46ab90f5791ce0ed2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#code-command&quot;&gt;\code&lt;/a&gt;, \badcode and \endcode commands enclose content that is rendered verbatim in a separate paragraph, but no parsing or automatic link creation is performed. Instead, the content is treated as plain text.</source>
          <target state="translated">&lt;a href=&quot;#code-command&quot;&gt;\ code&lt;/a&gt;と同様に、\ badcodeコマンドと\ endcodeコマンドは、逐語的にレンダリングされるコンテンツを別の段落で囲みますが、解析やリンクの自動作成は実行されません。代わりに、コンテンツはプレーンテキストとして扱われます。</target>
        </trans-unit>
        <trans-unit id="f067cff72be726ceab7ec7eb1a06c93ac9810f85" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#member-functions&quot;&gt;functions&lt;/a&gt;, the default type may be linked or marked with the &lt;code&gt;\c&lt;/code&gt; command.</source>
          <target state="translated">&lt;a href=&quot;#member-functions&quot;&gt;functions&lt;/a&gt;と同様に、デフォルトのタイプは &lt;code&gt;\c&lt;/code&gt; コマンドでリンクまたはマークされます。</target>
        </trans-unit>
        <trans-unit id="e6c3cdfd22465ed397c06cd57ac96ca4a93dfe4d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;06-qdoc-commands-includecodeinline#code-command&quot;&gt;\code&lt;/a&gt;, \badcode and \endcode commands enclose content that is rendered verbatim in a separate paragraph, but no parsing or automatic link creation is performed. Instead, the content is treated as plain text.</source>
          <target state="translated">&lt;a href=&quot;06-qdoc-commands-includecodeinline#code-command&quot;&gt;\ code&lt;/a&gt;と同様に、\ badcodeコマンドと\ endcodeコマンドは、逐語的にレンダリングされたコンテンツを別の段落で囲みますが、解析や自動リンク作成は実行されません。代わりに、コンテンツはプレーンテキストとして扱われます。</target>
        </trans-unit>
        <trans-unit id="fb758966cc28ff4e63b7b97b3d7ae3777fe1f6f0" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;qobject#objectName-prop&quot;&gt;QObject::setObjectName&lt;/a&gt;() (which this method calls), but this version also applies the</source>
          <target state="translated">&lt;a href=&quot;qobject#objectName-prop&quot;&gt;QObject :: setObjectName&lt;/a&gt;（）（このメソッドが呼び出す）に似ていますが、このバージョンは</target>
        </trans-unit>
        <trans-unit id="09f26bb4400d7c5fd6b1531799fbb540b926a4a9" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;qtwritingstyle-cpp#member-functions&quot;&gt;functions&lt;/a&gt;, the default type may be linked or marked with the &lt;code&gt;\c&lt;/code&gt; command.</source>
          <target state="translated">&lt;a href=&quot;qtwritingstyle-cpp#member-functions&quot;&gt;関数&lt;/a&gt;と同様に、デフォルトのタイプは &lt;code&gt;\c&lt;/code&gt; コマンドでリンクまたはマークすることができます。</target>
        </trans-unit>
        <trans-unit id="8fd3cbeda6b0d1941f98b8fe43696c47f11e8e06" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;quick3d-asset-conditioning-anti-aliasing#texture-aliasing&quot;&gt;Texture Aliasing&lt;/a&gt;, a material reflecting the environment will sub-sample the image. In some cases, as seen on the left in the image below, it becomes obvious when fine details are being skipped.</source>
          <target state="translated">&lt;a href=&quot;quick3d-asset-conditioning-anti-aliasing#texture-aliasing&quot;&gt;テクスチャエイリアシング&lt;/a&gt;と同様に、環境を反映するマテリアルは画像をサブサンプリングします。場合によっては、下の画像の左側に見られるように、細かい部分がスキップされているときに明らかになります。</target>
        </trans-unit>
        <trans-unit id="95f44d4e227636b196c58cacab55bb88cea3ae87" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Indexed&lt;/code&gt;, pixel values represent a list of available gray tones. &lt;a href=&quot;qcolormap&quot;&gt;QColormap&lt;/a&gt; uses the index of the gray tone that most closely matches the computed gray tone of an RGB value.</source>
          <target state="translated">&lt;code&gt;Indexed&lt;/code&gt; と同様に、ピクセル値は使用可能なグレートーンのリストを表します。&lt;a href=&quot;qcolormap&quot;&gt;QColormap&lt;/a&gt;は、RGB値の計算されたグレートーンに最も近いグレートーンのインデックスを使用します。</target>
        </trans-unit>
        <trans-unit id="b357a68feba8f930e61db494289882a14266db13" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Indexed&lt;/code&gt;, pixel values represent a vector of available gray tones. &lt;a href=&quot;qcolormap&quot;&gt;QColormap&lt;/a&gt; uses the index of the gray tone that most closely matches the computed gray tone of an RGB value.</source>
          <target state="translated">&lt;code&gt;Indexed&lt;/code&gt; と同様に、ピクセル値は使用可能なグレートーンのベクトルを表します。&lt;a href=&quot;qcolormap&quot;&gt;QColormap&lt;/a&gt;は、RGB値の計算されたグレートーンに最も近いグレートーンのインデックスを使用します。</target>
        </trans-unit>
        <trans-unit id="3d6c18de9ab3be939d7d0367d9d08477a8a2cab6" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;RenderDirectToBackground&lt;/code&gt; mode, except that the graph will not clear the whole window before rendering the graph. This mode is better for windows where you have other custom items besides the graphs that also draw on the window background. In that case you need to either take care of the window clearing yourself or ensure that all areas of the window are fully covered with opaque items. If one graph in the window uses either of the direct rendering modes, then all other graphs in the same window also drawn in direct modes should use the exact same direct rendering mode. Otherwise some graphs may not show up, depending on the drawing order of the graphs.</source>
          <target state="translated">&lt;code&gt;RenderDirectToBackground&lt;/code&gt; モードに似ていますが、グラフをレンダリングする前にグラフがウィンドウ全体をクリアしない点が異なります。このモードは、ウィンドウの背景に描画するグラフ以外に、他のカスタムアイテムがあるウィンドウに適しています。その場合は、ウィンドウを自分でクリアするか、ウィンドウのすべての領域が不透明なアイテムで完全に覆われていることを確認する必要があります。ウィンドウ内の1つのグラフがいずれかのダイレクトレンダリングモードを使用している場合、同じウィンドウ内の他のすべてのグラフもダイレクトモードで描画された場合、まったく同じダイレクトレンダリングモードを使用する必要があります。そうしないと、グラフの描画順序によっては、一部のグラフが表示されない場合があります。</target>
        </trans-unit>
        <trans-unit id="147b99496e5f22e049c77e219c2ba8265eabac66" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;classesbymodule&lt;/code&gt; argument, but used for listing the JavaScript types from the module specified with the second argument.</source>
          <target state="translated">&lt;code&gt;classesbymodule&lt;/code&gt; 引数に似ていますが、2番目の引数で指定されたモジュールのJavaScriptタイプをリストするために使用されます。</target>
        </trans-unit>
        <trans-unit id="8d7b15fdf36bd876d37df41ea84cad66fc0fa208" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;classesbymodule&lt;/code&gt; argument, but used for listing the QML types from the QML module specified with the second argument.</source>
          <target state="translated">&lt;code&gt;classesbymodule&lt;/code&gt; 引数に似ていますが、2番目の引数で指定されたQMLモジュールのQMLタイプをリストするために使用されます。</target>
        </trans-unit>
        <trans-unit id="3bfc9f745138d565f2a8e9fbb14f6473de4cdc68" translate="yes" xml:space="preserve">
          <source>Similar to CompositionMode_Difference, but with a lower contrast. Painting with white inverts the destination color, whereas painting with black leaves the destination color unchanged.</source>
          <target state="translated">CompositionMode_Difference と似ていますが、コントラストが低くなります。白で描画すると描画先の色が反転しますが、 黒で描画すると描画先の色はそのままになります。</target>
        </trans-unit>
        <trans-unit id="9f7c93661c980958651388bff6d26a4753ebcdfb" translate="yes" xml:space="preserve">
          <source>Similar to Decimal, but the exponent is a power of 2 instead.</source>
          <target state="translated">10進数に似ていますが、指数は2の累乗になります。</target>
        </trans-unit>
        <trans-unit id="d688e2c4bd9437b6087722eeaa7baaafd824547a" translate="yes" xml:space="preserve">
          <source>Similar to PartialUpdateBlit, but instead of using framebuffer blits, the contents of the extra framebuffer is rendered by drawing a textured quad with blending enabled. This, unlike PartialUpdateBlit, allows alpha blended content and works even when the glBlitFramebuffer is not available. Performance-wise this setting is likely to be somewhat slower than PartialUpdateBlit.</source>
          <target state="translated">PartialUpdateBlitと似ていますが、フレームバッファのブリットを使用する代わりに、余分なフレームバッファの内容は、ブレンディングを有効にしたテクスチャの四重項を描画することでレンダリングされます。これは、PartialUpdateBlit とは異なり、アルファブレンデッドコンテンツを可能にし、glBlitFramebuffer が利用できない場合でも動作します。パフォーマンス的には、この設定は PartialUpdateBlit よりも若干遅くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="b76f3d378c32b8ba67fa8d7bcafe76ab09dbe4e1" translate="yes" xml:space="preserve">
          <source>Similar to Repeat, but scales the image down to ensure that the last tile is not cropped.</source>
          <target state="translated">繰り返しと似ていますが、最後のタイルが切り取られないように画像を縮小します。</target>
        </trans-unit>
        <trans-unit id="f2aee5d9d2ddeca003945e1dacbe6ddf830214b0" translate="yes" xml:space="preserve">
          <source>Similar to items in Qt Quick, Popup's &lt;a href=&quot;qml-qtquick-controls2-popup#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-popup#y-prop&quot;&gt;y&lt;/a&gt; coordinates are relative to its parent. This means that opening a popup that is a child of a &lt;a href=&quot;qml-qtquick-controls2-button&quot;&gt;Button&lt;/a&gt;, for example, will cause the popup to be positioned relative to the button.</source>
          <target state="translated">Qt Quickのアイテムと同様に、Popupの&lt;a href=&quot;qml-qtquick-controls2-popup#x-prop&quot;&gt;x&lt;/a&gt;座標と&lt;a href=&quot;qml-qtquick-controls2-popup#y-prop&quot;&gt;y&lt;/a&gt;座標はその親を基準にしています。つまり、たとえば、&lt;a href=&quot;qml-qtquick-controls2-button&quot;&gt;Buttonの&lt;/a&gt;子であるポップアップを開くと、ポップアップはボタンに対して相対的に配置されます。</target>
        </trans-unit>
        <trans-unit id="b71bfcdd227312abf965868f5a1375302762a459" translate="yes" xml:space="preserve">
          <source>Similar to l{Texture Aliasing}, a material reflecting the environment will sub-sample the image. In some cases, as seen on the left in the image below, becomes obvious when fine details are being skipped.</source>
          <target state="translated">l{Texture Aliasing}と同様に、環境を反映したマテリアルが画像をサブサンプル化します。下の画像の左のように、細かい部分をスキップしている場合に顕著になることがあります。</target>
        </trans-unit>
        <trans-unit id="89a8116a5e8b4368f523c96b51089259b0b7442d" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;qwindows&lt;/code&gt; plugin, but replaces the raster paint engine with a Direct2D-based paint engine for &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; and &lt;a href=&quot;qbackingstore&quot;&gt;QBackingStore&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;qwindows&lt;/code&gt; プラグインに似ていますが、ラスターペイントエンジンをDirect2Dベースの&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;および&lt;a href=&quot;qbackingstore&quot;&gt;QBackingStoreの&lt;/a&gt;ペイントエンジンに置き換えます。</target>
        </trans-unit>
        <trans-unit id="cb86b8178dd82849f8590916f98fb163262e5d4b" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, any actual Vulkan instance creation happens only when calling &lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;(). This allows using QVulkanInstance as a plain member variable while retaining control over when to perform initialization.</source>
          <target state="translated">&lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;と同様に、実際のVulkanインスタンスの作成は、&lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;（）を呼び出したときにのみ発生します。これにより、初期化をいつ実行するかを制御しながら、QVulkanInstanceをプレーンメンバー変数として使用できます。</target>
        </trans-unit>
        <trans-unit id="daef0ed387547f317e25eff70088fbd05ef9df03" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qmodelindex#QModelIndexList-typedef&quot;&gt;QModelIndexList&lt;/a&gt;, &lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt; is exposed in QML as a JavaScript array of &lt;a href=&quot;qitemselectionrange&quot;&gt;QItemSelectionRange&lt;/a&gt; objects. Conversions are automatically made from and to C++. In fact, any JavaScript array can be converted back to &lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt;, with non-&lt;a href=&quot;qitemselectionrange&quot;&gt;QItemSelectionRange&lt;/a&gt; objects replaced by empty &lt;a href=&quot;qitemselectionrange&quot;&gt;QItemSelectionRange&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;qmodelindex#QModelIndexList-typedef&quot;&gt;QModelIndexList&lt;/a&gt;と同様に、&lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt;はQMLで&lt;a href=&quot;qitemselectionrange&quot;&gt;QItemSelectionRange&lt;/a&gt;オブジェクトのJavaScript配列として公開されます。変換は、C ++との間で自動的に行われます。実際、JavaScript配列は&lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt;に変換して戻すことができ、&lt;a href=&quot;qitemselectionrange&quot;&gt;QItemSelectionRange以外の&lt;/a&gt;オブジェクトは空の&lt;a href=&quot;qitemselectionrange&quot;&gt;QItemSelectionRangeに&lt;/a&gt;置き換えられます。</target>
        </trans-unit>
        <trans-unit id="5e464010c227e63892706f92bb5502275f73e3b6" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qmouseevent&quot;&gt;QMouseEvent&lt;/a&gt;, Qt automatically grabs each touch point on the first press inside a widget, and the widget will receive all updates for the touch point until it is released. Note that it is possible for a widget to receive events for numerous touch points, and that multiple widgets may be receiving touch events at the same time.</source>
          <target state="translated">&lt;a href=&quot;qmouseevent&quot;&gt;QMouseEvent&lt;/a&gt;と同様に、Qtはウィジェット内の最初のプレスで各タッチポイントを自動的に取得し、ウィジェットはリリースされるまでタッチポイントのすべての更新を受け取ります。ウィジェットが多数のタッチポイントのイベントを受信する可能性があること、および複数のウィジェットが同時にタッチイベントを受信して​​いる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e54e97a14c84bc525fec6fd0fe36dff934ec8df4" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, any actual Vulkan instance creation happens only when calling &lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;(). This allows using &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; as a plain member variable while retaining control over when to perform initialization.</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;と同様に、実際のVulkanインスタンスの作成は、&lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;（）を呼び出したときにのみ行われます。これにより、初期化を実行するタイミングを制御しながら、&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;をプレーンメンバー変数として使用できます。</target>
        </trans-unit>
        <trans-unit id="403bc33bb0f6645c5a5fea6340303ef93da4d33e" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, any actual Vulkan instance creation happens only when calling &lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;(). This allows using QVulkanInstance as a plain member variable while retaining control over when to perform initialization.</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;と同様に、実際のVulkanインスタンスの作成は、&lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;（）を呼び出したときにのみ発生します。これにより、初期化をいつ実行するかを制御しながら、QVulkanInstanceをプレーンメンバー変数として使用できます。</target>
        </trans-unit>
        <trans-unit id="a9a940ad1411bb603e45ff5c435008b1f75fc62d" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;, &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; supports the &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_ShareOpenGLContexts&lt;/a&gt; attribute. When enabled, the OpenGL contexts of all &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; instances will share with each other. This allows accessing each other's shareable OpenGL resources.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;と同様に、&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;は&lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt :: AA_ShareOpenGLContexts&lt;/a&gt;属性をサポートします。有効にすると、すべての&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;インスタンスのOpenGLコンテキストが互いに共有されます。これにより、お互いの共有可能なOpenGLリソースにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="5f33e815dcd244d5eb5544b0ae0141e9e5bc15ba" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;, QOpenGLWindow supports the &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_ShareOpenGLContexts&lt;/a&gt; attribute. When enabled, the OpenGL contexts of all QOpenGLWindow instances will share with each other. This allows accessing each other's shareable OpenGL resources.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;と同様に、QOpenGLWindowは&lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt :: AA_ShareOpenGLContexts&lt;/a&gt;属性をサポートします。有効にすると、すべてのQOpenGLWindowインスタンスのOpenGLコンテキストが相互に共有されます。これにより、互いの共有可能なOpenGLリソースにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="64027eb5a395729889261ca545938c1a1973257a" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;, device extensions can be queried via &lt;a href=&quot;qvulkanwindow#supportedDeviceExtensions&quot;&gt;supportedDeviceExtensions&lt;/a&gt;() before the actual initialization. Requesting an extension to be enabled is done via &lt;a href=&quot;qvulkanwindow#setDeviceExtensions&quot;&gt;setDeviceExtensions&lt;/a&gt;(). Such calls must be made before the window becomes visible, that is, before calling &lt;a href=&quot;qwindow#show&quot;&gt;show&lt;/a&gt;() or similar functions. Unsupported extension requests are gracefully ignored.</source>
          <target state="translated">&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;と同様に、デバイス拡張は、実際の初期化の前に&lt;a href=&quot;qvulkanwindow#supportedDeviceExtensions&quot;&gt;supportedDeviceExtensions&lt;/a&gt;（）を介して照会できます。拡張機能の有効化の要求は、&lt;a href=&quot;qvulkanwindow#setDeviceExtensions&quot;&gt;setDeviceExtensions&lt;/a&gt;（）を介して行われます。このような呼び出しは、ウィンドウが表示される前、つまり&lt;a href=&quot;qwindow#show&quot;&gt;show&lt;/a&gt;（）または同様の関数を呼び出す前に行う必要があります。サポートされていない拡張要求は正常に無視されます。</target>
        </trans-unit>
        <trans-unit id="96256c83fdb102c5e1e8a9b81f3dbefecd2bb5e4" translate="yes" xml:space="preserve">
          <source>Similarly to the &lt;a href=&quot;platform-integration#window-embedding&quot;&gt;window embedding&lt;/a&gt; use-case, there are situations where the native platform, or another toolkit, has created a native handle that you would like to pass on to Qt &amp;mdash; wrapping the existing handle instead of creating a new one.</source>
          <target state="translated">&lt;a href=&quot;platform-integration#window-embedding&quot;&gt;ウィンドウ埋め込みの&lt;/a&gt;ユースケースと同様に、ネイティブプラットフォームまたは別のツールキットが、Qtに渡したいネイティブハンドルを作成した場合があります。新しいハンドルを作成する代わりに、既存のハンドルをラップします。</target>
        </trans-unit>
        <trans-unit id="85f23c675cbde8a0c3030a5be537b4f9e641d306" translate="yes" xml:space="preserve">
          <source>Similarly you can create a mutable view of type &lt;a href=&quot;qassociativeiterable&quot;&gt;QAssociativeIterable&lt;/a&gt; on any container registered with &lt;a href=&quot;qmetatype#Q_DECLARE_ASSOCIATIVE_CONTAINER_METATYPE&quot;&gt;Q_DECLARE_ASSOCIATIVE_CONTAINER_METATYPE&lt;/a&gt;().</source>
          <target state="translated">同様に、&lt;a href=&quot;qmetatype#Q_DECLARE_ASSOCIATIVE_CONTAINER_METATYPE&quot;&gt;Q_DECLARE_ASSOCIATIVE_CONTAINER_METATYPE&lt;/a&gt;（）に登録されている任意のコンテナーに、タイプ&lt;a href=&quot;qassociativeiterable&quot;&gt;QAssociativeIterableの&lt;/a&gt;可変ビューを作成できます。</target>
        </trans-unit>
        <trans-unit id="023df70b0406ed89fb2bff7b0fca0b3b4ffd28ee" translate="yes" xml:space="preserve">
          <source>Similarly, a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing a sequential container will also return true for this function the</source>
          <target state="translated">同様に、順次コンテナを含む&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;も、この関数に対してtrueを返します。</target>
        </trans-unit>
        <trans-unit id="d9c77c369123aeb41698fc2fd343ea6542fe7aa3" translate="yes" xml:space="preserve">
          <source>Similarly, a cast from an associative container will also return true for this function the</source>
          <target state="translated">同様に、連想コンテナからのキャストは、この関数の</target>
        </trans-unit>
        <trans-unit id="baab7f467b66a244a84d3886f380b95d38805422" translate="yes" xml:space="preserve">
          <source>Similarly, a colon in JavaScript can be either an object property value assignment, or a code label. Thus, initializing a var property with an object declaration can also require parentheses:</source>
          <target state="translated">同様に、JavaScript のコロンは、オブジェクトプロパティの値の代入、またはコードラベルのいずれかになります。このように、オブジェクト宣言で var プロパティを初期化するには括弧が必要になることもあります。</target>
        </trans-unit>
        <trans-unit id="4ec87c1bbc3d215db132063ec051d18d8dafa183" translate="yes" xml:space="preserve">
          <source>Similarly, an invisible item cannot have focus, so if the item has focus when it becomes invisible, it will lose focus, and the focus is not regained by simply making the item visible again.</source>
          <target state="translated">同様に、見えないアイテムはフォーカスを持つことができないので、見えなくなった時にフォーカスを持っていたとしても、そのアイテムはフォーカスを失ってしまい、再び見えるようにしただけではフォーカスを取り戻すことはできません。</target>
        </trans-unit>
        <trans-unit id="7ab0699284ef0f779720852beda2fd3933f755c8" translate="yes" xml:space="preserve">
          <source>Similarly, elements which are invisible (for example, the second tab in a tab widget, while the first tab is shown) but need to be initialized at startup time (for example, if the cost of instantiating the second tab takes too long to be able to do it only when the tab is activated), should have their &quot;visible&quot; property set to &lt;code&gt;false&lt;/code&gt;, in order to avoid the cost of drawing them (although as previously explained, they will still incur the cost of any animations or bindings evaluation since they are still active).</source>
          <target state="translated">同様に、非表示の要素（たとえば、タブウィジェットの2番目のタブ、最初のタブが表示されている）は、起動時に初期化する必要があります（たとえば、2番目のタブのインスタンス化のコストがかかりすぎる場合タブがアクティブ化されている場合にのみ実行できます）、それらの描画のコストを回避するために、「可視」プロパティを &lt;code&gt;false&lt;/code&gt; に設定する必要があります（前述のように、アニメーションやバインディングの評価のコストは引き続き発生します）彼らはまだアクティブなので）。</target>
        </trans-unit>
        <trans-unit id="9707fcd78987c9f5bbd65379022999c405e2e83e" translate="yes" xml:space="preserve">
          <source>Similarly, if &lt;a href=&quot;qcborvalue#EncodingOption-enum&quot;&gt;UseFloat16&lt;/a&gt; is specified, this function will try to use half-precision (&lt;code&gt;qfloat16&lt;/code&gt;) floating point if the conversion to that results in no loss of precision. This is always true for infinities and NaN.</source>
          <target state="translated">同様に、&lt;a href=&quot;qcborvalue#EncodingOption-enum&quot;&gt;UseFloat16&lt;/a&gt;が指定されている場合、この関数は、変換によって精度が失われない場合、半精度（ &lt;code&gt;qfloat16&lt;/code&gt; ）浮動小数点を使用しようとします。これは常に無限大とNaNに当てはまります。</target>
        </trans-unit>
        <trans-unit id="925e2a92b6e27bd33fbd71efdcf4b3a3cee05e07" translate="yes" xml:space="preserve">
          <source>Similarly, if &lt;a href=&quot;qcborvalue#EncodingOption-enum&quot;&gt;UseFloat16&lt;/a&gt; is specified, this function will try to use half-precision (binary16) floating point if the conversion to that results in no loss of precision. This is always true for infinities and NaN.</source>
          <target state="translated">同様に、&lt;a href=&quot;qcborvalue#EncodingOption-enum&quot;&gt;UseFloat16&lt;/a&gt;が指定されている場合、この関数は、変換によって精度が失われない場合、半精度（binary16）浮動小数点を使用しようとします。これは常に無限大とNaNに当てはまります。</target>
        </trans-unit>
        <trans-unit id="5692cffd89e8f380fd4fb373f13ebf6018716a69" translate="yes" xml:space="preserve">
          <source>Similarly, if X11 is planned to be used as the (or one of the) windowing systems on the device, then ensure the xcb and X11 related features are marked as &lt;code&gt;yes&lt;/code&gt;.</source>
          <target state="translated">同様に、X11をデバイスのウィンドウシステム（またはその1つ）として使用する予定の場合は、xcbおよびX11関連の機能が &lt;code&gt;yes&lt;/code&gt; としてマークされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="a8036471f578274ed2be7f95ad96a9f887554f13" translate="yes" xml:space="preserve">
          <source>Similarly, if a C++ type uses a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; for a property type or method parameter, the value can be created as a JavaScript &lt;code&gt;Date&lt;/code&gt; object in QML, and is automatically converted to a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; value when it is passed to C++.</source>
          <target state="translated">同様に、C ++型がプロパティ型またはメソッドパラメーターに&lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt;を使用する場合、値はQMLのJavaScript &lt;code&gt;Date&lt;/code&gt; オブジェクトとして作成でき、C ++に渡されると自動的に&lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt;値に変換されます。</target>
        </trans-unit>
        <trans-unit id="e715f657c0b8f777bff996f538cfef9b5b87a2cb" translate="yes" xml:space="preserve">
          <source>Similarly, if a C++ type uses a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; or &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; type for a property type or method parameter, the value can be created as a JavaScript array or object in QML, and is automatically converted to a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; or &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; when it is passed to C++.</source>
          <target state="translated">同様に、C ++型がプロパティ型またはメソッドパラメーターに&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;または&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;型を使用する場合、値はQMLでJavaScript配列またはオブジェクトとして作成でき、C ++に渡されると自動的に&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;または&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;に変換されます。</target>
        </trans-unit>
        <trans-unit id="789dc253d9cbf3f5d250a41311780d33b8c385a6" translate="yes" xml:space="preserve">
          <source>Similarly, if the service provider supports reverse geocoding the subclass should provide an implementation &lt;a href=&quot;qgeocodingmanagerengine#reverseGeocode&quot;&gt;reverseGeocode&lt;/a&gt;() and call setSupportsReverseGeocoding(true) at some point in time before &lt;a href=&quot;qgeocodingmanagerengine#reverseGeocode&quot;&gt;reverseGeocode&lt;/a&gt;() is called.</source>
          <target state="translated">同様に、サービスプロバイダーがリバースジオコーディングをサポートしている場合、サブクラスは、&lt;a href=&quot;qgeocodingmanagerengine#reverseGeocode&quot;&gt;reverseGeocode&lt;/a&gt;（）が呼び出される前のある時点で、&lt;a href=&quot;qgeocodingmanagerengine#reverseGeocode&quot;&gt;reverseGeocode&lt;/a&gt;（）の実装を提供し、setSupportsReverseGeocoding（true）を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="c6ccf3e153607f257c0bb6ef8c4305053fc2b5e5" translate="yes" xml:space="preserve">
          <source>Similarly, if the valid range is between 46 and 53, then 41 and 59 will be evaluated as &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;, as otherwise the user wouldn't be able to change a value from 49 to 51.</source>
          <target state="translated">同様に、有効な範囲が46〜53の場合、41〜59は&lt;a href=&quot;qvalidator#State-enum&quot;&gt;中間&lt;/a&gt;として評価されます。そうでない場合、ユーザーは値を49から51に変更できません。</target>
        </trans-unit>
        <trans-unit id="db1deb2d9b3f59a2afcc8f76616ce863c908e86e" translate="yes" xml:space="preserve">
          <source>Similarly, if you must unload a set of resources explicitly (because a plugin is being unloaded or the resources are not valid any longer), you can force removal of your resources by calling &lt;a href=&quot;qdir#Q_CLEANUP_RESOURCE&quot;&gt;Q_CLEANUP_RESOURCE&lt;/a&gt;() with the same base name as above.</source>
          <target state="translated">同様に、一連のリソースを明示的にアンロードする必要がある場合（プラグインがアンロードされるか、リソースが無効になるため）、上記と同じベース名で&lt;a href=&quot;qdir#Q_CLEANUP_RESOURCE&quot;&gt;Q_CLEANUP_RESOURCE&lt;/a&gt;（）を呼び出して、リソースを強制的に削除できます。</target>
        </trans-unit>
        <trans-unit id="020f131cef53e9ee20f2bfc6da2e8ac01c55c77b" translate="yes" xml:space="preserve">
          <source>Similarly, if you want to pick a different data file based on target platform, your code might look something like this:</source>
          <target state="translated">同様に、ターゲットプラットフォームに応じて異なるデータファイルを選択したい場合、コードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="43386487d2383c8807d0a2f7a9c221578fd62021" translate="yes" xml:space="preserve">
          <source>Similarly, logging can be disabled at any time by calling the &lt;a href=&quot;qopengldebuglogger#stopLogging&quot;&gt;stopLogging&lt;/a&gt;() function.</source>
          <target state="translated">同様に、&lt;a href=&quot;qopengldebuglogger#stopLogging&quot;&gt;stopLogging&lt;/a&gt;（）関数を呼び出すことで、いつでもロギングを無効にできます。</target>
        </trans-unit>
        <trans-unit id="10b19a346a05f651da06e16abd3ebcdddaf5d2f9" translate="yes" xml:space="preserve">
          <source>Similarly, selectors with pseudo-states are more specific than ones that do not specify pseudo-states. Thus, the following style sheet specifies that a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; should have white text when the mouse is hovering over it, otherwise red text:</source>
          <target state="translated">同様に、疑似状態を持つセレクターは、疑似状態を指定しないセレクターよりも具体的です。したがって、次のスタイルシートは、マウスが&lt;a href=&quot;qpushbutton&quot;&gt;QPushButtonの上に置か&lt;/a&gt;れたときにQPushButtonが白いテキストを持ち、そうでなければ赤いテキストを持つべきであることを指定します：</target>
        </trans-unit>
        <trans-unit id="c0b14b05e400a26dec51fd388b83bef5e937a947" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtnetwork-blockingfortuneclient-example.html&quot;&gt;Blocking Fortune Client Example&lt;/a&gt; uses a separate thread for communicating with a TCP server asynchronously.</source>
          <target state="translated">同様に、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtnetwork-blockingfortuneclient-example.html&quot;&gt;Blocking Fortuneクライアントの例で&lt;/a&gt;は、TCPサーバーと非同期に通信するために別のスレッドを使用しています。</target>
        </trans-unit>
        <trans-unit id="78baea67aa9e84b61f3d5b0764158042a128d79b" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtnetwork-blockingfortuneclient-example.html&quot;&gt;Blocking Fortune Client Example&lt;/a&gt; uses a separate thread for communicating with a TCP server asynchronously.</source>
          <target state="translated">同様に、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtnetwork-blockingfortuneclient-example.html&quot;&gt;Blocking Fortune Clientの例で&lt;/a&gt;は、TCPサーバーと非同期で通信するために別のスレッドを使用しています。</target>
        </trans-unit>
        <trans-unit id="93fc088736060684edf95cf191a5276e378672b5" translate="yes" xml:space="preserve">
          <source>Similarly, the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtnetwork-blockingfortuneclient-example.html&quot;&gt;Blocking Fortune Client Example&lt;/a&gt; uses a separate thread for communicating with a TCP server asynchronously.</source>
          <target state="translated">同様に、&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtnetwork-blockingfortuneclient-example.html&quot;&gt;Blocking Fortune Clientの例で&lt;/a&gt;は、TCPサーバーと非同期で通信するために別のスレッドを使用しています。</target>
        </trans-unit>
        <trans-unit id="f072cdb03145af3c11284445d82f0e08c6eaff7c" translate="yes" xml:space="preserve">
          <source>Similarly, the EGLFS platform plugin has multiple backends. The default is chosen based on availability and a pre-defined priority order. If drm and gbm are available, the default will be the &lt;b&gt;eglfs_kms&lt;/b&gt; backend. This can always be overridden at runtime by setting the &lt;code&gt;QT_QPA_EGLFS_INTEGRATION&lt;/code&gt; environment variable.</source>
          <target state="translated">同様に、EGLFSプラットフォームプラグインには複数のバックエンドがあります。デフォルトは、可用性と事前定義された優先順位に基づいて選択されます。drmとgbmが利用可能な場合、デフォルトは&lt;b&gt;eglfs_kms&lt;/b&gt;バックエンドになります。これは、 &lt;code&gt;QT_QPA_EGLFS_INTEGRATION&lt;/code&gt; 環境変数を設定することにより、実行時にいつでもオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="1e82666514b0028697ada3c767b4a187bfff3e56" translate="yes" xml:space="preserve">
          <source>Similarly, the HSL saturation value is not in general the same as the HSV saturation value for the same color. &lt;a href=&quot;qcolor#hslSaturation&quot;&gt;hslSaturation&lt;/a&gt;() provides the color's HSL saturation value, while &lt;a href=&quot;qcolor#saturation&quot;&gt;saturation&lt;/a&gt;() and &lt;a href=&quot;qcolor#hsvSaturation&quot;&gt;hsvSaturation&lt;/a&gt;() provides the HSV saturation value.</source>
          <target state="translated">同様に、HSL彩度値は、一般に同じ色のHSV彩度値と同じではありません。&lt;a href=&quot;qcolor#hslSaturation&quot;&gt;hslSaturation&lt;/a&gt;（）は色のHSL飽和値を提供し、&lt;a href=&quot;qcolor#saturation&quot;&gt;saturation&lt;/a&gt;（）および&lt;a href=&quot;qcolor#hsvSaturation&quot;&gt;hsvSaturation&lt;/a&gt;（）はHSV飽和値を提供します。</target>
        </trans-unit>
        <trans-unit id="b4ba5350e2a93177460c5db40d4515a674d49def" translate="yes" xml:space="preserve">
          <source>Similarly, you can use a factory to make queries directly to the system proxy by calling its &lt;a href=&quot;qnetworkproxyfactory#systemProxyForQuery&quot;&gt;systemProxyForQuery&lt;/a&gt;() function.</source>
          <target state="translated">同様に、ファクトリを使用して、その&lt;a href=&quot;qnetworkproxyfactory#systemProxyForQuery&quot;&gt;systemProxyForQuery&lt;/a&gt;（）関数を呼び出すことにより、システムプロキシに直接クエリを実行できます。</target>
        </trans-unit>
        <trans-unit id="3cf39332f7f9ec55369ff0fa01d53a3046d79b14" translate="yes" xml:space="preserve">
          <source>Similarly, you must call &lt;a href=&quot;qstring#toLatin1&quot;&gt;toLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;(), or &lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt;() explicitly to convert the &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to an 8-bit string. (Other encodings are supported through the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; class.)</source>
          <target state="translated">同様に、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;を8ビット文字列に変換するには、&lt;a href=&quot;qstring#toLatin1&quot;&gt;toLatin1&lt;/a&gt;（）、&lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;（）、または&lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt;（）を明示的に呼び出す必要があります。（他のエンコーディングは&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;クラスを通じてサポートされます。）</target>
        </trans-unit>
        <trans-unit id="6aca6a7d2e4eaf38ea20b06cfaac289dc8c5a690" translate="yes" xml:space="preserve">
          <source>Similarly, you must call &lt;a href=&quot;qstring#toLatin1&quot;&gt;toLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;(), or &lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt;() explicitly to convert the QString to an 8-bit string.</source>
          <target state="translated">同様に、QStringを8ビット文字列に変換するには、&lt;a href=&quot;qstring#toLatin1&quot;&gt;toLatin1&lt;/a&gt;（）、&lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;（）、または&lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt;（）を明示的に呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="debfe05f47eb9d266ccbfa69028d81ca7e1a1d3e" translate="yes" xml:space="preserve">
          <source>Similarly, you must call &lt;a href=&quot;qstring#toLatin1&quot;&gt;toLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;(), or &lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt;() explicitly to convert the QString to an 8-bit string. (Other encodings are supported through the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; class.)</source>
          <target state="translated">同様に、QStringを8ビット文字列に変換するには、&lt;a href=&quot;qstring#toLatin1&quot;&gt;toLatin1&lt;/a&gt;（）、&lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;（）、または&lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;toLocal8Bit&lt;/a&gt;（）を明示的に呼び出す必要があります。（他のエンコーディングは&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;クラスを通じてサポートされています。）</target>
        </trans-unit>
        <trans-unit id="5c92707df0d245741324672c52ba7a1e6d853475" translate="yes" xml:space="preserve">
          <source>Similary, top level layouts are set on container widgets (&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;) or on pages of page-based container widgets (&lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, &lt;a href=&quot;qtoolbox&quot;&gt;QToolBox&lt;/a&gt; and &lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt;), respectively. The container widget needs to be selected for this to succeed.</source>
          <target state="translated">同様に、トップレベルのレイアウトは、コンテナーウィジェット（&lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;）またはページベースのコンテナーウィジェットのページ（&lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;、&lt;a href=&quot;qtoolbox&quot;&gt;QToolBox&lt;/a&gt;および&lt;a href=&quot;qstackedwidget&quot;&gt;QStackedWidget&lt;/a&gt;）にそれぞれ設定されます。これを成功させるには、コンテナウィジェットを選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="de72ea9e60d3b0389fb7873c1d21268b088fa6d4" translate="yes" xml:space="preserve">
          <source>Simple</source>
          <target state="translated">Simple</target>
        </trans-unit>
        <trans-unit id="17d813ab2f6811ad0fee7e6308ccc7e37a07948a" translate="yes" xml:space="preserve">
          <source>Simple API for XML (SAX) parser</source>
          <target state="translated">XML (SAX)パーサのためのシンプルな API</target>
        </trans-unit>
        <trans-unit id="4b89bbfe2c820c1a1f077f8f2e844a121f1f54fa" translate="yes" xml:space="preserve">
          <source>Simple Custom Material Example</source>
          <target state="translated">シンプルなカスタム素材例</target>
        </trans-unit>
        <trans-unit id="ff1f9d9b561e51876dde5e8e975541fd3f86cf21" translate="yes" xml:space="preserve">
          <source>Simple Example (ActiveQt)</source>
          <target state="translated">簡単な例(ActiveQt</target>
        </trans-unit>
        <trans-unit id="ff6e3b8d130816007102ec233dd6d5e5a5ec5fca" translate="yes" xml:space="preserve">
          <source>Simple Material</source>
          <target state="translated">シンプルな素材</target>
        </trans-unit>
        <trans-unit id="c0c35acf1653530a254a21e2ca4c9a465711029c" translate="yes" xml:space="preserve">
          <source>Simple Scene</source>
          <target state="translated">シンプルなシーン</target>
        </trans-unit>
        <trans-unit id="ebcaa801cfde00b6b29694471e849260082e83e6" translate="yes" xml:space="preserve">
          <source>Simple Shader Example</source>
          <target state="translated">シンプルなシェーダの例</target>
        </trans-unit>
        <trans-unit id="d902d645f7d80407bcfe0e2431dba5c6c6e9c4ad" translate="yes" xml:space="preserve">
          <source>Simple Tree Model</source>
          <target state="translated">シンプルなツリーモデル</target>
        </trans-unit>
        <trans-unit id="b3d80614fb02919df2130e0cf07973a7e14a3355" translate="yes" xml:space="preserve">
          <source>Simple Tree Model Example</source>
          <target state="translated">シンプルなツリーモデルの例</target>
        </trans-unit>
        <trans-unit id="76cebb81de516a78c5d266f49c1307f39371f3be" translate="yes" xml:space="preserve">
          <source>Simple control over torch functionality</source>
          <target state="translated">トーチ機能のシンプルな制御</target>
        </trans-unit>
        <trans-unit id="da67646c41dc16cd97c4622a296ccec4f3576627" translate="yes" xml:space="preserve">
          <source>Simple control over torch functionality. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">トーチ機能のシンプルな制御。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a5899725c7ead91bff4611858c1643429a96098" translate="yes" xml:space="preserve">
          <source>Simple convenience dialog to get a single value from the user</source>
          <target state="translated">ユーザーから単一の値を取得するためのシンプルな便利なダイアログ</target>
        </trans-unit>
        <trans-unit id="d81c399bc9fdaf915aa912b0487576314ba62e34" translate="yes" xml:space="preserve">
          <source>Simple keyframe animation implementation for &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qtransform&quot;&gt;QTransformの&lt;/a&gt;シンプルなキーフレームアニメーションの実装</target>
        </trans-unit>
        <trans-unit id="cc8cb2909a8eeb83c93ff6411e0090c09ef15676" translate="yes" xml:space="preserve">
          <source>Simple models can be created by subclassing this class and implementing the minimum number of required functions. For example, we could implement a simple read-only &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;-based model that provides a list of strings to a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; widget. In such a case, we only need to implement the &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() function to return the number of items in the list, and the &lt;a href=&quot;qabstractitemmodel#data&quot;&gt;data&lt;/a&gt;() function to retrieve items from the list.</source>
          <target state="translated">このクラスをサブクラス化し、必要な関数の最小数を実装することで、単純なモデルを作成できます。たとえば、&lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;ウィジェットに文字列のリストを提供する単純な読み取り専用&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;ベースのモデルを実装できます。このような場合、リスト内のアイテムの数を返すには&lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;（）関数を実装し、リストからアイテムを取得するには&lt;a href=&quot;qabstractitemmodel#data&quot;&gt;data&lt;/a&gt;（）関数を実装するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="404e9ce9fbd0b5c0821d22c489f49efaf5c87206" translate="yes" xml:space="preserve">
          <source>Simple radial gradients interpolate colors between a focal point and end points on a circle surrounding it. Extended radial gradients interpolate colors between a focal circle and a center circle. Points outside the cone defined by the two circles will be transparent. For simple radial gradients the focal point is adjusted to lie inside the center circle, whereas the focal point can have any position in an extended radial gradient.</source>
          <target state="translated">単純な放射状グラデーションは、焦点とそれを囲む円の終点の間で色を補間します。拡張ラジアルグラデーションは、焦点の円と中心の円の間で色を補間します。2 つの円で定義された円錐の外側の点は透明になります。単純なラジアルグラデーションでは中心点が中心円の内側に位置するように調整されていますが、 拡張ラジアルグラデーションでは中心点は任意の位置に置くことができます。</target>
        </trans-unit>
        <trans-unit id="3c871d43a1d01c8971057d32f5dbb5b09400e4e3" translate="yes" xml:space="preserve">
          <source>Simple spherical volume, defined by its center and radius</source>
          <target state="translated">中心と半径で定義される単純な球状の体積</target>
        </trans-unit>
        <trans-unit id="b17cb7aa48d55c0b31cefaff2b16dff39a86fd52" translate="yes" xml:space="preserve">
          <source>Simple text path item that you can add to a QGraphicsScene</source>
          <target state="translated">QGraphicsSceneに追加できるシンプルなテキストパス項目</target>
        </trans-unit>
        <trans-unit id="1f6b81d17074fc5cace73afa03f1e272396a9a85" translate="yes" xml:space="preserve">
          <source>Simple transformations, meaning translation and scaling, pluss 0, 90, 180, 270 degree rotations.</source>
          <target state="translated">単純な変換、翻訳と拡大縮小の意味、0,90,180,270度の回転。</target>
        </trans-unit>
        <trans-unit id="460e0cbdf7f85b57fb0b9092f75f48e34791ec3e" translate="yes" xml:space="preserve">
          <source>Simple type</source>
          <target state="translated">簡易型</target>
        </trans-unit>
        <trans-unit id="4397912d7de4830d83680a01007966be7718efd9" translate="yes" xml:space="preserve">
          <source>Simple types</source>
          <target state="translated">シンプルなタイプ</target>
        </trans-unit>
        <trans-unit id="1417fe6b2b04c3a98c0ae11656c4337900339371" translate="yes" xml:space="preserve">
          <source>Simple types should not be used until a specification for them has been published, since other implementations may not support them properly. Simple type values 24 to 31 are reserved and must not be used.</source>
          <target state="translated">単純型は、他の実装では適切にサポートされていない可能性があるため、その仕様が公開されるまでは使用してはいけません。単純型の値 24 から 31 は予約されており、使用してはいけません。</target>
        </trans-unit>
        <trans-unit id="ab9d81375b3e00ac7181da48db393f596f8b7216" translate="yes" xml:space="preserve">
          <source>Simpliar constraints apply for the</source>
          <target state="translated">に単純な制約が適用されます。</target>
        </trans-unit>
        <trans-unit id="e03f20a90b59b059ccb5f39b63fa73e127da8ce9" translate="yes" xml:space="preserve">
          <source>Simplified Chinese</source>
          <target state="translated">簡体字</target>
        </trans-unit>
        <trans-unit id="7bc10bcd79b7c757a0ea9b160172430b43bf6187" translate="yes" xml:space="preserve">
          <source>Simplified Chinese Layout</source>
          <target state="translated">簡体字中国語レイアウト</target>
        </trans-unit>
        <trans-unit id="70c87a9a8c62c9a638c96ee663fe27e446d3498c" translate="yes" xml:space="preserve">
          <source>Simplify &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt; or &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt;または&lt;a href=&quot;qformlayout&quot;&gt;QFormLayoutを&lt;/a&gt;簡略化する</target>
        </trans-unit>
        <trans-unit id="082e1db1cf3297d6daf9789dee2e4d52d8a96491" translate="yes" xml:space="preserve">
          <source>Simply call the &lt;a href=&quot;qimage#save&quot;&gt;save&lt;/a&gt;() function to save a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;qimage#save&quot;&gt;save&lt;/a&gt;（）関数を呼び出して&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;オブジェクトを保存するだけです。</target>
        </trans-unit>
        <trans-unit id="e5b3c46278f93f7559785e8a57b53096b2b13855" translate="yes" xml:space="preserve">
          <source>Simply call the &lt;a href=&quot;qimage#save&quot;&gt;save&lt;/a&gt;() function to save a QImage object.</source>
          <target state="translated">&lt;a href=&quot;qimage#save&quot;&gt;save&lt;/a&gt;（）関数を呼び出すだけで、QImageオブジェクトを保存できます。</target>
        </trans-unit>
        <trans-unit id="5513a5962ec289568c106e227095d2af5eda2fe6" translate="yes" xml:space="preserve">
          <source>Simply call the &lt;a href=&quot;qpixmap#save&quot;&gt;save&lt;/a&gt;() function to save a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;オブジェクトを保存するには、&lt;a href=&quot;qpixmap#save&quot;&gt;save&lt;/a&gt;（）関数を呼び出すだけです。</target>
        </trans-unit>
        <trans-unit id="6f380987fb326dfca15fbd5e7436128873dafa70" translate="yes" xml:space="preserve">
          <source>Simply call the &lt;a href=&quot;qpixmap#save&quot;&gt;save&lt;/a&gt;() function to save a QPixmap object.</source>
          <target state="translated">&lt;a href=&quot;qpixmap#save&quot;&gt;save&lt;/a&gt;（）関数を呼び出すだけで、QPixmapオブジェクトを保存できます。</target>
        </trans-unit>
        <trans-unit id="32d5d2b41a09aad37d0804e70f780bc6f3549a63" translate="yes" xml:space="preserve">
          <source>Simply put, applications need to form data and display the data. Qt Quick has the notion of</source>
          <target state="translated">簡単に言えば、アプリケーションはデータを形成して表示する必要があります。Qt Quickには</target>
        </trans-unit>
        <trans-unit id="80119875175c1dff359a89dd1e591c68977d79dd" translate="yes" xml:space="preserve">
          <source>Simply use the &lt;a href=&quot;qpen#setStyle&quot;&gt;setStyle&lt;/a&gt;() function to convert the pen style to either of the built-in styles, except the &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::CustomDashLine&lt;/a&gt; style which we will come back to shortly. Setting the style to &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::NoPen&lt;/a&gt; tells the painter to not draw lines or outlines. The default pen style is &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::SolidLine&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qpen#setStyle&quot;&gt;setStyle&lt;/a&gt;（）関数を使用して、ペンスタイルを組み込みスタイルのいずれかに変換するだけです。ただし、&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;後で&lt;/a&gt;戻るQt :: CustomDashLineスタイルは除きます。スタイルを&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: NoPenに&lt;/a&gt;設定すると、画家は線や輪郭を描画しません。デフォルトのペンスタイルは&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: SolidLine&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="bf6af58a72b840e10016c7a109629afeff578510" translate="yes" xml:space="preserve">
          <source>Simulates clicking a</source>
          <target state="translated">クリックのシミュレーション</target>
        </trans-unit>
        <trans-unit id="0a05226e7fa3d22de9fd89565ad4f95a75361ed8" translate="yes" xml:space="preserve">
          <source>Simulates clicking a mouse</source>
          <target state="translated">マウスのクリックをシミュレート</target>
        </trans-unit>
        <trans-unit id="593bbc2198f56cdbab9190a2acfd30026d124532" translate="yes" xml:space="preserve">
          <source>Simulates clicking of</source>
          <target state="translated">のクリックをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="db61f56157291936c593182e4926675f1e9c8a8c" translate="yes" xml:space="preserve">
          <source>Simulates double clicking a mouse</source>
          <target state="translated">マウスのダブルクリックをシミュレート</target>
        </trans-unit>
        <trans-unit id="9c307551d9276ec61296e8424c78648aeba2d4a8" translate="yes" xml:space="preserve">
          <source>Simulates double-clicking a mouse</source>
          <target state="translated">マウスのダブルクリックをシミュレート</target>
        </trans-unit>
        <trans-unit id="615f606b47186677bd6f85aa1b652490d7df9067" translate="yes" xml:space="preserve">
          <source>Simulates dragging the mouse on an</source>
          <target state="translated">オブジェクト上でのマウスのドラッグをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="a93132f0ee74850906a92c3e3d37181f96e2f6eb" translate="yes" xml:space="preserve">
          <source>Simulates pressing a</source>
          <target state="translated">を押すことをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="7347635a463e2666ba347dea941f2952d856998c" translate="yes" xml:space="preserve">
          <source>Simulates pressing a mouse</source>
          <target state="translated">マウスを押すことをシミュレート</target>
        </trans-unit>
        <trans-unit id="33fba9462a39f32694cf282ff7b8c5949c94929b" translate="yes" xml:space="preserve">
          <source>Simulates reading a &lt;code&gt;std::nullptr_t&lt;/code&gt; from the stream into</source>
          <target state="translated">ストリームからの &lt;code&gt;std::nullptr_t&lt;/code&gt; 読み込みをシミュレートします</target>
        </trans-unit>
        <trans-unit id="74677ed423286ea75cb3e0045eb413904f324f5e" translate="yes" xml:space="preserve">
          <source>Simulates releasing a</source>
          <target state="translated">リリースのシミュレーション</target>
        </trans-unit>
        <trans-unit id="ee46972068f9e75f4658f30c9636553df7e9b0ee" translate="yes" xml:space="preserve">
          <source>Simulates releasing a mouse</source>
          <target state="translated">マウスのリリースをシミュレート</target>
        </trans-unit>
        <trans-unit id="297719b5c058e5a726629d2e2a97d9efcb53cd67" translate="yes" xml:space="preserve">
          <source>Simulates rotating the mouse wheel on an</source>
          <target state="translated">マウスホイールの回転をシミュレートします。</target>
        </trans-unit>
        <trans-unit id="e8e664754e81296e77393a5248221ca4bd421464" translate="yes" xml:space="preserve">
          <source>Simulates that the user did not move the finger identified by</source>
          <target state="translated">で識別された指を動かさなかったことをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="74654f367bad1df4dbcad2807d742564c932e156" translate="yes" xml:space="preserve">
          <source>Simulates that the user lifted the finger identified by</source>
          <target state="translated">で識別された指を持ち上げたことをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="83995c6a872694294a2c44e449384b1cf96456f3" translate="yes" xml:space="preserve">
          <source>Simulates that the user moved the finger identified by</source>
          <target state="translated">で識別された指を動かしたことをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="c49daee7b9cff1b83dea469e35894091733b03de" translate="yes" xml:space="preserve">
          <source>Simulates that the user pressed the touch screen or pad with the finger identified by</source>
          <target state="translated">で識別された指でタッチスクリーンまたはパッドを押したことをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="84d3fa62ed290ae9612ca7471f7f1b9703768b53" translate="yes" xml:space="preserve">
          <source>Simulates the events from the list one by one on the widget</source>
          <target state="translated">ウィジェット上のリストから1つずつイベントをシミュレートする</target>
        </trans-unit>
        <trans-unit id="6e9c6b40b25e7a0447b6f00257f7fd8e1eb3a48a" translate="yes" xml:space="preserve">
          <source>Simulates the full sequence of events generated by double-clicking a mouse</source>
          <target state="translated">マウスをダブルクリックしたときに発生する一連のイベントを完全にシミュレートします。</target>
        </trans-unit>
        <trans-unit id="de44eb82cbf2ca4f4295f00eb7f9edd9aad27ae4" translate="yes" xml:space="preserve">
          <source>Simulates typing of</source>
          <target state="translated">のタイピングをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="482bf379a87145dae2841ed78ac0ea5b30d64617" translate="yes" xml:space="preserve">
          <source>Simulates writing a &lt;code&gt;std::nullptr_t&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;std::nullptr_t&lt;/code&gt; 書き込みをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="4b5ed12c0783f56d2b622a6170d87f63d2991af9" translate="yes" xml:space="preserve">
          <source>Simulating Keyboard and Mouse Events</source>
          <target state="translated">キーボードとマウスのイベントをシミュレートする</target>
        </trans-unit>
        <trans-unit id="c51fb9d95b8ee92d7d6325671671140445c81584" translate="yes" xml:space="preserve">
          <source>Simultaneously in two directions.</source>
          <target state="translated">2つの方向に同時に。</target>
        </trans-unit>
        <trans-unit id="22a4ed66c623d273a571652cc9ae1a89577a837f" translate="yes" xml:space="preserve">
          <source>Since</source>
          <target state="translated">Since</target>
        </trans-unit>
        <trans-unit id="da81fe86e0e45464ea83b285e4671b2f02121e1b" translate="yes" xml:space="preserve">
          <source>Since 4.3, setting a stylesheet on a &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; automatically sets the &lt;a href=&quot;qframe#frameStyle&quot;&gt;QFrame::frameStyle&lt;/a&gt; property to &lt;a href=&quot;qframe#Shape-enum&quot;&gt;QFrame::StyledPanel&lt;/a&gt;.</source>
          <target state="translated">4.3以降、&lt;a href=&quot;qlabel&quot;&gt;QLabelで&lt;/a&gt;スタイルシートを設定すると、&lt;a href=&quot;qframe#frameStyle&quot;&gt;QFrame :: frameStyle&lt;/a&gt;プロパティが&lt;a href=&quot;qframe#Shape-enum&quot;&gt;QFrame :: StyledPanelに&lt;/a&gt;自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="217f3edeaf4f81dc9e2edb48c386e572fb90d3e0" translate="yes" xml:space="preserve">
          <source>Since 4.7, the returned region only contains rectangles intersecting (or included in) the viewport.</source>
          <target state="translated">4.7以降、返される領域にはビューポートと交差する(またはビューポートに含まれる)矩形のみが含まれるようになりました。</target>
        </trans-unit>
        <trans-unit id="95649b7c08eccea07bf5a5c3c804e94da3b16650" translate="yes" xml:space="preserve">
          <source>Since 5.0. The boundary finder is at the end of a grapheme, a word, a sentence, or a line.</source>
          <target state="translated">5.0からです。境界検出器は、グラフィーム、単語、文、行の最後にあります。</target>
        </trans-unit>
        <trans-unit id="1c2ad0e28a62743156d44b939464c1c204677d8a" translate="yes" xml:space="preserve">
          <source>Since 5.0. The boundary finder is at the end of line (can occur for a Line boundary type only).</source>
          <target state="translated">5.0からは 境界検出器が線の端にある(線の境界タイプのみに発生する可能性があります)。</target>
        </trans-unit>
        <trans-unit id="4457c427b995e17ac5b42a0ba9fc15ace212765b" translate="yes" xml:space="preserve">
          <source>Since 5.0. The boundary finder is at the start of a grapheme, a word, a sentence, or a line.</source>
          <target state="translated">5.0からです。境界検出器は、グラフィーム、単語、文、行の先頭にあります。</target>
        </trans-unit>
        <trans-unit id="a7c73a53fca4ed02019a4360d8de9951c5b4e627" translate="yes" xml:space="preserve">
          <source>Since 5.14, all invalid datetimes are equal to one another and differ from all other datetimes.</source>
          <target state="translated">5.14以降、すべての無効な日時は互いに等しく、他のすべての日時とは異なる。</target>
        </trans-unit>
        <trans-unit id="f2c1ea3fdc5d5276d7ed1803c065c24b377be268" translate="yes" xml:space="preserve">
          <source>Since 5.15, ListView can be configured to recycle items instead of instantiating from the &lt;a href=&quot;qml-qtquick-listview#delegate-prop&quot;&gt;delegate&lt;/a&gt; whenever new rows are flicked into view. This approach improves performance, depending on the complexity of the delegate. Reusing items is off by default (for backwards compatibility reasons), but can be switched on by setting the &lt;a href=&quot;qml-qtquick-listview#reuseItems-prop&quot;&gt;reuseItems&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">5.15以降、ListViewは、新しい行がビューにフリックされるたびに&lt;a href=&quot;qml-qtquick-listview#delegate-prop&quot;&gt;デリゲート&lt;/a&gt;からインスタンス化する代わりに、アイテムをリサイクルするように構成できます。このアプローチは、デリゲートの複雑さに応じて、パフォーマンスを向上させます。アイテムの再利用はデフォルトでオフになっていますが（下位互換性の理由から）、&lt;a href=&quot;qml-qtquick-listview#reuseItems-prop&quot;&gt;reuseItems&lt;/a&gt;プロパティを &lt;code&gt;true&lt;/code&gt; に設定することでオンに切り替えることができます。</target>
        </trans-unit>
        <trans-unit id="48b9fa972fabf757a7e72d979e00bc7305b6a1e3" translate="yes" xml:space="preserve">
          <source>Since 5.15, the &lt;a href=&quot;stylesheet-reference#icon-prop&quot;&gt;icon&lt;/a&gt; property can be set to override the button icon.</source>
          <target state="translated">5.15以降、&lt;a href=&quot;stylesheet-reference#icon-prop&quot;&gt;アイコン&lt;/a&gt;プロパティを設定してボタンアイコンを上書きできます。</target>
        </trans-unit>
        <trans-unit id="bce71cfdb8e545b176086289381ef711f815a3c7" translate="yes" xml:space="preserve">
          <source>Since 6.0</source>
          <target state="translated">6.0以降</target>
        </trans-unit>
        <trans-unit id="4d33f0ae16e72dc335351882add53c320b7df625" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; resembles &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and has similar API, it is easier to port a widget from &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; to &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;, instead of &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;.</source>
          <target state="translated">以来&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;似ている&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;と同様のAPIを持って、それはからウィジェットポートに簡単です&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;に&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;の代わりに、&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5dd39dbf36ef11f6e0a94dd1fd40f2008e30ac1a" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt; 5.12, plugins can additionally restrict this value depending on the current zoom level.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt; 5.12 以降、プラグインは現在のズームレベルに応じてこの値をさらに制限できます。</target>
        </trans-unit>
        <trans-unit id="35cae441b3e0c96795bb9495c8147139e85163a5" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.3 (Qt 5.10), it is also possible to create sub-menus and declare Action objects inside Menu:</source>
          <target state="translated">以来&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 2.3（Qtの5.10）、サブメニューを作成し、アクションが内側メニューのオブジェクトを宣言することも可能です。</target>
        </trans-unit>
        <trans-unit id="8513967906707a5837dbdcdedb379e713bae14d0" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.3, a</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 2.3 以降、</target>
        </trans-unit>
        <trans-unit id="a2eef00498d4f7e95687aac01f8f719dc87bfab8" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt; 5.12, plugins can additionally restrict this value depending on the current zoom level.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt; 5.12以降、プラグインは現在のズームレベルに応じてこの値をさらに制限できます。</target>
        </trans-unit>
        <trans-unit id="b86f15c460ae2664393df99dbf6e82985334a341" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.3 (Qt 5.10), it is also possible to create sub-menus and declare Action objects inside Menu:</source>
          <target state="translated">以来&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 2.3（Qtの5.10）、サブメニューを作成し、アクションが内側メニューのオブジェクトを宣言することも可能です。</target>
        </trans-unit>
        <trans-unit id="a7aea96ffb6b3853aa4e79ce134aa501faa46238" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.3, a</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 2.3以降、</target>
        </trans-unit>
        <trans-unit id="6263d87a106fd7bfef94c152f5a9679a1c438800" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.3 (Qt 5.10), it is also possible to create sub-menus and declare Action objects inside Menu:</source>
          <target state="translated">以来&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 2.3（Qtの5.10）、サブメニューを作成し、アクションが内側メニューのオブジェクトを宣言することも可能です。</target>
        </trans-unit>
        <trans-unit id="1bacdbef161f63246f72e245cfbf8ed7a0c12cce" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Controls 2.3, a</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; .Controls 2.3以降、</target>
        </trans-unit>
        <trans-unit id="962d49537c64aea1953441f465fa70a3bba9a019" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt; and its subclasses are derived from &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, much of the same advice about subclassing normal models also applies to proxy models. In addition, it is worth noting that many of the default implementations of functions in this class are written so that they call the equivalent functions in the relevant source model. This simple proxying mechanism may need to be overridden for source models with more complex behavior; for example, if the source model provides a custom &lt;a href=&quot;qsortfilterproxymodel#hasChildren&quot;&gt;hasChildren&lt;/a&gt;() implementation, you should also provide one in the proxy model.</source>
          <target state="translated">以来&lt;a href=&quot;qabstractproxymodel&quot;&gt;QAbstractProxyModel&lt;/a&gt;とそのサブクラスが由来している&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;、通常のモデルをサブクラス化についても同じアドバイスの多くはまた、プロキシモデルに適用されます。さらに、このクラスの関数のデフォルト実装の多くは、関連するソースモデルの同等の関数を呼び出すように記述されていることに注意してください。この単純なプロキシメカニズムは、より複雑な動作のソースモデルではオーバーライドする必要がある場合があります。たとえば、ソースモデルがカスタムの&lt;a href=&quot;qsortfilterproxymodel#hasChildren&quot;&gt;hasChildren&lt;/a&gt;（）実装を提供する場合、プロキシモデルにも実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="cab6e25ef4fc231fb781823dc29b7ba4bfec77c9" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; inherits from &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;, you can combine groups, and easily construct complex animation graphs. You can query &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; for the group it belongs to (using the &lt;a href=&quot;qabstractanimation#group&quot;&gt;group()&lt;/a&gt; function).</source>
          <target state="translated">以来&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroupは&lt;/a&gt;から継承&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;、あなたはグループを組み合わせて、簡単に複雑なアニメーショングラフを構築することができます。（&lt;a href=&quot;qabstractanimation#group&quot;&gt;group（）&lt;/a&gt;関数を使用して）所属するグループの&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;をクエリできます。</target>
        </trans-unit>
        <trans-unit id="74b773bc9a02303b59aae4f928a65145e315cb2c" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is not a &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; subclass, internally a &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt; is created to wrap the byte array.</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;は&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;サブクラスではないため、バイト配列をラップするために内部的に&lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;が作成されます。</target>
        </trans-unit>
        <trans-unit id="177757e16f0350f161eccc890aa57775be7d78d3" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; inherits &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;, all of its functions are fully documented in the &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; documentation.</source>
          <target state="translated">以来&lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;継承&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;、その機能のすべてが完全に文書化されて&lt;a href=&quot;qstyle&quot;&gt;QStyleの&lt;/a&gt;マニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="914501865b2b9bfc30793027a7dbf98da3d8e386" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt; inherits from &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;, the dial behaves in a similar way to a &lt;a href=&quot;qslider&quot;&gt;slider&lt;/a&gt;. When &lt;a href=&quot;qdial#wrapping-prop&quot;&gt;wrapping&lt;/a&gt;() is false (the default setting) there is no real difference between a slider and a dial. They both share the same signals, slots and member functions. Which one you use depends on the expectations of your users and on the type of application.</source>
          <target state="translated">以来&lt;a href=&quot;qdial&quot;&gt;QDialの&lt;/a&gt;から継承&lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;、ダイヤルと同様に振る舞う&lt;a href=&quot;qslider&quot;&gt;スライダー&lt;/a&gt;。ときに&lt;a href=&quot;qdial#wrapping-prop&quot;&gt;ラッピングが&lt;/a&gt;（）はfalse（デフォルト設定）で、スライダー、ダイヤルの間には実質的な違いはありません。どちらも同じシグナル、スロット、メンバー関数を共有しています。どちらを使用するかは、ユーザーの期待とアプリケーションのタイプによって異なります。</target>
        </trans-unit>
        <trans-unit id="09c2a9c202f8d2f3b35d3498f779fefd02468587" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;restorePurchases&lt;/a&gt;() may, on some platforms, cause the user to be prompted for their password, it should usually be called as a reaction to user input. For instance applications can have a button in the UI which will trigger &lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;restorePurchases&lt;/a&gt;() and which users can hit manually if they have reinstalled the application (or installed it on a new device) and need to unlock the features that they have previously paid for.</source>
          <target state="translated">以来&lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;restorePurchases&lt;/a&gt;（）、いくつかのプラットフォームでは、ユーザーが自分のパスワードの入力を求めされる可能性があり、それは通常、ユーザーの入力に対する反応と呼ばれるべきです。たとえば、アプリケーションにはUIにボタンがあり、&lt;a href=&quot;qinappstore#restorePurchases&quot;&gt;restorePurchases&lt;/a&gt;（）をトリガーし、ユーザーがアプリケーションを再インストール（または新しいデバイスにインストール）して、以前に支払った機能のロックを解除する必要がある場合に手動でヒットできます。</target>
        </trans-unit>
        <trans-unit id="d3c6d74cedf3a9de3fcdf7db7cac06e3a7ca232b" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qjsonarray&quot;&gt;QJsonArray&lt;/a&gt; is implicitly shared, the copy is shallow as long as the object doesn't get modified.</source>
          <target state="translated">以来&lt;a href=&quot;qjsonarray&quot;&gt;QJsonArrayが&lt;/a&gt;暗黙のうちに共有され、コピーは浅いがいる限り、オブジェクトが変更されませんようです。</target>
        </trans-unit>
        <trans-unit id="cef75e48833c4d91bbb068830a2e6a42a053f2db" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qjsonobject&quot;&gt;QJsonObject&lt;/a&gt; is implicitly shared, the copy is shallow as long as the object does not get modified.</source>
          <target state="translated">以来&lt;a href=&quot;qjsonobject&quot;&gt;QJsonObjectが&lt;/a&gt;暗黙のうちに共有され、コピーは浅いがいる限り、オブジェクトが変更されませんようです。</target>
        </trans-unit>
        <trans-unit id="dc7dbebed07281ea5265fceae9b1079cab6a4185" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt; is a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;, you can use several of the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; functions for things like:</source>
          <target state="translated">以来&lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayerが&lt;/a&gt;ある&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;、あなたはいくつか使用することができます&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObjectの&lt;/a&gt;ようなもののための機能を：</target>
        </trans-unit>
        <trans-unit id="ff8d4ebe1efa285ac97979dbb3e4b9c6173a0982" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qml-multimedia#soundeffect&quot;&gt;SoundEffect&lt;/a&gt; requires slightly more resources to achieve lower latency playback, the platform may limit the number of simultaneously playing sound effects.</source>
          <target state="translated">以来&lt;a href=&quot;qml-multimedia#soundeffect&quot;&gt;とSoundEffectは、&lt;/a&gt;低遅延の再生を達成するために、わずかに多くのリソースを必要とし、プラットフォームが同時に効果音を再生する回数を制限することがあります。</target>
        </trans-unit>
        <trans-unit id="de690dd029fdd70f00e3184cd264c6f020d9b282" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qnetworkproxyfactory&quot;&gt;QNetworkProxyFactory&lt;/a&gt; is an abstract class, you cannot create objects of type &lt;a href=&quot;qnetworkproxyfactory&quot;&gt;QNetworkProxyFactory&lt;/a&gt; directly.</source>
          <target state="translated">以来&lt;a href=&quot;qnetworkproxyfactory&quot;&gt;QNetworkProxyFactoryは&lt;/a&gt;抽象クラスであり、あなたは型のオブジェクトを作成することはできません&lt;a href=&quot;qnetworkproxyfactory&quot;&gt;QNetworkProxyFactoryを&lt;/a&gt;直接。</target>
        </trans-unit>
        <trans-unit id="0cf9a1725a84d97b62d3d25f300e414f85553e35" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; can print to any &lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt; subclass, it is possible to extend printing support to cover new types of printing subsystem by subclassing &lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt; and reimplementing its interface.</source>
          <target state="translated">以来&lt;a href=&quot;qprinter&quot;&gt;QPrinterは&lt;/a&gt;いずれにも印刷することができ&lt;a href=&quot;qprintengine&quot;&gt;QPrintEngineの&lt;/a&gt;サブクラスは、サブクラス化することで、印刷サブシステムの新しいタイプをカバーするために、印刷のサポートを拡張することが可能である&lt;a href=&quot;qprintengine&quot;&gt;QPrintEngineを&lt;/a&gt;し、そのインタフェースを実装し直します。</target>
        </trans-unit>
        <trans-unit id="d236cac3dd231552c8ad2718da61a564c14f24b5" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qsoundeffect&quot;&gt;QSoundEffect&lt;/a&gt; requires slightly more resources to achieve lower latency playback, the platform may limit the number of simultaneously playing sound effects.</source>
          <target state="translated">以来&lt;a href=&quot;qsoundeffect&quot;&gt;QSoundEffectは、&lt;/a&gt;低遅延の再生を達成するために、わずかに多くのリソースを必要とし、プラットフォームが同時に効果音を再生する回数を制限することがあります。</target>
        </trans-unit>
        <trans-unit id="b4638bc9e5b7005a720659b38b7731903f24ec89" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; uses the Unicode encoding internally, every language in the world can be processed transparently using familiar text processing operations. Also, since all Qt functions that present text to the user take a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; as a parameter, there is no &lt;code&gt;char *&lt;/code&gt; to &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; conversion overhead.</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;は内部的にUnicodeエンコーディングを使用しているため、世界中のあらゆる言語を、使い慣れたテキスト処理操作を使用して透過的に処理できます。また、テキストをユーザーに提示するすべてのQt関数は&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;をパラメーターとして取るので、 &lt;code&gt;char *&lt;/code&gt; から&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;への変換オーバーヘッドはありません。</target>
        </trans-unit>
        <trans-unit id="a3692bda918ce6725b188c8ba884ec30fd6d6506" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qsvgwidget&quot;&gt;QSvgWidget&lt;/a&gt; is a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, SVG drawings are rendered using the properties of the display. More control can be exercised over the rendering process with the &lt;a href=&quot;qsvgrenderer&quot;&gt;QSvgRenderer&lt;/a&gt; class, as this can be used to paint onto other paint devices, such as &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and QGLWidget. The renderer used by the widget can be obtained with the &lt;a href=&quot;qsvgwidget#renderer&quot;&gt;renderer&lt;/a&gt;() function.</source>
          <target state="translated">&lt;a href=&quot;qsvgwidget&quot;&gt;QSvgWidget&lt;/a&gt;は&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;サブクラスであるため、SVG図面はディスプレイのプロパティを使用してレンダリングされます。これは、&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;やQGLWidget などの他のペイントデバイスにペイントするために使用できるため、&lt;a href=&quot;qsvgrenderer&quot;&gt;QSvgRenderer&lt;/a&gt;クラスを使用してレンダリングプロセスをより詳細に制御できます。ウィジェットが使用するレンダラーは、&lt;a href=&quot;qsvgwidget#renderer&quot;&gt;renderer&lt;/a&gt;（）関数で取得できます。</target>
        </trans-unit>
        <trans-unit id="17943a9ca9b6e9263c6af27f6143e0b3dfa55e77" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; inherits &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, you can use it with &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; and &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;. When reading from a &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, you must make sure that enough data is available by calling &lt;a href=&quot;qabstractsocket#bytesAvailable&quot;&gt;QTcpSocket::bytesAvailable&lt;/a&gt;() beforehand.</source>
          <target state="translated">以来&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;継承&lt;a href=&quot;qiodevice&quot;&gt;のQIODevice&lt;/a&gt;、あなたがそれを使用することができ&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;と&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;。&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;から読み取る場合、事前に&lt;a href=&quot;qabstractsocket#bytesAvailable&quot;&gt;QTcpSocket :: bytesAvailable&lt;/a&gt;（）を呼び出して、十分なデータが利用可能であることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="2803e7c66457a8bc3db9044328c10e449e556e7a" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qtextlist&quot;&gt;QTextList&lt;/a&gt; is a subclass of &lt;a href=&quot;qtextblockgroup&quot;&gt;QTextBlockGroup&lt;/a&gt;, it does not group the list items as child elements, but instead provides various functions for managing them. This means that any text block we find when traversing a document may actually be a list item. We can ensure that list items are correctly identified by using the following code:</source>
          <target state="translated">以来&lt;a href=&quot;qtextlist&quot;&gt;QTextListは&lt;/a&gt;のサブクラスである&lt;a href=&quot;qtextblockgroup&quot;&gt;QTextBlockGroupが&lt;/a&gt;、それは、子要素として、グループではなく、リストの項目を行いますが、その代わりに、それらを管理するためのさまざまな機能を提供します。つまり、ドキュメントをトラバースするときに見つけたテキストブロックは、実際にはリストアイテムである可能性があります。次のコードを使用して、リストアイテムが正しく識別されるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="a409322aa0e5d8f6f307a63fb05c7c26be07ddbd" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; is a subclass of &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;, subclasses can be used to display custom content that is composed using a series of painting operations with an instance of the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; class. This approach contrasts with the canvas-style approach used by the &lt;a href=&quot;graphicsview#&quot;&gt;Graphics View Framework&lt;/a&gt; where items are added to a scene by the application and are rendered by the framework itself.</source>
          <target state="translated">以来&lt;a href=&quot;qwidget&quot;&gt;QWidgetのは&lt;/a&gt;のサブクラスである&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;、サブクラスは、インスタンスと操作ペイントの一連用いて構成されているカスタムコンテンツを表示するために使用することができる&lt;a href=&quot;qpainter&quot;&gt;QPainterのの&lt;/a&gt;クラス。このアプローチは、アイテムがアプリケーションによってシーンに追加され、フレームワーク自体によってレンダリングされる&lt;a href=&quot;graphicsview#&quot;&gt;グラフィックスビューフレームワーク&lt;/a&gt;で使用されるキャンバススタイルのアプローチとは対照的です。</target>
        </trans-unit>
        <trans-unit id="54adc62fa581fa60c58334047923a0b5e282c796" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;ISomeCOMInterface&lt;/code&gt; is a subclass of &lt;code&gt;IUnknown&lt;/code&gt; you will have to implement the &lt;code&gt;QueryInterface()&lt;/code&gt;, &lt;code&gt;AddRef()&lt;/code&gt;, and &lt;code&gt;Release()&lt;/code&gt; functions. Use the QAXAGG_IUNKNOWN macro in your class definition to do that. If you implement the &lt;code&gt;IUnknown&lt;/code&gt; functions manually, delegate the calls to the interface pointer returned by the &lt;a href=&quot;qaxaggregated#controllingUnknown&quot;&gt;QAxAggregated::controllingUnknown&lt;/a&gt;() function, e.g.</source>
          <target state="translated">&lt;code&gt;ISomeCOMInterface&lt;/code&gt; は &lt;code&gt;IUnknown&lt;/code&gt; のサブクラスなので、 &lt;code&gt;QueryInterface()&lt;/code&gt; 、 &lt;code&gt;AddRef()&lt;/code&gt; 、および &lt;code&gt;Release()&lt;/code&gt; 関数を実装する必要があります。これを行うには、クラス定義でQAXAGG_IUNKNOWNマクロを使用します。 &lt;code&gt;IUnknown&lt;/code&gt; 関数を手動で実装する場合は、&lt;a href=&quot;qaxaggregated#controllingUnknown&quot;&gt;QAxAggregated :: controllingUnknown&lt;/a&gt;（）関数から返されたインターフェイスポインターへの呼び出しを委任します。たとえば、</target>
        </trans-unit>
        <trans-unit id="9bf7faf94f589e7e3309b36bc4b5f7e6829f3019" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;MyStruct&lt;/code&gt; is now known to &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;, it can be used in &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QVariant&lt;/a&gt;:</source>
          <target state="translated">以来 &lt;code&gt;MyStruct&lt;/code&gt; 今まで知られている&lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;、それはで使用することができ&lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QVariant&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="f75e538fd04638cae1b75543973711153f6d4577" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;MyStruct&lt;/code&gt; is now known to &lt;a href=&quot;qtcore-changes-qt6#qmetatype&quot;&gt;QMetaType&lt;/a&gt;, it can be used in &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;:</source>
          <target state="translated">以来 &lt;code&gt;MyStruct&lt;/code&gt; 今まで知られている&lt;a href=&quot;qtcore-changes-qt6#qmetatype&quot;&gt;QMetaType&lt;/a&gt;、それはで使用することができ&lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="a402751997b9fd0581a7a803a3ff72294606f3a0" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;QtQuick 2.0&lt;/code&gt;, Loader can also load non-visual components.</source>
          <target state="translated">&lt;code&gt;QtQuick 2.0&lt;/code&gt; 以降、ローダーは非ビジュアルコンポーネントもロードできます。</target>
        </trans-unit>
        <trans-unit id="90a454c4b1475b79ed83b24e21773eaf252045c9" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;QtQuick 2.0&lt;/code&gt;, Loader can load any object type.</source>
          <target state="translated">&lt;code&gt;QtQuick 2.0&lt;/code&gt; 以降、ローダーは任意のオブジェクトタイプをロードできます。</target>
        </trans-unit>
        <trans-unit id="4cc5c3caa0fe3d1e18d64b1726dbe0171e216cc4" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;QtQuick 2.0&lt;/code&gt;, Loader is able to load any type of object; it is not restricted to Item types.</source>
          <target state="translated">&lt;code&gt;QtQuick 2.0&lt;/code&gt; 以降、ローダーはあらゆるタイプのオブジェクトをロードできます。アイテムタイプに限定されません。</target>
        </trans-unit>
        <trans-unit id="17fa318c70692d7d0197c1017ccadc86e713e339" translate="yes" xml:space="preserve">
          <source>Since Action presents a user interface action, it is intended to be assigned to a &lt;a href=&quot;qml-qtquick-controls2-menuitem&quot;&gt;MenuItem&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-toolbutton&quot;&gt;ToolButton&lt;/a&gt;, or any other control that inherits &lt;a href=&quot;qml-qtquick-controls2-abstractbutton&quot;&gt;AbstractButton&lt;/a&gt;. For keyboard shortcuts, the simpler &lt;a href=&quot;qml-qtquick-shortcut&quot;&gt;Shortcut&lt;/a&gt; type is more appropriate.</source>
          <target state="translated">Actionはユーザーインターフェイスアクションを提供するため、&lt;a href=&quot;qml-qtquick-controls2-menuitem&quot;&gt;MenuItem&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-controls2-toolbutton&quot;&gt;ToolButton&lt;/a&gt;、または&lt;a href=&quot;qml-qtquick-controls2-abstractbutton&quot;&gt;AbstractButton&lt;/a&gt;を継承するその他のコントロールに割り当てることを目的としています。キーボードショートカットの場合は、シンプルな&lt;a href=&quot;qml-qtquick-shortcut&quot;&gt;ショートカット&lt;/a&gt;タイプの方が適しています。</target>
        </trans-unit>
        <trans-unit id="e3c13bb6480ea5c4cb0be601ca3a6411761810b2" translate="yes" xml:space="preserve">
          <source>Since QAnimationGroup inherits from &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;, you can combine groups, and easily construct complex animation graphs. You can query &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; for the group it belongs to (using the &lt;a href=&quot;qabstractanimation#group&quot;&gt;group()&lt;/a&gt; function).</source>
          <target state="translated">QAnimationGroupはQAbstractAnimationを継承している&lt;a href=&quot;qabstractanimation&quot;&gt;ため&lt;/a&gt;、グループを組み合わせて、複雑なアニメーショングラフを簡単に作成できます。&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;に、それが属するグループを照会できます（&lt;a href=&quot;qabstractanimation#group&quot;&gt;group（）&lt;/a&gt;関数を使用）。</target>
        </trans-unit>
        <trans-unit id="a2512dfe153d17d063da8ba00b84548fb09843bf" translate="yes" xml:space="preserve">
          <source>Since QAudioBuffers can share the actual sample data, calling this function will result in a deep copy being made if there are any other buffers using the sample. You should avoid calling this unless you really need to modify the data.</source>
          <target state="translated">QAudioBuffers は実際のサンプルデータを共有することができるので、この関数を呼び出すと、サンプルを使用している他のバッファがある場合には、深いコピーが行われます。本当にデータを変更する必要がない限り、この関数の呼び出しは避けた方が良いでしょう。</target>
        </trans-unit>
        <trans-unit id="53b9a9663d3e2af1b5a0db80ddd1a732029c82d5" translate="yes" xml:space="preserve">
          <source>Since QCommonStyle inherits &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;, all of its functions are fully documented in the &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; documentation.</source>
          <target state="translated">QCommonStyleはQStyleを継承する&lt;a href=&quot;qstyle&quot;&gt;ため&lt;/a&gt;、そのすべての関数は&lt;a href=&quot;qstyle&quot;&gt;QStyleの&lt;/a&gt;ドキュメントに完全に記載されています。</target>
        </trans-unit>
        <trans-unit id="b8b6a37b801b2fe7095d51c3ee372013e80f3da0" translate="yes" xml:space="preserve">
          <source>Since QDial inherits from &lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;, the dial behaves in a similar way to a &lt;a href=&quot;qslider&quot;&gt;slider&lt;/a&gt;. When &lt;a href=&quot;qdial#wrapping-prop&quot;&gt;wrapping&lt;/a&gt;() is false (the default setting) there is no real difference between a slider and a dial. They both share the same signals, slots and member functions. Which one you use depends on the expectations of your users and on the type of application.</source>
          <target state="translated">QDialの継承ので&lt;a href=&quot;qabstractslider&quot;&gt;QAbstractSlider&lt;/a&gt;、ダイヤルと同様に振る舞う&lt;a href=&quot;qslider&quot;&gt;スライダー&lt;/a&gt;。ときに&lt;a href=&quot;qdial#wrapping-prop&quot;&gt;ラッピングが&lt;/a&gt;（）はfalse（デフォルト設定）で、スライダー、ダイヤルの間には実質的な違いはありません。これらは両方とも同じ信号、スロット、およびメンバー関数を共有します。どちらを使用するかは、ユーザーの期待とアプリケーションの種類によって異なります。</target>
        </trans-unit>
        <trans-unit id="a160aaa0a928b758d7f7041cff6f44bd009c75c3" translate="yes" xml:space="preserve">
          <source>Since QDoc 6.0, values can be expanded also from other configuration variables. In addition to the &lt;code&gt;$variable&lt;/code&gt; syntax, also &lt;code&gt;${variable}&lt;/code&gt; is valid. The latter eliminates the need to separate the variable name with whitespace or non-variable characters. For example:</source>
          <target state="translated">QDoc 6.0以降、値は他の構成変数からも展開できます。 &lt;code&gt;$variable&lt;/code&gt; 構文に加えて、$ &lt;code&gt;${variable}&lt;/code&gt; も有効です。後者を使用すると、変数名を空白文字または非変数文字で区切る必要がなくなります。例えば：</target>
        </trans-unit>
        <trans-unit id="e6c2cae854cdebaeafeb5223f370e2b0d9b54cd4" translate="yes" xml:space="preserve">
          <source>Since QDoc version 5.12, \code command accepts also optional parameters. Parameters are useful for injecting simple strings into the code snippet. To inject a string to a specific location in the snippet, add a backslash followed by a digit (1..8). The digits correspond with the order of the argument list, where arguments are separated by spaces.</source>
          <target state="translated">QDoc 5.12以降、オプションのパラメータも使用できるようになりました。パラメータは、コードスニペットに単純な文字列を挿入するのに便利です。文字列をスニペットの特定の場所に挿入するには、バックスラッシュの後に数字(1〜8)を追加します。数字は引数リストの順番に対応しており、引数はスペースで区切られています。</target>
        </trans-unit>
        <trans-unit id="f21717ede3636f33083a2c4e2abe77dcd591f12b" translate="yes" xml:space="preserve">
          <source>Since QGraphicsWidget resembles &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and has similar API, it is easier to port a widget from &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; to QGraphicsWidget, instead of &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;.</source>
          <target state="translated">QGraphicsWidgetは&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;に似ており、同様のAPIを備えているため、QGraphicsItemではなく&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;からQGraphicsWidgetにウィジェットを移植する方が簡単&lt;a href=&quot;qgraphicsitem&quot;&gt;です&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8ec3f8d9643b13776d220abecb79ec5c49c5d227" translate="yes" xml:space="preserve">
          <source>Since QGraphicsWidget resembles &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; and has similar API, it is easier to port a widget from &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; to QGraphicsWidget, instead of &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;.</source>
          <target state="translated">QGraphicsWidgetは&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;に似ており、同様のAPIを備えているため、QGraphicsItemではなく&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;からQGraphicsWidgetにウィジェットを移植する方が簡単&lt;a href=&quot;qgraphicsitem&quot;&gt;です&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="baf0dd17e1792ba40815cf54ca2cbe43a4695b42" translate="yes" xml:space="preserve">
          <source>Since QJsonArray is implicitly shared, the copy is shallow as long as the object doesn't get modified.</source>
          <target state="translated">QJsonArrayは暗黙のうちに共有されているので、オブジェクトが変更されない限りコピーは浅いです。</target>
        </trans-unit>
        <trans-unit id="974fc5578e778692ed852642ac266b6ca144cf0c" translate="yes" xml:space="preserve">
          <source>Since QJsonObject is implicitly shared, the copy is shallow as long as the object does not get modified.</source>
          <target state="translated">QJsonObjectは暗黙のうちに共有されているので、オブジェクトが変更されない限りコピーは浅いです。</target>
        </trans-unit>
        <trans-unit id="9654e5352fb531f6fc441b5b6f15ef90a5aa6336" translate="yes" xml:space="preserve">
          <source>Since QMediaPlayer is a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;, you can use several of the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; functions for things like:</source>
          <target state="translated">QMediaPlayerはQMediaObjectである&lt;a href=&quot;qmediaobject&quot;&gt;ため&lt;/a&gt;、次のような目的で&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt;関数のいくつかを使用できます。</target>
        </trans-unit>
        <trans-unit id="38add622b9e675dc32506a9d3d323975387fad8b" translate="yes" xml:space="preserve">
          <source>Since QNetworkProxyFactory is an abstract class, you cannot create objects of type QNetworkProxyFactory directly.</source>
          <target state="translated">QNetworkProxyFactoryは抽象クラスなので、QNetworkProxyFactory型のオブジェクトを直接作成することはできません。</target>
        </trans-unit>
        <trans-unit id="8be88e3f0650fa68b353999eedcfacd7c055f9ca" translate="yes" xml:space="preserve">
          <source>Since QPrinter can print to any &lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt; subclass, it is possible to extend printing support to cover new types of printing subsystem by subclassing &lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt; and reimplementing its interface.</source>
          <target state="translated">QPrinterはいずれにも印刷できるので&lt;a href=&quot;qprintengine&quot;&gt;QPrintEngineの&lt;/a&gt;サブクラスは、サブクラス化することで、印刷サブシステムの新しいタイプをカバーするために、印刷のサポートを拡張することが可能である&lt;a href=&quot;qprintengine&quot;&gt;QPrintEngineを&lt;/a&gt;し、そのインタフェースを実装し直します。</target>
        </trans-unit>
        <trans-unit id="a120c81a4615e0d2930675c654282ad99459378a" translate="yes" xml:space="preserve">
          <source>Since QSoundEffect requires slightly more resources to achieve lower latency playback, the platform may limit the number of simultaneously playing sound effects.</source>
          <target state="translated">QSoundEffectは、より低いレイテンシーでの再生を実現するためにわずかに多くのリソースを必要とするため、プラットフォームは同時に再生する効果音の数を制限することができます。</target>
        </trans-unit>
        <trans-unit id="47ef6a19475151329d625290edb189a06ef64ece" translate="yes" xml:space="preserve">
          <source>Since QSvgWidget is a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, SVG drawings are rendered using the properties of the display. More control can be exercised over the rendering process with the &lt;a href=&quot;qsvgrenderer&quot;&gt;QSvgRenderer&lt;/a&gt; class, as this can be used to paint onto other paint devices, such as &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; and QGLWidget. The renderer used by the widget can be obtained with the &lt;a href=&quot;qsvgwidget#renderer&quot;&gt;renderer&lt;/a&gt;() function.</source>
          <target state="translated">QSvgWidgetは&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;サブクラスであるため、SVG図面はディスプレイのプロパティを使用してレンダリングされます。&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;やQGLWidgetなどの他のペイントデバイスにペイントするために使用できるため、&lt;a href=&quot;qsvgrenderer&quot;&gt;QSvgRenderer&lt;/a&gt;クラスを使用してレンダリングプロセスをより細かく制御できます。ウィジェットが使用するレンダラーは、&lt;a href=&quot;qsvgwidget#renderer&quot;&gt;レンダラー&lt;/a&gt;（）関数で取得できます。</target>
        </trans-unit>
        <trans-unit id="21f597a280dafd372c78108009fd86bf2c53ec70" translate="yes" xml:space="preserve">
          <source>Since QWidget is a subclass of &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;, subclasses can be used to display custom content that is composed using a series of painting operations with an instance of the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; class. This approach contrasts with the canvas-style approach used by the &lt;a href=&quot;graphicsview&quot;&gt;Graphics View Framework&lt;/a&gt; where items are added to a scene by the application and are rendered by the framework itself.</source>
          <target state="translated">QWidgetのはのサブクラスであるため&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;、サブクラスは、インスタンスと操作ペイントの一連用いて構成されているカスタムコンテンツを表示するために使用することができる&lt;a href=&quot;qpainter&quot;&gt;QPainterのの&lt;/a&gt;クラス。このアプローチは、アイテムがアプリケーションによってシーンに追加され、フレームワーク自体によってレンダリングされる、&lt;a href=&quot;graphicsview&quot;&gt;グラフィックスビューフレームワーク&lt;/a&gt;で使用されるキャンバススタイルのアプローチとは対照的です。</target>
        </trans-unit>
        <trans-unit id="f8bd8dabd1107755ba544050b461393763e6858c" translate="yes" xml:space="preserve">
          <source>Since Qt 4.0, &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; automatically double-buffers its painting, so there is no need to write double-buffering code in &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() to avoid flicker.</source>
          <target state="translated">Qt 4.0以降、&lt;a href=&quot;qwidget&quot;&gt;QWidgetは&lt;/a&gt;自動的にペイントをダブルバッファリングするため、ちらつきを防ぐために&lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）でダブルバッファリングコードを記述する必要はありません。</target>
        </trans-unit>
        <trans-unit id="71144c67bbb240d18a3e170603c4c71648c50063" translate="yes" xml:space="preserve">
          <source>Since Qt 4.0, &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; automatically double-buffers its painting, so there is no need to write double-buffering code in paintEvent() to avoid flicker.</source>
          <target state="translated">Qt 4.0以降、&lt;a href=&quot;qwidget&quot;&gt;QWidgetは&lt;/a&gt;自動的にペイントをダブルバッファリングするため、ちらつきを防ぐためにpaintEvent（）でダブルバッファリングコードを記述する必要はありません。</target>
        </trans-unit>
        <trans-unit id="f31371a2c55f284c317add9ba485790611f6c385" translate="yes" xml:space="preserve">
          <source>Since Qt 4.0, &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; automatically double-buffers its painting, so there is no need to write double-buffering code in paintEvent() to avoid flicker.</source>
          <target state="translated">Qt 4.0以降、&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidgetは&lt;/a&gt;自動的にペイントをダブルバッファリングするため、ちらつきを避けるためにpaintEvent（）にダブルバッファリングコードを記述する必要はありません。</target>
        </trans-unit>
        <trans-unit id="85853527c5fcd257ddccc8dcf17d984176fd4b7c" translate="yes" xml:space="preserve">
          <source>Since Qt 4.0, QWidget automatically double-buffers its painting, so there is no need to write double-buffering code in &lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() to avoid flicker.</source>
          <target state="translated">Qt 4.0以降、QWidgetは自動的にペイントをダブルバッファリングするため、ちらつきを避けるために&lt;a href=&quot;qwidget#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）にダブルバッファリングコードを記述する必要はありません。</target>
        </trans-unit>
        <trans-unit id="e907c6665b2a2c061804216a3f352c58fe007381" translate="yes" xml:space="preserve">
          <source>Since Qt 4.1 it is also possible to specify a custom dash pattern using the &lt;a href=&quot;qpen#setDashPattern&quot;&gt;setDashPattern&lt;/a&gt;() function which implicitly converts the style of the pen to &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::CustomDashLine&lt;/a&gt;. The pattern argument, a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;, must be specified as an even number of &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; entries where the entries 1, 3, 5... are the dashes and 2, 4, 6... are the spaces. For example, the custom pattern shown above is created using the following code:</source>
          <target state="translated">Qt 4.1以降、ペンのスタイルを暗黙的に&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: CustomDashLineに&lt;/a&gt;変換する&lt;a href=&quot;qpen#setDashPattern&quot;&gt;setDashPattern&lt;/a&gt;（）関数を使用して、カスタムダッシュパターンを指定することもできます。パターン引数&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;は、偶数の&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;エントリとして指定する必要があります。ここで、エントリ1、3、5 ...はダッシュ、2、4、6 ...はスペースです。たとえば、上記のカスタムパターンは、次のコードを使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="ae1d33bd6423258f340f905b8e731d4449f06dab" translate="yes" xml:space="preserve">
          <source>Since Qt 4.1 it is also possible to specify a custom dash pattern using the &lt;a href=&quot;qpen#setDashPattern&quot;&gt;setDashPattern&lt;/a&gt;() function which implicitly converts the style of the pen to &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::CustomDashLine&lt;/a&gt;. The pattern argument, a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, must be specified as an even number of &lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt; entries where the entries 1, 3, 5... are the dashes and 2, 4, 6... are the spaces. For example, the custom pattern shown above is created using the following code:</source>
          <target state="translated">Qt 4.1以降では、ペンのスタイルを暗黙的に&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: CustomDashLineに&lt;/a&gt;変換する&lt;a href=&quot;qpen#setDashPattern&quot;&gt;setDashPattern&lt;/a&gt;（）関数を使用してカスタムダッシュパターンを指定することもできます。パターン引数&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;は、偶数の&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;エントリーとして指定する必要があります。ここで、エントリー1、3、5 ...はダッシュで、2、4、6 ...はスペースです。たとえば、上記のカスタムパターンは次のコードを使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="18ec97f6eb152ba18aafa0b101bcab0aa3f67b69" translate="yes" xml:space="preserve">
          <source>Since Qt 4.1 it is also possible to specify a custom dash pattern using the &lt;a href=&quot;qpen#setDashPattern&quot;&gt;setDashPattern&lt;/a&gt;() function which implicitly converts the style of the pen to &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::CustomDashLine&lt;/a&gt;. The pattern argument, a &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, must be specified as an even number of &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt; entries where the entries 1, 3, 5... are the dashes and 2, 4, 6... are the spaces. For example, the custom pattern shown above is created using the following code:</source>
          <target state="translated">Qt 4.1以降、ペンのスタイルを暗黙的に&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: CustomDashLineに&lt;/a&gt;変換する&lt;a href=&quot;qpen#setDashPattern&quot;&gt;setDashPattern&lt;/a&gt;（）関数を使用して、カスタムダッシュパターンを指定することもできます。パターン引数&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;は、偶数の&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;エントリとして指定する必要があります。ここで、エントリ1、3、5 ...はダッシュ、2、4、6 ...はスペースです。たとえば、上記のカスタムパターンは、次のコードを使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="eb02909cc07964521340848fd24317d570f55e6d" translate="yes" xml:space="preserve">
          <source>Since Qt 4.1, the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_ContentsPropagated&lt;/a&gt; widget attribute has been deprecated. Instead, the contents of parent widgets are propagated by default to each of their children as long as &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_PaintOnScreen&lt;/a&gt; is not set. Custom widgets can be written to take advantage of this feature by updating irregular regions (to create non-rectangular child widgets), or painting with colors that have less than full alpha component. The following diagram shows how attributes and properties of a custom widget can be fine-tuned to achieve different effects.</source>
          <target state="translated">Qt 4.1以降、&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_ContentsPropagated&lt;/a&gt;ウィジェット属性は廃止されました。代わりに、&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_PaintOnScreen&lt;/a&gt;が設定されていない限り、親ウィジェットのコンテンツはデフォルトでそれぞれの子に伝達されます。カスタムウィジェットは、不規則な領域を更新する（非長方形の子ウィジェットを作成する）か、完全なアルファコンポーネントよりも少ない色でペイントすることにより、この機能を利用するように作成できます。次の図は、カスタムウィジェットの属性とプロパティを微調整してさまざまな効果を得る方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4ce3e46ca350abdeb5d2b8751747be7d53b21215" translate="yes" xml:space="preserve">
          <source>Since Qt 4.1, the contents of parent widgets are also propagated to standard Qt widgets. This can lead to some unexpected results if the parent widget is decorated in a non-standard way, as shown in the diagram below.</source>
          <target state="translated">Qt 4.1 以降、親ウィジェットの内容は標準の Qt ウィジェットにも伝搬されます。このため、下の図のように親ウィジェットが非標準的な方法で装飾されていると、予期せぬ結果になることがあります。</target>
        </trans-unit>
        <trans-unit id="fc2eea07c74e79b24ce0272b03717c84c5064a5e" translate="yes" xml:space="preserve">
          <source>Since Qt 4.1, the contents of parent widgets are propagated by default to each of their children as long as &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_PaintOnScreen&lt;/a&gt; is not set. Custom widgets can be written to take advantage of this feature by updating irregular regions (to create non-rectangular child widgets), or painting with colors that have less than full alpha component. The following diagram shows how attributes and properties of a custom widget can be fine-tuned to achieve different effects.</source>
          <target state="translated">Qt 4.1以降、&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_PaintOnScreen&lt;/a&gt;が設定されていない限り、親ウィジェットのコンテンツはデフォルトで各子に伝播されます。カスタムウィジェットは、不規則な領域を更新する（非長方形の子ウィジェットを作成する）か、完全なアルファコンポーネントに満たない色でペイントすることにより、この機能を利用するように作成できます。次の図は、カスタムウィジェットの属性とプロパティを微調整して、さまざまな効果を実現する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="61a240ad4c7af7ad9c116961903343d38d20d87a" translate="yes" xml:space="preserve">
          <source>Since Qt 4.2, it is possible to edit stylesheets in</source>
          <target state="translated">Qt 4.2からは、スタイルシートを</target>
        </trans-unit>
        <trans-unit id="411967677226b8620a179da400058cf4a4df9fe6" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4,</source>
          <target state="translated">Qt 4.4から。</target>
        </trans-unit>
        <trans-unit id="6013e011428b662ee7b6398f33357518bbe5ea3b" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4, double-clicking on the object's name allows you to change the object's name with the in-place editor.</source>
          <target state="translated">Qt 4.4からは、オブジェクトの名前をダブルクリックすると、インプレイスエディタでオブジェクトの名前を変更できるようになりました。</target>
        </trans-unit>
        <trans-unit id="737af6c08ce4c7db4793bbb995417ee3eaccf400" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4, it is possible to preview forms with various skins - default skins, skins created with Qt Style Sheets or device skins. This feature simulates the effect of calling &lt;code&gt;QApplication::setStyleSheet()&lt;/code&gt; in the application.</source>
          <target state="translated">Qt 4.4以降、さまざまなスキン（デフォルトスキン、Qtスタイルシートで作成されたスキン、またはデバイススキン）を使用してフォームをプレビューすることができます。この機能は、アプリケーションで &lt;code&gt;QApplication::setStyleSheet()&lt;/code&gt; を呼び出す効果をシミュレートします。</target>
        </trans-unit>
        <trans-unit id="2451314023637700c57fda017717fced87f96a25" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4, it is possible to view code generated by the User Interface Compiler (uic) for the</source>
          <target state="translated">Qt 4.4 以降では、ユーザーインターフェイスコンパイラ(uic)によって生成された</target>
        </trans-unit>
        <trans-unit id="82280e3d98d9af2f533bd80ba932117032f4fa50" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4, there are two delegate classes: &lt;a href=&quot;qitemdelegate&quot;&gt;QItemDelegate&lt;/a&gt; and &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;. However, the default delegate is &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;. These two classes are independent alternatives to painting and providing editors for items in views. The difference between them is that &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; uses the current style to paint its items. We therefore recommend using &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; as the base class when implementing custom delegates or when working with Qt style sheets. The code required for either class should be equal unless the custom delegate needs to use the style for drawing.</source>
          <target state="translated">Qt 4.4以降、2つのデリゲートクラスがあります：&lt;a href=&quot;qitemdelegate&quot;&gt;QItemDelegate&lt;/a&gt;と&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;です。ただし、デフォルトのデリゲートは&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;です。これらの2つのクラスは、ビューの項目のペイントおよびエディターの提供の独立した代替手段です。それらの違いは、&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;が現在のスタイルを使用してアイテムを描画することです。したがって、カスタムデリゲートを実装するとき、またはQtスタイルシートを操作するときは、&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;を基本クラスとして使用することをお勧めします。カスタムデリゲートが描画にスタイルを使用する必要がない限り、どちらのクラスに必要なコードも同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="5f91857b339ee10738b6f8761889dbaf75ed7c02" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4, there are two delegate classes: &lt;a href=&quot;qitemdelegate&quot;&gt;QItemDelegate&lt;/a&gt; and QStyledItemDelegate. However, the default delegate is QStyledItemDelegate. These two classes are independent alternatives to painting and providing editors for items in views. The difference between them is that QStyledItemDelegate uses the current style to paint its items. We therefore recommend using QStyledItemDelegate as the base class when implementing custom delegates or when working with Qt style sheets. The code required for either class should be equal unless the custom delegate needs to use the style for drawing.</source>
          <target state="translated">Qt 4.4以降、&lt;a href=&quot;qitemdelegate&quot;&gt;QItemDelegate&lt;/a&gt;とQStyledItemDelegateの2つのデリゲートクラスがあります。ただし、デフォルトのデリゲートはQStyledItemDelegateです。これらの2つのクラスは、ビュー内のアイテムのペイントとエディターの提供に代わる独立した方法です。それらの違いは、QStyledItemDelegateが現在のスタイルを使用してアイテムをペイントすることです。したがって、カスタムデリゲートを実装する場合、またはQtスタイルシートを操作する場合は、基本クラスとしてQStyledItemDelegateを使用することをお勧めします。カスタムデリゲートが描画にスタイルを使用する必要がない限り、どちらのクラスにも必要なコードは同じである必要があります。</target>
        </trans-unit>
        <trans-unit id="8f1bfb80320d7535033e991e67ff2f93b2021f5a" translate="yes" xml:space="preserve">
          <source>Since Qt 4.4, there are two delegate classes: QItemDelegate and &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;. However, the default delegate is &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;. These two classes are independent alternatives to painting and providing editors for items in views. The difference between them is that &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; uses the current style to paint its items. We therefore recommend using &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; as the base class when implementing custom delegates or when working with Qt style sheets. The code required for either class should be equal unless the custom delegate needs to use the style for drawing.</source>
          <target state="translated">Qt 4.4以降、QItemDelegateと&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegateの&lt;/a&gt;2つのデリゲートクラスがあります。ただし、デフォルトのデリゲートは&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;です。これらの2つのクラスは、ビュー内のアイテムのペイントとエディターの提供に代わる独立した方法です。それらの違いは、&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;が現在のスタイルを使用してアイテムをペイントすることです。したがって、カスタムデリゲートを実装する場合、またはQtスタイルシートを操作する場合は、基本クラスとして&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt;を使用することをお勧めします。カスタムデリゲートが描画にスタイルを使用する必要がない限り、どちらのクラスにも必要なコードは同じである必要があります。</target>
        </trans-unit>
        <trans-unit id="a046152fda7cf2df40d40a860409a3470783c632" translate="yes" xml:space="preserve">
          <source>Since Qt 4.5, Qt style sheets fully supports &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="translated">Qt 4.5以降、Qtスタイルシートは&lt;a href=&quot;internationalization#macos&quot;&gt;macOSを&lt;/a&gt;完全にサポートしています。</target>
        </trans-unit>
        <trans-unit id="a048103d6fe05e222f9dd48bd0af0c6855c3523d" translate="yes" xml:space="preserve">
          <source>Since Qt 4.5, Qt style sheets fully supports macOS.</source>
          <target state="translated">Qt 4.5以降、QtスタイルシートはmacOSに完全対応しました。</target>
        </trans-unit>
        <trans-unit id="ef7e7c43c9bd5027472ab5716692601a392a3719" translate="yes" xml:space="preserve">
          <source>Since Qt 4.5, it has been possible to create windows with translucent regions on window systems that support compositing.</source>
          <target state="translated">Qt 4.5 以降、合成をサポートするウィンドウシステム上で半透明の領域を持つウィンドウを作成できるようになりました。</target>
        </trans-unit>
        <trans-unit id="2fa789cdb9de6eb74c93ff52742a3d36022b3be8" translate="yes" xml:space="preserve">
          <source>Since Qt 4.5, the &lt;b&gt;Object Inspector&lt;/b&gt; displays the layout state of the containers. The broken layout icon ###ICON is displayed if there is something wrong with the layouts.</source>
          <target state="translated">Qt 4.5以降、&lt;b&gt;オブジェクトインスペクター&lt;/b&gt;はコンテナーのレイアウト状態を表示します。レイアウトに問題がある場合、壊れたレイアウトアイコン### ICONが表示されます。</target>
        </trans-unit>
        <trans-unit id="e80182ef2183dcdf982642fce62c0d0aefcc461e" translate="yes" xml:space="preserve">
          <source>Since Qt 4.6, restore the old painting algorithm that calls QGraphicsView::drawItems() and QGraphicsScene::drawItems(). To be used only for compatibility with old code.</source>
          <target state="translated">Qt 4.6 以降、QGraphicsView::drawItems()と QGraphicsScene::drawItems()を呼び出す古いペイントアルゴリズムを復元。古いコードとの互換性のためだけに使用します。</target>
        </trans-unit>
        <trans-unit id="35cdef1ff30fe66c5b405db4a4793154e2beb98b" translate="yes" xml:space="preserve">
          <source>Since Qt 4.7, this flag allows you to fine-tune gesture event propagation. By setting the flag when &lt;a href=&quot;qgraphicsobject#grabGesture&quot;&gt;grabbing&lt;/a&gt; a gesture all ignored partial gestures will propagate to their parent items.</source>
          <target state="translated">Qt 4.7以降、このフラグを使用すると、ジェスチャーイベントの伝播を微調整できます。ジェスチャ&lt;a href=&quot;qgraphicsobject#grabGesture&quot;&gt;を取得&lt;/a&gt;するときにフラグを設定することにより、無視されたすべての部分的なジェスチャが親アイテムに伝達されます。</target>
        </trans-unit>
        <trans-unit id="6f0550982face987a67bb170230a5b73a0c00d4a" translate="yes" xml:space="preserve">
          <source>Since Qt 5.0, setUrls also exports the urls as plain text, if &lt;a href=&quot;qmimedata#setText&quot;&gt;setText&lt;/a&gt; was not called before, to make it possible to drop them into any lineedit and text editor.</source>
          <target state="translated">Qt 5.0以降、setUrlsは、URLをプレーンテキストとしてエクスポートします（&lt;a href=&quot;qmimedata#setText&quot;&gt;setText&lt;/a&gt;が以前に呼び出されていなかった場合）。これらを任意のラインエディットおよびテキストエディターにドロップできるようにします。</target>
        </trans-unit>
        <trans-unit id="7d2638b304f7beeb550ecd18cbcbab8c9131253a" translate="yes" xml:space="preserve">
          <source>Since Qt 5.1</source>
          <target state="translated">Qt 5.1以降</target>
        </trans-unit>
        <trans-unit id="f8f7c886a34e204160d97b7862b6e8e4aadb43d4" translate="yes" xml:space="preserve">
          <source>Since Qt 5.10, this command can be applied also to &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#example-command&quot;&gt;\example&lt;/a&gt; documentation, where it causes the automatically generated list of files and images belonging to an example project to be omitted.</source>
          <target state="translated">Qt 5.10以降、このコマンドは&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#example-command&quot;&gt;\ example&lt;/a&gt;ドキュメントにも適用でき、サンプルプロジェクトに属するファイルとイメージの自動生成リストが省略されます。</target>
        </trans-unit>
        <trans-unit id="c3951c4ac2fff4996e03c074b543e994ef3df387" translate="yes" xml:space="preserve">
          <source>Since Qt 5.10, this command can be applied also to &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#example-command&quot;&gt;\example&lt;/a&gt; documentation, where it causes the automatically generated list of files and images belonging to an example project to be omitted.</source>
          <target state="translated">Qt 5.10以降、このコマンドは&lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#example-command&quot;&gt;\ example&lt;/a&gt;ドキュメントにも適用でき、サンプルプロジェクトに属するファイルと画像の自動生成リストが省略されます。</target>
        </trans-unit>
        <trans-unit id="bbba219dcc6e4be0eb8c57afa2e408c278d826e8" translate="yes" xml:space="preserve">
          <source>Since Qt 5.10, this command can be applied also to &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#example-command&quot;&gt;\example&lt;/a&gt; documentation, where it causes the automatically generated list of files and images belonging to an example project to be omitted.</source>
          <target state="translated">Qt 5.10以降、このコマンドは&lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#example-command&quot;&gt;\ example&lt;/a&gt;ドキュメントにも適用でき、サンプルプロジェクトに属するファイルと画像の自動生成リストが省略されます。</target>
        </trans-unit>
        <trans-unit id="c808c38037ec35fab3d852d460ce55a2169ed5e6" translate="yes" xml:space="preserve">
          <source>Since Qt 5.11</source>
          <target state="translated">Qt 5.11以降</target>
        </trans-unit>
        <trans-unit id="c29549d67b25f41e48fb4be3f54d59ee65d7f80e" translate="yes" xml:space="preserve">
          <source>Since Qt 5.11, QDoc supports the HTML and WebXML formats. If no &lt;code&gt;outputformats&lt;/code&gt; are specified, QDoc generates the documentation in HTML (the default format). Both output formats can be specified, with dedicated output directories and other settings. For example:</source>
          <target state="translated">Qt 5.11以降、QDocはHTMLおよびWebXML形式をサポートしています。 &lt;code&gt;outputformats&lt;/code&gt; が指定されていない場合、QDocはドキュメントをHTML（デフォルトのフォーマット）で生成します。専用の出力ディレクトリやその他の設定を使用して、両方の出力形式を指定できます。例えば：</target>
        </trans-unit>
        <trans-unit id="24b3820eb42e488ce3634609156f755b18099f36" translate="yes" xml:space="preserve">
          <source>Since Qt 5.11, QDoc supports the HTML and WebXML formats; since Qt 5.15, it can also generate the documentation in DocBook. If no &lt;code&gt;outputformats&lt;/code&gt; are specified, QDoc generates the documentation in HTML (the default format). All output formats can be specified, with dedicated output directories and other settings. For example:</source>
          <target state="translated">Qt 5.11以降、QDocはHTMLおよびWebXML形式をサポートしています。Qt 5.15以降、DocBookでドキュメントを生成することもできます。 &lt;code&gt;outputformats&lt;/code&gt; が指定されていない場合、QDocはドキュメントをHTML（デフォルトの形式）で生成します。専用の出力ディレクトリやその他の設定を使用して、すべての出力形式を指定できます。例えば：</target>
        </trans-unit>
        <trans-unit id="48033c8e281051f821ec951c2b4ee54513c04c1e" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12</source>
          <target state="translated">Qt 5.12以降</target>
        </trans-unit>
        <trans-unit id="5105359ac64b33c3143e54bd9deba1b2b0692925" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12,</source>
          <target state="translated">Qt 5.12から。</target>
        </trans-unit>
        <trans-unit id="f5dd75399d8c74c8e5e8689c725258f1f10b1a8e" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12, &lt;a href=&quot;qstyle#StyleHint-enum&quot;&gt;QStyle::SH_SpinBox_StepModifier&lt;/a&gt; can be used to select which &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::KeyboardModifier&lt;/a&gt; increases the step rate. &lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt::NoModifier&lt;/a&gt; disables this feature.</source>
          <target state="translated">Qt 5.12以降、&lt;a href=&quot;qstyle#StyleHint-enum&quot;&gt;QStyle :: SH_SpinBox_StepModifier&lt;/a&gt;を使用して、ステップレートを上げる&lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt :: KeyboardModifier&lt;/a&gt;を選択できます。&lt;a href=&quot;qt#KeyboardModifier-enum&quot;&gt;Qt :: NoModifier&lt;/a&gt;はこの機能を無効にします。</target>
        </trans-unit>
        <trans-unit id="9e02b66dfb50de01820452f75d1fa3c7b5c3aac8" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12, vertical and horizontal linear gradients can be applied to items. If you need to apply angled gradients, a combination of rotation and clipping can be applied to the relevant items. Alternatively, consider using &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Shapes::LinearGradient or &lt;a href=&quot;qml-qtgraphicaleffects-lineargradient&quot;&gt;QtGraphicalEffects::LinearGradient&lt;/a&gt;. These approaches can all introduce additional performance requirements for your application.</source>
          <target state="translated">Qt 5.12以降、垂直および水平線形グラデーションをアイテムに適用できます。傾斜グラデーションを適用する必要がある場合は、関連するアイテムに回転とクリッピングの組み合わせを適用できます。または、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; .Shapes :: LinearGradientまたは&lt;a href=&quot;qml-qtgraphicaleffects-lineargradient&quot;&gt;QtGraphicalEffects :: LinearGradientの&lt;/a&gt;使用を検討してください。これらのアプローチはすべて、アプリケーションに追加のパフォーマンス要件をもたらす可能性があります。</target>
        </trans-unit>
        <trans-unit id="9e6a1895b98ec866ba9507a272f7ceabfba46578" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12, vertical and horizontal linear gradients can be applied to items. If you need to apply angled gradients, a combination of rotation and clipping can be applied to the relevant items. Alternatively, consider using &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Shapes::LinearGradient or &lt;a href=&quot;qml-qtgraphicaleffects-lineargradient&quot;&gt;QtGraphicalEffects::LinearGradient&lt;/a&gt;. These approaches can all introduce additional performance requirements for your application.</source>
          <target state="translated">Qt 5.12以降、垂直および水平の線形グラデーションをアイテムに適用できます。角度の付いたグラデーションを適用する必要がある場合は、回転とクリッピングの組み合わせを関連するアイテムに適用できます。または、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; .Shapes :: LinearGradientまたは&lt;a href=&quot;qml-qtgraphicaleffects-lineargradient&quot;&gt;QtGraphicalEffects :: LinearGradientの&lt;/a&gt;使用を検討してください。これらのアプローチはすべて、アプリケーションに追加のパフォーマンス要件をもたらす可能性があります。</target>
        </trans-unit>
        <trans-unit id="02c6fb07aec7fe2691dfb98ea28bf50d65a15aaa" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12, vertical and horizontal linear gradients can be applied to items. If you need to apply angled gradients, a combination of rotation and clipping can be applied to the relevant items. Alternatively, consider using &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;.Shapes::LinearGradient or QtGraphicalEffects::LinearGradient. These approaches can all introduce additional performance requirements for your application.</source>
          <target state="translated">Qt 5.12以降、垂直および水平の線形グラデーションをアイテムに適用できます。角度の付いたグラデーションを適用する必要がある場合は、回転とクリッピングの組み合わせを関連するアイテムに適用できます。または、&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; .Shapes :: LinearGradientまたはQtGraphicalEffects :: LinearGradientの使用を検討してください。これらのアプローチはすべて、アプリケーションに追加のパフォーマンス要件をもたらす可能性があります。</target>
        </trans-unit>
        <trans-unit id="65321de237b1861374aafca76c07af5e5585c25c" translate="yes" xml:space="preserve">
          <source>Since Qt 5.12.2, the url scheme &lt;code&gt;gst-pipeline&lt;/code&gt; provides custom pipelines for the GStreamer backend.</source>
          <target state="translated">Qt 5.12.2以降、URLスキーム &lt;code&gt;gst-pipeline&lt;/code&gt; は、GStreamerバックエンド用のカスタムパイプラインを提供します。</target>
        </trans-unit>
        <trans-unit id="4450a37a677bce6f0893055338ba8cf541a3c1e8" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, if you want to hide a specific column, you can return &lt;code&gt;0&lt;/code&gt; from the &lt;a href=&quot;qml-qtquick-tableview#columnWidthProvider-prop&quot;&gt;columnWidthProvider&lt;/a&gt; for that column. Likewise, you can return 0 from the &lt;a href=&quot;qml-qtquick-tableview#rowHeightProvider-prop&quot;&gt;rowHeightProvider&lt;/a&gt; to hide a row. If you return a negative number, &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; will fall back to calculate the size based on the delegate items.</source>
          <target state="translated">Qt 5.13以降、特定の列を非表示にする場合は、その列の&lt;a href=&quot;qml-qtquick-tableview#columnWidthProvider-prop&quot;&gt;columnWidthProvider&lt;/a&gt;から &lt;code&gt;0&lt;/code&gt; を返すことができます。同様に、&lt;a href=&quot;qml-qtquick-tableview#rowHeightProvider-prop&quot;&gt;rowHeightProvider&lt;/a&gt;から0を返し、行を非表示にすることができます。負の数を&lt;a href=&quot;qml-qtquick-tableview&quot;&gt;返す&lt;/a&gt;と、TableViewはフォールバックして、デリゲートアイテムに基づいてサイズを計算します。</target>
        </trans-unit>
        <trans-unit id="ac2ccaadbf8596d22555660dfab07a31192f23e4" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, if you want to hide a specific column, you can return &lt;code&gt;0&lt;/code&gt; from the &lt;a href=&quot;qml-qtquick-tableview#columnWidthProvider-prop&quot;&gt;columnWidthProvider&lt;/a&gt; for that column. Likewise, you can return 0 from the &lt;a href=&quot;qml-qtquick-tableview#rowHeightProvider-prop&quot;&gt;rowHeightProvider&lt;/a&gt; to hide a row. If you return a negative number, TableView will fall back to calculate the size based on the delegate items.</source>
          <target state="translated">Qt 5.13以降、特定の列を非表示にする場合は、その列の&lt;a href=&quot;qml-qtquick-tableview#columnWidthProvider-prop&quot;&gt;columnWidthProvider&lt;/a&gt;から &lt;code&gt;0&lt;/code&gt; を返すことができます。同様に、&lt;a href=&quot;qml-qtquick-tableview#rowHeightProvider-prop&quot;&gt;rowHeightProvider&lt;/a&gt;から0を返して、行を非表示にすることができます。負の数を返すと、TableViewはフォールバックして、デリゲート項目に基づいてサイズを計算します。</target>
        </trans-unit>
        <trans-unit id="aa19d2c4fe4f97314b7131edf5bb705235bbfe1b" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, if you want to hide a specific column, you can return &lt;code&gt;0&lt;/code&gt; width for that column. If you return a negative number, &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; calculates the width based on the delegate items.</source>
          <target state="translated">Qt 5.13以降、特定の列を非表示にする場合は、その列の幅を &lt;code&gt;0&lt;/code&gt; に戻すことができます。負の数を返すと、&lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;はデリゲートアイテムに基づいて幅を計算します。</target>
        </trans-unit>
        <trans-unit id="a63e0ad1d47f6539ccf8af215f99c3e4841d5f31" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, if you want to hide a specific column, you can return &lt;code&gt;0&lt;/code&gt; width for that column. If you return a negative number, &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; will fall back to calculate the width based on the delegate items.</source>
          <target state="translated">Qt 5.13以降、特定の列を非表示にする場合は、その列の幅を &lt;code&gt;0&lt;/code&gt; に戻すことができます。負の数を&lt;a href=&quot;qml-qtquick-tableview&quot;&gt;返す&lt;/a&gt;と、TableViewはフォールバックして、デリゲートアイテムに基づいて幅を計算します。</target>
        </trans-unit>
        <trans-unit id="f410cac3dae262807f37c0efc5010b0a333ad1ef" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, if you want to hide a specific row, you can return &lt;code&gt;0&lt;/code&gt; height for that row. If you return a negative number, &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; calculates the height based on the delegate items.</source>
          <target state="translated">Qt 5.13以降、特定の行を非表示にする場合は、その行の高さを &lt;code&gt;0&lt;/code&gt; に戻すことができます。負の数を返すと、&lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;はデリゲートアイテムに基づいて高さを計算します。</target>
        </trans-unit>
        <trans-unit id="aeaadbc3e15ccf224d9a640def2b3e8f2e0d2d19" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, if you want to hide a specific row, you can return &lt;code&gt;0&lt;/code&gt; height for that row. If you return a negative number, &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; will fall back to calculate the height based on the delegate items.</source>
          <target state="translated">Qt 5.13以降、特定の行を非表示にする場合は、その行の高さを &lt;code&gt;0&lt;/code&gt; に戻すことができます。負の数を&lt;a href=&quot;qml-qtquick-tableview&quot;&gt;返す&lt;/a&gt;と、TableViewはフォールバックして、デリゲートアイテムに基づいて高さを計算します。</target>
        </trans-unit>
        <trans-unit id="6fcc5553d886408889db624ad49bb1e2c98b4ca7" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, the setShowShortcutsInContextMenus() function can be used to override the platform default.</source>
          <target state="translated">Qt 5.13 以降、プラットフォームのデフォルトをオーバーライドするために setShowShortcutsInContextMenus()関数を使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="3454bd5f9e329b154a6c4f46e1631a39a2f8f917" translate="yes" xml:space="preserve">
          <source>Since Qt 5.13, this macro has no effect. In Qt 5.12 and before, if this macro is defined, the compiler will generate warnings if any API declared as deprecated by Qt is used.</source>
          <target state="translated">Qt 5.13 以降、このマクロは何の効果もありません。Qt 5.12以前のバージョンでは、このマクロが定義されていると、Qtによって非推奨と宣言されたAPIが使用された場合にコンパイラが警告を出すようになります。</target>
        </trans-unit>
        <trans-unit id="1d7fc9b13075afacdc99121c71f69e8fd8555fca" translate="yes" xml:space="preserve">
          <source>Since Qt 5.14</source>
          <target state="translated">Qt 5.14以降</target>
        </trans-unit>
        <trans-unit id="4cf4acba653b666e9748a85a37818688472a9c47" translate="yes" xml:space="preserve">
          <source>Since Qt 5.14, different values for</source>
          <target state="translated">Qt 5.14 以降では</target>
        </trans-unit>
        <trans-unit id="f69c40656d85347e3677a36fe96ca2c9d4458f56" translate="yes" xml:space="preserve">
          <source>Since Qt 5.15</source>
          <target state="translated">Qt 5.15以降</target>
        </trans-unit>
        <trans-unit id="b4e89b5a79879d2f81e3a8718aaaa89e9a3cc887" translate="yes" xml:space="preserve">
          <source>Since Qt 5.15 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator&quot;&gt;Nullish Coalescing&lt;/a&gt; is also implemented in the QML runtime.</source>
          <target state="translated">Qt 5.15以降、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator&quot;&gt;NullishCoalescing&lt;/a&gt;もQMLランタイムに実装されています。</target>
        </trans-unit>
        <trans-unit id="646e9cc6c740717958a71455a9206cd596112ec0" translate="yes" xml:space="preserve">
          <source>Since Qt 5.15, modules define not only commands that start with &lt;code&gt;qt5_&lt;/code&gt;, but also ones with &lt;code&gt;qt_&lt;/code&gt;. You can set &lt;code&gt;QT_NO_CREATE_VERSIONLESS_FUNCTIONS&lt;/code&gt; before &lt;code&gt;find_package&lt;/code&gt; to prevent this.</source>
          <target state="translated">Qtの5.15以来、モジュールが唯一で始まるコマンドではない定義 &lt;code&gt;qt5_&lt;/code&gt; と、ほかのもの &lt;code&gt;qt_&lt;/code&gt; を。これを防ぐために、 &lt;code&gt;QT_NO_CREATE_VERSIONLESS_FUNCTIONS&lt;/code&gt; 前に &lt;code&gt;find_package&lt;/code&gt; を設定できます。</target>
        </trans-unit>
        <trans-unit id="e5a19356b817e4375485c80a40e2ed61a807be19" translate="yes" xml:space="preserve">
          <source>Since Qt 5.15, modules define not only targets that start with &lt;code&gt;Qt5::&lt;/code&gt;, but also ones with &lt;code&gt;Qt::&lt;/code&gt;. You can set &lt;code&gt;QT_NO_CREATE_VERSIONLESS_TARGETS&lt;/code&gt; before &lt;code&gt;find_package&lt;/code&gt; to prevent this.</source>
          <target state="translated">Qt 5.15以降、モジュールは &lt;code&gt;Qt5::&lt;/code&gt; で始まるターゲットだけでなく、 &lt;code&gt;Qt::&lt;/code&gt; で始まるターゲットも定義します。これを防ぐために、 &lt;code&gt;QT_NO_CREATE_VERSIONLESS_TARGETS&lt;/code&gt; 前に &lt;code&gt;find_package&lt;/code&gt; を設定できます。</target>
        </trans-unit>
        <trans-unit id="6bc7645a8a2813f5ff0ce37cb48efb3d9cfcd891" translate="yes" xml:space="preserve">
          <source>Since Qt 5.2</source>
          <target state="translated">Qt 5.2以降</target>
        </trans-unit>
        <trans-unit id="d69760ed3431ed47d742861623d8580607e8a32f" translate="yes" xml:space="preserve">
          <source>Since Qt 5.2, some default images are provided as resources to aid prototyping:</source>
          <target state="translated">Qt 5.2以降、プロトタイピングを支援するためのリソースとして、いくつかのデフォルトイメージが提供されています。</target>
        </trans-unit>
        <trans-unit id="fccc48327872d4fab2aef102bd5e0891626ada79" translate="yes" xml:space="preserve">
          <source>Since Qt 5.3</source>
          <target state="translated">Qt 5.3以降</target>
        </trans-unit>
        <trans-unit id="10e9b65731602249f51227b13e589fb4eed2b39d" translate="yes" xml:space="preserve">
          <source>Since Qt 5.3, logging rules are also automatically loaded from the &lt;code&gt;[Rules]&lt;/code&gt; section of a logging configuration file. Such configuration files are looked up in the QtProject configuration directory, or explicitly set in a &lt;code&gt;QT_LOGGING_CONF&lt;/code&gt; environment variable:</source>
          <target state="translated">Qt 5.3以降、ロギングルールもロギング構成ファイルの &lt;code&gt;[Rules]&lt;/code&gt; セクションから自動的に読み込まれます。このような構成ファイルは、QtProject構成ディレクトリで &lt;code&gt;QT_LOGGING_CONF&lt;/code&gt; されるか、QT_LOGGING_CONF環境変数で明示的に設定されます。</target>
        </trans-unit>
        <trans-unit id="d4193b8c7fb1cbf054d7988a58fc610ca7e8957f" translate="yes" xml:space="preserve">
          <source>Since Qt 5.3, logging rules can also be specified in a &lt;code&gt;QT_LOGGING_RULES&lt;/code&gt; environment variable. And since Qt 5.6, multiple rules can also be separated by semicolons:</source>
          <target state="translated">Qt 5.3以降、ロギングルールは &lt;code&gt;QT_LOGGING_RULES&lt;/code&gt; 環境変数で指定することもできます。Qt 5.6以降、複数のルールをセミコロンで区切ることもできます：</target>
        </trans-unit>
        <trans-unit id="f3849a805a374d40c9d1171bb730a79359004e99" translate="yes" xml:space="preserve">
          <source>Since Qt 5.4, this value forces &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; and &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; to be drawn last, on top of other widgets. Ignored for other type of widgets. Setting this attribute breaks the stacking order, but allows having a semi-transparent OpenGL widget with other widgets visible underneath. It is strongly recommended to call update() on the widget's top-level window after enabling or disabling this attribute.</source>
          <target state="translated">Qt 5.4以降、この値&lt;a href=&quot;qopenglwidget&quot;&gt;により&lt;/a&gt;、&lt;a href=&quot;qquickwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;とQQuickWidgetが他のウィジェットの上に最後に描画されます。他のタイプのウィジェットでは無視されます。この属性を設定すると、スタックの順序が崩れますが、他のウィジェットがその下に表示される半透明のOpenGLウィジェットを使用できます。この属性を有効または無効にした後、ウィジェットのトップレベルウィンドウでupdate（）を呼び出すことを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="b91540024dd91d3c52a61b4febd2180b896b992b" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5</source>
          <target state="translated">Qt 5.5以降</target>
        </trans-unit>
        <trans-unit id="d518eeebb57119f7fd62bea952121fa3c2549145" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5, &lt;a href=&quot;qml-qtquick-pincharea&quot;&gt;PinchArea&lt;/a&gt; can react to native pinch gesture events from the operating system if available; otherwise it reacts only to touch events.</source>
          <target state="translated">Qt 5.5以降、&lt;a href=&quot;qml-qtquick-pincharea&quot;&gt;PinchArea&lt;/a&gt;は、可能な場合はオペレーティングシステムからのネイティブのピンチジェスチャーイベントに対応できます。それ以外の場合は、タッチイベントにのみ反応します。</target>
        </trans-unit>
        <trans-unit id="2d711d6e2041d6eddd7de959fb0f01d08d66ef94" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5, &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; and &lt;a href=&quot;qpersistentmodelindex&quot;&gt;QPersistentModelIndex&lt;/a&gt; are exposed in QML as value-based types. Also exposed in a similar fashion are &lt;a href=&quot;qmodelindex#QModelIndexList-typedef&quot;&gt;QModelIndexList&lt;/a&gt;, &lt;a href=&quot;qitemselectionrange&quot;&gt;QItemSelectionRange&lt;/a&gt; and &lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt;. All objects from these types can be passed back and forth between QML and C++ as &lt;code&gt;var&lt;/code&gt; properties or plain JavaScript variables.</source>
          <target state="translated">Qt 5.5以降、&lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;と&lt;a href=&quot;qpersistentmodelindex&quot;&gt;QPersistentModelIndex&lt;/a&gt;は値ベースのタイプとしてQMLで公開されています。同様の方法で公開されるのは、&lt;a href=&quot;qmodelindex#QModelIndexList-typedef&quot;&gt;QModelIndexList&lt;/a&gt;、&lt;a href=&quot;qitemselectionrange&quot;&gt;QItemSelectionRange&lt;/a&gt;、および&lt;a href=&quot;qitemselection&quot;&gt;QItemSelection&lt;/a&gt;です。これらのタイプのすべてのオブジェクトは、 &lt;code&gt;var&lt;/code&gt; プロパティまたはプレーンJavaScript変数としてQMLとC ++の間でやり取りできます。</target>
        </trans-unit>
        <trans-unit id="9131edb2d49ce7b0bba99ab87c15220a6a0554fb" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5, PinchArea can react to native pinch gesture events from the operating system if available; otherwise it reacts only to touch events.</source>
          <target state="translated">Qt 5.5 以降、PinchArea はオペレーティングシステムからのネイティブのピンチジェスチャーイベントがあればそれに反応するようになりました。</target>
        </trans-unit>
        <trans-unit id="977f1f8df27878eed5f330616cdc3f46fd3042ba" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. Do not start sloppy timers when the mouse leaves a sub-menu.</source>
          <target state="translated">Qt 5.5から。マウスがサブメニューから離れたときに、ずさんなタイマーを起動しないようにした。</target>
        </trans-unit>
        <trans-unit id="8f3af735714fe289d4cf3e8b46750b478f2fe0a6" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. If the cursor has to move towards the submenu (like it is on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;), or if the cursor can move in any direction as long as it reaches the submenu before the sloppy timeout.</source>
          <target state="translated">Qt 5.5以降。カーソルが（&lt;a href=&quot;internationalization#macos&quot;&gt;macOSの&lt;/a&gt;ように）サブメニューに向かって移動する必要がある場合、またはカーソルがずさんなタイムアウトの前にサブメニューに到達する限り、任意の方向に移動できる場合。</target>
        </trans-unit>
        <trans-unit id="583abc5644b24b4e75ed41387867ae2c6d296229" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. If the cursor has to move towards the submenu (like it is on macOS), or if the cursor can move in any direction as long as it reaches the submenu before the sloppy timeout.</source>
          <target state="translated">Qt 5.5以降。(macOSのように)サブメニューに向かってカーソルを移動させなければならない場合や、ずさんなタイムアウトの前にサブメニューに到達していればカーソルはどの方向にも移動できるようになりました。</target>
        </trans-unit>
        <trans-unit id="34b625498a10a78e840ed03f9fe6bdbcf725cf8a" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. Should other action items be selected when the mouse moves towards a sloppy submenu.</source>
          <target state="translated">Qt 5.5から。マウスがだらしないサブメニューに向かって移動したときに、他のアクション項目が選択されるようにした。</target>
        </trans-unit>
        <trans-unit id="a23ec94294b2aa5f0726de31f472c69eef56b197" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. The timeout used to close sloppy submenus.</source>
          <target state="translated">Qt 5.5から。だらしないサブメニューを閉じるためのタイムアウト。</target>
        </trans-unit>
        <trans-unit id="7a10c1f5b01e96c419b705be8e9e747ca64b952c" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. When SH_Menu_SubMenuUniDirection is defined this enum defines the number of failed mouse moves before the sloppy submenu is discarded. This can be used to control the &quot;strictness&quot; of the uni direction algorithm.</source>
          <target state="translated">Qt 5.5 以降。SH_Menu_SubMenuUniDirection が定義されている場合、 この列は、ずさんなサブメニューが破棄されるまでのマウスの移動に失敗した回数を定義します。これは、uni 方向アルゴリズムの「厳しさ」を制御するのに使われます。</target>
        </trans-unit>
        <trans-unit id="6b9f65bc780c6e563deeeecbc1a4dc0b4d30483d" translate="yes" xml:space="preserve">
          <source>Since Qt 5.5. When entering parent from child submenu, should the sloppy state be reset, effectively closing the child and making the current submenu active.</source>
          <target state="translated">Qt 5.5 以降。子サブメニューから親サブメニューに入るときに、ずさんな状態をリセットして、子サブメニューを効果的に閉じて現在のサブメニューをアクティブにするようにしたほうがよい。</target>
        </trans-unit>
        <trans-unit id="fd6f68cbfa8df8e8b4afc9942d271d7e59c3b19c" translate="yes" xml:space="preserve">
          <source>Since Qt 5.6</source>
          <target state="translated">Qt 5.6以降</target>
        </trans-unit>
        <trans-unit id="a4411d90fbe576efc261fa2bed49d870e28071c2" translate="yes" xml:space="preserve">
          <source>Since Qt 5.6, also simple wildcards ('*' and '?') are recognized by &lt;code&gt;excludefiles&lt;/code&gt;. For example, to exclude all private Qt header files from being parsed, define the following:</source>
          <target state="translated">Qt 5.6以降、単純なワイルドカード（「*」と「？」）も &lt;code&gt;excludefiles&lt;/code&gt; で認識されます。たとえば、すべてのプライベートQtヘッダーファイルを解析から除外するには、次のように定義します。</target>
        </trans-unit>
        <trans-unit id="2f654388279c9d8bbed1f19bde2d28bc663fdeea" translate="yes" xml:space="preserve">
          <source>Since Qt 5.6, resize() doesn't shrink the capacity anymore. To shed excess capacity, use &lt;a href=&quot;qlist#squeeze&quot;&gt;squeeze&lt;/a&gt;().</source>
          <target state="translated">Qt 5.6以降、resize（）は容量を縮小しなくなりました。余分な容量を減らすには、&lt;a href=&quot;qlist#squeeze&quot;&gt;squeeze&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="5489f0c890835b57010ae219d7fbd97da91a7fab" translate="yes" xml:space="preserve">
          <source>Since Qt 5.6, resize() doesn't shrink the capacity anymore. To shed excess capacity, use &lt;a href=&quot;qvector#squeeze&quot;&gt;squeeze&lt;/a&gt;().</source>
          <target state="translated">Qt 5.6以降、resize（）は容量を縮小しなくなりました。過剰な容量を取り除くには、&lt;a href=&quot;qvector#squeeze&quot;&gt;squeeze&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="9ee40fc5a5ea50ae798f7824a07a631440882b52" translate="yes" xml:space="preserve">
          <source>Since Qt 5.6, the default implementation logs the messages in a &lt;code&gt;js&lt;/code&gt;&lt;a href=&quot;qloggingcategory&quot;&gt;logging category&lt;/a&gt;.</source>
          <target state="translated">Qt 5.6以降、デフォルトの実装ではメッセージが &lt;code&gt;js&lt;/code&gt; &lt;a href=&quot;qloggingcategory&quot;&gt;ロギングカテゴリに記録されます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0e55157dfedf0618bf8de11e9a586d513a65262a" translate="yes" xml:space="preserve">
          <source>Since Qt 5.7</source>
          <target state="translated">Qt 5.7以降</target>
        </trans-unit>
        <trans-unit id="97169eb2f638778e56214283acb92a40f9de07b4" translate="yes" xml:space="preserve">
          <source>Since Qt 5.7, only secure origins such as HTTPS have been able to request Geolocation features. This provides an override to allow non secure origins to access Geolocation again.</source>
          <target state="translated">Qt 5.7 以降、HTTPS などのセキュアなオリジンのみが Geolocation 機能をリクエストできるようになりました。これは、セキュアでないオリジンが再び Geolocation にアクセスできるようにするためのオーバーライドを提供します。</target>
        </trans-unit>
        <trans-unit id="1c00bd08b20e4749451aba58d2211362eef5551e" translate="yes" xml:space="preserve">
          <source>Since Qt 5.7, only secure origins such as HTTPS have been able to request Geolocation features. This provides an override to allow non secure origins to access Geolocation again. Disabled by default. (Added in Qt 5.9)</source>
          <target state="translated">Qt 5.7 以降、HTTPS などのセキュアなオリジンのみが Geolocation 機能をリクエストできるようになりました。これは、セキュアでないオリジンが再び Geolocation にアクセスできるようにするためのオーバーライドを提供します。デフォルトでは無効になっています。(Qt 5.9 で追加)</target>
        </trans-unit>
        <trans-unit id="fc4395dfc825944c1c93f0f0b60d86863290fc7d" translate="yes" xml:space="preserve">
          <source>Since Qt 5.8, Qt Quick dialogs can be customized by connecting to the &lt;a href=&quot;qml-qtwebengine-webengineview#authenticationDialogRequested-signal&quot;&gt;WebEngineView::authenticationDialogRequested&lt;/a&gt;(), &lt;a href=&quot;qml-qtwebengine-webengineview#javaScriptDialogRequested-signal&quot;&gt;WebEngineView::javaScriptDialogRequested&lt;/a&gt;(), &lt;a href=&quot;qml-qtwebengine-webengineview#colorDialogRequested-signal&quot;&gt;WebEngineView::colorDialogRequested&lt;/a&gt;(), &lt;a href=&quot;qml-qtwebengine-webengineview#fileDialogRequested-signal&quot;&gt;WebEngineView::fileDialogRequested&lt;/a&gt;(), and WebEngineView::formValidationMessageRequested() signals. For an example, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webengine-customdialogs-example.html#&quot;&gt;WebEngine Qt Quick Custom Dialogs Example&lt;/a&gt;.</source>
          <target state="translated">Qt 5.8以降、Qt Quickダイアログは、&lt;a href=&quot;qml-qtwebengine-webengineview#authenticationDialogRequested-signal&quot;&gt;WebEngineView :: authenticationDialogRequested&lt;/a&gt;（）、&lt;a href=&quot;qml-qtwebengine-webengineview#javaScriptDialogRequested-signal&quot;&gt;WebEngineView :: javaScriptDialogRequested&lt;/a&gt;（）、&lt;a href=&quot;qml-qtwebengine-webengineview#colorDialogRequested-signal&quot;&gt;WebEngineView :: colorDialogRequested&lt;/a&gt;（）、&lt;a href=&quot;qml-qtwebengine-webengineview#fileDialogRequested-signal&quot;&gt;WebEngineView :: fileDialogRequested&lt;/a&gt;（）、およびWebEngineView :: formValidationMessageRequested（）シグナルに接続することでカスタマイズできます。例については、「&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webengine-customdialogs-example.html#&quot;&gt;WebEngine Qtクイックカスタムダイアログの例&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="af4329cfdc7a471ee679e4c43b1561574bd24c8e" translate="yes" xml:space="preserve">
          <source>Since Qt 5.8, Qt Quick dialogs can be customized by connecting to the &lt;a href=&quot;qml-qtwebengine-webengineview#authenticationDialogRequested-signal&quot;&gt;WebEngineView::authenticationDialogRequested&lt;/a&gt;(), &lt;a href=&quot;qml-qtwebengine-webengineview#javaScriptDialogRequested-signal&quot;&gt;WebEngineView::javaScriptDialogRequested&lt;/a&gt;(), &lt;a href=&quot;qml-qtwebengine-webengineview#colorDialogRequested-signal&quot;&gt;WebEngineView::colorDialogRequested&lt;/a&gt;(), &lt;a href=&quot;qml-qtwebengine-webengineview#fileDialogRequested-signal&quot;&gt;WebEngineView::fileDialogRequested&lt;/a&gt;(), and WebEngineView::formValidationMessageRequested() signals. For an example, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-webengine-customdialogs-example.html&quot;&gt;WebEngine Qt Quick Custom Dialogs Example&lt;/a&gt;.</source>
          <target state="translated">Qt 5.8以降、Qtクイックダイアログは、&lt;a href=&quot;qml-qtwebengine-webengineview#authenticationDialogRequested-signal&quot;&gt;WebEngineView :: authenticationDialogRequested&lt;/a&gt;（）、&lt;a href=&quot;qml-qtwebengine-webengineview#javaScriptDialogRequested-signal&quot;&gt;WebEngineView :: javaScriptDialogRequested&lt;/a&gt;（）、&lt;a href=&quot;qml-qtwebengine-webengineview#colorDialogRequested-signal&quot;&gt;WebEngineView :: colorDialogRequested&lt;/a&gt;（）、&lt;a href=&quot;qml-qtwebengine-webengineview#fileDialogRequested-signal&quot;&gt;WebEngineView :: fileDialogRequested&lt;/a&gt;（）、およびWebEngineView :: formValidationMessageRequested（）シグナルに接続することでカスタマイズできます。。例については、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-webengine-customdialogs-example.html&quot;&gt;WebEngineQtクイックカスタムダイアログの例を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e3aa666fd85616c2f4725bd29766977a18a5fa00" translate="yes" xml:space="preserve">
          <source>Since Qt 5.8, when the last reference to this &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; gets destroyed,</source>
          <target state="translated">Qt 5.8以降、この&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;への最後の参照が破棄されると、</target>
        </trans-unit>
        <trans-unit id="256e8782900c3c23b849526cc22fa6105c529c49" translate="yes" xml:space="preserve">
          <source>Since Qt 5.8, when the last reference to this QSharedPointer gets destroyed,</source>
          <target state="translated">Qt 5.8以降、このQSharedPointerへの最後の参照が破棄されると、このQSharedPointerが破棄されるようになりました。</target>
        </trans-unit>
        <trans-unit id="77f70f268cc0aa98baa6d4fac0fef3688d76ab5b" translate="yes" xml:space="preserve">
          <source>Since Qt 5.9 (Qt Quick 2.9), it is possible to make a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; that can be flicked to both directions. In order to do this, the &lt;a href=&quot;qml-qtquick-flickable#flickableDirection-prop&quot;&gt;flickableDirection&lt;/a&gt; can be set to</source>
          <target state="translated">Qt 5.9（Qt Quick 2.9）以降、両方向にフリックできる&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;を作成できます。これを行うには、&lt;a href=&quot;qml-qtquick-flickable#flickableDirection-prop&quot;&gt;flickableDirection&lt;/a&gt;を次のように設定します。</target>
        </trans-unit>
        <trans-unit id="8fe76cecde216ae8c9ee0b2abf6975d02d1b74a8" translate="yes" xml:space="preserve">
          <source>Since Qt 5.9 (Qt Quick 2.9), it is possible to make a ListView that can be flicked to both directions. In order to do this, the &lt;a href=&quot;qml-qtquick-flickable#flickableDirection-prop&quot;&gt;flickableDirection&lt;/a&gt; can be set to</source>
          <target state="translated">Qt 5.9（Qt Quick 2.9）以降、両方向にフリックできるListViewを作成することができます。これを行うには、&lt;a href=&quot;qml-qtquick-flickable#flickableDirection-prop&quot;&gt;flickableDirection&lt;/a&gt;を次のように設定できます。</target>
        </trans-unit>
        <trans-unit id="a8756eef20913e790f26a8516ffb06f5b77c57f1" translate="yes" xml:space="preserve">
          <source>Since Qt 6, configure is a wrapper around &lt;b&gt;cmake&lt;/b&gt;. CMake can also be invoked directly. configure provides additional error checking and compatibility with Qt 5.</source>
          <target state="translated">Qt 6以降、configureは&lt;b&gt;cmakeの&lt;/b&gt;ラッパーです。CMakeを直接呼び出すこともできます。configureは、追加のエラーチェックとQt5との互換性を提供します。</target>
        </trans-unit>
        <trans-unit id="f96d1e901a770dfcba2793a2ec648787c5eba533" translate="yes" xml:space="preserve">
          <source>Since Qt 6.0</source>
          <target state="translated">Qt 6.0以降</target>
        </trans-unit>
        <trans-unit id="11779d2b8269126bb2f8d7857db0dfba9c963420" translate="yes" xml:space="preserve">
          <source>Since Qt 6.0 you can use &quot;&quot; instead of a reason to use a standard message instead.</source>
          <target state="translated">Qt 6.0からは、標準メッセージを使用する理由の代わりに&quot;&quot;を使用できるようになりました。</target>
        </trans-unit>
        <trans-unit id="57428dbdbbb1629eca4304675a79acfc7b21bec5" translate="yes" xml:space="preserve">
          <source>Since Qt Multimedia for iOS uses the camera, the &lt;code&gt;Info.plist&lt;/code&gt; assigned to QMAKE_INFO_PLIST in the project file must contain the key &lt;code&gt;NSCameraUsageDescription&lt;/code&gt;. Otherwise the application will abort on startup. See Info.plist documentation from Apple for more information regarding this key.</source>
          <target state="translated">Qt Multimedia for iOSはカメラを使用するため、プロジェクトファイルのQMAKE_INFO_PLISTに割り当てられた &lt;code&gt;Info.plist&lt;/code&gt; には、キー &lt;code&gt;NSCameraUsageDescription&lt;/code&gt; が含まれている必要があります。それ以外の場合、アプリケーションは起動時に中止されます。このキーの詳細については、AppleのInfo.plistドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ad4f7e8499a0e99434dbbd296a3adec55dedb682" translate="yes" xml:space="preserve">
          <source>Since QtRO is a peer-to-peer network, to &lt;a href=&quot;qremoteobjectnode#acquire&quot;&gt;acquire()&lt;/a&gt; a valid &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt;, the replica's node needs to be connected to the node that hosts its &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt;. A host node is a node that allows other nodes to connect to it, which is accomplished by giving hosts unique addresses. This address is provided to the &lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHost&lt;/a&gt; constructor or set by the setHostUrl method. The node from which a replica is requested must establish the connection to the host node, to initialize the replica and keep it up to date.</source>
          <target state="translated">QtROはピアツーピアネットワークであるため、有効な&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;レプリカ&lt;/a&gt;を&lt;a href=&quot;qremoteobjectnode#acquire&quot;&gt;取得（）&lt;/a&gt;するには、レプリカのノードをその&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;ソース&lt;/a&gt;をホストするノードに接続する必要があります。ホストノードは、他のノードがそれに接続できるようにするノードです。これは、ホストに一意のアドレスを与えることによって実現されます。このアドレスは、&lt;a href=&quot;qremoteobjecthost&quot;&gt;QRemoteObjectHost&lt;/a&gt;コンストラクターに提供されるか、setHostUrlメソッドによって設定されます。レプリカが要求されるノードは、レプリカを初期化して最新の状態に保つために、ホストノードへの接続を確立する必要があります。</target>
        </trans-unit>
        <trans-unit id="216047bf91264d3ecad28717da8a8f820ed210a4" translate="yes" xml:space="preserve">
          <source>Since RGB values range between 0 and 255, we need to limit the spin box and slider to that particular range.</source>
          <target state="translated">RGB 値の範囲は 0 から 255 までなので、スピンボックスとスライダーを特定の範囲に制限する必要があります。</target>
        </trans-unit>
        <trans-unit id="0f15bd177dc395022c02fa711740a61367ed740c" translate="yes" xml:space="preserve">
          <source>Since SoundEffect requires slightly more resources to achieve lower latency playback, the platform may limit the number of simultaneously playing sound effects.</source>
          <target state="translated">SoundEffectは、より低いレイテンシーでの再生を実現するためにやや多めのリソースを必要とするため、プラットフォームによっては同時に再生されるサウンドエフェクトの数が制限される場合があります。</target>
        </trans-unit>
        <trans-unit id="b6f18efd3e9a327cac429b40633e18be2d294b85" translate="yes" xml:space="preserve">
          <source>Since US-ASCII and ISO-8859-1 are so common, there are also especially fast functions for mapping to and from them. For example, to open an application's icon one might do this:</source>
          <target state="translated">US-ASCII と ISO-8859-1 は非常に一般的なものなので、それらとの間のマッピングのための特に高速な関数もあります。例えば、アプリケーションのアイコンを開くには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="b08c3179d47f92f8bf541825f6f7d5fcd83b68e5" translate="yes" xml:space="preserve">
          <source>Since XPath 2.0 is a subset of &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; 1.0, XPath 2.0 is supported. Areas where conformance may be questionable and, consequently, where behavior may be changed in future releases include:</source>
          <target state="translated">XPath2.0は&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery1.0の&lt;/a&gt;サブセットであるため、XPath2.0がサポートされています。適合性が疑わしい可能性があり、その結果、将来のリリースで動作が変更される可能性がある領域は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="803f2139b4ed6c63e3270d934405e8cce7375212" translate="yes" xml:space="preserve">
          <source>Since XPath 2.0 is a subset of XQuery 1.0, XPath 2.0 is supported. Areas where conformance may be questionable and, consequently, where behavior may be changed in future releases include:</source>
          <target state="translated">XPath 2.0 は XQuery 1.0 のサブセットであるため、XPath 2.0 はサポートされています。準拠性に疑問があり、その結果、将来のリリースで動作が変更される可能性がある分野には、以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="111cf4375618c79252d6afdbaa1d95381f57524f" translate="yes" xml:space="preserve">
          <source>Since XPath is a subset of XSLT, its issues are in affect too.</source>
          <target state="translated">XPathはXSLTのサブセットなので、その問題も影響を受けます。</target>
        </trans-unit>
        <trans-unit id="3279cef3862deadefbdc499ea91249df9960c299" translate="yes" xml:space="preserve">
          <source>Since a</source>
          <target state="translated">以後の</target>
        </trans-unit>
        <trans-unit id="6a4a47ec5d7d799ab2586be38dd34861af1c6c42" translate="yes" xml:space="preserve">
          <source>Since a list of model indexes is supplied to the function, this approach is general enough to be used in both hierarchical and non-heirarchical models.</source>
          <target state="translated">モデルインデックスのリストが関数に供給されるので,このアプローチは,階層的モデルと非階層的モデルの両方で使用するのに十分な一般的なものです.</target>
        </trans-unit>
        <trans-unit id="d02d73828097a0bf60842ff078fd43f8f5beb010" translate="yes" xml:space="preserve">
          <source>Since access to the data displayed by the view is controlled by a model, the model used also has to provide support for drag and drop operations. The actions supported by a model can be specified by reimplementing the &lt;a href=&quot;qabstractitemmodel#supportedDropActions&quot;&gt;QAbstractItemModel::supportedDropActions&lt;/a&gt;() function. For example, copy and move operations are enabled with the following code:</source>
          <target state="translated">ビューによって表示されるデータへのアクセスはモデルによって制御されるため、使用されるモデルはドラッグアンドドロップ操作もサポートする必要があります。モデルでサポートされるアクションは、&lt;a href=&quot;qabstractitemmodel#supportedDropActions&quot;&gt;QAbstractItemModel :: supportedDropActions&lt;/a&gt;（）関数を再実装することで指定できます。たとえば、コピーと移動の操作は次のコードで有効になります。</target>
        </trans-unit>
        <trans-unit id="e7bc4ecabc444375ca87010a429cf7ecd6617c2d" translate="yes" xml:space="preserve">
          <source>Since all methods are considered to be in revision 0 if untagged, a tag of Q_REVISION(0) is invalid and ignored.</source>
          <target state="translated">タグ付けされていない場合、すべてのメソッドはリビジョン0とみなされるので、Q_REVISION(0)のタグは無効で無視されます。</target>
        </trans-unit>
        <trans-unit id="9965696f6ac437e10873ef66f20ebe189b0f8a5b" translate="yes" xml:space="preserve">
          <source>Since all methods are considered to be in revision &lt;code&gt;0&lt;/code&gt; if untagged, a tag of &lt;code&gt;Q_REVISION(0)&lt;/code&gt; or &lt;code&gt;Q_REVISION(0, 0)&lt;/code&gt; is invalid and ignored.</source>
          <target state="translated">タグが &lt;code&gt;Q_REVISION(0)&lt;/code&gt; ない場合、すべてのメソッドはリビジョン &lt;code&gt;0&lt;/code&gt; であると見なされるため、Q_REVISION（0）または &lt;code&gt;Q_REVISION(0, 0)&lt;/code&gt; ）のタグは無効であり、無視されます。</target>
        </trans-unit>
        <trans-unit id="d8d52fb4ea814e17bd0d29a2baf41a887a687a96" translate="yes" xml:space="preserve">
          <source>Since an attribute must appear in an element, for each attribute in the result set, we must create an XML element. We can do that using a &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-for-let&quot;&gt;&lt;i&gt;for&lt;/i&gt; clause&lt;/a&gt; with a &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-variables&quot;&gt;bound variable&lt;/a&gt;, and a &lt;a href=&quot;http://www.w3.org/TR/xquery/#id-orderby-return&quot;&gt;&lt;i&gt;return&lt;/i&gt; clause&lt;/a&gt; with an element constructor:</source>
          <target state="translated">属性は要素に表示される必要があるため、結果セットの属性ごとに、XML要素を作成する必要があります。私たちは、使用していることを行うことができます&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-for-let&quot;&gt;&lt;i&gt;のための&lt;/i&gt;句&lt;/a&gt;に&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-variables&quot;&gt;バインドされた変数&lt;/a&gt;、および&lt;a href=&quot;http://www.w3.org/TR/xquery/#id-orderby-return&quot;&gt;&lt;i&gt;リターン&lt;/i&gt;句&lt;/a&gt;要素コンストラクタを持ちます：</target>
        </trans-unit>
        <trans-unit id="7e026d99af3c6c9d7ec4ee3c77a81e8aad6267df" translate="yes" xml:space="preserve">
          <source>Since bindings are C++ lambda expressions, they may do anything that's possible in C++. This includes calling other functions. If those functions access values held by QProperty, they automatically become dependencies to the binding.</source>
          <target state="translated">バインディングはC++のラムダ式なので、C++で可能なことは何でもできます。これには、他の関数の呼び出しも含まれます。これらの関数が QProperty が保持する値にアクセスすると、自動的にバインディングへの依存関係になります。</target>
        </trans-unit>
        <trans-unit id="023dfeafbf3bd18e64aaaef8321f75fb28c1a6f7" translate="yes" xml:space="preserve">
          <source>Since both slots and signals can be used as receivers for signals, and the same connections can be made many times, the number of receivers is the same as the number of connections made from this signal.</source>
          <target state="translated">スロットと信号の両方を信号の受信機として使用することができ、同じ接続を何度も行うことができるので、受信機の数は、この信号から行われる接続の数と同じになる。</target>
        </trans-unit>
        <trans-unit id="0b551c3493c7acafb5583cabd2e68fc93c59f679" translate="yes" xml:space="preserve">
          <source>Since cells can contain other document elements, they too can be formatted and styled as necessary.</source>
          <target state="translated">セルは他の文書要素を含むことができるので、それらも必要に応じて書式設定やスタイル設定を行うことができます。</target>
        </trans-unit>
        <trans-unit id="8f23ba8fdf5f781a9b7b2ea70b5f43d0a346721e" translate="yes" xml:space="preserve">
          <source>Since datagrams can empty, an empty &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is a valid value for</source>
          <target state="translated">データグラムは空になる可能性があるため、空の&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;は</target>
        </trans-unit>
        <trans-unit id="005a8f2d5cd8146d07f9b92a67aeb94680516118" translate="yes" xml:space="preserve">
          <source>Since dock widgets are &lt;a href=&quot;designer-using-containers&quot;&gt;container widgets&lt;/a&gt;, they can be added to a form in the usual way. Once added to a form, dock widgets are not placed in any particular dock area by default; you need to set the &lt;b&gt;docked&lt;/b&gt; property to true for each widget and choose an appropriate value for its &lt;b&gt;dockWidgetArea&lt;/b&gt; property.</source>
          <target state="translated">ドックウィジェットは&lt;a href=&quot;designer-using-containers&quot;&gt;コンテナウィジェット&lt;/a&gt;であるため、通常の方法でフォームに追加できます。フォームに追加されると、ドックウィジェットはデフォルトでは特定のドック領域に配置されません。各ウィジェットの&lt;b&gt;ドッキング&lt;/b&gt;プロパティをtrueに設定し、その&lt;b&gt;dockWidgetArea&lt;/b&gt;プロパティに適切な値を選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="537dddf1ee37a153e989033c8c00fdd9b282dcbc" translate="yes" xml:space="preserve">
          <source>Since dock widgets are &lt;a href=&quot;designer-using-containers#&quot;&gt;container widgets&lt;/a&gt;, they can be added to a form in the usual way. Once added to a form, dock widgets are not placed in any particular dock area by default; you need to set the &lt;b&gt;docked&lt;/b&gt; property to true for each widget and choose an appropriate value for its &lt;b&gt;dockWidgetArea&lt;/b&gt; property.</source>
          <target state="translated">ドックウィジェットは&lt;a href=&quot;designer-using-containers#&quot;&gt;コンテナウィジェットな&lt;/a&gt;ので、通常の方法でフォームに追加できます。フォームに追加されたドックウィジェットは、デフォルトでは特定のドック領域に配置されません。各ウィジェットの&lt;b&gt;docked&lt;/b&gt;プロパティをtrue に設定し、その&lt;b&gt;dockWidgetArea&lt;/b&gt;プロパティに適切な値を選択する必要があります。</target>
        </trans-unit>
        <trans-unit id="a71b62a2c93b1f0890adcf5b7d5c3efe2ff63542" translate="yes" xml:space="preserve">
          <source>Since each view transition is run once for each item affected by the transition, the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; properties can be used within a transition to define custom behavior for each item's transition. For example, the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; in the previous example could use this information to create a ripple-type effect on the movement of the displaced items.</source>
          <target state="translated">各ビュー遷移は、遷移の影響を受けるアイテムごとに1回実行されるため、遷移内で&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;プロパティを使用して、各アイテムの遷移のカスタム動作を定義できます。たとえば、前の例の&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;は、この情報を使用して、移動されたアイテムの動きに波紋タイプの効果を作成できます。</target>
        </trans-unit>
        <trans-unit id="4f080fac06f9d8c1240b5097a9b9bea751b806f9" translate="yes" xml:space="preserve">
          <source>Since each view transition is run once for each item affected by the transition, the ViewTransition properties can be used within a transition to define custom behavior for each item's transition. For example, the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; in the previous example could use this information to create a ripple-type effect on the movement of the displaced items.</source>
          <target state="translated">各ビュートランジションは、トランジションの影響を受けるアイテムごとに1回実行されるため、トランジション内でViewTransitionプロパティを使用して、各アイテムのトランジションのカスタム動作を定義できます。たとえば、前の例の&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;は、この情報を使用して、移動されたアイテムの動きにリップルタイプの効果を作成できます。</target>
        </trans-unit>
        <trans-unit id="a7ef9e71211a014ac0ab8f62e921670354b1eadc" translate="yes" xml:space="preserve">
          <source>Since elements, text nodes, comments, processing instructions, etc., cannot exist outside the context of a document, the document class also contains the factory functions needed to create these objects. The node objects created have an &lt;a href=&quot;qdomnode#ownerDocument&quot;&gt;ownerDocument&lt;/a&gt;() function which associates them with the document within whose context they were created. The DOM classes that will be used most often are &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt;, &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt;, &lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; and &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt;.</source>
          <target state="translated">要素、テキストノード、コメント、処理命令などはドキュメントのコンテキスト外には存在できないため、ドキュメントクラスには、これらのオブジェクトの作成に必要なファクトリ関数も含まれています。作成されたノードオブジェクトには、それらが作成されたコンテキスト内のドキュメントにそれらを関連付ける&lt;a href=&quot;qdomnode#ownerDocument&quot;&gt;ownerDocument&lt;/a&gt;（）関数があります。最も頻繁に使用されるDOMクラスは&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt;、&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt;、&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt;と&lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a1e95e5eae55fa55f6fe24298ed8859c0b1fbfd0" translate="yes" xml:space="preserve">
          <source>Since elements, text nodes, comments, processing instructions, etc., cannot exist outside the context of a document, the document class also contains the factory functions needed to create these objects. The node objects created have an &lt;a href=&quot;qdomnode#ownerDocument&quot;&gt;ownerDocument&lt;/a&gt;() function which associates them with the document within whose context they were created. The DOM classes that will be used most often are &lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt;, QDomDocument, &lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt; and &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt;.</source>
          <target state="translated">要素、テキストノード、コメント、処理命令などはドキュメントのコンテキスト外に存在できないため、ドキュメントクラスには、これらのオブジェクトを作成するために必要なファクトリ関数も含まれています。作成されたノードオブジェクトには、それらが作成されたコンテキスト内のドキュメントにそれらを関連付ける&lt;a href=&quot;qdomnode#ownerDocument&quot;&gt;ownerDocument&lt;/a&gt;（）関数があります。最も頻繁に使用されるDOMクラスは&lt;a href=&quot;qdomnode&quot;&gt;QDomNode&lt;/a&gt;、QDomDocument、&lt;a href=&quot;qdomelement&quot;&gt;QDomElement&lt;/a&gt;と&lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9891039e2abaa07ff7db1caff7d6d9fe211c17c3" translate="yes" xml:space="preserve">
          <source>Since foreach creates a copy of the container, using a non-const reference for the variable does not allow you to modify the original container. It only affects the copy, which is probably not what you want.</source>
          <target state="translated">foreachはコンテナのコピーを作成するので、変数にconst以外の参照を使用しても、元のコンテナを変更することはできません。これはコピーに影響を与えるだけで、おそらくあなたが望むものではありません。</target>
        </trans-unit>
        <trans-unit id="cbe1c82e755809a64ce8ade3b9d97bb65a663527" translate="yes" xml:space="preserve">
          <source>Since height maps do not contain values for X or Z axes, those values need to be given separately using &lt;a href=&quot;qheightmapsurfacedataproxy#minXValue-prop&quot;&gt;minXValue&lt;/a&gt;, &lt;a href=&quot;qheightmapsurfacedataproxy#maxXValue-prop&quot;&gt;maxXValue&lt;/a&gt;, &lt;a href=&quot;qheightmapsurfacedataproxy#minZValue-prop&quot;&gt;minZValue&lt;/a&gt;, and &lt;a href=&quot;qheightmapsurfacedataproxy#maxZValue-prop&quot;&gt;maxZValue&lt;/a&gt; properties. X-value corresponds to image horizontal direction and Z-value to the vertical. Setting any of these properties triggers asynchronous re-resolving of any existing height map.</source>
          <target state="translated">高さマップにはX軸またはZ軸の値が含まれていないため、これらの値は、&lt;a href=&quot;qheightmapsurfacedataproxy#minXValue-prop&quot;&gt;minXValue&lt;/a&gt;、&lt;a href=&quot;qheightmapsurfacedataproxy#maxXValue-prop&quot;&gt;maxXValue&lt;/a&gt;、&lt;a href=&quot;qheightmapsurfacedataproxy#minZValue-prop&quot;&gt;minZValue&lt;/a&gt;、および&lt;a href=&quot;qheightmapsurfacedataproxy#maxZValue-prop&quot;&gt;maxZValue&lt;/a&gt;プロパティを使用して個別に指定する必要があります。X値は画像の水平方向に対応し、Z値は垂直方向に対応します。これらのプロパティのいずれかを設定すると、既存の高さマップの非同期再解決がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="971680c0f081fcfe4d0a34d0ba6da76acbc12fd4" translate="yes" xml:space="preserve">
          <source>Since height maps do not contain values for X or Z axes, those values need to be given separately using &lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#minXValue-prop&quot;&gt;minXValue&lt;/a&gt;, &lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#maxXValue-prop&quot;&gt;maxXValue&lt;/a&gt;, &lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#minZValue-prop&quot;&gt;minZValue&lt;/a&gt;, and &lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#maxZValue-prop&quot;&gt;maxZValue&lt;/a&gt; properties. X-value corresponds to image horizontal direction and Z-value to the vertical. Setting any of these properties triggers asynchronous re-resolving of any existing height map.</source>
          <target state="translated">高さマップにはX軸またはZ軸の値が含まれていないため、これらの値は、&lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#minXValue-prop&quot;&gt;minXValue&lt;/a&gt;、&lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#maxXValue-prop&quot;&gt;maxXValue&lt;/a&gt;、&lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#minZValue-prop&quot;&gt;minZValue&lt;/a&gt;、および&lt;a href=&quot;qml-qtdatavisualization-heightmapsurfacedataproxy#maxZValue-prop&quot;&gt;maxZValue&lt;/a&gt;プロパティを使用して個別に指定する必要があります。X値は画像の水平方向に対応し、Z値は垂直方向に対応します。これらのプロパティのいずれかを設定すると、既存の高さマップの非同期再解決がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="d0e088827722c6720f6dcf7c00197402521e3766" translate="yes" xml:space="preserve">
          <source>Since input methods need to be able to query certain properties from the widget or graphics item, subclasses must also implement &lt;a href=&quot;qwidget#inputMethodQuery&quot;&gt;QWidget::inputMethodQuery&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#inputMethodQuery&quot;&gt;QGraphicsItem::inputMethodQuery&lt;/a&gt;(), respectively.</source>
          <target state="translated">インプットメソッドはウィジェットまたはグラフィックスアイテムから特定のプロパティをクエリできる必要があるため、サブクラスはそれぞれ&lt;a href=&quot;qwidget#inputMethodQuery&quot;&gt;QWidget :: inputMethodQuery&lt;/a&gt;（）および&lt;a href=&quot;qgraphicsitem#inputMethodQuery&quot;&gt;QGraphicsItem :: inputMethodQuery&lt;/a&gt;（）も実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="20b8da869bc66b72321b9cdec635890c922ff24b" translate="yes" xml:space="preserve">
          <source>Since it is not possible to individually add or remove items from a list or object stored in a &lt;code&gt;variant&lt;/code&gt;, the only way to modify its contents is to reassign a new value. However, this is not efficient, as it causes the value to be serialized and deserialized.</source>
          <target state="translated">&lt;code&gt;variant&lt;/code&gt; に保存されているリストまたはオブジェクトからアイテムを個別に追加または削除することはできないため、その内容を変更する唯一の方法は、新しい値を再割り当てすることです。ただし、値がシリアル化および逆シリアル化されるため、これは効率的ではありません。</target>
        </trans-unit>
        <trans-unit id="b23b62b0af3dbcc799a015982ff9cfad21c7874a" translate="yes" xml:space="preserve">
          <source>Since it is possible to put your own values on the &lt;code&gt;CONFIG&lt;/code&gt; line, this provides you with a convenient way to customize project files and fine-tune the generated Makefiles.</source>
          <target state="translated">&lt;code&gt;CONFIG&lt;/code&gt; 行に独自の値を置くことができるため、プロジェクトファイルをカスタマイズし、生成されたMakefileを微調整する便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="c0e3003b3bb6df8ef78f852657286b8369a9d7d0" translate="yes" xml:space="preserve">
          <source>Since it is so common and people are used to it, it's a good idea to support it for most widgets. However, there is also an important reason to avoid it: you may not want to remove focus from the widget where it was.</source>
          <target state="translated">これは非常に一般的で、人々が慣れているので、ほとんどのウィジェットでサポートするのは良いアイデアです。しかし、これを避けるべき重要な理由もあります:ウィジェットがあった場所からフォーカスを削除したくない場合があります。</target>
        </trans-unit>
        <trans-unit id="59d47353590cced78ac1508c8305fad3de0230bf" translate="yes" xml:space="preserve">
          <source>Since it's a Java-like iterator, the &lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt; will point immediately before the first result. Every result is returned as a &lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt; object. The &lt;a href=&quot;qregularexpressionmatchiterator#hasNext&quot;&gt;hasNext()&lt;/a&gt; function will return true if there's at least one more result, and &lt;a href=&quot;qregularexpressionmatchiterator#next&quot;&gt;next()&lt;/a&gt; will return the next result and advance the iterator. Continuing from the previous example:</source>
          <target state="translated">これはJavaのような反復子なので、&lt;a href=&quot;qregularexpressionmatchiterator&quot;&gt;QRegularExpressionMatchIterator&lt;/a&gt;は最初の結果の直前を指します。すべての結果は&lt;a href=&quot;qregularexpressionmatch&quot;&gt;QRegularExpressionMatch&lt;/a&gt;オブジェクトとして返されます。&lt;a href=&quot;qregularexpressionmatchiterator#hasNext&quot;&gt;hasNext（）&lt;/a&gt;関数は、少なくとも1つの以上の結果があります場合はtrueを返し、かつます&lt;a href=&quot;qregularexpressionmatchiterator#next&quot;&gt;次の（）&lt;/a&gt;次の結果を返し、イテレータを進めます。前の例の続き：</target>
        </trans-unit>
        <trans-unit id="8eb6a81fa8f8a2a654ffa923339b37385bd3c8f9" translate="yes" xml:space="preserve">
          <source>Since more than one &lt;a href=&quot;#source&quot;&gt;Source&lt;/a&gt; can be shared by a host node, each &lt;a href=&quot;#source&quot;&gt;Source&lt;/a&gt; requires a name. All &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; generated headers include a way for the node to determine the class name (&lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt; for replica/simplesource/source types, or a static name() function for the SourceAPI type). If you pass your own &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; type to &lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;QRemoteObjectHostBase::enableRemoting&lt;/a&gt;(), the name will be determined using the following logic:</source>
          <target state="translated">ホストノードは複数の&lt;a href=&quot;#source&quot;&gt;ソース&lt;/a&gt;を共有できるため、各&lt;a href=&quot;#source&quot;&gt;ソースに&lt;/a&gt;は名前が必要です。全て&lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt;生成されたヘッダーは、ノードは、クラス名を（決定するための方法を含む&lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;レプリカ/ simplesource /ソースタイプ、またはSourceAPIタイプの静的な名前（）関数のために）。独自の&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;タイプを&lt;a href=&quot;qremoteobjecthostbase#enableRemoting&quot;&gt;QRemoteObjectHostBase :: enableRemoting&lt;/a&gt;（）に渡すと、名前は次のロジックを使用して決定されます。</target>
        </trans-unit>
        <trans-unit id="3bc50f80abef4d86f2b1249a5d62cfdc334b41b8" translate="yes" xml:space="preserve">
          <source>Since multiple Modbus server instances can interact with a Modbus client at the same time (using a serial bus), servers are identified by their &lt;a href=&quot;qmodbusserver#serverAddress&quot;&gt;serverAddress&lt;/a&gt;().</source>
          <target state="translated">複数のModbusサーバーインスタンスが同時に（シリアルバスを使用して）Modbusクライアントと対話できるため、サーバーは&lt;a href=&quot;qmodbusserver#serverAddress&quot;&gt;serverAddress&lt;/a&gt;（）で識別されます。</target>
        </trans-unit>
        <trans-unit id="d8c435d6930171c91e3cc36c2e1e287b0152b639" translate="yes" xml:space="preserve">
          <source>Since no shortcut key sequence is specified, the shortcut will not emit any signals.</source>
          <target state="translated">ショートカットのキー配列が指定されていないため、ショートカットは信号を発しません。</target>
        </trans-unit>
        <trans-unit id="3e10119ec78e708c849c3ecd5b419112c651948b" translate="yes" xml:space="preserve">
          <source>Since pressing &lt;b&gt;Tab&lt;/b&gt; is so common, most widgets that can have focus should support tab focus. The major exception is widgets that are rarely used, and where there is some keyboard accelerator or error handler that moves the focus.</source>
          <target state="translated">&lt;b&gt;タブを&lt;/b&gt;押すことは非常に一般的であるため、フォーカスを持つことができるほとんどのウィジェットはタブフォーカスをサポートする必要があります。主な例外は、めったに使用されないウィジェットであり、フォーカスを移動するキーボードアクセラレータまたはエラーハンドラーがあります。</target>
        </trans-unit>
        <trans-unit id="cb2c0db3744727dd2fb975aa0d8f3fb21985c95a" translate="yes" xml:space="preserve">
          <source>Since programs need to react in varied and complex ways, Qt's event delivery mechanisms are flexible. The documentation for &lt;a href=&quot;qcoreapplication#notify&quot;&gt;QCoreApplication::notify&lt;/a&gt;() concisely tells the whole story; the</source>
          <target state="translated">プログラムは多様で複雑な方法で反応する必要があるため、Qtのイベント配信メカニズムは柔軟です。&lt;a href=&quot;qcoreapplication#notify&quot;&gt;QCoreApplication :: notify&lt;/a&gt;（）のドキュメントは、全体のストーリーを簡潔に伝えています。の</target>
        </trans-unit>
        <trans-unit id="d5d7080a94036c52b7a9f961388010fd5d18fc6a" translate="yes" xml:space="preserve">
          <source>Since proxy models inherit from &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, they can be connected to any kind of view, and can be shared between views. They can also be used to process the information obtained from other proxy models in a pipeline arrangement.</source>
          <target state="translated">プロキシモデルは&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModelを&lt;/a&gt;継承しているため、あらゆる種類のビューに接続でき、ビュー間で共有できます。また、パイプライン構成で他のプロキシモデルから取得した情報を処理するために使用することもできます。</target>
        </trans-unit>
        <trans-unit id="821803beea4bf422d7e088c15e21a9cac5bd5da9" translate="yes" xml:space="preserve">
          <source>Since rows in this model correspond to strings in a list, the &lt;code&gt;insertRows()&lt;/code&gt; function inserts a number of empty strings into the string list before the specified position. The number of strings inserted is equivalent to the number of rows specified.</source>
          <target state="translated">このモデルの行はリストの文字列に対応しているため、 &lt;code&gt;insertRows()&lt;/code&gt; 関数は、指定された位置の前の文字列リストにいくつかの空の文字列を挿入します。挿入される文字列の数は、指定された行の数と同じです。</target>
        </trans-unit>
        <trans-unit id="16d8cf90e6f653593df7e71c1d01bb6ac812fc94" translate="yes" xml:space="preserve">
          <source>Since sensor backends are created on demand, the sensor plugin is loaded and asked to register the sensor backends it handles. The plugin should implement &lt;a href=&quot;qsensorplugininterface#registerSensors&quot;&gt;QSensorPluginInterface::registerSensors&lt;/a&gt;() and call &lt;a href=&quot;qsensormanager#registerBackend&quot;&gt;QSensorManager::registerBackend&lt;/a&gt;() to register available backends. Typically the plugin will also inherit from &lt;a href=&quot;qsensorbackendfactory&quot;&gt;QSensorBackendFactory&lt;/a&gt; and implement &lt;a href=&quot;qsensorbackendfactory#createBackend&quot;&gt;QSensorBackendFactory::createBackend&lt;/a&gt;() in order to instantiate backends it has registered.</source>
          <target state="translated">センサーバックエンドはオンデマンドで作成されるため、センサープラグインが読み込まれ、処理するセンサーバックエンドを登録するように求められます。プラグインが実装する必要があります&lt;a href=&quot;qsensorplugininterface#registerSensors&quot;&gt;QSensorPluginInterface :: registerSensors&lt;/a&gt;（）を呼び出すと&lt;a href=&quot;qsensormanager#registerBackend&quot;&gt;QSensorManager :: registerBackendを&lt;/a&gt;利用できるバックエンドを登録するには（）。通常、プラグインは&lt;a href=&quot;qsensorbackendfactory&quot;&gt;QSensorBackendFactory&lt;/a&gt;から継承し、登録したバックエンドをインスタンス化するために&lt;a href=&quot;qsensorbackendfactory#createBackend&quot;&gt;QSensorBackendFactory :: createBackend&lt;/a&gt;（）を実装します。</target>
        </trans-unit>
        <trans-unit id="cc161e230bab6742eb8a517072af84d3219bc7b7" translate="yes" xml:space="preserve">
          <source>Since sharing data over NFC is effectively a data pipe between two processes (one on the sender and one of the receiver), the application developer should only create a single instance of &lt;a href=&quot;qnearfieldsharemanager&quot;&gt;QNearFieldShareManager&lt;/a&gt; per application. This avoids the possibility that different parts of the same application attempt to all consume data transferred over NFC.</source>
          <target state="translated">NFCを介してデータを共有することは、事実上2つのプロセス（送信側と受信側の1つ）間のデータパイプであるため、アプリケーション開発者はアプリケーションごとに&lt;a href=&quot;qnearfieldsharemanager&quot;&gt;QNearFieldShareManagerの&lt;/a&gt;インスタンスを1 つだけ作成する必要があります。これにより、同じアプリケーションのさまざまな部分がすべてNFC経由で転送されたデータを消費しようとする可能性が回避されます。</target>
        </trans-unit>
        <trans-unit id="13528fcf1c9896466f5b5ad1a191e9037b1bfcef" translate="yes" xml:space="preserve">
          <source>Since sharing data over NFC is effectively a data pipe between two processes (one on the sender and one of the receiver), the application developer should only create a single instance of QNearFieldShareManager per application. This avoids the possibility that different parts of the same application attempt to all consume data transferred over NFC.</source>
          <target state="translated">NFC 上でのデータ共有は事実上、2 つのプロセス(送信側と受信側の 1 つ)間のデータパイプであるため、アプリケーショ ン開発者はアプリケーションごとに QNearFieldShareManager のインスタンスを 1 つだけ作成する必要があります。これにより、同じアプリケーションの異なる部分がすべての NFC 上で転送されたデータを消費しようとする可能性を回避できます。</target>
        </trans-unit>
        <trans-unit id="244aeedde06204f9062ec3c02fb64e89c1ef4496" translate="yes" xml:space="preserve">
          <source>Since slots are normal member functions, they follow the normal C++ rules when called directly. However, as slots, they can be invoked by any component, regardless of its access level, via a signal-slot connection. This means that a signal emitted from an instance of an arbitrary class can cause a private slot to be invoked in an instance of an unrelated class.</source>
          <target state="translated">スロットは通常のメンバ関数なので、直接呼び出された場合は通常の C++のルールに従います。しかし、スロットとしては、アクセス レベルに関係なく、任意のコンポーネントからシグナル・スロット接続を介して呼び出すことができます。つまり、任意のクラスのインスタンスから発せられるシグナルによって、関係のないクラスのインスタンスでプライベート・スロットが呼び出される可能性があります。</target>
        </trans-unit>
        <trans-unit id="123322ae586987c972d7f5c03547cc99a34b2df2" translate="yes" xml:space="preserve">
          <source>Since text blocks are used to separate other document elements, each frame will always contain at least one text block, and zero or more child frames. We can inspect the contents of a frame by using a &lt;a href=&quot;qtextframe-iterator&quot;&gt;QTextFrame::iterator&lt;/a&gt; to traverse the frame's child elements:</source>
          <target state="translated">テキストブロックは他のドキュメント要素を分離するために使用されるため、各フレームには常に少なくとも1つのテキストブロックと0個以上の子フレームが含まれます。&lt;a href=&quot;qtextframe-iterator&quot;&gt;QTextFrame :: iterator&lt;/a&gt;を使用してフレームの子要素をトラバースすることで、フレームの内容を検査できます。</target>
        </trans-unit>
        <trans-unit id="a89c9492ef54f6a33118c8304f23e1d3397273d1" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object does so much initialization, it</source>
          <target state="translated">以来&lt;a href=&quot;qapplication&quot;&gt;はQApplicationの&lt;/a&gt;オブジェクトは、そんなに初期化を行います</target>
        </trans-unit>
        <trans-unit id="6bf42ae757b5146dd4c72bf1aa7b1dfe63a96384" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; object does so much initialization, it</source>
          <target state="translated">以来&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplicationの&lt;/a&gt;オブジェクトは、そんなに初期化を行います</target>
        </trans-unit>
        <trans-unit id="8451f42c7c2f32ff2d998d6e42442b138e8b1ec5" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; object has been specified on the &lt;code&gt;color&lt;/code&gt; property using the</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt;オブジェクトが &lt;code&gt;color&lt;/code&gt; プロパティで指定されているので、</target>
        </trans-unit>
        <trans-unit id="906c4edad526acb05b7b1d8eb3f1611e702b21a1" translate="yes" xml:space="preserve">
          <source>Since the &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; starts with a blank page, we only need to call the &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage()&lt;/a&gt; function after drawing each page, except for the last page.</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;は空白のページから始まるので、最後のページを除いて、各ページを描画した後で&lt;a href=&quot;qprinter#newPage&quot;&gt;newPage（）&lt;/a&gt;関数を呼び出すだけで済みます。</target>
        </trans-unit>
        <trans-unit id="bb46430f4d1518aa921170c748a0841fee6bdaa6" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;*&lt;/code&gt; quantifier is greedy, then reporting a complete match could be an error, because after the current subject &lt;code&gt;&quot;abc&quot;&lt;/code&gt; there may be other occurrences of &lt;code&gt;&quot;abc&quot;&lt;/code&gt;. For instance, the complete text could have been &quot;abcabcX&quot;, and therefore the</source>
          <target state="translated">以来 &lt;code&gt;*&lt;/code&gt; 数量詞は貪欲である現在の主題の後にあるため、完全な一致を報告することは、エラーの可能性があり &lt;code&gt;&quot;abc&quot;&lt;/code&gt; の他の発生があるかもしれない &lt;code&gt;&quot;abc&quot;&lt;/code&gt; 。たとえば、完全なテキストは「abcabcX」であり、したがって</target>
        </trans-unit>
        <trans-unit id="f27e032c2b5aec68df8c1dab952f28c851b0806b" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;WorkerScript.onMessage()&lt;/code&gt; function is run in a separate thread, the JavaScript file is evaluated in a context separate from the main QML engine. This means that unlike an ordinary JavaScript file that is imported into QML, the &lt;code&gt;script.mjs&lt;/code&gt; in the above example cannot access the properties, methods or other attributes of the QML item, nor can it access any context properties set on the QML object through &lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;.</source>
          <target state="translated">以来 &lt;code&gt;WorkerScript.onMessage()&lt;/code&gt; 関数は、別のスレッドで実行され、JavaScriptファイルは、メインQMLエンジンから別のコンテキストで評価されます。つまり、QMLにインポートされる通常のJavaScriptファイルとは異なり、上記の例の &lt;code&gt;script.mjs&lt;/code&gt; は、QMLアイテムのプロパティ、メソッド、またはその他の属性にアクセスできず、&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContextを&lt;/a&gt;介してQMLオブジェクトに設定されたコンテキストプロパティにもアクセスできません。</target>
        </trans-unit>
        <trans-unit id="04354b9aa87d327bd05e9542b5e1065e74eb10f4" translate="yes" xml:space="preserve">
          <source>Since the FrameGraph tree is entirely data-driven and can be modified dynamically at runtime, you can:</source>
          <target state="translated">FrameGraph ツリーは完全にデータ駆動型であり、実行時に動的に変更することができるため、以下のようなことが可能です。</target>
        </trans-unit>
        <trans-unit id="381a67ce881876fe250b56cb105dbe6678f34e94" translate="yes" xml:space="preserve">
          <source>Since the HTTP header can set more than one cookie at the same time, this function returns a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qnetworkcookie&quot;&gt;QNetworkCookie&lt;/a&gt;&amp;gt;, one for each cookie that is parsed.</source>
          <target state="translated">HTTPヘッダーは同時に複数のCookieを設定できるため、この関数は解析されるCookieごとに1つずつ、&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qnetworkcookie&quot;&gt;QNetworkCookie&lt;/a&gt; &amp;gt;を返します。</target>
        </trans-unit>
        <trans-unit id="7cd22115e3024bb09f7f4a854faa590b1a545398" translate="yes" xml:space="preserve">
          <source>Since the QApplication object does so much initialization, it</source>
          <target state="translated">QApplicationオブジェクトは非常に多くの初期化を行います。</target>
        </trans-unit>
        <trans-unit id="b9b3399320cca89a83d2b47296a5495b5537cc2c" translate="yes" xml:space="preserve">
          <source>Since the QDomClasses do not know which attributes are element IDs, this function returns always a &lt;a href=&quot;qdomnode#isNull&quot;&gt;null element&lt;/a&gt;. This may change in a future version.</source>
          <target state="translated">QDomClassesはどの属性が要素IDであるかを知らないため、この関数は常に&lt;a href=&quot;qdomnode#isNull&quot;&gt;null要素を&lt;/a&gt;返します。これは将来のバージョンで変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="d763ffe116df2b54477fd8b09ec9d70e99767f5f" translate="yes" xml:space="preserve">
          <source>Since the QGuiApplication object does so much initialization, it</source>
          <target state="translated">QGuiApplicationオブジェクトは非常に多くの初期化を行います。</target>
        </trans-unit>
        <trans-unit id="6a354fdb440f6054d94f3215fbde91e2373c453b" translate="yes" xml:space="preserve">
          <source>Since the Q_OS_.* regular expression (specified using the &lt;code&gt;defines&lt;/code&gt; variable) matches &lt;a href=&quot;#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt;, QDoc will process the code within #ifdef and #endif in our example.</source>
          <target state="translated">Q_OS _。*正規表現（ &lt;code&gt;defines&lt;/code&gt; 変数を使用して指定）は&lt;a href=&quot;#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt;に一致するため、QDocはこの例の#ifdefおよび#endif内のコードを処理します。</target>
        </trans-unit>
        <trans-unit id="35e993a54f94a89afed738907e354849eb69030e" translate="yes" xml:space="preserve">
          <source>Since the Q_OS_.* regular expression (specified using the &lt;code&gt;defines&lt;/code&gt; variable) matches &lt;a href=&quot;qtglobal#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt;, QDoc will process the code within #ifdef and #endif in our example.</source>
          <target state="translated">Q_OS _。*正規表現（ &lt;code&gt;defines&lt;/code&gt; 変数を使用して指定）は&lt;a href=&quot;qtglobal#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt;と一致するため、QDocはこの例の#ifdefおよび#endif内のコードを処理します。</target>
        </trans-unit>
        <trans-unit id="34a90d66b3917dac922cf49fb9f3ea3033e517ff" translate="yes" xml:space="preserve">
          <source>Since the Wavefront .obj format describes an object in 3D space, the coordinates have to be projected into 2D before they can be displayed in Qt Quick.</source>
          <target state="translated">Wavefront .obj形式は3D空間のオブジェクトを記述しているため、Qt Quickで表示する前に座標を2Dに投影する必要があります。</target>
        </trans-unit>
        <trans-unit id="a8b6f176917e9ec2c592cc173feed6eb5f5e3d6a" translate="yes" xml:space="preserve">
          <source>Since the capabilities of the supported output formats vary considerably, the writer simply outputs the appropriate subset of objects for each format. This typically includes the formatted text and images contained in a document.</source>
          <target state="translated">サポートされている出力フォーマットの機能は大きく異なるため、ライターは各フォーマットに適したオブジェクトのサブセットを出力します。これには通常、文書に含まれるフォーマットされたテキストや画像が含まれます。</target>
        </trans-unit>
        <trans-unit id="ed2642f3713582deaef42d604dcdd280f1b31041" translate="yes" xml:space="preserve">
          <source>Since the constructor cannot provide feedback when the initialization of the painter failed you should rather use &lt;a href=&quot;qpainter#begin&quot;&gt;begin&lt;/a&gt;() and &lt;a href=&quot;qpainter#end&quot;&gt;end&lt;/a&gt;() to paint on external devices, e.g. printers.</source>
          <target state="translated">ペインタの初期化が失敗した場合、コンストラクタはフィードバックを提供できないので、&lt;a href=&quot;qpainter#begin&quot;&gt;begin&lt;/a&gt;（）および&lt;a href=&quot;qpainter#end&quot;&gt;end&lt;/a&gt;（）を使用して、プリンタなどの外部デバイスにペイントする必要があります。</target>
        </trans-unit>
        <trans-unit id="48630c088860f2cd3f1f3d456c0cb7a00454eacb" translate="yes" xml:space="preserve">
          <source>Since the example model contains an &lt;code&gt;id&lt;/code&gt; property, it can be referenced by views, such as the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; in this example:</source>
          <target state="translated">サンプルモデルには &lt;code&gt;id&lt;/code&gt; プロパティが含まれているため、この例の&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;などのビューから参照できます。</target>
        </trans-unit>
        <trans-unit id="bac87693c7a8d1c7809faa95d2fb5ba383a73282" translate="yes" xml:space="preserve">
          <source>Since the file is named &lt;code&gt;SquareButton.qml&lt;/code&gt;, &lt;b&gt;this can now be used as a type named &lt;code&gt;SquareButton&lt;/code&gt; by any other QML file within the same directory&lt;/b&gt;. For example, if there was a &lt;code&gt;myapplication.qml&lt;/code&gt; file in the same directory, it could refer to the &lt;code&gt;SquareButton&lt;/code&gt; type:</source>
          <target state="translated">ファイルの名前は &lt;code&gt;SquareButton.qml&lt;/code&gt; で&lt;b&gt;あるため、同じディレクトリ内の他のQMLファイルから &lt;code&gt;SquareButton&lt;/code&gt; という名前のタイプとして使用できるようになりました&lt;/b&gt;。たとえば、同じディレクトリに &lt;code&gt;myapplication.qml&lt;/code&gt; ファイルがある場合、 &lt;code&gt;SquareButton&lt;/code&gt; タイプを参照できます。</target>
        </trans-unit>
        <trans-unit id="544ce4a0160c1f045b5220dd5ce98f056b962a71" translate="yes" xml:space="preserve">
          <source>Since the final &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; does not specify a &lt;code&gt;to&lt;/code&gt; value, the view implicitly sets this value to the item's final position in the view, and so this last animation will move this item to the correct place. If the transition requires the final position of the item for some calculation, this is accessible through &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.destination.</source>
          <target state="translated">最後の&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt;は &lt;code&gt;to&lt;/code&gt; 値を指定しないので、ビューはこの値をビュー内のアイテムの最終位置に暗黙的に設定します。したがって、この最後のアニメーションはこのアイテムを正しい場所に移動します。トランジションが計算のためにアイテムの最終位置を必要とする場合、これは&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; .destination からアクセスできます。</target>
        </trans-unit>
        <trans-unit id="40395761c31839100510da1c6d187b569eec8c3e" translate="yes" xml:space="preserve">
          <source>Since the final &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; does not specify a &lt;code&gt;to&lt;/code&gt; value, the view implicitly sets this value to the item's final position in the view, and so this last animation will move this item to the correct place. If the transition requires the final position of the item for some calculation, this is accessible through ViewTransition.destination.</source>
          <target state="translated">最後の&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt;は &lt;code&gt;to&lt;/code&gt; 値を指定しないため、ビューはこの値をビュー内のアイテムの最終位置に暗黙的に設定します。したがって、この最後のアニメーションはこのアイテムを正しい場所に移動します。トランジションで計算のためにアイテムの最終位置が必要な場合は、ViewTransition.destinationからアクセスできます。</target>
        </trans-unit>
        <trans-unit id="e04868ac9ae40a61dcc709ab9513ee017ad516ae" translate="yes" xml:space="preserve">
          <source>Since the handler classes only describe interfaces you must implement all the functions. We provide the &lt;a href=&quot;qxmldefaulthandler&quot;&gt;QXmlDefaultHandler&lt;/a&gt; class to make this easier: it implements a default behavior (do nothing) for all functions, so you can subclass it and just implement the functions you are interested in.</source>
          <target state="translated">ハンドラクラスはインターフェイスのみを記述するため、すべての関数を実装する必要があります。これを簡単にするために&lt;a href=&quot;qxmldefaulthandler&quot;&gt;QXmlDefaultHandler&lt;/a&gt;クラスを提供します。これは、すべての関数にデフォルトの動作（何もしない）を実装するので、サブクラス化して興味のある関数を実装するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="189661a0851e49ddcd9507be34bf98db7d6fb2cc" translate="yes" xml:space="preserve">
          <source>Since the higher-level API is built on top of the lower-level API, some issues are common to both.</source>
          <target state="translated">上位APIは下位APIの上に構築されているため、両者に共通する問題もあります。</target>
        </trans-unit>
        <trans-unit id="8d4769b25165bddd75f544cd2a957aa4134d2d53" translate="yes" xml:space="preserve">
          <source>Since the maximum numbered place marker value is 99, &lt;code&gt;50&lt;/code&gt; replaces &lt;code&gt;%32&lt;/code&gt;.</source>
          <target state="translated">番号が付けられたプレースマーカーの最大値は99なので、 &lt;code&gt;50&lt;/code&gt; は &lt;code&gt;%32&lt;/code&gt; を置き換えます。</target>
        </trans-unit>
        <trans-unit id="c19d3897d53eaac05df42c156b14a0f5b1b3d2d0" translate="yes" xml:space="preserve">
          <source>Since the model is non-hierarchical, we can safely ignore the model index corresponding to the parent item. By default, models derived from &lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; only contain one column, so we do not need to reimplement the &lt;a href=&quot;qabstractitemmodel#columnCount&quot;&gt;columnCount()&lt;/a&gt; function.</source>
          <target state="translated">モデルは非階層型であるため、親アイテムに対応するモデルインデックスを無視しても問題ありません。デフォルトでは、&lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt;から派生したモデルには1つの列しか含まれていないため、&lt;a href=&quot;qabstractitemmodel#columnCount&quot;&gt;columnCount（）&lt;/a&gt;関数を再実装する必要はありません。</target>
        </trans-unit>
        <trans-unit id="9108e71e48eabb71f2edf74cd037d878fbc7e133" translate="yes" xml:space="preserve">
          <source>Since the model provides a more specialized interface than &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, it is not suitable for use with tree views, although it can be used to provide data to a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;. If you need to represent a simple list of items, and only need a model to contain a single column of data, subclassing the &lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; may be more appropriate.</source>
          <target state="translated">モデルは&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;よりも特殊なインターフェースを提供するため、&lt;a href=&quot;qlistview&quot;&gt;QListViewに&lt;/a&gt;データを提供するために使用できますが、ツリービューでの使用には適していません。アイテムの単純なリストを表す必要があり、データの単一の列を含むモデルのみが必要な場合は、&lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModelを&lt;/a&gt;サブクラス化する方が適切な場合があります。</target>
        </trans-unit>
        <trans-unit id="cd22746342f9e6d6b8e6909f12b4ca7386561581" translate="yes" xml:space="preserve">
          <source>Since the model provides a more specialized interface than &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;, it is not suitable for use with tree views; you will need to subclass &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; if you want to provide a model for that purpose. If you need to use a number of list models to manage data, it may be more appropriate to subclass &lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt; instead.</source>
          <target state="translated">モデルは&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;よりも特別なインターフェースを提供するため、ツリービューでの使用には適していません。そのためのモデルを提供したい場合は、&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt;をサブクラス化する必要があります。複数のリストモデルを使用してデータを管理する必要がある場合は、代わりに&lt;a href=&quot;qabstracttablemodel&quot;&gt;QAbstractTableModel&lt;/a&gt;をサブクラス化する方が適切な場合があります。</target>
        </trans-unit>
        <trans-unit id="9928e7e269ebebcbeffad1feea23bee67f8eb734" translate="yes" xml:space="preserve">
          <source>Since the model represents a one-dimensional structure, the &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() function returns the total number of items in the model. The &lt;a href=&quot;qabstractitemmodel#columnCount&quot;&gt;columnCount&lt;/a&gt;() function is implemented for interoperability with all kinds of views, but by default informs views that the model contains only one column.</source>
          <target state="translated">モデルは1次元構造を表すため、&lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;（）関数はモデル内のアイテムの総数を返します。&lt;a href=&quot;qabstractitemmodel#columnCount&quot;&gt;columnCountの&lt;/a&gt;（）関数は、ビューのすべての種類との相互運用性のために実装されていますが、デフォルトのインフォームビューでモデルが1つの列のみが含まれていること。</target>
        </trans-unit>
        <trans-unit id="7375774ec212ab72d63a3eb2dbe0abccbfd3792c" translate="yes" xml:space="preserve">
          <source>Since the name of the</source>
          <target state="translated">の名前がついてから</target>
        </trans-unit>
        <trans-unit id="b571b81c27b7ff1f73fd9bca0f84aedce87d0a5e" translate="yes" xml:space="preserve">
          <source>Since the reader will inform the handler of parsing errors, it is necessary to reimplement &lt;a href=&quot;qxmlerrorhandler#fatalError&quot;&gt;QXmlErrorHandler::fatalError&lt;/a&gt;() if, for example, we want to stop parsing when such an error occurs:</source>
          <target state="translated">リーダーはハンドラーに解析エラーを通知するため、たとえば、そのようなエラーが発生したときに解析を停止したい場合は、&lt;a href=&quot;qxmlerrorhandler#fatalError&quot;&gt;QXmlErrorHandler :: fatalError&lt;/a&gt;（）を再実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="ab9806229ea7aa4268cf6c017cb5c446754fd6b0" translate="yes" xml:space="preserve">
          <source>Since the release and debug libraries are inside the framework, the app is simply linked against the framework. Then when you run in the debugger, you will get either the release version or the debug version, depending on whether you set &lt;code&gt;DYLD_IMAGE_SUFFIX&lt;/code&gt;. If you don't set it, you get the release version by default (i.e., non _debug). If you set &lt;code&gt;DYLD_IMAGE_SUFFIX=_debug&lt;/code&gt;, you get the debug version.</source>
          <target state="translated">リリースライブラリとデバッグライブラリはフレームワーク内にあるため、アプリはフレームワークにリンクされているだけです。その後、デバッガーで実行すると、 &lt;code&gt;DYLD_IMAGE_SUFFIX&lt;/code&gt; を設定したかどうかに応じて、リリースバージョンまたはデバッグバージョンのいずれかを取得します。設定しない場合、デフォルトでリリースバージョンが取得されます（つまり、_debug以外）。 &lt;code&gt;DYLD_IMAGE_SUFFIX=_debug&lt;/code&gt; を設定すると、デバッグバージョンが取得されます。</target>
        </trans-unit>
        <trans-unit id="127d6280b9489aec62c5fd1a12460ce59f19a286" translate="yes" xml:space="preserve">
          <source>Since the rotation of the reading values is based on the screen orientation, Z values will never change, as the Z axis is perpendicular to the screen. As screen orientation changes in 90 degree steps, rotating the reading values is also done in steps of 90 degrees.</source>
          <target state="translated">読取値の回転は、画面の向きを基準にしているので、Z軸が画面に対して垂直なので、Z値が変わることはありません。画面の向きが90度ステップで変化するので、読取値の回転も90度ステップで行われます。</target>
        </trans-unit>
        <trans-unit id="e6418e31b64c8d22f2e5d66de8863b96d5e8609d" translate="yes" xml:space="preserve">
          <source>Since the sequence is modified in place, QtConcurrent::filter() does not return any results via &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;. However, you can still use &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; and &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; to monitor the status of the filter.</source>
          <target state="translated">シーケンスが適切に変更されているため、QtConcurrent :: filter（）は&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;を介して結果を返しません。ただし、&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;および&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;を使用してフィルターのステータスを監視することはできます。</target>
        </trans-unit>
        <trans-unit id="98c13c4983853a89206b542caf63a498321d7732" translate="yes" xml:space="preserve">
          <source>Since the sequence is modified in place, QtConcurrent::filter() does not return any results via &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;. However, you can still use &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; and &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; to monitor the status of the filter.</source>
          <target state="translated">シーケンスはその場で変更されるため、QtConcurrent :: filter（）は&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;を介して結果を返しません。ただし、&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;および&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;を使用して、フィルターの状況をモニターすることはできます。</target>
        </trans-unit>
        <trans-unit id="eebeaeaf33da6858b9e700c81d41ac9181be3ef3" translate="yes" xml:space="preserve">
          <source>Since the sequence is modified in place, QtConcurrent::map() does not return any results via &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;. However, you can still use &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; and &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; to monitor the status of the map.</source>
          <target state="translated">シーケンスが適切に変更されているため、QtConcurrent :: map（）は&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;を介して結果を返しません。ただし、&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;と&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;を使用してマップのステータスを監視することはできます。</target>
        </trans-unit>
        <trans-unit id="93f208cf18e9bac6bc163f207c352aea589fec86" translate="yes" xml:space="preserve">
          <source>Since the sequence is modified in place, QtConcurrent::map() does not return any results via &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;. However, you can still use &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; and &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; to monitor the status of the map.</source>
          <target state="translated">シーケンスはその場で変更されるため、QtConcurrent :: map（）は&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;を介して結果を返しません。ただし、&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;および&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;を使用して、マップの状況をモニターすることはできます。</target>
        </trans-unit>
        <trans-unit id="a677f9127d99dc65387fe7cc0aa2cb37480b446a" translate="yes" xml:space="preserve">
          <source>Since the structure exposed to views is determined by the underlying data structure, it is up to each model subclass to create its own model indexes by providing implementations of the following functions:</source>
          <target state="translated">ビューに公開される構造は、基礎となるデータ構造によって決定されるので、以下の関数の実装を提供することによって、独自のモデルインデックスを作成するのは各モデルサブクラスに任されています。</target>
        </trans-unit>
        <trans-unit id="2b6bf5f5927e65171595bd113b4f2685c41ebb32" translate="yes" xml:space="preserve">
          <source>Since the text stream uses a buffer, you should not read from the stream using the implementation of a superclass. For instance, if you have a &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; and read from it directly using &lt;a href=&quot;qiodevice#readLine&quot;&gt;QFile::readLine&lt;/a&gt;() instead of using the stream, the text stream's internal position will be out of sync with the file's position.</source>
          <target state="translated">テキストストリームはバッファを使用するため、スーパークラスの実装を使用してストリームから読み取ることはできません。たとえば、&lt;a href=&quot;qfile&quot;&gt;QFileが&lt;/a&gt;あり、ストリームを使用する代わりに&lt;a href=&quot;qiodevice#readLine&quot;&gt;QFile :: readLine&lt;/a&gt;（）を使用して直接読み取る場合、テキストストリームの内部位置はファイルの位置と同期しません。</target>
        </trans-unit>
        <trans-unit id="73f42cd49583be6294d8559b2e169db5a2d6d3fc" translate="yes" xml:space="preserve">
          <source>Since the tool is run at build-time it has limited ability to reason about which properties might change at run-time. Properties where a value is only changing within the properties range, for example the roughness value, will not have any affect on the generated material shader, but properties that are either &lt;b&gt;on&lt;/b&gt; or &lt;b&gt;off&lt;/b&gt;, e.g., setting an image map at run-time, would require a different type of material to be generated. It is therefore recommended that all variants of a material, which enables or disables features in the material, or the scene, are declared as individual components, this will help the tool to generated the correct material shaders.</source>
          <target state="translated">ツールはビルド時に実行されるため、実行時にどのプロパティが変更される可能性があるかを推論する機能は限られています。粗さの値など、値がプロパティ範囲内でのみ変化するプロパティは、生成されたマテリアルシェーダーには影響しませんが、実行時にイメージマップを設定するなど、&lt;b&gt;オン&lt;/b&gt;または&lt;b&gt;オフの&lt;/b&gt;プロパティは影響します。別の種類のマテリアルを生成する必要があります。したがって、マテリアルまたはシーンのフィーチャを有効または無効にするマテリアルのすべてのバリアントを個別のコンポーネントとして宣言することをお勧めします。これにより、ツールが正しいマテリアルシェーダーを生成するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="1dbf2e0b9e787a1587964dc162d301fb8e470c4c" translate="yes" xml:space="preserve">
          <source>Since the top level widget is named &lt;code&gt;Form&lt;/code&gt;, this results in a Python class named &lt;code&gt;Ui_Form&lt;/code&gt; being generated. It provides a function &lt;code&gt;setupUi()&lt;/code&gt;, taking the widget as parameter, which is called to create the UI elements:</source>
          <target state="translated">トップレベルのウィジェットの名前は &lt;code&gt;Form&lt;/code&gt; であるため、これにより &lt;code&gt;Ui_Form&lt;/code&gt; という名前のPythonクラスが生成されます。これは、UI要素を作成するために呼び出されるウィジェットをパラメーターとして &lt;code&gt;setupUi()&lt;/code&gt; 関数setupUi（）を提供します。</target>
        </trans-unit>
        <trans-unit id="5667ffa090e688fa165cc52e47b64e69b69d9645" translate="yes" xml:space="preserve">
          <source>Since the value is changed directly, this bypasses Qt's &lt;a href=&quot;metaobjects&quot;&gt;meta-object system&lt;/a&gt; and the QML engine is not made aware of the property change. This means property bindings to &lt;code&gt;buttonText&lt;/code&gt; would not be updated, and any &lt;code&gt;onButtonTextChanged&lt;/code&gt; handlers would not be called.</source>
          <target state="translated">値が直接変更されるため、これはQtの&lt;a href=&quot;metaobjects&quot;&gt;メタオブジェクトシステム&lt;/a&gt;をバイパスし、QMLエンジンはプロパティの変更を認識しません。つまり、 &lt;code&gt;buttonText&lt;/code&gt; へのプロパティバインディングは更新されず、 &lt;code&gt;onButtonTextChanged&lt;/code&gt; ハンドラーは呼び出されません。</target>
        </trans-unit>
        <trans-unit id="2e96d3b6f35122a7431ed019b59745fbeef128e1" translate="yes" xml:space="preserve">
          <source>Since the view manages the editor widgets for the delegate, we only need to update the model with the contents of the editor supplied. In this case, we ensure that the spin box is up-to-date, and update the model with the value it contains using the index specified.</source>
          <target state="translated">ビューはデリゲートのエディタ・ウィジェットを管理するので、提供されたエディタの内容でモデルを更新するだけで済みます。この場合、スピンボックスが最新であることを確認し、指定されたインデックスを使用してスピンボックスに含まれる値でモデルを更新します。</target>
        </trans-unit>
        <trans-unit id="38f1c99f24451e3839de184b956087289feef13f" translate="yes" xml:space="preserve">
          <source>Since the year is not a whole number of days long, some years are longer than others. The difference may be a whole month or just a single day; the details vary between calendars.</source>
          <target state="translated">1年は全体の日数ではないので、他の年よりも長い年もあります。その差は、1ヶ月の場合もあれば、1日の場合もあり、詳細は暦によって異なります。</target>
        </trans-unit>
        <trans-unit id="f5ca465e018a5d4a4cf99ad5ebd93eb7fbd5397f" translate="yes" xml:space="preserve">
          <source>Since there is no standard way to copy and paste files between applications on X11, various MIME types and conventions are currently in use. For instance, Nautilus expects files to be supplied with a &lt;code&gt;x-special/gnome-copied-files&lt;/code&gt; MIME type with data beginning with the cut/copy action, a newline character, and the URL of the file.</source>
          <target state="translated">X11上のアプリケーション間でファイルをコピーして貼り付ける標準的な方法がないため、現在、さまざまなMIMEタイプと規則が使用されています。たとえば、Nautilusは、ファイルが &lt;code&gt;x-special/gnome-copied-files&lt;/code&gt; MIMEタイプで提供され、カット/コピーアクションで始まるデータ、改行文字、およびファイルのURL が提供されることを想定しています。</target>
        </trans-unit>
        <trans-unit id="978073ac3fe1a847330d2fb7d270469f4c75a440" translate="yes" xml:space="preserve">
          <source>Since there is no tree structure for branch indicators, we only present an image of a tree in the Java style. Each state is marked in the image with a rectangle in a specific color (i.e., the rectangles are not bounding rectangles). All combinations of states you must be aware of are represented in the image.</source>
          <target state="translated">分岐指標にはツリー構造がないので、Javaスタイルのツリーのイメージだけを提示します。各状態は、画像内で特定の色の長方形でマークされています(つまり、長方形は境界線ではありません)。注意しなければならない状態のすべての組み合わせが画像で表現されています。</target>
        </trans-unit>
        <trans-unit id="203ab01d01a1683304d745bdf0046110396bab56" translate="yes" xml:space="preserve">
          <source>Since there may be a physical component to move, the change in zoom value may not be instantaneous.</source>
          <target state="translated">移動する物理的な要素があるかもしれないので、ズーム値の変化は瞬間的ではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="e0c4c005e2242b4b096c28147e6831c90a8fbfd9" translate="yes" xml:space="preserve">
          <source>Since these file formats are more rarely used, the codecs may be less thoroughly debugged against potential security holes. As always, care should be taken when creating applications that may be used to decode uncontrolled data files.</source>
          <target state="translated">これらのファイル形式は使用されることが少ないので、コーデックは潜在的なセキュリティホールに対して十分にデバッグされていない可能性があります。いつものように、制御されていないデータファイルのデコードに使用される可能性のあるアプリケーションを作成する際には、注意が必要です。</target>
        </trans-unit>
        <trans-unit id="dc95a81be984d34176665534b46934eaaf4e5ce5" translate="yes" xml:space="preserve">
          <source>Since this class is designed to do all the up-front calculations at compile-time, it does not offer a setPattern() method.</source>
          <target state="translated">このクラスはコンパイル時にすべての計算を行うように設計されているので、setPattern()メソッドは提供されていません。</target>
        </trans-unit>
        <trans-unit id="e0fcf6a0f210ecb989bb745bfb107e288eb49a89" translate="yes" xml:space="preserve">
          <source>Since this class is only used to refer to string data, and does not take ownership of it, no memory is freed when instances are destroyed.</source>
          <target state="translated">このクラスは文字列データを参照するためだけに使用され、所有権を取らないので、インスタンスが破棄されてもメモリは解放されません。</target>
        </trans-unit>
        <trans-unit id="4b4f662d878db1df2688089ad61e374ab71f0a54" translate="yes" xml:space="preserve">
          <source>Since this function can fail to obtain a valid strong reference to the shared object, you should always verify if the conversion succeeded, by calling &lt;a href=&quot;qsharedpointer#isNull&quot;&gt;QSharedPointer::isNull&lt;/a&gt;() on the returned object.</source>
          <target state="translated">この関数は共有オブジェクトへの有効な強参照の取得に失敗する可能性があるため、返されたオブジェクトで&lt;a href=&quot;qsharedpointer#isNull&quot;&gt;QSharedPointer :: isNull&lt;/a&gt;（）を呼び出して、変換が成功したかどうかを常に確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="b76981d647ae48fe91ec4d3b90b4112f2b78a401" translate="yes" xml:space="preserve">
          <source>Since this function opens the file without specifying the file name, you cannot use this &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; with a &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;.</source>
          <target state="translated">この関数はファイル名を指定せずにファイルを開くため、この&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;を&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfoで&lt;/a&gt;使用することはできません。</target>
        </trans-unit>
        <trans-unit id="35e1922e8730ad3b75cb7d664a0e7f2cf790bf00" translate="yes" xml:space="preserve">
          <source>Since this operation is item-based, the same function is available for all three convenience classes.</source>
          <target state="translated">この操作は項目ベースなので、3つの便利クラスすべてで同じ機能が利用できます。</target>
        </trans-unit>
        <trans-unit id="6e1b2c2cfd5141eb127150cde59def640e84c9a3" translate="yes" xml:space="preserve">
          <source>Since version 2.0 of the virtual keyboard, input methods can consume touch input data from touch screens or other input devices. This allows integration of a handwriting recognition engine seamlessly to the virtual keyboard, without any changes to the existing keyboard layouts (as the virtual keyboard already provides the handwriting keyboard layouts for most languages).</source>
          <target state="translated">仮想キーボードのバージョン2.0以降、入力メソッドはタッチスクリーンやその他の入力デバイスからのタッチ入力データを消費できるようになりました。これにより、既存のキーボードレイアウトを変更することなく、手書き認識エンジンを仮想キーボードにシームレスに統合することができます(仮想キーボードは、ほとんどの言語に対応した手書きキーボードレイアウトをすでに提供しているため)。</target>
        </trans-unit>
        <trans-unit id="2eedc4b43688e81fa47203c3940a428c2861ab8f" translate="yes" xml:space="preserve">
          <source>Since version 4.3, Qt provides two new classes for reading and writing XML: &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; and &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt;.</source>
          <target state="translated">バージョン4.3以降、QtはXMLを読み書きするための2つの新しいクラス、&lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt;と&lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriterを提供し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="24d613b89b2c7a8c9cbacbefad29dee2d66ce807" translate="yes" xml:space="preserve">
          <source>Since version 5.11, &lt;a href=&quot;qdoc-index&quot;&gt;QDoc&lt;/a&gt; uses Clang to parse C++ code. If you wish to build &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdoc-module.html&quot;&gt;QDoc&lt;/a&gt; manually, refer to &lt;a href=&quot;qdoc-guide-clang&quot;&gt;Installing Clang for QDoc&lt;/a&gt; for specific build requirements.</source>
          <target state="translated">バージョン5.11以降、&lt;a href=&quot;qdoc-index&quot;&gt;QDoc&lt;/a&gt;はClangを使用してC ++コードを解析します。&lt;a href=&quot;https://doc.qt.io/qt-5.13/qdoc-module.html&quot;&gt;QDocを&lt;/a&gt;手動でビルドする場合、特定のビルド要件&lt;a href=&quot;qdoc-guide-clang&quot;&gt;については、QDocのClangのインストールを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="a74cf52f756905c8b725b5a9f36a4056a57c6bc5" translate="yes" xml:space="preserve">
          <source>Since version 5.11, &lt;a href=&quot;qdoc-index&quot;&gt;QDoc&lt;/a&gt; uses Clang to parse C++ code. If you wish to build &lt;a href=&quot;https://doc.qt.io/qt-5.15/qdoc-module.html&quot;&gt;QDoc&lt;/a&gt; manually, refer to &lt;a href=&quot;qdoc-guide-clang&quot;&gt;Installing Clang for QDoc&lt;/a&gt; for specific build requirements.</source>
          <target state="translated">バージョン5.11以降、&lt;a href=&quot;qdoc-index&quot;&gt;QDoc&lt;/a&gt;はClangを使用してC ++コードを解析します。&lt;a href=&quot;https://doc.qt.io/qt-5.15/qdoc-module.html&quot;&gt;QDocを&lt;/a&gt;手動でビルドする場合、特定のビルド要件&lt;a href=&quot;qdoc-guide-clang&quot;&gt;については、QDoc&lt;/a&gt;用のClangのインストールを参照してください。</target>
        </trans-unit>
        <trans-unit id="90e2c8463dc7b70700ff054abae643fd38b08a65" translate="yes" xml:space="preserve">
          <source>Since we are implementing an interface, we must ensure that it is made known to the meta-object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro. This enables</source>
          <target state="translated">インターフェースを実装しているので、&lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;（）マクロを使用して、それがメタオブジェクトシステムに認識されるようにする必要があります。これにより、</target>
        </trans-unit>
        <trans-unit id="cbd0035a7e74e4188a78bc806175c9fca741b978" translate="yes" xml:space="preserve">
          <source>Since we are implementing an interface, we must ensure that it's made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro. This enables</source>
          <target state="translated">インターフェースを実装しているので、&lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;（）マクロを使用して、それがメタオブジェクトシステムに認識されていることを確認する必要があります。これにより、</target>
        </trans-unit>
        <trans-unit id="90afb1328bcd0bb2e300eab28903cbeb3261a834" translate="yes" xml:space="preserve">
          <source>Since widgets propagate the contents of their parents by default, you need to set the &lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt; property, or use &lt;a href=&quot;qwidget#setAttribute&quot;&gt;setAttribute&lt;/a&gt;() to set the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_OpaquePaintEvent&lt;/a&gt; attribute, to make a widget opaque.</source>
          <target state="translated">ウィジェットはデフォルトで親のコンテンツを伝搬するため、ウィジェットを不透明にするには、&lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;autoFillBackground&lt;/a&gt;プロパティを設定するか、&lt;a href=&quot;qwidget#setAttribute&quot;&gt;setAttribute&lt;/a&gt;（）を使用して&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_OpaquePaintEvent&lt;/a&gt;属性を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b3e6b5fa0ac3c0bbf7ff09d3bb9498d8de6db0f1" translate="yes" xml:space="preserve">
          <source>Since you cannot have a public identifier without a system identifier, the public identifier is set to an empty string if there is no system identifier.</source>
          <target state="translated">システム識別子がないと公開識別子を持つことができないので、システム識別子がない場合は空文字列が設定されます。</target>
        </trans-unit>
        <trans-unit id="4434cedbc25a9b21d7d06d3713a6484879933703" translate="yes" xml:space="preserve">
          <source>Since:</source>
          <target state="translated">Since:</target>
        </trans-unit>
        <trans-unit id="5e3aa2feddd17892045eebaefc1d9c32a31ca523" translate="yes" xml:space="preserve">
          <source>Single &quot;%&quot; characters: Any occurrences of a percent character &quot;%&quot; not followed by exactly two hexadecimal characters (e.g., &quot;13% coverage.html&quot;) will be replaced by &quot;%25&quot;. Note that one lone &quot;%&quot; character will trigger the correction mode for all percent characters.</source>
          <target state="translated">単一の &quot;%&quot; 文字。パーセント文字 &quot;%&quot; の後に正確に 2 つの 16 進数文字が続いていない場合 (例:&quot;13% coverage.html&quot; など)は、&quot;%25&quot; に置き換えられます。1 つの &quot;%&quot; 文字だけが、すべてのパーセント文字の修正モードを起動することに注意してください。</target>
        </trans-unit>
        <trans-unit id="76644e2fa670cadcb03e7c313b16ff4e3895cc43" translate="yes" xml:space="preserve">
          <source>Single Process</source>
          <target state="translated">シングルプロセス</target>
        </trans-unit>
        <trans-unit id="6819f201fa15bb79ba544f6fe61e1e001b927c9e" translate="yes" xml:space="preserve">
          <source>Single Process Client Architecture</source>
          <target state="translated">シングルプロセスクライアントアーキテクチャ</target>
        </trans-unit>
        <trans-unit id="e23914f8eaae4443690537a72ec28381d866ac98" translate="yes" xml:space="preserve">
          <source>Single dates can be selected.</source>
          <target state="translated">シングルデートも選択可能です。</target>
        </trans-unit>
        <trans-unit id="fcc734221c92cad831f740c80003fa799dee091a" translate="yes" xml:space="preserve">
          <source>Single level lists of items are typically displayed using a &lt;code&gt;QListWidget&lt;/code&gt; and a number of &lt;code&gt;QListWidgetItem&lt;/code&gt;s. A list widget is constructed in the same way as any other widget:</source>
          <target state="translated">アイテムの単一レベルのリストは、通常、 &lt;code&gt;QListWidget&lt;/code&gt; といくつかの &lt;code&gt;QListWidgetItem&lt;/code&gt; を使用して表示されます。リストウィジェットは、他のウィジェットと同じ方法で作成されます。</target>
        </trans-unit>
        <trans-unit id="b6cd7ea609e0acaff1be02b2b013a4ff1ff7fbf7" translate="yes" xml:space="preserve">
          <source>Single line comments start with // and finish at the end of the line.</source>
          <target state="translated">単行コメントは //で始まり、行末で終わります。</target>
        </trans-unit>
        <trans-unit id="0e2dbe5d4cc596fe894764589eb57686eae7b97f" translate="yes" xml:space="preserve">
          <source>Single sided (simplex) printing only.</source>
          <target state="translated">片面(単色)印刷のみ。</target>
        </trans-unit>
        <trans-unit id="9494a37d17f6f94942c511af58fb28e0e658332e" translate="yes" xml:space="preserve">
          <source>Single-Process Client Development</source>
          <target state="translated">シングルプロセスのクライアント開発</target>
        </trans-unit>
        <trans-unit id="9a7c01766eb79167f9e442564552a48fffb66576" translate="yes" xml:space="preserve">
          <source>Single-line plain text.</source>
          <target state="translated">単一行のプレーンテキスト。</target>
        </trans-unit>
        <trans-unit id="c44c6b3e9568e85061a8b6f14494b75fb036824c" translate="yes" xml:space="preserve">
          <source>Single-line text input field</source>
          <target state="translated">単一行テキスト入力フィールド</target>
        </trans-unit>
        <trans-unit id="9ee8db502087d542a57a5cefcff5a147735c6fb3" translate="yes" xml:space="preserve">
          <source>Single-line text input field. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">単一行のテキスト入力フィールド。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66c278c890dda32e564d2cf1e3a645a485b2c256" translate="yes" xml:space="preserve">
          <source>Single-precision float (32-bit)</source>
          <target state="translated">単精度フロート(32ビット</target>
        </trans-unit>
        <trans-unit id="91e51249cae0fc5fccdacbae585ba0e813d6cf60" translate="yes" xml:space="preserve">
          <source>SinglePointHandler</source>
          <target state="translated">SinglePointHandler</target>
        </trans-unit>
        <trans-unit id="0bb30bc786a1113affbf9868d6c00a543921ec19" translate="yes" xml:space="preserve">
          <source>SinglePointHandler (QML type)</source>
          <target state="translated">SinglePointHandler(QML型</target>
        </trans-unit>
        <trans-unit id="8fcd611a50cfa7edf7ab8a789e4697283c6d57b2" translate="yes" xml:space="preserve">
          <source>SinglePointHandler QML Type</source>
          <target state="translated">SinglePointHandler QML 型</target>
        </trans-unit>
        <trans-unit id="a9a395a51cfb2e5b69e82977941e687c6027e255" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.acceptedButtons</source>
          <target state="translated">SinglePointHandler.acceptedButtons</target>
        </trans-unit>
        <trans-unit id="2c44ca1437a10d0e06df18c202f71f238f723571" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.acceptedDevices</source>
          <target state="translated">SinglePointHandler.acceptedDevices</target>
        </trans-unit>
        <trans-unit id="49341134e686853de5324ff030da6c41211a2433" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.acceptedModifiers</source>
          <target state="translated">SinglePointHandler.acceptedModifiers</target>
        </trans-unit>
        <trans-unit id="90be775b379d06c4b2bf780915581b24f8244fec" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.acceptedPointerTypes</source>
          <target state="translated">SinglePointHandler.acceptedPointerTypes</target>
        </trans-unit>
        <trans-unit id="d962a4f72dcdd174fa5f677b5d5d00171491e646" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.active</source>
          <target state="translated">SinglePointHandler.active</target>
        </trans-unit>
        <trans-unit id="ad015089dc7edf5761f7fd30beb4bdcbc2a4d10d" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.canceled()</source>
          <target state="translated">SinglePointHandler.canceled()</target>
        </trans-unit>
        <trans-unit id="87df2644cef3eed05df1d8538ab1453fc1fbf02c" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.cursorShape</source>
          <target state="translated">SinglePointHandler.cursorShape</target>
        </trans-unit>
        <trans-unit id="63273f1fee648ad6efb2cbc26d029ddb4f04fd8a" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.dragThreshold</source>
          <target state="translated">SinglePointHandler.dragThreshold</target>
        </trans-unit>
        <trans-unit id="0959a2b6954bdfcf3acc1949786a96b421ee10c5" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.enabled</source>
          <target state="translated">SinglePointHandler.enabled</target>
        </trans-unit>
        <trans-unit id="1e8006ca54a3cc2b20ae09884e86b6ff568853fd" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.grabChanged()</source>
          <target state="translated">SinglePointHandler.grabChanged()</target>
        </trans-unit>
        <trans-unit id="80b8a1118e6c93b1ba22f2ca6f996dd9d3cef9ab" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.grabPermissions</source>
          <target state="translated">SinglePointHandler.grabPermissions</target>
        </trans-unit>
        <trans-unit id="717caea785828f1aa1fbfe2deb82ef0c7025e1ec" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.margin</source>
          <target state="translated">SinglePointHandler.margin</target>
        </trans-unit>
        <trans-unit id="8f74be9dac7cfeb70924e80c8b81c0f9059d1914" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.parent</source>
          <target state="translated">SinglePointHandler.parent</target>
        </trans-unit>
        <trans-unit id="622f7c623de1cf1af74f1be43ad22f3b406517cb" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.point</source>
          <target state="translated">SinglePointHandler.point</target>
        </trans-unit>
        <trans-unit id="d890056f6ede8cc19ebc6e121c4a58109c3c9ce8" translate="yes" xml:space="preserve">
          <source>SinglePointHandler.target</source>
          <target state="translated">SinglePointHandler.target</target>
        </trans-unit>
        <trans-unit id="164f306fd67e1822eeb8f4d961107fa23e4ecbc4" translate="yes" xml:space="preserve">
          <source>SingleShot The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; renders to the texture only once after which the resources allocated for rendering are released.</source>
          <target state="translated">シングルショット&lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt;はテクスチャに1回だけレンダリングされ、その後、レンダリングに割り当てられたリソースが解放されます。</target>
        </trans-unit>
        <trans-unit id="d033a4cdd77d483763daf82b7ae88fa9063dc3ec" translate="yes" xml:space="preserve">
          <source>SingleShot The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; renders to the texture only once after which the resources allocated for rendering are released.</source>
          <target state="translated">SingleShot &lt;a href=&quot;https://doc.qt.io/qt-5.15/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt;は、テクスチャに1回だけレンダリングし、その後、レンダリングに割り当てられたリソースが解放されます。</target>
        </trans-unit>
        <trans-unit id="c6493ae632c0debb7092852b97a722981854fa66" translate="yes" xml:space="preserve">
          <source>SingleShot The &lt;a href=&quot;https://doc.qt.io/qt-6.0/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; renders to the texture only once after which the resources allocated for rendering are released.</source>
          <target state="translated">SingleShot &lt;a href=&quot;https://doc.qt.io/qt-6.0/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt;は、テクスチャに1回だけレンダリングし、その後、レンダリングに割り当てられたリソースが解放されます。</target>
        </trans-unit>
        <trans-unit id="0d8bc28bd230eae9445fec6a48931c7bdeb53ee1" translate="yes" xml:space="preserve">
          <source>Sinhala</source>
          <target state="translated">Sinhala</target>
        </trans-unit>
        <trans-unit id="bf10d1ad94ff7eb17c7d7372f3a0c56fe6bd30ce" translate="yes" xml:space="preserve">
          <source>SipHash Algorithm</source>
          <target state="translated">SipHashアルゴリズム</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="dc09c642d795abf3c0919cdfdee876f71a921495" translate="yes" xml:space="preserve">
          <source>Size - sort by file size</source>
          <target state="translated">サイズ-ファイルサイズでソート</target>
        </trans-unit>
        <trans-unit id="a21ebed9f0f8d9de7d6aa3483a3f7f484c8ae939" translate="yes" xml:space="preserve">
          <source>Size Grip</source>
          <target state="translated">サイズグリップ</target>
        </trans-unit>
        <trans-unit id="459c7b83fd593d80c606f1b1645a596309472c8c" translate="yes" xml:space="preserve">
          <source>Size Hints and Layouts</source>
          <target state="translated">サイズのヒントとレイアウト</target>
        </trans-unit>
        <trans-unit id="f5cd47dfe3842594673af53a9d528a6bd5e5fa5f" translate="yes" xml:space="preserve">
          <source>Size Hints and Size Policies</source>
          <target state="translated">サイズのヒントとサイズポリシー</target>
        </trans-unit>
        <trans-unit id="aa2a8d04f4b41d11abb7cff880ee26dc317da75f" translate="yes" xml:space="preserve">
          <source>Size Hints and Size Policies in QGraphicsGridLayout</source>
          <target state="translated">QGraphicsGridLayoutにおけるサイズのヒントとサイズポリシー</target>
        </trans-unit>
        <trans-unit id="bcfb1eb6893d6093a8529805958150c9ff7ce048" translate="yes" xml:space="preserve">
          <source>Size Hints and Size Policies in QGraphicsLinearLayout</source>
          <target state="translated">QGraphicsLinearLayoutのサイズのヒントとサイズポリシー</target>
        </trans-unit>
        <trans-unit id="402e1a7cee51ebdcfbaccfafe9c21fcf54d1e170" translate="yes" xml:space="preserve">
          <source>Size Hints and Size Policies in an Anchor Layout</source>
          <target state="translated">アンカーレイアウトにおけるサイズのヒントとサイズポリシー</target>
        </trans-unit>
        <trans-unit id="6ab6f1d33861218947d5ebc92f67fd0ac8cf8dda" translate="yes" xml:space="preserve">
          <source>Size of the entity when projected on the screen as seen from the selected camera, expressed in number of pixels on the side of the bounding square in screen space.</source>
          <target state="translated">選択されたカメラから見たスクリーン上に投影されたときの実体のサイズを,スクリーン空間の境界正方形の側のピクセル数で表したもの.</target>
        </trans-unit>
        <trans-unit id="19ac3f0fd150ee16ee8bac4343cebb513cc76b7f" translate="yes" xml:space="preserve">
          <source>Size of the item can be set via direct manipulation of the items transformation matrix.</source>
          <target state="translated">アイテムのサイズは、アイテムの変換行列を直接操作して設定することができます。</target>
        </trans-unit>
        <trans-unit id="1bbde6e7a3185376de0d3b67ccf9b73d656a0786" translate="yes" xml:space="preserve">
          <source>Size of the page contents.</source>
          <target state="translated">ページの内容のサイズ。</target>
        </trans-unit>
        <trans-unit id="54d8c5a24e020bab1e469074715caaac83696ae9" translate="yes" xml:space="preserve">
          <source>Size of the vignetting. Range is &lt;code&gt;[0...5]&lt;/code&gt;. &lt;code&gt;0.35&lt;/code&gt; by default.</source>
          <target state="translated">ケラレのサイズ。範囲は &lt;code&gt;[0...5]&lt;/code&gt; です。デフォルトでは &lt;code&gt;0.35&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d052fd809fb4e7ae90760a5322127642a2897aac" translate="yes" xml:space="preserve">
          <source>Size windows and dialogs in relation to the corresponding screen size.</source>
          <target state="translated">ウィンドウやダイアログのサイズを、対応する画面サイズに合わせて設定します。</target>
        </trans-unit>
        <trans-unit id="34bf5121cd9519aaec5f590946c59c19a5a21467" translate="yes" xml:space="preserve">
          <source>Size windows and dialogs in relation to the screen size.</source>
          <target state="translated">画面サイズに応じたウィンドウやダイアログのサイズを設定します。</target>
        </trans-unit>
        <trans-unit id="f39408c6d0a10ea74acb36940bab48cf259196e5" translate="yes" xml:space="preserve">
          <source>Sizes and Sub-Strings</source>
          <target state="translated">サイズとサブストリング</target>
        </trans-unit>
        <trans-unit id="de7805a2f8658223efcb68debf683046f01bc471" translate="yes" xml:space="preserve">
          <source>Sizing</source>
          <target state="translated">Sizing</target>
        </trans-unit>
        <trans-unit id="2a46b0ef6b86ad57b43091800ee188239f28aa5f" translate="yes" xml:space="preserve">
          <source>Skeletal Animation</source>
          <target state="translated">骨格アニメーション</target>
        </trans-unit>
        <trans-unit id="4337ef337ecbae01528ec15aa4029353fd42657c" translate="yes" xml:space="preserve">
          <source>Skeleton</source>
          <target state="translated">Skeleton</target>
        </trans-unit>
        <trans-unit id="02316975abc9c133a66cd7958dcaf09dd1da72de" translate="yes" xml:space="preserve">
          <source>Skeleton (QML type)</source>
          <target state="translated">スケルトン(QML型</target>
        </trans-unit>
        <trans-unit id="51df08e884c882efec9d41bb05daae5bbbb54767" translate="yes" xml:space="preserve">
          <source>Skeleton QML Type</source>
          <target state="translated">スケルトンQML型</target>
        </trans-unit>
        <trans-unit id="3c74d3877a64500771dfe8541a2a132c4868f1fa" translate="yes" xml:space="preserve">
          <source>Skeleton.rootJoint</source>
          <target state="translated">Skeleton.rootJoint</target>
        </trans-unit>
        <trans-unit id="1eaf4cf1bfe4bf5884ec9772d99dcf3fe61c1ec7" translate="yes" xml:space="preserve">
          <source>SkeletonLoader</source>
          <target state="translated">SkeletonLoader</target>
        </trans-unit>
        <trans-unit id="edd58bf94e0da27d240d959ac0e3eaa179e8a331" translate="yes" xml:space="preserve">
          <source>SkeletonLoader (QML type)</source>
          <target state="translated">SkeletonLoader(QML型</target>
        </trans-unit>
        <trans-unit id="e8393d01673af16b85b472ea90dc4e9f46c7acbf" translate="yes" xml:space="preserve">
          <source>SkeletonLoader QML Type</source>
          <target state="translated">SkeletonLoader QML 型</target>
        </trans-unit>
        <trans-unit id="114a9cd8387207790909dad4163b7889272f0c46" translate="yes" xml:space="preserve">
          <source>SkeletonLoader.source</source>
          <target state="translated">SkeletonLoader.source</target>
        </trans-unit>
        <trans-unit id="5d651ac0ddc5c38347e48cb4b44da382c84b9172" translate="yes" xml:space="preserve">
          <source>SkeletonLoader.status</source>
          <target state="translated">SkeletonLoader.status</target>
        </trans-unit>
        <trans-unit id="32fd056d3d4b1c9b2ee14fcbcc60776d0f22f1fa" translate="yes" xml:space="preserve">
          <source>Sketch</source>
          <target state="translated">Sketch</target>
        </trans-unit>
        <trans-unit id="67a01d6584f13916407ac2a4b5156bc0808d5e45" translate="yes" xml:space="preserve">
          <source>SkinningPalette</source>
          <target state="translated">SkinningPalette</target>
        </trans-unit>
        <trans-unit id="516d04401beb61899f0fa9adec2f649f570f49a1" translate="yes" xml:space="preserve">
          <source>Skip child elements.</source>
          <target state="translated">子要素をスキップします。</target>
        </trans-unit>
        <trans-unit id="bcad605bc4b248987d160e239283be79c8aabb74" translate="yes" xml:space="preserve">
          <source>Skipping Known Bugs</source>
          <target state="translated">既知のバグをスキップする</target>
        </trans-unit>
        <trans-unit id="8bd65f999b04ce60c4e0ec8b4145d75a6ad7dddc" translate="yes" xml:space="preserve">
          <source>Skips</source>
          <target state="translated">Skips</target>
        </trans-unit>
        <trans-unit id="cdad74c1f4517e867e81d75dbc1ad6a9965245ed" translate="yes" xml:space="preserve">
          <source>Skips the current test case and prints the optional</source>
          <target state="translated">現在のテストケースをスキップし、オプションの</target>
        </trans-unit>
        <trans-unit id="4fdc5a5dcd34018b0df77844be34f80c86af2f74" translate="yes" xml:space="preserve">
          <source>Skips up to</source>
          <target state="translated">までスキップします。</target>
        </trans-unit>
        <trans-unit id="9510cb18fb3cd7559f48ea0cc200f6966250cfca" translate="yes" xml:space="preserve">
          <source>SkyboxEntity</source>
          <target state="translated">SkyboxEntity</target>
        </trans-unit>
        <trans-unit id="a6b19c742d10ded3242df82163de8ac867d9ba03" translate="yes" xml:space="preserve">
          <source>SkyboxEntity (QML type)</source>
          <target state="translated">スカイボックスエンティティ</target>
        </trans-unit>
        <trans-unit id="6f38b365cf233fbd44830a82c606bc69dc75eeca" translate="yes" xml:space="preserve">
          <source>SkyboxEntity QML Type</source>
          <target state="translated">SkyboxEntity QML 型</target>
        </trans-unit>
        <trans-unit id="d18bb6dfc788228d03bfb9dc354f96b30725f3f4" translate="yes" xml:space="preserve">
          <source>SkyboxEntity is a convenience Entity subclass that can be used to insert a skybox in a 3D scene. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">SkyboxEntityは、3Dシーンにスカイボックスを挿入するために使用できる便利なエンティティサブクラスです。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c0f415a97e6861a6527d90cf8842caaf116607c" translate="yes" xml:space="preserve">
          <source>Slash-separated (&quot;looks like a path&quot;)</source>
          <target state="translated">スラッシュで区切られた(「パスのように見える</target>
        </trans-unit>
        <trans-unit id="1e97c1d92ff9746a38016844fe954b6b8031dd6a" translate="yes" xml:space="preserve">
          <source>Sleeps for</source>
          <target state="translated">睡眠時間</target>
        </trans-unit>
        <trans-unit id="aa5db7d82232ee34651eb5adea59b01c839eb843" translate="yes" xml:space="preserve">
          <source>Slider</source>
          <target state="translated">Slider</target>
        </trans-unit>
        <trans-unit id="ca1bf6240d8b44bbc15f92c9ee18c566665b427a" translate="yes" xml:space="preserve">
          <source>Slider (QML type)</source>
          <target state="translated">スライダー(QML型</target>
        </trans-unit>
        <trans-unit id="23dceb9c605362980b08ec9e72f3ac047f8e7c48" translate="yes" xml:space="preserve">
          <source>Slider Control</source>
          <target state="translated">スライダーコントロール</target>
        </trans-unit>
        <trans-unit id="ddcfe9dcc2a0a3b8176ce7dfc9ff1e40749b408d" translate="yes" xml:space="preserve">
          <source>Slider QML Type</source>
          <target state="translated">スライダーQML型</target>
        </trans-unit>
        <trans-unit id="4112fea00fa6f5b7efed63b4f8eb88f3f23d038d" translate="yes" xml:space="preserve">
          <source>Slider consists of two visual items: &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-slider#handle-prop&quot;&gt;handle&lt;/a&gt;.</source>
          <target state="translated">Sliderは、&lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;と&lt;a href=&quot;qml-qtquick-controls2-slider#handle-prop&quot;&gt;handle&lt;/a&gt;の2つのビジュアルアイテムで構成されています。</target>
        </trans-unit>
        <trans-unit id="17510cebec22f6c3f31fd0a38b82d55171e841d0" translate="yes" xml:space="preserve">
          <source>Slider handle.</source>
          <target state="translated">スライダーのハンドル。</target>
        </trans-unit>
        <trans-unit id="636a805189e7a9166f09901d54cf343d4465cbec" translate="yes" xml:space="preserve">
          <source>Slider is used to select a value by sliding a handle along a track.</source>
          <target state="translated">スライダーは、トラックに沿ってハンドルをスライドさせて値を選択するために使用されます。</target>
        </trans-unit>
        <trans-unit id="030c4523b67f08bffa6def528e9cce11a32b4ea1" translate="yes" xml:space="preserve">
          <source>Slider tickmarks.</source>
          <target state="translated">スライダーのカチカチマーク。</target>
        </trans-unit>
        <trans-unit id="6f38b8659cd5a0cf268ffc47cf39afffe4681073" translate="yes" xml:space="preserve">
          <source>Slider, &lt;a href=&quot;qml-qtquick-controls-spinbox&quot;&gt;SpinBox&lt;/a&gt;, Dial, &lt;a href=&quot;qml-qtquick-controls-private-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;</source>
          <target state="translated">Slider、&lt;a href=&quot;qml-qtquick-controls-spinbox&quot;&gt;SpinBox&lt;/a&gt;、Dial、&lt;a href=&quot;qml-qtquick-controls-private-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9377e391007a4258370accc7e1e74beb7f2abb47" translate="yes" xml:space="preserve">
          <source>Slider, &lt;a href=&quot;qml-qtquick-controls2-spinbox&quot;&gt;SpinBox&lt;/a&gt;, Dial, &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;</source>
          <target state="translated">スライダー、&lt;a href=&quot;qml-qtquick-controls2-spinbox&quot;&gt;スピンボックス&lt;/a&gt;、ダイヤル、&lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;スクロールバー&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfe91a8403d124d4148f30cb10cd7bd6f5a4a1d8" translate="yes" xml:space="preserve">
          <source>Slider.activeFocusOnPress</source>
          <target state="translated">Slider.activeFocusOnPress</target>
        </trans-unit>
        <trans-unit id="59b9585bd265b9a9d8408bd589bfaab51ace86a5" translate="yes" xml:space="preserve">
          <source>Slider.decrease()</source>
          <target state="translated">Slider.decrease()</target>
        </trans-unit>
        <trans-unit id="a3a6eabb77a8ab0eb02144eb51bf9d67841c3106" translate="yes" xml:space="preserve">
          <source>Slider.from</source>
          <target state="translated">Slider.from</target>
        </trans-unit>
        <trans-unit id="67b9887863c50292fcc67daec97032e541c5bb9a" translate="yes" xml:space="preserve">
          <source>Slider.handle</source>
          <target state="translated">Slider.handle</target>
        </trans-unit>
        <trans-unit id="b9234975d4b63f44ad0248702126eb12e89c8c76" translate="yes" xml:space="preserve">
          <source>Slider.horizontal</source>
          <target state="translated">Slider.horizontal</target>
        </trans-unit>
        <trans-unit id="02c1aad60588c4bbf51293b08881b9da7c014a44" translate="yes" xml:space="preserve">
          <source>Slider.hovered</source>
          <target state="translated">Slider.hovered</target>
        </trans-unit>
        <trans-unit id="d4a5c37d017b251ff1392723b3e04789a8631211" translate="yes" xml:space="preserve">
          <source>Slider.implicitHandleHeight</source>
          <target state="translated">Slider.implicitHandleHeight</target>
        </trans-unit>
        <trans-unit id="35d11d231b0f3b210e430c83daf9a73e034b07e3" translate="yes" xml:space="preserve">
          <source>Slider.implicitHandleWidth</source>
          <target state="translated">Slider.implicitHandleWidth</target>
        </trans-unit>
        <trans-unit id="f39105361bae80557aeec24d034f1345ac78c80f" translate="yes" xml:space="preserve">
          <source>Slider.increase()</source>
          <target state="translated">Slider.increase()</target>
        </trans-unit>
        <trans-unit id="cce5efb76125dd7602f17a9e635065496de63506" translate="yes" xml:space="preserve">
          <source>Slider.live</source>
          <target state="translated">Slider.live</target>
        </trans-unit>
        <trans-unit id="a4d7bf74ce8a64484b3ed67be418b4ab070c7084" translate="yes" xml:space="preserve">
          <source>Slider.maximumValue</source>
          <target state="translated">Slider.maximumValue</target>
        </trans-unit>
        <trans-unit id="52e7792a4259128384483b0c08161a97f969c9e9" translate="yes" xml:space="preserve">
          <source>Slider.minimumValue</source>
          <target state="translated">Slider.minimumValue</target>
        </trans-unit>
        <trans-unit id="f379d009e725a47b7e5b8c4dfca163ae85a9ae88" translate="yes" xml:space="preserve">
          <source>Slider.moved()</source>
          <target state="translated">Slider.moved()</target>
        </trans-unit>
        <trans-unit id="6786fb9f71be9ce96510fd69ac1f413fe6254547" translate="yes" xml:space="preserve">
          <source>Slider.orientation</source>
          <target state="translated">Slider.orientation</target>
        </trans-unit>
        <trans-unit id="a306c0efa883e1f125fbe86c8fd72658ad2be648" translate="yes" xml:space="preserve">
          <source>Slider.position</source>
          <target state="translated">Slider.position</target>
        </trans-unit>
        <trans-unit id="8bf0389bbe6f3017072c440962540ab269fd1a0b" translate="yes" xml:space="preserve">
          <source>Slider.pressed</source>
          <target state="translated">Slider.pressed</target>
        </trans-unit>
        <trans-unit id="d87859b6bcfd5617ac1ad154887d6b40969229b1" translate="yes" xml:space="preserve">
          <source>Slider.snapMode</source>
          <target state="translated">Slider.snapMode</target>
        </trans-unit>
        <trans-unit id="7b682e5c6118c19e3a33216e72f9413caae3c22c" translate="yes" xml:space="preserve">
          <source>Slider.stepSize</source>
          <target state="translated">Slider.stepSize</target>
        </trans-unit>
        <trans-unit id="d8ee08dbd4e6b47824fad7aaffa1ca564b254b13" translate="yes" xml:space="preserve">
          <source>Slider.tickmarksEnabled</source>
          <target state="translated">Slider.tickmarksEnabled</target>
        </trans-unit>
        <trans-unit id="096bc1ba6964a69d2844860cba513360e869cfd2" translate="yes" xml:space="preserve">
          <source>Slider.to</source>
          <target state="translated">Slider.to</target>
        </trans-unit>
        <trans-unit id="42ef90caa59901457a119463322e88db6d2e58d1" translate="yes" xml:space="preserve">
          <source>Slider.touchDragThreshold</source>
          <target state="translated">Slider.touchDragThreshold</target>
        </trans-unit>
        <trans-unit id="ba2c49abc9927795a7f44bf562c2ac0959173d35" translate="yes" xml:space="preserve">
          <source>Slider.updateValueWhileDragging</source>
          <target state="translated">Slider.updateValueWhileDragging</target>
        </trans-unit>
        <trans-unit id="be52b15f503e6ec7ccb5c0b2e57719f3ca2731f6" translate="yes" xml:space="preserve">
          <source>Slider.value</source>
          <target state="translated">Slider.value</target>
        </trans-unit>
        <trans-unit id="be3786a1f2bc289cc2f716394a4a4fe680ce6191" translate="yes" xml:space="preserve">
          <source>Slider.valueAt()</source>
          <target state="translated">Slider.valueAt()</target>
        </trans-unit>
        <trans-unit id="4a9cb257925909efa78cfa92cb98779f669ea398" translate="yes" xml:space="preserve">
          <source>Slider.vertical</source>
          <target state="translated">Slider.vertical</target>
        </trans-unit>
        <trans-unit id="ecab1d9eea5fbabbb24934471a24bda88994605d" translate="yes" xml:space="preserve">
          <source>Slider.visualPosition</source>
          <target state="translated">Slider.visualPosition</target>
        </trans-unit>
        <trans-unit id="2314fb0a74f132d9ba1e67ded93f0f976234522d" translate="yes" xml:space="preserve">
          <source>Slider.wheelEnabled</source>
          <target state="translated">Slider.wheelEnabled</target>
        </trans-unit>
        <trans-unit id="d689594981a9cf41f84b55f8f45844748c9fb9b7" translate="yes" xml:space="preserve">
          <source>SliderStyle</source>
          <target state="translated">SliderStyle</target>
        </trans-unit>
        <trans-unit id="cb21d9f193b23c253477db3d7b2cb7a59f29c6db" translate="yes" xml:space="preserve">
          <source>SliderStyle (QML type)</source>
          <target state="translated">SliderStyle(QML型</target>
        </trans-unit>
        <trans-unit id="3fb1eec6310c686d6559ac46746ef18fc71ee39c" translate="yes" xml:space="preserve">
          <source>SliderStyle QML Type</source>
          <target state="translated">SliderStyle QML型</target>
        </trans-unit>
        <trans-unit id="cd21746258d6b5511b15b588931018bfefe21168" translate="yes" xml:space="preserve">
          <source>SliderStyle.control</source>
          <target state="translated">SliderStyle.control</target>
        </trans-unit>
        <trans-unit id="7c1844b53df7f6e6f8ca4d2a74aa8988a08875b0" translate="yes" xml:space="preserve">
          <source>SliderStyle.groove</source>
          <target state="translated">SliderStyle.groove</target>
        </trans-unit>
        <trans-unit id="7f5923fb1bf87a32fa7f063b0ee186aaf8d233f6" translate="yes" xml:space="preserve">
          <source>SliderStyle.handle</source>
          <target state="translated">SliderStyle.handle</target>
        </trans-unit>
        <trans-unit id="a1502b1d14dd623fb7940d0e79ff53ecdfb76ce4" translate="yes" xml:space="preserve">
          <source>SliderStyle.panel</source>
          <target state="translated">SliderStyle.panel</target>
        </trans-unit>
        <trans-unit id="84b09bd48b8582c654523e13bd060d26782e8719" translate="yes" xml:space="preserve">
          <source>SliderStyle.tickmarks</source>
          <target state="translated">SliderStyle.tickmarks</target>
        </trans-unit>
        <trans-unit id="fce087d235bc701db9f6efa7196aee57a683b77f" translate="yes" xml:space="preserve">
          <source>Sliders</source>
          <target state="translated">Sliders</target>
        </trans-unit>
        <trans-unit id="9c73f1323074d5362534e5d1d846551153cd5cce" translate="yes" xml:space="preserve">
          <source>Sliders snap to values while moving, as they do on Windows.</source>
          <target state="translated">スライダは、Windows の場合と同様に、移動中に値にスナップします。</target>
        </trans-unit>
        <trans-unit id="7261e1fcf657d36d872062c626823fda67704cbe" translate="yes" xml:space="preserve">
          <source>Slightly beveled (rounded) cube.</source>
          <target state="translated">わずかに面取りされた(丸みを帯びた)立方体。</target>
        </trans-unit>
        <trans-unit id="7dc0ebaea5065f2c39ebdc12f2dcf7159f15e8aa" translate="yes" xml:space="preserve">
          <source>Slightly beveled (rounded) rectangular bar.</source>
          <target state="translated">わずかに面取りされた(丸みを帯びた)長方形の棒。</target>
        </trans-unit>
        <trans-unit id="0c1a16e17517d5db584e59f03e5701a1df0aec29" translate="yes" xml:space="preserve">
          <source>Slots</source>
          <target state="translated">Slots</target>
        </trans-unit>
        <trans-unit id="de9f453d0a0c096ba2c9bd188cf6fe2d65d725ae" translate="yes" xml:space="preserve">
          <source>Slots are implemented by the application programmer. Here is a possible implementation of the &lt;code&gt;Counter::setValue()&lt;/code&gt; slot:</source>
          <target state="translated">スロットは、アプリケーションプログラマによって実装されます。 &lt;code&gt;Counter::setValue()&lt;/code&gt; スロットの可能な実装は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2bf9acb60c3ccf377fae5f467da0a51dc79c1833" translate="yes" xml:space="preserve">
          <source>Slots can be of three kinds:</source>
          <target state="translated">スロットには3種類あります。</target>
        </trans-unit>
        <trans-unit id="11f18c175fc6af81cd5e5c28886bcfe7694c106e" translate="yes" xml:space="preserve">
          <source>Slots can be used for receiving signals, but they are also normal member functions. Just as an object does not know if anything receives its signals, a slot does not know if it has any signals connected to it. This ensures that truly independent components can be created with Qt.</source>
          <target state="translated">スロットは信号を受信するために使用することができますが、通常のメンバ機能でもあります。オブジェクトが何かがその信号を受信しているかどうかを知らないのと同じように、スロットもそれに接続されている信号があるかどうかを知りません。これにより、Qtでは真に独立したコンポーネントを作成することができます。</target>
        </trans-unit>
        <trans-unit id="f8e9def20fcb1920b3271f3f6b186ae0fd79689e" translate="yes" xml:space="preserve">
          <source>Slots can have one parameter of type &lt;code&gt;const QDBusMessage &amp;amp;&lt;/code&gt;, which must appear at the end of the input parameter list, before any output parameters. This parameter, if present, will be initialized with a copy of the current message being processed, which allows the callee to obtain information about the caller, such as its connection name.</source>
          <target state="translated">スロットには、 &lt;code&gt;const QDBusMessage &amp;amp;&lt;/code&gt; タイプのパラメーターを1つ含めることができます。これは、出力パラメーターの前に、入力パラメーターリストの最後に表示する必要があります。このパラメーターが存在する場合、処理中の現在のメッセージのコピーで初期化されます。これにより、呼び出し先は、接続名などの呼び出し元に関する情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="6100254aa6ae6588340de53c6748f68b599fba80" translate="yes" xml:space="preserve">
          <source>Slots in D-Bus adaptors are declared just like normal, public slots, but their parameters must follow certain rules (see &lt;a href=&quot;qdbustypesystem&quot;&gt;The Qt D-Bus Type System&lt;/a&gt; for more information). Slots whose parameters do not follow those rules or that are not public will not be accessible via D-Bus.</source>
          <target state="translated">D-Busアダプターのスロットは、通常のパブリックスロットと同じように宣言されますが、それらのパラメーターは特定のルールに従う必要があります（詳細については&lt;a href=&quot;qdbustypesystem&quot;&gt;、Qt D-Busタイプシステム&lt;/a&gt;を参照してください）。パラメータがこれらのルールに従わないスロット、または公開されていないスロットには、D-Bus経由でアクセスできません。</target>
        </trans-unit>
        <trans-unit id="bbc20df8f4d5803d170d53a3778054ab2669ca54" translate="yes" xml:space="preserve">
          <source>Slots in D-Bus adaptors are declared just like normal, public slots, but their parameters must follow certain rules (see &lt;a href=&quot;qdbustypesystem#&quot;&gt;The Qt D-Bus Type System&lt;/a&gt; for more information). Slots whose parameters do not follow those rules or that are not public will not be accessible via D-Bus.</source>
          <target state="translated">D-Busアダプターのスロットは、通常のパブリックスロットと同じように宣言されますが、それらのパラメーターは特定の規則に従う必要があります（詳細については&lt;a href=&quot;qdbustypesystem#&quot;&gt;、Qt D-Busタイプシステム&lt;/a&gt;を参照してください）。パラメータがこれらのルールに従っていない、または公開されていないスロットは、D-Bus経由でアクセスできません。</target>
        </trans-unit>
        <trans-unit id="d6a8b06eb4898f96a2fc6d5d10dfc35b13982cb6" translate="yes" xml:space="preserve">
          <source>Slovak</source>
          <target state="translated">Slovak</target>
        </trans-unit>
        <trans-unit id="6a3acb36367c06a5500a168780abbfbb98522b53" translate="yes" xml:space="preserve">
          <source>Slovak Layout</source>
          <target state="translated">スロバキア語レイアウト</target>
        </trans-unit>
        <trans-unit id="0cd368bf67c2a1142f1a3890e53e4127424e77a4" translate="yes" xml:space="preserve">
          <source>Slovenian</source>
          <target state="translated">Slovenian</target>
        </trans-unit>
        <trans-unit id="7403c931965471b178b17c8f46b87ce51adb8a8c" translate="yes" xml:space="preserve">
          <source>Slovenian Layout</source>
          <target state="translated">スロベニア語レイアウト</target>
        </trans-unit>
        <trans-unit id="d17049fd0324619b1065e3442d34fc568386ced7" translate="yes" xml:space="preserve">
          <source>Slovenian, Slovene</source>
          <target state="translated">スロベニア語,スロベニア語</target>
        </trans-unit>
        <trans-unit id="f69c25c6c1330c7f13766f37e885af22d4376fac" translate="yes" xml:space="preserve">
          <source>Small font</source>
          <target state="translated">小さなフォント</target>
        </trans-unit>
        <trans-unit id="8a0d2a0902bd6b2efd01cbb91c649c26be6b1960" translate="yes" xml:space="preserve">
          <source>Small logo image file. For Windows Phone the image must have a pixel size of 44x44, for other Windows Store App platforms 30x30. Default provided by the mkspec.</source>
          <target state="translated">小さなロゴ画像ファイルです。Windows Phoneの場合、画像のピクセルサイズは44x44、その他のWindows Store Appプラットフォームの場合は30x30でなければなりません。デフォルトは mkspec で指定されています。</target>
        </trans-unit>
        <trans-unit id="bfca2251a03e9336fcdc7d3d677fc226ebc44be8" translate="yes" xml:space="preserve">
          <source>Small logo image file. The image must have a pixel size of 30x30. Default provided by the mkspec.</source>
          <target state="translated">小さなロゴの画像ファイルです。画像は30x30のピクセルサイズでなければなりません。デフォルトは mkspec で指定されています。</target>
        </trans-unit>
        <trans-unit id="a2f386b930893205254759d2f893ca8a646dd718" translate="yes" xml:space="preserve">
          <source>SmartPointer</source>
          <target state="translated">SmartPointer</target>
        </trans-unit>
        <trans-unit id="f0a7f3749d19c50a430d9d8f1393ea2b66762b0c" translate="yes" xml:space="preserve">
          <source>Smooth Dielectric material</source>
          <target state="translated">滑らかな誘電体</target>
        </trans-unit>
        <trans-unit id="4889bc2fcb6c333df60d06b653ec1dd99eef5e8c" translate="yes" xml:space="preserve">
          <source>Smooth Metallic material</source>
          <target state="translated">スムースメタリック素材</target>
        </trans-unit>
        <trans-unit id="1605254b3c6498507cff8411b9168a564fc861b1" translate="yes" xml:space="preserve">
          <source>Smooth Scaling Algorithm</source>
          <target state="translated">スムーズスケーリングアルゴリズム</target>
        </trans-unit>
        <trans-unit id="d80373be0477a643a378beaf9082b7a413e2591e" translate="yes" xml:space="preserve">
          <source>Smooth pixmap transformation algorithm is used but no antialiasing (Default)</source>
          <target state="translated">スムーズなpixmap変換アルゴリズムを用いますが、アンチエイリアシングは行いません(デフォルト)。</target>
        </trans-unit>
        <trans-unit id="3f9d07fb6a52d4afe198c92b439f79dc86c228ca" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation (QML type)</source>
          <target state="translated">SmoothedAnimation(QML 型</target>
        </trans-unit>
        <trans-unit id="20a77b773339965a3c2d26a5cfcc95e7457e6673" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation QML Type</source>
          <target state="translated">SmoothedAnimation QML 型</target>
        </trans-unit>
        <trans-unit id="467beefe6831a47c5176b7bfdb1b66b41797b4b1" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation.duration</source>
          <target state="translated">SmoothedAnimation.duration</target>
        </trans-unit>
        <trans-unit id="065cdf81fc6a6fd1099a16f3de1bb5a36611b65c" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation.maximumEasingTime</source>
          <target state="translated">SmoothedAnimation.maximumEasingTime</target>
        </trans-unit>
        <trans-unit id="5fed13ab5b3cd72f23c67f356be0b90eb0d0c41b" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation.reversingMode</source>
          <target state="translated">SmoothedAnimation.reversingMode</target>
        </trans-unit>
        <trans-unit id="5db00925766a14ca66bf16b4ec4c374987bbcf5b" translate="yes" xml:space="preserve">
          <source>SmoothedAnimation.velocity</source>
          <target state="translated">SmoothedAnimation.velocity</target>
        </trans-unit>
        <trans-unit id="622e339b485e44851f1a8b27c0f2bcbebc0f78ca" translate="yes" xml:space="preserve">
          <source>Snow exposure mode.</source>
          <target state="translated">雪の露出モード。</target>
        </trans-unit>
        <trans-unit id="d1a58ce1363c8cf10d255324ae63c0bacad290c9" translate="yes" xml:space="preserve">
          <source>So a processor function typically looks like this:</source>
          <target state="translated">そのため、プロセッサの機能は一般的に次のようになります。</target>
        </trans-unit>
        <trans-unit id="dc1f5ed0de1d41eeab7b08e0b439b0b6f16bf14c" translate="yes" xml:space="preserve">
          <source>So far, the example has the second component statically selected. It is trivial now to extend this component to make it clickable, and add it to the original application. We still set one of the widgets as focused by default. Now, clicking either MyClickableWidget gives it focus and the other widget loses the focus.</source>
          <target state="translated">これまでのところ、この例では 2 番目のコンポーネントが静的に選択されています。このコンポーネントを拡張してクリック可能にし、元のアプリケーションに追加するのは、今では簡単です。デフォルトでは、ウィジェットの 1 つがフォーカスされている状態に設定されています。これで、MyClickableWidget のどちらかをクリックするとフォーカスされ、もう一方のウィジェットはフォーカスされなくなりました。</target>
        </trans-unit>
        <trans-unit id="aa17a9b88d55ac111f4f418ce81aaf851c47eb0d" translate="yes" xml:space="preserve">
          <source>So you can write:</source>
          <target state="translated">だから書けばいいんだよ。</target>
        </trans-unit>
        <trans-unit id="83f7f53c7d0a3bde80ff1c5849b398f3e48070b8" translate="yes" xml:space="preserve">
          <source>So, if you're going to use mipmaps for your image, your image dimensions must be a multiple of &lt;b&gt;4&amp;times;(2&amp;times;number_of_mip_levels)&lt;/b&gt;. If you ensure that your mipmapped image dimensions are multiples of 32, the first 3 mipmaps work correctly, allowing your image to shrink to 1/8 of its original size efficiently and without smearing.</source>
          <target state="translated">したがって、画像にミップマップを使用する場合、画像のサイズは&lt;b&gt;4&amp;times;（2&amp;times;number_of_mip_levels）の&lt;/b&gt;倍数である必要があります。ミップマップされた画像のサイズが32の倍数であることを確認すると、最初の3つのミップマップが正しく機能し、画像を元のサイズの1/8に効率的に縮小できます。</target>
        </trans-unit>
        <trans-unit id="bb9e604e90629c2944c5ca0844c15eab46eef12a" translate="yes" xml:space="preserve">
          <source>So, in general, there are four files interacting with the help system, two used for generating Qt help and two meant for distribution:</source>
          <target state="translated">そのため、一般的には、ヘルプシステムと相互作用するファイルは4つあり、2つはQtヘルプの生成に使われ、2つは配布に使われます。</target>
        </trans-unit>
        <trans-unit id="a6c7181dbdac4bc3136036896fc6ccecddcf6b54" translate="yes" xml:space="preserve">
          <source>So, while the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.item, &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.index and &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.destination values vary for each individual transition that is run, the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.&lt;a href=&quot;qml-qtquick-viewtransition#targetIndexes-attached-prop&quot;&gt;targetIndexes&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.&lt;a href=&quot;qml-qtquick-viewtransition#targetItems-attached-prop&quot;&gt;targetItems&lt;/a&gt; values are the same for every &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;displaced&lt;/code&gt; transition that is triggered by a particular add operation.</source>
          <target state="translated">だから、一方&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; .item、&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; .INDEXと&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransitionの&lt;/a&gt; .destination値は、実行される各個々の遷移のために変化&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;。&lt;a href=&quot;qml-qtquick-viewtransition#targetIndexes-attached-prop&quot;&gt;targetIndexes&lt;/a&gt;および&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;。&lt;a href=&quot;qml-qtquick-viewtransition#targetItems-attached-prop&quot;&gt;targetItemsの&lt;/a&gt;値は、特定の追加操作によってトリガーされるすべての &lt;code&gt;add&lt;/code&gt; および &lt;code&gt;displaced&lt;/code&gt; 遷移で同じです。</target>
        </trans-unit>
        <trans-unit id="16927540f49a67f6754a0b1c6cf05afdc563aa8e" translate="yes" xml:space="preserve">
          <source>So, while the ViewTransition.item, ViewTransition.index and ViewTransition.destination values vary for each individual transition that is run, the ViewTransition.&lt;a href=&quot;qml-qtquick-viewtransition#targetIndexes-attached-prop&quot;&gt;targetIndexes&lt;/a&gt; and ViewTransition.&lt;a href=&quot;qml-qtquick-viewtransition#targetItems-attached-prop&quot;&gt;targetItems&lt;/a&gt; values are the same for every &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;displaced&lt;/code&gt; transition that is triggered by a particular add operation.</source>
          <target state="translated">したがって、ViewTransition.item、ViewTransition.index、およびViewTransition.destinationの値は、実行される個々の遷移ごとに異なりますが、ViewTransitionです。&lt;a href=&quot;qml-qtquick-viewtransition#targetIndexes-attached-prop&quot;&gt;targetIndexes&lt;/a&gt;とViewTransition。&lt;a href=&quot;qml-qtquick-viewtransition#targetItems-attached-prop&quot;&gt;targetItemsの&lt;/a&gt;値は、特定の追加操作によってトリガーされるすべての &lt;code&gt;add&lt;/code&gt; および &lt;code&gt;displaced&lt;/code&gt; 遷移で同じです。</target>
        </trans-unit>
        <trans-unit id="ce92c87d46725bfc4d8e9af6673890567b5eca75" translate="yes" xml:space="preserve">
          <source>So, you are not limited to call functions. In a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element you can put zero or more C++ statements, and in</source>
          <target state="translated">したがって、関数を呼び出すことに限定されません。内 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 要素あなたがゼロまたはそれ以上のC ++の文を置くことができる、とで</target>
        </trans-unit>
        <trans-unit id="bc6d8c25d5590c5a0f37e92d605a82c1a0cc7920" translate="yes" xml:space="preserve">
          <source>So, you no longer have to worry about rearranging widgets for different platforms, settings, and languages.</source>
          <target state="translated">そのため、異なるプラットフォーム、設定、および言語用のウィジェットを再配置することを心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="94d3d3d075bec544d593fda545be27d10a66fdd8" translate="yes" xml:space="preserve">
          <source>SocialAffairs</source>
          <target state="translated">SocialAffairs</target>
        </trans-unit>
        <trans-unit id="147195b943b996129b7bc2e6aa282d4c44864dee" translate="yes" xml:space="preserve">
          <source>Socket activated, used to implement &lt;a href=&quot;qsocketnotifier&quot;&gt;QSocketNotifier&lt;/a&gt;.</source>
          <target state="translated">ソケットがアクティブ化され、&lt;a href=&quot;qsocketnotifier&quot;&gt;QSocketNotifierの&lt;/a&gt;実装に使用されます。</target>
        </trans-unit>
        <trans-unit id="5e5c1adabd9e632aecff79a85337bd03b52888ac" translate="yes" xml:space="preserve">
          <source>Socket is attempting to connect to a device.</source>
          <target state="translated">ソケットがデバイスに接続しようとしています。</target>
        </trans-unit>
        <trans-unit id="0139769ddcd014f331244f8d9a0ccfe87aadf52a" translate="yes" xml:space="preserve">
          <source>Socket is bound to a local address and port.</source>
          <target state="translated">ソケットはローカルアドレスとポートにバインドされています。</target>
        </trans-unit>
        <trans-unit id="74436f2f2ff8c07895b29e63dc49f3ac9d7584ec" translate="yes" xml:space="preserve">
          <source>Socket is connected and will be closed once all pending data is written to the socket.</source>
          <target state="translated">ソケットが接続されており、すべての保留中のデータがソケットに書き込まれると終了します。</target>
        </trans-unit>
        <trans-unit id="420311d95838c74487d0a519bdf8e6e61ade65d5" translate="yes" xml:space="preserve">
          <source>Socket is connected to a device.</source>
          <target state="translated">ソケットはデバイスに接続されています。</target>
        </trans-unit>
        <trans-unit id="7859e379bb4509a4137b8e126f716a407154c28b" translate="yes" xml:space="preserve">
          <source>Socket is listening for incoming connections.</source>
          <target state="translated">ソケットは着信接続をリッスンしています。</target>
        </trans-unit>
        <trans-unit id="e9982027706df7085bb80bd4c946059549487581" translate="yes" xml:space="preserve">
          <source>Socket is not connected.</source>
          <target state="translated">ソケットが接続されていません。</target>
        </trans-unit>
        <trans-unit id="157ae7e57f4e6d04eede880f260263af00e2318e" translate="yes" xml:space="preserve">
          <source>Socket is querying connection parameters.</source>
          <target state="translated">ソケットは接続パラメータを照会しています。</target>
        </trans-unit>
        <trans-unit id="968c009e49bfb5a3b472294b47747ba7152a9501" translate="yes" xml:space="preserve">
          <source>Soft</source>
          <target state="translated">Soft</target>
        </trans-unit>
        <trans-unit id="5cdc9d79faae37afab5cf6d28cd7386c138a850d" translate="yes" xml:space="preserve">
          <source>SoftRhythmAndBlues</source>
          <target state="translated">SoftRhythmAndBlues</target>
        </trans-unit>
        <trans-unit id="43e4ae6b39ae3ffa6f3f55d87b99f42b00a0660b" translate="yes" xml:space="preserve">
          <source>SoftRock</source>
          <target state="translated">SoftRock</target>
        </trans-unit>
        <trans-unit id="31d5e4361c66ef3392c14dd462df6766c9b38cbd" translate="yes" xml:space="preserve">
          <source>Software - Request with the &lt;code&gt;&quot;software&quot;&lt;/code&gt; string or the &lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface::Software&lt;/a&gt; enum value.</source>
          <target state="translated">ソフトウェア- &lt;code&gt;&quot;software&quot;&lt;/code&gt; 文字列または&lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface :: Software&lt;/a&gt;列挙値を使用したリクエスト。</target>
        </trans-unit>
        <trans-unit id="a5eee21e634815badd7d7f51bdf882fb9a0c1c75" translate="yes" xml:space="preserve">
          <source>Software Adaptation</source>
          <target state="translated">ソフトウェアの適応</target>
        </trans-unit>
        <trans-unit id="5d5b48a34830f7379d87e8112a78e54b771dea6a" translate="yes" xml:space="preserve">
          <source>Software flow control (XON/XOFF).</source>
          <target state="translated">ソフトウェアフロー制御(XON/XOFF)。</target>
        </trans-unit>
        <trans-unit id="8523248b984d311b54c015bf3a112e2a119ea2a8" translate="yes" xml:space="preserve">
          <source>Solar Hijri Calendar System</source>
          <target state="translated">ソーラーヒジュリカレンダーシステム</target>
        </trans-unit>
        <trans-unit id="b4f91bdb0e1b0e40fff4debcd0fea22f1999f491" translate="yes" xml:space="preserve">
          <source>Solution</source>
          <target state="translated">Solution</target>
        </trans-unit>
        <trans-unit id="bd4c9bdccf250ec96b1d18aa6824e58914dfd3cb" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://doc.qt.io/qt-5.13/examples-activeqt.html&quot;&gt;example applications&lt;/a&gt; that use standard ActiveX controls to provide high-level user interface functionality are provided.</source>
          <target state="translated">標準のActiveXコントロールを使用して高レベルのユーザーインターフェイス機能を提供する&lt;a href=&quot;https://doc.qt.io/qt-5.13/examples-activeqt.html&quot;&gt;アプリケーションの例が&lt;/a&gt;いくつか提供されています。</target>
        </trans-unit>
        <trans-unit id="8e8e555aeb2de3395b2c7f201e5447b8f2d9a621" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://doc.qt.io/qt-5.13/examples-activeqt.html&quot;&gt;example implementations&lt;/a&gt; of ActiveX controls and COM objects are provided.</source>
          <target state="translated">ActiveXコントロールとCOMオブジェクトの&lt;a href=&quot;https://doc.qt.io/qt-5.13/examples-activeqt.html&quot;&gt;実装例が&lt;/a&gt;いくつか提供されています。</target>
        </trans-unit>
        <trans-unit id="6ddf14653f9fea77eb88321601009147ae45516c" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://doc.qt.io/qt-5.15/examples-activeqt.html&quot;&gt;example applications&lt;/a&gt; that use standard ActiveX controls to provide high-level user interface functionality are provided.</source>
          <target state="translated">標準のActiveXコントロールを使用して高レベルのユーザーインターフェイス機能を提供する&lt;a href=&quot;https://doc.qt.io/qt-5.15/examples-activeqt.html&quot;&gt;アプリケーションの例が&lt;/a&gt;いくつか提供されています。</target>
        </trans-unit>
        <trans-unit id="0e833baaeb6fd104b190cf8a1863271b597b096b" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;https://doc.qt.io/qt-5.15/examples-activeqt.html&quot;&gt;example implementations&lt;/a&gt; of ActiveX controls and COM objects are provided.</source>
          <target state="translated">ActiveXコントロールとCOMオブジェクトの&lt;a href=&quot;https://doc.qt.io/qt-5.15/examples-activeqt.html&quot;&gt;実装例が&lt;/a&gt;いくつか提供されています。</target>
        </trans-unit>
        <trans-unit id="ad120a0f99a83a8ed1c54af31813eabde3f9c047" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; functions, e.g. &lt;a href=&quot;qobject#children&quot;&gt;children&lt;/a&gt;(), return a &lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectList&lt;/a&gt;. &lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectList&lt;/a&gt; is a typedef for &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *&amp;gt;.</source>
          <target state="translated">&lt;a href=&quot;qobject#children&quot;&gt;children&lt;/a&gt;（）などの一部の&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;関数は&lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectListを返し&lt;/a&gt;ます。&lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectList&lt;/a&gt;は&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *&amp;gt;のtypedefです。</target>
        </trans-unit>
        <trans-unit id="fc0d40bfc19364a237b0f8a870c26d26feabd4b9" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; engines are implemented on top of OpenGL. This will be detected at configure time and &lt;a href=&quot;#qmake-libs-opengl&quot;&gt;QMAKE_LIBS_OPENGL&lt;/a&gt; will be implicitly added to &lt;a href=&quot;#qmake-libs-openvg&quot;&gt;QMAKE_LIBS_OPENVG&lt;/a&gt; wherever the &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; libraries are linked.</source>
          <target state="translated">一部の&lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt;エンジンはOpenGLの上に実装されています。これは構成時に検出され、&lt;a href=&quot;#qmake-libs-opengl&quot;&gt;QMAKE_LIBS_OPENGL&lt;/a&gt;は、&lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt;ライブラリがリンクされて&lt;a href=&quot;#qmake-libs-openvg&quot;&gt;いる&lt;/a&gt;場合は常にQMAKE_LIBS_OPENVGに暗黙的に追加されます。</target>
        </trans-unit>
        <trans-unit id="0b61528b8221e804aa29e8e032bd01911ef4e4cd" translate="yes" xml:space="preserve">
          <source>Some &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; engines are implemented on top of OpenGL. This will be detected at configure time and &lt;a href=&quot;qmake-variable-reference#qmake-libs-opengl&quot;&gt;QMAKE_LIBS_OPENGL&lt;/a&gt; will be implicitly added to &lt;a href=&quot;qmake-variable-reference#qmake-libs-openvg&quot;&gt;QMAKE_LIBS_OPENVG&lt;/a&gt; wherever the &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; libraries are linked.</source>
          <target state="translated">一部の&lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt;エンジンは、OpenGLの上に実装されています。これは、設定時に検出され、&lt;a href=&quot;qmake-variable-reference#qmake-libs-opengl&quot;&gt;QMAKE_LIBS_OPENGLは、&lt;/a&gt;暗黙のうちに追加されます&lt;a href=&quot;qmake-variable-reference#qmake-libs-openvg&quot;&gt;QMAKE_LIBS_OPENVG&lt;/a&gt;どこ&lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;のOpenVGの&lt;/a&gt;ライブラリがリンクされています。</target>
        </trans-unit>
        <trans-unit id="9a65cc896d2c394a64a63a22020c7b31fb3e2b18" translate="yes" xml:space="preserve">
          <source>Some API features are not available on all platforms. The &lt;a href=&quot;qnetworkconfigurationmanager#Capability-enum&quot;&gt;QNetworkConfigurationManager::Capability&lt;/a&gt; should be used to detect platform features at runtime.</source>
          <target state="translated">一部のAPI機能は、すべてのプラットフォームで使用できるわけではありません。&lt;a href=&quot;qnetworkconfigurationmanager#Capability-enum&quot;&gt;QNetworkConfigurationManager ::機能は&lt;/a&gt;、実行時にプラットフォームの機能を検出するために使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="162b7646e4f363e2a45ff8f230ebe882a818c0c7" translate="yes" xml:space="preserve">
          <source>Some ActiveX controls might be unstable when connected to an event sink. To get OLE events you must use standard COM methods to register your own event sink. Use &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;queryInterface&lt;/a&gt;() to get access to the raw COM object.</source>
          <target state="translated">イベントシンクに接続すると、一部のActiveXコントロールが不安定になる場合があります。OLEイベントを取得するには、標準のCOMメソッドを使用して、独自のイベントシンクを登録する必要があります。&lt;a href=&quot;qaxbase#queryInterface&quot;&gt;queryInterface&lt;/a&gt;（）を使用して、生のCOMオブジェクトにアクセスします。</target>
        </trans-unit>
        <trans-unit id="22735a8f9b7b8b9d58fca6f4f384631ef0943c76" translate="yes" xml:space="preserve">
          <source>Some ActiveX controls might be unstable when used with OLE automation. Use standard COM methods to use those controls through the COM interfaces provided by &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;queryInterface&lt;/a&gt;().</source>
          <target state="translated">一部のActiveXコントロールは、OLEオートメーションで使用すると不安定になる場合があります。標準のCOMメソッドを使用して、&lt;a href=&quot;qaxbase#queryInterface&quot;&gt;queryInterface&lt;/a&gt;（）によって提供されるCOMインターフェイスを介してこれらのコントロールを使用します。</target>
        </trans-unit>
        <trans-unit id="3cdbd560a6d9fc00acf9c205af629467935b7d30" translate="yes" xml:space="preserve">
          <source>Some GUI applications provide a special batch mode ie. provide command line arguments for executing tasks without manual intervention. In such non-GUI mode, it is often sufficient to instantiate a plain &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; to avoid unnecessarily initializing resources needed for a graphical user interface. The following example shows how to dynamically create an appropriate type of application instance:</source>
          <target state="translated">一部のGUIアプリケーションは、特別なバッチモードを提供します。手動操作なしでタスクを実行するためのコマンドライン引数を提供します。このような非GUIモードでは、多くの場合、グラフィカルユーザーインターフェイスに必要なリソースを不必要に初期化しないように、プレーンな&lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;をインスタンス化するだけで十分です。次の例は、適切なタイプのアプリケーションインスタンスを動的に作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="194b9dc1862074d13830b34ddc795dfa502def1c" translate="yes" xml:space="preserve">
          <source>Some QML types are implicitly uncreatable, in particular types exposed with &lt;a href=&quot;qqmlengine#QML_ANONYMOUS&quot;&gt;QML_ANONYMOUS&lt;/a&gt; or namespaces exposed with &lt;a href=&quot;qqmlengine#QML_ELEMENT&quot;&gt;QML_ELEMENT&lt;/a&gt; or &lt;a href=&quot;qqmlengine#QML_NAMED_ELEMENT&quot;&gt;QML_NAMED_ELEMENT&lt;/a&gt;(). For such types, QML_UNCREATABLE() can be used to provide a custom error message.</source>
          <target state="translated">いくつかのQMLの種類はで露光特定のタイプで、暗黙的にuncreatableある&lt;a href=&quot;qqmlengine#QML_ANONYMOUS&quot;&gt;QML_ANONYMOUS&lt;/a&gt;かで露光名前空間&lt;a href=&quot;qqmlengine#QML_ELEMENT&quot;&gt;QML_ELEMENT&lt;/a&gt;または&lt;a href=&quot;qqmlengine#QML_NAMED_ELEMENT&quot;&gt;QML_NAMED_ELEMENT&lt;/a&gt;（）。このようなタイプの場合、QML_UNCREATABLE（）を使用してカスタムエラーメッセージを提供できます。</target>
        </trans-unit>
        <trans-unit id="7dca017b949e5ce8f43ff7b27e4b56d59608e2d7" translate="yes" xml:space="preserve">
          <source>Some QObject functions, e.g. &lt;a href=&quot;qobject#children&quot;&gt;children&lt;/a&gt;(), return a &lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectList&lt;/a&gt;. &lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectList&lt;/a&gt; is a typedef for &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;QObject *&amp;gt;.</source>
          <target state="translated">一部のQObject関数（&lt;a href=&quot;qobject#children&quot;&gt;子&lt;/a&gt;（）など）は、&lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectListを返し&lt;/a&gt;ます。&lt;a href=&quot;qobject#QObjectList-typedef&quot;&gt;QObjectList&lt;/a&gt;は、&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;QObject *&amp;gt;のtypedefです。</target>
        </trans-unit>
        <trans-unit id="2b1d02fed5f09e5d2dd53d254fa2e49f81491392" translate="yes" xml:space="preserve">
          <source>Some Qt classes and functions are thread-safe. These are mainly the thread-related classes (e.g. &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;) and fundamental functions (e.g. &lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;QCoreApplication::postEvent&lt;/a&gt;()).</source>
          <target state="translated">一部のQtクラスと関数はスレッドセーフです。これらは主にスレッド関連のクラス（例：&lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;）と基本的な関数（例：&lt;a href=&quot;qcoreapplication#postEvent&quot;&gt;QCoreApplication :: postEvent&lt;/a&gt;（））です。</target>
        </trans-unit>
        <trans-unit id="46703cbb26d7b25acbc5a5135113f2487e7ed7f2" translate="yes" xml:space="preserve">
          <source>Some RPM versions have problems installing some of the Qt RPM archives where installation stops with an error message warning about a &lt;b&gt;Failed Dependency&lt;/b&gt;. Use the &lt;code&gt;--nodeps&lt;/code&gt; option of &lt;code&gt;rpm&lt;/code&gt; as workaround this problem.</source>
          <target state="translated">一部のRPMバージョンでは、Qt RPMアーカイブの一部のインストールに問題があり、&lt;b&gt;失敗した依存関係&lt;/b&gt;に関するエラーメッセージ警告でインストールが停止します。この問題の回避策として、 &lt;code&gt;rpm&lt;/code&gt; の &lt;code&gt;--nodeps&lt;/code&gt; オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="70082637a16ac7e4ea50b1f21261f3a8d77d1660" translate="yes" xml:space="preserve">
          <source>Some Windows commands (for example, &lt;code&gt;dir&lt;/code&gt;) are not provided by separate applications, but by the command interpreter itself. If you attempt to use &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; to execute these commands directly, it won't work. One possible solution is to execute the command interpreter itself (&lt;code&gt;cmd.exe&lt;/code&gt; on some Windows systems), and ask the interpreter to execute the desired command.</source>
          <target state="translated">一部のWindowsコマンド（ &lt;code&gt;dir&lt;/code&gt; など）は、個別のアプリケーションではなく、コマンドインタープリター自体によって提供されます。&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;を使用してこれらのコマンドを直接実行しようとしても、機能しません。考えられる解決策の1つは、コマンドインタープリター自体（一部のWindowsシステムでは &lt;code&gt;cmd.exe&lt;/code&gt; ）を実行し、インタープリターに目的のコマンドを実行するように依頼することです。</target>
        </trans-unit>
        <trans-unit id="c04c2d7ba6e515b31f491d3fddc27ab5ce5dcad5" translate="yes" xml:space="preserve">
          <source>Some Windows commands (for example, &lt;code&gt;dir&lt;/code&gt;) are not provided by separate applications, but by the command interpreter itself. If you attempt to use QProcess to execute these commands directly, it won't work. One possible solution is to execute the command interpreter itself (&lt;code&gt;cmd.exe&lt;/code&gt; on some Windows systems), and ask the interpreter to execute the desired command.</source>
          <target state="translated">一部のWindowsコマンド（たとえば、 &lt;code&gt;dir&lt;/code&gt; ）は、個別のアプリケーションではなく、コマンドインタープリター自体によって提供されます。 QProcessを使用してこれらのコマンドを直接実行しようとすると、機能しません。考えられる解決策の1つは、コマンドインタープリター自体（一部のWindowsシステムでは &lt;code&gt;cmd.exe&lt;/code&gt; ）を実行し、インタープリターに目的のコマンドを実行するように依頼することです。</target>
        </trans-unit>
        <trans-unit id="3f326897c041ee3357cb49eab1bdb8db80b2efc5" translate="yes" xml:space="preserve">
          <source>Some X11 window managers do not support the &quot;stays on top&quot; flag. A solution is to set up a timer that periodically calls &lt;a href=&quot;qwidget#raise&quot;&gt;raise&lt;/a&gt;() on the splash screen to simulate the &quot;stays on top&quot; effect.</source>
          <target state="translated">一部のX11ウィンドウマネージャーは、「stay on top」フラグをサポートしていません。解決策は、スプラッシュ画面で定期的に&lt;a href=&quot;qwidget#raise&quot;&gt;raise&lt;/a&gt;（）を呼び出すタイマーを設定して、「stay on top」効果をシミュレートすることです。</target>
        </trans-unit>
        <trans-unit id="cee646358ffb27f8e10429633f579ceb1f27dd40" translate="yes" xml:space="preserve">
          <source>Some algorithms have special requirements on the value type stored in the containers. For example, &lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;qDeleteAll&lt;/a&gt;() requires that the value type is a non-const pointer type (for example, &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *). The value type requirements are specified for each algorithm, and the compiler will produce an error if a requirement isn't met.</source>
          <target state="translated">一部のアルゴリズムには、コンテナに格納されている値の型に関する特別な要件があります。たとえば、&lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;qDeleteAll&lt;/a&gt;（）では、値の型が非constポインター型（たとえば、&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *）である必要があります。値タイプの要件はアルゴリズムごとに指定され、要件が満たされない場合、コンパイラーはエラーを生成します。</target>
        </trans-unit>
        <trans-unit id="f723d0a96da7bb40e8e24e6dfecfa76ec22ebccb" translate="yes" xml:space="preserve">
          <source>Some algorithms have special requirements on the value type stored in the containers. For example, &lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;qDeleteAll&lt;/a&gt;() requires that the value type is a non-const pointer type (for example, &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; *). The value type requirements are specified for each algorithm, and the compiler will produce an error if a requirement isn't met.</source>
          <target state="translated">一部のアルゴリズムには、コンテナに格納されている値の型に特別な要件があります。たとえば、&lt;a href=&quot;qtalgorithms#qDeleteAll&quot;&gt;qDeleteAll&lt;/a&gt;（）では、値の型が非constポインタ型（たとえば、&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; *）である必要があります。値型の要件はアルゴリズムごとに指定されており、要件が満たされない場合、コンパイラーはエラーを生成します。</target>
        </trans-unit>
        <trans-unit id="e0d6c5042ca6aa5ed239d9f4c08b4ad0fef3fe27" translate="yes" xml:space="preserve">
          <source>Some applications may need to interface Qt with other frameworks. This often means using graphics contexts or other types of native handles created by one framework with another. For example, on some platforms, &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; offers the ability to wrap an existing native OpenGL context, instead of creating a new one. This existing native context can be created by some other third-party code.</source>
          <target state="translated">一部のアプリケーションは、Qtを他のフレームワークとインターフェースする必要があるかもしれません。これは、多くの場合、グラフィックスコンテキストまたは別のフレームワークで作成された他のタイプのネイティブハンドルを使用することを意味します。たとえば、一部のプラットフォームでは、&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;は、新しいコンテキストを作成する代わりに、既存のネイティブOpenGLコンテキストをラップする機能を提供します。この既存のネイティブコンテキストは、他のサードパーティコードによって作成できます。</target>
        </trans-unit>
        <trans-unit id="6eee6a142e6cbbcf87880670099f60f1b3dddcde" translate="yes" xml:space="preserve">
          <source>Some applications may want to suppress any form of roaming altogether. Possible use cases may be high priority downloads or remote services which cannot handle a roaming enabled client. Clients can suppress roaming by connecting to the &lt;a href=&quot;qnetworksession#preferredConfigurationChanged&quot;&gt;preferredConfigurationChanged&lt;/a&gt;() signal and answer each signal emission with &lt;a href=&quot;qnetworksession#ignore&quot;&gt;ignore&lt;/a&gt;().</source>
          <target state="translated">一部のアプリケーションでは、すべての形式のローミングを完全に抑制したい場合があります。考えられる使用例としては、優先度の高いダウンロードや、ローミング対応クライアントを処理できないリモートサービスなどがあります。クライアントは、&lt;a href=&quot;qnetworksession#preferredConfigurationChanged&quot;&gt;preferredConfigurationChanged&lt;/a&gt;（）シグナルに接続してローミングを抑制し、&lt;a href=&quot;qnetworksession#ignore&quot;&gt;ignore&lt;/a&gt;（）で各シグナルの発信に応答できます。</target>
        </trans-unit>
        <trans-unit id="0cac5bd2d8cb6853c3303f81f4e0bcdacf5190dc" translate="yes" xml:space="preserve">
          <source>Some applications will want to be functional with multiple accelerated graphics backends. This has consequences for &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; items because the supported shading languages may vary from backend to backend.</source>
          <target state="translated">一部のアプリケーションは、複数の高速グラフィックバックエンドで機能する必要があります。サポートされるシェーディング言語はバックエンドによって異なるため、これは&lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt;アイテムに影響を与えます。</target>
        </trans-unit>
        <trans-unit id="9ec00eafdb808d1ae96587d410f8c22b23739c0a" translate="yes" xml:space="preserve">
          <source>Some applications will want to be functional with multiple accelerated graphics backends. This has consequences for ShaderEffect items because the supported shading languages may vary from backend to backend.</source>
          <target state="translated">アプリケーションによっては、複数のアクセラレーションされたグラフィックスバックエンドで機能したい場合もあるでしょう。これは、サポートされているシェーディング言語がバックエンドによって異なる場合があるため、ShaderEffect アイテムに影響を及ぼします。</target>
        </trans-unit>
        <trans-unit id="60aec3d66247e24acd4e3074bb92d50c43197b91" translate="yes" xml:space="preserve">
          <source>Some applications, e.g., a word processor or a DTP application might need more features than the ones provided by Qt's layout engine, in which case you can subclass &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; to provide custom layout behavior for your text documents.</source>
          <target state="translated">ワードプロセッサやDTPアプリケーションなどの一部のアプリケーションは、Qtのレイアウトエンジンが提供する機能よりも多くの機能を必要とする場合があります。その場合、&lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt;をサブクラス化して、テキストドキュメントにカスタムレイアウト動作を提供できます。</target>
        </trans-unit>
        <trans-unit id="812011b8b37a38edd44234a24166e87b01b2f303" translate="yes" xml:space="preserve">
          <source>Some applications, e.g., a word processor or a DTP application might need more features than the ones provided by Qt's layout engine, in which case you can subclass QAbstractTextDocumentLayout to provide custom layout behavior for your text documents.</source>
          <target state="translated">ワープロや DTP アプリケーションのようなアプリケーションの中には、Qt のレイアウトエンジンが提供する機能以上の機能を必要とするものがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="d3bb3ecd180a54b771a03e20cf47a3d9c9ae5587" translate="yes" xml:space="preserve">
          <source>Some applications, such as Qt Linguist, must be able to support changes to the user's language settings while they are still running. To make widgets aware of changes to the installed &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; objects, reimplement the widget's &lt;a href=&quot;qwidget#changeEvent&quot;&gt;changeEvent()&lt;/a&gt; function to check whether the event is a &lt;a href=&quot;qevent#Type-enum&quot;&gt;LanguageChange&lt;/a&gt; event, and update the text displayed by widgets using the &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt; function in the usual way. For example:</source>
          <target state="translated">Qt Linguistなどの一部のアプリケーションは、実行中のユーザーの言語設定の変更をサポートできる必要があります。インストールされた&lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;オブジェクトへの変更をウィジェットに認識させるには、ウィジェットの&lt;a href=&quot;qwidget#changeEvent&quot;&gt;changeEvent（）&lt;/a&gt;関数を再実装して、イベントが&lt;a href=&quot;qevent#Type-enum&quot;&gt;LanguageChange&lt;/a&gt;イベントかどうかを確認し、通常の方法で&lt;a href=&quot;qobject#tr&quot;&gt;tr（）&lt;/a&gt;関数を使用してウィジェットによって表示されるテキストを更新します。例えば：</target>
        </trans-unit>
        <trans-unit id="afc7ee38d30370f68abe833d4882a4d4fee9142d" translate="yes" xml:space="preserve">
          <source>Some attributes may not be intended to be readable by end users, the label field of such attributes are empty to indicate this fact.</source>
          <target state="translated">いくつかの属性は、エンドユーザが読めるようにすることを意図していない場合があり、そのような属性のラベルフィールドは、この事実を示すために空である。</target>
        </trans-unit>
        <trans-unit id="d1f75fb39baa735a212ae894e2f54591d90d889d" translate="yes" xml:space="preserve">
          <source>Some attributes may not be intended to be readable by end users, the label field of such attributes is empty to indicate this fact.</source>
          <target state="translated">いくつかの属性は、エンドユーザが読めるようにすることを意図していない場合があり、そのような属性のラベルフィールドは、この事実を示すために空欄になっています。</target>
        </trans-unit>
        <trans-unit id="d2c4b200c4ad51f575fd9239721227f984b309d1" translate="yes" xml:space="preserve">
          <source>Some backends (&lt;code&gt;evdev&lt;/code&gt; on Linux and &lt;code&gt;xinput&lt;/code&gt; on Windows) and the plugin loader utilize the logging category &lt;code&gt;qt.gamepad&lt;/code&gt;. Enabling this will print useful information on the debug output.</source>
          <target state="translated">いくつかのバックエンド（ &lt;code&gt;evdev&lt;/code&gt; の Linuxとの &lt;code&gt;xinput&lt;/code&gt; Windowsの場合）とプラグインローダーは、ロギングカテゴリの利用 &lt;code&gt;qt.gamepad&lt;/code&gt; を。これを有効にすると、デバッグ出力に役立つ情報が出力されます。</target>
        </trans-unit>
        <trans-unit id="4919cede0988547ba79398c6b62e6fdd3bd7fe28" translate="yes" xml:space="preserve">
          <source>Some backends may support saving and removing places. This can be done by calling the &lt;a href=&quot;qml-qtlocation-place#save-method&quot;&gt;Place::save&lt;/a&gt;() and &lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;Place::remove&lt;/a&gt;() methods respectively. Note that in order to save a &lt;a href=&quot;qml-qtlocation-place&quot;&gt;Place&lt;/a&gt;, a &lt;a href=&quot;#plugin&quot;&gt;Plugin&lt;/a&gt; must be assigned to specify which backend we are saving to. The &lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;status&lt;/a&gt; property will transition into the &lt;code&gt;Saving&lt;/code&gt; state while the save operation is happening and on successful completion will move to the &lt;code&gt;Ready&lt;/code&gt; state. The following snippet shows how to save and remove a place using javascript.</source>
          <target state="translated">一部のバックエンドは、場所の保存と削除をサポートしている場合があります。これは、&lt;a href=&quot;qml-qtlocation-place#save-method&quot;&gt;Place :: save&lt;/a&gt;（）メソッドと&lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;Place :: remove&lt;/a&gt;（）メソッドをそれぞれ呼び出すことで実行できます。節約のためにという注意&lt;a href=&quot;qml-qtlocation-place&quot;&gt;場所を&lt;/a&gt;、&lt;a href=&quot;#plugin&quot;&gt;プラグインは、&lt;/a&gt;私たちが保存されているバックエンドを指定するために割り当てる必要があります。&lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;ステータス&lt;/a&gt;プロパティはに移行します &lt;code&gt;Saving&lt;/code&gt; 保存操作が起こっている間の状態と正常に完了したに移動します &lt;code&gt;Ready&lt;/code&gt; 状態。次のスニペットは、JavaScriptを使用して場所を保存および削除する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="665de0b5b012a160a8cb29db3f25960b4c974451" translate="yes" xml:space="preserve">
          <source>Some backends may support saving and removing places. This can be done by calling the &lt;a href=&quot;qml-qtlocation-place#save-method&quot;&gt;Place::save&lt;/a&gt;() and &lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;Place::remove&lt;/a&gt;() methods respectively. Note that in order to save a &lt;a href=&quot;qml-qtlocation-place&quot;&gt;Place&lt;/a&gt;, a &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; must be assigned to specify which backend we are saving to. The &lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;status&lt;/a&gt; property will transition into the &lt;code&gt;Saving&lt;/code&gt; state while the save operation is happening and on successful completion will move to the &lt;code&gt;Ready&lt;/code&gt; state. The following snippet shows how to save and remove a place using javascript.</source>
          <target state="translated">一部のバックエンドは、場所の保存と削除をサポートしている場合があります。これは、&lt;a href=&quot;qml-qtlocation-place#save-method&quot;&gt;Place :: save&lt;/a&gt;（）メソッドと&lt;a href=&quot;qml-qtlocation-place#remove-method&quot;&gt;Place :: remove&lt;/a&gt;（）メソッドをそれぞれ呼び出すことで実行できます。&lt;a href=&quot;qml-qtlocation-place&quot;&gt;プレイス&lt;/a&gt;を保存するには、&lt;a href=&quot;location-places-qml#plugin&quot;&gt;プラグインを&lt;/a&gt;割り当てて、保存先のバックエンドを指定する必要があることに注意してください。&lt;a href=&quot;qml-qtlocation-place#status-prop&quot;&gt;ステータス&lt;/a&gt;プロパティはに移行します &lt;code&gt;Saving&lt;/code&gt; 保存操作が起こっている間の状態と正常に完了したに移動します &lt;code&gt;Ready&lt;/code&gt; 状態。次のスニペットは、JavaScriptを使用して場所を保存および削除する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c950ed35ade96b1fa1854aaa20defbc6a71921c3" translate="yes" xml:space="preserve">
          <source>Some backends only support enabling or disabling the buffer and do not give control over the size. In this case, the &lt;a href=&quot;qsensor#maxBufferSize-prop&quot;&gt;maxBufferSize&lt;/a&gt; and &lt;a href=&quot;qsensor#efficientBufferSize-prop&quot;&gt;efficientBufferSize&lt;/a&gt; properties might not be set at all, even though buffering is supported. Setting the bufferSize property to any value greater than 1 will enable buffering. After the sensor has been started, the bufferSize property will be set to the actual value by the backend.</source>
          <target state="translated">一部のバックエンドは、バッファの有効化または無効化のみをサポートし、サイズの制御を提供しません。この場合、バッファリングはサポートされていますが、&lt;a href=&quot;qsensor#maxBufferSize-prop&quot;&gt;maxBufferSize&lt;/a&gt;プロパティと&lt;a href=&quot;qsensor#efficientBufferSize-prop&quot;&gt;efficientBufferSize&lt;/a&gt;プロパティはまったく設定されていない可能性があります。bufferSizeプロパティを1より大きい値に設定すると、バッファリングが有効になります。センサーが起動した後、bufferSizeプロパティはバックエンドによって実際の値に設定されます。</target>
        </trans-unit>
        <trans-unit id="042dcf25995f978abac80544db1d24697642882f" translate="yes" xml:space="preserve">
          <source>Some basic types are provided by the &lt;code&gt;QtQuick&lt;/code&gt; module and thus cannot be used as property types unless the module is imported. See the &lt;a href=&quot;qtqml-typesystem-basictypes&quot;&gt;QML Basic Types&lt;/a&gt; documentation for more details.</source>
          <target state="translated">一部の基本タイプは &lt;code&gt;QtQuick&lt;/code&gt; モジュールによって提供されるため、モジュールをインポートしない限り、プロパティタイプとして使用することはできません。詳細については、&lt;a href=&quot;qtqml-typesystem-basictypes&quot;&gt;QML基本タイプの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="26141714e61c39b279f1be4582e0496445a5f344" translate="yes" xml:space="preserve">
          <source>Some basic types are provided by the &lt;code&gt;QtQuick&lt;/code&gt; module and thus cannot be used as property types unless the module is imported. See the &lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;QML Basic Types&lt;/a&gt; documentation for more details.</source>
          <target state="translated">一部の基本タイプは &lt;code&gt;QtQuick&lt;/code&gt; モジュールによって提供されるため、モジュールがインポートされない限り、プロパティタイプとして使用できません。詳細については、&lt;a href=&quot;qtqml-typesystem-basictypes#&quot;&gt;QML基本タイプの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="28f66b9e26f27bf34978f8ee6776ce596fa2fed2" translate="yes" xml:space="preserve">
          <source>Some basic types are supported by the engine by default and do not require an &lt;a href=&quot;qtqml-syntax-imports&quot;&gt;import statement&lt;/a&gt; to be used, while others do require the client to import the module which provides them. All of the basic types listed below may be used as a &lt;code&gt;property&lt;/code&gt; type in a QML document, with the following exceptions:</source>
          <target state="translated">一部の基本タイプはデフォルトでエンジンによってサポートされており、&lt;a href=&quot;qtqml-syntax-imports&quot;&gt;インポートステートメント&lt;/a&gt;を使用する必要はありませんが、その他の基本タイプは、それらを提供するモジュールをインポートするようにクライアントに要求します。以下にリストされているすべての基本タイプは、以下の例外を除いて、QMLドキュメントの &lt;code&gt;property&lt;/code&gt; タイプとして使用できます。</target>
        </trans-unit>
        <trans-unit id="0c54863b6f3efbd61a066f4424c269890d544ef1" translate="yes" xml:space="preserve">
          <source>Some basic types are supported by the engine by default and do not require an &lt;a href=&quot;qtqml-syntax-imports#&quot;&gt;import statement&lt;/a&gt; to be used, while others do require the client to import the module which provides them. All of the basic types listed below may be used as a &lt;code&gt;property&lt;/code&gt; type in a QML document, with the following exceptions:</source>
          <target state="translated">一部の基本的なタイプはデフォルトでエンジンによってサポートされており、&lt;a href=&quot;qtqml-syntax-imports#&quot;&gt;インポート文&lt;/a&gt;を使用する必要はありませんが、クライアントがそれらを提供するモジュールをインポートする必要があります。以下にリストされているすべての基本タイプは、QMLドキュメントの &lt;code&gt;property&lt;/code&gt; タイプとして使用できますが、次の例外があります。</target>
        </trans-unit>
        <trans-unit id="93c80cc439d14f33b80fc206b0e1a87855f8c0e9" translate="yes" xml:space="preserve">
          <source>Some basic types have properties: for example, the &lt;a href=&quot;qml-font&quot;&gt;font&lt;/a&gt; type has &lt;code&gt;pixelSize&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt; and &lt;code&gt;bold&lt;/code&gt; properties. Unlike properties of &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-typesystem-topic.html#qml-object-types&quot;&gt;object types&lt;/a&gt;, properties of basic types do not provide their own property change signals. It is only possible to create a property change signal handler for the basic type property itself:</source>
          <target state="translated">一部の基本タイプにはプロパティがあります。たとえば、&lt;a href=&quot;qml-font&quot;&gt;フォント&lt;/a&gt;タイプには &lt;code&gt;pixelSize&lt;/code&gt; 、 &lt;code&gt;family&lt;/code&gt; 、および &lt;code&gt;bold&lt;/code&gt; プロパティがあります。&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-typesystem-topic.html#qml-object-types&quot;&gt;オブジェクトタイプの&lt;/a&gt;プロパティとは異なり、基本タイプのプロパティは、独自のプロパティ変更信号を提供しません。基本タイププロパティ自体のプロパティ変更シグナルハンドラを作成することのみが可能です。</target>
        </trans-unit>
        <trans-unit id="eaaa748b619013f12cb25ac6bd4293b86d9e7a7a" translate="yes" xml:space="preserve">
          <source>Some basic types have properties: for example, the &lt;a href=&quot;qml-font&quot;&gt;font&lt;/a&gt; type has &lt;code&gt;pixelSize&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt; and &lt;code&gt;bold&lt;/code&gt; properties. Unlike properties of &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-typesystem-topic.html#qml-object-types&quot;&gt;object types&lt;/a&gt;, properties of basic types do not provide their own property change signals. It is only possible to create a property change signal handler for the basic type property itself:</source>
          <target state="translated">一部の基本タイプにはプロパティがあります。たとえば、&lt;a href=&quot;qml-font&quot;&gt;フォント&lt;/a&gt;タイプには、 &lt;code&gt;pixelSize&lt;/code&gt; 、 &lt;code&gt;family&lt;/code&gt; 、および &lt;code&gt;bold&lt;/code&gt; のプロパティがあります。&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-typesystem-topic.html#qml-object-types&quot;&gt;オブジェクトタイプの&lt;/a&gt;プロパティとは異なり、基本タイプのプロパティは独自のプロパティ変更シグナルを提供しません。基本型プロパティ自体のプロパティ変更シグナルハンドラーを作成することのみが可能です。</target>
        </trans-unit>
        <trans-unit id="12bd318b0af752dd1dcd8be7d036bc2a1811b0cf" translate="yes" xml:space="preserve">
          <source>Some basic types have properties: for example, the &lt;a href=&quot;qml-font&quot;&gt;font&lt;/a&gt; type has &lt;code&gt;pixelSize&lt;/code&gt;, &lt;code&gt;family&lt;/code&gt; and &lt;code&gt;bold&lt;/code&gt; properties. Unlike properties of &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-typesystem-topic.html#qml-object-types&quot;&gt;object types&lt;/a&gt;, properties of basic types do not provide their own property change signals. It is only possible to create a property change signal handler for the basic type property itself:</source>
          <target state="translated">一部の基本タイプにはプロパティがあります。たとえば、&lt;a href=&quot;qml-font&quot;&gt;フォント&lt;/a&gt;タイプには、 &lt;code&gt;pixelSize&lt;/code&gt; 、 &lt;code&gt;family&lt;/code&gt; 、および &lt;code&gt;bold&lt;/code&gt; のプロパティがあります。&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-typesystem-topic.html#qml-object-types&quot;&gt;オブジェクトタイプの&lt;/a&gt;プロパティとは異なり、基本タイプのプロパティは独自のプロパティ変更シグナルを提供しません。基本型プロパティ自体のプロパティ変更シグナルハンドラーを作成することのみが可能です。</target>
        </trans-unit>
        <trans-unit id="2c195a2983ccc3df664db09acc8d292a2601494e" translate="yes" xml:space="preserve">
          <source>Some cache implementations can keep these cache items in memory for performance reasons, but for security reasons they should not be written to disk.</source>
          <target state="translated">いくつかのキャッシュ実装では、性能上の理由からこれらのキャッシュアイテムをメモリに保持することができますが、セキュリティ上の理由からディスクに書き込まれるべきではありません。</target>
        </trans-unit>
        <trans-unit id="28cce1166c82a1ef7c80309201e0eebfdb514c3f" translate="yes" xml:space="preserve">
          <source>Some calendars, despite having no year 0, have a conventional numbering of the years before their first year, counting backwards from 1. For example, in the proleptic Gregorian calendar, successive years before 1 CE (the first year) are identified as 1 BCE, 2 BCE, 3 BCE and so on. For such calendars, negative year numbers are used to indicate these years before year 1, with -1 indicating the year before 1.</source>
          <target state="translated">例えば、プロレプティック・グレゴリオ暦では、1CE(最初の年)より前の連続した年を1BCE、2BCE、3BCEなどと表記しています。このような暦では、1年前の年を示すために負の年号が使われ、-1は1年前の年を示します。</target>
        </trans-unit>
        <trans-unit id="8a504b5e69d8652b0b696976cb4d9881128ab970" translate="yes" xml:space="preserve">
          <source>Some calendars, however, represent years before their first by an alternate numbering; for example, the proleptic Gregorian calendar's first year is 1 CE and the year before it is 1 BCE, preceded by 2 BCE and so on. In this case, we use negative year numbers for this alternate numbering, with year -1 as the year before year 1, year -2 as the year before year -1 and so on. Such a calendar is proleptic but has no year zero.</source>
          <target state="translated">例えば、プロレプティック・グレゴリオ暦の元年は1CEで、その前の年は1BCEで、その前の年は2BCEなどとなっています。この場合、この交互ナンバリングでは、-1年目を1年前の年、-2年目を-1年前の年などとし、負の年号を使用します。このような暦はプロレプティックですが、年号ゼロはありません。</target>
        </trans-unit>
        <trans-unit id="f43c2bb1336686e5886e3b5873a471ea5083d4ac" translate="yes" xml:space="preserve">
          <source>Some camera devices may not have flash hardware, or may not be configurable. In that case, there will be no &lt;a href=&quot;qcameraflashcontrol&quot;&gt;QCameraFlashControl&lt;/a&gt; available.</source>
          <target state="translated">一部のカメラデバイスには、フラッシュハードウェアがないか、構成できない場合があります。その場合、利用可能な&lt;a href=&quot;qcameraflashcontrol&quot;&gt;QCameraFlashControl&lt;/a&gt;はありません。</target>
        </trans-unit>
        <trans-unit id="2db437c7de41a603f281ee5852a28961eee97928" translate="yes" xml:space="preserve">
          <source>Some camera devices may not have flash hardware, or may not be configurable. In that case, there will be no QCameraFlashControl available.</source>
          <target state="translated">カメラデバイスの中には、フラッシュハードウェアを持っていなかったり、設定できなかったりするものがあります。その場合、QCameraFlashControlは使用できません。</target>
        </trans-unit>
        <trans-unit id="b6dcafd31faeeb51db14013ebb69ea2310aedc40" translate="yes" xml:space="preserve">
          <source>Some care must be taken when trying to convert the data in chunks, for example, when receiving it over a network. In such cases it is possible that a multi-byte character will be split over two chunks. At best this might result in the loss of a character and at worst cause the entire conversion to fail.</source>
          <target state="translated">ネットワーク経由で受信する場合など、データをチャンク変換しようとする場合には、いくつかの注意が必要です。このような場合、マルチバイト文字が2つのチャンクに分割される可能性があります。最良の場合、これは文字の損失につながり、最悪の場合、全体の変換が失敗する原因となります。</target>
        </trans-unit>
        <trans-unit id="d28826dedd3e622caa04b8b4e3d1b5b6ea547038" translate="yes" xml:space="preserve">
          <source>Some care should be taken that no conflicting QScrollEvents are sent from two sources. Using &lt;a href=&quot;qscroller#scrollTo&quot;&gt;QScroller::scrollTo&lt;/a&gt; is save however.</source>
          <target state="translated">2つのソースから競合するQScrollEventsが送信されないように注意する必要があります。ただし、&lt;a href=&quot;qscroller#scrollTo&quot;&gt;QScroller :: scrollToの&lt;/a&gt;使用は保存されます。</target>
        </trans-unit>
        <trans-unit id="a57181529270d548c7b05d187a2a39d3e4dd7bf0" translate="yes" xml:space="preserve">
          <source>Some classes have changed modules. In particular, the &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;, QAttribute and QGeometry classes (along with associated helper classes) have moved from the Render module to the Core module.</source>
          <target state="translated">一部のクラスはモジュールを変更しました。特に、&lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;、QAttribute、およびQGeometryクラス（および関連するヘルパークラス）は、RenderモジュールからCoreモジュールに移動しました。</target>
        </trans-unit>
        <trans-unit id="74df780691d4b57b242bbe806c6d59194a99ccc1" translate="yes" xml:space="preserve">
          <source>Some classes support more than one actual event type. &lt;a href=&quot;qmouseevent&quot;&gt;QMouseEvent&lt;/a&gt; supports mouse button presses, double-clicks, moves, and other related operations.</source>
          <target state="translated">一部のクラスは、複数の実際のイベントタイプをサポートしています。&lt;a href=&quot;qmouseevent&quot;&gt;QMouseEvent&lt;/a&gt;は、マウスボタンの押下、ダブルクリック、移動、その他の関連操作をサポートしています。</target>
        </trans-unit>
        <trans-unit id="35b2a8c8b7ee657c1243390515bf985493740f7a" translate="yes" xml:space="preserve">
          <source>Some common context commands are:</source>
          <target state="translated">一般的なコンテキストコマンドは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e30ee08e8df5aa89b69ef9142860dc72b755eae8" translate="yes" xml:space="preserve">
          <source>Some common verbs for function documentation:</source>
          <target state="translated">関数の文書化によく使われる動詞をいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="2e108be4d3a80dd27f796e11465fcada934fa58a" translate="yes" xml:space="preserve">
          <source>Some configuration updates may require some time to perform updates. A WLAN scan is such an example. Unless the platform performs internal updates it may be required to manually trigger configuration updates via &lt;a href=&quot;qnetworkconfigurationmanager#updateConfigurations&quot;&gt;QNetworkConfigurationManager::updateConfigurations&lt;/a&gt;(). The completion of the update process is indicated by emitting the &lt;a href=&quot;qnetworkconfigurationmanager#updateCompleted&quot;&gt;updateCompleted&lt;/a&gt;() signal. The update process ensures that every existing &lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; instance is updated. There is no need to ask for a renewed configuration list via &lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;allConfigurations&lt;/a&gt;().</source>
          <target state="translated">一部の構成更新では、更新の実行に時間がかかる場合があります。 WLANスキャンはそのような例です。プラットフォームが内部更新を実行しない限り、&lt;a href=&quot;qnetworkconfigurationmanager#updateConfigurations&quot;&gt;QNetworkConfigurationManager :: updateConfigurations&lt;/a&gt;（）を介して構成の更新を手動でトリガーする必要がある場合があります。更新プロセスの完了は、&lt;a href=&quot;qnetworkconfigurationmanager#updateCompleted&quot;&gt;updateCompleted&lt;/a&gt;（）シグナルを発行することによって示されます。更新プロセスにより、既存のすべての&lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt;インスタンスが確実に更新されます。&lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;allConfigurations&lt;/a&gt;（）を使用して、更新された構成リストを要求する必要はありません。</target>
        </trans-unit>
        <trans-unit id="a0ff784c555f2694d0cd8ba1ba2347284d69e55f" translate="yes" xml:space="preserve">
          <source>Some configuration variables accept a list of strings as their value, for example: &lt;a href=&quot;22-qdoc-configuration-generalvariables#sourcedirs-variable&quot;&gt;&lt;code&gt;sourcedirs&lt;/code&gt;&lt;/a&gt;, while others accept only a single string. Double quotes around a value string are optional, but including them allows you to use special characters like '=' and ' &quot; ' within the value string, for example:</source>
          <target state="translated">一部の構成変数は、値として文字列のリストを受け入れます。&lt;a href=&quot;22-qdoc-configuration-generalvariables#sourcedirs-variable&quot;&gt; &lt;code&gt;sourcedirs&lt;/code&gt; &lt;/a&gt;、sourcedirsと、単一の文字列のみを受け入れるものがあります。値の文字列を囲む二重引用符はオプションですが、二重引用符を含めると、値の文字列内で '='や '&quot;'などの特殊文字を使用できます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="e892a28898ee44efe78593bc4173579024a00296" translate="yes" xml:space="preserve">
          <source>Some configuration variables allow you to use QDoc to support Qt-based projects. They allow your project to contain links to the online Qt documentation, which means that QDoc will be able to create links to the class reference documentation, without any explicit linking command.</source>
          <target state="translated">いくつかの設定変数を使うと、QDocを使ってQtベースのプロジェクトをサポートすることができます。これにより、プロジェクトにオンラインのQtドキュメントへのリンクを含めることができます。つまり、QDocは明示的なリンクコマンドを使わなくても、クラス参照ドキュメントへのリンクを作成することができます。</target>
        </trans-unit>
        <trans-unit id="d3220db37d795d66f72d9fb2bd0f226bc7dc4bad" translate="yes" xml:space="preserve">
          <source>Some constants are defined only on certain platforms. You can use the preprocessor symbols &lt;a href=&quot;qtglobal#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt; and &lt;a href=&quot;qtglobal#Q_OS_MACOS&quot;&gt;Q_OS_MACOS&lt;/a&gt; to test that the application is compiled under Windows or &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="translated">一部の定数は、特定のプラットフォームでのみ定義されています。プリプロセッサシンボル&lt;a href=&quot;qtglobal#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt;および&lt;a href=&quot;qtglobal#Q_OS_MACOS&quot;&gt;Q_OS_MACOS&lt;/a&gt;を使用して、アプリケーションがWindowsまたは&lt;a href=&quot;internationalization#macos&quot;&gt;macOSで&lt;/a&gt;コンパイルされていることをテストできます。</target>
        </trans-unit>
        <trans-unit id="f3f6293f7958d30306726fd1d7f2f6950388bd37" translate="yes" xml:space="preserve">
          <source>Some constants are defined only on certain platforms. You can use the preprocessor symbols &lt;a href=&quot;qtglobal#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt; and &lt;a href=&quot;qtglobal#Q_OS_MACOS&quot;&gt;Q_OS_MACOS&lt;/a&gt; to test that the application is compiled under Windows or macOS.</source>
          <target state="translated">一部の定数は、特定のプラットフォームでのみ定義されています。プリプロセッサシンボル&lt;a href=&quot;qtglobal#Q_OS_WIN&quot;&gt;Q_OS_WIN&lt;/a&gt;および&lt;a href=&quot;qtglobal#Q_OS_MACOS&quot;&gt;Q_OS_MACOS&lt;/a&gt;を使用して、アプリケーションがWindowsまたはmacOSでコンパイルされていることをテストできます。</target>
        </trans-unit>
        <trans-unit id="ac80ccd376dd3fa37080c1f6cc4f9bac7a790b6d" translate="yes" xml:space="preserve">
          <source>Some containers have additional requirements for the data types they can store. For example, the Key type of a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;&amp;lt;Key, T&amp;gt; must provide &lt;code&gt;operator&amp;lt;()&lt;/code&gt;. Such special requirements are documented in a class's detailed description. In some cases, specific functions have special requirements; these are described on a per-function basis. The compiler will always emit an error if a requirement isn't met.</source>
          <target state="translated">一部のコンテナには、格納できるデータ型に関する追加の要件があります。たとえば、&lt;a href=&quot;qmap&quot;&gt;QMapの&lt;/a&gt; Keyタイプ&amp;lt;Key、T&amp;gt;は、 &lt;code&gt;operator&amp;lt;()&lt;/code&gt; 提供する必要があります。このような特別な要件は、クラスの詳細な説明に記載されています。場合によっては、特定の機能に特別な要件があります。これらは関数ごとに説明されています。要件が満たされない場合、コンパイラは常にエラーを発行します。</target>
        </trans-unit>
        <trans-unit id="df318c855c29b1c02eac127d13434a5aa42baf3c" translate="yes" xml:space="preserve">
          <source>Some corner cases involving namespaces and element constructors are incorrect.</source>
          <target state="translated">名前空間と要素コンストラクタを含むいくつかのコーナーケースが正しくありません。</target>
        </trans-unit>
        <trans-unit id="f0341a8ba7b6bd8b5229a090060c8694cec4ab54" translate="yes" xml:space="preserve">
          <source>Some custom widgets have special user interface features that may make them behave differently to many of the standard widgets found in</source>
          <target state="translated">カスタムウィジェットの中には、特別なユーザーインターフェイス機能を持っているものがあります。</target>
        </trans-unit>
        <trans-unit id="c5ab95ccf5c0a704bfe8fca75433d2dbc50e4d0f" translate="yes" xml:space="preserve">
          <source>Some data, which is returned by &lt;a href=&quot;qxmlnodemodelindex#data&quot;&gt;data&lt;/a&gt;(), &lt;a href=&quot;qxmlnodemodelindex#internalPointer&quot;&gt;internalPointer&lt;/a&gt;(), and &lt;a href=&quot;qxmlnodemodelindex#additionalData&quot;&gt;additionalData&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qxmlnodemodelindex#data&quot;&gt;data&lt;/a&gt;（）、&lt;a href=&quot;qxmlnodemodelindex#internalPointer&quot;&gt;internalPointer&lt;/a&gt;（）、および&lt;a href=&quot;qxmlnodemodelindex#additionalData&quot;&gt;additionalData&lt;/a&gt;（）によって返される一部のデータ。</target>
        </trans-unit>
        <trans-unit id="4b954069bad7d32129344a8608b6608c7e6a6478" translate="yes" xml:space="preserve">
          <source>Some databases are capable of returning multiple result sets for stored procedures or SQL batches (a query strings that contains multiple statements). If multiple result sets are available after executing a query this function can be used to navigate to the next result set(s).</source>
          <target state="translated">データベースの中には、ストアドプロシージャやSQLバッチ(複数のステートメントを含むクエリ文字列)に対して複数の結果セットを返すことができるものがあります。クエリを実行した後に複数の結果セットが利用可能な場合、この関数を使用して次の結果セットに移動することができます。</target>
        </trans-unit>
        <trans-unit id="15247ea8a8a476f9b9229551b324506b544878c5" translate="yes" xml:space="preserve">
          <source>Some devices may provide multiple manufacturer data entries per manufacturer ID. An example might be a Bluetooth Low Energy device that sends a different manufacturer data via advertisement packets and scan response packets respectively. Therefore the returned hash table may have multiple entries per manufacturer ID or hash key.</source>
          <target state="translated">デバイスによっては、製造者IDごとに複数の製造者データエントリを提供してもよい。例としては、広告パケットおよびスキャン応答パケットをそれぞれ介して異なる製造者データを送信するBluetooth Low Energyデバイスが挙げられるかもしれない。したがって、返されるハッシュテーブルは、製造者IDまたはハッシュキーごとに複数のエントリを持つことがあります。</target>
        </trans-unit>
        <trans-unit id="fc8f96bacee2d0a984bc71f32a17593134a80b94" translate="yes" xml:space="preserve">
          <source>Some driver managers and drivers do not support UNICODE. To use the QODBC plugin with such drivers, it has to be compiled with Q_ODBC_VERSION_2 defined.</source>
          <target state="translated">一部のドライバマネージャやドライバはUNICODEをサポートしていません。そのようなドライバでQODBCプラグインを使用するには、Q_ODBC_VERSION_2を定義してコンパイルする必要があります。</target>
        </trans-unit>
        <trans-unit id="f8e7ae49950e2bfa24a482d241f485d9c70110f5" translate="yes" xml:space="preserve">
          <source>Some drivers do not support scrollable cursors. In that case, only queries in forwardOnly mode can be used successfully.</source>
          <target state="translated">一部のドライバはスクロール可能なカーソルをサポートしていません。その場合、forwardOnlyモードのクエリのみが正常に使用できます。</target>
        </trans-unit>
        <trans-unit id="1139acfae9592f6359ebedbd1117ab2da0aa3098" translate="yes" xml:space="preserve">
          <source>Some effects will want to provide a vertex shader as well. Below is a similar effect with both the vertex and fragment shader provided by the application. This time the colorization factor is provided by the QML item instead of hardcoding it in the shader. This can allow, among others, animating the value using QML's and Qt Quick's standard facilities.</source>
          <target state="translated">エフェクトの中には、頂点シェーダも提供したいものがあります。下の図は、アプリケーションが提供する頂点シェーダとフラグメントシェーダの両方を使用した類似のエフェクトです。今回は、シェーダの中にハードコーディングするのではなく、QML の項目によって色付け係数が提供されています。これにより、QMLやQt Quickの標準機能を使って値をアニメーションさせることができます。</target>
        </trans-unit>
        <trans-unit id="991fc05960554eee87efafeb82ef468e7fd6e3e5" translate="yes" xml:space="preserve">
          <source>Some events, such as &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ShortcutOverride&lt;/a&gt; must be explicitly accepted (by calling &lt;a href=&quot;qevent#accept&quot;&gt;accept()&lt;/a&gt; on them) in order to prevent propagation.</source>
          <target state="translated">&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: ShortcutOverride&lt;/a&gt;などの一部のイベントは、伝播を防ぐために&lt;a href=&quot;qevent#accept&quot;&gt;（&lt;/a&gt;それらに対してaccept（）を呼び出すことにより）明示的に受け入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="3db4b192e8a5fe570e826b7dbc6dffa9230106cc" translate="yes" xml:space="preserve">
          <source>Some events, such as &lt;a href=&quot;qmouseevent&quot;&gt;QMouseEvent&lt;/a&gt; and &lt;a href=&quot;qkeyevent&quot;&gt;QKeyEvent&lt;/a&gt;, come from the window system; some, such as &lt;a href=&quot;qtimerevent&quot;&gt;QTimerEvent&lt;/a&gt;, come from other sources; some come from the application itself.</source>
          <target state="translated">&lt;a href=&quot;qmouseevent&quot;&gt;QMouseEvent&lt;/a&gt;や&lt;a href=&quot;qkeyevent&quot;&gt;QKeyEvent&lt;/a&gt;などの一部のイベントは、ウィンドウシステムから発生します。&lt;a href=&quot;qtimerevent&quot;&gt;QTimerEvent&lt;/a&gt;などの一部は他のソースからのものです。一部はアプリケーション自体に由来します。</target>
        </trans-unit>
        <trans-unit id="76b15ddd9bbae2a42a5c96bc2b644d8162ba90e8" translate="yes" xml:space="preserve">
          <source>Some examples</source>
          <target state="translated">いくつかの例</target>
        </trans-unit>
        <trans-unit id="01706013cfdbcb0fc543d3c97784f3f4c235d630" translate="yes" xml:space="preserve">
          <source>Some examples:</source>
          <target state="translated">いくつかの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="0bd1c07eac0e7a9cbb9bd0005203a01323764e45" translate="yes" xml:space="preserve">
          <source>Some features of &lt;a href=&quot;qnetworkdatagram&quot;&gt;QNetworkDatagram&lt;/a&gt; are not supported in all operating systems. Only the address and ports of the remote host (sender in received packets and destination for outgoing packets) are supported in all systems. On most operating systems, the other features are supported only for IPv6. Software should check at runtime whether the rest could be determined for IPv4 addresses.</source>
          <target state="translated">&lt;a href=&quot;qnetworkdatagram&quot;&gt;QNetworkDatagramの&lt;/a&gt;一部の機能は、すべてのオペレーティングシステムでサポートされているわけではありません。すべてのシステムでサポートされているのは、リモートホストのアドレスとポート（受信パケットの送信者と送信パケットの宛先）だけです。ほとんどのオペレーティングシステムでは、その他の機能はIPv6でのみサポートされています。ソフトウェアは、残りの部分がIPv4アドレスに対して決定できるかどうかを実行時にチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="9082a8da9dd9e4b014efdb494097263095c2411a" translate="yes" xml:space="preserve">
          <source>Some features of QNetworkDatagram are not supported in all operating systems. Only the address and ports of the remote host (sender in received packets and destination for outgoing packets) are supported in all systems. On most operating systems, the other features are supported only for IPv6. Software should check at runtime whether the rest could be determined for IPv4 addresses.</source>
          <target state="translated">QNetworkDatagramの一部の機能は、すべてのオペレーティングシステムでサポートされていません。リモートホストのアドレスとポート(受信パケットの送信者と送信パケットの宛先)のみが、すべてのシステムでサポートされています。ほとんどのオペレーティングシステムでは、他の機能はIPv6でのみサポートされています。ソフトウェアは、残りの機能が IPv4 アドレスについて決定できたかどうかを実行時に確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="4686f4d29858944a287fd9069b91103a4205fcca" translate="yes" xml:space="preserve">
          <source>Some features of the parser can be enabled or disabled via the</source>
          <target state="translated">パーサーのいくつかの機能は</target>
        </trans-unit>
        <trans-unit id="d5dc9e9835daf9cc0551aa7916959c834a32b539" translate="yes" xml:space="preserve">
          <source>Some filesystem types allow multiple subvolumes inside one device, which may be mounted in different paths. If the subvolume could be detected, it is returned here. The format of the subvolume name is specific to each filesystem type.</source>
          <target state="translated">ファイルシステムの種類によっては、1つのデバイス内で複数のサブボリュームを許可しており、異なるパスにマウントされている可能性があります。サブボリュームが検出された場合は、ここに返されます。サブボリューム名の形式は、各ファイルシステムタイプに固有のものです。</target>
        </trans-unit>
        <trans-unit id="036acd8848f891ee8e09132c0856d535df203987" translate="yes" xml:space="preserve">
          <source>Some hardware supports a movable focus lens assembly, and typically this hardware also supports automatically focusing via some heuristic. You can influence this via the &lt;a href=&quot;qcamerafocus#FocusPointMode-enum&quot;&gt;FocusPointMode&lt;/a&gt; setting - typically the center of the frame is brought into focus, but some hardware also supports focusing on any faces detected in the frame, or on a specific point (usually provided by a user in a &quot;touch to focus&quot; scenario).</source>
          <target state="translated">一部のハードウェアは可動フォーカスレンズアセンブリをサポートし、通常、このハードウェアは何らかのヒューリスティックを介した自動フォーカスにも対応しています。&lt;a href=&quot;qcamerafocus#FocusPointMode-enum&quot;&gt;FocusPointMode&lt;/a&gt;設定を介してこれに影響を与えることができます。通常、フレームの中心がフォーカスされますが、一部のハードウェアは、フレームで検出された顔または特定のポイント（通常、「タッチフォーカス」シナリオ）。</target>
        </trans-unit>
        <trans-unit id="da1aaf73a12f043fb7437304993e1cb1efe23e23" translate="yes" xml:space="preserve">
          <source>Some image formats are able to conserve CPU time by rendering only the specified region. Others will need to load the entire image first and then clip it to the specified region.</source>
          <target state="translated">画像フォーマットによっては、指定された領域のみをレンダリングすることでCPU時間を節約できるものもあります。その他の画像フォーマットでは、最初に画像全体をロードしてから指定した領域にクリップする必要があります。</target>
        </trans-unit>
        <trans-unit id="7825ea46a648936cbbfa09dc3a99bd2cfb6817ff" translate="yes" xml:space="preserve">
          <source>Some image formats, in particular lossy ones, entail a tradeoff between a) visual quality of the resulting image, and b) decoding execution time. This function sets the level of that tradeoff for image formats that support it.</source>
          <target state="translated">画像フォーマットの中には,特にロッシーなものがあり,結果として得られる画像の画質とデコード実行時間の間でトレードオフの関係にあります.この関数は,このトレードオフをサポートする画像フォーマットのレベルを設定します.</target>
        </trans-unit>
        <trans-unit id="bce17fe97507d1e01c740794f57ca06547503a1e" translate="yes" xml:space="preserve">
          <source>Some image formats, in particular lossy ones, entail a tradeoff between a) visual quality of the resulting image, and b) encoding execution time and compression level. This function sets the level of that tradeoff for image formats that support it. For other formats, this value is ignored.</source>
          <target state="translated">画像フォーマットの中には,特にロッシーなものがあり,結果として得られる画像の画質と,エンコーディングの実行時間と圧縮レベルとの間でトレードオフの関係にあります.この関数は,このトレードオフをサポートしている画像フォーマットに対して,そのトレードオフのレベルを設定します.それ以外のフォーマットでは,この値は無視されます.</target>
        </trans-unit>
        <trans-unit id="62a651273181188eb1f5ac6e068cbe1907e1236b" translate="yes" xml:space="preserve">
          <source>Some implementations will share the same OpenGL context between multiple &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instances. The openglContextCreated() signal will in this case only be emitted for the first window, when the OpenGL context is actually created.</source>
          <target state="translated">一部の実装は、複数の&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;インスタンス間で同じOpenGLコンテキストを共有します。この場合、openglContextCreated（）シグナルは、OpenGLコンテキストが実際に作成されたときに、最初のウィンドウに対してのみ発行されます。</target>
        </trans-unit>
        <trans-unit id="b147e441cf21e623d7d1d8bd6726848e1b57dc4d" translate="yes" xml:space="preserve">
          <source>Some includes require additional functionality to work correctly. For example &lt;code&gt;fileBumpTexture&lt;/code&gt; requires these additional includes and defines:</source>
          <target state="translated">一部のインクルードは、正しく機能するために追加の機能を必要とします。たとえば、 &lt;code&gt;fileBumpTexture&lt;/code&gt; には、次の追加のインクルードと定義が必要です。</target>
        </trans-unit>
        <trans-unit id="fd52a264a8a88a284080a20d345ff79e2cf3a1d7" translate="yes" xml:space="preserve">
          <source>Some information may not make sense in other applications such as IVI systems.</source>
          <target state="translated">IVIシステムなど、他のアプリケーションでは意味をなさない情報もあります。</target>
        </trans-unit>
        <trans-unit id="7ab5e6a341df84ad18c59ef6e71b6c1c5c09a577" translate="yes" xml:space="preserve">
          <source>Some keyboard layouts, such as symbol layouts, may contain more keys than it is feasible to present on a single keyboard layout. A solution is to embed multiple keyboard layouts into the same context by using the &lt;a href=&quot;qml-qtquick-virtualkeyboard-keyboardlayoutloader&quot;&gt;KeyboardLayoutLoader&lt;/a&gt;.</source>
          <target state="translated">シンボルレイアウトなどの一部のキーボードレイアウトには、単一のキーボードレイアウトで表示するのが現実的ではない数より多くのキーが含まれている場合があります。解決策は、&lt;a href=&quot;qml-qtquick-virtualkeyboard-keyboardlayoutloader&quot;&gt;KeyboardLayoutLoader&lt;/a&gt;を使用して、複数のキーボードレイアウトを同じコンテキストに埋め込むことです。</target>
        </trans-unit>
        <trans-unit id="1319c0bad4e054b76843ca01a929aa55c5709138" translate="yes" xml:space="preserve">
          <source>Some keys may alternatively be handled via specific signal properties, for example</source>
          <target state="translated">いくつかのキーは、代替的に特定の信号プロパティを介して処理することができます。</target>
        </trans-unit>
        <trans-unit id="39ed1e6a621c33a147267289e3043b38ba1e00b8" translate="yes" xml:space="preserve">
          <source>Some layouts have width and height interdependencies. These can be expressed using &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;(), &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;(), and &lt;a href=&quot;qlayoutitem#minimumHeightForWidth&quot;&gt;minimumHeightForWidth&lt;/a&gt;(). For more explanation see the</source>
          <target state="translated">一部のレイアウトには、幅と高さの依存関係があります。これらを用いて発現させることができる&lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;（）、&lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;（）、及び&lt;a href=&quot;qlayoutitem#minimumHeightForWidth&quot;&gt;minimumHeightForWidthを&lt;/a&gt;（）。詳細については、</target>
        </trans-unit>
        <trans-unit id="1fe35a54fd4bbd2b5d48ea819ecf47ee694cbbfa" translate="yes" xml:space="preserve">
          <source>Some map items such as &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-mappolygon&quot;&gt;MapPolygon&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-maprectangle&quot;&gt;MapRectangle&lt;/a&gt; will be rendered after the topmost &lt;a href=&quot;https://www.mapbox.com/mapbox-gl-js/style-spec/#layers&quot;&gt;layer&lt;/a&gt; of the style. With this parameter set, the map items will be rendered &lt;b&gt;before&lt;/b&gt; the layer ID specified, unless the layer is not present on the current style, which will fallback to the default behavior. This parameter can be used to display route lines under labels.</source>
          <target state="translated">&lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt;、&lt;a href=&quot;qml-qtlocation-mappolygon&quot;&gt;MapPolygon&lt;/a&gt;、&lt;a href=&quot;qml-qtlocation-maprectangle&quot;&gt;MapRectangle&lt;/a&gt;などの一部のマップアイテムは、スタイルの最上位&lt;a href=&quot;https://www.mapbox.com/mapbox-gl-js/style-spec/#layers&quot;&gt;レイヤー&lt;/a&gt;の後にレンダリングされます。このパラメーターを設定すると、レイヤーが現在のスタイルに存在しない場合を除き、マップアイテムは指定したレイヤーIDの&lt;b&gt;前&lt;/b&gt;にレンダリングされ、デフォルトの動作にフォールバックします。このパラメーターを使用して、ラベルの下にルートラインを表示できます。</target>
        </trans-unit>
        <trans-unit id="710c7175fa23aa97cc6490b3eb61267598844604" translate="yes" xml:space="preserve">
          <source>Some material flags prevent batching, the most limiting one being &lt;a href=&quot;qsgmaterial#Flag-enum&quot;&gt;QSGMaterial::RequiresFullMatrix&lt;/a&gt; which prevents all batching.</source>
          <target state="translated">一部のマテリアルフラグはバッチ処理を妨げます&lt;a href=&quot;qsgmaterial#Flag-enum&quot;&gt;が&lt;/a&gt;、最も制限的なフラグはQSGMaterial :: RequiresFullMatrixであり、すべてのバッチ処理を妨げます。</target>
        </trans-unit>
        <trans-unit id="54f0f087057d0d4fd03bbbcbc3661e75db5c6037" translate="yes" xml:space="preserve">
          <source>Some mobile platforms use the concept of grouped access points (also called SNAP or Service Network Access Point). In principle multiple configurations are grouped together and possibly even prioritized when compared to each other. This is useful for use cases where all configurations serve a similar purpose or context. A common context could be that they provide access to the public Internet or possibly only to the office Intranet. By providing a pool of configurations the system can make a decision based on given priorities which usually map to factors such as speed, availability and cost. Furthermore the system can automatically roam from one access point to the next one while ensuring minimal impact on the user experience.</source>
          <target state="translated">モバイルプラットフォームの中には、グループ化されたアクセスポイント(SNAPやサービスネットワークアクセスポイントとも呼ばれる)の概念を利用しているものがあります。原則として、複数の構成はグループ化されており、互いに比較したときに優先順位が付けられている場合もあります。これは、すべての構成が同じような目的やコンテキストで機能する場合に便利です。共通のコンテクストとしては、公共のインターネットへのアクセスを提供したり、オフィスのイントラネットへのアクセスのみを提供したりすることが考えられます。構成のプールを提供することで、システムは、通常、速度、可用性、コストなどの要因に対応した優先順位に基づいて決定することができます。さらに、システムは、ユーザーエクスペリエンスへの影響を最小限に抑えながら、1つのアクセスポイントから次のアクセスポイントへ自動的にローミングすることができます。</target>
        </trans-unit>
        <trans-unit id="6ebcfb045ef0c22ebe462994efa03f62e5b9a27f" translate="yes" xml:space="preserve">
          <source>Some models need to obtain data from remote sources, or must perform time-consuming operations to obtain information about the way the data is organized. Since views generally request as much information as possible in order to accurately display model data, it can be useful to restrict the amount of information returned to them to reduce unnecessary follow-up requests for data.</source>
          <target state="translated">モデルによっては、リモートソースからデータを取得する必要があったり、データの編成方法に関する情報を取得するために時間のかかる操作を行わなければならないものもあります。ビューは一般的にモデルデータを正確に表示するために可能な限り多くの情報を要求するので、データに対する不必要なフォローアップ要求を減らすために、ビューに返される情報の量を制限することが有用である場合があります。</target>
        </trans-unit>
        <trans-unit id="2467229d47d85864cfe4603cf78898c7dd7226fd" translate="yes" xml:space="preserve">
          <source>Some more examples of regular expressions:</source>
          <target state="translated">正規表現の例をいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="0678d955d52a192c157da4b552f3aff291f2e62f" translate="yes" xml:space="preserve">
          <source>Some notes on autofocus</source>
          <target state="translated">オートフォーカスに関するいくつかの注意事項</target>
        </trans-unit>
        <trans-unit id="2758c5eb859a9a9a455088129b82a0d583a71b8d" translate="yes" xml:space="preserve">
          <source>Some of &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;'s functions are concerned with scrolling, for example &lt;a href=&quot;qabstractitemview#horizontalScrollMode-prop&quot;&gt;setHorizontalScrollMode&lt;/a&gt;() and &lt;a href=&quot;qabstractitemview#verticalScrollMode-prop&quot;&gt;setVerticalScrollMode&lt;/a&gt;(). To set the range of the scroll bars, you can, for example, reimplement the view's &lt;a href=&quot;qabstractitemview#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;() function:</source>
          <target state="translated">&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;の一部の関数は、スクロールに関係しています。たとえば、&lt;a href=&quot;qabstractitemview#horizontalScrollMode-prop&quot;&gt;setHorizo​​ntalScrollMode&lt;/a&gt;（）や&lt;a href=&quot;qabstractitemview#verticalScrollMode-prop&quot;&gt;setVerticalScrollMode&lt;/a&gt;（）などです。スクロールバーの範囲を設定するには、たとえば、ビューの&lt;a href=&quot;qabstractitemview#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;（）関数を再実装します。</target>
        </trans-unit>
        <trans-unit id="3acc42de8d80fc592e2235f19f9cac2ec9a2c7a8" translate="yes" xml:space="preserve">
          <source>Some of &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;'s functions query the file system, but for performance reasons, some functions only operate on the file name itself. For example: To return the absolute path of a relative file name, &lt;a href=&quot;qfileinfo#absolutePath&quot;&gt;absolutePath&lt;/a&gt;() has to query the file system. The &lt;a href=&quot;qfileinfo#path&quot;&gt;path&lt;/a&gt;() function, however, can work on the file name directly, and so it is faster.</source>
          <target state="translated">&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;の一部の関数はファイルシステムにクエリを実行しますが、パフォーマンス上の理由から、一部の関数はファイル名自体でのみ動作します。例：相対ファイル名の絶対パスを返すには、&lt;a href=&quot;qfileinfo#absolutePath&quot;&gt;absolutePath&lt;/a&gt;（）がファイルシステムを照会する必要があります。&lt;a href=&quot;qfileinfo#path&quot;&gt;パス&lt;/a&gt;（）関数は、しかし、直接ファイル名で作業することができ、そしてそれは高速です。</target>
        </trans-unit>
        <trans-unit id="f2dbacde9d9fc75d3c363c234329af4218dbd220" translate="yes" xml:space="preserve">
          <source>Some of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;'s properties are supported, including window flags and attributes, but not all. You should refer to &lt;a href=&quot;#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;'s class documentation for a complete overview of what is and what is not supported. For example, you can create decorated windows by passing the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt; window flag to &lt;a href=&quot;#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;'s constructor, but Graphics View currently doesn't support the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt; and &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Drawer&lt;/a&gt; flags that are common on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;の一部のプロパティがサポートされています。これには、ウィンドウのフラグと属性が含まれますが、すべては含まれません。サポートされているものとサポートされていないものの完全な概要については、&lt;a href=&quot;#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;のクラスドキュメントを参照してください。たとえば、&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Window&lt;/a&gt;ウィンドウフラグを&lt;a href=&quot;#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;のコンストラクターに渡すことで装飾されたウィンドウを作成できますが、現在グラフィックスビューは&lt;a href=&quot;internationalization#macos&quot;&gt;macOSで&lt;/a&gt;一般的な&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Sheet&lt;/a&gt;フラグと&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Drawer&lt;/a&gt;フラグをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="518cadf5afdc6969096b70faa9671749764be1d5" translate="yes" xml:space="preserve">
          <source>Some of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;'s properties are supported, including window flags and attributes, but not all. You should refer to &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;'s class documentation for a complete overview of what is and what is not supported. For example, you can create decorated windows by passing the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt; window flag to &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;'s constructor, but Graphics View currently doesn't support the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt; and &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Drawer&lt;/a&gt; flags that are common on macOS.</source>
          <target state="translated">ウィンドウフラグや属性など、&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;の一部のプロパティがサポートされていますが、すべてではありません。サポートされているものとサポートされていないものの完全な概要については、&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;のクラスドキュメントを参照する必要があります。たとえば、&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Window&lt;/a&gt;ウィンドウフラグを&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;のコンストラクターに渡すことで装飾ウィンドウを作成できますが、Graphics Viewは現在、macOSで一般的な&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Sheet&lt;/a&gt;および&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Drawer&lt;/a&gt;フラグをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="a11d3fbd4960ef883d811f62ddb9f052d3c94964" translate="yes" xml:space="preserve">
          <source>Some of &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;'s properties are supported, including window flags and attributes, but not all. You should refer to &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;'s class documentation for a complete overview of what is and what is not supported. For example, you can create decorated windows by passing the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt; window flag to &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;'s constructor, but Graphics View currently doesn't support the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt; and &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Drawer&lt;/a&gt; flags that are common on macOS.</source>
          <target state="translated">ウィンドウフラグや属性など、&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;の一部のプロパティがサポートされていますが、すべてではありません。サポートされているものとサポートされていないものの完全な概要については、&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;のクラスドキュメントを参照する必要があります。たとえば、&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Window&lt;/a&gt;ウィンドウフラグを&lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt;のコンストラクターに渡すことで装飾されたウィンドウを作成できますが、Graphics Viewは現在、macOSで一般的な&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Sheet&lt;/a&gt;フラグと&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Drawer&lt;/a&gt;フラグをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="9026ef3f833bbd2ec7b2a091d99f1afb37d261bc" translate="yes" xml:space="preserve">
          <source>Some of QAbstractItemView's functions are concerned with scrolling, for example &lt;a href=&quot;qabstractitemview#horizontalScrollMode-prop&quot;&gt;setHorizontalScrollMode&lt;/a&gt;() and &lt;a href=&quot;qabstractitemview#verticalScrollMode-prop&quot;&gt;setVerticalScrollMode&lt;/a&gt;(). To set the range of the scroll bars, you can, for example, reimplement the view's &lt;a href=&quot;qabstractitemview#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;() function:</source>
          <target state="translated">QAbstractItemViewの関数の一部は、スクロールに関係しています。たとえば、&lt;a href=&quot;qabstractitemview#horizontalScrollMode-prop&quot;&gt;setHorizo​​ntalScrollMode&lt;/a&gt;（）や&lt;a href=&quot;qabstractitemview#verticalScrollMode-prop&quot;&gt;setVerticalScrollMode&lt;/a&gt;（）などです。スクロールバーの範囲を設定するには、たとえば、ビューの&lt;a href=&quot;qabstractitemview#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;（）関数を再実装します。</target>
        </trans-unit>
        <trans-unit id="1965c509ecfee4a2734400bda63de40a7e9a8b8b" translate="yes" xml:space="preserve">
          <source>Some of QFileInfo's functions query the file system, but for performance reasons, some functions only operate on the file name itself. For example: To return the absolute path of a relative file name, &lt;a href=&quot;qfileinfo#absolutePath&quot;&gt;absolutePath&lt;/a&gt;() has to query the file system. The &lt;a href=&quot;qfileinfo#path&quot;&gt;path&lt;/a&gt;() function, however, can work on the file name directly, and so it is faster.</source>
          <target state="translated">QFileInfoの関数の一部はファイルシステムにクエリを実行しますが、パフォーマンス上の理由から、一部の関数はファイル名自体でのみ動作します。次に例を示します。相対ファイル名の絶対パスを返すには、&lt;a href=&quot;qfileinfo#absolutePath&quot;&gt;absolutePath&lt;/a&gt;（）がファイルシステムにクエリを実行する必要があります。&lt;a href=&quot;qfileinfo#path&quot;&gt;パス&lt;/a&gt;（）関数は、しかし、直接ファイル名で作業することができ、そしてそれは高速です。</target>
        </trans-unit>
        <trans-unit id="255d5f8dc552b8bbbdc9a28a500cccfd7e8a34d4" translate="yes" xml:space="preserve">
          <source>Some of the Qt modules might have features that are not supported on Android or have limitations. For more information, see &lt;a href=&quot;https://bugreports.qt.io/browse/QTBUG-72086&quot;&gt;QTBUG-72086&lt;/a&gt;.</source>
          <target state="translated">一部のQtモジュールには、Androidでサポートされていない機能や制限がある機能がある場合があります。詳細については、&lt;a href=&quot;https://bugreports.qt.io/browse/QTBUG-72086&quot;&gt;QTBUG-72086を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fd434cd4eb5a3d0c188615852519007ffead6b20" translate="yes" xml:space="preserve">
          <source>Some of the added features listed above for the Qt Object Model, require that we think of Qt Objects as identities, not values. Values are copied or assigned; identities are cloned. Cloning means to create a new identity, not an exact copy of the old one. For example, twins have different identities. They may look identical, but they have different names, different locations, and may have completely different social networks.</source>
          <target state="translated">上記の Qt オブジェクトモデルに追加された機能の中には、Qt オブジェクトを値ではなく ID として考える必要があるものもあります。値はコピーされたり割り当てられたりしますが、アイデンティティはクローンされます。クローンとは、古いものを正確にコピーするのではなく、新しい ID を作成することを意味します。例えば、双子は異なるアイデンティティを持っています。見た目は同じように見えても、名前も場所も違えば、社会的ネットワークも全く違うものです。</target>
        </trans-unit>
        <trans-unit id="b95a2dd99996dd2c37356be383f3e67ee874d73d" translate="yes" xml:space="preserve">
          <source>Some of the bounding rectangles that we outline in the widget images are equal. Reasons for this are that some elements draw backgrounds while others draw frames and labels. If in doubt, check the description of each element in &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;. Also, some elements are there to layout, i.e., decide where to draw, other elements.</source>
          <target state="translated">ウィジェット画像で輪郭を描いている外接する四角形のいくつかは同じです。この理由は、一部の要素が背景を描画する一方で、他の要素はフレームとラベルを描画するためです。疑問がある場合は、&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;の各要素の説明を確認してください。また、いくつかの要素はレイアウトにあります。つまり、他の要素をどこに描くかを決定します。</target>
        </trans-unit>
        <trans-unit id="4481ffba04111e20b8829ee50fce1d13351d6019" translate="yes" xml:space="preserve">
          <source>Some of the buttons are checked.</source>
          <target state="translated">一部のボタンにはチェックが入っています。</target>
        </trans-unit>
        <trans-unit id="e1cc239a2a8321feaca77ed800634aca1bc074cf" translate="yes" xml:space="preserve">
          <source>Some of the clocks used by &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; have a limited range and may overflow after hitting the upper limit (usually 32-bit). &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; deals with this overflow issue and presents a consistent timing. However, when extracting the time since reference from &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;, two different processes in the same machine may have different understanding of how much time has actually elapsed.</source>
          <target state="translated">&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimerで&lt;/a&gt;使用される一部のクロックは範囲が制限されており、上限（通常は32ビット）に達した後にオーバーフローする可能性があります。&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;はこのオーバーフローの問題を扱い、一貫したタイミングを示します。ただし、&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;から参照からの時間を抽出する場合、同じマシン内の2つの異なるプロセスは、実際に経過した時間の理解が異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="a14788529ec678c288684c29d26e2125cc90c44e" translate="yes" xml:space="preserve">
          <source>Some of the clocks used by QElapsedTimer have a limited range and may overflow after hitting the upper limit (usually 32-bit). QElapsedTimer deals with this overflow issue and presents a consistent timing. However, when extracting the time since reference from QElapsedTimer, two different processes in the same machine may have different understanding of how much time has actually elapsed.</source>
          <target state="translated">QElapsedTimerで使用されているクロックの中には、範囲が限られているものがあり、上限(通常は32ビット)を超えた後にオーバーフローすることがあります。QElapsedTimerはこのオーバーフローの問題に対処し、一貫したタイミングを提示します。しかし、QElapsedTimerから参照からの時間を抽出する場合、同じマシン内の2つの異なるプロセスでは、実際にどのくらいの時間が経過したかについての理解が異なる可能性があります。</target>
        </trans-unit>
        <trans-unit id="cd86101a2d21134246bddc667f0638a78348d96f" translate="yes" xml:space="preserve">
          <source>Some of the configuration values are relevant only for the HTML output format and their values contain raw HTML.</source>
          <target state="translated">設定値の中には、HTML出力フォーマットにのみ関連するものがあり、その値には生のHTMLが含まれています。</target>
        </trans-unit>
        <trans-unit id="4423b9d85f9b55bb21ab8e97f098cf03c0594ee9" translate="yes" xml:space="preserve">
          <source>Some of the criteria may not make sense in all of the types of query. The following table lists the criteria that are most commonly used, according to the type of query.</source>
          <target state="translated">クエリの種類によっては、基準の中には意味をなさないものもあります。次の表は、クエリの種類に応じて、最も一般的に使用されている基準を示しています。</target>
        </trans-unit>
        <trans-unit id="4febf59614808c3b11758b6c9ef5d7357aa6e130" translate="yes" xml:space="preserve">
          <source>Some of the examples discussed above are implemented in the &lt;a href=&quot;qregexp#code-examples&quot;&gt;code examples&lt;/a&gt; section.</source>
          <target state="translated">上記の例の一部は、&lt;a href=&quot;qregexp#code-examples&quot;&gt;コード例の&lt;/a&gt;セクションに実装されています。</target>
        </trans-unit>
        <trans-unit id="ee3389c2e1577303d73b880abfc16b21f36edb30" translate="yes" xml:space="preserve">
          <source>Some of the formats supported also allow for either embedding or referencing of texture assets. These assets are also supported, provided Qt also has support for them.</source>
          <target state="translated">サポートされているフォーマットの中には、テクスチャアセットの埋め込みや参照が可能なものもあります。Qt がサポートしていれば、これらのアセットもサポートされています。</target>
        </trans-unit>
        <trans-unit id="f5f8a7b0aba18d5114f2534999fc12b9db7f8172" translate="yes" xml:space="preserve">
          <source>Some of the key features are:</source>
          <target state="translated">主要な機能のいくつかは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="9954a7c5fb55960ad75d9aaeeeed1f956fc9aff7" translate="yes" xml:space="preserve">
          <source>Some of the metrics are described in the image to the right. The central dark rectangles cover the logical horizontalAdvance() of each character. The outer pale rectangles cover the &lt;a href=&quot;qfontmetricsf#leftBearing&quot;&gt;leftBearing&lt;/a&gt;() and &lt;a href=&quot;qfontmetricsf#rightBearing&quot;&gt;rightBearing&lt;/a&gt;() of each character. Notice that the bearings of &quot;f&quot; in this particular font are both negative, while the bearings of &quot;o&quot; are both positive.</source>
          <target state="translated">一部の指標は、右の画像で説明されています。中央の暗い長方形は、各文字の論理的なhorizo​​ntalAdvance（）をカバーしています。外側の薄い長方形は、各文字の&lt;a href=&quot;qfontmetricsf#leftBearing&quot;&gt;leftBearing&lt;/a&gt;（）と&lt;a href=&quot;qfontmetricsf#rightBearing&quot;&gt;rightBearing&lt;/a&gt;（）を覆っています。この特定のフォントの「f」の方位は両方とも負であり、「o」の方位は両方とも正であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="eceefca2abe682ccc9451805dba821fa16feb398" translate="yes" xml:space="preserve">
          <source>Some of the metrics are described in the image to the right. The central dark rectangles cover the logical width() of each character. The outer pale rectangles cover the &lt;a href=&quot;qfontmetricsf#leftBearing&quot;&gt;leftBearing&lt;/a&gt;() and &lt;a href=&quot;qfontmetricsf#rightBearing&quot;&gt;rightBearing&lt;/a&gt;() of each character. Notice that the bearings of &quot;f&quot; in this particular font are both negative, while the bearings of &quot;o&quot; are both positive.</source>
          <target state="translated">一部のメトリックは、右の画像で説明されています。中央の暗い長方形は、各文字の論理的なwidth（）をカバーしています。外側の薄い長方形は、各文字の&lt;a href=&quot;qfontmetricsf#leftBearing&quot;&gt;leftBearing&lt;/a&gt;（）および&lt;a href=&quot;qfontmetricsf#rightBearing&quot;&gt;rightBearing&lt;/a&gt;（）を覆っています。この特定のフォントの「f」の方位はどちらも負であり、「o」の方位はどちらも正であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="540cc51176676779f0195774736f9d913cbe97d2" translate="yes" xml:space="preserve">
          <source>Some of the metrics are described in the image. The central dark rectangles cover the logical &lt;a href=&quot;qfontmetrics#horizontalAdvance&quot;&gt;horizontalAdvance&lt;/a&gt;() of each character. The outer pale rectangles cover the &lt;a href=&quot;qfontmetrics#leftBearing&quot;&gt;leftBearing&lt;/a&gt;() and &lt;a href=&quot;qfontmetrics#rightBearing&quot;&gt;rightBearing&lt;/a&gt;() of each character. Notice that the bearings of &quot;f&quot; in this particular font are both negative, while the bearings of &quot;o&quot; are both positive.</source>
          <target state="translated">一部のメトリックは画像​​で説明されています。中央の黒い四角形は、各文字の論理的な&lt;a href=&quot;qfontmetrics#horizontalAdvance&quot;&gt;horizo​​ntalAdvance&lt;/a&gt;（）を覆っています。外側の薄い長方形は、各文字の&lt;a href=&quot;qfontmetrics#leftBearing&quot;&gt;leftBearing&lt;/a&gt;（）および&lt;a href=&quot;qfontmetrics#rightBearing&quot;&gt;rightBearing&lt;/a&gt;（）を覆っています。この特定のフォントの「f」の方位はどちらも負であり、「o」の方位はどちらも正であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ed09d9827ff4dddb320d0a6ec7b80d07a311bc6b" translate="yes" xml:space="preserve">
          <source>Some of the metrics are described in the image. The central dark rectangles cover the logical horizontalAdvance() of each character. The outer pale rectangles cover the &lt;a href=&quot;qfontmetrics#leftBearing&quot;&gt;leftBearing&lt;/a&gt;() and &lt;a href=&quot;qfontmetrics#rightBearing&quot;&gt;rightBearing&lt;/a&gt;() of each character. Notice that the bearings of &quot;f&quot; in this particular font are both negative, while the bearings of &quot;o&quot; are both positive.</source>
          <target state="translated">一部の指標は画像で説明されています。中央の暗い長方形は、各文字の論理的なhorizo​​ntalAdvance（）をカバーしています。外側の薄い長方形は、各文字の&lt;a href=&quot;qfontmetrics#leftBearing&quot;&gt;leftBearing&lt;/a&gt;（）と&lt;a href=&quot;qfontmetrics#rightBearing&quot;&gt;rightBearing&lt;/a&gt;（）を覆っています。この特定のフォントの「f」の方位は両方とも負であり、「o」の方位は両方とも正であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c8615d2a934c3f78b4c97976c5f44e3f522d6d04" translate="yes" xml:space="preserve">
          <source>Some of the operating systems and windowing systems that Qt runs on only have limited support for Unicode. The level of support available in the underlying system has some influence on the support that Qt can provide on those platforms, although in general Qt applications need not be too concerned with platform-specific limitations.</source>
          <target state="translated">Qt が動作するオペレーティングシステムやウィンドウシステムの中には、Unicode のサポートが限られているものもあります。一般的に Qt アプリケーションはプラットフォーム固有の制限をあまり気にする必要はありませんが、基礎となるシステムで利用できるサポートのレベルは、Qt がこれらのプラットフォーム上で提供できるサポートにいくつかの影響を与えます。</target>
        </trans-unit>
        <trans-unit id="cd4c69702f98972ccae098bfbc692f79972cfc06" translate="yes" xml:space="preserve">
          <source>Some of the values in this enum represent a user configuration. Such enum values will return the same paths in different applications, so they could be used to share data with other applications. Other values are specific to this application. Each enum value in the table below describes whether it's application-specific or generic.</source>
          <target state="translated">この列挙型の値の中には、ユーザーの設定を表すものがあります。このような列挙値は、異なるアプリケーションでは同じパスを返すので、他のアプリケーションとデータを共有するために使用することができます。その他の値は、このアプリケーションに固有のものです。以下の表の各列挙値は、それがアプリケーション固有のものか一般的なものかを説明しています。</target>
        </trans-unit>
        <trans-unit id="9a850441aa57ddf573c5db0d0877d0bba03e3a19" translate="yes" xml:space="preserve">
          <source>Some of these packages depend on others in this list, so installing one may cause others to be automatically installed. Other distributions may provide system packages with similar names.</source>
          <target state="translated">これらのパッケージのいくつかは、このリストの他のパッケージに依存しているので、インストールすると他のパッケージが自動的にインストールされることがあります。他のディストリビューションでは、似たような名前のシステムパッケージを提供しているかもしれません。</target>
        </trans-unit>
        <trans-unit id="d3e25972e9b67bcbc0534ea874569ce9c75077ce" translate="yes" xml:space="preserve">
          <source>Some older Unix distributions contain only partial support for some locales. For example, if you have a &lt;code&gt;/usr/share/locale/ja_JP.EUC&lt;/code&gt; directory, this does not necessarily mean you can display Japanese text; you also need to have Japanese fonts installed, and the &lt;code&gt;/usr/share/locale/ja_JP.EUC&lt;/code&gt; directory needs to be complete. For best results, use complete locales from your system vendor.</source>
          <target state="translated">一部の古いUnixディストリビューションには、一部のロケールの部分的なサポートしか含まれていません。たとえば、/ &lt;code&gt;/usr/share/locale/ja_JP.EUC&lt;/code&gt; ディレクトリがある場合、これは必ずしも日本語のテキストを表示できることを意味しません。また、日本語フォントがインストールされている必要があり、/ &lt;code&gt;/usr/share/locale/ja_JP.EUC&lt;/code&gt; ディレクトリが完成している必要があります。最良の結果を得るには、システムベンダーの完全なロケールを使用してください。</target>
        </trans-unit>
        <trans-unit id="6b060e9d21a995dd450f814649462a0c18dedc1c" translate="yes" xml:space="preserve">
          <source>Some operating systems limit the number of timers that may be used; Qt tries to work around these limitations.</source>
          <target state="translated">いくつかのオペレーティングシステムでは、使用される可能性のあるタイマーの数が制限されています;Qt はこれらの制限を回避しようとしています。</target>
        </trans-unit>
        <trans-unit id="8bebbdbf48edc89afdd6d88ff7b94a762f4a3f19" translate="yes" xml:space="preserve">
          <source>Some operations such as &lt;a href=&quot;qmatrix4x4#translate&quot;&gt;translate&lt;/a&gt;(), &lt;a href=&quot;qmatrix4x4#scale&quot;&gt;scale&lt;/a&gt;(), and &lt;a href=&quot;qmatrix4x4#rotate&quot;&gt;rotate&lt;/a&gt;() can be performed more efficiently if the matrix being modified is already known to be the identity, a previous &lt;a href=&quot;qmatrix4x4#translate&quot;&gt;translate&lt;/a&gt;(), a previous &lt;a href=&quot;qmatrix4x4#scale&quot;&gt;scale&lt;/a&gt;(), etc.</source>
          <target state="translated">&lt;a href=&quot;qmatrix4x4#translate&quot;&gt;変換&lt;/a&gt;（）、&lt;a href=&quot;qmatrix4x4#scale&quot;&gt;スケール&lt;/a&gt;（）、&lt;a href=&quot;qmatrix4x4#rotate&quot;&gt;回転&lt;/a&gt;（）などの一部の操作は、変更されるマトリックスが既に同一であることがわかっている場合、以前の&lt;a href=&quot;qmatrix4x4#translate&quot;&gt;変換&lt;/a&gt;（）、以前の&lt;a href=&quot;qmatrix4x4#scale&quot;&gt;スケール&lt;/a&gt;（）などの場合に、より効率的に実行できます。</target>
        </trans-unit>
        <trans-unit id="406df074b7d82091bfda8f9025dc5dd1447724d7" translate="yes" xml:space="preserve">
          <source>Some paths returned by &lt;a href=&quot;qstandardpaths#writableLocation&quot;&gt;QStandardPaths::writableLocation&lt;/a&gt;() may be empty.</source>
          <target state="translated">&lt;a href=&quot;qstandardpaths#writableLocation&quot;&gt;QStandardPaths :: writableLocation&lt;/a&gt;（）によって返される一部のパスは空である可能性があります。</target>
        </trans-unit>
        <trans-unit id="36a3e8c363358b16afeba579a141929d263d2df3" translate="yes" xml:space="preserve">
          <source>Some pixel metrics are called from widgets and some are only called internally by the style. If the metric is not called by a widget, it is the discretion of the style author to make use of it. For some styles, this may not be appropriate.</source>
          <target state="translated">ピクセルメトリクスの中には、ウィジェットから呼び出されるものと、スタイルによって内部的に呼び出されるものがあります。メトリクスがウィジェットから呼び出されない場合、それを利用するかどうかはスタイル作成者の裁量に委ねられます。スタイルによっては、これが適切でない場合があります。</target>
        </trans-unit>
        <trans-unit id="2d9ca305aecb75ea079935082485aba70b0a8ea4" translate="yes" xml:space="preserve">
          <source>Some platforms can group audio streams into categories and manage their volumes independently, or display them in a system mixer control. You can set this property to allow the platform to distinguish the purpose of your streams.</source>
          <target state="translated">プラットフォームによっては、オーディオストリームをカテゴリにグループ化してボリュームを独立して管理したり、システムミキサーコントロールに表示したりすることができます。このプロパティを設定して、プラットフォームがストリームの目的を区別できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="48cb8158c80e7404aa99bc7ed4bbda4bb97c121c" translate="yes" xml:space="preserve">
          <source>Some platforms can perform different audio routing for different categories, or may allow the user to set different volume levels for different categories.</source>
          <target state="translated">プラットフォームによっては、異なるカテゴリに対して異なるオーディオルーティングを実行することができ、またはユーザが異なるカテゴリに対して異なる音量レベルを設定することができる場合があります。</target>
        </trans-unit>
        <trans-unit id="f678d8d7a8165963573a3fbf58619582ba6b5539" translate="yes" xml:space="preserve">
          <source>Some platforms have a policy of suspending sensors when the screen turns off. Setting this property to true will ensure the sensor continues to run.</source>
          <target state="translated">プラットフォームによっては、画面がオフになるとセンサーを停止するポリシーを持っているものがあります。このプロパティを true に設定すると、センサーの動作が継続されます。</target>
        </trans-unit>
        <trans-unit id="8378af5dcd46143ccef6a511c329f89175d0f08b" translate="yes" xml:space="preserve">
          <source>Some platforms like Android and &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; cannot handle multiple native windows properly, so only the Qt Quick 2 graphs are available in practice for those platforms.</source>
          <target state="translated">Androidや&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;などの一部のプラットフォームでは、複数のネイティブウィンドウを適切に処理できないため、Qt Quick 2グラフのみが実際にこれらのプラットフォームで使用できます。</target>
        </trans-unit>
        <trans-unit id="117ea8808f44c089a27a030eba5d825e95804335" translate="yes" xml:space="preserve">
          <source>Some platforms like Android and WinRT cannot handle multiple native windows properly, so only the Qt Quick 2 graphs are available in practice for those platforms.</source>
          <target state="translated">AndroidやWinRTなど一部のプラットフォームでは、複数のネイティブウィンドウを正しく扱えないため、それらのプラットフォームではQt Quick 2のグラフのみが実際に利用できるようになっています。</target>
        </trans-unit>
        <trans-unit id="1e55affafc4f3eeb80c66545c545536c0e0b41a9" translate="yes" xml:space="preserve">
          <source>Some platforms may distinguish forced roaming and application level roaming (ALR). ALR implies that the application controls (via &lt;a href=&quot;qnetworksession#migrate&quot;&gt;migrate&lt;/a&gt;(), &lt;a href=&quot;qnetworksession#ignore&quot;&gt;ignore&lt;/a&gt;(), &lt;a href=&quot;qnetworksession#accept&quot;&gt;accept&lt;/a&gt;() and &lt;a href=&quot;qnetworksession#reject&quot;&gt;reject&lt;/a&gt;()) whether a network session can roam from one access point to the next. Such control is useful if the application maintains stateful socket connections and wants to control the transition from one interface to the next. Forced roaming implies that the system automatically roams to the next network without consulting the application. This has the advantage that the application can make use of roaming features without actually being aware of it. It is expected that the application detects that the underlying socket is broken and automatically reconnects via the new network link.</source>
          <target state="translated">一部のプラットフォームでは、強制ローミングとアプリケーションレベルローミング（ALR）が区別される場合があります。ALRは、アプリケーションが（&lt;a href=&quot;qnetworksession#migrate&quot;&gt;migrate&lt;/a&gt;（）、&lt;a href=&quot;qnetworksession#ignore&quot;&gt;ignore&lt;/a&gt;（）、&lt;a href=&quot;qnetworksession#accept&quot;&gt;accept&lt;/a&gt;（）および&lt;a href=&quot;qnetworksession#reject&quot;&gt;rejectを&lt;/a&gt;介して）制御することを意味します（））ネットワークセッションがあるアクセスポイントから次のアクセスポイントにローミングできるかどうか。このような制御は、アプリケーションがステートフルなソケット接続を維持し、あるインターフェースから次のインターフェースへの遷移を制御したい場合に役立ちます。強制ローミングとは、アプリケーションに問い合わせることなく、システムが次のネットワークに自動的にローミングすることを意味します。これには、アプリケーションが実際に気づかないでローミング機能を利用できるという利点があります。アプリケーションは、基になるソケットが壊れていることを検出し、新しいネットワークリンクを介して自動的に再接続することが期待されています。</target>
        </trans-unit>
        <trans-unit id="1a44856e1adf62c0391a8e332f6135676de3f61c" translate="yes" xml:space="preserve">
          <source>Some platforms may support the concept of Forced Roaming and Application Level Roaming (ALR). Forced roaming implies that the platform may simply roam to a new configuration without consulting applications. It is up to the application to detect the link layer loss and reestablish its sockets. In contrast ALR provides the opportunity to prevent the system from roaming. If this session is based on a configuration that supports roaming the application can choose whether it wants to be consulted (ALR use case) by connecting to this signal. For as long as this signal connection remains the session remains registered as a roaming stakeholder; otherwise roaming will be enforced by the platform.</source>
          <target state="translated">プラットフォームによっては、強制ローミングとアプリケーションレベルローミング(ALR)の概念をサポートしている場合があります。強制ローミングとは、プラットフォームがアプリケーションに相談することなく、単に新しいコンフィギュレーションにローミングすることを意味します。リンク層の損失を検出し、ソケットを再確立するのはアプリケーション次第です。対照的に、ALR はシステムがローミングするのを防ぐ機会を提供します。このセッションがローミングをサポートするコンフィグレーションに基づいている場合、アプリケーションはこの信号に接続することで、コンサルテーションを受けるかどうかを選択することができます(ALR の使用例)。この信号接続が続く限り、セッションはローミングの利害関係者として登録されたままです。</target>
        </trans-unit>
        <trans-unit id="98232ac3967b40b1c6ea001503cc1625eb3456bb" translate="yes" xml:space="preserve">
          <source>Some platforms provide the option of compiling shader source code to an intermediate format similar to SPIR-V. This involves running platform-specific tools. With Direct 3D, the &lt;code&gt;qsb&lt;/code&gt; tool provides the option to invoke &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/direct3dtools/fxc&quot;&gt;the fxc tool from the Windows SDK&lt;/a&gt; once the HLSL source code has been generated. It then replaces the HLSL source code with the &lt;code&gt;DXBC&lt;/code&gt; binary generated by &lt;code&gt;fxc&lt;/code&gt;. This can have a positive effect on applications' run time performance since they no longer need to do the first phase of compilation (HLSL source to DXBC) themselves. For macOS and iOS the &lt;a href=&quot;https://developer.apple.com/documentation/metal/libraries/building_a_library_with_metal_s_command-line_tools?language=objc&quot;&gt;XCode SDK provides similar tools&lt;/a&gt;. The downside of this approach that running these tools is only possible on their respective platforms. Therefore, this is best suited for use in combination with qsb's CMake integration since doing shader conditioning at application build time implicitly comes with the knowledge needed about the target platform and what platform-specific tools can be invoked.</source>
          <target state="translated">一部のプラットフォームでは、シェーダーソースコードをSPIR-Vと同様の中間形式にコンパイルするオプションが提供されています。これには、プラットフォーム固有のツールの実行が含まれます。 Direct 3Dでは、 &lt;code&gt;qsb&lt;/code&gt; ツールは、HLSLソースコードが生成さ&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/direct3dtools/fxc&quot;&gt;れた後、WindowsSDKからfxcツール&lt;/a&gt;を呼び出すオプションを提供します。次に、HLSLソースコードを &lt;code&gt;fxc&lt;/code&gt; によって生成された &lt;code&gt;DXBC&lt;/code&gt; バイナリに置き換えます。これは、アプリケーションがコンパイルの最初のフェーズ（HLSLソースからDXBC）を自分で行う必要がなくなるため、アプリケーションの実行時のパフォーマンスにプラスの影響を与える可能性があります。 macOSおよびiOSの場合、&lt;a href=&quot;https://developer.apple.com/documentation/metal/libraries/building_a_library_with_metal_s_command-line_tools?language=objc&quot;&gt;XCodeSDKは同様のツールを提供します&lt;/a&gt;。これらのツールの実行がそれぞれのプラットフォームでのみ可能であるというこのアプローチの欠点。したがって、これはqsbのCMake統合と組み合わせて使用​​するのに最適です。アプリケーションのビルド時にシェーダー調整を行うと、ターゲットプラットフォームと、呼び出すことができるプラットフォーム固有のツールについて必要な知識が暗黙的に得られるためです。</target>
        </trans-unit>
        <trans-unit id="48ceaafb16b30b1a4c6e16476606cf611495607e" translate="yes" xml:space="preserve">
          <source>Some plugin classes require additional functions to be implemented. See the class documentation for details of the virtual functions that must be reimplemented for each type of plugin.</source>
          <target state="translated">プラグインのクラスによっては、追加の関数を実装する必要があります。プラグインの種類ごとに再実装が必要な仮想関数の詳細は、クラスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="e540ffaec34773b0f3f56aa60afcbf4f28fe13c1" translate="yes" xml:space="preserve">
          <source>Some plugins already ship with Qt. These are:</source>
          <target state="translated">いくつかのプラグインはすでにQtに同梱されています。これらは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b538d944c5e341a552af9d0ef3a621845ed92a44" translate="yes" xml:space="preserve">
          <source>Some plugins may not support attributes at all, others may only support a certain set, others still may support a dynamically changing set of attributes over time or even allow attributes to be arbitrarily defined by the client application. The attributes could also vary on a place by place basis, for example one place may have opening hours while another does not. Consult the &lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;plugin references&lt;/a&gt; for details.</source>
          <target state="translated">一部のプラグインは属性をまったくサポートしない場合もあれば、特定のセットのみをサポートする場合もあれば、動的に変化する一連の属性をサポートする場合や、クライアントアプリケーションで属性を任意に定義できる場合もあります。属性は場所ごとに異なる場合もあります。たとえば、ある場所には営業時間があり、別の場所にはない場合があります。詳細については、&lt;a href=&quot;qtlocation-index#plugin-references-and-parameters&quot;&gt;プラグインのリファレンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3393aee17e5bb1582e551fb770a6624b01665db1" translate="yes" xml:space="preserve">
          <source>Some plugins might allow or require specific parameters to operate. In order to specify these plugin-specific parameters, MapParameter elements can be nested inside a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt;.</source>
          <target state="translated">一部のプラグインは、特定のパラメーターの操作を許可または要求する場合があります。これらのプラグイン固有のパラメーターを指定するために、MapParameter要素を&lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt;内にネストできます。</target>
        </trans-unit>
        <trans-unit id="b9658483cb58f6c095e3f61fface8cdc4eb71b59" translate="yes" xml:space="preserve">
          <source>Some plugins might allow or require specific parameters to operate. In order to specify these plugin-specific parameters, MapParameter elements can be nested inside a RouteQuery.</source>
          <target state="translated">プラグインによっては、動作するために特定のパラメータを許可したり、必要としたりする場合があります。これらのプラグイン固有のパラメータを指定するために、MapParameter 要素を RouteQuery 内に入れ子にすることができます。</target>
        </trans-unit>
        <trans-unit id="1172cd2c031f3f539d09d54dc17ed1a343a7307c" translate="yes" xml:space="preserve">
          <source>Some properties change their defaults:</source>
          <target state="translated">いくつかのプロパティは、デフォルト値を変更します。</target>
        </trans-unit>
        <trans-unit id="9403e7c36fe99f265293e78114285d06b88cd1ae" translate="yes" xml:space="preserve">
          <source>Some properties, such as attached properties or those whose value never changes, do not require a change notifier.</source>
          <target state="translated">アタッチされたプロパティや値が変化しないプロパティのように、変更通知を必要としないプロパティもあります。</target>
        </trans-unit>
        <trans-unit id="e9dc2d17c26c53075757c787902304afd0dc790c" translate="yes" xml:space="preserve">
          <source>Some property types do not have a natural value representation, and for those property types the QML engine automatically performs string-to-typed-value conversion. So, for example, even though properties of the &lt;code&gt;color&lt;/code&gt; type store colors and not strings, you are able to assign the string &lt;code&gt;&quot;red&quot;&lt;/code&gt; to a color property, without an error being reported.</source>
          <target state="translated">一部のプロパティタイプには自然な値の表現がないため、QMLエンジンは文字列から型付き値への変換を自動的に実行します。したがって、たとえば、 &lt;code&gt;color&lt;/code&gt; タイプのプロパティは文字列ではなく色を格納していても、エラーが報告されることなく、文字列 &lt;code&gt;&quot;red&quot;&lt;/code&gt; をカラープロパティに割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="d56fc226c377803beb44d0816d8d289d7050abca" translate="yes" xml:space="preserve">
          <source>Some readers may skip entities if they have not seen the declarations (e.g. because they are in an external DTD). If they do so they report that they skipped the entity called</source>
          <target state="translated">読者の中には、宣言を見ていない場合(外部DTDにあるためなど)、エンティティをスキップする人がいるかもしれません。そのような場合、そのような読者は</target>
        </trans-unit>
        <trans-unit id="17acad27639d3bd0fbabc70ea7e93d822e9a9f2a" translate="yes" xml:space="preserve">
          <source>Some readers may use this function to report each chunk of whitespace in element content. The whitespace is reported in</source>
          <target state="translated">読者によっては、この機能を使用して、要素コンテンツ内の空白の各チャンクを報告することがあります。ホワイトスペースは</target>
        </trans-unit>
        <trans-unit id="e4a717aa1d3c22f613ce044441ba2d124ee37437" translate="yes" xml:space="preserve">
          <source>Some readers report whitespace in element content using the &lt;a href=&quot;qxmlcontenthandler#ignorableWhitespace&quot;&gt;ignorableWhitespace&lt;/a&gt;() function rather than using this one.</source>
          <target state="translated">一部のリーダーは、これを使用するのではなく、&lt;a href=&quot;qxmlcontenthandler#ignorableWhitespace&quot;&gt;ignorableWhitespace&lt;/a&gt;（）関数を使用して要素コンテンツの空白を報告します。</target>
        </trans-unit>
        <trans-unit id="c7434baf8f60147b69b2ba04375103c878830a05" translate="yes" xml:space="preserve">
          <source>Some regexps can match an indeterminate number of times. For example if the input string is &quot;Offsets: 12 14 99 231 7&quot; and the regexp, &lt;code&gt;rx&lt;/code&gt;, is &lt;b&gt;(\d+)+&lt;/b&gt;, we would hope to get a list of all the numbers matched. However, after calling &lt;code&gt;rx.indexIn(str)&lt;/code&gt;, capturedTexts() will return the list (&quot;12&quot;, &quot;12&quot;), i.e. the entire match was &quot;12&quot; and the first subexpression matched was &quot;12&quot;. The correct approach is to use &lt;a href=&quot;qregexp#cap&quot;&gt;cap&lt;/a&gt;() in a &lt;a href=&quot;qregexp#cap-in-a-loop&quot;&gt;loop&lt;/a&gt;.</source>
          <target state="translated">一部の正規表現は、不確定な回数に一致する可能性があります。たとえば、入力文字列が &quot;Offsets：12 14 99 231 7&quot;であり、正規表現 &lt;code&gt;rx&lt;/code&gt; が&lt;b&gt;（\ d +）+&lt;/b&gt;である場合、一致するすべての数値のリストを取得できます。ただし、 &lt;code&gt;rx.indexIn(str)&lt;/code&gt; を呼び出した後、capturedTexts（）はリスト（「12」、「12」）を返します。つまり、一致全体が「12」で、最初に一致した部分式が「12」でした。正しい方法は、&lt;a href=&quot;qregexp#cap-in-a-loop&quot;&gt;ループ&lt;/a&gt;で&lt;a href=&quot;qregexp#cap&quot;&gt;cap&lt;/a&gt;（）を使用することです。</target>
        </trans-unit>
        <trans-unit id="1c80aff520bb458b7804d6bfa43424458c0154ba" translate="yes" xml:space="preserve">
          <source>Some resources need to change based on the user's locale, such as translation files or icons. This is done by adding a &lt;code&gt;lang&lt;/code&gt; attribute to the &lt;code&gt;qresource&lt;/code&gt; tag, specifying a suitable locale string. For example:</source>
          <target state="translated">翻訳ファイルやアイコンなど、一部のリソースはユーザーのロケールに基づいて変更する必要があります。これを行うには、適切なロケール文字列を指定して、 &lt;code&gt;lang&lt;/code&gt; 属性を &lt;code&gt;qresource&lt;/code&gt; タグに追加します。例えば：</target>
        </trans-unit>
        <trans-unit id="470222b09000ce466b6b177cb7de93a5ad424593" translate="yes" xml:space="preserve">
          <source>Some roles have special semantics. In order to implement check boxes for example a &quot;checked&quot; property is expected.</source>
          <target state="translated">いくつかのロールは特別なセマンティクスを持っています。例えばチェックボックスを実装するためには、&quot;checked &quot;プロパティが期待されます。</target>
        </trans-unit>
        <trans-unit id="c0927fd7b2696d4dea047cfcaea069eb3ba87fce" translate="yes" xml:space="preserve">
          <source>Some scene graph backends use texture atlasses, grouping multiple small textures into one large texture. If this is the case, the function &lt;a href=&quot;qsgtexture#isAtlasTexture&quot;&gt;isAtlasTexture&lt;/a&gt;() will return true. Atlases are used to aid the rendering algorithm to do better sorting which increases performance. Atlases are also essential for batching (merging together geometry to reduce the number of draw calls), because two instances of the same material using two different QSGTextures are not batchable, whereas if both QSGTextures refer to the same atlas, batching can happen, assuming the materials are otherwise compatible.</source>
          <target state="translated">一部のシーングラフバックエンドは、テクスチャアトラスを使用して、複数の小さなテクスチャを1つの大きなテクスチャにグループ化します。この場合、関数&lt;a href=&quot;qsgtexture#isAtlasTexture&quot;&gt;isAtlasTexture&lt;/a&gt;（）はtrueを返します。アトラスは、レンダリングアルゴリズムがパフォーマンスを向上させる、より適切な並べ替えを行うのを支援するために使用されます。 2つの異なるQSGTexturesを使用する同じマテリアルの2つのインスタンスはバッチ処理できないため、アトラスはバッチ処理（ジオメトリをマージして描画呼び出しの数を減らす）にも不可欠ですが、両方のQSGTexturesが同じアトラスを参照している場合、バッチ処理が発生する可能性があります。それ以外の場合、材料は互換性があります。</target>
        </trans-unit>
        <trans-unit id="c5f846d2db74ec6aecd2179bfd7823d90e404bc2" translate="yes" xml:space="preserve">
          <source>Some scene graph backends use texture atlasses, grouping multiple small textures into one large texture. If this is the case, the function &lt;a href=&quot;qsgtexture#isAtlasTexture&quot;&gt;isAtlasTexture&lt;/a&gt;() will return true. Atlasses are used to aid the rendering algorithm to do better sorting which increases performance. The location of the texture inside the atlas is given with the &lt;a href=&quot;qsgtexture#normalizedTextureSubRect&quot;&gt;normalizedTextureSubRect&lt;/a&gt;() function.</source>
          <target state="translated">一部のシーングラフバックエンドは、テクスチャアトラスを使用して、複数の小さなテクスチャを1つの大きなテクスチャにグループ化します。この場合、関数&lt;a href=&quot;qsgtexture#isAtlasTexture&quot;&gt;isAtlasTexture&lt;/a&gt;（）はtrueを返します。アトラスは、レンダリングアルゴリズムがパフォーマンスを向上させるより良いソートを行うのを助けるために使用されます。アトラス内のテクスチャの位置は、&lt;a href=&quot;qsgtexture#normalizedTextureSubRect&quot;&gt;normalizedTextureSubRect&lt;/a&gt;（）関数で指定されます。</target>
        </trans-unit>
        <trans-unit id="97de3a8756fbdaa0ad821bdb9e6dbe4ec2ee8755" translate="yes" xml:space="preserve">
          <source>Some scenegraph backends, software in particular, use no scissor or stencil. There the clip region is provided as an ordinary &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;.</source>
          <target state="translated">一部のシーングラフバックエンド、特にソフトウェアは、はさみやステンシルを使用しません。そこでは、クリップ領域が通常の&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;として提供されます。</target>
        </trans-unit>
        <trans-unit id="5413c652b587bb43f865f292015ed841602bf2c4" translate="yes" xml:space="preserve">
          <source>Some sensors (eg. the accelerometer) are often accessed very frequently. This may be slowed down by the use of signals and slots. The &lt;a href=&quot;qsensorfilter&quot;&gt;QSensorFilter&lt;/a&gt; interface provides a more efficient way for the sensor to notify your class that the sensor has changed.</source>
          <target state="translated">一部のセンサー（例：加速度計）は、非常に頻繁にアクセスされます。これは、信号とスロットの使用によって遅くなる場合があります。&lt;a href=&quot;qsensorfilter&quot;&gt;QSensorFilterの&lt;/a&gt;インターフェイスは、センサーが変更されたことを自分のクラスに通知するためのセンサーのためのより効率的な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="8c1e662c1ff48afbe619b793e85aadab0cf2acff" translate="yes" xml:space="preserve">
          <source>Some sensors (eg. the accelerometer) are often accessed very frequently. This may be slowed down by the use of signals and slots. The QSensorFilter interface provides a more efficient way for the sensor to notify your class that the sensor has changed.</source>
          <target state="translated">いくつかのセンサー(加速度センサーなど)は非常に頻繁にアクセスされます。これは、シグナルやスロットの使用によって遅くなる可能性があります。QSensorFilter インターフェースは、センサーが変更されたことをクラスに通知するための、より効率的な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="fab827e505c19ce413614b4be6e91e5fc7cd071f" translate="yes" xml:space="preserve">
          <source>Some sensors may be on the system but unavailable for use. This function will return true if the sensor is busy. You will not be able to &lt;a href=&quot;qsensor#start&quot;&gt;start&lt;/a&gt;() the sensor.</source>
          <target state="translated">一部のセンサーはシステム上にありますが、使用できません。この関数は、センサーがビジーの場合にtrueを返します。センサーを&lt;a href=&quot;qsensor#start&quot;&gt;開始&lt;/a&gt;（）することはできません。</target>
        </trans-unit>
        <trans-unit id="4c11cb38c9732aa1310d16c1ac27db6acf269b7b" translate="yes" xml:space="preserve">
          <source>Some sensors react to screen orientation changes, such as &lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt;, &lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt; and &lt;a href=&quot;qrotationsensor&quot;&gt;QRotationSensor&lt;/a&gt;. These are so called</source>
          <target state="translated">&lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt;、&lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt;、&lt;a href=&quot;qrotationsensor&quot;&gt;QRotationSensor&lt;/a&gt;など、一部のセンサーは画面の向きの変化に反応します。これらはいわゆる</target>
        </trans-unit>
        <trans-unit id="5a0c3e2f354bbd4f7b421f0b0fa12319d5465874" translate="yes" xml:space="preserve">
          <source>Some sequential devices support communicating via multiple channels. These channels represent separate streams of data that have the property of independently sequenced delivery. Once the device is opened, you can determine the number of channels by calling the &lt;a href=&quot;qiodevice#readChannelCount&quot;&gt;readChannelCount&lt;/a&gt;() and &lt;a href=&quot;qiodevice#writeChannelCount&quot;&gt;writeChannelCount&lt;/a&gt;() functions. To switch between channels, call &lt;a href=&quot;qiodevice#setCurrentReadChannel&quot;&gt;setCurrentReadChannel&lt;/a&gt;() and &lt;a href=&quot;qiodevice#setCurrentWriteChannel&quot;&gt;setCurrentWriteChannel&lt;/a&gt;(), respectively. &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; also provides additional signals to handle asynchronous communication on a per-channel basis.</source>
          <target state="translated">一部の順次デバイスは、複数のチャネルを介した通信をサポートしています。これらのチャネルは、個別に順序付けられた配信のプロパティを持つデータの個別のストリームを表します。デバイスが開かれると、&lt;a href=&quot;qiodevice#readChannelCount&quot;&gt;readChannelCount&lt;/a&gt;（）および&lt;a href=&quot;qiodevice#writeChannelCount&quot;&gt;writeChannelCount&lt;/a&gt;（）関数を呼び出すことにより、チャネルの数を決定できます。チャネルを切り替えるには、それぞれ&lt;a href=&quot;qiodevice#setCurrentReadChannel&quot;&gt;setCurrentReadChannel&lt;/a&gt;（）と&lt;a href=&quot;qiodevice#setCurrentWriteChannel&quot;&gt;setCurrentWriteChannel&lt;/a&gt;（）を呼び出します。&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;は、チャネルごとに非同期通信を処理する追加の信号も提供します。</target>
        </trans-unit>
        <trans-unit id="a5ea1750e168a1afdb933d47b23cf6b3fcd1e7b5" translate="yes" xml:space="preserve">
          <source>Some sequential devices support communicating via multiple channels. These channels represent separate streams of data that have the property of independently sequenced delivery. Once the device is opened, you can determine the number of channels by calling the &lt;a href=&quot;qiodevice#readChannelCount&quot;&gt;readChannelCount&lt;/a&gt;() and &lt;a href=&quot;qiodevice#writeChannelCount&quot;&gt;writeChannelCount&lt;/a&gt;() functions. To switch between channels, call &lt;a href=&quot;qiodevice#setCurrentReadChannel&quot;&gt;setCurrentReadChannel&lt;/a&gt;() and &lt;a href=&quot;qiodevice#setCurrentWriteChannel&quot;&gt;setCurrentWriteChannel&lt;/a&gt;(), respectively. QIODevice also provides additional signals to handle asynchronous communication on a per-channel basis.</source>
          <target state="translated">一部のシーケンシャルデバイスは、複数のチャネルを介した通信をサポートしています。これらのチャネルは、独立してシーケンスされた配信のプロパティを持つデータの個別のストリームを表します。デバイスがオープンされたら、呼び出すことによって、チャネル数を決定することができ&lt;a href=&quot;qiodevice#readChannelCount&quot;&gt;readChannelCount&lt;/a&gt;（）と&lt;a href=&quot;qiodevice#writeChannelCount&quot;&gt;writeChannelCount&lt;/a&gt;（）関数を。チャネルを切り替えるには、それぞれ&lt;a href=&quot;qiodevice#setCurrentReadChannel&quot;&gt;setCurrentReadChannel&lt;/a&gt;（）と&lt;a href=&quot;qiodevice#setCurrentWriteChannel&quot;&gt;setCurrentWriteChannel&lt;/a&gt;（）を呼び出します。 QIODeviceは、チャネルごとに非同期通信を処理するための追加の信号も提供します。</target>
        </trans-unit>
        <trans-unit id="d9ce96262265b538c8f721eae20cc6bc0f214bc4" translate="yes" xml:space="preserve">
          <source>Some shading languages and APIs have a concept of separate image and sampler objects. Qt Quick always works with combined image sampler objects in shaders, as supported by SPIR-V. Therefore shaders supplied for ShaderEffect should always use &lt;code&gt;layout(binding = 1) uniform sampler2D tex;&lt;/code&gt; style sampler declarations. The underlying abstraction layer and the shader pipeline takes care of making this work for all the supported APIs and shading languages, transparently to the applications.</source>
          <target state="translated">一部のシェーディング言語とAPIには、個別の画像オブジェクトとサンプラーオブジェクトの概念があります。Qt Quickは、SPIR-Vでサポートされているように、シェーダー内の結合されたイメージサンプラーオブジェクトで常に機能します。したがって、ShaderEffectに提供されるシェーダーは、常に &lt;code&gt;layout(binding = 1) uniform sampler2D tex;&lt;/code&gt; 使用する必要があります。スタイルサンプラー宣言。基盤となる抽象化レイヤーとシェーダーパイプラインは、サポートされているすべてのAPIとシェーディング言語に対して、アプリケーションに対して透過的にこれを機能させるように処理します。</target>
        </trans-unit>
        <trans-unit id="ad23f458ed8661d578da8626f24025d3d6bbdbe0" translate="yes" xml:space="preserve">
          <source>Some states and variables are common for all widgets. These are set with &lt;a href=&quot;qstyleoption#initFrom&quot;&gt;QStyleOption::initFrom&lt;/a&gt;(). Not all elements use this function; it is the widgets that create the style options, and for some elements the information from &lt;a href=&quot;qstyleoption#initFrom&quot;&gt;initFrom()&lt;/a&gt; is not necessary.</source>
          <target state="translated">一部の状態と変数は、すべてのウィジェットに共通です。これらは&lt;a href=&quot;qstyleoption#initFrom&quot;&gt;QStyleOption :: initFrom&lt;/a&gt;（）で設定されます。すべての要素がこの関数を使用するわけではありません。スタイルオプションを作成するのはウィジェットであり、一部の要素では&lt;a href=&quot;qstyleoption#initFrom&quot;&gt;initFrom（）&lt;/a&gt;からの情報は必要ありません。</target>
        </trans-unit>
        <trans-unit id="96e91612c2869f88b972b3e35c6fc89c6ba11911" translate="yes" xml:space="preserve">
          <source>Some subclasses, such as &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; and &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, are implemented using a memory buffer for intermediate storing of data. This reduces the number of required device accessing calls, which are often very slow. Buffering makes functions like &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;() and &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;() fast, as they can operate on the memory buffer instead of directly on the device itself. Certain I/O operations, however, don't work well with a buffer. For example, if several users open the same device and read it character by character, they may end up reading the same data when they meant to read a separate chunk each. For this reason, &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; allows you to bypass any buffering by passing the Unbuffered flag to &lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;(). When subclassing &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, remember to bypass any buffer you may use when the device is open in Unbuffered mode.</source>
          <target state="translated">&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;や&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;などの一部のサブクラスは、データの中間保存用にメモリバッファを使用して実装されます。これにより、多くの場合非常に遅い、必要なデバイスアクセスコールの数が減少します。バッファリングを使用すると、&lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;（）や&lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;（）などの関数が高速になります。これは、デバイス自体ではなくメモリバッファを操作できるためです。ただし、特定のI / O操作はバッファではうまく機能しません。たとえば、複数のユーザーが同じデバイスを開いて1文字ずつ読み取る場合、それぞれ別のチャンクを読み取るつもりだったときに、同じデータを読み取ってしまう可能性があります。このような理由から、&lt;a href=&quot;qiodevice&quot;&gt;のQIODeviceは、&lt;/a&gt;あなたがにバッファなしのフラグを渡すことで任意のバッファリングバイパスすることができます&lt;a href=&quot;qiodevice#open&quot;&gt;オープン&lt;/a&gt;（）。&lt;a href=&quot;qiodevice&quot;&gt;QIODeviceを&lt;/a&gt;サブクラス化するときは、デバイスがアンバッファードモードで開いているときに使用する可能性のあるバッファーをバイパスすることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="2a724847b13730c0463b8b7e09f4b4728e533d82" translate="yes" xml:space="preserve">
          <source>Some subclasses, such as &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; and &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, are implemented using a memory buffer for intermediate storing of data. This reduces the number of required device accessing calls, which are often very slow. Buffering makes functions like &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;() and &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;() fast, as they can operate on the memory buffer instead of directly on the device itself. Certain I/O operations, however, don't work well with a buffer. For example, if several users open the same device and read it character by character, they may end up reading the same data when they meant to read a separate chunk each. For this reason, QIODevice allows you to bypass any buffering by passing the Unbuffered flag to &lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;(). When subclassing QIODevice, remember to bypass any buffer you may use when the device is open in Unbuffered mode.</source>
          <target state="translated">&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;や&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;などの一部のサブクラスは、データの中間保存用のメモリバッファを使用して実装されます。これにより、多くの場合非常に遅い通話にアクセスする必要なデバイスの数が減ります。バッファリングにより、&lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;（）や&lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;（）などの関数は、デバイス自体ではなくメモリバッファで動作できるため、高速になります。ただし、特定のI / O操作は、バッファーではうまく機能しません。たとえば、複数のユーザーが同じデバイスを開いて1文字ずつ読み取る場合、それぞれ個別のチャンクを読み取ることを意図したときに、同じデータを読み取ることになります。このため、QIODeviceでは、バッファリングされていないフラグを渡して&lt;a href=&quot;qiodevice#open&quot;&gt;開くこと&lt;/a&gt;により、バッファリングをバイパスできます。（）。QIODeviceをサブクラス化するときは、デバイスが非バッファーモードで開いているときに使用する可能性のあるバッファーをバイパスすることを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="f56971e0e65b18ad393f3c35a8de887c77475535" translate="yes" xml:space="preserve">
          <source>Some syntaxes can have constructs that span several text blocks. For example, a C++ syntax highlighter should be able to cope with &lt;code&gt;/&lt;/code&gt;&lt;code&gt;*...*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt; multiline comments. To deal with these cases it is necessary to know the end state of the previous text block (e.g. &quot;in comment&quot;).</source>
          <target state="translated">一部の構文は、複数のテキストブロックにまたがる構成を持つことができます。たとえば、C ++構文の蛍光ペンは、 &lt;code&gt;/&lt;/code&gt; &lt;code&gt;*...*&lt;/code&gt; &lt;code&gt;/&lt;/code&gt; 複数行コメントに対処できる必要があります。これらのケースに対処するには、前のテキストブロックの終了状態を知る必要があります（「コメント内」など）。</target>
        </trans-unit>
        <trans-unit id="52f1aee07e7e769f200fdc6537a26be21284582e" translate="yes" xml:space="preserve">
          <source>Some systems may send an event of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchCancel&lt;/a&gt;. Upon receiving this event applications are requested to ignore the entire active touch sequence. For example in a composited system the compositor may decide to treat certain gestures as system-wide gestures. Whenever such a decision is made (the gesture is recognized), the clients will be notified with a &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::TouchCancel&lt;/a&gt; event so they can update their state accordingly.</source>
          <target state="translated">システムによっては、&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: TouchCancel&lt;/a&gt;タイプのイベントを送信する場合があります。このイベントを受信すると、アプリケーションはアクティブなタッチシーケンス全体を無視するように要求されます。たとえば、複合システムでは、コンポジターは特定のジェスチャーをシステム全体のジェスチャーとして扱うことを決定できます。そのような決定が行われるたびに（ジェスチャーが認識されると）、クライアントは&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: TouchCancel&lt;/a&gt;イベントで通知され、それに応じて状態を更新できます。</target>
        </trans-unit>
        <trans-unit id="3f79de7559db7cd3dd9c6f893d4ee1c3f42fb4ed" translate="yes" xml:space="preserve">
          <source>Some tags are handled specially and change the transformation of the tagged value from CBOR to JSON. The following table lists those special cases:</source>
          <target state="translated">一部のタグは特殊な扱いを受け、タグ値の変換をCBORからJSONに変更します。それらの特殊なケースを以下の表に示します。</target>
        </trans-unit>
        <trans-unit id="0fca5dd5b5c0912bd557e3a5c40b8f7710d6b10b" translate="yes" xml:space="preserve">
          <source>Some test strategies are vulnerable to timing-dependent behavior of certain classes, which can lead to tests that fail only on certain platforms or that do not return consistent results.</source>
          <target state="translated">テスト戦略の中には、特定のクラスのタイミングに依存した振る舞いに脆弱なものがあり、特定のプラットフォームでのみ失敗したり、一貫した結果を返さなかったりするテストを引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="1fd6567ea10a5180fa9f50626e627b7646669bf0" translate="yes" xml:space="preserve">
          <source>Some tests use the test machine's display, mouse, and keyboard, and can thus fail if the machine is being used for something else at the same time or if multiple tests are run in parallel.</source>
          <target state="translated">テストの中には、テストマシンのディスプレイ、マウス、キーボードを使用するものがあり、マシンが同時に他のものに使用されていたり、複数のテストが並行して実行されていたりすると、失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="c1d34e6b33829832b0ab9c3c3295ec583222a265" translate="yes" xml:space="preserve">
          <source>Some tools use this value even when the &lt;a href=&quot;qaccessiblevalueinterface#setCurrentValue&quot;&gt;setCurrentValue&lt;/a&gt; does not perform any action. Progress bars for example are read-only but should return their range divided by 100.</source>
          <target state="translated">一部のツールは、&lt;a href=&quot;qaccessiblevalueinterface#setCurrentValue&quot;&gt;setCurrentValue&lt;/a&gt;がアクションを実行しない場合でもこの値を使用します。たとえば、進行状況バーは読み取り専用ですが、範囲を100で割った値が返されます。</target>
        </trans-unit>
        <trans-unit id="ff0596ee986387b273e2580e321e060e87f172f9" translate="yes" xml:space="preserve">
          <source>Some touchscreens report absolute coordinates and can't be differentiated from touchpads. In this case, pass &lt;code&gt;abs&lt;/code&gt; to indicate that the device is using absolute events.</source>
          <target state="translated">一部のタッチスクリーンは絶対座標を報告し、タッチパッドと区別できません。この場合、 &lt;code&gt;abs&lt;/code&gt; を渡して、デバイスが絶対イベントを使用していることを示します。</target>
        </trans-unit>
        <trans-unit id="28bf741d99a457aec6b229a82c2ec7eb25a66695" translate="yes" xml:space="preserve">
          <source>Some transformations like rotations</source>
          <target state="translated">回転のようないくつかの変換</target>
        </trans-unit>
        <trans-unit id="952f0016827c05d03dc7b6e0f6b28661f0a08ff4" translate="yes" xml:space="preserve">
          <source>Some translatable strings contain placeholders for integer values and need to be translated differently depending on the values in use.</source>
          <target state="translated">翻訳可能な文字列の中には、整数値のプレースホルダを含むものがあり、使用する値に応じて異なる翻訳が必要です。</target>
        </trans-unit>
        <trans-unit id="efe022a14713dbd8e8798773e0190defbe081769" translate="yes" xml:space="preserve">
          <source>Some types are registered automatically and do not need this macro:</source>
          <target state="translated">一部の型は自動的に登録され、このマクロは必要ありません。</target>
        </trans-unit>
        <trans-unit id="c8c53ad7b57f6514837e3c7aad34cae20afce578" translate="yes" xml:space="preserve">
          <source>Some underlying window implementations will reset the cursor if it leaves a widget even if the mouse is grabbed. If you want to have a cursor set for all widgets, even when outside the window, consider &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication::setOverrideCursor&lt;/a&gt;().</source>
          <target state="translated">基になるウィンドウの実装によっては、マウスをつかんでいてもウィジェットから離れると、カーソルがリセットされます。すべてのウィジェットにカーソルを設定したい場合は、ウィンドウの外でも、&lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication :: setOverrideCursor&lt;/a&gt;（）を検討してください。</target>
        </trans-unit>
        <trans-unit id="fd2203429cf50931c26afcfe32b598f37d27050d" translate="yes" xml:space="preserve">
          <source>Some underlying window implementations will reset the cursor if it leaves a window even if the mouse is grabbed. If you want to have a cursor set for all windows, even when outside the window, consider &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication::setOverrideCursor&lt;/a&gt;().</source>
          <target state="translated">基盤となるウィンドウの実装によっては、マウスをつかんでもウィンドウを離れると、カーソルがリセットされます。すべてのウィンドウにカーソルを設定したい場合は、ウィンドウの外でも、&lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication :: setOverrideCursor&lt;/a&gt;（）を検討してください。</target>
        </trans-unit>
        <trans-unit id="c9803af520072141c88603e6f88113b61d85abc1" translate="yes" xml:space="preserve">
          <source>Some utility methods:</source>
          <target state="translated">いくつかの実用的な方法。</target>
        </trans-unit>
        <trans-unit id="e5f9fd6e9be640d482094a89b4a7ac41d653eb1a" translate="yes" xml:space="preserve">
          <source>Some value types in Qt such as &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; are represented in JavaScript as objects that have the same properties and functions like in the C++ API. The same representation is possible with custom C++ value types. To enable a custom value type with the QML engine, the class declaration needs to be annotated with &lt;code&gt;Q_GADGET&lt;/code&gt;. Properties that are intended to be visible in the JavaScript representation need to be declared with &lt;code&gt;Q_PROPERTY&lt;/code&gt;. Similarly functions need to be marked with &lt;code&gt;Q_INVOKABLE&lt;/code&gt;. This is the same with &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; based C++ APIs. For example, the &lt;code&gt;Actor&lt;/code&gt; class below is annotated as gadget and has properties:</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPointの&lt;/a&gt;ようなQtの一部の値タイプは、JavaScriptではC ++ APIのように同じプロパティと関数を持つオブジェクトとして表されます。同じ表現がカスタムC ++値型でも可能です。 QMLエンジンでカスタム値タイプを有効にするには、クラス宣言に &lt;code&gt;Q_GADGET&lt;/code&gt; アノテーションを付ける必要があります。 JavaScript表現で表示されることを目的としたプロパティは、 &lt;code&gt;Q_PROPERTY&lt;/code&gt; で宣言する必要があります。同様に、関数は &lt;code&gt;Q_INVOKABLE&lt;/code&gt; でマークする必要があります。これは、&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;ベースのC ++ API でも同じです。たとえば、以下の &lt;code&gt;Actor&lt;/code&gt; クラスはガジェットとして注釈が付けられ、プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="eee3b8efcd67700fb480946e35281959cccacf43" translate="yes" xml:space="preserve">
          <source>Some views, such as &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; and &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;, display headers as well as items. These are also implemented by a view class, &lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt;. Headers usually access the same model as the view that contains them. They retrieve data from the model using the &lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;QAbstractItemModel::headerData&lt;/a&gt;() function, and usually display header information in the form of a label. New headers can be subclassed from the &lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt; class to provide more specialized labels for views.</source>
          <target state="translated">&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;や&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;などの一部のビューは、ヘッダーだけでなくアイテムも表示します。これらは、ビュークラス&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt;によっても実装されます。ヘッダーは通常、ヘッダーを含むビューと同じモデルにアクセスします。&lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;QAbstractItemModel :: headerData&lt;/a&gt;（）関数を使用してモデルからデータを取得し、通常、ヘッダー情報をラベルの形式で表示します。&lt;a href=&quot;qheaderview&quot;&gt;QHeaderView&lt;/a&gt;クラスから新しいヘッダーをサブクラス化して、ビューにさらに特化したラベルを提供できます。</target>
        </trans-unit>
        <trans-unit id="20eb4b7f878f7d96953c06a2e9c0021683db80c6" translate="yes" xml:space="preserve">
          <source>Some views, such as &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; and &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;, are able to display headers along with the item data. If our model is displayed in a view with headers, we want the headers to show the row and column numbers. We can provide information about the headers by subclassing the &lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;headerData()&lt;/a&gt; function:</source>
          <target state="translated">&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;や&lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;などの一部のビューは、項目データとともにヘッダーを表示できます。モデルがヘッダー付きのビューに表示されている場合、ヘッダーに行番号と列番号を表示する必要があります。&lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;headerData（）&lt;/a&gt;関数をサブクラス化することで、ヘッダーに関する情報を提供できます。</target>
        </trans-unit>
        <trans-unit id="c765b2a128af055338668b4d4043ad6f175075a2" translate="yes" xml:space="preserve">
          <source>Some web servers, in particular many intranet sites, require the client to authenticate itself with a certificate, called a</source>
          <target state="translated">一部のウェブサーバ、特に多くのイントラネットサイトでは、クライアント自身を</target>
        </trans-unit>
        <trans-unit id="2096198ccc37cdba229d9b3cfd8ed6aaeb0db1fb" translate="yes" xml:space="preserve">
          <source>Some widgets can &quot;have focus&quot;, but create a child widget, such as &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, to actually handle the focus. In this case, the widget can set the line edit to be its focus proxy.</source>
          <target state="translated">一部のウィジェットは「フォーカスを持つ」ことができますが、&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;などの子ウィジェットを作成して、実際にフォーカスを処理します。この場合、ウィジェットはライン編集をフォーカスプロキシに設定できます。</target>
        </trans-unit>
        <trans-unit id="ac7e0a0cc93cb264031989313467d507f2f04594" translate="yes" xml:space="preserve">
          <source>Some widgets display themselves differently when they are disabled. For example a button might draw its label grayed out. If your widget needs to know when it becomes enabled or disabled, you can use the &lt;a href=&quot;qwidget#changeEvent&quot;&gt;changeEvent&lt;/a&gt;() with type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::EnabledChange&lt;/a&gt;.</source>
          <target state="translated">一部のウィジェットは、無効になっていると表示が異なります。たとえば、ボタンはそのラベルをグレー表示します。それが有効または無効になったとき、あなたのウィジェットのニーズを知っている場合は、あなたが使用することができます&lt;a href=&quot;qwidget#changeEvent&quot;&gt;ChangeEventのを&lt;/a&gt;タイプすると（）&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: EnabledChange&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2c552dcabad63b704cb81338315d66508fac21dd" translate="yes" xml:space="preserve">
          <source>Some wizards are more complex in that they allow different traversal paths based on the information provided by the user. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-licensewizard-example.html#&quot;&gt;License Wizard&lt;/a&gt; example illustrates this. It provides five wizard pages; depending on which options are selected, the user can reach different pages.</source>
          <target state="translated">一部のウィザードは、ユーザーから提供された情報に基づいてさまざまな走査パスを許可するという点で、より複雑です。&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-licensewizard-example.html#&quot;&gt;ライセンスウィザードの&lt;/a&gt;例は、このことを示しています。5つのウィザードページがあります。選択したオプションに応じて、ユーザーは異なるページにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="a0f746415150631635dc63cd7e61aaef7a5cfb5c" translate="yes" xml:space="preserve">
          <source>Some wizards are more complex in that they allow different traversal paths based on the information provided by the user. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;License Wizard&lt;/a&gt; example illustrates this. It provides five wizard pages; depending on which options are selected, the user can reach different pages.</source>
          <target state="translated">一部のウィザードは、ユーザーから提供された情報に基づいて異なるトラバーサルパスを許可するという点でより複雑です。&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;ライセンスウィザードの&lt;/a&gt;例は、このことを示しています。5つのウィザードページを提供します。選択したオプションに応じて、ユーザーはさまざまなページにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="1758310eac2ba143902697c5c40713d68713351f" translate="yes" xml:space="preserve">
          <source>Some wizards are more complex in that they allow different traversal paths based on the information provided by the user. The &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;License Wizard&lt;/a&gt; example illustrates this. It provides five wizard pages; depending on which options are selected, the user can reach different pages.</source>
          <target state="translated">一部のウィザードは、ユーザーから提供された情報に基づいて異なるトラバーサルパスを許可するという点でより複雑です。&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;ライセンスウィザードの&lt;/a&gt;例は、このことを示しています。5つのウィザードページを提供します。選択したオプションに応じて、ユーザーはさまざまなページにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="e6eb907028db38b1662f7422455b502934172ee6" translate="yes" xml:space="preserve">
          <source>Some wrappers call Vulkan functions directly, assuming &lt;code&gt;vulkan.h&lt;/code&gt; provides prototypes and the application links to a Vulkan library exporting all necessary symbols. Qt may not directly link to a Vulkan library. Therefore, on some platforms it may be necessary to add &lt;code&gt;LIBS += -lvulkan&lt;/code&gt; or similar in the application's &lt;code&gt;.pro&lt;/code&gt; file.</source>
          <target state="translated">一部のラッパーは、 &lt;code&gt;vulkan.h&lt;/code&gt; がプロトタイプを提供し、アプリケーションがすべての必要なシンボルをエクスポートするVulkanライブラリにリンクしていると想定して、Vulkan関数を直接呼び出します。QtはVulkanライブラリに直接リンクしない場合があります。したがって、一部のプラットフォームでは、アプリケーションの &lt;code&gt;.pro&lt;/code&gt; ファイルに &lt;code&gt;LIBS += -lvulkan&lt;/code&gt; などを追加する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="957553444d6cb746883bf652bf1c100024ace795" translate="yes" xml:space="preserve">
          <source>Some wrappers require exception support to be enabled. Qt does not use exceptions. To enable exceptions for the application, add &lt;code&gt;CONFIG += exceptions&lt;/code&gt; to the &lt;code&gt;.pro&lt;/code&gt; file.</source>
          <target state="translated">一部のラッパーは、例外サポートを有効にする必要があります。Qtは例外を使用しません。アプリケーションの例外を有効にするには、 &lt;code&gt;CONFIG += exceptions&lt;/code&gt; を &lt;code&gt;.pro&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="06fd7b6a54fbd72916398fa16e423ee3a97aa32f" translate="yes" xml:space="preserve">
          <source>Something else happened and it was bad.</source>
          <target state="translated">何か別のことが起きてヤバかった。</target>
        </trans-unit>
        <trans-unit id="b9de24be1661812722bb63a050d863ba25893086" translate="yes" xml:space="preserve">
          <source>Sometime during startup of an application, the &lt;a href=&quot;qplacemanager#initializeCategories&quot;&gt;initializeCategories&lt;/a&gt;() function should be called to setup the categories. Initializing the categories enables the usage of the following functions:</source>
          <target state="translated">アプリケーションの起動時に、&lt;a href=&quot;qplacemanager#initializeCategories&quot;&gt;initializeCategories&lt;/a&gt;（）関数を呼び出してカテゴリを設定する必要があります。カテゴリーを初期化すると、以下の機能を使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="7c5851e38f6eea4130a66d9ded5d27ae9bf9f576" translate="yes" xml:space="preserve">
          <source>Sometimes a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class may need to be registered with the QML type system but not as an instantiable type. For example, this is the case if a C++ class:</source>
          <target state="translated">時には、&lt;a href=&quot;qobject&quot;&gt;QObjectを&lt;/a&gt;由来クラスはQML型システムではなく、インスタンス化タイプとして登録する必要があります。たとえば、C ++クラスの場合は次のようになります。</target>
        </trans-unit>
        <trans-unit id="3d8a94d7fdd0c5603b7559c80f8748e63217727e" translate="yes" xml:space="preserve">
          <source>Sometimes a situation may arise where we wish to cross-reference and match places between managers. Such a situation may arise where one manager provides read-only access to places (origin manager), while another second r/w manager (destination manager) is used to save selected favorites from the first. During a search of the origin manager, we may want to know which ones have been 'favorited' into the destination manager and perhaps display the customized favorite name rather than the original name.</source>
          <target state="translated">時々、マネージャー間で場所を相互参照したり、マッチさせたりしたい状況が発生することがあります。このような場合、あるマネージャーが場所への読み取り専用アクセスを提供している場合(オリジンマネージャー)と、別の2つ目のr/wマネージャー(デスティネーションマネージャー)を使用して、1つ目のマネージャーから選択したお気に入りを保存している場合があります。元のマネージャーを検索する際に、どのマネージャーが「お気に入り」されたのかを目的地のマネージャーに表示したり、元の名前ではなくカスタマイズされたお気に入り名を表示したりしたいと思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="e26dbc74d84c15fcb2d9e23dcf600ebc5558f29e" translate="yes" xml:space="preserve">
          <source>Sometimes an item is part of a group of items that should be treated as one. For example two labels might be visually placed next to each other, but separate items. For accessibility purposes they should be treated as one and thus they are represented by a third invisible item with the right geometry.</source>
          <target state="translated">ある項目は、1つの項目として扱われるべき項目のグループの一部であることがあります。例えば、2つのラベルは、視覚的には隣り合わせに配置されているかもしれませんが、別々のアイテムです。アクセシビリティの目的のためには、それらは一つとして扱われるべきであり、したがって、それらは正しいジオメトリを持つ第三の不可視項目によって表現されます。</target>
        </trans-unit>
        <trans-unit id="092a0b7e41217b935c6bd169eda61b0594df2d39" translate="yes" xml:space="preserve">
          <source>Sometimes an object needs to look at, and possibly intercept, the events that are delivered to another object. For example, dialogs commonly want to filter key presses for some widgets; for example, to modify Return-key handling.</source>
          <target state="translated">時々、オブジェクトは他のオブジェクトに配信されるイベントを見たり、場合によっては傍受したりする必要があります。例えば、ダイアログは一般的にいくつかのウィジェットのキー押下をフィルタリングしたいと考えています。</target>
        </trans-unit>
        <trans-unit id="8872115907c50e9af043c0c747e4f756e9a24870" translate="yes" xml:space="preserve">
          <source>Sometimes it can be necessary to have more control over the path for a specific file managed by the resource system. For example, if we wanted to give &lt;code&gt;image2.png&lt;/code&gt; an alias, we would need to switch to an explicit &lt;code&gt;.qrc&lt;/code&gt; file. &lt;a href=&quot;https://doc.qt.io/qtcreator/creator-project-creating.html#creating-resource-files&quot;&gt;Creating Resource Files&lt;/a&gt; explains how to do this in detail.</source>
          <target state="translated">場合によっては、リソースシステムによって管理される特定のファイルのパスをより詳細に制御する必要があります。たとえば、 &lt;code&gt;image2.png&lt;/code&gt; にエイリアスを付けたい場合、明示的な &lt;code&gt;.qrc&lt;/code&gt; ファイルに切り替える必要があります。&lt;a href=&quot;https://doc.qt.io/qtcreator/creator-project-creating.html#creating-resource-files&quot;&gt;リソースファイルの作成で&lt;/a&gt;は、これを行う方法を詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="1eb489523a63960a557c78afdfb5f3eabf12ac38" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to have the functions made available in the importing context without needing to qualify them. In this case ECMAScript modules and the JavaScript &lt;code&gt;import&lt;/code&gt; statement should be used without the &lt;code&gt;as&lt;/code&gt; qualifier.</source>
          <target state="translated">場合によっては、関数を修飾する必要なく、インポートコンテキストで使用できるようにすることが望ましい場合があります。この場合、ECMAScriptモジュールとJavaScript &lt;code&gt;import&lt;/code&gt; ステートメントは、 &lt;code&gt;as&lt;/code&gt; 修飾子なしで使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="118c9e0bbab27e12cae11ab7d7be248351b365c7" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to make someone else paint on an unusual &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;. &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; supports a static function to do this, setRedirected().</source>
          <target state="translated">ときどき、異常な&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDeviceに&lt;/a&gt;誰かがペイントすることが望ましい場合があります。&lt;a href=&quot;qpainter&quot;&gt;QPainterのは&lt;/a&gt;）（setRedirected、これを行うには、静的な機能をサポートしています。</target>
        </trans-unit>
        <trans-unit id="d9ab373f1d0941b26203f30b376c60ca43c29c9b" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to make someone else paint on an unusual &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;. QPainter supports a static function to do this, setRedirected().</source>
          <target state="translated">他の誰かに異常な&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDeviceを&lt;/a&gt;ペイントさせることが望ましい場合があります。QPainterは、これを行うための静的関数setRedirected（）をサポートしています。</target>
        </trans-unit>
        <trans-unit id="bce3ab2af4ecbcfec30025da1f241645a4f89903" translate="yes" xml:space="preserve">
          <source>Sometimes it is important to be able to format plain text within an irregularly-shaped region, perhaps when rendering a custom widget, for example. Scribe provides generic features, such as those provided by the &lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt; class, to help developers perform word-wrapping and layout tasks without the need to create a document first.</source>
          <target state="translated">たとえばカスタムウィジェットをレンダリングするときなど、不規則な形状の領域内でプレーンテキストをフォーマットできることが重要な場合があります。Scribeは、&lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt;クラスによって提供される機能などの一般的な機能を提供し、開発者が最初にドキュメントを作成する必要なくワードラップとレイアウトタスクを実行できるようにします。</target>
        </trans-unit>
        <trans-unit id="790baf2d1725f0cf773eaca1f3ae43128c6f3e51" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary to bind an object's property to that of another object that isn't directly instantiated by QML, such as a property of a class exported to QML by C++. You can use the Binding type to establish this dependency; binding any value to any object's property.</source>
          <target state="translated">C++でQMLにエクスポートされたクラスのプロパティのように、QMLで直接インスタンス化されていない別のオブジェクトのプロパティにオブジェクトのプロパティをバインドする必要がある場合があります。このような場合には、Binding 型を使用して依存関係を確立することができます。</target>
        </trans-unit>
        <trans-unit id="d528f339029162a5828f616f532e4f55fdf9bb57" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary to go back more than a single step in the stack, for example, to return to a &quot;main&quot; item or some kind of section item in the application. For this use case, it is possible to specify an item as a parameter for &lt;a href=&quot;qml-qtquick-controls-stackview#pop-method&quot;&gt;pop()&lt;/a&gt;. This is called an &quot;unwind&quot; operation as the stack gets unwound to the specified item. If the item is not found, then the stack unwinds until there is only a single item in the stack, which then becomes the current item. To explicitly unwind to the bottom of the stack, it is recommended to use &lt;a href=&quot;qml-qtquick-controls-stackview#pop-method&quot;&gt;pop(null)&lt;/a&gt;, though technically any non-existent item will do.</source>
          <target state="translated">たとえば、アプリケーションの「メイン」アイテムまたはある種のセクションアイテムに戻る場合など、スタック内の1つ以上のステップに戻る必要がある場合があります。この使用例では、アイテムを&lt;a href=&quot;qml-qtquick-controls-stackview#pop-method&quot;&gt;pop（）の&lt;/a&gt;パラメーターとして指定できます。スタックが指定されたアイテムに巻き戻されるため、これは「巻き戻し」操作と呼ばれます。アイテムが見つからない場合は、スタックに1つのアイテムのみが存在するようになるまでスタックが巻き戻され、現在のアイテムになります。明示的にスタックの一番下まで巻き戻すには、&lt;a href=&quot;qml-qtquick-controls-stackview#pop-method&quot;&gt;pop（null）&lt;/a&gt;を使用することをお勧めしますが、技術的には存在しないアイテムでも可能です。</target>
        </trans-unit>
        <trans-unit id="9110e2ade33fd47ef4efa0eae7f75574e63ca367" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary to search for an item, for example, in order to unwind the stack to an item to which the application does not have a reference. This is facilitated using a function &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; in &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt;. The &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; function takes a callback function as its only argument. The callback gets invoked for each item in the stack (starting at the top). If the callback returns true, then it signals that a match has been found and the &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; function returns that item. If the callback fails to return true (no match is found), then &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">たとえば、アプリケーションが参照を持たないアイテムにスタックを巻き戻すために、アイテムを検索する必要がある場合があります。これは、関数の使用促進される&lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;のfind（）&lt;/a&gt;で&lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackViewを&lt;/a&gt;。&lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;検索（）&lt;/a&gt;関数は、その唯一の引数としてコールバック関数を取ります。コールバックは、スタックの各アイテムに対して呼び出されます（上から開始）。コールバックがtrueを返す場合、一致が見つかった&lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;ことを&lt;/a&gt;通知し、find（）関数はその項目を返します。コールバックがtrueを返さない（一致するものが見つからない）場合、&lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find（）&lt;/a&gt;は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c77daa9473ad02d2ba9dfde9b815c0bd0004afb8" translate="yes" xml:space="preserve">
          <source>Sometimes it is necessary to search for an item, for example, in order to unwind the stack to an item to which the application does not have a reference. This is facilitated using a function &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; in StackView. The &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; function takes a callback function as its only argument. The callback gets invoked for each item in the stack (starting at the top). If the callback returns true, then it signals that a match has been found and the &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; function returns that item. If the callback fails to return true (no match is found), then &lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find()&lt;/a&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">たとえば、アプリケーションが参照を持たないアイテムにスタックを巻き戻すために、アイテムを検索する必要がある場合があります。これは、StackViewの関数&lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find（）&lt;/a&gt;を使用すると簡単になります。&lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;検索（）&lt;/a&gt;関数は、その唯一の引数としてコールバック関数を取ります。コールバックは、スタック内のアイテムごとに呼び出されます（一番上から開始）。コールバックがtrueを返す場合、一致が見つかった&lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;ことを&lt;/a&gt;通知し、find（）関数はその項目を返します。コールバックがtrueを返さない場合（一致するものが見つからない場合）、&lt;a href=&quot;qml-qtquick-controls-stackview#find-method&quot;&gt;find（）&lt;/a&gt;は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2a9d609327ef733b2d4327723eb76c5b710f7805" translate="yes" xml:space="preserve">
          <source>Sometimes it is needed to get the contents of a surface, for example to provide a screenshot to the user. The &lt;a href=&quot;qwaylandsurfacegrabber&quot;&gt;QWaylandSurfaceGrabber&lt;/a&gt; class provides a simple method to do so, without having to care what type of buffer backs the surface, be it shared memory, OpenGL or something else.</source>
          <target state="translated">たとえば、ユーザーにスクリーンショットを提供する場合など、サーフェスのコンテンツを取得する必要がある場合があります。&lt;a href=&quot;qwaylandsurfacegrabber&quot;&gt;QWaylandSurfaceGrabberの&lt;/a&gt;クラスには、表面をバックバッファの種類を気にすることなく、それはメモリ、OpenGLのか、何か他のものを共有することは、そうするための簡単な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="585f3b19b784f24fd59416ee09cbe51dbb544d45" translate="yes" xml:space="preserve">
          <source>Sometimes it is needed to get the contents of a surface, for example to provide a screenshot to the user. The QWaylandSurfaceGrabber class provides a simple method to do so, without having to care what type of buffer backs the surface, be it shared memory, OpenGL or something else.</source>
          <target state="translated">例えば、ユーザーにスクリーンショットを提供するために、サーフェスの内容を取得する必要がある場合があります。QWaylandSurfaceGrabberクラスは、共有メモリであれ、OpenGLであれ、何か他のものであれ、どのタイプのバッファがサーフェスをバックアップしているかを気にすることなく、そのためのシンプルなメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="2de552d79a9592764d6674699fe6301c556079da" translate="yes" xml:space="preserve">
          <source>Sometimes it's useful to register custom data with an item, be it a custom item, or a standard item. You can call &lt;a href=&quot;qgraphicsitem#setData&quot;&gt;setData&lt;/a&gt;() on any item to store data in it using a key-value pair (the key being an integer, and the value is a &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;). To get custom data from an item, call &lt;a href=&quot;qgraphicsitem#data&quot;&gt;data&lt;/a&gt;(). This functionality is completely untouched by Qt itself; it is provided for the user's convenience.</source>
          <target state="translated">カスタムアイテムであれ、標準アイテムであれ、カスタムデータをアイテムに登録すると便利な場合があります。任意のアイテムで&lt;a href=&quot;qgraphicsitem#setData&quot;&gt;setData&lt;/a&gt;（）を呼び出して、キーと値のペア（キーは整数、値は&lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;）を使用してデータを格納できます。アイテムからカスタムデータを取得するには、&lt;a href=&quot;qgraphicsitem#data&quot;&gt;data&lt;/a&gt;（）を呼び出します。この機能は、Qt自体にはまったく影響しません。ユーザーの便宜のために提供されています。</target>
        </trans-unit>
        <trans-unit id="2fc9e25876cd776a012cb4edfb6fabd9fafd95f7" translate="yes" xml:space="preserve">
          <source>Sometimes it's useful to register custom data with an item, be it a custom item, or a standard item. You can call &lt;a href=&quot;qgraphicsitem#setData&quot;&gt;setData&lt;/a&gt;() on any item to store data in it using a key-value pair (the key being an integer, and the value is a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;). To get custom data from an item, call &lt;a href=&quot;qgraphicsitem#data&quot;&gt;data&lt;/a&gt;(). This functionality is completely untouched by Qt itself; it is provided for the user's convenience.</source>
          <target state="translated">カスタムアイテムであっても、標準アイテムであっても、カスタムデータをアイテムに登録すると便利な場合があります。キーと値のペア（キーは整数で、値は&lt;a href=&quot;qvariant&quot;&gt;QVariantです&lt;/a&gt;）を使用してデータを格納するために、任意のアイテムで&lt;a href=&quot;qgraphicsitem#setData&quot;&gt;setData&lt;/a&gt;（）を呼び出すことができます。アイテムからカスタムデータを取得するには、&lt;a href=&quot;qgraphicsitem#data&quot;&gt;data&lt;/a&gt;（）を呼び出します。この機能はQt自体にはまったく影響を受けません。ユーザーの便宜のために提供されています。</target>
        </trans-unit>
        <trans-unit id="3370d7293c2d6dfa23ad44cfd0428c00f3bc18a7" translate="yes" xml:space="preserve">
          <source>Sometimes the relationships between properties cannot be expressed using bindings. Instead you may need to run custom code whenever the value of a property changes and instead of assigning the value to another property, pass it to other parts of your application. For example writing data into a network socket or printing debug output. QProperty provides two mechanisms for tracking.</source>
          <target state="translated">時々、プロパティ間の関係をバインディングを使って表現できないことがあります。その代わりに、プロパティの値が変更されるたびにカスタムコードを実行し、値を別のプロパティに割り当てる代わりに、アプリケーションの他の部分に渡す必要があるかもしれません。例えば、ネットワークソケットへのデータの書き込みやデバッグ出力の印刷などです。QProperty には、トラッキングのための 2 つのメカニズムがあります。</target>
        </trans-unit>
        <trans-unit id="f75d9c28c94ea6b99490292f32256e712a3bb4c5" translate="yes" xml:space="preserve">
          <source>Sometimes there might be two items within the pane:</source>
          <target state="translated">ペイン内に2つの項目がある場合があります。</target>
        </trans-unit>
        <trans-unit id="ddc87b0538b1f7cdd41765ac9998a20566628448" translate="yes" xml:space="preserve">
          <source>Sometimes there might be two items within the popup:</source>
          <target state="translated">ポップアップ内に2つの項目がある場合があります。</target>
        </trans-unit>
        <trans-unit id="153dcf70cabb6ea778cfc5e22da147f9ece367be" translate="yes" xml:space="preserve">
          <source>Sometimes you do want to access settings stored in a specific file or registry path. On all platforms, if you want to read an INI file directly, you can use the &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; constructor that takes a file name as first argument and pass &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::IniFormat&lt;/a&gt; as second argument. For example:</source>
          <target state="translated">特定のファイルまたはレジストリパスに保存されている設定にアクセスしたい場合があります。あなたが直接INIファイルを読みたい場合は、すべてのプラットフォームでは、あなたが使用することができ&lt;a href=&quot;qsettings&quot;&gt;QSettingsの&lt;/a&gt;最初の引数としてファイル名を取るコンストラクタをし、合格&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: IniFormatを&lt;/a&gt; 2番目の引数として。例えば：</target>
        </trans-unit>
        <trans-unit id="4f9138576987dbd17800d1827d193450f95ece67" translate="yes" xml:space="preserve">
          <source>Sometimes you do want to access settings stored in a specific file or registry path. On all platforms, if you want to read an INI file directly, you can use the QSettings constructor that takes a file name as first argument and pass &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::IniFormat&lt;/a&gt; as second argument. For example:</source>
          <target state="translated">特定のファイルまたはレジストリパスに保存されている設定にアクセスしたい場合があります。すべてのプラットフォームで、INIファイルを直接読み取りたい場合は、ファイル名を最初の引数として受け取り、&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: IniFormat&lt;/a&gt;を2番目の引数として渡すQSettingsコンストラクターを使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="8190ac0550604b34c4fc44b3937b67647664a7d7" translate="yes" xml:space="preserve">
          <source>Sometimes you may need to use C++ to extend your custom style. There are two ways to expose such types to QML:</source>
          <target state="translated">カスタムスタイルを拡張するために C++を使う必要がある場合があります。このような型をQMLに公開するには、以下の2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="306fced3104bee05c79e9200551e0c9d882f9086" translate="yes" xml:space="preserve">
          <source>Sometimes you may want to cross reference whether places from one manager match those from another manager. Such a situation may arise where one manager provides read-only access to places (origin manager) while another second r/w manager (destination manager) is used to save selected favorites from the first. During a search of the origin manager we may want to know which ones have been 'favorited' into the destination manager and perhaps display a customized favorite name rather than the original name.</source>
          <target state="translated">あるマネージャーの場所が別のマネージャーの場所と一致するかどうかを相互参照したい場合があります。このような場合、あるマネージャーが場所への読み取り専用アクセスを提供している(オリジンマネージャー)一方で、別の2つ目のr/wマネージャー(デスティネーションマネージャー)が1つ目のマネージャーから選択したお気に入りを保存するために使用されている場合があります。元のマネージャーを検索している間に、どのマネージャーが「お気に入り」に登録されているのかを目的地のマネージャーに表示したり、オリジナルの名前ではなくカスタマイズされたお気に入り名を表示したりしたい場合があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="b8134bcbf8e68ea8aca68918bb1a095bdb8ac464" translate="yes" xml:space="preserve">
          <source>Sometimes you'll want to create a &quot;one-off&quot; look for a specific part of your UI, and use a complete style everywhere else. Perhaps you're happy with the style you're using, but there's a certain button that has some special significance.</source>
          <target state="translated">UIの特定の部分のために「一点もの」のルックを作成し、それ以外の部分には完全なスタイルを使用したいと思うこともあるでしょう。今使っているスタイルに満足しているかもしれませんが、特別な意味を持つボタンがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="f9d3bf044554f598e2a8dd2d4bf0b2fb90448e18" translate="yes" xml:space="preserve">
          <source>Sometimes, a font will apply complex rules to a set of characters in order to display them correctly. In some writing systems, such as Brahmic scripts, this is required in order for the text to be legible, but in e.g. Latin script, it is merely a cosmetic feature. Setting the &lt;code&gt;preferShaping&lt;/code&gt; property to false will disable all such features when they are not required, which will improve performance in most cases.</source>
          <target state="translated">時々、フォントはそれらを正しく表示するために文字のセットに複雑なルールを適用します。Brahmicスクリプトなどの一部の書記体系では、テキストを読みやすくするためにこれが必要ですが、たとえばラテン語のスクリプトでは、これは単なる表面的な機能です。 &lt;code&gt;preferShaping&lt;/code&gt; プロパティをfalseに設定すると、そのような機能が不要なときにすべて無効になり、ほとんどの場合パフォーマンスが向上します。</target>
        </trans-unit>
        <trans-unit id="2311d83d551d6f742277be0e6e3f4ede1d36fc34" translate="yes" xml:space="preserve">
          <source>Sometimes, a font will apply complex rules to a set of characters in order to display them correctly. In some writing systems, such as Brahmic scripts, this is required in order for the text to be legible, but in e.g. Latin script, it is merely a cosmetic feature. The PreferNoShaping flag will disable all such features when they are not required, which will improve performance in most cases (since Qt 5.10).</source>
          <target state="translated">フォントは、文字を正しく表示するために、文字の集合に複雑な規則を適用することがあります。バラ文字のようないくつかの文字システムでは、これはテキストを読みやすくするために必要ですが、例えばラテン文字のようなものでは、これは単なる化粧品的な機能に過ぎません。PreferNoShaping フラグは、そのような機能が不要な場合にはすべて無効にします。</target>
        </trans-unit>
        <trans-unit id="f647c1bc4eb8ef3ff4b73561406016c316d8168e" translate="yes" xml:space="preserve">
          <source>Sometimes, it can be inconvenient to create a new file for a type, for instance when reusing a small delegate in multiple views. If you don't actually need to expose the type, but only need to create an instance, &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; is an option. But if you want to declare properties with the component types, or if you want to use it in multiple files, &lt;code&gt;Component&lt;/code&gt; is not an option. In that case, you can use</source>
          <target state="translated">Sometimes, it can be inconvenient to create a new file for a type, for instance when reusing a small delegate in multiple views. If you don't actually need to expose the type, but only need to create an instance, &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; is an option. But if you want to declare properties with the component types, or if you want to use it in multiple files, &lt;code&gt;Component&lt;/code&gt; is not an option. In that case, you can use</target>
        </trans-unit>
        <trans-unit id="4b018afca93f2eabe47d7926d743b924ee008195" translate="yes" xml:space="preserve">
          <source>Sometimes, it is necessary to build a project in both debug and release modes. Although the &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; variable can hold both &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; options, only the option that is specified last is applied.</source>
          <target state="translated">場合によっては、デバッグモードとリリースモードの両方でプロジェクトをビルドする必要があります。が&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIGの&lt;/a&gt;変数が両方保持することができ &lt;code&gt;debug&lt;/code&gt; と &lt;code&gt;release&lt;/code&gt; オプションを、最後に指定されている唯一のオプションが適用されます。</target>
        </trans-unit>
        <trans-unit id="53e0bfe45d94a3c0e338a6b0244a1d5251d27dee" translate="yes" xml:space="preserve">
          <source>Sometimes, it is necessary to go back more than a single step in the stack. For example, to return to a &quot;main&quot; item or some kind of section item in the application. In such cases, it is possible to specify an item as a parameter for &lt;a href=&quot;qml-qtquick-controls2-stackview#pop-method&quot;&gt;pop()&lt;/a&gt;. This is called an &quot;unwind&quot; operation, where the stack unwinds till the specified item. If the item is not found, stack unwinds until it is left with one item, which becomes the &lt;a href=&quot;qml-qtquick-controls2-stackview#currentItem-prop&quot;&gt;currentItem&lt;/a&gt;. To explicitly unwind to the bottom of the stack, it is recommended to use &lt;a href=&quot;qml-qtquick-controls2-stackview#pop-method&quot;&gt;pop(null)&lt;/a&gt;, although any non-existent item will do.</source>
          <target state="translated">場合によっては、スタックの1つ以上のステップに戻る必要があります。たとえば、アプリケーションの「メイン」アイテムまたは何らかのセクションアイテムに戻る場合。このような場合、&lt;a href=&quot;qml-qtquick-controls2-stackview#pop-method&quot;&gt;pop（）の&lt;/a&gt;パラメーターとしてアイテムを指定することができます。これは「巻き戻し」操作と呼ばれ、スタックは指定されたアイテムまで巻き戻されます。アイテムが見つからない場合、スタックは1つのアイテムが残されるまで巻き戻し、それが&lt;a href=&quot;qml-qtquick-controls2-stackview#currentItem-prop&quot;&gt;currentItemになり&lt;/a&gt;ます。スタックの一番下まで明示的に戻すには、存在しないアイテムでも可能ですが、&lt;a href=&quot;qml-qtquick-controls2-stackview#pop-method&quot;&gt;pop（null）&lt;/a&gt;を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="bccca815ca684ed3318fc31beb45448813ad5c33" translate="yes" xml:space="preserve">
          <source>Sometimes, you will want to reimplement this function to provide special focus handling for your widget and its subwidgets. For example, a web browser might reimplement it to move its current active link forward or backward, and call the base implementation only when it reaches the last or first link on the page.</source>
          <target state="translated">ウィジェットとそのサブウィジェットに特別なフォーカス処理を提供するために、この関数を再実装したいと思うことがあるでしょう。例えば、ウェブブラウザは現在のアクティブなリンクを前後に移動させるためにこの関数を再実装し、ページ上の最後のリンクや最初のリンクに到達したときだけベースの実装を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="bc30f6fc7f2003cdaf02b23b8be5a25bed014e36" translate="yes" xml:space="preserve">
          <source>Sometimes, you will want to reimplement this function. For example, a web browser might reimplement it to move its &quot;current active link&quot; forward or backward, and call focusNextPrevChild() only when it reaches the last or first link on the &quot;page&quot;.</source>
          <target state="translated">時には、この関数を再実装したくなることもあるでしょう。例えば、ウェブブラウザはこの関数を再実装して、&quot;現在のアクティブなリンク &quot;を前後に移動させ、&quot;ページ &quot;の最後または最初のリンクに到達したときにのみ focusNextPrevChild()を呼び出すようにすることができます。</target>
        </trans-unit>
        <trans-unit id="8c7511cbd6b9de7211f1dbdcde058c3d8b713353" translate="yes" xml:space="preserve">
          <source>Somewhat dense brush pattern.</source>
          <target state="translated">やや濃密な筆の模様。</target>
        </trans-unit>
        <trans-unit id="3e6ffb1badac59873989892e1ee19947726a4729" translate="yes" xml:space="preserve">
          <source>Somewhat sparse brush pattern.</source>
          <target state="translated">ややまばらな筆の模様。</target>
        </trans-unit>
        <trans-unit id="0c1cca42d3a85a208da3aee1267c4a662210ba10" translate="yes" xml:space="preserve">
          <source>Sonification, such as with user interface sounds</source>
          <target state="translated">ユーザーインターフェース音などのソニフィケーション</target>
        </trans-unit>
        <trans-unit id="7b03c33b50ea6c9b8b0f36112db8b4cc1c436d5d" translate="yes" xml:space="preserve">
          <source>SonificationRole - sonification, such as with user interface sounds.</source>
          <target state="translated">SonificationRole-ユーザーインターフェースのサウンドなどのソニフィケーション。</target>
        </trans-unit>
        <trans-unit id="33f807ae506adddf45a68a46fc68a48cb6932543" translate="yes" xml:space="preserve">
          <source>Sort by file size.</source>
          <target state="translated">ファイルサイズでソートします。</target>
        </trans-unit>
        <trans-unit id="31f274eb3b3a11df8866e1dba5edf40c7410d422" translate="yes" xml:space="preserve">
          <source>Sort by file type (extension).</source>
          <target state="translated">ファイルの種類(拡張子)でソートします。</target>
        </trans-unit>
        <trans-unit id="0106adab56fea71640c976703233c8b8bd823462" translate="yes" xml:space="preserve">
          <source>Sort by name.</source>
          <target state="translated">名前でソートします。</target>
        </trans-unit>
        <trans-unit id="acf3d4b5d5b341472753f7fc9f5a8b37ddb3ba37" translate="yes" xml:space="preserve">
          <source>Sort by time (modification time).</source>
          <target state="translated">時間(修正時間)でソートします。</target>
        </trans-unit>
        <trans-unit id="1530ee895394ace727ee136a26e0ca7af87fd3d4" translate="yes" xml:space="preserve">
          <source>Sort case-insensitively.</source>
          <target state="translated">ケースインセンシティブに並べ替えます。</target>
        </trans-unit>
        <trans-unit id="77a6e3d416985dfeddd28a36402761f2e45c31cb" translate="yes" xml:space="preserve">
          <source>Sort items appropriately using the current locale settings.</source>
          <target state="translated">現在のロケール設定を用いて、項目を適切に並べ替えます。</target>
        </trans-unit>
        <trans-unit id="f9f1d3c92e7684de84b9ac9edc0687b477dbd7e7" translate="yes" xml:space="preserve">
          <source>Sort the model items in the</source>
          <target state="translated">のモデル項目をソートします。</target>
        </trans-unit>
        <trans-unit id="a9b021df2d2d4ff285c19f87c420672d1c213858" translate="yes" xml:space="preserve">
          <source>SortPolicy</source>
          <target state="translated">SortPolicy</target>
        </trans-unit>
        <trans-unit id="078a0cc101380a67f5d85d548186ac4ee7102869" translate="yes" xml:space="preserve">
          <source>SortPolicy (QML type)</source>
          <target state="translated">SortPolicy(QML 型</target>
        </trans-unit>
        <trans-unit id="c095bdcbd2c652110d738f0e83684e6dd751931c" translate="yes" xml:space="preserve">
          <source>SortPolicy QML Type</source>
          <target state="translated">SortPolicy QML 型</target>
        </trans-unit>
        <trans-unit id="d5ec755befa68233e8f16d1f2753b8a1056692c7" translate="yes" xml:space="preserve">
          <source>SortPolicy.sortTypes</source>
          <target state="translated">SortPolicy.sortTypes</target>
        </trans-unit>
        <trans-unit id="378e9e163b7eecefadb4415cae533096e336c4ab" translate="yes" xml:space="preserve">
          <source>Sorting</source>
          <target state="translated">Sorting</target>
        </trans-unit>
        <trans-unit id="0686922a433c6087d7ca0237479414d093bf8878" translate="yes" xml:space="preserve">
          <source>Sorting is performed using the STL's std::sort() algorithm, which averages &lt;a href=&quot;containers#linear-logarithmic-time&quot;&gt;linear-logarithmic time&lt;/a&gt;, i.e. O(</source>
          <target state="translated">並べ替えは、STLのstd :: sort（）アルゴリズムを使用して実行されます。これは、&lt;a href=&quot;containers#linear-logarithmic-time&quot;&gt;線形対数時間&lt;/a&gt;、つまりO（</target>
        </trans-unit>
        <trans-unit id="ea8a4b203c7a70438b72d257427b2cfcb7f268ca" translate="yes" xml:space="preserve">
          <source>Sorting order</source>
          <target state="translated">並び替え順</target>
        </trans-unit>
        <trans-unit id="b3060f67716fae4a49a96bc8898fdc04ca016747" translate="yes" xml:space="preserve">
          <source>Sorting order in CBOR is defined in RFC 7049 {https://tools.ietf.org/html/rfc7049#section-3.9}{section 3.9}, which discusses the sorting of keys in a map when following the Canonical encoding. According to the specification, &quot;sorting is performed on the bytes of the representation of the key data items&quot; and lists as consequences that:</source>
          <target state="translated">CBORにおけるソート順はRFC 7049 {https://tools.ietf.org/html/rfc7049#section-3.9}{セクション3.9}で定義されており、カノニカルエンコーディングに従う場合の マップ内の鍵のソートについて議論されている。仕様によると、「ソートはキーデータ項目の表現のバイトに対して実行される」とし、 その結果として以下のことを列挙している。</target>
        </trans-unit>
        <trans-unit id="bc5690c21a2916044c58c7e48392b0230dea8abc" translate="yes" xml:space="preserve">
          <source>Sorts all the items in the list widget according to the specified</source>
          <target state="translated">指定された</target>
        </trans-unit>
        <trans-unit id="f7712a388e6b19f3c58175d39d3ae9d114180428" translate="yes" xml:space="preserve">
          <source>Sorts all the rows in the table widget based on</source>
          <target state="translated">に基づいてテーブルウィジェットのすべての行をソートします。</target>
        </trans-unit>
        <trans-unit id="d74233f49d78ea6182ce03744e3fb65b28e61525" translate="yes" xml:space="preserve">
          <source>Sorts the children of the item using the given</source>
          <target state="translated">与えられた</target>
        </trans-unit>
        <trans-unit id="8a938bda144fa3bae1c6aacb8fc851bcc14f49af" translate="yes" xml:space="preserve">
          <source>Sorts the data by</source>
          <target state="translated">でデータをソートします。</target>
        </trans-unit>
        <trans-unit id="37ab1ba326e28c2aa2912b0be86dd0ea0eff1296" translate="yes" xml:space="preserve">
          <source>Sorts the items in the widget in the specified</source>
          <target state="translated">ウィジェット内のアイテムを指定された</target>
        </trans-unit>
        <trans-unit id="28bc750b5ffc166820f6d1e92f83667257296dcc" translate="yes" xml:space="preserve">
          <source>Sorts the list of strings in ascending order. If</source>
          <target state="translated">文字列のリストを昇順にソートします。もし</target>
        </trans-unit>
        <trans-unit id="af46af9526996dff169ffd9859eac5fc445335ed" translate="yes" xml:space="preserve">
          <source>Sorts the model by</source>
          <target state="translated">でモデルをソートします。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
