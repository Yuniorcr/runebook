<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="59bdf46bb66b9aaa5202215399f2d230657e58c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworkrequest#RedirectPolicy-enum&quot;&gt;QNetworkRequest::RedirectPolicy&lt;/a&gt; QNetworkAccessManager::redirectPolicy() const</source>
          <target state="translated">&lt;a href=&quot;qnetworkrequest#RedirectPolicy-enum&quot;&gt;QNetworkRequest :: RedirectPolicy&lt;/a&gt; QNetworkAccessManager :: redirectPolicy（）const</target>
        </trans-unit>
        <trans-unit id="23141eecdf05233d7faa0e12d7cec7a414aba8aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt; is the central class for managing roaming related issues.</source>
          <target state="translated">&lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt;は、ローミング関連の問題を管理するための中心的なクラスです。</target>
        </trans-unit>
        <trans-unit id="df4e3a73cd566676333921893430eb6ab66c967a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt; provides two types of use cases. It enables the monitoring of physical network interfaces and management of network sessions. Network sessions are a common feature on mobile devices where multiple applications can request network sessions as they see fit. The system consolidates and tracks active network sessions for the same network interface by maintaining the link layer connections until the last session has been closed. The subsequent table lists the major &lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt; functions and how they fit into the session and hardware management categories:</source>
          <target state="translated">&lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt;は2種類のユースケースを提供します。物理ネットワークインターフェイスの監視とネットワークセッションの管理を可能にします。ネットワークセッションは、複数のアプリケーションが適切と思われるネットワークセッションを要求できるモバイルデバイスの一般的な機能です。システムは、最後のセッションが閉じられるまでリンク層接続を維持することにより、同じネットワークインターフェイスのアクティブなネットワークセッションを統合して追跡します。次の表は、主要な&lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt;関数と、それらがセッションおよびハードウェア管理のカテゴリにどのように適合するかを示しています。</target>
        </trans-unit>
        <trans-unit id="f42b961e63917d40896a2eacf64c16177f85af8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt; supports session management within the same process and depending on the platform's capabilities may support out-of-process sessions. If the same network configuration is used by multiple open sessions the underlying network interface is only terminated once the last session has been closed.</source>
          <target state="translated">&lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt;は同じプロセス内のセッション管理をサポートし、プラットフォームの機能によってはアウトプロセスセッションをサポートする場合があります。同じネットワーク構成が複数の開いているセッションで使用されている場合、基になるネットワークインターフェイスは、最後のセッションが閉じられたときにのみ終了します。</target>
        </trans-unit>
        <trans-unit id="3c18412e179438ea3be421f62cb9fb80bff2e449" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#SessionError-enum&quot;&gt;QNetworkSession::SessionError&lt;/a&gt; QNetworkSession::error() const</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#SessionError-enum&quot;&gt;QNetworkSession :: SessionError&lt;/a&gt; QNetworkSession :: error（）const</target>
        </trans-unit>
        <trans-unit id="46f5f51daa1a0ca131312d38046c273e3935a695" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#State-enum&quot;&gt;QNetworkSession::State&lt;/a&gt; QNetworkSession::state() const</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#State-enum&quot;&gt;QNetworkSession :: State&lt;/a&gt; QNetworkSession :: state（）const</target>
        </trans-unit>
        <trans-unit id="2e6c5df93f8b22fe35cfe0f493c549fea2ba6b82" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#UsagePolicy-enum&quot;&gt;QNetworkSession::UsagePolicies&lt;/a&gt; QNetworkSession::usagePolicies() const</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#UsagePolicy-enum&quot;&gt;QNetworkSession :: UsagePolicies&lt;/a&gt; QNetworkSession :: usagePolicies（）const</target>
        </trans-unit>
        <trans-unit id="ea155390774aa4974281579b378feb46ee1d479e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#accept&quot;&gt;QNetworkSession::accept&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#accept&quot;&gt;QNetworkSession::accept&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="762754d00e5e8bee0c91adcf682085cd66f73910" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#activeTime&quot;&gt;QNetworkSession::activeTime&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#activeTime&quot;&gt;QNetworkSession::activeTime&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="74b24c1bc3ccb09c456ed4528657b5a835159af5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#bytesReceived&quot;&gt;QNetworkSession::bytesReceived&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#bytesReceived&quot;&gt;QNetworkSession::bytesReceived&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="c0c92517ea4077191f28dfc69bee9abeec87cc60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#bytesWritten&quot;&gt;QNetworkSession::bytesWritten&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#bytesWritten&quot;&gt;QNetworkSession::bytesWritten&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="8021fa8e264b45dca375c74a894892a435eb8d3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#close&quot;&gt;QNetworkSession::close&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#close&quot;&gt;QNetworkSession::close&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="bd44a70eb697006303a73706dae957f2c3cdb448" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#closed&quot;&gt;QNetworkSession::closed&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#closed&quot;&gt;QNetworkSession::closed&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="7d28b0d6abccfbe9cbd3a107fa2836d9e9bea4c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#ignore&quot;&gt;QNetworkSession::ignore&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#ignore&quot;&gt;QNetworkSession::ignore&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b7bdf94a1738401ea9bf5299a98f8dd35611bbf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#interface&quot;&gt;QNetworkSession::interface&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#interface&quot;&gt;QNetworkSession::interface&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="f98acc1ac22ee615bfd645f682cdacbd413dc0ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#isOpen&quot;&gt;QNetworkSession::isOpen&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#isOpen&quot;&gt;QNetworkSession::isOpen&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="39af18d8d1c7a6d955d24c5fbde34dbad281500b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#migrate&quot;&gt;QNetworkSession::migrate&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#migrate&quot;&gt;QNetworkSession::migrate&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b35a05f00c46247fb3b942eda2fea1d3d1f87499" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#open&quot;&gt;QNetworkSession::open&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#open&quot;&gt;QNetworkSession::open&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="ff49a32182ac6ff4449474f96521820671ae12c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#opened&quot;&gt;QNetworkSession::opened&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#opened&quot;&gt;QNetworkSession::opened&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="8bdfddc23059aed227f235c6db1ce487aeec9608" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#reject&quot;&gt;QNetworkSession::reject&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#reject&quot;&gt;QNetworkSession::reject&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e0e3cbf817b3bb36971c1b74d89ece82d734a727" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#state&quot;&gt;QNetworkSession::state&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#state&quot;&gt;QNetworkSession::state&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="239ed9e891717bbc3cd35ab4d4df5c349bb85f44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#stateChanged&quot;&gt;QNetworkSession::stateChanged&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#stateChanged&quot;&gt;QNetworkSession::stateChanged&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="92a86f6699d5e00946deaa81bed1594450bdafa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnetworksession#stop&quot;&gt;QNetworkSession::stop&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qnetworksession#stop&quot;&gt;QNetworkSession::stop&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="45223ec89db698265c9d6d441b98de414b3f12e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnmeapositioninfosource&quot;&gt;QNmeaPositionInfoSource&lt;/a&gt; supports reporting the accuracy of the horizontal and vertical position. To enable position accuracy reporting an estimate of the User Equivalent Range Error associated with the NMEA source must be set with &lt;a href=&quot;qnmeapositioninfosource#setUserEquivalentRangeError&quot;&gt;setUserEquivalentRangeError&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qnmeapositioninfosource&quot;&gt;QNmeaPositionInfoSource&lt;/a&gt;は、水平位置と垂直位置の精度の報告をサポートしています。位置精度レポートを有効にするには、NMEAソースに関連付けられたユーザー等価範囲エラーの推定値を&lt;a href=&quot;qnmeapositioninfosource#setUserEquivalentRangeError&quot;&gt;setUserEquivalentRangeError&lt;/a&gt;（）で設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f7b39bb314e42351b9ed794ff1f6073b3853de1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qnmeapositioninfosource#UpdateMode-enum&quot;&gt;QNmeaPositionInfoSource::UpdateMode&lt;/a&gt; QNmeaPositionInfoSource::updateMode() const</source>
          <target state="translated">&lt;a href=&quot;qnmeapositioninfosource#UpdateMode-enum&quot;&gt;QNmeaPositionInfoSource :: UpdateMode&lt;/a&gt; QNmeaPositionInfoSource :: updateMode（）const</target>
        </trans-unit>
        <trans-unit id="4886edf605cd1b8143b4d4a79e2b6e36d97e5987" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qoauth1&quot;&gt;QOAuth1&lt;/a&gt; provides a method for clients to access server resources on behalf of a resource owner (such as a different client or an end-user). It also provides a process for end-users to authorize third-party access to their server resources without sharing their credentials (typically, a username and password pair), using user-agent redirections.</source>
          <target state="translated">&lt;a href=&quot;qoauth1&quot;&gt;QOAuth1&lt;/a&gt;は、クライアントがリソース所有者（別のクライアントやエンドユーザーなど）に代わってサーバーリソースにアクセスするための方法を提供します。また、ユーザーエージェントリダイレクトを使用して、資格情報（通常はユーザー名とパスワードのペア）を共有せずに、エンドユーザーがサーバーリソースへのサードパーティアクセスを承認するプロセスも提供します。</target>
        </trans-unit>
        <trans-unit id="fcdbc80775d144e382c846aa836055a83a3e881f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qoauth1&quot;&gt;QOAuth1&lt;/a&gt; uses tokens to represent the authorization granted to the client by the resource owner. Typically, token credentials are issued by the server at the resource owner's request, after authenticating the resource owner's identity (usually using a username and password).</source>
          <target state="translated">&lt;a href=&quot;qoauth1&quot;&gt;QOAuth1&lt;/a&gt;はトークンを使用して、リソース所有者によってクライアントに付与された承認を表します。通常、トークンの資格情報は、リソース所有者のIDを認証した後（通常はユーザー名とパスワードを使用）、サーバーがリソース所有者の要求に応じて発行します。</target>
        </trans-unit>
        <trans-unit id="6f9444e156875f1f5114633fdff3582f048e0f23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qoauth1#SignatureMethod-enum&quot;&gt;QOAuth1::SignatureMethod&lt;/a&gt; QOAuth1::signatureMethod() const</source>
          <target state="translated">&lt;a href=&quot;qoauth1#SignatureMethod-enum&quot;&gt;QOAuth1 :: SignatureMethod&lt;/a&gt; QOAuth1 :: signatureMethod（）const</target>
        </trans-unit>
        <trans-unit id="dacd4c72db3b9c75523cda43181ff7e785af1de9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qoauth1signature#HttpRequestMethod-enum&quot;&gt;QOAuth1Signature::HttpRequestMethod&lt;/a&gt; QOAuth1Signature::httpRequestMethod() const</source>
          <target state="translated">&lt;a href=&quot;qoauth1signature#HttpRequestMethod-enum&quot;&gt;QOAuth1Signature :: HttpRequestMethod&lt;/a&gt; QOAuth1Signature :: httpRequestMethod（）const</target>
        </trans-unit>
        <trans-unit id="7b43823d6c62d373d95a4525136cd8df6f15ac0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qoauth1signature#QOAuth1Signature&quot;&gt;QOAuth1Signature&lt;/a&gt; &amp;amp;QOAuth1Signature::operator=(&lt;a href=&quot;qoauth1signature#QOAuth1Signature&quot;&gt;QOAuth1Signature&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qoauth1signature#QOAuth1Signature&quot;&gt;QOAuth1Signature&lt;/a&gt;＆QOAuth1Signature :: operator =（&lt;a href=&quot;qoauth1signature#QOAuth1Signature&quot;&gt;QOAuth1Signature&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="17c6d909583c0c62657efd58d5cfc0ae546c3e89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="83902dddf08f234b4238ccf88afcf8d1e0cb6d5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QAccessibleEvent::object() const</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QAccessibleEvent :: object（）const</target>
        </trans-unit>
        <trans-unit id="d6333e805f74acbe69f086e6848871e67d72af34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QChildEvent::child() const</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QChildEvent :: child（）const</target>
        </trans-unit>
        <trans-unit id="5e19acac221160f2d058f50fa21413c4ad4a9330" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QDBusConnection::objectRegisteredAt(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QDBusConnection :: objectRegisteredAt（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="cfb366a08bd1e1ee2c019c78b33759245b4a9fb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QDropEvent::source() const</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QDropEvent :: source（）const</target>
        </trans-unit>
        <trans-unit id="9eaa2af113ecfe4a2188e8e4e7b092f6491e4ac1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QJSValue::toQObject() const</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QJSValue :: toQObject（）const</target>
        </trans-unit>
        <trans-unit id="60cc4990c647373ca1ebc937eda02c03cac7daf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QMetaObject::newInstance(&lt;a href=&quot;qgenericargument&quot;&gt;QGenericArgument&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QMetaObject :: newInstance（&lt;a href=&quot;qgenericargument&quot;&gt;QGenericArgument&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8544ad081f9c23830c9b3267373c8275f8d8172d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QNetworkRequest::originatingObject() const</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QNetworkRequest :: originatingObject（）const</target>
        </trans-unit>
        <trans-unit id="3c6e132f58e8ea151358df3f67eb21bf657bb469" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QPointerEvent::exclusiveGrabber(const &lt;a href=&quot;qeventpoint&quot;&gt;QEventPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QPointerEvent :: ExclusiveGrabber（const &lt;a href=&quot;qeventpoint&quot;&gt;QEventPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7d82d7ed78636ebd6abf7493d5a30aede00525b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QQmlError::object() const</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QQmlError :: object（）const</target>
        </trans-unit>
        <trans-unit id="b21369d481b0a55dc9af3e0aa44aaf3a09ff9899" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QQmlIncubator::object() const</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QQmlIncubator :: object（）const</target>
        </trans-unit>
        <trans-unit id="945721b34b89317533675b65cc140d112a559d63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QQmlListReference::at(int</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QQmlListReference :: at（int</target>
        </trans-unit>
        <trans-unit id="ac22c495acaf87c03078f130113925af4be8e6ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QQmlListReference::at(qsizetype</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QQmlListReference::at(qsizetype</target>
        </trans-unit>
        <trans-unit id="f949e483613da0234b578de4ef24e5cc9f15ada9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QQmlListReference::object() const</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QQmlListReference :: object（）const</target>
        </trans-unit>
        <trans-unit id="f4c46cc1c7f5cfb87cbec7b635f73bca9e330031" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QQmlProperty::object() const</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QQmlProperty :: object（）const</target>
        </trans-unit>
        <trans-unit id="e2a69c38c14313698fd836d6a2377f8e29383f91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QStaticPlugin::instance()</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QStaticPlugin :: instance（）</target>
        </trans-unit>
        <trans-unit id="416697975ee6b4a9f882af942998b5ea510b3452" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QStyleOption::styleObject</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QStyleOption :: styleObject</target>
        </trans-unit>
        <trans-unit id="2b931b39d0fee795d79ce7974bfaa23e0eddfe90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *QTouchEvent::target() const</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; * QTouchEvent :: target（）const</target>
        </trans-unit>
        <trans-unit id="3878e34115d8164d342cd1f6f389b800a2c89264" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; Object</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;オブジェクト</target>
        </trans-unit>
        <trans-unit id="3ec9000f42ca0c095d87115d4d0d6bb482cd0e48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qabstractextensionfactory&quot;&gt;QAbstractExtensionFactory&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;および&lt;a href=&quot;qabstractextensionfactory&quot;&gt;QAbstractExtensionFactory&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d95044136618a604725790c509b81a29cd95c483" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qabstractextensionmanager&quot;&gt;QAbstractExtensionManager&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qabstractextensionmanager&quot;&gt;QAbstractExtensionManager&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64fdbd12903ccf150537599e13fd232bc0baccb5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a60a1e840204c58070c12722fca6a431feeb0ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdbuspendingcall&quot;&gt;QDBusPendingCall&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qdbuspendingcall&quot;&gt;QDBusPendingCall&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ea66dc5cead4443f096dec9346c6239fcd13d23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d975adc94126ca0057aff1dab30577ed3db98d8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qlayoutitem&quot;&gt;QLayoutItem&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qlayoutitem&quot;&gt;QLayoutItem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81c0ca9f3f7c762de42296ac25eb68a6b7922b3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3aa88480c0e15a71ab137687fca51853e0e7213d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qmediabindableinterface&quot;&gt;QMediaBindableInterface&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;および&lt;a href=&quot;qmediabindableinterface&quot;&gt;QMediaBindableInterface&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="71ce06448a152088718203427d9997a2b4472a1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="903a957bec6027b9e81f56136e78749302bd2741" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b4ca29e623f954080b4097492d8e95a1d25aecd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="347f4439e1eba96d94b6a3401f3bcf7a5d88f318" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qremoteobjectpendingcall&quot;&gt;QRemoteObjectPendingCall&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;および&lt;a href=&quot;qremoteobjectpendingcall&quot;&gt;QRemoteObjectPendingCall&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1eb91fc12808fa22a9eb657ecb1cb00f24856f6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qsurface&quot;&gt;QSurface&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qsurface&quot;&gt;QSurface&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="37b29c6a819893f038273590f819fabf7d730a18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QAudioSystemFactoryInterface</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;とQAudioSystemFactoryInterface</target>
        </trans-unit>
        <trans-unit id="3c8ce4d0b80eddf25be8088facb7d6e87c752492" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QIODeviceBase</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;とQIODeviceBase</target>
        </trans-unit>
        <trans-unit id="e03e89b101b75dc8441793bf93948088e9dd1a87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QMediaServiceProviderFactoryInterface</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;およびQMediaServiceProviderFactoryInterface</target>
        </trans-unit>
        <trans-unit id="495a34ba41dd837f08a231496b6036d7f3ec06d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and all of its subclasses are not thread-safe. This includes the entire event delivery system. It is important to keep in mind that the event loop may be delivering events to your &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass while you are accessing the object from another thread.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;とそのすべてのサブクラスはスレッドセーフではありません。これには、イベント配信システム全体が含まれます。別のスレッドからオブジェクトにアクセスしているときに、イベントループが&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;サブクラスにイベントを配信している可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="77f1e09e397a3099cf828c19fccdcfc9ec1152fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; has neither a copy constructor nor an assignment operator. This is by design. Actually, they are declared, but in a &lt;code&gt;private&lt;/code&gt; section with the macro &lt;a href=&quot;qobject#Q_DISABLE_COPY&quot;&gt;Q_DISABLE_COPY&lt;/a&gt;(). In fact, all Qt classes derived from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; (direct or indirect) use this macro to declare their copy constructor and assignment operator to be private. The reasoning is found in the discussion on &lt;a href=&quot;object#identity-vs-value&quot;&gt;Identity vs Value&lt;/a&gt; on the Qt &lt;a href=&quot;object#&quot;&gt;Object Model&lt;/a&gt; page.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObjectに&lt;/a&gt;は、コピーコンストラクターも代入演算子もありません。これは仕様によるものです。実際には、それらは宣言されていますが、マクロ&lt;a href=&quot;qobject#Q_DISABLE_COPY&quot;&gt;Q_DISABLE_COPY&lt;/a&gt;（）を含む &lt;code&gt;private&lt;/code&gt; セクション内にあります。実際、&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;（直接または間接）から派生したすべてのQtクラスはこのマクロを使用して、コピーコンストラクターと代入演算子をプライベートとして宣言します。推論は、Qt &lt;a href=&quot;object#&quot;&gt;オブジェクトモデル&lt;/a&gt;ページの&lt;a href=&quot;object#identity-vs-value&quot;&gt;IDと値の&lt;/a&gt;説明にあります。</target>
        </trans-unit>
        <trans-unit id="6e78557d6e841a9307e3c99dd7a145cd90873f46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is reentrant. Most of its non-GUI subclasses, such as &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;, &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; and &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;, are also reentrant, making it possible to use these classes from multiple threads simultaneously. Note that these classes are designed to be created and used from within a single thread; creating an object in one thread and calling its functions from another thread is not guaranteed to work. There are three constraints to be aware of:</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;は再入可能です。など、その非GUIサブクラスのほとんどは&lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;、&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;、&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;と&lt;a href=&quot;qprocess&quot;&gt;QProcessは&lt;/a&gt;、またリエントラントあり、それが可能同時に複数のスレッドからこれらのクラスを使用すること。これらのクラスは、単一のスレッド内から作成および使用されるように設計されていることに注意してください。あるスレッドでオブジェクトを作成し、別のスレッドからその関数を呼び出すことは、動作することが保証されていません。注意すべき3つの制約があります。</target>
        </trans-unit>
        <trans-unit id="0f5e4537200ab2a48df29722152a181e1824279c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is reentrant. Most of its non-GUI subclasses, such as &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;, &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; and &lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt;, are also reentrant, making it possible to use these classes from multiple threads simultaneously. Note that these classes are designed to be created and used from within a single thread; creating an object in one thread and calling its functions from another thread is not guaranteed to work. There are three constraints to be aware of:</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;は再入可能です。など、その非GUIサブクラスのほとんどは&lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;、&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;、&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;と&lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcessは&lt;/a&gt;、またリエントラントあり、それが可能同時に複数のスレッドからこれらのクラスを使用すること。これらのクラスは、単一のスレッド内から作成および使用するように設計されていることに注意してください。あるスレッドでオブジェクトを作成し、別のスレッドからその関数を呼び出すことは、動作することが保証されていません。注意すべき3つの制約があります。</target>
        </trans-unit>
        <trans-unit id="effc0398aa6a78b36296654ef90dd30e229f451d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is the heart of the Qt &lt;a href=&quot;object#&quot;&gt;Object Model&lt;/a&gt;. The central feature in this model is a very powerful mechanism for seamless object communication called &lt;a href=&quot;signalsandslots#&quot;&gt;signals and slots&lt;/a&gt;. You can connect a signal to a slot with &lt;a href=&quot;qobject#connect&quot;&gt;connect&lt;/a&gt;() and destroy the connection with &lt;a href=&quot;qobject#disconnect&quot;&gt;disconnect&lt;/a&gt;(). To avoid never ending notification loops you can temporarily block signals with &lt;a href=&quot;qobject#blockSignals&quot;&gt;blockSignals&lt;/a&gt;(). The protected functions &lt;a href=&quot;qobject#connectNotify&quot;&gt;connectNotify&lt;/a&gt;() and &lt;a href=&quot;qobject#disconnectNotify&quot;&gt;disconnectNotify&lt;/a&gt;() make it possible to track connections.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;はQt &lt;a href=&quot;object#&quot;&gt;オブジェクトモデルの中心&lt;/a&gt;です。このモデルの中心的な機能は、&lt;a href=&quot;signalsandslots#&quot;&gt;信号とスロット&lt;/a&gt;と呼ばれるシームレスなオブジェクト通信のための非常に強力なメカニズムです。&lt;a href=&quot;qobject#connect&quot;&gt;connect&lt;/a&gt;（）でシグナルをスロットに接続し、&lt;a href=&quot;qobject#disconnect&quot;&gt;disconnect&lt;/a&gt;（）で接続を破棄できます。通知ループが終了しないようにするには、&lt;a href=&quot;qobject#blockSignals&quot;&gt;blockSignals&lt;/a&gt;（）を使用して一時的に信号をブロックできます。保護された関数&lt;a href=&quot;qobject#connectNotify&quot;&gt;connectNotify&lt;/a&gt;（）および&lt;a href=&quot;qobject#disconnectNotify&quot;&gt;disconnectNotify&lt;/a&gt;（）により、接続の追跡が可能になります。</target>
        </trans-unit>
        <trans-unit id="b49e3a08084ab5b7da3653a7c25b6ee211ca2308" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; parent</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;親</target>
        </trans-unit>
        <trans-unit id="b99e68d86c420c3712dff73d66baeef0eb22b3bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;*</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;*</target>
        </trans-unit>
        <trans-unit id="ae5ed9a3ba289a811084eadc4e9e21ad5dcdf2b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;* example:</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *の例：</target>
        </trans-unit>
        <trans-unit id="b782405ad8f9f7fd9393164e35eccae132f33036" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, the base class of all Qt objects, provides the basic timer support in Qt. With &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject::startTimer&lt;/a&gt;(), you start a timer with an interval in milliseconds as argument. The function returns a unique integer timer ID. The timer will now fire at regular intervals until you explicitly call &lt;a href=&quot;qobject#killTimer&quot;&gt;QObject::killTimer&lt;/a&gt;() with the timer ID.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;&lt;/a&gt;すべてのQtオブジェクトの基本クラスであるQObjectは、Qtの基本的なタイマーサポートを提供します。&lt;a href=&quot;qobject#startTimer&quot;&gt;QObject :: startTimer&lt;/a&gt;（）は、引数としてミリ秒単位で間隔でタイマーを起動します。この関数は、一意の整数のタイマーIDを返します。タイマーIDを使用して&lt;a href=&quot;qobject#killTimer&quot;&gt;QObject :: killTimer&lt;/a&gt;（）を明示的に呼び出すまで、タイマーは定期的に起動します。</target>
        </trans-unit>
        <trans-unit id="73473e6b3ea445780b2e27d70dbf49c0a195dcdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, to manage the relationships between parent and child items.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;、親と子のアイテム間の関係を管理します。</target>
        </trans-unit>
        <trans-unit id="fa494da2cd5cbbafda2be7117cf8a2bb1ae1b0ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;, to manage the relationships between parent and child items. These functions control the stacking order of items as well as their ownership.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;、親と子のアイテム間の関係を管理します。これらの関数は、アイテムのスタック順序と所有権を制御します。</target>
        </trans-unit>
        <trans-unit id="ee1e89d8db922a37eb9f96831ccf5323897cf086" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s emits the &lt;a href=&quot;qobject#destroyed&quot;&gt;destroyed()&lt;/a&gt; signal when they are deleted.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;は、削除されるとdestroy &lt;a href=&quot;qobject#destroyed&quot;&gt;（）&lt;/a&gt;シグナルを発行します。</target>
        </trans-unit>
        <trans-unit id="8f561364d3caa56bd15bb595082491127747e385" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObjects&lt;/a&gt; organize themselves in object trees. When you create a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; with another object as parent, it's added to the parent's &lt;a href=&quot;qobject#children&quot;&gt;children()&lt;/a&gt; list, and is deleted when the parent is. It turns out that this approach fits the needs of GUI objects very well. For example, a &lt;a href=&quot;qshortcut&quot;&gt;QShortcut&lt;/a&gt; (keyboard shortcut) is a child of the relevant window, so when the user closes that window, the shortcut is deleted too.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObjects&lt;/a&gt;は、オブジェクトツリーで自分自身を整理します。親として別のオブジェクトを使用して&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;を作成すると、それは親の&lt;a href=&quot;qobject#children&quot;&gt;children（）&lt;/a&gt;リストに追加され、親が存在すると削除されます。このアプローチは、GUIオブジェクトのニーズに非常によく適合していることがわかります。たとえば、&lt;a href=&quot;qshortcut&quot;&gt;QShortcut&lt;/a&gt;（キーボードショートカット）は関連するウィンドウの子であるため、ユーザーがそのウィンドウを閉じると、ショートカットも削除されます。</target>
        </trans-unit>
        <trans-unit id="eb9f812ab7aa5ed3abbcfc0465fe37e460c09d9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject&quot;&gt;QObjects&lt;/a&gt; receive events by having their &lt;a href=&quot;qobject#event&quot;&gt;QObject::event&lt;/a&gt;() function called. The function can be reimplemented in subclasses to customize event handling and add additional event types; &lt;a href=&quot;qwidget#event&quot;&gt;QWidget::event&lt;/a&gt;() is a notable example. By default, events are dispatched to event handlers like &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject::timerEvent&lt;/a&gt;() and &lt;a href=&quot;qwidget#mouseMoveEvent&quot;&gt;QWidget::mouseMoveEvent&lt;/a&gt;(). &lt;a href=&quot;qobject#installEventFilter&quot;&gt;QObject::installEventFilter&lt;/a&gt;() allows an object to intercept events destined for another object.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObjects&lt;/a&gt;は&lt;a href=&quot;qobject#event&quot;&gt;QObject :: event&lt;/a&gt;（）関数が呼び出されることでイベントを受け取ります。関数をサブクラスに再実装して、イベント処理をカスタマイズし、イベントタイプを追加できます。&lt;a href=&quot;qwidget#event&quot;&gt;QWidget :: event&lt;/a&gt;（）は注目すべき例です。デフォルトでは、イベントは&lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject :: timerEvent&lt;/a&gt;（）や&lt;a href=&quot;qwidget#mouseMoveEvent&quot;&gt;QWidget :: mouseMoveEvent&lt;/a&gt;（）などのイベントハンドラーにディスパッチされます。&lt;a href=&quot;qobject#installEventFilter&quot;&gt;QObject :: installEventFilter&lt;/a&gt;（）は、オブジェクトが別のオブジェクトを宛先とするイベントをインターセプトできるようにします。</target>
        </trans-unit>
        <trans-unit id="375a5d54051c7008dbedfe2174440f590d2f1759" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QDrag::source() const</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QDrag :: source（）const</target>
        </trans-unit>
        <trans-unit id="0c4fbf7f16971302adf0fab3872829ee21d10461" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QDrag::target() const</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QDrag :: target（）const</target>
        </trans-unit>
        <trans-unit id="6229bc17b099057dad14e6566e173ac08a2248a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QEventTransition::eventSource() const</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QEventTransition :: eventSource（）const</target>
        </trans-unit>
        <trans-unit id="61baad8970cb4bb5f7ba50da1ab14a29f427de85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QObject::parent() const</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QObject :: parent（）const</target>
        </trans-unit>
        <trans-unit id="abb6e632847dc701e5c0a005e7e8d25449cfb83e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QObjectCleanupHandler::add(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QObjectCleanupHandler :: add（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fcc1f50185deb117c5d4740785d92decbcc3abb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QPluginLoader::instance()</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QPluginLoader :: instance（）</target>
        </trans-unit>
        <trans-unit id="48cdd52c6336083699cb8cf68cb64f9df658b395" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QQmlComponent::createWithInitialProperties(const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QQmlComponent :: createWithInitialProperties（const &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="dd4b53ee540fe4c57b7db912dc328005f1142735" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QQmlContext::contextObject() const</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QQmlContext :: contextObject（）const</target>
        </trans-unit>
        <trans-unit id="62dfb2fb36b02269b5632187677d4f362580bebd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QQmlEngine::qmlAttachedPropertiesObject(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QQmlEngine :: qmlAttachedPropertiesObject（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fac7cee83c214888e164df8fc9c011a5d84f35f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QQmlExpression::scopeObject() const</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QQmlExpression :: scopeObject（）const</target>
        </trans-unit>
        <trans-unit id="dd398d8542bc53a0e48be34b004da31a06172d60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QScroller::target() const</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QScroller :: target（）const</target>
        </trans-unit>
        <trans-unit id="8fac431ddc88cd2661d7174973bfafb2e6c2e554" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QSignalMapper::mapping(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QSignalMapper :: mapping（&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a57237baca89d5c86dcad4a9d3d76f0cd0c6879c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QSignalMapper::mapping(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QSignalMapper :: mapping（&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c8f878dbe3a794beb66e106bbad4b9ca1cdc0faa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QSignalMapper::mapping(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QSignalMapper :: mapping（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="db4c1b80453db6d02a6a6dee7c5abdf415eec4b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QSignalMapper::mapping(int</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QSignalMapper :: mapping（int</target>
        </trans-unit>
        <trans-unit id="0fbbe339406d63518994d45eca995bafa269e23d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *QSignalTransition::senderObject() const</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * QSignalTransition :: senderObject（）const</target>
        </trans-unit>
        <trans-unit id="6b2da6abbdb4c675b822da93b7d52c9d73fcba1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *SignalEvent::sender() const</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * SignalEvent :: sender（）const</target>
        </trans-unit>
        <trans-unit id="8c0e9e5419b915cf6316f22418db57eedd702e51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *WrappedEvent::object() const</source>
          <target state="translated">&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; * WrappedEvent :: object（）const</target>
        </trans-unit>
        <trans-unit id="371bdc63ee031cd430c23345a50eaca8dcbe9f11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; elements are created by using the PROP keyword in the rep file. The syntax is the &lt;code&gt;PROP&lt;/code&gt; keyword followed by the definition enclosed in parentheses, where the definition is the type, the name, and (optionally) a default value or attributes.</source>
          <target state="translated">&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;要素は、repファイルでPROPキーワードを使用して作成されます。構文は、 &lt;code&gt;PROP&lt;/code&gt; キーワードの後に​​括弧で囲まれた定義が続きます。定義は、タイプ、名前、および（オプションで）デフォルト値または属性です。</target>
        </trans-unit>
        <trans-unit id="dd34b6febd873a104f0eceebb23b3a1b1d9378f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;(FooInterface *foo READ foo WRITE setFoo)</source>
          <target state="translated">&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;（FooInterface * foo READ foo WRITE setFoo）</target>
        </trans-unit>
        <trans-unit id="582893601776fabd3a0df538b87649c1d8841232" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;() itself is thread-safe.</source>
          <target state="translated">&lt;a href=&quot;qobject#connect&quot;&gt;QObject :: connect&lt;/a&gt;（）自体はスレッドセーフです。</target>
        </trans-unit>
        <trans-unit id="a5a1d0ebbddb4bb3df1b05dcd8709124a7264a3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#connect&quot;&gt;connect&lt;/a&gt;(const QObject *sender, const char *signal, const QObject *receiver, const char *method, Qt::ConnectionType type)</source>
          <target state="translated">&lt;a href=&quot;qobject#connect&quot;&gt;接続&lt;/a&gt;（const QObject * sender、const char * signal、const QObject * receiver、const char * method、Qt :: ConnectionType type）</target>
        </trans-unit>
        <trans-unit id="1dee00e2ded4dcf5597196de49412c11de39dea2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#connect-2&quot;&gt;connect&lt;/a&gt;(const QObject *sender, const char *signal, const char *method, Qt::ConnectionType type) const</source>
          <target state="translated">&lt;a href=&quot;qobject#connect-2&quot;&gt;接続&lt;/a&gt;（const QObject * sender、const char * signal、const char * method、Qt :: ConnectionType type）const</target>
        </trans-unit>
        <trans-unit id="033048dec02929ea040e2282895110d98dda0c30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#connect-3&quot;&gt;connect&lt;/a&gt;(const QObject *sender, PointerToMemberFunction signal, const QObject *receiver, PointerToMemberFunction method, Qt::ConnectionType type)</source>
          <target state="translated">&lt;a href=&quot;qobject#connect-3&quot;&gt;接続&lt;/a&gt;（const QObject * sender、PointerToMemberFunctionシグナル、const QObject * receiver、PointerToMemberFunctionメソッド、Qt :: ConnectionTypeタイプ）</target>
        </trans-unit>
        <trans-unit id="bd7b9b3a2929e0be1b952338f76491442a49fd42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#connect-4&quot;&gt;connect&lt;/a&gt;(const QObject *sender, PointerToMemberFunction signal, Functor functor)</source>
          <target state="translated">&lt;a href=&quot;qobject#connect-4&quot;&gt;接続&lt;/a&gt;（const QObject * sender、PointerToMemberFunction信号、Functor functor）</target>
        </trans-unit>
        <trans-unit id="4d9511e8c0772d370b72624b2fea83832acbd3d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#connect-5&quot;&gt;connect&lt;/a&gt;(const QObject *sender, PointerToMemberFunction signal, const QObject *context, Functor functor, Qt::ConnectionType type)</source>
          <target state="translated">&lt;a href=&quot;qobject#connect-5&quot;&gt;接続&lt;/a&gt;（const QObject * sender、PointerToMemberFunctionシグナル、const QObject * context、Functor functor、Qt :: ConnectionTypeタイプ）</target>
        </trans-unit>
        <trans-unit id="52d10ec35de47d433cb53dfaeb92c5e37403fb9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qobject#deleteLater&quot;&gt;deleteLater&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e4da0a5bbb35968076ec61483687b038129f0789" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#disconnect&quot;&gt;disconnect&lt;/a&gt;() is typically used in three ways, as the following examples demonstrate.</source>
          <target state="translated">&lt;a href=&quot;qobject#disconnect&quot;&gt;&lt;/a&gt;次の例に示すように、disconnect（）は通常3つの方法で使用されます。</target>
        </trans-unit>
        <trans-unit id="050048175bc2f55b6dac1e9a69630b0ba282879a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#disconnect&quot;&gt;disconnect&lt;/a&gt;(const QObject *sender, const char *signal, const QObject *receiver, const char *method)</source>
          <target state="translated">&lt;a href=&quot;qobject#disconnect&quot;&gt;切断&lt;/a&gt;（const QObject * sender、const char * signal、const QObject * receiver、const char * method）</target>
        </trans-unit>
        <trans-unit id="0f774dff1fe4606238d4ed3f2188c9224540658e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#disconnect-2&quot;&gt;disconnect&lt;/a&gt;(const char *signal, const QObject *receiver, const char *method) const</source>
          <target state="translated">&lt;a href=&quot;qobject#disconnect-2&quot;&gt;切断&lt;/a&gt;（const char * signal、const QObject * receiver、const char * method）const</target>
        </trans-unit>
        <trans-unit id="09063731b307d93236c3055460533de1ab472afc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#disconnect-5&quot;&gt;disconnect&lt;/a&gt;(const QObject *sender, PointerToMemberFunction signal, const QObject *receiver, PointerToMemberFunction method)</source>
          <target state="translated">&lt;a href=&quot;qobject#disconnect-5&quot;&gt;切断&lt;/a&gt;（const QObject * sender、PointerToMemberFunctionシグナル、const QObject * receiver、PointerToMemberFunctionメソッド）</target>
        </trans-unit>
        <trans-unit id="cc55c50e5dbdc6f7daac6f3934e311cef9e7e8a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#inherits&quot;&gt;QObject::inherits&lt;/a&gt;() function returns whether an object is an instance of a class that inherits a specified class within the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; inheritance tree.</source>
          <target state="translated">&lt;a href=&quot;qobject#inherits&quot;&gt;QObject :: inherits&lt;/a&gt;（）関数は、オブジェクトが&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;継承ツリー内の指定されたクラスを継承するクラスのインスタンスであるかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="575dd836a9f21282f36d6427733ef70c06ef21b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#metaObject&quot;&gt;QObject::metaObject&lt;/a&gt;() returns the associated &lt;a href=&quot;qmetaobject&quot;&gt;meta-object&lt;/a&gt; for the class.</source>
          <target state="translated">&lt;a href=&quot;qobject#metaObject&quot;&gt;QObject :: metaObject&lt;/a&gt;（）は、クラスに関連付けられた&lt;a href=&quot;qmetaobject&quot;&gt;メタオブジェクト&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="df7d5271c356583a639cedef6809791147070bb1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#moveToThread&quot;&gt;moveToThread&lt;/a&gt;() will fail if the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; has a parent.</source>
          <target state="translated">&lt;a href=&quot;qobject#moveToThread&quot;&gt;moveToThreadが&lt;/a&gt;あれば（）は失敗します&lt;a href=&quot;qobject&quot;&gt;QObjectのが&lt;/a&gt;親を持っています。</target>
        </trans-unit>
        <trans-unit id="c40f5f9f0866c73d6fdf8e059f5170c9983e7c34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#moveToThread&quot;&gt;moveToThread&lt;/a&gt;() will fail if the QObject has a parent.</source>
          <target state="translated">&lt;a href=&quot;qobject#moveToThread&quot;&gt;QObjectに&lt;/a&gt;親がある場合、moveToThread（）は失敗します。</target>
        </trans-unit>
        <trans-unit id="1fe60b08fa59c569b64353361bf85f38f45e5239" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;() can also be used in conjunction with interfaces; see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-tools-plugandpaint-app-example.html&quot;&gt;Plug &amp;amp; Paint&lt;/a&gt; example for details.</source>
          <target state="translated">&lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;（）はインターフェースと組み合わせて使用​​することもできます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-tools-plugandpaint-app-example.html&quot;&gt;プラグアンドペイントの&lt;/a&gt;例を参照してください。</target>
        </trans-unit>
        <trans-unit id="f7f8157196812a66c1da48014156cb920a3c0d09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;() can also be used in conjunction with interfaces; see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-tools-plugandpaint-app-example.html&quot;&gt;Plug &amp;amp; Paint&lt;/a&gt; example for details.</source>
          <target state="translated">&lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;（）は、インターフェースと組み合わせて使用​​することもできます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-tools-plugandpaint-app-example.html&quot;&gt;プラグアンドペイントの&lt;/a&gt;例を参照してください。</target>
        </trans-unit>
        <trans-unit id="d7b9b8f1a685ac87cda0fdb0ffe49d76a07e47e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;() can also be used in conjunction with interfaces; see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-tools-plugandpaint-app-example.html&quot;&gt;Plug &amp;amp; Paint&lt;/a&gt; example for details.</source>
          <target state="translated">&lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;（）は、インターフェースと組み合わせて使用​​することもできます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-tools-plugandpaint-app-example.html&quot;&gt;プラグアンドペイントの&lt;/a&gt;例を参照してください。</target>
        </trans-unit>
        <trans-unit id="b33c06c64b63e9e922672b78ed372152c42115dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#setParent&quot;&gt;setParent&lt;/a&gt;() will fail if the two QObjects involved live in different threads.</source>
          <target state="translated">&lt;a href=&quot;qobject#setParent&quot;&gt;&lt;/a&gt;関連する2つのQObjectが異なるスレッドに存在する場合、setParent（）は失敗します。</target>
        </trans-unit>
        <trans-unit id="96edf9751bd01e7c6a64810fa95686244dbf6e7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#setProperty&quot;&gt;QObject::setProperty&lt;/a&gt;() and &lt;a href=&quot;qobject#property&quot;&gt;QObject::property&lt;/a&gt;() dynamically set and get properties by name.</source>
          <target state="translated">&lt;a href=&quot;qobject#setProperty&quot;&gt;QObject :: setProperty&lt;/a&gt;（）および&lt;a href=&quot;qobject#property&quot;&gt;QObject :: property&lt;/a&gt;（）は、プロパティを名前で動的に設定および取得します。</target>
        </trans-unit>
        <trans-unit id="f2dca3356f2033e80b2b3a8913f92c38b1225195" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#setProperty&quot;&gt;QObject::setProperty&lt;/a&gt;() can also be used to add</source>
          <target state="translated">&lt;a href=&quot;qobject#setProperty&quot;&gt;QObject :: setProperty&lt;/a&gt;（）を使用して追加することもできます</target>
        </trans-unit>
        <trans-unit id="8f7c77ee6b162bd3a52e427e7db35710505a2b53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="c34e1d877af99cb6adf730dbc17ae31faac50301" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;() and QObject::trUtf8() translate strings for &lt;a href=&quot;internationalization&quot;&gt;internationalization&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt;（）およびQObject :: trUtf8（）は、&lt;a href=&quot;internationalization&quot;&gt;国際化&lt;/a&gt;対応のために文字列を変換します。</target>
        </trans-unit>
        <trans-unit id="8683344031888fa75ba2aaee602c65984f3ff914" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;() maps from &lt;code&gt;const char *&lt;/code&gt; to a Unicode string, and uses installable &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; objects to do the mapping.</source>
          <target state="translated">&lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt;（）は &lt;code&gt;const char *&lt;/code&gt; からUnicode文字列にマッピングし、インストール可能な&lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;オブジェクトを使用してマッピングを行います。</target>
        </trans-unit>
        <trans-unit id="baea5e9366b4f3e189b1c8b30f6b6844e267de47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;() provides this functionality more conveniently.</source>
          <target state="translated">&lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt;（）はこの機能をより便利に提供します。</target>
        </trans-unit>
        <trans-unit id="93c2a722f0d1b8b5bdcbec6ba95794bc99fef919" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;() translates strings for &lt;a href=&quot;internationalization&quot;&gt;internationalization&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt;（）は、&lt;a href=&quot;internationalization&quot;&gt;国際化の&lt;/a&gt;ために文字列を変換します。</target>
        </trans-unit>
        <trans-unit id="66bdf53de8faad3207640d49500b81a82ca6a54d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qobjectbindableproperty&quot;&gt;QObjectBindableProperty&lt;/a&gt; and &lt;a href=&quot;qproperty&quot;&gt;QProperty&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qobjectbindableproperty&quot;&gt;QObjectBindableProperty&lt;/a&gt;および&lt;a href=&quot;qproperty&quot;&gt;QProperty&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bf0a860dd79a0db98affc6bfed83ca0ad93ad25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qocspresponse#QOcspCertificateStatus-enum&quot;&gt;QOcspCertificateStatus&lt;/a&gt; QOcspResponse::certificateStatus() const</source>
          <target state="translated">&lt;a href=&quot;qocspresponse#QOcspCertificateStatus-enum&quot;&gt;QOcspCertificateStatus&lt;/a&gt; QOcspResponse :: certificateStatus（）const</target>
        </trans-unit>
        <trans-unit id="e7eb1e395e5bd8caac32e7ef874698ae9a74ec64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;QOcspResponse::operator=(&lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt;＆QOcspResponse :: operator =（&lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="3849db25672692543245a3e4fd3db05c50a10889" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;QOcspResponse::operator=(const &lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt;＆QOcspResponse :: operator =（const &lt;a href=&quot;qocspresponse#QOcspResponse&quot;&gt;QOcspResponse&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="22d290714231361194a385bb22d998b5151a2f3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qocspresponse#QOcspRevocationReason-enum&quot;&gt;QOcspRevocationReason&lt;/a&gt; QOcspResponse::revocationReason() const</source>
          <target state="translated">&lt;a href=&quot;qocspresponse#QOcspRevocationReason-enum&quot;&gt;QOcspRevocationReason&lt;/a&gt; QOcspResponse :: revocationReason（）const</target>
        </trans-unit>
        <trans-unit id="ba767c47ecd7d02dae5502900fcf596247d78726" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt; and &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt;と&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3be25ad9cbb413e10384717a826b105ff4bdd04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt; is intended to be used with &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; to allow rendering with OpenGL in an arbitrary thread without the need to create a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qoffscreensurface&quot;&gt;QOffscreenSurface&lt;/a&gt;は、&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;を作成する必要なく、任意のスレッドでOpenGLを使用してレンダリングできるようにする&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;と一緒に使用することを目的としています。</target>
        </trans-unit>
        <trans-unit id="bc76b829ea17e928f2e7b8f8f319c1a1322b0ee6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt; objects can be copied around as a reference to the underlying OpenGL buffer object:</source>
          <target state="translated">&lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;オブジェクトは、基になるOpenGLバッファーオブジェクトへの参照としてコピーできます。</target>
        </trans-unit>
        <trans-unit id="a3b88ccf9931fed54c14d1cafe6cf046892924d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt; performs a shallow copy when objects are copied in this manner, but does not implement copy-on-write semantics. The original object will be affected whenever the copy is modified.</source>
          <target state="translated">&lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;は、オブジェクトがこの方法でコピーされるときに浅いコピーを実行しますが、コピーオンライトセマンティクスを実装しません。元のオブジェクトは、コピーが変更されるたびに影響を受けます。</target>
        </trans-unit>
        <trans-unit id="e4274725b1559504f8520932cc8677bdf13a1341" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglbuffer#QOpenGLBuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt; &amp;amp;QOpenGLBuffer::operator=(const &lt;a href=&quot;qopenglbuffer#QOpenGLBuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qopenglbuffer#QOpenGLBuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;＆QOpenGLBuffer :: operator =（const &lt;a href=&quot;qopenglbuffer#QOpenGLBuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="10ae38c62a85de5e20bafff9fd599a7f687d0bf4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglbuffer#Type-enum&quot;&gt;QOpenGLBuffer::Type&lt;/a&gt; QOpenGLBuffer::type() const</source>
          <target state="translated">&lt;a href=&quot;qopenglbuffer#Type-enum&quot;&gt;QOpenGLBuffer :: Type&lt;/a&gt; QOpenGLBuffer :: type（）const</target>
        </trans-unit>
        <trans-unit id="211c3d4a3f1264a283a55cebc22ea845cb4975a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglbuffer#UsagePattern-enum&quot;&gt;QOpenGLBuffer::UsagePattern&lt;/a&gt; QOpenGLBuffer::usagePattern() const</source>
          <target state="translated">&lt;a href=&quot;qopenglbuffer#UsagePattern-enum&quot;&gt;QOpenGLBuffer :: UsagePattern&lt;/a&gt; QOpenGLBuffer :: usagePattern（）const</target>
        </trans-unit>
        <trans-unit id="d48de3489f08bf33a1842ba8621407345aedd956" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; *QOpenGLPaintDevice::context() const</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; * QOpenGLPaintDevice :: context（）const</target>
        </trans-unit>
        <trans-unit id="1d31eb946bf94074337d5224f4d36da17960ca04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; *QOpenGLWidget::context() const</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; * QOpenGLWidget :: context（）const</target>
        </trans-unit>
        <trans-unit id="66134e471baa9c6da4ff1c3f173743efbf463457" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; *QOpenGLWindow::context() const</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; * QOpenGLWindow :: context（）const</target>
        </trans-unit>
        <trans-unit id="c2af0768215914ab431997947b83c13938eae68f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; *QOpenGLWindow::shareContext() const</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; * QOpenGLWindow :: shareContext（）const</target>
        </trans-unit>
        <trans-unit id="e4a4c257b1122d3f8ea1f555708012125601cb2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; *QQuickWindow::openglContext() const</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; * QQuickWindow :: openglContext（）const</target>
        </trans-unit>
        <trans-unit id="8cc708eb90b3ba4d64b677ce31cd857f6df79623" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; *RenderState::context() const</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; * RenderState :: context（）const</target>
        </trans-unit>
        <trans-unit id="bf5cd3d4eea275ed656d96cd074cb93e755141bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; can be moved to a different thread with &lt;a href=&quot;qobject#moveToThread&quot;&gt;moveToThread&lt;/a&gt;(). Do not call &lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;() from a different thread than the one to which the &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; object belongs. A context can only be current in one thread and against one surface at a time, and a thread only has one context current at a time.</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;は&lt;a href=&quot;qobject#moveToThread&quot;&gt;moveToThread&lt;/a&gt;（）で別のスレッドに移動できます。&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;オブジェクトが属するスレッドとは別のスレッドから&lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;（）を呼び出さないでください。コンテキストは、一度に1つのスレッドで1つのサーフェスに対してのみ最新であることができ、スレッドは一度に1つのコンテキストしか最新でありません。</target>
        </trans-unit>
        <trans-unit id="2dfa39b237652c8f7b5f25ef586e028be900ab7a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; offers this as a convenient way to access &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; without having to manage it manually.</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;はこれを手動で管理する必要なしに&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;にアクセスする便利な方法として提供します。</target>
        </trans-unit>
        <trans-unit id="5d6eee5770848a363b3c9ae5ff469e1f30112ba6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; offers this as a convenient way to access &lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; without having to manage it manually.</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;は、手動で管理しなくても&lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;にアクセスするための便利な方法としてこれを提供します。</target>
        </trans-unit>
        <trans-unit id="726e9210376f8b9de3b3b15e96fe2f5958f908e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; offers this as a convenient way to access &lt;a href=&quot;qopenglextrafunctions&quot;&gt;QOpenGLExtraFunctions&lt;/a&gt; without having to manage it manually.</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;はこれを手動で管理する必要なしに&lt;a href=&quot;qopenglextrafunctions&quot;&gt;QOpenGLExtraFunctions&lt;/a&gt;にアクセスする便利な方法として提供します。</target>
        </trans-unit>
        <trans-unit id="4a426b012076f70762d108928e3893da300ad8be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; represents the OpenGL state of an underlying OpenGL context. To set up a context, set its screen and format such that they match those of the surface or surfaces with which the context is meant to be used, if necessary make it share resources with other contexts with &lt;a href=&quot;qopenglcontext#setShareContext&quot;&gt;setShareContext&lt;/a&gt;(), and finally call &lt;a href=&quot;qopenglcontext#create&quot;&gt;create&lt;/a&gt;(). Use the return value or &lt;a href=&quot;qopenglcontext#isValid&quot;&gt;isValid&lt;/a&gt;() to check if the context was successfully initialized.</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;は、基になるOpenGLコンテキストのOpenGL状態を表します。コンテキストを設定するには、その画面とフォーマットを、コンテキストが使用される1つまたは複数のサーフェスの画面と一致するように設定し、必要に応じて、&lt;a href=&quot;qopenglcontext#setShareContext&quot;&gt;setShareContext&lt;/a&gt;（）を使用して他のコンテキストとリソースを共有し、最後に&lt;a href=&quot;qopenglcontext#create&quot;&gt;create&lt;/a&gt;（ ）。戻り値または&lt;a href=&quot;qopenglcontext#isValid&quot;&gt;isValid&lt;/a&gt;（）を使用して、コンテキストが正常に初期化されたかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="8d47e5bd1734c25dc2bd8ee13685b5c6eceb89ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontext#QOpenGLContext&quot;&gt;QOpenGLContext&lt;/a&gt; *QOpenGLContext::shareContext() const</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext#QOpenGLContext&quot;&gt;QOpenGLContext&lt;/a&gt; * QOpenGLContext :: shareContext（）const</target>
        </trans-unit>
        <trans-unit id="5f86c4af6409437294707f88c34a170e7d135916" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontextgroup&quot;&gt;QOpenGLContextGroup&lt;/a&gt; *QOpenGLContext::shareGroup() const</source>
          <target state="translated">&lt;a href=&quot;qopenglcontextgroup&quot;&gt;QOpenGLContextGroup&lt;/a&gt; * QOpenGLContext :: shareGroup（）const</target>
        </trans-unit>
        <trans-unit id="4f1a183625acc904914e272410a6fc8c819f8704" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglcontextgroup&quot;&gt;QOpenGLContextGroup&lt;/a&gt; is automatically created and managed by &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; instances. Its purpose is to identify all the contexts that are sharing resources.</source>
          <target state="translated">&lt;a href=&quot;qopenglcontextgroup&quot;&gt;QOpenGLContextGroup&lt;/a&gt;は&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;インスタンスによって自動的に作成および管理されます。その目的は、リソースを共有しているすべてのコンテキストを識別することです。</target>
        </trans-unit>
        <trans-unit id="9f5fac65a81642dc1411ca1c611d76dbe692a3e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt; aims at addressing these issues by providing access to the</source>
          <target state="translated">&lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt;は、</target>
        </trans-unit>
        <trans-unit id="074143e35ebc784acc2c7949bc9c612729b229dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt; is a simple &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-derived class. Just like all &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclasses, you create an instance (and optionally specify a parent object), and like the other OpenGL functions in Qt you</source>
          <target state="translated">&lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt;は、単純な&lt;a href=&quot;qobject&quot;&gt;QObject派生&lt;/a&gt;クラスです。すべての&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;サブクラスと同様に、インスタンスを作成し（オプションで親オブジェクトを指定）、Qtの他のOpenGL関数と同様に、</target>
        </trans-unit>
        <trans-unit id="d0dfaf9c3a0f92a0541b01e99850f818715d3a5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt; supports both these modes of operation. Refer to the following sections to find out the differences between them.</source>
          <target state="translated">&lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt;は、これらの両方の操作モードをサポートしています。次のセクションを参照して、それらの違いを確認してください。</target>
        </trans-unit>
        <trans-unit id="aaa9da4c325aec2c9aaf6c375120ef151f5a007c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt; will record the values of &lt;code&gt;GL_DEBUG_OUTPUT&lt;/code&gt; and &lt;code&gt;GL_DEBUG_OUTPUT_SYNCHRONOUS&lt;/code&gt; when logging is started, and set them back when logging is stopped. Moreover, any user-defined OpenGL debug callback installed when this function is invoked will be restored when logging is stopped; &lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt; will ensure that the pre-existing callback will still be invoked when logging.</source>
          <target state="translated">&lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt;は、ロギングの開始時に &lt;code&gt;GL_DEBUG_OUTPUT&lt;/code&gt; および &lt;code&gt;GL_DEBUG_OUTPUT_SYNCHRONOUS&lt;/code&gt; の値を記録し、ロギングの停止時にそれらを元に戻します。さらに、この関数が呼び出されたときにインストールされたユーザー定義のOpenGLデバッグコールバックは、ロギングが停止すると復元されます。&lt;a href=&quot;qopengldebuglogger&quot;&gt;QOpenGLDebugLogger&lt;/a&gt;は、ロギング時に既存のコールバックが呼び出されることを保証します。</target>
        </trans-unit>
        <trans-unit id="98049f67dabb1ed73425d6a1bb1a7ab08bc8392b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebuglogger#LoggingMode-enum&quot;&gt;QOpenGLDebugLogger::LoggingMode&lt;/a&gt; QOpenGLDebugLogger::loggingMode() const</source>
          <target state="translated">&lt;a href=&quot;qopengldebuglogger#LoggingMode-enum&quot;&gt;QOpenGLDebugLogger :: LoggingMode&lt;/a&gt; QOpenGLDebugLogger :: loggingMode（）const</target>
        </trans-unit>
        <trans-unit id="2db5f20477bd1001310999b87819313369f5c990" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebugmessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; is also able to apply filters to the debug messages, and therefore limit the amount of messages logged. You can enable or disable logging of messages by calling &lt;a href=&quot;qopengldebuglogger#enableMessages&quot;&gt;enableMessages&lt;/a&gt;() and &lt;a href=&quot;qopengldebuglogger#disableMessages&quot;&gt;disableMessages&lt;/a&gt;() respectively. By default, all messages are logged.</source>
          <target state="translated">&lt;a href=&quot;qopengldebugmessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt;は、デバッグメッセージにフィルターを適用することもできるため、ログに記録されるメッセージの量を制限できます。メッセージのロギングを有効または無効にするには、それぞれ&lt;a href=&quot;qopengldebuglogger#enableMessages&quot;&gt;enableMessages&lt;/a&gt;（）および&lt;a href=&quot;qopengldebuglogger#disableMessages&quot;&gt;disableMessages&lt;/a&gt;（）を呼び出します。デフォルトでは、すべてのメッセージがログに記録されます。</target>
        </trans-unit>
        <trans-unit id="62490848a8d064298772bc6610e630d350d9d8a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;QOpenGLDebugMessage::operator=(&lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt;＆QOpenGLDebugMessage :: operator =（&lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="e34b51225983b5963cfa3c860e9a525e6ab030dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;QOpenGLDebugMessage::operator=(const &lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt;＆QOpenGLDebugMessage :: operator =（const &lt;a href=&quot;qopengldebugmessage#QOpenGLDebugMessage&quot;&gt;QOpenGLDebugMessage&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="25de8c13bdb8f0dfd67632513f414d4d0f2d27b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebugmessage#Severity-enum&quot;&gt;QOpenGLDebugMessage::Severity&lt;/a&gt; QOpenGLDebugMessage::severity() const</source>
          <target state="translated">&lt;a href=&quot;qopengldebugmessage#Severity-enum&quot;&gt;QOpenGLDebugMessage :: Severity&lt;/a&gt; QOpenGLDebugMessage :: severity（）const</target>
        </trans-unit>
        <trans-unit id="a5e3b36ac12b36f1d5a41c5acf1ac7a6bb96b5a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebugmessage#Source-enum&quot;&gt;QOpenGLDebugMessage::Source&lt;/a&gt; QOpenGLDebugMessage::source() const</source>
          <target state="translated">&lt;a href=&quot;qopengldebugmessage#Source-enum&quot;&gt;QOpenGLDebugMessage :: Source&lt;/a&gt; QOpenGLDebugMessage :: source（）const</target>
        </trans-unit>
        <trans-unit id="9d9b43cf82b8898fc154cd2f2fbbed20abbce99e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengldebugmessage#Type-enum&quot;&gt;QOpenGLDebugMessage::Type&lt;/a&gt; QOpenGLDebugMessage::type() const</source>
          <target state="translated">&lt;a href=&quot;qopengldebugmessage#Type-enum&quot;&gt;QOpenGLDebugMessage :: Type&lt;/a&gt; QOpenGLDebugMessage :: type（）const</target>
        </trans-unit>
        <trans-unit id="9cbb544ade5675f89471c472bb07f073d8b78e8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglextrafunctions&quot;&gt;QOpenGLExtraFunctions&lt;/a&gt; *QOpenGLContext::extraFunctions() const</source>
          <target state="translated">&lt;a href=&quot;qopenglextrafunctions&quot;&gt;QOpenGLExtraFunctions&lt;/a&gt; * QOpenGLContext :: extraFunctions（）const</target>
        </trans-unit>
        <trans-unit id="925b849d1936154f50cff4e79532b481d44ca4bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt; *QQuickWindow::renderTarget() const</source>
          <target state="translated">&lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt; * QQuickWindow :: renderTarget（）const</target>
        </trans-unit>
        <trans-unit id="5ff8cb2079ed4b846b6398c564abdb4ddd8c19e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglframebufferobject#Attachment-enum&quot;&gt;QOpenGLFramebufferObject::Attachment&lt;/a&gt; QOpenGLFramebufferObject::attachment() const</source>
          <target state="translated">&lt;a href=&quot;qopenglframebufferobject#Attachment-enum&quot;&gt;QOpenGLFramebufferObject :: Attachment&lt;/a&gt; QOpenGLFramebufferObject :: attachment（）const</target>
        </trans-unit>
        <trans-unit id="4699076b7e7b3ac1c400415a207754567194f6d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglframebufferobject#Attachment-enum&quot;&gt;QOpenGLFramebufferObject::Attachment&lt;/a&gt; QOpenGLFramebufferObjectFormat::attachment() const</source>
          <target state="translated">&lt;a href=&quot;qopenglframebufferobject#Attachment-enum&quot;&gt;QOpenGLFramebufferObject :: Attachment&lt;/a&gt; QOpenGLFramebufferObjectFormat :: attachment（）const</target>
        </trans-unit>
        <trans-unit id="faa8b2e8abc31f0262f4c42044b5c45bc86adba7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglframebufferobjectformat&quot;&gt;QOpenGLFramebufferObjectFormat&lt;/a&gt; QOpenGLFramebufferObject::format() const</source>
          <target state="translated">&lt;a href=&quot;qopenglframebufferobjectformat&quot;&gt;QOpenGLFramebufferObjectFormat&lt;/a&gt; QOpenGLFramebufferObject :: format（）const</target>
        </trans-unit>
        <trans-unit id="05c58c2d7394e3daa3e8ca2094377acf75590b38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglframebufferobjectformat#QOpenGLFramebufferObjectFormat&quot;&gt;QOpenGLFramebufferObjectFormat&lt;/a&gt; &amp;amp;QOpenGLFramebufferObjectFormat::operator=(const &lt;a href=&quot;qopenglframebufferobjectformat#QOpenGLFramebufferObjectFormat&quot;&gt;QOpenGLFramebufferObjectFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qopenglframebufferobjectformat#QOpenGLFramebufferObjectFormat&quot;&gt;QOpenGLFramebufferObjectFormat&lt;/a&gt;＆QOpenGLFramebufferObjectFormat :: operator =（const &lt;a href=&quot;qopenglframebufferobjectformat#QOpenGLFramebufferObjectFormat&quot;&gt;QOpenGLFramebufferObjectFormat&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3cd5212a1360a1955ec8694217f3a905a931443c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt; and &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt; shelter the programmer from the details of compiling and linking vertex and fragment shaders.</source>
          <target state="translated">&lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt;と&lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;は、頂点シェーダーとフラグメントシェーダーのコンパイルとリンクの詳細からプログラマーを保護します。</target>
        </trans-unit>
        <trans-unit id="db67e341f698ed3708c4903290366bcf31c70af8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt; and QOpenGLShaderProgram shelter the programmer from the details of compiling and linking vertex and fragment shaders.</source>
          <target state="translated">&lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt;とQOpenGLShaderProgramは、頂点シェーダーとフラグメントシェーダーのコンパイルとリンクの詳細からプログラマーを保護します。</target>
        </trans-unit>
        <trans-unit id="7db337263889617f13270ff9bc724cbd0f461566" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader::ShaderType&lt;/a&gt; QOpenGLShader::shaderType() const</source>
          <target state="translated">&lt;a href=&quot;qopenglshader#ShaderTypeBit-enum&quot;&gt;QOpenGLShader :: ShaderType&lt;/a&gt; QOpenGLShader :: shaderType（）const</target>
        </trans-unit>
        <trans-unit id="596a1820e067bbde8b80aa868e86d256ceac94c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt; *QSGMaterialShader::program()</source>
          <target state="translated">&lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt; * QSGMaterialShader :: program（）</target>
        </trans-unit>
        <trans-unit id="1dbeb39dd05c25f9793a0a2782c870d7c789e0cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture&quot;&gt;QOpenGLTexture&lt;/a&gt; *QWaylandBufferRef::toOpenGLTexture(int</source>
          <target state="translated">&lt;a href=&quot;qopengltexture&quot;&gt;QOpenGLTexture&lt;/a&gt; * QWaylandBufferRef :: toOpenGLTexture（int</target>
        </trans-unit>
        <trans-unit id="c3acda9953f7d37a08d5fea818a2ee43981ac78f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture&quot;&gt;QOpenGLTexture&lt;/a&gt; makes it easy to work with OpenGL textures and the myriad features and targets that they offer depending upon the capabilities of your OpenGL implementation.</source>
          <target state="translated">&lt;a href=&quot;qopengltexture&quot;&gt;QOpenGLTextureを使用&lt;/a&gt;すると、OpenGLテクスチャ、およびOpenGL実装の機能に応じて提供される無数の機能とターゲットを簡単に操作できます。</target>
        </trans-unit>
        <trans-unit id="16ddf08c5030f5d2294e773015c179de76f78afe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#ComparisonFunction-enum&quot;&gt;QOpenGLTexture::ComparisonFunction&lt;/a&gt; QOpenGLTexture::comparisonFunction() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#ComparisonFunction-enum&quot;&gt;QOpenGLTexture :: ComparisonFunction&lt;/a&gt; QOpenGLTexture :: comparisonFunction（）const</target>
        </trans-unit>
        <trans-unit id="8a8cf136dbd2c5751d89ebbff7ccb7e85a36ae04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#ComparisonMode-enum&quot;&gt;QOpenGLTexture::ComparisonMode&lt;/a&gt; QOpenGLTexture::comparisonMode() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#ComparisonMode-enum&quot;&gt;QOpenGLTexture :: ComparisonMode&lt;/a&gt; QOpenGLTexture :: comparisonMode（）const</target>
        </trans-unit>
        <trans-unit id="73a03476247e0e158fb4cefe22146925a9f7c05c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#DepthStencilMode-enum&quot;&gt;QOpenGLTexture::DepthStencilMode&lt;/a&gt; QOpenGLTexture::depthStencilMode() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#DepthStencilMode-enum&quot;&gt;QOpenGLTexture :: DepthStencilMode&lt;/a&gt; QOpenGLTexture :: depthStencilMode（）const</target>
        </trans-unit>
        <trans-unit id="30bdf714c4287e3c58cd25a2cea2969dc7d3233f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture::Filter&lt;/a&gt; QOpenGLTexture::magnificationFilter() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture :: Filter&lt;/a&gt; QOpenGLTexture :: magnificationFilter（）const</target>
        </trans-unit>
        <trans-unit id="0d9cd62a1c5befac79ce3cae6b5d9ded24396331" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture::Filter&lt;/a&gt; QOpenGLTexture::minificationFilter() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture :: Filter&lt;/a&gt; QOpenGLTexture :: minificationFilter（）const</target>
        </trans-unit>
        <trans-unit id="b63574c4f61d97c5b772426c09af14c5dfb48e91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#PixelFormat-enum&quot;&gt;QOpenGLTexture::PixelFormat&lt;/a&gt; QTextureImageData::pixelFormat() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#PixelFormat-enum&quot;&gt;QOpenGLTexture :: PixelFormat&lt;/a&gt; QTextureImageData :: pixelFormat（）const</target>
        </trans-unit>
        <trans-unit id="c1a54e3e0223509e5de620ae6783bddf077616e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#PixelType-enum&quot;&gt;QOpenGLTexture::PixelType&lt;/a&gt; QTextureImageData::pixelType() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#PixelType-enum&quot;&gt;QOpenGLTexture :: PixelType&lt;/a&gt; QTextureImageData :: pixelType（）const</target>
        </trans-unit>
        <trans-unit id="c5047ad7ce16c0295cd3df1ef472c6d29d8199ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#QOpenGLTexture&quot;&gt;QOpenGLTexture&lt;/a&gt; *QOpenGLTexture::createTextureView(&lt;a href=&quot;qopengltexture#Target-enum&quot;&gt;QOpenGLTexture::Target&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#QOpenGLTexture&quot;&gt;QOpenGLTexture&lt;/a&gt; * QOpenGLTexture :: createTextureView（&lt;a href=&quot;qopengltexture#Target-enum&quot;&gt;QOpenGLTexture :: Target&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b27d5b53b98383eb142c6ba4876ec688042bf3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#SwizzleValue-enum&quot;&gt;QOpenGLTexture::SwizzleValue&lt;/a&gt; QOpenGLTexture::swizzleMask(&lt;a href=&quot;qopengltexture#SwizzleComponent-enum&quot;&gt;QOpenGLTexture::SwizzleComponent&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#SwizzleValue-enum&quot;&gt;QOpenGLTexture :: SwizzleValue&lt;/a&gt; QOpenGLTexture :: swizzleMask（&lt;a href=&quot;qopengltexture#SwizzleComponent-enum&quot;&gt;QOpenGLTexture :: SwizzleComponent&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0aca6fadbfbc6031975e4687222f4397fef024ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#Target-enum&quot;&gt;QOpenGLTexture::Target&lt;/a&gt; QOpenGLTexture::target() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#Target-enum&quot;&gt;QOpenGLTexture :: Target&lt;/a&gt; QOpenGLTexture :: target（）const</target>
        </trans-unit>
        <trans-unit id="77640146fc8e2a7c5272804731f5200db37eaf25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#Target-enum&quot;&gt;QOpenGLTexture::Target&lt;/a&gt; QTextureImageData::target() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#Target-enum&quot;&gt;QOpenGLTexture :: Target&lt;/a&gt; QTextureImageData :: target（）const</target>
        </trans-unit>
        <trans-unit id="a3b9353735c770b5bd3d255444d57bab9a633e8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#TextureFormat-enum&quot;&gt;QOpenGLTexture::TextureFormat&lt;/a&gt; QOpenGLTexture::format() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#TextureFormat-enum&quot;&gt;QOpenGLTexture :: TextureFormat&lt;/a&gt; QOpenGLTexture :: format（）const</target>
        </trans-unit>
        <trans-unit id="6c77538a584febb2724390d715e5e86b9c945de6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#TextureFormat-enum&quot;&gt;QOpenGLTexture::TextureFormat&lt;/a&gt; QTextureImageData::format() const</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#TextureFormat-enum&quot;&gt;QOpenGLTexture :: TextureFormat&lt;/a&gt; QTextureImageData :: format（）const</target>
        </trans-unit>
        <trans-unit id="a0bda34eadd11624278f078f2caf8c20c6f6cc05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopengltexture#WrapMode-enum&quot;&gt;QOpenGLTexture::WrapMode&lt;/a&gt; QOpenGLTexture::wrapMode(&lt;a href=&quot;qopengltexture#CoordinateDirection-enum&quot;&gt;QOpenGLTexture::CoordinateDirection&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qopengltexture#WrapMode-enum&quot;&gt;QOpenGLTexture :: WrapMode&lt;/a&gt; QOpenGLTexture :: wrapMode（&lt;a href=&quot;qopengltexture#CoordinateDirection-enum&quot;&gt;QOpenGLTexture :: CoordinateDirection&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d1a27fee768ff9312fb861f89b836a38cce7f13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglversionprofile#QOpenGLVersionProfile&quot;&gt;QOpenGLVersionProfile&lt;/a&gt; &amp;amp;QOpenGLVersionProfile::operator=(const &lt;a href=&quot;qopenglversionprofile#QOpenGLVersionProfile&quot;&gt;QOpenGLVersionProfile&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qopenglversionprofile#QOpenGLVersionProfile&quot;&gt;QOpenGLVersionProfile&lt;/a&gt;＆QOpenGLVersionProfile :: operator =（const &lt;a href=&quot;qopenglversionprofile#QOpenGLVersionProfile&quot;&gt;QOpenGLVersionProfile&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d622e0c373fb982d262d5fa9cfeaad7d8a26324a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglvertexarrayobject-binder&quot;&gt;QOpenGLVertexArrayObject::Binder&lt;/a&gt; is a simple convenience class that can be used to assist with the binding and releasing of &lt;a href=&quot;qopenglvertexarrayobject&quot;&gt;QOpenGLVertexArrayObject&lt;/a&gt; instances. This class is to &lt;a href=&quot;qopenglvertexarrayobject&quot;&gt;QOpenGLVertexArrayObject&lt;/a&gt; as &lt;a href=&quot;qmutexlocker&quot;&gt;QMutexLocker&lt;/a&gt; is to &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qopenglvertexarrayobject-binder&quot;&gt;QOpenGLVertexArrayObject :: Binder&lt;/a&gt;は、&lt;a href=&quot;qopenglvertexarrayobject&quot;&gt;QOpenGLVertexArrayObject&lt;/a&gt;インスタンスのバインドと解放を支援するために使用できる単純な便利なクラスです。このクラスは、&lt;a href=&quot;qopenglvertexarrayobject&quot;&gt;QMutexLocker&lt;/a&gt;が&lt;a href=&quot;qmutexlocker&quot;&gt;QMutex&lt;/a&gt;に対するものであるのと同じように、QOpenGLVertexArrayObjectに対するもの&lt;a href=&quot;qmutex&quot;&gt;です&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="097b4b7ee5bd9231f3a4557d776f0b4f3dda603c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; allows using different OpenGL versions and profiles when the platform supports it. Just set the requested format via &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;(). Keep in mind however that having multiple &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; instances in the same window requires that they all use the same format, or at least formats that do not make the contexts non-sharable. To overcome this issue, prefer using &lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat::setDefaultFormat&lt;/a&gt;() instead of &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;は、プラットフォームがサポートしている場合、異なるOpenGLバージョンとプロファイルを使用できます。要求されたフォーマットを&lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;（）で設定するだけです。ただし、同じウィンドウに複数の&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;インスタンスがある場合は、すべて同じ形式を使用するか、少なくともコンテキストを共有できない形式にする必要があることに注意してください。この問題を解決するには、&lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;（）ではなく&lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat :: setDefaultFormat&lt;/a&gt;（）を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8d8cb360e5ad42c511acae4552da34e16a41d697" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; provides functionality for displaying OpenGL graphics integrated into a Qt application. It is very simple to use: Make your class inherit from it and use the subclass like any other &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, except that you have the choice between using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; and standard OpenGL rendering commands.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;は、Qtアプリケーションに統合されたOpenGLグラフィックスを表示するための機能を提供します。使い方は非常に簡単です。クラスを継承し、他の&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;と同じようにサブクラスを使用します。ただし、&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;を使用するか、標準のOpenGLレンダリングコマンドを使用するかを選択できます。</target>
        </trans-unit>
        <trans-unit id="744d6382b3930b7f226a0a531e3e2f6acd34273e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; provides three convenient virtual functions that you can reimplement in your subclass to perform the typical OpenGL tasks:</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;は3つの便利な仮想関数を提供します。これらの仮想関数をサブクラスに再実装すると、一般的なOpenGLタスクを実行できます。</target>
        </trans-unit>
        <trans-unit id="28621502de349ff476ef195551b8b82db3dfb1ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; supports multiple update behaviors, just like &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;. In preserved mode the rendered content from the previous &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() call is available in the next one, allowing incremental rendering. In non-preserved mode the content is lost and &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() implementations are expected to redraw everything in the view.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;は、&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;と同様に、複数の更新動作をサポートしています。保存モードでは、前の&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;（）呼び出しからのレンダリングされたコンテンツが次の呼び出しで利用可能になり、増分レンダリングが可能になります。非保存モードではコンテンツが失われ、&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;（）実装はビュー内のすべてを再描画することが期待されます。</target>
        </trans-unit>
        <trans-unit id="eed515feff22e86ca65e970de1ed75958cfcbf97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; will discard the contents of the color buffer and the ancillary buffers after the &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; is rendered to screen. This is the same behavior that can be expected by calling &lt;a href=&quot;qopenglcontext#swapBuffers&quot;&gt;QOpenGLContext::swapBuffers&lt;/a&gt; with a default opengl enabled &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; as the argument. NoPartialUpdate can have some performance benefits on certain hardware architectures common in the mobile and embedded space when a framebuffer object is used as the rendering target. The framebuffer object is invalidated between frames with glDiscardFramebufferEXT if supported or a glClear. Please see the documentation of EXT_discard_framebuffer for more information: https://www.khronos.org/registry/gles/extensions/EXT/EXT_discard_framebuffer.txt</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;は、&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;が画面にレンダリングされた後、カラーバッファーと補助バッファーの内容を破棄します。これは、デフォルトのopenglが有効な&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;を引数として&lt;a href=&quot;qopenglcontext#swapBuffers&quot;&gt;QOpenGLContext :: swapBuffers&lt;/a&gt;を呼び出すことで期待できる動作と同じです。 NoPartialUpdateは、フレームバッファーオブジェクトがレンダリングターゲットとして使用されている場合、モバイルおよび埋め込みスペースで一般的な特定のハードウェアアーキテクチャーにパフォーマンス上の利点をもたらします。フレームバッファーオブジェクトは、サポートされている場合はglDiscardFramebufferEXTまたはglClearを使用してフレーム間で無効化されます。詳細については、EXT_discard_framebufferのドキュメントを参照してください：https://www.khronos.org/registry/gles/extensions/EXT/EXT_discard_framebuffer.txt</target>
        </trans-unit>
        <trans-unit id="2b895076a0a8202f1d24f482bfb4633cd8551b89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwidget#UpdateBehavior-enum&quot;&gt;QOpenGLWidget::UpdateBehavior&lt;/a&gt; QOpenGLWidget::updateBehavior() const</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget#UpdateBehavior-enum&quot;&gt;QOpenGLWidget :: UpdateBehavior&lt;/a&gt; QOpenGLWidget :: updateBehavior（）const</target>
        </trans-unit>
        <trans-unit id="91ab2b84a48d83859abe64b91f62742d743b4f62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwidget#initializeGL&quot;&gt;initializeGL&lt;/a&gt;() - Sets up the OpenGL resources and state. Gets called once before the first time &lt;a href=&quot;qopenglwidget#resizeGL&quot;&gt;resizeGL&lt;/a&gt;() or &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() is called.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget#initializeGL&quot;&gt;initializeGL&lt;/a&gt;（）-OpenGLリソースと状態を設定します。最初に&lt;a href=&quot;qopenglwidget#resizeGL&quot;&gt;resizeGL&lt;/a&gt;（）または&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;（）が呼び出される前に1回呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4583816386d78d3b268c3a138563bd5075fe48a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() - Renders the OpenGL scene. Gets called whenever the widget needs to be updated.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;（）-OpenGLシーンをレンダリングします。ウィジェットを更新する必要があるときはいつでも呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9ad03b5312e64b5b7339023937ee590f813fae62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwidget#resizeGL&quot;&gt;resizeGL&lt;/a&gt;() - Sets up the OpenGL viewport, projection, etc. Gets called whenever the widget has been resized (and also when it is shown for the first time because all newly created widgets get a resize event automatically).</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget#resizeGL&quot;&gt;resizeGL&lt;/a&gt;（）-OpenGLビューポート、プロジェクションなどを設定します。ウィジェットのサイズが変更されるたびに（また、新しく作成されたすべてのウィジェットが自動的にサイズ変更イベントを取得するため、初めて表示されるときに）呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0b5196438b1ca9f02095eac6d0e551ea24a767a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; and &lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;と&lt;a href=&quot;qrasterwindow&quot;&gt;QRasterWindow&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4c1dd772ce22508fb93a985a2764d20d1af7a563" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; is an enhanced &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; that allows easily creating windows that perform OpenGL rendering using an API that is compatible with &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; and is similar to the legacy QGLWidget. Unlike &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;, &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; has no dependency on the widgets module and offers better performance.</source>
          <target state="translated">&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;は、&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;と互換性があり、レガシーQGLWidgetと同様のAPIを使用してOpenGLレンダリングを実行するウィンドウを簡単に作成できるようにする拡張&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;です。&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;とは異なり、&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;はウィジェットモジュールに依存せず、より優れたパフォーマンスを提供します。</target>
        </trans-unit>
        <trans-unit id="d21e6a4a791e8f6f914381b16be6c8af68667d80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; supports multiple update behaviors. The default, &lt;code&gt;NoPartialUpdate&lt;/code&gt; is equivalent to a regular, OpenGL-based &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; or the legacy QGLWidget. In contrast, &lt;code&gt;PartialUpdateBlit&lt;/code&gt; and &lt;code&gt;PartialUpdateBlend&lt;/code&gt; are more in line with &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;'s way of working, where there is always an extra, dedicated framebuffer object present. These modes allow, by sacrificing some performance, redrawing only a smaller area on each paint and having the rest of the content preserved from of the previous frame. This is useful for applications than render incrementally using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, because this way they do not have to redraw the entire window content on each &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;() call.</source>
          <target state="translated">&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt;は複数の更新動作をサポートしています。デフォルトの &lt;code&gt;NoPartialUpdate&lt;/code&gt; は、通常のOpenGLベースの&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;またはレガシーQGLWidgetと同等です。これとは対照的に、 &lt;code&gt;PartialUpdateBlit&lt;/code&gt; と &lt;code&gt;PartialUpdateBlend&lt;/code&gt; は、よりに沿ったもので&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;常に余分な、専用のフレームバッファオブジェクトが存在し、作業のの道、。これらのモードでは、パフォーマンスを犠牲にして、各ペイントの小さな領域のみを再描画し、残りのコンテンツを前のフレームから保持することができます。これは、使用してインクリメンタルレンダリングよりも用途に有用である&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt;、この方法は、彼らがそれぞれのウィンドウ全体のコンテンツ再描画する必要はありませんので、&lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGLを&lt;/a&gt;（）呼び出します。</target>
        </trans-unit>
        <trans-unit id="ce65e812939b692885c34fe07301dfda75cb69ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwindow#UpdateBehavior-enum&quot;&gt;QOpenGLWindow::UpdateBehavior&lt;/a&gt; QOpenGLWindow::updateBehavior() const</source>
          <target state="translated">&lt;a href=&quot;qopenglwindow#UpdateBehavior-enum&quot;&gt;QOpenGLWindow :: UpdateBehavior&lt;/a&gt; QOpenGLWindow :: updateBehavior（）const</target>
        </trans-unit>
        <trans-unit id="2574c2bc76dd77fd9e2f3197c973878188554837" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwindow#initializeGL&quot;&gt;initializeGL&lt;/a&gt;() to perform OpenGL resource initialization</source>
          <target state="translated">&lt;a href=&quot;qopenglwindow#initializeGL&quot;&gt;initializeGL&lt;/a&gt;（）はOpenGLリソースの初期化を実行します</target>
        </trans-unit>
        <trans-unit id="780c741f5db00140423d14ff9c31fe102f822b9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;() to issue OpenGL commands or draw using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;（）OpenGLのコマンドを発行したり、使用して描画する&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="90efdfd12ce58c768486c86f4322ecf427318461" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qopenglwindow#resizeGL&quot;&gt;resizeGL&lt;/a&gt;() to set up the transformation matrices and other window size dependent resources</source>
          <target state="translated">&lt;a href=&quot;qopenglwindow#resizeGL&quot;&gt;resizeGL&lt;/a&gt;（）は、変換行列と他のウィンドウサイズに依存するリソースを設定します</target>
        </trans-unit>
        <trans-unit id="88b21a5bd536791053de5cc5dec9cce8789ddcf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qoperatingsystemversion#OSType-enum&quot;&gt;QOperatingSystemVersion::OSType&lt;/a&gt; QOperatingSystemVersion::type() const</source>
          <target state="translated">&lt;a href=&quot;qoperatingsystemversion#OSType-enum&quot;&gt;QOperatingSystemVersion :: OSType&lt;/a&gt; QOperatingSystemVersion :: type（）const</target>
        </trans-unit>
        <trans-unit id="98dbb4095210d38fd9c6bd2cd4db4ce1ec11121b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qoperatingsystemversion#majorVersion&quot;&gt;majorVersion&lt;/a&gt;, &lt;a href=&quot;qoperatingsystemversion#minorVersion&quot;&gt;minorVersion&lt;/a&gt;, and patchVersion from &lt;a href=&quot;https://developer.apple.com/reference/foundation/nsprocessinfo/1410906-operatingsystemversion?language=objc&quot;&gt;NSProcessInfo.operatingSystemVersion&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qoperatingsystemversion#majorVersion&quot;&gt;NSProcessInfo.operatingSystemVersionのmajorVersion&lt;/a&gt;、&lt;a href=&quot;qoperatingsystemversion#minorVersion&quot;&gt;minorVersion&lt;/a&gt;、および&lt;a href=&quot;https://developer.apple.com/reference/foundation/nsprocessinfo/1410906-operatingsystemversion?language=objc&quot;&gt;patchVersion&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bd4faaac7fb8a0230018323ff93e27e9e1b8100b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qorientationreading&quot;&gt;QOrientationReading&lt;/a&gt; *QOrientationSensor::reading() const</source>
          <target state="translated">&lt;a href=&quot;qorientationreading&quot;&gt;QOrientationReading&lt;/a&gt; * QOrientationSensor :: reading（）const</target>
        </trans-unit>
        <trans-unit id="17ff0da24a3cf2203235862734df6e5a7fd60a4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagedpaintdevice#PageSize-enum&quot;&gt;QPagedPaintDevice::PageSize&lt;/a&gt; QPagedPaintDevice::pageSize() const</source>
          <target state="translated">&lt;a href=&quot;qpagedpaintdevice#PageSize-enum&quot;&gt;QPagedPaintDevice :: PageSize&lt;/a&gt; QPagedPaintDevice :: pageSize（）const</target>
        </trans-unit>
        <trans-unit id="95ffde829088589bbbac2efe5998c95f5eca4ee8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagedpaintdevice#PdfVersion-enum&quot;&gt;QPagedPaintDevice::PdfVersion&lt;/a&gt; QPdfWriter::pdfVersion() const</source>
          <target state="translated">&lt;a href=&quot;qpagedpaintdevice#PdfVersion-enum&quot;&gt;QPagedPaintDevice :: PdfVersion&lt;/a&gt; QPdfWriter :: pdfVersion（）const</target>
        </trans-unit>
        <trans-unit id="32adf6c71f18a49445db4d259eb1d0b50f66006d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagedpaintdevice#PdfVersion-enum&quot;&gt;QPagedPaintDevice::PdfVersion&lt;/a&gt; QPrinter::pdfVersion() const</source>
          <target state="translated">&lt;a href=&quot;qpagedpaintdevice#PdfVersion-enum&quot;&gt;QPagedPaintDevice :: PdfVersion&lt;/a&gt; QPrinter :: pdfVersion（）const</target>
        </trans-unit>
        <trans-unit id="c457ea67af8ecf48436cdadb99d9544249a10ec3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagedpaintdevice#setPageLayout&quot;&gt;setPageLayout&lt;/a&gt;() tells QPrinter which page orientation to use, and what size to expect from the printer.</source>
          <target state="translated">&lt;a href=&quot;qpagedpaintdevice#setPageLayout&quot;&gt;setPageLayout&lt;/a&gt;（）は、QPrinterに、使用するページの向きと、プリンターに期待されるサイズを指示します。</target>
        </trans-unit>
        <trans-unit id="35fd80e52e18c18855e446381a1ee4eb36108ea9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; QPagedPaintDevice::pageLayout() const</source>
          <target state="translated">&lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; QPagedPaintDevice :: pageLayout（）const</target>
        </trans-unit>
        <trans-unit id="bd6b4d4a56516e406467f8ba8b3a5057f8a77c74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; QPdfWriter::pageLayout() const</source>
          <target state="translated">&lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; QPdfWriter :: pageLayout（）const</target>
        </trans-unit>
        <trans-unit id="f7c79e9f0ea7b1e1de10305d3de69cb5b93ada2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; QPrinter::pageLayout() const</source>
          <target state="translated">&lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; QPrinter :: pageLayout（）const</target>
        </trans-unit>
        <trans-unit id="ec6142004dd5e898290653682d435fea5139e060" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;QPageLayout::Mode&lt;/a&gt; QPageLayout::mode() const</source>
          <target state="translated">&lt;a href=&quot;qpagelayout#Mode-enum&quot;&gt;QPageLayout :: Mode&lt;/a&gt; QPageLayout :: mode（）const</target>
        </trans-unit>
        <trans-unit id="11f202c2380a39c1cae0053e349aa9eb1659bd08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; QPageLayout::orientation() const</source>
          <target state="translated">&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientation&lt;/a&gt; QPageLayout :: orientation（）const</target>
        </trans-unit>
        <trans-unit id="632f8e4fac417c3dc96fb7a8fb294f43cdfeb4b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; QPrintPreviewWidget::orientation() const</source>
          <target state="translated">&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; QPrintPreviewWidget::orientation() const</target>
        </trans-unit>
        <trans-unit id="93c8532ceadf763a4bde56f632d8d55821c20bd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;QPageLayout::operator=(&lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt;＆QPageLayout :: operator =（&lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="e410b9e9a658618bf9267a7daab427bcfd330146" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;QPageLayout::operator=(const &lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt;＆QPageLayout :: operator =（const &lt;a href=&quot;qpagelayout#QPageLayout&quot;&gt;QPageLayout&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9406413db6da0c76cec18d47624c90eca8c5f9ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout::Unit&lt;/a&gt; QPageLayout::units() const</source>
          <target state="translated">&lt;a href=&quot;qpagelayout#Unit-enum&quot;&gt;QPageLayout :: Unit&lt;/a&gt; QPageLayout :: units（）const</target>
        </trans-unit>
        <trans-unit id="a6327cbf18e34cbba931809f7623ba7726344752" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpageranges#QPageRanges&quot;&gt;QPageRanges&lt;/a&gt; &amp;amp;QPageRanges::operator=(&lt;a href=&quot;qpageranges#QPageRanges&quot;&gt;QPageRanges&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpageranges#QPageRanges&quot;&gt;QPageRanges&lt;/a&gt;＆QPageRanges :: operator =（&lt;a href=&quot;qpageranges#QPageRanges&quot;&gt;QPageRanges&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="80160e9f1ef9f27c7e02e4bc986ef51491473e35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpageranges#QPageRanges&quot;&gt;QPageRanges&lt;/a&gt; &amp;amp;QPageRanges::operator=(const &lt;a href=&quot;qpageranges#QPageRanges&quot;&gt;QPageRanges&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpageranges#QPageRanges&quot;&gt;QPageRanges&lt;/a&gt;＆QPageRanges :: operator =（const &lt;a href=&quot;qpageranges#QPageRanges&quot;&gt;QPageRanges&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="25f6d3058428d2f7c8510563a74ce00c93253a64" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; QPageLayout::pageSize() const</source>
          <target state="translated">&lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; QPageLayout :: pageSize（）const</target>
        </trans-unit>
        <trans-unit id="dd77bf5d0ffe48c99b80e2c07bd002c55039fa2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; QPrinterInfo::defaultPageSize() const</source>
          <target state="translated">&lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; QPrinterInfo :: defaultPageSize（）const</target>
        </trans-unit>
        <trans-unit id="fa47f3748df2d8dc4868352f4062ad4fe89ed0da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; QPrinterInfo::maximumPhysicalPageSize() const</source>
          <target state="translated">&lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; QPrinterInfo :: maximumPhysicalPageSize（）const</target>
        </trans-unit>
        <trans-unit id="f3fbb3324328f3e8f17dcadba687b368e218acbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; QPrinterInfo::minimumPhysicalPageSize() const</source>
          <target state="translated">&lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; QPrinterInfo :: minimumPhysicalPageSize（）const</target>
        </trans-unit>
        <trans-unit id="894a3a3a9501dcdf91e7ceff55de2537cbbaca1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize::PageSizeId&lt;/a&gt; QPageSize::id() const</source>
          <target state="translated">&lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize :: PageSizeId&lt;/a&gt; QPageSize :: id（）const</target>
        </trans-unit>
        <trans-unit id="a6384be9a697a57ddd2ba60100808d6e4bcc4566" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;QPageSize::operator=(&lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt;＆QPageSize :: operator =（&lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="e157a40d1ad05d2ed132f3bfad41641d43de220d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;QPageSize::operator=(const &lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt;＆QPageSize :: operator =（const &lt;a href=&quot;qpagesize#QPageSize&quot;&gt;QPageSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="6af918b9ccb7c4cadff9e57f011b0df8f3406808" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize::Unit&lt;/a&gt; QPageSize::definitionUnits() const</source>
          <target state="translated">&lt;a href=&quot;qpagesize#Unit-enum&quot;&gt;QPageSize :: Unit&lt;/a&gt; QPageSize :: definitionUnits（）const</target>
        </trans-unit>
        <trans-unit id="2944ca7753161d17450bfaeefddb18aa405ac46b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *QAbstractTextDocumentLayout::paintDevice() const</source>
          <target state="translated">&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; * QAbstractTextDocumentLayout :: paintDevice（）const</target>
        </trans-unit>
        <trans-unit id="fc057ed1637f0f3576bbbbe22cefcb70e27b6558" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *QBackingStore::paintDevice()</source>
          <target state="translated">&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; * QBackingStore :: paintDevice（）</target>
        </trans-unit>
        <trans-unit id="104959552e6fc406e11831482124351b0db0e098" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *QPaintEngine::paintDevice() const</source>
          <target state="translated">&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; * QPaintEngine :: paintDevice（）const</target>
        </trans-unit>
        <trans-unit id="ca0a3feaca416f2a0d28550dd1f4cf26657f2d18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *QPainter::device() const</source>
          <target state="translated">&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; * QPainter :: device（）const</target>
        </trans-unit>
        <trans-unit id="f69bb21476e145e1027eb1c0ab68ee5b7c041ace" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintdevicewindow&quot;&gt;QPaintDeviceWindow&lt;/a&gt; and &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpaintdevicewindow&quot;&gt;QPaintDeviceWindow&lt;/a&gt;と&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="694b18d942e8db5bfa37b0c66271287a5ab0cc6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintdevicewindow&quot;&gt;QPaintDeviceWindow&lt;/a&gt; is like a regular &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, with the added functionality of being a paint device too. Whenever the content needs to be updated, the virtual &lt;a href=&quot;qpaintdevicewindow#paintEvent&quot;&gt;paintEvent&lt;/a&gt;() function is called. Subclasses, that reimplement this function, can then simply open a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; on the window.</source>
          <target state="translated">&lt;a href=&quot;qpaintdevicewindow&quot;&gt;QPaintDeviceWindow&lt;/a&gt;は通常の&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;に似ており、ペイントデバイスであるという機能も追加されています。コンテンツを更新する必要があるときはいつでも、仮想&lt;a href=&quot;qpaintdevicewindow#paintEvent&quot;&gt;paintEvent&lt;/a&gt;（）関数が呼び出されます。この関数を再実装するサブクラスは、ウィンドウ&lt;a href=&quot;qpainter&quot;&gt;上でQPainter&lt;/a&gt;を開くことができます。</target>
        </trans-unit>
        <trans-unit id="b90ca3de2a708230abe49a9025dcbacdbbc0c665" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintdevicewindow&quot;&gt;QPaintDeviceWindow&lt;/a&gt;, &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;, and &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpaintdevicewindow&quot;&gt;QPaintDeviceWindow&lt;/a&gt;、&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;、および&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff75b7a3adc72d4bc3411395de7f70f553ae41a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; *QPainter::paintEngine() const</source>
          <target state="translated">&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; * QPainter :: paintEngine（）const</target>
        </trans-unit>
        <trans-unit id="40ea3ddae126d8e2b8ccc05b7e5a37018b531d20" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; is created and owned by the &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; that created it.</source>
          <target state="translated">&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;は、&lt;a href=&quot;qpaintdevice&quot;&gt;それ&lt;/a&gt;を作成したQPaintDeviceによって作成および所有されます。</target>
        </trans-unit>
        <trans-unit id="b11e6b64bf847aa3035452135b84d6ab73cd3c29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyFlags&lt;/a&gt; QPaintEngineState::state() const</source>
          <target state="translated">&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyFlags&lt;/a&gt; QPaintEngineState :: state（）const</target>
        </trans-unit>
        <trans-unit id="90bc9a1ecb1b3595ec6a7bc443047f8d2274ab3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate&quot;&gt;QPaintEngineState&lt;/a&gt; records which properties that have changed since the last time the paint engine was updated, as well as their current value.</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate&quot;&gt;QPaintEngineState&lt;/a&gt;は、ペイントエンジンが最後に更新されてから変更されたプロパティと、それらの現在の値を記録します。</target>
        </trans-unit>
        <trans-unit id="62aec64a64eeee6babbc8feb39c46caee74cf576" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#backgroundBrush&quot;&gt;backgroundBrush&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#backgroundBrush&quot;&gt;backgroundBrush&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="04cdc6b57be319476ed89d3b9117b67c98ba8c5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#backgroundMode&quot;&gt;backgroundMode&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#backgroundMode&quot;&gt;backgroundMode&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="f36f748cd7a4833c358deb6e703ca7ad06b462ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#brush&quot;&gt;brush&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#brush&quot;&gt;brush&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="c315228fd41c7999bb5d4e9d862cac16051a2eaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#brushOrigin&quot;&gt;brushOrigin&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#brushOrigin&quot;&gt;brushOrigin&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="7befd8d17d7e1c9c2b9a84844e292e228469253a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#clipOperation&quot;&gt;clipOperation&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#clipOperation&quot;&gt;clipOperation&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="30904268170d471b141e4b9fec756f28d497cd0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#clipPath&quot;&gt;clipPath&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#clipPath&quot;&gt;clipPath&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="6ef1b6803caa214afd3161ed55062ab841ec33eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#clipRegion&quot;&gt;clipRegion&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#clipRegion&quot;&gt;clipRegion&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="0441ac1ae1deef0f4cf60752cc779b9c741096a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#compositionMode&quot;&gt;compositionMode&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#compositionMode&quot;&gt;compositionMode&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="76602c6c8e5c2c539ed4297dba6fe1107534f2c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#font&quot;&gt;font&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#font&quot;&gt;font&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="cfae030a4f8431e653bffb1f398ec159d34eb52c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#isClipEnabled&quot;&gt;isClipEnabled&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#isClipEnabled&quot;&gt;isClipEnabled&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="9d6dec8cfbc156830b8d784b2a9b6e323e6ae33f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#pen&quot;&gt;pen&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#pen&quot;&gt;pen&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="d79dffe236e5ce3a4215dde2bdcc0acb0b70d2f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#renderHints&quot;&gt;renderHints&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#renderHints&quot;&gt;renderHints&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="8bcdd0b2b5b7c1606dd4ede7ec37eda358194222" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpaintenginestate#transform&quot;&gt;transform&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpaintenginestate#transform&quot;&gt;transform&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="9d2fdda9c1e387175e6b6d9e6a3548011e532b44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *QPaintEngine::painter() const</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainterの&lt;/a&gt; * QPaintEngine ::画家（）constは</target>
        </trans-unit>
        <trans-unit id="8a43f1920a5f1ad34563cbbee5ac660083817bd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; *QPaintEngineState::painter() const</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainterの&lt;/a&gt; * QPaintEngineState ::画家（）constは</target>
        </trans-unit>
        <trans-unit id="ac10365f7ae32cb7a4402cbe656d056a05564095" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; also provides the &lt;a href=&quot;qpainter#fillPath&quot;&gt;fillPath&lt;/a&gt;() function which fills the given &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; with the given &lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt;, and the &lt;a href=&quot;qpainter#strokePath&quot;&gt;strokePath&lt;/a&gt;() function that draws the outline of the given path (i.e. strokes the path).</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainterのは、&lt;/a&gt;また、提供&lt;a href=&quot;qpainter#fillPath&quot;&gt;fillPath&lt;/a&gt;与え塗りつぶし（）関数&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;与えられたと&lt;a href=&quot;qbrush&quot;&gt;QBrush&lt;/a&gt;、および&lt;a href=&quot;qpainter#strokePath&quot;&gt;strokePath&lt;/a&gt;指定したパスのアウトラインを描く（）関数を（つまり、パスをストローク）。</target>
        </trans-unit>
        <trans-unit id="95a267530ec611a0791671105e03fc842fcd6c7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; can also draw aligned text and pixmaps.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;は整列されたテキストとピックスマップも描画できます。</target>
        </trans-unit>
        <trans-unit id="2b31f11f214292c98a7385de824e65646db4badb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; can clip any drawing operation to a rectangle, a region, or a vector path. The current clip is available using the functions &lt;a href=&quot;qpainter#clipRegion&quot;&gt;clipRegion&lt;/a&gt;() and &lt;a href=&quot;qpainter#clipPath&quot;&gt;clipPath&lt;/a&gt;(). Whether paths or regions are preferred (faster) depends on the underlying &lt;a href=&quot;qpainter#paintEngine&quot;&gt;paintEngine&lt;/a&gt;(). For example, the &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; paint engine prefers paths while the X11 paint engine prefers regions. Setting a clip is done in the painters logical coordinates.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;は、描画操作を長方形、領域、またはベクトルパスにクリップできます。現在のクリップは、&lt;a href=&quot;qpainter#clipRegion&quot;&gt;clipRegion&lt;/a&gt;（）および&lt;a href=&quot;qpainter#clipPath&quot;&gt;clipPath&lt;/a&gt;（）関数を使用して利用できます。パスとリージョンのどちらが優先されるか（高速）は、基礎となる&lt;a href=&quot;qpainter#paintEngine&quot;&gt;paintEngine&lt;/a&gt;（）に依存します。たとえば、&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;ペイントエンジンはパスを優先し、X11ペイントエンジンはリージョンを優先します。クリップの設定は、ペインタの論理座標で行われます。</target>
        </trans-unit>
        <trans-unit id="bc594e9fb71d4befb7363eb6a23ffd78a4720b0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; considers the top-left corner of an image as its origin, while OpenGL considers the bottom-left corner of a texture as its origin. An easy way to account for this difference is to set a custom viewport on the painter before doing any other painting:</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;は画像の左上隅を原点と見なし、OpenGLはテクスチャの左下隅を原点と見なします。この違いを説明する簡単な方法は、他のペイントを行う前に、ペインターにカスタムビューポートを設定することです。</target>
        </trans-unit>
        <trans-unit id="853494b35cc772b63caaa89014dd0a37d37ffdd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; has functions to translate, scale, shear and rotate the coordinate system without using a &lt;a href=&quot;qmatrix&quot;&gt;QMatrix&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainterのは&lt;/a&gt;、変換する機能を有しているスケール、剪断及び使用せずに座標系を回転&lt;a href=&quot;qmatrix&quot;&gt;QMatrixを&lt;/a&gt;。例えば：</target>
        </trans-unit>
        <trans-unit id="9e822a4ac1d5678c718674efdc93952125142ed7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; has functions to translate, scale, shear and rotate the coordinate system without using a &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainterのは&lt;/a&gt;、変換する機能を有しているスケール、剪断及び使用せずに座標系を回転&lt;a href=&quot;qtransform&quot;&gt;QTransformを&lt;/a&gt;。例えば：</target>
        </trans-unit>
        <trans-unit id="c5567c59ca42635a5b4449a994c07f3ff5ac9fcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; has functions to translate, scale, shear and rotate the coordinate system without using a QMatrix. For example:</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainterのは&lt;/a&gt;、変換スケール、剪断およびQMatrixを使用せずに座標系を回転させる機能を有します。例えば：</target>
        </trans-unit>
        <trans-unit id="3cd44fb40a8f16b3bacbc96cc668e4d0e5701647" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; has functions to translate, scale, shear and rotate the coordinate system without using a QTransform. For example:</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainterのは&lt;/a&gt;、変換スケール、剪断及びQTransformを使用せずに座標系を回転させる機能を有します。例えば：</target>
        </trans-unit>
        <trans-unit id="2a78b89c55183662122703672a5856d23fc32e6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; is a rich framework that allows developers to do a great variety of graphical operations, such as gradients, composition modes and vector graphics. And &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; can do this across a variety of different hardware and software stacks. Naturally the underlying combination of hardware and software has some implications for performance, and ensuring that every single operation is fast in combination with all the various combinations of composition modes, brushes, clipping, transformation, etc, is close to an impossible task because of the number of permutations. As a compromise we have selected a subset of the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; API and backends, where performance is guaranteed to be as good as we can sensibly get it for the given combination of hardware and software.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;は、開発者がグラデーション、合成モード、ベクターグラフィックスなどのさまざまなグラフィック操作を実行できるようにするリッチフレームワークです。そして、&lt;a href=&quot;qpainter&quot;&gt;QPainterのは、&lt;/a&gt;さまざまなハードウェアとソフトウェアスタックの様々な全体でこれを行うことができます。当然のことながら、ハードウェアとソフトウェアの基本的な組み合わせはパフォーマンスに影響を及ぼします。コンポジションモード、ブラシ、クリッピング、変換などのさまざまな組み合わせと組み合わせてすべての単一操作を高速にすることは、不可能であるため、順列の数。妥協案として、&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; APIとバックエンドのサブセットを選択しました。ハードウェアとソフトウェアの特定の組み合わせで、パフォーマンスを確実に得ることができる限り、パフォーマンスが保証されています。</target>
        </trans-unit>
        <trans-unit id="98dc8caaf3886fbaf7ec15e32572f052d99d53e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; is used to perform drawing operations, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; is an abstraction of a two-dimensional space that can be painted on using a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, and &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; provides the interface that the painter uses to draw onto different types of devices. The &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; class is used internally by &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; and &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;, and is hidden from application programmers unless they create their own device type.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainterのが&lt;/a&gt;描画操作を実行するために使用され、&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDeviceを&lt;/a&gt;使用して塗装することができ、二次元空間の抽象化である&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt;、そして&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngineは、&lt;/a&gt;画家が使用する異なるタイプのデバイス上に描画することインターフェースを提供します。&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngineの&lt;/a&gt;クラスはによって内部的に使用され&lt;a href=&quot;qpainter&quot;&gt;QPainterの&lt;/a&gt;と&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;、と彼らは自分のデバイスタイプを作成しない限り、アプリケーションプログラマから隠されています。</target>
        </trans-unit>
        <trans-unit id="07c8d46e6cbffc8e5edb1c937fb62f693c546403" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; paints into a &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt; using the GL paint engine. Painting can be faster as no texture upload is required, but anti-aliasing quality is not as good as if using an image. This render target allows faster rendering in some cases, but you should avoid using it if the item is resized often.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainterの&lt;/a&gt;に塗料&lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt; GLペイントエンジンを使用しました。テクスチャをアップロードする必要がないため、ペイントはより高速になりますが、アンチエイリアスの品質は、イメージを使用する場合ほど良くありません。このレンダーターゲットを使用すると、レンダリングが高速になる場合がありますが、アイテムのサイズが頻繁に変更される場合は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="95c5288cec259a521099ebea189280f6ce69c39c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; provides functions to draw most primitives: &lt;a href=&quot;qpainter#drawPoint&quot;&gt;drawPoint&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawPoints&quot;&gt;drawPoints&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawLine&quot;&gt;drawLine&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawRect&quot;&gt;drawRect&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawRoundedRect&quot;&gt;drawRoundedRect&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawEllipse&quot;&gt;drawEllipse&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawArc&quot;&gt;drawArc&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawPie&quot;&gt;drawPie&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawChord&quot;&gt;drawChord&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawPolyline&quot;&gt;drawPolyline&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawPolygon&quot;&gt;drawPolygon&lt;/a&gt;(), &lt;a href=&quot;qpainter#drawConvexPolygon&quot;&gt;drawConvexPolygon&lt;/a&gt;() and drawCubicBezier(). The two convenience functions, &lt;a href=&quot;qpainter#drawRects&quot;&gt;drawRects&lt;/a&gt;() and &lt;a href=&quot;qpainter#drawLines&quot;&gt;drawLines&lt;/a&gt;(), draw the given number of rectangles or lines in the given array of &lt;a href=&quot;qrect&quot;&gt;QRects&lt;/a&gt; or &lt;a href=&quot;qline&quot;&gt;QLines&lt;/a&gt; using the current pen and brush.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainterのは、&lt;/a&gt;ほとんどのプリミティブを描画する機能を提供します。&lt;a href=&quot;qpainter#drawPoint&quot;&gt;drawPoint&lt;/a&gt;（）、&lt;a href=&quot;qpainter#drawPoints&quot;&gt;drawPoints&lt;/a&gt;（）、&lt;a href=&quot;qpainter#drawLine&quot;&gt;drawLine&lt;/a&gt;（）、&lt;a href=&quot;qpainter#drawRect&quot;&gt;のdrawRect&lt;/a&gt;（）、&lt;a href=&quot;qpainter#drawRoundedRect&quot;&gt;drawRoundedRect&lt;/a&gt;（）、&lt;a href=&quot;qpainter#drawEllipse&quot;&gt;drawEllipse&lt;/a&gt;（）、&lt;a href=&quot;qpainter#drawArc&quot;&gt;drawArc&lt;/a&gt;（）、&lt;a href=&quot;qpainter#drawPie&quot;&gt;drawPie&lt;/a&gt;（）、&lt;a href=&quot;qpainter#drawChord&quot;&gt;drawChord&lt;/a&gt;（）、&lt;a href=&quot;qpainter#drawPolyline&quot;&gt;drawPolyline&lt;/a&gt;（）、&lt;a href=&quot;qpainter#drawPolygon&quot;&gt;drawPolygon&lt;/a&gt;（ ）、&lt;a href=&quot;qpainter#drawConvexPolygon&quot;&gt;drawConvexPolygon&lt;/a&gt;（）およびdrawCubicBezier（）。2つの便利な関数、&lt;a href=&quot;qpainter#drawRects&quot;&gt;drawRects&lt;/a&gt;（）と&lt;a href=&quot;qpainter#drawLines&quot;&gt;drawLines&lt;/a&gt;（）は、指定された&lt;a href=&quot;qrect&quot;&gt;QRects&lt;/a&gt;または&lt;a href=&quot;qline&quot;&gt;QLinesの&lt;/a&gt;配列に、指定された数の長方形または線を描画します。 現在のペンとブラシを使用します。</target>
        </trans-unit>
        <trans-unit id="8fb907d74938a909d1c936aff5c6fce86a035afc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; provides highly optimized functions to do most of the drawing GUI programs require. It can draw everything from simple graphical primitives (represented by the &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;, &lt;a href=&quot;qline&quot;&gt;QLine&lt;/a&gt;, &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;, &lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt; and &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; classes) to complex shapes like vector paths. In Qt vector paths are represented by the &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; class. &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; provides a container for painting operations, enabling graphical shapes to be constructed and reused.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;は高度に最適化された機能を提供し、描画GUIプログラムが必要とするほとんどの描画を行います。単純なグラフィカルプリミティブ（&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;、&lt;a href=&quot;qline&quot;&gt;QLine&lt;/a&gt;、&lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;、&lt;a href=&quot;qregion&quot;&gt;QRegion&lt;/a&gt;、&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;クラスで表される）からベクトルパスのような複雑な形状まですべてを描画できます。 Qtでは、ベクトルパスは&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;クラスによって表されます。&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;は描画操作用のコンテナーを提供し、グラフィック形状を構築して再利用できるようにします。</target>
        </trans-unit>
        <trans-unit id="1fc8571d2ef0c175897e502be04e773516a58d72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; provides highly optimized functions to do most of the drawing GUI programs require. It can draw everything from simple lines to complex shapes like pies and chords. It can also draw aligned text and pixmaps. Normally, it draws in a &quot;natural&quot; coordinate system, but it can also do view and world transformation. &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; can operate on any object that inherits the &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;は高度に最適化された機能を提供し、描画GUIプログラムが必要とするほとんどの描画を行います。単純な線からパイやコードのような複雑な形状まで、すべてを描くことができます。また、整列されたテキストやピックスマップを描画することもできます。通常、「自然な」座標系で描画しますが、ビューと世界の変換も実行できます。&lt;a href=&quot;qpainter&quot;&gt;QPainterのは、&lt;/a&gt;継承する任意のオブジェクトを操作することができます&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDeviceの&lt;/a&gt;クラスを。</target>
        </trans-unit>
        <trans-unit id="b0c222bd089d139e476b6707180e6b5d895ad60e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; provides the &lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;CompositionMode&lt;/a&gt; enum which defines the Porter-Duff rules for digital image compositing; it describes a model for combining the pixels in one image, the source, with the pixels in another image, the destination.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;は、デジタル画像合成のためのPorter-Duffルールを定義する&lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;CompositionMode&lt;/a&gt;列挙を提供します。ある画像のピクセル（ソース）と別の画像のピクセル（宛先）を組み合わせるためのモデルについて説明しています。</target>
        </trans-unit>
        <trans-unit id="f9e3ab79cbe33bc1c46bd945e07da72dca873053" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;QPainter::CompositionMode&lt;/a&gt; QPaintEngineState::compositionMode() const</source>
          <target state="translated">&lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;&lt;/a&gt;QPainter :: CompositionMode QPaintEngineState :: compositionMode（）const</target>
        </trans-unit>
        <trans-unit id="dac6adcb4b6ea2c22f537c9304f91fabe0798742" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;QPainter::CompositionMode&lt;/a&gt; QPainter::compositionMode() const</source>
          <target state="translated">&lt;a href=&quot;qpainter#CompositionMode-enum&quot;&gt;QPainter :: CompositionMode&lt;/a&gt; QPainter :: compositionMode（）const</target>
        </trans-unit>
        <trans-unit id="86c41b009f38bfadc8a00b53419c9d4e61bdeea3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter::RenderHints&lt;/a&gt; QPaintEngineState::renderHints() const</source>
          <target state="translated">&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter :: RenderHints&lt;/a&gt; QPaintEngineState :: renderHints（）const</target>
        </trans-unit>
        <trans-unit id="224c5234a52ed6e2be9f66e629f53ac6d3b38a16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter::RenderHints&lt;/a&gt; QPainter::renderHints() const</source>
          <target state="translated">&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter :: RenderHints QPainter&lt;/a&gt; :: renderHints（）const</target>
        </trans-unit>
        <trans-unit id="ded9fd940b7a4e67524d25a1bef7a139d9aba1b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter::TextAntialiasing&lt;/a&gt; is enabled by default.</source>
          <target state="translated">&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;QPainter :: TextAntialiasing&lt;/a&gt;はデフォルトで有効になっています。</target>
        </trans-unit>
        <trans-unit id="7299029788d2558de4a6804dfac19bba823bc647" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#background&quot;&gt;background&lt;/a&gt;() only applies when &lt;a href=&quot;qpainter#backgroundMode&quot;&gt;backgroundMode&lt;/a&gt;() is &lt;a href=&quot;qt#BGMode-enum&quot;&gt;Qt::OpaqueMode&lt;/a&gt; and &lt;a href=&quot;qpainter#pen&quot;&gt;pen&lt;/a&gt;() is a stipple. In that case, it describes the color of the background pixels in the stipple.</source>
          <target state="translated">&lt;a href=&quot;qpainter#background&quot;&gt;background&lt;/a&gt;（）は、&lt;a href=&quot;qpainter#backgroundMode&quot;&gt;backgroundMode&lt;/a&gt;（）が&lt;a href=&quot;qt#BGMode-enum&quot;&gt;Qt :: OpaqueModeで&lt;/a&gt;、&lt;a href=&quot;qpainter#pen&quot;&gt;pen&lt;/a&gt;（）がスティプルの場合にのみ適用されます。その場合、スティプルの背景ピクセルの色を表します。</target>
        </trans-unit>
        <trans-unit id="f8f32989b7e989af555e849c5ed76e3804cb9555" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#backgroundMode&quot;&gt;backgroundMode&lt;/a&gt;() defines whether there is a &lt;a href=&quot;qpainter#background&quot;&gt;background&lt;/a&gt;() or not, i.e it is either &lt;a href=&quot;qt#BGMode-enum&quot;&gt;Qt::OpaqueMode&lt;/a&gt; or &lt;a href=&quot;qt#BGMode-enum&quot;&gt;Qt::TransparentMode&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qpainter#backgroundMode&quot;&gt;backgroundMode&lt;/a&gt;（）は、&lt;a href=&quot;qpainter#background&quot;&gt;背景&lt;/a&gt;（）があるかどうかを定義します。つまり、&lt;a href=&quot;qt#BGMode-enum&quot;&gt;Qt :: OpaqueMode&lt;/a&gt;または&lt;a href=&quot;qt#BGMode-enum&quot;&gt;Qt :: TransparentModeの&lt;/a&gt;いずれかです。</target>
        </trans-unit>
        <trans-unit id="458b3b67cf7e985c1eb5788a89f15b2e935ba72d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#beginNativePainting&quot;&gt;beginNativePainting()&lt;/a&gt; will also trigger this method.</source>
          <target state="translated">&lt;a href=&quot;qpainter#beginNativePainting&quot;&gt;beginNativePainting（）&lt;/a&gt;もこのメソッドをトリガーします。</target>
        </trans-unit>
        <trans-unit id="e34b7152b172e3250a5837075e770bda794febfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#brush&quot;&gt;brush&lt;/a&gt;() defines the color or pattern that is used for filling shapes.</source>
          <target state="translated">&lt;a href=&quot;qpainter#brush&quot;&gt;ブラシ&lt;/a&gt;（）は、図形の塗りつぶしに使用される色またはパターンを定義します。</target>
        </trans-unit>
        <trans-unit id="ebed1560dc3635d1ce5b730dafa615d7cbab594a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#brushOrigin&quot;&gt;brushOrigin&lt;/a&gt;() defines the origin of the tiled brushes, normally the origin of widget's background.</source>
          <target state="translated">&lt;a href=&quot;qpainter#brushOrigin&quot;&gt;BrushOrigin&lt;/a&gt;（）は、タイルブラシの原点を定義します。通常、ウィジェットの背景の原点です。</target>
        </trans-unit>
        <trans-unit id="05599ca53de55f9bf05f816615944fb4ea45da1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#drawText&quot;&gt;QPainter::drawText&lt;/a&gt;(int x, int y, const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;str) will always draw the string with its left edge at the position specified with the x, y parameters. This will usually give you left aligned strings. Arabic and Hebrew application strings are usually right aligned, so for these languages use the version of drawText() that takes a &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; since this will align in accordance with the language.</source>
          <target state="translated">&lt;a href=&quot;qpainter#drawText&quot;&gt;QPainter :: drawText&lt;/a&gt;（int x、int y、const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆str）は常に、x、yパラメータで指定された位置に左端を持つ文字列を描画します。これは通常、左揃えの文字列を提供します。アラビア語とヘブライ語のアプリケーションの文字列は、通常、右のこれらの言語がかかるのDrawText（のバージョン）を使用するようにするために、整列さ&lt;a href=&quot;qrect&quot;&gt;QRectを&lt;/a&gt;言語に合わせて整列する。このため、を。</target>
        </trans-unit>
        <trans-unit id="931f8e23f4c8e815435467f0486971e2bd55acdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#font&quot;&gt;font&lt;/a&gt;() is the font used for drawing text. If the painter &lt;a href=&quot;qpainter#isActive&quot;&gt;isActive&lt;/a&gt;(), you can retrieve information about the currently set font, and its metrics, using the &lt;a href=&quot;qpainter#fontInfo&quot;&gt;fontInfo&lt;/a&gt;() and &lt;a href=&quot;qpainter#fontMetrics&quot;&gt;fontMetrics&lt;/a&gt;() functions respectively.</source>
          <target state="translated">&lt;a href=&quot;qpainter#font&quot;&gt;font&lt;/a&gt;（）は、テキストの描画に使用されるフォントです。画家の場合&lt;a href=&quot;qpainter#isActive&quot;&gt;のisActiveは&lt;/a&gt;（）、あなたが使用して、現在設定されているフォント、およびその評価指標についての情報を取得することができ&lt;a href=&quot;qpainter#fontInfo&quot;&gt;FONTINFO&lt;/a&gt;（）および&lt;a href=&quot;qpainter#fontMetrics&quot;&gt;フォントメトリックス&lt;/a&gt;それぞれを（）関数。</target>
        </trans-unit>
        <trans-unit id="0e8e27734d0510dea80c52fc4cfa5246076b8a51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#fontInfo&quot;&gt;QPainter::fontInfo&lt;/a&gt;() returns the font info for a painter's current font. If the painter's font is changed later, the font info object is</source>
          <target state="translated">&lt;a href=&quot;qpainter#fontInfo&quot;&gt;QPainter :: fontInfo&lt;/a&gt;（）は、ペインターの現在のフォントのフォント情報を返します。ペインタのフォントが後で変更された場合、フォント情報オブジェクトは</target>
        </trans-unit>
        <trans-unit id="f05f9c72705cfa2f10c9619a11b70f5587bee01d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#fontMetrics&quot;&gt;QPainter::fontMetrics&lt;/a&gt;() returns the font metrics for a painter's current font. If the painter's font is changed later, the font metrics object is</source>
          <target state="translated">&lt;a href=&quot;qpainter#fontMetrics&quot;&gt;QPainter :: fontMetrics&lt;/a&gt;（）は、ペインターの現在のフォントのフォントメトリックを返します。ペインタのフォントが後で変更された場合、フォントメトリックオブジェクトは</target>
        </trans-unit>
        <trans-unit id="8c03a005ca125ef11d63d31f7dac628f86b48189" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#hasClipping&quot;&gt;hasClipping&lt;/a&gt;() tells whether the painter clips at all. (The paint device clips, too.) If the painter clips, it clips to &lt;a href=&quot;qpainter#clipRegion&quot;&gt;clipRegion&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qpainter#hasClipping&quot;&gt;hasClipping&lt;/a&gt;（）は、ペインタがまったくクリップするかどうかを示します。（ペイントデバイスもクリップします。）ペインターがクリップすると、&lt;a href=&quot;qpainter#clipRegion&quot;&gt;clipRegion&lt;/a&gt;（）にクリップします。</target>
        </trans-unit>
        <trans-unit id="c33e899466d61ffb34a71228453db2db7f8ce6c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#layoutDirection&quot;&gt;layoutDirection&lt;/a&gt;() defines the layout direction used by the painter when drawing text.</source>
          <target state="translated">&lt;a href=&quot;qpainter#layoutDirection&quot;&gt;layoutDirection&lt;/a&gt;（）は、テキストを描画するときにペインタが使用するレイアウト方向を定義します。</target>
        </trans-unit>
        <trans-unit id="e9a86a40d1233c813b6eeea386d9963753e4bcac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#pen&quot;&gt;pen&lt;/a&gt;() defines the color or stipple that is used for drawing lines or boundaries.</source>
          <target state="translated">&lt;a href=&quot;qpainter#pen&quot;&gt;pen&lt;/a&gt;（）は、線または境界の描画に使用される色またはスティプルを定義します。</target>
        </trans-unit>
        <trans-unit id="7d3056047a0536fe5ad72bed28c48b01f045e98b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#rotate&quot;&gt;rotate&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpainter#rotate&quot;&gt;rotate&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="26d2eae9a1292e6cdead49155f3c445fb4d4dfd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#scale&quot;&gt;scale&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpainter#scale&quot;&gt;scale&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="5d4dd354d6801e8f8ddf78b95a15696a01503a32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#translate&quot;&gt;translate&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpainter#translate&quot;&gt;translate&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="3c55044a17ff483461de845dd8c88f188521c737" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#viewTransformEnabled&quot;&gt;viewTransformEnabled&lt;/a&gt;() tells whether view transformation is enabled.</source>
          <target state="translated">&lt;a href=&quot;qpainter#viewTransformEnabled&quot;&gt;viewTransformEnabled&lt;/a&gt;（）は、ビュー変換が有効かどうかを示します。</target>
        </trans-unit>
        <trans-unit id="08523cb0ca2212ed40b608d18fb125cc5fbbc73f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#viewport&quot;&gt;viewport&lt;/a&gt;(), &lt;a href=&quot;qpainter#window&quot;&gt;window&lt;/a&gt;(), &lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt;() make up the painter's coordinate transformation system. For more information, see the &lt;a href=&quot;qpainter#coordinate-transformations&quot;&gt;Coordinate Transformations&lt;/a&gt; section and the &lt;a href=&quot;coordsys&quot;&gt;Coordinate System&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;qpainter#viewport&quot;&gt;ビューポート&lt;/a&gt;（）、&lt;a href=&quot;qpainter#window&quot;&gt;ウィンドウ&lt;/a&gt;（）、&lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt;（）は、ペインターの座標変換システムを構成します。詳細については、「&lt;a href=&quot;qpainter#coordinate-transformations&quot;&gt;座標変換」&lt;/a&gt;セクションおよび「&lt;a href=&quot;coordsys&quot;&gt;座標系&lt;/a&gt;」のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="4d845606292117129da438ebf95811280cf51af9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#viewport&quot;&gt;viewport&lt;/a&gt;(), &lt;a href=&quot;qpainter#window&quot;&gt;window&lt;/a&gt;(), &lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt;() make up the painter's coordinate transformation system. For more information, see the &lt;a href=&quot;qpainter#coordinate-transformations&quot;&gt;Coordinate Transformations&lt;/a&gt; section and the &lt;a href=&quot;coordsys#&quot;&gt;Coordinate System&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;qpainter#viewport&quot;&gt;ビューポート&lt;/a&gt;（）、&lt;a href=&quot;qpainter#window&quot;&gt;ウィンドウ&lt;/a&gt;（）、&lt;a href=&quot;qpainter#worldTransform&quot;&gt;worldTransform&lt;/a&gt;（）は、ペインタの座標変換システムを構成します。詳細については、&lt;a href=&quot;qpainter#coordinate-transformations&quot;&gt;座標変換の&lt;/a&gt;セクションと&lt;a href=&quot;coordsys#&quot;&gt;座標系の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="6b842e39e2d9227ee1e2b3d31d8cefb77a512902" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainter#worldMatrixEnabled&quot;&gt;worldMatrixEnabled&lt;/a&gt;() tells whether world transformation is enabled.</source>
          <target state="translated">&lt;a href=&quot;qpainter#worldMatrixEnabled&quot;&gt;worldMatrixEnabled&lt;/a&gt;（）は、ワールド変換が有効かどうかを示します。</target>
        </trans-unit>
        <trans-unit id="85d1880e96449ae9ff63e80027a56d8da12bc0c4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem::clipPath() const</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem ::クリップ経路（）constは</target>
        </trans-unit>
        <trans-unit id="32ff577d74d35424908fb3b931c673150ff7b69f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem::mapFromItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem :: mapFromItem（定数&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="53ce5aba98afce6d039c8f2d7ca4292c19dde181" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem::mapFromParent(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem :: mapFromParent（のconst &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="61f101127cee141dfc6eb3c527edebf3639df331" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem::mapFromScene(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem :: mapFromScene（のconst &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e4e0981cc737dd43de7cafa61e70bf261c390a72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem::mapToItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem :: mapToItem（定数&lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9705e135e8ae44e8db382b862097f12888a11188" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem::mapToParent(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem :: mapToParent（のconst &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f0aed61663795a8db453164a653cc4c4035c4843" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem::mapToScene(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsItem :: mapToScene（のconst &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="da3563c39b073c3ae3523993727ad6dafa976be3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsPathItem::path() const</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsPathItem ::パス（）constは</target>
        </trans-unit>
        <trans-unit id="22ddb6f4878a438c7f4ecfdc79cb510da2f74ba4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsScene::selectionArea() const</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsScene :: selectionArea（）constは</target>
        </trans-unit>
        <trans-unit id="74ba0dbd45e5ccac3814683d8e649588d21dc4c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsView::mapFromScene(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsView :: mapFromScene（のconst &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="31cf66229c149f947d1aa18207e33231cba76e79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsView::mapToScene(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QGraphicsView :: mapToScene（のconst &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e2a6ce3450d4e469072535717e703bc80a8c8d59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QMatrix::map(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QMatrix ::マップ（のconst &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ae58c8da4f8f9329517a8b4ca05fcceeefd4366f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QMatrix::operator*(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QMatrix ::演算子*（のconst &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8e34cbbb16a81dbb2836923e0e0b666931519c4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QMouseEventTransition::hitTestPath() const</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QMouseEventTransition :: hitTestPath（）constは</target>
        </trans-unit>
        <trans-unit id="c97cc58ec72087fb33357a0de29709ac9751a73a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QPaintEngineState::clipPath() const</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QPaintEngineState ::クリップ経路（）constは</target>
        </trans-unit>
        <trans-unit id="6b33db42bad486c2a148c2108d845d81776b9e60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QPainter::clipPath() const</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QPainterの::クリップ経路（）constは</target>
        </trans-unit>
        <trans-unit id="b59ed9ccc86588099d61c26d99b3530ab43d7831" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPathStroker::createStroke(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPathStroker :: createStroke（const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b0d61e57f3ef286c2ec6944136e4b4f18b72ea06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QRawFont::pathForGlyph(&lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QRawFont :: pathForGlyph（&lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eca135b8bd8b382260acf5d5b447e29943294901" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QRawFont::pathForGlyph(&lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QRawFont :: pathForGlyph（&lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49dba801e9a043ec0f3a756acb185dff036591f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QTransform::map(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QTransform ::マップ（のconst &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="034ac9625390d5afb7d62a7ed412c1e0376cae40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QTransform::operator*(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; QTransform ::演算子*（のconst &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f6cdc2440bb11af7c1c8bde336788e4adc961bf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; class also provides several convenience functions to add closed subpaths to a painter path: &lt;a href=&quot;qpainterpath#addEllipse&quot;&gt;addEllipse&lt;/a&gt;(), &lt;a href=&quot;qpainterpath#addPath&quot;&gt;addPath&lt;/a&gt;(), &lt;a href=&quot;qpainterpath#addRect&quot;&gt;addRect&lt;/a&gt;(), &lt;a href=&quot;qpainterpath#addRegion&quot;&gt;addRegion&lt;/a&gt;() and &lt;a href=&quot;qpainterpath#addText&quot;&gt;addText&lt;/a&gt;(). The &lt;a href=&quot;qpainterpath#addPolygon&quot;&gt;addPolygon&lt;/a&gt;() function adds an</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPathの&lt;/a&gt;クラスはまた、画家パスに閉じたサブパスを追加するために、いくつかの便利な機能を提供する：&lt;a href=&quot;qpainterpath#addEllipse&quot;&gt;addEllipse&lt;/a&gt;（）、&lt;a href=&quot;qpainterpath#addPath&quot;&gt;関数addpath&lt;/a&gt;（）、&lt;a href=&quot;qpainterpath#addRect&quot;&gt;addRect&lt;/a&gt;（）、&lt;a href=&quot;qpainterpath#addRegion&quot;&gt;addRegion&lt;/a&gt;（）と&lt;a href=&quot;qpainterpath#addText&quot;&gt;addText&lt;/a&gt;（）。&lt;a href=&quot;qpainterpath#addPolygon&quot;&gt;addPolygon&lt;/a&gt;（）関数が追加されます</target>
        </trans-unit>
        <trans-unit id="e57b4c33354b19f1940f6caefdbcba922787e6d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; provides a collection of functions that can be used to obtain information about the path and its elements. In addition it is possible to reverse the order of the elements using the &lt;a href=&quot;qpainterpath#toReversed&quot;&gt;toReversed&lt;/a&gt;() function. There are also several functions to convert this painter path object into a polygon representation.</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;は、パスとその要素に関する情報を取得するために使用できる関数のコレクションを提供します。さらに、&lt;a href=&quot;qpainterpath#toReversed&quot;&gt;toReversed&lt;/a&gt;（）関数を使用して要素の順序を逆にすることもできます。このペインタパスオブジェクトをポリゴン表現に変換する関数もいくつかあります。</target>
        </trans-unit>
        <trans-unit id="8f5706d0ce56fd0bc32f6a3c62d2e6baf58c149d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;operator*(const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;演算子*（const &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="03097eeea6cd29b48a990f780c3cf49628a47846" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#ElementType-enum&quot;&gt;QPainterPath::ElementType&lt;/a&gt; Element::type</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#ElementType-enum&quot;&gt;QPainterPath :: ElementType&lt;/a&gt; Element :: type</target>
        </trans-unit>
        <trans-unit id="6c5cbbafdbd8f253950fea1e4a5d1cbf0d5a5a33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;QPainterPath::operator&amp;amp;=(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆QPainterPath :: operator＆=（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e02048a81e4170ce332282830c78714db5d5fb6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;QPainterPath::operator+=(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆QPainterPath :: operator + =（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c1a243a5b536f45abe8432d015b8564c7e864bfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;QPainterPath::operator-=(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆QPainterPath :: operator-=（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5b8db1a061871d72df7bd7bda0bb70041da299f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;QPainterPath::operator=(&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆QPainterPath :: operator =（&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="987e4b16786eead31a2eeb707f2b236275cc4de0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;QPainterPath::operator=(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆QPainterPath :: operator =（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2d91ccacbe6e7e29ede3baabe237287920728735" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;QPainterPath::operator|=(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆QPainterPath :: operator | =（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="67763413ddbeabe251a8a4906281e370fadff3a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::intersected(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath :: intersected（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5361320c89f166671ab265e4bbecf88542fe4bef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::operator&amp;amp;(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath :: operator＆（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ff267ab0bf8fa41147841cf0b1bf0ab974934a9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::operator+(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath :: operator +（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="988a3949c41d35a2fc6c2b447cf19a3f584e63fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::operator-(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath :: operator-（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0e9092c3ab2200e05ec39b31dd8ededb9266dcca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::operator|(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath :: operator |（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c8648ed99cad38b4191813d268d02eeeeab8088b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::simplified() const</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath :: simplified（）const</target>
        </trans-unit>
        <trans-unit id="0d2eb85530ab7137c44142d798a0c8effe5d6f99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::subtracted(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath :: subtracted（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0c70b2c4591cd4993090e74898da21d1dbf0c2df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::toReversed() const</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath :: toReversed（）constは</target>
        </trans-unit>
        <trans-unit id="b04e1d10d146e53f53f322a74d67b39f9d9d35c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::translated(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath ::翻訳（&lt;a href=&quot;#qreal-typedef&quot;&gt;QREAL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f0c1431de46432bcbf4602a350820ece622e459c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::translated(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath ::翻訳（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;QREAL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e27ef2fe771cd458d32978484300868f762c504" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::translated(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath ::翻訳（のconst &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7516987b462698e7aa6374fe5a97c0e09c2b79e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath::united(const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt; QPainterPath :: united（const &lt;a href=&quot;qpainterpath#QPainterPath&quot;&gt;QPainterPath&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c1f1c5fb22cb4fbdb530cc8a4b0eba91ab038233" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpath-element&quot;&gt;QPainterPath::Element&lt;/a&gt; QPainterPath::elementAt(int</source>
          <target state="translated">&lt;a href=&quot;qpainterpath-element&quot;&gt;&lt;/a&gt;QPainterPath :: Element QPainterPath :: elementAt（int</target>
        </trans-unit>
        <trans-unit id="13192320f52046502a31cd9cdaf1c253124ac524" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpathstroker#setCapStyle&quot;&gt;setCapStyle&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpainterpathstroker#setCapStyle&quot;&gt;setCapStyle&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="ce82495d9b6261d2b8915c8635732c2a3043eb90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpathstroker#setDashPattern&quot;&gt;setDashPattern&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpainterpathstroker#setDashPattern&quot;&gt;setDashPattern&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="24123e0d5ef86a74e4f793610147eaea003052b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpathstroker#setJoinStyle&quot;&gt;setJoinStyle&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpainterpathstroker#setJoinStyle&quot;&gt;setJoinStyle&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="aca48b1979a51e159aa2e38f422366260f57be80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpainterpathstroker#setWidth&quot;&gt;setWidth&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qpainterpathstroker#setWidth&quot;&gt;setWidth&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="d0246934afe404ed535523b76345c159972462a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt;, &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt;&amp;gt; QHash::equal_range(const Key &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt; &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt;、&lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator&lt;/a&gt; &amp;gt; QHash :: equal_range（const Key＆</target>
        </trans-unit>
        <trans-unit id="861631f8025c7b072cbadb632614d31598c140e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;&lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt;, &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt;&amp;gt; QHash::equal_range(const Key &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt; &lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt;、&lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; &amp;gt; QHash :: equal_range（const Key＆</target>
        </trans-unit>
        <trans-unit id="85e610c1a5d2e3c936cfe1229a3d56859c3f742e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;&lt;a href=&quot;qmap-const-iterator&quot;&gt;QMap::const_iterator&lt;/a&gt;, &lt;a href=&quot;qmap-const-iterator&quot;&gt;QMap::const_iterator&lt;/a&gt;&amp;gt; QMap::equal_range(const Key &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt; &lt;a href=&quot;qmap-const-iterator&quot;&gt;QMap :: const_iterator&lt;/a&gt;、&lt;a href=&quot;qmap-const-iterator&quot;&gt;QMap :: const_iterator&lt;/a&gt; &amp;gt; QMap :: equal_range（const Key＆</target>
        </trans-unit>
        <trans-unit id="6d1d6b656045d0e62a31a2907163b6d88dd8d7f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;&lt;a href=&quot;qmap-iterator&quot;&gt;QMap::iterator&lt;/a&gt;, &lt;a href=&quot;qmap-iterator&quot;&gt;QMap::iterator&lt;/a&gt;&amp;gt; QMap::equal_range(const Key &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt; &lt;a href=&quot;qmap-iterator&quot;&gt;QMap :: iterator&lt;/a&gt;、&lt;a href=&quot;qmap-iterator&quot;&gt;QMap :: iterator&lt;/a&gt; &amp;gt; QMap :: equal_range（const Key＆</target>
        </trans-unit>
        <trans-unit id="327ff84ab49e45a93317c8225d6e40111810219b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;&lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture::Filter&lt;/a&gt;, &lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture::Filter&lt;/a&gt;&amp;gt; QOpenGLTexture::minMagFilters() const</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt; &lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture :: Filter&lt;/a&gt;、&lt;a href=&quot;qopengltexture#Filter-enum&quot;&gt;QOpenGLTexture :: Filter&lt;/a&gt; &amp;gt; QOpenGLTexture :: minMagFilters（）const</target>
        </trans-unit>
        <trans-unit id="932d7a1ecb21efd6b80d1256eda967cc3a68f111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt; QOAuth1::clientCredentials() const</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;gt; QOAuth1 :: clientCredentials（）const</target>
        </trans-unit>
        <trans-unit id="06ef1d8248099994cd08434493166e6ba24af87d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;&amp;gt; QOAuth1::tokenCredentials() const</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt; &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;gt; QOAuth1 :: tokenCredentials（）const</target>
        </trans-unit>
        <trans-unit id="bdc6d83b6e0ed95ede09d92fee64d06be0f94f0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1、T2&amp;gt;</target>
        </trans-unit>
        <trans-unit id="60154829460cdcdd619383831c02efdc38bc427a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; can be used in your application if the STL &lt;code&gt;pair&lt;/code&gt; type is not available. It stores one value of type T1 and one value of type T2. It can be used as a return value for a function that needs to return two values, or as the value type of a &lt;a href=&quot;containers#&quot;&gt;generic container&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1、T2&amp;gt;は、STL &lt;code&gt;pair&lt;/code&gt; タイプが使用できない場合にアプリケーションで使用できます。タイプT1の1つの値とタイプT2の1つの値を格納します。2つの値を返す必要がある関数の戻り値として、または&lt;a href=&quot;containers#&quot;&gt;汎用コンテナの&lt;/a&gt;値の型として使用できます。</target>
        </trans-unit>
        <trans-unit id="e78d6eb12274b5b76787a6d5f202c7926f5192b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; stores a pair of elements.</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1、T2&amp;gt;は、要素のペアを格納します。</target>
        </trans-unit>
        <trans-unit id="7469883c859b7a24b8e8ffe4c0edae671ada1212" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;float, float&amp;gt; QOpenGLTexture::levelOfDetailRange() const</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt;float、float&amp;gt; QOpenGLTexture :: levelOfDetailRange（）const</target>
        </trans-unit>
        <trans-unit id="36313781420cbc92871306ac3b332f4b9a5cc158" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;int, int&amp;gt; QOpenGLTexture::mipLevelRange() const</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt;int、int&amp;gt; QOpenGLTexture :: mipLevelRange（）const</target>
        </trans-unit>
        <trans-unit id="3a227624edeb821a67cf43af3610601bc5e471cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;int, int&amp;gt; QOpenGLVersionProfile::version() const</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt;int、int&amp;gt; QOpenGLVersionProfile :: version（）const</target>
        </trans-unit>
        <trans-unit id="35508c76ef30fc9c4c3d9dda2398a4d55f501451" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;int, int&amp;gt; QRadioTuner::frequencyRange(&lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner::Band&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt;int、int&amp;gt; QRadioTuner :: frequencyRange（&lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner :: Band&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10278ad4c077869f5f3c40e9bdb2206a720c9dfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;&amp;lt;int, int&amp;gt; QSurfaceFormat::version() const</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt; &amp;lt;int、int&amp;gt; QSurfaceFormat :: version（）const</target>
        </trans-unit>
        <trans-unit id="4166a1fdd9b81f7f42e4b9f1217cad4f8e7b2934" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;'s template data types (T1 and T2) must be &lt;a href=&quot;containers#assignable-data-types&quot;&gt;assignable data types&lt;/a&gt;. You cannot, for example, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as a value; instead, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *. A few functions have additional requirements; these requirements are documented on a per-function basis.</source>
          <target state="translated">&lt;a href=&quot;qpair&quot;&gt;QPair&lt;/a&gt;のテンプレートデータタイプ（T1およびT2）は、&lt;a href=&quot;containers#assignable-data-types&quot;&gt;割り当て可能なデータタイプである&lt;/a&gt;必要があります。たとえば、&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;を値として保存することはできません。代わりに、&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *を保存します。一部の機能には追加の要件があります。これらの要件は、機能ごとに文書化されています。</target>
        </trans-unit>
        <trans-unit id="0f724e9fe1e6ce916517adcca9b203e6bda30ad7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;QPair::operator=(&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;TT1, TT2&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1、T2&amp;gt;＆QPair :: operator =（&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;TT1、TT2&amp;gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="8335ed6335b0f629c604aa2ce32470dc2be5d5bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; &amp;amp;QPair::operator=(const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;TT1, TT2&amp;gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1、T2&amp;gt;＆QPair :: operator =（const &lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;TT1、TT2&amp;gt;＆</target>
        </trans-unit>
        <trans-unit id="3108e4c86aab40267f262ef5c3cfe7150b2de19e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt; QPair::qMakePair(const T1 &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpair#QPair&quot;&gt;QPair&lt;/a&gt; &amp;lt;T1、T2&amp;gt; QPair :: qMakePair（const T1＆</target>
        </trans-unit>
        <trans-unit id="ec478ab387d9c2734bcd7324e7c5754ed3a07bd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpair-proxy&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qpair-proxy&quot;&gt;QPair&lt;/a&gt;&amp;lt;T1, T2&amp;gt;</target>
        </trans-unit>
        <trans-unit id="77d956866d5b36683b1e2a59230f9fc4aeb7c0dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; PaintContext::palette</source>
          <target state="translated">&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; PaintContext :: palette</target>
        </trans-unit>
        <trans-unit id="e1b7359f716a67a5a0cebf7a01091c02f6bbbca0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; QStyleOption::palette</source>
          <target state="translated">&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; QStyleOption :: palette</target>
        </trans-unit>
        <trans-unit id="39a87ac2b9131f174e47efd4de5eb9f0eee3f6ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; consists of color groups that have been explicitly defined, and groups that are implicitly inherited from the widget's parent. Because of this, palette() can return a different palette than what has been set with setPalette(). This scheme allows you to define single entries in a palette without affecting the palette's inherited entries.</source>
          <target state="translated">&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;は、明示的に定義されたカラーグループと、ウィジェットの親から暗黙的に継承されたグループで構成されます。このため、palette（）は、setPalette（）で設定されたものとは異なるパレットを返す可能性があります。このスキームにより、パレットの継承されたエントリに影響を与えることなく、パレット内の単一のエントリを定義できます。</target>
        </trans-unit>
        <trans-unit id="2044ea6d550c3a11ceec755e57083a19c2c5416c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; is optimized by the use of &lt;a href=&quot;implicit-sharing&quot;&gt;implicit sharing&lt;/a&gt;, so it is very efficient to pass &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; objects as arguments.</source>
          <target state="translated">&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;は&lt;a href=&quot;implicit-sharing&quot;&gt;暗黙的な共有を&lt;/a&gt;使用して最適化されているため、&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;オブジェクトを引数として渡すことは非常に効率的です。</target>
        </trans-unit>
        <trans-unit id="be5985ca978ecb3274890421df4ee7fa3df1ece7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;, which provides the palette, stores colors for different widget states and color roles. The palette for a style is returned by &lt;a href=&quot;qstyle#standardPalette&quot;&gt;standardPalette()&lt;/a&gt;. The standard palette is not installed automatically when a new style is set on the application (&lt;a href=&quot;qapplication#setStyle&quot;&gt;QApplication::setStyle&lt;/a&gt;()) or widget (&lt;a href=&quot;qwidget#setStyle&quot;&gt;QWidget::setStyle&lt;/a&gt;()), so you must set the palette yourself with (&lt;a href=&quot;qapplication#setPalette&quot;&gt;QApplication::setPalette&lt;/a&gt;()) or (&lt;a href=&quot;qwidget#palette-prop&quot;&gt;QWidget::setPalette&lt;/a&gt;()).</source>
          <target state="translated">&lt;a href=&quot;qpalette&quot;&gt;&lt;/a&gt;パレットを提供するQPaletteは、さまざまなウィジェットの状態と色の役割の色を格納します。スタイルのパレットは、&lt;a href=&quot;qstyle#standardPalette&quot;&gt;standardPalette（）&lt;/a&gt;によって返されます。アプリケーション（&lt;a href=&quot;qapplication#setStyle&quot;&gt;QApplication :: setStyle&lt;/a&gt;（））またはウィジェット（&lt;a href=&quot;qwidget#setStyle&quot;&gt;QWidget :: setStyle&lt;/a&gt;（））に新しいスタイルが設定されている場合、標準パレットは自動的にインストールされないため、（&lt;a href=&quot;qapplication#setPalette&quot;&gt;QApplication :: setPalette&lt;/a&gt;（）を使用して自分でパレットを設定する必要があります）または（&lt;a href=&quot;qwidget#palette-prop&quot;&gt;QWidget :: setPalette&lt;/a&gt;（））。</target>
        </trans-unit>
        <trans-unit id="e0a5b86080aa1b32851b7db1fb4b96e75c3b963b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette::ColorGroup&lt;/a&gt; QPalette::currentColorGroup() const</source>
          <target state="translated">&lt;a href=&quot;qpalette#ColorGroup-enum&quot;&gt;QPalette :: ColorGroup QPalette :: currentColorGroup&lt;/a&gt;（）const</target>
        </trans-unit>
        <trans-unit id="d07212a376423e4514c8605adb9f5c83d068d0cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::ColorRole&lt;/a&gt; QWidget::backgroundRole() const</source>
          <target state="translated">&lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette :: ColorRole&lt;/a&gt; QWidget :: backgroundRole（）const</target>
        </trans-unit>
        <trans-unit id="dbc5e2cad3a2bd2a969bba14dd491a9f304fd2ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::ColorRole&lt;/a&gt; QWidget::foregroundRole() const</source>
          <target state="translated">&lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette :: ColorRole&lt;/a&gt; QWidget :: foregroundRole（）const</target>
        </trans-unit>
        <trans-unit id="0b23e2993dc505e7a3b561089cdd84d302082e4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;QPalette::operator=(&lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt;＆QPalette :: operator =（&lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="feb1a975a1a6b90d12a995c2f9fc771cfacd87e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;QPalette::operator=(const &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt;＆QPalette :: operator =（const &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="941121505860e8261452425d905bd5fb4f4e12fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; QPalette::resolve(const &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt; QPalette :: resolve（const &lt;a href=&quot;qpalette#QPalette&quot;&gt;QPalette&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ca7a2f4a0d2db97b24c083a13f0cbc6cfea3c8c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpangesture&quot;&gt;QPanGesture&lt;/a&gt;, &lt;a href=&quot;qpinchgesture&quot;&gt;QPinchGesture&lt;/a&gt;, &lt;a href=&quot;qswipegesture&quot;&gt;QSwipeGesture&lt;/a&gt;, &lt;a href=&quot;qtapandholdgesture&quot;&gt;QTapAndHoldGesture&lt;/a&gt;, and &lt;a href=&quot;qtapgesture&quot;&gt;QTapGesture&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpangesture&quot;&gt;QPanGesture&lt;/a&gt;、&lt;a href=&quot;qpinchgesture&quot;&gt;QPinchGesture&lt;/a&gt;、&lt;a href=&quot;qswipegesture&quot;&gt;QSwipeGesture&lt;/a&gt;、&lt;a href=&quot;qtapandholdgesture&quot;&gt;QTapAndHoldGesture&lt;/a&gt;、および&lt;a href=&quot;qtapgesture&quot;&gt;QTapGesture&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="432fa27b297b330f68c0e575bc0aa058dc40c90f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt; and &lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt;および&lt;a href=&quot;qsequentialanimationgroup&quot;&gt;QSequentialAnimationGroup&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="43f040652929b6363443f0d8a60780585d13ee23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt;--a &lt;a href=&quot;qanimationgroup&quot;&gt;container for animations&lt;/a&gt;--starts all its animations when it is &lt;a href=&quot;qabstractanimation#start&quot;&gt;started&lt;/a&gt; itself, i.e., runs all animations in parallel. The animation group finishes when the longest lasting animation has finished.</source>
          <target state="translated">&lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt; --a &lt;a href=&quot;qanimationgroup&quot;&gt;アニメーション用のコンテナが&lt;/a&gt;、それがされたときに、そのすべてのアニメーションを--starts &lt;a href=&quot;qabstractanimation#start&quot;&gt;始め&lt;/a&gt;自体を、すなわち、並列にすべてのアニメーションを実行します。アニメーショングループは、最も長く続くアニメーションが終了すると終了します。</target>
        </trans-unit>
        <trans-unit id="9090a6283918de97e43d11165de909cba01a1485" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpauseanimation&quot;&gt;QPauseAnimation&lt;/a&gt; *QSequentialAnimationGroup::addPause(int</source>
          <target state="translated">&lt;a href=&quot;qpauseanimation&quot;&gt;QPauseAnimation&lt;/a&gt; * QSequentialAnimationGroup :: addPause（int</target>
        </trans-unit>
        <trans-unit id="4fa3089409f5766dcda84ca12d8be5cac3c5d2d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpauseanimation&quot;&gt;QPauseAnimation&lt;/a&gt; *QSequentialAnimationGroup::insertPause(int</source>
          <target state="translated">&lt;a href=&quot;qpauseanimation&quot;&gt;QPauseAnimation&lt;/a&gt; * QSequentialAnimationGroup :: insertPause（int</target>
        </trans-unit>
        <trans-unit id="85bf932756634c120c22eec4e5a27a1755cb53bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdf#RenderFlag-enum&quot;&gt;QPdf::RenderFlags&lt;/a&gt; QPdfDocumentRenderOptions::renderFlags() const</source>
          <target state="translated">&lt;a href=&quot;qpdf#RenderFlag-enum&quot;&gt;QPdf :: RenderFlags&lt;/a&gt; QPdfDocumentRenderOptions :: renderFlags（）const</target>
        </trans-unit>
        <trans-unit id="8e868dfbb4d8722b8bf80851bcc9d1d99139534b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdf#Rotation-enum&quot;&gt;QPdf::Rotation&lt;/a&gt; QPdfDocumentRenderOptions::rotation() const</source>
          <target state="translated">&lt;a href=&quot;qpdf#Rotation-enum&quot;&gt;QPdf :: Rotation&lt;/a&gt; QPdfDocumentRenderOptions :: rotation（）定数</target>
        </trans-unit>
        <trans-unit id="b015c1d5f2898703e2a1851e430b3d7f17f47f9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdfdocument&quot;&gt;QPdfDocument&lt;/a&gt; *QPdfPageNavigation::document() const</source>
          <target state="translated">&lt;a href=&quot;qpdfdocument&quot;&gt;QPdfDocument&lt;/a&gt; * QPdfPageNavigation :: document（）const</target>
        </trans-unit>
        <trans-unit id="6ac9121caa1f137190a6bb8bb267a79edda5a8c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdfdocument&quot;&gt;QPdfDocument&lt;/a&gt; *QPdfPageRenderer::document() const</source>
          <target state="translated">&lt;a href=&quot;qpdfdocument&quot;&gt;QPdfDocument&lt;/a&gt; * QPdfPageRenderer :: document（）const</target>
        </trans-unit>
        <trans-unit id="58fb4c517f351c4530d0cce74e27c38949708648" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdfdocument#Status-enum&quot;&gt;QPdfDocument::Status&lt;/a&gt; QPdfDocument::status() const</source>
          <target state="translated">&lt;a href=&quot;qpdfdocument#Status-enum&quot;&gt;QPdfDocument :: Status&lt;/a&gt; QPdfDocument :: status（）const</target>
        </trans-unit>
        <trans-unit id="da4588ad9f4cdc8447ca28cd314229b9b2a7f55c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdfpagerenderer#RenderMode-enum&quot;&gt;QPdfPageRenderer::RenderMode&lt;/a&gt; QPdfPageRenderer::renderMode() const</source>
          <target state="translated">&lt;a href=&quot;qpdfpagerenderer#RenderMode-enum&quot;&gt;QPdfPageRenderer :: RenderMode&lt;/a&gt; QPdfPageRenderer :: renderMode（）const</target>
        </trans-unit>
        <trans-unit id="2b66e65eebf23f7ee6a21f34d338cf913e4967c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdfselection&quot;&gt;QPdfSelection&lt;/a&gt; QPdfDocument::getAllText(int</source>
          <target state="translated">&lt;a href=&quot;qpdfselection&quot;&gt;QPdfSelection&lt;/a&gt; QPdfDocument :: getAllText（int</target>
        </trans-unit>
        <trans-unit id="9acad75b88145b3ce2cbe774c1c2012c2cef1ed0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdfselection&quot;&gt;QPdfSelection&lt;/a&gt; QPdfDocument::getSelection(int</source>
          <target state="translated">&lt;a href=&quot;qpdfselection&quot;&gt;QPdfSelection&lt;/a&gt; QPdfDocument :: getSelection（int</target>
        </trans-unit>
        <trans-unit id="344f6e37449a23490578f5ebac7638b26bcbd633" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdfselection&quot;&gt;QPdfSelection&lt;/a&gt; QPdfDocument::getSelectionAtIndex(int</source>
          <target state="translated">&lt;a href=&quot;qpdfselection&quot;&gt;QPdfSelection&lt;/a&gt; QPdfDocument :: getSelectionAtIndex（int</target>
        </trans-unit>
        <trans-unit id="437316f4c4099dcb6cd8896e51f66237c69df0bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter&lt;/a&gt; and &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter&lt;/a&gt;と&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b222b899993f3f40ea560593ab6139eb8c8c1157" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter&lt;/a&gt; generates PDF out of a series of drawing commands using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;. The &lt;a href=&quot;qpdfwriter#newPage&quot;&gt;newPage&lt;/a&gt;() method can be used to create several pages.</source>
          <target state="translated">&lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriterは、&lt;/a&gt;使用して描画する一連のコマンドのうち、PDFを生成&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt;。&lt;a href=&quot;qpdfwriter#newPage&quot;&gt;NEWPAGE&lt;/a&gt;（）メソッドは、いくつかのページを作成するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="0409a7ef28ede35f92d85843232df63aeace4336" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QAbstractAxis::gridLinePen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QAbstractAxis :: gridLinePen（）const</target>
        </trans-unit>
        <trans-unit id="788024e5145ff7deff7c355521f95cf7ac52513c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QAbstractAxis::linePen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QAbstractAxis :: linePen（）const</target>
        </trans-unit>
        <trans-unit id="0c8ce6df19e7cd68ce30a169be1c27e3a0fa1208" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QAbstractAxis::shadesPen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QAbstractAxis :: shadesPen（）const</target>
        </trans-unit>
        <trans-unit id="81f64c5af834d135eeba8900ed3bacd6a74c74db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QAbstractGraphicsShapeItem::pen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QAbstractGraphicsShapeItem :: pen（）const</target>
        </trans-unit>
        <trans-unit id="ab9791fb3c7bb1fdc5e8af86e254c4dd86f98a88" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QAreaSeries::pen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QAreaSeries :: pen（）const</target>
        </trans-unit>
        <trans-unit id="d1b2461d24b2644ef81ebe9de30e286e42d691c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QBarSet::pen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QBarSet :: pen（）const</target>
        </trans-unit>
        <trans-unit id="c8137dca429a46d30a7af2be4ac5ab42f6ade2aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QBoxSet::pen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QBoxSet :: pen（）const</target>
        </trans-unit>
        <trans-unit id="a53de81cbb3ea63f6a283563b7e11f4609a93fed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QChart::backgroundPen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QChart :: backgroundPen（）const</target>
        </trans-unit>
        <trans-unit id="20398ec0eb69838a73a2c08a6556afde39241647" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QChart::plotAreaBackgroundPen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QChart :: plotAreaBackgroundPen（）const</target>
        </trans-unit>
        <trans-unit id="e52f978cb79c92ecf572576c559e9d83bef22458" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QGraphicsLineItem::pen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QGraphicsLineItem :: pen（）const</target>
        </trans-unit>
        <trans-unit id="0a4a516ceb6e504fa41ec27e222889d82afe7885" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QLegend::pen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QLegend :: pen（）const</target>
        </trans-unit>
        <trans-unit id="cc6fe5ae1d5daca488cc6fe841347d81e48c9402" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QLegendMarker::pen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QLegendMarker :: pen（）const</target>
        </trans-unit>
        <trans-unit id="fc786e8fa6cd77073faab4a68f3caac8e05ee46c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QPaintEngineState::pen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QPaintEngineState :: pen（）const</target>
        </trans-unit>
        <trans-unit id="02078ea6840ea1cd76f174ff6f786b838723b9df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QTextCharFormat::textOutline() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QTextCharFormat :: textOutline（）const</target>
        </trans-unit>
        <trans-unit id="98964c86927fa4e899464a73fecd07380c20d764" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QTextFormat::penProperty(int</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QTextFormat :: penProperty（int</target>
        </trans-unit>
        <trans-unit id="9b7bfc7ce37b149f4bdbdbc6aac25fce76e9b744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QXYSeries::pen() const</source>
          <target state="translated">&lt;a href=&quot;qpen&quot;&gt;QPen&lt;/a&gt; QXYSeries :: pen（）const</target>
        </trans-unit>
        <trans-unit id="de3e40113fd1f8bbc0c124d2a65c33c3be66a844" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; &amp;amp;QPen::operator=(&lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt;＆QPen :: operator =（&lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="3af8e22dc1940336d75a376a614c098b879b9b4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; &amp;amp;QPen::operator=(const &lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt;＆QPen :: operator =（const &lt;a href=&quot;qpen#QPen&quot;&gt;QPen&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="07e571456189cd6f3be1c8673111de8a685e6b8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpersistentmodelindex&quot;&gt;QPersistentModelIndex&lt;/a&gt; QVariant::toPersistentModelIndex() const</source>
          <target state="translated">&lt;a href=&quot;qpersistentmodelindex&quot;&gt;QPersistentModelIndex&lt;/a&gt; QVariant :: toPersistentModelIndex（）const</target>
        </trans-unit>
        <trans-unit id="06faf046184ec4c793981619f285e047ba2c3054" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; QLabel::picture(</source>
          <target state="translated">&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; QLabel :: picture（</target>
        </trans-unit>
        <trans-unit id="22b3199ba52f27339133d23710cf049a60bedb60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; format</source>
          <target state="translated">&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;フォーマット</target>
        </trans-unit>
        <trans-unit id="b9279c0229dbf65d42cc96105b569f478e7f848b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; is resolution independent, i.e. a &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; can be displayed on different devices (for example svg, pdf, ps, printer and screen) looking the same. This is, for instance, needed for WYSIWYG print preview. &lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt; runs in the default system dpi, and scales the painter to match differences in resolution depending on the window system.</source>
          <target state="translated">&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;は解像度に依存しません。つまり、&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;は、同じように見えるさまざまなデバイス（たとえば、svg、pdf、ps、プリンター、画面）で表示できます。これは、たとえばWYSIWYG印刷プレビューに必要です。&lt;a href=&quot;qpicture&quot;&gt;QPicture&lt;/a&gt;はデフォルトのシステムdpiで実行され、ウィンドウシステムに応じた解像度の違いに合わせてペインタをスケーリングします。</target>
        </trans-unit>
        <trans-unit id="435726d4b804e0a81fd16e0a836747307e8f0c2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpicture#QPicture&quot;&gt;QPicture&lt;/a&gt; &amp;amp;QPicture::operator=(&lt;a href=&quot;qpicture#QPicture&quot;&gt;QPicture&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpicture#QPicture&quot;&gt;QPicture&lt;/a&gt;＆QPicture :: operator =（&lt;a href=&quot;qpicture#QPicture&quot;&gt;QPicture&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="a60eb59a52c63c81d5cf3a43e65e4ececda4db46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpicture#QPicture&quot;&gt;QPicture&lt;/a&gt; &amp;amp;QPicture::operator=(const &lt;a href=&quot;qpicture#QPicture&quot;&gt;QPicture&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpicture#QPicture&quot;&gt;QPicture&lt;/a&gt;＆QPicture :: operator =（const &lt;a href=&quot;qpicture#QPicture&quot;&gt;QPicture&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a71bd516d6e568c77677833bb2bdb9d7b9bdcb23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpictureio&quot;&gt;QPictureIO&lt;/a&gt; contains a &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; object that is used for picture data I/O. The programmer can install new picture file formats in addition to those that Qt provides.</source>
          <target state="translated">&lt;a href=&quot;qpictureio&quot;&gt;QPictureIOに&lt;/a&gt;は、画像データのI / Oに使用される&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;オブジェクトが含まれています。プログラマは、Qtが提供する形式に加えて、新しい画像ファイル形式をインストールできます。</target>
        </trans-unit>
        <trans-unit id="ba9ba0a1fd8b74b7ae51c930a3100f70b0cd4405" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpieseries&quot;&gt;QPieSeries&lt;/a&gt; *QPieSlice::series() const</source>
          <target state="translated">&lt;a href=&quot;qpieseries&quot;&gt;QPieSeries&lt;/a&gt; * QPieSlice :: series（）const</target>
        </trans-unit>
        <trans-unit id="b951dccf81d24a5e4a5874dc2949810c18f9749c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpieseries#QPieSeries&quot;&gt;QPieSeries&lt;/a&gt; &amp;amp;QPieSeries::operator&amp;lt;&amp;lt;(&lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpieseries#QPieSeries&quot;&gt;QPieSeries&lt;/a&gt;＆QPieSeries :: operator &amp;lt;&amp;lt;（&lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8786b33a5b5ae3054eab645980485183522f79f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *QPieLegendMarker::slice()</source>
          <target state="translated">&lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; * QPieLegendMarker :: slice（）</target>
        </trans-unit>
        <trans-unit id="f7c7f1be68837d86925ef624bc7b09b0b8302305" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; *QPieSeries::append(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpieslice&quot;&gt;QPieSlice&lt;/a&gt; * QPieSeries :: append（&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b4086f2cf245f4d715e57e84c581c63eb8c4082" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat&quot;&gt;QPixelFormat&lt;/a&gt; QImage::pixelFormat() const</source>
          <target state="translated">&lt;a href=&quot;qpixelformat&quot;&gt;QPixelFormat&lt;/a&gt; QImage :: pixelFormat（）const</target>
        </trans-unit>
        <trans-unit id="50fb0931168b1fed79c4469e28d5e0621d97e99a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat&quot;&gt;QPixelFormat&lt;/a&gt; can describe 5 color channels and 1 alpha channel, each can use 6 bits to describe the size of the color channel.</source>
          <target state="translated">&lt;a href=&quot;qpixelformat&quot;&gt;QPixelFormat&lt;/a&gt;は5つのカラーチャネルと1つのアルファチャネルを記述でき、それぞれが6ビットを使用してカラーチャネルのサイズを記述できます。</target>
        </trans-unit>
        <trans-unit id="24836dab4bc47ce4196a04e3ab2995206577eee5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat&quot;&gt;QPixelFormat&lt;/a&gt; is a class for describing different pixel layouts in graphics buffers. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat&quot;&gt;QPixelFormat&lt;/a&gt;は、グラフィックバッファーのさまざまなピクセルレイアウトを記述するためのクラスです。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e5df90d0ab347518c38f9a20b36fb59c0b72629" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#AlphaPosition-enum&quot;&gt;QPixelFormat::AlphaPosition&lt;/a&gt; QPixelFormat::alphaPosition() const</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#AlphaPosition-enum&quot;&gt;QPixelFormat :: AlphaPosition&lt;/a&gt; QPixelFormat :: alphaPosition（）const</target>
        </trans-unit>
        <trans-unit id="a2e0f50760e82723c0079536201fcfd3b86af884" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#AlphaPremultiplied-enum&quot;&gt;QPixelFormat::AlphaPremultiplied&lt;/a&gt; QPixelFormat::premultiplied() const</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#AlphaPremultiplied-enum&quot;&gt;QPixelFormat :: AlphaPremultiplied QPixelFormat :: premultiplied&lt;/a&gt;（）const</target>
        </trans-unit>
        <trans-unit id="8a8b0322214fe0c5c52daf0137461f6d9b94625a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#AlphaUsage-enum&quot;&gt;QPixelFormat::AlphaUsage&lt;/a&gt; QPixelFormat::alphaUsage() const</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#AlphaUsage-enum&quot;&gt;QPixelFormat :: AlphaUsage&lt;/a&gt; QPixelFormat :: alphaUsage（）const</target>
        </trans-unit>
        <trans-unit id="9d53c66e96371d3490822f7335dfd6eb65e52ef2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#ByteOrder-enum&quot;&gt;QPixelFormat::ByteOrder&lt;/a&gt; QPixelFormat::byteOrder() const</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#ByteOrder-enum&quot;&gt;QPixelFormat :: ByteOrder&lt;/a&gt; QPixelFormat :: byteOrder（）const</target>
        </trans-unit>
        <trans-unit id="f88d8ab644132a15c1a520a40c199575851ddeb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#ColorModel-enum&quot;&gt;QPixelFormat::ColorModel&lt;/a&gt; QPixelFormat::colorModel() const</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#ColorModel-enum&quot;&gt;QPixelFormat :: ColorModel&lt;/a&gt; QPixelFormat :: colorModel（）const</target>
        </trans-unit>
        <trans-unit id="5fa2f67f9ec357b5964d069cb0cf04d4e19cfce9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat::qPixelFormatAlpha(&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat :: qPixelFormatAlpha（&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0c1849ca003898ebeddc89dfe4ba22d70011ede2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat::qPixelFormatCmyk(&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat :: qPixelFormatCmyk（&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f59b350505eeb68d4d770446baa0c4a96549a7ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat::qPixelFormatGrayscale(&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat :: qPixelFormatGrayscale（&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc028e41151ef914f39866b6fd12bea6c920a926" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat::qPixelFormatHsl(&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat :: qPixelFormatHsl（&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c1dc7ec24dae8718db00ccd1a60829cc90800d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat::qPixelFormatHsv(&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat :: qPixelFormatHsv（&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e6901f83f83960beeb12ac1dfa3ef86bafabd77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat::qPixelFormatRgba(&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat :: qPixelFormatRgba（&lt;a href=&quot;#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f49a90731a87293475a5ed473382a85a6fd38853" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat::qPixelFormatYuv(&lt;a href=&quot;qpixelformat#YUVLayout-enum&quot;&gt;QPixelFormat::YUVLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt; QPixelFormat :: qPixelFormatYuv（&lt;a href=&quot;qpixelformat#YUVLayout-enum&quot;&gt;QPixelFormat :: YUVLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="afa157c17795b8fb33f7707c643902b84c1aa4f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatAlpha(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatAlpha(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fea6f8f9a1759e30a220d3b43f7e180cb201069" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatCmyk(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatCmyk(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b13ba5f741f8c3a90fbc4222b8c1a91ff96ff29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatGrayscale(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatGrayscale(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5940a70f03ca38e9525cc0a9a563fdc2905a8ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatHsl(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatHsl(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd1bdd7077d6aa552f638645c2241787475033ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatHsv(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatHsv(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df8ef05589a0b83090a50cfdb3577ebd6498326a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatRgba(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatRgba(&lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc2ef533af7a1df803dac0bc83ad818577fa1331" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatYuv(&lt;a href=&quot;qpixelformat#YUVLayout-enum&quot;&gt;QPixelFormat::YUVLayout&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#QPixelFormat&quot;&gt;QPixelFormat&lt;/a&gt;qPixelFormatYuv(&lt;a href=&quot;qpixelformat#YUVLayout-enum&quot;&gt;QPixelFormat::YUVLayout&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb40ec72500b81af04690a0c8e2dcb532e24dff6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#TypeInterpretation-enum&quot;&gt;QPixelFormat::TypeInterpretation&lt;/a&gt; QPixelFormat::typeInterpretation() const</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#TypeInterpretation-enum&quot;&gt;QPixelFormat :: TypeInterpretation&lt;/a&gt; QPixelFormat :: typeInterpretation（）const</target>
        </trans-unit>
        <trans-unit id="b7c92ad25d0f2014dec01384d16c12ae557c1338" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixelformat#YUVLayout-enum&quot;&gt;QPixelFormat::YUVLayout&lt;/a&gt; QPixelFormat::yuvLayout() const</source>
          <target state="translated">&lt;a href=&quot;qpixelformat#YUVLayout-enum&quot;&gt;QPixelFormat :: YUVLayout&lt;/a&gt; QPixelFormat :: yuvLayout（）const</target>
        </trans-unit>
        <trans-unit id="1678f95a1e8051bb0ed232e925937200d321542a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QBrush::texture() const</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QBrush :: texture（）const</target>
        </trans-unit>
        <trans-unit id="8b7ae0432f9ff8c7df73cb78d0bc32183d1967ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QClipboard::pixmap(&lt;a href=&quot;qclipboard#Mode-enum&quot;&gt;QClipboard::Mode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QClipboard :: pixmap（&lt;a href=&quot;qclipboard#Mode-enum&quot;&gt;QClipboard :: Mode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57c75ea40c07d2cf6f51fd1e36374c581a4c9831" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QCursor::pixmap() const</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QCursor :: pixmap（）const</target>
        </trans-unit>
        <trans-unit id="4cbd24186d154085abc35adb5370440a83de858f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QDrag::dragCursor(&lt;a href=&quot;qt#DropAction-enum&quot;&gt;Qt::DropAction&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QDrag :: dragCursor（&lt;a href=&quot;qt#DropAction-enum&quot;&gt;Qt :: DropAction&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6e933554a73c68ee8ac380b55edbb29df492dbc6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QDrag::pixmap() const</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QDrag :: pixmap（）const</target>
        </trans-unit>
        <trans-unit id="ae8c56d9a8c0c8d1c67fdedeb4b62276d7e6ebcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QGraphicsPixmapItem::pixmap() const</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QGraphicsPixmapItem :: pixmap（）const</target>
        </trans-unit>
        <trans-unit id="50d9094a21206defda6d908844b88408570a6686" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QIcon::pixmap(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QIcon :: pixmap（&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6d50dc9c30a74823766c6fa8658dbd5a544754b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QIcon::pixmap(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QIcon :: pixmap（const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f53c16b98f0cda74da5b32a8e55a5c981e656616" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QIcon::pixmap(int</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QIcon :: pixmap（int</target>
        </trans-unit>
        <trans-unit id="56f02e61b3bd90b9f14c24e17a0fae7316696715" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QIconEngine::scaledPixmap(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QIconEngine :: scaledPixmap（const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4d29f2a532102b2e07799a0fa46aafda8931c51d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QLabel::pixmap(</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QLabel :: pixmap（</target>
        </trans-unit>
        <trans-unit id="10cee45cff69ec991cff309deac239dfcf7390f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QMovie::currentPixmap() const</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QMovie :: currentPixmap（）const</target>
        </trans-unit>
        <trans-unit id="5b4d2cb33d0a1ff2e575ed2ab93b56f102750f31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QScreen::grabWindow(WId</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QScreen :: grabWindow（WId</target>
        </trans-unit>
        <trans-unit id="ef454ab2c574792ee1673d0130342f4e070d47cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QWidget::grab(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QWidget :: grab（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="525935c3b07a57d93b442252481db5851c65b2ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QWizard::pixmap(&lt;a href=&quot;qwizard#WizardPixmap-enum&quot;&gt;QWizard::WizardPixmap&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QWizard :: pixmap（&lt;a href=&quot;qwizard#WizardPixmap-enum&quot;&gt;QWizard :: WizardPixmap&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3d447d27f8a43ad0efdbe83af6bfd8a0ca25854" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QWizardPage::pixmap(&lt;a href=&quot;qwizard#WizardPixmap-enum&quot;&gt;QWizard::WizardPixmap&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QWizardPage :: pixmap（&lt;a href=&quot;qwizard#WizardPixmap-enum&quot;&gt;QWizard :: WizardPixmap&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fde10a5491f4881a78ae8d60b014b70f5976edf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QtMac::fromCGImageRef(CGImageRef</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; QtMac :: fromCGImageRef（CGImageRef</target>
        </trans-unit>
        <trans-unit id="f52f4cc31b6fafb69693f6f7c3324a5f784f1b6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; ScaledPixmapArgument::pixmap</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; ScaledPixmapArgument :: pixmap</target>
        </trans-unit>
        <trans-unit id="a730d87e91804f7d23bdc7fca7868fde6387f3b7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; objects can be passed around by value since the &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; class uses implicit data sharing. For more information, see the &lt;a href=&quot;implicit-sharing&quot;&gt;Implicit Data Sharing&lt;/a&gt; documentation. &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; objects can also be streamed.</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmapのの&lt;/a&gt;ため、オブジェクトが値によって周りに渡すことができる&lt;a href=&quot;qpixmap&quot;&gt;QPixmapのの&lt;/a&gt;クラスは、暗黙的なデータ共有を使用しています。詳細については、&lt;a href=&quot;implicit-sharing&quot;&gt;暗黙的データ共有の&lt;/a&gt;ドキュメントを参照してください。&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;オブジェクトもストリーミングできます。</target>
        </trans-unit>
        <trans-unit id="bd3c94965e749ac95a70ccbbc7a08ac8753a6ca1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; provides a collection of functions that can be used to obtain a variety of information about the pixmap. In addition, there are several functions that enables transformation of the pixmap.</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;は、pixmapに関するさまざまな情報を取得するために使用できる関数のコレクションを提供します。さらに、ピクスマップの変換を可能にするいくつかの関数があります。</target>
        </trans-unit>
        <trans-unit id="f3c952135e9d088cc8eba4211fb03e669809629b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; provides a collection of functions that can be used to obtain a variety of information about the pixmap:</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;は、pixmapに関するさまざまな情報を取得するために使用できる関数のコレクションを提供します。</target>
        </trans-unit>
        <trans-unit id="d07f02cbf3bed5e460c367592620625be9fe8931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; provides several ways of reading an image file: The file can be loaded when constructing the &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; object, or by using the &lt;a href=&quot;qpixmap#load&quot;&gt;load&lt;/a&gt;() or &lt;a href=&quot;qpixmap#loadFromData&quot;&gt;loadFromData&lt;/a&gt;() functions later on. When loading an image, the file name can either refer to an actual file on disk or to one of the application's embedded resources. See &lt;a href=&quot;resources&quot;&gt;The Qt Resource System&lt;/a&gt; overview for details on how to embed images and other resource files in the application's executable.</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;は画像ファイルを読み取るいくつかの方法を提供します：&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;オブジェクトを構築するとき、または後で&lt;a href=&quot;qpixmap#load&quot;&gt;load&lt;/a&gt;（）または&lt;a href=&quot;qpixmap#loadFromData&quot;&gt;loadFromData&lt;/a&gt;（）関数を使用してファイルをロードできます。イメージをロードするとき、ファイル名はディスク上の実際のファイルまたはアプリケーションの埋め込みリソースの1つを参照できます。参照してください。&lt;a href=&quot;resources&quot;&gt;Qtのリソースシステム&lt;/a&gt;の詳細については、概要をどのようにアプリケーションの実行中に埋め込む画像や他のリソースファイルへ。</target>
        </trans-unit>
        <trans-unit id="e7e077d3e4d89384177ae6d7e6623320bbde0c57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; supports a number of functions for creating a new pixmap that is a transformed version of the original:</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;は、オリジナルの変換されたバージョンである新しいピックスマップを作成するための多くの関数をサポートしています：</target>
        </trans-unit>
        <trans-unit id="92f0d3063e02b0f73d12ba0d0479ff58cfe8a825" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="0c1d50ab1fff1e3aad587ebee069542bd4d61ebf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, const &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;、const &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d1b2e7f541839f747d771cb6e80100e551322c5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;QPixmap::operator=(&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt;＆QPixmap :: operator =（&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="f6320d7ee464253efd4a6a5fd4cb089b5de7bfbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;QPixmap::operator=(const &lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt;＆QPixmap :: operator =（const &lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="16f175ded97ff47329fdaef5eb25f4ff84c4b46e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap::alphaChannel() const</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap :: alphaChannel（）const</target>
        </trans-unit>
        <trans-unit id="2c41dd39494737ac79faab5f52e59e28688fa38c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap::copy(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap :: copy（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="40399d28f177b0f8dea1a2b15131e2f75d42331e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap::copy(int</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap :: copy（int</target>
        </trans-unit>
        <trans-unit id="542ed0674384ddadaf6eea0a2c37d6fbb50a46f4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap::scaled(const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap :: scaled（const &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="af7e53b20bff3f3dbb086dffc7a27451e90a20d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap::scaled(int</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap :: scaled（int</target>
        </trans-unit>
        <trans-unit id="8416743cbb1c6fc65413114db01c242372b44469" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap::scaledToHeight(int</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap :: scaledToHeight（int</target>
        </trans-unit>
        <trans-unit id="a874501095307dbf292e107401ccb4065ab992a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap::scaledToWidth(int</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap :: scaledToWidth（int</target>
        </trans-unit>
        <trans-unit id="30101e0c2ade4ef935ffe77550584c3641a8b199" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap::transformed(const &lt;a href=&quot;qmatrix&quot;&gt;QMatrix&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap :: transformed（const &lt;a href=&quot;qmatrix&quot;&gt;QMatrix&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4e808a98e8500befb771b6b7a372fa3053acf3a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap::transformed(const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpixmap#QPixmap&quot;&gt;QPixmap&lt;/a&gt; QPixmap :: transformed（const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8be77d91c3e2192fa692a4aa3e7416194c86f900" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpixmapcache&quot;&gt;QPixmapCache&lt;/a&gt; contains no member data, only static functions to access the global pixmap cache. It creates an internal &lt;a href=&quot;qcache&quot;&gt;QCache&lt;/a&gt; object for caching the pixmaps.</source>
          <target state="translated">&lt;a href=&quot;qpixmapcache&quot;&gt;QPixmapCache&lt;/a&gt;にはメンバーデータは含まれず、グローバルピクスマップキャッシュにアクセスする静的関数のみが含まれます。これは、&lt;a href=&quot;qcache&quot;&gt;ピックス&lt;/a&gt;マップをキャッシュするための内部QCacheオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="1c1218bc92acfb0896afdea807e28bda9922090f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; QPlaceDetailsReply::place() const</source>
          <target state="translated">&lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; QPlaceDetailsReply :: place（）const</target>
        </trans-unit>
        <trans-unit id="726f0552781877d5615818506c5549c5a4b0bf97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; QPlaceManager::compatiblePlace(const &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; QPlaceManager :: compatiblePlace（const &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="086aabc0a3418743e18e67678f01376e476f14e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; QPlaceResult::place() const</source>
          <target state="translated">&lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; QPlaceResult :: place（）const</target>
        </trans-unit>
        <trans-unit id="ef7ae74c41e150c7d3e406381e288b64e5a26ee4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#QPlace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;QPlace::operator=(const &lt;a href=&quot;qplace#QPlace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplace#QPlace&quot;&gt;QPlace&lt;/a&gt;＆QPlace :: operator =（const &lt;a href=&quot;qplace#QPlace&quot;&gt;QPlace&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="53aa616e5a73e017e3727d871925b467fcae14a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#appendContactDetail&quot;&gt;QPlace::appendContactDetail&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#appendContactDetail&quot;&gt;QPlace::appendContactDetail&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="14d374ee3a2ec2a12bf546555955ff0e0abcaa91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#contactDetails&quot;&gt;QPlace::contactDetails&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#contactDetails&quot;&gt;QPlace::contactDetails&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="36c43e72b5d9936cd6b0eb8c3d3e1ea07a1e2379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#contactTypes&quot;&gt;QPlace::contactTypes&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#contactTypes&quot;&gt;QPlace::contactTypes&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e26cc279fc9e8561e3fd651495faada01cc11059" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#extendedAttribute&quot;&gt;QPlace::extendedAttribute&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#extendedAttribute&quot;&gt;QPlace::extendedAttribute&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="7f3417a8ce99530befca70c059b4da94f2eb3e90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#primaryEmail&quot;&gt;QPlace::primaryEmail&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#primaryEmail&quot;&gt;QPlace::primaryEmail&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="109f987c6b8ed4c16843ab6a9a0b78757e314e0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#primaryFax&quot;&gt;QPlace::primaryFax&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#primaryFax&quot;&gt;QPlace::primaryFax&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="05216704bf89df26813b0e75ea217b7a14a98fe6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#primaryPhone&quot;&gt;QPlace::primaryPhone&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#primaryPhone&quot;&gt;QPlace::primaryPhone&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="20f32166994fc0d195e361040654c78f107afb5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#primaryWebsite&quot;&gt;QPlace::primaryWebsite&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#primaryWebsite&quot;&gt;QPlace::primaryWebsite&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="b6fbb92abac15724523c9c1fcaa01e85e4aa81d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#removeExtendedAttribute&quot;&gt;QPlace::removeExtendedAttribute&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#removeExtendedAttribute&quot;&gt;QPlace::removeExtendedAttribute&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e8e5d0a9484e6c92c982a878f4c6b6bef9c3636b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#setContactDetails&quot;&gt;QPlace::setContactDetails&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#setContactDetails&quot;&gt;QPlace::setContactDetails&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e3038f3276d936e26cff9f3c28d77694f1d5c29a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplace#setExtendedAttribute&quot;&gt;QPlace::setExtendedAttribute&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplace#setExtendedAttribute&quot;&gt;QPlace::setExtendedAttribute&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="5bb52e29a6ada2fa7f5a912fdddf35c12fb7e800" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceattribute&quot;&gt;QPlaceAttribute&lt;/a&gt; QPlace::extendedAttribute(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplaceattribute&quot;&gt;QPlaceAttribute&lt;/a&gt; QPlace :: extendedAttribute（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f005f8bb2db9060c4c907401d0a3ba57a767510d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceattribute#QPlaceAttribute&quot;&gt;QPlaceAttribute&lt;/a&gt; &amp;amp;QPlaceAttribute::operator=(const &lt;a href=&quot;qplaceattribute#QPlaceAttribute&quot;&gt;QPlaceAttribute&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplaceattribute#QPlaceAttribute&quot;&gt;QPlaceAttribute&lt;/a&gt;＆QPlaceAttribute :: operator =（const &lt;a href=&quot;qplaceattribute#QPlaceAttribute&quot;&gt;QPlaceAttribute&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="55079b400d2c75e6c4a1a4243f0951d1a7c86831" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; QPlaceManager::category(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; QPlaceManager :: category（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="004ae5ec54d8821f6e3916e69c0d0defbefe11bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecategory#QPlaceCategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;QPlaceCategory::operator=(const &lt;a href=&quot;qplacecategory#QPlaceCategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacecategory#QPlaceCategory&quot;&gt;QPlaceCategory&lt;/a&gt;＆QPlaceCategory :: operator =（const &lt;a href=&quot;qplacecategory#QPlaceCategory&quot;&gt;QPlaceCategory&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="de4742962e62aa9f414427284fd340f79e9bf24c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontactdetail#QPlaceContactDetail&quot;&gt;QPlaceContactDetail&lt;/a&gt; &amp;amp;QPlaceContactDetail::operator=(const &lt;a href=&quot;qplacecontactdetail#QPlaceContactDetail&quot;&gt;QPlaceContactDetail&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacecontactdetail#QPlaceContactDetail&quot;&gt;QPlaceContactDetail&lt;/a&gt;＆QPlaceContactDetail :: operator =（const &lt;a href=&quot;qplacecontactdetail#QPlaceContactDetail&quot;&gt;QPlaceContactDetail&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="95020d373648b1a64f3c413adcc3b6e73c8f7744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontent#Collection-typedef&quot;&gt;QPlaceContent::Collection&lt;/a&gt; QPlace::content(&lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent::Type&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qplacecontent#Collection-typedef&quot;&gt;QPlaceContent :: Collection&lt;/a&gt; QPlace :: content（&lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent :: Type&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3b88be9ca4d30bc79eed763900583217fd8b5a11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontent#Collection-typedef&quot;&gt;QPlaceContent::Collection&lt;/a&gt; QPlaceContentReply::content() const</source>
          <target state="translated">&lt;a href=&quot;qplacecontent#Collection-typedef&quot;&gt;QPlaceContent :: Collection&lt;/a&gt; QPlaceContentReply :: content（）const</target>
        </trans-unit>
        <trans-unit id="c30620673f2f87e0e9c801b075a90fb8576624db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontent#QPlaceContent&quot;&gt;QPlaceContent&lt;/a&gt; &amp;amp;QPlaceContent::operator=(const &lt;a href=&quot;qplacecontent#QPlaceContent&quot;&gt;QPlaceContent&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacecontent#QPlaceContent&quot;&gt;QPlaceContent&lt;/a&gt;＆QPlaceContent :: operator =（const &lt;a href=&quot;qplacecontent#QPlaceContent&quot;&gt;QPlaceContent&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="11abaebeae4cffa3637619cc52f54f214cb554d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent::Type&lt;/a&gt; QPlaceContent::type() const</source>
          <target state="translated">&lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent :: Type&lt;/a&gt; QPlaceContent :: type（）const</target>
        </trans-unit>
        <trans-unit id="a6b4e9931f5df9d3279e6585a5575815d42438c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent::Type&lt;/a&gt; QPlaceContentRequest::contentType() const</source>
          <target state="translated">&lt;a href=&quot;qplacecontent#Type-enum&quot;&gt;QPlaceContent :: Type&lt;/a&gt; QPlaceContentRequest :: contentType（）const</target>
        </trans-unit>
        <trans-unit id="66f5cc37110aa4faf81da4859bdc8d0276fc89f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontentreply&quot;&gt;QPlaceContentReply&lt;/a&gt; *QPlaceManager::getPlaceContent(const &lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacecontentreply&quot;&gt;QPlaceContentReply&lt;/a&gt; * QPlaceManager :: getPlaceContent（const &lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3d834e5f56959fb31ec55d4945d037754d8b9edc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontentreply&quot;&gt;QPlaceContentReply&lt;/a&gt;, &lt;a href=&quot;qplacedetailsreply&quot;&gt;QPlaceDetailsReply&lt;/a&gt;, &lt;a href=&quot;qplaceidreply&quot;&gt;QPlaceIdReply&lt;/a&gt;, &lt;a href=&quot;qplacematchreply&quot;&gt;QPlaceMatchReply&lt;/a&gt;, &lt;a href=&quot;qplacesearchreply&quot;&gt;QPlaceSearchReply&lt;/a&gt;, and &lt;a href=&quot;qplacesearchsuggestionreply&quot;&gt;QPlaceSearchSuggestionReply&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qplacecontentreply&quot;&gt;QPlaceContentReply&lt;/a&gt;、&lt;a href=&quot;qplacedetailsreply&quot;&gt;QPlaceDetailsReply&lt;/a&gt;、&lt;a href=&quot;qplaceidreply&quot;&gt;QPlaceIdReply&lt;/a&gt;、&lt;a href=&quot;qplacematchreply&quot;&gt;QPlaceMatchReply&lt;/a&gt;、&lt;a href=&quot;qplacesearchreply&quot;&gt;QPlaceSearchReply&lt;/a&gt;、および&lt;a href=&quot;qplacesearchsuggestionreply&quot;&gt;QPlaceSearchSuggestionReply&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce77094055fc263016f6fab220139b616ef69717" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; QPlaceContentReply::nextPageRequest() const</source>
          <target state="translated">&lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; QPlaceContentReply :: nextPageRequest（）const</target>
        </trans-unit>
        <trans-unit id="c83eb96d705db96dcce825e810a021e0505ad225" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; QPlaceContentReply::previousPageRequest() const</source>
          <target state="translated">&lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; QPlaceContentReply :: previousPageRequest（）const</target>
        </trans-unit>
        <trans-unit id="b9409d928e06a2e271333860567652b04f98c61d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; QPlaceContentReply::request() const</source>
          <target state="translated">&lt;a href=&quot;qplacecontentrequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; QPlaceContentReply :: request（）const</target>
        </trans-unit>
        <trans-unit id="873c699daf6cf82d519d0949655e5499d045fda0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacecontentrequest#QPlaceContentRequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;QPlaceContentRequest::operator=(const &lt;a href=&quot;qplacecontentrequest#QPlaceContentRequest&quot;&gt;QPlaceContentRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacecontentrequest#QPlaceContentRequest&quot;&gt;QPlaceContentRequest&lt;/a&gt;＆QPlaceContentRequest :: operator =（const &lt;a href=&quot;qplacecontentrequest#QPlaceContentRequest&quot;&gt;QPlaceContentRequest&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a07432ebcc60f2db1ee2b5035121f20617378a70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacedetailsreply&quot;&gt;QPlaceDetailsReply&lt;/a&gt; *QPlaceManager::getPlaceDetails(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacedetailsreply&quot;&gt;QPlaceDetailsReply&lt;/a&gt; * QPlaceManager :: getPlaceDetails（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2000c6041e3a6f18cb26bd6c0e879ece35346f21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceeditorial&quot;&gt;QPlaceEditorial&lt;/a&gt;, &lt;a href=&quot;qplaceimage&quot;&gt;QPlaceImage&lt;/a&gt;, and &lt;a href=&quot;qplacereview&quot;&gt;QPlaceReview&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qplaceeditorial&quot;&gt;QPlaceEditorial&lt;/a&gt;、&lt;a href=&quot;qplaceimage&quot;&gt;QPlaceImage&lt;/a&gt;、および&lt;a href=&quot;qplacereview&quot;&gt;QPlaceReview&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ad9f69a8347da9b0b88c5cc09154fa60416c45fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; QPlace::icon() const</source>
          <target state="translated">&lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; QPlace :: icon（）const</target>
        </trans-unit>
        <trans-unit id="bf081eccdd3ba4e8069830e1d7565652c757d964" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; QPlaceCategory::icon() const</source>
          <target state="translated">&lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; QPlaceCategory :: icon（）const</target>
        </trans-unit>
        <trans-unit id="f659d4d9dd0a1aec790f957c3c8570c0d5b23b17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; QPlaceSearchResult::icon() const</source>
          <target state="translated">&lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; QPlaceSearchResult :: icon（）const</target>
        </trans-unit>
        <trans-unit id="a548e3049bd8531c5ce608e926c1af225e5e5525" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; QPlaceSupplier::icon() const</source>
          <target state="translated">&lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; QPlaceSupplier :: icon（）const</target>
        </trans-unit>
        <trans-unit id="3259f35860729b429de7bfcc64036f32bf5cc5f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceicon#QPlaceIcon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;QPlaceIcon::operator=(const &lt;a href=&quot;qplaceicon#QPlaceIcon&quot;&gt;QPlaceIcon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplaceicon#QPlaceIcon&quot;&gt;QPlaceIcon&lt;/a&gt;＆QPlaceIcon :: operator =（const &lt;a href=&quot;qplaceicon#QPlaceIcon&quot;&gt;QPlaceIcon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="cf5c9162db2e52205a0a37a9e2a9db3eec94b869" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceidreply&quot;&gt;QPlaceIdReply&lt;/a&gt; *QPlaceManager::removeCategory(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplaceidreply&quot;&gt;QPlaceIdReply&lt;/a&gt; * QPlaceManager :: removeCategory（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="6d3c61020d2ec19d9ac5234549d7298c0adaa3d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceidreply&quot;&gt;QPlaceIdReply&lt;/a&gt; *QPlaceManager::removePlace(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplaceidreply&quot;&gt;QPlaceIdReply&lt;/a&gt; * QPlaceManager :: removePlace（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8c2aed38f0f34dec5a6de682147c1ba263f52f9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceidreply&quot;&gt;QPlaceIdReply&lt;/a&gt; *QPlaceManager::saveCategory(const &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplaceidreply&quot;&gt;QPlaceIdReply&lt;/a&gt; * QPlaceManager :: saveCategory（const &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e9be18e779f330f6bd8f6b2a5f58661de69bc471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceidreply&quot;&gt;QPlaceIdReply&lt;/a&gt; *QPlaceManager::savePlace(const &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplaceidreply&quot;&gt;QPlaceIdReply&lt;/a&gt; * QPlaceManager :: savePlace（const &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="815c7276730b2a356c6c91efcfe681218e084521" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceidreply#OperationType-enum&quot;&gt;QPlaceIdReply::OperationType&lt;/a&gt; QPlaceIdReply::operationType() const</source>
          <target state="translated">&lt;a href=&quot;qplaceidreply#OperationType-enum&quot;&gt;QPlaceIdReply :: OperationType&lt;/a&gt; QPlaceIdReply :: operationType（）const</target>
        </trans-unit>
        <trans-unit id="a45f27aebe413f363afc8282550f871f5acae5e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; *QGeoServiceProvider::placeManager() const</source>
          <target state="translated">&lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; * QGeoServiceProvider :: placeManager（）const</target>
        </trans-unit>
        <trans-unit id="45f67a4b353e38234df186e5113f9e1c722b4c25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; *QPlaceIcon::manager() const</source>
          <target state="translated">&lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt; * QPlaceIcon :: manager（）const</target>
        </trans-unit>
        <trans-unit id="d0d01e065beb8f3eab69d9066ecd089b9dc7ed27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacemanager#category&quot;&gt;QPlaceManager::category&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplacemanager#category&quot;&gt;QPlaceManager::category&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="5f3fd71c0ae37d7f5eaa6119472c960f7aff229f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacemanager#childCategories&quot;&gt;QPlaceManager::childCategories&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplacemanager#childCategories&quot;&gt;QPlaceManager::childCategories&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="1dab00407ca42124d6ca2b1d25ed5b789af038b1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacemanager#childCategoryIds&quot;&gt;QPlaceManager::childCategoryIds&lt;/a&gt;();</source>
          <target state="translated">&lt;a href=&quot;qplacemanager#childCategoryIds&quot;&gt;QPlaceManager::childCategoryIds&lt;/a&gt;();</target>
        </trans-unit>
        <trans-unit id="492ea0d8d2a642d82112239d79651ec2be78b2e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacemanager#parentCategoryId&quot;&gt;QPlaceManager::parentCategoryId&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplacemanager#parentCategoryId&quot;&gt;QPlaceManager::parentCategoryId&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="e411d3c2c3d65635d702c5f4ffa68a9d584bf10c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacematchreply&quot;&gt;QPlaceMatchReply&lt;/a&gt; *QPlaceManager::matchingPlaces(const &lt;a href=&quot;qplacematchrequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacematchreply&quot;&gt;QPlaceMatchReply&lt;/a&gt; * QPlaceManager :: matchingPlaces（const &lt;a href=&quot;qplacematchrequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="12b9574e75470e7aa502d68e62dc48e9aca48115" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacematchrequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; QPlaceMatchReply::request() const</source>
          <target state="translated">&lt;a href=&quot;qplacematchrequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; QPlaceMatchReply :: request（）const</target>
        </trans-unit>
        <trans-unit id="e2759022ce3d33c2e2126cd03613bf3d27600b05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacematchrequest#QPlaceMatchRequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; &amp;amp;QPlaceMatchRequest::operator=(const &lt;a href=&quot;qplacematchrequest#QPlaceMatchRequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacematchrequest#QPlaceMatchRequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt;＆QPlaceMatchRequest :: operator =（const &lt;a href=&quot;qplacematchrequest#QPlaceMatchRequest&quot;&gt;QPlaceMatchRequest&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="68348c4382256e551baa57d7307c1796ba55fbca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceproposedsearchresult&quot;&gt;QPlaceProposedSearchResult&lt;/a&gt; and &lt;a href=&quot;qplaceresult&quot;&gt;QPlaceResult&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qplaceproposedsearchresult&quot;&gt;QPlaceProposedSearchResult&lt;/a&gt;および&lt;a href=&quot;qplaceresult&quot;&gt;QPlaceResult&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc20d93035a1e44fcabf60e8f9d78a2476f364e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceratings&quot;&gt;QPlaceRatings&lt;/a&gt; QPlace::ratings() const</source>
          <target state="translated">&lt;a href=&quot;qplaceratings&quot;&gt;QPlaceRatings&lt;/a&gt; QPlace :: ratings（）const</target>
        </trans-unit>
        <trans-unit id="b5ae0430c3f8b4c8c0a5b41d61bcc8bc96e8ba3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceratings#QPlaceRatings&quot;&gt;QPlaceRatings&lt;/a&gt; &amp;amp;QPlaceRatings::operator=(const &lt;a href=&quot;qplaceratings#QPlaceRatings&quot;&gt;QPlaceRatings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplaceratings#QPlaceRatings&quot;&gt;QPlaceRatings&lt;/a&gt;＆QPlaceRatings :: operator =（const &lt;a href=&quot;qplaceratings#QPlaceRatings&quot;&gt;QPlaceRatings&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d9d0236fa13b44848ab5c05014dc59a8a35eaffc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacereply&quot;&gt;QPlaceReply&lt;/a&gt; *QPlaceManager::initializeCategories()</source>
          <target state="translated">&lt;a href=&quot;qplacereply&quot;&gt;QPlaceReply&lt;/a&gt; * QPlaceManager :: initializeCategories（）</target>
        </trans-unit>
        <trans-unit id="8079b8b8bd253dc5ebb37bd5479ac4baab683fab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacereply#Error-enum&quot;&gt;QPlaceReply::Error&lt;/a&gt; QPlaceReply::error() const</source>
          <target state="translated">&lt;a href=&quot;qplacereply#Error-enum&quot;&gt;QPlaceReply :: Error&lt;/a&gt; QPlaceReply :: error（）const</target>
        </trans-unit>
        <trans-unit id="b19ad17da04c48c29320c3a14551290c3f959dbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesearchreply&quot;&gt;QPlaceSearchReply&lt;/a&gt; *QPlaceManager::search(const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacesearchreply&quot;&gt;QPlaceSearchReply&lt;/a&gt; * QPlaceManager :: search（const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="05d9193aba31bea2511a204d511d99ff6c491d18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; QPlaceProposedSearchResult::searchRequest() const</source>
          <target state="translated">&lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; QPlaceProposedSearchResult :: searchRequest（）const</target>
        </trans-unit>
        <trans-unit id="547001a5598dd1123ba8d69c88ebc78ac772ce9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; QPlaceSearchReply::nextPageRequest() const</source>
          <target state="translated">&lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; QPlaceSearchReply :: nextPageRequest（）const</target>
        </trans-unit>
        <trans-unit id="af8c99a33cc54ae37009b168c0dd8b5fa2f8b026" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; QPlaceSearchReply::previousPageRequest() const</source>
          <target state="translated">&lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; QPlaceSearchReply :: previousPageRequest（）const</target>
        </trans-unit>
        <trans-unit id="1a7ddac2d45b3b14f010589f63aa0b9d2550d106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; QPlaceSearchReply::request() const</source>
          <target state="translated">&lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; QPlaceSearchReply :: request（）const</target>
        </trans-unit>
        <trans-unit id="09e7df0fe72933351c1b502557aa847ff03c6fad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesearchrequest#QPlaceSearchRequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;QPlaceSearchRequest::operator=(const &lt;a href=&quot;qplacesearchrequest#QPlaceSearchRequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacesearchrequest#QPlaceSearchRequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt;＆QPlaceSearchRequest :: operator =（const &lt;a href=&quot;qplacesearchrequest#QPlaceSearchRequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e4cadb25fef1e957ec6bc96fb7def46133eaebcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesearchrequest#RelevanceHint-enum&quot;&gt;QPlaceSearchRequest::RelevanceHint&lt;/a&gt; QPlaceSearchRequest::relevanceHint() const</source>
          <target state="translated">&lt;a href=&quot;qplacesearchrequest#RelevanceHint-enum&quot;&gt;QPlaceSearchRequest :: RelevanceHint&lt;/a&gt; QPlaceSearchRequest :: relevanceHint（）const</target>
        </trans-unit>
        <trans-unit id="13632d741139f7aa5cb2dae4c0153abda6fd51cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesearchresult#QPlaceSearchResult&quot;&gt;QPlaceSearchResult&lt;/a&gt; &amp;amp;QPlaceSearchResult::operator=(const &lt;a href=&quot;qplacesearchresult#QPlaceSearchResult&quot;&gt;QPlaceSearchResult&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacesearchresult#QPlaceSearchResult&quot;&gt;QPlaceSearchResult&lt;/a&gt;＆QPlaceSearchResult :: operator =（const &lt;a href=&quot;qplacesearchresult#QPlaceSearchResult&quot;&gt;QPlaceSearchResult&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c896aa9fa3a5e3afba1e17100a0673f2d24af390" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesearchresult#SearchResultType-enum&quot;&gt;QPlaceSearchResult::SearchResultType&lt;/a&gt; QPlaceSearchResult::type() const</source>
          <target state="translated">&lt;a href=&quot;qplacesearchresult#SearchResultType-enum&quot;&gt;QPlaceSearchResult :: SearchResultType&lt;/a&gt; QPlaceSearchResult :: type（）const</target>
        </trans-unit>
        <trans-unit id="a635bee4859efafeb91fddd0c73f04e61a4c5424" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesearchsuggestionreply&quot;&gt;QPlaceSearchSuggestionReply&lt;/a&gt; *QPlaceManager::searchSuggestions(const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacesearchsuggestionreply&quot;&gt;QPlaceSearchSuggestionReply&lt;/a&gt; * QPlaceManager :: searchSuggestions（const &lt;a href=&quot;qplacesearchrequest&quot;&gt;QPlaceSearchRequest&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="26edcdcb66f540a44c3c703d1b4c21551f963ae0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; QPlace::supplier() const</source>
          <target state="translated">&lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; QPlace :: supplier（）const</target>
        </trans-unit>
        <trans-unit id="393a9d38ce35849711aee07eee0b525c7dc82b9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; QPlaceContent::supplier() const</source>
          <target state="translated">&lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; QPlaceContent :: supplier（）const</target>
        </trans-unit>
        <trans-unit id="f3beae620919615854d16f1f4b8edf638c363e74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplacesupplier#QPlaceSupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; &amp;amp;QPlaceSupplier::operator=(const &lt;a href=&quot;qplacesupplier#QPlaceSupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplacesupplier#QPlaceSupplier&quot;&gt;QPlaceSupplier&lt;/a&gt;＆QPlaceSupplier :: operator =（const &lt;a href=&quot;qplacesupplier#QPlaceSupplier&quot;&gt;QPlaceSupplier&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a1f4bc7a78683681bd5fd8dbf860d21679cd586e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceuser&quot;&gt;QPlaceUser&lt;/a&gt; QPlaceContent::user() const</source>
          <target state="translated">&lt;a href=&quot;qplaceuser&quot;&gt;QPlaceUser&lt;/a&gt; QPlaceContent :: user（）const</target>
        </trans-unit>
        <trans-unit id="fe324da1a933ecfafc049d0cc6e78e10d8f2796b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaceuser#QPlaceUser&quot;&gt;QPlaceUser&lt;/a&gt; &amp;amp;QPlaceUser::operator=(const &lt;a href=&quot;qplaceuser#QPlaceUser&quot;&gt;QPlaceUser&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qplaceuser#QPlaceUser&quot;&gt;QPlaceUser&lt;/a&gt;＆QPlaceUser :: operator =（const &lt;a href=&quot;qplaceuser#QPlaceUser&quot;&gt;QPlaceUser&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="495a7cf19869b224ba83edd297786abc7507db33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaintextdocumentlayout&quot;&gt;QPlainTextDocumentLayout&lt;/a&gt; uses the &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; API that &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; requires, but redefines it partially in order to support plain text better. For instances, it does not operate on vertical pixels, but on paragraphs (called blocks) instead. The height of a document is identical to the number of paragraphs it contains. The layout also doesn't support tables or nested frames, or any sort of advanced text layout that goes beyond a list of paragraphs with syntax highlighting.</source>
          <target state="translated">&lt;a href=&quot;qplaintextdocumentlayout&quot;&gt;QPlainTextDocumentLayout&lt;/a&gt;は&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocumentに&lt;/a&gt;必要な&lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt; APIを使用しますが、プレーンテキストをより適切にサポートするために部分的に再定義します。たとえば、垂直方向のピクセルではなく、段落（ブロックと呼ばれます）に対して機能します。ドキュメントの高さは、ドキュメントに含まれる段落の数と同じです。レイアウトは、テーブルやネストされたフレーム、または構文の強調表示を含む段落のリストを超える高度なテキストレイアウトもサポートしていません。</target>
        </trans-unit>
        <trans-unit id="6d9ef28c758d6e67692e4d33156f3180f8659ca0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; holds a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; object which can be retrieved using the &lt;a href=&quot;qplaintextedit#document&quot;&gt;document&lt;/a&gt;() method. You can also set your own document object using &lt;a href=&quot;qplaintextedit#setDocument&quot;&gt;setDocument&lt;/a&gt;(). &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; emits a &lt;a href=&quot;qplaintextedit#textChanged&quot;&gt;textChanged&lt;/a&gt;() signal if the text changes and it also provides a isModified() function which will return true if the text has been modified since it was either loaded or since the last call to setModified with false as argument. In addition it provides methods for undo and redo.</source>
          <target state="translated">&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt;は、&lt;a href=&quot;qplaintextedit#document&quot;&gt;document&lt;/a&gt;（）メソッドを使用して取得できる&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;オブジェクトを保持します。&lt;a href=&quot;qplaintextedit#setDocument&quot;&gt;setDocument&lt;/a&gt;（）を使用して独自のドキュメントオブジェクトを設定することもできます。&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;は、テキストが変更された場合に&lt;a href=&quot;qplaintextedit#textChanged&quot;&gt;textChanged&lt;/a&gt;（）シグナルを発行します。また、テキストが読み込まれてから、または最後にfalseを引数としてsetModifiedを呼び出してから変更された場合にtrueを返すisModified（）関数も提供します。さらに、元に戻すおよびやり直すためのメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="62e914b0a40eeb48aa6591ca225137a463841bf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; is a thin class, implemented by using most of the technology that is behind &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; and &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;. Its performance benefits over &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; stem mostly from using a different and simplified text layout called &lt;a href=&quot;qplaintextdocumentlayout&quot;&gt;QPlainTextDocumentLayout&lt;/a&gt; on the text document (see &lt;a href=&quot;qtextdocument#setDocumentLayout&quot;&gt;QTextDocument::setDocumentLayout&lt;/a&gt;()). The plain text document layout does not support tables nor embedded frames, and</source>
          <target state="translated">&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt;は、&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;と&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocumentの&lt;/a&gt;背後にあるほとんどのテクノロジーを使用して実装されるシンクラスです。&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;に対するパフォーマンス上の利点は、主にテキストドキュメントで&lt;a href=&quot;qplaintextdocumentlayout&quot;&gt;QPlainTextDocumentLayout&lt;/a&gt;と呼ばれる別の単純化されたテキストレイアウトを使用することから生じます（&lt;a href=&quot;qtextdocument#setDocumentLayout&quot;&gt;QTextDocument :: setDocumentLayout&lt;/a&gt;（）を参照）。プレーンテキストドキュメントのレイアウトは、テーブルや埋め込みフレームをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="e19a1409df0e85f7015f56ff78433a6d8ac49f8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; is an advanced viewer/editor supporting plain text. It is optimized to handle large documents and to respond quickly to user input.</source>
          <target state="translated">&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt;は、プレーンテキストをサポートする高度なビューア/エディタです。大きなドキュメントを処理し、ユーザー入力にすばやく応答するように最適化されています。</target>
        </trans-unit>
        <trans-unit id="ea26af6324a163b237662f5bac66ee75829d4b0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; works on paragraphs and characters. A paragraph is a formatted string which is word-wrapped to fit into the width of the widget. By default when reading plain text, one newline signifies a paragraph. A document consists of zero or more paragraphs. Paragraphs are separated by hard line breaks. Each character within a paragraph has its own attributes, for example, font and color.</source>
          <target state="translated">&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt;は段落と文字に対して機能します。段落は、ウィジェットの幅に合わせてワードラップされたフォーマット済みの文字列です。デフォルトでは、プレーンテキストを読み取る場合、1つの改行は段落を示します。ドキュメントは0個以上の段落で構成されます。段落は改行で区切られます。段落内の各文字には、フォントや色などの独自の属性があります。</target>
        </trans-unit>
        <trans-unit id="9d539a48ef80b88cd27313c43526c1f8aa9ceab7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaintextedit#appendPlainText&quot;&gt;appendPlainText&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qplaintextedit#appendPlainText&quot;&gt;appendPlainText&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="098397503a5b22b411ae1d80a232bea90a479f8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplaintextedit#currentCharFormat&quot;&gt;currentCharFormat&lt;/a&gt;() is reset, unless &lt;a href=&quot;qplaintextedit#textCursor&quot;&gt;textCursor&lt;/a&gt;() is already at the beginning of the document.</source>
          <target state="translated">&lt;a href=&quot;qplaintextedit#currentCharFormat&quot;&gt;currentCharFormatが&lt;/a&gt;ない限り、（）、リセットされ&lt;a href=&quot;qplaintextedit#textCursor&quot;&gt;TextCursorの位置が&lt;/a&gt;（）ドキュメントの先頭にすでにあります。</target>
        </trans-unit>
        <trans-unit id="7f52153c3ef0d8f40eb822fd249ffbb9bfeac43a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qplatformsurfaceevent#SurfaceEventType-enum&quot;&gt;QPlatformSurfaceEvent::SurfaceEventType&lt;/a&gt; QPlatformSurfaceEvent::surfaceEventType() const</source>
          <target state="translated">&lt;a href=&quot;qplatformsurfaceevent#SurfaceEventType-enum&quot;&gt;QPlatformSurfaceEvent :: SurfaceEventType&lt;/a&gt; QPlatformSurfaceEvent :: surfaceEventType（）const</target>
        </trans-unit>
        <trans-unit id="46fd87ef0024dc63268d470acf4a776713aeacff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; checks that a plugin is linked against the same version of Qt as the application.</source>
          <target state="translated">&lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt;は、プラグインがアプリケーションと同じバージョンのQtに対してリンクされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="ba0ba26518ab314afc5e4020c364887494cb8d0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; provides access to a &lt;a href=&quot;plugins-howto&quot;&gt;Qt plugin&lt;/a&gt;. A Qt plugin is stored in a shared library (a DLL) and offers these benefits over shared libraries accessed using &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt;は&lt;a href=&quot;plugins-howto&quot;&gt;Qtプラグイン&lt;/a&gt;へのアクセスを提供します。Qtプラグインは共有ライブラリ（DLL）に格納されており、&lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt;を使用してアクセスされる共有ライブラリに比べて次のような利点があります。</target>
        </trans-unit>
        <trans-unit id="fd4fe753666de7d6de7c8c48f33ef5d64d8b2a26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; provides direct access to a root component object (&lt;a href=&quot;qpluginloader#instance&quot;&gt;instance&lt;/a&gt;()), instead of forcing you to resolve a C function manually.</source>
          <target state="translated">&lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt;は、C関数を手動で解決することを強制する代わりに、ルートコンポーネントオブジェクト（&lt;a href=&quot;qpluginloader#instance&quot;&gt;インスタンス&lt;/a&gt;（））への直接アクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="2f399a569c0c49b6b551f9c82f8d6ba8aded1147" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QCursor::hotSpot() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QCursor :: hotSpot（）const</target>
        </trans-unit>
        <trans-unit id="3f9efed7fc848d7ff5989718681fab6cce736d21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QDrag::hotSpot() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QDrag :: hotSpot（）const</target>
        </trans-unit>
        <trans-unit id="b5cedffce10fc3489971672c9f44bcbe9c51426f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QDropEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QDropEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="59ababcb23542898280e3a07c592bfdf48a0681d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QEnterEvent::globalPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QEnterEvent :: globalPos（）const</target>
        </trans-unit>
        <trans-unit id="5a6c8e0b99cf9078ed0bdbd191bc9c66bcf4244e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QEnterEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QEnterEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="dc9c5c14021405e3dda7d23a0234bda7ae4f11dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneContextMenuEvent::screenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneContextMenuEvent :: screenPos（）const</target>
        </trans-unit>
        <trans-unit id="6a4da0d9f9c3054ee1de1c851bd2f609767fb180" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneDragDropEvent::screenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneDragDropEvent :: screenPos（）const</target>
        </trans-unit>
        <trans-unit id="0ff46b8bec57e3e34eded3def9f9f8bc4b91949b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneHelpEvent::screenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneHelpEvent :: screenPos（）const</target>
        </trans-unit>
        <trans-unit id="985aad51cd43d5351c177f6060207c2d436eedb3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneHoverEvent::lastScreenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneHoverEvent :: lastScreenPos（）const</target>
        </trans-unit>
        <trans-unit id="d2bf01acf4a57e05965c0d8403195b0ecbd72019" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneHoverEvent::screenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneHoverEvent :: screenPos（）const</target>
        </trans-unit>
        <trans-unit id="4806bd7d516fe9659b997f9379a973c93f8e1ca3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneMouseEvent::buttonDownScreenPos(&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButton&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneMouseEvent :: buttonDownScreenPos（&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9daa7dea9646ad1f16e016a45169f32a0f8b15b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneMouseEvent::lastScreenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneMouseEvent :: lastScreenPos（）const</target>
        </trans-unit>
        <trans-unit id="80d57a7e2d108a1ec0164891a6e946000388e494" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneMouseEvent::screenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneMouseEvent :: screenPos（）const</target>
        </trans-unit>
        <trans-unit id="3c019afb2d9507c1ee52ca9adc5ee0afccdebb54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneWheelEvent::screenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsSceneWheelEvent :: screenPos（）const</target>
        </trans-unit>
        <trans-unit id="548e8a8062f3dd9a3b48a2bc2d9ef78f26093b53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsView::mapFromScene(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsView :: mapFromScene（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9d894ddf825817c4dd2a378707beb695f7eee094" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsView::mapFromScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsView :: mapFromScene（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f973643fc2ace7a5e63e5ec3d9dd1aef3b820a60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsView::mapFromScene(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QGraphicsView :: mapFromScene（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e8864b232c57fe67d79edd2bccedca30e4563c45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QHoverEvent::oldPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QHoverEvent :: oldPos（）const</target>
        </trans-unit>
        <trans-unit id="b472cfbced02786b777784b0173e280160ced89d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QHoverEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QHoverEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="29601d15c462893c99f368c3f3f75319a90973af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QImage::offset() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QImage :: offset（）const</target>
        </trans-unit>
        <trans-unit id="bb6e8a06a6bccb7a0f7a54fb1d1fa986bbcfd181" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QLine::center() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QLine :: center（）const</target>
        </trans-unit>
        <trans-unit id="04e9dafdb3b758bdaa843b8e597837e6d75ee780" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QLine::p1() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QLine :: p1（）const</target>
        </trans-unit>
        <trans-unit id="735f329101d4618e3ccb4948be177681636eee2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QLine::p2() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QLine :: p2（）const</target>
        </trans-unit>
        <trans-unit id="b50480e105431441b6b8498e4207bd4d7e256636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMatrix4x4::map(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMatrix4x4 :: map（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a3d02159f5049e7c0c03e9aca1ad8fbe2f228687" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMatrix4x4::operator*(const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMatrix4x4 :: operator *（const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d29f00b4eff18820db390a92a086355a3a10f822" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMatrix4x4::operator*(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMatrix4x4 :: operator *（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7cef71de4b5b2e9e0be00e6e78d571c6c40030bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMatrix::map(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMatrix :: map（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="712e8968373773c8006ed372c5866911b80abe10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMatrix::operator*(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMatrix :: operator *（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e4e8449c4140caf7e71354c2eb2eb568eac4f363" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMouseEvent::globalPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMouseEvent :: globalPos（）const</target>
        </trans-unit>
        <trans-unit id="1513d0dfd015aa6d1afe62edd7572f6796132c93" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMouseEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QMouseEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="e284ed417bbea5893c3495a9cc71506dac965a98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QPainter::brushOrigin() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QPainter :: brushOrigin（）const</target>
        </trans-unit>
        <trans-unit id="aea9aa6835340d3cf11a17ae110398c068493987" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QPointF::toPoint() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QPointF :: toPoint（）const</target>
        </trans-unit>
        <trans-unit id="09d4b083af495a5c9a2d8e7849e3f3bb980cf32c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QPolygon::point(int</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QPolygon :: point（int</target>
        </trans-unit>
        <trans-unit id="4c44d99d46b1fa4497f64e492eb85df542b286a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QRect::bottomLeft() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QRect :: bottomLeft（）const</target>
        </trans-unit>
        <trans-unit id="0349026bf2cf907e5479959bba027102a52cc70f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QRect::bottomRight() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QRect :: bottomRight（）const</target>
        </trans-unit>
        <trans-unit id="d0729340d2d903afbadd8ff6ab8315a5d819ea18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QRect::center() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QRect :: center（）const</target>
        </trans-unit>
        <trans-unit id="1f264c828ed3bf2e0b4c5f0272228fb6ab355cd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QRect::topLeft() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QRect :: topLeft（）const</target>
        </trans-unit>
        <trans-unit id="e59ab4eca4ec26c27da159c59f4821009becd28f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QRect::topRight() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QRect :: topRight（）const</target>
        </trans-unit>
        <trans-unit id="63c498284d987fb9d8186e67efff1259998743c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QStyleOptionToolButton::pos</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QStyleOptionToolButton :: pos</target>
        </trans-unit>
        <trans-unit id="bb22b52925baeba21b9ca4c5ec774cc6b2404aef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QTabletEvent::globalPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QTabletEvent :: globalPos（）const</target>
        </trans-unit>
        <trans-unit id="e22092251675864662464d68d9de21dc42323a9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QTabletEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QTabletEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="2d6df1cc8db0ac5f55fe1a40104b07234e512f31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QTransform::map(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QTransform :: map（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4868c931336f70cc14bb4009c1ee579651c94f06" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QTransform::operator*(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QTransform :: operator *（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="37b29cdb96c3d0959c8831d0a6591c9511b0706e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QVariant::toPoint() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QVariant :: toPoint（）const</target>
        </trans-unit>
        <trans-unit id="a89c3d74a24bc4cb5bb337878c71ac8e3240eec6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QVector2D::toPoint() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QVector2D :: toPoint（）const</target>
        </trans-unit>
        <trans-unit id="f82bef5a147dc58a445d776af93749592dcdf939" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QVector3D::toPoint() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QVector3D :: toPoint（）const</target>
        </trans-unit>
        <trans-unit id="0ce081e06caa1cc79c2b951488b5719fade324ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QVector4D::toPoint() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QVector4D :: toPoint（）const</target>
        </trans-unit>
        <trans-unit id="4efdbc3f1b9be6f0401bd04744e983138e1d1177" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWebEngineContextMenuData::position() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWebEngineContextMenuData :: position（）const</target>
        </trans-unit>
        <trans-unit id="d8b50316b1c56a33723d0dc2a8d2b538b934c81d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWheelEvent::angleDelta() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWheelEvent :: angleDelta（）const</target>
        </trans-unit>
        <trans-unit id="41b6e3ad0a2ea0745a2496038b0938909ae58885" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWheelEvent::globalPos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWheelEvent :: globalPos（）const</target>
        </trans-unit>
        <trans-unit id="68a4479c701b55897f01bbd8db6a61aa6f3bde80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWheelEvent::pixelDelta() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWheelEvent :: pixelDelta（）const</target>
        </trans-unit>
        <trans-unit id="a937dfbb7eae8950e552e16a96ef364d24702dde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWheelEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWheelEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="9a3391974891851e9c4571ff2393d0544ab771cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget::mapFrom(const &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget :: mapFrom（const &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="e7f3215b561af28fe15aad4bf03841d736240735" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget::mapFromGlobal(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget :: mapFromGlobal（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e839644377c4251d0ef4ce1bc2f8f1720de419a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget::mapFromParent(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget :: mapFromParent（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f8fa4a71ae2b63eac2060445448f5d5a05b7dee4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget::mapTo(const &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget :: mapTo（const &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="80af85f4274eddf77a5e2e6baf8ac9b4918b50db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget::mapToGlobal(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget :: mapToGlobal（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2f3d2214c3933beab5f6c63cd7368b16d7cc54a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget::mapToParent(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWidget :: mapToParent（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b17ff09a4763de7d173806c96571ff16d7c22a6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWindow::framePosition() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWindow :: framePosition（）const</target>
        </trans-unit>
        <trans-unit id="1b90aa64635cfbd77aa9e0fec992a0edcc5584d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWindow::mapFromGlobal(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWindow :: mapFromGlobal（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0d89a47dc8830bb96c95e2a3a8233c38be21b848" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWindow::mapToGlobal(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWindow :: mapToGlobal（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ba910aa82bb8301d5e64b5e68e777ffbeba6198e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWindow::position() const</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; QWindow :: position（）const</target>
        </trans-unit>
        <trans-unit id="499b05e55a4bdb44542f90956c124d0922e37fff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="2ee198375eeebf54cf7b528e4b6013ce66bfa229" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;, &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;、&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e25f4e3d313eb9dfbc2185d6fa0def372ca0871" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;, &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;, &lt;a href=&quot;qml-qtqml-qt#point-method&quot;&gt;point&lt;/a&gt;, &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;, &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;, &lt;a href=&quot;qml-qtqml-qt#size-method&quot;&gt;size&lt;/a&gt; -&amp;gt; vec2</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;、&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;、&lt;a href=&quot;qml-qtqml-qt#point-method&quot;&gt;ポイント&lt;/a&gt;、&lt;a href=&quot;qsize&quot;&gt;QSIZE&lt;/a&gt;、&lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;、&lt;a href=&quot;qml-qtqml-qt#size-method&quot;&gt;大きさ&lt;/a&gt;- &amp;gt; VEC2</target>
        </trans-unit>
        <trans-unit id="bf61db0c21d39ca644ffa528ed8d0ae59d64739d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;, &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;, &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;, &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt; -&amp;gt; vec2</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;、&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;、&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;、&lt;a href=&quot;qsizef&quot;&gt;QSizeF-&lt;/a&gt; &amp;gt; vec2</target>
        </trans-unit>
        <trans-unit id="5ea3fc08373949deeee57aa67dcb052d61784053" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;operator*(const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;演算子*（const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="fd7b7be206c4972d9e2d8ff34fbce3f9b6c052cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;operator*(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;演算子*（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4d82dae6aade62e119a2c53fdc093cee6ce8156f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;QPoint::operator*=(double</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆QPoint :: operator * =（double</target>
        </trans-unit>
        <trans-unit id="c46e0aba296aab97ad6b5825fc82f2ae210e06d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;QPoint::operator*=(float</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆QPoint :: operator * =（float</target>
        </trans-unit>
        <trans-unit id="5ad77f5e1411348763e768d6b6103d45b7ca5b72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;QPoint::operator*=(int</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆QPoint :: operator * =（int</target>
        </trans-unit>
        <trans-unit id="a95f3028a31e07bdf8a809362f6fc0d50f55bb7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;QPoint::operator+=(const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆QPoint :: operator + =（const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5f64677be36c835568705f1b6cfe494f82631fe1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;QPoint::operator-=(const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆QPoint :: operator-=（const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5f9bfb1550ef38f7d0c6ecb8499ef1ae8ce2f708" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;QPoint::operator/=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆QPoint :: operator / =（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="79c37b0cf28b2fba9b140a9405a9128eb92fbcdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; QPoint::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; QPoint :: transposed（）const</target>
        </trans-unit>
        <trans-unit id="667a835d68733a227ad68b88ad886d276da764cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;operator*(const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;演算子*（const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8c827c361be4954f231457c4181ed55fc49bb62e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;operator*(double</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;operator*(double</target>
        </trans-unit>
        <trans-unit id="601bd418d5065ca8c366edbe2a48d0b29e4dc855" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;operator*(float</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;operator*(float</target>
        </trans-unit>
        <trans-unit id="a6662f47f4a1cc026b6e978265e9268fb0c53952" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;operator*(int</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;operator*(int</target>
        </trans-unit>
        <trans-unit id="650edbe7b085cddf4b51dce022e793d9debcc9d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;operator+(const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;演算子+（const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b352a10db0f277b6a4f47e383c6e73a9a9171edd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;operator-(const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;演算子-（const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c4544d4e0cf89e87555b6062375ad6f217a5a963" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;operator/(const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;演算子/（const &lt;a href=&quot;qpoint#QPoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4f9768465aac9cda04a2a47addf9f22293e38cf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt;, &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt;, &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt;, where T is a class that derives from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; &amp;lt;T&amp;gt;、&lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt;、&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt;、ここでTは&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;から派生したクラスです</target>
        </trans-unit>
        <trans-unit id="ec606add5d282821ab313935aa023a8fbde5b4b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QPointer::operator=(T *</source>
          <target state="translated">&lt;a href=&quot;qpointer#QPointer&quot;&gt;QPointer&lt;/a&gt; &amp;lt;T&amp;gt;＆QPointer :: operator =（T *</target>
        </trans-unit>
        <trans-unit id="6b05303a80fa991bd4fa32eeff796c2a53f46bb4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; Element::operator QPointF() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; Element :: operator QPointF（）const</target>
        </trans-unit>
        <trans-unit id="bef28e2a851a8ed1e8aafffda077092d4b0b2099" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QCameraExposure::spotMeteringPoint() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QCameraExposure :: spotMeteringPoint（）const</target>
        </trans-unit>
        <trans-unit id="c296fa28477283c02be49241b87437afd9e7c07c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QChart::mapToPosition(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QChart :: mapToPosition（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="37d68b9123edf35de7b54eff0fb1f0d984ddf4be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QChart::mapToValue(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QChart :: mapToValue（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5818f75bc421518f7864bda3a248fa3ef97c2bbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QConicalGradient::center() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QConicalGradient :: center（）const</target>
        </trans-unit>
        <trans-unit id="110f6006982969167f688fe3dc65e5d1249ca72b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QDropEvent::posF() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QDropEvent::posF() const</target>
        </trans-unit>
        <trans-unit id="fa73eb56332bbfbf761d4173b03b5e3fb6439e13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QEnterEvent::localPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QEnterEvent::localPos() const</target>
        </trans-unit>
        <trans-unit id="43c227dab2289ba74fa4294838ad53e9048a1867" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QEnterEvent::screenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QEnterEvent::screenPos() const</target>
        </trans-unit>
        <trans-unit id="4537c7cd26cc490817468c94cd464bb7145e4231" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QEnterEvent::windowPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QEnterEvent::windowPos() const</target>
        </trans-unit>
        <trans-unit id="6ca71a220f30ca65633e8a439925d35fb2a9c4cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QEventPoint::normalizedPosition() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QEventPoint::normalizedPosition() const</target>
        </trans-unit>
        <trans-unit id="75aed9303c626faf50feae56e228e09f16de7e91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGestureEvent::mapToGraphicsScene(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGestureEvent :: mapToGraphicsScene（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e829328d18c3e7fb19ac1c834b50a0db64093baf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapFromItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapFromItem（const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d8922d02d1197635854ac9dd413976d125c7f953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapFromParent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapFromParent（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d92e9679d19f3b7726640abe379c73b5265a3781" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapFromParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapFromParent（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec0d45ac50ddc480fc9c09c4da1f6555fcc46259" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapFromParent(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapFromParent（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="13f9acbba9defeff1fe17d5becd6f7af6b080a14" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapFromScene(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapFromScene（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9db74436540f157de3a56ead426e165ac6451882" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapFromScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapFromScene（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dffcaa289594fb3e997c8b2cb04cb57c53da3899" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapFromScene(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapFromScene（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1912141c89ae7da48c5155686f3c01aa217087b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapToItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapToItem（const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c4d6e167ae25b93d8202d1fc4fabed70b097489f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapToParent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapToParent（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ff87f1bd900292941dfcd35615a3844df318da2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapToParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapToParent（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a282cc2ba0cf2c61a14f9a8d87b3bdb3e49e95a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapToParent(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapToParent（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="fca2fcc7e279d96ab2432633648fa995428d21c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapToScene(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapToScene（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5db662222b197e6ec7c128b8c9a99a75b4b7e561" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapToScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapToScene（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="892ea1ed8b797662d43e324fb3453f8bb3c6a690" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::mapToScene(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: mapToScene（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="44801509fed9cf3ac5c2bce760a3b70de4839783" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: pos（）const</target>
        </trans-unit>
        <trans-unit id="3ad74b6578740c74e97ff16b236620e9ca9c0e81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::scenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: scenePos（）const</target>
        </trans-unit>
        <trans-unit id="52a4f161a5c830dc607a78dff70fb9443b83e63c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem::transformOriginPoint() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItem :: transformOriginPoint（）const</target>
        </trans-unit>
        <trans-unit id="ad93f184eae0df84e9a003dd82a8652b3e4e1073" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItemAnimation::posAt(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItemAnimation :: posAt（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="655bfd403cb20c07750ac143e40f57138bf99d67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItemAnimation::posAt(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsItemAnimation :: posAt（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0a06e4a777977f97adf0d3526ce2020c10946d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsPixmapItem::offset() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsPixmapItem :: offset（）const</target>
        </trans-unit>
        <trans-unit id="cc339b4f3503f8a0f7824b68f93d232ac2940836" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneContextMenuEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneContextMenuEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="86d3c6365f9a86503a8e155e781c8340b559a7d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneContextMenuEvent::scenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneContextMenuEvent :: scenePos（）const</target>
        </trans-unit>
        <trans-unit id="3b76489ae8900b98f2d74ed14908787afef70d9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneDragDropEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneDragDropEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="159aff4f63bb079113e949a8ea0abe60542ce749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneDragDropEvent::scenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneDragDropEvent :: scenePos（）const</target>
        </trans-unit>
        <trans-unit id="c5643a4f5fa46e96f8e412be6066ce3ac4fe3d9b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneHelpEvent::scenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneHelpEvent :: scenePos（）const</target>
        </trans-unit>
        <trans-unit id="ec92a700b26913de660ecd609d5cce0d4b2909d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneHoverEvent::lastPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneHoverEvent :: lastPos（）const</target>
        </trans-unit>
        <trans-unit id="d909bb4b6c5486a08cd2886c270f823388b064c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneHoverEvent::lastScenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneHoverEvent :: lastScenePos（）const</target>
        </trans-unit>
        <trans-unit id="06d78e00bc60547a973b803202f35dc9a5ff7245" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneHoverEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneHoverEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="168e5da9426e9f3ecb8f0804f661fdb5ea3d1071" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneHoverEvent::scenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneHoverEvent :: scenePos（）const</target>
        </trans-unit>
        <trans-unit id="9905cd8e33cf5fb60f731bfae607ff5bec505f02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent::buttonDownPos(&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButton&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent :: buttonDownPos（&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2ae8a3f89b535bb1133975590cce1ed9e56b3f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent::buttonDownScenePos(&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt::MouseButton&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent :: buttonDownScenePos（&lt;a href=&quot;qt#MouseButton-enum&quot;&gt;Qt :: MouseButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da8011d35d44f440b3ab562f2cb018c0325add23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent::lastPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent :: lastPos（）const</target>
        </trans-unit>
        <trans-unit id="a80a137115dfaa19e7c831f0b74572604bc5e805" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent::lastScenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent :: lastScenePos（）const</target>
        </trans-unit>
        <trans-unit id="339c81dceac236f721d79d2370f56770bb593309" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="2c8f6c63c74bef9713ed493277e3674fe7cbff75" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent::scenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMouseEvent :: scenePos（）const</target>
        </trans-unit>
        <trans-unit id="ce56e8000f7dc16234c808b6e18d96d5edf3cd2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMoveEvent::newPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMoveEvent :: newPos（）const</target>
        </trans-unit>
        <trans-unit id="f549f527c8835738c6b113be7c116283c496a7cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMoveEvent::oldPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneMoveEvent :: oldPos（）const</target>
        </trans-unit>
        <trans-unit id="2b0789c23165df1506bdfa54a094d6e63eacb2cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneWheelEvent::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneWheelEvent :: pos（）const</target>
        </trans-unit>
        <trans-unit id="3de5eaacedb6df8e5712f42f70fe0bd6cfaab9ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneWheelEvent::scenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsSceneWheelEvent :: scenePos（）const</target>
        </trans-unit>
        <trans-unit id="bb071fb66dce7f7be879038bb73b3b423c4e909a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsView::mapToScene(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsView :: mapToScene（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0dcbdb9ccd4f6889f49f6ef3f01e6e8d823a64ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsView::mapToScene(int</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QGraphicsView :: mapToScene（int</target>
        </trans-unit>
        <trans-unit id="0b1cf1b2f4a5f587d9d6ef06d6368658d817c13a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QHoverEvent::oldPosF() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QHoverEvent::oldPosF() const</target>
        </trans-unit>
        <trans-unit id="d40782286c1aa521ac000a881c86178279360f2d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QHoverEvent::posF() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QHoverEvent::posF() const</target>
        </trans-unit>
        <trans-unit id="5b4cf39e211ca9052f94228c70ee8d3aa6668bc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLineF::center() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLineF :: center（）const</target>
        </trans-unit>
        <trans-unit id="6f1c7be88ad84790ad78858aa5a173f7bb75b6e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLineF::p1() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLineF :: p1（）const</target>
        </trans-unit>
        <trans-unit id="fe2791354911872dfaa5900d230a62897177fb98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLineF::p2() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLineF :: p2（）const</target>
        </trans-unit>
        <trans-unit id="8dea2f5eaea488bf778da0859c7c34cadb26b301" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLineF::pointAt(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLineF :: pointAt（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bdd4f7c326ef44c06458ecfb2c7191a98ea4d279" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLinearGradient::finalStop() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLinearGradient :: finalStop（）const</target>
        </trans-unit>
        <trans-unit id="720b4ce21c05731b1bb1e237e9b3935b9ed0b5ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLinearGradient::start() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QLinearGradient :: start（）const</target>
        </trans-unit>
        <trans-unit id="c4a3ca09474f4e86f6964e806daf1d08e2c95d46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QMatrix4x4::map(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QMatrix4x4 :: map（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="10377d04f6763147a1a3637ee17ab3cd7f06ff3b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QMatrix4x4::operator*(const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QMatrix4x4 :: operator *（const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="96113cf62e48ddcc4c659da215da3c15c636e34e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QMatrix4x4::operator*(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QMatrix4x4 :: operator *（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0dc7b21f9db2198ff9260ada60492c45fd94f8e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QMatrix::map(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QMatrix :: map（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="b6a1e1b4a4a263d0c0762ae44403bb98ea072716" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QMatrix::operator*(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QMatrix :: operator *（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="90ef56fd72dc76f9150766a4ca2d4e4fe2f80a62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QPaintEngineState::brushOrigin() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QPaintEngineState :: brushOrigin（）const</target>
        </trans-unit>
        <trans-unit id="cf73643fa5ee4ea6acee9b5b3aeac4ceafd19328" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QPainterPath::currentPosition() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF QPainterPath&lt;/a&gt; :: currentPosition（）const</target>
        </trans-unit>
        <trans-unit id="53c2fd94dcc0285c103169903906b96fbf545398" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QPainterPath::pointAtPercent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF QPainterPath&lt;/a&gt; :: pointAtPercent（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dea2314a198da217164e3d3f66546fef5d9003b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QPainterPath::pointAtPercent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF QPainterPath&lt;/a&gt; :: pointAtPercent（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6929ec90f6b0eb6330ebc056244061f7ad64e760" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QPickEvent::position() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QPickEvent :: position（）const</target>
        </trans-unit>
        <trans-unit id="ca10593e0a2741bee273298a67d9c083aeea7ed7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem::mapFromGlobal(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem :: mapFromGlobal（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f04fc59fe287d78549f671ff9d5c99a51cce7958" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem::mapFromItem(const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem :: mapFromItem（const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="bde0e0e5ba6a6c65b1bac63b0593d5316e14d2d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem::mapFromScene(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem :: mapFromScene（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7ef281557728e2146de4250641ed9c74c4dd3a7f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem::mapToGlobal(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem :: mapToGlobal（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="91dafa8e202c3154f2d4715bb7049485b3521781" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem::mapToItem(const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem :: mapToItem（const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fb0e2eeaaedbd035139c965cf07d70d2c66988ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem::mapToScene(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QQuickItem :: mapToScene（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2b693880e305eaacaafffd3cb9d6dc281a99e888" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRadialGradient::center() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRadialGradient :: center（）const</target>
        </trans-unit>
        <trans-unit id="a75cd319668a1332463cc3a9c01695b738d07cb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRadialGradient::focalPoint() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRadialGradient :: focalPoint（）const</target>
        </trans-unit>
        <trans-unit id="92bb9a91a7a15c44a69d4c37303efcfb5f05a19c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRectF::bottomLeft() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRectF :: bottomLeft（）const</target>
        </trans-unit>
        <trans-unit id="cf52cedc2bbf1226dcf8eb0a164046d2da277bec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRectF::bottomRight() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRectF :: bottomRight（）const</target>
        </trans-unit>
        <trans-unit id="0f4c9f12e8ff718f758a8c8a2da6b8320678e73c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRectF::center() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRectF :: center（）const</target>
        </trans-unit>
        <trans-unit id="99ca0fc9f09ce6663e0620ce05993bfb211bc366" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRectF::topLeft() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRectF :: topLeft（）const</target>
        </trans-unit>
        <trans-unit id="c5e1ced2762811cb63dee8cb49ba2ee6805a3b0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRectF::topRight() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QRectF :: topRight（）const</target>
        </trans-unit>
        <trans-unit id="72653c77a63083b316da121a4aa15dd1cbca2b07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScrollEvent::contentPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScrollEvent :: contentPos（）const</target>
        </trans-unit>
        <trans-unit id="4dbd1cab3a908f53ea12cd1c8a13b41726548eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScrollEvent::overshootDistance() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScrollEvent :: overshootDistance（）const</target>
        </trans-unit>
        <trans-unit id="8184af908d30b1fb29feec928d93e31cb5e79ba7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScrollPrepareEvent::contentPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScrollPrepareEvent :: contentPos（）const</target>
        </trans-unit>
        <trans-unit id="e46c39333d6fd4c2e09ca9fbeec39bb9a855dbe4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScrollPrepareEvent::startPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScrollPrepareEvent :: startPos（）const</target>
        </trans-unit>
        <trans-unit id="602ee6462667fbadd3e0ee2eaa8079493e38697b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScroller::finalPosition() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScroller :: finalPosition（）const</target>
        </trans-unit>
        <trans-unit id="037e8870014b901b742809f4f4a04116a2a3cd29" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScroller::pixelPerMeter() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScroller :: pixelPerMeter（）const</target>
        </trans-unit>
        <trans-unit id="cb8f7ccf0ab66de597273887b00e746a4356afb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScroller::velocity() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QScroller :: velocity（）const</target>
        </trans-unit>
        <trans-unit id="ef766d4b4df360a85ee530ae1b1ba7907c6fb954" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QSinglePointEvent::globalPosition() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QSinglePointEvent::globalPosition() const</target>
        </trans-unit>
        <trans-unit id="bdba0611d7b9df20b8f680f337593719e1ac65a1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QSinglePointEvent::position() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QSinglePointEvent::position() const</target>
        </trans-unit>
        <trans-unit id="76c3cb54cff1f38831eed237fbc9f42d0f60449b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QSinglePointEvent::scenePosition() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QSinglePointEvent::scenePosition() const</target>
        </trans-unit>
        <trans-unit id="9a24b1aab7c18246d08d70fcd6aec9b77b71b3db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QTextLayout::position() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QTextLayout :: position（）const</target>
        </trans-unit>
        <trans-unit id="0c907b3a53b4ca4f2132827a215689dac997c277" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QTextLine::position() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QTextLine :: position（）const</target>
        </trans-unit>
        <trans-unit id="1f3090a87947b20b40a00d96b935162854d58c85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QTransform::map(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QTransform :: map（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="390d9551a03065159ba238616da160a19afe035e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QTransform::operator*(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QTransform :: operator *（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8fd0c89b91903f705899225e0940b5d98eb34876" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QVariant::toPointF() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QVariant :: toPointF（）const</target>
        </trans-unit>
        <trans-unit id="3549445c2754a228be4ffbf6c109880fa7259b18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QVector2D::toPointF() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QVector2D :: toPointF（）const</target>
        </trans-unit>
        <trans-unit id="9094ba3d045ba430c7abbdd064fc8694b9af46c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QVector3D::toPointF() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QVector3D :: toPointF（）const</target>
        </trans-unit>
        <trans-unit id="1f3026f357b49f778bc41e1e54be8f0e18e54e76" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QVector4D::toPointF() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QVector4D :: toPointF（）const</target>
        </trans-unit>
        <trans-unit id="5482b4d8a2cefa07d32aafb43066ac3d659f660c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWaylandPointer::currentLocalPosition() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWaylandPointer :: currentLocalPosition（）const</target>
        </trans-unit>
        <trans-unit id="2e4cedf05558b29b88291c42091986281e5f434c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWaylandPointer::currentSpacePosition() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWaylandPointer :: currentSpacePosition（）const</target>
        </trans-unit>
        <trans-unit id="c0421490cb39c9012d50479f7125a56c3e706146" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWaylandQuickItem::mapFromSurface(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWaylandQuickItem :: mapFromSurface（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="48fdbb3bac3426a77e68fe1dc65b18b18ef69263" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWaylandQuickItem::mapToSurface(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWaylandQuickItem :: mapToSurface（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="210c19bce159f2f207610e8e15bf458da05a9125" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWheelEvent::globalPosition() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWheelEvent :: globalPosition（）const</target>
        </trans-unit>
        <trans-unit id="b4eb717efebba2d83b5bd3fc3b461902e5544453" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWheelEvent::position() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; QWheelEvent :: position（）const</target>
        </trans-unit>
        <trans-unit id="f0371509ccb70c01278c0ee86ac06ede111c7b7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::lastNormalizedPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: lastNormalizedPos（）const</target>
        </trans-unit>
        <trans-unit id="1254cae6663abef52455ee670139948d1e510ce4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::lastPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: lastPos（）const</target>
        </trans-unit>
        <trans-unit id="f6dfdce37dd4b25fd17a457c2779776173a82ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::lastScenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: lastScenePos（）const</target>
        </trans-unit>
        <trans-unit id="fcb132e96828fe655ff3e03deb17e2d0280a3f84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::lastScreenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: lastScreenPos（）const</target>
        </trans-unit>
        <trans-unit id="e1fed65275184547be692cefe5d7b472b4a18e1c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::normalizedPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: normalizedPos（）const</target>
        </trans-unit>
        <trans-unit id="0a593c8e6ca5ee2c88c102d548d1c357b432b21a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::pos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: pos（）const</target>
        </trans-unit>
        <trans-unit id="89a03f20478ce5bafdd9b54d7a69b7b62569044f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::scenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: scenePos（）const</target>
        </trans-unit>
        <trans-unit id="d1eb7437e87ecefea74da508ef7597b3e1306093" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::screenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: screenPos（）const</target>
        </trans-unit>
        <trans-unit id="aba2be8686eb4cf5bb5771b08e647443cc1e91bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::startNormalizedPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: startNormalizedPos（）const</target>
        </trans-unit>
        <trans-unit id="c582b430310faf826e4ccc9ea515e8d63129d17a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::startPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: startPos（）const</target>
        </trans-unit>
        <trans-unit id="9364baa7c05f6a8b8dad6f7900ff6658c8ff9b16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::startScenePos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: startScenePos（）const</target>
        </trans-unit>
        <trans-unit id="1d4f9743367475a2fc5814f4f6116c5314ef0a6a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint::startScreenPos() const</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; TouchPoint :: startScreenPos（）const</target>
        </trans-unit>
        <trans-unit id="0aa838ce5419b77ecd8f6c2fb3dce0181d787648" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;operator*(const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;演算子*（const &lt;a href=&quot;qmatrix4x4#QMatrix4x4&quot;&gt;QMatrix4x4&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5c85b0993eebd58a86d2567d8cc9aeffc8a41523" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;operator*(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;演算子*（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d99210dd1d5e199070641ba884701c446cefe2eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;QPointF::operator*=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;＆QPointF :: operator * =（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91f0baed06aba75b911ffa91fdaf554e2b2817b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;QPointF::operator+=(const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;＆QPointF :: operator + =（const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7e27035790ecaa0a6cd0f08b231123876a3bddeb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;QPointF::operator-=(const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;＆QPointF :: operator-=（const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="729494166028af5d4b12d4c6d1cd8f11633e15df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;QPointF::operator/=(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;＆QPointF :: operator / =（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="26d625fc794ec9277deaa18cf63c2224f667e2e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; QPointF::transposed() const</source>
          <target state="translated">&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; QPointF :: transposed（）const</target>
        </trans-unit>
        <trans-unit id="45dc2bfd1b21a93ad992f0842eaf09970d825a7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;operator*(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;operator*(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f118cc5db7aeaee0b14fcf91a2ea25a96171901" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;operator*(const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;演算子*（const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="9e9f5796101747b4727fe52f926ac8aa920ea662" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;operator+(const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;演算子+（const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="44db9830aab2ec11783bcada5b49fd5c1cc2a999" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;operator-(const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;演算子-（const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="6a77a873f00414981b9aba65cd4851e0d13f6707" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;operator/(const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;演算子/（const &lt;a href=&quot;qpointf#QPointF&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="55545ffffc6fd853ad8d9cdd8a003a683448620b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointingdevice#PointerType-enum&quot;&gt;QPointingDevice::PointerType&lt;/a&gt; QPointerEvent::pointerType() const</source>
          <target state="translated">&lt;a href=&quot;qpointingdevice#PointerType-enum&quot;&gt;QPointingDevice::PointerType&lt;/a&gt; QPointerEvent::pointerType() const</target>
        </trans-unit>
        <trans-unit id="d101795775651a675a5d98f684af13409d7d8008" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointingdevice#PointerType-enum&quot;&gt;QPointingDevice::PointerType&lt;/a&gt; QPointingDevice::pointerType() const</source>
          <target state="translated">&lt;a href=&quot;qpointingdevice#PointerType-enum&quot;&gt;QPointingDevice::PointerType&lt;/a&gt; QPointingDevice::pointerType() const</target>
        </trans-unit>
        <trans-unit id="3b53a2e02cd59d7135570006eb4ce96617ac0ba0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointingdeviceuniqueid&quot;&gt;QPointingDeviceUniqueId&lt;/a&gt; QPointingDevice::uniqueId() const</source>
          <target state="translated">&lt;a href=&quot;qpointingdeviceuniqueid&quot;&gt;QPointingDeviceUniqueId&lt;/a&gt; QPointingDevice::uniqueId() const</target>
        </trans-unit>
        <trans-unit id="59aa4d2ffada4db1cadadba540c3f7ca014a5f52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointingdeviceuniqueid&quot;&gt;QPointingDeviceUniqueId&lt;/a&gt; TouchPoint::uniqueId() const</source>
          <target state="translated">&lt;a href=&quot;qpointingdeviceuniqueid&quot;&gt;QPointingDeviceUniqueId&lt;/a&gt; TouchPoint :: uniqueId（）const</target>
        </trans-unit>
        <trans-unit id="f8fe96f49bd62eec1f598e73ae6425e8a54aea94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpointingdeviceuniqueid&quot;&gt;QPointingDeviceUniqueId&lt;/a&gt; identifies a unique object, such as a tagged token or stylus, which is used with a pointing device. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpointingdeviceuniqueid&quot;&gt;QPointingDeviceUniqueId&lt;/a&gt;は、ポインティングデバイスで使用されるタグ付きトークンやスタイラスなどの一意のオブジェクトを識別します。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c2ace86f5d52f2cf4b482bc629e3c4a72121a411" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QGraphicsView::mapFromScene(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QGraphicsView :: mapFromScene（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="921334cbba8b75e3a31fc560a7fdb2eff7ce6ffe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QGraphicsView::mapFromScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QGraphicsView :: mapFromScene（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2417a2badd810a3b2aff073b5087a493a467b59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QGraphicsView::mapFromScene(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QGraphicsView :: mapFromScene（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="acd8ec562be6579576881cf82064b177a97d76bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QGraphicsView::mapFromScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QGraphicsView :: mapFromScene（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="333f51504648cfc5727767884b11ea572b24513d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QMatrix::map(const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QMatrix :: map（const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="e8acdec43495ae8106b0bc7c32c46222f5c97538" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QMatrix::mapToPolygon(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QMatrix :: mapToPolygon（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="ca4ac0aff0cd882ccd8afb7f73ba13c3ae79db56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QMatrix::operator*(const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QMatrix :: operator *（const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="691616fc6d9550b2e0c5cfbb9afa0bd3d7d9e09e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygonF::toPolygon() const</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygonF :: toPolygon（）const</target>
        </trans-unit>
        <trans-unit id="e2b2472d26580c39f476d13b0b670b16167ee3bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QTransform::map(const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QTransform :: map（const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="d09e75f8a717bf58d5865d3ef905b48d27e9489c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QTransform::mapToPolygon(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QTransform :: mapToPolygon（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="16141af5351dbd039d9182a51ff14916ddac94de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QTransform::operator*(const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; QTransform :: operator *（const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="56aa4141d6d87028fbc818ce6b97632f9c0b80bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; provides the &lt;a href=&quot;qpolygon#boundingRect&quot;&gt;boundingRect&lt;/a&gt;() and &lt;a href=&quot;qpolygon#translate&quot;&gt;translate&lt;/a&gt;() functions for geometry functions. Use the &lt;a href=&quot;qmatrix#map&quot;&gt;QMatrix::map&lt;/a&gt;() function for more general transformations of QPolygons.</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;は、ジオメトリ関数に&lt;a href=&quot;qpolygon#boundingRect&quot;&gt;boundingRect&lt;/a&gt;（）および&lt;a href=&quot;qpolygon#translate&quot;&gt;translate&lt;/a&gt;（）関数を提供します。&lt;a href=&quot;qmatrix#map&quot;&gt;QPolygonの&lt;/a&gt;より一般的な変換には、QMatrix :: map（）関数を使用します。</target>
        </trans-unit>
        <trans-unit id="03cc36a18956ccd14c10b7c9513bbdbcb7431072" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;, &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;, &lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;, &lt;a href=&quot;qvulkaninfovector&quot;&gt;QVulkanInfoVector&lt;/a&gt;, and &lt;a href=&quot;qxmlstreamattributes&quot;&gt;QXmlStreamAttributes&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;、&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;、&lt;a href=&quot;qstack&quot;&gt;QStack&lt;/a&gt;、&lt;a href=&quot;qvulkaninfovector&quot;&gt;QVulkanInfoVector&lt;/a&gt;、および&lt;a href=&quot;qxmlstreamattributes&quot;&gt;QXmlStreamAttributes&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b6e9b4bc3607365fb4a919ede58b1838919ea2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;operator*(const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;演算子*（const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="39cb982026677310e2e30c03f6e41a242c443d37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygon::intersected(const &lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygon :: intersected（const &lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0646347e4394b5ae40ac3a4e7bb5c3fb2019370d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygon::subtracted(const &lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygon :: subtracted（const &lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="99bf8a090b400184c17ccedbd8320e46a28fa80a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygon::translated(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygon :: translated（const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c5951864fbe7ebeddf9a0c8b9f6239f801889f85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygon::translated(int</source>
          <target state="translated">&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygon :: translated（int</target>
        </trans-unit>
        <trans-unit id="1df1021082b92ca860f65cd36b3cb0dc307fa35c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygon::united(const &lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt; QPolygon :: united（const &lt;a href=&quot;qpolygon#QPolygon&quot;&gt;QPolygon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c38a0641e7b6f698a1fb2f0c6cd8801ae27ed35f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapFromItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapFromItem（const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="7d79417fb297aacab5085fbdd365ffafa5895286" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapFromParent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapFromParent（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b42cfa52f00d20d9c281657ac0dad95480f314ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapFromParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapFromParent（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99dfbf763b2405013eee38e781863e660fff746c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapFromParent(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapFromParent（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="0b24a128319c83a245d99b1541bf8d0d10f1462a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapFromParent(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapFromParent（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="3930c3101075e92713be291a76bcc0921406cca8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapFromScene(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapFromScene（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="64f602a3edc97fb6b9e9fcfef0c01f2e3638b46b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapFromScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapFromScene（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aea988421f9fa9ce6d80f756a454e469354fd257" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapFromScene(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapFromScene（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="2fdb687a846bf742167135531acd4389f628c556" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapFromScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapFromScene（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="f4afa89533717313186fb4ae0323e9d25e89228a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapToItem(const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapToItem（const &lt;a href=&quot;qgraphicsitem#QGraphicsItem&quot;&gt;QGraphicsItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9dd9ef2df1596ed35139628eb85748e1e6fb028b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapToParent(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapToParent（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fad10e13fd699bb36a20a5190d73ee4dfc57e3be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapToParent(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapToParent（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="617f69450e45e6d1f314770dafd2b3cbed3ae813" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapToParent(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapToParent（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="5c0da77373c9d51bfab239338b217f01941fdf4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapToParent(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapToParent（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="da57c197b331e3e6f41bfd5cf9f52bc6ae2e9071" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapToScene(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapToScene（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bada0f469ff4357d6741510fc0415aad535e09c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapToScene(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapToScene（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2bc51594d5fc49cc87608f8f299f3d98d2d1850" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapToScene(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapToScene（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="26225652aa1b72143598407bd6864626fa548c69" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem::mapToScene(const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsItem :: mapToScene（const &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="83c86f787da91b84ce5dd4508f54bf981280d3b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsPolygonItem::polygon() const</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsPolygonItem :: polygon（）const</target>
        </trans-unit>
        <trans-unit id="2c387d3dc6b7af078494a0971a829c8750f44b16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsView::mapToScene(const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsView :: mapToScene（const &lt;a href=&quot;qpolygon&quot;&gt;QPolygon&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7741a974a52a39cf40f0ba84e3dbc65ad7ace8e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsView::mapToScene(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsView :: mapToScene（const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="48ccf1dc865b6834222d518cae5a4bc658e86e98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsView::mapToScene(int</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QGraphicsView :: mapToScene（int</target>
        </trans-unit>
        <trans-unit id="e9c795260b67da336a9ebbacc0f3fe8007159e46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QMatrix::map(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QMatrix :: map（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="8a6f366b4e89ebd5b9fe988d8d903dc1e49d7d0a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QMatrix::operator*(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QMatrix :: operator *（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="4eff7ea6d762240ecd306c1f80d7ef163f93d4a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QPainterPath::toFillPolygon(const &lt;a href=&quot;qmatrix&quot;&gt;QMatrix&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF QPainterPath&lt;/a&gt; :: toFillPolygon（const &lt;a href=&quot;qmatrix&quot;&gt;QMatrix&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="85be43eb58ae82718caefec4a65b82094ab569ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QPainterPath::toFillPolygon(const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF QPainterPath&lt;/a&gt; :: toFillPolygon（const &lt;a href=&quot;qtransform&quot;&gt;QTransform&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1da68402077cc33423ad3182d41ccd439435243e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QTransform::map(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QTransform :: map（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7c95be31c0387fa46a16b182c9d4afd9fb3e31ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QTransform::operator*(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; QTransform :: operator *（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="513caf38a7034ddef3832930b26fc5f41717303c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; also provides the &lt;a href=&quot;qpolygonf#isClosed&quot;&gt;isClosed&lt;/a&gt;() function to determine whether a polygon's start and end points are the same, and the &lt;a href=&quot;qpolygonf#toPolygon&quot;&gt;toPolygon&lt;/a&gt;() function returning an integer precision copy of this polygon.</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;には、ポリゴンの始点と終点が同じかどうかを判別する&lt;a href=&quot;qpolygonf#isClosed&quot;&gt;isClosed&lt;/a&gt;（）関数と、このポリゴンの整数精度のコピーを返す&lt;a href=&quot;qpolygonf#toPolygon&quot;&gt;toPolygon&lt;/a&gt;（）関数も用意されています。</target>
        </trans-unit>
        <trans-unit id="02fd824efe007da5b204ca187f9e374b363f3ade" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;operator*(const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;演算子*（const &lt;a href=&quot;qpolygonf&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a4f688aa10e7a18729d43843a44980eba0aa62a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF::intersected(const &lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF :: intersected（const &lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="73c25c0b3de2b506cd6a63869bcfb9d407de8106" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF::subtracted(const &lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF :: subtracted（const &lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="c3ffab017966b51102e5abe1cfb0f558d07300c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF::translated(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF :: translated（&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54f6df0c26cb1e1fb55520df2e04f0bc1408ac5f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF::translated(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF :: translationd（&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0dde2c8b1d5d8188ace03941258998ba002b818" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF::translated(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF :: translated（const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="150f99e431e8a2b2a10a1d6b2712c16967282f57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF::united(const &lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt; QPolygonF :: united（const &lt;a href=&quot;qpolygonf#QPolygonF&quot;&gt;QPolygonF&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7ba6b04e860f99cf661f483e9777f9e969f1c42c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpressurereading&quot;&gt;QPressureReading&lt;/a&gt; *QPressureSensor::reading() const</source>
          <target state="translated">&lt;a href=&quot;qpressurereading&quot;&gt;QPressureReading&lt;/a&gt; * QPressureSensor :: reading（）const</target>
        </trans-unit>
        <trans-unit id="8b14b5aaf5586b69bf60f3abb87666683cde1a01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt; *QPrinter::printEngine() const</source>
          <target state="translated">&lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt; * QPrinter :: printEngine（）const</target>
        </trans-unit>
        <trans-unit id="655eba69c702fb58f9868cb67462808a7f6369d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; *QAbstractPrintDialog::printer() const</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; * QAbstractPrintDialog :: printer（）const</target>
        </trans-unit>
        <trans-unit id="78fe50e5fde2efb282714812a8aa261b58548425" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; *QPageSetupDialog::printer()</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; * QPageSetupDialog :: printer（）</target>
        </trans-unit>
        <trans-unit id="7d2d88a802269586ef2d2fe18b2dd248a8f9f793" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; *QPrintDialog::printer()</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; * QPrintDialog :: printer（）</target>
        </trans-unit>
        <trans-unit id="3d49f826bfe0ac904c9ced2f1c1058d8e8ce6e98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; *QPrintPreviewDialog::printer()</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; * QPrintPreviewDialog :: printer（）</target>
        </trans-unit>
        <trans-unit id="6bfe4a44d6df17810be06cfbff7215fac53c362c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; does not take ownership of the engines, so you need to manage these engine instances yourself.</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;はエンジンの所有権を取得しないため、これらのエンジンインスタンスを自分で管理する必要があります。</target>
        </trans-unit>
        <trans-unit id="7cd22b51ce8e0eddf158e15ddeb99e09b090ba95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; provides functions that can be used to obtain information about the dimensions of the paper (the paper rectangle) and the dimensions of the printable area (the page rectangle). These are given in logical device coordinates that may differ from the physical coordinates used by the device itself, indicating that the printer is able to render text and graphics at a (typically higher) resolution than the user's display.</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;は、用紙の寸法（紙の長方形）と印刷可能領域の寸法（ページの長方形）に関する情報を取得するために使用できる関数を提供します。これらは、デバイス自体が使用する物理座標とは異なる可能性がある論理デバイス座標で示されます。これは、プリンターがユーザーのディスプレイよりも（通常は）高い解像度でテキストとグラフィックスをレンダリングできることを示します。</target>
        </trans-unit>
        <trans-unit id="7d0fdf9cc9b2bccefada6436c715d9eecfb4a99a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; supports a number of parameters, most of which can be changed by the end user through a &lt;a href=&quot;qprintdialog&quot;&gt;print dialog&lt;/a&gt;. In general, &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; passes these functions onto the underlying &lt;a href=&quot;qprintengine&quot;&gt;QPrintEngine&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;は多くのパラメーターをサポートしており、そのほとんどはエンドユーザーが&lt;a href=&quot;qprintdialog&quot;&gt;印刷ダイアログを&lt;/a&gt;介して変更できます。一般に、&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;はこれらの関数を基になる&lt;a href=&quot;qprintengine&quot;&gt;QPrintEngineに渡し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="bf5d399cebc7a5720ed9b2291973c5bc0c21bef9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; uses Qt's cross-platform PDF print engines respectively. If you can produce this format natively, for example &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; can generate PDF's from its print engine, set the output format back to &lt;a href=&quot;qprinter#OutputFormat-enum&quot;&gt;NativeFormat&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;は、QtのクロスプラットフォームPDF印刷エンジンをそれぞれ使用します。この形式をネイティブで生成できる場合、たとえば&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;がその印刷エンジンからPDFを生成できる場合は、出力形式を&lt;a href=&quot;qprinter#OutputFormat-enum&quot;&gt;NativeFormatに戻し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="50440bddb6f586627d85965dfacbc17360cbc7b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; uses Qt's cross-platform PDF print engines respectively. If you can produce this format natively, for example macOS can generate PDF's from its print engine, set the output format back to &lt;a href=&quot;qprinter#OutputFormat-enum&quot;&gt;NativeFormat&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;は、QtのクロスプラットフォームPDF印刷エンジンをそれぞれ使用します。この形式をネイティブに作成できる場合、たとえばmacOSが印刷エンジンからPDFを生成できる場合は、出力形式を&lt;a href=&quot;qprinter#OutputFormat-enum&quot;&gt;NativeFormatに戻し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="a18ddff106f0b0b6445960fb406a74463154a344" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; will generate its output as a searchable PDF file. This mode is the default when printing to a file.</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;は検索可能なPDFファイルとして出力を生成します。このモードは、ファイルに印刷するときのデフォルトです。</target>
        </trans-unit>
        <trans-unit id="9acde0ccce4baede3eb6c5fb2348cdb3cdee74a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; will print output using a method defined by the platform it is running on. This mode is the default when printing directly to a printer.</source>
          <target state="translated">&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;は、それが実行されているプラ​​ットフォームによって定義されたメソッドを使用して出力を印刷します。このモードは、プリンターに直接印刷する場合のデフォルトです。</target>
        </trans-unit>
        <trans-unit id="2a1d33c85b3e7b0fade9c53a11170b0721fc691c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#ColorMode-enum&quot;&gt;QPrinter::ColorMode&lt;/a&gt; QPrinter::colorMode() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#ColorMode-enum&quot;&gt;QPrinter :: ColorMode&lt;/a&gt; QPrinter :: colorMode（）const</target>
        </trans-unit>
        <trans-unit id="534ad339ecdcffe3648868bb18945b1fe849bf5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#ColorMode-enum&quot;&gt;QPrinter::ColorMode&lt;/a&gt; QPrinterInfo::defaultColorMode() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#ColorMode-enum&quot;&gt;QPrinter :: ColorMode&lt;/a&gt; QPrinterInfo :: defaultColorMode（）const</target>
        </trans-unit>
        <trans-unit id="ae366b4e9cbad6358b29e0e94876ffc81c63363f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#DuplexMode-enum&quot;&gt;QPrinter::DuplexMode&lt;/a&gt; QPrinter::duplex() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#DuplexMode-enum&quot;&gt;QPrinter :: DuplexMode&lt;/a&gt; QPrinter :: duplex（）const</target>
        </trans-unit>
        <trans-unit id="4a6d3f82e2641d9cc4797290b106e62b8d4380c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#DuplexMode-enum&quot;&gt;QPrinter::DuplexMode&lt;/a&gt; QPrinterInfo::defaultDuplexMode() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#DuplexMode-enum&quot;&gt;QPrinter :: DuplexMode&lt;/a&gt; QPrinterInfo :: defaultDuplexMode（）const</target>
        </trans-unit>
        <trans-unit id="3a3801cc69f73eef55c5f30324e851c8a64a5ad9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#Orientation-enum&quot;&gt;QPrinter::Orientation&lt;/a&gt; QPrintPreviewWidget::orientation() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#Orientation-enum&quot;&gt;QPrinter :: Orientation&lt;/a&gt; QPrintPreviewWidget :: orientation（）const</target>
        </trans-unit>
        <trans-unit id="252e1df2b6204c387720a8e6cf4683f3dcff2288" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#OutputFormat-enum&quot;&gt;QPrinter::OutputFormat&lt;/a&gt; QPrinter::outputFormat() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#OutputFormat-enum&quot;&gt;QPrinter :: OutputFormat&lt;/a&gt; QPrinter :: outputFormat（）const</target>
        </trans-unit>
        <trans-unit id="e4c88a248399935f8666bbff77f22129602c18a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#PageOrder-enum&quot;&gt;QPrinter::PageOrder&lt;/a&gt; QPrinter::pageOrder() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#PageOrder-enum&quot;&gt;QPrinter :: PageOrder&lt;/a&gt; QPrinter :: pageOrder（）const</target>
        </trans-unit>
        <trans-unit id="0fd342b231352a28e3faff6799f33e5e262dacd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#PaperSource-enum&quot;&gt;QPrinter::PaperSource&lt;/a&gt; QPrinter::paperSource() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#PaperSource-enum&quot;&gt;QPrinter :: PaperSource&lt;/a&gt; QPrinter :: paperSource（）const</target>
        </trans-unit>
        <trans-unit id="488409e119b92500e8fb719b73ab50eafe7254a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#PrintRange-enum&quot;&gt;QPrinter::PrintRange&lt;/a&gt; QPrinter::printRange() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#PrintRange-enum&quot;&gt;QPrinter :: PrintRange&lt;/a&gt; QPrinter :: printRange（）const</target>
        </trans-unit>
        <trans-unit id="15c6152d893759b2a5e7dfa5ce5372e1fc6a53c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#PrinterState-enum&quot;&gt;QPrinter::PrinterState&lt;/a&gt; QPrinter::printerState() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#PrinterState-enum&quot;&gt;QPrinter :: PrinterState&lt;/a&gt; QPrinter :: printerState（）const</target>
        </trans-unit>
        <trans-unit id="3966b63ab87e13fe4c6808b4860f601439c0ffd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#PrinterState-enum&quot;&gt;QPrinter::PrinterState&lt;/a&gt; QPrinterInfo::state() const</source>
          <target state="translated">&lt;a href=&quot;qprinter#PrinterState-enum&quot;&gt;QPrinter :: PrinterState&lt;/a&gt; QPrinterInfo :: state（）const</target>
        </trans-unit>
        <trans-unit id="71448df8267c4cb672b936e011e0823f2501b97e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#setCopyCount&quot;&gt;setCopyCount&lt;/a&gt;() tells &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; how many copies of the document it should print.</source>
          <target state="translated">&lt;a href=&quot;qprinter#setCopyCount&quot;&gt;setCopyCount&lt;/a&gt;（）は、印刷するドキュメントのコピー数を&lt;a href=&quot;qprinter&quot;&gt;QPrinterに通知&lt;/a&gt;します。</target>
        </trans-unit>
        <trans-unit id="94dba2c8914583864be3b6dee3f65045f2c2132a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#setCopyCount&quot;&gt;setCopyCount&lt;/a&gt;() tells QPrinter how many copies of the document it should print.</source>
          <target state="translated">&lt;a href=&quot;qprinter#setCopyCount&quot;&gt;setCopyCount&lt;/a&gt;（）は、QPrinterにドキュメントのコピー数を指示します。</target>
        </trans-unit>
        <trans-unit id="c63620367d7e4f919da579bfb069b78299e548ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#setFullPage&quot;&gt;setFullPage&lt;/a&gt;() tells &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; whether you want to deal with the full page or just with the part the printer can draw on.</source>
          <target state="translated">&lt;a href=&quot;qprinter#setFullPage&quot;&gt;setFullPage&lt;/a&gt;（）は、&lt;a href=&quot;qprinter&quot;&gt;QPrinterに&lt;/a&gt;ページ全体を処理するか、プリンタが描画できる部分だけを処理するかを指示します。</target>
        </trans-unit>
        <trans-unit id="76f81797a48ddd1643be382b6f8f5c54e5ddb121" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#setFullPage&quot;&gt;setFullPage&lt;/a&gt;() tells QPrinter whether you want to deal with the full page or just with the part the printer can draw on.</source>
          <target state="translated">&lt;a href=&quot;qprinter#setFullPage&quot;&gt;setFullPage&lt;/a&gt;（）は、QPrinterに、ページ全体を処理するか、プリンターが描画できる部分だけを処理するかを指示します。</target>
        </trans-unit>
        <trans-unit id="4e5a38ffdc591133973f78f5f5a59af044eb874d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#setResolution&quot;&gt;setResolution&lt;/a&gt;() tells &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; what resolution you wish the printer to provide, in dots per inch (DPI).</source>
          <target state="translated">&lt;a href=&quot;qprinter#setResolution&quot;&gt;setResolution&lt;/a&gt;（）は、プリンターに提供する解像度を&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;に、ドット/インチ（DPI）で指示します。</target>
        </trans-unit>
        <trans-unit id="59c78d10e0ee4e7a86578426257f766515f12d1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinter#setResolution&quot;&gt;setResolution&lt;/a&gt;() tells QPrinter what resolution you wish the printer to provide, in dots per inch (DPI).</source>
          <target state="translated">&lt;a href=&quot;qprinter#setResolution&quot;&gt;setResolution&lt;/a&gt;（）は、QPrinterに、プリンターが提供する解像度を1インチあたりのドット数（DPI）で示します。</target>
        </trans-unit>
        <trans-unit id="17361ee8e45bfdb9274da0411757b649df325090" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprinterinfo#QPrinterInfo&quot;&gt;QPrinterInfo&lt;/a&gt; &amp;amp;QPrinterInfo::operator=(const &lt;a href=&quot;qprinterinfo#QPrinterInfo&quot;&gt;QPrinterInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qprinterinfo#QPrinterInfo&quot;&gt;QPrinterInfo&lt;/a&gt;＆QPrinterInfo :: operator =（const &lt;a href=&quot;qprinterinfo#QPrinterInfo&quot;&gt;QPrinterInfo&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="47746b3f49432efc7b19bf4fa244f3c3f3ae34cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialog&lt;/a&gt; uses a &lt;a href=&quot;qprintpreviewwidget&quot;&gt;QPrintPreviewWidget&lt;/a&gt; internally, and the purpose of &lt;a href=&quot;qprintpreviewwidget&quot;&gt;QPrintPreviewWidget&lt;/a&gt; is to make it possible to embed the preview into other widgets. It also makes it possible to build a different user interface around it than the default one provided with &lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialog&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialogは&lt;/a&gt;使用しています&lt;a href=&quot;qprintpreviewwidget&quot;&gt;QPrintPreviewWidgetを&lt;/a&gt;内部的に、そして目的の&lt;a href=&quot;qprintpreviewwidget&quot;&gt;QPrintPreviewWidgetは、&lt;/a&gt;他のウィジェットにプレビューを埋め込むことができるようにすることです。また、&lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialogで&lt;/a&gt;提供されるデフォルトのユーザーインターフェースとは異なるユーザーインターフェースを構築することもできます。</target>
        </trans-unit>
        <trans-unit id="d2bc189916525b115640c5c761fa80f9d60555a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialog&lt;/a&gt; uses a QPrintPreviewWidget internally, and the purpose of QPrintPreviewWidget is to make it possible to embed the preview into other widgets. It also makes it possible to build a different user interface around it than the default one provided with &lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialog&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialog&lt;/a&gt;は内部でQPrintPreviewWidgetを使用し、QPrintPreviewWidgetの目的は、プレビューを他のウィジェットに埋め込むことができるようにすることです。また、&lt;a href=&quot;qprintpreviewdialog&quot;&gt;QPrintPreviewDialogで&lt;/a&gt;提供されるデフォルトのユーザーインターフェイスとは異なるユーザーインターフェイスを構築することもできます。</target>
        </trans-unit>
        <trans-unit id="9cdc4bfbeb87e353ab084ef93f2360930ff18767" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprintpreviewwidget#ViewMode-enum&quot;&gt;QPrintPreviewWidget::ViewMode&lt;/a&gt; QPrintPreviewWidget::viewMode() const</source>
          <target state="translated">&lt;a href=&quot;qprintpreviewwidget#ViewMode-enum&quot;&gt;QPrintPreviewWidget :: ViewMode&lt;/a&gt; QPrintPreviewWidget :: viewMode（）const</target>
        </trans-unit>
        <trans-unit id="9c204948809ff57844aaa1d5b8d99a628ce53a4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprintpreviewwidget#ZoomMode-enum&quot;&gt;QPrintPreviewWidget::ZoomMode&lt;/a&gt; QPrintPreviewWidget::zoomMode() const</source>
          <target state="translated">&lt;a href=&quot;qprintpreviewwidget#ZoomMode-enum&quot;&gt;QPrintPreviewWidget :: ZoomMode&lt;/a&gt; QPrintPreviewWidget :: zoomMode（）const</target>
        </trans-unit>
        <trans-unit id="3c8c4f41e74d8d588a578e407d723c61b2d0e4a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; allows you to treat a process as a sequential I/O device. You can write to and read from the process just as you would access a network connection using &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. You can then write to the process's standard input by calling &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;(), and read the standard output by calling &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), and &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;(). Because it inherits &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; can also be used as an input source for &lt;a href=&quot;qxmlreader&quot;&gt;QXmlReader&lt;/a&gt;, or for generating data to be uploaded using &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;では、プロセスをシーケンシャルI / Oデバイスとして扱うことができます。&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;を使用してネットワーク接続にアクセスするのと同じように、プロセスに読み書きできます。次に、&lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;（）を呼び出してプロセスの標準入力に書き込み、&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（）、&lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;（）、および&lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;（）を呼び出して標準出力を読み取ることができます。それが継承するため&lt;a href=&quot;qiodevice&quot;&gt;のQIODeviceを&lt;/a&gt;、&lt;a href=&quot;qprocess&quot;&gt;QProcessは&lt;/a&gt;また、入力ソースとして使用することができる&lt;a href=&quot;qxmlreader&quot;&gt;QXmlReader&lt;/a&gt;、または使用してアップロードされるデータを生成するための&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManagerを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5bc605850cf10f7d2c989aa0644293b5420726c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; can merge the two output channels, so that standard output and standard error data from the running process both use the standard output channel. Call &lt;a href=&quot;qprocess#setProcessChannelMode&quot;&gt;setProcessChannelMode&lt;/a&gt;() with &lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;MergedChannels&lt;/a&gt; before starting the process to activate this feature. You also have the option of forwarding the output of the running process to the calling, main process, by passing &lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;ForwardedChannels&lt;/a&gt; as the argument. It is also possible to forward only one of the output channels - typically one would use &lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;ForwardedErrorChannel&lt;/a&gt;, but &lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;ForwardedOutputChannel&lt;/a&gt; also exists. Note that using channel forwarding is typically a bad idea in GUI applications - you should present errors graphically instead.</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;は2つの出力チャネルをマージできるため、実行中のプロセスからの標準出力と標準エラーデータはどちらも標準出力チャネルを使用します。この機能をアクティブにするプロセスを開始する前に、&lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;MergedChannelsで&lt;/a&gt;&lt;a href=&quot;qprocess#setProcessChannelMode&quot;&gt;setProcessChannelMode&lt;/a&gt;（）を呼び出します。引数として&lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;ForwardedChannels&lt;/a&gt;を渡すことにより、実行中のプロセスの出力を呼び出し元のメインプロセスに転送することもできます。また、出力チャネルの1つだけを転送することもできます。通常は&lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;ForwardedErrorChannel&lt;/a&gt;を使用しますが、&lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;ForwardedOutputChannel&lt;/a&gt;も存在します。チャネル転送を使用することは、GUIアプリケーションでは一般的に悪い考えであることに注意してください。代わりにグラフィカルにエラーを表示する必要があります。</target>
        </trans-unit>
        <trans-unit id="098f0c9726781451f098dd84e345c0aeadc54745" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; forwards the input of the main process onto the running process. The child process reads its standard input from the same source as the main process. Note that the main process must not try to read its standard input while the child process is running.</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;は、メインプロセスの入力を実行中のプロセスに転送します。子プロセスは、メインプロセスと同じソースから標準入力を読み取ります。子プロセスの実行中は、メインプロセスが標準入力を読み取ってはならないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="2df6c7252f90eccb566ef2ac493958df19a98a99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; forwards the output of the running process onto the main process. Anything the child process writes to its standard output and standard error will be written to the standard output and standard error of the main process.</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;は、実行中のプロセスの出力をメインプロセスに転送します。子プロセスが標準出力と標準エラーに書き込むものはすべて、メインプロセスの標準出力と標準エラーに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="6ace2c39e238106efc1bc2fba201fef5be5678a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; manages the input of the running process. This is the default input channel mode of &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;は実行中のプロセスの入力を管理します。これは&lt;a href=&quot;qprocess&quot;&gt;QProcessの&lt;/a&gt;デフォルトの入力チャネルモードです。</target>
        </trans-unit>
        <trans-unit id="3c9472c26fdd2176077da6da18dd7320d2ec9957" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; manages the output of the running process, keeping standard output and standard error data in separate internal buffers. You can select the &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;'s current read channel by calling &lt;a href=&quot;qprocess#setReadChannel&quot;&gt;setReadChannel&lt;/a&gt;(). This is the default channel mode of &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;は実行中のプロセスの出力を管理し、標準出力と標準エラーデータを別々の内部バッファーに保持します。&lt;a href=&quot;qprocess#setReadChannel&quot;&gt;setReadChannel&lt;/a&gt;（）を呼び出すことにより、&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;の現在の読み取りチャネルを選択できます。これは&lt;a href=&quot;qprocess&quot;&gt;QProcessの&lt;/a&gt;デフォルトのチャネルモードです。</target>
        </trans-unit>
        <trans-unit id="7c50cb138f2e9dfbc3cca66510e623507a63c09d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; manages the standard output of the running process, but forwards its standard error onto the main process. This reflects the typical use of command line tools as filters, where the standard output is redirected to another process or a file, while standard error is printed to the console for diagnostic purposes. (This value was introduced in Qt 5.2.)</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;は実行中のプロセスの標準出力を管理しますが、その標準エラーをメインプロセスに転送します。これは、標準出力が別のプロセスまたはファイルにリダイレクトされ、標準エラーが診断目的でコンソールに出力されるフィルターとしてのコマンドラインツールの一般的な使用を反映しています。（この値はQt 5.2で導入されました。）</target>
        </trans-unit>
        <trans-unit id="c7c52e10f5456d47bc3a498f1be0b3f6d1e538e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; merges the output of the running process into the standard output channel (&lt;code&gt;stdout&lt;/code&gt;). The standard error channel (&lt;code&gt;stderr&lt;/code&gt;) will not receive any data. The standard output and standard error data of the running process are interleaved.</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;は、実行中のプロセスの出力を標準出力チャネル（ &lt;code&gt;stdout&lt;/code&gt; ）にマージします。標準エラーチャネル（ &lt;code&gt;stderr&lt;/code&gt; ）はデータを受信しません。実行中のプロセスの標準出力と標準エラーのデータはインターリーブされます。</target>
        </trans-unit>
        <trans-unit id="65be9624cea6e776c76cb63a61122c3cef31cafb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; provides a set of functions which allow it to be used without an event loop, by suspending the calling thread until certain signals are emitted:</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;は、特定のシグナルが発行されるまで呼び出しスレッドを一時停止することにより、イベントループなしで使用できる一連の関数を提供します。</target>
        </trans-unit>
        <trans-unit id="6fe7a20717e05ef917392fc18ec7a2ab802e2204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; then enters the &lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;Starting&lt;/a&gt; state, and when the program has started, &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; enters the &lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;Running&lt;/a&gt; state and emits &lt;a href=&quot;qprocess#started&quot;&gt;started&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qprocess&quot;&gt;&lt;/a&gt;次に、QProcessは&lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;開始&lt;/a&gt;状態になり、プログラムが開始されると、&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;は&lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;実行&lt;/a&gt;状態になり、&lt;a href=&quot;qprocess#started&quot;&gt;開始されます&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="da85e41ce74b72c2724f502992b874db2a5f0511" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#CreateProcessArgumentModifier-typedef&quot;&gt;QProcess::CreateProcessArgumentModifier&lt;/a&gt; QProcess::createProcessArgumentsModifier() const</source>
          <target state="translated">&lt;a href=&quot;qprocess#CreateProcessArgumentModifier-typedef&quot;&gt;QProcess :: CreateProcessArgumentModifier&lt;/a&gt; QProcess :: createProcessArgumentsModifier（）const</target>
        </trans-unit>
        <trans-unit id="b43cde4e5dc7c126cee951834891bd3fb6b48f41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#ExitStatus-enum&quot;&gt;QProcess::ExitStatus&lt;/a&gt; QProcess::exitStatus() const</source>
          <target state="translated">&lt;a href=&quot;qprocess#ExitStatus-enum&quot;&gt;QProcess :: ExitStatus&lt;/a&gt; QProcess :: exitStatus（）const</target>
        </trans-unit>
        <trans-unit id="4685d90b1f83f9f2f2c006e713f99f0c1e3f3a0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#InputChannelMode-enum&quot;&gt;QProcess::InputChannelMode&lt;/a&gt; QProcess::inputChannelMode() const</source>
          <target state="translated">&lt;a href=&quot;qprocess#InputChannelMode-enum&quot;&gt;QProcess :: InputChannelMode&lt;/a&gt; QProcess :: inputChannelMode（）const</target>
        </trans-unit>
        <trans-unit id="9f7a746644eab92bf09f23030a272787ba71a0f9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#ProcessChannel-enum&quot;&gt;QProcess::ProcessChannel&lt;/a&gt; QProcess::readChannel() const</source>
          <target state="translated">&lt;a href=&quot;qprocess#ProcessChannel-enum&quot;&gt;QProcess :: ProcessChannel&lt;/a&gt; QProcess :: readChannel（）const</target>
        </trans-unit>
        <trans-unit id="cff1b30c2c1e41db8d753b91d3c10b1df8a2e83d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;QProcess::ProcessChannelMode&lt;/a&gt; QProcess::processChannelMode() const</source>
          <target state="translated">&lt;a href=&quot;qprocess#ProcessChannelMode-enum&quot;&gt;QProcess :: ProcessChannelMode&lt;/a&gt; QProcess :: processChannelMode（）const</target>
        </trans-unit>
        <trans-unit id="89bbc6b49ca94103440bcda5434d2a7c86206fcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#ProcessError-enum&quot;&gt;QProcess::ProcessError&lt;/a&gt; QProcess::error() const</source>
          <target state="translated">&lt;a href=&quot;qprocess#ProcessError-enum&quot;&gt;QProcess :: ProcessError&lt;/a&gt; QProcess :: error（）const</target>
        </trans-unit>
        <trans-unit id="adbe5e18d86f94b41ac977fddeea95d449982d19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;QProcess::ProcessState&lt;/a&gt; QProcess::state() const</source>
          <target state="translated">&lt;a href=&quot;qprocess#ProcessState-enum&quot;&gt;QProcess :: ProcessState&lt;/a&gt; QProcess :: state（）const</target>
        </trans-unit>
        <trans-unit id="312b0c0f5d9c02281f15c54f6eb99c0cbc780611" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#setArguments&quot;&gt;setArguments&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qprocess#setArguments&quot;&gt;setArguments&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="cc9d3a396ae5e28439e5d5fd4a75b92bd2ff29ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#setCreateProcessArgumentsModifier&quot;&gt;setCreateProcessArgumentsModifier&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qprocess#setCreateProcessArgumentsModifier&quot;&gt;setCreateProcessArgumentsModifier&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="bc040ba143b8114539316e20d208eab03212cad8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#setNativeArguments&quot;&gt;setNativeArguments&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qprocess#setNativeArguments&quot;&gt;setNativeArguments&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="ab610971db1040d4db415e9f021af74f7447c049" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#setProcessEnvironment&quot;&gt;setProcessEnvironment&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qprocess#setProcessEnvironment&quot;&gt;setProcessEnvironment&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="9449665f8796fe3dc95dd3b9e7a327e2d71d8d2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="6404fca9bda3e1d184aebd3cd22536cbb9aed4d0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#setStandardErrorFile&quot;&gt;setStandardErrorFile&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qprocess#setStandardErrorFile&quot;&gt;setStandardErrorFile&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="78c94bac80ae63822e70ab7b51987f3c637d0913" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#setStandardInputFile&quot;&gt;setStandardInputFile&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qprocess#setStandardInputFile&quot;&gt;setStandardInputFile&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="8670ad26951efabd086c3c740423c41705d483d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#setStandardOutputFile&quot;&gt;setStandardOutputFile&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qprocess#setStandardOutputFile&quot;&gt;setStandardOutputFile&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="79705194deab1e76c3a9df95f4d5564631feee05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#setWorkingDirectory&quot;&gt;setWorkingDirectory&lt;/a&gt;()</source>
          <target state="translated">&lt;a href=&quot;qprocess#setWorkingDirectory&quot;&gt;setWorkingDirectory&lt;/a&gt;()</target>
        </trans-unit>
        <trans-unit id="c7fb84196750d6a7bddb38ceb0a673bc83d52ffb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;() blocks until one payload of data has been written to the process.</source>
          <target state="translated">&lt;a href=&quot;qprocess#waitForBytesWritten&quot;&gt;waitForBytesWritten&lt;/a&gt;（）は、データの1つのペイロードがプロセスに書き込まれるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="027b26a2922df07a8937c2a6e6b8c90b2b3ac496" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#waitForFinished&quot;&gt;waitForFinished&lt;/a&gt;() blocks until the process has finished.</source>
          <target state="translated">&lt;a href=&quot;qprocess#waitForFinished&quot;&gt;waitForFinished&lt;/a&gt;（）は、プロセスが完了するまでブロックします。</target>
        </trans-unit>
        <trans-unit id="1602c81fb4b79aa65395c9a3ea5880010acbd318" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;() blocks until new data is available for reading on the current read channel.</source>
          <target state="translated">&lt;a href=&quot;qprocess#waitForReadyRead&quot;&gt;waitForReadyRead&lt;/a&gt;（）は、現在の読み取りチャネルで新しいデータを読み取れるようになるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="d0ea2c4fb76a4bfb02fbc7ab037181de1d4aed5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocess#waitForStarted&quot;&gt;waitForStarted&lt;/a&gt;() blocks until the process has started.</source>
          <target state="translated">&lt;a href=&quot;qprocess#waitForStarted&quot;&gt;waitForStarted&lt;/a&gt;（）は、プロセスが開始されるまでブロックします。</target>
        </trans-unit>
        <trans-unit id="547327530e0239b4d45faa5478cc57f8de603f13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; QProcess::processEnvironment() const</source>
          <target state="translated">&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; QProcess :: processEnvironment（）const</target>
        </trans-unit>
        <trans-unit id="fce4b4a32e71c4e1902c1c7d6e6b2d32db218de5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; object into this one.</source>
          <target state="translated">&lt;a href=&quot;qprocessenvironment&quot;&gt;これにQProcessEnvironment&lt;/a&gt;オブジェクトを追加します。</target>
        </trans-unit>
        <trans-unit id="628e4d507a5bee78b120863d3c25101b7585ff44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; objects are different.</source>
          <target state="translated">&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt;オブジェクトは異なります。</target>
        </trans-unit>
        <trans-unit id="f3adca2a2196a4e8c20fd8723d433137cd7f270c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; objects are equal.</source>
          <target state="translated">&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt;オブジェクトは同じです。</target>
        </trans-unit>
        <trans-unit id="3a43dd23e87a1ca43bffd3f804c3962eb00334a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;QProcessEnvironment::operator=(const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt;＆QProcessEnvironment :: operator =（const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="1086a716f7c2ed749f64209570ce6c6fefdf2fc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt; (7) provides a horizontal progress bar.</source>
          <target state="translated">&lt;a href=&quot;qprogressbar&quot;&gt;QProgressBar&lt;/a&gt;（7）は水平プログレスバーを提供します。</target>
        </trans-unit>
        <trans-unit id="4c9d0de6d94b7c6b845a383497da7d31d2a2672e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpromise#QPromise&quot;&gt;QPromise&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QPromise::operator=(&lt;a href=&quot;qpromise#QPromise&quot;&gt;QPromise&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;&amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpromise#QPromise&quot;&gt;QPromise&lt;/a&gt; &amp;lt;T&amp;gt;＆QPromise :: operator =（&lt;a href=&quot;qpromise#QPromise&quot;&gt;QPromise&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;&amp;amp;</target>
        </trans-unit>
        <trans-unit id="5f86d7293e5b404445eb1d9425edff60a7dc3020" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qproperty#QProperty&quot;&gt;QProperty&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QProperty::operator=(QProperty::parameter_type</source>
          <target state="translated">&lt;a href=&quot;qproperty#QProperty&quot;&gt;QProperty&lt;/a&gt; &amp;lt;T&amp;gt;＆QProperty :: operator =（QProperty :: parameter_type</target>
        </trans-unit>
        <trans-unit id="9081da818ca70ccc4f1b93db8993722c382ab8ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qproperty#QProperty&quot;&gt;QProperty&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;QProperty::operator=(QProperty::rvalue_ref</source>
          <target state="translated">&lt;a href=&quot;qproperty#QProperty&quot;&gt;QProperty&lt;/a&gt; &amp;lt;T&amp;gt;＆QProperty :: operator =（QProperty :: rvalue_ref</target>
        </trans-unit>
        <trans-unit id="ee368ee003b062ea1f94ce50151766a1d8eff97d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpropertyanimation&quot;&gt;QPropertyAnimation&lt;/a&gt; interpolates over &lt;a href=&quot;properties#&quot;&gt;Qt properties&lt;/a&gt;. As property values are stored in &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;s, the class inherits &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt;, and supports animation of the same &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;meta types&lt;/a&gt; as its super class.</source>
          <target state="translated">&lt;a href=&quot;qpropertyanimation&quot;&gt;QPropertyAnimation&lt;/a&gt;は&lt;a href=&quot;properties#&quot;&gt;Qtプロパティを&lt;/a&gt;補間します。プロパティ値は&lt;a href=&quot;qvariant&quot;&gt;QVariantに&lt;/a&gt;格納されるため、クラスは&lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimationを&lt;/a&gt;継承し、スーパークラスと同じ&lt;a href=&quot;qmetatype#Type-enum&quot;&gt;メタタイプの&lt;/a&gt;アニメーションをサポートします。</target>
        </trans-unit>
        <trans-unit id="4f9df385c56864854eaed27dcce3e4c11c7a5e27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpropertyanimation&quot;&gt;QPropertyAnimation&lt;/a&gt; works like a charm on its own. For complex animations that, for instance, contain several objects, &lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt; is provided. An animation group is an animation that can contain other animations, and that can manage when its animations are played. Look at &lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt; for an example.</source>
          <target state="translated">&lt;a href=&quot;qpropertyanimation&quot;&gt;QPropertyAnimation&lt;/a&gt;はそれ自体が魅力のように機能します。たとえば、複数のオブジェクトを含む複雑なアニメーションの場合、&lt;a href=&quot;qanimationgroup&quot;&gt;QAnimationGroup&lt;/a&gt;が提供されます。アニメーショングループは、他のアニメーションを含めることができ、そのアニメーションがいつ再生されるかを管理できるアニメーションです。例として&lt;a href=&quot;qparallelanimationgroup&quot;&gt;QParallelAnimationGroup&lt;/a&gt;を見てください。</target>
        </trans-unit>
        <trans-unit id="e75d01eeb4e4259584b5d3e08b188068d04ca35e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qproximityreading&quot;&gt;QProximityReading&lt;/a&gt; *QProximitySensor::reading() const</source>
          <target state="translated">&lt;a href=&quot;qproximityreading&quot;&gt;QProximityReading&lt;/a&gt; * QProximitySensor :: reading（）const</target>
        </trans-unit>
        <trans-unit id="17b12aab913ad4b625c528a663ce03030236e2d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; (3) provides a command button.</source>
          <target state="translated">&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;（3）はコマンドボタンを提供します。</target>
        </trans-unit>
        <trans-unit id="ac6e1c2ba13e29889c420607d05f44d962cc372e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; *QDialogButtonBox::addButton(&lt;a href=&quot;qdialogbuttonbox#StandardButton-enum&quot;&gt;QDialogButtonBox::StandardButton&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; * QDialogBu​​ttonBox :: addButton（&lt;a href=&quot;qdialogbuttonbox#StandardButton-enum&quot;&gt;QDialogBu​​ttonBox :: StandardButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="84b511c33e685a3c959b00e6a77282d73574d00e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; *QDialogButtonBox::addButton(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; * QDialogBu​​ttonBox :: addButton（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="26e2ac12dd8be514eac94c48a018dba81ecec36d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; *QDialogButtonBox::button(&lt;a href=&quot;qdialogbuttonbox#StandardButton-enum&quot;&gt;QDialogButtonBox::StandardButton&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; * QDialogBu​​ttonBox :: button（&lt;a href=&quot;qdialogbuttonbox#StandardButton-enum&quot;&gt;QDialogBu​​ttonBox :: StandardButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2b7e64b7a3d1d3948145d4104c06b4961216164" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; *QMessageBox::addButton(&lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;QMessageBox::StandardButton&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; * QMessageBox :: addButton（&lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;QMessageBox :: StandardButton&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20372eee21298aa3877b80568952467d6a3d581b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; *QMessageBox::addButton(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; * QMessageBox :: addButton（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="912ed9b8804b4075d8ff3a0bd36da5824956edb6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; *QMessageBox::defaultButton() const</source>
          <target state="translated">&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; * QMessageBox :: defaultButton（）const</target>
        </trans-unit>
        <trans-unit id="0a8781bb0cfbbf5f0ad831a7cfb6a4e0eb250981" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; is a GUI push button that the user can press and release.</source>
          <target state="translated">&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;は、ユーザーが押したり離したりできるGUIプッシュボタンです。</target>
        </trans-unit>
        <trans-unit id="2029db6ec4232b56766ac98e5b8321f54002b42f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlabstracturlinterceptor&quot;&gt;QQmlAbstractUrlInterceptor&lt;/a&gt; is an interface which can be used to alter URLs before they are used by the QML engine. This is primarily useful for altering file urls into other file urls, such as selecting different graphical assets for the current platform.</source>
          <target state="translated">&lt;a href=&quot;qqmlabstracturlinterceptor&quot;&gt;QQmlAbstractUrlInterceptor&lt;/a&gt;は、QMLエンジンで使用される前にURLを変更するために使用できるインターフェースです。これは主に、現在のプラットフォームで異なるグラフィックアセットを選択するなど、ファイルのURLを他のファイルのURLに変更する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="9e9338f1d821bcf6ed002be0f6fc9c7b05021a24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt; provides a convenient way to load an application from a single QML file. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt;は、単一のQMLファイルからアプリケーションをロードする便利な方法を提供します。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14146fa2a0ed30bb88fa155b83b32a1b8f36e319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; *QQmlComponent::creationContext() const</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; * QQmlComponent :: creationContext（）const</target>
        </trans-unit>
        <trans-unit id="5110ecd23e68c3606a7ce10c23b5c795db697ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; *QQmlEngine::qmlContext(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; * QQmlEngine :: qmlContext（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ffeb19796799d7ca64d5bbb44ec9cec21194e760" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; *QQmlEngine::rootContext() const</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; * QQmlEngine :: rootContext（）const</target>
        </trans-unit>
        <trans-unit id="3ca1a24118bd07b83200354ceba95270d50f35f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; *QQmlExpression::context() const</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; * QQmlExpression :: context（）const</target>
        </trans-unit>
        <trans-unit id="922fb3d6bff9c7e36c755b273cf583576f10468c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; *QQuickView::rootContext() const</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; * QQuickView :: rootContext（）const</target>
        </trans-unit>
        <trans-unit id="23c45f5ed54a1ff6c5798faba3647a1f0164e52a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; *QQuickWidget::rootContext() const</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; * QQuickWidget :: rootContext（）const</target>
        </trans-unit>
        <trans-unit id="835a46b55b084f8ed0ac0d9c4913749cd85212b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; *qmlContext(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; * qmlContext（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a1075ef9f223a229909dbd4c2e8ac7bace08c692" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt; does &lt;b&gt;not&lt;/b&gt; take ownership of</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;は所有権を持ちませ&lt;b&gt;ん&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="82cf74b3157fd6bdc8f91a5de7fe2da06befbeb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;. If specified, the</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext&quot;&gt;QQmlContext&lt;/a&gt;。指定した場合、</target>
        </trans-unit>
        <trans-unit id="e28ea4961d56709106459c96f1c32ed8905dc356" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlcontext#QQmlContext&quot;&gt;QQmlContext&lt;/a&gt; *QQmlContext::parentContext() const</source>
          <target state="translated">&lt;a href=&quot;qqmlcontext#QQmlContext&quot;&gt;QQmlContext&lt;/a&gt; * QQmlContext :: parentContext（）const</target>
        </trans-unit>
        <trans-unit id="276f10da2fcb52c39d4a29f0b353d85dbe573276" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; *QQmlAspectEngine::qmlEngine() const</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; * QQmlAspectEngine :: qmlEngine（）const</target>
        </trans-unit>
        <trans-unit id="6b6211028c01fbed2a49f7d9bad0562de7f6df33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; *QQmlComponent::engine() const</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; * QQmlComponent :: engine（）const</target>
        </trans-unit>
        <trans-unit id="28d9926f1535d53df5728eb2f65c0478959e90df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; *QQmlContext::engine() const</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; * QQmlContext :: engine（）const</target>
        </trans-unit>
        <trans-unit id="5216159a85d8735669ddf85db46a3e5b54dcf21f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; *QQmlExpression::engine() const</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; * QQmlExpression :: engine（）const</target>
        </trans-unit>
        <trans-unit id="5e156edf813858940d6236d79fc1052860176998" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; *QQmlIncubationController::engine() const</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; * QQmlIncubationController :: engine（）const</target>
        </trans-unit>
        <trans-unit id="7915fb4a10444079cf391f99e68ad778cb7e49ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; *QQuickView::engine() const</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; * QQuickView :: engine（）const</target>
        </trans-unit>
        <trans-unit id="da4823ac0797abf6cf97a4fece4f972c40cd7c0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; *QQuickWidget::engine() const</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; * QQuickWidget :: engine（）const</target>
        </trans-unit>
        <trans-unit id="d8adaa6bb47148853e786adbedb64f2a67f62bc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; does not take ownership of the interceptor and won't delete it.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;はインターセプターの所有権を取得せず、インターセプターを削除しません。</target>
        </trans-unit>
        <trans-unit id="99241b4ae96e8b953def8b15c517c1b139f84e08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine#QML_ANONYMOUS&quot;&gt;QML_ANONYMOUS&lt;/a&gt; registers a C++ type that is not instantiable and cannot be referred to from QML. This enables the engine to coerce any inherited types that are instantiable from QML.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#QML_ANONYMOUS&quot;&gt;QML_ANONYMOUS&lt;/a&gt;は、インスタンス化できず、QMLから参照できないC ++タイプを登録します。これにより、エンジンはQMLからインスタンス化可能な継承されたタイプを強制することができます。</target>
        </trans-unit>
        <trans-unit id="084b714e385b75a5f5302f44fe06b529fa369544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine#QML_INTERFACE&quot;&gt;QML_INTERFACE&lt;/a&gt; registers an existing Qt interface type. The type is not instantiable from QML, and you cannot declare QML properties with it. Using C++ properties of this type from QML will do the expected interface casts, though.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#QML_INTERFACE&quot;&gt;QML_INTERFACEは&lt;/a&gt;、既存のQtインターフェイスタイプを登録します。この型はQMLからインスタンス化できず、QMLプロパティを宣言することはできません。ただし、QMLからこのタイプのC ++プロパティを使用すると、期待されるインターフェイスキャストが実行されます。</target>
        </trans-unit>
        <trans-unit id="f4764c1539c14c8716da5a8d4e6358e97e9ecf3c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine#QML_SINGLETON&quot;&gt;QML_SINGLETON&lt;/a&gt; combined with &lt;a href=&quot;qqmlengine#QML_ELEMENT&quot;&gt;QML_ELEMENT&lt;/a&gt; or &lt;a href=&quot;qqmlengine#QML_NAMED_ELEMENT&quot;&gt;QML_NAMED_ELEMENT&lt;/a&gt; registers a singleton type that can be imported from QML, as discussed below.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#QML_SINGLETON&quot;&gt;QML_SINGLETON&lt;/a&gt;組み合わせる&lt;a href=&quot;qqmlengine#QML_ELEMENT&quot;&gt;QML_ELEMENT&lt;/a&gt;または&lt;a href=&quot;qqmlengine#QML_NAMED_ELEMENT&quot;&gt;QML_NAMED_ELEMENTは、&lt;/a&gt;後述するように、QMLからインポートすることができるシングルトンタイプを登録します。</target>
        </trans-unit>
        <trans-unit id="e2bb72a2daecb778b7f6383b2ffe95a71aec737b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine#QML_UNCREATABLE&quot;&gt;QML_UNCREATABLE&lt;/a&gt;(reason) combined with with &lt;a href=&quot;qqmlengine#QML_ELEMENT&quot;&gt;QML_ELEMENT&lt;/a&gt; or &lt;a href=&quot;qqmlengine#QML_NAMED_ELEMENT&quot;&gt;QML_NAMED_ELEMENT&lt;/a&gt; registers a named C++ type that is not instantiable but should be identifiable as a type to the QML type system. This is useful if a type's enums or attached properties should be accessible from QML but the type itself should not be instantiable. The parameter should be an error message to be emitted if an attempt at creating an instance of the type is detected.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#QML_UNCREATABLE&quot;&gt;QML_UNCREATABLE&lt;/a&gt;（reason）を&lt;a href=&quot;qqmlengine#QML_ELEMENT&quot;&gt;QML_ELEMENT&lt;/a&gt;または&lt;a href=&quot;qqmlengine#QML_NAMED_ELEMENT&quot;&gt;QML_NAMED_ELEMENT&lt;/a&gt;と組み合わせると、インスタンス化できないが、QML型システムの型として識別できる名前付きC ++型が登録されます。これは、型の列挙型または添付プロパティにQMLからアクセスできる必要があるが、型自体はインスタンス化できない場合に役立ちます。このタイプのインスタンスを作成する試みが検出された場合に発行されるエラーメッセージは、パラメータである必要があります。</target>
        </trans-unit>
        <trans-unit id="5c8d996b450164557aae2f035f1b7dd1ef0c8a78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine#QQmlEngine&quot;&gt;QQmlEngine&lt;/a&gt; *QQmlEngine::qmlEngine(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#QQmlEngine&quot;&gt;QQmlEngine&lt;/a&gt; * QQmlEngine :: qmlEngine（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f4947bcd2f1450dc88dfc58180ca4eeb064cc8af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine#QQmlEngine&quot;&gt;QQmlEngine&lt;/a&gt; *qmlEngine(const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#QQmlEngine&quot;&gt;QQmlEngine&lt;/a&gt; * qmlEngine（const &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3456bf592c3cb49debb514306c9697b0e906dd73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine#qmlRegisterInterface&quot;&gt;qmlRegisterInterface&lt;/a&gt;() registers an existing Qt interface type. The type is not instantiable from QML, and you cannot declare QML properties with it. Using C++ properties of this type from QML will do the expected interface casts, though.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#qmlRegisterInterface&quot;&gt;qmlRegisterInterface&lt;/a&gt;（）は、既存のQtインターフェイスタイプを登録します。タイプはQMLからインスタンス化できず、QMLプロパティを宣言することはできません。ただし、QMLからこのタイプのC ++プロパティを使用すると、予想されるインターフェイスキャストが実行されます。</target>
        </trans-unit>
        <trans-unit id="38f0e8f21d535d87cf9437d17378c81323d873b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine#qmlRegisterSingletonType&quot;&gt;qmlRegisterSingletonType&lt;/a&gt;() registers a singleton type that can be imported from QML, as discussed below.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#qmlRegisterSingletonType&quot;&gt;qmlRegisterSingletonType&lt;/a&gt;（）は、以下で説明するように、QMLからインポートできるシングルトンタイプを登録します。</target>
        </trans-unit>
        <trans-unit id="91d6725753bc44cec8d150116997108b712e9610" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;() (with no parameters) registers a C++ type that is not instantiable and cannot be referred to from QML. This enables the engine to coerce any inherited types that are instantiable from QML.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;（）（パラメーターなし）は、インスタンス化できず、QMLから参照できないC ++型を登録します。これにより、エンジンはQMLからインスタンス化できる継承された型を強制できます。</target>
        </trans-unit>
        <trans-unit id="5814be4a2313376e949777242a3a12e722546618" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengine#qmlRegisterUncreatableType&quot;&gt;qmlRegisterUncreatableType&lt;/a&gt;() registers a named C++ type that is not instantiable but should be identifiable as a type to the QML type system. This is useful if a type's enums or attached properties should be accessible from QML but the type itself should not be instantiable.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#qmlRegisterUncreatableType&quot;&gt;qmlRegisterUncreatableType&lt;/a&gt;（）は、インスタンス化できませんが、QML型システムの型として識別可能である必要がある名前付きC ++型を登録します。これは、タイプの列挙型または添付プロパティにQMLからアクセスできるが、タイプ自体はインスタンス化できない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="cd1174aba82c8b25547de942a439bb4c771e240c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlengineextensionplugin&quot;&gt;QQmlEngineExtensionPlugin&lt;/a&gt; is a plugin interface that makes it possible to create QML extensions that can be loaded dynamically into QML applications. These extensions allow custom QML types to be made available to the QML engine.</source>
          <target state="translated">&lt;a href=&quot;qqmlengineextensionplugin&quot;&gt;QQmlEngineExtensionPlugin&lt;/a&gt;は、QMLアプリケーションに動的にロードできるQML拡張機能を作成できるようにするプラグインインターフェイスです。これらの拡張機能により、カスタムQMLタイプをQMLエンジンで利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="4300fcaa6a887a7ec0bec260fd65ee2fd4cb029f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlerror&quot;&gt;QQmlError&lt;/a&gt; QQmlExpression::error() const</source>
          <target state="translated">&lt;a href=&quot;qqmlerror&quot;&gt;QQmlError&lt;/a&gt; QQmlExpression :: error（）const</target>
        </trans-unit>
        <trans-unit id="116e9b442baafd8e43ff85caf96664420dc59aa0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlerror&quot;&gt;QQmlError&lt;/a&gt; includes a textual description of the error, as well as location information (the file, line, and column). The &lt;a href=&quot;qqmlerror#toString&quot;&gt;toString&lt;/a&gt;() method creates a single-line, human-readable string containing all of this information, for example:</source>
          <target state="translated">&lt;a href=&quot;qqmlerror&quot;&gt;QQmlErrorに&lt;/a&gt;は、エラーのテキストによる説明と場所情報（ファイル、行、列）が含まれます。&lt;a href=&quot;qqmlerror#toString&quot;&gt;toString&lt;/a&gt;（）メソッドは、例えば、この情報のすべてを含む単一のライン、人間が読み取り可能な文字列を作成します。</target>
        </trans-unit>
        <trans-unit id="ddaa579dc744589f722bdbc6222fa3fa4323bd95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlerror#QQmlError&quot;&gt;QQmlError&lt;/a&gt; &amp;amp;QQmlError::operator=(const &lt;a href=&quot;qqmlerror#QQmlError&quot;&gt;QQmlError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qqmlerror#QQmlError&quot;&gt;QQmlError&lt;/a&gt;＆QQmlError :: operator =（const &lt;a href=&quot;qqmlerror#QQmlError&quot;&gt;QQmlError&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="823834faefe5a31ec285735cd7d7f7c26c9a9a97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlextensionplugin&quot;&gt;QQmlExtensionPlugin&lt;/a&gt; is a plugin interface that makes it possible to create QML extensions that can be loaded dynamically into QML applications. These extensions allow custom QML types to be made available to the QML engine.</source>
          <target state="translated">&lt;a href=&quot;qqmlextensionplugin&quot;&gt;QQmlExtensionPlugin&lt;/a&gt;は、QMLアプリケーションに動的にロードできるQML拡張の作成を可能にするプラグインインターフェイスです。これらの拡張機能により、QMLエンジンでカスタムQMLタイプを利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="f44a0a76c5c3751d5e698970bd4c9aa9815c5356" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlfileselector&quot;&gt;QQmlFileSelector&lt;/a&gt; will automatically apply a &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; to qml file and asset paths.</source>
          <target state="translated">&lt;a href=&quot;qqmlfileselector&quot;&gt;QQmlFileSelector&lt;/a&gt;は、&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;をqmlファイルとアセットパスに自動的に適用します。</target>
        </trans-unit>
        <trans-unit id="d2e981d8412b365b657e8cec48ec5f4438361815" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlimageproviderbase&quot;&gt;QQmlImageProviderBase&lt;/a&gt; *QQmlEngine::imageProvider(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qqmlimageproviderbase&quot;&gt;QQmlImageProviderBase&lt;/a&gt; * QQmlEngine :: imageProvider（const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="094c8d58998a1e9107a3670ac4e6b5fbe739870f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; *QQmlEngine::incubationController() const</source>
          <target state="translated">&lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; * QQmlEngine :: incubationController（）const</target>
        </trans-unit>
        <trans-unit id="f3191b1c23fb77725408ca7be0b7f31590b4e741" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; *QQuickWindow::incubationController() const</source>
          <target state="translated">&lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; * QQuickWindow :: incubationController（）const</target>
        </trans-unit>
        <trans-unit id="5065ed851281bb0dac6caf75afbedb48ff0461bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; instances drive the progress of QQmlIncubators. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt;インスタンスは、QQmlIncubatorsの進行を促進します。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87afac7ffbcb1d167d200a667616c122310563a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator&lt;/a&gt; supports three incubation modes:</source>
          <target state="translated">&lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator&lt;/a&gt;は3つのインキュベーションモードをサポートしています。</target>
        </trans-unit>
        <trans-unit id="f2857cbb8ee7a54904652087a9fd795e05a7ad5b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;AsynchronousIfNested&lt;/a&gt; The creation will occur asynchronously if part of a nested asynchronous creation, or synchronously if not.</source>
          <target state="translated">&lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;AsynchronousIfNested&lt;/a&gt;作成は、ネストされた非同期作成の一部である場合は非同期で行われ、そうでない場合は同期で行われます。</target>
        </trans-unit>
        <trans-unit id="97ad09878fdc233d1592560c79c48dd15e3ed533" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;QQmlIncubator::IncubationMode&lt;/a&gt; QQmlIncubator::incubationMode() const</source>
          <target state="translated">&lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;QQmlIncubator :: IncubationMode&lt;/a&gt; QQmlIncubator :: incubationMode（）const</target>
        </trans-unit>
        <trans-unit id="2873095ec13b2c8f334122a15bf11fb8ebae238d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlincubator#Status-enum&quot;&gt;QQmlIncubator::Status&lt;/a&gt; QQmlIncubator::status() const</source>
          <target state="translated">&lt;a href=&quot;qqmlincubator#Status-enum&quot;&gt;QQmlIncubator :: Status&lt;/a&gt; QQmlIncubator :: status（）const</target>
        </trans-unit>
        <trans-unit id="2ea997c20e3d1030f706461662fcb51feae5568f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmllistreference&quot;&gt;QQmlListReference&lt;/a&gt; allows C++ programs to read from, and assign values to a QML list property in a simple and type-safe way. A &lt;a href=&quot;qqmllistreference&quot;&gt;QQmlListReference&lt;/a&gt; can be created by passing an object and property name or through a &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt; instance. These two are equivalent:</source>
          <target state="translated">&lt;a href=&quot;qqmllistreference&quot;&gt;QQmlListReferenceを&lt;/a&gt;使用すると、C ++プログラムは単純かつタイプセーフな方法でQMLリストプロパティから値を読み取ったり、QMLリストプロパティに値を割り当てたりできます。A &lt;a href=&quot;qqmllistreference&quot;&gt;QQmlListReferenceは、&lt;/a&gt;オブジェクトとプロパティ名を渡すことによって、またはを通じて作成することができる&lt;a href=&quot;qqmlproperty&quot;&gt;QQmlPropertyの&lt;/a&gt;インスタンス。これら2つは同等です。</target>
        </trans-unit>
        <trans-unit id="005a6b55222a029f4b892d9a8c5f513a43851c1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlndefrecord#TypeNameFormat-enum&quot;&gt;QQmlNdefRecord::TypeNameFormat&lt;/a&gt; QQmlNdefRecord::typeNameFormat() const</source>
          <target state="translated">&lt;a href=&quot;qqmlndefrecord#TypeNameFormat-enum&quot;&gt;QQmlNdefRecord :: TypeNameFormat&lt;/a&gt; QQmlNdefRecord :: typeNameFormat（）const</target>
        </trans-unit>
        <trans-unit id="3c5c8a7a35bbb3e827959e1cce13e586f1b32484" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt; *QQmlEngine::networkAccessManagerFactory() const</source>
          <target state="translated">&lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt; * QQmlEngine :: networkAccessManagerFactory（）const</target>
        </trans-unit>
        <trans-unit id="770e75e6f0fa95bc9295a04bdd4f29384dbaf717" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt; provides a mechanism for classes instantiated by a &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; to receive notification at key points in their creation.</source>
          <target state="translated">&lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatusは&lt;/a&gt;によってインスタンス化するクラスのためのメカニズムを提供&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;その作成に重要なポイントで通知を受け取ることを。</target>
        </trans-unit>
        <trans-unit id="7f59a68201b5342046df2cf656e14ca42ac2dccf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlproperty#PropertyTypeCategory-enum&quot;&gt;QQmlProperty::PropertyTypeCategory&lt;/a&gt; QQmlProperty::propertyTypeCategory() const</source>
          <target state="translated">&lt;a href=&quot;qqmlproperty#PropertyTypeCategory-enum&quot;&gt;QQmlProperty :: PropertyTypeCategory&lt;/a&gt; QQmlProperty :: propertyTypeCategory（）const</target>
        </trans-unit>
        <trans-unit id="df52186d17732d87960bc207171d7344e476c471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlproperty#QQmlProperty&quot;&gt;QQmlProperty&lt;/a&gt; &amp;amp;QQmlProperty::operator=(const &lt;a href=&quot;qqmlproperty#QQmlProperty&quot;&gt;QQmlProperty&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qqmlproperty#QQmlProperty&quot;&gt;QQmlProperty&lt;/a&gt;＆QQmlProperty :: operator =（const &lt;a href=&quot;qqmlproperty#QQmlProperty&quot;&gt;QQmlProperty&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="7aaf34a3efecf4be06a440738a18334e4ae73ff5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlproperty#Type-enum&quot;&gt;QQmlProperty::Type&lt;/a&gt; QQmlProperty::type() const</source>
          <target state="translated">&lt;a href=&quot;qqmlproperty#Type-enum&quot;&gt;QQmlProperty :: Type&lt;/a&gt; QQmlProperty :: type（）const</target>
        </trans-unit>
        <trans-unit id="2980ceb5fa08d564ce63cf48a579eb99b71eb771" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlpropertymap&quot;&gt;QQmlPropertyMap&lt;/a&gt; provides a convenient way to expose domain data to the UI layer. The following example shows how you might declare data in C++ and then access it in QML.</source>
          <target state="translated">&lt;a href=&quot;qqmlpropertymap&quot;&gt;QQmlPropertyMap&lt;/a&gt;は、ドメインデータをUIレイヤーに公開する便利な方法を提供します。次の例は、C ++でデータを宣言し、QMLでアクセスする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="e6564e57a6e590ad9fb76eac43b597473617ffcc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlscriptstring&quot;&gt;QQmlScriptString&lt;/a&gt; is used to create &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; properties that accept a script &quot;assignment&quot; from QML.</source>
          <target state="translated">&lt;a href=&quot;qqmlscriptstring&quot;&gt;QQmlScriptString&lt;/a&gt;は、QMLからのスクリプトの「割り当て」を受け入れる&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;プロパティを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="5d4e229882363d17428ffa62f25a6efc3ea4cef6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlscriptstring&quot;&gt;QQmlScriptString&lt;/a&gt; objects are different.</source>
          <target state="translated">&lt;a href=&quot;qqmlscriptstring&quot;&gt;QQmlScriptString&lt;/a&gt;オブジェクトは異なります。</target>
        </trans-unit>
        <trans-unit id="4f1f7cf47290483443731e8bb10131b0a69f5a4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlscriptstring&quot;&gt;QQmlScriptString&lt;/a&gt; objects are equal.</source>
          <target state="translated">&lt;a href=&quot;qqmlscriptstring&quot;&gt;QQmlScriptString&lt;/a&gt;オブジェクトは同じです。</target>
        </trans-unit>
        <trans-unit id="4cdeba376296eb4f98ce6b48d4a998d5d169b819" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt; &amp;amp;QQmlScriptString::operator=(const &lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt;＆QQmlScriptString :: operator =（const &lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a107bb786a76f7bfd08250eda06b249688301562" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; -&amp;gt; vec4, scalar value is &lt;code&gt;w&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion-&lt;/a&gt; &amp;gt; vec4、スカラー値は &lt;code&gt;w&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3793a2e9f06b0cbbfbffa7fd17ea8bc6aaae3d34" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera::panRotation(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera :: panRotation（float</target>
        </trans-unit>
        <trans-unit id="776e81a3027ce6924847bd6939de75d24672687c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera::rollRotation(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera :: rollRotation（float</target>
        </trans-unit>
        <trans-unit id="d548af2b8f7337d29b4e613e3cf5981baca1792e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera::rotation(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera :: rotation（float</target>
        </trans-unit>
        <trans-unit id="1b47771e2949dd7727f302264c2e128753e28bec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera::tiltRotation(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QCamera :: tiltRotation（float</target>
        </trans-unit>
        <trans-unit id="034f3b1c3614bfd6e54c8cc12a5d3b85d1354247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QScatterDataItem::rotation() const</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt; QScatterDataItem :: rotation（）const</target>
        </trans-unit>
        <trans-unit id="0e48f35765ef93c7c5563f9597ea576dffbd1746" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt;, &lt;a href=&quot;qml-qtqml-qt#quaternion-method&quot;&gt;quaternion&lt;/a&gt; -&amp;gt; vec4, scalar value is &lt;code&gt;w&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;qquaternion&quot;&gt;QQuaternion&lt;/a&gt;、&lt;a href=&quot;qml-qtqml-qt#quaternion-method&quot;&gt;quaternion-&lt;/a&gt; &amp;gt; vec4、スカラー値は &lt;code&gt;w&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c45fee170a1ca6a717e7eca980df09034504578" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;QQuaternion::operator*=(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆QQuaternion :: operator * =（const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="84b321b3653292001af932e534795d287ddba42b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;QQuaternion::operator*=(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆QQuaternion :: operator * =（float</target>
        </trans-unit>
        <trans-unit id="58abe5c27f3f8da8ebad7d3462b346921b01e024" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;QQuaternion::operator+=(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆QQuaternion :: operator + =（const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="86b586f7d93decc0afd41101da428f4c10fd64c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;QQuaternion::operator-=(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆QQuaternion :: operator-=（const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆</target>
        </trans-unit>
        <trans-unit id="a4e16c37848172c0e8b13d8b2de032eb7e3801fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;QQuaternion::operator/=(float</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt;＆QQuaternion :: operator / =（float</target>
        </trans-unit>
        <trans-unit id="e5201c589f126cda0292bbee909c0a8fa6142189" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion::conjugated() const</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion :: conjugated（）const</target>
        </trans-unit>
        <trans-unit id="1a573cdca8ef7ef61d3f69deb9afa166d00c8dfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion::inverted() const</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion :: inverted（）const</target>
        </trans-unit>
        <trans-unit id="cef701b143aa7ce5e35fa63a12d20895ac255615" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion::normalized() const</source>
          <target state="translated">&lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; QQuaternion :: normalized（）const</target>
        </trans-unit>
        <trans-unit id="d03e0ac8e515438d5c14daa7e3b8dcabb0b7569f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; inherits from &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;. All of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;. For example, you can use &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the queue is empty, and you can traverse a &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; using &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s iterator classes (for example, &lt;a href=&quot;qlistiterator&quot;&gt;QListIterator&lt;/a&gt;). But in addition, &lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; provides three convenience functions that make it easy to implement FIFO semantics: &lt;a href=&quot;qqueue#enqueue&quot;&gt;enqueue&lt;/a&gt;(), &lt;a href=&quot;qqueue#dequeue&quot;&gt;dequeue&lt;/a&gt;(), and &lt;a href=&quot;qqueue#head&quot;&gt;head&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qqueue&quot;&gt;QQueueはQList&lt;/a&gt;から継承し&lt;a href=&quot;qlist&quot;&gt;ます&lt;/a&gt;。&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;の機能はすべてQQueueにも適用され&lt;a href=&quot;qqueue&quot;&gt;ます&lt;/a&gt;。たとえば、あなたが使用できる&lt;a href=&quot;qlist#isEmpty&quot;&gt;のisEmptyを&lt;/a&gt;キューが空であるかどうかをテストするには（）、あなたが横切ることができる&lt;a href=&quot;qqueue&quot;&gt;QQueueを&lt;/a&gt;使用して&lt;a href=&quot;qlist&quot;&gt;QListに&lt;/a&gt;のイテレータクラス（例えば、&lt;a href=&quot;qlistiterator&quot;&gt;QListIteratorを&lt;/a&gt;）。ただし、さらに、&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;は、FIFOセマンティクスの実装を容易にする3つの便利な関数、&lt;a href=&quot;qqueue#enqueue&quot;&gt;enqueue&lt;/a&gt;（）、&lt;a href=&quot;qqueue#dequeue&quot;&gt;dequeue&lt;/a&gt;（）、&lt;a href=&quot;qqueue#head&quot;&gt;head&lt;/a&gt;（）を提供します。</target>
        </trans-unit>
        <trans-unit id="a409efd81f20c775f8e9f213a5c5eaaac4dce861" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;&amp;lt;T&amp;gt;</source>
          <target state="translated">&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;&amp;lt;T&amp;gt;</target>
        </trans-unit>
        <trans-unit id="60d2fa1b6b0d0deb1e88a0743f5830e0fffd513c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;&amp;lt;T&amp;gt; is one of Qt's generic &lt;a href=&quot;containers#&quot;&gt;container classes&lt;/a&gt;. It implements a queue data structure for items of a same type.</source>
          <target state="translated">&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt; &amp;lt;T&amp;gt;はQtの汎用&lt;a href=&quot;containers#&quot;&gt;コンテナクラス&lt;/a&gt;の1つです。同じタイプのアイテムのキューデータ構造を実装します。</target>
        </trans-unit>
        <trans-unit id="c8720c667ff1df3d64d0dae7613a6f2c808a4246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;'s value type must be an &lt;a href=&quot;containers#assignable-data-type&quot;&gt;assignable data type&lt;/a&gt;. This covers most data types that are commonly used, but the compiler won't let you, for example, store a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; as a value. Use &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;* instead.</source>
          <target state="translated">&lt;a href=&quot;qqueue&quot;&gt;QQueue&lt;/a&gt;の値の型は&lt;a href=&quot;containers#assignable-data-type&quot;&gt;割り当て可能なデータ型で&lt;/a&gt;なければなりません。これは、一般的に使用されるほとんどのデータ型をカバーしますが、たとえば、&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;を値として保存することはできません。代わりに&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *を使用してください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
