<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="9cb101985a20e335f82bea2786675dac07ad4743" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;, the responsibility for driving the rendering loop is transferred to the application. In this case no built-in render loop is used. Instead, it is up to the application to invoke the polish, synchronize and rendering steps at the appropriate time. It is possible to implement either a threaded or non-threaded behavior similar to the ones shown above.</source>
          <target state="translated">&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;を使用すると、レンダリングループを駆動する責任がアプリケーションに移されます。この場合、組み込みのレンダーループは使用されません。代わりに、適切なタイミングで研磨、同期、およびレンダリングのステップを呼び出すのはアプリケーションの責任です。上に示したものと同様に、スレッド化された動作またはスレッド化されていない動作のいずれかを実装することが可能です。</target>
        </trans-unit>
        <trans-unit id="d012f8d1021f21cc24a25741a7fb9a69b828bff8" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;, character classes such as &lt;code&gt;\w&lt;/code&gt;, &lt;code&gt;\d&lt;/code&gt;, etc. match characters with the corresponding Unicode property: for instance, &lt;code&gt;\d&lt;/code&gt; matches any character with the Unicode Nd (decimal digit) property.</source>
          <target state="translated">&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;を使用する場合、 &lt;code&gt;\w&lt;/code&gt; 、 &lt;code&gt;\d&lt;/code&gt; などの文字クラスは、対応するUnicodeプロパティと文字を照合します。たとえば、 &lt;code&gt;\d&lt;/code&gt; は、Unicode Nd（10進数字）プロパティと任意の文字を照合します。</target>
        </trans-unit>
        <trans-unit id="ac6f985a54a309fa51d578fd26c8d0b4e738a09d" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qregexp#exactMatch&quot;&gt;QRegExp::exactMatch&lt;/a&gt;(), if an exact match was not found, one could still find out how much of the subject string was matched by the regular expression by calling &lt;a href=&quot;qregexp#matchedLength&quot;&gt;QRegExp::matchedLength&lt;/a&gt;(). If the returned length was equal to the subject string's length, then one could conclude that a partial match was found.</source>
          <target state="translated">&lt;a href=&quot;qregexp#exactMatch&quot;&gt;QRegExp :: exactMatch&lt;/a&gt;（）を使用しているときに、完全一致が見つからなかった場合でも、&lt;a href=&quot;qregexp#matchedLength&quot;&gt;QRegExp :: matchedLength&lt;/a&gt;（）を呼び出すことにより、正規表現によって対象の文字列がどれだけ一致したかを確認できます。返された長さが対象の文字列の長さに等しい場合、部分一致が見つかったと結論付けることができます。</target>
        </trans-unit>
        <trans-unit id="7d94095f2415c5876a4a1aa870624cea946f6341" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qsqlrelationaltablemodel#setData&quot;&gt;setData&lt;/a&gt;() the role should always be &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt;, and when using &lt;a href=&quot;qsqlrelationaltablemodel#data&quot;&gt;data&lt;/a&gt;() the role should always be &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::DisplayRole&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qsqlrelationaltablemodel#setData&quot;&gt;setData&lt;/a&gt;（）を使用する場合、ロールは常に&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: EditRole&lt;/a&gt;である必要があり、&lt;a href=&quot;qsqlrelationaltablemodel#data&quot;&gt;data&lt;/a&gt;（）を使用する場合、ロールは常に&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: DisplayRoleである&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="a13ee32d4578c512ae1659dfec745b53cf236ec8" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; components, picking is triggered by mouse events.</source>
          <target state="translated">&lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt;コンポーネントを使用する場合、ピッキングはマウスイベントによってトリガーされます。</target>
        </trans-unit>
        <trans-unit id="0f56fc20751ece8353bd515ce19ac51a3e3f37cf" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qt3drender-qraycaster&quot;&gt;QRayCaster&lt;/a&gt; or &lt;a href=&quot;qt3drender-qscreenraycaster&quot;&gt;QScreenRayCaster&lt;/a&gt; components, picking can be explicitly triggered by the application.</source>
          <target state="translated">&lt;a href=&quot;qt3drender-qraycaster&quot;&gt;QRayCaster&lt;/a&gt;または&lt;a href=&quot;qt3drender-qscreenraycaster&quot;&gt;QScreenRayCaster&lt;/a&gt;コンポーネントを使用する場合、ピッキングはアプリケーションによって明示的にトリガーできます。</target>
        </trans-unit>
        <trans-unit id="4bb450b8e4af0bd506a47d7330ff8573095a4a13" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() and &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;() consecutively, it is possible for &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() to return true, but &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;() to return false. This is typically because &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() only reports the general ability of &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; to convert between types given suitable data; it is still possible to supply data which cannot actually be converted.</source>
          <target state="translated">使用している場合&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）と&lt;a href=&quot;qvariant#convert&quot;&gt;変換を&lt;/a&gt;するために（）連続して、それが可能である&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvertは&lt;/a&gt;（）がtrueを返すように、しかし、&lt;a href=&quot;qvariant#convert&quot;&gt;変換は&lt;/a&gt;（）がfalseを返すように。これは通常、&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）が、&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;が適切なデータを与えられた型間で変換する一般的な機能のみを報告するためです。実際に変換できないデータを提供することも可能です。</target>
        </trans-unit>
        <trans-unit id="d37f68c0c35e188254d8435a84da82e74251cffd" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() and &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;() consecutively, it is possible for &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() to return true, but &lt;a href=&quot;qvariant#convert&quot;&gt;convert&lt;/a&gt;() to return false. This is typically because &lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;() only reports the general ability of QVariant to convert between types given suitable data; it is still possible to supply data which cannot actually be converted.</source>
          <target state="translated">使用している場合&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）と&lt;a href=&quot;qvariant#convert&quot;&gt;変換を&lt;/a&gt;するために（）連続して、それが可能である&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvertは&lt;/a&gt;（）がtrueを返すように、しかし、&lt;a href=&quot;qvariant#convert&quot;&gt;変換は&lt;/a&gt;（）がfalseを返すように。これは通常、&lt;a href=&quot;qvariant#canConvert-1&quot;&gt;canConvert&lt;/a&gt;（）が、適切なデータが与えられたタイプ間で変換するQVariantの一般的な機能のみを報告するためです。実際には変換できないデータを提供することは可能です。</target>
        </trans-unit>
        <trans-unit id="63a5b0e4cc7f8c24a778525455fed9bdd298ad8d" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;DefaultMaterial.FragmentLighting&lt;/code&gt;, diffuse and specular lighting are calculated for each rendered pixel. Certain effects (such as a Fresnel or bump map) require &lt;code&gt;DefaultMaterial.FragmentLighting&lt;/code&gt; to work.</source>
          <target state="translated">&lt;code&gt;DefaultMaterial.FragmentLighting&lt;/code&gt; を使用すると、レンダリングされたピクセルごとに拡散反射光と鏡面反射光が計算されます。特定の効果（フレネルやバンプマップなど）が &lt;code&gt;DefaultMaterial.FragmentLighting&lt;/code&gt; するには、DefaultMaterial.FragmentLightingが必要です。</target>
        </trans-unit>
        <trans-unit id="181a002e05e8272926d9351f95bbfbfb7cdf85dc" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;DefaultMaterial.NoLighting&lt;/code&gt; no lighting is calculated. This mode is (predictably) very fast, and quite effective when image maps are used that do not need to be shaded by lighting.</source>
          <target state="translated">&lt;code&gt;DefaultMaterial.NoLighting&lt;/code&gt; を使用する場合、ライティングは計算されません。このモードは（予想通り）非常に高速で、照明でシェーディングする必要のないイメージマップを使用する場合に非常に効果的です。</target>
        </trans-unit>
        <trans-unit id="f5c98171bdab97a1919d644be562260acc1d76be" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;Drag.Automatic&lt;/code&gt; you should also define &lt;a href=&quot;qml-qtquick-drag#mimeData-attached-prop&quot;&gt;mimeData&lt;/a&gt; and bind the &lt;a href=&quot;qml-qtquick-drag#active-attached-prop&quot;&gt;active&lt;/a&gt; property to the active property of &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; : &lt;a href=&quot;qml-qtquick-mousearea#drag.active-prop&quot;&gt;MouseArea::drag.active&lt;/a&gt;</source>
          <target state="translated">使用している場合 &lt;code&gt;Drag.Automatic&lt;/code&gt; をあなたも定義する必要があり&lt;a href=&quot;qml-qtquick-drag#mimeData-attached-prop&quot;&gt;mimeData&lt;/a&gt;とバインド&lt;a href=&quot;qml-qtquick-drag#active-attached-prop&quot;&gt;アクティブ&lt;/a&gt;のアクティブ・プロパティにプロパティを&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;：&lt;a href=&quot;qml-qtquick-mousearea#drag.active-prop&quot;&gt;MouseArea :: drag.activeを&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f748b0d6e3f84aeeb3819d9034a189b81e556575" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;PrincipledMaterial.FragmentLighting&lt;/code&gt;, diffuse and specular lighting is calculated for each rendered pixel. Certain effects (such as a Fresnel or normal map) require &lt;code&gt;PrincipledMaterial.FragmentLighting&lt;/code&gt; to work.</source>
          <target state="translated">&lt;code&gt;PrincipledMaterial.FragmentLighting&lt;/code&gt; を使用する場合、拡散反射光と鏡面反射光は、レンダリングされたピクセルごとに計算されます。特定の効果（フレネルや法線マップなど）が機能するには、 &lt;code&gt;PrincipledMaterial.FragmentLighting&lt;/code&gt; が必要です。</target>
        </trans-unit>
        <trans-unit id="12e29fd22ce81fc6972c0d59e6992cae2fc2597f" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;PrincipledMaterial.NoLighting&lt;/code&gt; no lighting is calculated. This mode is (predictably) very fast, and is quite effective when image maps are used that you do not need to be shaded by lighting.</source>
          <target state="translated">&lt;code&gt;PrincipledMaterial.NoLighting&lt;/code&gt; を使用する場合、ライティングは計算されません。このモードは（予想通り）非常に高速であり、照明でシェーディングする必要がないイメージマップを使用する場合に非常に効果的です。</target>
        </trans-unit>
        <trans-unit id="bb15798a6838b0b5d9ff2812930cc61f9da64382" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;swipe.left&lt;/code&gt; and &lt;code&gt;swipe.right&lt;/code&gt;, the control cannot be swiped past the left and right edges. To achieve this type of &quot;wrapping&quot; behavior, set &lt;code&gt;swipe.behind&lt;/code&gt; instead. This will result in the same item being shown regardless of which direction the control is swiped. For example, in the image below, we set &lt;code&gt;swipe.behind&lt;/code&gt; and then swipe the control repeatedly in both directions:</source>
          <target state="translated">&lt;code&gt;swipe.left&lt;/code&gt; と &lt;code&gt;swipe.right&lt;/code&gt; を使用する場合、コントロールは左端と右端を超えてスワイプできません。このタイプの「折り返し」動作を実現するには、代わりに &lt;code&gt;swipe.behind&lt;/code&gt; を設定します。これにより、コントロールをどの方向にスワイプしても、同じアイテムが表示されます。たとえば、次の画像では、 &lt;code&gt;swipe.behind&lt;/code&gt; を設定してから、コントロールを両方向に繰り返しスワイプします。</target>
        </trans-unit>
        <trans-unit id="61bedb3305669141647e1f5b49411e374f737ba6" translate="yes" xml:space="preserve">
          <source>When using BlockWithGui, applications must be prepared for reentrancy in any function.</source>
          <target state="translated">BlockWithGui を使用する際には、アプリケーションはどの関数でも再入室できるように準備しておく必要があります。</target>
        </trans-unit>
        <trans-unit id="62f4bd548f8779658ed7ed0fc958d3e08e13ec54" translate="yes" xml:space="preserve">
          <source>When using DBus in a peer-to-peer context (i.e., not on a bus), the</source>
          <target state="translated">DBus をピアツーピアのコンテキストで使用する場合 (すなわち、バス上ではない場合)には</target>
        </trans-unit>
        <trans-unit id="691c13e7d09d858f3074039dda4ddcb22ceb97bd" translate="yes" xml:space="preserve">
          <source>When using OpenGL directly, the default adaptation is capable of providing the full Qt Quick 2 feature set. For more details, see &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer&quot;&gt;Default Adaptation&lt;/a&gt;.</source>
          <target state="translated">OpenGLを直接使用する場合、デフォルトのアダプテーションは完全なQt Quick2機能セットを提供できます。詳細については、&lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer&quot;&gt;デフォルトの適応を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3443c88fd0bfeed377ff1535febbb39cfd07c48f" translate="yes" xml:space="preserve">
          <source>When using OpenGL, Vulkan, Metal, or Direct 3D via the RHI, the default adaptation is capable of providing most features, including the full batching renderer described in &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer&quot;&gt;Default Adaptation&lt;/a&gt;, but some additional features may not be available as of Qt 5.14.</source>
          <target state="translated">RHIを介してOpenGL、Vulkan、Metal、またはDirect 3Dを使用する場合、デフォルトのアダプテーションは、&lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer&quot;&gt;デフォルトのアダプテーション&lt;/a&gt;で説明されている完全なバッチレンダラーを含むほとんどの機能を提供できますが、Qt5.14以降で一部の追加機能が利用できない場合があります。</target>
        </trans-unit>
        <trans-unit id="1050985281b9ecb52ace1f9f25c0094bcb38a505" translate="yes" xml:space="preserve">
          <source>When using PSK, the client must send to the server a valid identity and a valid pre shared key, in order for the SSL handshake to continue. Applications can provide this information in a slot connected to this signal, by filling in the passed</source>
          <target state="translated">PSKを使用する場合、クライアントはSSLハンドシェイクを継続するために、有効なIDと有効な事前共有鍵をサーバに送信しなければなりません。アプリケーションは、この信号に接続されたスロットに、渡された</target>
        </trans-unit>
        <trans-unit id="39ee444b0ae6c83e2b1c9912b7c4bafa58d26ba0" translate="yes" xml:space="preserve">
          <source>When using PSK, the client must send to the server a valid identity and a valid pre shared key, in order for the TLS handshake to continue. Applications can provide this information in a slot connected to this signal, by filling in the passed</source>
          <target state="translated">PSK を使用する場合、クライアントは TLS ハンドシェイクを継続するために、有効な ID と有効な事前共有鍵をサーバに送信する必要があります。アプリケーションは、この信号に接続されたスロットに、渡された</target>
        </trans-unit>
        <trans-unit id="3ddef15731edb7f2ec01ffcdbebf9f233547ee7b" translate="yes" xml:space="preserve">
          <source>When using QPointer on a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; (or a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;), previously the QPointer would be cleared by the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; destructor. Now, the QPointer is cleared by the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; destructor (since this is when &lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt; objects are cleared). Any QPointers tracking a widget will &lt;b&gt;NOT&lt;/b&gt; be cleared before the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; destructor destroys the children for the widget being tracked.</source>
          <target state="translated">上QPointerを使用する場合&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;（またはサブクラス&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;）、以前にQPointerはによってクリアされる&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;デストラクタ。これで、QPointerは&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;デストラクタによってクリアされます（これは&lt;a href=&quot;qweakpointer&quot;&gt;QWeakPointer&lt;/a&gt;オブジェクトがクリアされるときであるため）。ウィジェットを追跡しているQPointerは、&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;デストラクタが追跡されているウィジェットの子を破棄する前にクリアされ&lt;b&gt;ません&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="255f0d84a345be8b50ad54e3ccc3e16895694fac" translate="yes" xml:space="preserve">
          <source>When using Qt Assistant as the help browser for an application, it should be possible to customize it to fit the application better, so that it does not look like an independent, standalone help browser. To achieve this, several additional properties can be set in a Qt help collection file, to change for example the title or application icon of Qt Assistant. For more information, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtassistant-index.html&quot;&gt;Qt Assistant Manual&lt;/a&gt;.</source>
          <target state="translated">Qt Assistantをアプリケーションのヘルプブラウザーとして使用する場合、アプリケーションに合わせてカスタマイズして、独立したスタンドアロンのヘルプブラウザーのように見えないようにする必要があります。これを実現するために、Qtヘルプコレクションファイルにいくつかの追加プロパティを設定して、たとえばQt Assistantのタイトルやアプリケーションアイコンを変更できます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtassistant-index.html&quot;&gt;Qtアシスタントマニュアルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2e885d834a3a8009f53361c87cc4af716e63bfd9" translate="yes" xml:space="preserve">
          <source>When using Qt Assistant as the help browser for an application, it should be possible to customize it to fit the application better, so that it does not look like an independent, standalone help browser. To achieve this, several additional properties can be set in a Qt help collection file, to change for example the title or application icon of Qt Assistant. For more information, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtassistant-index.html&quot;&gt;Qt Assistant Manual&lt;/a&gt;.</source>
          <target state="translated">Qt Assistantをアプリケーションのヘルプブラウザーとして使用する場合は、アプリケーションに合わせてカスタマイズして、独立したスタンドアロンのヘルプブラウザーのように見えないようにする必要があります。これを実現するために、Qtヘルプコレクションファイルにいくつかの追加プロパティを設定して、たとえばQtアシスタントのタイトルやアプリケーションアイコンを変更することができます。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtassistant-index.html&quot;&gt;Qtアシスタントマニュアルを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="18dc1be3da1b58f61947b20badaafabb7fb35324" translate="yes" xml:space="preserve">
          <source>When using Qt Virtual Keyboard in a &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; on a touch device, it is necessary to set the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_AcceptTouchEvents&lt;/a&gt; attribute via &lt;a href=&quot;qwidget#setAttribute&quot;&gt;QWidget::setAttribute&lt;/a&gt;(). Without this attribute set, events from a touch device will be converted into synthesized mouse events.</source>
          <target state="translated">タッチデバイスの&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;でQt仮想キーボードを使用する場合、&lt;a href=&quot;qwidget#setAttribute&quot;&gt;QWidget :: setAttribute&lt;/a&gt;（）を介して&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_AcceptTouchEvents&lt;/a&gt;属性を設定する必要があります。この属性が設定されていない場合、タッチデバイスからのイベントは合成マウスイベントに変換されます。</target>
        </trans-unit>
        <trans-unit id="59ae4dd2c93a30c9950ccf14f13424ea63eff467" translate="yes" xml:space="preserve">
          <source>When using RAII instead:</source>
          <target state="translated">代わりにRAIIを使用する場合。</target>
        </trans-unit>
        <trans-unit id="f80391d56bd8dbe1d1d5d1ff4b40d280c7727957" translate="yes" xml:space="preserve">
          <source>When using Scene3D with Scene3DViews the following conditions are expected:</source>
          <target state="translated">Scene3DViewsでScene3Dを使用する場合、以下の条件が想定されます。</target>
        </trans-unit>
        <trans-unit id="e422bafae46d9dd9ccf967b028eb5668db1686e3" translate="yes" xml:space="preserve">
          <source>When using Shape, it is important to be aware of potential performance implications:</source>
          <target state="translated">シェイプを使用する際には、潜在的なパフォーマンスへの影響を認識しておくことが重要です。</target>
        </trans-unit>
        <trans-unit id="a851e0e65e59f989e18111dd9dfcb0d6119a5f48" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; with standard buttons, this function returns a &lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;StandardButton&lt;/a&gt; value indicating the standard button that was clicked. When using &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; with custom buttons, this function returns an opaque value; use &lt;a href=&quot;qmessagebox#clickedButton&quot;&gt;clickedButton&lt;/a&gt;() to determine which button was clicked.</source>
          <target state="translated">標準ボタンで&lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;を使用する場合、この関数は、クリックされた標準ボタンを示す&lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;StandardButton&lt;/a&gt;値を返します。カスタムボタンで&lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;を使用すると、この関数は不透明な値を返します。&lt;a href=&quot;qmessagebox#clickedButton&quot;&gt;clickedButton&lt;/a&gt;（）を使用して、クリックされたボタンを判別します。</target>
        </trans-unit>
        <trans-unit id="30651043e9ed73a939b318e30f3870f1b9b5bc98" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qpropertyanimation&quot;&gt;QPropertyAnimation&lt;/a&gt;, the associated easing curve will be used to control the progress of the interpolation between startValue and endValue:</source>
          <target state="translated">&lt;a href=&quot;qpropertyanimation&quot;&gt;QPropertyAnimation&lt;/a&gt;を使用する場合、関連付けられたイージング曲線を使用して、startValueとendValueの間の補間の進行を制御します。</target>
        </trans-unit>
        <trans-unit id="5a31447cc9a9078502d4a9e972623e7f14cea339" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; to render a Qt Quick user interface to an OpenGL surface, the &lt;a href=&quot;qml-qtwebengine-webengineview&quot;&gt;WebEngineView&lt;/a&gt; type is not rendered correctly. The web engine view attempts to use a global OpenGL context created by &lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine::initialize&lt;/a&gt;, but there is no public API for accessing that context in order to share it with the &lt;code&gt;QQuickRenderControl&lt;/code&gt; context.</source>
          <target state="translated">使用している場合&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControlを&lt;/a&gt; OpenGLの表面にはQtクイック・ユーザ・インターフェースをレンダリングするために、&lt;a href=&quot;qml-qtwebengine-webengineview&quot;&gt;WebEngineViewの&lt;/a&gt;タイプが正しくレンダリングされていません。 Webエンジンビューは&lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine :: initialize&lt;/a&gt;によって作成されたグローバルOpenGLコンテキストを使用しようとしますが、 &lt;code&gt;QQuickRenderControl&lt;/code&gt; コンテキストと共有するためにそのコンテキストにアクセスするためのパブリックAPIはありません。</target>
        </trans-unit>
        <trans-unit id="0a571dc6486203daf8731422c32ede8be4dfec57" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; to render a Qt Quick user interface to an OpenGL surface, the WebEngineView type is not rendered correctly. The web engine view attempts to use a global OpenGL context created by &lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine::initialize&lt;/a&gt;, but there is no public API for accessing that context in order to share it with the &lt;code&gt;QQuickRenderControl&lt;/code&gt; context.</source>
          <target state="translated">&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;を使用してQtQuickユーザーインターフェイスをOpenGLサーフェスにレンダリングすると、WebEngineViewタイプが正しくレンダリングされません。 Webエンジンビューは、&lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine :: initialize&lt;/a&gt;によって作成されたグローバルOpenGLコンテキストを使用しようとしますが、 &lt;code&gt;QQuickRenderControl&lt;/code&gt; コンテキストと共有するためにそのコンテキストにアクセスするためのパブリックAPIはありません。</target>
        </trans-unit>
        <trans-unit id="60e200581fc9c0dbc0f625c7881a7ac6d7e373bc" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;, the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; does not have to be shown or even created at all. This means there will not be an underlying native window for it. Instead, the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instance is associated with the render control, using the overload of the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; constructor, and an OpenGL framebuffer object by calling &lt;a href=&quot;qquickwindow#setRenderTarget&quot;&gt;QQuickWindow::setRenderTarget&lt;/a&gt;().</source>
          <target state="translated">使用している場合&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControlを&lt;/a&gt;、&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindowが&lt;/a&gt;示さあるいはすべてで作成する必要はありません。つまり、そのための基になるネイティブウィンドウはありません。代わりに、&lt;a href=&quot;qquickwindow#setRenderTarget&quot;&gt;QQuickWindow :: setRenderTarget&lt;/a&gt;（）を呼び出して、&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;コンストラクターのオーバーロードとOpenGLフレームバッファーオブジェクトを使用して、&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;インスタンスをレンダーコントロールに関連付けます。</target>
        </trans-unit>
        <trans-unit id="9c0f7af3daf2a24d712370fbb31d193c69bdb078" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;, its indexes have their own internal pointer. It is not advisable to access this internal pointer outside of the model. Use the &lt;a href=&quot;qabstractitemmodel#data&quot;&gt;data&lt;/a&gt;() function instead.</source>
          <target state="translated">&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;を使用する場合、そのインデックスには独自の内部ポインタがあります。モデルの外部からこの内部ポインターにアクセスすることはお勧めできません。代わりに&lt;a href=&quot;qabstractitemmodel#data&quot;&gt;data&lt;/a&gt;（）関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="a88d7821b71c83767d5c98f6683690b451dd882b" translate="yes" xml:space="preserve">
          <source>When using a QQuickRenderControl, the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; does not have to be shown or even created at all. This means there will not be an underlying native window for it. Instead, the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; instance is associated with the render control, using the overload of the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; constructor, and an OpenGL framebuffer object by calling &lt;a href=&quot;qquickwindow#setRenderTarget&quot;&gt;QQuickWindow::setRenderTarget&lt;/a&gt;().</source>
          <target state="translated">QQuickRenderControlを使用する場合は、&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindowは&lt;/a&gt;示さあるいはすべてで作成する必要はありません。これは、基礎となるネイティブウィンドウがないことを意味します。代わりに、&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;インスタンスは、&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;コンストラクターのオーバーロードを使用してレンダーコントロールに関連付けられ、&lt;a href=&quot;qquickwindow#setRenderTarget&quot;&gt;QQuickWindow :: setRenderTarget&lt;/a&gt;（）を呼び出すことによってOpenGLフレームバッファーオブジェクトに関連付けられます。</target>
        </trans-unit>
        <trans-unit id="cd633ea15d629a0822189477ace7c2e694f5b907" translate="yes" xml:space="preserve">
          <source>When using a camera, there are several times when some form of feedback to the user is given - for example, when an image is taken, or when recording is started. You can enable or disable some of this feedback, or adjust what sound might be played for these actions.</source>
          <target state="translated">カメラを使用しているとき、画像を撮影したときや録画を開始したときなど、ユーザーに何らかの形でフィードバックを与えることがあります。このフィードバックの一部を有効または無効にしたり、これらのアクションで再生するサウンドを調整したりすることができます。</target>
        </trans-unit>
        <trans-unit id="57ef1cc43a22d3ee9d7ad2ec71b8d3288bb14e4d" translate="yes" xml:space="preserve">
          <source>When using a generator the data will be loaded asynchronously in a job. The loaded data can be read back if the &lt;a href=&quot;qt3drender-qbuffer#syncData-prop&quot;&gt;QBuffer::syncData&lt;/a&gt; flag is set to true.</source>
          <target state="translated">ジェネレーターを使用する場合、データはジョブで非同期に読み込まれます。&lt;a href=&quot;qt3drender-qbuffer#syncData-prop&quot;&gt;QBuffer :: syncData&lt;/a&gt;フラグがtrueに設定されている場合、ロードされたデータを読み戻すことができます。</target>
        </trans-unit>
        <trans-unit id="4a99ea3d9c74b7bdbe4f19c498b2969932d3fbb5" translate="yes" xml:space="preserve">
          <source>When using a link-local or site-local address for IPv6 connections, you must specify the scope ID. The scope ID for a link-local address is usually the same as the interface name (e.g., &quot;eth0&quot;, &quot;en1&quot;) or number (e.g., &quot;1&quot;, &quot;2&quot;).</source>
          <target state="translated">IPv6接続でリンクローカルアドレスまたはサイトローカルアドレスを使用する場合は、スコープIDを指定する必要があります。リンクローカルアドレスのスコープIDは、通常、インターフェイス名(例:&quot;eth0&quot;,&quot;en1&quot;)または番号(例:&quot;1&quot;,&quot;2&quot;)と同じです。</target>
        </trans-unit>
        <trans-unit id="a7f5a0c47b510324b9693fda936ac9e1340194e1" translate="yes" xml:space="preserve">
          <source>When using a local connection, a unique name must be used. For tcp connections, a unique address and port number combination much be used.</source>
          <target state="translated">ローカル接続を使用する場合は、一意の名前を使用する必要があります。tcp接続の場合は、一意のアドレスとポート番号の組み合わせを使用します。</target>
        </trans-unit>
        <trans-unit id="c2f9377446ae02ec808861ff5dcc31b378366901" translate="yes" xml:space="preserve">
          <source>When using a non-attached &lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;, the following must be done manually:</source>
          <target state="translated">アタッチされていない&lt;a href=&quot;qml-qtquick-controls2-scrollbar&quot;&gt;ScrollBar&lt;/a&gt;を使用する場合、以下を手動で行う必要があります。</target>
        </trans-unit>
        <trans-unit id="6da62cb45d6ee1b90ef5d92ea4bb2964d3440f6e" translate="yes" xml:space="preserve">
          <source>When using a non-attached ScrollBar, the following must be done manually:</source>
          <target state="translated">非添付のスクロールバーを使用する場合は、以下を手動で行う必要があります。</target>
        </trans-unit>
        <trans-unit id="54441c60f964e66b066ac92b3af3ac7719c4b710" translate="yes" xml:space="preserve">
          <source>When using a scroll area to display the contents of a custom widget, it is important to ensure that the &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;size hint&lt;/a&gt; of the child widget is set to a suitable value. If a standard &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; is used for the child widget, it may be necessary to call &lt;a href=&quot;qwidget#minimumSize-prop&quot;&gt;QWidget::setMinimumSize&lt;/a&gt;() to ensure that the contents of the widget are shown correctly within the scroll area.</source>
          <target state="translated">スクロール領域を使用してカスタムウィジェットのコンテンツを表示する場合、子ウィジェットの&lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;サイズヒント&lt;/a&gt;が適切な値に設定されていることを確認することが重要です。子ウィジェットに標準の&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;が使用されている場合、ウィジェットのコンテンツがスクロール領域内に正しく表示されるように、&lt;a href=&quot;qwidget#minimumSize-prop&quot;&gt;QWidget :: setMinimumSize&lt;/a&gt;（）を呼び出す必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="237a8500ee38265470768b77eb9c5ecf303eea63" translate="yes" xml:space="preserve">
          <source>When using an &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;anti-aliased&lt;/a&gt; painter, the boundary line of a &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; will be rendered symmetrically on both sides of the mathematical rectangle's boundary line. But when using an aliased painter (the default) other rules apply.</source>
          <target state="translated">&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;アンチエイリアス&lt;/a&gt;ペインタを使用する場合、&lt;a href=&quot;qrect&quot;&gt;QRectの&lt;/a&gt;境界線は、四角形の境界線の両側に対称的にレンダリングされます。ただし、エイリアスペインタ（デフォルト）を使用する場合は、他のルールが適用されます。</target>
        </trans-unit>
        <trans-unit id="f114b9cf2bdf5128d5944856498efe44e97fd95c" translate="yes" xml:space="preserve">
          <source>When using an &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;anti-aliased&lt;/a&gt; painter, the boundary line of a &lt;a href=&quot;qrectf&quot;&gt;QRectF&lt;/a&gt; will be rendered symmetrically on both sides of the mathematical rectangle's boundary line. But when using an aliased painter (the default) other rules apply.</source>
          <target state="translated">&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;アンチエイリアスされた&lt;/a&gt;ペインタを使用すると、&lt;a href=&quot;qrectf&quot;&gt;QRectFの&lt;/a&gt;境界線は、四角形の境界線の両側に対称的にレンダリングされます。ただし、エイリアスペインタ（デフォルト）を使用する場合は、他のルールが適用されます。</target>
        </trans-unit>
        <trans-unit id="329d3637523def7a6d1c7ee9fe4ece6f4bdc8c4b" translate="yes" xml:space="preserve">
          <source>When using an &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;anti-aliased&lt;/a&gt; painter, the boundary line of a QRect will be rendered symmetrically on both sides of the mathematical rectangle's boundary line. But when using an aliased painter (the default) other rules apply.</source>
          <target state="translated">&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;アンチエイリアス&lt;/a&gt;ペインタを使用する場合、QRectの境界線は、数学的な長方形の境界線の両側で対称的にレンダリングされます。ただし、エイリアスペインタ（デフォルト）を使用する場合は、他のルールが適用されます。</target>
        </trans-unit>
        <trans-unit id="cccfc9b262e50cc0b347cae5b9d8220cd04d8f64" translate="yes" xml:space="preserve">
          <source>When using an &lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;anti-aliased&lt;/a&gt; painter, the boundary line of a QRectF will be rendered symmetrically on both sides of the mathematical rectangle's boundary line. But when using an aliased painter (the default) other rules apply.</source>
          <target state="translated">&lt;a href=&quot;qpainter#RenderHint-enum&quot;&gt;アンチエイリアス&lt;/a&gt;ペインタを使用する場合、QRectFの境界線は、数学的な長方形の境界線の両側で対称的にレンダリングされます。ただし、エイリアスペインタ（デフォルト）を使用する場合は、他のルールが適用されます。</target>
        </trans-unit>
        <trans-unit id="8f28cb22408509ba937d73e207cf823f044e3c30" translate="yes" xml:space="preserve">
          <source>When using enum classes, there can be multiple enums using the same identifiers. The unscoped registration will be overwriten by the last registered enum. For classes that contain such name conficts it is possible to disable the unscoped registration by annotating your class with a special &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt; macro. Use the name &lt;code&gt;RegisterEnumClassesUnscoped&lt;/code&gt; with the value &lt;code&gt;false&lt;/code&gt; to prevent scoped enums from being merged into the same name space.</source>
          <target state="translated">列挙型クラスを使用する場合、同じ識別子を使用する複数の列挙型が存在する可能性があります。対象範囲外の登録は、最後に登録された列挙によって上書きされます。このような名前の競合を含むクラスの場合、クラスに特別な&lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;マクロで注釈を付けることにより、スコープ外の登録を無効にすることができます。値が &lt;code&gt;false&lt;/code&gt; の名前 &lt;code&gt;RegisterEnumClassesUnscoped&lt;/code&gt; を使用して、スコープ付き列挙型が同じ名前空間にマージされないようにします。</target>
        </trans-unit>
        <trans-unit id="b3126c9de4f125026d9844406caca004b124783e" translate="yes" xml:space="preserve">
          <source>When using files with relative paths, the path should be relative to the file where &lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent()&lt;/a&gt; is executed.</source>
          <target state="translated">相対パスを持つファイルを使用する場合、パスは&lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent（）&lt;/a&gt;が実行されるファイルからの相対パスである必要があります。</target>
        </trans-unit>
        <trans-unit id="f5f60225ff679f2aec3bcaa7f21687a9cdf848c4" translate="yes" xml:space="preserve">
          <source>When using models that have multiple named roles, &lt;a href=&quot;qml-qtquick-controls2-combobox&quot;&gt;ComboBox&lt;/a&gt; must be configured to use a specific &lt;a href=&quot;qml-qtquick-controls2-combobox#textRole-prop&quot;&gt;text role&lt;/a&gt; for its &lt;a href=&quot;qml-qtquick-controls2-combobox#displayText-prop&quot;&gt;display text&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;delegate&lt;/a&gt; instances.</source>
          <target state="translated">複数の名前付きロールを持つモデルを使用する場合、&lt;a href=&quot;qml-qtquick-controls2-combobox#displayText-prop&quot;&gt;表示テキスト&lt;/a&gt;と&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;デリゲート&lt;/a&gt;インスタンスに特定の&lt;a href=&quot;qml-qtquick-controls2-combobox#textRole-prop&quot;&gt;テキストロール&lt;/a&gt;を使用するように&lt;a href=&quot;qml-qtquick-controls2-combobox&quot;&gt;ComboBoxを&lt;/a&gt;構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="f9d8a722032ee00831331d0ac92b8b27597b4afb" translate="yes" xml:space="preserve">
          <source>When using models that have multiple named roles, ComboBox must be configured to use a specific &lt;a href=&quot;qml-qtquick-controls2-combobox#textRole-prop&quot;&gt;text role&lt;/a&gt; for its &lt;a href=&quot;qml-qtquick-controls2-combobox#displayText-prop&quot;&gt;display text&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;delegate&lt;/a&gt; instances. If you want to use a role of the model item that corresponds to the text role, set &lt;a href=&quot;qml-qtquick-controls2-combobox#valueRole-prop&quot;&gt;valueRole&lt;/a&gt;. The &lt;a href=&quot;qml-qtquick-controls2-combobox#currentValue-prop&quot;&gt;currentValue&lt;/a&gt; property and &lt;a href=&quot;qml-qtquick-controls2-combobox#indexOfValue-method&quot;&gt;indexOfValue()&lt;/a&gt; method can then be used to get information about those values.</source>
          <target state="translated">複数の名前付きロールを持つモデルを使用する場合、ComboBoxは、&lt;a href=&quot;qml-qtquick-controls2-combobox#displayText-prop&quot;&gt;表示テキスト&lt;/a&gt;と&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquickcontrols-chattutorial-example.html#delegate&quot;&gt;デリゲート&lt;/a&gt;インスタンスに特定の&lt;a href=&quot;qml-qtquick-controls2-combobox#textRole-prop&quot;&gt;テキストロール&lt;/a&gt;を使用するように構成する必要があります。テキストロールに対応するモデルアイテムのロールを使用する場合は、&lt;a href=&quot;qml-qtquick-controls2-combobox#valueRole-prop&quot;&gt;valueRoleを&lt;/a&gt;設定します。次に、&lt;a href=&quot;qml-qtquick-controls2-combobox#currentValue-prop&quot;&gt;currentValue&lt;/a&gt;プロパティと&lt;a href=&quot;qml-qtquick-controls2-combobox#indexOfValue-method&quot;&gt;indexOfValue（）&lt;/a&gt;メソッドを使用して、これらの値に関する情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="84026de8d0a3f70ccf99a3d61c901fae1dc693fe" translate="yes" xml:space="preserve">
          <source>When using more than one parameter, or when an argument contains whitespace, enclose each argument in braces:</source>
          <target state="translated">複数のパラメータを使用する場合や、引数に空白が含まれる場合は、各引数を中括弧で囲みます。</target>
        </trans-unit>
        <trans-unit id="63464950e02567c5f6896365686d6ecf23afb027" translate="yes" xml:space="preserve">
          <source>When using multiple containers, such as &lt;a href=&quot;qml-qtquick-controls2-tabbar&quot;&gt;TabBar&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;, together, their &lt;a href=&quot;qml-qtquick-controls2-container#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; properties can be bound to each other to keep them in sync. When the user interacts with either container, its current index changes automatically propagate to the other container.</source>
          <target state="translated">以下のような複数のコンテナ、使用している場合&lt;a href=&quot;qml-qtquick-controls2-tabbar&quot;&gt;にTabBar&lt;/a&gt;と&lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeViewを&lt;/a&gt;、一緒に、彼らの&lt;a href=&quot;qml-qtquick-controls2-container#currentIndex-prop&quot;&gt;currentIndexの&lt;/a&gt;プロパティが同期でそれらを保つために互いに結合することができます。ユーザーがいずれかのコンテナーを操作すると、現在のインデックスの変更が自動的にもう一方のコンテナーに伝播されます。</target>
        </trans-unit>
        <trans-unit id="c02b1287c2c05e3b9d628e626b4034e4caa62387" translate="yes" xml:space="preserve">
          <source>When using multiple containers, such as &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeView&lt;/a&gt;, together, their &lt;a href=&quot;qml-qtquick-controls2-container#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; properties can be bound to each other to keep them in sync. When the user interacts with either container, its current index changes automatically propagate to the other container.</source>
          <target state="translated">以下のような複数のコンテナ、使用している場合&lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;にTabBar&lt;/a&gt;と&lt;a href=&quot;qml-qtquick-controls2-swipeview&quot;&gt;SwipeViewを&lt;/a&gt;、一緒に、彼らの&lt;a href=&quot;qml-qtquick-controls2-container#currentIndex-prop&quot;&gt;currentIndexの&lt;/a&gt;プロパティが同期でそれらを保つために互いに結合することができます。ユーザーがいずれかのコンテナを操作すると、現在のインデックスの変更が自動的にもう一方のコンテナに反映されます。</target>
        </trans-unit>
        <trans-unit id="ca9be1c0704ec7f9de07358b36382bb3fde46554" translate="yes" xml:space="preserve">
          <source>When using multiple subviewports in the FrameGraph, NoPicking can be useful to prevent picking conflicts between overlapping viewports or non visual ones. It can also be used as an optimization to prevent unnecessary work for hidden viewports or for sections of the scenes which don't require any picking.</source>
          <target state="translated">FrameGraphで複数のサブビューポートを使用する場合、NoPickingは重複するビューポートや非ビジュアルビューポート間でのピッキングの競合を防ぐのに役立ちます。また、隠れたビューポートやピッキングを必要としないシーンのセクションのための不必要な作業を防ぐための最適化としても使用できます。</target>
        </trans-unit>
        <trans-unit id="4ba136a12eb6326be4975550c6ccf182f6dc733c" translate="yes" xml:space="preserve">
          <source>When using multiple subviewports in the FrameGraph, QNoPicking can be useful to prevent picking conflicts between overlapping viewports or non visual ones. It can also be used as an optimization to prevent unnecessary work for hidden viewports or for sections of the scenes which don't require any picking.</source>
          <target state="translated">FrameGraphで複数のサブビューポートを使用している場合、QNoPickingは重複するビューポートや非ビジュアルビューポート間でのピッキングの競合を防ぐのに役立ちます。また、隠れたビューポートや、ピッキングを必要としないシーンのセクションのための不必要な作業を防ぐための最適化としても使用できます。</target>
        </trans-unit>
        <trans-unit id="641175720b4c0c2ab3449cc419129333b3bfdd72" translate="yes" xml:space="preserve">
          <source>When using one of the default names, you can call this function in &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; to get the localized string.</source>
          <target state="translated">デフォルト名の1つを使用する場合、&lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterfaceで&lt;/a&gt;この関数を呼び出して、ローカライズされた文字列を取得できます。</target>
        </trans-unit>
        <trans-unit id="f1d4042297fd9e70e9779d429f6a3c3de84a9661" translate="yes" xml:space="preserve">
          <source>When using qmake to build just the Qt WebEngine module, the following command can be used (in this example, the Qt WebEngine source code is located in &lt;code&gt;C:\qt\qtwebengine&lt;/code&gt;):</source>
          <target state="translated">qmakeを使用してQt WebEngineモジュールのみをビルドする場合、次のコマンドを使用できます（この例では、Qt WebEngineソースコードは &lt;code&gt;C:\qt\qtwebengine&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="eed4f78c25ca0fa8144d6414eb478fa129284fb5" translate="yes" xml:space="preserve">
          <source>When using signals and slots with multiple threads, see &lt;a href=&quot;threads-qobject#signals-and-slots-across-threads&quot;&gt;Signals and Slots Across Threads&lt;/a&gt;.</source>
          <target state="translated">複数のスレッドでシグナルとスロットを使用する場合、参照&lt;a href=&quot;threads-qobject#signals-and-slots-across-threads&quot;&gt;スレッド間でシグナルとスロットを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e7ad568fc4f11eefe9c8b40e9b450dc9cb930b9a" translate="yes" xml:space="preserve">
          <source>When using style sheets, every widget is treated as a box with four concentric rectangles: the margin rectangle, the border rectangle, the padding rectangle, and the content rectangle. The box model describes this in further detail.</source>
          <target state="translated">スタイルシートを使用するとき、すべてのウィジェットは4つの同心円の長方形を持つボックスとして扱われます:マージンの長方形、ボーダーの長方形、パディングの長方形、そしてコンテンツの長方形です。これについては、ボックスモデルで詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="16c96094aa814c7a1c7563b4a9f7232f4480180a" translate="yes" xml:space="preserve">
          <source>When using the &quot;IJW&quot; method, in principle the only limitation is the time required to write the wrapper classes and data type conversion functions.</source>
          <target state="translated">IJW」を利用する場合、原則として、ラッパークラスとデータ型変換関数の記述に時間がかかることが唯一の制限となります。</target>
        </trans-unit>
        <trans-unit id="5d54c37317bd3e6ec2902ccadabbc8a4e682a663" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-overview.html#qt-webengine-widgets-module&quot;&gt;Qt WebEngine Widgets Module&lt;/a&gt;, &lt;a href=&quot;qwebenginepage#acceptNavigationRequest&quot;&gt;QWebEnginePage::acceptNavigationRequest&lt;/a&gt;() offers further options to accept or block requests.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-overview.html#qt-webengine-widgets-module&quot;&gt;Qt WebEngine Widgets Module&lt;/a&gt;を使用する場合、&lt;a href=&quot;qwebenginepage#acceptNavigationRequest&quot;&gt;QWebEnginePage :: acceptNavigationRequest&lt;/a&gt;（）はリクエストを受け入れるかブロックするための追加オプションを提供します。</target>
        </trans-unit>
        <trans-unit id="754ebecc3841708d8e573d2b2f6eedc39b9c8a36" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-overview.html#qt-webengine-widgets-module&quot;&gt;Qt WebEngine Widgets Module&lt;/a&gt;, &lt;a href=&quot;qwebenginepage#acceptNavigationRequest&quot;&gt;QWebEnginePage::acceptNavigationRequest&lt;/a&gt;() offers further options to accept or block requests.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-overview.html#qt-webengine-widgets-module&quot;&gt;Qt WebEngineウィジェットモジュール&lt;/a&gt;を使用する場合、&lt;a href=&quot;qwebenginepage#acceptNavigationRequest&quot;&gt;QWebEnginePage :: acceptNavigationRequest&lt;/a&gt;（）は、リクエストを受け入れるかブロックするための追加オプションを提供します。</target>
        </trans-unit>
        <trans-unit id="8ef195bdee4cf1c4a71bf9effed3c312e0927143" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;QtQuick&lt;/code&gt; module, you will need to know how to write QML applications using the QML language. In particular, QML Basics and QML Essentials from the &lt;a href=&quot;qmlapplications&quot;&gt;QML Applications&lt;/a&gt; page.</source>
          <target state="translated">&lt;code&gt;QtQuick&lt;/code&gt; モジュールを使用する場合、QML言語を使用してQMLアプリケーションを作成する方法を知っている必要があります。特に、QML &lt;a href=&quot;qmlapplications&quot;&gt;アプリケーション&lt;/a&gt;ページのQML BasicsおよびQML Essentials 。</target>
        </trans-unit>
        <trans-unit id="9dec366696ef07cbdd46b7724c483ed995ac86b0" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;lib&lt;/code&gt; template, the following options can be added to the &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; variable to determine the type of library that is built:</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; テンプレートを使用する場合、ビルドされるライブラリーのタイプを判別するために、&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt;変数に以下のオプションを追加できます。</target>
        </trans-unit>
        <trans-unit id="1accbb909d9654643b1007c4b005eaf944aacb54" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;subdirs&lt;/code&gt; template, this option specifies that the directories listed should be processed in the order in which they are given.</source>
          <target state="translated">&lt;code&gt;subdirs&lt;/code&gt; テンプレートを使用する場合、このオプションは、リストされたディレクトリが指定された順序で処理されることを指定します。</target>
        </trans-unit>
        <trans-unit id="9302e4403ba3d658ded6f72d8e2eb9b0d3b0d85a" translate="yes" xml:space="preserve">
          <source>When using the OpenGL adaptation, the returned texture will be using &lt;code&gt;GL_TEXTURE_2D&lt;/code&gt; as texture target and &lt;code&gt;GL_RGBA&lt;/code&gt; as internal format. Reimplement &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; to create textures with different parameters.</source>
          <target state="translated">OpenGLアダプテーションを使用する場合、返されるテクスチャは &lt;code&gt;GL_TEXTURE_2D&lt;/code&gt; をテクスチャターゲットとして使用し、 &lt;code&gt;GL_RGBA&lt;/code&gt; を内部フォーマットとして使用します。再実装&lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt;異なるパラメータを持つテクスチャを作成します。</target>
        </trans-unit>
        <trans-unit id="5f5b2c24ae4c28b1f7b4b66c98b3d23e3e684245" translate="yes" xml:space="preserve">
          <source>When using the Qt Purchasing API in QML, the application should instantiate one Store and then instantiate products as children of this store. The products created as children of the Store object will automatically be queried from the external market place if one is available on the current platform.</source>
          <target state="translated">QMLでQt Purchasing APIを使用する場合、アプリケーションは1つのStoreをインスタンス化し、そのStoreの子として商品をインスタンス化する必要があります。Store オブジェクトの子として作成された商品は、現在のプラットフォームで利用可能なマーケットプレイスがあれば、自動的に外部のマーケットプレイスから取得されます。</target>
        </trans-unit>
        <trans-unit id="fd10ad4c60e4d2d39aa84088b49311a2cd15a737" translate="yes" xml:space="preserve">
          <source>When using the RHI, the signal is emitted after scene graph has added its commands to the command buffer, which is not yet submitted to the graphics queue. If desired, the slot function connected to this signal can query native resources, like the command buffer, before via &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;. Note however that the render pass (or passes) are already recorded at this point and it is not possible to add more commands within the scenegraph's pass. Instead, use &lt;a href=&quot;qquickwindow#afterRenderPassRecording&quot;&gt;afterRenderPassRecording&lt;/a&gt;() for that. This signal has therefore limited use and is rarely needed in an RHI-based setup. Rather, it is the combination of &lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;beforeRendering&lt;/a&gt;() + &lt;a href=&quot;qquickwindow#beforeRenderPassRecording&quot;&gt;beforeRenderPassRecording&lt;/a&gt;() or &lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;beforeRendering&lt;/a&gt;() + &lt;a href=&quot;qquickwindow#afterRenderPassRecording&quot;&gt;afterRenderPassRecording&lt;/a&gt;() that is typically used to achieve under- or overlaying of the custom rendering.</source>
          <target state="translated">RHIを使用する場合、信号は、シーングラフがコマンドをコマンドバッファーに追加した後に発行されます。コマンドバッファーは、まだグラフィックキューに送信されていません。必要に応じて、この信号に接続されたスロット関数は、&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;を介して、コマンドバッファなどのネイティブリソースをクエリできます。ただし、レンダーパス（または複数のパス）はこの時点ですでに記録されており、シーングラフのパス内にコマンドを追加することはできないことに注意してください。代わりに、&lt;a href=&quot;qquickwindow#afterRenderPassRecording&quot;&gt;afterRenderPassRecording&lt;/a&gt;（）を使用してください。したがって、この信号の使用は制限されており、RHIベースのセットアップで必要になることはめったにありません。むしろ、&lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;beforeRendering&lt;/a&gt;（）+ &lt;a href=&quot;qquickwindow#beforeRenderPassRecording&quot;&gt;beforeRenderPassRecording&lt;/a&gt;（）または&lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;beforeRendering&lt;/a&gt;（）+の組み合わせです。&lt;a href=&quot;qquickwindow#afterRenderPassRecording&quot;&gt;afterRenderPassRecording&lt;/a&gt;（）は、通常、カスタムレンダリングのアンダーまたはオーバーレイを実現するために使用されます。</target>
        </trans-unit>
        <trans-unit id="25e692c03b3d10cf511b4d19105847b9627e4f18" translate="yes" xml:space="preserve">
          <source>When using the RHI, the signal is emitted after the preparations for the frame have been done, meaning there is a command buffer in recording mode, where applicable. If desired, the slot function connected to this signal can query native resources like the command before via &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;. Note however that the recording of the main render pass is not yet started at this point and it is not possible to add commands within that pass. Starting a pass means clearing the color, depth, and stencil buffers so it is not possible to achieve an underlay type of rendering by just connecting to this signal. Rather, connect to &lt;a href=&quot;qquickwindow#beforeRenderPassRecording&quot;&gt;beforeRenderPassRecording&lt;/a&gt;(). However, connecting to this signal is still important if the recording of copy type of commands is desired since those cannot be enqueued within a render pass.</source>
          <target state="translated">RHIを使用する場合、信号はフレームの準備が完了した後に送信されます。つまり、該当する場合は、記録モードのコマンドバッファがあります。必要に応じて、この信号に接続されたスロット関数は、&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;を介して前のコマンドのようなネイティブリソースを照会できます。ただし、この時点ではメインレンダーパスの記録はまだ開始されておらず、そのパス内にコマンドを追加することはできないことに注意してください。パスを開始すると、色、深度、およびステンシルバッファがクリアされるため、この信号に接続するだけではアンダーレイタイプのレンダリングを実現できません。むしろ、&lt;a href=&quot;qquickwindow#beforeRenderPassRecording&quot;&gt;beforeRenderPassRecording&lt;/a&gt;に接続します（）。ただし、コピータイプのコマンドを記録する必要がある場合は、レンダリングパス内にコマンドをエンキューできないため、この信号に接続することは依然として重要です。</target>
        </trans-unit>
        <trans-unit id="c520b2944e06b29e0ffe182f18017f3df7a8cce9" translate="yes" xml:space="preserve">
          <source>When using the SAP HANA database, the connection has to be established using the option &quot;SCROLLABLERESULT=TRUE&quot;, as the HANA ODBC driver does not provide scrollable results by default, e.g.:</source>
          <target state="translated">SAP HANA データベースを使用する場合は、「SCROLLABLERESULT=TRUE」オプションを使用して接続を確立する必要があります。</target>
        </trans-unit>
        <trans-unit id="f6512b3be0d117dfa21e663e8a3f57fcd47481b4" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; for locale layouts, the visual layout direction of the grid positioner will be mirrored. However, the property &lt;a href=&quot;qml-qtquick-flow#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; will remain unchanged.</source>
          <target state="translated">添付プロパティ&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;をロケールレイアウトに使用すると、グリッドポジショナーの視覚的なレイアウト方向がミラーリングされます。ただし、プロパティ&lt;a href=&quot;qml-qtquick-flow#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt;は変更されません。</target>
        </trans-unit>
        <trans-unit id="ad819fcb35bbe53948b4887616213f681fcff7f9" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; for locale layouts, the visual layout direction of the grid positioner will be mirrored. However, the property &lt;a href=&quot;qml-qtquick-grid#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; will remain unchanged.</source>
          <target state="translated">添付プロパティ&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;をロケールレイアウトに使用すると、グリッドポジショナーの視覚的なレイアウト方向がミラーリングされます。ただし、プロパティ&lt;a href=&quot;qml-qtquick-grid#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt;は変更されません。</target>
        </trans-unit>
        <trans-unit id="f834cbf23f423046bd6a4e706aba1ff65a30a170" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; for locale layouts, the visual layout direction of the grid will be mirrored. However, the property &lt;a href=&quot;qml-qtquick-gridview#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; will remain unchanged.</source>
          <target state="translated">添付プロパティ&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;をロケールレイアウトに使用すると、グリッドの視覚的なレイアウト方向がミラーリングされます。ただし、プロパティ&lt;a href=&quot;qml-qtquick-gridview#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt;は変更されません。</target>
        </trans-unit>
        <trans-unit id="f36c0ab165b9200f9ec8aa1357d728964f40f2cc" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; for locale layouts, the visual layout direction of the horizontal list will be mirrored. However, the property &lt;a href=&quot;qml-qtquick-listview#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; will remain unchanged.</source>
          <target state="translated">添付プロパティ&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;をロケールレイアウトに使用すると、水平リストの視覚的なレイアウト方向がミラーリングされます。ただし、プロパティ&lt;a href=&quot;qml-qtquick-listview#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt;は変更されません。</target>
        </trans-unit>
        <trans-unit id="fb66c1b45ac982beb02c022093529fd3f56e9448" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; for locale layouts, the visual layout direction of the row positioner will be mirrored. However, the property &lt;a href=&quot;qml-qtquick-row#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; will remain unchanged.</source>
          <target state="translated">添付プロパティ&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;をロケールレイアウトに使用すると、行ポジショナーの視覚的なレイアウト方向がミラーリングされます。ただし、プロパティ&lt;a href=&quot;qml-qtquick-row#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt;は変更されません。</target>
        </trans-unit>
        <trans-unit id="69d87d4ee077dc734724b86f9fa8e15d248506e7" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; to mirror application layouts, the horizontal alignment of text will also be mirrored. However, the property &lt;code&gt;horizontalAlignment&lt;/code&gt; will remain unchanged. To query the effective horizontal alignment of &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;, use the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">添付プロパティ&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;を使用してアプリケーションレイアウトをミラーリングすると、テキストの水平方向の配置もミラーリングされます。ただし、プロパティ &lt;code&gt;horizontalAlignment&lt;/code&gt; は変更されません。&lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextAreaの&lt;/a&gt;有効な水平方向の配置を照会するには、読み取り専用プロパティ &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="d651e972a8b73ac33b7c1d33d8d380ac2eceec38" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; to mirror application layouts, the horizontal alignment of text will also be mirrored. However, the property &lt;code&gt;horizontalAlignment&lt;/code&gt; will remain unchanged. To query the effective horizontal alignment of &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;, use the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">添付プロパティ&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;を使用してアプリケーションレイアウトをミラーリングすると、テキストの水平方向の配置もミラーリングされます。ただし、プロパティ &lt;code&gt;horizontalAlignment&lt;/code&gt; は変更されません。&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEditの&lt;/a&gt;有効な水平方向の配置を問い合わせるには、読み取り専用プロパティ &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="35d324bfc12c5d6ba6efc643a3b1dde7d26fce03" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; to mirror application layouts, the horizontal alignment of text will also be mirrored. However, the property &lt;code&gt;horizontalAlignment&lt;/code&gt; will remain unchanged. To query the effective horizontal alignment of &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;, use the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">添付プロパティ&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;を使用してアプリケーションレイアウトをミラーリングすると、テキストの水平方向の配置もミラーリングされます。ただし、プロパティ &lt;code&gt;horizontalAlignment&lt;/code&gt; は変更されません。&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInputの&lt;/a&gt;有効な水平方向の配置を照会するには、読み取り専用プロパティ &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="d2b5e6a5d5f5d78d3c5d95616a1f194fccea4c23" translate="yes" xml:space="preserve">
          <source>When using the attached property &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt; to mirror application layouts, the horizontal alignment of text will also be mirrored. However, the property &lt;code&gt;horizontalAlignment&lt;/code&gt; will remain unchanged. To query the effective horizontal alignment of Text, use the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">添付プロパティ&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabled&lt;/a&gt;を使用してアプリケーションレイアウトをミラーリングすると、テキストの水平方向の配置もミラーリングされます。ただし、プロパティ &lt;code&gt;horizontalAlignment&lt;/code&gt; は変更されません。Textの有効な水平方向の配置を照会するには、読み取り専用プロパティ &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="20616dd35d75d11331c9fc082c83b9be05505dab" translate="yes" xml:space="preserve">
          <source>When using the attached property, &lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring::enabled&lt;/a&gt;, to mirror application layouts, the horizontal alignment of text will also be mirrored. However, the property &lt;code&gt;horizontalAlignment&lt;/code&gt; will remain unchanged. To query the effective horizontal alignment of &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt;, use the read-only property &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt;.</source>
          <target state="translated">添付プロパティ&lt;a href=&quot;qml-qtquick-layoutmirroring#enabled-prop&quot;&gt;LayoutMirroring :: enabledを使用&lt;/a&gt;してアプリケーションレイアウトをミラーリングすると、テキストの水平方向の配置もミラーリングされます。ただし、プロパティ &lt;code&gt;horizontalAlignment&lt;/code&gt; は変更されません。&lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextFieldの&lt;/a&gt;有効な水平方向の配置を照会するには、読み取り専用プロパティ &lt;code&gt;effectiveHorizontalAlignment&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="9a3979e0f25e3b5cc70f71695bbc56f938aca359" translate="yes" xml:space="preserve">
          <source>When using the default OpenGL adaptation, it is possible to integrate OpenGL calls directly into the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; using the same OpenGL context as the Qt Quick Scene Graph. This is done by connecting to the &lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;QQuickWindow::beforeRendering&lt;/a&gt;() or &lt;a href=&quot;qquickwindow#afterRendering&quot;&gt;QQuickWindow::afterRendering&lt;/a&gt;() signal.</source>
          <target state="translated">デフォルトのOpenGL適応を使用する場合、Qtクイックシーングラフと同じOpenGLコンテキストを使用して、OpenGL呼び出しを&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindowに&lt;/a&gt;直接統合することができます。これは、&lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;QQuickWindow :: beforeRendering&lt;/a&gt;（）または&lt;a href=&quot;qquickwindow#afterRendering&quot;&gt;QQuickWindow :: afterRendering&lt;/a&gt;（）シグナルに接続することによって行われます。</target>
        </trans-unit>
        <trans-unit id="97faf04114fa9f9416c91f1c23b496eb6915deef" translate="yes" xml:space="preserve">
          <source>When using the default OpenGL adaptation, it is possible to integrate OpenGL calls directly into the QQuickWindow using the same OpenGL context as the Qt Quick Scene Graph. This is done by connecting to the &lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;QQuickWindow::beforeRendering&lt;/a&gt;() or &lt;a href=&quot;qquickwindow#afterRendering&quot;&gt;QQuickWindow::afterRendering&lt;/a&gt;() signal.</source>
          <target state="translated">デフォルトのOpenGLアダプテーションを使用する場合、Qtクイックシーングラフと同じOpenGLコンテキストを使用して、OpenGL呼び出しをQQuickWindowに直接統合することができます。これは、&lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;QQuickWindow :: beforeRendering&lt;/a&gt;（）または&lt;a href=&quot;qquickwindow#afterRendering&quot;&gt;QQuickWindow :: afterRendering&lt;/a&gt;（）信号に接続することによって行われます。</target>
        </trans-unit>
        <trans-unit id="34f1d72237c8018c967d74b627ccc1dfb27d0ed2" translate="yes" xml:space="preserve">
          <source>When using the provided matrices, the coordinate system for vertex data follows the usual &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; conventions: top-left is (0, 0), bottom-right is the corresponding &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;'s width() and height() minus one. For example, assuming a two float (x-y) per vertex coordinate layout, a triangle covering half of the item can be specified as (width - 1, height - 1), (0, 0), (0, height - 1) using counter-clockwise direction.</source>
          <target state="translated">提供された行列を使用する場合、頂点データの座標系は通常の&lt;a href=&quot;qquickitem&quot;&gt;QQuickItemの&lt;/a&gt;規則に従います。左上は（0、0）、右下は対応する&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;のwidth（）とheight（）から1を引いたものです。たとえば、頂点座標レイアウトごとに2つの浮動小数点（xy）を想定すると、アイテムの半分をカバーする三角形は、（幅-1、高さ-1）、（0、0）、（0、高さ-1）として指定できます。反時計回りの方向。</target>
        </trans-unit>
        <trans-unit id="a0b66cc2a5a4e3c2e1a7db60e140c73cb4965b48" translate="yes" xml:space="preserve">
          <source>When using the same &lt;code&gt;.so&lt;/code&gt; lib file, your application's &lt;code&gt;main()&lt;/code&gt; function is executed two times, one to start the main activity and the second time to start the service. Thus, you have to handle each execution according to the provided argument. One way to acheive that is as follows:</source>
          <target state="translated">同じ &lt;code&gt;.so&lt;/code&gt; libファイルを使用する場合、アプリケーションの &lt;code&gt;main()&lt;/code&gt; 関数は2回実行されます。1回目はメインアクティビティを開始し、2回目はサービスを開始します。したがって、指定された引数に従って各実行を処理する必要があります。それを達成するための1つの方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9ab3c5753ca173c3d3ab6370d02e203aa5f107b9" translate="yes" xml:space="preserve">
          <source>When using the vcapp template this will put all the source files into the source group and the header files into the header group regardless of what directory they reside in. Turning this option off will group the files within the source/header group depending on the directory they reside. This is turned on by default.</source>
          <target state="translated">vcapp テンプレートを使用している場合、どのディレクトリにあるかに関わらず、すべてのソースファイルをソースグループに、ヘッダーファイルをヘッダーグループに配置します。このオプションをオフにすると、ファイルが存在するディレクトリに応じてソース/ヘッダーグループ内のファイルがグループ化されます。デフォルトではオンになっています。</target>
        </trans-unit>
        <trans-unit id="885cb4ce8dcd663d12b984998a03134539d02bc3" translate="yes" xml:space="preserve">
          <source>When using these functions be aware that they return data in &lt;b&gt;column-major&lt;/b&gt; format:</source>
          <target state="translated">これらの関数を使用するときは、&lt;b&gt;列優先の&lt;/b&gt;形式でデータを返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="5f1afdca4aa38b214b00a782de3c5aa53f22b470" translate="yes" xml:space="preserve">
          <source>When using this class, be aware of the following platform differences:</source>
          <target state="translated">このクラスを使用する際には、以下のようなプラットフォームの違いに注意してください。</target>
        </trans-unit>
        <trans-unit id="0eb1d67852478a07e0591b585644fc15d3d64036" translate="yes" xml:space="preserve">
          <source>When using this function, one should not call &lt;code&gt;accept()&lt;/code&gt;.</source>
          <target state="translated">この関数を使用するときは、 &lt;code&gt;accept()&lt;/code&gt; を呼び出さないでください。</target>
        </trans-unit>
        <trans-unit id="a04c05a9070969e9eb67d44a8928461707a0a965" translate="yes" xml:space="preserve">
          <source>When using this method, Qt WebEngine assumes that external resources, such as JavaScript programs or style sheets, are encoded in UTF-8 unless otherwise specified. For example, the encoding of an external script can be specified through the &lt;code&gt;charset&lt;/code&gt; attribute of the HTML script tag. Alternatively, the encoding can be specified by the web server.</source>
          <target state="translated">この方法を使用する場合、Qt WebEngineは、特に指定がない限り、JavaScriptプログラムやスタイルシートなどの外部リソースがUTF-8でエンコードされていると想定します。たとえば、外部スクリプトの &lt;code&gt;charset&lt;/code&gt; は、HTMLスクリプトタグのcharset属性を使用して指定できます。または、Webサーバーでエンコードを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="fdf1b54e645c47e0218c40636ac9436b5bcd1515" translate="yes" xml:space="preserve">
          <source>When using this method, the web engine assumes that external resources, such as JavaScript programs or style sheets, are encoded in UTF-8 unless otherwise specified. For example, the encoding of an external script can be specified through the charset attribute of the HTML script tag. It is also possible for the encoding to be specified by the web server.</source>
          <target state="translated">このメソッドを使用する場合、ウェブエンジンは、JavaScriptプログラムやスタイルシートなどの外部リソースは、特に指定がない限りUTF-8でエンコードされていると仮定します。例えば、外部スクリプトのエンコーディングは、HTMLスクリプトタグのcharset属性で指定することができます。また、ウェブサーバがエンコーディングを指定することも可能です。</target>
        </trans-unit>
        <trans-unit id="5a2a1ceb612d654821cdebdcfcb18990c549b921" translate="yes" xml:space="preserve">
          <source>When using this plugin, the &lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt; objects in the returned route may contain additional extended attributes (see &lt;a href=&quot;qml-qtlocation-routemaneuver#extendedAttributes-prop&quot;&gt;RouteManeuver::extendedAttributes&lt;/a&gt;), where available. These attributes are described in detail in the official &lt;a href=&quot;https://www.mapbox.com/api-documentation/#stepmaneuver-object&quot;&gt;Mapbox direction API documentation&lt;/a&gt;.</source>
          <target state="translated">このプラグインを使用する場合、返されたルートの&lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt;オブジェクトには、利用可能な場合、追加の拡張属性（&lt;a href=&quot;qml-qtlocation-routemaneuver#extendedAttributes-prop&quot;&gt;RouteManeuver :: extendedAttributesを&lt;/a&gt;参照）が含まれる場合があります。これらの属性は、公式の&lt;a href=&quot;https://www.mapbox.com/api-documentation/#stepmaneuver-object&quot;&gt;Mapbox方向APIドキュメント&lt;/a&gt;で詳細に説明されています。</target>
        </trans-unit>
        <trans-unit id="9f4d4482c71183bdaf1a8256f7c7d2b382d163cc" translate="yes" xml:space="preserve">
          <source>When using this template, the following qmake system variables are recognized. You should use these in your .pro file to specify information about your application. For additional platform-dependent system variables, you could have a look at the &lt;a href=&quot;qmake-platform-notes&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">このテンプレートを使用すると、次のqmakeシステム変数が認識されます。これらを.proファイルで使用して、アプリケーションに関する情報を指定する必要があります。プラットフォームに依存するその他のシステム変数については、&lt;a href=&quot;qmake-platform-notes&quot;&gt;プラットフォームノートをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8de68a2cf4346e4f75f69795025d7ee380ea618b" translate="yes" xml:space="preserve">
          <source>When using this template, the following qmake system variables are recognized. You should use these in your .pro file to specify information about your application. For additional platform-dependent system variables, you could have a look at the &lt;a href=&quot;qmake-platform-notes#&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">このテンプレートを使用すると、次のqmakeシステム変数が認識されます。これらを.proファイルで使用して、アプリケーションに関する情報を指定する必要があります。その他のプラットフォーム依存のシステム変数については、&lt;a href=&quot;qmake-platform-notes#&quot;&gt;プラットフォームノートをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cc8e8e68b8ce727bee069d21cdb1bf990c4178a5" translate="yes" xml:space="preserve">
          <source>When we communicate with the assistive technologies, we need to describe Qt's user interface in a way that they can understand. Qt applications use &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; to expose information about the individual UI elements. Currently, Qt provides support for its widgets and widget parts, e.g., slider handles, but the interface could also be implemented for any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; if necessary. &lt;a href=&quot;qaccessible&quot;&gt;QAccessible&lt;/a&gt; contains enums that describe the UI. We will examine the enums in the course of this document.</source>
          <target state="translated">支援技術と通信する場合、Qtのユーザーインターフェイスを理解できる方法で説明する必要があります。 Qtアプリケーションは&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt;を使用して、個々のUI要素に関する情報を公開します。現在、Qtはそのウィジェットとウィジェットパーツ（スライダーハンドルなど）のサポートを提供していますが、必要に応じて任意の&lt;a href=&quot;qobject&quot;&gt;QObjectの&lt;/a&gt;インターフェイスを実装することもできます。&lt;a href=&quot;qaccessible&quot;&gt;QAccessibleに&lt;/a&gt;は、UIを説明する列挙型が含まれています。このドキュメントの過程で列挙型を調べます。</target>
        </trans-unit>
        <trans-unit id="870d36a92f2ae13647e01707539daa266e80b994" translate="yes" xml:space="preserve">
          <source>When we create a field using &lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage::registerField&lt;/a&gt;(), we pass a unique field name and a widget. We can also provide a Qt property name and a &quot;changed&quot; signal (a signal that is emitted when the property changes) as third and fourth arguments; however, this is not necessary for the most common Qt widgets, such as &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;, and &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;, because &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; knows which properties to look for.</source>
          <target state="translated">&lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage :: registerField&lt;/a&gt;（）を使用してフィールドを作成する場合、一意のフィールド名とウィジェットを渡します。また、Qtプロパティ名と「変更された」シグナル（プロパティが変更されたときに発生するシグナル）を3番目と4番目の引数として指定することもできます。しかし、これは以下のような最も一般的なQtのウィジェットのために必要ではない&lt;a href=&quot;qlineedit&quot;&gt;にQLineEdit&lt;/a&gt;、&lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;、および&lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;ので、&lt;a href=&quot;qwizard&quot;&gt;QWizardを&lt;/a&gt;探すためにどのプロパティを知っています。</target>
        </trans-unit>
        <trans-unit id="0ef0b64bff35974267abf786dcf1eda874d19d4b" translate="yes" xml:space="preserve">
          <source>When we create a field using &lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage::registerField&lt;/a&gt;(), we pass a unique field name and a widget. We can also provide a Qt property name and a &quot;changed&quot; signal (a signal that is emitted when the property changes) as third and fourth arguments; however, this is not necessary for the most common Qt widgets, such as &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;, and &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;, because QWizard knows which properties to look for.</source>
          <target state="translated">&lt;a href=&quot;qwizardpage#registerField&quot;&gt;QWizardPage :: registerField&lt;/a&gt;（）を使用してフィールドを作成する場合、一意のフィールド名とウィジェットを渡します。3番目と4番目の引数として、Qtプロパティ名と「変更された」シグナル（プロパティが変更されたときに発行されるシグナル）を提供することもできます。しかし、これは以下のような最も一般的なQtのウィジェットのために必要ではない&lt;a href=&quot;qlineedit&quot;&gt;にQLineEdit&lt;/a&gt;、&lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;、および&lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; QWizardを探すためにどのプロパティを知っているので、。</target>
        </trans-unit>
        <trans-unit id="d28a9032eec48f88438cdec09fd45cc48b6758eb" translate="yes" xml:space="preserve">
          <source>When we select those widgets and close the dialog the two widgets will now be available from the toolbox as grey squares with their name next to it</source>
          <target state="translated">これらのウィジェットを選択してダイアログを閉じると、2つのウィジェットがツールボックスから名前の横にある灰色の四角で表示されるようになります。</target>
        </trans-unit>
        <trans-unit id="3fd645480f7c8c8a441a005df178284bbfe8bf76" translate="yes" xml:space="preserve">
          <source>When we specify a value for the length of an element in a text document, we often need to provide some other information so that the length is used in the way we expect. For example, when we specify a table width, the value can represent a fixed number of pixels, or it can be a percentage value. This information changes both the meaning of the value and the way it is used.</source>
          <target state="translated">テキスト文書内の要素の長さの値を指定する際には、長さが期待通りに使用されるように、他の情報を提供する必要があることがよくあります。例えば、表の幅を指定する場合、値は固定のピクセル数を表すこともできますし、パーセンテージ値を指定することもできます。この情報は、値の意味と使用方法の両方を変えます。</target>
        </trans-unit>
        <trans-unit id="284899e0845013f5c711a6352c8742fd3ae424f1" translate="yes" xml:space="preserve">
          <source>When working with MIME data, Qt will interate through all instances of &lt;a href=&quot;qmacpasteboardmime&quot;&gt;QMacPasteboardMime&lt;/a&gt; to find an instance that can convert to, or from, a specific MIME type. It will do this by calling &lt;a href=&quot;qmacpasteboardmime#canConvert&quot;&gt;canConvert&lt;/a&gt;() on each instance, starting with (and choosing) the last created instance first. The actual conversions will be done by using &lt;a href=&quot;qmacpasteboardmime#convertToMime&quot;&gt;convertToMime&lt;/a&gt;() and &lt;a href=&quot;qmacpasteboardmime#convertFromMime&quot;&gt;convertFromMime&lt;/a&gt;().</source>
          <target state="translated">QtはMIMEデータを&lt;a href=&quot;qmacpasteboardmime&quot;&gt;操作&lt;/a&gt;するとき、QMacPasteboardMimeのすべてのインスタンスを介して、特定のMIMEタイプに変換したり、特定のMIMEタイプから変換したりできるインスタンスを見つけます。これは、最後に作成されたインスタンスから始めて（そして選択して）、各インスタンスで&lt;a href=&quot;qmacpasteboardmime#canConvert&quot;&gt;canConvert&lt;/a&gt;（）を呼び出すことによって行われます。実際の変換は、&lt;a href=&quot;qmacpasteboardmime#convertToMime&quot;&gt;convertToMime&lt;/a&gt;（）および&lt;a href=&quot;qmacpasteboardmime#convertFromMime&quot;&gt;convertFromMime&lt;/a&gt;（）を使用して行われます。</target>
        </trans-unit>
        <trans-unit id="571daad4b1080b726a23421270240a628454d741" translate="yes" xml:space="preserve">
          <source>When working with MIME data, Qt will interate through all instances of QMacPasteboardMime to find an instance that can convert to, or from, a specific MIME type. It will do this by calling &lt;a href=&quot;qmacpasteboardmime#canConvert&quot;&gt;canConvert&lt;/a&gt;() on each instance, starting with (and choosing) the last created instance first. The actual conversions will be done by using &lt;a href=&quot;qmacpasteboardmime#convertToMime&quot;&gt;convertToMime&lt;/a&gt;() and &lt;a href=&quot;qmacpasteboardmime#convertFromMime&quot;&gt;convertFromMime&lt;/a&gt;().</source>
          <target state="translated">MIMEデータを操作する場合、QtはQMacPasteboardMimeのすべてのインスタンスを相互作用して、特定のMIMEタイプとの間で変換できるインスタンスを見つけます。これを行うには、最後に作成されたインスタンスから始めて（そして最初に選択して）、各インスタンスで&lt;a href=&quot;qmacpasteboardmime#canConvert&quot;&gt;canConvert&lt;/a&gt;（）を呼び出します。実際の変換は、&lt;a href=&quot;qmacpasteboardmime#convertToMime&quot;&gt;convertToMime&lt;/a&gt;（）および&lt;a href=&quot;qmacpasteboardmime#convertFromMime&quot;&gt;convertFromMime&lt;/a&gt;（）を使用して行われます。</target>
        </trans-unit>
        <trans-unit id="4e8e4ed4ccd8ff19293050034a255b064f2a3965" translate="yes" xml:space="preserve">
          <source>When working with sRGB framebuffers, it will be necessary to specify a format like &lt;code&gt;GL_SRGB8_ALPHA8&lt;/code&gt;. This can be achieved by calling this function.</source>
          <target state="translated">sRGBフレームバッファを使用する場合、 &lt;code&gt;GL_SRGB8_ALPHA8&lt;/code&gt; のような形式を指定する必要があります。これは、この関数を呼び出すことで実現できます。</target>
        </trans-unit>
        <trans-unit id="6f312a263e4af61bbd702f1cea50f4bdda448b76" translate="yes" xml:space="preserve">
          <source>When writing a &lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt; in Qt Quick, this class can be used to display a client's contents on an output device and will pass user input to the client.</source>
          <target state="translated">Qt Quickで&lt;a href=&quot;qwaylandcompositor&quot;&gt;QWaylandCompositor&lt;/a&gt;を記述する場合、このクラスを使用してクライアントのコンテンツを出力デバイスに表示し、ユーザー入力をクライアントに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="410b86178a5dfdcde1c78964c7d14183b1876a0b" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;qbytearray#append&quot;&gt;append&lt;/a&gt;() data to a non-empty array, the array will be reallocated and the new data copied to it. You can avoid this behavior by calling &lt;a href=&quot;qbytearray#reserve&quot;&gt;reserve&lt;/a&gt;(), which preallocates a certain amount of memory. You can also call &lt;a href=&quot;qbytearray#capacity&quot;&gt;capacity&lt;/a&gt;() to find out how much memory &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; actually allocated. Data appended to an empty array is not copied.</source>
          <target state="translated">ときあなたは&lt;a href=&quot;qbytearray#append&quot;&gt;アペンド&lt;/a&gt;非空の配列に（）データを、配列が再割り当てされ、新しいデータがそこにコピーされます。この動作を回避するには、&lt;a href=&quot;qbytearray#reserve&quot;&gt;reserve&lt;/a&gt;（）を呼び出します。これにより、特定の量のメモリが事前に割り当てられます。また、&lt;a href=&quot;qbytearray#capacity&quot;&gt;capacity&lt;/a&gt;（）を呼び出して、&lt;a href=&quot;qbytearray&quot;&gt;QByteArrayが&lt;/a&gt;実際に割り当てられたメモリの量を調べることもできます。空の配列に追加されたデータはコピーされません。</target>
        </trans-unit>
        <trans-unit id="706fe5a63795456778db27342449bdf7cabe6ed0" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;qbytearray#append&quot;&gt;append&lt;/a&gt;() data to a non-empty array, the array will be reallocated and the new data copied to it. You can avoid this behavior by calling &lt;a href=&quot;qbytearray#reserve&quot;&gt;reserve&lt;/a&gt;(), which preallocates a certain amount of memory. You can also call &lt;a href=&quot;qbytearray#capacity&quot;&gt;capacity&lt;/a&gt;() to find out how much memory QByteArray actually allocated. Data appended to an empty array is not copied.</source>
          <target state="translated">ときあなたは&lt;a href=&quot;qbytearray#append&quot;&gt;アペンド&lt;/a&gt;非空の配列に（）データを、配列が再割り当てされ、新しいデータがそこにコピーされます。特定の量のメモリを事前に割り当てる&lt;a href=&quot;qbytearray#reserve&quot;&gt;reserve&lt;/a&gt;（）を呼び出すことで、この動作を回避できます。また、&lt;a href=&quot;qbytearray#capacity&quot;&gt;capacity&lt;/a&gt;（）を呼び出して、QByteArrayが実際に割り当てたメモリの量を確認することもできます。空の配列に追加されたデータはコピーされません。</target>
        </trans-unit>
        <trans-unit id="e206e4859b01e1c09bb56347d89a744afe0086be" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;qwidget#hide&quot;&gt;hide&lt;/a&gt;() a child, its space will be distributed among the other children. It will be reinstated when you &lt;a href=&quot;qwidget#show&quot;&gt;show&lt;/a&gt;() it again.</source>
          <target state="translated">子を&lt;a href=&quot;qwidget#hide&quot;&gt;非表示&lt;/a&gt;（）にすると、そのスペースは他の子に分配されます。もう一度&lt;a href=&quot;qwidget#show&quot;&gt;表示&lt;/a&gt;（）すると、元に戻ります。</target>
        </trans-unit>
        <trans-unit id="2ae32a06b61e1a7246efea4bce7751cf08c416ce" translate="yes" xml:space="preserve">
          <source>When you add widgets to a layout, the layout process works as follows:</source>
          <target state="translated">レイアウトにウィジェットを追加すると、レイアウト処理は以下のように動作します。</target>
        </trans-unit>
        <trans-unit id="90fb4ea82c0d848dd1c76043e760d581c3542117" translate="yes" xml:space="preserve">
          <source>When you are done, call &lt;a href=&quot;qinapptransaction#finalize&quot;&gt;QInAppTransaction::finalize&lt;/a&gt;(), regardless of its status. Transactions which are not finalized will be emitted again the next time your application calls &lt;a href=&quot;qinappstore#registerProduct&quot;&gt;registerProduct&lt;/a&gt;() for the same product.</source>
          <target state="translated">完了したら、ステータスに関係なく&lt;a href=&quot;qinapptransaction#finalize&quot;&gt;QInAppTransaction :: finalize&lt;/a&gt;（）を呼び出します。ファイナライズされていないトランザクションは、次にアプリケーションが同じ製品に対して&lt;a href=&quot;qinappstore#registerProduct&quot;&gt;registerProduct&lt;/a&gt;（）を呼び出すときに再び発行されます。</target>
        </trans-unit>
        <trans-unit id="ca9c1c1922961985d5b3578d590ea428455c5e94" translate="yes" xml:space="preserve">
          <source>When you assign a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; sub-class to this property, the QML engine does the interface cast to &lt;code&gt;FooInterface*&lt;/code&gt; automatically.</source>
          <target state="translated">このプロパティに&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;サブクラスを割り当てると、QMLエンジンは &lt;code&gt;FooInterface*&lt;/code&gt; へのインターフェイスキャストを自動的に実行します。</target>
        </trans-unit>
        <trans-unit id="203801501ed91c63352794b08170d38e294688a8" translate="yes" xml:space="preserve">
          <source>When you assign a new font to a widget, the properties from this font are combined with the widget's default font to form the widget's final font. You can call &lt;a href=&quot;qwidget#fontInfo&quot;&gt;fontInfo&lt;/a&gt;() to get a copy of the widget's final font. The final font is also used to initialize &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s font.</source>
          <target state="translated">ウィジェットに新しいフォントを割り当てると、このフォントのプロパティがウィジェットのデフォルトフォントと組み合わされて、ウィジェットの最終フォントが形成されます。&lt;a href=&quot;qwidget#fontInfo&quot;&gt;fontInfo&lt;/a&gt;（）を呼び出して、ウィジェットの最終フォントのコピーを取得できます。最終的なフォントは、&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;のフォントを初期化するためにも使用されます。</target>
        </trans-unit>
        <trans-unit id="af2046c186d7103eac993dbd56c9ad5be66e4723" translate="yes" xml:space="preserve">
          <source>When you assign a new palette to a widget, the color roles from this palette are combined with the widget's default palette to form the widget's final palette. The palette entry for the widget's background role is used to fill the widget's background (see &lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;QWidget::autoFillBackground&lt;/a&gt;), and the foreground role initializes &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;'s pen.</source>
          <target state="translated">新しいパレットをウィジェットに割り当てると、このパレットのカラーロールがウィジェットのデフォルトパレットと結合され、ウィジェットの最終的なパレットが形成されます。ウィジェットの背景の役割のためのパレットエントリは、ウィジェットの背景を埋めるために使用されている（参照&lt;a href=&quot;qwidget#autoFillBackground-prop&quot;&gt;のQWidget :: autoFillBackgroundを&lt;/a&gt;）、およびフォアグラウンドの役割は、初期化&lt;a href=&quot;qpainter&quot;&gt;QPainterの&lt;/a&gt;のペン。</target>
        </trans-unit>
        <trans-unit id="9e46f6202b38da8549f0268e4a4fe0abf934e7f4" translate="yes" xml:space="preserve">
          <source>When you build Qt, frameworks are built by default, and inside the framework you will find both a release and a debug version (e.g., &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; and QtCore_debug). If you pass the &lt;code&gt;-no-framework&lt;/code&gt; flag when you build Qt, two dylibs are built for each Qt library (e.g., libQtCore.4.dylib and libQtCore_debug.4.dylib).</source>
          <target state="translated">Qtをビルドすると、デフォルトでフレームワークがビルドされ、フレームワーク内にはリリースバージョンとデバッグバージョン（&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;やQtCore_debugなど）の両方があります。Qtをビルドするときに &lt;code&gt;-no-framework&lt;/code&gt; フラグを渡すと、Qtライブラリごとに2つのdylibがビルドされます（libQtCore.4.dylibとlibQtCore_debug.4.dylibなど）。</target>
        </trans-unit>
        <trans-unit id="51ec8bb6c1e25445908ed2540d53f85248b08802" translate="yes" xml:space="preserve">
          <source>When you build Qt, frameworks are built by default, and inside the framework you will find both a release and a debug version (e.g., &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; and QtCore_debug). If you pass the &lt;code&gt;-no-framework&lt;/code&gt; flag when you build Qt, two dylibs are built for each Qt library (e.g., libQtCore.4.dylib and libQtCore_debug.4.dylib).</source>
          <target state="translated">Qtをビルドすると、フレームワークがデフォルトでビルドされ、フレームワーク内にリリースバージョンとデバッグバージョン（&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;やQtCore_debugなど）の両方があります。Qtのビルド時に &lt;code&gt;-no-framework&lt;/code&gt; フラグを渡すと、Qtライブラリごとに2つのdylibがビルドされます（例：libQtCore.4.dylibとlibQtCore_debug.4.dylib）。</target>
        </trans-unit>
        <trans-unit id="0a87e705d339a4e673804de6e41e480ac5d48e14" translate="yes" xml:space="preserve">
          <source>When you call &lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;() in a thread, other threads that try to call &lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;() in the same place will block until the thread that got the lock calls &lt;a href=&quot;qmutex#unlock&quot;&gt;unlock&lt;/a&gt;(). A non-blocking alternative to &lt;a href=&quot;qmutex#lock&quot;&gt;lock&lt;/a&gt;() is &lt;a href=&quot;qmutex#tryLock&quot;&gt;tryLock&lt;/a&gt;().</source>
          <target state="translated">あなたが呼び出すと&lt;a href=&quot;qmutex#lock&quot;&gt;、ロックを&lt;/a&gt;スレッドで（）、呼び出すしようと他のスレッド&lt;a href=&quot;qmutex#lock&quot;&gt;のロックを&lt;/a&gt;ロックを得たスレッドが呼び出すまで同じ場所に（）はブロックします&lt;a href=&quot;qmutex#unlock&quot;&gt;ロック解除を&lt;/a&gt;（）。&lt;a href=&quot;qmutex#lock&quot;&gt;ロック&lt;/a&gt;（）の非ブロッキング代替手段は、&lt;a href=&quot;qmutex#tryLock&quot;&gt;tryLock&lt;/a&gt;（）です。</target>
        </trans-unit>
        <trans-unit id="6c51b78ef404aa9256758848a787e698738ccda1" translate="yes" xml:space="preserve">
          <source>When you click &lt;b&gt;OK&lt;/b&gt; or &lt;b&gt;Apply&lt;/b&gt;, Qt Designer will automatically display the widget with its new stylesheet.</source>
          <target state="translated">[ &lt;b&gt;OK&lt;/b&gt; ] または[ &lt;b&gt;適用&lt;/b&gt; ]をクリックすると、Qt Designerは新しいスタイルシートでウィジェットを自動的に表示します。</target>
        </trans-unit>
        <trans-unit id="a29f5adc1b71f2d82537e70f37ce91b1e7581ebe" translate="yes" xml:space="preserve">
          <source>When you click on the slider and drag it to a certain value, you want the spin box to display the slider's position. To accomplish this behavior, you need to connect the slider's &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged()&lt;/a&gt; signal to the spin box's &lt;a href=&quot;qspinbox#value-prop&quot;&gt;setValue()&lt;/a&gt; slot. You also need to make the reverse connections, e.g., connect the spin box's &lt;a href=&quot;qspinbox#valueChanged&quot;&gt;valueChanged()&lt;/a&gt; signal to the slider's &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue()&lt;/a&gt; slot.</source>
          <target state="translated">スライダーをクリックして特定の値までドラッグすると、スピンボックスにスライダーの位置が表示されます。この動作を実行するには、スライダーの&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;valueChanged（）&lt;/a&gt;信号をスピンボックスの&lt;a href=&quot;qspinbox#value-prop&quot;&gt;setValue（）&lt;/a&gt;スロットに接続する必要があります。また、逆の接続を作成する必要もあります。たとえば、スピンボックスの&lt;a href=&quot;qspinbox#valueChanged&quot;&gt;valueChanged（）&lt;/a&gt;信号をスライダーの&lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue（）&lt;/a&gt;スロットに接続します。</target>
        </trans-unit>
        <trans-unit id="16d343fa86e79c1573178210409175ac2c2a9e85" translate="yes" xml:space="preserve">
          <source>When you compile your application, you must explicitly enable the debugging infrastructure. If you use qmake, you can add the configuration parameters to the project &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">アプリケーションをコンパイルするときは、デバッグインフラストラクチャを明示的に有効にする必要があります。qmakeを使用する場合、構成パラメーターをプロジェクトの &lt;code&gt;.pro&lt;/code&gt; ファイルに追加できます。</target>
        </trans-unit>
        <trans-unit id="2aceba6d77a63e6f2b3b7fb5d2e861200bdf01c2" translate="yes" xml:space="preserve">
          <source>When you create a &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; object you specify various attributes that you want the font to have. Qt will use the font with the specified attributes, or if no matching font exists, Qt will use the closest matching installed font. The attributes of the font that is actually used are retrievable from a &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; object. If the window system provides an exact match &lt;a href=&quot;qfont#exactMatch&quot;&gt;exactMatch&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;. Use &lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt; to get measurements, e.g. the pixel length of a string using QFontMetrics::width().</source>
          <target state="translated">&lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;オブジェクトを作成するとき、フォントに持たせたいさまざまな属性を指定します。Qtは指定された属性を持つフォントを使用します。または、一致するフォントが存在しない場合、Qtは最も近いインストール済みフォントを使用します。実際に使用されるフォントの属性は、&lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt;オブジェクトから取得できます。ウィンドウシステムが完全一致を提供する場合、&lt;a href=&quot;qfont#exactMatch&quot;&gt;exactMatch&lt;/a&gt;（）は &lt;code&gt;true&lt;/code&gt; を返します。&lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt;を使用して、たとえばQFontMetrics :: width（）を使用した文字列のピクセル長などの測定値を取得します。</target>
        </trans-unit>
        <trans-unit id="c60c2a106febe9d8810b691e03aaff098d3cba22" translate="yes" xml:space="preserve">
          <source>When you create a QFont object you specify various attributes that you want the font to have. Qt will use the font with the specified attributes, or if no matching font exists, Qt will use the closest matching installed font. The attributes of the font that is actually used are retrievable from a &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; object. If the window system provides an exact match &lt;a href=&quot;qfont#exactMatch&quot;&gt;exactMatch&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;. Use &lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt; to get measurements, e.g. the pixel length of a string using QFontMetrics::width().</source>
          <target state="translated">QFontオブジェクトを作成するときは、フォントに持たせたいさまざまな属性を指定します。Qtは、指定された属性のフォントを使用します。一致するフォントが存在しない場合、Qtは最も一致するインストール済みフォントを使用します。実際に使用されるフォントの属性は、&lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt;オブジェクトから取得できます。ウィンドウシステムが完全一致を提供する場合、&lt;a href=&quot;qfont#exactMatch&quot;&gt;exactMatch&lt;/a&gt;（）は &lt;code&gt;true&lt;/code&gt; を返します。&lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt;を使用して測定値を取得します。たとえば、QFontMetrics :: width（）を使用した文字列のピクセル長。</target>
        </trans-unit>
        <trans-unit id="28ec5a0e3b20169c458bbcc9cde4d66c22062727" translate="yes" xml:space="preserve">
          <source>When you create an instance of your &lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt; subclass, pass it the &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; that you want the syntax highlighting to be applied to. For example:</source>
          <target state="translated">&lt;a href=&quot;qsyntaxhighlighter&quot;&gt;QSyntaxHighlighter&lt;/a&gt;サブクラスのインスタンスを作成するときに、構文の強調表示を適用する&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;に渡します。例えば：</target>
        </trans-unit>
        <trans-unit id="acf4ae51281130900b153e1649564a2683553896" translate="yes" xml:space="preserve">
          <source>When you create an instance of your QSyntaxHighlighter subclass, pass it the &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; that you want the syntax highlighting to be applied to. For example:</source>
          <target state="translated">QSyntaxHighlighterサブクラスのインスタンスを作成するときに、構文の強調表示を適用する&lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;を渡します。例えば：</target>
        </trans-unit>
        <trans-unit id="6ca044dcc761989ec3d45fb4cbef2b702bc2b544" translate="yes" xml:space="preserve">
          <source>When you create your own subwindow, you must set the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_DeleteOnClose&lt;/a&gt; widget attribute if you want the window to be deleted when closed in the MDI area. If not, the window will be hidden and the MDI area will not activate the next subwindow.</source>
          <target state="translated">独自のサブウィンドウを作成するときに、MDI領域で閉じたときにウィンドウを削除する場合は、&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_DeleteOnClose&lt;/a&gt;ウィジェット属性を設定する必要があります。そうでない場合、ウィンドウは非表示になり、MDI領域は次のサブウィンドウをアクティブにしません。</target>
        </trans-unit>
        <trans-unit id="de40a9dc45275aef4c5df5f40038b770fe409001" translate="yes" xml:space="preserve">
          <source>When you define your filter, note that it can be called from different threads; but never concurrently. This filter cannot call any static functions from &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;.</source>
          <target state="translated">フィルタを定義するときは、さまざまなスレッドから呼び出すことができることに注意してください。しかし、同時には決してありません。このフィルターは、&lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;から静的関数を呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="84840db2f97361935bdbfd339750fb2aacff31cf" translate="yes" xml:space="preserve">
          <source>When you develop a BSP for your board, you should include the following utilities to enable Qt Creator to deploy, run, debug, and stop applications on QNX devices:</source>
          <target state="translated">ボード用の BSP を開発する際には、Qt Creator で QNX デバイス上のアプリケーションをデプロイ、実行、デバッグ、停止できるようにするために、次のユーティリティを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="4c480aff5cf79a86ac02aed41c87410316570513" translate="yes" xml:space="preserve">
          <source>When you develop an application for an Apple platform, you must set the deployment target. Various build tools within the Xcode toolchain all have a flag which you can use to set this value, including but not limited to the compiler and linker. By setting the deployment target value, you are explicitly declaring that your application must work on at least that version, and will not work with any earlier versions of the OS. It is then up to you to ensure that your use of the system APIs matches what you have declared. Since the compiler knows what you have declared, it can help in enforcing that.</source>
          <target state="translated">Appleプラットフォーム用のアプリケーションを開発する場合、デプロイメントターゲットを設定する必要があります。Xcodeツールチェイン内の様々なビルドツールには、コンパイラやリンカを含めて、この値を設定するために使用できるフラグがあります。ディプロイメントターゲットの値を設定することで、アプリケーションは少なくともそのバージョンで動作しなければならず、それ以前のバージョンのOSでは動作しないことを明示的に宣言していることになります。システムAPIの使用が宣言したものと一致するかどうかは、あなた次第です。コンパイラはあなたが何を宣言したかを知っているので、それを強制するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="8e624447ece8794817624f7b1b843a60aecc9b62" translate="yes" xml:space="preserve">
          <source>When you develop an application for an Apple platform, you should always use the latest version of Xcode and the latest SDK available at the time of development. On some platforms, like iOS, you will actually be rejected from the App Store if you do not. Therefore, the SDK version is always greater than or equal to the deployment target.</source>
          <target state="translated">Appleプラットフォーム向けのアプリケーションを開発する際には、常に最新版のXcodeと、開発時に利用可能な最新のSDKを使用する必要があります。iOSのようないくつかのプラットフォームでは、そうしないと実際にApp Storeから拒否されてしまいます。そのため、SDKのバージョンは常にデプロイ先と同じかそれ以上になります。</target>
        </trans-unit>
        <trans-unit id="4c7b64797b21f9f607e1ffa6f6ab445278f5f0b8" translate="yes" xml:space="preserve">
          <source>When you develop an application with QML, there are many ways to debug possible issues that you may face. The sections below describe the debugging tools available and how to use them.</source>
          <target state="translated">QML を使ってアプリケーションを開発する際には、直面する可能性のある問題をデバッグする方法がたくさんあります。以下のセクションでは、利用可能なデバッグツールとその使い方について説明します。</target>
        </trans-unit>
        <trans-unit id="665dc5dbb39005e2b8624150def3c9dc88cec3b1" translate="yes" xml:space="preserve">
          <source>When you develop custom widgets, you can create custom subclasses of &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; and distribute them as plugins (using &lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin&lt;/a&gt;) or compile them into the application. Likewise, Qt's predefined accessibility support can be built as plugin (the default) or directly into the Qt library. The main advantage of using plugins is that the accessibility classes are only loaded into memory if they are actually used; they don't slow down the common case where no assistive technology is being used.</source>
          <target state="translated">カスタムウィジェットを開発するとき、&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterfaceの&lt;/a&gt;カスタムサブクラスを作成し、それらをプラグインとして（&lt;a href=&quot;qaccessibleplugin&quot;&gt;QAccessiblePlugin&lt;/a&gt;を使用して）配布するか、アプリケーションにコンパイルできます。同様に、Qtの定義済みのアクセシビリティサポートは、プラグイン（デフォルト）として、または直接Qtライブラリに組み込むことができます。プラグインを使用する主な利点は、アクセシビリティクラスが実際に使用される場合にのみメモリに読み込まれることです。支援技術が使用されていない一般的なケースを遅くすることはありません。</target>
        </trans-unit>
        <trans-unit id="bd0d4bcaee27591a27f5364969032d286331c9d5" translate="yes" xml:space="preserve">
          <source>When you distribute your application, remember to include</source>
          <target state="translated">申請書を配布する際には、以下の内容を忘れないようにしましょう。</target>
        </trans-unit>
        <trans-unit id="8f9dd307dc92d46d630aa224d3859e9783a0c824" translate="yes" xml:space="preserve">
          <source>When you distribute your application, remember to include libpq.dll in your installation package. It must be placed in the same folder as the application executable.</source>
          <target state="translated">アプリケーションを配布する際には、libpq.dllをインストールパッケージに含めることを忘れないでください。これは、アプリケーションの実行ファイルと同じフォルダに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="5ea8acaa7e79eefa675682ec7a314c688674b2bb" translate="yes" xml:space="preserve">
          <source>When you do a &lt;code&gt;make install&lt;/code&gt;, and you don't have a build of the project yet, the project is first built, and then installed. If you don't want this behavior, set this config value to ensure that the build target is not added as a dependency to the install target.</source>
          <target state="translated">あなたが行う場合は &lt;code&gt;make install&lt;/code&gt; を、あなたはまだプロジェクトのビルドを持っていない、プロジェクトが最初に建てられ、その後、インストールされています。この動作を望まない場合は、この構成値を設定して、ビルドターゲットが依存関係としてインストールターゲットに追加されないようにします。</target>
        </trans-unit>
        <trans-unit id="f239ccd84b95fa1bd3731891bc9b99327baddf53" translate="yes" xml:space="preserve">
          <source>When you have a data set that updates rapidly, it is important to handle data properly to ensure good performance. Since memory allocation is a costly operation, always use &lt;a href=&quot;qlist#reserve&quot;&gt;QList::reserve&lt;/a&gt;() and &lt;a href=&quot;qvector#resize&quot;&gt;QVector::resize&lt;/a&gt;() where possible to avoid unnecessary reallocations when constructing the array to give to the proxy. If you need to change the entire data set for each frame, it is in most cases best to reuse the existing array - especially if the array dimensions do not change. If you need to add, insert, remove, or change several rows or items for each frame, it is always more efficient to do it with one method call instead of multiple calls affecting a single row or item each. For example, adding ten rows with a single &lt;a href=&quot;qbardataproxy#addRows&quot;&gt;QBarDataProxy::addRows&lt;/a&gt;() call is much more efficient than ten separate &lt;a href=&quot;qbardataproxy#addRow&quot;&gt;QBarDataProxy::addRow&lt;/a&gt;() calls.</source>
          <target state="translated">迅速に更新されるデータセットがある場合、良好なパフォーマンスを確保するためにデータを適切に処理することが重要です。メモリの割り当てはコストのかかる操作なので、プロキシに渡す配列を作成するときに不要な再割り当てを回避するために、可能な場合は常に&lt;a href=&quot;qlist#reserve&quot;&gt;QList :: reserve&lt;/a&gt;（）および&lt;a href=&quot;qvector#resize&quot;&gt;QVector :: resize&lt;/a&gt;（）を使用してください。各フレームのデータセット全体を変更する必要がある場合、特に配列の次元が変更されない場合は、ほとんどの場合、既存の配列を再利用するのが最善です。フレームごとに複数の行または項目を追加、挿入、削除、または変更する必要がある場合は、単一の行または項目にそれぞれ影響を与える複数の呼び出しではなく、1つのメソッド呼び出しで行う方が常に効率的です。たとえば、単一の&lt;a href=&quot;qbardataproxy#addRows&quot;&gt;QBarDataProxy :: addRowsで&lt;/a&gt; 10行を追加する（）呼び出しは、10個の個別の&lt;a href=&quot;qbardataproxy#addRow&quot;&gt;QBarDataProxy :: addRow&lt;/a&gt;（）呼び出しよりもはるかに効率的です。</target>
        </trans-unit>
        <trans-unit id="850eb12314b4562298a7215df379da3fe4b7c57c" translate="yes" xml:space="preserve">
          <source>When you have multiple displays connected, the level of support to target one or more of these displays from one single Qt application, varies between the platform plugins and often depends on the device and its graphics stack.</source>
          <target state="translated">複数のディスプレイを接続している場合、1つのQtアプリケーションから1つ以上のディスプレイをターゲットにするサポートのレベルは、プラットフォームのプラグインによって異なり、デバイスとそのグラフィックススタックに依存することがよくあります。</target>
        </trans-unit>
        <trans-unit id="f2c795f997957d917a037b7558d2111076f2f860" translate="yes" xml:space="preserve">
          <source>When you have set up your account, click on &lt;b&gt;Add new application&lt;/b&gt; in Google Play's developer console.</source>
          <target state="translated">アカウントを設定したら、Google Playのデベロッパーコンソールで[ &lt;b&gt;新しいアプリケーション&lt;/b&gt;を&lt;b&gt;追加&lt;/b&gt; ]をクリックします。</target>
        </trans-unit>
        <trans-unit id="da2b2d3afb5483b4a1db7b7d7fb239c631a77696" translate="yes" xml:space="preserve">
          <source>When you implement styles, there are several issues to consider. We will give some hints and advice on implementation here.</source>
          <target state="translated">スタイルを実装する際には、いくつか検討すべき点があります。ここでは、実装のヒントやアドバイスをお伝えします。</target>
        </trans-unit>
        <trans-unit id="8212971e42c4deca42aba3c17bc98fcd36818d32" translate="yes" xml:space="preserve">
          <source>When you make your own widget class, you should also communicate its layout properties. If the widget uses one of Qt's layouts, this is already taken care of. If the widget does not have any child widgets, or uses a manual layout, you can change the behavior of the widget using any or all of the following mechanisms:</source>
          <target state="translated">独自のウィジェットクラスを作るときは、レイアウトのプロパティも伝えなければなりません。ウィジェットがQtのレイアウトを使用している場合、これは既に処理されています。ウィジェットに子ウィジェットがない場合や、手動レイアウトを使用している場合は、以下のメカニズムのいずれかまたはすべてを使用して、ウィジェットの動作を変更することができます。</target>
        </trans-unit>
        <trans-unit id="11e1d05bbb73ce5b03a0982e43710997b6d84eef" translate="yes" xml:space="preserve">
          <source>When you need to invoke item functionality in a &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;-based API (e.g. &lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemView&lt;/a&gt;), you can call this function to obtain an index that corresponds to the item's location in the model.</source>
          <target state="translated">&lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt;ベースのAPI（&lt;a href=&quot;qabstractitemview&quot;&gt;QAbstractItemViewなど&lt;/a&gt;）でアイテム機能を呼び出す必要がある場合、この関数を呼び出して、モデル内のアイテムの場所に対応するインデックスを取得できます。</target>
        </trans-unit>
        <trans-unit id="8810b0890f73b99ba2b69adf7bbab05a3b05df5c" translate="yes" xml:space="preserve">
          <source>When you publish a &lt;code&gt;QObject&lt;/code&gt; that has overloaded methods, &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; will resolve method invocations to the best match. Note that due to JavaScript's type system, there is only a single 'number' type which maps best to a C++ 'double'. When overloads differ only in the type of a number-like parameter, &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; will always choose that overload which best matches the JavaScript 'number' type. When you connect to an overloaded signal, the &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; client will by default only connect to the first signal overload of that name. Additionally, overloads of methods and signals can explicitly be requested by their complete &lt;code&gt;QMetaMethod&lt;/code&gt; signature. Assume we have the following &lt;code&gt;QObject&lt;/code&gt; subclass on the C++ side:</source>
          <target state="translated">メソッドがオーバーロードされた &lt;code&gt;QObject&lt;/code&gt; を公​​開すると、&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;はメソッド呼び出しを最適に解決します。 JavaScriptの型システムのため、C ++の「double」に最適にマップされる「number」型は1つしかないことに注意してください。オーバーロードが数値のようなパラメーターのタイプのみで異なる場合、&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;は常にJavaScriptの「数値」タイプに最も一致するオーバーロードを選択します。オーバーロードされたシグナルに接続すると、&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;クライアントはデフォルトでその名前の最初のシグナルオーバーロードにのみ接続します。さらに、メソッドとシグナルのオーバーロードは、完全な &lt;code&gt;QMetaMethod&lt;/code&gt; シグネチャによって明示的に要求できます。次の &lt;code&gt;QObject&lt;/code&gt; があると仮定します C ++側のサブクラス：</target>
        </trans-unit>
        <trans-unit id="fa3c3f800f477ad4b6074ff08c0beb3cbd07d4a4" translate="yes" xml:space="preserve">
          <source>When you receive the signal, you call &lt;a href=&quot;qstandarditemmodel#itemFromIndex&quot;&gt;itemFromIndex&lt;/a&gt;() on the given model index to get a pointer to the item:</source>
          <target state="translated">シグナルを受け取ったら、指定されたモデルインデックスで&lt;a href=&quot;qstandarditemmodel#itemFromIndex&quot;&gt;itemFromIndex&lt;/a&gt;（）を呼び出して、アイテムへのポインターを取得します。</target>
        </trans-unit>
        <trans-unit id="11bc559026d9ce92e05880b306679f8d18cde9a7" translate="yes" xml:space="preserve">
          <source>When you reimplement your own paint engine, you must reimplement &lt;a href=&quot;qpaintengine#drawTextItem&quot;&gt;QPaintEngine::drawTextItem&lt;/a&gt;(), a function that takes a &lt;a href=&quot;qtextitem&quot;&gt;QTextItem&lt;/a&gt; as one of its arguments.</source>
          <target state="translated">独自のペイントエンジンを再実装するときは、&lt;a href=&quot;qpaintengine#drawTextItem&quot;&gt;QPaintEngine :: drawTextItem&lt;/a&gt;（）を再実装する必要があります。これは、引数の1つとして&lt;a href=&quot;qtextitem&quot;&gt;QTextItemを受け取る&lt;/a&gt;関数です。</target>
        </trans-unit>
        <trans-unit id="48d1f1f930cc85404c3f11ae3d2fbe97abc80529" translate="yes" xml:space="preserve">
          <source>When you reimplement your own paint engine, you must reimplement &lt;a href=&quot;qpaintengine#drawTextItem&quot;&gt;QPaintEngine::drawTextItem&lt;/a&gt;(), a function that takes a QTextItem as one of its arguments.</source>
          <target state="translated">独自のペイントエンジンを再実装する場合は、&lt;a href=&quot;qpaintengine#drawTextItem&quot;&gt;QPaintEngine :: drawTextItem&lt;/a&gt;（）を再実装する必要があります。これは、引数の1つとしてQTextItemを受け取る関数です。</target>
        </trans-unit>
        <trans-unit id="cc3622a2958b0c7677184a6e7b09570f3e9ffbeb" translate="yes" xml:space="preserve">
          <source>When you retrieve a pixmap using pixmap(&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;, Mode, State), and no pixmap for this given size, mode and state has been added with &lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;() or &lt;a href=&quot;qicon#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), then &lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt; will generate one on the fly. This pixmap generation happens in a &lt;a href=&quot;qiconengine&quot;&gt;QIconEngine&lt;/a&gt;. The default engine scales pixmaps down if required, but never up, and it uses the current style to calculate a disabled appearance. By using custom icon engines, you can customize every aspect of generated icons. With &lt;a href=&quot;qiconengineplugin&quot;&gt;QIconEnginePlugin&lt;/a&gt; it is possible to register different icon engines for different file suffixes, making it possible for third parties to provide additional icon engines to those included with Qt.</source>
          <target state="translated">pixmap（&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;、Mode、State）を使用してピックスマップを取得し、この指定されたサイズ、モード、および状態のピックスマップが&lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;（）または&lt;a href=&quot;qicon#addPixmap&quot;&gt;addPixmap&lt;/a&gt;（）で追加されていない場合、&lt;a href=&quot;qicon&quot;&gt;QIcon&lt;/a&gt;はその場で生成します。このピックスマップの生成は&lt;a href=&quot;qiconengine&quot;&gt;QIconEngineで行われ&lt;/a&gt;ます。デフォルトのエンジンは、必要に応じてピックスマップを縮小しますが、拡大することはありません。現在のスタイルを使用して、無効な外観を計算します。カスタムアイコンエンジンを使用すると、生成されたアイコンのあらゆる側面をカスタマイズできます。&lt;a href=&quot;qiconengineplugin&quot;&gt;QIconEnginePlugin&lt;/a&gt;可能第三者がQtのに含まれているものに追加アイコンエンジンを提供するために作る、別のファイル接尾辞のために別のアイコンエンジンを登録することが可能です。</target>
        </trans-unit>
        <trans-unit id="9f0467d78e10463d2a8ba36f6d8d3579b988d37d" translate="yes" xml:space="preserve">
          <source>When you retrieve a pixmap using pixmap(&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;, Mode, State), and no pixmap for this given size, mode and state has been added with &lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;() or &lt;a href=&quot;qicon#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), then QIcon will generate one on the fly. This pixmap generation happens in a &lt;a href=&quot;qiconengine&quot;&gt;QIconEngine&lt;/a&gt;. The default engine scales pixmaps down if required, but never up, and it uses the current style to calculate a disabled appearance. By using custom icon engines, you can customize every aspect of generated icons. With &lt;a href=&quot;qiconengineplugin&quot;&gt;QIconEnginePlugin&lt;/a&gt; it is possible to register different icon engines for different file suffixes, making it possible for third parties to provide additional icon engines to those included with Qt.</source>
          <target state="translated">pixmap（&lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt;、Mode、State）を使用してピックスマップを取得し、この指定されたサイズ、モード、および状態のピックスマップが&lt;a href=&quot;qicon#addFile&quot;&gt;addFile&lt;/a&gt;（）または&lt;a href=&quot;qicon#addPixmap&quot;&gt;addPixmap&lt;/a&gt;（）で追加されていない場合、QIconはオンザフライでピックスマップを生成します。このピックスマップの生成は、&lt;a href=&quot;qiconengine&quot;&gt;QIconEngineで行われ&lt;/a&gt;ます。デフォルトのエンジンは、必要に応じてピックスマップを縮小しますが、拡大することはなく、現在のスタイルを使用して無効な外観を計算します。カスタムアイコンエンジンを使用することで、生成されたアイコンのあらゆる側面をカスタマイズできます。&lt;a href=&quot;qiconengineplugin&quot;&gt;QIconEnginePlugin&lt;/a&gt;可能第三者がQtのに含まれているものに追加アイコンエンジンを提供するために作る、別のファイル接尾辞のために別のアイコンエンジンを登録することが可能です。</target>
        </trans-unit>
        <trans-unit id="571197ffd60fff66160ddd0d5152ea57afa360f9" translate="yes" xml:space="preserve">
          <source>When you run a Qt application, you can specify several command-line options that can help with debugging. These are recognized by &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;.</source>
          <target state="translated">Qtアプリケーションを実行するとき、デバッグに役立ついくつかのコマンドラインオプションを指定できます。これらは&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;によって認識されます。</target>
        </trans-unit>
        <trans-unit id="349b845c24584a63440e56578dc469286bd5d62e" translate="yes" xml:space="preserve">
          <source>When you run an &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; using the C++ API in a Qt application, you will often want to bind program variables to $variables in the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;. After the query is evaluated, you will want to interpret the sequence of data items in the result set.</source>
          <target state="translated">QtアプリケーションでC ++ APIを使用して&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;を実行する場合、プログラム変数を&lt;a href=&quot;xmlprocessing&quot;&gt;XQueryの&lt;/a&gt;$ variablesにバインドしたいことがよくあります。クエリが評価された後、結果セット内のデータ項目のシーケンスを解釈する必要があります。</target>
        </trans-unit>
        <trans-unit id="dcbc1472c5e4961da67399a01267a56000ea1f91" translate="yes" xml:space="preserve">
          <source>When you run an XQuery using the C++ API in a Qt application, you will often want to bind program variables to $variables in the XQuery. After the query is evaluated, you will want to interpret the sequence of data items in the result set.</source>
          <target state="translated">Qt アプリケーションで C++API を使用して XQuery を実行する場合、XQuery 内の $variables にプログラム変数をバインドしたいことがよくあります。クエリが評価された後、結果セットのデータ項目のシーケンスを解釈したい場合があります。</target>
        </trans-unit>
        <trans-unit id="74898dc919ae9ab35b6672e91c4aea88a18f022f" translate="yes" xml:space="preserve">
          <source>When you run your application, you will also need to add the &lt;code&gt;oci.dll&lt;/code&gt; path to your &lt;code&gt;PATH&lt;/code&gt; environment variable:</source>
          <target state="translated">アプリケーションを実行するときは、 &lt;code&gt;oci.dll&lt;/code&gt; パスを &lt;code&gt;PATH&lt;/code&gt; 環境変数に追加する必要もあります。</target>
        </trans-unit>
        <trans-unit id="d0c6b234a298b905aa90c3eef8101c41b23a9179" translate="yes" xml:space="preserve">
          <source>When you start developing on a given embedded device, often it's necessary to verify the behavior of the device and drivers, and that the connected displays are working as they should. One easy way is to use the &lt;b&gt;hellowindow&lt;/b&gt; example. Launching it with the &lt;code&gt;-platform eglfs --multiscreen --timeout&lt;/code&gt; arguments shows a rotating Qt logo on each connected screen for a few seconds.</source>
          <target state="translated">特定の組み込みデバイスで開発を開始するときは、多くの場合、デバイスとドライバーの動作を確認し、接続されたディスプレイが正常に機能していることを確認する必要があります。簡単な方法の1つは、&lt;b&gt;hellowindowの&lt;/b&gt;例を使用する&lt;b&gt;こと&lt;/b&gt;です。 &lt;code&gt;-platform eglfs --multiscreen --timeout&lt;/code&gt; 引数を指定して起動すると、接続されている各画面にQtロゴが数秒間回転して表示されます。</target>
        </trans-unit>
        <trans-unit id="ee8546a04dd2a56a0ac326f7d2e48820793cd419" translate="yes" xml:space="preserve">
          <source>When you tell</source>
          <target state="translated">あなたが言うとき</target>
        </trans-unit>
        <trans-unit id="1fa91e235bb1e0e43574ae5fec7e6d97da21cd4c" translate="yes" xml:space="preserve">
          <source>When you use &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;, &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;, and &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; to access the file system with Qt, you can use Unicode file names. On Unix, these file names are converted to an 8-bit encoding. If you want to use standard C++ APIs (&lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt;) or platform-specific APIs to access files instead of &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;, you can use the &lt;a href=&quot;qfile#encodeName&quot;&gt;encodeName&lt;/a&gt;() and &lt;a href=&quot;qfile#decodeName&quot;&gt;decodeName&lt;/a&gt;() functions to convert between Unicode file names and 8-bit file names.</source>
          <target state="translated">あなたが使用している場合&lt;a href=&quot;qfile&quot;&gt;qfileにより&lt;/a&gt;、&lt;a href=&quot;qfileinfo&quot;&gt;のQFileInfo&lt;/a&gt;、および&lt;a href=&quot;qdir&quot;&gt;QDirを&lt;/a&gt; Qtのあるファイル・システムにアクセスするには、Unicodeのファイル名を使用することができます。 Unixでは、これらのファイル名は8ビットエンコーディングに変換されます。標準のC ++ API（ &lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt; ）またはプラットフォーム固有のAPIを使用して&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;ではなくファイルにアクセスする場合は、&lt;a href=&quot;qfile#encodeName&quot;&gt;encodeName&lt;/a&gt;（）および&lt;a href=&quot;qfile#decodeName&quot;&gt;decodeName&lt;/a&gt;（）関数を使用して、Unicodeファイル名と8ビットファイル名。</target>
        </trans-unit>
        <trans-unit id="219842d63fb103c1dd2829e0b37f7c43d7849402" translate="yes" xml:space="preserve">
          <source>When you use QFile, &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;, and &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; to access the file system with Qt, you can use Unicode file names. On Unix, these file names are converted to an 8-bit encoding. If you want to use standard C++ APIs (&lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt;) or platform-specific APIs to access files instead of QFile, you can use the &lt;a href=&quot;qfile#encodeName&quot;&gt;encodeName&lt;/a&gt;() and &lt;a href=&quot;qfile#decodeName&quot;&gt;decodeName&lt;/a&gt;() functions to convert between Unicode file names and 8-bit file names.</source>
          <target state="translated">QFile、&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;、および&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt;を使用してQtでファイルシステムにアクセスする場合、Unicodeファイル名を使用できます。Unixでは、これらのファイル名は8ビットエンコーディングに変換されます。QFileの代わりに標準のC ++ API（ &lt;code&gt;&amp;lt;cstdio&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt; ）またはプラットフォーム固有のAPIを使用してファイルにアクセスする場合は、&lt;a href=&quot;qfile#encodeName&quot;&gt;encodeName&lt;/a&gt;（）および&lt;a href=&quot;qfile#decodeName&quot;&gt;decodeName&lt;/a&gt;（）関数を使用してUnicodeファイル名と8を変換できます。ビットファイル名。</target>
        </trans-unit>
        <trans-unit id="80fb6f7c17f227081e6e0638953d3b9f7a80a55c" translate="yes" xml:space="preserve">
          <source>When you use a Button in your application, the &lt;code&gt;background&lt;/code&gt; and &lt;code&gt;contentItem&lt;/code&gt; items will be created and parented to the root &lt;code&gt;Button&lt;/code&gt; item:</source>
          <target state="translated">アプリケーションでButtonを使用すると、 &lt;code&gt;background&lt;/code&gt; Itemアイテムと &lt;code&gt;contentItem&lt;/code&gt; アイテムが作成され、ルート &lt;code&gt;Button&lt;/code&gt; アイテムの親になります。</target>
        </trans-unit>
        <trans-unit id="6ed92c03ec92c021add70bc2437e374d7f1ddbaf" translate="yes" xml:space="preserve">
          <source>When you use a layout, you do not need to pass a parent when constructing the child widgets. The layout will automatically reparent the widgets (using &lt;a href=&quot;qwidget#setParent&quot;&gt;QWidget::setParent&lt;/a&gt;()) so that they are children of the widget on which the layout is installed.</source>
          <target state="translated">レイアウトを使用する場合、子ウィジェットを作成するときに親を渡す必要はありません。レイアウトはウィジェットを自動的に再ペアレント化し（&lt;a href=&quot;qwidget#setParent&quot;&gt;QWidget :: setParent&lt;/a&gt;（）を使用）、レイアウトがインストールされているウィジェットの子になるようにします。</target>
        </trans-unit>
        <trans-unit id="da35347dbd73ff3a30bfc301345e76eff709d5d4" translate="yes" xml:space="preserve">
          <source>When you use the &lt;code&gt;debug_and_release&lt;/code&gt; option (which is the default under Windows), the project will be processed three times: one time to produce a &quot;meta&quot; Makefile, and two more times to produce a Makefile.Debug and a Makefile.Release.</source>
          <target state="translated">あなたが使用する場合 &lt;code&gt;debug_and_release&lt;/code&gt; の Makefile.DebugとMakefile.Releaseを生成するために、「メタ」Makefileを生成するために1時間、そしてさらに2回：（Windowsではデフォルト）オプションは、プロジェクトは3回処理されます。</target>
        </trans-unit>
        <trans-unit id="60d4ef933d47b492272cf35cd6a80f96f67accbc" translate="yes" xml:space="preserve">
          <source>When you want a list or tree, you typically create an empty &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; and use &lt;a href=&quot;qstandarditemmodel#appendRow&quot;&gt;appendRow&lt;/a&gt;() to add items to the model, and &lt;a href=&quot;qstandarditemmodel#item&quot;&gt;item&lt;/a&gt;() to access an item. If your model represents a table, you typically pass the dimensions of the table to the &lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt; constructor and use &lt;a href=&quot;qstandarditemmodel#setItem&quot;&gt;setItem&lt;/a&gt;() to position items into the table. You can also use &lt;a href=&quot;qstandarditemmodel#setRowCount&quot;&gt;setRowCount&lt;/a&gt;() and &lt;a href=&quot;qstandarditemmodel#setColumnCount&quot;&gt;setColumnCount&lt;/a&gt;() to alter the dimensions of the model. To insert items, use &lt;a href=&quot;qstandarditemmodel#insertRow&quot;&gt;insertRow&lt;/a&gt;() or &lt;a href=&quot;qstandarditemmodel#insertColumn&quot;&gt;insertColumn&lt;/a&gt;(), and to remove items, use &lt;a href=&quot;qabstractitemmodel#removeRow&quot;&gt;removeRow&lt;/a&gt;() or &lt;a href=&quot;qabstractitemmodel#removeColumn&quot;&gt;removeColumn&lt;/a&gt;().</source>
          <target state="translated">リストまたはツリーが必要な場合、通常は空の&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt;を作成し、&lt;a href=&quot;qstandarditemmodel#appendRow&quot;&gt;appendRow&lt;/a&gt;（）を使用してモデルにアイテムを追加し、&lt;a href=&quot;qstandarditemmodel#item&quot;&gt;item&lt;/a&gt;（）を使用してアイテムにアクセスします。モデルがテーブルを表す場合、通常はテーブルのディメンションを&lt;a href=&quot;qstandarditemmodel&quot;&gt;QStandardItemModel&lt;/a&gt;コンストラクターに渡し、&lt;a href=&quot;qstandarditemmodel#setItem&quot;&gt;setItem&lt;/a&gt;（）を使用してアイテムをテーブルに配置します。&lt;a href=&quot;qstandarditemmodel#setRowCount&quot;&gt;setRowCount&lt;/a&gt;（）および&lt;a href=&quot;qstandarditemmodel#setColumnCount&quot;&gt;setColumnCount&lt;/a&gt;（）を使用して、モデルの次元を変更することもできます。アイテムを挿入するには、&lt;a href=&quot;qstandarditemmodel#insertRow&quot;&gt;insertRow&lt;/a&gt;（）または&lt;a href=&quot;qstandarditemmodel#insertColumn&quot;&gt;insertColumn&lt;/a&gt;（）を使用し、アイテムを削除するには、&lt;a href=&quot;qabstractitemmodel#removeRow&quot;&gt;removeRow&lt;/a&gt;（）または&lt;a href=&quot;qabstractitemmodel#removeColumn&quot;&gt;removeColumn&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="4be51d41f9dcd2a63e9244eac2472e02cc98fe35" translate="yes" xml:space="preserve">
          <source>When you want a list or tree, you typically create an empty QStandardItemModel and use &lt;a href=&quot;qstandarditemmodel#appendRow&quot;&gt;appendRow&lt;/a&gt;() to add items to the model, and &lt;a href=&quot;qstandarditemmodel#item&quot;&gt;item&lt;/a&gt;() to access an item. If your model represents a table, you typically pass the dimensions of the table to the QStandardItemModel constructor and use &lt;a href=&quot;qstandarditemmodel#setItem&quot;&gt;setItem&lt;/a&gt;() to position items into the table. You can also use &lt;a href=&quot;qstandarditemmodel#setRowCount&quot;&gt;setRowCount&lt;/a&gt;() and &lt;a href=&quot;qstandarditemmodel#setColumnCount&quot;&gt;setColumnCount&lt;/a&gt;() to alter the dimensions of the model. To insert items, use &lt;a href=&quot;qstandarditemmodel#insertRow&quot;&gt;insertRow&lt;/a&gt;() or &lt;a href=&quot;qstandarditemmodel#insertColumn&quot;&gt;insertColumn&lt;/a&gt;(), and to remove items, use &lt;a href=&quot;qabstractitemmodel#removeRow&quot;&gt;removeRow&lt;/a&gt;() or &lt;a href=&quot;qabstractitemmodel#removeColumn&quot;&gt;removeColumn&lt;/a&gt;().</source>
          <target state="translated">リストまたはツリーが必要な場合は、通常、空のQStandardItemModelを作成し、&lt;a href=&quot;qstandarditemmodel#appendRow&quot;&gt;appendRow&lt;/a&gt;（）を使用してモデルにアイテムを追加し、&lt;a href=&quot;qstandarditemmodel#item&quot;&gt;item&lt;/a&gt;（）を使用してアイテムにアクセスします。モデルがテーブルを表す場合は、通常、テーブルのディメンションをQStandardItemModelコンストラクターに渡し、&lt;a href=&quot;qstandarditemmodel#setItem&quot;&gt;setItem&lt;/a&gt;（）を使用してアイテムをテーブルに配置します。&lt;a href=&quot;qstandarditemmodel#setRowCount&quot;&gt;setRowCount&lt;/a&gt;（）および&lt;a href=&quot;qstandarditemmodel#setColumnCount&quot;&gt;setColumnCount&lt;/a&gt;（）を使用して、モデルの次元を変更することもできます。アイテムを挿入するには、&lt;a href=&quot;qstandarditemmodel#insertRow&quot;&gt;insertRow&lt;/a&gt;（）または&lt;a href=&quot;qstandarditemmodel#insertColumn&quot;&gt;insertColumn&lt;/a&gt;（）を使用し、アイテムを削除するには、&lt;a href=&quot;qabstractitemmodel#removeRow&quot;&gt;removeRow&lt;/a&gt;（）または&lt;a href=&quot;qabstractitemmodel#removeColumn&quot;&gt;removeColumn&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="7170217aec4e1498546cac59074468c5f11f708f" translate="yes" xml:space="preserve">
          <source>When you want to run a parameterized &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; from your Qt application, you will need to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;bind variables&lt;/a&gt; in your program to $name variables in your &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;.</source>
          <target state="translated">Qtアプリケーションからパラメーター化された&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;を実行&lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;する場合&lt;/a&gt;は、プログラム内の変数を&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;内の$ name変数にバインドする必要があります。</target>
        </trans-unit>
        <trans-unit id="2584a7ed7c056364ed2d913bf3cd8afc1f83ee3b" translate="yes" xml:space="preserve">
          <source>When you want to run a parameterized XQuery from your Qt application, you will need to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;bind variables&lt;/a&gt; in your program to $name variables in your XQuery.</source>
          <target state="translated">Qtアプリケーションからパラメーター化されたXQueryを実行&lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;する場合&lt;/a&gt;、プログラムの変数をXQueryの$ name変数にバインドする必要があります。</target>
        </trans-unit>
        <trans-unit id="78943cac7e531af0096129c5e938f47ed5b0b259" translate="yes" xml:space="preserve">
          <source>When you write your own text input controls, use &lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt;. In some languages (e.g. Arabic or languages from the Indian subcontinent), the width and shape of a glyph changes depending on the surrounding characters, which &lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt; takes into account. Writing input controls usually requires a certain knowledge of the scripts it is going to be used in. Usually the easiest way is to subclass &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; or &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;.</source>
          <target state="translated">独自のテキスト入力コントロールを作成する場合は、&lt;a href=&quot;qtextlayout&quot;&gt;QTextLayoutを&lt;/a&gt;使用してください。一部の言語（アラビア語やインド亜大陸の言語など）では、グリフの幅と形状は、&lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt;で考慮される周囲の文字によって異なります。入力コントロールを作成するには、通常、それを使用するスクリプトについてある程度の知識が必要です。通常、最も簡単な方法は、&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;または&lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt;をサブクラス化することです。</target>
        </trans-unit>
        <trans-unit id="0fcbb31161cb56fe5288b022cf20ee3adfe4a05b" translate="yes" xml:space="preserve">
          <source>When you're finished changing a record, you should always call &lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;QSqlTableModel::submitAll&lt;/a&gt;() to ensure that the changes are written to the database.</source>
          <target state="translated">レコードの変更が完了したら、常に&lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;QSqlTableModel :: submitAll&lt;/a&gt;（）を呼び出して、変更がデータベースに確実に書き込まれるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="a73269c31e4068b1b206c35bf9e9ab6195ba01df" translate="yes" xml:space="preserve">
          <source>When you're reviewing a change, you can adapt this workflow to check that the change does indeed come with a test for a problem it does fix.</source>
          <target state="translated">変更を見直しているときは、このワークフローを適用して、変更が修正された問題のテストが実際に行われていることを確認することができます。</target>
        </trans-unit>
        <trans-unit id="c483778adddb3d8e4d84a4e99e535203121a7d52" translate="yes" xml:space="preserve">
          <source>When your ActiveX server can also run as a stand-alone application, run the server executable with the &lt;code&gt;-regserver&lt;/code&gt; command line parameter after installing the executable on the target system. After that the controls provided by the server will be available to ActiveX clients.</source>
          <target state="translated">ActiveXサーバーがスタンドアロンアプリケーションとしても実行できる場合は、ターゲットシステムに実行可能ファイルをインストールした後、 &lt;code&gt;-regserver&lt;/code&gt; コマンドラインパラメーターを使用してサーバー実行可能ファイルを実行します。その後、サーバーによって提供されるコントロールがActiveXクライアントで使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="14bd0a3d9cc58e093620fbe1426775b51697ae9b" translate="yes" xml:space="preserve">
          <source>When your ActiveX server is part of an installation package, use the &lt;code&gt;regsvr32&lt;/code&gt; tool provided by Microsoft to register the controls on the target system. If this tool is not present, load the DLL into your installer process, resolve the &lt;code&gt;DllRegisterServer&lt;/code&gt; symbol and call the function:</source>
          <target state="translated">ActiveXサーバーがインストールパッケージの一部である場合は、Microsoftが提供する &lt;code&gt;regsvr32&lt;/code&gt; ツールを使用して、ターゲットシステムにコントロールを登録します。このツールが存在しない場合は、DLLをインストーラープロセスにロードし、 &lt;code&gt;DllRegisterServer&lt;/code&gt; シンボルを解決して、関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="65dc96c99575af20d0c9102011208535a2e1118f" translate="yes" xml:space="preserve">
          <source>When your application loads a QML or JavaScript file for the first time, the QML engine compiles the file into a byte code representation on the fly and runs it. The compiling process can be time consuming, and subsequent loads of the same document yield the same result. To optimize this step, the QML engine can cache the result. It stores the byte code in a cache file and later loads the cache file instead of re-compiling when the same file is requested again. Usually the files are stored in a subdirectory &lt;code&gt;qmlcache&lt;/code&gt; of the system's cache directory, as denoted by &lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths::CacheLocation&lt;/a&gt;. Checks are in place to make sure that the cache files are only loaded if all of the following conditions are met:</source>
          <target state="translated">アプリケーションがQMLまたはJavaScriptファイルを初めてロードするとき、QMLエンジンはファイルをその場でバイトコード表現にコンパイルして実行します。コンパイルプロセスには時間がかかる可能性があり、同じドキュメントを後でロードすると同じ結果が得られます。このステップを最適化するために、QMLエンジンは結果をキャッシュできます。バイトコードをキャッシュファイルに保存し、同じファイルが再度要求されたときに再コンパイルする代わりに、後でキャッシュファイルをロードします。通常、ファイルは、&lt;a href=&quot;qstandardpaths#StandardLocation-enum&quot;&gt;QStandardPaths :: CacheLocationで&lt;/a&gt;示されるように、システムのキャッシュディレクトリのサブディレクトリ &lt;code&gt;qmlcache&lt;/code&gt; に保存されます。次のすべての条件が満たされた場合にのみキャッシュファイルがロードされることを確認するためのチェックが行われます。</target>
        </trans-unit>
        <trans-unit id="ccc533c9390848ea4b2a56fc523e5772f7a9f05a" translate="yes" xml:space="preserve">
          <source>When your model has a consistent silhouette, you can apply an opacity map that makes the outer edge of the geometry transparent. Using a gradient for the opacity will let the edge of the object smoothly disappear. However, even if your opacity map transitions directly from fully-opaque to fully-transparent over the space of one pixel, the result will still provide anti-aliased edges as seen in the example above. This is because image maps, including opacity maps, use bilinear interpolation.</source>
          <target state="translated">モデルに一貫したシルエットがある場合、ジオメトリの外縁を透明にする不透明度マップを適用することができます。不透明度にグラデーションを使用すると、オブジェクトのエッジが滑らかに消えます。しかし、不透明度マップが 1 ピクセルの空間で完全不透明から完全透明に直接遷移したとしても、結果は上の例のようにアンチエイリアス処理されたエッジを提供します。これは不透明度マップを含むイメージマップが双線形補間を使っているからです。</target>
        </trans-unit>
        <trans-unit id="027ec3bc4d20f0e86797e47980aa9a9475deabbe" translate="yes" xml:space="preserve">
          <source>Whenever `processTextMessage()` is triggered, we retrieve the sender, and if valid, send back the original message (`sendTextMessage()`). The same is done with binary messages.</source>
          <target state="translated">processTextMessage()`がトリガされるたびに、送信者を取得し、有効であれば元のメッセージを送り返します(`sendTextMessage()`)。バイナリメッセージでも同じことが行われます。</target>
        </trans-unit>
        <trans-unit id="3cd3563583d0b4557a8fb5a3af277b71d7d4fa6f" translate="yes" xml:space="preserve">
          <source>Whenever a &lt;a href=&quot;qml-qtquick-controls-checkbox&quot;&gt;CheckBox&lt;/a&gt; is clicked, it emits the &lt;a href=&quot;qml-qtquick-controls-checkbox#clicked-signal&quot;&gt;clicked()&lt;/a&gt; signal.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-checkbox&quot;&gt;CheckBox&lt;/a&gt;がクリックされるたびに、それは&lt;a href=&quot;qml-qtquick-controls-checkbox#clicked-signal&quot;&gt;clicked（）&lt;/a&gt;シグナルを発行します。</target>
        </trans-unit>
        <trans-unit id="b506669184758650a5512c38b3282045fabaae85" translate="yes" xml:space="preserve">
          <source>Whenever a CheckBox is clicked, it emits the &lt;a href=&quot;qml-qtquick-controls-checkbox#clicked-signal&quot;&gt;clicked()&lt;/a&gt; signal.</source>
          <target state="translated">チェックボックスがクリックされるたびに、clicked &lt;a href=&quot;qml-qtquick-controls-checkbox#clicked-signal&quot;&gt;（）&lt;/a&gt;シグナルが発行されます。</target>
        </trans-unit>
        <trans-unit id="53a69c8a1f964bb9777baba93c7827da52f72065" translate="yes" xml:space="preserve">
          <source>Whenever a button is switched on or off, it emits the &lt;a href=&quot;qabstractbutton#toggled&quot;&gt;toggled&lt;/a&gt;() signal. Connect to this signal if you want to trigger an action each time the button changes state. Use &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;() to see if a particular button is selected.</source>
          <target state="translated">ボタンがオンまたはオフに切り替えられると、&lt;a href=&quot;qabstractbutton#toggled&quot;&gt;トグル&lt;/a&gt;（）信号が送信されます。ボタンの状態が変化するたびにアクションをトリガーする場合は、この信号に接続します。&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;（）を使用して、特定のボタンが選択されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="98df15d5cd2ca206ae0b777515f1789f82058d70" translate="yes" xml:space="preserve">
          <source>Whenever a checkbox is checked or cleared, it emits the signal &lt;a href=&quot;qcheckbox#stateChanged&quot;&gt;stateChanged&lt;/a&gt;(). Connect to this signal if you want to trigger an action each time the checkbox changes state. You can use &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;() to query whether or not a checkbox is checked.</source>
          <target state="translated">チェックボックスがチェックまたはクリアされているときはいつでも、シグナル&lt;a href=&quot;qcheckbox#stateChanged&quot;&gt;stateChanged&lt;/a&gt;（）を発行します。チェックボックスの状態が変わるたびにアクションをトリガーする場合は、この信号に接続します。&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;（）を使用して、チェックボックスがチェックされているかどうかを照会できます。</target>
        </trans-unit>
        <trans-unit id="622050ab0f3753e8f422b1fec5fa59fed4693f03" translate="yes" xml:space="preserve">
          <source>Whenever a help event occurs, this function is called with the</source>
          <target state="translated">ヘルプイベントが発生するたびに、この関数は</target>
        </trans-unit>
        <trans-unit id="695fe6b59174187c21971601195bbbdc7ae00fac" translate="yes" xml:space="preserve">
          <source>Whenever a message is received, we write it out.</source>
          <target state="translated">メッセージが届いたら、必ず書き出します。</target>
        </trans-unit>
        <trans-unit id="90fe0cc17049ffdb58a0f22d6b9f296fcdc96921" translate="yes" xml:space="preserve">
          <source>Whenever a new frame is available in the movie, &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; will emit &lt;a href=&quot;qmovie#updated&quot;&gt;updated&lt;/a&gt;(). If the size of the frame changes, &lt;a href=&quot;qmovie#resized&quot;&gt;resized&lt;/a&gt;() is emitted. You can call &lt;a href=&quot;qmovie#currentImage&quot;&gt;currentImage&lt;/a&gt;() or &lt;a href=&quot;qmovie#currentPixmap&quot;&gt;currentPixmap&lt;/a&gt;() to get a copy of the current frame. When the movie is done, &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; emits &lt;a href=&quot;qmovie#finished&quot;&gt;finished&lt;/a&gt;(). If any error occurs during playback (i.e, the image file is corrupt), &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; will emit &lt;a href=&quot;qmovie#error&quot;&gt;error&lt;/a&gt;().</source>
          <target state="translated">ムービーで新しいフレームが利用可能になると、&lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;は&lt;a href=&quot;qmovie#updated&quot;&gt;更新された&lt;/a&gt;（）を発行します。フレームのサイズが変更されると、&lt;a href=&quot;qmovie#resized&quot;&gt;サイズ変更された&lt;/a&gt;（）が発行されます。&lt;a href=&quot;qmovie#currentImage&quot;&gt;currentImage&lt;/a&gt;（）または&lt;a href=&quot;qmovie#currentPixmap&quot;&gt;currentPixmap&lt;/a&gt;（）を呼び出して、現在のフレームのコピーを取得できます。ムービーが&lt;a href=&quot;qmovie#finished&quot;&gt;終了&lt;/a&gt;すると、&lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;はfinished（）を発行します。再生中にエラーが発生した場合（つまり、画像ファイルが破損している場合）、&lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;は&lt;a href=&quot;qmovie#error&quot;&gt;エラーを出力します&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="dea4145ce4f75997826b07037b31828f8852e594" translate="yes" xml:space="preserve">
          <source>Whenever a new frame is available in the movie, QMovie will emit &lt;a href=&quot;qmovie#updated&quot;&gt;updated&lt;/a&gt;(). If the size of the frame changes, &lt;a href=&quot;qmovie#resized&quot;&gt;resized&lt;/a&gt;() is emitted. You can call &lt;a href=&quot;qmovie#currentImage&quot;&gt;currentImage&lt;/a&gt;() or &lt;a href=&quot;qmovie#currentPixmap&quot;&gt;currentPixmap&lt;/a&gt;() to get a copy of the current frame. When the movie is done, QMovie emits &lt;a href=&quot;qmovie#finished&quot;&gt;finished&lt;/a&gt;(). If any error occurs during playback (i.e, the image file is corrupt), QMovie will emit &lt;a href=&quot;qmovie#error&quot;&gt;error&lt;/a&gt;().</source>
          <target state="translated">ムービーで新しいフレームが使用可能になるたびに、QMovieは&lt;a href=&quot;qmovie#updated&quot;&gt;更新された&lt;/a&gt;（）を発行します。フレームのサイズが変わると、&lt;a href=&quot;qmovie#resized&quot;&gt;resizeed&lt;/a&gt;（）が出ます。&lt;a href=&quot;qmovie#currentImage&quot;&gt;currentImage&lt;/a&gt;（）または&lt;a href=&quot;qmovie#currentPixmap&quot;&gt;currentPixmap&lt;/a&gt;（）を呼び出して、現在のフレームのコピーを取得できます。ムービーが完了すると、QMovieは&lt;a href=&quot;qmovie#finished&quot;&gt;finished&lt;/a&gt;（）を発行します。再生中にエラーが発生した場合（つまり、画像ファイルが破損している場合）、QMovieは&lt;a href=&quot;qmovie#error&quot;&gt;エラー&lt;/a&gt;（）を発行します。</target>
        </trans-unit>
        <trans-unit id="ce06d5f1ff8e225d1adc268c9cdd8c9e9dc54f82" translate="yes" xml:space="preserve">
          <source>Whenever a socket is disconnected, we remove it from the clients list and delete the socket. Note: it is best to use `deleteLater()` to delete the socket.</source>
          <target state="translated">ソケットが切断されるたびに、クライアントリストからソケットを削除する。注意:ソケットを削除するには `deleteLater()` を使うのがベストである。</target>
        </trans-unit>
        <trans-unit id="73df17f4d1de1623ad4e92d56228608091517aaf" translate="yes" xml:space="preserve">
          <source>Whenever a widget loses focus, the widget's current value is set to the item model.</source>
          <target state="translated">ウィジェットがフォーカスを失うたびに、ウィジェットの現在値がアイテムモデルに設定されます。</target>
        </trans-unit>
        <trans-unit id="aeeb8caf9d0b96887fbffb95f418d29cecb00031" translate="yes" xml:space="preserve">
          <source>Whenever an item is added to the above view, all items beneath the new item are displaced, causing them to move down (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the new item that has been added to the view; to animate the added items, set the &lt;a href=&quot;qml-qtquick-gridview#add-signal&quot;&gt;add&lt;/a&gt; property.</source>
          <target state="translated">アイテムが上記のビューに追加されると、新しいアイテムの下にあるすべてのアイテムが移動し、ビュー内でアイテムが下方向（水平方向の場合は横）に移動します。この変位が発生すると、ビュー内の新しいx、y位置へのアイテムの移動は、指定された&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;ように&lt;/a&gt;、1秒間、NumberAnimationによってアニメーション化されます。この遷移は、ビューに追加された新しいアイテムには適用されません。追加されたアイテムをアニメーション化するには、&lt;a href=&quot;qml-qtquick-gridview#add-signal&quot;&gt;add&lt;/a&gt;プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="78d2be573356e883c161ace1948bad51ebd33c75" translate="yes" xml:space="preserve">
          <source>Whenever an item is added to the above view, all items beneath the new item are displaced, causing them to move down (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the new item that has been added to the view; to animate the added items, set the &lt;a href=&quot;qml-qtquick-listview#add-signal&quot;&gt;add&lt;/a&gt; property.</source>
          <target state="translated">アイテムが上記のビューに追加されると、新しいアイテムの下にあるすべてのアイテムが移動し、ビュー内でアイテムが下方向（水平方向の場合は横）に移動します。この変位が発生すると、ビュー内の新しいx、y位置へのアイテムの移動は、指定された&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;ように&lt;/a&gt;、1秒間、NumberAnimationによってアニメーション化されます。この遷移は、ビューに追加された新しいアイテムには適用されません。追加されたアイテムをアニメーション化するには、&lt;a href=&quot;qml-qtquick-listview#add-signal&quot;&gt;add&lt;/a&gt;プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="a92651cada4705e95a6599aa36b9830bb5133d4d" translate="yes" xml:space="preserve">
          <source>Whenever an item is added to the above view, the item will be animated from the position (100,100) to its final x,y position within the view, over one second. The transition only applies to the new items that are added to the view; it does not apply to the items below that are displaced by the addition of the new items. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-gridview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">アイテムが上のビューに追加されるときはいつでも、アイテムは位置（100,100）からビュー内の最終的なx、y位置まで1秒以上アニメーション化されます。遷移は、ビューに追加された新しいアイテムにのみ適用されます。新しいアイテムの追加によって置き換えられる以下のアイテムには適用されません。ずれの項目をアニメーション化するには、設定され&lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;ずれ&lt;/a&gt;や&lt;a href=&quot;qml-qtquick-gridview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;プロパティを。</target>
        </trans-unit>
        <trans-unit id="fedd4c064ea3bd87026e3e226e4cb864f52ee584" translate="yes" xml:space="preserve">
          <source>Whenever an item is added to the above view, the item will be animated from the position (100,100) to its final x,y position within the view, over one second. The transition only applies to the new items that are added to the view; it does not apply to the items below that are displaced by the addition of the new items. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-listview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">アイテムが上のビューに追加されるときはいつでも、アイテムは位置（100,100）からビュー内の最終的なx、y位置まで1秒以上アニメーション化されます。遷移は、ビューに追加された新しいアイテムにのみ適用されます。新しいアイテムの追加によって置き換えられる以下のアイテムには適用されません。ずれの項目をアニメーション化するには、設定され&lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;ずれ&lt;/a&gt;や&lt;a href=&quot;qml-qtquick-listview#addDisplaced-prop&quot;&gt;addDisplaced&lt;/a&gt;プロパティを。</target>
        </trans-unit>
        <trans-unit id="9ee2054577a98ab0392d1b4d7970f9f828507766" translate="yes" xml:space="preserve">
          <source>Whenever an item is removed from the above view, all items beneath it are displaced, causing them to move upwards (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the item that has actually been removed from the view; to animate the removed items, set the &lt;a href=&quot;qml-qtquick-gridview#remove-signal&quot;&gt;remove&lt;/a&gt; property.</source>
          <target state="translated">アイテムが上のビューから削除されると、その下にあるすべてのアイテムが移動し、ビュー内で上方向（または横向きの場合は横）に移動します。この変位が発生すると、ビュー内の新しいx、y位置へのアイテムの移動は、指定された&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;ように&lt;/a&gt;、1秒間、NumberAnimationによってアニメーション化されます。この遷移は、実際にビューから削除されたアイテムには適用されません。削除されたアイテムをアニメーション化するには、&lt;a href=&quot;qml-qtquick-gridview#remove-signal&quot;&gt;remove&lt;/a&gt;プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="cdeea51a30e773755896b273b1df58c42cfa78ae" translate="yes" xml:space="preserve">
          <source>Whenever an item is removed from the above view, all items beneath it are displaced, causing them to move upwards (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the item that has actually been removed from the view; to animate the removed items, set the &lt;a href=&quot;qml-qtquick-listview#remove-signal&quot;&gt;remove&lt;/a&gt; property.</source>
          <target state="translated">アイテムが上のビューから削除されると、その下にあるすべてのアイテムが移動し、ビュー内で上方向（または横向きの場合は横）に移動します。この変位が発生すると、ビュー内の新しいx、y位置へのアイテムの移動は、指定された&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;ように&lt;/a&gt;、1秒間、NumberAnimationによってアニメーション化されます。この遷移は、実際にビューから削除されたアイテムには適用されません。削除されたアイテムをアニメーション化するには、&lt;a href=&quot;qml-qtquick-listview#remove-signal&quot;&gt;remove&lt;/a&gt;プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="67676ecbc12193a248e3d1903f192afb7d8ef887" translate="yes" xml:space="preserve">
          <source>Whenever an item is removed from the above view, the item will be animated to the position (100,100) over one second, and in parallel will also change its opacity to 0. The transition only applies to the items that are removed from the view; it does not apply to the items below them that are displaced by the removal of the items. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-gridview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">アイテムが上記のビューから削除されるたびに、アイテムは1秒にわたって位置（100,100）にアニメーション化され、並行して不透明度も0に変更されます。遷移は、ビューから削除されたアイテムにのみ適用されます。アイテムの削除によって移動されたアイテムの下にあるアイテムには適用されません。ずれの項目をアニメーション化するには、設定され&lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;ずれ&lt;/a&gt;や&lt;a href=&quot;qml-qtquick-gridview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt;プロパティを。</target>
        </trans-unit>
        <trans-unit id="2afd00d420f68d960660023e82ce1e61cc08329e" translate="yes" xml:space="preserve">
          <source>Whenever an item is removed from the above view, the item will be animated to the position (100,100) over one second, and in parallel will also change its opacity to 0. The transition only applies to the items that are removed from the view; it does not apply to the items below them that are displaced by the removal of the items. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-listview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">アイテムが上記のビューから削除されるたびに、アイテムは1秒にわたって位置（100,100）にアニメーション化され、並行して不透明度も0に変更されます。遷移は、ビューから削除されたアイテムにのみ適用されます。アイテムの削除によって移動されたアイテムの下にあるアイテムには適用されません。ずれの項目をアニメーション化するには、設定され&lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;ずれ&lt;/a&gt;や&lt;a href=&quot;qml-qtquick-listview#removeDisplaced-prop&quot;&gt;removeDisplaced&lt;/a&gt;プロパティを。</target>
        </trans-unit>
        <trans-unit id="cfc98cc90a563ec8a39f14335a650018c11cc6a6" translate="yes" xml:space="preserve">
          <source>Whenever an object has a property of type URL (&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;), assigning a string to that property will actually assign an absolute URL - by resolving the string against the URL of the document where the string is used.</source>
          <target state="translated">オブジェクトにタイプURL（&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;）のプロパティがある場合、そのプロパティに文字列を割り当てると、実際には、文字列が使用されているドキュメントのURLに対して文字列を解決することにより、絶対URLが割り当てられます。</target>
        </trans-unit>
        <trans-unit id="40cd1e35d67f7694a72feed5daaea2235bf6410d" translate="yes" xml:space="preserve">
          <source>Whenever making decisions regarding memory allocation or performance trade-offs, it is important to keep in mind the impact of CPU-cache performance, operating system paging, and JavaScript engine garbage collection. Potential solutions should be benchmarked carefully in order to ensure that the best one is selected.</source>
          <target state="translated">メモリ割り当てやパフォーマンスのトレードオフを決定する際には、CPUキャッシュのパフォーマンス、オペレーティングシステムのページング、JavaScriptエンジンのガーベッジコレクションの影響を念頭に置くことが重要です。最適なソリューションを確実に選択するために、潜在的なソリューションは慎重にベンチマークを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="6a3c3d9411e762b86fd3a5863bcca1bdd7dc8c51" translate="yes" xml:space="preserve">
          <source>Whenever possible, use the</source>
          <target state="translated">可能な限り</target>
        </trans-unit>
        <trans-unit id="b69002a47278bca07bf9cc0356566ca80fcfbcc1" translate="yes" xml:space="preserve">
          <source>Whenever re-applying data obtained with QUrl::FullyDecoded into a &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;, care must be taken to use the &lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;QUrl::DecodedMode&lt;/a&gt; parameter to the setters (like &lt;a href=&quot;qurl#setPath&quot;&gt;setPath&lt;/a&gt;() and &lt;a href=&quot;qurl#setUserName&quot;&gt;setUserName&lt;/a&gt;()). Failure to do so may cause re-interpretation of the percent character ('%') as the beginning of a percent-encoded sequence.</source>
          <target state="translated">QUrlで得られた再適用するデータは::にFullyDecodedたび&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;、注意が使用するように注意する必要があります&lt;a href=&quot;qurl#ParsingMode-enum&quot;&gt;QUrl :: DecodedModeの&lt;/a&gt;セッター（のようにパラメータを&lt;a href=&quot;qurl#setPath&quot;&gt;SETPATH&lt;/a&gt;（）と&lt;a href=&quot;qurl#setUserName&quot;&gt;setUserName&lt;/a&gt;（））。そうしないと、パーセント文字（ '％'）がパーセントエンコードされたシーケンスの始まりとして再解釈される可能性があります。</target>
        </trans-unit>
        <trans-unit id="7197f3cbde6d24213802f4f813e9afce6114c878" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;a href=&quot;qml-qtquick-gridview#model-prop&quot;&gt;model&lt;/a&gt; performs a move operation to move a particular set of indexes, the items between the source and destination indexes of the move operation are displaced, causing them to move upwards or downwards (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the items that are the actual subjects of the move operation; to animate the moved items, set the &lt;a href=&quot;qml-qtquick-gridview#move-prop&quot;&gt;move&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-gridview#model-prop&quot;&gt;モデル&lt;/a&gt;が特定のインデックスセットを移動する移動操作を実行するたびに、移動操作のソースインデックスと宛先インデックス間のアイテムが移動し、ビュー内で上または下（または横向きの場合は横）に移動します。この変位が発生すると、ビュー内の新しいx、y位置へのアイテムの移動は、指定された&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;ように&lt;/a&gt;、1秒間、NumberAnimationによってアニメーション化されます。この遷移は、移動操作の実際の対象であるアイテムには適用されません。移動したアイテムをアニメーション化するには、&lt;a href=&quot;qml-qtquick-gridview#move-prop&quot;&gt;move&lt;/a&gt;プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="4eafa499c61ca66b47ae5a64ffa25154048cdb36" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;a href=&quot;qml-qtquick-gridview#model-prop&quot;&gt;model&lt;/a&gt; performs a move operation to move a particular set of indexes, the respective items in the view will be animated to their new positions in the view over one second. The transition only applies to the items that are the subject of the move operation in the model; it does not apply to items below them that are displaced by the move operation. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-gridview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-gridview#model-prop&quot;&gt;モデル&lt;/a&gt;がインデックスの特定のセットを移動する移動操作を実行するときはいつでも、ビュー内のそれぞれのアイテムは、ビュー内の新しい位置に1秒間アニメーション化されます。遷移は、モデルの移動操作の対象であるアイテムにのみ適用されます。移動操作によって移動されるそれらの下にあるアイテムには適用されません。ずれの項目をアニメーション化するには、設定され&lt;a href=&quot;qml-qtquick-gridview#displaced-prop&quot;&gt;ずれ&lt;/a&gt;や&lt;a href=&quot;qml-qtquick-gridview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt;プロパティを。</target>
        </trans-unit>
        <trans-unit id="c1337f1735bc8b49ad5d3a854d08f4521666286f" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;a href=&quot;qml-qtquick-listview#model-prop&quot;&gt;model&lt;/a&gt; performs a move operation to move a particular set of indexes, the items between the source and destination indexes of the move operation are displaced, causing them to move upwards or downwards (or sideways, if horizontally orientated) within the view. As this displacement occurs, the items' movement to their new x,y positions within the view will be animated by a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; over one second, as specified. This transition is not applied to the items that are the actual subjects of the move operation; to animate the moved items, set the &lt;a href=&quot;qml-qtquick-listview#move-prop&quot;&gt;move&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-listview#model-prop&quot;&gt;モデル&lt;/a&gt;が特定のインデックスセットを移動する移動操作を実行するたびに、移動操作のソースインデックスと宛先インデックス間のアイテムが移動し、ビュー内で上または下（または横向きの場合は横）に移動します。この変位が発生すると、ビュー内の新しいx、y位置へのアイテムの移動は、指定された&lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;ように&lt;/a&gt;、1秒間、NumberAnimationによってアニメーション化されます。この遷移は、移動操作の実際の対象であるアイテムには適用されません。移動したアイテムをアニメーション化するには、&lt;a href=&quot;qml-qtquick-listview#move-prop&quot;&gt;move&lt;/a&gt;プロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="ae168b2b3b3e8491daed829e8981a3546f712af4" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;a href=&quot;qml-qtquick-listview#model-prop&quot;&gt;model&lt;/a&gt; performs a move operation to move a particular set of indexes, the respective items in the view will be animated to their new positions in the view over one second. The transition only applies to the items that are the subject of the move operation in the model; it does not apply to items below them that are displaced by the move operation. To animate the displaced items, set the &lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;displaced&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-listview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt; properties.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-listview#model-prop&quot;&gt;モデル&lt;/a&gt;がインデックスの特定のセットを移動する移動操作を実行するときはいつでも、ビュー内のそれぞれのアイテムは、ビュー内の新しい位置に1秒間アニメーション化されます。遷移は、モデルの移動操作の対象であるアイテムにのみ適用されます。移動操作によって移動されるそれらの下にあるアイテムには適用されません。ずれの項目をアニメーション化するには、設定され&lt;a href=&quot;qml-qtquick-listview#displaced-prop&quot;&gt;ずれ&lt;/a&gt;や&lt;a href=&quot;qml-qtquick-listview#moveDisplaced-prop&quot;&gt;moveDisplaced&lt;/a&gt;プロパティを。</target>
        </trans-unit>
        <trans-unit id="312d51cc1df09e3da5c1a58d9d776f953d5789e4" translate="yes" xml:space="preserve">
          <source>Whenever the &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt;'s &lt;code&gt;tapped&lt;/code&gt; signal is emitted, the &lt;code&gt;send&lt;/code&gt; signal will automatically be emitted as well.</source>
          <target state="translated">たび&lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt;の &lt;code&gt;tapped&lt;/code&gt; 信号が放出され、 &lt;code&gt;send&lt;/code&gt; 信号が自動的にうまくとして放出されます。</target>
        </trans-unit>
        <trans-unit id="9576aa0bc72ea121c51b19950d20787edffca2bb" translate="yes" xml:space="preserve">
          <source>Whenever the current widget in the layout changes or a widget is removed from the layout, the &lt;a href=&quot;qstackedlayout#currentChanged&quot;&gt;currentChanged&lt;/a&gt;() and &lt;a href=&quot;qstackedlayout#widgetRemoved&quot;&gt;widgetRemoved&lt;/a&gt;() signals are emitted respectively.</source>
          <target state="translated">レイアウト内の現在のウィジェットが変更またはウィジェットは、レイアウトから削除されるたび&lt;a href=&quot;qstackedlayout#currentChanged&quot;&gt;currentChanged&lt;/a&gt;（）と&lt;a href=&quot;qstackedlayout#widgetRemoved&quot;&gt;widgetRemoved&lt;/a&gt;（）信号がそれぞれ放出されます。</target>
        </trans-unit>
        <trans-unit id="2fcf7292f793de5fb0c3b7f25d1338a1fbc959c5" translate="yes" xml:space="preserve">
          <source>Whenever the current widget in the stacked widget changes or a widget is removed from the stacked widget, the &lt;a href=&quot;qstackedwidget#currentChanged&quot;&gt;currentChanged&lt;/a&gt;() and &lt;a href=&quot;qstackedwidget#widgetRemoved&quot;&gt;widgetRemoved&lt;/a&gt;() signals are emitted respectively.</source>
          <target state="translated">積み重ねられたウィジェットの変更で現在のウィジェットまたはウィジェットは、ウィジェット積層から除去されるたびに&lt;a href=&quot;qstackedwidget#currentChanged&quot;&gt;currentChanged&lt;/a&gt;（）と&lt;a href=&quot;qstackedwidget#widgetRemoved&quot;&gt;widgetRemoved&lt;/a&gt;（）信号がそれぞれ放出されます。</target>
        </trans-unit>
        <trans-unit id="1c80e7b5c4fae4e99cfb0927909f6c46e4768a09" translate="yes" xml:space="preserve">
          <source>Whenever the height of the parent rectangle changes, the height of the blue rectangle automatically updates to be of the same value.</source>
          <target state="translated">親矩形の高さが変わるたびに、青の矩形の高さは自動的に同じ値に更新されます。</target>
        </trans-unit>
        <trans-unit id="6af29bff3595f2471deb90ce61a0ea67813b87c4" translate="yes" xml:space="preserve">
          <source>Whenever the stack returns to this state through the use of undo/redo commands, it emits the signal &lt;a href=&quot;qundostack#cleanChanged&quot;&gt;cleanChanged&lt;/a&gt;(). This signal is also emitted when the stack leaves the clean state.</source>
          <target state="translated">スタックが元に戻す/やり直しコマンドを使用してこの状態に戻るたびに、シグナル&lt;a href=&quot;qundostack#cleanChanged&quot;&gt;cleanChanged&lt;/a&gt;（）が発行されます。この信号は、スタックがクリーン状態を離れたときにも発生します。</target>
        </trans-unit>
        <trans-unit id="1e1b23a9100f3611f6cf8c3c148eab441d5bca9d" translate="yes" xml:space="preserve">
          <source>Where &quot;example&quot; is the identifier to use to uniquely identify this set of tests. Finally, add &lt;code&gt;CONFIG += qmltestcase&lt;/code&gt; to the project file:</source>
          <target state="translated">「example」は、この一連のテストを一意に識別するために使用する識別子です。最後に、 &lt;code&gt;CONFIG += qmltestcase&lt;/code&gt; をプロジェクトファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="9e105a40b89e83cd14ee624f6364465c2e91af73" translate="yes" xml:space="preserve">
          <source>Where &amp;lt;arch&amp;gt; can take a value of: &lt;code&gt;arm&lt;/code&gt;, &lt;code&gt;arm64&lt;/code&gt;, &lt;code&gt;x86&lt;/code&gt;, &lt;code&gt;x86_64&lt;/code&gt;.</source>
          <target state="translated">&amp;lt;arch&amp;gt;は、 &lt;code&gt;arm&lt;/code&gt; 、 &lt;code&gt;arm64&lt;/code&gt; 、 &lt;code&gt;x86&lt;/code&gt; 、 &lt;code&gt;x86_64&lt;/code&gt; の値を取ることができます。</target>
        </trans-unit>
        <trans-unit id="4e60e5656f07f947fa3b6795e9084ca0fb310950" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;port_number&amp;gt;&lt;/code&gt; refers to a local network port. The web developer tools can then be accessed by launching a browser at the address &lt;code&gt;http://localhost:&amp;lt;port_number&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">ここで、 &lt;code&gt;&amp;lt;port_number&amp;gt;&lt;/code&gt; はローカルネットワークポートを指します。その後、アドレス &lt;code&gt;http://localhost:&amp;lt;port_number&amp;gt;&lt;/code&gt; でブラウザーを起動して、Web開発者ツールにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="1ccb20ef56eb59f145da42f8c73e2d50a4d5c84e" translate="yes" xml:space="preserve">
          <source>Where Java and C++ are</source>
          <target state="translated">JavaとC++があるところ</target>
        </trans-unit>
        <trans-unit id="a4126a2b85566e3cc6be9c07a1704ba767059ac6" translate="yes" xml:space="preserve">
          <source>Where a traditional 2D API, such as &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, Cairo or &lt;a href=&quot;qml-qtquick-context2d&quot;&gt;Context2D&lt;/a&gt;, is written to handle thousands of individual draw calls per frame, OpenGL is a pure hardware API and performs best when the number of draw calls is very low and state changes are kept to a minimum. Consider the following use case:</source>
          <target state="translated">以下のような従来の2D API、どこ&lt;a href=&quot;qpainter&quot;&gt;QPainterの&lt;/a&gt;、カイロや&lt;a href=&quot;qml-qtquick-context2d&quot;&gt;Context2Dは&lt;/a&gt;、フレームごとに個別の描画呼び出しのハンドル数千人に書かれている描画呼び出しの数が非常に低く、状態変化がに保たれている最高のとき、OpenGLは、純粋なハードウェアのAPIと行います最小。次の使用例を検討してください。</target>
        </trans-unit>
        <trans-unit id="bd67edc7c5b1892b7a13306768dc165ddac00d26" translate="yes" xml:space="preserve">
          <source>Where applicable (Vulkan, Direct3D), enables the graphics API implementation's debug and/or validation layers, if available.</source>
          <target state="translated">該当する場合(Vulkan、Direct3D)、グラフィックスAPI実装のデバッグおよび/または検証レイヤーが利用可能であれば、それを有効にします。</target>
        </trans-unit>
        <trans-unit id="c0801f30b2ef37ca11d8e39aebcc01052b29ae10" translate="yes" xml:space="preserve">
          <source>Where possible, use programmatic means, such as verifying properties of objects and variables, instead of capturing and comparing bitmaps.</source>
          <target state="translated">可能であれば、ビットマップをキャプチャして比較するのではなく、オブジェクトや変数のプロパティを検証するなど、プログラム上の手段を使用してください。</target>
        </trans-unit>
        <trans-unit id="d1c4c915ffa0d273da9dcbd143eb982e3969434e" translate="yes" xml:space="preserve">
          <source>Where rotation around an axis is used, the rotation shall be expressed as a Right Hand rotation.</source>
          <target state="translated">軸を中心とした回転を使用する場合は、右回転で表現する。</target>
        </trans-unit>
        <trans-unit id="952ee39a9cfff990fc53dd4027e5610fab89057e" translate="yes" xml:space="preserve">
          <source>Where the &lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; and &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; API requires a bit of boilerplate code to create a functioning material, the &lt;a href=&quot;qsgsimplematerialshader&quot;&gt;QSGSimpleMaterialShader&lt;/a&gt; tries to hide some of this through the use of templates.</source>
          <target state="translated">どこ&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt;と&lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; APIが機能材料を作成するために、定型的なコードのビットを必要とし、&lt;a href=&quot;qsgsimplematerialshader&quot;&gt;QSGSimpleMaterialShaderは&lt;/a&gt;、テンプレートを使用してこの一部を隠そうとします。</target>
        </trans-unit>
        <trans-unit id="8fdf085fc05f049a1769f3683bf038d0dfa4f7f4" translate="yes" xml:space="preserve">
          <source>Where the &lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt; and &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; API requires a bit of boilerplate code to create a functioning material, the QSGSimpleMaterialShader tries to hide some of this through the use of templates.</source>
          <target state="translated">&lt;a href=&quot;qsgmaterial&quot;&gt;QSGMaterial&lt;/a&gt;および&lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShaderAPI&lt;/a&gt;が機能するマテリアルを作成するために少しの定型コードを必要とする場合、QSGSimpleMaterialShaderはテンプレートを使用してこれの一部を隠そうとします。</target>
        </trans-unit>
        <trans-unit id="ff4b3d1492ec67a940dc896fa1d87c9ba99f2fdd" translate="yes" xml:space="preserve">
          <source>Where the time zone display names have changed over time then the most recent names will be used.</source>
          <target state="translated">タイムゾーンの表示名が時間の経過とともに変更されている場合は、最新の表示名が使用されます。</target>
        </trans-unit>
        <trans-unit id="b8883f0096050f1e4dd29bf9f7b6190b35e33b6d" translate="yes" xml:space="preserve">
          <source>Where to Go from Here</source>
          <target state="translated">ここからどこへ行くか</target>
        </trans-unit>
        <trans-unit id="52d06efbef6698a9090cd765a2d437e704a1a5e2" translate="yes" xml:space="preserve">
          <source>Where with &lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt; you would write:</source>
          <target state="translated">&lt;a href=&quot;qdbusreply&quot;&gt;QDBusReplyで&lt;/a&gt;どこに書くか：</target>
        </trans-unit>
        <trans-unit id="7e741bc3dcef0123eeda11543758853be2aac149" translate="yes" xml:space="preserve">
          <source>Where:</source>
          <target state="translated">Where:</target>
        </trans-unit>
        <trans-unit id="f4092a9df66ba8f2af73c5f2492f8269ffdc70eb" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimator&lt;/a&gt; gets its animation data from a single animation clip, &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt; can blend together multiple clips. The animation data is obtained by evaluating a so called</source>
          <target state="translated">一方&lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimatorは、&lt;/a&gt;単一のアニメーションクリップからのアニメーションデータを取得し、&lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimatorは&lt;/a&gt;一緒に複数のクリップをブレンドすることができます。アニメーションデータは、いわゆる評価によって取得されます。</target>
        </trans-unit>
        <trans-unit id="129aad2c02bf5a9a4dd80cc4832a2669b5535e5f" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimator&lt;/a&gt; gets its animation data from a single animation clip, BlendedClipAnimator can blend together multiple clips. The animation data is obtained by evaluating a so called</source>
          <target state="translated">一方&lt;a href=&quot;qml-qt3d-animation-clipanimator&quot;&gt;ClipAnimatorは、&lt;/a&gt;単一のアニメーションクリップからのアニメーションデータを取得し、BlendedClipAnimatorは一緒に複数のクリップをブレンドすることができます。アニメーションデータは、いわゆる</target>
        </trans-unit>
        <trans-unit id="804bb2445f1402ea00ca4b54f378df57627e0205" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;a href=&quot;qt3danimation-qclipanimator&quot;&gt;QClipAnimator&lt;/a&gt; gets its animation data from a single animation clip, &lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator&lt;/a&gt; can blend together multiple clips. The animation data is obtained by evaluating a so called</source>
          <target state="translated">一方&lt;a href=&quot;qt3danimation-qclipanimator&quot;&gt;QClipAnimatorは、&lt;/a&gt;単一のアニメーションクリップからのアニメーションデータを取得し、&lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimatorは&lt;/a&gt;一緒に複数のクリップをブレンドすることができます。アニメーションデータは、いわゆる評価によって取得されます。</target>
        </trans-unit>
        <trans-unit id="846f3e0882dcf22331fd8436d7896ee93de9c4e3" translate="yes" xml:space="preserve">
          <source>Whereas a &lt;a href=&quot;qt3danimation-qclipanimator&quot;&gt;QClipAnimator&lt;/a&gt; gets its animation data from a single animation clip, QBlendedClipAnimator can blend together multiple clips. The animation data is obtained by evaluating a so called</source>
          <target state="translated">一方&lt;a href=&quot;qt3danimation-qclipanimator&quot;&gt;QClipAnimatorは、&lt;/a&gt;単一のアニメーションクリップからのアニメーションデータを取得し、QBlendedClipAnimatorは一緒に複数のクリップをブレンドすることができます。アニメーションデータは、いわゆる</target>
        </trans-unit>
        <trans-unit id="9e1667965fb72ff02c0f89f70ccdb72aa593f105" translate="yes" xml:space="preserve">
          <source>Whereas a traditional 2D API, such as &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, Cairo or &lt;a href=&quot;qml-qtquick-context2d&quot;&gt;Context2D&lt;/a&gt;, is written to handle thousands of individual draw calls per frame, OpenGL and other hardware accelerated APIs perform best when the number of draw calls is very low and state changes are kept to a minimum.</source>
          <target state="translated">などの従来の2D API、一方&lt;a href=&quot;qpainter&quot;&gt;QPainterの&lt;/a&gt;カイロや&lt;a href=&quot;qml-qtquick-context2d&quot;&gt;Context2D&lt;/a&gt;、フレーム当たりの個々の描画呼び出しのハンドル数千に書き込まれ、OpenGLとその他のハードウェアは、描画呼び出しの数が非常に低く、状態変化をAに保持されているときは、APIの最良実行加速しました最小。</target>
        </trans-unit>
        <trans-unit id="df6677fe4ed41b6de2a02f43a28dc5ef92063aba" translate="yes" xml:space="preserve">
          <source>Wherever your program uses a string literal (quoted text) that will be presented to the user, ensure that it is processed by the &lt;a href=&quot;qcoreapplication#translate&quot;&gt;QCoreApplication::translate&lt;/a&gt;() function. Essentially all that is necessary to achieve this is to use the &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt; function to obtain translated text for your classes, typically for display purposes. This function is also used to indicate which text strings in an application are translatable.</source>
          <target state="translated">プログラムがユーザーに表示される文字列リテラル（引用テキスト）を使用する場合は&lt;a href=&quot;qcoreapplication#translate&quot;&gt;常に&lt;/a&gt;、それがQCoreApplication :: translate（）関数によって処理されることを確認してください。基本的に、これを実現するために必要なことは、&lt;a href=&quot;qobject#tr&quot;&gt;tr（）&lt;/a&gt;関数を使用して、通常は表示目的で、クラスの翻訳済みテキストを取得することです。この関数は、アプリケーション内のどのテキスト文字列が翻訳可能かを示すためにも使用されます。</target>
        </trans-unit>
        <trans-unit id="9a2b119e0e1b94041afad99d2082aedabe60692d" translate="yes" xml:space="preserve">
          <source>Whether &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; paints alternating row colors for the area that does not have any items.</source>
          <target state="translated">&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;がアイテムのない領域の交互の行の色を描画するかどうか。</target>
        </trans-unit>
        <trans-unit id="7479afd99480f623a47cad8dc7dc8c35d62ddf02" translate="yes" xml:space="preserve">
          <source>Whether a tab bar should suggest a size to prevent scoll arrows.</source>
          <target state="translated">スコール矢印を防ぐために、タブバーにサイズを指定するかどうか。</target>
        </trans-unit>
        <trans-unit id="27d2672fc5a7413ecd5e7f19492a53aff397d05c" translate="yes" xml:space="preserve">
          <source>Whether and how the background image is repeated to fill the &lt;code&gt;background-origin&lt;/code&gt; rectangle.</source>
          <target state="translated">背景画像を繰り返して、 &lt;code&gt;background-origin&lt;/code&gt; 四角形を塗りつぶすかどうか。</target>
        </trans-unit>
        <trans-unit id="f522af9862a1abe54c91f2811e719d24e11b59a8" translate="yes" xml:space="preserve">
          <source>Whether anything will be available for reading from the returned object is protocol dependent. For HTTP, the server may send a small HTML page indicating the upload was successful (or not). Other protocols will probably have content in their replies.</source>
          <target state="translated">返されたオブジェクトから何かを読み取れるかどうかはプロトコルに依存します。HTTP の場合、サーバはアップロードが成功したかどうかを示す小さな HTML ページを送信するかもしれません。その他のプロトコルの場合は、おそらく返信にコンテンツが含まれているでしょう。</target>
        </trans-unit>
        <trans-unit id="a6fc5303526351baac559d5b0c024e2b8b1e467d" translate="yes" xml:space="preserve">
          <source>Whether clipping is enabled or not is dirty and needs to be updated.</source>
          <target state="translated">クリッピングが有効かどうかはダーティなので更新が必要です。</target>
        </trans-unit>
        <trans-unit id="891d6c71b96dc92f38e7de49fa32354e43d7aa65" translate="yes" xml:space="preserve">
          <source>Whether cursor should blink when text is selected.</source>
          <target state="translated">テキストが選択されているときにカーソルを点滅させるかどうか。</target>
        </trans-unit>
        <trans-unit id="f536d64fe87af77f3302f5448b26e34a3608e7e7" translate="yes" xml:space="preserve">
          <source>Whether it's a 32- or 64-bit application. Possible values are: &quot;llp64&quot; (Windows 64-bit), &quot;lp64&quot; (Unix 64-bit), &quot;ilp32&quot; (32-bit)</source>
          <target state="translated">32 ビットまたは 64 ビットのアプリケーションかどうかを指定します。可能な値は以下の通りです。&quot;llp64&quot; (Windows 64-bit),&quot;lp64&quot; (Unix 64-bit),&quot;ilp32&quot; (32-bit)</target>
        </trans-unit>
        <trans-unit id="88159a3d977ef502f02f2a123d6990749dcb7c82" translate="yes" xml:space="preserve">
          <source>Whether more than one filename can be selected.</source>
          <target state="translated">複数のファイル名を選択できるかどうか。</target>
        </trans-unit>
        <trans-unit id="351fd14608eef6c08e17ef09a05f49229c55a5dc" translate="yes" xml:space="preserve">
          <source>Whether numbers are localized.</source>
          <target state="translated">数字がローカライズされているかどうか。</target>
        </trans-unit>
        <trans-unit id="fdd3579e60a02aac738192bea12695a023ba77d5" translate="yes" xml:space="preserve">
          <source>Whether offsets specified using &lt;a href=&quot;#left-prop&quot;&gt;left&lt;/a&gt;, &lt;a href=&quot;#right-prop&quot;&gt;right&lt;/a&gt;, &lt;a href=&quot;#top-prop&quot;&gt;top&lt;/a&gt;, and &lt;a href=&quot;#bottom-prop&quot;&gt;bottom&lt;/a&gt; are relative or absolute coordinates.</source>
          <target state="translated">&lt;a href=&quot;#left-prop&quot;&gt;left&lt;/a&gt;、&lt;a href=&quot;#right-prop&quot;&gt;right&lt;/a&gt;、&lt;a href=&quot;#top-prop&quot;&gt;top&lt;/a&gt;、および&lt;a href=&quot;#bottom-prop&quot;&gt;bottom&lt;/a&gt;を使用して指定されたオフセットが相対座標か絶対座標か。</target>
        </trans-unit>
        <trans-unit id="3af21ab04403fdec385f370eafd737a810bb7461" translate="yes" xml:space="preserve">
          <source>Whether offsets specified using &lt;a href=&quot;stylesheet-reference#left-prop&quot;&gt;left&lt;/a&gt;, &lt;a href=&quot;stylesheet-reference#right-prop&quot;&gt;right&lt;/a&gt;, &lt;a href=&quot;stylesheet-reference#top-prop&quot;&gt;top&lt;/a&gt;, and &lt;a href=&quot;stylesheet-reference#bottom-prop&quot;&gt;bottom&lt;/a&gt; are relative or absolute coordinates.</source>
          <target state="translated">&lt;a href=&quot;stylesheet-reference#left-prop&quot;&gt;left&lt;/a&gt;、&lt;a href=&quot;stylesheet-reference#right-prop&quot;&gt;right&lt;/a&gt;、&lt;a href=&quot;stylesheet-reference#top-prop&quot;&gt;top&lt;/a&gt;、&lt;a href=&quot;stylesheet-reference#bottom-prop&quot;&gt;bottom&lt;/a&gt;を使用して指定されたオフセットが相対座標か絶対座標か。</target>
        </trans-unit>
        <trans-unit id="615c9e373bf582bda486791fb038c25503b09240" translate="yes" xml:space="preserve">
          <source>Whether only existing files or directories can be selected.</source>
          <target state="translated">既存のファイルまたはディレクトリのみを選択できるかどうか。</target>
        </trans-unit>
        <trans-unit id="0fc0e926e626973c36cb23fef10be34740429705" translate="yes" xml:space="preserve">
          <source>Whether or not a scroll bar has a context menu.</source>
          <target state="translated">スクロールバーにコンテキストメニューがあるかどうか。</target>
        </trans-unit>
        <trans-unit id="e975490d1d1d8e036dbd88951f98d62fa4a9e421" translate="yes" xml:space="preserve">
          <source>Whether or not an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; has active focus can be queried through the &lt;code&gt;Item::activeFocus&lt;/code&gt; property. For example, here we have a &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; type whose text is determined by whether or not it has active focus.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-item&quot;&gt;アイテム&lt;/a&gt;にアクティブフォーカスがあるかどうかは、 &lt;code&gt;Item::activeFocus&lt;/code&gt; プロパティを介して照会できます。たとえば、ここには、アクティブなフォーカスがあるかどうかによってテキストが決定される&lt;a href=&quot;qml-qtquick-text&quot;&gt;テキスト&lt;/a&gt;型があります。</target>
        </trans-unit>
        <trans-unit id="3ef85e6b7ba3ab7e4c00b4ec7423e9327a00a361" translate="yes" xml:space="preserve">
          <source>Whether or not end points are drawn when the pen width is 0 or 1 depends on the cap style. Using &lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt::SquareCap&lt;/a&gt; or &lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt::RoundCap&lt;/a&gt; they are drawn, using &lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qt::FlatCap&lt;/a&gt; they are not drawn.</source>
          <target state="translated">ペンの幅が0または1のときに端点が描画されるかどうかは、キャップスタイルによって異なります。使用して&lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qtの:: SquareCap&lt;/a&gt;や&lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qtの:: RoundCapを&lt;/a&gt;彼らが使用して、描かれている&lt;a href=&quot;qt#PenCapStyle-enum&quot;&gt;Qtの:: FlatCapを&lt;/a&gt;彼らが描かれていません。</target>
        </trans-unit>
        <trans-unit id="0fdef606fa391f439f4e94770a38e210051c3a1a" translate="yes" xml:space="preserve">
          <source>Whether or not the cache should be in-memory only. Valid values are &lt;b&gt;true&lt;/b&gt; and &lt;b&gt;false&lt;/b&gt;. The default value is &lt;b&gt;false&lt;/b&gt;. When set to &lt;b&gt;true&lt;/b&gt;, the disk cache is never created. The ambient cache will work in-memory, but the offline database cannot be used with this option enabled.</source>
          <target state="translated">キャッシュをメモリ内のみにするかどうか。有効な値は&lt;b&gt;true&lt;/b&gt;および&lt;b&gt;false&lt;/b&gt;です。デフォルト値は&lt;b&gt;false&lt;/b&gt;です。&lt;b&gt;true&lt;/b&gt;に設定すると、ディスクキャッシュは作成されません。アンビエントキャッシュはメモリ内で機能しますが、このオプションを有効にするとオフラインデータベースを使用できません。</target>
        </trans-unit>
        <trans-unit id="e4800f01cf3f03c22bd30261d92d64c5bd92d1e7" translate="yes" xml:space="preserve">
          <source>Whether or not to request high dpi tiles. Valid values are &lt;b&gt;true&lt;/b&gt; and &lt;b&gt;false&lt;/b&gt;. The default value is &lt;b&gt;false&lt;/b&gt;.</source>
          <target state="translated">高dpiタイルを要求するかどうか。有効な値は&lt;b&gt;true&lt;/b&gt;および&lt;b&gt;false&lt;/b&gt;です。デフォルト値は&lt;b&gt;false&lt;/b&gt;です。</target>
        </trans-unit>
        <trans-unit id="fa6c99ad4b900578d7248fa09d22485bed6fda3e" translate="yes" xml:space="preserve">
          <source>Whether or not to request high dpi tiles. Valid values are &lt;b&gt;true&lt;/b&gt; and &lt;b&gt;false&lt;/b&gt;. The default value is &lt;b&gt;false&lt;/b&gt;. Please note that not all map types are available in high dpi. Setting this parameter to true might even have no effect if no map type is available in high dpi at the moment. Provider information files for high dpi tiles are named &lt;code&gt;street-hires&lt;/code&gt;, &lt;code&gt;satellite-hires&lt;/code&gt;, &lt;code&gt;cycle-hires&lt;/code&gt;, &lt;code&gt;transit-hires&lt;/code&gt;, &lt;code&gt;night-transit-hires&lt;/code&gt;, &lt;code&gt;terrain-hires&lt;/code&gt; and &lt;code&gt;hiking-hires&lt;/code&gt;. These are fetched from the same location used for the low dpi counterparts.</source>
          <target state="translated">高dpiタイルを要求するかどうか。有効な値は&lt;b&gt;true&lt;/b&gt;および&lt;b&gt;false&lt;/b&gt;です。デフォルト値は&lt;b&gt;false&lt;/b&gt;です。すべてのマップタイプが高dpiで利用できるわけではないことに注意してください。このパラメーターをtrueに設定しても、現時点で高dpiで使用できるマップタイプがない場合は効果がない場合もあります。高dpiタイルのプロバイダー情報ファイルに &lt;code&gt;street-hires&lt;/code&gt; 、street-hires、 &lt;code&gt;satellite-hires&lt;/code&gt; 、 &lt;code&gt;cycle-hires&lt;/code&gt; 、 &lt;code&gt;transit-hires&lt;/code&gt; 、 &lt;code&gt;night-transit-hires&lt;/code&gt; 、 &lt;code&gt;terrain-hires&lt;/code&gt; および &lt;code&gt;hiking-hires&lt;/code&gt; という名前が付けられています。これらは、低dpiの対応物と同じ場所からフェッチされます。</target>
        </trans-unit>
        <trans-unit id="1f50d751bdd0ca1e8cc3139cd93bda59afb6866e" translate="yes" xml:space="preserve">
          <source>Whether or not to reverse the direction of property change if QQuickPointerScrollEvent::inverted is true. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">QQuickPointerScrollEvent :: invertedがtrueの場合に、プロパティ変更の方向を逆にするかどうか。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="14ccd186c3ee461482c7326fa36c9623c2a63da2" translate="yes" xml:space="preserve">
          <source>Whether popup menus must support scrolling.</source>
          <target state="translated">ポップアップメニューがスクロールをサポートしなければならないかどうか。</target>
        </trans-unit>
        <trans-unit id="c355998709d5a91ea161e2e9efbdc94bd8c86622" translate="yes" xml:space="preserve">
          <source>Whether popup menus must support the user moving the mouse cursor to a submenu while crossing other items of the menu. This is supported on most modern desktop platforms.</source>
          <target state="translated">ポップアップメニューは、ユーザーがメニューの他の項目を横断しながらサブメニューにマウスカーソルを移動することをサポートしなければならないかどうか。これは、ほとんどの最新のデスクトップ・プラットフォームでサポートされています。</target>
        </trans-unit>
        <trans-unit id="7bfd520185d930289c35d432ad81bff039435224" translate="yes" xml:space="preserve">
          <source>Whether popups should allow the selections to wrap, that is when selection should the next item be the first item.</source>
          <target state="translated">ポップアップで選択範囲をラップさせるかどうか、つまり次の項目を最初の項目とする場合に選択範囲をラップさせるかどうか。</target>
        </trans-unit>
        <trans-unit id="9a3d16ff05060262b6fe37cd15bdb7b02685468d" translate="yes" xml:space="preserve">
          <source>Whether reverse order is used for the markers in the legend. This property is &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">凡例のマーカーに逆順を使用するかどうか。このプロパティはデフォルトでは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5ff6b09ef26c0c42bd41a6e8d723830a76216c42" translate="yes" xml:space="preserve">
          <source>Whether richtext selections should extend to the full width of the document.</source>
          <target state="translated">リヒテキス ト の選択範囲を文書の幅いっぱいまで広げるかどうか。</target>
        </trans-unit>
        <trans-unit id="5d92844548ddcee7f47f82c0d52f0d492b6551db" translate="yes" xml:space="preserve">
          <source>Whether scrolling popups should fill the screen as they are scrolled.</source>
          <target state="translated">スクロールしているポップアップがスクロールしているときに画面を埋めるかどうか。</target>
        </trans-unit>
        <trans-unit id="b7e9ec658e8e6fbee4a20e58cb2317e5a2859441" translate="yes" xml:space="preserve">
          <source>Whether scrollviews draw their frame only around contents (like Motif), or around contents, scroll bars and corner widgets (like Windows).</source>
          <target state="translated">スクロールビューは、コンテンツの周りだけ(Motif のように)フレームを描くのか、コンテンツ、スクロールバー、コーナーウィジェット(Windows のように)の周りだけを描くのか。</target>
        </trans-unit>
        <trans-unit id="008cc77dc296fe4b1f921abb283c4b2c99c1dfbd" translate="yes" xml:space="preserve">
          <source>Whether shortcuts are underlined.</source>
          <target state="translated">ショートカットに下線が引かれているかどうか。</target>
        </trans-unit>
        <trans-unit id="f31f23419bacc3b9dd9493977a9ee560f48b4e25" translate="yes" xml:space="preserve">
          <source>Whether spacing is absolute or relative to bar thickness.</source>
          <target state="translated">間隔が絶対的なものか、棒の太さに対する相対的なものか。</target>
        </trans-unit>
        <trans-unit id="14ccdf486541f6d046b78ebc3c46ca84f28aef3f" translate="yes" xml:space="preserve">
          <source>Whether text entered by the user will overwrite existing text.</source>
          <target state="translated">ユーザーが入力したテキストが既存のテキストを上書きするかどうか。</target>
        </trans-unit>
        <trans-unit id="44ed9a68ce96302bd93afa75be5a913dc9974e1f" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qmake-variable-reference#target&quot;&gt;target&lt;/a&gt; should automatically be repositioned in such a way that it is transformed around the mouse cursor position while the &lt;a href=&quot;qml-qtquick-wheelhandler#property-prop&quot;&gt;property&lt;/a&gt; is adjusted. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-wheelhandler#property-prop&quot;&gt;プロパティ&lt;/a&gt;が調整されている間、&lt;a href=&quot;qmake-variable-reference#target&quot;&gt;ターゲット&lt;/a&gt;がマウスカーソル位置を中心に変換されるように、ターゲットを自動的に再配置する必要があるかどうか。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="127d2d6dad872f802d502a5787fa664c518d7d37" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt; should gain active focus on a mouse press. By default this is set to true.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;がマウスプレスでアクティブフォーカスを取得するかどうか。デフォルトでは、これはtrueに設定されています。</target>
        </trans-unit>
        <trans-unit id="8e664258644cf6fce609f74537c27de9ea32e9ed" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt; should keep the selection visible when it loses active focus to another item in the scene. By default this is set to false.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;がシーン内の別のアイテムへのアクティブなフォーカスを失ったときに、選択を表示したままにするかどうか。デフォルトではfalseに設定されています。</target>
        </trans-unit>
        <trans-unit id="02b30757d1bfc1211e2b3c3bfa3a4b027191d826" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; should gain active focus on a mouse press. By default this is set to true.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;がマウスプレスでアクティブフォーカスを取得するかどうか。デフォルトでは、これはtrueに設定されています。</target>
        </trans-unit>
        <trans-unit id="442e7401e06ac4bd53d35ebfcd0514393c01617d" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; should keep its selection when it loses active focus to another item in the scene. By default this is set to false;</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;がシーン内の別のアイテムへのアクティブなフォーカスを失ったときに、その選択を維持するかどうか。デフォルトでは、これはfalseに設定されています。</target>
        </trans-unit>
        <trans-unit id="2d56da9754f2d55c0bf314485e7193fadc26d78b" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; should scroll when the text is longer than the width. By default this is set to true.</source>
          <target state="translated">テキストが幅より長いときに&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;をスクロールするかどうか。デフォルトでは、これはtrueに設定されています。</target>
        </trans-unit>
        <trans-unit id="b84569d2c058a1d40c8935ffb676582eb4339696" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; paints alternating row colors for the empty area (i.e the area where there are no items)</source>
          <target state="translated">&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;が空の領域（つまり、アイテムがない領域）に交互の行の色を描画するかどうか</target>
        </trans-unit>
        <trans-unit id="15885eff30424361e27c06e3896534c4ffea6121" translate="yes" xml:space="preserve">
          <source>Whether the action is enabled, and can be triggered. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">アクションが有効で、トリガーできるかどうか。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3b63603a16b0a875dd05ed6eac90f935bb37e855" translate="yes" xml:space="preserve">
          <source>Whether the affected particles have their existing position/velocity/acceleration added to the new one.</source>
          <target state="translated">影響を受けた粒子の既存の位置/速度/加速度が新しいものに追加されているかどうか。</target>
        </trans-unit>
        <trans-unit id="b51f81c2e2c5eb6252b205609801f5564200de49" translate="yes" xml:space="preserve">
          <source>Whether the animation is played backwards after it finishes. This is an easy way to create circular animations.</source>
          <target state="translated">アニメーションが終了した後に逆再生されるかどうか。これで簡単に円形のアニメーションを作ることができます。</target>
        </trans-unit>
        <trans-unit id="5999480ac2251870246c63b5ba009ded8d924ae6" translate="yes" xml:space="preserve">
          <source>Whether the background drop shadow effect is enabled.</source>
          <target state="translated">背景ドロップシャドウ効果を有効にしているかどうか。</target>
        </trans-unit>
        <trans-unit id="8830a5c00be149d6708cd3d5520bd56902a70ed9" translate="yes" xml:space="preserve">
          <source>Whether the button has active focus.</source>
          <target state="translated">ボタンにアクティブフォーカスがあるかどうか。</target>
        </trans-unit>
        <trans-unit id="d39bb8df504512eda2056344d9c178981fb5fc7e" translate="yes" xml:space="preserve">
          <source>Whether the button is hovered.</source>
          <target state="translated">ボタンがホバリングされているかどうか。</target>
        </trans-unit>
        <trans-unit id="06019445aa3ae5cd4bf1f60ed6011fccfc4f6ab5" translate="yes" xml:space="preserve">
          <source>Whether the button is pressed.</source>
          <target state="translated">ボタンが押されているかどうか。</target>
        </trans-unit>
        <trans-unit id="f36941b4851bd2c3920b4ff750fc4cc2ea2af042" translate="yes" xml:space="preserve">
          <source>Whether the buttons in a &lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogButtonBox&lt;/a&gt; show icons</source>
          <target state="translated">&lt;a href=&quot;qdialogbuttonbox&quot;&gt;QDialogBu​​ttonBox&lt;/a&gt;のボタンがアイコンを表示するかどうか</target>
        </trans-unit>
        <trans-unit id="0445017d5d0d51a6a257d1970e1a509763b6ed2d" translate="yes" xml:space="preserve">
          <source>Whether the certificate is only self-signed.</source>
          <target state="translated">証明書が自己署名のみであるかどうか。</target>
        </trans-unit>
        <trans-unit id="63e8eeda8f01dcbef8512ab31c579994488aba62" translate="yes" xml:space="preserve">
          <source>Whether the data points are visible and should be drawn.</source>
          <target state="translated">データポイントが見えているかどうか、描くべきかどうか。</target>
        </trans-unit>
        <trans-unit id="40b49f5eb966eb2a50a803b79429e9d47ed678fd" translate="yes" xml:space="preserve">
          <source>Whether the database is capable of reporting the size of a query. Note that some databases do not support returning the size (i.e. number of rows returned) of a query, in which case &lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery::size&lt;/a&gt;() will return -1.</source>
          <target state="translated">データベースがクエリのサイズをレポートできるかどうか。一部のデータベースはクエリのサイズ（つまり、返される行数）を返すことをサポートしていないことに注意してください。その場合、&lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery :: size&lt;/a&gt;（）は-1を返します。</target>
        </trans-unit>
        <trans-unit id="21c37b0f1a2eb0a2c3d7635acf315d721ff4cb14" translate="yes" xml:space="preserve">
          <source>Whether the default or static mode is used for rendering optimization.</source>
          <target state="translated">レンダリングの最適化にデフォルトモードを使用するか、スタティックモードを使用するか。</target>
        </trans-unit>
        <trans-unit id="be688207dd50b674f91323550645b69bc6dd0334" translate="yes" xml:space="preserve">
          <source>Whether the delegate represents today</source>
          <target state="translated">代議員が今日を代表するかどうか</target>
        </trans-unit>
        <trans-unit id="3a8755b16bb8d183f894885ca5c5dee9425d78f1" translate="yes" xml:space="preserve">
          <source>Whether the dialog should be shown modal with respect to the window containing the dialog's parent Item, modal with respect to the whole application, or non-modal.</source>
          <target state="translated">ダイアログの親項目を含むウィンドウに対してモーダルに表示するか、アプリケーション全体に対してモーダルに表示するか、それとも非モーダルに表示するか。</target>
        </trans-unit>
        <trans-unit id="adf54c46f7d89665f69a6765399db289b890d5de" translate="yes" xml:space="preserve">
          <source>Whether the dialog will provide a means of changing the opacity.</source>
          <target state="translated">ダイアログが不透明度を変更する手段を提供するかどうか。</target>
        </trans-unit>
        <trans-unit id="81a0e45f8611929993879c1cfe29a62cf62d6198" translate="yes" xml:space="preserve">
          <source>Whether the dialog will show monospaced fonts or not.</source>
          <target state="translated">ダイアログで等幅フォントを表示するかどうか。</target>
        </trans-unit>
        <trans-unit id="5056ef7166f692cfde907604b07cee9df549b43e" translate="yes" xml:space="preserve">
          <source>Whether the dialog will show non scalable fonts or not.</source>
          <target state="translated">ダイアログにスケーラブルでないフォントを表示するかどうか。</target>
        </trans-unit>
        <trans-unit id="bdc8e11957087489dc414aada8890efc5cf613cc" translate="yes" xml:space="preserve">
          <source>Whether the dialog will show proportional fonts or not.</source>
          <target state="translated">ダイアログにプロポーショナルフォントを表示するかどうか。</target>
        </trans-unit>
        <trans-unit id="cf59371c1a2ab75dd88122e67ecd4d968653945f" translate="yes" xml:space="preserve">
          <source>Whether the dialog will show scalable fonts or not.</source>
          <target state="translated">ダイアログにスケーラブルフォントを表示するかどうか。</target>
        </trans-unit>
        <trans-unit id="a8096a1b98e7942757eb338dc4ac310987e368de" translate="yes" xml:space="preserve">
          <source>Whether the driver allows cancelling a running query.</source>
          <target state="translated">ドライバが実行中のクエリのキャンセルを許可しているかどうか。</target>
        </trans-unit>
        <trans-unit id="bad7dffba90736fb616a6a5b7d5ad2c46ea8a969" translate="yes" xml:space="preserve">
          <source>Whether the driver allows fetching numerical values with low precision.</source>
          <target state="translated">ドライバが数値を低精度で取得できるかどうか。</target>
        </trans-unit>
        <trans-unit id="3c7f787b2f9cd46ea9f39398ae0c7d4485ca5fc8" translate="yes" xml:space="preserve">
          <source>Whether the driver can access multiple result sets returned from batched statements or stored procedures.</source>
          <target state="translated">ドライバが、バッチ文またはストアドプロシージャから返された複数の結果セットにアクセスできるかどうか。</target>
        </trans-unit>
        <trans-unit id="ed4bc20d5aa787a8e008253aa117335c9aa08d81" translate="yes" xml:space="preserve">
          <source>Whether the driver can do any low-level resource cleanup when &lt;a href=&quot;qsqlquery#finish&quot;&gt;QSqlQuery::finish&lt;/a&gt;() is called.</source>
          <target state="translated">&lt;a href=&quot;qsqlquery#finish&quot;&gt;QSqlQuery :: finish&lt;/a&gt;（）が呼び出されたときに、ドライバーが低レベルのリソースのクリーンアップを実行できるかどうか。</target>
        </trans-unit>
        <trans-unit id="210464c5de5626efc42d1df157c9de9e9c7d0158" translate="yes" xml:space="preserve">
          <source>Whether the driver disallows a write lock on a table while other queries have a read lock on it.</source>
          <target state="translated">他のクエリがテーブルに読み取りロックをかけている間に、ドライバがテーブルへの書き込みロックを禁止するかどうか。</target>
        </trans-unit>
        <trans-unit id="4e4f69b95b47bd4f3d99879fb2bd280a082c0786" translate="yes" xml:space="preserve">
          <source>Whether the driver supports Binary Large Object fields.</source>
          <target state="translated">ドライバがバイナリラージオブジェクトフィールドをサポートしているかどうか。</target>
        </trans-unit>
        <trans-unit id="1bd1162a270f0edcfe194947159af7188cd907e5" translate="yes" xml:space="preserve">
          <source>Whether the driver supports SQL transactions.</source>
          <target state="translated">ドライバが SQL トランザクションをサポートしているかどうか。</target>
        </trans-unit>
        <trans-unit id="845a4430bcc8fbfbbff1ac48b77c4dd33f0996d9" translate="yes" xml:space="preserve">
          <source>Whether the driver supports Unicode strings if the database server does.</source>
          <target state="translated">データベースサーバがUnicode文字列をサポートしている場合、ドライバがUnicode文字列をサポートしているかどうか。</target>
        </trans-unit>
        <trans-unit id="99e2eef4a7afa6967f2bfdb3d2317bc8259b8b38" translate="yes" xml:space="preserve">
          <source>Whether the driver supports batched operations, see &lt;a href=&quot;qsqlquery#execBatch&quot;&gt;QSqlQuery::execBatch&lt;/a&gt;()</source>
          <target state="translated">ドライバーがバッチ操作をサポートするかどうかは、&lt;a href=&quot;qsqlquery#execBatch&quot;&gt;QSqlQuery :: execBatch&lt;/a&gt;（）を参照してください</target>
        </trans-unit>
        <trans-unit id="cc692b7b64b01e95bec2490419dbacbec52f5ac5" translate="yes" xml:space="preserve">
          <source>Whether the driver supports database event notifications.</source>
          <target state="translated">ドライバがデータベースイベント通知をサポートしているかどうか。</target>
        </trans-unit>
        <trans-unit id="628444820187e4c76acfe865374c57be9597b3c4" translate="yes" xml:space="preserve">
          <source>Whether the driver supports prepared query execution.</source>
          <target state="translated">ドライバが準備されたクエリの実行をサポートしているかどうか。</target>
        </trans-unit>
        <trans-unit id="d578a8324e172000e823c2e578c26df8d857120a" translate="yes" xml:space="preserve">
          <source>Whether the driver supports returning the Id of the last touched row.</source>
          <target state="translated">ドライバが最後にタッチされた行の ID を返すことをサポートしているかどうか。</target>
        </trans-unit>
        <trans-unit id="0c016f85910ee59575e37aaa781500e68ac6489e" translate="yes" xml:space="preserve">
          <source>Whether the driver supports the use of named placeholders.</source>
          <target state="translated">ドライバが名前付きプレースホルダの使用をサポートしているかどうか。</target>
        </trans-unit>
        <trans-unit id="f5fabd5d2f9f3ba4bba291487dcd50948e6e0eac" translate="yes" xml:space="preserve">
          <source>Whether the driver supports the use of positional placeholders.</source>
          <target state="translated">ドライバが位置を指定したプレースホルダの使用をサポートしているかどうか。</target>
        </trans-unit>
        <trans-unit id="e7c605a10ccaa6b790d36479ca5cd3464b7e3e99" translate="yes" xml:space="preserve">
          <source>Whether the focus is is at the border or inside the widget.</source>
          <target state="translated">フォーカスがボーダーにあるか、ウィジェットの内側にあるか。</target>
        </trans-unit>
        <trans-unit id="fbd034ed932cf240c748ee945667de15e7a72c46" translate="yes" xml:space="preserve">
          <source>Whether the item is pressed</source>
          <target state="translated">項目が押されているかどうか</target>
        </trans-unit>
        <trans-unit id="46ebf14697d16b952c232d4c529425aeba2ec058" translate="yes" xml:space="preserve">
          <source>Whether the label is drawn.</source>
          <target state="translated">ラベルが描かれているかどうか。</target>
        </trans-unit>
        <trans-unit id="aaf559ded4da7eb7934bbeb8f5160f6fd7699b4b" translate="yes" xml:space="preserve">
          <source>Whether the legend background is visible.</source>
          <target state="translated">凡例の背景が見えるかどうか。</target>
        </trans-unit>
        <trans-unit id="37313d12a7a0be8af88693a899b7344efb257291" translate="yes" xml:space="preserve">
          <source>Whether the legend is visible.</source>
          <target state="translated">凡例が表示されているかどうか。</target>
        </trans-unit>
        <trans-unit id="3144153f16d0769f79b9785e618f134de4aefa6a" translate="yes" xml:space="preserve">
          <source>Whether the line is the last. This property can change if you set the</source>
          <target state="translated">行が最後かどうか。このプロパティは</target>
        </trans-unit>
        <trans-unit id="9ea42eeadcc56647ffbc101f32710a47b1a0a933" translate="yes" xml:space="preserve">
          <source>Whether the map type is optimized for the use on a mobile device.</source>
          <target state="translated">マップタイプがモバイル端末での利用に最適化されているかどうか。</target>
        </trans-unit>
        <trans-unit id="03f0ed19d3ba562825d7a428e850d0d4ae79787e" translate="yes" xml:space="preserve">
          <source>Whether the map type is optimized for use at night.</source>
          <target state="translated">マップタイプが夜間の使用に最適化されているかどうか。</target>
        </trans-unit>
        <trans-unit id="621b2949699553f62dcb51e30d25da4b13f98472" translate="yes" xml:space="preserve">
          <source>Whether the menu is enabled, and responsive to user interaction as a submenu. Its value defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">メニューが有効で、サブメニューとしてユーザーの操作に応答するかどうか。その値のデフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="08f744dfb74a52e0e277283ba5907cc6f1378d72" translate="yes" xml:space="preserve">
          <source>Whether the menu item can be checked, or toggled. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">メニュー項目をチェックできるか、トグルできるか。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4c1b888a2cec2b100297f179f869b0944945d49d" translate="yes" xml:space="preserve">
          <source>Whether the menu item is enabled, and responsive to user interaction. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">メニュー項目が有効で、ユーザーの操作に応答するかどうか。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ce8fa3229c69c96181da21931047a6e1d51bf634" translate="yes" xml:space="preserve">
          <source>Whether the menu item should be visible. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">メニュー項目を表示するかどうか。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="92a63e59bfc40ad15c5be2816466eb24eacc2ef5" translate="yes" xml:space="preserve">
          <source>Whether the menu separator should be visible.</source>
          <target state="translated">メニューの区切り文字を表示するかどうか。</target>
        </trans-unit>
        <trans-unit id="3cf2e278ef17de70651570a3447bc45e677d370d" translate="yes" xml:space="preserve">
          <source>Whether the menu should be visible as a submenu of another Menu, or as a menu on a &lt;a href=&quot;qml-qtquick-controls-menubar&quot;&gt;MenuBar&lt;/a&gt;. Its value defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">メニューを別のメニューのサブメニューとして表示するか、&lt;a href=&quot;qml-qtquick-controls-menubar&quot;&gt;MenuBarの&lt;/a&gt;メニューとして表示するか。その値のデフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8088e05c590a3e0bf008c00d389801153a3d00b6" translate="yes" xml:space="preserve">
          <source>Whether the navigation issue is requested for a top level page.</source>
          <target state="translated">ナビゲーションの問題がトップレベルのページに要求されているかどうか。</target>
        </trans-unit>
        <trans-unit id="235d5328b4f194c49658a5369d777c354e0bc206" translate="yes" xml:space="preserve">
          <source>Whether the reimplementation of &lt;a href=&quot;qabstractitemmodel#hasChildren&quot;&gt;hasChildren()&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, it may not be necessary for the view to call &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount()&lt;/a&gt; to find out how many children are present. For example, &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; does not need to know how many children there are if the parent item has not been expanded to show them.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel#hasChildren&quot;&gt;hasChildren（）の&lt;/a&gt;再実装が &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を返すかどうかにかかわらず、ビューが&lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount（）&lt;/a&gt;を呼び出して、存在する子の数を確認する必要がない場合があります。たとえば、親アイテムが展開されて表示されていない場合、&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;は子の数を知る必要はありません。</target>
        </trans-unit>
        <trans-unit id="538f44ad7b42229493c7d7d9e3ef2b46b9b9269d" translate="yes" xml:space="preserve">
          <source>Whether the selected item should be a folder.</source>
          <target state="translated">選択した項目をフォルダにするかどうか。</target>
        </trans-unit>
        <trans-unit id="8b37630a9ab7e8561ccfcc973792499cdd1c2fc9" translate="yes" xml:space="preserve">
          <source>Whether the slice is separated from the pie.</source>
          <target state="translated">スライスがパイから分離しているかどうか。</target>
        </trans-unit>
        <trans-unit id="1e51bb9bffd87efbffac7ced9051c8e36ae66ea8" translate="yes" xml:space="preserve">
          <source>Whether the sprite is animating or not.</source>
          <target state="translated">スプライトがアニメーションしているかどうか。</target>
        </trans-unit>
        <trans-unit id="15b788e281bbb09b261892870f8a1722b24dac42" translate="yes" xml:space="preserve">
          <source>Whether the state machine was invoked from an outer state machine.</source>
          <target state="translated">ステートマシンが外部のステートマシンから呼び出されたかどうか。</target>
        </trans-unit>
        <trans-unit id="a0b1a3343f7c152c3d6e8ee37fef9d099e50a0ff" translate="yes" xml:space="preserve">
          <source>Whether the style should underline the menu item's label mnemonic.</source>
          <target state="translated">メニュー項目のラベルニーモニックに下線を引くかどうか。</target>
        </trans-unit>
        <trans-unit id="c38308bf37133d3debb54fd9749488e0eb788394" translate="yes" xml:space="preserve">
          <source>Whether the timeline is enabled.</source>
          <target state="translated">タイムラインが有効になっているかどうか。</target>
        </trans-unit>
        <trans-unit id="6800a5d87cf42840acdc7fcb220f0eab7fdd1856" translate="yes" xml:space="preserve">
          <source>Whether the user can interact with the &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt; item.</source>
          <target state="translated">ユーザーが&lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;アイテムを操作できるかどうか。</target>
        </trans-unit>
        <trans-unit id="3404ae7c0bcb4ef4a1fedd302f33d359c7dbd904" translate="yes" xml:space="preserve">
          <source>Whether the user can interact with the &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt; item. If this property is set to true the text cannot be edited by user interaction.</source>
          <target state="translated">ユーザーが&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;アイテムを操作できるかどうか。このプロパティがtrueに設定されている場合、ユーザーの操作によってテキストを編集することはできません。</target>
        </trans-unit>
        <trans-unit id="421117e08c0b75cdb15d7908f28bc054bc099c36" translate="yes" xml:space="preserve">
          <source>Whether the values are reported for dragging and/or flicking is determined by &lt;a href=&quot;qml-qtquick-flickable#boundsBehavior-prop&quot;&gt;boundsBehavior&lt;/a&gt;. The overshoot distance is reported even when &lt;a href=&quot;qml-qtquick-flickable#boundsMovement-prop&quot;&gt;boundsMovement&lt;/a&gt; is &lt;code&gt;Flickable.StopAtBounds&lt;/code&gt;.</source>
          <target state="translated">値がドラッグやフリックについて報告されるかどうかは、&lt;a href=&quot;qml-qtquick-flickable#boundsBehavior-prop&quot;&gt;boundsBehavior&lt;/a&gt;によって決定されます。&lt;a href=&quot;qml-qtquick-flickable#boundsMovement-prop&quot;&gt;boundsMovement&lt;/a&gt;が &lt;code&gt;Flickable.StopAtBounds&lt;/code&gt; の場合でも、オーバーシュート距離が報告されます。</target>
        </trans-unit>
        <trans-unit id="e6ceaafbfc10047970bada881dcbd1c1197929a3" translate="yes" xml:space="preserve">
          <source>Whether the web engine profile is</source>
          <target state="translated">ウェブエンジンのプロフィールが</target>
        </trans-unit>
        <trans-unit id="3415d4ca07d6a652c116c2d85a4d5f784d1a62b9" translate="yes" xml:space="preserve">
          <source>Whether the window has a custom background color set.</source>
          <target state="translated">ウィンドウにカスタム背景色が設定されているかどうか。</target>
        </trans-unit>
        <trans-unit id="3f356add3a289b463a5638963da464dcfa8cedbc" translate="yes" xml:space="preserve">
          <source>Whether the window is visible on the screen.</source>
          <target state="translated">ウィンドウが画面に表示されているかどうか。</target>
        </trans-unit>
        <trans-unit id="913fc48b2bd67968d18a833b0cf728c3541e7c15" translate="yes" xml:space="preserve">
          <source>Whether this download is finished (completed, cancelled, or non-resumable interrupted state).</source>
          <target state="translated">このダウンロードが終了しているかどうか(完了しているか、キャンセルされているか、再開不可能な中断状態か)。</target>
        </trans-unit>
        <trans-unit id="10665e34f2783f8fa2a19993bf61804f7d9d48e8" translate="yes" xml:space="preserve">
          <source>Whether this download is paused.</source>
          <target state="translated">このダウンロードが一時停止されているかどうか。</target>
        </trans-unit>
        <trans-unit id="c87f3e63dd21c4200bb479597f1ec7b574bdee0e" translate="yes" xml:space="preserve">
          <source>Whether this element should be disconnected from the previous Path element (or startX/Y).</source>
          <target state="translated">この要素を前のPath要素(またはstartX/Y)から切り離すかどうか。</target>
        </trans-unit>
        <trans-unit id="577931957ce048bb07933998686fe00fd1a4e569" translate="yes" xml:space="preserve">
          <source>Whether this is a download request for saving a web page or a file.</source>
          <target state="translated">Webページを保存するためのダウンロード要求なのか、ファイルを保存するためのダウンロード要求なのか。</target>
        </trans-unit>
        <trans-unit id="fb9cfcf1336fb0bab461c8a796b1628a9b1dba5b" translate="yes" xml:space="preserve">
          <source>Whether this window request was directly triggered as the result of a keyboard or mouse event.</source>
          <target state="translated">このウィンドウ要求がキーボードまたはマウスイベントの結果として直接トリガされたかどうか。</target>
        </trans-unit>
        <trans-unit id="9f0457984bd91b6556f4c2015acaf5a05c1691bd" translate="yes" xml:space="preserve">
          <source>Whether to accept or ignore the navigation request.</source>
          <target state="translated">ナビゲーションのリクエストを受け入れるか、無視するか。</target>
        </trans-unit>
        <trans-unit id="1a30ac0ac903d864bd8a03b00460c0d402a09ff3" translate="yes" xml:space="preserve">
          <source>Whether to use a large arc as defined by the arc points.</source>
          <target state="translated">円弧点で定義された大きな円弧を使用するかどうか。</target>
        </trans-unit>
        <trans-unit id="acf3d78a191e4a37d63681f2767dfaa3b23c48e5" translate="yes" xml:space="preserve">
          <source>Whether to use the instruction text that came with the response from the server (true) or the text generated by the plugin. The default value is true. Note that if instructions in a language that is not directly supported by Mapbox are needed (see &lt;a href=&quot;https://www.mapbox.com/api-documentation/#instructions-languages&quot;&gt;here&lt;/a&gt; for the supported languages), it is possible to use the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlinguist-index.html&quot;&gt;Qt Linguist&lt;/a&gt; to translate &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt; to the desired language, and set this parameter to false in order to use the translated built-in instructions.</source>
          <target state="translated">サーバーからの応答に付属する指示テキスト（true）を使用するか、プラグインによって生成されたテキストを使用するか。デフォルト値はtrueです。Mapboxで直接サポートされていない言語での指示が必要な場合（サポートされている言語については&lt;a href=&quot;https://www.mapbox.com/api-documentation/#instructions-languages&quot;&gt;こちら&lt;/a&gt;を参照）、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlinguist-index.html&quot;&gt;Qt言語&lt;/a&gt;を使用して&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt;を目的の言語に翻訳し、このパラメーターをfalseに設定して、翻訳された組み込み命令を使用します。</target>
        </trans-unit>
        <trans-unit id="1fcccc4a8ddc8959e8c2dd3a070f746efff6d17d" translate="yes" xml:space="preserve">
          <source>Whether to use the instruction text that came with the response from the server (true) or the text generated by the plugin. The default value is true. Note that if instructions in a language that is not directly supported by Mapbox are needed (see &lt;a href=&quot;https://www.mapbox.com/api-documentation/#instructions-languages&quot;&gt;here&lt;/a&gt; for the supported languages), it is possible to use the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlinguist-index.html&quot;&gt;Qt Linguist&lt;/a&gt; to translate &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt; to the desired language, and set this parameter to false in order to use the translated built-in instructions.</source>
          <target state="translated">サーバーからの応答に付属の指示テキスト（true）を使用するか、プラグインによって生成されたテキストを使用するか。デフォルト値はtrueです。Mapboxで直接サポートされていない言語での指示が必要な場合（サポートされている言語については&lt;a href=&quot;https://www.mapbox.com/api-documentation/#instructions-languages&quot;&gt;こちら&lt;/a&gt;を参照）、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlinguist-index.html&quot;&gt;Qt言語学者&lt;/a&gt;を使用して&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-module.html&quot;&gt;QtLocation&lt;/a&gt;を目的の言語に翻訳し、このパラメーターをfalseに設定して翻訳された組み込みの手順を使用します。</target>
        </trans-unit>
        <trans-unit id="5ad7a9dbe1c579bd84d6196251c8df00e0a9061e" translate="yes" xml:space="preserve">
          <source>Whether tool tips are shown on window title bar buttons.</source>
          <target state="translated">ウィンドウのタイトルバーボタンにツールチップを表示するかどうか。</target>
        </trans-unit>
        <trans-unit id="13bccea668c4304e35b3c2648c61d13a84c0a8e9" translate="yes" xml:space="preserve">
          <source>Whether tooltips are shown when the text is truncated. This property is &lt;code&gt;false&lt;/code&gt; by default. This property currently has no effect as there is no support for tooltips in QML.</source>
          <target state="translated">テキストが切り捨てられたときにツールチップを表示するかどうか。このプロパティはデフォルトでは &lt;code&gt;false&lt;/code&gt; です。 QMLではツールチップがサポートされていないため、このプロパティは現在効果がありません。</target>
        </trans-unit>
        <trans-unit id="31fad663cc5a6c9e201e536434fd859471a2a47c" translate="yes" xml:space="preserve">
          <source>Whether your COM server should run as a stand-alone executable or as a shared library in the client process depends mainly on the type of COM objects you want to provide in the server.</source>
          <target state="translated">COMサーバをスタンドアロンの実行ファイルとして実行するか、クライアントプロセス内の共有ライブラリとして実行するかは、主にサーバ内で提供するCOMオブジェクトの種類に依存します。</target>
        </trans-unit>
        <trans-unit id="70bef61f89759f7b941e6e11ce1d973c5bf9fbe3" translate="yes" xml:space="preserve">
          <source>Which APIs of the COM object are available through scripting depends on the script language used.</source>
          <target state="translated">COM オブジェクトのどの API をスクリプトで利用できるかは、使用するスクリプト言語に依存します。</target>
        </trans-unit>
        <trans-unit id="793d21dbade3ed082aff6e7f64034df5c8fb7bc4" translate="yes" xml:space="preserve">
          <source>Which button gets the default status in a dialog's button widget.</source>
          <target state="translated">ダイアログのボタンウィジェットで、どのボタンがデフォルトの状態になるか。</target>
        </trans-unit>
        <trans-unit id="3db94e72d3b34a0e4e2719f79caf5739c7fca8b2" translate="yes" xml:space="preserve">
          <source>Which can then be used in a Qt Quick 3D project by using that QML Component:</source>
          <target state="translated">そのQMLコンポーネントを使用して、Qt Quick 3Dプロジェクトで使用することができます。</target>
        </trans-unit>
        <trans-unit id="c852b7c7494dc6886d8b68161e6704f86567c96f" translate="yes" xml:space="preserve">
          <source>Which content to show</source>
          <target state="translated">どのような内容を見せるか</target>
        </trans-unit>
        <trans-unit id="c0b12e319739b053134fc0caec91714a71612d6b" translate="yes" xml:space="preserve">
          <source>Which include statement is needed to use this class?</source>
          <target state="translated">このクラスを使用するために必要なインクルード文はどれか。</target>
        </trans-unit>
        <trans-unit id="2db588c843f0fd8abd06af7fd113c24d90771081" translate="yes" xml:space="preserve">
          <source>Which is equivalent to the following, much more verbose code:</source>
          <target state="translated">これは次のような、より冗長なコードと同等のものです。</target>
        </trans-unit>
        <trans-unit id="608a0352c63aabee07da1f6a81bdd20076990125" translate="yes" xml:space="preserve">
          <source>Which logical particle groups will be affected.</source>
          <target state="translated">どの論理粒子群が影響を受けるか</target>
        </trans-unit>
        <trans-unit id="25e530a3452f532ae132324593d82cc6b8193cfd" translate="yes" xml:space="preserve">
          <source>Which logical particle groups will be painted.</source>
          <target state="translated">どの論理粒子群が描かれるか。</target>
        </trans-unit>
        <trans-unit id="3d4b605c5f5f983a4bd45171bb55ac43a2d266df" translate="yes" xml:space="preserve">
          <source>Which modifier keys are currently pressed</source>
          <target state="translated">現在押されている修飾キー</target>
        </trans-unit>
        <trans-unit id="81602f452c808bea87345f9047105a0cca0c7c26" translate="yes" xml:space="preserve">
          <source>Which mouse buttons cause a slider to page step the value.</source>
          <target state="translated">どのマウスボタンを押すとスライダが値をページステップさせます。</target>
        </trans-unit>
        <trans-unit id="14b2d9e139d29168831e1c17e4d323900f8d3b0d" translate="yes" xml:space="preserve">
          <source>Which mouse buttons cause a slider to set the value to the position clicked on.</source>
          <target state="translated">どのマウスボタンをクリックすると、スライダーがクリックした位置に値を設定するようになります。</target>
        </trans-unit>
        <trans-unit id="efdebfca3891aee71d0e4ed022793cc1b44becb2" translate="yes" xml:space="preserve">
          <source>Which mouse or stylus buttons are currently pressed</source>
          <target state="translated">現在押されているマウスまたはスタイラスのボタン</target>
        </trans-unit>
        <trans-unit id="1efe3552692d8bb927cb6e3656a6eb4fac500a0c" translate="yes" xml:space="preserve">
          <source>Which of the &lt;a href=&quot;qml-qtquick-dialogs-filedialog#nameFilters-prop&quot;&gt;nameFilters&lt;/a&gt; is currently selected.</source>
          <target state="translated">現在選択されている&lt;a href=&quot;qml-qtquick-dialogs-filedialog#nameFilters-prop&quot;&gt;nameFilters&lt;/a&gt;はどれですか。</target>
        </trans-unit>
        <trans-unit id="ce70c525d60cbc2afd202f541aa3a5307f50aa58" translate="yes" xml:space="preserve">
          <source>Which properties that have changed can at any time be retrieved using the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() function. This function returns an instance of the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyFlags&lt;/a&gt; type which stores an OR combination of &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyFlag&lt;/a&gt; values. The &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyFlag&lt;/a&gt; enum defines whether a property has changed since the last update or not.</source>
          <target state="translated">変更されたプロパティは、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;（）関数を使用していつでも取得できます。この関数は、&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyFlags&lt;/a&gt;値のOR組み合わせを格納する&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyFlags&lt;/a&gt;型のインスタンスを返します。&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyFlag&lt;/a&gt;列挙定義プロパティは、前回の更新からか変更されたかどうか。</target>
        </trans-unit>
        <trans-unit id="e1df1f5e64d59ab6dd483dbd8de2ec583fac2e6a" translate="yes" xml:space="preserve">
          <source>Which type of mouse event should cause a list view expansion to be selected.</source>
          <target state="translated">どのタイプのマウスイベントでリストビューの展開が選択されるか。</target>
        </trans-unit>
        <trans-unit id="ec4e8958dac6b783178c5d6e15aae8d62c60049e" translate="yes" xml:space="preserve">
          <source>Which type of mouse event should cause a tab to be selected.</source>
          <target state="translated">どのタイプのマウスイベントでタブが選択されるか。</target>
        </trans-unit>
        <trans-unit id="866ed4526e153c6c9530e1af557d9e77faec2523" translate="yes" xml:space="preserve">
          <source>Which wheel to react to. The default is &lt;code&gt;Qt.Vertical&lt;/code&gt;.</source>
          <target state="translated">どのホイールに反応するか。デフォルトは &lt;code&gt;Qt.Vertical&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1d4a3d8f1568fbbfc148324db5db9d1ae0cc6949" translate="yes" xml:space="preserve">
          <source>Whichever type &lt;a href=&quot;qcborvalue#toJsonValue&quot;&gt;QCborValue::toJsonValue&lt;/a&gt;() returns.</source>
          <target state="translated">&lt;a href=&quot;qcborvalue#toJsonValue&quot;&gt;QCborValue :: toJsonValue&lt;/a&gt;（）が返すタイプ。</target>
        </trans-unit>
        <trans-unit id="d86a5675cc6478e7030415aaa83cd72801292548" translate="yes" xml:space="preserve">
          <source>While</source>
          <target state="translated">While</target>
        </trans-unit>
        <trans-unit id="0c92333f95ca45dcb239bb12adff2c5c85e31dd7" translate="yes" xml:space="preserve">
          <source>While &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; attempts to smooth over the differences between the different supported platforms, there are still a few differences that you should be aware of when porting your application:</source>
          <target state="translated">一方で&lt;a href=&quot;qsettings&quot;&gt;QSettingsの&lt;/a&gt;試みが異なるサポートされるプラットフォーム間の違いを介して滑らかにするために、あなたのアプリケーションを移植する際に注意すべきことはまだいくつかの相違点があります。</target>
        </trans-unit>
        <trans-unit id="0b071fa22d15d222cb6c92bb69c100ebbc5362ee" translate="yes" xml:space="preserve">
          <source>While FrameGraphNodes can be individually enabled and disabled via the &lt;code&gt;enabled&lt;/code&gt; property, this can become tedious when an entire path needs to be turned on or off. SubtreeEnabler is a convenience node that makes this use case trivial, allowing all of its children to be controlled by a single switch.</source>
          <target state="translated">FrameGraphNodesは、 &lt;code&gt;enabled&lt;/code&gt; プロパティを介して個別に有効または無効にできますが、パス全体をオンまたはオフにする必要がある場合、これは面倒になる可能性があります。SubtreeEnablerは、このユースケースを簡単にする便利なノードであり、そのすべての子を1つのスイッチで制御できます。</target>
        </trans-unit>
        <trans-unit id="80cc72a6fe5a9ef131329278224272da11157a25" translate="yes" xml:space="preserve">
          <source>While QFrameGraphNodes can be individually enabled and disabled via the &lt;code&gt;enabled&lt;/code&gt; property, this can become tedious when an entire path needs to be turned on or off. QSubtreeEnabler is a convenience node that makes this use case trivial, allowing all of its children to be controlled by a single switch.</source>
          <target state="translated">QFrameGraphNodesは、 &lt;code&gt;enabled&lt;/code&gt; プロパティを介して個別に有効または無効にできますが、パス全体をオンまたはオフにする必要がある場合、これは面倒になる可能性があります。QSubtreeEnablerは、このユースケースを簡単にする便利なノードであり、そのすべての子を1つのスイッチで制御できます。</target>
        </trans-unit>
        <trans-unit id="805d12233c47b77ed4b3e62b7584c32850936965" translate="yes" xml:space="preserve">
          <source>While QML objects instantiated in a context are not strictly owned by that context, their bindings are. If a context is destroyed, the property bindings of outstanding QML objects will stop evaluating.</source>
          <target state="translated">コンテキスト内でインスタンス化されたQMLオブジェクトは、厳密にはそのコンテクストの所有物ではありませんが、そのバインディングはそのコンテクストの所有物です。コンテキストが破棄された場合、未解決のQMLオブジェクトのプロパティバインディングの評価は停止します。</target>
        </trans-unit>
        <trans-unit id="63d99cb7559ceb26aa76fb0f9748bade0a0e5027" translate="yes" xml:space="preserve">
          <source>While QSettings attempts to smooth over the differences between the different supported platforms, there are still a few differences that you should be aware of when porting your application:</source>
          <target state="translated">QSettingsは、サポートされているプラットフォームの違いをスムーズにしようとしていますが、アプリケーションを移植する際に注意すべきいくつかの違いが残っています。</target>
        </trans-unit>
        <trans-unit id="88b774c74a2776122de7b559a743e91ffaed05ef" translate="yes" xml:space="preserve">
          <source>While Qt Quick provides basic graphical elements, &lt;a href=&quot;qtquickcontrols-index&quot;&gt;Qt Quick Controls&lt;/a&gt; provides ready-made QML types for use within an application.</source>
          <target state="translated">Qt Quickは基本的なグラフィック要素を提供しますが、&lt;a href=&quot;qtquickcontrols-index&quot;&gt;Qt Quick Controls&lt;/a&gt;はアプリケーション内で使用する既製のQMLタイプを提供します。</target>
        </trans-unit>
        <trans-unit id="a5caad6194e0d31eb78a5652257e4bbde771723c" translate="yes" xml:space="preserve">
          <source>While Qt Remote Objects (QtRO) handles the initialization and synchronization of &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; objects, there are numerous steps happening behind the scenes which can fail and that aren't encountered in single process Qt applications. See &lt;a href=&quot;qtremoteobjects-troubleshooting#troubleshooting&quot;&gt;Troubleshooting&lt;/a&gt; for advice on how to handle such issues when using a remote objects network.</source>
          <target state="translated">Qtリモートオブジェクト（QtRO）は&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;レプリカ&lt;/a&gt;オブジェクトの初期化と同期を処理しますが、失敗する可能性があり、シングルプロセスQtアプリケーションでは発生しない、背後で発生する多くの手順があります。リモートオブジェクトネットワークを使用しているときにこのような問題を処理する方法についてのアドバイスは、&lt;a href=&quot;qtremoteobjects-troubleshooting#troubleshooting&quot;&gt;トラブルシューティング&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8dc3249320abae6037c56c4dfaf988c3e01c6b36" translate="yes" xml:space="preserve">
          <source>While Qt Remote Objects supports sharing any &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; over the network (using enableRemoting on the Source side and acquireDynamic on the Replica side), there are a couple of advantages to letting repc define your objects. First of all, while &lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;DynamicReplicas&lt;/a&gt; are useful, they are more cumbersome to work with. The API is not known until the object is initialized, and using the API from C++ requires string lookups through &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;'s methods. Secondly, having the interface known at compile time finds any issues at compile vs. at runtime. Thirdly, the rep format supports default values, which can be handy if you are unable to ensure the Source is available when the Replica is instantiated.</source>
          <target state="translated">Qtリモートオブジェクトはネットワーク上での&lt;a href=&quot;qobject&quot;&gt;QObjectの&lt;/a&gt;共有をサポートしていますが（ソース側でenableRemotingを使用し、レプリカ側でAcquireDynamicを使用）、オブジェクトをrepcに定義させることにはいくつかの利点があります。まず第一に、&lt;a href=&quot;qremoteobjectdynamicreplica&quot;&gt;DynamicReplicas&lt;/a&gt;は便利ですが、扱いが面倒です。オブジェクトが初期化されるまでAPIは不明であり、C ++からAPIを使用するには&lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;のメソッドによる文字列ルックアップが必要です。次に、コンパイル時にインターフェースを認識させると、コンパイル時と実行時の問題が見つかります。 3番目に、rep形式はデフォルト値をサポートします。これは、レプリカがインスタンス化されたときにソースが使用可能であることを確認できない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="e457f9c50b36136e1b62d4d3cceb2a290ccb7e89" translate="yes" xml:space="preserve">
          <source>While Qt offers a lot of classes for writing your application, Apple's Cocoa frameworks offer functionality that is not currently available (or may never end up) in Qt. Using &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt;, it is possible to take an arbitrary NSView-derived class from Cocoa and put it in a Qt widgets hierarchy. Depending on the level of integration you need, you can use &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt; directly or subclass it to wrap more functionality of the underlying NSView.</source>
          <target state="translated">Qtはアプリケーションを作成するための多くのクラスを提供しますが、AppleのCocoaフレームワークは、現在Qtで利用できない（または最終的には利用できない）機能を提供します。&lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt;を使用すると、Cocoaから任意のNSView派生クラスを取得して、Qtウィジェット階層に配置できます。必要な統合のレベルに応じて、&lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainerを&lt;/a&gt;直接使用するか、サブクラス化して、基になるNSViewのより多くの機能をラップできます。</target>
        </trans-unit>
        <trans-unit id="5c324cf8835a3580c511d22b5dd7d8641994d4b4" translate="yes" xml:space="preserve">
          <source>While Qt offers a lot of classes for writing your application, Apple's Cocoa frameworks offer functionality that is not currently available (or may never end up) in Qt. Using QMacCocoaViewContainer, it is possible to take an arbitrary NSView-derived class from Cocoa and put it in a Qt widgets hierarchy. Depending on the level of integration you need, you can use QMacCocoaViewContainer directly or subclass it to wrap more functionality of the underlying NSView.</source>
          <target state="translated">Qtにはアプリケーションを書くためのクラスがたくさんありますが、AppleのCocoaフレームワークには、現在Qtでは利用できない(あるいは利用できなくなるかもしれない)機能があります。QMacCocoaViewContainer を使えば、Cocoa から任意の NSView 由来のクラスを取り出して、それを Qt のウィジェット階層に配置することができます。必要な統合のレベルに応じて、QMacCocoaViewContainerを直接使うこともできますし、サブクラス化してNSViewのより多くの機能をラップすることもできます。</target>
        </trans-unit>
        <trans-unit id="639e47c0cc3c90dd85258bd8d0bd4929efba9b42" translate="yes" xml:space="preserve">
          <source>While a &lt;a href=&quot;qml-qtquick-multipointtoucharea&quot;&gt;MultiPointTouchArea&lt;/a&gt;</source>
          <target state="translated">しばらく&lt;a href=&quot;qml-qtquick-multipointtoucharea&quot;&gt;MultiPointTouchArea&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b959e54026f44244ceaee1db91eabf22b5bfbf5" translate="yes" xml:space="preserve">
          <source>While a MultiPointTouchArea</source>
          <target state="translated">MultiPointTouchAreaが</target>
        </trans-unit>
        <trans-unit id="2be60205fdac058f6976a555c3e4b7cf8fccfd3c" translate="yes" xml:space="preserve">
          <source>While a drag is active any change in an item's position will send a QDragMove event with item's new position to the scene.</source>
          <target state="translated">ドラッグがアクティブな間、アイテムの位置が変更されると、アイテムの新しい位置を含むQDragMoveイベントがシーンに送信されます。</target>
        </trans-unit>
        <trans-unit id="64fdcb92b68611667252ebd05f072432ecdbc0e3" translate="yes" xml:space="preserve">
          <source>While a drag is active this property holds the last object to accept an enter event from the dragged item, if the current drag position doesn't intersect any accepting targets it is null.</source>
          <target state="translated">ドラッグがアクティブな間、このプロパティは、ドラッグされたアイテムからのエンターイベントを受け入れる最後のオブジェクトを保持し、現在のドラッグ位置が受け入れ可能なターゲットと交差していない場合はNULLとなります。</target>
        </trans-unit>
        <trans-unit id="247ae0dc4720cc9ae6c9b6dc97a0b81e78b8ae50" translate="yes" xml:space="preserve">
          <source>While a macro is being composed, the stack is disabled. This means that:</source>
          <target state="translated">マクロが構成されている間は、スタックは無効化されています。ということになります。</target>
        </trans-unit>
        <trans-unit id="4a2a381df229651fb2b9af1341ddde4ce9fc06a2" translate="yes" xml:space="preserve">
          <source>While an address is preferred, it may be used by the operating system as the source address for new, outgoing packets. After it becomes deprecated, it will remain valid for incoming packets for a while longer until finally removed (see &lt;a href=&quot;qnetworkaddressentry#validityLifetime&quot;&gt;validityLifetime&lt;/a&gt;()).</source>
          <target state="translated">アドレスが推奨されますが、オペレーティングシステムは、新しい発信パケットのソースアドレスとして使用できます。廃止された後、最終的に削除されるまで、着信パケットに対してしばらく有効です（&lt;a href=&quot;qnetworkaddressentry#validityLifetime&quot;&gt;validityLifetime&lt;/a&gt;（）を参照）。</target>
        </trans-unit>
        <trans-unit id="a60f8140c28c40aa06364e2fef4119b3f1df6143" translate="yes" xml:space="preserve">
          <source>While an address is valid, it will be accepted by the operating system as a valid destination address for this machine. Whether it is used as a source address for new, outgoing packets is controlled by, among other rules, the preferred lifetime (see &lt;a href=&quot;qnetworkaddressentry#preferredLifetime&quot;&gt;preferredLifetime&lt;/a&gt;()).</source>
          <target state="translated">アドレスは有効ですが、このマシンの有効な宛先アドレスとしてオペレーティングシステムに受け入れられます。新しい発信パケットの送信元アドレスとして使用されるかどうかは、他のルールの中でも、優先的なライフタイムによって制御されます（&lt;a href=&quot;qnetworkaddressentry#preferredLifetime&quot;&gt;preferredLifetime&lt;/a&gt;（）を参照）。</target>
        </trans-unit>
        <trans-unit id="8e73dec0fd5276fb04a6a4d81f2ba3c17a6241b7" translate="yes" xml:space="preserve">
          <source>While both the left and the right mouse button are pressed, mouse movement along y-axis zooms the camera in and out without changing the view center.</source>
          <target state="translated">マウスの左右両方のボタンを押している間、Y軸に沿ってマウスを動かすと、ビューの中心を変えずにカメラをズームイン、ズームアウトします。</target>
        </trans-unit>
        <trans-unit id="37dcf4f1f9a6dc145fe2352f6113680e83b3cfc9" translate="yes" xml:space="preserve">
          <source>While determining the line-break positions take into account the space added for drawing a separator character.</source>
          <target state="translated">改行位置を決定する際には、区切り文字を描画するために追加されるスペースを考慮してください。</target>
        </trans-unit>
        <trans-unit id="097e642748a4c03d61bb9e6313a60b0554cb6e9e" translate="yes" xml:space="preserve">
          <source>While disabled by default, multisample antialiasing is fully supported by &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;. Additional color buffers and resolving into the swapchain's non-multisample buffers are all managed automatically.</source>
          <target state="translated">デフォルトでは無効になっていますが、マルチサンプルアンチエイリアスは&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindowで&lt;/a&gt;完全にサポートされています。追加のカラーバッファーおよびスワップチェーンの非マルチサンプルバッファーへの解決は、すべて自動的に管理されます。</target>
        </trans-unit>
        <trans-unit id="a4b0c4e696c9c6c84624775ee4ad3557f8221ec2" translate="yes" xml:space="preserve">
          <source>While disabled by default, multisample antialiasing is fully supported by QVulkanWindow. Additional color buffers and resolving into the swapchain's non-multisample buffers are all managed automatically.</source>
          <target state="translated">デフォルトでは無効になっていますが、QVulkanWindow ではマルチサンプル アンチエイリアシングが完全にサポートされています。追加のカラーバッファとスワップチェーンの非マルチサンプルバッファへの解決は、すべて自動的に管理されます。</target>
        </trans-unit>
        <trans-unit id="cc493c81f134da0d8d432b045a7b6c1b96604a9a" translate="yes" xml:space="preserve">
          <source>While future versions of QML should be able to handle this situation more gracefully, there are currently several ways to rework your application to avoid this problem.</source>
          <target state="translated">QML の将来のバージョンでは、この状況をより優雅に処理できるようになるはずですが、現在のところ、この問題を回避するためにアプリケーションを作り直す方法がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="15fb18a74816c4333c9f8ad309dfcbc4e6433902" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-controls-combobox&quot;&gt;ComboBox&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">インプットメソッドを作成している間、&lt;a href=&quot;qml-qtquick-controls-combobox&quot;&gt;ComboBox&lt;/a&gt;からのマウスまたはキーのイベントに依存して、部分的なテキストを編集またはコミットできます。このプロパティを使用して、インプットメソッドの正しい動作を妨げる可能性のあるイベントハンドラーを無効にするタイミングを決定できます。</target>
        </trans-unit>
        <trans-unit id="f0466a621b603d8099a666cbf3e7b909d22a359a" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-controls-spinbox&quot;&gt;SpinBox&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">インプットメソッドの作成中は、&lt;a href=&quot;qml-qtquick-controls-spinbox&quot;&gt;SpinBox&lt;/a&gt;からのマウスまたはキーのイベントに依存して、部分的なテキストを編集またはコミットする場合があります。このプロパティを使用して、インプットメソッドの正しい動作を妨げる可能性のあるイベントハンドラーを無効にするタイミングを決定できます。</target>
        </trans-unit>
        <trans-unit id="67890a4a1a8bd48d3e98cca62e936d86fb94fba6" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">インプットメソッドの作成中は、部分テキストを編集またはコミットするために、&lt;a href=&quot;qml-qtquick-controls-textarea&quot;&gt;TextArea&lt;/a&gt;からのマウスまたはキーイベントに依存する場合があります。このプロパティを使用して、インプットメソッドの正しい動作を妨げる可能性のあるイベントハンドラーを無効にするタイミングを決定できます。</target>
        </trans-unit>
        <trans-unit id="ee371465fb28bf9a9949849a252c923b3f791e81" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">インプットメソッドを構成している間、部分テキストを編集またはコミットするために、&lt;a href=&quot;qml-qtquick-controls-textfield&quot;&gt;TextField&lt;/a&gt;からのマウスまたはキーイベントに依存する場合があります。このプロパティを使用して、インプットメソッドの正しい動作を妨げる可能性のあるイベントハンドラーを無効にするタイミングを決定できます。</target>
        </trans-unit>
        <trans-unit id="906c9a011624e84967f351e402a95c8ae3f33f47" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">インプットメソッドの作成中は、部分的なテキストを編集またはコミットするために、&lt;a href=&quot;qml-qtquick-textedit&quot;&gt;TextEdit&lt;/a&gt;からのマウスまたはキーイベントに依存する場合があります。このプロパティを使用して、インプットメソッドの正しい動作を妨げる可能性のあるイベントハンドラーを無効にするタイミングを決定できます。</target>
        </trans-unit>
        <trans-unit id="99aaa194e92ccb9db37b15111ae52bc3f39b615c" translate="yes" xml:space="preserve">
          <source>While it is composing an input method may rely on mouse or key events from the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; to edit or commit the partial text. This property can be used to determine when to disable events handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">インプットメソッドの作成中は、部分的なテキストを編集またはコミットするために、&lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;からのマウスまたはキーのイベントに依存する場合があります。このプロパティを使用して、インプットメソッドの正しい動作を妨げる可能性のあるイベントハンドラーを無効にするタイミングを決定できます。</target>
        </trans-unit>
        <trans-unit id="30b6907453cc980cea56c0043dbb5616963a3884" translate="yes" xml:space="preserve">
          <source>While it is composing, an input method may rely on mouse or key events from the combo box to edit or commit the partial text. This property can be used to determine when to disable event handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">構成中に、入力メソッドは、コンボボックスからのマウスまたはキーイベントに依存して、部分的なテキストを編集またはコミットすることがあります。このプロパティは、入力メソッドの正しい動作を妨げる可能性のあるイベント・ハンドラをいつ無効にするかを判断するために使用できます。</target>
        </trans-unit>
        <trans-unit id="f2dab60a71379a492f0e39b6fc63d2e821e5fdd4" translate="yes" xml:space="preserve">
          <source>While it is composing, an input method may rely on mouse or key events from the spin box to edit or commit the partial text. This property can be used to determine when to disable event handlers that may interfere with the correct operation of an input method.</source>
          <target state="translated">合成中、入力メソッドは、スピン・ボックスからのマウス・イベントまたはキー・イベントに依存して、部分的なテキストを編集またはコミットすることがあります。このプロパティは、入力メソッドの正しい動作を妨げる可能性のあるイベント・ハンドラをいつ無効にするかを判断するために使用できます。</target>
        </trans-unit>
        <trans-unit id="c27c4b353a9047c17a52a5e4e759a2368954c6a2" translate="yes" xml:space="preserve">
          <source>While it is possible to implement this RPC-style behavior in QtRO, as Sources without properties, and slots that have return values, QtRO hides the fact that the processing is really remote. You let a node give you the Replica instead of creating it yourself, possibly use the status signals (&lt;a href=&quot;qremoteobjectreplica#isReplicaValid&quot;&gt;isReplicaValid()&lt;/a&gt;), but then interact with the object like you would with any other &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-based type.</source>
          <target state="translated">このRPCスタイルの動作をQtROに実装することは可能ですが、プロパティのないソース、および戻り値を持つスロットとして、QtROは処理が実際にリモートであることを隠します。自分で作成するのではなく、ノードにレプリカを与え、状況信号（&lt;a href=&quot;qremoteobjectreplica#isReplicaValid&quot;&gt;isReplicaValid（）&lt;/a&gt;）を使用することを許可し、その後、他の&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;ベースのタイプと同じようにオブジェクトと対話します。</target>
        </trans-unit>
        <trans-unit id="9c0e4e02be847126b0fd3cb6759e533d4badf024" translate="yes" xml:space="preserve">
          <source>While it is possible to specify a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; for every &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; by calling the member function &lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;(), windows may also be created from QML by using the Window and &lt;a href=&quot;qml-qtquick-controls-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; elements. In this case there is no C++ code involved in the creation of the window instance, yet applications may still wish to set certain surface format values, for example to request a given OpenGL version or profile. Such applications can call the static function &lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat::setDefaultFormat&lt;/a&gt;() at startup. The specified format will be used for all Quick windows created afterwards.</source>
          <target state="translated">メンバー関数&lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;（）を呼び出すことにより、すべての&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindowに&lt;/a&gt;&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;を指定することは可能ですが、Windowおよび&lt;a href=&quot;qml-qtquick-controls-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;要素を使用してQMLからウィンドウを作成することもできます。この場合、ウィンドウインスタンスの作成に関係するC ++コードはありませんが、アプリケーションは特定の表面フォーマット値を設定する必要がある場合があります（たとえば、特定のOpenGLバージョンまたはプロファイルを要求する場合など）。このようなアプリケーションは、起動時に静的関数&lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat :: setDefaultFormat&lt;/a&gt;（）を呼び出すことができます。指定した形式は、後で作成されるすべてのクイックウィンドウで使用されます。</target>
        </trans-unit>
        <trans-unit id="588eb2b8408f7414400ddc0b28377391fa01e003" translate="yes" xml:space="preserve">
          <source>While it is possible to specify a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; for every QQuickWindow by calling the member function &lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;(), windows may also be created from QML by using the Window and &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; elements. In this case there is no C++ code involved in the creation of the window instance, yet applications may still wish to set certain surface format values, for example to request a given OpenGL version or profile. Such applications can call the static function &lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat::setDefaultFormat&lt;/a&gt;() at startup. The specified format will be used for all Quick windows created afterwards.</source>
          <target state="translated">メンバー関数&lt;a href=&quot;qwindow#setFormat&quot;&gt;setFormat&lt;/a&gt;（）を呼び出すことにより、すべてのQQuickWindowに&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;を指定することができますが、ウィンドウは、Window要素と&lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt;要素を使用してQMLから作成することもできます。この場合、ウィンドウインスタンスの作成に関係するC ++コードはありませんが、アプリケーションは、特定のOpenGLバージョンまたはプロファイルを要求するなど、特定のサーフェス形式の値を設定したい場合があります。このようなアプリケーションは、起動時に静的関数&lt;a href=&quot;qsurfaceformat#setDefaultFormat&quot;&gt;QSurfaceFormat :: setDefaultFormat&lt;/a&gt;（）を呼び出すことができます。指定した形式は、後で作成されるすべてのクイックウィンドウで使用されます。</target>
        </trans-unit>
        <trans-unit id="d036a10c64b9ec62641a8f90891f12d594f9c476" translate="yes" xml:space="preserve">
          <source>While it is possible to use &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; as a base class without the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro and without meta-object code, neither signals and slots nor the other features described here will be available if the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro is not used. From the meta-object system's point of view, a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass without meta code is equivalent to its closest ancestor with meta-object code. This means for example, that &lt;a href=&quot;qmetaobject#className&quot;&gt;QMetaObject::className&lt;/a&gt;() will not return the actual name of your class, but the class name of this ancestor.</source>
          <target state="translated">&lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt;マクロとメタオブジェクトコードなしで&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;を基本クラスとして使用することは可能ですが、&lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt;マクロが使用されていない場合、ここで説明されているシグナルやスロット、その他の機能は利用できません。メタオブジェクトシステムの観点から見ると、&lt;a href=&quot;qobject&quot;&gt;メタコードの&lt;/a&gt;ないQObjectサブクラスは、メタオブジェクトコードを持つ最も近い祖先と同等です。これは、たとえば、&lt;a href=&quot;qmetaobject#className&quot;&gt;QMetaObject :: className&lt;/a&gt;（）がクラスの実際の名前ではなく、この祖先のクラス名を返すことを意味します。</target>
        </trans-unit>
        <trans-unit id="b1bd735d79c63a934856f518d3884332e545cd51" translate="yes" xml:space="preserve">
          <source>While it's not necessary for modern touch screens, some resistive, single-touch touch screens may require that you fallback to using &lt;code&gt;tslib&lt;/code&gt; instead of relying on the Linux multi-touch protocol and the event devices.</source>
          <target state="translated">最新のタッチスクリーンでは必要ありませんが、一部の抵抗性のシングルタッチタッチスクリーンでは、Linuxマルチタッチプロトコルとイベントデバイスに依存する代わりに、 &lt;code&gt;tslib&lt;/code&gt; の使用にフォールバックする必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="00116c5d770003a6be6fa449a53e06f8fa0b3b92" translate="yes" xml:space="preserve">
          <source>While many applications will be fine with the default behavior of &lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt; when it comes to swapchain image formats, &lt;a href=&quot;qvulkanwindow#setPreferredColorFormats&quot;&gt;setPreferredColorFormats&lt;/a&gt;() allows requesting a pre-defined format. This is useful most notably when working in the sRGB color space. Passing a format like &lt;code&gt;VK_FORMAT_B8G8R8A8_SRGB&lt;/code&gt; results in choosing an sRGB format, when available.</source>
          <target state="translated">スワップチェーン画像フォーマットに関しては、多くのアプリケーションは&lt;a href=&quot;qvulkanwindow&quot;&gt;QVulkanWindow&lt;/a&gt;のデフォルトの動作で問題ありませんが、&lt;a href=&quot;qvulkanwindow#setPreferredColorFormats&quot;&gt;setPreferredColorFormats&lt;/a&gt;（）は事前定義されたフォーマットをリクエストすることを許可します。これは、sRGB色空間で作業する場合に特に便利です。 &lt;code&gt;VK_FORMAT_B8G8R8A8_SRGB&lt;/code&gt; のような形式を渡すと、使用可能な場合はsRGB形式が選択されます。</target>
        </trans-unit>
        <trans-unit id="8a2d57746c5d049a964b836436995db7b2faf9e5" translate="yes" xml:space="preserve">
          <source>While many applications will be fine with the default behavior of QVulkanWindow when it comes to swapchain image formats, &lt;a href=&quot;qvulkanwindow#setPreferredColorFormats&quot;&gt;setPreferredColorFormats&lt;/a&gt;() allows requesting a pre-defined format. This is useful most notably when working in the sRGB color space. Passing a format like &lt;code&gt;VK_FORMAT_B8G8R8A8_SRGB&lt;/code&gt; results in choosing an sRGB format, when available.</source>
          <target state="translated">スワップチェーン画像形式に関しては、多くのアプリケーションがQVulkanWindowのデフォルトの動作で問題ありませんが、&lt;a href=&quot;qvulkanwindow#setPreferredColorFormats&quot;&gt;setPreferredColorFormats&lt;/a&gt;（）を使用すると、事前定義された形式を要求できます。これは、sRGB色空間で作業する場合に特に役立ちます。 &lt;code&gt;VK_FORMAT_B8G8R8A8_SRGB&lt;/code&gt; のような形式を渡すと、使用可能な場合はsRGB形式が選択されます。</target>
        </trans-unit>
        <trans-unit id="7caa3c55c15a9e4c6b92a5f5323d4e687f6eb1af" translate="yes" xml:space="preserve">
          <source>While mapped the contents of a video frame can be accessed directly through the pointer returned by the &lt;a href=&quot;qvideoframe#bits&quot;&gt;bits&lt;/a&gt;() function.</source>
          <target state="translated">マップされている間、ビデオフレームのコンテンツは、&lt;a href=&quot;qvideoframe#bits&quot;&gt;bits&lt;/a&gt;（）関数によって返されたポインタを介して直接アクセスできます。</target>
        </trans-unit>
        <trans-unit id="45e6d91218c65ba74df0c36e01a88a27f955cb3a" translate="yes" xml:space="preserve">
          <source>While navigating the results in forward-only mode, the handle of &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; may change. Applications that use the low-level handle of SQL result must get a new handle after each call to any of &lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt; fetch functions. Example:</source>
          <target state="translated">転送専用モードで結果をナビゲートしている間、&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;のハンドルが変更される場合があります。SQL結果の低レベルハンドルを使用するアプリケーションは、&lt;a href=&quot;qsqlresult&quot;&gt;QSqlResult&lt;/a&gt;フェッチ関数を呼び出すたびに新しいハンドルを取得する必要があります。例：</target>
        </trans-unit>
        <trans-unit id="13af66f226f16c92acb9212a88a7d8e27f29fa0c" translate="yes" xml:space="preserve">
          <source>While on some platforms this will be a no-op, some may perform windowing system dependent synchronization. For example, on Wayland this will add send a wl_surface.frame request in order to prevent the driver from blocking for minimized windows.</source>
          <target state="translated">いくつかのプラットフォームでは、これは実行されませんが、いくつかのプラットフォームでは、ウィンドウシステムに依存した同期を実行することができます。例えば、Wayland では、最小化されたウィンドウでドライバがブロッキングするのを防ぐために wl_surface.frame リクエストを送信することが追加されます。</target>
        </trans-unit>
        <trans-unit id="19a0ca3fe34ef687144b8c5cae796cac1b5dca67" translate="yes" xml:space="preserve">
          <source>While on some platforms this will be a no-op, some may perform windowing system dependent synchronization. For example, on X11 this will update &lt;code&gt;_NET_WM_SYNC_REQUEST_COUNTER&lt;/code&gt;.</source>
          <target state="translated">一部のプラットフォームではこれは何もしませんが、ウィンドウシステムに依存する同期を実行するプラットフォームもあります。たとえば、X11では &lt;code&gt;_NET_WM_SYNC_REQUEST_COUNTER&lt;/code&gt; が更新されます。</target>
        </trans-unit>
        <trans-unit id="ec118cf91cb7bab4a1355e9d50cae4dc0e6da10a" translate="yes" xml:space="preserve">
          <source>While reading the results of a forward-only query with PostgreSQL, the database connection cannot be used to execute other queries. This is a limitation of libpq library. Example:</source>
          <target state="translated">PostgreSQLでフォワードオンリーのクエリの結果を読んでいる間は、データベース接続を使用して他のクエリを実行することはできません。これはlibpqライブラリの制限事項です。例を示します。</target>
        </trans-unit>
        <trans-unit id="3f23969546517ae0fc928eb331bb4454b78e90fa" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;qremoteobjecthostbase#proxy&quot;&gt;proxy&lt;/a&gt;() functionality allows &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; objects on another network to be acquired(), reverseProxy() allows &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; objects to be &quot;pushed&quot; to an otherwise inaccessible network.</source>
          <target state="translated">ながら&lt;a href=&quot;qremoteobjecthostbase#proxy&quot;&gt;プロキシ&lt;/a&gt;（）機能が可能&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;出典&lt;/a&gt;）（取得する別のネットワーク上のオブジェクト、リバースプロキシ（）が可能&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;ソースが&lt;/a&gt;そうでなければアクセスできないネットワークに「プッシュ」されるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="95dcf4df6cd449f4e72807f18f0a7e1c2207be7f" translate="yes" xml:space="preserve">
          <source>While the API is very similar, there is an important difference between the two: &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; always renders offscreen, using framebuffer objects. QGLWidget on the other hand uses a native window and surface. The latter causes issues when using it in complex user interfaces since, depending on the platform, such native child widgets may have various limitations, regarding stacking orders for example. &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; avoids this by not creating a separate native window.</source>
          <target state="translated">APIは非常に似ていますが、2つの間に重要な違いがあります&lt;a href=&quot;qopenglwidget&quot;&gt;。QOpenGLWidgetは&lt;/a&gt;常にフレームバッファーオブジェクトを使用してオフスクリーンでレンダリングします。一方、QGLWidgetはネイティブのウィンドウとサーフェスを使用します。後者は、複雑なユーザーインターフェイスで使用するときに問題を引き起こします。これは、プラットフォームによっては、このようなネイティブの子ウィジェットに、たとえばスタックの順序など、さまざまな制限があるためです。&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;は、別個のネイティブウィンドウを作成しないことでこれを回避します。</target>
        </trans-unit>
        <trans-unit id="45b78736fc537ea4149117477455ad4f321b16bb" translate="yes" xml:space="preserve">
          <source>While the API is very similar, there is an important difference between the two: QOpenGLWidget always renders offscreen, using framebuffer objects. QGLWidget on the other hand uses a native window and surface. The latter causes issues when using it in complex user interfaces since, depending on the platform, such native child widgets may have various limitations, regarding stacking orders for example. QOpenGLWidget avoids this by not creating a separate native window.</source>
          <target state="translated">APIは非常に似ていますが、2つの間には重要な違いがあります。QOpenGLWidget は常にフレームバッファオブジェクトを使用してオフスクリーンでレンダリングします。一方、QGLWidget はネイティブのウィンドウとサーフェスを使用します。後者は複雑なユーザーインターフェースで使用する際に問題が発生します。プラットフォームによっては、このようなネイティブの子ウィジェットには、例えばスタッキングの順序に関して様々な制限があります。QOpenGLWidgetは、個別のネイティブウィンドウを作成しないことで、この問題を回避します。</target>
        </trans-unit>
        <trans-unit id="217d5ce3e3111946893366d407e8970f2bee79c3" translate="yes" xml:space="preserve">
          <source>While the Navigator is in active tracking mode, this property tells whether the position from &lt;a href=&quot;qml-qt-labs-location-navigator#positionSource-prop&quot;&gt;positionSource&lt;/a&gt; is on the route or not.</source>
          <target state="translated">ナビゲーターがアクティブトラッキングモードの場合、このプロパティは、positionSourceからの&lt;a href=&quot;qml-qt-labs-location-navigator#positionSource-prop&quot;&gt;位置&lt;/a&gt;がルート上にあるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="b0c7bac6a26931f3dd8042bafc31473fb658a0dc" translate="yes" xml:space="preserve">
          <source>While the QML engine allows QML application to load images from filesystem or network resources, some applications may require the additional option of loading images from C++ based processes. This can be implemented through the &lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt; class, which provides support for pixmap loading and threaded image requests for QML applications. Any QML application that requests an image through the special &quot;image:&quot; URL scheme will be directed to an appropriate image provider to load the image.</source>
          <target state="translated">QMLエンジンにより、QMLアプリケーションはファイルシステムまたはネットワークリソースから画像を読み込むことができますが、一部のアプリケーションでは、C ++ベースのプロセスから画像を読み込む追加オプションが必要になる場合があります。これは&lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt;クラスを介して実装できます。QQuickImageProviderクラスは、QMLアプリケーションのピックスマップのロードとスレッド化された画像リクエストをサポートします。特別な &quot;image：&quot; URLスキームを介して画像を要求するQMLアプリケーションは、適切な画像プロバイダーに転送されて画像が読み込まれます。</target>
        </trans-unit>
        <trans-unit id="ee656c10b36be3adf856d1d9d60459c249296f12" translate="yes" xml:space="preserve">
          <source>While the Qt Quick module already provides a rich library of visual item types for use in a QML application, some developers may wish to define their own item-derived types in C++ and expose them to the QML type system. The easiest way to do this is to subclass &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;, which is the base type for all visual types in the Qt Quick module. See the &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; documentation for more details.</source>
          <target state="translated">Qt QuickモジュールはすでにQMLアプリケーションで使用するためのビジュアルアイテムタイプの豊富なライブラリを提供していますが、開発者によってはC ++で独自のアイテム派生タイプを定義してQMLタイプシステムに公開したい場合があります。これを行う最も簡単な方法は、&lt;a href=&quot;qquickitem&quot;&gt;QQuickItemの&lt;/a&gt;サブクラスを作成することです。これは、Qt Quickモジュールのすべてのビジュアルタイプの基本タイプです。詳細については、&lt;a href=&quot;qquickitem&quot;&gt;QQuickItemの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="6b18fffad1b970f0544fddddb700de339361caab" translate="yes" xml:space="preserve">
          <source>While the RGB and HSV color models are used for display on computer monitors, the CMYK model is used in the four-color printing process of printing presses and some hard-copy devices.</source>
          <target state="translated">RGBとHSVのカラーモデルはコンピュータモニターでの表示に使用されていますが、CMYKモデルは印刷機や一部のハードコピー装置の4色印刷プロセスで使用されています。</target>
        </trans-unit>
        <trans-unit id="11e570f8e057d209301344726ad6db9a786ee25f" translate="yes" xml:space="preserve">
          <source>While the camera state is changed to &lt;a href=&quot;qcamera#State-enum&quot;&gt;QCamera::ActiveState&lt;/a&gt;, starting the camera service can be asynchronous with the actual status reported with &lt;a href=&quot;qcamera#status-prop&quot;&gt;QCamera::status&lt;/a&gt; property.</source>
          <target state="translated">カメラの状態が&lt;a href=&quot;qcamera#State-enum&quot;&gt;QCamera :: ActiveStateに&lt;/a&gt;変更されている間、カメラサービスの開始は&lt;a href=&quot;qcamera#status-prop&quot;&gt;QCamera :: status&lt;/a&gt;プロパティで報告される実際のステータスと非同期になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="214a66a92cca6a7dbdb605829f4f9982ba3fffe2" translate="yes" xml:space="preserve">
          <source>While the example is simple, there is a lot going on behind the scenes. Whenever the current item changes, the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; sets the delegate's &lt;code&gt;Item::focus&lt;/code&gt; property. As the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; is a focus scope, this doesn't affect the rest of the application. However, if the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; itself has active focus this causes the delegate itself to receive active focus. In this example, the root type of the delegate is also a focus scope, which in turn gives active focus to the &lt;code&gt;Text&lt;/code&gt; type that actually performs the work of handling the &lt;code&gt;Return&lt;/code&gt; key.</source>
          <target state="translated">例は単純ですが、裏で多くのことが行われています。現在のアイテムが変更されるたびに、&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;はデリゲートの &lt;code&gt;Item::focus&lt;/code&gt; プロパティを設定します。&lt;a href=&quot;qml-qtquick-listview&quot;&gt;リストビューが&lt;/a&gt;フォーカス範囲で、これは、アプリケーションの他の部分に影響を与えません。ただし、&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;自体にアクティブフォーカスがある場合、デリゲート自体がアクティブフォーカスを受け取ります。この例では、デリゲートのルートタイプはフォーカススコープでもあり、フォーカススコープは、 &lt;code&gt;Return&lt;/code&gt; キーの処理作業を実際に実行する &lt;code&gt;Text&lt;/code&gt; タイプにアクティブフォーカスを与えます。</target>
        </trans-unit>
        <trans-unit id="ff5c637f31b54b94be971c280f66902ea205e702" translate="yes" xml:space="preserve">
          <source>While the integer based functions take values in the range 0-255 (except &lt;a href=&quot;qcolor#hue&quot;&gt;hue&lt;/a&gt;() which must have values within the range 0-359), the floating point functions accept values in the range 0.0 - 1.0.</source>
          <target state="translated">整数ベースの関数は0〜255の範囲の値（0〜359の範囲内の値を持つ必要がある&lt;a href=&quot;qcolor#hue&quot;&gt;色相&lt;/a&gt;（）を除く）を取りますが、浮動小数点関数は0.0〜1.0の範囲の値を受け入れます。</target>
        </trans-unit>
        <trans-unit id="7e88c44a246cc0acfeed178fecc66c12a45168dd" translate="yes" xml:space="preserve">
          <source>While the left mouse button is pressed, mouse movement along x-axis moves the camera left and right and movement along y-axis moves it up and down.</source>
          <target state="translated">マウスの左ボタンを押している間、X軸に沿ったマウスの動きはカメラを左右に動かし、Y軸に沿った動きはカメラを上下に動かします。</target>
        </trans-unit>
        <trans-unit id="238539bec1e5de17e07b2d331eb50ed9a24ba8a1" translate="yes" xml:space="preserve">
          <source>While the left mouse button is pressed, mouse movement along x-axis pans the camera and movement along y-axis tilts it.</source>
          <target state="translated">マウスの左ボタンを押している間、X軸に沿ったマウスの動きでカメラをパンし、Y軸に沿った動きでカメラを傾けます。</target>
        </trans-unit>
        <trans-unit id="956d26cf53341ebbab10aed503e09b8c67ae1e6c" translate="yes" xml:space="preserve">
          <source>While the macOS style fully supports high-DPI, the Windows desktop style currently has some limitations with certain scale factors. In these cases, consider using the Fusion style instead, which aims to support high-DPI in all cases.</source>
          <target state="translated">macOSスタイルは高DPIを完全にサポートしていますが、Windowsデスクトップスタイルでは現在のところ、特定のスケールファクターに制限があります。このような場合は、すべてのケースで高DPIをサポートすることを目的としたFusionスタイルの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="25ad61f405be913349b3f8c561eee5a0327bb8b2" translate="yes" xml:space="preserve">
          <source>While the macOS style fully supports high-DPI, the Windows desktop style currently has some limitations with certain scale factors. In these cases, consider using the Fusion style instead, which supports high-DPI in all cases.</source>
          <target state="translated">macOSスタイルは高DPIを完全にサポートしていますが、Windowsデスクトップスタイルでは、現在のところ、特定のスケールファクターに制限があります。このような場合は、すべてのケースで高DPIをサポートするFusionスタイルの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="78d1e6aef8ef4ed7cd7b8d0163ca00a8f0d7bbd3" translate="yes" xml:space="preserve">
          <source>While the model is updating the &lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;status&lt;/a&gt; of the model is set to &lt;code&gt;PlaceSearchModel.Loading&lt;/code&gt;. If the model is successfully updated the &lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;status&lt;/a&gt; is set to &lt;code&gt;PlaceSearchModel.Ready&lt;/code&gt;, while if it unsuccessfully completes, the &lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;status&lt;/a&gt; is set to &lt;code&gt;PlaceSearchModel.Error&lt;/code&gt; and the model cleared.</source>
          <target state="translated">モデルの更新中、モデルの&lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;ステータス&lt;/a&gt;は &lt;code&gt;PlaceSearchModel.Loading&lt;/code&gt; に設定されます。モデルが正常に更新された場合、&lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;ステータス&lt;/a&gt;は &lt;code&gt;PlaceSearchModel.Ready&lt;/code&gt; に設定されます。モデルが正常に完了しなかった場合、&lt;a href=&quot;qml-qtlocation-placesearchmodel#status-prop&quot;&gt;ステータス&lt;/a&gt;は &lt;code&gt;PlaceSearchModel.Error&lt;/code&gt; に設定され、モデルはクリアされます。</target>
        </trans-unit>
        <trans-unit id="82409defd12979c4c5e7be418ea87926591930b2" translate="yes" xml:space="preserve">
          <source>While the model is updating the &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;status&lt;/a&gt; of the model is set to &lt;code&gt;PlaceSearchSuggestionModel.Loading&lt;/code&gt;. If the model is successfully updated, the &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;status&lt;/a&gt; is set to &lt;code&gt;PlaceSearchSuggestionModel.Ready&lt;/code&gt;, while if it unsuccessfully completes, the &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;status&lt;/a&gt; is set to &lt;code&gt;PlaceSearchSuggestionModel.Error&lt;/code&gt; and the model cleared.</source>
          <target state="translated">モデルの更新中、モデルの&lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;ステータス&lt;/a&gt;は &lt;code&gt;PlaceSearchSuggestionModel.Loading&lt;/code&gt; に設定されます。モデルが正常に更新された場合、&lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;ステータス&lt;/a&gt;は &lt;code&gt;PlaceSearchSuggestionModel.Ready&lt;/code&gt; に設定されます。モデルが正常に完了しなかった場合、&lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#status-prop&quot;&gt;ステータス&lt;/a&gt;は &lt;code&gt;PlaceSearchSuggestionModel.Error&lt;/code&gt; に設定され、モデルはクリアされます。</target>
        </trans-unit>
        <trans-unit id="5c49b7bf8b7f523926345002ea02335ac0fed742" translate="yes" xml:space="preserve">
          <source>While the purpose of threads is to allow code to run in parallel, there are times where threads must stop and wait for other threads. For example, if two threads try to write to the same variable simultaneously, the result is undefined. The principle of forcing threads to wait for one another is called</source>
          <target state="translated">スレッドの目的はコードを並列に実行できるようにすることですが、スレッドが停止して他のスレッドを待たなければならない場合があります。例えば、2 つのスレッドが同時に同じ変数に書き込もうとすると、結果は未定義になります。スレッドを強制的に他のスレッドを待たせる原理は、以下のように呼ばれています。</target>
        </trans-unit>
        <trans-unit id="8892b409c35b28da95d5741e0a7c085aa4772a1d" translate="yes" xml:space="preserve">
          <source>While the recorder state is changed immediately to &lt;a href=&quot;qmediarecorder#State-enum&quot;&gt;QMediaRecorder::RecordingState&lt;/a&gt;, recording may start asynchronously, with &lt;a href=&quot;qmediarecorder#status-prop&quot;&gt;statusChanged&lt;/a&gt;(&lt;a href=&quot;qmediarecorder#Status-enum&quot;&gt;QMediaRecorder::RecordingStatus&lt;/a&gt;) signal emitted when recording starts.</source>
          <target state="translated">レコーダーの状態がすぐに&lt;a href=&quot;qmediarecorder#State-enum&quot;&gt;QMediaRecorder :: RecordingStateに&lt;/a&gt;変更される間、記録は非同期に開始され、記録の開始時に&lt;a href=&quot;qmediarecorder#status-prop&quot;&gt;statusChanged&lt;/a&gt;（&lt;a href=&quot;qmediarecorder#Status-enum&quot;&gt;QMediaRecorder :: RecordingStatus&lt;/a&gt;）シグナルが発行されます。</target>
        </trans-unit>
        <trans-unit id="378fb9d85b29aaa0bdd3082e5a9f0f6de11a9f08" translate="yes" xml:space="preserve">
          <source>While the render thread is preparing the new frame, the GUI thread calls &lt;a href=&quot;qquickitem#updatePolish&quot;&gt;QQuickItem::updatePolish&lt;/a&gt;() to do final touch-up of items before they are rendered.</source>
          <target state="translated">レンダリングスレッドが新しいフレームを準備している間、GUIスレッドは&lt;a href=&quot;qquickitem#updatePolish&quot;&gt;QQuickItem :: updatePolish&lt;/a&gt;（）を呼び出して、項目がレンダリングされる前に最終的な修正を行います。</target>
        </trans-unit>
        <trans-unit id="33b9994a33576273756053dd2bfc7d127452b698" translate="yes" xml:space="preserve">
          <source>While the render thread is rendering, the GUI is free to advance animations, process events, etc.</source>
          <target state="translated">レンダリングスレッドがレンダリングしている間は、GUIはアニメーションや処理イベントなどを自由に進めることができます。</target>
        </trans-unit>
        <trans-unit id="2836e2c9a00364d76e8fc6eb4948bfa345cdd8bf" translate="yes" xml:space="preserve">
          <source>While the right mouse button is pressed, mouse movement along x-axis pans the camera around the camera view center and movement along y-axis tilts it around the camera view center.</source>
          <target state="translated">マウスの右ボタンを押している間は、X軸に沿ったマウスの動きでカメラをカメラビュー中心にパンし、Y軸に沿った動きでカメラをカメラビュー中心に傾けることができます。</target>
        </trans-unit>
        <trans-unit id="c73547bc5f11f1dcff2753df8c5f50a9d2d0b231" translate="yes" xml:space="preserve">
          <source>While the stream is playing, you can set a notify interval in milliseconds with &lt;a href=&quot;qaudiooutput#setNotifyInterval&quot;&gt;setNotifyInterval&lt;/a&gt;(). This interval specifies the time between two emissions of the &lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;() signal. This is relative to the position in the stream, i.e., if the &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; is in the SuspendedState or the IdleState, the &lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;() signal is not emitted. A typical use-case would be to update a &lt;a href=&quot;qslider&quot;&gt;slider&lt;/a&gt; that allows seeking in the stream. If you want the time since playback started regardless of which states the audio output has been in, &lt;a href=&quot;qaudiooutput#elapsedUSecs&quot;&gt;elapsedUSecs&lt;/a&gt;() is the function for you.</source>
          <target state="translated">ストリームの再生中に、&lt;a href=&quot;qaudiooutput#setNotifyInterval&quot;&gt;setNotifyInterval&lt;/a&gt;（）を使用して通知間隔をミリ秒単位で設定できます。この間隔は、&lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;（）シグナルの2つの発行の間の時間を指定します。これは、ストリーム内の位置に関連しています。つまり、&lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt;がSuspendedStateまたはIdleStateにある場合、&lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;（）シグナルは発行されません。典型的な使用例は、ストリーム内のシークを可能にする&lt;a href=&quot;qslider&quot;&gt;スライダー&lt;/a&gt;を更新することです。オーディオ出力がどの状態であるかに関係なく、再生が開始されてからの時間を知りたい場合は、&lt;a href=&quot;qaudiooutput#elapsedUSecs&quot;&gt;expededUSecs&lt;/a&gt;（）が便利です。</target>
        </trans-unit>
        <trans-unit id="3f52ae25e878f476dc42b3fe4bc01a6ca0b253de" translate="yes" xml:space="preserve">
          <source>While the stream is playing, you can set a notify interval in milliseconds with &lt;a href=&quot;qaudiooutput#setNotifyInterval&quot;&gt;setNotifyInterval&lt;/a&gt;(). This interval specifies the time between two emissions of the &lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;() signal. This is relative to the position in the stream, i.e., if the QAudioOutput is in the SuspendedState or the IdleState, the &lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;() signal is not emitted. A typical use-case would be to update a &lt;a href=&quot;qslider&quot;&gt;slider&lt;/a&gt; that allows seeking in the stream. If you want the time since playback started regardless of which states the audio output has been in, &lt;a href=&quot;qaudiooutput#elapsedUSecs&quot;&gt;elapsedUSecs&lt;/a&gt;() is the function for you.</source>
          <target state="translated">ストリームの再生中に、&lt;a href=&quot;qaudiooutput#setNotifyInterval&quot;&gt;setNotifyInterval&lt;/a&gt;（）を使用して通知間隔をミリ秒単位で設定できます。この間隔は、&lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;（）信号の2つの放出間の時間を指定します。これは、ストリーム内の位置に関連しています。つまり、QAudioOutputがSuspendedStateまたはIdleStateにある場合、&lt;a href=&quot;qaudiooutput#notify&quot;&gt;notify&lt;/a&gt;（）信号は発行されません。典型的なユースケースは、ストリームでのシークを可能にする&lt;a href=&quot;qslider&quot;&gt;スライダー&lt;/a&gt;を更新することです。オーディオ出力がどの状態にあるかに関係なく、再生が開始されてからの時間を必要とする場合は、&lt;a href=&quot;qaudiooutput#elapsedUSecs&quot;&gt;elapsedUSecs&lt;/a&gt;（）が最適な関数です。</target>
        </trans-unit>
        <trans-unit id="c8000f6c4a4a4fdf29886c2d5b63a829f3261e81" translate="yes" xml:space="preserve">
          <source>While the supported settings are unknown in this state, it's allowed to set the camera capture settings like codec, resolution, or frame rate.</source>
          <target state="translated">この状態では対応している設定は不明ですが、コーデックや解像度、フレームレートなどカメラのキャプチャ設定をすることができます。</target>
        </trans-unit>
        <trans-unit id="5e63a013e47eab68d0585a4350fc0e24e27e3ba9" translate="yes" xml:space="preserve">
          <source>While the supported settings are unknown in this state, you can still set the camera capture settings like codec, resolution, or frame rate.</source>
          <target state="translated">この状態ではサポートされている設定は不明ですが、コーデックや解像度、フレームレートなどのカメラキャプチャ設定は可能です。</target>
        </trans-unit>
        <trans-unit id="890d662caad82c18a023c4949978cc81f5a914ad" translate="yes" xml:space="preserve">
          <source>While the triggering of this signal may be considered an error condition, it does not imply the emission of the &lt;code&gt;error()&lt;/code&gt; signal. Only the emission of &lt;code&gt;requestTimeout()&lt;/code&gt; is required to indicate a timeout.</source>
          <target state="translated">このシグナルのトリガーはエラー状態と見なされる場合がありますが、 &lt;code&gt;error()&lt;/code&gt; シグナルの発行を意味するものではありません。タイムアウトを示すには、 &lt;code&gt;requestTimeout()&lt;/code&gt; の発行のみが必要です。</target>
        </trans-unit>
        <trans-unit id="3db5f5027c5bfbd27756e1a4d5f2db9c6ab87ab4" translate="yes" xml:space="preserve">
          <source>While the triggering of this signal may be considered an error condition, it does not imply the emission of the &lt;code&gt;error()&lt;/code&gt; signal. Only the emission of &lt;code&gt;updateTimeout()&lt;/code&gt; is required to indicate a timeout.</source>
          <target state="translated">このシグナルのトリガーはエラー状態と見なされる場合がありますが、 &lt;code&gt;error()&lt;/code&gt; シグナルの発行を意味するものではありません。タイムアウトを示すために必要なのは、 &lt;code&gt;updateTimeout()&lt;/code&gt; の発行だけです。</target>
        </trans-unit>
        <trans-unit id="1965514ae7dbcb22178d0c72da3b0f18ece39132" translate="yes" xml:space="preserve">
          <source>While the type has a name and a type, it cannot be created, and the given error</source>
          <target state="translated">型が名前と型を持っている間は、型を作成することができず、与えられたエラー</target>
        </trans-unit>
        <trans-unit id="b6cec89d64ecf87ac7795c052dd8a1107c1c1a45" translate="yes" xml:space="preserve">
          <source>While the type has a name and a type, it cannot be created. An error message with the given</source>
          <target state="translated">型に名前と型があるのに、型を作成することはできません。与えられた</target>
        </trans-unit>
        <trans-unit id="a01d732f1e6078a18b3d77f11f5920c2a0f80499" translate="yes" xml:space="preserve">
          <source>While this is a convenient way to store array and map-type values, you must be aware that the &lt;code&gt;items&lt;/code&gt; and &lt;code&gt;attributes&lt;/code&gt; properties above are</source>
          <target state="translated">これは配列とマップタイプの値を格納する便利な方法ですが、上記の &lt;code&gt;items&lt;/code&gt; と &lt;code&gt;attributes&lt;/code&gt; プロパティは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="19234880a4c7a1d117b722d68478a705dd237820" translate="yes" xml:space="preserve">
          <source>While this property is introduced in Qt 5.5, the related accessor functions exist since the first version of this class.</source>
          <target state="translated">このプロパティは Qt 5.5 で導入されましたが、関連するアクセサ関数はこのクラスの最初のバージョンから存在しています。</target>
        </trans-unit>
        <trans-unit id="14f55592618070d907f9667b31b4b236d2545fe0" translate="yes" xml:space="preserve">
          <source>While this property was introduced in 5.10, the corresponding accessor method has always been there.</source>
          <target state="translated">このプロパティは5.10で導入されましたが、対応するアクセサメソッドは常に存在しています。</target>
        </trans-unit>
        <trans-unit id="3487f0c2d4d848ba0d1eeb18fa26d7605ad3426b" translate="yes" xml:space="preserve">
          <source>While using &lt;a href=&quot;qml-qtremoteobjects-qtremoteobjects&quot;&gt;Qt Remote Objects&lt;/a&gt; for communication is a cross-platform solution, &lt;a href=&quot;qandroidbinder&quot;&gt;QAndroidBinder&lt;/a&gt; Class Reference} is Android specific. &lt;a href=&quot;qandroidbinder&quot;&gt;QAndroidBinder&lt;/a&gt; is a convenience class that implements the most important methods in &lt;a href=&quot;https://developer.android.com/reference/android/os/Binder.html&quot;&gt;Android: Binder&lt;/a&gt;. It allows sending &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; or &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; objcets between processes.</source>
          <target state="translated">使用しながら、&lt;a href=&quot;qml-qtremoteobjects-qtremoteobjects&quot;&gt;Qtのリモートオブジェクトを&lt;/a&gt;通信するためにはクロスプラットフォームソリューションである、&lt;a href=&quot;qandroidbinder&quot;&gt;QAndroidBinder&lt;/a&gt;クラスリファレンスは}アンドロイド特異的です。&lt;a href=&quot;qandroidbinder&quot;&gt;QAndroidBinder&lt;/a&gt;は、&lt;a href=&quot;https://developer.android.com/reference/android/os/Binder.html&quot;&gt;Androidで&lt;/a&gt;最も重要なメソッドであるBinderを実装する便利なクラスです。これにより、プロセス間で&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;または&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;オブジェクトを送信できます。</target>
        </trans-unit>
        <trans-unit id="4bbe1a0f6b383349e0d6ab2f7de0714b0c79ce7c" translate="yes" xml:space="preserve">
          <source>While verifying test results by capturing and comparing bitmaps is sometimes necessary, it can be quite fragile and labor-intensive.</source>
          <target state="translated">ビットマップをキャプチャして比較することでテスト結果を検証することが必要な場合もありますが、それは非常に脆弱で手間のかかる作業になります。</target>
        </trans-unit>
        <trans-unit id="4a2a6a35c6ca4d0d3ac0d2ce600a59b30c8d8a82" translate="yes" xml:space="preserve">
          <source>While we prefer to name our C++ source files &lt;code&gt;.cpp&lt;/code&gt;, you can use any other extension, such as &lt;code&gt;.C&lt;/code&gt;, &lt;code&gt;.cc&lt;/code&gt;, &lt;code&gt;.CC&lt;/code&gt;, &lt;code&gt;.cxx&lt;/code&gt;, and &lt;code&gt;.c++&lt;/code&gt;, if you prefer.</source>
          <target state="translated">我々はC ++のソースファイル名を好む一方で &lt;code&gt;.cpp&lt;/code&gt; ファイルを、次のようなその他の拡張子、使用することができます &lt;code&gt;.C&lt;/code&gt; 、 &lt;code&gt;.cc&lt;/code&gt; に、 &lt;code&gt;.CC&lt;/code&gt; 、 &lt;code&gt;.cxx&lt;/code&gt; 、および &lt;code&gt;.c++&lt;/code&gt; ご希望の場合は、。</target>
        </trans-unit>
        <trans-unit id="040a4d00e5bebdab30cb275ef54f205c01e7f2d8" translate="yes" xml:space="preserve">
          <source>While writing, the contents will be written to a temporary file, and if no error happened, &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() will move it to the final file. This ensures that no data at the final file is lost in case an error happens while writing, and no partially-written file is ever present at the final location. Always use &lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; when saving entire documents to disk.</source>
          <target state="translated">書き込み中、コンテンツは一時ファイルに書き込まれ、エラーが発生しなかった場合、&lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;（）はそれを最終ファイルに移動します。これにより、書き込み中にエラーが発生した場合に最終ファイルのデータが失われることがなくなり、部分的に書き込まれたファイルが最終的な場所に存在することがなくなります。ドキュメント全体をディスクに保存するときは、常に&lt;a href=&quot;qsavefile&quot;&gt;QSaveFileを&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="83cb1a8109e22dda2f457728fc209701acd558d6" translate="yes" xml:space="preserve">
          <source>While writing, the contents will be written to a temporary file, and if no error happened, &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() will move it to the final file. This ensures that no data at the final file is lost in case an error happens while writing, and no partially-written file is ever present at the final location. Always use QSaveFile when saving entire documents to disk.</source>
          <target state="translated">書き込み中、内容は一時ファイルに書き込まれ、エラーが発生しなかった場合、&lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;（）はそれを最終ファイルに移動します。これにより、書き込み中にエラーが発生した場合に最終ファイルのデータが失われることはなく、部分的に書き込まれたファイルが最終的な場所に存在することもありません。ドキュメント全体をディスクに保存するときは、常にQSaveFileを使用してください。</target>
        </trans-unit>
        <trans-unit id="b4261e57f9b901a912688d75b22edcb877eeea97" translate="yes" xml:space="preserve">
          <source>Whilst SAX2 leaves it to the user to define and implement whatever features are required, support for</source>
          <target state="translated">SAX2では、ユーザーが必要とする機能を定義して実装することができます。</target>
        </trans-unit>
        <trans-unit id="ee1c3d063ab64e3830ce46d40aa25b31fd6708f9" translate="yes" xml:space="preserve">
          <source>Whilst reading (a SAX2 parser is usually referred to as &quot;reader&quot;) the above document three events would be triggered:</source>
          <target state="translated">SAX2 パーサの読み込み中(SAX2 パーサは通常「リーダ」と呼ばれます)に、上記のドキュメントの 3 つのイベントがトリガーされます。</target>
        </trans-unit>
        <trans-unit id="7aa362991263dbce17194eb62185c8c8a4149920" translate="yes" xml:space="preserve">
          <source>Whilst this class provides access to any type of extension, only some are guaranteed to be returned in a format that will remain unchanged between releases. The &lt;a href=&quot;qsslcertificateextension#isSupported&quot;&gt;isSupported&lt;/a&gt;() method returns &lt;code&gt;true&lt;/code&gt; for extensions where this is the case.</source>
          <target state="translated">このクラスは任意のタイプの拡張へのアクセスを提供しますが、リリース間で変更されない形式で返されることが保証されているのは一部のみです。&lt;a href=&quot;qsslcertificateextension#isSupported&quot;&gt;isSupported&lt;/a&gt;（）メソッドを返し &lt;code&gt;true&lt;/code&gt; このような場合は拡張機能。</target>
        </trans-unit>
        <trans-unit id="4716b4e4fbe6f125c22cea63b8d59f96bd0d83c4" translate="yes" xml:space="preserve">
          <source>Whilst this is a fast and simple approach to read XML documents, manipulation is difficult because data is not stored, simply handled and discarded serially. The &lt;a href=&quot;xml-dom-tml#&quot;&gt;DOM interface&lt;/a&gt; reads in and stores the whole document in a tree structure; this takes more memory, but makes it easier to manipulate the document's structure.</source>
          <target state="translated">これはXML文書を読み取るための高速でシンプルなアプローチですが、データは保存されず、単純に連続して処理および破棄されるため、操作は困難です。&lt;a href=&quot;xml-dom-tml#&quot;&gt;DOMインタフェースを&lt;/a&gt;読み込み、ツリー構造で文書全体を保存します。これにより多くのメモリが必要になりますが、ドキュメントの構造を操作しやすくなります。</target>
        </trans-unit>
        <trans-unit id="37619fc13053f82b7cb7da3d24ceb1598ab6d05c" translate="yes" xml:space="preserve">
          <source>White</source>
          <target state="translated">White</target>
        </trans-unit>
        <trans-unit id="be119f3e9b0742347aed947d1e924019cdc133d2" translate="yes" xml:space="preserve">
          <source>WhiteBalance</source>
          <target state="translated">WhiteBalance</target>
        </trans-unit>
        <trans-unit id="4190ce86b53993cb85718f334bfe5be99c073792" translate="yes" xml:space="preserve">
          <source>WhiteBalanceAuto</source>
          <target state="translated">WhiteBalanceAuto</target>
        </trans-unit>
        <trans-unit id="8939e2ac028fecf3300eb31b7396ce21fc017d61" translate="yes" xml:space="preserve">
          <source>WhiteBalanceCloudy</source>
          <target state="translated">WhiteBalanceCloudy</target>
        </trans-unit>
        <trans-unit id="b90e622dfa822b4dbb410c3ab4b32c80a54c0986" translate="yes" xml:space="preserve">
          <source>WhiteBalanceFlash</source>
          <target state="translated">WhiteBalanceFlash</target>
        </trans-unit>
        <trans-unit id="c1eab86531fbb329775b9990bfbb92b507eff540" translate="yes" xml:space="preserve">
          <source>WhiteBalanceFluorescent</source>
          <target state="translated">WhiteBalanceFluorescent</target>
        </trans-unit>
        <trans-unit id="893c1c3eff47e7fe498e0c6a700c33fd7380079c" translate="yes" xml:space="preserve">
          <source>WhiteBalanceManual</source>
          <target state="translated">WhiteBalanceManual</target>
        </trans-unit>
        <trans-unit id="d166e9c2606b779a48db9dd1654fdcd0f3aff31f" translate="yes" xml:space="preserve">
          <source>WhiteBalanceShade</source>
          <target state="translated">WhiteBalanceShade</target>
        </trans-unit>
        <trans-unit id="28b156f19ce49170e930c3340ac5df603218a633" translate="yes" xml:space="preserve">
          <source>WhiteBalanceSunlight</source>
          <target state="translated">WhiteBalanceSunlight</target>
        </trans-unit>
        <trans-unit id="23d7b3ae856fedabb39a2ada5effb06748e4eccf" translate="yes" xml:space="preserve">
          <source>WhiteBalanceSunset</source>
          <target state="translated">WhiteBalanceSunset</target>
        </trans-unit>
        <trans-unit id="6ae0c09dcbe702fd9cf02b30e60a3b7a8ba80fa8" translate="yes" xml:space="preserve">
          <source>WhiteBalanceTungsten</source>
          <target state="translated">WhiteBalanceTungsten</target>
        </trans-unit>
        <trans-unit id="9f3680581edbf2de7a09abd43359e2ff52fb8c75" translate="yes" xml:space="preserve">
          <source>WhiteBalanceVendor</source>
          <target state="translated">WhiteBalanceVendor</target>
        </trans-unit>
        <trans-unit id="47b13cdb0607925057b8e9d36b0386d1a11eb54c" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
          <target state="translated">Whitespace</target>
        </trans-unit>
        <trans-unit id="cf484dd6e26d5d8b523ce770ee700fdbc2cc42c0" translate="yes" xml:space="preserve">
          <source>Whitespace characters are all characters for which &lt;a href=&quot;qchar#isSpace&quot;&gt;QChar::isSpace&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">空白文字は、&lt;a href=&quot;qchar#isSpace&quot;&gt;QChar :: isSpace&lt;/a&gt;（）が &lt;code&gt;true&lt;/code&gt; を返すすべての文字です。</target>
        </trans-unit>
        <trans-unit id="1bfce1148b8b147bf4f6c5c29d0b2ac864eccd7e" translate="yes" xml:space="preserve">
          <source>Whitespace is</source>
          <target state="translated">ホワイトスペースは</target>
        </trans-unit>
        <trans-unit id="619560393f5f70fda43352d58eaed0fa0beb1331" translate="yes" xml:space="preserve">
          <source>Whitespace means any character for which &lt;a href=&quot;qchar#isSpace&quot;&gt;QChar::isSpace&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;. This includes the ASCII characters '\t', '\n', '\v', '\f', '\r', and ' '.</source>
          <target state="translated">空白とは、&lt;a href=&quot;qchar#isSpace&quot;&gt;QChar :: isSpace&lt;/a&gt;（）が &lt;code&gt;true&lt;/code&gt; を返す任意の文字を意味します。これには、ASCII文字「\ t」、「\ n」、「\ v」、「\ f」、「\ r」、および「」が含まれます。</target>
        </trans-unit>
        <trans-unit id="7bb86b55ec209f85b6753199094e7094ccac938d" translate="yes" xml:space="preserve">
          <source>Whitespace means any character for which the standard C++ &lt;code&gt;isspace()&lt;/code&gt; function returns &lt;code&gt;true&lt;/code&gt; in the C locale. This includes the ASCII characters '\t', '\n', '\v', '\f', '\r', and ' '.</source>
          <target state="translated">空白とは、Cロケールで標準C ++の &lt;code&gt;isspace()&lt;/code&gt; 関数が &lt;code&gt;true&lt;/code&gt; を返す任意の文字を意味します。これには、ASCII文字「\ t」、「\ n」、「\ v」、「\ f」、「\ r」、および「」が含まれます。</target>
        </trans-unit>
        <trans-unit id="761de1d78a55a5525fb526764547bc19aba5b107" translate="yes" xml:space="preserve">
          <source>Whitespace means any character for which the standard C++ &lt;code&gt;isspace()&lt;/code&gt; function returns &lt;code&gt;true&lt;/code&gt; in the C locale. This includes the ASCII isspace() function returns &lt;code&gt;true&lt;/code&gt; in the C locale. This includes the ASCII characters '\t', '\n', '\v', '\f', '\r', and ' '.</source>
          <target state="translated">空白とは、Cロケールで標準C ++の &lt;code&gt;isspace()&lt;/code&gt; 関数が &lt;code&gt;true&lt;/code&gt; を返す任意の文字を意味します。これには、CロケールでASCII isspace（）関数が &lt;code&gt;true&lt;/code&gt; を返すことが含まれます。これには、ASCII文字「\ t」、「\ n」、「\ v」、「\ f」、「\ r」、および「」が含まれます。</target>
        </trans-unit>
        <trans-unit id="2233df9a38ffce2a090e971a0244daca24a2351d" translate="yes" xml:space="preserve">
          <source>Whole number, e.g. 0, 10, or -20</source>
          <target state="translated">0、10、または-20などの整数。</target>
        </trans-unit>
        <trans-unit id="94b58a9bbcda32cd58aa6773214ce8f8577f38f2" translate="yes" xml:space="preserve">
          <source>Why Does Qt Use Moc for Signals and Slots?</source>
          <target state="translated">Qt はなぜシグナルやスロットに Moc を使うのですか?</target>
        </trans-unit>
        <trans-unit id="bf8ddd04f924762daf335c1039abb1518d5d7a00" translate="yes" xml:space="preserve">
          <source>Why Single Execution Mode Is Much Faster</source>
          <target state="translated">シングル実行モードがはるかに高速な理由</target>
        </trans-unit>
        <trans-unit id="6768deb223077e5a055916dae8c4c8a62d6eac6d" translate="yes" xml:space="preserve">
          <source>Why Standard Mode Is Slow</source>
          <target state="translated">標準モードはなぜ遅いのか</target>
        </trans-unit>
        <trans-unit id="d28289455c6a63f4c4d5e5674b844c64ced4953a" translate="yes" xml:space="preserve">
          <source>Why Use Multi-Process</source>
          <target state="translated">マルチプロセスを使用する理由</target>
        </trans-unit>
        <trans-unit id="59c0f38fe6c70095f1fe1a57575de23f6686b98e" translate="yes" xml:space="preserve">
          <source>Why Use Wayland Instead of X11 or Custom Solutions</source>
          <target state="translated">X11やカスタムソリューションではなく、Waylandを使用する理由</target>
        </trans-unit>
        <trans-unit id="75faf730d6357ede69847c7a7ca9b978b5db0d56" translate="yes" xml:space="preserve">
          <source>Why are my elements created in the wrong order?</source>
          <target state="translated">要素が間違った順番で作成されてしまうのはなぜですか?</target>
        </trans-unit>
        <trans-unit id="6da49307967cc44ac3bddaa3c5b248c5bd424e9f" translate="yes" xml:space="preserve">
          <source>Why can't I use &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt; in my XQuery?</source>
          <target state="translated">XQueryで &lt;code&gt;true&lt;/code&gt; と &lt;code&gt;false&lt;/code&gt; を使用できないのはなぜですか？</target>
        </trans-unit>
        <trans-unit id="8dd571ea364273914dcd00b60733716f9ef1f2fe" translate="yes" xml:space="preserve">
          <source>Why didn't my expression get evaluated?</source>
          <target state="translated">なぜ私の式は評価されなかったのでしょうか?</target>
        </trans-unit>
        <trans-unit id="a4372bfde3e7592aabced7cd95c0ddefabee172a" translate="yes" xml:space="preserve">
          <source>Why didn't my path expression match anything?</source>
          <target state="translated">なぜ私のパス表現は何も一致しなかったのでしょうか?</target>
        </trans-unit>
        <trans-unit id="a247f5521396b787b90f7af1088f96f87e2bf597" translate="yes" xml:space="preserve">
          <source>Why doesn't my FLWOR behave as expected?</source>
          <target state="translated">なぜ私のFLWORは期待通りの動作をしないのでしょうか?</target>
        </trans-unit>
        <trans-unit id="83d0bcb2a31ec1e790fdb9b17582bad006644268" translate="yes" xml:space="preserve">
          <source>Why doesn't my return clause work?</source>
          <target state="translated">返却条項が効かないのはなぜ?</target>
        </trans-unit>
        <trans-unit id="8c43626059ddc397faa99b3542a5abebf426b981" translate="yes" xml:space="preserve">
          <source>WiMAX</source>
          <target state="translated">WiMAX</target>
        </trans-unit>
        <trans-unit id="7d66c73954780bbe3b7d4d83a7707b18dddd48fc" translate="yes" xml:space="preserve">
          <source>Wide logo image file. This has to be 310x150 pixels. Supported on all Windows Store App platforms. Default provided by the mkspec.</source>
          <target state="translated">ワイドなロゴ画像ファイルです。310x150ピクセルでなければなりません。すべての Windows Store App プラットフォームでサポートされています。デフォルトは mkspec で提供されています。</target>
        </trans-unit>
        <trans-unit id="df15305cc141d8294713eba43aaee44d1edfe3bd" translate="yes" xml:space="preserve">
          <source>Widget</source>
          <target state="translated">Widget</target>
        </trans-unit>
        <trans-unit id="1e44fcf40bcd1a072dad4b1c2c9eb0730c5aab3a" translate="yes" xml:space="preserve">
          <source>Widget Appearance and Style Related Classes</source>
          <target state="translated">ウィジェットの外観とスタイル関連クラス</target>
        </trans-unit>
        <trans-unit id="16f89fdc158507a8c9b68b673198d439286de1d9" translate="yes" xml:space="preserve">
          <source>Widget Appearance and Style-Related Classes</source>
          <target state="translated">ウィジェットの外観とスタイル関連クラス</target>
        </trans-unit>
        <trans-unit id="31e064aa645d7208a9b4c1753e3e88ac210d308a" translate="yes" xml:space="preserve">
          <source>Widget Attribute</source>
          <target state="translated">ウィジェット属性</target>
        </trans-unit>
        <trans-unit id="8a5e70773dcc3d881bcad04771d137842fe11c48" translate="yes" xml:space="preserve">
          <source>Widget Editing Mode</source>
          <target state="translated">ウィジェット編集モード</target>
        </trans-unit>
        <trans-unit id="82cba10de183bd2d066e4d81d2062e021a9ffc67" translate="yes" xml:space="preserve">
          <source>Widget Reference</source>
          <target state="translated">ウィジェットリファレンス</target>
        </trans-unit>
        <trans-unit id="669cd26f040ce8a52269e10701598141be881183" translate="yes" xml:space="preserve">
          <source>Widget Style Sheets</source>
          <target state="translated">ウィジェットスタイルシート</target>
        </trans-unit>
        <trans-unit id="decfc1956f3c1dad2ed2b8ec3230103ae01f3cec" translate="yes" xml:space="preserve">
          <source>Widget Walkthrough</source>
          <target state="translated">ウィジェットチュートリアル</target>
        </trans-unit>
        <trans-unit id="3fb06c3da187ae118abe889db66ce6d91eba057e" translate="yes" xml:space="preserve">
          <source>Widget based examples layout incorrectly in iOS.</source>
          <target state="translated">iOSでウィジェットベースの例が正しくレイアウトされていません。</target>
        </trans-unit>
        <trans-unit id="bd612066fd6c8940320fa98b2cbea5a4a13e6ed1" translate="yes" xml:space="preserve">
          <source>Widget for displaying the contents of a QGraphicsScene</source>
          <target state="translated">QGraphicsSceneの内容を表示するためのウィジェット</target>
        </trans-unit>
        <trans-unit id="4665d8fe3f895566ba2adc2b5e8336a1ac72d65b" translate="yes" xml:space="preserve">
          <source>Widget for editing dates and times</source>
          <target state="translated">日付と時間を編集するためのウィジェット</target>
        </trans-unit>
        <trans-unit id="e943a3b202aca7f181da9d270c259094ac6bfb6a" translate="yes" xml:space="preserve">
          <source>Widget for editing dates based on the QDateTimeEdit widget</source>
          <target state="translated">QDateTimeEditウィジェットをベースにした日付編集用ウィジェット</target>
        </trans-unit>
        <trans-unit id="40ecd7df1c60b8c35ece200872419d71bf64a6aa" translate="yes" xml:space="preserve">
          <source>Widget for editing times based on the QDateTimeEdit widget</source>
          <target state="translated">QDateTimeEditウィジェットをベースにした時刻編集用ウィジェット</target>
        </trans-unit>
        <trans-unit id="57fe7643fd42b7d71e68aafba7d777e70cececfe" translate="yes" xml:space="preserve">
          <source>Widget for macOS that can be used to wrap arbitrary Cocoa views (i.e., NSView subclasses) and insert them into Qt hierarchies</source>
          <target state="translated">任意の Cocoa ビュー (NSView サブクラスなど)をラップして Qt の階層に挿入するために使用できる macOS 用のウィジェットです。</target>
        </trans-unit>
        <trans-unit id="ba8679b21e1cd84939151ffa87f19f70ed2e7abd" translate="yes" xml:space="preserve">
          <source>Widget for macOS that provides a way to put Qt widgets into Cocoa hierarchies</source>
          <target state="translated">Qt ウィジェットを Cocoa の階層に配置する方法を提供する macOS 用ウィジェット</target>
        </trans-unit>
        <trans-unit id="3ea7e844a83e697d848193d0d86e6fe16d53be8e" translate="yes" xml:space="preserve">
          <source>Widget for previewing page layouts for printer output</source>
          <target state="translated">プリンタ出力用のページレイアウトをプレビューするためのウィジェット</target>
        </trans-unit>
        <trans-unit id="3f50b33af17dd83c26762db6efa9c0abf87ac76e" translate="yes" xml:space="preserve">
          <source>Widget items do not support modality.</source>
          <target state="translated">ウィジェット項目はモダリティをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="60e1290cd940a65020cfcf939c14de3016ab3930" translate="yes" xml:space="preserve">
          <source>Widget layout needs to be redone.</source>
          <target state="translated">ウィジェットのレイアウトをやり直す必要があります。</target>
        </trans-unit>
        <trans-unit id="ecb1b35e7261d239875412961edd8155c83fc298" translate="yes" xml:space="preserve">
          <source>Widget or Window focus is about to change (&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;)</source>
          <target state="translated">ウィジェットまたはウィンドウのフォーカスが変更されようとしています（&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="6a56d7d6d3eda0d0f9b2013bbf44fdd531ae93b6" translate="yes" xml:space="preserve">
          <source>Widget or Window gains keyboard focus (&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;).</source>
          <target state="translated">ウィジェットまたはウィンドウがキーボードフォーカスを取得します（&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b7260b87e9f172faa1c09738f92fd4ba736eceab" translate="yes" xml:space="preserve">
          <source>Widget or Window loses keyboard focus (&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;).</source>
          <target state="translated">ウィジェットまたはウィンドウがキーボードフォーカスを失います（&lt;a href=&quot;qfocusevent&quot;&gt;QFocusEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7a5b139b81da872d2ffc1ade6fb2283143ea9618" translate="yes" xml:space="preserve">
          <source>Widget that can be docked inside a QMainWindow or floated as a top-level window on the desktop</source>
          <target state="translated">QMainWindow内にドッキングしたり、デスクトップ上のトップレベルウィンドウとしてフロートさせることができるウィジェット</target>
        </trans-unit>
        <trans-unit id="e2ce56d39cc1d9d25a590bb2970603c4447d82ed" translate="yes" xml:space="preserve">
          <source>Widget that is used to display the contents of Scalable Vector Graphics (SVG) files</source>
          <target state="translated">SVG(Scalable Vector Graphics)ファイルの内容を表示するためのウィジェット</target>
        </trans-unit>
        <trans-unit id="66b55f4774ddd3de11f64896fb31548eea207c27" translate="yes" xml:space="preserve">
          <source>Widget that is used to edit and display both plain and rich text</source>
          <target state="translated">プレーンテキストとリッチテキストの両方を編集して表示するために使用されるウィジェット</target>
        </trans-unit>
        <trans-unit id="548ced6612af891b2750ce5cb89c5f41ea5df05d" translate="yes" xml:space="preserve">
          <source>Widget that is used to edit and display plain text</source>
          <target state="translated">プレーンテキストを編集して表示するためのウィジェット</target>
        </trans-unit>
        <trans-unit id="cee9cdd37b180dbf0d8251a214ae81a450ff6719" translate="yes" xml:space="preserve">
          <source>Widget that presents buttons in a layout that is appropriate to the current widget style</source>
          <target state="translated">現在のウィジェットスタイルに適したレイアウトでボタンを表示するウィジェット</target>
        </trans-unit>
        <trans-unit id="d339946ed5020f7b0aa387e1de734f5abb40c3bd" translate="yes" xml:space="preserve">
          <source>Widget was closed (&lt;a href=&quot;qcloseevent&quot;&gt;QCloseEvent&lt;/a&gt;).</source>
          <target state="translated">ウィジェットが閉じられました（&lt;a href=&quot;qcloseevent&quot;&gt;QCloseEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="07985052ee7750ec4f2a85bcac585e5a9c4788a3" translate="yes" xml:space="preserve">
          <source>Widget was hidden (&lt;a href=&quot;qhideevent&quot;&gt;QHideEvent&lt;/a&gt;).</source>
          <target state="translated">ウィジェットが非表示になりました（&lt;a href=&quot;qhideevent&quot;&gt;QHideEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="033bbc513d6dc62765474a6197875b4ced504eeb" translate="yes" xml:space="preserve">
          <source>Widget was moved (&lt;a href=&quot;qgraphicsscenemoveevent&quot;&gt;QGraphicsSceneMoveEvent&lt;/a&gt;).</source>
          <target state="translated">ウィジェットが移動されました（&lt;a href=&quot;qgraphicsscenemoveevent&quot;&gt;QGraphicsSceneMoveEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="518f7ec608083e16824e10a10b08f51fe6ab73b5" translate="yes" xml:space="preserve">
          <source>Widget was resized (&lt;a href=&quot;qgraphicssceneresizeevent&quot;&gt;QGraphicsSceneResizeEvent&lt;/a&gt;).</source>
          <target state="translated">ウィジェットのサイズが変更されました（&lt;a href=&quot;qgraphicssceneresizeevent&quot;&gt;QGraphicsSceneResizeEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="5eab2ea2104372c35211fb62f52c62a0a93daa42" translate="yes" xml:space="preserve">
          <source>Widget was shown on screen (&lt;a href=&quot;qshowevent&quot;&gt;QShowEvent&lt;/a&gt;).</source>
          <target state="translated">ウィジェットが画面に表示されました（&lt;a href=&quot;qshowevent&quot;&gt;QShowEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="9c7ef8d3feb63b591ee1fab94e628138b8697817" translate="yes" xml:space="preserve">
          <source>Widget's enabled state has changed.</source>
          <target state="translated">ウィジェットの有効化状態が変更されました。</target>
        </trans-unit>
        <trans-unit id="7cb5faf0a4f21248e054a55edf6eabe09c1c8c5f" translate="yes" xml:space="preserve">
          <source>Widget's font has changed.</source>
          <target state="translated">ウィジェットのフォントを変更しました。</target>
        </trans-unit>
        <trans-unit id="d4ac6f485c980b110b2956c14e39abda18f5f080" translate="yes" xml:space="preserve">
          <source>Widget's icon text has been changed. (Deprecated)</source>
          <target state="translated">ウィジェットのアイコンテキストを変更しました。(非推奨)</target>
        </trans-unit>
        <trans-unit id="41c8a56257c77412816e996cea5101822508caa2" translate="yes" xml:space="preserve">
          <source>Widget's position changed (&lt;a href=&quot;qmoveevent&quot;&gt;QMoveEvent&lt;/a&gt;).</source>
          <target state="translated">ウィジェットの位置が変更されました（&lt;a href=&quot;qmoveevent&quot;&gt;QMoveEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="32744d45deebf14ce0ec6527d0dab358dc236133" translate="yes" xml:space="preserve">
          <source>Widget's read-only state has changed (since Qt 5.4).</source>
          <target state="translated">Widgetの読み込み専用状態が変更されました(Qt 5.4以降)。</target>
        </trans-unit>
        <trans-unit id="54318932bd246e420fc1b5da13204b7213a11ddb" translate="yes" xml:space="preserve">
          <source>Widget's size changed (&lt;a href=&quot;qresizeevent&quot;&gt;QResizeEvent&lt;/a&gt;).</source>
          <target state="translated">ウィジェットのサイズが変更されました（&lt;a href=&quot;qresizeevent&quot;&gt;QResizeEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="29db40d8bb7ea1e90d1dbc18279543169a4ce3ed" translate="yes" xml:space="preserve">
          <source>Widget's style has been changed.</source>
          <target state="translated">ウィジェットのスタイルを変更しました。</target>
        </trans-unit>
        <trans-unit id="bf8a6678a1e36e3d2c45861b80308b477e3345ac" translate="yes" xml:space="preserve">
          <source>Widgets</source>
          <target state="translated">Widgets</target>
        </trans-unit>
        <trans-unit id="3f421c0aac098c418b50c5c3bcbd110589223e73" translate="yes" xml:space="preserve">
          <source>Widgets Classes</source>
          <target state="translated">ウィジェットクラス</target>
        </trans-unit>
        <trans-unit id="26e41ea52b5739b9e0ec9255510d6463dbaf9639" translate="yes" xml:space="preserve">
          <source>Widgets Inside C++ Namespaces</source>
          <target state="translated">C++名前空間内のウィジェット</target>
        </trans-unit>
        <trans-unit id="008ecc276f0fa35c32ff2bf4e97c5a9ce8676de0" translate="yes" xml:space="preserve">
          <source>Widgets Tutorial</source>
          <target state="translated">ウィジェットチュートリアル</target>
        </trans-unit>
        <trans-unit id="a07d0d90d7eb4ac5ebbea3ebe5dd8d5d991c5eed" translate="yes" xml:space="preserve">
          <source>Widgets and Dialogs with Auto-Connect</source>
          <target state="translated">ウィジェットとダイアログのオートコネクト</target>
        </trans-unit>
        <trans-unit id="344641154bdac90c3e210fb6d62e3c21264b495f" translate="yes" xml:space="preserve">
          <source>Widgets and Layouts</source>
          <target state="translated">ウィジェットとレイアウト</target>
        </trans-unit>
        <trans-unit id="1a27ba46d254289b76d964159e27c5c9e7cb5eae" translate="yes" xml:space="preserve">
          <source>Widgets and forms created with</source>
          <target state="translated">で作成されたウィジェットとフォーム</target>
        </trans-unit>
        <trans-unit id="a85fe50534a0d44188b440e220eb499d9e7f63b4" translate="yes" xml:space="preserve">
          <source>Widgets are hidden if:</source>
          <target state="translated">ウィジェットが非表示になっている場合。</target>
        </trans-unit>
        <trans-unit id="5cc092b01f77dca9f63f3dd517ef7f260d13bdbe" translate="yes" xml:space="preserve">
          <source>Widgets are normally created without any stretch factor set. When they are laid out in a layout the widgets are given a share of space in accordance with their &lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;QWidget::sizePolicy&lt;/a&gt;() or their minimum size hint whichever is the greater. Stretch factors are used to change how much space widgets are given in proportion to one another.</source>
          <target state="translated">ウィジェットは通常、伸縮係数を設定せずに作成されます。ウィジェットがレイアウトに配置されると、ウィジェットには&lt;a href=&quot;qwidget#sizePolicy-prop&quot;&gt;QWidget :: sizePolicy&lt;/a&gt;（）または最小サイズのヒントのどちらか大きい方に従ってスペースの共有が与えられます。伸縮係数は、ウィジェットが互いに比例して与えられるスペースの量を変更するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1ad1a58da08f3901a8a19b9940b1b58f5d1fc6c7" translate="yes" xml:space="preserve">
          <source>Widgets are not necessarily drawn by asking the style to draw only one element. Widgets can make several calls to the style to draw different elements. An example is &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, which draws its tabs and frame individually.</source>
          <target state="translated">ウィジェットは、スタイルに1つの要素のみを描画するように要求することによって必ずしも描画されるわけではありません。ウィジェットは、さまざまな要素を描画するためにスタイルに複数の呼び出しを行うことができます。例は&lt;a href=&quot;qtabwidget&quot;&gt;QTabWidgetで&lt;/a&gt;、タブとフレームを個別に描画します。</target>
        </trans-unit>
        <trans-unit id="d86289290055f720dba269dd8dd2c2c63966ce9f" translate="yes" xml:space="preserve">
          <source>Widgets are not unique objects; you can make as many copies of them as you need. To quickly duplicate a widget, you can clone it by holding down the &lt;b&gt;Ctrl&lt;/b&gt; key and dragging it. This allows widgets to be copied and placed on the form more quickly than with clipboard operations.</source>
          <target state="translated">ウィジェットは一意のオブジェクトではありません。必要なだけコピーを作成できます。ウィジェットをすばやく複製するには、&lt;b&gt;Ctrl&lt;/b&gt;キーを押したままドラッグしてウィジェットを複製します。これにより、クリップボード操作よりも迅速にウィジェットをコピーしてフォームに配置できます。</target>
        </trans-unit>
        <trans-unit id="97be29d34b1e53ced8877c1f56afbe4b40018dba" translate="yes" xml:space="preserve">
          <source>Widgets are the primary elements for creating user interfaces in Qt. &lt;a href=&quot;widget-classes#the-widget-classes&quot;&gt;Widgets&lt;/a&gt; can display data and status information, receive user input, and provide a container for other widgets that should be grouped together. A widget that is not embedded in a parent widget is called a &lt;a href=&quot;application-windows&quot;&gt;window&lt;/a&gt;.</source>
          <target state="translated">ウィジェットは、Qtでユーザーインターフェイスを作成するための主要な要素です。&lt;a href=&quot;widget-classes#the-widget-classes&quot;&gt;ウィジェット&lt;/a&gt;は、データとステータス情報を表示し、ユーザー入力を受け取り、グループ化する必要がある他のウィジェットのコンテナーを提供できます。親ウィジェットに埋め込まれていないウィジェットは、&lt;a href=&quot;application-windows&quot;&gt;ウィンドウ&lt;/a&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="fc7d42f09b3be487104e98c77490d831d6731b3f" translate="yes" xml:space="preserve">
          <source>Widgets are the primary elements for creating user interfaces in Qt. &lt;a href=&quot;widget-classes#the-widget-classes&quot;&gt;Widgets&lt;/a&gt; can display data and status information, receive user input, and provide a container for other widgets that should be grouped together. A widget that is not embedded in a parent widget is called a &lt;a href=&quot;application-windows#&quot;&gt;window&lt;/a&gt;.</source>
          <target state="translated">ウィジェットは、Qtでユーザーインターフェイスを作成するための主要な要素です。&lt;a href=&quot;widget-classes#the-widget-classes&quot;&gt;ウィジェット&lt;/a&gt;は、データとステータス情報を表示し、ユーザー入力を受け取り、グループ化する必要のある他のウィジェットのコンテナーを提供できます。親ウィジェットに埋め込まれていないウィジェットは、&lt;a href=&quot;application-windows#&quot;&gt;ウィンドウ&lt;/a&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="1375cc23552403a3c4ee37608323f1a1ac92fd07" translate="yes" xml:space="preserve">
          <source>Widgets automatically detect HTML markup and display rich text accordingly. For example, setting a label's &lt;a href=&quot;qlabel#text-prop&quot;&gt;text&lt;/a&gt; property with the string &lt;code&gt;&quot;&amp;lt;b&amp;gt;Hello&amp;lt;/b&amp;gt; &amp;lt;i&amp;gt;Qt!&amp;lt;/i&amp;gt;&quot;&lt;/code&gt; will result in the label displaying text like this: &lt;b&gt;Hello&lt;/b&gt;</source>
          <target state="translated">ウィジェットは自動的にHTMLマークアップを検出し、それに応じてリッチテキストを表示します。たとえば、ラベルの&lt;a href=&quot;qlabel#text-prop&quot;&gt;テキスト&lt;/a&gt;プロパティに文字列 &lt;code&gt;&quot;&amp;lt;b&amp;gt;Hello&amp;lt;/b&amp;gt; &amp;lt;i&amp;gt;Qt!&amp;lt;/i&amp;gt;&quot;&lt;/code&gt; すると、ラベルに次のようなテキストが表示されます：&lt;b&gt;Hello&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6c54f63c2c46258996ecf5d8a376b81d66276c95" translate="yes" xml:space="preserve">
          <source>Widgets can also be &quot;cloned&quot; on the form: Holding down &lt;b&gt;Ctrl&lt;/b&gt; and dragging the widget creates a copy of the widget that can be dragged to a new position.</source>
          <target state="translated">ウィジェットはフォーム上で「複製」することもできます&lt;b&gt;。Ctrl&lt;/b&gt;キーを押しながらウィジェットをドラッグすると、新しい位置にドラッグできるウィジェットのコピーが作成されます。</target>
        </trans-unit>
        <trans-unit id="26e7dd3385f17f40b7a475c739c5234561e03aa8" translate="yes" xml:space="preserve">
          <source>Widgets can be added to menus by using instances of the &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; class to hold them. These actions can then be inserted into menus in the usual way; see the &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; documentation for more details.</source>
          <target state="translated">&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;クラスのインスタンスを使用してウィジェットを保持することにより、ウィジェットをメニューに追加できます。これらのアクションは、通常の方法でメニューに挿入できます。詳細については、&lt;a href=&quot;qmenu&quot;&gt;QMenuの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="273dfa86751e5e4476bb799b555744e688a1a0b7" translate="yes" xml:space="preserve">
          <source>Widgets can be inserted into menus with the &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; class. Instances of this class are used to hold widgets, and are inserted into menus with the &lt;a href=&quot;qmenu#addAction&quot;&gt;addAction&lt;/a&gt;() overload that takes a &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;.</source>
          <target state="translated">ウィジェットは&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;クラスでメニューに挿入できます。このクラスのインスタンスはウィジェットを保持するために使用され、&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;をとる&lt;a href=&quot;qmenu#addAction&quot;&gt;addAction&lt;/a&gt;（）オーバーロードでメニューに挿入されます。</target>
        </trans-unit>
        <trans-unit id="b8cde9c4e84fb4f449300f7ecf063ddbdc149db4" translate="yes" xml:space="preserve">
          <source>Widgets can be inserted into menus with the &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; class. Instances of this class are used to hold widgets, and are inserted into menus with the &lt;a href=&quot;qmenu#addAction&quot;&gt;addAction&lt;/a&gt;() overload that takes a &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;. If the &lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt; fires the &lt;a href=&quot;qmenu#triggered&quot;&gt;triggered&lt;/a&gt;() signal, the menu will close.</source>
          <target state="translated">ウィジェットは、&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetAction&lt;/a&gt;クラスを使用してメニューに挿入できます。このクラスのインスタンスはウィジェットを保持するために使用され、&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;をとる&lt;a href=&quot;qmenu#addAction&quot;&gt;addAction&lt;/a&gt;（）オーバーロードでメニューに挿入されます。場合&lt;a href=&quot;qwidgetaction&quot;&gt;QWidgetActionが&lt;/a&gt;発射&lt;a href=&quot;qmenu#triggered&quot;&gt;トリガー&lt;/a&gt;（）信号を、メニューが閉じます。</target>
        </trans-unit>
        <trans-unit id="288931136cef5721a6fc4f71b7afc624ff77e8d9" translate="yes" xml:space="preserve">
          <source>Widgets for editing item data in views and delegates</source>
          <target state="translated">ビューやデリゲートで項目データを編集するためのウィジェット</target>
        </trans-unit>
        <trans-unit id="3bb11f9c59b3c02c1e6de3844683793b55cba22d" translate="yes" xml:space="preserve">
          <source>Widgets modification state has been changed.</source>
          <target state="translated">ウィジェットの修正状態を変更しました。</target>
        </trans-unit>
        <trans-unit id="242c88c452d76a5d4144f060e7e7ca1774e6c7d1" translate="yes" xml:space="preserve">
          <source>Widgets provided by Qt use this class to place tooltips, menus and dialog boxes on the correct screen for their parent or application widgets. Applications can use this class to obtain information that can be used to save window positions, or to place child widgets and dialogs on one particular screen.</source>
          <target state="translated">Qt が提供するウィジェットは、このクラスを使用して、ツールチップ、メニュー、ダイアログボックスを親ウィジェットやアプリケーションウィジェットの正しい画面に配置します。アプリケーションはこのクラスを使って、ウィンドウの位置を保存したり、子ウィジェットやダイアログを特定の画面に配置したりするための情報を得ることができます。</target>
        </trans-unit>
        <trans-unit id="8435adf39417939d470169f9dd634d2c7c95c2ce" translate="yes" xml:space="preserve">
          <source>Widgets respond to events that are typically caused by user actions. Qt delivers events to widgets by calling specific event handler functions with instances of &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; subclasses containing information about each event.</source>
          <target state="translated">ウィジェットは、通常ユーザーのアクションによって引き起こされるイベントに応答します。Qtは、各イベントに関する情報を含む&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt;サブクラスのインスタンスで特定のイベントハンドラー関数を呼び出すことにより、ウィジェットにイベントを配信します。</target>
        </trans-unit>
        <trans-unit id="2b8947d39fb6587b9472fef874de80f84ce0c6ae" translate="yes" xml:space="preserve">
          <source>Widgets that accept keyboard input need to reimplement a few more event handlers:</source>
          <target state="translated">キーボード入力を受け入れるウィジェットは、もう少しイベントハンドラを再実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="13aa1b4026942b9bb6ce1d114f57043c15bb811a" translate="yes" xml:space="preserve">
          <source>Width of a check box indicator.</source>
          <target state="translated">チェックボックスインジケータの幅。</target>
        </trans-unit>
        <trans-unit id="92d4f7c9f5b5b6ac456fc0ee64663a9569268102" translate="yes" xml:space="preserve">
          <source>Width of a chunk in a progress bar indicator.</source>
          <target state="translated">プログレスバーのインジケータのチャンクの幅。</target>
        </trans-unit>
        <trans-unit id="1bbc2f9725c899cb0bb83f2ac435543faf31e492" translate="yes" xml:space="preserve">
          <source>Width of a minimized MDI window.</source>
          <target state="translated">最小化された MDI ウィンドウの幅。</target>
        </trans-unit>
        <trans-unit id="14711779662ca811a72137d0c1355bfa4f31084a" translate="yes" xml:space="preserve">
          <source>Width of a radio button indicator.</source>
          <target state="translated">ラジオボタンのインジケータの幅。</target>
        </trans-unit>
        <trans-unit id="474ac5fcafa931fe0fd6910ec15a46cc6c3ce29f" translate="yes" xml:space="preserve">
          <source>Width of a separator in a horizontal dock window and the height of a separator in a vertical dock window.</source>
          <target state="translated">水平方向のドックウィンドウのセパレータの幅と垂直方向のドックウィンドウのセパレータの高さ。</target>
        </trans-unit>
        <trans-unit id="f9cbd344f389b2fdebda9d82f10d6de85a07d4a5" translate="yes" xml:space="preserve">
          <source>Width of a single frame in this &lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt;.</source>
          <target state="translated">この&lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt;内の単一フレームの幅。</target>
        </trans-unit>
        <trans-unit id="4a8fe03d63b5269a8ee17b3af8c19e9ab02f872f" translate="yes" xml:space="preserve">
          <source>Width of a single frame in this sprite.</source>
          <target state="translated">このスプライトの1フレームの幅.</target>
        </trans-unit>
        <trans-unit id="61f0e5039b4c2de4949e55939503187e4677dbee" translate="yes" xml:space="preserve">
          <source>Width of a splitter.</source>
          <target state="translated">スプリッターの幅。</target>
        </trans-unit>
        <trans-unit id="8f394f722525a92857f04c8b25a4ff0084fcc97b" translate="yes" xml:space="preserve">
          <source>Width of a toolbar extension button in a horizontal toolbar and the height of the button in a vertical toolbar.</source>
          <target state="translated">横型ツールバーのツールバー拡張ボタンの幅と縦型ツールバーのボタンの高さ。</target>
        </trans-unit>
        <trans-unit id="a276f4d87ef046e18ddd9eaa41ad0a5ce04c4153" translate="yes" xml:space="preserve">
          <source>Width of a toolbar handle in a horizontal toolbar and the height of the handle in a vertical toolbar.</source>
          <target state="translated">横長のツールバーのハンドルの幅と縦長のツールバーのハンドルの高さ。</target>
        </trans-unit>
        <trans-unit id="f6475409c1ca0bbf3519ed0b865993d83442f005" translate="yes" xml:space="preserve">
          <source>Width of a toolbar separator in a horizontal toolbar and the height of a separator in a vertical toolbar.</source>
          <target state="translated">横型ツールバーのツールバーセパレータの幅と縦型ツールバーのセパレータの高さ。</target>
        </trans-unit>
        <trans-unit id="f32cdf111f802f1e77076f374ad98edca36bb759" translate="yes" xml:space="preserve">
          <source>Width of a vertical scroll bar and the height of a horizontal scroll bar.</source>
          <target state="translated">縦スクロールバーの幅と横スクロールバーの高さ。</target>
        </trans-unit>
        <trans-unit id="b1b76acd84d65d7c89a34bfe549816feb6684e6e" translate="yes" xml:space="preserve">
          <source>Width of table or cell border</source>
          <target state="translated">表またはセルの境界線の幅</target>
        </trans-unit>
        <trans-unit id="894a83e2504cfb44500a8d72eba1c5a9876f1107" translate="yes" xml:space="preserve">
          <source>Width of the alternate keys list item.</source>
          <target state="translated">代替キーリスト項目の幅。</target>
        </trans-unit>
        <trans-unit id="ca01378df4fc7f57ef1854241261d4957d8070cb" translate="yes" xml:space="preserve">
          <source>Width of the default-button indicator frame.</source>
          <target state="translated">デフォルトボタン表示枠の幅。</target>
        </trans-unit>
        <trans-unit id="bff587a72664f0ce6c24d49d77072e269e5af574" translate="yes" xml:space="preserve">
          <source>Width of the frame around toolbars.</source>
          <target state="translated">ツールバー周りの枠の幅。</target>
        </trans-unit>
        <trans-unit id="32d20c7e2973072db1690d05d4a9bbb06c5587ac" translate="yes" xml:space="preserve">
          <source>Width of the handle in a horizontal dock window and the height of the handle in a vertical dock window.</source>
          <target state="translated">横長のドック窓のハンドルの幅と縦長のドック窓のハンドルの高さ。</target>
        </trans-unit>
        <trans-unit id="30d21fa5d9cb79597ff503bf1dbbb488b65a5ede" translate="yes" xml:space="preserve">
          <source>Width of the menu button indicator proportional to the widget height.</source>
          <target state="translated">メニューボタンの幅はウィジェットの高さに比例します。</target>
        </trans-unit>
        <trans-unit id="4f983a660ea1223340ae32159c1ab35d5e29bd2f" translate="yes" xml:space="preserve">
          <source>Wiki</source>
          <target state="translated">Wiki</target>
        </trans-unit>
        <trans-unit id="641be895c08513d3bfd01d7c1a2ff3ca352244e4" translate="yes" xml:space="preserve">
          <source>Wildcard Matching</source>
          <target state="translated">ワイルドカードマッチング</target>
        </trans-unit>
        <trans-unit id="264c29d9ea22af548e907b36f322bb974b5a6976" translate="yes" xml:space="preserve">
          <source>Wildcard matching</source>
          <target state="translated">ワイルドカードマッチング</target>
        </trans-unit>
        <trans-unit id="0689321b58e7a5fc78253890378bdaabbc1eb587" translate="yes" xml:space="preserve">
          <source>Wildcard matching can be convenient because of its simplicity, but any wildcard regexp can be defined using full regexps, e.g. &lt;b&gt;.*\.html$&lt;/b&gt;. Notice that we can't match both &lt;code&gt;.html&lt;/code&gt; and &lt;code&gt;.htm&lt;/code&gt; files with a wildcard unless we use &lt;b&gt;*.htm*&lt;/b&gt; which will also match 'test.html.bak'. A full regexp gives us the precision we need, &lt;b&gt;.*\.html?$&lt;/b&gt;.</source>
          <target state="translated">ワイルドカード照合は単純であるため便利ですが、ワイルドカード正規表現は完全な正規表現を使用して定義できます（例：&lt;b&gt;。* \&lt;/b&gt;。html &lt;b&gt;$）&lt;/b&gt;。「test.html.bak」にも一致する&lt;b&gt;* .htm *&lt;/b&gt;を使用しない限り、 &lt;code&gt;.html&lt;/code&gt; ファイルと &lt;code&gt;.htm&lt;/code&gt; ファイルの両方をワイルドカードに一致させることができないことに注意してください。完全な正規表現により、必要な精度&lt;b&gt;。* \。html？$が得られ&lt;/b&gt;ます。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="842dc21d7451aa6ca7d995ac3b01dfa569693150" translate="yes" xml:space="preserve">
          <source>Wildcards in Name Tests</source>
          <target state="translated">名前テストのワイルドカード</target>
        </trans-unit>
        <trans-unit id="6e5c972bd26124738ee77c46943b74e25b91eac4" translate="yes" xml:space="preserve">
          <source>Will apply kerning between adjacent glyphs. Note that OpenType GPOS based kerning is currently not supported.</source>
          <target state="translated">隣接するグリフ間にカーニングを適用します。OpenType GPOS ベースのカーニングは現在サポートされていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="6adcd11c4e61fb7fcde2432b7a7de1f735d1edeb" translate="yes" xml:space="preserve">
          <source>Will be used when &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.checkable&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt; and its appearance may depend on &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.exclusive&lt;/a&gt;, i.e., whether it will behave like a checkbox or a radio button. Use &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.checked&lt;/a&gt; for the checked state.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.checkable&lt;/a&gt;が &lt;code&gt;true&lt;/code&gt; で、その外観が&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.exclusive&lt;/a&gt;に依存している場合、つまり、チェックボックスまたはラジオボタンのように動作する場合に使用されます。チェック状態には、&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.checked&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="51a4364950010d7d1a3acb13be6215316f24c111" translate="yes" xml:space="preserve">
          <source>Will be used when &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.type&lt;/a&gt; equals &lt;code&gt;MenuItemType.ScrollIndicator&lt;/code&gt;. Its appearance should follow &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.scrollerDirection&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.type&lt;/a&gt;が &lt;code&gt;MenuItemType.ScrollIndicator&lt;/code&gt; と等しい場合に使用されます。その外観は&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.scrollerDirectionに&lt;/a&gt;従う必要があります。</target>
        </trans-unit>
        <trans-unit id="2d3d1b653fde72951f28f65e2262012bbda10fb4" translate="yes" xml:space="preserve">
          <source>Will be used when &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.type&lt;/a&gt; equals &lt;code&gt;MenuItemType.Separator&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.type&lt;/a&gt;が &lt;code&gt;MenuItemType.Separator&lt;/code&gt; と等しい場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="2f33960d13f8f9fc04e9fc9347816f610864f0b2" translate="yes" xml:space="preserve">
          <source>Will calculate the advance for each glyph separately.</source>
          <target state="translated">各グリフの前金を個別に計算します。</target>
        </trans-unit>
        <trans-unit id="4ce4d9e973b6847fa6d154ff1d851dfe8de757ff" translate="yes" xml:space="preserve">
          <source>Will emit the &lt;a href=&quot;qml-qtquick-controls-action#triggered-signal&quot;&gt;triggered&lt;/a&gt; signal if the action is enabled. You may provide a source object if the Action would benefit from knowing the origin of the triggering (e.g. for analytics). Will also emit the &lt;a href=&quot;qml-qtquick-controls-action#toggled-signal&quot;&gt;toggled&lt;/a&gt; signal if it is checkable.</source>
          <target state="translated">アクションが有効な場合、&lt;a href=&quot;qml-qtquick-controls-action#triggered-signal&quot;&gt;トリガーされた&lt;/a&gt;信号を発信します。アクションがトリガーの発生元を知ることで利益を得られる場合（分析など）、ソースオブジェクトを提供できます。チェック可能な場合は、&lt;a href=&quot;qml-qtquick-controls-action#toggled-signal&quot;&gt;トグルされた&lt;/a&gt;信号も発行します。</target>
        </trans-unit>
        <trans-unit id="7301c83fbf138cebca4da71bad28da58a32bc6c1" translate="yes" xml:space="preserve">
          <source>Will emit the &lt;a href=&quot;qml-qtquick-controls-action#triggered-signal&quot;&gt;triggered&lt;/a&gt; signal on</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-action#triggered-signal&quot;&gt;トリガーされた&lt;/a&gt;信号を発します</target>
        </trans-unit>
        <trans-unit id="d1fe5801cc23bc8576afb39d3f08ee6b2c234d3f" translate="yes" xml:space="preserve">
          <source>Will import to Qt Quick 3D as...</source>
          <target state="translated">Qt Quick 3Dにインポートして、...</target>
        </trans-unit>
        <trans-unit id="992c93fbc65bfa4b132279890e307aebb42bb7f8" translate="yes" xml:space="preserve">
          <source>Will rasterize by measuring the coverage of each subpixel, returning a separate alpha value for each of the red, green and blue components of each pixel.</source>
          <target state="translated">各サブピクセルのカバレッジを測定してラスタライズし,各ピクセルの赤,緑,青の各成分に対して個別のアルファ値を返します.</target>
        </trans-unit>
        <trans-unit id="9d68c46bc41f81a77f83f10f64be90ea8298c3af" translate="yes" xml:space="preserve">
          <source>Will rasterize by measuring the coverage of the shape on whole pixels. The returned image contains the alpha values of each pixel based on the coverage of the glyph shape.</source>
          <target state="translated">全ピクセル上での図形のカバレッジを測定することでラスタライズを行います。返される画像は,グリフ形状のカバレッジに基づいた各ピクセルのアルファ値を含みます。</target>
        </trans-unit>
        <trans-unit id="cfd625b13d3522bd90aa1cf7729a05018cda7fe8" translate="yes" xml:space="preserve">
          <source>Will return &lt;code&gt;0&lt;/code&gt; if the size is automatically controlled by &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;.</source>
          <target state="translated">サイズが&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;によって自動的に制御される場合、 &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bacdfcd8e58eaf720dc472b61c16ef6202195524" translate="yes" xml:space="preserve">
          <source>Will return &lt;code&gt;0&lt;/code&gt; if the size is automatically controlled by &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;.</source>
          <target state="translated">サイズが&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;によって自動的に制御される場合、 &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="694d20076668702064af4b5c6b9aab479e6fa21a" translate="yes" xml:space="preserve">
          <source>Will return an invalid &lt;a href=&quot;qgeomaneuver&quot;&gt;QGeoManeuver&lt;/a&gt; if no information has been attached to the starting point of this route segment.</source>
          <target state="translated">このルートセグメントの始点に情報が添付されていない場合、無効な&lt;a href=&quot;qgeomaneuver&quot;&gt;QGeoManeuverを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="0a4ef5f5759743ffb735d1db3489350440cdf859" translate="yes" xml:space="preserve">
          <source>Will return an invalid route segment if there are no route segments associated with the route.</source>
          <target state="translated">ルートに関連付けられたルートセグメントがない場合、無効なルートセグメントを返します。</target>
        </trans-unit>
        <trans-unit id="5159390ce4cc4497f2c1225b18cf5c8e403dd9f6" translate="yes" xml:space="preserve">
          <source>Will return an invalid route segment if this is the last route segment in the route.</source>
          <target state="translated">これがルートの最後のルートセグメントである場合、無効なルートセグメントを返します。</target>
        </trans-unit>
        <trans-unit id="7ad1aafdccf8b805105c57c9e774c1ad40595b7a" translate="yes" xml:space="preserve">
          <source>Will return invalid maneuver if no information has been attached to the endpoint of this route segment.</source>
          <target state="translated">このルートセグメントの終点に情報が付加されていない場合、無効なマヌーバを返します。</target>
        </trans-unit>
        <trans-unit id="7b653c1a1342f29b6e1ca16ef44b1d14c98a11e3" translate="yes" xml:space="preserve">
          <source>Win32</source>
          <target state="translated">Win32</target>
        </trans-unit>
        <trans-unit id="d2afd817a9a21d99da015861401e78ff2526d7a1" translate="yes" xml:space="preserve">
          <source>WinLayout</source>
          <target state="translated">WinLayout</target>
        </trans-unit>
        <trans-unit id="075ad31795be6f90667ef90b6e5605875ceafe6f" translate="yes" xml:space="preserve">
          <source>WinRT</source>
          <target state="translated">WinRT</target>
        </trans-unit>
        <trans-unit id="ee05c284cf8b3483c03d4f9413a6c2310a64206c" translate="yes" xml:space="preserve">
          <source>WinRT - Not supported</source>
          <target state="translated">WinRT-サポートされていません</target>
        </trans-unit>
        <trans-unit id="6cc4e52a56e0ff55e5943fa5bda3b3d49ec65e52" translate="yes" xml:space="preserve">
          <source>WinRT - Not supported yet</source>
          <target state="translated">WinRT-まだサポートされていません</target>
        </trans-unit>
        <trans-unit id="b0ecf59b61b6d43691094d1b7be8be240577897f" translate="yes" xml:space="preserve">
          <source>WinRT Runner Tool</source>
          <target state="translated">WinRTランナーツール</target>
        </trans-unit>
        <trans-unit id="b2b2b1b85fe8deb53a167363dcd5fa56d7734c79" translate="yes" xml:space="preserve">
          <source>WinRT and Windows Phone support</source>
          <target state="translated">WinRTとWindows Phoneのサポート</target>
        </trans-unit>
        <trans-unit id="41dfc0a6c92707948578891c51d98c6443be63cc" translate="yes" xml:space="preserve">
          <source>Window</source>
          <target state="translated">Window</target>
        </trans-unit>
        <trans-unit id="b30704d31f5e4aca87353b66ee27f0816caa9047" translate="yes" xml:space="preserve">
          <source>Window (QML type)</source>
          <target state="translated">ウィンドウ(QML型</target>
        </trans-unit>
        <trans-unit id="afaebc89cf3ada29e4b3c2ac4b9b1ed9b0776e61" translate="yes" xml:space="preserve">
          <source>Window Geometry</source>
          <target state="translated">窓の形状</target>
        </trans-unit>
        <trans-unit id="8c70131ff98a78ebc4b38d71ff8aaf60f268bc44" translate="yes" xml:space="preserve">
          <source>Window Managers</source>
          <target state="translated">ウィンドウマネージャー</target>
        </trans-unit>
        <trans-unit id="25c90920abe1ae75b09c4a801a9be777978eb59e" translate="yes" xml:space="preserve">
          <source>Window QML Type</source>
          <target state="translated">ウィンドウQML型</target>
        </trans-unit>
        <trans-unit id="b99fcf0354e6f2b755b1cd4436f8833d7b57f92d" translate="yes" xml:space="preserve">
          <source>Window and Dialog Widgets</source>
          <target state="translated">ウィンドウとダイアログウィジェット</target>
        </trans-unit>
        <trans-unit id="df2b265af4964191becf35116f05a11290f1a10a" translate="yes" xml:space="preserve">
          <source>Window contents</source>
          <target state="translated">ウィンドウの内容</target>
        </trans-unit>
        <trans-unit id="0693d8804ff10e8ccf636d73f83dc84b2aebcac8" translate="yes" xml:space="preserve">
          <source>Window flags are a combination of a type (e.g. &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Dialog&lt;/a&gt;) and zero or more hints to the window system (e.g. &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::FramelessWindowHint&lt;/a&gt;).</source>
          <target state="translated">ウィンドウフラグはタイプ（例：&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Dialog&lt;/a&gt;）とウィンドウシステムへの0個以上のヒント（例：&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: FramelessWindowHint&lt;/a&gt;）の組み合わせです。</target>
        </trans-unit>
        <trans-unit id="c757786995d9190138fd07f2d2690dd25188aab3" translate="yes" xml:space="preserve">
          <source>Window flags are a combination of a window type (e.g., &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Dialog&lt;/a&gt;) and several flags giving hints on the behavior of the window. The behavior is platform-dependent.</source>
          <target state="translated">ウィンドウフラグは、ウィンドウタイプ（例：&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Dialog&lt;/a&gt;）とウィンドウの動作に関するヒントを与えるいくつかのフラグの組み合わせです。動作はプラットフォームに依存します。</target>
        </trans-unit>
        <trans-unit id="cec65d78532248828b5443e4752a3df7fc4931aa" translate="yes" xml:space="preserve">
          <source>Window functions</source>
          <target state="translated">ウィンドウ機能</target>
        </trans-unit>
        <trans-unit id="3fa481de6469402233a67efbe0146e989104a11b" translate="yes" xml:space="preserve">
          <source>Window resize handle; see also &lt;a href=&quot;qsizegrip&quot;&gt;QSizeGrip&lt;/a&gt;.</source>
          <target state="translated">ウィンドウのサイズ変更ハンドル。&lt;a href=&quot;qsizegrip&quot;&gt;QSizeGrip&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="dc2b89e9ddde77184a7e10f4c0458e6e48f4ab30" translate="yes" xml:space="preserve">
          <source>Window size for connection-level flow control is 65535 octets</source>
          <target state="translated">接続レベルのフロー制御のためのウィンドウサイズは65535オクテットです。</target>
        </trans-unit>
        <trans-unit id="20055eafb15abf4e19c72399a0ab5d4ef5aa99b6" translate="yes" xml:space="preserve">
          <source>Window size for connection-level flowcontrol is 2147483647 octets</source>
          <target state="translated">接続レベルのフローコントロールのウィンドウサイズは2147483647オクテットです。</target>
        </trans-unit>
        <trans-unit id="4b26bc7091bc1c4af3f32a7ab5a2cefcc82220cb" translate="yes" xml:space="preserve">
          <source>Window size for stream-level flow control is 65535 octets</source>
          <target state="translated">流線レベルの流量制御のためのウィンドウサイズは65535オクテットです。</target>
        </trans-unit>
        <trans-unit id="e4bc6262ebe06c4edde4142238b17583c9cd16ce" translate="yes" xml:space="preserve">
          <source>Window size for stream-level flowcontrol is 21474836 octets</source>
          <target state="translated">ストリームレベルのフローコントロールのウィンドウサイズは21474836オクテットです。</target>
        </trans-unit>
        <trans-unit id="d18acd2371180466957c4dbeb8c95ca75708947a" translate="yes" xml:space="preserve">
          <source>Window title label.</source>
          <target state="translated">ウィンドウのタイトルラベル。</target>
        </trans-unit>
        <trans-unit id="1e7af5039c861fb07ace18801d508cb564adec81" translate="yes" xml:space="preserve">
          <source>Window was activated.</source>
          <target state="translated">ウィンドウが起動しました。</target>
        </trans-unit>
        <trans-unit id="11241d466e6bf788119916fe31fa36aaa7c680d9" translate="yes" xml:space="preserve">
          <source>Window was deactivated.</source>
          <target state="translated">ウィンドウは無効化されていました。</target>
        </trans-unit>
        <trans-unit id="4e78ce50aed27fdd7018ad1a6b33852628dd8aaf" translate="yes" xml:space="preserve">
          <source>Window-Viewport Conversion</source>
          <target state="translated">窓とビューポートの変換</target>
        </trans-unit>
        <trans-unit id="9a56ea565b4ff2a96660fbe8df2fd15d5fb6f4db" translate="yes" xml:space="preserve">
          <source>Window. This will lead to the windowing system managing the clip of the window, so it will be clipped to the</source>
          <target state="translated">ウインドウのことです。にクリップされるように、ウィンドウのクリップを管理していることになります。</target>
        </trans-unit>
        <trans-unit id="75aa12a30bbd7073b47f5f7cb99f4d1c6a2ea986" translate="yes" xml:space="preserve">
          <source>Window.Window.active</source>
          <target state="translated">Window.Window.active</target>
        </trans-unit>
        <trans-unit id="69cabe1a21fa926547a70fb8587746688fc196f1" translate="yes" xml:space="preserve">
          <source>Window.Window.activeFocusItem</source>
          <target state="translated">Window.Window.activeFocusItem</target>
        </trans-unit>
        <trans-unit id="616a52190bba5239135d8c4e401392811e83de3c" translate="yes" xml:space="preserve">
          <source>Window.Window.contentItem</source>
          <target state="translated">Window.Window.contentItem</target>
        </trans-unit>
        <trans-unit id="93e40620929c8582b0726b5723364e2d780aa677" translate="yes" xml:space="preserve">
          <source>Window.Window.height</source>
          <target state="translated">Window.Window.height</target>
        </trans-unit>
        <trans-unit id="22953b19762a43065d9148abdac6278d7ff2c104" translate="yes" xml:space="preserve">
          <source>Window.Window.visibility</source>
          <target state="translated">Window.Window.visibility</target>
        </trans-unit>
        <trans-unit id="84c607816af9ce44f380ed26c792699caaa61a38" translate="yes" xml:space="preserve">
          <source>Window.Window.width</source>
          <target state="translated">Window.Window.width</target>
        </trans-unit>
        <trans-unit id="0d4fed8f27b6cb28fb107fea7f57b40019985ce5" translate="yes" xml:space="preserve">
          <source>Window.Window.window</source>
          <target state="translated">Window.Window.window</target>
        </trans-unit>
        <trans-unit id="179cf5d5f2dd427ea72db08711aff317c829519c" translate="yes" xml:space="preserve">
          <source>Window.active</source>
          <target state="translated">Window.active</target>
        </trans-unit>
        <trans-unit id="2ec4c77567c5777d0776cd5af31f66116b105f3c" translate="yes" xml:space="preserve">
          <source>Window.active : &lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</source>
          <target state="translated">Window.active：&lt;a href=&quot;qml-bool&quot;&gt;bool&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bbff09b2773e67a67998e0160db3a070da2a71c" translate="yes" xml:space="preserve">
          <source>Window.activeFocusItem</source>
          <target state="translated">Window.activeFocusItem</target>
        </trans-unit>
        <trans-unit id="102676071e8f5b0b5bf6e797da1cc51a37367db6" translate="yes" xml:space="preserve">
          <source>Window.activeFocusItem : &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">Window.activeFocusItem：&lt;a href=&quot;qml-qtquick-item&quot;&gt;アイテム&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="323f1a195c556f532788c13c5175ee9673596fa3" translate="yes" xml:space="preserve">
          <source>Window.afterAnimating()</source>
          <target state="translated">Window.afterAnimating()</target>
        </trans-unit>
        <trans-unit id="4f8be4631d56a2a94c008c796a3eb4aa92aca3cb" translate="yes" xml:space="preserve">
          <source>Window.alert()</source>
          <target state="translated">Window.alert()</target>
        </trans-unit>
        <trans-unit id="6b43e57fc6c8546f7d0a20f409e420ff5d4e65f9" translate="yes" xml:space="preserve">
          <source>Window.close()</source>
          <target state="translated">Window.close()</target>
        </trans-unit>
        <trans-unit id="a7c9eb3479ef7276390ef7962c488325517f5cbb" translate="yes" xml:space="preserve">
          <source>Window.closing()</source>
          <target state="translated">Window.closing()</target>
        </trans-unit>
        <trans-unit id="f3bde14aa0bf20f81ada76a1e414cbe06cc13469" translate="yes" xml:space="preserve">
          <source>Window.color</source>
          <target state="translated">Window.color</target>
        </trans-unit>
        <trans-unit id="f7faf5ce1f3058190f74f96458908c816c80839e" translate="yes" xml:space="preserve">
          <source>Window.contentItem</source>
          <target state="translated">Window.contentItem</target>
        </trans-unit>
        <trans-unit id="09dc7d67387c54c429eabc833a823f696fb935b5" translate="yes" xml:space="preserve">
          <source>Window.contentItem : &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;</source>
          <target state="translated">Window.contentItem：&lt;a href=&quot;qml-qtquick-item&quot;&gt;アイテム&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f032a1a0e9d0f20ee5939a3ea15f61dbe8f060f9" translate="yes" xml:space="preserve">
          <source>Window.contentOrientation</source>
          <target state="translated">Window.contentOrientation</target>
        </trans-unit>
        <trans-unit id="d613e60a74c019962e8dc76775ee501bcbf5920a" translate="yes" xml:space="preserve">
          <source>Window.data</source>
          <target state="translated">Window.data</target>
        </trans-unit>
        <trans-unit id="11fcb002371eb69617294814e444f487941c6fa1" translate="yes" xml:space="preserve">
          <source>Window.flags</source>
          <target state="translated">Window.flags</target>
        </trans-unit>
        <trans-unit id="fdef13059eb9fcd4647cf759253900561f86103a" translate="yes" xml:space="preserve">
          <source>Window.frameSwapped()</source>
          <target state="translated">Window.frameSwapped()</target>
        </trans-unit>
        <trans-unit id="a929ff2e9d86ab477a20d2aeeae60315aa00bfb2" translate="yes" xml:space="preserve">
          <source>Window.height</source>
          <target state="translated">Window.height</target>
        </trans-unit>
        <trans-unit id="793cfeb4fba43fe8d353fe472138623da6f45bc2" translate="yes" xml:space="preserve">
          <source>Window.height : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">Window.height：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="76df9491595a49d076cf9f272b97202e15e48128" translate="yes" xml:space="preserve">
          <source>Window.hide()</source>
          <target state="translated">Window.hide()</target>
        </trans-unit>
        <trans-unit id="d1d8ee90db101d9aa7127f0ec7d71ef5b59327e6" translate="yes" xml:space="preserve">
          <source>Window.lower()</source>
          <target state="translated">Window.lower()</target>
        </trans-unit>
        <trans-unit id="811e064daed87f7ca3ccdfcb7526934f9e065065" translate="yes" xml:space="preserve">
          <source>Window.maximumHeight</source>
          <target state="translated">Window.maximumHeight</target>
        </trans-unit>
        <trans-unit id="ed13acfb5440376e7f9248628afa96f7cc080358" translate="yes" xml:space="preserve">
          <source>Window.maximumWidth</source>
          <target state="translated">Window.maximumWidth</target>
        </trans-unit>
        <trans-unit id="400afce45a5265eb1019dbc9d1f9bb720f661363" translate="yes" xml:space="preserve">
          <source>Window.minimumHeight</source>
          <target state="translated">Window.minimumHeight</target>
        </trans-unit>
        <trans-unit id="aebb18a4f2359f546fa8b333d847995d3a5ef4e8" translate="yes" xml:space="preserve">
          <source>Window.minimumWidth</source>
          <target state="translated">Window.minimumWidth</target>
        </trans-unit>
        <trans-unit id="215facd6841224bd8b80b0e006b6ac17f0950cbb" translate="yes" xml:space="preserve">
          <source>Window.modality</source>
          <target state="translated">Window.modality</target>
        </trans-unit>
        <trans-unit id="52b30f9332e30d272f1cbe7146d9734ff2e3a054" translate="yes" xml:space="preserve">
          <source>Window.opacity</source>
          <target state="translated">Window.opacity</target>
        </trans-unit>
        <trans-unit id="5c1a6d6492ac874f9e18f2d2de58a1ed70ac7075" translate="yes" xml:space="preserve">
          <source>Window.raise()</source>
          <target state="translated">Window.raise()</target>
        </trans-unit>
        <trans-unit id="500cae6ce1cd976b0844ee9632f2878e1490269c" translate="yes" xml:space="preserve">
          <source>Window.requestActivate()</source>
          <target state="translated">Window.requestActivate()</target>
        </trans-unit>
        <trans-unit id="eb32abc5b963808e0f1c4b506580bafb1dabdc33" translate="yes" xml:space="preserve">
          <source>Window.sceneGraphError()</source>
          <target state="translated">Window.sceneGraphError()</target>
        </trans-unit>
        <trans-unit id="962ec69a27517c38617be980e1a32ddfb58994c1" translate="yes" xml:space="preserve">
          <source>Window.screen</source>
          <target state="translated">Window.screen</target>
        </trans-unit>
        <trans-unit id="0836742cd959538d97470c7c5bb8e340e0e0b143" translate="yes" xml:space="preserve">
          <source>Window.show()</source>
          <target state="translated">Window.show()</target>
        </trans-unit>
        <trans-unit id="15504334bab2ba8401f9c0c42488a68ecf682d96" translate="yes" xml:space="preserve">
          <source>Window.showFullScreen()</source>
          <target state="translated">Window.showFullScreen()</target>
        </trans-unit>
        <trans-unit id="7a246186c9eb48c96b4f883f3c6ed5900df7bd62" translate="yes" xml:space="preserve">
          <source>Window.showMaximized()</source>
          <target state="translated">Window.showMaximized()</target>
        </trans-unit>
        <trans-unit id="9721d3ac26edfe36e03b800b63ea8a88c859ba6d" translate="yes" xml:space="preserve">
          <source>Window.showMinimized()</source>
          <target state="translated">Window.showMinimized()</target>
        </trans-unit>
        <trans-unit id="ecb33e6d10f93ea783d42c3441c123f5ac26ae90" translate="yes" xml:space="preserve">
          <source>Window.showNormal()</source>
          <target state="translated">Window.showNormal()</target>
        </trans-unit>
        <trans-unit id="b1a931100f91b3faa30216470bb54c3f9ef3a759" translate="yes" xml:space="preserve">
          <source>Window.title</source>
          <target state="translated">Window.title</target>
        </trans-unit>
        <trans-unit id="f84bfdc72053f81e11626d23f71d5a72df94234a" translate="yes" xml:space="preserve">
          <source>Window.transientParent</source>
          <target state="translated">Window.transientParent</target>
        </trans-unit>
        <trans-unit id="add5b572eae34b1475c4ac663ea27705fe0c5b75" translate="yes" xml:space="preserve">
          <source>Window.visibility</source>
          <target state="translated">Window.visibility</target>
        </trans-unit>
        <trans-unit id="31290646537daaae9feb4d0a6aa47fa2d4fe8dd1" translate="yes" xml:space="preserve">
          <source>Window.visibility : QWindow::Visibility</source>
          <target state="translated">Window.visibility:QWindow::Visibility</target>
        </trans-unit>
        <trans-unit id="040ee819374dd276f63a974e22660242040fe0ef" translate="yes" xml:space="preserve">
          <source>Window.visible</source>
          <target state="translated">Window.visible</target>
        </trans-unit>
        <trans-unit id="e2b6f01ff5b633118333310b09ad9f8d07bb756c" translate="yes" xml:space="preserve">
          <source>Window.width : &lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</source>
          <target state="translated">Window.width：&lt;a href=&quot;qml-int&quot;&gt;int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec9ee6d9fc2efb6ef3252fdd48706b294f871836" translate="yes" xml:space="preserve">
          <source>Window.window : &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt;</source>
          <target state="translated">Window.window：&lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcec8455d55425584f2b15ec6321324bf53d5617" translate="yes" xml:space="preserve">
          <source>Window.x</source>
          <target state="translated">Window.x</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="14bcdd30e3b008c3e7cd704a84f73d1bfd731c35" translate="yes" xml:space="preserve">
          <source>Windows (UWP)</source>
          <target state="translated">Windows (UWP)</target>
        </trans-unit>
        <trans-unit id="d1964a9d6c89b899acb90493c815573a0d6f6ea7" translate="yes" xml:space="preserve">
          <source>Windows (Win32 desktop, via XInput 1.3 &amp;amp; 1.4)</source>
          <target state="translated">Windows（Win32デスクトップ、XInput 1.3および1.4経由）</target>
        </trans-unit>
        <trans-unit id="964670c3979f39f09220262ac02382dcc43eb2c3" translate="yes" xml:space="preserve">
          <source>Windows (classic desktop)</source>
          <target state="translated">Windows(クラシックデスクトップ</target>
        </trans-unit>
        <trans-unit id="ba69620743da0d9dcd1d7e5dc758450978354d5d" translate="yes" xml:space="preserve">
          <source>Windows (desktop)</source>
          <target state="translated">ウィンドウズ</target>
        </trans-unit>
        <trans-unit id="cd2780c0a461f71c64280f5c562710d620fd6396" translate="yes" xml:space="preserve">
          <source>Windows - Intel(R) C++ Compiler for 32-bit applications, Version 9.1.040.</source>
          <target state="translated">Windows-32 ビットアプリケーション用 Intel(R)C++コンパイラー、バージョン 9.1.040。</target>
        </trans-unit>
        <trans-unit id="1cb7956bf146a8ba0806fced6a0163472a25a83e" translate="yes" xml:space="preserve">
          <source>Windows 10</source>
          <target state="translated">ウィンドウズテン</target>
        </trans-unit>
        <trans-unit id="1afe86f5efcb6d9798deb38cbf3ecf0a9ebaf810" translate="yes" xml:space="preserve">
          <source>Windows 10 (1809) October 2018 Update</source>
          <target state="translated">Windows 10 (1809)2018年10月アップデート</target>
        </trans-unit>
        <trans-unit id="d23b7faed6bed5922202a2b284d65aff84bf884f" translate="yes" xml:space="preserve">
          <source>Windows 10 Desktop</source>
          <target state="translated">Windows 10 デスクトップ</target>
        </trans-unit>
        <trans-unit id="ad030707429da2bedc40732e3d358db41d7651fa" translate="yes" xml:space="preserve">
          <source>Windows 10 IoT</source>
          <target state="translated">Windows 10 IoT</target>
        </trans-unit>
        <trans-unit id="4db48ac648a42f512034fb991a7275e05d76ee88" translate="yes" xml:space="preserve">
          <source>Windows 10 Mobile</source>
          <target state="translated">Windows 10 モバイル</target>
        </trans-unit>
        <trans-unit id="8cb565cb88209e257041b93101044e961a66e53d" translate="yes" xml:space="preserve">
          <source>Windows 10 SDK version 10.0.18362 or later</source>
          <target state="translated">Windows 10 SDK バージョン 10.0.18362 以降</target>
        </trans-unit>
        <trans-unit id="94cada20ad68e1ffe3678826da4a09dc6377e803" translate="yes" xml:space="preserve">
          <source>Windows 7</source>
          <target state="translated">ウィンドウズセブン</target>
        </trans-unit>
        <trans-unit id="2421598f872b2a34cd8e8c5cdad74ac27cddd334" translate="yes" xml:space="preserve">
          <source>Windows 7 and Windows Vista (w/Platform Update) and DirectWrite enabled in Qt</source>
          <target state="translated">Windows 7 および Windows Vista (Platform Update)と Qt で DirectWrite を有効にした場合</target>
        </trans-unit>
        <trans-unit id="9fe8c734d18c33e1fe587ed88ac86891c9413013" translate="yes" xml:space="preserve">
          <source>Windows 8.1</source>
          <target state="translated">ウィンドウズエイトワン</target>
        </trans-unit>
        <trans-unit id="0059c3585082dc8d8fa84aace5dd9574f5a647b2" translate="yes" xml:space="preserve">
          <source>Windows Aero look</source>
          <target state="translated">Windows Aeroルック</target>
        </trans-unit>
        <trans-unit id="9603341802d381e4f5dc9450d5f60203fbb1367e" translate="yes" xml:space="preserve">
          <source>Windows Bitmap</source>
          <target state="translated">Windowsビットマップ</target>
        </trans-unit>
        <trans-unit id="b5752a2453d550da484c9d85a1aca88f944da161" translate="yes" xml:space="preserve">
          <source>Windows Format</source>
          <target state="translated">ウィンドウズフォーマット</target>
        </trans-unit>
        <trans-unit id="c779efcd40e07a5f099b994086b2eecbec95fdbf" translate="yes" xml:space="preserve">
          <source>Windows RT</source>
          <target state="translated">ウィンドウズRT</target>
        </trans-unit>
        <trans-unit id="176562ff7a9ca628c45f66dfe5d7eb18c0c0ff3c" translate="yes" xml:space="preserve">
          <source>Windows Runtime</source>
          <target state="translated">ウィンドウズランタイム</target>
        </trans-unit>
        <trans-unit id="fb193893e70258d483f93a714af1f0fbcff9cfab" translate="yes" xml:space="preserve">
          <source>Windows Time Zones</source>
          <target state="translated">Windowsのタイムゾーン</target>
        </trans-unit>
        <trans-unit id="abcf695d570ffe730c49f508b0e37f63d25ee587" translate="yes" xml:space="preserve">
          <source>Windows Vista (w/o Platform Update) and earlier</source>
          <target state="translated">Windows Vista (プラットフォームアップデートなし)およびそれ以前のバージョン</target>
        </trans-unit>
        <trans-unit id="76f20bccfe3512339ad2cea01fc1c7809e7d3d15" translate="yes" xml:space="preserve">
          <source>Windows XP</source>
          <target state="translated">ウィンドウズエックスピー</target>
        </trans-unit>
        <trans-unit id="dd2494d5f30b3df0c2226e4d63b5a83102d7c014" translate="yes" xml:space="preserve">
          <source>Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; do not support the global mouse selection; they only supports the global clipboard, i.e. they only add text to the clipboard when an explicit copy or cut is made.</source>
          <target state="translated">Windowsおよび&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;は、グローバルなマウス選択をサポートしていません。これらはグローバルクリップボードのみをサポートします。つまり、明示的なコピーまたはカットが行われたときにのみ、クリップボードにテキストを追加します。</target>
        </trans-unit>
        <trans-unit id="c6f63f1ca0009002926ff7190a74402cec32c6d5" translate="yes" xml:space="preserve">
          <source>Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; does not have the concept of ownership; the clipboard is a fully global resource so all applications are notified of changes.</source>
          <target state="translated">Windowsと&lt;a href=&quot;internationalization#macos&quot;&gt;macOSに&lt;/a&gt;は所有権の概念がありません。クリップボードは完全にグローバルなリソースなので、すべてのアプリケーションに変更が通知されます。</target>
        </trans-unit>
        <trans-unit id="88023dbcc508c8f7a7c5cbf262c9b6f719968ac5" translate="yes" xml:space="preserve">
          <source>Windows and Screen</source>
          <target state="translated">Windowsと画面</target>
        </trans-unit>
        <trans-unit id="bbb43768d8d0148f00fdbeb53721d8cc5c4ca014" translate="yes" xml:space="preserve">
          <source>Windows and macOS do not support the global mouse selection; they only supports the global clipboard, i.e. they only add text to the clipboard when an explicit copy or cut is made.</source>
          <target state="translated">Windows と macOS はグローバルマウス選択をサポートしておらず、グローバルクリップボードのみをサポートしています。</target>
        </trans-unit>
        <trans-unit id="9e67941add41d372575cffb3e9bae73319fda15c" translate="yes" xml:space="preserve">
          <source>Windows and macOS does not have the concept of ownership; the clipboard is a fully global resource so all applications are notified of changes.</source>
          <target state="translated">WindowsやmacOSには所有権という概念がありません。クリップボードは完全にグローバルなリソースなので、すべてのアプリケーションに変更が通知されます。</target>
        </trans-unit>
        <trans-unit id="4530472b3bdecaac3503faee0951ef1625f27946" translate="yes" xml:space="preserve">
          <source>Windows are panels. If you set the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt; flag, the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt; flag will be set automatically. If you clear the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt; flag, the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt; flag is also cleared. Note that the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt; flag can be set independently of &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt;.</source>
          <target state="translated">ウィンドウはパネルです。&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Window&lt;/a&gt;フラグを設定すると、&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt;フラグが自動的に設定されます。&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Window&lt;/a&gt;フラグをクリアすると、&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt;フラグもクリアされます。&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsPanel&lt;/a&gt;フラグは&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Windowから&lt;/a&gt;独立して設定できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6864cc15af1f952f69248443d0f4dc03d3b25bb5" translate="yes" xml:space="preserve">
          <source>Windows can potentially use a lot of memory. A usual measurement is width times height times color depth. A window might also include multiple buffers to support double and triple buffering, as well as depth and stencil buffers. To release a window's memory resources, call the &lt;a href=&quot;qwindow#destroy&quot;&gt;destroy&lt;/a&gt;() function.</source>
          <target state="translated">Windowsは大量のメモリを使用する可能性があります。通常の測定は、幅&amp;times;高さ&amp;times;色深度です。ウィンドウには、ダブルバッファリングとトリプルバッファリングをサポートする複数のバッファ、および深度バッファとステンシルバッファも含まれる場合があります。ウィンドウのメモリリソースを解放するには、&lt;a href=&quot;qwindow#destroy&quot;&gt;destroy&lt;/a&gt;（）関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="c001b9e66e2b63587d28dcdcba9f086ad6b8b570" translate="yes" xml:space="preserve">
          <source>Windows native time zone support is severely limited compared to the standard IANA TZ Database. Windows time zones cover larger geographic areas and are thus less accurate in their conversions. They also do not support as much historic conversion data and so may only be accurate for the current year.</source>
          <target state="translated">Windowsネイティブのタイムゾーンのサポートは、標準のIANA TZデータベースに比べて非常に限られています。Windowsのタイムゾーンは、より大きな地理的領域をカバーしているため、変換の精度が低くなっています。また、過去の変換データもあまりサポートしていないため、現在の年だけが正確な場合があります。</target>
        </trans-unit>
        <trans-unit id="dc3313e9f2888acedb3a46ca240a29badb9ae9a8" translate="yes" xml:space="preserve">
          <source>Windows only, Direct2D based engine</source>
          <target state="translated">Windowsのみ、Direct2Dベースのエンジン</target>
        </trans-unit>
        <trans-unit id="a42fff1d14dd2ae9835c8ac0c2f009a4f65d20db" translate="yes" xml:space="preserve">
          <source>Windows only, Direct3D based engine</source>
          <target state="translated">Windowsのみ、Direct3Dベースのエンジン</target>
        </trans-unit>
        <trans-unit id="d199049029a1551cfb834f30df67ee5137b30d5f" translate="yes" xml:space="preserve">
          <source>Windows only. Creates a library project for Visual Studio.</source>
          <target state="translated">Windows のみ。Visual Studio用のライブラリプロジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="2e356099ec8eff63706235872ca98e82811f76e2" translate="yes" xml:space="preserve">
          <source>Windows only. Creates an application project for Visual Studio. See &lt;a href=&quot;qmake-platform-notes#creating-visual-studio-project-files&quot;&gt;Creating Visual Studio Project Files&lt;/a&gt; for more information.</source>
          <target state="translated">Windowsのみ。Visual Studioのアプリケーションプロジェクトを作成します。詳細については、「&lt;a href=&quot;qmake-platform-notes#creating-visual-studio-project-files&quot;&gt;Visual Studioプロジェクトファイルの作成」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9a507b2bcfe2d1bdca3de1fb8ef440ea096e7258" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the codepage that should be specified in a generated .rc file. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。生成された.rcファイルで指定する必要があるコードページを指定します。これは、&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されており、&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;および&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていない場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="3fdb2557cdee44b9fa5f8e3ee5e8c140653c66f4" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the codepage that should be specified in a generated .rc file. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。生成された.rcファイルで指定する必要があるコードページを指定します。場合、これはのみ利用されている&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されていると&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;と&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていません。</target>
        </trans-unit>
        <trans-unit id="2243d54caddf6d062e1a834d48f6f71722158bf3" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the company for the project target; this is used where applicable for putting the company name in the application's properties. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。プロジェクトターゲットの会社を指定します。これは、アプリケーションのプロパティに会社名を入れる場合に使用されます。これは、&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されており、&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;および&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていない場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="f385c9f8ae2cbe01cd516861e2aaf5494726c187" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the company for the project target; this is used where applicable for putting the company name in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。プロジェクトターゲットの会社を指定します。これは、アプリケーションのプロパティに会社名を入れるために該当する場合に使用されます。場合、これはのみ利用されている&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されていると&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;と&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていません。</target>
        </trans-unit>
        <trans-unit id="19bf01b86a10419b90ee1ccfb53e051d44003eb6" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the copyright information for the project target; this is used where applicable for putting the copyright information in the application's properties. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。プロジェクトターゲットの著作権情報を指定します。これは、アプリケーションのプロパティに著作権情報を配置する場合に使用されます。これは、&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されており、&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;および&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていない場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="980cb7321b9fed4018d18b965510753498662576" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the copyright information for the project target; this is used where applicable for putting the copyright information in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。プロジェクトターゲットの著作権情報を指定します。これは、アプリケーションのプロパティに著作権情報を配置するために該当する場合に使用されます。場合、これはのみ利用されている&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されていると&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;と&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていません。</target>
        </trans-unit>
        <trans-unit id="c333020ab74e8a3179b0ccde29f65fc886d6230a" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the description for the project target; this is used where applicable for putting the description in the application's properties. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。プロジェクトターゲットの説明を指定します。これは、アプリケーションのプロパティに説明を入れる場合に使用されます。これは、&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されており、&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;および&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていない場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="ab636508ffe15886e5a7dd50accae6ccbf38940d" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the description for the project target; this is used where applicable for putting the description in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。プロジェクトターゲットの説明を指定します。これは、アプリケーションのプロパティに説明を配置するために該当する場合に使用されます。場合、これはのみ利用されている&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されていると&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;と&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていません。</target>
        </trans-unit>
        <trans-unit id="147326ac5b89ba5b28c67ac522efbc70c06eb4e4" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the icons that should be included into a generated .rc file. This is only utilized if the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variable are not set. More details about the generation of .rc files can be found in the &lt;a href=&quot;qmake-platform-notes#&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">Windowsのみ。生成された.rcファイルに含める必要のあるアイコンを指定します。これは、&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;および&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていない場合にのみ使用されます。.rcファイルの生成の詳細については、&lt;a href=&quot;qmake-platform-notes#&quot;&gt;プラットフォームノートを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8a0c03c74a03f108cc96f855ca13c952c62ebd7d" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the icons that should be included into a generated .rc file. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variable are not set. More details about the generation of .rc files can be found in the &lt;a href=&quot;qmake-platform-notes&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">Windowsのみ。生成された.rcファイルに含める必要のあるアイコンを指定します。場合、これはのみ利用され&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;と&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILEの&lt;/a&gt;変数が設定されていません。.rcファイルの生成の詳細については、&lt;a href=&quot;qmake-platform-notes&quot;&gt;プラットフォームノートを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="40ae8a9f462e8bb651ff56c1c30dfab4c72ea64b" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the language that should be specified in a generated .rc file. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。生成された.rcファイルで指定される言語を指定します。これは、&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されており、&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;および&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていない場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="0fb789011f5e73b0a394ab15fdfb133db0b442e0" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the language that should be specified in a generated .rc file. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。生成された.rcファイルで指定する必要のある言語を指定します。場合、これはのみ利用されている&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されていると&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;と&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていません。</target>
        </trans-unit>
        <trans-unit id="98f8cb350c0780aa1e7ffe6f5b94989586bf657f" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the manifest file for the project target. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set. Don't forget to remove embed_manifest_exe and embed_manifest_dll from the CONFIG variable, otherwise it will conflict with the compiler generated one.</source>
          <target state="translated">Windowsのみ。プロジェクトターゲットのマニフェストファイルを指定します。場合にのみ利用され&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;と&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていません。CONFIG変数からembed_manifest_exeとembed_manifest_dllを削除することを忘れないでください。そうしないと、コンパイラーが生成したものと競合します。</target>
        </trans-unit>
        <trans-unit id="63a612f72a6e9db0d4224fac3f264427c04501e3" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the name of the Windows resource compiler's output file for this target. See &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-platform-notes#adding-windows-resource-files&quot;&gt;Adding Windows Resource Files&lt;/a&gt;.</source>
          <target state="translated">Windowsのみ。このターゲットのWindowsリソースコンパイラの出力ファイルの名前を指定します。&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;および&lt;a href=&quot;qmake-platform-notes#adding-windows-resource-files&quot;&gt;Windowsリソースファイルの追加を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f37cbd28ad7237e4d71b047cdf422bdc4c74c5d6" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the name of the Windows resource file (.rc) for the target. See &lt;a href=&quot;qmake-platform-notes#adding-windows-resource-files&quot;&gt;Adding Windows Resource Files&lt;/a&gt;.</source>
          <target state="translated">Windowsのみ。ターゲットのWindowsリソースファイル（.rc）の名前を指定します。&lt;a href=&quot;qmake-platform-notes#adding-windows-resource-files&quot;&gt;Windowsリソースファイルの追加を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="52b3eb085c22889904a231f68cf350b66520f1d0" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the product for the project target; this is used where applicable for putting the product in the application's properties. This is only utilized if the &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。プロジェクトターゲットの製品を指定します。これは、アプリケーションのプロパティに製品を配置する場合に使用されます。これは、&lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されており、&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;および&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていない場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="e19f9e393f7d7e2821916ad1c1b0a5262a897b47" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the product for the project target; this is used where applicable for putting the product in the application's properties. This is only utilized if the &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; or &lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt; variable is set and the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set.</source>
          <target state="translated">Windowsのみ。プロジェクトターゲットの製品を指定します。これは、アプリケーションのプロパティに製品を配置するために該当する場合に使用されます。場合、これはのみ利用されている&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;または&lt;a href=&quot;qmake-variable-reference#rc-icons&quot;&gt;RC_ICONS&lt;/a&gt;変数が設定されていると&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;と&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていません。</target>
        </trans-unit>
        <trans-unit id="e68c590bba3dc40637f317996ef3738619b01f03" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the version number, that the Windows linker puts into the header of the .exe or .dll file via the /VERSION option. Only a major and minor version may be specified. If &lt;a href=&quot;#version-pe-header&quot;&gt;VERSION_PE_HEADER&lt;/a&gt; is not set, it falls back to the major and minor version from &lt;a href=&quot;#version&quot;&gt;VERSION&lt;/a&gt; (if set).</source>
          <target state="translated">Windowsのみ。Windowsリンカーが/ VERSIONオプションを介して.exeまたは.dllファイルのヘッダーに入れるバージョン番号を指定します。メジャーバージョンとマイナーバージョンのみを指定できます。&lt;a href=&quot;#version-pe-header&quot;&gt;VERSION_PE_HEADER&lt;/a&gt;が設定されていない場合、&lt;a href=&quot;#version&quot;&gt;VERSIONの&lt;/a&gt;メジャーバージョンとマイナーバージョンにフォールバックします（設定されている場合）。</target>
        </trans-unit>
        <trans-unit id="ce30491cc2abc691711575dbaede3ae3b2060619" translate="yes" xml:space="preserve">
          <source>Windows only. Specifies the version number, that the Windows linker puts into the header of the .exe or .dll file via the /VERSION option. Only a major and minor version may be specified. If &lt;a href=&quot;qmake-variable-reference#version-pe-header&quot;&gt;VERSION_PE_HEADER&lt;/a&gt; is not set, it falls back to the major and minor version from &lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt; (if set).</source>
          <target state="translated">Windowsのみ。Windowsリンカーが/ VERSIONオプションを介して.exeまたは.dllファイルのヘッダーに配置するバージョン番号を指定します。メジャーバージョンとマイナーバージョンのみを指定できます。&lt;a href=&quot;qmake-variable-reference#version-pe-header&quot;&gt;VERSION_PE_HEADER&lt;/a&gt;が設定されていない場合、&lt;a href=&quot;qmake-variable-reference#version&quot;&gt;VERSION&lt;/a&gt;からメジャーバージョンとマイナーバージョンにフォールバックします（設定されている場合）。</target>
        </trans-unit>
        <trans-unit id="3155e904f0d062c5d534df0d5a48138de41c9b3f" translate="yes" xml:space="preserve">
          <source>Windows only. qmake adds the values of this variable as RC preprocessor macros (/d option). If this variable is not set, the &lt;a href=&quot;#defines&quot;&gt;DEFINES&lt;/a&gt; variable is used instead.</source>
          <target state="translated">Windowsのみ。qmakeは、この変数の値をRCプリプロセッサマクロ（/ dオプション）として追加します。この変数が設定されていない場合は、代わりに&lt;a href=&quot;#defines&quot;&gt;DEFINES&lt;/a&gt;変数が使用されます。</target>
        </trans-unit>
        <trans-unit id="46e6b3ff4863172bf8f5600c53e33bdeea31f93d" translate="yes" xml:space="preserve">
          <source>Windows only. qmake adds the values of this variable as RC preprocessor macros (/d option). If this variable is not set, the &lt;a href=&quot;qmake-variable-reference#defines&quot;&gt;DEFINES&lt;/a&gt; variable is used instead.</source>
          <target state="translated">Windowsのみ。qmakeは、この変数の値をRCプリプロセッサーマクロ（/ dオプション）として追加します。この変数が設定されていない場合は、代わりに&lt;a href=&quot;qmake-variable-reference#defines&quot;&gt;DEFINES&lt;/a&gt;変数が使用されます。</target>
        </trans-unit>
        <trans-unit id="4df68020be8317aea615b4ce4211f35ec1fa9587" translate="yes" xml:space="preserve">
          <source>Windows only: Explicitly access the 32-bit system registry from a 64-bit application running on 64-bit Windows. On 32-bit Windows or from a 32-bit application on 64-bit Windows, this works the same as specifying NativeFormat. This enum value was added in Qt 5.7.</source>
          <target state="translated">Windows のみ。64ビットWindows上で実行されている64ビットアプリケーションから32ビットシステムレジストリに明示的にアクセスします。32ビットWindowsまたは64ビットWindows上の32ビットアプリケーションからは、NativeFormatを指定した場合と同じように動作します。この列挙値は Qt 5.7 で追加されました。</target>
        </trans-unit>
        <trans-unit id="2f06158236694c4fb22e3870b5033f303b0fbab3" translate="yes" xml:space="preserve">
          <source>Windows only: Explicitly access the 64-bit system registry from a 32-bit application running on 64-bit Windows. On 32-bit Windows or from a 64-bit application on 64-bit Windows, this works the same as specifying NativeFormat. This enum value was added in Qt 5.7.</source>
          <target state="translated">Windows のみ。64 ビット Windows で実行されている 32 ビット アプリケーションから 64 ビット システム レジストリに明示的にアクセスします。32ビットWindowsまたは64ビットWindows上の64ビットアプリケーションからは、NativeFormatを指定した場合と同じように動作します。この列挙値は Qt 5.7 で追加されました。</target>
        </trans-unit>
        <trans-unit id="c18ab2a2d650cd3f8fdeaea3ea846924ef5abbe6" translate="yes" xml:space="preserve">
          <source>Windows only: This option can be changed while printing and will take effect from the next call to &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;()</source>
          <target state="translated">Windowsのみ：このオプションは印刷中に変更でき、次回の&lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;（）の呼び出しから有効になります</target>
        </trans-unit>
        <trans-unit id="46fafa0dbfc4874967bb0f32006cc0a4a53860bd" translate="yes" xml:space="preserve">
          <source>Windows support</source>
          <target state="translated">ウィンドウズ対応</target>
        </trans-unit>
        <trans-unit id="debbba0ec9e721880339c3e545c9bf4685ce620c" translate="yes" xml:space="preserve">
          <source>Windows, negate the scope like this:</source>
          <target state="translated">Windowsは、このようにスコープを否定します。</target>
        </trans-unit>
        <trans-unit id="e965f498d5c0feaec41a51c2eed2e6e5bed73d1d" translate="yes" xml:space="preserve">
          <source>Windows-1250 to 1258</source>
          <target state="translated">Windows-1250~1258</target>
        </trans-unit>
        <trans-unit id="4e2bdcc5cbe8867b5cd90d673b89f74e83f179fd" translate="yes" xml:space="preserve">
          <source>Windows-specific code</source>
          <target state="translated">Windows 固有のコード</target>
        </trans-unit>
        <trans-unit id="d0a162f24e233795006248e6eceb7d0912e33599" translate="yes" xml:space="preserve">
          <source>Windows:</source>
          <target state="translated">Windows:</target>
        </trans-unit>
        <trans-unit id="aa7b1304c81faee53ec108e53104881c9fce6e95" translate="yes" xml:space="preserve">
          <source>Windows: &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; does not &quot;own&quot; the shared memory segment. When all threads or processes that have an instance of &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; attached to a particular shared memory segment have either destroyed their instance of &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; or exited, the Windows kernel releases the shared memory segment automatically.</source>
          <target state="translated">Windows：&lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt;は共有メモリセグメントを「所有」しません。&lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemoryの&lt;/a&gt;インスタンスが特定の共有メモリセグメントに接続されているすべてのスレッドまたはプロセスが、QSharedMemoryのインスタンスを&lt;a href=&quot;qsharedmemory&quot;&gt;破棄する&lt;/a&gt;か終了した場合、Windowsカーネルは共有メモリセグメントを自動的に解放します。</target>
        </trans-unit>
        <trans-unit id="0ab17fa1f1ae49296acf0a5cb27b4faef4228070" translate="yes" xml:space="preserve">
          <source>Windows: &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HelpButtonOnRight&lt;/a&gt;.</source>
          <target state="translated">Windows：&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HelpButtonOnRight&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2e08de05c9835cf627faedee69d075521758acaf" translate="yes" xml:space="preserve">
          <source>Windows: QSharedMemory does not &quot;own&quot; the shared memory segment. When all threads or processes that have an instance of QSharedMemory attached to a particular shared memory segment have either destroyed their instance of QSharedMemory or exited, the Windows kernel releases the shared memory segment automatically.</source>
          <target state="translated">Windowsでは、QSharedMemoryは共有メモリセグメントを「所有」していません。QSharedMemoryは共有メモリセグメントを &quot;所有 &quot;しません。特定の共有メモリセグメントに接続された QSharedMemory のインスタンスを持つすべてのスレッドまたはプロセスが QSharedMemory のインスタンスを破壊するか、または終了したとき、Windows カーネルは共有メモリセグメントを自動的に解放します。</target>
        </trans-unit>
        <trans-unit id="d8a5137a288b0e5257034389ada56f6b151f603f" translate="yes" xml:space="preserve">
          <source>Windows: The widget needs to have the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::FramelessWindowHint&lt;/a&gt; window flag set for the translucency to work.</source>
          <target state="translated">Windows：半透明が機能するには、ウィジェットに&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: FramelessWindowHint&lt;/a&gt;ウィンドウフラグを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="db21ec9933009e8f5d8a3ced33dfe0db6cff791a" translate="yes" xml:space="preserve">
          <source>Wintab API</source>
          <target state="translated">Wintab API</target>
        </trans-unit>
        <trans-unit id="c8a331815c4cd7107e056ec349acd44bb2648bbd" translate="yes" xml:space="preserve">
          <source>Wireless Bitmap</source>
          <target state="translated">ワイヤレスビットマップ</target>
        </trans-unit>
        <trans-unit id="564f8c6e76fbd512be2e38dabdfdd61550d0c3cc" translate="yes" xml:space="preserve">
          <source>With</source>
          <target state="translated">With</target>
        </trans-unit>
        <trans-unit id="9e1ff6d984a1c8b1ff2b3f677866508350f3d8d5" translate="yes" xml:space="preserve">
          <source>With 'e', 'E', and 'f',</source>
          <target state="translated">'e'、'e'、'f'と。</target>
        </trans-unit>
        <trans-unit id="a5fbd6fd302ea44886d8c44c601edc98b4db8d5b" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; and &lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; two collection classes are provided: &lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt; is a list of nodes, and &lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; is used to handle unordered sets of nodes (often used for attributes).</source>
          <target state="translated">&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeList&lt;/a&gt;と&lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMap&lt;/a&gt; 2つのコレクションクラスが用意されています&lt;a href=&quot;qdomnodelist&quot;&gt;QDomNodeListは、&lt;/a&gt;ノードのリストであり、&lt;a href=&quot;qdomnamednodemap&quot;&gt;QDomNamedNodeMapは&lt;/a&gt;（多くの場合、属性に使用）ノードの順不同のセットを処理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="103e578fcb9980940e23f0b7a4dd54c06d84b355" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qgraphicsitem#pos&quot;&gt;QGraphicsItem::pos&lt;/a&gt;() being one of the few exceptions, &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;'s functions operate in item coordinates, regardless of the item, or any of its parents' transformation. For example, an item's bounding rect (i.e. &lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;QGraphicsItem::boundingRect&lt;/a&gt;()) is always given in item coordinates.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsitem#pos&quot;&gt;QGraphicsItem :: POS&lt;/a&gt;（）はいくつかの例外の一つである、&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;の機能に関係なく、アイテムの、アイテム座標で動作する、またはその親の任意'変換。たとえば、アイテムの境界の&lt;a href=&quot;qgraphicsitem#boundingRect&quot;&gt;四角形&lt;/a&gt;（つまり、QGraphicsItem :: boundingRect（））は常にアイテム座標で指定されます。</target>
        </trans-unit>
        <trans-unit id="64181e04407db65b3c028b6ce3f5b5b5318a1cb9" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; and &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, &lt;code&gt;foreach&lt;/code&gt; accesses the value component of the (key, value) pairs automatically, so you should not call values() on the container (it would generate an unnecessary copy, see below). If you want to iterate over both the keys and the values, you can use iterators (which are faster), or you can obtain the keys, and use them to get the values too:</source>
          <target state="translated">で&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;と&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;、 &lt;code&gt;foreach&lt;/code&gt; のあなたは、コンテナ上の値を（）を呼び出すべきではありませんので、自動的にペア（キー、値）の値コンポーネントにアクセスする（それが不要なコピーを生成し、以下を参照してください）。キーと値の両方を反復処理する場合は、イテレータ（より高速）を使用するか、キーを取得して、それらを使用して値を取得することもできます。</target>
        </trans-unit>
        <trans-unit id="6025b132baf0dac3042c7392558ba4f5ba6759c7" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridView&lt;/a&gt;, it is possible to specify transitions that should be applied whenever the items in the view change as a result of modifications to the view's model. They both have the following properties that can be set to the appropriate transitions to be run for various operations:</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-listview&quot;&gt;リストビュー&lt;/a&gt;と&lt;a href=&quot;qml-qtquick-gridview&quot;&gt;GridViewの&lt;/a&gt;は、ビューのモデルへの変更の結果としてビュー変化するたびにアイテムを適用されるべき遷移を特定することができます。どちらにも次のプロパティがあり、さまざまな操作で実行される適切な遷移に設定できます。</target>
        </trans-unit>
        <trans-unit id="16727313357abbd738b4912e8e0ced4d8dee6099" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qprinter#setFullPage&quot;&gt;setFullPage&lt;/a&gt;(false) (the default), the metrics will be a bit smaller; how much depends on the printer in use.</source>
          <target state="translated">&lt;a href=&quot;qprinter#setFullPage&quot;&gt;setFullPage&lt;/a&gt;（偽）（デフォルト）、メトリックは少し小さくなります。使用しているプリンタによって異なります。</target>
        </trans-unit>
        <trans-unit id="d90a350b7015138fda882d26fb8d2f88e33cf36c" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; a call to &lt;a href=&quot;qtcpserver#listen&quot;&gt;listen()&lt;/a&gt; may fail with a timeout error. If a port number other than 0 is passed to &lt;a href=&quot;qtcpserver#listen&quot;&gt;listen()&lt;/a&gt;, then it is not guaranteed that it is the specified port that will be used. Use &lt;a href=&quot;qtcpserver#serverPort&quot;&gt;serverPort()&lt;/a&gt; and &lt;a href=&quot;qtcpserver#serverAddress&quot;&gt;serverAddress()&lt;/a&gt; to get the actual address and port used to listen for connections. SOCKS5 only supports one accepted connection per call to &lt;a href=&quot;qtcpserver#listen&quot;&gt;listen()&lt;/a&gt;, and each call is likely to result in a different &lt;a href=&quot;qtcpserver#serverPort&quot;&gt;serverPort()&lt;/a&gt; being used.</source>
          <target state="translated">&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;するコール&lt;a href=&quot;qtcpserver#listen&quot;&gt;を聞くには、（）&lt;/a&gt;タイムアウトエラーで失敗することがあります。0以外のポート番号が&lt;a href=&quot;qtcpserver#listen&quot;&gt;listen（）に&lt;/a&gt;渡された場合、それが使用される指定されたポートであるとは限りません。使用&lt;a href=&quot;qtcpserver#serverPort&quot;&gt;するserverPort（）&lt;/a&gt;と&lt;a href=&quot;qtcpserver#serverAddress&quot;&gt;serverAddressで（）&lt;/a&gt;接続をリッスンするために使用される実際のアドレスとポートを取得します。SOCKS5は、&lt;a href=&quot;qtcpserver#listen&quot;&gt;listen（）の&lt;/a&gt;呼び出しごとに1つの受け入れられた接続のみをサポートし、呼び出しごとに異なる&lt;a href=&quot;qtcpserver#serverPort&quot;&gt;serverPort（）&lt;/a&gt;が使用される可能性があります。</target>
        </trans-unit>
        <trans-unit id="872ba56ce042a47a6a6c319e65798f0a9e94df17" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qtexttableformat#borderCollapse&quot;&gt;borderCollapse&lt;/a&gt; disabled, cell borders can still be styled using &lt;a href=&quot;qtexttablecellformat&quot;&gt;QTextTableCellFormat&lt;/a&gt; but styling will be applied only within the cell's frame, which is probably not very useful in practice.</source>
          <target state="translated">&lt;a href=&quot;qtexttableformat#borderCollapse&quot;&gt;borderCollapse&lt;/a&gt;無効にすると、セルの境界線はまだ使ってスタイリングすることができ&lt;a href=&quot;qtexttablecellformat&quot;&gt;QTextTableCellFormatを&lt;/a&gt;が、スタイリングは、おそらく実際には非常に有用ではありません、セルの枠内で適用されます。</target>
        </trans-unit>
        <trans-unit id="74231e7c06d3afefe1c7418ba883ce0704f875db" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;, a call to &lt;a href=&quot;qabstractsocket#bind&quot;&gt;bind()&lt;/a&gt; may fail with a timeout error. If a port number other than 0 is passed to &lt;a href=&quot;qabstractsocket#bind&quot;&gt;bind()&lt;/a&gt;, it is not guaranteed that it is the specified port that will be used. Use &lt;a href=&quot;qabstractsocket#localPort&quot;&gt;localPort()&lt;/a&gt; and &lt;a href=&quot;qabstractsocket#localAddress&quot;&gt;localAddress()&lt;/a&gt; to get the actual address and port number in use. Because proxied UDP goes through two UDP connections, it is more likely that packets will be dropped.</source>
          <target state="translated">で&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;、への呼び出し&lt;a href=&quot;qabstractsocket#bind&quot;&gt;バインド（）&lt;/a&gt;タイムアウトエラーで失敗することがあります。&lt;a href=&quot;qabstractsocket#bind&quot;&gt;bind（）&lt;/a&gt;に0以外のポート番号が渡された場合、それが使用される指定されたポートであることは保証されません。使用&lt;a href=&quot;qabstractsocket#localPort&quot;&gt;localPortでは（）&lt;/a&gt;および&lt;a href=&quot;qabstractsocket#localAddress&quot;&gt;localAddressでは（）は&lt;/a&gt;、使用中の実際のアドレスとポート番号を取得します。プロキシされたUDPは2つのUDP接続を経由するため、パケットがドロップされる可能性が高くなります。</target>
        </trans-unit>
        <trans-unit id="c9a076d67fba73a9b4410b9906e0667a40bc2584" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;, you can also establish a virtual connection to a UDP server using &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;() and then use &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() and &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() to exchange datagrams without specifying the receiver for each datagram.</source>
          <target state="translated">では&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;、あなたも使ってUDPサーバへの仮想接続を確立することができます&lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHostを&lt;/a&gt;（）し、その後、使用&lt;a href=&quot;qiodevice#read&quot;&gt;読んで&lt;/a&gt;（）と&lt;a href=&quot;qiodevice#write&quot;&gt;書き込み&lt;/a&gt;、各データグラムの受信機を指定せずに交換データグラムに（）。</target>
        </trans-unit>
        <trans-unit id="f1f73057832d43cc1f0b28576c1787b331ef4bc6" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt; formatting, all percent-encoded sequences will be decoded fully and the '%' character is used to represent itself. &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt; should be used with care, since it may cause data loss. See the documentation of &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::FullyDecoded&lt;/a&gt; for information on what data may be lost.</source>
          <target state="translated">&lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl :: FullyDecoded&lt;/a&gt;書式設定、すべてのパーセントエンコードシーケンスが完全にデコードされ、「％」文字は、自分自身を表現するために使用されています。&lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl :: FullyDecoded&lt;/a&gt;はデータの損失を引き起こす可能性があるため、注意して使用する必要があります。どのデータが失われる可能性があるかについては、&lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl :: FullyDecodedの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="aea815a02f618bd505e0018ce84688729e474818" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, and &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;, the performance of appending items is amortized O(log</source>
          <target state="translated">&lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;、&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;、および&lt;a href=&quot;qset&quot;&gt;QSET&lt;/a&gt;、追加アイテムの性能は償却O（logです</target>
        </trans-unit>
        <trans-unit id="91b4e93e646576cbe861f8e8ff67b744e1ec1177" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; and on INTEGRITY, the returned value is the &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; socket descriptor and the type is defined by &lt;a href=&quot;qtcpserver#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;.</source>
          <target state="translated">で&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRTの&lt;/a&gt;とINTEGRITYに、返される値は&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServerの&lt;/a&gt;ソケット記述子と種類は以下のように定義される&lt;a href=&quot;qtcpserver#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e8688a16d1e596260602f5999a09f611bc3d5b43" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt; and on INTEGRITY, the returned value is the &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; socket descriptor and the type is defined by &lt;a href=&quot;qabstractsocket#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;.</source>
          <target state="translated">で&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRTの&lt;/a&gt;とINTEGRITYに、返される値は&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocketの&lt;/a&gt;ソケット記述子と種類は以下のように定義される&lt;a href=&quot;qabstractsocket#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="9248ebd5b1e0afba9784b19bd821110389b32c72" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;TextEdit.MarkdownText&lt;/code&gt;, checkboxes that result from using the &lt;a href=&quot;https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown&quot;&gt;GitHub checkbox extension&lt;/a&gt; are interactively checkable.</source>
          <target state="translated">&lt;code&gt;TextEdit.MarkdownText&lt;/code&gt; 、使用してからチェックボックス結果&lt;a href=&quot;https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown&quot;&gt;GitHubのチェックボックスの拡張機能は、&lt;/a&gt;対話的にチェック可能です。</target>
        </trans-unit>
        <trans-unit id="03290e3e4ae717c4512a405c7c756059087b2a61" translate="yes" xml:space="preserve">
          <source>With APIs other than OpenGL the relevant states are only those that are set via the command list (for example, OMSetRenderTargets, RSSetViewports, RSSetScissorRects, OMSetBlendFactor, OMSetStencilRef in case of D3D12), and only when such commands were added to the scenegraph's command list queried via the QSGRendererInterface::CommandList resource enum. States set in pipeline state objects do not need to be reported here. Similarly, draw call related settings (root signature, descriptor heaps, etc.) are always set again by the scenegraph so &lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;() can freely change them.</source>
          <target state="translated">OpenGL以外のAPIでは、関連する状態は、コマンドリスト（たとえば、OMSetRenderTargets、RSSetViewports、RSSetScissorRects、OMSetBlendFactor、D3D12の場合はOMSetStencilRef）を介して設定された状態のみであり、そのようなコマンドがクエリされたシーングラフのコマンドリストに追加された場合のみQSGRendererInterface :: CommandListリソース列挙を介して。パイプライン状態オブジェクトに設定された状態は、ここで報告する必要はありません。同様に、描画呼び出しに関連する設定（ルート署名、記述子ヒープなど）は常にシーングラフによって再設定されるため、&lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;（）はそれらを自由に変更できます。</target>
        </trans-unit>
        <trans-unit id="9e70a3722f26658e32b513ebe4cd59190104116b" translate="yes" xml:space="preserve">
          <source>With APIs other than OpenGL, the only relevant values are the ones that correspond to dynamic state changes recorded on the command list/buffer. For example, RSSetViewports, RSSetScissorRects, OMSetBlendFactor, OMSetStencilRef in case of D3D12, or vkCmdSetViewport, vkCmdSetScissor, vkCmdSetBlendConstants, vkCmdSetStencilRef in case of Vulkan, and only when such commands were added to the scenegraph's command list queried via the QSGRendererInterface::CommandList resource enum. States set in pipeline state objects do not need to be reported here. Similarly, draw call related settings (pipeline states, descriptor sets, vertex or index buffer bindings, root signature, descriptor heaps, etc.) are always set again by the scenegraph so &lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;() can freely change them.</source>
          <target state="translated">OpenGL以外のAPIでは、関連する値は、コマンドリスト/バッファーに記録された動的な状態変化に対応する値のみです。たとえば、RSSetViewports、RSSetScissorRects、OMSetBlendFactor、D3D12の場合はOMSetStencilRef、またはvkCmdSetViewport、vkCmdSetScissor、vkCmdSetBlendConstants、vkCmdSetBlendConstants、vkCmdSetStencilRef to scene command。パイプライン状態オブジェクトに設定された状態は、ここで報告する必要はありません。同様に、描画呼び出しに関連する設定（パイプラインの状態、記述子セット、頂点またはインデックスバッファーのバインディング、ルート署名、記述子ヒープなど）は、常にシーングラフによって再設定されるため、&lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;（）はそれらを自由に変更できます。</target>
        </trans-unit>
        <trans-unit id="cafbf9271f9b132f25eceee442e07c6d15fe8061" translate="yes" xml:space="preserve">
          <source>With D3D12, these strings can either be a URL for a local file, a file in the resource system, or an HLSL source string. Using a URL for a local file or a file in the resource system indicates that the file in question contains pre-compiled D3D shader bytecode generated by the &lt;code&gt;fxc&lt;/code&gt; tool, or, alternatively, HLSL source code. The type of file is detected automatically. This means that the D3D12 backend supports all options from &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderCompilationType and &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderSourceType.</source>
          <target state="translated">D3D12では、これらの文字列は、ローカルファイルのURL、リソースシステム内のファイル、またはHLSLソース文字列のいずれかになります。ローカルファイルまたはリソースシステム内のファイルのURLを使用すると、問題のファイルに、 &lt;code&gt;fxc&lt;/code&gt; ツールによって生成されたコンパイル済みのD3Dシェーダーバイトコード、またはHLSLソースコードが含まれていることを示します。ファイルの種類は自動的に検出されます。つまり、D3D12バックエンドは&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; .shaderCompilationTypeおよび&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; .shaderSourceTypeのすべてのオプションをサポートします。</target>
        </trans-unit>
        <trans-unit id="88a719a916cbdf9f54485acb3de11f5065e5756a" translate="yes" xml:space="preserve">
          <source>With Frameworks:</source>
          <target state="translated">フレームワークで。</target>
        </trans-unit>
        <trans-unit id="f74f1e0ed752fa79a313fb567cf4e0f1c85789a4" translate="yes" xml:space="preserve">
          <source>With GLSL the default shader expects the texture coordinate to be passed from the vertex shader as &lt;code&gt;varying highp vec2 qt_TexCoord0&lt;/code&gt;, and it samples from a sampler2D named &lt;code&gt;source&lt;/code&gt;. With HLSL the texture is named &lt;code&gt;source&lt;/code&gt;, while the vertex shader is expected to provide &lt;code&gt;float2 coord : TEXCOORD0&lt;/code&gt; in its output in addition to &lt;code&gt;float4 position : SV_POSITION&lt;/code&gt; (names can differ since linking is done based on the semantics).</source>
          <target state="translated">GLSLを使用すると、デフォルトのシェーダーは、テクスチャ座標が頂点シェーダーから &lt;code&gt;varying highp vec2 qt_TexCoord0&lt;/code&gt; として渡されることを期待し、sourceという名前のsampler2Dからサンプリングし &lt;code&gt;source&lt;/code&gt; 。HLSLでは、テクスチャの名前は &lt;code&gt;source&lt;/code&gt; ですが、頂点シェーダーは、 &lt;code&gt;float4 position : SV_POSITION&lt;/code&gt; に加えて、出力に &lt;code&gt;float2 coord : TEXCOORD0&lt;/code&gt; を提供することが期待されています：SV_POSITION（リンクはセマンティクスに基づいて行われるため、名前は異なる場合があります）。</target>
        </trans-unit>
        <trans-unit id="06bb1d65a22341423f053582013a700a14cd0a62" translate="yes" xml:space="preserve">
          <source>With GLSL the default shader passes the texture coordinate along to the fragment shader as &lt;code&gt;varying highp vec2 qt_TexCoord0&lt;/code&gt;. With HLSL it is enough to use the standard &lt;code&gt;TEXCOORD0&lt;/code&gt; semantic, for example &lt;code&gt;float2 coord : TEXCOORD0&lt;/code&gt;.</source>
          <target state="translated">GLSLを使用すると、デフォルトのシェーダーはテクスチャ座標をフラグメントシェーダーに沿って &lt;code&gt;varying highp vec2 qt_TexCoord0&lt;/code&gt; として渡します。HLSL では、たとえば &lt;code&gt;float2 coord : TEXCOORD0&lt;/code&gt; ように、標準の &lt;code&gt;TEXCOORD0&lt;/code&gt; セマンティックを使用するだけで十分です。</target>
        </trans-unit>
        <trans-unit id="432ffb8eb16488c3b464914ba3b76169484e8c79" translate="yes" xml:space="preserve">
          <source>With Microsoft SQL Server the result set returned by a stored procedure that uses the return statement, or returns multiple result sets, will be accessible only if you set the query's forward only mode to</source>
          <target state="translated">Microsoft SQL Serverでは、return文を使用するか、複数の結果セットを返すストアドプロシージャから返された結果セットは、クエリのフォワードオンリーモードを</target>
        </trans-unit>
        <trans-unit id="6ab92144418b0fd8935aca47560e5939a743472a" translate="yes" xml:space="preserve">
          <source>With OpenGL 3.0+ contexts, when portability is not important, the versioned &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; variants give easy access to all the modern OpenGL functions available in a given version:</source>
          <target state="translated">OpenGL 3.0+コンテキストでは、移植性が重要でない場合、バージョン管理された&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;バリアントにより、特定のバージョンで利用可能なすべての最新のOpenGL関数に簡単にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="3e299c1f4a978eb904713ea8077150796fa08d67" translate="yes" xml:space="preserve">
          <source>With OpenGL 3.0+ contexts, when portability is not important, the versioned &lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt; variants give easy access to all the modern OpenGL functions available in a given version:</source>
          <target state="translated">OpenGL 3.0以降のコンテキストでは、移植性が重要でない場合、バージョン管理された&lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;バリアントを使用すると、特定のバージョンで使用可能なすべての最新のOpenGL関数に簡単にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="d99fbf67dac539e085a083af2978cf398c2b3dce" translate="yes" xml:space="preserve">
          <source>With OpenGL 3.2 the concept of profiles was introduced. Two profiles are currently defined for OpenGL: Core and Compatibility.</source>
          <target state="translated">OpenGL 3.2では、プロファイルの概念が導入されました。現在、2つのプロファイルがOpenGL用に定義されています:コアと互換性です。</target>
        </trans-unit>
        <trans-unit id="c0f1facb5ae8f9746481b734a9086c1e3d74f3a5" translate="yes" xml:space="preserve">
          <source>With OpenGL the default version is &lt;code&gt;2.0&lt;/code&gt;.</source>
          <target state="translated">OpenGLでは、デフォルトのバージョンは &lt;code&gt;2.0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="84bc76e9356158a46e5ae5149f27cd5b3c84721a" translate="yes" xml:space="preserve">
          <source>With OpenGL the value is &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.RuntimeCompilation, which corresponds to the traditional way of using &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt;. Non-OpenGL backends are expected to focus more on &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.OfflineCompilation, however.</source>
          <target state="translated">OpenGLと値である&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;使用する従来の方法に対応.RuntimeCompilation、&lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffectを&lt;/a&gt;。ただし、OpenGL以外のバックエンドは&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; .OfflineCompilation に重点を置くことが期待されます。</target>
        </trans-unit>
        <trans-unit id="7de003d6b77d6796e19049db78d2434fccdf7e90" translate="yes" xml:space="preserve">
          <source>With OpenGL the value is &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.ShaderSourceString, which corresponds to the traditional way of inlining GLSL source code into QML. Other, non-OpenGL Qt Quick backends may however decide not to support inlined shader sources, or even shader sources at all. In this case shaders are expected to be pre-compiled into formats like SPIR-V or D3D shader bytecode.</source>
          <target state="translated">OpenGLでは、値は&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; .ShaderSourceStringです。これは、GLSLソースコードをQMLにインライン化する従来の方法に対応しています。ただし、OpenGL以外のQt Quickバックエンドでは、インラインシェーダーソースをサポートしないか、シェーダーソースをまったくサポートしない場合があります。この場合、シェーダーはSPIR-VまたはD3Dシェーダーバイトコードなどの形式にプリコンパイルされることが期待されます。</target>
        </trans-unit>
        <trans-unit id="42c1b1cf3a8ec76910bd045e07dea06b5c135d27" translate="yes" xml:space="preserve">
          <source>With OpenGL, the native handle is a GLuint value, so &lt;code&gt;object&lt;/code&gt; is then a pointer to a GLuint. With Vulkan, the native handle is a VkImage, so &lt;code&gt;object&lt;/code&gt; is a pointer to a VkImage. With Direct3D 11 and Metal &lt;code&gt;object&lt;/code&gt; is a pointer to a ID3D11Texture2D or MTLTexture pointer, respectively.</source>
          <target state="translated">OpenGLでは、ネイティブハンドルはGLuint値であるため、 &lt;code&gt;object&lt;/code&gt; はGLuintへのポインターになります。Vulkanでは、ネイティブハンドルはVkImageであるため、 &lt;code&gt;object&lt;/code&gt; はVkImageへのポインターです。Direct3D 11の場合、Metal &lt;code&gt;object&lt;/code&gt; はそれぞれID3D11Texture2DまたはMTLTextureポインターへのポインターです。</target>
        </trans-unit>
        <trans-unit id="447f8b0cd8714a7ba6f152254a9a2f10cb30db4e" translate="yes" xml:space="preserve">
          <source>With OpenGL, the scenegraph's OpenGL context will be current both when calling the destructor and this function.</source>
          <target state="translated">OpenGLでは、scenegraphのOpenGLコンテキストは、デストラクタとこの関数を呼び出す時の両方でカレントになります。</target>
        </trans-unit>
        <trans-unit id="681461a44bd3fc3f6ab0e940a488044968df90ae" translate="yes" xml:space="preserve">
          <source>With QUdpSocket, you can also establish a virtual connection to a UDP server using &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;() and then use &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() and &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() to exchange datagrams without specifying the receiver for each datagram.</source>
          <target state="translated">QUdpSocketを使用すると、&lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;（）を使用してUDPサーバーへの仮想接続を確立し、&lt;a href=&quot;qiodevice#read&quot;&gt;読み取り&lt;/a&gt;（）と&lt;a href=&quot;qiodevice#write&quot;&gt;書き込み&lt;/a&gt;（）を使用して、データグラムごとに受信者を指定せずにデータグラムを交換することもできます。</target>
        </trans-unit>
        <trans-unit id="6d4000ff07b627f2f3cd8ff0559054e853b706b9" translate="yes" xml:space="preserve">
          <source>With Qt Quick Controls 2, declare an &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; as the root item of your application and launch it by using &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt; instead. This ensures that you can control top level window properties from QML.</source>
          <target state="translated">Qt Quick Controls 2では、&lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindowをアプリケーション&lt;/a&gt;のルート項目として宣言し、代わりに&lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt;を使用して起動します。これにより、QMLから最上位のウィンドウプロパティを確実に制御できます。</target>
        </trans-unit>
        <trans-unit id="1d4dbcde91ae4a65a5e8e42051d5c480bc878f00" translate="yes" xml:space="preserve">
          <source>With Qt Quick Controls, declare an &lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; as the root item of your application and launch it by using &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt; instead. This ensures that you can control top level window properties from QML.</source>
          <target state="translated">Qtクイックコントロールを使用して、&lt;a href=&quot;qml-qtquick-controls2-applicationwindow&quot;&gt;アプリケーション&lt;/a&gt;のルートアイテムとしてApplicationWindowを宣言し、代わりに&lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt;を使用して起動します。これにより、QMLからトップレベルのウィンドウプロパティを制御できるようになります。</target>
        </trans-unit>
        <trans-unit id="ab58178f80111f6946c48a42f95bb6acc41459d3" translate="yes" xml:space="preserve">
          <source>With Qt XML Patterns, a standard way to present the initial focus to a query is to call &lt;a href=&quot;qxmlquery#setFocus&quot;&gt;QXmlQuery::setFocus&lt;/a&gt;(). Another common way is to let the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; itself create the initial focus by using the first step of the path expression to call the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;&lt;code&gt;doc()&lt;/code&gt; function. The &lt;code&gt;doc()&lt;/code&gt; function loads an XML document and returns the</source>
          <target state="translated">Qt XMLパターンでは、クエリに最初のフォーカスを提示する標準的な方法は、&lt;a href=&quot;qxmlquery#setFocus&quot;&gt;QXmlQuery :: setFocus&lt;/a&gt;（）を呼び出すことです。もう1つの一般的な方法は、パス式の最初のステップを使用して&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery &lt;/a&gt; &lt;code&gt;doc()&lt;/code&gt; 関数を呼び出すことにより、&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;自体に初期フォーカスを作成させることです。 &lt;code&gt;doc()&lt;/code&gt; 関数は、XML文書とリターンロード</target>
        </trans-unit>
        <trans-unit id="294b78628ff463c80a1c17789150fe32ad463fe9" translate="yes" xml:space="preserve">
          <source>With Qt XML Patterns, a standard way to present the initial focus to a query is to call &lt;a href=&quot;qxmlquery#setFocus&quot;&gt;QXmlQuery::setFocus&lt;/a&gt;(). Another common way is to let the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; itself create the initial focus by using the first step of the path expression to call the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;&lt;code&gt;doc()&lt;/code&gt; function. The &lt;code&gt;doc()&lt;/code&gt; function loads an XML document and returns the</source>
          <target state="translated">Qt XMLパターンを使用して、クエリに初期フォーカスを提示する標準的な方法は、&lt;a href=&quot;qxmlquery#setFocus&quot;&gt;QXmlQuery :: setFocus&lt;/a&gt;（）を呼び出すことです。もう一つの一般的な方法はできるようにすることです&lt;a href=&quot;xmlprocessing#&quot;&gt;XQueryの&lt;/a&gt;自身が呼び出すためにパス式の最初のステップを使って、初期フォーカスを作成&lt;a href=&quot;xmlprocessing#&quot;&gt;するXQuery &lt;/a&gt; &lt;code&gt;doc()&lt;/code&gt; 関数を。 &lt;code&gt;doc()&lt;/code&gt; 関数は、XML文書とリターンロード</target>
        </trans-unit>
        <trans-unit id="5200fea545520eec9315c9a63628fdd54aebc6ff" translate="yes" xml:space="preserve">
          <source>With Qt XML Patterns, subclassing &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; eliminates the transformation required to convert the non-XML data model to the XML data model, because there is only ever one data model required. The non-XML data model presents the non-XML data to the query engine via the XML data model API. Also, since the query engine uses the API to access the &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;, the data model subclass can construct the elements, attributes and other data on demand, responding to the query's specific requests. This can greatly improve efficiency, because it means the entire model might not have to be built. For example, in the file system model above, it is not necessary to build an instance for a whole XML file representing the whole file system. Instead nodes are created on demand, which also likely is a small subset of the file system.</source>
          <target state="translated">Qt XMLパターンでは、&lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModelを&lt;/a&gt;サブクラス化すると、非XMLデータモデルからXMLデータモデルへの変換に必要な変換が不要になります。これは、必要なデータモデルが1つだけであるためです。非XMLデータモデルは、非XMLデータをXMLデータモデルAPIを介してクエリエンジンに提示します。また、クエリエンジンはAPIを使用して&lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;にアクセスするため、データモデルサブクラスは、クエリの特定のリクエストに応答して、要素、属性、その他のデータをオンデマンドで構築できます。モデル全体を構築する必要がない場合があるため、これにより効率が大幅に向上します。たとえば、上記のファイルシステムモデルでは、ファイルシステム全体を表すXMLファイル全体のインスタンスを作成する必要はありません。代わりに、ノードはオンデマンドで作成されます。これもファイルシステムの小さなサブセットである可能性があります。</target>
        </trans-unit>
        <trans-unit id="c78c159fb1a47e011fbc4b1b7ed3ea8b59c8a82e" translate="yes" xml:space="preserve">
          <source>With Qt for INTEGRITY you can build and develop applications for the INTEGRITY RTOS. Qt for INTEGRITY supports most &lt;a href=&quot;qtwebassembly-platform-notes#supported-qt-modules&quot;&gt;Qt Modules&lt;/a&gt;. The development environment includes your target device and Qt sources that you need to build for your target device. See &lt;a href=&quot;#supported-development-hosts-and-boards&quot;&gt;Supported Development Hosts and Boards&lt;/a&gt; for detailed information about the supported development environment.</source>
          <target state="translated">Qt for INTEGRITYを使用すると、INTEGRITY RTOSのアプリケーションを構築および開発できます。Qt for INTEGRITYは、ほとんどの&lt;a href=&quot;qtwebassembly-platform-notes#supported-qt-modules&quot;&gt;Qtモジュールを&lt;/a&gt;サポートしています。開発環境には、ターゲットデバイスと、ターゲットデバイス用にビルドする必要のあるQtソースが含まれています。サポートされる開発環境の詳細については、サポート&lt;a href=&quot;#supported-development-hosts-and-boards&quot;&gt;される開発ホストおよびボード&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="8f59c1714c7571ae8afd5652446f0ed08ecf749a" translate="yes" xml:space="preserve">
          <source>With Qt for INTEGRITY you can build and develop applications for the INTEGRITY RTOS. Qt for INTEGRITY supports most &lt;a href=&quot;qtwebassembly-platform-notes#supported-qt-modules&quot;&gt;Qt Modules&lt;/a&gt;. The development environment includes your target device and Qt sources that you need to build for your target device. See &lt;a href=&quot;integrity#supported-development-hosts-and-boards&quot;&gt;Supported Development Hosts and Boards&lt;/a&gt; for detailed information about the supported development environment.</source>
          <target state="translated">Qt for INTEGRITYを使用すると、INTEGRITYRTOS用のアプリケーションを構築および開発できます。Qt for INTEGRITYは、ほとんどの&lt;a href=&quot;qtwebassembly-platform-notes#supported-qt-modules&quot;&gt;Qtモジュールを&lt;/a&gt;サポートしています。開発環境には、ターゲットデバイスとターゲットデバイス用に構築する必要のあるQtソースが含まれます。&lt;a href=&quot;integrity#supported-development-hosts-and-boards&quot;&gt;サポートされ&lt;/a&gt;ている開発環境の詳細については、サポートされている開発ホストおよびボードを参照してください。</target>
        </trans-unit>
        <trans-unit id="69fb83e92c1f79f960bcc24dd540282df982418a" translate="yes" xml:space="preserve">
          <source>With Qt version 4.3 or higher, clipboard changes made by other applications will only be detected when the application is activated.</source>
          <target state="translated">Qtのバージョン4.3以上では、他のアプリケーションによるクリップボードの変更は、アプリケーションが起動しているときにのみ検出されます。</target>
        </trans-unit>
        <trans-unit id="38c1bb6dacd5c65a7b7279214271a5b38f1f18ac" translate="yes" xml:space="preserve">
          <source>With WinRT and on INTEGRITY, the returned value is the &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; socket descriptor and the type is defined by &lt;a href=&quot;qtcpserver#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;.</source>
          <target state="translated">WinRTおよびINTEGRITYでは、戻り値は&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;ソケット記述子であり、タイプは&lt;a href=&quot;qtcpserver#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;によって定義されます。</target>
        </trans-unit>
        <trans-unit id="3276d2fcc5a01e5cb84d4dc7659ad61ff8ba72e1" translate="yes" xml:space="preserve">
          <source>With WinRT and on INTEGRITY, the returned value is the &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; socket descriptor and the type is defined by &lt;a href=&quot;qabstractsocket#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;.</source>
          <target state="translated">WinRTおよびINTEGRITYでは、戻り値は&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;ソケット記述子であり、タイプは&lt;a href=&quot;qabstractsocket#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;によって定義されます。</target>
        </trans-unit>
        <trans-unit id="c0055b7bd0044bac2582ebd0bfa65dec57fe1df3" translate="yes" xml:space="preserve">
          <source>With a scroll bar policy of &lt;a href=&quot;qt#ScrollBarPolicy-enum&quot;&gt;Qt::ScrollBarAsNeeded&lt;/a&gt; (the default), &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; shows scroll bars when they provide a non-zero scrolling range, and hides them otherwise.</source>
          <target state="translated">&lt;a href=&quot;qt#ScrollBarPolicy-enum&quot;&gt;Qt :: ScrollBarAsNeeded&lt;/a&gt;（デフォルト）のスクロールバーポリシーでは、&lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt;はゼロ以外のスクロール範囲を提供する場合にスクロールバーを表示し、それ以外の場合は非表示にします。</target>
        </trans-unit>
        <trans-unit id="588817461689f4648aeaa1203fd38f984768ded4" translate="yes" xml:space="preserve">
          <source>With a scroll bar policy of &lt;a href=&quot;qt#ScrollBarPolicy-enum&quot;&gt;Qt::ScrollBarAsNeeded&lt;/a&gt; (the default), QAbstractScrollArea shows scroll bars when they provide a non-zero scrolling range, and hides them otherwise.</source>
          <target state="translated">&lt;a href=&quot;qt#ScrollBarPolicy-enum&quot;&gt;Qt :: ScrollBarAsNeeded&lt;/a&gt;（デフォルト）のスクロールバーポリシーでは、QAbstractScrollAreaは、ゼロ以外のスクロール範囲を提供する場合はスクロールバーを表示し、それ以外の場合は非表示にします。</target>
        </trans-unit>
        <trans-unit id="5b86fde7c459bcbfcfa267a5ff9e215a585397ef" translate="yes" xml:space="preserve">
          <source>With above definitions, &lt;code&gt;qmake&lt;/code&gt; invokes &lt;code&gt;qscxmlc&lt;/code&gt; to generate MyStatemachine.h and MyStatemachine.cpp, and adds them to &lt;a href=&quot;qmake-variable-reference#headers&quot;&gt;HEADERS&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#sources&quot;&gt;SOURCES&lt;/a&gt; variables.</source>
          <target state="translated">上記の定義では、 &lt;code&gt;qmake&lt;/code&gt; は &lt;code&gt;qscxmlc&lt;/code&gt; を呼び出してMyStatemachine.hおよびMyStatemachine.cppを生成し、それらを&lt;a href=&quot;qmake-variable-reference#headers&quot;&gt;HEADERS&lt;/a&gt;および&lt;a href=&quot;qmake-variable-reference#sources&quot;&gt;SOURCES&lt;/a&gt;変数に追加します。</target>
        </trans-unit>
        <trans-unit id="23532dbc4d414bd26d528c80048829ff3523bbff" translate="yes" xml:space="preserve">
          <source>With above, QDoc will search for a file &lt;code&gt;$T_INSTALL_DOCS/qtdoc/qtdoc.index&lt;/code&gt; for a dependency to &lt;code&gt;qtdoc&lt;/code&gt;. If an index file for a dependency is not found, QDoc will output a warning.</source>
          <target state="translated">上記の場合、QDocはファイル &lt;code&gt;$T_INSTALL_DOCS/qtdoc/qtdoc.index&lt;/code&gt; への依存関係を &lt;code&gt;qtdoc&lt;/code&gt; ます。依存関係のインデックスファイルが見つからない場合、QDocは警告を出力します。</target>
        </trans-unit>
        <trans-unit id="90f3b749f81d01b2b5e2f0a5d8e087a29b49e2f8" translate="yes" xml:space="preserve">
          <source>With above, the output goes to &lt;code&gt;&amp;lt;outputdir&amp;gt;/html&lt;/code&gt;.</source>
          <target state="translated">上記の場合、出力は &lt;code&gt;&amp;lt;outputdir&amp;gt;/html&lt;/code&gt; に送られます。</target>
        </trans-unit>
        <trans-unit id="b15a21b29363c3b39cc0f6c7ee308ae9c4564e0b" translate="yes" xml:space="preserve">
          <source>With asynchronous method invocations, the parameters must be of types that are known to Qt's meta-object system, because Qt needs to copy the arguments to store them in an event behind the scenes. If you try to use a queued connection and get the error message</source>
          <target state="translated">非同期メソッドの呼び出しでは、パラメータは Qt のメタオブジェクトシステムが知っている型でなければなりません。キュー接続を使おうとしたときに</target>
        </trans-unit>
        <trans-unit id="e6de4d619d9110413879a282b274cd1a66b256e9" translate="yes" xml:space="preserve">
          <source>With every new key pressed, the input method will try to create a matching string for the text typed so far called preedit string. While the input context is active, the user can only move the cursor inside the string belonging to this input context.</source>
          <target state="translated">新しいキーが押されるたびに、入力メソッドはこれまでに入力されたテキストにマッチする文字列(preedit stringと呼ばれる)を作成しようとします。入力コンテキストがアクティブな間は、ユーザーはこの入力コンテキストに属する文字列の内側にのみカーソルを移動することができます。</target>
        </trans-unit>
        <trans-unit id="673d6b13ddc2d912706385fe78fc3d71c3d6e826" translate="yes" xml:space="preserve">
          <source>With exception of stretch this property is honored by all &lt;a href=&quot;qheaderview#ResizeMode-enum&quot;&gt;resize modes&lt;/a&gt;</source>
          <target state="translated">ストレッチを除いて、このプロパティはすべての&lt;a href=&quot;qheaderview#ResizeMode-enum&quot;&gt;サイズ変更モードで受け入れられます&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41df9982939bf1be88fb0cdd6e6ef7ea4641826a" translate="yes" xml:space="preserve">
          <source>With focusOnTouch switched off, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; behaves as one would expect on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="translated">focusOnTouchをオフにすると、&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;は&lt;a href=&quot;internationalization#macos&quot;&gt;macOSで&lt;/a&gt;期待されるように動作します。</target>
        </trans-unit>
        <trans-unit id="ab1743a92e7b4813d9a91b3ed5e64db53f470a34" translate="yes" xml:space="preserve">
          <source>With focusOnTouch switched off, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; behaves as one would expect on macOS.</source>
          <target state="translated">focusOnTouchをオフにすると、&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;はmacOSで期待されるように動作します。</target>
        </trans-unit>
        <trans-unit id="821e71fdf72d781b71a1fbea52fb1d4c3002eb2f" translate="yes" xml:space="preserve">
          <source>With kinetic scrolling, the user can push the widget in a given direction and it will continue to scroll in this direction until it is stopped either by the user or by friction. Aspects of inertia, friction and other physical concepts can be changed in order to fine-tune an intuitive user experience.</source>
          <target state="translated">キネティックスクロールでは、ユーザはウィジェットをある方向に押すことができ、ユーザによって停止されるか摩擦によって停止されるまで、その方向にスクロールし続けます。慣性、摩擦、その他の物理的な概念は、直感的なユーザー体験を微調整するために変更することができます。</target>
        </trans-unit>
        <trans-unit id="6b879995b4ecf5982d1f676e0d66843140979c2b" translate="yes" xml:space="preserve">
          <source>With named binding, the bound values can be examined in the following ways:</source>
          <target state="translated">名前付きバインドでは、バインドされた値を以下の方法で調べることができます。</target>
        </trans-unit>
        <trans-unit id="51146c030055b1726d8afea222699007093e9f63" translate="yes" xml:space="preserve">
          <source>With one exception, once an &lt;a href=&quot;qxmlstreamreader#error&quot;&gt;error&lt;/a&gt;() is reported by readNext(), further reading of the XML stream is not possible. Then &lt;a href=&quot;qxmlstreamreader#atEnd&quot;&gt;atEnd&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;, &lt;a href=&quot;qxmlstreamreader#hasError&quot;&gt;hasError&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;, and this function returns &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;QXmlStreamReader::Invalid&lt;/a&gt;.</source>
          <target state="translated">1つの例外を除いて、readNext（）によって&lt;a href=&quot;qxmlstreamreader#error&quot;&gt;エラー&lt;/a&gt;（）が報告されると、XMLストリームをさらに読み取ることはできません。次に、&lt;a href=&quot;qxmlstreamreader#atEnd&quot;&gt;atEnd&lt;/a&gt;（）は &lt;code&gt;true&lt;/code&gt; を返し、&lt;a href=&quot;qxmlstreamreader#hasError&quot;&gt;hasError&lt;/a&gt;（）は &lt;code&gt;true&lt;/code&gt; を返し、この関数は&lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;QXmlStreamReader :: Invalidを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="9aad0cbd983b7614d584843441c029b9cbdb475f" translate="yes" xml:space="preserve">
          <source>With pointer devices, however, it might be desired to show a tool tip as a result of hovering a button for a while. The following example presents how to show a tool tip after hovering a button for a second, and hide it after a timeout of five seconds.</source>
          <target state="translated">しかし、ポインターデバイスでは、ボタンをしばらく押した結果、ツールチップを表示したい場合があります。以下の例では、ボタンを1秒間ホバリングした後にツールチップを表示し、5秒のタイムアウト後にツールチップを非表示にする方法を示します。</target>
        </trans-unit>
        <trans-unit id="b07b9a0650c08801fb3ee24f13888eb52c25da23" translate="yes" xml:space="preserve">
          <source>With positional binding, the code becomes:</source>
          <target state="translated">ポジションバインディングを使うと、コードはこうなります。</target>
        </trans-unit>
        <trans-unit id="350e0215a00adf00788271d9e8529f364e45277e" translate="yes" xml:space="preserve">
          <source>With queued connections, the parameters must be of types that are known to Qt's meta-object system, because Qt needs to copy the arguments to store them in an event behind the scenes. If you try to use a queued connection and get the error message:</source>
          <target state="translated">キュー接続では、パラメータは Qt のメタオブジェクトシステムが知っている型でなければなりません。キュー接続を使おうとしたときにエラーメッセージが表示された場合は、次のようにしてください。</target>
        </trans-unit>
        <trans-unit id="a6a070bcffff40c5594afefafc985c9414a6eb90" translate="yes" xml:space="preserve">
          <source>With some IR sensors, it is quite uncommon to reach the top and the bottom of the value range, and some parts of the range ends might not be obtainable at all. This is due to the behavior of the sensor hardware. With these sensors, the absolute value of reflectance should never be used directly. Instead, applications should react to the relative change of the reading values. Use &lt;a href=&quot;qproximitysensor&quot;&gt;QProximitySensor&lt;/a&gt; if it is only necessary to check if something is close to the device or not.</source>
          <target state="translated">一部のIRセンサーでは、値の範囲の上限と下限に到達することは非常にまれであり、範囲の一部の端がまったく取得できない場合があります。これは、センサーハードウェアの動作によるものです。これらのセンサーでは、反射率の絶対値を直接使用しないでください。代わりに、アプリケーションは読み取り値の相対的な変化に反応する必要があります。何かがデバイスの近くにあるかどうかを確認するだけでよい場合は、&lt;a href=&quot;qproximitysensor&quot;&gt;QProximitySensorを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="98860aeaceada0d58cee21ee4f89dcc02a0a5c9c" translate="yes" xml:space="preserve">
          <source>With some graphics APIs it can be necessary to also connect to the &lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;QQuickWindow::beforeRendering&lt;/a&gt;() signal, because that is emitted before recording the beginning of a renderpass on the command buffer (vkCmdBeginRenderPass with Vulkan, or starting to encode via MTLRenderCommandEncoder in case of Metal). Recording copy operations cannot be done inside render() with such APIs. Rather, do it in the slot connected (with DirectConnection) to the beforeRendering signal.</source>
          <target state="translated">一部のグラフィックAPIでは、&lt;a href=&quot;qquickwindow#beforeRendering&quot;&gt;QQuickWindow :: beforeRendering&lt;/a&gt;（）信号にも接続する必要がある場合があります。これは、コマンドバッファー（VulkanではvkCmdBeginRenderPass）の開始を記録する前に、またはMTLRenderCommandEncoderを介してエンコードを開始する前に出力されるためです。金属）。このようなAPIを使用して、render（）内でコピー操作を記録することはできません。むしろ、beforeRendering信号に（DirectConnectionで）接続されたスロットでそれを行います。</target>
        </trans-unit>
        <trans-unit id="221abf8769a746fc8a5d0c3cbda6329aff80f937" translate="yes" xml:space="preserve">
          <source>With that in place, we can run our example. To tell the application to use our new style, we pass &lt;code&gt;-style :/mystyle&lt;/code&gt; as an application argument, but there are &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;many ways&lt;/a&gt; to specify the style to use.</source>
          <target state="translated">これで、例を実行できます。新しいスタイルを使用するようにアプリケーションに指示するには、アプリケーション引数として &lt;code&gt;-style :/mystyle&lt;/code&gt; を渡しますが、使用するスタイルを指定する&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls&quot;&gt;方法&lt;/a&gt;はたくさんあります。</target>
        </trans-unit>
        <trans-unit id="20ed663ad7aa47554249fed415db68eab6505978" translate="yes" xml:space="preserve">
          <source>With that in place, we can run our example. To tell the application to use our new style, we pass &lt;code&gt;-style :/mystyle&lt;/code&gt; as an application argument, but there are &lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;many ways&lt;/a&gt; to specify the style to use.</source>
          <target state="translated">これで、サンプルを実行できます。新しいスタイルを使用するようアプリケーションに指示するには、アプリケーションの引数として &lt;code&gt;-style :/mystyle&lt;/code&gt; を渡しますが、使用するスタイルを指定する&lt;a href=&quot;qtquickcontrols2-styles#using-styles-in-qt-quick-controls-2&quot;&gt;方法&lt;/a&gt;はたくさんあります。</target>
        </trans-unit>
        <trans-unit id="5fbed55f199978b95bb8be9cfaa32f1145085ad9" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;desktop&lt;/code&gt; option, Qt uses the OpenGL installed on Windows, requiring that the OpenGL in the target Windows machine is compatible with the application. The &lt;code&gt;-opengl&lt;/code&gt; option accepts two versions of OpenGL ES, &lt;code&gt;es2&lt;/code&gt; for OpenGL ES 2.0 or &lt;code&gt;es1&lt;/code&gt; for OpenGL ES Common Profile.</source>
          <target state="translated">&lt;code&gt;desktop&lt;/code&gt; オプション、Qtは、ターゲットWindowsマシンでOpenGLがアプリケーションと互換性があることを必要とし、Windows上でインストールOpenGLを使用しています。 &lt;code&gt;-opengl&lt;/code&gt; オプションは、OpenGL ES、2つのバージョンの受け入れ &lt;code&gt;es2&lt;/code&gt; のOpenGL ES 2.0のためか、 &lt;code&gt;es1&lt;/code&gt; のOpenGL ESの共通のプロフィールを。</target>
        </trans-unit>
        <trans-unit id="fe042905e84c3d5fdcfaa8645b39f1c47f0fbe13" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;dynamic&lt;/code&gt; option, Qt will try to use native OpenGL first. If that fails, it will fall back to ANGLE and finally to software rendering in case of ANGLE failing as well.</source>
          <target state="translated">では &lt;code&gt;dynamic&lt;/code&gt; オプション、Qtは最初のネイティブのOpenGLを使用しようとします。それが失敗した場合は、ANGLEにフォールバックし、ANGLEが失敗した場合は、最後にソフトウェアレンダリングにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="9c564f0cac53211709d0377812b2fa7ac34743fe" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;evdev&lt;/code&gt; backend, to explicitly specify the input device to use, set the environment variable &lt;code&gt;QT_GAMEPAD_DEVICE&lt;/code&gt; to the desired /dev/input/event* node. This should not be needed normally, but can be useful in case multiple gamepads are connected and only one of them is interesting to the application.</source>
          <target state="translated">&lt;code&gt;evdev&lt;/code&gt; ののバックエンド、明示的に設定、使用する環境変数の入力デバイスを指定するには &lt;code&gt;QT_GAMEPAD_DEVICE&lt;/code&gt; 希望の/ dev /入力/イベント*ノードにします。これは通常は必要ありませんが、複数のゲームパッドが接続されていて、そのうちの1つだけがアプリケーションにとって興味深い場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="931e9e916ca3659002048961c97277bffef20b49" translate="yes" xml:space="preserve">
          <source>With the Desaturate effect, you can decrease the intensity of all colors in the scene.</source>
          <target state="translated">ディサチュレート効果を使用すると、シーン内のすべての色の強度を下げることができます。</target>
        </trans-unit>
        <trans-unit id="3c4f9b7a9a12ad19f18e25c2d90f8b83e221b8ab" translate="yes" xml:space="preserve">
          <source>With the Maps API we can associate a position with a map in various formats supplied by a backend. Then the Places API could be used to populate places on the Map or even specify the current position as a place of interest and associate it with an icon, contact details and other information.</source>
          <target state="translated">Maps API を使用すると、バックエンドから提供される様々な形式の地図に位置を関連付けることができます。その後、Places API を使用してマップ上の場所を入力したり、現在の位置を興味のある場所として指定して、アイコンや連絡先などの情報と関連付けることができます。</target>
        </trans-unit>
        <trans-unit id="4d3dd1511bb2506b5f01cd151fa5a1a2f06d1da5" translate="yes" xml:space="preserve">
          <source>With the Qt XML classes elements and attributes can be accessed in two ways: either by referring to their qualified names consisting of the namespace prefix and the &quot;real&quot; name (or</source>
          <target state="translated">Qt XMLクラスでは、要素や属性にアクセスするには2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="b02e908cf412444190b61dcfbc88106e96789821" translate="yes" xml:space="preserve">
          <source>With the Sensor Gestures classes, you are able to easily utilize device gesturing using sensors, such as the accelerometer and proximity.</source>
          <target state="translated">センサージェスチャークラスでは、加速度センサーや近接センサーなどのセンサーを使ったデバイスジェスチャーを簡単に活用することができます。</target>
        </trans-unit>
        <trans-unit id="869c294776bf9a426f97c9fa13c232b465ef28f4" translate="yes" xml:space="preserve">
          <source>With the above definitions, you can use a drop-in replacement for moc if one is available. The command is executed on all arguments given to the &lt;code&gt;NEW_HEADERS&lt;/code&gt; variable (from the &lt;code&gt;input&lt;/code&gt; member), and the result is written to the file defined by the &lt;code&gt;output&lt;/code&gt; member. This file is added to the other source files in the project. Additionally, qmake will execute &lt;code&gt;depend_command&lt;/code&gt; to generate dependency information, and place this information in the project as well.</source>
          <target state="translated">上記の定義を使用すると、mocがある場合はドロップイン置換を使用できます。コマンドは（ &lt;code&gt;input&lt;/code&gt; メンバーから） &lt;code&gt;NEW_HEADERS&lt;/code&gt; 変数に指定されたすべての引数に対して実行され、結果は &lt;code&gt;output&lt;/code&gt; メンバーによって定義されたファイルに書き込まれます。このファイルは、プロジェクトの他のソースファイルに追加されます。さらに、qmakeは &lt;code&gt;depend_command&lt;/code&gt; を実行して依存関係情報を生成し、この情報もプロジェクトに配置します。</target>
        </trans-unit>
        <trans-unit id="92b9763b1026f4efa2f3149590e32e26be57dc85" translate="yes" xml:space="preserve">
          <source>With the above shader program active, we can draw a green triangle as follows:</source>
          <target state="translated">上記のシェーダプログラムをアクティブにした状態で、以下のように緑の三角形を描くことができます。</target>
        </trans-unit>
        <trans-unit id="8416fc42b96313b2b8aac317a84d59f62596f044" translate="yes" xml:space="preserve">
          <source>With the addition of the &lt;a href=&quot;bearer-management#&quot;&gt;Bearer Management&lt;/a&gt; API to Qt 4.7 &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; gained the ability to manage network connections. &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; can start the network interface if the device is offline and terminates the interface if the current process is the last one to use the uplink. Note that some platforms utilize grace periods from when the last application stops using a uplink until the system actually terminates the connectivity link. Roaming is equally transparent. Any queued/pending network requests are automatically transferred to the new access point.</source>
          <target state="translated">Qt 4.7に&lt;a href=&quot;bearer-management#&quot;&gt;Bearer Management&lt;/a&gt; API が追加されたことで、&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;はネットワーク接続を管理する機能を獲得しました。&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;は、デバイスがオフラインの場合はネットワークインターフェイスを開始し、現在のプロセスがアップリンクを使用する最後のプロセスである場合はインターフェイスを終了できます。一部のプラットフォームは、最後のアプリケーションがアップリンクの使用を停止してからシステムが実際に接続リンクを終了するまでの猶予期間を利用することに注意してください。ローミングも同様に透過的です。キューに入れられた/保留中のネットワーク要求は、自動的に新しいアクセスポイントに転送されます。</target>
        </trans-unit>
        <trans-unit id="00822784ce3826dcb93570b51ca52a383b8f6c0b" translate="yes" xml:space="preserve">
          <source>With the advent of the new HKSCS-2001 standard, James Su &amp;lt;suzhe@turbolinux.com.cn&amp;gt; &amp;lt;suzhe@gnuchina.org&amp;gt; generated the Big5-HKSCS&amp;lt;-&amp;gt;Unicode tables with a very space-efficient algorithm. He generously donated his code to glibc in May 2002. Subsequently, James has generously allowed Anthony Fok to adapt the code for Qt-3.0.5.</source>
          <target state="translated">新しいHKSCS-2001標準の登場により、James Su &amp;lt;suzhe@turbolinux.com.cn&amp;gt; &amp;lt;suzhe@gnuchina.org&amp;gt;は、非常にスペース効率の高いアルゴリズムでBig5-HKSCS &amp;lt;-&amp;gt; Unicodeテーブルを生成しました。彼は2002年5月にglibcにコードを惜しみなく寄付しました。その後、ジェームズはAnthony FokがQt-3.0.5にコードを適合させることを寛大に許可しました。</target>
        </trans-unit>
        <trans-unit id="34745d4b077570a08254cc752de60ff0f7330755" translate="yes" xml:space="preserve">
          <source>With the code above, the focus jumps to the Name field when the user presses Alt+N, and to the Phone field when the user presses Alt+P.</source>
          <target state="translated">上記のコードでは、ユーザーが Alt+N を押すと Name フィールドに、Alt+P を押すと Phone フィールドにフォーカスが移動します。</target>
        </trans-unit>
        <trans-unit id="81038844e7a8b209f37aea7424f73ec83d1621b0" translate="yes" xml:space="preserve">
          <source>With the default options, the resulting &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; can be passed back to a &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; later on, but any password that was present initially will be lost.</source>
          <target state="translated">デフォルトのオプションでは、結果の&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;を後で&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;に戻すことができますが、最初に存在していたパスワードは失われます。</target>
        </trans-unit>
        <trans-unit id="b7b06f1a1c686c3d07d35c0610bcd1bd5cb38bd9" translate="yes" xml:space="preserve">
          <source>With the exception of extrusion and data driven style properties, every property described at the &lt;a href=&quot;https://www.mapbox.com/mapbox-gl-js/style-spec/&quot;&gt;Mapbox Style Specification&lt;/a&gt; can be changed at runtime.</source>
          <target state="translated">押し出しとデータ駆動型のプロパティを除いて、&lt;a href=&quot;https://www.mapbox.com/mapbox-gl-js/style-spec/&quot;&gt;Mapboxスタイル仕様&lt;/a&gt;で説明されているすべてのプロパティは実行時に変更できます。</target>
        </trans-unit>
        <trans-unit id="4e8eb7da73c7c3aa1b5265e6b3dba6817c1a8a76" translate="yes" xml:space="preserve">
          <source>With the general QDoc configuration variables, you can define where QDoc will find the various source files it needs to generate the documentation, as well as the directory to put the generated documentation. You can also do some minor manipulation of QDoc itself, controlling its output and processing behavior.</source>
          <target state="translated">一般的なQDoc設定変数を使って、QDocがドキュメントを生成するために必要な様々なソースファイルをどこに置くか、また生成されたドキュメントを置くディレクトリを定義することができます。また、QDoc自体の出力や処理の動作を制御して、ちょっとした操作を行うこともできます。</target>
        </trans-unit>
        <trans-unit id="0f22d6143da7faf256f2f1ef0a1fc4b305512bb5" translate="yes" xml:space="preserve">
          <source>With the legacy, direct OpenGL based renderer, the following states are set on the render thread's context before this function is called:</source>
          <target state="translated">レガシーのダイレクトOpenGLベースのレンダラーでは、この関数が呼び出される前にレンダースレッドのコンテキストに以下の状態が設定されます。</target>
        </trans-unit>
        <trans-unit id="4630d50555ff84b84eb4d30fe9f9b8852a94a553" translate="yes" xml:space="preserve">
          <source>With the menu bar and the toolbars in place, it's time to populate them with actions. New actions for both menus and toolbars are created in the action editor window, simplifying the creation and management of actions.</source>
          <target state="translated">メニューバーとツールバーを配置したら、アクションを追加してみましょう。メニューとツールバーの両方の新しいアクションは、アクションエディタウィンドウで作成され、アクションの作成と管理が簡単になります。</target>
        </trans-unit>
        <trans-unit id="69d6aed81f0026ce55a79e748bd89bed87b83e08" translate="yes" xml:space="preserve">
          <source>With the mesh object selected, triangulate the mesh by pressing</source>
          <target state="translated">メッシュオブジェクトを選択した状態で</target>
        </trans-unit>
        <trans-unit id="95eb9381e6072798a40389b86655d9fd401f0ce9" translate="yes" xml:space="preserve">
          <source>With the release of Qt 5.0, Qt no longer contains its own window system implementation: QWS is no longer a supported platform. For single-process use cases, the &lt;a href=&quot;qpa&quot;&gt;Qt Platform Abstraction&lt;/a&gt; is a superior solution.</source>
          <target state="translated">Qt 5.0のリリースにより、Qtには独自のウィンドウシステム実装が含まれなくなりました。QWSはサポートされているプラ​​ットフォームではなくなりました。シングルプロセスのユースケースでは、&lt;a href=&quot;qpa&quot;&gt;Qt PlatformAbstraction&lt;/a&gt;が優れたソリューションです。</target>
        </trans-unit>
        <trans-unit id="8ba8beaa5ccb89224ebb1e5279efd4bf120446ce" translate="yes" xml:space="preserve">
          <source>With the release of Qt 5.0, Qt no longer contains its own window system implementation: QWS is no longer a supported platform. For single-process use cases, the &lt;a href=&quot;qpa#&quot;&gt;Qt Platform Abstraction&lt;/a&gt; is a superior solution.</source>
          <target state="translated">Qt 5.0のリリースにより、Qtには独自のウィンドウシステム実装が含まれなくなりました。QWSはサポートされているプラ​​ットフォームではなくなりました。単一プロセスのユースケースでは、&lt;a href=&quot;qpa#&quot;&gt;Qt Platform Abstraction&lt;/a&gt;が優れたソリューションです。</target>
        </trans-unit>
        <trans-unit id="226eafcb0be655108e453892716e9262e96c694f" translate="yes" xml:space="preserve">
          <source>With the string-based syntax, parameter types are explicitly specified. As a result, the desired instance of an overloaded signal or slot is unambiguous.</source>
          <target state="translated">文字列ベースの構文では、パラメータタイプが明示的に指定されます。その結果、オーバーロードされたシグナルやスロットのインスタンスを明確に指定することができます。</target>
        </trans-unit>
        <trans-unit id="df559dccd3615f39a3779064c769730d95d87094" translate="yes" xml:space="preserve">
          <source>With this addition to the &lt;code&gt;CONFIG&lt;/code&gt; variable, qmake will search the locations listed above for the &lt;code&gt;myfeatures.prf&lt;/code&gt; file after it has finished parsing your project file. On Unix systems, it will look for the following file:</source>
          <target state="translated">この &lt;code&gt;CONFIG&lt;/code&gt; 変数への追加により、qmakeは、プロジェクトファイルの解析が完了した後、上記の場所で &lt;code&gt;myfeatures.prf&lt;/code&gt; ファイルを検索します。Unixシステムでは、次のファイルを探します。</target>
        </trans-unit>
        <trans-unit id="6ff9e75675058b679f2eb7be7099aa17fe657039" translate="yes" xml:space="preserve">
          <source>With this approach, references to objects are &quot;pulled&quot; from QML. The problem with this is that the C++ logic layer depends on the QML presentation layer. If we were to refactor the QML in such a way that the &lt;code&gt;objectName&lt;/code&gt; changes, or some other change breaks the ability for the C++ to find the QML object, our workflow becomes much more complicated and tedious.</source>
          <target state="translated">このアプローチでは、オブジェクトへの参照はQMLから「プル」されます。これの問題は、C ++ロジックレイヤーがQMLプレゼンテーションレイヤーに依存することです。 &lt;code&gt;objectName&lt;/code&gt; が変更されるような方法でQMLをリファクタリングしたり、その他の変更によってC ++がQMLオブジェクトを見つけられなくなったりすると、ワークフローがはるかに複雑で面倒になります。</target>
        </trans-unit>
        <trans-unit id="9f2ab919194cff8766a6dcde52f34360c2fe234f" translate="yes" xml:space="preserve">
          <source>With this approach, the C++ remains unchanged in the event that the QML needs to be refactored in the future.</source>
          <target state="translated">この方法では、将来的に QML のリファクタリングが必要になった場合でも、C++は変更されません。</target>
        </trans-unit>
        <trans-unit id="a64fe6916545bea49b7932f628ee891ea8dbc494" translate="yes" xml:space="preserve">
          <source>With this code, every time a Button instance with a customized background is created, both backgrounds will be created, resulting in sub-optimal creation performance.</source>
          <target state="translated">このコードでは、カスタマイズされた背景を持つ Button インスタンスが作成されるたびに、両方の背景が作成されてしまい、最適な作成パフォーマンスが得られません。</target>
        </trans-unit>
        <trans-unit id="1d72e55e5902cdbd34e9a240ea81a0531c6f03eb" translate="yes" xml:space="preserve">
          <source>With this in mind, a good way to prepare for a migration to Qt Quick Controls 2 is to place each control that you have a custom style for in its own QML file. For example, the Qt Quick Controls 1 button above could be moved to a file named &lt;code&gt;Button.qml&lt;/code&gt; in a directory named &lt;code&gt;controls&lt;/code&gt;, and used in the following manner:</source>
          <target state="translated">これを念頭に置いて、Qt Quick Controls 2への移行を準備する良い方法は、カスタムスタイルの各コントロールを独自のQMLファイルに配置することです。例えば、Qtのクイックは、上記1つのボタンを制御しますがという名前のファイルに移動することができ &lt;code&gt;Button.qml&lt;/code&gt; というディレクトリに &lt;code&gt;controls&lt;/code&gt; し、以下のように使用します：</target>
        </trans-unit>
        <trans-unit id="8e40643349bff07a93acc7de2d9ba6544d9bed5c" translate="yes" xml:space="preserve">
          <source>With this in place, you can now instantiate nodes using this new custom protocol:</source>
          <target state="translated">これにより、この新しいカスタムプロトコルを使用してノードをインスタンス化できるようになりました。</target>
        </trans-unit>
        <trans-unit id="b44a27f1ba83491906b0359bf1a34061110759e5" translate="yes" xml:space="preserve">
          <source>With this in place, your application's UI should scale depending on the display resolution on offer.</source>
          <target state="translated">これを導入することで、アプリケーションの UI は、提供されているディスプレイの解像度に応じてスケーリングされるようになります。</target>
        </trans-unit>
        <trans-unit id="1aaeb06eee8c7d2b3530ca50f98a4f7d9f67617d" translate="yes" xml:space="preserve">
          <source>With this method the web channel can be accessed by web page content. If the content is not under your control and might be hostile, this could be a security issue and you should consider installing it in a private JavaScript world.</source>
          <target state="translated">この方法では、ウェブページのコンテンツからウェブチャンネルにアクセスすることができます。コンテンツが自分の管理下になく、敵対的なものである可能性がある場合、これはセキュリティ上の問題である可能性があるので、プライベートなJavaScriptの世界にインストールすることを検討してください。</target>
        </trans-unit>
        <trans-unit id="a71904030ea175c80ffb79064c7c063e94b75ebe" translate="yes" xml:space="preserve">
          <source>With this syntax, the function returns a &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; object that is configured to use the &lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtDebugMsg&lt;/a&gt; message type. It automatically puts a single space between each item, and outputs a newline at the end. It supports many C++ and Qt types.</source>
          <target state="translated">この構文では、関数は&lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtDebugMsg&lt;/a&gt;メッセージタイプを使用するように構成された&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;オブジェクトを返します。それは自動的に各アイテムの間に単一のスペースを置き、最後に改行を出力します。多くのC ++およびQtタイプをサポートしています。</target>
        </trans-unit>
        <trans-unit id="09e6570fb10b890d1ae82341959ca9e59abf00b3" translate="yes" xml:space="preserve">
          <source>With this syntax, the function returns a &lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt; object that is configured to use the &lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtInfoMsg&lt;/a&gt; message type. It automatically puts a single space between each item, and outputs a newline at the end. It supports many C++ and Qt types.</source>
          <target state="translated">この構文では、関数は&lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtInfoMsg&lt;/a&gt;メッセージタイプを使用するように構成された&lt;a href=&quot;qdebug&quot;&gt;QDebug&lt;/a&gt;オブジェクトを返します。それは自動的に各アイテムの間に単一のスペースを置き、最後に改行を出力します。多くのC ++およびQtタイプをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ab50a0c6987873a38799562140997c8acee97a9b" translate="yes" xml:space="preserve">
          <source>With those files available, you would select a different file on the android platform, but only if the locale was en_GB.</source>
          <target state="translated">これらのファイルが利用可能であれば、androidプラットフォーム上で別のファイルを選択することになりますが、ロケールがen_GBの場合に限ります。</target>
        </trans-unit>
        <trans-unit id="866895372c80b4bdd3e62c8aef9547035f4c98ee" translate="yes" xml:space="preserve">
          <source>Within a QDoc comment, &lt;code&gt;//!&lt;/code&gt; is used as a single-line documentation comment; the comment itself and anything after it, until a newline, is omitted from the generated output.</source>
          <target state="translated">QDocコメント内で、 &lt;code&gt;//!&lt;/code&gt; 単一行のドキュメントコメントとして使用されます。コメント自体と、その後の改行までは、生成された出力から省略されます。</target>
        </trans-unit>
        <trans-unit id="655a9796e8fb878a317a5f67cf23c2b1dbd01fee" translate="yes" xml:space="preserve">
          <source>Within a left-to-right text block, decrease cursor position when pressing left arrow key, increase cursor position when pressing the right arrow key. If the text block is right-to-left, the opposite behavior applies.</source>
          <target state="translated">左から右へのテキストブロック内では、左矢印キーを押すとカーソル位置が減少し、右矢印キーを押すとカーソル位置が増加します。テキストブロックが右から左の場合は、逆の動作が適用されます。</target>
        </trans-unit>
        <trans-unit id="2be4fc252023b47779487c38f81570875da113b8" translate="yes" xml:space="preserve">
          <source>Within a mouse-driven interface, this signal is emitted when a mouse pointer passes over a link, corresponding to the &lt;code&gt;mouseover&lt;/code&gt; DOM event. This event may also occur in touch interfaces for &lt;code&gt;mouseover&lt;/code&gt; events that are not cancelled with &lt;code&gt;preventDefault()&lt;/code&gt;.</source>
          <target state="translated">マウス駆動のインターフェース内では、マウスポインターがリンクの上を通過すると、この信号が発生します。これは、 &lt;code&gt;mouseover&lt;/code&gt; DOMイベントに対応しています。このイベントは、 &lt;code&gt;preventDefault()&lt;/code&gt; でキャンセルされない &lt;code&gt;mouseover&lt;/code&gt; イベントのタッチインターフェイスでも発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7475ef05b2ebf0cf6f98c2374da72ca3b31d77a3" translate="yes" xml:space="preserve">
          <source>Within a test program, test functions should be independent of each other and they should not rely upon previous test functions having been run. You can check this by running the test function on its own with &lt;code&gt;tst_foo testname&lt;/code&gt;.</source>
          <target state="translated">テストプログラム内では、テスト機能は互いに独立している必要があり、以前に実行されたテスト機能に依存してはなりません。これは、 &lt;code&gt;tst_foo testname&lt;/code&gt; してテスト関数を単独で実行することで確認できます。</target>
        </trans-unit>
        <trans-unit id="6b45d63a358e475e448bdb8871a6ca660c14056b" translate="yes" xml:space="preserve">
          <source>Within each area, different</source>
          <target state="translated">各エリア内では、異なる</target>
        </trans-unit>
        <trans-unit id="e4059b684739705541b9624361d42e0f33def68e" translate="yes" xml:space="preserve">
          <source>Within each focus scope one object may have &lt;code&gt;Item::focus&lt;/code&gt; set to &lt;code&gt;true&lt;/code&gt;. If more than one &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; has the &lt;code&gt;focus&lt;/code&gt; property set, the last type to set the &lt;code&gt;focus&lt;/code&gt; will have the focus and the others are unset, similar to when there are no focus scopes.</source>
          <target state="translated">各フォーカススコープ内では、1つのオブジェクトで &lt;code&gt;Item::focus&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定できます。複数の&lt;a href=&quot;qml-qtquick-item&quot;&gt;項目&lt;/a&gt;に &lt;code&gt;focus&lt;/code&gt; プロパティが設定されている場合、フォーカススコープがない場合と同様に、 &lt;code&gt;focus&lt;/code&gt; を設定する最後のタイプにフォーカスが設定され、その他の項目は設定されません。</target>
        </trans-unit>
        <trans-unit id="76b9b2e562bfe536134a9bb89d912ba8baa46477" translate="yes" xml:space="preserve">
          <source>Within the</source>
          <target state="translated">内では</target>
        </trans-unit>
        <trans-unit id="cf2f4d425769454a3db62a8d6ae5b0475b3cf387" translate="yes" xml:space="preserve">
          <source>Within the FrameGraph tree, multiple &lt;a href=&quot;qml-qt3d-render-layerfilter&quot;&gt;LayerFilter&lt;/a&gt; nodes can be nested within a branch going from root to a leaf. In that case the filtering will first operate on all entities of the scene using the filtering method specified by the first declared &lt;a href=&quot;qml-qt3d-render-layerfilter&quot;&gt;LayerFilter&lt;/a&gt;. Then the filtered subset of entities will be filtered again based on the filtering method set on the second &lt;a href=&quot;qml-qt3d-render-layerfilter&quot;&gt;LayerFilter&lt;/a&gt; declared. This is then repeated until all &lt;a href=&quot;qml-qt3d-render-layerfilter&quot;&gt;LayerFilter&lt;/a&gt; nodes of the branch have been consumed.</source>
          <target state="translated">FrameGraphツリー内では、ルートからリーフに向かうブランチ内に複数の&lt;a href=&quot;qml-qt3d-render-layerfilter&quot;&gt;LayerFilter&lt;/a&gt;ノードをネストできます。その場合、フィルタリングは最初に、最初に宣言された&lt;a href=&quot;qml-qt3d-render-layerfilter&quot;&gt;LayerFilter&lt;/a&gt;によって指定されたフィルタリングメソッドを使用して、シーンのすべてのエンティティに対して動作します。次に、エンティティのフィルタリングされたサブセットは、宣言された2番目の&lt;a href=&quot;qml-qt3d-render-layerfilter&quot;&gt;LayerFilterに&lt;/a&gt;設定されたフィルタリングメソッドに基づいて再度フィルタリングされます。次に、ブランチのすべての&lt;a href=&quot;qml-qt3d-render-layerfilter&quot;&gt;LayerFilter&lt;/a&gt;ノードが消費されるまでこれが繰り返されます。</target>
        </trans-unit>
        <trans-unit id="6378d4ed60ae4d1598adb9c8f65226d0f664a289" translate="yes" xml:space="preserve">
          <source>Within the FrameGraph tree, multiple &lt;a href=&quot;qt3drender-qlayerfilter&quot;&gt;QLayerFilter&lt;/a&gt; nodes can be nested within a branch going from root to a leaf. In that case the filtering will first operate on all entities of the scene using the filtering method specified by the first declared &lt;a href=&quot;qt3drender-qlayerfilter&quot;&gt;QLayerFilter&lt;/a&gt;. Then the filtered subset of entities will be filtered again based on the filtering method set on the second &lt;a href=&quot;qt3drender-qlayerfilter&quot;&gt;QLayerFilter&lt;/a&gt; declared. This is then repeated until all &lt;a href=&quot;qt3drender-qlayerfilter&quot;&gt;QLayerFilter&lt;/a&gt; nodes of the branch have been consumed.</source>
          <target state="translated">FrameGraphツリー内では、ルートからリーフに向かうブランチ内に複数の&lt;a href=&quot;qt3drender-qlayerfilter&quot;&gt;QLayerFilter&lt;/a&gt;ノードをネストできます。その場合、フィルタリングは最初に、最初に宣言された&lt;a href=&quot;qt3drender-qlayerfilter&quot;&gt;QLayerFilter&lt;/a&gt;によって指定されたフィルタリングメソッドを使用して、シーンのすべてのエンティティに対して動作します。次に、エンティティのフィルタリングされたサブセットは、宣言された2番目の&lt;a href=&quot;qt3drender-qlayerfilter&quot;&gt;QLayerFilterに&lt;/a&gt;設定されたフィルタリングメソッドに基づいて再度フィルタリングされます。次に、ブランチのすべての&lt;a href=&quot;qt3drender-qlayerfilter&quot;&gt;QLayerFilter&lt;/a&gt;ノードが消費されるまでこれが繰り返されます。</target>
        </trans-unit>
        <trans-unit id="1655c0eb21a2e07ff5223d5d7a39472255fe5562" translate="yes" xml:space="preserve">
          <source>Within the implementation file the &lt;a href=&quot;qqmlndefrecord#Q_DECLARE_NDEFRECORD&quot;&gt;Q_DECLARE_NDEFRECORD&lt;/a&gt;() macro is expanded:</source>
          <target state="translated">実装ファイル内で、&lt;a href=&quot;qqmlndefrecord#Q_DECLARE_NDEFRECORD&quot;&gt;Q_DECLARE_NDEFRECORD&lt;/a&gt;（）マクロが展開されます。</target>
        </trans-unit>
        <trans-unit id="8d3f618935511b0a4e3b6291004128f0039ca294" translate="yes" xml:space="preserve">
          <source>Within the resource browser, you can open existing resource files or create new ones. Click the &lt;b&gt;Edit Resources&lt;/b&gt; button</source>
          <target state="translated">リソースブラウザ内で、既存のリソースファイルを開くか、新しいリソースファイルを作成できます。[ &lt;b&gt;リソース&lt;/b&gt;の&lt;b&gt;編集&lt;/b&gt; ]ボタンをクリックします</target>
        </trans-unit>
        <trans-unit id="7c0ff9bb6c4a4970594fa0fdf0f22196036ebd45" translate="yes" xml:space="preserve">
          <source>Without &lt;code&gt;qt.conf&lt;/code&gt;, the Qt libraries will use the hard-coded paths to look for plugins, translations, and so on. These paths may not exist on the target system, or they may not be accessible. Because of this, you may need &lt;code&gt;qt.conf&lt;/code&gt; to make the Qt libraries look elsewhere.</source>
          <target state="translated">&lt;code&gt;qt.conf&lt;/code&gt; がない場合、Qtライブラリはハードコーディングされたパスを使用してプラグインや翻訳などを探します。これらのパスはターゲットシステムに存在しないか、アクセスできない可能性があります。このため、Qtライブラリを別の場所に表示するには &lt;code&gt;qt.conf&lt;/code&gt; が必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="1ee6616a467cabc3f56d67dc3644d1c21d753d74" translate="yes" xml:space="preserve">
          <source>Without Frameworks:</source>
          <target state="translated">フレームワークなしで。</target>
        </trans-unit>
        <trans-unit id="16a9269ca9ad5aa0bde29b428a5e12b622744b92" translate="yes" xml:space="preserve">
          <source>Without Qt XML Patterns, there is no simple way to solve this kind of problem. You might do it by writing a C++ program to traverse the file system, sniff out all the XML files, and submit each one to an XML parser to test that it contains valid XML. The C++ code required to write that program will probably be more complex than the C++ code required to subclass &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;, but even if the two are comparable, your custom C++ program can be used only for that one task, while your custom XML node model can be used by any &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; that must navigate the file system.</source>
          <target state="translated">Qt XMLパターンがなければ、この種の問題を解決する簡単な方法はありません。これを行うには、C ++プログラムを作成してファイルシステムをトラバースし、すべてのXMLファイルをスニッフィングし、各ファイルをXMLパーサーに送信して、有効なXMLが含まれていることをテストします。そのプログラムを作成するために必要なC ++コードは、&lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;をサブクラス化するために必要なC ++コードよりもおそらく複雑ですが、2つが同等であっても、カスタムC ++プログラムはその1つのタスクにのみ使用できますが、カスタムXMLノードモデルはファイルシステムをナビゲートする必要のある&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;で使用されます。</target>
        </trans-unit>
        <trans-unit id="906a78d63fe98ad9fae7ceb3b7edb990374fbacd" translate="yes" xml:space="preserve">
          <source>Without Qt XML Patterns, there is no simple way to solve this kind of problem. You might do it by writing a C++ program to traverse the file system, sniff out all the XML files, and submit each one to an XML parser to test that it contains valid XML. The C++ code required to write that program will probably be more complex than the C++ code required to subclass &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;, but even if the two are comparable, your custom C++ program can be used only for that one task, while your custom XML node model can be used by any XQuery that must navigate the file system.</source>
          <target state="translated">Qt XMLパターンがなければ、この種の問題を解決する簡単な方法はありません。これを行うには、C ++プログラムを記述してファイルシステムを走査し、すべてのXMLファイルを探し出し、それぞれをXMLパーサーに送信して、有効なXMLが含まれていることをテストします。そのプログラムを記述するために必要なC ++コードは、&lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt;をサブクラス化するために必要なC ++コードよりも複雑になる可能性がありますが、2つが同等である場合でも、カスタムC ++プログラムはその1つのタスクに対してのみ使用でき、カスタムXMLノードモデルは使用できます。ファイルシステムをナビゲートする必要があるすべてのXQueryによって使用されます。</target>
        </trans-unit>
        <trans-unit id="fe06ce141a1168cf6c190a0812c8b6234dbf41b7" translate="yes" xml:space="preserve">
          <source>Without a</source>
          <target state="translated">がなければ</target>
        </trans-unit>
        <trans-unit id="e5fdab5262fd255a415115b28b6a0fa6a113884d" translate="yes" xml:space="preserve">
          <source>Without a suffix, Android 5 (API 21) will load the system libraries</source>
          <target state="translated">サフィックスを付けないと、Android 5 (API 21)はシステムライブラリ</target>
        </trans-unit>
        <trans-unit id="93ba514d88ce37a6cb5e299bbd770c963f3f1977" translate="yes" xml:space="preserve">
          <source>Without any caching, performance may drop significantly.</source>
          <target state="translated">キャッシングをしないと、パフォーマンスが大幅に低下する可能性があります。</target>
        </trans-unit>
        <trans-unit id="43f455544383fd6a5e1f4485e57cf34557ce7ae9" translate="yes" xml:space="preserve">
          <source>Without further delay, we present the widget walkthrough; each widget has its own sub-section.</source>
          <target state="translated">遅ればせながら、各ウィジェットにはそれぞれのサブセクションがあります。</target>
        </trans-unit>
        <trans-unit id="50655f37469a7bfe19c443ecfe5a49e929d9b820" translate="yes" xml:space="preserve">
          <source>Without the call to &lt;code&gt;isPolishScheduled()&lt;/code&gt; above, the call to &lt;code&gt;waitForItemPolished()&lt;/code&gt; might see that no polish was scheduled and therefore pass instantly, assuming that the item had already been polished. This function makes it obvious why an item wasn't polished and allows tests to fail early under such circumstances.</source>
          <target state="translated">呼び出しがなければ &lt;code&gt;isPolishScheduled()&lt;/code&gt; 上記の呼び出し &lt;code&gt;waitForItemPolished()&lt;/code&gt; 何も磨きが予定さないため、項目がすでに研磨されていたと仮定して、瞬時に渡したことが表示される場合があります。この関数は、アイテムが洗練されなかった理由を明らかにし、そのような状況下でテストを早期に失敗させることができます。</target>
        </trans-unit>
        <trans-unit id="f06ecaacf74a50b9553cf59bf5d4e2830ceb1666" translate="yes" xml:space="preserve">
          <source>Without the call to &lt;code&gt;qIsPolishScheduled()&lt;/code&gt; above, the call to &lt;code&gt;qWaitForItemPolished()&lt;/code&gt; might see that no polish was scheduled and therefore pass instantly, assuming that the item had already been polished. This function makes it obvious why an item wasn't polished and allows tests to fail early under such circumstances.</source>
          <target state="translated">呼び出しがなければ &lt;code&gt;qIsPolishScheduled()&lt;/code&gt; 上記の呼び出し &lt;code&gt;qWaitForItemPolished()&lt;/code&gt; 何も磨きが予定さないため、項目がすでに研磨されていたと仮定して、瞬時に渡したことが表示される場合があります。この関数は、アイテムが洗練されなかった理由を明らかにし、そのような状況下でテストを早期に失敗させることができます。</target>
        </trans-unit>
        <trans-unit id="0824512bccf109ba84fe616af5c0dcdf35ac9ca8" translate="yes" xml:space="preserve">
          <source>Without the guidance in the</source>
          <target state="translated">での案内がなければ</target>
        </trans-unit>
        <trans-unit id="4c0a02a4fd557e1f5547ba09fc6d37a119fe72d1" translate="yes" xml:space="preserve">
          <source>Without this, a generic &quot;Game is not a type&quot; message would be given.</source>
          <target state="translated">これがないと、一般的な「ゲームはタイプではありません」というメッセージが出てしまいます。</target>
        </trans-unit>
        <trans-unit id="3193c510cba9467bc667c00acf704c64431c62ee" translate="yes" xml:space="preserve">
          <source>Wizard Look and Feel</source>
          <target state="translated">ウィザードのルック&amp;フィール</target>
        </trans-unit>
        <trans-unit id="5dcef5ebea03ffa0dd22c9949dde2011e5628e41" translate="yes" xml:space="preserve">
          <source>Wizards consist of a sequence of &lt;a href=&quot;qwizardpage&quot;&gt;QWizardPage&lt;/a&gt;s. At any time, only one page is shown. A page has the following attributes:</source>
          <target state="translated">ウィザードは、一連の&lt;a href=&quot;qwizardpage&quot;&gt;QWizardPageで&lt;/a&gt;構成されています。常に1つのページのみが表示されます。ページには次の属性があります。</target>
        </trans-unit>
        <trans-unit id="b6261b0f092158c08397020cfc1dbbc29f7e922b" translate="yes" xml:space="preserve">
          <source>WlScaler (QML type)</source>
          <target state="translated">WlScaler(QML型</target>
        </trans-unit>
        <trans-unit id="b57bdbc1f007e6605e0c904fc272441772cf025c" translate="yes" xml:space="preserve">
          <source>WlScaler QML Type</source>
          <target state="translated">WlScaler QML型</target>
        </trans-unit>
        <trans-unit id="4ade3073a2b210ce8e9ac7f018f59f6299ff87f5" translate="yes" xml:space="preserve">
          <source>WlScaler corresponds to the Wayland interface, &lt;code&gt;wl_scaler&lt;/code&gt;.</source>
          <target state="translated">ウェイランド・インターフェースに相当WlScaler、 &lt;code&gt;wl_scaler&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="07b36481f2d528b274ee4ef8ded9960891eb760e" translate="yes" xml:space="preserve">
          <source>WlShell (QML type)</source>
          <target state="translated">WlShell(QML型</target>
        </trans-unit>
        <trans-unit id="b6668b0bfe96f711b449cdfda3749bc2ecf51c24" translate="yes" xml:space="preserve">
          <source>WlShell QML Type</source>
          <target state="translated">WlShell QML型</target>
        </trans-unit>
        <trans-unit id="5caabff4047fc9e0ec581112e9d4a83acffca4f9" translate="yes" xml:space="preserve">
          <source>WlShell corresponds to the Wayland interface &lt;code&gt;wl_shell&lt;/code&gt;.</source>
          <target state="translated">WlShellはウェイランドインタフェースに対応 &lt;code&gt;wl_shell&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42fc3ffb9c689fcc91fe318023d6cbe1e725cf51" translate="yes" xml:space="preserve">
          <source>WlShell.wlShellSurfaceCreated()</source>
          <target state="translated">WlShell.wlShellSurfaceCreated()</target>
        </trans-unit>
        <trans-unit id="ef822dc8547db076895749545273aa5a0d42d135" translate="yes" xml:space="preserve">
          <source>WlShell.wlShellSurfaceRequested()</source>
          <target state="translated">WlShell.wlShellSurfaceRequested()</target>
        </trans-unit>
        <trans-unit id="d2bfbfbbad3de59d0a961294644a89b410ef6d5a" translate="yes" xml:space="preserve">
          <source>WlShellSurface (QML type)</source>
          <target state="translated">WlShellSurface(QML型</target>
        </trans-unit>
        <trans-unit id="e110dc4896fac279d93e7506893b457acc985adf" translate="yes" xml:space="preserve">
          <source>WlShellSurface QML Type</source>
          <target state="translated">WlShellSurface QML 型</target>
        </trans-unit>
        <trans-unit id="48fcc081e064624479ecf0c1711d6fc48798ea77" translate="yes" xml:space="preserve">
          <source>WlShellSurface.className</source>
          <target state="translated">WlShellSurface.className</target>
        </trans-unit>
        <trans-unit id="2cef914ef3792ac59c00673fa463e6e279d0e5b1" translate="yes" xml:space="preserve">
          <source>WlShellSurface.initialize()</source>
          <target state="translated">WlShellSurface.initialize()</target>
        </trans-unit>
        <trans-unit id="1b6436e9c64dc8f3894eab1f20a93739c4e013c3" translate="yes" xml:space="preserve">
          <source>WlShellSurface.ping()</source>
          <target state="translated">WlShellSurface.ping()</target>
        </trans-unit>
        <trans-unit id="c1709f39c1328b38a0fd7548d86419ecc18e9844" translate="yes" xml:space="preserve">
          <source>WlShellSurface.sendConfigure()</source>
          <target state="translated">WlShellSurface.sendConfigure()</target>
        </trans-unit>
        <trans-unit id="ab0fe1c58fc6f74a085ce2f12576d1f032c82596" translate="yes" xml:space="preserve">
          <source>WlShellSurface.sendPopupDone()</source>
          <target state="translated">WlShellSurface.sendPopupDone()</target>
        </trans-unit>
        <trans-unit id="b7bf42c1307ac8700aebf1d11228f62d6a8f17fa" translate="yes" xml:space="preserve">
          <source>WlShellSurface.shell</source>
          <target state="translated">WlShellSurface.shell</target>
        </trans-unit>
        <trans-unit id="34313321892b7c04f1ccc13b6583e7b5f23187d5" translate="yes" xml:space="preserve">
          <source>WlShellSurface.surface</source>
          <target state="translated">WlShellSurface.surface</target>
        </trans-unit>
        <trans-unit id="d03be9356817ff47117f41e9d0285382e1f5fc71" translate="yes" xml:space="preserve">
          <source>WlShellSurface.title</source>
          <target state="translated">WlShellSurface.title</target>
        </trans-unit>
        <trans-unit id="bb56f0ba00293a640d27fdf80aaa35bf820d35f8" translate="yes" xml:space="preserve">
          <source>WlShellSurface.windowType</source>
          <target state="translated">WlShellSurface.windowType</target>
        </trans-unit>
        <trans-unit id="8ed9a26e1e0bd86a5734f7dbf8a8b38ec310f539" translate="yes" xml:space="preserve">
          <source>Word boundaries are there to locate the start and end of what a language considers to be a word (see &lt;a href=&quot;http://www.unicode.org/reports/tr29/#Word_Boundaries&quot;&gt;http://www.unicode.org/reports/tr29/#Word_Boundaries&lt;/a&gt;).</source>
          <target state="translated">単語境界は、言語が単語と見なすものの開始と終了を見つけるためにあります（&lt;a href=&quot;http://www.unicode.org/reports/tr29/#Word_Boundaries&quot;&gt;http://www.unicode.org/reports/tr29/#Word_Boundariesを参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="bb253144836dfa990bb98ead2d4aef93472eac9f" translate="yes" xml:space="preserve">
          <source>Word by word. &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; supports streaming into &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;s, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;s and char* buffers. Words are delimited by space, and leading white space is automatically skipped.</source>
          <target state="translated">一語一語。&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;は&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;、&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;、およびchar *バッファーへのストリーミングをサポートします。単語はスペースで区切られ、先頭の空白は自動的にスキップされます。</target>
        </trans-unit>
        <trans-unit id="108a2f7ed609797b46cbd1ba460aa2c7ecb91509" translate="yes" xml:space="preserve">
          <source>Word by word. QTextStream supports streaming into &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;s, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;s and char* buffers. Words are delimited by space, and leading white space is automatically skipped.</source>
          <target state="translated">一語一語。QTextStreamは、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;、&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;、およびchar *バッファーへのストリーミングをサポートします。単語はスペースで区切られ、先頭の空白は自動的にスキップされます。</target>
        </trans-unit>
        <trans-unit id="b40db3a882cfd89240242a70c035356550f54ada" translate="yes" xml:space="preserve">
          <source>Word size</source>
          <target state="translated">ワードサイズ</target>
        </trans-unit>
        <trans-unit id="536af22c45db1729570f13631c85a76152e074f4" translate="yes" xml:space="preserve">
          <source>Word spacing changes the default spacing between individual words. A positive value increases the word spacing by a corresponding amount of pixels, while a negative value decreases the inter-word spacing accordingly.</source>
          <target state="translated">単語間隔は、個々の単語間のデフォルトの間隔を変更します。正の値を指定すると、単語間の間隔がピクセル数分大きくなり、負の値を指定するとそれに応じて単語間の間隔が小さくなります。</target>
        </trans-unit>
        <trans-unit id="0069fab6f922d3e5cfb6199f7e1104d8cce60a16" translate="yes" xml:space="preserve">
          <source>Word spacing will not apply to writing systems, where indiviaul words are not separated by white space.</source>
          <target state="translated">単語の間隔は、indiviaulの単語が空白で区切られていないライティングシステムには適用されません。</target>
        </trans-unit>
        <trans-unit id="9b187a2614280ba9450d25073626d8391af19bcc" translate="yes" xml:space="preserve">
          <source>Worked Example</source>
          <target state="translated">加工例</target>
        </trans-unit>
        <trans-unit id="ca1e06ded6779c45d8ce0e1785ae4b86657174de" translate="yes" xml:space="preserve">
          <source>Worker scripts that are plain JavaScript sources can not use &lt;a href=&quot;qtqml-javascript-imports&quot;&gt;.import&lt;/a&gt; syntax. Scripts that are ECMAScript modules can freely use import and export statements.</source>
          <target state="translated">プレーンなJavaScriptソースであるワーカースクリプトは、&lt;a href=&quot;qtqml-javascript-imports&quot;&gt;.import&lt;/a&gt;構文を使用できません。ECMAScriptモジュールであるスクリプトは、インポートおよびエクスポートステートメントを自由に使用できます。</target>
        </trans-unit>
        <trans-unit id="2e0eaa4ff41e676dd00c44372e1378b130957c0e" translate="yes" xml:space="preserve">
          <source>Worker scripts that are plain JavaScript sources can not use &lt;a href=&quot;qtqml-javascript-imports#&quot;&gt;.import&lt;/a&gt; syntax. Scripts that are ECMAScript modules can freely use import and export statements.</source>
          <target state="translated">プレーンJavaScriptソースであるワーカースクリプトは、&lt;a href=&quot;qtqml-javascript-imports#&quot;&gt;.import&lt;/a&gt;構文を使用できません。ECMAScriptモジュールであるスクリプトは、インポートおよびエクスポートステートメントを自由に使用できます。</target>
        </trans-unit>
        <trans-unit id="9a530934fe64bcc0a2fbc6b2eb19c8eee6434afd" translate="yes" xml:space="preserve">
          <source>WorkerScript</source>
          <target state="translated">WorkerScript</target>
        </trans-unit>
        <trans-unit id="fd088565fbfdd1fad6509f6f419e889c510a50a2" translate="yes" xml:space="preserve">
          <source>WorkerScript (QML type)</source>
          <target state="translated">WorkerScript(QML型</target>
        </trans-unit>
        <trans-unit id="60aef30910707ab83bafa6a514cd2497880e4524" translate="yes" xml:space="preserve">
          <source>WorkerScript QML Type</source>
          <target state="translated">WorkerScript QML型</target>
        </trans-unit>
        <trans-unit id="abeebdfcd68a08212df1b2cd21546924ca0c33b3" translate="yes" xml:space="preserve">
          <source>WorkerScript.message()</source>
          <target state="translated">WorkerScript.message()</target>
        </trans-unit>
        <trans-unit id="d834c787e237a5d767a1e6e24914292b2c010582" translate="yes" xml:space="preserve">
          <source>WorkerScript.ready</source>
          <target state="translated">WorkerScript.ready</target>
        </trans-unit>
        <trans-unit id="ee6d6c2a7ca12046ee14ce7daff0c490de29eaa7" translate="yes" xml:space="preserve">
          <source>WorkerScript.sendMessage()</source>
          <target state="translated">WorkerScript.sendMessage()</target>
        </trans-unit>
        <trans-unit id="8ae9f004765542d8e99218e39c3301c815ffc5c5" translate="yes" xml:space="preserve">
          <source>WorkerScript.source</source>
          <target state="translated">WorkerScript.source</target>
        </trans-unit>
        <trans-unit id="742a795cfcef09d5fca0078214b531040466c57e" translate="yes" xml:space="preserve">
          <source>WorkerScript: Threading in QML</source>
          <target state="translated">WorkerScript。QML でのスレッド</target>
        </trans-unit>
        <trans-unit id="c016b2ba62db10eb134f62dc27e219f5ec415800" translate="yes" xml:space="preserve">
          <source>Working With Arrays</source>
          <target state="translated">配列を使った作業</target>
        </trans-unit>
        <trans-unit id="3e0156058f2d58d9828ee6710bcfff111dd0fae5" translate="yes" xml:space="preserve">
          <source>Working with existing Metal devices</source>
          <target state="translated">既存のメタルデバイスとの連携</target>
        </trans-unit>
        <trans-unit id="e3179360576d4f619d5134d86c6b5cd815bbfd34" translate="yes" xml:space="preserve">
          <source>Working with the DOM Tree</source>
          <target state="translated">DOM ツリーでの作業</target>
        </trans-unit>
        <trans-unit id="621c48ea175f57750086ad2674043c3857f9d3bf" translate="yes" xml:space="preserve">
          <source>Works on the given</source>
          <target state="translated">与えられたもので動作します。</target>
        </trans-unit>
        <trans-unit id="43a2a212ef9e306f1227d6c262fe7cb1e66e61fc" translate="yes" xml:space="preserve">
          <source>Works with moving images.</source>
          <target state="translated">動画を使った作業。</target>
        </trans-unit>
        <trans-unit id="9aac26a929704d6521e46edde532ac2f089520c5" translate="yes" xml:space="preserve">
          <source>World normal vector</source>
          <target state="translated">世界の法線ベクトル</target>
        </trans-unit>
        <trans-unit id="39283cfe47115a1783c04e50be8df740ad417973" translate="yes" xml:space="preserve">
          <source>World position vector</source>
          <target state="translated">世界位置ベクトル</target>
        </trans-unit>
        <trans-unit id="30292f5fea8a2145e412ec1542b2e1882d60b1db" translate="yes" xml:space="preserve">
          <source>Worst case</source>
          <target state="translated">最悪の場合</target>
        </trans-unit>
        <trans-unit id="4dd381ce6f1f7eec38158291208afc54d5c3e2c9" translate="yes" xml:space="preserve">
          <source>WrappedEvent Class</source>
          <target state="translated">WrappedEventクラス</target>
        </trans-unit>
        <trans-unit id="f7eaaeed34595d2de20d364a6b354ea80424d306" translate="yes" xml:space="preserve">
          <source>Wrapper Example (ActiveQt)</source>
          <target state="translated">Wrapperの例 (ActiveQt)</target>
        </trans-unit>
        <trans-unit id="6fe8f9d6986840fa95d881f4a793e9f8f307cbce" translate="yes" xml:space="preserve">
          <source>Wrapping Functions that Take Multiple Arguments</source>
          <target state="translated">複数の引数を取る関数のラッピング</target>
        </trans-unit>
        <trans-unit id="f660e7dcc715c259e3109185ed53b33ce2986532" translate="yes" xml:space="preserve">
          <source>Wraps Android positioning subsystem. Available only on Android.</source>
          <target state="translated">Androidの測位サブシステムをラップします。Androidでのみ利用可能。</target>
        </trans-unit>
        <trans-unit id="18e1f8eef927d790db4197d551e90201eebb292f" translate="yes" xml:space="preserve">
          <source>Wraps WinRT positioning subsystem. Available only on WinRT and Windows10.</source>
          <target state="translated">WinRT位置決めサブシステムをラップします。WinRTとWindows10でのみ利用可能。</target>
        </trans-unit>
        <trans-unit id="38931fb06cd5db1a403cd002c454f6ea82391f8f" translate="yes" xml:space="preserve">
          <source>Wraps a sequence of OpenGL timer query objects</source>
          <target state="translated">OpenGLタイマークエリオブジェクトのシーケンスをラップします。</target>
        </trans-unit>
        <trans-unit id="18c2cbec6a0515b86f70bcf27bf4340409ef4863" translate="yes" xml:space="preserve">
          <source>Wraps an OpenGL Vertex Array Object</source>
          <target state="translated">OpenGL頂点配列オブジェクトのラップ</target>
        </trans-unit>
        <trans-unit id="15a4a67a605d671d3c9e35eeee30225ef4cb4999" translate="yes" xml:space="preserve">
          <source>Wraps an OpenGL debug message</source>
          <target state="translated">OpenGLデバッグメッセージをラップします。</target>
        </trans-unit>
        <trans-unit id="1a08856ef68ab0ac7fc717cf91ad30fbae25ec50" translate="yes" xml:space="preserve">
          <source>Wraps an OpenGL timer query object</source>
          <target state="translated">OpenGLタイマークエリオブジェクトをラップします。</target>
        </trans-unit>
        <trans-unit id="c3fa0a57fa01c69420d61446a0eae2bbe84b4823" translate="yes" xml:space="preserve">
          <source>Wraps iOS and macOS positioning subsystems. Available only on Apple platforms supporting corelocation.</source>
          <target state="translated">iOSとmacOSの測位サブシステムをラップします。corelocationをサポートするAppleプラットフォームでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="b20d8fb713c2bebd0f6fd23a09cb0ecf5e285d04" translate="yes" xml:space="preserve">
          <source>Wraps the</source>
          <target state="translated">をラップします。</target>
        </trans-unit>
        <trans-unit id="316c0260a54a729b9a181fe2930ff1cbbd23aa03" translate="yes" xml:space="preserve">
          <source>Wraps the most important methods of Android Binder class. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">AndroidBinderクラスの最も重要なメソッドをラップします。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0f133d61508d26cd1934d08b12ed271c2b34f0c4" translate="yes" xml:space="preserve">
          <source>Wraps the most important methods of Android Intent class. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">AndroidIntentクラスの最も重要なメソッドをラップします。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ef7db36344598f7fcfcaf4fcd608818bf78f774c" translate="yes" xml:space="preserve">
          <source>Wraps the most important methods of Android Parcel class. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">AndroidParcelクラスの最も重要なメソッドをラップします。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c608727db8e0e2802553a6ae57ea9fbb5560b6f8" translate="yes" xml:space="preserve">
          <source>Wraps the most important methods of Android Service class. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">Androidサービスクラスの最も重要なメソッドをラップします。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="45853dd0221668b8d47fd021076903fefc7f1019" translate="yes" xml:space="preserve">
          <source>Wraps the most important methods of Android ServiceConnection class. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">AndroidServiceConnectionクラスの最も重要なメソッドをラップします。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cacfd6c2f56b1eb4a8993bf9bd456057d52e65f" translate="yes" xml:space="preserve">
          <source>Wraps the provided</source>
          <target state="translated">提供されたラップ</target>
        </trans-unit>
        <trans-unit id="794b3c2fc0395934b72694e2ebb596cae40240be" translate="yes" xml:space="preserve">
          <source>Wraps the signed 64-bit integer</source>
          <target state="translated">符号付き64ビット整数をラップします。</target>
        </trans-unit>
        <trans-unit id="72b7b9a4d5c7c2785fa3b6a073dee1962e436c2c" translate="yes" xml:space="preserve">
          <source>Wraps the unsigned 64-bit integer</source>
          <target state="translated">符号なし64ビット整数をラップします。</target>
        </trans-unit>
        <trans-unit id="27fd4473f892a9f8d28e8b368d4e7e3d38f05604" translate="yes" xml:space="preserve">
          <source>Write Self-contained Test Functions</source>
          <target state="translated">自己完結型のテスト関数を書く</target>
        </trans-unit>
        <trans-unit id="b770bb53de054c2fe2b31d8da9f2a75e4f0159e4" translate="yes" xml:space="preserve">
          <source>Write Well-structured Diagnostic Code</source>
          <target state="translated">構造化された診断コードを書く</target>
        </trans-unit>
        <trans-unit id="b5f7b07f82467c99774abc79b879a0c8fe819e1e" translate="yes" xml:space="preserve">
          <source>Write a depfile with the .qrc dependencies to &amp;lt;file&amp;gt;.</source>
          <target state="translated">.qrc依存関係を持つdepfileを&amp;lt;file&amp;gt;に書き込みます。</target>
        </trans-unit>
        <trans-unit id="ab2726a3cc1f75c60b0eea1512f91412b9226ed7" translate="yes" xml:space="preserve">
          <source>Write a project file for the plugin</source>
          <target state="translated">プラグイン用のプロジェクトファイルを書く</target>
        </trans-unit>
        <trans-unit id="11b5efa2d5a13568411e209f84157514c044e66b" translate="yes" xml:space="preserve">
          <source>Write a project file for the plugin. Add:</source>
          <target state="translated">プラグイン用のプロジェクトファイルを書きます。追加します。</target>
        </trans-unit>
        <trans-unit id="a881b178da5b074e2d889eab1b001d181e29fbda" translate="yes" xml:space="preserve">
          <source>Write a test and fix the bug.</source>
          <target state="translated">テストを書いて、バグを修正します。</target>
        </trans-unit>
        <trans-unit id="94435f8e44b2a5ffbbe9a1a051a7fa8d40a1b104" translate="yes" xml:space="preserve">
          <source>Write access</source>
          <target state="translated">書き込みアクセス</target>
        </trans-unit>
        <trans-unit id="f1bb131eaccae0c046736420225d1656db426322" translate="yes" xml:space="preserve">
          <source>Write and commit your tests along with your fix or new feature on a new branch. Once you're done, you can check out the branch on which your work is based, and then check out into this branch the test-files for your new tests. This enables you to verify that the tests do fail on the prior branch, and therefore actually do catch a bug or test a new feature.</source>
          <target state="translated">新しいブランチに修正や新機能のテストを書いてコミットしてください。完了したら、あなたの作業のベースとなっているブランチをチェックアウトし、 新しいテストのためのテストファイルをこのブランチにチェックアウトしてください。これにより、前のブランチでテストが失敗したことを確認し、実際にバグを捕まえたり新機能をテストしたりすることができるようになります。</target>
        </trans-unit>
        <trans-unit id="47bea6187853239b43a7df6e6565f510705cc425" translate="yes" xml:space="preserve">
          <source>Write notifiers should normally be disabled immediately after the &lt;a href=&quot;qsocketnotifier#activated&quot;&gt;activated&lt;/a&gt;() signal has been emitted</source>
          <target state="translated">書き込み通知機能は、通常、&lt;a href=&quot;qsocketnotifier#activated&quot;&gt;アクティブ化された&lt;/a&gt;（）シグナルが発行された直後に無効にする必要があります</target>
        </trans-unit>
        <trans-unit id="196da289028b4498c4230c282ac726baee2c7c18" translate="yes" xml:space="preserve">
          <source>Write output to &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; instead of to standard output.</source>
          <target state="translated">標準出力ではなく、 &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; に出力を書き込みます。</target>
        </trans-unit>
        <trans-unit id="1677c9974625fb733a6e7d18d261c338123d2eb9" translate="yes" xml:space="preserve">
          <source>Write output to &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; rather than to standard output.</source>
          <target state="translated">出力を標準出力ではなく &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; に書き込みます。</target>
        </trans-unit>
        <trans-unit id="4380a30052d4a8f446c61d3532f27cb3d17c499a" translate="yes" xml:space="preserve">
          <source>Write output to &lt;code&gt;file&lt;/code&gt; rather than to stdout.</source>
          <target state="translated">出力を標準出力ではなく &lt;code&gt;file&lt;/code&gt; 書き込みます。</target>
        </trans-unit>
        <trans-unit id="a0516381df102bdc8fd4d44567b9570494009851" translate="yes" xml:space="preserve">
          <source>Write the infinite loop directly within a reimplementation of &lt;a href=&quot;qthread#run&quot;&gt;QThread::run&lt;/a&gt;(). Start the thread without an event loop. Let the thread emit signals to send data back to the GUI thread.</source>
          <target state="translated">&lt;a href=&quot;qthread#run&quot;&gt;QThread :: run&lt;/a&gt;（）の再実装内で直接無限ループを記述します。イベントループなしでスレッドを開始します。スレッドにシグナルを送信させて、データをGUIスレッドに送り返します。</target>
        </trans-unit>
        <trans-unit id="ef2fd1bfd74950a812a75e4a180064e84381952f" translate="yes" xml:space="preserve">
          <source>Write-functions for properties and other methods exposed by the object's IDispatch implementation can be called directly using &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;dynamicCall&lt;/a&gt;(), or indirectly as slots connected to a signal.</source>
          <target state="translated">オブジェクトのIDispatch実装によって公開されるプロパティおよびその他のメソッドの書き込み関数は、&lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;dynamicCall&lt;/a&gt;（）を使用して直接呼び出すか、信号に接続されたスロットとして間接的に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="d35b6b65f165e1877f26c4e06cd3a5c64880f4a5" translate="yes" xml:space="preserve">
          <source>Write-only access.</source>
          <target state="translated">書き込み専用アクセス。</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="9b1ff2c96b99a1589923943cfd2a6cdcf1069090" translate="yes" xml:space="preserve">
          <source>Writes</source>
          <target state="translated">Writes</target>
        </trans-unit>
        <trans-unit id="b4a786c4f503771378428ac21d1d348d83bb86f1" translate="yes" xml:space="preserve">
          <source>Writes '\n' to the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9d6bb1dff6b3764973ce7e888aff8e19afc028" translate="yes" xml:space="preserve">
          <source>Writes a</source>
          <target state="translated">を書き込みます。</target>
        </trans-unit>
        <trans-unit id="f7f6276a9a8fd05d95d9c29a38c113d4a5a40008" translate="yes" xml:space="preserve">
          <source>Writes a DTD section. The</source>
          <target state="translated">DTDセクションを書き込みます。このセクションの</target>
        </trans-unit>
        <trans-unit id="59b00d045983c21e0a0a40e9b6adf849d539ae71" translate="yes" xml:space="preserve">
          <source>Writes a boolean value,</source>
          <target state="translated">ブール値を書き込みます。</target>
        </trans-unit>
        <trans-unit id="83bc5d991bad2a7cac10d8e660eb6f3a840c80e8" translate="yes" xml:space="preserve">
          <source>Writes a character</source>
          <target state="translated">文字を書く</target>
        </trans-unit>
        <trans-unit id="c9a5b980180de0679b78f6ef236213db1c71d0fd" translate="yes" xml:space="preserve">
          <source>Writes a default namespace declaration for</source>
          <target state="translated">のデフォルトの名前空間宣言を書き込みます。</target>
        </trans-unit>
        <trans-unit id="e73198573b4090514b896debe977652abb8445db" translate="yes" xml:space="preserve">
          <source>Writes a document start with XML version number &quot;1.0&quot;. This also writes the encoding information.</source>
          <target state="translated">XMLのバージョン番号 &quot;1.0 &quot;から始まる文書を書き込みます。エンコーディング情報も書き込みます。</target>
        </trans-unit>
        <trans-unit id="773ef9d025ac8769b1894de2a4cef0333b9be400" translate="yes" xml:space="preserve">
          <source>Writes a document start with the XML version number</source>
          <target state="translated">XMLのバージョン番号から始まる文書を書き込みます。</target>
        </trans-unit>
        <trans-unit id="45852bea0a29912e77ce6e5a46d87f40bb140f46" translate="yes" xml:space="preserve">
          <source>Writes a floating point number,</source>
          <target state="translated">浮動小数点数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="d2354ea0a821dbe565013bdc6bb0ce0a41b1e8f6" translate="yes" xml:space="preserve">
          <source>Writes a namespace declaration for</source>
          <target state="translated">の名前空間宣言を書き込みます。</target>
        </trans-unit>
        <trans-unit id="152024cfbf53d328526c2e972003878921be4566" translate="yes" xml:space="preserve">
          <source>Writes a pointer,</source>
          <target state="translated">ポインタを書き込みます。</target>
        </trans-unit>
        <trans-unit id="4162505effa940040087d70422544a8376612bc6" translate="yes" xml:space="preserve">
          <source>Writes a signed 16-bit integer,</source>
          <target state="translated">符号付き16ビット整数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="508d87035ba2a3ef7487d36f2dd10c2f87d1a1b4" translate="yes" xml:space="preserve">
          <source>Writes a signed 32-bit integer,</source>
          <target state="translated">符号付き32ビット整数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="8bce505ab35ce7fcccbe431f7d8d57ea5b3ab526" translate="yes" xml:space="preserve">
          <source>Writes a signed 64-bit integer,</source>
          <target state="translated">符号付き64ビット整数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="a5040197ec3845b4c48ec78a4a5048d60fdd5830" translate="yes" xml:space="preserve">
          <source>Writes a signed byte,</source>
          <target state="translated">符号付きバイトを書き込みます。</target>
        </trans-unit>
        <trans-unit id="540a671861c4f11d57542891dfd13a13299eec15" translate="yes" xml:space="preserve">
          <source>Writes a space character to the debug stream and returns a reference to the stream.</source>
          <target state="translated">デバッグ・ストリームにスペース文字を書き込み、ストリームへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="24e5afec4114370f38c765bdfaa32e56241dc335" translate="yes" xml:space="preserve">
          <source>Writes a space character to the debug stream, depending on the current setting for automatic insertion of spaces, and returns a reference to the stream.</source>
          <target state="translated">スペースの自動挿入の現在の設定に応じて、スペース文字をデバッグ・ストリームに書き込み、ストリームへの参照を返します。</target>
        </trans-unit>
        <trans-unit id="b771e2a6de0a7b6f18ba395aa32888371ffa6f53" translate="yes" xml:space="preserve">
          <source>Writes a start element with</source>
          <target state="translated">で開始要素を書き込みます。</target>
        </trans-unit>
        <trans-unit id="f613343e23a1720f7274d518ed4d10dec77ea3fb" translate="yes" xml:space="preserve">
          <source>Writes a text element with</source>
          <target state="translated">テキスト要素を</target>
        </trans-unit>
        <trans-unit id="ae99a4d81a3df6807235ed0cf880561ad79c7f02" translate="yes" xml:space="preserve">
          <source>Writes an XML processing instruction with</source>
          <target state="translated">XML処理命令を</target>
        </trans-unit>
        <trans-unit id="668b21ea217e458f679fe4225b47d73d5b0d9e96" translate="yes" xml:space="preserve">
          <source>Writes an attribute with</source>
          <target state="translated">で属性を書き込みます。</target>
        </trans-unit>
        <trans-unit id="a876f72f78fef82db4fb2a67dd39dc229fdc7836" translate="yes" xml:space="preserve">
          <source>Writes an empty element with</source>
          <target state="translated">空の要素を</target>
        </trans-unit>
        <trans-unit id="76c960a2a3fe7c550d09abb3429b7db88cd6712d" translate="yes" xml:space="preserve">
          <source>Writes an empty element with qualified name</source>
          <target state="translated">空の要素に修飾名を付けて書き込みます。</target>
        </trans-unit>
        <trans-unit id="fc51c29ab2fec69d1f4e98685528b253eb49681e" translate="yes" xml:space="preserve">
          <source>Writes an picture to an IO device and returns &lt;code&gt;true&lt;/code&gt; if the picture was successfully written; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">画像をIOデバイスに書き込み、画像が正常に書き込まれた場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6a7248073d948f111e2b9f094c4f1e78903b6fd8" translate="yes" xml:space="preserve">
          <source>Writes an unsigned 16-bit integer,</source>
          <target state="translated">符号なし16ビット整数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="a1fdbd3718dadf4e3da8b0eacc4c5ac15013057c" translate="yes" xml:space="preserve">
          <source>Writes an unsigned 64-bit integer,</source>
          <target state="translated">符号なし64ビット整数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="6bc2728d94227ebe5104c6973a020e610e8510e3" translate="yes" xml:space="preserve">
          <source>Writes an unsigned byte,</source>
          <target state="translated">符号なしバイトを書き込みます。</target>
        </trans-unit>
        <trans-unit id="1f93bfcb2ba8deb677e9b7923c56809714b15c1b" translate="yes" xml:space="preserve">
          <source>Writes an unsigned integer,</source>
          <target state="translated">符号なし整数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="46803c135d0161bd80c1a44d40fea224a23f27dd" translate="yes" xml:space="preserve">
          <source>Writes any unsaved changes to permanent storage, and reloads any settings that have been changed in the meantime by another application.</source>
          <target state="translated">保存されていない変更を永久記憶装置に書き込み、その間に他のアプリケーションで変更された設定をリロードします。</target>
        </trans-unit>
        <trans-unit id="261e06b81f447d43362f247a2f46e5489ffe1599" translate="yes" xml:space="preserve">
          <source>Writes any unsaved changes to the list model after it has been modified from a worker script.</source>
          <target state="translated">ワーカースクリプトから変更された後、保存されていない変更をリストモデルに書き込みます。</target>
        </trans-unit>
        <trans-unit id="06d04df05fafbcb24f160fe8505cc6f83111699d" translate="yes" xml:space="preserve">
          <source>Writes at most</source>
          <target state="translated">せいぜい書き込み</target>
        </trans-unit>
        <trans-unit id="cccbf23cef6f041d8d50ea6bc908a479736c7208" translate="yes" xml:space="preserve">
          <source>Writes bit array</source>
          <target state="translated">ビット配列の書き込み</target>
        </trans-unit>
        <trans-unit id="acdafa57f52718e28bf0395ba382200abb51e6f0" translate="yes" xml:space="preserve">
          <source>Writes byte array</source>
          <target state="translated">バイト配列の書き込み</target>
        </trans-unit>
        <trans-unit id="b513ccbafa855d3e8e9e01ae0e1f2a0c42d0d6c2" translate="yes" xml:space="preserve">
          <source>Writes data from a zero-terminated string of 8-bit characters to the device. Returns the number of bytes that were actually written, or -1 if an error occurred. This is equivalent to</source>
          <target state="translated">ゼロ終端の 8 ビット文字列のデータをデバイスに書き込みます。実際に書き込まれたバイト数を返し、エラーが発生した場合は -1 を返します。これは</target>
        </trans-unit>
        <trans-unit id="002532affcf786aa7846706a5c59a908d042efc7" translate="yes" xml:space="preserve">
          <source>Writes data to the Modbus server. A Modbus server has four tables (</source>
          <target state="translated">Modbus サーバにデータを書き込みます。Modbusサーバは4つのテーブルを持っています(</target>
        </trans-unit>
        <trans-unit id="4f289689677bc02356445e2e37df23900682b50b" translate="yes" xml:space="preserve">
          <source>Writes host address</source>
          <target state="translated">ホストアドレスの書き込み</target>
        </trans-unit>
        <trans-unit id="0f78bde746999e31fbd7879ace8159887c41d296" translate="yes" xml:space="preserve">
          <source>Writes margin</source>
          <target state="translated">余白の書き込み</target>
        </trans-unit>
        <trans-unit id="b698df4241e85beac23e7602d7a2b8437b9ee499" translate="yes" xml:space="preserve">
          <source>Writes output to</source>
          <target state="translated">に出力を書き込みます。</target>
        </trans-unit>
        <trans-unit id="4e913475a6d22f443a10f1f90df4cc1f3a81243b" translate="yes" xml:space="preserve">
          <source>Writes picture</source>
          <target state="translated">絵を書く</target>
        </trans-unit>
        <trans-unit id="f7d056a7f3e66edf63222271ff0283268d642e29" translate="yes" xml:space="preserve">
          <source>Writes the</source>
          <target state="translated">を書き込みます。</target>
        </trans-unit>
        <trans-unit id="43af035c4cfc2fda929ea76d5352224186a600e4" translate="yes" xml:space="preserve">
          <source>Writes the '\0'-terminated string</source>
          <target state="translated">末尾の文字列を書く。</target>
        </trans-unit>
        <trans-unit id="e16faa087fd3c01feb5f9b5bd086c9c5ee760b8f" translate="yes" xml:space="preserve">
          <source>Writes the '\0'-terminated string,</source>
          <target state="translated">終端の文字列を書く。</target>
        </trans-unit>
        <trans-unit id="6b7ff1554bb80fca10f0ec9812cb0f578ad12e32" translate="yes" xml:space="preserve">
          <source>Writes the 32-bit floating point number,</source>
          <target state="translated">32 ビット浮動小数点数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="5ebab39f9d4124f5e5aa416a9f8282c948a6fc32" translate="yes" xml:space="preserve">
          <source>Writes the 64-bit floating point number,</source>
          <target state="translated">64 ビットの浮動小数点数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="b226bdb4ced9c17cc00d69ae21eb46d4ebaf8d37" translate="yes" xml:space="preserve">
          <source>Writes the &lt;a href=&quot;qstandarditem&quot;&gt;QStandardItem&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qstandarditem&quot;&gt;QStandardItemを&lt;/a&gt;書き込みます</target>
        </trans-unit>
        <trans-unit id="b8f0c512209c740e3e55cddd6cb7918885545149" translate="yes" xml:space="preserve">
          <source>Writes the IDL of the server</source>
          <target state="translated">サーバのIDLを書き込む</target>
        </trans-unit>
        <trans-unit id="d99893e10d55f40d59784ad1328f47129762dd26" translate="yes" xml:space="preserve">
          <source>Writes the Modbus</source>
          <target state="translated">Modbusの書き込み</target>
        </trans-unit>
        <trans-unit id="89e302fcdbc574ebe24baaf0c8e4d03381b6a1bb" translate="yes" xml:space="preserve">
          <source>Writes the NDEF messages in</source>
          <target state="translated">にNDEFメッセージを書き込みます。</target>
        </trans-unit>
        <trans-unit id="2091b58bf7a401d72ac23d54b526bafd45448f0b" translate="yes" xml:space="preserve">
          <source>Writes the UTF-16 character,</source>
          <target state="translated">UTF-16文字を書き込みます。</target>
        </trans-unit>
        <trans-unit id="e2a51328fea6bd74f0194005b05676cf9c21ee41" translate="yes" xml:space="preserve">
          <source>Writes the UTF-32 character,</source>
          <target state="translated">UTF-32文字を書き込みます。</target>
        </trans-unit>
        <trans-unit id="0cf8c931ce0bb439c607f3c6d5335613678e46c3" translate="yes" xml:space="preserve">
          <source>Writes the UUID</source>
          <target state="translated">UUIDの書き込み</target>
        </trans-unit>
        <trans-unit id="0d844a561d39794abea9541fd749a4ca3aa06c97" translate="yes" xml:space="preserve">
          <source>Writes the XML representation of the node</source>
          <target state="translated">ノードのXML表現を書き込みます。</target>
        </trans-unit>
        <trans-unit id="ba55821275bc711a775d68fb76c343185ccc1804" translate="yes" xml:space="preserve">
          <source>Writes the XML representation of the node and all its children to the stream</source>
          <target state="translated">ノードとそのすべての子ノードのXML表現をストリームに書き込みます。</target>
        </trans-unit>
        <trans-unit id="5173c10eb48e0a33829e8fefd212ad18f96a4ac5" translate="yes" xml:space="preserve">
          <source>Writes the attribute vector</source>
          <target state="translated">属性ベクトルの書き込み</target>
        </trans-unit>
        <trans-unit id="f92ac49cc6e1e06e1203df9c1c39fe4631a557e1" translate="yes" xml:space="preserve">
          <source>Writes the boolean value,</source>
          <target state="translated">ブール値を書き込みます。</target>
        </trans-unit>
        <trans-unit id="cd8ce9bc2bf943c4e56b92f4aeb46bce824f5079" translate="yes" xml:space="preserve">
          <source>Writes the byte array,</source>
          <target state="translated">バイト配列を書き込みます。</target>
        </trans-unit>
        <trans-unit id="8eabdcce5a37343d15669dd0a8a27d7f0c3c26bf" translate="yes" xml:space="preserve">
          <source>Writes the char</source>
          <target state="translated">チャルを書き込みます。</target>
        </trans-unit>
        <trans-unit id="2b5ed1350394da87584845383c59220574f11a07" translate="yes" xml:space="preserve">
          <source>Writes the character</source>
          <target state="translated">文字を書く</target>
        </trans-unit>
        <trans-unit id="d95c7cd5ed74557cf6688c0e07daaf3106209b6c" translate="yes" xml:space="preserve">
          <source>Writes the character,</source>
          <target state="translated">キャラクターを書く。</target>
        </trans-unit>
        <trans-unit id="cebbf60c7283546975d1fde748d2c05dc4ae43be" translate="yes" xml:space="preserve">
          <source>Writes the class declaration to</source>
          <target state="translated">クラス宣言を</target>
        </trans-unit>
        <trans-unit id="57bfbc2b100f93cfe347744d496538f65f16d252" translate="yes" xml:space="preserve">
          <source>Writes the constant string pointed to by</source>
          <target state="translated">で指定された定数文字列を書き込みます。</target>
        </trans-unit>
        <trans-unit id="da1f6da0241609752aef03f7fa62f8de0ff41d8a" translate="yes" xml:space="preserve">
          <source>Writes the content of</source>
          <target state="translated">の内容を書きます。</target>
        </trans-unit>
        <trans-unit id="a756d46a2606d6c1cfee2874270963dafb472ca8" translate="yes" xml:space="preserve">
          <source>Writes the contents of</source>
          <target state="translated">の内容を書き込みます。</target>
        </trans-unit>
        <trans-unit id="f9aac4bb0fa33787e49aad0d440828595ab12ef0" translate="yes" xml:space="preserve">
          <source>Writes the contents of list</source>
          <target state="translated">リストの内容を書き込む</target>
        </trans-unit>
        <trans-unit id="4455433b3a272cb366fd2de8a75509c90ea87cb9" translate="yes" xml:space="preserve">
          <source>Writes the contents of this engine to the &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;</source>
          <target state="translated">このエンジンの内容を&lt;a href=&quot;qdatastream&quot;&gt;QDataStreamに&lt;/a&gt;書き込みます</target>
        </trans-unit>
        <trans-unit id="225094d8006c10feac488a2f085db566f995e1b0" translate="yes" xml:space="preserve">
          <source>Writes the contents of vector</source>
          <target state="translated">ベクトルの内容を書き込みます。</target>
        </trans-unit>
        <trans-unit id="8c2a15e81c0e8f17b21bea087a5ecae019073ed2" translate="yes" xml:space="preserve">
          <source>Writes the current state of the</source>
          <target state="translated">の現在の状態を書き込みます。</target>
        </trans-unit>
        <trans-unit id="c6e7fc6a4984583b90e787495f318b8233b14f4f" translate="yes" xml:space="preserve">
          <source>Writes the document fragment specified by</source>
          <target state="translated">で指定されたドキュメントフラグメントを書き込みます。</target>
        </trans-unit>
        <trans-unit id="1202ff3d8570c16d59f08c42a822a7f749e8880f" translate="yes" xml:space="preserve">
          <source>Writes the double</source>
          <target state="translated">ダブルを書き込みます。</target>
        </trans-unit>
        <trans-unit id="8539c07605356fefcd816912e4149596c7a53d6c" translate="yes" xml:space="preserve">
          <source>Writes the elliptic curve</source>
          <target state="translated">楕円曲線の書き込み</target>
        </trans-unit>
        <trans-unit id="db074d6b2e55c441f90e805e61bdebb1b7992759" translate="yes" xml:space="preserve">
          <source>Writes the entity reference</source>
          <target state="translated">エンティティ参照を書き込みます。</target>
        </trans-unit>
        <trans-unit id="34bad6632adb20744b76743c91dda4e14ba571e0" translate="yes" xml:space="preserve">
          <source>Writes the filter settings, currently presented in this filter settings widget, to the</source>
          <target state="translated">現在このフィルタ設定ウィジェットで表示されているフィルタ設定を</target>
        </trans-unit>
        <trans-unit id="b1607f0bccf523ae63f85e68cc506e29039b0d6f" translate="yes" xml:space="preserve">
          <source>Writes the font</source>
          <target state="translated">フォントの書き込み</target>
        </trans-unit>
        <trans-unit id="222706c60e0585ba1aa8775e7a4cf4d25bf6dd83" translate="yes" xml:space="preserve">
          <source>Writes the given</source>
          <target state="translated">与えられたものを書き込みます。</target>
        </trans-unit>
        <trans-unit id="32332afaaa1f943a3a4c0d4645b6baa62f0d9ab7" translate="yes" xml:space="preserve">
          <source>Writes the given painter</source>
          <target state="translated">与えられた絵師を書く</target>
        </trans-unit>
        <trans-unit id="8ec66f337c2b02b2963a6f4c6dc35fa302445ab6" translate="yes" xml:space="preserve">
          <source>Writes the hash</source>
          <target state="translated">ハッシュを書き込む</target>
        </trans-unit>
        <trans-unit id="4b48fc0824d4d6bc1024b1cefaa3ad9feea3e4f8" translate="yes" xml:space="preserve">
          <source>Writes the image</source>
          <target state="translated">画像の書き込み</target>
        </trans-unit>
        <trans-unit id="032a4dd2b65f04b5882070e41371136821d7badf" translate="yes" xml:space="preserve">
          <source>Writes the integer number</source>
          <target state="translated">整数を書き込みます。</target>
        </trans-unit>
        <trans-unit id="81935d912a24085fba191cc34e12216471f1a6bd" translate="yes" xml:space="preserve">
          <source>Writes the item to stream</source>
          <target state="translated">アイテムをストリームに書き込む</target>
        </trans-unit>
        <trans-unit id="6552638e45305f076491f7edb4cf9596dd754686" translate="yes" xml:space="preserve">
          <source>Writes the key</source>
          <target state="translated">キーを書き込む</target>
        </trans-unit>
        <trans-unit id="d228844ef2161824618452159a3af2b68ed53cd1" translate="yes" xml:space="preserve">
          <source>Writes the length specifier</source>
          <target state="translated">長さ指定子の書き込み</target>
        </trans-unit>
        <trans-unit id="79b94957d73f7086cd89426d9124187e94a6296a" translate="yes" xml:space="preserve">
          <source>Writes the linked list</source>
          <target state="translated">リンク先リストの書き込み</target>
        </trans-unit>
        <trans-unit id="38a32e8386cbc1650b8ae46e9dc5b1bda1227562" translate="yes" xml:space="preserve">
          <source>Writes the list</source>
          <target state="translated">リストの書き込み</target>
        </trans-unit>
        <trans-unit id="58cbd55bbef64af3786753d81c071cf35a199251" translate="yes" xml:space="preserve">
          <source>Writes the list widget item</source>
          <target state="translated">リストウィジェットの項目を書き込みます。</target>
        </trans-unit>
        <trans-unit id="11cab43f0fd82c472542be56160f7b8df2e0552e" translate="yes" xml:space="preserve">
          <source>Writes the map</source>
          <target state="translated">地図の書き込み</target>
        </trans-unit>
        <trans-unit id="943a1e5d359550395bfa1e550bb25e767a996b1a" translate="yes" xml:space="preserve">
          <source>Writes the match object</source>
          <target state="translated">マッチオブジェクトを書き込みます。</target>
        </trans-unit>
        <trans-unit id="d8b97594b38fbf77f719a7d5f6adea237c0b8a5e" translate="yes" xml:space="preserve">
          <source>Writes the message</source>
          <target state="translated">メッセージの書き込み</target>
        </trans-unit>
        <trans-unit id="2fe59830ef4bcd2ecf82109dfa8a071eba2e9cc6" translate="yes" xml:space="preserve">
          <source>Writes the object pointed to by</source>
          <target state="translated">で指定されたオブジェクトを書き込みます。</target>
        </trans-unit>
        <trans-unit id="45f9e8a211c9a966d7f4541e3735b45af591d63b" translate="yes" xml:space="preserve">
          <source>Writes the pair</source>
          <target state="translated">ペアを書き込む</target>
        </trans-unit>
        <trans-unit id="5187adb708f018c1740eae35e2acf0dfc3dfcacb" translate="yes" xml:space="preserve">
          <source>Writes the palette,</source>
          <target state="translated">パレットを書きます。</target>
        </trans-unit>
        <trans-unit id="4bff2cc1ddde73b611f6078c2ea24fe0f2ed4a93" translate="yes" xml:space="preserve">
          <source>Writes the pattern options</source>
          <target state="translated">パターンオプションの書き込み</target>
        </trans-unit>
        <trans-unit id="ebc84328ed1e97d4b9296adb4fefe8237f9b0763" translate="yes" xml:space="preserve">
          <source>Writes the pointer tracked by</source>
          <target state="translated">で追跡されたポインタを書き込みます。</target>
        </trans-unit>
        <trans-unit id="4dea0c41c01128286534f3dcc69b8b9c4937b1fd" translate="yes" xml:space="preserve">
          <source>Writes the provided</source>
          <target state="translated">提供された</target>
        </trans-unit>
        <trans-unit id="2bddb6f616d55885ca9436c66cae99e76152bd5f" translate="yes" xml:space="preserve">
          <source>Writes the qlonglong</source>
          <target state="translated">qlonglonglongを書き込む</target>
        </trans-unit>
        <trans-unit id="7d4598dfe7228f4b1656812ac98e7e7e00f97672" translate="yes" xml:space="preserve">
          <source>Writes the qulonglong</source>
          <target state="translated">qulonglongを書く</target>
        </trans-unit>
        <trans-unit id="6e38f1aa77be7ee5502e2d903cbb6ee8ae83e21c" translate="yes" xml:space="preserve">
          <source>Writes the real number</source>
          <target state="translated">実数を書き込む</target>
        </trans-unit>
        <trans-unit id="889293f42a2022b881201a60cdfbb5830d468d1a" translate="yes" xml:space="preserve">
          <source>Writes the region</source>
          <target state="translated">地域の書き込み</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
