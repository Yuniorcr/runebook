<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="4d5f407438a18294d657a9dc0e5896463d687c96" translate="yes" xml:space="preserve">
          <source>This variable holds the text for the progress bar</source>
          <target state="translated">この変数は、プログレスバーのテキストを保持します。</target>
        </trans-unit>
        <trans-unit id="853fec09dd275439406bb03ba33eb7c2e34eab3f" translate="yes" xml:space="preserve">
          <source>This variable holds the text for the tool box tab</source>
          <target state="translated">この変数は、ツールボックスタブのテキストを保持します。</target>
        </trans-unit>
        <trans-unit id="09b2f951fd69bc77ed366b868ddf35a735ebe926" translate="yes" xml:space="preserve">
          <source>This variable holds the text layout direction that should be used when drawing text in the control</source>
          <target state="translated">この変数は、コントロール内でテキストを描画する際に使用するテキストレイアウトの方向を保持します。</target>
        </trans-unit>
        <trans-unit id="523f6cee9cd20901def1a473eaa65c42f3539719" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the button</source>
          <target state="translated">この変数はボタンのテキストを保持します。</target>
        </trans-unit>
        <trans-unit id="3a39d7c3e4a8698ea5e8dd72f9ea6d7c223f3c81" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the group box</source>
          <target state="translated">この変数は、グループボックスのテキストを保持します。</target>
        </trans-unit>
        <trans-unit id="48c9622f8e3f540a0503f2b816f5d30894feb40a" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the header</source>
          <target state="translated">この変数はヘッダのテキストを保持します。</target>
        </trans-unit>
        <trans-unit id="93cb0bbd77b17035a422880b35900aa6cb415083" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the tab</source>
          <target state="translated">この変数はタブのテキストを保持します。</target>
        </trans-unit>
        <trans-unit id="2d0d923630dc87952f3037029216802a0012c3f3" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the title bar</source>
          <target state="translated">この変数は、タイトルバーのテキストを保持します。</target>
        </trans-unit>
        <trans-unit id="6fa81a249db5d0412e002627691503005145eeb3" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the tool button</source>
          <target state="translated">この変数は、ツールボタンのテキストを保持します。</target>
        </trans-unit>
        <trans-unit id="6c649ea4ae5d9d43a9094f27078d596a9987aca8" translate="yes" xml:space="preserve">
          <source>This variable holds the title of the dock window</source>
          <target state="translated">この変数はドックウィンドウのタイトルを保持します。</target>
        </trans-unit>
        <trans-unit id="a64b196e26a8d834883e84810dc2875bba270679" translate="yes" xml:space="preserve">
          <source>This variable holds the title of the link.</source>
          <target state="translated">この変数はリンクのタイトルを保持します。</target>
        </trans-unit>
        <trans-unit id="18929af6c43ce5827a0abcf433e45229c1fc302f" translate="yes" xml:space="preserve">
          <source>This variable holds the top coordinate of the source rectangle.</source>
          <target state="translated">この変数は、元の矩形の頂点座標を保持します。</target>
        </trans-unit>
        <trans-unit id="c7a010f889ab04cc96c344cf146b0b26db42c5cc" translate="yes" xml:space="preserve">
          <source>This variable holds the type of button symbols to draw for the spin box</source>
          <target state="translated">この変数は、スピンボックスに描画するボタンシンボルのタイプを保持します。</target>
        </trans-unit>
        <trans-unit id="a39fcfc08eef6bac68d32d26f4057974876e969c" translate="yes" xml:space="preserve">
          <source>This variable holds the type of checkmark of the menu item</source>
          <target state="translated">この変数は、メニュー項目のチェックマークの種類を保持します。</target>
        </trans-unit>
        <trans-unit id="c165ede0b992906eb907fe80aa34c9794be07666" translate="yes" xml:space="preserve">
          <source>This variable holds the type of element</source>
          <target state="translated">この変数は要素の型を保持します。</target>
        </trans-unit>
        <trans-unit id="3d989080824f2b05e36159158eb16d6501fbe943" translate="yes" xml:space="preserve">
          <source>This variable holds the type of menu item</source>
          <target state="translated">この変数は、メニュー項目のタイプを保持します。</target>
        </trans-unit>
        <trans-unit id="a90ff2f672d82a211381a698ad006bcfe1562245" translate="yes" xml:space="preserve">
          <source>This variable holds the type of the frame to be filtered.</source>
          <target state="translated">この変数は、フィルタリングされるフレームのタイプを保持します。</target>
        </trans-unit>
        <trans-unit id="eb931adfbd237d912d4785bfd3f8297e2fbe82c6" translate="yes" xml:space="preserve">
          <source>This variable holds the type of the style hint container</source>
          <target state="translated">この変数は、スタイルヒントコンテナの型を保持します。</target>
        </trans-unit>
        <trans-unit id="6859978bef55db2e322ed39ed3dcb99fcf466467" translate="yes" xml:space="preserve">
          <source>This variable holds the unique prefix for this invocation in the context of the state from which it is called</source>
          <target state="translated">この変数は、呼び出された状態のコンテキスト内で、この呼び出しの一意の接頭辞を保持します。</target>
        </trans-unit>
        <trans-unit id="021aaaeb6d703f5bd3bcefbe121b7d800f55e35d" translate="yes" xml:space="preserve">
          <source>This variable holds the value of the slider</source>
          <target state="translated">この変数はスライダーの値を保持します。</target>
        </trans-unit>
        <trans-unit id="51c0d0b9ec3ecf26c9c7296534abcbe0ab472ab2" translate="yes" xml:space="preserve">
          <source>This variable holds the value used for negotiating HTTP 1.1 during the Next Protocol Negotiation.</source>
          <target state="translated">この変数は、ネクストプロトコルネゴシエーション中のHTTP 1.1のネゴシエーションに使用される値を保持します。</target>
        </trans-unit>
        <trans-unit id="306a8202e617d86c5e0b881b3d788ced36873f2e" translate="yes" xml:space="preserve">
          <source>This variable holds the value used for negotiating SPDY 3.0 during the Next Protocol Negotiation.</source>
          <target state="translated">この変数は、ネクストプロトコルネゴシエーション中のSPDY 3.0のネゴシエーションに使用される値を保持します。</target>
        </trans-unit>
        <trans-unit id="e9548035a4866f5e042d41dbeb31933636673a2d" translate="yes" xml:space="preserve">
          <source>This variable holds the variant for style hints that return a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;</source>
          <target state="translated">この変数は、&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;を返すスタイルヒントのバリアントを保持します</target>
        </trans-unit>
        <trans-unit id="ad7784c974bad13e626d6a02d0f2b8e38311b9ec" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the extension. This is an integer, increasing with each backward compatible change.</source>
          <target state="translated">この変数は、拡張モジュールのバージョンを保持します。これは整数で、下位互換性のある変更のたびに増加します。</target>
        </trans-unit>
        <trans-unit id="84281a0cbb7bdd97f96722e4eb5c44c228dbcaa1" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the layer. This is an integer, increasing with each backward compatible change.</source>
          <target state="translated">この変数はレイヤーのバージョンを保持します。これは整数で、下位互換性のある変更のたびに増加します。</target>
        </trans-unit>
        <trans-unit id="39467f142f83a2c64ad11a14fe8d43ddc2b7556d" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the style hint return container</source>
          <target state="translated">この変数は、スタイルヒントリターンコンテナのバージョンを保持します。</target>
        </trans-unit>
        <trans-unit id="8de0b90c4b24f8db4efb1c6617a6c1c996ec8760" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the style option</source>
          <target state="translated">この変数は、スタイルオプション</target>
        </trans-unit>
        <trans-unit id="938b97f3e0d60cf5db5267f638c80728c12d0290" translate="yes" xml:space="preserve">
          <source>This variable holds the vertical scale of the target rectangle.</source>
          <target state="translated">この変数は、対象となる矩形の垂直方向のスケールを保持します。</target>
        </trans-unit>
        <trans-unit id="f442b7f481995f2d359805a08bc7078a912875e3" translate="yes" xml:space="preserve">
          <source>This variable holds the widget flags for the title bar</source>
          <target state="translated">この変数はタイトルバーのウィジェットフラグを保持します。</target>
        </trans-unit>
        <trans-unit id="e6e442f7c88ba3f12d1304bb16ea216b2294e7e0" translate="yes" xml:space="preserve">
          <source>This variable holds the width of the source rectangle and is used to calculate the width of the target rectangle.</source>
          <target state="translated">この変数は、ソースの矩形の幅を保持し、ターゲットの矩形の幅を計算するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7053bd70f8b39c0e12a0d5a55f9c63e5f81722aa" translate="yes" xml:space="preserve">
          <source>This variable holds the x coordinate of center point in the target rectangle.</source>
          <target state="translated">この変数は、対象となる矩形の中心点の x 座標を保持します。</target>
        </trans-unit>
        <trans-unit id="aa044eba093d5ffaa7b98d1130ee14a12a5c3be4" translate="yes" xml:space="preserve">
          <source>This variable holds the x coordinate of the element's position.</source>
          <target state="translated">この変数は、要素の位置の x 座標を保持します。</target>
        </trans-unit>
        <trans-unit id="13a1b571b78849dee6e33ee89a4744846408292b" translate="yes" xml:space="preserve">
          <source>This variable holds the y coordinate of the center point in the target rectangle.</source>
          <target state="translated">この変数は、対象となる矩形の中心点の y 座標を保持します。</target>
        </trans-unit>
        <trans-unit id="576bb0d321b0e9eb967c589350635695d50f1b03" translate="yes" xml:space="preserve">
          <source>This variable holds the y coordinate of the element's position.</source>
          <target state="translated">この変数は、要素の位置の y 座標を保持します。</target>
        </trans-unit>
        <trans-unit id="bdd96348d3bdd6ac8e816139f3ef57295255b750" translate="yes" xml:space="preserve">
          <source>This variable holds whether events should automatically be forwarded to the invoked service</source>
          <target state="translated">この変数は、呼び出されたサービスにイベントを自動的に転送するかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="37855af19030761ef182bebf2c3d9ca6323bb847" translate="yes" xml:space="preserve">
          <source>This variable holds whether or not the combobox is editable or not</source>
          <target state="translated">この変数は、コンボボックスが編集可能かどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="0203cec19dba68cfe4d8580aaf781b182886b70e" translate="yes" xml:space="preserve">
          <source>This variable holds whether the combo box has a frame</source>
          <target state="translated">この変数は、コンボボックスにフレームがあるかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="09b210d1795db47eed797b3becfd586764757c9d" translate="yes" xml:space="preserve">
          <source>This variable holds whether the decoration should be highlighted on selected items</source>
          <target state="translated">この変数は、選択されたアイテムで装飾を強調表示するかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="2df3f716538337e3bae80f23b7652a5f87d98b35" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dial should wrap or not</source>
          <target state="translated">この変数は、ダイヤルがラップするかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="c46ccb9f8830793bb96229eb79f7bf37adf0adc6" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dock window is closable</source>
          <target state="translated">この変数は、ドックウィンドウが閉じられるかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="6242b5ccd2bb77e94cf4593e3d9df2f979ac97e8" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dock window is floatable</source>
          <target state="translated">この変数は、ドックウィンドウが浮動可能かどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="27542cd5b61de59960101e378fe1093b2b1d06a5" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dock window is movable</source>
          <target state="translated">この変数は、ドックウィンドウが移動可能かどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="f07297ca0dbe2b9964cba5c1d2872abd14e9a416" translate="yes" xml:space="preserve">
          <source>This variable holds whether the menu as a whole has checkable items or not</source>
          <target state="translated">この変数は、メニュー全体にチェック可能な項目があるかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="8f28b292cd0d05c594db8e7b46d48244174a1223" translate="yes" xml:space="preserve">
          <source>This variable holds whether the menu item is checked or not</source>
          <target state="translated">この変数は、メニュー項目がチェックされているかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="41163aadba9212600ba92399d7a4def334a5672f" translate="yes" xml:space="preserve">
          <source>This variable holds whether the progress bar's appearance is inverted</source>
          <target state="translated">この変数は、プログレスバーの外観が反転しているかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="9a63c5daa3a72cb9b83e0659690a10e0c03f9d86" translate="yes" xml:space="preserve">
          <source>This variable holds whether the rubber band is required to be drawn in an opaque style</source>
          <target state="translated">この変数は、ゴムバンドを不透明なスタイルで描画する必要があるかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="43a09a4ebbb579278440a8f535b44a2ec473683a" translate="yes" xml:space="preserve">
          <source>This variable holds whether the spin box has a frame</source>
          <target state="translated">この変数は、スピンボックスにフレームがあるかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="0d84067b9f8c387244f116af5c1ae035930c526a" translate="yes" xml:space="preserve">
          <source>This variable holds whether the tabbar is in document mode.</source>
          <target state="translated">この変数は、タブバーがドキュメントモードであるかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="fdccf11d046e4697a8b8763c633d1d9fe922edff" translate="yes" xml:space="preserve">
          <source>This variable holds whether the text reads from bottom to top when the progress bar is vertical</source>
          <target state="translated">この変数は、プログレスバーが垂直のときにテキストを下から上に読み上げるかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="f9cc5790e72cf92f445e13d096f0a6d0db8854cc" translate="yes" xml:space="preserve">
          <source>This variable holds whether the toolbar is movable or not.</source>
          <target state="translated">この変数は、ツールバーが移動可能かどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="311a507104498512820d2ffb5a5517ded400675b" translate="yes" xml:space="preserve">
          <source>This variable holds whether this is considered a third-party access.</source>
          <target state="translated">この変数は、これがサードパーティのアクセスと見なされるかどうかを保持します。</target>
        </trans-unit>
        <trans-unit id="241d159273bf2ea091d68215fafa718aaba850e3" translate="yes" xml:space="preserve">
          <source>This variable holds which buttons of the spin box that are enabled</source>
          <target state="translated">この変数は、スピンボックスのどのボタンが有効になっているかを保持します。</target>
        </trans-unit>
        <trans-unit id="d797ee891a7862876cc3b855f350b4d6fafbd47e" translate="yes" xml:space="preserve">
          <source>This variable holds which row the tab is currently in</source>
          <target state="translated">この変数は、タブが現在どの行にあるかを保持します。</target>
        </trans-unit>
        <trans-unit id="c4dcad9c35d306dc764a93c1a0102b3f6ebb2638" translate="yes" xml:space="preserve">
          <source>This variable holds which section of the header is being painted</source>
          <target state="translated">この変数は、ヘッダのどの部分が塗りつぶされるかを保持します。</target>
        </trans-unit>
        <trans-unit id="f4db6b92e6f5655d316d56da93076e3c808caf23" translate="yes" xml:space="preserve">
          <source>This variable is also used to specify which additional files will be deployed to embedded devices.</source>
          <target state="translated">この変数は、どの追加ファイルを組み込みデバイスにデプロイするかを指定するためにも使用されます。</target>
        </trans-unit>
        <trans-unit id="85efe5a4be4e32ba630f973961872a241e1aad2c" translate="yes" xml:space="preserve">
          <source>This variable is automatically populated from the &lt;a href=&quot;#sources&quot;&gt;SOURCES&lt;/a&gt; variable. The extension of each source file is replaced by .o (Unix) or .obj (Win32). You can add objects to the list.</source>
          <target state="translated">この変数は、&lt;a href=&quot;#sources&quot;&gt;SOURCES&lt;/a&gt;変数から自動的に入力されます。各ソースファイルの拡張子は、.o（Unix）または.obj（Win32）に置き換えられます。リストにオブジェクトを追加できます。</target>
        </trans-unit>
        <trans-unit id="227d653170ef0531f4f5990bb960401a1de71c77" translate="yes" xml:space="preserve">
          <source>This variable is automatically populated from the &lt;a href=&quot;qmake-variable-reference#sources&quot;&gt;SOURCES&lt;/a&gt; variable. The extension of each source file is replaced by .o (Unix) or .obj (Win32). You can add objects to the list.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qmake-variable-reference#sources&quot;&gt;SOURCES&lt;/a&gt;変数から自動的に入力されます。各ソースファイルの拡張子は、.o（Unix）または.obj（Win32）に置き換えられます。リストにオブジェクトを追加できます。</target>
        </trans-unit>
        <trans-unit id="7721a1d91d442572c6642ee2c5098972a3953031" translate="yes" xml:space="preserve">
          <source>This variable is currently not used and is always 0.</source>
          <target state="translated">この変数は現在使用されておらず、常に0です。</target>
        </trans-unit>
        <trans-unit id="3013bfb4bfad2d165ce23971f2463a07f675b5f8" translate="yes" xml:space="preserve">
          <source>This variable is currently unused. You can safely ignore it.</source>
          <target state="translated">この変数は現在使用されていません。無視しても問題ありません。</target>
        </trans-unit>
        <trans-unit id="d497a13e414cc77325888d170953cef92e53e387" translate="yes" xml:space="preserve">
          <source>This variable is not empty if the &lt;code&gt;lib&lt;/code&gt; template is specified. The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; テンプレートが指定されている場合、この変数は空ではありません。この変数の値は通常qmakeまたは&lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt;によって処理され、変更する必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="8855d4308043ca6463ad3e5e74745607e81eecf1" translate="yes" xml:space="preserve">
          <source>This variable is not empty if the &lt;code&gt;lib&lt;/code&gt; template is specified. The value of this variable is typically handled by qmake or &lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; テンプレートが指定されている場合、この変数は空ではありません。この変数の値は通常、qmakeまたは&lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt;によって処理され、変更する必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="b8ccb91183f875fe00d45ced05cc5efd04c5d6a2" translate="yes" xml:space="preserve">
          <source>This variable is now obsolete, Objective-C/C++ files (.m and .mm) can be added to the &lt;a href=&quot;#sources&quot;&gt;SOURCES&lt;/a&gt; variable.</source>
          <target state="translated">この変数は廃止され、Objective-C / C ++ファイル（.mおよび.mm）を&lt;a href=&quot;#sources&quot;&gt;SOURCES&lt;/a&gt;変数に追加できます。</target>
        </trans-unit>
        <trans-unit id="3a2af3eed6281fd0859f55c773b9cfdafddddf6c" translate="yes" xml:space="preserve">
          <source>This variable is now obsolete, Objective-C/C++ files (.m and .mm) can be added to the &lt;a href=&quot;qmake-variable-reference#sources&quot;&gt;SOURCES&lt;/a&gt; variable.</source>
          <target state="translated">この変数は廃止され、Objective-C / C ++ファイル（.mおよび.mm）を&lt;a href=&quot;qmake-variable-reference#sources&quot;&gt;SOURCES&lt;/a&gt;変数に追加できるようになりました。</target>
        </trans-unit>
        <trans-unit id="b8f7f8c0bc356fe343365bc2f81aa468f984e9fa" translate="yes" xml:space="preserve">
          <source>This variable is only used by &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt;. See &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-qml-modules-with-plugins.html&quot;&gt;Qt Creator: Using QML Modules with Plugins&lt;/a&gt; for details.</source>
          <target state="translated">この変数は&lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;QtCreator&lt;/a&gt;によってのみ使用されます。詳細については、&lt;a href=&quot;http://doc.qt.io/qtcreator/creator-qml-modules-with-plugins.html&quot;&gt;Qt Creator：プラグイン&lt;/a&gt;でのQMLモジュールの使用を参照してください。</target>
        </trans-unit>
        <trans-unit id="255d07988560dc9b419f8c7e88140f97930b3f4b" translate="yes" xml:space="preserve">
          <source>This variable is specific to &lt;code&gt;.vcproj&lt;/code&gt; files only; it is ignored otherwise.</source>
          <target state="translated">この変数は &lt;code&gt;.vcproj&lt;/code&gt; ファイルにのみ固有です。それ以外の場合は無視されます。</target>
        </trans-unit>
        <trans-unit id="c27e74c9a7291a3388d895a3ccfdf72aa32a9c40" translate="yes" xml:space="preserve">
          <source>This variable is used on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; when building universal binaries.</source>
          <target state="translated">この変数は、ユニバーサルバイナリをビルドするときに&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;で使用されます。</target>
        </trans-unit>
        <trans-unit id="962ed291a4eeb5d9f8b07159a83bb4aa7c41a99d" translate="yes" xml:space="preserve">
          <source>This variable is used on macOS when building universal binaries.</source>
          <target state="translated">この変数はmacOS上でユニバーサルバイナリをビルドする際に使用されます。</target>
        </trans-unit>
        <trans-unit id="fc6bd4037a13a2b65b0627750ccab39c4a5fef8e" translate="yes" xml:space="preserve">
          <source>This variable is used only on Mac OS to set the application icon. Please see &lt;a href=&quot;https://doc.qt.io/qt-5.13/appicon.html&quot;&gt;the application icon documentation&lt;/a&gt; for more information.</source>
          <target state="translated">この変数は、アプリケーションアイコンを設定するためにMac OSでのみ使用されます。詳細について&lt;a href=&quot;https://doc.qt.io/qt-5.13/appicon.html&quot;&gt;は、アプリケーションアイコンのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3033e9100ffec2a03b8f89f264aec33e0f093d8d" translate="yes" xml:space="preserve">
          <source>This variable is used only on Mac OS to set the application icon. Please see &lt;a href=&quot;https://doc.qt.io/qt-5.15/appicon.html&quot;&gt;the application icon documentation&lt;/a&gt; for more information.</source>
          <target state="translated">この変数は、アプリケーションアイコンを設定するためにMacOSでのみ使用されます。詳細について&lt;a href=&quot;https://doc.qt.io/qt-5.15/appicon.html&quot;&gt;は、アプリケーションアイコンのドキュメント&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="66c0474ab441d70030b475cc10c379a82596e8fa" translate="yes" xml:space="preserve">
          <source>This variable is used only on Windows for the Visual Studio project generation to put the specified files in the Generated Files folder.</source>
          <target state="translated">この変数は、指定したファイルをGenerated Filesフォルダに配置するために、Visual Studioプロジェクト生成時にWindows上でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="ac84043a3fd016c194aa4a451116e37749777d35" translate="yes" xml:space="preserve">
          <source>This variable is used only when the &lt;code&gt;warn_off&lt;/code&gt;&lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">この変数は、 &lt;code&gt;warn_off&lt;/code&gt; &lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt;オプションが設定されている場合にのみ使用されます。この変数の値は通常qmakeまたは&lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt;によって処理され、変更する必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="31f496684b9f7cfe3a164d06bc20a80162d75ddc" translate="yes" xml:space="preserve">
          <source>This variable is used only when the &lt;code&gt;warn_off&lt;/code&gt;&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">ときに、この変数にのみ使用され &lt;code&gt;warn_off&lt;/code&gt; の&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIGの&lt;/a&gt;オプションが設定されています。この変数の値は通常、qmakeまたは&lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt;によって処理され、変更する必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="563266b877d07f820d4d309f016814dfa11745c6" translate="yes" xml:space="preserve">
          <source>This variable is used only when the &lt;code&gt;warn_on&lt;/code&gt;&lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">この変数は、 &lt;code&gt;warn_on&lt;/code&gt; &lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt;オプションが設定されている場合にのみ使用されます。この変数の値は通常qmakeまたは&lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt;によって処理され、変更する必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="c7927ed6485556d12af7e13be7785f03171e939f" translate="yes" xml:space="preserve">
          <source>This variable is used only when the &lt;code&gt;warn_on&lt;/code&gt;&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">ときに、この変数にのみ使用され &lt;code&gt;warn_on&lt;/code&gt; の&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIGの&lt;/a&gt;オプションが設定されています。この変数の値は通常、qmakeまたは&lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt;によって処理され、変更する必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="44342f2d0019a6c2c766a16febf9570627b9f40e" translate="yes" xml:space="preserve">
          <source>This variable is used to customize the list of options passed to the &lt;a href=&quot;rcc&quot;&gt;Resource Compiler&lt;/a&gt; in each of the build rules where it is used. For example, the following line ensures that the &lt;code&gt;-threshold&lt;/code&gt; and &lt;code&gt;-compress&lt;/code&gt; options are used with particular values each time that &lt;code&gt;rcc&lt;/code&gt; is invoked:</source>
          <target state="translated">この変数は、使用される各ビルドルールで&lt;a href=&quot;rcc&quot;&gt;リソースコンパイラ&lt;/a&gt;に渡されるオプションのリストをカスタマイズするために使用されます。ことは例えば、以下の行性を保証 &lt;code&gt;-threshold&lt;/code&gt; と &lt;code&gt;-compress&lt;/code&gt; オプションが特定の値とすることをその都度使用される &lt;code&gt;rcc&lt;/code&gt; 起動されました：</target>
        </trans-unit>
        <trans-unit id="89dedb7e57d1f8cc4829e7c1067dc9f354b3b1da" translate="yes" xml:space="preserve">
          <source>This variable is used to customize the list of options passed to the &lt;a href=&quot;uic&quot;&gt;User Interface Compiler&lt;/a&gt; in each of the build rules where it is used.</source>
          <target state="translated">この変数は、使用される各ビルドルールで&lt;a href=&quot;uic&quot;&gt;ユーザーインターフェイスコンパイラ&lt;/a&gt;に渡されるオプションのリストをカスタマイズするために使用されます。</target>
        </trans-unit>
        <trans-unit id="b8dfe1d57477856cc69e295caeb52d9c4fba5611" translate="yes" xml:space="preserve">
          <source>This variable is used whenever a literal hash character (&lt;code&gt;#&lt;/code&gt;) is needed in a variable declaration, perhaps as part of a file name or in a string passed to some external application.</source>
          <target state="translated">この変数は、リテラルハッシュ文字（ &lt;code&gt;#&lt;/code&gt; ）が変数宣言で必要な場合に、おそらくファイル名の一部として、または外部アプリケーションに渡される文字列で使用されます。</target>
        </trans-unit>
        <trans-unit id="932d575f8090d6ad3839f2eff4dd027052d058cd" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes either the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipPath&lt;/a&gt; or the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipRegion&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyClipPath&lt;/a&gt;または&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyClipRegion&lt;/a&gt;フラグのいずれかを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="14d6478466e95fea07b2a4ee93ae8d08bdb40ae2" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBackground&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyBackground&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4fb6bec407383ced1245d477287af433732ac9c9" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBackgroundMode&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyBackgroundMode&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="60ba8258474e76cc20f436e9e229e7d9f6f5ece4" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBrush&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyBrush&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="135d575c029f3962c57f9922e65a645ba83caad5" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBrushOrigin&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyBrushOrigin&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="f88cf745c7ab3c89fd7bd46f041ce63d2807ee08" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipEnabled&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyClipEnabled&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="88555217b5ca76efd15dd668e02df83fcfd6ce86" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipPath&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyClipPath&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7739a8cc5642b90827ba79cec478909f46fa907d" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipRegion&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyClipRegion&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9dc92a7f277470c4dec64fc4455b504c4edd5dc5" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyCompositionMode&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyCompositionMode&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="11be25e513b50d06a4494068d9f1aa229d9ee955" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyFont&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyFont&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a56b0d61162e7d7c70156d3492f6e9c71d6eea2" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyHints&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyHints&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="73c98d911c706f336c1e96fefeb8ece51d8adc33" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyPen&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyPen&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="69e85f2a6d67fe86e3a62bb4b4cf80d7613012e2" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyTransform&lt;/a&gt; flag.</source>
          <target state="translated">この変数は、&lt;a href=&quot;qpaintenginestate#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyTransform&lt;/a&gt;フラグを含む組み合わせを返す場合にのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4ebe50a83e7ef91b133003c8535a0088ebeb780d" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of OpenGL header files to be added to &lt;a href=&quot;#includepath&quot;&gt;INCLUDEPATH&lt;/a&gt; when building a target with OpenGL ES 2 support.</source>
          <target state="translated">この変数は、OpenGL ES 2をサポートするターゲットをビルドするときに&lt;a href=&quot;#includepath&quot;&gt;INCLUDEPATH&lt;/a&gt;に追加されるOpenGLヘッダーファイルの場所を指定します。</target>
        </trans-unit>
        <trans-unit id="532b6f38a6875dbd8fe64a2ec88cac9802164e0f" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of OpenGL header files to be added to &lt;a href=&quot;qmake-variable-reference#includepath&quot;&gt;INCLUDEPATH&lt;/a&gt; when building a target with OpenGL ES 2 support.</source>
          <target state="translated">この変数は、OpenGL ES2をサポートするターゲットを構築するときに&lt;a href=&quot;qmake-variable-reference#includepath&quot;&gt;INCLUDEPATH&lt;/a&gt;に追加されるOpenGLヘッダーファイルの場所を指定します。</target>
        </trans-unit>
        <trans-unit id="3b60efa0a9902e9c0dc044059f73cc9b15d56b73" translate="yes" xml:space="preserve">
          <source>This variable stores the meta-object for the class.</source>
          <target state="translated">この変数はクラスのメタオブジェクトを格納します。</target>
        </trans-unit>
        <trans-unit id="8713b1aa914dface0a8ab0a1dc35e3eba54cd652" translate="yes" xml:space="preserve">
          <source>This variable was introduced in Qt 5.13.2.</source>
          <target state="translated">この変数はQt 5.13.2で導入されました。</target>
        </trans-unit>
        <trans-unit id="ef2dc52470f2f8ea64f5447cdfb37d7b0460a064" translate="yes" xml:space="preserve">
          <source>This variable, when used with the &lt;code&gt;subdirs&lt;/code&gt;&lt;a href=&quot;#template&quot;&gt;template&lt;/a&gt; specifies the names of all subdirectories or project files that contain parts of the project that need to be built. Each subdirectory specified using this variable must contain its own project file.</source>
          <target state="translated">この変数を &lt;code&gt;subdirs&lt;/code&gt; &lt;a href=&quot;#template&quot;&gt;テンプレートで&lt;/a&gt;使用すると、ビルドする必要のあるプロジェクトの一部を含むすべてのサブディレクトリまたはプロジェクトファイルの名前が指定されます。この変数を使用して指定された各サブディレクトリには、独自のプロジェクトファイルが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="9edbd39650d38b498d3ad37425495863cffba32e" translate="yes" xml:space="preserve">
          <source>This variable, when used with the &lt;code&gt;subdirs&lt;/code&gt;&lt;a href=&quot;qmake-variable-reference#template&quot;&gt;template&lt;/a&gt; specifies the names of all subdirectories or project files that contain parts of the project that need to be built. Each subdirectory specified using this variable must contain its own project file.</source>
          <target state="translated">この変数は、 &lt;code&gt;subdirs&lt;/code&gt; &lt;a href=&quot;qmake-variable-reference#template&quot;&gt;テンプレート&lt;/a&gt;とともに使用すると、ビルドする必要のあるプロジェクトの部分を含むすべてのサブディレクトリまたはプロジェクトファイルの名前を指定します。この変数を使用して指定された各サブディレクトリには、独自のプロジェクトファイルが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="d5d2f1f531f89c2843f8178fd8fdd4305f084788" translate="yes" xml:space="preserve">
          <source>This vector decribes the displacement from the camera (&lt;a href=&quot;qml-qt3d-render-camera#position-prop&quot;&gt;position&lt;/a&gt;) to its target (&lt;a href=&quot;qml-qt3d-render-camera#viewCenter-prop&quot;&gt;viewCenter&lt;/a&gt;).</source>
          <target state="translated">このベクトルは、カメラ（&lt;a href=&quot;qml-qt3d-render-camera#position-prop&quot;&gt;位置&lt;/a&gt;）からターゲット（&lt;a href=&quot;qml-qt3d-render-camera#viewCenter-prop&quot;&gt;viewCenter&lt;/a&gt;）までの変位を表します。</target>
        </trans-unit>
        <trans-unit id="2c600aedb217179c2d2f4232deaaaa4ea6c62b97" translate="yes" xml:space="preserve">
          <source>This vector decribes the displacement from the camera (&lt;a href=&quot;qt3drender-qcamera#position-prop&quot;&gt;position&lt;/a&gt;) to its target (&lt;a href=&quot;qt3drender-qcamera#viewCenter-prop&quot;&gt;viewCenter&lt;/a&gt;).</source>
          <target state="translated">このベクトルは、カメラ（&lt;a href=&quot;qt3drender-qcamera#position-prop&quot;&gt;位置&lt;/a&gt;）からターゲット（&lt;a href=&quot;qt3drender-qcamera#viewCenter-prop&quot;&gt;viewCenter&lt;/a&gt;）までの変位を表します。</target>
        </trans-unit>
        <trans-unit id="6e319b42d6c8d30be8776ff2dd387be0ddc37a40" translate="yes" xml:space="preserve">
          <source>This version adds the given</source>
          <target state="translated">このバージョンでは、与えられた</target>
        </trans-unit>
        <trans-unit id="522e89e1f28dbb79282d329bbfaaaba3463d0ffa" translate="yes" xml:space="preserve">
          <source>This version adds the layout</source>
          <target state="translated">このバージョンでは、レイアウトが追加されています。</target>
        </trans-unit>
        <trans-unit id="8f2cb21cca9cc80bf4f7b8371033fa6b0fc1ebbd" translate="yes" xml:space="preserve">
          <source>This version of the function disregards &lt;a href=&quot;qlcdnumber#mode-prop&quot;&gt;mode&lt;/a&gt;() and &lt;a href=&quot;qlcdnumber#smallDecimalPoint-prop&quot;&gt;smallDecimalPoint&lt;/a&gt;().</source>
          <target state="translated">このバージョンの関数は、&lt;a href=&quot;qlcdnumber#mode-prop&quot;&gt;mode&lt;/a&gt;（）と&lt;a href=&quot;qlcdnumber#smallDecimalPoint-prop&quot;&gt;smallDecimalPoint&lt;/a&gt;（）を無視します。</target>
        </trans-unit>
        <trans-unit id="a356554250f4bcbd115d4d97d897c5a442ade6ae" translate="yes" xml:space="preserve">
          <source>This version only scrolls</source>
          <target state="translated">このバージョンはスクロールのみ</target>
        </trans-unit>
        <trans-unit id="b08d9c1cec489b0443ca77438b984f68e850519a" translate="yes" xml:space="preserve">
          <source>This version produces the same result set but in the expected order:</source>
          <target state="translated">このバージョンは、同じ結果セットを生成しますが、期待される順序で生成されます。</target>
        </trans-unit>
        <trans-unit id="c4b94ef2f488af426d3211c139a4f9de4987abe1" translate="yes" xml:space="preserve">
          <source>This version repaints a rectangle</source>
          <target state="translated">このバージョンでは、矩形を再描画します。</target>
        </trans-unit>
        <trans-unit id="382fe17b3497192ab88821152a1323744cd284d3" translate="yes" xml:space="preserve">
          <source>This version repaints a rectangle (</source>
          <target state="translated">このバージョンでは、矩形を再描画します (</target>
        </trans-unit>
        <trans-unit id="c8c25dae0e4946a1844d1484dd2f17e737c17b40" translate="yes" xml:space="preserve">
          <source>This version repaints a region</source>
          <target state="translated">このバージョンでは、領域を再描画します。</target>
        </trans-unit>
        <trans-unit id="9b7389b58125c38c756978b2bb14e1f2afacd60a" translate="yes" xml:space="preserve">
          <source>This version updates a rectangle</source>
          <target state="translated">このバージョンでは、長方形を更新します。</target>
        </trans-unit>
        <trans-unit id="3a4b7917e3389f9d585adbe4129dbe98ee7ac411" translate="yes" xml:space="preserve">
          <source>This version updates a rectangle (</source>
          <target state="translated">このバージョンでは、矩形 (</target>
        </trans-unit>
        <trans-unit id="f9b476c0478f854701abdec5fd877fd5154302b7" translate="yes" xml:space="preserve">
          <source>This version uses the &lt;a href=&quot;http://www.w3.org/TR/xpath-functions/#func-not&quot;&gt;not&lt;/a&gt; and &lt;a href=&quot;http://www.w3.org/TR/xpath-functions/#func-normalize-space&quot;&gt;normalize-space()&lt;/a&gt; functions. &lt;code&gt;normalize-space(method))&lt;/code&gt; returns the contents of the method element as a string, but with all the whitespace normalized, i.e., the string value of each &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; element will have its whitespace normalized, and then all the normalized step values will be concatenated. If that string is empty, then &lt;code&gt;not()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; and the predicate is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このバージョンは&lt;a href=&quot;http://www.w3.org/TR/xpath-functions/#func-not&quot;&gt;not&lt;/a&gt;および&lt;a href=&quot;http://www.w3.org/TR/xpath-functions/#func-normalize-space&quot;&gt;normalize-space（）&lt;/a&gt;関数を使用します。 &lt;code&gt;normalize-space(method))&lt;/code&gt; はメソッド要素の内容を文字列として返しますが、すべての空白が正規化されます。つまり、各 &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; 要素の文字列値は空白が正規化され、正規化されたすべてのステップ値は連結されます。その文字列が空の場合、 &lt;code&gt;not()&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返し、述語は &lt;code&gt;true&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="f8a08cd0b5f807e5dd5c09be7683f1ccf8fcd333" translate="yes" xml:space="preserve">
          <source>This version will reach its destination position in</source>
          <target state="translated">このバージョンでは、目的地の位置に到達するのは</target>
        </trans-unit>
        <trans-unit id="85c1f0bf7c3fad18fae966ca1b2f86a16097541b" translate="yes" xml:space="preserve">
          <source>This view does not display horizontal or vertical headers; to display a list of items with a horizontal header, use &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; instead.</source>
          <target state="translated">このビューには、水平または垂直のヘッダーは表示されません。水平ヘッダー付きのアイテムのリストを表示するには、代わりに&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="6a9c1973b42b493b382fd9fa06b3493b70c95842" translate="yes" xml:space="preserve">
          <source>This virtual event handler receives all events for the managed widget. &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; uses this event handler to listen for layout related events such as geometry changes, layout changes or layout direction changes.</source>
          <target state="translated">この仮想イベントハンドラーは、マネージウィジェットのすべてのイベントを受け取ります。&lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt;はこのイベントハンドラーを使用して、ジオメトリの変更、レイアウトの変更、レイアウトの方向の変更など、レイアウトに関連するイベントをリッスンします。</target>
        </trans-unit>
        <trans-unit id="6900842a2e401d91860300b5f752623331ad878f" translate="yes" xml:space="preserve">
          <source>This virtual function discards any cached size hint information. You should always call this function if you change the return value of the &lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;() function. Subclasses must always call the base implementation when reimplementing this function.</source>
          <target state="translated">この仮想関数は、キャッシュされたサイズのヒント情報をすべて破棄します。&lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;（）関数の戻り値を変更する場合は、常にこの関数を呼び出す必要があります。この関数を再実装する場合、サブクラスは常に基本実装を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="f0f339a3db83372a623a17ae29bb3f470294d686" translate="yes" xml:space="preserve">
          <source>This virtual function is called after each invocation of &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;().</source>
          <target state="translated">この仮想関数は、&lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;（）を呼び出すたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="63509dee1110a50d0db31d7957dbaf660dd68c6f" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; when the direction of the animation is changed. The</source>
          <target state="translated">この仮想関数は、アニメーションの方向が変更されたときに&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;によって呼び出されます。の</target>
        </trans-unit>
        <trans-unit id="4439eba594e21fbd00a4cf3615327d51f7681d7c" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; when the state of the animation is changed from</source>
          <target state="translated">この仮想関数は、アニメーションの状態が次のように変更されたときに&lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt;によって呼び出されます</target>
        </trans-unit>
        <trans-unit id="bc3d68df9aa990e7d1403087669d0a619dbe5cce" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qaxbase#control-prop&quot;&gt;setControl&lt;/a&gt;() and creates the requested COM object.</source>
          <target state="translated">この仮想関数は&lt;a href=&quot;qaxbase#control-prop&quot;&gt;setControl&lt;/a&gt;（）によって呼び出され、要求されたCOMオブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="7f20034c3837f8ab16ee47ecceaa7f8b0b6b3ae5" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; to notify the effect that the source has changed. If the effect applies any cache, then this cache must be purged in order to reflect the new appearance of the source.</source>
          <target state="translated">この仮想関数は&lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt;によって呼び出され、ソースが変更されたことを通知します。エフェクトがキャッシュを適用する場合、ソースの新しい外観を反映するために、このキャッシュをパージする必要があります。</target>
        </trans-unit>
        <trans-unit id="71296ee4c5f141586335f2af33fd83737e7612b2" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; to notify custom items that some part of the item's state changes. By reimplementing this function, you can react to a change, and in some cases (depending on</source>
          <target state="translated">この仮想関数は&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;によって呼び出され、アイテムの状態の一部が変更されたことをカスタムアイテムに通知します。この関数を再実装することで、変更に対応でき、場合によっては（</target>
        </trans-unit>
        <trans-unit id="5b61b2ffc0de0ba3b6dbb62ca23b895feb6edfae" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; to draw the window frame for windows using</source>
          <target state="translated">この仮想関数は&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;によって呼び出され、以下を使用してウィンドウのウィンドウフレームを描画します</target>
        </trans-unit>
        <trans-unit id="956c762b6b2ac6b65af94931cf4fd7ae51def03d" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt; when a new connection is available.</source>
          <target state="translated">この仮想関数は、新しい接続が利用可能になると&lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ab1fff1cbe154a34b90fef992a2c123160547ded" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; when a new connection is available. The</source>
          <target state="translated">この仮想関数は、新しい接続が利用可能になると&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;によって呼び出されます。の</target>
        </trans-unit>
        <trans-unit id="0fe0e8c86e57c97b576741cc5f9c5836240e289d" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt; whenever the current value changes.</source>
          <target state="translated">この仮想関数は、現在の値が変更されるたびに&lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt;によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6c158a5454a58d2b7067c7d0ff2397603847f9b5" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to clean up page</source>
          <target state="translated">この仮想関数は、ページをクリーンアップするために&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;によって呼び出されます</target>
        </trans-unit>
        <trans-unit id="44418bca78ab4293e572085c6e00f17e3ef86fca" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to determine whether the &lt;b&gt;Next&lt;/b&gt; or &lt;b&gt;Finish&lt;/b&gt; button should be enabled or disabled.</source>
          <target state="translated">この仮想関数は&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;によって呼び出され、[ &lt;b&gt;次へ]&lt;/b&gt;または[ &lt;b&gt;完了&lt;/b&gt; ]ボタンを有効にするか無効にするかを決定します。</target>
        </trans-unit>
        <trans-unit id="1db68dacf3385a4a6dfb3201e5cb7f6417620caa" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to find out which page to show when the user clicks the &lt;b&gt;Next&lt;/b&gt; button.</source>
          <target state="translated">この仮想関数は、ユーザーが[ &lt;b&gt;次へ&lt;/b&gt; ]ボタンをクリックしたときに表示するページを見つけるために&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;によって呼び出されます。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ee9d6a8dd18f17ed3dbe3b9013475a636becbed7" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to prepare page</source>
          <target state="translated">この仮想関数は、ページを準備するために&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;によって呼び出されます</target>
        </trans-unit>
        <trans-unit id="c774840ff114df26e52dc2f1490ca8c3dc585c0b" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; when the user clicks &lt;b&gt;Next&lt;/b&gt; or &lt;b&gt;Finish&lt;/b&gt; to perform some last-minute validation. If it returns &lt;code&gt;true&lt;/code&gt;, the next page is shown (or the wizard finishes); otherwise, the current page stays up.</source>
          <target state="translated">この仮想関数は、ユーザーが[ &lt;b&gt;次へ]&lt;/b&gt;または[ &lt;b&gt;完了]&lt;/b&gt;をクリックして最後の検証を実行するときに&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;によって呼び出されます。 &lt;code&gt;true&lt;/code&gt; が返された場合、次のページが表示されます（またはウィザードが終了します）。それ以外の場合、現在のページはそのまま残ります。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="41fc458329d08e7cba071ef34fa2fe045432db33" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#cleanupPage&quot;&gt;QWizard::cleanupPage&lt;/a&gt;() when the user leaves the page by clicking &lt;b&gt;Back&lt;/b&gt; (unless the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard::IndependentPages&lt;/a&gt; option is set).</source>
          <target state="translated">この仮想関数は、ユーザーが[ &lt;b&gt;戻る&lt;/b&gt; ]をクリックしてページを離れたときに&lt;a href=&quot;qwizard#cleanupPage&quot;&gt;QWizard :: cleanupPage&lt;/a&gt;（）によって呼び出されます（&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard :: IndependentPages&lt;/a&gt;オプションが設定されていない場合）。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b8f241643c89b7f827872e67662da6eaff928f5e" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#initializePage&quot;&gt;QWizard::initializePage&lt;/a&gt;() to prepare the page just before it is shown either as a result of &lt;a href=&quot;qwizard#restart&quot;&gt;QWizard::restart&lt;/a&gt;() being called, or as a result of the user clicking &lt;b&gt;Next&lt;/b&gt;. (However, if the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard::IndependentPages&lt;/a&gt; option is set, this function is only called the first time the page is shown.)</source>
          <target state="translated">この仮想関数は&lt;a href=&quot;qwizard#initializePage&quot;&gt;QWizard :: initializePage&lt;/a&gt;（）によって呼び出され、&lt;a href=&quot;qwizard#restart&quot;&gt;QWizard :: restart&lt;/a&gt;（）が呼び出された結果、またはユーザーが[ &lt;b&gt;次へ&lt;/b&gt; ]をクリックした結果として表示される直前にページを準備します。（ただし、&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard :: IndependentPages&lt;/a&gt;オプションが設定されている場合、この関数は、ページが初めて表示されたときにのみ呼び出されます。）</target>
        </trans-unit>
        <trans-unit id="9c2c9d5ee24df339edb6858ee82108b82ded03a4" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#nextId&quot;&gt;QWizard::nextId&lt;/a&gt;() to find out which page to show when the user clicks the &lt;b&gt;Next&lt;/b&gt; button.</source>
          <target state="translated">この仮想関数は&lt;a href=&quot;qwizard#nextId&quot;&gt;QWizard :: nextId&lt;/a&gt;（）によって呼び出され、ユーザーが[ &lt;b&gt;次へ&lt;/b&gt; ]ボタンをクリックしたときに表示するページを見つけます。</target>
        </trans-unit>
        <trans-unit id="c239fea67f69219fdac0e910808a6a4fffa5a20a" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;QWizard::validateCurrentPage&lt;/a&gt;() when the user clicks &lt;b&gt;Next&lt;/b&gt; or &lt;b&gt;Finish&lt;/b&gt; to perform some last-minute validation. If it returns &lt;code&gt;true&lt;/code&gt;, the next page is shown (or the wizard finishes); otherwise, the current page stays up.</source>
          <target state="translated">この仮想関数は、ユーザーが[ &lt;b&gt;次へ]&lt;/b&gt;または[ &lt;b&gt;完了]&lt;/b&gt;をクリックして直前の検証を実行すると、&lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;QWizard :: validateCurrentPage&lt;/a&gt;（）によって呼び出されます。 &lt;code&gt;true&lt;/code&gt; が返された場合、次のページが表示されます（またはウィザードが終了します）。それ以外の場合、現在のページはそのまま残ります。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="56bac9c33269a3bd4442827b04f65b772ebb58c9" translate="yes" xml:space="preserve">
          <source>This virtual function is called by the &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; if the</source>
          <target state="translated">この仮想関数は、次のように呼び出された&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;場合</target>
        </trans-unit>
        <trans-unit id="8b478efddfaa34ede968666a2e20ad0a597f5a87" translate="yes" xml:space="preserve">
          <source>This virtual function is called by the &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; to determine whether</source>
          <target state="translated">この仮想関数は、によって呼び出され&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;かどうかを判断します</target>
        </trans-unit>
        <trans-unit id="841a589463889e4c5197615bc177139d102a2e98" translate="yes" xml:space="preserve">
          <source>This virtual function is called every time the animation's current value changes. The</source>
          <target state="translated">この仮想関数は、アニメーションの現在値が変化するたびに呼び出されます。この関数は、現在の値が変更されるたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="0578249a2d20a0f60522ed3b978da38fbc15ae26" translate="yes" xml:space="preserve">
          <source>This virtual function is called once before the first call to &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() or &lt;a href=&quot;qopenglwidget#resizeGL&quot;&gt;resizeGL&lt;/a&gt;(). Reimplement it in a subclass.</source>
          <target state="translated">この仮想関数は、&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;（）または&lt;a href=&quot;qopenglwidget#resizeGL&quot;&gt;resizeGL&lt;/a&gt;（）への最初の呼び出しの前に一度呼び出されます。サブクラスで再実装します。</target>
        </trans-unit>
        <trans-unit id="2b8c54e05a4a1cb4a76484fde26bd2c67588f11c" translate="yes" xml:space="preserve">
          <source>This virtual function is called once before the first call to &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;() or &lt;a href=&quot;qopenglwindow#resizeGL&quot;&gt;resizeGL&lt;/a&gt;(). Reimplement it in a subclass.</source>
          <target state="translated">この仮想関数は、&lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;（）または&lt;a href=&quot;qopenglwindow#resizeGL&quot;&gt;resizeGL&lt;/a&gt;（）への最初の呼び出しの前に一度呼び出されます。サブクラスで再実装します。</target>
        </trans-unit>
        <trans-unit id="a927f34505fa33b3cd0fad16c550a3cfa3d4069f" translate="yes" xml:space="preserve">
          <source>This virtual function is called once during the lifetime of the window, at some point after making it visible for the first time.</source>
          <target state="translated">この仮想関数は、ウィンドウの有効期間中に一度だけ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="4ec5aae87d4f32d58510c151a32da5ba7db8db4a" translate="yes" xml:space="preserve">
          <source>This virtual function is called right before graphics initialization, that ends up in calling &lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;initResources&lt;/a&gt;(), is about to begin.</source>
          <target state="translated">この仮想関数は、グラフィックの初期化の直前に呼び出され、&lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;最終的にはinitResources&lt;/a&gt;（）の呼び出しが開始されます。</target>
        </trans-unit>
        <trans-unit id="9d67cf8415772650cfe6ac48b554aa1d735d9885" translate="yes" xml:space="preserve">
          <source>This virtual function is called to pop up the dialog. It must be reimplemented in subclasses.</source>
          <target state="translated">この仮想関数は、ダイアログをポップアップ表示するために呼び出されます。サブクラスで再実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="98bea5b49f9b6c0cc606ac3e564e7811d99443ea" translate="yes" xml:space="preserve">
          <source>This virtual function is called twice for all items by the &lt;a href=&quot;qgraphicsscene#advance&quot;&gt;QGraphicsScene::advance&lt;/a&gt;() slot. In the first phase, all items are called with</source>
          <target state="translated">この仮想関数は、&lt;a href=&quot;qgraphicsscene#advance&quot;&gt;QGraphicsScene :: advance&lt;/a&gt;（）スロットによってすべてのアイテムに対して2回呼び出されます。最初のフェーズでは、すべてのアイテムが</target>
        </trans-unit>
        <trans-unit id="a9fd56ec85aa7b65d3d045620f8b6724791b34f7" translate="yes" xml:space="preserve">
          <source>This virtual function is called when it is time to create the renderer's graphics resources.</source>
          <target state="translated">この仮想関数は、レンダラーのグラフィックス リソースを作成するときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="941828d233fc2c24770ed23be717d838014315cf" translate="yes" xml:space="preserve">
          <source>This virtual function is called when something has been connected to</source>
          <target state="translated">この仮想関数は、何かが</target>
        </trans-unit>
        <trans-unit id="ce06f6e822a1d76a4c93103531bc17e5ef62ff92" translate="yes" xml:space="preserve">
          <source>This virtual function is called when something has been disconnected from</source>
          <target state="translated">この仮想関数は、何かが</target>
        </trans-unit>
        <trans-unit id="3688ee300d710ceca6a9485b0fd09ece22f601fb" translate="yes" xml:space="preserve">
          <source>This virtual function is called when swapchain, framebuffer or renderpass related initialization can be performed. Swapchain and related resources are reset and then recreated in response to window resize events, and therefore a pair of calls to &lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;initResources&lt;/a&gt;() and &lt;a href=&quot;qvulkanwindowrenderer#releaseResources&quot;&gt;releaseResources&lt;/a&gt;() can have multiple calls to initSwapChainResources() and &lt;a href=&quot;qvulkanwindowrenderer#releaseSwapChainResources&quot;&gt;releaseSwapChainResources&lt;/a&gt;() calls in-between.</source>
          <target state="translated">この仮想関数は、スワップチェーン、フレームバッファー、またはレンダーパスに関連する初期化を実行できるときに呼び出されます。スワップチェーンと関連リソースはリセットされ、ウィンドウのサイズ変更イベントに応じて再作成されるため、&lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;initResources&lt;/a&gt;（）と&lt;a href=&quot;qvulkanwindowrenderer#releaseResources&quot;&gt;releaseResources&lt;/a&gt;（）への呼び出しのペアは、その間にinitSwapChainResources（）と&lt;a href=&quot;qvulkanwindowrenderer#releaseSwapChainResources&quot;&gt;releaseSwapChainResources&lt;/a&gt;（）への複数の呼び出しを持つことができます。</target>
        </trans-unit>
        <trans-unit id="0ff430fb97514a894ac72a5e067d3f2ef150ab9e" translate="yes" xml:space="preserve">
          <source>This virtual function is called when swapchain, framebuffer or renderpass related resources must be released.</source>
          <target state="translated">この仮想関数は、スワップチェーン、フレームバッファ、またはレンダーパス関連のリソースを解放する必要がある場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d3ef7e464f42e33491a6877229f301717508e9ee" translate="yes" xml:space="preserve">
          <source>This virtual function is called when the logical device (VkDevice) is lost, meaning some operation failed with &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt;.</source>
          <target state="translated">この仮想関数は、論理デバイス（VkDevice）が失われたときに &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt; ます。つまり、一部の操作がVK_ERROR_DEVICE_LOSTで失敗しました。</target>
        </trans-unit>
        <trans-unit id="cde034e660af543b35b086b3f0ce9a72c6757fda" translate="yes" xml:space="preserve">
          <source>This virtual function is called when the physical device is lost, meaning the creation of the logical device fails with &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt;.</source>
          <target state="translated">この仮想関数は、物理デバイスが失われたときに &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt; ます。つまり、論理デバイスの作成はVK_ERROR_DEVICE_LOSTで失敗します。</target>
        </trans-unit>
        <trans-unit id="dc04d37894f605793081663229da204ee9aaf47c" translate="yes" xml:space="preserve">
          <source>This virtual function is called when the renderer's graphics resources must be released.</source>
          <target state="translated">この仮想関数は、レンダラーのグラフィックス リソースを解放する必要がある場合に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="84b0ef869ea87904f66359886fc9e9d7d4f1463e" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the query changes. The default implementation does nothing.</source>
          <target state="translated">この仮想関数は、クエリが変更されるたびに呼び出されます。デフォルトの実装では何もしません。</target>
        </trans-unit>
        <trans-unit id="8b68db5c44313cb9b3659e59bac1c4632083edb2" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the widget has been resized. Reimplement it in a subclass. The new size is passed in</source>
          <target state="translated">この仮想関数は、ウィジェットのサイズが変更されるたびに呼び出されます。サブクラスで再実装してください。新しいサイズは</target>
        </trans-unit>
        <trans-unit id="db0f755e6b7ae620fc79e7b65eec6ee877d4016c" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the widget needs to be painted. Reimplement it in a subclass.</source>
          <target state="translated">この仮想関数は、ウィジェットをペイントする必要があるときに呼び出されます。サブクラスで再実装してください。</target>
        </trans-unit>
        <trans-unit id="ae8aab40d878e290da18464e535e827c0549203e" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the window contents needs to be painted. Reimplement it in a subclass.</source>
          <target state="translated">この仮想関数は、ウィンドウの内容をペイントする必要があるときに呼び出されます。サブクラスで再実装してください。</target>
        </trans-unit>
        <trans-unit id="a4668ccebd420a018db1ede54c80cace4c92bc1a" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the date time edit whenever it needs to display</source>
          <target state="translated">この仮想関数は、日付時刻編集で</target>
        </trans-unit>
        <trans-unit id="fcf2b75f6351d98995e4ed78bc37b13d445fadbb" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the datetime edit whenever it needs to interpret text entered by the user as a value.</source>
          <target state="translated">この仮想関数は、ユーザが入力したテキストを値として解釈する必要がある場合に、datetime編集で使用されます。</target>
        </trans-unit>
        <trans-unit id="09f2550fa4babbe68c7842dd60a5737f98fcc228" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the spin box whenever it needs to display the given</source>
          <target state="translated">この仮想関数は、与えられた</target>
        </trans-unit>
        <trans-unit id="4d69280eefff2269c575325998a086c46761d22b" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the spin box whenever it needs to interpret</source>
          <target state="translated">この仮想関数は、スピンボックスが</target>
        </trans-unit>
        <trans-unit id="7c405498f9c38255177b6d74bf542ba9dcb8f4cf" translate="yes" xml:space="preserve">
          <source>This virtual function provides the</source>
          <target state="translated">この仮想関数は</target>
        </trans-unit>
        <trans-unit id="fec2616dcd24120412b5d8942b65049210f31207" translate="yes" xml:space="preserve">
          <source>This virtual function receives events to an object and should return true if the event</source>
          <target state="translated">この仮想関数はオブジェクトへのイベントを受信し、イベント</target>
        </trans-unit>
        <trans-unit id="6672e1c9f0d3adb4dd2260d5548db14f0dda97cf" translate="yes" xml:space="preserve">
          <source>This virtual function receives events to this item. Reimplement this function to intercept events before they are dispatched to the specialized event handlers &lt;a href=&quot;qgraphicsitem#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;focusInEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;focusOutEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#hoverEnterEvent&quot;&gt;hoverEnterEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#hoverMoveEvent&quot;&gt;hoverMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#hoverLeaveEvent&quot;&gt;hoverLeaveEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;keyPressEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;keyReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsitem#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;().</source>
          <target state="translated">この仮想関数は、このアイテムへのイベントを受け取ります。この関数を再実装して、特殊なイベントハンドラー&lt;a href=&quot;qgraphicsitem#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;focusInEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;focusOutEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#hoverEnterEvent&quot;&gt;hoverEnterEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#hoverMoveEvent&quot;&gt;hoverMoveEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#hoverLeaveEvent&quot;&gt;hoverLeaveEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;keyPressEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;keyReleaseEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;（）にディスパッチされる前にイベントをインターセプトします、&lt;a href=&quot;qgraphicsitem#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;（）、および&lt;a href=&quot;qgraphicsitem#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="c1c583bba7e245e22af676c919ca81689f423067" translate="yes" xml:space="preserve">
          <source>This virtual function returns &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt; if</source>
          <target state="translated">この仮想関数は、次の場合に&lt;a href=&quot;qvalidator#State-enum&quot;&gt;無効を&lt;/a&gt;返します</target>
        </trans-unit>
        <trans-unit id="7556dfdcb4dc09b27eebe4c90d8139deb15c5b8b" translate="yes" xml:space="preserve">
          <source>This virtual function returns a shape representing the area where this item is opaque. An area is opaque if it is filled using an opaque brush or color (i.e., not transparent).</source>
          <target state="translated">この仮想関数は、 この項目が不透明である領域を表す図形を返します。不透明なブラシや色を使用して塗りつぶされている場合(つまり透明ではない場合)は不透明となります。</target>
        </trans-unit>
        <trans-unit id="5dd7ada00be4c60522221343cb17a5be2c783e4e" translate="yes" xml:space="preserve">
          <source>This virtual function returns the linear interpolation between variants</source>
          <target state="translated">この仮想関数は、バリアント間の線形補間を返します。</target>
        </trans-unit>
        <trans-unit id="2c6b16ff1b43a04f8a3703c5feb07b19d379cbc0" translate="yes" xml:space="preserve">
          <source>This virtual function sets the geometry of the &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; to</source>
          <target state="translated">この仮想関数は、ジオメトリのセット&lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt;にします</target>
        </trans-unit>
        <trans-unit id="9f1c4758810e6eec4fb7cc58134afca0db174f3f" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after a new item was added or inserted at position</source>
          <target state="translated">この仮想ハンドラは、新しいアイテムが追加または挿入された後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c13b944c5ab2c6654337265f9d9c7b8cf7c64503" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after a new tab was added or inserted at position</source>
          <target state="translated">この仮想ハンドラは、新しいタブが位置</target>
        </trans-unit>
        <trans-unit id="5cb5fad9529e2351ea0bebb9724c997310c17fca" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after a tab was removed from position</source>
          <target state="translated">この仮想ハンドラは、タブが位置から削除された後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f74c88ee9bf748fe1f354277472491f4a0065832" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after an item was removed from position</source>
          <target state="translated">この仮想ハンドラは、アイテムが位置から削除された後に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3a74d3fa9528aae922df538bdd47a6afa5d004e7" translate="yes" xml:space="preserve">
          <source>This virtual handler is called when &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;setChecked&lt;/a&gt;() is used, unless it is called from within &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;(). It allows subclasses to reset their intermediate button states.</source>
          <target state="translated">ときに、この仮想ハンドラが呼び出され&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;setChecked&lt;/a&gt;それは内から呼び出されていない限り、使用されている（）&lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;（）。サブクラスが中間ボタンの状態をリセットできるようにします。</target>
        </trans-unit>
        <trans-unit id="61ea2758e02fe95cb122a8c0c636f7e8e83e947d" translate="yes" xml:space="preserve">
          <source>This virtual handler is called when a button is clicked. The default implementation calls &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;setChecked&lt;/a&gt;(!&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;()) if the button &lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;isCheckable&lt;/a&gt;(). It allows subclasses to implement intermediate button states.</source>
          <target state="translated">この仮想ハンドラは、ボタンがクリックされたときに呼び出されます。デフォルトの実装では、ボタンが&lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;isCheckable&lt;/a&gt;（）の場合、&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;setChecked&lt;/a&gt;（！&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;（））を呼び出します。サブクラスが中間ボタンの状態を実装できるようにします。</target>
        </trans-unit>
        <trans-unit id="4754c9d8af8e9d83b1008e6455ca40b8b5c202d0" translate="yes" xml:space="preserve">
          <source>This virtual handler is called when the scroll bars are moved by</source>
          <target state="translated">この仮想ハンドラは、スクロールバーが</target>
        </trans-unit>
        <trans-unit id="ccc57a8b2847f964748b51b0f38ae760039cd6cb" translate="yes" xml:space="preserve">
          <source>This virtual handler is called whenever the tab layout changes.</source>
          <target state="translated">この仮想ハンドラは、タブのレイアウトが変更されるたびに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="ac4cbaf1280a5ea681a8d5f11aa2483deb189e68" translate="yes" xml:space="preserve">
          <source>This virtual method is provided as a callback to allow re-binding a target frame buffer object or context when different &lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt; instances are issuing draw calls alternately.</source>
          <target state="translated">この仮想メソッドは、異なる&lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt;インスタンスが描画呼び出しを交互に発行しているときにターゲットフレームバッファーオブジェクトまたはコンテキストを再バインドできるようにするコールバックとして提供されます。</target>
        </trans-unit>
        <trans-unit id="e0d164bea92aeb9b50de5f40b66c7436a8591859" translate="yes" xml:space="preserve">
          <source>This virtual method is provided to enable overriding the behavior of &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;(). &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;() is a public wrapper for this method.</source>
          <target state="translated">この仮想メソッドは、&lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;（）の動作をオーバーライドできるようにするために提供されています。&lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;（）は、このメソッドのパブリックラッパーです。</target>
        </trans-unit>
        <trans-unit id="6b607e31416c963de8ce7086970eb04b7f742ca2" translate="yes" xml:space="preserve">
          <source>This virtual method is provided to enable overriding the behavior of &lt;a href=&quot;qnetworkreply#setSslConfiguration&quot;&gt;setSslConfiguration&lt;/a&gt;(). &lt;a href=&quot;qnetworkreply#setSslConfiguration&quot;&gt;setSslConfiguration&lt;/a&gt;() is a public wrapper for this method. If you override this method use</source>
          <target state="translated">この仮想メソッドは、&lt;a href=&quot;qnetworkreply#setSslConfiguration&quot;&gt;setSslConfiguration&lt;/a&gt;（）の動作をオーバーライドできるようにするために提供されています。&lt;a href=&quot;qnetworkreply#setSslConfiguration&quot;&gt;setSslConfiguration&lt;/a&gt;（）は、このメソッドのパブリックラッパーです。このメソッドをオーバーライドする場合は、</target>
        </trans-unit>
        <trans-unit id="ec7a780397dcfd2b9843b16c0bb60185e881a240" translate="yes" xml:space="preserve">
          <source>This virtual method is provided to enable overriding the behavior of &lt;a href=&quot;qnetworkreply#sslConfiguration&quot;&gt;sslConfiguration&lt;/a&gt;(). &lt;a href=&quot;qnetworkreply#sslConfiguration&quot;&gt;sslConfiguration&lt;/a&gt;() is a public wrapper for this method. The configuration will be returned in</source>
          <target state="translated">この仮想メソッドは、&lt;a href=&quot;qnetworkreply#sslConfiguration&quot;&gt;sslConfiguration&lt;/a&gt;（）の動作をオーバーライドできるようにするために提供されています。&lt;a href=&quot;qnetworkreply#sslConfiguration&quot;&gt;sslConfiguration&lt;/a&gt;（）は、このメソッドのパブリックラッパーです。構成は返されます</target>
        </trans-unit>
        <trans-unit id="6e1614259ee5b679f75a12c05ebe2c54fbc77260" translate="yes" xml:space="preserve">
          <source>This way the service will start in the same process as &lt;code&gt;QtActivity&lt;/code&gt;, which allows you to use native C++ calls from Java code. You can run it in a separate process but that way you cannot use any native calls for communication because the Qt libraries are not loaded for that process. To run on separate process, add this to the service tag:</source>
          <target state="translated">このようにして、サービスは &lt;code&gt;QtActivity&lt;/code&gt; と同じプロセスで開始されます。これにより、JavaコードからのネイティブC ++呼び出しを使用できます。別のプロセスで実行できますが、そのプロセスではQtライブラリがロードされていないため、通信にネイティブ呼び出しを使用できません。別のプロセスで実行するには、これをサービスタグに追加します。</target>
        </trans-unit>
        <trans-unit id="3ab2cc0db50331c8618146101da3c2a5fe2d3d2e" translate="yes" xml:space="preserve">
          <source>This widget lets the user choose a &lt;a href=&quot;qkeysequence&quot;&gt;QKeySequence&lt;/a&gt;, which is usually used as a shortcut. The recording is initiated when the widget receives the focus and ends one second after the user releases the last key.</source>
          <target state="translated">このウィジェットを使用すると、通常はショートカットとして使用される&lt;a href=&quot;qkeysequence&quot;&gt;QKeySequenceを&lt;/a&gt;選択できます。ウィジェットがフォーカスを受け取ったときに記録が開始され、ユーザーが最後のキーを離してから1秒後に記録が終了します。</target>
        </trans-unit>
        <trans-unit id="75ed49118d938284114a599ababeab8020814f1f" translate="yes" xml:space="preserve">
          <source>This widget must enable focus setting in order to get the keyboard input focus, i.e. it must call &lt;a href=&quot;qwidget#focusPolicy-prop&quot;&gt;setFocusPolicy&lt;/a&gt;().</source>
          <target state="translated">このウィジェットは、キーボード入力フォーカスを取得するためにフォーカス設定を有効にする必要があります。つまり、&lt;a href=&quot;qwidget#focusPolicy-prop&quot;&gt;setFocusPolicy&lt;/a&gt;（）を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="036036620494ee25eed6da897cd5436c1c63f3c7" translate="yes" xml:space="preserve">
          <source>This widget receives all keyboard events until &lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt;() is called; other widgets get no keyboard events at all. Mouse events are not affected. Use &lt;a href=&quot;qwidget#grabMouse&quot;&gt;grabMouse&lt;/a&gt;() if you want to grab that.</source>
          <target state="translated">このウィジェットは、&lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt;（）が呼び出されるまで、すべてのキーボードイベントを受け取ります。他のウィジェットはキーボードイベントをまったく受け取りません。マウスイベントは影響を受けません。それを取得したい場合は、&lt;a href=&quot;qwidget#grabMouse&quot;&gt;grabMouse&lt;/a&gt;（）を使用してください。</target>
        </trans-unit>
        <trans-unit id="9363f96107b01677909803495e64bc5811ff7cea" translate="yes" xml:space="preserve">
          <source>This widget receives all mouse events until &lt;a href=&quot;qwidget#releaseMouse&quot;&gt;releaseMouse&lt;/a&gt;() is called; other widgets get no mouse events at all. Keyboard events are not affected. Use &lt;a href=&quot;qwidget#grabKeyboard&quot;&gt;grabKeyboard&lt;/a&gt;() if you want to grab that.</source>
          <target state="translated">このウィジェットは、&lt;a href=&quot;qwidget#releaseMouse&quot;&gt;releaseMouse&lt;/a&gt;（）が呼び出されるまですべてのマウスイベントを受け取ります。他のウィジェットはマウスイベントをまったく受け取りません。キーボードイベントは影響を受けません。それを取得したい場合は、&lt;a href=&quot;qwidget#grabKeyboard&quot;&gt;grabKeyboard&lt;/a&gt;（）を使用してください。</target>
        </trans-unit>
        <trans-unit id="ea3a8670981c22b971d10d95378de37a75441210" translate="yes" xml:space="preserve">
          <source>This widget works like the standard Windows resize handle. In the X11 version this resize handle generally works differently from the one provided by the system if the X11 window manager does not support necessary modern post-ICCCM specifications.</source>
          <target state="translated">このウィジェットは、標準のWindowsリサイズハンドルのように動作します。X11バージョンでは、X11ウィンドウマネージャが必要な最新のポストICCCM仕様をサポートしていない場合、このリサイズハンドルはシステムによって提供されたものとは異なります。</target>
        </trans-unit>
        <trans-unit id="dfedc7e87c2f263e8e0a388ac84b0e6bf71afc7f" translate="yes" xml:space="preserve">
          <source>This will access the &lt;code&gt;title&lt;/code&gt; value for the first item in the model:</source>
          <target state="translated">これはモデルの最初のアイテムの &lt;code&gt;title&lt;/code&gt; 値にアクセスします：</target>
        </trans-unit>
        <trans-unit id="4e147857bbca4b81d17023b8d837054f64b38fc6" translate="yes" xml:space="preserve">
          <source>This will again control which item gets resized when the user drags a handle, and which handle gets hidden when an item is told to hide.</source>
          <target state="translated">これにより、ユーザーがハンドルをドラッグしたときにどのアイテムがリサイズされ、アイテムを隠すように言われたときにどのハンドルが非表示になるかを再び制御することができます。</target>
        </trans-unit>
        <trans-unit id="b132deae3408b0cb56f26c8ee9a3dccb4f891de5" translate="yes" xml:space="preserve">
          <source>This will allow for better interoperability between &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; and friends and STL-style algorithms.</source>
          <target state="translated">これにより、&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;、&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;などと、STLスタイルのアルゴリズムとの相互運用性が向上します。</target>
        </trans-unit>
        <trans-unit id="277bf4441c381bf1e386238b69f7a7da3010df7b" translate="yes" xml:space="preserve">
          <source>This will also affect copies of this &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; object.</source>
          <target state="translated">これは、この&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt;オブジェクトのコピーにも影響します。</target>
        </trans-unit>
        <trans-unit id="4fe6ff0919fbc91c77431dafc0b14ba3850b76af" translate="yes" xml:space="preserve">
          <source>This will also cause &lt;a href=&quot;qgeocodereply#error&quot;&gt;error&lt;/a&gt;() and &lt;a href=&quot;qgeocodereply#finished&quot;&gt;finished&lt;/a&gt;() signals to be emitted, in that order.</source>
          <target state="translated">これにより、&lt;a href=&quot;qgeocodereply#error&quot;&gt;エラー&lt;/a&gt;（）および&lt;a href=&quot;qgeocodereply#finished&quot;&gt;完了&lt;/a&gt;（）信号がこの順序で発行されます。</target>
        </trans-unit>
        <trans-unit id="a670a15de482ae9bf67f9d2d4ec83c8007f6dc23" translate="yes" xml:space="preserve">
          <source>This will also cause &lt;a href=&quot;qgeoroutereply#error&quot;&gt;error&lt;/a&gt;() and &lt;a href=&quot;qgeoroutereply#finished&quot;&gt;finished&lt;/a&gt;() signals to be emitted, in that order.</source>
          <target state="translated">これにより、&lt;a href=&quot;qgeoroutereply#error&quot;&gt;エラー&lt;/a&gt;（）および&lt;a href=&quot;qgeoroutereply#finished&quot;&gt;完了&lt;/a&gt;（）信号がこの順序で発行されます。</target>
        </trans-unit>
        <trans-unit id="7edec0ff2c95f8d70dd606f22c875d2e07bde3eb" translate="yes" xml:space="preserve">
          <source>This will append the following declaration to the translation file, where you can fill in either &quot;LTR&quot; or &quot;RTL&quot; as the translation for the locale.</source>
          <target state="translated">これにより、以下の宣言が翻訳ファイルに追加され、ロケールの翻訳として &quot;LTR&quot; か &quot;RTL&quot; のどちらかを記入することができます。</target>
        </trans-unit>
        <trans-unit id="15cc4de4c05eb938c588c9bfca1d469be2683ecf" translate="yes" xml:space="preserve">
          <source>This will be &lt;code&gt;1.0&lt;/code&gt; on cameras that do not support digital zoom.</source>
          <target state="translated">デジタルズームをサポートしていないカメラでは、これは &lt;code&gt;1.0&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="615c3954135cb391fa54891e740c07fdd3420a6f" translate="yes" xml:space="preserve">
          <source>This will be &lt;code&gt;1.0&lt;/code&gt; on cameras that do not support optical zoom.</source>
          <target state="translated">これは、光学ズームをサポートしていないカメラでは &lt;code&gt;1.0&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="1b0e707ab24edb74218ca76138e6c8f1beb18e29" translate="yes" xml:space="preserve">
          <source>This will be done in &lt;a href=&quot;qml-qt-labs-wavefrontmesh-wavefrontmesh&quot;&gt;WavefrontMesh&lt;/a&gt; by an orthographic projection onto an appropriate plane.</source>
          <target state="translated">これは、適切な平面への正投影によって&lt;a href=&quot;qml-qt-labs-wavefrontmesh-wavefrontmesh&quot;&gt;WavefrontMesh&lt;/a&gt;で行われます。</target>
        </trans-unit>
        <trans-unit id="c7cf2d5498481f0813874f118399dc67d50132a7" translate="yes" xml:space="preserve">
          <source>This will be the screen where QWindows are initially shown, unless otherwise specified.</source>
          <target state="translated">特に指定がない限り、QWindowsが最初に表示される画面になります。</target>
        </trans-unit>
        <trans-unit id="899c4b4536bdc80cc6987168fbe983bb79e19294" translate="yes" xml:space="preserve">
          <source>This will capture the text from the first set of capturing parentheses (counting capturing left parentheses from left to right). The parentheses are counted from 1 since cap(0) is the whole matched regexp (equivalent to '&amp;amp;' in most regexp engines).</source>
          <target state="translated">これは、キャプチャ括弧の最初のセットからテキストをキャプチャします（左括弧を左から右にキャプチャすることを数えます）。cap（0）は一致する正規表現全体であるため、括弧は1からカウントされます（ほとんどの正規表現エンジンでは「＆」に相当）。</target>
        </trans-unit>
        <trans-unit id="856c9ae28d54a18becaec5f4a1937d44845114db" translate="yes" xml:space="preserve">
          <source>This will cause &lt;a href=&quot;qprintpreviewwidget&quot;&gt;QPrintPreviewWidget&lt;/a&gt; to create an internal, default constructed &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, which will be used to generate the preview.</source>
          <target state="translated">これにより、&lt;a href=&quot;qprintpreviewwidget&quot;&gt;QPrintPreviewWidget&lt;/a&gt;がデフォルトの内部構築&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;オブジェクトを作成し、プレビューの生成に使用されます。</target>
        </trans-unit>
        <trans-unit id="b3160cd4e74611023a70f0bafe1e1d0bbf569861" translate="yes" xml:space="preserve">
          <source>This will cause QPrintPreviewWidget to create an internal, default constructed &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, which will be used to generate the preview.</source>
          <target state="translated">これにより、QPrintPreviewWidgetは、プレビューの生成に使用される内部のデフォルトで構築された&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="8eddf8b5010dba06228708f8215a7d9f12343e8c" translate="yes" xml:space="preserve">
          <source>This will cause an index file called &lt;code&gt;qtcreator.index&lt;/code&gt; to be created.</source>
          <target state="translated">これにより、 &lt;code&gt;qtcreator.index&lt;/code&gt; というインデックスファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="d7a60b9ad21421adcb796649a9b195787e0c1119" translate="yes" xml:space="preserve">
          <source>This will cause any QML which attempts to use the &quot;Game&quot; type to produce an error message:</source>
          <target state="translated">これにより、&quot;Game &quot;型を使用しようとする全てのQMLでエラーメッセージが表示されるようになります。</target>
        </trans-unit>
        <trans-unit id="5e5182bb265c9238ab5299fe49ce30ec2c80bfcf" translate="yes" xml:space="preserve">
          <source>This will cause any QML which imports the &quot;MinehuntCore&quot; type namespace and attempts to use the type to produce an error message:</source>
          <target state="translated">これにより、&quot;MinehuntCore&quot; 型の名前空間をインポートした QML で、その型を使おうとするとエラーメッセージが表示されるようになります。</target>
        </trans-unit>
        <trans-unit id="d423d949fdcbcb72b1e3e5fb713515ad7f4a437d" translate="yes" xml:space="preserve">
          <source>This will center the widget on the page and scale it so that it fits the page.</source>
          <target state="translated">これにより、ウィジェットがページ上で中央に配置され、ページにフィットするように拡大縮小されます。</target>
        </trans-unit>
        <trans-unit id="de7faa4633ecd7c8cd9691cfbb247b4c45975a0f" translate="yes" xml:space="preserve">
          <source>This will create a global variable called &lt;code&gt;myObject&lt;/code&gt; in the script environment. The variable serves as a proxy to the underlying C++ object. Note that the name of the script variable can be anything; i.e., it is not dependent upon &lt;a href=&quot;qobject#objectName-prop&quot;&gt;QObject::objectName&lt;/a&gt;().</source>
          <target state="translated">これにより、スクリプト環境に &lt;code&gt;myObject&lt;/code&gt; というグローバル変数が作成されます。変数は、基になるC ++オブジェクトへのプロキシとして機能します。スクリプト変数の名前は何でもかまいません。つまり、&lt;a href=&quot;qobject#objectName-prop&quot;&gt;QObject :: objectName&lt;/a&gt;（）には依存しません。</target>
        </trans-unit>
        <trans-unit id="8f2ae01b624ecf2b4a4c21845e84539e20e8462a" translate="yes" xml:space="preserve">
          <source>This will create an internal &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, which will use the system default printer.</source>
          <target state="translated">これにより、システムのデフォルトプリンターを使用する内部&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;オブジェクトが作成されます。</target>
        </trans-unit>
        <trans-unit id="677aae3d07bcdd8367ec284c0045d6e3e4b3c1cc" translate="yes" xml:space="preserve">
          <source>This will do nothing if the reply is finished.</source>
          <target state="translated">これでは返信が終わっても何もできません。</target>
        </trans-unit>
        <trans-unit id="2d628a39e0927171621f656bb464c0262f36c69d" translate="yes" xml:space="preserve">
          <source>This will emit &lt;a href=&quot;qwebengineprofile#downloadRequested&quot;&gt;QWebEngineProfile::downloadRequested&lt;/a&gt;() after the download has started.</source>
          <target state="translated">これは、ダウンロードの開始後に&lt;a href=&quot;qwebengineprofile#downloadRequested&quot;&gt;QWebEngineProfile :: downloadRequested&lt;/a&gt;（）を発行します。</target>
        </trans-unit>
        <trans-unit id="284694b874ffcc3b4d4793bffcb0c036695d5a87" translate="yes" xml:space="preserve">
          <source>This will enable proper sorting of numeric digits, so that e.g. 100 sorts after 99.</source>
          <target state="translated">これにより、例えば100は99の後にソートされるように、数字の適切なソートが可能になります。</target>
        </trans-unit>
        <trans-unit id="9d8ca382dadb24c447f301b2d3d6ecfa8cfd0d41" translate="yes" xml:space="preserve">
          <source>This will export &lt;code&gt;MyWidget&lt;/code&gt; and &lt;code&gt;MyWidget2&lt;/code&gt; as COM objects that can be created by COM clients, and will register &lt;code&gt;MySubType&lt;/code&gt; as a type that can be used in properties and parameters of &lt;code&gt;MyWidget&lt;/code&gt; and &lt;code&gt;MyWidget2&lt;/code&gt;.</source>
          <target state="translated">これは、エクスポートします &lt;code&gt;MyWidget&lt;/code&gt; と &lt;code&gt;MyWidget2&lt;/code&gt; を COMクライアントによって作成することができCOMオブジェクトとして、および登録します &lt;code&gt;MySubType&lt;/code&gt; のプロパティとのパラメータで使用することができるタイプとして &lt;code&gt;MyWidget&lt;/code&gt; と &lt;code&gt;MyWidget2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f89d394dc550923959a6d1b528accb7b2f6bea7f" translate="yes" xml:space="preserve">
          <source>This will flip the x and y dimensions of the rectangle</source>
          <target state="translated">これは、矩形の x と y の寸法を反転させます。</target>
        </trans-unit>
        <trans-unit id="476ebdd5ba4112aee7ca44cd4e1658e370f4f291" translate="yes" xml:space="preserve">
          <source>This will force cookies and HTTP cache to be in memory, but also force all other normally persistent data to be stored in memory.</source>
          <target state="translated">これにより、クッキーとHTTPキャッシュは強制的にメモリに格納されますが、その他の通常は永続的なデータも強制的にメモリに格納されます。</target>
        </trans-unit>
        <trans-unit id="849bc2e76dd7e86f7415f233f4a11d51ff0cdb4f" translate="yes" xml:space="preserve">
          <source>This will generate a &quot;tap&quot; event with the map contents available in _event.data inside the state machine. In QML:</source>
          <target state="translated">これにより、ステートマシン内の _event.data にあるマップの内容が利用可能な tap イベントが生成されます。QMLでは</target>
        </trans-unit>
        <trans-unit id="6c3db3de14b51d84ccd920cbf22752590b083ac0" translate="yes" xml:space="preserve">
          <source>This will give the full screen window a 1-pixel border, thus enabling the other top level windows to appear on top.</source>
          <target state="translated">これにより、フルスクリーンウィンドウに1ピクセルの境界線が与えられ、他のトップレベルウィンドウが上に表示されるようになります。</target>
        </trans-unit>
        <trans-unit id="0a45f037699a619d5874d66b5c257e05eff5bf38" translate="yes" xml:space="preserve">
          <source>This will give us a 200 x 200 square area, with the origin (0, 0) in the center, that we can draw on. What we draw will show up in the largest possible square that will fit in the widget.</source>
          <target state="translated">これにより、原点 (0,0)を中心とした 200 x 200 の正方形の領域に描画することができます。描画したものは、ウィジェットに収まる最大の正方形に表示されます。</target>
        </trans-unit>
        <trans-unit id="df547cf209710a4977a4bb9f85cd2acc6a37adda" translate="yes" xml:space="preserve">
          <source>This will include the &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; class in the &lt;code&gt;io&lt;/code&gt; group, which means, for example, that &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; will appear on the list created by calling the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#group-command&quot;&gt;\group&lt;/a&gt; command with the &lt;code&gt;io&lt;/code&gt; argument.</source>
          <target state="translated">これには、 &lt;code&gt;io&lt;/code&gt; グループに&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt;クラスが含まれます。これは、たとえば、&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt;が &lt;code&gt;io&lt;/code&gt; 引数を指定して&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#group-command&quot;&gt;\ group&lt;/a&gt;コマンドを呼び出して作成されたリストに表示されることを意味します。</target>
        </trans-unit>
        <trans-unit id="16a1b519da91ff6f5007923d3388da24353ab323" translate="yes" xml:space="preserve">
          <source>This will include the &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; class in the &lt;code&gt;io&lt;/code&gt; group, which means, for example, that &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; will appear on the list created by calling the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#group-command&quot;&gt;\group&lt;/a&gt; command with the &lt;code&gt;io&lt;/code&gt; argument.</source>
          <target state="translated">これには、 &lt;code&gt;io&lt;/code&gt; グループに&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt;クラスが含まれます。つまり、たとえば、 &lt;code&gt;io&lt;/code&gt; 引数を指定して&lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#group-command&quot;&gt;\ group&lt;/a&gt;コマンドを呼び出して作成されたリストに&lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt;が表示されます。</target>
        </trans-unit>
        <trans-unit id="70f61a6a0cf375c2bc778adc26ea837b44488576" translate="yes" xml:space="preserve">
          <source>This will invalidate the choice of previous configurations.</source>
          <target state="translated">これにより、以前の設定の選択が無効になります。</target>
        </trans-unit>
        <trans-unit id="389d5b2be3bfaad066fdc3c8ef80d24fecb5ddbb" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(-1)</source>
          <target state="translated">これにより、&lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;（-1）が呼び出されます</target>
        </trans-unit>
        <trans-unit id="8436917bc6ee82fe226655c22fd15c9c2b2b3d0b" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(-10)</source>
          <target state="translated">これにより、&lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;（-10）が呼び出されます</target>
        </trans-unit>
        <trans-unit id="4da02021c15eeaca6215b4496509614b8d7b5c9c" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(1)</source>
          <target state="translated">これにより、&lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;（1）が呼び出されます</target>
        </trans-unit>
        <trans-unit id="27bc2ec02f3e6bd4d3ebd42f03e6e9b5ca137d08" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(10)</source>
          <target state="translated">これにより、&lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;（10）が呼び出されます</target>
        </trans-unit>
        <trans-unit id="9c361f955cbee070b6e115d654627f5e0f1fd81d" translate="yes" xml:space="preserve">
          <source>This will override the default size constraints set by &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;.</source>
          <target state="translated">これは&lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;によって設定されたデフォルトのサイズ制約をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="20ef2e3442f082330a6b8fd9a80dec814f03c190" translate="yes" xml:space="preserve">
          <source>This will reinterpret the text and emit a signal even if the value has not changed since last time a signal was emitted.</source>
          <target state="translated">前回シグナルを出してから値が変わっていなくても、テキストを再解釈してシグナルを出します。</target>
        </trans-unit>
        <trans-unit id="845b3953fb337f3c791fef08bf856268c771984c" translate="yes" xml:space="preserve">
          <source>This will release any system resources used and free any buffers.</source>
          <target state="translated">これにより、使用されているシステムリソースが解放され、バッファが解放されます。</target>
        </trans-unit>
        <trans-unit id="d7090cff90aff46e9c484b6ef6282e925fe44b8f" translate="yes" xml:space="preserve">
          <source>This will repeat the loop continuously until it is explicitly stopped.</source>
          <target state="translated">これは、明示的に停止するまでループを連続的に繰り返します。</target>
        </trans-unit>
        <trans-unit id="57ad79594adc71c1c87b8b8bb8b09093f27f11a0" translate="yes" xml:space="preserve">
          <source>This will reset the &lt;a href=&quot;qvideosurfaceformat#viewport&quot;&gt;viewport&lt;/a&gt;() to fill the entire frame.</source>
          <target state="translated">これにより、&lt;a href=&quot;qvideosurfaceformat#viewport&quot;&gt;ビューポート&lt;/a&gt;（）がフレーム全体にリセットされます。</target>
        </trans-unit>
        <trans-unit id="ccd74e262e785f0cf32b709f41874ce3db5439b8" translate="yes" xml:space="preserve">
          <source>This will result in pressed only being &lt;code&gt;true&lt;/code&gt; upon mouse presses.</source>
          <target state="translated">これにより、マウスが押されたときにのみ押された状態になり &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ebc32d9cdc98bf929f6a2e73f3ee0282e561e1a6" translate="yes" xml:space="preserve">
          <source>This will result in:</source>
          <target state="translated">という結果になります。</target>
        </trans-unit>
        <trans-unit id="24a36dddc522a3a3d2d645de49905bc771f9a887" translate="yes" xml:space="preserve">
          <source>This will revert any pending changes.</source>
          <target state="translated">保留中の変更を元に戻します。</target>
        </trans-unit>
        <trans-unit id="9ded94c11b3ce6c1de1ac4fda1deb463e30df170" translate="yes" xml:space="preserve">
          <source>This will run</source>
          <target state="translated">これが実行されます。</target>
        </trans-unit>
        <trans-unit id="2ff457f1b772bc1df9980caf6f0cbe131da80368" translate="yes" xml:space="preserve">
          <source>This will set the amplitude of the bounce or the amplitude of the elastic &quot;spring&quot; effect. The higher the number, the higher the amplitude.</source>
          <target state="translated">これにより、跳ね返りの振幅、または弾性的な「バネ」効果の振幅が設定されます。数字が大きいほど振幅が大きくなります。</target>
        </trans-unit>
        <trans-unit id="a3a446d026f83a835d044b6af3bc71dd0978adb1" translate="yes" xml:space="preserve">
          <source>This will set the value of three settings:</source>
          <target state="translated">これで3つの設定値を設定します。</target>
        </trans-unit>
        <trans-unit id="7a81034d89ae405983d2a1a4a25f9f1cce863436" translate="yes" xml:space="preserve">
          <source>This will start recording if the format specified is supported by the input device (you can check this with &lt;a href=&quot;qaudiodeviceinfo#isFormatSupported&quot;&gt;QAudioDeviceInfo::isFormatSupported&lt;/a&gt;(). In case there are any snags, use the &lt;a href=&quot;qaudioinput#error&quot;&gt;error&lt;/a&gt;() function to check what went wrong. We stop recording in the &lt;code&gt;stopRecording()&lt;/code&gt; slot.</source>
          <target state="translated">指定されたフォーマットが入力デバイスでサポートされている場合、これにより記録が開始されます（これは&lt;a href=&quot;qaudiodeviceinfo#isFormatSupported&quot;&gt;QAudioDeviceInfo :: isFormatSupported&lt;/a&gt;（で確認できます）。&lt;a href=&quot;qaudioinput#error&quot;&gt;障害が発生した&lt;/a&gt;場合は、エラー（）関数を使用して問題を確認します。 &lt;code&gt;stopRecording()&lt;/code&gt; スロット。</target>
        </trans-unit>
        <trans-unit id="956453e02e41fb5d6b3c94178c58d8a36f4a874d" translate="yes" xml:space="preserve">
          <source>This will tell qmake to run</source>
          <target state="translated">これは qmake に</target>
        </trans-unit>
        <trans-unit id="aefdda8426346ec46e84446c33d4416b4b120470" translate="yes" xml:space="preserve">
          <source>This works with both modules, and will reduce the amount of work needed when the migration begins.</source>
          <target state="translated">これは両方のモジュールで動作し、移行開始時に必要な作業量を減らすことができます。</target>
        </trans-unit>
        <trans-unit id="b1aa3f4e65b25c9f69327542e78e4599fe389cae" translate="yes" xml:space="preserve">
          <source>This would (internally) create a node in proxyNode, which (again internally/automatically) connects to the provided registry (given by the</source>
          <target state="translated">これは(内部的に)proxyNodeの中にノードを作成し、そのノードは(再び内部的に/自動的に)提供されたレジストリに接続します。</target>
        </trans-unit>
        <trans-unit id="4de5e94cd5685a66ff56c70c4c29bb8837caf719" translate="yes" xml:space="preserve">
          <source>This would generate the following files:</source>
          <target state="translated">これにより、以下のファイルが生成されます。</target>
        </trans-unit>
        <trans-unit id="19862f15a89457ba93c92d6e0cde7f15acb20987" translate="yes" xml:space="preserve">
          <source>This would result in an error, since objects can only be dynamically destroyed if they were dynamically created.</source>
          <target state="translated">これは、オブジェクトが動的に作成された場合にのみ動的に破壊されるため、エラーになります。</target>
        </trans-unit>
        <trans-unit id="6d8e710aec27ae55326fe38bc95b8a3eabc55f60" translate="yes" xml:space="preserve">
          <source>This would result in the following tags:</source>
          <target state="translated">その結果、以下のようなタグが表示されることになります。</target>
        </trans-unit>
        <trans-unit id="80c28aedd68e139003aba62e14864b48b10d1c08" translate="yes" xml:space="preserve">
          <source>This wrapper class can now be used in .NET code, e.g. using C++, C#, Visual Basic or any other programming language available for .NET.</source>
          <target state="translated">このラッパークラスは、C++、C#、Visual Basic、または.NETで利用可能な他のプログラミング言語を使用するなど、.NETコードで使用することができるようになりました。</target>
        </trans-unit>
        <trans-unit id="20b4e9fb6e2f48f97b31b3d601865802f6c5439a" translate="yes" xml:space="preserve">
          <source>This zone is being used for autofocusing and is currently in focus.</source>
          <target state="translated">このゾーンはオートフォーカスで使用されており、現在はピントが合っています。</target>
        </trans-unit>
        <trans-unit id="f52a4a83dce0236375fe5434f42943fb5b4a77a6" translate="yes" xml:space="preserve">
          <source>This zone is currently being used for autofocusing, but is not in focus.</source>
          <target state="translated">このゾーンは現在オートフォーカスに使用されていますが、ピントが合っていません。</target>
        </trans-unit>
        <trans-unit id="26914f45ba244bd2884905f8fd0fe2f008f89a9f" translate="yes" xml:space="preserve">
          <source>This zone is not valid</source>
          <target state="translated">このゾーンは有効ではありません。</target>
        </trans-unit>
        <trans-unit id="b1f45588e59d57b8bdeae181abab634c1e924d72" translate="yes" xml:space="preserve">
          <source>This zone may be used for autofocusing, but is not currently.</source>
          <target state="translated">このゾーンはオートフォーカスに使用される可能性がありますが、現在は使用されていません。</target>
        </trans-unit>
        <trans-unit id="0447f3617fd9349cab495e45c9c74400e68aa2e5" translate="yes" xml:space="preserve">
          <source>Those character classes only match ASCII characters by default when using &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;: for instance, &lt;code&gt;\d&lt;/code&gt; matches exactly a character in the &lt;code&gt;0-9&lt;/code&gt; ASCII range. It is possible to change this behaviour by using the &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;UseUnicodePropertiesOption&lt;/a&gt; pattern option.</source>
          <target state="translated">&lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;を使用する場合、これらの文字クラスはデフォルトでASCII文字にのみ一致します。たとえば、 &lt;code&gt;\d&lt;/code&gt; は &lt;code&gt;0-9&lt;/code&gt; ASCII範囲の文字に完全に一致します。&lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;UseUnicodePropertiesOption&lt;/a&gt;パターンオプションを使用すると、この動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="3039e2d9723e76d138399f7b3652084646bf28a5" translate="yes" xml:space="preserve">
          <source>Those character classes only match ASCII characters by default when using QRegularExpression: for instance, &lt;code&gt;\d&lt;/code&gt; matches exactly a character in the &lt;code&gt;0-9&lt;/code&gt; ASCII range. It is possible to change this behaviour by using the &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;UseUnicodePropertiesOption&lt;/a&gt; pattern option.</source>
          <target state="translated">QRegularExpressionを使用する場合、これらの文字クラスはデフォルトでASCII文字にのみ一致します。たとえば、 &lt;code&gt;\d&lt;/code&gt; は &lt;code&gt;0-9&lt;/code&gt; ASCII範囲の文字に正確に一致します。&lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;UseUnicodePropertiesOption&lt;/a&gt;パターンオプションを使用して、この動作を変更することができます。</target>
        </trans-unit>
        <trans-unit id="2d97e8e200de5c4db6f0251368b8ba8cb97a9434" translate="yes" xml:space="preserve">
          <source>Those classes that wrap creatable coclasses (i.e. coclasses that are not marked as &lt;code&gt;noncreatable&lt;/code&gt;) have a default constructor; this is typically a single class of type &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">作成可能なコクラス（つまり、noncreatableとしてマークされていない &lt;code&gt;noncreatable&lt;/code&gt; ）をラップするクラスには、デフォルトのコンストラクターがあります。これは通常、 &lt;code&gt;Application&lt;/code&gt; 型の単一クラスです。</target>
        </trans-unit>
        <trans-unit id="efa77051db8332dcf6b9ce4f1bd6d9eb6c27334b" translate="yes" xml:space="preserve">
          <source>Though this assumes that the origin of the childrenRect is 0,0.</source>
          <target state="translated">ただし、これは childrenRect の原点が 0,0 であることを前提としています。</target>
        </trans-unit>
        <trans-unit id="4a85fe45efc5207d5e166f439531439a3bf96588" translate="yes" xml:space="preserve">
          <source>Thread Affinity</source>
          <target state="translated">スレッドアフィニティ</target>
        </trans-unit>
        <trans-unit id="b66b6cbe04365929e922b75680e179e46127f3a3" translate="yes" xml:space="preserve">
          <source>Thread Safety</source>
          <target state="translated">スレッドの安全性</target>
        </trans-unit>
        <trans-unit id="bd7dbb9b1d7cd43de427372cc1cad6df83f4e456" translate="yes" xml:space="preserve">
          <source>Thread Support</source>
          <target state="translated">スレッドサポート</target>
        </trans-unit>
        <trans-unit id="b8803d3e5c78674672f989d114e22d5045772703" translate="yes" xml:space="preserve">
          <source>Thread Support in Qt</source>
          <target state="translated">Qt でのスレッドサポート</target>
        </trans-unit>
        <trans-unit id="3d8441a8e15b132b589dbea20e3462aa34aeaae1" translate="yes" xml:space="preserve">
          <source>Thread can be controlled using signals</source>
          <target state="translated">信号でスレッドを制御可能</target>
        </trans-unit>
        <trans-unit id="f5ef0f326fcc428db4fe05c11a48baaaad932f29" translate="yes" xml:space="preserve">
          <source>Thread can be monitored through a &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;</source>
          <target state="translated">スレッドは&lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;を通じて監視できます</target>
        </trans-unit>
        <trans-unit id="ac581572a548d642723328b1049dc4349fefc89e" translate="yes" xml:space="preserve">
          <source>Thread can receive data updates through signals</source>
          <target state="translated">スレッドは信号を介してデータの更新を受信することができます。</target>
        </trans-unit>
        <trans-unit id="4c664a16940b02b1131476bec0d5424eac148ffe" translate="yes" xml:space="preserve">
          <source>Thread can run an event loop</source>
          <target state="translated">スレッドはイベントループを実行できる</target>
        </trans-unit>
        <trans-unit id="2d4b7c38b48824028c061b2715262f748a4ed322" translate="yes" xml:space="preserve">
          <source>Thread priority can be specified</source>
          <target state="translated">スレッドの優先度を指定することができます。</target>
        </trans-unit>
        <trans-unit id="26bd4d40a8e776e33b552dabcffeb47911034ed2" translate="yes" xml:space="preserve">
          <source>Thread support is enabled. This is enabled when CONFIG includes &lt;code&gt;qt&lt;/code&gt;, which is the default.</source>
          <target state="translated">スレッドのサポートが有効になっています。これは、CONFIGにデフォルトの &lt;code&gt;qt&lt;/code&gt; が含まれている場合に有効になります。</target>
        </trans-unit>
        <trans-unit id="70472f453d318be74d62719df909f639ad359586" translate="yes" xml:space="preserve">
          <source>Thread-Safety</source>
          <target state="translated">Thread-Safety</target>
        </trans-unit>
        <trans-unit id="e48afd792893cdd980ff448874ca186e881b8310" translate="yes" xml:space="preserve">
          <source>Thread-Support in Qt Modules</source>
          <target state="translated">Qt モジュールのスレッドサポート</target>
        </trans-unit>
        <trans-unit id="2533dafc39a8884cf4d26ce3c29a2f9eb66ad89c" translate="yes" xml:space="preserve">
          <source>Threaded Render Loop (&quot;threaded&quot;)</source>
          <target state="translated">ネジ式レンダーループ(「ネジ式」)。</target>
        </trans-unit>
        <trans-unit id="ddbedcd4fc98fdc7c72b003acb15b95ed41dccdf" translate="yes" xml:space="preserve">
          <source>Threaded Rendering and Render Target</source>
          <target state="translated">スレッドレンダリングとレンダーターゲット</target>
        </trans-unit>
        <trans-unit id="5541d0b76d127f6a3c54bbc247ffcc1b6c2bbc25" translate="yes" xml:space="preserve">
          <source>Threading</source>
          <target state="translated">Threading</target>
        </trans-unit>
        <trans-unit id="835e9fd215f9dc523b754674da31ace0d2935df2" translate="yes" xml:space="preserve">
          <source>Threading Classes</source>
          <target state="translated">スレッディングクラス</target>
        </trans-unit>
        <trans-unit id="ecde27b345e48e3da056d368cb2fbb2fd1fba016" translate="yes" xml:space="preserve">
          <source>Threading and Concurrent Programming</source>
          <target state="translated">スレッディングと並行プログラミング</target>
        </trans-unit>
        <trans-unit id="a8b8bfd64ca6f976c70417c5d82b48e34cd7f3b0" translate="yes" xml:space="preserve">
          <source>Threads and QObjects</source>
          <target state="translated">スレッドと QObject</target>
        </trans-unit>
        <trans-unit id="a21891c5fcbab7a6dfbc42562aa03c56f87692e3" translate="yes" xml:space="preserve">
          <source>Threads that are unused for</source>
          <target state="translated">のために使用されていないスレッド</target>
        </trans-unit>
        <trans-unit id="9143c4b1f873358473af2611451d630715df5ca0" translate="yes" xml:space="preserve">
          <source>Threads that are unused for a certain amount of time will expire. The default expiry timeout is 30000 milliseconds (30 seconds). This can be changed using &lt;a href=&quot;qthreadpool#expiryTimeout-prop&quot;&gt;setExpiryTimeout&lt;/a&gt;(). Setting a negative expiry timeout disables the expiry mechanism.</source>
          <target state="translated">一定期間使用されていないスレッドは期限切れになります。デフォルトの有効期限タイムアウトは30000ミリ秒（30秒）です。これは、&lt;a href=&quot;qthreadpool#expiryTimeout-prop&quot;&gt;setExpiryTimeout&lt;/a&gt;（）を使用して変更できます。負の有効期限タイムアウトを設定すると、有効期限メカニズムが無効になります。</target>
        </trans-unit>
        <trans-unit id="020f75643a2a2107248c5e694479886e498821dd" translate="yes" xml:space="preserve">
          <source>Three enum values are useful in applications that can be run in right-to-left mode:</source>
          <target state="translated">3つの列挙値は、右から左のモードで実行できるアプリケーションで便利です。</target>
        </trans-unit>
        <trans-unit id="0a3b28d4d8f70ab3cb09cd00360a53b06b617f52" translate="yes" xml:space="preserve">
          <source>Three important macros are:</source>
          <target state="translated">重要なマクロは3つ。</target>
        </trans-unit>
        <trans-unit id="b43767a7f1a6f5de1ee79114a35ec5ff58e2f896" translate="yes" xml:space="preserve">
          <source>Three pixel wide pen</source>
          <target state="translated">3 ピクセル幅のペン</target>
        </trans-unit>
        <trans-unit id="7997a0ba69821008e888f473fc1b436a68ee7d19" translate="yes" xml:space="preserve">
          <source>ThresholdMask</source>
          <target state="translated">ThresholdMask</target>
        </trans-unit>
        <trans-unit id="c138a1dc1845757c354e090b07439e2866f6f3b3" translate="yes" xml:space="preserve">
          <source>ThresholdMask (QML type)</source>
          <target state="translated">ThresholdMask(QML 型</target>
        </trans-unit>
        <trans-unit id="f65bb37fb08b42169aac7fa73010536aa505f69c" translate="yes" xml:space="preserve">
          <source>ThresholdMask QML Type</source>
          <target state="translated">ThresholdMask QML 型</target>
        </trans-unit>
        <trans-unit id="02277b4b187d971bd1305669d03b9b4aad8b563b" translate="yes" xml:space="preserve">
          <source>ThresholdMask.cached</source>
          <target state="translated">ThresholdMask.cached</target>
        </trans-unit>
        <trans-unit id="f44ee4710d1c6188665391602c1fc16a4ece8479" translate="yes" xml:space="preserve">
          <source>ThresholdMask.maskSource</source>
          <target state="translated">ThresholdMask.maskSource</target>
        </trans-unit>
        <trans-unit id="6b2e176e2d1df4dbc22be451861b3396710a8aba" translate="yes" xml:space="preserve">
          <source>ThresholdMask.source</source>
          <target state="translated">ThresholdMask.source</target>
        </trans-unit>
        <trans-unit id="1d4e6841db4a51236e1a7dec0b9a62e2d04146fa" translate="yes" xml:space="preserve">
          <source>ThresholdMask.spread</source>
          <target state="translated">ThresholdMask.spread</target>
        </trans-unit>
        <trans-unit id="a463dde102e660e0113f0d6e991c44302d271c8a" translate="yes" xml:space="preserve">
          <source>ThresholdMask.threshold</source>
          <target state="translated">ThresholdMask.threshold</target>
        </trans-unit>
        <trans-unit id="a52d5f111c4afbc84e5767cebb33e27dfde4a3a8" translate="yes" xml:space="preserve">
          <source>ThresholdType : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="translated">ThresholdType：&lt;a href=&quot;qml-enumeration&quot;&gt;列挙&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c92b15f801a35369cf31e6a5edc0d98424e66bf" translate="yes" xml:space="preserve">
          <source>Throttling control is provided by the &lt;a href=&quot;qfuturewatcher#setPendingResultsLimit&quot;&gt;setPendingResultsLimit&lt;/a&gt;() function. When the number of pending &lt;a href=&quot;qfuturewatcher#resultReadyAt&quot;&gt;resultReadyAt&lt;/a&gt;() or &lt;a href=&quot;qfuturewatcher#resultsReadyAt&quot;&gt;resultsReadyAt&lt;/a&gt;() signals exceeds the limit, the computation represented by the future will be throttled automatically. The computation will resume once the number of pending signals drops below the limit.</source>
          <target state="translated">&lt;a href=&quot;qfuturewatcher#setPendingResultsLimit&quot;&gt;スロットル&lt;/a&gt;制御は、setPendingResultsLimit（）関数によって提供されます。保留中の&lt;a href=&quot;qfuturewatcher#resultReadyAt&quot;&gt;resultReadyAt&lt;/a&gt;（）または&lt;a href=&quot;qfuturewatcher#resultsReadyAt&quot;&gt;resultsReadyAt&lt;/a&gt;（）シグナルの数が制限を超えると、futureで表される計算は自動的に抑制されます。保留中の信号の数が制限を下回ると、計算が再開されます。</target>
        </trans-unit>
        <trans-unit id="4c5769c40b690a1e332cca42f1cd8b7defaece35" translate="yes" xml:space="preserve">
          <source>Through &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;, Graphics View is able to deeply integrate the client widget features including its cursors, tooltips, mouse, tablet and keyboard events, child widgets, animations, pop-ups (e.g., &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; or &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;), and the widget's input focus and activation. &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; even integrates the embedded widget's tab order so that you can tab in and out of embedded widgets. You can even embed a new &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; into your scene to provide complex nested scenes.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;、グラフィックスビューには、深くそのカーソル、ツールチップ、マウス、タブレットとキーボードのイベント、子ウィジェット、アニメーション、ポップアップ（例えば、などの機能ウィジェットクライアントに統合することができます&lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt;や&lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;）、およびウィジェットの入力フォーカスと活性化を。&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;は、埋め込みウィジェットのタブオーダーを統合しているので、埋め込みウィジェットにタブで出入りできます。新しい&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;をシーンに埋め込んで、ネストされた複雑なシーンを提供することもできます。</target>
        </trans-unit>
        <trans-unit id="002ccfbbd57d9093aaba13afbfa71b54c81f307f" translate="yes" xml:space="preserve">
          <source>Through a script engine</source>
          <target state="translated">スクリプトエンジンを介して</target>
        </trans-unit>
        <trans-unit id="dac4c6f8274f79f09bf5f3ff09e92a2beb81598a" translate="yes" xml:space="preserve">
          <source>Throughout our documentation and examples, &lt;a href=&quot;qtqml-syntax-objectattributes&quot;&gt;QML object attributes&lt;/a&gt; are always structured in the following order:</source>
          <target state="translated">ドキュメントと例全体を通して、&lt;a href=&quot;qtqml-syntax-objectattributes&quot;&gt;QMLオブジェクト属性&lt;/a&gt;は常に次の順序で構造化されています。</target>
        </trans-unit>
        <trans-unit id="d13b17b5b7778b415a2152e64b89d7afb15c57d2" translate="yes" xml:space="preserve">
          <source>Throughout the documentation, the terms</source>
          <target state="translated">ドキュメント全体を通して、以下の用語が使われています。</target>
        </trans-unit>
        <trans-unit id="b4c48fb501ba99ce70d4c3ba720bb3ac4b7d5a46" translate="yes" xml:space="preserve">
          <source>Throws a run-time error (exception) with the given</source>
          <target state="translated">与えられた</target>
        </trans-unit>
        <trans-unit id="6fc6880de4bd0dd8277032c198b6ced2641df8fa" translate="yes" xml:space="preserve">
          <source>Throws an error and sets</source>
          <target state="translated">エラーをスローして</target>
        </trans-unit>
        <trans-unit id="91fb51be98c5e0d17bdece8530009789c41d0894" translate="yes" xml:space="preserve">
          <source>ThumbnailImage</source>
          <target state="translated">ThumbnailImage</target>
        </trans-unit>
        <trans-unit id="7c0ff893241c9f24af90152047e7deb53591e5b2" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar (QML type)</source>
          <target state="translated">ThumbnailToolBar(QML型</target>
        </trans-unit>
        <trans-unit id="183375e3cb989da638012defa6030d68af15e0f5" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar QML Type</source>
          <target state="translated">ThumbnailToolBar QML型</target>
        </trans-unit>
        <trans-unit id="e69b0a3abd02f867774e1a9aff8042dd74e8dccd" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicLivePreviewRequested()</source>
          <target state="translated">ThumbnailToolBar.iconicLivePreviewRequested()</target>
        </trans-unit>
        <trans-unit id="4eaf9801ee040c5ecb2af1184d0b1a7f10e3527f" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicLivePreviewSource</source>
          <target state="translated">ThumbnailToolBar.iconicLivePreviewSource</target>
        </trans-unit>
        <trans-unit id="f4fefa332e3ed341e162dce0a5842e064a32878a" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicNotificationsEnabled</source>
          <target state="translated">ThumbnailToolBar.iconicNotificationsEnabled</target>
        </trans-unit>
        <trans-unit id="6cf36efc979b3d1b2cc6cec8ae9e856d3a5b47eb" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicThumbnailRequested()</source>
          <target state="translated">ThumbnailToolBar.iconicThumbnailRequested()</target>
        </trans-unit>
        <trans-unit id="00f7fa8e84d7c9961435267bcb49ac6832ed1bdc" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicThumbnailSource</source>
          <target state="translated">ThumbnailToolBar.iconicThumbnailSource</target>
        </trans-unit>
        <trans-unit id="12238375d9d613083f190c972e988cad147f185d" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton (QML type)</source>
          <target state="translated">ThumbnailToolButton(QML型</target>
        </trans-unit>
        <trans-unit id="8ca14b74f1402cd558556c6abdb100139afbab5c" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton QML Type</source>
          <target state="translated">ThumbnailToolButton QML 型</target>
        </trans-unit>
        <trans-unit id="b05830b2f5041e34f3da3e6a3d29c8cb74869e61" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.clicked()</source>
          <target state="translated">ThumbnailToolButton.clicked()</target>
        </trans-unit>
        <trans-unit id="3f6fbda0428229e44c933f41dead508216a6ef6e" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.dismissOnClick</source>
          <target state="translated">ThumbnailToolButton.dismissOnClick</target>
        </trans-unit>
        <trans-unit id="f2b4ca4b22686255eacdd954c4fb32e4a1d8fabf" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.enabled</source>
          <target state="translated">ThumbnailToolButton.enabled</target>
        </trans-unit>
        <trans-unit id="9a6d37c2bd18bba81aa1278f57c6b2ac7a6c6207" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.flat</source>
          <target state="translated">ThumbnailToolButton.flat</target>
        </trans-unit>
        <trans-unit id="6b7ade172f57ad2500c79d00cbcdffbaeb093e6a" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.iconSource</source>
          <target state="translated">ThumbnailToolButton.iconSource</target>
        </trans-unit>
        <trans-unit id="06540195376074f727e535ede7fd1cf7b95b0499" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.interactive</source>
          <target state="translated">ThumbnailToolButton.interactive</target>
        </trans-unit>
        <trans-unit id="e6d1533a55ddefb5e17f5a9de1f42d3b23116ff8" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.tooltip</source>
          <target state="translated">ThumbnailToolButton.tooltip</target>
        </trans-unit>
        <trans-unit id="bdb395b644cbdf8580ba24a5ed7f8f55619ac333" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.visible</source>
          <target state="translated">ThumbnailToolButton.visible</target>
        </trans-unit>
        <trans-unit id="2980e11b5d0d1dd98d00c7aac7cd7bf503584c61" translate="yes" xml:space="preserve">
          <source>Thus the string finally becomes &lt;code&gt;&quot;Hello500&quot;&lt;/code&gt;.</source>
          <target state="translated">したがって、文字列は最終的に &lt;code&gt;&quot;Hello500&quot;&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="fec10f52b29474d42bef01a882ea4e9d05317b2f" translate="yes" xml:space="preserve">
          <source>Thus, if a QML document named &quot;MyButton.qml&quot; exists, it provides the definition of the &quot;MyButton&quot; type, which may be used in a QML application.</source>
          <target state="translated">このように、MyButton.qml という名前の QML 文書が存在する場合には、QML アプリケーションで使用することができる MyButton の型の定義を提供する。</target>
        </trans-unit>
        <trans-unit id="a92156ef45f0e284e93eea70bf821593a335a365" translate="yes" xml:space="preserve">
          <source>Thus, in the &lt;a href=&quot;qtwebengine-platform-notes#macos&quot;&gt;macOS&lt;/a&gt; Hunspell case, Qt WebEngine will look in the</source>
          <target state="translated">したがって、&lt;a href=&quot;qtwebengine-platform-notes#macos&quot;&gt;macOS&lt;/a&gt; Hunspellの場合、Qt WebEngineは</target>
        </trans-unit>
        <trans-unit id="9b26b93895e58b9fe755a209aea334c49fcbd706" translate="yes" xml:space="preserve">
          <source>Thus, in the macOS Hunspell case, Qt WebEngine will look in the</source>
          <target state="translated">このように、macOSのHunspellの場合、Qt WebEngineは</target>
        </trans-unit>
        <trans-unit id="8b6a4f79c67e1c0cfc398c2295408f2eb4b88ca9" translate="yes" xml:space="preserve">
          <source>Tibetan</source>
          <target state="translated">Tibetan</target>
        </trans-unit>
        <trans-unit id="9e4207afe874af7c13c701477ed16800ec9d54b5" translate="yes" xml:space="preserve">
          <source>TickCounter</source>
          <target state="translated">TickCounter</target>
        </trans-unit>
        <trans-unit id="b78cd499da296994e464c7d76ef18bedae252f69" translate="yes" xml:space="preserve">
          <source>Ticks are placed according to &lt;a href=&quot;qml-qtcharts-valueaxis#tickAnchor-prop&quot;&gt;tickAnchor&lt;/a&gt; and &lt;a href=&quot;qml-qtcharts-valueaxis#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt; values.</source>
          <target state="translated">&lt;a href=&quot;qml-qtcharts-valueaxis#tickAnchor-prop&quot;&gt;目盛りは&lt;/a&gt;、&lt;a href=&quot;qml-qtcharts-valueaxis#tickInterval-prop&quot;&gt;tickAnchor&lt;/a&gt;とtickIntervalの値に従って配置されます。</target>
        </trans-unit>
        <trans-unit id="136379b6caffb661288f697884852acfa67f5abc" translate="yes" xml:space="preserve">
          <source>Ticks are placed according to &lt;a href=&quot;qvalueaxis#tickAnchor-prop&quot;&gt;tickAnchor&lt;/a&gt; and &lt;a href=&quot;qvalueaxis#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt; values.</source>
          <target state="translated">&lt;a href=&quot;qvalueaxis#tickAnchor-prop&quot;&gt;目盛りは&lt;/a&gt;、&lt;a href=&quot;qvalueaxis#tickInterval-prop&quot;&gt;tickAnchor&lt;/a&gt;とtickIntervalの値に従って配置されます。</target>
        </trans-unit>
        <trans-unit id="6b42998e43935d3d04465715e4ce7c0857379df7" translate="yes" xml:space="preserve">
          <source>Ticks are placed evenly across the axis range. The &lt;a href=&quot;qml-qtcharts-valueaxis#tickCount-prop&quot;&gt;tickCount&lt;/a&gt; value specifies the number of ticks.</source>
          <target state="translated">目盛りは軸範囲全体に均等に配置されます。&lt;a href=&quot;qml-qtcharts-valueaxis#tickCount-prop&quot;&gt;TickCountの&lt;/a&gt;値は、ダニの数を指定します。</target>
        </trans-unit>
        <trans-unit id="de1dbf7d98c07647b8fc25c78f10bce49c508e71" translate="yes" xml:space="preserve">
          <source>Ticks are placed evenly across the axis range. The &lt;a href=&quot;qvalueaxis#tickCount-prop&quot;&gt;tickCount&lt;/a&gt; value specifies the number of ticks.</source>
          <target state="translated">目盛りは軸範囲全体に均等に配置されます。&lt;a href=&quot;qvalueaxis#tickCount-prop&quot;&gt;TickCountの&lt;/a&gt;値は、ダニの数を指定します。</target>
        </trans-unit>
        <trans-unit id="2dd2c660983753cf7cd7ed0bfc6dd2c1219c9bc2" translate="yes" xml:space="preserve">
          <source>Tile</source>
          <target state="translated">Tile</target>
        </trans-unit>
        <trans-unit id="c6cd47d4bb73d5278a94ee40065ff606037a97e1" translate="yes" xml:space="preserve">
          <source>Tile background color. Defaults to &lt;code&gt;green&lt;/code&gt;.</source>
          <target state="translated">タイルの背景色。デフォルトは &lt;code&gt;green&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="439446deb2e08642170a83f9665053b3b8ed4333" translate="yes" xml:space="preserve">
          <source>Tile cache</source>
          <target state="translated">タイルキャッシュ</target>
        </trans-unit>
        <trans-unit id="64c0e8266a4ef12188380a2d87169529f81ed8f4" translate="yes" xml:space="preserve">
          <source>Tile foreground (text) color. Defaults to &lt;code&gt;light&lt;/code&gt;.</source>
          <target state="translated">前景色（テキスト）の色を並べて表示します。デフォルトは &lt;code&gt;light&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="54ea380b09bac1ed2b70cb8862b530ce5a74fd62" translate="yes" xml:space="preserve">
          <source>Tile foreground (text) color. Defaults to &lt;code&gt;light&lt;/code&gt;. This option is only available for Windows Store apps on Windows 8 and Windows RT.</source>
          <target state="translated">タイルの前景色（テキスト）の色。デフォルトは &lt;code&gt;light&lt;/code&gt; です。このオプションは、Windows 8およびWindows RT上のWindowsストアアプリでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="f328e9d87e7209966b6a06a4bc96fabfe1b2ce19" translate="yes" xml:space="preserve">
          <source>TileHorizontally</source>
          <target state="translated">TileHorizontally</target>
        </trans-unit>
        <trans-unit id="d3ef36c1e8fa2e8700ba50396bd44452c4c3c0c2" translate="yes" xml:space="preserve">
          <source>TileVertically</source>
          <target state="translated">TileVertically</target>
        </trans-unit>
        <trans-unit id="9595212dd80379f9df669dfb7f5b83911e003df1" translate="yes" xml:space="preserve">
          <source>Tiling of the texture map. Default is &lt;code&gt;Qt.vector2d(8, 5)&lt;/code&gt;.</source>
          <target state="translated">テクスチャマップのタイリング。デフォルトは &lt;code&gt;Qt.vector2d(8, 5)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5151407d0ff11670bbac70daa08ac10e10dbedbb" translate="yes" xml:space="preserve">
          <source>Tiling repeat of the brush texture map. Default is &lt;code&gt;Qt.vector3d(3, 3, 3)&lt;/code&gt;.</source>
          <target state="translated">ブラシテクスチャマップのタイリングリピート。デフォルトは &lt;code&gt;Qt.vector3d(3, 3, 3)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5be5faa7bcca44efa627eab0fbecf97d5cdbbd04" translate="yes" xml:space="preserve">
          <source>Tiling repeat of the reflection texture map. Default is &lt;code&gt;Qt.vector3d(1, 1, 1)&lt;/code&gt;.</source>
          <target state="translated">反射テクスチャマップのタイリングリピート。デフォルトは &lt;code&gt;Qt.vector3d(1, 1, 1)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5c0e8c69fbbb98e53b74bd261a0fc9e7a4354695" translate="yes" xml:space="preserve">
          <source>Tiling repeat of the texture maps. Default is &lt;code&gt;Qt.vector2d(1, 1)&lt;/code&gt;.</source>
          <target state="translated">テクスチャマップのタイリングリピート。デフォルトは &lt;code&gt;Qt.vector2d(1, 1)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9b81f3aefe46229dc33100dd46883ae76bfce2f6" translate="yes" xml:space="preserve">
          <source>Tiling repeat of the texture maps. Default is &lt;code&gt;Qt.vector2d(5, 5)&lt;/code&gt;.</source>
          <target state="translated">テクスチャマップのタイリングリピート。デフォルトは &lt;code&gt;Qt.vector2d(5, 5)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cc7b623df0df256f506f3321e45473f007a12d72" translate="yes" xml:space="preserve">
          <source>Tilt Sensor</source>
          <target state="translated">チルトセンサ</target>
        </trans-unit>
        <trans-unit id="488a01a4d6577dfcddec95940066692710ba5cbd" translate="yes" xml:space="preserve">
          <source>TiltReading (QML type)</source>
          <target state="translated">TiltReading(QML型</target>
        </trans-unit>
        <trans-unit id="fe6799bec4d352c0acdaadc4278323aa15d8dd36" translate="yes" xml:space="preserve">
          <source>TiltReading QML Type</source>
          <target state="translated">TiltReading QML型</target>
        </trans-unit>
        <trans-unit id="f925c9ea69fde68de8b1b1d49ee5c4a870f89a26" translate="yes" xml:space="preserve">
          <source>TiltReading.xRotation</source>
          <target state="translated">TiltReading.xRotation</target>
        </trans-unit>
        <trans-unit id="2c5e3411813d08f41e9e1d43840ea1316763c970" translate="yes" xml:space="preserve">
          <source>TiltReading.yRotation</source>
          <target state="translated">TiltReading.yRotation</target>
        </trans-unit>
        <trans-unit id="5bfc07826ce0912b4b44d7cb4a15a824a93e3e6a" translate="yes" xml:space="preserve">
          <source>TiltSensor (QML type)</source>
          <target state="translated">チルトセンサ(QML型</target>
        </trans-unit>
        <trans-unit id="038a5fd6c1a16ecaa0c1cb2602c35ff35d00afd4" translate="yes" xml:space="preserve">
          <source>TiltSensor QML Type</source>
          <target state="translated">チルトセンサ QML型</target>
        </trans-unit>
        <trans-unit id="0cb02b21861cb5e6aa4dbb2dcb660099089a41bd" translate="yes" xml:space="preserve">
          <source>TiltSensor.calibrate()</source>
          <target state="translated">TiltSensor.calibrate()</target>
        </trans-unit>
        <trans-unit id="e96320baaff58e4e5cf533d7d170b3d0daffae4c" translate="yes" xml:space="preserve">
          <source>TiltShift (QML type)</source>
          <target state="translated">TiltShift(QML型</target>
        </trans-unit>
        <trans-unit id="774a2ea91c05d5a25cd55b95d36cfc10a1438dbb" translate="yes" xml:space="preserve">
          <source>TiltShift QML Type</source>
          <target state="translated">TiltShift QML型</target>
        </trans-unit>
        <trans-unit id="9918c7c8a81842b24699e494bb8d18b3b67fa018" translate="yes" xml:space="preserve">
          <source>TiltShift.blurAmount</source>
          <target state="translated">TiltShift.blurAmount</target>
        </trans-unit>
        <trans-unit id="236c0eddb4c8b0879684cc6c869afa507b512d46" translate="yes" xml:space="preserve">
          <source>TiltShift.focusPosition</source>
          <target state="translated">TiltShift.focusPosition</target>
        </trans-unit>
        <trans-unit id="e27f4063cc5306c35943624a256932eb4a60b6dc" translate="yes" xml:space="preserve">
          <source>TiltShift.focusWidth</source>
          <target state="translated">TiltShift.focusWidth</target>
        </trans-unit>
        <trans-unit id="52aab2aa349628f1f1152a439f8d83b76dce0133" translate="yes" xml:space="preserve">
          <source>TiltShift.isInverted</source>
          <target state="translated">TiltShift.isInverted</target>
        </trans-unit>
        <trans-unit id="b768d2d8a72d7d34005730e5b011c968436f1fcc" translate="yes" xml:space="preserve">
          <source>TiltShift.isVertical</source>
          <target state="translated">TiltShift.isVertical</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="df9f2f189f171f2004391a431fbb4e10d42a352b" translate="yes" xml:space="preserve">
          <source>Time  (in nano seconds)</source>
          <target state="translated">時間(ナノ秒</target>
        </trans-unit>
        <trans-unit id="dbe0c64294419b5fef0170f7a67cb31cb0d683dc" translate="yes" xml:space="preserve">
          <source>Time - sort by time modified</source>
          <target state="translated">時間-変更された時間でソート</target>
        </trans-unit>
        <trans-unit id="5f86ab85e19a02d7d3c7e99d395f0a203eb9132d" translate="yes" xml:space="preserve">
          <source>Time Zone Offsets</source>
          <target state="translated">タイムゾーンオフセット</target>
        </trans-unit>
        <trans-unit id="d458cd29adea646a8c3463a3bccc45a16b8250d4" translate="yes" xml:space="preserve">
          <source>Time attribute of the object being transferred.</source>
          <target state="translated">転送されるオブジェクトのTime属性。</target>
        </trans-unit>
        <trans-unit id="eecacec77fd46eb2ec90c3b6a07a5f60b8e4cf81" translate="yes" xml:space="preserve">
          <source>Time stamp of GPS data.</source>
          <target state="translated">GPSデータのタイムスタンプです。</target>
        </trans-unit>
        <trans-unit id="0de70db1beefa1adababbd94b08c968a2d4e9f60" translate="yes" xml:space="preserve">
          <source>Time-based, by using timestamp, clock sequence, and MAC network card address (if available) for the node sections</source>
          <target state="translated">タイムベースで、タイムスタンプ、クロックシーケンス、MACネットワークカードアドレス(利用可能な場合)をノードセクションに使用します。</target>
        </trans-unit>
        <trans-unit id="18530197f7f6f6937126d7540f0f7aaa7f8e88f2" translate="yes" xml:space="preserve">
          <source>TimeExample QML extension plugin</source>
          <target state="translated">TimeExample QML 拡張プラグイン</target>
        </trans-unit>
        <trans-unit id="ef1258d8d00628ceb619d9da1eb4d43759e2fd1a" translate="yes" xml:space="preserve">
          <source>TimeStamp</source>
          <target state="translated">TimeStamp</target>
        </trans-unit>
        <trans-unit id="0fd27374c7411b33295d582909be774e2a78db2c" translate="yes" xml:space="preserve">
          <source>TimeStamp Class</source>
          <target state="translated">タイムスタンプクラス</target>
        </trans-unit>
        <trans-unit id="81b8c6c243681242dc92a6d859791b3ad56a6c59" translate="yes" xml:space="preserve">
          <source>TimeStamp::TimeStamp(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">TimeStamp::TimeStamp(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d23495158341989fb87b416edd60e0a2ee4354db" translate="yes" xml:space="preserve">
          <source>TimeStamp::TimeStamp(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">TimeStamp::TimeStamp(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19ba8490e9c7d4c03208dd2253e23308c9a0136f" translate="yes" xml:space="preserve">
          <source>Timeline (QML type)</source>
          <target state="translated">タイムライン(QML型</target>
        </trans-unit>
        <trans-unit id="0e6f4c5ca4fa4bdaa5166b5bb32fd6629cc6bcb5" translate="yes" xml:space="preserve">
          <source>Timeline QML Type</source>
          <target state="translated">タイムライン QML タイプ</target>
        </trans-unit>
        <trans-unit id="e1cacc334413ef3d92e1dd019bcd202b0733fa9f" translate="yes" xml:space="preserve">
          <source>Timeline for controlling animations</source>
          <target state="translated">アニメーションを制御するためのタイムライン</target>
        </trans-unit>
        <trans-unit id="c7ba0b071946d47679be0fb2a8d5046b858ea719" translate="yes" xml:space="preserve">
          <source>Timeline.animations</source>
          <target state="translated">Timeline.animations</target>
        </trans-unit>
        <trans-unit id="d677a873281ea725c340a8fc85e4062ba6c6236d" translate="yes" xml:space="preserve">
          <source>Timeline.currentFrame</source>
          <target state="translated">Timeline.currentFrame</target>
        </trans-unit>
        <trans-unit id="14960e955f4f62ad9eb15849dfd4bc0f42b6caae" translate="yes" xml:space="preserve">
          <source>Timeline.enabled</source>
          <target state="translated">Timeline.enabled</target>
        </trans-unit>
        <trans-unit id="a3657c767e95f182f449ca19e8e5e60023a992d6" translate="yes" xml:space="preserve">
          <source>Timeline.endFrame</source>
          <target state="translated">Timeline.endFrame</target>
        </trans-unit>
        <trans-unit id="160c9919021a563df53d4059d84044212b782e69" translate="yes" xml:space="preserve">
          <source>Timeline.keyframes</source>
          <target state="translated">Timeline.keyframes</target>
        </trans-unit>
        <trans-unit id="3b1be07abb9ab86ab5a9d80210c2104599360cfd" translate="yes" xml:space="preserve">
          <source>Timeline.startFrame</source>
          <target state="translated">Timeline.startFrame</target>
        </trans-unit>
        <trans-unit id="5107834cade1a44eb6a3a1fcba24a76bcdf2b13d" translate="yes" xml:space="preserve">
          <source>TimelineAnimation (QML type)</source>
          <target state="translated">タイムラインアニメーション(QML 型</target>
        </trans-unit>
        <trans-unit id="34a58dd71f1a95f83e6357152a64dfaf24c8b85c" translate="yes" xml:space="preserve">
          <source>TimelineAnimation QML Type</source>
          <target state="translated">タイムラインアニメーション QML 型</target>
        </trans-unit>
        <trans-unit id="09a0836f7296f738ce5e6a1ba680a4ae4379fd81" translate="yes" xml:space="preserve">
          <source>TimelineAnimation.finished()</source>
          <target state="translated">TimelineAnimation.finished()</target>
        </trans-unit>
        <trans-unit id="7d513903f365dee487612f0a51f97c0af4e5f786" translate="yes" xml:space="preserve">
          <source>TimelineAnimation.pingPong</source>
          <target state="translated">TimelineAnimation.pingPong</target>
        </trans-unit>
        <trans-unit id="65885a7a634228e9ea2d6401b354ae3bb1b825f7" translate="yes" xml:space="preserve">
          <source>TimeoutTransition</source>
          <target state="translated">TimeoutTransition</target>
        </trans-unit>
        <trans-unit id="55a6ffceeb1e147d0ce610c500ac4544d992cce3" translate="yes" xml:space="preserve">
          <source>TimeoutTransition (QML type)</source>
          <target state="translated">タイムアウトトランジション(QML型</target>
        </trans-unit>
        <trans-unit id="a98ebcbf261e141495b4c747eefd519e988bda40" translate="yes" xml:space="preserve">
          <source>TimeoutTransition QML Type</source>
          <target state="translated">TimeoutTransition QML 型</target>
        </trans-unit>
        <trans-unit id="4fcc01790a0659db1599ae2a60afb494cf792852" translate="yes" xml:space="preserve">
          <source>TimeoutTransition is part of &lt;a href=&quot;qmlstatemachine&quot;&gt;The Declarative State Machine Framework&lt;/a&gt;.</source>
          <target state="translated">TimeoutTransitionは、&lt;a href=&quot;qmlstatemachine&quot;&gt;Declarative State&lt;/a&gt; MachineFrameworkの一部です。</target>
        </trans-unit>
        <trans-unit id="da970b5ad07cc1a02dc0ec779307a5f772ff0450" translate="yes" xml:space="preserve">
          <source>TimeoutTransition.timeout</source>
          <target state="translated">TimeoutTransition.timeout</target>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="translated">Timer</target>
        </trans-unit>
        <trans-unit id="cf87b74e515e894f3a1db836dd9d04b0dbb942ee" translate="yes" xml:space="preserve">
          <source>Timer (QML type)</source>
          <target state="translated">タイマー(QML型</target>
        </trans-unit>
        <trans-unit id="ab6f4e525fe8eaa3723f7554b2f61279c783e947" translate="yes" xml:space="preserve">
          <source>Timer QML Type</source>
          <target state="translated">タイマー QML タイプ</target>
        </trans-unit>
        <trans-unit id="5bc4dfb8ac0e86d1780fa4cf1cfd3efe49a8a923" translate="yes" xml:space="preserve">
          <source>Timer events are sent at regular intervals to objects that have started one or more timers. Each timer has a unique identifier. A timer is started with &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject::startTimer&lt;/a&gt;().</source>
          <target state="translated">タイマーイベントは、1つ以上のタイマーを開始したオブジェクトに定期的に送信されます。各タイマーには一意の識別子があります。タイマーは&lt;a href=&quot;qobject#startTimer&quot;&gt;QObject :: startTimer&lt;/a&gt;（）で開始されます。</target>
        </trans-unit>
        <trans-unit id="519ab8eca94f5aae9736637347aaf35527562209" translate="yes" xml:space="preserve">
          <source>Timer events for objects</source>
          <target state="translated">オブジェクトのタイマーイベント</target>
        </trans-unit>
        <trans-unit id="5b5b6ac99e699a92e95ebc7551671535ee232ef7" translate="yes" xml:space="preserve">
          <source>Timer types</source>
          <target state="translated">タイマーの種類</target>
        </trans-unit>
        <trans-unit id="72ae00dc956dc5a1e6d4aff7c13ecbb7d79e0839" translate="yes" xml:space="preserve">
          <source>Timer.interval</source>
          <target state="translated">Timer.interval</target>
        </trans-unit>
        <trans-unit id="ec45e0cbea8d8b92cad6657591fdf2375ce1baa7" translate="yes" xml:space="preserve">
          <source>Timer.repeat</source>
          <target state="translated">Timer.repeat</target>
        </trans-unit>
        <trans-unit id="b69c30408b43f65301d2ca6bbb1d4253ff625226" translate="yes" xml:space="preserve">
          <source>Timer.restart()</source>
          <target state="translated">Timer.restart()</target>
        </trans-unit>
        <trans-unit id="dea26de05bee1dc789346800c02929ca8161f959" translate="yes" xml:space="preserve">
          <source>Timer.running</source>
          <target state="translated">Timer.running</target>
        </trans-unit>
        <trans-unit id="68fca54c892ed8115fe16a2ca295987b82732716" translate="yes" xml:space="preserve">
          <source>Timer.start()</source>
          <target state="translated">Timer.start()</target>
        </trans-unit>
        <trans-unit id="464ee22a6605fc707ee61cbe4b6acf2a62a27242" translate="yes" xml:space="preserve">
          <source>Timer.stop()</source>
          <target state="translated">Timer.stop()</target>
        </trans-unit>
        <trans-unit id="fdded1eca4bccd92062623639fb22ead2d036f83" translate="yes" xml:space="preserve">
          <source>Timer.triggered()</source>
          <target state="translated">Timer.triggered()</target>
        </trans-unit>
        <trans-unit id="b3da4b736217304342be104a49c53e113a53fbaa" translate="yes" xml:space="preserve">
          <source>Timer.triggeredOnStart</source>
          <target state="translated">Timer.triggeredOnStart</target>
        </trans-unit>
        <trans-unit id="497d4d77970dc0f8cf3c3cdf9b8eb52fc9462a39" translate="yes" xml:space="preserve">
          <source>TimerInfo Struct</source>
          <target state="translated">タイマー情報構造体</target>
        </trans-unit>
        <trans-unit id="41837d3d18a0f8ec43137476fdd1a1f438dde38e" translate="yes" xml:space="preserve">
          <source>TimerInfo::TimerInfo()</source>
          <target state="translated">TimerInfo::TimerInfo()</target>
        </trans-unit>
        <trans-unit id="c2990280c73174d6dd6bcfa47f7ffa872db60cf8" translate="yes" xml:space="preserve">
          <source>TimerInfo::TimerInfo(int</source>
          <target state="translated">TimerInfo::TimerInfo(int</target>
        </trans-unit>
        <trans-unit id="7fde205fa220e53c1f989fd481500574b7c371f1" translate="yes" xml:space="preserve">
          <source>TimerInfo::interval</source>
          <target state="translated">TimerInfo::interval</target>
        </trans-unit>
        <trans-unit id="5e0bc1c92ffd3fafc8f5364aecd3aefd01fbb69b" translate="yes" xml:space="preserve">
          <source>TimerInfo::timerId</source>
          <target state="translated">TimerInfo::timerId</target>
        </trans-unit>
        <trans-unit id="f1dff395b38157a299b7aa9757924f8c112f2473" translate="yes" xml:space="preserve">
          <source>TimerInfo::timerType</source>
          <target state="translated">TimerInfo::timerType</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="b5b491aac3bd26ca261e3f188a1a01228d0ddf6b" translate="yes" xml:space="preserve">
          <source>Timestamps values are microseconds since a fixed point. You can use timestamps to see how far apart two sensor readings are.</source>
          <target state="translated">タイムスタンプの値は固定点からのマイクロ秒です。タイムスタンプを使用して、2つのセンサーの測定値がどのくらい離れているかを確認することができます。</target>
        </trans-unit>
        <trans-unit id="ecd84ddfb662a7926d34883ae55f89c17a0f006c" translate="yes" xml:space="preserve">
          <source>Timing Considerations</source>
          <target state="translated">タイミングの考慮事項</target>
        </trans-unit>
        <trans-unit id="0df3c5d2117fe663102f4996198057ecd01aab54" translate="yes" xml:space="preserve">
          <source>Tint is most useful when a subtle change is intended to be conveyed due to some event; you can then use tinting to more effectively tune the visible color.</source>
          <target state="translated">ティントは、何かのイベントによって微妙な変化を伝えたい場合に最も便利です。</target>
        </trans-unit>
        <trans-unit id="d53e4d941a0d8d4d4277ad07d57d91297b8749b7" translate="yes" xml:space="preserve">
          <source>TinyCBOR, version 0.6+patches</source>
          <target state="translated">TinyCBOR、バージョン0.6+パッチ</target>
        </trans-unit>
        <trans-unit id="9f495111da803097b7b34ec71369826f0c6d2bf4" translate="yes" xml:space="preserve">
          <source>Tip end of a stylus-like device (the narrow end of the pen).</source>
          <target state="translated">スタイラス状のデバイスの先端(ペンの細い方の先端)。</target>
        </trans-unit>
        <trans-unit id="8911538c52924d154c723c7d1e6f7c9cb22c0e61" translate="yes" xml:space="preserve">
          <source>Tips For QML Application Developers</source>
          <target state="translated">QMLアプリケーション開発者のためのヒント</target>
        </trans-unit>
        <trans-unit id="3f1d7cd80b33ea00a648efe4bbe44baacebce1fa" translate="yes" xml:space="preserve">
          <source>Tips for Porting Existing HTML5 Canvas Applications</source>
          <target state="translated">既存の HTML5 Canvas アプリケーションを移植するためのヒント</target>
        </trans-unit>
        <trans-unit id="dcd890ad3d53d8eb5a934d619caa4aa389f9c1a5" translate="yes" xml:space="preserve">
          <source>Tips for Using Layouts</source>
          <target state="translated">レイアウトの使い方のコツ</target>
        </trans-unit>
        <trans-unit id="768e0c1c69573fb588f61f1308a015c11468e05f" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Title</target>
        </trans-unit>
        <trans-unit id="bdca972c5ffd1202222bd6267a51a55f1b7c6823" translate="yes" xml:space="preserve">
          <source>Title Bar</source>
          <target state="translated">タイトルバー</target>
        </trans-unit>
        <trans-unit id="cda33cd4c2e9a12d11bb3188904556c81e873947" translate="yes" xml:space="preserve">
          <source>Title for the menu as a submenu or in a menubar.</source>
          <target state="translated">サブメニューやメニューバーでのメニューのタイトル。</target>
        </trans-unit>
        <trans-unit id="608fe97562074e03db3a4737b42d1567b2d29e15" translate="yes" xml:space="preserve">
          <source>Title from column axis</source>
          <target state="translated">列軸からのタイトル</target>
        </trans-unit>
        <trans-unit id="049f3e1ee87dde6ecea41a19b6ec22bdfecb597f" translate="yes" xml:space="preserve">
          <source>Title from row axis</source>
          <target state="translated">行軸からのタイトル</target>
        </trans-unit>
        <trans-unit id="aba70763c45afbe7628d9df71fb42e84afbcb149" translate="yes" xml:space="preserve">
          <source>Title from value axis</source>
          <target state="translated">値軸からのタイトル</target>
        </trans-unit>
        <trans-unit id="f35e8ff8046388721784170578e6dee8fd68a29f" translate="yes" xml:space="preserve">
          <source>Title from x-axis</source>
          <target state="translated">X軸からのタイトル</target>
        </trans-unit>
        <trans-unit id="f1a0dfcc4afcf4f96d1a178a82f77a6981428d49" translate="yes" xml:space="preserve">
          <source>Title from y-axis</source>
          <target state="translated">Y軸からのタイトル</target>
        </trans-unit>
        <trans-unit id="b5e8cd54095e433e45e8483a1d49349d827862f1" translate="yes" xml:space="preserve">
          <source>Title from z-axis</source>
          <target state="translated">z軸からのタイトル</target>
        </trans-unit>
        <trans-unit id="3f75cecf904f02abe41d1a56b16a1a591ae2602c" translate="yes" xml:space="preserve">
          <source>To abort saving due to an application error, call &lt;a href=&quot;qsavefile#cancelWriting&quot;&gt;cancelWriting&lt;/a&gt;(), so that even a call to &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() later on will not save.</source>
          <target state="translated">アプリケーションエラーのために保存を中止するには、&lt;a href=&quot;qsavefile#cancelWriting&quot;&gt;cancelWriting&lt;/a&gt;（）を呼び出します。これにより、後で&lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;（）を呼び出しても保存されません。</target>
        </trans-unit>
        <trans-unit id="97e5691d0f32e4dfd78ace3c639c1d308ab03c22" translate="yes" xml:space="preserve">
          <source>To accept or reject a request, set &lt;a href=&quot;qml-qtwebengine-webenginenavigationrequest#action-prop&quot;&gt;action&lt;/a&gt; to &lt;code&gt;WebEngineNavigationRequest.AcceptRequest&lt;/code&gt; or &lt;code&gt;WebEngineNavigationRequest.IgnoreRequest&lt;/code&gt;.</source>
          <target state="translated">リクエストを承認または拒否するには、&lt;a href=&quot;qml-qtwebengine-webenginenavigationrequest#action-prop&quot;&gt;action&lt;/a&gt;を &lt;code&gt;WebEngineNavigationRequest.AcceptRequest&lt;/code&gt; または &lt;code&gt;WebEngineNavigationRequest.IgnoreRequest&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="e293dbb3d776a5b1f2ed284c6fca2a8d3bc965bd" translate="yes" xml:space="preserve">
          <source>To accept other forms of data, these functions must be reimplemented:</source>
          <target state="translated">他の形式のデータを受け入れるためには、これらの関数を再実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="165782c939ab77fa1f04d4150188d5bff4c40caf" translate="yes" xml:space="preserve">
          <source>To access a database with &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; or &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;, create and open one or more database connections. Database connections are normally identified by connection name,</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;または&lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;でデータベースにアクセスするには、1つ以上のデータベース接続を作成して開きます。データベース接続は通常、接続名で識別されます。</target>
        </trans-unit>
        <trans-unit id="41116874bc1abc3b9f368a68ec9778bf63a52676" translate="yes" xml:space="preserve">
          <source>To access a specific row, the &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#getRow-method&quot;&gt;getRow()&lt;/a&gt; function can be used. It's also possible to access the model's JavaScript data directly via the &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#rows-prop&quot;&gt;rows&lt;/a&gt; property, but it is not possible to modify the model data this way.</source>
          <target state="translated">特定の行にアクセスするには、&lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#getRow-method&quot;&gt;getRow（）&lt;/a&gt;関数を使用できます。&lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#rows-prop&quot;&gt;rows&lt;/a&gt;プロパティを介してモデルのJavaScriptデータに直接アクセスすることもできますが、この方法でモデルデータを変更することはできません。</target>
        </trans-unit>
        <trans-unit id="6b6c415b7285bddbdd278bf09b46c96af58892f5" translate="yes" xml:space="preserve">
          <source>To access additional functions, applications can use &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance::getInstanceProcAddr&lt;/a&gt;() and vkGetDeviceProcAddr(). Applications can also decide to link to a Vulkan library directly, as many implementations export function symbols for the core commands. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;the man page for vkGetInstanceProcAddr&lt;/a&gt; for more information.</source>
          <target state="translated">追加の機能にアクセスするために、アプリケーションは&lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance :: getInstanceProcAddr&lt;/a&gt;（）およびvkGetDeviceProcAddr（）を使用できます。多くの実装はコアコマンドの関数シンボルをエクスポートするため、アプリケーションはVulkanライブラリに直接リンクすることもできます。詳細について&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;は、vkGetInstanceProcAddrのマニュアルページを参照&lt;/a&gt;してください。</target>
        </trans-unit>
        <trans-unit id="6d5be5fdb6e2b3a7c9eaf46b7f8dca39c132d2e9" translate="yes" xml:space="preserve">
          <source>To access additional functions, applications can use &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance::getInstanceProcAddr&lt;/a&gt;() and vkGetDeviceProcAddr(). Applications can also decide to link to a Vulkan library directly, as platforms with an appropriate loader will typically export function symbols for the core commands. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;the man page for vkGetInstanceProcAddr&lt;/a&gt; for more information.</source>
          <target state="translated">追加の機能にアクセスするために、アプリケーションは&lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance :: getInstanceProcAddr&lt;/a&gt;（）およびvkGetDeviceProcAddr（）を使用できます。適切なローダーを備えたプラットフォームは通常、コアコマンドの関数シンボルをエクスポートするため、アプリケーションはVulkanライブラリに直接リンクすることもできます。詳細について&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;は、vkGetInstanceProcAddrのマニュアルページを参照&lt;/a&gt;してください。</target>
        </trans-unit>
        <trans-unit id="f2205cee1ece12f6b7a1282a11830cf39346886e" translate="yes" xml:space="preserve">
          <source>To access array elements, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload instead.</source>
          <target state="translated">配列要素にアクセスするには、代わりに&lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty（quint32 arrayIndex、const QJSValue＆value）&lt;/a&gt;オーバーロードを使用します。</target>
        </trans-unit>
        <trans-unit id="b2c4c23a2465e91f3424ab7d6bb54b4b2ab91828" translate="yes" xml:space="preserve">
          <source>To access individual segments you can use standard list accessors: 'path.length' indicates the number of objects and 'path[index starting from zero]' gives the actual object.</source>
          <target state="translated">個々のセグメントにアクセスするには、標準的なリストアクセサを使用します。path.length' はオブジェクトの数を表し、'path[0 から始まるインデックス]は実際のオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="84ad53d66c568536d8e5fd405545ae4e9ac4aba0" translate="yes" xml:space="preserve">
          <source>To access individual segments you can use standard list accessors: 'segments.length' indicates the number of objects and 'segments[index starting from zero]' gives the actual objects.</source>
          <target state="translated">個々のセグメントにアクセスするには、標準的なリストアクセサを使用します。segments.length' はオブジェクトの数を表し、'segments[index start from zero]' は実際のオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="0ed7ace94bb589e27eba567ca1aa49d7d1a82b12" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;VkInstance&lt;/code&gt; handle the &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; wraps, call &lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance&lt;/a&gt;(). To resolve Vulkan functions, call &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;(). For core Vulkan commands manual resolving is not necessary as they are provided via the &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; objects accessible via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;functions&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;().</source>
          <target state="translated">&lt;code&gt;VkInstance&lt;/code&gt; ハンドルにアクセスするには、&lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt;ラップを呼び出し、&lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance&lt;/a&gt;（）を呼び出します。Vulkan関数を解決するには、&lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;（）を呼び出します。コアVulkanコマンドの場合、&lt;a href=&quot;qvulkaninstance#functions&quot;&gt;関数&lt;/a&gt;（）および&lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;（）を介してアクセス可能な&lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt;および&lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt;オブジェクトを介して提供されるため、手動で解決する必要はありません。</target>
        </trans-unit>
        <trans-unit id="100a3fef37a40843bb19d6facfa25ce617df754a" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;VkInstance&lt;/code&gt; handle the QVulkanInstance wraps, call &lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance&lt;/a&gt;(). To resolve Vulkan functions, call &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;(). For core Vulkan commands manual resolving is not necessary as they are provided via the &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; objects accessible via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;functions&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;().</source>
          <target state="translated">アクセスするには &lt;code&gt;VkInstance&lt;/code&gt; のハンドルにQVulkanInstanceラップを呼び出す&lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstanceを&lt;/a&gt;（）。Vulkan関数を解決するには、&lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;（）を呼び出します。コアVulkanコマンドの場合、&lt;a href=&quot;qvulkaninstance#functions&quot;&gt;functions&lt;/a&gt;（）および&lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;（）を介してアクセスできる&lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt;および&lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt;オブジェクトを介して提供されるため、手動で解決する必要はありません。</target>
        </trans-unit>
        <trans-unit id="2ecd238d4dc3239eae697d061e4bc002d48cbc55" translate="yes" xml:space="preserve">
          <source>To access the data returned by a query, use value(int). Each field in the data returned by a &lt;code&gt;SELECT&lt;/code&gt; statement is accessed by passing the field's position in the statement, starting from 0. This makes using &lt;code&gt;SELECT *&lt;/code&gt; queries inadvisable because the order of the fields returned is indeterminate.</source>
          <target state="translated">クエリによって返されたデータにアクセスするには、value（int）を使用します。 &lt;code&gt;SELECT&lt;/code&gt; ステートメントによって返されるデータの各フィールドには、ステートメント内のフィールドの位置を0から渡すことによってアクセスされます。これにより、返されるフィールドの順序が不定になるため、 &lt;code&gt;SELECT *&lt;/code&gt; クエリの使用はお勧めできません。</target>
        </trans-unit>
        <trans-unit id="029da581aa9bfb21eda3da3cea8f7710134bc973" translate="yes" xml:space="preserve">
          <source>To access the hierarchical category model it is necessary to use a &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; to access the child items.</source>
          <target state="translated">階層カテゴリモデルにアクセスするには、&lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt;を使用して子アイテムにアクセスする必要があります。</target>
        </trans-unit>
        <trans-unit id="785f12eb79d50d7e0d3b8888c0839dd54e5b3e20" translate="yes" xml:space="preserve">
          <source>To access the hierarchical category model it is necessary to use a DelegateModel to access the child items.</source>
          <target state="translated">階層的なカテゴリモデルにアクセスするには、子アイテムにアクセスするために DelegateModel を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7a9b6c42d27b7cd15328ca9a50a97846312eb051" translate="yes" xml:space="preserve">
          <source>To access the strings in a &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; returned by an &lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;XQuery evaluation&lt;/a&gt;, the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; must be accessed with the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt; from the instance of &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; that was used for the evaluation.</source>
          <target state="translated">文字列アクセスに&lt;a href=&quot;qxmlname&quot;&gt;QXmlNameは、&lt;/a&gt;によって返され&lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;たXQuery評価&lt;/a&gt;、&lt;a href=&quot;qxmlname&quot;&gt;QXmlNameを&lt;/a&gt;使用してアクセスされなければならない&lt;a href=&quot;qxmlnamepool&quot;&gt;名前のプール&lt;/a&gt;のインスタンスから&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;評価のために使用しました。</target>
        </trans-unit>
        <trans-unit id="82adea037c6efc168185274af650eb77ab634cfe" translate="yes" xml:space="preserve">
          <source>To access top-level items in a model, specify a null model index as the parent index with &lt;code&gt;QModelIndex()&lt;/code&gt;.</source>
          <target state="translated">モデルのトップレベルのアイテムにアクセスするには、 &lt;code&gt;QModelIndex()&lt;/code&gt; で nullのモデルインデックスを親インデックスとして指定します。</target>
        </trans-unit>
        <trans-unit id="7a6a0224dc1e99c5a439537b98f55da8a83b7075" translate="yes" xml:space="preserve">
          <source>To accommodate new functionality, the datastream serialization format of some Qt classes has changed in some versions of Qt. If you want to read data that was created by an earlier version of Qt, or write data that can be read by a program that was compiled with an earlier version of Qt, use this function to modify the serialization format used by &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;.</source>
          <target state="translated">新しい機能に対応するために、一部のバージョンのQtでは、一部のQtクラスのデータストリームシリアル化形式が変更されています。以前のバージョンのQtで作成されたデータを読み取る場合、または以前のバージョンのQtでコンパイルされたプログラムで読み取り可能なデータを書き込む場合は、この関数を使用して&lt;a href=&quot;qdatastream&quot;&gt;QDataStreamで&lt;/a&gt;使用されるシリアル化形式を変更します。</target>
        </trans-unit>
        <trans-unit id="6519201e41ad153fe9e9b937057b005076d3ae1d" translate="yes" xml:space="preserve">
          <source>To accommodate the &quot;Ask user&quot; use case the default configuration can be of type &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;QNetworkConfiguration::UserChoice&lt;/a&gt;. A user choice configuration is resolved as part of the &lt;a href=&quot;qnetworksession#open&quot;&gt;QNetworkSession::open&lt;/a&gt;() call. Note that a &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;UserChoice&lt;/a&gt; configuration is only ever returned via &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager::defaultConfiguration&lt;/a&gt;() and not &lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager::allConfigurations&lt;/a&gt;().</source>
          <target state="translated">「ユーザーに質問する」のユースケースに対応するために、デフォルトの設定は&lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;QNetworkConfiguration :: UserChoice&lt;/a&gt;タイプにすることができます。ユーザー選択の設定は&lt;a href=&quot;qnetworksession#open&quot;&gt;QNetworkSession :: open&lt;/a&gt;（）呼び出しの一部として解決されます。&lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;UserChoice&lt;/a&gt;設定は&lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager :: defaultConfiguration&lt;/a&gt;（）でのみ&lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;返され&lt;/a&gt;、QNetworkConfigurationManager :: allConfigurations（）では返されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b68df3ee02ac902304a31eb7444cf0c358e42806" translate="yes" xml:space="preserve">
          <source>To activate support for client certificates, an application needs to listen to the &lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage::selectClientCertificate&lt;/a&gt; or &lt;a href=&quot;qml-qtwebengine-webengineview#selectClientCertificate-signal&quot;&gt;WebEngineView.selectClientCertificate&lt;/a&gt; signals and select one of the offered certificates. For applications that can navigate to untrusted web sites, it is recommended to always give the user a choice before uniquely identifying them to a remote server.</source>
          <target state="translated">クライアント証明書のサポートをアクティブ化するには、アプリケーションは&lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage :: selectClientCertificate&lt;/a&gt;または&lt;a href=&quot;qml-qtwebengine-webengineview#selectClientCertificate-signal&quot;&gt;WebEngineView.selectClientCertificate&lt;/a&gt;シグナルをリッスンし、提供された証明書の1つを選択する必要があります。信頼できないWebサイトに移動できるアプリケーションの場合、リモートサーバーで一意に識別する前に、常にユーザーに選択肢を提供することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="74fd8f76a0c68751f3cbb80b331461d2b50f4b9a" translate="yes" xml:space="preserve">
          <source>To activate support for client certificates, an application needs to listen to the &lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage::selectClientCertificate&lt;/a&gt; signal and select one of the offered certificates. For applications that can navigate to untrusted web sites, it is recommended to always give the user a choice before uniquely identifying them to a remote server.</source>
          <target state="translated">クライアント証明書のサポートをアクティブにするには、アプリケーションが&lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage :: selectClientCertificate&lt;/a&gt;シグナルをリッスンし、提供された証明書の1つを選択する必要があります。信頼できないWebサイトにナビゲートできるアプリケーションの場合、リモートサーバーに対してユーザーを一意に識別する前に、常にユーザーに選択肢を与えることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="008d2023a3e72262ce922c41fdfbfd7cb8d07295" translate="yes" xml:space="preserve">
          <source>To activate the developer tools, start an application that uses Qt WebEngine with the command-line arguments:</source>
          <target state="translated">開発者ツールを起動するには、Qt WebEngineを使用するアプリケーションをコマンドライン引数で起動します。</target>
        </trans-unit>
        <trans-unit id="ea17decfc6fb9b22fd5ae885d1a70a6c0c48cbc9" translate="yes" xml:space="preserve">
          <source>To actually make use of the custom URL scheme, a &lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandler&lt;/a&gt; must be created and registered in a profile.</source>
          <target state="translated">実際にカスタムURLスキームを利用するには、&lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandlerを&lt;/a&gt;作成してプロファイルに登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="233e5076604c8d35a691dca9ba363ed57d67870b" translate="yes" xml:space="preserve">
          <source>To add &quot;What's This?&quot; text to a widget or an action, you simply call &lt;a href=&quot;qwidget#whatsThis-prop&quot;&gt;QWidget::setWhatsThis&lt;/a&gt;() or &lt;a href=&quot;qaction#whatsThis-prop&quot;&gt;QAction::setWhatsThis&lt;/a&gt;().</source>
          <target state="translated">「これは何？」を追加するには ウィジェットまたはアクションにテキストを&lt;a href=&quot;qwidget#whatsThis-prop&quot;&gt;送るに&lt;/a&gt;は、QWidget :: setWhatsThis（）または&lt;a href=&quot;qaction#whatsThis-prop&quot;&gt;QAction :: setWhatsThis&lt;/a&gt;（）を呼び出すだけです。</target>
        </trans-unit>
        <trans-unit id="561cadd3bd982353e84991715bd15854465fde6e" translate="yes" xml:space="preserve">
          <source>To add a dock widget to a form, drag one from the &lt;b&gt;Containers&lt;/b&gt; section of the widget box, and drop it onto the main form area. Do not add the dock widget to an existing layout. Instead, open the &lt;b&gt;Property Editor&lt;/b&gt; and enable the &lt;b&gt;docked&lt;/b&gt; property to place it in a dock area.</source>
          <target state="translated">ドックウィジェットをフォームに追加するには、ウィジェットボックスの[ &lt;b&gt;コンテナー]&lt;/b&gt;セクションからドックウィジェットをドラッグし、メインフォーム領域にドロップします。ドックウィジェットを既存のレイアウトに追加しないでください。代わりに、&lt;b&gt;プロパティエディター&lt;/b&gt;を開き、&lt;b&gt;ドッキングされた&lt;/b&gt;プロパティを有効にして、ドック領域に配置します。</target>
        </trans-unit>
        <trans-unit id="35b4d064014acabeb9316dc5a73f08b604540da5" translate="yes" xml:space="preserve">
          <source>To add a dynamic property, click on the &lt;b&gt;Add&lt;/b&gt; button</source>
          <target state="translated">動的プロパティを追加するには、[ &lt;b&gt;追加&lt;/b&gt; ]ボタンをクリックします</target>
        </trans-unit>
        <trans-unit id="a8a60b49e5dbd819d54aa15f3dd17f6a59fcd20d" translate="yes" xml:space="preserve">
          <source>To add a menu bar to the main window, we simply create the menus, and add them to the main window's menu bar. Note that the &lt;a href=&quot;qmainwindow#menuBar&quot;&gt;QMainWindow::menuBar&lt;/a&gt;() function will automatically create the menu bar the first time it is called. You can also call &lt;a href=&quot;qmainwindow#setMenuBar&quot;&gt;QMainWindow::setMenuBar&lt;/a&gt;() to use a custom menu bar in the main window.</source>
          <target state="translated">メインウィンドウにメニューバーを追加するには、メニューを作成し、メインウィンドウのメニューバーに追加するだけです。&lt;a href=&quot;qmainwindow#menuBar&quot;&gt;QMainWindow :: menuBar&lt;/a&gt;（）関数は、最初に呼び出されたときに自動的にメニューバーを作成することに注意してください。&lt;a href=&quot;qmainwindow#setMenuBar&quot;&gt;QMainWindow :: setMenuBar&lt;/a&gt;（）を呼び出して、メインウィンドウでカスタムメニューバーを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="13da36d650412cd07fe7d00c274a591a7dda9dab" translate="yes" xml:space="preserve">
          <source>To add a new page, select &lt;b&gt;Insert Page&lt;/b&gt; from the toolbox widget's context menu. You can add the page before or after the current page.</source>
          <target state="translated">新しいページを追加するには、ツールボックスウィジェットのコンテキストメニューから[ページの&lt;b&gt;挿入]を&lt;/b&gt;選択します。現在のページの前または後にページを追加できます。</target>
        </trans-unit>
        <trans-unit id="14b0e14dda6ed3e43b5d89d3c4cbdd43bcc989bb" translate="yes" xml:space="preserve">
          <source>To add a new tab:</source>
          <target state="translated">新しいタブを追加します。</target>
        </trans-unit>
        <trans-unit id="25868537480596e4f22730b64ee229ad6be0c2b0" translate="yes" xml:space="preserve">
          <source>To add a placeholder, select an object of a suitable base class and choose &lt;b&gt;Promote to ...&lt;/b&gt; from the form's context menu. After entering the class name and header file in the lower part of the dialog, choose &lt;b&gt;Add&lt;/b&gt;. The placeholder class will now appear along with the base class in the upper list. Click the &lt;b&gt;Promote&lt;/b&gt; button to accept this choice.</source>
          <target state="translated">プレースホルダーを追加するには、適切な基本クラスのオブジェクトを選択し、フォームのコンテキストメニューから[ &lt;b&gt;...に昇格]を&lt;/b&gt;選択します。ダイアログの下部にクラス名とヘッダーファイルを入力したら、[ &lt;b&gt;追加&lt;/b&gt; ]を選択します。プレースホルダクラスは、上部のリストに基本クラスとともに表示されます。この選択を受け入れるには、[ &lt;b&gt;昇格&lt;/b&gt; ]ボタンをクリックします。</target>
        </trans-unit>
        <trans-unit id="58ed9015ce139add70c078b408b123047c1f1c8b" translate="yes" xml:space="preserve">
          <source>To add a system tray entry, create a &lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt; object, call &lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;() to provide a context menu for the icon, and call &lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;() to make it visible in the system tray. Status notification messages (&quot;balloon messages&quot;) can be displayed at any time using &lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;().</source>
          <target state="translated">システムトレイエントリを追加するには、&lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt;オブジェクトを作成し、&lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;（）を呼び出してアイコンのコンテキストメニューを提供し、&lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;（）を呼び出してシステムトレイにアイコンを表示します。ステータス通知メッセージ（「バルーンメッセージ」）は、&lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;（）を使用していつでも表示できます。</target>
        </trans-unit>
        <trans-unit id="b9bacb7deb5913f022aa849724af968ff5bd30af" translate="yes" xml:space="preserve">
          <source>To add a system tray entry, create a QSystemTrayIcon object, call &lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;() to provide a context menu for the icon, and call &lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;() to make it visible in the system tray. Status notification messages (&quot;balloon messages&quot;) can be displayed at any time using &lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;().</source>
          <target state="translated">システムトレイエントリを追加するには、QSystemTrayIconオブジェクトを作成し、&lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;（）を呼び出してアイコンのコンテキストメニューを提供し、&lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;（）を呼び出してシステムトレイに表示します。ステータス通知メッセージ（「バルーンメッセージ」）は、&lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;（）を使用していつでも表示できます。</target>
        </trans-unit>
        <trans-unit id="ba896642afdd8acf0fd8fdf53c25f05373dad0d2" translate="yes" xml:space="preserve">
          <source>To add a visual effect to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, for example, you can use one of the standard effects, or alternately, create your own effect by creating a subclass of &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt;. The effect can then be installed on the item using &lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem::setGraphicsEffect&lt;/a&gt;().</source>
          <target state="translated">たとえば、視覚効果を&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;に追加するには、標準の効果の1つを使用するか、代わりに&lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffectの&lt;/a&gt;サブクラスを作成して独自の効果を作成します。次に、&lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem :: setGraphicsEffect&lt;/a&gt;（）を使用してエフェクトをアイテムにインストールできます。</target>
        </trans-unit>
        <trans-unit id="f59fc17a85900b1d7cdc39eab7beb3419faaf471" translate="yes" xml:space="preserve">
          <source>To add a visual effect to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, for example, you can use one of the standard effects, or alternately, create your own effect by creating a subclass of QGraphicsEffect. The effect can then be installed on the item using &lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem::setGraphicsEffect&lt;/a&gt;().</source>
          <target state="translated">たとえば、&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItemに&lt;/a&gt;視覚効果を追加するには、標準効果の1つを使用するか、QGraphicsEffectのサブクラスを作成して独自の効果を作成します。エフェクトは、&lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem :: setGraphicsEffect&lt;/a&gt;（）を使用してアイテムにインストールできます。</target>
        </trans-unit>
        <trans-unit id="f1b1d0f0c7cea6647f41635633e72115c21db2de" translate="yes" xml:space="preserve">
          <source>To add an action to a menu or a toolbar, simply press the left mouse button over the action in the action editor, and drag it to the preferred location.</source>
          <target state="translated">メニューやツールバーにアクションを追加するには、アクションエディタでアクションの上でマウスの左ボタンを押して、希望の場所にドラッグするだけです。</target>
        </trans-unit>
        <trans-unit id="d47ec3809bf32413165beac2f60d6c251fc49a17" translate="yes" xml:space="preserve">
          <source>To add content to a group box, you can reparent it to its &lt;a href=&quot;qml-qtquick-controls-groupbox#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; property.</source>
          <target state="translated">グループボックスにコンテンツを追加するには、コンテンツをその&lt;a href=&quot;qml-qtquick-controls-groupbox#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;プロパティに親子化できます。</target>
        </trans-unit>
        <trans-unit id="22a6d502fb12e63290739a33467a08706c0717b5" translate="yes" xml:space="preserve">
          <source>To add custom types to the testdata, the type must be registered with &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt; via &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;().</source>
          <target state="translated">TESTDATAにカスタムタイプを追加するには、タイプが登録されている必要があり&lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;経由&lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="98e7f5dfddfb2cef4b2c5072880e73ac2ffa812b" translate="yes" xml:space="preserve">
          <source>To add extra buttons to the wizard (e.g., a &lt;b&gt;Print&lt;/b&gt; button), one way is to call setButton() with &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt; to &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt;, and make the buttons visible using the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt; to &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; options.</source>
          <target state="translated">ウィザードに追加のボタン（&lt;b&gt;印刷&lt;/b&gt;ボタンなど）を追加するには、1つの方法は、&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt;から&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt;までのsetButton（）を呼び出し、&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;から&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3までの&lt;/a&gt;オプションを使用してボタンを表示することです。</target>
        </trans-unit>
        <trans-unit id="e06f9796d195ee4589416c593fba8526903832e2" translate="yes" xml:space="preserve">
          <source>To add extra buttons to the wizard (e.g., a &lt;b&gt;Print&lt;/b&gt; button), one way is to call setButtonText() with &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt;, &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton2&lt;/a&gt;, or &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt; to set their text, and make the buttons visible using the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;, &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton2&lt;/a&gt;, and/or &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; options.</source>
          <target state="translated">（例えば、ウィザードに余分のボタンを追加するには&lt;b&gt;、印刷&lt;/b&gt;ボタン）、一つの方法は、とsetButtonText（）を呼び出すことです&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt;、&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton2&lt;/a&gt;、または&lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3を&lt;/a&gt;自分のテキストを設定し、使用するボタンが表示されるように&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;、&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton2&lt;/a&gt;、および/または&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3を&lt;/a&gt;オプション。</target>
        </trans-unit>
        <trans-unit id="5a1a13a545c6c805e0464273f1aa3a98701d6dad" translate="yes" xml:space="preserve">
          <source>To add items to a scene, you start off by constructing a &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; object. Then, you have two options: either add your existing &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; objects by calling &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt;(), or you can call one of the convenience functions &lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;(), or &lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;(), which all return a pointer to the newly added item. The dimensions of the items added with these functions are relative to the item's coordinate system, and the items position is initialized to (0, 0) in the scene.</source>
          <target state="translated">シーンにアイテムを追加するには、&lt;a href=&quot;qgraphicsscene&quot;&gt;まずQGraphicsScene&lt;/a&gt;オブジェクトを作成します。次に、2つのオプションがあります：&lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt;（）を呼び出して既存の&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;オブジェクトを追加するか、簡易関数&lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;（）のいずれかを呼び出すことができます。）、または&lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;（）。これらはすべて、新しく追加されたアイテムへのポインタを返します。これらの関数で追加されたアイテムの寸法は、アイテムの座標系を基準にしており、アイテムの位置はシーン内で（0、0）に初期化されます。</target>
        </trans-unit>
        <trans-unit id="f7e3032bf91747ac6350f87afd86d3a8f34b5d2f" translate="yes" xml:space="preserve">
          <source>To add items to a scene, you start off by constructing a QGraphicsScene object. Then, you have two options: either add your existing &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; objects by calling &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt;(), or you can call one of the convenience functions &lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;(), or &lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;(), which all return a pointer to the newly added item. The dimensions of the items added with these functions are relative to the item's coordinate system, and the items position is initialized to (0, 0) in the scene.</source>
          <target state="translated">シーンにアイテムを追加するには、まずQGraphicsSceneオブジェクトを作成します。次に、2つのオプションがあります。いずれかの既存の追加&lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItemを&lt;/a&gt;呼び出すことにより、オブジェクト&lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;のaddItemを&lt;/a&gt;（）、またはあなたは便利な機能の一つで呼び出すことができます&lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;関数addpath&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRectを&lt;/a&gt;（ ）、または&lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;（）。これらはすべて、新しく追加されたアイテムへのポインタを返します。これらの関数で追加されたアイテムの寸法は、アイテムの座標系を基準にしており、アイテムの位置はシーン内で（0、0）に初期化されます。</target>
        </trans-unit>
        <trans-unit id="b453f1e6a25e6a7eaa1b1c990a34922fc7eb7771" translate="yes" xml:space="preserve">
          <source>To add multiple certificates, use &lt;a href=&quot;qsslsocket#addCaCertificates&quot;&gt;addCaCertificates&lt;/a&gt;().</source>
          <target state="translated">複数の証明書を追加するには、&lt;a href=&quot;qsslsocket#addCaCertificates&quot;&gt;addCaCertificates&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="4fe72e2400ebc265c8f829e16554193020f21d10" translate="yes" xml:space="preserve">
          <source>To add new rows, use &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#appendRow-method&quot;&gt;appendRow()&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#insertRow-method&quot;&gt;insertRow()&lt;/a&gt;. To modify existing rows, use &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#setRow-method&quot;&gt;setRow()&lt;/a&gt;, &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#moveRow-method&quot;&gt;moveRow()&lt;/a&gt;, &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#removeRow-method&quot;&gt;removeRow()&lt;/a&gt;, and &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#clear-method&quot;&gt;clear()&lt;/a&gt;.</source>
          <target state="translated">新しい行を追加するには、&lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#appendRow-method&quot;&gt;appendRow（）&lt;/a&gt;と&lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#insertRow-method&quot;&gt;insertRow（）を使用し&lt;/a&gt;ます。既存の行を変更するには、&lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#setRow-method&quot;&gt;setRow（）&lt;/a&gt;、&lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#moveRow-method&quot;&gt;moveRow（）&lt;/a&gt;、&lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#removeRow-method&quot;&gt;removeRow（）&lt;/a&gt;、および&lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#clear-method&quot;&gt;clear（）を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="88bfae2ccc4b0487573533a6fd99fc094617d42f" translate="yes" xml:space="preserve">
          <source>To add or move an item to a scene, call &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;QGraphicsScene::addItem&lt;/a&gt;().</source>
          <target state="translated">アイテムをシーンに追加または移動するには、&lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;QGraphicsScene :: addItem&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="4a59b8530984a752b12a22f9dc3e1c2e98daea8b" translate="yes" xml:space="preserve">
          <source>To add sorting and filtering support to &lt;code&gt;MyItemModel&lt;/code&gt;, we need to create a &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;, call &lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;() with the &lt;code&gt;MyItemModel&lt;/code&gt; as argument, and install the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; on the view:</source>
          <target state="translated">ソートやフィルタリングのサポートを追加するには &lt;code&gt;MyItemModel&lt;/code&gt; 、我々は、作成する必要があり&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;、コール&lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;と（） &lt;code&gt;MyItemModel&lt;/code&gt; を引数として、およびインストール&lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModelを&lt;/a&gt;ビューに：</target>
        </trans-unit>
        <trans-unit id="709a0a3e936a9424ab4ea89d0e316de86eaf5712" translate="yes" xml:space="preserve">
          <source>To add sorting and filtering support to &lt;code&gt;MyItemModel&lt;/code&gt;, we need to create a QSortFilterProxyModel, call &lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;() with the &lt;code&gt;MyItemModel&lt;/code&gt; as argument, and install the QSortFilterProxyModel on the view:</source>
          <target state="translated">&lt;code&gt;MyItemModel&lt;/code&gt; に並べ替えとフィルタリングのサポートを追加するには、QSortFilterProxyModelを作成し、 &lt;code&gt;MyItemModel&lt;/code&gt; を引数として&lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;（）を呼び出し、ビューにQSortFilterProxyModelをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="0a585b1b5bdff862330fddcbf31d8ee821f724b2" translate="yes" xml:space="preserve">
          <source>To add support for an additional language, see &lt;a href=&quot;technical-guide#adding-new-keyboard-layouts&quot;&gt;Adding New Keyboard Layouts&lt;/a&gt;.</source>
          <target state="translated">追加言語のサポートを追加するには、「&lt;a href=&quot;technical-guide#adding-new-keyboard-layouts&quot;&gt;新しいキーボードレイアウトの追加&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="86823dd473661cd1a813e063afc2901e0ad24fb8" translate="yes" xml:space="preserve">
          <source>To add support for another encoding to Qt, make a subclass of &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; and implement the functions listed in the table below.</source>
          <target state="translated">Qtに別のエンコーディングのサポートを追加するには、&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodecの&lt;/a&gt;サブクラスを作成し、以下の表にリストされている関数を実装します。</target>
        </trans-unit>
        <trans-unit id="9f2dad4a39285e1d8df972bed0536265641d4e30" translate="yes" xml:space="preserve">
          <source>To add support for another encoding to Qt, make a subclass of QTextCodec and implement the functions listed in the table below.</source>
          <target state="translated">Qtに別のエンコーディングのサポートを追加するには、QTextCodecのサブクラスを作成し、以下の表に示す関数を実装します。</target>
        </trans-unit>
        <trans-unit id="9f249c6889f0d4684fff984088d0da53c150d382" translate="yes" xml:space="preserve">
          <source>To add support for drawing of new datatypes and item data roles, it is necessary to create a custom delegate. But if you only need to support the datatypes implemented by the default delegate, a custom style does not need an accompanying delegate. The &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; class description gives more information on custom delegates.</source>
          <target state="translated">新しいデータ型とアイテムデータロールの描画のサポートを追加するには、カスタムデリゲートを作成する必要があります。ただし、デフォルトのデリゲートによって実装されるデータ型のみをサポートする必要がある場合は、カスタムスタイルに付随するデリゲートは必要ありません。&lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegateの&lt;/a&gt;クラス記述は、カスタム代表団に関する詳細な情報を提供します。</target>
        </trans-unit>
        <trans-unit id="e12e0ebfdd72480c154219ba3eb8fe2ef43ff91a" translate="yes" xml:space="preserve">
          <source>To add support for new gestures, you need to derive from &lt;a href=&quot;qgesturerecognizer&quot;&gt;QGestureRecognizer&lt;/a&gt; to create a custom recognizer class, construct an instance of this class, and register it with the application by calling &lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer::registerRecognizer&lt;/a&gt;(). You can also subclass &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; to create a custom gesture class, or rely on dynamic properties to express specific details of the gesture you want to handle.</source>
          <target state="translated">新しいジェスチャーのサポートを追加するには、&lt;a href=&quot;qgesturerecognizer&quot;&gt;QGestureRecognizer&lt;/a&gt;から派生してカスタムレコグナイザークラスを作成し、このクラスのインスタンスを作成し、&lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer :: registerRecognizer&lt;/a&gt;（）を呼び出してアプリケーションに登録する必要があります。&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt;をサブクラス化してカスタムジェスチャークラスを作成したり、動的プロパティに依存して、処理するジェスチャーの特定の詳細を表現したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="e570c43909c161795c53e336f51abdb562daacc5" translate="yes" xml:space="preserve">
          <source>To add support for new gestures, you need to derive from QGestureRecognizer to create a custom recognizer class, construct an instance of this class, and register it with the application by calling &lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer::registerRecognizer&lt;/a&gt;(). You can also subclass &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; to create a custom gesture class, or rely on dynamic properties to express specific details of the gesture you want to handle.</source>
          <target state="translated">新しいジェスチャのサポートを追加するには、QGestureRecognizerから派生してカスタム認識クラスを作成し、このクラスのインスタンスを作成し、&lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer :: registerRecognizer&lt;/a&gt;（）を呼び出してアプリケーションに登録する必要があります。&lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt;をサブクラス化してカスタムジェスチャクラスを作成したり、動的プロパティに依存して処理するジェスチャの特定の詳細を表現したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="60f990f02b150bfd773ce6dea0ed57068dcebf9e" translate="yes" xml:space="preserve">
          <source>To add times of precision greater than 1 millisecond, use &lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt;().</source>
          <target state="translated">1ミリ秒を超える精度の時間を追加するには、&lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="d5ddbde2db777dbe8defd68af3c9749e41126dd9" translate="yes" xml:space="preserve">
          <source>To aid in such situations, a &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; object can be instructed to cache the frames, at the added memory cost of keeping the frames in memory for the lifetime of the object.</source>
          <target state="translated">このような状況を支援するために、&lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;オブジェクトにフレームをキャッシュするように指示することができますが、オブジェクトの存続期間中、フレームをメモリに保持するという追加のメモリコストがかかります。</target>
        </trans-unit>
        <trans-unit id="46eaf35a925c107168e3bc75b42c44c3e12cf019" translate="yes" xml:space="preserve">
          <source>To aid writing a particle vertex shader, the following GLSL code is prepended to your vertex shader:</source>
          <target state="translated">パーティクル頂点シェーダの作成を支援するために、以下の GLSL コードを頂点シェーダに追加します。</target>
        </trans-unit>
        <trans-unit id="eaf59ced55383f90bc336e2d1de3d953f4122944" translate="yes" xml:space="preserve">
          <source>To allow elements such as videos to be shown in the fullscreen mode, applications must set &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::FullScreenSupportEnabled&lt;/a&gt; and connect to &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt;, which takes a &lt;a href=&quot;qwebenginefullscreenrequest&quot;&gt;QWebEngineFullScreenRequest&lt;/a&gt; instance as an argument.</source>
          <target state="translated">このような動画などの要素がフルスクリーンモードで表示できるように、アプリケーションが設定する必要があり&lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;:: QWebEngineSettingsをFullScreenSupportEnabled&lt;/a&gt;とに接続&lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage :: fullScreenRequested&lt;/a&gt;かかり、&lt;a href=&quot;qwebenginefullscreenrequest&quot;&gt;QWebEngineFullScreenRequest&lt;/a&gt;引数としてインスタンス。</target>
        </trans-unit>
        <trans-unit id="799a4161751af711f231e01951e5560bf1c8d769" translate="yes" xml:space="preserve">
          <source>To allow elements such as videos to be shown in the fullscreen mode, applications must set &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::FullScreenSupportEnabled&lt;/a&gt; and connect to &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt;, which takes a QWebEngineFullScreenRequest instance as an argument.</source>
          <target state="translated">このような動画などの要素がフルスクリーンモードで表示できるように、アプリケーションが設定する必要があり&lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;:: QWebEngineSettingsをFullScreenSupportEnabled&lt;/a&gt;とに接続&lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage :: fullScreenRequested&lt;/a&gt;引数としてQWebEngineFullScreenRequestインスタンスをとり、。</target>
        </trans-unit>
        <trans-unit id="312b28023a2f1c9829a19172150be05295545c31" translate="yes" xml:space="preserve">
          <source>To allow for measurements in all 6 directions, negative values are used.</source>
          <target state="translated">6 方向すべての測定が可能なように、負の値を使用します。</target>
        </trans-unit>
        <trans-unit id="7ce9be0b2f928ffb8698ce47f34350b16ee61b1d" translate="yes" xml:space="preserve">
          <source>To allow the user to drop either internal or external items within the view, set the view's &lt;a href=&quot;qabstractscrollarea#viewport&quot;&gt;viewport()&lt;/a&gt;'s &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;acceptDrops&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ユーザーがビュー内の内部アイテムまたは外部アイテムをドロップできるようにするには、ビューの&lt;a href=&quot;qabstractscrollarea#viewport&quot;&gt;viewport（）&lt;/a&gt;の&lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;acceptDrops&lt;/a&gt;プロパティを &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="3d551f839da29ddb5f305afe593c0fccd5bce6dc" translate="yes" xml:space="preserve">
          <source>To append columns, insert them after the last column.</source>
          <target state="translated">列を追加するには、最後の列の後に挿入します。</target>
        </trans-unit>
        <trans-unit id="a73d422347ff54dd6a4673e3cd6516f7eef7cfc7" translate="yes" xml:space="preserve">
          <source>To append rows to another parent, move them to after the last row.</source>
          <target state="translated">別の親に行を追加するには、最後の行の後に移動します。</target>
        </trans-unit>
        <trans-unit id="dcf058086e00e8943938cba4b0e39d109e2d1d39" translate="yes" xml:space="preserve">
          <source>To append rows, insert them after the last row.</source>
          <target state="translated">行を追加するには、最後の行の後に挿入します。</target>
        </trans-unit>
        <trans-unit id="c30043e0c000838853f9933b478f1575d2d6a549" translate="yes" xml:space="preserve">
          <source>To apply a layout, you can select your choice of layout from the toolbar shown on the left, or from the context menu shown below.</source>
          <target state="translated">レイアウトを適用するには、左側に表示されているツールバーからレイアウトを選択するか、以下のコンテキストメニューから選択することができます。</target>
        </trans-unit>
        <trans-unit id="8e3341387e2959d1acc8d88687351b3b1206da01" translate="yes" xml:space="preserve">
          <source>To apply a quantifier to more than just the preceding character, use parentheses to group characters together in an expression. For example, &lt;b&gt;tag+&lt;/b&gt; matches a 't' followed by an 'a' followed by at least one 'g', whereas &lt;b&gt;(tag)+&lt;/b&gt; matches at least one occurrence of 'tag'.</source>
          <target state="translated">数量詞を直前の文字以外にも適用するには、括弧を使用して式の中で文字をグループ化します。たとえば、&lt;b&gt;tag +&lt;/b&gt;は「t」、「a」、それに続く少なくとも1つの「g」に一致し、&lt;b&gt;（tag）+&lt;/b&gt;は「tag」の少なくとも1つの出現に一致します。</target>
        </trans-unit>
        <trans-unit id="8d681eb2e8cceb01fee405a8e8a77c8a047495b5" translate="yes" xml:space="preserve">
          <source>To apply the same-origin policy to a custom URL scheme, &lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngine&lt;/a&gt; must be able to compute the origin (host and port combination) of a URL. The &lt;code&gt;Host...&lt;/code&gt; options indicate that the URL scheme conforms to the standard URL syntax (like &lt;code&gt;http&lt;/code&gt;) and automatically enable the same-origin policy. The &lt;code&gt;Path&lt;/code&gt; option indicates that the URL scheme uses a non-standard syntax and that the same-origin policy cannot be applied.</source>
          <target state="translated">同じ生成元のポリシーをカスタムURLスキームに適用するには、&lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngineが&lt;/a&gt; URL の生成元（ホストとポートの組み合わせ）を計算できる必要があります。 &lt;code&gt;Host...&lt;/code&gt; オプションは、（のような標準のURL構文にURLスキーム適合していることを示し &lt;code&gt;http&lt;/code&gt; ）と、自動的に同一生成元ポリシーを有効にします。[ &lt;code&gt;Path&lt;/code&gt; ]オプションは、URLスキームが非標準の構文を使用し、同じ生成元のポリシーを適用できないことを示します。</target>
        </trans-unit>
        <trans-unit id="95617429467cc07f36769ae00641408513f1f44f" translate="yes" xml:space="preserve">
          <source>To assign a different material slot to the object, or to assign several material slots to the same object, follow the steps below.</source>
          <target state="translated">オブジェクトに別のマテリアルスロットを割り当てたり、同じオブジェクトに複数のマテリアルスロットを割り当てたりするには、以下の手順に従います。</target>
        </trans-unit>
        <trans-unit id="154f875a2f422ad52116c20e853c9e5a3c663de4" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt;, set the animator's &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="translated">ブレンドツリーを&lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimatorに関連付ける&lt;/a&gt;には、アニメーターの&lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt;プロパティをブレンドツリーのルートノードを指すように設定します。</target>
        </trans-unit>
        <trans-unit id="de7b8ca0a938cf273383d5b93f4b49e9998f03f6" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a &lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator&lt;/a&gt;, set the animator's &lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="translated">ブレンドツリーを&lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimatorに関連付ける&lt;/a&gt;には、アニメーターの&lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt;プロパティをブレンドツリーのルートノードを指すように設定します。</target>
        </trans-unit>
        <trans-unit id="b8ec3ae39866ae6770f27cc19cf618f176d7bfe3" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a BlendedClipAnimator, set the animator's &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="translated">ブレンドツリーをBlendedClipAnimatorに関連付けるには、アニメーターの&lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt;プロパティを、ブレンドツリーのルートノードを指すように設定します。</target>
        </trans-unit>
        <trans-unit id="d4c90923fb40ded56d1065b8ce7165af43d65b98" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a QBlendedClipAnimator, set the animator's &lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="translated">ブレンドツリーをQBlendedClipAnimatorに関連付けるには、アニメーターの&lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt;プロパティを、ブレンドツリーのルートノードを指すように設定します。</target>
        </trans-unit>
        <trans-unit id="1b018f5df0c693b157c3cd59c041fd1f944e039c" translate="yes" xml:space="preserve">
          <source>To associate a cursor with a widget, use &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget::setCursor&lt;/a&gt;(). To associate a cursor with all widgets (normally for a short period of time), use &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication::setOverrideCursor&lt;/a&gt;().</source>
          <target state="translated">カーソルをウィジェットに関連付けるには、&lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget :: setCursor&lt;/a&gt;（）を使用します。カーソルをすべてのウィジェットに関連付けるには（通常は短期間）、&lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication :: setOverrideCursor&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="d802e7742bada638ebe4da7c194b6d3c78904deb" translate="yes" xml:space="preserve">
          <source>To asynchronously invoke the &lt;a href=&quot;qabstractbutton#animateClick&quot;&gt;animateClick()&lt;/a&gt; slot on a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;qpushbutton&quot;&gt;QPushButtonの&lt;/a&gt;&lt;a href=&quot;qabstractbutton#animateClick&quot;&gt;animateClick（）&lt;/a&gt;スロットを非同期的に呼び出すには：</target>
        </trans-unit>
        <trans-unit id="13b730de938257ee3ff62ec8e1d5637705a5fa57" translate="yes" xml:space="preserve">
          <source>To automatically generate map overlay objects based on the contents of a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; model (for example a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; item), the &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; type is available. It accepts any map overlay object as its delegate, and can only be created within a &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;モデル（&lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt;アイテムなど）のコンテンツに基づいてマップオーバーレイオブジェクトを自動的に生成するには、&lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt;タイプを使用できます。デリゲートとして任意のマップオーバーレイオブジェクトを受け入れ、&lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;内でのみ作成できます。</target>
        </trans-unit>
        <trans-unit id="6079f43a6def834203382c7dcfb35bdcb164b54e" translate="yes" xml:space="preserve">
          <source>To automatically generate map overlay objects based on the contents of a &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; model (for example a ListModel item), the &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; type is available. It accepts any map overlay object as its delegate, and can only be created within a &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt;モデル（たとえば、ListModelアイテム）のコンテンツに基づいてマップオーバーレイオブジェクトを自動的に生成するために、&lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt;タイプを使用できます。それは、その代表者として任意のマップオーバーレイオブジェクトを受け取り、そして唯一の内に作成することができます&lt;a href=&quot;qml-qtlocation-map&quot;&gt;地図&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="62ed8fa1c3b52b110e11936cd2f817f4dc1b6c41" translate="yes" xml:space="preserve">
          <source>To avoid a race condition, it is important to call this function</source>
          <target state="translated">競合状態を避けるためには、この関数を呼び出すことが重要です。</target>
        </trans-unit>
        <trans-unit id="f8ae891408b86343e18d1f68e67581c3ea3187cb" translate="yes" xml:space="preserve">
          <source>To avoid conflicts with other scripts executed on the page, the world in which the script is run is specified by</source>
          <target state="translated">ページ上で実行される他のスクリプトとの衝突を避けるために、スクリプトが実行されるワールドは</target>
        </trans-unit>
        <trans-unit id="9981b8a029072a3f501de8f7b8d459614ddd0cc2" translate="yes" xml:space="preserve">
          <source>To avoid confusion with the controls in the module itself, we'll call the file &lt;code&gt;MyButton.qml&lt;/code&gt;. To use the control in your application, refer to it by its filename:</source>
          <target state="translated">モジュール自体のコントロールとの混乱を避けるために、ファイル &lt;code&gt;MyButton.qml&lt;/code&gt; を呼び出します。アプリケーションでコントロールを使用するには、ファイル名で参照します。</target>
        </trans-unit>
        <trans-unit id="9bc91f87f8488391c70dd52a85a00bdc8ca13ccc" translate="yes" xml:space="preserve">
          <source>To avoid failures when your list can be empty, call &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() before calling other member functions. If you must pass an index value that might not be in the valid range, check that it is less than the value returned by &lt;a href=&quot;qlist#size&quot;&gt;size&lt;/a&gt;() but</source>
          <target state="translated">リストが空の場合の失敗を回避するには、他のメンバー関数を呼び出す前に&lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）を呼び出します。有効な範囲にない可能性があるインデックス値を渡す必要がある場合は、それが&lt;a href=&quot;qlist#size&quot;&gt;size&lt;/a&gt;（）によって返される値よりも小さいことを確認してください。</target>
        </trans-unit>
        <trans-unit id="09e95b506f60a8cd8c466637a56d779a0f15991c" translate="yes" xml:space="preserve">
          <source>To avoid memory leaks, the previous chart must be deleted.</source>
          <target state="translated">メモリリークを防ぐためには、前のチャートを削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="957aa62e5c225e7652aa8a3818c966a33d3038ea" translate="yes" xml:space="preserve">
          <source>To avoid potential conflicts like these, give distinctive names to header files that will be precompiled.</source>
          <target state="translated">このような競合の可能性を避けるために、プリコンパイルされるヘッダファイルには区別した名前を付けてください。</target>
        </trans-unit>
        <trans-unit id="27e04a7bff0648b0b326c1df2d7bb891d5ce56fe" translate="yes" xml:space="preserve">
          <source>To avoid race conditions and read/write issues from two threads it is important that the renderer and the item never read or write shared variables. Communication between the item and the renderer should primarily happen via the &lt;a href=&quot;qquickframebufferobject-renderer#synchronize&quot;&gt;QQuickFramebufferObject::Renderer::synchronize&lt;/a&gt;() function. This function will be called on the render thread while the GUI thread is blocked.</source>
          <target state="translated">2つのスレッドからの競合状態と読み取り/書き込みの問題を回避するには、レンダラーとアイテムが共有変数を読み書きしないようにすることが重要です。アイテムとレンダラーの間の通信は、主に&lt;a href=&quot;qquickframebufferobject-renderer#synchronize&quot;&gt;QQuickFramebufferObject :: Renderer :: synchronize&lt;/a&gt;（）関数を介して行われます。この関数は、GUIスレッドがブロックされている間、レンダリングスレッドで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2c8c1403f9d043007f4c1777ca2fc261157b5bf9" translate="yes" xml:space="preserve">
          <source>To avoid relying on dynamic array sizes, applications can use &lt;a href=&quot;qvulkanwindow#MAX_CONCURRENT_FRAME_COUNT-var&quot;&gt;MAX_CONCURRENT_FRAME_COUNT&lt;/a&gt; when declaring arrays. This is guaranteed to be always equal to or greater than the value returned from &lt;a href=&quot;qvulkanwindow#concurrentFrameCount&quot;&gt;concurrentFrameCount&lt;/a&gt;(). Such arrays can then be indexed by the value returned from this function.</source>
          <target state="translated">動的配列サイズに依存しないようにするために、アプリケーションは配列を宣言するときに&lt;a href=&quot;qvulkanwindow#MAX_CONCURRENT_FRAME_COUNT-var&quot;&gt;MAX_CONCURRENT_FRAME_COUNT&lt;/a&gt;を使用できます。これは、&lt;a href=&quot;qvulkanwindow#concurrentFrameCount&quot;&gt;concurrentFrameCount&lt;/a&gt;（）から返される値と常に同じかそれ以上であることが保証されています。そのような配列は、この関数から返された値によってインデックスを付けることができます。</target>
        </trans-unit>
        <trans-unit id="41a42386ac3ec977e79c0969af7a7bd2be274175" translate="yes" xml:space="preserve">
          <source>To avoid seeing the items loading progressively set &lt;code&gt;visible&lt;/code&gt; appropriately, e.g.</source>
          <target state="translated">読み込み中のアイテムが段階的 &lt;code&gt;visible&lt;/code&gt; 適切に表示されるのを回避するには、例えば</target>
        </trans-unit>
        <trans-unit id="97433bca212c3e78ab005df4e720c46fd0a9e3d7" translate="yes" xml:space="preserve">
          <source>To avoid that, the JIT is disabled by default if you compile Qt in debug mode. It is possible to override the default and enable or disable the JIT usage (both in debug or release mode) by setting the &lt;code&gt;QT_ENABLE_REGEXP_JIT&lt;/code&gt; environment variable to a non-zero or zero value respectively.</source>
          <target state="translated">これを回避するために、デバッグモードでQtをコンパイルする場合、JITはデフォルトで無効になっています。 &lt;code&gt;QT_ENABLE_REGEXP_JIT&lt;/code&gt; 環境変数をそれぞれゼロ以外の値またはゼロの値に設定することで、デフォルトをオーバーライドしてJITの使用を有効または無効にすることができます（デバッグモードとリリースモードの両方で）。</target>
        </trans-unit>
        <trans-unit id="5d01c805e5387f23e7a4903c9f47d427438deefd" translate="yes" xml:space="preserve">
          <source>To avoid the loss of signal emissions it is recommend to immidiately connect to this signal once a &lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt; instance has been created.</source>
          <target state="translated">信号エミッションの損失を避けるために、&lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt;インスタンスが作成されたら、すぐにこの信号に接続することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="0b7c1f1ca365a926ae81d8dc9e75d954dd9ddbb3" translate="yes" xml:space="preserve">
          <source>To avoid the loss of signal emissions it is recommend to immidiately connect to this signal once a &lt;code&gt;QBluetoothTransferReply&lt;/code&gt; instance has been created.</source>
          <target state="translated">信号エミッションの損失を避けるために、 &lt;code&gt;QBluetoothTransferReply&lt;/code&gt; インスタンスが作成されたら、すぐにこの信号に接続することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="6f092283de36ddde7aff37726fef4ccfcdf10c32" translate="yes" xml:space="preserve">
          <source>To avoid the need to know (or check) what the default sensor for a type is, the system will use the default sensor for a type. Most of the time this is what the app developer wants to do. If the app developer wants to select a specific sensor, he needs to call the &lt;a href=&quot;qsensor#identifier-prop&quot;&gt;QSensor::setIdentifier&lt;/a&gt;() method before starting the sensor so that the appropriate backend is used.</source>
          <target state="translated">タイプのデフォルトセンサーが何であるかを知る（またはチェックする）必要を回避するために、システムはタイプのデフォルトセンサーを使用します。ほとんどの場合、これはアプリ開発者がしたいことです。アプリ開発者が特定のセンサーを選択したい場合、適切なバックエンドが使用されるように、センサーを開始する前に&lt;a href=&quot;qsensor#identifier-prop&quot;&gt;QSensor :: setIdentifier&lt;/a&gt;（）メソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="5ffe4dad6e0465a198ba9c298e061050211df72c" translate="yes" xml:space="preserve">
          <source>To avoid the overhead of creating the layout the first time you draw the &lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; after making changes, you can use the prepare() function and pass in the</source>
          <target state="translated">変更後に&lt;a href=&quot;qstatictext&quot;&gt;QStaticTextを&lt;/a&gt;初めて描画するときにレイアウトを作成するオーバーヘッドを回避するには、prepare（）関数を使用して、</target>
        </trans-unit>
        <trans-unit id="852ddc71baa7f459435c9304ccb69b050b5d7e83" translate="yes" xml:space="preserve">
          <source>To avoid this problem, replace &lt;code&gt;hash[i]&lt;/code&gt; with &lt;code&gt;hash.value(i)&lt;/code&gt; in the code above.</source>
          <target state="translated">この問題を回避するには、上記のコードで &lt;code&gt;hash[i]&lt;/code&gt; を &lt;code&gt;hash.value(i)&lt;/code&gt; に置き換えます。</target>
        </trans-unit>
        <trans-unit id="1da48f22fabbeb7f047c06a4f5d064ed5c108281" translate="yes" xml:space="preserve">
          <source>To avoid this problem, replace &lt;code&gt;map[i]&lt;/code&gt; with &lt;code&gt;map.value(i)&lt;/code&gt; in the code above.</source>
          <target state="translated">この問題を回避するには、上記のコードで &lt;code&gt;map[i]&lt;/code&gt; を &lt;code&gt;map.value(i)&lt;/code&gt; に置き換えます。</target>
        </trans-unit>
        <trans-unit id="ac46b708d7fcb58bf8706a8c1d8f6479caccfff9" translate="yes" xml:space="preserve">
          <source>To avoid this, Qt will group new touch points together using the following rules:</source>
          <target state="translated">これを避けるために、Qt は以下のルールを使って新しいタッチポイントをグループ化します。</target>
        </trans-unit>
        <trans-unit id="a166026e97a80ebd7933e88b5571de6953aaf160" translate="yes" xml:space="preserve">
          <source>To be able to check the spelling, the spellchecker needs dictionaries. It supports dictionaries from the &lt;a href=&quot;https://sourceforge.net/projects/hunspell/&quot;&gt;Hunspell project&lt;/a&gt;, but they have to be compiled into a special binary format. A Hunspell dictionary consists of two files:</source>
          <target state="translated">スペルをチェックできるようにするには、スペルチェッカーに辞書が必要です。&lt;a href=&quot;https://sourceforge.net/projects/hunspell/&quot;&gt;Hunspellプロジェクトの&lt;/a&gt;辞書をサポートしていますが、特別なバイナリ形式にコンパイルする必要があります。Hunspell辞書は2つのファイルで構成されています。</target>
        </trans-unit>
        <trans-unit id="5dcef05d5ef1e46a33e99afc44bd952605060be7" translate="yes" xml:space="preserve">
          <source>To be able to check the spelling, the spellchecker needs dictionaries. It supports dictionaries from the &lt;a href=&quot;https://sourceforge.net/projects/hunspell/#&quot;&gt;Hunspell project&lt;/a&gt;, but they have to be compiled into a special binary format. A Hunspell dictionary consists of two files:</source>
          <target state="translated">スペルチェックを行うには、スペルチェッカーに辞書が必要です。&lt;a href=&quot;https://sourceforge.net/projects/hunspell/#&quot;&gt;Hunspellプロジェクトの&lt;/a&gt;辞書をサポートしますが、特別なバイナリ形式にコンパイルする必要があります。Hunspell辞書は2つのファイルで構成されています。</target>
        </trans-unit>
        <trans-unit id="d0e64a52b99814817715b0b03bb149dc47feae80" translate="yes" xml:space="preserve">
          <source>To be able to receive media dropped on a widget, call &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;setAcceptDrops(true)&lt;/a&gt; for the widget, and reimplement the &lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent()&lt;/a&gt; and &lt;a href=&quot;qwidget#dropEvent&quot;&gt;dropEvent()&lt;/a&gt; event handler functions.</source>
          <target state="translated">ウィジェットにドロップされたメディアを受信できるようにするには、ウィジェットに対して&lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;setAcceptDrops（true）&lt;/a&gt;を呼び出し、&lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent（）&lt;/a&gt;および&lt;a href=&quot;qwidget#dropEvent&quot;&gt;dropEvent（）&lt;/a&gt;イベントハンドラー関数を再実装します。</target>
        </trans-unit>
        <trans-unit id="23d1045b9d70f17ba3c57dc0d2c220a91b8d925b" translate="yes" xml:space="preserve">
          <source>To be able to use your new App ID, generate a new provision profile that includes the new ID to sign and run your app. Provisioning Profiles are also managed through the &lt;b&gt;Apple Developer Certificate, Identifiers, and Profiles&lt;/b&gt; manager.</source>
          <target state="translated">新しいアプリIDを使用できるようにするには、アプリに署名して実行するための新しいIDを含む新しいプロビジョニングプロファイルを生成します。プロビジョニングプロファイルは、&lt;b&gt;Apple Developer Certificate、Identifiers、およびProfiles&lt;/b&gt; manager によっても管理されます。</target>
        </trans-unit>
        <trans-unit id="ad37069b2a756eb35da98ea17b15a5581a4e278f" translate="yes" xml:space="preserve">
          <source>To be called after getting a &lt;a href=&quot;qbluetoothlocaldevice#pairingDisplayConfirmation&quot;&gt;pairingDisplayConfirmation&lt;/a&gt;(). The</source>
          <target state="translated">&lt;a href=&quot;qbluetoothlocaldevice#pairingDisplayConfirmation&quot;&gt;pairingDisplayConfirmation&lt;/a&gt;（）を取得した後に呼び出されます。の</target>
        </trans-unit>
        <trans-unit id="f8d265687de97e6932807a1fc8751330f8b7b526" translate="yes" xml:space="preserve">
          <source>To be implemented by custom Modbus client implementation. The default implementation ignores</source>
          <target state="translated">カスタムModbusクライアントの実装によって実装されます。デフォルトの実装では</target>
        </trans-unit>
        <trans-unit id="3f2fefafba9f1d93b8e36464975da9f054ee4393" translate="yes" xml:space="preserve">
          <source>To be loadable, the file's suffix must be a valid suffix for a loadable library in accordance with the platform, e.g. &lt;code&gt;.so&lt;/code&gt; on Unix, - &lt;code&gt;.dylib&lt;/code&gt; on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, and &lt;code&gt;.dll&lt;/code&gt; on Windows. The suffix can be verified with &lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary::isLibrary&lt;/a&gt;().</source>
          <target state="translated">ロード可能にするには、ファイルのサフィックスがプラットフォームに応じてロード可能なライブラリの有効なサフィックスでなければなりません。たとえば、Unixでは &lt;code&gt;.so&lt;/code&gt; 、&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;およびiOS では &lt;code&gt;.dylib&lt;/code&gt; 、Windowsでは &lt;code&gt;.dll&lt;/code&gt; です。サフィックスは&lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary :: isLibrary&lt;/a&gt;（）で確認できます。</target>
        </trans-unit>
        <trans-unit id="f775395b1d1c1dc7b311605235d9fce83faef1f7" translate="yes" xml:space="preserve">
          <source>To be loadable, the file's suffix must be a valid suffix for a loadable library in accordance with the platform, e.g. &lt;code&gt;.so&lt;/code&gt; on Unix, - &lt;code&gt;.dylib&lt;/code&gt; on macOS and iOS, and &lt;code&gt;.dll&lt;/code&gt; on Windows. The suffix can be verified with &lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary::isLibrary&lt;/a&gt;().</source>
          <target state="translated">ロード可能にするには、ファイルのサフィックスは、プラットフォームに応じたロード可能なライブラリの有効なサフィックスである必要があります。たとえば、Unixでは &lt;code&gt;.so&lt;/code&gt; 、macOSとiOSでは &lt;code&gt;.dylib&lt;/code&gt; 、Windowsでは &lt;code&gt;.dll&lt;/code&gt; です。サフィックスは&lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary :: isLibrary&lt;/a&gt;（）で確認できます。</target>
        </trans-unit>
        <trans-unit id="65e057dbe275548f05737e527b0c6d9714d4965f" translate="yes" xml:space="preserve">
          <source>To be valid, a context must have a engine, and it's &lt;a href=&quot;qqmlcontext#contextObject&quot;&gt;contextObject&lt;/a&gt;(), if any, must not have been deleted.</source>
          <target state="translated">有効であるためには、コンテキストにエンジンが必要であり、その&lt;a href=&quot;qqmlcontext#contextObject&quot;&gt;contextObject&lt;/a&gt;（）は削除されていない必要があります。</target>
        </trans-unit>
        <trans-unit id="c85d2cb52c798844bf3eccfe92387a667731b08f" translate="yes" xml:space="preserve">
          <source>To be valid, the latitude must be between -90 to 90 inclusive.</source>
          <target state="translated">有効にするには、緯度が-90から90までの間でなければなりません。</target>
        </trans-unit>
        <trans-unit id="5f5363421e22a113fa3ee2c0f940db7688d896ca" translate="yes" xml:space="preserve">
          <source>To be valid, the longitude must be between -180 to 180 inclusive.</source>
          <target state="translated">有効にするには、経度が-180から180の間でなければなりません。</target>
        </trans-unit>
        <trans-unit id="b8b65b98f45c6e4ceda4bf9ea9b73dd252de3fbc" translate="yes" xml:space="preserve">
          <source>To begin connecting objects, enter the signals and slots editing mode by opening the &lt;b&gt;Edit&lt;/b&gt; menu and selecting &lt;b&gt;Edit Signals/Slots&lt;/b&gt;, or by pressing the &lt;b&gt;F4&lt;/b&gt; key.</source>
          <target state="translated">オブジェクトの接続を開始するには、[ &lt;b&gt;編集&lt;/b&gt; ]メニューを開いて[ &lt;b&gt;信号/スロットの&lt;/b&gt;&lt;b&gt;編集&lt;/b&gt; ]を選択するか、&lt;b&gt;F4&lt;/b&gt;キーを押して、信号とスロットの編集モードに入ります。</target>
        </trans-unit>
        <trans-unit id="baa952e59f704bba7833c7af41a71665e4257927" translate="yes" xml:space="preserve">
          <source>To bind NULL values, a null &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; of the relevant type has to be added to the bound &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;; for example, &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; should be used if you are using strings.</source>
          <target state="translated">NULL値をバインドするには、関連するタイプのnull &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;をバインドされた&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantListに&lt;/a&gt;追加する必要があります。たとえば、文字列を使用している場合は、 &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="62e057d6e72a2262f69afed3f0038d0389b9a84d" translate="yes" xml:space="preserve">
          <source>To bind a NULL value, use a null &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;; for example, use &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; if you are binding a string.</source>
          <target state="translated">NULL値をバインドするには、null &lt;a href=&quot;qvariant&quot;&gt;QVariantを&lt;/a&gt;使用します。たとえば、文字列をバインドする場合は &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="8641eb7169caf9ed3873577e9c44b647a26fb3e7" translate="yes" xml:space="preserve">
          <source>To bind a value of type &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; or &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;, wrap the value in a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; such that &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt;'s &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; constructor is called.</source>
          <target state="translated">型の値バインドするには&lt;a href=&quot;qstring&quot;&gt;QStringの&lt;/a&gt;か&lt;a href=&quot;qurl&quot;&gt;QUrlを&lt;/a&gt;、で値をラップ&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;よう&lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt;の&lt;a href=&quot;qvariant&quot;&gt;QVariantの&lt;/a&gt;コンストラクタが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d9eef59e1de8efbb0ab3e7f73e02949fafc97c56" translate="yes" xml:space="preserve">
          <source>To break a layout, press &lt;b&gt;Ctrl+0&lt;/b&gt; or choose &lt;b&gt;Break Layout&lt;/b&gt; from the form's context menu, the &lt;b&gt;Form&lt;/b&gt; menu or the main toolbar.</source>
          <target state="translated">レイアウト、押し破るために、&lt;b&gt;Ctrlキー+ 0を&lt;/b&gt;か選ぶ&lt;b&gt;ブレークレイアウトを&lt;/b&gt;、フォームのコンテキストメニューから、&lt;b&gt;フォームの&lt;/b&gt;メニューまたはメインツールバー。</target>
        </trans-unit>
        <trans-unit id="73b397f95db7c026bbcf06f8703b952ac1ddd8e7" translate="yes" xml:space="preserve">
          <source>To break up a string into a string list, use the &lt;a href=&quot;qstring#split&quot;&gt;QString::split&lt;/a&gt;() function:</source>
          <target state="translated">文字列を文字列リストに&lt;a href=&quot;qstring#split&quot;&gt;分割&lt;/a&gt;するには、QString :: split（）関数を使用します：</target>
        </trans-unit>
        <trans-unit id="96d5fbf8f8d413b59ecc5e91d42c6f8ed9e8f5cb" translate="yes" xml:space="preserve">
          <source>To browse the elements of a dom document use &lt;a href=&quot;qdomnode#firstChildElement&quot;&gt;firstChildElement&lt;/a&gt;(), &lt;a href=&quot;qdomnode#lastChildElement&quot;&gt;lastChildElement&lt;/a&gt;(), &lt;a href=&quot;qdomnode#nextSiblingElement&quot;&gt;nextSiblingElement&lt;/a&gt;() and &lt;a href=&quot;qdomnode#previousSiblingElement&quot;&gt;previousSiblingElement&lt;/a&gt;(). For example, to iterate over all child elements called &quot;entry&quot; in a root element called &quot;database&quot;, you can use:</source>
          <target state="translated">domドキュメントの要素を閲覧するには、&lt;a href=&quot;qdomnode#firstChildElement&quot;&gt;firstChildElement&lt;/a&gt;（）、&lt;a href=&quot;qdomnode#lastChildElement&quot;&gt;lastChildElement&lt;/a&gt;（）、&lt;a href=&quot;qdomnode#nextSiblingElement&quot;&gt;nextSiblingElement&lt;/a&gt;（）、&lt;a href=&quot;qdomnode#previousSiblingElement&quot;&gt;previousSiblingElement&lt;/a&gt;（）を使用します。たとえば、「database」というルート要素の「entry」というすべての子要素を反復するには、次のように使用できます。</target>
        </trans-unit>
        <trans-unit id="eea21ec9c796bfe0bb187704c42fecbdd2583472" translate="yes" xml:space="preserve">
          <source>To build &lt;code&gt;libcrypto&lt;/code&gt; and &lt;code&gt;libssl&lt;/code&gt; shared libraries that are not versioned, but with an</source>
          <target state="translated">バージョン管理されていないが、バージョン管理されている &lt;code&gt;libcrypto&lt;/code&gt; および &lt;code&gt;libssl&lt;/code&gt; 共有ライブラリを構築するには</target>
        </trans-unit>
        <trans-unit id="00add77aed28b67caf71dda17fce457e12a73a0d" translate="yes" xml:space="preserve">
          <source>To build QDoc on Debian-based Linux distributions, it is sufficient to install the &lt;code&gt;libclang-dev&lt;/code&gt; package and its dependencies. For running QDoc, the &lt;code&gt;libclang&lt;/code&gt; package is required.</source>
          <target state="translated">DebianベースのLinuxディストリビューションでQDocをビルドするには、 &lt;code&gt;libclang-dev&lt;/code&gt; パッケージとその依存関係をインストールするだけで十分です。 QDocを実行するには、 &lt;code&gt;libclang&lt;/code&gt; パッケージが必要です。</target>
        </trans-unit>
        <trans-unit id="2869b0834ba0a5387d41676a61fb3be92a1deb79" translate="yes" xml:space="preserve">
          <source>To build Qt Multimedia, you need the GStreamer library, base plugins, and development files for your system. To run applications that use Qt Multimedia, you might also need to install the following GStreamer plugins: 'good', 'ugly', 'bad', ffmpeg (0.10), and libav (1.x). These additional plugins contain various codecs for audio and video decoding, as well as the necessary components for using the camera APIs. The package names for GStreamer vary between Linux distributions; try searching for &lt;code&gt;gstreamer&lt;/code&gt; or &lt;code&gt;libgstreamer&lt;/code&gt; in your distribution's package repository to find suitable packages.</source>
          <target state="translated">Qtマルチメディアを構築するには、GStreamerライブラリ、ベースプラグイン、システムの開発ファイルが必要です。Qtマルチメディアを使用するアプリケーションを実行するには、次のGStreamerプラグインをインストールする必要がある場合もあります：「good」、「ugly」、「bad」、ffmpeg（0.10）、およびlibav（1.x）。これらの追加プラグインには、オーディオおよびビデオのデコード用のさまざまなコーデック、およびカメラAPIを使用するために必要なコンポーネントが含まれています。GStreamerのパッケージ名はLinuxディストリビューションによって異なります。検索してみてください &lt;code&gt;gstreamer&lt;/code&gt; のか &lt;code&gt;libgstreamer&lt;/code&gt; 適したパッケージを見つけるためにあなたのディストリビューションのパッケージリポジトリに。</target>
        </trans-unit>
        <trans-unit id="0e204d395595ecb3b606d87138ab82f5940dd7df" translate="yes" xml:space="preserve">
          <source>To build Qt applications that can host COM objects and ActiveX controls link the application against the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; module by adding</source>
          <target state="translated">COMオブジェクトとActiveXコントロールをホストできるQtアプリケーションを構築するには、アプリケーションを&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;モジュールに対してリンクします。</target>
        </trans-unit>
        <trans-unit id="63f20d95a85aaff22bd169b51f7fe8065d5e09b8" translate="yes" xml:space="preserve">
          <source>To build Qt applications that can host COM objects and ActiveX controls link the application against the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; module by adding</source>
          <target state="translated">COMオブジェクトとActiveXコントロールをホストできるQtアプリケーションを構築するには、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;次&lt;/a&gt;を追加してアプリケーションをQAxContainerモジュールにリンクします。</target>
        </trans-unit>
        <trans-unit id="d560d831d02540eb6f4ba5cf3f22dc2a9ad43141" translate="yes" xml:space="preserve">
          <source>To build a helloworld GUI executable, typical usage would be:</source>
          <target state="translated">helloworldのGUI実行ファイルをビルドするには、典型的な使用法は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0de956a02987d444f3fc1527d2d81f847561aafa" translate="yes" xml:space="preserve">
          <source>To build a helloworld GUI executable, you need the following:</source>
          <target state="translated">helloworldのGUI実行ファイルをビルドするには、以下のものが必要です。</target>
        </trans-unit>
        <trans-unit id="99d8b9f5fba1d0957b73547db7b3557927d30ce8" translate="yes" xml:space="preserve">
          <source>To build an in-process server, use a &lt;code&gt;.pro&lt;/code&gt; file like this:</source>
          <target state="translated">インプロセスサーバーを構築するには、次のような &lt;code&gt;.pro&lt;/code&gt; ファイルを使用します。</target>
        </trans-unit>
        <trans-unit id="c1614524c5909d18dc641e5b2b4285967e4046f0" translate="yes" xml:space="preserve">
          <source>To build the ActiveX server executable run &lt;code&gt;qmake&lt;/code&gt; to generate the makefile, and use your compiler's make tool as for any other Qt application. The make process will also register the controls in the system registry by calling the resulting executable with the &lt;code&gt;-regserver&lt;/code&gt; command line option.</source>
          <target state="translated">ActiveXサーバー実行可能ファイルをビルドするには、 &lt;code&gt;qmake&lt;/code&gt; を実行してmakefileを生成し、他のQtアプリケーションと同様にコンパイラのmakeツールを使用します。makeプロセスは、結果の実行可能ファイルを &lt;code&gt;-regserver&lt;/code&gt; コマンドラインオプションで呼び出して、システムレジストリにコントロールを登録します。</target>
        </trans-unit>
        <trans-unit id="187c3080b49928df37dc613f7d01dc6c67e42b54" translate="yes" xml:space="preserve">
          <source>To build the static libraries, change into the &lt;code&gt;activeqt&lt;/code&gt; directory (usually &lt;code&gt;QTDIR/src/activeqt&lt;/code&gt;), and run &lt;code&gt;qmake&lt;/code&gt; and your make tool in both the &lt;code&gt;container&lt;/code&gt; and the &lt;code&gt;control&lt;/code&gt; subdirectory. The &lt;code&gt;qaxcontainer&lt;/code&gt; and &lt;code&gt;qaxserver&lt;/code&gt; libraries will be linked into &lt;code&gt;QTDIR/lib&lt;/code&gt;.</source>
          <target state="translated">静的ライブラリを構築するには、 &lt;code&gt;activeqt&lt;/code&gt; ディレクトリ（通常は &lt;code&gt;QTDIR/src/activeqt&lt;/code&gt; ）に移動し、 &lt;code&gt;container&lt;/code&gt; と &lt;code&gt;control&lt;/code&gt; サブディレクトリの両方で &lt;code&gt;qmake&lt;/code&gt; とmakeツールを実行します。 &lt;code&gt;qaxcontainer&lt;/code&gt; と &lt;code&gt;qaxserver&lt;/code&gt; ライブラリは、にリンクされます &lt;code&gt;QTDIR/lib&lt;/code&gt; に。</target>
        </trans-unit>
        <trans-unit id="94f0c2be17c91e259f3e0f43ac4876760f349cf1" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; libraries. Then run your make tool in &lt;code&gt;tools/testcon&lt;/code&gt; and run the resulting &lt;code&gt;testcon.exe&lt;/code&gt;.</source>
          <target state="translated">ツールをビルドするには、最初に&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;および&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt;ライブラリをビルドする必要があります。次に、 &lt;code&gt;tools/testcon&lt;/code&gt; でmakeツールを実行し、結果の &lt;code&gt;testcon.exe&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="c5ff3c92c87afa5ff07c3d4a06c46484e512a7fc" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpcpp&lt;/code&gt;.</source>
          <target state="translated">ツールをビルドするには、最初に&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;ライブラリをビルドする必要があります。次に、 &lt;code&gt;tools/dumpcpp&lt;/code&gt; でmakeツールを実行します。</target>
        </trans-unit>
        <trans-unit id="7b3cc49f1dc4b398c4b35a6ccd2f0e602557c774" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpdoc&lt;/code&gt;.</source>
          <target state="translated">ツールをビルドするには、最初に&lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;ライブラリをビルドする必要があります。次に、 &lt;code&gt;tools/dumpdoc&lt;/code&gt; でmakeツールを実行します。</target>
        </trans-unit>
        <trans-unit id="5481917c903dc495dd10e5f5d75845cee7770ffb" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; libraries. Then run your make tool in &lt;code&gt;tools/testcon&lt;/code&gt; and run the resulting &lt;code&gt;testcon.exe&lt;/code&gt;.</source>
          <target state="translated">あなたが最初に構築しなければならないツール構築するには&lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;と&lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxserver-module.html&quot;&gt;QAxServerの&lt;/a&gt;ライブラリを。次に、 &lt;code&gt;tools/testcon&lt;/code&gt; でmakeツールを実行し、結果の &lt;code&gt;testcon.exe&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="0f0d372c2c711889a4db972c858ca3fd4a548001" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpcpp&lt;/code&gt;.</source>
          <target state="translated">ツールをビルドするには、最初に&lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;ライブラリをビルドする必要があります。次に、 &lt;code&gt;tools/dumpcpp&lt;/code&gt; でmakeツールを実行します。</target>
        </trans-unit>
        <trans-unit id="44884b2c437b375b5ec38c90b635190254d0f274" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpdoc&lt;/code&gt;.</source>
          <target state="translated">ツールをビルドするには、最初に&lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt;ライブラリをビルドする必要があります。次に、 &lt;code&gt;tools/dumpdoc&lt;/code&gt; でmakeツールを実行します。</target>
        </trans-unit>
        <trans-unit id="596d9a7c88baa44a72f65d5301d18ec6a3ed121d" translate="yes" xml:space="preserve">
          <source>To calculate the speed of the interpolation, the easing curve provides the function &lt;a href=&quot;qeasingcurve#valueForProgress&quot;&gt;valueForProgress&lt;/a&gt;(), where the</source>
          <target state="translated">補間の速度を計算するために、イージング曲線は関数&lt;a href=&quot;qeasingcurve#valueForProgress&quot;&gt;valueForProgress&lt;/a&gt;（）を提供します。</target>
        </trans-unit>
        <trans-unit id="7ddbcfc7549b915f19e0ae88ce69f07720b295e1" translate="yes" xml:space="preserve">
          <source>To call functions of the COM object that can not be accessed via any of the above methods it is possible to request the COM interface directly using &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;QAxBase::queryInterface&lt;/a&gt;(). To get a C++ definition of the respective interface classes use the &lt;code&gt;#import&lt;/code&gt; directive with the type library provided with the control; see your compiler manual for details.</source>
          <target state="translated">上記のメソッドのいずれからもアクセスできないCOMオブジェクトの関数を呼び出すには、&lt;a href=&quot;qaxbase#queryInterface&quot;&gt;QAxBase :: queryInterface&lt;/a&gt;（）を使用してCOMインターフェイスを直接要求することができます。それぞれのインターフェイスクラスのC ++定義を取得するには、コントロールで提供されるタイプライブラリで &lt;code&gt;#import&lt;/code&gt; ディレクティブを使用します。詳細については、コンパイラのマニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="d4dd8cea10b120d22c91995eb8e1c82760069733" translate="yes" xml:space="preserve">
          <source>To call the methods of a COM interface described by the following IDL</source>
          <target state="translated">以下のIDLで記述されたCOMインタフェースのメソッドを呼び出すには</target>
        </trans-unit>
        <trans-unit id="6e3233e4c484d2910da29a4b4c0dfa747589a488" translate="yes" xml:space="preserve">
          <source>To cancel a prepared inserted call &lt;a href=&quot;qabstractnetworkcache#remove&quot;&gt;remove&lt;/a&gt;() on the metadata's url.</source>
          <target state="translated">メタデータのURLで準備された挿入済み呼び出しを&lt;a href=&quot;qabstractnetworkcache#remove&quot;&gt;削除する&lt;/a&gt;には、remove（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="bcbd7a07bdc6638917f260af881a7fd8dbda4d21" translate="yes" xml:space="preserve">
          <source>To cater for left-to-right and right-to-left languages you can set a block's direction with setDirection(). Paragraph alignment is set with &lt;a href=&quot;qtextblockformat#setAlignment&quot;&gt;setAlignment&lt;/a&gt;(). Margins are controlled by &lt;a href=&quot;qtextblockformat#setTopMargin&quot;&gt;setTopMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setBottomMargin&quot;&gt;setBottomMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setLeftMargin&quot;&gt;setLeftMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setRightMargin&quot;&gt;setRightMargin&lt;/a&gt;(). Overall indentation is set with &lt;a href=&quot;qtextblockformat#setIndent&quot;&gt;setIndent&lt;/a&gt;(), the indentation of the first line with &lt;a href=&quot;qtextblockformat#setTextIndent&quot;&gt;setTextIndent&lt;/a&gt;().</source>
          <target state="translated">左から右および右から左の言語に対応するには、setDirection（）を使用してブロックの方向を設定できます。段落の配置は&lt;a href=&quot;qtextblockformat#setAlignment&quot;&gt;setAlignment&lt;/a&gt;（）で設定されます。マージンは、&lt;a href=&quot;qtextblockformat#setTopMargin&quot;&gt;setTopMargin&lt;/a&gt;（）、&lt;a href=&quot;qtextblockformat#setBottomMargin&quot;&gt;setBottomMargin&lt;/a&gt;（）、&lt;a href=&quot;qtextblockformat#setLeftMargin&quot;&gt;setLeftMargin&lt;/a&gt;（）、&lt;a href=&quot;qtextblockformat#setRightMargin&quot;&gt;setRightMargin&lt;/a&gt;（）によって制御されます。全体的なインデントを用いて設定されている&lt;a href=&quot;qtextblockformat#setIndent&quot;&gt;setIndent&lt;/a&gt;（）の最初の行のインデント&lt;a href=&quot;qtextblockformat#setTextIndent&quot;&gt;setTextIndent&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="1e00d24d3f10292a6dc92284633f8da4fc3e1787" translate="yes" xml:space="preserve">
          <source>To cause static plugins actually being linked and instantiated, &lt;a href=&quot;#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macros are also needed in application code, but those are automatically generated by qmake and added to your application project.</source>
          <target state="translated">静的プラグインが実際にリンクおよびインスタンス化されるようにするには、&lt;a href=&quot;#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;（）マクロもアプリケーションコードで必要ですが、それらはqmakeによって自動的に生成され、アプリケーションプロジェクトに追加されます。</target>
        </trans-unit>
        <trans-unit id="9cd7aea4f844daa2876f2dcc6e8e873eca587ab7" translate="yes" xml:space="preserve">
          <source>To cause static plugins actually being linked and instantiated, &lt;a href=&quot;qtplugin#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macros are also needed in application code, but those are automatically generated by qmake and added to your application project.</source>
          <target state="translated">静的プラグインを実際にリンクしてインスタンス化するには、アプリケーションコードに&lt;a href=&quot;qtplugin#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;（）マクロも必要ですが、これらはqmakeによって自動的に生成され、アプリケーションプロジェクトに追加されます。</target>
        </trans-unit>
        <trans-unit id="d9fa74a2427a59666f310118acb8c43c5e3115c1" translate="yes" xml:space="preserve">
          <source>To change model data, you can assign updated values to the &lt;code&gt;model&lt;/code&gt; properties. The QML &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; is editable by default whereas C++ models must implement setData() to become editable. Integer and JavaScript array models are read-only.</source>
          <target state="translated">モデルデータを変更するには、更新された値を &lt;code&gt;model&lt;/code&gt; プロパティに割り当てます。QML &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt;はデフォルトで編集可能ですが、C ++モデルは編集可能になるためにsetData（）を実装する必要があります。整数モデルとJavaScript配列モデルは読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="0a00363765f988416bdb7cfb367b0cc2fb38426c" translate="yes" xml:space="preserve">
          <source>To change the behavior of this function, i.e. to modify what &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; can paste and how it is being pasted, reimplement the virtual &lt;a href=&quot;qplaintextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;() and &lt;a href=&quot;qplaintextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;() functions.</source>
          <target state="translated">この機能の動作を変更するには、つまりは何を修正する&lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEditを&lt;/a&gt;貼り付けることができ、それが貼り付けられているか、仮想再実装&lt;a href=&quot;qplaintextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;（）と&lt;a href=&quot;qplaintextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;（）関数を。</target>
        </trans-unit>
        <trans-unit id="52f1e82bdd16cc15e2ed5d0bc080208f6abfaf46" translate="yes" xml:space="preserve">
          <source>To change the behavior of this function, i.e. to modify what &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; can paste and how it is being pasted, reimplement the virtual &lt;a href=&quot;qtextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;() and &lt;a href=&quot;qtextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;() functions.</source>
          <target state="translated">何を変更するつまり、この関数の動作を変更するには&lt;a href=&quot;qtextedit&quot;&gt;QTextEditを&lt;/a&gt;貼り付けることができ、それが貼り付けられているか、仮想再実装&lt;a href=&quot;qtextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeDataを&lt;/a&gt;（）と&lt;a href=&quot;qtextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;（）関数。</target>
        </trans-unit>
        <trans-unit id="becd3a6b72959ec86000882e8742c680a69d93b7" translate="yes" xml:space="preserve">
          <source>To change the position of the &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; within a &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, use the &lt;a href=&quot;#tab-bar-sub&quot;&gt;tab-bar&lt;/a&gt; subcontrol (and set subcontrol-position).</source>
          <target state="translated">&lt;a href=&quot;qtabbar&quot;&gt;QTabWidget&lt;/a&gt;内の&lt;a href=&quot;qtabwidget&quot;&gt;QTabBar&lt;/a&gt;の位置を変更するには、タブバーサブコントロールを使用し&lt;a href=&quot;#tab-bar-sub&quot;&gt;ます&lt;/a&gt;（サブコントロールの位置を設定します）。</target>
        </trans-unit>
        <trans-unit id="00dfabb7928b6e13f1261d6c1f9c1eeae2717678" translate="yes" xml:space="preserve">
          <source>To change the position of the &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; within a &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, use the &lt;a href=&quot;stylesheet-reference#tab-bar-sub&quot;&gt;tab-bar&lt;/a&gt; subcontrol (and set subcontrol-position).</source>
          <target state="translated">&lt;a href=&quot;qtabbar&quot;&gt;QTabWidget&lt;/a&gt;内の&lt;a href=&quot;qtabwidget&quot;&gt;QTabBar&lt;/a&gt;の位置を変更するには、タブバーサブコントロールを使用し&lt;a href=&quot;stylesheet-reference#tab-bar-sub&quot;&gt;ます&lt;/a&gt;（そしてサブコントロール位置を設定します）。</target>
        </trans-unit>
        <trans-unit id="8c64a9defcb46a9385be110dd92f917a63a0a053" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-audio#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="translated">この位置を変更するには、&lt;a href=&quot;qml-qtmultimedia-audio#seek-method&quot;&gt;seek（）&lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="1ab847e5c531a4b8b265b3ac5dd99eff36271ed2" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-mediaplayer#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="translated">この位置を変更するには、&lt;a href=&quot;qml-qtmultimedia-mediaplayer#seek-method&quot;&gt;seek（）&lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="9720435a742525e10b9be1f28192d07456b4c60f" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-video#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="translated">この位置を変更するには、&lt;a href=&quot;qml-qtmultimedia-video#seek-method&quot;&gt;seek（）&lt;/a&gt;メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="8ee5d4dc8efd5128635d763bc6f5e48bc5cea72b" translate="yes" xml:space="preserve">
          <source>To check at runtime what is supported, use the &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderSourceType and &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderCompilationType properties. Note that these are bitmasks, because some backends may support multiple approaches.</source>
          <target state="translated">実行時にサポートされているものを確認するには、&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; .shaderSourceTypeおよび&lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; .shaderCompilationTypeプロパティを使用します。一部のバックエンドは複数のアプローチをサポートしている場合があるため、これらはビットマスクであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="640bbe38ce134e3166250195b4b4fad9fd0ea89c" translate="yes" xml:space="preserve">
          <source>To check if a file has the expected MIME type, you should use &lt;a href=&quot;qmimetype#inherits&quot;&gt;inherits&lt;/a&gt;() rather than a simple string comparison based on the &lt;a href=&quot;qmimetype#name-prop&quot;&gt;name&lt;/a&gt;(). This is because MIME types can inherit from each other: for instance a C source file is a specific type of plain text file, so text/x-csrc inherits text/plain.</source>
          <target state="translated">ファイルが期待されるMIMEタイプであるかどうかを確認するには、&lt;a href=&quot;qmimetype#name-prop&quot;&gt;名前&lt;/a&gt;（）に基づく単純な文字列比較ではなく、&lt;a href=&quot;qmimetype#inherits&quot;&gt;継承&lt;/a&gt;（）を使用する必要があります。これは、MIMEタイプが互いに継承できるためです。たとえば、Cソースファイルは特定のタイプのプレーンテキストファイルなので、text / x-csrcはtext / plainを継承します。</target>
        </trans-unit>
        <trans-unit id="e66850a5141a7d46203ce1106e6dfb88e25399a8" translate="yes" xml:space="preserve">
          <source>To check if the current backend supports the feature</source>
          <target state="translated">現在のバックエンドがその機能をサポートしているかどうかを確認するには</target>
        </trans-unit>
        <trans-unit id="9fc033fba68d185dc7bae7af0957309c9103f0de" translate="yes" xml:space="preserve">
          <source>To check if two numbers are equivalent, use normalized() on both version numbers before performing the compare.</source>
          <target state="translated">2 つの数値が同等であるかどうかを確認するには、比較を実行する前に両方のバージョン番号で normalized()を使用します。</target>
        </trans-unit>
        <trans-unit id="21747a8db96a8d50b23ef1b8939e679ea8aab6ab" translate="yes" xml:space="preserve">
          <source>To check visibility, use !&lt;a href=&quot;qwidget#visible-prop&quot;&gt;isVisible&lt;/a&gt;() instead (notice the exclamation mark).</source>
          <target state="translated">可視性を確認するには、！代わりに&lt;a href=&quot;qwidget#visible-prop&quot;&gt;isVisible&lt;/a&gt;（）（感嘆符に注意してください）。</target>
        </trans-unit>
        <trans-unit id="d8615a6b7aa9b08cb7180b1fddebc2cc3c03723b" translate="yes" xml:space="preserve">
          <source>To check whether a message type is enabled or not, use one of these methods: &lt;a href=&quot;qloggingcategory#isDebugEnabled&quot;&gt;isDebugEnabled&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#isInfoEnabled&quot;&gt;isInfoEnabled&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#isWarningEnabled&quot;&gt;isWarningEnabled&lt;/a&gt;(), and &lt;a href=&quot;qloggingcategory#isCriticalEnabled&quot;&gt;isCriticalEnabled&lt;/a&gt;().</source>
          <target state="translated">メッセージタイプが有効になっているかどうかを確認するには、&lt;a href=&quot;qloggingcategory#isDebugEnabled&quot;&gt;isDebugEnabled&lt;/a&gt;（）、&lt;a href=&quot;qloggingcategory#isInfoEnabled&quot;&gt;isInfoEnabled&lt;/a&gt;（）、&lt;a href=&quot;qloggingcategory#isWarningEnabled&quot;&gt;isWarningEnabled&lt;/a&gt;（）、および&lt;a href=&quot;qloggingcategory#isCriticalEnabled&quot;&gt;isCriticalEnabled&lt;/a&gt;（）のいずれかのメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="20209323a4b5d4933ad26616eda6a242dd066c78" translate="yes" xml:space="preserve">
          <source>To check whether a system tray is present on the user's desktop, call the &lt;a href=&quot;qsystemtrayicon#isSystemTrayAvailable&quot;&gt;QSystemTrayIcon::isSystemTrayAvailable&lt;/a&gt;() static function.</source>
          <target state="translated">ユーザーのデスクトップにシステムトレイが存在するかどうかを確認するには、&lt;a href=&quot;qsystemtrayicon#isSystemTrayAvailable&quot;&gt;QSystemTrayIcon :: isSystemTrayAvailable&lt;/a&gt;（）静的関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="cc805a6dc1c18de12edfec793bf45abfdc670417" translate="yes" xml:space="preserve">
          <source>To check whether the response came from the cache or from the network, the following can be applied:</source>
          <target state="translated">応答がキャッシュから来たのか、ネットワークから来たのかを確認するには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="c2170dd98311055f932a1f2f3ce4aec490fb711a" translate="yes" xml:space="preserve">
          <source>To choose the name that your thread will be given (as identified by the command &lt;code&gt;ps -L&lt;/code&gt; on Linux, for example), you can call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt; before starting the thread. If you don't call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt;, the name given to your thread will be the class name of the runtime type of your thread object (for example, &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; in the case of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-mandelbrot-example.html#&quot;&gt;Mandelbrot Example&lt;/a&gt;, as that is the name of the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; subclass). Note that this is currently not available with release builds on Windows.</source>
          <target state="translated">スレッドに付ける名前を選択するには（たとえば、Linuxでは &lt;code&gt;ps -L&lt;/code&gt; コマンドで識別されます）、スレッドを開始する前に&lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName（）を&lt;/a&gt;呼び出すことができます。&lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName（）を&lt;/a&gt;呼び出さない場合、スレッドに付けられた名前は、スレッドオブジェクトのランタイムタイプのクラス名になります（たとえば、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-mandelbrot-example.html#&quot;&gt;マンデルブロの例&lt;/a&gt;では &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; です。&lt;a href=&quot;qthread&quot;&gt;QThreadの&lt;/a&gt;サブクラス）。これは現在、Windows上のリリースビルドでは利用できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="aecb02a913a38d16d3e2c3eff90e3e0079b12f30" translate="yes" xml:space="preserve">
          <source>To choose the name that your thread will be given (as identified by the command &lt;code&gt;ps -L&lt;/code&gt; on Linux, for example), you can call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt; before starting the thread. If you don't call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt;, the name given to your thread will be the class name of the runtime type of your thread object (for example, &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; in the case of the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-threads-mandelbrot-example.html&quot;&gt;Mandelbrot Example&lt;/a&gt;, as that is the name of the QThread subclass). Note that this is currently not available with release builds on Windows.</source>
          <target state="translated">スレッドに付ける名前を選択するには（たとえば、Linuxではコマンド &lt;code&gt;ps -L&lt;/code&gt; で識別されます）、スレッドを開始する前に&lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName（）を&lt;/a&gt;呼び出すことができます。&lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName（）を&lt;/a&gt;呼び出さない場合、スレッドに付けられる名前は、スレッドオブジェクトの実行時型のクラス名になります（たとえば、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-threads-mandelbrot-example.html&quot;&gt;マンデルブロの例の&lt;/a&gt;場合は &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; 、それはの名前です。 QThreadサブクラス）。これは現在、Windowsのリリースビルドでは使用できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fd9c381a077048f82ecac6868f9013140a3560c7" translate="yes" xml:space="preserve">
          <source>To claim support for http and https the above entry in the Info.plist file is not allowed. This is only possible when you add your domain to the Entitlements file:</source>
          <target state="translated">http と https のサポートを主張するためには、Info.plist ファイルの上記のエントリは許可されていません。これは、自分のドメインを Entitlements ファイルに追加した場合にのみ可能です。</target>
        </trans-unit>
        <trans-unit id="cb6b21e7bba8f8c702540a64a1c95c63c8ec97b8" translate="yes" xml:space="preserve">
          <source>To clear an anchor value, set it to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">アンカー値をクリアするには、それを &lt;code&gt;undefined&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="1f1825b9c8a37a50d24ef3d20a57bce31df82588" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qbar3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;() is set as</source>
          <target state="translated">このシリーズから選択をクリアするには、&lt;a href=&quot;qbar3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;（）を次のように設定します</target>
        </trans-unit>
        <trans-unit id="429aeecebcca5aeec29093c841d6e67eade5d6cf" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qml-qtdatavisualization-surface3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt; is set as the position. If this series is added to a graph, the graph can adjust the selection according to user interaction or if it becomes invalid.</source>
          <target state="translated">このシリーズから選択をクリアするには、&lt;a href=&quot;qml-qtdatavisualization-surface3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPositionを&lt;/a&gt;位置として設定します。この系列をグラフに追加すると、ユーザーの操作に応じて、または無効になった場合に、グラフで選択を調整できます。</target>
        </trans-unit>
        <trans-unit id="aaf607a23811745069fde6b201c651b4eac9d0e5" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qscatter3dseries#invalidSelectionIndex&quot;&gt;invalidSelectionIndex&lt;/a&gt;() is set as</source>
          <target state="translated">このシリーズから選択をクリアするには、&lt;a href=&quot;qscatter3dseries#invalidSelectionIndex&quot;&gt;invalidSelectionIndex&lt;/a&gt;（）を次のように設定します</target>
        </trans-unit>
        <trans-unit id="6b4ffb34de657c74ab25a489628184b27204c799" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qsurface3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;() is set as</source>
          <target state="translated">このシリーズから選択をクリアするには、&lt;a href=&quot;qsurface3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;（）を次のように設定します</target>
        </trans-unit>
        <trans-unit id="3547c182ba77bff841fd3ea66ba3a4f560835dac" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, set &lt;a href=&quot;qml-qtdatavisualization-bar3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt; as the position.</source>
          <target state="translated">このシリーズから選択を&lt;a href=&quot;qml-qtdatavisualization-bar3dseries#invalidSelectionPosition-prop&quot;&gt;解除&lt;/a&gt;するには、位置としてinvalidSelectionPositionを設定します。</target>
        </trans-unit>
        <trans-unit id="8cef577b4897a98142ef0babd4324111d6d0632b" translate="yes" xml:space="preserve">
          <source>To clear the pointer held without deleting the object it points to (and hence take ownership of the object), use &lt;a href=&quot;qscopedpointer#take&quot;&gt;take&lt;/a&gt;() instead.</source>
          <target state="translated">指しているオブジェクトを削除せずに保持されているポインタをクリアするには（したがって、オブジェクトの所有権を取得するには）、代わりに&lt;a href=&quot;qscopedpointer#take&quot;&gt;take&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="2bb5744d865a5c89ea379146ea4bc698001057a3" translate="yes" xml:space="preserve">
          <source>To clear the search highlight, just pass an empty string.</source>
          <target state="translated">検索ハイライトをクリアするには、空の文字列を渡すだけです。</target>
        </trans-unit>
        <trans-unit id="75f37ad6da3248d89d7e621c33edbd844abcbe3d" translate="yes" xml:space="preserve">
          <source>To clear the selection, just pass an empty string.</source>
          <target state="translated">選択範囲をクリアするには、空の文字列を渡します。</target>
        </trans-unit>
        <trans-unit id="4521bd570c5c0d10f60de205e7196927a1793b53" translate="yes" xml:space="preserve">
          <source>To close the socket, call &lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost&lt;/a&gt;(). &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::ClosingState&lt;/a&gt;. After all pending data has been written to the socket, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; actually closes the socket, enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::UnconnectedState&lt;/a&gt;, and emits &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;(). If you want to abort a connection immediately, discarding all pending data, call &lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;() instead. If the remote host closes the connection, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; will emit error(&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::RemoteHostClosedError&lt;/a&gt;), during which the socket state will still be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, and then the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal will be emitted.</source>
          <target state="translated">ソケットを閉じるには、&lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost&lt;/a&gt;（）を呼び出します。&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;は&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: &lt;/a&gt;ClosingStateに入ります。保留中のすべてのデータがソケットに書き込まれた後、&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocketは&lt;/a&gt;実際にソケットを閉じ、&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: UnconnectedState&lt;/a&gt;に入り、&lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;（）を発行します。接続をすぐに中止して保留中のデータをすべて破棄したい場合は、代わりに&lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;（）を呼び出します。リモートホストが接続を閉じると、&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;はエラー（&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket :: RemoteHostClosedError&lt;/a&gt;）を発行しますが、その間、ソケットの状態は&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;であり、その後&lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;切断されます&lt;/a&gt;（）シグナルが発信されます。</target>
        </trans-unit>
        <trans-unit id="7725608605ccfb01a9bfc276937b17a4daa42613" translate="yes" xml:space="preserve">
          <source>To close the socket, call &lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost&lt;/a&gt;(). QAbstractSocket enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::ClosingState&lt;/a&gt;. After all pending data has been written to the socket, QAbstractSocket actually closes the socket, enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::UnconnectedState&lt;/a&gt;, and emits &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;(). If you want to abort a connection immediately, discarding all pending data, call &lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;() instead. If the remote host closes the connection, QAbstractSocket will emit &lt;a href=&quot;qabstractsocket#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;(&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::RemoteHostClosedError&lt;/a&gt;), during which the socket state will still be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, and then the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal will be emitted.</source>
          <target state="translated">ソケットを閉じるには、&lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost&lt;/a&gt;（）を呼び出します。 QAbstractSocketは&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket ::&lt;/a&gt; ClosingStateに入ります。保留中のすべてのデータがソケットに書き込まれた後、QAbstractSocketは実際にソケットを閉じ、&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: UnconnectedState&lt;/a&gt;に入り、&lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;切断された&lt;/a&gt;（）を発行します。保留中のデータをすべて破棄して接続をすぐに中止する場合は、代わりに&lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;（）を呼び出します。リモートホストが接続を閉じると、QAbstractSocketは&lt;a href=&quot;qabstractsocket#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;（&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket :: RemoteHostClosedError&lt;/a&gt;）を発行します。その間、ソケットの状態は&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedStateのまま&lt;/a&gt;であり、その後、&lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;切断された&lt;/a&gt;（）シグナルが発行されます。</target>
        </trans-unit>
        <trans-unit id="ad76e35c696315e34a7861f3714d7bf48681d198" translate="yes" xml:space="preserve">
          <source>To communicate with a &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; or &lt;a href=&quot;qml-qtwebchannel-webchannel&quot;&gt;WebChannel&lt;/a&gt;, a client must use and set up the JavaScript API provided by &lt;code&gt;qwebchannel.js&lt;/code&gt;. For clients run inside &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;, you can load the file via &lt;code&gt;qrc:///qtwebchannel/qwebchannel.js&lt;/code&gt;. For external clients, you need to copy the file to your web server. Then instantiate a &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; object and pass it a transport object and a callback function, which will be invoked once the initialization of the channel finishes and the published objects become available.</source>
          <target state="translated">&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;または&lt;a href=&quot;qml-qtwebchannel-webchannel&quot;&gt;WebChannel&lt;/a&gt;と通信するには、クライアントは &lt;code&gt;qwebchannel.js&lt;/code&gt; が提供するJavaScript APIを使用して設定する必要があります。&lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;内で実行されるクライアントの場合、 &lt;code&gt;qrc:///qtwebchannel/qwebchannel.js&lt;/code&gt; を介してファイルをロードできます。外部クライアントの場合、ファイルをWebサーバーにコピーする必要があります。次に、&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;オブジェクトをインスタンス化し、トランスポートオブジェクトとコールバック関数を渡します。これらは、チャネルの初期化が完了し、公開されたオブジェクトが利用可能になると呼び出されます。</target>
        </trans-unit>
        <trans-unit id="2d7c886843b6483c6becfe351eff0447da11db72" translate="yes" xml:space="preserve">
          <source>To compile a state machine, the following lines have to be added to a .pro file:</source>
          <target state="translated">ステートマシンをコンパイルするには、以下の行を .pro ファイルに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="385fd6ee52a45816bc30f53d324d45284678cafa" translate="yes" xml:space="preserve">
          <source>To complete the connection, select a signal from the source object and a slot from the destination object, then click &lt;b&gt;OK&lt;/b&gt;. Click &lt;b&gt;Cancel&lt;/b&gt; if you wish to abandon the connection.</source>
          <target state="translated">接続を完了するには、ソースオブジェクトから信号を選択し、宛先オブジェクトからスロットを選択して、[ &lt;b&gt;OK&lt;/b&gt; ]をクリックします。接続を破棄する場合は、[ &lt;b&gt;キャンセル]を&lt;/b&gt;クリックします。</target>
        </trans-unit>
        <trans-unit id="1d4403ef3c0807c9173800f15ae382e772988187" translate="yes" xml:space="preserve">
          <source>To complete the installation, select the components that you want to install and follow the instructions of the installation program.</source>
          <target state="translated">インストールを完了するには、インストールするコンポーネントを選択し、インストールプログラムの指示に従います。</target>
        </trans-unit>
        <trans-unit id="6fd982abdeefd37c9280dd7d76e4c9e45e9ee32b" translate="yes" xml:space="preserve">
          <source>To compute the value of an attribute, enclose the expression in curly braces and embed it in the attribute value:</source>
          <target state="translated">属性の値を計算するには、中括弧で式を囲み、それを属性値に埋め込みます。</target>
        </trans-unit>
        <trans-unit id="0c44d8989e755cc8695a68173fe5504004b8cc1f" translate="yes" xml:space="preserve">
          <source>To configure Qt for cross-platform development and deployment, the development toolchain for the target platform needs to be set up. This set up varies among the &lt;a href=&quot;supported-platforms&quot;&gt;Supported Platforms&lt;/a&gt;.</source>
          <target state="translated">クロスプラットフォームの開発と展開のためにQtを構成するには、ターゲットプラットフォームの開発ツールチェーンを設定する必要があります。この設定は、&lt;a href=&quot;supported-platforms&quot;&gt;サポート&lt;/a&gt;されているプラットフォームによって異なります。</target>
        </trans-unit>
        <trans-unit id="1accdd21abcb118fb19d47858fd3802dff230382" translate="yes" xml:space="preserve">
          <source>To configure Qt for cross-platform development and deployment, the development toolchain for the target platform needs to be set up. This set up varies among the &lt;a href=&quot;supported-platforms#&quot;&gt;Supported Platforms&lt;/a&gt;.</source>
          <target state="translated">クロスプラットフォームの開発とデプロイのためにQtを構成するには、ターゲットプラットフォームの開発ツールチェーンをセットアップする必要があります。このセットアップは、&lt;a href=&quot;supported-platforms#&quot;&gt;サポート&lt;/a&gt;されているプラットフォームによって異なります。</target>
        </trans-unit>
        <trans-unit id="28d7dc8fb66f10c0e99b4aadc3a922818a72a339" translate="yes" xml:space="preserve">
          <source>To configure the behavior of the EGLStream object used by the backend, use the &lt;code&gt;QT_QPA_EGLFS_STREAM_FIFO_LENGTH&lt;/code&gt; environment variable. This assumes that &lt;code&gt;KHR_stream_fifo&lt;/code&gt; is supported by the target system. By default the stream operates in mailbox mode. To switch to FIFO mode, set a value of 1 or greater. The value specifies the maximum number of frames the stream can hold.</source>
          <target state="translated">バックエンドで使用されるEGLStreamオブジェクトの動作を構成するには、 &lt;code&gt;QT_QPA_EGLFS_STREAM_FIFO_LENGTH&lt;/code&gt; 環境変数を使用します。これは、 &lt;code&gt;KHR_stream_fifo&lt;/code&gt; がターゲットシステムでサポートされていることを前提としています。デフォルトでは、ストリームはメールボックスモードで動作します。FIFOモードに切り替えるには、1以上の値を設定します。この値は、ストリームが保持できるフレームの最大数を指定します。</target>
        </trans-unit>
        <trans-unit id="348fe7189be0fc647a0f804a97da34178809c40a" translate="yes" xml:space="preserve">
          <source>To connect an object to the form itself, simply position the cursor over the form and release the mouse button. The end point of the connection changes to the electrical &quot;ground&quot; symbol.</source>
          <target state="translated">オブジェクトをフォーム自体に接続するには、フォームの上にカーソルを置き、マウスボタンを離すだけです。接続の終点は、電気的な「グランド」シンボルに変わります。</target>
        </trans-unit>
        <trans-unit id="ecd4e0bff8add9df7b65d573b18eb28d4f311c11" translate="yes" xml:space="preserve">
          <source>To connect signals to (or receive signals from) dynamically created objects, use the signal &lt;code&gt;connect()&lt;/code&gt; method. See &lt;a href=&quot;qtqml-syntax-signals#connecting-signals-to-methods-and-signals&quot;&gt;Connecting Signals to Methods and Signals&lt;/a&gt; for more information.</source>
          <target state="translated">動的に作成されたオブジェクトに信号を接続する（またはそこから信号を受信する）には、信号の &lt;code&gt;connect()&lt;/code&gt; メソッドを使用します。詳細は&lt;a href=&quot;qtqml-syntax-signals#connecting-signals-to-methods-and-signals&quot;&gt;、メソッドと信号への信号の接続を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b8092fbe768516ca34194cc8702ac92e5d739899" translate="yes" xml:space="preserve">
          <source>To connect the &lt;code&gt;int&lt;/code&gt; version to &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;QSlider::valueChanged&lt;/a&gt;(), the two syntaxes are:</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; バージョンを&lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;QSlider :: valueChanged&lt;/a&gt;（）に接続するには、2つの構文を使用します。</target>
        </trans-unit>
        <trans-unit id="f2c9772a576ce009f821c0e6f9a6307beb2b63fd" translate="yes" xml:space="preserve">
          <source>To connect the &lt;code&gt;query&lt;/code&gt; to the custom node model, we must bind a variable name used in the query to a node in the model. The variable can then be used in the query as a starting node. First, an &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;index&lt;/a&gt; for the desired starting node is retrieved by calling &lt;a href=&quot;qabstractxmlnodemodel#createIndex&quot;&gt;QAbstractXmlNodeModel::createIndex&lt;/a&gt;(). Then the index is bound to a variable name, in this case &lt;code&gt;queryRoot&lt;/code&gt;, by passing the name and the index to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;(). The query can then use a variable reference &lt;code&gt;$queryRoot&lt;/code&gt; to refer to the starting node. Note that if the &lt;a href=&quot;qxmlquery&quot;&gt;query&lt;/a&gt; uses multiple variable references, a call to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;() is required to bind each different variable name to a node in the model.</source>
          <target state="translated">&lt;code&gt;query&lt;/code&gt; をカスタムノードモデルに接続するには、クエリで使用される変数名をモデルのノードにバインドする必要があります。その後、変数をクエリで開始ノードとして使用できます。最初に、&lt;a href=&quot;qabstractxmlnodemodel#createIndex&quot;&gt;QAbstractXmlNodeModel :: createIndex&lt;/a&gt;（）を呼び出して、目的の開始ノードの&lt;a href=&quot;qxmlnodemodelindex&quot;&gt;インデックス&lt;/a&gt;を取得します。次に、名前とインデックスを&lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery :: bindVariable&lt;/a&gt;（）に渡すことにより、インデックスが変数名（この場合は &lt;code&gt;queryRoot&lt;/code&gt; )にバインドされます。その後、クエリは変数参照 &lt;code&gt;$queryRoot&lt;/code&gt; を使用して開始ノードを参照できます。&lt;a href=&quot;qxmlquery&quot;&gt;クエリ&lt;/a&gt;が複数の変数参照を使用する場合、&lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery :: bindVariableの&lt;/a&gt;呼び出しに注意してください（）は、各変数名をモデルのノードにバインドするために必要です。</target>
        </trans-unit>
        <trans-unit id="3cd249ed4ee2223b3e62e75f49e835ae0edc3be2" translate="yes" xml:space="preserve">
          <source>To connect the signal to the slot, we use &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;(). There are several ways to connect signal and slots. The first is to use function pointers:</source>
          <target state="translated">信号をスロットに接続するには、&lt;a href=&quot;qobject#connect&quot;&gt;QObject :: connect&lt;/a&gt;（）を使用します。信号とスロットを接続する方法はいくつかあります。1つは、関数ポインタを使用することです。</target>
        </trans-unit>
        <trans-unit id="c8b762b07916df9d837de8a328a5628b22eb6e9a" translate="yes" xml:space="preserve">
          <source>To connect to an already running object use the following pattern:</source>
          <target state="translated">既に実行中のオブジェクトに接続するには、以下のパターンを使用します。</target>
        </trans-unit>
        <trans-unit id="a19a95cad12632ac72088c619f02487f5d463f9c" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; simply checks that the field's current value doesn't equal the original value (the value it had when &lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; subclasses, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="translated">「入力済み」のフィールドと見なすために、&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;は、フィールドの現在の値が元の値（&lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;（）が呼び出されたときに持っていた値）と等しくないことを単にチェックします。ため&lt;a href=&quot;qlineedit&quot;&gt;にQLineEdit&lt;/a&gt;と&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;サブクラス、&lt;a href=&quot;qwizard&quot;&gt;QWizardは&lt;/a&gt;また、チェックこと&lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput（）は&lt;/a&gt;、任意のバリまたはマスクを尊重するために、真を返します。</target>
        </trans-unit>
        <trans-unit id="2edee2a37dabae580c5126569c51aff2f373155d" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; simply checks that their current value doesn't equal their original value (the value they had before &lt;a href=&quot;qwizardpage#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, it also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="translated">「満たされた」フィールドと見なすために、&lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt;は、現在の値が元の値（&lt;a href=&quot;qwizardpage#initializePage&quot;&gt;initializePage&lt;/a&gt;（）が呼び出される前の値）と等しくないことを確認します。ため&lt;a href=&quot;qlineedit&quot;&gt;にQLineEdit&lt;/a&gt;こと、それはまた、チェック&lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput（）は&lt;/a&gt;、任意のバリまたはマスクを尊重するために、真を返します。</target>
        </trans-unit>
        <trans-unit id="76b5a3e66196dbd5f7ebdd4ef8c7be3b3a548df5" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, QWizard simply checks that the field's current value doesn't equal the original value (the value it had when &lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; subclasses, QWizard also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="translated">フィールドが「塗りつぶされている」と見なすために、QWizardは、フィールドの現在の値が元の値（&lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;（）が呼び出されたときの値）と等しくないことを確認するだけです。ため&lt;a href=&quot;qlineedit&quot;&gt;にQLineEdit&lt;/a&gt;と&lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt;サブクラス、QWizardもチェックこと&lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput（）は&lt;/a&gt;、任意のバリまたはマスクを尊重するために、真を返します。</target>
        </trans-unit>
        <trans-unit id="5912952d7c745121c584651eddefb7924ac9c1ba" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; with content, use &lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument::createTextNode&lt;/a&gt;().</source>
          <target state="translated">構築するには&lt;a href=&quot;qdomtext&quot;&gt;QDomTextを&lt;/a&gt;コンテンツに、使用&lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocumentを::はcreateTextNode&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="244e27a59676038dcc24c3ef5766f53925be31c8" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; reading from a device (e.g. a file), the following can be applied:</source>
          <target state="translated">デバイス（ファイルなど）から読み取る&lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt;を構築するには、以下を適用できます。</target>
        </trans-unit>
        <trans-unit id="c162150a543bb63880b7ef25bc3548b97e779f06" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; with a small body, consider the following snippet (this produces the data shown in the example above):</source>
          <target state="translated">小さなボディで&lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt;を構築するには、次のスニペットを検討してください（これにより、上記の例に示すデータが生成されます）。</target>
        </trans-unit>
        <trans-unit id="963431f81ce778790df3cb6773edd802b35ee198" translate="yes" xml:space="preserve">
          <source>To construct a QDomText with content, use &lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument::createTextNode&lt;/a&gt;().</source>
          <target state="translated">コンテンツを使用してQDomTextを作成するには、&lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument :: createTextNode&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="778f189c751f9ce84b1069045c6ca737c1ad62f0" translate="yes" xml:space="preserve">
          <source>To construct a QHttpPart reading from a device (e.g. a file), the following can be applied:</source>
          <target state="translated">デバイス(ファイルなど)からのQHttpPart読み込みを構築するには、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="99f062544bf5cbb527053196c1c9833980d4c830" translate="yes" xml:space="preserve">
          <source>To construct a QHttpPart with a small body, consider the following snippet (this produces the data shown in the example above):</source>
          <target state="translated">小さなボディを持つ QHttpPart を構築するには、次のスニペットを考えてみましょう (これは上の例で示したデータを生成します)。</target>
        </trans-unit>
        <trans-unit id="cc3c5c1cfcaedc2a4f359dbff663897263086440" translate="yes" xml:space="preserve">
          <source>To construct a URL from an encoded string, you can also use &lt;a href=&quot;qurl#fromEncoded&quot;&gt;fromEncoded&lt;/a&gt;():</source>
          <target state="translated">エンコードされた文字列からURLを構築するには、&lt;a href=&quot;qurl#fromEncoded&quot;&gt;fromEncoded&lt;/a&gt;（）を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="cc38274e52cf92f9d8becfe61f16477fb11af2db" translate="yes" xml:space="preserve">
          <source>To construct an atomic value as element content, enclose an expression in curly braces and embed it in the element constructor:</source>
          <target state="translated">要素の内容として原子値を構築するには、中括弧で式を囲み、要素のコンストラクタに埋め込みます。</target>
        </trans-unit>
        <trans-unit id="9f12a94dd34862c121b6bab97a2a50797526acd9" translate="yes" xml:space="preserve">
          <source>To control how &lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt; responds to being scaled, use the &lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt; property.</source>
          <target state="translated">スケーリングに対する&lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSpriteの&lt;/a&gt;応答を制御するには、&lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt;プロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="d8ffe4846c01194ea5b4edc881b726ed83e75677" translate="yes" xml:space="preserve">
          <source>To control how AnimatedSprite responds to being scaled, use the &lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt; property.</source>
          <target state="translated">AnimatedSpriteがスケーリングにどのように応答するかを制御するには、&lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt;プロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="39b21c078f3d7ab3db5b71cafbe99b4ab2acfbca" translate="yes" xml:space="preserve">
          <source>To control how a scene is rendered, it is necessary to define a &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt; to the &lt;a href=&quot;qml-qtquick3d-view3d#environment-prop&quot;&gt;environment&lt;/a&gt; property.</source>
          <target state="translated">シーンのレンダリング方法を制御するには、&lt;a href=&quot;qml-qtquick3d-view3d#environment-prop&quot;&gt;環境&lt;/a&gt;プロパティに&lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt;を定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="1730513ddae2f7a26cae78ed342aed3becfdf7a6" translate="yes" xml:space="preserve">
          <source>To convert a 3D asset contained in the file &lt;code&gt;testModel.fbx&lt;/code&gt; with &lt;code&gt;balsam&lt;/code&gt; the following command would be used:</source>
          <target state="translated">ファイル &lt;code&gt;testModel.fbx&lt;/code&gt; に含まれる3Dアセットを &lt;code&gt;balsam&lt;/code&gt; で変換するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="f4ad18b3df3f807a463e0902f12c6e38a95cc647" translate="yes" xml:space="preserve">
          <source>To convert a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to and from HICON you can use the QtWinExtras functions QtWin::toHICON() and QtWin::fromHICON() respectively.</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;をHICONとの間で変換するには、QtWinExtras関数QtWin :: toHICON（）およびQtWin :: fromHICON（）をそれぞれ使用できます。</target>
        </trans-unit>
        <trans-unit id="18d2274fe5235c0fee5c295f52b112a8af95aa24" translate="yes" xml:space="preserve">
          <source>To convert a QPixmap to and from HICON you can use the QtWinExtras functions QtWin::toHICON() and QtWin::fromHICON() respectively.</source>
          <target state="translated">QPixmapをHICONに変換するには、QtWinExtras関数QtWin::toHICON()とQtWin::fromHICON()をそれぞれ使用することができます。</target>
        </trans-unit>
        <trans-unit id="253dc35440ac13f2db005b757af6cf58c070a3c3" translate="yes" xml:space="preserve">
          <source>To convert from one of these encodings, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; provides &lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;(), and &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;(). Other encodings are supported through the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; class.</source>
          <target state="translated">これらのエンコーディングの1つから変換するために、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;は&lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;（）、&lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;（）、および&lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;（）を提供します。他のエンコーディングは&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;クラスを通じてサポートされます。</target>
        </trans-unit>
        <trans-unit id="df318eb1dd20da657377e4cf527e4c8ead0624ff" translate="yes" xml:space="preserve">
          <source>To convert from one of these encodings, QString provides &lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;(), and &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;(). Other encodings are supported through the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; class.</source>
          <target state="translated">これらのエンコーディングの1つから変換するために、QStringは&lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;（）、&lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;（）、および&lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;（）を提供します。その他のエンコーディングは、&lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt;クラスを通じてサポートされています。</target>
        </trans-unit>
        <trans-unit id="b9353d8e93b16276c8bb026dfd3b3e0a8224d920" translate="yes" xml:space="preserve">
          <source>To convert the data to a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; use &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString::fromLocal8Bit&lt;/a&gt;().</source>
          <target state="translated">データを&lt;a href=&quot;qstring&quot;&gt;QStringに&lt;/a&gt;変換するには、&lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString :: fromLocal8Bit&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="8c0b98e8d438993f6225ef263a034f987f0f8408" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-controls-splitview&quot;&gt;SplitView&lt;/a&gt; with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="translated">3つのアイテムを持つ&lt;a href=&quot;qml-qtquick-controls-splitview&quot;&gt;SplitView&lt;/a&gt;を作成し、中央のアイテムに余分なスペースを確保するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="2b423b442d54e1a56f6328346069fafe0a0a62a4" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="translated">3つのアイテムを持つ&lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt;を作成し、中央のアイテムに余分なスペースを確保するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="ffe94bae9af82fed893b71a5819fba6ddc4890eb" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;PieMenu&lt;/a&gt; that opens after a long press and selects items upon releasing, you can combine ActivationMode.ActivateOnRelease with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; using a Timer:</source>
          <target state="translated">長押し後に開き、リリース時に項目を選択する&lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;PieMenu&lt;/a&gt;を作成するには、Timerを使用してActivationMode.ActivateOnReleaseと&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;を組み合わせます。</target>
        </trans-unit>
        <trans-unit id="8859e5003561fdd4ad44e9cb0de34fe8e5e72173" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; object, specify the &lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;target&lt;/a&gt; item whose properties are to be modified, and define the new property values or bindings. For example:</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt;オブジェクトを作成するには、プロパティを変更する&lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;ターゲット&lt;/a&gt;アイテムを指定し、新しいプロパティ値またはバインディングを定義します。例えば：</target>
        </trans-unit>
        <trans-unit id="06f2b45a447e4fcc17ba2c84c4c41911d97f6589" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;coordinate&lt;/code&gt; value, use the &lt;a href=&quot;qml-qtpositioning-qtpositioning#coordinate-method&quot;&gt;QtPositioning.coordinate()&lt;/a&gt; function:</source>
          <target state="translated">&lt;code&gt;coordinate&lt;/code&gt; 値を作成するには、&lt;a href=&quot;qml-qtpositioning-qtpositioning#coordinate-method&quot;&gt;QtPositioning.coordinate（）&lt;/a&gt;関数を使用します。</target>
        </trans-unit>
        <trans-unit id="921b58a7a20e4f1f6e42135ab076cba8b29ccca1" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;date&lt;/code&gt; value, specify it as a &quot;YYYY-MM-DDThh:mm:ss.zzzZ&quot; string. (The T is literal, YYYY is a full year number, MM and DD are month and day numbers, hh, mm and ss are hours, minutes and seconds, with .zzz as milliseconds and Z as time-zone offset. The T and following time are optional. If they are omitted, the date is handled as the start of UTC's day, which falls on other dates in some time-zones. When T is included, the :ss.zzz or just .zzz part can be omitted. With or without those, the zone offset can be omitted, in which case local time is used.) For example:</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; 値を作成するには、 &quot;YYYY-MM-DDThh：mm：ss.zzzZ&quot;文字列として指定します。（Tはリテラル、YYYYは通年、MMとDDは月と日、hh、mm、ssは時間、分、秒で、.zzzはミリ秒、Zはタイムゾーンオフセットです。Tと次の時刻はオプションです。省略した場合、日付はUTCの日の開始日として処理され、一部のタイムゾーンでは他の日付に該当します。Tが含まれている場合、：ss.zzzまたは.zzzの部分のみを省略できますこれらの有無にかかわらず、ゾーンオフセットは省略できます。その場合、現地時間が使用されます。例：</target>
        </trans-unit>
        <trans-unit id="446fbb84f53b7754e237f55e86e35f80743230cd" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;geoshape&lt;/code&gt; value, specify it as a &quot;shape()&quot; string:</source>
          <target state="translated">&lt;code&gt;geoshape&lt;/code&gt; 値を作成するには、「shape（）」文字列として指定します。</target>
        </trans-unit>
        <trans-unit id="9cff5a876d89bee729fad48017121368e3590e27" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;point&lt;/code&gt; value, specify it as a &quot;x,y&quot; string:</source>
          <target state="translated">&lt;code&gt;point&lt;/code&gt; 値を作成するには、「x、y」文字列として指定します。</target>
        </trans-unit>
        <trans-unit id="dc6ac9b71a1af4e698659515cce04971a111607e" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;quaternion&lt;/code&gt; value, specify it as a &quot;scalar,x,y,z&quot; string, or define the components individually, or compose it with the Qt.quaternion() function.</source>
          <target state="translated">&lt;code&gt;quaternion&lt;/code&gt; 値を作成するには、「スカラー、x、y、z」の文字列として指定するか、コンポーネントを個別に定義するか、Qt.quaternion（）関数で構成します。</target>
        </trans-unit>
        <trans-unit id="93007e8723c47bd61271059bc879a5378661092f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;rect&lt;/code&gt; value, specify it as a &quot;x, y, width x height&quot; string:</source>
          <target state="translated">&lt;code&gt;rect&lt;/code&gt; 値を作成するには、「x、y、幅x高さ」の文字列として指定します。</target>
        </trans-unit>
        <trans-unit id="aab05e5352707b4948ec04985a6a1ed66e277afe" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;size&lt;/code&gt; value, specify it as a &quot;width x height&quot; string:</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 値を作成するには、「幅x高さ」の文字列として指定します。</target>
        </trans-unit>
        <trans-unit id="8d1593183166c4771a8129d27a6bb4b9d3beda1f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector2d&lt;/code&gt; value, specify it as a &quot;x,y&quot; string, or define the components individually, or compose it with the Qt.vector2d() function.</source>
          <target state="translated">&lt;code&gt;vector2d&lt;/code&gt; 値を作成するには、「x、y」文字列として指定するか、コンポーネントを個別に定義するか、Qt.vector2d（）関数で構成します。</target>
        </trans-unit>
        <trans-unit id="3960ad797c60cbd3e7bdf33fc5e746b5446468ee" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector3d&lt;/code&gt; value, specify it as a &quot;x,y,z&quot; string:</source>
          <target state="translated">&lt;code&gt;vector3d&lt;/code&gt; 値を作成するには、 &quot;x、y、z&quot;文字列として指定します。</target>
        </trans-unit>
        <trans-unit id="ea3ab395d74001dde7ede58d72cb5712d8066d1f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector4d&lt;/code&gt; value, specify it as a &quot;x,y,z,w&quot; string, or define the components individually, or compose it with the Qt.vector4d() function.</source>
          <target state="translated">&lt;code&gt;vector4d&lt;/code&gt; 値を作成するには、「x、y、z、w」文字列として指定するか、コンポーネントを個別に定義するか、Qt.vector4d（）関数で構成します。</target>
        </trans-unit>
        <trans-unit id="931bc162eb1d50eb9ae02820afbe42541cae7513" translate="yes" xml:space="preserve">
          <source>To create a PieMenu that opens after a long press and selects items upon releasing, you can combine ActivationMode.ActivateOnRelease with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; using a Timer:</source>
          <target state="translated">長押しすると開き、リリース時にアイテムを選択するPieMenuを作成するには、タイマーを使用してActivationMode.ActivateOnReleaseを&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;と組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="b76847880760c7c363f15e9343f1b36c20008914" translate="yes" xml:space="preserve">
          <source>To create a PropertyChanges object, specify the &lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;target&lt;/a&gt; item whose properties are to be modified, and define the new property values or bindings. For example:</source>
          <target state="translated">PropertyChangesオブジェクトを作成するには、プロパティを変更する&lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;ターゲット&lt;/a&gt;アイテムを指定し、新しいプロパティ値またはバインディングを定義します。例えば：</target>
        </trans-unit>
        <trans-unit id="0efb198ed1bb9f2dc77d8859c0cf44f9371e2c25" translate="yes" xml:space="preserve">
          <source>To create a QML object from an arbitrary string of QML (instead of a file), use &lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject()&lt;/a&gt;.</source>
          <target state="translated">（ファイルではなく）QMLの任意の文字列からQMLオブジェクトを作成するには、&lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject（）を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="2ecca92c218ee14cfdbeaa52111b3c2c621f45a2" translate="yes" xml:space="preserve">
          <source>To create a SplitView with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="translated">3つの項目を持つSplitViewを作成し、中央の項目に余計なスペースを取らせるには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="b1448f444843668c38d94b9c442de50def080b5b" translate="yes" xml:space="preserve">
          <source>To create a Vulkan surface for a window, or retrieve an existing one, call &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;(). Most platforms will only create the surface via &lt;code&gt;VK_KHR_*_surface&lt;/code&gt; when first calling &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;(), but there may be platform-specific variations in the internal behavior. Once created, subsequent calls to &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;() just return the same handle. This fits the structure of typical Vulkan-enabled &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; subclasses well.</source>
          <target state="translated">ウィンドウのVulkanサーフェスを作成するか、既存のVulkanサーフェスを取得するには、&lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;（）を呼び出します。ほとんどのプラットフォームは、最初に&lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;（）を呼び出したときに &lt;code&gt;VK_KHR_*_surface&lt;/code&gt; surfaceを介してのみサーフェスを作成しますが、内部動作にはプラットフォーム固有のバリエーションがある場合があります。作成された後、&lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;（）を呼び出すと、同じハンドルが返されます。これは、典型的なVulkan対応の&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;サブクラスの構造によく適合します。</target>
        </trans-unit>
        <trans-unit id="864bc9dd34c447162f88d8c6a63ddc7b5eaf9b54" translate="yes" xml:space="preserve">
          <source>To create a completely circular button (the default), use a value that is equal to half of the width or height of the button, and make the button's width and height identical.</source>
          <target state="translated">完全に円形のボタンを作成するには(デフォルト)、ボタンの幅または高さの半分の値を使用し、ボタンの幅と高さを同じにします。</target>
        </trans-unit>
        <trans-unit id="d222d8116ee7c4eec4c4ded1bca4ed02db1502da" translate="yes" xml:space="preserve">
          <source>To create a connection to a Bluetooth service, create a socket of the appropriate type and call &lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;() passing the Bluetooth address and port number. &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; will emit the &lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;connected&lt;/a&gt;() signal when the connection is established.</source>
          <target state="translated">Bluetoothサービスへの接続を作成するには、適切なタイプのソケットを作成し、Bluetoothアドレスとポート番号を渡して&lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;（）を呼び出します。&lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt;は、接続が確立&lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;さ&lt;/a&gt;れると、connected（）シグナルを発行します。</target>
        </trans-unit>
        <trans-unit id="8b81a040b6ad2937b15b7795db85cd2c5caae383" translate="yes" xml:space="preserve">
          <source>To create a connection to a Bluetooth service, create a socket of the appropriate type and call &lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;() passing the Bluetooth address and port number. QBluetoothSocket will emit the &lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;connected&lt;/a&gt;() signal when the connection is established.</source>
          <target state="translated">Bluetoothサービスへの接続を作成するには、適切なタイプのソケットを作成し、Bluetoothアドレスとポート番号を渡して&lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;（）を呼び出します。QBluetoothSocketは、接続が確立されると、接続&lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;された&lt;/a&gt;（）信号を発信します。</target>
        </trans-unit>
        <trans-unit id="92e7bfba5b3728581cb792d4eb623e3460f64694" translate="yes" xml:space="preserve">
          <source>To create a container extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt;. For example:</source>
          <target state="translated">コンテナ拡張を作成するには、拡張クラスが&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtensionの&lt;/a&gt;両方から継承する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="00fbb5ad0c59c8ac9b4f01ebd1f93f25d057af34" translate="yes" xml:space="preserve">
          <source>To create a container extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QDesignerContainerExtension. For example:</source>
          <target state="translated">コンテナ拡張を作成するには、拡張クラスが&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;とQDesignerContainerExtensionの両方から継承する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="50fb15d63ca35b4f3540ad016b3af11e5cc696ba" translate="yes" xml:space="preserve">
          <source>To create a custom task menu extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt;. For example:</source>
          <target state="translated">カスタムタスクメニュー拡張を作成するには、拡張クラスが&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtensionの&lt;/a&gt;両方から継承する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="4e8b8fce88ff1623601a79f66e65dc30fd582225" translate="yes" xml:space="preserve">
          <source>To create a custom task menu extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QDesignerTaskMenuExtension. For example:</source>
          <target state="translated">カスタムタスクメニュー拡張を作成するには、拡張クラスが&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;とQDesignerTaskMenuExtensionの両方から継承する必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="7dc0ea98f1ab1c227f0ea7e83c76fba2411a0cba" translate="yes" xml:space="preserve">
          <source>To create a datagram suitable for sending in a reply, use &lt;a href=&quot;qnetworkdatagram#makeReply&quot;&gt;QNetworkDatagram::makeReply&lt;/a&gt;();</source>
          <target state="translated">返信での送信に適したデータグラムを作成するには、&lt;a href=&quot;qnetworkdatagram#makeReply&quot;&gt;QNetworkDatagram :: makeReply&lt;/a&gt;（）;を使用します。</target>
        </trans-unit>
        <trans-unit id="2c224c1444538d57a11108f65feb0fbea82e4fde" translate="yes" xml:space="preserve">
          <source>To create a document using DOM use code like this:</source>
          <target state="translated">DOM を使用してドキュメントを作成するには、次のようなコードを使用します。</target>
        </trans-unit>
        <trans-unit id="cfecba2b3a6932dcdf4b5f5f9302a7a6d0dea3cb" translate="yes" xml:space="preserve">
          <source>To create a menu, define at least one &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt; as a child of it:</source>
          <target state="translated">メニューを作成するには、少なくとも1つの&lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt;をその子として定義します。</target>
        </trans-unit>
        <trans-unit id="96ca27048ac036978c1baf8a603ee098179432c9" translate="yes" xml:space="preserve">
          <source>To create a parallel state group, pass &lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;QState::ParallelStates&lt;/a&gt; to the &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; constructor.</source>
          <target state="translated">並列状態グループを作成するには、&lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;QState :: ParallelStates&lt;/a&gt;を&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;コンストラクターに渡します。</target>
        </trans-unit>
        <trans-unit id="d56870857a4fba8adcbc11e08fc642fd3808e56f" translate="yes" xml:space="preserve">
          <source>To create a parallel state group, set childMode to &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;.ParallelStates.</source>
          <target state="translated">並列状態グループを作成するには、childModeを&lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; .ParallelStatesに設定します。</target>
        </trans-unit>
        <trans-unit id="7583a1cee4a37ff29efd75ede35bae5ddfacb982" translate="yes" xml:space="preserve">
          <source>To create a property binding, a property is assigned a JavaScript expression that evaluates to the desired value. At its simplest, a binding may be a reference to another property. Take the following example, where the blue &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;'s height is bound to the height of its parent:</source>
          <target state="translated">プロパティバインディングを作成するには、目的の値に評価されるJavaScript式をプロパティに割り当てます。最も単純な場合、バインディングは別のプロパティへの参照である場合があります。青い&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;の高さがその親の高さにバインドされている次の例を見てください。</target>
        </trans-unit>
        <trans-unit id="7c32bf0f82af76f299e99cc0c6bc22c865ecfbf6" translate="yes" xml:space="preserve">
          <source>To create a property sheet extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignerpropertysheetextension&quot;&gt;QDesignerPropertySheetExtension&lt;/a&gt;. Then, since we are implementing an interface, we must ensure that it's made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro:</source>
          <target state="translated">プロパティシート拡張を作成するには、拡張クラスが&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と&lt;a href=&quot;qdesignerpropertysheetextension&quot;&gt;QDesignerPropertySheetExtensionの&lt;/a&gt;両方から継承する必要があります。次に、インターフェースを実装しているので、&lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;（）マクロを使用して、それがメタオブジェクトシステムに認識されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="7f57055df675698dac40098b34eedb81b614fffb" translate="yes" xml:space="preserve">
          <source>To create a property sheet extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QDesignerPropertySheetExtension. Then, since we are implementing an interface, we must ensure that it's made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro:</source>
          <target state="translated">プロパティシート拡張を作成するには、拡張クラスが&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;とQDesignerPropertySheetExtensionの両方から継承する必要があります。次に、インターフェースを実装しているので、&lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;（）マクロを使用してそれがメタオブジェクトシステムに認識されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="d1c4d85861d3b5e5c4ca1fdc4fe7cda2274dda7f" translate="yes" xml:space="preserve">
          <source>To create a relatively square button that has slightly rounded corners, use a small value, such as &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">角がわずかに丸い比較的正方形のボタンを作成するには、 &lt;code&gt;3&lt;/code&gt; などの小さな値を使用します。</target>
        </trans-unit>
        <trans-unit id="06c0d7dbdf6efbf073eacf55224c1c8101c7985c" translate="yes" xml:space="preserve">
          <source>To create a service, do the following steps:</source>
          <target state="translated">サービスを作成するには、次の手順を実行します。</target>
        </trans-unit>
        <trans-unit id="acd78a5e638c557eda155f6a1bd49d0933be844b" translate="yes" xml:space="preserve">
          <source>To create a state, add a &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; object to the item's &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; property, which holds a list of states for that item.</source>
          <target state="translated">状態を作成するには、項目の&lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;状態&lt;/a&gt;のリストを保持する項目の状態プロパティに&lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt;オブジェクトを追加します。</target>
        </trans-unit>
        <trans-unit id="7d0adc8f65d42702c08ca00af4615175e46e786f" translate="yes" xml:space="preserve">
          <source>To create a table of contents for a manual, create a subproject with a &lt;code&gt;type&lt;/code&gt; property and set it to &lt;code&gt;manual&lt;/code&gt;. The page in the documentation referred to by the &lt;code&gt;indexTitle&lt;/code&gt; property must contain a list of links that acts as a table of contents for the whole manual. QDoc will take the information in this list and create a table of contents for the subproject.</source>
          <target state="translated">マニュアルの目次を作成するには、 &lt;code&gt;type&lt;/code&gt; プロパティを使用してサブプロジェクトを作成し、それを &lt;code&gt;manual&lt;/code&gt; に設定します。 &lt;code&gt;indexTitle&lt;/code&gt; プロパティによって参照されるドキュメントのページには、マニュアル全体の目次として機能するリンクのリストが含まれている必要があります。QDocはこのリストの情報を取得し、サブプロジェクトの目次を作成します。</target>
        </trans-unit>
        <trans-unit id="36ea89fb7402d90c4b70f7cc90ff5236b5d88983" translate="yes" xml:space="preserve">
          <source>To create a vertical desktop space (that is, to stack top to bottom instead of left to right), add a &lt;code&gt;virtualDesktopLayout&lt;/code&gt; property after &lt;code&gt;device&lt;/code&gt; with the value of &lt;code&gt;vertical&lt;/code&gt;.</source>
          <target state="translated">垂直のデスクトップスペースを作成するには（つまり、左から右ではなく上から下にスタックするために）、 &lt;code&gt;virtualDesktopLayout&lt;/code&gt; プロパティを &lt;code&gt;device&lt;/code&gt; 後に &lt;code&gt;vertical&lt;/code&gt; の値で追加します。</target>
        </trans-unit>
        <trans-unit id="d3d653b42a97efdcf98a7a0fda0db4a56f6136b7" translate="yes" xml:space="preserve">
          <source>To create an action, use the action editor's &lt;b&gt;New&lt;/b&gt; button, which will then pop up an input dialog. Provide the new action with a &lt;b&gt;Text&lt;/b&gt; -- this is the text that will appear in a menu entry and as the action's tooltip. The text is also automatically added to an &quot;action&quot; prefix, creating the action's &lt;b&gt;Object Name&lt;/b&gt;.</source>
          <target state="translated">アクションを作成するには、アクションエディタの[ &lt;b&gt;新規&lt;/b&gt; ]ボタンを使用します。これにより、入力ダイアログがポップアップ表示されます。新しいアクションに&lt;b&gt;テキスト&lt;/b&gt;を提供します-これは、メニューエントリに表示され、アクションのツールチップとして表示されるテキストです。テキストは自動的に「アクション」プレフィックスに追加され、アクションの&lt;b&gt;オブジェクト名が&lt;/b&gt;作成されます。</target>
        </trans-unit>
        <trans-unit id="2c2a63ae45a1f157ad89e3395b12a12e4c3e9eda" translate="yes" xml:space="preserve">
          <source>To create an animation, use an appropriate animation type for the type of the property that is to be animated, and apply the animation depending on the type of behavior that is required.</source>
          <target state="translated">アニメーションを作成するには、アニメーションを作成するプロパティの種類に応じて適切なアニメーションの種類を使用し、必要な動作の種類に応じてアニメーションを適用します。</target>
        </trans-unit>
        <trans-unit id="b73aa7d03e692976c68c37bf6086ff1f95f7dee2" translate="yes" xml:space="preserve">
          <source>To create an array using &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;, use &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine::newArray&lt;/a&gt;():</source>
          <target state="translated">&lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;を使用して配列を作成するには、&lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine :: newArray&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="7b321f5c5c0c320b77a53e11587413b91cc76b07" translate="yes" xml:space="preserve">
          <source>To create an array using QJSValue, use &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine::newArray&lt;/a&gt;():</source>
          <target state="translated">QJSValueを使用して配列を作成するには、&lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine :: newArray&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="2c6ca0e70f220cea2260c3edfb777a4ff0542ad3" translate="yes" xml:space="preserve">
          <source>To create an axis step, concatenate an axis specifier and a node test. The following sections list the axis specifiers and node tests that are available.</source>
          <target state="translated">軸ステップを作成するには、軸指定子とノードテストを連結します。以下のセクションでは、使用可能な軸指定子とノードテストをリストアップします。</target>
        </trans-unit>
        <trans-unit id="7a0cbeea65a93100732eaf9424fc57d690218111" translate="yes" xml:space="preserve">
          <source>To create an extension you must inherit both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and the appropriate base class, and reimplement its functions. Since we are implementing an interface, we must ensure that it is made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro in the extension class's definition. For example:</source>
          <target state="translated">拡張機能を作成するには、&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;と適切な基本クラスの両方を継承し、その機能を再実装する必要があります。インターフェースを実装しているので、拡張クラスの定義で&lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;（）マクロを使用して、それがメタオブジェクトシステムに認識されるようにする必要があります。例えば：</target>
        </trans-unit>
        <trans-unit id="16848dbe37048f97005540453d734b7b5ef1e5ef" translate="yes" xml:space="preserve">
          <source>To create an iTunes test user, log into &lt;a href=&quot;https://itunesconnect.apple.com&quot;&gt;iTunes Connect&lt;/a&gt;.</source>
          <target state="translated">iTunesテストユーザーを作成するには、&lt;a href=&quot;https://itunesconnect.apple.com&quot;&gt;iTunes Connect&lt;/a&gt;にログインします。</target>
        </trans-unit>
        <trans-unit id="ba4a830997f9fa33e068ab2f25bc6da685931092" translate="yes" xml:space="preserve">
          <source>To create an object type, a QML document should be placed into a text file named as</source>
          <target state="translated">オブジェクト型を作成するためには、QML文書を</target>
        </trans-unit>
        <trans-unit id="01bf512177d18ccb0d1bb9a0b187ebe4a421bbd2" translate="yes" xml:space="preserve">
          <source>To create and edit new forms, open the &lt;b&gt;File&lt;/b&gt; menu and select &lt;b&gt;New Form...&lt;/b&gt; or press &lt;b&gt;Ctrl+N&lt;/b&gt;. Existing forms can also be edited by selecting &lt;b&gt;Open Form...&lt;/b&gt; from the &lt;b&gt;File&lt;/b&gt; menu or pressing &lt;b&gt;Ctrl+O&lt;/b&gt;.</source>
          <target state="translated">新しいフォームを作成および編集するには、&lt;b&gt;[ファイル&lt;/b&gt; ]メニューを開き、[ &lt;b&gt;新しいフォーム...&lt;/b&gt; ]を選択するか、&lt;b&gt;Ctrl + Nを&lt;/b&gt;押します。既存のフォームは、&lt;b&gt;[ファイル&lt;/b&gt; ]メニューから&lt;b&gt;[フォーム&lt;/b&gt;を&lt;b&gt;開く...&lt;/b&gt; ]を選択するか、&lt;b&gt;Ctrl + Oを&lt;/b&gt;押して編集することもできます。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="82a553a6445c668db1d09f8972f4910285e3188c" translate="yes" xml:space="preserve">
          <source>To create events of a custom type, you need to define an event number, which must be greater than &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::User&lt;/a&gt;, and you may need to subclass &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; in order to pass specific information about your custom event. See the &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; documentation for further details.</source>
          <target state="translated">カスタムタイプのイベントを作成するには、&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: User&lt;/a&gt;よりも大きいイベント番号を定義する必要があります。また、カスタムイベントに関する特定の情報を渡すために&lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt;をサブクラス化する必要がある場合があります。詳細については、&lt;a href=&quot;qevent&quot;&gt;QEventの&lt;/a&gt;ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="af56d9217718b5cf4e05ffb77714d10da1c0915a" translate="yes" xml:space="preserve">
          <source>To create instances of a component in code where a &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; instance is not available, you can use &lt;a href=&quot;qqmlengine#qmlContext&quot;&gt;qmlContext&lt;/a&gt;() or &lt;a href=&quot;qqmlengine#qmlEngine&quot;&gt;qmlEngine&lt;/a&gt;(). For example, in the scenario below, child items are being created within a &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; subclass:</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;インスタンスが利用できないコードでコンポーネントのインスタンスを作成するには、&lt;a href=&quot;qqmlengine#qmlContext&quot;&gt;qmlContext&lt;/a&gt;（）または&lt;a href=&quot;qqmlengine#qmlEngine&quot;&gt;qmlEngine&lt;/a&gt;（）を使用できます。たとえば、以下のシナリオでは、&lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;サブクラス内に子アイテムが作成されています。</target>
        </trans-unit>
        <trans-unit id="de6047375051c672814ef78513a6a18676cdc441" translate="yes" xml:space="preserve">
          <source>To create material slots, follow the steps below.</source>
          <target state="translated">材料スロットを作成するには、以下の手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="befc27a6b724ef04ec2e30f8e2ff5432b6395cdf" translate="yes" xml:space="preserve">
          <source>To create models that populate incrementally, you can reimplement &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;() and &lt;a href=&quot;qabstractitemmodel#canFetchMore&quot;&gt;canFetchMore&lt;/a&gt;(). If the reimplementation of &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;() adds rows to the model, &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows()&lt;/a&gt; and &lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows()&lt;/a&gt; must be called.</source>
          <target state="translated">漸増するモデルを作成するには、&lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;（）と&lt;a href=&quot;qabstractitemmodel#canFetchMore&quot;&gt;canFetchMore&lt;/a&gt;（）を再実装します。&lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;（）の再実装により行がモデルに追加される場合、&lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows（）&lt;/a&gt;および&lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows（）&lt;/a&gt;を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="33091be195ce3f51bf1057ca78223889e43d2741" translate="yes" xml:space="preserve">
          <source>To create submenus, declare a Menu as a child of another Menu:</source>
          <target state="translated">サブメニューを作成するには、メニューを別のメニューの子として宣言します。</target>
        </trans-unit>
        <trans-unit id="2767df73cc666fe65bcc4086b7aaa21d6f45d320" translate="yes" xml:space="preserve">
          <source>To create the COM object when the client asks for it the server must export an implementation of a &lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt;. The easist way to do this is to use a set of macros:</source>
          <target state="translated">クライアントがCOMオブジェクトを要求したときにCOMオブジェクトを作成するには、サーバーは&lt;a href=&quot;qaxfactory&quot;&gt;QAxFactoryの&lt;/a&gt;実装をエクスポートする必要があります。これを行う最も簡単な方法は、一連のマクロを使用することです。</target>
        </trans-unit>
        <trans-unit id="dfc05acf1ac011d738c7821397030f760b6e36d9" translate="yes" xml:space="preserve">
          <source>To create these types, mark the pages by providing a &lt;code&gt;type&lt;/code&gt; argument to the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The &lt;code&gt;type&lt;/code&gt; argument is the second argument, with the file name being the first.</source>
          <target state="translated">これらのタイプを作成するには、&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#page-command&quot;&gt;\ page&lt;/a&gt;コマンドに &lt;code&gt;type&lt;/code&gt; 引数を指定して、ページをマークします。 &lt;code&gt;type&lt;/code&gt; 引数は、ファイル名が最初のもので、第二引数です。</target>
        </trans-unit>
        <trans-unit id="0880526ee90e7f77eb6949ffc28800abe78b46cd" translate="yes" xml:space="preserve">
          <source>To create these types, mark the pages by providing a &lt;code&gt;type&lt;/code&gt; argument to the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The &lt;code&gt;type&lt;/code&gt; argument is the second argument, with the file name being the first.</source>
          <target state="translated">これらの型を作成するには、&lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#page-command&quot;&gt;\ page&lt;/a&gt;コマンドに &lt;code&gt;type&lt;/code&gt; 引数を指定してページにマークを付けます。 &lt;code&gt;type&lt;/code&gt; 引数は、ファイル名が最初のもので、第二引数です。</target>
        </trans-unit>
        <trans-unit id="3c36d901d4a220ea1e4fe4a5e1175f092ecd5f53" translate="yes" xml:space="preserve">
          <source>To create this &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; object, we first create the definition file, &lt;code&gt;simpleswitch.rep&lt;/code&gt;. This file describes the properties and methods for the object and is input to the &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; utility which is part of Qt Remote Objects. Only the interfaces that need to be exposed to &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; objects are defined in this file.</source>
          <target state="translated">この&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt;オブジェクトを作成するには、最初に定義ファイル &lt;code&gt;simpleswitch.rep&lt;/code&gt; を作成します。このファイルはオブジェクトのプロパティとメソッドを記述し、Qtリモートオブジェクトの一部である&lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt;ユーティリティへの入力です。このファイルでは、&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;レプリカ&lt;/a&gt;オブジェクトに公開する必要のあるインターフェースのみが定義されています。</target>
        </trans-unit>
        <trans-unit id="6c0f6c8abffbd32c1f421c7de16e9910c36df192" translate="yes" xml:space="preserve">
          <source>To create your own custom effect, create a subclass of &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; (or any other existing effects) and reimplement the virtual function &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). This function is called whenever the effect needs to redraw. The &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function takes the painter with which to draw as an argument. For more information, refer to the documenation for &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). In the &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function you can call &lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmap&lt;/a&gt;() to get a pixmap of the graphics effect source which you can then process.</source>
          <target state="translated">独自のカスタム効果を作成するには、&lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt;（またはその他の既存の効果）のサブクラスを作成し、仮想関数&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;（）を再実装します。この関数は、エフェクトを再描画する必要があるときに呼び出されます。&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;ドロー&lt;/a&gt;（）関数は、引数として描画すると画家をとります。詳細については、&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;ドロー&lt;/a&gt;（）のドキュメントを参照してください。で&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;引き分け&lt;/a&gt;（）関数を使用するには、呼び出すことができ&lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmapを&lt;/a&gt;あなたがして処理できるグラフィックエフェクトソースのピックスマップを取得するために（）。</target>
        </trans-unit>
        <trans-unit id="35dca4752e7d413a58975b36c8c53a1fc8ecdcba" translate="yes" xml:space="preserve">
          <source>To create your own custom effect, create a subclass of QGraphicsEffect (or any other existing effects) and reimplement the virtual function &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). This function is called whenever the effect needs to redraw. The &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function takes the painter with which to draw as an argument. For more information, refer to the documenation for &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). In the &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function you can call &lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmap&lt;/a&gt;() to get a pixmap of the graphics effect source which you can then process.</source>
          <target state="translated">独自のカスタム効果を作成するには、QGraphicsEffect（またはその他の既存の効果）のサブクラスを作成し、仮想関数&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;（）を再実装します。この関数は、エフェクトを再描画する必要があるときに呼び出されます。&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;ドロー&lt;/a&gt;（）関数は、引数として描画すると画家をとります。詳細については、&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;（）のドキュメントを参照してください。で&lt;a href=&quot;qgraphicseffect#draw&quot;&gt;引き分け&lt;/a&gt;（）関数を使用するには、呼び出すことができ&lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmapを&lt;/a&gt;あなたがして処理できるグラフィックエフェクトソースのピックスマップを取得するために（）。</target>
        </trans-unit>
        <trans-unit id="d4dbc39d98a3b7d47d8cd5e1882f44ef08ed68bd" translate="yes" xml:space="preserve">
          <source>To customize the appearance of each &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt; without having to define your own, you can use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#backgroundColor-prop&quot;&gt;backgroundColor&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#selectionColor-prop&quot;&gt;selectionColor&lt;/a&gt; properties. To customize the drop shadow, use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowColor-prop&quot;&gt;shadowColor&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowRadius-prop&quot;&gt;shadowRadius&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowSpread-prop&quot;&gt;shadowSpread&lt;/a&gt; properties.</source>
          <target state="translated">独自に定義することなく各&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt;の外観をカスタマイズするには、&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#backgroundColor-prop&quot;&gt;backgroundColor&lt;/a&gt;プロパティと&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#selectionColor-prop&quot;&gt;selectionColor&lt;/a&gt;プロパティを使用できます。ドロップシャドウをカスタマイズするには、&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowColor-prop&quot;&gt;shadowColor&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowRadius-prop&quot;&gt;shadowRadius&lt;/a&gt;、および&lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowSpread-prop&quot;&gt;shadowSpread&lt;/a&gt;プロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="e70151e99cc8552276a9e1bfec4748811fad93de" translate="yes" xml:space="preserve">
          <source>To debug an executable server, run the application in a debugger and start with the command line parameter &lt;code&gt;-activex&lt;/code&gt;. Then start your client and create an instance of your ActiveX control. COM will use the existing process for the next client trying to create an ActiveX control.</source>
          <target state="translated">実行可能サーバーをデバッグするには、アプリケーションをデバッガーで実行し、コマンドラインパラメーター &lt;code&gt;-activex&lt;/code&gt; で開始します。次に、クライアントを起動して、ActiveXコントロールのインスタンスを作成します。COMは、ActiveXコントロールを作成しようとする次のクライアントに既存のプロセスを使用します。</target>
        </trans-unit>
        <trans-unit id="b1a1422665b0e2d84739cf689a21e64cc0b24f35" translate="yes" xml:space="preserve">
          <source>To debug an in-process server in Visual Studio, set the server project as the active project, and specify a client &quot;executable for debug session&quot; in the project settings (e.g. use the ActiveX Test Container). You can set breakpoints in your code, and also step into &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; and Qt code if you installed the debug version.</source>
          <target state="translated">Visual Studioでインプロセスサーバーをデバッグするには、サーバープロジェクトをアクティブなプロジェクトとして設定し、プロジェクト設定で「デバッグセッション用に実行可能」クライアントを指定します（たとえば、ActiveXテストコンテナーを使用します）。コードにブレークポイントを設定できます。また、デバッグバージョンをインストールした場合は、&lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt;およびQtコードにステップインすることもできます。</target>
        </trans-unit>
        <trans-unit id="48715a0a1aa281de08597b22876c63f4417a3c88" translate="yes" xml:space="preserve">
          <source>To debug an in-process server in Visual Studio, set the server project as the active project, and specify a client &quot;executable for debug session&quot; in the project settings (e.g. use the ActiveX Test Container). You can set breakpoints in your code, and also step into &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; and Qt code if you installed the debug version.</source>
          <target state="translated">Visual Studioでインプロセスサーバーをデバッグするには、サーバープロジェクトをアクティブプロジェクトとして設定し、プロジェクト設定で &quot;デバッグセッションで実行可能&quot;なクライアントを指定します（ActiveXテストコンテナーを使用するなど）。コードにブレークポイントを設定し、デバッグバージョンをインストールした場合は、&lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt;およびQtコードにステップインすることもできます。</target>
        </trans-unit>
        <trans-unit id="8d6d53607b2d75e2cb48061d7d53b8d5288cd9cd" translate="yes" xml:space="preserve">
          <source>To debug your server run it with -dumpidl outputfile and check where it crashes.</source>
          <target state="translated">サーバをデバッグするには、-dumpidl outputfile で実行して、どこでクラッシュしているかを確認してください。</target>
        </trans-unit>
        <trans-unit id="66a5e71f4fa016e8b6a5350a6e3f9f3601bcbb0c" translate="yes" xml:space="preserve">
          <source>To declare a property, use the &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY()&lt;/a&gt; macro in a class that inherits &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;.</source>
          <target state="translated">プロパティを宣言するために、使用&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY（）&lt;/a&gt;継承するクラス内のマクロを&lt;a href=&quot;qobject&quot;&gt;QObjectを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0360b68c626ea835bebf2bfc518b0780d95c3cfa" translate="yes" xml:space="preserve">
          <source>To define a buddy widget for a label, click on the label, drag the connection to another widget on the form, and release the mouse button. The connection shown indicates how input focus is passed to the buddy widget. You can use the form preview to test the connections between each label and its buddy.</source>
          <target state="translated">ラベルにバディ・ウィジェットを定義するには、ラベルをクリックし、フォーム上の別のウィジェットに接続をドラッグして、マウスボタンを離します。表示されている接続は、入力フォーカスがバディウィジェットにどのように渡されるかを示しています。フォームプレビューを使用して、各ラベルとバディ間の接続をテストすることができます。</target>
        </trans-unit>
        <trans-unit id="636712b0cb3960110f9c8112889e686d6afb6ed4" translate="yes" xml:space="preserve">
          <source>To define a class use the &lt;code&gt;class&lt;/code&gt; keyword, followed by the name you want for your type, and then enclose your API in brackets like so</source>
          <target state="translated">クラスを定義するには、 &lt;code&gt;class&lt;/code&gt; キーワードを使用し、その後に型に付ける名前を続け、APIを次のように角かっこで囲みます。</target>
        </trans-unit>
        <trans-unit id="12c2b34290a4cd4461c82e19bbc59fd22df515c8" translate="yes" xml:space="preserve">
          <source>To define a drawing area in the Canvas item set the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; properties. For example, the following code creates a Canvas item which has a drawing area with a height of 100 pixels and width of 200 pixels:</source>
          <target state="translated">Canvasアイテムで描画領域を定義するには、 &lt;code&gt;width&lt;/code&gt; プロパティと &lt;code&gt;height&lt;/code&gt; プロパティを設定します。たとえば、次のコードは、高さ100ピクセル、幅200ピクセルの描画領域を持つCanvasアイテムを作成します。</target>
        </trans-unit>
        <trans-unit id="521230a25b19adab50149f1de957e5e1778d2cc1" translate="yes" xml:space="preserve">
          <source>To define multiple Transitions, specify &lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item::transitions&lt;/a&gt; as a list:</source>
          <target state="translated">複数のトランジションを定義するには、&lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item :: transitions&lt;/a&gt;をリストとして指定します。</target>
        </trans-unit>
        <trans-unit id="237460d82f046cee21b9f4e182de5fb34d4888f3" translate="yes" xml:space="preserve">
          <source>To define multiple transitions, specify &lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item::transitions&lt;/a&gt; as a list:</source>
          <target state="translated">複数の遷移を定義するには、&lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item :: transitions&lt;/a&gt;をリストとして指定します。</target>
        </trans-unit>
        <trans-unit id="cdd1aa6229fc5dc07c802818527d5d2a5d325dc1" translate="yes" xml:space="preserve">
          <source>To define the layout direction for a particular locale, declare the dedicated string literal &lt;code&gt;QT_LAYOUT_DIRECTION&lt;/code&gt; in context &lt;code&gt;QGuiApplication&lt;/code&gt; as either &quot;LTR&quot; or &quot;RTL&quot;.</source>
          <target state="translated">特定のロケールのレイアウト方向を定義するには、専用の文字列リテラル &lt;code&gt;QT_LAYOUT_DIRECTION&lt;/code&gt; をコンテキスト &lt;code&gt;QGuiApplication&lt;/code&gt; で &quot;LTR&quot;または &quot;RTL&quot;として宣言します。</target>
        </trans-unit>
        <trans-unit id="8c602695b2e00e6ebc1596ab8c081b2992c0e3ee" translate="yes" xml:space="preserve">
          <source>To delete a page, select &lt;b&gt;Delete Page&lt;/b&gt; from the toolbox widget's context menu.</source>
          <target state="translated">ページを削除するには、ツールボックスウィジェットのコンテキストメニューから&lt;b&gt;[ページの削除]を&lt;/b&gt;選択します。</target>
        </trans-unit>
        <trans-unit id="9c2e5b9cf85294ed97eb4f2b0a49a9baddaa0e1d" translate="yes" xml:space="preserve">
          <source>To delete a tab:</source>
          <target state="translated">タブを削除します。</target>
        </trans-unit>
        <trans-unit id="3b8e9e0d2d5bb873a528c34b89848f84f1c67828" translate="yes" xml:space="preserve">
          <source>To demonstrate how data can be retrieved from a model, using model indexes, we set up a &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; without a view and display the names of files and directories in a widget. Although this does not show a normal way of using a model, it demonstrates the conventions used by models when dealing with model indexes.</source>
          <target state="translated">モデルインデックスを使用してモデルからデータを取得する方法を示すために、ビューなしで&lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;を設定し、ウィジェットにファイルとディレクトリの名前を表示します。これはモデルの通常の使用方法を示していませんが、モデルインデックスを処理するときにモデルが使用する規則を示しています。</target>
        </trans-unit>
        <trans-unit id="23bb4f43022105d83bee84cf85192d718e4022d0" translate="yes" xml:space="preserve">
          <source>To demonstrate some of the principal features of selections, we construct an instance of a custom table model with 32 items in total, and open a table view onto its data:</source>
          <target state="translated">選択肢の主な機能のいくつかを示すために、合計32項目のカスタムテーブルモデルのインスタンスを構築し、そのデータ上でテーブルビューを開きます。</target>
        </trans-unit>
        <trans-unit id="232c2ad79105d729fe63e677713ea96eafbdd588" translate="yes" xml:space="preserve">
          <source>To demonstrate the core functionality of the State Machine API, let's look at a small example: A state machine with three states, &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;. The state machine is controlled by a single &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;; when the button is clicked, the machine transitions to another state. Initially, the state machine is in state &lt;code&gt;s1&lt;/code&gt;. The statechart for this machine is as follows:</source>
          <target state="translated">三つの状態、とステート・マシン：ステートマシンAPI、小さな例で見てみましょうのコア機能を実証するために、 &lt;code&gt;s1&lt;/code&gt; 、 &lt;code&gt;s2&lt;/code&gt; および &lt;code&gt;s3&lt;/code&gt; 。状態マシンは単一の&lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;によって制御されます。ボタンをクリックすると、マシンは別の状態に移行します。最初、状態マシンは状態 &lt;code&gt;s1&lt;/code&gt; にあります。このマシンのステートチャートは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7d8c504baae60f12e60b66ca8ae4d452e033a100" translate="yes" xml:space="preserve">
          <source>To demonstrate the core functionality of the State Machine API, let's look at an example: A state machine with three states, &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;. The state machine is controlled by a single Button; when the button is clicked, the machine transitions to another state. Initially, the state machine is in state &lt;code&gt;s1&lt;/code&gt;. The following is a state chart showing the different states in our example.</source>
          <target state="translated">ステートマシンAPIのコア機能を示すために、例を見てみましょう： &lt;code&gt;s1&lt;/code&gt; 、 &lt;code&gt;s2&lt;/code&gt; 、および &lt;code&gt;s3&lt;/code&gt; の 3つの状態を持つステートマシン。ステートマシンは1つのボタンで制御されます。ボタンをクリックすると、マシンは別の状態に移行します。最初、状態マシンは状態 &lt;code&gt;s1&lt;/code&gt; にあります。以下は、この例のさまざまな状態を示す状態チャートです。</target>
        </trans-unit>
        <trans-unit id="9aade4445c4a9f13cd4201b65b8311a26873dcf8" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create a simple Calculator Form application. It is based on the original &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-calculatorform-example.html#&quot;&gt;Calculator Form&lt;/a&gt; example.</source>
          <target state="translated">実例として、簡単な電卓フォームアプリケーションを作成します。これは、元の&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-calculatorform-example.html#&quot;&gt;計算機フォームの&lt;/a&gt;例に基づいています。</target>
        </trans-unit>
        <trans-unit id="be9ebb34f019d1e33e69290ec15981a99521eab0" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create a simple Calculator Form application. It is based on the original &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-calculatorform-example.html&quot;&gt;Calculator Form&lt;/a&gt; example.</source>
          <target state="translated">実例を示すために、簡単な電卓フォームアプリケーションを作成します。これは、元の&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-calculatorform-example.html&quot;&gt;電卓フォームの&lt;/a&gt;例に基づいています。</target>
        </trans-unit>
        <trans-unit id="b09875b7d23305c526572d4b5302c7b3d8cdfb7e" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create two instances of our previously defined component and set the first one to have focus. The intention is that when the &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, or &lt;code&gt;C&lt;/code&gt; keys are pressed, the first of the two components receives the event and responds accordingly.</source>
          <target state="translated">実例として、前に定義したコンポーネントの2つのインスタンスを作成し、最初のインスタンスにフォーカスを設定します。その目的は、 &lt;code&gt;A&lt;/code&gt; 、 &lt;code&gt;B&lt;/code&gt; 、または &lt;code&gt;C&lt;/code&gt; キーが押されたときに、2つのコンポーネントの最初のコンポーネントがイベントを受け取り、それに応じて応答することです。</target>
        </trans-unit>
        <trans-unit id="76075a4bd6a74d00cf7c9622503b3219a28c1c87" translate="yes" xml:space="preserve">
          <source>To demonstrate, we use the Qt Widgets animation easing example.</source>
          <target state="translated">実証のために、Qt Widgetsのアニメーション緩和の例を使用します。</target>
        </trans-unit>
        <trans-unit id="77915c725f4e90ed2d82ab53947eb39c04d3e920" translate="yes" xml:space="preserve">
          <source>To describe algorithmic complexity, we use the following terminology, based on the &quot;big Oh&quot; notation:</source>
          <target state="translated">アルゴリズミックな複雑さを表現するために、&quot;big Oh &quot;表記法に基づいた以下の用語を使用しています。</target>
        </trans-unit>
        <trans-unit id="3d7889216337e1c79e0a700cf9e93146ec92e9c1" translate="yes" xml:space="preserve">
          <source>To detect other failures check the output of &lt;a href=&quot;qpainter#begin&quot;&gt;QPainter::begin&lt;/a&gt;() or &lt;a href=&quot;qprinter#newPage&quot;&gt;QPrinter::newPage&lt;/a&gt;().</source>
          <target state="translated">他の障害を検出するには、&lt;a href=&quot;qprinter#newPage&quot;&gt;QPainter :: &lt;/a&gt;&lt;a href=&quot;qpainter#begin&quot;&gt;begin&lt;/a&gt;（）またはQPrinter :: newPage（）の出力を確認してください。</target>
        </trans-unit>
        <trans-unit id="f5b57b0e303bce0cb02dc3888fc360ece9199c40" translate="yes" xml:space="preserve">
          <source>To detect value changes made in the UI layer you can connect to the &lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() signal. However, note that &lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() is &lt;b&gt;NOT&lt;/b&gt; emitted when changes are made by calling &lt;a href=&quot;qqmlpropertymap#insert&quot;&gt;insert&lt;/a&gt;() or &lt;a href=&quot;qqmlpropertymap#clear&quot;&gt;clear&lt;/a&gt;() - it is only emitted when a value is updated from QML.</source>
          <target state="translated">UIレイヤーで行われた値の変更を検出するには、&lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;（）信号に接続できます。ただし、&lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;（）は、&lt;a href=&quot;qqmlpropertymap#insert&quot;&gt;insert&lt;/a&gt;（）または&lt;a href=&quot;qqmlpropertymap#clear&quot;&gt;clear&lt;/a&gt;（）を呼び出して変更が加えられた場合は発行され&lt;b&gt;ません&lt;/b&gt;。QMLから値が更新された場合にのみ発行されます。</target>
        </trans-unit>
        <trans-unit id="de0644713aee6e242015906cdf56846e10af46eb" translate="yes" xml:space="preserve">
          <source>To determine the attributes of the font actually used in the window system, use a &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; object, e.g.</source>
          <target state="translated">ウィンドウシステムで実際に使用されているフォントの属性を確認するには、&lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt;オブジェクトを使用します。</target>
        </trans-unit>
        <trans-unit id="27687f31e3222b2c704e422d9733df4344fbb379" translate="yes" xml:space="preserve">
          <source>To determine the length of the array, access the &lt;code&gt;&quot;length&quot;&lt;/code&gt; property. To access array elements, use the &lt;a href=&quot;qjsvalue#property-1&quot;&gt;property&lt;/a&gt;(quint32 arrayIndex) overload. The following code reads the array we created above back into a list:</source>
          <target state="translated">配列の長さを確認するには、 &lt;code&gt;&quot;length&quot;&lt;/code&gt; プロパティにアクセスします。配列要素にアクセスするには、&lt;a href=&quot;qjsvalue#property-1&quot;&gt;プロパティ&lt;/a&gt;（quint32 arrayIndex）オーバーロードを使用します。次のコードは、上記で作成した配列を読み取り、リストに戻します。</target>
        </trans-unit>
        <trans-unit id="db9bf2959b33b982ef422645bf01dc26957ebbf2" translate="yes" xml:space="preserve">
          <source>To determine the number of rows affected by a non-&lt;code&gt;SELECT&lt;/code&gt; statement, use &lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt;().</source>
          <target state="translated">非 &lt;code&gt;SELECT&lt;/code&gt; ステートメントの影響を受ける行数を判別するには、&lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="49b00d09d8a313538503ace48ff3400c58d6d26d" translate="yes" xml:space="preserve">
          <source>To determine the projection of this camera a high level API is provided. First it is possible to position this Camera like any other spatial Node in the scene. This determines where the Camera is in the scene, and what direction it is facing. The default direction of the camera is such that the forward vector is looking up the +Z axis, and the up direction vector is up the +Y axis. With this in mind any transformation applied to the camera as well as the transformations inherited from it's parent Nodes you can define exactly where and in what direction your camera is facing.</source>
          <target state="translated">このカメラの投影を決定するために、高レベルのAPIが提供されています。最初に、シーン内の他の空間ノードのようにこのカメラを配置することができます。これにより、カメラがシーン内のどこにあり、どの方向を向いているかが決定されます。カメラのデフォルトの方向は、前方ベクトルが+Z軸を見上げ、上方向ベクトルが+Y軸を見上げるようになっています。このことを考慮して、カメラに適用された変換や親ノードから継承された変換を使用することで、カメラがどこに、どの方向を向いているかを正確に定義することができます。</target>
        </trans-unit>
        <trans-unit id="d50e263753d1f900b27c6ac2089f568e593da545" translate="yes" xml:space="preserve">
          <source>To determine the projection of this camera a high level API is provided. First it is possible to position this Camera like any other spatial Node in the scene. This determines where the Camera is in the scene, and what direction it is facing. The default direction of the camera is such that the forward vector is looking up the -Z axis, and the up direction vector is up the +Y axis. With this in mind any transformation applied to the camera as well as the transformations inherited from it's parent Nodes you can define exactly where and in what direction your camera is facing.</source>
          <target state="translated">このカメラの投影を決定するために、高レベルのAPIが提供されています。最初に、シーン内の他の空間ノードのようにこのカメラを配置することができます。これにより、カメラがシーン内のどこにあり、どの方向を向いているかが決定されます。カメラのデフォルトの方向は、前方ベクトルが-Z軸を見上げ、上方向ベクトルが+Y軸を見上げるようになっています。このことを考慮して、カメラに適用された変換や親ノードから継承された変換を使用することで、カメラがどこに、どの方向を向いているかを正確に定義することができます。</target>
        </trans-unit>
        <trans-unit id="8d4e793c01ffa7b30f31211ea3ee05fb08ef4b77" translate="yes" xml:space="preserve">
          <source>To determine what a &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; refers to, the</source>
          <target state="translated">&lt;a href=&quot;qxmlname&quot;&gt;QXmlNameが&lt;/a&gt;何を参照しているかを判断するには、</target>
        </trans-unit>
        <trans-unit id="78370ad8e10a5f1550b0917e4db21701059e835e" translate="yes" xml:space="preserve">
          <source>To determine what a QXmlName refers to, the</source>
          <target state="translated">QXmlNameが何を参照しているかを決定するには</target>
        </trans-unit>
        <trans-unit id="0de072ff5a4f8f5f27c0ba6ad638c7dc42698c91" translate="yes" xml:space="preserve">
          <source>To determine whether a database driver supports a given feature, use &lt;a href=&quot;qsqldriver#hasFeature&quot;&gt;QSqlDriver::hasFeature&lt;/a&gt;(). In the following example, we call &lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery::size&lt;/a&gt;() to determine the size of a result set of the underlying database supports that feature; otherwise, we navigate to the last record and use the query's position to tell us how many records there are.</source>
          <target state="translated">データベースドライバーが特定の機能をサポートしているかどうかを確認するには、&lt;a href=&quot;qsqldriver#hasFeature&quot;&gt;QSqlDriver :: hasFeature&lt;/a&gt;（）を使用します。次の例では、&lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery :: size&lt;/a&gt;（）を呼び出して、基になるデータベースの結果セットのサイズを判別し、その機能をサポートしています。それ以外の場合は、最後のレコードに移動し、クエリの位置を使用してレコードの数を通知します。</target>
        </trans-unit>
        <trans-unit id="f4af566d30f9855053a412d6a6ed49be993f0f25" translate="yes" xml:space="preserve">
          <source>To determine whether an error has occurred, check to see if &lt;a href=&quot;qgeocodereply#error&quot;&gt;QGeoCodeReply::error&lt;/a&gt;() is equal to &lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply::NoError&lt;/a&gt;.</source>
          <target state="translated">エラーが発生したかどうかを判断するには、&lt;a href=&quot;qgeocodereply#error&quot;&gt;QGeoCodeReply :: error&lt;/a&gt;（）が&lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply :: NoError&lt;/a&gt;と等しいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="19dc0f738286f03277cfbb373d2c0e42a2d0d5d7" translate="yes" xml:space="preserve">
          <source>To determine whether an error has occurred, check to see if &lt;a href=&quot;qgeoroutereply#error&quot;&gt;QGeoRouteReply::error&lt;/a&gt;() is equal to &lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply::NoError&lt;/a&gt;.</source>
          <target state="translated">エラーが発生したかどうかを判断するには、&lt;a href=&quot;qgeoroutereply#error&quot;&gt;QGeoRouteReply :: error&lt;/a&gt;（）が&lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply :: NoError&lt;/a&gt;と等しいかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="52b2a8072d68cae4cf0f13521a3d55d8424c8bbb" translate="yes" xml:space="preserve">
          <source>To develop a simple application from scratch, see &lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html&quot;&gt;Qt Creator: Creating a Mobile Application&lt;/a&gt;.</source>
          <target state="translated">簡単なアプリケーションを最初から開発するには、&lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html&quot;&gt;Qt Creator：モバイルアプリケーションの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dd8152693b302591b8d689ea068dbe289b5fc1db" translate="yes" xml:space="preserve">
          <source>To develop a simple application from scratch, see &lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html#&quot;&gt;Creating a Mobile Application&lt;/a&gt;.</source>
          <target state="translated">単純なアプリケーションを最初から開発するには、「&lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html#&quot;&gt;モバイルアプリケーションの作成」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="115328fb8e6fff6dfba67f71c74424a9e9df69ae" translate="yes" xml:space="preserve">
          <source>To develop style aware widgets (i.e., widgets that conform to the style in which they are drawn), you need to draw them using the current style. This document shows how widgets draw themselves and which possibilities the style gives them.</source>
          <target state="translated">スタイルを意識したウィジェット (つまり、描画されるスタイルに準拠したウィジェット)を開発するには、現在のスタイルを使用してウィジェットを描画する必要があります。このドキュメントでは、ウィジェットがどのように描画されるか、そしてスタイルが与える可能性を示します。</target>
        </trans-unit>
        <trans-unit id="2b86c4e12dd9a51c3f35a31b2899bdd694654762" translate="yes" xml:space="preserve">
          <source>To disable SSL support in a Qt build, configure Qt with the &lt;code&gt;-no-openssl&lt;/code&gt; option.</source>
          <target state="translated">QtビルドでSSLサポートを無効にするには、 &lt;code&gt;-no-openssl&lt;/code&gt; オプションを使用してQtを構成します。</target>
        </trans-unit>
        <trans-unit id="00554aac225254a9ce5222c7ed4391aff07828aa" translate="yes" xml:space="preserve">
          <source>To disable all blacklisting, set the environment variable &lt;code&gt;QT_NO_OPENGL_BUGLIST&lt;/code&gt; to any value. This will skip reading any configuration files, and instead will assume that nothing is disabled, regardless of the driver or OS.</source>
          <target state="translated">すべてのブラックリストを無効にするには、環境変数 &lt;code&gt;QT_NO_OPENGL_BUGLIST&lt;/code&gt; を任意の値に設定します。これにより、構成ファイルの読み取りがスキップされ、代わりに、ドライバーまたはOSに関係なく、何も無効になっていないと見なされます。</target>
        </trans-unit>
        <trans-unit id="81d326b8d2456c6feacc013bacffe0ed2bbd45d1" translate="yes" xml:space="preserve">
          <source>To disable mouse events for an item (i.e., make it transparent for mouse events), call setAcceptedMouseButtons(0).</source>
          <target state="translated">アイテムのマウスイベントを無効にする(すなわち、マウスイベントに対して透過的にする)には、setAcceptedMouseButtons(0)を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b323854ba1ebb3dd7a8e3314eb85590755efe9ec" translate="yes" xml:space="preserve">
          <source>To disable the use of a proxy for this socket, use the &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::NoProxy&lt;/a&gt; proxy type:</source>
          <target state="translated">このソケットのプロキシの使用を無効にするには、&lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy :: NoProxy&lt;/a&gt;プロキシタイプを使用します。</target>
        </trans-unit>
        <trans-unit id="9d00c974ae095cff55f1135181e516df84f9953e" translate="yes" xml:space="preserve">
          <source>To disable the use of a proxy, use the &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::NoProxy&lt;/a&gt; proxy type:</source>
          <target state="translated">プロキシの使用を無効にするには、&lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy :: NoProxy&lt;/a&gt;プロキシタイプを使用します。</target>
        </trans-unit>
        <trans-unit id="6dbeb4bca6a5e3a208cf1d780f1d01de04b0e20e" translate="yes" xml:space="preserve">
          <source>To discard all standard output from the process, pass &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;() here. This is more efficient than simply never reading the standard output, as no &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; buffers are filled.</source>
          <target state="translated">プロセスからすべての標準出力を破棄するには、ここに&lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;（）を渡します。これは、&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;バッファーがいっぱいにならないため、標準出力を単に読み取らないよりも効率的です。</target>
        </trans-unit>
        <trans-unit id="3f52aad99eec4bf9b20f309412e90176296e7a48" translate="yes" xml:space="preserve">
          <source>To discover the nearby Bluetooth devices:</source>
          <target state="translated">近くにあるBluetoothデバイスを発見するために。</target>
        </trans-unit>
        <trans-unit id="a534004bdb54ac02295d4f983cabcde4eb345542" translate="yes" xml:space="preserve">
          <source>To display the given search results use the &lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt; or build up your own one if you need more advanced functionality. Note that the &lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt; can not be instantiated directly, you must retrieve the widget from the search engine in use as all connections will be established for you by the widget itself.</source>
          <target state="translated">特定の検索結果を表示するには、&lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt;を使用するか、より高度な機能が必要な場合は独自の検索結果を作成します。&lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt;は直接インスタンス化できないことに注意してください。すべての接続はウィジェット自体によって確立されるため、使用中の検索エンジンからウィジェットを取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="102f27f6d0599b8edbfb7de3b776e4fbfe0f4450" translate="yes" xml:space="preserve">
          <source>To display the graphical scene defined by the QML document, it may be loaded with &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt;. For simple UI files such as this one, select &lt;b&gt;File &amp;gt; New File or Project &amp;gt; Applications &amp;gt; Qt Quick UI&lt;/b&gt; from within Qt Creator.</source>
          <target state="translated">QMLドキュメントで定義されたグラフィカルシーンを表示するには、&lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;QtCreatorを&lt;/a&gt;ロードします。このような単純なUIファイルの場合は、&lt;b&gt;QtCreator&lt;/b&gt;内から[&lt;b&gt;ファイル]&amp;gt; [新しいファイル]または[プロジェクト]&amp;gt; [アプリケーション]&amp;gt; [QtクイックUI]を選択&lt;/b&gt;します。</target>
        </trans-unit>
        <trans-unit id="72881948bb70802fc5e2383d56e72743a5d55d28" translate="yes" xml:space="preserve">
          <source>To display the graphical scene defined by the QML document, it may be loaded with &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html#&quot;&gt;Qt Creator&lt;/a&gt;. For simple UI files such as this one, select &lt;b&gt;File &amp;gt; New File or Project &amp;gt; Applications &amp;gt; Qt Quick UI&lt;/b&gt; from within Qt Creator.</source>
          <target state="translated">QMLドキュメントで定義されたグラフィックシーンを表示するには、&lt;a href=&quot;http://doc.qt.io/qtcreator/index.html#&quot;&gt;Qt Creatorを使用して&lt;/a&gt;ロードできます。このような単純なUIファイルの場合、Qt Creator内から[ &lt;b&gt;ファイル]&amp;gt; [新規ファイル]または[プロジェクト]&amp;gt; [アプリケーション]&amp;gt; [QtクイックUI]を選択&lt;/b&gt;します。</target>
        </trans-unit>
        <trans-unit id="9f8ca203f4829cb4103f45cd63e96a58a7425c29" translate="yes" xml:space="preserve">
          <source>To display the movie in your application, you can pass your &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; object to &lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel::setMovie&lt;/a&gt;(). Example:</source>
          <target state="translated">アプリケーションでムービーを表示するには、&lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt;オブジェクトを&lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel :: setMovie&lt;/a&gt;（）に渡します。例：</target>
        </trans-unit>
        <trans-unit id="e38862d58a567650c791ee0ffc0709d24086b6ae" translate="yes" xml:space="preserve">
          <source>To display the movie in your application, you can pass your QMovie object to &lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel::setMovie&lt;/a&gt;(). Example:</source>
          <target state="translated">アプリケーションでムービーを表示するには、QMovieオブジェクトを&lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel :: setMovie&lt;/a&gt;（）に渡すことができます。例：</target>
        </trans-unit>
        <trans-unit id="677ecf257c36ecf7200ecb35423451235ef61e86" translate="yes" xml:space="preserve">
          <source>To distinguish the</source>
          <target state="translated">を区別するために</target>
        </trans-unit>
        <trans-unit id="27ef7c0db92cc246e83e1d7fc6053acb2ddf2c72" translate="yes" xml:space="preserve">
          <source>To distribute the available space according to the space requirement of each column or row, call the view's &lt;a href=&quot;qtableview#resizeColumnsToContents&quot;&gt;resizeColumnsToContents&lt;/a&gt;() or &lt;a href=&quot;qtableview#resizeRowsToContents&quot;&gt;resizeRowsToContents&lt;/a&gt;() functions.</source>
          <target state="translated">各列または行のスペース要件に従って使用可能なスペースを配分するには、ビューの&lt;a href=&quot;qtableview#resizeColumnsToContents&quot;&gt;resizeColumnsToContents&lt;/a&gt;（）または&lt;a href=&quot;qtableview#resizeRowsToContents&quot;&gt;resizeRowsToContents&lt;/a&gt;（）関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="564faa3728a2dbdfd8744cb9fa46aeeaf3d47734" translate="yes" xml:space="preserve">
          <source>To do this, you have to switch to &lt;b&gt;Edit Signals/Slots&lt;/b&gt; mode, either by pressing &lt;b&gt;F4&lt;/b&gt; or selecting &lt;b&gt;Edit Signals/Slots&lt;/b&gt; from the &lt;b&gt;Edit&lt;/b&gt; menu.</source>
          <target state="translated">これを行うには、&lt;b&gt;F4&lt;/b&gt;キーを押すか、[ &lt;b&gt;編集&lt;/b&gt; ]メニューから[ &lt;b&gt;信号/スロット&lt;/b&gt;の&lt;b&gt;編集&lt;/b&gt; ]を選択して、&lt;b&gt;信号/スロットの編集&lt;/b&gt;モードに切り替える必要があります。&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="54de2ad84d48d9d7c293176637193c14b489bca0" translate="yes" xml:space="preserve">
          <source>To document a QML type, start by creating a QDoc comment that uses the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\qmltype&lt;/a&gt; command as its topic command.</source>
          <target state="translated">QMLタイプを文書化するには、まず、&lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\ qmltype&lt;/a&gt;コマンドをトピックコマンドとして使用するQDocコメントを作成します。</target>
        </trans-unit>
        <trans-unit id="7c71083be4241c38fade29157a7f49b40af4be41" translate="yes" xml:space="preserve">
          <source>To document a QML type, start by creating a QDoc comment that uses the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\qmltype&lt;/a&gt; command as its topic command.</source>
          <target state="translated">QMLタイプを文書化するには、トピックコマンドとして&lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\ qmltype&lt;/a&gt;コマンドを使用するQDocコメントを作成することから始めます。</target>
        </trans-unit>
        <trans-unit id="f09b990f013f9bdb513270267d1b6915af145c9e" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Linux, follow the instructions on the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">Qt for Linuxをダウンロードしてインストールするには、&lt;a href=&quot;gettingstarted&quot;&gt;「Qt入門&lt;/a&gt;」ページの手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="ca2d5583409e2053223dec82c1cab6ebcd21b467" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Linux, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">Linux用Qtをダウンロードしてインストールするには、&lt;a href=&quot;gettingstarted#&quot;&gt;Qtの&lt;/a&gt;概要ページの指示に従ってください。</target>
        </trans-unit>
        <trans-unit id="ac66d564b4bd5e705f72559279700303f6deffa0" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Windows, follow the instructions on the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">Qt for Windowsをダウンロードしてインストールするには、&lt;a href=&quot;gettingstarted&quot;&gt;「Qt入門&lt;/a&gt;」ページの手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="6222aa165b9921f7e413be9611472ca48c9069c7" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Windows, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">Qt for Windowsをダウンロードしてインストールするには、Qt &lt;a href=&quot;gettingstarted#&quot;&gt;入門&lt;/a&gt;ページの指示に従ってください。</target>
        </trans-unit>
        <trans-unit id="ecbd3f268c12a5a8ac1e94c135a30447563187f4" translate="yes" xml:space="preserve">
          <source>To download and install Qt for macOS, follow the instructions on the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">Qt for macOSをダウンロードしてインストールするには、&lt;a href=&quot;gettingstarted&quot;&gt;「Qt入門&lt;/a&gt;」ページの手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="04e9609377770feedc94c407c90ced6c69ada91b" translate="yes" xml:space="preserve">
          <source>To download and install Qt for macOS, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">macOS用のQtをダウンロードしてインストールするには、&lt;a href=&quot;gettingstarted#&quot;&gt;Qtの&lt;/a&gt;概要ページの指示に従ってください。</target>
        </trans-unit>
        <trans-unit id="0d6a8eb87459e3bf1e33d477cc4243f493dd3a9c" translate="yes" xml:space="preserve">
          <source>To draw an arc or circle, call the arcTo(</source>
          <target state="translated">円弧や円を描くには arcTo()を呼び出します。</target>
        </trans-unit>
        <trans-unit id="bb88c81ea3b00b5582ff3d8ba43dda532cb5c1f9" translate="yes" xml:space="preserve">
          <source>To draw images, load them by calling the Canvas's &lt;a href=&quot;qml-qtquick-canvas#loadImage-method&quot;&gt;loadImage()&lt;/a&gt; method and then request to paint them in the &lt;code&gt;onImageLoaded&lt;/code&gt; handler.</source>
          <target state="translated">画像を描画するには、Canvasの&lt;a href=&quot;qml-qtquick-canvas#loadImage-method&quot;&gt;loadImage（）&lt;/a&gt;メソッドを呼び出して画像をロードし、 &lt;code&gt;onImageLoaded&lt;/code&gt; ハンドラーで画像の描画を要求します。</target>
        </trans-unit>
        <trans-unit id="42cfe2184a40f7a2069a19c867e30c635c56ee3b" translate="yes" xml:space="preserve">
          <source>To draw its up and down arrows, &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; uses the &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinUp&lt;/a&gt; and &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinDown&lt;/a&gt; primitive elements. Here's how to reimplement the &lt;a href=&quot;qstyle#drawPrimitive&quot;&gt;drawPrimitive&lt;/a&gt;() function to draw them differently:</source>
          <target state="translated">上矢印と下矢印を描画するために、&lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;は&lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinUp&lt;/a&gt;および&lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinDown&lt;/a&gt;プリミティブ要素を使用します。&lt;a href=&quot;qstyle#drawPrimitive&quot;&gt;drawPrimitive&lt;/a&gt;（）関数を再実装してそれらを異なる方法で描画する方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c451f286685115955e2bed890f44a94ede197e03" translate="yes" xml:space="preserve">
          <source>To dynamically load a component defined in a QML file, call the &lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent()&lt;/a&gt; function in the &lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt object&lt;/a&gt;. This function takes the URL of the QML file as its only argument and creates a &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; object from this URL.</source>
          <target state="translated">QMLファイルで定義されたコンポーネントを動的にロードするには、&lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qtオブジェクトの&lt;/a&gt;&lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent（）&lt;/a&gt;関数を呼び出します。この関数は、QMLファイルのURLを唯一の引数として取り、このURLから&lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="097167f467a3974c7e89c1530d65692536a62c49" translate="yes" xml:space="preserve">
          <source>To emit a signal, invoke it as a method. Any relevant &lt;a href=&quot;#signal-handler-attributes&quot;&gt;signal handlers&lt;/a&gt; will be invoked when the signal is emitted, and handlers can use the defined signal argument names to access the respective arguments.</source>
          <target state="translated">シグナルを発信するには、それをメソッドとして呼び出します。&lt;a href=&quot;#signal-handler-attributes&quot;&gt;シグナルが発行&lt;/a&gt;されると、関連するシグナルハンドラーが呼び出され、ハンドラーは定義されたシグナル引数名を使用してそれぞれの引数にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="3f53c889f6ba19e5274fd287be550737e561bab0" translate="yes" xml:space="preserve">
          <source>To emit a signal, invoke it as a method. Any relevant &lt;a href=&quot;qtqml-syntax-objectattributes#signal-handler-attributes&quot;&gt;signal handlers&lt;/a&gt; will be invoked when the signal is emitted, and handlers can use the defined signal argument names to access the respective arguments.</source>
          <target state="translated">信号を発信するには、メソッドとして呼び出します。&lt;a href=&quot;qtqml-syntax-objectattributes#signal-handler-attributes&quot;&gt;シグナルが発行&lt;/a&gt;されると、関連するシグナルハンドラーが呼び出され、ハンドラーは定義されたシグナル引数名を使用してそれぞれの引数にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="d19a580f99381c23f452ddf3c4869e73c2d081ca" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; to be partially transparent, it needs to be stacked on top of all other widgets. This means you cannot have other widgets partially covering the chart when using accelerated series.</source>
          <target state="translated">有効にするには&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidgetを&lt;/a&gt;部分的に透明であることを、それは他のすべてのウィジェットの上に積み重ねることが必要です。つまり、加速シリーズを使用する場合、チャートを部分的にカバーする他のウィジェットを持つことはできません。</target>
        </trans-unit>
        <trans-unit id="d98b5aa396be67022f1fb6f335f462dbdb0bc253" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to do anti-aliased rendering, use &lt;a href=&quot;qquickpainteditem#setAntialiasing&quot;&gt;setAntialiasing&lt;/a&gt;().</source>
          <target state="translated">有効にするには&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt;アンチエイリアスレンダリング、利用を行うに&lt;a href=&quot;qquickpainteditem#setAntialiasing&quot;&gt;setAntialiasingを&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="7a2c22ee8c5d7f52e6d31deb54a373b18ea48e62" translate="yes" xml:space="preserve">
          <source>To enable &lt;code&gt;tslib&lt;/code&gt; support, set the &lt;code&gt;QT_QPA_EGLFS_TSLIB&lt;/code&gt; (for &lt;code&gt;eglfs&lt;/code&gt;) or &lt;code&gt;QT_QPA_FB_TSLIB&lt;/code&gt; (for &lt;code&gt;linuxfb&lt;/code&gt;) environment variable to 1. To change the device, set the &lt;code&gt;TSLIB_TSDEVICE&lt;/code&gt; environment variable or pass the device name on the command-line. Note that the &lt;code&gt;tslib&lt;/code&gt; input handler generates mouse events and supports single touch only, as opposed to &lt;code&gt;evdevtouch&lt;/code&gt; which generates true multi-touch &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt; events too.</source>
          <target state="translated">&lt;code&gt;tslib&lt;/code&gt; サポートを有効にするには、 &lt;code&gt;QT_QPA_EGLFS_TSLIB&lt;/code&gt; （ &lt;code&gt;eglfs&lt;/code&gt; の場合）または &lt;code&gt;QT_QPA_FB_TSLIB&lt;/code&gt; （ &lt;code&gt;linuxfb&lt;/code&gt; の場合）環境変数を1に設定します。デバイスを変更するには、 &lt;code&gt;TSLIB_TSDEVICE&lt;/code&gt; 環境変数を設定するか、コマンドラインでデバイス名を渡します。真のマルチタッチ&lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt;イベントも生成する &lt;code&gt;evdevtouch&lt;/code&gt; とは対照的に、 &lt;code&gt;tslib&lt;/code&gt; 入力ハンドラーはマウスイベントを生成し、シングルタッチのみをサポートすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5f9dd6084e73aed0c0f059a5ad3f096b6a66d2b1" translate="yes" xml:space="preserve">
          <source>To enable OpenGL rendering, you simply set a new &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; as the viewport of &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; by calling &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView::setViewport&lt;/a&gt;(). If you want OpenGL with antialiasing, you need to set a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; with the needed sample count (see &lt;a href=&quot;qsurfaceformat#setSamples&quot;&gt;QSurfaceFormat::setSamples&lt;/a&gt;()).</source>
          <target state="translated">OpenGLのレンダリングを有効にするには、単に新しい設定&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;のビューポートとして&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsViewを&lt;/a&gt;呼び出すことによって&lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView :: SETVIEWPORT&lt;/a&gt;（）。アンチエイリアスを使用したOpenGLが必要な場合は、必要なサンプル数で&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;を設定する必要があります（&lt;a href=&quot;qsurfaceformat#setSamples&quot;&gt;QSurfaceFormat :: setSamples&lt;/a&gt;（）を参照）。</target>
        </trans-unit>
        <trans-unit id="874dfcc9fdaac3126976065732207effa2ed47e3" translate="yes" xml:space="preserve">
          <source>To enable OpenGL rendering, you simply set a new QGLWidget as the viewport of &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; by calling &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView::setViewport&lt;/a&gt;(). If you want OpenGL with antialiasing, you need OpenGL sample buffer support (see QGLFormat::sampleBuffers()).</source>
          <target state="translated">OpenGLのレンダリングを有効にするには、単にのビューポートなどの新たなQGLWidget設定&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsViewを&lt;/a&gt;呼び出すことによって&lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView :: SETVIEWPORT&lt;/a&gt;（）。アンチエイリアスを使用したOpenGLが必要な場合は、OpenGLサンプルバッファーのサポートが必要です（QGLFormat :: sampleBuffers（）を参照）。</target>
        </trans-unit>
        <trans-unit id="2338d65334f9a13bbbe546f8b507c5dc7534dc1d" translate="yes" xml:space="preserve">
          <source>To enable Qt Multimedia Widgets in a project, add this directive into the C++ files:</source>
          <target state="translated">プロジェクトでQtマルチメディアウィジェットを有効にするには、このディレクティブをC++ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="4e0ae11fd48c631a5df540e6fb36da76c615182e" translate="yes" xml:space="preserve">
          <source>To enable Qt SQL in a project, add this directive into the C++ files:</source>
          <target state="translated">プロジェクトで Qt SQL を有効にするには、このディレクティブを C++ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="0645941442dc24eb4ff90f94b85df46b24b4017d" translate="yes" xml:space="preserve">
          <source>To enable Qt Test in a project, add this directive into the C++ files:</source>
          <target state="translated">プロジェクトで Qt Test を有効にするには、このディレクティブを C++ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="5873c6978dbf0682c31f63e9b19264330fefbb6c" translate="yes" xml:space="preserve">
          <source>To enable a project to be built in both modes, you must add the &lt;code&gt;debug_and_release&lt;/code&gt; option to the &lt;code&gt;CONFIG&lt;/code&gt; variable:</source>
          <target state="translated">両方のモードで構築するプロジェクトを有効にするには、追加する必要があり &lt;code&gt;debug_and_release&lt;/code&gt; のにオプションを &lt;code&gt;CONFIG&lt;/code&gt; の変数：</target>
        </trans-unit>
        <trans-unit id="1ff46e8bef769bb8c1125621845ba41087f769a1" translate="yes" xml:space="preserve">
          <source>To enable additional layers and extensions, provide the list via &lt;a href=&quot;qvulkaninstance#setLayers&quot;&gt;setLayers&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#setExtensions&quot;&gt;setExtensions&lt;/a&gt;()</source>
          <target state="translated">追加のレイヤーと拡張機能を有効にするには、&lt;a href=&quot;qvulkaninstance#setLayers&quot;&gt;setLayers&lt;/a&gt;（）および&lt;a href=&quot;qvulkaninstance#setExtensions&quot;&gt;setExtensions&lt;/a&gt;（）を介してリストを提供します</target>
        </trans-unit>
        <trans-unit id="1162d7488e2af5b103ab4a85a8b657fc5cbb32da" translate="yes" xml:space="preserve">
          <source>To enable again, assign a new &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt;:</source>
          <target state="translated">再度有効にするには、新しい&lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaserを&lt;/a&gt;割り当てます。</target>
        </trans-unit>
        <trans-unit id="fb1b03533866db9af8f9e815ab69ee74ae46631a" translate="yes" xml:space="preserve">
          <source>To enable also the pasting of clipboard content from JavaScript, use &lt;a href=&quot;qml-qtwebengine-webenginesettings#javascriptCanPaste-prop&quot;&gt;javascriptCanPaste&lt;/a&gt;.</source>
          <target state="translated">JavaScriptからのクリップボードコンテンツの貼り付けも有効にするには、&lt;a href=&quot;qml-qtwebengine-webenginesettings#javascriptCanPaste-prop&quot;&gt;javascriptCanPasteを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="5e494c85ec970020aa3c30dc3d670c62740b7ecf" translate="yes" xml:space="preserve">
          <source>To enable background running, uncomment &lt;code&gt;android.app.background_running&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt; and set it to true (&lt;code&gt;android:value=&quot;true&quot;&lt;/code&gt; ).</source>
          <target state="translated">バックグラウンド実行を有効にするには、 &lt;code&gt;android.app.background_running&lt;/code&gt; &lt;code&gt;meta-data&lt;/code&gt; コメントを外してtrueに設定します（ &lt;code&gt;android:value=&quot;true&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d1272d72ae29a37e07175c513526c2874f40b62e" translate="yes" xml:space="preserve">
          <source>To enable creation of objects at run-time, call the &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;() template function to register it with the meta-object system. This also makes the type available for queued signal-slot communication as long as you call it before you make the first connection that uses the type.</source>
          <target state="translated">実行時にオブジェクトの作成を有効にするには、&lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;（）テンプレート関数を呼び出して、オブジェクトをメタオブジェクトシステムに登録します。これにより、そのタイプを使用する最初の接続を行う前にそのタイプを呼び出す限り、キューに入れられた信号スロット通信でタイプを使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="25a6f872882df17687b295bad80c78ef3d2c7a2f" translate="yes" xml:space="preserve">
          <source>To enable debugging -- from the start or to attach a debugger later on -- start the application with the following arguments:</source>
          <target state="translated">デバッグを有効にするには --最初から、または後でデバッガをアタッチするには --以下の引数を指定してアプリケーションを起動します。</target>
        </trans-unit>
        <trans-unit id="96c5d6206105cb45573d8cfe9d7139cb5ebf2537" translate="yes" xml:space="preserve">
          <source>To enable editing in your model, you must also implement &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt;(), and reimplement &lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;flags&lt;/a&gt;() to ensure that &lt;code&gt;ItemIsEditable&lt;/code&gt; is returned. You can also reimplement &lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;headerData&lt;/a&gt;() and &lt;a href=&quot;qabstractitemmodel#setHeaderData&quot;&gt;setHeaderData&lt;/a&gt;() to control the way the headers for your model are presented.</source>
          <target state="translated">モデルで編集を有効にするには、&lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt;（）を実装し、&lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;フラグ&lt;/a&gt;（）を再実装して、 &lt;code&gt;ItemIsEditable&lt;/code&gt; が確実に返されるようにする必要があります。モデルのヘッダーの表示方法を制御するために、&lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;headerData&lt;/a&gt;（）および&lt;a href=&quot;qabstractitemmodel#setHeaderData&quot;&gt;setHeaderData&lt;/a&gt;（）を再実装することもできます。</target>
        </trans-unit>
        <trans-unit id="b9415e3b27fdbb1b4e2e9fbaffb3b077af4dba7f" translate="yes" xml:space="preserve">
          <source>To enable in process screen readers, all events must be sent after the change has happened.</source>
          <target state="translated">プロセス中のスクリーンリーダを有効にするには、変更が起こった後にすべてのイベントを送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="6dac4223acdd40a1f7d7d600929c6a6cbb9c901d" translate="yes" xml:space="preserve">
          <source>To enable item dragging, set the view's &lt;a href=&quot;qabstractitemview#dragEnabled-prop&quot;&gt;dragEnabled&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">アイテムのドラッグを有効にするには、ビューの&lt;a href=&quot;qabstractitemview#dragEnabled-prop&quot;&gt;dragEnabled&lt;/a&gt;プロパティを &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="7b5a0e6494560eaf4882048760b2cf78e36cad80" translate="yes" xml:space="preserve">
          <source>To enable multisampling, set the number of requested samples on the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; that is passed to &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;(). On systems that do not support it the request may get ignored.</source>
          <target state="translated">マルチサンプリングを有効にするには、要求されたサンプルの数を、&lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;（）に渡される&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;で設定します。これをサポートしていないシステムでは、要求が無視される場合があります。</target>
        </trans-unit>
        <trans-unit id="142605f19b421aaaa0c5c63389e30bd395f0d471" translate="yes" xml:space="preserve">
          <source>To enable other devices to find your service, create a &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; with the applicable attributes for your service and register it using &lt;a href=&quot;qbluetoothserviceinfo#registerService&quot;&gt;QBluetoothServiceInfo::registerService&lt;/a&gt;(). Call &lt;a href=&quot;qbluetoothserver#serverPort&quot;&gt;serverPort&lt;/a&gt;() to get the channel number that is being used.</source>
          <target state="translated">他のデバイスがサービスを見つけられるようにするには、サービスに適切な属性を持つ&lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt;を作成し、&lt;a href=&quot;qbluetoothserviceinfo#registerService&quot;&gt;QBluetoothServiceInfo :: registerService&lt;/a&gt;（）を使用して登録します。&lt;a href=&quot;qbluetoothserver#serverPort&quot;&gt;serverPort&lt;/a&gt;（）を呼び出して、使用されているチャネル番号を取得します。</target>
        </trans-unit>
        <trans-unit id="1dec42b7d3cbb49bb6c6601b169b4fbf45629b6d" translate="yes" xml:space="preserve">
          <source>To enable the &lt;a href=&quot;qhelpengine&quot;&gt;QHelpEngine&lt;/a&gt; to retrieve the proper documentation to a given link, every documentation set has to have a unique identifier. A unique identifier also makes it possible for the help collection to keep track of a documentation set without relying on its file name. The Qt help system uses a namespace as identifier which is defined by the mandatory namespace tags. In the example above, the namespace is &quot;mycompany.com.myapplication.1.0&quot;.</source>
          <target state="translated">&lt;a href=&quot;qhelpengine&quot;&gt;QHelpEngine&lt;/a&gt;が特定のリンクへの適切なドキュメントを取得できるようにするには、すべてのドキュメントセットに一意の識別子が必要です。一意の識別子により、ヘルプコレクションは、ファイル名に依存せずにドキュメントセットを追跡することもできます。Qtヘルプシステムは、必須の名前空間タグによって定義される識別子として名前空間を使用します。上記の例では、名前空間は「mycompany.com.myapplication.1.0」です。</target>
        </trans-unit>
        <trans-unit id="2ed4fa65eb80d4af0440920652a583c187b1053c" translate="yes" xml:space="preserve">
          <source>To enable the user to interact with an accessible object the object must implement &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; in addition to &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt;. Objects that support selections can define actions to change the selection.</source>
          <target state="translated">ユーザーがユーザー&lt;a href=&quot;qaccessibleactioninterface&quot;&gt;補助&lt;/a&gt;オブジェクトと対話できるようにするには、オブジェクトにQAccessibleInterfaceに加えて&lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleActionInterfaceを&lt;/a&gt;実装する必要があります。選択をサポートするオブジェクトは、選択を変更するアクションを定義できます。</target>
        </trans-unit>
        <trans-unit id="d7b309bd1d9bfd39692f28a10a2ed791b10269b9" translate="yes" xml:space="preserve">
          <source>To enable the user to interact with an accessible object the object must implement &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; in addition to QAccessibleInterface. Objects that support selections can define actions to change the selection.</source>
          <target state="translated">ユーザーがアクセス可能なオブジェクトと対話できるようにするには、オブジェクトは&lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleInterface&lt;/a&gt;に加えてQAccessibleActionInterfaceを実装する必要があります。選択をサポートするオブジェクトは、選択を変更するアクションを定義できます。</target>
        </trans-unit>
        <trans-unit id="8b9a2ff5d07ec13b638513a8fbcd2ebc9ff4a2ab" translate="yes" xml:space="preserve">
          <source>To enable the user to move the items around within the view, we must set the list widget's &lt;a href=&quot;qabstractitemview#dragDropMode-prop&quot;&gt;dragDropMode&lt;/a&gt;:</source>
          <target state="translated">ユーザーがビュー内でアイテムを移動できるようにするには、リストウィジェットの&lt;a href=&quot;qabstractitemview#dragDropMode-prop&quot;&gt;dragDropModeを&lt;/a&gt;設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="ab021340b3b0172776086379b98cd71af66d1eb3" translate="yes" xml:space="preserve">
          <source>To enable this feature in a top-level widget, set its &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_TranslucentBackground&lt;/a&gt; attribute with &lt;a href=&quot;qwidget#setAttribute&quot;&gt;setAttribute&lt;/a&gt;() and ensure that its background is painted with non-opaque colors in the regions you want to be partially transparent.</source>
          <target state="translated">トップレベルのウィジェットでこの機能を有効にするには、その&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_TranslucentBackground&lt;/a&gt;属性を&lt;a href=&quot;qwidget#setAttribute&quot;&gt;setAttribute&lt;/a&gt;（）で設定し、部分的に透明にする領域でその背景が不透明でない色でペイントされていることを確認します。</target>
        </trans-unit>
        <trans-unit id="9125277fa312542eb22ae73faebcbfe60bb02a28" translate="yes" xml:space="preserve">
          <source>To enable this instead of directly using OpenGL, the following environment variables can be used:</source>
          <target state="translated">OpenGLを直接使用するのではなく、これを有効にするには、以下の環境変数を使用することができます。</target>
        </trans-unit>
        <trans-unit id="3bd0ffcf560e599409a5dc4562e76e194ff7437b" translate="yes" xml:space="preserve">
          <source>To enable this model, use the command-line argument &lt;code&gt;--process-per-site&lt;/code&gt;. See &lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;Using Command-Line Arguments&lt;/a&gt;.</source>
          <target state="translated">このモデルを有効にするには、コマンドライン引数 &lt;code&gt;--process-per-site&lt;/code&gt; を使用します。&lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;コマンドライン引数の使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="93808c402beed6e0eeca237097cf151794335cb6" translate="yes" xml:space="preserve">
          <source>To enable use of &lt;a href=&quot;qgraphicsitem#qgraphicsitem_cast&quot;&gt;qgraphicsitem_cast&lt;/a&gt;() with a custom item, reimplement this function and declare a Type enum value equal to your custom item's type. Custom items must return a value larger than or equal to &lt;a href=&quot;qgraphicsitem#anonymous-enum&quot;&gt;UserType&lt;/a&gt; (65536).</source>
          <target state="translated">カスタムアイテムで&lt;a href=&quot;qgraphicsitem#qgraphicsitem_cast&quot;&gt;qgraphicsitem_cast&lt;/a&gt;（）の使用を有効にするには、この関数を再実装し、カスタムアイテムのタイプと等しいType列挙値を宣言します。カスタムアイテムは、&lt;a href=&quot;qgraphicsitem#anonymous-enum&quot;&gt;UserType&lt;/a&gt;（65536）以上の値を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="f4536380ce40a5e2a04b3479d6ae865efb72d096" translate="yes" xml:space="preserve">
          <source>To enable user interaction with the pie chart, some basic signals are emitted when users click pie slices or hover the mouse over them.</source>
          <target state="translated">ユーザーが円グラフとの対話を可能にするために、ユーザーが円グラフをクリックしたり、円グラフの上にマウスを置いたりすると、いくつかの基本的な信号が発信されます。</target>
        </trans-unit>
        <trans-unit id="ab2ceb31dac20e8ca1b52170d124221fb2753b95" translate="yes" xml:space="preserve">
          <source>To ensure that drawing operations are as fast as possible, &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; and its subclasses have public data members. See the &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; class documentation for details on how to use it.</source>
          <target state="translated">描画操作を可能な限り高速にするために、&lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;とそのサブクラスにはパブリックデータメンバーがあります。使用方法の詳細については、&lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;クラスのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="62ff9df43f53693353d70e441423a5dcc7762b1e" translate="yes" xml:space="preserve">
          <source>To ensure that operations with &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; are efficient, e.g., copying names and comparing them, each instance of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; is associated with a &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, which must be specified at &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; construction time. The three components of the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;, i.e., the namespace URI, the local name, and the prefix, are stored in the name pool mapped to identifiers so they can be shared. For this reason, the only way to create a valid instance of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; is to use the class constructor, where the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, local name, namespace URI, and prefix must all be specified.</source>
          <target state="translated">&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;での操作が効率的であることを保証するために、たとえば名前をコピーしてそれらを比較するために、&lt;a href=&quot;qxmlname&quot;&gt;QXmlNameの&lt;/a&gt;各インスタンスは&lt;a href=&quot;qxmlnamepool&quot;&gt;名前プールに&lt;/a&gt;関連付けられます。名前プールは&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;構築時に指定する必要があります。&lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;の3つのコンポーネント、つまり名前空間URI、ローカル名、および接頭辞は、識別子にマップされた名前プールに格納されるため、それらを共有できます。このため、&lt;a href=&quot;qxmlname&quot;&gt;QXmlNameの&lt;/a&gt;有効なインスタンスを作成する唯一の方法は、クラスコンストラクターを使用することです。この場合、&lt;a href=&quot;qxmlnamepool&quot;&gt;名前プール&lt;/a&gt;、ローカル名、名前空間URI、およびプレフィックスをすべて指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f94d91a6637c2d7910589b0e301a66529e1daf40" translate="yes" xml:space="preserve">
          <source>To ensure that operations with QXmlName are efficient, e.g., copying names and comparing them, each instance of QXmlName is associated with a &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, which must be specified at QXmlName construction time. The three components of the QXmlName, i.e., the namespace URI, the local name, and the prefix, are stored in the name pool mapped to identifiers so they can be shared. For this reason, the only way to create a valid instance of QXmlName is to use the class constructor, where the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, local name, namespace URI, and prefix must all be specified.</source>
          <target state="translated">名前のコピーや比較など、QXmlNameを使用した操作が効率的であることを確認するために、QXmlNameの各インスタンスは、QXmlNameの構築時に指定する必要がある&lt;a href=&quot;qxmlnamepool&quot;&gt;名前プールに&lt;/a&gt;関連付けられます。QXmlNameの3つのコンポーネント、つまり名前空間URI、ローカル名、およびプレフィックスは、共有できるように識別子にマップされた名前プールに格納されます。このため、QXmlNameの有効なインスタンスを作成する唯一の方法は、クラスコンストラクターを使用することです。このコンストラクターでは、&lt;a href=&quot;qxmlnamepool&quot;&gt;名前プール&lt;/a&gt;、ローカル名、名前空間URI、およびプレフィックスをすべて指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6e1e730033532e279b8bb13f9ebfce5ed261932d" translate="yes" xml:space="preserve">
          <source>To ensure that the documentation remains synchronized with the source file, a substring of the line must be specified as an argument to the command. Note that the command considers the rest of the line as part of its argument, make sure to follow the substring with a line break.</source>
          <target state="translated">ドキュメントがソースファイルと同期したままであることを保証するために、 コマンドの引数に行の部分文字列を指定しなければなりません。コマンドは行の残りの部分を引数の一部として考慮することに注意してください。</target>
        </trans-unit>
        <trans-unit id="c960442894010c156bf4de0977ded475c3d7f3df" translate="yes" xml:space="preserve">
          <source>To ensure that the message box does not pop up until the geometry actually reaches its final value, we can use the state's &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned()&lt;/a&gt; signal. The &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned()&lt;/a&gt; signal will be emitted when the property is assigned its final value, whether this is done immediately or after the animation has finished playing.</source>
          <target state="translated">ジオメトリが実際に最終値に達するまでメッセージボックスがポップアップしないようにするには、状態の&lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned（）&lt;/a&gt;シグナルを使用できます。&lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned（）&lt;/a&gt;プロパティがその最終値に割り当てられている場合、信号は、これが直ちに又はアニメーションが完成した演奏を有する後に行われているかどうか、放出されます。</target>
        </trans-unit>
        <trans-unit id="118964b2fdc07e7f94eb8e772a998b79aad17afb" translate="yes" xml:space="preserve">
          <source>To ensure that the popup is positioned within the bounds of the enclosing window, the &lt;a href=&quot;qml-qtquick-controls2-menu#margins&quot;&gt;margins&lt;/a&gt; property can be set to a non-negative value.</source>
          <target state="translated">ポップアップが囲んでいるウィンドウの境界内に配置されるようにするには、&lt;a href=&quot;qml-qtquick-controls2-menu#margins&quot;&gt;margins&lt;/a&gt;プロパティを負でない値に設定できます。</target>
        </trans-unit>
        <trans-unit id="aa264dc11e8254e6035f6eb159af438b211901dc" translate="yes" xml:space="preserve">
          <source>To ensure that the popup is positioned within the bounds of the enclosing window, the &lt;a href=&quot;qml-qtquick-controls2-popup#margins-prop&quot;&gt;margins&lt;/a&gt; property can be set to a non-negative value.</source>
          <target state="translated">ポップアップが外側のウィンドウの境界内に配置されるようにするには、&lt;a href=&quot;qml-qtquick-controls2-popup#margins-prop&quot;&gt;margins&lt;/a&gt;プロパティを負でない値に設定できます。</target>
        </trans-unit>
        <trans-unit id="9089db3084e6a9ad462d32cf5c7c0d599a312f2d" translate="yes" xml:space="preserve">
          <source>To ensure that the representation of the data is kept separate from the way it is accessed, the concept of a</source>
          <target state="translated">データの表現がアクセスの仕方から切り離されていることを保証するために</target>
        </trans-unit>
        <trans-unit id="7d445470a3e92e5406abb78858f44adbe012d74e" translate="yes" xml:space="preserve">
          <source>To ensure that they are laid out exactly like this in your program, you need to place these widgets into a layout. We will do this in groups of three. Select the &quot;RED&quot; label. Then, hold down &lt;b&gt;Ctrl&lt;/b&gt; while you select its corresponding spin box and slider. In the &lt;b&gt;Form&lt;/b&gt; menu, select &lt;b&gt;Lay Out in a Grid&lt;/b&gt;.</source>
          <target state="translated">プログラムでこれらがこのように正確にレイアウトされるようにするには、これらのウィジェットをレイアウトに配置する必要があります。これは3人ずつのグループで行います。「RED」ラベルを選択します。次に、&lt;b&gt;Ctrl&lt;/b&gt;キーを押しながら、対応するスピンボックスとスライダーを選択します。で&lt;b&gt;フォームの&lt;/b&gt;メニュー、選択&lt;b&gt;グリッドでレイアウト&lt;/b&gt;。</target>
        </trans-unit>
        <trans-unit id="98260433cee8dca3516df592d80a0c6b941bb6b0" translate="yes" xml:space="preserve">
          <source>To ensure that we can use the user interface, we need to include the header file that &lt;code&gt;uic&lt;/code&gt; generates before referring to &lt;code&gt;Ui::CalculatorForm&lt;/code&gt;:</source>
          <target state="translated">ユーザーインターフェイスを確実に使用できるようにするには、 &lt;code&gt;Ui::CalculatorForm&lt;/code&gt; を参照する前に、 &lt;code&gt;uic&lt;/code&gt; が生成するヘッダーファイルを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="fcd3f4c31c7641a86a5b31694e3f5f50d29a0881" translate="yes" xml:space="preserve">
          <source>To ensure that writers aren't blocked forever by readers, readers attempting to obtain a lock will not succeed if there is a blocked writer waiting for access, even if the lock is currently only accessed by other readers. Also, if the lock is accessed by a writer and another writer comes in, that writer will have priority over any readers that might also be waiting.</source>
          <target state="translated">ライターが読者に永遠にブロックされないようにするために、ロックを取得しようとする読者は、ブロックされたライターがアクセスを待っている場合、たとえロックが他の読者によってのみアクセスされていたとしても、ロックを取得することは成功しません。また、ロックがあるライターによってアクセスされ、他のライターが入ってきた場合は、そのライターが、同じようにアクセスを待っている可能性のある読者よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="46e3c5bc68c45c5afd2c219309eee8a57eff434b" translate="yes" xml:space="preserve">
          <source>To enter buddy editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Buddies&lt;/b&gt;. This mode presents the widgets on the form in a similar way to &lt;a href=&quot;designer-connection-mode&quot;&gt;signals and slots editing mode&lt;/a&gt; but in this mode, connections must start at label widgets. Ideally, you should connect each label widget that provides a shortcut with a suitable input widget, such as a &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;.</source>
          <target state="translated">バディ編集モードに入るには、[&lt;b&gt;編集&lt;/b&gt;]メニューを開き、[&lt;b&gt;バディの&lt;/b&gt;&lt;b&gt;編集&lt;/b&gt;]を選択します。このモードは、&lt;a href=&quot;designer-connection-mode&quot;&gt;シグナルおよびスロット編集モードと&lt;/a&gt;同様の方法でフォームにウィジェットを表示しますが、このモードでは、接続はラベルウィジェットから開始する必要があります。理想的には、ショートカットを提供する各ラベルウィジェットを、&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;などの適切な入力ウィジェットに接続する必要があります。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="098d972e3d58b1e6fd218152d80fa5e9368bc655" translate="yes" xml:space="preserve">
          <source>To enter buddy editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Buddies&lt;/b&gt;. This mode presents the widgets on the form in a similar way to &lt;a href=&quot;designer-connection-mode#&quot;&gt;signals and slots editing mode&lt;/a&gt; but in this mode, connections must start at label widgets. Ideally, you should connect each label widget that provides a shortcut with a suitable input widget, such as a &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;.</source>
          <target state="translated">バディ編集モードに入るには、[ &lt;b&gt;編集&lt;/b&gt; ]メニューを開き、[ &lt;b&gt;バディの&lt;/b&gt;&lt;b&gt;編集&lt;/b&gt; ]を選択します。このモードでは、&lt;a href=&quot;designer-connection-mode#&quot;&gt;信号とスロットの編集モードと&lt;/a&gt;同様の方法でフォームにウィジェットが表示されますが、このモードでは、接続はラベルウィジェットから開始する必要があります。理想的には、ショートカットを提供する各ラベルウィジェットを&lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;などの適切な入力ウィジェットに接続する必要があります。&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b518ef4fdcf8b4398d07eeed0ef6533f98cc04e8" translate="yes" xml:space="preserve">
          <source>To enter tab order editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Tab Order&lt;/b&gt;. In this mode, each input widget in the form is shown with a number indicating its position in the tab order. So, if the user gives the first input widget the input focus and then presses the tab key, the focus will move to the second input widget, and so on.</source>
          <target state="translated">タブオーダー編集モードに入るには、[ &lt;b&gt;編集&lt;/b&gt; ]メニューを開き、[ &lt;b&gt;タブオーダーの&lt;/b&gt;&lt;b&gt;編集&lt;/b&gt; ]を選択します。このモードでは、フォーム内の各入力ウィジェットは、タブオーダーでの位置を示す番号とともに表示されます。したがって、ユーザーが最初の入力ウィジェットに入力フォーカスを与えてからタブキーを押すと、フォーカスは2番目の入力ウィジェットに移動し、以下同様に続きます。</target>
        </trans-unit>
        <trans-unit id="9d8ae19a5c2e41ed3aedce48f94d039286b5ea0b" translate="yes" xml:space="preserve">
          <source>To evaluate script code, you create a &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; and call its evaluate() function, passing the script code (text) to evaluate as argument.</source>
          <target state="translated">スクリプトコードを評価するには、&lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt;を作成し、そのevaluate（）関数を呼び出し、評価するスクリプトコード（テキスト）を引数として渡します。</target>
        </trans-unit>
        <trans-unit id="ea690c515cc4e700e78abd5d299185d12e596e8f" translate="yes" xml:space="preserve">
          <source>To examine the list of supported sample counts, call &lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;().</source>
          <target state="translated">サポートされているサンプル数のリストを調べるには、&lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="157fbcb04fe3114cddc9167166ef114dafe6dfa0" translate="yes" xml:space="preserve">
          <source>To execute C++ code before any of the QML tests are run, the &lt;a href=&quot;qquicktest#QUICK_TEST_MAIN_WITH_SETUP&quot;&gt;QUICK_TEST_MAIN_WITH_SETUP&lt;/a&gt; macro can be used. This can be useful for setting context properties on the QML engine, amongst other things.</source>
          <target state="translated">QMLテストを実行する前にC ++コードを実行するには、&lt;a href=&quot;qquicktest#QUICK_TEST_MAIN_WITH_SETUP&quot;&gt;QUICK_TEST_MAIN_WITH_SETUP&lt;/a&gt;マクロを使用できます。これは、とりわけ、QMLエンジンでコンテキストプロパティを設定するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="08bc24a870aa5d264037f07081e807cab7cc2c34" translate="yes" xml:space="preserve">
          <source>To execute an SQL statement, simply create a &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; object and call &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;QSqlQuery::exec&lt;/a&gt;() like this:</source>
          <target state="translated">SQLステートメントを実行するには、次のように&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt;オブジェクトを作成し、&lt;a href=&quot;qsqlquery#exec-1&quot;&gt;QSqlQuery :: exec&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ef040a336e1aa63da77d02ac33fc20deef053cfb" translate="yes" xml:space="preserve">
          <source>To execute your own code each frame connect to the &lt;a href=&quot;qml-qt3d-logic-frameaction#triggered-signal&quot;&gt;FrameAction::triggered&lt;/a&gt; signal.</source>
          <target state="translated">独自のコードを実行するには、各フレームを&lt;a href=&quot;qml-qt3d-logic-frameaction#triggered-signal&quot;&gt;FrameAction :: triggered&lt;/a&gt;信号に接続します。</target>
        </trans-unit>
        <trans-unit id="a4ba6719793a8c97c86514d91abd0adba29e08fd" translate="yes" xml:space="preserve">
          <source>To execute your own code each frame connect to the &lt;a href=&quot;qt3dlogic-qframeaction#triggered&quot;&gt;QFrameAction::triggered&lt;/a&gt; signal.</source>
          <target state="translated">独自のコードを実行するには、各フレームを&lt;a href=&quot;qt3dlogic-qframeaction#triggered&quot;&gt;QFrameAction :: triggered&lt;/a&gt;信号に接続します。</target>
        </trans-unit>
        <trans-unit id="ebe2c85fbb47ed7305115c4ab50e32855eec2aa8" translate="yes" xml:space="preserve">
          <source>To explain the meaning of each value it is helpful to refer to the following diagram.</source>
          <target state="translated">各値の意味を説明するには、以下の図を参考にすると便利です。</target>
        </trans-unit>
        <trans-unit id="75b979e23d2b01523982e9e812997edbdbde04f6" translate="yes" xml:space="preserve">
          <source>To explicitly disable sandboxing, the &lt;code&gt;QTWEBENGINE_DISABLE_SANDBOX&lt;/code&gt; environment variable can be set to 1 or alternatively the &lt;code&gt;--no-sandbox&lt;/code&gt; command line argument can be passed to the user application executable.</source>
          <target state="translated">サンドボックスを明示的に無効にするには、 &lt;code&gt;QTWEBENGINE_DISABLE_SANDBOX&lt;/code&gt; 環境変数を1に設定するか、または &lt;code&gt;--no-sandbox&lt;/code&gt; コマンドライン引数をユーザーアプリケーションの実行可能ファイルに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="a46b3b5fbafe18259301295f0fa2713f6f3337b9" translate="yes" xml:space="preserve">
          <source>To explicitly disable sandboxing, use one of the following options:</source>
          <target state="translated">サンドボックス化を明示的に無効にするには、次のいずれかのオプションを使用します。</target>
        </trans-unit>
        <trans-unit id="d04740be1fa39cd1bfadbe6cea459a94ef25ab08" translate="yes" xml:space="preserve">
          <source>To explicitly enable the use of ICU in Qt Core, pass &lt;code&gt;-icu&lt;/code&gt; to &lt;code&gt;configure&lt;/code&gt;:</source>
          <target state="translated">Qt CoreでICUの使用を明示的に有効にするには、 &lt;code&gt;-icu&lt;/code&gt; を渡して以下を &lt;code&gt;configure&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="59c52f83f0896e30e75603ddcae67d64181407f9" translate="yes" xml:space="preserve">
          <source>To explicitly force either dialogs based on Qt Quick Controls 1 or Qt Quick Controls 2, set the &lt;code&gt;QTWEBENGINE_DIALOG_SET&lt;/code&gt; environment variable to either &lt;code&gt;QtQuickControls1&lt;/code&gt; or &lt;code&gt;QtQuickControls2&lt;/code&gt;.</source>
          <target state="translated">Qtクイックコントロール1またはQtクイックコントロール2に基づいてダイアログを明示的に強制するには、 &lt;code&gt;QTWEBENGINE_DIALOG_SET&lt;/code&gt; 環境変数を &lt;code&gt;QtQuickControls1&lt;/code&gt; または &lt;code&gt;QtQuickControls2&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="daa250e2f4d5421f5e518bf432ad50f79f216fc3" translate="yes" xml:space="preserve">
          <source>To extend the list of</source>
          <target state="translated">のリストを拡張するには</target>
        </trans-unit>
        <trans-unit id="a2341487de42a5a2e3ed300b000d6a14a5df5dea" translate="yes" xml:space="preserve">
          <source>To extract many bytes at a time, use &lt;a href=&quot;qbytearray#left&quot;&gt;left&lt;/a&gt;(), &lt;a href=&quot;qbytearray#right&quot;&gt;right&lt;/a&gt;(), or &lt;a href=&quot;qbytearray#mid&quot;&gt;mid&lt;/a&gt;().</source>
          <target state="translated">一度に多くのバイトを抽出するに&lt;a href=&quot;qbytearray#left&quot;&gt;は&lt;/a&gt;、left（）、&lt;a href=&quot;qbytearray#right&quot;&gt;right&lt;/a&gt;（）、または&lt;a href=&quot;qbytearray#mid&quot;&gt;mid&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="316ba941aafac5984a08e986533c49f01e07a992" translate="yes" xml:space="preserve">
          <source>To facilitate remembering of the naming formats and their purposes, the following table can be used:</source>
          <target state="translated">命名形式とその目的を覚えやすくするために、以下の表を使用することができます。</target>
        </trans-unit>
        <trans-unit id="5ff245492816dc263495ad273d578bf10ba67490" translate="yes" xml:space="preserve">
          <source>To fetch an icon from the current icon theme:</source>
          <target state="translated">現在のアイコンテーマからアイコンを取得します。</target>
        </trans-unit>
        <trans-unit id="bca762ec2e69c67e257674b82583f78483910859" translate="yes" xml:space="preserve">
          <source>To filter another item's events, install this item as an event filter for the other item. Example:</source>
          <target state="translated">他のアイテムのイベントをフィルタリングするには、このアイテムを他のアイテムのイベントフィルタとしてインストールします。例:このアイテムを他のアイテムのイベントフィルタとしてインストールします。</target>
        </trans-unit>
        <trans-unit id="e025683429ecfe8fe5bf63f7c7cda4d97aa7162c" translate="yes" xml:space="preserve">
          <source>To find a suitable route we will need to use a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; to define the selection criteria and adding any required waypoints. The &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt; should return a list of &lt;a href=&quot;qml-qtlocation-routesegment&quot;&gt;RouteSegment&lt;/a&gt;s that defines the route to the destination complete with navigation advice at the joins between segments, called &lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt;s</source>
          <target state="translated">適切なルートを見つけるには、&lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt;を使用して選択基準を定義し、必要なウェイポイントを追加する必要があります。&lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModelは&lt;/a&gt;のリストを返す必要があり&lt;a href=&quot;qml-qtlocation-routesegment&quot;&gt;RouteSegment&lt;/a&gt;と呼ばれるセグメント間の結合のナビゲーションアドバイスを先完全にルートを定義秒、&lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt;秒</target>
        </trans-unit>
        <trans-unit id="d2d2cac33bdbaad4e88784a5c47022b2e91ba8f9" translate="yes" xml:space="preserve">
          <source>To find all the &lt;code&gt;name&lt;/code&gt; attributes in the cookbook and select them all regardless of their namespace, replace the namespace prefix with the wildcard and write &lt;code&gt;name&lt;/code&gt; (the attribute name) as the local name:</source>
          <target state="translated">クックブック内のすべての &lt;code&gt;name&lt;/code&gt; 属性を検索し、それらの名前空間に関係なくすべてを選択するには、名前空間接頭辞をワイルドカードで置き換え、ローカル名として &lt;code&gt;name&lt;/code&gt; （属性名）を書き込みます。</target>
        </trans-unit>
        <trans-unit id="76b6ab61f80351fc5e60ce537164f149142f35c8" translate="yes" xml:space="preserve">
          <source>To find and select all the attributes of the</source>
          <target state="translated">のすべての属性を検索して選択するには</target>
        </trans-unit>
        <trans-unit id="10df266c7a6f1ed314c658639e3c3b8a4a03e704" translate="yes" xml:space="preserve">
          <source>To find out font metrics use a &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; object, e.g.</source>
          <target state="translated">フォントメトリックを見つけるには、&lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt;オブジェクトを使用します。</target>
        </trans-unit>
        <trans-unit id="3e76aae9bbb004f7451a228e032f6a787e47d003" translate="yes" xml:space="preserve">
          <source>To find out if a node has children use &lt;a href=&quot;qdomnode#hasChildNodes&quot;&gt;hasChildNodes&lt;/a&gt;() and to get a list of all of a node's children use &lt;a href=&quot;qdomnode#childNodes&quot;&gt;childNodes&lt;/a&gt;().</source>
          <target state="translated">調べるためにノードは、子どもたちが使用している場合&lt;a href=&quot;qdomnode#hasChildNodes&quot;&gt;HASCHILDNODESを&lt;/a&gt;（）とノードの子のすべてのリストを取得するために使用する&lt;a href=&quot;qdomnode#childNodes&quot;&gt;のchildNodesを&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="96af90d9a0d68bc4ca1331c22b670b48f19fa8d4" translate="yes" xml:space="preserve">
          <source>To find out more about using the QML language, see the &lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt; module documentation.</source>
          <target state="translated">QML言語の使用について詳しくは、&lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt;モジュールのドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="59c106e4718093be2df3b313300ae3d290de3cf7" translate="yes" xml:space="preserve">
          <source>To find out which backend is in use, you can enable basic scene graph information logging via the &lt;code&gt;QSG_INFO&lt;/code&gt; environment variable or the &lt;code&gt;qt.scenegraph.general&lt;/code&gt; logging category. This results in some information being printed onto the debug output, during application startup.</source>
          <target state="translated">使用中のバックエンドを見つけるには、 &lt;code&gt;QSG_INFO&lt;/code&gt; 環境変数または &lt;code&gt;qt.scenegraph.general&lt;/code&gt; ロギングカテゴリを使用して、基本的なシーングラフ情報のロギングを有効にできます。これにより、アプリケーションの起動時に、デバッグ出力にいくつかの情報が出力されます。</target>
        </trans-unit>
        <trans-unit id="c518bbca0a12b2496d24d38d6ff55dba960f966c" translate="yes" xml:space="preserve">
          <source>To find selected files, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; looks in the same directory as the base file. If there are any directories of the form +&amp;lt;selector&amp;gt; with an active selector, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; will prefer a file with the same file name from that directory over the base file. These directories can be nested to check against multiple selectors, for example:</source>
          <target state="translated">選択したファイルを見つけるために、&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;はベースファイルと同じディレクトリを検索します。アクティブなセレクターが付いた+ &amp;lt;selector&amp;gt;形式のディレクトリがある場合、&lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt;は、ベースファイルよりもそのディレクトリの同じファイル名のファイルを優先します。これらのディレクトリをネストして、複数のセレクターをチェックできます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="c9dbc2de9c43cf1837fa3a7047794d33756e9c55" translate="yes" xml:space="preserve">
          <source>To find selected files, QFileSelector looks in the same directory as the base file. If there are any directories of the form +&amp;lt;selector&amp;gt; with an active selector, QFileSelector will prefer a file with the same file name from that directory over the base file. These directories can be nested to check against multiple selectors, for example:</source>
          <target state="translated">選択したファイルを見つけるために、QFileSelectorはベースファイルと同じディレクトリを検索します。+ &amp;lt;selector&amp;gt;の形式のディレクトリーがアクティブなセレクターである場合、QFileSelectorは、ベース・ファイルよりも、そのディレクトリーからの同じファイル名のファイルを優先します。これらのディレクトリをネストして、複数のセレクタをチェックできます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="fcbab6e362ec3601970ba5d071d3886d2467c69e" translate="yes" xml:space="preserve">
          <source>To find the bounding rectangle of the element in logical coordinates, you can apply the matrix on the rectangle returned from &lt;a href=&quot;qsvgrenderer#boundsOnElement&quot;&gt;boundsOnElement&lt;/a&gt;().</source>
          <target state="translated">論理座標で要素の外接する四角形を見つけるには、&lt;a href=&quot;qsvgrenderer#boundsOnElement&quot;&gt;boundsOnElement&lt;/a&gt;（）から返された四角形にマトリックスを適用できます。</target>
        </trans-unit>
        <trans-unit id="075c5cac4a9b3ecb0f6a68e7f0243f48bfad35d6" translate="yes" xml:space="preserve">
          <source>To fix this, the &lt;code&gt;displaced&lt;/code&gt; transition should additionally ensure the item properties are set to the end values specified in the &lt;code&gt;add&lt;/code&gt; transition, effectively resetting these values whenever an item is displaced. In this case, it means setting the item opacity and scale to 1.0:</source>
          <target state="translated">これを修正するために、 &lt;code&gt;displaced&lt;/code&gt; トランジションは、アイテムプロパティが &lt;code&gt;add&lt;/code&gt; トランジションで指定された終了値に設定されていることを確認し、アイテムがディスプレイスされたときにこれらの値を効果的にリセットする必要があります。この場合、アイテムの不透明度とスケールを1.0に設定することを意味します。</target>
        </trans-unit>
        <trans-unit id="731d83545b666b6b7267ecea79d6915e8e5024bc" translate="yes" xml:space="preserve">
          <source>To force &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; to use a specific file format, it is necessary to build and ship your own database plugin with your own &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; library as illustrated above. Some versions of &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; can be forced to write a specific file format by setting the &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; define when building &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;が特定のファイル形式を使用するように強制するには、上記のように、独自の&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;ライブラリを使用して独自のデータベースプラグインを構築して出荷する必要があります。いくつかのバージョンの&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLiteは&lt;/a&gt;設定することで、特定のファイル形式を書き込むように強制することができ &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; を構築する際に定義し&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;たSQLiteを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1a0ad5489df9b5d0a9f7625a777cb0870d597d63" translate="yes" xml:space="preserve">
          <source>To force &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; to use a specific file format, it is necessary to build and ship your own database plugin with your own &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; library as illustrated above. Some versions of &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; can be forced to write a specific file format by setting the &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; define when building &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;.</source>
          <target state="translated">強制的に&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLiteのを&lt;/a&gt;、特定のファイル形式を使用し、構築し、自分自身で独自のデータベースプラグインを出荷する必要がある&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;のSQLite&lt;/a&gt;の上に示されているようにライブラリ。いくつかのバージョンの&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLiteは&lt;/a&gt;設定することで、特定のファイル形式を書き込むように強制することができ &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; を構築する際に定義し&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;たSQLiteを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="58794de9b3fd4cf94252281b03765a671d833bc1" translate="yes" xml:space="preserve">
          <source>To force a given backend, set the &lt;code&gt;QT_GAMEPAD&lt;/code&gt; environment variable to the name of the desired backend.</source>
          <target state="translated">特定のバックエンドを強制するには、 &lt;code&gt;QT_GAMEPAD&lt;/code&gt; 環境変数を目的のバックエンドの名前に設定します。</target>
        </trans-unit>
        <trans-unit id="73281bc0237dc9e78e45e2cf995105af4c47f76b" translate="yes" xml:space="preserve">
          <source>To force asynchronous image loading, even for image sources that do not have the &lt;code&gt;asynchronous&lt;/code&gt; property set to &lt;code&gt;true&lt;/code&gt;, you may pass the &lt;code&gt;QQmlImageProviderBase::ForceAsynchronousImageLoading&lt;/code&gt; flag to the image provider constructor. This ensures that all image requests for the provider are handled in a separate thread.</source>
          <target state="translated">非同期画像の読み込みを強制するには、 &lt;code&gt;asynchronous&lt;/code&gt; プロパティが &lt;code&gt;true&lt;/code&gt; に設定されていない画像ソースの場合でも、 &lt;code&gt;QQmlImageProviderBase::ForceAsynchronousImageLoading&lt;/code&gt; フラグを画像プロバイダーのコンストラクターに渡すことができます。これにより、プロバイダーに対するすべての画像リクエストが別のスレッドで処理されることが保証されます。</target>
        </trans-unit>
        <trans-unit id="762d8ab0c4364d5d8237bdafbde07d17a4ecca48" translate="yes" xml:space="preserve">
          <source>To force fetching of the entire result set, you can use the following:</source>
          <target state="translated">結果セット全体を強制的にフェッチするには</target>
        </trans-unit>
        <trans-unit id="a6eab8e155640da183f2697ccb87034cb2e5b51f" translate="yes" xml:space="preserve">
          <source>To format the text as a hypertext link use &lt;a href=&quot;qtextcharformat#setAnchor&quot;&gt;setAnchor&lt;/a&gt;().</source>
          <target state="translated">テキストをハイパーテキストリンクとしてフォーマットするには、&lt;a href=&quot;qtextcharformat#setAnchor&quot;&gt;setAnchor&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="1d9cd32ebfaa8e9fd461b614b75e934522265644" translate="yes" xml:space="preserve">
          <source>To fully benefit from Unicode, we recommend using &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; for storing all user-visible strings, and performing all text file I/O using &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;.</source>
          <target state="translated">Unicodeを十分に&lt;a href=&quot;qtextstream&quot;&gt;活用&lt;/a&gt;するには、&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;を使用してユーザーに表示されるすべての文字列を格納し、QTextStreamを使用してすべてのテキストファイルI / Oを実行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="de8cbc1be9f7b1db7f2f61e902937c5c2c19afc8" translate="yes" xml:space="preserve">
          <source>To further reduce the burden on the system there are optional attributes which can set. Each monitored area can have an expiry date which automatically removes the to-be-monitored area from the monitoring source once the expiry date has been reached. Another option is to adjust the persistence of a monitored area. A &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; that &lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent&lt;/a&gt;() will remain active beyond the current applications lifetime. If an area is entered while the monitoring application is not running the application will be started. Note that this feature is not available on all platforms. Its availability can be checked via &lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource::supportedAreaMonitorFeatures&lt;/a&gt;().</source>
          <target state="translated">システムの負担をさらに軽減するために、設定可能なオプションの属性があります。各監視エリアには有効期限があり、有効期限に達すると、監視対象エリアが監視ソースから自動的に削除されます。別のオプションは、監視領域の持続性を調整することです。A &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt;こと&lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistentは&lt;/a&gt;（）現在のアプリケーションの存続期間を超えてアクティブのままになります。監視アプリケーションが実行されていないときにエリアに入ると、アプリケーションが起動します。この機能はすべてのプラットフォームで利用できるわけではないことに注意してください。その可用性は&lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource :: supportedAreaMonitorFeatures&lt;/a&gt;（）で確認できます。</target>
        </trans-unit>
        <trans-unit id="9249882d9b51e0e086c9f83e80ead0846ced5fef" translate="yes" xml:space="preserve">
          <source>To further reduce the burden on the system there are optional attributes which can set. Each monitored area can have an expiry date which automatically removes the to-be-monitored area from the monitoring source once the expiry date has been reached. Another option is to adjust the persistence of a monitored area. A QGeoAreaMonitorInfo that &lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent&lt;/a&gt;() will remain active beyond the current applications lifetime. If an area is entered while the monitoring application is not running the application will be started. Note that this feature is not available on all platforms. Its availability can be checked via &lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource::supportedAreaMonitorFeatures&lt;/a&gt;().</source>
          <target state="translated">システムの負担をさらに軽減するために、設定できるオプションの属性があります。各監視対象エリアには有効期限を設定できます。有効期限に達すると、監視対象エリアが監視ソースから自動的に削除されます。別のオプションは、監視対象領域の永続性を調整することです。&lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent&lt;/a&gt;（）であるQGeoAreaMonitorInfoは、現在のアプリケーションの有効期間を超えてアクティブのままになります。監視アプリケーションの実行中にエリアに入ると、アプリケーションが起動します。この機能はすべてのプラットフォームで利用できるわけではないことに注意してください。その可用性は、&lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource :: supportedAreaMonitorFeatures&lt;/a&gt;（）を介して確認できます。</target>
        </trans-unit>
        <trans-unit id="ebcac9153dd443a67ebcfe0a84f938e955a0d4d2" translate="yes" xml:space="preserve">
          <source>To gamma correct to a standard PC color-space, set gamma to &lt;code&gt;1/2.2&lt;/code&gt;.</source>
          <target state="translated">標準のPC色空間にガンマ補正するには、ガンマを &lt;code&gt;1/2.2&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="6627c669ad3f44b7bc1928712d0dd1bd772e250a" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for a type library, call &lt;code&gt;dumpcpp&lt;/code&gt; with the following command-line parameters:</source>
          <target state="translated">タイプライブラリのC ++名前空間を生成するには、次のコマンドラインパラメーターを指定して &lt;code&gt;dumpcpp&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a8b4eab268f978aef3b1563dd6d4e861c157bb1a" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for the type library you want to access, use the &lt;a href=&quot;activeqt-dumpcpp&quot;&gt;dumpcpp&lt;/a&gt; tool. Run this tool manually on the type library you want to use, or integrate it into the build system by adding the type libraries to the &lt;code&gt;TYPELIBS&lt;/code&gt; variable in your application's &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">アクセスするタイプライブラリのC ++名前空間を生成するには、&lt;a href=&quot;activeqt-dumpcpp&quot;&gt;dumpcpp&lt;/a&gt;ツールを使用します。使用するタイプライブラリでこのツールを手動で実行するか、アプリケーションの &lt;code&gt;.pro&lt;/code&gt; ファイルの &lt;code&gt;TYPELIBS&lt;/code&gt; 変数にタイプライブラリを追加してビルドシステムに統合します。</target>
        </trans-unit>
        <trans-unit id="5e82995ec17912679c6b0f41330b98919cb8b864" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for the type library you want to access, use the &lt;a href=&quot;activeqt-dumpcpp#&quot;&gt;dumpcpp&lt;/a&gt; tool. Run this tool manually on the type library you want to use, or integrate it into the build system by adding the type libraries to the &lt;code&gt;TYPELIBS&lt;/code&gt; variable in your application's &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">アクセスするタイプライブラリのC ++名前空間を生成するには、&lt;a href=&quot;activeqt-dumpcpp#&quot;&gt;dumpcpp&lt;/a&gt;ツールを使用します。使用するタイプライブラリでこのツールを手動で実行するか、アプリケーションの &lt;code&gt;.pro&lt;/code&gt; ファイルの &lt;code&gt;TYPELIBS&lt;/code&gt; 変数にタイプライブラリを追加して、ビルドシステムに統合します。</target>
        </trans-unit>
        <trans-unit id="aff2baa97b21eba568c49ce5df49a11cd8637920" translate="yes" xml:space="preserve">
          <source>To generate a custom keymap, the</source>
          <target state="translated">カスタムキーマップを生成するには</target>
        </trans-unit>
        <trans-unit id="3d7730ba780b38015a5d22389113298e5fcffd56" translate="yes" xml:space="preserve">
          <source>To generate a custom keymap, use the &lt;code&gt;kmap2qmap&lt;/code&gt; utility, that can be found in the &lt;code&gt;qttools&lt;/code&gt; module. The source files have to be in standard Linux &lt;code&gt;kmap&lt;/code&gt; format, which is understood by the kernel's &lt;code&gt;loadkeys&lt;/code&gt; command. &lt;code&gt;qmap&lt;/code&gt; files can be generated in one of the following ways:</source>
          <target state="translated">カスタムキーマップを生成するには、 &lt;code&gt;qttools&lt;/code&gt; モジュールにある &lt;code&gt;kmap2qmap&lt;/code&gt; ユーティリティを使用します。ソースファイルは、カーネルの &lt;code&gt;loadkeys&lt;/code&gt; コマンドによって理解される標準の &lt;code&gt;kmap&lt;/code&gt; 形式である必要があります。 &lt;code&gt;qmap&lt;/code&gt; ファイルは、次のいずれかの方法で生成できます。</target>
        </trans-unit>
        <trans-unit id="bd14554f1b5d49210e2bacc49223ed904de6c2d9" translate="yes" xml:space="preserve">
          <source>To generate both the compressed help and the collection file in one go, modify the help collection project file so that it instructs the help generator to create the compressed help first:</source>
          <target state="translated">圧縮されたヘルプとコレクションファイルの両方を一度に生成するには、ヘルプジェネレーターが最初に圧縮されたヘルプを作成するように、ヘルプコレクションプロジェクトファイルを修正します。</target>
        </trans-unit>
        <trans-unit id="73dbfc4ba643bb0b1b8373dd3bfe35bbd1379cae" translate="yes" xml:space="preserve">
          <source>To generate documentation, QDoc uses configuration files, with the &lt;code&gt;qdocconf&lt;/code&gt; extension, to store configuration settings.</source>
          <target state="translated">ドキュメントを生成するために、QDocは &lt;code&gt;qdocconf&lt;/code&gt; 拡張子の付いた構成ファイルを使用して構成設定を保存します。</target>
        </trans-unit>
        <trans-unit id="ded7a7e159e28b409aaecb9984c89d4556f93791" translate="yes" xml:space="preserve">
          <source>To generate message authentication code, pass hash algorithm &lt;a href=&quot;qcryptographichash#Algorithm-enum&quot;&gt;QCryptographicHash::Algorithm&lt;/a&gt; to constructor, then set key and message by &lt;a href=&quot;qmessageauthenticationcode#setKey&quot;&gt;setKey&lt;/a&gt;() and &lt;a href=&quot;qmessageauthenticationcode#addData&quot;&gt;addData&lt;/a&gt;() functions. Result can be acquired by &lt;a href=&quot;qmessageauthenticationcode#result&quot;&gt;result&lt;/a&gt;() function.</source>
          <target state="translated">メッセージ認証コードを生成するには、ハッシュアルゴリズム&lt;a href=&quot;qcryptographichash#Algorithm-enum&quot;&gt;QCryptographicHash :: Algorithm&lt;/a&gt;をコンストラクターに&lt;a href=&quot;qmessageauthenticationcode#setKey&quot;&gt;渡し&lt;/a&gt;、&lt;a href=&quot;qmessageauthenticationcode#addData&quot;&gt;setKey&lt;/a&gt;（）関数とaddData（）関数でキーとメッセージを設定します。結果は&lt;a href=&quot;qmessageauthenticationcode#result&quot;&gt;result&lt;/a&gt;（）関数で取得できます。</target>
        </trans-unit>
        <trans-unit id="3429fceeff154de5ef5dbf05f3fbb3cdfb26f6cc" translate="yes" xml:space="preserve">
          <source>To generate the IDL the widgets exposed as ActiveX controls need to be instantiated (the constructor is called). At this point, nothing else but a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object exists. Your widget constructor must not rely on any other objects to be created, e.g. it should check for null-pointers.</source>
          <target state="translated">IDLを生成するには、ActiveXコントロールとして公開されているウィジェットをインスタンス化する必要があります（コンストラクターが呼び出されます）。この時点では、&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;オブジェクトしかありません。ウィジェットコンストラクターは、作成される他のオブジェクトに依存してはなりません。たとえば、ヌルポインターをチェックする必要があります。</target>
        </trans-unit>
        <trans-unit id="c942b0c284806957abe837f006bd3d262cdb45e2" translate="yes" xml:space="preserve">
          <source>To generate the documentation, QDoc goes through the source code and generates documentation for C++ types such as classes. QDoc then associates member functions, properties, and other types to the appropriate class.</source>
          <target state="translated">ドキュメントを生成するには、QDocはソース・コードを調べ、クラスなどのC++型のドキュメントを生成します。そして、QDocはメンバー関数やプロパティなどの型を適切なクラスに関連付けます。</target>
        </trans-unit>
        <trans-unit id="02b12ec3edf1f51b48b44941ce700c9aa09a5e38" translate="yes" xml:space="preserve">
          <source>To get a context compatible with a given OpenGL version or profile, or to request depth and stencil buffers, call &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;():</source>
          <target state="translated">特定のOpenGLバージョンまたはプロファイルと互換性のあるコンテキストを取得したり、深度バッファーやステンシルバッファーを要求したりするには、&lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="185429b53eb76f72894247b2034eb8ce14ca0ae5" translate="yes" xml:space="preserve">
          <source>To get a semi-transparent &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;, call this function with</source>
          <target state="translated">半透明の&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;を取得するには、この関数を次のように呼び出します。</target>
        </trans-unit>
        <trans-unit id="5b6983cdb295e452362fc97b0374125681f5d227" translate="yes" xml:space="preserve">
          <source>To get an application designed for low DPI values running on high resolution monitors quickly, consider one of the following:</source>
          <target state="translated">低DPI値用に設計されたアプリケーションを高解像度モニターで動作させるためには、次のいずれかを検討してください。</target>
        </trans-unit>
        <trans-unit id="dccc25ead1d098d9e6a7ce10513b2a13fdd0f8a3" translate="yes" xml:space="preserve">
          <source>To get an upper- or lowercase version of a string use &lt;a href=&quot;qstring#toUpper&quot;&gt;toUpper&lt;/a&gt;() or &lt;a href=&quot;qstring#toLower&quot;&gt;toLower&lt;/a&gt;().</source>
          <target state="translated">文字列の大文字または小文字のバージョンを取得するには、&lt;a href=&quot;qstring#toUpper&quot;&gt;toUpper&lt;/a&gt;（）または&lt;a href=&quot;qstring#toLower&quot;&gt;toLower&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="c0a29bdf30e23f5177977d968f38c4c03a4be616" translate="yes" xml:space="preserve">
          <source>To get finer control over which roles are accessible, and to make delegates more self-contained and usable outside of views,</source>
          <target state="translated">どの役割にアクセスできるかをより細かく制御し、代表者をより自己完結したものにし、ビューの外でも使用できるようにする。</target>
        </trans-unit>
        <trans-unit id="6c974e5c914cd0d51c87101b39dc8f4b27c02ee9" translate="yes" xml:space="preserve">
          <source>To get range control (e.g., for an IP address) use masks together with &lt;a href=&quot;qlineedit#setValidator&quot;&gt;validators&lt;/a&gt;.</source>
          <target state="translated">範囲制御（IPアドレスなど）を取得するには、&lt;a href=&quot;qlineedit#setValidator&quot;&gt;バリデータ&lt;/a&gt;と共にマスクを使用します。</target>
        </trans-unit>
        <trans-unit id="9c4dd71ed75db99db48d52c4fc477c81633fd6f3" translate="yes" xml:space="preserve">
          <source>To get started please refer to the &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; documentation. You might also want to take a look at the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-dombookmarks-example.html#&quot;&gt;DOM Bookmarks Example&lt;/a&gt;, which illustrates how to read and write an XML bookmark file (XBEL) using DOM.</source>
          <target state="translated">開始するには、&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocumentの&lt;/a&gt;ドキュメントを参照してください。また見撮りたいかもしれません&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-dombookmarks-example.html#&quot;&gt;DOMブックマーク例&lt;/a&gt; DOMを使ってXMLのブックマークファイル（XBEL）を読み書きする方法を示します。</target>
        </trans-unit>
        <trans-unit id="d5b60ebc81536a85eafb362c1e553663606f79dc" translate="yes" xml:space="preserve">
          <source>To get started please refer to the &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; documentation. You might also want to take a look at the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtxml-dombookmarks-example.html&quot;&gt;DOM Bookmarks Example&lt;/a&gt;, which illustrates how to read and write an XML bookmark file (XBEL) using DOM.</source>
          <target state="translated">開始するには、&lt;a href=&quot;qdomdocument&quot;&gt;QDomDocumentの&lt;/a&gt;ドキュメントを参照してください。また、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtxml-dombookmarks-example.html&quot;&gt;DOM&lt;/a&gt;を使用してXMLブックマークファイル（XBEL）を読み書きする方法を示すDOMブックマークの例も参照してください。</target>
        </trans-unit>
        <trans-unit id="d500d9cda2947f9e8b362e92d21ae5627b683de0" translate="yes" xml:space="preserve">
          <source>To get started, create an Android package directory as instructed in &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-deploying-android.html&quot;&gt;Qt Creator: Deploying Applications to Android Devices&lt;/a&gt;. This directory contains the &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file. Inside the package directory, create a &lt;code&gt;src&lt;/code&gt; directory, where all your Java packages and classes will be created.</source>
          <target state="translated">開始するには、&lt;a href=&quot;http://doc.qt.io/qtcreator/creator-deploying-android.html&quot;&gt;Qt Creator：Androidデバイスへのアプリケーションのデプロイの&lt;/a&gt;指示に従ってAndroidパッケージディレクトリを作成します。このディレクトリには、 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; ファイルが含まれています。パッケージディレクトリ内に、すべてのJavaパッケージとクラスが作成される &lt;code&gt;src&lt;/code&gt; ディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="1e9901ff2bacaedc805ab8c3d0793aa054f5ffd7" translate="yes" xml:space="preserve">
          <source>To get started, the simplest &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; subclass could like like the following:</source>
          <target state="translated">まず、最も単純な&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;サブクラスは次のようになります。</target>
        </trans-unit>
        <trans-unit id="17a3ad3077db935cfda8853f35a75b1a75762b5c" translate="yes" xml:space="preserve">
          <source>To get started, the simplest QOpenGLWidget subclass could like like the following:</source>
          <target state="translated">開始するには、最もシンプルな QOpenGLWidget のサブクラスは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="052797e7bb2f08a559e597c1cede0b75b887e61a" translate="yes" xml:space="preserve">
          <source>To get the MyScript SDK or additional information, please contact MyScript at &lt;a href=&quot;mailto:qt@myscript.com&quot;&gt;qt@myscript.com&lt;/a&gt;.</source>
          <target state="translated">MyScript SDKまたは追加情報を取得するには、&lt;a href=&quot;mailto:qt@myscript.com&quot;&gt;qt @ myscript.comで&lt;/a&gt; MyScriptに連絡してください。</target>
        </trans-unit>
        <trans-unit id="9a13ff8fc0781e265661157e27fad5952a7dc67a" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageOrientation().</source>
          <target state="translated">現在取得するには&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout ::オリエンテーションの&lt;/a&gt;使用&lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;レイアウト&lt;/a&gt;（）.pageOrientationを（）。</target>
        </trans-unit>
        <trans-unit id="544234d34d796c7ce012db54ab99220d44a86c18" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageOrientation().</source>
          <target state="translated">現在取得するには&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout ::オリエンテーションの&lt;/a&gt;使用&lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;レイアウト&lt;/a&gt;（）.pageOrientationを（）。</target>
        </trans-unit>
        <trans-unit id="bb45271b656c7827cfe29ea71e716aa6a087ec4a" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;().</source>
          <target state="translated">現在の&lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt;を取得するには、&lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）を使用します。&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="0796e11a9fcb2aad12f1c86d01df3b6f6c88c9ea" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;().</source>
          <target state="translated">現在の&lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt;を取得するには、&lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;（）を使用します。&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="19eba6f5d253f33074053451beb8241c06325bc5" translate="yes" xml:space="preserve">
          <source>To get the current page margins use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageMargins().</source>
          <target state="translated">取得するには、現在のページの余白を使用して&lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;レイアウト&lt;/a&gt;（）.pageMarginsを（）。</target>
        </trans-unit>
        <trans-unit id="5017f703627ff112f625a31d77f47879c52f553e" translate="yes" xml:space="preserve">
          <source>To get the current page margins use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageMargins().</source>
          <target state="translated">取得するには、現在のページの余白を使用して&lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;レイアウト&lt;/a&gt;（）.pageMarginsを（）。</target>
        </trans-unit>
        <trans-unit id="3220362a19dcf18d24c386fefe43dda44c5db107" translate="yes" xml:space="preserve">
          <source>To get the definition of the COM interfaces you will have to use the header files provided with the component you want to use. Some compilers can also import type libraries using the #import compiler directive. See the component documentation to find out which type libraries you have to import, and how to use them.</source>
          <target state="translated">COM インターフェースの定義を取得するには、使用したいコンポーネントに添付されているヘッダファイルを使用しなければなりません。コンパイラによっては #import compiler ディレクティブを使って型ライブラリをインポートすることができます。どの型ライブラリをインポートしなければならないのか、どのように使用するのかについては、コンポーネントのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1fdfc2261aed4e409cc98b0d730d90703abf2f9b" translate="yes" xml:space="preserve">
          <source>To get the effect of the &lt;code&gt;QBENCHMARK_ONCE&lt;/code&gt; macro, prefix the test function name with &quot;benchmark_once_&quot;.</source>
          <target state="translated">&lt;code&gt;QBENCHMARK_ONCE&lt;/code&gt; マクロの効果を得るには、テスト関数名の前に「benchmark_once_」を付けます。</target>
        </trans-unit>
        <trans-unit id="678b74647535d082e051b6aee1b8b8b58b536d34" translate="yes" xml:space="preserve">
          <source>To get the optimal rendering result using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, you should use the platform independent &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; as paint device; i.e. using &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; will ensure that the result has an identical pixel representation on any platform.</source>
          <target state="translated">使用して、最適なレンダリング結果を取得するには&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt;、あなたは、プラットフォームに依存しない使用する必要があります&lt;a href=&quot;qimage&quot;&gt;QImageのを&lt;/a&gt;ペイントデバイスとして、つまり、&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;を使用すると、どのプラットフォームでも結果が同じピクセル表現になることが保証されます。</target>
        </trans-unit>
        <trans-unit id="e5c94c7114db448845ca5cfa0ae4f50a09b19334" translate="yes" xml:space="preserve">
          <source>To get the optimal rendering result using QPainter, you should use the platform independent &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; as paint device; i.e. using &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; will ensure that the result has an identical pixel representation on any platform.</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QPainter&lt;/a&gt;を使用して最適なレンダリング結果を得るには、プラットフォームに依存しないQImageをペイントデバイスとして使用する必要があります。つまり、&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;を使用すると、どのプラットフォームでも結果が同じピクセル表現になることが保証されます。</target>
        </trans-unit>
        <trans-unit id="a9c9d808bdba36fca78eaf9cfc9ffbf7c925ab1b" translate="yes" xml:space="preserve">
          <source>To get the window that currently has focus, use &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow&lt;/a&gt;().</source>
          <target state="translated">現在フォーカスのあるウィンドウを取得するには、&lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="9934d68cb2d8b9cca97b3fbc21af6c0f95f93f24" translate="yes" xml:space="preserve">
          <source>To give custom widgets special behavior in</source>
          <target state="translated">カスタムウィジェットに特別な動作を与えるには</target>
        </trans-unit>
        <trans-unit id="cd74d52af1cc6667dbe87804ee6298a63943651e" translate="yes" xml:space="preserve">
          <source>To give the user more information to help him answer the question, set the &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;detailed text&lt;/a&gt; property. If the &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;detailed text&lt;/a&gt; property is set, the &lt;b&gt;Show Details...&lt;/b&gt; button will be shown.</source>
          <target state="translated">ユーザーが質問に答えるのに役立つ詳細情報をユーザーに提供するには、&lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;詳細なテキスト&lt;/a&gt;プロパティを設定します。&lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;詳細テキスト&lt;/a&gt;プロパティが設定されている場合、[ 詳細の&lt;b&gt;表示...&lt;/b&gt; ]ボタンが表示されます。</target>
        </trans-unit>
        <trans-unit id="f1a5550ff85d9a528a115445951502a5c0cf0af8" translate="yes" xml:space="preserve">
          <source>To handle plural forms in the native language, you need to load a translation file for this language, too. The lupdate tool has the &lt;code&gt;-pluralonly&lt;/code&gt; command line option, which allows the creation of TS files containing only entries with plural forms.</source>
          <target state="translated">母国語で複数のフォームを処理するには、この言語の翻訳ファイルもロードする必要があります。lupdateツールには &lt;code&gt;-pluralonly&lt;/code&gt; コマンドラインオプションがあり、複数形式のエントリのみを含むTSファイルを作成できます。</target>
        </trans-unit>
        <trans-unit id="a15d1f729c28b2c53eb0141c43919c2a3c1dad97" translate="yes" xml:space="preserve">
          <source>To have Configure pick up OpenSSL automatically, set the following variables to point to where your OpenSSL includes and libraries are located:</source>
          <target state="translated">Configure が自動的に OpenSSL を拾うようにするには、次の変数を設定して、OpenSSL のインクルードとライブラリの場所を指定します。</target>
        </trans-unit>
        <trans-unit id="d2d3c0fb03da9706a95426414f1a189618414810" translate="yes" xml:space="preserve">
          <source>To have the style of toolbuttons follow the system settings, set this property to &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonFollowStyle&lt;/a&gt;. On Unix, the user settings from the desktop environment will be used. On other platforms, &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonFollowStyle&lt;/a&gt; means icon only.</source>
          <target state="translated">ツールボタンのスタイルがシステム設定に従うようにするには、このプロパティを&lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt :: ToolButtonFollowStyleに&lt;/a&gt;設定します。Unixでは、デスクトップ環境のユーザー設定が使用されます。他のプラットフォームでは、&lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt :: ToolButtonFollowStyle&lt;/a&gt;はアイコンのみを意味します。</target>
        </trans-unit>
        <trans-unit id="6b574ae289007ff417d9bfd22021ddba65205964" translate="yes" xml:space="preserve">
          <source>To have the web engine view rendered correctly, it is possible to manually create a new offscreen context that is shared with the &lt;code&gt;QQuickRenderControl&lt;/code&gt; and to call the non-public function &lt;code&gt;qt_gl_set_global_share_context()&lt;/code&gt;, rather than calling &lt;code&gt;initialize()&lt;/code&gt;. If &lt;code&gt;initialize()&lt;/code&gt; is called after setting a global context, it will do nothing.</source>
          <target state="translated">Webエンジンビューを正しくレンダリングするには、 &lt;code&gt;QQuickRenderControl&lt;/code&gt; と共有する新しいオフスクリーンコンテキストを手動で作成し、 &lt;code&gt;initialize()&lt;/code&gt; を呼び出すのではなく、非パブリック関数 &lt;code&gt;qt_gl_set_global_share_context()&lt;/code&gt; を呼び出すことができます。場合は &lt;code&gt;initialize()&lt;/code&gt; グローバルコンテキストを設定した後に呼び出され、それは何もしません。</target>
        </trans-unit>
        <trans-unit id="58caee709dbcb3d944f3c1ef72d5c63b35bba55b" translate="yes" xml:space="preserve">
          <source>To height of the value bar is automatically resized according to &lt;a href=&quot;qml-qtquick-extras-gauge#value-prop&quot;&gt;value&lt;/a&gt;, and does not need to be specified.</source>
          <target state="translated">値バーの高さに自動的に応じてサイズ変更され&lt;a href=&quot;qml-qtquick-extras-gauge#value-prop&quot;&gt;た値&lt;/a&gt;、および指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="625f3c7f6db8fdb8e9e4484b84b625633e7f94a7" translate="yes" xml:space="preserve">
          <source>To help with this problem, developers pass an additional integer argument to the &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt; function, and typically use a special notation for plurals in each translatable string.</source>
          <target state="translated">この問題を解決するために、開発者は追加の整数引数を&lt;a href=&quot;qobject#tr&quot;&gt;tr（）&lt;/a&gt;関数に渡し、通常、翻訳可能な文字列ごとに複数形の特別な表記を使用します。</target>
        </trans-unit>
        <trans-unit id="006b3a904da07333ede576f23761176a2db66b09" translate="yes" xml:space="preserve">
          <source>To ignore this gesture set the &lt;code&gt;pinch.accepted&lt;/code&gt; property to false. The gesture will be canceled and no further events will be sent.</source>
          <target state="translated">このジェスチャーを無視するには、 &lt;code&gt;pinch.accepted&lt;/code&gt; プロパティをfalseに設定します。ジェスチャーはキャンセルされ、それ以上のイベントは送信されません。</target>
        </trans-unit>
        <trans-unit id="68da53be1d2a8754cc79b84f5d4aad2ccfa749ff" translate="yes" xml:space="preserve">
          <source>To illuminate a &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;scene&lt;/a&gt; using an image you'll add the image as a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; to the &lt;a href=&quot;qml-qtquick3d-sceneenvironment#lightProbe-prop&quot;&gt;lightProbe&lt;/a&gt; property.</source>
          <target state="translated">照射するために&lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;シーンを&lt;/a&gt;画像を使用して、あなたは通りの画像を追加します&lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;テクスチャ&lt;/a&gt;に&lt;a href=&quot;qml-qtquick3d-sceneenvironment#lightProbe-prop&quot;&gt;lightProbeの&lt;/a&gt;プロパティ。</target>
        </trans-unit>
        <trans-unit id="fd1ce23b45cece4a8dfb5c39812f0976aadd222e" translate="yes" xml:space="preserve">
          <source>To illustrate the use of remote objects, on the source side we need to:</source>
          <target state="translated">リモートオブジェクトの使用を説明するために、ソース側では以下のようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="9d70685dbe3f211dd39faafe5f115a7f3faa166e" translate="yes" xml:space="preserve">
          <source>To illustrate the use of remote objects, on the source side, we need to:</source>
          <target state="translated">リモートオブジェクトの使用を説明するために、ソース側では、必要があります。</target>
        </trans-unit>
        <trans-unit id="b0f6d688d4e050fcd5137ae1c9b6e10e959b2bb4" translate="yes" xml:space="preserve">
          <source>To illustrate what these properties refer to, we can use the following example:</source>
          <target state="translated">これらのプロパティが何を参照しているかを説明するために、次の例を使用することができます。</target>
        </trans-unit>
        <trans-unit id="768ad204f0f0a6f3f47784484619167f71a77167" translate="yes" xml:space="preserve">
          <source>To illustrate, we present an image of an accessible object tree. Beneath the tree is a table with examples of object relationships.</source>
          <target state="translated">説明のために、アクセス可能なオブジェクト・ツリーのイメージを示します。ツリーの下には、オブジェクトのリレーションシップの例を示した表があります。</target>
        </trans-unit>
        <trans-unit id="f57768e2d62f32dc980fccbccbe5218e18100605" translate="yes" xml:space="preserve">
          <source>To imitate the matching of a shell we can use wildcard mode.</source>
          <target state="translated">シェルのマッチングを模倣するには、ワイルドカードモードを使用することができます。</target>
        </trans-unit>
        <trans-unit id="4a339c65ee743637c923979807bbf7928ea94156" translate="yes" xml:space="preserve">
          <source>To implement a COM object with Qt, create a subclass of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or any existing &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass. If the class is a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, the COM object will be an ActiveX control.</source>
          <target state="translated">Qtの持つCOMオブジェクトを実装するには、サブクラスの作成&lt;a href=&quot;qobject&quot;&gt;はQObject&lt;/a&gt;または既存&lt;a href=&quot;qobject&quot;&gt;のQObjectの&lt;/a&gt;サブクラスを。クラスが&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;サブクラスである場合、COMオブジェクトはActiveXコントロールになります。</target>
        </trans-unit>
        <trans-unit id="dc4a3b3f0d257bd9b81098032ef24f8b483c7063" translate="yes" xml:space="preserve">
          <source>To implement a Qt SQL driver as a plugin (so that it is recognized and loaded by the Qt library at runtime), the driver must use the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. Read &lt;a href=&quot;plugins-howto&quot;&gt;How to Create Qt Plugins&lt;/a&gt; for more information on this. You can also check out how this is done in the SQL plugins that are provided with Qt in &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt;.</source>
          <target state="translated">Qt SQLドライバーをプラグインとして実装するには（実行時にQtライブラリーによって認識およびロードされるようにするため）、ドライバーは&lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;（）マクロを使用する必要があります。読む&lt;a href=&quot;plugins-howto&quot;&gt;Qtのプラグインを作成する方法&lt;/a&gt;このについての詳細。 &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt; Qtで提供されるSQLプラグインでこれがどのように行われるかを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="806e2cd8e5ee29a628e321d5180fba4b57c899f6" translate="yes" xml:space="preserve">
          <source>To implement a Qt SQL driver as a plugin (so that it is recognized and loaded by the Qt library at runtime), the driver must use the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. Read &lt;a href=&quot;plugins-howto&quot;&gt;How to Create Qt Plugins&lt;/a&gt; for more information on this. You can also check out how this is done in the SQL plugins that are provided with Qt in &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt;.</source>
          <target state="translated">Qt SQLドライバーをプラグインとして実装するには（実行時にQtライブラリーによって認識およびロードされるように）、ドライバーは&lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;（）マクロを使用する必要があります。詳細については、&lt;a href=&quot;plugins-howto&quot;&gt;Qtプラグインを作成する方法を&lt;/a&gt;お読みください。 &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt; のQtで提供されるSQLプラグインでこれがどのように行われるかを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="d2be2ac0632b5d1649d278fea4ae2e90c25c1443" translate="yes" xml:space="preserve">
          <source>To implement a custom URL scheme for &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;, you first have to create an instance of &lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; and register it using &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme::registerScheme&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngineの&lt;/a&gt;カスタムURLスキーマを実装するには、最初に&lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlSchemeの&lt;/a&gt;インスタンスを作成し、&lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme :: registerScheme&lt;/a&gt;（）を使用してそれを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="cb008345dd3366d39fcf4027b305e509737f19f7" translate="yes" xml:space="preserve">
          <source>To implement a custom URL scheme for &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;, you first have to create an instance of &lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; and register it using &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme::registerScheme&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-module.html&quot;&gt;QtWebEngineの&lt;/a&gt;カスタムURLスキームを実装するには、最初に&lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlSchemeの&lt;/a&gt;インスタンスを作成し、&lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme :: registerScheme&lt;/a&gt;（）を使用してそれを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="908e59e61babb9b5f94baa0a0cc4204987a11eba" translate="yes" xml:space="preserve">
          <source>To implement a factory, subclass &lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt; and implement the virtual &lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;create&lt;/a&gt;() method, then assign it to the relevant QML engine using &lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine::setNetworkAccessManagerFactory&lt;/a&gt;().</source>
          <target state="translated">ファクトリを実装するには、&lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt;をサブクラス化し、仮想&lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;create&lt;/a&gt;（）メソッドを実装してから、&lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine :: setNetworkAccessManagerFactory&lt;/a&gt;（）を使用してそれを関連するQMLエンジンに割り当てます。</target>
        </trans-unit>
        <trans-unit id="0654515d47a54596db259731b2ce2a38be13ad9c" translate="yes" xml:space="preserve">
          <source>To implement a factory, subclass QQmlNetworkAccessManagerFactory and implement the virtual &lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;create&lt;/a&gt;() method, then assign it to the relevant QML engine using &lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine::setNetworkAccessManagerFactory&lt;/a&gt;().</source>
          <target state="translated">ファクトリを実装するには、QQmlNetworkAccessManagerFactoryをサブクラス化し、仮想&lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;create&lt;/a&gt;（）メソッドを実装してから、&lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine :: setNetworkAccessManagerFactory&lt;/a&gt;（）を使用して関連するQMLエンジンに割り当てます。</target>
        </trans-unit>
        <trans-unit id="a4bc0cc7c60c088bc88a65d035f601bc08c169f0" translate="yes" xml:space="preserve">
          <source>To implement drag and drop actions for a type of information that is not covered by the &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; convenience functions, the first and most important step is to look for existing formats that are appropriate: The Internet Assigned Numbers Authority (&lt;a href=&quot;http://www.iana.org&quot;&gt;IANA&lt;/a&gt;) provides a &lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;hierarchical list of MIME media types&lt;/a&gt; at the Information Sciences Institute (&lt;a href=&quot;http://www.isi.edu&quot;&gt;ISI&lt;/a&gt;). Using standard MIME types maximizes the interoperability of your application with other software now and in the future.</source>
          <target state="translated">覆われていない情報の種類のドラッグアンドドロップの操作を実装するには&lt;a href=&quot;qdrag&quot;&gt;QDragの&lt;/a&gt;便利な機能を、最も重要な最初のステップは、適切な既存のフォーマットを探すことである：インターネットは割り当て番号機関（&lt;a href=&quot;http://www.iana.org&quot;&gt;IANAは&lt;/a&gt;）提供&lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;の階層リストを&lt;/a&gt;情報科学研究所（&lt;a href=&quot;http://www.isi.edu&quot;&gt;ISI&lt;/a&gt;）のMIMEメディアタイプ。標準のMIMEタイプを使用すると、現在および将来、アプリケーションと他のソフトウェアとの相互運用性が最大になります。</target>
        </trans-unit>
        <trans-unit id="e028b129f996e83c8c5ba5a749c702ff3b16c8cf" translate="yes" xml:space="preserve">
          <source>To implement support for a custom networked scheme, see setNetworkAccessManagerFactory.</source>
          <target state="translated">カスタムのネットワークスキームのサポートを実装するには、setNetworkAccessManagerFactory を参照してください。</target>
        </trans-unit>
        <trans-unit id="3d975aef7c3ca42a6198fe3d6145b05a438af56f" translate="yes" xml:space="preserve">
          <source>To implement support for a new backend, you must derive from &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; and reimplement the virtual &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt;() function to tell &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; which paint engine should be used to draw on this particular device. Note that you also must create a corresponding paint engine to be able to draw on the device, i.e derive from &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; and reimplement its virtual functions.</source>
          <target state="translated">新しいバックエンドのサポートを実装するには、から派生している必要があり&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt;と仮想再実装&lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt;伝えるために（）関数を&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt;ペイントエンジンは、この特定のデバイス上で描画するために使用されるべきです。また、デバイス上で描画できるように対応するペイントエンジンを作成する必要があることに注意してください。つまり、&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;から派生し、その仮想関数を再実装します。</target>
        </trans-unit>
        <trans-unit id="aa4e184a07d00c8a162147af59d67dcd18ad802b" translate="yes" xml:space="preserve">
          <source>To implement support for a new backend, you must derive from QPaintDevice and reimplement the virtual &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt;() function to tell &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; which paint engine should be used to draw on this particular device. Note that you also must create a corresponding paint engine to be able to draw on the device, i.e derive from &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; and reimplement its virtual functions.</source>
          <target state="translated">新しいバックエンドのサポートを実装するには、QPaintDeviceから派生し、仮想再実装する必要があり&lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt;伝えるために（）関数を&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt;ペイントエンジンは、この特定のデバイス上で描画するために使用されるべきです。また、デバイス上で描画できるように、対応するペイントエンジンを作成する必要があることに注意してください。つまり、&lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt;から派生し、その仮想関数を再実装します。</target>
        </trans-unit>
        <trans-unit id="fe0472f92c49677952f74acd0472c08f23c99724" translate="yes" xml:space="preserve">
          <source>To implement this function create a derivative of &lt;a href=&quot;qabstractplanarvideobuffer&quot;&gt;QAbstractPlanarVideoBuffer&lt;/a&gt; and implement its map function instance instead.</source>
          <target state="translated">この関数を実装するには、&lt;a href=&quot;qabstractplanarvideobuffer&quot;&gt;QAbstractPlanarVideoBufferの&lt;/a&gt;派生物を作成し、代わりにそのマップ関数インスタンスを実装します。</target>
        </trans-unit>
        <trans-unit id="e57baf652275f5bd09812fc7631bed3b732be2c0" translate="yes" xml:space="preserve">
          <source>To import Qt Charts QML types, add the following import statement to your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">QtチャートのQMLタイプをインポートするには、次のインポートステートメントを &lt;code&gt;.qml&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="9706bc12bb5fecf5f24e6d2f135552b3765653c3" translate="yes" xml:space="preserve">
          <source>To import Qt Data Visualization QML types, add the following import statement to your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">Qt Data Visualization QMLタイプをインポートするには、次のインポートステートメントを &lt;code&gt;.qml&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="c68645c4214e6de06941f2f3b7d2ba7cf44ebd5d" translate="yes" xml:space="preserve">
          <source>To import the QML types into your application, use the following import statement in your .qml file:</source>
          <target state="translated">QML 型をアプリケーションにインポートするには、.qml ファイル内の以下の import ステートメントを使用します。</target>
        </trans-unit>
        <trans-unit id="1c733e0bc774b5fabb86c96913c41b92f6160d94" translate="yes" xml:space="preserve">
          <source>To import the QML types into your application, use the following import statement in your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">QMLタイプをアプリケーションにインポートするには、 &lt;code&gt;.qml&lt;/code&gt; ファイルで次のインポートステートメントを使用します。</target>
        </trans-unit>
        <trans-unit id="ebe927566ef045ad033e13343c25e44971d2af0e" translate="yes" xml:space="preserve">
          <source>To include code snippets from an external file, use the &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#snippet-command&quot;&gt;\snippet&lt;/a&gt; and &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#codeline-command&quot;&gt;\codeline&lt;/a&gt; commands.</source>
          <target state="translated">外部ファイルからコードスニペットを含めるには、&lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#snippet-command&quot;&gt;\ snippet&lt;/a&gt;および&lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#codeline-command&quot;&gt;\ codeline&lt;/a&gt;コマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="3193d971b24038413842acc771855127922ec5d7" translate="yes" xml:space="preserve">
          <source>To include the &lt;code&gt;#&lt;/code&gt; character in variable assignments, it is necessary to use the contents of the built-in &lt;a href=&quot;qmake-variable-reference#literal-hash&quot;&gt;LITERAL_HASH&lt;/a&gt; variable.</source>
          <target state="translated">変数の割り当てに &lt;code&gt;#&lt;/code&gt; 文字を含めるには、組み込みの&lt;a href=&quot;qmake-variable-reference#literal-hash&quot;&gt;LITERAL_HASH&lt;/a&gt;変数の内容を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2027ff02580e6c3a230537dd7dddda41723104b9" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes and functions, use the following directive:</source>
          <target state="translated">モジュールのクラスや関数の定義を含めるには、以下のディレクティブを使用します。</target>
        </trans-unit>
        <trans-unit id="dab785d8e8fcf72a49638451cfe5da33d5602994" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes and functions, use the following include statement:</source>
          <target state="translated">モジュールのクラスと関数の定義を含めるには、以下のinclude文を使用します。</target>
        </trans-unit>
        <trans-unit id="25604e04d87942d1b1ab46483ecf24327afcedad" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes, use the following directive:</source>
          <target state="translated">モジュールのクラスの定義を含めるには、以下のディレクティブを使用します。</target>
        </trans-unit>
        <trans-unit id="c9fc611d452ec4a784733e0eac0de194a266727f" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's functions and classes, use the following directives:</source>
          <target state="translated">モジュールの関数とクラスの定義を含めるには、以下のディレクティブを使用します。</target>
        </trans-unit>
        <trans-unit id="bf24b763e4224da08358c601ce5e3fdfe2817151" translate="yes" xml:space="preserve">
          <source>To include the definitions of the modules' classes, use the following directives:</source>
          <target state="translated">モジュールのクラスの定義を含めるには、以下のディレクティブを使用します。</target>
        </trans-unit>
        <trans-unit id="52e2f17553c064aeddf2e9a86d855ab01adaabb8" translate="yes" xml:space="preserve">
          <source>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead.</source>
          <target state="translated">ファイル番号と行番号を含めるためには、オブジェクトを渡す必要がある。ファイルと行番号が取得できない場合(QML エンジンでインスタンス化されていないか、位置情報が無効になっている)は、代わりに &quot;unknown location&quot; が使用されます。</target>
        </trans-unit>
        <trans-unit id="15fceb8eb65ee33a1b589fd642d01c3486c72e67" translate="yes" xml:space="preserve">
          <source>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead. For example,</source>
          <target state="translated">ファイル番号と行番号を含めるためには、オブジェクトを渡す必要がある。ファイルと行番号が取得できない場合(QML エンジンでインスタンス化されていないか、位置情報が無効になっているかのいずれか)は、代わりに &quot;unknown location&quot; を使用します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0d4a3965f288470c2d6f1e14100d7e8ef5703120" translate="yes" xml:space="preserve">
          <source>To indicate that all possible mouse buttons are to be accepted, the special value 'Qt.AllButtons' may be used:</source>
          <target state="translated">すべての可能なマウスボタンを受け入れることを示すために、特別な値 'Qt.AllButtons' を使用することができます。</target>
        </trans-unit>
        <trans-unit id="0e38cb42c57654dc72cfe785a4be1f2aaf30d597" translate="yes" xml:space="preserve">
          <source>To indicate that the errors are not fatal and that the connection should proceed, the &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;QNetworkReply::ignoreSslErrors&lt;/a&gt;() function should be called from the slot connected to this signal. If it is not called, the SSL session will be torn down before any data is exchanged (including the URL).</source>
          <target state="translated">エラーが致命的ではなく、接続を続行する必要があることを示すには、この信号に接続されたスロットから&lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;QNetworkReply :: ignoreSslErrors&lt;/a&gt;（）関数を呼び出す必要があります。呼び出されない場合、データ（URLを含む）が交換される前にSSLセッションが切断されます。</target>
        </trans-unit>
        <trans-unit id="2b4aa01dfffaeedbbc2f003769dfb03c94500995" translate="yes" xml:space="preserve">
          <source>To indicate that the errors are not fatal and that the connection should proceed, the &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;() function should be called from the slot connected to this signal. If it is not called, the SSL session will be torn down before any data is exchanged (including the URL).</source>
          <target state="translated">エラーが致命的ではなく、接続を続行する必要があることを示すには、この信号に接続されているスロットから&lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;（）関数を呼び出す必要があります。呼び出されない場合、データ（URLを含む）が交換される前にSSLセッションが切断されます。</target>
        </trans-unit>
        <trans-unit id="f8934fe20165efd0dfd6a5d9f226af5a9128617e" translate="yes" xml:space="preserve">
          <source>To indicate which methods are suitable for your application, set the &lt;a href=&quot;qml-qtpositioning-positionsource#preferredPositioningMethods-prop&quot;&gt;preferredPositioningMethods&lt;/a&gt; property. If the preferred methods are not available, the default source of location data for the platform will be chosen instead. If no default source is available (because none are installed for the runtime platform, or because it is disabled), the &lt;a href=&quot;qml-qtpositioning-positionsource#valid-prop&quot;&gt;valid&lt;/a&gt; property will be set to false.</source>
          <target state="translated">アプリケーションに適したメソッドを示すには、&lt;a href=&quot;qml-qtpositioning-positionsource#preferredPositioningMethods-prop&quot;&gt;preferredPositioningMethods&lt;/a&gt;プロパティを設定します。優先する方法が利用できない場合は、代わりにプラットフォームの位置データのデフォルトのソースが選択されます。使用可能なデフォルトのソースがない場合（ランタイムプラットフォームに何もインストールされていないか、無効になっているため）、&lt;a href=&quot;qml-qtpositioning-positionsource#valid-prop&quot;&gt;valid&lt;/a&gt;プロパティはfalseに設定されます。</target>
        </trans-unit>
        <trans-unit id="e1559d097b634d12f53dde0cfc3de08555469dd4" translate="yes" xml:space="preserve">
          <source>To inform</source>
          <target state="translated">お知らせするために</target>
        </trans-unit>
        <trans-unit id="68b98554ab9892616328af77d7acf0a56213c458" translate="yes" xml:space="preserve">
          <source>To initialize a licensed control use the following pattern:</source>
          <target state="translated">ライセンス付きコントロールを初期化するには、以下のパターンを使用します。</target>
        </trans-unit>
        <trans-unit id="a9b9000504404ed9ab779fb2be3b4dacabcf29d7" translate="yes" xml:space="preserve">
          <source>To initialize the bits to true, either pass &lt;code&gt;true&lt;/code&gt; as second argument to the constructor, or call &lt;a href=&quot;qbitarray#fill&quot;&gt;fill&lt;/a&gt;() later on.</source>
          <target state="translated">ビットをtrueに初期化するには、コンストラクターの2番目の引数として &lt;code&gt;true&lt;/code&gt; を渡すか、後で&lt;a href=&quot;qbitarray#fill&quot;&gt;fill&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ce4ab601cb873cd7b2d2c920826fe079e26dc15b" translate="yes" xml:space="preserve">
          <source>To initialize the control before it is activated, reimplement this function and add your initialization code before you call &lt;a href=&quot;qaxwidget#createHostWindow&quot;&gt;createHostWindow&lt;/a&gt;(true).</source>
          <target state="translated">アクティブになる前にコントロールを初期化するには、この関数を再実装し、&lt;a href=&quot;qaxwidget#createHostWindow&quot;&gt;createHostWindow&lt;/a&gt;（true）を呼び出す前に初期化コードを追加します。</target>
        </trans-unit>
        <trans-unit id="e924d18ae3b4a19ba53cef35e55ca35dd34110fa" translate="yes" xml:space="preserve">
          <source>To initialize the control on a different machine use the following pattern:</source>
          <target state="translated">別のマシンで制御を初期化するには、以下のパターンを使用します。</target>
        </trans-unit>
        <trans-unit id="c38ebea234d99fa40f9b4a8b2aeb30afe6ec9313" translate="yes" xml:space="preserve">
          <source>To initialize the control's properties, use</source>
          <target state="translated">コントロールのプロパティを初期化するには</target>
        </trans-unit>
        <trans-unit id="51cd53a47f4fe23410e0ffcdf7809fc8f559730f" translate="yes" xml:space="preserve">
          <source>To insert a (key, value) pair into the hash, you can use operator[]():</source>
          <target state="translated">(キー、値)のペアをハッシュに挿入するには operator[]()を使用します。</target>
        </trans-unit>
        <trans-unit id="619f4327aafdc4c818ac746e4cdd55aa02194395" translate="yes" xml:space="preserve">
          <source>To insert a (key, value) pair into the map, you can use operator[]():</source>
          <target state="translated">(キー、値)のペアをマップに挿入するには、operator[]()を使用します。</target>
        </trans-unit>
        <trans-unit id="48fb17b5d2391757208ab9e22124ff066120fc29" translate="yes" xml:space="preserve">
          <source>To insert a value into the set, use &lt;a href=&quot;qset#insert&quot;&gt;insert&lt;/a&gt;():</source>
          <target state="translated">セットに値を挿入するには、&lt;a href=&quot;qset#insert&quot;&gt;insert&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="627a04eaa418ddd7ab045c696148132fa3a8eaea" translate="yes" xml:space="preserve">
          <source>To insert an item at the end, pass &lt;code&gt;menuItems.length&lt;/code&gt;.</source>
          <target state="translated">最後にアイテムを挿入するには、 &lt;code&gt;menuItems.length&lt;/code&gt; を渡します。</target>
        </trans-unit>
        <trans-unit id="14d2bc665c3256569dd629e9cf2dc593041cc76d" translate="yes" xml:space="preserve">
          <source>To install a specific package, use &lt;code&gt;sdkmanager&lt;/code&gt; from &lt;code&gt;&amp;lt;ANDROID_SDK_ROOT&amp;gt;/tools/bin&lt;/code&gt;. For example, the following command installs the &lt;code&gt;android-10&lt;/code&gt; platforms package on Ubuntu:</source>
          <target state="translated">特定のパッケージをインストールするには、 &lt;code&gt;&amp;lt;ANDROID_SDK_ROOT&amp;gt;/tools/bin&lt;/code&gt; から &lt;code&gt;sdkmanager&lt;/code&gt; を使用します。たとえば、次のコマンドはUbuntuに &lt;code&gt;android-10&lt;/code&gt; プラットフォームパッケージをインストールします。</target>
        </trans-unit>
        <trans-unit id="23acbbaf0daac2a08a16d3420a11b9ee334f5f15" translate="yes" xml:space="preserve">
          <source>To instantiate a COM object use the &lt;a href=&quot;qaxbase#control-prop&quot;&gt;QAxBase::setControl&lt;/a&gt;() API, or pass the name of the object directly into the constructor of the &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; subclass you are using.</source>
          <target state="translated">COMオブジェクトをインスタンス化するには、&lt;a href=&quot;qaxbase#control-prop&quot;&gt;QAxBase :: setControl&lt;/a&gt;（）APIを使用するか、オブジェクトの名前を、使用している&lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt;サブクラスのコンストラクターに直接渡します。</target>
        </trans-unit>
        <trans-unit id="5832ce925e1e52a8c7908a758555d393b0b036a9" translate="yes" xml:space="preserve">
          <source>To instantiate a script engine, use &lt;a href=&quot;qaxscriptmanager#addObject&quot;&gt;QAxScriptManager::addObject&lt;/a&gt;() to register the COM objects you want to access from script, and &lt;a href=&quot;qaxscriptmanager#load&quot;&gt;QAxScriptManager::load&lt;/a&gt;() to load the script code into the engine. Then call the script functions using &lt;a href=&quot;qaxscriptmanager#call&quot;&gt;QAxScriptManager::call&lt;/a&gt;() or &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript::call&lt;/a&gt;().</source>
          <target state="translated">スクリプトエンジンをインスタンス化するには、&lt;a href=&quot;qaxscriptmanager#addObject&quot;&gt;QAxScriptManager :: addObject&lt;/a&gt;（）を使用して、スクリプトからアクセスするCOMオブジェクトを登録し、&lt;a href=&quot;qaxscriptmanager#load&quot;&gt;QAxScriptManager :: load&lt;/a&gt;（）を使用して、スクリプトコードをエンジンにロードします。次に、&lt;a href=&quot;qaxscriptmanager#call&quot;&gt;QAxScriptManager :: call&lt;/a&gt;（）または&lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript :: call&lt;/a&gt;（）を使用してスクリプト関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="89213ef1ed9f24a6dccabf389fe11eaa725bac4d" translate="yes" xml:space="preserve">
          <source>To integrate a custom widget with</source>
          <target state="translated">カスタムウィジェットを</target>
        </trans-unit>
        <trans-unit id="39740ededb581a7293c01b1d0675ab08b15083a6" translate="yes" xml:space="preserve">
          <source>To integrate custom Direct3D 12 rendering, use &lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt; in combination with &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;. This approach doesn't rely on OpenGL contexts or API specifics like framebuffers, and allows exposing the graphics device and command buffer from the adaptation. It's not necessarily suitable for easy integration of all types of content, in particular true 3D, so it'll likely get complemented by an alternative to &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; in future releases.</source>
          <target state="translated">カスタムDirect3D 12レンダリングを統合するには、&lt;a href=&quot;qsgrendernode&quot;&gt;QSGRendererInterface&lt;/a&gt;と組み合わせて&lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRenderNodeを&lt;/a&gt;使用します。このアプローチは、OpenGLコンテキストやフレームバッファーなどのAPI仕様に依存せず、グラフィックデバイスとコマンドバッファーを適応から公開できます。すべてのタイプのコンテンツ、特に真の3Dを簡単に統合するのに必ずしも適しているわけではないため、今後のリリースで&lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObjectの&lt;/a&gt;代替手段によって補完される可能性があります。</target>
        </trans-unit>
        <trans-unit id="31641f5e01dd170a39a5028bd9bd53ae87fe0d89" translate="yes" xml:space="preserve">
          <source>To interact with running tasks using signals and slots, use &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;.</source>
          <target state="translated">シグナルとスロットを使用して実行中のタスクと対話するには、&lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcherを&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="c472dd814b3501e33d5d64b42a79d25792ff4b35" translate="yes" xml:space="preserve">
          <source>To intercept drag and drop events for the scene, you reimplement &lt;a href=&quot;qgraphicsscene#dragEnterEvent&quot;&gt;QGraphicsScene::dragEnterEvent&lt;/a&gt;() and whichever event handlers your particular scene needs, in a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; subclass. You can read more about drag and drop in Graphics View in the documentation for each of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s event handlers.</source>
          <target state="translated">To intercept drag and drop events for the scene, you reimplement &lt;a href=&quot;qgraphicsscene#dragEnterEvent&quot;&gt;QGraphicsScene::dragEnterEvent&lt;/a&gt;() and whichever event handlers your particular scene needs, in a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; subclass. You can read more about drag and drop in Graphics View in the documentation for each of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s event handlers.</target>
        </trans-unit>
        <trans-unit id="e4d573df507990e2ba2b3015c9a61ea59c7463c7" translate="yes" xml:space="preserve">
          <source>To iterate over a list, you can either use index positions or &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s Java-style and STL-style iterator types:</source>
          <target state="translated">To iterate over a list, you can either use index positions or &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s Java-style and STL-style iterator types:</target>
        </trans-unit>
        <trans-unit id="c846b2032dd567c323f0ac0f578838ec99896264" translate="yes" xml:space="preserve">
          <source>To iterate over the list, you can use the &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; pseudo-keyword:</source>
          <target state="translated">To iterate over the list, you can use the &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; pseudo-keyword:</target>
        </trans-unit>
        <trans-unit id="dc709163fa36baf96bb24486cd5864f83e6c07bc" translate="yes" xml:space="preserve">
          <source>To keep the behavior of dynamically created state machines and compiled state machines the same, the</source>
          <target state="translated">動的に作成されたステートマシンとコンパイルされたステートマシンの動作を同じにするために</target>
        </trans-unit>
        <trans-unit id="3a1accd2dff71491dc0d71a73153736fc2de834c" translate="yes" xml:space="preserve">
          <source>To keep track of some &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s, create a &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt;, and &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;add&lt;/a&gt;() the objects you are interested in. If you are no longer interested in tracking a particular object, use &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt;() to remove it from the cleanup handler. If an object being tracked by the cleanup handler gets deleted by someone else it will automatically be removed from the cleanup handler. You can delete all the objects in the cleanup handler with &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt;(), or by destroying the cleanup handler. &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt; has no objects to keep track of.</source>
          <target state="translated">To keep track of some &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s, create a &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt;, and &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;add&lt;/a&gt;() the objects you are interested in. If you are no longer interested in tracking a particular object, use &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt;() to remove it from the cleanup handler. If an object being tracked by the cleanup handler gets deleted by someone else it will automatically be removed from the cleanup handler. You can delete all the objects in the cleanup handler with &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt;(), or by destroying the cleanup handler. &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt; has no objects to keep track of.</target>
        </trans-unit>
        <trans-unit id="bd4266377b75fe68e3d31f99451771fc0d3acd49" translate="yes" xml:space="preserve">
          <source>To keep track of some &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s, create a QObjectCleanupHandler, and &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;add&lt;/a&gt;() the objects you are interested in. If you are no longer interested in tracking a particular object, use &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt;() to remove it from the cleanup handler. If an object being tracked by the cleanup handler gets deleted by someone else it will automatically be removed from the cleanup handler. You can delete all the objects in the cleanup handler with &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt;(), or by destroying the cleanup handler. &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the QObjectCleanupHandler has no objects to keep track of.</source>
          <target state="translated">一部の&lt;a href=&quot;qobject&quot;&gt;QObjectを&lt;/a&gt;追跡するには、QObjectCleanupHandlerを作成し、関心のあるオブジェクトを&lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;追加&lt;/a&gt;（）します。特定のオブジェクトの追跡に関心がなくなった場合は、&lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt;（）を使用してクリーンアップハンドラーから削除します。クリーンアップハンドラーによって追跡されているオブジェクトが他の誰かによって削除された場合、そのオブジェクトはクリーンアップハンドラーから自動的に削除されます。&lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt;（）を使用するか、クリーンアップハンドラーを破棄することにより、クリーンアップハンドラー内のすべてのオブジェクトを削除できます。&lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）は、QObjectCleanupHandlerに追跡するオブジェクトがない場合に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c6a701197ececd2b1a13097aff3b0d4ce1cec4dd" translate="yes" xml:space="preserve">
          <source>To kill all the particles in the system, use an Age affector.</source>
          <target state="translated">システム内のすべての粒子を殺すには、エイジアフェクターを使用します。</target>
        </trans-unit>
        <trans-unit id="2ed85ef8590db93553fbb995ff96656ee42d602f" translate="yes" xml:space="preserve">
          <source>To launch your project with Visual Studio a corresponding project needs to be created. &lt;code&gt;qmake&lt;/code&gt; supports converting a &lt;code&gt;.pro&lt;/code&gt; project into Visual Studio format by passing the parameters &lt;code&gt;-tp&lt;/code&gt; vc.</source>
          <target state="translated">Visual Studioでプロジェクトを起動するには、対応するプロジェクトを作成する必要があります。 &lt;code&gt;qmake&lt;/code&gt; は、パラメーター &lt;code&gt;-tp&lt;/code&gt; vc を渡すことによる &lt;code&gt;.pro&lt;/code&gt; プロジェクトのVisual Studio形式への変換をサポートしています。</target>
        </trans-unit>
        <trans-unit id="3160e69c1f88ddeaffc59249b0753ae8891d79ce" translate="yes" xml:space="preserve">
          <source>To learn more about uses of QML code, there are several code samples which show how QML types are used. In addition, there are several demos which show how QML code is used in applications.</source>
          <target state="translated">QMLコードの使い方をより詳しく知るために、QMLの型がどのように使われているかを示すコードサンプルをいくつか用意しています。また、QMLコードがアプリケーションでどのように使われているかを示すデモもいくつかあります。</target>
        </trans-unit>
        <trans-unit id="ae939a15d9d0f7b8a1934cce8e1153a6450f1e95" translate="yes" xml:space="preserve">
          <source>To limit the size of items in a horizontal view, use the following properties:</source>
          <target state="translated">水平ビューの項目のサイズを制限するには、以下のプロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="c54711cc61671edaa8a2d699f7474f7a251e9afe" translate="yes" xml:space="preserve">
          <source>To limit the size of items in a vertical view, use the following properties:</source>
          <target state="translated">縦表示の項目のサイズを制限するには、以下のプロパティを使用します。</target>
        </trans-unit>
        <trans-unit id="87840f52c7612ba77a3719aaafc72a023cc08ec8" translate="yes" xml:space="preserve">
          <source>To link Qt Network against OpenSSL libraries, set the &lt;code&gt;-openssl-linked&lt;/code&gt; configure argument. Use the &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt; variable to let Qt correctly locate and build against your OpenSSL installation:</source>
          <target state="translated">Qt NetworkをOpenSSLライブラリに対してリンクするには、 &lt;code&gt;-openssl-linked&lt;/code&gt; configure引数を設定します。 &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt; 変数を使用して、QtがOpenSSLインストールに対して正しく検索およびビルドできるようにします。</target>
        </trans-unit>
        <trans-unit id="10d94842d6331f1df4948b7fd10483468353b67e" translate="yes" xml:space="preserve">
          <source>To link Qt Network against a static version of the OpenSSL libs, set the &lt;code&gt;-openssl-linked&lt;/code&gt; argument, and set &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt;, or &lt;code&gt;OPENSSL_INCDIR&lt;/code&gt; and &lt;code&gt;OPENSSL_LIBDIR&lt;/code&gt;. In addition, you probably need to set the &lt;code&gt;OPENSSL_LIBS&lt;/code&gt;, &lt;code&gt;OPENSSL_LIBS_DEBUG&lt;/code&gt;, &lt;code&gt;OPENSSL_LIBS_RELEASE&lt;/code&gt; configure arguments to let Qt correctly link against your static build of the OpenSSL libraries.</source>
          <target state="translated">Qt NetworkをOpenSSLライブラリの静的バージョンに対してリンクするには、 &lt;code&gt;-openssl-linked&lt;/code&gt; 引数を設定し、 &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt; 、または &lt;code&gt;OPENSSL_INCDIR&lt;/code&gt; と &lt;code&gt;OPENSSL_LIBDIR&lt;/code&gt; を設定します。さらに、おそらく &lt;code&gt;OPENSSL_LIBS&lt;/code&gt; 、 &lt;code&gt;OPENSSL_LIBS_DEBUG&lt;/code&gt; 、 &lt;code&gt;OPENSSL_LIBS_RELEASE&lt;/code&gt; 構成引数を設定して、QtがOpenSSLライブラリの静的ビルドに対して正しくリンクできるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="68eec605815734a511520b06c66c4f1d88038238" translate="yes" xml:space="preserve">
          <source>To link against the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library, add the following to your qmake project file:</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt;ライブラリにリンクするには、qmakeプロジェクトファイルに以下を追加します。</target>
        </trans-unit>
        <trans-unit id="2730f18d66677274226574d633aebee82b5773b6" translate="yes" xml:space="preserve">
          <source>To link against the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library, add the following to your qmake project file:</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt;ライブラリにリンクするには、qmakeプロジェクトファイルに以下を追加します。</target>
        </trans-unit>
        <trans-unit id="41f8bd669eb626c069a30c9b615d512c8ded8723" translate="yes" xml:space="preserve">
          <source>To link against the C++ libraries, add the following to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">C ++ライブラリにリンクするには、 &lt;code&gt;qmake&lt;/code&gt; プロジェクトファイルに以下を追加します。</target>
        </trans-unit>
        <trans-unit id="a27668ad0d6b00fb6b29a4e7e90b6c0152f154ee" translate="yes" xml:space="preserve">
          <source>To link against the Qt Android Extras module, add this line to your project file:</source>
          <target state="translated">Qt Android Extras モジュールにリンクするには、この行をプロジェクトファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="041569c678412c7ad9cce1eda03aeb296c2a3531" translate="yes" xml:space="preserve">
          <source>To link against the Qt Charts module, add this line to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">Qtチャートモジュールにリンクするには、次の行を &lt;code&gt;qmake&lt;/code&gt; プロジェクトファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="b6d0bc4b34689225615bdc1ccb98ea1b8cdea08f" translate="yes" xml:space="preserve">
          <source>To link against the Qt Data Visualization module, add this line to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">Qt Data Visualizationモジュールにリンクするには、次の行を &lt;code&gt;qmake&lt;/code&gt; プロジェクトファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="f5939def498999b5004ecefe7a9cd9a131e4497f" translate="yes" xml:space="preserve">
          <source>To link against the Qt Help module, add this line to the project file:</source>
          <target state="translated">Qt Help モジュールとリンクするには、この行をプロジェクトファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="d1ff20e35e1cae61dba75a517bc6afbf59bdd0f0" translate="yes" xml:space="preserve">
          <source>To link against the Qt Network Authorization module, add this line to the project file:</source>
          <target state="translated">Qt Network Authorizationモジュールとリンクするには、この行をプロジェクトファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="a446a86eafdce44e2da40210110b22d68c122d8d" translate="yes" xml:space="preserve">
          <source>To link against the Qt Network module, add this line to the project file:</source>
          <target state="translated">Qt Networkモジュールとリンクするには、この行をプロジェクトファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="a82331cadd56724182404023de38b6c52c54f94c" translate="yes" xml:space="preserve">
          <source>To link against the Qt SQL module, add this line to the project file:</source>
          <target state="translated">Qt SQLモジュールとリンクするには、この行をプロジェクトファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="550a0072bcec6d0a4422e4f84d722a4959b14de7" translate="yes" xml:space="preserve">
          <source>To link against the corresponding C++ libraries, add the following to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">対応するC ++ライブラリにリンクするには、 &lt;code&gt;qmake&lt;/code&gt; プロジェクトファイルに以下を追加します。</target>
        </trans-unit>
        <trans-unit id="553a82fffee6fc20ca9b22ede59db116aeaac219" translate="yes" xml:space="preserve">
          <source>To link against the corresponding C++ libraries, add the following to your qmake project file:</source>
          <target state="translated">対応する C++ライブラリにリンクするには、qmake プロジェクトファイルに以下を追加します。</target>
        </trans-unit>
        <trans-unit id="ef5395256966e863a10aaefacb703c4ab74fef40" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your &lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt;&lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">モジュールにリンクするには、次の行を&lt;a href=&quot;qmake-manual&quot;&gt;qmake &lt;/a&gt; &lt;code&gt;.pro&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="4c15c07c63b0fdb1d03e9056c8633dcf3b398744" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake .pro file:</source>
          <target state="translated">モジュールにリンクするには、qmake .pro ファイルにこの行を追加します。</target>
        </trans-unit>
        <trans-unit id="05cdb606e8e440fb4c1159865d15947fe4e68a5f" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">モジュールにリンクするには、次の行をqmake &lt;code&gt;.pro&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="36959485c016826e8627ccff21d149b034544ef3" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake project file:</source>
          <target state="translated">モジュールにリンクするには、この行をqmakeプロジェクトファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="536245d9ecf28fc27080b6fde95b2e9b382beda5" translate="yes" xml:space="preserve">
          <source>To link plugins statically, you need to add the required plugins to your build using &lt;code&gt;QTPLUGIN&lt;/code&gt;.</source>
          <target state="translated">プラグインを静的にリンクするには、 &lt;code&gt;QTPLUGIN&lt;/code&gt; を使用して必要なプラグインをビルドに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="c151992632d8e5822e1428f581719db7fdf5b114" translate="yes" xml:space="preserve">
          <source>To link to the Qt Quick Test C++ library, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquicktest-module.html&quot;&gt;Qt Quick Test C++ API&lt;/a&gt;.</source>
          <target state="translated">Qt Quick Test C ++ライブラリにリンクするには、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquicktest-module.html&quot;&gt;Qt Quick Test C ++ APIを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="88462081f1e6d8573886ebc07c2c418aa5d66cc7" translate="yes" xml:space="preserve">
          <source>To link to the Qt Quick Test C++ library, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquicktest-module.html&quot;&gt;Qt Quick Test C++ API&lt;/a&gt;.</source>
          <target state="translated">Qt Quick Test C ++ライブラリにリンクするには、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquicktest-module.html&quot;&gt;Qt Quick Test C ++ APIを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="5720cca875b568000278f0e6e8b49a2eecf0a0fa" translate="yes" xml:space="preserve">
          <source>To list overviews that are related to a certain group, you must generate the list explicitly using the &lt;a href=&quot;12-0-qdoc-commands-miscellaneous#generatelist-command&quot;&gt;\generatelist&lt;/a&gt; command with the &lt;code&gt;related&lt;/code&gt; argument.</source>
          <target state="translated">特定のグループに関連する概要を一覧表示するには、&lt;a href=&quot;12-0-qdoc-commands-miscellaneous#generatelist-command&quot;&gt;\ generatelist&lt;/a&gt;コマンドを &lt;code&gt;related&lt;/code&gt; 引数と共に使用して、リストを明示的に生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="045ef0e0517c79961b778b8bd3181a409424e7c8" translate="yes" xml:space="preserve">
          <source>To load OpenSSL at runtime, set the &lt;code&gt;-openssl-runtime&lt;/code&gt; configure argument. Qt will try to find &lt;code&gt;openssl/ssl.h&lt;/code&gt; and &lt;code&gt;openssl/opensslv.h&lt;/code&gt; in the default include path of the compiler. You can specify an additional include directory by setting &lt;code&gt;OPENSSL_INCDIR&lt;/code&gt;.</source>
          <target state="translated">実行時にOpenSSLをロードするには、 &lt;code&gt;-openssl-runtime&lt;/code&gt; configure引数を設定します。Qtは、コンパイラのデフォルトのインクルードパスで &lt;code&gt;openssl/opensslv.h&lt;/code&gt; &lt;code&gt;openssl/ssl.h&lt;/code&gt; とopenssl / opensslv.hを見つけようとします。 &lt;code&gt;OPENSSL_INCDIR&lt;/code&gt; を設定することにより、追加のインクルードディレクトリを指定できます。</target>
        </trans-unit>
        <trans-unit id="a10c29f487de310a36a9f801fb143ad5f15223a1" translate="yes" xml:space="preserve">
          <source>To load Qt Graphical Effects, add the following import statement to your .qml file:</source>
          <target state="translated">Qt Graphical Effectsをロードするには、.qmlファイルに以下のインポート文を追加します。</target>
        </trans-unit>
        <trans-unit id="df7c410485f6d6cd74f0493a183a3aacc06576e4" translate="yes" xml:space="preserve">
          <source>To load a .qml file, run the tool and select the file to be opened, or provide the file path on the command prompt:</source>
          <target state="translated">.qmlファイルを読み込むには、ツールを実行して開くファイルを選択するか、コマンドプロンプトでファイルパスを指定します。</target>
        </trans-unit>
        <trans-unit id="753b64b85907eae631eaca29735a401b0d3eec7d" translate="yes" xml:space="preserve">
          <source>To load a specific physical font, typically represented by a single file, use &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; instead.</source>
          <target state="translated">通常は単一のファイルで表される特定の物理フォントをロードするには、代わりに&lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="3b70dd932a4f527611b23806c442f1c16bd2862b" translate="yes" xml:space="preserve">
          <source>To load an SCXML file, &lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine::fromFile&lt;/a&gt; or &lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine::fromData&lt;/a&gt; should be used. Using &lt;a href=&quot;qscxmlcompiler&quot;&gt;QScxmlCompiler&lt;/a&gt; directly is only needed when the compiler needs to use a custom &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler::Loader&lt;/a&gt;.</source>
          <target state="translated">SCXMLファイルをロードするには、&lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine :: fromFile&lt;/a&gt;または&lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine :: fromData&lt;/a&gt;を使用する必要があります。&lt;a href=&quot;qscxmlcompiler&quot;&gt;QScxmlCompilerを&lt;/a&gt;直接使用する必要があるのは、コンパイラーがカスタム&lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler :: Loader&lt;/a&gt;を使用する必要がある場合のみです。</target>
        </trans-unit>
        <trans-unit id="cbc85945390e0b276f18bcfb0a8b59229b19f2a4" translate="yes" xml:space="preserve">
          <source>To load an SCXML file, &lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine::fromFile&lt;/a&gt; or &lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine::fromData&lt;/a&gt; should be used. Using QScxmlCompiler directly is only needed when the compiler needs to use a custom &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler::Loader&lt;/a&gt;.</source>
          <target state="translated">SCXMLファイルをロードするには、&lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine :: fromFile&lt;/a&gt;または&lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine :: fromData&lt;/a&gt;を使用する必要があります。QScxmlCompilerを直接使用する必要があるのは、コンパイラーがカスタム&lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler :: Loader&lt;/a&gt;を使用する必要がある場合のみです。</target>
        </trans-unit>
        <trans-unit id="a5709ff13f4130be160f9671835547e6c540e2e2" translate="yes" xml:space="preserve">
          <source>To load the Qt Location module, add the following statement to your .qml files</source>
          <target state="translated">Qt Location モジュールをロードするには、次のステートメントを .qml ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="97edd80909bd4c4f57c17e539eb5e7249439ffa4" translate="yes" xml:space="preserve">
          <source>To load the Qt Positioning module, add the following statement to your .qml files</source>
          <target state="translated">Qt Positioningモジュールをロードするには、以下の文を.qmlファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="514255d7dc0d157f5e943da95f690d92fdc65e47" translate="yes" xml:space="preserve">
          <source>To look up a host's IP addresses asynchronously, call &lt;a href=&quot;qhostinfo#lookupHost&quot;&gt;lookupHost&lt;/a&gt;(), which takes the host name or IP address, a receiver object, and a slot signature as arguments and returns an ID. You can abort the lookup by calling &lt;a href=&quot;qhostinfo#abortHostLookup&quot;&gt;abortHostLookup&lt;/a&gt;() with the lookup ID.</source>
          <target state="translated">ホストのIPアドレスを非同期で検索するには、&lt;a href=&quot;qhostinfo#lookupHost&quot;&gt;lookupHost&lt;/a&gt;（）を呼び出します。lookupHost（）は、ホスト名またはIPアドレス、レシーバーオブジェクト、およびスロット署名を引数として取り、IDを返します。ルックアップIDを指定して&lt;a href=&quot;qhostinfo#abortHostLookup&quot;&gt;abortHostLookup&lt;/a&gt;（）を呼び出すことにより、ルックアップを中止できます。</target>
        </trans-unit>
        <trans-unit id="c3e0f2510aef3f0994086992307fa28fcda7c6e7" translate="yes" xml:space="preserve">
          <source>To look up a value, use operator[]() or &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;():</source>
          <target state="translated">値を検索するには、operator []（）または&lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="465cea4289469ac456741aec62a5df63ba123129" translate="yes" xml:space="preserve">
          <source>To look up a value, use operator[]() or &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;():</source>
          <target state="translated">値を検索するには、operator []（）または&lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="624a94a94edc9e656cdef529278975ffbf879e7e" translate="yes" xml:space="preserve">
          <source>To look up objects in the cache, use &lt;a href=&quot;qcache#object&quot;&gt;object&lt;/a&gt;() or operator[](). This function looks up an object by its key, and returns either a pointer to the cached object (which is owned by the cache) or &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="translated">キャッシュ内のオブジェクトを検索するには、&lt;a href=&quot;qcache#object&quot;&gt;object&lt;/a&gt;（）またはoperator []（）を使用します。この関数は、キーでオブジェクトを検索し、キャッシュされたオブジェクト（キャッシュが所有）へのポインターまたは &lt;code&gt;nullptr&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f437ffccca44f2ed4d4f07ca858f517debac4e8f" translate="yes" xml:space="preserve">
          <source>To make &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; as efficient as possible, its member functions don't validate their input before using it. Except for &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), member functions always assume the list is</source>
          <target state="translated">&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;をできるだけ効率的にするために、そのメンバー関数は、使用する前に入力を検証しません。&lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）を除いて、メンバー関数は常にリストが</target>
        </trans-unit>
        <trans-unit id="c3c955d5a17bb889417bbcdacdc44300ff117647" translate="yes" xml:space="preserve">
          <source>To make &lt;code&gt;qmake&lt;/code&gt; find the PostgreSQL header files and shared libraries, run &lt;code&gt;qmake&lt;/code&gt; the following way (assuming that the PostgreSQL client is installed in &lt;code&gt;/usr&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;qmake&lt;/code&gt; にPostgreSQLヘッダーファイルと共有ライブラリを見つけさせるには、次の方法で &lt;code&gt;qmake&lt;/code&gt; を実行します（PostgreSQLクライアントが &lt;code&gt;/usr&lt;/code&gt; にインストールされていると想定）。</target>
        </trans-unit>
        <trans-unit id="641ad16fa228b3ecff8a30d2d30414c971731903" translate="yes" xml:space="preserve">
          <source>To make QList as efficient as possible, its member functions don't validate their input before using it. Except for &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), member functions always assume the list is</source>
          <target state="translated">QListを可能な限り効率的にするために、そのメンバー関数は、QListを使用する前に入力を検証しません。&lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;（）を除いて、メンバー関数は常にリストが</target>
        </trans-unit>
        <trans-unit id="311080827d2b898605b517a7d8251488ac146a95" translate="yes" xml:space="preserve">
          <source>To make Qt WebEngine work correctly when streaming to an AppleTV from a MacBook that supports GPU switching, it is important to add the &lt;code&gt;NSSupportsAutomaticGraphicsSwitching&lt;/code&gt; option to the application Info.plist file, with the value set to &lt;code&gt;YES&lt;/code&gt;. Otherwise rendering issues might occur when creating new web engine view instances after Airplay is switched on or off.</source>
          <target state="translated">GPU切り替えをサポートするMacBookからAppleTVにストリーミングするときにQt WebEngineを正しく機能させるには、値を &lt;code&gt;YES&lt;/code&gt; に設定して、 &lt;code&gt;NSSupportsAutomaticGraphicsSwitching&lt;/code&gt; オプションをアプリケーションのInfo.plistファイルに追加することが重要です。そうしないと、Airplayをオンまたはオフにした後で新しいWebエンジンビューインスタンスを作成するときに、レンダリングの問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3c2391383f6f75298e80a81c87ecb970ebe24674" translate="yes" xml:space="preserve">
          <source>To make a COM server available to the COM system it must be registered in the system registry using five unique identifiers. These identifiers are provided by tools like &lt;code&gt;guidgen&lt;/code&gt; or &lt;code&gt;uuidgen&lt;/code&gt;. The registration information allows COM to localize the binary providing a requested ActiveX control, marshall remote procedure calls to the control and read type information about the methods and properties exposed by the control.</source>
          <target state="translated">COMサーバーがCOMシステムで利用できるようにするには、5つの一意の識別子を使用してシステムレジストリに登録する必要があります。これらの識別子は、 &lt;code&gt;guidgen&lt;/code&gt; や &lt;code&gt;uuidgen&lt;/code&gt; などのツールによって提供されます。登録情報により、COMは要求されたActiveXコントロールを提供するバイナリをローカライズし、コントロールへのリモートプロシージャコールをマーシャリングし、コントロールによって公開されたメソッドとプロパティに関する型情報を読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="527a2d83064ef702816d23b060084472147cd9e9" translate="yes" xml:space="preserve">
          <source>To make a connectionn, press the left mouse button and drag the cursor towards the object you want to connect it to. As you do this, a line will extend from the source object to the cursor. If the cursor is over another object on the form, the line will end with an arrow head that points to the destination object. This indicates that a connection will be made between the two objects when you release the mouse button.</source>
          <target state="translated">接続を行うには、マウスの左ボタンを押して、カーソルを接続したいオブジェクトに向かってドラッグします。そうすると、線がソースオブジェクトからカーソルまで伸びます。カーソルがフォーム上の他のオブジェクトの上にある場合、線は目的のオブジェクトを指す矢印で終わります。これは、マウスボタンを離すと 2 つのオブジェクト間で接続が行われることを示しています。</target>
        </trans-unit>
        <trans-unit id="d7a75f30f4018587763ee8c6eec785aaf8a06f7d" translate="yes" xml:space="preserve">
          <source>To make a custom widget available to the loader, you can use the &lt;a href=&quot;quiloader#addPluginPath&quot;&gt;addPluginPath&lt;/a&gt;() function; to remove all available widgets, you can call the &lt;a href=&quot;quiloader#clearPluginPaths&quot;&gt;clearPluginPaths&lt;/a&gt;() function.</source>
          <target state="translated">ローダーがカスタムウィジェットを使用できるようにするには、&lt;a href=&quot;quiloader#addPluginPath&quot;&gt;addPluginPath&lt;/a&gt;（）関数を使用できます。使用可能なすべてのウィジェットを削除するには、&lt;a href=&quot;quiloader#clearPluginPaths&quot;&gt;clearPluginPaths&lt;/a&gt;（）関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="1c6b702f1f707c0596f03022623d88a21de1a3b7" translate="yes" xml:space="preserve">
          <source>To make a sensible surface, the x-value of each successive item in all rows must be either ascending or descending throughout the row. Similarly, the z-value of each successive item in all columns must be either ascending or descending throughout the column.</source>
          <target state="translated">感覚的な曲面を作るためには、すべての行で連続する各項目のx値は、行全体で上昇または下降のいずれかでなければなりません。同様に、すべての列の連続する項目のz値は、列全体で上昇または下降のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="b46a6d10e5894afee0dba3a55b8ce5a45bc95ae9" translate="yes" xml:space="preserve">
          <source>To make it less abstract consider the following example:</source>
          <target state="translated">抽象度を下げるために、次の例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="170c5b07d3e670d6bf05faa2c65ea4512b93d7b1" translate="yes" xml:space="preserve">
          <source>To make sure currency numbers are localized, use the &lt;a href=&quot;qml-qtqml-number&quot;&gt;Number&lt;/a&gt; type. This type has similar functions as the Date type for converting numbers into localized currency strings.</source>
          <target state="translated">通貨番号がローカライズされていることを確認するには、&lt;a href=&quot;qml-qtqml-number&quot;&gt;Number&lt;/a&gt;タイプを使用します。この型には、数値をローカライズされた通貨文字列に変換するための日付型と同様の関数があります。</target>
        </trans-unit>
        <trans-unit id="efb6c3b4d0c4b7f83e2e07f01327fe69f8b85d1e" translate="yes" xml:space="preserve">
          <source>To make the Qt &lt;a href=&quot;qml-qtwebview-webview&quot;&gt;WebView&lt;/a&gt; module function correctly across all platforms, it is necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="translated">すべてのプラットフォームでQt &lt;a href=&quot;qml-qtwebview-webview&quot;&gt;WebView&lt;/a&gt;モジュールを正しく機能させるには、&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;インスタンスを作成した直後に&lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt;（）を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="79b4186d0f0fa3cd385af1bc932cb6c9b4f030a2" translate="yes" xml:space="preserve">
          <source>To make the Qt WebView module function correctly across all platforms, it is necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="translated">Qt WebViewモジュールをすべてのプラットフォームで正しく機能させるには、&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;インスタンスを作成した直後に&lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt;（）を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="37f936b611480546a951d4166cbbe1139d4339c8" translate="yes" xml:space="preserve">
          <source>To make the Qt WebView module function correctly across all platforms, it's necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() before creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance and before window's QPlatformOpenGLContext is created.</source>
          <target state="translated">Qt WebViewモジュールをすべてのプラットフォームで正しく機能させるには、&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;インスタンスを作成する前、およびウィンドウのQPlatformOpenGLContextを作成する前に、QtWebView &lt;a href=&quot;qtwebview#initialize&quot;&gt;:: initialize&lt;/a&gt;（）を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="1b6d13a263e47af71ff3489eb100003e76599e85" translate="yes" xml:space="preserve">
          <source>To make the Qt WebView module function correctly across all platforms, it's necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="translated">すべてのプラットフォームでQt WebViewモジュールを正しく機能させるには、&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt;インスタンスを作成した直後に&lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt;（）を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="5704123cb0c077229327d895044209de75e9bd34" translate="yes" xml:space="preserve">
          <source>To make the Trace rendering available in the keyboard, this type must be declared as the &lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#traceCanvasDelegate-prop&quot;&gt;KeyboardStyle.traceCanvasDelegate&lt;/a&gt; component.</source>
          <target state="translated">キーボードでTraceレンダリングを使用できるようにするには、このタイプを&lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#traceCanvasDelegate-prop&quot;&gt;KeyboardStyle.traceCanvasDelegate&lt;/a&gt;コンポーネントとして宣言する必要があります。</target>
        </trans-unit>
        <trans-unit id="f542db24c38af13df70727a404840376c4203fcf" translate="yes" xml:space="preserve">
          <source>To make the content of textures available for read and write operations in a shader, they need to exposed as QShaderImage. Textures can be composed of several mip levels, layers and faces. Additionally declaring a QShaderImage allows specifying which level, layer or face of the texture content we want to access.</source>
          <target state="translated">テクスチャの内容をシェーダで読み書きできるようにするには、QShaderImageとして公開する必要があります。テクスチャは、いくつかのミップレベル、レイヤー、面で構成することができます。さらに、QShaderImageを宣言することで、アクセスしたいテクスチャコンテンツのどのレベル、レイヤー、フェースを指定することができます。</target>
        </trans-unit>
        <trans-unit id="262b888fdd02cde798df6f4abb6115ec06c54821" translate="yes" xml:space="preserve">
          <source>To make the content of textures available for read and write operations in a shader, they need to exposed as ShaderImage. Textures can be composed of several mip levels, layers and faces. Additionally declaring a ShaderImage allows specifying which level, layer or face of the texture content we want to access.</source>
          <target state="translated">テクスチャの内容をシェーダで読み書きできるようにするには、ShaderImageとして公開する必要があります。テクスチャは、いくつかの mip レベル、レイヤー、面で構成することができます。さらに、ShaderImageを宣言することで、アクセスしたいテクスチャコンテンツのどのレベル、レイヤー、フェースを指定することができます。</target>
        </trans-unit>
        <trans-unit id="97c1fc9dd562495f4d7641d29cde6f4019b4f85a" translate="yes" xml:space="preserve">
          <source>To make the process read EOF right away, pass &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;() here. This is cleaner than using &lt;a href=&quot;qprocess#closeWriteChannel&quot;&gt;closeWriteChannel&lt;/a&gt;() before writing any data, because it can be set up prior to starting the process.</source>
          <target state="translated">プロセスがすぐにEOFを読み取るようにするには、ここに&lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;（）を渡します。これは、プロセスを開始する前に設定できるため、データを書き込む前に&lt;a href=&quot;qprocess#closeWriteChannel&quot;&gt;closeWriteChannel&lt;/a&gt;（）を使用するよりもクリーンです。</target>
        </trans-unit>
        <trans-unit id="48ae93d06a58b4cdb9ac9b01fd13498b5272f909" translate="yes" xml:space="preserve">
          <source>To make the properties bindable for the ActiveX client, use multiple inheritance from the &lt;a href=&quot;qaxbindable&quot;&gt;QAxBindable&lt;/a&gt; class:</source>
          <target state="translated">プロパティをActiveXクライアントにバインド可能にするには、&lt;a href=&quot;qaxbindable&quot;&gt;QAxBindable&lt;/a&gt;クラスからの多重継承を使用します。</target>
        </trans-unit>
        <trans-unit id="600b894eb9b833ba411bf23e7a914f09d85785fc" translate="yes" xml:space="preserve">
          <source>To make the target global, the code above needs to be included into every subdirs subproject. In addition, to make these targets do anything, non-subdirs subprojects need to include respective code. The easiest way to achieve this is creating a custom feature file. For example:</source>
          <target state="translated">ターゲットをグローバルにするためには、上記のコードをすべてのサブディレクトリサブプロジェクトに含める必要があります。さらに、これらのターゲットに何かをさせるためには、サブディレクトリ以外のサブプロジェクトにそれぞれのコードを含める必要があります。これを実現する最も簡単な方法は、カスタム機能ファイルを作成することです。例えば、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="b33a5489ba287c8d947e06f865a21e6ead131d68" translate="yes" xml:space="preserve">
          <source>To make things easier for this example, the TimeExample source directory is in &lt;code&gt;imports/TimeExample&lt;/code&gt;, and we build &lt;a href=&quot;configure-options#source-build-and-install-directories&quot;&gt;in-source&lt;/a&gt;. However, the structure of the source directory is not so important, as the &lt;code&gt;qmldir&lt;/code&gt; file can specify paths to installed QML files.</source>
          <target state="translated">この例を簡単にするために、TimeExampleソースディレクトリは &lt;code&gt;imports/TimeExample&lt;/code&gt; にあり&lt;a href=&quot;configure-options#source-build-and-install-directories&quot;&gt;、in-source&lt;/a&gt;をビルドします。ただし、 &lt;code&gt;qmldir&lt;/code&gt; ファイルはインストールされているQMLファイルへのパスを指定できるため、ソースディレクトリの構造はそれほど重要ではありません。</target>
        </trans-unit>
        <trans-unit id="74bb33068f232a3d9bd51634644f169b20c96b53" translate="yes" xml:space="preserve">
          <source>To make this function available, you need to load the respective feature file:</source>
          <target state="translated">この機能を利用できるようにするには、それぞれの機能ファイルを読み込む必要があります。</target>
        </trans-unit>
        <trans-unit id="e74387758952d3004ccbc4dd34ebd5f60a42021a" translate="yes" xml:space="preserve">
          <source>To make this provider accessible to QML, it is registered with the QML engine with a &quot;colors&quot; identifier:</source>
          <target state="translated">このプロバイダを QML で利用できるようにするために、QML エンジンに colors という識別子を付けて登録している。</target>
        </trans-unit>
        <trans-unit id="1e0e265f109902a6046589b5d07e2f5e3f9a47dc" translate="yes" xml:space="preserve">
          <source>To make this type available, we create a plugin class named &lt;code&gt;QExampleQmlPlugin&lt;/code&gt; which is a subclass of &lt;a href=&quot;qqmlextensionplugin&quot;&gt;QQmlExtensionPlugin&lt;/a&gt;. It overrides the &lt;a href=&quot;qqmlextensionplugin#registerTypes&quot;&gt;registerTypes()&lt;/a&gt; method in order to register the &lt;code&gt;TimeModel&lt;/code&gt; type using &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;(). It also uses the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro in the class definition to register the plugin with the Qt meta object system using a unique identifier for the plugin.</source>
          <target state="translated">このタイプを使用可能にするために、 &lt;code&gt;QExampleQmlPlugin&lt;/code&gt; のサブクラスである&lt;a href=&quot;qqmlextensionplugin&quot;&gt;QExampleQmlPlugin&lt;/a&gt;というプラグインクラスを作成します。&lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;（）を使用して &lt;code&gt;TimeModel&lt;/code&gt; タイプを登録するために、&lt;a href=&quot;qqmlextensionplugin#registerTypes&quot;&gt;registerTypes（）&lt;/a&gt;メソッドをオーバーライドします。また、クラス定義で&lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;（）マクロを使用し、プラグインの一意の識別子を使用してQtメタオブジェクトシステムにプラグインを登録します。</target>
        </trans-unit>
        <trans-unit id="ed67f435e7a8aae2a389d5b8cb54fb327ff71805" translate="yes" xml:space="preserve">
          <source>To make this work, the widget itself and</source>
          <target state="translated">これを実現するためには、ウィジェット自体と</target>
        </trans-unit>
        <trans-unit id="7949e7edf2b9ee2a3c488efdb8536e66f5829953" translate="yes" xml:space="preserve">
          <source>To make use of all that, start your service as shown in &lt;a href=&quot;android-services#start-the-service&quot;&gt;Start the Service&lt;/a&gt;, an then register the broadcast receiver by calling the method &lt;code&gt;registerServiceBroadcastReceiver()&lt;/code&gt;:</source>
          <target state="translated">これらすべてを利用するには、「サービスの開始」に示すようにサービスを&lt;a href=&quot;android-services#start-the-service&quot;&gt;開始し&lt;/a&gt;、次にメソッド &lt;code&gt;registerServiceBroadcastReceiver()&lt;/code&gt; を呼び出してブロードキャストレシーバーを登録します。</target>
        </trans-unit>
        <trans-unit id="6e46a911b58cc1db1f40da4967591a42a3febe59" translate="yes" xml:space="preserve">
          <source>To make user-visible text translatable, it must be wrapped in calls to the &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;() function. This is explained in detail in the &lt;a href=&quot;i18n-source-translation&quot;&gt;Writing Source Code for Translation&lt;/a&gt; document.</source>
          <target state="translated">ユーザーに表示されるテキストを翻訳可能にするには、そのテキストを&lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;（）関数の呼び出しでラップする必要があります。これは&lt;a href=&quot;i18n-source-translation&quot;&gt;、翻訳&lt;/a&gt;ドキュメントのソースコードの記述で詳細に説明されています。</target>
        </trans-unit>
        <trans-unit id="e9830802265edf981a47a23afe689395d24181dc" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing (by executing a special function whenever there are no pending events), use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">アプリケーションでアイドル処理を実行するには（保留中のイベントがない場合は常に特別な関数を実行する）、タイムアウトを0に&lt;a href=&quot;qtimer&quot;&gt;設定&lt;/a&gt;してQTimerを使用します。より高度なアイドル処理スキームは、&lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;（）を使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="e044a4360a53be2b4c9f91ae0a1f0ce3976a9723" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing (i.e. executing a special function whenever there are no pending events), use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More sophisticated idle processing schemes can be achieved using &lt;a href=&quot;qeventloop#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">アプリケーションにアイドル処理（つまり、保留中のイベントがない場合は常に特別な関数を実行する）を実行させるには、タイムアウトが0の&lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt;を使用します。より洗練されたアイドル処理スキームは、&lt;a href=&quot;qeventloop#processEvents&quot;&gt;processEvents&lt;/a&gt;（）を使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="9e8a38f8844c54226669e806536dde2590387109" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing, e.g., executing a special function whenever there are no pending events, use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">保留中のイベントがない場合は常に特別な関数を実行するなど、アプリケーションにアイドル処理を実行させるには、タイムアウト&lt;a href=&quot;qtimer&quot;&gt;なしのQTimer&lt;/a&gt;を使用します。より高度なアイドル処理スキームは、&lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;（）を使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="074480ff18c26be3acf20c02c876cbf0ab872f4a" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing, i.e., executing a special function whenever there are no pending events, use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">アプリケーションでアイドル処理を実行するには、つまり、保留中のイベントがない場合は常に特別な関数を実行するには、タイムアウト&lt;a href=&quot;qtimer&quot;&gt;なしのQTimer&lt;/a&gt;を使用します。より高度なアイドル処理スキームは、&lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;（）を使用して実現できます。</target>
        </trans-unit>
        <trans-unit id="74a77b956aceffc3c579e433de582461e71c0d9d" translate="yes" xml:space="preserve">
          <source>To make your own layout manager, implement the functions &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;(), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;() and &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt;(). You should also implement &lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;() to ensure your layout isn't resized to zero size if there is too little space. To support children whose heights depend on their widths, implement &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;() and &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;(). See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;Flow Layout&lt;/a&gt; examples for more information about implementing custom layout managers.</source>
          <target state="translated">独自のレイアウトマネージャーを作成するには、関数&lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;（）、&lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;（）、&lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;（）、&lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;（）、takeAt（）を&lt;a href=&quot;qlayout#takeAt&quot;&gt;実装し&lt;/a&gt;ます。また、スペースが小さすぎる場合にレイアウトがゼロサイズにサイズ変更されないように、&lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;（）を実装する必要があります。高さが幅に依存する子をサポートするには、&lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;（）および&lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;（）を実装します。カスタムレイアウトマネージャーの実装の詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;ボーダーレイアウト&lt;/a&gt;と&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;フローレイアウトの&lt;/a&gt;例を参照してください。</target>
        </trans-unit>
        <trans-unit id="4aeb7bb489e138301b473660fc5e72592445a0a7" translate="yes" xml:space="preserve">
          <source>To make your own layout manager, implement the functions &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;(), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;() and &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt;(). You should also implement &lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;() to ensure your layout isn't resized to zero size if there is too little space. To support children whose heights depend on their widths, implement &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;() and &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;(). See the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-borderlayout-example.html&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-flowlayout-example.html&quot;&gt;Flow Layout&lt;/a&gt; examples for more information about implementing custom layout managers.</source>
          <target state="translated">独自のレイアウトマネージャーを作成するには、関数&lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;（）、&lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;（）、&lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;（）、&lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;（）、および&lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt;（）を実装します。また、スペースが少なすぎる場合にレイアウトがゼロサイズにサイズ変更されないように、&lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;（）を実装する必要があります。高さが幅に依存する子をサポートするには、&lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;（）と&lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;（）を実装します。カスタムレイアウトマネージャーの実装の詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-borderlayout-example.html&quot;&gt;境界線レイアウト&lt;/a&gt;と&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-flowlayout-example.html&quot;&gt;フローレイアウトの&lt;/a&gt;例を参照してください。</target>
        </trans-unit>
        <trans-unit id="860adb15edbf1341eeee302843d420b99f26e635" translate="yes" xml:space="preserve">
          <source>To make your project use precompiled headers, you only need to define the &lt;a href=&quot;qmake-variable-reference#precompiled-header&quot;&gt;PRECOMPILED_HEADER&lt;/a&gt; variable in your project file:</source>
          <target state="translated">プロジェクトでプリコンパイル済みヘッダーを使用するには、プロジェクトファイルで&lt;a href=&quot;qmake-variable-reference#precompiled-header&quot;&gt;PRECOMPILED_HEADER&lt;/a&gt;変数を定義するだけです。</target>
        </trans-unit>
        <trans-unit id="22f7f2fdcdb3aa5aa6e65a6e95e5ff852426627f" translate="yes" xml:space="preserve">
          <source>To mark a Qt class as licensed specify a &quot;LicenseKey&quot; using the &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;() macro.</source>
          <target state="translated">Qtクラスをライセンス済みとしてマークするには、&lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;（）マクロを使用して「LicenseKey」を指定します。</target>
        </trans-unit>
        <trans-unit id="d3a6d12e050bc056f11633e945b965e84bf792c2" translate="yes" xml:space="preserve">
          <source>To minimize compatibility issues, any &lt;code&gt;@&lt;/code&gt; that doesn't appear at the first position in the value or that isn't followed by a Qt type (&lt;code&gt;Point&lt;/code&gt;, &lt;code&gt;Rect&lt;/code&gt;, &lt;code&gt;Size&lt;/code&gt;, etc.) is treated as a normal character.</source>
          <target state="translated">互換性の問題を最小限に抑えるために、値の最初の位置に表示されない、またはQtタイプ（ &lt;code&gt;Point&lt;/code&gt; 、 &lt;code&gt;Rect&lt;/code&gt; 、 &lt;code&gt;Size&lt;/code&gt; など）が後に続かない &lt;code&gt;@&lt;/code&gt; は、通常の文字として扱われます。</target>
        </trans-unit>
        <trans-unit id="dbbc11591696f7475166d9111393a42ebd2f2511" translate="yes" xml:space="preserve">
          <source>To modify a color group you call the functions &lt;a href=&quot;qpalette#setColor&quot;&gt;setColor&lt;/a&gt;() and &lt;a href=&quot;qpalette#setBrush&quot;&gt;setBrush&lt;/a&gt;(), depending on whether you want a pure color or a pixmap pattern.</source>
          <target state="translated">色グループを変更するには、純粋な色が必要か、ピックスマップパターンが必要かによって、関数&lt;a href=&quot;qpalette#setColor&quot;&gt;setColor&lt;/a&gt;（）および&lt;a href=&quot;qpalette#setBrush&quot;&gt;setBrush&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8c0e19c04b9168dc2f39467316ebef46d282a255" translate="yes" xml:space="preserve">
          <source>To modify array elements, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload instead.</source>
          <target state="translated">配列要素を変更するには、代わりに&lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty（quint32 arrayIndex、const QJSValue＆value）&lt;/a&gt;オーバーロードを使用します。</target>
        </trans-unit>
        <trans-unit id="2af6400ae7389e6c602c4d02e24f0effc3196358" translate="yes" xml:space="preserve">
          <source>To modify the form settings, open the &lt;b&gt;Form&lt;/b&gt; menu and select &lt;b&gt;Form Settings...&lt;/b&gt;</source>
          <target state="translated">フォームの設定を変更するには、開く&lt;b&gt;フォームの&lt;/b&gt;メニューを選択し、&lt;b&gt;書式設定...&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ed9093ac86a35bc9b169d0053f66740ebfd8ec72" translate="yes" xml:space="preserve">
          <source>To modify the selection using the mouse, bind &lt;a href=&quot;qml-qtquick-pdf-pdfselection#fromPoint-prop&quot;&gt;fromPoint&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-pdf-pdfselection#toPoint-prop&quot;&gt;toPoint&lt;/a&gt; to the suitable properties of an input handler so that they will be set to the positions where the drag gesture begins and ends, respectively; and bind the &lt;a href=&quot;qml-qtquick-pdf-pdfselection#hold-prop&quot;&gt;hold&lt;/a&gt; property so that it will be set to &lt;code&gt;true&lt;/code&gt; during the drag gesture and &lt;code&gt;false&lt;/code&gt; when the gesture ends.</source>
          <target state="translated">マウスを使用して選択を変更するには、&lt;a href=&quot;qml-qtquick-pdf-pdfselection#fromPoint-prop&quot;&gt;fromPoint&lt;/a&gt;と&lt;a href=&quot;qml-qtquick-pdf-pdfselection#toPoint-prop&quot;&gt;toPoint&lt;/a&gt;を入力ハンドラーの適切なプロパティにバインドして、ドラッグジェスチャが開始および終了する位置にそれぞれ設定されるようにします。ドラッグジェスチャ中に &lt;code&gt;true&lt;/code&gt; に設定され、ジェスチャが終了すると &lt;code&gt;false&lt;/code&gt; に設定されるように、&lt;a href=&quot;qml-qtquick-pdf-pdfselection#hold-prop&quot;&gt;hold&lt;/a&gt;プロパティをバインドします。</target>
        </trans-unit>
        <trans-unit id="ee2fca47d7b6422125613396699ae65387f0776f" translate="yes" xml:space="preserve">
          <source>To move a widget within a layout, hold down &lt;b&gt;Shift&lt;/b&gt; and &lt;b&gt;Control&lt;/b&gt; while dragging the widget. This extends the selection to the widget's parent layout.</source>
          <target state="translated">レイアウト内でウィジェットを移動するには、&lt;b&gt;Shiftキー&lt;/b&gt;と&lt;b&gt;Control &lt;/b&gt;&lt;b&gt;キー&lt;/b&gt;を押しながらウィジェットをドラッグします。これにより、選択範囲がウィジェットの親レイアウトに拡張されます。</target>
        </trans-unit>
        <trans-unit id="f39318520116757e766814af45e16628a1efab6f" translate="yes" xml:space="preserve">
          <source>To move an object to the main thread, use &lt;a href=&quot;qcoreapplication#instance&quot;&gt;QApplication::instance&lt;/a&gt;() to retrieve a pointer to the current application, and then use &lt;a href=&quot;qobject#thread&quot;&gt;QApplication::thread&lt;/a&gt;() to retrieve the thread in which the application lives. For example:</source>
          <target state="translated">オブジェクトをメインスレッドに移動するには、&lt;a href=&quot;qcoreapplication#instance&quot;&gt;QApplication :: instance&lt;/a&gt;（）を使用して現在のアプリケーションへのポインターを取得してから、&lt;a href=&quot;qobject#thread&quot;&gt;QApplication :: thread&lt;/a&gt;（）を使用してアプリケーションが存在するスレッドを取得します。例えば：</target>
        </trans-unit>
        <trans-unit id="d8a59e836851ee839a25c2abf177e213855dae62" translate="yes" xml:space="preserve">
          <source>To move an object to the main thread, use QApplication::instance() to retrieve a pointer to the current application, and then use QApplication::thread() to retrieve the thread in which the application lives. For example:</source>
          <target state="translated">オブジェクトをメインスレッドに移動するには、QApplication::instance()を使用して現在のアプリケーションへのポインタを取得し、QApplication::thread()を使用してアプリケーションが存在するスレッドを取得します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="a1fc7d8930b7cb6ca6e370f2e45dedcbb8d058c0" translate="yes" xml:space="preserve">
          <source>To move rows within the same parent, specify the row to move them to.</source>
          <target state="translated">同じ親内の行を移動させるには、移動先の行を指定します。</target>
        </trans-unit>
        <trans-unit id="4cc90b9a72822229fc1d4dc495b6bcbcab697266" translate="yes" xml:space="preserve">
          <source>To navigate through a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;, you can also use &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;をナビゲートするには、&lt;a href=&quot;containers#foreach&quot;&gt;foreachを&lt;/a&gt;使用することもできます：</target>
        </trans-unit>
        <trans-unit id="3f2c55e8197d44dfacd9cf997f97e3641d0dd98e" translate="yes" xml:space="preserve">
          <source>To navigate through a QSet, you can also use &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;:</source>
          <target state="translated">QSetをナビゲートするには、&lt;a href=&quot;containers#foreach&quot;&gt;foreachを&lt;/a&gt;使用することもできます。</target>
        </trans-unit>
        <trans-unit id="4c0017e1db6e61eef7631032130dc4955aff4cee" translate="yes" xml:space="preserve">
          <source>To obtain a list of substitutions use &lt;a href=&quot;qfont#substitutes&quot;&gt;substitutes&lt;/a&gt;().</source>
          <target state="translated">置換のリストを取得するには、&lt;a href=&quot;qfont#substitutes&quot;&gt;substitutes&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="ed7652e1feb5d67022d95e8698bbafb050e81fde" translate="yes" xml:space="preserve">
          <source>To obtain a list of unique keys, where each key from the map only occurs once, use &lt;a href=&quot;qhash#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;().</source>
          <target state="translated">マップの各キーが1回だけ出現する一意のキーのリストを取得するには、&lt;a href=&quot;qhash#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="52798863d567b8726801f1b51967c5e6c3cddf37" translate="yes" xml:space="preserve">
          <source>To obtain a list of unique keys, where each key from the map only occurs once, use &lt;a href=&quot;qmap#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;().</source>
          <target state="translated">マップの各キーが1回だけ出現する一意のキーのリストを取得するには、&lt;a href=&quot;qmap#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;（）を使用します。</target>
        </trans-unit>
        <trans-unit id="be5cb1c0f6c45ef422cd1e4d05c52d6c52c6eb5a" translate="yes" xml:space="preserve">
          <source>To obtain a model index that corresponds to an item of data, three properties must be specified to the model: a row number, a column number, and the model index of a parent item. The following sections describe and explain these properties in detail.</source>
          <target state="translated">データの項目に対応するモデルインデックスを取得するためには、モデルに行番号、列番号、親項目のモデルインデックスの3つのプロパティを指定する必要があります。以下のセクションでは、これらのプロパティについて詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="7f6b89bf1afbacec850f7a44399ede13ee125170" translate="yes" xml:space="preserve">
          <source>To obtain a model index that refers to an existing item in a model, call &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel::index&lt;/a&gt;() with the required row and column values, and the model index of the parent. When referring to top-level items in a model, supply &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt;() as the parent index.</source>
          <target state="translated">モデル内の既存のアイテムを参照するモデルインデックスを取得するには、必要な行と列の値、および親のモデルインデックスを指定して&lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel :: index&lt;/a&gt;（）を呼び出します。モデルのトップレベルのアイテムを参照する場合は、&lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt;（）を親インデックスとして指定します。</target>
        </trans-unit>
        <trans-unit id="596beaa1cacc0e84368c96579274f41e69c960dd" translate="yes" xml:space="preserve">
          <source>To obtain a model index that refers to an existing item in a model, call &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel::index&lt;/a&gt;() with the required row and column values, and the model index of the parent. When referring to top-level items in a model, supply QModelIndex() as the parent index.</source>
          <target state="translated">モデル内の既存のアイテムを参照するモデルインデックスを取得するには、必要な行と列の値、および親のモデルインデックスを指定して&lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel :: index&lt;/a&gt;（）を呼び出します。モデルの最上位アイテムを参照する場合は、親インデックスとしてQModelIndex（）を指定します。</target>
        </trans-unit>
        <trans-unit id="160405715496d7f87445c5eebb0e973d3613cb42" translate="yes" xml:space="preserve">
          <source>To obtain a model index, we specify the row number, column number (zero for the first column), and the appropriate model index for the parent of all the items that we want. The text stored in each item is retrieved using the model's &lt;a href=&quot;qfilesystemmodel#data&quot;&gt;data()&lt;/a&gt; function. We specify the model index and the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;DisplayRole&lt;/a&gt; to obtain data for the item in the form of a string.</source>
          <target state="translated">モデルインデックスを取得するには、行番号、列番号（最初の列はゼロ）、および必要なすべてのアイテムの親の適切なモデルインデックスを指定します。各アイテムに格納されているテキストは、モデルの&lt;a href=&quot;qfilesystemmodel#data&quot;&gt;data（）&lt;/a&gt;関数を使用して取得されます。モデルインデックスと&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;DisplayRole&lt;/a&gt;を指定して、アイテムのデータを文字列の形式で取得します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
