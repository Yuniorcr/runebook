<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="c6ab0aa584df247f5d378d1f252993e18a54302b" translate="yes" xml:space="preserve">
          <source>The ellipsis should appear at the beginning of the text.</source>
          <target state="translated">省略記号は本文の先頭に表示されている必要があります。</target>
        </trans-unit>
        <trans-unit id="fa30930b8e93aa8e8cfa6132ecb27a1c119ec948" translate="yes" xml:space="preserve">
          <source>The ellipsis should appear at the end of the text.</source>
          <target state="translated">省略記号は本文の最後に表示されている必要があります。</target>
        </trans-unit>
        <trans-unit id="402bdfd72e13146c9556ad7dbf39e7149865ad37" translate="yes" xml:space="preserve">
          <source>The ellipsis should appear in the middle of the text.</source>
          <target state="translated">省略記号は本文の途中に表示されている必要があります。</target>
        </trans-unit>
        <trans-unit id="2d4c3c4e3a557d3e1e2beab56b83aa7539cc2eac" translate="yes" xml:space="preserve">
          <source>The email address associated with the certificate</source>
          <target state="translated">証明書に関連付けられたメールアドレス</target>
        </trans-unit>
        <trans-unit id="109c2b9e13da9bdc75da327a085a3d24e6276ff7" translate="yes" xml:space="preserve">
          <source>The embedded widget overrides the proxy widget cursor. The proxy cursor changes depending on which embedded subwidget is currently under the mouse.</source>
          <target state="translated">埋め込みウィジェットは、プロキシウィジェットのカーソルを上書きします。プロキシカーソルは、現在どの埋め込みサブウィジェットがマウスの下にあるかによって変化します。</target>
        </trans-unit>
        <trans-unit id="424d034c77252bbd57638923e38806846cb0fafb" translate="yes" xml:space="preserve">
          <source>The emissive aluminum material has the following properties:</source>
          <target state="translated">発光性アルミニウム材は、以下のような特性を有している。</target>
        </trans-unit>
        <trans-unit id="fa2e647ded51f54976067aa33b478e44993d0558" translate="yes" xml:space="preserve">
          <source>The emissive texture map mask. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/emissive_mask.png&quot;&lt;/code&gt;.</source>
          <target state="translated">放射テクスチャマップマスク。デフォルトは、ソースが &lt;code&gt;&quot;maps/emissive_mask.png&quot;&lt;/code&gt; &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;テクスチャ&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="9ec4815c32e8303758531c9b2d970953670e77c3" translate="yes" xml:space="preserve">
          <source>The emissive texture map. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/emissive.png&quot;&lt;/code&gt;.</source>
          <target state="translated">放射テクスチャマップ。デフォルトは、ソースが &lt;code&gt;&quot;maps/emissive.png&quot;&lt;/code&gt; &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;テクスチャ&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="1840aa46fa7aba16b36afa1909f346a93f9dc9fa" translate="yes" xml:space="preserve">
          <source>The empty area of a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;の空の領域。</target>
        </trans-unit>
        <trans-unit id="2d498004ce85cdff2f5439a8d34aed0178c79c4e" translate="yes" xml:space="preserve">
          <source>The empty area of the menu.</source>
          <target state="translated">メニューの空の部分。</target>
        </trans-unit>
        <trans-unit id="a8af533b61b8623da90303095e6d0a59eacab10a" translate="yes" xml:space="preserve">
          <source>The empty label is the topmost element in the list of commands, which represents the state of the document before any commands were pushed on the stack. The default is the string &quot;&amp;lt;empty&amp;gt;&quot;.</source>
          <target state="translated">空のラベルは、コマンドのリストの最上位の要素であり、スタックにコマンドがプッシュされる前のドキュメントの状態を表します。デフォルトは文字列 &quot;&amp;lt;empty&amp;gt;&quot;です。</target>
        </trans-unit>
        <trans-unit id="95040e66f6b6b73c02518e0f5efd586f639f8bc2" translate="yes" xml:space="preserve">
          <source>The enabled state of the group affects the enabled state of each item in the group, except that explicitly disabled items are not enabled even if the group is enabled.</source>
          <target state="translated">グループの有効化状態は、グループが有効化されていても明示的に無効化された項目は有効化されないことを除き、グループ内の各項目の有効化状態に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="e6b9007fd7edd59e6489381c651cb939d2d296bc" translate="yes" xml:space="preserve">
          <source>The enabled/disabled state of the &lt;b&gt;Next&lt;/b&gt; and/or &lt;b&gt;Finish&lt;/b&gt; buttons is one way to perform validation on the user input. Another way is to reimplement &lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;validateCurrentPage&lt;/a&gt;() (or &lt;a href=&quot;qwizardpage#validatePage&quot;&gt;QWizardPage::validatePage&lt;/a&gt;()) to perform some last-minute validation (and show an error message if the user has entered incomplete or invalid information). If the function returns &lt;code&gt;true&lt;/code&gt;, the next page is shown (or the wizard finishes); otherwise, the current page stays up.</source>
          <target state="translated">「&lt;b&gt;次へ」&lt;/b&gt;または「&lt;b&gt;完了」&lt;/b&gt;ボタンの有効/無効状態は、ユーザー入力の検証を実行する1つの方法です。別の方法は、&lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;validateCurrentPage&lt;/a&gt;（）（または&lt;a href=&quot;qwizardpage#validatePage&quot;&gt;QWizardPage :: validatePage&lt;/a&gt;（））を再実装して、直前の検証を実行することです（ユーザーが不完全または無効な情報を入力した場合はエラーメッセージを表示します）。関数が &lt;code&gt;true&lt;/code&gt; を返す場合、次のページが表示されます（またはウィザードが終了します）。それ以外の場合、現在のページはそのまま残ります。</target>
        </trans-unit>
        <trans-unit id="3e761359f054baf5c8fdc120e80fed770d442164" translate="yes" xml:space="preserve">
          <source>The encoded query string can be obtained again using &lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt;(). This will take all the internally-stored items and encode the string using the delimiters.</source>
          <target state="translated">エンコードされたクエリ文字列は、&lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt;（）を使用して再度取得できます。これにより、内部に保存されているすべてのアイテムが取得され、区切り文字を使用して文字列がエンコードされます。</target>
        </trans-unit>
        <trans-unit id="9d984263fdcc8872be7fd2f2ad554ba506344cc5" translate="yes" xml:space="preserve">
          <source>The encoder converts Unicode into another format, remembering any state that is required between calls.</source>
          <target state="translated">エンコーダは Unicode を別の形式に変換し、呼び出しの間に必要な状態を記憶しています。</target>
        </trans-unit>
        <trans-unit id="7db735184ff679e5252ec6dce99f46ce4598d122" translate="yes" xml:space="preserve">
          <source>The encoder remembers any state that is required between calls, so converting data received in chunks, for example, when receiving it over a network, is just as easy, by calling the encoder whenever new data is available:</source>
          <target state="translated">エンコーダは、呼び出しの間に必要な状態を記憶しているので、例えばネットワーク経由で受信する場合など、チャンクで受信したデータを変換するのも、新しいデータが利用可能になるたびにエンコーダを呼び出すことで簡単にできます。</target>
        </trans-unit>
        <trans-unit id="05fae25d52fe683cca6b42fc8a9b778368cf6f62" translate="yes" xml:space="preserve">
          <source>The encoding information is stored in the initial xml tag which gets written when you call &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt;(). Call this function before calling &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt;().</source>
          <target state="translated">エンコーディング情報は、&lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt;（）を呼び出したときに書き込まれる初期xmlタグに格納されます。この関数は、&lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt;（）を呼び出す前に呼び出します。</target>
        </trans-unit>
        <trans-unit id="e67420893a9aab0625964b83512548335bd3f51f" translate="yes" xml:space="preserve">
          <source>The encoding is fetched from the &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;.</source>
          <target state="translated">エンコーディングは&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;からフェッチされます。</target>
        </trans-unit>
        <trans-unit id="8e15a940567cdf980267aefde0fe4fd8803f54dd" translate="yes" xml:space="preserve">
          <source>The encoding is fetched from the document.</source>
          <target state="translated">エンコーディングはドキュメントから取得します。</target>
        </trans-unit>
        <trans-unit id="661f34dcb7a353a52aa7e655afabd9787338bf87" translate="yes" xml:space="preserve">
          <source>The encoding of the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; in</source>
          <target state="translated">エンコーディング&lt;a href=&quot;xmlprocessing&quot;&gt;のXQuery&lt;/a&gt;で</target>
        </trans-unit>
        <trans-unit id="1ea020eb7c7c084118f2cfced41342079d7879e4" translate="yes" xml:space="preserve">
          <source>The encoding of the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; in</source>
          <target state="translated">エンコーディング&lt;a href=&quot;xmlprocessing#&quot;&gt;のXQuery&lt;/a&gt;で</target>
        </trans-unit>
        <trans-unit id="5b893fa7e4511862e9b68ac0c0e0d73de501df64" translate="yes" xml:space="preserve">
          <source>The encoding options from &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::ComponentFormattingOption&lt;/a&gt; don't make much sense for this method, nor does &lt;a href=&quot;qurl#UrlFormattingOption-enum&quot;&gt;QUrl::PreferLocalFile&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl :: ComponentFormattingOption&lt;/a&gt;のエンコーディングオプションは、このメソッドにはあまり意味がなく、&lt;a href=&quot;qurl#UrlFormattingOption-enum&quot;&gt;QUrl :: PreferLocalFile&lt;/a&gt;も意味がありません。</target>
        </trans-unit>
        <trans-unit id="62a178bf3b8d6341baebd9d47e478445a364d0a1" translate="yes" xml:space="preserve">
          <source>The end of the device data is detected.</source>
          <target state="translated">デバイスデータの終了を検出します。</target>
        </trans-unit>
        <trans-unit id="0c6edc9ab8e6291c45a61685222951963ab772bc" translate="yes" xml:space="preserve">
          <source>The end of the input stream was unexpectedly reached while processing an element.</source>
          <target state="translated">要素の処理中に入力ストリームの終端に予期せず到達した。</target>
        </trans-unit>
        <trans-unit id="df0f70dd44eaaec3d9ac90200a9c283c2186011b" translate="yes" xml:space="preserve">
          <source>The end of the timeline.</source>
          <target state="translated">タイムラインの終わり。</target>
        </trans-unit>
        <trans-unit id="ad8d0d7049c4ff8ea50271ca8ae32cb76da4f40a" translate="yes" xml:space="preserve">
          <source>The end position of the display text for a hypertext link has changed.</source>
          <target state="translated">ハイパーテキストリンクの表示テキストの終了位置を変更しました。</target>
        </trans-unit>
        <trans-unit id="1ece2cd2d6f834c597dc293144fff2e47d908c5b" translate="yes" xml:space="preserve">
          <source>The end result looks like the following:</source>
          <target state="translated">最終的な結果は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="3247f67cf3bc0f249c493ff7c60e4b0dc582d980" translate="yes" xml:space="preserve">
          <source>The end result:</source>
          <target state="translated">最終的には</target>
        </trans-unit>
        <trans-unit id="f93cd9e10ee38e8343575bc3472e2e9e55624ace" translate="yes" xml:space="preserve">
          <source>The endianness of the image. Certain image formats can be stored as BigEndian or LittleEndian. A handler that supports Endianness uses the value of this option to determine how the image should be stored.</source>
          <target state="translated">画像のエンディアン。特定の画像フォーマットでは、BigEndian または LittleEndian として保存することができます。Endianness をサポートするハンドラは、このオプションの値を使用して画像の保存方法を決定します。</target>
        </trans-unit>
        <trans-unit id="bad04f573d7f9a9088e6c60308d3a6dafa6b9bcc" translate="yes" xml:space="preserve">
          <source>The ending angle of the pie.</source>
          <target state="translated">パイの結末角。</target>
        </trans-unit>
        <trans-unit id="02e16ccdfe04a16295ef1401736157039b47ec90" translate="yes" xml:space="preserve">
          <source>The ending location, in pixels from the upper-left corner of the page, from which to find selected text. This can be bound to the &lt;code&gt;centroid.position&lt;/code&gt; of a &lt;a href=&quot;qml-qtquick-draghandler&quot;&gt;DragHandler&lt;/a&gt; to end selection of text at the position where the user is currently dragging the mouse, for example.</source>
          <target state="translated">選択したテキストを検索するための、ページの左上隅からのピクセル単位の終了位置。これを&lt;a href=&quot;qml-qtquick-draghandler&quot;&gt;DragHandler&lt;/a&gt;の &lt;code&gt;centroid.position&lt;/code&gt; にバインドして、たとえば、ユーザーが現在マウスをドラッグしている位置でテキストの選択を終了することができます。</target>
        </trans-unit>
        <trans-unit id="e90622ba6b1a39f2a360f9bec3029564299aefc5" translate="yes" xml:space="preserve">
          <source>The engine allows the registration of both instantiable and non-instantiable types. Once a class is registered as a QML type, it can be used as a data type for exchanging data between QML and C++. See &lt;a href=&quot;qtqml-cppintegration-definetypes#registering-c-types-with-the-qml-type-system&quot;&gt;Registering C++ types with the QML type system&lt;/a&gt; for further details on type registration.</source>
          <target state="translated">エンジンでは、インスタンス化可能なタイプとインスタンス化できないタイプの両方を登録できます。クラスがQMLタイプとして登録されると、QMLとC ++の間でデータを交換するためのデータタイプとして使用できます。タイプ登録の詳細については&lt;a href=&quot;qtqml-cppintegration-definetypes#registering-c-types-with-the-qml-type-system&quot;&gt;、QMLタイプシステム&lt;/a&gt;へのC ++タイプの登録を参照してください。</target>
        </trans-unit>
        <trans-unit id="720139e6ac703c3043f5d959258cd9a45414c4f9" translate="yes" xml:space="preserve">
          <source>The engine allows the registration of both instantiable and non-instantiable types. Registering an instantiable type enables a C++ class to be used as the definition of a QML object type, allowing it to be used in object declarations from QML code to create objects of this type. Registration also provides the engine with additional type metadata, enabling the type (and any enums declared by the class) to be used as a data type for property values, method parameters and return values, and signal parameters that are exchanged between QML and C++.</source>
          <target state="translated">このエンジンでは、インスタンス化可能な型とインスタンス化不可能な型の両方を登録することができます。インスタンス化可能な型を登録することで、C++クラスをQMLオブジェクト型の定義として使用することができ、QMLコードからのオブジェクト宣言で使用して、この型のオブジェクトを作成することができます。また、登録することで、エンジンに型のメタデータを付加することができ、その型(及びそのクラスで宣言された列挙型)を、QML と C++の間でやり取りされるプロパティ値、メソッドパラメータや戻り値、シグナルパラメータのデータ型として利用することができます。</target>
        </trans-unit>
        <trans-unit id="51d863387a04e972ffcd5d6d2784f77dbf76557c" translate="yes" xml:space="preserve">
          <source>The engine behavior can be further tweaked by using the inherited methods from &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;から継承したメソッドを使用して、エンジンの動作をさらに調整できます。</target>
        </trans-unit>
        <trans-unit id="cfc8c4dcd154899362805dd36fc1c185de8b1d33" translate="yes" xml:space="preserve">
          <source>The engine can alpha blend primitives.</source>
          <target state="translated">エンジンはプリミティブをアルファブレンドすることができます。</target>
        </trans-unit>
        <trans-unit id="c7804cedb9d0d97075666543a2a21b7f25fd044b" translate="yes" xml:space="preserve">
          <source>The engine can transform pixmaps, including rotation and shearing.</source>
          <target state="translated">このエンジンは、回転や剪断を含むpixmapsの変換を行うことができます。</target>
        </trans-unit>
        <trans-unit id="a2054896ebe86335faca2aa5407e39419c85cd10" translate="yes" xml:space="preserve">
          <source>The engine can use antialising to improve the appearance of rendered primitives.</source>
          <target state="translated">エンジンは、レンダリングされたプリミティブの外観を向上させるためにアンチアライズを使用することができます。</target>
        </trans-unit>
        <trans-unit id="1366a5920352a5b477d36518b3915e820778f5a3" translate="yes" xml:space="preserve">
          <source>The engine has native support for gradients with coordinate mode &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient::ObjectBoundingMode&lt;/a&gt;. Otherwise, if QPaintEngine::PatternTransform is supported, object bounding mode gradients are converted to gradients with coordinate mode &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient::LogicalMode&lt;/a&gt; and a brush transform for the coordinate mapping.</source>
          <target state="translated">エンジンは、座標モード&lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient :: ObjectBoundingModeの&lt;/a&gt;グラデーションをネイティブでサポートしています。それ以外の場合、QPaintEngine :: PatternTransformがサポートされていれば、オブジェクトバウンディングモードのグラデーションは、座標モード&lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient :: LogicalMode&lt;/a&gt;とグラデーションマッピングの座標変換のグラデーションに変換されます。</target>
        </trans-unit>
        <trans-unit id="1f19e23cff640288b5fd681bc6e3de50c2881d45" translate="yes" xml:space="preserve">
          <source>The engine has path support.</source>
          <target state="translated">エンジンはパスをサポートしています。</target>
        </trans-unit>
        <trans-unit id="7544e249c01a8bb51b7adba13492dd21c2084354" translate="yes" xml:space="preserve">
          <source>The engine has support for performing perspective transformations on primitives.</source>
          <target state="translated">このエンジンは、プリミティブ上での透視変換の実行をサポートしています。</target>
        </trans-unit>
        <trans-unit id="aa8edcfaa325e6b34cc91845dd06f9d610179e43" translate="yes" xml:space="preserve">
          <source>The engine has support for transforming brush patterns.</source>
          <target state="translated">このエンジンは、ブラシパターンの変換をサポートしています。</target>
        </trans-unit>
        <trans-unit id="2002e317c350cbc01793a8304d2cd49afc1a825e" translate="yes" xml:space="preserve">
          <source>The engine has support for transforming drawing primitives.</source>
          <target state="translated">このエンジンは、描画プリミティブの変換をサポートしています。</target>
        </trans-unit>
        <trans-unit id="ddb881e11767e2fede628fcb54feecbae516a838" translate="yes" xml:space="preserve">
          <source>The engine is capable of painting outside of paint events.</source>
          <target state="translated">エンジンはペイントイベント以外でも塗装が可能です。</target>
        </trans-unit>
        <trans-unit id="00164342113ddf2cd8b998d5e81afc937ea0aebb" translate="yes" xml:space="preserve">
          <source>The engine is capable of rendering brushes that has a texture with an alpha channel or a mask.</source>
          <target state="translated">このエンジンは、アルファチャンネルやマスクを持つテクスチャを持つブラシをレンダリングすることができます。</target>
        </trans-unit>
        <trans-unit id="1d0001750fbd738e633b7a10463c5dc04363b945" translate="yes" xml:space="preserve">
          <source>The engine is capable of rendering brushes with the brush patterns specified in &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::BrushStyle&lt;/a&gt;.</source>
          <target state="translated">エンジンは、&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: BrushStyleで&lt;/a&gt;指定されたブラシパターンでブラシをレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="99d00682fb052e82177021b0ec567cd923b23a28" translate="yes" xml:space="preserve">
          <source>The engine supports Porter-Duff operations</source>
          <target state="translated">ポーターダフのオペレーションをサポートするエンジン</target>
        </trans-unit>
        <trans-unit id="87ded81b061b2946f13287d597756e46943c9084" translate="yes" xml:space="preserve">
          <source>The engine supports bitwise raster operations.</source>
          <target state="translated">このエンジンは、ビット単位のラスタ演算をサポートしています。</target>
        </trans-unit>
        <trans-unit id="65bb85077b4d6fa1dccb275571cafc4af1db315b" translate="yes" xml:space="preserve">
          <source>The engine supports blending modes.</source>
          <target state="translated">エンジンはブレンディングモードをサポートしています。</target>
        </trans-unit>
        <trans-unit id="fc9b4b46a13d3128c545d2a4e7c259c86fad03a2" translate="yes" xml:space="preserve">
          <source>The engine supports conical gradient fills.</source>
          <target state="translated">このエンジンは円錐形のグラデーションフィルをサポートしています。</target>
        </trans-unit>
        <trans-unit id="506bfc270bf86930ca3dcefd249379c64e9cc7f8" translate="yes" xml:space="preserve">
          <source>The engine supports drawing strokes that contain brushes as fills, not just solid colors (e.g. a dashed gradient line of width 2).</source>
          <target state="translated">このエンジンは、ソリッドカラーだけでなく、ブラシを塗りつぶしとして含む描画ストロークをサポートしています(例えば、幅2の破線のグラデーションラインなど)。</target>
        </trans-unit>
        <trans-unit id="0998fa11cfa09716b0e03b4c9a80580c38d06385" translate="yes" xml:space="preserve">
          <source>The engine supports linear gradient fills.</source>
          <target state="translated">このエンジンは直線的なグラデーションの塗りつぶしをサポートしています。</target>
        </trans-unit>
        <trans-unit id="376be70242c7b62769dc21e8a2f1d6b4314e3bf6" translate="yes" xml:space="preserve">
          <source>The engine supports radial gradient fills.</source>
          <target state="translated">このエンジンは、放射状のグラデーションフィルをサポートしています。</target>
        </trans-unit>
        <trans-unit id="ce76db00f5bcaa85ee59925df635704a8e8bd985" translate="yes" xml:space="preserve">
          <source>The engine supports the feature provided by &lt;a href=&quot;qpainter#setOpacity&quot;&gt;QPainter::setOpacity&lt;/a&gt;().</source>
          <target state="translated">エンジンは&lt;a href=&quot;qpainter#setOpacity&quot;&gt;QPainter :: setOpacity&lt;/a&gt;（）が提供する機能をサポートしています。</target>
        </trans-unit>
        <trans-unit id="78b86e1b20096a3c228ae77b51d14884a762ccba" translate="yes" xml:space="preserve">
          <source>The entire Latin-1 string is returned if</source>
          <target state="translated">以下の場合、Latin-1 文字列全体が返されます。</target>
        </trans-unit>
        <trans-unit id="fcbe868d6c9bb17053d1fe53e54b994792f0764f" translate="yes" xml:space="preserve">
          <source>The entire byte array is returned if</source>
          <target state="translated">の場合、バイト配列全体が返されます。</target>
        </trans-unit>
        <trans-unit id="44dd94095c084496acc266bb75cddef50c586e15" translate="yes" xml:space="preserve">
          <source>The entire content of the document is set with &lt;a href=&quot;qdomdocument#setContent&quot;&gt;setContent&lt;/a&gt;(). This function parses the string it is passed as an XML document and creates the DOM tree that represents the document. The root element is available using &lt;a href=&quot;qdomdocument#documentElement&quot;&gt;documentElement&lt;/a&gt;(). The textual representation of the document can be obtained using &lt;a href=&quot;qdomdocument#toString&quot;&gt;toString&lt;/a&gt;().</source>
          <target state="translated">ドキュメントのコンテンツ全体は&lt;a href=&quot;qdomdocument#setContent&quot;&gt;setContent&lt;/a&gt;（）で設定されます。この関数は、XMLドキュメントとして渡された文字列を解析し、ドキュメントを表すDOMツリーを作成します。ルート要素は&lt;a href=&quot;qdomdocument#documentElement&quot;&gt;documentElement&lt;/a&gt;（）を使用して利用できます。ドキュメントのテキスト表現は、&lt;a href=&quot;qdomdocument#toString&quot;&gt;toString&lt;/a&gt;（）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="166ba4bdb552f1e9af70d535181f424010e63e3c" translate="yes" xml:space="preserve">
          <source>The entire path to be navigated.</source>
          <target state="translated">ナビゲートされるパス全体。</target>
        </trans-unit>
        <trans-unit id="0981124fa2317c1d56882ff4e369f2d3be8d39fc" translate="yes" xml:space="preserve">
          <source>The entire string is returned if</source>
          <target state="translated">文字列全体が返されるのは</target>
        </trans-unit>
        <trans-unit id="aedbd873cf1161c1f33e4eba05fa5f12907cd49f" translate="yes" xml:space="preserve">
          <source>The entities using the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; can be associated with the type to enable interaction with the item; if an entity has an &lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; and converted to mouse events and finally sent to the item.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt;を使用するエンティティをタイプに関連付けて、アイテムとの相互作用を有効にすることができます。エンティティに&lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt;コンポーネントがある場合、そのピッカーからのピックイベントは&lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2Dに&lt;/a&gt;送信され、マウスイベントに変換されて、最終的にアイテムに送信されます。</target>
        </trans-unit>
        <trans-unit id="530504d4e52a8143b9fae1d68c4c2800946a2374" translate="yes" xml:space="preserve">
          <source>The entities using the &lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D&lt;/a&gt; can be associated with the class to enable interaction with the item; if an entity has a &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the &lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D&lt;/a&gt; and converted to mouse events and finally sent to the item.</source>
          <target state="translated">&lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D&lt;/a&gt;を使用するエンティティをクラスに関連付けて、アイテムとの相互作用を有効にすることができます。エンティティに&lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt;コンポーネントがある場合、そのピッカーからのピックイベントは&lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2Dに&lt;/a&gt;送信され、マウスイベントに変換されて、最終的にアイテムに送信されます。</target>
        </trans-unit>
        <trans-unit id="1608dfbfd1c511c0d48f4bade18ca3a555b16e60" translate="yes" xml:space="preserve">
          <source>The entities using the QScene2D can be associated with the class to enable interaction with the item; if an entity has a &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the QScene2D and converted to mouse events and finally sent to the item.</source>
          <target state="translated">QScene2Dを使用するエンティティをクラスに関連付けて、アイテムとの対話を可能にすることができます。エンティティに&lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt;コンポーネントがある場合、そのピッカーからのピックイベントはQScene2Dに送信され、マウスイベントに変換されて、最後にアイテムに送信されます。</target>
        </trans-unit>
        <trans-unit id="792268b95359987f40571bcc5c056331f536df06" translate="yes" xml:space="preserve">
          <source>The entities using the Scene2D can be associated with the type to enable interaction with the item; if an entity has an &lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the Scene2D and converted to mouse events and finally sent to the item.</source>
          <target state="translated">Scene2Dを使用するエンティティをタイプに関連付けて、アイテムとの対話を可能にすることができます。エンティティに&lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt;コンポーネントがある場合、そのピッカーからのピックイベントはScene2Dに送信され、マウスイベントに変換されて、最後にアイテムに送信されます。</target>
        </trans-unit>
        <trans-unit id="047edff496dbe5ba90326a3dbe9f6e06737125fb" translate="yes" xml:space="preserve">
          <source>The entity can be positionned in the scene by adding a transform component.</source>
          <target state="translated">トランスフォームコンポーネントを追加することで、エンティティをシーン内に配置することができます。</target>
        </trans-unit>
        <trans-unit id="1021f16fa2cf35765282bb9918a660554cdacbd9" translate="yes" xml:space="preserve">
          <source>The entity that the picked geometry belongs to.</source>
          <target state="translated">ピックされたジオメトリが属するエンティティ。</target>
        </trans-unit>
        <trans-unit id="32780723d84c51e7407a879de34eaebd2c6b1e2a" translate="yes" xml:space="preserve">
          <source>The entries have the following meaning:</source>
          <target state="translated">エントリーには以下のような意味があります。</target>
        </trans-unit>
        <trans-unit id="a0ab92439009d345743a4e1d94f8990476b4e2d6" translate="yes" xml:space="preserve">
          <source>The entry point library is statically linked with the application. To avoid issues with static linking and the &lt;a href=&quot;https://doc.qt.io/qt-6.0/lgpl.html&quot;&gt;GNU Lesser General Public License (LGPL)&lt;/a&gt;, it is licensed both under the commercial licenses, and the &lt;a href=&quot;https://spdx.org/licenses/BSD-3-Clause.html&quot;&gt;BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License&lt;/a&gt;.</source>
          <target state="translated">エントリポイントライブラリは、アプリケーションと静的にリンクされています。静的リンクと&lt;a href=&quot;https://doc.qt.io/qt-6.0/lgpl.html&quot;&gt;GNU劣等一般公衆利用許諾契約書（LGPL）の&lt;/a&gt;問題を回避するために、商用ライセンスと&lt;a href=&quot;https://spdx.org/licenses/BSD-3-Clause.html&quot;&gt;BSD3条項の「新規」または「改訂」&lt;/a&gt;ライセンスの両方でライセンスが付与されています。</target>
        </trans-unit>
        <trans-unit id="a577f506b49f1b757f4fbfd8f0364361e2361b2e" translate="yes" xml:space="preserve">
          <source>The enum describes attributes of a type supported by &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;.</source>
          <target state="translated">列挙型は&lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;によってサポートされる型の属性を記述します。</target>
        </trans-unit>
        <trans-unit id="56f2ed7a23f96e219eee11a231a4e886d28da5b0" translate="yes" xml:space="preserve">
          <source>The enum describes attributes of a type supported by &lt;a href=&quot;qtcore-changes-qt6#qmetatype&quot;&gt;QMetaType&lt;/a&gt;.</source>
          <target state="translated">列挙型は、&lt;a href=&quot;qtcore-changes-qt6#qmetatype&quot;&gt;QMetaTypeで&lt;/a&gt;サポートされているタイプの属性を記述します。</target>
        </trans-unit>
        <trans-unit id="8f85e45fae6a8617a57fd58de98feee1f55ee710" translate="yes" xml:space="preserve">
          <source>The enum specifies the kinds of test log messages.</source>
          <target state="translated">enumはテストログメッセージの種類を指定します。</target>
        </trans-unit>
        <trans-unit id="bb6efa8cea701e8cebce64731b732971471bbf78" translate="yes" xml:space="preserve">
          <source>The enum value &lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt::WindowActive&lt;/a&gt; is not an accepted parameter.</source>
          <target state="translated">列挙値&lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt :: WindowActive&lt;/a&gt;はパラメーターとして受け入れられません。</target>
        </trans-unit>
        <trans-unit id="ce5bb651c5d506e895c9756374580a7fba48a30e" translate="yes" xml:space="preserve">
          <source>The enum value &lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt::WindowActive&lt;/a&gt; should not be set.</source>
          <target state="translated">列挙値&lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt :: WindowActive&lt;/a&gt;は設定しないでください。</target>
        </trans-unit>
        <trans-unit id="e396ae7af1b3b869415528600e5b94935cb6f017" translate="yes" xml:space="preserve">
          <source>The enum values are the same as in &lt;a href=&quot;qmessagebox#Icon-enum&quot;&gt;QMessageBox::Icon&lt;/a&gt;.</source>
          <target state="translated">列挙値は&lt;a href=&quot;qmessagebox#Icon-enum&quot;&gt;QMessageBox :: Icon&lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="05cd4b54141681f75bf3d2d29334357aa43b8b7c" translate="yes" xml:space="preserve">
          <source>The enum values are the same as in &lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;QMessageBox::StandardButtons&lt;/a&gt;.</source>
          <target state="translated">列挙値は&lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;QMessageBox :: StandardButtons&lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="65e70534fbac463c12c74e8c87349af9ecf41410" translate="yes" xml:space="preserve">
          <source>The enumeration values are mapped from and must match &lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize::PageSizeId&lt;/a&gt;. They are also duplicated in &lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; and &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;.</source>
          <target state="translated">列挙値はマップされ、&lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize :: PageSizeId&lt;/a&gt;と一致する必要があります。それらは&lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt;と&lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;でも複製されます。</target>
        </trans-unit>
        <trans-unit id="396eef62edbdfe5276a89f6d85a88d47f263f0d1" translate="yes" xml:space="preserve">
          <source>The environment and working directory are inherited from the calling process.</source>
          <target state="translated">環境と作業ディレクトリは呼び出し元のプロセスから継承されます。</target>
        </trans-unit>
        <trans-unit id="53ad95327c77f4d3266824e405f84fad84000b94" translate="yes" xml:space="preserve">
          <source>The environment of the calling process can be obtained using &lt;a href=&quot;qprocessenvironment#systemEnvironment&quot;&gt;QProcessEnvironment::systemEnvironment&lt;/a&gt;().</source>
          <target state="translated">呼び出しプロセスの環境は、&lt;a href=&quot;qprocessenvironment#systemEnvironment&quot;&gt;QProcessEnvironment :: systemEnvironment&lt;/a&gt;（）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="84d9719df7f3ee8ceb0916769043beae4ef1f87a" translate="yes" xml:space="preserve">
          <source>The environment texture map. Enabled when &lt;code&gt;uEnvironmentMappingEnabled&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/spherical_checker.png&quot;&lt;/code&gt;.</source>
          <target state="translated">環境テクスチャマップ。 &lt;code&gt;uEnvironmentMappingEnabled&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合に有効になります。デフォルトは、ソースが &lt;code&gt;&quot;maps/spherical_checker.png&quot;&lt;/code&gt; &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;/spherical_checker.png &lt;/a&gt;」のテクスチャです。</target>
        </trans-unit>
        <trans-unit id="f94352f94a6536f71b782212fc69159270cff8ec" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;QT_MULTIMEDIA_PREFERRED_PLUGINS&lt;/code&gt; can be used to control the priority of the plugins. For example, setting it to &quot;windowsmediafoundation&quot; or &quot;directshow&quot; will cause the corresponding plugin to be the preferred one.</source>
          <target state="translated">環境変数 &lt;code&gt;QT_MULTIMEDIA_PREFERRED_PLUGINS&lt;/code&gt; を使用して、プラグインの優先度を制御できます。たとえば、「windowsmediafoundation」または「directshow」に設定すると、対応するプラグインが優先されます。</target>
        </trans-unit>
        <trans-unit id="93a4fc89ef1bf056e38a0d0801cd0fcef8e62db6" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The &lt;a href=&quot;codecs-jis&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="translated">環境変数 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; を使用して、JIS、Shift-JIS、およびEUC-JPコーデックを微調整できます。&lt;a href=&quot;codecs-jis&quot;&gt;ISO 2022-JP（JIS）テキストコーデックの&lt;/a&gt;ドキュメントには、この変数を使用する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="c25ed68ca569b4e35fadaac699f5e19aa837cbb5" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The &lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="translated">環境変数 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; を使用して、JIS、Shift-JIS、およびEUC-JPコーデックを微調整できます。&lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP（JIS）テキストコーデックの&lt;/a&gt;ドキュメントには、この変数を使用する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="e0a28a7f1b00af61083f66a6359a0b0cbae0ff46" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The mapping names are as for the Japanese XML working group's &lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm&quot;&gt;XML Japanese Profile&lt;/a&gt;, because it names and explains all the widely used mappings. Here are brief descriptions, written by Serika Kurusugawa:</source>
          <target state="translated">環境変数 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; を使用して、JIS、Shift-JIS、およびEUC-JPコーデックを微調整できます。マッピング名は、広く使用されているすべてのマッピングに名前を付けて説明しているため、日本のXMLワーキンググループの&lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm&quot;&gt;XML日本語プロファイル&lt;/a&gt;と同じです。来栖川芹香が書いた簡単な説明は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7a060837d9d758a80e9d9c5c406a57ccff7d9c01" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The mapping names are as for the Japanese XML working group's &lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm#&quot;&gt;XML Japanese Profile&lt;/a&gt;, because it names and explains all the widely used mappings. Here are brief descriptions, written by Serika Kurusugawa:</source>
          <target state="translated">環境変数 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; を使用して、JIS、Shift-JIS、およびEUC-JPコーデックを微調整できます。マッピング名は、広く使用されているすべてのマッピングに名前を付けて説明するため、日本語XMLワーキンググループの&lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm#&quot;&gt;XML日本語プロファイル&lt;/a&gt;と同じです。来栖川せりかさんによる簡単な説明です。</target>
        </trans-unit>
        <trans-unit id="d708f5d851beb0a48a9dea8ff4a8cd7d42daa411" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the codec. The &lt;a href=&quot;codecs-jis&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="translated">環境変数 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; を使用して、コーデックを微調整できます。&lt;a href=&quot;codecs-jis&quot;&gt;ISO 2022-JP（JIS）テキストコーデックの&lt;/a&gt;ドキュメントには、この変数を使用する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="adad2c8160b5117447f41a5b4bee830ef7282fd3" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the codec. The &lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="translated">環境変数 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; を使用して、コーデックを微調整できます。&lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP（JIS）テキストコーデックの&lt;/a&gt;ドキュメントには、この変数を使用する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="9f58fa8d1650c05c837cdbb2e9b0ae6a4eab32a8" translate="yes" xml:space="preserve">
          <source>The ephemeral key is only available when running in client mode, i.e. &lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt;QSslSocket::SslClientMode&lt;/a&gt;. When running in server mode or using a cipher algorithm without forward secrecy a null key is returned. The ephemeral server key will be set before emitting the encrypted() signal.</source>
          <target state="translated">一時キーは、クライアントモード、つまり&lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt;QSslSocket :: SslClientMode&lt;/a&gt;で実行されている場合にのみ使用できます。サーバーモードで実行している場合、または転送秘密なしの暗号アルゴリズムを使用している場合は、nullキーが返されます。一時サーバーキーは、encrypted（）シグナルを送信する前に設定されます。</target>
        </trans-unit>
        <trans-unit id="686c08f3dceb6e4347b2690c6d3c818eb2219c69" translate="yes" xml:space="preserve">
          <source>The epsilon is the rate and amount of change in the value which is close enough to 0 to be considered equal to zero. This will depend on the usage of the value. For pixel positions, 0.25 would suffice. For scale, 0.005 will suffice.</source>
          <target state="translated">イプシロンとは、0に近い値が0に等しいとみなされる割合と変化量のことです。これは値の使い方によります。ピクセル位置では、0.25で十分です。スケールの場合は、0.005で十分です。</target>
        </trans-unit>
        <trans-unit id="ad3222344fb2917a904860620045a4157f0afdfe" translate="yes" xml:space="preserve">
          <source>The equality operators of &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; have been removed. They were comparing the underlying d-pointers instead of comparing the results, which is not what users might expect. If you need to compare &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; objects, use &lt;code&gt;QFuture::result()&lt;/code&gt; or &lt;code&gt;QFuture::takeResult()&lt;/code&gt; methods. For example:</source>
          <target state="translated">&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;の等式演算子は削除されました。彼らは、結果を比較するのではなく、基礎となるdポインターを比較していました。これは、ユーザーが期待するものではありません。&lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;オブジェクトを比較する必要がある場合は、 &lt;code&gt;QFuture::result()&lt;/code&gt; または &lt;code&gt;QFuture::takeResult()&lt;/code&gt; メソッドを使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="3bf4cd7ad649db9d1daf54e345ad9e8f3ebcc9c5" translate="yes" xml:space="preserve">
          <source>The equivalent of Perl's &lt;code&gt;/i&lt;/code&gt; option is &lt;a href=&quot;qregexp#setCaseSensitivity&quot;&gt;setCaseSensitivity&lt;/a&gt;(&lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt::CaseInsensitive&lt;/a&gt;).</source>
          <target state="translated">Perlの &lt;code&gt;/i&lt;/code&gt; オプションに相当するのは&lt;a href=&quot;qregexp#setCaseSensitivity&quot;&gt;setCaseSensitivity&lt;/a&gt;（&lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt :: CaseInsensitive&lt;/a&gt;）です。</target>
        </trans-unit>
        <trans-unit id="075dc8b10128e21ebf43ad3ef9f61e4ff9c4652e" translate="yes" xml:space="preserve">
          <source>The error code is set to the default &lt;a href=&quot;qserialport#SerialPortError-enum&quot;&gt;QSerialPort::NoError&lt;/a&gt; after a call to clearError()</source>
          <target state="translated">エラーコードは、clearError（）の呼び出し後にデフォルトの&lt;a href=&quot;qserialport#SerialPortError-enum&quot;&gt;QSerialPort :: NoError&lt;/a&gt;に設定されます</target>
        </trans-unit>
        <trans-unit id="d66aacbc92ca28156f0ee63de478eb1ea9755b67" translate="yes" xml:space="preserve">
          <source>The error code of the error that occurred.</source>
          <target state="translated">発生したエラーのエラーコード。</target>
        </trans-unit>
        <trans-unit id="bf53247c28f57a7307c7f1d88ee60fe369328b59" translate="yes" xml:space="preserve">
          <source>The error message is sent to the &lt;a href=&quot;qxmlquery#messageHandler&quot;&gt;messageHandler&lt;/a&gt;().</source>
          <target state="translated">エラーメッセージは&lt;a href=&quot;qxmlquery#messageHandler&quot;&gt;messageHandler&lt;/a&gt;（）に送信されます。</target>
        </trans-unit>
        <trans-unit id="5fab51d0197686c970d7c8559b0cd6d4d203e28c" translate="yes" xml:space="preserve">
          <source>The error message returned by this function is technical in nature and may not be understood by end users. It is mostly useful to developers trying to understand why &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; will not accept some input.</source>
          <target state="translated">この関数によって返されるエラーメッセージは本質的に技術的であり、エンドユーザーが理解できない場合があります。&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;が入力を受け付けない理由を理解しようとする開発者にとって、これは主に役立ちます。</target>
        </trans-unit>
        <trans-unit id="2a484483bf7f032de82ccc58aa5ffdc72775b605" translate="yes" xml:space="preserve">
          <source>The error state of this state.</source>
          <target state="translated">この状態のエラー状態。</target>
        </trans-unit>
        <trans-unit id="5534b3b34687787fed7e7dccf95ed094dfa2923d" translate="yes" xml:space="preserve">
          <source>The error status is never reset. Writes happening after the error occurred may be ignored, even if the error condition is cleared.</source>
          <target state="translated">エラー状態がリセットされることはありません。エラー状態が解除されても、エラー発生後の書き込みは無視されることがあります。</target>
        </trans-unit>
        <trans-unit id="a1696116f5a99b699cfcebefdbfe850aecb610ab" translate="yes" xml:space="preserve">
          <source>The error string of this state machine.</source>
          <target state="translated">このステートマシンのエラー文字列。</target>
        </trans-unit>
        <trans-unit id="fa5bee8fec3fecee4cec028c93c3c43506c68838" translate="yes" xml:space="preserve">
          <source>The error will be described by the error code</source>
          <target state="translated">エラーはエラーコードで記述されます。</target>
        </trans-unit>
        <trans-unit id="861106b5cdb21f0cfd7c8f1cdbe030687c145674" translate="yes" xml:space="preserve">
          <source>The errors are derived from &lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;QBluetoothSocket::SocketError&lt;/a&gt;. This property is read-only.</source>
          <target state="translated">エラーは&lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;QBluetoothSocket :: SocketError&lt;/a&gt;から派生します。このプロパティは読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="c7f17013e5024ccf3812a68c681b22b8ffd9aebe" translate="yes" xml:space="preserve">
          <source>The errors that can occur are serious problems, such as these:</source>
          <target state="translated">発生するエラーは、このような深刻な問題です。</target>
        </trans-unit>
        <trans-unit id="eaa681aac73600ba737617cff2a14e202d51fada" translate="yes" xml:space="preserve">
          <source>The escape button (the button activated when &lt;b&gt;Esc&lt;/b&gt; is pressed) can be specified using &lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt;(). If an escape button is not specified, &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; tries to find one using these rules:</source>
          <target state="translated">エスケープボタン（&lt;b&gt;Esc&lt;/b&gt;が押されたときにアクティブになるボタン）は、&lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt;（）を使用して指定できます。エスケープボタンが指定されていない場合、&lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;は次のルールを使用してエスケープボタンを見つけようとします。</target>
        </trans-unit>
        <trans-unit id="ea38361d62a30c8d3a141b8c4069ad66db6ca671" translate="yes" xml:space="preserve">
          <source>The escape button (the button activated when &lt;b&gt;Esc&lt;/b&gt; is pressed) can be specified using &lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt;(). If an escape button is not specified, QMessageBox tries to find one using these rules:</source>
          <target state="translated">エスケープボタン（&lt;b&gt;Esc&lt;/b&gt;が押されたときにアクティブになるボタン）は、&lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt;（）を使用して指定できます。エスケープボタンが指定されていない場合、QMessageBoxは次のルールを使用してエスケープボタンを見つけようとします。</target>
        </trans-unit>
        <trans-unit id="b4915fe4d33cd0e7001f6b1f2f047fa1a335c613" translate="yes" xml:space="preserve">
          <source>The evaluation of</source>
          <target state="translated">の評価は</target>
        </trans-unit>
        <trans-unit id="b21e33caa12852166948635429af3f31e647e8cb" translate="yes" xml:space="preserve">
          <source>The evdev keyboard handler supports the following extra parameters:</source>
          <target state="translated">evdevキーボード・ハンドラは以下の追加パラメータをサポートしています。</target>
        </trans-unit>
        <trans-unit id="61c4e5321be488393232ebfc2c998015598d95d3" translate="yes" xml:space="preserve">
          <source>The event</source>
          <target state="translated">イベントの様子</target>
        </trans-unit>
        <trans-unit id="08af4c2779a1f2648e7c1a3ceae97e16e7784d3f" translate="yes" xml:space="preserve">
          <source>The event changed the internal state of the recognizer, but it isn't clear yet if it is a gesture or not. The recognizer needs to filter more events to decide. Gesture recognizers in the MayBeGesture state may be reset automatically if they take too long to recognize gestures.</source>
          <target state="translated">イベントは認識器の内部状態を変更しましたが、それがジェスチャーなのかどうかはまだ明らかではありません。認識器が判断するには、より多くのイベントをフィルタリングする必要があります。MayBeGesture状態のジェスチャー認識器は、ジェスチャーの認識に時間がかかりすぎると自動的にリセットされることがあります。</target>
        </trans-unit>
        <trans-unit id="9fb92028b4d4098b6c9bd6cb5c72c3b45381c040" translate="yes" xml:space="preserve">
          <source>The event contains a &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;() that needs to be updated, and a &lt;a href=&quot;qpaintevent#rect&quot;&gt;rect&lt;/a&gt;() that is the bounding rectangle of that region. Both are provided because many widgets cannot make much use of &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;(), and &lt;a href=&quot;qpaintevent#rect&quot;&gt;rect&lt;/a&gt;() can be much faster than &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;().boundingRect().</source>
          <target state="translated">イベントが含まれている&lt;a href=&quot;qpaintevent#region&quot;&gt;地域&lt;/a&gt;のニーズが更新されることを（）、および&lt;a href=&quot;qpaintevent#rect&quot;&gt;RECT&lt;/a&gt;その領域の境界矩形です（）。多くのウィジェットははるかに使用することはできませんので、両方が提供されている&lt;a href=&quot;qpaintevent#region&quot;&gt;地域&lt;/a&gt;（）、および&lt;a href=&quot;qpaintevent#rect&quot;&gt;RECTを&lt;/a&gt;（）はるかに高速より可能&lt;a href=&quot;qpaintevent#region&quot;&gt;地域&lt;/a&gt;（）.boundingRect（）。</target>
        </trans-unit>
        <trans-unit id="a6839f078ec346eec5b960376ac591c222a2eab4" translate="yes" xml:space="preserve">
          <source>The event does not change the state of the recognizer.</source>
          <target state="translated">このイベントは認識器の状態を変えるものではありません。</target>
        </trans-unit>
        <trans-unit id="a016c01cdbba3e638ecff77863fe569dd20bb7ed" translate="yes" xml:space="preserve">
          <source>The event during which the media was captured.</source>
          <target state="translated">マスコミに捕まっている間の出来事。</target>
        </trans-unit>
        <trans-unit id="f55e097bd36ac0a1e3ec0603f9ef8b03b2e6d0d8" translate="yes" xml:space="preserve">
          <source>The event filter</source>
          <target state="translated">イベントフィルタ</target>
        </trans-unit>
        <trans-unit id="826d53f3051c5a1841aa838511286042365a72b3" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject::timerEvent&lt;/a&gt;() receives timer events.</source>
          <target state="translated">イベントハンドラ&lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject :: timerEvent&lt;/a&gt;（）はタイマーイベントを受け取ります。</target>
        </trans-unit>
        <trans-unit id="abead7fbd352c7383ea7c482942b4723653f2af6" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#closeEvent&quot;&gt;QWidget::closeEvent&lt;/a&gt;() receives close events. The default implementation of this event handler accepts the close event. If you do not want your widget to be hidden, or want some special handling, you should reimplement the event handler and &lt;a href=&quot;qevent#ignore&quot;&gt;ignore&lt;/a&gt;() the event.</source>
          <target state="translated">イベントハンドラー&lt;a href=&quot;qwidget#closeEvent&quot;&gt;QWidget :: closeEvent&lt;/a&gt;（）は、クローズイベントを受け取ります。このイベントハンドラーのデフォルトの実装は、クローズイベントを受け入れます。ウィジェットを非表示にしたくない場合、または特別な処理が必要な場合は、イベントハンドラーを再実装して、イベントを&lt;a href=&quot;qevent#ignore&quot;&gt;無視&lt;/a&gt;（）する必要があります。</target>
        </trans-unit>
        <trans-unit id="d3abe2ec387f9013cfb56fafa7abc3020cc29a3e" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#moveEvent&quot;&gt;QWidget::moveEvent&lt;/a&gt;() receives move events.</source>
          <target state="translated">イベントハンドラー&lt;a href=&quot;qwidget#moveEvent&quot;&gt;QWidget :: moveEvent&lt;/a&gt;（）は移動イベントを受け取ります。</target>
        </trans-unit>
        <trans-unit id="5dd325abadeab5c50a9499098f2e1f8096622657" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#resizeEvent&quot;&gt;QWidget::resizeEvent&lt;/a&gt;() receives resize events.</source>
          <target state="translated">イベントハンドラー&lt;a href=&quot;qwidget#resizeEvent&quot;&gt;QWidget :: resizeEvent&lt;/a&gt;（）は、サイズ変更イベントを受け取ります。</target>
        </trans-unit>
        <trans-unit id="671578ea2a5bd7feef77c3fcf12c9cd7285cd191" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#tabletEvent&quot;&gt;QWidget::tabletEvent&lt;/a&gt;() receives &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletPress&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletRelease&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletMove&lt;/a&gt; events. Qt will first send a tablet event, then if it is not accepted by any widget, it will send a mouse event. This allows users of applications that are not designed for tablets to use a tablet like a mouse. However high-resolution drawing applications should handle the tablet events, because they can occur at a higher frequency, which is a benefit for smooth and accurate drawing. If the tablet events are rejected, the synthetic mouse events may be compressed for efficiency.</source>
          <target state="translated">イベントハンドラ&lt;a href=&quot;qwidget#tabletEvent&quot;&gt;QWidget :: tabletEvent&lt;/a&gt;（）は、&lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletPress&lt;/a&gt;、&lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletRelease&lt;/a&gt;、&lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletMove&lt;/a&gt;イベントを受け取ります。Qtは最初にタブレットイベントを送信し、それがどのウィジェットでも受け入れられない場合は、マウスイベントを送信します。これにより、タブレット向けに設計されていないアプリケーションのユーザーは、マウスのようなタブレットを使用できます。ただし、高解像度の描画アプリケーションは、より高い頻度で発生する可能性があるため、タブレットイベントを処理する必要があります。これは、スムーズで正確な描画にメリットがあります。タブレットイベントが拒否された場合、効率を上げるために合成マウスイベントが圧縮されることがあります。</target>
        </trans-unit>
        <trans-unit id="0f28c16ebcfb93ab1612f20609ed8496088e1b5d" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#wheelEvent&quot;&gt;QWidget::wheelEvent&lt;/a&gt;() receives wheel events.</source>
          <target state="translated">イベントハンドラ&lt;a href=&quot;qwidget#wheelEvent&quot;&gt;QWidget :: wheelEvent&lt;/a&gt;（）はホイールイベントを受け取ります。</target>
        </trans-unit>
        <trans-unit id="5e837443d824e8c3bb2db5cce0cb5dec73bf186b" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwindow#exposeEvent&quot;&gt;QWindow::exposeEvent&lt;/a&gt;() receives expose events.</source>
          <target state="translated">イベントハンドラー&lt;a href=&quot;qwindow#exposeEvent&quot;&gt;QWindow :: exposeEvent&lt;/a&gt;（）は公開イベントを受け取ります。</target>
        </trans-unit>
        <trans-unit id="1c394912e86c09b0aef10d8c3704c14e0c183e3c" translate="yes" xml:space="preserve">
          <source>The event handlers &lt;a href=&quot;qwidget#focusInEvent&quot;&gt;QWidget::focusInEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#focusOutEvent&quot;&gt;QWidget::focusOutEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;QGraphicsItem::focusInEvent&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;QGraphicsItem::focusOutEvent&lt;/a&gt;() receive focus events.</source>
          <target state="translated">イベントハンドラー&lt;a href=&quot;qwidget#focusInEvent&quot;&gt;QWidget :: focusInEvent&lt;/a&gt;（）、&lt;a href=&quot;qwidget#focusOutEvent&quot;&gt;QWidget :: focusOutEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;QGraphicsItem :: focusInEvent&lt;/a&gt;および&lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;QGraphicsItem :: focusOutEvent&lt;/a&gt;（）はフォーカスイベントを受け取ります。</target>
        </trans-unit>
        <trans-unit id="5fac5755d1112b61138f2fe0d7652d63d2794903" translate="yes" xml:space="preserve">
          <source>The event handlers &lt;a href=&quot;qwidget#keyPressEvent&quot;&gt;QWidget::keyPressEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#keyReleaseEvent&quot;&gt;QWidget::keyReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;QGraphicsItem::keyPressEvent&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;QGraphicsItem::keyReleaseEvent&lt;/a&gt;() receive key events.</source>
          <target state="translated">イベントハンドラー&lt;a href=&quot;qwidget#keyPressEvent&quot;&gt;QWidget :: keyPressEvent&lt;/a&gt;（）、&lt;a href=&quot;qwidget#keyReleaseEvent&quot;&gt;QWidget :: keyReleaseEvent&lt;/a&gt;（）、&lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;QGraphicsItem :: keyPressEvent&lt;/a&gt;（）および&lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;QGraphicsItem :: keyReleaseEvent&lt;/a&gt;（）はキーイベントを受け取ります。</target>
        </trans-unit>
        <trans-unit id="3f6a3297ea86f83ad4069552d5b1b096c17aa0ba" translate="yes" xml:space="preserve">
          <source>The event has high priority.</source>
          <target state="translated">イベントの優先度は高いです。</target>
        </trans-unit>
        <trans-unit id="affde00e5992937ecf05d63205b5571d00dd5a9a" translate="yes" xml:space="preserve">
          <source>The event has normal priority.</source>
          <target state="translated">イベントの優先順位は通常通りです。</target>
        </trans-unit>
        <trans-unit id="1b336b760676bd7a01be3c72accf409df58e16d8" translate="yes" xml:space="preserve">
          <source>The event interface ID. No signals are exposed as COM events if not specified.</source>
          <target state="translated">イベントインタフェース ID。指定されていない場合、信号はCOMイベントとして公開されません。</target>
        </trans-unit>
        <trans-unit id="5a39a04e1e8f531e2e769a14fa37f53412466964" translate="yes" xml:space="preserve">
          <source>The event is</source>
          <target state="translated">イベントは</target>
        </trans-unit>
        <trans-unit id="ac2d476d5e8bf78ff0d4c23af919e8dbc61fc527" translate="yes" xml:space="preserve">
          <source>The event is &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent::ignore&lt;/a&gt;()d for items that are neither &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;movable&lt;/a&gt; nor &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;selectable&lt;/a&gt;.</source>
          <target state="translated">イベントは&lt;a href=&quot;qevent#ignore&quot;&gt;QEvent :: ignore&lt;/a&gt;（）dで、&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;移動&lt;/a&gt;も&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;選択&lt;/a&gt;もできないアイテムです。</target>
        </trans-unit>
        <trans-unit id="99d9820e08de97d0252f4d547e2bc4f0d9ee75b6" translate="yes" xml:space="preserve">
          <source>The event is a wrapper for, i.e., contains, another event (&lt;a href=&quot;qstatemachine-wrappedevent&quot;&gt;QStateMachine::WrappedEvent&lt;/a&gt;).</source>
          <target state="translated">イベントは、別のイベントのラッパー、つまり、それを含みます（&lt;a href=&quot;qstatemachine-wrappedevent&quot;&gt;QStateMachine :: WrappedEvent&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="4336ed9accb643cc1507854e2f3640cca86e4486" translate="yes" xml:space="preserve">
          <source>The event is a wrapper for, i.e., contains, another event (QStateMachine::WrappedEvent).</source>
          <target state="translated">イベントは、別のイベント(QStateMachine::WrappedEvent)のラッパー、すなわち、含まれています。</target>
        </trans-unit>
        <trans-unit id="42301aa5af9d57ce290d1f7b3bf689a51515831b" translate="yes" xml:space="preserve">
          <source>The event is accepted by default, so it is not necessary to explicitly accept the event if you reimplement this function. If you don't accept the event, call &lt;code&gt;event-&amp;gt;ignore()&lt;/code&gt;.</source>
          <target state="translated">イベントはデフォルトで受け入れられるため、この関数を再実装する場合、イベントを明示的に受け入れる必要はありません。イベントを受け入れない場合は、 &lt;code&gt;event-&amp;gt;ignore()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="40b63b9ff234225ebbd42faa6495062b10059e36" translate="yes" xml:space="preserve">
          <source>The event is delivered in sync with the display vsync on platforms where this is possible. Otherwise, the event is delivered after a delay of 5 ms. The additional time is there to give the event loop a bit of idle time to gather system events, and can be overridden using the QT_QPA_UPDATE_IDLE_TIME environment variable.</source>
          <target state="translated">イベントは、これが可能なプラットフォームではディスプレイの vsync と同期して配信されます。それ以外の場合、イベントは 5 ms の遅延の後に配信されます。この追加時間は、システムイベントを収集するためのアイドル時間をイベントループに与えるためのもので、環境変数 QT_QPA_UPDATE_IDLE_TIME を使用してオーバーライドすることができます。</target>
        </trans-unit>
        <trans-unit id="8eced82aeebdce54e5cec70ec689e9f2be9fa721" translate="yes" xml:space="preserve">
          <source>The event is sent only if the item is enabled.</source>
          <target state="translated">このイベントは、アイテムが有効になっている場合にのみ送信されます。</target>
        </trans-unit>
        <trans-unit id="4bbece77219752dc9cdea38009d6537b8cb61b4e" translate="yes" xml:space="preserve">
          <source>The event loop is started with a call to &lt;a href=&quot;qcoreapplication#exec&quot;&gt;exec&lt;/a&gt;(). Long-running operations can call &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;() to keep the application responsive.</source>
          <target state="translated">イベントループは、&lt;a href=&quot;qcoreapplication#exec&quot;&gt;exec&lt;/a&gt;（）の呼び出しで開始されます。長時間実行される操作は、&lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;（）を呼び出して、アプリケーションの応答性を維持できます。</target>
        </trans-unit>
        <trans-unit id="5e56ad83688ee0c6418e9fe82030789b9423d170" translate="yes" xml:space="preserve">
          <source>The event made it clear that it is not a gesture. If the gesture recognizer was in GestureTriggered state before, then the gesture is canceled and the appropriate &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; object will be delivered to the target as a part of a &lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;.</source>
          <target state="translated">イベントはそれがジェスチャーではないことを明らかにしました。ジェスチャ認識の前GestureTriggered状態にあった場合、そのジェスチャが解除され、適切な&lt;a href=&quot;qgesture&quot;&gt;QGestureの&lt;/a&gt;オブジェクトは、の一部として対象に送達される&lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="696b03750a8d73dddec3592d8410d51c4af0ab01" translate="yes" xml:space="preserve">
          <source>The event must be allocated on the heap since the post event queue will take ownership of the event and delete it once it has been posted. It is</source>
          <target state="translated">イベントが投稿されると、投稿イベントキューがイベントの所有権を取得して削除するので、イベントはヒープ上に割り当てられている必要があります。それは</target>
        </trans-unit>
        <trans-unit id="4b857998cc7d89771720dc7ab176e1ca33cd9d9b" translate="yes" xml:space="preserve">
          <source>The event point currently being handled. When no point is currently being handled, this object is reset to default values (all coordinates are 0).</source>
          <target state="translated">現在処理中のイベントポイント。現在処理中のポイントがない場合、このオブジェクトはデフォルト値にリセットされます(すべての座標は0)。</target>
        </trans-unit>
        <trans-unit id="085c39ff994a55ff19691c02015c7733b463f94d" translate="yes" xml:space="preserve">
          <source>The event point did not move.</source>
          <target state="translated">イベントポイントは動かなかった。</target>
        </trans-unit>
        <trans-unit id="a4fc2aa1f8b69c552fa776d1a89bb4781a02e422" translate="yes" xml:space="preserve">
          <source>The event point was updated.</source>
          <target state="translated">イベントポイントを更新しました。</target>
        </trans-unit>
        <trans-unit id="0825b9bf62fe2d0832950e6d03549b46913cb20a" translate="yes" xml:space="preserve">
          <source>The event type is one of the values of &lt;a href=&quot;qaccessible#Event-enum&quot;&gt;QAccessible::Event&lt;/a&gt;. There are a number of subclasses that should be used to provide more details about the event.</source>
          <target state="translated">イベントタイプは&lt;a href=&quot;qaccessible#Event-enum&quot;&gt;QAccessible :: Eventの&lt;/a&gt;値の1つです。イベントの詳細を提供するために使用する必要があるサブクラスがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="d2f5a88fab38d29660044c3328ad25032b8f1573" translate="yes" xml:space="preserve">
          <source>The event was sent by some other means (i.e. not by the mouse or keyboard).</source>
          <target state="translated">イベントは他の手段(マウスやキーボードではなく)で送信されました。</target>
        </trans-unit>
        <trans-unit id="72c1f32d58eff8d9700be5edfa255e4dee6420cd" translate="yes" xml:space="preserve">
          <source>The event will be sent to the &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; window or, in case of multiple windows, to the current active window. See &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow()&lt;/a&gt; for more details.</source>
          <target state="translated">イベントは&lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt;ウィンドウに送信されます。ウィンドウが複数ある場合は、現在アクティブなウィンドウに送信されます。詳細は&lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow（）&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="59223ce11af6cfe10f591bb2a37c99706430e373" translate="yes" xml:space="preserve">
          <source>The event will be sent to the &lt;a href=&quot;qml-testcase&quot;&gt;TestCase&lt;/a&gt; window or, in case of multiple windows, to the current active window. See &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow()&lt;/a&gt; for more details.</source>
          <target state="translated">イベントは&lt;a href=&quot;qml-testcase&quot;&gt;TestCase&lt;/a&gt;ウィンドウに送信されます。ウィンドウが複数ある場合は、現在アクティブなウィンドウに送信されます。詳細は&lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow（）&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="66f8b568bddf13cf4070a88085140b44e3cc3d97" translate="yes" xml:space="preserve">
          <source>The event() function can be reimplemented to customize the behavior of an object.</source>
          <target state="translated">event()関数は、オブジェクトの動作をカスタマイズするために再実装することができます。</target>
        </trans-unit>
        <trans-unit id="84984bb966924c79b11bcb068cb5c5280dc4fb69" translate="yes" xml:space="preserve">
          <source>The events are</source>
          <target state="translated">イベントは</target>
        </trans-unit>
        <trans-unit id="dbe39191d76e3a330b73caff8817f69879b96319" translate="yes" xml:space="preserve">
          <source>The events are of interest to authors of keyboard entry widgets who want to be able to correctly handle languages with complex character input. Text input in such languages is usually a three step process:</source>
          <target state="translated">このイベントは、複雑な文字入力を持つ言語を正しく扱えるようになりたいと考えているキーボード入力ウィジェットの作者にとって興味深いものです。このような言語でのテキスト入力は、通常、3つのステップを経て行われます。</target>
        </trans-unit>
        <trans-unit id="0bd1d33ea8cec83b6692908b56d918b703605221" translate="yes" xml:space="preserve">
          <source>The events in the lexical handler apply to the entire document, not just to the document element, and all lexical handler events appear between the content handler's startDocument and endDocument events.</source>
          <target state="translated">語彙的ハンドラのイベントは、ドキュメント要素だけでなくドキュメント全体に適用され、すべての語彙的ハンドライベントは、コンテンツハンドラの startDocument イベントと endDocument イベントの間に表示されます。</target>
        </trans-unit>
        <trans-unit id="aa80f52f030ead3963f0707eb6647c53c6d6403a" translate="yes" xml:space="preserve">
          <source>The example above defines a toString() specialization for a class called &lt;code&gt;MyPoint&lt;/code&gt;. Whenever a comparison of two instances of &lt;code&gt;MyPoint&lt;/code&gt; fails, &lt;a href=&quot;qtest#QCOMPARE&quot;&gt;QCOMPARE&lt;/a&gt;() will call this function to output the contents of &lt;code&gt;MyPoint&lt;/code&gt; to the test log.</source>
          <target state="translated">上記の例では、 &lt;code&gt;MyPoint&lt;/code&gt; というクラスのtoString（）特殊化を定義しています。2つのインスタンスを比較するたび &lt;code&gt;MyPoint&lt;/code&gt; は失敗し、&lt;a href=&quot;qtest#QCOMPARE&quot;&gt;QCOMPAREは&lt;/a&gt;（）を出力する内容この関数を呼び出します &lt;code&gt;MyPoint&lt;/code&gt; をテスト・ログに。</target>
        </trans-unit>
        <trans-unit id="d7ad1ee5595d42e11968618a848dd4bfb2384e33" translate="yes" xml:space="preserve">
          <source>The example above inserts four new rows into &lt;code&gt;myTable&lt;/code&gt;:</source>
          <target state="translated">上記の例では、4つの新しい行を &lt;code&gt;myTable&lt;/code&gt; に挿入しています。</target>
        </trans-unit>
        <trans-unit id="e4ce9b39dae7f6284e224bb1f91732bb0fb631fb" translate="yes" xml:space="preserve">
          <source>The example above shows a simple QML component that displays a rich text title string at the top, and a smaller copy of the same text at the bottom. The first &lt;code&gt;Text&lt;/code&gt; type directly accesses the component's &lt;code&gt;title&lt;/code&gt; property when forming the text to display. That the root type's properties are directly accessible makes it trivial to distribute data throughout the component.</source>
          <target state="translated">上の例は、上部にリッチテキストのタイトル文字列を表示し、下部に同じテキストの小さなコピーを表示する単純なQMLコンポーネントを示しています。最初の &lt;code&gt;Text&lt;/code&gt; タイプは、表示するテキストを形成するときに、コンポーネントの &lt;code&gt;title&lt;/code&gt; プロパティに直接アクセスします。ルートタイプのプロパティに直接アクセスできるため、コンポーネント全体にデータを分散するのは簡単です。</target>
        </trans-unit>
        <trans-unit id="da9898f7f8aa20b0b0e72d1d3a91db46fc9eeb26" translate="yes" xml:space="preserve">
          <source>The example above shows the minimum code necessary to add &lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt; support to any item.</source>
          <target state="translated">上記の例は、&lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt;サポートをアイテムに追加するために必要な最小限のコードを示しています。</target>
        </trans-unit>
        <trans-unit id="c09c7da9aa34484a32efd91509a7d0f43575eb60" translate="yes" xml:space="preserve">
          <source>The example above shows the minimum code necessary to add ExclusiveGroup support to any item.</source>
          <target state="translated">上の例では、任意の項目にExclusiveGroupのサポートを追加するために必要な最低限のコードを示しています。</target>
        </trans-unit>
        <trans-unit id="c0fcf9d5d4468f7b83f2a731049444314551962a" translate="yes" xml:space="preserve">
          <source>The example above simulates clicking &lt;code&gt;a&lt;/code&gt; on &lt;code&gt;myWidget&lt;/code&gt; without any keyboard modifiers and without delay of the test.</source>
          <target state="translated">上記の例は、キーボード修飾子なしで、テストの遅延なしで &lt;code&gt;myWidget&lt;/code&gt; をクリック &lt;code&gt;a&lt;/code&gt; をシミュレートします。</target>
        </trans-unit>
        <trans-unit id="5e2bb7d754676fcb070c1ddfa7a42fb9c230e70d" translate="yes" xml:space="preserve">
          <source>The example above simulates clicking &lt;code&gt;a&lt;/code&gt; on &lt;code&gt;myWindow&lt;/code&gt; without any keyboard modifiers and without delay of the test.</source>
          <target state="translated">上の例は、キーボード修飾子なしで、テストの遅延なしに &lt;code&gt;myWindow&lt;/code&gt; をクリック &lt;code&gt;a&lt;/code&gt; をシミュレートします。</target>
        </trans-unit>
        <trans-unit id="b4d1593d1c0ea78891ea7a115ebc0a2837cfc67d" translate="yes" xml:space="preserve">
          <source>The example above simulates clicking the sequence of keys representing &quot;hello world&quot; on &lt;code&gt;myWidget&lt;/code&gt; without any keyboard modifiers and without delay of the test.</source>
          <target state="translated">上記の例は、キーボード修飾子なしで、テストの遅延なしに、 &lt;code&gt;myWidget&lt;/code&gt; で「hello world」を表す一連のキーをクリックすることをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="b3c74859e50485743824a62c48e2fed9103d1c7e" translate="yes" xml:space="preserve">
          <source>The example above simulates the user entering the character &lt;code&gt;a&lt;/code&gt; followed by a backspace, waiting for 200 milliseconds and repeating it.</source>
          <target state="translated">上記の例は、ユーザーが文字 &lt;code&gt;a&lt;/code&gt; に続けてバックスペースを入力し、200ミリ秒待機してそれを繰り返すシミュレーションです。</target>
        </trans-unit>
        <trans-unit id="35447f18d02880527b06a0e3968bc544854214af" translate="yes" xml:space="preserve">
          <source>The example above tests that &lt;a href=&quot;qdir#mkdir&quot;&gt;QDir::mkdir&lt;/a&gt;() outputs the right warning when invoked with an invalid file name.</source>
          <target state="translated">上記の例では、&lt;a href=&quot;qdir#mkdir&quot;&gt;QDir :: mkdir&lt;/a&gt;（）が無効なファイル名で呼び出されたときに正しい警告を出力することをテストしています。</target>
        </trans-unit>
        <trans-unit id="4afc31d2b7202cef7a48490ca5a94a6273596a6d" translate="yes" xml:space="preserve">
          <source>The example above uses a function called &lt;code&gt;readElementAsString&lt;/code&gt; to read the map's keys and obtain a string. That is because CBOR maps may contain any type as keys, not just strings. User code needs to either perform this conversion, reject non-string keys, or instead use a different container besides &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; and &lt;a href=&quot;qvariant#QVariantHash-typedef&quot;&gt;QVariantHash&lt;/a&gt;. For example, if the map is expected to contain integer keys, which is recommended as it reduces stream size and parsing, the correct container would be &lt;code&gt;\l{QMap}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt; or &lt;code&gt;\l{QHash}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">上記の例では、 &lt;code&gt;readElementAsString&lt;/code&gt; という関数を使用して、マップのキーを読み取り、文字列を取得します。これは、CBORマップが文字列だけでなく、キーとして任意のタイプを含む可能性があるためです。ユーザーコードはこの変換を実行するか、文字列以外のキーを拒否するか、代わりに&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;と&lt;a href=&quot;qvariant#QVariantHash-typedef&quot;&gt;QVariantHash&lt;/a&gt;以外の別のコンテナを使用する必要があります。たとえば、マップに整数キーが含まれることが予想される場合、ストリームサイズと解析を減らすために推奨されますが、正しいコンテナは &lt;code&gt;\l{QMap}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt; または &lt;code&gt;\l{QHash}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7374f726b806a841149e87a12ff101afd13bd2ca" translate="yes" xml:space="preserve">
          <source>The example assumes &lt;code&gt;myeffect.vert&lt;/code&gt; and &lt;code&gt;myeffect.frag&lt;/code&gt; contain Vulkan-style GLSL code, processed by the &lt;code&gt;qsb&lt;/code&gt; tool in order to generate the &lt;code&gt;.qsb&lt;/code&gt; files.</source>
          <target state="translated">この例では、 &lt;code&gt;myeffect.vert&lt;/code&gt; と &lt;code&gt;myeffect.frag&lt;/code&gt; にVulkanスタイルのGLSLコードが含まれており、 &lt;code&gt;.qsb&lt;/code&gt; ファイルを生成するために &lt;code&gt;qsb&lt;/code&gt; ツールによって処理されることを前提としています。</target>
        </trans-unit>
        <trans-unit id="03c31d2e5be8490900aeb08320d09c38a018f802" translate="yes" xml:space="preserve">
          <source>The example below catches a signal from a custom object:</source>
          <target state="translated">以下の例では、カスタムオブジェクトからのシグナルをキャッチしています。</target>
        </trans-unit>
        <trans-unit id="78b9a3975c8ca8a01b8d8a259585467cc5162f61" translate="yes" xml:space="preserve">
          <source>The example below creates a Package containing two named items;</source>
          <target state="translated">以下の例では、2つの名前のついたアイテムを含むパッケージを作成しています。</target>
        </trans-unit>
        <trans-unit id="7901ddd2588150db7f85a2a8505c43e0412e1f04" translate="yes" xml:space="preserve">
          <source>The example below creates a high voltage symbol by adding each path of the symbol to the list of paths. The coordinates of the vertices are normalized, and through the containing shape's &lt;a href=&quot;qml-qtquick-path#scale-prop&quot;&gt;scale&lt;/a&gt; property, the path will be rescaled together with its containing shape.</source>
          <target state="translated">以下の例では、シンボルの各パスをパスのリストに追加することにより、高電圧シンボルを作成します。頂点の座標は正規化され、含まれているシェイプの&lt;a href=&quot;qml-qtquick-path#scale-prop&quot;&gt;scale&lt;/a&gt;プロパティを介して、パスは含まれているシェイプとともに再スケーリングされます。</target>
        </trans-unit>
        <trans-unit id="c501c01371b080fb52ab1c57f63188ba99c32bf1" translate="yes" xml:space="preserve">
          <source>The example below creates a list with one item, showing the color of the</source>
          <target state="translated">以下の例では、1つの項目を持つリストが作成されます。</target>
        </trans-unit>
        <trans-unit id="f5a132f95418baf1c6b1efd84372798496f54272" translate="yes" xml:space="preserve">
          <source>The example below creates a path consisting of a straight line from 0,100 to 200,100:</source>
          <target state="translated">以下の例では、0,100から200,100までの直線からなるパスを作成しています。</target>
        </trans-unit>
        <trans-unit id="3aace1dd1ee0e4384396f86285c4626daaee3585" translate="yes" xml:space="preserve">
          <source>The example below creates a path consisting of two horizontal lines with some empty space between them. All three segments have a width of 100:</source>
          <target state="translated">以下の例では、2 本の水平線からなるパスを作成しています。3 つのセグメントの幅はすべて 100 です。</target>
        </trans-unit>
        <trans-unit id="b3ca4f895b7a4408d2bbda15d3c6076bc2e724d7" translate="yes" xml:space="preserve">
          <source>The example below creates a triangular path consisting of four vertices on the edge of the containing Shape's bounding box. Through the containing shape's &lt;a href=&quot;qml-qtquick-path#scale-prop&quot;&gt;scale&lt;/a&gt; property, the path will be rescaled together with its containing shape.</source>
          <target state="translated">以下の例では、含まれているシェイプのバウンディングボックスのエッジに4つの頂点で構成される三角形のパスを作成します。包含シェイプの&lt;a href=&quot;qml-qtquick-path#scale-prop&quot;&gt;scale&lt;/a&gt;プロパティを介して、パスは包含シェイプとともに再スケーリングされます。</target>
        </trans-unit>
        <trans-unit id="ce14b19b09623e33db9c4037bb88f0d6172efd30" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how the error handling can be done without using exceptions. Let's say we want to send a network request to obtain a large file from a network location. Then we want to write it to the file system and return its location in case of a success. Both of these operations may fail with different errors. So, we use std::variant to keep the result or error:</source>
          <target state="translated">以下の例では、例外を使用せずにエラー処理を行う方法を示しています。例えば、ネットワーク上のある場所から大きなファイルを取得するためにネットワークリクエストを送信したいとします。そして、それをファイルシステムに書き込み、成功した場合にその場所を返したいとします。これらの操作はどちらも異なるエラーで失敗する可能性があります。そこで、結果やエラーを保持するために std::variant を使用します。</target>
        </trans-unit>
        <trans-unit id="9dffe32796ec2c8e17d2771e1dc2e01c8fdf0d4d" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how this could be done.</source>
          <target state="translated">以下の例は、これがどのように行われるかを示しています。</target>
        </trans-unit>
        <trans-unit id="5db8f7b02af2ff9817933b37e0f4799761aa2469" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how to call two different static functions.</source>
          <target state="translated">以下の例は、2 つの異なる静的関数を呼び出す方法を示しています。</target>
        </trans-unit>
        <trans-unit id="dd2feae7be254bb0a3f44e485af25eb345eeb794" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how to use the struct:</source>
          <target state="translated">以下の例では、構造体を使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="6877420a6dbd5dbec220239f72fc58e1d8be5eb0" translate="yes" xml:space="preserve">
          <source>The example below displays a large red rectangle and a small blue rectangle, side by side. When the &lt;code&gt;blueRect&lt;/code&gt; is clicked, it changes to the &quot;reparented&quot; state: its parent is changed to &lt;code&gt;redRect&lt;/code&gt; and it is positioned at (10, 10) within the red rectangle, as specified in the &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt;.</source>
          <target state="translated">次の例では、大きな赤い長方形と小さな青い長方形を並べて表示しています。場合 &lt;code&gt;blueRect&lt;/code&gt; をクリックすると、それは「リペアレント」状態に変化：親に変更さ &lt;code&gt;redRect&lt;/code&gt; で指定されるように、赤枠内（10、10）に、それが配置されている&lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="570b1e8ede54f123925835562fa681aeaae908b3" translate="yes" xml:space="preserve">
          <source>The example below displays a large red rectangle and a small blue rectangle, side by side. When the &lt;code&gt;blueRect&lt;/code&gt; is clicked, it changes to the &quot;reparented&quot; state: its parent is changed to &lt;code&gt;redRect&lt;/code&gt; and it is positioned at (10, 10) within the red rectangle, as specified in the ParentChange.</source>
          <target state="translated">次の例では、大きな赤い長方形と小さな青い長方形を並べて表示しています。場合 &lt;code&gt;blueRect&lt;/code&gt; をクリックすると、それは「リペアレント」状態に変化：親に変更さ &lt;code&gt;redRect&lt;/code&gt; ParentChangeで指定されるように、赤枠内（10、10）に、それが配置されています。</target>
        </trans-unit>
        <trans-unit id="a4e9d4b8a9b72286c4a0934a4691239222383706" translate="yes" xml:space="preserve">
          <source>The example below filters on PNG and JPEG files:</source>
          <target state="translated">以下の例では、PNGファイルやJPEGファイルにフィルタをかけています。</target>
        </trans-unit>
        <trans-unit id="fbc6c175a4f9005fb81519695b93b6dea4839d8c" translate="yes" xml:space="preserve">
          <source>The example below illustrates using a &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; with a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;.</source>
          <target state="translated">以下の例は、&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListViewで&lt;/a&gt;&lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt;を使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="cadbcd64aa78e090ecca9b02c609787ab5f63bc4" translate="yes" xml:space="preserve">
          <source>The example below illustrates using a DelegateModel with a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;.</source>
          <target state="translated">以下の例は、&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListViewで&lt;/a&gt;DelegateModelを使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="39086c3a77ddadeaa6c512c5d702bbf60816b786" translate="yes" xml:space="preserve">
          <source>The example below places three colored rectangles in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;.</source>
          <target state="translated">以下の例では、3つの色付きの長方形を&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListViewに配置してい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="1302c959d22a54ed0907a64ae8515a33522457d6" translate="yes" xml:space="preserve">
          <source>The example below shows a fairly typical relationship between two MouseAreas, with &lt;code&gt;mouseArea2&lt;/code&gt; on top of &lt;code&gt;mouseArea1&lt;/code&gt;. Moving the mouse into &lt;code&gt;mouseArea2&lt;/code&gt; from &lt;code&gt;mouseArea1&lt;/code&gt; will cause &lt;code&gt;mouseArea1&lt;/code&gt; to emit the &lt;code&gt;exited&lt;/code&gt; signal.</source>
          <target state="translated">ショーを持つ2つのMouseAreas間のかなり一般的な関係を、以下の実施例 &lt;code&gt;mouseArea2&lt;/code&gt; の上 &lt;code&gt;mouseArea1&lt;/code&gt; 。マウスを &lt;code&gt;mouseArea2&lt;/code&gt; から &lt;code&gt;mouseArea1&lt;/code&gt; 移動すると、mouseArea1が &lt;code&gt;exited&lt;/code&gt; 信号を &lt;code&gt;mouseArea1&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="e91ac17a2ecbec260a778a1b805af83e4fd610ef" translate="yes" xml:space="preserve">
          <source>The example below shows a path with the items scaled to 30% with opacity 50% at the top of the path and scaled 100% with opacity 100% at the bottom. Note the use of the &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;.iconScale and &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;.iconOpacity attached properties to set the scale and opacity of the delegate.</source>
          <target state="translated">以下の例は、パスの上部が不透明度50％でアイテムが30％にスケーリングされ、下部が不透明度100％で100％にスケーリングされたパスを示しています。デリゲートのスケールと不透明度を設定するために、&lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; .iconScaleおよび&lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; .iconOpacity添付プロパティの使用に注意してください。</target>
        </trans-unit>
        <trans-unit id="b544648bf21471a2fc6063674f764be3e1ed542e" translate="yes" xml:space="preserve">
          <source>The example below shows how different localizations can affect the user interface. When a localization requires more space for longer text strings the Qt layout automatically scales to accommodate this, while ensuring that the user interface looks presentable and still matches the platform guidelines.</source>
          <target state="translated">以下の例は、異なるローカリゼーションがユーザーインターフェイスにどのような影響を与えるかを示しています。ローカライズによって長いテキスト文字列のためのスペースが必要になった場合、Qt のレイアウトは自動的にスケーリングしてこれに対応します。</target>
        </trans-unit>
        <trans-unit id="8b2aafc6948d44288d4f0ca9933bc172da0bc682" translate="yes" xml:space="preserve">
          <source>The example below uses an item's contents as a drag image:</source>
          <target state="translated">以下の例では、アイテムの内容をドラッグ画像として使用しています。</target>
        </trans-unit>
        <trans-unit id="d83767c45ad9a2e3fd5bf1406d97c14b2dacc3f6" translate="yes" xml:space="preserve">
          <source>The example code creates a polygon with three points (4,5), (6,7) and (8,9), by expanding the polygon from 1 to 3 points:</source>
          <target state="translated">例のコードでは、1点から3点までの多角形を展開して、(4,5),(6,7),(8,9)の3点を持つ多角形を作成しています。</target>
        </trans-unit>
        <trans-unit id="8d5f881ad62463d92d06ca710912aa3e3d217e7d" translate="yes" xml:space="preserve">
          <source>The example code creates a polygon with two points (10, 20) and (30, 40):</source>
          <target state="translated">このコード例では、(10,20)と(30,40)の2つの点を持つ多角形を作成しています。</target>
        </trans-unit>
        <trans-unit id="6a2fc46d796001fda75fda7e03843fe0792378d8" translate="yes" xml:space="preserve">
          <source>The example code will display the text &quot;See the &lt;a href=&quot;http://qt-project.org&quot;&gt;Qt Project website&lt;/a&gt;.&quot;</source>
          <target state="translated">コード例では、「See the &lt;a href=&quot;http://qt-project.org&quot;&gt;Qt Project website&lt;/a&gt;」というテキストが表示されます。</target>
        </trans-unit>
        <trans-unit id="3bc375fc1b97407ed42b1655588dd79e2427ccb5" translate="yes" xml:space="preserve">
          <source>The example demonstrates the standard pattern for using a subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; in combination with &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to perform an &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;.</source>
          <target state="translated">この例は、&lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModelの&lt;/a&gt;サブクラスをQXmlQueryと組み合わせて&lt;a href=&quot;qxmlquery&quot;&gt;使用&lt;/a&gt;して&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;を実行するための標準パターンを示しています。</target>
        </trans-unit>
        <trans-unit id="2cb45fcfa5bab580acabbcc90c3f2ec2e90c9ffa" translate="yes" xml:space="preserve">
          <source>The example demonstrates the standard pattern for using a subclass of QAbstractXmlNodeModel in combination with &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to perform an &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;.</source>
          <target state="translated">この例は、QAbstractXmlNodeModelのサブクラスをQXmlQueryと組み合わせて&lt;a href=&quot;qxmlquery&quot;&gt;使用&lt;/a&gt;して&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;を実行するための標準パターンを示しています。</target>
        </trans-unit>
        <trans-unit id="56406b0077c72e613bdbb4a39cfa95f41ac968b6" translate="yes" xml:space="preserve">
          <source>The example here from &lt;a href=&quot;qml-qtquick3d-materials-coppermaterial&quot;&gt;CopperMaterial&lt;/a&gt; shows how the material is built. First, the shader parameters are specified as properties. The names and types must match the names in the shader code. Textures use &lt;a href=&quot;qml-qtquick3d-textureinput&quot;&gt;TextureInput&lt;/a&gt; to assign &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;texture&lt;/a&gt; into the shader variable. The &lt;a href=&quot;qml-qtquick3d-materials-custommaterial#shaderInfo-prop&quot;&gt;shaderInfo&lt;/a&gt; property specifies more information about the shader and also configures some of its features on or off when the custom material is built by &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick3d-qmlmodule.html&quot;&gt;QtQuick3D&lt;/a&gt; shader generator. Then the material can use Shader type to specify shader source and shader stage. These are used with &lt;a href=&quot;qml-qtquick3d-pass&quot;&gt;passes&lt;/a&gt; to create the resulting material. The passes can contain multiple rendering passes and also other commands. Normally only the fragment shader needs to be passed to a pass. The material library generates the vertex shader for the material. The material can also create &lt;a href=&quot;qml-qtquick3d-buffer&quot;&gt;buffers&lt;/a&gt; to store intermediate rendering results. Here is an example from &lt;a href=&quot;qml-qtquick3d-materials-glassrefractivematerial&quot;&gt;GlassRefractiveMaterial&lt;/a&gt;:</source>
          <target state="translated">ここの&lt;a href=&quot;qml-qtquick3d-materials-coppermaterial&quot;&gt;CopperMaterial&lt;/a&gt;の例は、マテリアルがどのように構築されるかを示しています。まず、シェーダーパラメータをプロパティとして指定します。名前とタイプは、シェーダーコードの名前と一致する必要があります。テクスチャは、&lt;a href=&quot;qml-qtquick3d-textureinput&quot;&gt;TextureInput&lt;/a&gt;を使用して、&lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;テクスチャ&lt;/a&gt;をシェーダ変数に割り当てます。&lt;a href=&quot;qml-qtquick3d-materials-custommaterial#shaderInfo-prop&quot;&gt;shaderInfoの&lt;/a&gt;プロパティで指定シェーダの詳細については、さらに上またはカスタム材料がで構築されたときにオフに、その機能のいくつか設定し&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick3d-qmlmodule.html&quot;&gt;QtQuick3Dの&lt;/a&gt;シェーダジェネレータを。次に、マテリアルはシェーダータイプを使用して、シェーダーソースとシェーダーステージを指定できます。これらは&lt;a href=&quot;qml-qtquick3d-pass&quot;&gt;パスで&lt;/a&gt;使用されます結果のマテリアルを作成します。パスには、複数のレンダリングパスやその他のコマンドを含めることができます。通常、パスに渡す必要があるのはフラグメントシェーダーのみです。マテリアルライブラリは、マテリアルの頂点シェーダーを生成します。マテリアルは、中間レンダリング結果を格納するための&lt;a href=&quot;qml-qtquick3d-buffer&quot;&gt;バッファ&lt;/a&gt;を作成することもできます。&lt;a href=&quot;qml-qtquick3d-materials-glassrefractivematerial&quot;&gt;GlassRefractiveMaterialの&lt;/a&gt;例を次に示します。</target>
        </trans-unit>
        <trans-unit id="c390fcc3a14f94dcb796729bc331020cbcbca9cf" translate="yes" xml:space="preserve">
          <source>The example illustrates the two typical uses, that of sending error replies and that of delayed replies.</source>
          <target state="translated">この例では、エラー応答の送信と遅延応答の2つの典型的な使用法を説明しています。</target>
        </trans-unit>
        <trans-unit id="044e20559eb0affaab9ed998f58ef27b96ba92fa" translate="yes" xml:space="preserve">
          <source>The example removes all (key, value) pairs where the key and the value are the same.</source>
          <target state="translated">この例では、キーと値が同じであるすべての (キー、値)ペアを削除します。</target>
        </trans-unit>
        <trans-unit id="5b771d7ad9e9c8791bd12cef2ead96ae69f5e948" translate="yes" xml:space="preserve">
          <source>The example scene here has a Sphere at position &lt;code&gt;(0, 0, 0)&lt;/code&gt; and an AxisHelper object. With the &lt;a href=&quot;qml-qtquick3d-helpers-wasdcontroller&quot;&gt;WasdController&lt;/a&gt; helper one can conveniently navigate the scene.</source>
          <target state="translated">ここでのシーンの例には、位置 &lt;code&gt;(0, 0, 0)&lt;/code&gt; 球とAxisHelperオブジェクトがあります。&lt;a href=&quot;qml-qtquick3d-helpers-wasdcontroller&quot;&gt;WasdControllerの&lt;/a&gt;ヘルパー1は、都合のシーンをナビゲートすることができます。</target>
        </trans-unit>
        <trans-unit id="22aa706b0e1f6d5a161421b227b746975b41fd0f" translate="yes" xml:space="preserve">
          <source>The example shows a battery level characteristic which updates the central on every value change. The notifications are provided via the &lt;a href=&quot;qlowenergyservice#characteristicChanged&quot;&gt;characteristicChanged&lt;/a&gt;() signal. More details about this mechanism are provided by the &lt;a href=&quot;https://developer.bluetooth.org/gatt/descriptors/Pages/DescriptorViewer.aspx?u=org.bluetooth.descriptor.gatt.client_characteristic_configuration.xml&quot;&gt;Bluetooth Specification&lt;/a&gt;.</source>
          <target state="translated">この例は、すべての値の変更で中央を更新するバッテリーレベル特性を示しています。通知は、&lt;a href=&quot;qlowenergyservice#characteristicChanged&quot;&gt;characteristicChanged&lt;/a&gt;（）シグナルを介して提供されます。このメカニズムの詳細は、&lt;a href=&quot;https://developer.bluetooth.org/gatt/descriptors/Pages/DescriptorViewer.aspx?u=org.bluetooth.descriptor.gatt.client_characteristic_configuration.xml&quot;&gt;Bluetooth仕様で&lt;/a&gt;提供されています。</target>
        </trans-unit>
        <trans-unit id="a2acd17a244723bcf7d4e6eb8e826b9edd6a488d" translate="yes" xml:space="preserve">
          <source>The example shows how to retrieve all available filesystems, skipping read-only ones.</source>
          <target state="translated">この例では、利用可能なすべてのファイルシステムを取得し、読み取り専用のものをスキップする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="da58a6b66ea20e8730c1cfaa0a25c5be053e5c37" translate="yes" xml:space="preserve">
          <source>The example shows how to use signals and slots to implement the functionality of a calculator widget, and how to use QGridLayout to place child widgets in a grid.</source>
          <target state="translated">この例では、シグナルとスロットを使って電卓ウィジェットの機能を実装し、QGridLayoutを使って子ウィジェットをグリッドに配置する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="debbf02e4ddfdb4813ee0988b4587ccc0d6b1c6c" translate="yes" xml:space="preserve">
          <source>The example traverses a list, replacing negative numbers with their absolute values, and eliminating zeroes.</source>
          <target state="translated">この例では、リストを巡回し、負の数をその絶対値に置き換え、ゼロを除去します。</target>
        </trans-unit>
        <trans-unit id="7fb5c20b454aec9bcd86d7ff6fb7f5c45240e709" translate="yes" xml:space="preserve">
          <source>The example traverses a vector, replacing negative numbers with their absolute values, and eliminating zeroes.</source>
          <target state="translated">この例では、ベクトルを横断し、負の数をその絶対値に置き換え、ゼロを除去します。</target>
        </trans-unit>
        <trans-unit id="2cceeaf7c4424d0ab364e4846d40a4aa5741bcbe" translate="yes" xml:space="preserve">
          <source>The example uses &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to match the first paragraph of an XML document and then &lt;a href=&quot;qxmlserializer&quot;&gt;output the result&lt;/a&gt; to a device as XML.</source>
          <target state="translated">この例では、&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;を使用してXMLドキュメントの最初の段落を照合し&lt;a href=&quot;qxmlserializer&quot;&gt;、結果&lt;/a&gt;をXMLとしてデバイスに出力します。</target>
        </trans-unit>
        <trans-unit id="c03ff169223daaa4f14aa38d4436678c795e66dc" translate="yes" xml:space="preserve">
          <source>The example uses QXmlQuery to match the first paragraph of an XML document and then &lt;a href=&quot;qxmlserializer&quot;&gt;output the result&lt;/a&gt; to a device as XML.</source>
          <target state="translated">この例では、QXmlQueryを使用してXMLドキュメントの最初の段落を照合し、&lt;a href=&quot;qxmlserializer&quot;&gt;その結果&lt;/a&gt;をXMLとしてデバイスに出力します。</target>
        </trans-unit>
        <trans-unit id="8905d57d7e26d7afbb3dc0cb737ab0874c69a9b6" translate="yes" xml:space="preserve">
          <source>The example uses a script that is an ECMAScript module, because it has the &quot;.mjs&quot; extension. It can use import statements to access functionality from other modules and it is run in JavaScript strict mode.</source>
          <target state="translated">この例では、拡張子が &quot;.mjs&quot; であるため、ECMAScript モジュールであるスクリプトを使用しています。これは、他のモジュールから機能にアクセスするために import 文を使用することができ、JavaScript の厳密なモードで実行されます。</target>
        </trans-unit>
        <trans-unit id="890c681856263f054fd3c6f1de0967df2cab3e42" translate="yes" xml:space="preserve">
          <source>The example will output 1, 2, 3 in that order.</source>
          <target state="translated">この例では、1、2、3の順に出力されます。</target>
        </trans-unit>
        <trans-unit id="683ff0c7c0661873021f7367a26cc755d614df35" translate="yes" xml:space="preserve">
          <source>The example will output 3, 2, 1 in that order.</source>
          <target state="translated">この例では、3、2、1の順に出力されます。</target>
        </trans-unit>
        <trans-unit id="c0d997cb199a9af4955bf219b99b18709e05f651" translate="yes" xml:space="preserve">
          <source>The examples are packaged with the &lt;a href=&quot;gettingstarted&quot;&gt;Qt installers&lt;/a&gt; and are accessed through Qt Creator. For more information about running examples in Qt Creator, visit the &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-build-example-application.html&quot;&gt;Building and Running an Example&lt;/a&gt; page.</source>
          <target state="translated">サンプルは&lt;a href=&quot;gettingstarted&quot;&gt;Qtインストーラーに&lt;/a&gt;パッケージ化されており、Qt Creatorからアクセスできます。Qt Creatorでのサンプルの実行の詳細については&lt;a href=&quot;http://doc.qt.io/qtcreator/creator-build-example-application.html&quot;&gt;、サンプルのビルドと実行の&lt;/a&gt;ページをご覧ください。</target>
        </trans-unit>
        <trans-unit id="286efee015f31b6b39c9832ec8c9ce6e54ef74b7" translate="yes" xml:space="preserve">
          <source>The examples below show the normal distribution of items along a path compared to a distribution which places 50% of the items along the &lt;a href=&quot;qml-qtquick-pathline&quot;&gt;PathLine&lt;/a&gt; section of the path.</source>
          <target state="translated">以下の例は、パスの&lt;a href=&quot;qml-qtquick-pathline&quot;&gt;PathLine&lt;/a&gt;セクションに沿ってアイテムの50％を配置する分布と比較した、パスに沿ったアイテムの正規分布を示しています。</target>
        </trans-unit>
        <trans-unit id="beca088c54139c17ca7bb84f94b4a58688117a06" translate="yes" xml:space="preserve">
          <source>The examples below will show both &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt;-compiled static objects and dynamic source objects. The examples will also show direct connections as well as connections using a &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt; between nodes.</source>
          <target state="translated">以下の例は、&lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repcで&lt;/a&gt;コンパイルされた静的オブジェクトと動的ソースオブジェクトの両方を示しています。例では、直接接続とノード間の&lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;レジストリ&lt;/a&gt;を使用した接続も示します。</target>
        </trans-unit>
        <trans-unit id="9ae266dec3db2a2e58e7d935cc2b842a8dac4027" translate="yes" xml:space="preserve">
          <source>The exception is when &lt;a href=&quot;qxmlstreamreader#error&quot;&gt;error&lt;/a&gt;() returns &lt;a href=&quot;qxmlstreamreader#Error-enum&quot;&gt;PrematureEndOfDocumentError&lt;/a&gt;. This error is reported when the end of an otherwise well-formed chunk of XML is reached, but the chunk doesn't represent a complete XML document. In that case, parsing</source>
          <target state="translated">例外は、&lt;a href=&quot;qxmlstreamreader#error&quot;&gt;error&lt;/a&gt;（）が&lt;a href=&quot;qxmlstreamreader#Error-enum&quot;&gt;PrematureEndOfDocumentErrorを&lt;/a&gt;返す場合です。このエラーは、整形式のXMLチャンクの最後に到達したときに報告されますが、チャンクは完全なXMLドキュメントを表していません。その場合、解析</target>
        </trans-unit>
        <trans-unit id="fb3bfbdcb1730e31f0a11b63959356eb56ebc63e" translate="yes" xml:space="preserve">
          <source>The exception status byte offset of the server. &lt;code&gt;quint16&lt;/code&gt;</source>
          <target state="translated">サーバーの例外ステータスバイトオフセット。 &lt;code&gt;quint16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eaba812fa7f09d8e931907794cec497f57e46e34" translate="yes" xml:space="preserve">
          <source>The exceptions are the objects returned by &lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator::global&lt;/a&gt;() and &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;(): those objects are thread-safe and may be used by any thread without external locking. Note that thread-safety does not extend to copying those objects: they should always be used by reference.</source>
          <target state="translated">例外は、&lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator :: global&lt;/a&gt;（）および&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）によって返されるオブジェクトです。これらのオブジェクトはスレッドセーフであり、外部ロックなしの任意のスレッドで使用できます。スレッドセーフはこれらのオブジェクトのコピーにまでは拡張されないことに注意してください。これらは常に参照によって使用されるべきです。</target>
        </trans-unit>
        <trans-unit id="94e7c7df3a9aae616ea37709fd3ad10b2f3d08dd" translate="yes" xml:space="preserve">
          <source>The exclusive grabber is an object that has chosen to receive all future update events and the release event containing the same point that this event carries.</source>
          <target state="translated">排他的グラバーは、将来のすべての更新イベントと、このイベントが運ぶのと同じポイントを含むリリースイベントを受け取ることを選択したオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a9a024dcba130e7c09cc3f7a9cd0db43f7f7b8bb" translate="yes" xml:space="preserve">
          <source>The execution of the &lt;code&gt;check&lt;/code&gt; target may be customized by certain Makefile variables. These variables are:</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; ターゲットの実行は、特定のMakefile変数によってカスタマイズできます。これらの変数は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="57d04137eb90a4e604977c52433beb80d8911543" translate="yes" xml:space="preserve">
          <source>The existence of specific drag types can be determined using the &lt;a href=&quot;qml-qtquick-dragevent#hasColor-prop&quot;&gt;hasColor&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-dragevent#hasHtml-prop&quot;&gt;hasHtml&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-dragevent#hasText-prop&quot;&gt;hasText&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-dragevent#hasUrls-prop&quot;&gt;hasUrls&lt;/a&gt; properties.</source>
          <target state="translated">特定のドラッグタイプの存在は、&lt;a href=&quot;qml-qtquick-dragevent#hasColor-prop&quot;&gt;hasColor&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-dragevent#hasHtml-prop&quot;&gt;hasHtml&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-dragevent#hasText-prop&quot;&gt;hasText&lt;/a&gt;、および&lt;a href=&quot;qml-qtquick-dragevent#hasUrls-prop&quot;&gt;hasUrls&lt;/a&gt;プロパティを使用して確認できます。</target>
        </trans-unit>
        <trans-unit id="04ac281a986a85343e1a5374b782d87dbe36d021" translate="yes" xml:space="preserve">
          <source>The existing actions held by a menu can be found with &lt;a href=&quot;qwidget#actions&quot;&gt;actions&lt;/a&gt;().</source>
          <target state="translated">メニューによって保持されている既存のアクションは、&lt;a href=&quot;qwidget#actions&quot;&gt;アクション&lt;/a&gt;（）で見つけることができます。</target>
        </trans-unit>
        <trans-unit id="a8f14c38669cb2ae397a13ffaed40d2ccb27896f" translate="yes" xml:space="preserve">
          <source>The existing build targets that the custom build target depends on.</source>
          <target state="translated">カスタムビルドターゲットが依存する既存のビルドターゲット。</target>
        </trans-unit>
        <trans-unit id="ae4b0da5e85b97fe52c13fba92d32d45da2cca38" translate="yes" xml:space="preserve">
          <source>The existing handlers for each scheme can be removed with the &lt;a href=&quot;qdesktopservices#unsetUrlHandler&quot;&gt;unsetUrlHandler&lt;/a&gt;() function. This returns the handling behavior for the given scheme to the default behavior.</source>
          <target state="translated">各スキームの既存のハンドラーは、&lt;a href=&quot;qdesktopservices#unsetUrlHandler&quot;&gt;unsetUrlHandler&lt;/a&gt;（）関数を使用して削除できます。これにより、指定されたスキームの処理動作がデフォルトの動作に戻ります。</target>
        </trans-unit>
        <trans-unit id="2550353120c1ecadafe129a43c57242844e8178d" translate="yes" xml:space="preserve">
          <source>The exit code of the automated test will be ignored. Only relevant if &lt;code&gt;testcase&lt;/code&gt; is also set.</source>
          <target state="translated">自動テストの終了コードは無視されます。 &lt;code&gt;testcase&lt;/code&gt; も設定されている場合のみ関連します。</target>
        </trans-unit>
        <trans-unit id="3d909f1f3fd0f968529698df55a378b5f15ceb96" translate="yes" xml:space="preserve">
          <source>The exit code of the test will be ignored during &lt;code&gt;make check&lt;/code&gt;.</source>
          <target state="translated">テストの終了コードは &lt;code&gt;make check&lt;/code&gt; の間無視されます。</target>
        </trans-unit>
        <trans-unit id="d6c023bf7d6876aa19d8bb732e011dab401a0e81" translate="yes" xml:space="preserve">
          <source>The expected value range for the probeHorizon property is between 0.0 and 1.0. Any value outside of this range will be clamped to the expected range.</source>
          <target state="translated">probeHorizonプロパティの期待値の範囲は0.0~1.0です。この範囲外の値は、期待される範囲にクランプされます。</target>
        </trans-unit>
        <trans-unit id="5a3924108fd29746b7c8322f2fbe53f1c1f3b240" translate="yes" xml:space="preserve">
          <source>The experimental Qt Labs Calendar module provides a set of types that can be used to build calendars in Qt Quick. The module was introduced in Qt 5.7.</source>
          <target state="translated">実験的な Qt Labs Calendar モジュールは、Qt Quick でカレンダーを作成するために使用できる型のセットを提供します。このモジュールは Qt 5.7 で導入されました。</target>
        </trans-unit>
        <trans-unit id="6bc36f91d9c0a825b2b82dc87c3dd2ed6aa33300" translate="yes" xml:space="preserve">
          <source>The experimental Qt Labs Platform module provides QML types for native platform extensions. The module was introduced in Qt 5.8.</source>
          <target state="translated">実験的な Qt Labs Platform モジュールは、ネイティブプラットフォーム拡張のための QML 型を提供します。このモジュールは Qt 5.8 で導入されました。</target>
        </trans-unit>
        <trans-unit id="aa77b5e94e1a114f256f49f4e01d63942c38f275" translate="yes" xml:space="preserve">
          <source>The experimental Qt Labs modules use import version 1.0.</source>
          <target state="translated">実験的なQt Labsモジュールはインポートバージョン1.0を使用しています。</target>
        </trans-unit>
        <trans-unit id="6c41ce5d9e5bc759540fad7876eec9a05f6705bb" translate="yes" xml:space="preserve">
          <source>The expiration date corresponds to the parameters of the &quot;expires&quot; entry in the cookie string.</source>
          <target state="translated">有効期限はクッキー文字列の &quot;expires &quot;エントリのパラメータに対応します。</target>
        </trans-unit>
        <trans-unit id="c8ff44f2e7d87b2392f1b5354c1cb9c8bbe86492" translate="yes" xml:space="preserve">
          <source>The explicit state is also symmetric.</source>
          <target state="translated">明示的な状態も対称的です。</target>
        </trans-unit>
        <trans-unit id="68ba39a3b9c7ebcc711fa1193e08616a564f1d8e" translate="yes" xml:space="preserve">
          <source>The exporter accepts the &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; returned by the &lt;a href=&quot;qgeojson#importing-geojson&quot;&gt;importer&lt;/a&gt;, and returns a JSON document. The exporter is complementary to the importer because it executes the inverse action.</source>
          <target state="translated">輸出国は受け入れ&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantListが&lt;/a&gt;で返さ&lt;a href=&quot;qgeojson#importing-geojson&quot;&gt;輸入&lt;/a&gt;、およびJSONドキュメントを返します。エクスポーターは、逆のアクションを実行するため、インポーターを補完します。</target>
        </trans-unit>
        <trans-unit id="ccd7ad1492e3ff151894efb5dcee06599d9cd187" translate="yes" xml:space="preserve">
          <source>The expose event (</source>
          <target state="translated">公開イベント(</target>
        </trans-unit>
        <trans-unit id="7be7f6b1536dfc8b655f6c0ccbdd6ebd7441191b" translate="yes" xml:space="preserve">
          <source>The exposure bias. The unit is the APEX (Additive System of Photographic Exposure) setting.</source>
          <target state="translated">露出バイアスです。単位はAPEX(Additive System of Photographic Exposure)の設定です。</target>
        </trans-unit>
        <trans-unit id="d7e24f79eded79cd2b6f31b29775b3c436b79ab5" translate="yes" xml:space="preserve">
          <source>The expressions that don't have leading zeroes (d, M, h, m, s, z) will be greedy. This means that they will use two digits (or three, for z) even if this will put them outside the range and/or leave too few digits for other sections.</source>
          <target state="translated">先頭にゼロを持たない式(d,M,h,m,s,z)は貪欲になります。これは、たとえそれが範囲外になったり、他のセクションのために桁数が少なすぎたりしても、2桁(zの場合は3桁)を使用することを意味します。</target>
        </trans-unit>
        <trans-unit id="efe24ea9cd9b41a675c9d4b47d0c845a29739407" translate="yes" xml:space="preserve">
          <source>The extended RGB color model, also known as the scRGB color space, is the same the RGB color model except it allows values under 0.0, and over 1.0. This makes it possible to represent colors that would otherwise be outside the range of the RGB colorspace but still use the same values for colors inside the RGB colorspace.</source>
          <target state="translated">拡張RGBカラーモデルは、scRGB色空間とも呼ばれ、0.0以下の値と1.0以上の値を許容する以外は、RGBカラーモデルと同じです。これにより、RGB色空間の範囲外の色を表現しても、RGB色空間内の色には同じ値を使用することが可能になります。</target>
        </trans-unit>
        <trans-unit id="be490840d35de4ad82644243e076467fdc03daee" translate="yes" xml:space="preserve">
          <source>The extended attributes and rich content of places are not permitted to be saved. For QML this is related to &lt;a href=&quot;qml-qtlocation-place#extendedAttributes-prop&quot;&gt;Place::extendedAttributes&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-imagemodel&quot;&gt;ImageModel&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt;, and &lt;a href=&quot;qml-qtlocation-editorialmodel&quot;&gt;EditorialModel&lt;/a&gt;. For C++ this relates to &lt;a href=&quot;qplace#extendedAttribute&quot;&gt;QPlace::extendedAttribute&lt;/a&gt;(), &lt;a href=&quot;qplace#content&quot;&gt;QPlace::content&lt;/a&gt;() and &lt;a href=&quot;qplacemanager#getPlaceContent&quot;&gt;QPlaceManager::getPlaceContent&lt;/a&gt;().</source>
          <target state="translated">場所の拡張属性とリッチコンテンツの保存は許可されていません。QMLの場合、これは&lt;a href=&quot;qml-qtlocation-place#extendedAttributes-prop&quot;&gt;Place :: extendedAttributes&lt;/a&gt;、&lt;a href=&quot;qml-qtlocation-imagemodel&quot;&gt;ImageModel&lt;/a&gt;、&lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt;、&lt;a href=&quot;qml-qtlocation-editorialmodel&quot;&gt;EditorialModelに関連してい&lt;/a&gt;ます。C ++の場合、これは&lt;a href=&quot;qplace#extendedAttribute&quot;&gt;QPlace :: extendedAttribute&lt;/a&gt;（）、&lt;a href=&quot;qplace#content&quot;&gt;QPlace :: content&lt;/a&gt;（）および&lt;a href=&quot;qplacemanager#getPlaceContent&quot;&gt;QPlaceManager :: getPlaceContent&lt;/a&gt;（）に関連しています。</target>
        </trans-unit>
        <trans-unit id="27487702ff25cf3cc3efb1a52dac1f2b011ac1d2" translate="yes" xml:space="preserve">
          <source>The extensions are given as standard wildcard expressions. You can add a file extension to the filter using '+='. For example:</source>
          <target state="translated">拡張子は標準のワイルドカード表現で与えられます。ファイルの拡張子をフィルタに追加するには '+=' を使います。例えば次のようになります。</target>
        </trans-unit>
        <trans-unit id="419d8aaff850915b38bda9d98e2bad3496ad5b99" translate="yes" xml:space="preserve">
          <source>The extensions are installed on the given</source>
          <target state="translated">拡張機能は、与えられた</target>
        </trans-unit>
        <trans-unit id="a20d0533162d80710437020c3ae20cbf4942e69c" translate="yes" xml:space="preserve">
          <source>The extensions currently supported, and the structure of the value returned are as follows:</source>
          <target state="translated">現在サポートされている拡張子と、返される値の構造は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="11a1ed4512f5fdd02f81ea48df8a40f2f4dab4f0" translate="yes" xml:space="preserve">
          <source>The external appearance of this device. The values are composed of a category (10-bits) and sub-categories (6-bits).</source>
          <target state="translated">本装置の外観。値はカテゴリ(10ビット)とサブカテゴリ(6ビット)で構成されています。</target>
        </trans-unit>
        <trans-unit id="a5fcf64ea9a5a3cf41af649502541b94058d3ca6" translate="yes" xml:space="preserve">
          <source>The extra &lt;code&gt;const&lt;/code&gt; makes the entire definition read-only, which is slightly more efficient (e.g., when the code is in a shared library) and able to be stored in ROM with the application.</source>
          <target state="translated">追加の &lt;code&gt;const&lt;/code&gt; は、定義全体を読み取り専用にします。これは、わずかに効率的で（たとえば、コードが共有ライブラリにある場合）、アプリケーションと共にROMに格納できます。</target>
        </trans-unit>
        <trans-unit id="1b03091ddd7401af2a97ecd350684494ead0c8be" translate="yes" xml:space="preserve">
          <source>The extra &lt;code&gt;const&lt;/code&gt; makes the entire definition read-only, which is slightly more efficient (for example, when the code is in a shared library) and ROMable when the application is to be stored in ROM.</source>
          <target state="translated">追加の &lt;code&gt;const&lt;/code&gt; により、定義全体が読み取り専用になります。これにより、コードが共有ライブラリ内にある場合などは少し効率が上がり、アプリケーションをROMに格納する場合はROM化できます。</target>
        </trans-unit>
        <trans-unit id="e94fa010245c44408e32e290c5c7d1a4d0eab9bd" translate="yes" xml:space="preserve">
          <source>The extra data required to describe a curve in a CurveToElement element.</source>
          <target state="translated">CurveToElement要素で曲線を記述するために必要な追加データ。</target>
        </trans-unit>
        <trans-unit id="e00f9b6a4a06d496b8d33601ca2053e8b7f0cd18" translate="yes" xml:space="preserve">
          <source>The extra information takes the form of a</source>
          <target state="translated">余分な情報は</target>
        </trans-unit>
        <trans-unit id="ec8ddacd4a5656a7ba084394b938fd2c9673edbf" translate="yes" xml:space="preserve">
          <source>The factory function should return a null node.</source>
          <target state="translated">ファクトリー関数は、NULLノードを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="e1409fe9edcb06844ff54c55c17ee1d0f9c3c0b2" translate="yes" xml:space="preserve">
          <source>The factory must be set before executing the engine.</source>
          <target state="translated">エンジンを実行する前に工場を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7320f8a548fafc3037a14c84ca46b1649ddd5619" translate="yes" xml:space="preserve">
          <source>The factory that produces accessibility interfaces for QObjects is a function of type &lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QAccessible::InterfaceFactory&lt;/a&gt;. It is possible to have several factories installed. The last factory installed will be the first to be asked for interfaces. &lt;a href=&quot;qaccessible#queryAccessibleInterface&quot;&gt;queryAccessibleInterface()&lt;/a&gt; uses the factories to create interfaces for &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s. Normally, you need not be concerned about factories because you can implement plugins that produce interfaces. We will give examples of both approaches later.</source>
          <target state="translated">QObjectsのアクセシビリティインターフェースを生成するファクトリは、&lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QAccessible :: InterfaceFactory&lt;/a&gt;型の関数です。複数の工場を設置することが可能です。最後にインストールされた工場は、最初にインターフェースを要求されます。&lt;a href=&quot;qaccessible#queryAccessibleInterface&quot;&gt;queryAccessibleInterface（）&lt;/a&gt;はファクトリを使用して&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;のインターフェースを作成します。通常、インターフェースを生成するプラグインを実装できるため、ファクトリーを気にする必要はありません。両方のアプローチの例を後で示します。</target>
        </trans-unit>
        <trans-unit id="081dde1c924d6fd751e45b13911caed844eee9bd" translate="yes" xml:space="preserve">
          <source>The failures will be reported as warning messages in the &lt;code&gt;qt.modeltest&lt;/code&gt; logging category.</source>
          <target state="translated">失敗は、 &lt;code&gt;qt.modeltest&lt;/code&gt; ロギングカテゴリの警告メッセージとして報告されます。</target>
        </trans-unit>
        <trans-unit id="de7784fbee2f1ce0759143b6c45de08a63fe3909" translate="yes" xml:space="preserve">
          <source>The failures will be reported through &lt;a href=&quot;https://doc.qt.io/qt-5.13/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;'s logging mechanism.</source>
          <target state="translated">失敗は&lt;a href=&quot;https://doc.qt.io/qt-5.13/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;のロギングメカニズムを通じて報告されます。</target>
        </trans-unit>
        <trans-unit id="ae83f930a32fcda281b0b0049ef449f512d5d125" translate="yes" xml:space="preserve">
          <source>The failures will be reported through &lt;a href=&quot;https://doc.qt.io/qt-5.15/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;'s logging mechanism.</source>
          <target state="translated">失敗は、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;のロギングメカニズムを通じて報告されます。</target>
        </trans-unit>
        <trans-unit id="07e261f875c5df8051b729a15939fbad7bb0113b" translate="yes" xml:space="preserve">
          <source>The failures will be reported through &lt;a href=&quot;https://doc.qt.io/qt-6.0/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;'s logging mechanism.</source>
          <target state="translated">失敗は、&lt;a href=&quot;https://doc.qt.io/qt-6.0/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;のロギングメカニズムを通じて報告されます。</target>
        </trans-unit>
        <trans-unit id="dd3743ec3b198f6c96268e2bc565e3adb016a773" translate="yes" xml:space="preserve">
          <source>The fallback style can be also specified by setting the &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt;&lt;a href=&quot;qtquickcontrols2-environment&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="translated">フォールバックスタイルは、 &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt; &lt;a href=&quot;qtquickcontrols2-environment&quot;&gt;環境変数を&lt;/a&gt;設定することによっても指定できます。</target>
        </trans-unit>
        <trans-unit id="7af16c0965c7ddf13399c8519438b0c6223b25f1" translate="yes" xml:space="preserve">
          <source>The fallback style can be also specified by setting the &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt;&lt;a href=&quot;qtquickcontrols2-environment#&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="translated">フォールバックスタイルは、 &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt; &lt;a href=&quot;qtquickcontrols2-environment#&quot;&gt;環境変数を&lt;/a&gt;設定して指定することもできます。</target>
        </trans-unit>
        <trans-unit id="c695b98c8ef6133f47df0a1c6d5d3c1f21b96724" translate="yes" xml:space="preserve">
          <source>The family name is case insensitive and may optionally include a foundry name, e.g. &quot;Helvetica [Cronyx]&quot;. If the family is available from more than one foundry and the foundry isn't specified, an arbitrary foundry is chosen. If the family isn't available a family will be set using the font matching algorithm.</source>
          <target state="translated">ファミリ名は大文字小文字を区別せず、オプションでファウンドリ名を含めることができます。フ ァ ミ リ が複数のファウンド リ か ら入手可能で、 ファウンド リ が指定 さ れていない場合には、 任意のファウンド リ が選ばれます。フ ァ ミ リ が利用で き ない と き は、 フ ォ ン ト マ ッ チ ン グ アルゴ リ ズ ム を用いて フ ァ ミ リ が設定 さ れます。</target>
        </trans-unit>
        <trans-unit id="7c9de3bad49fa50ba1a1193d09c6c4715c9c6430" translate="yes" xml:space="preserve">
          <source>The family name of the font that has been resolved for the current font and &lt;a href=&quot;qml-qtquick-text#fontSizeMode-prop&quot;&gt;fontSizeMode&lt;/a&gt;.</source>
          <target state="translated">現在のフォントと&lt;a href=&quot;qml-qtquick-text#fontSizeMode-prop&quot;&gt;fontSizeModeで&lt;/a&gt;解決されたフォントのファミリ名。</target>
        </trans-unit>
        <trans-unit id="ed817248c7744f6a7e612abc2da0de1d37fd08d4" translate="yes" xml:space="preserve">
          <source>The feature file needs to be injected into each subproject, for example by .qmake.conf:</source>
          <target state="translated">機能ファイルは各サブプロジェクトに注入する必要があります。</target>
        </trans-unit>
        <trans-unit id="89367d7a675cd8fa3aea31a7b21fd216582687e5" translate="yes" xml:space="preserve">
          <source>The feature is not supported.</source>
          <target state="translated">この機能はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="be0c38b405788b555c74fb6ac649ce0d398fa092" translate="yes" xml:space="preserve">
          <source>The feature is probably supported.</source>
          <target state="translated">この機能はおそらくサポートされていると思われます。</target>
        </trans-unit>
        <trans-unit id="e3529dc1e8cbfe0aacdb5abcc186c70c7d738bd7" translate="yes" xml:space="preserve">
          <source>The feature may be supported.</source>
          <target state="translated">機能に対応している可能性があります。</target>
        </trans-unit>
        <trans-unit id="d632d7204272182e505ccac2ca91680a91af1aa5" translate="yes" xml:space="preserve">
          <source>The features common to all sensor types are:</source>
          <target state="translated">すべてのセンサータイプに共通する機能は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="c8c07ebb9de2053f2eaf44333421590b0ae3a6cb" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt;の機能は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e5083f6590c34035d84c3c061cc6b51d55fe9308" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qlightsensor&quot;&gt;QLightSensor&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qlightsensor&quot;&gt;QLightSensor&lt;/a&gt;の機能は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9b71dfd6fbe33473f441a8e639af0bc10a3daf15" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt;の機能は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d1fa64e038a2d67bf78d6b36c840ab819aae1517" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qpressuresensor&quot;&gt;QPressureSensor&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qpressuresensor&quot;&gt;QPressureSensor&lt;/a&gt;の機能は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cb8dddff1869e7da8628f8f12e7a7b4f65b467dd" translate="yes" xml:space="preserve">
          <source>The features of all orientable sensors are:</source>
          <target state="translated">すべての指向性センサの特徴は、以下の通りです。</target>
        </trans-unit>
        <trans-unit id="668b59d8088c757547347d4f29fef8529894a5c6" translate="yes" xml:space="preserve">
          <source>The fetch macro creates a local variable named</source>
          <target state="translated">フェッチ マクロは、ローカル変数</target>
        </trans-unit>
        <trans-unit id="ca2c7b0e49784c7c955679dcfbf3f777dccbf8a2" translate="yes" xml:space="preserve">
          <source>The fewer elements that are in a delegate, the faster they can be created, and thus the faster the view can be scrolled.</source>
          <target state="translated">デリゲート内の要素が少ないほど、作成速度が速くなり、その結果、ビューのスクロール速度が速くなります。</target>
        </trans-unit>
        <trans-unit id="dc70528f0bb76c7e0db594b3efe04fb6e8aab212" translate="yes" xml:space="preserve">
          <source>The fibonacci function is run whenever the &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt; emits a &lt;code&gt;tapped&lt;/code&gt; signal.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;fibonacci&lt;/a&gt;関数は、TapHandlerが &lt;code&gt;tapped&lt;/code&gt; 信号を発信するたびに実行されます。</target>
        </trans-unit>
        <trans-unit id="93715eb9d91478ab6a8d62b940cdf02e19c10b9c" translate="yes" xml:space="preserve">
          <source>The field layouts for the DCE versions listed in the table above are specified in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt;Network Working Group UUID Specification&lt;/a&gt;.</source>
          <target state="translated">上記の表にリストされているDCEバージョンのフィールドレイアウトは、&lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt;ネットワークワーキンググループのUUID仕様で&lt;/a&gt;指定されています。</target>
        </trans-unit>
        <trans-unit id="6a5ace88dd35cb522e512b8e4598020831d059d4" translate="yes" xml:space="preserve">
          <source>The field must be specified when inserting records.</source>
          <target state="translated">レコードを挿入する際には、このフィールドを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c2ded0882fd026a5c419d0941f9c37e913903bff" translate="yes" xml:space="preserve">
          <source>The fields are numbered from left to right using the text of the &lt;code&gt;SELECT&lt;/code&gt; statement, e.g. in</source>
          <target state="translated">フィールドは、 &lt;code&gt;SELECT&lt;/code&gt; ステートメントのテキストを使用して、左から右に番号が付けられます。</target>
        </trans-unit>
        <trans-unit id="a705dae1d4aada45995947a3d6b26ee8a8838e3f" translate="yes" xml:space="preserve">
          <source>The fields doesn't have to be specified when inserting records.</source>
          <target state="translated">レコードを挿入する際にフィールドを指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="9668959dce390adf51ef8bf9cbf2e7037c112711" translate="yes" xml:space="preserve">
          <source>The fields never grow beyond their &lt;a href=&quot;qwidgetitem#sizeHint&quot;&gt;effective size hint&lt;/a&gt;. This is the default for QMacStyle.</source>
          <target state="translated">フィールドが&lt;a href=&quot;qwidgetitem#sizeHint&quot;&gt;有効サイズのヒント&lt;/a&gt;を超えて成長することはありません。これはQMacStyleのデフォルトです。</target>
        </trans-unit>
        <trans-unit id="413827f9146e09327e10578cb4a3a901cd0b3e7a" translate="yes" xml:space="preserve">
          <source>The fields of any page are accessible from any other page. For example:</source>
          <target state="translated">どのページのフィールドも他のページからアクセス可能です。例えば</target>
        </trans-unit>
        <trans-unit id="20171732ed95203eeee69c2baaa55fa1987b2748" translate="yes" xml:space="preserve">
          <source>The figure shows the exclusive or of two elliptical regions.</source>
          <target state="translated">つの楕円形の領域の排他的なまたは2つの楕円形の領域を示す図である。</target>
        </trans-unit>
        <trans-unit id="e280c08422a6e6ab92a49e27d2b7ae96b7292601" translate="yes" xml:space="preserve">
          <source>The figure shows the intersection of two elliptical regions.</source>
          <target state="translated">つの楕円領域の交点を示す図である。</target>
        </trans-unit>
        <trans-unit id="74d7e9d212d652f86f56bcc0427b413a1ce2ed03" translate="yes" xml:space="preserve">
          <source>The figure shows the result when the ellipse on the right is subtracted from the ellipse on the left (&lt;code&gt;left - right&lt;/code&gt;).</source>
          <target state="translated">図は、左側の楕円から右側の楕円を引いた結果（ &lt;code&gt;left - right&lt;/code&gt; ）を示しています。</target>
        </trans-unit>
        <trans-unit id="24f0e0195aa6d69b7d8d97f712ac81cd5cdb7e9d" translate="yes" xml:space="preserve">
          <source>The figure shows the union of two elliptical regions.</source>
          <target state="translated">つの楕円形の領域の結合を示す図である。</target>
        </trans-unit>
        <trans-unit id="04fbc7508d5d457aedc840547581d13fb785d13c" translate="yes" xml:space="preserve">
          <source>The file</source>
          <target state="translated">ファイル</target>
        </trans-unit>
        <trans-unit id="87b8bb0d506174c10132f9b154047e227fadc07a" translate="yes" xml:space="preserve">
          <source>The file can either be a local file or in a &lt;a href=&quot;resources&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="translated">ファイルは、ローカルファイルでも&lt;a href=&quot;resources&quot;&gt;リソース&lt;/a&gt;内でもかまいません。</target>
        </trans-unit>
        <trans-unit id="b7f92d71bca12ea4eb379423da9a3fff5e5e13b1" translate="yes" xml:space="preserve">
          <source>The file cannot be written locally, due to access restrictions.</source>
          <target state="translated">アクセス制限のため、ファイルをローカルに書き込むことができません。</target>
        </trans-unit>
        <trans-unit id="17a29bd38d8731d1238d1f090aa4db91cfeee762" translate="yes" xml:space="preserve">
          <source>The file content is used to look for a match</source>
          <target state="translated">ファイルの内容が一致するものを探すために使用されます。</target>
        </trans-unit>
        <trans-unit id="289d08fb6086ce7f84fd8608ebb75393e410ea13" translate="yes" xml:space="preserve">
          <source>The file could not be accessed.</source>
          <target state="translated">ファイルにアクセスできませんでした。</target>
        </trans-unit>
        <trans-unit id="c6781003b0d485483594ddf4be6950de9167e23a" translate="yes" xml:space="preserve">
          <source>The file could not be copied.</source>
          <target state="translated">ファイルをコピーできませんでした。</target>
        </trans-unit>
        <trans-unit id="ace801f7ac43821b215005cc7963f51a41366f3a" translate="yes" xml:space="preserve">
          <source>The file could not be opened.</source>
          <target state="translated">ファイルを開くことができませんでした。</target>
        </trans-unit>
        <trans-unit id="97a70e37571728ba37e51a44c9f1629967feaf10" translate="yes" xml:space="preserve">
          <source>The file could not be removed.</source>
          <target state="translated">ファイルを削除することができませんでした。</target>
        </trans-unit>
        <trans-unit id="46323538908f56bcc6322b88467249ea5c0e32be" translate="yes" xml:space="preserve">
          <source>The file could not be renamed.</source>
          <target state="translated">ファイルの名前を変更できませんでした。</target>
        </trans-unit>
        <trans-unit id="ffa64cc5e00ef6a4c9a9121bd85ac47c080c00c3" translate="yes" xml:space="preserve">
          <source>The file could not be resized.</source>
          <target state="translated">ファイルのサイズを変更できませんでした。</target>
        </trans-unit>
        <trans-unit id="6de0e789e4869da84fda442f9d9a569e7760bf41" translate="yes" xml:space="preserve">
          <source>The file dialog has two view modes: &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;List&lt;/a&gt; and &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;Detail&lt;/a&gt;. &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;List&lt;/a&gt; presents the contents of the current directory as a list of file and directory names. &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;Detail&lt;/a&gt; also displays a list of file and directory names, but provides additional information alongside each name, such as the file size and modification date. Set the mode with &lt;a href=&quot;qfiledialog#viewMode-prop&quot;&gt;setViewMode&lt;/a&gt;():</source>
          <target state="translated">ファイルダイアログには、&lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;リスト&lt;/a&gt;と&lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;詳細の&lt;/a&gt; 2つの表示モードがあります。&lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;リスト&lt;/a&gt;は、現在のディレクトリの内容をファイル名とディレクトリ名のリストとして表示します。&lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;詳細&lt;/a&gt;には、ファイル名とディレクトリ名のリストも表示されますが、ファイルサイズや変更日など、各名前の横に追加情報が表示されます。&lt;a href=&quot;qfiledialog#viewMode-prop&quot;&gt;setViewMode&lt;/a&gt;（）でモードを設定します。</target>
        </trans-unit>
        <trans-unit id="fb319ead782636ae34c098a5e5c515388203236f" translate="yes" xml:space="preserve">
          <source>The file dialog will then look like this:</source>
          <target state="translated">すると、ファイルダイアログは次のようになります。</target>
        </trans-unit>
        <trans-unit id="8f8d5852011cc348fc09a4dd8d06984e8b30e934" translate="yes" xml:space="preserve">
          <source>The file dialog's working directory will be set to</source>
          <target state="translated">ファイルダイアログの作業ディレクトリは</target>
        </trans-unit>
        <trans-unit id="dea6ec74a83b82907426f38c113761d189da5d6d" translate="yes" xml:space="preserve">
          <source>The file format is XML-based. For a better understanding of the format we will discuss the following example:</source>
          <target state="translated">ファイル形式は XML ベースです。フォーマットの理解を深めるために、以下の例を説明します。</target>
        </trans-unit>
        <trans-unit id="e745a0ac2ccd6f20c4ae3226590b48293ba4e830" translate="yes" xml:space="preserve">
          <source>The file format support is provided transparently, through plugins for Qt's image I/O system. As such, this module provides no API of its own. Instead, the functionality is accessed in the same way as other image I/O in Qt: through &lt;a href=&quot;qimage#load&quot;&gt;QImage::load&lt;/a&gt;() and &lt;a href=&quot;qimage#save&quot;&gt;QImage::save&lt;/a&gt;(). Or, for more detailed control, through &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;.</source>
          <target state="translated">ファイル形式のサポートは、QtのイメージI / Oシステムのプラグインを介して透過的に提供されます。そのため、このモジュールは独自のAPIを提供しません。代わりに、&lt;a href=&quot;qimage#load&quot;&gt;QImage :: load&lt;/a&gt;（）および&lt;a href=&quot;qimage#save&quot;&gt;QImage :: save&lt;/a&gt;（）を介して、Qt：の他の画像I / Oと同じ方法で機能にアクセスします。または、&lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt;と&lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;を使用して、より詳細な制御を行います。</target>
        </trans-unit>
        <trans-unit id="ae6e6d3aa5638b389d0f06ddd264a5ab4a87f94f" translate="yes" xml:space="preserve">
          <source>The file formats accepted by the sprite engine are the same as the file formats accepted by other QML types, such as &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt;. In order to animate the image, however, the sprite engine requires the image file to contain all of the frames of the animation. They should be arranged in a contiguous line, which may wrap from the right edge of the file to a lower row starting from the left edge of the file (and which is placed directly below the previous row).</source>
          <target state="translated">スプライトエンジンが受け入れるファイル形式は、&lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt;などの他のQMLタイプが受け入れるファイル形式と同じです。ただし、画像をアニメーション化するために、スプライトエンジンでは、画像ファイルにアニメーションのすべてのフレームが含まれている必要があります。それらは、ファイルの右端からファイルの左端から開始して下の行に（そして前の行の真下に配置されて）折り返される可能性がある連続した行に配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="c47796e6a5bcf6195c81d42bbec97b436cab59d3" translate="yes" xml:space="preserve">
          <source>The file handle passed into &lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;() should be closed by &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;(), the default behavior is that close just flushes the file and the application is responsible for closing the file handle. When opening a file by name, this flag is ignored as Qt always owns the file handle and must close it.</source>
          <target state="translated">&lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;（）に渡されたファイルハンドルは&lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;（）で閉じる必要があります。デフォルトの動作では、ファイルをフラッシュするだけで、アプリケーションがファイルハンドルを閉じます。名前でファイルを開く場合、Qtは常にファイルハンドルを所有し、ファイルハンドルを閉じる必要があるため、このフラグは無視されます。</target>
        </trans-unit>
        <trans-unit id="89ebe3a5abf90e1f1d9b0397f1aafe659fdd15fb" translate="yes" xml:space="preserve">
          <source>The file icon.</source>
          <target state="translated">ファイルアイコンです。</target>
        </trans-unit>
        <trans-unit id="afa85386d788fb0d7fff3b7e5741d5a921e6f033" translate="yes" xml:space="preserve">
          <source>The file info icon in a file dialog.</source>
          <target state="translated">ダイアログファイル内のインフォアイコンファイル。</target>
        </trans-unit>
        <trans-unit id="b81c9975252c0e516aa5ffbb352e8f60c7c1ec06" translate="yes" xml:space="preserve">
          <source>The file is closed before it is removed.</source>
          <target state="translated">ファイルを削除する前に閉じています。</target>
        </trans-unit>
        <trans-unit id="982cfb714bac8dc9c048460ce089c9a0dbbb9a93" translate="yes" xml:space="preserve">
          <source>The file is closed before it is renamed.</source>
          <target state="translated">名前を変更する前にファイルを閉じます。</target>
        </trans-unit>
        <trans-unit id="8c9565d7547b0c97710ee573412b8bb14e389d8a" translate="yes" xml:space="preserve">
          <source>The file is executable by anyone.</source>
          <target state="translated">誰でも実行可能なファイルです。</target>
        </trans-unit>
        <trans-unit id="0aa41dc5fbccda08ab119783bd9257a6181e13b9" translate="yes" xml:space="preserve">
          <source>The file is executable by the group.</source>
          <target state="translated">グループで実行可能なファイルです。</target>
        </trans-unit>
        <trans-unit id="443038a845cf12682c8c5e5da53ca0b0956371f6" translate="yes" xml:space="preserve">
          <source>The file is executable by the owner of the file.</source>
          <target state="translated">ファイルの所有者が実行可能な状態になっています。</target>
        </trans-unit>
        <trans-unit id="f53084bc2769836579a360e203e609b9910bfcfd" translate="yes" xml:space="preserve">
          <source>The file is executable by the user.</source>
          <target state="translated">ユーザーが実行可能なファイルになっています。</target>
        </trans-unit>
        <trans-unit id="d39c65ac65e71fa0090e698b565d4cad4cbaea3f" translate="yes" xml:space="preserve">
          <source>The file is expected to contain a serialized QRhiShader.</source>
          <target state="translated">ファイルには、シリアル化されたQRhiShaderが含まれていると予想されます。</target>
        </trans-unit>
        <trans-unit id="67b2f788912499ba7b6fb389854817bee3fb6210" translate="yes" xml:space="preserve">
          <source>The file is expected to contain a serialized QShader.</source>
          <target state="translated">ファイルには、シリアル化されたQShaderが含まれていることが期待されます。</target>
        </trans-unit>
        <trans-unit id="516c92d23c55c12c9399e3c1f1da3c104cbdbad9" translate="yes" xml:space="preserve">
          <source>The file is infected with a virus.</source>
          <target state="translated">ファイルがウイルスに感染しています。</target>
        </trans-unit>
        <trans-unit id="b0245d29a06621f24fcb73bbd611e934b6311355" translate="yes" xml:space="preserve">
          <source>The file is opened with &lt;a href=&quot;qfile#open&quot;&gt;open&lt;/a&gt;(), closed with &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;(), and flushed with &lt;a href=&quot;qfiledevice#flush&quot;&gt;flush&lt;/a&gt;(). Data is usually read and written using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; or &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;, but you can also call the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;-inherited functions &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(), &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;(). &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; also inherits &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;(), &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;(), and &lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt;(), which work one character at a time.</source>
          <target state="translated">ファイルは&lt;a href=&quot;qfile#open&quot;&gt;open&lt;/a&gt;（）で開かれ、&lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;（）で閉じられ、&lt;a href=&quot;qfiledevice#flush&quot;&gt;flush&lt;/a&gt;（）でフラッシュされます。データは通常&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;または&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;を使用して読み書きされますが、&lt;a href=&quot;qiodevice&quot;&gt;QIODevice継承&lt;/a&gt;関数&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（）、&lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;（）、&lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;（）、&lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;（）を呼び出すこともできます。&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;は、一度に1文字ずつ機能する&lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;（）、&lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;（）、および&lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt;（）も継承します。</target>
        </trans-unit>
        <trans-unit id="a98035dfe527362ccc75d55e5e4e186d578a4ffe" translate="yes" xml:space="preserve">
          <source>The file is opened with &lt;a href=&quot;qfile#open&quot;&gt;open&lt;/a&gt;(), closed with &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;(), and flushed with &lt;a href=&quot;qfiledevice#flush&quot;&gt;flush&lt;/a&gt;(). Data is usually read and written using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; or &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;, but you can also call the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;-inherited functions &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(), &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;(). QFile also inherits &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;(), &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;(), and &lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt;(), which work one character at a time.</source>
          <target state="translated">ファイルは&lt;a href=&quot;qfile#open&quot;&gt;open&lt;/a&gt;（）で開かれ、&lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;（）で閉じられ、&lt;a href=&quot;qfiledevice#flush&quot;&gt;flush&lt;/a&gt;（）でフラッシュされます。データは通常、&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;または&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;を使用して読み書きされますが、&lt;a href=&quot;qiodevice&quot;&gt;QIODeviceが継承する&lt;/a&gt;関数&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（）、&lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;（）、&lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;（）、&lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;（）を呼び出すこともできます。 QFileは、&lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;（）、&lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;（）、および&lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt;（）も継承します。これらは、一度に1文字ずつ機能します。</target>
        </trans-unit>
        <trans-unit id="eaccbcbbe1966f0ecd4d1ee4623ad28195e8def9" translate="yes" xml:space="preserve">
          <source>The file is readable by anyone.</source>
          <target state="translated">誰でも読めるようになっています。</target>
        </trans-unit>
        <trans-unit id="43a15110b7509f5d7b670b8ff3f6a632d8fed2df" translate="yes" xml:space="preserve">
          <source>The file is readable by the group.</source>
          <target state="translated">グループで読めるようになっています。</target>
        </trans-unit>
        <trans-unit id="722abac4e42d21969d135844160eae2a1fe94c43" translate="yes" xml:space="preserve">
          <source>The file is readable by the owner of the file.</source>
          <target state="translated">ファイルの所有者が読めるようになっています。</target>
        </trans-unit>
        <trans-unit id="fbbab456259833f10f65b10c415d51fe271dea4b" translate="yes" xml:space="preserve">
          <source>The file is readable by the user.</source>
          <target state="translated">が読めるようになっています。</target>
        </trans-unit>
        <trans-unit id="bb640cb9db20736720461cb520679e61679607da" translate="yes" xml:space="preserve">
          <source>The file is then accessible as &lt;code&gt;:/cut-img.png&lt;/code&gt; from the application. It is also possible to specify a path prefix for all files in the &lt;code&gt;.qrc&lt;/code&gt; file using the &lt;code&gt;qresource&lt;/code&gt; tag's &lt;code&gt;prefix&lt;/code&gt; attribute:</source>
          <target state="translated">ファイルは、アプリケーションから &lt;code&gt;:/cut-img.png&lt;/code&gt; としてアクセスできます。 &lt;code&gt;qresource&lt;/code&gt; タグの &lt;code&gt;prefix&lt;/code&gt; 属性を使用して、 &lt;code&gt;.qrc&lt;/code&gt; ファイル内のすべてのファイルのパス接頭辞を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="68c29315f7113874a6bf775ac3a596e41d0ee7c7" translate="yes" xml:space="preserve">
          <source>The file is writable by anyone.</source>
          <target state="translated">ファイルは誰でも書き込み可能です。</target>
        </trans-unit>
        <trans-unit id="69e8ad90f794f4caf0a458a450f4786e2d69a6bc" translate="yes" xml:space="preserve">
          <source>The file is writable by the group.</source>
          <target state="translated">グループで書き込み可能なファイルです。</target>
        </trans-unit>
        <trans-unit id="5ecd454f5284aebfac91f735a168651b68580e8e" translate="yes" xml:space="preserve">
          <source>The file is writable by the owner of the file.</source>
          <target state="translated">ファイルの所有者が書き込み可能です。</target>
        </trans-unit>
        <trans-unit id="9a3726362d6c3aaeb5dd7bc5c39aed12a3918e9f" translate="yes" xml:space="preserve">
          <source>The file is writable by the user.</source>
          <target state="translated">ユーザーが書き込み可能な状態になっています。</target>
        </trans-unit>
        <trans-unit id="4842c74e8be618bd5d85d8111452641ea3a2df0e" translate="yes" xml:space="preserve">
          <source>The file mode defines the number and type of items that the user is expected to select in the dialog.</source>
          <target state="translated">ファイルモードは、ユーザーがダイアログで選択する項目の数と種類を定義します。</target>
        </trans-unit>
        <trans-unit id="0af5a6a4619125359c00d8fc1ae35bf7e3b51c1e" translate="yes" xml:space="preserve">
          <source>The file must reference a TrueType or OpenType font.</source>
          <target state="translated">ファイルは、TrueType または OpenType フォントを参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="cba7c43d020e049525e6b24706c643c90aa4b520" translate="yes" xml:space="preserve">
          <source>The file name can either refer to an actual file on disk or to one of the application's embedded resources. See the &lt;a href=&quot;resources&quot;&gt;Resource System&lt;/a&gt; overview for details on how to embed images and other resource files in the application's executable.</source>
          <target state="translated">ファイル名は、ディスク上の実際のファイルを参照することも、アプリケーションの埋め込みリソースの1つを参照することもできます。アプリケーションの実行可能ファイルに画像やその他のリソースファイルを埋め込む方法の詳細については、&lt;a href=&quot;resources&quot;&gt;リソースシステムの&lt;/a&gt;概要をご覧ください。</target>
        </trans-unit>
        <trans-unit id="d6f1bce46d0313d1d9d1d6b571d69189e3e972cb" translate="yes" xml:space="preserve">
          <source>The file name can either refer to an actual file on disk or to one of the application's embedded resources. See the &lt;a href=&quot;resources&quot;&gt;Resource System&lt;/a&gt; overview for details on how to embed pixmaps and other resource files in the application's executable.</source>
          <target state="translated">ファイル名は、ディスク上の実際のファイルを参照することも、アプリケーションの埋め込みリソースの1つを参照することもできます。アプリケーションの実行可能ファイルにピックスマップおよびその他のリソースファイルを埋め込む方法の詳細については、&lt;a href=&quot;resources&quot;&gt;リソースシステムの&lt;/a&gt;概要を参照してください。</target>
        </trans-unit>
        <trans-unit id="0f8956d85a1bd69e0e0e70386a0969b26bee3925" translate="yes" xml:space="preserve">
          <source>The file name can refer to an actual file on disk or to one of the application's embedded resources. See the &lt;a href=&quot;resources&quot;&gt;Resource System&lt;/a&gt; overview for details on how to embed images and other resource files in the application's executable.</source>
          <target state="translated">ファイル名は、ディスク上の実際のファイルまたはアプリケーションの埋め込みリソースの1つを参照できます。アプリケーションの実行可能ファイルに画像やその他のリソースファイルを埋め込む方法の詳細については、&lt;a href=&quot;resources&quot;&gt;リソースシステムの&lt;/a&gt;概要をご覧ください。</target>
        </trans-unit>
        <trans-unit id="c18e8813eab0e372abf488d58b0832e6dcd6fd1e" translate="yes" xml:space="preserve">
          <source>The file name is used for error reporting and for resolving relative path URIs.</source>
          <target state="translated">ファイル名は、エラー報告と相対パスURIの解決に使用されます。</target>
        </trans-unit>
        <trans-unit id="76f0a934d296e541342b5ef7f42be2027247ba01" translate="yes" xml:space="preserve">
          <source>The file name is usually passed in the constructor, but it can be set at any time using &lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt;(). &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; expects the file separator to be '/' regardless of operating system. The use of other separators (e.g., '\') is not supported.</source>
          <target state="translated">ファイル名は通常コンストラクターで渡されますが、&lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt;（）を使用していつでも設定できます。&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;は、オペレーティングシステムに関係なく、ファイル区切り文字が「/」であると想定しています。他の区切り文字（ '\'など）の使用はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="bf69d031901b33afef27fbee56fe1a28e1df50b5" translate="yes" xml:space="preserve">
          <source>The file name is usually passed in the constructor, but it can be set at any time using &lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt;(). QFile expects the file separator to be '/' regardless of operating system. The use of other separators (e.g., '\') is not supported.</source>
          <target state="translated">ファイル名は通常コンストラクターで渡されますが、&lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt;（）を使用していつでも設定できます。QFileは、オペレーティングシステムに関係なく、ファイル区切り文字が「/」であることを想定しています。他の区切り文字（「\」など）の使用はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="76560e8016b96254ccd4a34bd7dcaf02a68c5dbb" translate="yes" xml:space="preserve">
          <source>The file name of the temporary file can be found by calling &lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;(). Note that this is only defined after the file is first opened; the function returns an empty string before this.</source>
          <target state="translated">一時ファイルのファイル名は、&lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;（）を呼び出すことで確認できます。これは、ファイルが最初に開かれた後でのみ定義されることに注意してください。この関数は、この前に空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="9d0ca0cfcf6aa3686cf27fa63705c73f1ec87a65" translate="yes" xml:space="preserve">
          <source>The file path is empty if no translation was loaded yet, the loading failed, or if the translation was not loaded from a file.</source>
          <target state="translated">翻訳がまだ読み込まれていない場合、読み込みに失敗した場合、またはファイルから翻訳が読み込まれていない場合は、ファイルパスは空です。</target>
        </trans-unit>
        <trans-unit id="bc92d732eb84487ccd02784ba46bd680728446c6" translate="yes" xml:space="preserve">
          <source>The file referenced should be linear PCM (WAV format).</source>
          <target state="translated">参照するファイルはリニアPCM(WAV形式)であること。</target>
        </trans-unit>
        <trans-unit id="0402f97df0361fb30604378f2be48a4872ea4e0e" translate="yes" xml:space="preserve">
          <source>The file search attempts to look for compressed texture container file extensions first. If the search is unsuccessful, it attempts to search with the file extensions for the &lt;a href=&quot;qimagereader#supportedImageFormats&quot;&gt;conventional image file types&lt;/a&gt;. For example:</source>
          <target state="translated">ファイル検索では、最初に圧縮テクスチャコンテナのファイル拡張子を検索しようとします。検索に失敗した場合は、ファイル拡張子を使用して&lt;a href=&quot;qimagereader#supportedImageFormats&quot;&gt;従来の画像ファイルタイプ&lt;/a&gt;を検索しようとします。例えば：</target>
        </trans-unit>
        <trans-unit id="16b9e5ca37f860e9c916612d228be84e9d4a9e3f" translate="yes" xml:space="preserve">
          <source>The file should have a &lt;code&gt;Paths&lt;/code&gt; group which contains the entries that correspond to each value of the &lt;a href=&quot;qlibraryinfo#LibraryLocation-enum&quot;&gt;QLibraryInfo::LibraryLocation&lt;/a&gt; enum. See the &lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfo&lt;/a&gt; documentation for details on the meaning of the various locations.</source>
          <target state="translated">ファイルには、&lt;a href=&quot;qlibraryinfo#LibraryLocation-enum&quot;&gt;QLibraryInfo :: LibraryLocation&lt;/a&gt;列挙型の各値に対応するエントリを含む &lt;code&gt;Paths&lt;/code&gt; グループが必要です。さまざまな場所の意味の詳細については、&lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfoの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="b47701c46e0b800d0dd8e0190bd1e5a19c2fcb5e" translate="yes" xml:space="preserve">
          <source>The file should have a &lt;code&gt;Paths&lt;/code&gt; group which contains the entries that correspond to each value of the QLibraryInfo::LibraryLocation enum. See the &lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfo&lt;/a&gt; documentation for details on the meaning of the various locations.</source>
          <target state="translated">ファイルには、QLibraryInfo :: LibraryLocation列挙型の各値に対応するエントリを含む &lt;code&gt;Paths&lt;/code&gt; グループが必要です。さまざまな場所の意味の詳細については、&lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfoの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ce76b5a74d570300449990c23aea2977705937f3" translate="yes" xml:space="preserve">
          <source>The file size exceeds the file system limitation.</source>
          <target state="translated">ファイルサイズがファイルシステムの制限を超えています。</target>
        </trans-unit>
        <trans-unit id="770f5847642a8b9fe5bc330359a27b3fe682324e" translate="yes" xml:space="preserve">
          <source>The file system is usually encoded in UTF-8 on all modern Linux distributions and should not pose a problem. File I/O defaults to UTF-8.</source>
          <target state="translated">ファイルシステムは、すべての最新の Linux ディストリビューションでは通常 UTF-8 でエンコードされており、問題になることはありません。ファイル入出力のデフォルトは UTF-8 です。</target>
        </trans-unit>
        <trans-unit id="e3f76ecb61bc795df43d9106b7edc7d417a108d9" translate="yes" xml:space="preserve">
          <source>The file that the &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; works on is set in the constructor or later with &lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt;(). Use &lt;a href=&quot;qfileinfo#exists&quot;&gt;exists&lt;/a&gt;() to see if the file exists and &lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;() to get its size.</source>
          <target state="translated">&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfoが&lt;/a&gt;機能するファイルは、コンストラクターで設定されるか、後で&lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt;（）で設定されます。&lt;a href=&quot;qfileinfo#exists&quot;&gt;exists&lt;/a&gt;（）を使用してファイルが存在するかどうかを確認し、&lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;（）を使用してそのサイズを取得します。</target>
        </trans-unit>
        <trans-unit id="7f8728bc6896fec6079ad50ff6d3cbce00b5f4dd" translate="yes" xml:space="preserve">
          <source>The file that the QFileInfo works on is set in the constructor or later with &lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt;(). Use &lt;a href=&quot;qfileinfo#exists&quot;&gt;exists&lt;/a&gt;() to see if the file exists and &lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;() to get its size.</source>
          <target state="translated">QFileInfoが機能するファイルは、コンストラクターまたは後で&lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt;（）で設定されます。ファイルが存在するかどうかを確認&lt;a href=&quot;qfileinfo#exists&quot;&gt;するにはexists&lt;/a&gt;（）を使用し、&lt;a href=&quot;qfileinfo#size&quot;&gt;サイズ&lt;/a&gt;を取得するにはsize（）を使用します。</target>
        </trans-unit>
        <trans-unit id="aec1dc260e13d2946c6e7668a2c0d9af4e5541b4" translate="yes" xml:space="preserve">
          <source>The file was blocked due to local policy.</source>
          <target state="translated">ローカルポリシーによりファイルがブロックされました。</target>
        </trans-unit>
        <trans-unit id="68a10fb14dff51881ae2ec9b65a46be2030e1752" translate="yes" xml:space="preserve">
          <source>The file will start playing assuming that the audio system and output device support it. If you run out of luck, check what's up with the &lt;a href=&quot;qaudiooutput#error&quot;&gt;error&lt;/a&gt;() function.</source>
          <target state="translated">オーディオシステムと出力デバイスがファイルをサポートしている場合、ファイルの再生が開始されます。運が悪ければ、&lt;a href=&quot;qaudiooutput#error&quot;&gt;エラー&lt;/a&gt;（）関数で何が起きているかを確認してください。</target>
        </trans-unit>
        <trans-unit id="a3ac39201e58098b5bf97b970df018ec51e712d4" translate="yes" xml:space="preserve">
          <source>The file's contents is rendered in a separate paragraph, using a monospace font and the standard indentation. The code is shown verbatim.</source>
          <target state="translated">ファイルの内容は、等幅フォントと標準のインデントを使用して、別の段落でレンダリングされます。コードはそのまま表示されます。</target>
        </trans-unit>
        <trans-unit id="b9473ce53bf62875482d029c2f8783cd2c191df4" translate="yes" xml:space="preserve">
          <source>The file's dates are returned by &lt;a href=&quot;qfileinfo#birthTime&quot;&gt;birthTime&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#fileTime&quot;&gt;fileTime&lt;/a&gt;(). Information about the file's access permissions is obtained with &lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt;(). The file's ownership is available from &lt;a href=&quot;qfileinfo#owner&quot;&gt;owner&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#ownerId&quot;&gt;ownerId&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#group&quot;&gt;group&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#groupId&quot;&gt;groupId&lt;/a&gt;(). You can examine a file's permissions and ownership in a single statement using the &lt;a href=&quot;qfileinfo#permission&quot;&gt;permission&lt;/a&gt;() function.</source>
          <target state="translated">ファイルの日付は、&lt;a href=&quot;qfileinfo#birthTime&quot;&gt;birthTime&lt;/a&gt;（）、&lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;（）、&lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt;（）、および&lt;a href=&quot;qfileinfo#fileTime&quot;&gt;fileTime&lt;/a&gt;（）によって返されます。ファイルのアクセス許可に関する情報は、&lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt;（）、&lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt;（）、および&lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt;（）を使用して取得されます。ファイルの所有権はから入手可能である&lt;a href=&quot;qfileinfo#owner&quot;&gt;所有者&lt;/a&gt;（）、&lt;a href=&quot;qfileinfo#ownerId&quot;&gt;OWNERID&lt;/a&gt;（）、&lt;a href=&quot;qfileinfo#group&quot;&gt;グループ&lt;/a&gt;（）と&lt;a href=&quot;qfileinfo#groupId&quot;&gt;のgroupId&lt;/a&gt;（）。&lt;a href=&quot;qfileinfo#permission&quot;&gt;パーミッション&lt;/a&gt;（）関数を使用して、1つのステートメントでファイルのパーミッションと所有権を調べることができます。</target>
        </trans-unit>
        <trans-unit id="9f0e78131cd8bed43d0c23737fcdf76080d25c59" translate="yes" xml:space="preserve">
          <source>The file's dates are returned by created(), &lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#fileTime&quot;&gt;fileTime&lt;/a&gt;(). Information about the file's access permissions is obtained with &lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt;(). The file's ownership is available from &lt;a href=&quot;qfileinfo#owner&quot;&gt;owner&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#ownerId&quot;&gt;ownerId&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#group&quot;&gt;group&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#groupId&quot;&gt;groupId&lt;/a&gt;(). You can examine a file's permissions and ownership in a single statement using the &lt;a href=&quot;qfileinfo#permission&quot;&gt;permission&lt;/a&gt;() function.</source>
          <target state="translated">ファイルの日付は、created（）、&lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;（）、&lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt;（）、および&lt;a href=&quot;qfileinfo#fileTime&quot;&gt;fileTime&lt;/a&gt;（）によって返されます。ファイルのアクセス許可に関する情報は、&lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt;（）、&lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt;（）および&lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt;（）で取得されます。ファイルの所有権はから入手可能である&lt;a href=&quot;qfileinfo#owner&quot;&gt;所有者&lt;/a&gt;（）、&lt;a href=&quot;qfileinfo#ownerId&quot;&gt;OWNERID&lt;/a&gt;（）、&lt;a href=&quot;qfileinfo#group&quot;&gt;グループ&lt;/a&gt;（）と&lt;a href=&quot;qfileinfo#groupId&quot;&gt;のgroupId&lt;/a&gt;（）。ファイルの権限と所有権は、&lt;a href=&quot;qfileinfo#permission&quot;&gt;permission&lt;/a&gt;（）関数を使用して1つのステートメントで確認できます。</target>
        </trans-unit>
        <trans-unit id="1c2ac615e1ab1f8b79c2d68294a17e1d9fb61476" translate="yes" xml:space="preserve">
          <source>The file's type is obtained with &lt;a href=&quot;qfileinfo#isFile&quot;&gt;isFile&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#isDir&quot;&gt;isDir&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#isSymLink&quot;&gt;isSymLink&lt;/a&gt;(). The &lt;a href=&quot;qfileinfo#symLinkTarget&quot;&gt;symLinkTarget&lt;/a&gt;() function provides the name of the file the symlink points to.</source>
          <target state="translated">ファイルのタイプは、&lt;a href=&quot;qfileinfo#isFile&quot;&gt;isFile&lt;/a&gt;（）、&lt;a href=&quot;qfileinfo#isDir&quot;&gt;isDir&lt;/a&gt;（）、isSymLink（）で&lt;a href=&quot;qfileinfo#isSymLink&quot;&gt;取得され&lt;/a&gt;ます。&lt;a href=&quot;qfileinfo#symLinkTarget&quot;&gt;symLinkTarget&lt;/a&gt;（）関数は、シンボリックリンクが指すファイルの名前を提供します。</target>
        </trans-unit>
        <trans-unit id="a9e33e8712649581ddc060a2bf56125a60991c61" translate="yes" xml:space="preserve">
          <source>The filename (i.e. everything after the last '/' in the path) is removed. The trailing '/' is kept, unless StripTrailingSlash is set. Only valid if RemovePath is not set.</source>
          <target state="translated">ファイル名 (すなわち、パスの最後の '/' 以降のすべて)が削除されます。最後の '/' は、StripTrailingSlash が設定されていない限り保持されます。RemovePath が設定されていない場合のみ有効。</target>
        </trans-unit>
        <trans-unit id="d8f8c656699bfdab741f34e4d657f8c3737a4e4d" translate="yes" xml:space="preserve">
          <source>The filename or source of the image.</source>
          <target state="translated">画像のファイル名またはソース。</target>
        </trans-unit>
        <trans-unit id="5b59fc0a6132c7d17fdc1bfbebf1ca218dc2e573" translate="yes" xml:space="preserve">
          <source>The filename that is created from the custom compiler.</source>
          <target state="translated">カスタムコンパイラから作成されたファイル名。</target>
        </trans-unit>
        <trans-unit id="8893d1706c9be794247f1c0a5dfddfda62099613" translate="yes" xml:space="preserve">
          <source>The files &lt;code&gt;qaxserver.rc&lt;/code&gt; and &lt;code&gt;qaxserver.def&lt;/code&gt; are part of the framework and can be used from their usual location (specify a path in the &lt;code&gt;.pro&lt;/code&gt; file), or copied into the project directory. You can modify these files as long as it includes any file as the type library entry, ie. you can add version information or specify a different toolbox icon.</source>
          <target state="translated">ファイル &lt;code&gt;qaxserver.rc&lt;/code&gt; および &lt;code&gt;qaxserver.def&lt;/code&gt; はフレームワークの一部であり、通常の場所から使用する（ &lt;code&gt;.pro&lt;/code&gt; ファイルにパスを指定する）か、プロジェクトディレクトリにコピーできます。タイプライブラリエントリとしてファイルが含まれている限り、これらのファイルを変更できます。バージョン情報を追加するか、別のツールボックスアイコンを指定できます。</target>
        </trans-unit>
        <trans-unit id="92fee63d2a5af9b89f1ccfefa9fa58da602b91f0" translate="yes" xml:space="preserve">
          <source>The files added to your project are:</source>
          <target state="translated">プロジェクトに追加されたファイルは</target>
        </trans-unit>
        <trans-unit id="825e433162a80c586eb8062b829d6aa9df3cb6de" translate="yes" xml:space="preserve">
          <source>The files must be in a directory in the filesystem or in the &lt;a href=&quot;resources&quot;&gt;resource system&lt;/a&gt;.</source>
          <target state="translated">ファイルは、ファイルシステムまたは&lt;a href=&quot;resources&quot;&gt;リソースシステムの&lt;/a&gt;ディレクトリにある必要があります。</target>
        </trans-unit>
        <trans-unit id="305116f2fb410181c74836860f600542a3eeac9f" translate="yes" xml:space="preserve">
          <source>The files must be in a directory that is findable via the &lt;a href=&quot;qtqml-syntax-imports#qml-import-path&quot;&gt;QML Import Path&lt;/a&gt;.</source>
          <target state="translated">ファイルは、&lt;a href=&quot;qtqml-syntax-imports#qml-import-path&quot;&gt;QMLインポートパスを&lt;/a&gt;介して見つけることができるディレクトリにある必要があります。</target>
        </trans-unit>
        <trans-unit id="acf3e99396fda9962e8a0858b6dc3d16e90bb8a6" translate="yes" xml:space="preserve">
          <source>The files to be selected are placed in directories named with a &lt;code&gt;'+'&lt;/code&gt; and a selector name. In the above example you could have the platform configurations selected by placing them in the following locations:</source>
          <target state="translated">選択するファイルは、 &lt;code&gt;'+'&lt;/code&gt; とセレクター名が付いたディレクトリに配置されます。上記の例では、次の場所に配置することでプラットフォーム構成を選択できます。</target>
        </trans-unit>
        <trans-unit id="868964705b30f1901fe92e61ffe16758f2b309a2" translate="yes" xml:space="preserve">
          <source>The fill (brush) color of the axis shades.</source>
          <target state="translated">軸のシェードの塗りつぶし(ブラシ)色。</target>
        </trans-unit>
        <trans-unit id="b7d44bfbe5728c3f5e289c8480f88b17785c72ec" translate="yes" xml:space="preserve">
          <source>The fill (brush) color of the bar set.</source>
          <target state="translated">バーセットの塗りつぶし(ブラシ)色。</target>
        </trans-unit>
        <trans-unit id="553b02c912031f130c2f29bfc692302539f18576" translate="yes" xml:space="preserve">
          <source>The fill (brush) color of the slice.</source>
          <target state="translated">スライスの塗りつぶし(ブラシ)色。</target>
        </trans-unit>
        <trans-unit id="c5733dc70615bc0e56a53874caa8e12f7bd0a73e" translate="yes" xml:space="preserve">
          <source>The filter can modify the reading.</source>
          <target state="translated">フィルターは読みを修正することができます。</target>
        </trans-unit>
        <trans-unit id="33e5b6182a24936979dc8e63596c8cba17da2e36" translate="yes" xml:space="preserve">
          <source>The filter engine allows for adding new filters and changing the existing filters' data through the &lt;a href=&quot;qhelpfilterengine#setFilterData&quot;&gt;setFilterData&lt;/a&gt;() method. An existing filter can be removed through the &lt;a href=&quot;qhelpfilterengine#removeFilter&quot;&gt;removeFilter&lt;/a&gt;() method.</source>
          <target state="translated">フィルターエンジンでは、&lt;a href=&quot;qhelpfilterengine#setFilterData&quot;&gt;setFilterData&lt;/a&gt;（）メソッドを使用して、新しいフィルターを追加したり、既存のフィルターのデータを変更したりできます。既存のフィルターは、&lt;a href=&quot;qhelpfilterengine#removeFilter&quot;&gt;removeFilter&lt;/a&gt;（）メソッドを使用して削除できます。</target>
        </trans-unit>
        <trans-unit id="a44f23ace8e9953d62f0222e6150ee596c913548" translate="yes" xml:space="preserve">
          <source>The filter engine allows the management of filters associated with a &lt;a href=&quot;qhelpenginecore&quot;&gt;QHelpEngineCore&lt;/a&gt; instance. The help engine internally creates an instance of the filter engine, which can be accessed by calling &lt;a href=&quot;qhelpenginecore#filterEngine&quot;&gt;QHelpEngineCore::filterEngine&lt;/a&gt;(). Therefore, the public constructor of this class is disabled.</source>
          <target state="translated">フィルターエンジンを使用すると、&lt;a href=&quot;qhelpenginecore&quot;&gt;QHelpEngineCore&lt;/a&gt;インスタンスに関連付けられたフィルターを管理できます。ヘルプエンジンは、フィルターエンジンのインスタンスを内部的に作成します。このインスタンスには、&lt;a href=&quot;qhelpenginecore#filterEngine&quot;&gt;QHelpEngineCore :: filterEngine&lt;/a&gt;（）を呼び出してアクセスできます。したがって、このクラスのパブリックコンストラクターは無効になっています。</target>
        </trans-unit>
        <trans-unit id="5e0d4bc3125aef7c21fe298cb367b393849770de" translate="yes" xml:space="preserve">
          <source>The filter function must be of the form:</source>
          <target state="translated">フィルタ関数は、その形式でなければなりません。</target>
        </trans-unit>
        <trans-unit id="4d54bddf2e1b434d87011febd774ca0af87588e4" translate="yes" xml:space="preserve">
          <source>The filter is a SQL &lt;code&gt;WHERE&lt;/code&gt; clause without the keyword &lt;code&gt;WHERE&lt;/code&gt; (for example, &lt;code&gt;name='Josephine')&lt;/code&gt;.</source>
          <target state="translated">フィルターは、キーワード &lt;code&gt;WHERE&lt;/code&gt; のないSQL &lt;code&gt;WHERE&lt;/code&gt; 句です（たとえば、 &lt;code&gt;name='Josephine')&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3a1cebe74b94bb2dc48932dbc3342ba4e66ec08" translate="yes" xml:space="preserve">
          <source>The filter might be called from different threads, but never concurrently. The filter shall not call any static functions of &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;.</source>
          <target state="translated">フィルターは異なるスレッドから呼び出されることがありますが、同時に呼び出されることはありません。フィルターは&lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategoryの&lt;/a&gt;静的関数を呼び出しません。</target>
        </trans-unit>
        <trans-unit id="9f43548552a57a2f6ab2db0c5ee4b2f772ef8a6e" translate="yes" xml:space="preserve">
          <source>The filter should be case sensitive.</source>
          <target state="translated">フィルタは大文字と小文字を区別します。</target>
        </trans-unit>
        <trans-unit id="5b4920d6bad6e0d2b28c43f0ad0b970d5e026eb2" translate="yes" xml:space="preserve">
          <source>The filtering mode is set on the texture instance just before the texture is bound for rendering.</source>
          <target state="translated">フィルタリングモードは、テクスチャがレンダリングにバインドされる直前にテクスチャインスタンスに設定されます。</target>
        </trans-unit>
        <trans-unit id="4bc83e005e4bbd0cdc333278a9404167626687f8" translate="yes" xml:space="preserve">
          <source>The filters are identified by a filter name string. Filter details are described by the &lt;a href=&quot;qhelpfilterdata&quot;&gt;QHelpFilterData&lt;/a&gt; class.</source>
          <target state="translated">フィルターは、フィルター名ストリングによって識別されます。フィルターの詳細は、&lt;a href=&quot;qhelpfilterdata&quot;&gt;QHelpFilterData&lt;/a&gt;クラスによって記述されます。</target>
        </trans-unit>
        <trans-unit id="fb3445c4984fbf8ccd1b41230c636dfdf7e90974" translate="yes" xml:space="preserve">
          <source>The final appearance of a paused progress indicator depends on the active Windows theme. Typically, a paused progress indicator turns yellow to indicate that the progress is currently paused. Unlike a &lt;a href=&quot;qwintaskbarprogress#stopped-prop&quot;&gt;stopped&lt;/a&gt; progress indicator, a paused progress should not be used to indicate an error.</source>
          <target state="translated">一時停止された進行状況インジケーターの最終的な外観は、アクティブなWindowsテーマによって異なります。通常、一時停止中の進行状況インジケータは黄色になり、進行状況が現在一時停止中であることを示します。&lt;a href=&quot;qwintaskbarprogress#stopped-prop&quot;&gt;停止した&lt;/a&gt;進行状況インジケーターとは異なり、一時停止した進行状況はエラーを示すために使用しないでください。</target>
        </trans-unit>
        <trans-unit id="83b59d3c9d98b206219dc424663cf51e143bdb8b" translate="yes" xml:space="preserve">
          <source>The final appearance of a stopped progress indicator depends on the active Windows theme. Typically, a stopped progress indicator turns red to indicate that the progress is currently stopped. Unlike a &lt;a href=&quot;qwintaskbarprogress#paused-prop&quot;&gt;paused&lt;/a&gt; progress indicator, a stopped progress may be used to indicate an error.</source>
          <target state="translated">停止した進行状況インジケーターの最終的な外観は、アクティブなWindowsテーマによって異なります。通常、停止中の進行状況インジケーターは赤に変わり、進行状況が現在停止していることを示します。&lt;a href=&quot;qwintaskbarprogress#paused-prop&quot;&gt;一時停止した&lt;/a&gt;進行状況インジケーターとは異なり、停止した進行状況はエラーを示すために使用できます。</target>
        </trans-unit>
        <trans-unit id="0ff08c092a13ab85ecb55f1065fefa61e1c4fd04" translate="yes" xml:space="preserve">
          <source>The final step is to run the example application with your custom style:</source>
          <target state="translated">最後のステップは、カスタムスタイルでサンプルアプリケーションを実行することです。</target>
        </trans-unit>
        <trans-unit id="c54ac6f0d1251abaf1aa7e8267cc3e54b680cd9d" translate="yes" xml:space="preserve">
          <source>The final step is to use the &lt;code&gt;QMAKE_EXTRA_TARGETS&lt;/code&gt; variable to instruct qmake that this object is a target to be built:</source>
          <target state="translated">最後のステップは、 &lt;code&gt;QMAKE_EXTRA_TARGETS&lt;/code&gt; 変数を使用して、このオブジェクトがビルドされるターゲットであることをqmakeに指示することです。</target>
        </trans-unit>
        <trans-unit id="1e679b89cdb4c2ac43fb8717455ba0f51b35cf7d" translate="yes" xml:space="preserve">
          <source>The finished product:</source>
          <target state="translated">完成品です。</target>
        </trans-unit>
        <trans-unit id="b6cb2c534ec2e20be9da399f5fc21fa1eb9df2b4" translate="yes" xml:space="preserve">
          <source>The first '\n' character is read.</source>
          <target state="translated">最初の「\n」の文字を読みます。</target>
        </trans-unit>
        <trans-unit id="28d324a240bf361f38714c29315ec9fadad6b539" translate="yes" xml:space="preserve">
          <source>The first and last tick mark on an angular &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; are co-located at a 0/360 degree angle.</source>
          <target state="translated">角度&lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt;の最初と最後の目盛りは、0/360度の角度で配置されています。</target>
        </trans-unit>
        <trans-unit id="cb6f560797736264a953ddb2b22e4c702fe6fd60" translate="yes" xml:space="preserve">
          <source>The first and last tick mark on an angular &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; are co-located at a 0/360 degree angle.</source>
          <target state="translated">角度のある&lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt;の最初と最後の目盛りは、0/360度の角度で配置されています。</target>
        </trans-unit>
        <trans-unit id="daa5d163982af16a52507ae4c73764b4f2fbc5dd" translate="yes" xml:space="preserve">
          <source>The first argument is the string of QML to create. Just like in a new file, you will need to import any types you wish to use. The second argument is the parent object for the new object, and the parent argument semantics which apply to components are similarly applicable for &lt;code&gt;createQmlObject()&lt;/code&gt;. The third argument is the file path to associate with the new object; this is used for error reporting.</source>
          <target state="translated">最初の引数は、作成するQMLの文字列です。新しいファイルと同じように、使用したいタイプをインポートする必要があります。2番目の引数は新しいオブジェクトの親オブジェクトであり、コンポーネントに適用される親引数のセマンティクスは、 &lt;code&gt;createQmlObject()&lt;/code&gt; にも同様に適用できます。3番目の引数は、新しいオブジェクトに関連付けるファイルパスです。これはエラー報告に使用されます。</target>
        </trans-unit>
        <trans-unit id="5e5f3bfbf052aa89c5b19a0bfee21bbb08862692" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;a href=&quot;qsqltablemodel#removeRows&quot;&gt;QSqlTableModel::removeRows&lt;/a&gt;() is the index of the first row to delete.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#removeRows&quot;&gt;QSqlTableModel :: removeRows&lt;/a&gt;（）の最初の引数は、削除する最初の行のインデックスです。</target>
        </trans-unit>
        <trans-unit id="fbb3df0828e8cadf50a633491f04c4543382e25c" translate="yes" xml:space="preserve">
          <source>The first available value for user defined resource types.</source>
          <target state="translated">ユーザー定義のリソースタイプで最初に利用可能な値。</target>
        </trans-unit>
        <trans-unit id="f988ecb145d27773b92f9e06ffd0f9a163923195" translate="yes" xml:space="preserve">
          <source>The first child added is the &lt;a href=&quot;qlist#first&quot;&gt;first&lt;/a&gt; object in the list and the last child added is the &lt;a href=&quot;qlist#last&quot;&gt;last&lt;/a&gt; object in the list, i.e. new children are appended at the end.</source>
          <target state="translated">追加された最初の子はリストの&lt;a href=&quot;qlist#first&quot;&gt;最初の&lt;/a&gt;オブジェクトであり、最後に追加された子はリストの&lt;a href=&quot;qlist#last&quot;&gt;最後の&lt;/a&gt;オブジェクトです。つまり、新しい子が最後に追加されます。</target>
        </trans-unit>
        <trans-unit id="b93b22efe02fa3c2df8717527d3b00cde733641b" translate="yes" xml:space="preserve">
          <source>The first child of the context node</source>
          <target state="translated">コンテキストノードの最初の子</target>
        </trans-unit>
        <trans-unit id="09a04284732e4460cb7827816c51cae01ed33ff4" translate="yes" xml:space="preserve">
          <source>The first column lists all types available in &lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt;, &lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt;, and &lt;a href=&quot;qtquickextras-index&quot;&gt;Qt Quick Extras&lt;/a&gt;. The second column documents the respective type in Qt Quick Controls 2. When a direct alternative is not available, the third column contains an alternative that provides related functionality. The last column contains some remarks about the differences between the types in the different modules.</source>
          <target state="translated">最初の列には、&lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt;、&lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt;、&lt;a href=&quot;qtquickextras-index&quot;&gt;Qt Quick Extrasで&lt;/a&gt;利用可能なすべてのタイプがリストされています。2番目の列は、Qt Quick Controls 2のそれぞれのタイプを示しています。直接の代替が利用できない場合、3番目の列には関連機能を提供する代替が含まれます。最後の列には、さまざまなモジュールのタイプ間の違いについてのいくつかの注釈が含まれています。</target>
        </trans-unit>
        <trans-unit id="4235febdbf662cbc4cfb9e8c4279759dd8353ff0" translate="yes" xml:space="preserve">
          <source>The first column lists all types available in &lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt;, &lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt;, and &lt;a href=&quot;qtquickextras-index&quot;&gt;Qt Quick Extras&lt;/a&gt;. The second column documents the respective type in Qt Quick Controls. When a direct alternative is not available, the third column contains an alternative that provides related functionality. The last column contains some remarks about the differences between the types in the different modules.</source>
          <target state="translated">最初の列には、&lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt;、&lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt;、および&lt;a href=&quot;qtquickextras-index&quot;&gt;Qt &lt;/a&gt;QuickExtrasで使用可能なすべてのタイプが一覧表示されます。 2番目の列は、Qtクイックコントロールのそれぞれのタイプを示しています。直接的な代替手段が利用できない場合、3番目の列には関連する機能を提供する代替手段が含まれます。最後の列には、異なるモジュールのタイプ間の違いに関するいくつかの注意事項が含まれています。</target>
        </trans-unit>
        <trans-unit id="26c5c6aa86503d74ed6ed1dda1e06974585d2150" translate="yes" xml:space="preserve">
          <source>The first cube is writing 0.5 to the alpha value of the color but it does not bring visible results since alpha blending is not enabled. The second cube enables simple alpha blending via the &lt;a href=&quot;qml-qtquick3d-custommaterial&quot;&gt;CustomMaterial&lt;/a&gt; properties. The third one also assigns an opacity of 0.5 to the Model, which means that the effective opacity is 0.25.</source>
          <target state="translated">最初の立方体は色のアルファ値に0.5を書き込んでいますが、アルファブレンディングが有効になっていないため、目に見える結果は得られません。2番目の立方体は、&lt;a href=&quot;qml-qtquick3d-custommaterial&quot;&gt;CustomMaterial&lt;/a&gt;プロパティを介した単純なアルファブレンディングを可能にします。3つ目は、モデルに0.5の不透明度を割り当てます。これは、有効な不透明度が0.25であることを意味します。</target>
        </trans-unit>
        <trans-unit id="a4c15c2f568ab7afe9cef57d55b72e89a501c20c" translate="yes" xml:space="preserve">
          <source>The first element in the pair.</source>
          <target state="translated">ペアの最初の要素。</target>
        </trans-unit>
        <trans-unit id="2cc48778ee738c240b2c59f6c3a9c3bb6a195dd1" translate="yes" xml:space="preserve">
          <source>The first example above simulates clicking the &lt;code&gt;escape&lt;/code&gt; key on &lt;code&gt;myWidget&lt;/code&gt; without any keyboard modifiers and without delay. The second example simulates clicking &lt;code&gt;shift-escape&lt;/code&gt; on &lt;code&gt;myWidget&lt;/code&gt; following a 200 ms delay of the test.</source>
          <target state="translated">上記の最初の例は、キーボード修飾子なしで遅延なしに &lt;code&gt;myWidget&lt;/code&gt; の &lt;code&gt;escape&lt;/code&gt; キーをクリックすることをシミュレートします。第二の例では、クリックをシミュレート &lt;code&gt;shift-escape&lt;/code&gt; に &lt;code&gt;myWidget&lt;/code&gt; 試験の200ミリ秒の遅延以下。</target>
        </trans-unit>
        <trans-unit id="edb4467d19af406d10730a4715a5f223c08c5944" translate="yes" xml:space="preserve">
          <source>The first example above simulates clicking the &lt;code&gt;escape&lt;/code&gt; key on &lt;code&gt;myWindow&lt;/code&gt; without any keyboard modifiers and without delay. The second example simulates clicking &lt;code&gt;shift-escape&lt;/code&gt; on &lt;code&gt;myWindow&lt;/code&gt; following a 200 ms delay of the test.</source>
          <target state="translated">上記の最初の例は、キーボード修飾子なしで遅延なく &lt;code&gt;myWindow&lt;/code&gt; の &lt;code&gt;escape&lt;/code&gt; キーをクリックすることをシミュレートします。第二の例では、クリックをシミュレート &lt;code&gt;shift-escape&lt;/code&gt; に &lt;code&gt;myWindow&lt;/code&gt; 200ミリ秒試験遅れ以下。</target>
        </trans-unit>
        <trans-unit id="11fda7d38d8154e036a7fc8ae78fff26351efed8" translate="yes" xml:space="preserve">
          <source>The first example demonstrates the simplest usage of &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;.</source>
          <target state="translated">最初の例は、&lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;の最も単純な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="a95baa0133851c6a2ffe7ff91114afdca6431488" translate="yes" xml:space="preserve">
          <source>The first example demonstrates the simplest usage of ScrollView.</source>
          <target state="translated">最初の例は、ScrollView の最もシンプルな使い方を示しています。</target>
        </trans-unit>
        <trans-unit id="327e93d4edb11c8904aa8170ab8a6ac08d818af4" translate="yes" xml:space="preserve">
          <source>The first group of functions insert block-level elements, and update the cursor position, but they do not return the element that was inserted:</source>
          <target state="translated">最初の関数群はブロックレベルの要素を挿入し、カーソル位置を更新しますが、挿入された要素は戻りません。</target>
        </trans-unit>
        <trans-unit id="c564c45eb40718aa95fe324af06a38e4dc0dd84a" translate="yes" xml:space="preserve">
          <source>The first is the parent for the new object. The parent can be a graphical object (i.e. of the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; type) or non-graphical object (i.e. of the &lt;a href=&quot;qml-qtqml-qtobject&quot;&gt;QtObject&lt;/a&gt; or C++ &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; type). Only graphical objects with graphical parent objects will be rendered to the &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; visual canvas. If you wish to set the parent later you can safely pass &lt;code&gt;null&lt;/code&gt; to this function.</source>
          <target state="translated">1つ目は、新しいオブジェクトの親です。親は、グラフィカルオブジェクト（つまり、&lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;タイプ）または非グラフィカルオブジェクト（つまり、&lt;a href=&quot;qml-qtqml-qtobject&quot;&gt;QtObject&lt;/a&gt;またはC ++ &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;タイプ）にすることができます。グラフィカルな親オブジェクトを持つグラフィカルオブジェクトのみが&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;ビジュアルキャンバスにレンダリングされます。後で親を設定する場合は、この関数に安全に &lt;code&gt;null&lt;/code&gt; を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="154aef0d831a4d87aaddbeef5a1b063b857cc96c" translate="yes" xml:space="preserve">
          <source>The first isolated world to be used by scripts set by users if the application is not making use of more worlds. As a rule of thumb, if that functionality is exposed to the application users, each individual script should probably get its own isolated world.</source>
          <target state="translated">アプリケーションがより多くの世界を利用していない場合、ユーザによって設定されたスクリプトによって使用される最初の孤立した世界。経験則として、もしその機能がアプリケーションのユーザに公開されているならば、個々のスクリプトはおそらく独自の隔離されたワールドを取得するべきです。</target>
        </trans-unit>
        <trans-unit id="24ce409ea2a6d5fc171a9ab2df71d0ef952e7d83" translate="yes" xml:space="preserve">
          <source>The first item in the list is the most preferred one.</source>
          <target state="translated">最初に挙げた項目の中で、最も好まれているものを挙げます。</target>
        </trans-unit>
        <trans-unit id="951fde176698c58abb83a5702aff8b468cbed78d" translate="yes" xml:space="preserve">
          <source>The first item that should be shown when the &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; is created.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackViewの&lt;/a&gt;作成時に表示される最初のアイテム。</target>
        </trans-unit>
        <trans-unit id="2546748da1a0ea931a556608f61ef52e9aadb6dd" translate="yes" xml:space="preserve">
          <source>The first line creates the connection object, and the last line opens it for use. In between, we initialize some connection information, including the &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;database name&lt;/a&gt;, the &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;host name&lt;/a&gt;, the &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;user name&lt;/a&gt;, and the &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;password&lt;/a&gt;. In this case, we are connecting to the MySQL database &lt;code&gt;flightdb&lt;/code&gt; on the host &lt;code&gt;bigblue&lt;/code&gt;. The &lt;code&gt;&quot;QMYSQL&quot;&lt;/code&gt; argument to &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase()&lt;/a&gt; specifies the type of database driver to use for the connection. The set of database drivers included with Qt are shown in the table of &lt;a href=&quot;sql-driver#supported-databases&quot;&gt;supported database drivers&lt;/a&gt;.</source>
          <target state="translated">最初の行は接続オブジェクトを作成し、最後の行はそれを開いて使用します。その間に、&lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;データベース名&lt;/a&gt;、&lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;ホスト名&lt;/a&gt;、&lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;ユーザー名&lt;/a&gt;、&lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;パスワード&lt;/a&gt;などの接続情報を初期化します。この場合、ホスト &lt;code&gt;bigblue&lt;/code&gt; 上のMySQLデータベース &lt;code&gt;flightdb&lt;/code&gt; に接続しています。&lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase（）&lt;/a&gt;の &lt;code&gt;&quot;QMYSQL&quot;&lt;/code&gt; 引数は、接続に使用するデータベースドライバーのタイプを指定します。 Qtに含まれているデータベースドライバーのセットは、&lt;a href=&quot;sql-driver#supported-databases&quot;&gt;サポートされているデータベースドライバーの&lt;/a&gt;表に示されています。</target>
        </trans-unit>
        <trans-unit id="67aa8bb55f9ed9c7e4f2ee092c8754a721afbacb" translate="yes" xml:space="preserve">
          <source>The first linking step has to link a dummy type library into the executable that can later be replaced by idc. Add a resource file with a type library to your project as demonstrated in the examples.</source>
          <target state="translated">最初のリンクステップでは、ダミーの型ライブラリを実行ファイルにリンクしなければなりません。例で示したように、型ライブラリを持つリソースファイルをプロジェクトに追加します。</target>
        </trans-unit>
        <trans-unit id="fdd760c7804ff4b330fbdacc74e5fb6a5f6d8c3f" translate="yes" xml:space="preserve">
          <source>The first macro defines the \gui command to render its argument using a bold font. The second macro defines the \raisedaster command to render a superscript asterisk, but only when generating HTML.</source>
          <target state="translated">最初のマクロは、太字フォントを使用してその引数をレンダリングするための \gui コマンドを定義します。2 番目のマクロは、上付きのアスタリスクをレンダリングするための \raisedaster コマンドを定義しますが、HTML を生成する場合にのみ使用します。</target>
        </trans-unit>
        <trans-unit id="a27081eeb76b5693672503f544e1a04499bf4b4b" translate="yes" xml:space="preserve">
          <source>The first object controls the second object.</source>
          <target state="translated">第1のオブジェクトは第2のオブジェクトを制御します。</target>
        </trans-unit>
        <trans-unit id="5b36183f6f24dbfa76d4777566056d2f7f2ee001" translate="yes" xml:space="preserve">
          <source>The first object is controlled by the second object.</source>
          <target state="translated">前記第1のオブジェクトは、前記第2のオブジェクトによって制御される。</target>
        </trans-unit>
        <trans-unit id="0f82dfcd3e257be0012a0a1ca747d4ebe594e4a3" translate="yes" xml:space="preserve">
          <source>The first object is labelled by the second object.</source>
          <target state="translated">第1のオブジェクトには、第2のオブジェクトのラベルが付けられています。</target>
        </trans-unit>
        <trans-unit id="7cfd6e98366e71b20981f793f5dd13aca18d45ae" translate="yes" xml:space="preserve">
          <source>The first object is the label of the second object.</source>
          <target state="translated">第1のオブジェクトは、第2のオブジェクトのラベルである。</target>
        </trans-unit>
        <trans-unit id="7b19098f4e0905451ef211035dcfa03ead4f6230" translate="yes" xml:space="preserve">
          <source>The first object that can be used for application-specific purposes.</source>
          <target state="translated">アプリケーション固有の目的で使用できる最初のオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="79802702a1e2a094fd94475aa69d6d01fa9676bf" translate="yes" xml:space="preserve">
          <source>The first option that can be used for user-specific purposes.</source>
          <target state="translated">ユーザー固有の目的で使用できる最初のオプションです。</target>
        </trans-unit>
        <trans-unit id="e267d632b2e626b77c4d977aa272d2df75523629" translate="yes" xml:space="preserve">
          <source>The first page in a document does not need to be preceded by a call to &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;(). You only need to calling &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;() after &lt;a href=&quot;qpainter#begin&quot;&gt;QPainter::begin&lt;/a&gt;() if you need to insert a blank page at the beginning of a printed document. Similarly, calling &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;() after the last page in a document is painted will result in a trailing blank page appended to the end of the printed document.</source>
          <target state="translated">ドキュメントの最初のページの前に&lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;（）を呼び出す必要はありません。印刷ドキュメントの先頭に空白ページを挿入する必要がある場合は、&lt;a href=&quot;qprinter#newPage&quot;&gt;QPainter &lt;/a&gt;&lt;a href=&quot;qpainter#begin&quot;&gt;:: begin&lt;/a&gt;（）の後にnewPage（）を呼び出すだけです。同様に、ドキュメントの最後のページが&lt;a href=&quot;qprinter#newPage&quot;&gt;描画さ&lt;/a&gt;れた後にnewPage（）を呼び出すと、印刷されたドキュメントの最後に末尾の空白ページが追加されます。</target>
        </trans-unit>
        <trans-unit id="4538ec64f8ec2b1ffdb5f9a00f6ba1fadbc56157" translate="yes" xml:space="preserve">
          <source>The first parameter that can be used for user-specific purposes. &lt;code&gt;QVariant&lt;/code&gt;</source>
          <target state="translated">ユーザー固有の目的で使用できる最初のパラメーター。 &lt;code&gt;QVariant&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ac463776739c5c91e6aefa43e2247bdfdc77fec" translate="yes" xml:space="preserve">
          <source>The first part of the function, which we have omitted, uses the current &lt;a href=&quot;qstyle&quot;&gt;style&lt;/a&gt; to calculate the slider handle's bounding rectangle; it is stored in &lt;code&gt;srect&lt;/code&gt;. Notice that child 0, covered in the default case in the above code, is the slider itself, so we can simply return the &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; bounding rectangle obtained from the superclass, which is effectively the value obtained from &lt;a href=&quot;qaccessiblewidget#rect&quot;&gt;QAccessibleWidget::rect&lt;/a&gt;().</source>
          <target state="translated">関数の最初の部分（省略）は、現在の&lt;a href=&quot;qstyle&quot;&gt;スタイル&lt;/a&gt;を使用してスライダーハンドルの境界の四角形を計算します。 &lt;code&gt;srect&lt;/code&gt; に格納されます。上記のコードのデフォルトのケースでカバーされている子0はスライダー自体なので、スーパークラスから取得された&lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt;境界矩形を返すことができます。これは、事実上、&lt;a href=&quot;qaccessiblewidget#rect&quot;&gt;QAccessibleWidget :: rect&lt;/a&gt;（）から取得された値です。</target>
        </trans-unit>
        <trans-unit id="1ba33c845e57254781098f1fbfea501d02d4ccb1" translate="yes" xml:space="preserve">
          <source>The first pass allows for optimal z-culling for normal opaque 3D objects and the second pass allows for correct blending of transparent objects.</source>
          <target state="translated">最初のパスでは、通常の不透明な3Dオブジェクトに対して最適なZカリングを行い、2つ目のパスでは透明なオブジェクトを正しくブレンドすることができます。</target>
        </trans-unit>
        <trans-unit id="e302406e06f31c8dc885df504140e5b320d6b21e" translate="yes" xml:space="preserve">
          <source>The first point is implicitly connected to the last point, and the polygon is filled with the current &lt;a href=&quot;qpainter#brush&quot;&gt;brush&lt;/a&gt;().</source>
          <target state="translated">最初のポイントは暗黙的に最後のポイントに接続され、ポリゴンは現在の&lt;a href=&quot;qpainter#brush&quot;&gt;ブラシ&lt;/a&gt;（）で塗りつぶされます。</target>
        </trans-unit>
        <trans-unit id="d5e697648dac9738c5612614fc4418811388ec05" translate="yes" xml:space="preserve">
          <source>The first point is implicitly connected to the last point, and the polygon is filled with the current &lt;a href=&quot;qpainter#brush&quot;&gt;brush&lt;/a&gt;(). If the supplied polygon is not convex, i.e. it contains at least one angle larger than 180 degrees, the results are undefined.</source>
          <target state="translated">最初のポイントは暗黙的に最後のポイントに接続され、ポリゴンは現在の&lt;a href=&quot;qpainter#brush&quot;&gt;ブラシ&lt;/a&gt;（）で塗りつぶされます。指定されたポリゴンが凸型でない場合、つまり180度を超える角度が少なくとも1つ含まれている場合、結果は保証されません。</target>
        </trans-unit>
        <trans-unit id="3e7cf2e5136b76965afeda9d720b65e99caa6567" translate="yes" xml:space="preserve">
          <source>The first point of the line will be on the origin.</source>
          <target state="translated">線の最初のポイントは原点になります。</target>
        </trans-unit>
        <trans-unit id="4d18b952a7b0019def24d59b2b6f719b2c990b52" translate="yes" xml:space="preserve">
          <source>The first position in a string is always a valid boundary and refers to the position before the first character. The last position at the length of the string is also valid and refers to the position after the last character.</source>
          <target state="translated">文字列の最初の位置は常に有効な境界であり、最初の文字の前の位置を参照します。文字列の長さの最後の位置も有効で、最後の文字の後の位置を参照します。</target>
        </trans-unit>
        <trans-unit id="8599d3fa03dae88293ae228e3762a282638ff6d2" translate="yes" xml:space="preserve">
          <source>The first requirement when using &lt;code&gt;CMake&lt;/code&gt; is to use &lt;code&gt;find_package&lt;/code&gt; to locate the libraries and header files shipped with Qt. These libraries and header files can then be used to build libraries and applications based on Qt.</source>
          <target state="translated">&lt;code&gt;CMake&lt;/code&gt; を使用する場合の最初の要件は、 &lt;code&gt;find_package&lt;/code&gt; を使用してQtに付属のライブラリとヘッダーファイルを見つけることです。これらのライブラリとヘッダーファイルを使用して、Qtに基づくライブラリとアプリケーションを構築できます。</target>
        </trans-unit>
        <trans-unit id="41a1ee4893b0b0bf6d3cb0d45b24d44bf77b04c2" translate="yes" xml:space="preserve">
          <source>The first role that can be used for application-specific purposes.</source>
          <target state="translated">アプリケーションに特化した用途に使用できる最初のロールです。</target>
        </trans-unit>
        <trans-unit id="2378d5834e47b9e1c494bc1c67839735262521d6" translate="yes" xml:space="preserve">
          <source>The first semantic is conceptually correct, given that a particular script might be imported by any number of QML files. The second semantic is retained for the purposes of backwards-compatibility. The third semantic remains unchanged from the current semantics for shared scripts, but is clarified here in respect to the newly possible case (where the script imports other scripts or modules).</source>
          <target state="translated">第一の意味論は、特定のスクリプトがいくつものQMLファイルからインポートされる可能性があることを考えると、概念的に正しいものです。第二の意味論は、後方互換性のために保持される。第三の意味論は、共有スクリプトに関する現行の意味論と変更はありませんが、新たに考えられるケース(スクリプトが他のスクリプトやモジュールをインポートする場合)に関して、ここで明確化されています。</target>
        </trans-unit>
        <trans-unit id="b54d86b22e7dd6521c594f04f02ff05fe687e503" translate="yes" xml:space="preserve">
          <source>The first set of texture coordinates from the input mesh data, or all zeroes if there were no UV values provided. As with VERTEX and NORMAL, the value can altered.</source>
          <target state="translated">入力メッシュデータからのテクスチャ座標の最初のセット、またはUV値が提供されていない場合はすべてゼロ。VERTEXやNORMALと同様に、値を変更することができます。</target>
        </trans-unit>
        <trans-unit id="e16739955f8ec6a0b63cfd01f657927c40cbe7a8" translate="yes" xml:space="preserve">
          <source>The first step in designing the style was to select the base class. We chose to subclass &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;. This class implements most of the functionality we need, other than performing the actual drawing.</source>
          <target state="translated">スタイルを設計する最初のステップは、基本クラスを選択することでした。&lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;をサブクラス化することにしました。このクラスは、実際の描画を実行する以外に、必要なほとんどの機能を実装します。</target>
        </trans-unit>
        <trans-unit id="cd7d5a3202533670c7ccf591f8250d79d0d12328" translate="yes" xml:space="preserve">
          <source>The first step in the rendering process is to determine and set up the scene render target. Depending on which properties are set in the &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt;, the actual render target will vary. The first decision is whether content is being rendered directly to a window surface, or to an offscreen texture. By default, &lt;a href=&quot;qml-qtquick3d-view3d&quot;&gt;View3D&lt;/a&gt; will render to an offscreen texture. When using post processing effects, rendering to an offscreen texture is mandatory.</source>
          <target state="translated">レンダリングプロセスの最初のステップは、シーンのレンダリングターゲットを決定して設定することです。&lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt;で設定されているプロパティに応じて、実際のレンダーターゲットは異なります。最初の決定は、コンテンツがウィンドウサーフェスに直接レンダリングされるのか、オフスクリーンテクスチャにレンダリングされるのかです。デフォルトでは、&lt;a href=&quot;qml-qtquick3d-view3d&quot;&gt;View3D&lt;/a&gt;はオフスクリーンテクスチャにレンダリングされます。後処理効果を使用する場合、オフスクリーンテクスチャへのレンダリングは必須です。</target>
        </trans-unit>
        <trans-unit id="aaf1164e08eb381d06a4c7b1ba65690e06b06c68" translate="yes" xml:space="preserve">
          <source>The first step in the static approach is to pick one of the styles provided by Qt from which you will build your custom style. Your choice of &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; class will depend on which style resembles your desired style the most. The most general class that you can use as a base is &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; (not &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;). This is because Qt requires its styles to be &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;s.</source>
          <target state="translated">静的アプローチの最初のステップは、カスタムスタイルを構築するために、Qtが提供するスタイルの1つを選択することです。&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;クラスの選択は、希望するスタイルに最も似ているスタイルによって異なります。ベースとして使用できる最も一般的なクラスは&lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyleです&lt;/a&gt;（&lt;a href=&quot;qstyle&quot;&gt;QStyleで&lt;/a&gt;はありません）。これは、Qtのスタイルが&lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyleである&lt;/a&gt;必要があるためです。</target>
        </trans-unit>
        <trans-unit id="a9bb5308054d2b22284762efe45dc8a422c17fc6" translate="yes" xml:space="preserve">
          <source>The first step in the static approach is to pick one of the styles provided by Qt from which you will build your custom style. Your choice of QStyle class will depend on which style resembles your desired style the most. The most general class that you can use as a base is &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; (not QStyle). This is because Qt requires its styles to be &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;s.</source>
          <target state="translated">静的アプローチの最初のステップは、カスタムスタイルを構築するQtが提供するスタイルの1つを選択することです。QStyleクラスの選択は、どのスタイルが目的のスタイルに最も似ているかによって異なります。ベースとして使用できる最も一般的なクラスは&lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyleです&lt;/a&gt;（QStyleではありません）。これは、Qtのスタイルが&lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyleである&lt;/a&gt;必要があるためです。</target>
        </trans-unit>
        <trans-unit id="cdff64ae77e8d4a08c2c7fd9cc992a2725cc8fd0" translate="yes" xml:space="preserve">
          <source>The first step is to &lt;a href=&quot;http://doc.qt.io/qtcreator/quick-projects.html&quot;&gt;create a new Qt Quick Controls 2 application&lt;/a&gt; in Qt Creator. After that, we &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-project-creating.html#creating-c-classes&quot;&gt;add a C++ type&lt;/a&gt; that stores the elevation. Since the type will be used for every control supported by our style, and because we may wish to add other attached properties later on, we'll call it MyStyle. Here is &lt;code&gt;MyStyle.h&lt;/code&gt;:</source>
          <target state="translated">最初のステップは、Qt Creatorで&lt;a href=&quot;http://doc.qt.io/qtcreator/quick-projects.html&quot;&gt;新しいQt Quick Controls 2アプリケーション&lt;/a&gt;を作成することです。その後、標高を格納&lt;a href=&quot;http://doc.qt.io/qtcreator/creator-project-creating.html#creating-c-classes&quot;&gt;するC ++タイプ&lt;/a&gt;を追加します。このタイプは、スタイルでサポートされるすべてのコントロールに使用され、後で他の添付プロパティを追加したい場合があるため、MyStyleと呼びます。 &lt;code&gt;MyStyle.h&lt;/code&gt; は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4ec4fc1f6779894d37d97ca049f4fcadc9f52b7c" translate="yes" xml:space="preserve">
          <source>The first step is to &lt;a href=&quot;https://doc.qt.io/qtcreator/creator-project-creating.html#selecting-project-type&quot;&gt;create a new Qt Quick Controls application&lt;/a&gt; in Qt Creator. After that, we &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-project-creating.html#creating-c-classes&quot;&gt;add a C++ type&lt;/a&gt; that stores the elevation. Since the type will be used for every control supported by our style, and because we may wish to add other attached properties later on, we'll call it MyStyle. Here is &lt;code&gt;MyStyle.h&lt;/code&gt;:</source>
          <target state="translated">最初のステップは&lt;a href=&quot;https://doc.qt.io/qtcreator/creator-project-creating.html#selecting-project-type&quot;&gt;、QtCreatorで新しいQtQuickControlsアプリケーション&lt;/a&gt;を作成することです。その後、標高を格納&lt;a href=&quot;http://doc.qt.io/qtcreator/creator-project-creating.html#creating-c-classes&quot;&gt;するC ++タイプ&lt;/a&gt;を追加します。このタイプは、スタイルでサポートされているすべてのコントロールに使用され、後で他のアタッチされたプロパティを追加したい場合があるため、MyStyleと呼びます。これが &lt;code&gt;MyStyle.h&lt;/code&gt; です：</target>
        </trans-unit>
        <trans-unit id="e4f64faf0e07500065a210625385355a29130a51" translate="yes" xml:space="preserve">
          <source>The first step is to create a Qt Help Collection Project file. Since a Qt help collection stores primarily references to compressed help files, the project</source>
          <target state="translated">最初のステップは、Qtヘルプコレクションプロジェクトファイルを作成することです。Qt ヘルプコレクションは主に圧縮されたヘルプファイルへの参照を保存するので、プロジェクトの</target>
        </trans-unit>
        <trans-unit id="9efbec90cb81676c8d16c25bd92235031881a782" translate="yes" xml:space="preserve">
          <source>The first step is to enable dependency tracking in the library itself. To do this you must tell qmake to save information about the library:</source>
          <target state="translated">最初のステップは、ライブラリ自体で依存関係の追跡を有効にすることです。これを行うには、qmakeにライブラリの情報を保存するように指示しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f1e7b148b0ed34a75cfc8dd5a98a11810da4fbb2" translate="yes" xml:space="preserve">
          <source>The first step is to get a publisher account, if you do not already have one. Go to &lt;a href=&quot;https://play.google.com/apps/publish/&quot;&gt;the Google Play developer console&lt;/a&gt;, log in with the Google account of your choice, and follow the steps as directed.</source>
          <target state="translated">パブリッシャーアカウントをまだ持っていない場合は、最初にそのアカウントを取得します。行く&lt;a href=&quot;https://play.google.com/apps/publish/&quot;&gt;GoogleのPlayデベロッパーコンソール&lt;/a&gt;、お好みのGoogleアカウントにログインし、指示されたとおりの手順に従ってください。</target>
        </trans-unit>
        <trans-unit id="7825236b8f5dc60810c60e960e51d6a8ea36ea39" translate="yes" xml:space="preserve">
          <source>The first string in the list is the entire matched string. Each subsequent list element contains a string that matched a (capturing) subexpression of the regexp.</source>
          <target state="translated">リストの最初の文字列は、マッチした文字列全体です。それ以降の各リスト要素には、正規表現の(キャプチャーする)副表現にマッチした文字列が含まれます。</target>
        </trans-unit>
        <trans-unit id="c31beaafb102ab3d8430697fc50b72bd45871f68" translate="yes" xml:space="preserve">
          <source>The first thing that is done is to determine the global common state for all content. If the &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt; defines a &lt;a href=&quot;qml-qtquick3d-sceneenvironment#lightProbe-prop&quot;&gt;lightProbe&lt;/a&gt;, then it checks if the environment map associated with that light probe texture is loaded, and if its not, a new environment map is is loaded or generated. The generation of an environment will itself be a set of passes to convolve the source texture into a cube map. This cube map will contain both specular reflection information as well as irradiance, which is used for material shading.</source>
          <target state="translated">最初に行うことは、すべてのコンテンツのグローバル共通状態を判別することです。場合&lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironmentが&lt;/a&gt;定義されて&lt;a href=&quot;qml-qtquick3d-sceneenvironment#lightProbe-prop&quot;&gt;lightProbeを&lt;/a&gt;、それチェックはその光プローブテクスチャに関連した環境マップがロードされている場合は、そのは、新しい環境マップがロードまたは生成されていない場合。環境の生成自体は、ソーステクスチャをキューブマップに畳み込むための一連のパスになります。このキューブマップには、鏡面反射情報と、マテリアルシェーディングに使用される放射照度の両方が含まれます。</target>
        </trans-unit>
        <trans-unit id="e21b10440a61a3512646f36ce0c125f59b9ca46c" translate="yes" xml:space="preserve">
          <source>The first thing we did in the &lt;code&gt;main()&lt;/code&gt; function was to create a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;main()&lt;/code&gt; 関数で最初に行ったのは、&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;オブジェクト &lt;code&gt;app&lt;/code&gt; を作成することでした。</target>
        </trans-unit>
        <trans-unit id="9a998c1523d70f0673dcdd599bc0f4bba42ae5cc" translate="yes" xml:space="preserve">
          <source>The first thing you need to do is resize your image to be</source>
          <target state="translated">最初にやるべきことは、画像のサイズを</target>
        </trans-unit>
        <trans-unit id="8917ebbca80bb52a7bc56c7c30d909a8b09cb1e3" translate="yes" xml:space="preserve">
          <source>The first time your App makes a request to the sandbox App Store it will request that you login. This is where you should log in using your iTunes test user credentials.</source>
          <target state="translated">アプリが初めてサンドボックスのApp Storeにリクエストを行うと、ログインを要求されます。ここでは、iTunesのテストユーザー資格情報を使用してログインする必要があります。</target>
        </trans-unit>
        <trans-unit id="6bff8abd6ed0b61faa4762e2d8b736b2194e8af4" translate="yes" xml:space="preserve">
          <source>The first two patterns can be combined, e.g. to initialize a licensed control on a remote machine:</source>
          <target state="translated">最初の2つのパターンは、例えば、リモートマシン上のライセンス制御を初期化するために組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="417332cc781ae22cffabb141f5ad3e9739a19294" translate="yes" xml:space="preserve">
          <source>The first user-defined button (see also &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;)</source>
          <target state="translated">最初のユーザー定義ボタン（&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;も参照）</target>
        </trans-unit>
        <trans-unit id="b60cbdccec816968a84bb08ff6632b10a2a49169" translate="yes" xml:space="preserve">
          <source>The first value to be used for user defined roles.</source>
          <target state="translated">ユーザー定義のロールに使用される最初の値。</target>
        </trans-unit>
        <trans-unit id="bbf026464b8d91b2d86d99ea68ba8ddf926a2ae2" translate="yes" xml:space="preserve">
          <source>The first value to be used for user defined text.</source>
          <target state="translated">ユーザー定義テキストに使用される最初の値。</target>
        </trans-unit>
        <trans-unit id="8d661c05ceb119fc38d8215136ad225f194df723" translate="yes" xml:space="preserve">
          <source>The first way to create this button is to simply define it in-place, wherever it is needed. For example, perhaps you're not satisfied with the Basic style's Button having square corners. To make them rounded, you can override the &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt; item and set the radius property of Rectangle:</source>
          <target state="translated">このボタンを作成する最初の方法は、必要な場所にボタンを配置することです。たとえば、基本スタイルのボタンの角が四角いことに満足していない可能性があります。それらを丸くするには、&lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;背景&lt;/a&gt;アイテムをオーバーライドして、Rectangleのradiusプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="beb32503a36ed7cc11abcaa27758c62d0bb76d97" translate="yes" xml:space="preserve">
          <source>The first way to create this button is to simply define it in-place, wherever it is needed. For example, perhaps you're not satisfied with the default style's Button having square corners. To make them rounded, you can override the &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt; item and set the radius property of Rectangle:</source>
          <target state="translated">このボタンを作成する最初の方法は、必要な場所にボタンを配置するだけです。たとえば、デフォルトのスタイルの角が四角いボタンに満足できない場合があります。それらを丸めるには、&lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;背景&lt;/a&gt;アイテムをオーバーライドして、Rectangleのradiusプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="2c2859f522986b5acef90493dc4c1090c845fcf5" translate="yes" xml:space="preserve">
          <source>The five items are: An element, an atomic value (binary data encoded in base64), a date, a float, and an attribute.</source>
          <target state="translated">5つの項目があります。要素、原子値(base64でエンコードされたバイナリデータ)、日付、float、属性です。</target>
        </trans-unit>
        <trans-unit id="55cce75df9a3b5d75ec83ef8b5823d7a5bbda191" translate="yes" xml:space="preserve">
          <source>The fixed font that the system recommends.</source>
          <target state="translated">システムが推奨する固定フォント。</target>
        </trans-unit>
        <trans-unit id="d984be12bfdd01f44473291871cdf14d70fc058b" translate="yes" xml:space="preserve">
          <source>The flags &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::OwnsMaterial&lt;/a&gt;, &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::OwnsOpaqueMaterial&lt;/a&gt; and &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::OwnsGeometry&lt;/a&gt; decides whether the geometry node should also delete the materials and geometry. By default, these flags are disabled.</source>
          <target state="translated">フラグ&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: OwnsMaterial&lt;/a&gt;、&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: OwnsOpaqueMaterial&lt;/a&gt;および&lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: OwnsGeometry&lt;/a&gt;は、ジオメトリノードがマテリアルとジオメトリも削除するかどうかを決定します。デフォルトでは、これらのフラグは無効になっています。</target>
        </trans-unit>
        <trans-unit id="f3772a53e01002aae29af5447eae983210a5dee6" translate="yes" xml:space="preserve">
          <source>The flags which you read from this property might differ from the ones that you set if the requested flags could not be fulfilled.</source>
          <target state="translated">このプロパティから読み取るフラグは、要求されたフラグを満たすことができなかった場合に設定したものとは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="47bf85ea95dc3b63185292fe358ac44c0a28cb60" translate="yes" xml:space="preserve">
          <source>The flash time is the time required to display, invert and restore the caret display. Usually the text cursor is displayed for half the cursor flash time, then hidden for the same amount of time, but this may vary.</source>
          <target state="translated">フラッシュ時間は、カレット表示の表示、反転、復元に必要な時間です。通常、テキストカーソルはカーソルのフラッシュ時間の半分の時間表示され、その後同じ時間非表示になりますが、これは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="8152bcd56aa40699db99a9b9f7fbdd63aec639c5" translate="yes" xml:space="preserve">
          <source>The flash time is the time used to display, invert and restore the caret display. Usually the text cursor is displayed for half the cursor flash time, then hidden for the same amount of time.</source>
          <target state="translated">フラッシュ時間は、カレット表示の表示、反転、復元に使用する時間です。通常、テキストカーソルはカーソルのフラッシュ時間の半分の時間表示され、その後同じ時間非表示になります。</target>
        </trans-unit>
        <trans-unit id="fa0520b97cc20fb4d7335b156d5ac20a35cbe413" translate="yes" xml:space="preserve">
          <source>The flat color material respects both current opacity and current matrix when updating its rendering state.</source>
          <target state="translated">フラットカラーマテリアルは、レンダリング状態を更新する際に、現在の不透明度と現在のマトリックスの両方を尊重します。</target>
        </trans-unit>
        <trans-unit id="17859886cb72234304b86345a4ad57a54e51a4af" translate="yes" xml:space="preserve">
          <source>The flat color material will fill every pixel in a geometry using a solid color. The color can contain transparency.</source>
          <target state="translated">フラットカラーマテリアルは、ソリッドカラーを使用してジオメトリ内のすべてのピクセルを塗りつぶします。この色には透明度を含めることができます。</target>
        </trans-unit>
        <trans-unit id="f57aa301a17bbfee15f06f62bd05b191517d07fe" translate="yes" xml:space="preserve">
          <source>The flickableItem of the &lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt;. If the &lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; provided to the &lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt; is a Flickable, it will be the &lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;.</source>
          <target state="translated">ScrollViewの&lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;flickableItem&lt;/a&gt;。&lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollViewに&lt;/a&gt;提供された&lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;がFlickableの場合、それは&lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItemになり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2671c63d751427e872a0de801f69312f39694fa5" translate="yes" xml:space="preserve">
          <source>The float button of a &lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;のフロートボタン</target>
        </trans-unit>
        <trans-unit id="feb41fdec4ade060ec1f3a669c81ddc694e04b15" translate="yes" xml:space="preserve">
          <source>The float button of a dock widget.</source>
          <target state="translated">ドックウィジェットのフロートボタン。</target>
        </trans-unit>
        <trans-unit id="5d1d3e099fd263a27d8e71f89eb2b6bcf4fe1507" translate="yes" xml:space="preserve">
          <source>The floor level for the bar graph in Y-axis data coordinates.</source>
          <target state="translated">Y 軸データ座標での棒グラフのフロアレベル。</target>
        </trans-unit>
        <trans-unit id="e71e8194104f15a6cfccebde32e9fbe2dbc5bec9" translate="yes" xml:space="preserve">
          <source>The floppy icon.</source>
          <target state="translated">フロッピーのアイコン。</target>
        </trans-unit>
        <trans-unit id="dfc4524042b6f212135b13e7dd79a29ed55e46fd" translate="yes" xml:space="preserve">
          <source>The focus can be accessed using the context item expression, i.e., dot (&quot;.&quot;).</source>
          <target state="translated">フォーカスは、コンテキスト項目式、すなわちドット(...)を使用してアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="d502baf7b647caed0505ecaf3877ff7bfc9d1a50" translate="yes" xml:space="preserve">
          <source>The focus frame will not monitor</source>
          <target state="translated">フォーカスフレームはモニターしません。</target>
        </trans-unit>
        <trans-unit id="1744e06d7eea968c5f0c8d41f5e60d8a13103723" translate="yes" xml:space="preserve">
          <source>The focus item receives keyboard input when the scene receives a key event.</source>
          <target state="translated">シーンがキーイベントを受信すると、フォーカスアイテムはキーボード入力を受けます。</target>
        </trans-unit>
        <trans-unit id="e52ac6cd4cdba0b1514162e619cbcf5bdd502124" translate="yes" xml:space="preserve">
          <source>The focus point of the distortion. &lt;code&gt;Qt.vector2d(0.5, 0.5)&lt;/code&gt; (i.e. the center of the scene) by default.</source>
          <target state="translated">歪みの焦点。 &lt;code&gt;Qt.vector2d(0.5, 0.5)&lt;/code&gt; （つまりシーンの中心）。</target>
        </trans-unit>
        <trans-unit id="dd039b61be661acaed89e4e28b69258ecd40cb7a" translate="yes" xml:space="preserve">
          <source>The focus policy is &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::TabFocus&lt;/a&gt; if the widget accepts keyboard focus by tabbing, &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::ClickFocus&lt;/a&gt; if the widget accepts focus by clicking, &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::StrongFocus&lt;/a&gt; if it accepts both, and &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::NoFocus&lt;/a&gt; (the default) if it does not accept focus at all.</source>
          <target state="translated">フォーカスポリシーがある&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qtの:: TabFocus&lt;/a&gt;ウィジェットは、タブ移動によってキーボードフォーカスを受け入れる場合&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;はQtの:: ClickFocusを&lt;/a&gt;ウィジェットがクリックによってフォーカスを受け入れる場合&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;はQt :: StrongFocus&lt;/a&gt;それは両方を受け入れた場合、および&lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qtの:: NoFocus&lt;/a&gt;それがない場合（デフォルト）フォーカスをまったく受け入れません。</target>
        </trans-unit>
        <trans-unit id="96054cc7b4f834d567d7bffd6281301827dab790" translate="yes" xml:space="preserve">
          <source>The focus proxy</source>
          <target state="translated">フォーカスプロキシ</target>
        </trans-unit>
        <trans-unit id="17c41709a0148ba07a5c410d3f18cf7b90169c74" translate="yes" xml:space="preserve">
          <source>The focus widget is not affected, except that it doesn't receive any keyboard events. &lt;a href=&quot;qwidget#setFocus-1&quot;&gt;setFocus&lt;/a&gt;() moves the focus as usual, but the new focus widget receives keyboard events only after &lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt;() is called.</source>
          <target state="translated">フォーカスウィジェットは、キーボードイベントを受け取らないことを除いて、影響を受けません。&lt;a href=&quot;qwidget#setFocus-1&quot;&gt;setFocus&lt;/a&gt;（）は通常どおりフォーカスを移動しますが、新しいフォーカスウィジェットは&lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt;（）が呼び出された後にのみキーボードイベントを受け取ります。</target>
        </trans-unit>
        <trans-unit id="accfeb65f15ff2b63fec7c8d9d461603c0e321a5" translate="yes" xml:space="preserve">
          <source>The follow example shows one &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; tracking the position of another using &lt;a href=&quot;qml-qtquick-smoothedanimation&quot;&gt;SmoothedAnimation&lt;/a&gt;. The green rectangle's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values are bound to those of the red rectangle. Whenever these values change, the green rectangle smoothly animates to its new position:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qml-qtquick-smoothedanimation&quot;&gt;SmoothedAnimation&lt;/a&gt;を使用して別の&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;の位置を追跡することを示しています。緑の長方形の &lt;code&gt;x&lt;/code&gt; 値と &lt;code&gt;y&lt;/code&gt; 値は、赤い長方形の値にバインドされています。これらの値が変わると、緑の長方形がスムーズに新しい位置にアニメーション化されます。</target>
        </trans-unit>
        <trans-unit id="58b7c65f8e7bbee1e3682547508d15b36ac7831e" translate="yes" xml:space="preserve">
          <source>The follow example shows one &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; tracking the position of another using SmoothedAnimation. The green rectangle's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values are bound to those of the red rectangle. Whenever these values change, the green rectangle smoothly animates to its new position:</source>
          <target state="translated">次の例は、SmoothedAnimationを使用して別の&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;長方形&lt;/a&gt;の位置を追跡する1つの長方形を示しています。緑の長方形の &lt;code&gt;x&lt;/code&gt; 値と &lt;code&gt;y&lt;/code&gt; 値は、赤の長方形の値にバインドされています。これらの値が変更されるたびに、緑色の長方形は新しい位置にスムーズにアニメーション化されます。</target>
        </trans-unit>
        <trans-unit id="90cbd9d9e7aca525d66ea82f95cfcc77308c0447" translate="yes" xml:space="preserve">
          <source>The following .sci file sets the borders to 10 on each side for the image &lt;code&gt;picture.png&lt;/code&gt;:</source>
          <target state="translated">以下の.sciファイルは、画像のための各側10に境界を設定し &lt;code&gt;picture.png&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fe5c80fee24ced10f78c2411b6a8388fa8c2ef6" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block&quot;&gt;Greasemonkey&lt;/a&gt; attributes are supported since Qt 5.8: &lt;code&gt;@exclude&lt;/code&gt;, &lt;code&gt;@include&lt;/code&gt;, &lt;code&gt;@name&lt;/code&gt;, &lt;code&gt;@match&lt;/code&gt;, and &lt;code&gt;@run-at&lt;/code&gt;.</source>
          <target state="translated">次&lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block&quot;&gt;のGreasemonkey&lt;/a&gt;の属性がサポートされて以来のQt 5.8： &lt;code&gt;@exclude&lt;/code&gt; 、 &lt;code&gt;@include&lt;/code&gt; 、 &lt;code&gt;@name&lt;/code&gt; 、 &lt;code&gt;@match&lt;/code&gt; 、および &lt;code&gt;@run-at&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39ca8ca07faf37addbefba72eaca164404821b54" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block#&quot;&gt;Greasemonkey&lt;/a&gt; attributes are supported since Qt 5.8: &lt;code&gt;@exclude&lt;/code&gt;, &lt;code&gt;@include&lt;/code&gt;, &lt;code&gt;@name&lt;/code&gt;, &lt;code&gt;@match&lt;/code&gt;, and &lt;code&gt;@run-at&lt;/code&gt;.</source>
          <target state="translated">次&lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block#&quot;&gt;のGreasemonkey&lt;/a&gt;の属性がサポートされて以来のQt 5.8： &lt;code&gt;@exclude&lt;/code&gt; 、 &lt;code&gt;@include&lt;/code&gt; 、 &lt;code&gt;@name&lt;/code&gt; 、 &lt;code&gt;@match&lt;/code&gt; 、および &lt;code&gt;@run-at&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="226b4d6234a638ae67e26b517c4b33f436ab9dde" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; moves to the position of the mouse using a &lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation&lt;/a&gt; when the mouse is clicked. The use of the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; on the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values indicates that whenever these values are changed, a &lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation&lt;/a&gt; should be applied.</source>
          <target state="translated">次の&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;長方形&lt;/a&gt;は、マウスをクリックすると、&lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation&lt;/a&gt;を使用してマウスの位置に移動します。 &lt;code&gt;x&lt;/code&gt; 値と &lt;code&gt;y&lt;/code&gt; 値で&lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt;を使用すると、これらの値が変更されるたびに、&lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation&lt;/a&gt;を適用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2301020875ce4aaef4b5b257b03d007c896993a6" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; moves to the position of the mouse using a SpringAnimation when the mouse is clicked. The use of the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; on the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values indicates that whenever these values are changed, a SpringAnimation should be applied.</source>
          <target state="translated">次の&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;長方形&lt;/a&gt;は、マウスがクリックされると、SpringAnimationを使用してマウスの位置に移動します。使用&lt;a href=&quot;qml-qtquick-behavior&quot;&gt;行動&lt;/a&gt;に &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; の値は、これらの値が変更されるたびに、SpringAnimationが適用されるべきであることを示しています。</target>
        </trans-unit>
        <trans-unit id="4c2a1bd1143e4365535d3d1a1c8ea1c39db5b2eb" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;CONFIG&lt;/code&gt; values control compilation flags:</source>
          <target state="translated">次の &lt;code&gt;CONFIG&lt;/code&gt; 値は、コンパイルフラグを制御します。</target>
        </trans-unit>
        <trans-unit id="907294b71f1dc063a4dcdb52cb0c1344d3187db3" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;CONFIG&lt;/code&gt; values control compiler and linker flags:</source>
          <target state="translated">次の &lt;code&gt;CONFIG&lt;/code&gt; 値は、コンパイラとリンカのフラグを制御します。</target>
        </trans-unit>
        <trans-unit id="bfb167ffc07db24362b3fcb91fd91ba1c08cc046" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;Message&lt;/code&gt; class definition includes these members:</source>
          <target state="translated">次の &lt;code&gt;Message&lt;/code&gt; クラスの定義には、これらのメンバーが含まれています。</target>
        </trans-unit>
        <trans-unit id="7e46e1884f1abd31589841203bc4af1226a78f31" translate="yes" xml:space="preserve">
          <source>The following C++ modules are in still development but are available as technology previews:</source>
          <target state="translated">以下のC++モジュールはまだ開発中ですが、技術プレビューとして公開されています。</target>
        </trans-unit>
        <trans-unit id="54cf010fc5db732daad8c168f9a04830bfcba89b" translate="yes" xml:space="preserve">
          <source>The following Modbus function codes are filtered out as they are serial line only according to the Modbus Application Protocol Specification 1.1b:</source>
          <target state="translated">以下のModbusファンクションコードはModbusアプリケーションプロトコル仕様書1.1bに従ってシリアルラインのみであるためフィルタリングされます。</target>
        </trans-unit>
        <trans-unit id="a1c838cccc27d2e05c82587f7b209c595a6f17c2" translate="yes" xml:space="preserve">
          <source>The following QML can produce either of the two illustrated arcs below by changing the value of direction.</source>
          <target state="translated">以下の QML は、方向の値を変更することで、下図のような円弧を生成することができます。</target>
        </trans-unit>
        <trans-unit id="062d0f2082dfb39129bac1904d8676f6a1559866" translate="yes" xml:space="preserve">
          <source>The following QML code creates a &quot;shake&quot; and &quot;SecondCounter&quot; &lt;a href=&quot;qml-qtsensors-sensorgesture&quot;&gt;SensorGesture&lt;/a&gt; QML type, and displays the detected gesture in a text type.</source>
          <target state="translated">次のQMLコードは、「shake」および「SecondCounter」&lt;a href=&quot;qml-qtsensors-sensorgesture&quot;&gt;SensorGesture&lt;/a&gt; QMLタイプを作成し、検出されたジェスチャーをテキストタイプで表示します。</target>
        </trans-unit>
        <trans-unit id="a9e6d67c42236eb350325fd59cc3fa5be6623ed1" translate="yes" xml:space="preserve">
          <source>The following QML code creates a &quot;shake&quot; and &quot;SecondCounter&quot; SensorGesture QML type, and displays the detected gesture in a text type.</source>
          <target state="translated">以下のQMLコードは、&quot;shake &quot;と &quot;SecondCounter &quot;のSensorGestureのQML型を作成し、検出したジェスチャーをテキスト型で表示する。</target>
        </trans-unit>
        <trans-unit id="83a83e5752f88aecf92b362e09b71568611a179e" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a chart with two simple scatter series:</source>
          <target state="translated">以下のQMLコードは、2つの単純な散布系列でチャートを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="95e7c58385f56c5b8a06e4cc371983b417548d19" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a polar chart with a spline and scatter series and two value axes:</source>
          <target state="translated">以下のQMLコードは、スプライン系列と散布系列を持ち、2つの値軸を持つポーラチャートを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="5e831363910ede32ba38a9d62cd854e37e4740f1" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a simple chart with one pie series:</source>
          <target state="translated">以下のQMLコードは、1つのパイシリーズを用いたシンプルなチャートを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="fb9808564bf50c6b584aeae38488933cea0bc18e" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a simple spline chart:</source>
          <target state="translated">以下のQMLコードは、単純なスプライン図の作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2ed13ccb6eb26d51de3072449c842bfb232e9edc" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a bar series with three bar sets (assuming the model has at least four columns). Each bar set contains data starting from row 1. The name of a bar set is defined by the column header.</source>
          <target state="translated">以下のQMLコードスニペットは、3つのバーセットを持つバーシリーズを作成します(モデルが少なくとも4つの列を持つと仮定しています)。各バーセットには、1行目から始まるデータが含まれています。 バーセットの名前は、カラムヘッダで定義されています。</target>
        </trans-unit>
        <trans-unit id="17094c8324539da05fa1dc42ab8fe6ca1efd6279" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a bar series with three bar sets (assuming the model has at least four rows). Each bar set contains data starting from column 1. The name of a bar set is defined by the row header.</source>
          <target state="translated">以下のQMLコードスニペットは、3つの棒グラフを持つ棒グラフシリーズを作成します(モデルが少なくとも4つの行を持つと仮定しています)。各バーセットには、1列目から始まるデータが含まれています。棒グラフの名前は、行ヘッダによって定義されます。</target>
        </trans-unit>
        <trans-unit id="417fa70588c9f7d6844efbf5dd80ae8a8a2e9589" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a box plot series with three box-and-whiskers items (assuming the model has at least four columns). Each box-and-whiskers item contains data starting from row 1. The name of an item is defined by the column header.</source>
          <target state="translated">以下のQMLコードスニペットは、3つのボックス&amp;ウィスカを持つボックスプロット系列を作成します(モデルが少なくとも4つの列を持つと仮定しています)。各ボックス&amp;ウィスカ項目には、1 行目から始まるデータが含まれています。 項目の名前は、列のヘッダによって定義されます。</target>
        </trans-unit>
        <trans-unit id="6024a2c9c1f82fa990008c6b070e49e546c9c9bc" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a box plot series with three box-and-whiskers items (assuming the model has at least four rows). Each box-and-whiskers item contains data starting from column 1. The name of an item is defined by the row header.</source>
          <target state="translated">以下のQMLコードスニペットは、3つのボックス&amp;ウィスカ項目を持つボックスプロット系列を作成します(モデルが4行以上あると仮定しています)。各ボックス&amp;ウィスカ項目には、1列目から始まるデータが含まれています。項目の名前は行ヘッダで定義されます。</target>
        </trans-unit>
        <trans-unit id="a3a2702c83e0f57e9060e89df4f1257a9c094203" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple box-and-whiskers chart:</source>
          <target state="translated">以下のQMLコードスニペットは、簡単な箱ひげ図の作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3844b89d232cf9b21d4f673f578deb93ee5c6470" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple grouped bar chart:</source>
          <target state="translated">以下のQMLコードスニペットは、シンプルなグループ化された棒グラフの作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3392aa0bb40844d525ece6431a8a269d8eaf3fad" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple horizontal bar chart:</source>
          <target state="translated">以下のQMLコードスニペットは、簡単な横棒グラフの作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c2d9ec565a943b0ce041cc51caab1860714d6698" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple horizontal percent bar chart:</source>
          <target state="translated">以下のQMLコードスニペットは、単純な水平方向のパーセント棒グラフを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c774990bc3b704a7db9ea8f4a8f11a3d9fce5114" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple horizontal stacked bar chart:</source>
          <target state="translated">以下のQMLコードスニペットは、単純な水平積み上げ棒グラフの作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="0a712af6b855c745f5b65cd238618691134c4d74" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple percent bar chart:</source>
          <target state="translated">以下のQMLコードスニペットは、単純なパーセント棒グラフの作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="21a596b692cc687c74054e1ae0c272a4a225abf1" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to use the &lt;a href=&quot;qml-qtcharts-barseries&quot;&gt;BarSeries&lt;/a&gt; and &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt; type to create a simple bar chart:</source>
          <target state="translated">次のQMLコードスニペットは、&lt;a href=&quot;qml-qtcharts-barseries&quot;&gt;BarSeries&lt;/a&gt;および&lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt;タイプを使用して単純な棒グラフを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="0d953364b6323e5628960ee406f0c07ea0990705" translate="yes" xml:space="preserve">
          <source>The following QML demonstrates how different radius values can be used to change the shape of the arc:</source>
          <target state="translated">以下の QML は、異なる半径の値を用いて円弧の形状を変更する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="1c28c443ea12f98af7e5a036c07b16d2c3f80cd3" translate="yes" xml:space="preserve">
          <source>The following QML example creates a candlestick series with three candlestick items (assuming the model has at least four columns). Each candlestick item contains data defined by the timestamp, open, high, low, and close rows. The name of an item is defined by the horizontal header of the column.</source>
          <target state="translated">以下の QML の例では、3 つのローソク足項目を持つローソク足系列を作成しています(モデルが少なくとも 4 つの列を持つと仮定しています)。各ローソク足項目には、タイムスタンプ、オープン、ハイ、ロー、クローズの各行で定義されたデータが含まれています。項目の名前は、列の水平ヘッダで定義されます。</target>
        </trans-unit>
        <trans-unit id="4fcf5a4813ab23b413bd1b2bd2094094988a70ea" translate="yes" xml:space="preserve">
          <source>The following QML example creates a candlestick series with three candlestick items (assuming the model has at least four rows). Each candlestick item contains data defined by the timestamp, open, high, low, and close columns. The name of an item is defined by the vertical header of the row.</source>
          <target state="translated">以下の QML の例では、3 つのローソク足項目を持つローソク足系列を作成しています(モデルが少なくとも 4 行あると仮定しています)。各ローソク足項目には、タイムスタンプ、オープン、ハイ、ロー、クローズの各列で定義されたデータが含まれています。項目の名前は、行の垂直ヘッダで定義されます。</target>
        </trans-unit>
        <trans-unit id="c82486bf68e6a5c936f42cf926aeaa77f7b7cbb7" translate="yes" xml:space="preserve">
          <source>The following QML example creates a pie series with four slices (assuming the model has at least five columns). Each slice gets a label from row 1 and a value from row 2.</source>
          <target state="translated">以下の QML の例では、4 つのスライスを持つパイシリーズを作成しています(モデルは少なくとも 5 列以上の列を持つと仮定しています)。各スライスは、1行目からラベルを、2行目から値を取得します。</target>
        </trans-unit>
        <trans-unit id="0141836a92ba9bea9ff2dc0d93898a0abcf688c2" translate="yes" xml:space="preserve">
          <source>The following QML example creates a pie series with four slices (assuming the model has at least five rows). Each slice gets a label from column 1 and a value from column 2.</source>
          <target state="translated">以下の QML の例では、4 つのスライスを持つパイシリーズを作成しています(モデルは少なくとも 5 行以上の行を持つと仮定しています)。各スライスは、1列目からラベルを、2列目から値を取得します。</target>
        </trans-unit>
        <trans-unit id="039fa9b418ca6fc7d163144f9131a7b77846e8bd" translate="yes" xml:space="preserve">
          <source>The following QML example shows how to create a simple line chart:</source>
          <target state="translated">以下のQMLの例は、簡単な折れ線グラフの作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="1ce666050ef41e00442d3317324a5f7f64e6bd98" translate="yes" xml:space="preserve">
          <source>The following QML example shows how to create a simple pie chart.</source>
          <target state="translated">以下のQMLの例は、簡単な円グラフの作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="ab8d6591bbd42c9ccf14fd748c4dee3914e66090" translate="yes" xml:space="preserve">
          <source>The following QML modules are in still development but are available as technology previews:</source>
          <target state="translated">以下のQMLモジュールはまだ開発中ですが、技術プレビューとして公開されています。</target>
        </trans-unit>
        <trans-unit id="1592f6b32c8cf11ffaf8cdc8198f782f5189d61f" translate="yes" xml:space="preserve">
          <source>The following QML produces the path shown below:</source>
          <target state="translated">以下のQMLは、以下のようなパスを生成します。</target>
        </trans-unit>
        <trans-unit id="a40c08ad8491821cff38b05e14df666683daa396" translate="yes" xml:space="preserve">
          <source>The following QML shows how to create a simple area chart:</source>
          <target state="translated">以下のQMLでは、簡単なエリアチャートの作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="1b7f676e4c6e06f6b9d30c4431507ee0553537ad" translate="yes" xml:space="preserve">
          <source>The following QML shows how to create a simple candlestick chart:</source>
          <target state="translated">以下のQMLでは、簡単なローソク足チャートの作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="9d7ff299fd6b1bdc2e4e813aa66fbea589ad7f77" translate="yes" xml:space="preserve">
          <source>The following QML shows how to create a simple stacked bar chart:</source>
          <target state="translated">以下のQMLは、単純な積み上げ棒グラフの作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="9ac28a4e87c773bb66d36d757c1b09da2dad6e98" translate="yes" xml:space="preserve">
          <source>The following QML shows how to display an animated image and obtain information about its state, such as the current frame and total number of frames. The result is an animated image with a simple progress indicator underneath it.</source>
          <target state="translated">以下の QML は、アニメーション画像を表示し、現在のフレーム数や総フレーム数などの情報を取得する方法を示しています。結果として、アニメーション画像の下に簡単な進行状況を表示することができます。</target>
        </trans-unit>
        <trans-unit id="cb004f44d7b08ae9ba136bb41589c7a29bd0e0c2" translate="yes" xml:space="preserve">
          <source>The following QML snippet demonstrates how to print information about a route maneuver:</source>
          <target state="translated">以下の QML スニペットは、ルートマヌーバの情報を印刷する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="cc03741f4e4a3621db304a4fd95c8baec5f8b583" translate="yes" xml:space="preserve">
          <source>The following QML snippet demonstrates how to print information about a route segment:</source>
          <target state="translated">以下の QML スニペットは、ルートセグメントの情報を印刷する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="7f81948a6ed552d952cc06f068e9e0a7321e3bb8" translate="yes" xml:space="preserve">
          <source>The following QML snippet illustrates how to use &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt;:</source>
          <target state="translated">次のQMLスニペットは、&lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxisの&lt;/a&gt;使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="ff1b27cdb6094c440f72fb9b459715c4e7e1d58b" translate="yes" xml:space="preserve">
          <source>The following QML snippet illustrates how to use BarCategoryAxis:</source>
          <target state="translated">以下のQMLスニペットは、BarCategoryAxisの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="779c30ae404503796a26b6ecc6120c4bff3a4441" translate="yes" xml:space="preserve">
          <source>The following Repeater creates three instances of a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; item within a &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt;:</source>
          <target state="translated">次のRepeaterは、&lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt;内に&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;アイテムの3つのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="f6ae8fb03d7bb70d42d4a956620dd88727042a32" translate="yes" xml:space="preserve">
          <source>The following Windows configurations are supported in Qt 6.0:</source>
          <target state="translated">Qt 6.0では、以下のWindowsの設定がサポートされています。</target>
        </trans-unit>
        <trans-unit id="bf9ed96ba0bd26eef7655c16b0fa04124a3e9ae5" translate="yes" xml:space="preserve">
          <source>The following YouTube video gives a complete walk-through of the installation process:</source>
          <target state="translated">次のYouTubeビデオは、インストールプロセスの完全なウォークスルーを提供しています。</target>
        </trans-unit>
        <trans-unit id="fa03151bcbf9dcd54600161f47b97c238d37545c" translate="yes" xml:space="preserve">
          <source>The following abridged code snippet shows the basic use of the class to write formatted XML with indentation:</source>
          <target state="translated">以下の簡略化されたコードスニペットは、インデントでフォーマットされたXMLを書くためのクラスの基本的な使い方を示しています。</target>
        </trans-unit>
        <trans-unit id="9589dd5200c84a5b85ad295a701be92c1e2eeaba" translate="yes" xml:space="preserve">
          <source>The following animation runs two number animations in parallel. The &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; moves to (50,50) by animating its &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; properties at the same time.</source>
          <target state="translated">次のアニメーションは、2つの数値アニメーションを並行して実行します。&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;矩形は&lt;/a&gt;、そのアニメーションによって（50,50）へ移動し &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; が同時に特性を。</target>
        </trans-unit>
        <trans-unit id="ef337fd25abaeb8301fc879090c517d3e313de83" translate="yes" xml:space="preserve">
          <source>The following application creates a &lt;code&gt;DataObject&lt;/code&gt; class with &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; values that will be accessible as named roles when a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;DataObject*&amp;gt; is exposed to QML:</source>
          <target state="translated">次のアプリケーションは、&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;Da​​taObject *&amp;gt;がQMLに公開されたときに名前付きロールとしてアクセスできる&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;値を持つ &lt;code&gt;DataObject&lt;/code&gt; クラスを作成します。</target>
        </trans-unit>
        <trans-unit id="7fd186ecaaa322c35ea9b054d141d78130c3b9b7" translate="yes" xml:space="preserve">
          <source>The following are examples of custom MIME types:</source>
          <target state="translated">以下にカスタム MIME タイプの例を示します。</target>
        </trans-unit>
        <trans-unit id="d25a40c0218f9c333e6fe8d21f3ff959463dfc6b" translate="yes" xml:space="preserve">
          <source>The following are functionally equivalent:</source>
          <target state="translated">機能的には以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7168187697701fdcafd838531fa103fcad3f7d8b" translate="yes" xml:space="preserve">
          <source>The following are lists of the classes and UI components provided by the module, with example applications to demonstrate their usage:</source>
          <target state="translated">以下に、モジュールが提供するクラスと UI コンポーネントのリストを、その使用法を示すアプリケーション例とともに示します。</target>
        </trans-unit>
        <trans-unit id="de2a21093fd5424e8dc980220af8fc7e282b250f" translate="yes" xml:space="preserve">
          <source>The following are standard keys that are defined by the API. &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; implementations are free to define additional keys. Custom keys should be qualified by a unique prefix to avoid clashes.</source>
          <target state="translated">以下は、APIによって定義される標準キーです。&lt;a href=&quot;location-places-qml#plugin&quot;&gt;プラグイン&lt;/a&gt;実装は、追加のキーを自由に定義できます。カスタムキーは、衝突を避けるために一意のプレフィックスで修飾する必要があります。</target>
        </trans-unit>
        <trans-unit id="471e1c2baad85d69bd0069a2f15efaad2d812024" translate="yes" xml:space="preserve">
          <source>The following are the different encoding methods used:</source>
          <target state="translated">使用されているエンコード方法の違いは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="2cf6534505291b367e5d49e37d7ac0c3f9434b98" translate="yes" xml:space="preserve">
          <source>The following assumes InterBase or Firebird is installed in &lt;code&gt;/opt/interbase&lt;/code&gt;:</source>
          <target state="translated">以下は、InterBaseまたはFirebirdが &lt;code&gt;/opt/interbase&lt;/code&gt; にインストールされていることを前提としています。</target>
        </trans-unit>
        <trans-unit id="c4c81ccbf930ca9c4172a9c65c63e9349b9c22c9" translate="yes" xml:space="preserve">
          <source>The following assumes InterBase or Firebird is installed in &lt;code&gt;C:\interbase&lt;/code&gt;:</source>
          <target state="translated">以下は、InterBaseまたはFirebirdが &lt;code&gt;C:\interbase&lt;/code&gt; インストールされていることを前提としています。</target>
        </trans-unit>
        <trans-unit id="7036ac29bf0c41e961d9de06a94d257324ab3dd7" translate="yes" xml:space="preserve">
          <source>The following attribute is supported by the &lt;code&gt;ol&lt;/code&gt; and &lt;code&gt;ul&lt;/code&gt; tags:</source>
          <target state="translated">次の属性は、 &lt;code&gt;ol&lt;/code&gt; タグと &lt;code&gt;ul&lt;/code&gt; タグでサポートされています。</target>
        </trans-unit>
        <trans-unit id="7963a27dd2c2f52f5987c821d3f0e0cc96c3f4f8" translate="yes" xml:space="preserve">
          <source>The following attributes are supported by the &lt;code&gt;div&lt;/code&gt;, &lt;code&gt;dl&lt;/code&gt;, &lt;code&gt;dt&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h2&lt;/code&gt;, &lt;code&gt;h3&lt;/code&gt;, &lt;code&gt;h4&lt;/code&gt;, &lt;code&gt;h5&lt;/code&gt;, &lt;code&gt;h6&lt;/code&gt;, &lt;code&gt;p&lt;/code&gt; tags:</source>
          <target state="translated">次の属性は、 &lt;code&gt;div&lt;/code&gt; 、 &lt;code&gt;dl&lt;/code&gt; 、 &lt;code&gt;dt&lt;/code&gt; 、 &lt;code&gt;h1&lt;/code&gt; 、 &lt;code&gt;h2&lt;/code&gt; 、 &lt;code&gt;h3&lt;/code&gt; 、 &lt;code&gt;h4&lt;/code&gt; 、 &lt;code&gt;h5&lt;/code&gt; 、 &lt;code&gt;h6&lt;/code&gt; 、 &lt;code&gt;p&lt;/code&gt; タグでサポートされています。</target>
        </trans-unit>
        <trans-unit id="5d5d61095f65042402059860f91db33b5a420a1e" translate="yes" xml:space="preserve">
          <source>The following attributes are supported by the &lt;code&gt;td&lt;/code&gt; and &lt;code&gt;th&lt;/code&gt; tags:</source>
          <target state="translated">次の属性は、 &lt;code&gt;td&lt;/code&gt; タグと &lt;code&gt;th&lt;/code&gt; タグでサポートされています。</target>
        </trans-unit>
        <trans-unit id="2161cbb02a66d68d57757bc4c59404224c7d2c55" translate="yes" xml:space="preserve">
          <source>The following backends are supported:</source>
          <target state="translated">以下のバックエンドがサポートされています。</target>
        </trans-unit>
        <trans-unit id="73403ee03f358918f1eca9c9e082896a935f22c7" translate="yes" xml:space="preserve">
          <source>The following casts are done automatically:</source>
          <target state="translated">以下のキャストは自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="f2e2f222dbb35608d2df2df4e9473ded4c7d8cb0" translate="yes" xml:space="preserve">
          <source>The following categories are informative in Unicode:</source>
          <target state="translated">Unicodeでは以下のカテゴリが参考になります。</target>
        </trans-unit>
        <trans-unit id="eaa218b35266a04e6a973de95b1b38a419143119" translate="yes" xml:space="preserve">
          <source>The following characters are normative in Unicode:</source>
          <target state="translated">以下の文字はUnicodeでは規範となっています。</target>
        </trans-unit>
        <trans-unit id="805897dbe8fc240097bce136949485c792f29990" translate="yes" xml:space="preserve">
          <source>The following classes add scripting capabilities to Qt applications.</source>
          <target state="translated">以下のクラスはQtアプリケーションにスクリプト機能を追加します。</target>
        </trans-unit>
        <trans-unit id="b248fc7e8ad961a43d1e8dea544a4204c7fde123" translate="yes" xml:space="preserve">
          <source>The following classes support the selecting and setting up of printers and printing output.</source>
          <target state="translated">プリンタの選択と設定、印刷出力をサポートするクラスは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="152a3fa1df3a1e63a479f2189ec9d3c764483535" translate="yes" xml:space="preserve">
          <source>The following code allocates and destructs an instance of &lt;code&gt;MyClass&lt;/code&gt;:</source>
          <target state="translated">次のコードは、 &lt;code&gt;MyClass&lt;/code&gt; のインスタンスを割り当て、破棄します。</target>
        </trans-unit>
        <trans-unit id="29923af26a8102ea5224fa752cdeb2285d843496" translate="yes" xml:space="preserve">
          <source>The following code can be used as a skeleton for a SQL driver:</source>
          <target state="translated">以下のコードは、SQL ドライバのスケルトンとして使用できます。</target>
        </trans-unit>
        <trans-unit id="ccfede9a4800993a2f29262181e6385105b7ce32" translate="yes" xml:space="preserve">
          <source>The following code can be used to create a color group with some colors specified:</source>
          <target state="translated">以下のコードを使用すると、いくつかの色を指定したカラーグループを作成することができます。</target>
        </trans-unit>
        <trans-unit id="b37ba9689c10ea6e7b41611b5534804a9777fadf" translate="yes" xml:space="preserve">
          <source>The following code constructs a &lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; containing 200 bits initialized to false (0):</source>
          <target state="translated">次のコードは、false（0）に初期化された200ビットを含む&lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt;を構築します。</target>
        </trans-unit>
        <trans-unit id="17c52a5cdfe2cf03a9dd0c9879033a770dae8f91" translate="yes" xml:space="preserve">
          <source>The following code constructs a QBitArray containing 200 bits initialized to false (0):</source>
          <target state="translated">以下のコードは、False(0)に初期化された200ビットを含むQBitArrayを構築します。</target>
        </trans-unit>
        <trans-unit id="46d5cf67f34f8c8e9997cdd30ad3ac0200228592" translate="yes" xml:space="preserve">
          <source>The following code creates a &lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt; that manages the geometry of five &lt;a href=&quot;qpushbutton&quot;&gt;QPushButtons&lt;/a&gt;, as shown on the first screenshot above:</source>
          <target state="translated">次のコードは、上の最初のスクリーンショットに示すように、5つの&lt;a href=&quot;qpushbutton&quot;&gt;QPushButtons&lt;/a&gt;のジオメトリを管理する&lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="85264396902fd246c375c65bb69d739136d78a3e" translate="yes" xml:space="preserve">
          <source>The following code demonstrates how to set a single and multiple locales:</source>
          <target state="translated">次のコードは、単一のロケールと複数のロケールを設定する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c4e4e05d234a7e4763a3135274cf7b3bb3b6fa61" translate="yes" xml:space="preserve">
          <source>The following code does work:</source>
          <target state="translated">以下のコードで動作します。</target>
        </trans-unit>
        <trans-unit id="2a022eccd1589fa377d9f33e232b1910eec41184" translate="yes" xml:space="preserve">
          <source>The following code doubles the horizontal size of an object drawn on the canvas and halves its vertical size:</source>
          <target state="translated">次のコードは、キャンバスに描かれたオブジェクトの水平方向のサイズを2倍にし、垂直方向のサイズを半分にします。</target>
        </trans-unit>
        <trans-unit id="fe4e937d7a7849d700b0eb797314b2eb25a77f1c" translate="yes" xml:space="preserve">
          <source>The following code evaluates a JavaScript expression in the context of the above QML:</source>
          <target state="translated">以下のコードは、上記のQMLの文脈でJavaScriptの式を評価しています。</target>
        </trans-unit>
        <trans-unit id="5301c6be98ebf4de24f7b1f5daeb206c48e946c0" translate="yes" xml:space="preserve">
          <source>The following code examples are a small part of the &lt;code&gt;map&lt;/code&gt; component in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-mapviewer-example.html#&quot;&gt;Map Viewer (QML)&lt;/a&gt; example. The snippets demonstrate the declaration of the &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; component.</source>
          <target state="translated">次のコード例は、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-mapviewer-example.html#&quot;&gt;マップビューアー（QML）の&lt;/a&gt;例の &lt;code&gt;map&lt;/code&gt; コンポーネントの一部です。スニペットは、&lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt;コンポーネントの宣言を示しています。</target>
        </trans-unit>
        <trans-unit id="9febf8be7dbd0b9003bfb2741c874dfb3eda31d5" translate="yes" xml:space="preserve">
          <source>The following code examples are a small part of the &lt;code&gt;map&lt;/code&gt; component in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-mapviewer-example.html&quot;&gt;Map Viewer (QML)&lt;/a&gt; example. The snippets demonstrate the declaration of the &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; component.</source>
          <target state="translated">次のコード例は、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-mapviewer-example.html&quot;&gt;マップビューア（QML）の&lt;/a&gt;例の &lt;code&gt;map&lt;/code&gt; コンポーネントのごく一部です。スニペットは、&lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt;コンポーネントの宣言を示しています。</target>
        </trans-unit>
        <trans-unit id="a349e1ed3604dff924e8b747530df2b1fb21f0a9" translate="yes" xml:space="preserve">
          <source>The following code fragment shows a safe way to remove all items from a layout:</source>
          <target state="translated">次のコードは、レイアウトからすべての項目を削除する安全な方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3793f884131930e349131b4582a91bb94d382094" translate="yes" xml:space="preserve">
          <source>The following code has the same result, but here the putPoints() function overwrites rather than extends:</source>
          <target state="translated">次のコードも同じ結果になりますが、ここでは putPoints()関数が拡張ではなく上書きされています。</target>
        </trans-unit>
        <trans-unit id="043e15681fa36029257711b4647dea86a27d79d2" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to use &lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt;:</source>
          <target state="translated">次のコードは、&lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxisの&lt;/a&gt;使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="03a9476347778d7aa8fc046e0ffb028739341aa9" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to use QBarCategoryAxis:</source>
          <target state="translated">次のコードは、QBarCategoryAxisの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="b2a46bb338608f525ab43fbd77bc5952d090ef10" translate="yes" xml:space="preserve">
          <source>The following code instantiates the second node on the network and connects it with the source host node:</source>
          <target state="translated">以下のコードは、ネットワーク上の 2 番目のノードをインスタンス化し、ソース・ホスト・ノードに接続します。</target>
        </trans-unit>
        <trans-unit id="f172e46f9d66d22472c1c0651821cba496f046f0" translate="yes" xml:space="preserve">
          <source>The following code loads this QML file as a component, creates an instance of this component using &lt;a href=&quot;qqmlcomponent#create&quot;&gt;create&lt;/a&gt;(), and then queries the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;'s &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; value:</source>
          <target state="translated">次のコードは、このQMLファイルをコンポーネントとしてロードし、&lt;a href=&quot;qqmlcomponent#create&quot;&gt;create&lt;/a&gt;（）を使用してこのコンポーネントのインスタンスを作成してから、&lt;a href=&quot;qml-qtquick-item&quot;&gt;アイテム&lt;/a&gt;の&lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;幅の&lt;/a&gt;値をクエリします。</target>
        </trans-unit>
        <trans-unit id="a8198c87c631ac4a6a8ce8da78cab3e143d35189" translate="yes" xml:space="preserve">
          <source>The following code performs all those checks, except for the denormal one, which is expected to be taken into account by the system FPU or floating point emulation directly.</source>
          <target state="translated">以下のコードは、システムFPUや浮動小数点エミュレーションで直接考慮されると予想される非正規値を除いて、これらのチェックをすべて実行します。</target>
        </trans-unit>
        <trans-unit id="ac75d94af397cea73e943a7bdb23a2b1fcf80180" translate="yes" xml:space="preserve">
          <source>The following code shows how &lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent()&lt;/a&gt; can be reimplemented to tell the drag and drop system that we can only handle plain text:</source>
          <target state="translated">次のコードは、&lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent（）&lt;/a&gt;を再実装して、ドラッグアンドドロップシステムにプレーンテキストしか処理できないことを伝える方法を示しています。</target>
        </trans-unit>
        <trans-unit id="bda50a4241f6719840d500340f5419ca65684a6c" translate="yes" xml:space="preserve">
          <source>The following code shows how an image with an alpha channel can be used to generate a mask for a widget:</source>
          <target state="translated">次のコードは、アルファチャンネルを持つ画像を使用してウィジェットのマスクを生成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="9b898e52098db9910b5be0f8a0c5dc66348d1514" translate="yes" xml:space="preserve">
          <source>The following code shows how each item of data, corresponding to a given list of indexes, is encoded as plain text and stored in a &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object.</source>
          <target state="translated">次のコードは、指定されたインデックスのリストに対応する各データ項目がプレーンテキストとしてエンコードされ、&lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt;オブジェクトに格納される方法を示しています。</target>
        </trans-unit>
        <trans-unit id="1fcdb5bc79e2f8016a52495136785e15cbc462ee" translate="yes" xml:space="preserve">
          <source>The following code shows how it can be implemented; in this example we simply display a message box when &lt;code&gt;s3&lt;/code&gt; is entered, then immediately return to the previous child state of &lt;code&gt;s1&lt;/code&gt; via the history state.</source>
          <target state="translated">次のコードは、それを実装する方法を示しています。この例では、 &lt;code&gt;s3&lt;/code&gt; が入力されたときにメッセージボックスを表示し、履歴状態を介して &lt;code&gt;s1&lt;/code&gt; の前の子状態にすぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="b590fb955591f0b182f22cd5c3650795716b8b24" translate="yes" xml:space="preserve">
          <source>The following code shows how to display a 64x64 pixel icon:</source>
          <target state="translated">以下のコードは、64x64ピクセルのアイコンを表示する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="cdb371047988ee1515fbe9e1266b8bf30fb2e6b5" translate="yes" xml:space="preserve">
          <source>The following code snippet demonstrates how to perform a mathematical operation of &lt;code&gt;&quot;2 + 2&quot;&lt;/code&gt; in a remote application called &lt;code&gt;com.example.Calculator&lt;/code&gt;, accessed via the session bus.</source>
          <target state="translated">次のコードスニペットは、セッションバスを介してアクセスされる &lt;code&gt;com.example.Calculator&lt;/code&gt; と呼ばれるリモートアプリケーションで &lt;code&gt;&quot;2 + 2&quot;&lt;/code&gt; 数学演算を実行する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="5f069042ffb2a23936d5c0a334156a911e5f751d" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates adding the series to the chart and setting up &lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt;:</source>
          <target state="translated">次のコードスニペットは、系列をグラフに追加し、&lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt;を設定する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="9f26c361a31c3b9976230277bc735bee880a0bb0" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates adding the series to the chart and setting up QDateTimeAxis:</source>
          <target state="translated">以下のコードスニペットは、チャートにシリーズを追加し、QDateTimeAxisを設定する方法を説明しています。</target>
        </trans-unit>
        <trans-unit id="39031a87a5c922933791e9a1a9f6390d1b4d915c" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to create a basic scatter chart:</source>
          <target state="translated">以下のコードスニペットは、基本的な散布図の作成方法を示しています。</target>
        </trans-unit>
        <trans-unit id="27a6450f38edc567378333b6c51fcb8f6a2a3551" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to create a basic spline chart:</source>
          <target state="translated">次のコードスニペットは、基本的なスプライン図を作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="7ce500357262455677e69d3ce7176dc98a482463" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to set a cookie filter:</source>
          <target state="translated">次のコードスニペットは、クッキーフィルタを設定する方法を説明しています。</target>
        </trans-unit>
        <trans-unit id="28d455079cdec048bb4a260f7b86ddee8e2e2c53" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to use &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; to draw the focus rectangle from a custom widget's paintEvent():</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;を使用して、カスタムウィジェットのpaintEvent（）からフォーカス四角形を描画する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="78cec12c37e053d0b1f3bbf954acb96bccdb1440" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates the main .cpp file of the project:</source>
          <target state="translated">次のコードスニペットは、プロジェクトのメインの.cppファイルを示しています。</target>
        </trans-unit>
        <trans-unit id="6cdddd17dcaeb8349e957ad358a7488490690032" translate="yes" xml:space="preserve">
          <source>The following code snippet loads a library, resolves the symbol &quot;mysymbol&quot;, and calls the function if everything succeeded. If something goes wrong, e.g. the library file does not exist or the symbol is not defined, the function pointer will be &lt;code&gt;nullptr&lt;/code&gt; and won't be called.</source>
          <target state="translated">次のコードスニペットは、ライブラリを読み込み、シンボル「mysymbol」を解決し、すべてが成功した場合に関数を呼び出します。ライブラリファイルが存在しない、またはシンボルが定義されていないなどの問題が発生した場合、関数ポインターは &lt;code&gt;nullptr&lt;/code&gt; になり、呼び出されません。</target>
        </trans-unit>
        <trans-unit id="98f381cceec1251eb4ce86fb58d9eb779a3b21d4" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how a script function can be defined and then invoked from C++ using &lt;a href=&quot;qjsvalue#call&quot;&gt;QJSValue::call&lt;/a&gt;():</source>
          <target state="translated">次のコードスニペットは、スクリプト関数を定義し、&lt;a href=&quot;qjsvalue#call&quot;&gt;QJSValue :: call&lt;/a&gt;（）を使用してC ++から呼び出す方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2660e5e38bb8f6b9689c658829a3ed8e20a49437" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how the &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; was set up:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModelの&lt;/a&gt;設定方法を示しています。</target>
        </trans-unit>
        <trans-unit id="bdfb414b5845fbef3e67ad79a35ee3c2b10f2627" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how the QSqlRelationalTableModel was set up:</source>
          <target state="translated">以下のコードスニペットは、QSqlRelationalTableModelの設定方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2d598fded3da2a6333709571182b561d0d90798a" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to use a specific &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; subclass to paint a push button:</source>
          <target state="translated">次のコードスニペットは、特定の&lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;サブクラスを使用してプッシュボタンを描画する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="b4f94882d5a0bae22fe818046c82f3c26b11114c" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to use a specific QStyleOption subclass to paint a push button:</source>
          <target state="translated">次のコードスニペットは、特定の QStyleOption サブクラスを使用してプッシュボタンをペイントする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="e89d58f09898697119341d12921596614c437b8c" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to write data to a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; and &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;および&lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;を使用して&lt;a href=&quot;qbytearray&quot;&gt;QByteArrayに&lt;/a&gt;データを書き込む方法を示しています。</target>
        </trans-unit>
        <trans-unit id="032c2bda2ef9324cfb58f49341f96069c0a1dd6e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to write data to a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; and QBuffer:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;とQBufferを使用して&lt;a href=&quot;qbytearray&quot;&gt;QByteArrayに&lt;/a&gt;データを書き込む方法を示しています。</target>
        </trans-unit>
        <trans-unit id="d52c54c334b5058d97e9cca91d5ffae062c13b61" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how you could select an appropriate icon that represents the language of the current locale.</source>
          <target state="translated">次のコードスニペットは、現在のロケールの言語を表す適切なアイコンを選択する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="5268efeefe91998d10f64755e31fd5ef59fbbfdc" translate="yes" xml:space="preserve">
          <source>The following code snippet shows the declaration of an Address object.</source>
          <target state="translated">次のコードスニペットは、アドレスオブジェクトの宣言を示しています。</target>
        </trans-unit>
        <trans-unit id="767c4a394d5ff52abc62fa8d00954645322004b4" translate="yes" xml:space="preserve">
          <source>The following code snippet shows the invocation of the test:</source>
          <target state="translated">次のコードスニペットは、テストの呼び出しを示しています。</target>
        </trans-unit>
        <trans-unit id="4a4600e76fac58ff889a5b77cdd2ceefe29d1e8a" translate="yes" xml:space="preserve">
          <source>The following code snippets show the usage of suspension mechanism:</source>
          <target state="translated">以下のコードスニペットは、サスペンション機構の使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4eecdff8d00b92eb892303a7ebe474ba908ea027" translate="yes" xml:space="preserve">
          <source>The following code uses a custom dialog to handle the request:</source>
          <target state="translated">以下のコードでは、カスタムダイアログを使用してリクエストを処理しています。</target>
        </trans-unit>
        <trans-unit id="a639eb22142b3cf48dee8ff6b83f201bf0a75a8c" translate="yes" xml:space="preserve">
          <source>The following code uses a custom menu to handle the request:</source>
          <target state="translated">以下のコードでは、カスタムメニューを使用してリクエストを処理しています。</target>
        </trans-unit>
        <trans-unit id="c205a1952e147705c9a68ccb81a21b9b337e105d" translate="yes" xml:space="preserve">
          <source>The following code uses the &lt;a href=&quot;qml-qtwebengine-webengineview#action-method&quot;&gt;WebEngineView::action()&lt;/a&gt; method to check if the the copy action is enabled:</source>
          <target state="translated">次のコードは、&lt;a href=&quot;qml-qtwebengine-webengineview#action-method&quot;&gt;WebEngineView :: action（）&lt;/a&gt;メソッドを使用して、コピーアクションが有効になっているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="c669973805f8ec791d616d68fbe25e905b5a7432" translate="yes" xml:space="preserve">
          <source>The following code will create a &lt;a href=&quot;qml-qtquick-layouts-stacklayout&quot;&gt;StackLayout&lt;/a&gt; where only the 'plum' rectangle is visible.</source>
          <target state="translated">次のコードは、「プラム」長方形のみが表示される&lt;a href=&quot;qml-qtquick-layouts-stacklayout&quot;&gt;StackLayout&lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="926a5bf26dc168504ab08b75b68bcbff2f7e755d" translate="yes" xml:space="preserve">
          <source>The following code will create a StackLayout where only the 'plum' rectangle is visible.</source>
          <target state="translated">次のコードは、「プラム」の矩形だけが表示される StackLayout を作成します。</target>
        </trans-unit>
        <trans-unit id="5dd0c0478b45646ec6cd90bfb5b3f0d86953dccd" translate="yes" xml:space="preserve">
          <source>The following code will map the columns of the model to widgets called &lt;code&gt;mySpinBox&lt;/code&gt;, &lt;code&gt;myLineEdit&lt;/code&gt; and &lt;code&gt;myCountryChooser&lt;/code&gt;:</source>
          <target state="translated">次のコードは、モデルの列を &lt;code&gt;mySpinBox&lt;/code&gt; 、 &lt;code&gt;myLineEdit&lt;/code&gt; 、および &lt;code&gt;myCountryChooser&lt;/code&gt; と呼ばれるウィジェットにマップします。</target>
        </trans-unit>
        <trans-unit id="666faf82255da6fd3ed385bf4df72750e02a817c" translate="yes" xml:space="preserve">
          <source>The following code would create a &lt;code&gt;Button&lt;/code&gt; with a defined text string for the child &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object:</source>
          <target state="translated">次のコードは、子&lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;オブジェクトのテキスト文字列が定義された &lt;code&gt;Button&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="dfbdd901ff25d6291f838d640691dd6d62dd4884" translate="yes" xml:space="preserve">
          <source>The following colors are defined in the &lt;code&gt;QColorConstants&lt;/code&gt; namespace:</source>
          <target state="translated">&lt;code&gt;QColorConstants&lt;/code&gt; 名前空間では、次の色が定義されています。</target>
        </trans-unit>
        <trans-unit id="6128b2739f57896afad7b7ed5e7b1bbb671d99ef" translate="yes" xml:space="preserve">
          <source>The following commands are used to render source code without formatting. The source code begins on a new line, rendered in the code.</source>
          <target state="translated">以下のコマンドを使用して、フォーマットなしでソースコードをレンダリングします。ソースコードは新しい行から始まり、コード内でレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="69e8c6d23a472e53d606dd9bd07f599414c67dff" translate="yes" xml:space="preserve">
          <source>The following commands enable you to include code snippets from external files. You can make QDoc include the complete contents of a file, or you can quote specific parts of the file and skip others. The typical use of the latter is to quote a file chunk by chunk.</source>
          <target state="translated">以下のコマンドを使用すると、外部ファイルのコードスニペットを含めることができます。QDocにファイルの完全な内容を含めることもできますし、ファイルの特定の部分を引用して他の部分をスキップすることもできます。後者の典型的な使い方は、ファイルをチャンクごとに引用することです。</target>
        </trans-unit>
        <trans-unit id="7cf32e4edea6242b0bd00f8764dfab8ebdcd7cfa" translate="yes" xml:space="preserve">
          <source>The following compilers and configurations are supported in Qt 6.0:</source>
          <target state="translated">Qt 6.0では、以下のコンパイラと設定がサポートされています。</target>
        </trans-unit>
        <trans-unit id="ff62511c97370bc92280fbd456fa386d2aa28671" translate="yes" xml:space="preserve">
          <source>The following concepts are supported by the framework:</source>
          <target state="translated">フレームワークでは、以下のような概念がサポートされています。</target>
        </trans-unit>
        <trans-unit id="88a5c0700dcdcd92921e10d41dddbdb63a575073" translate="yes" xml:space="preserve">
          <source>The following configurations are supported.</source>
          <target state="translated">以下の構成に対応しています。</target>
        </trans-unit>
        <trans-unit id="8fe90b1288f44498fb756129bc5a0a2af786bb67" translate="yes" xml:space="preserve">
          <source>The following configurations are supported:</source>
          <target state="translated">以下の構成に対応しています。</target>
        </trans-unit>
        <trans-unit id="74a494ba6c43caeca0ccafe62f9a851008e8e4c4" translate="yes" xml:space="preserve">
          <source>The following constructs are illegal. All of them have alternatives which we think are usually better, so removing these limitations is not a high priority for us.</source>
          <target state="translated">以下の構成は違法です。いずれも通常はより良いと思われる代替案を持っているので、これらの制限を取り除くことは私たちにとって優先順位が高いとは言えません。</target>
        </trans-unit>
        <trans-unit id="6e6fcf23f5a940bb6fa265af687c9357e8989051" translate="yes" xml:space="preserve">
          <source>The following contrived example illustrates this point:</source>
          <target state="translated">この点については、次のような工夫された例で説明されています。</target>
        </trans-unit>
        <trans-unit id="abfff29bd4244e0e57d6164b12aa96f10b0b5e66" translate="yes" xml:space="preserve">
          <source>The following conversions are supported by Qt:</source>
          <target state="translated">Qtでは以下の変換がサポートされています。</target>
        </trans-unit>
        <trans-unit id="f04fbe636c682711bdcd9e60c5df11270f5ec431" translate="yes" xml:space="preserve">
          <source>The following custom cleanup handlers exist:</source>
          <target state="translated">以下のカスタムクリーンアップハンドラが存在します。</target>
        </trans-unit>
        <trans-unit id="ecfa53e4c2678533026b3059637b6eb015864860" translate="yes" xml:space="preserve">
          <source>The following declares version 2.0 of a class that exposes only its own API, and is available in the &quot;Insert Objects&quot; dialog of Microsoft Office applications.</source>
          <target state="translated">以下は、独自のAPIのみを公開するクラスのバージョン2.0を宣言しており、Microsoft Officeアプリケーションの「オブジェクトの挿入」ダイアログで利用できます。</target>
        </trans-unit>
        <trans-unit id="1508ac5b8249c498bcd3690f3eea41d2ea457487" translate="yes" xml:space="preserve">
          <source>The following demonstrates favorite removal:</source>
          <target state="translated">以下はお気に入り削除を実演しています。</target>
        </trans-unit>
        <trans-unit id="f6c3b288961376c9cea8e19e718eeea33fe045d1" translate="yes" xml:space="preserve">
          <source>The following demonstrates how to assign multiple phone numbers to a place in JavaScript:</source>
          <target state="translated">以下は、JavaScriptで複数の電話番号を場所に割り当てる方法を示しています。</target>
        </trans-unit>
        <trans-unit id="7591375e17b65673aba90205187132347fbe5d26" translate="yes" xml:space="preserve">
          <source>The following demonstrates how to save a new favorite instance. A call is made to create/initialize the favorite instance and then the instance is saved.</source>
          <target state="translated">以下は、新しいお気に入りインスタンスを保存する方法を示しています。お気に入りインスタンスを作成・初期化するための呼び出しを行い、インスタンスを保存します。</target>
        </trans-unit>
        <trans-unit id="4f09c99048583f695dea4483f6d9db6b244b4d98" translate="yes" xml:space="preserve">
          <source>The following dependencies are needed for using tools such as &lt;code&gt;adb&lt;/code&gt; or &lt;code&gt;gdb&lt;/code&gt; which can be used by Qt Creator:</source>
          <target state="translated">Qt Creatorで使用できる &lt;code&gt;adb&lt;/code&gt; や &lt;code&gt;gdb&lt;/code&gt; などのツールを使用するには、次の依存関係が必要です。</target>
        </trans-unit>
        <trans-unit id="fd3c8dd946d0bbc02dd6d4285c7c3f9b202ec413" translate="yes" xml:space="preserve">
          <source>The following deprecated functions are removed in Qt 6:</source>
          <target state="translated">Qt 6では以下の非推奨関数が削除されました。</target>
        </trans-unit>
        <trans-unit id="9caf414cbaffd3c1a599a6fa1276cb80133ff9a4" translate="yes" xml:space="preserve">
          <source>The following diagram describes the steps that happen during an invocation of the &lt;code&gt;qsb&lt;/code&gt; tool:</source>
          <target state="translated">次の図は、 &lt;code&gt;qsb&lt;/code&gt; ツールの呼び出し中に発生する手順を示しています。</target>
        </trans-unit>
        <trans-unit id="09ea97e5f665055fa43da3e7a758337d948f5e38" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates the layout of a popup within a window:</source>
          <target state="translated">次の図は、ウィンドウ内のポップアップのレイアウトを示しています。</target>
        </trans-unit>
        <trans-unit id="8ad4e192a221f0cba404da5dc9e5e281728b1827" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates the layout of a typical control:</source>
          <target state="translated">次の図は、典型的な制御のレイアウトを説明するための図である。</target>
        </trans-unit>
        <trans-unit id="d1622058272d86d465912f50ccaa0b7e54c9a85c" translate="yes" xml:space="preserve">
          <source>The following diagram shows the configuration produced by the above code. Note that the left and right dock widgets will occupy the top and bottom corners of the main window in this layout.</source>
          <target state="translated">次の図は、上記のコードによって生成された構成を示しています。このレイアウトでは、左右のドック・ウィジェットがメイン・ウィンドウの上部と下部の角を占めることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a8a6c288cc52a3dff47e75db8095e251df392b8e" translate="yes" xml:space="preserve">
          <source>The following diagram shows the state machine after the interrupt mechanism has been added.</source>
          <target state="translated">次の図は、割り込み機構を追加した後のステートマシンを示しています。</target>
        </trans-unit>
        <trans-unit id="9212d0bde1264613ef95585ca5def65b8e0bb41d" translate="yes" xml:space="preserve">
          <source>The following documents contain information about Qt's D-Bus integration features, and provide details about the mechanisms used to send and receive type information over the bus:</source>
          <target state="translated">以下のドキュメントには、Qt の D-Bus 統合機能に関する情報が記載されており、バス上で型情報を送受信するために使用されるメカニズムの詳細が記載されています。</target>
        </trans-unit>
        <trans-unit id="769d27cb354cbe0e7b29711fb4012187ccef06ce" translate="yes" xml:space="preserve">
          <source>The following entry in &lt;code&gt;project.pro&lt;/code&gt; ensures that the resources are built into the application binary, making them available when needed:</source>
          <target state="translated">&lt;code&gt;project.pro&lt;/code&gt; の次のエントリにより、リソースがアプリケーションバイナリに組み込まれ、必要なときに利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="4a321cbf3b29c620343d628dcaf485d9e7654ce9" translate="yes" xml:space="preserve">
          <source>The following enumeration values can be used as values of</source>
          <target state="translated">の値として、以下の列挙値を使用することができます。</target>
        </trans-unit>
        <trans-unit id="35062726c8c7835d7a147656e6f2d2bd7135f019" translate="yes" xml:space="preserve">
          <source>The following example adds a button to be used with the example product in the previous section:</source>
          <target state="translated">次の例では、前項の例の商品で使用するボタンを追加します。</target>
        </trans-unit>
        <trans-unit id="0f312079a1e70935716efd12082111dcc7a20f0d" translate="yes" xml:space="preserve">
          <source>The following example animates the opacity of the popup when it enters the screen:</source>
          <target state="translated">次の例では、ポップアップが画面に入ったときの不透明度をアニメーション化しています。</target>
        </trans-unit>
        <trans-unit id="e2b0d5514bb42998a3f979b580bff29f328eeed9" translate="yes" xml:space="preserve">
          <source>The following example animates the opacity of the popup when it exits the screen:</source>
          <target state="translated">次の例では、ポップアップが画面外に出たときの不透明度をアニメーション化しています。</target>
        </trans-unit>
        <trans-unit id="2007de81cf2d470bc6b7f0e9331a28aa7f12a137" translate="yes" xml:space="preserve">
          <source>The following example appends a simple string to the stream:</source>
          <target state="translated">次の例では、単純な文字列をストリームに追加しています。</target>
        </trans-unit>
        <trans-unit id="6e513167bdac3397fa5487a0d9820836fb9cf411" translate="yes" xml:space="preserve">
          <source>The following example appends all strings found in the &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; passed as input:</source>
          <target state="translated">次の例では、入力として渡された&lt;a href=&quot;qmap&quot;&gt;QMapで&lt;/a&gt;見つかったすべての文字列を追加します。</target>
        </trans-unit>
        <trans-unit id="5f1507bded6dc8f04646b20de92ec8482d36cb39" translate="yes" xml:space="preserve">
          <source>The following example appends all strings found in the &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; passed as input:</source>
          <target state="translated">次の例では、入力として渡された&lt;a href=&quot;qstringlist&quot;&gt;QStringListで&lt;/a&gt;見つかったすべての文字列を追加します。</target>
        </trans-unit>
        <trans-unit id="58ac2cedd3334b713ea7d2f3034b00b4cb8bad9c" translate="yes" xml:space="preserve">
          <source>The following example appends elements from the linked list of int and string pairs passed as input:</source>
          <target state="translated">次の例では、入力として渡された int と string のペアのリンクされたリストから要素を追加します。</target>
        </trans-unit>
        <trans-unit id="6e6967b0eea2626bc8398f7afa8cea91bb707bd3" translate="yes" xml:space="preserve">
          <source>The following example appends elements from the linked list of strings passed as input:</source>
          <target state="translated">次の例では、入力として渡された文字列のリンク先リストの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="c5fa4e09dda4651ef59121fc6b77baa4fdc553df" translate="yes" xml:space="preserve">
          <source>The following example appends elements from the list of int and string pairs passed as input:</source>
          <target state="translated">次の例では、入力として渡された int と string のペアのリストから要素を追加します。</target>
        </trans-unit>
        <trans-unit id="b559ca21a170d3007b90e9dd80c5983ddf38d271" translate="yes" xml:space="preserve">
          <source>The following example appends elements from the list of strings passed as input:</source>
          <target state="translated">次の例では、入力として渡された文字列のリストから要素を追加します。</target>
        </trans-unit>
        <trans-unit id="e003c2419afff47850810afeb3a7e2b3217f9296" translate="yes" xml:space="preserve">
          <source>The following example attempts to store the purchase state of a consumable product using a custom made function. It only finalizes the transaction if saving the data was successful. Otherwise, it calls another custom function to display an error message to the user.</source>
          <target state="translated">次の例では、カスタムメイドの関数を使用して消耗品の購入状態を保存しようとしています。データの保存が成功した場合のみ、トランザクションを確定します。それ以外の場合は、別のカスタム関数を呼び出して、ユーザーにエラーメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="321f9fa2f06863b13a3d5e063ab02b59ae74aacb" translate="yes" xml:space="preserve">
          <source>The following example bundles an icon theme called</source>
          <target state="translated">というアイコンテーマをバンドルしています。</target>
        </trans-unit>
        <trans-unit id="789a644db1d9395f4b9de02daa9780c883f500e7" translate="yes" xml:space="preserve">
          <source>The following example calls a custom function which either saves the information about the purchase or verifies that it is already saved. When the data has been verified, it finalizes the transaction. If it could not be verified, it calls another custom function to display an error message to the user. If the transaction is not finalized, the handler will be called again for the same transaction the next time the product is registered (on application start-up).</source>
          <target state="translated">次の例では、購入に関する情報を保存するか、すでに保存されていることを検証するカスタム関数を呼び出しています。データが検証されると、トランザクションが確定します。検証できなかった場合は、別のカスタム関数を呼び出して、ユーザーにエラーメッセージを表示します。トランザクションが確定されなかった場合、ハンドラは、次に商品が登録されたとき(アプリケーションの起動時)に、同じトランザクションに対して再度呼び出されます。</target>
        </trans-unit>
        <trans-unit id="6936ef2d15d1d5946cef9e61335821d72ee453fe" translate="yes" xml:space="preserve">
          <source>The following example calls custom methods to save data about a succeeded purchase so that it survives across application runs. After verifying that the data has been stored, it finalizes the transaction. When the transaction has failed, it displays information about the failure to the user and finalizes the transaction.</source>
          <target state="translated">次の例では、成功した購入に関するデータを保存するためにカスタム・メソッドを呼び出して、アプリケーションの実行中にもデータが存続するようにしています。データが保存されたことを確認した後、トランザクションを確定します。トランザクションが失敗した場合は、失敗に関する情報をユーザーに表示し、トランザクションを終了します。</target>
        </trans-unit>
        <trans-unit id="9a83bd0ff7ce1f15b046fe99b2dac1a7d14a7b2d" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; type:</source>
          <target state="translated">次のコード例は、&lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt;タイプの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="efe3a2c14b84c5f2ba4e0a585c768d225bb22b93" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; class:</source>
          <target state="translated">次のコード例は、&lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt;クラスの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="6308c8afbc2fb7cad7c021934cb90a1e96ed8cbd" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the &lt;a href=&quot;qwintaskbarbutton&quot;&gt;QWinTaskbarButton&lt;/a&gt; and &lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt; classes to adjust the look of the taskbar button:</source>
          <target state="translated">次のコード例では、使用方法を示し&lt;a href=&quot;qwintaskbarbutton&quot;&gt;QWinTaskbarButton&lt;/a&gt;と&lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt;タスクバーのボタンの外観を調整するためのクラスを：</target>
        </trans-unit>
        <trans-unit id="9001b0d6725de4fbc7aee65597c392b690422e16" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the QValueAxis class:</source>
          <target state="translated">以下のコード例は、QValueAxisクラスの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="80661600a7b4843e0b3c5876648f4daf025b6073" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the QWinTaskbarButton and &lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt; classes to adjust the look of the taskbar button:</source>
          <target state="translated">次のサンプルコードは、&lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarButton&lt;/a&gt;クラスとQWinTaskbarProgressクラスを使用してタスクバーボタンの外観を調整する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3bb0797c1ea6f6b9d13d33bfae5477e8211dcbd4" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the ValueAxis type:</source>
          <target state="translated">以下のコード例は、ValueAxis 型の使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="fefc97157f19f5289a81b8fed60b5df32fd5e273" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the functions in the &lt;a href=&quot;qwinthumbnailtoolbar&quot;&gt;QWinThumbnailToolBar&lt;/a&gt; and &lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt; class to implement a thumbnail toolbar:</source>
          <target state="translated">次のコード例は、&lt;a href=&quot;qwinthumbnailtoolbar&quot;&gt;QWinThumbnailToolBar&lt;/a&gt;および&lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt;クラスの関数を使用してサムネイルツールバーを実装する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="cf6f0c83480f486835856efc735f1ab84d5fd510" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the functions in the QWinThumbnailToolBar and &lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt; class to implement a thumbnail toolbar:</source>
          <target state="translated">次のサンプルコードは、&lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolBar&lt;/a&gt;クラスとQWinThumbnailToolButtonクラスの関数を使用してサムネイルツールバーを実装する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c33923f84776b95ca304d2788d87fdec5cc0ce1a" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; with five elements:</source>
          <target state="translated">次の例では、5つの要素を持つ&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="3958f58be50c8764f3558509b8f62f1a6bb02402" translate="yes" xml:space="preserve">
          <source>The following example creates a CustomCamera at position [0, 200, 300] in the scene, with a 30 degree downward pitch, and a custom projection matrix based on custom near and far plane distances, and a custom field of view.</source>
          <target state="translated">次の例では、シーン内の位置[0,200,300]に30度の下向きピッチのCustomCameraを作成し、カスタムの近・遠平面距離とカスタムの視野に基づくカスタム投影マトリックスを作成しています。</target>
        </trans-unit>
        <trans-unit id="3475cd308ced279e5cf614fc3a64540a1e4bbc63" translate="yes" xml:space="preserve">
          <source>The following example creates a FrustumCamera at position [0, 200, 300] in the scene, with a 30 degree downward pitch, and where the intersection of the frustum and the near plane is given by the rectangle that has a bottom left corner at [-5, -5], and a top right corner at [5, 5].</source>
          <target state="translated">以下の例では、シーン内の位置 [0,200,300]に FrustumCamera を作成し、30 度の下向きピッチで、Frustum とニアプレーンの交点が [-5,-5]に左下の角、[5,5]に右上の角を持つ長方形で与えられます。</target>
        </trans-unit>
        <trans-unit id="d0e261968993681b39a8b1708461a383d91c5669" translate="yes" xml:space="preserve">
          <source>The following example creates a OrthographicCamera at position [0, 200, 300] in the scene, and with a 30 degree downward pitch.</source>
          <target state="translated">以下の例では、シーン内の位置[0,200,300]に、下向きに30度のピッチでOrthographicCameraを作成しています。</target>
        </trans-unit>
        <trans-unit id="3c57e8f89d207f5eb667e1b19731acf7a6aa4616" translate="yes" xml:space="preserve">
          <source>The following example creates a PerspectiveCamera at position [0, 200, 300] in the scene, a field of view of 90 degrees and with a 30 degree downward pitch.</source>
          <target state="translated">以下の例では、シーン内の位置[0,200,300]、視野90度、下向きピッチ30度のPerspectiveCameraを作成しています。</target>
        </trans-unit>
        <trans-unit id="32d80cefdbc0088c84740e0a1b1082d3f60e3334" translate="yes" xml:space="preserve">
          <source>The following example creates a palette from the &lt;code&gt;Active&lt;/code&gt; color group and uses this to color the window and text items appropriately:</source>
          <target state="translated">次の例では、 &lt;code&gt;Active&lt;/code&gt; カラーグループからパレットを作成し、これを使用してウィンドウとテキストアイテムに適切に色を付けています。</target>
        </trans-unit>
        <trans-unit id="078511cd623b70379909966583306c3a0ddc24df" translate="yes" xml:space="preserve">
          <source>The following example creates a vertex shader program using the supplied source &lt;code&gt;code&lt;/code&gt;. Once compiled and linked, the shader program is activated in the current &lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; by calling &lt;a href=&quot;qopenglshaderprogram#bind&quot;&gt;QOpenGLShaderProgram::bind&lt;/a&gt;():</source>
          <target state="translated">次の例では、提供されたソース &lt;code&gt;code&lt;/code&gt; を使用して頂点シェーダープログラムを作成します。コンパイルおよびリンクされると、シェーダープログラムは、&lt;a href=&quot;qopenglshaderprogram#bind&quot;&gt;QOpenGLShaderProgram :: bind&lt;/a&gt;（）：を呼び出すことにより、現在の&lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContextで&lt;/a&gt;アクティブ化されます。</target>
        </trans-unit>
        <trans-unit id="90fa58ca4101a85bcd3df5a18bf54d10c96d3011" translate="yes" xml:space="preserve">
          <source>The following example creates a vertex shader program using the supplied source &lt;code&gt;code&lt;/code&gt;. Once compiled and linked, the shader program is activated in the current &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; by calling &lt;a href=&quot;qopenglshaderprogram#bind&quot;&gt;QOpenGLShaderProgram::bind&lt;/a&gt;():</source>
          <target state="translated">次の例では、提供されたソース &lt;code&gt;code&lt;/code&gt; を使用して頂点シェーダープログラムを作成します。コンパイルしてリンクすると、シェーダープログラムは&lt;a href=&quot;qopenglshaderprogram#bind&quot;&gt;QOpenGLShaderProgram :: bind&lt;/a&gt;（）を呼び出して現在の&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContextで&lt;/a&gt;アクティブ化されます。</target>
        </trans-unit>
        <trans-unit id="93c96c6c408a634c6e6054cbb728d2b6f1ffd18a" translate="yes" xml:space="preserve">
          <source>The following example creates a view based on an SQL data model:</source>
          <target state="translated">次の例では、SQL データモデルに基づいてビューを作成します。</target>
        </trans-unit>
        <trans-unit id="59b5d4440985280dd7578090609cbcb09f7d4c11" translate="yes" xml:space="preserve">
          <source>The following example declares a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; item with a gradient starting with red, blending to yellow at one third of the height of the rectangle, and ending with green:</source>
          <target state="translated">次の例では、赤から始まり、長方形の高さの3分の1で黄色にブレンドされ、緑で終わるグラデーションを持つ&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;アイテムを宣言しています。</target>
        </trans-unit>
        <trans-unit id="9081678b9419eb58f8254c031612400fbec8c684" translate="yes" xml:space="preserve">
          <source>The following example defines a Behavior fading out and fading in its target object when the property it controls changes:</source>
          <target state="translated">次の例では、制御するプロパティが変更されたときに対象のオブジェクトでフェードアウトしたり、フェードアウトしたりするビヘイビアを定義しています。</target>
        </trans-unit>
        <trans-unit id="6874a5fb9612a0fa6ef90bb3b79e40e2bf027db2" translate="yes" xml:space="preserve">
          <source>The following example defines two contexts - &lt;code&gt;context1&lt;/code&gt; and &lt;code&gt;context2&lt;/code&gt;. The second context overrides the &quot;b&quot; context property inherited from the first with a new value.</source>
          <target state="translated">次の例では、 &lt;code&gt;context1&lt;/code&gt; と &lt;code&gt;context2&lt;/code&gt; という 2つのコンテキストを定義しています。2番目のコンテキストは、最初のコンテキストから継承された「b」コンテキストプロパティを新しい値でオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="56779f1b8c3e899ba64384a5bb4c67ffff674a17" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a custom rounded button that has a styled drop shadow in the &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;Material style&lt;/a&gt;, and looks flat in other styles. The files are organized so that the Material version of &lt;code&gt;CustomButton.qml&lt;/code&gt; is placed into a &lt;code&gt;+Material&lt;/code&gt; sub-directory.</source>
          <target state="translated">次の例は、&lt;a href=&quot;qtquickcontrols2-material&quot;&gt;マテリアルスタイル&lt;/a&gt;でスタイル設定されたドロップシャドウがあり、他のスタイルではフラットに見えるカスタムの丸いボタンを示しています。ファイルは、 &lt;code&gt;CustomButton.qml&lt;/code&gt; のマテリアルバージョンが &lt;code&gt;+Material&lt;/code&gt; サブディレクトリに配置されるように編成されています。</target>
        </trans-unit>
        <trans-unit id="f196eace9f08d98b8ec3afdb932443152cf8b9cb" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a custom rounded button that has a styled drop shadow in the &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;Material style&lt;/a&gt;, and looks flat in other styles. The files are organized so that the Material version of &lt;code&gt;CustomButton.qml&lt;/code&gt; is placed into a &lt;code&gt;+material&lt;/code&gt; sub-directory.</source>
          <target state="translated">次の例は、&lt;a href=&quot;qtquickcontrols2-material&quot;&gt;マテリアルスタイル&lt;/a&gt;でスタイル設定されたドロップシャドウがあり、他のスタイルではフラットに見えるカスタムの丸いボタンを示しています。ファイルは、 &lt;code&gt;CustomButton.qml&lt;/code&gt; のMaterialバージョンが &lt;code&gt;+material&lt;/code&gt; サブディレクトリに配置されるように編成されています。</target>
        </trans-unit>
        <trans-unit id="2b5c3ce81872a0281a5c72d213bdf0961a8e0ecd" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a custom rounded button that has a styled drop shadow in the &lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;Material style&lt;/a&gt;, and looks flat in other styles. The files are organized so that the Material version of &lt;code&gt;CustomButton.qml&lt;/code&gt; is placed into a &lt;code&gt;+material&lt;/code&gt; sub-directory.</source>
          <target state="translated">次の例は、&lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;Materialスタイル&lt;/a&gt;にスタイル付きのドロップシャドウがあり、他のスタイルではフラットに見えるカスタムの丸いボタンを示しています。 &lt;code&gt;CustomButton.qml&lt;/code&gt; のMaterialバージョンが &lt;code&gt;+material&lt;/code&gt; サブディレクトリに配置されるように、ファイルが編成されています。</target>
        </trans-unit>
        <trans-unit id="48ab40f0d947a5a2925f13551f0d4b5f697a9a02" translate="yes" xml:space="preserve">
          <source>The following example demonstrates appending content to an editable combo box by reacting to the &lt;a href=&quot;qml-qtquick-controls2-combobox#accepted-signal&quot;&gt;accepted&lt;/a&gt; signal.</source>
          <target state="translated">次の例は、&lt;a href=&quot;qml-qtquick-controls2-combobox#accepted-signal&quot;&gt;受け入れられた&lt;/a&gt;信号に反応して、編集可能なコンボボックスにコンテンツを追加する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="8b3c8b177b1a92b1349c4a8ae0c81a1bbc007b7a" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how the macro can be used to set context properties on the QML engine:</source>
          <target state="translated">以下の例では、マクロを使用して QML エンジンにコンテキストプロパティを設定する方法を示します。</target>
        </trans-unit>
        <trans-unit id="2aa9fdd767515675f7d459b3c8f8961f000d2d3c" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to assign a single phone number to a place in JavaScript:</source>
          <target state="translated">次の例では、JavaScriptで単一の電話番号を場所に割り当てる方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a270b47356ae438755a16ab33fe6cac410dff601" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to pass custom flags to &lt;code&gt;CreateProcess&lt;/code&gt;. When starting a console process B from a console process A, &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; will reuse the console window of process A for process B by default. In this example, a new console window with a custom color scheme is created for the child process B instead.</source>
          <target state="translated">次の例は、カスタムフラグを &lt;code&gt;CreateProcess&lt;/code&gt; に渡す方法を示しています。コンソールプロセスAからコンソールプロセスBを開始すると、&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;はデフォルトでプロセスBのプロセスAのコンソールウィンドウを再利用します。この例では、代わりに、子プロセスBにカスタムカラースキームを使用した新しいコンソールウィンドウが作成されます。</target>
        </trans-unit>
        <trans-unit id="97ebb7c4c3ea4aa363bc51dc603da971a12f7216" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to pass custom flags to &lt;code&gt;CreateProcess&lt;/code&gt;. When starting a console process B from a console process A, &lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt; will reuse the console window of process A for process B by default. In this example, a new console window with a custom color scheme is created for the child process B instead.</source>
          <target state="translated">次の例は、カスタムフラグを &lt;code&gt;CreateProcess&lt;/code&gt; に渡す方法を示しています。コンソールプロセスAからコンソールプロセスBを開始すると、&lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt;はデフォルトでプロセスAのコンソールウィンドウをプロセスBに再利用します。この例では、代わりに子プロセスB用にカスタム配色の新しいコンソールウィンドウが作成されます。</target>
        </trans-unit>
        <trans-unit id="3c8716cd3d5e195e9e26ce67de17f84792d466d6" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use an incubator:</source>
          <target state="translated">以下の例は、インキュベーターの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="e8d610cbc5024360e7e361e6b034f5a0267b6e07" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the lighting effect on an object using an HDR image vs a single directional light:</source>
          <target state="translated">次の例では、HDR画像と単方向の光を使用したオブジェクトの照明効果を示しています。</target>
        </trans-unit>
        <trans-unit id="46e2e23e8c39dcb82b548f498561006250ba9caa" translate="yes" xml:space="preserve">
          <source>The following example displays a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; that can be dragged along the X-axis. The opacity of the rectangle is reduced when it is dragged to the right.</source>
          <target state="translated">次の例では、X軸に沿ってドラッグできる&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;四角形&lt;/a&gt;を表示します。長方形を右にドラッグすると、長方形の不透明度が低くなります。</target>
        </trans-unit>
        <trans-unit id="72809dcb71e91c9f048109c1967c27dffd1fd78d" translate="yes" xml:space="preserve">
          <source>The following example displays a flat list of all available categories:</source>
          <target state="translated">次の例では、利用可能なすべてのカテゴリのフラットリストが表示されます。</target>
        </trans-unit>
        <trans-unit id="1b3e70b6e6e8c14fc3276fec873ace7a4359cbc5" translate="yes" xml:space="preserve">
          <source>The following example displays a single &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;. In the default state, the rectangle is colored black. In the &quot;clicked&quot; state, a &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; object changes the rectangle's color to red. Clicking within the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; toggles the rectangle's state between the default state and the &quot;clicked&quot; state, thus toggling the color of the rectangle between black and red.</source>
          <target state="translated">次の例では、単一の&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangleを&lt;/a&gt;表示しています。デフォルトの状態では、長方形の色は黒です。「クリックされた」状態では、&lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt;オブジェクトは長方形の色を赤に変更します。&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;内をクリックすると、長方形の状態がデフォルト状態と「クリックされた」状態の間で切り替わり、長方形の色が黒と赤の間で切り替わります。</target>
        </trans-unit>
        <trans-unit id="8b9ac8dff6be8dee0fefb5784d9556ccb2df9de3" translate="yes" xml:space="preserve">
          <source>The following example displays the specified number in the correct format for the default locale:</source>
          <target state="translated">以下の例では、指定した数値をデフォルトのロケールの正しい書式で表示します。</target>
        </trans-unit>
        <trans-unit id="5bcb14d84e4150978eb5d7781f0eab34eb80c5f8" translate="yes" xml:space="preserve">
          <source>The following example enables the pinch and pan gestures on the map, but not flicking. So the map scrolling will halt immediately on releasing the mouse button / touch.</source>
          <target state="translated">以下の例では、マップ上でのピンチとパンのジェスチャーは有効にしていますが、フリックは有効にしていません。このため、マウスのボタン/タッチを離すとすぐに地図のスクロールが停止します。</target>
        </trans-unit>
        <trans-unit id="c543fccab3e6f3cb9422e2c015ff69eaae712651" translate="yes" xml:space="preserve">
          <source>The following example enables the pinch gesture on a map and reacts to the finished event.</source>
          <target state="translated">次の例では、マップ上でピンチジェスチャーを有効にし、終了したイベントに反応します。</target>
        </trans-unit>
        <trans-unit id="f11a5072827cb9854f65cc323b8fa0d222fdd82f" translate="yes" xml:space="preserve">
          <source>The following example encodes the equivalent of this JSON content:</source>
          <target state="translated">以下の例では、このJSONの内容に相当するものをエンコードしています。</target>
        </trans-unit>
        <trans-unit id="d524036093e34a90a79161e6dc3192e97c564efb" translate="yes" xml:space="preserve">
          <source>The following example function takes a variable name as its only argument, extracts a list of values from the variable with the &lt;a href=&quot;qmake-test-function-reference#eval-string&quot;&gt;eval()&lt;/a&gt; built-in function, and compiles a list of files:</source>
          <target state="translated">次の関数例は、変数名を唯一の引数として取り、&lt;a href=&quot;qmake-test-function-reference#eval-string&quot;&gt;eval（）&lt;/a&gt;組み込み関数を使用して変数から値のリストを抽出し、ファイルのリストをコンパイルします。</target>
        </trans-unit>
        <trans-unit id="31b4e6b5d8e2722c3d8ee9d58963cd07c10414ff" translate="yes" xml:space="preserve">
          <source>The following example has the same effect as the previous one, but it uses a context object.</source>
          <target state="translated">次の例は、前の例と同じ効果がありますが、コンテキストオブジェクトを使用しています。</target>
        </trans-unit>
        <trans-unit id="214783ff38465c2242067ede39dce8207156d48f" translate="yes" xml:space="preserve">
          <source>The following example illustrates dynamic insertion of items to a &lt;a href=&quot;qml-qtquick-controls2-tabbar&quot;&gt;TabBar&lt;/a&gt;, which is one of the concrete implementations of Container.</source>
          <target state="translated">次の例は、Containerの具体的な実装の1つである&lt;a href=&quot;qml-qtquick-controls2-tabbar&quot;&gt;TabBar&lt;/a&gt;へのアイテムの動的挿入を示しています。</target>
        </trans-unit>
        <trans-unit id="a1d028f954d51e1eaa768a2c94d1b7debdeddd99" translate="yes" xml:space="preserve">
          <source>The following example illustrates dynamic insertion of items to a &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt;, which is one of the concrete implementations of Container.</source>
          <target state="translated">次の例は、Containerの具象実装の1つである&lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt;へのアイテムの動的挿入を示しています。</target>
        </trans-unit>
        <trans-unit id="1a46a75e8cca25bf2b466e27890d64aaedf09224" translate="yes" xml:space="preserve">
          <source>The following example illustrates how a structure containing an integer and a string can be constructed using the &lt;a href=&quot;qdbustypesystem&quot;&gt;Qt D-Bus type system&lt;/a&gt;:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qdbustypesystem&quot;&gt;QtD-Bus型システム&lt;/a&gt;を使用して整数と文字列を含む構造を構築する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="ca40164f9ec6d68590386dcdad42f196b5dd3773" translate="yes" xml:space="preserve">
          <source>The following example illustrates how a structure containing an integer and a string can be constructed using the &lt;a href=&quot;qdbustypesystem#&quot;&gt;Qt D-Bus type system&lt;/a&gt;:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qdbustypesystem#&quot;&gt;Qt D-Bus型システム&lt;/a&gt;を使用して、整数と文字列を含む構造体を構築する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="d6c4cdd0cf3326dfb454a3df45462585caf89c96" translate="yes" xml:space="preserve">
          <source>The following example illustrates how the combined check state of children can be bound to the check state of the parent checkbox:</source>
          <target state="translated">次の例では、子の結合されたチェック状態を親のチェックボックスのチェック状態にバインドする方法を説明します。</target>
        </trans-unit>
        <trans-unit id="cace15d6bf210e8d74cdacf78bfc9b2e3aaa9a0e" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to assign a &lt;a href=&quot;qml-qt-labs-platform-menu&quot;&gt;Menu&lt;/a&gt; to a system tray icon:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qml-qt-labs-platform-menu&quot;&gt;メニュー&lt;/a&gt;をシステムトレイアイコンに割り当てる方法を示しています。</target>
        </trans-unit>
        <trans-unit id="8d86739b213a2f9a68f7f2d989d9f2319980d21c" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to assign a &lt;a href=&quot;qtquicklabsplatform-changes-qt6#menu&quot;&gt;Menu&lt;/a&gt; to a system tray icon:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qtquicklabsplatform-changes-qt6#menu&quot;&gt;メニュー&lt;/a&gt;をシステムトレイアイコンに割り当てる方法を示しています。</target>
        </trans-unit>
        <trans-unit id="8258dcf46b8314f3a0b64c66af0bb96b737d1fe6" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to create wizard pages and add them to a wizard. For more advanced examples, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-classwizard-example.html#&quot;&gt;Class Wizard&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-licensewizard-example.html#&quot;&gt;License Wizard&lt;/a&gt;.</source>
          <target state="translated">次の例は、ウィザードページを作成してウィザードに追加する方法を示しています。より高度な例については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-classwizard-example.html#&quot;&gt;Class Wizard&lt;/a&gt;および&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-licensewizard-example.html#&quot;&gt;License Wizardを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e14ea9942cf768336832a16bd124c14fa69ded42" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to create wizard pages and add them to a wizard. For more advanced examples, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-classwizard-example.html&quot;&gt;Class Wizard&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;License Wizard&lt;/a&gt;.</source>
          <target state="translated">次の例は、ウィザードページを作成してウィザードに追加する方法を示しています。より高度な例については、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-classwizard-example.html&quot;&gt;クラスウィザード&lt;/a&gt;と&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;ライセンスウィザードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="d1f58eba2c443b8a2af9c6543db315b31c1b8231" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to create wizard pages and add them to a wizard. For more advanced examples, see &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-dialogs-classwizard-example.html&quot;&gt;Class Wizard&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;License Wizard&lt;/a&gt;.</source>
          <target state="translated">次の例は、ウィザードページを作成してウィザードに追加する方法を示しています。より高度な例については、&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-dialogs-classwizard-example.html&quot;&gt;クラスウィザード&lt;/a&gt;と&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;ライセンスウィザードを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="82968110ae89ab7dc1b61419d67c4b267a87a658" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to keep each tab button at their implicit size instead of being resized to fit the tabbar:</source>
          <target state="translated">次の例では、タブバーに合わせてサイズを変更するのではなく、各タブボタンを暗黙のうちにサイズを維持する方法を説明しています。</target>
        </trans-unit>
        <trans-unit id="61c2b18dd286130d0d4274f7eb8da86c32127fb4" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to update all widgets with new data whenever the selection of a &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; named &lt;code&gt;myTableView&lt;/code&gt; changes:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qtableview&quot;&gt;myTableView&lt;/a&gt;という &lt;code&gt;myTableView&lt;/code&gt; 選択が変更されるたびに、すべてのウィジェットを新しいデータで更新する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="abbd8aa7425bd9f6a6782fe6b02bd522cd9092ff" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; directly:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qlocale&quot;&gt;QLocaleを&lt;/a&gt;直接使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f04b7c4dfc10dd1edd0ebeedc997270525959c7f" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use &lt;a href=&quot;qml-qtwinextras-taskbarbutton&quot;&gt;TaskbarButton&lt;/a&gt; in QML:</source>
          <target state="translated">次の例は、QMLで&lt;a href=&quot;qml-qtwinextras-taskbarbutton&quot;&gt;TaskbarButton&lt;/a&gt;を使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4833ffd6f9c31280862b657e0348cc5754df8a0f" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use QLocale directly:</source>
          <target state="translated">次の例では、QLocaleを直接使用する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="264b2968512a67703454e35352da4b63b167c995" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use TaskbarButton in QML:</source>
          <target state="translated">以下の例では、QMLでTaskbarButtonを使用する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="c65a096e1eff2ce5fe13f5b9dd6c2e6b51985d3a" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use this function to calibrate a parameter to a slow operation (for example, an iteration count) so that this operation takes at least 250 milliseconds:</source>
          <target state="translated">以下の例では、この関数を使用して、この操作が少なくとも250ミリ秒かかるように、遅い操作(例えば、反復回数)にパラメータを較正する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="bb6211c1a8f1b66d524d0c15c471892e72931709" translate="yes" xml:space="preserve">
          <source>The following example illustrates the lack of name resolution. &lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;QAudioInput::stateChanged&lt;/a&gt;() is declared with an argument of type &quot;&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt;&quot;. Thus, string-based connections must also specify &quot;&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt;&quot;, even if &lt;code&gt;&quot;State&quot;&lt;/code&gt; is already visible. This issue does not apply to functor-based connections because argument types are not part of the connection.</source>
          <target state="translated">次の例は、名前解決の欠如を示しています。&lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;QAudioInput :: stateChanged&lt;/a&gt;（）は、「&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt;」型の引数で宣言されています。したがって、 &lt;code&gt;&quot;State&quot;&lt;/code&gt; がすでに表示されている場合でも、文字列ベースの接続では「&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt;」も指定する必要があります。引数タイプは接続の一部ではないため、この問題はファンクターベースの接続には当てはまりません。</target>
        </trans-unit>
        <trans-unit id="d7b16448b5fe02d71af4908d1f4dd0eecb5b82a0" translate="yes" xml:space="preserve">
          <source>The following example illustrates the lack of name resolution. QAudioInput::stateChanged() is declared with an argument of type &quot;QAudio::State&quot;. Thus, string-based connections must also specify &quot;QAudio::State&quot;, even if &lt;code&gt;&quot;State&quot;&lt;/code&gt; is already visible. This issue does not apply to functor-based connections because argument types are not part of the connection.</source>
          <target state="translated">次の例は、名前解決の欠如を示しています。QAudioInput :: stateChanged（）は、タイプ「QAudio :: State」の引数で宣言されています。したがって、 &lt;code&gt;&quot;State&quot;&lt;/code&gt; がすでに表示されている場合でも、文字列ベースの接続では「QAudio :: State」も指定する必要があります。引数タイプは接続の一部ではないため、この問題はファンクターベースの接続には適用されません。</target>
        </trans-unit>
        <trans-unit id="b6a30af2da96b9d30dccf92a49276b388fa30fab" translate="yes" xml:space="preserve">
          <source>The following example illustrates the problem:</source>
          <target state="translated">以下の例で問題点を説明します。</target>
        </trans-unit>
        <trans-unit id="e9a17ce562e7cbe5caff950348f7ad7a745502c6" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of push and pop transitions with replace().</source>
          <target state="translated">次の例は、replace()での push と pop のトランジションの使用を示しています。</target>
        </trans-unit>
        <trans-unit id="cfbac71634e3a264a3fd7e6117c677184e092d18" translate="yes" xml:space="preserve">
          <source>The following example illustrates this wrong usage in context of a class that may contain invalid data:</source>
          <target state="translated">次の例は、無効なデータを含む可能性のあるクラスのコンテキストでのこの間違った使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="dcdac71fea17b7473a1a9a3d39ce385bbb8c8630" translate="yes" xml:space="preserve">
          <source>The following example illustrates using groups to select items in a model.</source>
          <target state="translated">次の例では、グループを使用してモデル内の項目を選択する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="7f66d896289163fb2467640c8c754a07756db892" translate="yes" xml:space="preserve">
          <source>The following example is a hypothetical role-playing game, which provides two in-app products to the user.</source>
          <target state="translated">以下の例は、仮想的なロールプレイングゲームであり、ユーザーに2つのアプリ内製品を提供しています。</target>
        </trans-unit>
        <trans-unit id="b5339db37fea7f735b72083b63132b397a5289ab" translate="yes" xml:space="preserve">
          <source>The following example keeps the contents within bounds and instead applies a flip effect when flicked over horizontal bounds:</source>
          <target state="translated">次の例では、コンテンツを境界線内に保ち、水平方向の境界線上でフリックしたときにフリップ効果を適用しています。</target>
        </trans-unit>
        <trans-unit id="f9723a0265582b139ed4d722cb7eb6d860782230" translate="yes" xml:space="preserve">
          <source>The following example keeps the contents within bounds and instead applies an opacity effect when dragged over vertical bounds:</source>
          <target state="translated">次の例では、コンテンツを範囲内に保ち、代わりに垂直方向の範囲にドラッグしたときに不透明効果を適用しています。</target>
        </trans-unit>
        <trans-unit id="bf2c39d611daebb3a7d083ce5cdbf30bda0f6e9a" translate="yes" xml:space="preserve">
          <source>The following example keeps the vertical scroll bar always visible:</source>
          <target state="translated">次の例では、垂直スクロールバーを常に表示したままにしています。</target>
        </trans-unit>
        <trans-unit id="8c91ff631fb6780786f32c7615216c30c06c1da6" translate="yes" xml:space="preserve">
          <source>The following example looks for the first element in an XML document and prints the names of all the elements that are its direct children.</source>
          <target state="translated">次の例は、XML 文書の最初の要素を探し、その直接の子であるすべての要素の名前を表示します。</target>
        </trans-unit>
        <trans-unit id="f1ba3897b3a0cb65804b2a61cff86e324662f925" translate="yes" xml:space="preserve">
          <source>The following example makes a copy of the char* returned by data(), but it will corrupt the heap and cause a crash because it does not allocate a byte for the '\0' at the end:</source>
          <target state="translated">次の例では、data()によって返された char*のコピーを作成していますが、最後の '\0' にバイトを割り当てていないため、ヒープを破損させ、クラッシュを引き起こします。</target>
        </trans-unit>
        <trans-unit id="6dc13d874e4a64b5442bd2955b2c504cca69382d" translate="yes" xml:space="preserve">
          <source>The following example maps the image &quot;madewithqt.png&quot; onto the default sphere mesh, and scales the UV coordinates to tile the image on the sphere surface.</source>
          <target state="translated">次の例では、画像「madewithqt.png」をデフォルトの球体メッシュにマッピングし、UV座標をスケーリングして球体表面に画像をタイル状にしています。</target>
        </trans-unit>
        <trans-unit id="51360adb4c2868929c0ce57e1b796e0197fed192" translate="yes" xml:space="preserve">
          <source>The following example moves the Y axis of the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; items while still allowing the &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; to lay the items out as if they had not been transformed:</source>
          <target state="translated">次の例では、&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;四角形の&lt;/a&gt;アイテムのY軸を移動しながら、変換されていないかのように&lt;a href=&quot;qml-qtquick-row&quot;&gt;行&lt;/a&gt;がアイテムをレイアウトできるようにします。</target>
        </trans-unit>
        <trans-unit id="513269504bca412fec4ae0b14763dc29725f9ef1" translate="yes" xml:space="preserve">
          <source>The following example opens a file on the Windows file system residing on a path that contains spaces:</source>
          <target state="translated">次の例では、スペースを含むパス上に存在するWindowsファイルシステム上のファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="75a44a5e4cdd0f72a0334b5df5b53297319455d0" translate="yes" xml:space="preserve">
          <source>The following example plays a WAV file on mouse click.</source>
          <target state="translated">以下の例では、マウスクリックでWAVファイルを再生しています。</target>
        </trans-unit>
        <trans-unit id="557e57b7bb4ac250f8c4178d80ca578777bfbd8d" translate="yes" xml:space="preserve">
          <source>The following example pre-allocates a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; given the array's size for more efficient decoding:</source>
          <target state="translated">次の例では、より効率的なデコードのために、配列のサイズを指定して&lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantListを&lt;/a&gt;事前に割り当てます。</target>
        </trans-unit>
        <trans-unit id="3af0ab72f7032b4ad36c48527b0a1d2fd9d854f0" translate="yes" xml:space="preserve">
          <source>The following example pre-allocates a &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; given the map's size for more efficient decoding:</source>
          <target state="translated">次の例では、より効率的なデコードのために、マップのサイズを指定して&lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMapを&lt;/a&gt;事前に割り当てます。</target>
        </trans-unit>
        <trans-unit id="2c2089a4179fec95c239c0fd321e6f3f78e4fdc9" translate="yes" xml:space="preserve">
          <source>The following example presents how to show a notification message using &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage()&lt;/a&gt;, and how to make use of the &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#messageClicked-signal&quot;&gt;messageClicked()&lt;/a&gt; signal:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage（）&lt;/a&gt;を使用して通知メッセージを表示する方法と、&lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#messageClicked-signal&quot;&gt;messageClicked（）&lt;/a&gt;シグナルを利用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4350a2e8e7ff8ea6cf23ef5c497764c249f3fce0" translate="yes" xml:space="preserve">
          <source>The following example provides a module that can add numbers:</source>
          <target state="translated">以下の例では、数字を追加することができるモジュールを提供しています。</target>
        </trans-unit>
        <trans-unit id="c7429581e102dfb191ef654ae09ac2ab917a51c3" translate="yes" xml:space="preserve">
          <source>The following example provides key navigation for a 2x2 grid of items:</source>
          <target state="translated">次の例では、2x2グリッドのアイテムのキーナビゲーションを提供します。</target>
        </trans-unit>
        <trans-unit id="8953d76100e0ebfa41204e302eb67adc0ebb4de9" translate="yes" xml:space="preserve">
          <source>The following example queries an unlockable product named &quot;myUnlockableProduct&quot; from the external market place.</source>
          <target state="translated">次の例では、「myUnlockableProduct」という名前のアンロック可能な製品を外部のマーケットプレイスからクエリしています。</target>
        </trans-unit>
        <trans-unit id="26616f6353920f8959c6621807f02e6eae71c83a" translate="yes" xml:space="preserve">
          <source>The following example reacts to a failed purchase attempt by calling a custom function to display a message to the user.</source>
          <target state="translated">次の例では、カスタム関数を呼び出してユーザーにメッセージを表示することで、購入の試みに失敗した場合に反応します。</target>
        </trans-unit>
        <trans-unit id="ae005e6ca85a3901fbe2ce93a49742de9aef1aab" translate="yes" xml:space="preserve">
          <source>The following example reads a text file line by line:</source>
          <target state="translated">次の例では、テキストファイルを一行ずつ読み込んでいます。</target>
        </trans-unit>
        <trans-unit id="74bb4ba52c1627192c71b409c394fd691c4b1f14" translate="yes" xml:space="preserve">
          <source>The following example records all signal emissions for the &lt;code&gt;clicked()&lt;/code&gt; signal of a &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;:</source>
          <target state="translated">次の例では、&lt;a href=&quot;qcheckbox&quot;&gt;QCheckBoxのclicked &lt;/a&gt; &lt;code&gt;clicked()&lt;/code&gt; シグナルのすべてのシグナル放出を記録します。</target>
        </trans-unit>
        <trans-unit id="ca61b8bb5c409621b5c9f6a8ba91d4c740f0da48" translate="yes" xml:space="preserve">
          <source>The following example registers a store with three products, two consumable products and one unlockable.</source>
          <target state="translated">次の例では、3つの製品、2つの消耗品、1つのアンロック可能な製品を持つ店舗を登録しています。</target>
        </trans-unit>
        <trans-unit id="3ae624641f1701f62cdd5da464e7815b2f584503" translate="yes" xml:space="preserve">
          <source>The following example removes all (capital, country) pairs where the capital's name ends with &quot;City&quot;:</source>
          <target state="translated">次の例では、首都名の末尾が &quot;City &quot;で終わるすべての(首都、国)ペアを削除しています。</target>
        </trans-unit>
        <trans-unit id="4339d457d4854018d0db03920337e2b2b80ba932" translate="yes" xml:space="preserve">
          <source>The following example retrieves the most common information about the root volume of the system, and prints information about it.</source>
          <target state="translated">次の例では、システムのルートボリュームに関する最も一般的な情報を取得し、その情報を印刷します。</target>
        </trans-unit>
        <trans-unit id="23de676a2cd224d8cb5359853c054281d779a552" translate="yes" xml:space="preserve">
          <source>The following example rotates a Rectangle 45 degress (PI/4):</source>
          <target state="translated">次の例では、長方形を45 degress(PI/4)回転させています。</target>
        </trans-unit>
        <trans-unit id="65333a7cadf6bc62d1d4c4ab90fa342719942d45" translate="yes" xml:space="preserve">
          <source>The following example rotates a Rectangle around its interior point (25, 25):</source>
          <target state="translated">次の例では、矩形をその内側の点(25,25)を中心に回転させています。</target>
        </trans-unit>
        <trans-unit id="71699ef293fec3faa7d2790bcc71f67d088a8177" translate="yes" xml:space="preserve">
          <source>The following example runs &lt;code&gt;gzip&lt;/code&gt; to compress the string &quot;Qt rocks!&quot;, without an event loop:</source>
          <target state="translated">次の例では、 &lt;code&gt;gzip&lt;/code&gt; を実行して、イベントループなしで文字列「Qt rocks！」を圧縮しています。</target>
        </trans-unit>
        <trans-unit id="c5dab2919a061964bc0198aedf576f2c74a4b030" translate="yes" xml:space="preserve">
          <source>The following example runs two number animations in a sequence. The &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; animates to a &lt;code&gt;x&lt;/code&gt; position of 50, then to a &lt;code&gt;y&lt;/code&gt; position of 50.</source>
          <target state="translated">次の例では、2つの数値アニメーションをシーケンスで実行します。&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;矩形は&lt;/a&gt;にアニメーション &lt;code&gt;x&lt;/code&gt; その後に、50の位置 &lt;code&gt;y&lt;/code&gt; 50の位置。</target>
        </trans-unit>
        <trans-unit id="2b29151d13a941955c42ede9b81b3015f9b1ad23" translate="yes" xml:space="preserve">
          <source>The following example scales the X axis of the Rectangle, relative to its interior point (25, 25):</source>
          <target state="translated">以下の例では、矩形のX軸を、その内側の点(25,25)を基準にしてスケールしています。</target>
        </trans-unit>
        <trans-unit id="2ac78949462a2b81a2f63c17daa9554174b55774" translate="yes" xml:space="preserve">
          <source>The following example sets a dark Holo theme, and the result can be seen in the screenshot above.</source>
          <target state="translated">以下の例では、暗いHoloテーマを設定し、その結果を上のスクリーンショットで確認することができます。</target>
        </trans-unit>
        <trans-unit id="2449b58c1a1ed6989f26c09f1a970ba1e971829c" translate="yes" xml:space="preserve">
          <source>The following example sets an Australian locale:</source>
          <target state="translated">次の例では、オーストラリアのロケールを設定します。</target>
        </trans-unit>
        <trans-unit id="b0cddd187310ec0bc7df4109b3cda105ff8c31cd" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;a href=&quot;qml-qt-labs-folderlistmodel-folderlistmodel&quot;&gt;FolderListModel&lt;/a&gt; being used to provide a list of QML files in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;でQMLファイルのリストを提供するために使用されている&lt;a href=&quot;qml-qt-labs-folderlistmodel-folderlistmodel&quot;&gt;FolderListModelを&lt;/a&gt;示しています。</target>
        </trans-unit>
        <trans-unit id="b5f1c749b4a3dac2e8c564c65b83d1ffe025af38" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; containing three elements, with the roles &quot;name&quot; and &quot;cost&quot;.</source>
          <target state="translated">次の例は、ロールが「name」と「cost」の3つの要素を含む&lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt;を示しています。</target>
        </trans-unit>
        <trans-unit id="2b735c5f3c12a80dee8eab5f21df3e87ebe43489" translate="yes" xml:space="preserve">
          <source>The following example shows a Flipable item that flips whenever it is clicked, rotating about the y-axis.</source>
          <target state="translated">次の例は、クリックするたびに反転し、y軸を中心に回転するFlipableアイテムを示しています。</target>
        </trans-unit>
        <trans-unit id="7fdec566f2c2804382d66f46214f50172b1d2637" translate="yes" xml:space="preserve">
          <source>The following example shows a Flow item containing a number of &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; child items. These are arranged in a similar way to those shown in the screenshots.</source>
          <target state="translated">次の例は、多数の&lt;a href=&quot;qml-qtquick-text&quot;&gt;テキストの&lt;/a&gt;子アイテムを含むフローアイテムを示しています。これらは、スクリーンショットに示されているのと同じように配置されています。</target>
        </trans-unit>
        <trans-unit id="c29c72591cae91b2f007f4af64f703045b27ab75" translate="yes" xml:space="preserve">
          <source>The following example shows a FolderListModel being used to provide a list of QML files in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;でQMLファイルのリストを提供するために使用されているFolderListModelを示しています。</target>
        </trans-unit>
        <trans-unit id="f609049f1304621e97ca95e7578d059e6e61c5e7" translate="yes" xml:space="preserve">
          <source>The following example shows a ListModel containing three elements, with the roles &quot;name&quot; and &quot;cost&quot;.</source>
          <target state="translated">以下の例では、「name」と「cost」というロールを持つ3つの要素を含むListModelを示しています。</target>
        </trans-unit>
        <trans-unit id="35c6f6b88c8eb63ab62f818c0c0e0aa7d4e4f70c" translate="yes" xml:space="preserve">
          <source>The following example shows a URL where the scheme is &quot;ftp&quot;:</source>
          <target state="translated">以下の例では、スキームが &quot;ftp &quot;であるURLを示しています。</target>
        </trans-unit>
        <trans-unit id="76b891fc64d366955a188d498567a1d26d2315bc" translate="yes" xml:space="preserve">
          <source>The following example shows a chord that will be triggered by pressing the A and S keys together with a tolerance of 10 miliseconds between presses.</source>
          <target state="translated">以下の例では、AとSのキーを押すことでコードがトリガーされ、押す間隔は10ミリ秒となっています。</target>
        </trans-unit>
        <trans-unit id="acea721b04cb6128b0fcbe58f9f5c4f78d1adcc7" translate="yes" xml:space="preserve">
          <source>The following example shows a contrived example of a material where we want to add a base color map to a material at run-time. Note that we don't actually use the MaterialRedExtended component in this case, it's purely defined for the shadergen tool to generated the needed material shaders that will be need at run-time to set the map on the &lt;code&gt;redMaterial&lt;/code&gt; material.</source>
          <target state="translated">次の例は、実行時にベースカラーマップをマテリアルに追加するマテリアルの考案された例を示しています。この場合、実際にはMaterialRedExtendedコンポーネントを使用しないことに注意してください。これは、 &lt;code&gt;redMaterial&lt;/code&gt; マテリアルにマップを設定するために実行時に必要となる、shadergenツールが必要なマテリアルシェーダーを生成するために純粋に定義されています。</target>
        </trans-unit>
        <trans-unit id="6d6a86b66009ed3f00b52bcf4006d9a598bc33c7" translate="yes" xml:space="preserve">
          <source>The following example shows a datetime being parsed from a datetime string in a certain format using the default locale:</source>
          <target state="translated">次の例は、デフォルトのロケールを使用して特定の形式の datetime 文字列から datetime を解析したものです。</target>
        </trans-unit>
        <trans-unit id="04821c7da1a7b444db6dab2915f87836eaca6046" translate="yes" xml:space="preserve">
          <source>The following example shows a delegate that animates a spinning rectangle. When it is pooled, the animation is temporarily paused:</source>
          <target state="translated">次の例は、回転する長方形をアニメーションさせるデリゲートを示しています。プールされると、アニメーションは一時的に一時停止します。</target>
        </trans-unit>
        <trans-unit id="309db721a234dfdcc2e1834805c969dcecd4a034" translate="yes" xml:space="preserve">
          <source>The following example shows a number formatted for the German locale:</source>
          <target state="translated">次の例は、ドイツ語ロケール用にフォーマットされた数値を示しています。</target>
        </trans-unit>
        <trans-unit id="7fd59d1748028f68695a01a229f4ca317f27ef52" translate="yes" xml:space="preserve">
          <source>The following example shows a repeater used with a Grid item to arrange a set of Rectangle items. The Repeater item creates a series of 24 rectangles for the Grid item to position in a 5 by 5 arrangement.</source>
          <target state="translated">次の例は、一連の矩形アイテムを配置するためにグリッド アイテムと一緒に使用されるリピーターを示しています。リピータアイテムは、グリッドアイテムが 5 x 5 で配置されるように 24 個の長方形を連続して作成します。</target>
        </trans-unit>
        <trans-unit id="a5da7652fa9d6b03fcb7a7bf452645d018e0270a" translate="yes" xml:space="preserve">
          <source>The following example shows a simple &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; used to receive updates every second and print the longitude and latitude out to the console.</source>
          <target state="translated">次の例は、毎秒更新を受け取り、経度と緯度をコンソールに出力するために使用される単純な&lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSourceを&lt;/a&gt;示しています。</target>
        </trans-unit>
        <trans-unit id="43949d4305f186fd39d8b548154566aeeee5ab90" translate="yes" xml:space="preserve">
          <source>The following example shows a simple Location object being declared:</source>
          <target state="translated">以下の例では、単純な Location オブジェクトが宣言されています。</target>
        </trans-unit>
        <trans-unit id="8382a28721e964c363d7c6e36c38fd706b4d0bbe" translate="yes" xml:space="preserve">
          <source>The following example shows a simple PositionSource used to receive updates every second and print the longitude and latitude out to the console.</source>
          <target state="translated">次の例は、毎秒更新を受信し、経度と緯度をコンソールに出力するために使用されるシンプルなPositionSourceを示しています。</target>
        </trans-unit>
        <trans-unit id="aff7f146857fb04cfd88daa9517c3c48e9fbfd9f" translate="yes" xml:space="preserve">
          <source>The following example shows a simple usage of the &lt;a href=&quot;qml-qt-labs-lottieqt-lottieanimation&quot;&gt;LottieAnimation&lt;/a&gt; type</source>
          <target state="translated">次の例は、&lt;a href=&quot;qml-qt-labs-lottieqt-lottieanimation&quot;&gt;LottieAnimation&lt;/a&gt;タイプの簡単な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="ce77675d624900efa11f89627f8708fa2beee61d" translate="yes" xml:space="preserve">
          <source>The following example shows a simple usage of the LottieAnimation type</source>
          <target state="translated">次の例は、LottieAnimation 型の簡単な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="29ec72f691cedce3f675dd46cf9e9937e861e5c0" translate="yes" xml:space="preserve">
          <source>The following example shows a small view onto a large image in which the user can drag or flick the image in order to view different parts of it.</source>
          <target state="translated">次の例では、大きな画像の上に小さなビューを表示し、ユーザーが画像をドラッグしたり、フリックしたりして、画像の異なる部分を表示することができます。</target>
        </trans-unit>
        <trans-unit id="8f2a4e71f1ccd8626eaf5fc5b14150d5c438326b" translate="yes" xml:space="preserve">
          <source>The following example shows a valid authority string:</source>
          <target state="translated">次の例では、有効な権限文字列を示しています。</target>
        </trans-unit>
        <trans-unit id="a2a6ab7cc66940b6c8eb13ba102a4e9339ff5a1f" translate="yes" xml:space="preserve">
          <source>The following example shows an instantiation of the &lt;a href=&quot;location-plugin-here&quot;&gt;HERE&lt;/a&gt; plugin with a mapping API</source>
          <target state="translated">次の例は、マッピングAPIを使用した&lt;a href=&quot;location-plugin-here&quot;&gt;HERE&lt;/a&gt;プラグインのインスタンス化を示しています</target>
        </trans-unit>
        <trans-unit id="12b798f1249e131b3ed48ec80f9c488a0458aef6" translate="yes" xml:space="preserve">
          <source>The following example shows an instantiation of the &lt;a href=&quot;location-plugin-here#&quot;&gt;HERE&lt;/a&gt; plugin with a mapping API</source>
          <target state="translated">次の例は、マッピングAPIを使用した&lt;a href=&quot;location-plugin-here#&quot;&gt;HERE&lt;/a&gt;プラグインのインスタンス化を示しています</target>
        </trans-unit>
        <trans-unit id="2c4621627939ad17a4d97d9a89959aa825e0142b" translate="yes" xml:space="preserve">
          <source>The following example shows an sequence that will be triggered by pressing the G, D, and J keys in that order with a maximum time between key presses of 1 second and overall maximum input time of 3 seconds.</source>
          <target state="translated">以下の例では、G、D、J の順にキーを押すことでトリガされるシーケンスを、キーを押す間の最大時間が 1 秒、全体の最大入力時間が 3 秒の場合を示しています。</target>
        </trans-unit>
        <trans-unit id="26f80249134ce7c7586cdfb578ccc9192ce07be8" translate="yes" xml:space="preserve">
          <source>The following example shows how a translation is obtained for the class shown in the previous section:</source>
          <target state="translated">以下の例では、前項で示したクラスに対して、どのようにして翻訳が得られるかを示しています。</target>
        </trans-unit>
        <trans-unit id="635a003629be3753abd2a9f44f4221e7c4586718" translate="yes" xml:space="preserve">
          <source>The following example shows how the general onPressed handler can be used to test for a certain key; in this case, the left cursor key:</source>
          <target state="translated">以下の例では、一般的な onPressed ハンドラを使用して特定のキー(この場合は左カーソルキー)をテストする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="5247005db1331dfb91ee0bc6e4fcd906b8a93bd0" translate="yes" xml:space="preserve">
          <source>The following example shows how the volume value from a UI volume control can be converted so that the perceived increase in loudness is the same when increasing the volume control from 0.2 to 0.3 as it is from 0.5 to 0.6:</source>
          <target state="translated">次の例では、UIボリュームコントロールのボリューム値を変換して、ボリュームコントロールを0.2から0.3に増加させたときの知覚される音量の増加が、0.5から0.6に増加させたときの知覚される音量の増加と同じになるようにしています。</target>
        </trans-unit>
        <trans-unit id="40a09f328ced922ccf3392016879abf01933b29a" translate="yes" xml:space="preserve">
          <source>The following example shows how to access all &lt;a href=&quot;qml-qtlocation-contactdetail&quot;&gt;ContactDetails&lt;/a&gt; and print them to the console:</source>
          <target state="translated">次の例は、すべての&lt;a href=&quot;qml-qtlocation-contactdetail&quot;&gt;ContactDetails&lt;/a&gt;にアクセスしてコンソールに出力する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="fc227a757e94eb8762456b1d27f63af49693be1b" translate="yes" xml:space="preserve">
          <source>The following example shows how to access all &lt;a href=&quot;qml-qtlocation-placeattribute&quot;&gt;PlaceAttributes&lt;/a&gt; and print them to the console:</source>
          <target state="translated">次の例は、すべての&lt;a href=&quot;qml-qtlocation-placeattribute&quot;&gt;PlaceAttribute&lt;/a&gt;にアクセスしてコンソールに出力する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="5413e88bcea080cf4e298a541c62b1a2064d5245" translate="yes" xml:space="preserve">
          <source>The following example shows how to apply the effect.</source>
          <target state="translated">以下の例では、効果の適用方法を説明します。</target>
        </trans-unit>
        <trans-unit id="ae840d84d69477cf08478ae7efb8502bd6e6200c" translate="yes" xml:space="preserve">
          <source>The following example shows how to assign and modify an attribute:</source>
          <target state="translated">以下の例では、属性を割り当てて変更する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="28eaca1949f768a0601947b34299c6cb84d7d6f4" translate="yes" xml:space="preserve">
          <source>The following example shows how to convert the volume value from a slider control before passing it to a &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt;. As a result, the perceived increase in volume is the same when increasing the volume slider from 20 to 30 as it is from 50 to 60:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt;に渡す前にスライダーコントロールからボリューム値を変換する方法を示しています。その結果、ボリュームスライダーを20から30に増やした場合、50から60に増えたときに、知覚されるボリュームの増加は同じになります。</target>
        </trans-unit>
        <trans-unit id="d993d04f08f9f2d93d82ac20fbb675c7742c844c" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a custom Rectangle component, in which the color property always needs to be specified.</source>
          <target state="translated">次の例では、カラー プロパティを常に指定する必要があるカスタム Rectangle コンポーネントを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c516f3c8f4a099a97af91fc2aacc905748858c84" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a model from C++ with multiple columns:</source>
          <target state="translated">以下の例では、C++から複数の列を持つモデルを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3056b17baa68700189f119c2636a05704e1af4eb" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a system tray icon, and how to make use of the &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#activated-signal&quot;&gt;activated()&lt;/a&gt; signal:</source>
          <target state="translated">次の例は、システムトレイアイコンを作成する方法と、&lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#activated-signal&quot;&gt;activated（）&lt;/a&gt;シグナルを利用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="e6bf8c2f4e2e37ae0996d21e7258185d6cc0ff8d" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an OSM plugin instance with parameters supplied for an useragent, and if necessary, a custom server url plus the corresponding copyright information for the tile provider. Additionally, it is possible to choose another routing server than the public osrm one.</source>
          <target state="translated">以下の例では、ユーザーエージェントに与えられたパラメータと、必要に応じてカスタムサーバーのURLとタイルプロバイダの対応する著作権情報を使ってOSMプラグインのインスタンスを作成する方法を示しています。さらに、公開されている osrm 以外のルーティングサーバを選択することも可能です。</target>
        </trans-unit>
        <trans-unit id="2b62dc5ac03aedab89d662b46b331b3630f88864" translate="yes" xml:space="preserve">
          <source>The following example shows how to create and display a supplier in QML:</source>
          <target state="translated">以下の例では、QMLでサプライヤーを作成して表示する方法を示します。</target>
        </trans-unit>
        <trans-unit id="2fc7495739a5a95d5cf16a0ee5b221f23f530a9c" translate="yes" xml:space="preserve">
          <source>The following example shows how to display a list of available cameras. The user can change the active camera by selecting one of the items in the list.</source>
          <target state="translated">次の例は、使用可能なカメラのリストを表示する方法を示しています。ユーザーは、リスト内の項目のいずれかを選択することで、アクティブなカメラを変更することができます。</target>
        </trans-unit>
        <trans-unit id="16b34320057472b0dde8b3849d29b59e747a8488" translate="yes" xml:space="preserve">
          <source>The following example shows how to display all attributes in a list:</source>
          <target state="translated">次の例では、すべての属性をリストで表示する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="e5fbe76f534d0e808fe40a4ed2c5a32761df25d4" translate="yes" xml:space="preserve">
          <source>The following example shows how to display editorials for a place:</source>
          <target state="translated">以下の例では、ある場所の社説を表示する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="05fbaf0b8a86c660a68f2e0b43b08ac75af52676" translate="yes" xml:space="preserve">
          <source>The following example shows how to display images for a place:</source>
          <target state="translated">以下の例では、場所の画像を表示する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a642063a5cab284a1cd2f2e083c0d0076d92331b" translate="yes" xml:space="preserve">
          <source>The following example shows how to display information about the user who submitted an editorial:</source>
          <target state="translated">以下の例では、社説を投稿したユーザーの情報を表示する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="0e44540662fff7cc82086313814519a43aa5a86d" translate="yes" xml:space="preserve">
          <source>The following example shows how to find a list of child &lt;code&gt;QWidget&lt;/code&gt;s of the specified &lt;code&gt;parentWidget&lt;/code&gt; named &lt;code&gt;widgetname&lt;/code&gt;:</source>
          <target state="translated">次の例は、 &lt;code&gt;widgetname&lt;/code&gt; という名前の指定された &lt;code&gt;parentWidget&lt;/code&gt; の子 &lt;code&gt;QWidget&lt;/code&gt; のリストを見つける方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3bcccc6565c8fbfa3abbb910d5f043a0a604673c" translate="yes" xml:space="preserve">
          <source>The following example shows how to get the volume on which the application is located. It is recommended to always check that the volume is ready and valid.</source>
          <target state="translated">次の例では、アプリケーションが配置されているボリュームを取得する方法を示しています。ボリュームが準備ができていて有効であることを常に確認することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="d44a659e37217ad9e85507221d339e6551ae1663" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a QML file from a network resource. After creating the &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt;, it tests whether the component is loading. If it is, it connects to the &lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent::statusChanged&lt;/a&gt;() signal and otherwise calls the &lt;code&gt;continueLoading()&lt;/code&gt; method directly. Note that &lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent::isLoading&lt;/a&gt;() may be false for a network component if the component has been cached and is ready immediately.</source>
          <target state="translated">次の例は、ネットワークリソースからQMLファイルをロードする方法を示しています。&lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt;を作成した後、コンポーネントがロードされているかどうかをテストします。ある場合は、&lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent :: statusChanged&lt;/a&gt;（）シグナルに接続し、それ以外の場合は、 &lt;code&gt;continueLoading()&lt;/code&gt; メソッドを直接呼び出します。&lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent :: isLoading&lt;/a&gt;（）は、ネットワークコンポーネントがキャッシュされ、すぐに準備ができている場合、falseになる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2369875d7c086881917a795ee8d15667fceb9083" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a QML file from a network resource. After creating the QQmlComponent, it tests whether the component is loading. If it is, it connects to the &lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent::statusChanged&lt;/a&gt;() signal and otherwise calls the &lt;code&gt;continueLoading()&lt;/code&gt; method directly. Note that &lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent::isLoading&lt;/a&gt;() may be false for a network component if the component has been cached and is ready immediately.</source>
          <target state="translated">次の例は、ネットワークリソースからQMLファイルを読み込む方法を示しています。 QQmlComponentを作成した後、コンポーネントがロードされているかどうかをテストします。そうである場合は、&lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent :: statusChanged&lt;/a&gt;（）シグナルに接続し、それ以外の場合は、 &lt;code&gt;continueLoading()&lt;/code&gt; メソッドを直接呼び出します。&lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent :: isLoading&lt;/a&gt;（）は、コンポーネントがキャッシュされてすぐに準備ができている場合、ネットワークコンポーネントに対してfalseになる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8a36bfcd7a4914761e42ed9ee809b00c63e2f6d2" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a XML Schema file from the network and test whether it is a valid schema document:</source>
          <target state="translated">次の例では、ネットワークから XML スキーマファイルをロードして、それが有効なスキーマ文書であるかどうかをテストする方法を示します。</target>
        </trans-unit>
        <trans-unit id="073d2ff96ccfe9b01a399d4575a630092408ec64" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a XML Schema from a local file, check whether it is a valid schema document and use it for validation of an XML instance document:</source>
          <target state="translated">次の例では、ローカルファイルから XML スキーマをロードし、それが有効なスキーマ文書であるかどうかをチェックし、XML インスタンス文書の検証に使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3c5f311ecc00834b657e4e01f2eb021589723b0b" translate="yes" xml:space="preserve">
          <source>The following example shows how to override the shortcut underline behavior on any platform:</source>
          <target state="translated">次の例は、任意のプラットフォームでショートカットのアンダーラインの動作をオーバーライドする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="846cedadc24d199bdd626e60799d16ba56c8b0ea" translate="yes" xml:space="preserve">
          <source>The following example shows how to set a simple &lt;code&gt;columnWidthProvider&lt;/code&gt; together with a timer that modifies the values the function returns. When the array is modified, &lt;a href=&quot;qml-qtquick-tableview#forceLayout-method&quot;&gt;forceLayout&lt;/a&gt; is called to let the changes take effect:</source>
          <target state="translated">次の例は、関数が返す値を変更するタイマーと共に単純な &lt;code&gt;columnWidthProvider&lt;/code&gt; を設定する方法を示しています。配列が変更されると、&lt;a href=&quot;qml-qtquick-tableview#forceLayout-method&quot;&gt;forceLayout&lt;/a&gt;が呼び出され、変更が有効になります。</target>
        </trans-unit>
        <trans-unit id="cc792c7de6358a0c1af7b1247bf6bd30b2de6e84" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt; to search for Pizza restaurants in close proximity of a given position. A &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; are provided to the model and &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is used to perform a lookup query. Note that the model does not incrementally fetch search results, but rather performs a single fetch when &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is run. The &lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;count&lt;/a&gt; is set to the number of search results returned during the fetch.</source>
          <target state="translated">次の例は、&lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt;を使用して、特定の位置の近くにあるピザレストランを検索する方法を示しています。A &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;検索語&lt;/a&gt;と&lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchAreaは&lt;/a&gt;モデルとに設けられている&lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;（）更新&lt;/a&gt;検索クエリを実行するために使用されます。モデルは検索結果を段階的にフェッチするのではなく、&lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update（）の&lt;/a&gt;実行時に単一のフェッチを実行することに注意してください。&lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;カウントは&lt;/a&gt;フェッチ中に返される検索結果の数に設定されています。</target>
        </trans-unit>
        <trans-unit id="7ef6ea04ebb5130c4f1a824f9395a8fe545052b6" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel&quot;&gt;PlaceSearchSuggestionModel&lt;/a&gt; to get suggested search terms from a partial search term. The &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; is set to match what would be used to perform the actual place search with &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel&quot;&gt;PlaceSearchSuggestionModel&lt;/a&gt;を使用して、部分的な検索用語から推奨検索用語を取得する方法を示しています。&lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchAreaは、&lt;/a&gt;実際の場所検索を実行するために使用されるものと一致するように設定されている&lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModelを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d40414549d0b47b6d2025dfa9ab62f6871b4eaf4" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the PlaceSearchModel to search for Pizza restaurants in close proximity of a given position. A &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; are provided to the model and &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is used to perform a lookup query. Note that the model does not incrementally fetch search results, but rather performs a single fetch when &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is run. The &lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;count&lt;/a&gt; is set to the number of search results returned during the fetch.</source>
          <target state="translated">次の例は、PlaceSearchModelを使用して、特定の位置のすぐ近くにあるピザレストランを検索する方法を示しています。A&lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;検索語&lt;/a&gt;と&lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchAreaは&lt;/a&gt;モデルとに設けられている&lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;（）更新&lt;/a&gt;検索クエリを実行するために使用されます。モデルは検索結果を段階的にフェッチするのではなく、&lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update（）の&lt;/a&gt;実行時に単一のフェッチを実行することに注意してください。&lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;カウントは&lt;/a&gt;フェッチ中に返される検索結果の数に設定されています。</target>
        </trans-unit>
        <trans-unit id="7742f7b6e66380a5b0571853a40bfa8c4b70b1ff" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the PlaceSearchSuggestionModel to get suggested search terms from a partial search term. The &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; is set to match what would be used to perform the actual place search with &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt;.</source>
          <target state="translated">次の例は、PlaceSearchSuggestionModelを使用して、部分的な検索語から提案された検索語を取得する方法を示しています。&lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchAreaは、&lt;/a&gt;実際の場所検索を実行するために使用されるものと一致するように設定されている&lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModelを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e9a931dbb6bb1f07deb53f729e1a47f1ee757a30" translate="yes" xml:space="preserve">
          <source>The following example shows how we use a &lt;a href=&quot;qml-qtquick-controls-groupbox&quot;&gt;GroupBox&lt;/a&gt;:</source>
          <target state="translated">次の例は、&lt;a href=&quot;qml-qtquick-controls-groupbox&quot;&gt;GroupBoxの&lt;/a&gt;使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="6d4ea37f9574adf9088498d74c319c969076f760" translate="yes" xml:space="preserve">
          <source>The following example shows how we use a GroupBox:</source>
          <target state="translated">次の例では、GroupBoxを使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="80a52dc554953c81dba84abb93c3955bb91cbaea" translate="yes" xml:space="preserve">
          <source>The following example shows how you can decide which animation to use at runtime:</source>
          <target state="translated">以下の例では、実行時に使用するアニメーションを決定する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="1a7597d384814347a73af63baa5e9d663e3c42cb" translate="yes" xml:space="preserve">
          <source>The following example shows mirroring in action. The &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; below is specified as being anchored to the left of its parent. However, since mirroring has been enabled, the anchor is horizontally reversed and it is now anchored to the right. Also, since items in a &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; are positioned from left to right by default, they are now positioned from right to left instead, as demonstrated by the numbering and opacity of the items:</source>
          <target state="translated">次の例は、ミラーリングの動作を示しています。下の&lt;a href=&quot;qml-qtquick-row&quot;&gt;行&lt;/a&gt;は、その親の左側にアンカーされていると指定されています。ただし、ミラーリングが有効になっているため、アンカーは水平方向に反転され、右側にアンカーされます。中のアイテム以来、また、&lt;a href=&quot;qml-qtquick-row&quot;&gt;行は&lt;/a&gt;デフォルトで左から右に配置され、それらは今項目の番号と不透明度によって実証されるように、代わりに右から左へ配置されています。</target>
        </trans-unit>
        <trans-unit id="d402059d8c36dbe819b5315607e7dedef23f1486" translate="yes" xml:space="preserve">
          <source>The following example shows rectangles with colors specified using hexadecimal and named color notation:</source>
          <target state="translated">次の例は、16進数と名前付き色表記を使って指定された色を持つ長方形を示しています。</target>
        </trans-unit>
        <trans-unit id="4db5dc64a890badf646778767b76ad7a05941665" translate="yes" xml:space="preserve">
          <source>The following example shows the current date and time formatted for the German locale:</source>
          <target state="translated">次の例は、現在の日付と時刻をドイツ語ロケールでフォーマットしたものです。</target>
        </trans-unit>
        <trans-unit id="91973759e9020a30186684dc3cfb208e67a791cf" translate="yes" xml:space="preserve">
          <source>The following example shows the current date first being formatted as a date string using the default locale and format, then parsed back again in the same manner:</source>
          <target state="translated">以下の例では、現在の日付が最初にデフォルトのロケールとフォーマットを使用して日付文字列としてフォーマットされ、その後同じ方法でパースされています。</target>
        </trans-unit>
        <trans-unit id="e2034e11544cdd6176227a3df875148e55d8b37e" translate="yes" xml:space="preserve">
          <source>The following example shows the current date formatted for the German locale:</source>
          <target state="translated">以下の例は、ドイツ語ロケールでフォーマットされた現在の日付を示しています。</target>
        </trans-unit>
        <trans-unit id="75e1192360977d06c3e3b821ec38bc0893139cf7" translate="yes" xml:space="preserve">
          <source>The following example shows the current time first being formatted as a time string using the default locale and a short format, then parsed back again in the same manner:</source>
          <target state="translated">以下の例では、現在の時刻が最初にデフォルトのロケールと短いフォーマットを使って時間文字列としてフォーマットされ、その後同じようにパースされて戻ってきます。</target>
        </trans-unit>
        <trans-unit id="40a42a1fa521820679a6a12d2f49c105b5e50386" translate="yes" xml:space="preserve">
          <source>The following example shows the current time formatted for the German locale:</source>
          <target state="translated">次の例は、現在の時刻をドイツ語ロケールでフォーマットしたものです。</target>
        </trans-unit>
        <trans-unit id="699c1bfd3991f79158875ed35e9879ade07659af" translate="yes" xml:space="preserve">
          <source>The following example shows the definition of a simple list model defined in a file called &lt;code&gt;ContactModel.qml&lt;/code&gt;:</source>
          <target state="translated">次の例は、 &lt;code&gt;ContactModel.qml&lt;/code&gt; というファイルで定義された単純なリストモデルの定義を示しています。</target>
        </trans-unit>
        <trans-unit id="d4399ac1c1dfdda6f023798e16e40576fb70a035" translate="yes" xml:space="preserve">
          <source>The following example shows the effects of some of the common properties on a Rectangle item, which in this case is used to create a square:</source>
          <target state="translated">次の例では、Rectangle アイテムに共通のプロパティのいくつかの効果を示していますが、この場合は正方形を作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2ab771fc92edf70f704ba18229f2af0b112f72fc" translate="yes" xml:space="preserve">
          <source>The following example shows the minimum functionality that is required from an input method:</source>
          <target state="translated">次の例では、入力メソッドに必要な最低限の機能を示しています。</target>
        </trans-unit>
        <trans-unit id="657e082947a75eb85cbfdaf98920e1b73e69de74" translate="yes" xml:space="preserve">
          <source>The following example shows the simplest usage of the Image type.</source>
          <target state="translated">次の例は、Image型の最も簡単な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="13a7da189b3000f41bde0f4913207873a9718d60" translate="yes" xml:space="preserve">
          <source>The following example shows the various effects of stacking order.</source>
          <target state="translated">以下の例では、積み重ねの順序による様々な効果を示しています。</target>
        </trans-unit>
        <trans-unit id="aae92e9d1523a16c5af60bcecb8a61911b8f6cf3" translate="yes" xml:space="preserve">
          <source>The following example snippet illustrates how to use a page-specific toolbar header and an application-wide tabbar footer.</source>
          <target state="translated">次の例は、ページ固有のツールバーヘッダーとアプリケーション全体のタブバーフッターを使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c9a98dc3e96afa2d989765279ae26f84f0b1874e" translate="yes" xml:space="preserve">
          <source>The following example specifies a left margin:</source>
          <target state="translated">以下の例では、左マージンを指定しています。</target>
        </trans-unit>
        <trans-unit id="0ee51518ff0c9843299f1c6d89ee47fbdd0feb39" translate="yes" xml:space="preserve">
          <source>The following example triggers the copy action and therefore copies any selected text to the clipboard.</source>
          <target state="translated">次の例では、コピーアクションをトリガーして、選択したテキストをクリップボードにコピーしています。</target>
        </trans-unit>
        <trans-unit id="0aacab094605a7af2dd1ead22c94d8c8889b02bc" translate="yes" xml:space="preserve">
          <source>The following example uses a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; in a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; that changes the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; color to red when clicked:</source>
          <target state="translated">次の例では、&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;クリックさ&lt;/a&gt;れたときに&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;四角形の&lt;/a&gt;色を赤に変更する&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;四角形の&lt;/a&gt;MouseAreaを使用します。</target>
        </trans-unit>
        <trans-unit id="8c7a6609d9d7eaced8bfaeda7fa244cae300e7a0" translate="yes" xml:space="preserve">
          <source>The following example uses a MouseArea in a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; that changes the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; color to red when clicked:</source>
          <target state="translated">次の例は、でMouseArea使用&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;長方形&lt;/a&gt;変化&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;矩形&lt;/a&gt;クリックすると赤色に色を：</target>
        </trans-unit>
        <trans-unit id="19b089035669ef5f00d4245d925a803302d7123a" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;application&lt;/code&gt; object to indicate whether the application is currently active:</source>
          <target state="translated">次の例では、 &lt;code&gt;application&lt;/code&gt; オブジェクトを使用して、アプリケーションが現在アクティブかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="40190e2cf0e8e9af68d9fe47a61583c30e1b4a86" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;styleHints&lt;/code&gt; object to determine whether an item should gain focus on mouse press or touch release:</source>
          <target state="translated">次の例では、 &lt;code&gt;styleHints&lt;/code&gt; オブジェクトを使用して、アイテムがマウスプレスまたはタッチリリースにフォーカスする必要があるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="6007660c0fc54a99e01a2667ceda805504e61629" translate="yes" xml:space="preserve">
          <source>The following example uses the attached &lt;a href=&quot;qml-qtquick-controls2-overlay#overlay-attached-prop&quot;&gt;Overlay.overlay&lt;/a&gt; property to position a popup in the center of the window, despite the position of the button that opens the popup:</source>
          <target state="translated">次の例では、添付されている&lt;a href=&quot;qml-qtquick-controls2-overlay#overlay-attached-prop&quot;&gt;Overlay.overlay&lt;/a&gt;プロパティを使用して、ポップアップを開くボタンの位置に関係なく、ポップアップをウィンドウの中央に配置しています。</target>
        </trans-unit>
        <trans-unit id="ef295c974253d3e55c06abdea02bb3183b763c4d" translate="yes" xml:space="preserve">
          <source>The following example uses the three qdoc ditamap commands described above.</source>
          <target state="translated">以下の例では、上記の3つのqdoc ditamapコマンドを使用しています。</target>
        </trans-unit>
        <trans-unit id="c6ac202097907723afb4e68e938ec64238942f6b" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for a connection to be closed:</source>
          <target state="translated">以下の例では、接続が終了するまで最大1秒待ちます。</target>
        </trans-unit>
        <trans-unit id="64c20d1663d02daeba2c1eb8c2a836f59d601afa" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for a connection to be established:</source>
          <target state="translated">以下の例では、接続が確立されるまで最大1秒待ちます。</target>
        </trans-unit>
        <trans-unit id="87cf9a7f6f1a1e01b768f9e4a5fdd2736d6bba14" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for the session to be opened:</source>
          <target state="translated">以下の例では、セッションが開かれるまで最大1秒待ちます。</target>
        </trans-unit>
        <trans-unit id="1763625c312b139f41a7fe67fde88b799b2ec9bd" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for the socket to be encrypted:</source>
          <target state="translated">以下の例では、ソケットが暗号化されるまで最大1秒待ちます。</target>
        </trans-unit>
        <trans-unit id="b7d9a7534f49cc940990ec06d6d96bcff879e558" translate="yes" xml:space="preserve">
          <source>The following example will allow you to position an item at the end of the last line:</source>
          <target state="translated">以下の例では、最後の行の最後に項目を配置することができます。</target>
        </trans-unit>
        <trans-unit id="e42e650b927fe91957f007cca3fc9de3d0f5b0a9" translate="yes" xml:space="preserve">
          <source>The following example will load and append the contents of a file to the stream:</source>
          <target state="translated">次の例では、ファイルの内容をロードしてストリームに追加します。</target>
        </trans-unit>
        <trans-unit id="88b89af013c9f6ec9af6073da52fc58fc00fe1d6" translate="yes" xml:space="preserve">
          <source>The following example will run all tests in &lt;code&gt;MyTestObject&lt;/code&gt;:</source>
          <target state="translated">次の例では、 &lt;code&gt;MyTestObject&lt;/code&gt; のすべてのテストを実行します。</target>
        </trans-unit>
        <trans-unit id="d544ebc78170d4bda8affc998d490d592d025d2d" translate="yes" xml:space="preserve">
          <source>The following example will show a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;, &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;, and &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; side by side, with two splitter handles:</source>
          <target state="translated">次の例では、2つのスプリッターハンドルを使用して、&lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;、&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;、および&lt;a href=&quot;qtextedit&quot;&gt;QTextEditを&lt;/a&gt;並べて表示します。</target>
        </trans-unit>
        <trans-unit id="52257cae710a3a49027ee4352ba328227688e382" translate="yes" xml:space="preserve">
          <source>The following example writes a number to a byte array then returns it.</source>
          <target state="translated">次の例では、バイト配列に数値を書き込み、それを返します。</target>
        </trans-unit>
        <trans-unit id="298684f1412c687c1d892df6f0dca627b5bdf746" translate="yes" xml:space="preserve">
          <source>The following example writes an arbitrary &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to the stream:</source>
          <target state="translated">次の例では、任意の&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;をストリームに書き込みます。</target>
        </trans-unit>
        <trans-unit id="fcfc03cff79fe71d0b58c8b3c7a55b1cb8641019" translate="yes" xml:space="preserve">
          <source>The following example writes an empty map to a file:</source>
          <target state="translated">次の例では、空のマップをファイルに書き込みます。</target>
        </trans-unit>
        <trans-unit id="7fb00fcc4df747f672853aab6b9a17fed718e236" translate="yes" xml:space="preserve">
          <source>The following example writes to elements of a reference sequence in a tight loop, resulting in bad performance:</source>
          <target state="translated">次の例では、タイトループで参照シーケンスの要素に書き込みを行っており、パフォーマンスが悪くなっています。</target>
        </trans-unit>
        <trans-unit id="1a50561b624bd5173117c5069e84288761c00db2" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate the default values:</source>
          <target state="translated">以下の例では、デフォルト値を示しています。</target>
        </trans-unit>
        <trans-unit id="5120f1fd32785606924fb77a0f5182cde1f3b7e3" translate="yes" xml:space="preserve">
          <source>The following examples illustrate both &lt;a href=&quot;qtremoteobjects-repc&quot;&gt;repc&lt;/a&gt;-compiled static objects and dynamic source objects. Additionally, they also show direct connections as well as connections that use a &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt; between nodes.</source>
          <target state="translated">次の例は、&lt;a href=&quot;qtremoteobjects-repc&quot;&gt;repcで&lt;/a&gt;コンパイルされた静的オブジェクトと動的ソースオブジェクトの両方を示しています。さらに、ノード間で&lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;レジストリ&lt;/a&gt;を使用する接続だけでなく、直接接続も表示されます。</target>
        </trans-unit>
        <trans-unit id="e387c58ab63547f192db568cd4a89a9c639b076d" translate="yes" xml:space="preserve">
          <source>The following examples show how to create a &lt;b&gt;serialnmea&lt;/b&gt;&lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; listening on a specific serial port</source>
          <target state="translated">次の例では、作成する方法を示し&lt;b&gt;serialnmeaの&lt;/b&gt;&lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSourceの&lt;/a&gt;特定のシリアルポートでリスニングを</target>
        </trans-unit>
        <trans-unit id="e87ec247c66a8b8cd1ba87d33083718a60e53062" translate="yes" xml:space="preserve">
          <source>The following examples show the effects of the different modes on an image. Guide lines are overlaid onto the image to show the different regions of the image as described above.</source>
          <target state="translated">以下の例は、画像に対する異なるモードの効果を示しています。ガイド線は、上述したように画像の異なる領域を示すために、画像上に重ねて表示されます。</target>
        </trans-unit>
        <trans-unit id="86e71449435524af2bc9b39d16d890059a70514d" translate="yes" xml:space="preserve">
          <source>The following feature keywords are relevant for choosing the OpenGL implementation:</source>
          <target state="translated">以下の特徴キーワードは、OpenGL実装を選択する際に関連しています。</target>
        </trans-unit>
        <trans-unit id="9673c1ad43a6fcaedfb90e354b2b78a7441a1631" translate="yes" xml:space="preserve">
          <source>The following features can also be customized:</source>
          <target state="translated">また、以下のような機能をカスタマイズすることも可能です。</target>
        </trans-unit>
        <trans-unit id="8c444980202e92b511a9e53c65235dffad6d3f1b" translate="yes" xml:space="preserve">
          <source>The following features directories are searched for features files:</source>
          <target state="translated">機能ファイルを検索すると、以下のような機能ディレクトリが検索されます。</target>
        </trans-unit>
        <trans-unit id="ebc50dc839c68e9abee72e753e9e33d980a3e28a" translate="yes" xml:space="preserve">
          <source>The following filter matches NDEF messages that contain a URI, a localized piece of text and an optional JPEG image. The order of the records must be in the order specified:</source>
          <target state="translated">以下のフィルタは、URI、ローカライズされたテキスト、オプションのJPEG画像を含むNDEFメッセージにマッチします。レコードの順序は指定された順序でなければなりません。</target>
        </trans-unit>
        <trans-unit id="17d26f2e79ac6f28d3b635124e43c8e71430b0bc" translate="yes" xml:space="preserve">
          <source>The following filter matches NDEF messages that contain a single smart poster record:</source>
          <target state="translated">以下のフィルタは、1つのスマートポスターレコードを含むNDEFメッセージにマッチします。</target>
        </trans-unit>
        <trans-unit id="859db664d742fc7577002368751b17e8ed88e7f0" translate="yes" xml:space="preserve">
          <source>The following flags are helpful when you want to define macOS specific code:</source>
          <target state="translated">以下のフラグは、macOS固有のコードを定義したい場合に便利です。</target>
        </trans-unit>
        <trans-unit id="6b825ee5f0bede6a1d6581f7b8075a6649ea07a9" translate="yes" xml:space="preserve">
          <source>The following functions are also on the Qt object.</source>
          <target state="translated">以下の関数もQtオブジェクト上にあります。</target>
        </trans-unit>
        <trans-unit id="fa4719eecd2cc91df6a51ba6aed7a0b48252a786" translate="yes" xml:space="preserve">
          <source>The following functions can be implemented in a fragment shader snippet:</source>
          <target state="translated">以下の関数は、フラグメントシェーダースニペットに実装することができます。</target>
        </trans-unit>
        <trans-unit id="f8af36f233c4f6fe271544f73b26903cac7860fd" translate="yes" xml:space="preserve">
          <source>The following functions can be implemented in a vertex shader snippet:</source>
          <target state="translated">頂点シェーダースニペットには、以下の関数を実装することができます。</target>
        </trans-unit>
        <trans-unit id="bf58141f06bca4f9c90384e3689869f68fd44aaa" translate="yes" xml:space="preserve">
          <source>The following functions on the global object allow you to dynamically create QML items from files or strings. See &lt;a href=&quot;qtqml-javascript-dynamicobjectcreation&quot;&gt;Dynamic QML Object Creation from JavaScript&lt;/a&gt; for an overview of their use.</source>
          <target state="translated">グローバルオブジェクトの次の関数を使用すると、ファイルまたは文字列からQMLアイテムを動的に作成できます。それらの使用の概要については、&lt;a href=&quot;qtqml-javascript-dynamicobjectcreation&quot;&gt;JavaScriptからの動的QMLオブジェクトの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="05d7c505b691b8a3f24cbee49cd00b13710c2718" translate="yes" xml:space="preserve">
          <source>The following functions on the global object allow you to dynamically create QML items from files or strings. See &lt;a href=&quot;qtqml-javascript-dynamicobjectcreation#&quot;&gt;Dynamic QML Object Creation from JavaScript&lt;/a&gt; for an overview of their use.</source>
          <target state="translated">グローバルオブジェクトの次の関数を使用すると、ファイルまたは文字列からQMLアイテムを動的に作成できます。それらの使用の概要については、&lt;a href=&quot;qtqml-javascript-dynamicobjectcreation#&quot;&gt;JavaScriptからの動的QMLオブジェクトの作成を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="037ebb813eed44020b21ed050ecd8f390c75801c" translate="yes" xml:space="preserve">
          <source>The following generic sensors are supported:</source>
          <target state="translated">以下の汎用センサに対応しています。</target>
        </trans-unit>
        <trans-unit id="096c999cc953248f6d87f10ffdb8cd0d80641108" translate="yes" xml:space="preserve">
          <source>The following hints are most useful when models are used that cache data, such as those that manipulate data locally in order to increase performance or conserve network bandwidth.</source>
          <target state="translated">パフォーマンスを向上させるためにデータをローカルに操作するモデルや、ネットワーク帯域を節約するためにデータをキャッシュするモデルなど、データをキャッシュするモデルを使用する場合には、次のようなヒントが最も有用です。</target>
        </trans-unit>
        <trans-unit id="2bd753f4fcaecd6e6abde57e85e2bd06b4e818c4" translate="yes" xml:space="preserve">
          <source>The following image displays the mydialog.ui file in Qt Creator Design mode. You can view the code in the Edit mode.</source>
          <target state="translated">以下の画像は、Qt Creator Designモードでmydialog.uiファイルを表示したものです。編集モードでコードを見ることができます。</target>
        </trans-unit>
        <trans-unit id="0da437ca94971afb12000f335d410aa04272138f" translate="yes" xml:space="preserve">
          <source>The following image formats are available in Qt. See the notes after the table.</source>
          <target state="translated">Qtで利用できる画像形式は以下の通りです。表の後の注釈を参照してください。</target>
        </trans-unit>
        <trans-unit id="7d6fe5615b9c38b5de6416f38def2647e1d7029f" translate="yes" xml:space="preserve">
          <source>The following image formats are supported, and will be mapped to a corresponding native image type:</source>
          <target state="translated">以下の画像フォーマットがサポートされており、対応するネイティブ画像タイプにマッピングされます。</target>
        </trans-unit>
        <trans-unit id="67d581876f28313f10f9f742c40e1db08dea8378" translate="yes" xml:space="preserve">
          <source>The following image illustrates the directions in which the various input modes track movement:</source>
          <target state="translated">次の図は、様々な入力モードが動きを追跡する方向を示しています。</target>
        </trans-unit>
        <trans-unit id="e1c1c41f161088ba52ff6d9b66d1fe0a6bb593ee" translate="yes" xml:space="preserve">
          <source>The following images demonstrate a flickable being flicked in various directions and the resulting &lt;a href=&quot;qml-qtquick-flickable#contentX-prop&quot;&gt;contentX&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-flickable#contentY-prop&quot;&gt;contentY&lt;/a&gt; values. The blue square represents the flickable's content, and the black border represents the bounds of the flickable.</source>
          <target state="translated">次の画像は、さまざまな方向にフリックされるフリック可能&lt;a href=&quot;qml-qtquick-flickable#contentX-prop&quot;&gt;オブジェクト&lt;/a&gt;と、結果のcontentXおよび&lt;a href=&quot;qml-qtquick-flickable#contentY-prop&quot;&gt;contentYの&lt;/a&gt;値を示しています。青い四角はフリッカブルのコンテンツを表し、黒い境界線はフリッカブルの境界を表します。</target>
        </trans-unit>
        <trans-unit id="cd3e5261788d312626aa26d59ec57255338d12c3" translate="yes" xml:space="preserve">
          <source>The following images illustrate the differences between some of the controls when using the normal and dense variants:</source>
          <target state="translated">以下の画像は、通常のバリアントと密なバリアントを使用した場合のいくつかのコントロールの違いを示しています。</target>
        </trans-unit>
        <trans-unit id="200c82929c8da4c81bb6fb74f81a63fdfade0064" translate="yes" xml:space="preserve">
          <source>The following implementation of a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; subclass prints the path to the file that was, for example, dropped on the Dock icon of the application.</source>
          <target state="translated">次の&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;サブクラスの実装は、たとえばアプリケーションのDockアイコンにドロップされたファイルへのパスを出力します。</target>
        </trans-unit>
        <trans-unit id="59beadcd00e0672af98b1930e5dd2bc069173d70" translate="yes" xml:space="preserve">
          <source>The following inputs are predefined:</source>
          <target state="translated">以下の入力があらかじめ定義されています。</target>
        </trans-unit>
        <trans-unit id="7ab4663a91babc02e7341d3f3e8d548593ede480" translate="yes" xml:space="preserve">
          <source>The following instructions guide you to build and add the OpenSSL libraries to the APK:</source>
          <target state="translated">以下の手順では、OpenSSL ライブラリをビルドして APK に追加する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="c9b54b31bc677a52332efb44db77be21e05130d6" translate="yes" xml:space="preserve">
          <source>The following instructions guide you to build the OpenSSL libraries manually:</source>
          <target state="translated">以下の手順で、OpenSSL ライブラリを手動でビルドします。</target>
        </trans-unit>
        <trans-unit id="6ad80cc34b9f0820839dafa8697179d8ae4416e8" translate="yes" xml:space="preserve">
          <source>The following is a code snippet illustrating how to create a red line using a &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;:</source>
          <target state="translated">以下は、&lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;を使用して赤い線を作成する方法を示すコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="bf2dc08c3f9c15e415b8a75e511b604a11cd70dc" translate="yes" xml:space="preserve">
          <source>The following is a code snippet illustrating how to create a red line using a QSGGeometryNode:</source>
          <target state="translated">以下はQSGGeometryNodeを使用して赤線を作成する方法を説明するコードスニペットです。</target>
        </trans-unit>
        <trans-unit id="afe01102b476ba26c47d1a02183848070a1a33a5" translate="yes" xml:space="preserve">
          <source>The following is a list of example applications that use UIs created by the Qt Quick Designer:</source>
          <target state="translated">Qt Quick Designerで作成したUIを利用したアプリケーションの例を紹介します。</target>
        </trans-unit>
        <trans-unit id="d49a2f9adcfb43baebaf73ec9b22cbbb07268c70" translate="yes" xml:space="preserve">
          <source>The following is a list of important QML types and C++ classes provided by this module:</source>
          <target state="translated">以下に、本モジュールが提供する重要なQML型とC++クラスの一覧を示します。</target>
        </trans-unit>
        <trans-unit id="0b272cba7c0a906c07623a94e05e33b918a303b8" translate="yes" xml:space="preserve">
          <source>The following is a simple outline of how a frame gets composed with the threaded render loop.</source>
          <target state="translated">以下は、スレッドレンダリングループを使用してフレームを構成する方法の簡単な概要です。</target>
        </trans-unit>
        <trans-unit id="da0a05c567340a59423f2ffe4af8dd98728aebeb" translate="yes" xml:space="preserve">
          <source>The following is a simple outline of how a frame gets rendered with the threaded render loop and OpenGL. The steps are the same with other graphics APIs as well, apart from the OpenGL context specifics.</source>
          <target state="translated">以下は、スレッドレンダリングループとOpenGLでフレームがどのようにレンダリングされるかの簡単な概要です。ステップは、OpenGLのコンテキストの仕様を除けば、他のグラフィックスAPIでも同じです。</target>
        </trans-unit>
        <trans-unit id="fc63f291bf8798d2e5990fc0fb5b173f5c511f48" translate="yes" xml:space="preserve">
          <source>The following is a simplified illustration of the frame rendering sequence in the non-threaded renderer.</source>
          <target state="translated">以下は、非スレッドレンダラーでのフレームレンダリングシーケンスを簡略化した図です。</target>
        </trans-unit>
        <trans-unit id="037e3ef7c44dbf0212f9c6b7b16c32a9831f320b" translate="yes" xml:space="preserve">
          <source>The following is a snippet showing how to subclass &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt; to wrap an NSSearchField.</source>
          <target state="translated">以下は、&lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;NSSearchField&lt;/a&gt;をラップするためにQMacCocoaViewContainer をサブクラス化する方法を示すスニペットです。</target>
        </trans-unit>
        <trans-unit id="7cf7f081e78324b9e4b5b294891b65e0d2de0014" translate="yes" xml:space="preserve">
          <source>The following is a snippet showing how to subclass QMacCocoaViewContainer to wrap an NSSearchField.</source>
          <target state="translated">以下は、QMacCocoaViewContainerをサブクラス化してNSSearchFieldをラップする方法を示すスニペットです。</target>
        </trans-unit>
        <trans-unit id="4293d374a993a1ef7d716943a674eaa39b8067d4" translate="yes" xml:space="preserve">
          <source>The following is a statechart that uses the custom event and transition:</source>
          <target state="translated">以下は、カスタムイベントとトランジションを使用したステートチャートです。</target>
        </trans-unit>
        <trans-unit id="81e97c86d04722e15ac7d1056dc1b2eecddc5ede" translate="yes" xml:space="preserve">
          <source>The following is an example configuration for the Raspberry Pi 2. For most Embedded Linux boards, the configure command looks similar:</source>
          <target state="translated">以下に Raspberry Pi 2 の設定例を示します。ほとんどのEmbedded Linuxボードでは、configureコマンドは似たようなものです。</target>
        </trans-unit>
        <trans-unit id="1cb757132855c05d30d5c6f62545b002304c7295" translate="yes" xml:space="preserve">
          <source>The following is an example of an &lt;a href=&quot;qml-qtquick3d-custommaterial#shadingMode-prop&quot;&gt;unshaded&lt;/a&gt; custom material.</source>
          <target state="translated">以下は、&lt;a href=&quot;qml-qtquick3d-custommaterial#shadingMode-prop&quot;&gt;シェーディングされていない&lt;/a&gt;カスタムマテリアルの例です。</target>
        </trans-unit>
        <trans-unit id="30a666951052515b5bda6b8270a6f24e8c88f9c9" translate="yes" xml:space="preserve">
          <source>The following is an example of the header of a simple widget class without member functions. The purpose is to show how you can utilize signals and slots in your own applications.</source>
          <target state="translated">以下は、メンバ関数のないシンプルなウィジェットクラスのヘッダの例です。シグナルやスロットを自分のアプリケーションでどのように活用できるかを示すことが目的です。</target>
        </trans-unit>
        <trans-unit id="fe24de91c868b9f745653f906d51b82e941ca742" translate="yes" xml:space="preserve">
          <source>The following is given for each widget:</source>
          <target state="translated">各ウィジェットについて以下のように記載しています。</target>
        </trans-unit>
        <trans-unit id="bbaa9dc8cacd483abf3da41db917f4a880a9196f" translate="yes" xml:space="preserve">
          <source>The following is largly based on our own experiements with ActiveX controls and client applications, and is by no means complete.</source>
          <target state="translated">以下の内容は、ActiveXコントロールとクライアントアプリケーションの経験に基づいており、決して完全なものではありません。</target>
        </trans-unit>
        <trans-unit id="d0825aa898f7f6b1e8b7f165231a9c14546fc29f" translate="yes" xml:space="preserve">
          <source>The following is the basic outline of creating a Vulkan-capable &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;:</source>
          <target state="translated">以下はVulkan対応の&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;作成の基本的な概要です。</target>
        </trans-unit>
        <trans-unit id="e77a31dda49f63e97156a2aa31816ea9a49aaf7b" translate="yes" xml:space="preserve">
          <source>The following items are not supported by this module:</source>
          <target state="translated">以下の項目は、このモジュールではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="d3cfd143c9bd65382e3dad9d1997d56ea72d085a" translate="yes" xml:space="preserve">
          <source>The following keys are defined in the API. &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; implementations are free to define additional keys.</source>
          <target state="translated">以下のキーがAPIで定義されています。&lt;a href=&quot;location-places-qml#plugin&quot;&gt;プラグイン&lt;/a&gt;実装は、追加のキーを自由に定義できます。</target>
        </trans-unit>
        <trans-unit id="4b1b904af6b64aefbf1bb1acd717ac6f30f1f758" translate="yes" xml:space="preserve">
          <source>The following keys are handled specifically:</source>
          <target state="translated">具体的には以下のキーを扱います。</target>
        </trans-unit>
        <trans-unit id="4a05454995583142bf1ddaf09375e3f72bfb8288" translate="yes" xml:space="preserve">
          <source>The following keywords are available:</source>
          <target state="translated">以下のようなキーワードがあります。</target>
        </trans-unit>
        <trans-unit id="b9bc9093418d1af12a7d8df97dfc0b9acf374885" translate="yes" xml:space="preserve">
          <source>The following list enumerates all of the available type conversions:</source>
          <target state="translated">以下のリストは,利用可能なすべての型変換を列挙したものです。</target>
        </trans-unit>
        <trans-unit id="cef43cfd41225f7cdfb12984d737f4ab2c0ff895" translate="yes" xml:space="preserve">
          <source>The following list explains the required steps of inserting a custom text object into a document:</source>
          <target state="translated">以下のリストでは、カスタムテキストオブジェクトを文書に挿入する際に必要な手順を説明しています。</target>
        </trans-unit>
        <trans-unit id="ad53b33d5d180949b93c544ad215490290c46123" translate="yes" xml:space="preserve">
          <source>The following list is a good summary of things to keep in mind when designing a delegate:</source>
          <target state="translated">代行者を設計する際に注意すべきことをまとめてみました。</target>
        </trans-unit>
        <trans-unit id="456db32cacfdb72f60fecccf7e05b1f3f0db033c" translate="yes" xml:space="preserve">
          <source>The following list presents the functional division of types that are part of Qt Graphical Effects:</source>
          <target state="translated">以下のリストでは、Qt Graphical Effectsの一部であるタイプの機能分割を紹介しています。</target>
        </trans-unit>
        <trans-unit id="38051d59210aac76499969246f7f96364c06621a" translate="yes" xml:space="preserve">
          <source>The following list shows further details that may be retrieved via QPlaceManager::getDetails()</source>
          <target state="translated">以下のリストは、QPlaceManager::getDetails()で取得できる詳細を示しています。</target>
        </trans-unit>
        <trans-unit id="3541edf0b714103e38aec5beecdfcd723dd75473" translate="yes" xml:space="preserve">
          <source>The following list shows what core place data is returned during a place search:</source>
          <target state="translated">以下のリストは、場所検索時にどのようなコアな場所データが返されるかを示しています。</target>
        </trans-unit>
        <trans-unit id="3e089ebc633a2771a543305e933fdbd42c1ad511" translate="yes" xml:space="preserve">
          <source>The following list summarizes the &lt;code&gt;built-in&lt;/code&gt; properties:</source>
          <target state="translated">次のリストは、 &lt;code&gt;built-in&lt;/code&gt; プロパティをまとめたものです。</target>
        </trans-unit>
        <trans-unit id="66e8130010797c0765271dd72a748a0a5556d8fa" translate="yes" xml:space="preserve">
          <source>The following list summarizes the available Shape rendering approaches:</source>
          <target state="translated">以下のリストは、利用可能なシェイプレンダリングのアプローチをまとめたものです。</target>
        </trans-unit>
        <trans-unit id="fa5bdfccf27d0371ccdef272c6a0351d8ca98de2" translate="yes" xml:space="preserve">
          <source>The following list summarizes what you can do with Qt for Android:</source>
          <target state="translated">Qt for Androidでできることをまとめてみました。</target>
        </trans-unit>
        <trans-unit id="40c88740190849337880672448ffbca67ce11fd0" translate="yes" xml:space="preserve">
          <source>The following lists a set of useful attributes that can be used to tweak applications on macOS:</source>
          <target state="translated">以下に、macOS上でアプリケーションをいじるのに便利な属性のセットを示します。</target>
        </trans-unit>
        <trans-unit id="07aa2e54440e9f3134cb9805130e1fd76598de25" translate="yes" xml:space="preserve">
          <source>The following metadata example is from the Lipi-Toolkit extension plugin (lipi.json):</source>
          <target state="translated">以下のメタデータの例は、Lipi-Toolskit拡張プラグイン(lipi.json)のものです。</target>
        </trans-unit>
        <trans-unit id="80f72ca334abb8b84262125c6b2948f164b64361" translate="yes" xml:space="preserve">
          <source>The following methods return &lt;a href=&quot;qjsonvalue#qjsonvalueref&quot;&gt;QJsonValueRef&lt;/a&gt;:</source>
          <target state="translated">次のメソッドは&lt;a href=&quot;qjsonvalue#qjsonvalueref&quot;&gt;QJsonValueRefを&lt;/a&gt;返します：</target>
        </trans-unit>
        <trans-unit id="59931ef3d3a60b0d7365e225c2ecabe26ccdaaee" translate="yes" xml:space="preserve">
          <source>The following model defines a series of list elements, each of which contain &quot;name&quot; and &quot;cost&quot; roles and their associated values.</source>
          <target state="translated">以下のモデルは、一連のリスト要素を定義しており、それぞれが「名前」と「コスト」の役割とそれらの関連する値を含んでいます。</target>
        </trans-unit>
        <trans-unit id="0420a76de72e25515d7c8224d8abf7bb6118a347" translate="yes" xml:space="preserve">
          <source>The following model has three roles,</source>
          <target state="translated">以下のモデルは3つの役割を持っています。</target>
        </trans-unit>
        <trans-unit id="f684d3e156ea685b52dc810852f5251d66d769bc" translate="yes" xml:space="preserve">
          <source>The following operating systems guarantee that the results from their random-generation API will be of at least cryptographically-safe quality, even if the entropy pool is exhausted: Apple OSes (Darwin), BSDs, Linux, Windows. Barring a system installation problem (such as &lt;code&gt;/dev/urandom&lt;/code&gt; not being readable by the current process), &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() will therefore have the same guarantees.</source>
          <target state="translated">次のオペレーティングシステムでは、エントロピープールが使い果たされた場合でも、ランダム生成APIの結果が少なくとも暗号的に安全な品質になることが保証されています：Apple OS（Darwin）、BSD、Linux、Windows。したがって、システムインストールの問題（ &lt;code&gt;/dev/urandom&lt;/code&gt; が現在のプロセスで読み取れないなど）がなければ、&lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt;（）は同じ保証を持ちます。</target>
        </trans-unit>
        <trans-unit id="fb7283886649230184530ef9293240d6bbe63254" translate="yes" xml:space="preserve">
          <source>The following option can also be defined to provide additional information about the library.</source>
          <target state="translated">また、以下のオプションを定義することで、ライブラリに関する追加情報を提供することができます。</target>
        </trans-unit>
        <trans-unit id="1a2fb637a55b6d1c7cfc381880e53014fbe62871" translate="yes" xml:space="preserve">
          <source>The following options define the application or library type:</source>
          <target state="translated">次のオプションは、アプリケーションまたはライブラリのタイプを定義します。</target>
        </trans-unit>
        <trans-unit id="2d6714bddc1a24373012d331661fd7300217d304" translate="yes" xml:space="preserve">
          <source>The following options define the type of project to be built.</source>
          <target state="translated">次のオプションは、構築するプロジェクトのタイプを定義します。</target>
        </trans-unit>
        <trans-unit id="86e96782d5732ddc4f94ca5a2e38971c51674dc0" translate="yes" xml:space="preserve">
          <source>The following options take an effect only on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;:</source>
          <target state="translated">次のオプションは&lt;a href=&quot;internationalization#macos&quot;&gt;macOSで&lt;/a&gt;のみ有効です。</target>
        </trans-unit>
        <trans-unit id="2f9e1a0fb9af7736ef00aa7d57585f20ef65af7e" translate="yes" xml:space="preserve">
          <source>The following options take an effect only on Linux/Unix platforms:</source>
          <target state="translated">以下のオプションは、Linux/Unix プラットフォームでのみ有効です。</target>
        </trans-unit>
        <trans-unit id="2cb3e9eb12f436782b53c6ac5515b76e59afbf4b" translate="yes" xml:space="preserve">
          <source>The following options take an effect only on macOS:</source>
          <target state="translated">以下のオプションはmacOSでのみ有効です。</target>
        </trans-unit>
        <trans-unit id="ab0f36260c2d501385f1ed3509885c107f0ee3b5" translate="yes" xml:space="preserve">
          <source>The following pages contain information about setting up Qt Creator and how to get started with the mobile platforms:</source>
          <target state="translated">次のページでは、Qt Creatorの設定方法やモバイルプラットフォームでの利用方法について説明しています。</target>
        </trans-unit>
        <trans-unit id="fb668a26fed996ee065c637306d790bd03f63eb5" translate="yes" xml:space="preserve">
          <source>The following pages contain more information about QML:</source>
          <target state="translated">以下のページには、QMLに関する詳細な情報が記載されています。</target>
        </trans-unit>
        <trans-unit id="6bc03969e83dddfd41e37a9813827ee00b82f431" translate="yes" xml:space="preserve">
          <source>The following pages provide guidelines on how to configure Qt for specific platform development:</source>
          <target state="translated">以下のページでは、特定のプラットフォーム開発のためのQtの設定方法についてのガイドラインを提供しています。</target>
        </trans-unit>
        <trans-unit id="dae61d400f3036984f0adbb4379465973ba4286c" translate="yes" xml:space="preserve">
          <source>The following pages provide more information about Qt's core features:</source>
          <target state="translated">以下のページでは、Qt のコア機能について詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="b79ca8636f19f6cbebe8b12de8b9a444f6c73ce2" translate="yes" xml:space="preserve">
          <source>The following pages show how to develop Qt applications using &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt; and Qt Quick. The pages demonstrate various steps such as use cases and introductory material. For more information about Qt Quick Applications and related modules, visit the &lt;a href=&quot;qmlapplications&quot;&gt;QML Applications&lt;/a&gt; page.</source>
          <target state="translated">次のページでは、&lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt;およびQt Quick を使用してQtアプリケーションを開発する方法を示します。このページでは、使用例や紹介資料などのさまざまな手順を示します。Qt Quickアプリケーションと関連モジュールの詳細については、&lt;a href=&quot;qmlapplications&quot;&gt;QMLアプリケーションの&lt;/a&gt;ページにアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="7c6dd879832d51d5371080493c2cc732a3038b14" translate="yes" xml:space="preserve">
          <source>The following parameter is available for &lt;code&gt;-platform cocoa&lt;/code&gt; (on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;):</source>
          <target state="translated">&lt;code&gt;-platform cocoa&lt;/code&gt; （&lt;a href=&quot;internationalization#macos&quot;&gt;macOSの場合&lt;/a&gt;）では、次のパラメーターを使用できます。</target>
        </trans-unit>
        <trans-unit id="90e565d895eb3f62f5badaa6775eb51691fb8dfd" translate="yes" xml:space="preserve">
          <source>The following parameter is available for &lt;code&gt;-platform cocoa&lt;/code&gt; (on macOS):</source>
          <target state="translated">次のパラメーターは、 &lt;code&gt;-platform cocoa&lt;/code&gt; （macOS上）で使用できます。</target>
        </trans-unit>
        <trans-unit id="7aba8f2f652450b6b70c2180a9f0f86cbcb38a56" translate="yes" xml:space="preserve">
          <source>The following parameters are available for &lt;code&gt;-platform windows&lt;/code&gt;:</source>
          <target state="translated">次のパラメータは、 &lt;code&gt;-platform windows&lt;/code&gt; で使用できます。</target>
        </trans-unit>
        <trans-unit id="d0c0ca6b005d6c63318aaf9ca226d0ac29838ac1" translate="yes" xml:space="preserve">
          <source>The following parameters are for creating a QHP file (</source>
          <target state="translated">以下のパラメータは、QHPファイルを作成するためのものです(</target>
        </trans-unit>
        <trans-unit id="1dedfe801606812dd1813cd156cd9ab8c343d4fe" translate="yes" xml:space="preserve">
          <source>The following platforms are supported in Qt 5.13. For support information for prior Qt releases, please consult the relevant version in the &lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt Documentation Archives&lt;/a&gt;.</source>
          <target state="translated">Qt 5.13では、次のプラットフォームがサポートされています。以前のQtリリースのサポート情報については、&lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qtドキュメントアーカイブの&lt;/a&gt;関連バージョンを参照してください。</target>
        </trans-unit>
        <trans-unit id="a668ee60c1d1081a73ed0c4ede044cbbc1fd4a1a" translate="yes" xml:space="preserve">
          <source>The following platforms are supported in Qt 5.15. For support information for prior Qt releases, please consult the relevant version in the &lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt Documentation Archives&lt;/a&gt;.</source>
          <target state="translated">次のプラットフォームはQt5.15でサポートされています。以前のQtリリースのサポート情報については、&lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt DocumentationArchivesの&lt;/a&gt;関連バージョンを参照してください。</target>
        </trans-unit>
        <trans-unit id="fb00cf09018fcae52b5f75078b6cf5303eecf7e3" translate="yes" xml:space="preserve">
          <source>The following platforms are supported in Qt 6.0. For information about prior Qt releases, please consult the relevant version in the &lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt Documentation Archives&lt;/a&gt;.</source>
          <target state="translated">Qt 6.0では、次のプラットフォームがサポートされています。以前のQtリリースについては、&lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt DocumentationArchivesの&lt;/a&gt;関連バージョンを参照してください。</target>
        </trans-unit>
        <trans-unit id="023412a21ebc2efa75dba7b5a4900f759e2b93b4" translate="yes" xml:space="preserve">
          <source>The following properties are also available:</source>
          <target state="translated">また、以下のような物件もあります。</target>
        </trans-unit>
        <trans-unit id="7593412ed195effa3c1c69d10b33bcd500faae65" translate="yes" xml:space="preserve">
          <source>The following properties are available in the context of each delegate:</source>
          <target state="translated">各デリゲートのコンテキストでは、以下のプロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="82ee4dfcb65d69091f93e6ae50d7fc373037c229" translate="yes" xml:space="preserve">
          <source>The following properties are available on Google Play:</source>
          <target state="translated">Google Playでは以下のような物件が公開されています。</target>
        </trans-unit>
        <trans-unit id="056df19a16af6f342ef1225b1b3c2fd9426f8c69" translate="yes" xml:space="preserve">
          <source>The following properties are available to the item:</source>
          <target state="translated">アイテムには以下のプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="ef8a4eaa8a468b2135b716ffca510ae179136ae7" translate="yes" xml:space="preserve">
          <source>The following properties are imported:</source>
          <target state="translated">以下のプロパティをインポートします。</target>
        </trans-unit>
        <trans-unit id="b40a67009e386dae82032c1d73eb19b760927127" translate="yes" xml:space="preserve">
          <source>The following properties can be overridden by using &lt;a href=&quot;qabstract3dseries&quot;&gt;QAbstract3DSeries&lt;/a&gt; properties to set them explicitly in the series: &lt;a href=&quot;q3dtheme#baseColors-prop&quot;&gt;baseColors&lt;/a&gt;, &lt;a href=&quot;q3dtheme#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;, and &lt;a href=&quot;q3dtheme#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt;.</source>
          <target state="translated">次のプロパティは、&lt;a href=&quot;qabstract3dseries&quot;&gt;QAbstract3DSeries&lt;/a&gt;プロパティを使用してオーバーライドすることで、シリーズに明示的に設定できます：&lt;a href=&quot;q3dtheme#baseColors-prop&quot;&gt;baseColors&lt;/a&gt;、&lt;a href=&quot;q3dtheme#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;、&lt;a href=&quot;q3dtheme#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="49f911dfa2198eaa58ab62ff05c2c2a33865e8a7" translate="yes" xml:space="preserve">
          <source>The following properties can be overridden by using &lt;a href=&quot;qml-qtdatavisualization-abstract3dseries&quot;&gt;Abstract3DSeries&lt;/a&gt; properties to set them explicitly in the series: &lt;a href=&quot;qml-qtdatavisualization-theme3d#baseColors-prop&quot;&gt;baseColors&lt;/a&gt;, &lt;a href=&quot;qml-qtdatavisualization-theme3d#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;, and &lt;a href=&quot;qml-qtdatavisualization-theme3d#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt;.</source>
          <target state="translated">次のプロパティは、&lt;a href=&quot;qml-qtdatavisualization-abstract3dseries&quot;&gt;Abstract3DSeries&lt;/a&gt;プロパティを使用してオーバーライドして、シリーズで明示的に設定することができます：&lt;a href=&quot;qml-qtdatavisualization-theme3d#baseColors-prop&quot;&gt;baseColors&lt;/a&gt;、&lt;a href=&quot;qml-qtdatavisualization-theme3d#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;、および&lt;a href=&quot;qml-qtdatavisualization-theme3d#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4fff18855976e253315b6076f712b9129fcb3fc3" translate="yes" xml:space="preserve">
          <source>The following properties of the item are used in the mapping: &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#scale-prop&quot;&gt;scale&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#rotation-prop&quot;&gt;rotation&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;.</source>
          <target state="translated">アイテムの次のプロパティがマッピングで使用されます：&lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-item#scale-prop&quot;&gt;scale&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-item#rotation-prop&quot;&gt;rotation&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-item#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt;、および&lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5420ecbaba8e2c01df4bd5f7ad675edb2e487ce3" translate="yes" xml:space="preserve">
          <source>The following properties of the item are used in the mapping: &lt;a href=&quot;qquickitem#x-prop&quot;&gt;x&lt;/a&gt;, &lt;a href=&quot;qquickitem#y-prop&quot;&gt;y&lt;/a&gt;, &lt;a href=&quot;qquickitem#scale-prop&quot;&gt;scale&lt;/a&gt;, &lt;a href=&quot;qquickitem#rotation-prop&quot;&gt;rotation&lt;/a&gt;, &lt;a href=&quot;qquickitem#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;.</source>
          <target state="translated">アイテムの次のプロパティがマッピングで使用されます：&lt;a href=&quot;qquickitem#x-prop&quot;&gt;x&lt;/a&gt;、&lt;a href=&quot;qquickitem#y-prop&quot;&gt;y&lt;/a&gt;、&lt;a href=&quot;qquickitem#scale-prop&quot;&gt;scale&lt;/a&gt;、&lt;a href=&quot;qquickitem#rotation-prop&quot;&gt;rotation&lt;/a&gt;、&lt;a href=&quot;qquickitem#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt;、および&lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="1f7edc66af4c0d5a1b8b9f90d6d7a31bc371e18f" translate="yes" xml:space="preserve">
          <source>The following property keys are guaranteed to be specified on all platforms:</source>
          <target state="translated">以下のプロパティキーは、すべてのプラットフォームで指定されることが保証されています。</target>
        </trans-unit>
        <trans-unit id="8526c31f4091eb4818a1c1ee5e5d3b1257e8484c" translate="yes" xml:space="preserve">
          <source>The following pseudo-states are supported:</source>
          <target state="translated">以下の疑似状態をサポートしています。</target>
        </trans-unit>
        <trans-unit id="f0ba7d11cb6cdc503c7db080f25620ebc41e357a" translate="yes" xml:space="preserve">
          <source>The following read-only properties are available within the scope of the menu button delegate:</source>
          <target state="translated">メニューボタンデリゲートの範囲内では、以下の読み取り専用のプロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="68429ef49c89432bbd4c04f3fb9da4be31bd0b00" translate="yes" xml:space="preserve">
          <source>The following read-only property is available within the scope of the background delegate:</source>
          <target state="translated">バックグラウンドデリゲートの範囲内では、以下の読み取り専用プロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="a287992cf89970acc13ee2781cb1578fcfa32365" translate="yes" xml:space="preserve">
          <source>The following restrictions are enforced by the setter:</source>
          <target state="translated">セッターによって以下の制限が課せられています。</target>
        </trans-unit>
        <trans-unit id="de855448328b5e9f80cc8ce9168a701f985757d7" translate="yes" xml:space="preserve">
          <source>The following rules apply:</source>
          <target state="translated">以下のルールが適用されます。</target>
        </trans-unit>
        <trans-unit id="4798dff023274ac5c6cbef61c28b3d57736dafec" translate="yes" xml:space="preserve">
          <source>The following sample QML application loads a web page using the &lt;code&gt;url&lt;/code&gt; property:</source>
          <target state="translated">次のサンプルQMLアプリケーションは、 &lt;code&gt;url&lt;/code&gt; プロパティを使用してWebページをロードします。</target>
        </trans-unit>
        <trans-unit id="6cf48c8611b205e5eab7cccc59ae011a687fe9ce" translate="yes" xml:space="preserve">
          <source>The following sections contain guidelines for writing Qt tests:</source>
          <target state="translated">以下のセクションには、Qtテストの書き方のガイドラインが記載されています。</target>
        </trans-unit>
        <trans-unit id="87e287b03ea22661ea74f378588351216194acc0" translate="yes" xml:space="preserve">
          <source>The following sections describe how to resolve this.</source>
          <target state="translated">以下では、これを解決する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="ea21ced414504146ec7747ff86ead99587d939b3" translate="yes" xml:space="preserve">
          <source>The following sections describe the different types of elements used in project files.</source>
          <target state="translated">以下のセクションでは、プロジェクトファイルで使用されるさまざまな種類の要素について説明します。</target>
        </trans-unit>
        <trans-unit id="c51898f64e447bbdb32249bfddc67ae9240d0071" translate="yes" xml:space="preserve">
          <source>The following sections describe various aspects of internationalizing your QML source code. If you follow these guides for all the user interface components in your application, it becomes possible to localize every aspect of your application for different languages and local cultural conventions such as the way dates and numbers are formatted.</source>
          <target state="translated">以下のセクションでは、QMLソースコードを国際化するための様々な側面について説明します。アプリケーション内のすべてのユーザーインターフェースコンポーネントについて、これらのガイドに従えば、アプリケーションのあらゆる側面を、異なる言語や、日付や数字の書式などの現地の文化的慣習に合わせてローカライズすることが可能になります。</target>
        </trans-unit>
        <trans-unit id="d294e87e6f986762c7ea4b24b86f454ce504d02c" translate="yes" xml:space="preserve">
          <source>The following sections discuss common problems caused by test machine setup:</source>
          <target state="translated">以下のセクションでは、テストマシンの設定に起因する一般的な問題について説明します。</target>
        </trans-unit>
        <trans-unit id="3bbff801e6f7038c401e678badbe43f46a593af4" translate="yes" xml:space="preserve">
          <source>The following sections explain how to use the model/view pattern in Qt. Each section includes an example and is followed by a section showing how to create new components.</source>
          <target state="translated">以下のセクションでは、Qt の model/view パターンの使い方を説明します。各セクションには例が含まれており、その後に新しいコンポーネントの作成方法を示すセクションが続きます。</target>
        </trans-unit>
        <trans-unit id="19e4a8ca9aa31feed5e566fd633480c02c2277b8" translate="yes" xml:space="preserve">
          <source>The following sections explain these differences in detail and demonstrate how to use the features unique to each connection syntax.</source>
          <target state="translated">以下のセクションでは、これらの違いを詳細に説明し、各接続構文に固有の機能を使用する方法を示します。</target>
        </trans-unit>
        <trans-unit id="a4b6753a4d6f2dea3068166d3eb735ba8daf2ee1" translate="yes" xml:space="preserve">
          <source>The following sections list the widget classes. See the &lt;a href=&quot;gallery&quot;&gt;Qt Widget Gallery&lt;/a&gt; for some examples.</source>
          <target state="translated">次のセクションでは、ウィジェットクラスを一覧表示します。いくつかの例については、&lt;a href=&quot;gallery&quot;&gt;Qtウィジェットギャラリー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="1cf032c8514c346c1a3565e2cf02b6b7a23ad4b7" translate="yes" xml:space="preserve">
          <source>The following sections list the widget classes. See the &lt;a href=&quot;gallery#&quot;&gt;Qt Widget Gallery&lt;/a&gt; for some examples.</source>
          <target state="translated">次のセクションでは、ウィジェットクラスをリストします。いくつかの例については、&lt;a href=&quot;gallery#&quot;&gt;Qtウィジェットギャラリー&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="b5411e846ad5b35a48b7ce66058ce1fa3b1cdb1f" translate="yes" xml:space="preserve">
          <source>The following sections offer guidelines for choosing the appropriate type of navigation model, depending on the use case.</source>
          <target state="translated">以下のセクションでは、ユースケースに応じて適切なタイプのナビゲーションモデルを選択するためのガイドラインを示します。</target>
        </trans-unit>
        <trans-unit id="5eee79946e8c51603a554efd08eae91902f2bcf9" translate="yes" xml:space="preserve">
          <source>The following sections provide general guidelines for writing unit tests:</source>
          <target state="translated">以下のセクションでは、単元テストの書き方の一般的なガイドラインを示しています。</target>
        </trans-unit>
        <trans-unit id="23181e499a6208f4d8b698ff63cc0d3ec153df53" translate="yes" xml:space="preserve">
          <source>The following sections provide guidelines for producing readable and helpful test output:</source>
          <target state="translated">以下のセクションでは、読みやすく有用なテスト出力を作成するためのガイドラインを示します。</target>
        </trans-unit>
        <trans-unit id="74770ae3154afc4b0a2e90e757da2446e4f45613" translate="yes" xml:space="preserve">
          <source>The following sections provide guidelines for writing code that is easy to test:</source>
          <target state="translated">以下のセクションでは、テストしやすいコードを書くためのガイドラインを示しています。</target>
        </trans-unit>
        <trans-unit id="446a05f7e556203c200fb9fb6683941eae0569b4" translate="yes" xml:space="preserve">
          <source>The following sections provide guidelines for writing reliable tests:</source>
          <target state="translated">以下のセクションでは、信頼性の高いテストを書くためのガイドラインを示しています。</target>
        </trans-unit>
        <trans-unit id="b149a13b277d1478e56780c9f716344c8721dd49" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qgeoaddress&quot;&gt;QGeoAddress&lt;/a&gt; object from C++:</source>
          <target state="translated">以下は、C ++の&lt;a href=&quot;qgeoaddress&quot;&gt;QGeoAddress&lt;/a&gt;オブジェクトに基づいて、このオブジェクトのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="1a27d5cd6b77e5d7267315bcd5eb92178f195946" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; object from C++:</source>
          <target state="translated">以下は、C ++の&lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt;オブジェクトに基づいて、このオブジェクトのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="60f32217409092a951b111b9dfa0283f8bb1ede3" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; object from C++:</source>
          <target state="translated">以下は、C ++の&lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt;オブジェクトに基づいて、このオブジェクトのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="860207d3665a82ac1cf75ab6a90b24e65fa7f758" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceattribute&quot;&gt;QPlaceAttribute&lt;/a&gt; object from C++:</source>
          <target state="translated">以下は、C ++の&lt;a href=&quot;qplaceattribute&quot;&gt;QPlaceAttribute&lt;/a&gt;オブジェクトに基づいて、このオブジェクトのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="73443179f2b5c9d8b2dbf7565ddc9e1fc172c1a2" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; object from C++:</source>
          <target state="translated">以下は、C ++の&lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt;オブジェクトに基づいて、このオブジェクトのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="1e2d0d71923b1991fd67e6e5a506e566182b68d8" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplacecontactdetail&quot;&gt;QPlaceContactDetail&lt;/a&gt; object from C++:</source>
          <target state="translated">以下は、C ++の&lt;a href=&quot;qplacecontactdetail&quot;&gt;QPlaceContactDetail&lt;/a&gt;オブジェクトに基づいて、このオブジェクトのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="57266419c3d3af81c0348405f6a2d39f1e03aefe" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; object from C++:</source>
          <target state="translated">以下は、C ++の&lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt;オブジェクトに基づいて、このオブジェクトのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="9fb91bbac43aa890050c9d6643b2547055d01063" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceratings&quot;&gt;QPlaceRatings&lt;/a&gt; object from C++:</source>
          <target state="translated">以下は、C ++の&lt;a href=&quot;qplaceratings&quot;&gt;QPlaceRatings&lt;/a&gt;オブジェクトに基づいて、このオブジェクトのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="2d9b409d1a4f0e83987db463f64d4e75ea56f726" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; object from C++:</source>
          <target state="translated">以下は、C ++の&lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt;オブジェクトに基づいて、このオブジェクトのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="7d0c843d7259f10ffaecf4ddf3e83be44b5e89db" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceuser&quot;&gt;QPlaceUser&lt;/a&gt; object from C++:</source>
          <target state="translated">以下は、C ++の&lt;a href=&quot;qplaceuser&quot;&gt;QPlaceUser&lt;/a&gt;オブジェクトに基づいて、このオブジェクトのプロパティを設定します。</target>
        </trans-unit>
        <trans-unit id="0d0aba57151c1e1af046232b1181eee17abe83e6" translate="yes" xml:space="preserve">
          <source>The following shell command:</source>
          <target state="translated">以下のシェルコマンドです。</target>
        </trans-unit>
        <trans-unit id="7aca8ddf2900e7c2667d617a2f2c53d12d280810" translate="yes" xml:space="preserve">
          <source>The following shortcuts can be used:</source>
          <target state="translated">以下のショートカットを使用することができます。</target>
        </trans-unit>
        <trans-unit id="91fcaef39929ae1e1fb7f7b23c13b1dcb5d8f846" translate="yes" xml:space="preserve">
          <source>The following shows an example of setting up a child process to run without privileges:</source>
          <target state="translated">以下は、子プロセスが特権なしで実行されるように設定した例です。</target>
        </trans-unit>
        <trans-unit id="c2a0fc582833a6e6f7de1b6a81cee559545dd8cc" translate="yes" xml:space="preserve">
          <source>The following shows how to save a category</source>
          <target state="translated">カテゴリを保存する方法を以下に示します。</target>
        </trans-unit>
        <trans-unit id="b57a11345ca7babf5268543524755c1bf982c1fe" translate="yes" xml:space="preserve">
          <source>The following snipped shows an incomplete example of creating a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; object and setting it as the value of a &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;'s &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property.</source>
          <target state="translated">次の抜粋は、&lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt;オブジェクトを作成し、それを&lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;の&lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;クエリ&lt;/a&gt;プロパティの値として設定する不完全な例を示しています。</target>
        </trans-unit>
        <trans-unit id="bd2d5fb086ce455928f817dae45b49556923eb42" translate="yes" xml:space="preserve">
          <source>The following snipped shows an incomplete example of creating a RouteQuery object and setting it as the value of a &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;'s &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property.</source>
          <target state="translated">次の抜粋は、RouteQueryオブジェクトを作成し、それを&lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;の&lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;クエリ&lt;/a&gt;プロパティの値として設定する不完全な例を示しています。</target>
        </trans-unit>
        <trans-unit id="a916330a94cc6c6e7a2c25a693a3f223ca1907ce" translate="yes" xml:space="preserve">
          <source>The following snippet defines a simple fade transition for push and pop operations:</source>
          <target state="translated">次のスニペットは、プッシュ操作とポップ操作のためのシンプルなフェードトランジションを定義しています。</target>
        </trans-unit>
        <trans-unit id="f18aeb64847b50144c4541bee35fba74c4ba2285" translate="yes" xml:space="preserve">
          <source>The following snippet demonstrates a simple use case, where the &lt;code&gt;mainView&lt;/code&gt; is pushed onto and popped out of the stack on relevant button click:</source>
          <target state="translated">次のスニペットは、 &lt;code&gt;mainView&lt;/code&gt; が関連するボタンをクリックするとスタックにプッシュされ、スタックからポップアウトされる単純な使用例を示しています。</target>
        </trans-unit>
        <trans-unit id="adc7a0d4aee8502dc24abbf4b840641d689b2daf" translate="yes" xml:space="preserve">
          <source>The following snippet demonstrates examples of models written in QML:</source>
          <target state="translated">以下のスニペットは、QMLで書かれたモデルの例を示しています。</target>
        </trans-unit>
        <trans-unit id="5931c5930e18c2882738e1deea1850c25d8a036b" translate="yes" xml:space="preserve">
          <source>The following snippet demonstrates the use of this macro:</source>
          <target state="translated">次のスニペットは、このマクロの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a076206a61a8fc14356492da299fd0d27d5b3791" translate="yes" xml:space="preserve">
          <source>The following snippet gets the current date and time with Date(), then converts that to a string for the current locale. Then it inserts the date string into the %1 parameter for the appropriate translation.</source>
          <target state="translated">以下のスニペットは、Date()で現在の日付と時刻を取得し、それを現在のロケールの文字列に変換します。そして、適切な変換のために日付文字列を %1 パラメータに挿入します。</target>
        </trans-unit>
        <trans-unit id="4cde8954c9f793924bc4360672532c6c9039bdb1" translate="yes" xml:space="preserve">
          <source>The following snippet illustrates how lists of values are assigned to variables:</source>
          <target state="translated">次のスニペットは、値のリストがどのように変数に代入されるかを示しています。</target>
        </trans-unit>
        <trans-unit id="d4be141a377308f6f84d25617cc6426895dadd13" translate="yes" xml:space="preserve">
          <source>The following snippet is two-part, showing firstly the declaration of objects, and secondly a short piece of procedural code using it. We set the geocodeModel's &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; property to false, and call &lt;a href=&quot;qml-qtlocation-geocodemodel#update-method&quot;&gt;update&lt;/a&gt; once the query is set up. In this case, as we use a string value in &lt;a href=&quot;qml-qtlocation-geocodemodel#query-prop&quot;&gt;query&lt;/a&gt;, only one update would occur, even with &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; enabled. However, if we provided an &lt;a href=&quot;qml-qtpositioning-address&quot;&gt;Address&lt;/a&gt; object we may inadvertently trigger multiple requests whilst setting its properties.</source>
          <target state="translated">次のスニペットは2つの部分で構成され、最初にオブジェクトの宣言を示し、次にそれを使用する短い手続き型コードを示します。geocodeModelの&lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt;プロパティをfalseに設定し、クエリが設定されたら&lt;a href=&quot;qml-qtlocation-geocodemodel#update-method&quot;&gt;update&lt;/a&gt;を呼び出します。この場合、&lt;a href=&quot;qml-qtlocation-geocodemodel#query-prop&quot;&gt;query&lt;/a&gt;で文字列値を使用しているため、&lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdateが&lt;/a&gt;有効になっていても、更新は1回だけ発生します。ただし、&lt;a href=&quot;qml-qtpositioning-address&quot;&gt;Address&lt;/a&gt;オブジェクトを指定した場合、そのプロパティの設定中に誤って複数のリクエストをトリガーする可能性があります。</target>
        </trans-unit>
        <trans-unit id="44660fed07f37ab0fb12cc83c1f94aa2d3ba5dce" translate="yes" xml:space="preserve">
          <source>The following snippet is two-part, showing firstly the declaration of objects, and secondly a short piece of procedural code using it. We set the routeModel's &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; property to false, and call &lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;update&lt;/a&gt; once the query is set up, to avoid useless extra requests halfway through the set up of the query.</source>
          <target state="translated">次のスニペットは2つの部分で構成され、最初にオブジェクトの宣言を示し、次にそれを使用する短い手続き型コードを示します。routeModelの&lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt;プロパティをfalseに設定し、クエリが設定されると&lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;update&lt;/a&gt;を呼び出します。これにより、クエリの設定の途中で無駄な余分なリクエストが発生しなくなります。</target>
        </trans-unit>
        <trans-unit id="025f4bf8487b92f3116453d64664448fd6fdb081" translate="yes" xml:space="preserve">
          <source>The following snippet presents the default implementation of the item delegate. It can be used as a starting point for implementing custom delegates.</source>
          <target state="translated">以下のスニペットは、アイテムデリゲートのデフォルトの実装を示しています。これは、カスタムデリゲートを実装するための出発点として使用することができます。</target>
        </trans-unit>
        <trans-unit id="71e61df55086824eba8e08457659f60ae8d21eaf" translate="yes" xml:space="preserve">
          <source>The following snippet provides an example of saving a place to a different plugin using the &lt;a href=&quot;qml-qtlocation-place#copyFrom-method&quot;&gt;copyFrom&lt;/a&gt; method:</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;qml-qtlocation-place#copyFrom-method&quot;&gt;copyFrom&lt;/a&gt;メソッドを使用して場所を別のプラグインに保存する例を示しています。</target>
        </trans-unit>
        <trans-unit id="9041bd7a16a3ad2867825371f7c701f96b401143" translate="yes" xml:space="preserve">
          <source>The following snippet shows a &lt;a href=&quot;qml-qtlocation-mappolygon&quot;&gt;MapPolygon&lt;/a&gt; being used to display a triangle, with three vertices near Brisbane, Australia. The triangle is filled in green, with a 1 pixel black border.</source>
          <target state="translated">次のスニペットは、オーストラリアのブリスベンの近くに3つの頂点を持つ三角形を表示するために使用される&lt;a href=&quot;qml-qtlocation-mappolygon&quot;&gt;MapPolygonを&lt;/a&gt;示しています。三角形は緑色で塗りつぶされ、1ピクセルの黒い境界線が付いています。</target>
        </trans-unit>
        <trans-unit id="bad9f1826f082116687b3a7a8cac15a23c6bd711" translate="yes" xml:space="preserve">
          <source>The following snippet shows a &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt; with 4 points, making a shape like the top part of a &quot;question mark&quot; (?), near Brisbane, Australia. The line drawn is 3 pixels in width and green in color.</source>
          <target state="translated">次のスニペットは、オーストラリアのブリスベンの近くにある「クエスチョンマーク」（？）の上部のような形をした4つのポイントを持つ&lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt;を示しています。描かれた線は幅3ピクセル、色は緑です。</target>
        </trans-unit>
        <trans-unit id="93eecf6fd6680ffcbbeda83a378c9bcfefcd9552" translate="yes" xml:space="preserve">
          <source>The following snippet shows a &lt;a href=&quot;qml-qtlocation-mapquickitem&quot;&gt;MapQuickItem&lt;/a&gt; containing an Image object, to display a Marker on the Map. This strategy is used to show the map markers in the MapViewer example.</source>
          <target state="translated">次のスニペットは、地図上にマーカーを表示するためのImageオブジェクトを含む&lt;a href=&quot;qml-qtlocation-mapquickitem&quot;&gt;MapQuickItem&lt;/a&gt;を示しています。この戦略は、MapViewerの例でマップマーカーを表示するために使用されます。</target>
        </trans-unit>
        <trans-unit id="00ad8be3a2d305949dd3dcd163ae1454364335c9" translate="yes" xml:space="preserve">
          <source>The following snippet shows a MapPolygon being used to display a triangle, with three vertices near Brisbane, Australia. The triangle is filled in green, with a 1 pixel black border.</source>
          <target state="translated">次のスニペットは、オーストラリアのブリスベン付近にある 3 つの頂点を持つ三角形を表示するために使用されている MapPolygon を示しています。三角形は緑で塗りつぶされ、1 ピクセルの黒枠で囲まれています。</target>
        </trans-unit>
        <trans-unit id="0d0bfb21f0c16f278028f93db09604fbe88c62c4" translate="yes" xml:space="preserve">
          <source>The following snippet shows a MapPolyline with 4 points, making a shape like the top part of a &quot;question mark&quot; (?), near Brisbane, Australia. The line drawn is 3 pixels in width and green in color.</source>
          <target state="translated">次のスニペットは、オーストラリアのブリスベン近郊にある「クエスチョンマーク」の上部のような形をした4点のMapPolylineを示しています。描かれた線は幅3ピクセル、色は緑です。</target>
        </trans-unit>
        <trans-unit id="b6bcec0a70aebe545695077f48fba016f035c7e2" translate="yes" xml:space="preserve">
          <source>The following snippet shows a MapQuickItem containing an Image object, to display a Marker on the Map. This strategy is used to show the map markers in the MapViewer example.</source>
          <target state="translated">次のスニペットは、マップ上にマーカーを表示するための Image オブジェクトを含む MapQuickItem を示しています。この戦略は、MapViewer の例でマップマーカーを表示するために使用されます。</target>
        </trans-unit>
        <trans-unit id="de9354e1008e6140ad6e99fac68f913f5ce3c5f2" translate="yes" xml:space="preserve">
          <source>The following snippet shows a Plugin object being created with the &lt;a href=&quot;qml-qtlocation-plugin#required-prop&quot;&gt;required&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-plugin#preferred-prop&quot;&gt;preferred&lt;/a&gt; properties set. This Plugin will attach to the first found plugin that supports both mapping and geocoding, and will prefer plugins named &quot;here&quot; or &quot;osm&quot; to any others.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;qml-qtlocation-plugin#required-prop&quot;&gt;必須&lt;/a&gt;および&lt;a href=&quot;qml-qtlocation-plugin#preferred-prop&quot;&gt;優先の&lt;/a&gt;プロパティセットを使用して作成されるプラグインオブジェクトを示しています。このプラグインは、マッピングとジオコーディングの両方をサポートする最初に見つかったプラグインに接続し、「ここ」または「osm」という名前のプラグインを他のプラグインよりも優先します。</target>
        </trans-unit>
        <trans-unit id="2f54e73fe44abab39f4fca6299a2a30525275919" translate="yes" xml:space="preserve">
          <source>The following snippet shows a map containing a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt;, centered at the coordinate (-27, 153) with a radius of 5km. The circle is filled in green, with a 3 pixel black border.</source>
          <target state="translated">次のスニペットは、半径5kmの座標（&lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;-27、153&lt;/a&gt;）を中心とするMapCircleを含むマップを示しています。円は緑で塗りつぶされ、3ピクセルの黒い境界線が表示されます。</target>
        </trans-unit>
        <trans-unit id="ccccf95bab1d2b9eb9e35fde1c127783ac76d52c" translate="yes" xml:space="preserve">
          <source>The following snippet shows a map containing a &lt;a href=&quot;qml-qtlocation-maprectangle&quot;&gt;MapRectangle&lt;/a&gt;, spanning from (-27, 153) to (-28, 153.5), near Brisbane, Australia. The rectangle is filled in green, with a 2 pixel black border.</source>
          <target state="translated">次のスニペットは、オーストラリアのブリスベン近くの（&lt;a href=&quot;qml-qtlocation-maprectangle&quot;&gt;-27、153&lt;/a&gt;）から（-28、153.5）までの範囲のMapRectangleを含むマップを示しています。長方形は緑色で塗りつぶされ、2ピクセルの黒い境界線が表示されます。</target>
        </trans-unit>
        <trans-unit id="239ac7a1dd66fe4eac9270829eb58539888cb0d9" translate="yes" xml:space="preserve">
          <source>The following snippet shows a map containing a MapCircle, centered at the coordinate (-27, 153) with a radius of 5km. The circle is filled in green, with a 3 pixel black border.</source>
          <target state="translated">次のスニペットは、座標 (-27,153)を中心とした半径 5km の MapCircle を含む地図を示しています。円は緑で塗りつぶされ、3 ピクセルの黒枠で囲まれています。</target>
        </trans-unit>
        <trans-unit id="630f072015c425264ffa58d39230cf9527f8886f" translate="yes" xml:space="preserve">
          <source>The following snippet shows a map containing a MapRectangle, spanning from (-27, 153) to (-28, 153.5), near Brisbane, Australia. The rectangle is filled in green, with a 2 pixel black border.</source>
          <target state="translated">次のスニペットは、オーストラリアのブリスベン付近の (-27,153)から (-28,153.5)までの範囲にある MapRectangle を含む地図を示しています。矩形は緑で塗りつぶされ、2 ピクセルの黒枠で囲まれています。</target>
        </trans-unit>
        <trans-unit id="fd054b64debeb6b8b39fb42c0e3b242d85ac1b29" translate="yes" xml:space="preserve">
          <source>The following snippet shows a simple Map and the necessary Plugin type to use it. The map is centered over Oslo, Norway, with zoom level 14.</source>
          <target state="translated">次のスニペットは、シンプルな地図と、それを使用するために必要なプラグインの種類を示しています。地図はノルウェーのオスロを中心にしており、ズームレベルは14です。</target>
        </trans-unit>
        <trans-unit id="49b293771eecb4dc88d31a2937e98eb6dd002151" translate="yes" xml:space="preserve">
          <source>The following snippet shows a state machine that will finish when a button is clicked:</source>
          <target state="translated">次のスニペットは、ボタンがクリックされたときに終了するステートマシンを示しています。</target>
        </trans-unit>
        <trans-unit id="854f0d3d7f4fbf1f010ca33c712d0486475de3bf" translate="yes" xml:space="preserve">
          <source>The following snippet shows how a Map using this plugin can be added as an overlay to display anti-aliased map items. Note that for such an overlay Map to be transparent, it is also necessary to set its color to a transparent one, such as &lt;b&gt;transparent&lt;/b&gt;, like in the example.</source>
          <target state="translated">次のスニペットは、このプラグインを使用するマップをオーバーレイとして追加して、アンチエイリアスされたマップアイテムを表示する方法を示しています。マップは透明であるこのようなオーバーレイのために、それのような、透明なものにその色を設定することも必要であることに留意されたい&lt;b&gt;透明&lt;/b&gt;例のように、。</target>
        </trans-unit>
        <trans-unit id="f4f2c81de693f7fcfee9f2c5492755ccbb5e8e74" translate="yes" xml:space="preserve">
          <source>The following snippet shows how a WasdController object can be added. By default both key and mouse based navigation is active, so in most cases there is no further configuration needed:</source>
          <target state="translated">次のスニペットは、どのようにして WasdController オブジェクトを追加できるかを示しています。デフォルトではキーベースとマウスベースの両方のナビゲーションがアクティブになっているので、ほとんどの場合、これ以上の設定は必要ありません。</target>
        </trans-unit>
        <trans-unit id="b425fbeff2ffcde3322c05c3146a68aaa5215971" translate="yes" xml:space="preserve">
          <source>The following snippet shows how a server application may check for errors:</source>
          <target state="translated">次のスニペットは、サーバーアプリケーションがエラーをチェックする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="d869523b75264f126ced28de460fee4992b94525" translate="yes" xml:space="preserve">
          <source>The following snippet shows how an item can be dragged with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;. However, dragging is not limited to mouse drags; anything that can move an item can generate drag events, including touch events, animations and bindings.</source>
          <target state="translated">次のスニペットは、項目を&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;でドラッグする方法を示しています。ただし、ドラッグはマウスドラッグに限定されません。アイテムを移動できるものはすべて、タッチイベント、アニメーション、バインディングなどのドラッグイベントを生成できます。</target>
        </trans-unit>
        <trans-unit id="417f40d6c4995a199855cef1bcaae2e8c7bcefba" translate="yes" xml:space="preserve">
          <source>The following snippet shows how these properties are used to display an image that is larger than the Flickable item itself:</source>
          <target state="translated">次のスニペットは、これらのプロパティを使用して、Flickable アイテム自体よりも大きな画像を表示する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="18cc16f6a4dc093d09b7671b1668cc383281c0c4" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to grab an item and store the results to a file.</source>
          <target state="translated">次のスニペットは、項目を取得して結果をファイルに保存する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="6687b2cd6b79c802464f98cf071b1ea28f904650" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to grab an item and use the results in another image element.</source>
          <target state="translated">以下のスニペットは、アイテムを取得してその結果を別の画像要素で使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a3a025f3b01137a984da3ddb06c8101f95002fb7" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtlocation-mapitemgroup&quot;&gt;MapItemGroup&lt;/a&gt; to create a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt;, centered at the coordinate (63, -18) with a radius of 100km, filled in red, surrounded by an ondulated green border, both contained in a semitransparent blue circle with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; that moves the whole group. This group is defined in a separate file named PolygonGroup.qml:</source>
          <target state="translated">どのように使用するには、次のスニペットを示し&lt;a href=&quot;qml-qtlocation-mapitemgroup&quot;&gt;MapItemGroupを&lt;/a&gt;作成する&lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircleを&lt;/a&gt; ondulated緑色の枠で囲まれた赤色に充填された100キロの半径と（63、-18）の座標を中心とし、Aと半透明青色の円に含まれる両方グループ全体を移動する&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;。このグループは、PolygonGroup.qmlという名前の別のファイルで定義されています。</target>
        </trans-unit>
        <trans-unit id="712064e484b40bf353f13bfdbd187a01d38b54ec" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-opacityanimator&quot;&gt;OpacityAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;qml-qtquick-opacityanimator&quot;&gt;OpacityAnimator&lt;/a&gt;をRectangleアイテムと一緒に使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c63016c0f83dd6a80f767adf3dd1f83f86c3222b" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-rotationanimator&quot;&gt;RotationAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="translated">次のスニペットは、Rectangleアイテムと共に&lt;a href=&quot;qml-qtquick-rotationanimator&quot;&gt;RotationAnimator&lt;/a&gt;を使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="10c5e22e0f647686f1ee2fcb3b7c2975abf99537" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-scaleanimator&quot;&gt;ScaleAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;qml-qtquick-scaleanimator&quot;&gt;ScaleAnimator&lt;/a&gt;をRectangleアイテムと一緒に使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="a36a9d6738e750f21047dcf447ffa54c9243f8d1" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-uniformanimator&quot;&gt;UniformAnimator&lt;/a&gt; together with a &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; item.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt;アイテムと共に&lt;a href=&quot;qml-qtquick-uniformanimator&quot;&gt;UniformAnimator&lt;/a&gt;を使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="aec1b765a4616a15ff772ca5db3521774bd7099b" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-xanimator&quot;&gt;XAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;qml-qtquick-xanimator&quot;&gt;XAnimator&lt;/a&gt;をRectangleアイテムと一緒に使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="291f9b98999a43d5ba68cd8e6688a6bb24ea5628" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-yanimator&quot;&gt;YAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;qml-qtquick-yanimator&quot;&gt;YAnimator&lt;/a&gt;をRectangleアイテムと一緒に使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="588189dc589068dde2e3ba6ea986c53a04daef70" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a MapItemGroup to create a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt;, centered at the coordinate (63, -18) with a radius of 100km, filled in red, surrounded by an ondulated green border, both contained in a semitransparent blue circle with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; that moves the whole group. This group is defined in a separate file named PolygonGroup.qml:</source>
          <target state="translated">どのように作成するMapItemGroupを使用するには、次のスニペットを示し&lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircleを&lt;/a&gt;ondulated緑色の枠で囲まれた赤色に充填された100キロの半径と（63、-18）の座標を中心とし、Aと半透明青色の円に含まれる両方グループ全体を動かす&lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;。このグループは、PolygonGroup.qmlという名前の別のファイルで定義されています。</target>
        </trans-unit>
        <trans-unit id="16765b9c733b627b11263ae490ce580f8184b150" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a OpacityAnimator together with a Rectangle item.</source>
          <target state="translated">次のスニペットは、OpacityAnimatorをRectangleアイテムと一緒に使う方法を示しています。</target>
        </trans-unit>
        <trans-unit id="151a63a57341fbd680efbe14019dfccdc8839d76" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a RotationAnimator together with a Rectangle item.</source>
          <target state="translated">次のスニペットは、RotationAnimatorをRectangleアイテムと一緒に使う方法を示しています。</target>
        </trans-unit>
        <trans-unit id="aae84b2853ef36fcab7f3eefb41317199d4816c1" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a ScaleAnimator together with a Rectangle item.</source>
          <target state="translated">次のスニペットは、ScaleAnimatorをRectangleアイテムと一緒に使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="04c931389ed656f76363bc9b60adc122149fe3f8" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a UniformAnimator together with a &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; item.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;UniformAnimatorをShaderEffect&lt;/a&gt;アイテムと一緒に使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="98f4e4a406ec8ebec4026a65cedff4f2dfab747f" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a XAnimator together with a Rectangle item.</source>
          <target state="translated">次のスニペットは、XAnimatorをRectangleアイテムと一緒に使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="d478289edf7eecc1639431f61fe72d69a5208567" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a YAnimator together with a Rectangle item.</source>
          <target state="translated">次のスニペットは、YAnimatorをRectangleアイテムと一緒に使う方法を示しています。</target>
        </trans-unit>
        <trans-unit id="237678c2415e59c68a7f105f2220e645f6ce8cbd" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use the &lt;a href=&quot;qml-qtquick-controls-busyindicator&quot;&gt;BusyIndicator&lt;/a&gt;:</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;qml-qtquick-controls-busyindicator&quot;&gt;BusyIndi​​catorの&lt;/a&gt;使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="6bc21df83bdd0e5465a5eec3b1bda7518e667d1a" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use the &lt;a href=&quot;qml-qtquick-controls2-busyindicator&quot;&gt;BusyIndicator&lt;/a&gt;:</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;qml-qtquick-controls2-busyindicator&quot;&gt;BusyIndi​​catorの&lt;/a&gt;使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="48f3ffdd700d359eba8f9d3c5218011a25b4810c" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use the BusyIndicator:</source>
          <target state="translated">次のスニペットは、BusyIndicatorの使い方を示しています。</target>
        </trans-unit>
        <trans-unit id="11ca60418911884a52454d93829caaf3df7146b2" translate="yes" xml:space="preserve">
          <source>The following snippet shows the code needed to create such a state machine.</source>
          <target state="translated">次のスニペットは、このようなステートマシンを作成するために必要なコードを示しています。</target>
        </trans-unit>
        <trans-unit id="c368a3a285bfd83ec62f4f68aaf44a205ca2d6b2" translate="yes" xml:space="preserve">
          <source>The following snippet shows the code needed to create such a state machine. First, we create the state machine and states:</source>
          <target state="translated">次のスニペットは、このようなステートマシンを作成するために必要なコードを示しています。まず、ステートマシンとステートを作成します。</target>
        </trans-unit>
        <trans-unit id="637489a5b59118fc5e4c20e6a79e2d04d364181c" translate="yes" xml:space="preserve">
          <source>The following snippet uses the &lt;code&gt;icon&lt;/code&gt; property to build an &lt;code&gt;Image&lt;/code&gt; component:</source>
          <target state="translated">次のスニペットは、 &lt;code&gt;icon&lt;/code&gt; プロパティを使用して &lt;code&gt;Image&lt;/code&gt; コンポーネントを作成します。</target>
        </trans-unit>
        <trans-unit id="527d4f072e80f433c3ebb71ff383b752e5b2187f" translate="yes" xml:space="preserve">
          <source>The following snippets present examples where the Basic style's controls have been customized using the same approach as the &lt;a href=&quot;qtquickcontrols2-customize#customizing-a-control&quot;&gt;Customizing a Control&lt;/a&gt; section. The code can be used as a starting point to implement a custom look and feel.</source>
          <target state="translated">次のスニペットは、基本スタイルのコントロールが「コントロールの&lt;a href=&quot;qtquickcontrols2-customize#customizing-a-control&quot;&gt;カスタマイズ」&lt;/a&gt;セクションと同じアプローチを使用してカスタマイズされた例を示しています。このコードは、カスタムのルックアンドフィールを実装するための開始点として使用できます。</target>
        </trans-unit>
        <trans-unit id="7ece4dfe211dcce2e091158459a22b7facd86691" translate="yes" xml:space="preserve">
          <source>The following snippets present examples where the default style's controls have been customized using the same approach as the &lt;a href=&quot;#customizing-a-control&quot;&gt;Customizing a Control&lt;/a&gt; section. The code can be used as a starting point to implement a custom look and feel.</source>
          <target state="translated">以下のスニペットは、デフォルトスタイルのコントロールが&lt;a href=&quot;#customizing-a-control&quot;&gt;、コントロール&lt;/a&gt;のカスタマイズセクションと同じアプローチを使用してカスタマイズされている例を示しています。このコードは、カスタムのルックアンドフィールを実装するための開始点として使用できます。</target>
        </trans-unit>
        <trans-unit id="e9e03e4ac441c00e7bf09e08f41b70ab10d78a9f" translate="yes" xml:space="preserve">
          <source>The following snippets present examples where the default style's controls have been customized using the same approach as the &lt;a href=&quot;qtquickcontrols2-customize#customizing-a-control&quot;&gt;Customizing a Control&lt;/a&gt; section. The code can be used as a starting point to implement a custom look and feel.</source>
          <target state="translated">次のスニペットは、デフォルトスタイルのコントロールが「コントロールの&lt;a href=&quot;qtquickcontrols2-customize#customizing-a-control&quot;&gt;カスタマイズ」&lt;/a&gt;セクションと同じアプローチを使用してカスタマイズされた例を示しています。このコードは、カスタムのルックアンドフィールを実装するための開始点として使用できます。</target>
        </trans-unit>
        <trans-unit id="82a52149eec07759103ac512ce56fde01ec777d8" translate="yes" xml:space="preserve">
          <source>The following special, uppercase keywords are available:</source>
          <target state="translated">大文字の特殊なキーワードは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="9d756c1386ff5f7f8fb8e7bf197a6e9c59a0ac51" translate="yes" xml:space="preserve">
          <source>The following standard command line options are available for X11:</source>
          <target state="translated">X11では、以下の標準コマンドラインオプションが利用できます。</target>
        </trans-unit>
        <trans-unit id="f23e350fc1a2df19479b259ced3c5e2e8d588b0a" translate="yes" xml:space="preserve">
          <source>The following statements instantiate the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; object and pass it to the host to enable &quot;remoting&quot;, that is, making the object visible to the QtRO network:</source>
          <target state="translated">次のステートメントは、&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt;オブジェクトをインスタンス化してホストに渡し、「リモート処理」を有効にします。つまり、オブジェクトをQtROネットワークに表示します。</target>
        </trans-unit>
        <trans-unit id="0fc560fac41804f818b01f0688c02f54fa0bcb15" translate="yes" xml:space="preserve">
          <source>The following status values are possible:</source>
          <target state="translated">以下のようなステータス値が考えられます。</target>
        </trans-unit>
        <trans-unit id="73be85388fa38b446830d119242ce2226598da39" translate="yes" xml:space="preserve">
          <source>The following strategies are available:</source>
          <target state="translated">以下のような戦略があります。</target>
        </trans-unit>
        <trans-unit id="fda8d5ba303fe4745d9707b7def03e544d49f9bf" translate="yes" xml:space="preserve">
          <source>The following subclasses are available:</source>
          <target state="translated">以下のようなサブクラスがあります。</target>
        </trans-unit>
        <trans-unit id="057a20ccdfbfc72915814382f1bb10af83bebbe4" translate="yes" xml:space="preserve">
          <source>The following subcontrols are available:</source>
          <target state="translated">以下のサブコントロールが利用できます。</target>
        </trans-unit>
        <trans-unit id="1a96fd586f854eb2ab13be7aff194e4624cf96c5" translate="yes" xml:space="preserve">
          <source>The following table describes how to choose between &lt;a href=&quot;qtglobal#qgetenv&quot;&gt;qgetenv&lt;/a&gt;() and &lt;a href=&quot;qtglobal#qEnvironmentVariable&quot;&gt;qEnvironmentVariable&lt;/a&gt;():</source>
          <target state="translated">次の表は、&lt;a href=&quot;qtglobal#qgetenv&quot;&gt;qgetenv&lt;/a&gt;（）または&lt;a href=&quot;qtglobal#qEnvironmentVariable&quot;&gt;qEnvironmentVariable&lt;/a&gt;（）から選択する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="51f90ba20ae6f53886ebf8f408106e3b048e909c" translate="yes" xml:space="preserve">
          <source>The following table explains how each handle will be resized depending on the orientation of the split view:</source>
          <target state="translated">以下の表は、分割ビューの向きに応じて各ハンドルのサイズを変更する方法を説明しています。</target>
        </trans-unit>
        <trans-unit id="9479d8d85fbeb2c5c369e3a782119e6265138e3f" translate="yes" xml:space="preserve">
          <source>The following table explains what the default attribute codes are, the &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt; types associated, the default value if said attribute is missing and whether it's used in requests or replies.</source>
          <target state="translated">次の表は、デフォルトの属性コードとは何か、関連付けられている&lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt;タイプ、その属性が欠落している場合のデフォルト値、および要求と応答のどちらで使用されているかを説明しています。</target>
        </trans-unit>
        <trans-unit id="2e542c42bb2038dd0a9dafd9f5a0126d8053c505" translate="yes" xml:space="preserve">
          <source>The following table explains what the default attribute codes are, the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; types associated, the default value if said attribute is missing and whether it's used in requests or replies.</source>
          <target state="translated">次の表は、デフォルトの属性コードとは何か、関連付けられている&lt;a href=&quot;qvariant&quot;&gt;QVariantの&lt;/a&gt;タイプ、上記の属性がない場合のデフォルト値、およびそれが要求または応答で使用されるかどうかを説明しています。</target>
        </trans-unit>
        <trans-unit id="5b4979bb341572bd08f16075ffbfd7964122236d" translate="yes" xml:space="preserve">
          <source>The following table gives an overview of the functionality provided by the &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt;</source>
          <target state="translated">次の表は、&lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManagerが&lt;/a&gt;提供する機能の概要を示しています</target>
        </trans-unit>
        <trans-unit id="0450340f1e9a783b64975da1494a886902470866" translate="yes" xml:space="preserve">
          <source>The following table gives an overview of the functionality provided by the QPlaceManager</source>
          <target state="translated">次の表は、QPlaceManager が提供する機能の概要を示しています。</target>
        </trans-unit>
        <trans-unit id="cbb677b7da81b1a5856d300222c4a8d95a9c4193" translate="yes" xml:space="preserve">
          <source>The following table gives examples of paths on different operating systems. The first path is the writable path (unless noted). Other, additional paths, if any, represent non-writable locations.</source>
          <target state="translated">次の表は、異なるオペレーティングシステムでのパスの例を示しています。最初のパスは書き込み可能なパスです (特に断りのない限り)。その他の追加パスがある場合は、書き込み不可能な場所を表しています。</target>
        </trans-unit>
        <trans-unit id="a5b170fa7c9802b991b9960baba26906a4a09952" translate="yes" xml:space="preserve">
          <source>The following table lists examples of assets (taken from the default Imagine style assets) for all controls. The list is not exhaustive, as not all elements need assets, but it can be used as a guide when creating your own assets.</source>
          <target state="translated">以下の表は、すべてのコントロールのアセット(デフォルトのImagineスタイルのアセット)の例を示しています。すべての要素がアセットを必要とするわけではないので、リストは網羅的ではありませんが、独自のアセットを作成する際のガイドとして使用することができます。</target>
        </trans-unit>
        <trans-unit id="c346362c131e1d602ff9c155136dca5e5edfa313" translate="yes" xml:space="preserve">
          <source>The following table lists how the types are mapped:</source>
          <target state="translated">次の表は、タイプがどのようにマッピングされているかを示しています。</target>
        </trans-unit>
        <trans-unit id="1578ec4d96e4a08ca7cf2ac4533dcdc274495dd9" translate="yes" xml:space="preserve">
          <source>The following table lists mandatory parameters that</source>
          <target state="translated">次の表は</target>
        </trans-unit>
        <trans-unit id="5c627caa6b97612dacc60351586ea54e554b89ee" translate="yes" xml:space="preserve">
          <source>The following table lists optional parameters that can be passed to the HERE plugin.</source>
          <target state="translated">次の表は、HERE プラグインに渡すことができるオプションのパラメータの一覧です。</target>
        </trans-unit>
        <trans-unit id="296e450288f841cce8ebf769c338f7652df2200d" translate="yes" xml:space="preserve">
          <source>The following table lists optional parameters that can be passed to the Mapbox plugin.</source>
          <target state="translated">次の表は、Mapbox プラグインに渡すことができるオプションのパラメータの一覧です。</target>
        </trans-unit>
        <trans-unit id="09b0d73aa76f6f9902967395af555554e0ff4f5d" translate="yes" xml:space="preserve">
          <source>The following table lists optional parameters that can be passed to the Open Street Map plugin.</source>
          <target state="translated">次の表は、Open Street Map プラグインに渡すことができるオプションのパラメータの一覧です。</target>
        </trans-unit>
        <trans-unit id="0b51ecab486e42d262189a2f79899634e270bd20" translate="yes" xml:space="preserve">
          <source>The following table lists parameters that</source>
          <target state="translated">次の表は</target>
        </trans-unit>
        <trans-unit id="5c7106e5cefd7b2d9fff3b4db67a47d290654678" translate="yes" xml:space="preserve">
          <source>The following table lists parts (modules) of Qt Shader Tools that incorporate code licensed under third-party open-source licenses:</source>
          <target state="translated">以下の表は、サードパーティのオープンソースライセンスでライセンスされたコードを組み込んだQt Shader Toolsのパーツ(モジュール)の一覧です。</target>
        </trans-unit>
        <trans-unit id="68dde8a32d2a7a1a48b929ea9d201e07af5022ac" translate="yes" xml:space="preserve">
          <source>The following table lists some frequently used variables and describes their contents. For a full list of variables and their descriptions, see &lt;a href=&quot;qmake-variable-reference&quot;&gt;Variables&lt;/a&gt;.</source>
          <target state="translated">次の表に、頻繁に使用される変数とその内容を示します。変数とその説明の完全なリストについては、参照&lt;a href=&quot;qmake-variable-reference&quot;&gt;変数を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="788423691076b7c0b3103e5ee3c1de2f7b396b45" translate="yes" xml:space="preserve">
          <source>The following table lists some frequently used variables and describes their contents. For a full list of variables and their descriptions, see &lt;a href=&quot;qmake-variable-reference#&quot;&gt;Variables&lt;/a&gt;.</source>
          <target state="translated">次の表は、頻繁に使用される変数とその内容の一覧です。変数の完全なリストとその説明については、&lt;a href=&quot;qmake-variable-reference#&quot;&gt;変数を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="637f93170f3a9482803eef8e3379986a8b326751" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; supports.</source>
          <target state="translated">次の表に、QCborStreamReaderがサポートするCBOR機能を&lt;a href=&quot;qcborstreamreader&quot;&gt;示し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0232e9fffe997cb4280ca68b0b13fd4ff4d1c28d" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; supports.</source>
          <target state="translated">次の表に、QCborStreamWriterがサポートするCBOR機能を&lt;a href=&quot;qcborstreamwriter&quot;&gt;示し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="308338146abb9454864e4dde8fe6ad75a67eebd5" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; supports.</source>
          <target state="translated">次の表に、QCborValueがサポートするCBOR機能を&lt;a href=&quot;qcborvalue&quot;&gt;示し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8ee68075e952ba37993c6110084882b98d4a5dc5" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that QCborStreamReader supports.</source>
          <target state="translated">次の表は、QCborStreamReader がサポートする CBOR 機能の一覧です。</target>
        </trans-unit>
        <trans-unit id="d95e7585520356d55af2fb99c51d22b94b1ece83" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that QCborStreamWriter supports.</source>
          <target state="translated">以下の表に QCborStreamWriter がサポートする CBOR 機能を示します。</target>
        </trans-unit>
        <trans-unit id="aa6eece6f4b1a3efea96f2036b1753cb509a2be1" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that QCborValue supports.</source>
          <target state="translated">次の表は、QCborValueがサポートするCBOR機能の一覧です。</target>
        </trans-unit>
        <trans-unit id="68ee0ed6376c6f930d6de818ba29218244284dcc" translate="yes" xml:space="preserve">
          <source>The following table lists the CSS properties supported by Qt's &lt;a href=&quot;richtext&quot;&gt;rich text&lt;/a&gt; engine:</source>
          <target state="translated">次の表に、Qtの&lt;a href=&quot;richtext&quot;&gt;リッチテキスト&lt;/a&gt;エンジンでサポートされているCSSプロパティを示します。</target>
        </trans-unit>
        <trans-unit id="b0fe0103e0418c895309529c0f30bdde950e2b49" translate="yes" xml:space="preserve">
          <source>The following table lists the CSS properties supported by Qt's &lt;a href=&quot;richtext#&quot;&gt;rich text&lt;/a&gt; engine:</source>
          <target state="translated">次の表に、Qtの&lt;a href=&quot;richtext#&quot;&gt;リッチテキスト&lt;/a&gt;エンジンでサポートされているCSSプロパティを示します。</target>
        </trans-unit>
        <trans-unit id="5cf01b5ae1b72fc4d2d3d757b4189cacf34d95fe" translate="yes" xml:space="preserve">
          <source>The following table lists the HTML tags supported by Qt's &lt;a href=&quot;richtext&quot;&gt;rich text&lt;/a&gt; engine:</source>
          <target state="translated">次の表に、Qtの&lt;a href=&quot;richtext&quot;&gt;リッチテキスト&lt;/a&gt;エンジンでサポートされているHTMLタグを示します。</target>
        </trans-unit>
        <trans-unit id="68f4ce3ffac9b4663b61f33fe4a15a8222316f9b" translate="yes" xml:space="preserve">
          <source>The following table lists the HTML tags supported by Qt's &lt;a href=&quot;richtext#&quot;&gt;rich text&lt;/a&gt; engine:</source>
          <target state="translated">次の表に、Qtの&lt;a href=&quot;richtext#&quot;&gt;リッチテキスト&lt;/a&gt;エンジンでサポートされているHTMLタグを示します。</target>
        </trans-unit>
        <trans-unit id="7c7c84fa5f826ad4fec8e59af4c7259675c78691" translate="yes" xml:space="preserve">
          <source>The following table lists the Qt widgets that can be customized using style sheets:</source>
          <target state="translated">スタイルシートを使ってカスタマイズできるQtウィジェットの一覧です。</target>
        </trans-unit>
        <trans-unit id="7b38bca7fdfae4da81180af7943e75f6799882c9" translate="yes" xml:space="preserve">
          <source>The following table lists the available &lt;a href=&quot;http://www.w3.org/TR/SVG/types.html#ColorKeywords&quot;&gt;SVG colors&lt;/a&gt;. They are available in the &lt;code&gt;QColorConstants::Svg&lt;/code&gt; inner namespace.</source>
          <target state="translated">次の表に、使用可能な&lt;a href=&quot;http://www.w3.org/TR/SVG/types.html#ColorKeywords&quot;&gt;SVGカラーを&lt;/a&gt;示します。それらは &lt;code&gt;QColorConstants::Svg&lt;/code&gt; 内部名前空間で利用できます。</target>
        </trans-unit>
        <trans-unit id="2e7c5c4f1343821f8692f187e33865e1f0619e97" translate="yes" xml:space="preserve">
          <source>The following table lists the available &lt;a href=&quot;http://www.w3.org/TR/SVG/types.html#ColorKeywords&quot;&gt;SVG colors&lt;/a&gt;:</source>
          <target state="translated">次の表に、使用可能な&lt;a href=&quot;http://www.w3.org/TR/SVG/types.html#ColorKeywords&quot;&gt;SVGカラーを&lt;/a&gt;示します。</target>
        </trans-unit>
        <trans-unit id="089cc8ef53ab36b0164a86ea5b0616d41cfb8ae8" translate="yes" xml:space="preserve">
          <source>The following table lists the command-line options recognized by &lt;code&gt;balsam&lt;/code&gt; when converting Qt 3D Studio projects:</source>
          <target state="translated">次の表に、Qt &lt;code&gt;balsam&lt;/code&gt; プロジェクトを変換するときにbalsamによって認識されるコマンドラインオプションを示します。</target>
        </trans-unit>
        <trans-unit id="33e2177f6b0111c31c348a6e126b41cb8f95d577" translate="yes" xml:space="preserve">
          <source>The following table lists the command-line options recognized by &lt;code&gt;balsam&lt;/code&gt; when converting asset files:</source>
          <target state="translated">次の表に、アセットファイルを変換するときに &lt;code&gt;balsam&lt;/code&gt; によって認識されるコマンドラインオプションを示します。</target>
        </trans-unit>
        <trans-unit id="567c949df61caa81f10b5bc0b08162626a8b38c6" translate="yes" xml:space="preserve">
          <source>The following table lists the command-line options recognized by &lt;code&gt;uic&lt;/code&gt;.</source>
          <target state="translated">次の表は、 &lt;code&gt;uic&lt;/code&gt; が認識するコマンドラインオプションの一覧です。</target>
        </trans-unit>
        <trans-unit id="ca2baecfd51112166c32210cce014eaad08f9990" translate="yes" xml:space="preserve">
          <source>The following table lists the conversion this function will apply:</source>
          <target state="translated">次の表は、この関数が適用する変換の一覧です。</target>
        </trans-unit>
        <trans-unit id="1da257bb3e1f2dce2ee14c75b42407882ce930fa" translate="yes" xml:space="preserve">
          <source>The following table lists the mapping of JSON types to CBOR types:</source>
          <target state="translated">以下の表は、JSON型とCBOR型とのマッピングを示しています。</target>
        </trans-unit>
        <trans-unit id="05c0084c7e7e143ef61a6afd80cab5ed42e1cc45" translate="yes" xml:space="preserve">
          <source>The following table lists the mapping performed between &lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;QCborValue types&lt;/a&gt; and &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;Qt meta types&lt;/a&gt;.</source>
          <target state="translated">次の表に、&lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;QCborValueタイプ&lt;/a&gt;と&lt;a href=&quot;qmetatype#Type-enum&quot;&gt;Qtメタタイプの&lt;/a&gt;間で実行されるマッピングを示します。</target>
        </trans-unit>
        <trans-unit id="1e4a3fdecad311a1cfac6720a9b6eccfd0c8365b" translate="yes" xml:space="preserve">
          <source>The following table lists the properties controlled by themes and the default values for &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Theme3D.ThemeUserDefined&lt;/a&gt;.</source>
          <target state="translated">次の表は、テーマによって制御されるプロパティと&lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Theme3D.ThemeUserDefinedの&lt;/a&gt;デフォルト値を示しています。</target>
        </trans-unit>
        <trans-unit id="50b4c64c4085845acf52ecfdb9140fe7407e0333" translate="yes" xml:space="preserve">
          <source>The following table lists the properties controlled by themes and the default values for &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;ThemeUserDefined&lt;/a&gt;.</source>
          <target state="translated">次の表は、テーマによって制御されるプロパティと&lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;ThemeUserDefinedの&lt;/a&gt;デフォルト値を示しています。</target>
        </trans-unit>
        <trans-unit id="bdd373934c31eb139c06704e68a350ede016ead9" translate="yes" xml:space="preserve">
          <source>The following table lists the translation catalogs available for the Qt modules and tools in Qt.</source>
          <target state="translated">以下の表は、Qtのモジュールとツールで利用できる翻訳カタログの一覧です。</target>
        </trans-unit>
        <trans-unit id="59d6fedde61260ac3e6abd49f3d454131740beb1" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-imagine&quot;&gt;Imagine style&lt;/a&gt; in an &lt;code&gt;Imagine&lt;/code&gt; section of the configuration file:</source>
          <target state="translated">設定するために使用することができ、次の表の値は、&lt;a href=&quot;qtquickcontrols2-imagine&quot;&gt;スタイルを想像&lt;/a&gt;して &lt;code&gt;Imagine&lt;/code&gt; 設定ファイルのセクション：</target>
        </trans-unit>
        <trans-unit id="84ce62c3dab32b047b48a9e3c2a681db8e77c3b9" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-imagine#&quot;&gt;Imagine style&lt;/a&gt; in an &lt;code&gt;Imagine&lt;/code&gt; section of the configuration file:</source>
          <target state="translated">設定するために使用することができ、次の表の値は、&lt;a href=&quot;qtquickcontrols2-imagine#&quot;&gt;スタイルを想像&lt;/a&gt;して &lt;code&gt;Imagine&lt;/code&gt; 設定ファイルのセクション：</target>
        </trans-unit>
        <trans-unit id="79898a1c6b471ee4e233ef5961d2350b7ec4b445" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;Material style&lt;/a&gt; in a &lt;code&gt;Material&lt;/code&gt; section of the configuration file:</source>
          <target state="translated">設定するために使用することができ、次の表の値&lt;a href=&quot;qtquickcontrols2-material&quot;&gt;マテリアルスタイルを&lt;/a&gt;して &lt;code&gt;Material&lt;/code&gt; 設定ファイルのセクション：</target>
        </trans-unit>
        <trans-unit id="410edc91172074e291a8120c56f45b1e4aaf902c" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;Material style&lt;/a&gt; in a &lt;code&gt;Material&lt;/code&gt; section of the configuration file:</source>
          <target state="translated">設定するために使用することができ、次の表の値&lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;マテリアルスタイルを&lt;/a&gt;して &lt;code&gt;Material&lt;/code&gt; 設定ファイルのセクション：</target>
        </trans-unit>
        <trans-unit id="15a83a31c39b5bf5d769996935d2397cb51b4e15" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-universal&quot;&gt;Universal style&lt;/a&gt; in a &lt;code&gt;Universal&lt;/code&gt; section of the configuration file:</source>
          <target state="translated">設定するために使用することができ、次の表の値&lt;a href=&quot;qtquickcontrols2-universal&quot;&gt;ユニバーサルスタイルを&lt;/a&gt;に &lt;code&gt;Universal&lt;/code&gt; 設定ファイルのセクション：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
