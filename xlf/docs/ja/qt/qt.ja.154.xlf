<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="ff4c946a3851841484bfe88da646bea6e5a5a750" translate="yes" xml:space="preserve">
          <source>Office paper material. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">オフィスの紙の材料。&lt;a href=&quot;#details&quot;&gt;もっと...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e5b4d5d08b2c4a1dd9ed75e0f01d5b0d8c6e227" translate="yes" xml:space="preserve">
          <source>Offline Installation</source>
          <target state="translated">オフラインインストール</target>
        </trans-unit>
        <trans-unit id="f04dd3eb6e5b722524af07586142a6a5e22a05d2" translate="yes" xml:space="preserve">
          <source>Offline geocoding is supported.</source>
          <target state="translated">オフラインジオコーディングに対応しています。</target>
        </trans-unit>
        <trans-unit id="e2b02b40206dadcaa999b070b1015221f9826829" translate="yes" xml:space="preserve">
          <source>Offline mapping is supported.</source>
          <target state="translated">オフラインマッピングに対応しています。</target>
        </trans-unit>
        <trans-unit id="0f03171d3974527f420ac51feda38bf492bf0e7c" translate="yes" xml:space="preserve">
          <source>Offline navigation is supported.</source>
          <target state="translated">オフラインナビゲーションに対応しています。</target>
        </trans-unit>
        <trans-unit id="4de115fa9165a74583fc9562660bb964a3f750b8" translate="yes" xml:space="preserve">
          <source>Offline places is supported.</source>
          <target state="translated">オフラインの場所をサポートしています。</target>
        </trans-unit>
        <trans-unit id="1b3ad425580a2eef53462c2cf2e115d57798eec7" translate="yes" xml:space="preserve">
          <source>Offline routing is supported.</source>
          <target state="translated">オフラインルーティングに対応しています。</target>
        </trans-unit>
        <trans-unit id="223ce5d0faa863c1120f803c63b90fe913e088bc" translate="yes" xml:space="preserve">
          <source>Offscreen</source>
          <target state="translated">Offscreen</target>
        </trans-unit>
        <trans-unit id="c91f5afa194bf86b3169bcf5c239573fb510e226" translate="yes" xml:space="preserve">
          <source>Offset of the emission map mask. Default is &lt;code&gt;Qt.vector3d(0, 0, 0)&lt;/code&gt;.</source>
          <target state="translated">エミッションマップマスクのオフセット。デフォルトは &lt;code&gt;Qt.vector3d(0, 0, 0)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="90db116c7b0ffc9c33b611e6e24d02b785766da5" translate="yes" xml:space="preserve">
          <source>Offset of the reflection map. Default is &lt;code&gt;0.5&lt;/code&gt;.</source>
          <target state="translated">反射マップのオフセット。デフォルトは &lt;code&gt;0.5&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="10a4d688a6c48cc3dc2b288e36bf5b3636a47680" translate="yes" xml:space="preserve">
          <source>Offset of the roughness map. Default is &lt;code&gt;0.16&lt;/code&gt;.</source>
          <target state="translated">粗さマップのオフセット。デフォルトは &lt;code&gt;0.16&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5bc62c6a6bdc8447e3e98a86b4a6c284573ceb44" translate="yes" xml:space="preserve">
          <source>OffsetData Struct</source>
          <target state="translated">オフセットデータ構造</target>
        </trans-unit>
        <trans-unit id="478b0ce81a8454b53cb8994943841aa6ee3577ce" translate="yes" xml:space="preserve">
          <source>OffsetData::abbreviation The abbreviation in effect at the datetime.</source>
          <target state="translated">OffsetData::abbreviation 日付時点で有効な略語。</target>
        </trans-unit>
        <trans-unit id="809a2b71f3d6d907133331da1fcf794e18433002" translate="yes" xml:space="preserve">
          <source>OffsetData::atUtc The datetime of the offset data in UTC time.</source>
          <target state="translated">OffsetData::atUtc オフセットデータの日付時刻をUTC時間で表したもの。</target>
        </trans-unit>
        <trans-unit id="d51b4e24aef300f101d0666b301db6b53d8915a9" translate="yes" xml:space="preserve">
          <source>OffsetData::daylightTimeOffset The DST offset component of the total offset.</source>
          <target state="translated">OffsetData::daylightTimeOffset 総オフセットの DST オフセット構成要素。</target>
        </trans-unit>
        <trans-unit id="b6a128d5c88c058a76a0bb3f99106b4d50940e3e" translate="yes" xml:space="preserve">
          <source>OffsetData::offsetFromUtc The total offset from UTC in effect at the datetime.</source>
          <target state="translated">OffsetData::offsetFromUtc 日付時点で有効なUTCからの総オフセット。</target>
        </trans-unit>
        <trans-unit id="5d8ebe0ff851df709200f23565e3b8c61bffe185" translate="yes" xml:space="preserve">
          <source>OffsetData::standardTimeOffset The standard time offset component of the total offset.</source>
          <target state="translated">OffsetData::standardTimeOffset 総オフセットの標準時間オフセット成分。</target>
        </trans-unit>
        <trans-unit id="21e683ce4d08545b363ed41ad6d53878ec077e61" translate="yes" xml:space="preserve">
          <source>Offsets From UTC</source>
          <target state="translated">UTCからのオフセット</target>
        </trans-unit>
        <trans-unit id="5db66a762da27792167b5e661317ef121ab59dcf" translate="yes" xml:space="preserve">
          <source>Offsets apply for horizontal center, vertical center, and baseline anchors.</source>
          <target state="translated">オフセットは、水平中心、垂直中心、ベースラインアンカーに適用されます。</target>
        </trans-unit>
        <trans-unit id="083a5552133afe7c7b78d7e92bf25dc839408eb4" translate="yes" xml:space="preserve">
          <source>Often the item models will have a single role that contains information you want to map to multiple values. A typical example of this is a timestamp field when generating a bar graph with two time related axes, for example years and months. To enable mapping a single item model role to more than one data field, pattern matching and replacing mechanism is provided by item model proxies. You can also use this mechanism to reformat data even in one-to-one mapping cases.</source>
          <target state="translated">多くの場合、アイテムモデルは、複数の値にマッピングしたい情報を含む単一のロールを持つことになります。典型的な例としては、2つの時間に関連する軸、例えば年と月のような棒グラフを生成するときのタイムスタンプフィールドがあります。1つのアイテムモデル・ロールを複数のデータ・フィールドにマッピングできるようにするために、アイテムモデル・プロキシによってパターン・マッチングと置換のメカニズムが提供されています。また、1対1のマッピングの場合でも、このメカニズムを使用してデータを再フォーマットすることができます。</target>
        </trans-unit>
        <trans-unit id="07351a73c13b6ecf21ea7d8a4dde2b05e544964c" translate="yes" xml:space="preserve">
          <source>Often this is used to update status information.</source>
          <target state="translated">ステータス情報の更新に使用されることが多いです。</target>
        </trans-unit>
        <trans-unit id="f3ffa543d2ed458a9b9a43ff40cd280625f0a189" translate="yes" xml:space="preserve">
          <source>Often when dealing with items in a scene, it can be useful to map coordinates and arbitrary shapes from the scene to an item, from item to item, or from the view to the scene. For example, when you click your mouse in &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;'s viewport, you can ask the scene what item is under the cursor by calling &lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;QGraphicsView::mapToScene&lt;/a&gt;(), followed by &lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;QGraphicsScene::itemAt&lt;/a&gt;(). If you want to know where in the viewport an item is located, you can call &lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;QGraphicsItem::mapToScene&lt;/a&gt;() on the item, then &lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;QGraphicsView::mapFromScene&lt;/a&gt;() on the view. Finally, if you use want to find what items are inside a view ellipse, you can pass a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; to mapToScene(), and then pass the mapped path to &lt;a href=&quot;qgraphicsscene#items&quot;&gt;QGraphicsScene::items&lt;/a&gt;().</source>
          <target state="translated">多くの場合、シーン内のアイテムを処理する場合、座標と任意の形状をシーンからアイテムへ、アイテムからアイテムへ、またはビューからシーンへマッピングすると便利です。たとえば、&lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt;のビューポートでマウスをクリックすると、&lt;a href=&quot;qgraphicsview#mapToScene&quot;&gt;QGraphicsView :: mapToScene&lt;/a&gt;（）に続けて&lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;QGraphicsScene :: itemAt&lt;/a&gt;（）を呼び出すことで、カーソルの下にあるアイテムをシーンに尋ねることができます。ビューポート内のアイテムの場所を知りたい場合は、アイテムで&lt;a href=&quot;qgraphicsitem#mapToScene&quot;&gt;QGraphicsItem :: mapToScene&lt;/a&gt;（）を呼び出し、次に&lt;a href=&quot;qgraphicsview#mapFromScene&quot;&gt;ビューでQGraphicsView :: mapFromScene&lt;/a&gt;（）を呼び出すことができます。お使いのアイテムがビュー楕円の内側にあるものを検索したい場合は最後に、あなたが渡すことができ&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPathを&lt;/a&gt;（mapToSceneに）、その後にマッピングされたパスを渡します&lt;a href=&quot;qgraphicsscene#items&quot;&gt;QGraphicsScene :: items&lt;/a&gt;（）。</target>
        </trans-unit>
        <trans-unit id="e9d4b48fe3693b0cdf78b8dc6d9851b89bb75ecc" translate="yes" xml:space="preserve">
          <source>Often when linking against a library, qmake relies on the underlying platform to know what other libraries this library links against, and lets the platform pull them in. In many cases, however, this is not sufficient. For example, when statically linking a library, no other libraries are linked to, and therefore no dependencies to those libraries are created. However, an application that later links against this library will need to know where to find the symbols that the static library will require. qmake attempts to keep track of the dependencies of a library, where appropriate, if you explicitly enable tracking.</source>
          <target state="translated">ライブラリに対してリンクするとき、qmake はしばしば、このライブラリがどのような他のライブラリに対してリンクしているかを知るために、基礎となるプラットフォームに依存しています。しかし、多くの場合、これでは十分ではありません。例えば、ライブラリを静的にリンクしている場合、他のライブラリはリンクされていないので、それらのライブラリへの依存関係は作成されません。しかし、後でこのライブラリにリンクするアプリケーションは、静的ライブラリが必要とするシンボルがどこにあるかを知る必要があります。qmake は、明示的にトラッキングを有効にしている場合、必要に応じてライブラリの依存関係を追跡しようとします。</target>
        </trans-unit>
        <trans-unit id="8113d33edda2a9347e8827e56055228866817309" translate="yes" xml:space="preserve">
          <source>Often, QML applications are prototyped with test data that is later replaced by real data sources from C++ plugins. The &lt;code&gt;qmlscene&lt;/code&gt; utility assists in this aspect by loading test data into the application context. It looks for a directory named &lt;code&gt;dummydata&lt;/code&gt; in the same directory as the target QML file, and loads the .qml files in that directory as QML objects and bind them to the root context as properties named after the files.</source>
          <target state="translated">多くの場合、QMLアプリケーションは、C ++プラグインからの実際のデータソースによって後で置き換えられるテストデータでプロトタイプ化されます。 &lt;code&gt;qmlscene&lt;/code&gt; のアプリケーションコンテキストにテスト・データをロードすることにより、この態様における有用性を助けます。ターゲットQMLファイルと同じディレクトリで &lt;code&gt;dummydata&lt;/code&gt; という名前のディレクトリを探し、そのディレクトリ内の.qmlファイルをQMLオブジェクトとしてロードし、ファイルにちなんで名付けられたプロパティとしてルートコンテキストにバインドします。</target>
        </trans-unit>
        <trans-unit id="2ff6652bbae9100b879243bc1708a5778f0cca77" translate="yes" xml:space="preserve">
          <source>Often, it is required to set a fill pattern similar to the styles in &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::BrushStyle&lt;/a&gt;. You can use the background-color property for &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::SolidPattern&lt;/a&gt;, &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::RadialGradientPattern&lt;/a&gt;, &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::LinearGradientPattern&lt;/a&gt; and &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::ConicalGradientPattern&lt;/a&gt;. The other patterns are easily achieved by creating a background image that contains the pattern.</source>
          <target state="translated">多くの場合、&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: BrushStyleの&lt;/a&gt;スタイルと同様の塗りつぶしパターンを設定する必要があります。&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: SolidPattern&lt;/a&gt;、&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: RadialGradientPattern&lt;/a&gt;、&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: LinearGradientPattern&lt;/a&gt;および&lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: ConicalGradientPattern&lt;/a&gt;のbackground-colorプロパティを使用できます。他のパターンは、パターンを含む背景画像を作成することで簡単に実現できます。</target>
        </trans-unit>
        <trans-unit id="eff7f785639780a987136b4902b533bccaf698b9" translate="yes" xml:space="preserve">
          <source>Often, the design of RPC is such that different clients are independent of each other: for instance, two clients can ask a mapping service for directions and get different results.</source>
          <target state="translated">多くの場合、RPC の設計は、異なるクライアントが互いに独立しているように設計されています。例えば、2 つのクライアントが地図サービスに道を尋ねて、異なる結果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="602ad5e704343341cb60cce74db092f1bad4f667" translate="yes" xml:space="preserve">
          <source>Often, the documentor knows which Qt module the link target is in. When the module name is known, use the module name as the</source>
          <target state="translated">多くの場合、文書作成者はリンク先のQtモジュールがどのモジュールにあるかを知っています。モジュール名がわかっている場合は、モジュール名を</target>
        </trans-unit>
        <trans-unit id="ce673dc82d88a7fb26299bc0da6bea8af09e995c" translate="yes" xml:space="preserve">
          <source>Older QNX SDP releases and other architectures may also work, but are not subject to regular builds and testing.</source>
          <target state="translated">古い QNX SDP リリースやその他のアーキテクチャも動作する可能性がありますが、定期的なビルドやテストの対象にはなりません。</target>
        </trans-unit>
        <trans-unit id="4d8b1438569bf0c09e303aa88ebfe324ecdff0d2" translate="yes" xml:space="preserve">
          <source>OldiesMusic</source>
          <target state="translated">OldiesMusic</target>
        </trans-unit>
        <trans-unit id="f84e621732c7417e4b038431f9cda4dfbe6e1e1e" translate="yes" xml:space="preserve">
          <source>Omits adding the padding equal signs at the end of the encoded data.</source>
          <target state="translated">符号化されたデータの最後にパディング等号を追加することを省略します。</target>
        </trans-unit>
        <trans-unit id="708c057c8ea1d7f4ab116e5d3cabcb22bb3a6b30" translate="yes" xml:space="preserve">
          <source>Omitting this import will allow you to have a QML environment without access to window system features.</source>
          <target state="translated">このインポートを省略することで、ウィンドウシステムの機能にアクセスすることなくQML環境を構築することができます。</target>
        </trans-unit>
        <trans-unit id="beb53630cea57a3b4463541f0e611323d0c3c7de" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;#macos&quot;&gt;macOS&lt;/a&gt;, if the default &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; is set after the application instance, the application will exit with &lt;a href=&quot;#qFatal&quot;&gt;qFatal&lt;/a&gt;(), and print a message that the default &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; should be set before the application instance.</source>
          <target state="translated">上の&lt;a href=&quot;#macos&quot;&gt;MacOSの&lt;/a&gt;デフォルトの場合、&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormatは、&lt;/a&gt;アプリケーションインスタンスの後に設定され、アプリケーションが終了しますと&lt;a href=&quot;#qFatal&quot;&gt;qFatal&lt;/a&gt;（）、およびデフォルトというメッセージを出力&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormatは、&lt;/a&gt;アプリケーションインスタンスの前に設定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="48983f7907a89cb00fd4a0e1da0a76bd00c7750e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;#macos&quot;&gt;macOS&lt;/a&gt;, the following are required:</source>
          <target state="translated">上&lt;a href=&quot;#macos&quot;&gt;のMacOS&lt;/a&gt;、以下が必要です。</target>
        </trans-unit>
        <trans-unit id="5f8f3bcad2004aa59e2b7948d34aca8342d16877" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;#macos&quot;&gt;macOS&lt;/a&gt;, there are no special requirements for enabling sandbox support.</source>
          <target state="translated">上&lt;a href=&quot;#macos&quot;&gt;のMacOS&lt;/a&gt;、サンドボックスのサポートを有効にするための特別な要件はありません。</target>
        </trans-unit>
        <trans-unit id="02407378beec6ff1f9fd53476003148fce3032f0" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;MacOS&lt;/a&gt; the color dialog is only allowed to be non-modal.</source>
          <target state="translated">上の&lt;a href=&quot;internationalization#macos&quot;&gt;MacOSの&lt;/a&gt;色ダイアログは唯一の非モーダルことが許されます。</target>
        </trans-unit>
        <trans-unit id="896e5aeb9f74a7eae8da5b7aefbd0e6400cc7a1c" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; adds a fullscreen button.</source>
          <target state="translated">上の&lt;a href=&quot;internationalization#macos&quot;&gt;MacOSの&lt;/a&gt;フルスクリーンボタンが追加されます。</target>
        </trans-unit>
        <trans-unit id="1263f61e81dd5282840aff4a8e24fd1f82c20e3b" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; adds a tool bar button (i.e., the oblong button that is on the top right of windows that have toolbars).</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOSは、&lt;/a&gt;ツールバーのボタンを追加します（つまり、ツールバーを持つウィンドウの上部の右側にある楕円形のボタン）。</target>
        </trans-unit>
        <trans-unit id="fe348f0673364ee4617b20e1f55989c2b3f17704" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS this function compares according the &quot;Order for sorted lists&quot; setting in the International preferences panel.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;とiOS、この機能は、国際設定パネルで設定する「ソートされたリストの順序」に従って比較します。</target>
        </trans-unit>
        <trans-unit id="b97b0a04a3472cc7c0aa2fab68d1ec5936119928" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS this returns the proper localized name for a bundle if the path &lt;a href=&quot;qfileinfo#isBundle&quot;&gt;isBundle&lt;/a&gt;(). On all other platforms an empty &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; is returned.</source>
          <target state="translated">上の&lt;a href=&quot;internationalization#macos&quot;&gt;MacOSの&lt;/a&gt;パス場合とiOSこれは、バンドルのための適切なローカライズされた名前を返します&lt;a href=&quot;qfileinfo#isBundle&quot;&gt;isBundle&lt;/a&gt;（）。他のすべてのプラットフォームでは、空の&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="1bacab286a6bc6c27c2d11a36406a4fc8b1f9dba" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS this will point to the directory actually containing the executable, which may be inside an application bundle (if the application is bundled).</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;とiOSこれが（アプリケーションがバンドルされている場合）アプリケーションバンドルの内部にあってもよい、実際に実行可能ファイルを含むディレクトリを指します。</target>
        </trans-unit>
        <trans-unit id="74fca3806b524f89c61474a23c98de0edc165b5e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, &lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt;() will return some extra keys for global settings that apply to all applications. These keys can be read using &lt;a href=&quot;qsettings#value&quot;&gt;value&lt;/a&gt;() but cannot be changed, only shadowed. Calling &lt;a href=&quot;qsettings#setFallbacksEnabled&quot;&gt;setFallbacksEnabled&lt;/a&gt;(false) will hide these global settings.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;とiOS、&lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt;（）すべてのアプリケーションに適用されるグローバル設定のためのいくつかの余分なキーを返します。これらのキーは、&lt;a href=&quot;qsettings#value&quot;&gt;値&lt;/a&gt;（）を使用して読み取ることができますが、変更することはできません。&lt;a href=&quot;qsettings#setFallbacksEnabled&quot;&gt;setFallbacksEnabled&lt;/a&gt;（false）を呼び出すと、これらのグローバル設定が非表示になります。</target>
        </trans-unit>
        <trans-unit id="a9784bd0835cdc1d60a8d6be41cf3fae4c475ec0" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, the CFPreferences API used by &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; expects Internet domain names rather than organization names. To provide a uniform API, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; derives a fake domain name from the organization name (unless the organization name already is a domain name, e.g. OpenOffice.org). The algorithm appends &quot;.com&quot; to the company name and replaces spaces and other illegal characters with hyphens. If you want to specify a different domain name, call &lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;QCoreApplication::setOrganizationDomain&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;QCoreApplication::setOrganizationName&lt;/a&gt;(), and &lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;QCoreApplication::setApplicationName&lt;/a&gt;() in your &lt;code&gt;main()&lt;/code&gt; function and then use the default &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; constructor. Another solution is to use preprocessor directives, for example:</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;とiOSで使用CFPreferencesのAPI &lt;a href=&quot;qsettings&quot;&gt;QSettingsは、&lt;/a&gt;インターネットドメイン名ではなく、組織名を期待しています。統一されたAPIを提供するために、&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;は組織名から偽のドメイン名を導出します（組織名がすでにドメイン名である場合を除き、OpenOffice.orgなど）。アルゴリズムは、会社名に「.com」を追加し、スペースやその他の不正な文字をハイフンに置き換えます。別のドメイン名を指定する場合は、 &lt;code&gt;main()&lt;/code&gt; 関数で&lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;QCoreApplication :: setOrganizationDomain&lt;/a&gt;（）、&lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;QCoreApplication :: setOrganizationName&lt;/a&gt;（）、&lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;QCoreApplication :: setApplicationName&lt;/a&gt;（）を&lt;a href=&quot;qsettings&quot;&gt;呼び出して&lt;/a&gt;、デフォルトのQSettingsを使用しますコンストラクタ。別の解決策は、次のようなプリプロセッサディレクティブを使用することです。</target>
        </trans-unit>
        <trans-unit id="da0aaa820fd6ef22793ef435bf386f39ba1162e8" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, this function compares according the &quot;Order for sorted lists&quot; setting in the International prefereces panel.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;とiOS、この関数は比較国際に設定する「ソートされたリストの順序」によるパネルをprefereces。</target>
        </trans-unit>
        <trans-unit id="571535e6d5a4810b87bbb8adfbfdb99e81578b79" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, you can access property list &lt;code&gt;.plist&lt;/code&gt; files by passing &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt; as second argument. For example:</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;とiOS、あなたは、プロパティリストにアクセスすることができます &lt;code&gt;.plist&lt;/code&gt; 渡すことで、ファイルを&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: NativeFormatを&lt;/a&gt; 2番目の引数として。例えば：</target>
        </trans-unit>
        <trans-unit id="dd67470be80f5cf6282fa567bbbecb7e060ec1a1" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and on certain Linux desktop environments such as Ubuntu Unity, &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; is a wrapper for using the system-wide menu bar. If you have multiple menu bars in one dialog the outermost menu bar (normally inside a widget with widget flag &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt;) will be used for the system-wide menu bar.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;や、Ubuntuのユニティなどの特定のLinuxデスクトップ環境に、&lt;a href=&quot;qmenubar&quot;&gt;QMenuBarは、&lt;/a&gt;システム全体のメニューバーを使用するためのラッパーです。1つのダイアログに複数のメニューバーがある場合、最も外側のメニューバー（通常はウィジェットフラグ&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Windowを&lt;/a&gt;持つウィジェット内）がシステム全体のメニューバーに使用されます。</target>
        </trans-unit>
        <trans-unit id="50371ff4facf12b43ac86104b79a75268fc089a3" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and with Qt version 4.3 or higher, clipboard changes made by other applications will only be detected when the application is activated.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;とQtのバージョン4.3以上で、クリップボードには他のアプリケーションによって行われた変更、アプリケーションが起動されたときにのみ検出されます。</target>
        </trans-unit>
        <trans-unit id="e6ccdce7fdcb9c3206b9165c144f45728d52799a" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; by default, Qt swaps the Control and Meta (Command) keys (i.e., whenever Control is pressed, Qt sends Meta, and whenever Meta is pressed Control is sent). When this attribute is true, Qt will not do the flip. &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence::StandardKey&lt;/a&gt; will also flip accordingly (i.e., &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence::Copy&lt;/a&gt; will be Command+C on the keyboard regardless of the value set, though what is output for &lt;a href=&quot;qkeysequence#toString&quot;&gt;QKeySequence::toString&lt;/a&gt;() will be different).</source>
          <target state="translated">上の&lt;a href=&quot;internationalization#macos&quot;&gt;MacOSの&lt;/a&gt;デフォルトでは、Qtは（すなわち、コントロールが押されるたびに、Qtはメタを送信し、メタが押されるたびにコントロールが送信された）コントロールとメタ（コマンド）キーを交換します。この属性がtrueの場合、Qtは反転を行いません。&lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence :: StandardKey&lt;/a&gt;もそれに応じて反転します（つまり、&lt;a href=&quot;qkeysequence#toString&quot;&gt;QKeySequence :: toString&lt;/a&gt;（）の出力は異なりますが、&lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence :: Copy&lt;/a&gt;は、設定された値に関係なくキーボードでCommand + Cになります）。</target>
        </trans-unit>
        <trans-unit id="bffe222338b643c2477ba996114f1133f75cfd9c" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; only, if there is exactly one button with the role &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;QMessageBox::RejectRole&lt;/a&gt;, it is made the escape button.</source>
          <target state="translated">上の&lt;a href=&quot;internationalization#macos&quot;&gt;MacOSの&lt;/a&gt;役割と正確に一つのボタンがある場合にのみ、&lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;QMessageBox :: RejectRole&lt;/a&gt;、それはエスケープボタンを作っています。</target>
        </trans-unit>
        <trans-unit id="f19cde677c2916be9dcaf95716c315a18f596126" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; versions 10.2 and 10.3, these files are used by default:</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOSの&lt;/a&gt;バージョン10.2と10.3、これらのファイルは、デフォルトで使用されています。</target>
        </trans-unit>
        <trans-unit id="137ab3c697e78f6f2e6deec928018a72318cf267" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;,</source>
          <target state="translated">オン&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、</target>
        </trans-unit>
        <trans-unit id="a2ba4249a4d1704d0e563fdfe0da86c2b5ffcda0" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, data goes to</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、データがに行きます</target>
        </trans-unit>
        <trans-unit id="1cf94bbce32ce9a9a1f88a2545fed9e5441426cd" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, if</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、もし</target>
        </trans-unit>
        <trans-unit id="e02d7a3a20669ba308c919d34f684f48c01488d1" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, if the modality is set to &lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qt::WindowModal&lt;/a&gt; and the message box has a parent, then the message box will be a &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt;, otherwise the message box will be a standard dialog.</source>
          <target state="translated">上の&lt;a href=&quot;internationalization#macos&quot;&gt;MacOSの&lt;/a&gt;モダリティに設定されている場合、&lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qtの:: WindowModal&lt;/a&gt;とメッセージボックスが親を持って、その後、メッセージボックスは次のようになります&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qtの::シート&lt;/a&gt;そうでない場合はメッセージボックスが標準のダイアログになります。</target>
        </trans-unit>
        <trans-unit id="0881ce6136c22ae57b7049c765ec8e08e3b2c3f0" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, if you want your message box to appear as a &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt; of its</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;したい場合は、あなたのメッセージボックスが表示されるようにする&lt;a href=&quot;qt#WindowType-enum&quot;&gt;のQt ::シート&lt;/a&gt;のその</target>
        </trans-unit>
        <trans-unit id="bdd25851047c8427f1ea42edfa248f6d340c43f9" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, it is not possible to unpair a device. If Unpaired is requested, &lt;a href=&quot;qbluetoothlocaldevice#pairingFinished&quot;&gt;pairingFinished&lt;/a&gt;() is immediately emitted although the device remains paired. It is possible to request the pairing for a previously unpaired device. In addition &lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;AuthorizedPaired&lt;/a&gt; has the same behavior as &lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;Paired&lt;/a&gt;.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、デバイスを登録解除することはできません。&lt;a href=&quot;qbluetoothlocaldevice#pairingFinished&quot;&gt;Unpaired&lt;/a&gt;が要求された場合、デバイスはペアリングされたままですが、pairingFinished（）がすぐに発行されます。以前ペアリングされていなかったデバイスのペアリングをリクエストすることができます。さらに、&lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;AuthorizedPairedの&lt;/a&gt;動作は&lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;Paired&lt;/a&gt;と同じです。</target>
        </trans-unit>
        <trans-unit id="97ccb6feb705e423758172c8ff7ae512c93b6598" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, permissions to access settings not belonging to the current user (i.e. &lt;a href=&quot;qsettings#Scope-enum&quot;&gt;SystemScope&lt;/a&gt;) have changed with 10.7 (Lion). Prior to that version, users having admin rights could access these. For 10.7 and 10.8 (Mountain Lion), only root can. However, 10.9 (Mavericks) changes that rule again but only for the native format (plist files).</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、現在のユーザー（つまりに属さないアクセスの設定に対する権限&lt;a href=&quot;qsettings#Scope-enum&quot;&gt;SystemScopeは&lt;/a&gt;）10.7（ライオン）に変更されました。そのバージョン以前は、管理者権限を持つユーザーはこれらにアクセスできました。10.7および10.8（Mountain Lion）の場合、rootのみができます。ただし、10.9（Mavericks）はそのルールを再度変更しますが、ネイティブ形式（plistファイル）に対してのみです。</target>
        </trans-unit>
        <trans-unit id="c988eedd182f7aa69e779c11100a56d0e5217c5e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, security flags are not supported and will be ignored.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、セキュリティフラグがサポートされていないと無視されます。</target>
        </trans-unit>
        <trans-unit id="3daff32b3d70038ff27a9fff6456ce23c43ffd09" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, show the tool window even when the application is not active. By default, all tool windows are hidden when the application is inactive.</source>
          <target state="translated">上の&lt;a href=&quot;internationalization#macos&quot;&gt;MacOSの&lt;/a&gt;アプリケーションがアクティブでない場合でも、ツールウィンドウを表示します。デフォルトでは、アプリケーションが非アクティブの場合、すべてのツールウィンドウが非表示になります。</target>
        </trans-unit>
        <trans-unit id="41bb25290e5ced6d2e4655900e8268895af65ec7" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the Up/Down key bindings for Home/End are explicitly disabled. If you want such bindings (on any platform), you will need to construct them in QML.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、ホーム/終了のためのアップ/ダウンキーバインディングを明示的に無効にされています。そのようなバインディングが必要な場合（任意のプラットフォーム）、QMLでそれらを構築する必要があります。</target>
        </trans-unit>
        <trans-unit id="d9360f7e65dc3917d81977d44c9e83bb1515131d" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the about box is popped up as a modeless window; on other platforms, it is currently application modal.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、およそボックスはモードレスウィンドウとしてポップアップ表示されます。他のプラットフォームでは、現在アプリケーションモーダルです。</target>
        </trans-unit>
        <trans-unit id="ab3457bf26c7bbccfc755f084a6a734e19ac4bdd" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the string returned resembles the sequence that is shown in the menu bar if</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、文字列が似ているに場合は、メニューバーに表示される順序を返さ</target>
        </trans-unit>
        <trans-unit id="3c209eddec42f62fe0b0847af7729ce53a32e681" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the threaded render loop is not supported when building with XCode 10 (10.14 SDK) or later, since this opts in to layer-backed views on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; 10.14. You can build with Xcode 9 (10.13 SDK) to opt out of layer-backing, in which case the threaded render loop is available and used by default.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;上の層バックアップビューに、このOPTSので、後XCodeの10（10.14 SDK）または構築するときに、レンダリングねじループがサポートされていない&lt;a href=&quot;internationalization#macos&quot;&gt;MacOSの&lt;/a&gt; 10.14。Xcode 9（10.13 SDK）でビルドしてレイヤーバッキングをオプトアウトできます。その場合、スレッド化されたレンダーループが使用可能で、デフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="20c8c82ed4737ad355dc66de46b9c968eba39f83" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, there is a difference between a window and view; normally expressed as widgets in Qt. Qt makes assumptions about its parent-child hierarchy that make it complex to put an arbitrary Qt widget into a hierarchy of &quot;normal&quot; views from Apple frameworks. &lt;a href=&quot;qmacnativewidget&quot;&gt;QMacNativeWidget&lt;/a&gt; bridges the gap between views and windows and makes it possible to put a hierarchy of Qt widgets into a non-Qt window or view.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、ウィンドウとビューとの間の差があります。通常、Qtではウィジェットとして表現されます。Qtは、その親子階層について想定しているため、任意のQtウィジェットをAppleフレームワークからの「通常の」ビューの階層に配置することが複雑になります。&lt;a href=&quot;qmacnativewidget&quot;&gt;QMacNativeWidget&lt;/a&gt;はビューとウィンドウ間のギャップを埋め、Qtウィジェットの階層を非Qtウィンドウまたはビューに配置することを可能にします。</target>
        </trans-unit>
        <trans-unit id="d4e9e1a6e0bd01c2b3df3d1e521de78fd87e87fc" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this corresponds to the Command keys.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、コマンドキーに、この対応します。</target>
        </trans-unit>
        <trans-unit id="a03ef9a5a6ca2b6c7189ec951ef3efa94d47d173" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this corresponds to the Control keys. On Windows keyboards, this key is mapped to the Windows key.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、コントロールキーに、この対応します。Windowsキーボードでは、このキーはWindowsキーにマップされます。</target>
        </trans-unit>
        <trans-unit id="0315922804130991e6d6ee4a53830a731f5ef05e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this flag is always set to &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Secure&lt;/a&gt;.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、このフラグは常にに設定されている&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth ::セキュア&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="17ab0291187163bb381d29fb4917bd52100ce9ba" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this function will ignore the Proxy Auto Configuration settings, since it cannot execute the associated ECMAScript code.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;それが関連付けられているECMAScriptのコードを実行できないため、この機能は、プロキシ自動構成の設定を無視します。</target>
        </trans-unit>
        <trans-unit id="99de586dbee9328e2ad3dc83f95209b0bbbca885" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this function will obtain the proxy settings using the SystemConfiguration framework from Apple. It will apply the FTP, HTTP and HTTPS proxy configurations for queries that contain the protocol tag &quot;ftp&quot;, &quot;http&quot; and &quot;https&quot;, respectively. If the SOCKS proxy is enabled in that configuration, this function will use the SOCKS server for all queries. If SOCKS isn't enabled, it will use the HTTPS proxy for all TcpSocket and UrlRequest queries.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、この機能は、AppleからSystemConfigurationのフレームワークを使用してプロキシ設定を取得します。これは、プロトコルタグ「ftp」、「http」、および「https」をそれぞれ含むクエリに、FTP、HTTP、およびHTTPSプロキシ構成を適用します。その構成でSOCKSプロキシが有効になっている場合、この関数はすべてのクエリにSOCKSサーバーを使用します。SOCKSが有効になっていない場合、すべてのTcpSocketクエリとUrlRequestクエリにHTTPSプロキシが使用されます。</target>
        </trans-unit>
        <trans-unit id="9bd0075037d9af00366805910b74ee7b22c148a6" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this is currenly converted to a NSMenu, so the aboutToHide() signal is not emitted.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt; aboutToHide（）信号が放出されないので、これはcurrenly、NSMenuに変換されます。</target>
        </trans-unit>
        <trans-unit id="3e9b8a514ee8a5e1aefdd8de972ff8cbfed33d69" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this value is ignored as the platform does not permit access to the security parameter of the socket. By default the platform prefers secure/encrypted connections though and therefore this function always returns &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Secure&lt;/a&gt;.</source>
          <target state="translated">上の&lt;a href=&quot;internationalization#macos&quot;&gt;MacOSの&lt;/a&gt;プラットフォームはソケットのセキュリティパラメータへのアクセスを許可しないよう、この値は無視されます。デフォルトでは、プラットフォームは安全な接続/暗号化された接続を優先するため、この関数は常に&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth :: Secureを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="d46bca2f6d20f99c43e27ea2a02a87e7f1ccd8f5" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this works more at the application level and will cause the application icon to bounce in the dock.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;、この作品より、アプリケーションレベルで、アプリケーションのアイコンがドックでバウンスする原因となります。</target>
        </trans-unit>
        <trans-unit id="ed641e37d6e60c795f761bd151b9333173ad7a4c" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;/iOS/tvOS CoreBluetooth does not expose/accept hardware addresses for LE devices; instead developers are supposed to use unique 128-bit UUIDs, generated by CoreBluetooth. These UUIDS will stay constant for the same central &amp;lt;-&amp;gt; peripheral pair and we use them when connecting to a remote device. For a controller in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;CentralRole&lt;/a&gt;, this value will always be the one passed in when the controller object was created. For a controller in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;PeripheralRole&lt;/a&gt;, this value is invalid.</source>
          <target state="translated">上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt; / iOS版/ tvOS CoreBluetooth LEデバイス用のハードウェアアドレスを受け入れる/公開していません。代わりに、開発者はCoreBluetoothによって生成された一意の128ビットUUIDを使用することになっています。これらのUUIDは、同じ中央&amp;lt;-&amp;gt;ペリフェラルペアで一定であり、リモートデバイスに接続するときに使用します。&lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;CentralRoleの&lt;/a&gt;コントローラーの場合、この値は常に、コントローラーオブジェクトの作成時に渡された値になります。&lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;PeripheralRoleの&lt;/a&gt;コントローラーの場合、この値は無効です。</target>
        </trans-unit>
        <trans-unit id="3d1fc5e449dc389fccc7ea9794a709d546ef66a0" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverEnter&lt;/a&gt; events, this position will always be &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(-1, -1).</source>
          <target state="translated">上&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: HoverEnterの&lt;/a&gt;イベント、この位置は常になり&lt;a href=&quot;qpoint&quot;&gt;のQPoint&lt;/a&gt;（-1、-1）。</target>
        </trans-unit>
        <trans-unit id="eca3159a31c71a6096451f0020afb882ea28272e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverEnter&lt;/a&gt; events, this position will always be &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(-1, -1).</source>
          <target state="translated">上&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: HoverEnterの&lt;/a&gt;イベント、この位置は常になります&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;（-1、-1）。</target>
        </trans-unit>
        <trans-unit id="5be8cee74ee586a968e595661b0504acbb74fb12" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverLeave&lt;/a&gt; events, this position will always be &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;(-1, -1).</source>
          <target state="translated">上&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: HoverLeave&lt;/a&gt;イベント、この位置は常になり&lt;a href=&quot;qpoint&quot;&gt;のQPoint&lt;/a&gt;（-1、-1）。</target>
        </trans-unit>
        <trans-unit id="d6065b3aece372537d4f0991300b9b49a9d7091a" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::HoverLeave&lt;/a&gt; events, this position will always be &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;(-1, -1).</source>
          <target state="translated">上&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: HoverLeave&lt;/a&gt;イベント、この位置は常になります&lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt;（-1、-1）。</target>
        </trans-unit>
        <trans-unit id="274f958c0eae3155ea8914ca95a23815e0090326" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;qtwebengine-platform-notes#macos&quot;&gt;macOS&lt;/a&gt;, depending on how Qt WebEngine is configured at build time, there are two possibilities how spellchecking data is found:</source>
          <target state="translated">上&lt;a href=&quot;qtwebengine-platform-notes#macos&quot;&gt;のMacOS&lt;/a&gt;、QtのWebEngineは、ビルド時に設定されている方法に応じて、スペルチェック、データが発見されたどのように2つの可能性があります。</target>
        </trans-unit>
        <trans-unit id="312cfb23402492c9dba9019443c70a3da3229225" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;, the default value is the value of the environment variable &lt;code&gt;UCRTVERSION&lt;/code&gt;.</source>
          <target state="translated">で&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRTの&lt;/a&gt;、デフォルト値は、環境変数の値である &lt;code&gt;UCRTVERSION&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5248dab8a678e7827d8faf7dd52bc2a892f37839" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRT&lt;/a&gt;, this isn't relevant because the backend there always uses a composition swapchain which is associated with the ISwapChainPanel that backs &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; on that platform.</source>
          <target state="translated">上&lt;a href=&quot;supported-platforms#winrt&quot;&gt;WinRTの&lt;/a&gt;バックエンドはそこにいつも背中があることISwapChainPanelに関連付けられている組成swapchain使用しているため、これは関係ありません&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;そのプラットフォーム上に。</target>
        </trans-unit>
        <trans-unit id="0e6478c9d4b1aea6bb2f93a9091144157062c962" translate="yes" xml:space="preserve">
          <source>On Android and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt; (version 5.46 or above), a connection to a service can not be established using a port. Calling this function will emit a &lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;ServiceNotFoundError&lt;/a&gt;.</source>
          <target state="translated">Androidおよび&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;（バージョン5.46以降）では、ポートを使用してサービスへの接続を確立できません。この関数を呼び出すと、&lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;ServiceNotFoundError&lt;/a&gt;が発生します。</target>
        </trans-unit>
        <trans-unit id="aa0bc4d8e5d48c5512bb81f57e44159d847bb87e" translate="yes" xml:space="preserve">
          <source>On Android and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt; (version 5.46 or above), a connection to a service can not be established using a port. Calling this function will emit a &lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;ServiceNotFoundError&lt;/a&gt;.</source>
          <target state="translated">Androidおよび&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt;（バージョン5.46以降）では、ポートを使用してサービスへの接続を確立することはできません。この関数を呼び出すと、&lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;ServiceNotFoundErrorが発行され&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="815f65d23f664d13f8648829ba0d4205930d38fa" translate="yes" xml:space="preserve">
          <source>On Android and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, it is not possible to retrieve a list of connected devices. It is only possible to listen to (dis)connect changes. For convenience, this class monitors all connect and disconnect events since its instanciation and returns the current list when calling this function. Therefore it is possible that this function returns an empty list shortly after creating an instance.</source>
          <target state="translated">Androidおよび&lt;a href=&quot;internationalization#macos&quot;&gt;macOSでは&lt;/a&gt;、接続されているデバイスのリストを取得することはできません。接続解除の変更をリッスンすることのみが可能です。便宜上、このクラスはインスタンス化以降のすべての接続および切断イベントを監視し、この関数を呼び出すと現在のリストを返します。したがって、インスタンスを作成した直後に、この関数が空のリストを返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="19265de97bfc16b2f9ea0375c004e5540a968f5f" translate="yes" xml:space="preserve">
          <source>On Android and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this feature is not supported and returns 0.</source>
          <target state="translated">Androidおよび&lt;a href=&quot;internationalization#macos&quot;&gt;macOSでは&lt;/a&gt;、この機能はサポートされておらず、0を返します。</target>
        </trans-unit>
        <trans-unit id="856613fd1b6f579b13b8d57c43c2bf1969feaf49" translate="yes" xml:space="preserve">
          <source>On Android and macOS, it is not possible to retrieve a list of connected devices. It is only possible to listen to (dis)connect changes. For convenience, this class monitors all connect and disconnect events since its instanciation and returns the current list when calling this function. Therefore it is possible that this function returns an empty list shortly after creating an instance.</source>
          <target state="translated">AndroidやmacOSでは、接続されているデバイスの一覧を取得することはできません。接続の変更をリッスンすることができるのは、(dis)接続の変更のみです。便宜上、このクラスはインスタンス化されてからのすべての接続・切断イベントを監視し、この関数を呼び出すと現在のリストを返します。そのため、この関数はインスタンスを作成した直後に空のリストを返す可能性があります。</target>
        </trans-unit>
        <trans-unit id="22cbf326052fa8032e9e9507bfd6093a8b8234e7" translate="yes" xml:space="preserve">
          <source>On Android and macOS, this feature is not supported and returns 0.</source>
          <target state="translated">AndroidとmacOSでは、この機能はサポートされておらず、0を返します。</target>
        </trans-unit>
        <trans-unit id="63fcd2d9c70d71102c353c1cb82e59375e7f08d8" translate="yes" xml:space="preserve">
          <source>On Android, Vulkan headers were added in API level 24 of the NDK.</source>
          <target state="translated">Androidでは、NDKのAPIレベル24でVulkanヘッダが追加されました。</target>
        </trans-unit>
        <trans-unit id="be4db8b98b4f6164235f4d89c54546ee114c1c59" translate="yes" xml:space="preserve">
          <source>On Android, apps are distributed in packages called</source>
          <target state="translated">Androidでは、アプリは</target>
        </trans-unit>
        <trans-unit id="08898b8735cdaec5447779b90e5ed1d5212126a2" translate="yes" xml:space="preserve">
          <source>On Android, apps are distributed to devices as &lt;b&gt;APK&lt;/b&gt; packages. For distributing apps in Google Play, a different format called &lt;b&gt;AAB&lt;/b&gt; is used instead. For more information, see &lt;a href=&quot;android-publishing-to-googleplay&quot;&gt;Publishing to Google Play&lt;/a&gt;.</source>
          <target state="translated">Androidでは、アプリは&lt;b&gt;APK&lt;/b&gt;パッケージとしてデバイスに配布されます。Google Playでアプリを配布する場合は、代わりに&lt;b&gt;AAB&lt;/b&gt;と呼ばれる別の形式が使用されます。詳細については、「&lt;a href=&quot;android-publishing-to-googleplay&quot;&gt;GooglePlayへの公開」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="dbc9aae4c83116bcdc68d109344ce9e60a8f4125" translate="yes" xml:space="preserve">
          <source>On Android, only RFCOMM connections are possible. This function ignores any socket protocol indicator and assumes RFCOMM.</source>
          <target state="translated">AndroidではRFCOMM接続のみ可能です。この機能は、ソケットプロトコルのインジケータを一切無視し、RFCOMMを前提としています。</target>
        </trans-unit>
        <trans-unit id="770e981e9a4839b09d200fe33ae180ff79808d01" translate="yes" xml:space="preserve">
          <source>On Android, the local name cannot be changed. Android always uses the device name. If this local name is not empty, the Android implementation includes the device name in the advertisement packet; otherwise the device name is omitted from the advertisement packet.</source>
          <target state="translated">Androidでは、ローカル名は変更できません。Androidは常にデバイス名を使用します。このローカル名が空でない場合、Androidの実装は広告パケットにデバイス名を含み、そうでない場合は広告パケットからデバイス名が省略されます。</target>
        </trans-unit>
        <trans-unit id="f65b58aaa1b281afed9ed3918396f4b1bdf264b1" translate="yes" xml:space="preserve">
          <source>On Android, the service connection can directly be established using the UUID of the remote service. Therefore the platform does not require the &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ServiceLookupState&lt;/a&gt; and &lt;a href=&quot;qbluetoothsocket#socketType&quot;&gt;socketType&lt;/a&gt;() is always set to &lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo::RfcommProtocol&lt;/a&gt;.</source>
          <target state="translated">Androidでは、サービス接続はリモートサービスのUUIDを使用して直接確立できます。したがって、プラットフォームは&lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ServiceLookupState&lt;/a&gt;を必要とせず、&lt;a href=&quot;qbluetoothsocket#socketType&quot;&gt;socketType&lt;/a&gt;（）は常に&lt;a href=&quot;qbluetoothserviceinfo#Protocol-enum&quot;&gt;QBluetoothServiceInfo :: RfcommProtocolに&lt;/a&gt;設定されます。</target>
        </trans-unit>
        <trans-unit id="d89c9874989e9b8b9d98b80e3b3a534396717417" translate="yes" xml:space="preserve">
          <source>On Android, this timeout is not adjustable and therefore ignored.</source>
          <target state="translated">Androidでは、このタイムアウトは調整できないため無視されます。</target>
        </trans-unit>
        <trans-unit id="6416a86402f10d7bee16b446d89f7c5bff574c53" translate="yes" xml:space="preserve">
          <source>On Bluez this property is set to &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Authorization&lt;/a&gt; by default.</source>
          <target state="translated">Bluezでは、このプロパティはデフォルトで&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth :: Authorization&lt;/a&gt;に設定されています。</target>
        </trans-unit>
        <trans-unit id="38be6ebf6ed6321d81be56cae6640824c62d19dc" translate="yes" xml:space="preserve">
          <source>On Embedded Linux and X11 platforms, parts of this class rely on code obtained under the following licenses:</source>
          <target state="translated">Embedded Linux および X11 プラットフォームでは、このクラスの一部は以下のライセンスで取得されたコードに依存しています。</target>
        </trans-unit>
        <trans-unit id="39517387790a4ddc25d1fee2b8ee49b79463ca57" translate="yes" xml:space="preserve">
          <source>On Embedded Linux systems that do not have their terminal sessions disabled, the behavior on a key press can be confusing as input event is processed by the Qt application and the tty. To overcome this, the following options are available:</source>
          <target state="translated">ターミナルセッションを無効にしていない組み込みLinuxシステムでは、入力イベントがQtアプリケーションとttyによって処理されるため、キーを押したときの動作が混乱することがあります。これを克服するために、以下のオプションがあります。</target>
        </trans-unit>
        <trans-unit id="ecdf72d25c9c90b4bc50cd384c795e20986e8959" translate="yes" xml:space="preserve">
          <source>On Embedded Linux systems that don't have their terminal sessions disabled, the behavior on a key press can be confusing, as the input event is processed by the Qt application and the tty. To overcome this, the following options are available:</source>
          <target state="translated">ターミナルセッションを無効にしていない組み込みLinuxシステムでは、入力イベントがQtアプリケーションとttyによって処理されるため、キーを押したときの動作が混乱することがあります。これを克服するために、以下のオプションがあります。</target>
        </trans-unit>
        <trans-unit id="1903a3af5f94e99f63f667d5b59e51dbaf4f5865" translate="yes" xml:space="preserve">
          <source>On Embedded Linux systems, there are multiple platform plugins that you can use: EGLFS, &lt;a href=&quot;#linuxfb&quot;&gt;LinuxFB&lt;/a&gt;, DirectFB, or Wayland. However, the availability of these plugins depend on how Qt is configured.</source>
          <target state="translated">組み込みLinuxシステムには、EGLFS、&lt;a href=&quot;#linuxfb&quot;&gt;LinuxFB&lt;/a&gt;、DirectFB、またはWaylandを使用できる複数のプラットフォームプラグインがあります。ただし、これらのプラグインを使用できるかどうかは、Qtの構成方法によって異なります。</target>
        </trans-unit>
        <trans-unit id="98bec7ba4ddeace89ae6061646dac31811f0b50d" translate="yes" xml:space="preserve">
          <source>On Embedded Linux systems, there are multiple platform plugins that you can use: EGLFS, &lt;a href=&quot;embedded-linux#linuxfb&quot;&gt;LinuxFB&lt;/a&gt;, DirectFB, or Wayland. However, the availability of these plugins depend on how Qt is configured.</source>
          <target state="translated">組み込みLinuxシステムには、EGLFS、&lt;a href=&quot;embedded-linux#linuxfb&quot;&gt;LinuxFB&lt;/a&gt;、DirectFB、またはWaylandの複数のプラットフォームプラグインを使用できます。ただし、これらのプラグインを使用できるかどうかは、Qtの構成方法によって異なります。</target>
        </trans-unit>
        <trans-unit id="b72b71796549861f9cc9c6ae3627134f48e74eed" translate="yes" xml:space="preserve">
          <source>On GPUs that use a tiled rendering architecture, which is common in mobile and embedded systems, it is recommended to set this to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">モバイルおよび組み込みシステムで一般的なタイルレンダリングアーキテクチャを使用するGPUでは、これを &lt;code&gt;false&lt;/code&gt; に設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c875176e29005a39575f662aa8a4e291ef8024c9" translate="yes" xml:space="preserve">
          <source>On INTEGRITY, the returned value is the &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; socket descriptor and the type is defined by &lt;a href=&quot;qtcpserver#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;.</source>
          <target state="translated">INTEGRITYでは、戻り値は&lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt;ソケット記述子であり、タイプは&lt;a href=&quot;qtcpserver#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;によって定義されます。</target>
        </trans-unit>
        <trans-unit id="65546d18a537a44a71a31b3293a6734b0f1a3265" translate="yes" xml:space="preserve">
          <source>On INTEGRITY, the returned value is the &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; socket descriptor and the type is defined by &lt;a href=&quot;qabstractsocket#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;.</source>
          <target state="translated">INTEGRITYでは、戻り値は&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;ソケット記述子であり、タイプは&lt;a href=&quot;qabstractsocket#socketDescriptor&quot;&gt;socketDescriptor&lt;/a&gt;によって定義されます。</target>
        </trans-unit>
        <trans-unit id="11d7dd25953d11e666864822cf6e9d7877cb7d94" translate="yes" xml:space="preserve">
          <source>On Linux systems, it will try to determine the distribution version and will return that. This is also done on Debian/kFreeBSD, so this function will return Debian version in that case.</source>
          <target state="translated">Linux システムでは、ディストリビューションのバージョンを判断しようとし、それを返します。これは Debian/kFreeBSD でも行われているので、この関数は Debian のバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="050fee7dfb12508ea2f91e1c95c371c4d9b0ee6e" translate="yes" xml:space="preserve">
          <source>On Linux, Clang or GCC version 5 or later is required. Supported configurations are &lt;code&gt;linux-g++&lt;/code&gt; and &lt;code&gt;linux-clang&lt;/code&gt;.</source>
          <target state="translated">Linuxでは、ClangまたはGCCバージョン5以降が必要です。サポートされている構成は &lt;code&gt;linux-g++&lt;/code&gt; と &lt;code&gt;linux-clang&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6f1e0f08920cbc420155221e187795a3a98c2467" translate="yes" xml:space="preserve">
          <source>On Linux, Clang or GCC version 5 or later is required. Supported configurations are &lt;code&gt;linux-g++&lt;/code&gt;, &lt;code&gt;linux-clang&lt;/code&gt; and &lt;code&gt;linux-clang-libc++&lt;/code&gt;</source>
          <target state="translated">Linuxでは、ClangまたはGCCバージョン5以降が必要です。サポートされている構成は、 &lt;code&gt;linux-g++&lt;/code&gt; 、 &lt;code&gt;linux-clang&lt;/code&gt; 、および &lt;code&gt;linux-clang-libc++&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c6db7933f7885ae873ea9d6b85de74fc5c4be3e7" translate="yes" xml:space="preserve">
          <source>On Linux, Qt Bluetooth uses a separate executable, &lt;code&gt;sdpscanner&lt;/code&gt;, to integrate with the official Linux bluetooth protocol stack &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;. &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt; is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;.</source>
          <target state="translated">Linuxでは、Qt Bluetoothは別個の実行可能ファイル &lt;code&gt;sdpscanner&lt;/code&gt; を使用して、公式のLinux Bluetoothプロトコルスタック&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;と統合します。&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;は、&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public Licenseバージョン2に&lt;/a&gt;基づいて入手できます。</target>
        </trans-unit>
        <trans-unit id="ba73576bb4f5db5dc0dcd46e4a069ba3b32c13d3" translate="yes" xml:space="preserve">
          <source>On Linux, Qt Bluetooth uses a separate executable, &lt;code&gt;sdpscanner&lt;/code&gt;, to integrate with the official Linux bluetooth protocol stack &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt;. &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt; is available under the &lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General Public License, version 2&lt;/a&gt;.</source>
          <target state="translated">Linuxでは、Qt Bluetoothは別の実行可能ファイル &lt;code&gt;sdpscanner&lt;/code&gt; を使用して、公式のLinuxBluetoothプロトコルスタック&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt;と統合します。&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt;は、&lt;a href=&quot;http://www.gnu.org/licenses/gpl-2.0.html&quot;&gt;GNU General &lt;/a&gt;PublicLicenseバージョン2で利用できます。</target>
        </trans-unit>
        <trans-unit id="e2b3f797e33b6ce2d5f62a1251736f6421be715d" translate="yes" xml:space="preserve">
          <source>On Linux, Windows and Apple platforms, this value is usually the time since the system boot, though it usually does not include the time the system has spent in sleep states.</source>
          <target state="translated">Linux、Windows、Apple プラットフォームでは、この値は通常、システムが起動してからの時間ですが、通常はシステムがスリープ状態で過ごした時間は含まれていません。</target>
        </trans-unit>
        <trans-unit id="2428c6d6d23ba5348e97fec794f179fe55c5cdc9" translate="yes" xml:space="preserve">
          <source>On Linux, note the following restrictions:</source>
          <target state="translated">Linuxでは、以下の制限事項に注意してください。</target>
        </trans-unit>
        <trans-unit id="9868f3840fcc2cfb72fa85ed6470a1c5286ad448" translate="yes" xml:space="preserve">
          <source>On Linux, retrieving the volume's label requires &lt;code&gt;udev&lt;/code&gt; to be present in the system.</source>
          <target state="translated">Linuxでは、ボリュームのラベルを取得するには、システムに &lt;code&gt;udev&lt;/code&gt; が存在している必要があります。</target>
        </trans-unit>
        <trans-unit id="860b940943efd67e5351c2fa69ea361b0a647f4f" translate="yes" xml:space="preserve">
          <source>On Linux, the</source>
          <target state="translated">Linuxでは</target>
        </trans-unit>
        <trans-unit id="48890158ae2cda54f400fa9db2242f01fbca64c4" translate="yes" xml:space="preserve">
          <source>On Linux, the kernel has to support the anonymous namespaces feature (kernel version &amp;gt;= 3.8) and seccomp-bpf feature (kernel version &amp;gt;= 3.5). Setuid sandboxes are not supported and are thus disabled.</source>
          <target state="translated">Linuxでは、カーネルは匿名名前空間機能（カーネルバージョン&amp;gt; = 3.8）およびseccomp-bpf機能（カーネルバージョン&amp;gt; = 3.5）をサポートする必要があります。Setuidサンドボックスはサポートされていないため、無効になっています。</target>
        </trans-unit>
        <trans-unit id="e18810d4ece678f4372cf474aca3fc209ebfc264" translate="yes" xml:space="preserve">
          <source>On Linux/&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt; systems, it is not possible to connect to the same remote device using two instances of this class. The second call to this function may fail with an error. This limitation may be removed in future releases.</source>
          <target state="translated">Linux / &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;システムでは、このクラスの2つのインスタンスを使用して同じリモートデバイスに接続することはできません。この関数の2番目の呼び出しは、エラーで失敗する場合があります。この制限は将来のリリースで削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="bc99b7ade5b99b96dc5e8aa6f5075ac0269ab3bb" translate="yes" xml:space="preserve">
          <source>On Linux/&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt; systems, it is not possible to connect to the same remote device using two instances of this class. The second call to this function may fail with an error. This limitation may be removed in future releases.</source>
          <target state="translated">Linux / &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt;システムでは、このクラスの2つのインスタンスを使用して同じリモートデバイスに接続することはできません。この関数の2回目の呼び出しは、エラーで失敗する可能性があります。この制限は、将来のリリースで削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="efb10eaaa960fb4907555f096aef5bf9fa09f863" translate="yes" xml:space="preserve">
          <source>On Linux/X11, Windows and macOS, Qt provides support for session management. Sessions allow events to be propagated to processes, for example, to notify when a shutdown occurs. The process and applications can then perform any necessary operations such as save open documents.</source>
          <target state="translated">Linux/X11、Windows、macOSでは、Qtはセッション管理をサポートしています。セッションによって、例えばシャットダウンが発生したときに通知するなど、イベントをプロセスに伝播させることができます。その後、プロセスやアプリケーションは、開いているドキュメントを保存するなど、必要な操作を行うことができます。</target>
        </trans-unit>
        <trans-unit id="7fc3d52902162d74f8ed313c5de739bb86f3a25d" translate="yes" xml:space="preserve">
          <source>On Linux:</source>
          <target state="translated">Linuxで。</target>
        </trans-unit>
        <trans-unit id="be86cf8677a1438eaed02b537278783288f434af" translate="yes" xml:space="preserve">
          <source>On Mac, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; uses &lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;organizationDomain()&lt;/a&gt; as the organization if it's not an empty string; otherwise it uses organizationName(). On all other platforms, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; uses organizationName() as the organization.</source>
          <target state="translated">Macでは、&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;は、空の文字列でない場合、&lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;organizationDomain（）&lt;/a&gt;を組織として使用します。それ以外の場合は、organizationName（）を使用します。他のすべてのプラットフォームでは、&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;は組織としてorganizationName（）を使用します。</target>
        </trans-unit>
        <trans-unit id="fdcac537267b374784eb9ce033e40b4e0eb5764c" translate="yes" xml:space="preserve">
          <source>On Mac, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; uses organizationDomain() as the organization if it's not an empty string; otherwise it uses &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;organizationName&lt;/a&gt;(). On all other platforms, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; uses &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;organizationName&lt;/a&gt;() as the organization.</source>
          <target state="translated">Macでは、&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;は、空の文字列でない場合、organizationDomain（）を組織として使用します。それ以外の場合は、&lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;organizationName&lt;/a&gt;（）を使用します。他のすべてのプラットフォームでは、&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;は&lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;組織&lt;/a&gt;としてorganizationName（）を使用します。</target>
        </trans-unit>
        <trans-unit id="936548b28a7b4a6e49bd38e06c550258eed3eeba" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, mouse wheel usage is always handled by the widget that has keyboard focus. On &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and X11, it's handled by the widget that gets other mouse events.</source>
          <target state="translated">Microsoft Windowsでは、マウスホイールの使用は、常にキーボードフォーカスを持つウィジェットによって処理されます。上&lt;a href=&quot;internationalization#macos&quot;&gt;のMacOS&lt;/a&gt;とX11、それが他のマウスイベントを取得するウィジェットによって処理されます。</target>
        </trans-unit>
        <trans-unit id="fe3403df2fdcc4730139d60587156a4d721c186f" translate="yes" xml:space="preserve">
          <source>On Microsoft Windows, mouse wheel usage is always handled by the widget that has keyboard focus. On macOS and X11, it's handled by the widget that gets other mouse events.</source>
          <target state="translated">Microsoft Windowsでは、マウスホイールの使用は常にキーボードフォーカスを持つウィジェットによって処理されます。macOSとX11では、他のマウスイベントを取得するウィジェットによって処理されます。</target>
        </trans-unit>
        <trans-unit id="104b5202331c5da26bf22f5bad018a37e0ceda3c" translate="yes" xml:space="preserve">
          <source>On UNIX (including Linux, &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, and iOS), Qt will keep millisecond accuracy for Qt::PreciseTimer. For Qt::CoarseTimer, the interval will be adjusted up to 5% to align the timer with other timers that are expected to fire at or around the same time. The objective is to make most timers wake up at the same time, thereby reducing CPU wakeups and power consumption.</source>
          <target state="translated">UNIX（Linux、&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;、iOS を含む）では、QtはQt :: PreciseTimerのミリ秒の精度を維持します。Qt :: CoarseTimerの場合、間隔は最大5％調整され、同時にまたはほぼ同時に発生することが予想される他のタイマーとタイマーを揃えます。目的は、ほとんどのタイマーを同時に起動することで、CPUの起動と電力消費を削減することです。</target>
        </trans-unit>
        <trans-unit id="4761363370402042cde54b98cc5a486ea3feabdc" translate="yes" xml:space="preserve">
          <source>On UNIX (including Linux, macOS, and iOS), Qt will keep millisecond accuracy for Qt::PreciseTimer. For Qt::CoarseTimer, the interval will be adjusted up to 5% to align the timer with other timers that are expected to fire at or around the same time. The objective is to make most timers wake up at the same time, thereby reducing CPU wakeups and power consumption.</source>
          <target state="translated">UNIX(Linux、macOS、iOSを含む)では、Qt::PreciseTimerではミリ秒単位の精度を維持します。Qt::CoarseTimer では、タイマーの間隔を 5% まで調整して、同じ時間に、またはその前後にタイマーが起動することが予想される他のタイマーに合わせるようにします。目的は、ほとんどのタイマーが同時に起動するようにすることで、CPU のウェイクアップと消費電力を減らすことです。</target>
        </trans-unit>
        <trans-unit id="e63d44de10b1980cb899a8990239749fb37f24ca" translate="yes" xml:space="preserve">
          <source>On Universal Windows Platform (UWP), the default value is the value of the environment variable &lt;code&gt;UCRTVERSION&lt;/code&gt;.</source>
          <target state="translated">ユニバーサルWindowsプラットフォーム（UWP）では、デフォルト値は環境変数 &lt;code&gt;UCRTVERSION&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="9e6bc2903e79f45ee2f81d86c0a91d5d49c7139a" translate="yes" xml:space="preserve">
          <source>On Unix (including &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS), the symlink has the same &lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;() has the file it points to, because Unix handles symlinks transparently; similarly, opening a symlink using &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; effectively opens the link's target. For example:</source>
          <target state="translated">Unix（&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;とiOS を含む）では、シンボリックリンクは透過的に処理されるため、シンボリックリンクは同じ&lt;a href=&quot;qfileinfo#size&quot;&gt;サイズ&lt;/a&gt;（）が指すファイルと同じです。同様に、&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;を使用してシンボリックリンクを開くと、リンクのターゲットが効果的に開きます。例えば：</target>
        </trans-unit>
        <trans-unit id="39c25dd694bf96255f18f2cb91fa793c5acdb2b7" translate="yes" xml:space="preserve">
          <source>On Unix (including macOS and iOS), the property getter functions in this class return the properties such as times and size of the target file, not the symlink, because Unix handles symlinks transparently. Opening a symlink using &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; effectively opens the link's target. For example:</source>
          <target state="translated">Unix（macOSおよびiOSを含む）では、Unixはシンボリックリンクを透過的に処理するため、このクラスのプロパティゲッター関数は、シンボリックリンクではなく、ターゲットファイルの時間やサイズなどのプロパティを返します。&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;を使用してシンボリックリンクを開くと、リンクのターゲットが効果的に開きます。例えば：</target>
        </trans-unit>
        <trans-unit id="f6601c6c8c0ed07a385aac8cf7d5f6cad57fb84e" translate="yes" xml:space="preserve">
          <source>On Unix and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; (replace &lt;code&gt;$SQLITE&lt;/code&gt; with the directory where &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; resides):</source>
          <target state="translated">Unixおよび&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;（ &lt;code&gt;$SQLITE&lt;/code&gt; を&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLiteが&lt;/a&gt;存在するディレクトリに置き換えます）：</target>
        </trans-unit>
        <trans-unit id="f60a02d3486206deb3ab1e6410ad148ada51fb30" translate="yes" xml:space="preserve">
          <source>On Unix and macOS (replace &lt;code&gt;$SQLITE&lt;/code&gt; with the directory where &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; resides):</source>
          <target state="translated">UnixおよびmacOSの場合（ &lt;code&gt;$SQLITE&lt;/code&gt; を&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLiteが&lt;/a&gt;存在するディレクトリに置き換えます）：</target>
        </trans-unit>
        <trans-unit id="6e90f968f96c7a108db8f7fac8e46c58ec8da105" translate="yes" xml:space="preserve">
          <source>On Unix and macOS (replace &lt;code&gt;$SQLITE&lt;/code&gt; with the directory where &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; resides):</source>
          <target state="translated">UnixおよびmacOSの場合（ &lt;code&gt;$SQLITE&lt;/code&gt; を&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLiteが&lt;/a&gt;存在するディレクトリに置き換えます）：</target>
        </trans-unit>
        <trans-unit id="f17af98e38048982a6ae01200dfc2f8c351686df" translate="yes" xml:space="preserve">
          <source>On Unix filesystems, the root volume is a volume mounted on &lt;code&gt;/&lt;/code&gt;. On Windows, the root volume is the volume where the OS is installed.</source>
          <target state="translated">Unixファイルシステムでは、ルートボリュームは &lt;code&gt;/&lt;/code&gt; にマウントされたボリュームです。Windowsでは、ルートボリュームはOSがインストールされているボリュームです。</target>
        </trans-unit>
        <trans-unit id="bace692e6aba923077fe382f0c0ab904a3051d37" translate="yes" xml:space="preserve">
          <source>On Unix systems this call returns the root ('/') volume; in Windows the volume where the operating system is installed.</source>
          <target state="translated">Unixシステムでは、この呼び出しはルート('/')ボリュームを返しますが、Windowsではオペレーティングシステムがインストールされているボリュームを返します。</target>
        </trans-unit>
        <trans-unit id="5aa9d4402ae9e8143461ecb3a0fb1cc0b173cd10" translate="yes" xml:space="preserve">
          <source>On Unix systems this is equivalen to &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;(), on Windows the systems current code page is being used.</source>
          <target state="translated">Unixシステムでは、これは&lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;（）と同等であり、Windowsではシステムの現在のコードページが使用されています。</target>
        </trans-unit>
        <trans-unit id="d28d9c24ae6990a741cd47e479e710cc52519812" translate="yes" xml:space="preserve">
          <source>On Unix systems this is equivalen to &lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;(), on Windows the systems current code page is being used.</source>
          <target state="translated">Unixシステムでは、これは&lt;a href=&quot;qstring#toUtf8&quot;&gt;toUtf8&lt;/a&gt;（）と同等であり、Windowsではシステムの現在のコードページが使用されています。</target>
        </trans-unit>
        <trans-unit id="701e5658bca1d8b3d2069b780576ba87c6a22f7a" translate="yes" xml:space="preserve">
          <source>On Unix systems this is equivalen to &lt;a href=&quot;qstringview#toUtf8&quot;&gt;toUtf8&lt;/a&gt;(), on Windows the systems current code page is being used.</source>
          <target state="translated">Unixシステムでは、これは&lt;a href=&quot;qstringview#toUtf8&quot;&gt;toUtf8&lt;/a&gt;（）と同等であり、Windowsではシステムの現在のコードページが使用されています。</target>
        </trans-unit>
        <trans-unit id="afb2d139c1b873a083088b2510e71647e18163db" translate="yes" xml:space="preserve">
          <source>On Unix systems this is equivalent to &lt;a href=&quot;qstringref#toUtf8&quot;&gt;toUtf8&lt;/a&gt;(), on Windows the systems current code page is being used.</source>
          <target state="translated">Unixシステムでは、これは&lt;a href=&quot;qstringref#toUtf8&quot;&gt;Utf8&lt;/a&gt;（）と同等であり、Windowsではシステムの現在のコードページが使用されています。</target>
        </trans-unit>
        <trans-unit id="fbccf7366e1baa7565e0b1f8d2ddc72d16e641ba" translate="yes" xml:space="preserve">
          <source>On Unix systems, a binary cache is used for more performance. This cache is generated by the command &quot;update-mime-database path&quot;, where path would be /opt/myapp/share/mime in the above example. Make sure to run this command when installing the MIME type definition file.</source>
          <target state="translated">Unix システムでは、より高いパフォーマンスを得るためにバイナリキャッシュが使用されます。このキャッシュは、&quot;update-mime-database path &quot;コマンドによって生成されます。MIME タイプ定義ファイルをインストールする際には、必ずこのコマンドを実行してください。</target>
        </trans-unit>
        <trans-unit id="e4cb0eaa6ed531dabf48c928b44a40335b561e57" translate="yes" xml:space="preserve">
          <source>On Unix systems, if the file format is &lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt;, the following files are used by default:</source>
          <target state="translated">Unixシステムでは、ファイル形式が&lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormatの&lt;/a&gt;場合、デフォルトで次のファイルが使用されます。</target>
        </trans-unit>
        <trans-unit id="93ba505e997dfa29c95903bafb91601da153ec19" translate="yes" xml:space="preserve">
          <source>On Unix systems, the variable names are case-sensitive. Note that the Unix environment allows both variable names and contents to contain arbitrary binary data (except for the NUL character). &lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; will preserve such variables, but does not support manipulating variables whose names or values cannot be encoded by the current locale settings (see &lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec::codecForLocale&lt;/a&gt;).</source>
          <target state="translated">Unixシステムでは、変数名は大文字と小文字が区別されます。Unix環境では、変数名と内容の両方に任意のバイナリデータを含めることができます（NUL文字を除く）。&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt;はこのような変数を保持しますが、現在のロケール設定で名前または値をエンコードできない変数の操作はサポートしていません（&lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec :: codecForLocaleを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="e430f306e83d2007ff707f86ff47bacb2ff9a381" translate="yes" xml:space="preserve">
          <source>On Unix systems, the variable names are case-sensitive. Note that the Unix environment allows both variable names and contents to contain arbitrary binary data (except for the NUL character). QProcessEnvironment will preserve such variables, but does not support manipulating variables whose names or values cannot be encoded by the current locale settings (see &lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;QString::toLocal8Bit&lt;/a&gt;).</source>
          <target state="translated">Unixシステムでは、変数名では大文字と小文字が区別されます。Unix環境では、変数名と内容の両方に任意のバイナリデータ（NUL文字を除く）を含めることができることに注意してください。QProcessEnvironmentはそのような変数を保持しますが、名前または値を現在のロケール設定でエンコードできない変数の操作をサポートしていません（&lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;QString :: toLocal8Bitを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="665e30919ca5deb2015c61b1722ba66c444b393a" translate="yes" xml:space="preserve">
          <source>On Unix systems, the variable names are case-sensitive. Note that the Unix environment allows both variable names and contents to contain arbitrary binary data (except for the NUL character). QProcessEnvironment will preserve such variables, but does not support manipulating variables whose names or values cannot be encoded by the current locale settings (see &lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec::codecForLocale&lt;/a&gt;).</source>
          <target state="translated">Unixシステムでは、変数名では大文字と小文字が区別されます。Unix環境では、変数名と内容の両方に任意のバイナリデータ（NUL文字を除く）を含めることができることに注意してください。QProcessEnvironmentはそのような変数を保持しますが、名前または値を現在のロケール設定でエンコードできない変数の操作をサポートしていません（&lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec :: codecForLocaleを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="11fd2ef57d776661880d860224f2b7e6a97d35df" translate="yes" xml:space="preserve">
          <source>On Unix the absolute path will always begin with the root, '/', directory. On Windows this will always begin 'D:/' where D is a drive letter, except for network shares that are not mapped to a drive letter, in which case the path will begin '//sharename/'.</source>
          <target state="translated">Unix では、絶対パスは常にルート、'/'、ディレクトリで始まります。Windows では、ドライブレターにマップされていないネットワーク共有の場合は、パスは '//sharename/' で始まります。</target>
        </trans-unit>
        <trans-unit id="1e3b98776696cf1f7c4fdcd2ef4da38ddb1d19f1" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;code&gt;XDG_DATA_HOME&lt;/code&gt; is set to</source>
          <target state="translated">Unixでは、 &lt;code&gt;XDG_DATA_HOME&lt;/code&gt; は</target>
        </trans-unit>
        <trans-unit id="e112b2ed461033620dc39a7e6c6c0c114fe107ed" translate="yes" xml:space="preserve">
          <source>On Unix, &lt;code&gt;XDG_DATA_HOME&lt;/code&gt; is set to &lt;code&gt;~/.qttest/share&lt;/code&gt;, &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; is set to &lt;code&gt;~/.qttest/config&lt;/code&gt;, and &lt;code&gt;XDG_CACHE_HOME&lt;/code&gt; is set to &lt;code&gt;~/.qttest/cache&lt;/code&gt;.</source>
          <target state="translated">Unixでは、 &lt;code&gt;XDG_DATA_HOME&lt;/code&gt; は &lt;code&gt;~/.qttest/share&lt;/code&gt; に設定され、 &lt;code&gt;XDG_CONFIG_HOME&lt;/code&gt; は &lt;code&gt;~/.qttest/config&lt;/code&gt; に設定され、 &lt;code&gt;XDG_CACHE_HOME&lt;/code&gt; は &lt;code&gt;~/.qttest/cache&lt;/code&gt; 設定されます。</target>
        </trans-unit>
        <trans-unit id="f6b62d543e73f8db440c1c3ba2771570a56bf10a" translate="yes" xml:space="preserve">
          <source>On Unix, NativeFormat and IniFormat mean the same thing, except that the file extension is different (&lt;code&gt;.conf&lt;/code&gt; for NativeFormat, &lt;code&gt;.ini&lt;/code&gt; for IniFormat).</source>
          <target state="translated">ファイルの拡張子が異なる（あることを除いてUnixでは、NativeFormatとIniFormatは、同じことを意味 &lt;code&gt;.conf&lt;/code&gt; を NativeFormatため、 &lt;code&gt;.ini&lt;/code&gt; IniFormat用）。</target>
        </trans-unit>
        <trans-unit id="dc950e9b8358b8d88c8e106325f9d8345417f694" translate="yes" xml:space="preserve">
          <source>On Unix, a boolean that describes whether Qt libraries and plugins were compiled with &lt;code&gt;-fvisibility=hidden&lt;/code&gt;. This means that only selected symbols are exported.</source>
          <target state="translated">Unixでは、Qtライブラリとプラグインが &lt;code&gt;-fvisibility=hidden&lt;/code&gt; でコンパイルされたかどうかを説明するブール値。これは、選択したシンボルのみがエクスポートされることを意味します。</target>
        </trans-unit>
        <trans-unit id="2d890128146d13d56a5352b3c1af9b54f8e10e09" translate="yes" xml:space="preserve">
          <source>On Unix, at least two autotests (&lt;code&gt;tst_examples&lt;/code&gt; and &lt;code&gt;tst_gestures&lt;/code&gt;) require a window manager to be running. Therefore, if running these tests under a nested X-server, you must also run a window manager in that X-server.</source>
          <target state="translated">Unixでは、少なくとも2つの &lt;code&gt;tst_examples&lt;/code&gt; テスト（tst_examplesと &lt;code&gt;tst_gestures&lt;/code&gt; ）でウィンドウマネージャーを実行する必要があります。したがって、ネストされたXサーバーでこれらのテストを実行する場合は、そのXサーバーでもウィンドウマネージャーを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="6d867696c469d1f032513ef5bf449c98acfa7dae" translate="yes" xml:space="preserve">
          <source>On Unix, one can also run the tests on a nested or virtual X-server, such as Xephyr. For example, to run the entire set of tests on Xephyr, execute the following commands:</source>
          <target state="translated">Unixでは、Xephyrのような入れ子になったXサーバや仮想Xサーバ上でテストを実行することもできます。例えば、Xephyr上でテストの全セットを実行するには、以下のコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="09c58f46dccacecb57866673b0c94614f0721a76" translate="yes" xml:space="preserve">
          <source>On Unix, there are some special system files (e.g. in &lt;code&gt;/proc&lt;/code&gt;) for which &lt;a href=&quot;qfile#size&quot;&gt;size&lt;/a&gt;() will always return 0, yet you may still be able to read more data from such a file; the data is generated in direct response to you calling &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(). In this case, however, you cannot use &lt;a href=&quot;qfiledevice#atEnd&quot;&gt;atEnd&lt;/a&gt;() to determine if there is more data to read (since &lt;a href=&quot;qfiledevice#atEnd&quot;&gt;atEnd&lt;/a&gt;() will return true for a file that claims to have size 0). Instead, you should either call &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(), or call &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() or &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;() repeatedly until no more data can be read. The next example uses &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; to read &lt;code&gt;/proc/modules&lt;/code&gt; line by line:</source>
          <target state="translated">Unixには、&lt;a href=&quot;qfile#size&quot;&gt;サイズ&lt;/a&gt;（）が常に0を返す特別なシステムファイル（たとえば &lt;code&gt;/proc&lt;/code&gt; 内）がありますが、そのようなファイルからさらに多くのデータを読み取ることができる場合があります。データは、&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（）の呼び出しに直接応答して生成されます。ただし、この場合、&lt;a href=&quot;qfiledevice#atEnd&quot;&gt;atEnd&lt;/a&gt;（）を使用して読み取るデータがまだあるかどうかを判断することはできません（サイズ0であると主張するファイルに対して&lt;a href=&quot;qfiledevice#atEnd&quot;&gt;atEnd&lt;/a&gt;（）がtrueを返すため）。代わりに、&lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;（）を呼び出すか、&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（）または&lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;（）を繰り返し呼び出して、データを読み取ることができなくなります。次の例では、&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;を使用して &lt;code&gt;/proc/modules&lt;/code&gt; を1行ずつ読み取ります。</target>
        </trans-unit>
        <trans-unit id="0602921fc400588e0a70165d9faf3eaf62f0752d" translate="yes" xml:space="preserve">
          <source>On Unix, this function currently always returns the same as &lt;a href=&quot;qnetworkinterface#name&quot;&gt;name&lt;/a&gt;(), since Unix systems don't store a configuration for human-readable names.</source>
          <target state="translated">Unixシステムでは人間が読める名前の設定を保存しないため、現在、この関数は常に&lt;a href=&quot;qnetworkinterface#name&quot;&gt;名前&lt;/a&gt;（）と同じ値を返します。</target>
        </trans-unit>
        <trans-unit id="687c99b02f8e40a7be8b68d5fe13db95f6a22e8d" translate="yes" xml:space="preserve">
          <source>On Unix, this sets the executable flag.</source>
          <target state="translated">Unixでは、これは実行可能フラグを設定します。</target>
        </trans-unit>
        <trans-unit id="41c4bdcec681573ef1a70386454b43adf7ffeb9a" translate="yes" xml:space="preserve">
          <source>On Unix-like platforms (including Linux, macOS and iOS), when Qt is linked with the ICU library (which it usually is), its locale-aware sorting is used. Otherwise, on macOS and iOS, &lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;localeAwareCompare&lt;/a&gt;() compares according the &quot;Order for sorted lists&quot; setting in the International preferences panel. On other Unix-like systems without ICU, the comparison falls back to the system library's &lt;code&gt;strcoll()&lt;/code&gt;,</source>
          <target state="translated">Unixライクなプラットフォーム（Linux、macOS、iOSを含む）では、QtがICUライブラリ（通常はそうです）にリンクされている場合、ロケールを意識したソートが使用されます。それ以外の場合、macOSおよびiOSでは、&lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;localeAwareCompare&lt;/a&gt;（）は、国際設定パネルの「ソートされたリストの順序」設定に従って比較します。 ICUのない他のUnixライクなシステムでは、比較はシステムライブラリの &lt;code&gt;strcoll()&lt;/code&gt; にフォールバックします。</target>
        </trans-unit>
        <trans-unit id="885d8dfdc058fa8af354259928c23010ca9ed6b1" translate="yes" xml:space="preserve">
          <source>On Unix-like platforms (including Linux, macOS and iOS), when Qt is linked with the ICU library (which it usually is), its locale-aware sorting is used. Otherwise, on macOS and iOS, &lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;localeAwareCompare&lt;/a&gt;() compares according the &quot;Order for sorted lists&quot; setting in the International preferences panel. On other Unix-like systems without ICU, the comparison falls back to the system library's &lt;code&gt;strcoll()&lt;/code&gt;, falling back when it considers strings equal to QString's (locale-unaware) comparison, described above,</source>
          <target state="translated">Unixライクなプラットフォーム（Linux、macOS、iOSを含む）では、QtがICUライブラリ（通常はそうです）にリンクされている場合、ロケールを意識したソートが使用されます。それ以外の場合、macOSおよびiOSでは、&lt;a href=&quot;qstring#localeAwareCompare&quot;&gt;localeAwareCompare&lt;/a&gt;（）は、国際設定パネルの「ソートされたリストの順序」設定に従って比較します。 ICUのない他のUnixライクなシステムでは、比較はシステムライブラリの &lt;code&gt;strcoll()&lt;/code&gt; にフォールバックし、上記のQStringの（ロケールを認識しない）比較に等しい文字列を考慮するとフォールバックします。</target>
        </trans-unit>
        <trans-unit id="c5a6786599b2cdaef1671f8f5d1e3f31e3b9479c" translate="yes" xml:space="preserve">
          <source>On Unix/Linux Qt is configured to use the system locale settings by default. This can cause a conflict when using POSIX functions, for instance, when converting between data types such as floats and strings, since the notation may differ between locales. To get around this problem, call the POSIX function &lt;code&gt;setlocale(LC_NUMERIC,&quot;C&quot;)&lt;/code&gt; right after initializing &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;, &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; or &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; to reset the locale that is used for number formatting to &quot;C&quot;-locale.</source>
          <target state="translated">Unix / Linuxでは、Qtはデフォルトでシステムロケール設定を使用するように設定されています。これにより、たとえば浮動小数点数や文字列などのデータ型間で変換する場合など、POSIX関数を使用するときに競合が発生する可能性があります。これは、ロケールによって表記が異なる場合があるためです。この問題を &lt;code&gt;setlocale(LC_NUMERIC,&quot;C&quot;)&lt;/code&gt; &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;、&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication、&lt;/a&gt;または&lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt;を初期化した直後にPOSIX関数setlocale（LC_NUMERIC、 &quot;C&quot;）を呼び出して、数値の書式設定に使用されるロケールを &quot;C&quot;ロケールにリセットします。</target>
        </trans-unit>
        <trans-unit id="63e361f3477e8ef3ef3db54ce35541f29391ad75" translate="yes" xml:space="preserve">
          <source>On Unix/Linux Qt is configured to use the system locale settings by default. This can cause a conflict when using POSIX functions, for instance, when converting between data types such as floats and strings, since the notation may differ between locales. To get around this problem, call the POSIX function &lt;code&gt;setlocale(LC_NUMERIC,&quot;C&quot;)&lt;/code&gt; right after initializing &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;, &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; or QCoreApplication to reset the locale that is used for number formatting to &quot;C&quot;-locale.</source>
          <target state="translated">Unix / Linuxでは、Qtはデフォルトでシステムロケール設定を使用するように構成されています。これにより、POSIX関数を使用する場合、たとえば、浮動小数点数や文字列などのデータ型間で変換する場合に、ロケール間で表記が異なる可能性があるため、競合が発生する可能性があります。この問題を &lt;code&gt;setlocale(LC_NUMERIC,&quot;C&quot;)&lt;/code&gt; &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;、&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication、&lt;/a&gt;またはQCoreApplicationを初期化した直後にPOSIX関数setlocale（LC_NUMERIC、 &quot;C&quot;）を呼び出して、数値の書式設定に使用されるロケールを &quot;C&quot; -localeにリセットします。</target>
        </trans-unit>
        <trans-unit id="0eee08701b37711b726bc5c326a520a7795b78a1" translate="yes" xml:space="preserve">
          <source>On Unix/Linux systems this is the path in the &lt;code&gt;TMPDIR&lt;/code&gt; environment variable or &lt;code&gt;/tmp&lt;/code&gt; if &lt;code&gt;TMPDIR&lt;/code&gt; is not defined. On Windows this is usually the path in the &lt;code&gt;TEMP&lt;/code&gt; or &lt;code&gt;TMP&lt;/code&gt; environment variable. The path returned by this method doesn't end with a directory separator unless it is the root directory (of a drive).</source>
          <target state="translated">Unix / Linuxシステムでは、これは &lt;code&gt;TMPDIR&lt;/code&gt; 環境変数のパス、または &lt;code&gt;TMPDIR&lt;/code&gt; が定義されていない場合は &lt;code&gt;/tmp&lt;/code&gt; です。Windowsでは、これは通常、 &lt;code&gt;TEMP&lt;/code&gt; または &lt;code&gt;TMP&lt;/code&gt; 環境変数のパスです。このメソッドによって返されるパスは、（ドライブの）ルートディレクトリでない限り、ディレクトリ区切り文字で終わらない。</target>
        </trans-unit>
        <trans-unit id="e3844b76c72de9814ba134528a2e98ebfade0de2" translate="yes" xml:space="preserve">
          <source>On Unix/X11, the normal behavior of the file dialog is to resolve and follow symlinks. For example, if &lt;code&gt;/usr/tmp&lt;/code&gt; is a symlink to &lt;code&gt;/var/tmp&lt;/code&gt;, the file dialog will change to &lt;code&gt;/var/tmp&lt;/code&gt; after entering &lt;code&gt;/usr/tmp&lt;/code&gt;. If</source>
          <target state="translated">Unix / X11では、ファイルダイアログの通常の動作は、シンボリックリンクを解決して追跡することです。たとえば、 &lt;code&gt;/usr/tmp&lt;/code&gt; が &lt;code&gt;/var/tmp&lt;/code&gt; へのシンボリックリンクである場合、ファイルダイアログは &lt;code&gt;/usr/tmp&lt;/code&gt; と入力すると &lt;code&gt;/var/tmp&lt;/code&gt; に変わります。もし</target>
        </trans-unit>
        <trans-unit id="946affb9561bc980c61b450f36bafb68b8cc7412" translate="yes" xml:space="preserve">
          <source>On Unix/X11, the normal behavior of the file dialog is to resolve and follow symlinks. For example, if &lt;code&gt;/usr/tmp&lt;/code&gt; is a symlink to &lt;code&gt;/var/tmp&lt;/code&gt;, the file dialog will change to &lt;code&gt;/var/tmp&lt;/code&gt; after entering &lt;code&gt;/usr/tmp&lt;/code&gt;. The</source>
          <target state="translated">Unix / X11では、ファイルダイアログの通常の動作は、シンボリックリンクを解決して追跡することです。たとえば、 &lt;code&gt;/usr/tmp&lt;/code&gt; が &lt;code&gt;/var/tmp&lt;/code&gt; へのシンボリックリンクである場合、ファイルダイアログは &lt;code&gt;/usr/tmp&lt;/code&gt; と入力すると &lt;code&gt;/var/tmp&lt;/code&gt; に変わります。の</target>
        </trans-unit>
        <trans-unit id="790549c0d3a3bfe5baf9fb5ced03f9d2ae73fd15" translate="yes" xml:space="preserve">
          <source>On WinRT, this isn't relevant because the backend there always uses a composition swapchain which is associated with the ISwapChainPanel that backs &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; on that platform.</source>
          <target state="translated">WinRTでは、バックエンドが常にそのプラットフォーム上のQWindowを&lt;a href=&quot;qwindow&quot;&gt;サポート&lt;/a&gt;するISwapChainPanelに関連付けられた構成スワップチェーンを使用するため、これは関係ありません。</target>
        </trans-unit>
        <trans-unit id="8790ba2d042320ac0ff89cc6fbfd713e3f294b72" translate="yes" xml:space="preserve">
          <source>On Windows Vista and above grabbing a layered window, which is created by setting the &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_TranslucentBackground&lt;/a&gt; attribute, will not work. Instead grabbing the desktop widget should work.</source>
          <target state="translated">Windows Vista以降では、&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_TranslucentBackground&lt;/a&gt;属性を設定して作成されたレイヤードウィンドウを取得しても機能しません。代わりに、デスクトップウィジェットを取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="1d0e589073490d5159cfe11285c50f7a1f85db9b" translate="yes" xml:space="preserve">
          <source>On Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; the page setup dialog is implemented using the native page setup dialogs.</source>
          <target state="translated">Windowsおよび&lt;a href=&quot;internationalization#macos&quot;&gt;macOSでは&lt;/a&gt;、ページ設定ダイアログはネイティブのページ設定ダイアログを使用して実装されます。</target>
        </trans-unit>
        <trans-unit id="153b1e39841abcf2158fa5299c7935bc61f925b4" translate="yes" xml:space="preserve">
          <source>On Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the native print dialog is used, which means that some &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; properties set on the dialog won't be respected. The native print dialog on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; does not support setting printer options, i.e. &lt;a href=&quot;qprintdialog#options-prop&quot;&gt;setOptions&lt;/a&gt;() and &lt;a href=&quot;qprintdialog#setOption&quot;&gt;setOption&lt;/a&gt;() have no effect.</source>
          <target state="translated">Windowsおよび&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;では、ネイティブの印刷ダイアログが使用されます。これは、ダイアログに設定された&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;および&lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt;プロパティの一部が尊重されないことを意味します。&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;のネイティブ印刷ダイアログは、プリンターオプションの設定をサポートしていません。つまり、&lt;a href=&quot;qprintdialog#options-prop&quot;&gt;setOptions&lt;/a&gt;（）と&lt;a href=&quot;qprintdialog#setOption&quot;&gt;setOption&lt;/a&gt;（）は効果がありません。</target>
        </trans-unit>
        <trans-unit id="9fb552f0c6ee026f6a2d5cdf2c2faba130e66307" translate="yes" xml:space="preserve">
          <source>On Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this static function will use the native file dialog and not a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;. However, the native Windows file dialog does not support displaying files in the directory chooser. You need to pass &lt;a href=&quot;qfiledialog#Option-enum&quot;&gt;DontUseNativeDialog&lt;/a&gt; to display files using a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="translated">Windowsと&lt;a href=&quot;internationalization#macos&quot;&gt;macOSでは&lt;/a&gt;、この静的関数は&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;ではなく、ネイティブファイルダイアログを使用します。ただし、ネイティブのWindowsファイルダイアログは、ディレクトリチューザー内のファイルの表示をサポートしていません。&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;を使用してファイルを表示するには、&lt;a href=&quot;qfiledialog#Option-enum&quot;&gt;DontUseNativeDialog&lt;/a&gt;を渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="a70298dd5c537a10885dffc0b4796cc69c26b290" translate="yes" xml:space="preserve">
          <source>On Windows and Mac, this locale will use the decimal/grouping characters and date/time formats specified in the system configuration panel.</source>
          <target state="translated">Windows および Mac では、このロケールはシステム設定パネルで指定された 10 進数/グループ化文字と日付/時刻の書式を使用します。</target>
        </trans-unit>
        <trans-unit id="d9517590c1b7334224700261590c3cf915514625" translate="yes" xml:space="preserve">
          <source>On Windows and Mac, this option can be changed while printing and will take effect from the next call to &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;().</source>
          <target state="translated">WindowsおよびMacでは、このオプションは印刷中に変更でき、次回の&lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;（）の呼び出しから有効になります。</target>
        </trans-unit>
        <trans-unit id="005c72f31e8e4788fed43ee14d746717e095e475" translate="yes" xml:space="preserve">
          <source>On Windows and macOS the page setup dialog is implemented using the native page setup dialogs.</source>
          <target state="translated">Windows と macOS では、 ページ設定ダイアログはネイティブのページ設定ダイアログを使って実装されています。</target>
        </trans-unit>
        <trans-unit id="7d3c6cdcafd391c8d0a7c1479d4f25233e98f454" translate="yes" xml:space="preserve">
          <source>On Windows and macOS, the native print dialog is used, which means that some &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; properties set on the dialog won't be respected. The native print dialog on macOS does not support setting printer options, i.e. &lt;a href=&quot;qprintdialog#options-prop&quot;&gt;setOptions&lt;/a&gt;() and &lt;a href=&quot;qprintdialog#setOption&quot;&gt;setOption&lt;/a&gt;() have no effect.</source>
          <target state="translated">WindowsおよびmacOSでは、ネイティブの印刷ダイアログが使用されます。つまり、ダイアログに設定されている&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;および&lt;a href=&quot;qdialog&quot;&gt;QDialogの&lt;/a&gt;一部のプロパティは尊重されません。macOSのネイティブ印刷ダイアログは、プリンタオプションの設定をサポートしていません。つまり、&lt;a href=&quot;qprintdialog#options-prop&quot;&gt;setOptions&lt;/a&gt;（）と&lt;a href=&quot;qprintdialog#setOption&quot;&gt;setOption&lt;/a&gt;（）は効果がありません。</target>
        </trans-unit>
        <trans-unit id="525d9d80dde519138d351d097281097c7462525d" translate="yes" xml:space="preserve">
          <source>On Windows and macOS, this static function will use the native file dialog and not a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;. However, the native Windows file dialog does not support displaying files in the directory chooser. You need to pass &lt;a href=&quot;qfiledialog#Option-enum&quot;&gt;DontUseNativeDialog&lt;/a&gt; to display files using a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="translated">WindowsおよびmacOSでは、この静的関数は&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;ではなくネイティブファイルダイアログを使用します。ただし、ネイティブのWindowsファイルダイアログは、ディレクトリチューザでのファイルの表示をサポートしていません。&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;を使用してファイルを表示するには、&lt;a href=&quot;qfiledialog#Option-enum&quot;&gt;DontUseNativeDialog&lt;/a&gt;を渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="a5d18eab9424efb8eb9d67b73f2554a661d53b8d" translate="yes" xml:space="preserve">
          <source>On Windows and on systems where files do not have groups this function always returns (uint) -2.</source>
          <target state="translated">Windowsやファイルがグループを持たないシステムでは、この関数は常に(uint)-2を返します。</target>
        </trans-unit>
        <trans-unit id="79144f75391086deffcb8615df18ab19f80fdaf7" translate="yes" xml:space="preserve">
          <source>On Windows and on systems where files do not have owners this function returns ((uint) -2).</source>
          <target state="translated">Windowsやファイルの所有者がいないシステムでは、この関数は((uint)-2)を返します。</target>
        </trans-unit>
        <trans-unit id="32afade7d47abda738aacc3512c2b30ffaabeca2" translate="yes" xml:space="preserve">
          <source>On Windows platforms, this function may take several seconds to execute depending on the configuration of the user's system.</source>
          <target state="translated">Windowsプラットフォームでは、ユーザーのシステム構成によっては、この機能の実行に数秒かかる場合があります。</target>
        </trans-unit>
        <trans-unit id="f5aecee188c7f1b1294a2d0e762ebebb7959f0ca" translate="yes" xml:space="preserve">
          <source>On Windows systems, the clock overflows after 2^32 milliseconds, which corresponds to roughly 49.7 days. This means two processes' reckoning of the time since the reference may be different by multiples of 2^32 milliseconds. When comparing such values, it's recommended that the high 32 bits of the millisecond count be masked off.</source>
          <target state="translated">Windows システムでは、2^32 ミリ秒後に時計がオーバーフローしますが、これはおよそ 49.7 日に相当します。これは、参照が2^32ミリ秒の倍数で異なる可能性があるため、2つのプロセスによる時間の計算を意味します。このような値を比較する際には、ミリ秒数の高い32ビットはマスクオフすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4438b8406b08ce691061664d1b8e89e958e240ba" translate="yes" xml:space="preserve">
          <source>On Windows the dialog will spin a blocking modal event loop that will not dispatch any QTimers, and if</source>
          <target state="translated">Windowsでは、ダイアログはQTimersをディスパッチしないブロッキングモーダルイベントループを回転させます。</target>
        </trans-unit>
        <trans-unit id="d60ef4abd5ddf2ac11833e853cd9b3a90a8a9a4c" translate="yes" xml:space="preserve">
          <source>On Windows this ID is translated from the Windows ID using an internal translation table and the user's selected country. As a consequence there is a small chance any Windows install may have IDs not known by Qt, in which case &quot;UTC&quot; will be returned.</source>
          <target state="translated">Windowsでは、このIDは内部の翻訳テーブルとユーザーが選択した国を使ってWindows IDから翻訳されます。結果として、Windows のインストールでは Qt が知らない ID を持つ可能性があり、その場合は &quot;UTC&quot; が返されます。</target>
        </trans-unit>
        <trans-unit id="0f5bb54d8a742f78761067d364ae5dee864e5618" translate="yes" xml:space="preserve">
          <source>On Windows this is a named pipe and on Unix this is a local domain socket.</source>
          <target state="translated">Windowsではこれは名前付きパイプ、Unixではこれはローカルドメインソケットです。</target>
        </trans-unit>
        <trans-unit id="173484095c13480d2e28bd6242bb96dbc6170feb" translate="yes" xml:space="preserve">
          <source>On Windows this returns a list of &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; objects containing &quot;C:/&quot;, &quot;D:/&quot;, etc. On other operating systems, it returns a list containing just one root directory (i.e. &quot;/&quot;).</source>
          <target state="translated">Windowsでは、「C：/」、「D：/」などを含む&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;オブジェクトのリストを返します。他のオペレーティングシステムでは、ルートディレクトリを1つだけ含むリスト（つまり「/」）を返します。</target>
        </trans-unit>
        <trans-unit id="d081113f7df8bc79a1aef37cb9f1492bed7c99fc" translate="yes" xml:space="preserve">
          <source>On Windows,</source>
          <target state="translated">Windowsで。</target>
        </trans-unit>
        <trans-unit id="2f9f91efe038a9e14ae2e98d9d2d49df516d2ec0" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qcommandlineparser&quot;&gt;QCommandLineParser&lt;/a&gt; uses message boxes to display usage information and errors if no console window can be obtained.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;qcommandlineparser&quot;&gt;QCommandLineParser&lt;/a&gt;はメッセージボックスを使用して、コンソールウィンドウを取得できない場合に使用法の情報とエラーを表示します。</target>
        </trans-unit>
        <trans-unit id="7aaacc0a16e055c426abc12b5c974f97f3a6cc14" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;UserAccessOption&lt;/a&gt; is sufficient to allow a non elevated process to connect to a local server created by an elevated process run by the same user. &lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;GroupAccessOption&lt;/a&gt; refers to the primary group of the process (see TokenPrimaryGroup in the Windows documentation). &lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;OtherAccessOption&lt;/a&gt; refers to the well known &quot;Everyone&quot; group.</source>
          <target state="translated">Windowsでは、昇格していないプロセスが同じユーザーが実行する昇格したプロセスによって作成されたローカルサーバーに接続するには、&lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;UserAccessOption&lt;/a&gt;で十分です。&lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;GroupAccessOption&lt;/a&gt;は、プロセスのプライマリグループを参照します（WindowsドキュメントのTokenPrimaryGroupを参照）。&lt;a href=&quot;qlocalserver#SocketOption-enum&quot;&gt;OtherAccessOption&lt;/a&gt;は、よく知られた「Everyone」グループを指します。</target>
        </trans-unit>
        <trans-unit id="7657792c855355b2e1bf8322e309cc98bee5fb9b" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qmimedata#formats&quot;&gt;formats&lt;/a&gt;() will also return custom formats available in the MIME data, using the &lt;code&gt;x-qt-windows-mime&lt;/code&gt; subtype to indicate that they represent data in non-standard formats. The formats will take the following form:</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;qmimedata#formats&quot;&gt;formats&lt;/a&gt;（）は、MIMEデータで使用可能なカスタム形式も返します &lt;code&gt;x-qt-windows-mime&lt;/code&gt; サブタイプを使用して、非標準形式でデータを表すことを示します。形式は次の形式になります。</target>
        </trans-unit>
        <trans-unit id="1d34b7d36338db117c47d6d8a642c55e9be69ad9" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; uses the Win32 API function &lt;code&gt;CreateProcess&lt;/code&gt; to start child processes. While &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; provides a comfortable way to start processes without worrying about platform details, it is in some cases desirable to fine-tune the parameters that are passed to &lt;code&gt;CreateProcess&lt;/code&gt;. This is done by defining a &lt;code&gt;CreateProcessArgumentModifier&lt;/code&gt; function and passing it to &lt;code&gt;setCreateProcessArgumentsModifier&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;はWin32 API関数 &lt;code&gt;CreateProcess&lt;/code&gt; を使用して子プロセスを開始します。一方で&lt;a href=&quot;qprocess&quot;&gt;QProcessは、&lt;/a&gt;プラットフォームの詳細を気にすることなく、プロセスを開始するための快適な方法を提供し、それはに渡されるパラメータを微調整することが望ましいいくつかのケースである &lt;code&gt;CreateProcess&lt;/code&gt; 。これは、 &lt;code&gt;CreateProcessArgumentModifier&lt;/code&gt; 関数を定義し、それを &lt;code&gt;setCreateProcessArgumentsModifier&lt;/code&gt; に渡すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="6211efcbbb8b3d6c4e6c2ffb8fe77c3c3f76389c" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; lets you access settings that have been written with &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; (or settings in a supported format, e.g., string data) in the system registry. This is done by constructing a &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; object with a path in the registry and &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;qsettings&quot;&gt;QSettingsを&lt;/a&gt;使用して、システムレジストリの&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;（またはサポートされている形式の文字列データなどの設定）で記述された設定にアクセスできます。これは、レジストリのパスと&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: NativeFormat&lt;/a&gt;を使用して&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;オブジェクトを作成することによって行われます。</target>
        </trans-unit>
        <trans-unit id="bd0c88cc322d1d15cf5b6bfab2befeec4005d8b4" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt; settings are stored in the following registry paths:</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt;設定は次のレジストリパスに保存されます。</target>
        </trans-unit>
        <trans-unit id="94852db06226697f5a831247465cc2af867c02e0" translate="yes" xml:space="preserve">
          <source>On Windows, &lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt; uses the Win32 API function &lt;code&gt;CreateProcess&lt;/code&gt; to start child processes. While &lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt; provides a comfortable way to start processes without worrying about platform details, it is in some cases desirable to fine-tune the parameters that are passed to &lt;code&gt;CreateProcess&lt;/code&gt;. This is done by defining a &lt;code&gt;CreateProcessArgumentModifier&lt;/code&gt; function and passing it to &lt;code&gt;setCreateProcessArgumentsModifier&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt;はWin32API関数 &lt;code&gt;CreateProcess&lt;/code&gt; を使用して子プロセスを開始します。一方で&lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcessは、&lt;/a&gt;プラットフォームの詳細を気にすることなく、プロセスを開始するための快適な方法を提供し、それはに渡されるパラメータを微調整することが望ましいいくつかのケースである &lt;code&gt;CreateProcess&lt;/code&gt; 。これは、 &lt;code&gt;CreateProcessArgumentModifier&lt;/code&gt; 関数を定義し、それを &lt;code&gt;setCreateProcessArgumentsModifier&lt;/code&gt; に渡すことによって行われます。</target>
        </trans-unit>
        <trans-unit id="273747cc7999cee5b8f3d7d8165402e17286236f" translate="yes" xml:space="preserve">
          <source>On Windows, ANGLE, a third-party OpenGL ES to Direct 3D translator, is no longer included in Qt 6. This means &lt;code&gt;Qt::AA_UseOpenGLES&lt;/code&gt; and the environment variable &lt;code&gt;QT_OPENGL=angle&lt;/code&gt; no longer has any effect. In dynamic OpenGL builds there is no automatic fallback to ANGLE in case OpenGL-proper fails to initialize. For &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; or &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; based applications using OpenGL directly, for example via &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;, this means that OpenGL-proper is the only option at runtime. However, the use of a pure software OpenGL implementation, such as Mesa llvmpipe that is shipped with the pre-built Qt packages, is still available.</source>
          <target state="translated">Windowsでは、サードパーティの &lt;code&gt;Qt::AA_UseOpenGLES&lt;/code&gt; からDirect3DへのトランスレータであるANGLEはQt6に含まれなくなりました。つまり、Qt :: AA_UseOpenGLESと環境変数 &lt;code&gt;QT_OPENGL=angle&lt;/code&gt; は効果がなくなります。動的OpenGLビルドでは、OpenGL-properの初期化に失敗した場合のANGLEへの自動フォールバックはありません。用&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;または&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidgetの&lt;/a&gt;を経由して、たとえば、直接OpenGLを使用してベースのアプリケーション&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;、OpenGLの-適切には、実行時に唯一のオプションであることを、この手段。ただし、ビルド済みのQtパッケージに同梱されているMesallvmpipeなどの純粋なソフトウェアOpenGL実装の使用は引き続き利用できます。</target>
        </trans-unit>
        <trans-unit id="14ab9ffede2ea3a49550674e47ff7350c2742c59" translate="yes" xml:space="preserve">
          <source>On Windows, ANGLE, a third-party OpenGL ES to Direct 3D translator, is no longer included in Qt. This means &lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt::AA_UseOpenGLES&lt;/a&gt; and the environment variable &lt;code&gt;QT_OPENGL=angle&lt;/code&gt; no longer have any effect. In &lt;a href=&quot;windows-requirements&quot;&gt;dynamic OpenGL builds&lt;/a&gt; there is no automatic fallback to ANGLE in case OpenGL proper fails to initialize. For &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; or &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; based applications using OpenGL directly, for example via &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;, this means that OpenGL proper is the only option at run time. However, the alternative of using a pure software OpenGL implementation, such as Mesa llvmpipe that is shipped with the pre-built Qt packages, is still available. For Qt Quick and Qt Quick 3D applications, Qt 6 introduces support for Direct 3D 11, Vulkan, and Metal, in addition to OpenGL. On Windows the default choice is Direct 3D, therefore the removal of ANGLE is alleviated by having support for graphics APIs other than OpenGL as well.</source>
          <target state="translated">Windowsでは、サードパーティのOpenGL ES to Direct3DトランスレータであるANGLEはQtに含まれなくなりました。これは、&lt;a href=&quot;qt#ApplicationAttribute-enum&quot;&gt;Qt :: AA_UseOpenGLES&lt;/a&gt;と環境変数 &lt;code&gt;QT_OPENGL=angle&lt;/code&gt; が効果を失ったことを意味します。&lt;a href=&quot;windows-requirements&quot;&gt;動的OpenGLの構築&lt;/a&gt;OpenGLは、適切な初期化に失敗した場合の角度への自動フォールバックが存在しません。用&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;又は&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidgetの&lt;/a&gt;を介して、例えば、直接OpenGLを使用してベースのアプリケーション&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;、これは、OpenGL本体が実行時の唯一のオプションであることを意味します。ただし、ビルド済みのQtパッケージに付属しているMesallvmpipeなどの純粋なソフトウェアOpenGL実装を使用する代替手段は引き続き利用できます。QtQuickおよびQtQuick 3Dアプリケーションの場合、Qt 6では、OpenGLに加えて、Direct 3D 11、Vulkan、およびMetalのサポートが導入されています。Windowsでは、デフォルトの選択はDirect 3Dであるため、OpenGL以外のグラフィックAPIもサポートすることで、ANGLEの削除が軽減されます。</target>
        </trans-unit>
        <trans-unit id="c9f6224e430c62533d0c15d70a2952272d66f0c4" translate="yes" xml:space="preserve">
          <source>On Windows, Linux and Unix with FontConfig (client side font support) the following languages are also supported:</source>
          <target state="translated">Windows・Linux・UnixでFontConfig(クライアント側フォントサポート)を使用している場合、以下の言語にも対応しています。</target>
        </trans-unit>
        <trans-unit id="8ec750030fc86c431fc0cc22d96c707066b1bf1d" translate="yes" xml:space="preserve">
          <source>On Windows, Linux, and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, Qt WebView depends on the &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt; module to render content.</source>
          <target state="translated">Windows、Linux、および&lt;a href=&quot;internationalization#macos&quot;&gt;macOSでは&lt;/a&gt;、Qt WebViewはコンテンツのレンダリングを&lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;モジュールに依存しています。</target>
        </trans-unit>
        <trans-unit id="fb010bb9ae623dfe12cb2082c48c8f946484a62b" translate="yes" xml:space="preserve">
          <source>On Windows, Linux, and macOS, Qt WebView depends on the &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt; module to render content.</source>
          <target state="translated">Windows、Linux、およびmacOSでは、&lt;a href=&quot;qtwebengine-index&quot;&gt;QtWebView&lt;/a&gt;はコンテンツのレンダリングをQtWebEngineモジュールに依存しています。</target>
        </trans-unit>
        <trans-unit id="d574c885b384b3a5f690df7426307fddb8242507" translate="yes" xml:space="preserve">
          <source>On Windows, QCommandLineParser uses message boxes to display usage information and errors if no console window can be obtained.</source>
          <target state="translated">Windowsでは、コンソールウィンドウが得られない場合、QCommandLineParserは使用情報とエラーを表示するためにメッセージボックスを使用します。</target>
        </trans-unit>
        <trans-unit id="e169b57c650bd6581aeed67e13f7d754def8df0c" translate="yes" xml:space="preserve">
          <source>On Windows, QSettings lets you access settings that have been written with QSettings (or settings in a supported format, e.g., string data) in the system registry. This is done by constructing a QSettings object with a path in the registry and &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、QSettingsを使用すると、システムレジストリのQSettingsで書き込まれた設定（またはサポートされている形式の設定（文字列データなど））にアクセスできます。これは、レジストリ内のパスと&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: NativeFormat&lt;/a&gt;を使用してQSettingsオブジェクトを作成することによって行われます。</target>
        </trans-unit>
        <trans-unit id="c8ff7ae9872aa787caccaf0ac562ff34894acf65" translate="yes" xml:space="preserve">
          <source>On Windows, Qt can be configured with the system OpenGL or with &lt;a href=&quot;https://chromium.googlesource.com/angle/angle/+/master/README.md&quot;&gt;ANGLE&lt;/a&gt;. By default, Qt is configured to use dynamic OpenGL. This means that it tries to use system OpenGL and falls back to ANGLE, which is bundled with Qt and depends on the DirectX SDK, if native OpenGL does not work. ANGLE enables running Qt applications that depend on OpenGL, without installing the latest OpenGL drivers. If ANGLE also fails, Qt will fall back to software rendering, which is the slowest but most safe of the rendering methods.</source>
          <target state="translated">Windowsでは、QtはシステムOpenGLまたは&lt;a href=&quot;https://chromium.googlesource.com/angle/angle/+/master/README.md&quot;&gt;ANGLE&lt;/a&gt;で構成できます。デフォルトでは、Qtは動的OpenGLを使用するように構成されています。これは、ネイティブOpenGLが機能しない場合、システムOpenGLを使用しようとし、QtにバンドルされてDirectXSDKに依存するANGLEにフォールバックすることを意味します。ANGLEを使用すると、最新のOpenGLドライバーをインストールしなくても、OpenGLに依存するQtアプリケーションを実行できます。ANGLEも失敗した場合、Qtはソフトウェアレンダリングにフォールバックします。これは最も遅いですが、最も安全なレンダリング方法です。</target>
        </trans-unit>
        <trans-unit id="36084b6a38d0046457329edc1ce7035a57de9ca1" translate="yes" xml:space="preserve">
          <source>On Windows, Qt can be configured with the system OpenGL or with &lt;a href=&quot;https://chromium.googlesource.com/angle/angle/+/master/README.md#&quot;&gt;ANGLE&lt;/a&gt;. By default, Qt is configured to use dynamic OpenGL. This means that it tries to use system OpenGL and falls back to ANGLE, which is bundled with Qt and depends on the DirectX SDK, if native OpenGL does not work. ANGLE enables running Qt applications that depend on OpenGL, without installing the latest OpenGL drivers. If ANGLE also fails, Qt will fall back to software rendering, which is the slowest but most safe of the rendering methods.</source>
          <target state="translated">Windowsでは、QtはシステムOpenGLまたは&lt;a href=&quot;https://chromium.googlesource.com/angle/angle/+/master/README.md#&quot;&gt;ANGLE&lt;/a&gt;で設定できます。デフォルトでは、Qtは動的OpenGLを使用するように設定されています。つまり、ネイティブのOpenGLが機能しない場合、システムのOpenGLを使用しようとし、Qtにバンドルされており、DirectX SDKに依存するANGLEにフォールバックします。ANGLEを使用すると、最新のOpenGLドライバーをインストールしなくても、OpenGLに依存するQtアプリケーションを実行できます。ANGLEも失敗した場合、Qtはソフトウェアレンダリングにフォールバックします。これは、最も低速ですが最も安全なレンダリング方法です。</target>
        </trans-unit>
        <trans-unit id="73482fb6819fa90fbb7392686bee562ee6bb85e6" translate="yes" xml:space="preserve">
          <source>On Windows, Qt can use the system's Secure Channel library for this purpose (configure option &lt;b&gt;-schannel&lt;/b&gt;). On macOS and iOS, Qt can be configured to use the SecureTransport API (configure option &lt;b&gt;-securetransport&lt;/b&gt;).</source>
          <target state="translated">Windowsでは、Qtはこの目的のためにシステムのセキュリティで保護されたチャネルライブラリを使用できます（構成オプション&lt;b&gt;-schannel&lt;/b&gt;）。macOSおよびiOSでは、SecureTransport APIを使用するようにQtを構成できます（構成オプション&lt;b&gt;-securetransport&lt;/b&gt;）。</target>
        </trans-unit>
        <trans-unit id="86cb408cc7a3276abc43d23f5e1d0e4694746fda" translate="yes" xml:space="preserve">
          <source>On Windows, Qt will use Windows's Multimedia timer facility (if available) for Qt::PreciseTimer and normal Windows timers for Qt::CoarseTimer and Qt::VeryCoarseTimer.</source>
          <target state="translated">Windowsでは、Qt::PreciseTimerにはWindowsのマルチメディアタイマー機能(利用可能な場合)を、Qt::CoarseTimerとQt::VeryCoarseTimerには通常のWindowsタイマーを使用します。</target>
        </trans-unit>
        <trans-unit id="5f6c67b3c388f495ed43d8c62ac9b5423438cb1b" translate="yes" xml:space="preserve">
          <source>On Windows, Visual Studio 2017 and Windows 10 SDK are required.</source>
          <target state="translated">Windowsでは、Visual Studio 2017とWindows 10 SDKが必要です。</target>
        </trans-unit>
        <trans-unit id="b94e7d980488a2cafad803911d11239698908891" translate="yes" xml:space="preserve">
          <source>On Windows, an ODBC driver manager should be installed by default. For Unix systems, there are some implementations which must be installed first. Note that every end user of your application is required to have an ODBC driver manager installed, otherwise the QODBC plugin will not work.</source>
          <target state="translated">Windowsでは、デフォルトでODBCドライバマネージャがインストールされているはずです。Unixシステムでは、最初にインストールしなければならない実装があります。アプリケーションのすべてのエンドユーザがODBCドライバマネージャをインストールする必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4a046a49eb862192bc389c249bdcd0b52a2654ed" translate="yes" xml:space="preserve">
          <source>On Windows, and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, this static function will use the native file dialog and not a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="translated">Windowsおよび&lt;a href=&quot;internationalization#macos&quot;&gt;macOSでは&lt;/a&gt;、この静的関数は&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;ではなく、ネイティブファイルダイアログを使用します。</target>
        </trans-unit>
        <trans-unit id="10826623feadfa72a4485e34a17fbeb799e5b968" translate="yes" xml:space="preserve">
          <source>On Windows, and macOS, this static function will use the native file dialog and not a &lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;.</source>
          <target state="translated">WindowsおよびmacOSでは、この静的関数は&lt;a href=&quot;qfiledialog&quot;&gt;QFileDialog&lt;/a&gt;ではなくネイティブファイルダイアログを使用します。</target>
        </trans-unit>
        <trans-unit id="a5ad43c5b139fef3fa0a2f40b509afe66f604a22" translate="yes" xml:space="preserve">
          <source>On Windows, everything goes to a &quot;qttest&quot; directory under &lt;code&gt;%APPDATA%&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、すべてが &lt;code&gt;%APPDATA%&lt;/code&gt; の下の「qttest」ディレクトリに移動します。</target>
        </trans-unit>
        <trans-unit id="0a8742992833152e679e7ac230e6cd6497be0b03" translate="yes" xml:space="preserve">
          <source>On Windows, everything goes to a &quot;qttest&quot; directory under Application Data.</source>
          <target state="translated">Windowsでは、すべてがApplication Dataの下の &quot;qttest &quot;ディレクトリに移動します。</target>
        </trans-unit>
        <trans-unit id="41e4b76e5497497f0e910648c84c8b22896c2a3d" translate="yes" xml:space="preserve">
          <source>On Windows, if the format is &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt;, the return value is a system registry path, not a file path.</source>
          <target state="translated">Windowsでは、形式が&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: NativeFormatの&lt;/a&gt;場合、戻り値はファイルパスではなくシステムレジストリパスです。</target>
        </trans-unit>
        <trans-unit id="19db6fa9c0e6ecdb9dc3ed8c0e4c8646568b7e81" translate="yes" xml:space="preserve">
          <source>On Windows, if the process was terminated with TerminateProcess() from another application, this function will still return &lt;a href=&quot;qprocess#ExitStatus-enum&quot;&gt;NormalExit&lt;/a&gt; unless the exit code is less than 0.</source>
          <target state="translated">Windowsでは、プロセスが別のアプリケーションのTerminateProcess（）で終了した場合、この関数は、終了コードが0未満でない限り、&lt;a href=&quot;qprocess#ExitStatus-enum&quot;&gt;NormalExitを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="f4de3ffade0f14541e5fc34016a77889d9f60f1d" translate="yes" xml:space="preserve">
          <source>On Windows, if you are calling this when the application is not currently the active one then it will not make it the active window. It will change the color of the taskbar entry to indicate that the window has changed in some way. This is because Microsoft does not allow an application to interrupt what the user is currently doing in another application.</source>
          <target state="translated">Windowsでは、アプリケーションが現在アクティブなものではないときにこの関数を呼び出しても、そのアプリケーションをアクティブなウィンドウにはしません。タスクバーのエントリの色を変更して、ウィンドウが何らかの方法で変更されたことを示します。これは、Microsoft がユーザーが他のアプリケーションで現在行っている作業をアプリケーションが中断することを許可していないためです。</target>
        </trans-unit>
        <trans-unit id="575d9b3a78af0da2b74620b3d569a1bc8e316a74" translate="yes" xml:space="preserve">
          <source>On Windows, it is possible for a key to have both a value and subkeys. Its default value is accessed by using &quot;Default&quot; or &quot;.&quot; in place of a subkey:</source>
          <target state="translated">Windows では、キーに値とサブキーの両方を持たせることができます。そのデフォルト値にアクセスするには、サブキーの代わりに「デフォルト」または「...」を使用します。</target>
        </trans-unit>
        <trans-unit id="789849527f55dd326ab8965b01a0cd4e3d42c782" translate="yes" xml:space="preserve">
          <source>On Windows, it returns the volume letter in case the volume is not mounted to a directory.</source>
          <target state="translated">Windowsでは、ボリュームがディレクトリにマウントされていない場合にボリュームレターを返します。</target>
        </trans-unit>
        <trans-unit id="6f45ef2557d2763eeb9ce7f467fe135973457929" translate="yes" xml:space="preserve">
          <source>On Windows, kill() uses TerminateProcess, and on Unix and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, the SIGKILL signal is sent to the process.</source>
          <target state="translated">Windowsでは、kill（）はTerminateProcessを使用し、Unixおよび&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;では、SIGKILLシグナルがプロセスに送信されます。</target>
        </trans-unit>
        <trans-unit id="c1f2ddc90ea88c20db6dcf30567c41f324327c36" translate="yes" xml:space="preserve">
          <source>On Windows, kill() uses TerminateProcess, and on Unix and macOS, the SIGKILL signal is sent to the process.</source>
          <target state="translated">Windows では kill()は TerminateProcess を使用し、Unix と macOS では SIGKILL シグナルがプロセスに送られます。</target>
        </trans-unit>
        <trans-unit id="b7817e4f6372ea0ffb46fc54a14ab0108449385c" translate="yes" xml:space="preserve">
          <source>On Windows, make sure you have &lt;code&gt;MinGW&lt;/code&gt; as well as &lt;code&gt;sed&lt;/code&gt; in your &lt;code&gt;PATH&lt;/code&gt; and configure with the following:</source>
          <target state="translated">Windowsでは、あなたが持って作る &lt;code&gt;MinGW&lt;/code&gt; だけでなく、 &lt;code&gt;sed&lt;/code&gt; のあなたに &lt;code&gt;PATH&lt;/code&gt; 以下とし、Configure：</target>
        </trans-unit>
        <trans-unit id="be08508e87dfb9c0df0e01746b667cf36cea0b24" translate="yes" xml:space="preserve">
          <source>On Windows, sets the printer resolution to that defined for the printer in use. For PDF printing, sets the resolution of the PDF driver to 1200 dpi.</source>
          <target state="translated">Windows の場合、プリンタの解像度を、使用中のプリンタで定義されている解像度に設定します。PDF 印刷の場合、PDF ドライバの解像度を 1200 dpi に設定します。</target>
        </trans-unit>
        <trans-unit id="86c265bb1809aa2eeda1160b8236aed44714a002" translate="yes" xml:space="preserve">
          <source>On Windows, shortcuts (&lt;code&gt;.lnk&lt;/code&gt; files) are currently treated as symlinks. As on Unix systems, the property getters return the size of the targeted file, not the &lt;code&gt;.lnk&lt;/code&gt; file itself. This behavior is deprecated and will likely be removed in a future version of Qt, after which &lt;code&gt;.lnk&lt;/code&gt; files will be treated as regular files.</source>
          <target state="translated">Windowsでは、ショートカット（ &lt;code&gt;.lnk&lt;/code&gt; ファイル）は現在シンボリックリンクとして扱われます。Unixシステムと同様に、プロパティゲッターは、 &lt;code&gt;.lnk&lt;/code&gt; ファイル自体ではなく、ターゲットファイルのサイズを返します。この動作は非推奨であり、Qtの将来のバージョンで削除される可能性があります。その後、 &lt;code&gt;.lnk&lt;/code&gt; ファイルは通常のファイルとして扱われます。</target>
        </trans-unit>
        <trans-unit id="14d9e4ccb9a6bff1ad352d4396e5ff42f362bb10" translate="yes" xml:space="preserve">
          <source>On Windows, symlinks (shortcuts) are &lt;code&gt;.lnk&lt;/code&gt; files. The reported &lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;() is that of the symlink (not the link's target), and opening a symlink using &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; opens the &lt;code&gt;.lnk&lt;/code&gt; file. For example:</source>
          <target state="translated">Windowsでは、シンボリックリンク（ショートカット）は &lt;code&gt;.lnk&lt;/code&gt; ファイルです。報告&lt;a href=&quot;qfileinfo#size&quot;&gt;されるサイズ&lt;/a&gt;（）はシンボリックリンクのサイズ（リンクのターゲットではない）であり、&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;を使用してシンボリックリンクを開くと &lt;code&gt;.lnk&lt;/code&gt; ファイルが開きます。例えば：</target>
        </trans-unit>
        <trans-unit id="894c53cc3aa9870814680f88a38324b2cbcc4b60" translate="yes" xml:space="preserve">
          <source>On Windows, terminate() posts a WM_CLOSE message to all top-level windows of the process and then to the main thread of the process itself. On Unix and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; the &lt;code&gt;SIGTERM&lt;/code&gt; signal is sent.</source>
          <target state="translated">Windowsでは、terminate（）はWM_CLOSEメッセージをプロセスのすべてのトップレベルウィンドウに送信し、次にプロセス自体のメインスレッドに送信します。Unixおよび&lt;a href=&quot;internationalization#macos&quot;&gt;macOSでは&lt;/a&gt;、 &lt;code&gt;SIGTERM&lt;/code&gt; シグナルが送信されます。</target>
        </trans-unit>
        <trans-unit id="bd77ce155260348822d2cf0793b1977b1e47571b" translate="yes" xml:space="preserve">
          <source>On Windows, terminate() posts a WM_CLOSE message to all top-level windows of the process and then to the main thread of the process itself. On Unix and macOS the &lt;code&gt;SIGTERM&lt;/code&gt; signal is sent.</source>
          <target state="translated">Windowsでは、terminate（）はWM_CLOSEメッセージをプロセスのすべてのトップレベルウィンドウに送信し、次にプロセス自体のメインスレッドに送信します。UnixおよびmacOSでは、 &lt;code&gt;SIGTERM&lt;/code&gt; シグナルが送信されます。</target>
        </trans-unit>
        <trans-unit id="c023ed2fa00db5821f38f2a7733300b417f3e3d0" translate="yes" xml:space="preserve">
          <source>On Windows, the</source>
          <target state="translated">Windowsでは</target>
        </trans-unit>
        <trans-unit id="50b76eb87355aa84c9f176e1e2fa2a2d4e2b8c28" translate="yes" xml:space="preserve">
          <source>On Windows, the MIME format does not always map directly to the clipboard formats. Qt provides &lt;a href=&quot;qwinmime&quot;&gt;QWinMime&lt;/a&gt; to map clipboard formats to open-standard MIME formats. Similarly, the &lt;a href=&quot;qmacpasteboardmime&quot;&gt;QMacPasteboardMime&lt;/a&gt; maps MIME to Mac flavors.</source>
          <target state="translated">Windowsでは、MIME形式は常にクリップボード形式に直接マッピングされるとは限りません。Qtは、クリップボード形式をオープン標準のMIME形式にマップする&lt;a href=&quot;qwinmime&quot;&gt;QWinMime&lt;/a&gt;を提供します。同様に、&lt;a href=&quot;qmacpasteboardmime&quot;&gt;QMacPasteboardMime&lt;/a&gt;はMIMEをMacフレーバーにマップします。</target>
        </trans-unit>
        <trans-unit id="f0ca664fd6fda6cabf64d4d1c83ec4a6b9fe92c2" translate="yes" xml:space="preserve">
          <source>On Windows, the MIME format does not always map directly to the clipboard formats. Qt provides QWinMime to map clipboard formats to open-standard MIME formats. Similarly, the QMacPasteboardMime maps MIME to Mac flavors.</source>
          <target state="translated">Windows では、MIME 形式がクリップボード形式に直接マッピングされるとは限りません。Qt は、クリップボードのフォーマットをオープンスタンダードの MIME フォーマットにマップする QWinMime を提供しています。同様に、QMacPasteboardMime は MIME を Mac のフレーバーにマッピングします。</target>
        </trans-unit>
        <trans-unit id="c9d9f0d80797bfabd82eb565989c14db0a2d588d" translate="yes" xml:space="preserve">
          <source>On Windows, the SDK sets the environment variable &lt;code&gt;VULKAN_SDK&lt;/code&gt;, which will be detected by the &lt;code&gt;configure&lt;/code&gt; script.</source>
          <target state="translated">Windowsでは、SDKが環境変数 &lt;code&gt;VULKAN_SDK&lt;/code&gt; を &lt;code&gt;configure&lt;/code&gt; ます。これは、configureスクリプトによって検出されます。</target>
        </trans-unit>
        <trans-unit id="3dd65d4ac7293575c89dbbc61edd2fa3c9540a48" translate="yes" xml:space="preserve">
          <source>On Windows, the dialog will spin a blocking modal event loop that will not dispatch any QTimers, and if</source>
          <target state="translated">Windowsでは、ダイアログはQTimersをディスパッチしないブロッキングモーダルイベントループを回転させます。</target>
        </trans-unit>
        <trans-unit id="601af0d47a12773216295a93de15e80b3012a215" translate="yes" xml:space="preserve">
          <source>On Windows, the following additional tools are required:</source>
          <target state="translated">Windowsの場合、以下の追加ツールが必要です。</target>
        </trans-unit>
        <trans-unit id="070069766453e3eb3bc17c26dcc40196783ed1a2" translate="yes" xml:space="preserve">
          <source>On Windows, the following files are used:</source>
          <target state="translated">Windowsの場合、以下のファイルを使用します。</target>
        </trans-unit>
        <trans-unit id="357070b8ee3d0513c5e8e0a083173878f3a0115d" translate="yes" xml:space="preserve">
          <source>On Windows, the installation binaries provided by LLVM do not include &lt;code&gt;llvm-config&lt;/code&gt;. You may still have it on your system, if you have built LLVM yourself from source. If that is the case, and you want to let the build system find Clang automatically, add the path to &lt;code&gt;llvm-config&lt;/code&gt; to your &lt;code&gt;PATH&lt;/code&gt; environment variable. For example:</source>
          <target state="translated">Windowsでは、LLVMによって提供されるインストールバイナリに &lt;code&gt;llvm-config&lt;/code&gt; が含まれていません。ソースからLLVMを自分でビルドした場合でも、システムに残っている可能性があります。その場合、ビルドシステムにClangを自動的に検出させるには、 &lt;code&gt;llvm-config&lt;/code&gt; への &lt;code&gt;PATH&lt;/code&gt; 環境変数に追加します。例えば：</target>
        </trans-unit>
        <trans-unit id="3c1657afc1bc02dca1b80b856b5ed6552a224065" translate="yes" xml:space="preserve">
          <source>On Windows, the list is built from the argc and argv parameters only if modified argv/argc parameters are passed to the constructor. In that case, encoding problems might occur.</source>
          <target state="translated">Windowsでは、変更されたargv/argcパラメータがコンストラクタに渡された場合にのみ、argcとargvパラメータからリストが構築されます。その場合、エンコーディングの問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="30bdeaf7adcfd048228bfae9a8c9c60cf24a9435" translate="yes" xml:space="preserve">
          <source>On Windows, the returned value is a &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms740522(v=vs.85).aspx&quot;&gt;Winsock 2 Socket Handle&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、戻り値は&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms740522(v=vs.85).aspx&quot;&gt;Winsock 2 Socket Handle&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="8a57532f83aee4223bce412df8949bba23b8bbe1" translate="yes" xml:space="preserve">
          <source>On Windows, the second example above will be translated to &lt;code&gt;C:\Documents and Settings&lt;/code&gt; when used to access files.</source>
          <target state="translated">Windowsでは、上記の2番目の例は、ファイルへのアクセスに使用される &lt;code&gt;C:\Documents and Settings&lt;/code&gt; に変換されます。</target>
        </trans-unit>
        <trans-unit id="c821ce0a17f8bc969c387de22bee5900320ead8a" translate="yes" xml:space="preserve">
          <source>On Windows, the system tray icon size is 16x16; on X11, the preferred size is 22x22. The icon will be scaled to the appropriate size as necessary.</source>
          <target state="translated">Windowsでは、システムトレイのアイコンのサイズは16x16、X11では22x22です。 アイコンは必要に応じて適切なサイズに拡大縮小されます。</target>
        </trans-unit>
        <trans-unit id="6fa2dea46c7c5f0f1f0cbdcde22e07fe259c0a30" translate="yes" xml:space="preserve">
          <source>On Windows, the variable names are case-insensitive, but case-preserving. &lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; behaves accordingly.</source>
          <target state="translated">Windowsでは、変数名の大文字と小文字は区別されませんが、大文字と小文字が区別されます。&lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt;はそれに応じて動作します。</target>
        </trans-unit>
        <trans-unit id="85e98a6a22472447569815ce185bce3c04119f2d" translate="yes" xml:space="preserve">
          <source>On Windows, the variable names are case-insensitive, but case-preserving. QProcessEnvironment behaves accordingly.</source>
          <target state="translated">Windowsでは、変数名は大文字小文字を区別しませんが、大文字小文字を保持します。QProcessEnvironment はそれに応じて動作します。</target>
        </trans-unit>
        <trans-unit id="b5b32a2cff36ed3a8a335860a856ed4c4634f194" translate="yes" xml:space="preserve">
          <source>On Windows, this causes the window's taskbar entry to flash for a time. If</source>
          <target state="translated">Windowsでは、これにより、ウィンドウのタスクバーのエントリがしばらく点滅します。もし</target>
        </trans-unit>
        <trans-unit id="7ad2a1df3d377f75556f4b4104f12737db507920" translate="yes" xml:space="preserve">
          <source>On Windows, this function does nothing; on Unix, it removes the socket file given by</source>
          <target state="translated">Windowsでは、この関数は何もしませんが、Unixでは</target>
        </trans-unit>
        <trans-unit id="4e9aaa05bd9dc6baaf7d4a989f9f0a6399793467" translate="yes" xml:space="preserve">
          <source>On Windows, this function returns &lt;code&gt;true&lt;/code&gt; if the target file is hidden (not the symlink).</source>
          <target state="translated">Windowsでは、ターゲットファイルが（シンボリックリンクではなく）非表示になっている場合、この関数は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="09eae3a8474264613a1bb0546b833063ce47363e" translate="yes" xml:space="preserve">
          <source>On Windows, this function returns the type of Windows kernel, like &quot;winnt&quot;. On Unix systems, it returns the same as the output of &lt;code&gt;uname -s&lt;/code&gt; (lowercased).</source>
          <target state="translated">Windowsでは、この関数は「winnt」などのWindowsカーネルのタイプを返します。Unixシステムでは、 &lt;code&gt;uname -s&lt;/code&gt; （小文字）の出力と同じ結果を返します。</target>
        </trans-unit>
        <trans-unit id="7d6249275f9fbc46af397c053e27c8e82ae55f49" translate="yes" xml:space="preserve">
          <source>On Windows, this function will use the WinHTTP DLL functions. Despite its name, Microsoft suggests using it for all applications that require network connections, not just HTTP. This will respect the proxy settings set on the registry with the proxycfg.exe tool. If those settings are not found, this function will attempt to obtain Internet Explorer's settings and use them.</source>
          <target state="translated">Windows では、この関数は WinHTTP DLL 関数を使用します。その名前にもかかわらず、MicrosoftはHTTPに限らず、ネットワーク接続を必要とするすべてのアプリケーションに使用することを提案しています。この関数は、proxycfg.exe ツールを使用してレジストリに設定されたプロキシ設定を尊重します。これらの設定が見つからない場合、この機能は Internet Explorer の設定を取得して使用しようとします。</target>
        </trans-unit>
        <trans-unit id="009e0df97f2e5d4e01405a88357006f9f19e7723" translate="yes" xml:space="preserve">
          <source>On Windows, this returns the drives visible in the &lt;b&gt;My Computer&lt;/b&gt; folder. On Unix operating systems, it returns the list of all mounted filesystems (except for pseudo filesystems).</source>
          <target state="translated">Windowsでは、これは[ &lt;b&gt;マイコンピュータ&lt;/b&gt; ]フォルダに表示されるドライブを返します。Unixオペレーティングシステムでは、マウントされているすべてのファイルシステム（疑似ファイルシステムを除く）のリストを返します。</target>
        </trans-unit>
        <trans-unit id="0936561a0967352768bfbc841c656154826ca8d9" translate="yes" xml:space="preserve">
          <source>On Windows, this value is used when the ownership of the D&amp;amp;D data should be taken over by the target application, i.e., the source application should not delete the data. On X11 this value is used to do a move. TargetMoveAction is not used on the Mac.</source>
          <target state="translated">Windowsでは、この値は、D＆Dデータの所有権をターゲットアプリケーションが引き継ぐ必要がある場合、つまり、ソースアプリケーションがデータを削除してはならない場合に使用されます。X11では、この値は移動を行うために使用されます。TargetMoveActionはMacでは使用されません。</target>
        </trans-unit>
        <trans-unit id="4eee6c744c3777dbddff6484cd65a374f2977b75" translate="yes" xml:space="preserve">
          <source>On Windows, toNativeSeparators(&quot;c:/winnt/system32&quot;) returns &quot;c:\winnt\system32&quot;.</source>
          <target state="translated">Windowsでは、toNativeSeparators(&quot;c:/winnt/system32&quot;)が &quot;c:\winntsystem32 &quot;を返す。</target>
        </trans-unit>
        <trans-unit id="6fb53d8edcc5cae3f92a646a3ff9898177717167" translate="yes" xml:space="preserve">
          <source>On Windows, triggers auto-generation of an .rc file if the &lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set. The generated .rc file will have the FILEVERSION and PRODUCTVERSION entries filled with major, minor, patch level, and build number. Each number must be in the range from 0 to 65535. More details about the generation of .rc files can be found in the &lt;a href=&quot;qmake-platform-notes#&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、&lt;a href=&quot;#rc-file&quot;&gt;RC_FILE&lt;/a&gt;および&lt;a href=&quot;#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていない場合、.rcファイルの自動生成をトリガーします。生成された.rcファイルには、メジャー、マイナー、パッチレベル、ビルド番号が入力されたFILEVERSIONおよびPRODUCTVERSIONエントリが含まれます。各番号は0から65535の範囲でなければなりません。.rcファイルの生成の詳細については、&lt;a href=&quot;qmake-platform-notes#&quot;&gt;プラットフォームノートを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="17635b63a5e5f6b5459a303d045e78a9e9cf7608" translate="yes" xml:space="preserve">
          <source>On Windows, triggers auto-generation of an .rc file if the &lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt; and &lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt; variables are not set. The generated .rc file will have the FILEVERSION and PRODUCTVERSION entries filled with major, minor, patch level, and build number. Each number must be in the range from 0 to 65535. More details about the generation of .rc files can be found in the &lt;a href=&quot;qmake-platform-notes&quot;&gt;Platform Notes&lt;/a&gt;.</source>
          <target state="translated">Windowsでは、.rcファイルのトリガを自動生成場合&lt;a href=&quot;qmake-variable-reference#rc-file&quot;&gt;RC_FILE&lt;/a&gt;と&lt;a href=&quot;qmake-variable-reference#res-file&quot;&gt;RES_FILE&lt;/a&gt;変数が設定されていません。生成された.rcファイルには、メジャー、マイナー、パッチレベル、およびビルド番号が入力されたFILEVERSIONエントリとPRODUCTVERSIONエントリが含まれます。各番号は0〜65535の範囲である必要があります。.rcファイルの生成の詳細については、&lt;a href=&quot;qmake-platform-notes&quot;&gt;プラットフォームノートを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7804dbafb95752380b7a75defcc7241f6d49bcef" translate="yes" xml:space="preserve">
          <source>On Windows, when the KeyDown event for this key is sent, the Ctrl+Alt modifiers are also set.</source>
          <target state="translated">Windowsでは、このキーのKeyDownイベントが送信されると、Ctrl+Alt修飾子も設定されます。</target>
        </trans-unit>
        <trans-unit id="730b836d8881154172539b5edb8b7c3bd51ef995" translate="yes" xml:space="preserve">
          <source>On Windows, when the Windows system registry is used, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; does not preserve the original type of the value. Therefore, the type of the value might change when a new value is set. For example, a value with type &lt;code&gt;REG_EXPAND_SZ&lt;/code&gt; will change to &lt;code&gt;REG_SZ&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、Windowsシステムレジストリが使用されている場合、&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;は値の元のタイプを保持しません。したがって、新しい値が設定されると、値のタイプが変わる可能性があります。たとえば、タイプが &lt;code&gt;REG_EXPAND_SZ&lt;/code&gt; の値は &lt;code&gt;REG_SZ&lt;/code&gt; に変更されます。</target>
        </trans-unit>
        <trans-unit id="d807f2e4cbc7b11d6cf8cb01e99e5962c550d060" translate="yes" xml:space="preserve">
          <source>On Windows, when the Windows system registry is used, QSettings does not preserve the original type of the value. Therefore, the type of the value might change when a new value is set. For example, a value with type &lt;code&gt;REG_EXPAND_SZ&lt;/code&gt; will change to &lt;code&gt;REG_SZ&lt;/code&gt;.</source>
          <target state="translated">Windowsでは、Windowsシステムレジストリを使用すると、QSettingsは元のタイプの値を保持しません。そのため、新しい値を設定すると、値の種類が変わる場合があります。たとえば、タイプ &lt;code&gt;REG_EXPAND_SZ&lt;/code&gt; の値は &lt;code&gt;REG_SZ&lt;/code&gt; に変更されます。</target>
        </trans-unit>
        <trans-unit id="55b56364276b5f7e47e7f031287b139fc5b947d5" translate="yes" xml:space="preserve">
          <source>On Windows:</source>
          <target state="translated">Windowsで。</target>
        </trans-unit>
        <trans-unit id="38bff627717e84c4edabc4f72056215a56db78a2" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to &quot;Calculator&quot; (XF86XK_Calculator) key for legacy reasons.</source>
          <target state="translated">X11では、レガシーな理由からこのキーは &quot;Calculator&quot;(XF86XK_Calculator)キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="eb011980df49c4979891a410f0db4938cb3a60ae" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to &quot;My Computer&quot; (XF86XK_MyComputer) key for legacy reasons.</source>
          <target state="translated">X11では、このキーはレガシーの理由で &quot;My Computer&quot;(XF86XK_MyComputer)キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="1bfe3c4f8fe5bd9ee3a20c50dccea55489cf6b63" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch0 key for legacy reasons.</source>
          <target state="translated">X11 では、このキーは従来の理由から XF86XK_Launch0 キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="38110747083a8ebebaf5bf2227de795089502230" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch1 key for legacy reasons.</source>
          <target state="translated">X11 では、レガシーな理由からこのキーは XF86XK_Launch1 キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="b433e57774b23b1fba9ac94ebed25e6c5098b77e" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch2 key for legacy reasons.</source>
          <target state="translated">X11 では、レガシーな理由からこのキーは XF86XK_Launch2 キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="215b19cd3792ab1e486526f2d225ecf7872a3a68" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch3 key for legacy reasons.</source>
          <target state="translated">X11 では、このキーはレガシーな理由から XF86XK_Launch3 キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="b6eba023acc8788fb39359621ce09415b381e3bb" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch4 key for legacy reasons.</source>
          <target state="translated">X11 では、このキーはレガシーな理由から XF86XK_Launch4 キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="044e49228d4ec744fae5846dcd722959672c193d" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch5 key for legacy reasons.</source>
          <target state="translated">X11 では、このキーはレガシーな理由から XF86XK_Launch5 キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="176c13710f95a8daaef6f59eb59cd96fe3499fa1" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch6 key for legacy reasons.</source>
          <target state="translated">X11 では、このキーはレガシーな理由から XF86XK_Launch6 キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="49ed2cc9414463eb9e5c87ff2895b838b0927830" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch7 key for legacy reasons.</source>
          <target state="translated">X11 では、このキーは従来の理由から XF86XK_Launch7 キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="eebef0fa1c574243e457f228b23d8b747720e57a" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch8 key for legacy reasons.</source>
          <target state="translated">X11 では、このキーは従来の理由から XF86XK_Launch8 キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="8973833e72301ced8eca68397f583495d93f340f" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_Launch9 key for legacy reasons.</source>
          <target state="translated">X11 では、このキーはレガシーな理由から XF86XK_Launch9 キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="a9cda10da6811c461130577bf71c1b62570896a4" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchA key for legacy reasons.</source>
          <target state="translated">X11 では、このキーはレガシーな理由から XF86XK_LaunchA キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="993b0f9701007d991189241d64f74b997482bcaf" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchB key for legacy reasons.</source>
          <target state="translated">X11 では、このキーはレガシーな理由から XF86XK_LaunchB キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="edf8b286ee85c0b86bad62052749b94265fdc9c6" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchC key for legacy reasons.</source>
          <target state="translated">X11 では、このキーはレガシーな理由から XF86XK_LaunchC キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="282a7579d151d39c6224732c8fd9e0e00d5e6878" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchD key for legacy reasons.</source>
          <target state="translated">X11 では、このキーはレガシーな理由から XF86XK_LaunchD キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="0d49d72dc7b9cad7ec0bd39bc7e8903b3e9d0eb8" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchE key for legacy reasons.</source>
          <target state="translated">X11 では、このキーは従来の理由から XF86XK_LaunchE キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="c3399a59cc479f88fd5846b477a3d2bbce888eeb" translate="yes" xml:space="preserve">
          <source>On X11 this key is mapped to XF86XK_LaunchF key for legacy reasons.</source>
          <target state="translated">X11 では、このキーはレガシーな理由から XF86XK_LaunchF キーにマップされています。</target>
        </trans-unit>
        <trans-unit id="cf05a551e29074459d59198f9285d4acca8fe607" translate="yes" xml:space="preserve">
          <source>On X11 this key is not mapped for legacy reasons. Use Qt::Key_Launch1 instead.</source>
          <target state="translated">X11 では、レガシーな理由でこのキーはマップされていません。代わりに Qt::Key_Launch1 を使用してください。</target>
        </trans-unit>
        <trans-unit id="ca4b93013030e6ab4726dc905a308d068ce1d21e" translate="yes" xml:space="preserve">
          <source>On X11,</source>
          <target state="translated">X11で。</target>
        </trans-unit>
        <trans-unit id="6b6585d9074e4aa129ab3877f868a593cdbeb093" translate="yes" xml:space="preserve">
          <source>On X11, Qt supports the &lt;a href=&quot;http://www.xfree86.org/4.3.0/Xcursor.3.html&quot;&gt;Xcursor&lt;/a&gt; library, which allows for full color icon themes. The table below shows the cursor name used for each &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; value. If a cursor cannot be found using the name shown below, a standard X11 cursor will be used instead. Note: X11 does not provide appropriate cursors for all possible &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; values. It is possible that some cursors will be taken from the Xcursor theme, while others will use an internal bitmap cursor.</source>
          <target state="translated">X11では、Qtはフルカラーアイコンテーマを可能にする&lt;a href=&quot;http://www.xfree86.org/4.3.0/Xcursor.3.html&quot;&gt;Xcursor&lt;/a&gt;ライブラリをサポートしています。次の表は、各&lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt :: CursorShape&lt;/a&gt;値に使用されるカーソル名を示しています。以下に示す名前でカーソルが見つからない場合は、代わりに標準のX11カーソルが使用されます。注：X11は、考えられるすべての&lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt :: CursorShape&lt;/a&gt;値に適切なカーソルを提供するわけではありません。一部のカーソルはXcursorテーマから取得され、他のカーソルは内部ビットマップカーソルを使用する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9b6fe6b086079c230da14348db2af20226d626fc" translate="yes" xml:space="preserve">
          <source>On X11, Qt supports the &lt;a href=&quot;http://www.xfree86.org/4.3.0/Xcursor.3.html#&quot;&gt;Xcursor&lt;/a&gt; library, which allows for full color icon themes. The table below shows the cursor name used for each &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; value. If a cursor cannot be found using the name shown below, a standard X11 cursor will be used instead. Note: X11 does not provide appropriate cursors for all possible &lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt::CursorShape&lt;/a&gt; values. It is possible that some cursors will be taken from the Xcursor theme, while others will use an internal bitmap cursor.</source>
          <target state="translated">X11では、Qtは&lt;a href=&quot;http://www.xfree86.org/4.3.0/Xcursor.3.html#&quot;&gt;Xcursor&lt;/a&gt;ライブラリをサポートしています。これにより、フルカラーのアイコンテーマが可能になります。次の表は、各&lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt :: CursorShape&lt;/a&gt;値に使用されるカーソル名を示しています。以下に示す名前を使用してもカーソルが見つからない場合は、代わりに標準のX11カーソルが使用されます。注：X11は、すべての可能な&lt;a href=&quot;qt#CursorShape-enum&quot;&gt;Qt :: CursorShape&lt;/a&gt;値に適切なカーソルを提供しません。一部のカーソルはXcursorテーマから取得され、他のカーソルは内部ビットマップカーソルを使用する可能性があります。</target>
        </trans-unit>
        <trans-unit id="f66a29a941a3f1c1178fa1f4051ed7633dcc7944" translate="yes" xml:space="preserve">
          <source>On X11, a window does not have a frame until the window manager decorates it. This happens asynchronously at some point in time after calling &lt;a href=&quot;qwidget#show&quot;&gt;QWidget::show&lt;/a&gt;() and the first paint event the window receives, or it does not happen at all. Bear in mind that X11 is policy-free (others call it flexible). Thus you cannot make any safe assumption about the decoration frame your window will get. Basic rule: There's always one user who uses a window manager that breaks your assumption, and who will complain to you.</source>
          <target state="translated">X11では、ウィンドウマネージャーが装飾するまで、ウィンドウにはフレームがありません。これは、&lt;a href=&quot;qwidget#show&quot;&gt;QWidget :: show&lt;/a&gt;（）を呼び出した後のある時点で非同期に発生し、ウィンドウが受信する最初のpaintイベント、またはまったく発生しません。X11はポリシーフリーであることを覚えておいてください（他の人はそれを柔軟と呼んでいます）。したがって、ウィンドウが取得する装飾フレームについて安全な仮定をすることはできません。基本ルール：ウィンドウマネージャーを使用して、想定を崩し、不満を言うユーザーは常に1人です。</target>
        </trans-unit>
        <trans-unit id="74bd622a9f5b268193d42ed1193ac4712fc8aefe" translate="yes" xml:space="preserve">
          <source>On X11, if not set, the fallback icon theme depends on your desktop settings. On other platforms it is not set by default.</source>
          <target state="translated">X11 では、設定されていない場合、フォールバックアイコンのテーマはデスクトップの設定に依存します。他のプラットフォームではデフォルトでは設定されていません。</target>
        </trans-unit>
        <trans-unit id="54da02e1730b21efd6d44aefe3448beb691d16ba" translate="yes" xml:space="preserve">
          <source>On X11, it is also possible to draw on the desktop.</source>
          <target state="translated">X11ではデスクトップ上での描画も可能です。</target>
        </trans-unit>
        <trans-unit id="ad44e1dbefcc93a469ce1e22bfadbf193d474b6d" translate="yes" xml:space="preserve">
          <source>On X11, the current icon theme depends on your desktop settings. On other platforms it is not set by default.</source>
          <target state="translated">X11では、現在のアイコンのテーマはデスクトップの設定に依存します。他のプラットフォームではデフォルトでは設定されていません。</target>
        </trans-unit>
        <trans-unit id="984489ecfc83d609f42ecee5acbf6bd8aa4e72cd" translate="yes" xml:space="preserve">
          <source>On X11, the document name is for example used as the default output filename in &lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialog&lt;/a&gt;. Note that the document name does not affect the file name if the printer is printing to a file. Use the setOutputFile() function for this.</source>
          <target state="translated">X11では、たとえば、ドキュメント名は&lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialogの&lt;/a&gt;デフォルトの出力ファイル名として使用されます。プリンタがファイルに印刷している場合、ドキュメント名はファイル名に影響しないことに注意してください。これには、setOutputFile（）関数を使用します。</target>
        </trans-unit>
        <trans-unit id="f27fe241c6c987ddd4ff6638b2510debe04bb5c0" translate="yes" xml:space="preserve">
          <source>On X11, the public &lt;a href=&quot;http://www.newplanetsoftware.com/xdnd/&quot;&gt;XDND protocol&lt;/a&gt; is used, while on Windows Qt uses the OLE standard, and Qt for &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; uses the Cocoa Drag Manager. On X11, XDND uses MIME, so no translation is necessary. The Qt API is the same regardless of the platform. On Windows, MIME-aware applications can communicate by using clipboard format names that are MIME types. Already some Windows applications use MIME naming conventions for their clipboard formats.</source>
          <target state="translated">X11では、パブリック&lt;a href=&quot;http://www.newplanetsoftware.com/xdnd/&quot;&gt;XDNDプロトコル&lt;/a&gt;が使用されますが、Windowsでは、QtはOLE標準を使用し、&lt;a href=&quot;internationalization#macos&quot;&gt;macOSの&lt;/a&gt; Qt は、Cocoa Drag Managerを使用します。X11では、XDNDはMIMEを使用するため、変換は必要ありません。Qt APIはプラットフォームに関係なく同じです。Windowsでは、MIME対応のアプリケーションは、MIMEタイプであるクリップボード形式の名前を使用して通信できます。すでに一部のWindowsアプリケーションは、クリップボード形式にMIME命名規則を使用しています。</target>
        </trans-unit>
        <trans-unit id="985302818f764cf35aaeea8f228232e784f34c07" translate="yes" xml:space="preserve">
          <source>On X11, the public &lt;a href=&quot;http://www.newplanetsoftware.com/xdnd/&quot;&gt;XDND protocol&lt;/a&gt; is used, while on Windows Qt uses the OLE standard, and Qt for macOS uses the Cocoa Drag Manager. On X11, XDND uses MIME, so no translation is necessary. The Qt API is the same regardless of the platform. On Windows, MIME-aware applications can communicate by using clipboard format names that are MIME types. Already some Windows applications use MIME naming conventions for their clipboard formats.</source>
          <target state="translated">X11ではパブリック&lt;a href=&quot;http://www.newplanetsoftware.com/xdnd/&quot;&gt;XDNDプロトコル&lt;/a&gt;が使用され、WindowsではQtはOLE標準を使用し、macOS用のQtはCocoa DragManagerを使用します。X11では、XDNDはMIMEを使用するため、変換は必要ありません。Qt APIは、プラットフォームに関係なく同じです。Windowsでは、MIME対応アプリケーションは、MIMEタイプであるクリップボード形式名を使用して通信できます。すでに一部のWindowsアプリケーションは、クリップボード形式にMIME命名規則を使用しています。</target>
        </trans-unit>
        <trans-unit id="746576bc1b84c50d9a8e7498467d0d47eb363722" translate="yes" xml:space="preserve">
          <source>On X11, the search path will use the XDG_DATA_DIRS environment variable if available.</source>
          <target state="translated">X11 では、検索パスは、XDG_DATA_DIRS 環境変数が利用可能な場合には XDG_DATA_DIRS 環境変数を使用します。</target>
        </trans-unit>
        <trans-unit id="a9074f202c6877dc2505a9ae7cf75c9f51f7cbf3" translate="yes" xml:space="preserve">
          <source>On X11, this function may not work properly with certain window managers. See the &lt;a href=&quot;application-windows#window-geometry&quot;&gt;Window Geometry&lt;/a&gt; documentation for an explanation.</source>
          <target state="translated">X11では、この関数は特定のウィンドウマネージャーでは正しく機能しない場合があります。説明については、&lt;a href=&quot;application-windows#window-geometry&quot;&gt;ウィンドウジオメトリの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ca8a7c2c378269fc18338fdfb24d9563e2b0b997" translate="yes" xml:space="preserve">
          <source>On X11, this function sets the program to call with the PDF output. On other platforms, it has no effect.</source>
          <target state="translated">X11 では、 こ の関数は PDF 出力で呼び出すプログラムを設定します。それ以外のプラットフォームでは、何の影響もありません。</target>
        </trans-unit>
        <trans-unit id="378efc0cfc3a063ee9441da0010f98a74ba38499" translate="yes" xml:space="preserve">
          <source>On X11, this will cause the window to be marked as &quot;demands attention&quot;, the window must not be hidden (i.e. not have hide() called on it, but be visible in some sort of way) in order for this to work.</source>
          <target state="translated">X11 では、これによりウィンドウが &quot;注意を要求されている&quot; とマークされるようになります。</target>
        </trans-unit>
        <trans-unit id="ce39c3052ac1f59f934bd2a1073483ba593e315a" translate="yes" xml:space="preserve">
          <source>On a Windows system with LLVM installed to &lt;code&gt;C:\Program Files\LLVM&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;C:\Program Files\LLVM&lt;/code&gt; LLVMがインストールされているWindowsシステムの場合：</target>
        </trans-unit>
        <trans-unit id="aa27746d74f17d76cf69db42d49e7edcd107a3bc" translate="yes" xml:space="preserve">
          <source>On a device there can be many types of sensors. Not all of the types that the Qt Sensors API supports may be available. There may also be types available that are not defined in the Qt Sensors API. The types of sensors available on a device is found using the &lt;a href=&quot;qsensor#sensorTypes&quot;&gt;QSensor::sensorTypes&lt;/a&gt;() function.</source>
          <target state="translated">デバイスには、さまざまなタイプのセンサーが存在します。QtセンサーAPIがサポートするすべてのタイプが使用できるとは限りません。QtセンサーAPIで定義されていないタイプも利用できる場合があります。デバイスで使用可能なセンサーのタイプは、&lt;a href=&quot;qsensor#sensorTypes&quot;&gt;QSensor :: sensorTypes&lt;/a&gt;（）関数を使用して検出されます。</target>
        </trans-unit>
        <trans-unit id="340cb1db0d82a6cc7816d765de5e6299d3925a35" translate="yes" xml:space="preserve">
          <source>On a graphics tablet, each type of stylus or other tool often has a unique ID or serial number, which can be useful to respond in different ways to different tools.</source>
          <target state="translated">グラフィックタブレットでは、スタイラスなどのツールの種類ごとに固有のIDやシリアルナンバーがついていることが多く、ツールごとに異なる対応をするのに便利です。</target>
        </trans-unit>
        <trans-unit id="a5a208e157e201403e7f8007e1aae656a1c9dcbe" translate="yes" xml:space="preserve">
          <source>On a mobile device it can be used to easily choose between front-facing and back-facing cameras. If this property is set to &lt;code&gt;Camera.UnspecifiedPosition&lt;/code&gt;, the system's default camera will be used.</source>
          <target state="translated">モバイルデバイスでは、これを使用して、正面カメラと背面カメラの間で簡単に選択できます。このプロパティが &lt;code&gt;Camera.UnspecifiedPosition&lt;/code&gt; に設定されている場合、システムのデフォルトカメラが使用されます。</target>
        </trans-unit>
        <trans-unit id="491d790280531d0f6862a8c9d7407d4ffcb6efd3" translate="yes" xml:space="preserve">
          <source>On a mobile device, this property can be used to easily choose between front-facing and back-facing cameras. If this property is set to &lt;code&gt;Camera.UnspecifiedPosition&lt;/code&gt;, the system's default camera is used.</source>
          <target state="translated">モバイルデバイスでは、このプロパティを使用して、前面カメラと背面カメラを簡単に選択できます。このプロパティが &lt;code&gt;Camera.UnspecifiedPosition&lt;/code&gt; に設定されている場合、システムのデフォルトのカメラが使用されます。</target>
        </trans-unit>
        <trans-unit id="ca20d418a110fc0695735cdb329e225f1c92da2e" translate="yes" xml:space="preserve">
          <source>On a typical Unix system, this will be /usr/share/mime/packages/, but it is also possible to extend the list of directories by setting the environment variable &lt;code&gt;XDG_DATA_DIRS&lt;/code&gt;. For instance adding /opt/myapp/share to &lt;code&gt;XDG_DATA_DIRS&lt;/code&gt; will result in /opt/myapp/share/mime/packages/ being searched for MIME definitions.</source>
          <target state="translated">典型的なUnixシステムでは、これは/ usr / share / mime / packages /ですが、環境変数 &lt;code&gt;XDG_DATA_DIRS&lt;/code&gt; を設定することにより、ディレクトリのリストを拡張することも可能です。たとえば、/ opt / myapp / shareを &lt;code&gt;XDG_DATA_DIRS&lt;/code&gt; に追加すると、/ opt / myapp / share / mime / packages /でMIME定義が検索されます。</target>
        </trans-unit>
        <trans-unit id="a045d83adbceaaf476607421f1d3a7548e3674dc" translate="yes" xml:space="preserve">
          <source>On accepting one gesture Qt can automatically cancel other gestures that belong to other targets. The policy is normally set to not cancel any other gestures and can be set to cancel all active gestures in the context. For example for all child widgets.</source>
          <target state="translated">あるジェスチャを受け入れると、Qt は他のターゲットに属する他のジェスチャを自動的にキャンセルすることができます。ポリシーは通常、他のジェスチャーをキャンセルしないように設定されていますが、コンテキスト内のすべてのアクティブなジェスチャーをキャンセルするように設定することもできます。例えば、すべての子ウィジェットに対して</target>
        </trans-unit>
        <trans-unit id="3d5d4aac9f5bb2f56e17586b4f740822cb3feebc" translate="yes" xml:space="preserve">
          <source>On accepting this gesture all gestures that are active in the context (respecting the &lt;a href=&quot;qt#GestureFlag-enum&quot;&gt;Qt::GestureFlag&lt;/a&gt; that were specified when subscribed to the gesture) will be cancelled.</source>
          <target state="translated">このジェスチャーを受け入れると、コンテキストでアクティブなすべてのジェスチャー（ジェスチャーにサブスクライブしたときに指定された&lt;a href=&quot;qt#GestureFlag-enum&quot;&gt;Qt :: GestureFlag&lt;/a&gt;を尊重する）がキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="b421fa6b19590a40b1da7065155d72721b081222" translate="yes" xml:space="preserve">
          <source>On accepting this gesture no other gestures will be affected.</source>
          <target state="translated">このジェスチャーを受け入れると、他のジェスチャーは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="2dae3f602210c8a1c83d3cfe0e15ba0c18cb1abd" translate="yes" xml:space="preserve">
          <source>On all other UNIX-like operating systems, the type is a file descriptor representing a listening socket.</source>
          <target state="translated">他のすべてのUNIX系OSでは、この型はリスニングソケットを表すファイルディスクリプタである。</target>
        </trans-unit>
        <trans-unit id="a3e3bd97df1ff42c4cc75d81c6f780421ba4b461" translate="yes" xml:space="preserve">
          <source>On all other UNIX-like operating systems, the type is a file descriptor representing a socket.</source>
          <target state="translated">他のすべてのUNIX系OSでは、ソケットを表すファイル記述子がtypeとなります。</target>
        </trans-unit>
        <trans-unit id="3015490dacdd20b476d47e7ff4c0f6c454b09ba0" translate="yes" xml:space="preserve">
          <source>On all platforms the depth of the primary screen will be returned.</source>
          <target state="translated">すべてのプラットフォームで、主画面の奥行きが返されます。</target>
        </trans-unit>
        <trans-unit id="082bb82a57d92617162ab4a21855edeecb241b8d" translate="yes" xml:space="preserve">
          <source>On all platforms, the following tools are required:</source>
          <target state="translated">すべてのプラットフォームでは、以下のツールが必要です。</target>
        </trans-unit>
        <trans-unit id="7cb19b7a63de8255c0da90508c370aab063f74ef" translate="yes" xml:space="preserve">
          <source>On all platforms, the interval for Qt::VeryCoarseTimer is rounded to the nearest full second (e.g. an interval of 23500ms will be rounded to 24000ms, and 20300ms to 20000ms).</source>
          <target state="translated">すべてのプラットフォームで、Qt::VeryCoarseTimer の間隔は、最も近い 1 秒単位に丸められます(例えば、23500ms の間隔は 24000ms に丸められ、20300ms は 20000ms に丸められます)。</target>
        </trans-unit>
        <trans-unit id="45fdfa68c255f9c04c3bf620adbf177e0249cf92" translate="yes" xml:space="preserve">
          <source>On and Off states of a Switch.</source>
          <target state="translated">スイッチのオンとオフの状態。</target>
        </trans-unit>
        <trans-unit id="8b8ba8893e72c59a415a54b794c557d21b211bf7" translate="yes" xml:space="preserve">
          <source>On any platform other than Windows, this function returns a new UUID with variant &lt;a href=&quot;quuid#Variant-enum&quot;&gt;QUuid::DCE&lt;/a&gt; and version &lt;a href=&quot;quuid#Version-enum&quot;&gt;QUuid::Random&lt;/a&gt;. On Windows, a GUID is generated using the Windows API and will be of the type that the API decides to create.</source>
          <target state="translated">Windows以外のプラットフォームでは、この関数はバリアント&lt;a href=&quot;quuid#Variant-enum&quot;&gt;QUuid :: DCE&lt;/a&gt;とバージョン&lt;a href=&quot;quuid#Version-enum&quot;&gt;QUuid :: Randomを&lt;/a&gt;持つ新しいUUIDを返します。Windowsでは、GUIDはWindows APIを使用して生成され、APIが作成することを決定したタイプになります。</target>
        </trans-unit>
        <trans-unit id="70aae88ca52c27299c6a2609cdb44d734f570ae4" translate="yes" xml:space="preserve">
          <source>On application start-up, the default font depends on the window system. It can vary depending on both the window system version and the locale. This function lets you override the default font; but overriding may be a bad idea because, for example, some locales need extra large fonts to support their special characters.</source>
          <target state="translated">アプリケーションの起動時に、デフォルトのフォントはウィンドウシステムに依存します。デフォルトフォントは、ウィンドウシステムのバージョンとロケールの両方に依存します。この関数は、デフォルトフォントを上書きします。 しかし、ロケールによっては特殊文字をサポートするために特大のフォントを必要とする場合があるので、 上書きするのはよくありません。</target>
        </trans-unit>
        <trans-unit id="92d2687521999a064a90d13dfba6f9269e095356" translate="yes" xml:space="preserve">
          <source>On application startup, &lt;code&gt;EGLFS&lt;/code&gt; and &lt;code&gt;LinuxFB&lt;/code&gt; attempt to disable the terminal keyboard by setting the tty's keyboard mode to &lt;code&gt;K_OFF&lt;/code&gt;. This prevents keystrokes from being sent to the terminal. If the standard behavior is required, set the &lt;code&gt;QT_QPA_ENABLE_TERMINAL_KEYBOARD&lt;/code&gt; environment variable to &lt;code&gt;1&lt;/code&gt;. Note that this works only when the application is launched from a remote console, via &lt;code&gt;ssh&lt;/code&gt; for example, and the terminal keyboard input remains enabled.</source>
          <target state="translated">アプリケーションの起動時に、 &lt;code&gt;EGLFS&lt;/code&gt; と &lt;code&gt;LinuxFB&lt;/code&gt; は、ttyのキーボードモードを &lt;code&gt;K_OFF&lt;/code&gt; に設定して、ターミナルキーボードを無効にしようとします。これにより、キーストロークが端末に送信されるのを防ぎます。標準の動作が必要な場合は、 &lt;code&gt;QT_QPA_ENABLE_TERMINAL_KEYBOARD&lt;/code&gt; 環境変数を &lt;code&gt;1&lt;/code&gt; に設定します。これは、アプリケーションがリモートコンソールから（たとえば &lt;code&gt;ssh&lt;/code&gt; を介して）起動され、ターミナルのキーボード入力が有効なままである場合にのみ機能することに注意してください。</target>
        </trans-unit>
        <trans-unit id="0568eb2583df7e6d21c288f87183e801bfabfbe9" translate="yes" xml:space="preserve">
          <source>On certain platforms, a framebuffer other than 0 might be the default frame buffer depending on the current surface. Instead of calling glBindFramebuffer(0), it is recommended that you use glBindFramebuffer(ctx-&amp;gt;&lt;a href=&quot;qopenglcontext#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;()), to ensure that your application is portable between different platforms. However, if you use &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html#glBindFramebuffer&quot;&gt;QOpenGLFunctions::glBindFramebuffer&lt;/a&gt;(), this is done automatically for you.</source>
          <target state="translated">特定のプラットフォームでは、現在のサーフェスによっては、0以外のフレームバッファーがデフォルトのフレームバッファーになる場合があります。 glBindFramebuffer（0）を呼び出す代わりに、glBindFramebuffer（ctx-&amp;gt; &lt;a href=&quot;qopenglcontext#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;（））を使用して、異なるプラットフォーム間でアプリケーションを確実に移植できるようにすることをお勧めします。ただし、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html#glBindFramebuffer&quot;&gt;QOpenGLFunctions :: glBindFramebuffer&lt;/a&gt;（）を使用する場合、これは自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="c9146a892e68e606992b3008c3ea1ef7ac59ed53" translate="yes" xml:space="preserve">
          <source>On certain platforms, a framebuffer other than 0 might be the default frame buffer depending on the current surface. Instead of calling glBindFramebuffer(0), it is recommended that you use glBindFramebuffer(ctx-&amp;gt;&lt;a href=&quot;qopenglcontext#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;()), to ensure that your application is portable between different platforms. However, if you use &lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html#glBindFramebuffer&quot;&gt;QOpenGLFunctions::glBindFramebuffer&lt;/a&gt;(), this is done automatically for you.</source>
          <target state="translated">特定のプラットフォームでは、現在のサーフェスによっては、0以外のフレームバッファーがデフォルトのフレームバッファーになる場合があります。glBindFramebuffer（0）を呼び出す代わりに、glBindFramebuffer（ctx-&amp;gt; &lt;a href=&quot;qopenglcontext#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;（））を使用して、アプリケーションが異なるプラットフォーム間で移植可能であることを確認することをお勧めします。ただし、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html#glBindFramebuffer&quot;&gt;QOpenGLFunctions :: glBindFramebuffer&lt;/a&gt;（）を使用する場合、これは自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="1cfe0d4026de3d522cc9722da7e09768c50faa10" translate="yes" xml:space="preserve">
          <source>On certain platforms, a framebuffer other than 0 might be the default frame buffer depending on the current surface. Instead of calling glBindFramebuffer(0), it is recommended that you use glBindFramebuffer(ctx-&amp;gt;&lt;a href=&quot;qopenglcontext#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;()), to ensure that your application is portable between different platforms. However, if you use &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions.html#glBindFramebuffer&quot;&gt;QOpenGLFunctions::glBindFramebuffer&lt;/a&gt;(), this is done automatically for you.</source>
          <target state="translated">特定のプラットフォームでは、現在のサーフェスによっては、0以外のフレームバッファーがデフォルトのフレームバッファーになる場合があります。glBindFramebuffer（0）を呼び出す代わりに、glBindFramebuffer（ctx-&amp;gt; &lt;a href=&quot;qopenglcontext#defaultFramebufferObject&quot;&gt;defaultFramebufferObject&lt;/a&gt;（））を使用して、アプリケーションが異なるプラットフォーム間で移植可能であることを確認することをお勧めします。ただし、&lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions.html#glBindFramebuffer&quot;&gt;QOpenGLFunctions :: glBindFramebuffer&lt;/a&gt;（）を使用する場合、これは自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="6156b0e0e39a185887766587b4acdb86aac5fbc4" translate="yes" xml:space="preserve">
          <source>On certain widgets, using '&amp;amp;' in front of a character will automatically create a mnemonic (a shortcut) for that character, e.g. &quot;E&amp;amp;xit&quot; will create the shortcut &lt;b&gt;Alt+X&lt;/b&gt; (use '&amp;amp;&amp;amp;' to display an actual ampersand). The widget might consume and perform an action on a given shortcut. On X11 the ampersand will not be shown and the character will be underlined. On Windows, shortcuts are normally not displayed until the user presses the &lt;b&gt;Alt&lt;/b&gt; key, but this is a setting the user can change. On Mac, shortcuts are disabled by default. Call &lt;a href=&quot;qkeysequence#qt_set_sequence_auto_mnemonic&quot;&gt;qt_set_sequence_auto_mnemonic&lt;/a&gt;() to enable them. However, because mnemonic shortcuts do not fit in with Aqua's guidelines, Qt will not show the shortcut character underlined.</source>
          <target state="translated">一部のウィジェットでは、文字の前に「＆」を使用すると、その文字のニーモニック（ショートカット）が自動的に作成されます。たとえば、「E＆xit」は、ショートカット&lt;b&gt;Alt + X&lt;/b&gt;を作成します（「&amp;amp;&amp;amp;」を使用して実際のアンパサンドを表示します）。ウィジェットは、指定されたショートカットを使用してアクションを実行する場合があります。 X11では、アンパサンドは表示されず、文字に下線が引かれます。 Windowsでは、ショートカットは通常、ユーザーが&lt;b&gt;Alt&lt;/b&gt;キーを押すまで表示されませんが、これはユーザーが変更できる設定です。 Macでは、ショートカットはデフォルトで無効になっています。これらを有効にするには、&lt;a href=&quot;qkeysequence#qt_set_sequence_auto_mnemonic&quot;&gt;qt_set_sequence_auto_mnemonic&lt;/a&gt;（）を呼び出します。ただし、ニーモニックショートカットはAquaのガイドラインに適合しないため、Qtはショートカット文字に下線を表示しません。</target>
        </trans-unit>
        <trans-unit id="3eb68cd74bebcf6de6cd1cde5ba9951e6cfab0cd" translate="yes" xml:space="preserve">
          <source>On desktop Windows, the default value is the value of the environment variable &lt;code&gt;WindowsSDKVersion&lt;/code&gt;.</source>
          <target state="translated">デスクトップWindowsでは、デフォルト値は環境変数 &lt;code&gt;WindowsSDKVersion&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="cbcfc50480ff53139c39f8329ec33e7886b52267" translate="yes" xml:space="preserve">
          <source>On desktop platforms, it is common for modal popups to be closed only when the escape key is pressed. To achieve this behavior, set &lt;a href=&quot;qml-qtquick-controls2-popup#closePolicy-prop&quot;&gt;closePolicy&lt;/a&gt; to &lt;code&gt;Popup.CloseOnEscape&lt;/code&gt;. By default, &lt;code&gt;closePolicy&lt;/code&gt; is set to &lt;code&gt;Popup.CloseOnEscape | Popup.CloseOnPressOutside&lt;/code&gt;, which means that clicking outside of a modal popup will close it.</source>
          <target state="translated">デスクトッププラットフォームでは、エスケープキーが押されたときにのみモーダルポップアップが閉じられるのが一般的です。この動作を実現するには、&lt;a href=&quot;qml-qtquick-controls2-popup#closePolicy-prop&quot;&gt;closePolicy&lt;/a&gt;を &lt;code&gt;Popup.CloseOnEscape&lt;/code&gt; に設定します。デフォルトでは、 &lt;code&gt;closePolicy&lt;/code&gt; は &lt;code&gt;Popup.CloseOnEscape | Popup.CloseOnPressOutside&lt;/code&gt; 設定されています。Popup.CloseOnPressOutside。つまり、モーダルポップアップの外側をクリックすると、ポップアップが閉じます。</target>
        </trans-unit>
        <trans-unit id="c915f9e77e2dea119e73f345df9b72d3f2df7349" translate="yes" xml:space="preserve">
          <source>On embedded systems, where the hardware has limited resources, this approach can be inefficient. Qt Quick Controls 2 was designed to solve this problem, using &lt;a href=&quot;https://blog.qt.io/blog/2015/03/31/qt-quick-controls-for-embedded/&quot;&gt;benchmarks&lt;/a&gt; to guide the development.</source>
          <target state="translated">ハードウェアのリソースが限られている組み込みシステムでは、このアプローチは非効率的です。Qt Quick Controls 2は、&lt;a href=&quot;https://blog.qt.io/blog/2015/03/31/qt-quick-controls-for-embedded/&quot;&gt;ベンチマーク&lt;/a&gt;を使用して開発をガイドし、この問題を解決するように設計されました。</target>
        </trans-unit>
        <trans-unit id="33aeee0ea96e0d18986de40ff4bd90a3a293c350" translate="yes" xml:space="preserve">
          <source>On embedded systems, where the hardware has limited resources, this approach can be inefficient. Qt Quick Controls was designed to solve this problem, using &lt;a href=&quot;https://blog.qt.io/blog/2015/03/31/qt-quick-controls-for-embedded/&quot;&gt;benchmarks&lt;/a&gt; to guide the development.</source>
          <target state="translated">ハードウェアのリソースが限られている組み込みシステムでは、このアプローチは非効率的です。Qt Quick Controlsは、&lt;a href=&quot;https://blog.qt.io/blog/2015/03/31/qt-quick-controls-for-embedded/&quot;&gt;ベンチマーク&lt;/a&gt;を使用して開発をガイドし、この問題を解決するように設計されました。</target>
        </trans-unit>
        <trans-unit id="ce146db8bcf0076c6e6ab523d6cb838851bd351f" translate="yes" xml:space="preserve">
          <source>On failure and if non-null, the</source>
          <target state="translated">失敗した場合、そして非 null であれば</target>
        </trans-unit>
        <trans-unit id="05eb7270f90398951853ca19b852813c90eb6fdd" translate="yes" xml:space="preserve">
          <source>On failure, returns a &lt;a href=&quot;qnetworkdatagram&quot;&gt;QNetworkDatagram&lt;/a&gt; that reports &lt;a href=&quot;qnetworkdatagram#isValid&quot;&gt;not valid&lt;/a&gt;.</source>
          <target state="translated">失敗すると、&lt;a href=&quot;qnetworkdatagram#isValid&quot;&gt;無効&lt;/a&gt;を報告する&lt;a href=&quot;qnetworkdatagram&quot;&gt;QNetworkDatagram&lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="cffad191a057506e0a048b861e4057f9315bad97" translate="yes" xml:space="preserve">
          <source>On hardware that supports it, this class lets you adjust the focus or zoom (both optical and digital). This also includes things like &quot;Macro&quot; mode for close up work (e.g. reading barcodes, or recognising letters), or &quot;touch to focus&quot; - indicating an interesting area of the viewfinder for the hardware to attempt to focus on.</source>
          <target state="translated">サポートされているハードウェアでは、このクラスでフォーカスやズーム(光学式とデジタル式の両方)を調整することができます。これには、クローズアップ作業のための「マクロ」モード(バーコードの読み取りや文字の認識など)や、「タッチ・トゥ・フォーカス」(ファインダーの興味深い領域をハードウェアがフォーカスしようとすることを示す)なども含まれています。</target>
        </trans-unit>
        <trans-unit id="8363885fcb9687f6ab4a2f24d0dcc370caef0bdb" translate="yes" xml:space="preserve">
          <source>On iOS and Windows, this class cannot be used because the platform does not expose any data or API which may provide information on the local Bluetooth device.</source>
          <target state="translated">iOSやWindowsでは、プラットフォームがローカルのBluetoothデバイスの情報を提供する可能性のあるデータやAPIを公開していないため、このクラスを使用することはできません。</target>
        </trans-unit>
        <trans-unit id="a56aadea1cc7d6d509c113bc4866c5274d8796fb" translate="yes" xml:space="preserve">
          <source>On iOS, starting from version 8, Core Location framework requires additional entries in the application's Info.plist with keys NSLocationAlwaysUsageDescription or NSLocationWhenInUseUsageDescription and a string to be displayed in the authorization prompt. The key NSLocationWhenInUseUsageDescription is used when requesting permission to use location services while the app is in the foreground. The key NSLocationAlwaysUsageDescription is used when requesting permission to use location services whenever the app is running (both the foreground and the background). If both entries are defined, NSLocationWhenInUseUsageDescription has a priority in the foreground mode.</source>
          <target state="translated">iOS では、バージョン 8 以降、Core Location フレームワークでは、アプリケーションの Info.plist に、キー NSLocationAlwaysUsageDescription または NSLocationWhenInUseUsageDescription と、認証プロンプトに表示される文字列を追加する必要があります。キー NSLocationWhenInUseUsageDescription は、アプリがフォアグラウンドにある間に位置情報サービスを使用する許可を要求するときに使用されます。キー NSLocationAlwaysUsageDescription は、アプリの実行中(フォアグラウンドとバックグラウンドの両方)に位置情報サービスの使用許可を要求するときに使用されます。両方のエントリが定義されている場合、NSLocationWhenInUseUsageDescriptionはフォアグラウンドモードで優先されます。</target>
        </trans-unit>
        <trans-unit id="7ec73f72e47f18ae88197f2e4f20a3d1a36d1ce2" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to &lt;a href=&quot;qbluetoothserver&quot;&gt;QBluetoothServer&lt;/a&gt; related features.</source>
          <target state="translated">iOSでは、&lt;a href=&quot;qbluetoothserver&quot;&gt;QBluetoothServer&lt;/a&gt;関連の機能へのアクセスを許可する可能性のあるAPIがプラットフォームで公開されていないため、このクラスは使用できません。</target>
        </trans-unit>
        <trans-unit id="339598eed30335c3b1dba3c33ce2e9524cb4dfb3" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to &lt;a href=&quot;qbluetoothservicediscoveryagent&quot;&gt;QBluetoothServiceDiscoveryAgent&lt;/a&gt; related features.</source>
          <target state="translated">iOSでは、&lt;a href=&quot;qbluetoothservicediscoveryagent&quot;&gt;QBluetoothServiceDiscoveryAgent&lt;/a&gt;関連の機能へのアクセスを許可する可能性のあるAPIがプラットフォームで公開されていないため、このクラスは使用できません。</target>
        </trans-unit>
        <trans-unit id="d1eaa32fa95be2fefceece0a927dee8f9ec94159" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; related features.</source>
          <target state="translated">iOSでは、&lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt;関連機能へのアクセスを許可する可能性のあるAPIがプラットフォームで公開されていないため、このクラスは使用できません。</target>
        </trans-unit>
        <trans-unit id="9faf3405ced15a18dfd9b103a487f9e78fd57842" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; related features.</source>
          <target state="translated">iOSでは、&lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt;関連の機能へのアクセスを許可する可能性のあるAPIがプラットフォームで公開されていないため、このクラスは使用できません。</target>
        </trans-unit>
        <trans-unit id="59798b824ae8d6dbb35d12ef5e1879ce2b0c0cc2" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to QBluetoothServer related features.</source>
          <target state="translated">iOSでは、プラットフォームがQBluetoothServer関連機能へのアクセスを許可する可能性のあるAPIを公開していないため、このクラスは使用できません。</target>
        </trans-unit>
        <trans-unit id="1c8f1150b23d26c2ae6a06ccc4d1ec7d1f7e0f49" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to QBluetoothServiceDiscoveryAgent related features.</source>
          <target state="translated">iOSでは、プラットフォームがQBluetoothServiceDiscoveryAgent関連機能へのアクセスを許可するAPIを公開していないため、このクラスは使用できません。</target>
        </trans-unit>
        <trans-unit id="6fe6ab2479d83c839e03d6132ddf945623a2fbbc" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to QBluetoothServiceInfo related features.</source>
          <target state="translated">iOS では、プラットフォームが QBluetoothServiceInfo 関連機能へのアクセスを許可する可能性のある API を公開していないため、このクラスは使用できません。</target>
        </trans-unit>
        <trans-unit id="730877eabbbb911a3cf9a5f5ce25a71c3bc0e03f" translate="yes" xml:space="preserve">
          <source>On iOS, this class cannot be used because the platform does not expose an API which may permit access to QBluetoothSocket related features.</source>
          <target state="translated">iOSでは、プラットフォームがQBluetoothSocket関連機能へのアクセスを許可する可能性のあるAPIを公開していないため、このクラスは使用できません。</target>
        </trans-unit>
        <trans-unit id="93397ef8a3c751fea0b8cb626257ac44c252230a" translate="yes" xml:space="preserve">
          <source>On low-end hardware blending can also be quite expensive so for an image or rounded rectangle that covers most of the screen, the amount of blending needed for the interior of these primitives can result in significant performance loss as the entire primitive must be blended.</source>
          <target state="translated">ローエンドのハードウェアでは、画像や丸みを帯びた四角形が画面の大部分を覆っている場合、これらのプリミティブの内部に必要なブレンドの量は、プリミティブ全体をブレンドする必要があるため、パフォーマンスが大幅に低下する可能性があります。</target>
        </trans-unit>
        <trans-unit id="fcbcc8f437fddaab4caf419554575d776e143eb9" translate="yes" xml:space="preserve">
          <source>On macOS adds a fullscreen button.</source>
          <target state="translated">macOSでは、フルスクリーンボタンが追加されます。</target>
        </trans-unit>
        <trans-unit id="440ab2351667eb52cbd7f2f8b6960b091b811079" translate="yes" xml:space="preserve">
          <source>On macOS adds a tool bar button (i.e., the oblong button that is on the top right of windows that have toolbars).</source>
          <target state="translated">macOSでは、ツールバーボタン(ツールバーを持つウィンドウの右上にある長方形のボタン)が追加されます。</target>
        </trans-unit>
        <trans-unit id="bca992f374634884a9a791ea7cb95391cd151ef8" translate="yes" xml:space="preserve">
          <source>On macOS and OpenGL, the threaded render loop is not supported when building with XCode 10 (10.14 SDK) or later, since this opts in to layer-backed views on macOS 10.14. You can build with Xcode 9 (10.13 SDK) to opt out of layer-backing, in which case the threaded render loop is available and used by default. There is no such restriction with Metal.</source>
          <target state="translated">macOSおよびOpenGLでは、XCode 10 (10.14 SDK)以降でビルドすると、macOS 10.14ではレイヤーバックされたビューが選択されるため、スレッドレンダリングループはサポートされていません。Xcode 9 (10.13 SDK)を使用してビルドしてレイヤーバックを無効にすることもできますが、その場合、スレッドレンダリングループはデフォルトで利用可能で、使用されます。Metalではこのような制限はありません。</target>
        </trans-unit>
        <trans-unit id="7498b95352ca7a31a6760ccfe0fb7b77ca18f27e" translate="yes" xml:space="preserve">
          <source>On macOS and iOS this returns the proper localized name for a bundle if the path &lt;a href=&quot;qfileinfo#isBundle&quot;&gt;isBundle&lt;/a&gt;(). On all other platforms an empty &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; is returned.</source>
          <target state="translated">macOSおよびiOSでは、パスが&lt;a href=&quot;qfileinfo#isBundle&quot;&gt;isBundle&lt;/a&gt;（）の場合、これはバンドルの適切なローカライズされた名前を返します。他のすべてのプラットフォームでは、空の&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;が返されます。</target>
        </trans-unit>
        <trans-unit id="ef4d46063b6be6c310ddd36a861cab01a2bf2704" translate="yes" xml:space="preserve">
          <source>On macOS and iOS this will point to the directory actually containing the executable, which may be inside an application bundle (if the application is bundled).</source>
          <target state="translated">macOSとiOSでは、これは実際に実行ファイルを含むディレクトリを指しますが、これはアプリケーションバンドルの中にあるかもしれません(アプリケーションがバンドルされている場合)。</target>
        </trans-unit>
        <trans-unit id="62b17df84aa1fb46462200b50afdb9b1cf5fd2f3" translate="yes" xml:space="preserve">
          <source>On macOS and iOS, &lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt;() will return some extra keys for global settings that apply to all applications. These keys can be read using &lt;a href=&quot;qsettings#value&quot;&gt;value&lt;/a&gt;() but cannot be changed, only shadowed. Calling &lt;a href=&quot;qsettings#setFallbacksEnabled&quot;&gt;setFallbacksEnabled&lt;/a&gt;(false) will hide these global settings.</source>
          <target state="translated">macOSおよびiOSでは、&lt;a href=&quot;qsettings#allKeys&quot;&gt;allKeys&lt;/a&gt;（）は、すべてのアプリケーションに適用されるグローバル設定用の追加のキーをいくつか返します。これらのキーは&lt;a href=&quot;qsettings#value&quot;&gt;値&lt;/a&gt;（）を使用して読み取ることができますが、変更することはできず、シャドウされるだけです。&lt;a href=&quot;qsettings#setFallbacksEnabled&quot;&gt;setFallbacksEnabled&lt;/a&gt;（false）を呼び出すと、これらのグローバル設定が非表示になります。</target>
        </trans-unit>
        <trans-unit id="26497e54bcb16136f9810f304cfbbc4ab21300b5" translate="yes" xml:space="preserve">
          <source>On macOS and iOS, if the file format is &lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormat&lt;/a&gt;, these files are used by default:</source>
          <target state="translated">macOSおよびiOSでは、ファイル形式が&lt;a href=&quot;qsettings#Format-enum&quot;&gt;NativeFormatの&lt;/a&gt;場合、次のファイルがデフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="e3701f1211a6a7633a97ecf459fbc98dbb06b4a2" translate="yes" xml:space="preserve">
          <source>On macOS and iOS, the CFPreferences API used by QSettings expects Internet domain names rather than organization names. To provide a uniform API, QSettings derives a fake domain name from the organization name (unless the organization name already is a domain name, e.g. OpenOffice.org). The algorithm appends &quot;.com&quot; to the company name and replaces spaces and other illegal characters with hyphens. If you want to specify a different domain name, call &lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;QCoreApplication::setOrganizationDomain&lt;/a&gt;(), &lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;QCoreApplication::setOrganizationName&lt;/a&gt;(), and &lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;QCoreApplication::setApplicationName&lt;/a&gt;() in your &lt;code&gt;main()&lt;/code&gt; function and then use the default QSettings constructor. Another solution is to use preprocessor directives, for example:</source>
          <target state="translated">macOSおよびiOSでは、QSettingsによって使用されるCFPreferences APIは、組織名ではなくインターネットドメイン名を想定しています。統一されたAPIを提供するために、QSettingsは組織名から偽のドメイン名を取得します（組織名がすでにドメイン名（OpenOffice.orgなど）である場合を除く）。このアルゴリズムは、会社名に「.com」を追加し、スペースやその他の不正な文字をハイフンに置き換えます。別のドメイン名を指定する場合は、 &lt;code&gt;main()&lt;/code&gt; 関数で&lt;a href=&quot;qcoreapplication#organizationDomain-prop&quot;&gt;QCoreApplication :: setOrganizationDomain&lt;/a&gt;（）、&lt;a href=&quot;qcoreapplication#organizationName-prop&quot;&gt;QCoreApplication :: setOrganizationName&lt;/a&gt;（）、および&lt;a href=&quot;qcoreapplication#applicationName-prop&quot;&gt;QCoreApplication :: setApplicationName&lt;/a&gt;（）を呼び出してから、デフォルトのQSettingsコンストラクターを使用します。別の解決策は、次のようなプリプロセッサディレクティブを使用することです。</target>
        </trans-unit>
        <trans-unit id="5cbf60e7cb3a071ef2a4c2cb97a9e22ae75321c6" translate="yes" xml:space="preserve">
          <source>On macOS and iOS, you can access property list &lt;code&gt;.plist&lt;/code&gt; files by passing &lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings::NativeFormat&lt;/a&gt; as second argument. For example:</source>
          <target state="translated">macOSおよびiOSでは、2番目の引数として&lt;a href=&quot;qsettings#Format-enum&quot;&gt;QSettings :: NativeFormat&lt;/a&gt;を渡すことにより、プロパティリストの &lt;code&gt;.plist&lt;/code&gt; ファイルにアクセスできます。例えば：</target>
        </trans-unit>
        <trans-unit id="823a2e63d367f147b03859214c869c5aae823fff" translate="yes" xml:space="preserve">
          <source>On macOS and on certain Linux desktop environments such as Ubuntu Unity, QMenuBar is a wrapper for using the system-wide menu bar. If you have multiple menu bars in one dialog the outermost menu bar (normally inside a widget with widget flag &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Window&lt;/a&gt;) will be used for the system-wide menu bar.</source>
          <target state="translated">macOSおよびUbuntuUnityなどの特定のLinuxデスクトップ環境では、QMenuBarはシステム全体のメニューバーを使用するためのラッパーです。1つのダイアログに複数のメニューバーがある場合、最も外側のメニューバー（通常はウィジェットフラグ&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Windowの&lt;/a&gt;あるウィジェット内）がシステム全体のメニューバーに使用されます。</target>
        </trans-unit>
        <trans-unit id="98f769c7de277cebcfd228fff50e2e6262f05264" translate="yes" xml:space="preserve">
          <source>On macOS and with Qt version 4.3 or higher, clipboard changes made by other applications will only be detected when the application is activated.</source>
          <target state="translated">macOSおよびQtバージョン4.3以上では、他のアプリケーションによるクリップボードの変更は、アプリケーションがアクティブになっているときにのみ検出されます。</target>
        </trans-unit>
        <trans-unit id="70aa0c8eb12a9169d3522c43975ea3b3beeaa9ae" translate="yes" xml:space="preserve">
          <source>On macOS by default, Qt swaps the Control and Meta (Command) keys (i.e., whenever Control is pressed, Qt sends Meta, and whenever Meta is pressed Control is sent). When this attribute is true, Qt will not do the flip. &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence::StandardKey&lt;/a&gt; will also flip accordingly (i.e., &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence::Copy&lt;/a&gt; will be Command+C on the keyboard regardless of the value set, though what is output for &lt;a href=&quot;qkeysequence#toString&quot;&gt;QKeySequence::toString&lt;/a&gt;() will be different).</source>
          <target state="translated">macOSでは、デフォルトで、QtはControlキーとMeta（Command）キーを交換します（つまり、Controlが押されるたびに、QtはMetaを送信し、Metaが押されるたびにControlが送信されます）。この属性がtrueの場合、Qtはフリップを実行しません。&lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence :: StandardKey&lt;/a&gt;もそれに応じて反転します（つまり、&lt;a href=&quot;qkeysequence#toString&quot;&gt;QKeySequence :: toString&lt;/a&gt;（）の出力は異なりますが、設定された値に関係なく、&lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;QKeySequence :: Copy&lt;/a&gt;はキーボードのCommand + Cになります）。</target>
        </trans-unit>
        <trans-unit id="9d363e303f21137ed09aa1a90c2e5c8497ec7053" translate="yes" xml:space="preserve">
          <source>On macOS only, if there is exactly one button with the role &lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;QMessageBox::RejectRole&lt;/a&gt;, it is made the escape button.</source>
          <target state="translated">macOSの場合のみ、ロール&lt;a href=&quot;qmessagebox#ButtonRole-enum&quot;&gt;QMessageBox :: RejectRoleを&lt;/a&gt;持つボタンが1つしかない場合は、エスケープボタンになります。</target>
        </trans-unit>
        <trans-unit id="9cc5a64a41d143a71b708828f166640f298e4e58" translate="yes" xml:space="preserve">
          <source>On macOS versions 10.2 and 10.3, these files are used by default:</source>
          <target state="translated">macOSのバージョン10.2と10.3では、これらのファイルがデフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="a4b0ddc5f8caf0143fe7f1949a6c495a9ce41f03" translate="yes" xml:space="preserve">
          <source>On macOS,</source>
          <target state="translated">macOSでは。</target>
        </trans-unit>
        <trans-unit id="6b99e17b8feabbc4ed47b9d0de5cbf53dcd97c20" translate="yes" xml:space="preserve">
          <source>On macOS, data goes to &lt;code&gt;~/.qttest/Application Support&lt;/code&gt;, cache goes to &lt;code&gt;~/.qttest/Cache&lt;/code&gt;, and config goes to &lt;code&gt;~/.qttest/Preferences&lt;/code&gt;.</source>
          <target state="translated">macOSでは、データは &lt;code&gt;~/.qttest/Application Support&lt;/code&gt; 、キャッシュは &lt;code&gt;~/.qttest/Cache&lt;/code&gt; に移動し、configは &lt;code&gt;~/.qttest/Preferences&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ede5b19eb45167aba6f2eae937d4a83a99805ddf" translate="yes" xml:space="preserve">
          <source>On macOS, depending on how Qt WebEngine is configured at build time, there are two possibilities how spellchecking data is found:</source>
          <target state="translated">macOSでは、ビルド時のQt WebEngineの設定によって、スペルチェックデータがどのようにして見つかるかは2つの可能性があります。</target>
        </trans-unit>
        <trans-unit id="2f91c884323ac48e7b6f31aa34875c843a3969b0" translate="yes" xml:space="preserve">
          <source>On macOS, high-DPI support is enabled by settings in the &lt;code&gt;Info.plist&lt;/code&gt; file; so make sure these settings are present.</source>
          <target state="translated">macOSでは、 &lt;code&gt;Info.plist&lt;/code&gt; ファイルの設定によって高DPIサポートが有効になります。したがって、これらの設定が存在することを確認してください。</target>
        </trans-unit>
        <trans-unit id="6866ec1798179600ee15bdcd1a3ebbc8db99d69c" translate="yes" xml:space="preserve">
          <source>On macOS, if</source>
          <target state="translated">macOSでは</target>
        </trans-unit>
        <trans-unit id="1924443f95ec76a8193448334d16f49714084a81" translate="yes" xml:space="preserve">
          <source>On macOS, if the default &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; is set after the application instance, the application will exit with &lt;a href=&quot;qtglobal#qFatal&quot;&gt;qFatal&lt;/a&gt;(), and print a message that the default &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; should be set before the application instance.</source>
          <target state="translated">macOSでは、デフォルトの&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;がアプリケーションインスタンスの後に設定されている場合、アプリケーションは&lt;a href=&quot;qtglobal#qFatal&quot;&gt;qFatal&lt;/a&gt;（）で終了し、デフォルトの&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;をアプリケーションインスタンスの前に設定する必要があるというメッセージを出力します。</target>
        </trans-unit>
        <trans-unit id="278c39af648e85224b62270b10beb3c6de11b889" translate="yes" xml:space="preserve">
          <source>On macOS, if the modality is set to &lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qt::WindowModal&lt;/a&gt; and the message box has a parent, then the message box will be a &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt;, otherwise the message box will be a standard dialog.</source>
          <target state="translated">macOSでは、モダリティが&lt;a href=&quot;qt#WindowModality-enum&quot;&gt;Qt :: WindowModalに&lt;/a&gt;設定されていて、メッセージボックスに親がある場合、メッセージボックスは&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Sheet&lt;/a&gt;になります。それ以外の場合、メッセージボックスは標準のダイアログになります。</target>
        </trans-unit>
        <trans-unit id="61eea0801d6c0f4969a258bbecfac2958f9905ac" translate="yes" xml:space="preserve">
          <source>On macOS, if you want your message box to appear as a &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Sheet&lt;/a&gt; of its</source>
          <target state="translated">あなたがしたい場合はMacOSで、あなたのメッセージボックスが表示されるようにする&lt;a href=&quot;qt#WindowType-enum&quot;&gt;のQt ::シート&lt;/a&gt;のその</target>
        </trans-unit>
        <trans-unit id="7c32941a7cabbdb5a0698343955601248c1e3c71" translate="yes" xml:space="preserve">
          <source>On macOS, it is not possible to unpair a device. If Unpaired is requested, &lt;a href=&quot;qbluetoothlocaldevice#pairingFinished&quot;&gt;pairingFinished&lt;/a&gt;() is immediately emitted although the device remains paired. It is possible to request the pairing for a previously unpaired device. In addition &lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;AuthorizedPaired&lt;/a&gt; has the same behavior as &lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;Paired&lt;/a&gt;.</source>
          <target state="translated">macOSでは、デバイスのペアリングを解除することはできません。&lt;a href=&quot;qbluetoothlocaldevice#pairingFinished&quot;&gt;Unpaired&lt;/a&gt;が要求された場合、デバイスはペアリングされたままですが、pairingFinished（）がすぐに発行されます。以前にペアリングされていないデバイスのペアリングを要求することができます。さらに、&lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;AuthorizedPaired&lt;/a&gt;は&lt;a href=&quot;qbluetoothlocaldevice#Pairing-enum&quot;&gt;Paired&lt;/a&gt;と同じ動作をします。</target>
        </trans-unit>
        <trans-unit id="7792428425fa305646808531e587749308caf835" translate="yes" xml:space="preserve">
          <source>On macOS, permissions to access settings not belonging to the current user (i.e. &lt;a href=&quot;qsettings#Scope-enum&quot;&gt;SystemScope&lt;/a&gt;) have changed with 10.7 (Lion). Prior to that version, users having admin rights could access these. For 10.7 and 10.8 (Mountain Lion), only root can. However, 10.9 (Mavericks) changes that rule again but only for the native format (plist files).</source>
          <target state="translated">macOSでは、現在のユーザー（つまり、&lt;a href=&quot;qsettings#Scope-enum&quot;&gt;SystemScope&lt;/a&gt;）に属していない設定にアクセスするためのアクセス許可が10.7（Lion）で変更されました。そのバージョンより前は、管理者権限を持つユーザーがこれらにアクセスできました。10.7および10.8（Mountain Lion）の場合、ルートのみが可能です。ただし、10.9（Mavericks）はそのルールを再度変更しますが、ネイティブ形式（plistファイル）に対してのみです。</target>
        </trans-unit>
        <trans-unit id="4b85617303975b62b4fda0fc04063ed913dadf60" translate="yes" xml:space="preserve">
          <source>On macOS, security flags are not supported and will be ignored.</source>
          <target state="translated">macOSでは、セキュリティフラグはサポートされておらず、無視されます。</target>
        </trans-unit>
        <trans-unit id="6e4fb0779f376d9b7f13cc101dbc56945ce8a0c8" translate="yes" xml:space="preserve">
          <source>On macOS, show the tool window even when the application is not active. By default, all tool windows are hidden when the application is inactive.</source>
          <target state="translated">macOSでは、アプリケーションがアクティブでないときにもツールウィンドウを表示します。デフォルトでは、アプリケーションがアクティブでないときはすべてのツールウィンドウが非表示になっています。</target>
        </trans-unit>
        <trans-unit id="2fc773e8e5574c0b087f4006cf6520e5ea3ae6b7" translate="yes" xml:space="preserve">
          <source>On macOS, the Up/Down key bindings for Home/End are explicitly disabled. If you want such bindings (on any platform), you will need to construct them in QML.</source>
          <target state="translated">macOS では、Home/End の Up/Down キーのバインディングは明示的に無効になっています。(どのプラットフォームでも)このようなバインディングが必要な場合は、QMLで作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="3035c75001d22474cc4c391892aa6a68624f41e7" translate="yes" xml:space="preserve">
          <source>On macOS, the about box is popped up as a modeless window; on other platforms, it is currently application modal.</source>
          <target state="translated">macOSでは、aboutボックスはmodelessウィンドウとしてポップアップ表示されますが、それ以外のプラットフォームでは、現在はapplication modalとなっています。</target>
        </trans-unit>
        <trans-unit id="6ecd45d0dac95698ed49572895a4b0d52f4bf26e" translate="yes" xml:space="preserve">
          <source>On macOS, the following are required:</source>
          <target state="translated">macOSでは、以下が必要です。</target>
        </trans-unit>
        <trans-unit id="0b1d13fa7b490c6c0a0822b9a6ac39354b8a6525" translate="yes" xml:space="preserve">
          <source>On macOS, the following languages are also supported:</source>
          <target state="translated">macOSでは、以下の言語にも対応しています。</target>
        </trans-unit>
        <trans-unit id="133fca1b86b107774dcbcfcc6c24ec3c99ee26a9" translate="yes" xml:space="preserve">
          <source>On macOS, the string returned resembles the sequence that is shown in the menu bar if</source>
          <target state="translated">macOSでは、返された文字列は</target>
        </trans-unit>
        <trans-unit id="b8ab55f5144c99d488618e9a05f53c154c698f77" translate="yes" xml:space="preserve">
          <source>On macOS, there is a difference between a window and view; normally expressed as widgets in Qt. Qt makes assumptions about its parent-child hierarchy that make it complex to put an arbitrary Qt widget into a hierarchy of &quot;normal&quot; views from Apple frameworks. QMacNativeWidget bridges the gap between views and windows and makes it possible to put a hierarchy of Qt widgets into a non-Qt window or view.</source>
          <target state="translated">macOSでは、ウィンドウとビューの違いがあり、通常はQtでウィジェットとして表現されます。Qt は親子階層を前提としているため、任意の Qt ウィジェットを Apple フレームワークの「通常の」ビューの階層に入れるのが複雑になっています。QMacNativeWidget は、ビューとウィンドウの間のギャップを埋め、Qt ウィジェットの階層を Qt 以外のウィンドウやビューに配置することを可能にします。</target>
        </trans-unit>
        <trans-unit id="926491bb7182cd1e18a7e7dd02f638a6ad20ccc5" translate="yes" xml:space="preserve">
          <source>On macOS, this corresponds to the Command keys.</source>
          <target state="translated">macOSでは、コマンドキーに対応しています。</target>
        </trans-unit>
        <trans-unit id="997b0636751a770507100441ec0546ac9baa3138" translate="yes" xml:space="preserve">
          <source>On macOS, this corresponds to the Control keys. On Windows keyboards, this key is mapped to the Windows key.</source>
          <target state="translated">macOSでは、これはControlキーに対応しています。Windowsキーボードでは、このキーはWindowsキーにマッピングされています。</target>
        </trans-unit>
        <trans-unit id="c319afe08eb298a3bddc7108164e851bfabf67da" translate="yes" xml:space="preserve">
          <source>On macOS, this flag is always set to &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Secure&lt;/a&gt;.</source>
          <target state="translated">macOSでは、このフラグは常に&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth :: Secureに&lt;/a&gt;設定されます。</target>
        </trans-unit>
        <trans-unit id="400e5a23077bc9037ba3e0e7dce13ac405addf7f" translate="yes" xml:space="preserve">
          <source>On macOS, this function will ignore the Proxy Auto Configuration settings, since it cannot execute the associated ECMAScript code.</source>
          <target state="translated">macOS では、この関数は関連する ECMAScript コードを実行できないため、プロキシの自動設定を無視します。</target>
        </trans-unit>
        <trans-unit id="7d57f8b6fda83cdd1c380230b694702be6fb291b" translate="yes" xml:space="preserve">
          <source>On macOS, this function will obtain the proxy settings using the SystemConfiguration framework from Apple. It will apply the FTP, HTTP and HTTPS proxy configurations for queries that contain the protocol tag &quot;ftp&quot;, &quot;http&quot; and &quot;https&quot;, respectively. If the SOCKS proxy is enabled in that configuration, this function will use the SOCKS server for all queries. If SOCKS isn't enabled, it will use the HTTPS proxy for all TcpSocket and UrlRequest queries.</source>
          <target state="translated">macOSでは、この関数はAppleのSystemConfigurationフレームワークを使用してプロキシ設定を取得します。プロトコルタグ &quot;ftp&quot;、&quot;http&quot;、&quot;https&quot; を含むクエリに対して、それぞれ FTP、HTTP、HTTPS のプロキシ設定を適用します。その構成でSOCKSプロキシが有効になっている場合、この機能はすべてのクエリにSOCKSサーバーを使用します。SOCKSが有効になっていない場合は、TcpSocketとUrlRequestのすべてのクエリにHTTPSプロキシを使用します。</target>
        </trans-unit>
        <trans-unit id="1a8387b7bb736c1850bba3803e693bbaaa0bfe00" translate="yes" xml:space="preserve">
          <source>On macOS, this is currenly converted to a NSMenu, so the aboutToHide() signal is not emitted.</source>
          <target state="translated">macOSでは、これは現在NSMenuに変換されているので、aboutToHide()シグナルは発生しません。</target>
        </trans-unit>
        <trans-unit id="9a5716a29b03574dcbe1252ce5b07030d6c53a8f" translate="yes" xml:space="preserve">
          <source>On macOS, this value is ignored as the platform does not permit access to the security parameter of the socket. By default the platform prefers secure/encrypted connections though and therefore this function always returns &lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth::Secure&lt;/a&gt;.</source>
          <target state="translated">macOSでは、プラットフォームがソケットのセキュリティパラメータへのアクセスを許可しないため、この値は無視されます。ただし、デフォルトでは、プラットフォームは安全な/暗号化された接続を優先するため、この関数は常に&lt;a href=&quot;qbluetooth#Security-enum&quot;&gt;QBluetooth :: Secureを&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="21d4fcccb2eef200ead810289a5bf14579776bb2" translate="yes" xml:space="preserve">
          <source>On macOS, this works more at the application level and will cause the application icon to bounce in the dock.</source>
          <target state="translated">macOSでは、これがアプリケーションレベルでより機能し、アプリケーションのアイコンがドックで跳ね返るようになります。</target>
        </trans-unit>
        <trans-unit id="d9d89f596ef21e450a1b17ee5e08b21f7658d15b" translate="yes" xml:space="preserve">
          <source>On macOS, you can also use Homebrew's &lt;a href=&quot;https://formulae.brew.sh/formula/llvm&quot;&gt;llvm formula&lt;/a&gt;.</source>
          <target state="translated">macOSでは、Homebrewの&lt;a href=&quot;https://formulae.brew.sh/formula/llvm&quot;&gt;llvm式を&lt;/a&gt;使用することもできます。</target>
        </trans-unit>
        <trans-unit id="dbc9a30a4a874e65b3735c5d3cd575c785428521" translate="yes" xml:space="preserve">
          <source>On macOS/iOS/tvOS CoreBluetooth does not expose/accept hardware addresses for LE devices; instead developers are supposed to use unique 128-bit UUIDs, generated by CoreBluetooth. These UUIDS will stay constant for the same central &amp;lt;-&amp;gt; peripheral pair and we use them when connecting to a remote device. For a controller in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;CentralRole&lt;/a&gt;, this value will always be the one passed in when the controller object was created. For a controller in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;PeripheralRole&lt;/a&gt;, this value is invalid.</source>
          <target state="translated">macOS / iOS / tvOSでは、CoreBluetoothはLEデバイスのハードウェアアドレスを公開/受け入れません。代わりに、開発者はCoreBluetoothによって生成された一意の128ビットUUIDを使用することになっています。これらのUUIDは、同じ中央の&amp;lt;-&amp;gt;ペリフェラルペアに対して一定のままであり、リモートデバイスに接続するときに使用します。&lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;CentralRoleの&lt;/a&gt;コントローラーの場合、この値は常にコントローラーオブジェクトの作成時に渡された値になります。&lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;PeripheralRoleの&lt;/a&gt;コントローラーの場合、この値は無効です。</target>
        </trans-unit>
        <trans-unit id="05fa8d4a31ff2dd443da846d8cd791198ad32ce6" translate="yes" xml:space="preserve">
          <source>On macOS:</source>
          <target state="translated">macOSでは。</target>
        </trans-unit>
        <trans-unit id="111aed6ab634b5c659cced0c05d60a0030105831" translate="yes" xml:space="preserve">
          <source>On macOs, Qt will create a menu item &lt;code&gt;Quit&lt;/code&gt; if there is no menu item whose text is &quot;quit&quot; or &quot;exit&quot;. This menu item calls the &lt;code&gt;QCoreApplication::quit&lt;/code&gt; signal, not the &lt;code&gt;QQuickWindow::closing()&lt;/code&gt; signal.</source>
          <target state="translated">macOでは、テキストが「quit」または「exit」のメニュー項目がない場合、Qtはメニュー項目 &lt;code&gt;Quit&lt;/code&gt; を作成します。このメニュー項目は、 &lt;code&gt;QCoreApplication::quit&lt;/code&gt; &lt;code&gt;QQuickWindow::closing()&lt;/code&gt; シグナルではなく、QCoreApplication :: quitシグナルを呼び出します。</target>
        </trans-unit>
        <trans-unit id="8a0410214f377ebe2837d431e983e7ed11b07c0e" translate="yes" xml:space="preserve">
          <source>On many configurations, the scene graph rendering will happen on a dedicated render thread. This is done to increase parallelism of multi-core processors and make better use of stall times such as waiting for a blocking swap buffer call. This offers significant performance improvements, but imposes certain restrictions on where and when interaction with the scene graph can happen.</source>
          <target state="translated">多くの構成では、シーングラフのレンダリングは専用のレンダースレッドで行われます。これは、マルチコアプロセッサの並列性を高め、ブロッキングスワップバッファコールの待ち時間などのストール時間をうまく利用するために行われます。これによりパフォーマンスは大幅に向上しますが、シーングラフとのインタラクションがいつ、どこで行われるかには一定の制限があります。</target>
        </trans-unit>
        <trans-unit id="c4bb4017320968dc14a101cf9ab007de6abbaffa" translate="yes" xml:space="preserve">
          <source>On many platforms, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-graphics.html#qt-quick-scene-graph&quot;&gt;scene graph&lt;/a&gt; will even be rendered on a dedicated render thread while the GUI thread is preparing the next frame's state.</source>
          <target state="translated">多くのプラットフォームでは、GUIスレッドが次のフレームの状態を準備している間、&lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-graphics.html#qt-quick-scene-graph&quot;&gt;シーングラフ&lt;/a&gt;は専用のレンダリングスレッドでレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="28c4753aa92097c0e9edbff76015da06419266fc" translate="yes" xml:space="preserve">
          <source>On many platforms, the &lt;a href=&quot;https://doc.qt.io/qt-5.15/topics-graphics.html#qt-quick-scene-graph&quot;&gt;scene graph&lt;/a&gt; will even be rendered on a dedicated render thread while the GUI thread is preparing the next frame's state.</source>
          <target state="translated">多くのプラットフォームでは、GUIスレッドが次のフレームの状態を準備している間、&lt;a href=&quot;https://doc.qt.io/qt-5.15/topics-graphics.html#qt-quick-scene-graph&quot;&gt;シーングラフ&lt;/a&gt;は専用のレンダリングスレッドでレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="1f2294b173fa00f42e1dc8880ac84178d20f0a23" translate="yes" xml:space="preserve">
          <source>On mobile platforms, switches are commonly used to enable or disable features.</source>
          <target state="translated">モバイルプラットフォームでは、スイッチは一般的に機能を有効化または無効化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1a5a9de5d6cdeb88a2c4ac6389030bc54e56f99e" translate="yes" xml:space="preserve">
          <source>On models that support this, inserts</source>
          <target state="translated">対応機種では、インサート</target>
        </trans-unit>
        <trans-unit id="41592e465ed21517e25d1b60b76d4898a3a7a988" translate="yes" xml:space="preserve">
          <source>On models that support this, moves</source>
          <target state="translated">これをサポートするモデルでは、ムーブ</target>
        </trans-unit>
        <trans-unit id="ade874bfdcf68f6016f74be542e10e3dda132736" translate="yes" xml:space="preserve">
          <source>On models that support this, removes</source>
          <target state="translated">これをサポートするモデルでは</target>
        </trans-unit>
        <trans-unit id="fd0206cd94aa8cab3850091bd8cf6f5f8adff5cd" translate="yes" xml:space="preserve">
          <source>On modern Unix systems, this means &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; usually has accurate information about historical transitions (including DST, see below) whenever possible. On Windows, where the system doesn't support historical timezone data, historical accuracy is not maintained with respect to timezone transitions, notably including DST.</source>
          <target state="translated">最近のUnixシステムでは、これは&lt;a href=&quot;qdatetime&quot;&gt;QDateTimeが&lt;/a&gt;通常は可能な限り履歴遷移（DSTを含む、以下を参照）に関する正確な情報を持っていることを意味します。Windowsでは、システムがタイムゾーンの履歴データをサポートしていないため、特にDSTを含むタイムゾーンの移行に関して、履歴の正確性が維持されません。</target>
        </trans-unit>
        <trans-unit id="bfd4729f2dce093f436ccddf7409f403a119be3a" translate="yes" xml:space="preserve">
          <source>On modern Unix systems, this means QDateTime usually has accurate information about historical transitions (including DST, see below) whenever possible. On Windows, where the system doesn't support historical timezone data, historical accuracy is not maintained with respect to timezone transitions, notably including DST.</source>
          <target state="translated">最近のUnixシステムでは、これはQDateTimeが通常、可能な限り(DSTを含む)過去の遷移に関する正確な情報を持っていることを意味します。システムが歴史的なタイムゾーンデータをサポートしていないWindowsでは、特にDSTを含むタイムゾーンの遷移に関しては、歴史的な正確さは維持されません。</target>
        </trans-unit>
        <trans-unit id="c5c6c7e7a600194ac0290642a7c35ead0986ada6" translate="yes" xml:space="preserve">
          <source>On most file systems, rename() fails only if</source>
          <target state="translated">ほとんどのファイルシステムでは、 rename()が失敗するのは</target>
        </trans-unit>
        <trans-unit id="c4a5b2acc8daf9bc161e1ce2107416cbb5562ac6" translate="yes" xml:space="preserve">
          <source>On most operating systems the system path is determined by the &lt;code&gt;PATH&lt;/code&gt; environment variable. The directories where to search for the executable can be set in the paths argument. To search in both your own paths and the system paths, call findExecutable twice, once with paths set and once with paths empty. Symlinks are not resolved in order to preserve behavior for the case of executables whose behavior depends on the name they are invoked with .</source>
          <target state="translated">ほとんどのオペレーティングシステムでは、システムパスは &lt;code&gt;PATH&lt;/code&gt; 環境変数によって決定されます。実行可能ファイルを検索するディレクトリは、paths引数で設定できます。独自のパスとシステムパスの両方を検索するには、findExecutableを2回呼び出します。1回はパスを設定し、もう1回はパスを空にします。シンボリックリンクは、呼び出された名前に応じて動作する実行可能ファイルの場合の動作を維持するために解決されません。</target>
        </trans-unit>
        <trans-unit id="c4189cdb33281e6173c000846c64209d4eb96979" translate="yes" xml:space="preserve">
          <source>On most operating systems the system path is determined by the PATH environment variable.</source>
          <target state="translated">ほとんどのオペレーティングシステムでは、システムパスはPATH環境変数によって決定されます。</target>
        </trans-unit>
        <trans-unit id="9e599cf93a104519a9331e2aca4dc391624e212f" translate="yes" xml:space="preserve">
          <source>On most platforms, the rendering will occur on a &lt;a href=&quot;qtquick-visualcanvas-scenegraph#scene-graph-and-rendering&quot;&gt;dedicated thread&lt;/a&gt;. For this reason, the &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; class enforces a strict separation between the item implementation and the FBO rendering. All item logic, such as properties and UI-related helper functions needed by QML should be located in a &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; class subclass. Everything that relates to rendering must be located in the &lt;a href=&quot;qquickframebufferobject-renderer&quot;&gt;QQuickFramebufferObject::Renderer&lt;/a&gt; class.</source>
          <target state="translated">ほとんどのプラットフォームでは、レンダリングは&lt;a href=&quot;qtquick-visualcanvas-scenegraph#scene-graph-and-rendering&quot;&gt;専用スレッドで&lt;/a&gt;行われます。このため、&lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt;クラスは、アイテムの実装とFBOレンダリングを厳密に分離します。QMLに必要なプロパティやUI関連のヘルパー関数などのすべてのアイテムロジックは、&lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt;クラスサブクラスに配置する必要があります。レンダリングに関連するすべてのものは&lt;a href=&quot;qquickframebufferobject-renderer&quot;&gt;QQuickFramebufferObject :: Renderer&lt;/a&gt;クラスに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="f78d8681a24f3c55f8218f80b46395c1e46f5de2" translate="yes" xml:space="preserve">
          <source>On most platforms, the rendering will occur on a &lt;a href=&quot;qtquick-visualcanvas-scenegraph#scene-graph-and-rendering&quot;&gt;dedicated thread&lt;/a&gt;. For this reason, the QQuickFramebufferObject class enforces a strict separation between the item implementation and the FBO rendering. All item logic, such as properties and UI-related helper functions needed by QML should be located in a QQuickFramebufferObject class subclass. Everything that relates to rendering must be located in the &lt;a href=&quot;qquickframebufferobject-renderer&quot;&gt;QQuickFramebufferObject::Renderer&lt;/a&gt; class.</source>
          <target state="translated">ほとんどのプラットフォームでは、レンダリングは&lt;a href=&quot;qtquick-visualcanvas-scenegraph#scene-graph-and-rendering&quot;&gt;専用スレッドで&lt;/a&gt;行われます。このため、QQuickFramebufferObjectクラスは、アイテムの実装とFBOレンダリングを厳密に分離します。QMLに必要なプロパティやUI関連のヘルパー関数など、すべてのアイテムロジックは、QQuickFramebufferObjectクラスサブクラスに配置する必要があります。レンダリングに関連するものはすべて、&lt;a href=&quot;qquickframebufferobject-renderer&quot;&gt;QQuickFramebufferObject :: Renderer&lt;/a&gt;クラスに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="e56f7e639613b5b65503e1bb78af1b62cc5594cb" translate="yes" xml:space="preserve">
          <source>On most systems this function will return true. However, on X11 systems that do not support CUPS, this function will return false. That means the application has to handle the number of copies by printing the same document the required number of times.</source>
          <target state="translated">ほとんどのシステムでは、この関数は true を返します。しかし、CUPS をサポートしていない X11 システムでは、この関数は false を返します。つまり、アプリケーションは同じ文書を必要な回数だけ印刷することで、コピー数を処理しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8f23b1863f40dc4ba0720c4de3e06f71c2964972" translate="yes" xml:space="preserve">
          <source>On most systems, inserting a variable with no contents will have the same effect for applications as if the variable had not been set at all. However, to guarantee that there are no incompatibilities, to remove a variable, please use the &lt;a href=&quot;qprocessenvironment#remove&quot;&gt;remove&lt;/a&gt;() function.</source>
          <target state="translated">ほとんどのシステムでは、内容のない変数を挿入しても、変数がまったく設定されていない場合と同じようにアプリケーションに影響します。ただし、非互換性がないことを保証するために、変数を削除するには、&lt;a href=&quot;qprocessenvironment#remove&quot;&gt;remove&lt;/a&gt;（）関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="efac2b84fadb23f4a588caa9754c76356866e879" translate="yes" xml:space="preserve">
          <source>On non-Unix systems, &lt;a href=&quot;qdbusunixfiledescriptor&quot;&gt;QDBusUnixFileDescriptor&lt;/a&gt; will always report an invalid state and &lt;a href=&quot;qdbusunixfiledescriptor#isSupported&quot;&gt;QDBusUnixFileDescriptor::isSupported&lt;/a&gt;() will return false.</source>
          <target state="translated">非UNIXシステムでは、&lt;a href=&quot;qdbusunixfiledescriptor&quot;&gt;QDBusUnixFileDescriptor&lt;/a&gt;は常に無効な状態を報告し、&lt;a href=&quot;qdbusunixfiledescriptor#isSupported&quot;&gt;QDBusUnixFileDescriptor :: isSupported&lt;/a&gt;（）はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="7999423d46d3c58e88ef959eaff6e634a4be5b1a" translate="yes" xml:space="preserve">
          <source>On non-Unix systems, QDBusUnixFileDescriptor will always report an invalid state and &lt;a href=&quot;qdbusunixfiledescriptor#isSupported&quot;&gt;QDBusUnixFileDescriptor::isSupported&lt;/a&gt;() will return false.</source>
          <target state="translated">非Unixシステムでは、QDBusUnixFileDescriptorは常に無効な状態を報告し、&lt;a href=&quot;qdbusunixfiledescriptor#isSupported&quot;&gt;QDBusUnixFileDescriptor :: isSupported&lt;/a&gt;（）はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="e38c3a23dee5fa9311a5107003b6936f0a0d73bb" translate="yes" xml:space="preserve">
          <source>On operating systems where file system is case sensitive, &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; also tries to load a lower-cased version of the locale name.</source>
          <target state="translated">ファイルシステムで大文字と小文字が区別されるオペレーティングシステムでは、&lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt;は小文字バージョンのロケール名もロードしようとします。</target>
        </trans-unit>
        <trans-unit id="1aa7f8494db2fc0822ab3e263ae6aa016fb72ef0" translate="yes" xml:space="preserve">
          <source>On operating systems where the system API for passing command line</source>
          <target state="translated">コマンドラインを渡すためのシステムAPIが存在するオペレーティングシステムでは</target>
        </trans-unit>
        <trans-unit id="05e5202b8c925c0c913ef79c144980eb361aa914" translate="yes" xml:space="preserve">
          <source>On operating systems where the system API for passing command line arguments to a subprocess natively uses a single string (Windows), one can conceive command lines which cannot be passed via &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;'s portable list-based API. In these rare cases you need to use &lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt;() and &lt;a href=&quot;qprocess#setNativeArguments&quot;&gt;setNativeArguments&lt;/a&gt;() instead of this function.</source>
          <target state="translated">コマンドライン引数をサブプロセスに渡すためのシステムAPIがネイティブに単一の文字列を使用するオペレーティングシステム（Windows）では、&lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt;のポータブルリストベースのAPIを介して渡すことができないコマンドラインが考えられます。これらのまれなケースでは、この関数の代わりに&lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt;（）および&lt;a href=&quot;qprocess#setNativeArguments&quot;&gt;setNativeArguments&lt;/a&gt;（）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="bfe890c63f0bd059f8b1cd81c7d73de11b806d5e" translate="yes" xml:space="preserve">
          <source>On operating systems where the system API for passing command line arguments to a subprocess natively uses a single string (Windows), one can conceive command lines which cannot be passed via &lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt;'s portable list-based API. In these rare cases you need to use &lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt;() and &lt;a href=&quot;qprocess#setNativeArguments&quot;&gt;setNativeArguments&lt;/a&gt;() instead of this function.</source>
          <target state="translated">コマンドライン引数をサブプロセスに渡すためのシステムAPIがネイティブに単一の文字列を使用するオペレーティングシステム（Windows）では、&lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt;のポータブルリストベースAPIを介して渡すことができないコマンドラインを考えることができます。これらのまれなケースでは、この関数の代わりに&lt;a href=&quot;qprocess#setProgram&quot;&gt;setProgram&lt;/a&gt;（）と&lt;a href=&quot;qprocess#setNativeArguments&quot;&gt;setNativeArguments&lt;/a&gt;（）を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="28136e7d36f13be0dbb0c61f2f62bad732585c92" translate="yes" xml:space="preserve">
          <source>On or off (only for toggling push buttons).</source>
          <target state="translated">オンまたはオフ(押しボタンのトグルのみ)。</target>
        </trans-unit>
        <trans-unit id="3f1b1f250acb8d5ddcc132e442f60e2cb28137a4" translate="yes" xml:space="preserve">
          <source>On other operating systems, &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; will fall back to a PRNG of good numeric distribution, but it cannot guarantee proper seeding in all cases. Please consult the OS documentation for more information.</source>
          <target state="translated">他のオペレーティングシステムでは、&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt;は適切な数値分布のPRNGにフォールバックしますが、すべてのケースで適切なシードを保証することはできません。詳細については、OSのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2bbede3df925eda68d8fe819b6b61812a597b64c" translate="yes" xml:space="preserve">
          <source>On other operating systems, QRandomGenerator will fall back to a PRNG of good numeric distribution, but it cannot guarantee proper seeding in all cases. Please consult the OS documentation for more information.</source>
          <target state="translated">他のOSでは、QRandomGeneratorは良好な数値分布のPRNGにフォールバックしますが、すべてのケースで適切なシーディングを保証するものではありません。詳細はOSのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d15b206f77ee2ee8cfd8115fd9c168f87e0d6541" translate="yes" xml:space="preserve">
          <source>On other platforms than Windows, &quot;Default&quot; and &quot;.&quot; would be treated as regular subkeys.</source>
          <target state="translated">Windows 以外のプラットフォームでは、&quot;Default&quot; と &quot;.&quot; は通常のサブキーとして扱われます。</target>
        </trans-unit>
        <trans-unit id="707eb1c8724241a1e87379d817c5d04fe6cf181a" translate="yes" xml:space="preserve">
          <source>On other platforms, the default is the empty string.</source>
          <target state="translated">他のプラットフォームでは、デフォルトは空文字列です。</target>
        </trans-unit>
        <trans-unit id="c16c91f3148fe99500ed5d9ed9ec9a9afcaa8921" translate="yes" xml:space="preserve">
          <source>On other systems, this function will pick up proxy settings from the &quot;http_proxy&quot; environment variable. This variable must be a URL using one of the following schemes: &quot;http&quot;, &quot;socks5&quot; or &quot;socks5h&quot;.</source>
          <target state="translated">他のシステムでは、この関数は環境変数 &quot;http_proxy &quot;からプロキシの設定を拾います。この変数は、以下のいずれかのスキームを使用した URL でなければなりません。&quot;http&quot;,&quot;socks5&quot; または &quot;socks5h&quot;。</target>
        </trans-unit>
        <trans-unit id="ffa936f15b2bfcf36e9b62a214708044a04b8087" translate="yes" xml:space="preserve">
          <source>On platforms that do not provide nanosecond resolution, the value returned will be the best estimate available.</source>
          <target state="translated">ナノ秒の分解能を提供しないプラットフォームでは、返される値は利用可能な最良の推定値となります。</target>
        </trans-unit>
        <trans-unit id="f8e36630f309db9813967e18eaa4f77c0b022776" translate="yes" xml:space="preserve">
          <source>On platforms that do not use dynamic GL switching, the return value is &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="translated">動的GL切り替えを使用しないプラットフォームでは、戻り値は &lt;code&gt;nullptr&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="50c4185d33f086855aaf80873eb80641afeea45d" translate="yes" xml:space="preserve">
          <source>On platforms that support it, this method of moving windows is preferred over &lt;code&gt;setPosition&lt;/code&gt;, because it allows a more native look-and-feel of moving windows, e.g. letting the window manager snap this window against other windows, or special tiling or resizing behavior with animations when dragged to the edge of the screen. Furthermore, on some platforms such as Wayland, &lt;code&gt;setPosition&lt;/code&gt; is not supported, so this is the only way the application can influence its position.</source>
          <target state="translated">これをサポートするプラットフォームでは、ウィンドウを移動するこの方法が &lt;code&gt;setPosition&lt;/code&gt; よりも優先されます。これは、ウィンドウマネージャーがこのウィンドウを他のウィンドウに対してスナップできるようにするなど、ウィンドウを移動する際のネイティブなルックアンドフィールを可能にするためです。画面の端にドラッグしたときのアニメーション。さらに、Waylandなどの一部のプラットフォームでは、 &lt;code&gt;setPosition&lt;/code&gt; がサポートされていないため、これがアプリケーションがその位置に影響を与える唯一の方法です。</target>
        </trans-unit>
        <trans-unit id="86d7baaf899c808eb5077ff1f8b8ca1a697d9b5c" translate="yes" xml:space="preserve">
          <source>On platforms that support it, this method of resizing windows is preferred over &lt;code&gt;setGeometry&lt;/code&gt;, because it allows a more native look and feel of resizing windows, e.g. letting the window manager snap this window against other windows, or special resizing behavior with animations when dragged to the edge of the screen.</source>
          <target state="translated">これをサポートするプラットフォームでは、ウィンドウのサイズを変更するこの方法は、 &lt;code&gt;setGeometry&lt;/code&gt; よりも優先されます。これは、ウィンドウマネージャーがこのウィンドウを他のウィンドウに対してスナップできるようにする、またはドラッグしたときにアニメーションを使用して特別なサイズ変更を行うなど、ウィンドウのサイズ変更のよりネイティブなルックアンドフィールを可能にするためです。画面の端。</target>
        </trans-unit>
        <trans-unit id="1b3c1056bb54f6c5d06383834d667d7c6194a04d" translate="yes" xml:space="preserve">
          <source>On platforms that support it, this method of resizing windows is preferred over &lt;code&gt;setGeometry&lt;/code&gt;, because it allows a more native look-and-feel of resizing windows, e.g. letting the window manager snap this window against other windows, or special resizing behavior with animations when dragged to the edge of the screen.</source>
          <target state="translated">これをサポートするプラットフォームでは、ウィンドウのサイズを変更するこの方法は、 &lt;code&gt;setGeometry&lt;/code&gt; よりも優先されます。これは、ウィンドウマネージャーがこのウィンドウを他のウィンドウに対してスナップできるようにする、またはアニメーションを使用した特別なサイズ変更の動作など、ウィンドウのサイズ変更のよりネイティブなルックアンドフィールを可能にするためです。画面の端にドラッグしました。</target>
        </trans-unit>
        <trans-unit id="e089be5b188ff534e5a5114f53ca6db3653567b5" translate="yes" xml:space="preserve">
          <source>On platforms where retrieving the native handle is not supported, or if neither &lt;a href=&quot;qopenglcontext#create&quot;&gt;create&lt;/a&gt;() nor &lt;a href=&quot;qopenglcontext#setNativeHandle&quot;&gt;setNativeHandle&lt;/a&gt;() was called, a null variant is returned.</source>
          <target state="translated">ネイティブハンドルの取得がサポートされていないプラットフォーム、または&lt;a href=&quot;qopenglcontext#create&quot;&gt;create&lt;/a&gt;（）も&lt;a href=&quot;qopenglcontext#setNativeHandle&quot;&gt;setNativeHandle&lt;/a&gt;（）も呼び出されなかった場合、nullバリアントが返されます。</target>
        </trans-unit>
        <trans-unit id="097e335f3aa7896ef14a46c7227eceadb182fa7f" translate="yes" xml:space="preserve">
          <source>On platforms where the OpenGL implementation is not dynamically loaded, the return value is determined during compile time and never changes.</source>
          <target state="translated">OpenGLの実装が動的にロードされないプラットフォームでは、戻り値はコンパイル時に決定され、変更されることはありません。</target>
        </trans-unit>
        <trans-unit id="11551870c462ac03be9f07e2e333fda2d6df3f73" translate="yes" xml:space="preserve">
          <source>On platforms where this information is not available, returns the same as &lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;().</source>
          <target state="translated">この情報が利用できないプラットフォームでは、&lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;（）と同じ結果を返します。</target>
        </trans-unit>
        <trans-unit id="de86b2310b46ab95d774db26591152dc57268371" translate="yes" xml:space="preserve">
          <source>On press of the &lt;code&gt;[TAB]&lt;/code&gt; key, the item inside the &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; gets focus. If this item can handle &lt;code&gt;[TAB]&lt;/code&gt; key press, focus will change accordingly within the item, otherwise the next widget in the focus chain gets focus.</source>
          <target state="translated">プレスには &lt;code&gt;[TAB]&lt;/code&gt; キー、内部のアイテム&lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidgetは&lt;/a&gt;フォーカスを取得します。このアイテムが &lt;code&gt;[TAB]&lt;/code&gt; キーの押下を処理できる場合、フォーカスはアイテム内でそれに応じて変化します。そうでない場合、フォーカスチェーンの次のウィジェットがフォーカスを取得します。</target>
        </trans-unit>
        <trans-unit id="7c48ef163182db2a7fcae5fdd297decbb9801888" translate="yes" xml:space="preserve">
          <source>On press of the &lt;code&gt;[TAB]&lt;/code&gt; key, the item inside the QQuickWidget gets focus. If this item can handle &lt;code&gt;[TAB]&lt;/code&gt; key press, focus will change accordingly within the item, otherwise the next widget in the focus chain gets focus.</source>
          <target state="translated">プレスには &lt;code&gt;[TAB]&lt;/code&gt; キー、QQuickWidget内の項目がフォーカスを取得します。このアイテムが &lt;code&gt;[TAB]&lt;/code&gt; キーの押下を処理できる場合、フォーカスはアイテム内でそれに応じて変更されます。そうでない場合、フォーカスチェーン内の次のウィジェットがフォーカスを取得します。</target>
        </trans-unit>
        <trans-unit id="216f293e577fbbb41756144aacb2342b7d858e73" translate="yes" xml:space="preserve">
          <source>On some desktop platforms (including Windows and Unix), the application name (from &lt;a href=&quot;qguiapplication#applicationDisplayName-prop&quot;&gt;QGuiApplication::applicationDisplayName&lt;/a&gt;) is added at the end of the window title, if set. This is done by the QPA plugin, so it is shown to the user, but isn't part of the windowTitle string.</source>
          <target state="translated">一部のデスクトッププラットフォーム（WindowsおよびUnixを含む）では、アプリケーション名（&lt;a href=&quot;qguiapplication#applicationDisplayName-prop&quot;&gt;QGuiApplication :: applicationDisplayName&lt;/a&gt;から）が設定されている場合、ウィンドウタイトルの最後に追加されます。これはQPAプラグインによって行われるため、ユーザーに表示されますが、windowTitle文字列の一部ではありません。</target>
        </trans-unit>
        <trans-unit id="13fac2949d067de8eee19c6e772df44625a7e5d3" translate="yes" xml:space="preserve">
          <source>On some platforms (e.g. X11), the drawConvexPolygon() function can be faster than the &lt;a href=&quot;qpainter#drawPolygon&quot;&gt;drawPolygon&lt;/a&gt;() function.</source>
          <target state="translated">いくつかのプラットフォーム（例えばX11）で、drawConvexPolygon（）関数は、より速いことができ&lt;a href=&quot;qpainter#drawPolygon&quot;&gt;drawPolygon&lt;/a&gt;（）関数。</target>
        </trans-unit>
        <trans-unit id="34f97bbe7845b46e635a2c35b414f90487ac3ba8" translate="yes" xml:space="preserve">
          <source>On some platforms (for instance, iOS) the default framebuffer object depends on the surface being rendered to, and might be different from 0. Thus, instead of calling glBindFramebuffer(0), you should call glBindFramebuffer(ctx-&amp;gt;defaultFramebufferObject()) if you want your application to work across different Qt platforms.</source>
          <target state="translated">一部のプラットフォーム（iOSなど）では、デフォルトのフレームバッファーオブジェクトは、レンダリング先のサーフェイスに依存し、0とは異なる場合があります。したがって、glBindFramebuffer（0）を呼び出す代わりに、glBindFramebuffer（ctx-&amp;gt; defaultFramebufferObject（））を呼び出す必要があります。アプリケーションをさまざまなQtプラットフォームで動作させたい場合。</target>
        </trans-unit>
        <trans-unit id="7b39ff62b0777892f192f7cda66e142a06182e6c" translate="yes" xml:space="preserve">
          <source>On some platforms context loss situations is not something that can avoided. On others however, they may need to be opted-in to. This can be done by enabling &lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;ResetNotification&lt;/a&gt; in the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;. This will lead to setting &lt;code&gt;RESET_NOTIFICATION_STRATEGY_EXT&lt;/code&gt; to &lt;code&gt;LOSE_CONTEXT_ON_RESET_EXT&lt;/code&gt; in the underlying native OpenGL context. &lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; will then monitor the status via &lt;code&gt;glGetGraphicsResetStatusEXT()&lt;/code&gt; in every &lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;().</source>
          <target state="translated">一部のプラットフォームでは、コンテキスト損失の状況は回避できるものではありません。ただし、他の場合は、オプトインする必要がある場合があります。これは、有効にすることによって行うことができます&lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;ResetNotificationを&lt;/a&gt;して&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;。これにより、基になるネイティブOpenGLコンテキストで &lt;code&gt;RESET_NOTIFICATION_STRATEGY_EXT&lt;/code&gt; が &lt;code&gt;LOSE_CONTEXT_ON_RESET_EXT&lt;/code&gt; に設定されます。&lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;は、すべての&lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;（）で &lt;code&gt;glGetGraphicsResetStatusEXT()&lt;/code&gt; を介してステータスを監視します。</target>
        </trans-unit>
        <trans-unit id="de6d802b44b245bdb7ef87a8e2ea75a66a8508de" translate="yes" xml:space="preserve">
          <source>On some platforms context loss situations is not something that can avoided. On others however, they may need to be opted-in to. This can be done by enabling &lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;ResetNotification&lt;/a&gt; in the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;. This will lead to setting &lt;code&gt;RESET_NOTIFICATION_STRATEGY_EXT&lt;/code&gt; to &lt;code&gt;LOSE_CONTEXT_ON_RESET_EXT&lt;/code&gt; in the underlying native OpenGL context. &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; will then monitor the status via &lt;code&gt;glGetGraphicsResetStatusEXT()&lt;/code&gt; in every &lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;().</source>
          <target state="translated">一部のプラットフォームでは、コンテキスト損失の状況は回避できるものではありません。ただし、他の場合は、オプトインする必要がある場合があります。これは、有効にすることによって行うことができます&lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;ResetNotificationを&lt;/a&gt;して&lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt;。これにより、基になるネイティブOpenGLコンテキストで &lt;code&gt;RESET_NOTIFICATION_STRATEGY_EXT&lt;/code&gt; が &lt;code&gt;LOSE_CONTEXT_ON_RESET_EXT&lt;/code&gt; に設定されます。&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;は、すべての&lt;a href=&quot;qopenglcontext#makeCurrent&quot;&gt;makeCurrent&lt;/a&gt;（）で &lt;code&gt;glGetGraphicsResetStatusEXT()&lt;/code&gt; を介してステータスを監視します。</target>
        </trans-unit>
        <trans-unit id="0cb4e721238ec59021d213a4d04d779ecf98d2b8" translate="yes" xml:space="preserve">
          <source>On some platforms it is a platform requirement that the application open a network session before any network operations can be performed. This can be tested by the presents of the &lt;a href=&quot;qnetworkconfigurationmanager#Capability-enum&quot;&gt;QNetworkConfigurationManager::NetworkSessionRequired&lt;/a&gt; flag in the value returned by the &lt;a href=&quot;qnetworkconfigurationmanager#capabilities&quot;&gt;QNetworkConfigurationManager::capabilities&lt;/a&gt;() function.</source>
          <target state="translated">一部のプラットフォームでは、ネットワーク操作を実行する前にアプリケーションがネットワークセッションを開くことがプラットフォーム要件です。これは、&lt;a href=&quot;qnetworkconfigurationmanager#capabilities&quot;&gt;QNetworkConfigurationManager :: capabilities&lt;/a&gt;（）関数によって返される値の&lt;a href=&quot;qnetworkconfigurationmanager#Capability-enum&quot;&gt;QNetworkConfigurationManager :: NetworkSessionRequired&lt;/a&gt;フラグの存在によってテストできます。</target>
        </trans-unit>
        <trans-unit id="958c141ccc5a684fa33965a31052364570d61d43" translate="yes" xml:space="preserve">
          <source>On some platforms it is possible to pre-register an application to receive NDEF messages matching a given criteria. This is useful to get the system to automatically launch your application when a matching NDEF message is received. This removes the need to have the user manually launch NDEF handling applications, prior to touching a tag, or to have those applications always running and using system resources.</source>
          <target state="translated">一部のプラットフォームでは、指定された基準に一致するNDEFメッセージを受信するためにアプリケーションを事前に登録することができます。これは、一致するNDEFメッセージを受信したときにシステムが自動的にアプリケーションを起動するようにするのに便利です。これにより、ユーザーがタグに触れる前に手動でNDEF処理アプリケーションを起動したり、それらのアプリケーションを常に実行してシステムリソースを使用したりする必要がなくなります。</target>
        </trans-unit>
        <trans-unit id="c2a2a1e397e164b7f23274f35cdc6d18e0a707f9" translate="yes" xml:space="preserve">
          <source>On some platforms the native context handle is not sufficient and other related handles (for example, for a window or display) have to be provided in addition. Therefore</source>
          <target state="translated">プラットフォームによっては、ネイティブのコンテキストハンドルだけでは十分ではなく、他の関連するハンドル(例えばウィンドウやディスプレイなど)も追加で提供されなければなりません。そのため</target>
        </trans-unit>
        <trans-unit id="20010ff5a4b8e3a16de71feedf70aa68fe2c3db7" translate="yes" xml:space="preserve">
          <source>On some platforms the return value of &lt;code&gt;false&lt;/code&gt; for a context that was successfully created previously indicates that the OpenGL context was lost.</source>
          <target state="translated">一部のプラットフォームでは、以前に正常に作成されたコンテキストの &lt;code&gt;false&lt;/code&gt; の戻り値は、OpenGLコンテキストが失われたことを示しています。</target>
        </trans-unit>
        <trans-unit id="9c8be1c2d514ab4d9b4b152b27947d9b30037220" translate="yes" xml:space="preserve">
          <source>On some platforms the service discovery might lead to pairing requests. Therefore it is not recommended to do service discoveries on all devices. This function can be used to restrict the service discovery to a particular device.</source>
          <target state="translated">プラットフォームによっては、サービスの発見がペアリング要求につながる可能性があります。そのため、すべてのデバイスでサービス検出を行うことは推奨されません。この機能を使用して、サービス発見を特定のデバイスに限定することができます。</target>
        </trans-unit>
        <trans-unit id="684b93ba29be6c4ee11d9560ae8a7c160f610ce5" translate="yes" xml:space="preserve">
          <source>On some platforms the size grip automatically hides itself when the window is shown full screen or maximised.</source>
          <target state="translated">一部のプラットフォームでは、ウィンドウを全画面表示または最大化すると、サイズグリップが自動的に非表示になります。</target>
        </trans-unit>
        <trans-unit id="02bee986cbf2492c7d23749e33b81016094ebe37" translate="yes" xml:space="preserve">
          <source>On some platforms, device discovery may lead to pairing requests.</source>
          <target state="translated">一部のプラットフォームでは、デバイスの検出によりペアリング要求が発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="46574dd13730a320c02663d04dec60fd6f1ff980" translate="yes" xml:space="preserve">
          <source>On some platforms, the file name suffix for precompiled header files is the same as that for other object files. For example, the following declarations may cause two different object files with the same name to be generated:</source>
          <target state="translated">プラットフォームによっては、コンパイル済みのヘッダファイルのファイル名の接尾辞が他のオブジェクトファイルのファイル名の接尾辞と同じになることがあります。例えば、以下の宣言により、同じ名前の異なる2つのオブジェクトファイルが生成されることがあります。</target>
        </trans-unit>
        <trans-unit id="b07f91e16f98dc094fe104a3dd260214ab60fd05" translate="yes" xml:space="preserve">
          <source>On some platforms, the frame may be put into a queue and the return value may only indicate a successful insertion into the queue. The actual frame will be send later on. Therefore the &lt;a href=&quot;qcanbusdevice#framesWritten&quot;&gt;framesWritten&lt;/a&gt;() signal is the final confirmation that the frame has been handed off to the transport layer. If an error occurs the &lt;a href=&quot;qcanbusdevice#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;() is emitted.</source>
          <target state="translated">一部のプラットフォームでは、フレームがキューに入れられ、戻り値はキューへの挿入が成功したことを示すだけです。実際のフレームは後で送信されます。したがって、&lt;a href=&quot;qcanbusdevice#framesWritten&quot;&gt;framesWritten&lt;/a&gt;（）信号は、フレームがトランスポート層に渡されたことの最終確認です。エラーが発生すると、&lt;a href=&quot;qcanbusdevice#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;（）が発行されます。</target>
        </trans-unit>
        <trans-unit id="b14591797de380c2198aeb57dc2186da2a5f17cc" translate="yes" xml:space="preserve">
          <source>On some platforms, the symbols required by</source>
          <target state="translated">一部のプラットフォームでは</target>
        </trans-unit>
        <trans-unit id="e492c97f7f48a3b1d74e81536ecae5753a49beaf" translate="yes" xml:space="preserve">
          <source>On some systems it is possible for there to be available printers but none of them set to be the default printer.</source>
          <target state="translated">いくつかのシステムでは、利用可能なプリンタが存在しても、デフォルトのプリンタに設定されていないことがあります。</target>
        </trans-unit>
        <trans-unit id="87e8d766af5194858d7c9f0eb0881452ec8c871f" translate="yes" xml:space="preserve">
          <source>On some systems it may become necessary to target a specific overlay plane through a pre-defined connector. Just forcing a layer index via &lt;code&gt;QT_QPA_EGLFS_LAYER_INDEX&lt;/code&gt; does not perform plane configuration and is therefore not suitable in itself. Instead, in such special scenarios use the &lt;code&gt;QT_QPA_EGLFS_KMS_CONNECTOR_INDEX&lt;/code&gt; and &lt;code&gt;QT_QPA_EGLFS_KMS_PLANE_INDEX&lt;/code&gt; environment variables. When these are set, only the specified connector and plane will be in use, all other outputs will get ignored. The backend will take care of picking the EGL layer that corresponds to the desired plane, and the configuring of the plane.</source>
          <target state="translated">一部のシステムでは、事前定義されたコネクタを介して特定のオーバーレイプレーンをターゲットにすることが必要になる場合があります。 &lt;code&gt;QT_QPA_EGLFS_LAYER_INDEX&lt;/code&gt; を介してレイヤーインデックスを強制するだけでは、プレーン構成は実行されないため、それ自体は適切ではありません。代わりに、そのような特別なシナリオでは、 &lt;code&gt;QT_QPA_EGLFS_KMS_CONNECTOR_INDEX&lt;/code&gt; および &lt;code&gt;QT_QPA_EGLFS_KMS_PLANE_INDEX&lt;/code&gt; 環境変数を使用します。これらが設定されると、指定されたコネクタとプレーンのみが使用され、他のすべての出力は無視されます。バックエンドは、目的のプレーンに対応するEGLレイヤーの選択と、プレーンの構成を処理します。</target>
        </trans-unit>
        <trans-unit id="283b10be9f34b91b6891d6c6ccb6950c21d9f437" translate="yes" xml:space="preserve">
          <source>On some systems, &lt;a href=&quot;qnetworkinterface&quot;&gt;QNetworkInterface&lt;/a&gt; will need to heuristically determine which addresses are eligible.</source>
          <target state="translated">一部のシステムでは、&lt;a href=&quot;qnetworkinterface&quot;&gt;QNetworkInterface&lt;/a&gt;が適格なアドレスをヒューリスティックに決定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0dee526eee6dcf66479929545416072bde171509" translate="yes" xml:space="preserve">
          <source>On some systems, if &lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;() is not called before closing the file, the temporary file may be removed regardless of the state of this property. This behavior should not be relied upon, so application code should either call &lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;() or leave the auto removal functionality enabled.</source>
          <target state="translated">一部のシステムでは、ファイルを閉じる前に&lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;（）が呼び出されない場合、このプロパティの状態に関係なく一時ファイルが削除されることがあります。この動作に依存しないでください。そのため、アプリケーションコードは&lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;（）を呼び出すか、自動削除機能を有効にしておく必要があります。</target>
        </trans-unit>
        <trans-unit id="c80e7654a8bec1f4d5facbbd74deaca93f98ee25" translate="yes" xml:space="preserve">
          <source>On some systems, reading an image directly to &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; can use less memory than reading a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; to convert it to &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;.</source>
          <target state="translated">いくつかのシステム上に直接画像を読み取る&lt;a href=&quot;qpixmap&quot;&gt;QPixmapのは&lt;/a&gt;読み出しより少ないメモリを使用することができ&lt;a href=&quot;qimage&quot;&gt;QImageの&lt;/a&gt;に変換する&lt;a href=&quot;qpixmap&quot;&gt;QPixmapのを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0317377699bff9eb7d97170a601767a6a9cfb34e" translate="yes" xml:space="preserve">
          <source>On some systems, the tooltip's length is limited. The tooltip will be truncated if necessary.</source>
          <target state="translated">一部のシステムでは、ツールチップの長さに制限があります。必要に応じてツールチップは切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="8acffa276c4f7f8f8e7bf0d6d37e74022ed7de05" translate="yes" xml:space="preserve">
          <source>On some touch screens the coordinates must be rotated by setting &lt;code&gt;rotate&lt;/code&gt; to 90, 180, or 270.</source>
          <target state="translated">一部のタッチスクリーンでは、 &lt;code&gt;rotate&lt;/code&gt; を90、180、または270に設定して座標を回転させる必要があります。</target>
        </trans-unit>
        <trans-unit id="6d596c23df0bcb80eb02dee73f5b9614aa3ed6e0" translate="yes" xml:space="preserve">
          <source>On some types of touchscreens, especially those using TUIO drivers, it's possible to use recognizable physical tokens (fiducial objects) in addition to fingers. So if this point is a touch point, and uniqueId is set, it is the identifier for such an object.</source>
          <target state="translated">タッチスクリーンの種類によっては、特に TUIO ドライバを使用しているものでは、指の他に認識可能な物理トークン(fiducial オブジェクト)を使用することができます。そのため、この点がタッチポイントであり、かつ uniqueId が設定されている場合は、そのようなオブジェクトの識別子となります。</target>
        </trans-unit>
        <trans-unit id="e04c70e0a07d9e15dd2ce9a8af14e64663eef194" translate="yes" xml:space="preserve">
          <source>On standard Linux distributions such as Ubuntu, gamepads such as XBox or PlayStation controllers are detected out-of-the-box. To check if the gamepad is detected, &lt;code&gt;grep&lt;/code&gt; the &lt;code&gt;dmesg&lt;/code&gt; logs using:</source>
          <target state="translated">Ubuntuなどの標準のLinuxディストリビューションでは、XBoxやPlayStationコントローラーなどのゲームパッドはそのまま使用できます。ゲームパッドが検出されたかどうかを確認するには、次のコマンドを使用して &lt;code&gt;dmesg&lt;/code&gt; ログを &lt;code&gt;grep&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="7d5472790337d1d4e59cdd56ed2dea3a96341787" translate="yes" xml:space="preserve">
          <source>On success, the function returns &lt;code&gt;true&lt;/code&gt; and the socket enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;BoundState&lt;/a&gt;; otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">成功すると、関数は &lt;code&gt;true&lt;/code&gt; を返し、ソケットは&lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;BoundStateに&lt;/a&gt;入ります。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="217a151d2ba7560a1f4a4b2e9000d3ada58dd09c" translate="yes" xml:space="preserve">
          <source>On success, this function returns the integer which has been entered by the user; on failure, it returns the initial</source>
          <target state="translated">成功した場合、この関数はユーザが入力した整数を返します。</target>
        </trans-unit>
        <trans-unit id="0a549d2d16f78dece6ffe5f4ba948cc6c05ced1e" translate="yes" xml:space="preserve">
          <source>On successful completion of the operation, the reply will contain a list of search term suggestions. See &lt;a href=&quot;location-places-cpp#search-suggestions&quot;&gt;Search Suggestions&lt;/a&gt; for an example on how to use a search suggestion reply.</source>
          <target state="translated">操作が正常に完了すると、返信には検索用語の候補のリストが含まれます。参照してください。&lt;a href=&quot;location-places-cpp#search-suggestions&quot;&gt;検索候補&lt;/a&gt;検索候補応答を使用する方法の例を。</target>
        </trans-unit>
        <trans-unit id="48432cc5d48df67b159bc70dcb3b1ff5be20eb08" translate="yes" xml:space="preserve">
          <source>On system start-up, the default layout direction depends on the application's language.</source>
          <target state="translated">システム起動時には、デフォルトのレイアウトの方向はアプリケーションの言語に依存します。</target>
        </trans-unit>
        <trans-unit id="9f6f61c3a0a5edacdb6941ae738f76fa70e3be35" translate="yes" xml:space="preserve">
          <source>On systems running a Linux kernel without inotify support, file systems that contain watched paths cannot be unmounted.</source>
          <target state="translated">inotify をサポートしていない Linux カーネルを実行しているシステムでは、監視されているパスを含むファイルシステムをアンマウントすることはできません。</target>
        </trans-unit>
        <trans-unit id="fa66645afc6a39ae41bd9362f5877b326bd036c5" translate="yes" xml:space="preserve">
          <source>On systems that are configured to use the available screens as a single, large virtual desktop, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#virtualDesktop-prop&quot;&gt;virtualDesktop&lt;/a&gt; property will be set to true. In this case, the widget's size is usually the size of the bounding rectangle of all the screens.</source>
          <target state="translated">使用可能な画面を単一の大きな仮想デスクトップとして使用するように構成されているシステムでは、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qdesktopwidget-obsolete.html#virtualDesktop-prop&quot;&gt;virtualDesktop&lt;/a&gt;プロパティがtrueに設定されます。この場合、ウィジェットのサイズは通常、すべての画面の境界長方形のサイズです。</target>
        </trans-unit>
        <trans-unit id="5ce06ea7ef750ab64d75b86a57bfd0821bc61477" translate="yes" xml:space="preserve">
          <source>On systems that are configured to use the available screens as a single, large virtual desktop, the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qdesktopwidget-obsolete.html#virtualDesktop-prop&quot;&gt;virtualDesktop&lt;/a&gt; property will be set to true. In this case, the widget's size is usually the size of the bounding rectangle of all the screens.</source>
          <target state="translated">使用可能な画面を単一の大きな仮想デスクトップとして使用するように構成されているシステムでは、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qdesktopwidget-obsolete.html#virtualDesktop-prop&quot;&gt;virtualDesktop&lt;/a&gt;プロパティがtrueに設定されます。この場合、ウィジェットのサイズは通常、すべての画面の外接する長方形のサイズです。</target>
        </trans-unit>
        <trans-unit id="6b75b64683e6a4695e0bfa1ff74f76fc05dfdc7a" translate="yes" xml:space="preserve">
          <source>On systems that do not have symbolic links this function will always return the same string that &lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;() returns. If the canonical path does not exist (normally due to dangling symbolic links) canonicalPath() returns an empty string.</source>
          <target state="translated">シンボリックリンクがないシステムでは、この関数は常に、&lt;a href=&quot;qdir#absolutePath&quot;&gt;absolutePath&lt;/a&gt;（）が返すのと同じ文字列を返します。正規パスが存在しない場合（通常はシンボリックリンクがぶら下がっていることが原因）、canonicalPath（）は空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="bf055bffb495271e6b40153e0db0d5bea81548b3" translate="yes" xml:space="preserve">
          <source>On systems that do not support time zones, this function will behave as if local time were &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::UTC&lt;/a&gt;.</source>
          <target state="translated">タイムゾーンをサポートしていないシステムでは、この関数は現地時間が&lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt :: UTCである&lt;/a&gt;かのように動作します。</target>
        </trans-unit>
        <trans-unit id="8426a5b516aee828131cfae3e4c5e93ba71cdc42" translate="yes" xml:space="preserve">
          <source>On systems where files do not have permissions this function always returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ファイルに権限がないシステムでは、この関数は常に &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d9f5896ef661837ef656cf71b6500f89533d6442" translate="yes" xml:space="preserve">
          <source>On systems where the user's desktop is displayed using more than one screen, certain types of applications may need to obtain information about the configuration of the user's workspace to ensure that new windows and dialogs are opened in appropriate locations.</source>
          <target state="translated">ユーザーのデスクトップが複数の画面を使用して表示されるシステムでは、特定のタイプのアプリケーションは、新しいウィンドウやダイアログが適切な場所で開かれるようにするために、ユーザーのワークスペースの構成に関する情報を取得する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="9ff05ff4d4fd2a0c4ec48dd98879ec9f55a8f523" translate="yes" xml:space="preserve">
          <source>On systems which do not maintain a list of &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;defaultConfiguration()&lt;/a&gt; an invalid configuration is returned. A possible workaround could be to implement a custom dialog which is populated based on what &lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager::allConfigurations&lt;/a&gt;() returns.</source>
          <target state="translated">&lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;defaultConfiguration（）の&lt;/a&gt;リストを維持しないシステムでは、無効な構成が返されます。可能な回避策は、&lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager :: allConfigurations&lt;/a&gt;（）が返すものに基づいて入力されるカスタムダイアログを実装することです。</target>
        </trans-unit>
        <trans-unit id="be67d578a0a19a7c002cb93d3f49e9f5cab50f22" translate="yes" xml:space="preserve">
          <source>On that same note, the overload of &lt;a href=&quot;qtest#touchEvent&quot;&gt;QTest::touchEvent&lt;/a&gt;() taking a &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; parameter has been changed to return a QTouchEventWidgetSequence object.</source>
          <target state="translated">同じメモで、&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;パラメーターを&lt;a href=&quot;qtest#touchEvent&quot;&gt;受け取るQTest :: touchEvent&lt;/a&gt;（）のオーバーロードが変更され、QTouchEventWidgetSequenceオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="8c7112f14169be9a416c8fe33e65874cb5a01deb" translate="yes" xml:space="preserve">
          <source>On the &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; side, the &lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNode&lt;/a&gt; needs to register a callback to be used when the external schema is detected. The callback must be a &lt;a href=&quot;qremoteobjectnode#RemoteObjectSchemaHandler-typedef&quot;&gt;RemoteObjectSchemaHandler&lt;/a&gt;.</source>
          <target state="translated">上に&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;レプリカ&lt;/a&gt;側、&lt;a href=&quot;qremoteobjectnode&quot;&gt;QRemoteObjectNodeは、&lt;/a&gt;外部スキーマが検出されたときに使用されるコールバックを登録する必要があります。コールバックは&lt;a href=&quot;qremoteobjectnode#RemoteObjectSchemaHandler-typedef&quot;&gt;RemoteObjectSchemaHandlerで&lt;/a&gt;なければなりません。</target>
        </trans-unit>
        <trans-unit id="434b12f1d40f9f93e07ace07abf7185c1c9c874a" translate="yes" xml:space="preserve">
          <source>On the QML side, you can now use the registered enums:</source>
          <target state="translated">QML側では、登録された列挙型が使えるようになりました。</target>
        </trans-unit>
        <trans-unit id="b2d93553590cf4d762928f286dacc78e76252159" translate="yes" xml:space="preserve">
          <source>On the Session Bus, one can find other applications by the same user that are sharing the same desktop session (hence the name). On the System Bus, however, processes shared for the whole system are usually found.</source>
          <target state="translated">セッションバス上では、同じユーザーが同じデスクトップセッションを共有している他のアプリケーショ ンを見つけることができます(この名前の由来)。しかし、システムバス上では、通常はシステム全体で共有されているプロセスを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="ac0312dc21f0f689a2421be25d12d0f7d2a078ba" translate="yes" xml:space="preserve">
          <source>On the command-line, applications can be built using &lt;code&gt;qmake&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt;. Optionally, &lt;code&gt;qmake&lt;/code&gt; can generate project files for Xcode with &lt;code&gt;-spec macx-xcode&lt;/code&gt;. If you are using the binary package, &lt;code&gt;qmake&lt;/code&gt; generates Xcode projects by default; use &lt;code&gt;-spec macx-gcc&lt;/code&gt; to generate makefiles. For example:</source>
          <target state="translated">コマンドラインでは、 &lt;code&gt;qmake&lt;/code&gt; と &lt;code&gt;make&lt;/code&gt; を使用してアプリケーションを構築できます。オプションで、 &lt;code&gt;qmake&lt;/code&gt; は &lt;code&gt;-spec macx-xcode&lt;/code&gt; を使用してXcodeのプロジェクトファイルを生成できます。バイナリパッケージを使用している場合、 &lt;code&gt;qmake&lt;/code&gt; はデフォルトでXcodeプロジェクトを生成します。makefileを生成するには、 &lt;code&gt;-spec macx-gcc&lt;/code&gt; を使用します。例えば：</target>
        </trans-unit>
        <trans-unit id="e7a075199183b4ffd28da5b3a472c3762bf816a8" translate="yes" xml:space="preserve">
          <source>On the left of the text.</source>
          <target state="translated">本文の左側に</target>
        </trans-unit>
        <trans-unit id="b893e06264de3baeae08aa2679375bca3ba98d66" translate="yes" xml:space="preserve">
          <source>On the low level, applications communicate over D-Bus by sending messages to one another. Messages are used to relay the remote procedure calls as well as the replies and errors associated with them. When used over a bus, messages have a destination, which means they are routed only to the interested parties, avoiding congestion due to &quot;swarming&quot; or broadcasting.</source>
          <target state="translated">低レベルでは、アプリケーションは互いにメッセージを送信することで D-Bus を介して通信します。メッセージは、リモートプロシージャの呼び出しとそれに関連した応答やエラーを中継するために使用されます。バスを介して使用される場合、メッセージには宛先があり、関心のある相手にのみルーティングされるため、「群がり」やブロードキャストによる混雑を避けることができます。</target>
        </trans-unit>
        <trans-unit id="474353455aaf6ed877e94689a204a43c53528cfe" translate="yes" xml:space="preserve">
          <source>On the next page you will need to select the certificates that will be distributed with your Provisioning Profile. You would have needed to uploaded a certificate on your local development machine to the Apple Developer Certificate, Identifiers, and Profiles manger previously. Generally you will want to add any certificates of the members of your team who will need to build your App.</source>
          <target state="translated">次のページでは、Provisioning Profileと一緒に配布される証明書を選択する必要があります。以前に、ローカル開発マシン上の証明書をApple Developer Certificate,Identifiers,and Profilesマネージャにアップロードする必要がありました。一般的に、アプリを構築する必要のあるチームメンバーの証明書を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="4cd8b38bae57b5c4b4f560bf9622743d3abe6099" translate="yes" xml:space="preserve">
          <source>On the next page you will need to select the devices you will be developing and testing your app on. You must register your devices to the Apple Developer Certificate, Identifiers, and Profiles manger previously. The devices you select here are the only ones capable of running apps signed against this provisioning profile, so select all the devices you intend use during the development and testing phase.</source>
          <target state="translated">次のページでは、アプリを開発してテストするデバイスを選択する必要があります。前にApple Developer Certificate,Identifiers,and Profilesマネージャにデバイスを登録しておく必要があります。ここで選択したデバイスは、このプロビジョニングプロファイルに対して署名されたアプリを実行できる唯一のデバイスです。</target>
        </trans-unit>
        <trans-unit id="1095c34dea0969f3125e4d8c989adc79207f7f0a" translate="yes" xml:space="preserve">
          <source>On the next page, you must fill out the details about your product. The &lt;b&gt;Reference Name&lt;/b&gt; field refers to how the product will be displayed in iTunes Connect and in sales reports, but not in the App Store itself. The &lt;b&gt;Product ID&lt;/b&gt; field is very important as it is the unique ID that will be used to query for the product from your app itself. If possible make this the same ID as the corresponding products in the other platform&amp;rsquo;s stores, otherwise you will have to conditional logic in your app for each platform when specifying product identifiers.</source>
          <target state="translated">次のページで、製品の詳細を入力する必要があります。 「&lt;b&gt;参照名」&lt;/b&gt;フィールドは、製品がiTunes Connectおよび販売レポートに表示される方法を示しますが、App Store自体には表示されません。 [ &lt;b&gt;製品ID]&lt;/b&gt;フィールドは、アプリ自体から製品を照会するために使用される一意のIDであるため、非常に重要です。可能であれば、これを他のプラットフォームのストアにある対応する製品と同じIDにします。そうしないと、製品IDを指定するときに、各プラットフォームのアプリで条件付きロジックを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="bb222a18690f0b2c76bb9525cee3e76a8903aa6d" translate="yes" xml:space="preserve">
          <source>On the other hand, if a bus is not used, service names are also not used. If we compare this to a computer network again, this would equate to a point-to-point network: since the peer is known, there is no need to use hostnames to find it or its IP address.</source>
          <target state="translated">一方、バスが使用されない場合、サービス名も使用されません。これをコンピュータネットワークに例えると、これはポイント・ツー・ポイント・ネットワークと同じことになります。</target>
        </trans-unit>
        <trans-unit id="dcdc862fdefd8cd0bf302443bbccbf1004374cfc" translate="yes" xml:space="preserve">
          <source>On the other hand, logging in synchronous mode has a high overhead, but the OpenGL implementation guarantees that all the messages caused by a certain command are received in order, before the command returns, and from the same thread the OpenGL context is bound to.</source>
          <target state="translated">一方、同期モードでのロギングは高いオーバーヘッドがありますが、OpenGLの実装では、特定のコマンドによって引き起こされたすべてのメッセージが、コマンドが戻る前に、OpenGLコンテキストがバインドされている同じスレッドから順番に受信されることが保証されています。</target>
        </trans-unit>
        <trans-unit id="1e9c8ca1de36db669e292891fcbf1796fb641b2f" translate="yes" xml:space="preserve">
          <source>On the other hand, suppose you really want only one &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element, the first one in the document (i.e., you only want the first &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; element in the first &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element). Then you have to do more filtering. There are two ways you can do it. You can apply the &lt;code&gt;[1]&lt;/code&gt; filter in the same place as above but enclose the path expression in parentheses:</source>
          <target state="translated">一方、あなたが本当に唯一たいと &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 要素を、文書の最初のものは（すなわち、あなただけの最初たい &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; の最初の要素 &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 要素）。次に、さらにフィルタリングを行う必要があります。それを行うには2つの方法があります。 &lt;code&gt;[1]&lt;/code&gt; フィルターは上記と同じ場所に適用できますが、パス式は括弧で囲みます。</target>
        </trans-unit>
        <trans-unit id="8a6cc0954d4400f7b8d60c4b505bd97e38e7f9c3" translate="yes" xml:space="preserve">
          <source>On the other hand, this means &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; values can only be compared with other values that use the same reference. This is especially true if the time since the reference is extracted from the &lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt; object (&lt;a href=&quot;qelapsedtimer#msecsSinceReference&quot;&gt;QElapsedTimer::msecsSinceReference&lt;/a&gt;()) and serialised. These values should never be exchanged across the network or saved to disk, since there's no telling whether the computer node receiving the data is the same as the one originating it or if it has rebooted since.</source>
          <target state="translated">一方、これは&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;値が同じ参照を使用する他の値とのみ比較できることを意味します。これは、参照からの時間が&lt;a href=&quot;qelapsedtimer&quot;&gt;QElapsedTimer&lt;/a&gt;オブジェクト（&lt;a href=&quot;qelapsedtimer#msecsSinceReference&quot;&gt;QElapsedTimer :: msecsSinceReference&lt;/a&gt;（））から抽出されてシリアル化される場合に特に当てはまります。これらの値は、ネットワークを介して交換したり、ディスクに保存したりしないでください。データを受信するコンピューターノードが元のコンピューターノードと同じであるか、それ以降再起動したかどうかがわからないためです。</target>
        </trans-unit>
        <trans-unit id="40cd37db24fc45b9afd18fe5f46b8a662dcc3d91" translate="yes" xml:space="preserve">
          <source>On the other hand, this means QElapsedTimer values can only be compared with other values that use the same reference. This is especially true if the time since the reference is extracted from the QElapsedTimer object (&lt;a href=&quot;qelapsedtimer#msecsSinceReference&quot;&gt;QElapsedTimer::msecsSinceReference&lt;/a&gt;()) and serialised. These values should never be exchanged across the network or saved to disk, since there's no telling whether the computer node receiving the data is the same as the one originating it or if it has rebooted since.</source>
          <target state="translated">一方、これは、QElapsedTimer値は、同じ参照を使用する他の値とのみ比較できることを意味します。これは、参照がQElapsedTimerオブジェクト（&lt;a href=&quot;qelapsedtimer#msecsSinceReference&quot;&gt;QElapsedTimer :: msecsSinceReference&lt;/a&gt;（））から抽出され、シリアル化されてからの時間が特に当てはまります。これらの値は、ネットワークを介して交換したり、ディスクに保存したりしないでください。データを受信するコンピューターノードが元のコンピューターノードと同じであるか、それ以降に再起動したかがわからないためです。</target>
        </trans-unit>
        <trans-unit id="77efd63831eb7f5c8d427c682d396f441648e591" translate="yes" xml:space="preserve">
          <source>On the other hand, you can safely emit signals from your &lt;a href=&quot;qthread#run&quot;&gt;QThread::run&lt;/a&gt;() implementation, because signal emission is thread-safe.</source>
          <target state="translated">一方、シグナルの&lt;a href=&quot;qthread#run&quot;&gt;発行&lt;/a&gt;はスレッドセーフであるため、QThread :: run（）実装から安全にシグナルを発行できます。</target>
        </trans-unit>
        <trans-unit id="0bf88653bfda95e8a89fbed43dbde4d043afbe5d" translate="yes" xml:space="preserve">
          <source>On the replica side, we need to:</source>
          <target state="translated">レプリカ側では、必要です。</target>
        </trans-unit>
        <trans-unit id="344ebd30c1691d76097cb441fd3a73887ee9baef" translate="yes" xml:space="preserve">
          <source>On the right of the text.</source>
          <target state="translated">本文の右側に</target>
        </trans-unit>
        <trans-unit id="d9695003eed75e0367ce194cd0631e7c102416ac" translate="yes" xml:space="preserve">
          <source>On the system bus, one can also expect to find restrictions on what services each application is allowed to offer. Therefore, one can be reasonably certain that, if a certain service is present, it is being offered by a trusted application.</source>
          <target state="translated">システムバス上では、各アプリケーションが提供することを許可されているサービスの制限を見つけることができます。したがって、あるサービスが存在する場合、それが信頼されたアプリケーションによって提供されていることを合理的に確信することができます。</target>
        </trans-unit>
        <trans-unit id="e1d30a51f1a28aaad2ba00d5b901c1fe57bc5e80" translate="yes" xml:space="preserve">
          <source>On touch, &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt; enables flicking and makes the scroll bars non-interactive.</source>
          <target state="translated">タッチすると、&lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;はフリックを有効にし、スクロールバーを非インタラクティブにします。</target>
        </trans-unit>
        <trans-unit id="8918fe1b643b1e2d15cbeb59abc161026f7563a9" translate="yes" xml:space="preserve">
          <source>On touch, ScrollView enables flicking and makes the scroll bars non-interactive.</source>
          <target state="translated">タッチ操作では、ScrollView はフリックを可能にし、スクロールバーを非インタラクティブにします。</target>
        </trans-unit>
        <trans-unit id="c953e28176379d2bdf43ea5238ba0de72683afb1" translate="yes" xml:space="preserve">
          <source>On touchscreens that can track physical objects (such as knobs or game pieces) in addition to fingers, each object usually has a unique ID. Likewise, each stylus that can be used with a graphics tablet usually has a unique serial number. Qt so far only supports numeric IDs. You can get the actual number as uniqueId.numeric, but that is a device-specific detail. In the future, there may be support for non-numeric IDs, so you should not assume that the number is meaningful.</source>
          <target state="translated">指だけでなく、物理的なオブジェクト(ノブやゲームピースなど)を追跡できるタッチスクリーンでは、通常、各オブジェクトは一意の ID を持っています。同様に、グラフィックスタブレットで使用できるスタイラスにも、通常は固有のシリアル番号が付いています。Qtは今のところ数字のIDしかサポートしていません。実際の番号は uniqueId.numeric として取得できますが、これはデバイス固有の詳細です。将来的には、数字以外の ID がサポートされるかもしれませんので、数字に意味があると思ってはいけません。</target>
        </trans-unit>
        <trans-unit id="6ba13ef24b5b098754a4165ca757a51542b2947b" translate="yes" xml:space="preserve">
          <source>On your Embedded Linux device, when there's no windowing system present, the mouse, keyboard, and touch input are read directly via &lt;code&gt;evdev&lt;/code&gt; or using helper libraries such as &lt;code&gt;libinput&lt;/code&gt; or &lt;code&gt;tslib&lt;/code&gt;. However, this behavior requires that device nodes &lt;code&gt;/dev/input/event*&lt;/code&gt; are readable by the user. &lt;code&gt;eglfs&lt;/code&gt; and &lt;code&gt;linuxfb&lt;/code&gt; have all the input handling code compiled-in.</source>
          <target state="translated">組み込みLinuxデバイスでは、ウィンドウシステムが存在しない場合、マウス、キーボード、およびタッチ入力は、 &lt;code&gt;evdev&lt;/code&gt; を介して、または &lt;code&gt;libinput&lt;/code&gt; や &lt;code&gt;tslib&lt;/code&gt; などのヘルパーライブラリを使用して直接読み取られます。ただし、この動作では、デバイスノード &lt;code&gt;/dev/input/event*&lt;/code&gt; がユーザーによって読み取り可能である必要があります。 &lt;code&gt;eglfs&lt;/code&gt; と &lt;code&gt;linuxfb&lt;/code&gt; には、すべての入力処理コードがコンパイルされています。</target>
        </trans-unit>
        <trans-unit id="acea668c9e98f42ef4ea326d649ea01ba5737ffb" translate="yes" xml:space="preserve">
          <source>On/off indicator for a view item.</source>
          <target state="translated">表示項目のオン/オフを表示します。</target>
        </trans-unit>
        <trans-unit id="5fa999adb84b2c0031f4fad0cfc3a2031e391918" translate="yes" xml:space="preserve">
          <source>On/off indicator, for example, a &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;.</source>
          <target state="translated">オン/オフインジケーター。たとえば、&lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c88a3d71536ddc26913f73b46ff11d4bbed4857e" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-deployment-guide.html#&quot;&gt;properly installed&lt;/a&gt;, the virtual keyboard can be opened by clicking on a text input field.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtvirtualkeyboard-deployment-guide.html#&quot;&gt;正しくインストールされ&lt;/a&gt;たら、テキスト入力フィールドをクリックして仮想キーボードを開くことができます。</target>
        </trans-unit>
        <trans-unit id="31e4cfa5dc1a88f96ee40352ea9cf380bab72c11" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtvirtualkeyboard-deployment-guide.html&quot;&gt;properly installed&lt;/a&gt;, the virtual keyboard can be opened by clicking on a text input field.</source>
          <target state="translated">いったん&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtvirtualkeyboard-deployment-guide.html&quot;&gt;正しくインストール&lt;/a&gt;、仮想キーボードは、テキスト入力フィールドをクリックして開くことができます。</target>
        </trans-unit>
        <trans-unit id="4d8ad2f36ec3282a9f11a068428d2804dd485c82" translate="yes" xml:space="preserve">
          <source>Once &lt;a href=&quot;qtextline#setLineWidth&quot;&gt;QTextLine::setLineWidth&lt;/a&gt;() is called, a new line can be created and filled with text. Repeating this process will lay out the whole block of text contained in the &lt;a href=&quot;qtextlayout&quot;&gt;QTextLayout&lt;/a&gt;. If there is no text left to be inserted into the layout, the &lt;a href=&quot;qtextline&quot;&gt;QTextLine&lt;/a&gt; returned will not be valid (isValid() will return false).</source>
          <target state="translated">いったん&lt;a href=&quot;qtextline#setLineWidth&quot;&gt;QTextLine :: setLineWidth&lt;/a&gt;（）が呼び出され、新しい行が作成されたテキストを充填することができます。このプロセスを繰り返すと、&lt;a href=&quot;qtextlayout&quot;&gt;QTextLayoutに&lt;/a&gt;含まれるテキストのブロック全体がレイアウトされます。レイアウトに挿入するテキストが残っていない場合、返される&lt;a href=&quot;qtextline&quot;&gt;QTextLine&lt;/a&gt;は無効になります（isValid（）はfalseを返します）。</target>
        </trans-unit>
        <trans-unit id="fc12fd14aa59b1809aeda499e402a77f7adedf6b" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;KeyReader.qml&lt;/code&gt; is loaded, it accepts key events and sets &lt;code&gt;event.accepted&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; so that the event is not propagated to the parent &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;.</source>
          <target state="translated">いったん &lt;code&gt;KeyReader.qml&lt;/code&gt; がロードされ、それがキーイベントとセット受け入れ &lt;code&gt;event.accepted&lt;/code&gt; に &lt;code&gt;true&lt;/code&gt; イベントが親に伝播されないように&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;長方形&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="369b21cf40402245a2f9ab26af7722f2887f9ea4" translate="yes" xml:space="preserve">
          <source>Once &lt;code&gt;doc&lt;/code&gt; and &lt;code&gt;elem&lt;/code&gt; go out of scope, the whole internal tree representing the XML document is deleted.</source>
          <target state="translated">いったん &lt;code&gt;doc&lt;/code&gt; と &lt;code&gt;elem&lt;/code&gt; スコープの外に出て、XML文書を表す全体の内部ツリーが削除されます。</target>
        </trans-unit>
        <trans-unit id="e2733f23a6718804c20daaf4d4d47b6a64f59d3d" translate="yes" xml:space="preserve">
          <source>Once Qt is installed, you can use the</source>
          <target state="translated">Qtをインストールしたら</target>
        </trans-unit>
        <trans-unit id="ee1dc491fdd55ffd0fc4b2fbeb16f60438de0327" translate="yes" xml:space="preserve">
          <source>Once Qt is installed, you can use the Maintenance Tool under</source>
          <target state="translated">Qtがインストールされると、メンテナンスツールは</target>
        </trans-unit>
        <trans-unit id="83d0b39e5b2ba9fd3ca62bf11a2e51fe3ba848ee" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; has been created it should be added to the relevant menu and toolbar, then connected to the slot which will perform the action. For example:</source>
          <target state="translated">作成された&lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt;は、関連するメニューとツールバーに追加され、アクションを実行するスロットに接続されます。例えば：</target>
        </trans-unit>
        <trans-unit id="43e1f30afc29295352c577708ea4d49f0ba6df3c" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; has been created for a target object, the gesture recognizer will receive events for it in its &lt;a href=&quot;qgesturerecognizer#recognize&quot;&gt;recognize&lt;/a&gt;() handler function.</source>
          <target state="translated">いったん&lt;a href=&quot;qgesture&quot;&gt;QGestureは、&lt;/a&gt;ターゲット・オブジェクト用に作成された、ジェスチャー認識は、その中にそれのためのイベント受信する&lt;a href=&quot;qgesturerecognizer#recognize&quot;&gt;認識&lt;/a&gt;（）ハンドラ関数を。</target>
        </trans-unit>
        <trans-unit id="61d56c40b76bb9d0bb53c2596af9a9d3b932c1f7" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qmodbusclient&quot;&gt;QModbusClient&lt;/a&gt; object has been created, the application can use it to send requests. The returned object is used to obtain any data returned in response to the corresponding request.</source>
          <target state="translated">いったん&lt;a href=&quot;qmodbusclient&quot;&gt;QModbusClientの&lt;/a&gt;オブジェクトが作成されている、アプリケーションが要求を送信するためにそれを使用することができます。返されたオブジェクトは、対応する要求に応じて返されたデータを取得するために使用されます。</target>
        </trans-unit>
        <trans-unit id="d98a7ef943520707456603e0929cc41dd24752d6" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; object has been created, the application can use it to send requests over the network. A group of standard functions are supplied that take a request and optional data, and each return a &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; object. The returned object is used to obtain any data returned in response to the corresponding request.</source>
          <target state="translated">いったん&lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManagerの&lt;/a&gt;オブジェクトが作成されている、アプリケーションがネットワーク経由でリクエストを送信するためにそれを使用することができます。リクエストとオプションのデータを受け取り、それぞれが&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt;オブジェクトを返す標準関数のグループが提供されます。返されたオブジェクトは、対応する要求への応答として返されたデータを取得するために使用されます。</target>
        </trans-unit>
        <trans-unit id="3b084b214d79ee12ee2d4e237b98fa9681392b7d" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; has been made current, you can render to it in a platform independent way by using Qt's OpenGL enablers such as &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;, &lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;, &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;, and &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt;. It is also possible to use the platform's OpenGL API directly, without using the Qt enablers, although potentially at the cost of portability. The latter is necessary when wanting to use OpenGL 1.x or OpenGL ES 1.x.</source>
          <target state="translated">いったん&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContextが&lt;/a&gt;現在行われている、次のようなQtのOpenGLのイネーブラを使用することにより、プラットフォームに依存しない方法でそれをレンダリングすることができ&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;、&lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;、&lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;、および&lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt;。移植性は犠牲になりますが、Qtイネーブラーを使用せずに、プラットフォームのOpenGL APIを直接使用することもできます。後者は、OpenGL 1.xまたはOpenGL ES 1.xを使用する場合に必要です。</target>
        </trans-unit>
        <trans-unit id="e27bff41670537dc5d121238abb2648ff3024d56" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; object is constructed, subpaths like lines and curves can be added to the path (creating &lt;a href=&quot;qpainterpath#ElementType-enum&quot;&gt;QPainterPath::LineToElement&lt;/a&gt; and &lt;a href=&quot;qpainterpath#ElementType-enum&quot;&gt;QPainterPath::CurveToElement&lt;/a&gt; components).</source>
          <target state="translated">一旦&lt;a href=&quot;qpainterpath&quot;&gt;QPainterPathの&lt;/a&gt;オブジェクトが構築され、直線や曲線などサブパスは、パスに追加することができる（作成&lt;a href=&quot;qpainterpath#ElementType-enum&quot;&gt;QPainterPath :: LineToElement&lt;/a&gt;と&lt;a href=&quot;qpainterpath#ElementType-enum&quot;&gt;QPainterPathを:: CurveToElement&lt;/a&gt;成分）。</target>
        </trans-unit>
        <trans-unit id="6a2d4470eae5a525141184fc66126986ce9f96a3" translate="yes" xml:space="preserve">
          <source>Once a &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object has been constructed and set up, a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; can be used to perform painting operations on it. We can construct and set up a painter in the following way:</source>
          <target state="translated">いったん&lt;a href=&quot;qprinter&quot;&gt;QPrinterの&lt;/a&gt;オブジェクトが構築され、設定されている、&lt;a href=&quot;qpainter&quot;&gt;QPainterのは、&lt;/a&gt;それにペイント操作を実行するために使用することができます。次の方法で、ペインタを作成および設定できます。</target>
        </trans-unit>
        <trans-unit id="dd0721eed9935f2e299cbcbdde10a7b0feb6fe4d" translate="yes" xml:space="preserve">
          <source>Once a QAction has been created it should be added to the relevant menu and toolbar, then connected to the slot which will perform the action. For example:</source>
          <target state="translated">QActionが作成されると、関連するメニューとツールバーに追加され、アクションを実行するスロットに接続されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="6a811fafe26d686311e7bed27410ad8f9cc95408" translate="yes" xml:space="preserve">
          <source>Once a QAction has been created, it should be added to the relevant menu and toolbar, then connected to the slot which will perform the action. For example:</source>
          <target state="translated">QActionが作成されると、関連するメニューとツールバーに追加され、アクションを実行するスロットに接続されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="3613c1dffcb14effdec6c7212c9fcc2898a5e78f" translate="yes" xml:space="preserve">
          <source>Once a QModbusClient object has been created, the application can use it to send requests. The returned object is used to obtain any data returned in response to the corresponding request.</source>
          <target state="translated">QModbusClientオブジェクトが作成されると、アプリケーションはそれを使用してリクエストを送信することができます。返されたオブジェクトは、対応するリクエストに応答して返されたデータを取得するために使用されます。</target>
        </trans-unit>
        <trans-unit id="f603432194155193688fb9a08fe600db985b6201" translate="yes" xml:space="preserve">
          <source>Once a QNetworkAccessManager object has been created, the application can use it to send requests over the network. A group of standard functions are supplied that take a request and optional data, and each return a &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; object. The returned object is used to obtain any data returned in response to the corresponding request.</source>
          <target state="translated">QNetworkAccessManagerオブジェクトが作成されると、アプリケーションはそれを使用してネットワーク経由で要求を送信できます。リクエストとオプションのデータを受け取り、それぞれが&lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt;オブジェクトを返す標準関数のグループが提供されています。返されたオブジェクトは、対応する要求に応答して返されたデータを取得するために使用されます。</target>
        </trans-unit>
        <trans-unit id="5fda68cb0bc3e311f823ec3cf4230458f5c8806e" translate="yes" xml:space="preserve">
          <source>Once a QOpenGLContext has been made current, you can render to it in a platform independent way by using Qt's OpenGL enablers such as &lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;, &lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;, &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;, and &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt;. It is also possible to use the platform's OpenGL API directly, without using the Qt enablers, although potentially at the cost of portability. The latter is necessary when wanting to use OpenGL 1.x or OpenGL ES 1.x.</source>
          <target state="translated">QOpenGLContextが最新になったら、&lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLFunctions&lt;/a&gt;、&lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLBuffer&lt;/a&gt;、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;、QOpenGLFramebufferObjectなどのQtのOpenGLイネーブラーを使用して、プラットフォームに依存しない方法でQOpenGLContextにレンダリング&lt;a href=&quot;qopenglframebufferobject&quot;&gt;でき&lt;/a&gt;ます。 Qtイネーブラーを使用せずに、プラットフォームのOpenGL APIを直接使用することもできますが、移植性が犠牲になる可能性があります。後者は、OpenGL1.xまたはOpenGLES1.xを使用する場合に必要です。</target>
        </trans-unit>
        <trans-unit id="eff758df4832ec35e3cc87f628295a7d11603154" translate="yes" xml:space="preserve">
          <source>Once a QOpenGLContext has been made current, you can render to it in a platform independent way by using Qt's OpenGL enablers such as &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;, &lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLBuffer&lt;/a&gt;, &lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;, and &lt;a href=&quot;qopenglframebufferobject&quot;&gt;QOpenGLFramebufferObject&lt;/a&gt;. It is also possible to use the platform's OpenGL API directly, without using the Qt enablers, although potentially at the cost of portability. The latter is necessary when wanting to use OpenGL 1.x or OpenGL ES 1.x.</source>
          <target state="translated">QOpenGLContextが最新になったら、&lt;a href=&quot;qopenglbuffer&quot;&gt;QOpenGLFunctions&lt;/a&gt;、&lt;a href=&quot;qopenglshaderprogram&quot;&gt;QOpenGLBuffer&lt;/a&gt;、&lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions.html&quot;&gt;QOpenGLShaderProgram&lt;/a&gt;、QOpenGLFramebufferObjectなどのQtのOpenGLイネーブラーを使用して、プラットフォームに依存しない方法でQOpenGLContextにレンダリング&lt;a href=&quot;qopenglframebufferobject&quot;&gt;でき&lt;/a&gt;ます。 Qtイネーブラーを使用せずに、プラットフォームのOpenGL APIを直接使用することもできますが、移植性が犠牲になる可能性があります。後者は、OpenGL1.xまたはOpenGLES1.xを使用する場合に必要です。</target>
        </trans-unit>
        <trans-unit id="27b48feb01099b3cfeaf6cb1cbf57f32d92d8f98" translate="yes" xml:space="preserve">
          <source>Once a client is connected to a host, valid Replicas can then be acquired if the corresponding Source is being remoted.</source>
          <target state="translated">クライアントがホストに接続されると、対応するソースが再昇格している場合、有効なレプリカを取得することができます。</target>
        </trans-unit>
        <trans-unit id="865107c84714f3448d7fb0b9cda071b0e4feba9e" translate="yes" xml:space="preserve">
          <source>Once a command is pushed, the stack takes ownership of it. There are no getters to return the command, since modifying it after it has been executed will almost always lead to corruption of the document's state.</source>
          <target state="translated">一旦コマンドがプッシュされると、スタックがそのコマンドの所有権を取得します。コマンドが実行された後にコマンドを変更すると、ほとんど常にドキュメントの状態が壊れてしまうため、コマンドを返すゲッターはありません。</target>
        </trans-unit>
        <trans-unit id="5256abfdd146b98943e67f2f6ec9c59215b01a99" translate="yes" xml:space="preserve">
          <source>Once a connection is established, we can call the static function &lt;a href=&quot;qsqldatabase#database&quot;&gt;QSqlDatabase::database&lt;/a&gt;() from anywhere with a connection name to get a pointer to that database connection. If we don't pass a connection name, it will return the default connection. For example:</source>
          <target state="translated">接続が確立されたら、静的関数&lt;a href=&quot;qsqldatabase#database&quot;&gt;QSqlDatabase :: database&lt;/a&gt;（）をどこからでも接続名で呼び出して、そのデータベース接続へのポインターを取得できます。接続名を渡さない場合、デフォルトの接続が返されます。例えば：</target>
        </trans-unit>
        <trans-unit id="9e3e1292f78955db255d4d252e5a0511c1b9c9e2" translate="yes" xml:space="preserve">
          <source>Once a document has been parsed, its internal representation is maintained in the &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; instance and shared among multiple &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; instances.</source>
          <target state="translated">ドキュメントが解析されると、その内部表現は&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;インスタンスで維持され、複数の&lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;インスタンス間で共有されます。</target>
        </trans-unit>
        <trans-unit id="ab459ae4caeb629e682fb6dac38c3b74ee4d260e" translate="yes" xml:space="preserve">
          <source>Once a document has been parsed, its internal representation is maintained in the QXmlQuery instance and shared among multiple QXmlQuery instances.</source>
          <target state="translated">ドキュメントが解析されると、その内部表現は QXmlQuery インスタンスに保持され、複数の QXmlQuery インスタンス間で共有されます。</target>
        </trans-unit>
        <trans-unit id="3e617583a12847fefb05daac54125f2414156dfa" translate="yes" xml:space="preserve">
          <source>Once a font is found, the remaining attributes are matched in order of priority:</source>
          <target state="translated">フォントが見つかると、残りの属性は優先度の高い順にマッチします。</target>
        </trans-unit>
        <trans-unit id="8c022caf014d337f979e44b5cdd38456d077c269" translate="yes" xml:space="preserve">
          <source>Once a place is saved the reply contains the new identifier for that place.</source>
          <target state="translated">場所が保存されると、その場所の新しい識別子が返信されます。</target>
        </trans-unit>
        <trans-unit id="985c8565b7a16848e0e99e52adeb2e4c33ee20e9" translate="yes" xml:space="preserve">
          <source>Once a resource file is loaded, you can create or remove entries in it using the given &lt;b&gt;Add Files&lt;/b&gt;</source>
          <target state="translated">リソースファイルが読み込まれると、指定された&lt;b&gt;ファイルの追加&lt;/b&gt;を使用して、リソースファイルのエントリを作成または削除できます&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="89dca9c65c1ee78fa05b806a46ab88c2d614e34b" translate="yes" xml:space="preserve">
          <source>Once a scene render target is determined, then some global states are set.</source>
          <target state="translated">シーンのレンダーターゲットが決定されると、いくつかのグローバルステートが設定されます。</target>
        </trans-unit>
        <trans-unit id="c67240efc1ed0ad6dc10910948e36f600f7638a5" translate="yes" xml:space="preserve">
          <source>Once a service object was created for the first time, its details are yet to be discovered. This is indicated by its current &lt;a href=&quot;qlowenergyservice#state&quot;&gt;state&lt;/a&gt;() being &lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;DiscoveryRequired&lt;/a&gt;. It is only possible to retrieve the &lt;a href=&quot;qlowenergyservice#serviceUuid&quot;&gt;serviceUuid&lt;/a&gt;() and &lt;a href=&quot;qlowenergyservice#serviceName&quot;&gt;serviceName&lt;/a&gt;().</source>
          <target state="translated">サービスオブジェクトが初めて作成された後、その詳細はまだ発見されていません。これは、現在の&lt;a href=&quot;qlowenergyservice#state&quot;&gt;状態&lt;/a&gt;（）が&lt;a href=&quot;qlowenergyservice#ServiceState-enum&quot;&gt;DiscoveryRequiredで&lt;/a&gt;あることによって示されます。&lt;a href=&quot;qlowenergyservice#serviceUuid&quot;&gt;serviceUuid&lt;/a&gt;（）および&lt;a href=&quot;qlowenergyservice#serviceName&quot;&gt;serviceName&lt;/a&gt;（）のみを取得できます。</target>
        </trans-unit>
        <trans-unit id="e53733a3477bb6bf01bf485f428bc1bbf91fcb57" translate="yes" xml:space="preserve">
          <source>Once a transaction is started, subsequent calls to this function will make the transaction recursive. Inner transactions act as agents of the outermost transaction (i.e., report the status of read operations to the outermost transaction, which can restore the position of the stream).</source>
          <target state="translated">トランザクションが開始されると、この関数への後続の呼び出しにより、トランザクションは再帰的になります。内部のトランザクションは、最外のトランザクションのエージェントとして動作します(すなわち、読み込み操作のステータスを最外のトランザクションに報告し、ストリームの位置を復元することができます)。</target>
        </trans-unit>
        <trans-unit id="5a48b1bd8759f52d071295cfdc69c1cd7f1884fd" translate="yes" xml:space="preserve">
          <source>Once actions have been created, we can add them to the main window components. To begin with, we add them to the pop-up menus:</source>
          <target state="translated">アクションが作成されたら、メインウィンドウのコンポーネントに追加することができます。まず、ポップアップメニューに追加します。</target>
        </trans-unit>
        <trans-unit id="3faa39f01db6ebf3d4a8f5b16def0e447e0383ca" translate="yes" xml:space="preserve">
          <source>Once all of the main window components have been set up, the central widget is created and installed by using code similar to the following:</source>
          <target state="translated">メインウィンドウのコンポーネントをすべて設定したら、以下のようなコードを使って中央のウィジェットを作成してインストールします。</target>
        </trans-unit>
        <trans-unit id="fce4756a3b2fcb3adfa961f884ca86f0a7647bbc" translate="yes" xml:space="preserve">
          <source>Once all the meshes have been drawn, the G-Buffer is filled with all the meshes that can currently be seen by the camera. The second render pass is then used to render the scene to the back buffer with the final color shading by reading the normal, color, and position values from the G-buffer textures and outputting a color onto a full screen quad.</source>
          <target state="translated">すべてのメッシュが描画されると、Gバッファは現在カメラで見ることができるすべてのメッシュで満たされます。2回目のレンダリングパスでは、Gバッファのテクスチャから法線、色、位置の値を読み込んで、フルスクリーンのクアッドに色を出力することで、最終的なカラーシェーディングでバックバッファにシーンをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="ae1c4a2bb77b441f2cea129f7c14216ee5ea4029" translate="yes" xml:space="preserve">
          <source>Once an application has started a sensor it must wait until the sensor receives a new value before it can query the sensor's values. This is due to how the sensor receives values from the system. Sensors do not (in general) poll for new values, rather new values are pushed to the sensors as they happen.</source>
          <target state="translated">一度アプリケーションがセンサーを起動すると、センサーが新しい値を受信するまで待たなければならず、センサーの値を問い合わせることができません。これは、センサーがシステムからどのようにして値を受け取るかに起因します。センサーは(一般的に)新しい値を求めてポーリングすることはなく、むしろ新しい値が発生するとセンサーにプッシュされます。</target>
        </trans-unit>
        <trans-unit id="cf3bcacf32514d75fb5446b9cc235894721a3d4a" translate="yes" xml:space="preserve">
          <source>Once an image is unloaded it cannot be painted by the canvas context unless it is loaded again.</source>
          <target state="translated">一度アンロードされた画像は、再度ロードされない限り、キャンバスのコンテキストで描画することはできません。</target>
        </trans-unit>
        <trans-unit id="9a3adcd87693b8ec5b34e52167be155bdc60a07e" translate="yes" xml:space="preserve">
          <source>Once an image is unloaded, it cannot be painted by the canvas context unless it is loaded again.</source>
          <target state="translated">一度アンロードされた画像は、再度ロードされない限り、キャンバスのコンテキストで描画することはできません。</target>
        </trans-unit>
        <trans-unit id="daa3720dcc2e979ce83cc61dee70ef7eeb6add35" translate="yes" xml:space="preserve">
          <source>Once an install set has been fully described, you can append it to the install list with a line like this:</source>
          <target state="translated">インストールセットが完全に記述されたら、以下のような行でインストールリストに追加することができます。</target>
        </trans-unit>
        <trans-unit id="e181648ef9fa7a0206e5311b32e008cb1d0d2fac" translate="yes" xml:space="preserve">
          <source>Once an object instance is created, the value of its</source>
          <target state="translated">オブジェクトインスタンスが作成されると、そのインスタンスの</target>
        </trans-unit>
        <trans-unit id="b7d193ac2a6316f487a04fe32ee9b74c0b8dfdce" translate="yes" xml:space="preserve">
          <source>Once any setter methods are called, &lt;a href=&quot;qsslconfiguration#isNull&quot;&gt;isNull&lt;/a&gt;() will return false.</source>
          <target state="translated">setterメソッドが呼び出されると、&lt;a href=&quot;qsslconfiguration#isNull&quot;&gt;isNull&lt;/a&gt;（）はfalseを返します。</target>
        </trans-unit>
        <trans-unit id="c1ec356434daf43ee99f34ac3d62059f73505f2e" translate="yes" xml:space="preserve">
          <source>Once associated with a Shape, here is the output with a joinStyleIndex of 2 (&lt;a href=&quot;qml-qtquick-shapes-shapepath&quot;&gt;ShapePath&lt;/a&gt;.RoundJoin):</source>
          <target state="translated">Shapeに関連付けられると、joinStyleIndexが2の出力（&lt;a href=&quot;qml-qtquick-shapes-shapepath&quot;&gt;ShapePath&lt;/a&gt; .RoundJoin）は次のようになります。</target>
        </trans-unit>
        <trans-unit id="5b9e45228205ee6663abfe1434702a9a28bef19e" translate="yes" xml:space="preserve">
          <source>Once associated with a Shape, here is the output with a joinStyleIndex of 2 (ShapePath.RoundJoin):</source>
          <target state="translated">Shapeに関連付けると、以下のようにjoinStyleIndexが2(ShapePath.RoundJoin)の出力になります。</target>
        </trans-unit>
        <trans-unit id="fbe54f034d829bd5488d65cec04f9840368fb934" translate="yes" xml:space="preserve">
          <source>Once configuration completes without errors, run &lt;code&gt;cmake --build . --parallel&lt;/code&gt; to build. Once built, run &lt;code&gt;cmake --install .&lt;/code&gt; to install the results to &lt;code&gt;$HOME/qt6-rpi&lt;/code&gt;. From there the Qt build can be deployed to the device by using rsync, scp, or another method.</source>
          <target state="translated">エラーなしで構成が完了したら、 &lt;code&gt;cmake --build . --parallel&lt;/code&gt; 実行します。-ビルドと並行。ビルドしたら、 &lt;code&gt;cmake --install .&lt;/code&gt; 結果を &lt;code&gt;$HOME/qt6-rpi&lt;/code&gt; にインストールします。そこから、rsync、scp、または別の方法を使用して、Qtビルドをデバイスにデプロイできます。</target>
        </trans-unit>
        <trans-unit id="28c2436490251b915132715a74d5cd996aab2852" translate="yes" xml:space="preserve">
          <source>Once configured, a default platform plugin is chosen. This is used when launching an application without the &lt;code&gt;-platform&lt;/code&gt; argument and without having the &lt;code&gt;QT_QPA_PLATFORM&lt;/code&gt; environment variable set.</source>
          <target state="translated">構成が完了すると、デフォルトのプラットフォームプラグインが選択されます。これは、 &lt;code&gt;-platform&lt;/code&gt; 引数がなく、 &lt;code&gt;QT_QPA_PLATFORM&lt;/code&gt; 環境変数が設定されていないアプリケーションを起動するときに使用されます。</target>
        </trans-unit>
        <trans-unit id="2e4ee61e7445fa6fb6664b755a4063025b9d41f7" translate="yes" xml:space="preserve">
          <source>Once created a &lt;a href=&quot;qsound&quot;&gt;QSound&lt;/a&gt; object can be queried for its &lt;a href=&quot;qsound#fileName&quot;&gt;fileName&lt;/a&gt;() and total number of &lt;a href=&quot;qsound#loops&quot;&gt;loops&lt;/a&gt;() (i.e. the number of times the sound will play). The number of repetitions can be altered using the &lt;a href=&quot;qsound#setLoops&quot;&gt;setLoops&lt;/a&gt;() function. While playing the sound, the &lt;a href=&quot;qsound#loopsRemaining&quot;&gt;loopsRemaining&lt;/a&gt;() function returns the remaining number of repetitions. Use the &lt;a href=&quot;qsound#isFinished&quot;&gt;isFinished&lt;/a&gt;() function to determine whether the sound has finished playing.</source>
          <target state="translated">作成された&lt;a href=&quot;qsound&quot;&gt;QSound&lt;/a&gt;オブジェクトは、その&lt;a href=&quot;qsound#fileName&quot;&gt;fileName&lt;/a&gt;（）および&lt;a href=&quot;qsound#loops&quot;&gt;ループの&lt;/a&gt;総数（）（つまり、サウンドが再生される回数）を照会できます。繰り返し回数は、&lt;a href=&quot;qsound#setLoops&quot;&gt;setLoops&lt;/a&gt;（）関数を使用して変更できます。サウンドの再生中、&lt;a href=&quot;qsound#loopsRemaining&quot;&gt;loopsRemaining&lt;/a&gt;（）関数は残りの繰り返し数を返します。&lt;a href=&quot;qsound#isFinished&quot;&gt;isFinished&lt;/a&gt;（）関数を使用して、サウンドの再生が終了したかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="d75befe952fa6e9f45d4c3c951b495caa0b7ba79" translate="yes" xml:space="preserve">
          <source>Once created a QSound object can be queried for its &lt;a href=&quot;qsound#fileName&quot;&gt;fileName&lt;/a&gt;() and total number of &lt;a href=&quot;qsound#loops&quot;&gt;loops&lt;/a&gt;() (i.e. the number of times the sound will play). The number of repetitions can be altered using the &lt;a href=&quot;qsound#setLoops&quot;&gt;setLoops&lt;/a&gt;() function. While playing the sound, the &lt;a href=&quot;qsound#loopsRemaining&quot;&gt;loopsRemaining&lt;/a&gt;() function returns the remaining number of repetitions. Use the &lt;a href=&quot;qsound#isFinished&quot;&gt;isFinished&lt;/a&gt;() function to determine whether the sound has finished playing.</source>
          <target state="translated">作成されたQSoundオブジェクトは、その&lt;a href=&quot;qsound#fileName&quot;&gt;fileName&lt;/a&gt;（）と&lt;a href=&quot;qsound#loops&quot;&gt;ループの&lt;/a&gt;総数（）（つまり、サウンドが再生される回数）を照会できます。繰り返し回数は、&lt;a href=&quot;qsound#setLoops&quot;&gt;setLoops&lt;/a&gt;（）関数を使用して変更できます。サウンドの再生中、&lt;a href=&quot;qsound#loopsRemaining&quot;&gt;loopsRemaining&lt;/a&gt;（）関数は残りの繰り返し回数を返します。&lt;a href=&quot;qsound#isFinished&quot;&gt;isFinished&lt;/a&gt;（）関数を使用して、サウンドの再生が終了したかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="a80eaeebd004cac4f94cd86d98f54dd28509f27b" translate="yes" xml:space="preserve">
          <source>Once created, &lt;a href=&quot;qvideofilterrunnable&quot;&gt;QVideoFilterRunnable&lt;/a&gt; instances are managed by Qt Multimedia and will be automatically destroyed and recreated when necessary, for example when the scene graph is invalidated or the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; changes or is closed. Creation happens via the &lt;a href=&quot;qabstractvideofilter#createFilterRunnable&quot;&gt;QAbstractVideoFilter::createFilterRunnable&lt;/a&gt;() factory function.</source>
          <target state="translated">作成されると、&lt;a href=&quot;qvideofilterrunnable&quot;&gt;QVideoFilterRunnable&lt;/a&gt;インスタンスはQt Multimediaによって管理され、シーングラフが無効化されたり、&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;が変更されたり閉じられたりした場合など、必要に応じて自動的に破棄および再作成されます。作成は&lt;a href=&quot;qabstractvideofilter#createFilterRunnable&quot;&gt;QAbstractVideoFilter :: createFilterRunnable&lt;/a&gt;（）ファクトリ関数を介して行われます。</target>
        </trans-unit>
        <trans-unit id="90e9e520f8e108e89973fd36b6533fc5acffc187" translate="yes" xml:space="preserve">
          <source>Once created, QVideoFilterRunnable instances are managed by Qt Multimedia and will be automatically destroyed and recreated when necessary, for example when the scene graph is invalidated or the &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; changes or is closed. Creation happens via the &lt;a href=&quot;qabstractvideofilter#createFilterRunnable&quot;&gt;QAbstractVideoFilter::createFilterRunnable&lt;/a&gt;() factory function.</source>
          <target state="translated">作成されると、QVideoFilterRunnableインスタンスはQtマルチメディアによって管理され、シーングラフが無効になったり、&lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;が変更または閉じられたりした場合など、必要に応じて自動的に破棄および再作成されます。作成は、&lt;a href=&quot;qabstractvideofilter#createFilterRunnable&quot;&gt;QAbstractVideoFilter :: createFilterRunnable&lt;/a&gt;（）ファクトリ関数を介して行われます。</target>
        </trans-unit>
        <trans-unit id="cd5e2fb5148480d8fcfc9bd868cceb10c5f8a778" translate="yes" xml:space="preserve">
          <source>Once created, the object provides functions to access the individual metrics of the font, its characters, and for strings rendered in the font.</source>
          <target state="translated">作成されると、このオブジェクトは、フォントとその文字、そしてフォントでレンダリングされた文字列の個々のメトリクスにアクセスするための関数を提供します。</target>
        </trans-unit>
        <trans-unit id="1340e8fa34d48e4b5e320a1558f7bb4ee5e8ed98" translate="yes" xml:space="preserve">
          <source>Once created, the properties of a menu can be accessed using the &lt;a href=&quot;designer-widget-mode#the-property-editor&quot;&gt;Property Editor&lt;/a&gt;, and each menu can be accessed for this purpose via the &lt;a href=&quot;designer-widget-mode#the-object-inspector&quot;&gt;The Object Inspector&lt;/a&gt;.</source>
          <target state="translated">作成されたメニューのプロパティには、&lt;a href=&quot;designer-widget-mode#the-property-editor&quot;&gt;プロパティエディター&lt;/a&gt;を使用してアクセスできます。各メニューには、&lt;a href=&quot;designer-widget-mode#the-object-inspector&quot;&gt;オブジェクトインスペクターを&lt;/a&gt;介してこの目的でアクセスできます。</target>
        </trans-unit>
        <trans-unit id="4318286cc00389860c860891593d046999063bf7" translate="yes" xml:space="preserve">
          <source>Once created, timer queries can be issued in one of several ways. The simplest method is to delimit a block of commands with calls to &lt;a href=&quot;qopengltimerquery#begin&quot;&gt;begin&lt;/a&gt;() and &lt;a href=&quot;qopengltimerquery#end&quot;&gt;end&lt;/a&gt;(). This instructs OpenGL to measure the time taken from completing all commands issued prior to &lt;a href=&quot;qopengltimerquery#begin&quot;&gt;begin&lt;/a&gt;() until the completion of all commands issued prior to &lt;a href=&quot;qopengltimerquery#end&quot;&gt;end&lt;/a&gt;().</source>
          <target state="translated">作成したタイマークエリは、いくつかの方法のいずれかで発行できます。最も簡単な方法は、コマンドのブロックを&lt;a href=&quot;qopengltimerquery#begin&quot;&gt;begin&lt;/a&gt;（）および&lt;a href=&quot;qopengltimerquery#end&quot;&gt;end&lt;/a&gt;（）の呼び出しで区切ることです。これは、前に発行されたすべてのコマンドの完了から取られた時間を測定するためにOpenGLを指示し&lt;a href=&quot;qopengltimerquery#begin&quot;&gt;始める&lt;/a&gt;前に発行されたすべてのコマンドが完了するまで（）を&lt;a href=&quot;qopengltimerquery#end&quot;&gt;終了&lt;/a&gt;（）を。</target>
        </trans-unit>
        <trans-unit id="3563861d604d9a741f2f3133b5b1fd396a55a5de" translate="yes" xml:space="preserve">
          <source>Once disconnected, calling &lt;a href=&quot;qdbusconnection#connectToBus&quot;&gt;connectToBus&lt;/a&gt;() will not reestablish a connection, you must create a new &lt;a href=&quot;qdbusconnection&quot;&gt;QDBusConnection&lt;/a&gt; instance.</source>
          <target state="translated">切断されると、&lt;a href=&quot;qdbusconnection#connectToBus&quot;&gt;connectToBus&lt;/a&gt;（）を呼び出しても接続が再確立されないため、新しい&lt;a href=&quot;qdbusconnection&quot;&gt;QDBusConnection&lt;/a&gt;インスタンスを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="7f10a3fd1de6e8469321a24bbb5dede1b4a5c772" translate="yes" xml:space="preserve">
          <source>Once disconnected, calling &lt;a href=&quot;qdbusconnection#connectToBus&quot;&gt;connectToBus&lt;/a&gt;() will not reestablish a connection, you must create a new QDBusConnection instance.</source>
          <target state="translated">切断されると、&lt;a href=&quot;qdbusconnection#connectToBus&quot;&gt;connectToBus&lt;/a&gt;（）を呼び出しても接続は再確立されないため、新しいQDBusConnectionインスタンスを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="0a771404be80a49f1bcd8129102f800ceae68ca3" translate="yes" xml:space="preserve">
          <source>Once enabled, applications have two typical choices to perform offscreen rendering in headless mode:</source>
          <target state="translated">有効にすると、アプリケーションには、ヘッドレスモードでオフスクリーンレンダリングを実行するための典型的な2つの選択肢があります。</target>
        </trans-unit>
        <trans-unit id="af11aa38925611d44c0c3134bc9e277087c165b5" translate="yes" xml:space="preserve">
          <source>Once encrypted, you use &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; as a regular &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. When &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() is emitted, you can call &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#canReadLine&quot;&gt;canReadLine&lt;/a&gt;() and &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), or &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;() to read decrypted data from &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;'s internal buffer, and you can call &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() or &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;() to write data back to the peer. &lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt; will automatically encrypt the written data for you, and emit &lt;a href=&quot;qsslsocket#encryptedBytesWritten&quot;&gt;encryptedBytesWritten&lt;/a&gt;() once the data has been written to the peer.</source>
          <target state="translated">暗号化したら、&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;を通常の&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;として使用します。とき&lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyReadは&lt;/a&gt;（）放出され、あなたが呼び出すことができ&lt;a href=&quot;qiodevice#read&quot;&gt;、読み取り&lt;/a&gt;（）、&lt;a href=&quot;qsslsocket#canReadLine&quot;&gt;canReadLine&lt;/a&gt;（）と&lt;a href=&quot;qiodevice#readLine&quot;&gt;のreadLine&lt;/a&gt;（）、または&lt;a href=&quot;qiodevice#getChar&quot;&gt;GETCHARを&lt;/a&gt;から復号化されたデータを読み取るために（）&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;の内部バッファ、あなたが呼び出すことができ&lt;a href=&quot;qiodevice#write&quot;&gt;、書き込み&lt;/a&gt;（）または&lt;a href=&quot;qiodevice#putChar&quot;&gt;putCharのを&lt;/a&gt;書き込みします（）ピアにデータを戻します。&lt;a href=&quot;qsslsocket&quot;&gt;QSslSocket&lt;/a&gt;は、書き込まれたデータを自動的に暗号化し、データがピアに書き込まれると、&lt;a href=&quot;qsslsocket#encryptedBytesWritten&quot;&gt;encryptedBytesWritten&lt;/a&gt;（）を発行します。</target>
        </trans-unit>
        <trans-unit id="524296a6b17edcdcde8b7d9d05a0f6ae76f3770d" translate="yes" xml:space="preserve">
          <source>Once encrypted, you use QSslSocket as a regular &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;. When &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() is emitted, you can call &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qsslsocket#canReadLine&quot;&gt;canReadLine&lt;/a&gt;() and &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), or &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;() to read decrypted data from QSslSocket's internal buffer, and you can call &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() or &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;() to write data back to the peer. QSslSocket will automatically encrypt the written data for you, and emit &lt;a href=&quot;qsslsocket#encryptedBytesWritten&quot;&gt;encryptedBytesWritten&lt;/a&gt;() once the data has been written to the peer.</source>
          <target state="translated">暗号化したら、QSslSocketを通常の&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;として使用します。とき&lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyReadは&lt;/a&gt;（）放出され、あなたが呼び出すことができ&lt;a href=&quot;qiodevice#read&quot;&gt;、読み取り&lt;/a&gt;（）、&lt;a href=&quot;qsslsocket#canReadLine&quot;&gt;canReadLine&lt;/a&gt;（）と&lt;a href=&quot;qiodevice#readLine&quot;&gt;のreadLine&lt;/a&gt;（）、または&lt;a href=&quot;qiodevice#getChar&quot;&gt;GETCHARを&lt;/a&gt;QSslSocketの内部バッファから復号化されたデータを読み取るために（）、あなたが呼び出すことができ&lt;a href=&quot;qiodevice#write&quot;&gt;、書き込み&lt;/a&gt;（）または&lt;a href=&quot;qiodevice#putChar&quot;&gt;putCharの&lt;/a&gt;書き込みデータのバックには（）ピアに。 QSslSocketは、書き込まれたデータを自動的に暗号化し、データがピアに書き込まれると、&lt;a href=&quot;qsslsocket#encryptedBytesWritten&quot;&gt;encryptedBytesWritten&lt;/a&gt;（）を発行します。</target>
        </trans-unit>
        <trans-unit id="47fd7e76dcd700654b875f9d31d09a0ed43c1e0f" translate="yes" xml:space="preserve">
          <source>Once individual animations are placed into a &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt;, they can no longer be started and stopped independently. The sequential or parallel animation must be started and stopped as a group.</source>
          <target state="translated">個々のアニメーションを&lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt;または&lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimationに&lt;/a&gt;配置すると、それらを個別に開始および停止することはできなくなります。順次または並列アニメーションは、グループとして開始および停止する必要があります。</target>
        </trans-unit>
        <trans-unit id="c7065d1862b32bf508458b0290a47c13567e0119" translate="yes" xml:space="preserve">
          <source>Once invalidate() has been called, it is possible to reuse the &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; instance by calling &lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;initialize&lt;/a&gt;() again.</source>
          <target state="translated">invalidate（）が呼び出されたら、&lt;a href=&quot;qquickrendercontrol#initialize&quot;&gt;initialize&lt;/a&gt;（）を再度呼び出すことで&lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;インスタンスを再利用できます。</target>
        </trans-unit>
        <trans-unit id="a86569ce76e4c0379ce20067c838e075579f2bf0" translate="yes" xml:space="preserve">
          <source>Once loaded, plugins remain in memory until all instances of &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; has been unloaded, or until the application terminates. You can attempt to unload a plugin using &lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;(), but if other instances of &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; are using the same library, the call will fail, and unloading will only happen when every instance has called &lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;(). Right before the unloading happens, the root component will also be deleted.</source>
          <target state="translated">ロードされたプラグインは、&lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoaderの&lt;/a&gt;すべてのインスタンスがアンロードされるまで、またはアプリケーションが終了するまでメモリに残ります。&lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;（）を使用してプラグインをアンロードできますが、&lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoaderの&lt;/a&gt;他のインスタンスが同じライブラリを使用している場合、呼び出しは失敗し、&lt;a href=&quot;qpluginloader#unload&quot;&gt;アンロード&lt;/a&gt;はすべてのインスタンスがunload（）を呼び出したときにのみ発生します。アンロードが発生する直前に、ルートコンポーネントも削除されます。</target>
        </trans-unit>
        <trans-unit id="d6ed3cb72b2e312789ec57318a1cb6fc7e9e81c8" translate="yes" xml:space="preserve">
          <source>Once loaded, plugins remain in memory until all instances of QPluginLoader has been unloaded, or until the application terminates. You can attempt to unload a plugin using &lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;(), but if other instances of QPluginLoader are using the same library, the call will fail, and unloading will only happen when every instance has called &lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;(). Right before the unloading happens, the root component will also be deleted.</source>
          <target state="translated">ロードされると、プラグインはQPluginLoaderのすべてのインスタンスがアンロードされるまで、またはアプリケーションが終了するまでメモリに残ります。&lt;a href=&quot;qpluginloader#unload&quot;&gt;アンロード&lt;/a&gt;（）を使用してプラグインのアンロードを試みることができますが、QPluginLoaderの他のインスタンスが同じライブラリを使用している場合、呼び出しは失敗し、すべてのインスタンスが&lt;a href=&quot;qpluginloader#unload&quot;&gt;アンロード&lt;/a&gt;（）を呼び出した場合にのみアンロードが発生します。アンロードが発生する直前に、ルートコンポーネントも削除されます。</target>
        </trans-unit>
        <trans-unit id="4fc26d0a14582bafdc9354c84ba528981f69fdec" translate="yes" xml:space="preserve">
          <source>Once opaque primitives have been drawn, the renderer will disable &lt;code&gt;glDepthMask&lt;/code&gt;, enable &lt;code&gt;GL_BLEND&lt;/code&gt; and render all alpha blended primitives in a back-to-front manner.</source>
          <target state="translated">不透明なプリミティブが描かれていたら、レンダラは無効になります &lt;code&gt;glDepthMask&lt;/code&gt; を、有効 &lt;code&gt;GL_BLEND&lt;/code&gt; を、バックツーフロントの方法で、すべてのアルファブレンドされたプリミティブをレンダリングします。</target>
        </trans-unit>
        <trans-unit id="b9db82184c27bdceb25bd1b08e3b5517bb8c8615" translate="yes" xml:space="preserve">
          <source>Once positioned, sub-controls can be styled using the &lt;a href=&quot;#box-model&quot;&gt;box model&lt;/a&gt;.</source>
          <target state="translated">配置したら、&lt;a href=&quot;#box-model&quot;&gt;ボックスモデル&lt;/a&gt;を使用してサブコントロールのスタイルを設定できます。</target>
        </trans-unit>
        <trans-unit id="484b85ea705b1bd2325d91eb3cedad5857196062" translate="yes" xml:space="preserve">
          <source>Once positioned, sub-controls can be styled using the &lt;a href=&quot;stylesheet-customizing#box-model&quot;&gt;box model&lt;/a&gt;.</source>
          <target state="translated">配置したら、&lt;a href=&quot;stylesheet-customizing#box-model&quot;&gt;ボックスモデル&lt;/a&gt;を使用してサブコントロールのスタイルを設定できます。</target>
        </trans-unit>
        <trans-unit id="e44aa1cb73bede9c422aed8bc491a71274d8dc04" translate="yes" xml:space="preserve">
          <source>Once positioned, they are treated the same as widgets and can be styled using the &lt;a href=&quot;stylesheet-customizing#box-model&quot;&gt;box model&lt;/a&gt;.</source>
          <target state="translated">配置されると、ウィジェットと同じように扱われ、&lt;a href=&quot;stylesheet-customizing#box-model&quot;&gt;ボックスモデル&lt;/a&gt;を使用してスタイルを設定できます。</target>
        </trans-unit>
        <trans-unit id="011ec39e07e233ee8b7dbb26cded772667837811" translate="yes" xml:space="preserve">
          <source>Once registered, a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; singleton type may be imported and used like any other &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; instance exposed to QML. The following example assumes that a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; singleton type was registered into the &quot;MyThemeModule&quot; namespace with version 1.0, where that &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; has a &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &quot;color&quot; &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;:</source>
          <target state="translated">登録すると、&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;シングルトンタイプをインポートして、QMLに公開される他の&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;インスタンスと同様に使用できます。次の例では、&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;シングルトンタイプがバージョン1.0の「MyThemeModule」名前空間に登録され、その&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;に&lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; &quot;color&quot; &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;が設定されていると想定しています。</target>
        </trans-unit>
        <trans-unit id="f212ed18637128978ee635a7f85b1291a909b355" translate="yes" xml:space="preserve">
          <source>Once registered, a type can be used in outgoing method calls (placed with &lt;a href=&quot;qdbusabstractinterface#call&quot;&gt;QDBusAbstractInterface::call&lt;/a&gt;()), signal emissions from registered objects or in incoming calls from remote applications.</source>
          <target state="translated">登録すると、タイプは発信メソッド呼び出し（&lt;a href=&quot;qdbusabstractinterface#call&quot;&gt;QDBusAbstractInterface :: call&lt;/a&gt;（）で配置）、登録済みオブジェクトからのシグナルエミッション、またはリモートアプリケーションからの着信呼び出しで使用できます。</target>
        </trans-unit>
        <trans-unit id="706ea40b430397571f95b08454d9fda927d95a54" translate="yes" xml:space="preserve">
          <source>Once registered, a type can be used in outgoing method calls (placed with &lt;a href=&quot;qdbusabstractinterface#call-1&quot;&gt;QDBusAbstractInterface::call&lt;/a&gt;()), signal emissions from registered objects or in incoming calls from remote applications.</source>
          <target state="translated">登録されると、タイプは、発信メソッド呼び出し（&lt;a href=&quot;qdbusabstractinterface#call-1&quot;&gt;QDBusAbstractInterface :: call&lt;/a&gt;（）で配置）、登録されたオブジェクトからのシグナル放出、またはリモートアプリケーションからの着信呼び出しで使用できます。</target>
        </trans-unit>
        <trans-unit id="76fdb923b97b3639512618d76df193ba658ae763" translate="yes" xml:space="preserve">
          <source>Once registered, all signals and property changes are automatically propagated to the clients. Public invokable methods, including slots, are also accessible to the clients.</source>
          <target state="translated">登録されると、すべてのシグナルとプロパティの変更は自動的にクライアントに伝搬されます。スロットを含むパブリックな呼び出し可能なメソッドもクライアントからアクセス可能です。</target>
        </trans-unit>
        <trans-unit id="2af748be4364a6f16ee59c52d59a11b686fe9cc1" translate="yes" xml:space="preserve">
          <source>Once registered, the type can be used in QML by importing the same type namespace and version number:</source>
          <target state="translated">一度登録した型は、同じ型名空間とバージョン番号をインポートすることで、QMLで使用することができます。</target>
        </trans-unit>
        <trans-unit id="88b7ecce84bef0c2b0872f0d6adfa7fbba28ea6b" translate="yes" xml:space="preserve">
          <source>Once simpleEffect is available, it can be associated with the effects list of a the &lt;a href=&quot;qml-qtquick3d-view3d&quot;&gt;View3D&lt;/a&gt;'s &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt;:</source>
          <target state="translated">simpleEffectが利用可能になると、それはのエフェクトリストに関連付けることができます&lt;a href=&quot;qml-qtquick3d-view3d&quot;&gt;ビュー3D&lt;/a&gt;の&lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="9b2acb02284decccb2539c681f480973c653d7a5" translate="yes" xml:space="preserve">
          <source>Once storage has been allocated for the texture then pixel data can be uploaded via one of the &lt;a href=&quot;qopengltexture#setData&quot;&gt;setData&lt;/a&gt;() overloads.</source>
          <target state="translated">テクスチャにストレージが割り当てられると、&lt;a href=&quot;qopengltexture#setData&quot;&gt;setData&lt;/a&gt;（）オーバーロードの1つを介してピクセルデータをアップロードできます。</target>
        </trans-unit>
        <trans-unit id="4066d6598bee2916f9c3b08e94545af3dd0223ef" translate="yes" xml:space="preserve">
          <source>Once storage has been allocated it is no longer possible to change these properties.</source>
          <target state="translated">ストレージが割り当てられた後は、これらのプロパティを変更することはできなくなります。</target>
        </trans-unit>
        <trans-unit id="bf5fd6231cbbc871a1f444bb695dec4a43eaab55" translate="yes" xml:space="preserve">
          <source>Once the &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; object has been created, set the connection parameters with &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;setDatabaseName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;setUserName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;setPassword&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;setHostName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPort&quot;&gt;setPort&lt;/a&gt;(), and &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setConnectOptions&lt;/a&gt;(). Then call &lt;a href=&quot;qsqldatabase#open&quot;&gt;open&lt;/a&gt;() to activate the physical connection to the database. The connection is not usable until you open it.</source>
          <target state="translated">一度&lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabaseの&lt;/a&gt;オブジェクトが作成されている、との接続パラメータを設定&lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;setDataBaseNameメソッド&lt;/a&gt;（）、&lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;setUserName&lt;/a&gt;（）、&lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;のsetPassword&lt;/a&gt;（）、&lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;setHostName&lt;/a&gt;（）、&lt;a href=&quot;qsqldatabase#setPort&quot;&gt;setPort&lt;/a&gt;（）、及び&lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setConnectOptions&lt;/a&gt;（）。次に、&lt;a href=&quot;qsqldatabase#open&quot;&gt;open&lt;/a&gt;（）を呼び出して、データベースへの物理接続をアクティブにします。接続は、開くまで使用できません。</target>
        </trans-unit>
        <trans-unit id="d693e653a5aefa95f90913cd528053a2853d850b" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;RandomNumberGenerator&lt;/code&gt; class has been registered with the QML type system, it can be used from QML as a property value source. Below, it is used to change the width of a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; every 500 milliseconds:</source>
          <target state="translated">一旦 &lt;code&gt;RandomNumberGenerator&lt;/code&gt; のクラスはQML型システムに登録されている、それは、プロパティ値のソースとしてQMLから使用することができます。以下では、500ミリ秒ごとに&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;四角形&lt;/a&gt;の幅を変更するために使用されます。</target>
        </trans-unit>
        <trans-unit id="dc4e61b0e31d8ea0efe7e1ce13e7532a4eec072f" translate="yes" xml:space="preserve">
          <source>Once the HTML documents are in place, a &lt;a href=&quot;qthelpproject&quot;&gt;Qt Help Project&lt;/a&gt; file, with an extension of &lt;code&gt;.qhp&lt;/code&gt;, has to be created. After specifying all the relevant information in this file, it needs to be compiled by calling:</source>
          <target state="translated">HTMLドキュメントを配置したら、拡張子が &lt;code&gt;.qhp&lt;/code&gt; の&lt;a href=&quot;qthelpproject&quot;&gt;Qtヘルププロジェクト&lt;/a&gt;ファイルを作成する必要があります。このファイルですべての関連情報を指定した後、次のコマンドを呼び出してコンパイルする必要があります。</target>
        </trans-unit>
        <trans-unit id="56ae2c1e1c709d43479f94e48c10b97999f58390" translate="yes" xml:space="preserve">
          <source>Once the HTML documents are in place, a &lt;a href=&quot;qthelpproject#&quot;&gt;Qt Help Project&lt;/a&gt; file, with an extension of &lt;code&gt;.qhp&lt;/code&gt;, has to be created. After specifying all the relevant information in this file, it needs to be compiled by calling:</source>
          <target state="translated">HTMLドキュメントを配置したら、拡張子が &lt;code&gt;.qhp&lt;/code&gt; の&lt;a href=&quot;qthelpproject#&quot;&gt;Qtヘルププロジェクト&lt;/a&gt;ファイルを作成する必要があります。このファイルにすべての関連情報を指定した後、次を呼び出してコンパイルする必要があります。</target>
        </trans-unit>
        <trans-unit id="550dc13bcc47d73cb367af625b17c1f72d056570" translate="yes" xml:space="preserve">
          <source>Once the QSqlDatabase object has been created, set the connection parameters with &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;setDatabaseName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;setUserName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;setPassword&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;setHostName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPort&quot;&gt;setPort&lt;/a&gt;(), and &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setConnectOptions&lt;/a&gt;(). Then call &lt;a href=&quot;qsqldatabase#open&quot;&gt;open&lt;/a&gt;() to activate the physical connection to the database. The connection is not usable until you open it.</source>
          <target state="translated">QSqlDatabaseオブジェクトが作成されたら、との接続パラメータを設定&lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;setDataBaseNameメソッド&lt;/a&gt;（）、&lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;setUserName&lt;/a&gt;（）、&lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;のsetPassword&lt;/a&gt;（）、&lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;setHostName&lt;/a&gt;（）、&lt;a href=&quot;qsqldatabase#setPort&quot;&gt;setPort&lt;/a&gt;（）、及び&lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setConnectOptions&lt;/a&gt;（）。次に、&lt;a href=&quot;qsqldatabase#open&quot;&gt;open&lt;/a&gt;（）を呼び出して、データベースへの物理接続をアクティブにします。接続は、開くまで使用できません。</target>
        </trans-unit>
        <trans-unit id="4b0109c40367a76a7f8e8bd52850331515ed5a56" translate="yes" xml:space="preserve">
          <source>Once the Qt build is done and installed to the staging location, examples or applications can be built.</source>
          <target state="translated">Qtビルドが完了し、ステージングの場所にインストールされると、例やアプリケーションをビルドすることができます。</target>
        </trans-unit>
        <trans-unit id="9bb5a703a85da112bfdfb22564c6b753fb342d2b" translate="yes" xml:space="preserve">
          <source>Once the action is created, it can be used wherever actions are applicable.</source>
          <target state="translated">アクションが作成されると、アクションが適用可能な場所であればどこでも使用することができます。</target>
        </trans-unit>
        <trans-unit id="d1f4caca220052a1d05453a5cf60436aa66ce30c" translate="yes" xml:space="preserve">
          <source>Once the animation clip has been populated with data using the above methods, the read-only duration property will be updated by the Qt 3D Animation backend.</source>
          <target state="translated">上記の方法でアニメーションクリップにデータが入力されると、Qt 3Dアニメーションのバックエンドによって読み取り専用のデュレーションプロパティが更新されます。</target>
        </trans-unit>
        <trans-unit id="205b5c208dd11021e42c1f0cb029c8ea2f565ea8" translate="yes" xml:space="preserve">
          <source>Once the application is prepared for publishing, you can create a listing for it in Google Play.</source>
          <target state="translated">アプリを公開する準備ができたら、Google Playにアプリのリスティングを作成します。</target>
        </trans-unit>
        <trans-unit id="ea0b767aded5ed6d7f67a23165e680f703e3eddf" translate="yes" xml:space="preserve">
          <source>Once the callback passed to the &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; object is invoked, the channel has finished initialization and all published objects are accessible to the HTML client via the &lt;code&gt;channel.objects&lt;/code&gt; property. Thus, assuming an object was published with the identifier &quot;foo&quot;, then we can interact with it as shown in the example below. Note that all communication between the HTML client and the QML/C++ server is asynchronous. Properties are cached on the HTML side. Furthermore keep in mind that only QML/C++ data types which can be converted to JSON will be (de-)serialized properly and thus accessible to HTML clients.</source>
          <target state="translated">&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt;オブジェクトに渡されたコールバックが呼び出されると、チャネルは初期化を完了し、公開されたすべてのオブジェクトは、 &lt;code&gt;channel.objects&lt;/code&gt; プロパティを介してHTMLクライアントにアクセスできます。したがって、オブジェクトが識別子「foo」で公開されたと仮定すると、以下の例に示すように、オブジェクトと対話できます。 HTMLクライアントとQML / C ++サーバー間のすべての通信は非同期であることに注意してください。プロパティはHTML側でキャッシュされます。さらに、JSONに変換できるQML / C ++データ型のみが適切に（逆）シリアル化され、HTMLクライアントからアクセスできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4870e02dd16024ea585e0185e39f0f403481f28d" translate="yes" xml:space="preserve">
          <source>Once the character format has been used with a cursor, that format becomes the default format for any text inserted with that cursor until another character format is specified.</source>
          <target state="translated">文字フォーマットがカーソルで使用されると、そのフォーマットは、別の文字フォーマットが指定されるまで、そのカーソルで挿入されたテキストのデフォルトフォーマットになります。</target>
        </trans-unit>
        <trans-unit id="496af005595ecb484db08b997602438633276ba2" translate="yes" xml:space="preserve">
          <source>Once the component cache has been cleared, components must be loaded before any new objects can be created.</source>
          <target state="translated">コンポーネントキャッシュがクリアされると、新しいオブジェクトを作成する前にコンポーネントをロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="d478d6665153cbfa2af22f055007c65ef12929ba" translate="yes" xml:space="preserve">
          <source>Once the image is ready, &lt;a href=&quot;qml-qtquick-canvas#imageLoaded-signal&quot;&gt;imageLoaded()&lt;/a&gt; signal will be emitted. The loaded image can be unloaded with the &lt;a href=&quot;qml-qtquick-canvas#unloadImage-method&quot;&gt;unloadImage()&lt;/a&gt; method.</source>
          <target state="translated">画像の準備が整うと、&lt;a href=&quot;qml-qtquick-canvas#imageLoaded-signal&quot;&gt;imageLoaded（）&lt;/a&gt;シグナルが送信されます。ロードされたイメージは、&lt;a href=&quot;qml-qtquick-canvas#unloadImage-method&quot;&gt;unloadImage（）&lt;/a&gt;メソッドを使用してアンロードできます。</target>
        </trans-unit>
        <trans-unit id="bc50afa14e96afab3d5b302b5c8574825cc0c758" translate="yes" xml:space="preserve">
          <source>Once the implementation is done, the class needs to be registered to make it visible in QML</source>
          <target state="translated">実装が完了したら、QMLで表示するためにクラスを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="c23878cf26f59a37f5b55e0c5b866fe62d4c572e" translate="yes" xml:space="preserve">
          <source>Once the items have been successfully registered in the store, you can purchase them. Get the previously registered &lt;a href=&quot;qinappproduct&quot;&gt;QInAppProduct&lt;/a&gt; using &lt;a href=&quot;qinappstore#registeredProduct&quot;&gt;registeredProduct&lt;/a&gt;() and call &lt;a href=&quot;qinappproduct#purchase&quot;&gt;QInAppProduct::purchase&lt;/a&gt;(). This call is also asynchronous.</source>
          <target state="translated">アイテムがストアに正常に登録されると、アイテムを購入できます。&lt;a href=&quot;qinappstore#registeredProduct&quot;&gt;registeredProduct&lt;/a&gt;（）を使用して以前に登録した&lt;a href=&quot;qinappproduct&quot;&gt;QInAppProduct&lt;/a&gt;を取得し、&lt;a href=&quot;qinappproduct#purchase&quot;&gt;QInAppProduct :: purchase&lt;/a&gt;（）を呼び出します。この呼び出しも非同期です。</target>
        </trans-unit>
        <trans-unit id="b5dda2fa2d7123529d9fd69fe7226be909e75bed" translate="yes" xml:space="preserve">
          <source>Once the machine is started, we can post events to it.</source>
          <target state="translated">マシンが起動したら、そこにイベントを投稿することができます。</target>
        </trans-unit>
        <trans-unit id="f87051ba877349a528b632247c69a275e5b35131" translate="yes" xml:space="preserve">
          <source>Once the manifest is added to your project, you can modify it. The most important parts are the application name and the package name. The package name must be unique, and it is recommended to follow the com.mycompany.myappname naming convention. The &quot;com.mycompany&quot; namespace is based on the Internet domain ownership to avoid naming collisions with other applications.</source>
          <target state="translated">マニフェストがプロジェクトに追加されたら、それを変更することができます。最も重要なのは、アプリケーション名とパッケージ名です。パッケージ名は一意でなければならず、com.mycompany.myappname の命名規則に従うことをお勧めします。com.mycompany」名前空間は、他のアプリケーションとの命名衝突を避けるために、インターネットドメインの所有権に基づいています。</target>
        </trans-unit>
        <trans-unit id="f521cefaaba3fda658fcaf0b5cd9bc12020db606" translate="yes" xml:space="preserve">
          <source>Once the numerical segments have been parsed, the remainder of the string is considered to be the suffix string. The start index of that string will be stored in</source>
          <target state="translated">数値セグメントが解析されると、残りの文字列はサフィックス文字列とみなされます。その文字列の開始インデックスは</target>
        </trans-unit>
        <trans-unit id="f1302f6bf7bb8a9fd947b5e568d478ba086c5f3a" translate="yes" xml:space="preserve">
          <source>Once the operation has completed, &lt;a href=&quot;qgeocodereply#locations&quot;&gt;QGeoCodeReply::locations&lt;/a&gt;() can be used to retrieve the results, which will consist of a list of &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; objects. These objects represent a combination of coordinate and address data.</source>
          <target state="translated">操作が完了すると、&lt;a href=&quot;qgeocodereply#locations&quot;&gt;QGeoCodeReply :: locations&lt;/a&gt;（）を使用して結果を取得できます。結果は&lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt;オブジェクトのリストで構成されます。これらのオブジェクトは、座標データと住所データの組み合わせを表します。</target>
        </trans-unit>
        <trans-unit id="01b5acac21beaef0597f322faf8c937236d32d9e" translate="yes" xml:space="preserve">
          <source>Once the operation has completed, &lt;a href=&quot;qgeoroutereply#routes&quot;&gt;QGeoRouteReply::routes&lt;/a&gt; can be used to retrieve the calculated route or routes.</source>
          <target state="translated">操作が完了すると、&lt;a href=&quot;qgeoroutereply#routes&quot;&gt;QGeoRouteReply :: routes&lt;/a&gt;を使用して、計算された1つまたは複数のルートを取得できます。</target>
        </trans-unit>
        <trans-unit id="0a1009ef434c48bb9be4042007fd562ae5ccb125" translate="yes" xml:space="preserve">
          <source>Once the operation has completed, &lt;a href=&quot;qgeoroutereply#routes&quot;&gt;QGeoRouteReply::routes&lt;/a&gt; can be used to retrieve the updated route.</source>
          <target state="translated">操作が完了すると、&lt;a href=&quot;qgeoroutereply#routes&quot;&gt;QGeoRouteReply :: routes&lt;/a&gt;を使用して更新されたルートを取得できます。</target>
        </trans-unit>
        <trans-unit id="d8237d24f440ae3aaa3b7945827ee52601fc76fe" translate="yes" xml:space="preserve">
          <source>Once the plugin is set, create a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; with the appropriate waypoints and other settings, and set the &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;'s &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property. If &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is enabled, the update will being automatically. Otherwise, the &lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;update&lt;/a&gt; method may be used. By default, &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is disabled.</source>
          <target state="translated">プラグインが設定されると、作成&lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQueryを&lt;/a&gt;適切なウェイポイントや他の設定で、そして設定&lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;の&lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;クエリ&lt;/a&gt;プロパティを。場合は&lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;自動更新が&lt;/a&gt;有効になっている、更新が自動的にされます。それ以外の場合は、&lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;更新&lt;/a&gt;メソッドを使用できます。デフォルトでは、&lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt;は無効になっています。</target>
        </trans-unit>
        <trans-unit id="eef2855a47b2cc4af71a18bffd9ce510d7f34242" translate="yes" xml:space="preserve">
          <source>Once the plugin is set, create a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; with the appropriate waypoints and other settings, and set the RouteModel's &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property. If &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is enabled, the update will being automatically. Otherwise, the &lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;update&lt;/a&gt; method may be used. By default, &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is disabled.</source>
          <target state="translated">プラグインを設定したら、適切なウェイポイントやその他の設定を使用して&lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt;を作成し、RouteModelの&lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt;プロパティを設定します。場合は&lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;自動更新が&lt;/a&gt;有効になっている、更新が自動的にされます。それ以外の場合は、&lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;更新&lt;/a&gt;方法が使用される可能性があります。デフォルトでは、&lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt;は無効になっています。</target>
        </trans-unit>
        <trans-unit id="2a4a4e9814333870e00d88728fd47606694571eb" translate="yes" xml:space="preserve">
          <source>Once the plugin is set, the &lt;a href=&quot;qml-qtlocation-geocodemodel#query-prop&quot;&gt;query&lt;/a&gt; property can be used to specify the address or search string to match. If &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is enabled, the Model will update its output automatically. Otherwise, the &lt;a href=&quot;qml-qtlocation-geocodemodel#update-method&quot;&gt;update&lt;/a&gt; method may be used. By default, &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; is disabled.</source>
          <target state="translated">プラグインが設定されると、&lt;a href=&quot;qml-qtlocation-geocodemodel#query-prop&quot;&gt;クエリ&lt;/a&gt;プロパティを使用して、一致するアドレスまたは検索文字列を指定できます。場合は&lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;自動更新が&lt;/a&gt;有効になっている、モデルは自動的にその出力を更新します。それ以外の場合は、&lt;a href=&quot;qml-qtlocation-geocodemodel#update-method&quot;&gt;更新&lt;/a&gt;メソッドを使用できます。デフォルトでは、&lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt;は無効になっています。</target>
        </trans-unit>
        <trans-unit id="51573a29d91f36ec0e9aa557f5fc03263d8d4e9a" translate="yes" xml:space="preserve">
          <source>Once the project is built and installed, the new &lt;code&gt;Time&lt;/code&gt; component is accessible by any QML component that imports the &lt;code&gt;TimeExample&lt;/code&gt; module</source>
          <target state="translated">プロジェクトがビルドおよびインストールされると、 &lt;code&gt;TimeExample&lt;/code&gt; モジュールをインポートするQMLコンポーネントから新しい &lt;code&gt;Time&lt;/code&gt; コンポーネントにアクセスできます</target>
        </trans-unit>
        <trans-unit id="d57a67cc01f03463e100ca785c789a48baaefd10" translate="yes" xml:space="preserve">
          <source>Once the rendering is done the pageRendered() signal is emitted with the result as parameters.</source>
          <target state="translated">レンダリングが完了すると、結果をパラメータとして pageRendered()シグナルが出力されます。</target>
        </trans-unit>
        <trans-unit id="93b788d9ad88ab09075085e62bbb75e2121a947c" translate="yes" xml:space="preserve">
          <source>Once the request completes successfully the response can be retrieved from the &lt;a href=&quot;qnearfieldtarget#requestResponse&quot;&gt;requestResponse&lt;/a&gt;() function. The response of this request will be a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="translated">リクエストが正常に完了すると、&lt;a href=&quot;qnearfieldtarget#requestResponse&quot;&gt;requestResponse&lt;/a&gt;（）関数からレスポンスを取得できます。このリクエストのレスポンスは&lt;a href=&quot;qbytearray&quot;&gt;QByteArrayになり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b8111f76953cdb0759d595d2a88f5fa509a36db0" translate="yes" xml:space="preserve">
          <source>Once the request completes the response for successfully completed requests can be retrieved from the &lt;a href=&quot;qnearfieldtarget#requestResponse&quot;&gt;requestResponse&lt;/a&gt;() function. The response of this request will be a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;&amp;gt;.</source>
          <target state="translated">リクエストが完了すると、正常に完了したリクエストのレスポンスを&lt;a href=&quot;qnearfieldtarget#requestResponse&quot;&gt;requestResponse&lt;/a&gt;（）関数から取得できます。このリクエストのレスポンスは&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;gt;になります。</target>
        </trans-unit>
        <trans-unit id="6dff09d559cd10dbb9244d06b7374557ff114f63" translate="yes" xml:space="preserve">
          <source>Once the request finishes you can handle the results with:</source>
          <target state="translated">リクエストが終了したら、結果を処理することができます。</target>
        </trans-unit>
        <trans-unit id="9675df906f3b4dd39c0f3e7e2d9daa0adf9f201f" translate="yes" xml:space="preserve">
          <source>Once the resources are defined you can use them actively when composing your form. For example, you might want to create a tool button using an icon specified in the resource file.</source>
          <target state="translated">一度リソースを定義してしまえば、フォームを構成する際にそれらを積極的に使うことができます。例えば、リソースファイルで指定したアイコンを使ってツールボタンを作成したいとします。</target>
        </trans-unit>
        <trans-unit id="cef2ed87f29621407fe223b5c500043ff82db994" translate="yes" xml:space="preserve">
          <source>Once the texture object is created you can obtain the object name from the &lt;a href=&quot;qopengltexture#textureId&quot;&gt;textureId&lt;/a&gt;() function. This may be useful if you wish to make some raw OpenGL calls related to this texture.</source>
          <target state="translated">テクスチャオブジェクトが作成されると、&lt;a href=&quot;qopengltexture#textureId&quot;&gt;textureId&lt;/a&gt;（）関数からオブジェクト名を取得できます。これは、このテクスチャに関連するOpenGLの呼び出しを行いたい場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="a854609fbf0cc0561a8527b2bba9a2242f014e3e" translate="yes" xml:space="preserve">
          <source>Once the window has been embedded into the container, the container will control the window's geometry and visibility. Explicit calls to &lt;a href=&quot;qwindow#setGeometry&quot;&gt;QWindow::setGeometry&lt;/a&gt;(), &lt;a href=&quot;qwindow#show&quot;&gt;QWindow::show&lt;/a&gt;() or &lt;a href=&quot;qwindow#hide&quot;&gt;QWindow::hide&lt;/a&gt;() on an embedded window is not recommended.</source>
          <target state="translated">ウィンドウがコンテナに埋め込まれると、コンテナはウィンドウのジオメトリと可視性を制御します。埋め込みウィンドウで&lt;a href=&quot;qwindow#setGeometry&quot;&gt;QWindow :: setGeometry&lt;/a&gt;（）、&lt;a href=&quot;qwindow#show&quot;&gt;QWindow :: show&lt;/a&gt;（）または&lt;a href=&quot;qwindow#hide&quot;&gt;QWindow :: hide&lt;/a&gt;（）を明示的に呼び出すことはお勧めしません。</target>
        </trans-unit>
        <trans-unit id="cf2e6243d5e6c8c2c5e1273d53d655f0a1ad06bd" translate="yes" xml:space="preserve">
          <source>Once these details are added, &lt;b&gt;Activate&lt;/b&gt; the product. If you have not published the application yet, the product is marked as &lt;b&gt;To be activated&lt;/b&gt;. Otherwise, it is marked as active. The product must be activated before it can be queried from the Qt Purchasing API. If the application has recently been published, then it may take a few hours before the in-app products can be accessed from your application. Look for the &lt;b&gt;Updates pending&lt;/b&gt; label on the top right side of the screen. If this is visible, then there are updates pending which are not yet visible from the outside.</source>
          <target state="translated">これらの詳細を追加したら、製品を&lt;b&gt;アクティブ化&lt;/b&gt;します。アプリケーションをまだ公開していない場合、製品は[ &lt;b&gt;アクティブ化する]&lt;/b&gt;としてマークされ&lt;b&gt;ます&lt;/b&gt;。それ以外の場合は、アクティブとしてマークされます。Qt Purchasing APIからクエリを実行する前に、製品をアクティブ化する必要があります。アプリが最近公開された場合、アプリからアプリ内アイテムにアクセスできるようになるまでに数時間かかる場合があります。画面の右上にある&lt;b&gt;更新保留中の&lt;/b&gt;ラベルを探します。これが表示されている場合、保留中の更新があり、まだ外部からは表示されていません。</target>
        </trans-unit>
        <trans-unit id="a7f71a05800de7ca2d4dd08b9121a4d845b7a47f" translate="yes" xml:space="preserve">
          <source>Once this is registered, the type can be used in QML by importing the specified type namespace and version number:</source>
          <target state="translated">これを登録しておくと、指定した型の名前空間とバージョン番号をインポートすることで、QMLで利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="a44fb5711cc76be889a52ace7f57dfbfb5882981" translate="yes" xml:space="preserve">
          <source>Once this property is bound to another &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;, both header and table will synchronize with regard to column widths, column spacing, and flicking horizontally.</source>
          <target state="translated">このプロパティが別の&lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;にバインドされると、ヘッダーとテーブルの両方が、列の幅、列の間隔、および水平方向のフリックに関して同期されます。</target>
        </trans-unit>
        <trans-unit id="23311eed06b33c3c9881162f1a3c1ef90b84868f" translate="yes" xml:space="preserve">
          <source>Once this property is bound to another &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;, both header and table will synchronize with regard to row heights, row spacing, and flicking vertically.</source>
          <target state="translated">このプロパティが別の&lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt;にバインドされると、ヘッダーとテーブルの両方が、行の高さ、行の間隔、および垂直方向のフリックに関して同期されます。</target>
        </trans-unit>
        <trans-unit id="9d11ad319c8411fb480cef806b8c18cbdbaa86f1" translate="yes" xml:space="preserve">
          <source>Once widgets have been inserted into a layout, it is not possible to move and resize them individually because the layout itself controls the geometry of each widget within it, taking account of the hints provided by spacers. Spacers can be added to the layout to influence the geometries of the widgets.</source>
          <target state="translated">一度レイアウトにウィジェットを挿入すると、レイアウト自体がスペーサのヒントを考慮して、その中の各ウィジェットのジオメトリを制御するため、個々に移動したりサイズを変更したりすることはできません。スペーサは、ウィジェットのジオメトリに影響を与えるためにレイアウトに追加することができます。</target>
        </trans-unit>
        <trans-unit id="48f853c377dfafa75d073fe8c2ac1f2d9bbf4804" translate="yes" xml:space="preserve">
          <source>Once you are done with the thread, call &lt;a href=&quot;qthreadpool#releaseThread&quot;&gt;releaseThread&lt;/a&gt;() to allow it to be reused.</source>
          <target state="translated">スレッドを&lt;a href=&quot;qthreadpool#releaseThread&quot;&gt;使い終わったら&lt;/a&gt;、releaseThread（）を呼び出して再利用できるようにします。</target>
        </trans-unit>
        <trans-unit id="4f99787523ca86812e43fea58bf63058f32b7a4f" translate="yes" xml:space="preserve">
          <source>Once you have a &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;, you can call its &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject()&lt;/a&gt; method to create an instance of the component. This function can take one or two arguments:</source>
          <target state="translated">&lt;a href=&quot;qml-qtqml-component&quot;&gt;Componentを&lt;/a&gt;&lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;取得し&lt;/a&gt;たら、そのcreateObject（）メソッドを呼び出して、コンポーネントのインスタンスを作成できます。この関数は、1つまたは2つの引数を取ることができます。</target>
        </trans-unit>
        <trans-unit id="5c640f9181d5bd6296e2924bbca96e44926980a3" translate="yes" xml:space="preserve">
          <source>Once you have a custom widget plugin for</source>
          <target state="translated">のカスタムウィジェットプラグインがあれば</target>
        </trans-unit>
        <trans-unit id="6e7fd47ef3ed9aa04b7236db70c3b3a14b8dea7b" translate="yes" xml:space="preserve">
          <source>Once you have a form window's cursor interface, you can check if the form window has a selection at all using the &lt;a href=&quot;qdesignerformwindowcursorinterface#hasSelection&quot;&gt;hasSelection&lt;/a&gt;() function. You can query the form window for its total &lt;a href=&quot;qdesignerformwindowcursorinterface#widgetCount&quot;&gt;widgetCount&lt;/a&gt;() and &lt;a href=&quot;qdesignerformwindowcursorinterface#selectedWidgetCount&quot;&gt;selectedWidgetCount&lt;/a&gt;(). You can retrieve the currently selected widget (or widgets) using the &lt;a href=&quot;qdesignerformwindowcursorinterface#current&quot;&gt;current&lt;/a&gt;() or &lt;a href=&quot;qdesignerformwindowcursorinterface#selectedWidget&quot;&gt;selectedWidget&lt;/a&gt;() functions.</source>
          <target state="translated">フォームウィンドウのカーソルインターフェイスを&lt;a href=&quot;qdesignerformwindowcursorinterface#hasSelection&quot;&gt;取得したら&lt;/a&gt;、hasSelection（）関数を使用して、フォームウィンドウに選択項目があるかどうかを確認できます。フォームウィンドウにその合計&lt;a href=&quot;qdesignerformwindowcursorinterface#widgetCount&quot;&gt;widgetCount&lt;/a&gt;（）と&lt;a href=&quot;qdesignerformwindowcursorinterface#selectedWidgetCount&quot;&gt;selectedWidgetCount&lt;/a&gt;（）を照会できます。&lt;a href=&quot;qdesignerformwindowcursorinterface#current&quot;&gt;current&lt;/a&gt;（）関数または&lt;a href=&quot;qdesignerformwindowcursorinterface#selectedWidget&quot;&gt;selectedWidget&lt;/a&gt;（）関数を使用して、現在選択されている1つまたは複数のウィジェットを取得できます。</target>
        </trans-unit>
        <trans-unit id="86f4ced0f47e3cdafee5ebd0c20cd011a17a4dce" translate="yes" xml:space="preserve">
          <source>Once you have added your layout you can start putting widgets and other layouts into the cells of your grid layout using &lt;a href=&quot;qgridlayout#addWidget-1&quot;&gt;addWidget&lt;/a&gt;(), &lt;a href=&quot;qgridlayout#addItem&quot;&gt;addItem&lt;/a&gt;(), and &lt;a href=&quot;qgridlayout#addLayout&quot;&gt;addLayout&lt;/a&gt;().</source>
          <target state="translated">レイアウトを追加したら、&lt;a href=&quot;qgridlayout#addWidget-1&quot;&gt;addWidget&lt;/a&gt;（）、&lt;a href=&quot;qgridlayout#addItem&quot;&gt;addItem&lt;/a&gt;（）、および&lt;a href=&quot;qgridlayout#addLayout&quot;&gt;addLayout&lt;/a&gt;（）を使用して、ウィジェットやその他のレイアウトをグリッドレイアウトのセルに配置し始めることができます。</target>
        </trans-unit>
        <trans-unit id="25fd7c4374dacc7fdac166445af55cb19e44130f" translate="yes" xml:space="preserve">
          <source>Once you have created a event object using Windows API such as CreateEvent() or OpenEvent(), you can create an event notifier to monitor the event handle. If the event notifier is enabled, it will emit the &lt;a href=&quot;qwineventnotifier#activated&quot;&gt;activated&lt;/a&gt;() signal whenever the corresponding event object is signalled.</source>
          <target state="translated">CreateEvent（）やOpenEvent（）などのWindows APIを使用してイベントオブジェクトを作成したら、イベントノーティファイアを作成してイベントハンドルを監視できます。イベント通知機能が有効になっている場合、対応するイベントオブジェクトが通知されると、&lt;a href=&quot;qwineventnotifier#activated&quot;&gt;アクティブ化された&lt;/a&gt;（）信号が送信されます。</target>
        </trans-unit>
        <trans-unit id="ad85489ea8db0c725079f5ce1c8dbf56a58f4d84" translate="yes" xml:space="preserve">
          <source>Once you have created your iTunes test user, you will be able to log in to the sandbox app store when developing your app.</source>
          <target state="translated">iTunesのテストユーザーを作成したら、アプリを開発する際にサンドボックスアプリストアにログインできるようになります。</target>
        </trans-unit>
        <trans-unit id="58b03b1720b139f341a87cbf7ff93042e86f9554" translate="yes" xml:space="preserve">
          <source>Once you have done this, you can add boxes to the &lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayout&lt;/a&gt; using one of four functions:</source>
          <target state="translated">これを実行したら、次の4つの関数のいずれかを使用して&lt;a href=&quot;qboxlayout&quot;&gt;QBoxLayoutに&lt;/a&gt;ボックスを追加できます。</target>
        </trans-unit>
        <trans-unit id="31b8502bd0f44d2949fed4f14a56e62dfc3ceaff" translate="yes" xml:space="preserve">
          <source>Once you have done this, you can add boxes to the QBoxLayout using one of four functions:</source>
          <target state="translated">これが完了したら、4 つの関数のいずれかを使用して QBoxLayout にボックスを追加できます。</target>
        </trans-unit>
        <trans-unit id="a50bf9b388f3951da2351041f5e385f3fd881082" translate="yes" xml:space="preserve">
          <source>Once you have followed the steps above, you have a separate light probe set for the material. This light probe overrides the scene light probe if there is one specified.</source>
          <target state="translated">上記の手順を実行すると、マテリアル用に別のライトプローブが設定されます。シーンライトプローブが指定されている場合は、このライトプローブが優先されます。</target>
        </trans-unit>
        <trans-unit id="4f03a38ef87621940dfad6538c8a44a1d3f2e107" translate="yes" xml:space="preserve">
          <source>Once you have installed Qt, you can start</source>
          <target state="translated">Qtをインストールしたら</target>
        </trans-unit>
        <trans-unit id="95048dcfd3150cfb77e6dc7ba9e8b45084bb3618" translate="yes" xml:space="preserve">
          <source>Once you have loaded the SVG file successfully, you can render it with the &lt;a href=&quot;qsvgrenderer#render&quot;&gt;QSvgRenderer::render&lt;/a&gt;() function. Note that this scheme allows you to render SVG files on all paint devices supported by Qt, including &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, QGLWidget, and &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;. See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsvg-svgviewer-example.html#&quot;&gt;SVG Viewer&lt;/a&gt; example for more details.</source>
          <target state="translated">SVGファイルを正常にロードしたら、&lt;a href=&quot;qsvgrenderer#render&quot;&gt;QSvgRenderer :: render&lt;/a&gt;（）関数を使用してそれをレンダリングできます。このスキームはあなたが含むのQtでサポートされているすべてのペイントデバイス、上のSVGファイルをレンダリングすることを可能にすることを注意&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;、QGLWidget、と&lt;a href=&quot;qimage&quot;&gt;QImageの&lt;/a&gt;。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsvg-svgviewer-example.html#&quot;&gt;SVGビューアの&lt;/a&gt;例を参照してください。</target>
        </trans-unit>
        <trans-unit id="c3f3dcc9cf59e9311124d8da3923db6e5bc376fc" translate="yes" xml:space="preserve">
          <source>Once you have loaded the SVG file successfully, you can render it with the &lt;a href=&quot;qsvgrenderer#render&quot;&gt;QSvgRenderer::render&lt;/a&gt;() function. Note that this scheme allows you to render SVG files on all paint devices supported by Qt, including &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, QGLWidget, and &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;. See the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsvg-svgviewer-example.html&quot;&gt;SVG Viewer&lt;/a&gt; example for more details.</source>
          <target state="translated">SVGファイルを正常にロードしたら、&lt;a href=&quot;qsvgrenderer#render&quot;&gt;QSvgRenderer :: render&lt;/a&gt;（）関数を使用してレンダリングできます。このスキームはあなたが含むのQtでサポートされているすべてのペイントデバイス、上のSVGファイルをレンダリングすることを可能にすることを注意&lt;a href=&quot;qwidget&quot;&gt;QWidgetの&lt;/a&gt;、QGLWidget、と&lt;a href=&quot;qimage&quot;&gt;QImageの&lt;/a&gt;。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsvg-svgviewer-example.html&quot;&gt;SVGビューアの&lt;/a&gt;例を参照してください。</target>
        </trans-unit>
        <trans-unit id="eb607fb47d0583b00ef8a29f4e2e2a083a66be04" translate="yes" xml:space="preserve">
          <source>Once you have loaded the SVG file successfully, you can render it with the &lt;a href=&quot;qsvgrenderer#render&quot;&gt;QSvgRenderer::render&lt;/a&gt;() function. Note that this scheme allows you to render SVG files on all paint devices supported by Qt, including &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;, QGLWidget, and &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;. See the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsvg-svgviewer-example.html&quot;&gt;SVG Viewer&lt;/a&gt; example for more details.</source>
          <target state="translated">SVGファイルを正常にロードしたら、&lt;a href=&quot;qsvgrenderer#render&quot;&gt;QSvgRenderer :: render&lt;/a&gt;（）関数を使用してレンダリングできます。このスキームはあなたが含むのQtでサポートされているすべてのペイントデバイス、上のSVGファイルをレンダリングすることを可能にすることを注意&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidgetの&lt;/a&gt;、QGLWidget、と&lt;a href=&quot;qimage&quot;&gt;QImageの&lt;/a&gt;。詳細については、&lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsvg-svgviewer-example.html&quot;&gt;SVGビューアの&lt;/a&gt;例を参照してください。</target>
        </trans-unit>
        <trans-unit id="ead5f946dd8a41570e30cb9f83c06bd9bcc6cc49" translate="yes" xml:space="preserve">
          <source>Once you have opened a device using a low-level (usually platform-specific) API, you can create a socket notifier to monitor the file descriptor. The socket notifier is enabled by default, i.e. it emits the &lt;a href=&quot;qsocketnotifier#activated&quot;&gt;activated&lt;/a&gt;() signal whenever a socket event corresponding to its type occurs. Connect the &lt;a href=&quot;qsocketnotifier#activated&quot;&gt;activated&lt;/a&gt;() signal to the slot you want to be called when an event corresponding to your socket notifier's type occurs.</source>
          <target state="translated">低レベル（通常はプラットフォーム固有）のAPIを使用してデバイスを開いたら、ソケット記述子を作成してファイル記述子を監視できます。ソケット通知機能はデフォルトで有効になっています。つまり、そのタイプに対応するソケットイベントが発生するたびに、&lt;a href=&quot;qsocketnotifier#activated&quot;&gt;アクティブ化された&lt;/a&gt;（）シグナルを発行します。ソケット通知機能のタイプに対応するイベントが発生したときに呼び出されるスロットに、&lt;a href=&quot;qsocketnotifier#activated&quot;&gt;activated&lt;/a&gt;（）信号を接続します。</target>
        </trans-unit>
        <trans-unit id="856003ba62e3c792c5a48b82084d53965764bd9f" translate="yes" xml:space="preserve">
          <source>Once you have selected an image, IBL is set up for your scene. All models in the scene are illuminated by the light probe by default.</source>
          <target state="translated">イメージを選択すると、シーンにIBLが設定されます。シーン内のすべてのモデルは、デフォルトではライトプローブによって照らされます。</target>
        </trans-unit>
        <trans-unit id="587696ac7394a789e6d77c3e76bb0fb746a545e6" translate="yes" xml:space="preserve">
          <source>Once you have successfully created a VAO the typical usage pattern is:</source>
          <target state="translated">あなたが正常にVAOを作成したら、典型的な使用パターンは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2d0d6925f527558c514eaf74004bfb2fa5c285db" translate="yes" xml:space="preserve">
          <source>Once you have supplied a replacement drop action, call &lt;a href=&quot;qevent#accept&quot;&gt;accept&lt;/a&gt;() instead of &lt;a href=&quot;qdropevent#acceptProposedAction&quot;&gt;acceptProposedAction&lt;/a&gt;().</source>
          <target state="translated">置換ドロップアクションを指定したら、&lt;a href=&quot;qdropevent#acceptProposedAction&quot;&gt;acceptProposedAction&lt;/a&gt;（）ではなく、&lt;a href=&quot;qevent#accept&quot;&gt;accept&lt;/a&gt;（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="fc887faa98989e4a295984bfa5e50ddccee219e1" translate="yes" xml:space="preserve">
          <source>Once you have the form window, you can query its properties. For example, a plain custom widget plugin is managed by</source>
          <target state="translated">フォームウィンドウを取得したら、そのプロパティをクエリすることができます。たとえば、プレーンなカスタムウィジェットプラグインは</target>
        </trans-unit>
        <trans-unit id="0cb9d678077cb6771f2d5c1164d88f0d756afb40" translate="yes" xml:space="preserve">
          <source>Once you know that the ports are ready to read or write, you can use the &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() or &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() methods. Alternatively the &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;() and &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;() convenience methods can also be invoked. If not all the data is read at once, the remaining data will be available for later as new incoming data is appended to the &lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt;'s internal read buffer. You can limit the size of the read buffer using &lt;a href=&quot;qserialport#setReadBufferSize&quot;&gt;setReadBufferSize&lt;/a&gt;().</source>
          <target state="translated">ポートが読み取りまたは書き込みの準備ができていることがわかったら、&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（）または&lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;（）メソッドを使用できます。あるいは、&lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;（）および&lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;（）コンビニエンスメソッドを呼び出すこともできます。すべてのデータが一度に読み取られない場合、新しい受信データが&lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt;の内部読み取りバッファーに追加されるため、残りのデータは後で使用できます。&lt;a href=&quot;qserialport#setReadBufferSize&quot;&gt;setReadBufferSize&lt;/a&gt;（）を使用して、読み取りバッファーのサイズを制限できます。</target>
        </trans-unit>
        <trans-unit id="577ee7c327443525aec4749067a313d887847abd" translate="yes" xml:space="preserve">
          <source>Once you know that the ports are ready to read or write, you can use the &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() or &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() methods. Alternatively the &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;() and &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;() convenience methods can also be invoked. If not all the data is read at once, the remaining data will be available for later as new incoming data is appended to the QSerialPort's internal read buffer. You can limit the size of the read buffer using &lt;a href=&quot;qserialport#setReadBufferSize&quot;&gt;setReadBufferSize&lt;/a&gt;().</source>
          <target state="translated">ポートが読み取りまたは書き込みの準備ができていることがわかったら、&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;（）または&lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;（）メソッドを使用できます。あるいは、&lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;（）および&lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;（）コンビニエンスメソッドを呼び出すこともできます。すべてのデータが一度に読み取られない場合、新しい着信データがQSerialPortの内部読み取りバッファーに追加されるため、残りのデータは後で使用できるようになります。&lt;a href=&quot;qserialport#setReadBufferSize&quot;&gt;setReadBufferSize&lt;/a&gt;（）を使用して、読み取りバッファーのサイズを制限できます。</target>
        </trans-unit>
        <trans-unit id="2e4978bbca70c81bd39582d9d963d8617f1d74dd" translate="yes" xml:space="preserve">
          <source>Once your app is registered in iTunes Connect you will have additional options available to manage that App. In the &lt;b&gt;Manage Your Apps&lt;/b&gt; page of iTunes Connect, click the icon representing your app to manage its details. Within this menu you can select the &lt;b&gt;Manage In-App Purchases&lt;/b&gt; button on the right to register in-app products you wish to offer.</source>
          <target state="translated">アプリがiTunes Connectに登録されると、そのアプリを管理するための追加のオプションが利用できるようになります。iTunes Connectの&lt;b&gt;「アプリ&lt;/b&gt;の&lt;b&gt;管理」&lt;/b&gt;ページで、アプリを表すアイコンをクリックして、詳細を管理します。このメニューで、右側にある[ &lt;b&gt;アプリ内購入の管理&lt;/b&gt; ]ボタンを選択して、提供するアプリ内アイテムを登録できます。</target>
        </trans-unit>
        <trans-unit id="82c37a941ba03279b12ed1a3e19e39a2cd9bc7f3" translate="yes" xml:space="preserve">
          <source>Once your products are registered you will be able to purchase them from your app. When you are developing your app it is desirable to test buying your products without spending real currency. There are actually two separate stores that requests can be sent to when using the In-App Purchasing service on iOS. While your app is being developed, any iOS App Store requests will be sent to a sandbox store. This occurs when your app has been signed with a developer Provisioning Profile. The sandbox store will only accept requests from test users and will not charge for the purchases. However, when you submit your app to the iOS App Store and it is accepted, all in-app purchasing requests are sent to the production store, which requires real iTunes users accounts, and will charge for the purchases.</source>
          <target state="translated">商品が登録されると、アプリから商品を購入することができます。アプリを開発する際には、実際の通貨を使わずに商品を購入できるかどうかをテストすることが望ましいです。iOSのアプリ内課金サービスを使用する際にリクエストを送信できる2つの別々のストアが実際に存在します。アプリが開発されている間は、iOSアプリストアのリクエストはサンドボックスストアに送信されます。これは、アプリが開発者のプロビジョニングプロファイルで署名されている場合に発生します。サンドボックスストアはテストユーザーからのリクエストのみを受け付け、購入のために課金されることはありません。ただし、アプリをiOS App Storeに提出し、それが受け入れられた場合、すべてのアプリ内購入要求は本番用ストアに送信され、本番用ストアでは実際のiTunesユーザーのアカウントが必要となり、購入のために課金されます。</target>
        </trans-unit>
        <trans-unit id="68a40ec4ea1c7cab77a9f3596ca2355b12bad46e" translate="yes" xml:space="preserve">
          <source>One advantage of using &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; as a paint device is that it is possible to guarantee the pixel exactness of any drawing operation in a platform-independent way. Another benefit is that the painting can be performed in another thread than the current GUI thread.</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;をペイントデバイスとして使用する利点の1つは、プラットフォームに依存しない方法で描画操作のピクセルの正確さを保証できることです。もう1つの利点は、現在のGUIスレッド以外のスレッドでペイントを実行できることです。</target>
        </trans-unit>
        <trans-unit id="552d0d068ba98a7ae885e564b90cd22da8285c55" translate="yes" xml:space="preserve">
          <source>One advantage of using &lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;() over &lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;() is that the order of the numbered place markers can change, if the application's strings are translated into other languages, but each &lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;() will still replace the lowest-numbered unreplaced place-marker, no matter where it appears. Also, if place-marker &lt;code&gt;%i&lt;/code&gt; appears more than once in the string, &lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;() replaces all of them.</source>
          <target state="translated">&lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;（）よりも&lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;（）を使用する利点の1つは、アプリケーションの文字列を他の言語に翻訳すると、番号付きの場所マーカーの順序が変わる可能性があることですが、各&lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;（）は、最も小さい番号の未置換の場所マーカーを置き換えます。どこに現れても。また、プレースマーカー &lt;code&gt;%i&lt;/code&gt; が文字列内に複数回出現する場合、&lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;（）はそれらすべてを置き換えます。</target>
        </trans-unit>
        <trans-unit id="8a496cae007faea94b56b0456c6f81a542d18513" translate="yes" xml:space="preserve">
          <source>One advantage of using arg() over &lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;() is that the order of the numbered place markers can change, if the application's strings are translated into other languages, but each arg() will still replace the lowest numbered unreplaced place marker, no matter where it appears. Also, if place marker &lt;code&gt;%i&lt;/code&gt; appears more than once in the string, the arg() replaces all of them.</source>
          <target state="translated">&lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;（）よりもarg（）を使用する利点の1つは、アプリケーションの文字列を他の言語に翻訳すると、番号付きの場所マーカーの順序が変わる可能性がありますが、各arg（）は、番号の付いた未置換の場所マーカーを置き換えますそれが現れる場所。また、プレースマーカー &lt;code&gt;%i&lt;/code&gt; が文字列に複数回出現する場合、arg（）はそれらすべてを置き換えます。</target>
        </trans-unit>
        <trans-unit id="49799b2853265a66e0f9eb11306af5d259a520f4" translate="yes" xml:space="preserve">
          <source>One advantage of using arg() over &lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;() is that the order of the numbered place markers can change, if the application's strings are translated into other languages, but each arg() will still replace the lowest-numbered unreplaced place-marker, no matter where it appears. Also, if place-marker &lt;code&gt;%i&lt;/code&gt; appears more than once in the string, arg() replaces all of them.</source>
          <target state="translated">&lt;a href=&quot;qstring#asprintf&quot;&gt;asprintf&lt;/a&gt;（）よりもarg（）を使用する利点の1つは、アプリケーションの文字列が他の言語に翻訳されている場合、番号付きの場所マーカーの順序を変更できることですが、各arg（）は、最も小さい番号の置き換えられていない場所マーカーを置き換えます。どこに表示されても。また、プレースマーカー &lt;code&gt;%i&lt;/code&gt; が文字列に複数回出現する場合、arg（）がそれらすべてを置き換えます。</target>
        </trans-unit>
        <trans-unit id="ca7219ee8d830a8dc83297bcaedbc1ec6c8f2430" translate="yes" xml:space="preserve">
          <source>One behavioral change to note is that the new &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; implementation will not provide stable references to elements in the hash when the table needs to grow, or when entries are removed. Applications that rely on such stability might now run into undefined behavior.</source>
          <target state="translated">注意すべき動作の変更の1つは、新しい&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;実装では、テーブルを拡張する必要がある場合、またはエントリが削除された場合に、ハッシュ内の要素への安定した参照が提供されないことです。このような安定性に依存するアプリケーションは、未定義の動作に遭遇する可能性があります。</target>
        </trans-unit>
        <trans-unit id="3651c6efb4c28103edacfd4bc6574f7b189b8dbf" translate="yes" xml:space="preserve">
          <source>One button has no elevation, and the other has an elevation of &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">一つのボタンには標高を持たない、他方が上昇有する &lt;code&gt;10&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7462448543cbd1c364bf32e079f8120754aeedc" translate="yes" xml:space="preserve">
          <source>One call</source>
          <target state="translated">ワンコール</target>
        </trans-unit>
        <trans-unit id="1d31b5cb24602913e72c9b9c94c60333e286c2d6" translate="yes" xml:space="preserve">
          <source>One call/Permanent</source>
          <target state="translated">電話1本/常時</target>
        </trans-unit>
        <trans-unit id="4615cf68efe02b80727d8bb5e130a46af5cc2480" translate="yes" xml:space="preserve">
          <source>One can write a switch table like so:</source>
          <target state="translated">スイッチ表はこんな感じで書けます。</target>
        </trans-unit>
        <trans-unit id="021a5a769eb2a744869076c94a4ea5e56547536b" translate="yes" xml:space="preserve">
          <source>One caveat to using the latest Xcode version and SDK to build your application is that macOS's system frameworks will sometimes decide whether or not to enable behavior changes based on the SDK you built your application with.</source>
          <target state="translated">最新のXcodeバージョンとSDKを使用してアプリケーションを構築する際の注意点として、macOSのシステムフレームワークは、アプリケーションを構築したSDKに基づいて動作変更を有効にするかどうかを決定することがあるということがあります。</target>
        </trans-unit>
        <trans-unit id="87ebc6df2d743bdf4de7159a1f5bedb57c85b959" translate="yes" xml:space="preserve">
          <source>One classic use of a tool button is to select tools; for example, the &quot;pen&quot; tool in a drawing program. This would be implemented by using a &lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt; as a toggle button (see &lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckable&lt;/a&gt;()).</source>
          <target state="translated">ツールボタンの典型的な用途の1つは、ツールを選択することです。たとえば、描画プログラムの「ペン」ツール。これは、&lt;a href=&quot;qtoolbutton&quot;&gt;QToolButton&lt;/a&gt;をトグルボタンとして使用することで実装されます（&lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckable&lt;/a&gt;（）を参照）。</target>
        </trans-unit>
        <trans-unit id="197b967081065134f8e05e142d1486a9f15d7b42" translate="yes" xml:space="preserve">
          <source>One classic use of a tool button is to select tools; for example, the &quot;pen&quot; tool in a drawing program. This would be implemented by using a QToolButton as a toggle button (see &lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckable&lt;/a&gt;()).</source>
          <target state="translated">ツールボタンの一般的な使用法の1つは、ツールを選択することです。たとえば、描画プログラムの「ペン」ツール。これは、QToolButtonをトグルボタンとして使用することで実装されます（&lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;setCheckable&lt;/a&gt;（）を参照）。</target>
        </trans-unit>
        <trans-unit id="c4c4020dd2fd95c3515b537fd7886ebf59fcac10" translate="yes" xml:space="preserve">
          <source>One common use case is to set the value of &lt;code&gt;BASE_COLOR&lt;/code&gt; based on sampling a texture, be it a base color map, &lt;code&gt;SCREEN_TEXTURE&lt;/code&gt;, or some other kind of source. This can be relevant and convenient especially when no custom light processor functions are implemented. Setting &lt;code&gt;BASE_COLOR.a&lt;/code&gt; to something other than the default 1.0 allows affecting the final alpha value of the fragment. (note that this will often require also enabling alpha blending in &lt;a href=&quot;qml-qtquick3d-custommaterial#sourceBlend-prop&quot;&gt;sourceBlend&lt;/a&gt; and &lt;a href=&quot;qml-qtquick3d-custommaterial#destinationBlend-prop&quot;&gt;destinationBlend&lt;/a&gt;)</source>
          <target state="translated">一般的な使用例の1つは、テクスチャのサンプリングに基づいて &lt;code&gt;BASE_COLOR&lt;/code&gt; の値を設定することです。これは、ベースカラーマップ、 &lt;code&gt;SCREEN_TEXTURE&lt;/code&gt; 、またはその他の種類のソースです。これは、特にカスタムライトプロセッサ機能が実装されていない場合に関連性があり便利です。設定 &lt;code&gt;BASE_COLOR.a&lt;/code&gt; を1.0フラグメントの最終アルファ値に影響を与えることができ、デフォルト以外の何かに。（これには、&lt;a href=&quot;qml-qtquick3d-custommaterial#sourceBlend-prop&quot;&gt;sourceBlend&lt;/a&gt;と&lt;a href=&quot;qml-qtquick3d-custommaterial#destinationBlend-prop&quot;&gt;destinationBlend&lt;/a&gt;でアルファブレンディングも有効にする必要がある場合が多いことに注意してください）</target>
        </trans-unit>
        <trans-unit id="9e8892553d88581416dd3b2fcd31e82c19652dca" translate="yes" xml:space="preserve">
          <source>One common use of regexps is to split lines of delimited data into their component fields.</source>
          <target state="translated">正規表現の一般的な使用法の一つは、区切りデータの行をそのコンポーネントフィールドに分割することです。</target>
        </trans-unit>
        <trans-unit id="a24ebc94394fa5f9d9f697e53dcf5f013c959c9e" translate="yes" xml:space="preserve">
          <source>One consequence of this is that setting a style rule on a widget automatically gives it precedence over other rules specified in the ancestor widgets' style sheets or the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; style sheet. Consider the following example. First, we set a style sheet on the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;:</source>
          <target state="translated">この結果、ウィジェットにスタイルルールを設定すると、祖先ウィジェットのスタイルシートまたは&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;スタイルシートで指定された他のルールよりも自動的に優先されます。次の例を考えてみましょう。まず、&lt;a href=&quot;qapplication&quot;&gt;QApplicationに&lt;/a&gt;スタイルシートを設定します。</target>
        </trans-unit>
        <trans-unit id="38908edf573bb7b97e00bc1e6ec62c659e5cdcf0" translate="yes" xml:space="preserve">
          <source>One dash, two dots, one dash, two dots.</source>
          <target state="translated">1ダッシュ、2ドット、1ダッシュ、2ドット。</target>
        </trans-unit>
        <trans-unit id="bb641bfb37d3bb45179d996104a3fdbdef166310" translate="yes" xml:space="preserve">
          <source>One data model can only belong to one state machine.</source>
          <target state="translated">1つのデータモデルは、1つのステートマシンにしか属しません。</target>
        </trans-unit>
        <trans-unit id="2d9cb7313469561dfcceffea7241129fa4481e2e" translate="yes" xml:space="preserve">
          <source>One does not need to understand the internals of the renderer to get good performance. However, it might help when integrating with the scene graph or to figure out why it is not possible to squeeze the maximum efficiency out of the graphics chip.</source>
          <target state="translated">良いパフォーマンスを得るためにレンダラーの内部を理解する必要はありません。しかし、シーングラフと統合するときや、グラフィックスチップから最大の効率を引き出すことができない理由を理解するのに役立つかもしれません。</target>
        </trans-unit>
        <trans-unit id="d322aa94d574b82fc6b52bfde114ac5315193aae" translate="yes" xml:space="preserve">
          <source>One entry in an associative container: both the key and the value form one map-entry type.</source>
          <target state="translated">連想コンテナ内の1つのエントリ:キーと値の両方が1つのマップエントリ型を形成します。</target>
        </trans-unit>
        <trans-unit id="a7e131d96d2f2dc51922f5d25204edf525fe4a8e" translate="yes" xml:space="preserve">
          <source>One example of direct use is to forward errors that stem from a scripting language, e.g. QML:</source>
          <target state="translated">直接的な使用法の例としては、QML のようなスクリプト言語に由来するエラーを転送することが挙げられます。</target>
        </trans-unit>
        <trans-unit id="ade3cab12057400fad5022687608c57749fe0637" translate="yes" xml:space="preserve">
          <source>One example of this is text-entry widgets, which often have a blinking cursor that can make comparisons of captured bitmaps succeed or fail depending on the state of the cursor when the bitmap is captured. This, in turn, may depend on the speed of the machine executing the test.</source>
          <target state="translated">その一例として、テキスト入力ウィジェットがありますが、これはしばしばカーソルが点滅し、ビットマップがキャプチャされたときのカーソルの状態に応じて、キャプチャされたビットマップの比較が成功するか失敗するかを決めることができます。これは、テストを実行するマシンの速度に依存します。</target>
        </trans-unit>
        <trans-unit id="924d7d4ee16dfff2662059020c1bdf8cf28b1b66" translate="yes" xml:space="preserve">
          <source>One frequent need for the transformation matrix is when reusing the same drawing code on a variety of paint devices. Without transformations, the results are tightly bound to the resolution of the paint device. Printers have high resolution, e.g. 600 dots per inch, whereas screens often have between 72 and 100 dots per inch.</source>
          <target state="translated">変換行列が頻繁に必要になるのは、同じ描画コードを様々なペイントデバイスで再利用する場合です。変換を行わないと、結果はペイントデバイスの解像度に強く縛られてしまいます。プリンタの解像度は高く、例えば600ドット/インチですが、スクリーンの解像度は72~100ドット/インチであることが多いです。</target>
        </trans-unit>
        <trans-unit id="a41737d2b52315e3e7b77b5a84fc7cc9fe2b25ce" translate="yes" xml:space="preserve">
          <source>One input handler can control one scene. Setting a scene to an input handler does not transfer the ownership of the scene.</source>
          <target state="translated">1つの入力ハンドラで1つのシーンをコントロールできます。シーンを入力ハンドラに設定しても、シーンの所有権は移転しません。</target>
        </trans-unit>
        <trans-unit id="df1b400b13392aa822e4cb0b5acdac49738c9c08" translate="yes" xml:space="preserve">
          <source>One instance per day of month.</source>
          <target state="translated">月の1日につき1インスタンス。</target>
        </trans-unit>
        <trans-unit id="f3183f5f9d7dcdfd03d2cd7a8ac85c86fb10dfc4" translate="yes" xml:space="preserve">
          <source>One instance per day of week.</source>
          <target state="translated">曜日ごとに1インスタンス。</target>
        </trans-unit>
        <trans-unit id="ba0ceb58ac884f9abf155cd9df5794beb04c7727" translate="yes" xml:space="preserve">
          <source>One instance per week.</source>
          <target state="translated">1週間に1インスタンス。</target>
        </trans-unit>
        <trans-unit id="3589f2b7c774a6be6d231f82ea0f6fae4a5452d0" translate="yes" xml:space="preserve">
          <source>One major cost of using JavaScript is that in most cases when a property from a QML type is accessed, a JavaScript object with an external resource containing the underlying C++ data (or a reference to it) is created. In most cases, this is fairly inexpensive, but in others it can be quite expensive. One example of where it is expensive is assigning a C++ &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; to a QML &quot;variant&quot; property. Lists can also be expensive, although sequences of specific types (&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; of int, qreal, bool, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, and &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;) should be inexpensive; other list types involve an expensive conversion cost (creating a new JavaScript Array, and adding new types one by one, with per-type conversion from C++ type instance to JavaScript value).</source>
          <target state="translated">JavaScriptを使用する主なコストの1つは、ほとんどの場合、QMLタイプのプロパティにアクセスすると、基になるC ++データ（またはそれへの参照）を含む外部リソースを持つJavaScriptオブジェクトが作成されることです。ほとんどの場合、これはかなり安価ですが、他の場合にはかなり高価になる可能性があります。コストがかかる例の1つは、C ++ &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap &lt;/a&gt;&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;をQMLの「バリアント」プロパティに割り当てることです。リストはまた、高価になることができ、特定の種類のシーケンス（ただし&lt;a href=&quot;qlist&quot;&gt;QListの&lt;/a&gt;整数、QREAL、ブール値、の&lt;a href=&quot;qstring&quot;&gt;QStringの&lt;/a&gt;、および&lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;）安価である必要があります。他のリスト型は、変換にコストがかかります（新しいJavaScript配列を作成し、C ++型インスタンスからJavaScript値への型ごとの変換を使用して、新しい型を1つずつ追加します）。</target>
        </trans-unit>
        <trans-unit id="2ed3fac3f4a3805ea928e4e11366e07bd95f80cc" translate="yes" xml:space="preserve">
          <source>One notable exception is the class &lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt;, which still resides in Qt GUI.</source>
          <target state="translated">注目すべき例外の1つは、&lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QtGUI&lt;/a&gt;にまだ存在するクラスQOpenGLContextです。</target>
        </trans-unit>
        <trans-unit id="f8e864d68489bf38b989fae405a3102cc97b5939" translate="yes" xml:space="preserve">
          <source>One of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s greatest strengths is its ability to efficiently determine the location of items. Even with millions of items on the scene, the &lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;() functions can determine the location of an item within a few milliseconds. There are several overloads to &lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;(): one that finds items at a certain position, one that finds items inside or intersecting with a polygon or a rectangle, and more. The list of returned items is sorted by stacking order, with the topmost item being the first item in the list. For convenience, there is also an &lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;itemAt&lt;/a&gt;() function that returns the topmost item at a given position.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;の最大の強みの1つは、アイテムの場所を効率的に決定できることです。シーンに何百万ものアイテムがある場合でも、&lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;（）関数は数ミリ秒以内にアイテムの場所を特定できます。&lt;a href=&quot;qgraphicsscene#items&quot;&gt;アイテムに&lt;/a&gt;はいくつかのオーバーロード（）があります。1つは特定の位置にあるアイテムを見つけ、もう1つはポリゴンまたは長方形の内部または交差するアイテムを見つけます。返されたアイテムのリストは、最上位のアイテムがリストの最初のアイテムになるように、スタック順でソートされます。便宜上、特定の位置にある最上位のアイテムを返す&lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;itemAt&lt;/a&gt;（）関数もあります。</target>
        </trans-unit>
        <trans-unit id="2124ade4fb2bf06272d34869bf977cb448cef3c8" translate="yes" xml:space="preserve">
          <source>One of QGraphicsScene's greatest strengths is its ability to efficiently determine the location of items. Even with millions of items on the scene, the &lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;() functions can determine the location of an item within a few milliseconds. There are several overloads to &lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;(): one that finds items at a certain position, one that finds items inside or intersecting with a polygon or a rectangle, and more. The list of returned items is sorted by stacking order, with the topmost item being the first item in the list. For convenience, there is also an &lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;itemAt&lt;/a&gt;() function that returns the topmost item at a given position.</source>
          <target state="translated">QGraphicsSceneの最大の強みの1つは、アイテムの場所を効率的に特定できることです。シーンに何百万ものアイテムがある場合でも、&lt;a href=&quot;qgraphicsscene#items&quot;&gt;items&lt;/a&gt;（）関数は、数ミリ秒以内にアイテムの場所を判別できます。&lt;a href=&quot;qgraphicsscene#items&quot;&gt;アイテムに&lt;/a&gt;はいくつかのオーバーロードがあります（）：特定の位置でアイテムを検索するもの、ポリゴンまたは長方形の内部または交差するアイテムを検索するものなど。返されたアイテムのリストは、スタック順に並べ替えられ、一番上のアイテムがリストの最初のアイテムになります。便宜上、指定された位置で最上位のアイテムを返す&lt;a href=&quot;qgraphicsscene#itemAt&quot;&gt;itemAt&lt;/a&gt;（）関数もあります。</target>
        </trans-unit>
        <trans-unit id="6877a7adf6c6f197b61a3386bee49d537fed067e" translate="yes" xml:space="preserve">
          <source>One of Qt's key features, to enable this information exchange, is the distinction between an object's API (defined by its properties, signals, and slots) and the implementation of that API. QtRO's purpose is to meet that expected API, even if the true &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; is in a different process. A slot called on a copy of an object (the &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; in QtRO) is forwarded to the true object (the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; in QtRO) for handling. Every Replica receives updates to the Source, either property changes or emitted signals.</source>
          <target state="translated">この情報交換を可能にするQtの主要な機能の1つは、オブジェクトのAPI（オブジェクトのプロパティ、信号、およびスロットによって定義される）とそのAPIの実装の違いです。 QtROの目的は、真の&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;が別のプロセスにある場合でも、予想されるAPIを満たすことです。オブジェクト（QtRO の&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;レプリカ&lt;/a&gt;）のコピーで呼び出されたスロットは、処理のために真のオブジェクト（QtRO の&lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;ソース&lt;/a&gt;）に転送されます。すべてのレプリカは、プロパティの変更または発信された信号のいずれかで、ソースの更新を受け取ります。</target>
        </trans-unit>
        <trans-unit id="ab0dc330c8a6c23af3e80e8c2ab7c44bf261e934" translate="yes" xml:space="preserve">
          <source>One of the &lt;a href=&quot;q3dtheme#ColorStyle-enum&quot;&gt;ColorStyle&lt;/a&gt; enum values.</source>
          <target state="translated">&lt;a href=&quot;q3dtheme#ColorStyle-enum&quot;&gt;ColorStyle&lt;/a&gt;列挙値の1つ。</target>
        </trans-unit>
        <trans-unit id="09637215558791f84dc766275fa305328d994a06" translate="yes" xml:space="preserve">
          <source>One of the &lt;a href=&quot;qabstract3dgraph#ShadowQuality-enum&quot;&gt;ShadowQuality&lt;/a&gt; enum values. By default, &lt;code&gt;ShadowQualityMedium&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qabstract3dgraph#ShadowQuality-enum&quot;&gt;ShadowQuality&lt;/a&gt;列挙値の1つ。デフォルトでは、 &lt;code&gt;ShadowQualityMedium&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="07d163b1ad469f9585e1ff0e2598072e284c843b" translate="yes" xml:space="preserve">
          <source>One of the &lt;a href=&quot;qabstract3dinputhandler#InputView-enum&quot;&gt;InputView&lt;/a&gt; enum values.</source>
          <target state="translated">&lt;a href=&quot;qabstract3dinputhandler#InputView-enum&quot;&gt;InputView&lt;/a&gt;列挙値の1つ。</target>
        </trans-unit>
        <trans-unit id="613c05d992a3edd6749c6b40952f8297fa534928" translate="yes" xml:space="preserve">
          <source>One of the &lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt::DateFormat&lt;/a&gt; enumeration values, such as &lt;code&gt;Qt.DefaultLocaleShortDate&lt;/code&gt; or &lt;code&gt;Qt.ISODate&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Qt.DefaultLocaleShortDate&lt;/code&gt; や &lt;code&gt;Qt.ISODate&lt;/code&gt; などの&lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt :: DateFormat&lt;/a&gt;列挙値の1つ</target>
        </trans-unit>
        <trans-unit id="78f45c1b7627cd5722b0f72ce206427973168a19" translate="yes" xml:space="preserve">
          <source>One of the &lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt::DateFormat&lt;/a&gt; enumeration values, such as &lt;code&gt;Qt.RFC2822Date&lt;/code&gt; or &lt;code&gt;Qt.ISODate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Qt.RFC2822Date&lt;/code&gt; や &lt;code&gt;Qt.ISODate&lt;/code&gt; などの&lt;a href=&quot;qt#DateFormat-enum&quot;&gt;Qt :: DateFormat&lt;/a&gt;列挙値の1つ。</target>
        </trans-unit>
        <trans-unit id="f5831d1f70b9397cda568b627e5c2de6827e6831" translate="yes" xml:space="preserve">
          <source>One of the URL schemes built into Qt is the &quot;qrc&quot; scheme. This allows content to be compiled into the executable using &lt;a href=&quot;resources&quot;&gt;The Qt Resource System&lt;/a&gt;. Using this, an executable can reference QML content that is compiled into the executable:</source>
          <target state="translated">Qtに組み込まれているURLスキームの1つは「qrc」スキームです。これにより、&lt;a href=&quot;resources&quot;&gt;Qtリソースシステム&lt;/a&gt;を使用してコンテンツを実行可能ファイルにコンパイルできます。これを使用して、実行可能ファイルは、実行可能ファイルにコンパイルされたQMLコンテンツを参照できます。</target>
        </trans-unit>
        <trans-unit id="2243094924e8fa8a3ca2c547099978ca54ee34aa" translate="yes" xml:space="preserve">
          <source>One of the biggest obstacles for the offline shader generator is the amount of different materials that can be generated, not only based on the material properties themeself but also how the rest of the scene is set-up; for example, light count, light type, shadows, etc. all affect the generated shader(s). When we also take &lt;a href=&quot;qtquick3d-tool-shadergen#dynamic-properties&quot;&gt;dynamic properties&lt;/a&gt; into account, the share amount of material shader permutations can very quickly make it unfeasible to generate them all at build-time. To limit the amount of shaders the tool needs to generate, the tool tries to only generate the shaders it think the application needs. The heuristics used in the tool might not always be able to detect which materials should be generate, this is espcecially true for properties that change at run-time. To verify that the material shaders were successfully, and correctly, generated, the tool should have generated a &lt;a href=&quot;qtquick3d-tool-shadergen#genereated-content&quot;&gt;.qsbc&lt;/a&gt; file which can be inspected to verify that the content matches the material used by the application. It's also possible to verify that the material was loaded from the pre-built cache by setting the environment variable &lt;b&gt;QT_RHI_SHADER_DEBUG=1&lt;/b&gt; and looking at the debug output for mentions of the engine loading the &lt;b&gt;pre-compiled&lt;/b&gt; shader successfully.</source>
          <target state="translated">オフラインシェーダージェネレーターの最大の障害の1つは、マテリアルプロパティのテーマ自体だけでなく、シーンの残りの部分がどのように設定されているかに基づいて、生成できるさまざまなマテリアルの量です。たとえば、ライト数、ライトタイプ、シャドウなどはすべて、生成されるシェーダーに影響します。&lt;a href=&quot;qtquick3d-tool-shadergen#dynamic-properties&quot;&gt;動的プロパティ&lt;/a&gt;も取得する場合考慮に入れると、マテリアルシェーダーの順列のシェア量により、ビルド時にすべてを生成することが非常に迅速に実行不可能になる可能性があります。ツールが生成する必要のあるシェーダーの量を制限するために、ツールは、アプリケーションが必要と考えるシェーダーのみを生成しようとします。ツールで使用されるヒューリスティックは、生成する必要のあるマテリアルを常に検出できるとは限りません。これは、実行時に変更されるプロパティに特に当てはまります。マテリアルシェーダーが正常に正しく生成されたことを確認するには、ツールで&lt;a href=&quot;qtquick3d-tool-shadergen#genereated-content&quot;&gt;.qsbc&lt;/a&gt;ファイルが生成されている必要があります。このファイルを調べて、コンテンツがアプリケーションで使用されているマテリアルと一致することを確認できます。環境変数&lt;b&gt;QT_RHI_SHADER_DEBUG = 1を&lt;/b&gt;設定することにより、事前に作成されたキャッシュからマテリアルがロードされたことを確認することもできます。&lt;b&gt;&lt;/b&gt;デバッグ出力を見て、&lt;b&gt;プリコンパイルされた&lt;/b&gt;シェーダーを正常にロードするエンジンについて言及します。</target>
        </trans-unit>
        <trans-unit id="de02ef4459ecf6d496f2215936d878afbff5850f" translate="yes" xml:space="preserve">
          <source>One of the core features of QML is that it enables QML object types to be easily defined in a lightweight manner through QML documents to suit the needs of individual QML applications. The standard &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; module provides various types like &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt; for building a QML application; beyond these, you can easily define your own QML types to be reused within your application. This ability to create your own types forms the building blocks of any QML application.</source>
          <target state="translated">QMLのコア機能の1つは、個々のQMLアプリケーションのニーズに合わせて、QMLドキュメントを通じてQMLオブジェクトタイプを軽量な方法で簡単に定義できることです。標準の&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt;モジュールは、QMLアプリケーションを構築するための&lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;、&lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt;などのさまざまなタイプを提供します。これらを超えて、アプリケーション内で再利用する独自のQMLタイプを簡単に定義できます。独自のタイプを作成するこの機能は、QMLアプリケーションのビルディングブロックを形成します。</target>
        </trans-unit>
        <trans-unit id="3809a20bc81eacc8be68aeec501f8c163ad6e90f" translate="yes" xml:space="preserve">
          <source>One of the great advantages of using QML to define a user interface is that it allows the user interface designer to define how the application should react to events with simple JavaScript expressions. In QML, we refer to those events as &lt;a href=&quot;qtqml-syntax-signals&quot;&gt;signals&lt;/a&gt; and these signals are handled by &lt;a href=&quot;qtqml-syntax-signals#qml-signals-and-handlers&quot;&gt;signal handlers&lt;/a&gt;.</source>
          <target state="translated">QMLを使用してユーザーインターフェイスを定義することの大きな利点の1つは、ユーザーインターフェイスの設計者が、アプリケーションが単純なJavaScript式でイベントにどのように反応するかを定義できることです。QMLでは、これらのイベントを&lt;a href=&quot;qtqml-syntax-signals&quot;&gt;シグナル&lt;/a&gt;と呼び、これらのシグナルは&lt;a href=&quot;qtqml-syntax-signals#qml-signals-and-handlers&quot;&gt;シグナルハンドラー&lt;/a&gt;によって処理されます。</target>
        </trans-unit>
        <trans-unit id="b4c186fd917df6bd21db9cfed12c08d935e4fbb7" translate="yes" xml:space="preserve">
          <source>One of the key concepts of .NET is the idea of &quot;intermediate language code&quot; - the source code is compiled into a bytecode format, and at runtime, that bytecode is executed in a virtual machine - the</source>
          <target state="translated">.NETの重要なコンセプトの1つは、「中間言語コード」という考え方です-ソースコードはバイトコード形式にコンパイルされ、実行時にはそのバイトコードが仮想マシンで実行されます。</target>
        </trans-unit>
        <trans-unit id="f2165e2cfc45409f48d8a4ff1c18c18165fe8229" translate="yes" xml:space="preserve">
          <source>One of the key goals that most application developers want to achieve is to create a maintainable application. One of the ways to achieve this goal is to separate the user interface from the business logic. The following are a few reasons why an application's UI should be written in QML:</source>
          <target state="translated">ほとんどのアプリケーション開発者が達成したいと思っている重要な目標の一つは、保守可能なアプリケーションを作成することです。この目標を達成する方法の一つは、ユーザーインターフェースをビジネスロジックから分離することです。アプリケーションの UI を QML で書くべき理由を以下にいくつか挙げます。</target>
        </trans-unit>
        <trans-unit id="cd16d5b033b6834a5a9611e78f3e2213cb9bd2c3" translate="yes" xml:space="preserve">
          <source>One of the most important concepts in QML is that of type re-use. An application will probably have multiple visual types which are all similar (for example, multiple push buttons), and QML allows these sort of things to be defined as re-usable, custom types, to minimize code duplication and maximize readability.</source>
          <target state="translated">QML の最も重要な概念の一つに、型の再利用があります。QMLでは、このようなものを再利用可能なカスタム型として定義することで、コードの重複を最小限に抑え、可読性を最大限に高めることができます。</target>
        </trans-unit>
        <trans-unit id="946011cfa449ec7f7b9caff43717b47b8e240db0" translate="yes" xml:space="preserve">
          <source>One of the most useful basic features of Qt is the support for buddy widgets. A buddy widget accepts the input focus on behalf of a &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; when the user types the label's shortcut key combination. The buddy concept is also used in Qt's &lt;a href=&quot;model-view-programming&quot;&gt;model/view&lt;/a&gt; framework.</source>
          <target state="translated">Qtの最も便利な基本機能の1つは、バディウィジェットのサポートです。バディウィジェットは、ユーザーがラベルのショートカットキーの組み合わせを入力すると、&lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt;に代わって入力フォーカスを受け入れます。バディのコンセプトはQtの&lt;a href=&quot;model-view-programming&quot;&gt;モデル/ビュー&lt;/a&gt;フレームワークでも使用されます。</target>
        </trans-unit>
        <trans-unit id="30363581ec584febf43e57cce904b9c9605766ff" translate="yes" xml:space="preserve">
          <source>One of the requested discovery methods is not supported by the current platform. This value was introduced by Qt 5.8.</source>
          <target state="translated">要求されたディスカバリーメソッドの1つは、現在のプラットフォームではサポートされていません。この値は Qt 5.8 で導入されました。</target>
        </trans-unit>
        <trans-unit id="27872144c06fca2dc32bc579b3aff1208da29b65" translate="yes" xml:space="preserve">
          <source>One of the requirements to support in-app purchases on iOS is to have a registered unique App ID. This means that it is not possible to use an App ID that contains a wildcard character. You can check the existing App IDs and create new ones from the &lt;a href=&quot;https://developer.apple.com/account/ios/identifiers/bundle/bundleList.action&quot;&gt;Apple Developer Certificate, Identifiers, and Profiles manager&lt;/a&gt;.</source>
          <target state="translated">iOSでアプリ内購入をサポートするための要件の1つは、一意のアプリIDを登録することです。つまり、ワイルドカード文字を含むアプリIDを使用することはできません。&lt;a href=&quot;https://developer.apple.com/account/ios/identifiers/bundle/bundleList.action&quot;&gt;Apple Developer Certificate、Identifiers、およびProfiles manager&lt;/a&gt;から、既存のApp IDを確認して新しいIDを作成できます。</target>
        </trans-unit>
        <trans-unit id="d829c82306decdaf26640b18173d9b3b96ca0b69" translate="yes" xml:space="preserve">
          <source>One of the signals might be emitted for the current state of the</source>
          <target state="translated">の現在の状態について、いずれかの信号が発せられる可能性がある。</target>
        </trans-unit>
        <trans-unit id="7312240af405956c435f0d722687ac2cd9912c5b" translate="yes" xml:space="preserve">
          <source>One or more errors has occurred. Call &lt;a href=&quot;qquickview#errors&quot;&gt;errors&lt;/a&gt;() to retrieve a list of errors.</source>
          <target state="translated">1つ以上のエラーが発生しました。&lt;a href=&quot;qquickview#errors&quot;&gt;エラーの&lt;/a&gt;リストを取得するには、errors（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ff1d7c07ab82ad3c6fe97e07e506c72e4b39eb60" translate="yes" xml:space="preserve">
          <source>One or more errors occurred. Call &lt;a href=&quot;qquickwidget#errors&quot;&gt;errors&lt;/a&gt;() to retrieve a list of errors.</source>
          <target state="translated">1つ以上のエラーが発生しました。&lt;a href=&quot;qquickwidget#errors&quot;&gt;エラーの&lt;/a&gt;リストを取得するには、errors（）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="1c562be14a0f3a541154814641a1055fb9c8c75c" translate="yes" xml:space="preserve">
          <source>One or two occurrences of &lt;a href=&quot;#length&quot;&gt;Length&lt;/a&gt;. If only one length is specified, it is used as the radius of the quarter circle defining the corner. If two lengths are specified, the first length is the horizontal radius of a quarter ellipse, whereas the second length is the vertical radius.</source>
          <target state="translated">&lt;a href=&quot;#length&quot;&gt;Lengthの&lt;/a&gt; 1回または2回の出現。長さを1つだけ指定した場合、その長さはコーナーを定義する四分円の半径として使用されます。 2つの長さが指定されている場合、最初の長さは1/4楕円の水平半径であり、2番目の長さは垂直半径です。</target>
        </trans-unit>
        <trans-unit id="2dafa06193c6c0de5f03ef1aa013eade7b316811" translate="yes" xml:space="preserve">
          <source>One or two occurrences of &lt;a href=&quot;stylesheet-reference#length&quot;&gt;Length&lt;/a&gt;. If only one length is specified, it is used as the radius of the quarter circle defining the corner. If two lengths are specified, the first length is the horizontal radius of a quarter ellipse, whereas the second length is the vertical radius.</source>
          <target state="translated">&lt;a href=&quot;stylesheet-reference#length&quot;&gt;長さの&lt;/a&gt;1つまたは2つのオカレンス。長さが1つだけ指定されている場合は、コーナーを定義する1/4円の半径として使用されます。2つの長さが指定されている場合、最初の長さは1/4楕円の水平半径であり、2番目の長さは垂直半径です。</target>
        </trans-unit>
        <trans-unit id="463a49dac2612f25b516e3cb3a7d4930f9d855ca" translate="yes" xml:space="preserve">
          <source>One or two pixel space between the menu bar and the dockarea, as done on Windows.</source>
          <target state="translated">Windows で行われているように、メニューバーとドックエリアの間に 1 ピクセルか 2 ピクセルのスペースがあります。</target>
        </trans-unit>
        <trans-unit id="9da412a9292ad6f936e19cb1d5a5101b43c83d66" translate="yes" xml:space="preserve">
          <source>One other common use cases is rendering points. This is fairly simple to do since the attribute specification is going to be minimal: we provide three floats (x, y, z) for each vertex, nothing else. A &lt;a href=&quot;qquick3dgeometry&quot;&gt;QQuick3DGeometry&lt;/a&gt; subclass could implement a geometry consisting of 2000 points similarly to the following:</source>
          <target state="translated">もう1つの一般的な使用例は、ポイントのレンダリングです。属性の指定が最小限になるため、これは非常に簡単です。各頂点に3つのfloat（x、y、z）を提供し、それ以外は何も提供しません。&lt;a href=&quot;qquick3dgeometry&quot;&gt;QQuick3DGeometryの&lt;/a&gt;サブクラスは以下を同様に2000点からなる形状を実現できます。</target>
        </trans-unit>
        <trans-unit id="ab6ea547facb8d8e1977c533d0dff798d91798e2" translate="yes" xml:space="preserve">
          <source>One pixel wide pen</source>
          <target state="translated">1ピクセル幅のペン</target>
        </trans-unit>
        <trans-unit id="a1ef8c08328d1edf403fc8a36daace2fa3784639" translate="yes" xml:space="preserve">
          <source>One possible use case is to add this handler to a transparent Item which is on top of the rest of the scene (by having a high &lt;a href=&quot;qml-qtquick-item#z-prop&quot;&gt;z&lt;/a&gt; value), so that when a point is freshly pressed, it will be delivered to that Item and its handlers first, providing the opportunity to take the passive grab as early as possible. Such an item (like a pane of glass over the whole UI) can be a convenient parent for other Items which visualize the kind of reactive feedback which must always be on top; and likewise it can be the parent for popups, popovers, dialogs and so on. If it will be used in that way, it can be helpful for your main.cpp to use &lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext::setContextProperty()&lt;/a&gt; to make the &quot;glass pane&quot; accessible by ID to the entire UI, so that other Items and PointHandlers can be reparented to it.</source>
          <target state="translated">考えられる使用例の1つは、このハンドラーを（高い&lt;a href=&quot;qml-qtquick-item#z-prop&quot;&gt;z&lt;/a&gt;値を持つことにより）シーンの残りの上部にある透明なアイテムに追加して、ポイントが新たに押されたときに、そのアイテムとそのアイテムに配信されるようにすることです。最初にハンドラーを使用して、できるだけ早くパッシブグラブを実行する機会を提供します。このようなアイテム（UI全体のガラスのペインなど）は、常に上部にある必要がある一種の反応フィードバックを視覚化する他のアイテムの便利な親になることができます。同様に、ポップアップ、ポップオーバー、ダイアログなどの親になることもできます。この方法で使用する場合、main.cppが&lt;a href=&quot;qqmlcontext#setContextProperty&quot;&gt;QQmlContext :: setContextProperty（）&lt;/a&gt;を使用して、IDによって「ガラス区画」にUI全体からアクセスできるようにすると、他の項目やPointHandlerの親を変更できるようになります。それに。</target>
        </trans-unit>
        <trans-unit id="b94b0da25fe601fd37aaafc21d9d291d763695f0" translate="yes" xml:space="preserve">
          <source>One reason why isWritable() might return false is if &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; operates on a read-only file.</source>
          <target state="translated">isWritable（）がfalseを返す理由の1つは、&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt;が読み取り専用ファイルを操作する場合です。</target>
        </trans-unit>
        <trans-unit id="92bef01f9dd59d9f5483ce6e7064d464b098e27d" translate="yes" xml:space="preserve">
          <source>One section tag represents one item in the table of contents. The sections can be nested to any degree, but from a user's perspective it should not be more than four or five levels. A section is defined by its title and reference. The reference, like all file references in a Qt help project, are relative to the help project file itself.</source>
          <target state="translated">1つのセクションタグは、目次の中の1つの項目を表します。セクションはどの程度まで入れ子にすることができますが、ユーザーの視点から見ると4~5階層以下であることが望ましいです。セクションはタイトルと参照によって定義されます。参照は、Qtヘルププロジェクト内のすべてのファイル参照と同様に、ヘルププロジェクトのファイル自体からの相対参照です。</target>
        </trans-unit>
        <trans-unit id="3824fa50476a7eaeee5469d568f55cd47157896c" translate="yes" xml:space="preserve">
          <source>One shot auto focus to objects close to camera.</source>
          <target state="translated">カメラに近いオブジェクトにワンショットオートフォーカス。</target>
        </trans-unit>
        <trans-unit id="b1e006560d98f655fe40c04d72790d15565a3184" translate="yes" xml:space="preserve">
          <source>One thing to keep in mind from this namespace discussion, whether you run XQueries in a Qt program using Qt XML Patterns, or you run them from the command line using xmlpatterns, is that if you don't get the output you expect, it might be because the data you are querying uses namespaces, but you didn't declare those namespaces in your &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;.</source>
          <target state="translated">Qt XMLパターンを使用してQtプログラムでXQueriesを実行する場合でも、xmlpatternsを使用してコマンドラインから実行する場合でも、この名前空間の説明で覚えておくべきことの1つは、期待する出力が得られない場合は、クエリしているデータが名前空間を使用しているが、&lt;a href=&quot;xmlprocessing&quot;&gt;XQueryで&lt;/a&gt;それらの名前空間を宣言していないためです。</target>
        </trans-unit>
        <trans-unit id="79890f10172a98fd3ab203c0cf2431528cfa371d" translate="yes" xml:space="preserve">
          <source>One thing to keep in mind from this namespace discussion, whether you run XQueries in a Qt program using Qt XML Patterns, or you run them from the command line using xmlpatterns, is that if you don't get the output you expect, it might be because the data you are querying uses namespaces, but you didn't declare those namespaces in your &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;.</source>
          <target state="translated">Qt XMLパターンを使用してQtプログラムでXQueriesを実行するか、xmlpatternsを使用してコマンドラインから実行するかに関係なく、この名前空間の説明から覚えておくべきことの1つは、期待する出力が得られない場合に、クエリするデータが名前空間を使用しているが、&lt;a href=&quot;xmlprocessing#&quot;&gt;XQueryで&lt;/a&gt;それらの名前空間を宣言していないためです。</target>
        </trans-unit>
        <trans-unit id="0ddf250291fc0a37a862cc3eb5dcdd0fa9eaffcb" translate="yes" xml:space="preserve">
          <source>One to four occurrences of &lt;a href=&quot;#brush&quot;&gt;Brush&lt;/a&gt;, specifying the top, right, bottom, and left edges of a box, respectively. If the left color is not specified, it is taken to be the same as the right color. If the bottom color is not specified, it is taken to be the same as the top color. If the right color is not specified, it is taken to be the same as the top color.</source>
          <target state="translated">&lt;a href=&quot;#brush&quot;&gt;ブラシの&lt;/a&gt; 1〜4回の出現で、それぞれボックスの上端、右端、下端、左端を指定します。左の色が指定されていない場合は、右の色と同じと見なされます。下部の色が指定されていない場合は、上部の色と同じと見なされます。正しい色が指定されていない場合は、上の色と同じであると見なされます。</target>
        </trans-unit>
        <trans-unit id="e08ef974a3e7bb738b48f0eeaf9b9216a6d5c063" translate="yes" xml:space="preserve">
          <source>One to four occurrences of &lt;a href=&quot;#length&quot;&gt;Length&lt;/a&gt;, specifying the top, right, bottom, and left edges of a box, respectively. If the left length is not specified, it is taken to be the same as the right length. If the bottom length is not specified, is it taken to be the same as the top length. If the right length is not specified, it is taken to be the same as the top length.</source>
          <target state="translated">1〜4回の&lt;a href=&quot;#length&quot;&gt;Lengthの&lt;/a&gt;出現で、それぞれボックスの上端、右端、下端、左端を指定します。左の長さが指定されていない場合は、右の長さと同じと見なされます。下部の長さが指定されていない場合、上部の長さと同じであると見なされますか？正しい長さが指定されていない場合は、上部の長さと同じと見なされます。</target>
        </trans-unit>
        <trans-unit id="9220babe6f3a70b8d5b5612d29dbd17f818f7bdc" translate="yes" xml:space="preserve">
          <source>One to four occurrences of &lt;a href=&quot;stylesheet-reference#brush&quot;&gt;Brush&lt;/a&gt;, specifying the top, right, bottom, and left edges of a box, respectively. If the left color is not specified, it is taken to be the same as the right color. If the bottom color is not specified, it is taken to be the same as the top color. If the right color is not specified, it is taken to be the same as the top color.</source>
          <target state="translated">ボックスの上端、右端、下端、左端をそれぞれ指定する、&lt;a href=&quot;stylesheet-reference#brush&quot;&gt;ブラシの&lt;/a&gt;1〜4回の出現。左の色が指定されていない場合は、右の色と同じと見なされます。下の色が指定されていない場合は、上の色と同じと見なされます。正しい色が指定されていない場合は、一番上の色と同じであると見なされます。</target>
        </trans-unit>
        <trans-unit id="6f4ef6e9747b60abe4a589c97596b08fe59a21e0" translate="yes" xml:space="preserve">
          <source>One to four occurrences of &lt;a href=&quot;stylesheet-reference#length&quot;&gt;Length&lt;/a&gt;, specifying the top, right, bottom, and left edges of a box, respectively. If the left length is not specified, it is taken to be the same as the right length. If the bottom length is not specified, is it taken to be the same as the top length. If the right length is not specified, it is taken to be the same as the top length.</source>
          <target state="translated">ボックスの上端、右端、下端、左端をそれぞれ指定する、&lt;a href=&quot;stylesheet-reference#length&quot;&gt;長さの&lt;/a&gt;1〜4回の出現。左の長さが指定されていない場合は、右の長さと同じであると見なされます。下部の長さが指定されていない場合、上部の長さと同じであると見なされますか。正しい長さが指定されていない場合は、上部の長さと同じであると見なされます。</target>
        </trans-unit>
        <trans-unit id="bb13534be607b594e5d4fd2e50c8a12cd963a1b5" translate="yes" xml:space="preserve">
          <source>One way to define these preprocessor symbols globally for your application is to add the following entry to your &lt;a href=&quot;qmake-project-files&quot;&gt;qmake project file&lt;/a&gt;:</source>
          <target state="translated">これらのプリプロセッサシンボルをアプリケーションに対してグローバルに定義する1つの方法は、&lt;a href=&quot;qmake-project-files&quot;&gt;qmakeプロジェクトファイルに&lt;/a&gt;次のエントリを追加することです。</target>
        </trans-unit>
        <trans-unit id="223f7c148d75ac21a0035b635145d191f7358d4e" translate="yes" xml:space="preserve">
          <source>One way to do this is to add translation support to a non-Qt class using the &lt;a href=&quot;qcoreapplication#Q_DECLARE_TR_FUNCTIONS&quot;&gt;Q_DECLARE_TR_FUNCTIONS&lt;/a&gt;() macro; for example:</source>
          <target state="translated">これを行う1つの方法は、&lt;a href=&quot;qcoreapplication#Q_DECLARE_TR_FUNCTIONS&quot;&gt;Q_DECLARE_TR_FUNCTIONS&lt;/a&gt;（）マクロを使用して、Qt以外のクラスに変換サポートを追加することです。例えば：</target>
        </trans-unit>
        <trans-unit id="6e8dad5716f44bbc2825b993d58097ca36e3e569" translate="yes" xml:space="preserve">
          <source>One way to initialize a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; is simply to pass a &lt;code&gt;const char *&lt;/code&gt; to its constructor. For example, the following code creates a byte array of size 5 containing the data &quot;Hello&quot;:</source>
          <target state="translated">&lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;を初期化する1つの方法は、単に &lt;code&gt;const char *&lt;/code&gt; をそのコンストラクターに渡すことです。たとえば、次のコードは、データ「Hello」を含むサイズ5のバイト配列を作成します。</target>
        </trans-unit>
        <trans-unit id="2ba2f1cc0f79034b36c2a103783eeb702b2a12a0" translate="yes" xml:space="preserve">
          <source>One way to initialize a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; is simply to pass a &lt;code&gt;const char *&lt;/code&gt; to its constructor. For example, the following code creates a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; of size 5 containing the data &quot;Hello&quot;:</source>
          <target state="translated">&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;を初期化する1つの方法は、単に &lt;code&gt;const char *&lt;/code&gt; をそのコンストラクターに渡すことです。たとえば、次のコードは、データ「Hello」を含むサイズ5の&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;を作成します。</target>
        </trans-unit>
        <trans-unit id="21edb82cfb16a143db2707df33bbc9fa1da4fcca" translate="yes" xml:space="preserve">
          <source>One way to initialize a QByteArray is simply to pass a &lt;code&gt;const char *&lt;/code&gt; to its constructor. For example, the following code creates a byte array of size 5 containing the data &quot;Hello&quot;:</source>
          <target state="translated">QByteArrayを初期化する1つの方法は、単に &lt;code&gt;const char *&lt;/code&gt; をコンストラクターに渡すことです。たとえば、次のコードは、データ「Hello」を含むサイズ5のバイト配列を作成します。</target>
        </trans-unit>
        <trans-unit id="799283615a57ad8aa2e0c7ebda730539d150f466" translate="yes" xml:space="preserve">
          <source>One way to initialize a QString is simply to pass a &lt;code&gt;const char *&lt;/code&gt; to its constructor. For example, the following code creates a QString of size 5 containing the data &quot;Hello&quot;:</source>
          <target state="translated">QStringを初期化する1つの方法は、単に &lt;code&gt;const char *&lt;/code&gt; をコンストラクターに渡すことです。たとえば、次のコードは、データ「Hello」を含むサイズ5のQStringを作成します。</target>
        </trans-unit>
        <trans-unit id="cb26e00428206c5a087e4bd954ff814ca5ff8b6c" translate="yes" xml:space="preserve">
          <source>One way to speed up the &lt;code&gt;FillContains&lt;/code&gt; check is to generate an approximate outline with as few points as possible, place that in a transparent Shape on top, and add your Pointer Handlers to that, so that the containment check is cheaper during event delivery.</source>
          <target state="translated">&lt;code&gt;FillContains&lt;/code&gt; チェックを高速化する1つの方法は、可能な限り少ないポイントでおおよそのアウトラインを生成し、それを透明なShapeの上に配置し、それにポインターハンドラーを追加することです。これにより、イベント配信中の包含チェックがより安価になります。</target>
        </trans-unit>
        <trans-unit id="0f3ae55a89898820823b772b68d03c22e2bd821c" translate="yes" xml:space="preserve">
          <source>One-line text editor</source>
          <target state="translated">一行テキストエディタ</target>
        </trans-unit>
        <trans-unit id="e59fd204b822f9c79f6aef0a50f084bf2214e1f8" translate="yes" xml:space="preserve">
          <source>One-shot auto focus mode.</source>
          <target state="translated">ワンショットオートフォーカスモード。</target>
        </trans-unit>
        <trans-unit id="8eb5dfce967d8a943c9326524741741275b32898" translate="yes" xml:space="preserve">
          <source>Online Installation</source>
          <target state="translated">オンラインインストール</target>
        </trans-unit>
        <trans-unit id="e8fd5f2a0f9df3ef30bb295e56ff9a4f6501e8fd" translate="yes" xml:space="preserve">
          <source>Online geocoding is supported.</source>
          <target state="translated">オンラインジオコーディングに対応しています。</target>
        </trans-unit>
        <trans-unit id="6e94f4a22f48e532df16fc87be0d43fcc763a463" translate="yes" xml:space="preserve">
          <source>Online mapping is supported.</source>
          <target state="translated">オンラインマッピングに対応しています。</target>
        </trans-unit>
        <trans-unit id="37985b6e22c37ff83b1855d037ac0df9c2c84bf9" translate="yes" xml:space="preserve">
          <source>Online navigation is supported.</source>
          <target state="translated">オンラインナビゲーションに対応しています。</target>
        </trans-unit>
        <trans-unit id="af889436cf506e074df27705b4cc0b25fff47cab" translate="yes" xml:space="preserve">
          <source>Online places is supported.</source>
          <target state="translated">オンラインプレイスに対応しています。</target>
        </trans-unit>
        <trans-unit id="9f7147cd02926e21fb68213a11cbb540adb516aa" translate="yes" xml:space="preserve">
          <source>Online routing is supported.</source>
          <target state="translated">オンラインルーティングに対応しています。</target>
        </trans-unit>
        <trans-unit id="4f153935e68f74bbea5e8fc6ce480ca9811c1d7d" translate="yes" xml:space="preserve">
          <source>Only &quot;http&quot;-&amp;gt;&quot;http&quot;, &quot;http&quot; -&amp;gt; &quot;https&quot; or &quot;https&quot; -&amp;gt; &quot;https&quot; redirects are allowed. Equivalent to setting the old &lt;a href=&quot;qnetworkrequest#Attribute-enum&quot;&gt;FollowRedirectsAttribute&lt;/a&gt; to true</source>
          <target state="translated">&quot;http&quot;-&amp;gt; &quot;http&quot;、 &quot;http&quot;-&amp;gt; &quot;https&quot;または &quot;https&quot;-&amp;gt; &quot;https&quot;リダイレクトのみが許可されます。古い&lt;a href=&quot;qnetworkrequest#Attribute-enum&quot;&gt;FollowRedirectsAttribute&lt;/a&gt;をtrue に設定することと同等</target>
        </trans-unit>
        <trans-unit id="061c38f429d66e7bd7c7707bdeffdb4473422e38" translate="yes" xml:space="preserve">
          <source>Only &quot;plain data&quot; can be returned from JavaScript as the result value. Supported data types include all of the JSON data types as well as, for example, &lt;code&gt;Date&lt;/code&gt; and &lt;code&gt;ArrayBuffer&lt;/code&gt;. Unsupported data types include, for example, &lt;code&gt;Function&lt;/code&gt; and &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">結果値としてJavaScriptから返されるのは「プレーンデータ」のみです。サポートされているデータ型には、すべてのJSONデータ型のほか、例えば &lt;code&gt;Date&lt;/code&gt; や &lt;code&gt;ArrayBuffer&lt;/code&gt; が含まれます。サポートされていないデータ型には、たとえば、 &lt;code&gt;Function&lt;/code&gt; および &lt;code&gt;Promise&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="d0cba37af2614a4e4f6ddf0c51d2fcd4cf170760" translate="yes" xml:space="preserve">
          <source>Only &lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtWarningMsg&lt;/a&gt; and &lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtFatalMsg&lt;/a&gt; are used. The former identifies a compile or runtime warning, while the latter identifies a dynamic or static error.</source>
          <target state="translated">&lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtWarningMsg&lt;/a&gt;と&lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtFatalMsg&lt;/a&gt;のみが使用されます。前者はコンパイルまたはランタイムの警告を識別し、後者は動的または静的エラーを識別します。</target>
        </trans-unit>
        <trans-unit id="5a7eec6f52e281f42b54e3d9ce6ff843282aa29e" translate="yes" xml:space="preserve">
          <source>Only &lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtWarningMsg&lt;/a&gt; and &lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtFatalMsg&lt;/a&gt; are used. The former identifies a warning, while the latter identifies an error.</source>
          <target state="translated">&lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtWarningMsg&lt;/a&gt;と&lt;a href=&quot;#QtMsgType-enum&quot;&gt;QtFatalMsg&lt;/a&gt;のみが使用されます。前者は警告を識別し、後者はエラーを識別します。</target>
        </trans-unit>
        <trans-unit id="00c0225557dcf5a66aeb0575fed3923085b73ec8" translate="yes" xml:space="preserve">
          <source>Only &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; uses &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;'s internal buffer; &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; does not use any buffering at all, but rather relies on the implicit buffering provided by the operating system. Because of this, calling this function on &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; has no effect.</source>
          <target state="translated">唯一の&lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocketは&lt;/a&gt;使用しています&lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt;の内部バッファを。&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt;はバッファリングをまったく使用しませんが、オペレーティングシステムによって提供される暗黙的なバッファリングに依存しています。このため、&lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocketで&lt;/a&gt;この関数を呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="8d62165147d05535990621a2783f3138e216fb36" translate="yes" xml:space="preserve">
          <source>Only &lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtWarningMsg&lt;/a&gt; and &lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtFatalMsg&lt;/a&gt; are used. The former identifies a compile or runtime warning, while the latter identifies a dynamic or static error.</source>
          <target state="translated">&lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtWarningMsg&lt;/a&gt;と&lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtFatalMsg&lt;/a&gt;のみが使用されます。前者はコンパイルまたは実行時の警告を識別し、後者は動的または静的エラーを識別します。</target>
        </trans-unit>
        <trans-unit id="7f8c37834884229bafc71300d1750d7bb47699c9" translate="yes" xml:space="preserve">
          <source>Only &lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtWarningMsg&lt;/a&gt; and &lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtFatalMsg&lt;/a&gt; are used. The former identifies a warning, while the latter identifies an error.</source>
          <target state="translated">&lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtWarningMsg&lt;/a&gt;と&lt;a href=&quot;qtglobal#QtMsgType-enum&quot;&gt;QtFatalMsg&lt;/a&gt;のみが使用されます。前者は警告を識別し、後者はエラーを識別します。</target>
        </trans-unit>
        <trans-unit id="5102c1754518c4338955afd409dc169f702e8585" translate="yes" xml:space="preserve">
          <source>Only OpenGL ES 2</source>
          <target state="translated">OpenGL ES 2のみ</target>
        </trans-unit>
        <trans-unit id="7243dc9588e7d32cd89d22c4fd52510a4994cbe2" translate="yes" xml:space="preserve">
          <source>Only Shape layer supported</source>
          <target state="translated">形状レイヤーのみ対応</target>
        </trans-unit>
        <trans-unit id="997fa52e769e0a4d59c8365090166ca6b5927b69" translate="yes" xml:space="preserve">
          <source>Only Signals and Slots May Appear in the &lt;code&gt;signals&lt;/code&gt; and &lt;code&gt;slots&lt;/code&gt; Sections of a Class</source>
          <target state="translated">クラスの &lt;code&gt;signals&lt;/code&gt; と &lt;code&gt;slots&lt;/code&gt; セクションに表示されるのは信号とスロットのみ</target>
        </trans-unit>
        <trans-unit id="3319c794abcdb28819b733bc2a2b0abb219f6fcf" translate="yes" xml:space="preserve">
          <source>Only a given</source>
          <target state="translated">唯一つ</target>
        </trans-unit>
        <trans-unit id="a06c7e81c93a88a08338ca6aec75092f1ff90cec" translate="yes" xml:space="preserve">
          <source>Only a partial</source>
          <target state="translated">一部のみ</target>
        </trans-unit>
        <trans-unit id="7f046cd2892da95841135a185cd4f4e6ea1db36d" translate="yes" xml:space="preserve">
          <source>Only a single instance of this characteristic exists as part of a HID Service.</source>
          <target state="translated">この特性の単一のインスタンスのみがHIDサービスの一部として存在します。</target>
        </trans-unit>
        <trans-unit id="01749c411894106bfeb3addcbe0e8ae80d152af4" translate="yes" xml:space="preserve">
          <source>Only a subset of the properties in &lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt; are used by the calendar widget. Currently, the foreground, background and font properties are used to determine the rendering of individual cells in the widget.</source>
          <target state="translated">&lt;a href=&quot;qtextcharformat&quot;&gt;QTextCharFormat&lt;/a&gt;のプロパティのサブセットのみがカレンダーウィジェットで使用されます。現在、フォアグラウンド、バックグラウンド、フォントの各プロパティは、ウィジェット内の個々のセルのレンダリングを決定するために使用されています。</target>
        </trans-unit>
        <trans-unit id="7966f02e32af2bc52e892f9d86b8be70ebe8ac04" translate="yes" xml:space="preserve">
          <source>Only active items can gain input focus.</source>
          <target state="translated">アクティブなアイテムだけが入力フォーカスを得ることができます。</target>
        </trans-unit>
        <trans-unit id="1bb8d0321ed54742c0b1fc91a7b2d143bab06e67" translate="yes" xml:space="preserve">
          <source>Only allow the hostUrl to be set to a QtRO supported schema. This is the default value, and causes a Node error to be set if an unrecognized schema is provided.</source>
          <target state="translated">hostUrl を QtRO がサポートしているスキーマにのみ設定できるようにします。これはデフォルト値で、認識されていないスキーマが提供された場合に Node エラーが設定されます。</target>
        </trans-unit>
        <trans-unit id="34cf96d4b14226df0b6ec792d6c4e3c938d7f8d6" translate="yes" xml:space="preserve">
          <source>Only back-facing triangles will be picked.</source>
          <target state="translated">裏向きの三角形だけがピックアップされます。</target>
        </trans-unit>
        <trans-unit id="acebd9b91d2a9373d89a75b647d1a05167876851" translate="yes" xml:space="preserve">
          <source>Only characters suitable for URLs are allowed.</source>
          <target state="translated">URLに適した文字のみ使用できます。</target>
        </trans-unit>
        <trans-unit id="a6559e1245f41618e379cc4cfccde656e9462111" translate="yes" xml:space="preserve">
          <source>Only characters suitable for email addresses are allowed.</source>
          <target state="translated">メールアドレスに適した文字のみ使用できます。</target>
        </trans-unit>
        <trans-unit id="16b980c1676a070c2f8ef9d269147dba31003618" translate="yes" xml:space="preserve">
          <source>Only characters suitable for phone dialing are allowed.</source>
          <target state="translated">電話のダイヤルに適した文字のみが使用できます。</target>
        </trans-unit>
        <trans-unit id="e62882708034c57573cdd9e7f3b5f6cda8b08829" translate="yes" xml:space="preserve">
          <source>Only checkable actions can be checked. By default, this is false (the action is unchecked).</source>
          <target state="translated">チェック可能なアクションのみをチェックすることができます。デフォルトでは、これはfalseです(アクションはチェックされていません)。</target>
        </trans-unit>
        <trans-unit id="d1df5af120516c42a3e9ca0be1b2c450f2973529" translate="yes" xml:space="preserve">
          <source>Only checkable buttons can be checked. By default, the button is unchecked.</source>
          <target state="translated">チェック可能なボタンのみチェックを入れることができます。デフォルトでは、ボタンはチェックされていません。</target>
        </trans-unit>
        <trans-unit id="b9dc3b4af8780ed2b7244ae6ca4a682fbaa668e3" translate="yes" xml:space="preserve">
          <source>Only dialable input is allowed.</source>
          <target state="translated">ダイヤル可能な入力のみ可能です。</target>
        </trans-unit>
        <trans-unit id="c8bebe53e929796679027326ec01f32cb9eca399" translate="yes" xml:space="preserve">
          <source>Only digits are allowed.</source>
          <target state="translated">数字のみ使用可能です。</target>
        </trans-unit>
        <trans-unit id="344ffbc8b5ed91b54430eb6da6076aa5951e7cbc" translate="yes" xml:space="preserve">
          <source>Only display the icon.</source>
          <target state="translated">アイコンのみを表示します。</target>
        </trans-unit>
        <trans-unit id="4c3c090015e545870f3cb11a2c51d47e8b827f0a" translate="yes" xml:space="preserve">
          <source>Only display the text.</source>
          <target state="translated">テキストのみを表示します。</target>
        </trans-unit>
        <trans-unit id="35eed40534af6dd7588605a96b90a6fea480866e" translate="yes" xml:space="preserve">
          <source>Only dither to indexed formats if the source image uses more different colors than the size of the color table of the destination format.</source>
          <target state="translated">元画像が出力先のフォーマットのカラーテーブルのサイズよりも多くの異なる色を使用している場合にのみ、インデックス化されたフォーマットに対してディザを行います。</target>
        </trans-unit>
        <trans-unit id="b3901def538061843c03f3797f5d3105889c2004" translate="yes" xml:space="preserve">
          <source>Only editable combo boxes have a line edit.</source>
          <target state="translated">編集可能なコンボボックスのみ行編集が可能です。</target>
        </trans-unit>
        <trans-unit id="1c2502f7d0a3edec7872a1fb7ab692c740e95d69" translate="yes" xml:space="preserve">
          <source>Only enabled items that set the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsFocusable&lt;/a&gt; flag can accept keyboard focus.</source>
          <target state="translated">キーボードフォーカスを受け入れることができるのは、&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsFocusable&lt;/a&gt;フラグを設定した有効なアイテムのみです。</target>
        </trans-unit>
        <trans-unit id="c33f03b42aa5debac6e83482f764721b5e9a84b7" translate="yes" xml:space="preserve">
          <source>Only flat models (lists and tables) are supported, tree models are not.</source>
          <target state="translated">フラットモデル(リストとテーブル)のみサポートされており、ツリーモデルはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="d0886825525b27aef071d1d36dd9891332bc3c4d" translate="yes" xml:space="preserve">
          <source>Only for IPv6</source>
          <target state="translated">IPv6のみ</target>
        </trans-unit>
        <trans-unit id="0f7a6704e7a0ad432fcc65a63542d5bd64d35dd7" translate="yes" xml:space="preserve">
          <source>Only front-facing triangles will be picked (default).</source>
          <target state="translated">正面を向いた三角形のみが選択されます (デフォルト)。</target>
        </trans-unit>
        <trans-unit id="1d349dcca0926ada1d5bba06ff5e98f26d653fbe" translate="yes" xml:space="preserve">
          <source>Only function names are returned.</source>
          <target state="translated">関数名のみが返されます。</target>
        </trans-unit>
        <trans-unit id="5392b2ac53d6221666603d531f0410a99bf89ae2" translate="yes" xml:space="preserve">
          <source>Only integer frame-mode of a timeline supported (real frame numbers and time are rounded to the nearest integer)</source>
          <target state="translated">タイムラインの整数フレームモードのみサポート (実フレーム番号と時間は最も近い整数に丸められます)</target>
        </trans-unit>
        <trans-unit id="44948f37bb4db4bd9a2aed10375dc786efd3cadf" translate="yes" xml:space="preserve">
          <source>Only items that &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#stackview&quot;&gt;StackView&lt;/a&gt; created itself (from a &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; or &lt;a href=&quot;qml-url&quot;&gt;url&lt;/a&gt;) will be destroyed when popped. See &lt;a href=&quot;qml-qtquick-controls2-stackview#item-ownership&quot;&gt;Item Ownership&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#stackview&quot;&gt;StackView&lt;/a&gt;がそれ自体を（&lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;または&lt;a href=&quot;qml-url&quot;&gt;url&lt;/a&gt;から）作成したアイテムのみが、ポップ時に破棄されます。詳細については、&lt;a href=&quot;qml-qtquick-controls2-stackview#item-ownership&quot;&gt;アイテムの所有権&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="3998088fb6af63aa5c0c0ef06eddae85f39c3d51" translate="yes" xml:space="preserve">
          <source>Only items that &lt;a href=&quot;qml-qtquick-controls2-stackview&quot;&gt;StackView&lt;/a&gt; created itself (from a &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; or &lt;a href=&quot;qml-url&quot;&gt;url&lt;/a&gt;) will be destroyed when popped. See &lt;a href=&quot;qml-qtquick-controls2-stackview#item-ownership&quot;&gt;Item Ownership&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls2-stackview&quot;&gt;StackView&lt;/a&gt;が（&lt;a href=&quot;qml-qtqml-component&quot;&gt;コンポーネント&lt;/a&gt;または&lt;a href=&quot;qml-url&quot;&gt;URLから&lt;/a&gt;）それ自体を作成したアイテムのみが、ポップされたときに破棄されます。詳細については、&lt;a href=&quot;qml-qtquick-controls2-stackview#item-ownership&quot;&gt;アイテムの所有権&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="e49b7559c25c57197a502aeb074f2038159cfe2a" translate="yes" xml:space="preserve">
          <source>Only items that &lt;a href=&quot;qtquickcontrols-changes-qt6#stackview&quot;&gt;StackView&lt;/a&gt; created itself (from a &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; or &lt;a href=&quot;qml-url&quot;&gt;url&lt;/a&gt;) will be destroyed when popped. See &lt;a href=&quot;qml-qtquick-controls2-stackview#item-ownership&quot;&gt;Item Ownership&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;qtquickcontrols-changes-qt6#stackview&quot;&gt;StackView&lt;/a&gt;が（&lt;a href=&quot;qml-qtqml-component&quot;&gt;コンポーネント&lt;/a&gt;または&lt;a href=&quot;qml-url&quot;&gt;URLから&lt;/a&gt;）それ自体を作成したアイテムのみが、ポップされたときに破棄されます。詳細については、&lt;a href=&quot;qml-qtquick-controls2-stackview#item-ownership&quot;&gt;アイテムの所有権&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="9e37f535e5c62f28a9a6e9ecae26a61dad1f62b3" translate="yes" xml:space="preserve">
          <source>Only items that are children of the &lt;a href=&quot;qml-qtquick-layouts-stacklayout&quot;&gt;StackLayout&lt;/a&gt; will be candidates for layouting.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-layouts-stacklayout&quot;&gt;StackLayoutの&lt;/a&gt;子であるアイテムのみがレイアウトの候補になります。</target>
        </trans-unit>
        <trans-unit id="c9dfd3fb5bd8ed2bd6a32f48ee311389249f3218" translate="yes" xml:space="preserve">
          <source>Only items that belong to this group are visible to a view.</source>
          <target state="translated">このグループに属する項目のみがビューに表示されます。</target>
        </trans-unit>
        <trans-unit id="c8168ea033dd3d3d177585811115776bae643be6" translate="yes" xml:space="preserve">
          <source>Only items that set the &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsFocusable&lt;/a&gt; flag, or widgets that set an appropriate focus policy, can accept keyboard focus.</source>
          <target state="translated">キーボードフォーカスを受け入れることができるのは、&lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;ItemIsFocusable&lt;/a&gt;フラグを設定したアイテム、または適切なフォーカスポリシーを設定したウィジェットのみです。</target>
        </trans-unit>
        <trans-unit id="cbbfc9d955628abe0b8994e7bc9e7fedd9ddf0eb" translate="yes" xml:space="preserve">
          <source>Only items which specify &lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem::ItemHasContents&lt;/a&gt; are allowed to call QQuickItem::update().</source>
          <target state="translated">&lt;a href=&quot;qquickitem#Flag-enum&quot;&gt;QQuickItem :: ItemHasContents&lt;/a&gt;を指定するアイテムだけがQQuickItem :: update（）を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="547bf1587da62d5bef95920f2782ef465d057ee4" translate="yes" xml:space="preserve">
          <source>Only latin based input is allowed.</source>
          <target state="translated">ラテン語ベースの入力のみ可能です。</target>
        </trans-unit>
        <trans-unit id="a4047b356fb29b5d84e935cb033fa90fbb1fe809" translate="yes" xml:space="preserve">
          <source>Only list .qrc file entries, do not generate code.</source>
          <target state="translated">.qrc ファイルのエントリのみをリストアップし、コードを生成しません。</target>
        </trans-unit>
        <trans-unit id="d5482ecc95a82b6bfe1ed407a6c99d94d7e0da1c" translate="yes" xml:space="preserve">
          <source>Only list files that have been modified (ignored on Unix).</source>
          <target state="translated">変更されたファイルのみをリストアップします(Unixでは無視されます)。</target>
        </trans-unit>
        <trans-unit id="4ceaf763a33bcb125b8cfb24f1e36ffac2200774" translate="yes" xml:space="preserve">
          <source>Only lower case letter input is allowed.</source>
          <target state="translated">小文字のみの入力が可能です。</target>
        </trans-unit>
        <trans-unit id="9862f27489035178e0538dccef177ac6a28c837d" translate="yes" xml:space="preserve">
          <source>Only match to a standard page size if the sizes match exactly.</source>
          <target state="translated">サイズが完全に一致している場合のみ、標準ページサイズに一致します。</target>
        </trans-unit>
        <trans-unit id="c0d71635cf00a59e98c2eda6c62ad5991c0deb65" translate="yes" xml:space="preserve">
          <source>Only network configurations of type &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;ServiceNetwork&lt;/a&gt; can have children. Otherwise this function returns an empty list.</source>
          <target state="translated">子を持つことができるのは、タイプ&lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;ServiceNetworkの&lt;/a&gt;ネットワーク構成のみです。それ以外の場合、この関数は空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="81e7ce30d833f00e89b96b50ef1962325eacb9ba" translate="yes" xml:space="preserve">
          <source>Only nodes of type &lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;ElementNode&lt;/a&gt; or &lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;AttributeNode&lt;/a&gt; can have namespaces. A namespace URI must be specified at creation time and cannot be changed later.</source>
          <target state="translated">名前空間を持つことができるのは、&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;ElementNode&lt;/a&gt;または&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;AttributeNode&lt;/a&gt;タイプのノードのみです。ネームスペースURIは作成時に指定する必要があり、後で変更することはできません。</target>
        </trans-unit>
        <trans-unit id="08af18848d1be9d81cb5216c9a56e01e3ae655d6" translate="yes" xml:space="preserve">
          <source>Only nodes of type &lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;ElementNode&lt;/a&gt; or &lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;AttributeNode&lt;/a&gt; can have namespaces. A namespace must have been specified at creation time; it is not possible to add a namespace afterwards.</source>
          <target state="translated">名前空間を持つことができるのは、&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;ElementNode&lt;/a&gt;または&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;AttributeNode&lt;/a&gt;タイプのノードのみです。ネームスペースは作成時に指定されている必要があります。後で名前空間を追加することはできません。</target>
        </trans-unit>
        <trans-unit id="a49b9e1f13cc73159d3efb2e4bd7e96e1b0d5c8f" translate="yes" xml:space="preserve">
          <source>Only nodes of type &lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;ElementNode&lt;/a&gt; or &lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;AttributeNode&lt;/a&gt; can have namespaces. A namespace prefix must be specified at creation time. If a node was created with a namespace prefix, you can change it later with &lt;a href=&quot;qdomnode#setPrefix&quot;&gt;setPrefix&lt;/a&gt;().</source>
          <target state="translated">名前空間を持つことができるのは、&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;ElementNode&lt;/a&gt;または&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;AttributeNode&lt;/a&gt;タイプのノードのみです。名前空間接頭辞は、作成時に指定する必要があります。ノードが名前空間プレフィックスで作成された場合は、後で&lt;a href=&quot;qdomnode#setPrefix&quot;&gt;setPrefix&lt;/a&gt;（）を使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="4229d3dfaba3b86156753fc6e1e4cf70a2dc792f" translate="yes" xml:space="preserve">
          <source>Only nodes of type &lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;ElementNode&lt;/a&gt; or &lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;AttributeNode&lt;/a&gt; can have namespaces. A namespace prefix must have be specified at creation time; it is not possible to add a namespace prefix afterwards.</source>
          <target state="translated">名前空間を持つことができるのは、&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;ElementNode&lt;/a&gt;または&lt;a href=&quot;qdomnode#NodeType-enum&quot;&gt;AttributeNode&lt;/a&gt;タイプのノードのみです。名前空間接頭辞は作成時に指定する必要があります。後で名前空間接頭辞を追加することはできません。</target>
        </trans-unit>
        <trans-unit id="db7d2b4b74d3f19d24ab1738b1cd3550761be1cb" translate="yes" xml:space="preserve">
          <source>Only number input is allowed. This includes decimal point and minus sign.</source>
          <target state="translated">数値入力のみ可能です。小数点、マイナス記号も含みます。</target>
        </trans-unit>
        <trans-unit id="bd3f064c7188629f6eedfba5abfa3b90080fc85c" translate="yes" xml:space="preserve">
          <source>Only numeric input is allowed.</source>
          <target state="translated">数値入力のみ可能です。</target>
        </trans-unit>
        <trans-unit id="9d9b5680177318989bd0ac87a5b746c5fe565830" translate="yes" xml:space="preserve">
          <source>Only on X11, when a tooltip is requested, the &lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt; receives a &lt;a href=&quot;qhelpevent&quot;&gt;QHelpEvent&lt;/a&gt; of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ToolTip&lt;/a&gt;. Additionally, the &lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt; receives wheel events of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Wheel&lt;/a&gt;. These are not supported on any other platform.</source>
          <target state="translated">X11の場合のみ、ツールチップが要求されると、&lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt;は&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: &lt;/a&gt;&lt;a href=&quot;qhelpevent&quot;&gt;ToolTip&lt;/a&gt;タイプのQHelpEventを受け取ります。さらに、&lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt;は&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: Wheel&lt;/a&gt;タイプのホイールイベントを受け取ります。これらは他のプラットフォームではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="dd4ac69624bdcf89eff22ef254a3a58f81cd50b9" translate="yes" xml:space="preserve">
          <source>Only on X11, when a tooltip is requested, the QSystemTrayIcon receives a &lt;a href=&quot;qhelpevent&quot;&gt;QHelpEvent&lt;/a&gt; of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ToolTip&lt;/a&gt;. Additionally, the QSystemTrayIcon receives wheel events of type &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Wheel&lt;/a&gt;. These are not supported on any other platform.</source>
          <target state="translated">X11でのみ、ツールチップが要求されると、QSystemTrayIconはタイプ&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: &lt;/a&gt;&lt;a href=&quot;qhelpevent&quot;&gt;ToolTip&lt;/a&gt;のQHelpEventを受け取ります。さらに、QSystemTrayIconは、タイプ&lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: Wheelの&lt;/a&gt;ホイールイベントを受け取ります。これらは他のプラットフォームではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="c966c2e5c8671dd2923be1ef96b426246e45e1b7" translate="yes" xml:space="preserve">
          <source>Only one &lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt; implementation may be instantiated and exported by an ActiveX server application. This instance is accessible through the global qAxFactory() function.</source>
          <target state="translated">ActiveXサーバーアプリケーションでインスタンス化およびエクスポートできるのは、1つの&lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt;実装のみです。このインスタンスには、グローバルqAxFactory（）関数を介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="7e86f4ac4cc6b87c39c80af06e95ad366bf44a46" translate="yes" xml:space="preserve">
          <source>Only one &lt;a href=&quot;qwebengineprofile&quot;&gt;QWebEngineProfile&lt;/a&gt; can do this at a time, and it is recommended that the profile fullfilling this role has a disk HTTP cache to avoid needlessly re-downloading. If you set the option on a second profile, it will be disabled on the profile it is currently set.</source>
          <target state="translated">一度に&lt;a href=&quot;qwebengineprofile&quot;&gt;これ&lt;/a&gt;を実行できるQWebEngineProfileは1つだけです。この役割を完全に満たすプロファイルには、不必要な再ダウンロードを回避するために、ディスクHTTPキャッシュを含めることをお勧めします。2番目のプロファイルでオプションを設定すると、現在設定されているプロファイルでは無効になります。</target>
        </trans-unit>
        <trans-unit id="e4c11af563f43ba6ea402c5a014c8f73ee682437" translate="yes" xml:space="preserve">
          <source>Only one Item can be a direct child of the &lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt; and the child is implicitly anchored to fill the scroll view.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollViewの&lt;/a&gt;直接の子になることができるのは1つの項目のみで、子は暗黙的にアンカーされてスクロールビューを埋めます。</target>
        </trans-unit>
        <trans-unit id="f542304090a05129257a2d09dd30d295babc28b1" translate="yes" xml:space="preserve">
          <source>Only one Item can be a direct child of the ScrollView and the child is implicitly anchored to fill the scroll view.</source>
          <target state="translated">スクロールビューの直接の子になることができるのは1つのアイテムのみで、その子は暗黙のうちにスクロールビューを埋めるように固定されます。</target>
        </trans-unit>
        <trans-unit id="3fb2cbfddfa2c8422a7f938e2864206f53db7379" translate="yes" xml:space="preserve">
          <source>Only one QAxFactory implementation may be instantiated and exported by an ActiveX server application. This instance is accessible through the global qAxFactory() function.</source>
          <target state="translated">ActiveXサーバーアプリケーションでは、1つのQAxFactory実装のみがインスタンス化され、エクスポートされます。このインスタンスはグローバルqAxFactory()関数を介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="292e949684a8f6c4b156ae93709d421ea5f0395b" translate="yes" xml:space="preserve">
          <source>Only one active client per process is permitted. Subsequent clients attempting to connect to the server will see a loading indicator until the previous client disconnects.</source>
          <target state="translated">プロセスごとにアクティブなクライアントは1つだけ許可されています。サーバーに接続しようとする後続のクライアントには、前のクライアントが切断するまでローディングインジケータが表示されます。</target>
        </trans-unit>
        <trans-unit id="c14a4f82853654d11a23a22cc141c5f953167116" translate="yes" xml:space="preserve">
          <source>Only one bar can be selected at a time.</source>
          <target state="translated">一度に選択できるのは1つのバーのみです。</target>
        </trans-unit>
        <trans-unit id="2248a190c0d660c4e6fafd48299f24aadeb660a0" translate="yes" xml:space="preserve">
          <source>Only one buddy widget can be defined for each label. To change the buddy used, it is necessary to delete any existing buddy connection before you create a new one.</source>
          <target state="translated">各ラベルには1つのバディウィジェットしか定義できません。使用するバディを変更するには、新しいバディを作成する前に既存のバディ接続を削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="b837aab653c3f13381cebe1c32aa58e3fc22bcd1" translate="yes" xml:space="preserve">
          <source>Only one header section</source>
          <target state="translated">ヘッダー部分は1つだけ</target>
        </trans-unit>
        <trans-unit id="c32ad496411f8470797a9d1405de91a586a1592b" translate="yes" xml:space="preserve">
          <source>Only one initial value will be saved for any given property. If a value for a property has already been saved by the state machine, it will not be overwritten until the property has been successfully restored.</source>
          <target state="translated">任意のプロパティに対して保存される初期値は 1 つだけです。プロパティの値がすでにステートマシンによって保存されている場合、そのプロパティが正常にリストアされるまでは上書きされません。</target>
        </trans-unit>
        <trans-unit id="56c4fb4a1b813dbde0f9b03691f0bcb74858feb3" translate="yes" xml:space="preserve">
          <source>Only one message handler can be defined, since this is usually done on an application-wide basis to control debug output.</source>
          <target state="translated">これは通常、デバッグ出力を制御するためにアプリケーション全体で行われるため、1つのメッセージハンドラだけを定義することができます。</target>
        </trans-unit>
        <trans-unit id="fc87ea28a98ab006d46ca69cd53da1af243ce5d9" translate="yes" xml:space="preserve">
          <source>Only one mutable iterator can be active on a given hash at any time. Furthermore, no changes should be done directly to the hash while the iterator is active (as opposed to through the iterator), since this could invalidate the iterator and lead to undefined behavior.</source>
          <target state="translated">与えられたハッシュに対しては、常に1つの変異可能なイテレータしかアクティブにすることができません。さらに、イテレータがアクティブな間は(イテレータを介してではなく)ハッシュに直接変更を加えてはいけません。</target>
        </trans-unit>
        <trans-unit id="c469cc338e6d0b9e955d25b2d6ead3b2a9ef65c3" translate="yes" xml:space="preserve">
          <source>Only one mutable iterator can be active on a given list at any time. Furthermore, no changes should be done directly to the list while the iterator is active (as opposed to through the iterator), since this could invalidate the iterator and lead to undefined behavior.</source>
          <target state="translated">与えられたリスト上では、常に1つの変異可能なイテレータしかアクティブにすることができません。さらに、イテレータがアクティブな間は (イテレータを介してではなく)リストに直接変更を加えてはいけません。</target>
        </trans-unit>
        <trans-unit id="15df6c3f42b2f7115677be583aa34c4498d388ca" translate="yes" xml:space="preserve">
          <source>Only one mutable iterator can be active on a given map at any time. Furthermore, no changes should be done directly to the map while the iterator is active (as opposed to through the iterator), since this could invalidate the iterator and lead to undefined behavior.</source>
          <target state="translated">1 つのマップ上で常にアクティブにできるのは、1 つの変更可能なイテレータのみです。さらに、イテレータがアクティブな間は (イテレータを介してではなく)マップに直接変更を加えてはいけません。</target>
        </trans-unit>
        <trans-unit id="5c64dda345ccabc4c3041144fe96e1a95beb363a" translate="yes" xml:space="preserve">
          <source>Only one mutable iterator can be active on a given set at any time. Furthermore, no changes should be done directly to the set while the iterator is active (as opposed to through the iterator), since this could invalidate the iterator and lead to undefined behavior.</source>
          <target state="translated">与えられた集合に対しては、常に1つの変異可能なイテレータしかアクティブにすることができません。さらに、イテレータがアクティブな間は(イテレータを介してではなく)セットに直接変更を加えてはいけません。</target>
        </trans-unit>
        <trans-unit id="1830ab079be5c68c7386e6ec0031ce349b862861" translate="yes" xml:space="preserve">
          <source>Only one mutable iterator can be active on a given vector at any time. Furthermore, no changes should be done directly to the vector while the iterator is active (as opposed to through the iterator), since this could invalidate the iterator and lead to undefined behavior.</source>
          <target state="translated">与えられたベクトル上では、常に1つの変異可能なイテレータしかアクティブにすることができません。さらに、イテレータがアクティブな間は(イテレータを介してではなく)ベクタに直接変更を加えてはいけません。</target>
        </trans-unit>
        <trans-unit id="1687e81a43679ccb19fe9f14a9cb45accf06cbac" translate="yes" xml:space="preserve">
          <source>Only one point can be selected at a time.</source>
          <target state="translated">一度に1点のみ選択可能です。</target>
        </trans-unit>
        <trans-unit id="093f87644501fdcc4886a90098fbd311f8306624" translate="yes" xml:space="preserve">
          <source>Only one scroll gesture can be active on a single object at the same time. If you call this function twice on the same object, it will ungrab the existing gesture before grabbing the new one.</source>
          <target state="translated">1 つのオブジェクトで同時にアクティブにできるスクロールジェスチャは 1 つだけです。同じオブジェクト上でこの関数を 2 回呼び出すと、新しいジェスチャを取得する前に既存のジェスチャの取得を解除します。</target>
        </trans-unit>
        <trans-unit id="66b250d5d0c68570b3f33abc58e8f0bac5ac63a9" translate="yes" xml:space="preserve">
          <source>Only one timeline should be active at a particular time.</source>
          <target state="translated">特定の時間に1つのタイムラインだけがアクティブになっている必要があります。</target>
        </trans-unit>
        <trans-unit id="2e4550eba5d2cb877022457af0a20f908987a632" translate="yes" xml:space="preserve">
          <source>Only one translation unit in a library or executable can define a category with a specific name. The implicitly defined &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt; object is created on first use, in a thread-safe manner.</source>
          <target state="translated">ライブラリまたは実行可能ファイル内の1つの翻訳単位のみが、特定の名前のカテゴリを定義できます。暗黙的に定義された&lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;オブジェクトは、最初の使用時にスレッドセーフな方法で作成されます。</target>
        </trans-unit>
        <trans-unit id="431cfad90baeecf4e34d1ce46561784767bd5e2b" translate="yes" xml:space="preserve">
          <source>Only one translation unit in a library or executable can define a category with a specific name. The implicitly-defined &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt; object is created on first use, in a thread-safe manner.</source>
          <target state="translated">ライブラリまたは実行可能ファイル内の1つの翻訳単位のみが、特定の名前でカテゴリを定義できます。暗黙的に定義された&lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;オブジェクトは、最初の使用時にスレッドセーフな方法で作成されます。</target>
        </trans-unit>
        <trans-unit id="5874588876a240484d30519201ad794f4662dd84" translate="yes" xml:space="preserve">
          <source>Only one-to-one mappings between sections and widgets are allowed. It is not possible to map a single section to multiple widgets, or to map a single widget to multiple sections.</source>
          <target state="translated">セクションとウィジェット間の1対1のマッピングのみが許可されています。1つのセクションを複数のウィジェットにマッピングしたり、1つのウィジェットを複数のセクションにマッピングすることはできません。</target>
        </trans-unit>
        <trans-unit id="f2a45607d8658353b26735883f2e38c61635354a" translate="yes" xml:space="preserve">
          <source>Only options set by &lt;a href=&quot;qsslconfiguration#setBackendConfigurationOption&quot;&gt;setBackendConfigurationOption&lt;/a&gt;() or &lt;a href=&quot;qsslconfiguration#setBackendConfiguration&quot;&gt;setBackendConfiguration&lt;/a&gt;() will be returned. The internal standard configuration of the backend is not reported.</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration#setBackendConfigurationOption&quot;&gt;setBackendConfigurationOption&lt;/a&gt;（）または&lt;a href=&quot;qsslconfiguration#setBackendConfiguration&quot;&gt;setBackendConfiguration&lt;/a&gt;（）で設定されたオプションのみが返されます。バックエンドの内部標準構成は報告されません。</target>
        </trans-unit>
        <trans-unit id="e4a5c6b841d6408cc1b09eaf7068ca617d6bfa3d" translate="yes" xml:space="preserve">
          <source>Only other popup widgets may be opened when a popup widget is shown. The popup widgets are organized in a stack. This function returns the active popup widget at the top of the stack.</source>
          <target state="translated">ポップアップウィジェットが表示されているときは、他のポップアップウィジェットだけを開くことができます。ポップアップウィジェットはスタックで構成されています。この関数は、スタックの先頭にあるアクティブなポップアップウィジェットを返します。</target>
        </trans-unit>
        <trans-unit id="866d723e76a41194ed02fe8b55eddeb99f66731f" translate="yes" xml:space="preserve">
          <source>Only output a mapping of resource paths to file system paths defined in the .qrc file, do not generate code.</source>
          <target state="translated">.qrc ファイルで定義されたファイルシステムパスへのリソースパスのマッピングのみを出力し、コードを生成しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="a3213412928a79f8f1d6dbe0ff3a3e452532e3d4" translate="yes" xml:space="preserve">
          <source>Only place details that are supported by this manager is present in the modified version. Manager specific data such as the place id, is not copied over from the</source>
          <target state="translated">変更後のバージョンでは、このマネージャーがサポートしている場所の詳細のみが存在します。場所IDのようなマネージャー固有のデータは</target>
        </trans-unit>
        <trans-unit id="022afb059dd2523132844dbb94dc64522c374309" translate="yes" xml:space="preserve">
          <source>Only places stored on the local device will be part of the search results.</source>
          <target state="translated">ローカルデバイスに保存されている場所のみが検索結果の一部となります。</target>
        </trans-unit>
        <trans-unit id="58dfa7ad56821797b65e4226af2c1b3e86ea2cd8" translate="yes" xml:space="preserve">
          <source>Only places that are private to the current user will be part of the search results.</source>
          <target state="translated">現在のユーザーに非公開の場所のみが検索結果に含まれます。</target>
        </trans-unit>
        <trans-unit id="ce754b83ce67299b26bccbd0672b437340fbf99e" translate="yes" xml:space="preserve">
          <source>Only places that are public will be part of the search results.</source>
          <target state="translated">公開されている場所のみが検索結果の一部となります。</target>
        </trans-unit>
        <trans-unit id="0d4ee827fd94873de2c91d4eec53a11fd417368a" translate="yes" xml:space="preserve">
          <source>Only plain data can be returned from JavaScript as the result value. Supported data types include all of the JSON data types as well as, for example, &lt;code&gt;Date&lt;/code&gt; and &lt;code&gt;ArrayBuffer&lt;/code&gt;. Unsupported data types include, for example, &lt;code&gt;Function&lt;/code&gt; and &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">結果値としてJavaScriptから返されるのはプレーンデータのみです。サポートされているデータ型には、すべてのJSONデータ型と、 &lt;code&gt;Date&lt;/code&gt; や &lt;code&gt;ArrayBuffer&lt;/code&gt; などが含まれます。サポートされていないデータ型には、たとえば、 &lt;code&gt;Function&lt;/code&gt; や &lt;code&gt;Promise&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="01f3c132b1849d856881232b4ef1c60be7e512ab" translate="yes" xml:space="preserve">
          <source>Only primitive type accepted by tesselation shader where a patch consists of arbitrary number of vertices</source>
          <target state="translated">パッチが任意の数の頂点からなるテッセレーションシェーダで受け入れられる唯一のプリミティブ型</target>
        </trans-unit>
        <trans-unit id="9dfd6bfa7305895a60f77674f4e18dabf7f170e7" translate="yes" xml:space="preserve">
          <source>Only queries encoded in UTF-8 are supported.</source>
          <target state="translated">UTF-8でエンコードされたクエリのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="0d4fbcf17512917247dbcbcfe48e0004c8dc79cb" translate="yes" xml:space="preserve">
          <source>Only routes which contain the feature are considered, otherwise no route will be returned</source>
          <target state="translated">機能を含むルートのみが考慮され、そうでなければルートは返されません。</target>
        </trans-unit>
        <trans-unit id="f9255b8d5e908b1c057dedafa0e435395295dbc0" translate="yes" xml:space="preserve">
          <source>Only routes which contain the feature will be considered, otherwise no route will be returned</source>
          <target state="translated">機能を含むルートのみが考慮され、そうでなければルートは返されません。</target>
        </trans-unit>
        <trans-unit id="7fdc0ad98caecb9009f0b11619aa918b2444b645" translate="yes" xml:space="preserve">
          <source>Only routes which contain the feature will be considered, otherwise no route will be returned.</source>
          <target state="translated">機能を含むルートのみが考慮され、そうでなければルートは返されません。</target>
        </trans-unit>
        <trans-unit id="9c2779898a7f5d5fb6d65e6b91be36c78875b714" translate="yes" xml:space="preserve">
          <source>Only routes which do not contain the feature are considered, otherwise no route will be returned</source>
          <target state="translated">機能を含まないルートのみが考慮され、それ以外のルートは返されません。</target>
        </trans-unit>
        <trans-unit id="a8d85783e1de0673e901d7a4dca553574f5039c6" translate="yes" xml:space="preserve">
          <source>Only routes which do not contain the feature will be considered, otherwise no route will be returned</source>
          <target state="translated">機能を含まないルートのみが考慮され、それ以外のルートは返されません。</target>
        </trans-unit>
        <trans-unit id="007e500e4d7218935cd1d79463df12a7be146591" translate="yes" xml:space="preserve">
          <source>Only routes which do not contain the feature will be considered, otherwise no route will be returned.</source>
          <target state="translated">機能を含まないルートのみが考慮され、そうでなければルートは返されません。</target>
        </trans-unit>
        <trans-unit id="7b99c13a867fa4d3cbc645acd24ad9522fb48037" translate="yes" xml:space="preserve">
          <source>Only show directories in the file dialog. By default both files and directories are shown. (Valid only in the &lt;a href=&quot;qfiledialog#FileMode-enum&quot;&gt;Directory&lt;/a&gt; file mode.)</source>
          <target state="translated">ファイルダイアログでのみディレクトリを表示します。デフォルトでは、ファイルとディレクトリの両方が表示されます。（&lt;a href=&quot;qfiledialog#FileMode-enum&quot;&gt;ディレクトリ&lt;/a&gt;ファイルモードでのみ有効です。）</target>
        </trans-unit>
        <trans-unit id="900803d3a3fe28377b84720dbf28d5167a85641b" translate="yes" xml:space="preserve">
          <source>Only show directories in the folder dialog. By default both folders and directories are shown.</source>
          <target state="translated">フォルダダイアログでディレクトリのみを表示します。デフォルトでは、フォルダとディレクトリの両方が表示されます。</target>
        </trans-unit>
        <trans-unit id="88000814598313fb38d4e244e5dfccadf2621dbe" translate="yes" xml:space="preserve">
          <source>Only the acceleration caused by gravity is reported. Movements of the device caused by the user have no effect other than changing the direction when the device is rotated.</source>
          <target state="translated">重力による加速度のみを報告します。ユーザーによるデバイスの移動は、デバイスを回転させたときに方向を変える以外の効果はありません。</target>
        </trans-unit>
        <trans-unit id="b0b647478e89f4b60717d31245125ad915741989" translate="yes" xml:space="preserve">
          <source>Only the acceleration caused by the user moving the device is reported, the effect of gravity is canceled out. A device at rest therefore should report values of, or close to, zero. In other APIs, this mode might be known as</source>
          <target state="translated">ユーザーがデバイスを動かすことによって引き起こされる加速度のみが報告され、重力の影響はキャンセルされます。したがって、デバイスが静止している場合は、ゼロに近い値を報告する必要があります。他のAPIでは、このモードは以下のように知られています。</target>
        </trans-unit>
        <trans-unit id="28c2b6d10db770a994e0a219eb84b16aee9277b9" translate="yes" xml:space="preserve">
          <source>Only the bounding volume was considered; the primitive and vertex indices will be undefined</source>
          <target state="translated">境界体積のみを考慮しており、プリミティブと頂点のインデックスは未定義です。</target>
        </trans-unit>
        <trans-unit id="8a39b6e783f61b06f884bdb7578b0f519b6f0796" translate="yes" xml:space="preserve">
          <source>Only the color of the brush is relevant.</source>
          <target state="translated">筆の色だけが関係しています。</target>
        </trans-unit>
        <trans-unit id="8cf6237dd24c7bd1a6295a9932827ded0e6a55af" translate="yes" xml:space="preserve">
          <source>Only the current page should be printed.</source>
          <target state="translated">現在のページのみ印刷してください。</target>
        </trans-unit>
        <trans-unit id="080d8f02db3d9f7049ea42613d8101bfa3916fb0" translate="yes" xml:space="preserve">
          <source>Only the current widget is visible. This is the default.</source>
          <target state="translated">現在のウィジェットのみが表示されます。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="e090b7f0e8280ab6733d3dccc7d6169297d15cc0" translate="yes" xml:space="preserve">
          <source>Only the currently visible page should be printed.</source>
          <target state="translated">現在表示されているページだけを印刷してください。</target>
        </trans-unit>
        <trans-unit id="d0263b87dc2d8ed1730ca0ef21d5b77a0bcddd01" translate="yes" xml:space="preserve">
          <source>Only the file name is used to look for a match</source>
          <target state="translated">ファイル名のみを使用して一致するものを探します。</target>
        </trans-unit>
        <trans-unit id="ca51e3744c12ca1c311c46a33f38c17885e7f9de" translate="yes" xml:space="preserve">
          <source>Only the five dash-separated fields, without the braces. Example: 00000000-0000-0000-0000-000000000000.</source>
          <target state="translated">ダッシュで区切られた5つのフィールドのみを、中括弧なしで入力します。例:00000000-0000-0000-0000-0000-000000000000。</target>
        </trans-unit>
        <trans-unit id="5fb5283a4d295a103b15f7350d1e633c563b86b6" translate="yes" xml:space="preserve">
          <source>Only the following property setters are supported by startDetached():</source>
          <target state="translated">startDetached()がサポートしているプロパティセッタは以下のもののみです。</target>
        </trans-unit>
        <trans-unit id="4d2b8904c9938174062602ccd005d5844dabda29" translate="yes" xml:space="preserve">
          <source>Only the fractional part of the texture coordinate is used, causing values above 1 and below 0 to repeat.</source>
          <target state="translated">テクスチャ座標の端数部分のみが使用され、1以上と0以下の値が繰り返されます。</target>
        </trans-unit>
        <trans-unit id="4bd209bd107698e95605e422a632c7b856ad3f4e" translate="yes" xml:space="preserve">
          <source>Only the grid is drawn.</source>
          <target state="translated">グリッドだけが描かれています。</target>
        </trans-unit>
        <trans-unit id="0ffe98cffb635c5a13e26848e8fb64b63941fdad" translate="yes" xml:space="preserve">
          <source>Only the hex digits, without braces or dashes. Note that &lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt; cannot parse this back again as input.</source>
          <target state="translated">ブレースまたはダッシュなしの16進数のみ。&lt;a href=&quot;quuid&quot;&gt;QUuid&lt;/a&gt;はこれを入力として再度解析できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="1caea0229463e687ca2ede2d1d31bcbdff21faee" translate="yes" xml:space="preserve">
          <source>Only the horizontal element of the</source>
          <target state="translated">の横方向の要素のみが</target>
        </trans-unit>
        <trans-unit id="2056d2cf08f1b908f168043b84febb65fbe3ecc4" translate="yes" xml:space="preserve">
          <source>Only the immediate child states of the parent state are recorded. In this case a transition with the history state as its target will end up in the immediate child state that the parent was in the last time it was exited. This is the default.</source>
          <target state="translated">親ステートの即時子ステートのみが記録されます。この場合、履歴状態をターゲットにしたトランジションは、最後に親が終了したときにあった即時子状態で終了します。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="ec1b677a36b6ffd73e6e4950cac57fee0ee608d9" translate="yes" xml:space="preserve">
          <source>Only the last moved item is returned to the &quot;lightsteelblue&quot; color; the others remain yellow. This is because the &lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptAction&lt;/a&gt; is not run until after the transition has already been initialized, by which time the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.item value has changed to refer to a different item; the item that the script had intended to refer to is not the one held by &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.item at the time the &lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptAction&lt;/a&gt; is actually invoked.</source>
          <target state="translated">最後に移動したアイテムのみが「lightsteelblue」の色に戻ります。他は黄色のままです。これは、トランジションが既に初期化されてから、&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; .itemの値が別のアイテムを参照するように変更されるまで、&lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptAction&lt;/a&gt;が実行されないためです。スクリプトを参照することを意図していたという項目がで開催されたものではありません&lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;時.item &lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptActionが&lt;/a&gt;実際に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b447465bf0c66e3aa05f4ed491c856b7481ae9bd" translate="yes" xml:space="preserve">
          <source>Only the last moved item is returned to the &quot;lightsteelblue&quot; color; the others remain yellow. This is because the &lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptAction&lt;/a&gt; is not run until after the transition has already been initialized, by which time the ViewTransition.item value has changed to refer to a different item; the item that the script had intended to refer to is not the one held by ViewTransition.item at the time the &lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptAction&lt;/a&gt; is actually invoked.</source>
          <target state="translated">最後に移動したアイテムのみが「ライトスチールブルー」の色に戻ります。他は黄色のままです。これは、遷移がすでに初期化されるまで&lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;ScriptAction&lt;/a&gt;が実行されないためです。その時点で、ViewTransition.item値が変更されて別のアイテムを参照します。スクリプトが参照することを意図していた&lt;a href=&quot;qml-qtquick-scriptaction&quot;&gt;アイテム&lt;/a&gt;は、ScriptActionが実際に呼び出されたときにViewTransition.itemによって保持されていたアイテムではありません。</target>
        </trans-unit>
        <trans-unit id="67a2014a4e9ee9f974bdab1665ff97411a19734b" translate="yes" xml:space="preserve">
          <source>Only the nearest entity to picking ray origin intersected by the picking ray is picked (default).</source>
          <target state="translated">ピッキングレイが交差するピッキングレイの原点に最も近いエンティティのみがピックされます(デフォルト)。</target>
        </trans-unit>
        <trans-unit id="f97efd7a4aa1bfab99e483967c77f06a0a9f82ac" translate="yes" xml:space="preserve">
          <source>Only the outline of the polygon should be drawn.</source>
          <target state="translated">ポリゴンの輪郭だけを描いてください。</target>
        </trans-unit>
        <trans-unit id="aca71c0147c05907515f4ff15d2e7d5ca7be21a7" translate="yes" xml:space="preserve">
          <source>Only the selection should be printed.</source>
          <target state="translated">選択した部分だけを印刷してください。</target>
        </trans-unit>
        <trans-unit id="be441e0bdbc0515fb7e35936edf75f9bab2b5109" translate="yes" xml:space="preserve">
          <source>Only the standard editing functions for widget-based delegates are reimplemented here:</source>
          <target state="translated">ここでは、ウィジェットベースのデリゲートの標準編集機能のみが再実装されています。</target>
        </trans-unit>
        <trans-unit id="29580644238e732f38b13dd5c82703fa15d11909" translate="yes" xml:space="preserve">
          <source>Only the surface is drawn.</source>
          <target state="translated">表面だけが描かれています。</target>
        </trans-unit>
        <trans-unit id="5480b979811ae4fff5f6bcedc74670cef045aea4" translate="yes" xml:space="preserve">
          <source>Only the test is now on the fix-branch. The rest of the source tree is still on 5.14.</source>
          <target state="translated">テストだけがfix-branchになりました。残りのソースツリーはまだ 5.14 のままです。</target>
        </trans-unit>
        <trans-unit id="6b0a77de23a69e30edff30601a0d3d23d5e928b7" translate="yes" xml:space="preserve">
          <source>Only the touch screen is used.</source>
          <target state="translated">タッチスクリーンのみの使用となります。</target>
        </trans-unit>
        <trans-unit id="408c074f8c67e3b86cf6655119793937bb5e7997" translate="yes" xml:space="preserve">
          <source>Only the trees &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt; (&lt;code&gt;HKCU&lt;/code&gt;) and &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; (&lt;code&gt;HKLM&lt;/code&gt;) are supported.</source>
          <target state="translated">ツリー &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt; （ &lt;code&gt;HKCU&lt;/code&gt; ）および &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; （ &lt;code&gt;HKLM&lt;/code&gt; ）のみがサポートされています。</target>
        </trans-unit>
        <trans-unit id="4e6139d7f19eb94c8c38ef52a17a8882ef9d237d" translate="yes" xml:space="preserve">
          <source>Only themes for specific styles can be changed at runtime, styles are fixed</source>
          <target state="translated">特定のスタイルのテーマだけが実行時に変更でき、スタイルは固定されます。</target>
        </trans-unit>
        <trans-unit id="87f9c253543d9b4adb74c91e1d104432a173b3a1" translate="yes" xml:space="preserve">
          <source>Only upper case letter input is allowed.</source>
          <target state="translated">大文字のみの入力が可能です。</target>
        </trans-unit>
        <trans-unit id="2ccbfdcc4a3ea2a9709b17f03f466f0a3c2fe141" translate="yes" xml:space="preserve">
          <source>Only use this constructor if there is no derived sensor class available. Note that all built-in sensors have a derived class, so using this constructor should only be necessary when implementing custom sensors, like in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsensors-grue-example.html#&quot;&gt;Grue sensor example&lt;/a&gt;.</source>
          <target state="translated">このコンストラクタは、使用できる派生センサークラスがない場合にのみ使用してください。すべての組み込みセンサーには派生クラスがあるため、このコンストラクターを使用する必要があるのは、&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsensors-grue-example.html#&quot;&gt;Grueセンサーの例の&lt;/a&gt;ように、カスタムセンサーを実装する場合のみであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d50e3bbf3dafbc6aa798fe8b36300dae22590670" translate="yes" xml:space="preserve">
          <source>Only use this constructor if there is no derived sensor class available. Note that all built-in sensors have a derived class, so using this constructor should only be necessary when implementing custom sensors, like in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsensors-grue-example.html&quot;&gt;Grue sensor example&lt;/a&gt;.</source>
          <target state="translated">使用可能な派生センサークラスがない場合にのみ、このコンストラクターを使用してください。すべての組み込みセンサーには派生クラスがあるため、このコンストラクターの使用は、&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsensors-grue-example.html&quot;&gt;Grueセンサーの例の&lt;/a&gt;ようにカスタムセンサーを実装する場合にのみ必要であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1ceac6eb2a46f17409c4768a114ad2b9f7e7d116" translate="yes" xml:space="preserve">
          <source>Only used when &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.shortcut&lt;/a&gt; is not empty.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.shortcut&lt;/a&gt;が空でない場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="de1e77c3cbbbdb49990f560915ad8bf750f7c9a6" translate="yes" xml:space="preserve">
          <source>Only used when &lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.type&lt;/a&gt; equals &lt;code&gt;MenuItemType.Menu&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-styles-menustyle#styledata-properties&quot;&gt;styleData.type&lt;/a&gt;が &lt;code&gt;MenuItemType.Menu&lt;/code&gt; と等しい場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="371af54db2f6e0c93113bdee7fb35c15761598ea" translate="yes" xml:space="preserve">
          <source>Only valid URLs are accepted. This mode is useful for general URL validation.</source>
          <target state="translated">有効な URL のみが受け入れられます。このモードは、一般的なURLの検証に便利です。</target>
        </trans-unit>
        <trans-unit id="c58ede0030cae078c59b1d32eebd1e16ce613c31" translate="yes" xml:space="preserve">
          <source>Only valid for &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt; and &lt;a href=&quot;qsgclipnode&quot;&gt;QSGClipNode&lt;/a&gt;. The node has ownership over the &lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt; instance and will delete it when the node is destroyed or a geometry is assigned.</source>
          <target state="translated">&lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;および&lt;a href=&quot;qsgclipnode&quot;&gt;QSGClipNode&lt;/a&gt;に対してのみ有効です。ノードは&lt;a href=&quot;qsggeometry&quot;&gt;QSGGeometry&lt;/a&gt;インスタンスに対する所有権を持ち、ノードが破棄されるか、ジオメトリが割り当てられるとノードを削除します。</target>
        </trans-unit>
        <trans-unit id="4bad280e60d2847c398d9e7cb98685cc945a3948" translate="yes" xml:space="preserve">
          <source>Only valid for &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;. The node has ownership over the material and will delete it when the node is destroyed or a material is assigned.</source>
          <target state="translated">&lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNodeで&lt;/a&gt;のみ有効です。ノードにはマテリアルに対する所有権があり、ノードが破棄されるかマテリアルが割り当てられると、ノードは削除されます。</target>
        </trans-unit>
        <trans-unit id="24f4800ac476cd55f0a6bb9d113138df0c887c93" translate="yes" xml:space="preserve">
          <source>Only valid for &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;. The node has ownership over the opaque material and will delete it when the node is destroyed or a material is assigned.</source>
          <target state="translated">&lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNodeで&lt;/a&gt;のみ有効です。ノードには不透明なマテリアルに対する所有権があり、ノードが破棄されるかマテリアルが割り当てられると、ノードは削除されます。</target>
        </trans-unit>
        <trans-unit id="40bae8187ede3cd33c240b6d9840d6c0f5a4a54b" translate="yes" xml:space="preserve">
          <source>Only visible, enabled, selectable items can be selected. If</source>
          <target state="translated">表示されている、有効な、選択可能な項目のみを選択できます。もし</target>
        </trans-unit>
        <trans-unit id="35915d86c62b7f9827e6d646aa3df8f953664aac" translate="yes" xml:space="preserve">
          <source>Oops! If you save this &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; in &lt;code&gt;file.xq&lt;/code&gt; and run it through &lt;code&gt;xmlpatterns&lt;/code&gt;, it doesn't work. You get an error message instead, something like this:</source>
          <target state="translated">おっと！この&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;を &lt;code&gt;file.xq&lt;/code&gt; に保存し、xmlpatternsを介して実行すると、 &lt;code&gt;xmlpatterns&lt;/code&gt; しません。代わりに、次のようなエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="03f44562aec25af8ccf0c430b3017be9d8f8802a" translate="yes" xml:space="preserve">
          <source>Oops! If you save this &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; in &lt;code&gt;file.xq&lt;/code&gt; and run it through &lt;code&gt;xmlpatterns&lt;/code&gt;, it doesn't work. You get an error message instead, something like this:</source>
          <target state="translated">おっとっと！この&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;を &lt;code&gt;file.xq&lt;/code&gt; に保存し、xmlpatternsを介して実行すると、 &lt;code&gt;xmlpatterns&lt;/code&gt; しません。代わりに、次のようなエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="c208e384200cbb97e07402fd6877cf6434b0855b" translate="yes" xml:space="preserve">
          <source>Opacity accumulates downwards in the scene graph so a node with two &lt;a href=&quot;qsgopacitynode&quot;&gt;QSGOpacityNode&lt;/a&gt; instances above it, both with opacity of 0.5, will have effective opacity of 0.25.</source>
          <target state="translated">不透明度はシーングラフで下向きに累積するため、2つの&lt;a href=&quot;qsgopacitynode&quot;&gt;QSGOpacityNode&lt;/a&gt;インスタンスがその上にあり、どちらも不透明度が0.5のノードは、実効不透明度が0.25になります。</target>
        </trans-unit>
        <trans-unit id="bf684625ef08d3418934013f7480a018508a2187" translate="yes" xml:space="preserve">
          <source>Opacity accumulates downwards in the scene graph so a node with two QSGOpacityNode instances above it, both with opacity of 0.5, will have effective opacity of 0.25.</source>
          <target state="translated">不透明度はシーングラフの下方に蓄積されるので、その上に2つのQSGOpacityNodeインスタンスがあり、両方とも不透明度が0.5のノードは、有効な不透明度が0.25になります。</target>
        </trans-unit>
        <trans-unit id="829150b60c0c0db0cc93329d53cfecf36c122934" translate="yes" xml:space="preserve">
          <source>Opacity applies to its subtree and can be nested. Multiple opacity nodes will be accumulated by multiplying their opacity. The accumulation happens as part of the rendering.</source>
          <target state="translated">不透明度はそのサブツリーに適用され、入れ子にすることができます。複数の不透明度ノードは、それらの不透明度を乗算することで蓄積されます。蓄積はレンダリングの一部として行われます。</target>
        </trans-unit>
        <trans-unit id="3b7449b2c081577ffb2b9006287432cb410a7d24" translate="yes" xml:space="preserve">
          <source>Opacity of the material. Range is &lt;code&gt;[0, 100]&lt;/code&gt;. Default is &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">素材の不透明度。範囲は &lt;code&gt;[0, 100]&lt;/code&gt; です。デフォルトは &lt;code&gt;100&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c7aca2013b5eb96ce3224e77138e39dc54638ccc" translate="yes" xml:space="preserve">
          <source>Opacity set on the painter will apply to all drawing operations individually.</source>
          <target state="translated">ペインターに設定された不透明度は、すべての描画操作に個別に適用されます。</target>
        </trans-unit>
        <trans-unit id="08fc9adf53d76f88b1af2b9c5584c7fc45a927df" translate="yes" xml:space="preserve">
          <source>OpacityAnimator (QML type)</source>
          <target state="translated">OpacityAnimator(QML型</target>
        </trans-unit>
        <trans-unit id="96a14689298808b6d3522acf2d5a387c40a2a5d6" translate="yes" xml:space="preserve">
          <source>OpacityAnimator QML Type</source>
          <target state="translated">OpacityAnimator QML 型</target>
        </trans-unit>
        <trans-unit id="1cf283a66bdc2160323b926172359f70f1ab8c24" translate="yes" xml:space="preserve">
          <source>OpacityMask</source>
          <target state="translated">OpacityMask</target>
        </trans-unit>
        <trans-unit id="0b0f3b8da479b14e85623578c367d6b2440976fb" translate="yes" xml:space="preserve">
          <source>OpacityMask (QML type)</source>
          <target state="translated">不透明度マスク(QML 型</target>
        </trans-unit>
        <trans-unit id="61d2e30e2dc6a4a40b621855945206afab7fca9c" translate="yes" xml:space="preserve">
          <source>OpacityMask QML Type</source>
          <target state="translated">OpacityMask QML 型</target>
        </trans-unit>
        <trans-unit id="d15cbf99a785a31b9001bce9cc7b9a629fb48f89" translate="yes" xml:space="preserve">
          <source>OpacityMask.cached</source>
          <target state="translated">OpacityMask.cached</target>
        </trans-unit>
        <trans-unit id="424286b176ab75926f473d619a80a8c5dc509ddd" translate="yes" xml:space="preserve">
          <source>OpacityMask.invert</source>
          <target state="translated">OpacityMask.invert</target>
        </trans-unit>
        <trans-unit id="a7a70264498e2d4ca48121d092a85c8a64ecc990" translate="yes" xml:space="preserve">
          <source>OpacityMask.maskSource</source>
          <target state="translated">OpacityMask.maskSource</target>
        </trans-unit>
        <trans-unit id="e85c582c782457157b7bf01e1af21d6b123f8d90" translate="yes" xml:space="preserve">
          <source>OpacityMask.source</source>
          <target state="translated">OpacityMask.source</target>
        </trans-unit>
        <trans-unit id="558e3a64cc59695a139131081982f8710fcd3d0c" translate="yes" xml:space="preserve">
          <source>Opaque Items: these are sorted from front to back, or in other words from items that are closest to the camera to items that are furthest from the camera. This is done to take advantage of hardware occlusion culling or early z detection in the fragment shader.</source>
          <target state="translated">不透明アイテム:これらは前から後ろへ、言い換えればカメラに最も近いアイテムからカメラから最も遠いアイテムへとソートされます。これは、フラグメントシェーダのハードウェアオクルージョンカリングや早期z検出を利用するために行われます。</target>
        </trans-unit>
        <trans-unit id="b019e2062e483cf700d186481cf928fe703897cd" translate="yes" xml:space="preserve">
          <source>Opaque Pass - Next all opaque items will be drawn. This just involves setting the pipeline state, and running the draw command for each item in the order in the list since they are already sorted at this point.</source>
          <target state="translated">Opaque Pass-次に、すべての不透明なアイテムが描画されます。これは、パイプラインの状態を設定して、リストの順番に各項目の描画コマンドを実行するだけです。</target>
        </trans-unit>
        <trans-unit id="e965ae68a3263a67cd6f78b5972dc71eae19d796" translate="yes" xml:space="preserve">
          <source>Opaque Primitives</source>
          <target state="translated">不透明なプリミティブ</target>
        </trans-unit>
        <trans-unit id="5f4c80339b085a98ac9ae150448b318600a4b2ef" translate="yes" xml:space="preserve">
          <source>Opaque content is generally a lot faster to draw than translucent. The reason being that translucent content needs blending and that the renderer can potentially optimize opaque content better.</source>
          <target state="translated">不透明コンテンツは一般的に半透明よりも描画速度が速くなります。その理由は、半透明コンテンツにはブレンドが必要であり、レンダラーは不透明コンテンツをより最適化できる可能性があるからです。</target>
        </trans-unit>
        <trans-unit id="9ea890027c05fcabf8fc5cb784912143a4525700" translate="yes" xml:space="preserve">
          <source>Opaque items are not blended with the rest of the scene, you should set this to true if the content of the item is opaque to speed up rendering.</source>
          <target state="translated">不透明なアイテムはシーンの残りの部分とブレンドされないので、レンダリングを高速化するためにアイテムの内容が不透明な場合はこれをtrueに設定します。</target>
        </trans-unit>
        <trans-unit id="c022e509bc78be1cddf99e8ce898e85efc24290c" translate="yes" xml:space="preserve">
          <source>Opaque maskSource pixels produce blur with specified &lt;a href=&quot;qml-qtgraphicaleffects-maskedblur#radius-prop&quot;&gt;radius&lt;/a&gt;, while transparent pixels suppress the blur completely. Semitransparent maskSource pixels produce blur with a radius that is interpolated according to the pixel transparency level.</source>
          <target state="translated">不透明なmaskSourceピクセルは指定された&lt;a href=&quot;qml-qtgraphicaleffects-maskedblur#radius-prop&quot;&gt;半径&lt;/a&gt;でぼかしを生成し、透明なピクセルはぼかしを完全に抑制します。半透明のmaskSourceピクセルは、ピクセルの透明度レベルに従って補間された半径のぼかしを生成します。</target>
        </trans-unit>
        <trans-unit id="63e040c82fbe07d8831a8312e7ae49674bdecaa1" translate="yes" xml:space="preserve">
          <source>Opaque primitives are rendered in a front-to-back manner with &lt;code&gt;glDepthMask&lt;/code&gt; and &lt;code&gt;GL_DEPTH_TEST&lt;/code&gt; enabled. On GPUs that internally do early-z checks, this means that the fragment shader does not need to run for pixels or blocks of pixels that are obscured. Beware that the renderer still needs to take these nodes into account and the vertex shader is still run for every vertex in these primitives, so if the application knows that something is fully obscured, the best thing to do is to explicitly hide it using &lt;a href=&quot;qml-qtquick-item#visible-prop&quot;&gt;Item::visible&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-item#opacity-prop&quot;&gt;Item::opacity&lt;/a&gt;.</source>
          <target state="translated">不透明なプリミティブは、 &lt;code&gt;glDepthMask&lt;/code&gt; と &lt;code&gt;GL_DEPTH_TEST&lt;/code&gt; を有効にして前面から背面へとレンダリングされます。内部で初期zチェックを行うGPUでは、これは、フラグメントシェーダーが、隠されているピクセルまたはピクセルのブロックに対して実行する必要がないことを意味します。レンダラーは引き続きこれらのノードを考慮する必要があり、頂点シェーダーはこれらのプリミティブのすべての頂点に対して実行されることに注意してください。したがって、アプリケーションが何かが完全に隠されていることを知っている場合、最善の方法は、&lt;a href=&quot;qml-qtquick-item#visible-prop&quot;&gt;Item&lt;/a&gt;を使用して明示的に非表示にすることです。 ：visibleまたは&lt;a href=&quot;qml-qtquick-item#opacity-prop&quot;&gt;Item :: opacity&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cf9b77061f7b3126b49d50a6fa68f7ca8c26b7a3" translate="yes" xml:space="preserve">
          <source>Open</source>
          <target state="translated">Open</target>
        </trans-unit>
        <trans-unit id="12c9a9af2ccd9dd01f67598b70c3300035a3e1e7" translate="yes" xml:space="preserve">
          <source>Open Asset Import Library, version 4.1.0</source>
          <target state="translated">オープンアセットインポートライブラリ、バージョン4.1.0</target>
        </trans-unit>
        <trans-unit id="b1c21017ebf496316313faf0fc4a9e7fef8dd76a" translate="yes" xml:space="preserve">
          <source>Open Asset Import Library, version 5.0.1</source>
          <target state="translated">オープンアセットインポートライブラリ、バージョン5.0.1</target>
        </trans-unit>
        <trans-unit id="0394c45fa1e7c207d965b81ab85d25dc9696b016" translate="yes" xml:space="preserve">
          <source>Open Database Connectivity (ODBC) - Microsoft SQL Server and other ODBC-compliant databases</source>
          <target state="translated">Open Database Connectivity (ODBC)-Microsoft SQL Server およびその他の ODBC 準拠データベース</target>
        </trans-unit>
        <trans-unit id="bd1cc119778453c0b82c3296958c4092ec8c2832" translate="yes" xml:space="preserve">
          <source>Open GL (ES) 2.0, DirectX 9 or 11 (with ANGLE), or an &lt;a href=&quot;http://doc.qt.io/QtQuick2DRenderer&quot;&gt;alternative renderer&lt;/a&gt; is required for &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; 2. &lt;a href=&quot;qtwidgets-index&quot;&gt;Widgets&lt;/a&gt; can be used without hardware acceleration.</source>
          <target state="translated">&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; 2には、Open GL（ES）2.0、DirectX 9または11（ANGLE付き）、または&lt;a href=&quot;http://doc.qt.io/QtQuick2DRenderer&quot;&gt;代替レンダラー&lt;/a&gt;が必要です。&lt;a href=&quot;qtwidgets-index&quot;&gt;ウィジェット&lt;/a&gt;は、ハードウェアアクセラレーションなしで使用できます。</target>
        </trans-unit>
        <trans-unit id="68d6b3f6db3b02f1d9e14f6315e4a2e193ce9054" translate="yes" xml:space="preserve">
          <source>Open GL (ES) 2.0, DirectX 9 or 11 (with ANGLE), or an &lt;a href=&quot;http://doc.qt.io/QtQuick2DRenderer#&quot;&gt;alternative renderer&lt;/a&gt; is required for &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; 2. &lt;a href=&quot;qtwidgets-index&quot;&gt;Widgets&lt;/a&gt; can be used without hardware acceleration.</source>
          <target state="translated">&lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; 2にはOpen GL（ES）2.0、DirectX 9または11（またはANGLE）、または&lt;a href=&quot;http://doc.qt.io/QtQuick2DRenderer#&quot;&gt;代替レンダラー&lt;/a&gt;が必要です。ハードウェアアクセラレーションなしで&lt;a href=&quot;qtwidgets-index&quot;&gt;ウィジェット&lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="662b5d5a6b5b0f5842c6b841a0fd6b2ddd2478be" translate="yes" xml:space="preserve">
          <source>Open Street Map Plugin</source>
          <target state="translated">オープンストリートマッププラグイン</target>
        </trans-unit>
        <trans-unit id="278f12ef0327ab39f1757fcb937f465c865eb73b" translate="yes" xml:space="preserve">
          <source>Open Vector Graphics rendering</source>
          <target state="translated">オープンベクターグラフィックスのレンダリング</target>
        </trans-unit>
        <trans-unit id="4512ca03f3e9eafb3056a3a23239c25eab890a5d" translate="yes" xml:space="preserve">
          <source>Open and run examples within Qt Creator's &lt;b&gt;Welcome&lt;/b&gt; mode. Most of the examples run on various platforms and to search for platform-specific examples, type the platform name (or any keywords) in the search field. For example, typing &lt;code&gt;mobile&lt;/code&gt; in the search field lists the examples that are fully compatible with the &lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-core.html#platform-support&quot;&gt;mobile&lt;/a&gt; platforms.</source>
          <target state="translated">Qt Creatorの&lt;b&gt;ウェルカム&lt;/b&gt;モードでサンプルを開いて実行します。ほとんどの例はさまざまなプラットフォームで実行され、プラットフォーム固有の例を検索するには、検索フィールドにプラットフォーム名（または任意のキーワード）を入力します。たとえば、検索フィールドに「 &lt;code&gt;mobile&lt;/code&gt; 」と入力すると、&lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-core.html#platform-support&quot;&gt;モバイル&lt;/a&gt;プラットフォームと完全に互換性のある例が一覧表示されます。</target>
        </trans-unit>
        <trans-unit id="64d2a4fd8f21bd80fdbaacda5378d5c58ab28488" translate="yes" xml:space="preserve">
          <source>Open and run examples within Qt Creator's &lt;b&gt;Welcome&lt;/b&gt; mode. Most of the examples run on various platforms and to search for platform-specific examples, type the platform name (or any keywords) in the search field. For example, typing &lt;code&gt;mobile&lt;/code&gt; in the search field lists the examples that are fully compatible with the &lt;a href=&quot;https://doc.qt.io/qt-5.15/topics-core.html#platform-support&quot;&gt;mobile&lt;/a&gt; platforms.</source>
          <target state="translated">QtCreatorの&lt;b&gt;ウェルカム&lt;/b&gt;モードでサンプルを開いて実行します。ほとんどの例はさまざまなプラットフォームで実行され、プラットフォーム固有の例を検索するには、検索フィールドにプラットフォーム名（または任意のキーワード）を入力します。たとえば、検索フィールドに「 &lt;code&gt;mobile&lt;/code&gt; 」と入力すると、&lt;a href=&quot;https://doc.qt.io/qt-5.15/topics-core.html#platform-support&quot;&gt;モバイル&lt;/a&gt;プラットフォームと完全に互換性のある例が一覧表示されます。</target>
        </trans-unit>
        <trans-unit id="fbe54a80e078e26712d2ee5ce4ea8f6c9783badb" translate="yes" xml:space="preserve">
          <source>Open and run examples within Qt Creator's &lt;b&gt;Welcome&lt;/b&gt; mode. Most of the examples run on various platforms and to search for platform-specific examples, type the platform name (or any keywords) in the search field. For example, typing &lt;code&gt;mobile&lt;/code&gt; in the search field lists the examples that are fully compatible with the &lt;a href=&quot;https://doc.qt.io/qt-6.0/topics-core.html#platform-support&quot;&gt;mobile&lt;/a&gt; platforms.</source>
          <target state="translated">QtCreatorの&lt;b&gt;ウェルカム&lt;/b&gt;モードでサンプルを開いて実行します。ほとんどの例はさまざまなプラットフォームで実行され、プラットフォーム固有の例を検索するには、検索フィールドにプラットフォーム名（または任意のキーワード）を入力します。たとえば、検索フィールドに「 &lt;code&gt;mobile&lt;/code&gt; 」と入力すると、&lt;a href=&quot;https://doc.qt.io/qt-6.0/topics-core.html#platform-support&quot;&gt;モバイル&lt;/a&gt;プラットフォームと完全に互換性のある例が一覧表示されます。</target>
        </trans-unit>
        <trans-unit id="8b18b3cb1d919113d468b6b7623afc8253f4c18b" translate="yes" xml:space="preserve">
          <source>Open document.</source>
          <target state="translated">ドキュメントを開く。</target>
        </trans-unit>
        <trans-unit id="b6b3041906071e2e9c2102c5f76d2e25c7f3e745" translate="yes" xml:space="preserve">
          <source>Open for editing (open an SMS in the SMS editor, open the URI in a URI editor, open the telephone number for editing).</source>
          <target state="translated">編集用に開く(SMSエディタでSMSを開く、URIエディタでURIを開く、編集用に電話番号を開く</target>
        </trans-unit>
        <trans-unit id="40f296882c518355cdbb8edcd05790b9ec3c4641" translate="yes" xml:space="preserve">
          <source>Open help contents.</source>
          <target state="translated">ヘルプの内容を開きます。</target>
        </trans-unit>
        <trans-unit id="63d89569ac44ed6a4c778b9e2f60d18c0cdfb96b" translate="yes" xml:space="preserve">
          <source>Open the camera device. The camera state is changed to &lt;a href=&quot;qcamera#Status-enum&quot;&gt;QCamera::LoadedStatus&lt;/a&gt;.</source>
          <target state="translated">カメラデバイスを開きます。カメラの状態が&lt;a href=&quot;qcamera#Status-enum&quot;&gt;QCamera :: LoadedStatusに&lt;/a&gt;変更されます。</target>
        </trans-unit>
        <trans-unit id="3745b35555ada97705265c81b74c1ca85836778f" translate="yes" xml:space="preserve">
          <source>Open the current link in a new background tab. Requires implementation of &lt;a href=&quot;qwebenginepage#createWindow&quot;&gt;createWindow&lt;/a&gt;(). (Added in Qt 5.7)</source>
          <target state="translated">現在のリンクを新しい背景タブで開きます。&lt;a href=&quot;qwebenginepage#createWindow&quot;&gt;createWindow&lt;/a&gt;（）の実装が必要です。（Qt 5.7で追加）</target>
        </trans-unit>
        <trans-unit id="3d691305328e945c9f65cd275838f064c9506496" translate="yes" xml:space="preserve">
          <source>Open the current link in a new tab. Requires a handler for the &lt;a href=&quot;qml-qtwebengine-webengineview#newViewRequested-signal&quot;&gt;newViewRequested()&lt;/a&gt; signal. (Added in Qt 5.6)</source>
          <target state="translated">現在のリンクを新しいタブで開きます。&lt;a href=&quot;qml-qtwebengine-webengineview#newViewRequested-signal&quot;&gt;newViewRequested（）&lt;/a&gt;シグナルのハンドラーが必要です。（Qt 5.6で追加）</target>
        </trans-unit>
        <trans-unit id="82128e25279b8bb1201668c83c78bb1070ded0a0" translate="yes" xml:space="preserve">
          <source>Open the current link in a new tab. Requires implementation of &lt;a href=&quot;qwebenginepage#createWindow&quot;&gt;createWindow&lt;/a&gt;(). (Added in Qt 5.6)</source>
          <target state="translated">現在のリンクを新しいタブで開きます。&lt;a href=&quot;qwebenginepage#createWindow&quot;&gt;createWindow&lt;/a&gt;（）の実装が必要です。（Qt 5.6で追加）</target>
        </trans-unit>
        <trans-unit id="9ea809cf8428cad9e799c81db11d21af837e28e0" translate="yes" xml:space="preserve">
          <source>Open the current link in a new window. Requires a handler for the &lt;a href=&quot;qml-qtwebengine-webengineview#newViewRequested-signal&quot;&gt;newViewRequested()&lt;/a&gt; signal. (Added in Qt 5.6)</source>
          <target state="translated">現在のリンクを新しいウィンドウで開きます。&lt;a href=&quot;qml-qtwebengine-webengineview#newViewRequested-signal&quot;&gt;newViewRequested（）&lt;/a&gt;シグナルのハンドラーが必要です。（Qt 5.6で追加）</target>
        </trans-unit>
        <trans-unit id="ae6da494fcca9762429920a21f908d25600b5222" translate="yes" xml:space="preserve">
          <source>Open the current link in a new window. Requires implementation of &lt;a href=&quot;qwebenginepage#createWindow&quot;&gt;createWindow&lt;/a&gt;(). (Added in Qt 5.6)</source>
          <target state="translated">現在のリンクを新しいウィンドウで開きます。&lt;a href=&quot;qwebenginepage#createWindow&quot;&gt;createWindow&lt;/a&gt;（）の実装が必要です。（Qt 5.6で追加）</target>
        </trans-unit>
        <trans-unit id="97d4b2de4b5f441f4e975d86b0110002b0873bcf" translate="yes" xml:space="preserve">
          <source>Open the current link in the current window. (Added in Qt 5.6)</source>
          <target state="translated">現在のウィンドウで現在のリンクを開きます。(Qt 5.6で追加)</target>
        </trans-unit>
        <trans-unit id="5111ec84b2fda68a4ada2a5f2fcaa72c71a13f90" translate="yes" xml:space="preserve">
          <source>Open the downloaded file in XCode to install. Now the next time you plug in one of the registered devices, your Provisioning Profile should be installed to it automatically.</source>
          <target state="translated">ダウンロードしたファイルを XCode で開いてインストールします。これで、次に登録されたデバイスを接続するときに、Provisioning Profileが自動的にインストールされるようになります。</target>
        </trans-unit>
        <trans-unit id="a789f149f1f14263e073d943c3d01a179d6b7835" translate="yes" xml:space="preserve">
          <source>Open the preferences dialog.</source>
          <target state="translated">環境設定ダイアログを開きます。</target>
        </trans-unit>
        <trans-unit id="b820cf27c8331fa6c15a1db2c6f8e5022d105bd0" translate="yes" xml:space="preserve">
          <source>Open your Qt project using Qt Creator and update the &quot;Build Android APK&quot; settings to add</source>
          <target state="translated">Qt Creatorを使ってQtプロジェクトを開き、「Android APKをビルド」の設定を更新して追加します。</target>
        </trans-unit>
        <trans-unit id="84d92f56dc3762ec725f1b9f285427ff847a4821" translate="yes" xml:space="preserve">
          <source>Open your application project using Qt Creator v3.0 or later and change its &lt;b&gt;Build&lt;/b&gt; settings to build release version.</source>
          <target state="translated">Qt Creator v3.0以降を使用してアプリケーションプロジェクトを開き、&lt;b&gt;ビルド&lt;/b&gt;設定を変更してリリースバージョンを&lt;b&gt;ビルドし&lt;/b&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ce5e18fffa63a04452089fd124c29ad47b7dfd20" translate="yes" xml:space="preserve">
          <source>Open your project with Qt Creator 4.11 or later choosing a &lt;code&gt;Release Build&lt;/code&gt;.</source>
          <target state="translated">Qt Creator 4.11以降でプロジェクトを開き、 &lt;code&gt;Release Build&lt;/code&gt; 選択します。</target>
        </trans-unit>
        <trans-unit id="e82abfb14301374b0bf6bab941ad4a36972107f1" translate="yes" xml:space="preserve">
          <source>OpenDocument Format</source>
          <target state="translated">オープンドキュメントフォーマット</target>
        </trans-unit>
        <trans-unit id="64772f9d09ee3b76e5bdf35aaa7583343125a29f" translate="yes" xml:space="preserve">
          <source>OpenGL</source>
          <target state="translated">OpenGL</target>
        </trans-unit>
        <trans-unit id="d12efdce0e121c10fce10e3b3723f80b28aff57c" translate="yes" xml:space="preserve">
          <source>OpenGL &amp;gt;=3.3 offers full support for all timer query functionality.</source>
          <target state="translated">OpenGL&amp;gt; = 3.3は、すべてのタイマークエリ機能を完全にサポートしています。</target>
        </trans-unit>
        <trans-unit id="bcc7e4ffde0447e8d94b409aa54d1df052a2173f" translate="yes" xml:space="preserve">
          <source>OpenGL &amp;lt;=3.2 with the EXT_timer_query extension offers limited support in that the timestamp of the GPU cannot be queried. Places where this impacts functions provided by Qt classes will be highlighted in the function documentation.</source>
          <target state="translated">EXT_timer_query拡張機能を備えたOpenGL &amp;lt;= 3.2は、GPUのタイムスタンプを照会できないという限定的なサポートを提供します。これがQtクラスによって提供される関数に影響を与える場所は、関数のドキュメントで強調表示されます。</target>
        </trans-unit>
        <trans-unit id="9b75b066713db25e48eedcfb6c8ded476f7f581a" translate="yes" xml:space="preserve">
          <source>OpenGL - Request with the &lt;code&gt;&quot;&quot;&lt;/code&gt; string or the &lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface::OpenGL&lt;/a&gt; enum value.</source>
          <target state="translated">&lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;OpenGL- &lt;/a&gt; &lt;code&gt;&quot;&quot;&lt;/code&gt; 文字列またはQSGRendererInterface :: OpenGL列挙値を使用したリクエスト。</target>
        </trans-unit>
        <trans-unit id="5f032e0e29f26bb6d0f2e99a4a2243617b0f848e" translate="yes" xml:space="preserve">
          <source>OpenGL 2.0 (ES) - This backend is the primary backend for hardware accelerated graphics. It can be run on desktop machines and embedded devices supporting the OpenGL 2.0 or OpenGL/ES 2.0 specification. This includes most graphics chips produced in the last couple of years. The engine can be enabled by using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; onto a &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;.</source>
          <target state="translated">OpenGL 2.0（ES）-このバックエンドは、ハードウェアアクセラレーショングラフィックスの主要なバックエンドです。OpenGL 2.0またはOpenGL / ES 2.0仕様をサポートするデスクトップマシンおよび組み込みデバイスで実行できます。これには、ここ数年で生産されたほとんどのグラフィックチップが含まれます。エンジンを使用して有効にすることができます&lt;a href=&quot;qpainter&quot;&gt;QPainterのを&lt;/a&gt;上に&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f6efb8bd544d6d15fd4166180e3dc22214055cbd" translate="yes" xml:space="preserve">
          <source>OpenGL 2.0 (ES) - This backend is the primary backend for hardware accelerated graphics. It can be run on desktop machines and embedded devices supporting the OpenGL 2.0 or OpenGL/ES 2.0 specification. This includes most graphics chips produced in the last couple of years. The engine can be enabled by using QPainter onto a &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;.</source>
          <target state="translated">OpenGL 2.0（ES）-このバックエンドは、ハードウェアアクセラレーショングラフィックスのプライマリバックエンドです。 OpenGL2.0またはOpenGL / ES2.0仕様をサポートするデスクトップマシンおよび組み込みデバイスで実行できます。これには、過去数年間に製造されたほとんどのグラフィックチップが含まれます。&lt;a href=&quot;qopenglwidget&quot;&gt;QPainterをQOpenGLWidgetに&lt;/a&gt;使用することで、エンジンを有効にできます。</target>
        </trans-unit>
        <trans-unit id="1f5d92dc82f07f9f744501c6bc8fa5ba15fd12b2" translate="yes" xml:space="preserve">
          <source>OpenGL 3.2 with the ARB_timer_query extension offers full support for all timer query functionality.</source>
          <target state="translated">ARB_timer_query拡張機能を持つOpenGL 3.2は、すべてのタイマークエリ機能を完全にサポートしています。</target>
        </trans-unit>
        <trans-unit id="cc2b8bd006f1a57517adb44ab729ab6e83985bce" translate="yes" xml:space="preserve">
          <source>OpenGL 4 supports the following image types:</source>
          <target state="translated">OpenGL 4は以下の画像タイプをサポートしています。</target>
        </trans-unit>
        <trans-unit id="2b36900738c0a893ab6919f890e8f56b7a386f66" translate="yes" xml:space="preserve">
          <source>OpenGL Context and Surface Formats</source>
          <target state="translated">OpenGLのコンテキストとサーフェイスのフォーマット</target>
        </trans-unit>
        <trans-unit id="30f78328bfe51246ab99f1ffe49114584e8cb9a6" translate="yes" xml:space="preserve">
          <source>OpenGL Dependencies</source>
          <target state="translated">OpenGLの依存関係</target>
        </trans-unit>
        <trans-unit id="aca3dc169de5f38b5968729231439d3cd63067a1" translate="yes" xml:space="preserve">
          <source>OpenGL ES 2 (and OpenGL ES 3) do not provide any support for OpenGL timer queries.</source>
          <target state="translated">OpenGL ES 2(およびOpenGL ES 3)は、OpenGLタイマークエリのサポートを提供していません。</target>
        </trans-unit>
        <trans-unit id="8528996357def6b2ee77b7ed4716c024a229c7bb" translate="yes" xml:space="preserve">
          <source>OpenGL ES 2 Headers, version Revision 27673</source>
          <target state="translated">OpenGL ES 2 ヘッダ、バージョン改訂 27673</target>
        </trans-unit>
        <trans-unit id="28ec8a1a4e144097de11fa9111581fb2f78bacbd" translate="yes" xml:space="preserve">
          <source>OpenGL ES 2.0 and OpenGL 2.0 Adaptation</source>
          <target state="translated">OpenGL ES 2.0とOpenGL 2.0の適応</target>
        </trans-unit>
        <trans-unit id="b624a860458ca2802592749e5d6e04887207e2ec" translate="yes" xml:space="preserve">
          <source>OpenGL ES 2.0 or higher</source>
          <target state="translated">OpenGL ES 2.0以上</target>
        </trans-unit>
        <trans-unit id="c787f7804f7c027f7386757989e787a8809ea370" translate="yes" xml:space="preserve">
          <source>OpenGL ES 2.0 or higher via a graphics abstraction layer. This value was introduced in Qt 5.14.</source>
          <target state="translated">グラフィックス抽象化レイヤーを介したOpenGL ES 2.0以上。この値はQt 5.14で導入されました。</target>
        </trans-unit>
        <trans-unit id="928fae1f36ba5f1a61ad9cd6282f9bc9274a6894" translate="yes" xml:space="preserve">
          <source>OpenGL ES 2.0 rendering</source>
          <target state="translated">OpenGL ES 2.0 レンダリング</target>
        </trans-unit>
        <trans-unit id="7bd26d5c9f5b257442ce04ba1950ffc381e54c6e" translate="yes" xml:space="preserve">
          <source>OpenGL ES 2.0 support</source>
          <target state="translated">OpenGL ES 2.0をサポート</target>
        </trans-unit>
        <trans-unit id="ffd36959c7e2c9cda19077950e970fcc299baed7" translate="yes" xml:space="preserve">
          <source>OpenGL ES 3.1 supports the following image types:</source>
          <target state="translated">OpenGL ES 3.1では、以下の画像タイプをサポートしています。</target>
        </trans-unit>
        <trans-unit id="109bce85707f386a325abddc58886228c1888366" translate="yes" xml:space="preserve">
          <source>OpenGL ES 3.2 supports all of the OpenGL ES 3.1 image types as well as the following:</source>
          <target state="translated">OpenGL ES 3.2は、OpenGL ES 3.1のすべてのイメージタイプに対応しているほか、以下のようなイメージタイプにも対応しています。</target>
        </trans-unit>
        <trans-unit id="93e570c1cc4d9045459f6ab709a96fff41b27d4a" translate="yes" xml:space="preserve">
          <source>OpenGL Example (ActiveQt)</source>
          <target state="translated">OpenGLの例 (ActiveQt)</target>
        </trans-unit>
        <trans-unit id="a0c527bf3fa5dad934d29c527693935796b2dc68" translate="yes" xml:space="preserve">
          <source>OpenGL Function Calls, Headers and QOpenGLFunctions</source>
          <target state="translated">OpenGL関数呼び出し、ヘッダ、QOpenGLFunctions</target>
        </trans-unit>
        <trans-unit id="d0006ab36f4957aaf0889a6c16f63ad773143d67" translate="yes" xml:space="preserve">
          <source>OpenGL Headers, version Revision 27684</source>
          <target state="translated">OpenGLヘッダ、バージョン27684</target>
        </trans-unit>
        <trans-unit id="2cb7103e96f7a466ba9c9b5d864938215a6fa50d" translate="yes" xml:space="preserve">
          <source>OpenGL Options for Windows</source>
          <target state="translated">Windows用のOpenGLオプション</target>
        </trans-unit>
        <trans-unit id="10479327b0637b356bf5072417694c9407fe896f" translate="yes" xml:space="preserve">
          <source>OpenGL Rendering</source>
          <target state="translated">OpenGLレンダリング</target>
        </trans-unit>
        <trans-unit id="68e160a8f4c96b2721ebbb37db644a3d99540eab" translate="yes" xml:space="preserve">
          <source>OpenGL Requirements</source>
          <target state="translated">OpenGLの要件</target>
        </trans-unit>
        <trans-unit id="980dd0fad4f15bb580ff542e5a6d67c152defd17" translate="yes" xml:space="preserve">
          <source>OpenGL Special Considerations</source>
          <target state="translated">OpenGLの特別な考慮事項</target>
        </trans-unit>
        <trans-unit id="2f0013897cd3ac5b738dfa2ff5bfab59d16824ef" translate="yes" xml:space="preserve">
          <source>OpenGL Texture Files</source>
          <target state="translated">OpenGL テクスチャファイル</target>
        </trans-unit>
        <trans-unit id="42bf11baf873ac0a840dfda55c900ab17b72bec4" translate="yes" xml:space="preserve">
          <source>OpenGL Type Enum</source>
          <target state="translated">OpenGLタイプの列挙</target>
        </trans-unit>
        <trans-unit id="d8e8a9d3932e7785c9ba77afea18d6965827f9b9" translate="yes" xml:space="preserve">
          <source>OpenGL Under QML</source>
          <target state="translated">QMLの下でのOpenGL</target>
        </trans-unit>
        <trans-unit id="f2e7e629cbe6e02e443fae121cebfd9bbcc65268" translate="yes" xml:space="preserve">
          <source>OpenGL and GLSL</source>
          <target state="translated">OpenGLとGLSL</target>
        </trans-unit>
        <trans-unit id="de500a1f2e503efdf021f0170e6e3bf8d02346fa" translate="yes" xml:space="preserve">
          <source>OpenGL and OpenGL ES Integration</source>
          <target state="translated">OpenGLとOpenGL ESの統合</target>
        </trans-unit>
        <trans-unit id="6aef5a49f83c73bc077153cf40a6d62de354c546" translate="yes" xml:space="preserve">
          <source>OpenGL classes</source>
          <target state="translated">OpenGLクラス</target>
        </trans-unit>
        <trans-unit id="3f0e94498e0df0fe1e9678c76a569141379d3849" translate="yes" xml:space="preserve">
          <source>OpenGL debug log</source>
          <target state="translated">OpenGLデバッグログ</target>
        </trans-unit>
        <trans-unit id="0a36c9883a584af1ab8e8efaf4cb32b2bc7673a2" translate="yes" xml:space="preserve">
          <source>OpenGL implementations keep an internal log of debug messages. Messages stored in this log can be retrieved by using the &lt;a href=&quot;qopengldebuglogger#loggedMessages&quot;&gt;loggedMessages&lt;/a&gt;() function:</source>
          <target state="translated">OpenGL実装は、デバッグメッセージの内部ログを保持します。このログに保存されたメッセージは、&lt;a href=&quot;qopengldebuglogger#loggedMessages&quot;&gt;loggedMessages&lt;/a&gt;（）関数を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="f82e967a5973c20a37a758671fdf52a222a11827" translate="yes" xml:space="preserve">
          <source>OpenGL implementations on different platforms are able to link to a variable number of OpenGL functions depending upon the OpenGL ABI on that platform. For example, on Microsoft Windows only functions up to those in OpenGL 1.1 can be linked to at build time. All other functions must be resolved at runtime. The traditional solution to this has been to use either &lt;a href=&quot;qopenglcontext#getProcAddress&quot;&gt;QOpenGLContext::getProcAddress&lt;/a&gt;() or &lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;. The former is tedious and error prone and means dealing directly with function pointers. The latter only exposes those functions common to OpenGL ES 2 and desktop OpenGL. There is however much new OpenGL functionality that is useful when writing real world OpenGL applications.</source>
          <target state="translated">異なるプラットフォーム上のOpenGL実装は、そのプラットフォーム上のOpenGL ABIに応じて、可変数のOpenGL関数にリンクできます。たとえば、Microsoft Windowsでは、ビルド時にOpenGL 1.1の機能までしかリンクできません。他のすべての関数は実行時に解決する必要があります。これに対する従来の解決策は、&lt;a href=&quot;qopenglcontext#getProcAddress&quot;&gt;QOpenGLContext :: getProcAddress&lt;/a&gt;（）または&lt;a href=&quot;https://doc.qt.io/qt-5.13/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;を使用することでした。前者は面倒でエラーが発生しやすく、関数ポインターを直接処理することを意味します。後者は、OpenGL ES 2とデスクトップOpenGLに共通の機能のみを公開します。ただし、実際のOpenGLアプリケーションを作成する場合に役立つ、多くの新しいOpenGL機能があります。</target>
        </trans-unit>
        <trans-unit id="fb4ddfad084a2a2291c8e56f4b3e56d55e8544de" translate="yes" xml:space="preserve">
          <source>OpenGL implementations on different platforms are able to link to a variable number of OpenGL functions depending upon the OpenGL ABI on that platform. For example, on Microsoft Windows only functions up to those in OpenGL 1.1 can be linked to at build time. All other functions must be resolved at runtime. The traditional solution to this has been to use either &lt;a href=&quot;qopenglcontext#getProcAddress&quot;&gt;QOpenGLContext::getProcAddress&lt;/a&gt;() or &lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;. The former is tedious and error prone and means dealing directly with function pointers. The latter only exposes those functions common to OpenGL ES 2 and desktop OpenGL. There is however much new OpenGL functionality that is useful when writing real world OpenGL applications.</source>
          <target state="translated">さまざまなプラットフォームでのOpenGL実装は、そのプラットフォームでのOpenGL ABIに応じて、さまざまな数のOpenGL関数にリンクできます。たとえば、Microsoft Windowsでは、OpenGL1.1の機能までの機能のみをビルド時にリンクできます。他のすべての機能は、実行時に解決する必要があります。これに対する従来の解決策は、&lt;a href=&quot;qopenglcontext#getProcAddress&quot;&gt;QOpenGLContext :: getProcAddress&lt;/a&gt;（）または&lt;a href=&quot;https://doc.qt.io/qt-5.15/qopenglfunctions.html&quot;&gt;QOpenGLFunctionsの&lt;/a&gt;いずれかを使用することでした。前者は面倒でエラーが発生しやすく、関数ポインタを直接処理することを意味します。後者は、OpenGL ES2とデスクトップOpenGLに共通の機能のみを公開します。ただし、実際のOpenGLアプリケーションを作成するときに役立つ多くの新しいOpenGL機能があります。</target>
        </trans-unit>
        <trans-unit id="0ae187bc83114d042a48f9fae0b78ae0e3340400" translate="yes" xml:space="preserve">
          <source>OpenGL implementations on different platforms are able to link to a variable number of OpenGL functions depending upon the OpenGL ABI on that platform. For example, on Microsoft Windows only functions up to those in OpenGL 1.1 can be linked to at build time. All other functions must be resolved at runtime. The traditional solution to this has been to use either &lt;a href=&quot;qopenglcontext#getProcAddress&quot;&gt;QOpenGLContext::getProcAddress&lt;/a&gt;() or &lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions.html&quot;&gt;QOpenGLFunctions&lt;/a&gt;. The former is tedious and error prone and means dealing directly with function pointers. The latter only exposes those functions common to OpenGL ES 2 and desktop OpenGL. There is however much new OpenGL functionality that is useful when writing real world OpenGL applications.</source>
          <target state="translated">さまざまなプラットフォームでのOpenGL実装は、そのプラットフォームでのOpenGL ABIに応じて、さまざまな数のOpenGL関数にリンクできます。たとえば、Microsoft Windowsでは、OpenGL1.1の機能までの機能のみをビルド時にリンクできます。他のすべての機能は、実行時に解決する必要があります。これに対する従来の解決策は、&lt;a href=&quot;qopenglcontext#getProcAddress&quot;&gt;QOpenGLContext :: getProcAddress&lt;/a&gt;（）または&lt;a href=&quot;https://doc.qt.io/qt-6.0/qopenglfunctions.html&quot;&gt;QOpenGLFunctionsの&lt;/a&gt;いずれかを使用することでした。前者は面倒でエラーが発生しやすく、関数ポインタを直接処理することを意味します。後者は、OpenGL ES2とデスクトップOpenGLに共通の機能のみを公開します。ただし、実際のOpenGLアプリケーションを作成するときに役立つ多くの新しいOpenGL機能があります。</target>
        </trans-unit>
        <trans-unit id="f0d3935585b34b3d7077e7f4ebc00a3b10364442" translate="yes" xml:space="preserve">
          <source>OpenGL is a trademark of Silicon Graphics, Inc. in the United States and other countries.</source>
          <target state="translated">OpenGLは、Silicon Graphics,Inc.の米国およびその他の国における商標です。</target>
        </trans-unit>
        <trans-unit id="8a9b1426b2e41bf88077993ad398d30054178ea0" translate="yes" xml:space="preserve">
          <source>OpenGL offers various levels of support for timer queries, depending on the version of OpenGL you have and the presence of the ARB_timer_query or EXT_timer_query extensions. The support can be summarized as:</source>
          <target state="translated">OpenGLは、お使いのOpenGLのバージョンと、ARB_timer_queryまたはEXT_timer_query拡張機能の存在に応じて、様々なレベルのタイマークエリのサポートを提供しています。サポートは以下のように要約することができます。</target>
        </trans-unit>
        <trans-unit id="ff5da30ddf744e7958dfb126c7a199bcf764ce9a" translate="yes" xml:space="preserve">
          <source>OpenGL pre-3.0: Set the same blend state for all draw buffers (one &lt;a href=&quot;qt3drender-qblendequationarguments&quot;&gt;QBlendEquationArguments&lt;/a&gt;) OpenGL 3.0-pre4.0: Set the same blend state for all draw buffers, but can disable blending for particular buffers (one &lt;a href=&quot;qt3drender-qblendequationarguments&quot;&gt;QBlendEquationArguments&lt;/a&gt; for setting glBlendFunc, n QBlendEquationArgumentss for enabling/disabling Draw Buffers) OpenGL 4.0+: Can set blend state individually for each draw buffer.</source>
          <target state="translated">OpenGL 3.0以前：すべての描画バッファーに同じブレンド状態を設定（1つの&lt;a href=&quot;qt3drender-qblendequationarguments&quot;&gt;QBlendEquationArguments&lt;/a&gt;）OpenGL 3.0-pre4.0：すべての描画バッファーに同じブレンド状態を設定しますが、特定のバッファーのブレンドを無効にできます（glBlendFunc、nを設定するための1つの&lt;a href=&quot;qt3drender-qblendequationarguments&quot;&gt;QBlendEquationArguments）&lt;/a&gt;描画バッファーを有効/無効にするQBlendEquationArgumentss）OpenGL 4.0+：各描画バッファーのブレンド状態を個別に設定できます。</target>
        </trans-unit>
        <trans-unit id="9e86f6a1c8a248e628e09c53599e252dd74d2ef2" translate="yes" xml:space="preserve">
          <source>OpenGL pre-3.0: Set the same blend state for all draw buffers (one QBlendEquationArguments) OpenGL 3.0-pre4.0: Set the same blend state for all draw buffers, but can disable blending for particular buffers (one QBlendEquationArguments for setting glBlendFunc, n QBlendEquationArgumentss for enabling/disabling Draw Buffers) OpenGL 4.0+: Can set blend state individually for each draw buffer.</source>
          <target state="translated">OpenGL 3.0以前のバージョン。すべての描画バッファに対して同じブレンド状態を設定する(1つのQBlendEquationArguments)OpenGL 3.0-pre4.0:すべての描画バッファに対して同じブレンド状態を設定する。すべての描画バッファに対して同じブレンド状態を設定しますが、特定のバッファに対してブレンドを無効にすることができます(glBlendFuncを設定するための1つのQBlendEquationArguments、描画バッファの有効化/無効化のためのn個のQBlendEquationArguments)。 OpenGL 4.0+:各描画バッファに対して個別にブレンド状態を設定できます。</target>
        </trans-unit>
        <trans-unit id="a3a1862a13d7eb7f34735beabbce032097b0eab9" translate="yes" xml:space="preserve">
          <source>OpenGL pre-3.0: Set the same blend state for all draw buffers OpenGL 3.0-pre4.0: Set the same blend state for all draw buffers, but can disable blending for particular buffers OpenGL 4.0+: Can set blend state individually for each draw buffer.</source>
          <target state="translated">OpenGL 3.0以前のバージョン。すべての描画バッファに対して同じブレンド状態を設定 OpenGL 3.0-pre4.0:すべての描画バッファに対して同じブレンド状態を設定します。すべての描画バッファに対して同じブレンド状態を設定しますが、特定のバッファに対してはブレンドを無効にすることができます。 OpenGL 4.0+:各描画バッファに対して個別にブレンド状態を設定することができます。</target>
        </trans-unit>
        <trans-unit id="6636612aa6c727ff72ca590587d618c3013d1337" translate="yes" xml:space="preserve">
          <source>OpenGL programming can be very error prone. Most of the time, a single failing call to OpenGL can cause an entire portion of an application to stop working, with nothing being drawn on the screen.</source>
          <target state="translated">OpenGLプログラミングは、非常にエラーを起こしやすいものです。ほとんどの場合、OpenGLへの呼び出しに失敗しただけで、アプリケーションの全体が動作を停止し、画面に何も描画されなくなることがあります。</target>
        </trans-unit>
        <trans-unit id="74929da08ad08e3e471771cad96fe3e9e68e1cac" translate="yes" xml:space="preserve">
          <source>OpenGL represents time with a granularity of 1 nanosecond (1e-9 seconds). As a consequence of this, 32-bit integers would only give a total possible duration of approximately 4 seconds, which would not be difficult to exceed in poorly performing or lengthy operations. OpenGL therefore uses 64 bit integer types to represent times. A GLuint64 variable has enough width to contain a duration of hundreds of years, which is plenty for real-time rendering needs.</source>
          <target state="translated">OpenGLは、1ナノ秒(1e-9秒)の粒度で時間を表現します。その結果、32ビット整数は、約4秒の合計可能な持続時間しか与えませんが、これは、パフォーマンスの低い操作や長い操作では、これを超えることは難しくありません。そのため、OpenGLでは、時間を表すために64ビット整数型を使用しています。GLuint64変数は、数百年分の持続時間を含むのに十分な幅を持っており、リアルタイムレンダリングのニーズには十分です。</target>
        </trans-unit>
        <trans-unit id="67ec6b6d738192d0de564256a8647a1cdcabf5ac" translate="yes" xml:space="preserve">
          <source>OpenGL specifics</source>
          <target state="translated">OpenGLの仕様</target>
        </trans-unit>
        <trans-unit id="69798ea739aa41ef0c4de9bd92521f9162d1461a" translate="yes" xml:space="preserve">
          <source>OpenGL state when invoking &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;(). &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; sets up the viewport via glViewport(). It does not perform any clearing.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;（）を呼び出したときのOpenGLの状態。&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;はglViewport（）を介してビューポートを設定します。クリアは行いません。</target>
        </trans-unit>
        <trans-unit id="1c1c869d57dd2c8c3f3524df5d552165108bfd76" translate="yes" xml:space="preserve">
          <source>OpenGL state when invoking &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;(). QOpenGLWidget sets up the viewport via glViewport(). It does not perform any clearing.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;（）を呼び出すときのOpenGL状態。QOpenGLWidgetは、glViewport（）を介してビューポートを設定します。クリアは行いません。</target>
        </trans-unit>
        <trans-unit id="804ac47a55b34e299195bb4758d3ebb407bbfbef" translate="yes" xml:space="preserve">
          <source>OpenGL timer query objects are OpenGL managed resources to measure the execution times of sequences of OpenGL commands on the GPU.</source>
          <target state="translated">OpenGLタイマークエリオブジェクトは、GPU上のOpenGLコマンドのシーケンスの実行時間を測定するためのOpenGL管理されたリソースです。</target>
        </trans-unit>
        <trans-unit id="13688a054c6bd464f78b8a626dc59dbfa982fe4e" translate="yes" xml:space="preserve">
          <source>OpenGL version 3.1 removed many deprecated functions leading to a much simpler and generic API.</source>
          <target state="translated">OpenGLバージョン3.1では、多くの非推奨関数が削除され、よりシンプルで汎用的なAPIになりました。</target>
        </trans-unit>
        <trans-unit id="23dde3419f800291716b40dc803f543cfc6c3c08" translate="yes" xml:space="preserve">
          <source>OpenGL version is lower than 3.2. For 3.2 and newer this is same as CoreProfile.</source>
          <target state="translated">OpenGLのバージョンが3.2より低い。3.2以降はCoreProfileと同じです。</target>
        </trans-unit>
        <trans-unit id="f75b5ecdaec2300b73e3e1c6fd168a7010d61e20" translate="yes" xml:space="preserve">
          <source>OpenGL version.</source>
          <target state="translated">OpenGLバージョン。</target>
        </trans-unit>
        <trans-unit id="3cb3279787d68147999b20232be635a5bdbe5215" translate="yes" xml:space="preserve">
          <source>OpenGL versions.</source>
          <target state="translated">OpenGLのバージョン。</target>
        </trans-unit>
        <trans-unit id="443bcbfce9c582fb0ff3ab8d9e0842ce91a13bb7" translate="yes" xml:space="preserve">
          <source>OpenGLInfo (QML type)</source>
          <target state="translated">OpenGLInfo(QML型</target>
        </trans-unit>
        <trans-unit id="d73e46bef76ec6fb139c37385d7f0b256e3c4e23" translate="yes" xml:space="preserve">
          <source>OpenGLInfo QML Type</source>
          <target state="translated">OpenGLInfo QML型</target>
        </trans-unit>
        <trans-unit id="2d38cd821a8b01f3a32ed81abcdd215d019b1232" translate="yes" xml:space="preserve">
          <source>OpenGLInfo.majorVersion</source>
          <target state="translated">OpenGLInfo.majorVersion</target>
        </trans-unit>
        <trans-unit id="585b561eab6d54d94b33e1a1382b6839b3a9d92c" translate="yes" xml:space="preserve">
          <source>OpenGLInfo.minorVersion</source>
          <target state="translated">OpenGLInfo.minorVersion</target>
        </trans-unit>
        <trans-unit id="97849a180b768b060dc07fa311636a9897cb9eb6" translate="yes" xml:space="preserve">
          <source>OpenGLInfo.profile</source>
          <target state="translated">OpenGLInfo.profile</target>
        </trans-unit>
        <trans-unit id="536b73656cc83f653756ed8fe0708babda11768e" translate="yes" xml:space="preserve">
          <source>OpenGLInfo.renderableType</source>
          <target state="translated">OpenGLInfo.renderableType</target>
        </trans-unit>
        <trans-unit id="472334b926db37e8b1ba9a091cdc0aa12469e6de" translate="yes" xml:space="preserve">
          <source>OpenID</source>
          <target state="translated">OpenID</target>
        </trans-unit>
        <trans-unit id="15d13e026d7f1cb8bf733e389ef768f5e8598b6b" translate="yes" xml:space="preserve">
          <source>OpenID Connect</source>
          <target state="translated">オープンIDコネクト</target>
        </trans-unit>
        <trans-unit id="2fe481bea9644021ef4e126d4f53f6ec4cf02f16" translate="yes" xml:space="preserve">
          <source>OpenSSL Support</source>
          <target state="translated">OpenSSL サポート</target>
        </trans-unit>
        <trans-unit id="0e7347494380c3d68e2ccca88d5e7547bdb65192" translate="yes" xml:space="preserve">
          <source>OpenType fonts</source>
          <target state="translated">オープンタイプフォント</target>
        </trans-unit>
        <trans-unit id="f41d9261b712e5021129d0856247ff2d97a74963" translate="yes" xml:space="preserve">
          <source>OpenVG</source>
          <target state="translated">OpenVG</target>
        </trans-unit>
        <trans-unit id="d332cce636468d0759e008a892bcfcc2ff00a440" translate="yes" xml:space="preserve">
          <source>OpenVG Adaptation</source>
          <target state="translated">オープンVG適応</target>
        </trans-unit>
        <trans-unit id="19ee20683a8aa9b231bb591a1c280dec3da089bb" translate="yes" xml:space="preserve">
          <source>OpenWF Display support for managing display control hardware.</source>
          <target state="translated">表示制御ハードウェアを管理するための OpenWF Display のサポート。</target>
        </trans-unit>
        <trans-unit id="968b17f019d0c5690bc98d3470cbb44054fb1437" translate="yes" xml:space="preserve">
          <source>OpenWnn</source>
          <target state="translated">OpenWnn</target>
        </trans-unit>
        <trans-unit id="eba068cf3b59b0869bdd6cfedbd83b7d5b61562d" translate="yes" xml:space="preserve">
          <source>Opening External Resources</source>
          <target state="translated">外部リソースを開く</target>
        </trans-unit>
        <trans-unit id="27fe08766cb424ed43989f55aaf282d844b436ed" translate="yes" xml:space="preserve">
          <source>Opening the Keyboard</source>
          <target state="translated">キーボードを開く</target>
        </trans-unit>
        <trans-unit id="8514051decfc8de9c6a80891022135ac3565eb2b" translate="yes" xml:space="preserve">
          <source>Opens a &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; on the</source>
          <target state="translated">で&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;を開きます</target>
        </trans-unit>
        <trans-unit id="66f371606e547d49af865516e43912b65e46989f" translate="yes" xml:space="preserve">
          <source>Opens a D-Bus map entry suitable for appending the key and value entries. This function is only valid when a map has been opened with &lt;a href=&quot;qdbusargument#beginMap-1&quot;&gt;beginMap&lt;/a&gt;().</source>
          <target state="translated">キーと値のエントリの追加に適したD-Busマップエントリを開きます。この関数は、マップが&lt;a href=&quot;qdbusargument#beginMap-1&quot;&gt;beginMap&lt;/a&gt;（）で開かれている場合にのみ有効です。</target>
        </trans-unit>
        <trans-unit id="1cdb75ec9ab03beed194df942da781c2fdca8674" translate="yes" xml:space="preserve">
          <source>Opens a D-Bus map entry suitable for appending the key and value entries. This function is only valid when a map has been opened with &lt;a href=&quot;qdbusargument#beginMap-2&quot;&gt;beginMap&lt;/a&gt;().</source>
          <target state="translated">キーと値のエントリを追加するのに適したD-Busマップエントリを開きます。この関数は、&lt;a href=&quot;qdbusargument#beginMap-2&quot;&gt;beginMap&lt;/a&gt;（）でマップを開いた場合にのみ有効です。</target>
        </trans-unit>
        <trans-unit id="74d56b2da788a2ff7922b049fe26dacd5a25773d" translate="yes" xml:space="preserve">
          <source>Opens a D-Bus structure suitable for extracting elements.</source>
          <target state="translated">要素の抽出に適したD-Bus構造体を開きます。</target>
        </trans-unit>
        <trans-unit id="aa3074c5a81b3d25e931eec32a88ed6051192d1c" translate="yes" xml:space="preserve">
          <source>Opens a WebSocket connection using the given</source>
          <target state="translated">与えられた</target>
        </trans-unit>
        <trans-unit id="ef13174056a4b88128e92ecaf358a7ec8aa33d2c" translate="yes" xml:space="preserve">
          <source>Opens a connection of type</source>
          <target state="translated">タイプの接続を開きます。</target>
        </trans-unit>
        <trans-unit id="23d6253f7d2771f5765ce0ebc3b8e27ec71fa606" translate="yes" xml:space="preserve">
          <source>Opens a connection to a private bus on address</source>
          <target state="translated">アドレスのプライベートバスへの接続をオープンします。</target>
        </trans-unit>
        <trans-unit id="63e02885e93346120fc1fe7750f00e69e8d4f3db" translate="yes" xml:space="preserve">
          <source>Opens a critical message box with the given</source>
          <target state="translated">与えられた</target>
        </trans-unit>
        <trans-unit id="91d8c3349dfc76fd55aaf7ea64135db73ece3b3e" translate="yes" xml:space="preserve">
          <source>Opens a dialog showing the plugins loaded by</source>
          <target state="translated">でロードされたプラグインを表示するダイアログを開きます。</target>
        </trans-unit>
        <trans-unit id="97d66350a79abf5d7d1ce53f421df0bcbb6013fe" translate="yes" xml:space="preserve">
          <source>Opens a new D-Bus array suitable for appending elements of meta-type</source>
          <target state="translated">meta-typeの要素を追加するのに適した新しいD-Bus配列を開きます。</target>
        </trans-unit>
        <trans-unit id="8a3bab506d80395cf4d78d8ddb96e158adb282e3" translate="yes" xml:space="preserve">
          <source>Opens a new D-Bus map suitable for appending elements. Maps are containers that associate one entry (the key) to another (the value), such as Qt's &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; or &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;. The ids of the map's key and value meta types must be passed in</source>
          <target state="translated">要素の追加に適した新しいD-Busマップを開きます。マップは、1つのエントリ（キー）を別のエントリ（値）に関連付けるコンテナです（Qtの&lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;や&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;など）。マップのキーと値のメタタイプのIDを渡す必要があります</target>
        </trans-unit>
        <trans-unit id="9c47014befc4288a4176383fe88814302434b3b8" translate="yes" xml:space="preserve">
          <source>Opens a new D-Bus structure suitable for appending new arguments.</source>
          <target state="translated">新しい引数を追加するのに適した新しいD-Bus構造体を開きます。</target>
        </trans-unit>
        <trans-unit id="d1a111ecde9131326c70dc8736e2e0c6405c5e10" translate="yes" xml:space="preserve">
          <source>Opens a peer-to-peer connection on address</source>
          <target state="translated">アドレスでピアツーピア接続を開きます。</target>
        </trans-unit>
        <trans-unit id="15b8dbf9d202d94eb78e9883879d32f0ed05927f" translate="yes" xml:space="preserve">
          <source>Opens a persistent editor for the</source>
          <target state="translated">のための永続的なエディタを開きます。</target>
        </trans-unit>
        <trans-unit id="e4a6cab156d32b9604bbfbea75e5608b4ff7f73b" translate="yes" xml:space="preserve">
          <source>Opens a persistent editor on the item at the given</source>
          <target state="translated">指定された項目の永続的なエディタを開きます。</target>
        </trans-unit>
        <trans-unit id="3fb2e94012a7ef2d3ba59544d3bb174e7ebcfb64" translate="yes" xml:space="preserve">
          <source>Opens a question message box with the given</source>
          <target state="translated">与えられた</target>
        </trans-unit>
        <trans-unit id="ab4c01e328009965672d79122db9abc9a42c256e" translate="yes" xml:space="preserve">
          <source>Opens a warning message box with the given</source>
          <target state="translated">与えられた</target>
        </trans-unit>
        <trans-unit id="5a2c9424b166882775d47f640c389d95263cacf9" translate="yes" xml:space="preserve">
          <source>Opens an editor for the give</source>
          <target state="translated">give用のエディタを開きます。</target>
        </trans-unit>
        <trans-unit id="04140f785165ddff92c36fb1ef829c5e1a0ef856" translate="yes" xml:space="preserve">
          <source>Opens an editor for the given</source>
          <target state="translated">与えられたエディタを開きます。</target>
        </trans-unit>
        <trans-unit id="fb8fae47bdce07aacf91e703b806ca686f49c4b9" translate="yes" xml:space="preserve">
          <source>Opens an information message box with the given</source>
          <target state="translated">与えられた</target>
        </trans-unit>
        <trans-unit id="515775271b4a53c451c2a3915e283e324a11bc31" translate="yes" xml:space="preserve">
          <source>Opens the camera device. The camera state is changed to &lt;a href=&quot;qcamera#State-enum&quot;&gt;QCamera::LoadedState&lt;/a&gt;.</source>
          <target state="translated">カメラデバイスを開きます。カメラの状態が&lt;a href=&quot;qcamera#State-enum&quot;&gt;QCamera :: LoadedStateに&lt;/a&gt;変更されます。</target>
        </trans-unit>
        <trans-unit id="31ab34e31dafd84be118819be9220d78ce486803" translate="yes" xml:space="preserve">
          <source>Opens the database connection using the current connection values. Returns &lt;code&gt;true&lt;/code&gt; on success; otherwise returns &lt;code&gt;false&lt;/code&gt;. Error information can be retrieved using &lt;a href=&quot;qsqldatabase#lastError&quot;&gt;lastError&lt;/a&gt;().</source>
          <target state="translated">現在の接続値を使用してデータベース接続を開きます。成功した &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; を返します。エラー情報は、&lt;a href=&quot;qsqldatabase#lastError&quot;&gt;lastError&lt;/a&gt;（）を使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="993be9f3bb706f07f00b6182b8d3a0c8b25c6319" translate="yes" xml:space="preserve">
          <source>Opens the database connection using the given</source>
          <target state="translated">与えられた</target>
        </trans-unit>
        <trans-unit id="4301925a7020fb88a4b792f66a87ce1c02be265e" translate="yes" xml:space="preserve">
          <source>Opens the device and sets its &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt; to</source>
          <target state="translated">デバイスを開き、その&lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;を</target>
        </trans-unit>
        <trans-unit id="2633c6d2902d9d3663d15cf15cfb268fbcde64ff" translate="yes" xml:space="preserve">
          <source>Opens the device and sets its &lt;a href=&quot;qiodevicebase#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt; to</source>
          <target state="translated">デバイスを開き、&lt;a href=&quot;qiodevicebase#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;をに設定します</target>
        </trans-unit>
        <trans-unit id="123e4507c7a0b637cfb40166dd065a3f17149e55" translate="yes" xml:space="preserve">
          <source>Opens the dialog and connects its &lt;a href=&quot;qcolordialog#colorSelected&quot;&gt;colorSelected&lt;/a&gt;() signal to the slot specified by</source>
          <target state="translated">ダイアログを開き、その&lt;a href=&quot;qcolordialog#colorSelected&quot;&gt;colorSelected&lt;/a&gt;（）シグナルを、</target>
        </trans-unit>
        <trans-unit id="e5083a107f1177df363ca702507f56ddec21d01e" translate="yes" xml:space="preserve">
          <source>Opens the dialog and connects its &lt;a href=&quot;qdialog#accepted&quot;&gt;accepted&lt;/a&gt;() signal to the slot specified by</source>
          <target state="translated">ダイアログを開き、&lt;a href=&quot;qdialog#accepted&quot;&gt;受け入れた&lt;/a&gt;（）シグナルを、指定されたスロットに接続します</target>
        </trans-unit>
        <trans-unit id="3eb742621c223739e7f8808fc440f27bef3934cf" translate="yes" xml:space="preserve">
          <source>Opens the dialog and connects its &lt;a href=&quot;qdialog#finished&quot;&gt;finished&lt;/a&gt;() or &lt;a href=&quot;qmessagebox#buttonClicked&quot;&gt;buttonClicked&lt;/a&gt;() signal to the slot specified by</source>
          <target state="translated">ダイアログを開いて、&lt;a href=&quot;qdialog#finished&quot;&gt;終了した&lt;/a&gt;（）または&lt;a href=&quot;qmessagebox#buttonClicked&quot;&gt;buttonClicked&lt;/a&gt;（）信号を、指定されたスロットに接続します。</target>
        </trans-unit>
        <trans-unit id="63a40029c97cc953f4f221972be9fb3a01154e0c" translate="yes" xml:space="preserve">
          <source>Opens the dialog and connects its &lt;a href=&quot;qfontdialog#fontSelected&quot;&gt;fontSelected&lt;/a&gt;() signal to the slot specified by</source>
          <target state="translated">ダイアログを開き、その&lt;a href=&quot;qfontdialog#fontSelected&quot;&gt;fontSelected&lt;/a&gt;（）シグナルを、</target>
        </trans-unit>
        <trans-unit id="e36277a56397c0079c028872269761ff47976814" translate="yes" xml:space="preserve">
          <source>Opens the dialog and connects its &lt;a href=&quot;qprintdialog#accepted&quot;&gt;accepted&lt;/a&gt;() signal to the slot specified by</source>
          <target state="translated">ダイアログを開き、&lt;a href=&quot;qprintdialog#accepted&quot;&gt;受け入れた&lt;/a&gt;（）シグナルを、指定されたスロットに接続します</target>
        </trans-unit>
        <trans-unit id="0391e8ba283727c1adc9cd465b31b57187fa395b" translate="yes" xml:space="preserve">
          <source>Opens the dialog and connects its &lt;a href=&quot;qprogressdialog#canceled&quot;&gt;canceled&lt;/a&gt;() signal to the slot specified by</source>
          <target state="translated">ダイアログを開き、&lt;a href=&quot;qprogressdialog#canceled&quot;&gt;キャンセルされた&lt;/a&gt;（）シグナルを、指定されたスロットに接続します</target>
        </trans-unit>
        <trans-unit id="3011d3031b14f86f6abeb04480f8afb291450f2f" translate="yes" xml:space="preserve">
          <source>Opens the dialog and connects its finished(int) signal to the slot specified by</source>
          <target state="translated">ダイアログを開き、その終了した(int)信号を</target>
        </trans-unit>
        <trans-unit id="89766326de65daab04696f9fb139ae537eae1c59" translate="yes" xml:space="preserve">
          <source>Opens the dialog.</source>
          <target state="translated">ダイアログを開きます。</target>
        </trans-unit>
        <trans-unit id="67ef400fd2a69717900c44d971feabd3d725d45e" translate="yes" xml:space="preserve">
          <source>Opens the existing file descriptor</source>
          <target state="translated">既存のファイル記述子を開きます。</target>
        </trans-unit>
        <trans-unit id="16a4e1b316eb46680f1edf7ce57a80d698128d83" translate="yes" xml:space="preserve">
          <source>Opens the existing file handle</source>
          <target state="translated">既存のファイルハンドルを開きます。</target>
        </trans-unit>
        <trans-unit id="2a08f5d5b170878c84f14e091d3943487ae05591" translate="yes" xml:space="preserve">
          <source>Opens the file using &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;を使用してファイルを開きます</target>
        </trans-unit>
        <trans-unit id="d420ff55e8a83e6eed79c2b2ef08590cbe7d1205" translate="yes" xml:space="preserve">
          <source>Opens the file using &lt;a href=&quot;qiodevicebase#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qiodevicebase#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;を使用してファイルを開きます</target>
        </trans-unit>
        <trans-unit id="63efd41d9c323e2c12100aa22e41c32f8cde6eb6" translate="yes" xml:space="preserve">
          <source>Opens the given</source>
          <target state="translated">与えられたものを開きます。</target>
        </trans-unit>
        <trans-unit id="22a64925ef8b97494a71be052ee1072f5fb42a32" translate="yes" xml:space="preserve">
          <source>Opens the menu at coordinates</source>
          <target state="translated">座標でメニューを開く</target>
        </trans-unit>
        <trans-unit id="69dc5484b8f2a3f2be653165ea58c934bd840d46" translate="yes" xml:space="preserve">
          <source>Opens the menu at the current mouse position, optionally aligned to a menu</source>
          <target state="translated">現在のマウスの位置でメニューを開きます。</target>
        </trans-unit>
        <trans-unit id="a694856e8cf13af519edad886da926187c569afd" translate="yes" xml:space="preserve">
          <source>Opens the menu at the mouse cursor on desktop platforms that have a mouse cursor available, and otherwise centers the menu over its</source>
          <target state="translated">マウスカーソルが利用可能なデスクトッププラットフォームでは、マウスカーソルの位置でメニューを開き、それ以外の場合はメニューの中心を</target>
        </trans-unit>
        <trans-unit id="14cff9bb66b1a801bec22fe0be811dac62cd71dc" translate="yes" xml:space="preserve">
          <source>Opens the menu at the specified</source>
          <target state="translated">指定した場所でメニューを開きます。</target>
        </trans-unit>
        <trans-unit id="09fc43fee6bc84c6b48b3ce505fffba0b3331a53" translate="yes" xml:space="preserve">
          <source>Opens the menu at the specified position</source>
          <target state="translated">指定した位置でメニューを開く</target>
        </trans-unit>
        <trans-unit id="40d00c9ab6332dcd44bb4005fd7c97bc637fcfdf" translate="yes" xml:space="preserve">
          <source>Opens the popup.</source>
          <target state="translated">ポップアップを開きます。</target>
        </trans-unit>
        <trans-unit id="3a4b6723ac82e34929adc28d7d5512ab16745db9" translate="yes" xml:space="preserve">
          <source>Opens the requested page in the new web engine view</source>
          <target state="translated">要求されたページを新しいウェブエンジンビューで開きます。</target>
        </trans-unit>
        <trans-unit id="42686bcc5be2bde4386f9b902dbe8cbb50a6a8fb" translate="yes" xml:space="preserve">
          <source>Opens the serial port using &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;を使用してシリアルポートを開きます</target>
        </trans-unit>
        <trans-unit id="7e8a05bde0eb1907e1abc5dcbb8a5b6b3e17208d" translate="yes" xml:space="preserve">
          <source>Opens this menu under the mouse cursor. It can block on some platforms, so test it accordingly.</source>
          <target state="translated">マウスカーソルの下にあるこのメニューを開きます。プラットフォームによってはブロックされる可能性があるので、それに応じてテストしてください。</target>
        </trans-unit>
        <trans-unit id="faff1ef71e5f887ec052282b1eee91b791fae18a" translate="yes" xml:space="preserve">
          <source>Operating Modes</source>
          <target state="translated">動作モード</target>
        </trans-unit>
        <trans-unit id="e5ba86326755952233b0543acced2995e5faf457" translate="yes" xml:space="preserve">
          <source>Operating System</source>
          <target state="translated">オペレーティングシステム</target>
        </trans-unit>
        <trans-unit id="c77b69db3c3326eaa39cdeea3063e61d722af754" translate="yes" xml:space="preserve">
          <source>Operating System Support</source>
          <target state="translated">オペレーティングシステムのサポート</target>
        </trans-unit>
        <trans-unit id="76966ea04d919598f6965c08ea4aee9e786b727f" translate="yes" xml:space="preserve">
          <source>Operating System setting</source>
          <target state="translated">オペレーティングシステムの設定</target>
        </trans-unit>
        <trans-unit id="5a35209b60ae46982b61db75f9984bec839cc172" translate="yes" xml:space="preserve">
          <source>Operating system</source>
          <target state="translated">オペレーティングシステム</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="translated">Operators</target>
        </trans-unit>
        <trans-unit id="b3799b55b0f3fbdb9d84bcf9935ec60f823ce750" translate="yes" xml:space="preserve">
          <source>Operators for &lt;code&gt;xs:time&lt;/code&gt;, &lt;code&gt;xs:date&lt;/code&gt;, and &lt;code&gt;xs:dateTime&lt;/code&gt; are incomplete.</source>
          <target state="translated">&lt;code&gt;xs:time&lt;/code&gt; 、 &lt;code&gt;xs:date&lt;/code&gt; 、および &lt;code&gt;xs:dateTime&lt;/code&gt; の演算子は不完全です。</target>
        </trans-unit>
        <trans-unit id="d4309f080a0932c92321e84d13bd69df9bd3f95a" translate="yes" xml:space="preserve">
          <source>Operators for comparing</source>
          <target state="translated">比較のための演算子</target>
        </trans-unit>
        <trans-unit id="216460a391f55802a71a8f2316d8fcf1d3002a72" translate="yes" xml:space="preserve">
          <source>Operators that compare</source>
          <target state="translated">比較する演算子</target>
        </trans-unit>
        <trans-unit id="e0f6c587ce8c3469fe1d8772236dfc104f2cb37e" translate="yes" xml:space="preserve">
          <source>Optimizations for Primitive and Relocatable Types</source>
          <target state="translated">原始型と再配置可能な型の最適化</target>
        </trans-unit>
        <trans-unit id="8522eecb5d22ab329fd8b1ec50e90d0c427921a2" translate="yes" xml:space="preserve">
          <source>Optimize Performance for Usage in Qt Containers</source>
          <target state="translated">Qtコンテナでの使用のためのパフォーマンスの最適化</target>
        </trans-unit>
        <trans-unit id="9eec576f9bdb3dffa8a39d748e99a842ca11a7db" translate="yes" xml:space="preserve">
          <source>Optimize the usage of this matrix from its current elements.</source>
          <target state="translated">この行列の使用法を現在の要素から最適化します.</target>
        </trans-unit>
        <trans-unit id="50165a905b894fa8472cc61d5d4827c04f261812" translate="yes" xml:space="preserve">
          <source>Optimizes the rendering of static data sets at the expense of some features.</source>
          <target state="translated">いくつかの機能を犠牲にしてでも、静的データセットのレンダリングを最適化します。</target>
        </trans-unit>
        <trans-unit id="8202dd483764bf9f543c7f059fba8a2598ab2b70" translate="yes" xml:space="preserve">
          <source>Optimizing 2D Assets</source>
          <target state="translated">2次元資産の最適化</target>
        </trans-unit>
        <trans-unit id="4567285538f7fe7e43b5047259433d826af9e4d3" translate="yes" xml:space="preserve">
          <source>Optimizing 3D Assets</source>
          <target state="translated">3Dアセットの最適化</target>
        </trans-unit>
        <trans-unit id="c498c7592ea5e7bd2af38760045ea21dd4a4227f" translate="yes" xml:space="preserve">
          <source>Optimizing Assets</source>
          <target state="translated">資産の最適化</target>
        </trans-unit>
        <trans-unit id="ea56291c352c86319de4c21488b92c976f845475" translate="yes" xml:space="preserve">
          <source>Optimizing the images in your presentation can substantially improve both the startup and runtime performance of your application, as well as the visual quality in certain situations.</source>
          <target state="translated">プレゼンテーションの画像を最適化することで、アプリケーションの起動時と実行時のパフォーマンスが大幅に向上し、特定の状況では視覚的な品質も向上します。</target>
        </trans-unit>
        <trans-unit id="68edef17939954017f30770995583fce320f6e52" translate="yes" xml:space="preserve">
          <source>Optimizing the images used by Texture components in your scene can substantially improve both the startup and runtime performance of your application, as well as the visual quality in certain situations.</source>
          <target state="translated">シーンで Texture コンポーネントが使用するイメージを最適化することで、アプリケーションの起動時と実行時のパフォーマンスが大幅に向上するだけでなく、特定の状況でのビジュアル品質も向上します。</target>
        </trans-unit>
        <trans-unit id="0753cba3300b2133987bb17a468e7c6b0d34882e" translate="yes" xml:space="preserve">
          <source>Opting out of macOS behavior changes</source>
          <target state="translated">macOSの動作が変わるオプトアウト</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="08dbe38fab43c0583b2caa4db37287565d9a4b3c" translate="yes" xml:space="preserve">
          <source>Optional Pointer Tracking</source>
          <target state="translated">オプションのポインターのトラッキング</target>
        </trans-unit>
        <trans-unit id="98076d862dd624bf1c0f8fe18757336471b2fade" translate="yes" xml:space="preserve">
          <source>Optional hint that allows the map to prefetch during this idle period</source>
          <target state="translated">このアイドル期間中にマップをプリフェッチできるようにするオプションのヒント</target>
        </trans-unit>
        <trans-unit id="e1ace5043f2c85648ab0ee006654614fd0fdb4d3" translate="yes" xml:space="preserve">
          <source>Optional map parameters</source>
          <target state="translated">オプションのマップパラメータ</target>
        </trans-unit>
        <trans-unit id="ecb266b541e4b08a278d9159821a983ea3b5932f" translate="yes" xml:space="preserve">
          <source>Optional parameters</source>
          <target state="translated">オプションパラメータ</target>
        </trans-unit>
        <trans-unit id="514a810de5c58b7a254827bb86cbc50f256b24d9" translate="yes" xml:space="preserve">
          <source>Optional plugin parameters</source>
          <target state="translated">オプションのプラグインパラメータ</target>
        </trans-unit>
        <trans-unit id="0d39eefacb892a70286489d339f7d47deb0c13bf" translate="yes" xml:space="preserve">
          <source>Optionally define the minimum allowed margins</source>
          <target state="translated">オプションで最小許容マージンを定義することができます。</target>
        </trans-unit>
        <trans-unit id="53ae7125c6db724741ce5a863475c4df8a499392" translate="yes" xml:space="preserve">
          <source>Optionally set any additional properties e.g. filtering and border options</source>
          <target state="translated">必要に応じて、フィルタリングや枠線オプションなどの追加プロパティを設定することができます。</target>
        </trans-unit>
        <trans-unit id="262051e06de4a07c090c7f18d30995101052fce9" translate="yes" xml:space="preserve">
          <source>Optionally upload pixel data</source>
          <target state="translated">オプションでピクセルデータをアップロード</target>
        </trans-unit>
        <trans-unit id="7b659a77b8821ebf7d9770a1bff0773979d248ff" translate="yes" xml:space="preserve">
          <source>Optionally, create the &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt;. Otherwise, use direct connections.</source>
          <target state="translated">必要に応じて、&lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;レジストリを&lt;/a&gt;作成します。それ以外の場合は、直接接続を使用してください。</target>
        </trans-unit>
        <trans-unit id="246b964c19557d08174a03f48e6a1e70dea562d5" translate="yes" xml:space="preserve">
          <source>Optionally, the command line arguments</source>
          <target state="translated">オプションで、コマンドライン引数</target>
        </trans-unit>
        <trans-unit id="139a84a36d0000a0ce3f1c84617b159b4912eae4" translate="yes" xml:space="preserve">
          <source>Optionally, use &lt;a href=&quot;qtremoteobjects-repc&quot;&gt;repc&lt;/a&gt; to generate a &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; header for your project.</source>
          <target state="translated">必要に応じて、&lt;a href=&quot;qtremoteobjects-repc&quot;&gt;repc&lt;/a&gt;を使用してプロジェクトの&lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;レプリカ&lt;/a&gt;ヘッダーを生成します。</target>
        </trans-unit>
        <trans-unit id="58eba5d2129b46bbd89134b37b2b597b198ed739" translate="yes" xml:space="preserve">
          <source>Optionally, you can set &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; to change the needle's transform origin. Setting the &lt;code&gt;x&lt;/code&gt; position can be useful for needle images where the needle is not centered exactly horizontally. Setting the &lt;code&gt;y&lt;/code&gt; position allows you to make the base of the needle hang over the center of the gauge.</source>
          <target state="translated">オプションで、&lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt;と&lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt;を設定して針の変換原点を変更できます。 &lt;code&gt;x&lt;/code&gt; 位置の設定は、針が正確に水平方向の中央に配置されていない針画像に役立ちます。 &lt;code&gt;y&lt;/code&gt; 位置を設定すると、針の基部をゲージの中心に掛けることができます。</target>
        </trans-unit>
        <trans-unit id="e25a4fd58f6052105b519f94dfab01531b0dc3d9" translate="yes" xml:space="preserve">
          <source>Optionally, you can specify</source>
          <target state="translated">オプションで</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="dcb2ae1a154944a1feaed3a82155638d5b7b721b" translate="yes" xml:space="preserve">
          <source>Options (particularly the DontUseNativeDialogs option) should be set before changing dialog properties or showing the dialog.</source>
          <target state="translated">オプション(特に DontUseNativeDialogs オプション)は、ダイアログのプロパティを変更したり、ダイアログを表示する前に設定しておくべきです。</target>
        </trans-unit>
        <trans-unit id="4cbb6af8a461d8ff4929ea249ec8047f7e2046b1" translate="yes" xml:space="preserve">
          <source>Options can be set using &lt;code&gt;set_source_file_property&lt;/code&gt; on each of the file arguments:</source>
          <target state="translated">オプションは、各ファイル引数で &lt;code&gt;set_source_file_property&lt;/code&gt; を使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="20850651b5368e589825bbead80e1b5e0c2e19fc" translate="yes" xml:space="preserve">
          <source>Options can be set using &lt;code&gt;set_source_file_property&lt;/code&gt; on the &lt;code&gt;dbus_spec&lt;/code&gt;:</source>
          <target state="translated">オプションは使用して設定することができ &lt;code&gt;set_source_file_property&lt;/code&gt; を上 &lt;code&gt;dbus_spec&lt;/code&gt; ：</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
