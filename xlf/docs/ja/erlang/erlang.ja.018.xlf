<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="e059a51bae21ba25bf1564ab677a430187512486" translate="yes" xml:space="preserve">
          <source>Creates the directory &lt;code&gt;Dir&lt;/code&gt; at the remote server.</source>
          <target state="translated">リモートサーバーにディレクトリ &lt;code&gt;Dir&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="49c1e26c85443cdd066c1bfc69dbb272040a3e28" translate="yes" xml:space="preserve">
          <source>Creates the directory &lt;code&gt;tmp/bin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tmp/bin&lt;/code&gt; ディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="29a43abd6d3ef1afa9834431f2aea97b4af3dc21" translate="yes" xml:space="preserve">
          <source>Creates the directory &lt;code&gt;tmp/log&lt;/code&gt;, which is used if the system is started as embedded with the &lt;code&gt;bin/start&lt;/code&gt; script.</source>
          <target state="translated">&lt;code&gt;tmp/log&lt;/code&gt; ディレクトリーを作成します。これは、システムが &lt;code&gt;bin/start&lt;/code&gt; スクリプトに組み込まれた状態で開始される場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="1242ba000e579b3f18105ae3515b7c2029bda8b4" translate="yes" xml:space="preserve">
          <source>Creates the file &lt;code&gt;mysystem.tar.gz&lt;/code&gt; by a call to &lt;code&gt;systools:make_tar/2&lt;/code&gt;. That file has the following contents:</source>
          <target state="translated">&lt;code&gt;systools:make_tar/2&lt;/code&gt; の呼び出しによってファイル &lt;code&gt;mysystem.tar.gz&lt;/code&gt; を作成します。このファイルの内容は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0dbd27d9c55aa28b1313e1dd14a2bc4e49b1ad90" translate="yes" xml:space="preserve">
          <source>Creates the file &lt;code&gt;tmp/releases/start_erl.data&lt;/code&gt; with the contents &quot;5.10.4 FIRST&quot;. This file is to be passed as data file to the &lt;code&gt;start_erl&lt;/code&gt; script.</source>
          <target state="translated">内容が「5.10.4 FIRST」のファイル &lt;code&gt;tmp/releases/start_erl.data&lt;/code&gt; を作成します。このファイルは、データファイルとして &lt;code&gt;start_erl&lt;/code&gt; スクリプトに渡されます。</target>
        </trans-unit>
        <trans-unit id="3b4390f853df6f28b17e4ba1ebb9d05dc580b685" translate="yes" xml:space="preserve">
          <source>Creates the necessary objects in the database if they do not exist. It does not destroy any old values.</source>
          <target state="translated">データベース内に必要なオブジェクトが存在しない場合、必要なオブジェクトを作成します。古い値を破棄することはありません。</target>
        </trans-unit>
        <trans-unit id="e3b42fd99b688b644487e5d667423613942d0cb0" translate="yes" xml:space="preserve">
          <source>Creates the temporary directory &lt;code&gt;tmp&lt;/code&gt; and extracts the tar file &lt;code&gt;mysystem.tar.gz&lt;/code&gt; into that directory.</source>
          <target state="translated">一時ディレクトリ &lt;code&gt;tmp&lt;/code&gt; を作成し、tarファイル &lt;code&gt;mysystem.tar.gz&lt;/code&gt; をそのディレクトリに抽出します。</target>
        </trans-unit>
        <trans-unit id="f4b67855361a8b2e9f81b2db81957703a25e60f9" translate="yes" xml:space="preserve">
          <source>Creating New AVPs</source>
          <target state="translated">新しいAVPの作成</target>
        </trans-unit>
        <trans-unit id="f21c8568842d0493084955f3cdba40f654290e45" translate="yes" xml:space="preserve">
          <source>Creating New Commands</source>
          <target state="translated">新しいコマンドの作成</target>
        </trans-unit>
        <trans-unit id="170dc7892cbd89649aafc3ee101e4f79c68d86f1" translate="yes" xml:space="preserve">
          <source>Creating New Diameter Applications</source>
          <target state="translated">新しい直径のアプリケーションの作成</target>
        </trans-unit>
        <trans-unit id="acc159238b6a4c5f95cf17043326dd88d6db4527" translate="yes" xml:space="preserve">
          <source>Creating a cycle in an acyclic graph exits the process with a &lt;code&gt;cyclic&lt;/code&gt; message.</source>
          <target state="translated">非循環グラフでサイクルを作成すると、 &lt;code&gt;cyclic&lt;/code&gt; メッセージでプロセスが終了します。</target>
        </trans-unit>
        <trans-unit id="89a689799f55f47bff5aa438aaad99cc9cac6e80" translate="yes" xml:space="preserve">
          <source>Creating a listen port (or similar)</source>
          <target state="translated">リッスンポートの作成(またはそれに類するもの)</target>
        </trans-unit>
        <trans-unit id="b0dabb9d644563afda7ef75dbf9ddb689a53e1eb" translate="yes" xml:space="preserve">
          <source>Creating a record is best illustrated by an example:</source>
          <target state="translated">記録の作成は、例によって最もよく説明されています。</target>
        </trans-unit>
        <trans-unit id="0785396cd17353a334d2c5694f1cf8c789487db7" translate="yes" xml:space="preserve">
          <source>Creating and populating the database tables.</source>
          <target state="translated">データベースのテーブルを作成し、入力します。</target>
        </trans-unit>
        <trans-unit id="5e25b92d6d20894d4a780032d07e9aaf3726169e" translate="yes" xml:space="preserve">
          <source>Creating timers using &lt;code&gt;erlang:send_after/3&lt;/code&gt; and &lt;code&gt;erlang:start_timer/3&lt;/code&gt; , is much more efficient than using the timers provided by the &lt;code&gt;timer&lt;/code&gt; module in STDLIB. The &lt;code&gt;timer&lt;/code&gt; module uses a separate process to manage the timers. That process can easily become overloaded if many processes create and cancel timers frequently (especially when using the SMP emulator).</source>
          <target state="translated">使用したタイマーの作成 &lt;code&gt;erlang:send_after/3&lt;/code&gt; と &lt;code&gt;erlang:start_timer/3&lt;/code&gt; 、はるかに効率が提供するタイマー使うより &lt;code&gt;timer&lt;/code&gt; STDLIBでモジュールを。 &lt;code&gt;timer&lt;/code&gt; モジュールは、タイマーを管理するために、別のプロセスを使用しています。多くのプロセスがタイマーを頻繁に作成およびキャンセルすると（特にSMPエミュレーターを使用する場合）、そのプロセスは簡単に過負荷になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="6aa5b3a37ae261965ea4b5b3df412ec4344bb445" translate="yes" xml:space="preserve">
          <source>Creating user and installation directory</source>
          <target state="translated">ユーザーとインストールディレクトリの作成</target>
        </trans-unit>
        <trans-unit id="7765e538bf9103295574c09ce7f7fcfef216b64e" translate="yes" xml:space="preserve">
          <source>Creation number, &lt;code&gt;creation&lt;/code&gt;</source>
          <target state="translated">作成番号、 &lt;code&gt;creation&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d57e5125b47935cf8ac81241bb717e5fa6ce7626" translate="yes" xml:space="preserve">
          <source>Creation of extra HTML pages for improved overview.</source>
          <target state="translated">概要を改善するための余分なHTMLページの作成</target>
        </trans-unit>
        <trans-unit id="d2ed565ee349ff7cd7603b0b26cec60ef4763f9c" translate="yes" xml:space="preserve">
          <source>Creation of match specifications that activates sequential tracing.</source>
          <target state="translated">シーケンシャルトレースを有効にするマッチ仕様の作成</target>
        </trans-unit>
        <trans-unit id="8e6d441d9714522bb21b83364fa2a5d00b6eb8ec" translate="yes" xml:space="preserve">
          <source>Cross Building the System</source>
          <target state="translated">システムのクロスビルド</target>
        </trans-unit>
        <trans-unit id="d28bb00927e29c8f107524a09cae08d7de3f341c" translate="yes" xml:space="preserve">
          <source>Cross reference data are read from BEAM files, so the first step when checking an edited module is to compile it:</source>
          <target state="translated">クロスリファレンスデータはBEAMファイルから読み込みますので、編集したモジュールをチェックする際にはまずコンパイルを行います。</target>
        </trans-unit>
        <trans-unit id="e02bbbbb5d915bb1cab92b79ffa9a44140cffe21" translate="yes" xml:space="preserve">
          <source>Crypto Functions</source>
          <target state="translated">暗号機能</target>
        </trans-unit>
        <trans-unit id="7c804c33db286558bb634271d46f72ed27582aa7" translate="yes" xml:space="preserve">
          <source>Cuneiform</source>
          <target state="translated">Cuneiform</target>
        </trans-unit>
        <trans-unit id="7fef8120d67245c18d2d3c23d1ec55c168fe972d" translate="yes" xml:space="preserve">
          <source>Currency symbol</source>
          <target state="translated">通貨記号</target>
        </trans-unit>
        <trans-unit id="e989237523ba010c0d10879eecc16b45e92314bb" translate="yes" xml:space="preserve">
          <source>Current &lt;code&gt;&lt;a href=&quot;#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; is determined by adding the current &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; with current &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt;time offset&lt;/a&gt;&lt;/code&gt;. The time offset is managed differently depending on which time warp mode you use.</source>
          <target state="translated">現在の &lt;code&gt;&lt;a href=&quot;#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; は、現在の &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; と現在の &lt;code&gt;&lt;a href=&quot;erlang#time_offset-0&quot;&gt;time offset&lt;/a&gt;&lt;/code&gt; を加算して決定されます。タイムオフセットの管理方法は、使用するタイムワープモードによって異なります。</target>
        </trans-unit>
        <trans-unit id="8151c464f241134b4f4d456f4cc69f33b94855fd" translate="yes" xml:space="preserve">
          <source>Current application version.</source>
          <target state="translated">現在のアプリケーションのバージョン。</target>
        </trans-unit>
        <trans-unit id="cf39aa5e331eed7a6bf834b4ebc28d6ec6f1c853" translate="yes" xml:space="preserve">
          <source>Current receiver window size of the association</source>
          <target state="translated">アソシエーションの現在の受信ウィンドウサイズ</target>
        </trans-unit>
        <trans-unit id="721e0705b7675f25ef29c6358e2988e03f1c3289" translate="yes" xml:space="preserve">
          <source>Current release version.</source>
          <target state="translated">現在のリリースバージョン。</target>
        </trans-unit>
        <trans-unit id="ef2faf8e1221a945fc56ac8e4b776673e42a06e1" translate="yes" xml:space="preserve">
          <source>Current transaction id.</source>
          <target state="translated">現在の取引ID。</target>
        </trans-unit>
        <trans-unit id="56ac9a2e7b60275674a03750d103a56f2d845c92" translate="yes" xml:space="preserve">
          <source>Currently null characters at the end of the filename will be accepted by primitive file operations. Such filenames are however still documented as invalid. The implementation will also change in the future and reject such filenames.</source>
          <target state="translated">現在のところ、ファイル名の最後にあるヌル文字はプリミティブなファイル操作で受け入れられます。しかし、そのようなファイル名はまだ無効なものとして文書化されています。将来的には実装も変更され、そのようなファイル名を拒否するようになるでしょう。</target>
        </trans-unit>
        <trans-unit id="fd68810dc863c4a7d9b2c793b7f75aaa4ee6d862" translate="yes" xml:space="preserve">
          <source>Currently recognized options:</source>
          <target state="translated">現在認識されているオプション。</target>
        </trans-unit>
        <trans-unit id="a5181790af2ec6a90e131628be0b3852a277b935" translate="yes" xml:space="preserve">
          <source>Currently supported key value pairs</source>
          <target state="translated">現在サポートされているキー値のペア</target>
        </trans-unit>
        <trans-unit id="44c9fa252343877c40fdea0565278a68f8944c21" translate="yes" xml:space="preserve">
          <source>Currently the only available option is &lt;code&gt;{exception_on_need_dict,boolean()}&lt;/code&gt; which controls whether the function should throw an exception when a preset dictionary is required for decompression. When set to false, a &lt;code&gt;need_dictionary&lt;/code&gt; tuple will be returned instead. See &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt;inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">現在使用できるオプションは、 &lt;code&gt;{exception_on_need_dict,boolean()}&lt;/code&gt; のみです。これは、解凍にプリセットディクショナリが必要な場合に、関数が例外をスローするかどうかを制御します。falseに設定すると、代わりに &lt;code&gt;need_dictionary&lt;/code&gt; タプルが返されます。詳細については、 &lt;code&gt;&lt;a href=&quot;#inflateSetDictionary-2&quot;&gt;inflateSetDictionary/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="cddb5907e1b47e25c8d0e68d2ed7d4f395d9f17a" translate="yes" xml:space="preserve">
          <source>Currently the sanity check is limited to verifying runtime dependencies found in the &lt;code&gt;.app&lt;/code&gt; files of all applications. More checks will be introduced in the future. This implies that the return type &lt;strong&gt;will&lt;/strong&gt; change in the future.</source>
          <target state="translated">現在、健全性チェックは、すべてのアプリケーションの &lt;code&gt;.app&lt;/code&gt; ファイルにある実行時の依存関係の検証に限定されています。今後、さらに多くのチェックが導入される予定です。これは、戻り値の型&lt;strong&gt;が&lt;/strong&gt;将来変更さ&lt;strong&gt;れる&lt;/strong&gt;ことを意味します。</target>
        </trans-unit>
        <trans-unit id="737645ebed390b24709e100a5775b6cedd472f19" translate="yes" xml:space="preserve">
          <source>Currently there are only two meaningful values for &lt;code&gt;flags&lt;/code&gt;: &lt;code&gt;0&lt;/code&gt; means that data is returned in a list, and &lt;code&gt;PORT_CONTROL_FLAG_BINARY&lt;/code&gt; means data is returned as a binary from &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">現在のための2つしか意味のある値がある &lt;code&gt;flags&lt;/code&gt; ： &lt;code&gt;0&lt;/code&gt; のデータがリストに返されることを意味し、 &lt;code&gt;PORT_CONTROL_FLAG_BINARY&lt;/code&gt; のからバイナリとして返される手段データ &lt;code&gt;control&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fb2ff8f97dba7df6390ca52f47c9b879a4000832" translate="yes" xml:space="preserve">
          <source>Currently these processor states are identified as busy:</source>
          <target state="translated">現在、これらのプロセッサの状態はビジー状態であることが確認されています。</target>
        </trans-unit>
        <trans-unit id="916446c740392d0ed2dafd488094d55ee7d3cce2" translate="yes" xml:space="preserve">
          <source>Currently these processor states are identified as non-busy:</source>
          <target state="translated">現在、これらのプロセッサの状態は、非ビジー状態であることが確認されています。</target>
        </trans-unit>
        <trans-unit id="b85f8e32cb97e7d50798a57c99f2a062a1c32801" translate="yes" xml:space="preserve">
          <source>Currently unused; reserved for future use.</source>
          <target state="translated">現在は使用されていません。</target>
        </trans-unit>
        <trans-unit id="aaa2fba5f3b84e45c450abdd52ebbc2ea6fac546" translate="yes" xml:space="preserve">
          <source>Currently, &lt;code&gt;Description&lt;/code&gt; looks like this: &lt;code&gt;{ErrorDescription, StackTrace}&lt;/code&gt;. Applications should not depend on the exact contents of &lt;code&gt;Description&lt;/code&gt; as it could change in the future.</source>
          <target state="translated">現在、 &lt;code&gt;Description&lt;/code&gt; は &lt;code&gt;{ErrorDescription, StackTrace}&lt;/code&gt; ます。将来変更される可能性があるため、アプリケーションは &lt;code&gt;Description&lt;/code&gt; の正確な内容に依存しないでください。</target>
        </trans-unit>
        <trans-unit id="805f1f3d2b5cdce02a09f56980a6492f2ff9d873" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;::&lt;/code&gt; constraint (read as &amp;laquo;is a subtype of&amp;raquo;) is the only guard constraint that can be used in the &lt;code&gt;when&lt;/code&gt; part of a &lt;code&gt;-spec&lt;/code&gt; attribute.</source>
          <target state="translated">現在、 &lt;code&gt;::&lt;/code&gt; 制約（&amp;laquo;is a subtype of&amp;raquo;として読み取られます）は、 &lt;code&gt;-spec&lt;/code&gt; 属性の &lt;code&gt;when&lt;/code&gt; 部分で使用できる唯一のガード制約です。</target>
        </trans-unit>
        <trans-unit id="6b33a3652332788030a08fc93e5cbe5362eca702" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;test&lt;/code&gt; functions have many limitations. Essentially, they will mostly work for old specifications based on the 1997 standard for ASN.1, but not for most modern-style applications. Another limitation is that the &lt;code&gt;test&lt;/code&gt; functions may not work if options that change code generations strategies such as the options &lt;code&gt;macro_name_prefix&lt;/code&gt; and &lt;code&gt;record_name_prefix&lt;/code&gt; have been used.</source>
          <target state="translated">現在、 &lt;code&gt;test&lt;/code&gt; 関数には多くの制限があります。基本的に、それらはASN.1の1997年標準に基づく古い仕様でほとんど動作しますが、ほとんどの最新スタイルのアプリケーションでは動作しません。別の制限は、オプション &lt;code&gt;macro_name_prefix&lt;/code&gt; や &lt;code&gt;record_name_prefix&lt;/code&gt; などのコード生成戦略を変更するオプションが使用されている場合、 &lt;code&gt;test&lt;/code&gt; 関数が機能しない可能性があることです。</target>
        </trans-unit>
        <trans-unit id="44933733aa28b6d8531f1ae7ccd8a964ec602e20" translate="yes" xml:space="preserve">
          <source>Currently, the &lt;code&gt;value&lt;/code&gt; function has many limitations. Essentially, it will mostly work for old specifications based on the 1997 standard for ASN.1, but not for most modern-style applications. Another limitation is that the &lt;code&gt;value&lt;/code&gt; function may not work if options that change code generations strategies such as the options &lt;code&gt;macro_name_prefix&lt;/code&gt; and &lt;code&gt;record_name_prefix&lt;/code&gt; have been used.</source>
          <target state="translated">現在、 &lt;code&gt;value&lt;/code&gt; 関数には多くの制限があります。基本的に、それはASN.1の1997年標準に基づく古い仕様で主に機能しますが、ほとんどの最新スタイルのアプリケーションでは機能しません。別の制限は、オプションの &lt;code&gt;macro_name_prefix&lt;/code&gt; や &lt;code&gt;record_name_prefix&lt;/code&gt; などのコード生成戦略を変更するオプションが使用されている場合、 &lt;code&gt;value&lt;/code&gt; 関数が機能しない可能性があることです。</target>
        </trans-unit>
        <trans-unit id="9dedb8bdaf7eadde90818d8da0963f5eaacb758f" translate="yes" xml:space="preserve">
          <source>Currently, there is only one type of activity event:</source>
          <target state="translated">現在、活動イベントは1種類のみとなっています。</target>
        </trans-unit>
        <trans-unit id="72d7c957925632fbd0795c722d5cf79313ad5ffa" translate="yes" xml:space="preserve">
          <source>Currently, this function supports two kinds of &lt;code&gt;LockItem&lt;/code&gt;:</source>
          <target state="translated">現在、この関数は2種類の &lt;code&gt;LockItem&lt;/code&gt; をサポートしています。</target>
        </trans-unit>
        <trans-unit id="c534cb2c111128e5604f4d3c947fbaeb811a9730" translate="yes" xml:space="preserve">
          <source>Customizes the hostname verification of the peer certificate, as different protocols that use TLS such as HTTP or LDAP may want to do it differently, for possible options see &lt;code&gt;public_key:pkix_verify_hostname/3&lt;/code&gt;</source>
          <target state="translated">ピア証明書のホスト名検証をカスタマイズします。HTTPやLDAPなどのTLSを使用するさまざまなプロトコルが異なる方法で行う場合があるためです。可能なオプションについては、 &lt;code&gt;public_key:pkix_verify_hostname/3&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ae741815264dad90e13c7bc07c21c7c5c96ea669" translate="yes" xml:space="preserve">
          <source>Cygwin, the very latest is usually best. Get all the development tools and of course all the basic ditto. Make sure to get jar and also make sure &lt;strong&gt;not&lt;/strong&gt; to install a Cygwin'ish Java, since the Cygwin jar command is used but Sun's Java compiler and virtual machine.</source>
          <target state="translated">Cygwin、最新のものが通常最高です。すべての開発ツールと、もちろんすべての基本的な情報を入手してください。Cygwin jarコマンドが使用されますが、SunのJavaコンパイラと仮想マシンであるため、jarを取得し、CygwinのJavaをインストールし&lt;strong&gt;ない&lt;/strong&gt;ようにしてください。</target>
        </trans-unit>
        <trans-unit id="5330ddfa4df379999c1bfc18ba91ec4dcf678d1d" translate="yes" xml:space="preserve">
          <source>Cypriot</source>
          <target state="translated">Cypriot</target>
        </trans-unit>
        <trans-unit id="1cb0955565a00adf2d4dd0f3ab0976a162bd4df5" translate="yes" xml:space="preserve">
          <source>Cyrillic</source>
          <target state="translated">Cyrillic</target>
        </trans-unit>
        <trans-unit id="21fc8b66c0a4c09f396ed00049bf845395e89b65" translate="yes" xml:space="preserve">
          <source>Cyrillic &quot;I&quot; has usually no lowercase form.</source>
          <target state="translated">キリル文字の「私」には通常、小文字はありません。</target>
        </trans-unit>
        <trans-unit id="eb30a0c1b7deea5450760581dfaa4d7500b03e11" translate="yes" xml:space="preserve">
          <source>DER encodes a PKIX x509 certificate or part of such a certificate. This function must be used for encoding certificates or parts of certificates that are decoded/created in the &lt;code&gt;otp&lt;/code&gt; format, whereas for the plain format this function directly calls &lt;code&gt;der_encode/2&lt;/code&gt;.</source>
          <target state="translated">DERは、PKIX x509証明書またはそのような証明書の一部をエンコードします。この関数は、 &lt;code&gt;otp&lt;/code&gt; 形式でデコードまたは作成される証明書または証明書の一部をエンコードするために使用する必要がありますが、プレーン形式の場合、この関数は直接 &lt;code&gt;der_encode/2&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="b7de8c553aef404024fa14705d12334a38a9ba56" translate="yes" xml:space="preserve">
          <source>DER encoding rule. Only when using option &lt;code&gt;-ber&lt;/code&gt;.</source>
          <target state="translated">DERエンコーディングルール。オプション &lt;code&gt;-ber&lt;/code&gt; を使用する場合のみ。</target>
        </trans-unit>
        <trans-unit id="0282a2e2726b5fdbd89b48e12c5edb38b5d2c29e" translate="yes" xml:space="preserve">
          <source>DOUBLE PRECISION</source>
          <target state="translated">ダブルプレシジョン</target>
        </trans-unit>
        <trans-unit id="39a267a22efad1284bb718be8389935545f40c42" translate="yes" xml:space="preserve">
          <source>DPA will not be answered with error: a peer that wants to a avoid a race can wait for pending answers before sending DPR.</source>
          <target state="translated">DPAはエラーで回答されません:レースを回避したいピアは、DPRを送信する前に保留中の回答を待つことができます。</target>
        </trans-unit>
        <trans-unit id="837847eadad8a02e0a26e0a89d32d4849dab0375" translate="yes" xml:space="preserve">
          <source>DPR is answered by diameter.</source>
          <target state="translated">DPRは直径で答えます。</target>
        </trans-unit>
        <trans-unit id="4fe6dfc7b5bf41007c92822040a3771600344912" translate="yes" xml:space="preserve">
          <source>DPR is sent by diameter in response to configuration changes requiring a connection to be broken. The user can also send DPR.</source>
          <target state="translated">DPRは、接続の切断を必要とする構成の変更に応答して、直径によって送信されます。ユーザーはDPRを送信することもできます。</target>
        </trans-unit>
        <trans-unit id="09b8851812229eed3f9b811b8227211258143355" translate="yes" xml:space="preserve">
          <source>DTLS is not supported by &lt;code&gt;&lt;a href=&quot;diameter_sctp&quot;&gt;diameter_sctp(3)&lt;/a&gt;&lt;/code&gt;. See also 2.1.</source>
          <target state="translated">DTLSは、 &lt;code&gt;&lt;a href=&quot;diameter_sctp&quot;&gt;diameter_sctp(3)&lt;/a&gt;&lt;/code&gt; ではサポートされていません。2.1も参照してください。</target>
        </trans-unit>
        <trans-unit id="2778aadf7efa4d7ec17ee2e140d3c4805c86ad10" translate="yes" xml:space="preserve">
          <source>DTLS versions supported by default. Overridden by a version option on &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt;connect/[2,3,4]&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt;. For the negotiated DTLS version, see &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">デフォルトでサポートされるDTLSバージョン。 &lt;code&gt;&lt;a href=&quot;#connect-2&quot;&gt;connect/[2,3,4]&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#listen-2&quot;&gt;listen/2&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#ssl_accept-2&quot;&gt;ssl_accept/[1,2,3]&lt;/a&gt;&lt;/code&gt; のバージョンオプションによってオーバーライドされます。ネゴシエートされたDTLSバージョンについては、 &lt;code&gt;&lt;a href=&quot;#connection_information-1&quot;&gt;connection_information/1&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="079040b89595a1905052492b01d234e9da8e65c0" translate="yes" xml:space="preserve">
          <source>DTimeout = &lt;code&gt;non_neg_integer() | infinity&lt;/code&gt;</source>
          <target state="translated">DTimeout = &lt;code&gt;non_neg_integer() | infinity&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="681894808986453e11139b64095d07555db3bc0c" translate="yes" xml:space="preserve">
          <source>DWA is sent and received by diameter.</source>
          <target state="translated">DWAは直径で送受信します。</target>
        </trans-unit>
        <trans-unit id="115bb573277942e2c0241eacb3cfcfbd168c16cc" translate="yes" xml:space="preserve">
          <source>DWR is sent and received by diameter. Callbacks notify the user of transitions into and out of the OKAY state.</source>
          <target state="translated">DWRは直径で送受信されます。コールバックは、OKAY状態への遷移とOKAY状態からの遷移をユーザに通知します。</target>
        </trans-unit>
        <trans-unit id="121a37f5f85a3a162018e843c756b5a8c8364e27" translate="yes" xml:space="preserve">
          <source>Daemons</source>
          <target state="translated">Daemons</target>
        </trans-unit>
        <trans-unit id="f643970ffdf0593ff82c6a1d7e6aa468e3c41266" translate="yes" xml:space="preserve">
          <source>Dash punctuation</source>
          <target state="translated">ダッシュ句読点</target>
        </trans-unit>
        <trans-unit id="464a2f282d12b45929fd78bb794d8a4f9f946bb8" translate="yes" xml:space="preserve">
          <source>Data :: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">データ:: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt; ）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="c9d432b62d16bce12eca345de774a1915e302cce" translate="yes" xml:space="preserve">
          <source>Data :: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">データ:: &lt;code&gt;&lt;a href=&quot;#type-data&quot;&gt;data()&lt;/a&gt;&lt;/code&gt; 、</target>
        </trans-unit>
        <trans-unit id="c18842877f84be9bb3ae10673c4e60242f22c160" translate="yes" xml:space="preserve">
          <source>Data Types</source>
          <target state="translated">データ型</target>
        </trans-unit>
        <trans-unit id="9c31b6f7739d67773b06fe3449c57ddcbffeb92e" translate="yes" xml:space="preserve">
          <source>Data connect time-out. The time the client waits for the server to connect to the data socket.</source>
          <target state="translated">データ接続のタイムアウト。クライアントがサーバがデータソケットに接続するのを待つ時間。</target>
        </trans-unit>
        <trans-unit id="7e10a82b8b559dc5b779041b441a1c0dfe49471b" translate="yes" xml:space="preserve">
          <source>Data directory for a test suite. This directory contains any files used by the test suite, for example, extra Erlang modules, binaries, or data files.</source>
          <target state="translated">テストスイートのデータディレクトリ。このディレクトリにはテストスイートで使われるファイル、例えば追加のErlangモジュール、バイナリ、データファイルなどが含まれています。</target>
        </trans-unit>
        <trans-unit id="32937a8d06658ffd3c1365a3cd1340aa2557de5c" translate="yes" xml:space="preserve">
          <source>Data for input buffering. For details about the input buffering, see the source code in directory &lt;code&gt;kernel/examples&lt;/code&gt;. That certainly goes beyond the scope of this section.</source>
          <target state="translated">入力バッファリング用のデータ。入力バッファリングの詳細については、ディレクトリ &lt;code&gt;kernel/examples&lt;/code&gt; のソースコードを参照してください。それは確かにこのセクションの範囲を超えています。</target>
        </trans-unit>
        <trans-unit id="e054cdd9c9da7b3b2bb7291300fc3a7629888a95" translate="yes" xml:space="preserve">
          <source>Data for the default user. Passed to the user when calling the callback functions.</source>
          <target state="translated">デフォルトのユーザーのデータ。コールバック関数を呼び出す際にユーザに渡されます。</target>
        </trans-unit>
        <trans-unit id="6f1f7cf962006e0b1b007924871539bc66d2db55" translate="yes" xml:space="preserve">
          <source>Data has arrived on the channel. This event is sent as a result of calling &lt;code&gt;&lt;a href=&quot;ssh_connection#send-3&quot;&gt;ssh_connection:send/[3,4,5]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">データがチャネルに到着しました。このイベントは、 &lt;code&gt;&lt;a href=&quot;ssh_connection#send-3&quot;&gt;ssh_connection:send/[3,4,5]&lt;/a&gt;&lt;/code&gt; を呼び出した結果として送信されます。</target>
        </trans-unit>
        <trans-unit id="18ec80ede503c1dd6ab3e54fbee9d4ce77824bf0" translate="yes" xml:space="preserve">
          <source>Data in Mnesia is organized as a set of tables. Each table has a name that must be an atom. Each table is made up of Erlang records. The user is responsible for the record definitions. Each table also has a set of properties. The following are some of the properties that are associated with each table:</source>
          <target state="translated">Mnesiaのデータはテーブルのセットとして構成されています。それぞれのテーブルにはアトムでなければならない名前があります。各テーブルはErlangレコードで構成されています。レコードの定義はユーザが行います。各テーブルはプロパティのセットも持っています。以下は各テーブルに関連付けられたプロパティの一部です。</target>
        </trans-unit>
        <trans-unit id="050ed4cd10f635788adfce66e75cb6851926924f" translate="yes" xml:space="preserve">
          <source>Data in subsequent &lt;code&gt;write/2&lt;/code&gt; calls is buffered until at least &lt;code&gt;Size&lt;/code&gt; bytes are buffered, or until the oldest buffered data is &lt;code&gt;Delay&lt;/code&gt; milliseconds old. Then all buffered data is written in one operating system call. The buffered data is also flushed before some other file operation than &lt;code&gt;write/2&lt;/code&gt; is executed.</source>
          <target state="translated">後続の &lt;code&gt;write/2&lt;/code&gt; 呼び出しのデータは、少なくとも &lt;code&gt;Size&lt;/code&gt; バイトがバッファリングされるまで、または最も古いバッファリングデータが &lt;code&gt;Delay&lt;/code&gt; ミリ秒前になるまでバッファリングされます。次に、バッファリングされたすべてのデータが1つのオペレーティングシステムコールで書き込まれます。バッファリングされたデータは、 &lt;code&gt;write/2&lt;/code&gt; 以外のファイル操作が実行される前にフラッシュされます。</target>
        </trans-unit>
        <trans-unit id="129e2ba95fe6bc450fdea60f77c548e87bd22110" translate="yes" xml:space="preserve">
          <source>Data is organized as a set of dynamic tables, which can store tuples. Each table is created by a process. When the process terminates, the table is automatically destroyed. Every table has access rights set at creation.</source>
          <target state="translated">データは、タプルを格納できる動的なテーブルのセットとして編成されています。各テーブルはプロセスによって作成されます。プロセスが終了すると、テーブルは自動的に破棄されます。各テーブルは、作成時にアクセス権が設定されています。</target>
        </trans-unit>
        <trans-unit id="7c825ea984ebfeb20bfb18c3c089c4b5d7fc910e" translate="yes" xml:space="preserve">
          <source>Data model</source>
          <target state="translated">データモデル</target>
        </trans-unit>
        <trans-unit id="d88a58f92c3b91a26c430ae94296edf843a1b410" translate="yes" xml:space="preserve">
          <source>Data retrieval and matching can be performed efficiently if the key for the record is known. Conversely, if the key is unknown, all records in a table must be searched. The larger the table, the more time consuming it becomes. To remedy this problem, &lt;code&gt;Mnesia&lt;/code&gt; indexing capabilities are used to improve data retrieval and matching of records.</source>
          <target state="translated">レコードのキーがわかっている場合は、データの検索と照合を効率的に実行できます。逆に、キーが不明な場合は、テーブル内のすべてのレコードを検索する必要があります。テーブルが大きいほど、時間がかかります。この問題を解決するために、 &lt;code&gt;Mnesia&lt;/code&gt; の索引付け機能を使用して、データの取得とレコードのマッチングを改善しています。</target>
        </trans-unit>
        <trans-unit id="e543437de0f5b43e761c9966043280a2df286e1d" translate="yes" xml:space="preserve">
          <source>Data sent between distributed Erlang nodes is encoded in the Erlang external format. You must therefore encode and decode Erlang terms into byte streams if you want to use the distribution protocol to communicate between a C program and Erlang.</source>
          <target state="translated">分散されたErlangノード間で送られるデータはErlangの外部フォーマットでエンコードされます。したがって、もしCプログラムとErlangの間でディストリビューションプロトコルを使って通信したいのであれば、Erlangの用語をバイトストリームにエンコードしてデコードしなければなりません。</target>
        </trans-unit>
        <trans-unit id="c4cf6ed152b81374d28ee381b50a64523c29ef6c" translate="yes" xml:space="preserve">
          <source>Data stored by mnesia is not handled.</source>
          <target state="translated">mnesiaで保存されているデータは扱いません。</target>
        </trans-unit>
        <trans-unit id="b6be514c02654c4ded06230fc9559da237b0aa77" translate="yes" xml:space="preserve">
          <source>Data types</source>
          <target state="translated">データ型</target>
        </trans-unit>
        <trans-unit id="19d8f0b6010c96f619023ff00641c7c3986b2380" translate="yes" xml:space="preserve">
          <source>Database configuration data</source>
          <target state="translated">データベース構成データ</target>
        </trans-unit>
        <trans-unit id="ba3cf0c65905f3020e42210451d47c186c957bf0" translate="yes" xml:space="preserve">
          <source>Database schema can be dynamically reconfigured at runtime.</source>
          <target state="translated">データベーススキーマは、実行時に動的に再構成することができます。</target>
        </trans-unit>
        <trans-unit id="5a37f5cd3de7b52eecd6446ee73d36b86dc95de0" translate="yes" xml:space="preserve">
          <source>Database transactions can be distributed, and many functions can be called within one transaction.</source>
          <target state="translated">データベースのトランザクションは分散させることができ、1つのトランザクション内で多くの機能を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="612ad2902cebaa30546804c4eb91a7062d9969d4" translate="yes" xml:space="preserve">
          <source>Datagrams with a TTL of 1 are not forwarded beyond the local network. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">TTLが1のデータグラムは、ローカルネットワークを超えて転送されません。デフォルトは &lt;code&gt;1&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2b99e0cca5062728f6965685da68dc39fcfdf9d3" translate="yes" xml:space="preserve">
          <source>Date and time of the request (&lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">リクエストの日時（ &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc1123.txt&quot;&gt;RFC 1123&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3b6dde365cc5d32622a9c6a2695cee0bd68562c2" translate="yes" xml:space="preserve">
          <source>Deactivates the fragmentation properties of a table. The number of fragments must be &lt;code&gt;1&lt;/code&gt;. No other table can refer to this table in its foreign key.</source>
          <target state="translated">テーブルの断片化プロパティを非アクティブ化します。フラグメントの数は &lt;code&gt;1&lt;/code&gt; でなければなりません。他のテーブルが外部キーでこのテーブルを参照することはできません。</target>
        </trans-unit>
        <trans-unit id="f459ca6dc8c73dd3f58100639885a5b029445022" translate="yes" xml:space="preserve">
          <source>Deadlocks can occur when concurrent processes set and release locks on the same records. &lt;code&gt;Mnesia&lt;/code&gt; employs a &quot;wait-die&quot; strategy to resolve these situations. If &lt;code&gt;Mnesia&lt;/code&gt; suspects that a deadlock can occur when a transaction tries to set a lock, the transaction is forced to release all its locks and sleep for a while. The Fun in the transaction is evaluated once more.</source>
          <target state="translated">同時プロセスが同じレコードのロックを設定および解除すると、デッドロックが発生する可能性があります。 &lt;code&gt;Mnesia&lt;/code&gt; はこれらの状況を解決するために「待機ダイ」戦略を採用しています。トランザクションがロックを設定しようとしたときにデッドロックが発生する可能性があると &lt;code&gt;Mnesia&lt;/code&gt; が疑う場合、トランザクションはすべてのロックを解放してしばらくスリープすることを強制されます。トランザクションのFunがもう一度評価されます。</target>
        </trans-unit>
        <trans-unit id="27b709fc2bb3a86f7f88fe651e9e8a0d28e88b36" translate="yes" xml:space="preserve">
          <source>Debug = &lt;code&gt;trace | debug | disable&lt;/code&gt;</source>
          <target state="translated">デバッグ= &lt;code&gt;trace | debug | disable&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="035f7b677e61f61b074b00eff0b92ad9e09f27f0" translate="yes" xml:space="preserve">
          <source>Debug events from other modules are still not logged.</source>
          <target state="translated">他のモジュールからのデバッグイベントがログに記録されない。</target>
        </trans-unit>
        <trans-unit id="fa4563928cc0c50665178b278c9e71ebacafdf3f" translate="yes" xml:space="preserve">
          <source>Debug option that can be used when starting a &lt;code&gt;gen_statem&lt;/code&gt; server through, &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; サーバーを起動するときに使用できるデバッグオプション、 &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="defb6560167477af27e95859deec8f3b47d74a9a" translate="yes" xml:space="preserve">
          <source>Debugger emulates the stack trace by keeping track of recently called interpreted functions. (The real stack trace cannot be used, as it shows which functions of Debugger have been called, rather than which interpreted functions.)</source>
          <target state="translated">デバッガは、最近呼び出された解釈された関数を追跡することでスタック・トレースをエミュレートします (実際のスタック・トレースは使用できません。(実際のスタック・トレースは、どの解釈された関数が呼び出されたかではなく、デバッガのどの関数が呼び出されたかを示しているため、使用できません)。</target>
        </trans-unit>
        <trans-unit id="e221f45c707889daf1073188d65f869a0b39cbcc" translate="yes" xml:space="preserve">
          <source>Debugger is a graphical user interface for the Erlang interpreter, which can be used for debugging and testing of Erlang programs. For example, breakpoints can be set, code can be single-stepped and variable values can be displayed and changed.</source>
          <target state="translated">デバッガはErlangインタプリタのグラフィカルユーザインタフェースで、Erlangプログラムのデバッグやテストに使用できます。例えば、ブレークポイントの設定、コードのシングルステップ、変数値の表示や変更ができます。</target>
        </trans-unit>
        <trans-unit id="dd4100fe3414e35ff8a037e54e112a9534b3b212" translate="yes" xml:space="preserve">
          <source>Debugger might at some point start tracing on the processes that execute the interpreted code. This means that a conflict occurs if tracing by other means is started on any of these processes.</source>
          <target state="translated">デバッガは、解釈されたコードを実行するプロセスでトレースを開始することがあります。これは、これらのプロセスのいずれかで他の手段によるトレースが開始された場合にコンフリクトが発生することを意味します。</target>
        </trans-unit>
        <trans-unit id="5b6c664f9525b0123e3fae0ff71a9ebc0fd17090" translate="yes" xml:space="preserve">
          <source>Debugger/Interpreter Interface.</source>
          <target state="translated">デバッガ/インタプリタインタフェース。</target>
        </trans-unit>
        <trans-unit id="c8d857648ac1598a30ac096be9d255c19f1bd6cc" translate="yes" xml:space="preserve">
          <source>Debugging &lt;code&gt;Mnesia&lt;/code&gt; applications</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; アプリケーションのデバッグ</target>
        </trans-unit>
        <trans-unit id="23e452f4c5d3a6408023724c090fc801cfc07a47" translate="yes" xml:space="preserve">
          <source>Debugging a &lt;code&gt;Mnesia&lt;/code&gt; application can be difficult for various reasons, primarily related to difficulties in understanding how the transaction and table load mechanisms work. Another source of confusion can be the semantics of nested transactions.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; アプリケーションのデバッグは、主にトランザクションとテーブルのロードメカニズムがどのように機能するかを理解することが難しいことに関連して、さまざまな理由で難しい場合があります。混乱のもう1つの原因は、ネストされたトランザクションのセマンティクスです。</target>
        </trans-unit>
        <trans-unit id="f141f05e4d2cf41fd5dfedfa20ad5cf22dab2e01" translate="yes" xml:space="preserve">
          <source>Debugging using the dbg toolkit.</source>
          <target state="translated">dbgツールキットを使ったデバッグ。</target>
        </trans-unit>
        <trans-unit id="53aa84241bad4437942b340d201b730aaf881f35" translate="yes" xml:space="preserve">
          <source>Debugs a single process. The module &lt;code&gt;Module&lt;/code&gt; is interpreted and &lt;code&gt;apply(Module,Name,Args)&lt;/code&gt; is called. This opens an Attach Process window. For details, see the User's Guide.</source>
          <target state="translated">単一のプロセスをデバッグします。モジュール &lt;code&gt;Module&lt;/code&gt; が解釈され、 &lt;code&gt;apply(Module,Name,Args)&lt;/code&gt; が呼び出されます。アタッチプロセスウィンドウが開きます。詳しくは、ユーザーズガイドをご覧ください。</target>
        </trans-unit>
        <trans-unit id="bf7aef8b1f8e55b262892d6132d56b930c207ed6" translate="yes" xml:space="preserve">
          <source>Debugs the escript. Starts the debugger, loads the module containing the &lt;code&gt;main/1&lt;/code&gt; function into the debugger, sets a breakpoint in &lt;code&gt;main/1&lt;/code&gt;, and invokes &lt;code&gt;main/1&lt;/code&gt;. If the module is precompiled, it must be explicitly compiled with option &lt;code&gt;debug_info&lt;/code&gt;.</source>
          <target state="translated">escriptをデバッグします。デバッガ、負荷含むモジュール起動 &lt;code&gt;main/1&lt;/code&gt; デバッガに機能にブレークポイントを設定し、 &lt;code&gt;main/1&lt;/code&gt; 、及び呼び出す &lt;code&gt;main/1&lt;/code&gt; 。モジュールがプリコンパイルされている場合は、オプション &lt;code&gt;debug_info&lt;/code&gt; で明示的にコンパイルする必要があります。</target>
        </trans-unit>
        <trans-unit id="cae5faece6cb296b0cc299ed6ddc1b6ca04b9323" translate="yes" xml:space="preserve">
          <source>Decide that the processing of these action requests will take a long time and that the originator should get an immediate 'TransactionPending' reply as interim response. The actual processing of these action requests instead should be delegated to the the handle_trans_long_request/3 callback function with the req_data() as one of its arguments.</source>
          <target state="translated">これらのアクションリクエストの処理には長い時間がかかり、発信者は暫定的な応答として即座に 'TransactionPending' 応答を得るべきであると決定します。代わりに、これらのアクションリクエストの実際の処理は、req_data()を引数の一つとして持つ handle_trans_long_request/3 コールバック関数に委譲されるべきです。</target>
        </trans-unit>
        <trans-unit id="296147e1f16d0d671fd62dba38df0f0bf940898e" translate="yes" xml:space="preserve">
          <source>Decide that these action requests shall be ignored completely.</source>
          <target state="translated">これらのアクションリクエストは完全に無視することを決定します。</target>
        </trans-unit>
        <trans-unit id="2a286603a091ca4a3c3ca6602558d954b8dc8447" translate="yes" xml:space="preserve">
          <source>Decide where the installation should be located on the target machine, run the &lt;code&gt;Install&lt;/code&gt; script on the build machine, and package the installed installation. The installation just need to be unpacked at the right location on the target machine:</source>
          <target state="translated">ターゲットマシンでインストールを配置する場所を決定し、ビルドマシンで &lt;code&gt;Install&lt;/code&gt; スクリプトを実行して、インストールされたインストールをパッケージ化します。インストールは、ターゲットマシンの適切な場所で展開するだけです。</target>
        </trans-unit>
        <trans-unit id="c9ab7948100760fa565d60c416761db66c9caa9e" translate="yes" xml:space="preserve">
          <source>Decimal digits (same as \d)</source>
          <target state="translated">小数点以下の桁数(Dと同じ)</target>
        </trans-unit>
        <trans-unit id="65da61a3f57995f3366c218b64218e59bec3ca92" translate="yes" xml:space="preserve">
          <source>Decimal notation (for example, &lt;code&gt;&quot;1.5e3&lt;/code&gt;) for REAL values. The NR1, NR2, and NR3 formats as explained in ISO 6093 are supported.</source>
          <target state="translated">REAL値の10進表記（たとえば、 &lt;code&gt;&quot;1.5e3&lt;/code&gt; ）ISO 6093で説明されているNR1、NR2、およびNR3形式がサポートされています。</target>
        </trans-unit>
        <trans-unit id="5b7088c3751cc4ef1491042690b4e5593015c436" translate="yes" xml:space="preserve">
          <source>Decimal number</source>
          <target state="translated">十進数</target>
        </trans-unit>
        <trans-unit id="ff8fb402b4aaa54b8767c9b731bf29abc3194900" translate="yes" xml:space="preserve">
          <source>Decode (parse) a property parameter construct.</source>
          <target state="translated">プロパティ・パラメータ構成をデコード (パース)します。</target>
        </trans-unit>
        <trans-unit id="5979cd6b56fae3871f3bbb815be4ed934b7900cd" translate="yes" xml:space="preserve">
          <source>Decode a Diameter message.</source>
          <target state="translated">Diameterメッセージをデコードします。</target>
        </trans-unit>
        <trans-unit id="1990206866d59651ba6e0898f7b484e1912dfa30" translate="yes" xml:space="preserve">
          <source>Decode a megaco message.</source>
          <target state="translated">メガメッセージをデコードします。</target>
        </trans-unit>
        <trans-unit id="bf4991dbaad8678edd6c2c6beff475c6105cefe5" translate="yes" xml:space="preserve">
          <source>Decode and encode of Diameter messages.</source>
          <target state="translated">Diameterメッセージのデコードとエンコードを行います。</target>
        </trans-unit>
        <trans-unit id="04c29a268c6d05fb4c10fd39847cdca8507e1edf" translate="yes" xml:space="preserve">
          <source>Decodes PEM binary data and returns entries as ASN.1 DER encoded entities.</source>
          <target state="translated">PEMバイナリデータをデコードし、エントリをASN.1 DERエンコードされたエンティティとして返します。</target>
        </trans-unit>
        <trans-unit id="7360a27688e20855a0fb8a33b91983575b01f93c" translate="yes" xml:space="preserve">
          <source>Decodes a GCC &lt;code&gt;long long&lt;/code&gt; or Visual C++ &lt;code&gt;__int64&lt;/code&gt; (64-bit) integer from the binary format. This function is missing in the VxWorks port.</source>
          <target state="translated">GCC &lt;code&gt;long long&lt;/code&gt; またはVisual C ++ &lt;code&gt;__int64&lt;/code&gt; （64ビット）整数をバイナリ形式からデコードします。この機能はVxWorksポートにありません。</target>
        </trans-unit>
        <trans-unit id="21f60563405db4b9a7e0be854cf6438cd4beb732" translate="yes" xml:space="preserve">
          <source>Decodes a GCC &lt;code&gt;unsigned long long&lt;/code&gt; or Visual C++ &lt;code&gt;unsigned __int64&lt;/code&gt; (64-bit) integer from the binary format. This function is missing in the VxWorks port.</source>
          <target state="translated">GCC &lt;code&gt;unsigned long long&lt;/code&gt; またはVisual C ++ &lt;code&gt;unsigned __int64&lt;/code&gt; （64ビット）整数をバイナリ形式からデコードします。この機能はVxWorksポートにありません。</target>
        </trans-unit>
        <trans-unit id="7cf4297100116a8fb69569a7970b478b23af9197" translate="yes" xml:space="preserve">
          <source>Decodes a PEM entry. &lt;code&gt;pem_decode/1&lt;/code&gt; returns a list of PEM entries. Notice that if the PEM entry is of type 'SubjectPublickeyInfo', it is further decoded to an &lt;code&gt;rsa_public_key()&lt;/code&gt; or &lt;code&gt;dsa_public_key()&lt;/code&gt;.</source>
          <target state="translated">PEMエントリをデコードします。 &lt;code&gt;pem_decode/1&lt;/code&gt; は、PEMエントリのリストを返します。PEMエントリのタイプが「SubjectPublickeyInfo」の場合、さらに &lt;code&gt;rsa_public_key()&lt;/code&gt; または &lt;code&gt;dsa_public_key()&lt;/code&gt; にデコードされることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4c631891ab5871d7e6d4723fb99481871fcd5f1a" translate="yes" xml:space="preserve">
          <source>Decodes a base64-encoded string to plain ASCII. See &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">base64でエンコードされた文字列をプレーンASCIIにデコードします。 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/html/rfc4648&quot;&gt;RFC 4648&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="5a65748944fa474016b5ec91a3fa3dbe7b3d0391" translate="yes" xml:space="preserve">
          <source>Decodes a binary from the binary format. Parameter &lt;code&gt;len&lt;/code&gt; is set to the actual size of the binary. Notice that &lt;code&gt;ei_decode_binary()&lt;/code&gt; assumes that there is enough room for the binary. The size required can be fetched by &lt;code&gt;ei_get_type()&lt;/code&gt;.</source>
          <target state="translated">バイナリ形式からバイナリをデコードします。パラメータ &lt;code&gt;len&lt;/code&gt; は、バイナリの実際のサイズに設定されます。 &lt;code&gt;ei_decode_binary()&lt;/code&gt; は、バイナリ用に十分なスペースがあると想定していることに注意してください。必要なサイズは &lt;code&gt;ei_get_type()&lt;/code&gt; でフェッチできます。</target>
        </trans-unit>
        <trans-unit id="3c1c6c809be0674c11595d06cc3faa64fd8fd808" translate="yes" xml:space="preserve">
          <source>Decodes a boolean value from the binary format. A boolean is actually an atom, &lt;code&gt;true&lt;/code&gt; decodes 1 and &lt;code&gt;false&lt;/code&gt; decodes 0.</source>
          <target state="translated">バイナリ形式からブール値をデコードします。ブール値は実際にはアトムであり、 &lt;code&gt;true&lt;/code&gt; は1をデコードし、 &lt;code&gt;false&lt;/code&gt; は0をデコードします。</target>
        </trans-unit>
        <trans-unit id="08cdc88e69d314abed9e3c385ce7668438ddadd6" translate="yes" xml:space="preserve">
          <source>Decodes a char (8-bit) integer between 0-255 from the binary format. For historical reasons the returned integer is of type &lt;code&gt;char&lt;/code&gt;. Your C code is to consider the returned value to be of type &lt;code&gt;unsigned char&lt;/code&gt; even if the C compilers and system can define &lt;code&gt;char&lt;/code&gt; to be signed.</source>
          <target state="translated">バイナリ形式から0〜255のchar（8ビット）整数をデコードします。歴史的な理由により、返される整数は &lt;code&gt;char&lt;/code&gt; 型です。Cコンパイラとシステムが署名付きの &lt;code&gt;char&lt;/code&gt; を定義できる場合でも、Cコードは戻り値が &lt;code&gt;unsigned char&lt;/code&gt; 型であると見なします。</target>
        </trans-unit>
        <trans-unit id="41180dad3719b82aebc88aab4177009231fe2259" translate="yes" xml:space="preserve">
          <source>Decodes a double-precision (64-bit) floating point number from the binary format.</source>
          <target state="translated">倍精度(64 ビット)浮動小数点数をバイナリ形式からデコードします。</target>
        </trans-unit>
        <trans-unit id="001f04a1f509db28199eaa2770679f16ba8e53e0" translate="yes" xml:space="preserve">
          <source>Decodes a fun from the binary format. Parameter &lt;code&gt;p&lt;/code&gt; is to be &lt;code&gt;NULL&lt;/code&gt; or point to an &lt;code&gt;erlang_fun&lt;/code&gt; structure. This is the only decode function that allocates memory. When the &lt;code&gt;erlang_fun&lt;/code&gt; is no longer needed, it is to be freed with &lt;code&gt;free_fun&lt;/code&gt;. (This has to do with the arbitrary size of the environment for a fun.)</source>
          <target state="translated">funをバイナリ形式からデコードします。パラメータ &lt;code&gt;p&lt;/code&gt; は &lt;code&gt;NULL&lt;/code&gt; にするか、 &lt;code&gt;erlang_fun&lt;/code&gt; 構造体を指します。これは、メモリを割り当てる唯一のデコード関数です。 &lt;code&gt;erlang_fun&lt;/code&gt; が不要になった場合は、free_funを使用して解放し &lt;code&gt;free_fun&lt;/code&gt; 。（これは、楽しみのために環境の任意のサイズに関係しています。）</target>
        </trans-unit>
        <trans-unit id="18d6f4fae8bbc75abc1803bbb8636e607ae242c5" translate="yes" xml:space="preserve">
          <source>Decodes a list header from the binary format. The number of elements is returned in &lt;code&gt;arity&lt;/code&gt;. The &lt;code&gt;arity+1&lt;/code&gt; elements follow (the last one is the tail of the list, normally an empty list). If &lt;code&gt;arity&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, it is an empty list.</source>
          <target state="translated">バイナリ形式からリストヘッダーをデコードします。要素の数は &lt;code&gt;arity&lt;/code&gt; に返されます。 &lt;code&gt;arity+1&lt;/code&gt; の要素は、（最後のものは、リストの末尾、通常は空のリストである）に従います。 &lt;code&gt;arity&lt;/code&gt; が &lt;code&gt;0&lt;/code&gt; の場合、空のリストです。</target>
        </trans-unit>
        <trans-unit id="e4dc7debd8402c2755243e2193f8347f31d3b550" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP Message, but does not decode the data part of the Message. That means, data is still a list of bytes, normally an encoded &lt;code&gt;PDU&lt;/code&gt; (v1 and V2) or an encoded and possibly encrypted &lt;code&gt;scopedPDU&lt;/code&gt; (v3).</source>
          <target state="translated">バイトのリストをSNMPメッセージにデコードしますが、メッセージのデータ部分はデコードしません。つまり、データはバイトのリストであり、通常はエンコードされた &lt;code&gt;PDU&lt;/code&gt; （v1およびV2）またはエンコードされた、そしておそらく暗号化された &lt;code&gt;scopedPDU&lt;/code&gt; （v3）です。</target>
        </trans-unit>
        <trans-unit id="c1d12aa0e48e3eab7e11f37288dcdbefcb70069b" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP Message. Note, if there is a v3 message, the &lt;code&gt;msgSecurityParameters&lt;/code&gt; are not decoded. They must be explicitly decoded by a call to a security model specific decoding function, e.g. &lt;code&gt;dec_usm_security_parameters/1&lt;/code&gt;. Also note, if the &lt;code&gt;scopedPDU&lt;/code&gt; is encrypted, the OCTET STRING encoded &lt;code&gt;encryptedPDU&lt;/code&gt; will be present in the &lt;code&gt;data&lt;/code&gt; field.</source>
          <target state="translated">バイトのリストをSNMPメッセージにデコードします。v3メッセージがある場合、 &lt;code&gt;msgSecurityParameters&lt;/code&gt; はデコードされないことに注意してください。これらは、セキュリティモデル固有のデコード関数（ &lt;code&gt;dec_usm_security_parameters/1&lt;/code&gt; など)の呼び出しによって明示的にデコードする必要があります。また、 &lt;code&gt;scopedPDU&lt;/code&gt; が暗号化されている場合、OCTET STRINGでエンコードさ &lt;code&gt;encryptedPDU&lt;/code&gt; が &lt;code&gt;data&lt;/code&gt; フィールドに表示されます。</target>
        </trans-unit>
        <trans-unit id="eed8e6a0090a3e1c9e82b10392971ae046e1aabd" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP Pdu.</source>
          <target state="translated">バイトのリストをSNMP Pduにデコードします。</target>
        </trans-unit>
        <trans-unit id="3227a1ecb10582ae4a970b8da90cc8679f737c65" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP ScopedPdu.</source>
          <target state="translated">バイトのリストを SNMP ScopedPdu にデコードします。</target>
        </trans-unit>
        <trans-unit id="16ff1ac99b297ea5e89d5914e343d66e3ee9ec7e" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into an SNMP UsmSecurityParameters</source>
          <target state="translated">バイトのリストをSNMP UsmSecurityParametersにデコードします。</target>
        </trans-unit>
        <trans-unit id="8068464b2954e18d56690f482b5c83beb3d2da91" translate="yes" xml:space="preserve">
          <source>Decodes a list of bytes into either a scoped pdu record, or - if the scoped pdu was encrypted - to a list of bytes.</source>
          <target state="translated">バイトのリストを、スコープされた pdu レコード、またはスコープされた pdu が暗号化されている場合はバイトのリストにデコードします。</target>
        </trans-unit>
        <trans-unit id="36fa4c2c8d3ce5469f81bf8e2f01e1bad6585546" translate="yes" xml:space="preserve">
          <source>Decodes a long integer from the binary format. If the code is 64 bits, the function &lt;code&gt;ei_decode_long()&lt;/code&gt; is the same as &lt;code&gt;ei_decode_longlong()&lt;/code&gt;.</source>
          <target state="translated">バイナリ形式から長整数をデコードします。コードは64ビットである場合、関数 &lt;code&gt;ei_decode_long()&lt;/code&gt; と同じである &lt;code&gt;ei_decode_longlong()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e8d6a14f70482ed0b2481e5cdb79122c9ab1d3a9" translate="yes" xml:space="preserve">
          <source>Decodes a map header from the binary format. The number of key-value pairs is returned in &lt;code&gt;*arity&lt;/code&gt;. Keys and values follow in this order: &lt;code&gt;K1, V1, K2, V2, ..., Kn, Vn&lt;/code&gt;. This makes a total of &lt;code&gt;arity*2&lt;/code&gt; terms. If &lt;code&gt;arity&lt;/code&gt; is zero, it is an empty map. A correctly encoded map does not have duplicate keys.</source>
          <target state="translated">バイナリ形式からマップヘッダーをデコードします。キーと値のペアの数は &lt;code&gt;*arity&lt;/code&gt; に返されます。キーと値は、 &lt;code&gt;K1, V1, K2, V2, ..., Kn, Vn&lt;/code&gt; 順序で続きます。これにより、合計 &lt;code&gt;arity*2&lt;/code&gt; 条件になります。場合 &lt;code&gt;arity&lt;/code&gt; ゼロである、それは空のマップです。正しくエンコードされたマップには、重複するキーはありません。</target>
        </trans-unit>
        <trans-unit id="c244de9d7a979fe86f4311c5e29a18ed06b4f05f" translate="yes" xml:space="preserve">
          <source>Decodes a port identifier from the binary format.</source>
          <target state="translated">バイナリ形式からポート識別子をデコードします。</target>
        </trans-unit>
        <trans-unit id="390f19f5072e66d22cafbd8e00edafa3efd84727" translate="yes" xml:space="preserve">
          <source>Decodes a possibly hexadecimal encoded URI.</source>
          <target state="translated">16進数でエンコードされた可能性のあるURIをデコードする。</target>
        </trans-unit>
        <trans-unit id="57fa03cd41899fa37eecf042311c2997f929caf8" translate="yes" xml:space="preserve">
          <source>Decodes a process identifier (pid) from the binary format.</source>
          <target state="translated">プロセス識別子(pid)をバイナリ形式からデコードします。</target>
        </trans-unit>
        <trans-unit id="6e65c52d8708b823530a12d41213dc66d5de21df" translate="yes" xml:space="preserve">
          <source>Decodes a public-key ASN.1 DER encoded entity.</source>
          <target state="translated">公開鍵ASN.1 DERエンコードされたエンティティをデコードする。</target>
        </trans-unit>
        <trans-unit id="a78b5544642de9f1463b92f1892b4542c5bd2718" translate="yes" xml:space="preserve">
          <source>Decodes a reference from the binary format.</source>
          <target state="translated">バイナリ形式からの参照をデコードします。</target>
        </trans-unit>
        <trans-unit id="53687e2100a0b085a62eeaff413256b5b8d3a1ca" translate="yes" xml:space="preserve">
          <source>Decodes a string from the binary format. A string in Erlang is a list of integers between 0 and 255. Notice that as the string is just a list, sometimes lists are encoded as strings by &lt;code&gt;term_to_binary/1&lt;/code&gt;, even if it was not intended.</source>
          <target state="translated">バイナリ形式から文字列をデコードします。Erlangの文字列は0から255までの整数のリストです。文字列は単なるリストであるため、意図していない場合でも、リストは &lt;code&gt;term_to_binary/1&lt;/code&gt; によって文字列としてエンコードされることがあります。</target>
        </trans-unit>
        <trans-unit id="497185de18750b89c2dbb7f8891741f766d7a724" translate="yes" xml:space="preserve">
          <source>Decodes a term from the binary format. The term is return in &lt;code&gt;t&lt;/code&gt; as a &lt;code&gt;ETERM*&lt;/code&gt;, so &lt;code&gt;t&lt;/code&gt; is actually an &lt;code&gt;ETERM**&lt;/code&gt; (see &lt;code&gt;&lt;a href=&quot;erl_eterm&quot;&gt;erl_eterm&lt;/a&gt;&lt;/code&gt;). The term is later to be deallocated.</source>
          <target state="translated">バイナリ形式から用語をデコードします。項は &lt;code&gt;t&lt;/code&gt; に &lt;code&gt;ETERM*&lt;/code&gt; として返されるため、 &lt;code&gt;t&lt;/code&gt; は実際には &lt;code&gt;ETERM**&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;erl_eterm&quot;&gt;erl_eterm&lt;/a&gt;&lt;/code&gt; を参照）。この用語は後で割り当て解除されます。</target>
        </trans-unit>
        <trans-unit id="cb0d9eb8b1a6bcff439c067b3ce8a53cabf5ed5b" translate="yes" xml:space="preserve">
          <source>Decodes a tuple header, the number of elements is returned in &lt;code&gt;arity&lt;/code&gt;. The tuple elements follow in order in the buffer.</source>
          <target state="translated">タプルヘッダーをデコードし &lt;code&gt;arity&lt;/code&gt; 。要素の数はarityに返されます。タプル要素は、バッファ内で順番に続きます。</target>
        </trans-unit>
        <trans-unit id="31233f35dd3238479772605c79734e7f70a5729e" translate="yes" xml:space="preserve">
          <source>Decodes an ASN.1 DER-encoded PKIX certificate. Option &lt;code&gt;otp&lt;/code&gt; uses the customized ASN.1 specification OTP-PKIX.asn1 for decoding and also recursively decode most of the standard parts.</source>
          <target state="translated">ASN.1 DERエンコードPKIX証明書をデコードします。オプション &lt;code&gt;otp&lt;/code&gt; は、カスタマイズされたASN.1仕様OTP-PKIX.asn1を使用してデコードし、ほとんどの標準部品を再帰的にデコードします。</target>
        </trans-unit>
        <trans-unit id="cdf2a0e43fcb6c36f9d5916f9aef94c5705fc226" translate="yes" xml:space="preserve">
          <source>Decodes an Erlang trace token from the binary format.</source>
          <target state="translated">バイナリ形式からErlangトレーストークンをデコードします。</target>
        </trans-unit>
        <trans-unit id="b7ce3a579d78e2a9c6e4166acfedf2e1ffc94b57" translate="yes" xml:space="preserve">
          <source>Decodes an SSH file-binary. In the case of &lt;code&gt;known_hosts&lt;/code&gt; or &lt;code&gt;auth_keys&lt;/code&gt;, the binary can include one or more lines of the file. Returns a list of public keys and their attributes, possible attribute values depends on the file type represented by the binary.</source>
          <target state="translated">SSHファイルバイナリをデコードします。以下の場合 &lt;code&gt;known_hosts&lt;/code&gt; または &lt;code&gt;auth_keys&lt;/code&gt; 、バイナリファイルの一つ以上の行を含むことができます。公開鍵とその属性のリストを返します。可能な属性値は、バイナリで表されるファイルタイプによって異なります。</target>
        </trans-unit>
        <trans-unit id="7f8da18d3e38384c6097ce6ff967087c8f9501e3" translate="yes" xml:space="preserve">
          <source>Decodes an atom from the binary format. The &lt;code&gt;NULL&lt;/code&gt;-terminated name of the atom is placed at &lt;code&gt;p&lt;/code&gt;. At most &lt;code&gt;MAXATOMLEN&lt;/code&gt; bytes can be placed in the buffer.</source>
          <target state="translated">バイナリ形式からアトムをデコードします。アトムの &lt;code&gt;NULL&lt;/code&gt; で終わる名前は &lt;code&gt;p&lt;/code&gt; に置かれます。最大で &lt;code&gt;MAXATOMLEN&lt;/code&gt; バイトをバッファーに入れることができます。</target>
        </trans-unit>
        <trans-unit id="7c8d3960a361efe78e33180447e637e944683649" translate="yes" xml:space="preserve">
          <source>Decodes an atom from the binary format. The &lt;code&gt;NULL&lt;/code&gt;-terminated name of the atom is placed in buffer at &lt;code&gt;p&lt;/code&gt; of length &lt;code&gt;plen&lt;/code&gt; bytes.</source>
          <target state="translated">バイナリ形式からアトムをデコードします。アトムの &lt;code&gt;NULL&lt;/code&gt; で終了する名前は、長さ &lt;code&gt;plen&lt;/code&gt; バイトの &lt;code&gt;p&lt;/code&gt; でバッファーに入れられます。</target>
        </trans-unit>
        <trans-unit id="9f6e85127a2a679440088c560edc3bd683f74e24" translate="yes" xml:space="preserve">
          <source>Decodes an integer in the binary format to a GMP &lt;code&gt;mpz_t&lt;/code&gt; integer. To use this function, the &lt;code&gt;ei&lt;/code&gt; library must be configured and compiled to use the GMP library.</source>
          <target state="translated">バイナリ形式の整数をGMP &lt;code&gt;mpz_t&lt;/code&gt; 整数にデコードします。この関数を使用するには、GMPライブラリーを使用するように &lt;code&gt;ei&lt;/code&gt; ライブラリーを構成およびコンパイルする必要があります。</target>
        </trans-unit>
        <trans-unit id="704c48c66f011d8937953dfaeb16c97c0a406c38" translate="yes" xml:space="preserve">
          <source>Decodes an unsigned long integer from the binary format. If the code is 64 bits, the function &lt;code&gt;ei_decode_ulong()&lt;/code&gt; is the same as &lt;code&gt;ei_decode_ulonglong()&lt;/code&gt;.</source>
          <target state="translated">バイナリ形式から符号なし長整数をデコードします。コードは64ビットである場合、関数 &lt;code&gt;ei_decode_ulong()&lt;/code&gt; と同じである &lt;code&gt;ei_decode_ulonglong()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="04a3f3a375c17646372842a7a97e427866c348d2" translate="yes" xml:space="preserve">
          <source>Decodes any term, or at least tries to. If the term pointed at by &lt;code&gt;*index&lt;/code&gt; in &lt;code&gt;buf&lt;/code&gt; fits in the &lt;code&gt;term&lt;/code&gt; union, it is decoded, and the appropriate field in &lt;code&gt;term-&amp;gt;value&lt;/code&gt; is set, and &lt;code&gt;*index&lt;/code&gt; is incremented by the term size.</source>
          <target state="translated">任意の用語をデコードするか、少なくとも試みます。 &lt;code&gt;buf&lt;/code&gt; の &lt;code&gt;*index&lt;/code&gt; が &lt;code&gt;term&lt;/code&gt; union の用語に適合する場合、それはデコードされ、 &lt;code&gt;term-&amp;gt;value&lt;/code&gt; の適切なフィールドが設定され、 &lt;code&gt;*index&lt;/code&gt; は用語のサイズだけ増加します。</target>
        </trans-unit>
        <trans-unit id="757e6ea7683958a3319067002a2a837818f66225" translate="yes" xml:space="preserve">
          <source>Decodes the binary &lt;code&gt;Bin&lt;/code&gt; according to the packet protocol specified by &lt;code&gt;Type&lt;/code&gt;. Similar to the packet handling done by sockets with option &lt;code&gt;{packet,Type}.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; で指定されたパケットプロトコルに従ってバイナリ &lt;code&gt;Bin&lt;/code&gt; をデコードします。オプション &lt;code&gt;{packet,Type}.&lt;/code&gt; ソケットによって行われるパケット処理に似ています。</target>
        </trans-unit>
        <trans-unit id="9631a2823874b272e99656b5b1df620f055a8804" translate="yes" xml:space="preserve">
          <source>Decodes the reply.</source>
          <target state="translated">返信をデコードします。</target>
        </trans-unit>
        <trans-unit id="582f2e4b062a05b30bb370cfaeb8199d7d3e14f5" translate="yes" xml:space="preserve">
          <source>Decodes the version magic number for the Erlang binary term format. It must be the first token in a binary term.</source>
          <target state="translated">Erlangのバイナリ項フォーマットのバージョンマジックナンバーをデコードします。これはバイナリ項の最初のトークンでなければなりません。</target>
        </trans-unit>
        <trans-unit id="40f0b9334f2e3eebaf1b21997bec63be1900f3f0" translate="yes" xml:space="preserve">
          <source>Decompress a megaco component.</source>
          <target state="translated">megacoコンポーネントを解凍します。</target>
        </trans-unit>
        <trans-unit id="706dab7ea27ed4fc5d61d3a4e180c1715d801b88" translate="yes" xml:space="preserve">
          <source>Decompresses as much data as possible. It can introduce some output latency (reading input without producing any output).</source>
          <target state="translated">できるだけ多くのデータを解凍します。これは、多少の出力レイテンシ(出力を出さずに入力を読み込むこと)を導入することができます。</target>
        </trans-unit>
        <trans-unit id="d3c2e891bd405268b62e1ff3212dcae02a02f258" translate="yes" xml:space="preserve">
          <source>Decreases the suspend count on the process identified by &lt;code&gt;Suspendee&lt;/code&gt;. &lt;code&gt;Suspendee&lt;/code&gt; is previously to have been suspended through &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt;erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt;erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; by the process calling &lt;code&gt;erlang:resume_process(Suspendee)&lt;/code&gt;. When the suspend count on &lt;code&gt;Suspendee&lt;/code&gt; reaches zero, &lt;code&gt;Suspendee&lt;/code&gt; is resumed, that is, its state is changed from suspended into the state it had before it was suspended.</source>
          <target state="translated">&lt;code&gt;Suspendee&lt;/code&gt; によって識別されたプロセスの中断カウントを減らします。 &lt;code&gt;Suspendee&lt;/code&gt; は、以前は &lt;code&gt;erlang:resume_process(Suspendee)&lt;/code&gt; を呼び出すプロセスによって &lt;code&gt;&lt;a href=&quot;#suspend_process-2&quot;&gt;erlang:suspend_process/2&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#suspend_process-1&quot;&gt;erlang:suspend_process/1&lt;/a&gt;&lt;/code&gt; によってサスペンドされていました。上のカウント中断すると &lt;code&gt;Suspendee&lt;/code&gt; がゼロになる、 &lt;code&gt;Suspendee&lt;/code&gt; があること、再開され、その状態は、それが中断前の状態にサスペンドから変更されています。</target>
        </trans-unit>
        <trans-unit id="ac71c47ca533a8bc1bfd074ab38eca1bec247cb6" translate="yes" xml:space="preserve">
          <source>Decrements map iterator to point to the previous key-value entry.</source>
          <target state="translated">前のキー値エントリを指すようにマップイテレータをデクリメントします。</target>
        </trans-unit>
        <trans-unit id="d2ae2edc6a46722a52429b9c14a03465a9f41a38" translate="yes" xml:space="preserve">
          <source>Decrements the reference count of the port data lock passed as argument (&lt;code&gt;pdl&lt;/code&gt;).</source>
          <target state="translated">引数（ &lt;code&gt;pdl&lt;/code&gt; ）として渡されたポートデータロックの参照カウントを減らします。</target>
        </trans-unit>
        <trans-unit id="754079185976b455e02dde4af4135c24c88cca6b" translate="yes" xml:space="preserve">
          <source>Decrements the reference count on &lt;code&gt;bin&lt;/code&gt; and returns the reference count reached after the decrement.</source>
          <target state="translated">&lt;code&gt;bin&lt;/code&gt; の参照カウントをデクリメントし、デクリメント後に到達した参照カウントを返します。</target>
        </trans-unit>
        <trans-unit id="23ae8738dc251a0b810d394196602b268b00e4c4" translate="yes" xml:space="preserve">
          <source>Decrypt &lt;code&gt;CipherText&lt;/code&gt; according to &lt;code&gt;Type&lt;/code&gt; block cipher.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; ブロック暗号に従って &lt;code&gt;CipherText&lt;/code&gt; を復号化します。</target>
        </trans-unit>
        <trans-unit id="83b484422c8b577358aefdc578e61594c216e34f" translate="yes" xml:space="preserve">
          <source>Decrypt &lt;code&gt;CipherText&lt;/code&gt; according to &lt;code&gt;Type&lt;/code&gt; block cipher. &lt;code&gt;IVec&lt;/code&gt; is an arbitrary initializing vector.</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; ブロック暗号に従って &lt;code&gt;CipherText&lt;/code&gt; を復号化します。 &lt;code&gt;IVec&lt;/code&gt; は任意の初期化ベクトルです。</target>
        </trans-unit>
        <trans-unit id="9525efb2590aee5a65243f5e0df7ad4ceb63df47" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;CipherText&lt;/code&gt; according to the stream cipher &lt;code&gt;Type&lt;/code&gt; specified in stream_init/3. &lt;code&gt;PlainText&lt;/code&gt; can be any number of bytes. The initial &lt;code&gt;State&lt;/code&gt; is created using &lt;code&gt;&lt;a href=&quot;#stream_init-2&quot;&gt;stream_init&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;NewState&lt;/code&gt; must be passed into the next call to &lt;code&gt;stream_decrypt&lt;/code&gt;.</source>
          <target state="translated">stream_init / 3で指定されたストリーム暗号 &lt;code&gt;Type&lt;/code&gt; に従ってCipherTextを &lt;code&gt;CipherText&lt;/code&gt; 化します。 &lt;code&gt;PlainText&lt;/code&gt; は任意のバイト数にすることができます。初期 &lt;code&gt;State&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;#stream_init-2&quot;&gt;stream_init&lt;/a&gt;&lt;/code&gt; を使用して作成されます。 &lt;code&gt;NewState&lt;/code&gt; は、 &lt;code&gt;stream_decrypt&lt;/code&gt; の次の呼び出しに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="503569633da92548476a9ed57790d601574d1b5f" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;EncryptFileName&lt;/code&gt;, previously generated with &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt;. The original file contents is saved in the target file. The encryption key, a string, must be available in a text file named &lt;code&gt;.ct_config.crypt&lt;/code&gt;, either in the current directory, or the home directory of the user (it is searched for in that order).</source>
          <target state="translated">以前に &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt; で生成されたEncryptFileNameを &lt;code&gt;EncryptFileName&lt;/code&gt; ます。元のファイルの内容がターゲットファイルに保存されます。暗号化キーである文字列は、現在のディレクトリまたはユーザーのホームディレクトリ（この順序で検索されます）の &lt;code&gt;.ct_config.crypt&lt;/code&gt; という名前のテキストファイルで使用できる必要があります。</target>
        </trans-unit>
        <trans-unit id="0caecc0fc0bc550c01ffb41bca39a694068d649b" translate="yes" xml:space="preserve">
          <source>Decrypts &lt;code&gt;EncryptFileName&lt;/code&gt;, previously generated with &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt;. The original file contents is saved in the target file. The key must have the same value as that used for encryption.</source>
          <target state="translated">以前に &lt;code&gt;&lt;a href=&quot;#encrypt_config_file-2&quot;&gt;ct:encrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt; で生成されたEncryptFileNameを &lt;code&gt;EncryptFileName&lt;/code&gt; ます。元のファイルの内容がターゲットファイルに保存されます。キーは、暗号化に使用されたものと同じ値を持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="0f472612ecfb687801d1f1da0c8ddb8694716270" translate="yes" xml:space="preserve">
          <source>Decrypts the &lt;code&gt;CipherText&lt;/code&gt;, encrypted with &lt;code&gt;&lt;a href=&quot;#private_encrypt-4&quot;&gt;private_encrypt/4&lt;/a&gt;&lt;/code&gt;(or equivalent function) using the &lt;code&gt;PrivateKey&lt;/code&gt;, and returns the plaintext (message digest). This is a low level signature verification operation used for instance by older versions of the SSL protocol. See also &lt;code&gt;public_key:decrypt_public/[2,3]&lt;/code&gt;</source>
          <target state="translated">復号 &lt;code&gt;CipherText&lt;/code&gt; で暗号化された、 &lt;code&gt;&lt;a href=&quot;#private_encrypt-4&quot;&gt;private_encrypt/4&lt;/a&gt;&lt;/code&gt; 使用（または同等の機能） &lt;code&gt;PrivateKey&lt;/code&gt; 、平文（メッセージダイジェスト）を返します。これは、たとえば古いバージョンのSSLプロトコルで使用されている低レベルの署名検証操作です。 &lt;code&gt;public_key:decrypt_public/[2,3]&lt;/code&gt; も参照してください</target>
        </trans-unit>
        <trans-unit id="14b6972ed8f83c5df6839e4f4a7a44d4f21da901" translate="yes" xml:space="preserve">
          <source>Decrypts the &lt;code&gt;CipherText&lt;/code&gt;, encrypted with &lt;code&gt;&lt;a href=&quot;#public_encrypt-4&quot;&gt;public_encrypt/4&lt;/a&gt;&lt;/code&gt; (or equivalent function) using the &lt;code&gt;PrivateKey&lt;/code&gt;, and returns the plaintext (message digest). This is a low level signature verification operation used for instance by older versions of the SSL protocol. See also &lt;code&gt;public_key:decrypt_private/[2,3]&lt;/code&gt;</source>
          <target state="translated">復号 &lt;code&gt;CipherText&lt;/code&gt; で暗号化された、 &lt;code&gt;&lt;a href=&quot;#public_encrypt-4&quot;&gt;public_encrypt/4&lt;/a&gt;&lt;/code&gt; 使用して（または同等の機能） &lt;code&gt;PrivateKey&lt;/code&gt; 、平文（メッセージダイジェスト）を返します。これは、たとえば古いバージョンのSSLプロトコルで使用されている低レベルの署名検証操作です。 &lt;code&gt;public_key:decrypt_private/[2,3]&lt;/code&gt; も参照してください</target>
        </trans-unit>
        <trans-unit id="e296f6426e6e16a531ee764e8d6f8a16573adfb8" translate="yes" xml:space="preserve">
          <source>Default :: Type) -&amp;gt;</source>
          <target state="translated">デフォルト::タイプ）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0455a1833e2e0886438d3f2c531b19ac46a6d41f" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;Category&lt;/code&gt; is &lt;code&gt;default&lt;/code&gt;, default &lt;code&gt;Importance&lt;/code&gt; is &lt;code&gt;?STD_IMPORTANCE&lt;/code&gt;, and default value for &lt;code&gt;FormatArgs&lt;/code&gt; is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">デフォルトの &lt;code&gt;Category&lt;/code&gt; は &lt;code&gt;default&lt;/code&gt; 、デフォルトの &lt;code&gt;Importance&lt;/code&gt; は &lt;code&gt;?STD_IMPORTANCE&lt;/code&gt; 、そして &lt;code&gt;FormatArgs&lt;/code&gt; のデフォルト値は &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3ae7604c9686fc42d1d93be79893ac976923929b" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;Characters&lt;/code&gt; is the set of nonbreakable whitespace codepoints, defined as Pattern_White_Space in &lt;code&gt;&lt;a href=&quot;http://unicode.org/reports/tr31/&quot;&gt;Unicode Standard Annex #31&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;By default, Dir&lt;/code&gt; is &lt;code&gt;both&lt;/code&gt;.</source>
          <target state="translated">デフォルトの &lt;code&gt;Characters&lt;/code&gt; とは、 &lt;code&gt;&lt;a href=&quot;http://unicode.org/reports/tr31/&quot;&gt;Unicode Standard Annex #31&lt;/a&gt;&lt;/code&gt; Pattern_White_Spaceとして定義されている、改行できない空白コードポイントのセットです。 &lt;code&gt;By default, Dir&lt;/code&gt; は &lt;code&gt;both&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0babd07ca0518fcff88ffc718f89e61d45435792" translate="yes" xml:space="preserve">
          <source>Default extensions included in CA certificates if not otherwise specified are:</source>
          <target state="translated">特に指定がない場合、CA 証明書に含まれる既定の拡張子は以下のとおりです。</target>
        </trans-unit>
        <trans-unit id="2ba6be86a95eed9103c8ba22b4e2e2d89c5ea6c4" translate="yes" xml:space="preserve">
          <source>Default extensions included in the server peer cert if not otherwise specified are:</source>
          <target state="translated">特に指定がない場合、サーバピア証明書に含まれる既定の拡張子は以下のとおりです。</target>
        </trans-unit>
        <trans-unit id="697433a75c2d172b286a11dbe7054814dcf6047f" translate="yes" xml:space="preserve">
          <source>Default formatter for Logger.</source>
          <target state="translated">Logger のデフォルトフォーマッタ。</target>
        </trans-unit>
        <trans-unit id="47c9719405207b7b96f782974e156d8b8a3c9316" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;10 timutes&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;10 timutes&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d32a66e97b47395a45626f30911e0e437a9215bd" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;1000&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fd4610fb0d08031a60e5fbdd5587057a34a9c1ea" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;100&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="08361928cb756b9749640168efc42d85af0b54b3" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;21&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;21&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b9c5a16d8900764ce1ca9321bcfe740555ac97eb" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;30000&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;30000&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e19233f2a52cea852bb5913ca613845f588c4cc8" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;5000&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;5000&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="da64d6a89dcf8de6c2eb3c74416287db71b2e35d" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;60000&lt;/code&gt; (milliseconds).</source>
          <target state="translated">デフォルトは &lt;code&gt;60000&lt;/code&gt; （ミリ秒）です。</target>
        </trans-unit>
        <trans-unit id="e0ce2a7c73e9820b57dc327203cf3422cc3eeb90" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[&quot;./&quot;]&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;[&quot;./&quot;]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c13e8f1cbac90a1d2b6c7da13a6f8e97dd112230" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="66bf5e643d1d7909b87604dfdd961ff4bb2e6012" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[v1,v2,v3]&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;[v1,v2,v3]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0e172a976e8c8e94d98a45e1bb8cd57e11ca26de" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;[{module, snmpa_mib_storage_ets}]&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;[{module, snmpa_mib_storage_ets}]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fea0f3a6dc1b09df0cdef2240c99a5b2f8a43c35" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;any&lt;/code&gt;. &lt;code&gt;any&lt;/code&gt; is denoted &lt;strong&gt;*&lt;/strong&gt; in the Apache-like configuration file.</source>
          <target state="translated">デフォルトは &lt;code&gt;any&lt;/code&gt; です。Apacheのような設定ファイルでは、 &lt;code&gt;any&lt;/code&gt; &lt;strong&gt;*&lt;/strong&gt;で示されます。</target>
        </trans-unit>
        <trans-unit id="7c69e3fab0c4ad5ef506a17d1762b197d25a78c1" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;auto&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;auto&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b84dbd79a23eccbbbdd90c5513d52cd8ca4b4fc9" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;default&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a383f9c193f8c6dcc6fe8502b629d4740cbb9e21" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;disable&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;disable&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b16e15890d3d5add9f5075d6403813ccbaeb0554" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7f73e512a2700ceb3d71963efdf25b6344aefa1b" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;ignore&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;ignore&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bdc6f3d08785b591338ece524784ab638a0b8ee0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;inet&lt;/code&gt; (IPv4).</source>
          <target state="translated">デフォルトは &lt;code&gt;inet&lt;/code&gt; （IPv4）です。</target>
        </trans-unit>
        <trans-unit id="72775a8429605b8ef9d6b123fec4c36cc6f5fdfc" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;inet&lt;/code&gt;, legacy option &lt;code&gt;inet6fb4&lt;/code&gt; no longer makes sense and will be translated to inet.</source>
          <target state="translated">デフォルトは &lt;code&gt;inet&lt;/code&gt; であり、従来のオプション &lt;code&gt;inet6fb4&lt;/code&gt; はもはや意味がなく、inetに変換されます。</target>
        </trans-unit>
        <trans-unit id="4642a28be0677b49caece36e6a6a6474b29cec81" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;infinity&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cc7faf8763de4e5866168e70e2de648588322733" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;ip_comm&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;ip_comm&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8782ff1b608f7224777249a71bf09d550bc8bf1d" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;keep&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;keep&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2c4c5118c3f5d8412fe0c9b8e75e982f7543b402" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;master&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;master&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b3c1a88abd35aadb6735da1abb4e7f4fcffc3915" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;none&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7701c684b76eb27396b6b989eb599f71cb73da6a" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;normal&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="476ab15348b30627aed06f4843dfc24e65769b47" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;passive&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;passive&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a9ae6d5a6ab3c7108d958b405e37b1852d151d6f" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;permanent&lt;/code&gt; for the agent and &lt;code&gt;transient&lt;/code&gt; for the manager.</source>
          <target state="translated">デフォルトは、エージェントでは &lt;code&gt;permanent&lt;/code&gt; &lt;code&gt;transient&lt;/code&gt; であり、マネージャーでは一時的です。</target>
        </trans-unit>
        <trans-unit id="3fa6b78325906162002fd6f0f1f33926a394148b" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;pretty&lt;/code&gt;. If the error log is meant to be read directly by a human, &lt;code&gt;pretty&lt;/code&gt; is the best option.</source>
          <target state="translated">デフォルトは &lt;code&gt;pretty&lt;/code&gt; です。エラーログが人間によって直接読み取られることを意図している場合、 &lt;code&gt;pretty&lt;/code&gt; が最良のオプションです。</target>
        </trans-unit>
        <trans-unit id="824599c90eea676a9778f94d7198ac68ab300a0e" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;read_write&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;read_write&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9a8fadbbddfb4128a6f4b12d0a2163d03f0aaee" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;silence&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;silence&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="583cb8385b57b5034b1e17607ea57c59b73db1a5" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpa_error_logger&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;snmpa_error_logger&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="02aea9736fd88d112465ccdc39b2acdaa303ea9a" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpa_net_if&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;snmpa_net_if&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8333409a41829e3578d30c5a2a664b88443d2adc" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpa_net_if_filter&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;snmpa_net_if_filter&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f3f17ded661bc594c2577d8869f7955e1dec73ed" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpm_net_if&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;snmpm_net_if&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4bf4f4ced8cd0dbd7342f8e0a33f2371634694d0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpm_net_if_filter&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;snmpm_net_if_filter&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ddefbc20a121faa07ee1502fcea283b5b5348943" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;snmpm_user_default&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;snmpm_user_default&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="98566a980e52f27b9521d262f661e39d3666ac32" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;stream&lt;/code&gt; for all port types and &lt;code&gt;use_stdio&lt;/code&gt; for spawned ports.</source>
          <target state="translated">デフォルトは、すべてのポートタイプの &lt;code&gt;stream&lt;/code&gt; と、生成されたポートの &lt;code&gt;use_stdio&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f0ecd2bb96adff619cc4f4a9fad4c2005a003cb0" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;string&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1aa3539f64ee2e4fbc7c9c9a66ad5a7207dece79" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;terminate&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;terminate&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ed3bc5199c2686242ae7e3ed5925c3d673b0c871" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt; (in which case the &lt;code&gt;mibs_cache_opts()&lt;/code&gt; default values apply).</source>
          <target state="translated">デフォルトは &lt;code&gt;true&lt;/code&gt; です（この場合、 &lt;code&gt;mibs_cache_opts()&lt;/code&gt; のデフォルト値が適用されます）。</target>
        </trans-unit>
        <trans-unit id="d6280f20eddaf95212e23f7edad94611d8e1ed85" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1253ee2d3a07d43671dc921b852a1fa5eea9c9a7" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;undefined&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1eecd316e90841ac2787732bb944207775a8dc08" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;volatile&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;volatile&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1bb1c08d29b235663689779ac34a672deb282ea2" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;{os_sup, error_report, [Tag]}&lt;/code&gt; which will send the event to the error logger using &lt;code&gt;error_logger:error_report(Tag, Msg)&lt;/code&gt;. &lt;code&gt;Tag&lt;/code&gt; is the value of &lt;code&gt;os_sup_errortag&lt;/code&gt;, see below.</source>
          <target state="translated">デフォルトは &lt;code&gt;{os_sup, error_report, [Tag]}&lt;/code&gt; で、 &lt;code&gt;error_logger:error_report(Tag, Msg)&lt;/code&gt; を使用してイベントをエラーロガーに送信します。 &lt;code&gt;Tag&lt;/code&gt; は &lt;code&gt;os_sup_errortag&lt;/code&gt; の値です。以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="6c4ecf6fb8d5be6f69f1fc0017367a0d5c711bc1" translate="yes" xml:space="preserve">
          <source>Default is &lt;code&gt;{time, local}&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;{time, local}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d208a95fdc67c4fd0bd4148b35827256b12320f8" translate="yes" xml:space="preserve">
          <source>Default is [{&quot;html&quot;,&quot;text/html&quot;},{&quot;htm&quot;,&quot;text/html&quot;}].</source>
          <target state="translated">デフォルトは [{&quot;html&quot;,&quot;text/html&quot;},{&quot;htm&quot;,&quot;text/html&quot;}]です。</target>
        </trans-unit>
        <trans-unit id="5d8623ebaa6d15c1de36a7c88d7fa400d0bde5d5" translate="yes" xml:space="preserve">
          <source>Default is the &lt;code&gt;pid&lt;/code&gt; of the process calling the request function (&lt;code&gt;self()&lt;/code&gt;).</source>
          <target state="translated">デフォルトは、要求関数（ &lt;code&gt;self()&lt;/code&gt; ）を呼び出す &lt;code&gt;pid&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="783669ec8b6d87f9bb3c77a3c2c1798cfbb74182" translate="yes" xml:space="preserve">
          <source>Default is the result of the call: &lt;code&gt;erlang:nodes()&lt;/code&gt;.</source>
          <target state="translated">デフォルトは、呼び出し &lt;code&gt;erlang:nodes()&lt;/code&gt; の結果です。</target>
        </trans-unit>
        <trans-unit id="b71f9247e18ef64c373b1e8d97d0a1f2636d8a9e" translate="yes" xml:space="preserve">
          <source>Default is the string &lt;code&gt;&quot;HTTP/1.1&quot;&lt;/code&gt;.</source>
          <target state="translated">デフォルトは文字列 &lt;code&gt;&quot;HTTP/1.1&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="18601ac2fc7e17710f0915e6b5ef05bb27887ee0" translate="yes" xml:space="preserve">
          <source>Default is the value of option &lt;code&gt;timeout&lt;/code&gt;.</source>
          <target state="translated">デフォルトは、オプション &lt;code&gt;timeout&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="836f7284a59cd3d69df487640b2cf6b694a06d08" translate="yes" xml:space="preserve">
          <source>Default mode is &lt;code&gt;interactive&lt;/code&gt;.</source>
          <target state="translated">デフォルトのモードは &lt;code&gt;interactive&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1b39ce8d2a520c8a3189fbf2ba97367df84a7024" translate="yes" xml:space="preserve">
          <source>Default module is &lt;code&gt;snmpa_mib_data_tttn&lt;/code&gt;.</source>
          <target state="translated">デフォルトのモジュールは &lt;code&gt;snmpa_mib_data_tttn&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4361c6aead9bf47c00983b19bb5ca98e6c0b9e32" translate="yes" xml:space="preserve">
          <source>Default module is &lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt;.</source>
          <target state="translated">デフォルトのモジュールは &lt;code&gt;snmpa_mib_storage_ets&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5c80fcde5171c6815b1e3964a4d234c76dddfa21" translate="yes" xml:space="preserve">
          <source>Default option &lt;code&gt;verify_fun&lt;/code&gt; in &lt;code&gt;verify_peer mode&lt;/code&gt;:</source>
          <target state="translated">デフォルトのオプション &lt;code&gt;verify_fun&lt;/code&gt; で &lt;code&gt;verify_peer mode&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="31429f346872d95ecb9c76abf4b205c65c1f8ca7" translate="yes" xml:space="preserve">
          <source>Default option &lt;code&gt;verify_fun&lt;/code&gt; in mode &lt;code&gt;verify_none&lt;/code&gt;:</source>
          <target state="translated">モード &lt;code&gt;verify_none&lt;/code&gt; のデフォルトオプション &lt;code&gt;verify_fun&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="aff9b6a0cc8d187932f4b11c2a77c60d5fec8eeb" translate="yes" xml:space="preserve">
          <source>Default reply data.</source>
          <target state="translated">デフォルトの返信データです。</target>
        </trans-unit>
        <trans-unit id="b63a0128b981003c7392f66006bc8c7ac20272c5" translate="yes" xml:space="preserve">
          <source>Default system error handler.</source>
          <target state="translated">デフォルトのシステムエラーハンドラ。</target>
        </trans-unit>
        <trans-unit id="6345856a0e8a3d956cb3c0995f0d25360c0d6319" translate="yes" xml:space="preserve">
          <source>Default template: &lt;code&gt;[[logger_formatter,header],&quot;\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</source>
          <target state="translated">デフォルトのテンプレート： &lt;code&gt;[[logger_formatter,header],&quot;\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1942e11960cdd6259d20b87d5f9bc7a4248b22d5" translate="yes" xml:space="preserve">
          <source>Default template: &lt;code&gt;[time,&quot; &quot;,level,&quot;: &quot;,msg,&quot;\n&quot;]&lt;/code&gt;</source>
          <target state="translated">デフォルトのテンプレート： &lt;code&gt;[time,&quot; &quot;,level,&quot;: &quot;,msg,&quot;\n&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="664fc60eaa20c7a7e9d4be3ec2ea124a631c3101" translate="yes" xml:space="preserve">
          <source>Default template: &lt;code&gt;[time,&quot; &quot;,level,&quot;:\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</source>
          <target state="translated">デフォルトのテンプレート： &lt;code&gt;[time,&quot; &quot;,level,&quot;:\n&quot;,msg,&quot;\n&quot;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61a2b276c7fde0e02f0fb3993af1f245686b3e4f" translate="yes" xml:space="preserve">
          <source>Default value for the receive buffer option is &lt;code&gt;{recbuf, 8192}&lt;/code&gt;.</source>
          <target state="translated">受信バッファオプションのデフォルト値は &lt;code&gt;{recbuf, 8192}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6f32e1785986f4e170072de77fe30bc73ea07e4e" translate="yes" xml:space="preserve">
          <source>Default value is &lt;code&gt;true&lt;/code&gt; which is compatible with other implementations not supporting ext-info.</source>
          <target state="translated">デフォルト値は &lt;code&gt;true&lt;/code&gt; で、ext-infoをサポートしない他の実装と互換性があります。</target>
        </trans-unit>
        <trans-unit id="825d33c0e6c00fe0704eb917d81ad7fed913518e" translate="yes" xml:space="preserve">
          <source>Default value is defined by &lt;code&gt;gen_udp&lt;/code&gt;.</source>
          <target state="translated">デフォルト値は &lt;code&gt;gen_udp&lt;/code&gt; によって定義されます。</target>
        </trans-unit>
        <trans-unit id="c8765aedbac4aa3ec544b11551b448c12b41e250" translate="yes" xml:space="preserve">
          <source>Default values are used when specifications are missing. The default values are described in &lt;code&gt;&lt;a href=&quot;#Defaults&quot;&gt;Defaults&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定がない場合は、デフォルト値が使用されます。デフォルト値については、 &lt;code&gt;&lt;a href=&quot;#Defaults&quot;&gt;Defaults&lt;/a&gt;&lt;/code&gt; 説明しています。</target>
        </trans-unit>
        <trans-unit id="32a4bde0d9736765660a5f74143c3437da772412" translate="yes" xml:space="preserve">
          <source>Default values can be omitted from the map:</source>
          <target state="translated">デフォルト値をマップから省略することができます。</target>
        </trans-unit>
        <trans-unit id="fc39e685b2778c4e98cf974180c49b56c36d42a5" translate="yes" xml:space="preserve">
          <source>Default values defined in &lt;code&gt;ct_telnet&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ct_telnet&lt;/code&gt; で定義されているデフォルト値：</target>
        </trans-unit>
        <trans-unit id="b7183d64a08aa8ed12db72af8178cbcbead5abc2" translate="yes" xml:space="preserve">
          <source>Default values:</source>
          <target state="translated">デフォルト値。</target>
        </trans-unit>
        <trans-unit id="7f0559e313c328246d0decbb94ea54afe197ded0" translate="yes" xml:space="preserve">
          <source>Default. Means that no other state is active.</source>
          <target state="translated">デフォルト。他の状態がアクティブでないことを意味します。</target>
        </trans-unit>
        <trans-unit id="70adfbfcb94190bf4179c1b1656700b9b3dc5706" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;10&lt;/code&gt;</source>
          <target state="translated">デフォルト： &lt;code&gt;10&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d00f49230f8eb1c5a5adb3964d423b4453b7a085" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;20&lt;/code&gt;</source>
          <target state="translated">デフォルト： &lt;code&gt;20&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c3230c6cb67eb67fb80df55aa548813d92e446d" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;5&lt;/code&gt;</source>
          <target state="translated">デフォルト： &lt;code&gt;5&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0d2ade6dd141a227cc25a3824eb535788748499" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;[name,id,tries,colls,ratio,time,duration]&lt;/code&gt;</source>
          <target state="translated">デフォルト： &lt;code&gt;[name,id,tries,colls,ratio,time,duration]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3da629c4c0d822fd8ecf65c6b3b3727cc9e5c7ea" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;[{tries, 0}, {colls, 0}, {time, 0}]&lt;/code&gt;</source>
          <target state="translated">デフォルト： &lt;code&gt;[{tries, 0}, {colls, 0}, {time, 0}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="614188609a5c964071cad1f8bd6a9a468d7e820f" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">デフォルト： &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8d44b52badae592255cd6418c71a1a5eea3c03a9" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;on&lt;/code&gt;</source>
          <target state="translated">デフォルト： &lt;code&gt;on&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f73ad54e1062b8542a391081f27b1fffcc0b45f6" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;runtime&lt;/code&gt; (&lt;code&gt;reductions&lt;/code&gt; if &lt;code&gt;tracing=off&lt;/code&gt;)</source>
          <target state="translated">デフォルト： &lt;code&gt;runtime&lt;/code&gt; （ &lt;code&gt;tracing=off&lt;/code&gt; の場合は &lt;code&gt;reductions&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2b30d6df2867f1947ef6baaea120ba39f3c9fc74" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;time&lt;/code&gt;</source>
          <target state="translated">デフォルト： &lt;code&gt;time&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4d0b83b26a1706be41ebbd280d1bc7d8f1a895a8" translate="yes" xml:space="preserve">
          <source>Default: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">デフォルト： &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c473c06b282c91c0a27085833e241188b333237" translate="yes" xml:space="preserve">
          <source>Defaults to 1000.</source>
          <target state="translated">デフォルトは1000です。</target>
        </trans-unit>
        <trans-unit id="5ead577e24307a5c99c0f4ecf428d17e8652a018" translate="yes" xml:space="preserve">
          <source>Defaults to 10000.</source>
          <target state="translated">デフォルトは 10000 です。</target>
        </trans-unit>
        <trans-unit id="7f84e3e77aef438713e4f9a144685be7927ee808" translate="yes" xml:space="preserve">
          <source>Defaults to 24 if &lt;code&gt;pixel_height&lt;/code&gt; is not defined.</source>
          <target state="translated">&lt;code&gt;pixel_height&lt;/code&gt; が定義されていない場合、デフォルトは24です。</target>
        </trans-unit>
        <trans-unit id="8bbf4adabf764efed0ba9a7d683910f655b556c3" translate="yes" xml:space="preserve">
          <source>Defaults to 30000 for a connecting transport and 60000 for a listening transport.</source>
          <target state="translated">デフォルトは、接続トランスポートの場合は30000、リスニングトランスポートの場合は60000です。</target>
        </trans-unit>
        <trans-unit id="11e018035b675d6f670c8f153947ef8ac85b7eb7" translate="yes" xml:space="preserve">
          <source>Defaults to 5000.</source>
          <target state="translated">デフォルトは5000です。</target>
        </trans-unit>
        <trans-unit id="4bbad1989c36321a1ecee068995c94a0209bd094" translate="yes" xml:space="preserve">
          <source>Defaults to 80 if &lt;code&gt;pixel_width&lt;/code&gt; is not defined.</source>
          <target state="translated">&lt;code&gt;pixel_width&lt;/code&gt; が定義されていない場合、デフォルトは80です。</target>
        </trans-unit>
        <trans-unit id="f5c4b70cd07c6f3fefad18281c5f031ba151a7d6" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;$ROOT/bin/start.boot&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;$ROOT/bin/start.boot&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c8fe4a5bec5903fc3d46f4989fc56e7929f7b1f3" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;$T&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;$T&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="53178f9f32a4938924c6d5d4ab9abd83467d70a6" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1000&lt;/code&gt; messages.</source>
          <target state="translated">デフォルトは &lt;code&gt;1000&lt;/code&gt; メッセージです。</target>
        </trans-unit>
        <trans-unit id="c5488a8a32c4ac6ccbcf58d027426545f1e03865" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1000&lt;/code&gt; milliseconds.</source>
          <target state="translated">デフォルトは &lt;code&gt;1000&lt;/code&gt; ミリ秒です。</target>
        </trans-unit>
        <trans-unit id="bc6c9c0faafb4bc4adbcca4ac898a06ee21bc36c" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;1048576&lt;/code&gt; bytes for a wrap log, and &lt;code&gt;infinity&lt;/code&gt; for a halt log.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;1048576&lt;/code&gt; バイト、停止ログの場合は &lt;code&gt;infinity&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e0b128b4dbe959f1b84e447f04848fbb51f90d3d" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;10&lt;/code&gt; messages.</source>
          <target state="translated">デフォルトは &lt;code&gt;10&lt;/code&gt; メッセージです。</target>
        </trans-unit>
        <trans-unit id="b2a703753b27a0abf40f8e330a438a4f253fe3b4" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;10&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;10&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d47d43bbd8194f05aa2126c9fdf11bf2b90aa118" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;16777215&lt;/code&gt;, the maximum value of the 24-bit Message Length field in a Diameter Header.</source>
          <target state="translated">デフォルトは &lt;code&gt;16777215&lt;/code&gt; で、Diameterヘッダーの24ビットメッセージ長フィールドの最大値です。</target>
        </trans-unit>
        <trans-unit id="1a6c0cd8935293fffa738c3dfa86f1e14e633bed" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;20000&lt;/code&gt; messages.</source>
          <target state="translated">デフォルトは &lt;code&gt;20000&lt;/code&gt; メッセージです。</target>
        </trans-unit>
        <trans-unit id="2de0a05f7ab44eb3cd29a70953439937d9eef436" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;200&lt;/code&gt; messages.</source>
          <target state="translated">デフォルトは &lt;code&gt;200&lt;/code&gt; メッセージです。</target>
        </trans-unit>
        <trans-unit id="b52f6e63c8d7d612910b88c453e883f91b6e2c7e" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;3000000&lt;/code&gt; bytes.</source>
          <target state="translated">デフォルトは &lt;code&gt;3000000&lt;/code&gt; バイトです。</target>
        </trans-unit>
        <trans-unit id="39c4e7562e40896a6282525b2fe9825858f52bcd" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;5000&lt;/code&gt; milliseconds.</source>
          <target state="translated">デフォルトは &lt;code&gt;5000&lt;/code&gt; ミリ秒です。</target>
        </trans-unit>
        <trans-unit id="38ec9d7c90bd0b8b43c9b1964f5331ccd2daca47" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;500&lt;/code&gt; events.</source>
          <target state="translated">デフォルトは &lt;code&gt;500&lt;/code&gt; イベントです。</target>
        </trans-unit>
        <trans-unit id="84a70ef8900e3c61b55b0755742c9a14cd6b1aaf" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[]&lt;/code&gt; and defines other modules that &lt;code&gt;Mod&lt;/code&gt; is dependent on. In the &lt;code&gt;relup&lt;/code&gt; file, instructions for suspending processes using &lt;code&gt;Mod&lt;/code&gt; come before instructions for suspending processes using modules in &lt;code&gt;DepMods&lt;/code&gt; when upgrading, and conversely when downgrading. In case of circular dependencies, the order of the instructions in the &lt;code&gt;appup&lt;/code&gt; file is kept.</source>
          <target state="translated">デフォルトは &lt;code&gt;[]&lt;/code&gt; で、 &lt;code&gt;Mod&lt;/code&gt; が依存する他のモジュールを定義します。で &lt;code&gt;relup&lt;/code&gt; のファイル、使用停止のプロセスのための説明書 &lt;code&gt;Mod&lt;/code&gt; 内のモジュールを使用してプロセスを停止するための指示の前に来る &lt;code&gt;DepMods&lt;/code&gt; とき、アップグレード、および逆にダウングレードする場合。循環依存の場合、 &lt;code&gt;appup&lt;/code&gt; ファイル内の命令の順序は維持されます。</target>
        </trans-unit>
        <trans-unit id="4cbe92557a6b56a9c2102b63e42df44493fb47be" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2a92a35d8c1a6f0b0941ef0143cd19e8c46e8ed1" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[]&lt;/code&gt;. See &lt;code&gt;ssl:connect/[2,3,4]&lt;/code&gt; for available options.</source>
          <target state="translated">デフォルトは &lt;code&gt;[]&lt;/code&gt; です。使用可能なオプションについては、 &lt;code&gt;ssl:connect/[2,3,4]&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ccd1ad72444be1eb8a1d63fdae5010212ed0d0d8" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;[{okay, 3}, {suspect, 1}]&lt;/code&gt;. Not specifying a key is equivalent to specifying the default value for that key.</source>
          <target state="translated">デフォルトは &lt;code&gt;[{okay, 3}, {suspect, 1}]&lt;/code&gt; です。キーを指定しないことは、そのキーのデフォルト値を指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="30360ea7f303c3cd8c7ce3d6ef99f716a4cadc07" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;all&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;all&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6956921398952b340157481518ec2a6f6b5babc3" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;answer_3xxx&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;answer_3xxx&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="522d41ffd33ecb3637b56d627f0a78545dcaee56" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;brutal_purge&lt;/code&gt;. It controls what action to take with processes executing old code before loading the new module version. If the value is &lt;code&gt;brutal_purge&lt;/code&gt;, the processes are killed. If the value is &lt;code&gt;soft_purge&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;release_handler#install_release-1&quot;&gt;release_handler:install_release/1&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;{error,{old_processes,Mod}}&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;brutal_purge&lt;/code&gt; です。新しいモジュールバージョンをロードする前に、古いコードを実行するプロセスで実行するアクションを制御します。値が &lt;code&gt;brutal_purge&lt;/code&gt; の場合、プロセスは強制終了されます。値が &lt;code&gt;soft_purge&lt;/code&gt; の場合、 &lt;code&gt;&lt;a href=&quot;release_handler#install_release-1&quot;&gt;release_handler:install_release/1&lt;/a&gt;&lt;/code&gt; は &lt;code&gt;{error,{old_processes,Mod}}&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="0a685290bcc48a7e59c7a736b4e662bd2a18eaf0" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;brutal_purge&lt;/code&gt;. It controls what action to take with processes that are executing old code when the new module version has been loaded. If the value is &lt;code&gt;brutal_purge&lt;/code&gt;, the code is purged when the release is made permanent and the processes are killed. If the value is &lt;code&gt;soft_purge&lt;/code&gt;, the release handler purges the old code when no remaining processes execute the code.</source>
          <target state="translated">デフォルトは &lt;code&gt;brutal_purge&lt;/code&gt; です。新しいモジュールバージョンが読み込まれたときに、古いコードを実行しているプロセスで実行するアクションを制御します。値が &lt;code&gt;brutal_purge&lt;/code&gt; の場合、リリースが永続的になり、プロセスが強制終了されると、コードはパージされます。値が &lt;code&gt;soft_purge&lt;/code&gt; の場合、残りのプロセスがコードを実行しないと、リリースハンドラーは古いコードをパージします。</target>
        </trans-unit>
        <trans-unit id="1ce18033e169b0fa040a8fe4b8fb2a3259652384" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;discard&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;discard&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="d172a78785b796eefeba8e42a879c1b464b9ce05" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;dynamic&lt;/code&gt;. It specifies if the code is &quot;dynamic&quot;, that is, if a process using the module spontaneously switches to new code, or if it is &quot;static&quot;. When doing an advanced update and upgrade, the new version of a dynamic module is loaded before the process is asked to change code. When downgrading, the process is asked to change code before loading the new version. For static modules, the new version is loaded before the process is asked to change code, both in the case of upgrading and downgrading. Callback modules are dynamic.</source>
          <target state="translated">デフォルトは &lt;code&gt;dynamic&lt;/code&gt; です。コードが「動的」であるかどうか、つまり、モジュールを使用するプロセスが自発的に新しいコードに切り替わるか、または「静的」であるかを指定します。高度な更新とアップグレードを行う場合、動的モジュールの新しいバージョンは、プロセスがコードを変更するように要求される前にロードされます。ダウングレードする場合、プロセスは新しいバージョンをロードする前にコードを変更するように求められます。静的モジュールの場合、アップグレードとダウングレードの両方で、プロセスがコードを変更するように要求される前に、新しいバージョンがロードされます。コールバックモジュールは動的です。</target>
        </trans-unit>
        <trans-unit id="0831256ce8ef8f30045566bf51dfd4ab6890b884" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;exit&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは &lt;code&gt;exit&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="7fbda095b52b5b96b9b43ccc9c243712ed4abb0f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">デフォルトは &lt;code&gt;false&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="f8652ebd1a1875dc842cac2cb6d36ca46a049174" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="13e845a66ccbf484a674c19236ac835a8dbf0d48" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt;, the kernel does not send packets through any gateway, only sends them to directly connected hosts.</source>
          <target state="translated">デフォルトは &lt;code&gt;false&lt;/code&gt; です。場合は &lt;code&gt;true&lt;/code&gt; 、カーネルは任意のゲートウェイを介してパケットを送信しない、唯一の直接接続されたホストに送信します。</target>
        </trans-unit>
        <trans-unit id="953a4643aa59d388cab6a73448461aed4568ab26" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;false&lt;/code&gt;. If true, the local binding address &lt;code&gt;{IP,Port}&lt;/code&gt; of the socket can be reused immediately. No waiting in state &lt;code&gt;CLOSE_WAIT&lt;/code&gt; is performed (can be required for high-throughput servers).</source>
          <target state="translated">デフォルトは &lt;code&gt;false&lt;/code&gt; です。trueの場合、ソケットのローカルバインディングアドレス &lt;code&gt;{IP,Port}&lt;/code&gt; をすぐに再利用できます。状態 &lt;code&gt;CLOSE_WAIT&lt;/code&gt; での待機は実行されません（高スループットサーバーでは必要になる場合があります）。</target>
        </trans-unit>
        <trans-unit id="51f12c6b9e7f3c496c03d562f8756b10481cbc99" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;full&lt;/code&gt;. If hello is specified the handshake will pause after the hello message and give the user a possibility make decisions based on hello extensions before continuing or aborting the handshake by calling &lt;code&gt;&lt;a href=&quot;#handshake_continue-3&quot;&gt;handshake_continue/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#handshake_cancel-1&quot;&gt;handshake_cancel/1&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">デフォルトは &lt;code&gt;full&lt;/code&gt; です。helloが指定されている場合、ハンドシェイクはhelloメッセージの後に一時停止し、 &lt;code&gt;&lt;a href=&quot;#handshake_continue-3&quot;&gt;handshake_continue/3&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#handshake_cancel-1&quot;&gt;handshake_cancel/1&lt;/a&gt;&lt;/code&gt; を呼び出して、ハンドシェイクを続行または中止する前に、hello拡張に基づいて決定する可能性をユーザーに与えます</target>
        </trans-unit>
        <trans-unit id="3dde1c87b65d849ab2915477ed46c20097e08ca7" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;info&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;info&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="91b5b1db30cf17391f9c5cd9c36ba6d052eed19f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;log&lt;/code&gt;.</source>
          <target state="translated">デフォルト &lt;code&gt;log&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="12f4b8f32191c9efec9785c028c7ded872158457" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;nodes&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;nodes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44ef1bb45491ec49e2b4015ff47beff4ee1c84a9" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;none&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21dc9a6188d73b09b12c39b4abc2ac66a03b8178" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;permanent&lt;/code&gt;</source>
          <target state="translated">デフォルトは &lt;code&gt;permanent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76b542066932542bfc670d29aecd968556be0aa1" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;plain&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;plain&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6370e4b386b614ba3ca8765ee7664772eb41be5e" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;record&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは &lt;code&gt;record&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="37ae4e511bffa217f91b088c6056f729e5169368" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;soft&lt;/code&gt; and defines the type of code change. If it is set to &lt;code&gt;{advanced,Extra}&lt;/code&gt;, implemented processes using &lt;code&gt;gen_server&lt;/code&gt;, &lt;code&gt;gen_fsm&lt;/code&gt;, &lt;code&gt;gen_statem&lt;/code&gt;, or &lt;code&gt;gen_event&lt;/code&gt; transform their internal state by calling the callback function &lt;code&gt;code_change&lt;/code&gt;. Special processes call the callback function &lt;code&gt;system_code_change/4&lt;/code&gt;. In both cases, the term &lt;code&gt;Extra&lt;/code&gt; is passed as an argument to the callback function.</source>
          <target state="translated">デフォルトは &lt;code&gt;soft&lt;/code&gt; で、コード変更のタイプを定義します。それが設定されている場合は &lt;code&gt;{advanced,Extra}&lt;/code&gt; 、使用して実装プロセス &lt;code&gt;gen_server&lt;/code&gt; 、 &lt;code&gt;gen_fsm&lt;/code&gt; 、 &lt;code&gt;gen_statem&lt;/code&gt; 、または &lt;code&gt;gen_event&lt;/code&gt; コールバック関数を呼び出すことによって、その内部状態を変換 &lt;code&gt;code_change&lt;/code&gt; を。特別なプロセスがコールバック関数 &lt;code&gt;system_code_change/4&lt;/code&gt; を呼び出します。どちらの場合でも、 &lt;code&gt;Extra&lt;/code&gt; という用語は引数としてコールバック関数に渡されます。</target>
        </trans-unit>
        <trans-unit id="6ab3749d50e935fc08d94fe0b73cec333149500f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;standard_io&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;standard_io&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bf41c398ba20486556be07ab32b7f1a10f221b9a" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">デフォルトは &lt;code&gt;true&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="7d8e8d434788e741ceea90a49c2191883f6866ab" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6366779b5031d46bbff9126998c0755304c858d9" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;unlimited&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;unlimited&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="61c90f48d9e1f957f14bfc5f2e0ef0326213a09f" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;wrap&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;wrap&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9f554b569e3783882152719d411d4f24f5791213" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{0,32}&lt;/code&gt;.</source>
          <target state="translated">デフォルトは &lt;code&gt;{0,32}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7fb1ef1e580384d5c0064df41fd2d7b87d8c60d0" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{gen_tcp, tcp, tcp_closed, tcp_error}&lt;/code&gt; for TLS and &lt;code&gt;{gen_udp, udp, udp_closed, udp_error}&lt;/code&gt; for DTLS. Can be used to customize the transport layer. For TLS the callback module must implement a reliable transport protocol, behave as &lt;code&gt;gen_tcp&lt;/code&gt;, and have functions corresponding to &lt;code&gt;inet:setopts/2&lt;/code&gt;, &lt;code&gt;inet:getopts/2&lt;/code&gt;, &lt;code&gt;inet:peername/1&lt;/code&gt;, &lt;code&gt;inet:sockname/1&lt;/code&gt;, and &lt;code&gt;inet:port/1&lt;/code&gt;. The callback &lt;code&gt;gen_tcp&lt;/code&gt; is treated specially and calls &lt;code&gt;inet&lt;/code&gt; directly. For DTLS this feature must be considered exprimental.</source>
          <target state="translated">デフォルトでは、TLSの &lt;code&gt;{gen_tcp, tcp, tcp_closed, tcp_error}&lt;/code&gt; &lt;code&gt;{gen_udp, udp, udp_closed, udp_error}&lt;/code&gt; 、DTLSの場合は{gen_udp、udp、udp_closed、udp_error}です。トランスポート層のカスタマイズに使用できます。TLSの場合、コールバックモジュールは、信頼できるトランスポートプロトコルを実装し、 &lt;code&gt;gen_tcp&lt;/code&gt; として動作し、 &lt;code&gt;inet:setopts/2&lt;/code&gt; 、 &lt;code&gt;inet:getopts/2&lt;/code&gt; 、 &lt;code&gt;inet:peername/1&lt;/code&gt; 、 &lt;code&gt;inet:sockname/1&lt;/code&gt; 、および &lt;code&gt;inet:port/1&lt;/code&gt; 対応する機能を備えている必要があります。１。コールバック &lt;code&gt;gen_tcp&lt;/code&gt; は特別に扱われ、 &lt;code&gt;inet&lt;/code&gt; を直接呼び出します。DTLSの場合、この機能は試験的なものと見なす必要があります。</target>
        </trans-unit>
        <trans-unit id="2723d088669af374903ede951d5315f3e4ecad63" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;code&gt;{logger_formatter,DefaultFormatterConfig}&lt;/code&gt;. See the &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt;logger_formatter(3)&lt;/a&gt;&lt;/code&gt; manual page for information about this formatter and its default configuration.</source>
          <target state="translated">デフォルトは &lt;code&gt;{logger_formatter,DefaultFormatterConfig}&lt;/code&gt; です。このフォーマッタとそのデフォルト設定については、 &lt;code&gt;&lt;a href=&quot;logger_formatter&quot;&gt;logger_formatter(3)&lt;/a&gt;&lt;/code&gt; のマニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="4a4877b25aeb0557874f2771ad048204daff2dd2" translate="yes" xml:space="preserve">
          <source>Defaults to &lt;strong&gt;os:getenv(&quot;TERM&quot;)&lt;/strong&gt; or &lt;strong&gt;vt100&lt;/strong&gt; if it is undefined.</source>
          <target state="translated">デフォルトは&lt;strong&gt;os：getenv（ &quot;TERM&quot;）&lt;/strong&gt;または未定義の場合は&lt;strong&gt;vt100&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="5bf4902176ebacf7b6ef04639b3c0bc58a615080" translate="yes" xml:space="preserve">
          <source>Defaults to a single callback returning &lt;code&gt;dpr&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、単一のコールバックが &lt;code&gt;dpr&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f0ac5143a00f5ce7d18a4cc13733dda455bb1a8f" translate="yes" xml:space="preserve">
          <source>Defaults to an empty string, meaning that timestamps are displayed in local time. However, for backwards compatibility, if the SASL configuration parameter &lt;code&gt;utc_log&lt;/code&gt;&lt;code&gt;=true&lt;/code&gt;, the default is changed to &lt;code&gt;&quot;Z&quot;&lt;/code&gt;, meaning that timestamps are displayed in UTC.</source>
          <target state="translated">デフォルトは空の文字列です。つまり、タイムスタンプは現地時間で表示されます。ただし、下位互換性のために、SASL構成パラメーター &lt;code&gt;utc_log&lt;/code&gt; &lt;code&gt;=true&lt;/code&gt; の場合、デフォルトは &lt;code&gt;&quot;Z&quot;&lt;/code&gt; に変更されます。つまり、タイムスタンプはUTCで表示されます。</target>
        </trans-unit>
        <trans-unit id="5f72ec9715cf0c8fe6b53ad5118ecaee6a1444fb" translate="yes" xml:space="preserve">
          <source>Defaults to false. When revocation status can not be determined, and this option is set to true, details of why no CRLs where accepted are included in the return value.</source>
          <target state="translated">既定値は false です。失効ステータスが判断できず、このオプションが true に設定されている場合、CRL が受理されなかった理由の詳細が戻り値に含まれる。</target>
        </trans-unit>
        <trans-unit id="a9c571aa87a4ea8780cc596adc181a13cc52660d" translate="yes" xml:space="preserve">
          <source>Defaults to the empty list.</source>
          <target state="translated">デフォルトは空のリストです。</target>
        </trans-unit>
        <trans-unit id="5c1b598a9dd6b020bfbeff63f48d339b7d94c998" translate="yes" xml:space="preserve">
          <source>Defaults to true. Changing this results in non-standard behaviour, but can be useful in case peers are known to be behave badly.</source>
          <target state="translated">デフォルトは true です。これを変更すると標準外の振る舞いになりますが、ピアが悪い振る舞いをすることが知られている場合に便利です。</target>
        </trans-unit>
        <trans-unit id="0982d7e5e82334b22ff94f51c5370cd83faae268" translate="yes" xml:space="preserve">
          <source>Define a schema</source>
          <target state="translated">スキーマを定義する</target>
        </trans-unit>
        <trans-unit id="882b400816f92577d672d3e508d0aa21feed8f76" translate="yes" xml:space="preserve">
          <source>Define event transforms and trace patterns</source>
          <target state="translated">イベント変換とトレースパターンの定義</target>
        </trans-unit>
        <trans-unit id="4d666916161b40fc59569c57c3349af6fa63e5cc" translate="yes" xml:space="preserve">
          <source>Defined return values (&lt;code&gt;Res&lt;/code&gt;):</source>
          <target state="translated">定義された戻り値（ &lt;code&gt;Res&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="4bffcbb88c92d5f5e8def19813cd6f8415452e0d" translate="yes" xml:space="preserve">
          <source>Defines IN, OUT, and IN OUT Parameter Modes for stored procedures.</source>
          <target state="translated">ストアド・プロシージャの IN、OUT、および IN OUT パラメータ・モードを定義します。</target>
        </trans-unit>
        <trans-unit id="5d39f449b4476d977b2d160efea17cdc9d0fc162" translate="yes" xml:space="preserve">
          <source>Defines Name as the prefix to be added to record and constant names (followed by a &lt;code&gt;'_'&lt;/code&gt; character) in the generated dictionary module and hrl. Can occur at most once. The section has empty content.</source>
          <target state="translated">Nameを、生成されたディクショナリモジュールおよびhrlのレコード名と定数名（ &lt;code&gt;'_'&lt;/code&gt; 文字が後に続く）に追加されるプレフィックスとして定義します。最大で1回発生する可能性があります。セクションの内容が空です。</target>
        </trans-unit>
        <trans-unit id="609bc29f4c403d67eaebd3cb403a0166271c206a" translate="yes" xml:space="preserve">
          <source>Defines a macro &lt;code&gt;Macro&lt;/code&gt; to have the value &lt;code&gt;Value&lt;/code&gt;. &lt;code&gt;Macro&lt;/code&gt; is of type atom, and &lt;code&gt;Value&lt;/code&gt; can be any term. The default &lt;code&gt;Value&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">値 &lt;code&gt;Value&lt;/code&gt; を持つマクロ &lt;code&gt;Macro&lt;/code&gt; を定義します。 &lt;code&gt;Macro&lt;/code&gt; のタイプはアトムで、 &lt;code&gt;Value&lt;/code&gt; は任意の用語にすることができます。デフォルト &lt;code&gt;Value&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3bac3f71adee6ba32f5f8a7e3e619bf2d31d8a7d" translate="yes" xml:space="preserve">
          <source>Defines a macro with the specified value. The value can be any Erlang term. Depending on the platform, the value may need to be quoted if the shell itself interprets certain characters. On Unix, terms containing tuples and lists must be quoted. Terms containing spaces must be quoted on all platforms.</source>
          <target state="translated">指定した値を持つマクロを定義します。値は任意のErlang用語を指定できます。プラットフォームにもよりますが、シェル自身が特定の文字を解釈する場合は値を引用符で囲む必要があります。Unixでは、タプルやリストを含む用語は引用符で囲まなければなりません。スペースを含む用語はすべてのプラットフォームで引用符で囲まれなければなりません。</target>
        </trans-unit>
        <trans-unit id="87b45348a5a65ba584d87598b64a79625d78869a" translate="yes" xml:space="preserve">
          <source>Defines a macro.</source>
          <target state="translated">マクロを定義します。</target>
        </trans-unit>
        <trans-unit id="5067743fbb5608af4e82f23863d916044fcd2d5d" translate="yes" xml:space="preserve">
          <source>Defines a record in the shell. &lt;code&gt;RecordName&lt;/code&gt; is an atom and &lt;code&gt;RecordDefinition&lt;/code&gt; lists the field names and the default values. Usually record definitions are made known to the shell by use of the &lt;code&gt;rr/1,2,3&lt;/code&gt; commands described below, but sometimes it is handy to define records on the fly.</source>
          <target state="translated">シェルでレコードを定義します。 &lt;code&gt;RecordName&lt;/code&gt; はアトムで、 &lt;code&gt;RecordDefinition&lt;/code&gt; はフィールド名とデフォルト値をリストします。通常、レコードの定義は、以下で説明する &lt;code&gt;rr/1,2,3&lt;/code&gt; コマンドを使用してシェルに通知されますが、その場でレコードを定義すると便利な場合があります。</target>
        </trans-unit>
        <trans-unit id="9a226b7a7b33a171b2ec57540c6cfc0682e53d67" translate="yes" xml:space="preserve">
          <source>Defines a set of hosts to be denied access to a given directory, for example:</source>
          <target state="translated">指定されたディレクトリなどへのアクセスを拒否するホストのセットを定義します。</target>
        </trans-unit>
        <trans-unit id="59ff54c12b14765a3537d0b0c2c65171ac69c20e" translate="yes" xml:space="preserve">
          <source>Defines a set of hosts to be granted access to a given directory, for example:</source>
          <target state="translated">与えられたディレクトリへのアクセスを許可するホストのセットを定義します。</target>
        </trans-unit>
        <trans-unit id="1aaa5c87233a02bd21805f36049c813ccf7f2391" translate="yes" xml:space="preserve">
          <source>Defines a subsystem in the daemon.</source>
          <target state="translated">デーモンのサブシステムを定義します。</target>
        </trans-unit>
        <trans-unit id="074ed9c9032b75b4b0e85e61d2ac39b09ac35dbf" translate="yes" xml:space="preserve">
          <source>Defines an error report module, implementing the &lt;code&gt;&lt;a href=&quot;snmpa_error_report&quot;&gt;snmpa_error_report&lt;/a&gt;&lt;/code&gt; behaviour. Two modules are provided with the toolkit: &lt;code&gt;snmpa_error_logger&lt;/code&gt; and &lt;code&gt;snmpa_error_io&lt;/code&gt;.</source>
          <target state="translated">エラーレポートモジュールを定義し、 &lt;code&gt;&lt;a href=&quot;snmpa_error_report&quot;&gt;snmpa_error_report&lt;/a&gt;&lt;/code&gt; 動作を実装します。ツールキットには、 &lt;code&gt;snmpa_error_logger&lt;/code&gt; および &lt;code&gt;snmpa_error_io&lt;/code&gt; の 2つのモジュールが用意されています。</target>
        </trans-unit>
        <trans-unit id="c6b4ecfe0e81da96273a7bb0d22856dbd7f7a054" translate="yes" xml:space="preserve">
          <source>Defines how old the entries in the cache will be allowed to become before they are GC'ed (assuming GC is performed). Each entry in the cache is &quot;touched&quot; whenever it is accessed.</source>
          <target state="translated">GC が実行される前にキャッシュ内のエントリがどのくらい古くなるのを許容するかを定義します(GC が実行されると仮定します)。キャッシュ内の各エントリは、アクセスされるたびに &quot;touch&quot; されます。</target>
        </trans-unit>
        <trans-unit id="8048465e6b8105c68df3237f5826618a0928119c" translate="yes" xml:space="preserve">
          <source>Defines how the client delivers the result of an asynchronous request (&lt;code&gt;sync&lt;/code&gt; has the value &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">クライアントが非同期リクエストの結果を配信する方法を定義します（ &lt;code&gt;sync&lt;/code&gt; の値は &lt;code&gt;false&lt;/code&gt; です）。</target>
        </trans-unit>
        <trans-unit id="325860f7335ea21a55d12345565d8cbbe5c59b03" translate="yes" xml:space="preserve">
          <source>Defines if a &quot;full result&quot; is to be returned to the caller (that is, the body, the headers, and the entire status line) or not (the body and the status code).</source>
          <target state="translated">完全な結果」を呼び出し元に返すか (ボディ、ヘッダ、およびステータス行全体)、返さないか (ボディとステータスコード)を定義します。</target>
        </trans-unit>
        <trans-unit id="b2500a87e36c92d6066a1bdba062a6613b175ba4" translate="yes" xml:space="preserve">
          <source>Defines if access logs are to be written according to the &lt;code&gt;common&lt;/code&gt; log format or the extended common log format. The &lt;code&gt;common&lt;/code&gt; format is one line looking like this: &lt;code&gt;remotehost rfc931 authuser [date] &quot;request&quot; status bytes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;common&lt;/code&gt; ログ形式と拡張共通ログ形式のどちらでアクセスログを書き込むかを定義します。 &lt;code&gt;common&lt;/code&gt; 形式は次のように見て1行です： &lt;code&gt;remotehost rfc931 authuser [date] &quot;request&quot; status bytes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="71a5abb240fe4b4d8e7cf100b1eec791e00989d5" translate="yes" xml:space="preserve">
          <source>Defines if the body is to be delivered as a string or binary. This option is only valid for the synchronous request.</source>
          <target state="translated">ボディを文字列で配信するかバイナリで配信するかを定義します。このオプションは同期リクエストでのみ有効です。</target>
        </trans-unit>
        <trans-unit id="ee2ef90cd00730b5bd40d9417a7056e8275b7c19" translate="yes" xml:space="preserve">
          <source>Defines if the headers provided by the user are to be made lower case or to be regarded as case sensitive.</source>
          <target state="translated">ユーザが提供するヘッダを小文字にするか、大文字小文字を区別するかを定義します。</target>
        </trans-unit>
        <trans-unit id="6766740e1750090ffa239838dcb00c9a031e0757" translate="yes" xml:space="preserve">
          <source>Defines if the mib server shall perform cache gc automatically or leave it to the user (see &lt;code&gt;&lt;a href=&quot;snmpa#gc_mibs_cache&quot;&gt;gc_mibs_cache/0,1,2,3&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">mibサーバーがキャッシュgcを自動的に実行するか、ユーザーに任せるかを定義します（ &lt;code&gt;&lt;a href=&quot;snmpa#gc_mibs_cache&quot;&gt;gc_mibs_cache/0,1,2,3&lt;/a&gt;&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="af70eeb1554459fba2775708e0df2d3c1b28492b" translate="yes" xml:space="preserve">
          <source>Defines if the node is to be restarted (&lt;code&gt;init:restart()&lt;/code&gt;) or rebooted (&lt;code&gt;init:reboot()&lt;/code&gt;) if there is an error during the installation. Default is &lt;code&gt;restart&lt;/code&gt;.</source>
          <target state="translated">インストール中にエラーが発生した場合、ノードを再起動するか（ &lt;code&gt;init:restart()&lt;/code&gt; ）、再起動するか（ &lt;code&gt;init:reboot()&lt;/code&gt; ）を定義します。デフォルトは &lt;code&gt;restart&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="280e3e6348482ff07568b5ca3c33d57dc63eeb97" translate="yes" xml:space="preserve">
          <source>Defines mnesia_frag_hash callback behavior</source>
          <target state="translated">mnesia_frag_hash コールバックの動作を定義します。</target>
        </trans-unit>
        <trans-unit id="0a24f69fae69d369096b47e94b88ca5713eb2906" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent local database.</source>
          <target state="translated">SNMPエージェントのローカルデータベースに固有のオプションを定義します。</target>
        </trans-unit>
        <trans-unit id="448e51bc79def417e8e31e1bb15194cd78eb1614" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent mib server cache.</source>
          <target state="translated">SNMPエージェントmibサーバキャッシュに固有のオプションを定義します。</target>
        </trans-unit>
        <trans-unit id="9a3e410d52d2f46576687ddea235ff538ee44a63" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent mib server.</source>
          <target state="translated">SNMPエージェントmibサーバに固有のオプションを定義します。</target>
        </trans-unit>
        <trans-unit id="4c3978c256e0b33ce03888b7171e8a1bbb4a9300" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent network interface entity.</source>
          <target state="translated">SNMPエージェント・ネットワーク・インターフェース・エンティティに固有のオプションを定義します。</target>
        </trans-unit>
        <trans-unit id="c13862dc02952f1cb8a5acf655e61278d4c4d6f0" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent symbolic store.</source>
          <target state="translated">SNMPエージェントシンボリックストアに固有のオプションを定義します。</target>
        </trans-unit>
        <trans-unit id="7c2fd7fdb90197f87c9cc1fb0ec6b3858f3ed452" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP agent target cache.</source>
          <target state="translated">SNMPエージェントのターゲットキャッシュに固有のオプションを定義します。</target>
        </trans-unit>
        <trans-unit id="14ac5b70bd36656ab02243121fbe4f2970c88813" translate="yes" xml:space="preserve">
          <source>Defines options specific for the SNMP manager network interface entity.</source>
          <target state="translated">SNMPマネージャのネットワークインターフェースエンティティに固有のオプションを定義します。</target>
        </trans-unit>
        <trans-unit id="2ccf672aecad512841e5a57a27a445c20cfeef4e" translate="yes" xml:space="preserve">
          <source>Defines specific config related options for the SNMP agent.</source>
          <target state="translated">SNMPエージェントの特定の設定関連オプションを定義します。</target>
        </trans-unit>
        <trans-unit id="aa7e46ce4026b52c7aac7efcdf2cbb26cf6993c0" translate="yes" xml:space="preserve">
          <source>Defines specific config related options for the SNMP manager.</source>
          <target state="translated">SNMPマネージャの特定の設定関連オプションを定義します。</target>
        </trans-unit>
        <trans-unit id="8f84dd3a08af774339e18ca1f21b53eb0e7c6242" translate="yes" xml:space="preserve">
          <source>Defines test case groups. For details, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">テストケースグループを定義します。詳細については、ユーザーガイドの「 &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="485d2ed24e2a155e448ab4d850db85d797d4fb60" translate="yes" xml:space="preserve">
          <source>Defines the &lt;code&gt;StopAction&lt;/code&gt;, the command given to the Erlang shell when the service is stopped. Default is none.</source>
          <target state="translated">サービスが停止したときにErlangシェルに与えられるコマンドである &lt;code&gt;StopAction&lt;/code&gt; を定義します。デフォルトはなしです。</target>
        </trans-unit>
        <trans-unit id="d7960cdd45e01d2dab8818d58ee4d9fe2fd5b051" translate="yes" xml:space="preserve">
          <source>Defines the API for the TLS session cache so that the data storage scheme can be replaced by defining a new callback module implementing this API.</source>
          <target state="translated">TLS セッションキャッシュの API を定義し、この API を実装した新しいコールバックモジュールを定義することでデータ保存方式を置き換えることができるようにします。</target>
        </trans-unit>
        <trans-unit id="104598b87946384fe60c79195fbf234f082e25d4" translate="yes" xml:space="preserve">
          <source>Defines the Erlang priority for all SNMP processes.</source>
          <target state="translated">すべてのSNMPプロセスのErlang優先度を定義します。</target>
        </trans-unit>
        <trans-unit id="8f0d40e70791382078ed18bc5d93727975b29f06" translate="yes" xml:space="preserve">
          <source>Defines the backend data module of the SNMP agent mib-server as defined by the &lt;code&gt;&lt;a href=&quot;snmpa_mib_data&quot;&gt;snmpa_mib_data&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;snmpa_mib_data&quot;&gt;snmpa_mib_data&lt;/a&gt;&lt;/code&gt; 動作で定義されているように、SNMPエージェントmib-serverのバックエンドデータモジュールを定義します。</target>
        </trans-unit>
        <trans-unit id="f20654fac01a093493a55b44820caee23d32ca77" translate="yes" xml:space="preserve">
          <source>Defines the contents of the AVPs of the application having type Grouped. The section content consists of definitions of the form specified in section 4.4 of RFC 6733, &quot;Grouped AVP Values&quot;.</source>
          <target state="translated">Grouped 型を持つアプリケーションの AVP の内容を定義する。セクションの内容は、RFC 6733 の 4.4 節「Grouped AVP 値」で規定された形式の定義からなる。</target>
        </trans-unit>
        <trans-unit id="9c5293b3b68519245baa953556f9af9803aee324" translate="yes" xml:space="preserve">
          <source>Defines the directory where the error log files are located. Default is the directory specified by application environment variable &lt;code&gt;error_logger_mf_dir&lt;/code&gt;, see &lt;code&gt;sasl(6)&lt;/code&gt;.</source>
          <target state="translated">エラーログファイルがあるディレクトリを定義します。デフォルトは、アプリケーション環境変数 &lt;code&gt;error_logger_mf_dir&lt;/code&gt; で指定されたディレクトリです &lt;code&gt;sasl(6)&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="57e9a96f66a3597508e408cc9b1db67da3b5a149" translate="yes" xml:space="preserve">
          <source>Defines the email-address of the server administrator to be included in any error messages returned by the server.</source>
          <target state="translated">サーバーから返されるエラーメッセージに含まれるサーバー管理者のメールアドレスを定義します。</target>
        </trans-unit>
        <trans-unit id="1971dd05fb820ceb119f867d7bba2219ab320c0c" translate="yes" xml:space="preserve">
          <source>Defines the file format of the log files. See &lt;code&gt;disk_log&lt;/code&gt; for details. If the internal file format is used, the log file is repaired after a crash. When a log file is repaired, data can disappear. When the external file format is used, &lt;code&gt;httpd&lt;/code&gt; does not start if the log file is broken. Default is &lt;code&gt;external&lt;/code&gt;.</source>
          <target state="translated">ログファイルのファイル形式を定義します。詳細については、 &lt;code&gt;disk_log&lt;/code&gt; を参照してください。内部ファイル形式が使用されている場合、ログファイルはクラッシュ後に修復されます。ログファイルが修復されると、データが消えることがあります。外部ファイル形式が使用されている場合、ログファイルが壊れていると、 &lt;code&gt;httpd&lt;/code&gt; は起動しません。デフォルトは &lt;code&gt;external&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0af5f2ebae883739d70328318a316e60a38383d2" translate="yes" xml:space="preserve">
          <source>Defines the filename of the (&lt;code&gt;disk_log(3)&lt;/code&gt;) access log file logging incoming requests. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">（ &lt;code&gt;disk_log(3)&lt;/code&gt; ）のアクセスログファイルのファイル名を定義し、着信リクエストを記録します。ファイル名がスラッシュ（/）で始まっていない場合は、 &lt;code&gt;server_root&lt;/code&gt; からの相対パスと見なされます。</target>
        </trans-unit>
        <trans-unit id="d526e5aeea7dd1b9e33230d2275f05f27246ebdc" translate="yes" xml:space="preserve">
          <source>Defines the filename of the (&lt;code&gt;disk_log(3)&lt;/code&gt;) access log file logging incoming security events, that is, authenticated requests. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">（ &lt;code&gt;disk_log(3)&lt;/code&gt; ）アクセスログファイルのファイル名を定義し、着信セキュリティイベント、つまり認証されたリクエストをログに記録します。ファイル名がスラッシュ（/）で始まっていない場合は、 &lt;code&gt;server_root&lt;/code&gt; からの相対パスと見なされます。</target>
        </trans-unit>
        <trans-unit id="86d70bbcc0a147ca704973c5dc64036c808d341b" translate="yes" xml:space="preserve">
          <source>Defines the filename of the (&lt;code&gt;disk_log(3)&lt;/code&gt;) error log file to be used to log server errors. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">サーバーエラーのログに使用する（ &lt;code&gt;disk_log(3)&lt;/code&gt; ）エラーログファイルのファイル名を定義します。ファイル名がスラッシュ（/）で始まっていない場合は、 &lt;code&gt;server_root&lt;/code&gt; からの相対パスと見なされます。</target>
        </trans-unit>
        <trans-unit id="55f4b8f35c452cba8012ebe699f5425c2a16a4f3" translate="yes" xml:space="preserve">
          <source>Defines the filename of the access log file to be used to log incoming requests. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">着信要求のログに使用するアクセスログファイルのファイル名を定義します。ファイル名がスラッシュ（/）で始まっていない場合は、 &lt;code&gt;server_root&lt;/code&gt; からの相対パスと見なされます。</target>
        </trans-unit>
        <trans-unit id="959470a7f81f8e8fc99dcd53c272fad9068d2081" translate="yes" xml:space="preserve">
          <source>Defines the filename of the access log file to be used to log security events. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">セキュリティイベントのログに使用するアクセスログファイルのファイル名を定義します。ファイル名がスラッシュ（/）で始まっていない場合は、 &lt;code&gt;server_root&lt;/code&gt; からの相対パスと見なされます。</target>
        </trans-unit>
        <trans-unit id="6cf62a9b1727457d61e84c994aea05b03a058888" translate="yes" xml:space="preserve">
          <source>Defines the filename of the error log file to be used to log server errors. If the filename does not begin with a slash (/), it is assumed to be relative to the &lt;code&gt;server_root&lt;/code&gt;.</source>
          <target state="translated">サーバーエラーの記録に使用されるエラーログファイルのファイル名を定義します。ファイル名がスラッシュ（/）で始まっていない場合は、 &lt;code&gt;server_root&lt;/code&gt; からの相対パスと見なされます。</target>
        </trans-unit>
        <trans-unit id="ef21ceaaccc3147ba6258bf28c3cde06871c6a53" translate="yes" xml:space="preserve">
          <source>Defines the groups the server may choose among when diffie-hellman-group-exchange is negotiated. See &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; for details. The three variants of this option are:</source>
          <target state="translated">diffie-hellman-group-exchangeがネゴシエートされるときにサーバーが選択するグループを定義します。詳細については、 &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; を参照してください。このオプションの3つのバリエーションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ab4548577e3f634d029a94551c958280d1aef8c0" translate="yes" xml:space="preserve">
          <source>Defines the home directory of the server, where log files, and so on, can be stored. Relative paths specified in other properties refer to this directory.</source>
          <target state="translated">ログファイルなどを格納するサーバのホームディレクトリを定義します。他のプロパティで指定された相対パスは、このディレクトリを参照します。</target>
        </trans-unit>
        <trans-unit id="0a7f2deb640efc11655ad58c1e08a8d07db2a0a7" translate="yes" xml:space="preserve">
          <source>Defines the integer Number as the Diameter Application Id of the application in question. Can occur at most once and is required if the dictionary defines &lt;code&gt;@messages&lt;/code&gt;. The section has empty content.</source>
          <target state="translated">問題のアプリケーションのDiameterアプリケーションIDとして整数値を定義します。最大1回発生する可能性があり、ディクショナリが &lt;code&gt;@messages&lt;/code&gt; を定義している場合は必須です。セクションの内容が空です。</target>
        </trans-unit>
        <trans-unit id="cba064339a08067bd7b4f8344d541dba8844bc39" translate="yes" xml:space="preserve">
          <source>Defines the integer Number as the Vendor-Id of the AVPs listed in the section content, overriding the &lt;code&gt;@vendor&lt;/code&gt; default. The section content consists of AVP names.</source>
          <target state="translated">セクションのコンテンツにリストされているAVPのベンダーIDとして整数番号を定義し、 &lt;code&gt;@vendor&lt;/code&gt; デフォルトを上書きします。セクションのコンテンツは、AVP名で構成されています。</target>
        </trans-unit>
        <trans-unit id="97e9a050435e4cb94bd1bfaf574e64f41d29828a" translate="yes" xml:space="preserve">
          <source>Defines the integer Number as the the default Vendor-Id of AVPs for which the V flag is set. Name documents the owner of the application but is otherwise unused. Can occur at most once and is required if an AVP sets the V flag and is not otherwise assigned a Vendor-Id. The section has empty content.</source>
          <target state="translated">V フラグが設定されている AVP のデフォルトの Vendor-Id として整数の Number を定義します。Name はアプリケーションの所有者を文書化しますが、それ以外の場合は使用されません。AVP が V フラグを設定し、Vendor-Id が割り当てられていない場合に必要です。このセクションは空欄です。</target>
        </trans-unit>
        <trans-unit id="36635f36f495b397ab94de01559c1253375a6250" translate="yes" xml:space="preserve">
          <source>Defines the look of the value of the server header.</source>
          <target state="translated">サーバヘッダの値の外観を定義します。</target>
        </trans-unit>
        <trans-unit id="4a4cc0d55d17b53fdd8841ae9e10cabb12e632c0" translate="yes" xml:space="preserve">
          <source>Defines the maximum number of varbinds allowed in a Get-BULK response.</source>
          <target state="translated">Get-BULK レスポンスで許可される varbinds の最大数を定義します。</target>
        </trans-unit>
        <trans-unit id="fea976ab8e649b0432e4d40f897c877b5a06f322" translate="yes" xml:space="preserve">
          <source>Defines the messages of the application. The section content consists of definitions of the form specified in section 3.2 of RFC 6733, &quot;Command Code Format Specification&quot;.</source>
          <target state="translated">アプリケーションのメッセージを定義する。セクションの内容は、RFC 6733「コマンドコードフォーマット仕様」の 3.2 節で規定されている形式の定義からなる。</target>
        </trans-unit>
        <trans-unit id="2f4213047735b7141ee1fb4cc97bef31b0c6a085" translate="yes" xml:space="preserve">
          <source>Defines the mib storage module of the SNMP agent as defined by the &lt;code&gt;&lt;a href=&quot;snmpa_mib_storage&quot;&gt;snmpa_mib_storage&lt;/a&gt;&lt;/code&gt; behaviour.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;snmpa_mib_storage&quot;&gt;snmpa_mib_storage&lt;/a&gt;&lt;/code&gt; 動作で定義されているように、SNMPエージェントのmibストレージモジュールを定義します。</target>
        </trans-unit>
        <trans-unit id="c3903fd03c41c6d69e0d18f172887c0b2fa22a5f" translate="yes" xml:space="preserve">
          <source>Defines the name of a dictionary module containing AVP definitions that should be imported into the current dictionary. The section content consists of the names of those AVPs whose definitions should be imported from the dictionary, an empty list causing all to be imported. Any listed AVPs must not be defined in the current dictionary and it is an error to inherit the same AVP from more than one dictionary.</source>
          <target state="translated">現在の辞書にインポートされるべき AVP 定義を含む辞書モジュールの名前を定義します。セクションの内容は、定義が辞書からインポートされるべき AVP の名前で構成され、空のリストはすべてがインポートされます。リストされたAVPは現在の辞書で定義されていなくてはならず、複数の辞書から同じAVPを継承するのはエラーです。</target>
        </trans-unit>
        <trans-unit id="3f4467cb29ca7960e7e163c5021247118933225f" translate="yes" xml:space="preserve">
          <source>Defines the name of the generated dictionary module. Can occur at most once and defaults to the name of the dictionary file minus any extension. The section has empty content.</source>
          <target state="translated">生成される辞書モジュールの名前を定義します。辞書ファイルの名前から拡張子を差し引いたものがデフォルトとなります。セクションの内容は空です。</target>
        </trans-unit>
        <trans-unit id="e2fdd5a12c59d8afe49345bf972c80a83a8bc45b" translate="yes" xml:space="preserve">
          <source>Defines the name, code, type and flags of individual AVPs. The section consists of definitions of the form</source>
          <target state="translated">個々のAVPの名称、コード、種類、フラグを定義します。形式の定義で構成されています。</target>
        </trans-unit>
        <trans-unit id="ab5cdae0cb5c3dabdd06a687f16e3f89a532b66f" translate="yes" xml:space="preserve">
          <source>Defines the read-eval-print loop used in a daemon when a shell is requested by the client. The default is to use the Erlang shell: &lt;code&gt;{shell, start, []}&lt;/code&gt;</source>
          <target state="translated">クライアントがシェルを要求したときにデーモンで使用されるread-eval-printループを定義します。デフォルトでは、Erlangシェルを使用します： &lt;code&gt;{shell, start, []}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cf4efecb956b1360f45ade9fb0fc9274b8cb5370" translate="yes" xml:space="preserve">
          <source>Defines the repair option for the persistent database (if and how the table is repaired when opened).</source>
          <target state="translated">永続データベースの修復オプションを定義します (テーブルを開いたときにテーブルが修復されるかどうか、またどのように修復されるか)。</target>
        </trans-unit>
        <trans-unit id="87d444381fbb569ddfcc73fb8ed2f3bb3f13be7a" translate="yes" xml:space="preserve">
          <source>Defines the system name.</source>
          <target state="translated">システム名を定義します。</target>
        </trans-unit>
        <trans-unit id="21694ea9ad4a13cb778434d22cbe1ad230770b82" translate="yes" xml:space="preserve">
          <source>Defines the system version.</source>
          <target state="translated">システムのバージョンを定義します。</target>
        </trans-unit>
        <trans-unit id="a7de61fb83cf32538184916c9eaa313b33cb0f63" translate="yes" xml:space="preserve">
          <source>Defines the time-out for all calls to &lt;code&gt;sys:change_code&lt;/code&gt;. If no value is specified or &lt;code&gt;default&lt;/code&gt; is specified, the default value defined in &lt;code&gt;sys&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;sys:change_code&lt;/code&gt; へのすべての呼び出しのタイムアウトを定義します。値が指定されていないか、 &lt;code&gt;default&lt;/code&gt; が指定されている場合、 &lt;code&gt;sys&lt;/code&gt; で定義されているデフォルト値が使用されます。</target>
        </trans-unit>
        <trans-unit id="d5bb4f3815504953241eadc8eb3b0acdc9b38fad" translate="yes" xml:space="preserve">
          <source>Defines the time-out for all calls to &lt;code&gt;sys:suspend&lt;/code&gt;. If no value is specified, the values defined by the &lt;code&gt;Timeout&lt;/code&gt; parameter of the &lt;code&gt;upgrade&lt;/code&gt; or &lt;code&gt;suspend&lt;/code&gt; instructions are used. If &lt;code&gt;default&lt;/code&gt; is specified, the default value defined in &lt;code&gt;sys&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;sys:suspend&lt;/code&gt; へのすべての呼び出しのタイムアウトを定義します。値が指定されていない場合は、 &lt;code&gt;upgrade&lt;/code&gt; または &lt;code&gt;suspend&lt;/code&gt; 指示の &lt;code&gt;Timeout&lt;/code&gt; パラメータで定義された値が使用されます。場合は &lt;code&gt;default&lt;/code&gt; 指定されている、で定義されたデフォルト値 &lt;code&gt;sys&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="3662633757f8ed2e24fca068aa6e42751f922afc" translate="yes" xml:space="preserve">
          <source>Defines the time-out when suspending processes. If no value or &lt;code&gt;default&lt;/code&gt; is specified, the default value for &lt;code&gt;sys:suspend&lt;/code&gt; is used.</source>
          <target state="translated">プロセスを一時停止するときのタイムアウトを定義します。値または &lt;code&gt;default&lt;/code&gt; が指定されていない場合、 &lt;code&gt;sys:suspend&lt;/code&gt; のデフォルト値が使用されます。</target>
        </trans-unit>
        <trans-unit id="0afeec46159c21d9d1f3d16e08bb62a44c8ff02a" translate="yes" xml:space="preserve">
          <source>Defines the top directory for the documents that are available on the HTTP server.</source>
          <target state="translated">HTTP サーバで利用可能なドキュメントのトップディレクトリを定義します。</target>
        </trans-unit>
        <trans-unit id="c7b451ec2118fb4f5138f4688f3823998c040b27" translate="yes" xml:space="preserve">
          <source>Defines the type of packets to use for a socket. Possible values:</source>
          <target state="translated">ソケットで使用するパケットの種類を定義します。指定可能な値。</target>
        </trans-unit>
        <trans-unit id="4ec3fffa7b0947c4ef27ec8336dce45a785d4d18" translate="yes" xml:space="preserve">
          <source>Defines users to grant access to a given directory using a secret password.</source>
          <target state="translated">秘密のパスワードを使用して、指定されたディレクトリへのアクセスを許可するユーザーを定義します。</target>
        </trans-unit>
        <trans-unit id="2de485f70c3131c57b114f992349842acaf84733" translate="yes" xml:space="preserve">
          <source>Defines values of AVP Name having type Enumerated. Section content consists of names and corresponding integer values. Integer values can be prefixed with 0x to be interpreted as hexadecimal.</source>
          <target state="translated">Enumerated 型を持つ AVP Name の値を定義します。セクションの内容は、名前とそれに対応する整数値で構成されます。整数値の前には 0x を付けて 16 進数として解釈することができます。</target>
        </trans-unit>
        <trans-unit id="1c20651b75ec09f9f46020166ca4d95a65ce0b7d" translate="yes" xml:space="preserve">
          <source>Defines what to do if the agent is unable to open an existing database file. &lt;code&gt;terminate&lt;/code&gt; means that the agent/manager will terminate, &lt;code&gt;create&lt;/code&gt; means that the agent/manager will remove the faulty file(s) and create new ones, and &lt;code&gt;create_db_and_dir&lt;/code&gt; means that the agent/manager will create the database file along with any missing parent directories for the database file.</source>
          <target state="translated">エージェントが既存のデータベースファイルを開くことができない場合の処理​​を定義します。 &lt;code&gt;terminate&lt;/code&gt; は、agent / managerが終了 &lt;code&gt;create&lt;/code&gt; ことを意味し、createは、agent / managerが障害のあるファイルを削除して新しいファイルを作成することを意味し、 &lt;code&gt;create_db_and_dir&lt;/code&gt; は、agent / managerが、欠落している親ディレクトリとともにデータベースファイルを作成することを意味しますデータベースファイル。</target>
        </trans-unit>
        <trans-unit id="204105b23aab7c26919ca77988f289f12f1f0f7f" translate="yes" xml:space="preserve">
          <source>Defines when parsing the Host-Port part of an URI with an IPv6 address with brackets, if those brackets are to be retained (&lt;code&gt;true&lt;/code&gt;) or stripped (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">ブラケットを保持する（ &lt;code&gt;true&lt;/code&gt; ）か削除する（ &lt;code&gt;false&lt;/code&gt; ）かを、ブラケットのIPv6アドレスを使用してURIのHost-Port部分を解析するときに定義します。</target>
        </trans-unit>
        <trans-unit id="3528e0db282039856a935ef9dd79f095c319462c" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP agent configuration files are stored.</source>
          <target state="translated">SNMPエージェントの設定ファイルが保存されている場所を定義します。</target>
        </trans-unit>
        <trans-unit id="babf4b2c7dfdcfc9d7a2ec2be86154c0beabe2f5" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP agent internal db files are stored.</source>
          <target state="translated">SNMP エージェントの内部 db ファイルの格納場所を定義します。</target>
        </trans-unit>
        <trans-unit id="6e7f23de7214a3b9a761f109739d9039604db564" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP manager configuration files are stored.</source>
          <target state="translated">SNMPマネージャの設定ファイルの保存場所を定義します。</target>
        </trans-unit>
        <trans-unit id="a7c977cad0696041fcf115ef67b9590b5760e203" translate="yes" xml:space="preserve">
          <source>Defines where the SNMP manager store persistent data.</source>
          <target state="translated">SNMP マネージャが永続的なデータを保存する場所を定義します。</target>
        </trans-unit>
        <trans-unit id="412835e3971c845df969501453eca0dc4b7abaf7" translate="yes" xml:space="preserve">
          <source>Defines which modules the HTTP server uses when handling requests. Default is &lt;code&gt;[mod_alias, mod_auth, mod_esi, mod_actions, mod_cgi, mod_dir, mod_get, mod_head, mod_log, mod_disk_log]&lt;/code&gt;. Notice that some &lt;code&gt;mod&lt;/code&gt;-modules are dependent on others, so the order cannot be entirely arbitrary. See the &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets Web Server Modules&lt;/a&gt;&lt;/code&gt; in the User's Guide for details.</source>
          <target state="translated">リクエストを処理するときにHTTPサーバーが使用するモジュールを定義します。デフォルトは &lt;code&gt;[mod_alias, mod_auth, mod_esi, mod_actions, mod_cgi, mod_dir, mod_get, mod_head, mod_log, mod_disk_log]&lt;/code&gt; です。一部の &lt;code&gt;mod&lt;/code&gt; モジュールは他のモジュールに依存しているため、順序を完全に任意にすることはできません。詳細については、ユーザーガイドの &lt;code&gt;&lt;a href=&quot;http_server&quot;&gt;Inets Web Server Modules&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="51e2b84c9abac1754fd9eeab16ec551704b4d555" translate="yes" xml:space="preserve">
          <source>Defining &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; in ordinary application code is highly discouraged. It is very easy to make subtle errors that can take a long time to debug. Furthermore, none of the tools for static code analysis (such as Dialyzer and Xref) supports the use of &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; and no such support will be added. Only use this function after having carefully considered other, less dangerous, solutions. One example of potential legitimate use is creating stubs for other sub-systems during testing and debugging.</source>
          <target state="translated">通常のアプリケーションコードで &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; を定義することはお勧めしません。デバッグに長い時間がかかる可能性がある微妙なエラーが発生するのは非常に簡単です。さらに、静的コード分析用のツール（DialyzerやXrefなど）は &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; 使用をサポートしておらず、そのようなサポートは追加されません。この機能を使用するのは、他の危険性の低いソリューションを慎重に検討した後だけです。正当な使用の可能性の1つの例は、テストおよびデバッグ中に他のサブシステムのスタブを作成することです。</target>
        </trans-unit>
        <trans-unit id="813c4d729e19c49eeb758babcca712816ef2f3ee" translate="yes" xml:space="preserve">
          <source>Defining New AVP Values</source>
          <target state="translated">新しい AVP 値の定義</target>
        </trans-unit>
        <trans-unit id="f824f9b573c83ee1f4d1d9346a7810069bada7e4" translate="yes" xml:space="preserve">
          <source>Definition of &lt;code&gt;c_test:c_break/1&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;c_test:c_break/1&lt;/code&gt; の定義：</target>
        </trans-unit>
        <trans-unit id="225dfed12a3d48b5b84cb4cd17b1a4ebe8d5181b" translate="yes" xml:space="preserve">
          <source>Deinstalls a fallback before it has been used to restore the database. This is normally a distributed operation that is either performed on all nodes with disc resident schema, or none. Uninstallation of fallbacks requires Erlang to be operational on all involved nodes, but it does not matter if Mnesia is running or not. Which nodes that are considered as disc-resident nodes is determined from the schema information in the local fallback.</source>
          <target state="translated">データベースのリストアに使用される前にフォールバックをアンインストールします。これは通常、ディスクに常駐するスキーマを持つすべてのノードで実行されるか、実行されないかの分散操作です。フォールバックをアンインストールするにはErlangが関係するすべてのノードで動作している必要がありますが、Mnesiaが動作しているかどうかは関係ありません。どのノードがディスク常駐ノードとみなされるかはローカルフォールバックのスキーマ情報から決定されます。</target>
        </trans-unit>
        <trans-unit id="651f4ae5c5eda1c4902afa9952836e101d3e101b" translate="yes" xml:space="preserve">
          <source>Delay, in milliseconds, for SAC messages (if the delay is enabled, see &lt;code&gt;flags&lt;/code&gt; below)</source>
          <target state="translated">SACメッセージのミリ秒単位の遅延（遅延が有効になっている場合は、以下の &lt;code&gt;flags&lt;/code&gt; 参照してください）</target>
        </trans-unit>
        <trans-unit id="f6fdbe48dc54dd86f63097a03bd24094dedd713a" translate="yes" xml:space="preserve">
          <source>Delete</source>
          <target state="translated">Delete</target>
        </trans-unit>
        <trans-unit id="38eb25f63edd286fdb6d4a036285c876a5d036ca" translate="yes" xml:space="preserve">
          <source>Delete CRLs from the ssl applications local cache.</source>
          <target state="translated">ssl アプリケーションのローカルキャッシュから CRL を削除します。</target>
        </trans-unit>
        <trans-unit id="a05bbe6bb69db0f46e301947b5f581ae37d781d0" translate="yes" xml:space="preserve">
          <source>Delete a USM security data (user) from the agent config.</source>
          <target state="translated">エージェントコンフィグからUSMセキュリティデータ(ユーザー)を削除します。</target>
        </trans-unit>
        <trans-unit id="73abef6c216f94bdf061581022474f37e17f9504" translate="yes" xml:space="preserve">
          <source>Delete a access definition from the agent config.</source>
          <target state="translated">エージェント構成からアクセス定義を削除します。</target>
        </trans-unit>
        <trans-unit id="8e4bb0cf1820c3baad149df8f499db102dec9714" translate="yes" xml:space="preserve">
          <source>Delete a community from the agent config.</source>
          <target state="translated">エージェント設定からコミュニティを削除します。</target>
        </trans-unit>
        <trans-unit id="10381313ea94a7532403bfbf8fb99509a82a5ceb" translate="yes" xml:space="preserve">
          <source>Delete a context from the agent config.</source>
          <target state="translated">エージェント構成からコンテキストを削除します。</target>
        </trans-unit>
        <trans-unit id="62b90f629164fa6eb6a79befd35ee417af11099b" translate="yes" xml:space="preserve">
          <source>Delete a dictionary entry and send a {et, {dict_delete, Key}} tuple to all registered subscribers.</source>
          <target state="translated">辞書エントリを削除し、登録されているすべての加入者に {et,{dict_delete,Key}}タプルを送信します。</target>
        </trans-unit>
        <trans-unit id="0d14d2456d7199ee875343d85fd00c85d394b021" translate="yes" xml:space="preserve">
          <source>Delete a notify definition from the agent config.</source>
          <target state="translated">エージェント設定から通知定義を削除します。</target>
        </trans-unit>
        <trans-unit id="232e1d1adb53073ecdabb53e88a17abefbe0b5ae" translate="yes" xml:space="preserve">
          <source>Delete a record from the mib-storage table.</source>
          <target state="translated">mib-storage テーブルからレコードを削除します。</target>
        </trans-unit>
        <trans-unit id="b55705a3a80888a5727b8edf5c4fd37429974835" translate="yes" xml:space="preserve">
          <source>Delete a security to group definition from the agent config.</source>
          <target state="translated">エージェント構成からセキュリティからグループへの定義を削除します。</target>
        </trans-unit>
        <trans-unit id="5b2d3d65375e235f63c119c2dd9900a6b70fbd25" translate="yes" xml:space="preserve">
          <source>Delete a target address definition from the agent config.</source>
          <target state="translated">エージェント構成からターゲットアドレスの定義を削除します。</target>
        </trans-unit>
        <trans-unit id="83a8b31c49915f73d37cc6ae8baa11bb303104da" translate="yes" xml:space="preserve">
          <source>Delete a target parameter definition from the agent config.</source>
          <target state="translated">エージェント構成からターゲットパラメータ定義を削除します。</target>
        </trans-unit>
        <trans-unit id="acabde9af1d652c09a474168447d0b3aa09ef7ac" translate="yes" xml:space="preserve">
          <source>Delete a view tree family definition from the agent config.</source>
          <target state="translated">エージェント構成からビューツリーファミリー定義を削除します。</target>
        </trans-unit>
        <trans-unit id="5210820e193a36586d47abb153026ca112d79eec" translate="yes" xml:space="preserve">
          <source>Delete all objects in the ETS table &lt;code&gt;Tab&lt;/code&gt;. The operation is guaranteed to be &lt;code&gt;&lt;a href=&quot;#concurrency&quot;&gt;atomic and isolated&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ETSテーブル &lt;code&gt;Tab&lt;/code&gt; すべてのオブジェクトを削除します。操作は &lt;code&gt;&lt;a href=&quot;#concurrency&quot;&gt;atomic and isolated&lt;/a&gt;&lt;/code&gt; されていることが保証されています。</target>
        </trans-unit>
        <trans-unit id="0111e8f27f5e330da3db8aee43f349eca49e4fc6" translate="yes" xml:space="preserve">
          <source>Delete an entire mib-storage table.</source>
          <target state="translated">mib-storage テーブル全体を削除します。</target>
        </trans-unit>
        <trans-unit id="90d051e4f058fdc93a81c8c192e289a26ac48d09" translate="yes" xml:space="preserve">
          <source>Delete an entry.</source>
          <target state="translated">エントリを削除します。</target>
        </trans-unit>
        <trans-unit id="85df5f045630c419669a61e69ca04fd700e28a50" translate="yes" xml:space="preserve">
          <source>Delete character</source>
          <target state="translated">文字の削除</target>
        </trans-unit>
        <trans-unit id="247b86940b906a4d84abd7600a2a60b360d955e7" translate="yes" xml:space="preserve">
          <source>Delete data set with &lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#set_process_metadata-1&quot;&gt;set_process_metadata/1&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#update_process_metadata-1&quot;&gt;update_process_metadata/1&lt;/a&gt;&lt;/code&gt; でデータセットを削除します。</target>
        </trans-unit>
        <trans-unit id="dc3b4d5d308516c1eb3f3134fdc18f836f7dcbba" translate="yes" xml:space="preserve">
          <source>Delete the configuration of a user</source>
          <target state="translated">ユーザーの設定を削除する</target>
        </trans-unit>
        <trans-unit id="837a21358fedd413cdb892076602aa98096ba328" translate="yes" xml:space="preserve">
          <source>Delete the exact object &lt;code&gt;Object&lt;/code&gt; from the ETS table, leaving objects with the same key but other differences (useful for type &lt;code&gt;bag&lt;/code&gt;). In a &lt;code&gt;duplicate_bag&lt;/code&gt; table, all instances of the object are deleted.</source>
          <target state="translated">正確なオブジェクト &lt;code&gt;Object&lt;/code&gt; をETSテーブルから削除し、キーは同じであるが他の相違点があるオブジェクトを残します（ &lt;code&gt;bag&lt;/code&gt; タイプに役立ちます）。では &lt;code&gt;duplicate_bag&lt;/code&gt; のテーブル、オブジェクトのすべてのインスタンスが削除されます。</target>
        </trans-unit>
        <trans-unit id="1f9eba17860205c37b06b4158113eb4cbb717ab7" translate="yes" xml:space="preserve">
          <source>Delete the table &lt;code&gt;EMPLOYEE&lt;/code&gt;.</source>
          <target state="translated">表 &lt;code&gt;EMPLOYEE&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="bb3b6fe219d693793d658e19d93a46b2e8e3f9e2" translate="yes" xml:space="preserve">
          <source>Delete word</source>
          <target state="translated">削除ワード</target>
        </trans-unit>
        <trans-unit id="d4fad0c7c3738c414abd567b32796483f83a24ea" translate="yes" xml:space="preserve">
          <source>Delete.</source>
          <target state="translated">Delete.</target>
        </trans-unit>
        <trans-unit id="8c2cd6cab37aebab0028a894c99ded8f238de266" translate="yes" xml:space="preserve">
          <source>Deletes a &lt;code&gt;Slave&lt;/code&gt; node from the list of allowed slave hosts.</source>
          <target state="translated">許可されたスレーブホストのリストから &lt;code&gt;Slave&lt;/code&gt; ノードを削除します。</target>
        </trans-unit>
        <trans-unit id="a55490d67b1783b95d3b01989de13de5ecdbd099" translate="yes" xml:space="preserve">
          <source>Deletes a cache entry. Is only called from the cache handling process.</source>
          <target state="translated">キャッシュエントリを削除します。キャッシュ処理プロセスからのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f83187de60d2c964b0ec14f140a205b890d0cdf9" translate="yes" xml:space="preserve">
          <source>Deletes a complete index structure (i.e. the ets table holding the index). The index can no longer be referenced after this call. See the &lt;code&gt;&lt;a href=&quot;#1&quot;&gt;warning note&lt;/a&gt;&lt;/code&gt; above.</source>
          <target state="translated">完全なインデックス構造（つまり、インデックスを保持するetsテーブル）を削除します。この呼び出しの後、インデックスは参照できなくなります。上記の &lt;code&gt;&lt;a href=&quot;#1&quot;&gt;warning note&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="f781899cee6417bc59edb7c370ceb11e5f725c7f" translate="yes" xml:space="preserve">
          <source>Deletes a database created with &lt;code&gt;mnesia:create_schema/1&lt;/code&gt;. &lt;code&gt;mnesia:delete_schema/1&lt;/code&gt; fails if any of the Erlang nodes given as &lt;code&gt;DiscNodes&lt;/code&gt; are not alive, or if Mnesia is running on any of the nodes.</source>
          <target state="translated">&lt;code&gt;mnesia:create_schema/1&lt;/code&gt; で作成されたデータベースを削除します。 &lt;code&gt;mnesia:delete_schema/1&lt;/code&gt; は、 &lt;code&gt;DiscNodes&lt;/code&gt; として指定されたErlangノードのいずれかが生きていない場合、またはMnesiaがいずれかのノードで実行されている場合に失敗します。</target>
        </trans-unit>
        <trans-unit id="0410cc85ea7e09dd6b458b9cd1881abe5746e21c" translate="yes" xml:space="preserve">
          <source>Deletes a directory from the code path. The argument can be an atom &lt;code&gt;Name&lt;/code&gt;, in which case the directory with the name &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; is deleted from the code path. Also, the complete directory name &lt;code&gt;Dir&lt;/code&gt; can be specified as argument.</source>
          <target state="translated">コードパスからディレクトリを削除します。引数はアトム &lt;code&gt;Name&lt;/code&gt; にすることができます。この場合、名前が &lt;code&gt;.../Name[-Vsn][/ebin]&lt;/code&gt; がコードパスから削除されます。また、完全なディレクトリ名 &lt;code&gt;Dir&lt;/code&gt; を引数として指定できます。</target>
        </trans-unit>
        <trans-unit id="8a8f3084880aa402e491a52d850d4081646b7be1" translate="yes" xml:space="preserve">
          <source>Deletes a directory specified by &lt;code&gt;Name&lt;/code&gt;. The directory must be empty before it can be successfully deleted.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; で指定されたディレクトリを削除します。ディレクトリーを正常に削除するには、そのディレクトリーが空でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8703e5f201e87bf05be0a05024c1bffc6bdb1756" translate="yes" xml:space="preserve">
          <source>Deletes a file on remote host.</source>
          <target state="translated">リモートホスト上のファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="145e70506f4120524f47e10b3858ee270f53970c" translate="yes" xml:space="preserve">
          <source>Deletes a fragment from a fragmented table. All records in the last fragment are moved to one of the other fragments. All other fragmented tables, which refer to this table in their foreign key, automatically lose their last fragment. Also, their records are dynamically rehashed in the same manner as for the main table.</source>
          <target state="translated">フラグメント化されたテーブルからフラグメントを削除します。最後のフラグメント内のすべてのレコードは、他のフラグメントのいずれかに移動されます。外部キーでこのテーブルを参照している他のすべてのフラグメント化されたテーブルは、自動的に最後のフラグメントを失います。また、それらのレコードは、メインテーブルと同様の方法で動的に再配置されます。</target>
        </trans-unit>
        <trans-unit id="8136cd7097f295cefa19768ec9dd3cc03cd5596b" translate="yes" xml:space="preserve">
          <source>Deletes a key and its value from the index structure. Returns a new structure.</source>
          <target state="translated">インデックス構造体からキーとその値を削除します。新しい構造体を返します。</target>
        </trans-unit>
        <trans-unit id="d8a8422aa741d8eea89390fd9b831f5728ae2f45" translate="yes" xml:space="preserve">
          <source>Deletes a module &lt;code&gt;Mod&lt;/code&gt; using the low-level instructions &lt;code&gt;remove&lt;/code&gt; and &lt;code&gt;purge&lt;/code&gt;.</source>
          <target state="translated">低レベルの命令 &lt;code&gt;remove&lt;/code&gt; および &lt;code&gt;purge&lt;/code&gt; を使用してモジュール &lt;code&gt;Mod&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="94f3adf6d82d22bb018090421cb54a40c7cb5a7f" translate="yes" xml:space="preserve">
          <source>Deletes a named value on the current key. The atom &lt;code&gt;default&lt;/code&gt; is used for the default value.</source>
          <target state="translated">現在のキーの名前付き値を削除します。デフォルト値にはアトムの &lt;code&gt;default&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="1103f0322e41eb28047a27df8e5e1b984a02279a" translate="yes" xml:space="preserve">
          <source>Deletes a node from &lt;code&gt;node_pool&lt;/code&gt;. The new node pool affects the list returned from the function &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, frag_dist)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;node_pool&lt;/code&gt; からノードを削除します。新しいノードプールは、関数 &lt;code&gt;&lt;a href=&quot;mnesia#table_info-2&quot;&gt;mnesia:table_info(Tab, frag_dist)&lt;/a&gt;&lt;/code&gt; から返されるリストに影響します。</target>
        </trans-unit>
        <trans-unit id="3fd93dbea15b7890f5b16d25f63231595d7c3961" translate="yes" xml:space="preserve">
          <source>Deletes a process group.</source>
          <target state="translated">プロセスグループを削除します。</target>
        </trans-unit>
        <trans-unit id="5782ac9411066ed87e340711042cabf3a6908110" translate="yes" xml:space="preserve">
          <source>Deletes a query cursor. Only the owner of the cursor can delete the cursor.</source>
          <target state="translated">クエリカーソルを削除します。カーソルの所有者のみがカーソルを削除することができます。</target>
        </trans-unit>
        <trans-unit id="2086b9caf543452d116c631fe53c197196841a93" translate="yes" xml:space="preserve">
          <source>Deletes a table.</source>
          <target state="translated">テーブルを削除します。</target>
        </trans-unit>
        <trans-unit id="6a6491894cfad6d987ac2669cb63e6bc94b09c09" translate="yes" xml:space="preserve">
          <source>Deletes all breakpoints in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 内のすべてのブレークポイントを削除します。</target>
        </trans-unit>
        <trans-unit id="daab3c47664770a7f2523882873966d4a0076ad3" translate="yes" xml:space="preserve">
          <source>Deletes all breakpoints, or all breakpoints in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 内のすべてのブレークポイント、またはすべてのブレークポイントを削除します。</target>
        </trans-unit>
        <trans-unit id="6548c310c2c7740c36f6bd49df68d5b9120b1241" translate="yes" xml:space="preserve">
          <source>Deletes all breakpoints.</source>
          <target state="translated">すべてのブレークポイントを削除します。</target>
        </trans-unit>
        <trans-unit id="124f6e9b50a45ade6ccc57ff2d9e7debf7081039" translate="yes" xml:space="preserve">
          <source>Deletes all entries associated with &lt;code&gt;Key&lt;/code&gt; from &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; に関連付けられているすべてのエントリを &lt;code&gt;List&lt;/code&gt; から削除します。</target>
        </trans-unit>
        <trans-unit id="38f3aebeb7f45c6b537400495b97241efa03c656" translate="yes" xml:space="preserve">
          <source>Deletes all entries in the table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; のすべてのエントリを削除します。</target>
        </trans-unit>
        <trans-unit id="67ac4958c7dfc90539c309e1b96b511e018dfaa7" translate="yes" xml:space="preserve">
          <source>Deletes all instances of a specified object from a table. If a table is of type &lt;code&gt;bag&lt;/code&gt; or &lt;code&gt;duplicate_bag&lt;/code&gt;, this function can be used to delete only some of the objects with a specified key.</source>
          <target state="translated">指定されたオブジェクトのすべてのインスタンスをテーブルから削除します。テーブルのタイプが &lt;code&gt;bag&lt;/code&gt; または &lt;code&gt;duplicate_bag&lt;/code&gt; の場合、この関数を使用して、指定されたキーを持つオブジェクトの一部のみを削除できます。</target>
        </trans-unit>
        <trans-unit id="78d9345ff738a8e77092e38c95b5046ed6c20126" translate="yes" xml:space="preserve">
          <source>Deletes all objects from a table in almost constant time. However, if the table if fixed, &lt;code&gt;delete_all_objects(T)&lt;/code&gt; is equivalent to &lt;code&gt;match_delete(T, '_')&lt;/code&gt;.</source>
          <target state="translated">ほぼ一定の時間でテーブルからすべてのオブジェクトを削除します。ただし、テーブルが固定されている場合、 &lt;code&gt;delete_all_objects(T)&lt;/code&gt; は &lt;code&gt;match_delete(T, '_')&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="ea8b2ce44904022ed53ed97cc4353f513fc72f0d" translate="yes" xml:space="preserve">
          <source>Deletes all objects of table &lt;code&gt;Name&lt;/code&gt; and then inserts all the objects of the ETS table &lt;code&gt;EtsTab&lt;/code&gt;. The objects are inserted in unspecified order. As &lt;code&gt;ets:safe_fixtable/2&lt;/code&gt; is called, the ETS table must be public or owned by the calling process.</source>
          <target state="translated">テーブル &lt;code&gt;Name&lt;/code&gt; のすべてのオブジェクトを削除してから、ETSテーブル &lt;code&gt;EtsTab&lt;/code&gt; のすべてのオブジェクトを挿入します。オブジェクトは不特定の順序で挿入されます。 &lt;code&gt;ets:safe_fixtable/2&lt;/code&gt; 呼ばれ、ETSテーブルには、パブリックまたは呼び出し元プロセスが所有しなければなりません。</target>
        </trans-unit>
        <trans-unit id="8f728783d92e7dc789b29765c7837e6b2fc109fa" translate="yes" xml:space="preserve">
          <source>Deletes all objects that match &lt;code&gt;Pattern&lt;/code&gt; from table &lt;code&gt;Name&lt;/code&gt;. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Pattern&lt;/code&gt; 一致するすべてのオブジェクトをテーブル &lt;code&gt;Name&lt;/code&gt; から削除します。パターンの説明については、 &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b9a8af6a45ed2e4b0bb942ee7179dc9fa786f56d" translate="yes" xml:space="preserve">
          <source>Deletes all objects that match pattern &lt;code&gt;Pattern&lt;/code&gt; from table &lt;code&gt;Tab&lt;/code&gt;. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;#match-2&quot;&gt;match/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">すべてはそのマッチパターンのオブジェクトを削除します &lt;code&gt;Pattern&lt;/code&gt; テーブルから &lt;code&gt;Tab&lt;/code&gt; 。パターンの説明については、 &lt;code&gt;&lt;a href=&quot;#match-2&quot;&gt;match/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="5d436ccf509ee3f7c5c496e0de4b03a59a5c6fcc" translate="yes" xml:space="preserve">
          <source>Deletes all objects with key &lt;code&gt;Key&lt;/code&gt; from table &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">キーですべてのオブジェクトを削除する &lt;code&gt;Key&lt;/code&gt; テーブルから &lt;code&gt;Name&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c8fd57fb7a817a35d2a007457bc0c233f86094e8" translate="yes" xml:space="preserve">
          <source>Deletes all objects with key &lt;code&gt;Key&lt;/code&gt; from table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">キーが &lt;code&gt;Key&lt;/code&gt; であるすべてのオブジェクトをテーブル &lt;code&gt;Tab&lt;/code&gt; から削除します。</target>
        </trans-unit>
        <trans-unit id="c71ba442aefb0dc2efa99cd31c5060b76055e05e" translate="yes" xml:space="preserve">
          <source>Deletes all records in table &lt;code&gt;Tab&lt;/code&gt; with the key &lt;code&gt;Key&lt;/code&gt;.</source>
          <target state="translated">キー &lt;code&gt;Key&lt;/code&gt; を使用して、テーブル &lt;code&gt;Tab&lt;/code&gt; 内のすべてのレコードを削除します。</target>
        </trans-unit>
        <trans-unit id="a5caf26d3590c21b8bcec3060c282ef9add5dfe4" translate="yes" xml:space="preserve">
          <source>Deletes an event handler from event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt;Module:terminate/2&lt;/a&gt;&lt;/code&gt; to terminate the event handler.</source>
          <target state="translated">イベントマネージャ &lt;code&gt;EventMgrRef&lt;/code&gt; からイベントハンドラを削除します。イベントマネージャは、 &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt;Module:terminate/2&lt;/a&gt;&lt;/code&gt; を呼び出して、イベントハンドラを終了します。</target>
        </trans-unit>
        <trans-unit id="0e09884e56dfc4f00ff48674020d32b8fa72ec3a" translate="yes" xml:space="preserve">
          <source>Deletes an event handler from the error logger by calling &lt;code&gt;gen_event:delete_handler(error_logger, Handler, [])&lt;/code&gt;, see &lt;code&gt;gen_event(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_event:delete_handler(error_logger, Handler, [])&lt;/code&gt; 呼び出して、エラーロガーからイベントハンドラーを削除します &lt;code&gt;gen_event(3)&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="ca92c0288404ef8ab25dadeb79c95d8e313e09df" translate="yes" xml:space="preserve">
          <source>Deletes an object from the registry. The object is not removed from the registry, it is only marked for later removal so that on later backups to &lt;code&gt;Mnesia&lt;/code&gt;, the corresponding object can be removed from the &lt;code&gt;Mnesia&lt;/code&gt; table as well. If another object is later created with the same key, the object will be reused.</source>
          <target state="translated">レジストリからオブジェクトを削除します。オブジェクトはレジストリから削除されません。後で削除するためにのみマークされているため、 &lt;code&gt;Mnesia&lt;/code&gt; への以降のバックアップで、対応するオブジェクトを &lt;code&gt;Mnesia&lt;/code&gt; テーブルからも削除できます。後で同じキーで別のオブジェクトが作成された場合、そのオブジェクトは再利用されます。</target>
        </trans-unit>
        <trans-unit id="2feb174fac092baec6bb2353f93b5cad1b6dbbcf" translate="yes" xml:space="preserve">
          <source>Deletes configuration data.</source>
          <target state="translated">設定データを削除します。</target>
        </trans-unit>
        <trans-unit id="8996e0b1c689bc638a9e5e56a7107a50e726c868" translate="yes" xml:space="preserve">
          <source>Deletes configuration stored with &lt;code&gt;write_config(Data)&lt;/code&gt;. Notice that after this call any subsequent calls to &lt;code&gt;read_config&lt;/code&gt; must return &lt;code&gt;{error, Error}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;write_config(Data)&lt;/code&gt; で保存された構成を削除します。この呼び出しの後、それ以降の &lt;code&gt;read_config&lt;/code&gt; の呼び出しは &lt;code&gt;{error, Error}&lt;/code&gt; 返す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a8a1f1d2f9340db064af89064d205bffaa452986" translate="yes" xml:space="preserve">
          <source>Deletes digraph &lt;code&gt;G&lt;/code&gt;. This call is important as digraphs are implemented with ETS. There is no garbage collection of ETS tables. However, the digraph is deleted if the process that created the digraph terminates.</source>
          <target state="translated">有向グラフ &lt;code&gt;G&lt;/code&gt; を削除します。ダイグラフはETSで実装されるため、この呼び出しは重要です。ETSテーブルのガベージコレクションはありません。ただし、ダイグラフを作成したプロセスが終了すると、ダイグラフは削除されます。</target>
        </trans-unit>
        <trans-unit id="1e8cf15862d762e5f8a004ce2fee57ee4454a28e" translate="yes" xml:space="preserve">
          <source>Deletes each object from table &lt;code&gt;Name&lt;/code&gt; such that applying match specification &lt;code&gt;MatchSpec&lt;/code&gt; to the object returns value &lt;code&gt;true&lt;/code&gt;. For a description of match specifications, see the &lt;code&gt;ERTS User's Guide&lt;/code&gt;. Returns the number of deleted objects.</source>
          <target state="translated">一致仕様 &lt;code&gt;MatchSpec&lt;/code&gt; をオブジェクトに適用すると値 &lt;code&gt;true&lt;/code&gt; が返されるように、テーブル &lt;code&gt;Name&lt;/code&gt; から各オブジェクトを削除します。一致仕様の説明については、「 &lt;code&gt;ERTS User's Guide&lt;/code&gt; 参照してください。削除されたオブジェクトの数を返します。</target>
        </trans-unit>
        <trans-unit id="36f46cfee96cbd0fcb65a554325c7843eb348953" translate="yes" xml:space="preserve">
          <source>Deletes edge &lt;code&gt;E&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; からエッジ &lt;code&gt;E&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="ae26dabdadf434b637f48f8f90ef998fe6289168" translate="yes" xml:space="preserve">
          <source>Deletes edges from digraph &lt;code&gt;G&lt;/code&gt; until there are no &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;paths&lt;/a&gt;&lt;/code&gt; from vertex &lt;code&gt;V1&lt;/code&gt; to vertex &lt;code&gt;V2&lt;/code&gt;.</source>
          <target state="translated">頂点 &lt;code&gt;V1&lt;/code&gt; から頂点 &lt;code&gt;V2&lt;/code&gt; への &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;paths&lt;/a&gt;&lt;/code&gt; がなくなるまで、ダイグラフ &lt;code&gt;G&lt;/code&gt; からエッジを削除します。</target>
        </trans-unit>
        <trans-unit id="ae4fe94c9918f898de81f8233a9ef1f179233cfb" translate="yes" xml:space="preserve">
          <source>Deletes the breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; の &lt;code&gt;Line&lt;/code&gt; にあるブレークポイントを削除します。</target>
        </trans-unit>
        <trans-unit id="8a8a3823a04d3923ed4cecf755bd1cd98d275849" translate="yes" xml:space="preserve">
          <source>Deletes the breakpoints at the first line of every clause of function &lt;code&gt;Module:Name/Arity&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;Module:Name/Arity&lt;/code&gt; のすべての句の最初の行にあるブレークポイントを削除します。</target>
        </trans-unit>
        <trans-unit id="6f4c876adf78c7429ea484cfe8d592f3d4950615" translate="yes" xml:space="preserve">
          <source>Deletes the current key, if it is valid. Calls the Win32 API function &lt;code&gt;RegDeleteKey()&lt;/code&gt;. Notice that this call does not change the current key (unlike &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt;change_key_create/2&lt;/a&gt;&lt;/code&gt;). This means that after the call, the current key is invalid.</source>
          <target state="translated">現在のキーが有効であれば削除します。Win32 API関数 &lt;code&gt;RegDeleteKey()&lt;/code&gt; を呼び出します。この呼び出しは現在のキーを変更しないことに注意してください（ &lt;code&gt;&lt;a href=&quot;#change_key_create-2&quot;&gt;change_key_create/2&lt;/a&gt;&lt;/code&gt; とは異なります）。これは、呼び出しの後、現在のキーが無効であることを意味します。</target>
        </trans-unit>
        <trans-unit id="4f8afd6d7d8311edbd37e3839c01ce48b35a3601" translate="yes" xml:space="preserve">
          <source>Deletes the edges in list &lt;code&gt;Edges&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">digraph &lt;code&gt;G&lt;/code&gt; からリスト &lt;code&gt;Edges&lt;/code&gt; のエッジを削除します。</target>
        </trans-unit>
        <trans-unit id="e090b8665faa778d2ef9696ec7f8fe8a880abb2f" translate="yes" xml:space="preserve">
          <source>Deletes the entire table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; 全体を削除します。</target>
        </trans-unit>
        <trans-unit id="71fc151dee30c6abe6f031a8b13b17a8191c83f4" translate="yes" xml:space="preserve">
          <source>Deletes the environment variable &lt;code&gt;VarName&lt;/code&gt;.</source>
          <target state="translated">環境変数 &lt;code&gt;VarName&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="f708faba6af97f22007037df3f544635b58fb9f9" translate="yes" xml:space="preserve">
          <source>Deletes the file &lt;code&gt;File&lt;/code&gt; at the remote server.</source>
          <target state="translated">リモートサーバーでファイル &lt;code&gt;File&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="1220b4e312e97076f6d4fd5b1f7cb6ed925918bd" translate="yes" xml:space="preserve">
          <source>Deletes the file specified by &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; で指定されたファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="311abc79f8faf3f31f0de87d15262b09b11f065e" translate="yes" xml:space="preserve">
          <source>Deletes the files &lt;code&gt;erl&lt;/code&gt; and &lt;code&gt;start&lt;/code&gt; from &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt;. These files are created again from source when installing the release.</source>
          <target state="translated">ファイル &lt;code&gt;erl&lt;/code&gt; を削除し、 &lt;code&gt;tmp/erts-5.10.4/bin&lt;/code&gt; から &lt;code&gt;start&lt;/code&gt; します。これらのファイルは、リリースのインストール時にソースから再度作成されます。</target>
        </trans-unit>
        <trans-unit id="a4766320246a7839926e41b58ceb885afd72bb95" translate="yes" xml:space="preserve">
          <source>Deletes the index on attribute with name &lt;code&gt;AttrName&lt;/code&gt; in a table.</source>
          <target state="translated">テーブル &lt;code&gt;AttrName&lt;/code&gt; という名前の属性のインデックスを削除します。</target>
        </trans-unit>
        <trans-unit id="87ff8ee5f5ac17a2346e6941ae9fe9a8f102c0fd" translate="yes" xml:space="preserve">
          <source>Deletes the lock &lt;code&gt;Id&lt;/code&gt; synchronously.</source>
          <target state="translated">ロック &lt;code&gt;Id&lt;/code&gt; 同期的に削除します。</target>
        </trans-unit>
        <trans-unit id="b5d31af51e57f1d619a23240313fc7f8259cab1f" translate="yes" xml:space="preserve">
          <source>Deletes the replica of table &lt;code&gt;Tab&lt;/code&gt; at node &lt;code&gt;Node&lt;/code&gt;. When the last replica is deleted with this function, the table disappears entirely.</source>
          <target state="translated">ノード &lt;code&gt;Node&lt;/code&gt; でテーブル &lt;code&gt;Tab&lt;/code&gt; のレプリカを削除します。この機能で最後のレプリカを削除すると、テーブルが完全に消えます。</target>
        </trans-unit>
        <trans-unit id="327e2bdef58dc2b2885dab77476a029eecf521cd" translate="yes" xml:space="preserve">
          <source>Deletes the row in the table.</source>
          <target state="translated">テーブルの行を削除します。</target>
        </trans-unit>
        <trans-unit id="ef466f07da53b5c5a842ff32c0bb33037d702347" translate="yes" xml:space="preserve">
          <source>Deletes the vertices in list &lt;code&gt;Vertices&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; からリスト &lt;code&gt;Vertices&lt;/code&gt; の頂点を削除します。</target>
        </trans-unit>
        <trans-unit id="ae125b029da9f118d4a67820ec02ed4a2262e06a" translate="yes" xml:space="preserve">
          <source>Deletes these extensions from the list of compress extensions.</source>
          <target state="translated">これらの拡張子を圧縮拡張子のリストから削除します。</target>
        </trans-unit>
        <trans-unit id="d7cebb65c66062e754f67e7cd84ff3910ba98a0e" translate="yes" xml:space="preserve">
          <source>Deletes these extensions from the list of uncompress extensions.</source>
          <target state="translated">これらの拡張子を解凍した拡張子のリストから削除します。</target>
        </trans-unit>
        <trans-unit id="d080c61dd65db208d878d0084fbbff8bedd06443" translate="yes" xml:space="preserve">
          <source>Deletes vertex &lt;code&gt;V&lt;/code&gt; from digraph &lt;code&gt;G&lt;/code&gt;. Any edges &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V&lt;/code&gt; are also deleted.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; から頂点 &lt;code&gt;V&lt;/code&gt; を削除します。任意縁 &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; から &lt;code&gt;V&lt;/code&gt; 又は &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; に &lt;code&gt;V&lt;/code&gt; をも削除されます。</target>
        </trans-unit>
        <trans-unit id="5dcabc9ea39d37218edc79435c06dbd50a0deb2e" translate="yes" xml:space="preserve">
          <source>Deliver distribution channel data from a remote node to the local node.</source>
          <target state="translated">リモートノードからローカルノードへ配信チャネルデータを配信します。</target>
        </trans-unit>
        <trans-unit id="f56e9fc6568538a640442392ddf7c4208577ff80" translate="yes" xml:space="preserve">
          <source>Delivered when a peer sends an adaptation layer indication parameter (configured through option &lt;code&gt;&lt;a href=&quot;#option-sctp_adaptation_layer&quot;&gt;sctp_adaptation_layer&lt;/a&gt;&lt;/code&gt;). Notice that with the current implementation of the Erlang/SCTP binding, this event is disabled by default.</source>
          <target state="translated">ピアがアダプテーションレイヤー表示パラメーターを送信したときに配信されます（オプション &lt;code&gt;&lt;a href=&quot;#option-sctp_adaptation_layer&quot;&gt;sctp_adaptation_layer&lt;/a&gt;&lt;/code&gt; で設定）。Erlang / SCTPバインディングの現在の実装では、このイベントはデフォルトで無効になっていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="41529ae1ea2763fa3d1c8d48455acf9f20804cf1" translate="yes" xml:space="preserve">
          <source>Delivery is done differently depending on the value of &lt;code&gt;tag_receiver()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;tag_receiver()&lt;/code&gt; の値に応じて、配信は異なる方法で行われます。</target>
        </trans-unit>
        <trans-unit id="af78bc157d8b4fffa9286db1b886ea4e95d3453e" translate="yes" xml:space="preserve">
          <source>Demanding reload when a reload is already in progress is always an error. Using the high-level functions, it is also an error to demand reloading when more than one &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; has the driver loaded.</source>
          <target state="translated">リロードがすでに進行しているときにリロードを要求すると、常にエラーが発生します。高水準関数を使用すると、複数の &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; がドライバーをロードしたときに再ロードを要求することもエラーになります。</target>
        </trans-unit>
        <trans-unit id="4dcb269c56df9edcec6a92cbe87d6a1b141f056d" translate="yes" xml:space="preserve">
          <source>Demands for efficiency when reading data from an I/O server has not only lead to the addition of the &lt;code&gt;get_line&lt;/code&gt; and &lt;code&gt;get_chars&lt;/code&gt; requests, but has also added the concept of I/O server options. No options are mandatory to implement, but all I/O servers in the Erlang standard libraries honor the &lt;code&gt;binary&lt;/code&gt; option, which allows element &lt;code&gt;Data&lt;/code&gt; of the &lt;code&gt;io_reply&lt;/code&gt; tuple to be a binary instead of a list &lt;strong&gt;when possible&lt;/strong&gt;. If the data is sent as a binary, Unicode data is sent in the standard Erlang Unicode format, that is, UTF-8 (notice that the function of the &lt;code&gt;get_until&lt;/code&gt; request still gets list data regardless of the I/O server mode).</source>
          <target state="translated">I / Oサーバーからデータを読み取る際の効率の要求により、 &lt;code&gt;get_line&lt;/code&gt; および &lt;code&gt;get_chars&lt;/code&gt; リクエストが追加されただけでなく、I / Oサーバーオプションの概念も追加されました。実装に必須のオプションはありませんが、Erlang標準ライブラリのすべてのI / Oサーバーは、 &lt;code&gt;binary&lt;/code&gt; オプションを尊重します。これにより、 &lt;code&gt;io_reply&lt;/code&gt; タプルの要素 &lt;code&gt;Data&lt;/code&gt; を、&lt;strong&gt;可能な場合&lt;/strong&gt;はリストではなくバイナリに&lt;strong&gt;することができ&lt;/strong&gt;ます。データがバイナリとして送信される場合、Unicodeデータは標準のErlang Unicode形式、つまりUTF-8で送信されます（I / Oサーバーモードに関係なく、 &lt;code&gt;get_until&lt;/code&gt; 要求の関数は引き続きリストデータを取得することに注意してください）。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b75d5fa2d821733c84521ae433ed2c40237c592" translate="yes" xml:space="preserve">
          <source>Denotes if the terminal is to echo input. Only supported for the standard shell I/O server (&lt;code&gt;group.erl&lt;/code&gt;)</source>
          <target state="translated">端末が入力をエコーするかどうかを示します。標準シェルI / Oサーバー（ &lt;code&gt;group.erl&lt;/code&gt; ）でのみサポートされます</target>
        </trans-unit>
        <trans-unit id="770427e097fad59d1892a79f3d07020d064304fe" translate="yes" xml:space="preserve">
          <source>Denotes the last part of the OID which specifies the index of the row in the table (see RFC1212, 4.1.6 for more information about INDEX).</source>
          <target state="translated">テーブル内の行のインデックスを指定するOIDの最後の部分を示す(INDEXについての詳細はRFC1212,4.1.6を参照)。</target>
        </trans-unit>
        <trans-unit id="0562f32dc56f5c702810cbe010068ddd38dbd69a" translate="yes" xml:space="preserve">
          <source>Dependencies</source>
          <target state="translated">Dependencies</target>
        </trans-unit>
        <trans-unit id="ed42c382496ca9fcfe7ec583d2cd5e90ce4a7bae" translate="yes" xml:space="preserve">
          <source>Depending on &lt;code&gt;Arg&lt;/code&gt;, this function can return a list not only of visible nodes, but also hidden nodes and previously known nodes, and so on.</source>
          <target state="translated">&lt;code&gt;Arg&lt;/code&gt; に応じて、この関数は可視ノードだけでなく、非表示ノードや既知のノードなどのリストも返すことができます。</target>
        </trans-unit>
        <trans-unit id="888f8a801100b3047d49eff8aacaa93e0afae980" translate="yes" xml:space="preserve">
          <source>Depending on &lt;code&gt;Flag&lt;/code&gt;, the calling process starts subscribing (&lt;code&gt;Flag&lt;/code&gt; equal to &lt;code&gt;true&lt;/code&gt;) or stops subscribing (&lt;code&gt;Flag&lt;/code&gt; equal to &lt;code&gt;false&lt;/code&gt;) to node status change messages.</source>
          <target state="translated">&lt;code&gt;Flag&lt;/code&gt; に応じて、呼び出しプロセスはノードステータス変更メッセージのサブスクライブを開始（ &lt;code&gt;Flag&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; ）またはサブスクライブを停止（ &lt;code&gt;Flag&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; ）します。</target>
        </trans-unit>
        <trans-unit id="3a593c77b3451c58e4a483fc1a4c2ed4a7460896" translate="yes" xml:space="preserve">
          <source>Depending on Unix:</source>
          <target state="translated">Unixにもよりますが。</target>
        </trans-unit>
        <trans-unit id="243bac6201188d4c8745d8544eb1a7983b8606fa" translate="yes" xml:space="preserve">
          <source>Depending on current directory, and writing there:</source>
          <target state="translated">カレントディレクトリに依存し、そこに書き込む。</target>
        </trans-unit>
        <trans-unit id="cdde803659c57ac2ddc339522c646af01e6694a2" translate="yes" xml:space="preserve">
          <source>Depending on execution order:</source>
          <target state="translated">執行順序によっては</target>
        </trans-unit>
        <trans-unit id="8dee5fe53ac8542b7adfcc26071a2cc098a90e75" translate="yes" xml:space="preserve">
          <source>Depending on how your state machine is specified, this can be a very useful feature, but it forces you to handle the state enter calls in all states. See also the &lt;code&gt;&lt;a href=&quot;#State%20Enter%20Actions&quot;&gt;State Enter Actions&lt;/a&gt;&lt;/code&gt; chapter.</source>
          <target state="translated">ステートマシンの指定方法によっては、これは非常に便利な機能ですが、すべてのステートでステートエンターコールを処理する必要があります。 &lt;code&gt;&lt;a href=&quot;#State%20Enter%20Actions&quot;&gt;State Enter Actions&lt;/a&gt;&lt;/code&gt; の章も参照してください。</target>
        </trans-unit>
        <trans-unit id="9291af56bff8b9929663e0373b04939eaa6165fd" translate="yes" xml:space="preserve">
          <source>Depending on the application, it can be a good idea to use the dirty functions for certain operations. Almost all Mnesia functions that can be called within transactions have a dirty equivalent, which is much more efficient.</source>
          <target state="translated">アプリケーションによっては、特定の操作にダーティな関数を使用するのが良いでしょう。トランザクション内で呼び出せるムネシアの関数のほとんどがダーティに相当するものを持っていて、その方がはるかに効率的です。</target>
        </trans-unit>
        <trans-unit id="dabd0167e15f1eb7094245774e052022449eed10" translate="yes" xml:space="preserve">
          <source>Depending on the encoding rules, the encoder can also compare the given value to the default value and automatically omit the encoding if the values are equal. How much effort the encoder makes to compare the values depends on the encoding rules. The DER encoding rules forbid encoding a value equal to the default value, so it has a more thorough and time-consuming comparison than the encoders for the other encoding rules.</source>
          <target state="translated">エンコーディングルールに応じて、エンコーダは与えられた値をデフォルト値と比較し、値が等しい場合は自動的にエンコーディングを省略することもできます。エンコーダが値を比較するためにどれだけの努力をするかは、エンコーディングルールに依存します。DERのエンコーディングルールでは、デフォルト値と等しい値をエンコーディングすることを禁止しているため、他のエンコーディングルールのエンコーダーよりも徹底した比較を行い、時間をかけて比較します。</target>
        </trans-unit>
        <trans-unit id="08626437fb40efba7dbca9b44d332c33a8162802" translate="yes" xml:space="preserve">
          <source>Depending on the encoding, different methods of reading and writing data is preferred. The default encoding of &lt;code&gt;latin1&lt;/code&gt; implies using this module (&lt;code&gt;file&lt;/code&gt;) for reading and writing data as the interfaces provided here work with byte-oriented data. Using other (Unicode) encodings makes the &lt;code&gt;io(3)&lt;/code&gt; functions &lt;code&gt;get_chars&lt;/code&gt;, &lt;code&gt;get_line&lt;/code&gt;, and &lt;code&gt;put_chars&lt;/code&gt; more suitable, as they can work with the full Unicode range.</source>
          <target state="translated">エンコーディングに応じて、データの読み取りと書き込みの異なる方法が推奨されます。ここで提供されるインターフェイスはバイト指向のデータを処理するため、 &lt;code&gt;latin1&lt;/code&gt; のデフォルトのエンコーディングは、データの読み取りと書き込みにこのモジュール（ &lt;code&gt;file&lt;/code&gt; ）を使用することを意味します。他の（Unicode）エンコーディングを使用すると、 &lt;code&gt;io(3)&lt;/code&gt; 関数の &lt;code&gt;get_chars&lt;/code&gt; 、 &lt;code&gt;get_line&lt;/code&gt; 、および &lt;code&gt;put_chars&lt;/code&gt; が、Unicodeの全範囲で機能するため、より適切になります。</target>
        </trans-unit>
        <trans-unit id="3a4a2bd194c4b302cc838a7198f9734aad7fbc66" translate="yes" xml:space="preserve">
          <source>Depending on the platform, the value may need to be quoted if the shell itself interprets certain characters. On Unix, terms containing tuples and lists must be quoted. Terms containing spaces must be quoted on all platforms.</source>
          <target state="translated">プラットフォームによっては、シェル自身が特定の文字を解釈する場合、値を引用符で囲む必要があるかもしれません。Unix では、タプルやリストを含む用語は引用符で囲まなければなりません。スペースを含む用語は、すべてのプラットフォームで引用符で囲まれなければなりません。</target>
        </trans-unit>
        <trans-unit id="03c613c2a141cff91e371843ee43ffefd0b81ace" translate="yes" xml:space="preserve">
          <source>Depending on the type of &lt;code&gt;Node&lt;/code&gt;, the size of some groups may be variable (e.g., the group consisting of all the elements of a tuple), while others always contain the same number of elements - usually exactly one (e.g., the group containing the argument expression of a case-expression). Note, however, that the exact structure of the returned list (for a given node type) should in general not be depended upon, since it might be subject to change without notice.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; のタイプに応じて、一部のグループのサイズは変化する可能性があります（たとえば、タプルのすべての要素で構成されるグループ）。一方、他のグループは常に同じ数の要素を含みます-通常は1つだけです（たとえば、ケース式の引数式）。ただし、返されるリストの（特定のノードタイプの）正確な構造は、予告なしに変更される可能性があるため、一般に依存すべきではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="f72e0a79aede683f74da3cac9428753ce30b12f5" translate="yes" xml:space="preserve">
          <source>Depending on the underlying OS:es links might be followed and info on the final file, directory etc is returned. See &lt;code&gt;&lt;a href=&quot;#read_link_info-2&quot;&gt;ssh_sftp::read_link_info/2&lt;/a&gt;&lt;/code&gt; on how to get information on links instead.</source>
          <target state="translated">基盤となるOSによっては、リンクがたどられ、最終的なファイル、ディレクトリなどの情報が返される場合があります。代わりにリンクの情報を取得する方法については、 &lt;code&gt;&lt;a href=&quot;#read_link_info-2&quot;&gt;ssh_sftp::read_link_info/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ccc799c653ce6450978e4f7f091a0e0d6ab495d4" translate="yes" xml:space="preserve">
          <source>Depending on the value of the &lt;code&gt;open/1&lt;/code&gt; options &lt;code&gt;head&lt;/code&gt; and &lt;code&gt;head_func&lt;/code&gt;, or set by function &lt;code&gt;change_header/2&lt;/code&gt;, the value of &lt;code&gt;Head&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt; (default), &lt;code&gt;{head, H}&lt;/code&gt; (&lt;code&gt;head&lt;/code&gt; option), or &lt;code&gt;{M,F,A}&lt;/code&gt; (&lt;code&gt;head_func&lt;/code&gt; option).</source>
          <target state="translated">&lt;code&gt;open/1&lt;/code&gt; オプションの &lt;code&gt;head&lt;/code&gt; と &lt;code&gt;head_func&lt;/code&gt; の値、または関数 &lt;code&gt;change_header/2&lt;/code&gt; によって設定された値に応じて、 &lt;code&gt;Head&lt;/code&gt; の値は &lt;code&gt;none&lt;/code&gt; （デフォルト）、 &lt;code&gt;{head, H}&lt;/code&gt; （ &lt;code&gt;head&lt;/code&gt; オプション）、または &lt;code&gt;{M,F,A}&lt;/code&gt; （ &lt;code&gt;head_func&lt;/code&gt; オプション）。</target>
        </trans-unit>
        <trans-unit id="7bb075a29d7a66c030bf16e5aa81d3289b5d0649" translate="yes" xml:space="preserve">
          <source>Deprecated Functions. All deprecated exported functions and all used deprecated BIFs.</source>
          <target state="translated">非推奨関数。非推奨のエクスポートされたすべての関数と、非推奨のBIFを使用したすべての関数。</target>
        </trans-unit>
        <trans-unit id="a556f0c9e78725f0dc7ec5f5f6ccfab7c94fba9a" translate="yes" xml:space="preserve">
          <source>Deprecated Functions. All deprecated functions to be removed in next version or next major release.</source>
          <target state="translated">廃止予定の機能。すべての非推奨関数は、次のバージョンまたは次のメジャーリリースで削除される予定です。</target>
        </trans-unit>
        <trans-unit id="d7d871c4d8fedf1c0044ae045b46fd1f875d4207" translate="yes" xml:space="preserve">
          <source>Deprecated Functions. All deprecated functions to be removed in next version, next major release, or later.</source>
          <target state="translated">廃止予定の機能。すべての非推奨関数は、次のバージョン、次のメジャーリリース以降に削除される予定です。</target>
        </trans-unit>
        <trans-unit id="f45d730453472e45c49f2d3ea99fe5527787aad8" translate="yes" xml:space="preserve">
          <source>Deprecated Functions. All deprecated functions to be removed in next version.</source>
          <target state="translated">廃止予定の機能。すべての非推奨関数は次のバージョンで削除される予定です。</target>
        </trans-unit>
        <trans-unit id="5da4152a4415189ae859a586a766eb23b8a72225" translate="yes" xml:space="preserve">
          <source>Deprecated Representations for BIT STRING</source>
          <target state="translated">BIT STRING の非推奨表現</target>
        </trans-unit>
        <trans-unit id="362d66bda77ba72de253405d1082913585d5d87f" translate="yes" xml:space="preserve">
          <source>Deprecated and replaced by &lt;code&gt;&lt;a href=&quot;gen_statem&quot;&gt;gen_statem&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">廃止され、 &lt;code&gt;&lt;a href=&quot;gen_statem&quot;&gt;gen_statem&lt;/a&gt;&lt;/code&gt; に置き換えられました</target>
        </trans-unit>
        <trans-unit id="8dfe918164e8ddccb6f55f262eee83b0adbb2128" translate="yes" xml:space="preserve">
          <source>Deprecated and replaced by gen_statem</source>
          <target state="translated">非推奨となり、gen_statem に置き換えられました。</target>
        </trans-unit>
        <trans-unit id="2d09e5160c09486ccb7f3219abc0b47f86c4eaad" translate="yes" xml:space="preserve">
          <source>Deprecated functionality will be documented as deprecated, and compiler warnings will be issued, when appropriate, as early as possible. That is, the new preferred functionality will appear at the same time as the deprecation is issued. A new deprecation will at least be announced in a release note and the documentation.</source>
          <target state="translated">非推奨の機能は非推奨として文書化され、適切な場合は可能な限り早期にコンパイラの警告が発行されます。つまり、推奨される新しい機能は、非推奨になった機能が発表されるのと同時に表示されます。新しい非推奨機能は、少なくともリリースノートとドキュメントで発表されます。</target>
        </trans-unit>
        <trans-unit id="5501a25bd160cca4c73c256fc484e054f744501e" translate="yes" xml:space="preserve">
          <source>Deprecated functions which for the time being are kept for backwards compatibility. Invokes &lt;code&gt;et:trace_me/4&lt;/code&gt; and &lt;code&gt;et:trace_me/5&lt;/code&gt; respectively.</source>
          <target state="translated">当面は下位互換性のために残されている非推奨の関数。 &lt;code&gt;et:trace_me/4&lt;/code&gt; と &lt;code&gt;et:trace_me/5&lt;/code&gt; をそれぞれ呼び出します。</target>
        </trans-unit>
        <trans-unit id="965c6319eb78a51b51236820480c381b647f09bb" translate="yes" xml:space="preserve">
          <source>Deprecated in OTP 21, use &lt;code&gt;&lt;a href=&quot;#cipher_suites-2&quot;&gt;cipher_suites/2&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">OTP 21では非推奨で、代わりに &lt;code&gt;&lt;a href=&quot;#cipher_suites-2&quot;&gt;cipher_suites/2&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="25f06dfe2aac9021d2c4c0bc121eaf600a0aee3b" translate="yes" xml:space="preserve">
          <source>Deprecated in OTP 21, use &lt;code&gt;&lt;a href=&quot;#handshake-1&quot;&gt;handshake/[1,2]&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">OTP 21では非推奨で、代わりに &lt;code&gt;&lt;a href=&quot;#handshake-1&quot;&gt;handshake/[1,2]&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="8b63d6692da10960246b76d0c20aee73217670bc" translate="yes" xml:space="preserve">
          <source>Deprecated in OTP 21, use &lt;code&gt;&lt;a href=&quot;#handshake-3&quot;&gt;handshake/[2,3]&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">OTP 21で非推奨、代わりに &lt;code&gt;&lt;a href=&quot;#handshake-3&quot;&gt;handshake/[2,3]&lt;/a&gt;&lt;/code&gt; を使用。</target>
        </trans-unit>
        <trans-unit id="5abdc016e3ae09e4ee089a39076e52bb4e75f1b8" translate="yes" xml:space="preserve">
          <source>Deprecated symbolic representations kept for backwards-compatibility.</source>
          <target state="translated">下位互換性のために保持されている非推奨の記号表現。</target>
        </trans-unit>
        <trans-unit id="e933a4c105525e5dfc66dc5b016c7a5b06ca6392" translate="yes" xml:space="preserve">
          <source>Dequeue &lt;code&gt;count&lt;/code&gt; bytes from the I/O queue. If &lt;code&gt;size&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, the new size of the queue is placed there.</source>
          <target state="translated">I / Oキューから &lt;code&gt;count&lt;/code&gt; バイトをデキューします。 &lt;code&gt;size&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; でない場合、キューの新しいサイズがそこに配置されます。</target>
        </trans-unit>
        <trans-unit id="8547a26aec952c41fbd7b425889713b88c8b7d6f" translate="yes" xml:space="preserve">
          <source>Dequeues data by moving the head pointer forward in the driver queue by &lt;code&gt;size&lt;/code&gt; bytes. The data in the queue is deallocated.</source>
          <target state="translated">ドライバーのキュー内でヘッドポインターを &lt;code&gt;size&lt;/code&gt; バイトだけ前方に移動することにより、データをデキューします。キュー内のデータは割り当て解除されます。</target>
        </trans-unit>
        <trans-unit id="b853231d0010f08413d6054783b30b188c434c4a" translate="yes" xml:space="preserve">
          <source>Derefrence aliases only in finding the base.</source>
          <target state="translated">基地を見つけることだけがデレフェレンス・エイリアスです。</target>
        </trans-unit>
        <trans-unit id="5c2b102c8b83b66f415c2f7f1cf6b0396528bb0f" translate="yes" xml:space="preserve">
          <source>Derefrence aliases only when searching.</source>
          <target state="translated">検索時にのみ、エイリアスを削除します。</target>
        </trans-unit>
        <trans-unit id="755b53dcef95fd29638c16d7fa9871ffe3d7b5e1" translate="yes" xml:space="preserve">
          <source>Derived AVP Data Formats</source>
          <target state="translated">派生 AVP データフォーマット</target>
        </trans-unit>
        <trans-unit id="d6478c428f7d07b93ad21693c15abb2cd2e82f3b" translate="yes" xml:space="preserve">
          <source>Descend recursively down all the directories in &lt;code&gt;DirList&lt;/code&gt; and create a &lt;code&gt;TAGS&lt;/code&gt; file based on all files found.</source>
          <target state="translated">&lt;code&gt;DirList&lt;/code&gt; 内のすべてのディレクトリを再帰的に下降し、見つかったすべてのファイルに基づいて &lt;code&gt;TAGS&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="4cc3d8cf36128f6171cdd77d236ce5ede8a12c4f" translate="yes" xml:space="preserve">
          <source>Descend recursively down the directory &lt;code&gt;Dir&lt;/code&gt; and create a &lt;code&gt;TAGS&lt;/code&gt; file based on all files found.</source>
          <target state="translated">ディレクトリ &lt;code&gt;Dir&lt;/code&gt; を再帰的に下降し、見つかったすべてのファイルに基づいて &lt;code&gt;TAGS&lt;/code&gt; ファイルを作成します。</target>
        </trans-unit>
        <trans-unit id="891725ab5273cf87959338e5bc21f141aba5aa78" translate="yes" xml:space="preserve">
          <source>Describes a NIF by its name, arity, and implementation.</source>
          <target state="translated">NIF を名前、アリティ、および実装で記述します。</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="499f6cd092c8652ffec52836471379de11dd40d4" translate="yes" xml:space="preserve">
          <source>Description of &lt;code&gt;UtilDesc = {Cpus, Busy, NonBusy, Misc}&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;UtilDesc = {Cpus, Busy, NonBusy, Misc}&lt;/code&gt; 説明= {Cpus、Busy、NonBusy、Misc}：</target>
        </trans-unit>
        <trans-unit id="412f84d6c51e529e7f68c4a06240d52b125fd201" translate="yes" xml:space="preserve">
          <source>Description of the Document Set</source>
          <target state="translated">ドキュメントセットの説明</target>
        </trans-unit>
        <trans-unit id="d59825af02793e907b66e437b654eff9f3807b1e" translate="yes" xml:space="preserve">
          <source>Description of the host that owns the &lt;code&gt;PublicHostKey&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PublicHostKey&lt;/code&gt; を所有するホストの説明。</target>
        </trans-unit>
        <trans-unit id="87643cd5a8d832b71e24272865a5a2ded4e2c63e" translate="yes" xml:space="preserve">
          <source>Description of the host.</source>
          <target state="translated">ホストの説明。</target>
        </trans-unit>
        <trans-unit id="04f0f87cdf30f41863595935bdd7b915c84a0c3d" translate="yes" xml:space="preserve">
          <source>Deseret</source>
          <target state="translated">Deseret</target>
        </trans-unit>
        <trans-unit id="83c759c4a62a19e65caab6e8de56c9cb7053ee02" translate="yes" xml:space="preserve">
          <source>Desired SFTP protocol version. The actual version is the minimum of the desired version and the maximum supported versions by the SFTP server.</source>
          <target state="translated">希望する SFTP プロトコルのバージョンを指定します。実際のバージョンは、希望するバージョンの最小値と SFTP サーバーがサポートする最大値です。</target>
        </trans-unit>
        <trans-unit id="d01e9be8767f7e2e6949f04a35d1a79f0e103c92" translate="yes" xml:space="preserve">
          <source>Destination to use when replying through, for example, the &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;{reply,From,Reply}&lt;/code&gt; to a process that has called the &lt;code&gt;gen_statem&lt;/code&gt; server using &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt; を使用して &lt;code&gt;gen_statem&lt;/code&gt; サーバーを呼び出したプロセスに &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;{reply,From,Reply}&lt;/code&gt; を介して応答するときに使用する宛先。</target>
        </trans-unit>
        <trans-unit id="8ddcb395a27a31d4dfd5b2bb0dc66b34ad576576" translate="yes" xml:space="preserve">
          <source>Destination-Host AVP</source>
          <target state="translated">宛先ホスト AVP</target>
        </trans-unit>
        <trans-unit id="b299ccf590d9a47c91911a41b7d51c688221f560" translate="yes" xml:space="preserve">
          <source>Destination-Realm AVP</source>
          <target state="translated">デスティネーション-リアルム AVP</target>
        </trans-unit>
        <trans-unit id="fc2125ded371f86e9696529d4db25dedd6c7c623" translate="yes" xml:space="preserve">
          <source>Destroy the I/O queue and free all of it's contents</source>
          <target state="translated">I/Oキューを破壊し、その内容をすべて解放します。</target>
        </trans-unit>
        <trans-unit id="6b90c654815fb3f69b2082f0f64d7d604be536d4" translate="yes" xml:space="preserve">
          <source>Destroys a condition variable previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_cond_create&quot;&gt;erl_drv_cond_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#erl_drv_cond_create&quot;&gt;erl_drv_cond_create&lt;/a&gt;&lt;/code&gt; によって以前に作成された条件変数を破棄します。</target>
        </trans-unit>
        <trans-unit id="e9ccd649edff0e0054033a6999d53c7cb699f818" translate="yes" xml:space="preserve">
          <source>Destroys a map iterator created by &lt;code&gt;&lt;a href=&quot;#enif_map_iterator_create&quot;&gt;enif_map_iterator_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enif_map_iterator_create&quot;&gt;enif_map_iterator_create&lt;/a&gt;&lt;/code&gt; によって作成されたマップイテレータを破棄します。</target>
        </trans-unit>
        <trans-unit id="edc5f8f0098d5350b10b0be3993f3fb15f2a5f4d" translate="yes" xml:space="preserve">
          <source>Destroys a mutex previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_create&quot;&gt;erl_drv_mutex_create&lt;/a&gt;&lt;/code&gt;. The mutex must be in an unlocked state before it is destroyed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#erl_drv_mutex_create&quot;&gt;erl_drv_mutex_create&lt;/a&gt;&lt;/code&gt; によって以前に作成されたミューテックスを破棄します。ミューテックスは、破棄される前にロック解除状態でなければなりません。</target>
        </trans-unit>
        <trans-unit id="3d44a717d9aab8a55fea66c1028c0d144717bb04" translate="yes" xml:space="preserve">
          <source>Destroys a thread-specific data key previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_key_create&quot;&gt;erl_drv_tsd_key_create&lt;/a&gt;&lt;/code&gt;. All thread-specific data using this key in all threads must be cleared (see &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_set&quot;&gt;erl_drv_tsd_set&lt;/a&gt;&lt;/code&gt;) before the call to &lt;code&gt;erl_drv_tsd_key_destroy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_key_create&quot;&gt;erl_drv_tsd_key_create&lt;/a&gt;&lt;/code&gt; によって以前に作成されたスレッド固有のデータキーを破棄します。すべてのスレッドで、このキーを使用してすべてのスレッド固有データ（参照クリアする必要があります &lt;code&gt;&lt;a href=&quot;#erl_drv_tsd_set&quot;&gt;erl_drv_tsd_set&lt;/a&gt;&lt;/code&gt; を呼び出しの前に） &lt;code&gt;erl_drv_tsd_key_destroy&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="21b3af691689dac990e8e2ccddd4e24df729f48e" translate="yes" xml:space="preserve">
          <source>Destroys an rwlock previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_create&quot;&gt;erl_drv_rwlock_create&lt;/a&gt;&lt;/code&gt;. The rwlock must be in an unlocked state before it is destroyed.</source>
          <target state="translated">erl_drv_rwlock_createによって以前に作成された &lt;code&gt;&lt;a href=&quot;#erl_drv_rwlock_create&quot;&gt;erl_drv_rwlock_create&lt;/a&gt;&lt;/code&gt; ます。破棄する前に、rwlockをロック解除状態にする必要があります。</target>
        </trans-unit>
        <trans-unit id="6f60f49d47af6ed0c00205d050757b397270ed04" translate="yes" xml:space="preserve">
          <source>Destroys thread options previously created by &lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_create&quot;&gt;erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#erl_drv_thread_opts_create&quot;&gt;erl_drv_thread_opts_create&lt;/a&gt;&lt;/code&gt; によって以前に作成されたスレッドオプションを破棄します。</target>
        </trans-unit>
        <trans-unit id="db7dbdd40f8bae0fb5f7afe2f1bddf7982c90e55" translate="yes" xml:space="preserve">
          <source>Details of these features are described in the following sections.</source>
          <target state="translated">これらの特徴の詳細については、以下の項で説明する。</target>
        </trans-unit>
        <trans-unit id="3e7cdda7f4aca965020ab0e29b81d2360a041c83" translate="yes" xml:space="preserve">
          <source>Determine Order of Events</source>
          <target state="translated">イベントの順番を決める</target>
        </trans-unit>
        <trans-unit id="6ad97781dba7865aa1783063debcdb2d537a0ac1" translate="yes" xml:space="preserve">
          <source>Determine Order of Events with Time of the Event</source>
          <target state="translated">イベントの時間でイベントの順番を決める</target>
        </trans-unit>
        <trans-unit id="aa1c5cb64107d746ebde75e0958a8f3a6e27958e" translate="yes" xml:space="preserve">
          <source>Determine the order of events by saving a time stamp with &lt;code&gt;erlang:now/0&lt;/code&gt; when the event occurs.</source>
          <target state="translated">イベントが発生したときに &lt;code&gt;erlang:now/0&lt;/code&gt; でタイムスタンプを保存することにより、イベントの順序を決定します。</target>
        </trans-unit>
        <trans-unit id="24c4a586b3011bab7b0f4e3856359ff4e771deb5" translate="yes" xml:space="preserve">
          <source>Determine the order of events by saving a tuple containing &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;monotonic time&lt;/a&gt;&lt;/code&gt; and a &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;strictly monotonically increasing integer&lt;/a&gt;&lt;/code&gt; as follows:</source>
          <target state="translated">次のように、 &lt;code&gt;&lt;a href=&quot;erlang#monotonic_time-0&quot;&gt;monotonic time&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;strictly monotonically increasing integer&lt;/a&gt;&lt;/code&gt; を含むタプルを保存して、イベントの順序を決定します。</target>
        </trans-unit>
        <trans-unit id="8ae8da9095099ca068859dc483a63073a1a878ab" translate="yes" xml:space="preserve">
          <source>Determine the order of events by saving the integer returned by &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;erlang:unique_integer([monotonic])&lt;/a&gt;&lt;/code&gt; when the event occurs. These integers are strictly monotonically ordered on current runtime system instance corresponding to creation time.</source>
          <target state="translated">イベントの発生時に &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;erlang:unique_integer([monotonic])&lt;/a&gt;&lt;/code&gt; によって返された整数を保存することにより、イベントの順序を決定します。これらの整数は、作成時間に対応する現在のランタイムシステムインスタンスで厳密に単調に並べられます。</target>
        </trans-unit>
        <trans-unit id="fdebe34699b9ee4d99aed0852756308878b8bc53" translate="yes" xml:space="preserve">
          <source>Determine the type of currently executing thread. A positive value indicates a scheduler thread while a negative value or zero indicates another type of thread. Currently the following specific types exist (which may be extended in the future):</source>
          <target state="translated">現在実行中のスレッドのタイプを決定します。正の値はスケジューラースレッドを示し、負の値またはゼロは別のタイプのスレッドを示します。現在、以下のような特定のタイプが存在します (将来的に拡張される可能性があります)。</target>
        </trans-unit>
        <trans-unit id="adde7c24299e69435a0426b9738108140c225ee8" translate="yes" xml:space="preserve">
          <source>Determine where the top directory of your OTP installation is. To find this, start Erlang and enter the following command at the Eshell prompt:</source>
          <target state="translated">OTPインストールのトップディレクトリがどこにあるか確認してください。これを見つけるには、Erlangを起動してEshellプロンプトで以下のコマンドを入力してください。</target>
        </trans-unit>
        <trans-unit id="cac67eecea540c0d8b80ffd58fa1854184fabfdc" translate="yes" xml:space="preserve">
          <source>Determines association parameters for the association(s) specified by &lt;code&gt;assoc_id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assoc_id&lt;/code&gt; で指定された関連付けの関連付けパラメーターを決定します。</target>
        </trans-unit>
        <trans-unit id="077579a209e2327105a616031f529dd3c6552c1e" translate="yes" xml:space="preserve">
          <source>Determines if garbage collection is allowed when performing the operation. If &lt;code&gt;{allow_gc, false}&lt;/code&gt; is passed, and a garbage collection is needed to determine the result of the operation, the operation is aborted (see information on &lt;code&gt;CheckResult&lt;/code&gt; below). The default is to allow garbage collection, that is, &lt;code&gt;{allow_gc, true}&lt;/code&gt;.</source>
          <target state="translated">操作の実行時にガベージコレクションを許可するかどうかを決定します。場合 &lt;code&gt;{allow_gc, false}&lt;/code&gt; 渡され、ガベージコレクションは、操作の結果を決定するために必要とされ、動作が（上の情報を参照中止さ &lt;code&gt;CheckResult&lt;/code&gt; 以下参照）。デフォルトでは、ガベージコレクションが許可されます。 &lt;code&gt;{allow_gc, true}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="53ce682c952fe8edaea9c1423565e6576408341f" translate="yes" xml:space="preserve">
          <source>Determines if the FTP communication is to be verbose or not.</source>
          <target state="translated">FTP通信を冗長にするかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="494dbc80105974dbc6fb49506b454d2e0d793029" translate="yes" xml:space="preserve">
          <source>Determines retransmission time-out parameters, in milliseconds, for the association(s) specified by &lt;code&gt;assoc_id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assoc_id&lt;/code&gt; で指定された関連付けの再送信タイムアウトパラメータをミリ秒単位で決定します。</target>
        </trans-unit>
        <trans-unit id="083ff9a731e189edd69feae97ddfd7141e0e3a9e" translate="yes" xml:space="preserve">
          <source>Determines the buffer space that would be needed by &lt;code&gt;t&lt;/code&gt; if it were encoded into Erlang external format by &lt;code&gt;erl_encode()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erl_encode()&lt;/code&gt; によってErlang外部形式にエンコードされた場合に &lt;code&gt;t&lt;/code&gt; が必要とするバッファースペースを決定します。</target>
        </trans-unit>
        <trans-unit id="77798bfac995896462ccc3ef147a4e0ae7afccf2" translate="yes" xml:space="preserve">
          <source>Determines the default parameters that this socket tries to negotiate with its peer while establishing an association with it. Is to be set after &lt;code&gt;&lt;a href=&quot;#open-1&quot;&gt;open/*&lt;/a&gt;&lt;/code&gt; but before the first &lt;code&gt;&lt;a href=&quot;#connect-4&quot;&gt;connect/*&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;#sctp_initmsg{}&lt;/code&gt; can also be used as ancillary data with the first call of &lt;code&gt;&lt;a href=&quot;#send-3&quot;&gt;send/*&lt;/a&gt;&lt;/code&gt; to a new peer (when a new association is created).</source>
          <target state="translated">このソケットが、ピアとのアソシエーションを確立するときに、ピアとのネゴシエーションを試みるデフォルトのパラメーターを決定します。 &lt;code&gt;&lt;a href=&quot;#open-1&quot;&gt;open/*&lt;/a&gt;&lt;/code&gt; の後、最初の &lt;code&gt;&lt;a href=&quot;#connect-4&quot;&gt;connect/*&lt;/a&gt;&lt;/code&gt; の前に設定されます。 &lt;code&gt;#sctp_initmsg{}&lt;/code&gt; は、新しいピアへの &lt;code&gt;&lt;a href=&quot;#send-3&quot;&gt;send/*&lt;/a&gt;&lt;/code&gt; の最初の呼び出しで補助データとして使用することもできます（新しい関連付けが作成されたとき）。</target>
        </trans-unit>
        <trans-unit id="55a2f53f97f755fd2dbcd1b670c65f1dc001d09f" translate="yes" xml:space="preserve">
          <source>Determines the length of a proper list.</source>
          <target state="translated">適切なリストの長さを決定します。</target>
        </trans-unit>
        <trans-unit id="e2a8218334957019102a6de9a1ec80fa4cca7917" translate="yes" xml:space="preserve">
          <source>Determines the maximum chunk size if message fragmentation is used. If &lt;code&gt;0&lt;/code&gt;, the chunk size is limited by the Path MTU only.</source>
          <target state="translated">メッセージの断片化を使用する場合の最大チャンクサイズを決定します。場合は &lt;code&gt;0&lt;/code&gt; 、チャンクサイズは、パスMTUによって制限されています。</target>
        </trans-unit>
        <trans-unit id="7a2c66961d77ac3d187d28893d33c58111b6ef76" translate="yes" xml:space="preserve">
          <source>Determines the time, in seconds, after which an idle association is automatically closed. &lt;code&gt;0&lt;/code&gt; means that the association is never automatically closed.</source>
          <target state="translated">アイドル状態の関連付けが自動的に閉じられるまでの時間を秒単位で決定します。 &lt;code&gt;0&lt;/code&gt; は、関連付けが自動的に閉じられないことを意味します。</target>
        </trans-unit>
        <trans-unit id="dfea908ad3f80022ee7a6824d7720b3ffbfb7ffe" translate="yes" xml:space="preserve">
          <source>Determines the time-out, in seconds, for flushing unsent data in the &lt;code&gt;close/1&lt;/code&gt; socket call. If the first component of the value tuple is &lt;code&gt;false&lt;/code&gt;, the second is ignored. This means that &lt;code&gt;close/1&lt;/code&gt; returns immediately, not waiting for data to be flushed. Otherwise, the second component is the flushing time-out, in seconds.</source>
          <target state="translated">&lt;code&gt;close/1&lt;/code&gt; ソケットコールで未送信データをフラッシュするためのタイムアウトを秒単位で決定します。値タプルの最初のコンポーネントが &lt;code&gt;false&lt;/code&gt; の場合、2番目のコンポーネントは無視されます。これは、データがフラッシュされるのを待たずに、 &lt;code&gt;close/1&lt;/code&gt; がすぐに戻ることを意味します。それ以外の場合、2番目のコンポーネントは、フラッシュタイムアウト（秒単位）です。</target>
        </trans-unit>
        <trans-unit id="731b42a8df83c81b419568ef3bb86ac028eef737" translate="yes" xml:space="preserve">
          <source>Determines the type of data returned from &lt;code&gt;&lt;a href=&quot;#recv-1&quot;&gt;recv/1,2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#recv-1&quot;&gt;recv/1,2&lt;/a&gt;&lt;/code&gt; から返されるデータのタイプを決定します。</target>
        </trans-unit>
        <trans-unit id="df0c701d33903386824172bab733ce9700d585ae" translate="yes" xml:space="preserve">
          <source>Determines various per-address parameters for the association specified by &lt;code&gt;assoc_id&lt;/code&gt; and the peer address &lt;code&gt;address&lt;/code&gt; (the SCTP protocol supports multi-homing, so more than one address can correspond to a specified association).</source>
          <target state="translated">&lt;code&gt;assoc_id&lt;/code&gt; で指定された関連付けとピアアドレス &lt;code&gt;address&lt;/code&gt; さまざまなアドレスごとのパラメーターを決定します（SCTPプロトコルはマルチホーミングをサポートしているため、指定された関連付けに複数のアドレスが対応できます）。</target>
        </trans-unit>
        <trans-unit id="ff32eb1db11aaa5dba28236c5193d1eda53b59af" translate="yes" xml:space="preserve">
          <source>Determines whether the compiler generates a &lt;code&gt;beam&lt;/code&gt; file with the given options. &lt;code&gt;true&lt;/code&gt; means that a &lt;code&gt;beam&lt;/code&gt; file is generated. &lt;code&gt;false&lt;/code&gt; means that the compiler generates some listing file, returns a binary, or merely checks the syntax of the source code.</source>
          <target state="translated">コンパイラが指定されたオプションで &lt;code&gt;beam&lt;/code&gt; ファイルを生成するかどうかを決定します。 &lt;code&gt;true&lt;/code&gt; は、 &lt;code&gt;beam&lt;/code&gt; ファイルが生成されることを意味します。 &lt;code&gt;false&lt;/code&gt; は、コンパイラーがリスト・ファイルを生成するか、バイナリーを戻すか、または単にソース・コードの構文をチェックすることを意味します。</target>
        </trans-unit>
        <trans-unit id="0fde766270c08bb2c143bb1ffbdcba5107b28312" translate="yes" xml:space="preserve">
          <source>Determines whether the parser generator should give full information about resolved and unresolved parse action conflicts (&lt;code&gt;true&lt;/code&gt;), or only about those conflicts that prevent a parser from being generated from the input grammar (&lt;code&gt;false&lt;/code&gt;, the default).</source>
          <target state="translated">パーサージェネレーターが解決済みおよび未解決の解析アクションの競合に関する完全な情報を提供するか（ &lt;code&gt;true&lt;/code&gt; ）、入力構文からパーサーが生成されないようにする競合のみ（ &lt;code&gt;false&lt;/code&gt; 、デフォルト）を提供するかを決定します。</target>
        </trans-unit>
        <trans-unit id="f5765dc87a449f2a174d7f995a9dba949217fc42" translate="yes" xml:space="preserve">
          <source>Determines which module to call for accessing the file server. The default value is &lt;code&gt;ssh_sftpd_file&lt;/code&gt;, which uses the &lt;code&gt;file&lt;/code&gt; and &lt;code&gt;filelib&lt;/code&gt; APIs to access the standard OTP file server. This option can be used to plug in other file servers.</source>
          <target state="translated">ファイルサーバーにアクセスするために呼び出すモジュールを決定します。デフォルト値は &lt;code&gt;ssh_sftpd_file&lt;/code&gt; で、 &lt;code&gt;file&lt;/code&gt; および &lt;code&gt;filelib&lt;/code&gt; APIを使用して標準のOTPファイルサーバーにアクセスします。このオプションを使用して、他のファイルサーバーを接続できます。</target>
        </trans-unit>
        <trans-unit id="194e22e942d1687afcd0c6b99914e56add4b87df" translate="yes" xml:space="preserve">
          <source>Determining what data to keep after a communication failure is outside the scope of &lt;code&gt;Mnesia&lt;/code&gt;. One approach is to determine which &quot;island&quot; contains most of the nodes. Using option &lt;code&gt;{majority,true}&lt;/code&gt; for critical tables can be a way to ensure that nodes that are not part of a &quot;majority island&quot; cannot update those tables. Notice that this constitutes a reduction in service on the minority nodes. This would be a tradeoff in favor of higher consistency guarantees.</source>
          <target state="translated">通信障害後に保持するデータの決定は、 &lt;code&gt;Mnesia&lt;/code&gt; の範囲外です。1つのアプローチは、どの「アイランド」にほとんどのノードが含まれるかを判別することです。重要なテーブルにオプション &lt;code&gt;{majority,true}&lt;/code&gt; を使用すると、「マジョリティアイランド」の一部ではないノードがこれらのテーブルを更新できないようにすることができます。これにより、少数ノードでのサービスが減少することに注意してください。これは、より高い一貫性の保証を支持するトレードオフになります。</target>
        </trans-unit>
        <trans-unit id="08783d6c0e8f974bda4d0f0259a9bced7702d406" translate="yes" xml:space="preserve">
          <source>Dets organizes data as a linear hash list and the hash list grows gracefully as more data is inserted into the table. Space management on the file is performed by what is called a buddy system. The current implementation keeps the entire buddy system in RAM, which implies that if the table gets heavily fragmented, quite some memory can be used up. The only way to defragment a table is to close it and then open it again with option &lt;code&gt;repair&lt;/code&gt; set to &lt;code&gt;force&lt;/code&gt;.</source>
          <target state="translated">Detsはデータを線形ハッシュリストとして編成します。ハッシュリストは、テーブルにデータが挿入されるにつれて適切に拡大します。ファイルのスペース管理は、いわゆるバディシステムによって実行されます。現在の実装では、バディシステム全体がRAMに保持されます。つまり、テーブルが大幅に断片化されると、かなりのメモリが使い果たされる可能性があります。テーブルを最適化する唯一の方法は、テーブルを閉じてから、オプション &lt;code&gt;repair&lt;/code&gt; を &lt;code&gt;force&lt;/code&gt; に設定して再度開くことです。</target>
        </trans-unit>
        <trans-unit id="d589e63f8dc652ae3141561171bed423eef70c79" translate="yes" xml:space="preserve">
          <source>Dets tables must be opened before they can be updated or read, and when finished they must be properly closed. If a table is not properly closed, Dets automatically repairs the table. This can take a substantial time if the table is large. A Dets table is closed when the process which opened the table terminates. If many Erlang processes (users) open the same Dets table, they share the table. The table is properly closed when all users have either terminated or closed the table. Dets tables are not properly closed if the Erlang runtime system terminates abnormally.</source>
          <target state="translated">Detsのテーブルは、更新や読み込みを行う前に開かなければならず、終了したら適切に閉じなければなりません。テーブルが適切に閉じられていない場合、Detsは自動的にテーブルを修復します。これは、テーブルが大きい場合にはかなりの時間がかかることがあります。Detsのテーブルは、テーブルを開いたプロセスが終了すると閉じます。多くのErlangプロセス(ユーザ)が同じDetsテーブルを開いた場合、テーブルを共有します。すべてのユーザが終了するかテーブルを閉じたときにテーブルは適切に閉じられます。Erlangランタイムシステムが異常終了した場合、Detsテーブルは適切に閉じられません。</target>
        </trans-unit>
        <trans-unit id="c3376a9770679682419b8a2b1d090a087ba2468b" translate="yes" xml:space="preserve">
          <source>Devanagari</source>
          <target state="translated">Devanagari</target>
        </trans-unit>
        <trans-unit id="456219399c5e2e2d6869a33bf75f63ddc05cd05c" translate="yes" xml:space="preserve">
          <source>Developers must always invoke the &lt;code&gt;debug_info/4&lt;/code&gt; function and never rely on the &lt;code&gt;Data&lt;/code&gt; stored in the &lt;code&gt;debug_info&lt;/code&gt; chunk, as it is opaque and may change at any moment. &lt;code&gt;no_debug_info&lt;/code&gt; means that chunk &lt;code&gt;&quot;Dbgi&quot;&lt;/code&gt; is present, but empty.</source>
          <target state="translated">開発者は常に &lt;code&gt;debug_info/4&lt;/code&gt; 関数を呼び出す必要があり、 &lt;code&gt;debug_info&lt;/code&gt; チャンクに格納されている &lt;code&gt;Data&lt;/code&gt; は不透明であり、いつでも変更される可能性があるため、依存しないでください。 &lt;code&gt;no_debug_info&lt;/code&gt; は、チャンク &lt;code&gt;&quot;Dbgi&quot;&lt;/code&gt; は存在するが空であることを意味します。</target>
        </trans-unit>
        <trans-unit id="16446bdea2b981010fbb150f3aca921d223adb77" translate="yes" xml:space="preserve">
          <source>Developers should rely on stacktrace entries only for debugging purposes.</source>
          <target state="translated">開発者は、デバッグ目的のためだけに stacktrace エントリに頼るべきです。</target>
        </trans-unit>
        <trans-unit id="5c2648f2b3ce72e567281814263f70dc09c18843" translate="yes" xml:space="preserve">
          <source>Deviations from the standard</source>
          <target state="translated">標準からの逸脱</target>
        </trans-unit>
        <trans-unit id="cb81d10268def1ddcd9e7ea7d13651d61cbb6e0a" translate="yes" xml:space="preserve">
          <source>Device-Watchdog-Answer</source>
          <target state="translated">Device-Watchdog-Answer</target>
        </trans-unit>
        <trans-unit id="ded250e2e75f5d9108516c8323ac1f5e2d1f881d" translate="yes" xml:space="preserve">
          <source>Device-Watchdog-Request</source>
          <target state="translated">Device-Watchdog-Request</target>
        </trans-unit>
        <trans-unit id="64f91465847372ce990aad877a06eb2ed199d44b" translate="yes" xml:space="preserve">
          <source>Dialyzer GUI version.</source>
          <target state="translated">DialyzerのGUI版。</target>
        </trans-unit>
        <trans-unit id="4147ae5f76685fdd79ca81b8faa42c7d8a8edcc8" translate="yes" xml:space="preserve">
          <source>Dialyzer can also be used directly from Erlang. See &lt;code&gt;&lt;a href=&quot;dialyzer&quot;&gt;dialyzer(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Dialyzerは、Erlangから直接使用することもできます。 &lt;code&gt;&lt;a href=&quot;dialyzer&quot;&gt;dialyzer(3)&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="628db5ea350d60eef0f983d37cdceaf38ea7f18b" translate="yes" xml:space="preserve">
          <source>Dialyzer can be called from the command line, from Erlang, and from a GUI.</source>
          <target state="translated">Dialyzerはコマンドラインからでも、Erlangからでも、GUIからでも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="1d35fb792c27e96d88efcff82ddb3bdb62e1411a" translate="yes" xml:space="preserve">
          <source>Dialyzer can be used directly from Erlang. Both the GUI and the command-line versions are also available. The options are similar to the ones given from the command line, see section &lt;code&gt;&lt;a href=&quot;#command_line&quot;&gt;Using Dialyzer from the Command Line&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Dialyzerは、Erlangから直接使用できます。GUIとコマンドラインバージョンの両方も使用できます。オプションは、コマンドラインから与えられるものと同様です。セクション &lt;code&gt;&lt;a href=&quot;#command_line&quot;&gt;Using Dialyzer from the Command Line&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="d8021a0b92f30253eca0f240a4f65bb36bd5a3b5" translate="yes" xml:space="preserve">
          <source>Dialyzer command-line version.</source>
          <target state="translated">Dialyzer コマンドライン版。</target>
        </trans-unit>
        <trans-unit id="efa6b71916bdfbf21fa4dff08a93a9d1ac41b102" translate="yes" xml:space="preserve">
          <source>Dialyzer has a command-line version for automated use. See &lt;code&gt;&lt;a href=&quot;dialyzer&quot;&gt;dialyzer(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Dialyzerには、自動使用のためのコマンドラインバージョンがあります。 &lt;code&gt;&lt;a href=&quot;dialyzer&quot;&gt;dialyzer(3)&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="da84b06d671a1c03ee7934e17676e95918b41dab" translate="yes" xml:space="preserve">
          <source>Dialyzer has a command-line version for automated use. This section provides a brief description of the options. The same information can be obtained by writing the following in a shell:</source>
          <target state="translated">Dialyzerには、自動で使用するためのコマンドライン版があります。ここでは、オプションについて簡単に説明します。シェルで以下のように記述しても同様の情報が得られます。</target>
        </trans-unit>
        <trans-unit id="21cb03f781be29c029b6c322b9928599481570de" translate="yes" xml:space="preserve">
          <source>Dialyzer has two analysis modes: &quot;Byte Code&quot; and &quot;Source Code&quot;. They are controlled by the buttons in the top-middle part of the main window, under &lt;strong&gt;Analysis Options&lt;/strong&gt;.</source>
          <target state="translated">Dialyzerには、「バイトコード」と「ソースコード」の2つの分析モードがあります。これらは、メインウィンドウの上部中央にある[ &lt;strong&gt;分析オプション]の&lt;/strong&gt;下のボタンによって制御されます。</target>
        </trans-unit>
        <trans-unit id="7a5351192a936d150a3e55c047000d982954a92b" translate="yes" xml:space="preserve">
          <source>Dialyzer is a static analysis tool that identifies software discrepancies, such as definite type errors, code that has become dead or unreachable because of programming error, and unnecessary tests, in single Erlang modules or entire (sets of) applications.</source>
          <target state="translated">Dialyzerは静的解析ツールで、単一のErlangモジュールやアプリケーション全体(セット)の中で、定型エラー、プログラミングエラーのために死んでしまったコードや到達できないコード、不要なテストなどのソフトウェアの不一致を特定することができます。</target>
        </trans-unit>
        <trans-unit id="4856ad4cc2225ddaaa94171f074e8b6f1592a9b9" translate="yes" xml:space="preserve">
          <source>Dialyzer looks if there is an environment variable called &lt;code&gt;DIALYZER_PLT&lt;/code&gt; and places the PLT at this location. If no such variable is set, Dialyzer places the PLT at &lt;code&gt;$HOME/.dialyzer_plt&lt;/code&gt;. The placement can also be specified using the options &lt;code&gt;--plt&lt;/code&gt; or &lt;code&gt;--output_plt&lt;/code&gt;.</source>
          <target state="translated">Dialyzerは、 &lt;code&gt;DIALYZER_PLT&lt;/code&gt; と呼ばれる環境変数があるかどうかを調べ、PLTをこの場所に配置します。そのような変数が設定されていない場合、DialyzerはPLTを &lt;code&gt;$HOME/.dialyzer_plt&lt;/code&gt; ます。配置は、オプション &lt;code&gt;--plt&lt;/code&gt; または &lt;code&gt;--output_plt&lt;/code&gt; を使用して指定することもできます。</target>
        </trans-unit>
        <trans-unit id="a144d9aa62d8283331e0453d170211eae479447c" translate="yes" xml:space="preserve">
          <source>Dialyzer starts its analysis from either debug-compiled BEAM bytecode or from Erlang source code. The file and line number of a discrepancy is reported along with an indication of what the discrepancy is about. Dialyzer bases its analysis on the concept of success typings, which allows for sound warnings (no false positives).</source>
          <target state="translated">DialyzerはデバッグコンパイルされたBEAMバイトコードかErlangソースコードから解析を開始します。不一致のファイルと行番号は、その不一致が何であるかを示す表示とともに報告されます。Dialyzerは成功型の概念に基づいて解析を行います。</target>
        </trans-unit>
        <trans-unit id="10608feb501f52bd03b6ddf98a4210f55bd5af23" translate="yes" xml:space="preserve">
          <source>Dialyzer stores the information of the analyzed functions in a Persistent Lookup Table (PLT), see section &lt;code&gt;&lt;a href=&quot;#plt&quot;&gt;The Persistent Lookup Table&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Dialyzerは、分析された関数の情報を永続的ルックアップテーブル（PLT）に保存します。 &lt;code&gt;&lt;a href=&quot;#plt&quot;&gt;The Persistent Lookup Table&lt;/a&gt;&lt;/code&gt; 」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="494e2325bcc3322adec1ce4f072ada1bb99b4f8d" translate="yes" xml:space="preserve">
          <source>Dialyzer stores the result of an analysis in a Persistent Lookup Table (PLT). The PLT can then be used as a starting point for later analyses. It is recommended to build a PLT with the Erlang/OTP applications that you are using, but also to include your own applications that you are using frequently.</source>
          <target state="translated">ダイアライザーは、分析結果を永続的なルックアップ・テーブル (PLT)に保存します。このPLTは後の分析の出発点として使うことができます。あなたが使っているErlang/OTPアプリケーションと一緒にPLTを構築することをお勧めしますが、頻繁に使っているあなた自身のアプリケーションも含めることもできます。</target>
        </trans-unit>
        <trans-unit id="838da0bec6523e8f2f3da58812e9f1ef6f9a9fc7" translate="yes" xml:space="preserve">
          <source>Dialyzer then reanalyzes the changed files and the files that depend on these files. Notice that this consistency check is performed automatically the next time you run Dialyzer with this PLT. Option &lt;code&gt;--check_plt&lt;/code&gt; is only for doing so without doing any other analysis.</source>
          <target state="translated">次に、Dialyzerは変更されたファイルとこれらのファイルに依存するファイルを再分析します。この整合性チェックは、次回このPLTでDialyzerを実行するときに自動的に実行されることに注意してください。オプション &lt;code&gt;--check_plt&lt;/code&gt; は、他の分析を行わずに行うためのものです。</target>
        </trans-unit>
        <trans-unit id="510a8a06e0d737b5aa0df793bf420e94ca04a8ea" translate="yes" xml:space="preserve">
          <source>Dialyzer, a DIscrepancy AnaLYZer for ERlang programs.</source>
          <target state="translated">Dialyzer,ERlangプログラムのためのDIscrepancy AnaLYZer。</target>
        </trans-unit>
        <trans-unit id="07d09b590e7c65396fb0af8b4e685bc5f08fc46f" translate="yes" xml:space="preserve">
          <source>Diameter AVPs</source>
          <target state="translated">直径AVP</target>
        </trans-unit>
        <trans-unit id="595221e9670fe2806542b1909df3759ecc51c609" translate="yes" xml:space="preserve">
          <source>Diameter Answer Processing</source>
          <target state="translated">ダイアモンドアンサー処理</target>
        </trans-unit>
        <trans-unit id="492ddd4795919309b00e3cb99b03e084593644b2" translate="yes" xml:space="preserve">
          <source>Diameter Application Compliance</source>
          <target state="translated">直径アプリケーションのコンプライアンス</target>
        </trans-unit>
        <trans-unit id="233b44598089548f0cb439d8260d802c42d8d926" translate="yes" xml:space="preserve">
          <source>Diameter Base Protocol AVPs</source>
          <target state="translated">直径ベースプロトコルAVP</target>
        </trans-unit>
        <trans-unit id="95745ee3caa29c97347231fc7062812cc1cabc48" translate="yes" xml:space="preserve">
          <source>Diameter Command Naming Conventions</source>
          <target state="translated">直径コマンドの命名規則</target>
        </trans-unit>
        <trans-unit id="f8e96b9bc84f819f28cac97e61334c92e49b6d2c" translate="yes" xml:space="preserve">
          <source>Diameter Header</source>
          <target state="translated">直径ヘッダー</target>
        </trans-unit>
        <trans-unit id="fb85483589f2a0d213806104d451a8bbb89a7a0f" translate="yes" xml:space="preserve">
          <source>Diameter Message Processing</source>
          <target state="translated">直径メッセージ処理</target>
        </trans-unit>
        <trans-unit id="cf7b0cf80edb413895d382c150dbc8ff733c12d1" translate="yes" xml:space="preserve">
          <source>Diameter Path Authorization</source>
          <target state="translated">径路認可</target>
        </trans-unit>
        <trans-unit id="07688cd69d8a46c450445f8b85d3d9fe42582147" translate="yes" xml:space="preserve">
          <source>Diameter Peer Discovery</source>
          <target state="translated">ダイアモンドピアディスカバリー</target>
        </trans-unit>
        <trans-unit id="de4ce74cc36fc385d21c9d15a70dc2b2131b85a5" translate="yes" xml:space="preserve">
          <source>Diameter Peers</source>
          <target state="translated">直径のピア</target>
        </trans-unit>
        <trans-unit id="305ef1f7771347650724f9757c11f8edfa0beab3" translate="yes" xml:space="preserve">
          <source>Diameter Protocol</source>
          <target state="translated">直径プロトコル</target>
        </trans-unit>
        <trans-unit id="2877c6abfd87eef90c657292849be45de67435cd" translate="yes" xml:space="preserve">
          <source>Diameter Protocol-Related Configurable Parameters</source>
          <target state="translated">直径プロトコル関連の設定可能パラメータ</target>
        </trans-unit>
        <trans-unit id="41c8a11b72baca5ae179f4f1fcd33229819687ce" translate="yes" xml:space="preserve">
          <source>Diameter Request Routing Overview</source>
          <target state="translated">直径リクエストルーティングの概要</target>
        </trans-unit>
        <trans-unit id="32dcfb391752d0e475c6c43a642bd9b52b1747e5" translate="yes" xml:space="preserve">
          <source>Diameter User Sessions</source>
          <target state="translated">ダイアモンドユーザーセッション</target>
        </trans-unit>
        <trans-unit id="803d3673bba0aa163b1bd90094ca9f273861f900" translate="yes" xml:space="preserve">
          <source>Diameter applications to which the transport should be restricted. Defaults to all applications configured on the service in question. Applications not configured on the service in question are ignored.</source>
          <target state="translated">トランスポートを制限する必要がある Diameter アプリケーション。デフォルトは、対象のサービスで構成されているすべてのアプリケーションに設定されます。対象のサービスで構成されていないアプリケーションは無視されます。</target>
        </trans-unit>
        <trans-unit id="a6fa8fdf84e2a98961b3740684166200004f3961" translate="yes" xml:space="preserve">
          <source>Diameter dictionary compilation.</source>
          <target state="translated">直径の辞書をコンパイルします。</target>
        </trans-unit>
        <trans-unit id="2addd157d30e019e6a4e7e180d209a97e4c55ca4" translate="yes" xml:space="preserve">
          <source>Diameter transport interface.</source>
          <target state="translated">直径トランスポートインターフェース。</target>
        </trans-unit>
        <trans-unit id="43b3cac5780593e4e3d7bc6239e48a349da15068" translate="yes" xml:space="preserve">
          <source>Diameter transport over SCTP.</source>
          <target state="translated">SCTP上での直径輸送。</target>
        </trans-unit>
        <trans-unit id="acdb14fc245c23daf5748b9e75a3fe1897608e0b" translate="yes" xml:space="preserve">
          <source>Diameter transport over TCP.</source>
          <target state="translated">TCP 上での直径輸送。</target>
        </trans-unit>
        <trans-unit id="7b58dbac06038c0f0528d8a4e1d07f33a1316add" translate="yes" xml:space="preserve">
          <source>Dictionary as returned by &lt;code&gt;&lt;a href=&quot;#new-0&quot;&gt;new/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#new-0&quot;&gt;new/0&lt;/a&gt;&lt;/code&gt; によって返される辞書。</target>
        </trans-unit>
        <trans-unit id="87d89e495b6fa6aeacaa5f11b3b341c160db5603" translate="yes" xml:space="preserve">
          <source>Dictionary interface of the diameter application.</source>
          <target state="translated">直径アプリケーションの辞書インターフェース。</target>
        </trans-unit>
        <trans-unit id="8e8972c07f023589103328ced29174f0a45e8b6f" translate="yes" xml:space="preserve">
          <source>Dictionary module generation also results in a hrl file that defines records for the messages and Grouped AVPs defined by the dictionary, these records being what a user of the diameter application sends and receives, modulo other possible formats as discussed in &lt;code&gt;diameter_app(3)&lt;/code&gt;. These records and the underlying Erlang data types corresponding to Diameter data formats are discussed in &lt;code&gt;&lt;a href=&quot;#MESSAGE_RECORDS&quot;&gt;MESSAGE RECORDS&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#DATA_TYPES&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt; respectively. The generated hrl also contains macro definitions for the possible values of AVPs of type Enumerated.</source>
          <target state="translated">ディクショナリモジュールの生成により、hrlファイルも作成されます。これは、メッセージのレコードとディクショナリによって定義されたグループ化されたAVPを定義します。これらのレコードは、 &lt;code&gt;diameter_app(3)&lt;/code&gt; で説明されている他の可能な形式を法として、diameterアプリケーションのユーザーが送受信するものです。これらのレコードと、Diameterデータ形式に対応する基になるErlangデータ型については、それぞれ &lt;code&gt;&lt;a href=&quot;#MESSAGE_RECORDS&quot;&gt;MESSAGE RECORDS&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#DATA_TYPES&quot;&gt;DATA TYPES&lt;/a&gt;&lt;/code&gt; で説明します。生成されたhrlには、EnumeratedタイプのAVPの可能な値のマクロ定義も含まれています。</target>
        </trans-unit>
        <trans-unit id="6883ae1d8644737fc04ee8e419ba151be5af18e0" translate="yes" xml:space="preserve">
          <source>Different databases may also support creating of procedures that contains more than one SQL query. For example, the following SQLServer-specific statement creates a procedure that returns a result set containing information about employees that work at the department and a result set listing the customers of that department.</source>
          <target state="translated">異なるデータベースでは、複数のSQLクエリを含むプロシージャの作成もサポートしている場合があります。例えば、以下のSQLServer固有のステートメントは、その部門で働く従業員に関する情報を含む結果セットと、その部門の顧客のリストを含む結果セットを返すプロシージャを作成します。</target>
        </trans-unit>
        <trans-unit id="5612af3537f6d424dafb548b8d0f2861de1fab1e" translate="yes" xml:space="preserve">
          <source>Different definitions exist for the week of the year. This module contains a week of the year implementation conforming to the ISO 8601 standard. As the week number for a specified date can fall on the previous, the current, or on the next year, it is important to specify both the year and the week number. Functions &lt;code&gt;iso_week_number/0&lt;/code&gt; and &lt;code&gt;iso_week_number/1&lt;/code&gt; return a tuple of the year and the week number.</source>
          <target state="translated">年間の週ごとに異なる定義が存在します。このモジュールには、ISO 8601規格に準拠した1週間の実装が含まれています。指定した日付の週番号は、前年、現在、または翌年になる可能性があるため、年と週番号の両方を指定することが重要です。関数 &lt;code&gt;iso_week_number/0&lt;/code&gt; および &lt;code&gt;iso_week_number/1&lt;/code&gt; は、年と週番号のタプルを返します。</target>
        </trans-unit>
        <trans-unit id="a780becc239b49b491b75f64fbceae7f3572be1d" translate="yes" xml:space="preserve">
          <source>Different operating systems and tools support different encodings. For example, Linux and MacOS X have chosen the UTF-8 encoding, which is backward compatible with 7-bit ASCII and therefore affects programs written in plain English the least. Windows supports a limited version of UTF-16, namely all the code planes where the characters can be stored in one single 16-bit entity, which includes most living languages.</source>
          <target state="translated">オペレーティングシステムやツールによってサポートしているエンコーディングは異なります。た と えば、Linux と MacOS X は UTF-8 エン コ ーデ ィ ン グ を選択 し てお り 、 こ れは 7 ビ ッ ト ASCII と の下位互換性があ る ため、 プ レーンイングリッシュで書かれたプ ログ ラ ムへの影響が最も少な く な り ます。Windows は UTF-16 の限定バージ ョ ンに対応 し てお り 、 すなわち、 キ ャ ラ ク タ が 1 個の 16 ビ ッ ト エン テ ィ テ ィ テ ィ の中に格納で き る すべての コ ー ド プ レーンに対応 し てお り 、 こ れにはほとんどの生きた言語が含まれています。</target>
        </trans-unit>
        <trans-unit id="2e33264a68973aa9eaf05e50aaef661eca484cb2" translate="yes" xml:space="preserve">
          <source>Different parts of the system will be handled differently regarding compatibility. The following items describe how different parts of the system are handled.</source>
          <target state="translated">互換性に関しては、システムの異なる部分の扱いが異なります。以下の項目では、システムの異なる部分がどのように扱われるかを説明します。</target>
        </trans-unit>
        <trans-unit id="aed32969a09a784815b2c2d1e9d839fe9acde992" translate="yes" xml:space="preserve">
          <source>Different runtime system instances will use different unspecified points in time as base for their Erlang monotonic clocks. That is, it is &lt;strong&gt;pointless&lt;/strong&gt; comparing monotonic times from different runtime system instances. Different runtime system instances can also place this unspecified point in time different relative runtime system start. It can be placed in the future (time at start is a negative value), the past (time at start is a positive value), or the runtime system start (time at start is zero). The monotonic time at runtime system start can be retrieved by calling &lt;code&gt;&lt;a href=&quot;#system_info_start_time&quot;&gt;erlang:system_info(start_time)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">異なるランタイムシステムインスタンスは、指定されていない異なる時点をErlang単調時計のベースとして使用します。つまり、異なるランタイムシステムインスタンスからの単調な時間を比較しても&lt;strong&gt;意味&lt;/strong&gt;があり&lt;strong&gt;ません&lt;/strong&gt;。異なるランタイムシステムインスタンスは、この未指定の特定の時点で、異なる相対ランタイムシステムを起動することもできます。未来（開始時刻は負の値）、過去（開始時刻は正の値）、またはランタイムシステムの開始（開始時刻はゼロ）に配置できます。実行時のシステム開始時の単調な時間は、 &lt;code&gt;&lt;a href=&quot;#system_info_start_time&quot;&gt;erlang:system_info(start_time)&lt;/a&gt;&lt;/code&gt; を呼び出すことで取得できます。</target>
        </trans-unit>
        <trans-unit id="3b3df3df2ca9d872263d17d4c6946b215d1cf6da" translate="yes" xml:space="preserve">
          <source>Different transaction managers employ different strategies to satisfy the isolation property. &lt;code&gt;Mnesia&lt;/code&gt; uses the standard technique of two phase locking. That is, locks are set on records before they are read or written. &lt;code&gt;Mnesia&lt;/code&gt; uses the following lock types:</source>
          <target state="translated">トランザクションマネージャーが異なれば、分離特性を満たすために異なる戦略が採用されます。 &lt;code&gt;Mnesia&lt;/code&gt; は、2フェーズロックの標準的な手法を使用しています。つまり、読み取りまたは書き込みの前に、レコードにロックが設定されます。 &lt;code&gt;Mnesia&lt;/code&gt; は次のロックタイプを使用します。</target>
        </trans-unit>
        <trans-unit id="cc94430bcd2bf3633999f075c4aa5f4c6e00a26c" translate="yes" xml:space="preserve">
          <source>Digital signatures &lt;code&gt;&lt;a href=&quot;http://csrc.nist.gov/publications/drafts/fips186-3/fips_186-3.pdf&quot;&gt;Digital Signature Standard (DSS)&lt;/a&gt;&lt;/code&gt; and&lt;code&gt;&lt;a href=&quot;http://csrc.nist.gov/groups/STM/cavp/documents/dss2/ecdsa2vs.pdf&quot;&gt; Elliptic Curve Digital Signature Algorithm (ECDSA) &lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">デジタル署名 &lt;code&gt;&lt;a href=&quot;http://csrc.nist.gov/publications/drafts/fips186-3/fips_186-3.pdf&quot;&gt;Digital Signature Standard (DSS)&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;http://csrc.nist.gov/groups/STM/cavp/documents/dss2/ecdsa2vs.pdf&quot;&gt; Elliptic Curve Digital Signature Algorithm (ECDSA) &lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f2d1527ad440c65c78936fafa709eaae0056a11c" translate="yes" xml:space="preserve">
          <source>Digraph &lt;code&gt;G&lt;/code&gt; is traversed in a breadth-first manner, and the first found path is returned.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; は幅優先でトラバースされ、最初に見つかったパスが返されます。</target>
        </trans-unit>
        <trans-unit id="70e541d54d4571932b5458248248c88322d737b3" translate="yes" xml:space="preserve">
          <source>Digraph &lt;code&gt;G&lt;/code&gt; is traversed in a depth-first manner, and the first found path is returned.</source>
          <target state="translated">有向グラフ &lt;code&gt;G&lt;/code&gt; は深さ優先でトラバースされ、最初に見つかったパスが返されます。</target>
        </trans-unit>
        <trans-unit id="93dca2efcca5c19009fb242e9a74ae8b5859f1a9" translate="yes" xml:space="preserve">
          <source>Digraphs can be annotated with more information. Such information can be attached to the vertices and to the edges of the digraph. An annotated digraph is called a &lt;strong&gt;labeled digraph&lt;/strong&gt;, and the information attached to a vertex or an edge is called a &lt;strong id=&quot;label&quot;&gt;label&lt;/strong&gt;.</source>
          <target state="translated">ダイグラフには、より多くの情報で注釈を付けることができます。このような情報は、頂点とダイグラフのエッジに添付できます。注釈付きダイグラフは&lt;strong&gt;ラベル&lt;/strong&gt;付きダイグラフと呼ばれ、頂点またはエッジに添付された情報は&lt;strong id=&quot;label&quot;&gt;ラベル&lt;/strong&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="2bdb5f32ccbfb6d3d1a3147e65f438a4ec636024" translate="yes" xml:space="preserve">
          <source>Digraphs can be annotated with more information. Such information can be attached to the vertices and to the edges of the digraph. An annotated digraph is called a &lt;strong&gt;labeled digraph&lt;/strong&gt;, and the information attached to a vertex or an edge is called a &lt;strong id=&quot;label&quot;&gt;label&lt;/strong&gt;. Labels are Erlang terms.</source>
          <target state="translated">ダイグラフには、より多くの情報で注釈を付けることができます。このような情報は、頂点とダイグラフのエッジに添付できます。注釈付きダイグラフは&lt;strong&gt;ラベル&lt;/strong&gt;付きダイグラフと呼ばれ、頂点またはエッジに添付された情報は&lt;strong id=&quot;label&quot;&gt;ラベル&lt;/strong&gt;と呼ばれます。ラベルはErlang用語です。</target>
        </trans-unit>
        <trans-unit id="a5e38d6b903ccda016759402d329e33a83548707" translate="yes" xml:space="preserve">
          <source>Dir :: &lt;code&gt;&lt;a href=&quot;#type-filename&quot;&gt;filename()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">Dir :: &lt;code&gt;&lt;a href=&quot;#type-filename&quot;&gt;filename()&lt;/a&gt;&lt;/code&gt; 、</target>
        </trans-unit>
        <trans-unit id="ad2c0ce42ca198c5519523a969e131463983adf5" translate="yes" xml:space="preserve">
          <source>Directed graphs.</source>
          <target state="translated">有向グラフ。</target>
        </trans-unit>
        <trans-unit id="243cff888dae22be4e6f01a534ee25469aa6a683" translate="yes" xml:space="preserve">
          <source>Directly by using module &lt;code&gt;seq_trace&lt;/code&gt;.</source>
          <target state="translated">モジュール &lt;code&gt;seq_trace&lt;/code&gt; を使用して直接。</target>
        </trans-unit>
        <trans-unit id="c9ecc417c112f66b0e63b1f01eb83e8458007c11" translate="yes" xml:space="preserve">
          <source>Directories containing Erlang modules to be included in a code coverage test must exist in the code server path. Otherwise, the Cover tool fails to recompile the modules. It is not sufficient to specify these directories in the cover specification file for &lt;code&gt;Common Test&lt;/code&gt;.</source>
          <target state="translated">コードカバレッジテストに含めるErlangモジュールを含むディレクトリは、コードサーバーパスに存在する必要があります。それ以外の場合、カバーツールはモジュールの再コンパイルに失敗します。 &lt;code&gt;Common Test&lt;/code&gt; のカバー仕様ファイルでこれらのディレクトリを指定するだけでは不十分です。</target>
        </trans-unit>
        <trans-unit id="5ab4b58d628fe3f03e24fefd9e79c9cd5305431f" translate="yes" xml:space="preserve">
          <source>Directories passed to &lt;code&gt;Common Test&lt;/code&gt; can have either relative or absolute paths.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; に渡されるディレクトリには、相対パスまたは絶対パスのいずれかを含めることができます。</target>
        </trans-unit>
        <trans-unit id="1f6cb58a29cb92f80451b089ee8dcc6df2383846" translate="yes" xml:space="preserve">
          <source>Directory &lt;code&gt;Dir&lt;/code&gt; is to be added to the code path.</source>
          <target state="translated">ディレクトリ &lt;code&gt;Dir&lt;/code&gt; をコードパスに追加します。</target>
        </trans-unit>
        <trans-unit id="37da76e6522f5231ccef0cde70e3579a65e938f9" translate="yes" xml:space="preserve">
          <source>Directory Listings</source>
          <target state="translated">ディレクトリリスティング</target>
        </trans-unit>
        <trans-unit id="406373555c5db06a112c39c5633ef075b4eb9b4c" translate="yes" xml:space="preserve">
          <source>Directory names not starting with &lt;code&gt;/&lt;/code&gt; are assumed to be relative the current working directory.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; で始まらないディレクトリ名は、現在の作業ディレクトリに相対的であると見なされます。</target>
        </trans-unit>
        <trans-unit id="69c1b321a3a3f10dbb43a3ed72a72c42e77de3a4" translate="yes" xml:space="preserve">
          <source>Directory names should not be capitalized.</source>
          <target state="translated">ディレクトリ名は大文字にしてはいけません。</target>
        </trans-unit>
        <trans-unit id="a65c287fbc14b015d2a237c8c17c5222537b05bb" translate="yes" xml:space="preserve">
          <source>Directory names starting with &lt;code&gt;/&lt;/code&gt; are assumed to be absolute path names.</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; で始まるディレクトリ名は、絶対パス名と見なされます。</target>
        </trans-unit>
        <trans-unit id="f87cbc37768d43bb57fe075ed3cecacb04c89d4c" translate="yes" xml:space="preserve">
          <source>Directory separators must always be written as &lt;code&gt;/&lt;/code&gt;, even on Windows.</source>
          <target state="translated">Windowsであっても、ディレクトリセパレータは常に &lt;code&gt;/&lt;/code&gt; として記述する必要があります。</target>
        </trans-unit>
        <trans-unit id="caac219f13e886f255200fff4fa6a28d1f9a338f" translate="yes" xml:space="preserve">
          <source>Directory where the profile can save persistent data. If omitted, all cookies are treated as session cookies.</source>
          <target state="translated">プロファイルが永続的なデータを保存できるディレクトリ。省略した場合、すべてのクッキーはセッションクッキーとして扱われます。</target>
        </trans-unit>
        <trans-unit id="8dde8a410b2cef8745dc367bbeecd37822cd25d7" translate="yes" xml:space="preserve">
          <source>Dirty IO schedulers will have scheduler identifiers in the range &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt;&lt;code&gt;+&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&amp;lt; SchedulerId =&amp;lt; erlang:system_info(schedulers) + erlang:system_info(dirty_cpu_schedulers) +&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt;erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ダーティIOスケジューラは、範囲内のスケジューラ識別子を有することになる &lt;code&gt;&lt;a href=&quot;#system_info_schedulers&quot;&gt;erlang:system_info(schedulers)&lt;/a&gt;&lt;/code&gt; &lt;code&gt;+&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#system_info_dirty_cpu_schedulers&quot;&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&amp;lt; SchedulerId =&amp;lt; erlang:system_info(schedulers) + erlang:system_info(dirty_cpu_schedulers) +&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#system_info_dirty_io_schedulers&quot;&gt;erlang:system_info(dirty_io_schedulers)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f776c53728b9a78e34582415361299583c2f7ae1" translate="yes" xml:space="preserve">
          <source>Dirty NIF support is available only when the emulator is configured with dirty scheduler support. As of ERTS version 9.0, dirty scheduler support is enabled by default on the runtime system with SMP support. The Erlang runtime without SMP support does &lt;strong&gt;not&lt;/strong&gt; support dirty schedulers even when the dirty scheduler support is explicitly enabled. To check at runtime for the presence of dirty scheduler threads, code can use the &lt;code&gt;&lt;a href=&quot;#enif_system_info&quot;&gt;enif_system_info()&lt;/a&gt;&lt;/code&gt; API function.</source>
          <target state="translated">ダーティNIFサポートは、エミュレータがダーティスケジューラサポートで構成されている場合にのみ使用できます。ERTSバージョン9.0以降、SMPをサポートするランタイムシステムでは、ダーティスケジューラのサポートがデフォルトで有効になっています。SMPサポートのないErlangランタイムは、ダーティスケジューラサポートが明示的に有効になっている場合でも、ダーティスケジューラをサポートしませ&lt;strong&gt;ん&lt;/strong&gt;。実行時にダーティスケジューラスレッドの存在をチェックするために、コードは &lt;code&gt;&lt;a href=&quot;#enif_system_info&quot;&gt;enif_system_info()&lt;/a&gt;&lt;/code&gt; API関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="a963571ffbcc2363316cb4131267d7bb18e560a3" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:all_keys/1&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;mnesia:all_keys/1&lt;/code&gt; のダーティな同等物。</target>
        </trans-unit>
        <trans-unit id="6730f17243320e93c4820bdb3347a524eb6f76be" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:delete/3&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;mnesia:delete/3&lt;/code&gt; のダーティな同等物。</target>
        </trans-unit>
        <trans-unit id="4803a712add1388359b074286a97c71ac03a18ec" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:delete_object/3&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;mnesia:delete_object/3&lt;/code&gt; のダーティな同等物。</target>
        </trans-unit>
        <trans-unit id="9819320bcc19465d5dbe72db932ce31e969e4f47" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:index_match_object/4&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;mnesia:index_match_object/4&lt;/code&gt; のダーティな同等物。</target>
        </trans-unit>
        <trans-unit id="ae95fb440f9f0e27b1eda44b2c952a05213b976d" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:index_read/3&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;mnesia:index_read/3&lt;/code&gt; のダーティな同等物。</target>
        </trans-unit>
        <trans-unit id="064b2b60b7cec261b9641cfb6150d6b98fa5d361" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:match_object/3&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;mnesia:match_object/3&lt;/code&gt; のダーティな同等物。</target>
        </trans-unit>
        <trans-unit id="d027124011b6d5898913193904cb44d1bf7613d9" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:read/3&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;mnesia:read/3&lt;/code&gt; と同等のダーティ。</target>
        </trans-unit>
        <trans-unit id="8d5501c6a210dcc1de9608082f9d1e416032c68f" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:select/2&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;mnesia:select/2&lt;/code&gt; のダーティな同等物。</target>
        </trans-unit>
        <trans-unit id="18d67f692bf5bd1046b2d5956ee8e53a74a3f5c6" translate="yes" xml:space="preserve">
          <source>Dirty equivalent of the function &lt;code&gt;mnesia:write/3&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;mnesia:write/3&lt;/code&gt; のダーティな同等物。</target>
        </trans-unit>
        <trans-unit id="72b8a4c5a40ea145e7c00b5e635182a9120bdea4" translate="yes" xml:space="preserve">
          <source>Dirty operation are often useful, for example, in a datagram routing application where &lt;code&gt;Mnesia&lt;/code&gt; stores the routing table, and it is time consuming to start a whole transaction every time a packet is received. &lt;code&gt;Mnesia&lt;/code&gt; has therefore functions that manipulate tables without using transactions. This alternative to processing is known as a dirty operation. However, notice the trade-off in avoiding the overhead of transaction processing:</source>
          <target state="translated">たとえば、 &lt;code&gt;Mnesia&lt;/code&gt; がルーティングテーブルを格納するデータグラムルーティングアプリケーションでは、ダーティー操作が役立つことが多く、パケットを受信するたびにトランザクション全体を開始するには時間がかかります。したがって &lt;code&gt;Mnesia&lt;/code&gt; には、トランザクションを使用せずにテーブルを操作する関数があります。この処理の代替方法は、ダーティオペレーションと呼ばれます。ただし、トランザクション処理のオーバーヘッドを回避する上でのトレードオフに注意してください。</target>
        </trans-unit>
        <trans-unit id="136014a72498b6b9b3b61aa360cdefc56a3dc1d1" translate="yes" xml:space="preserve">
          <source>Dirty operations</source>
          <target state="translated">ダーティオペレーション</target>
        </trans-unit>
        <trans-unit id="c4275fbd897af2315c2118648b50df4435cebdd9" translate="yes" xml:space="preserve">
          <source>Dirty operations always contain only one update and thus no activity event is sent.</source>
          <target state="translated">ダーティ操作は常に1つの更新しか含まれていないため、アクティビティイベントは送信されません。</target>
        </trans-unit>
        <trans-unit id="aa50ffb6abfb356d785f0330d2d417505b69d837" translate="yes" xml:space="preserve">
          <source>Dirty operations are written to disc if they are performed on a table of type &lt;code&gt;disc_copies&lt;/code&gt; or type &lt;code&gt;disc_only_copies&lt;/code&gt;. &lt;code&gt;Mnesia&lt;/code&gt; also ensures that all replicas of a table are updated if a dirty write operation is performed on a table.</source>
          <target state="translated">タイプが &lt;code&gt;disc_copies&lt;/code&gt; またはタイプが &lt;code&gt;disc_only_copies&lt;/code&gt; のテーブルで実行される場合、ダーティー操作はディスクに書き込まれます。 &lt;code&gt;Mnesia&lt;/code&gt; はまた、ダーティ書き込み操作がテーブルで実行された場合、テーブルのすべてのレプリカが更新されることを保証します。</target>
        </trans-unit>
        <trans-unit id="853438de86dac28cac55a35b9641e0bd67c6f648" translate="yes" xml:space="preserve">
          <source>DirtyCPUSchedulersOnline) -&amp;gt;</source>
          <target state="translated">DirtyCPUSchedulersOnline）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="46015467f190d633f418a569f23109bb67051807" translate="yes" xml:space="preserve">
          <source>Disable automatic gc of the mib server cache.</source>
          <target state="translated">mibサーバーキャッシュの自動gcを無効にします。</target>
        </trans-unit>
        <trans-unit id="76bd3c5c018e2a61d5610b964b32a5deefa1bba1" translate="yes" xml:space="preserve">
          <source>Disable the auto-compilation feature (similar to &lt;code&gt;ct_run -no_auto_compile&lt;/code&gt;).</source>
          <target state="translated">自動コンパイル機能を無効にします（ &lt;code&gt;ct_run -no_auto_compile&lt;/code&gt; と同様）。</target>
        </trans-unit>
        <trans-unit id="197dd9bc80386b0df3c823b696ec70695af97e98" translate="yes" xml:space="preserve">
          <source>Disable the mib server cache.</source>
          <target state="translated">mib サーバーキャッシュを無効にします。</target>
        </trans-unit>
        <trans-unit id="73f00fae8033ed7aa00f57da49d8f4afc54218e6" translate="yes" xml:space="preserve">
          <source>Disables SAC delay</source>
          <target state="translated">SACの遅延を無効にします。</target>
        </trans-unit>
        <trans-unit id="5b110f63f186be3c7c93c8e0719d6c40201f32e3" translate="yes" xml:space="preserve">
          <source>Disables all allocators that can be disabled.</source>
          <target state="translated">無効化可能なすべてのロケータを無効化します。</target>
        </trans-unit>
        <trans-unit id="b1603559997a45d4ab53133ad023c7c6fbd13e90" translate="yes" xml:space="preserve">
          <source>Disables all breakpoints.</source>
          <target state="translated">すべてのブレークポイントを無効にします。</target>
        </trans-unit>
        <trans-unit id="f0f1900b113d92659c235dfcb60389ba9de8dc08" translate="yes" xml:space="preserve">
          <source>Disables automatic Path MTU discovery</source>
          <target state="translated">パスMTUの自動検出を無効にします。</target>
        </trans-unit>
        <trans-unit id="5ab25d2aff103bc762d22d0efc7b35138f46952e" translate="yes" xml:space="preserve">
          <source>Disables automatic escaping of special HTML characters. See the &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;Logging chapter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">特殊なHTML文字の自動エスケープを無効にします。 &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;Logging chapter&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="7593253a728d7cf78461e61c33450c17030aafde" translate="yes" xml:space="preserve">
          <source>Disables busy port message queue functionality. For more information, see &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_busy_msgq_limits&quot;&gt;erl_driver:erl_drv_busy_msgq_limits&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ビジーポートメッセージキュー機能を無効にします。詳細については、 &lt;code&gt;&lt;a href=&quot;erl_driver#erl_drv_busy_msgq_limits&quot;&gt;erl_driver:erl_drv_busy_msgq_limits&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="37be9cbf19e8c4d94f4cdadb90d4e87688cdbc77" translate="yes" xml:space="preserve">
          <source>Disables features that cannot be enabled while creating an allocator configuration with &lt;code&gt;erts_alloc_config(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erts_alloc_config(3)&lt;/code&gt; を使用してアロケータ構成を作成しているときに有効にできない機能を無効にします。</target>
        </trans-unit>
        <trans-unit id="a614d492ceaa156affdf5d4bdefafec5576bcceb" translate="yes" xml:space="preserve">
          <source>Disables heartbeat</source>
          <target state="translated">心臓の鼓動を無効にする</target>
        </trans-unit>
        <trans-unit id="ef9f0619eb9caef8a34d63963c121785d1466e86" translate="yes" xml:space="preserve">
          <source>Disables optimization that can malfunction if &quot;Special start-of-pattern items&quot; are present in the regular expression. A typical example would be when matching &quot;DEFABC&quot; against &quot;(*COMMIT)ABC&quot;, where the start optimization of PCRE would skip the subject up to &quot;A&quot; and never realize that the (*COMMIT) instruction is to have made the matching fail. This option is only relevant if you use &quot;start-of-pattern items&quot;, as discussed in section &lt;code&gt;&lt;a href=&quot;#regexp_syntax_details&quot;&gt;PCRE Regular Expression Details&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">正規表現に「特別なパターンの開始項目」が存在する場合に誤動作する可能性がある最適化を無効にします。典型的な例は、 &quot;DEFABC&quot;を &quot;（* COMMIT）ABC&quot;と照合する場合です。この場合、PCREの開始最適化は、サブジェクトを &quot;A&quot;までスキップし、（* COMMIT）命令が不合格。このオプションは、セクション &lt;code&gt;&lt;a href=&quot;#regexp_syntax_details&quot;&gt;PCRE Regular Expression Details&lt;/a&gt;&lt;/code&gt; 説明されているように、「パターン開始項目」を使用する場合にのみ関連します。</target>
        </trans-unit>
        <trans-unit id="c404f858a3fcd9bae301bbd98fe536b9fe7a1a7c" translate="yes" xml:space="preserve">
          <source>Disables the &lt;code&gt;os_sup&lt;/code&gt; service. Needed on Solaris only.</source>
          <target state="translated">&lt;code&gt;os_sup&lt;/code&gt; サービスを無効にします。Solarisでのみ必要です。</target>
        </trans-unit>
        <trans-unit id="d93c1136104c42e8c7c1536818cabe58700fba0c" translate="yes" xml:space="preserve">
          <source>Disables the automatic test suite compilation feature (described earlier).</source>
          <target state="translated">テストスイートの自動コンパイル機能を無効にします(前述)。</target>
        </trans-unit>
        <trans-unit id="91d420658fc46ab94b4ff3545d61fc2d3c8cde2c" translate="yes" xml:space="preserve">
          <source>Disables the default handler. This allows another application to add its own default handler.</source>
          <target state="translated">デフォルトのハンドラを無効にします。これにより、別のアプリケーションが独自のデフォルトハンドラを追加できるようになります。</target>
        </trans-unit>
        <trans-unit id="133d6494dcd6c46493ddf1685293a36623e293f5" translate="yes" xml:space="preserve">
          <source>Disables the sticky directory facility of the Erlang code server; see &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">Erlangコードサーバーのスティッキディレクトリ機能を無効にします。 &lt;code&gt;code(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="e8303ac8a6039acc7c220b67fab46629f1b907fc" translate="yes" xml:space="preserve">
          <source>Disables the use of numbered capturing parentheses in the pattern. Any opening parenthesis that is not followed by &lt;code&gt;?&lt;/code&gt; behaves as if it is followed by &lt;code&gt;?:&lt;/code&gt;. Named parentheses can still be used for capturing (and they acquire numbers in the usual way). There is no equivalent option in Perl.</source>
          <target state="translated">パターン内の番号付きキャプチャ括弧の使用を無効にします。 &lt;code&gt;?&lt;/code&gt; が続かない左括弧 &lt;code&gt;?:&lt;/code&gt; が後に続くかのように動作します。名前付き括弧は引き続きキャプチャに使用できます（通常の方法で番号を取得します）。Perlには同等のオプションはありません。</target>
        </trans-unit>
        <trans-unit id="62c3939a2d0370b4df3b4f65b029525d3f10ac74" translate="yes" xml:space="preserve">
          <source>Disables time correction.</source>
          <target state="translated">時刻補正を無効にします。</target>
        </trans-unit>
        <trans-unit id="f747dca83f7e533bc9f21ec112a00de20b04ac59" translate="yes" xml:space="preserve">
          <source>Disables tracing for all received messages. Any match specification is removed.</source>
          <target state="translated">受信したすべてのメッセージのトレースを無効にします。マッチ指定はすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="d3c6f60ed2d58ddd2546f1c92f3b23c7fc7b8db7" translate="yes" xml:space="preserve">
          <source>Disables tracing for all sent messages. Any match specification is removed.</source>
          <target state="translated">すべての送信メッセージのトレースを無効にします。マッチ指定はすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="052bd1ec9b7d0195d48f3445314353c790266505" translate="yes" xml:space="preserve">
          <source>Disables tracing for the matching functions. Any match specification is removed.</source>
          <target state="translated">マッチング関数のトレースを無効にします。マッチ指定はすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="b4b4aed9d646971376493a208349a826cb4c12b9" translate="yes" xml:space="preserve">
          <source>Disabling arity checks affects the form of messages at encode/decode. In particular, decoded AVPs are represented as lists of values, regardless of the AVP's arity (ie. expected number in the message/AVP grammar in question), and values are expected to be supplied as lists at encode. This differs from the historic decode behaviour of representing AVPs of arity 1 as bare values, not wrapped in a list.</source>
          <target state="translated">アリティチェックを無効にすることは、エンコード/デコード時のメッセージの形式に影響を与えます。特に、デコードされた AVP は AVP のアリティ (すなわち、問題のメッセージ/AVP 文法における期待される数)に関係なく、値のリストとして表現され、値はエンコード時にリストとして提供されることが期待されます。これは、アリティ 1 の AVP をリストに包まれていない裸の値として表現するという歴史的なデコードの動作とは異なります。</target>
        </trans-unit>
        <trans-unit id="019544662459c34c84ab1f2f72c6fedddbe538f0" translate="yes" xml:space="preserve">
          <source>Disabling counters is a performance improvement, but means that the omitted counters are not returned by &lt;code&gt;&lt;a href=&quot;#service_info-2&quot;&gt;service_info/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">カウンターを無効にすることはパフォーマンスの向上ですが、省略されたカウンターは &lt;code&gt;&lt;a href=&quot;#service_info-2&quot;&gt;service_info/2&lt;/a&gt;&lt;/code&gt; によって返されないことを意味します。</target>
        </trans-unit>
        <trans-unit id="ad694189656d6d69aa0303359764d4f191934c22" translate="yes" xml:space="preserve">
          <source>Disc-less nodes</source>
          <target state="translated">ディスクレスノード</target>
        </trans-unit>
        <trans-unit id="ba6ed47955f40df472a5f8beac813210c9595e35" translate="yes" xml:space="preserve">
          <source>Disclaimer: The author accepts no responsibility for errors introduced in code that has been processed by the program. It has been reasonably well tested, but the possibility of errors remains. Keep backups of your original code safely stored, until you feel confident that the new, modified code can be trusted.</source>
          <target state="translated">免責事項:作者は、プログラムによって処理されたコードに導入されたエラーについて、一切の責任を負いません。それは合理的に十分にテストされていますが、エラーの可能性は残っています。新しい修正されたコードが信頼できると確信できるようになるまで、オリジナルコードのバックアップを安全に保存しておきましょう。</target>
        </trans-unit>
        <trans-unit id="cfd988cdc067039f90d04d2baa7c90c660553b55" translate="yes" xml:space="preserve">
          <source>Disclaimer: the author of this program takes no responsibility for the correctness of the produced output, or for any effects of its execution. In particular, the author may not be held responsible should Igor include the code of a deceased madman in the result.</source>
          <target state="translated">免責事項:このプログラムの作者は、生成された出力の正しさ、またはその実行による影響について、一切の責任を負いません。特に、イゴールが死んだ狂人のコードを結果に含んでいた場合、作者は責任を負わないかもしれません。</target>
        </trans-unit>
        <trans-unit id="6a2cce7325057892153f44eaa30a90a3c86e5de3" translate="yes" xml:space="preserve">
          <source>Disconnect-Cause AVP</source>
          <target state="translated">ディスコネクト原因AVP</target>
        </trans-unit>
        <trans-unit id="ff1396a2181372840b5ab3bd74b8cad283adf658" translate="yes" xml:space="preserve">
          <source>Disconnect-Cause AVP Values</source>
          <target state="translated">Disconnect-Cause AVP値</target>
        </trans-unit>
        <trans-unit id="f14abc14828dff0b3991be236d7f7cf54da51f12" translate="yes" xml:space="preserve">
          <source>Disconnect-Cause to send, &lt;code&gt;REBOOTING&lt;/code&gt;, &lt;code&gt;BUSY&lt;/code&gt; and &lt;code&gt;DO_NOT_WANT_TO_TALK_TO_YOU&lt;/code&gt; respectively. Defaults to &lt;code&gt;rebooting&lt;/code&gt; for &lt;code&gt;Reason=service|application&lt;/code&gt; and &lt;code&gt;goaway&lt;/code&gt; for &lt;code&gt;Reason=transport&lt;/code&gt;.</source>
          <target state="translated">Disconnect-Causeを送信、 &lt;code&gt;REBOOTING&lt;/code&gt; 、 &lt;code&gt;BUSY&lt;/code&gt; 、および &lt;code&gt;DO_NOT_WANT_TO_TALK_TO_YOU&lt;/code&gt; のそれぞれ。デフォルトは &lt;code&gt;rebooting&lt;/code&gt; 用 &lt;code&gt;Reason=service|application&lt;/code&gt; と &lt;code&gt;goaway&lt;/code&gt; ための &lt;code&gt;Reason=transport&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0cb6f5b85df7280837caa7684c21ebca654127f2" translate="yes" xml:space="preserve">
          <source>Disconnect-Peer-Answer</source>
          <target state="translated">Disconnect-Peer-Answer</target>
        </trans-unit>
        <trans-unit id="ac00be15043552408adbb950359743263da6af3c" translate="yes" xml:space="preserve">
          <source>Disconnect-Peer-Request</source>
          <target state="translated">Disconnect-Peer-Request</target>
        </trans-unit>
        <trans-unit id="0b89ba1fee4ae5db5b5cbdc2a3e20cb0bb715a06" translate="yes" xml:space="preserve">
          <source>Disconnecting Peer Connections</source>
          <target state="translated">ピア接続の切断</target>
        </trans-unit>
        <trans-unit id="4130fdb42bbd68fda4590cd56ee038ef4ac9d67b" translate="yes" xml:space="preserve">
          <source>Disconnecting a client from the server</source>
          <target state="translated">クライアントをサーバーから切断する</target>
        </trans-unit>
        <trans-unit id="4777f6524a18a233a6b8a935dab6c2675a1c7aaf" translate="yes" xml:space="preserve">
          <source>Discovery can only be performed towards one manager at a time.</source>
          <target state="translated">ディスカバリーは、一度に一人のマネージャーに向かってしか行うことができません。</target>
        </trans-unit>
        <trans-unit id="fcb2aee26678c8fa201281e24483d3205c8e34b7" translate="yes" xml:space="preserve">
          <source>Disk log format. Defaults to &lt;code&gt;internal&lt;/code&gt;.</source>
          <target state="translated">ディスクログフォーマット。デフォルトは &lt;code&gt;internal&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="17a3fc955cb5b0276df9b096dfd6ba69365aa9bf" translate="yes" xml:space="preserve">
          <source>Disk-based term storage</source>
          <target state="translated">ディスクベースのタームストレージ</target>
        </trans-unit>
        <trans-unit id="0ec64952288dde39e7db9059f483c43d01b58273" translate="yes" xml:space="preserve">
          <source>Display the full path names of files for which warnings are emitted.</source>
          <target state="translated">警告を発するファイルのフルパス名を表示します。</target>
        </trans-unit>
        <trans-unit id="407bbaf1e0c2d0df752601703a3d425897a28222" translate="yes" xml:space="preserve">
          <source>Displays a brief help text.</source>
          <target state="translated">簡単なヘルプテキストを表示します。</target>
        </trans-unit>
        <trans-unit id="809fd057f19b915d80930c6f7d96f0ece197660c" translate="yes" xml:space="preserve">
          <source>Displays a sequence chart for trace events (messages/actions)</source>
          <target state="translated">トレースイベント(メッセージ/アクション)のシーケンスチャートを表示します。</target>
        </trans-unit>
        <trans-unit id="b4addbd06f3a7b652cedffa28ba11f824f0e54ed" translate="yes" xml:space="preserve">
          <source>Displays help information: all valid shell internal commands, and commands in this module.</source>
          <target state="translated">ヘルプ情報を表示します:すべての有効なシェル内部コマンド、およびこのモジュールのコマンドを表示します。</target>
        </trans-unit>
        <trans-unit id="ee3534b5896b26b70a09071e094b09fecc246f93" translate="yes" xml:space="preserve">
          <source>Displays information about &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; に関する情報を表示します。</target>
        </trans-unit>
        <trans-unit id="1e2cdacb04ccc59eb03b366e2ce6107106171ce9" translate="yes" xml:space="preserve">
          <source>Displays information about a process, Equivalent to &lt;code&gt;process_info(pid(X, Y, Z))&lt;/code&gt;, but location transparent.</source>
          <target state="translated">プロセスに関する情報を表示します &lt;code&gt;process_info(pid(X, Y, Z))&lt;/code&gt; と同等ですが、場所は透過的です。</target>
        </trans-unit>
        <trans-unit id="8676997e6d31e5d1792fc72017136c1969e4743f" translate="yes" xml:space="preserve">
          <source>Displays information about all ETS tables on a terminal.</source>
          <target state="translated">端末上のすべてのETSテーブルの情報を表示します。</target>
        </trans-unit>
        <trans-unit id="af76d957f2761590236e17f9749346c28a31a1c0" translate="yes" xml:space="preserve">
          <source>Displays information about all traced processes and ports.</source>
          <target state="translated">トレースされたすべてのプロセスとポートに関する情報を表示します。</target>
        </trans-unit>
        <trans-unit id="492951a4c4a95971c08b9e19f0dc88adebe37075" translate="yes" xml:space="preserve">
          <source>Displays information about the loaded modules, including the files from which they have been loaded.</source>
          <target state="translated">読み込まれたモジュールの情報を表示します。</target>
        </trans-unit>
        <trans-unit id="ee93296f3843197e51b182a1bafc98d3a64cbf54" translate="yes" xml:space="preserve">
          <source>Displays more details about the running tests.</source>
          <target state="translated">実行中のテストの詳細を表示します。</target>
        </trans-unit>
        <trans-unit id="e0eaa044d1402f6158dbb94e6f37cec632aa9c72" translate="yes" xml:space="preserve">
          <source>Displays online help information.</source>
          <target state="translated">オンラインヘルプ情報を表示します。</target>
        </trans-unit>
        <trans-unit id="df72e35e6b1d65a27a8d6d508bdb3a1cdc2b8d9e" translate="yes" xml:space="preserve">
          <source>Displays the back trace of the process, a summary of the current function calls on the stack, in the Trace area. Requires that the Trace area is visible and that the Stack Trace option is &lt;strong&gt;Stack On, Tail&lt;/strong&gt; or &lt;strong&gt;Stack On, No Tail&lt;/strong&gt;.</source>
          <target state="translated">プロセスのバックトレース、スタック上の現在の関数呼び出しの概要をトレース領域に表示します。[トレース]領域が表示されていて、[スタックトレース]オプションが[ &lt;strong&gt;スタックオン、テール]&lt;/strong&gt;または[ &lt;strong&gt;スタックオン、テールなし]である必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b1b1e3477e899e5e51d8015f9d12fef517565150" translate="yes" xml:space="preserve">
          <source>Displays the help message above.</source>
          <target state="translated">上記のヘルプメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="5e637c32ead50fb05a7176006aa2e317c3d4a119" translate="yes" xml:space="preserve">
          <source>Displays the help of &lt;code&gt;etop&lt;/code&gt; and its options.</source>
          <target state="translated">&lt;code&gt;etop&lt;/code&gt; とそのオプションのヘルプを表示します。</target>
        </trans-unit>
        <trans-unit id="5a62bffd61747c2b3f643917a2167e1db67450af" translate="yes" xml:space="preserve">
          <source>Displays the manual page for the Erlang module &lt;code&gt;Module&lt;/code&gt;. Only supported on Unix.</source>
          <target state="translated">Erlangモジュール &lt;code&gt;Module&lt;/code&gt; のマニュアルページを表示します。Unixでのみサポートされます。</target>
        </trans-unit>
        <trans-unit id="5a8997e7d54421e54131f64252ff4df84aeddf01" translate="yes" xml:space="preserve">
          <source>Displays the reports that match the provided filters.</source>
          <target state="translated">提供されたフィルタに一致するレポートを表示します。</target>
        </trans-unit>
        <trans-unit id="7d09436ef1c7f1d4275b15c0e3bfd26a0e52a4a3" translate="yes" xml:space="preserve">
          <source>Dissecting form-urlencoded query strings into a list of key-value pairs</source>
          <target state="translated">フォームurlencodeされたクエリ文字列をキーと値のペアのリストに分解する</target>
        </trans-unit>
        <trans-unit id="6639179da9a9db22208ccf1f96fbd66121e3d490" translate="yes" xml:space="preserve">
          <source>Dissects an urlencoded &lt;code&gt;QueryString&lt;/code&gt; and returns a &lt;code&gt;QueryList&lt;/code&gt;, a list of non-percent-encoded key-value pairs. Form-urlencoding is defined in section 4.10.21.6 of the &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/html52/&quot;&gt;HTML 5.2&lt;/a&gt;&lt;/code&gt; specification and in section 4.10.22.6 of the &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML 5.0&lt;/a&gt;&lt;/code&gt; specification for non-UTF-8 encodings.</source>
          <target state="translated">URLエンコードされた &lt;code&gt;QueryString&lt;/code&gt; を &lt;code&gt;QueryList&lt;/code&gt; 、パーセントでエンコードされていないキーと値のペアのリストであるQueryListを返します。Form-urlencodingは、 &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/html52/&quot;&gt;HTML 5.2&lt;/a&gt;&lt;/code&gt; 仕様のセクション4.10.21.6および非UTF-8エンコーディングの &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML 5.0&lt;/a&gt;&lt;/code&gt; 仕様のセクション4.10.22.6で定義されています。</target>
        </trans-unit>
        <trans-unit id="357d35fa45410f9789ac601d8a4028142c2abc4b" translate="yes" xml:space="preserve">
          <source>Distinguish between different exception classes.</source>
          <target state="translated">異なる例外クラスを区別します。</target>
        </trans-unit>
        <trans-unit id="3154ac05c2e6649bcc819cae0791db7441479164" translate="yes" xml:space="preserve">
          <source>Distinguished Encoding Rules (DER), a specialized form of BER that is used in security-conscious applications</source>
          <target state="translated">識別符号化規則(DER)は、セキュリティを意識したアプリケーションで使用されるBERの特殊な形式です。</target>
        </trans-unit>
        <trans-unit id="df5f720cb5c3693e400bc2af610c190506b2e22e" translate="yes" xml:space="preserve">
          <source>Distributed applications are controlled by both the application controller and a distributed application controller process, &lt;code&gt;dist_ac&lt;/code&gt;. Both these processes are part of the Kernel application. Distributed applications are thus specified by configuring the Kernel application, using the following configuration parameter (see also &lt;code&gt;kernel(6)&lt;/code&gt;):</source>
          <target state="translated">分散アプリケーションは、アプリケーションコントローラーと分散アプリケーションコントローラープロセス &lt;code&gt;dist_ac&lt;/code&gt; の両方によって制御されます。これらのプロセスは両方とも、カーネルアプリケーションの一部です。したがって、分散アプリケーションは、次の構成パラメーターを使用してカーネルアプリケーションを構成することにより指定されます（ &lt;code&gt;kernel(6)&lt;/code&gt; も参照）。</target>
        </trans-unit>
        <trans-unit id="777820c0dccfcaf6763a1dc23065b452f73b88aa" translate="yes" xml:space="preserve">
          <source>Distributed data because of distributed applications</source>
          <target state="translated">アプリケーションが分散しているため、データが分散している</target>
        </trans-unit>
        <trans-unit id="1058cfc322dd64ad274d9afc48318f15475644a8" translate="yes" xml:space="preserve">
          <source>Distributed message sending, that is, if &lt;code&gt;Expr1&lt;/code&gt; evaluates to a tuple &lt;code&gt;{Name,Node}&lt;/code&gt; (or a pid located at another node), also never fails.</source>
          <target state="translated">分散メッセージの送信、つまり &lt;code&gt;Expr1&lt;/code&gt; がタプル &lt;code&gt;{Name,Node}&lt;/code&gt; （または別のノードにあるpid）に評価される場合も、失敗することはありません。</target>
        </trans-unit>
        <trans-unit id="646778caa7cd85accfc80935a72b9a69681a64bf" translate="yes" xml:space="preserve">
          <source>Distributed named process groups.</source>
          <target state="translated">分散された名前付きプロセスグループ。</target>
        </trans-unit>
        <trans-unit id="fe70fcb303dd369d876e8b04a66fbb3f051957f9" translate="yes" xml:space="preserve">
          <source>Distributed tables</source>
          <target state="translated">分散テーブル</target>
        </trans-unit>
        <trans-unit id="ef3a717afb5526323e5d0fa2e1c8c91f28e31043" translate="yes" xml:space="preserve">
          <source>Distributed test execution control for &lt;code&gt;Common Test&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; の分散テスト実行制御。</target>
        </trans-unit>
        <trans-unit id="f23d56f2b96b77ba15c94f5727ade9fc8a5345f9" translate="yes" xml:space="preserve">
          <source>Distributed test execution control for Common Test.</source>
          <target state="translated">Common Testのための分散テスト実行制御</target>
        </trans-unit>
        <trans-unit id="6b1412269556b8a825737e56637796f585ef89c0" translate="yes" xml:space="preserve">
          <source>Distributes the value &lt;code&gt;X&lt;/code&gt; over the unary functions in the list, turning them into nullary test functions. An &lt;code&gt;AbstractTestFun&lt;/code&gt; is like an ordinary test fun, but takes one argument instead of zero - it's basically missing some information before it can be a proper test. In practice, &lt;code&gt;{with, X, [F_1, ..., F_N]}&lt;/code&gt; is equivalent to &lt;code&gt;[fun () -&amp;gt; F_1(X) end, ..., fun () -&amp;gt; F_N(X) end]&lt;/code&gt;. This is particularly useful if your abstract test functions are already implemented as proper functions: &lt;code&gt;{with, FD, [fun filetest_a/1, fun filetest_b/1, fun filetest_c/1]}&lt;/code&gt; is equivalent to &lt;code&gt;[fun () -&amp;gt; filetest_a(FD) end, fun () -&amp;gt; filetest_b(FD) end, fun () -&amp;gt; filetest_c(FD) end]&lt;/code&gt;, but much more compact. See also &lt;code&gt;&lt;a href=&quot;#Fixtures&quot;&gt;Fixtures&lt;/a&gt;&lt;/code&gt;, below.</source>
          <target state="translated">値 &lt;code&gt;X&lt;/code&gt; をリスト内の単項関数に分散し、それらをゼロのテスト関数に変換します。アン &lt;code&gt;AbstractTestFun&lt;/code&gt; は、通常のテストの楽しみのようなものですが、ゼロの代わりに一つの引数を取る-それは適切なテストすることができ前に、それは基本的にいくつかの情報が欠けています。実際には、 &lt;code&gt;{with, X, [F_1, ..., F_N]}&lt;/code&gt; は &lt;code&gt;[fun () -&amp;gt; F_1(X) end, ..., fun () -&amp;gt; F_N(X) end]&lt;/code&gt; です。これは、抽象テスト関数がすでに適切な関数として実装されている場合に特に役立ちます。 &lt;code&gt;{with, FD, [fun filetest_a/1, fun filetest_b/1, fun filetest_c/1]}&lt;/code&gt; は &lt;code&gt;[fun () -&amp;gt; filetest_a(FD) end, fun () -&amp;gt; filetest_b(FD) end, fun () -&amp;gt; filetest_c(FD) end]&lt;/code&gt; ですが、はるかにコンパクトです。こちらもご覧ください &lt;code&gt;&lt;a href=&quot;#Fixtures&quot;&gt;Fixtures&lt;/a&gt;&lt;/code&gt; 以下の備品。</target>
        </trans-unit>
        <trans-unit id="1fb2ec77dec0827e6e0ae703f668a7a543d0ca5f" translate="yes" xml:space="preserve">
          <source>Distribution and fault tolerance</source>
          <target state="translated">ディストリビューションとフォールトトレランス</target>
        </trans-unit>
        <trans-unit id="c005e1759172af47ea6a2a358db5688f108d75cf" translate="yes" xml:space="preserve">
          <source>Distribution of applications is highly dependent of the global group definitions. It is not recommended that an application is distributed over many global groups, as the registered names can be moved to another global group at failover/takeover. Nothing prevents this to be done, but the application code must then handle the situation.</source>
          <target state="translated">アプリケーションの配布は、グローバルグループの定義に大きく依存します。アプリケーションを多くのグローバルグループに分散させることは推奨されません。これを妨げるものは何もありませんが、アプリケーションコードはこのような状況を処理しなければなりません。</target>
        </trans-unit>
        <trans-unit id="9dfeb8d1362ff3508945cdb79fdb677bffbb7cb3" translate="yes" xml:space="preserve">
          <source>Distribution over TLS/SSL, See the &lt;code&gt;Using SSL for Erlang Distribution&lt;/code&gt; User's Guide for details on how to setup a secure distributed node.</source>
          <target state="translated">TLS / SSLを介した配布。セキュアな分散ノードをセットアップする方法の詳細については &lt;code&gt;Using SSL for Erlang Distribution&lt;/code&gt; ユーザーガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="22bdf47be3fd0a53ecdf5d6edbde0a2c6b97f0e0" translate="yes" xml:space="preserve">
          <source>Do</source>
          <target state="translated">Do</target>
        </trans-unit>
        <trans-unit id="47613c6fda4292bd08e25bf20eb869bc678389c9" translate="yes" xml:space="preserve">
          <source>Do &lt;strong&gt;not&lt;/strong&gt; declare the &lt;code&gt;driver_entry&lt;/code&gt;&lt;code&gt;const&lt;/code&gt;. This because the emulator must modify the &lt;code&gt;handle&lt;/code&gt; and the &lt;code&gt;handle2&lt;/code&gt; fields. A statically allocated, and &lt;code&gt;const&lt;/code&gt;-declared &lt;code&gt;driver_entry&lt;/code&gt; can be located in read-only memory, which causes the emulator to crash.</source>
          <target state="translated">&lt;code&gt;driver_entry&lt;/code&gt; &lt;code&gt;const&lt;/code&gt; を宣言し&lt;strong&gt;ないで&lt;/strong&gt;ください。これは、エミュレーターが &lt;code&gt;handle&lt;/code&gt; と &lt;code&gt;handle2&lt;/code&gt; フィールドを変更する必要があるためです。静的に割り当てられ、 &lt;code&gt;const&lt;/code&gt; で宣言された &lt;code&gt;driver_entry&lt;/code&gt; は読み取り専用メモリに配置できるため、エミュレータがクラッシュします。</target>
        </trans-unit>
        <trans-unit id="156a410dd8c4aec29054efddcf1aca187e334ab2" translate="yes" xml:space="preserve">
          <source>Do a one-time execution of a remote command over &lt;code&gt;ssh&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;ssh&lt;/code&gt; を介してリモートコマンドを1回実行します。</target>
        </trans-unit>
        <trans-unit id="d221ae72367256bfa0f670f2336dceacee61b0d4" translate="yes" xml:space="preserve">
          <source>Do as follows:</source>
          <target state="translated">以下のようにしてください。</target>
        </trans-unit>
        <trans-unit id="f27b06d07e1966b0b6864e00ebac2e38b9abf992" translate="yes" xml:space="preserve">
          <source>Do not assume that the fastest implementation of a given algorithm on computer architecture X is also the fastest on computer architecture Y.</source>
          <target state="translated">コンピュータアーキテクチャXで与えられたアルゴリズムの最速の実装が、コンピュータアーキテクチャYでも最速であると仮定してはいけません。</target>
        </trans-unit>
        <trans-unit id="60772b6696dbf4ac12380ab3e94aae181f9d5c26" translate="yes" xml:space="preserve">
          <source>Do not auto-import any functions from &lt;code&gt;erlang&lt;/code&gt; module.</source>
          <target state="translated">&lt;code&gt;erlang&lt;/code&gt; モジュールから関数を自動インポートしないでください。</target>
        </trans-unit>
        <trans-unit id="3d5e059893acb8b0449b6d1e96a2752f9bacf037" translate="yes" xml:space="preserve">
          <source>Do not break Hangul (a Korean script) syllable sequences. Hangul characters are of five types: L, V, T, LV, and LVT. An L character can be followed by an L, V, LV, or LVT character. An LV or V character can be followed by a V or T character. An LVT or T character can be followed only by a T character.</source>
          <target state="translated">ハングル(韓国語の文字)の音節列を崩さないようにしましょう。ハングル文字には5種類あります。L、V、T、LV、LVTの5種類です。L文字の後には、L、V、LV、LVT文字が続きます。LVまたはV文字の後には、VまたはT文字を付けることができます。LVTまたはT文字の後には、T文字のみが続きます。</target>
        </trans-unit>
        <trans-unit id="b521b45cda7d42ddb8d4e9de9054fb540ecd742d" translate="yes" xml:space="preserve">
          <source>Do not compile (that is, do not produce object code) the generated &lt;code&gt;.erl&lt;/code&gt; file. If this option is omitted, the generated Erlang module is compiled.</source>
          <target state="translated">生成された &lt;code&gt;.erl&lt;/code&gt; ファイルをコンパイルしないでください（つまり、オブジェクトコードを生成しません）。このオプションを省略すると、生成されたErlangモジュールがコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="14f32868df4cab74a92ca7e529102aa97cd5b714" translate="yes" xml:space="preserve">
          <source>Do not confuse item (?R) with condition (R), which tests for recursion. Consider the following pattern, which matches text in angle brackets, allowing for arbitrary nesting. Only digits are allowed in nested brackets (that is, when recursing), while any characters are permitted at the outer level.</source>
          <target state="translated">項目 (?R)と条件 (R)を混同しないでください。次のパターンを考えてみましょう。角括弧内のテキストにマッチし、任意の入れ子を可能にします。入れ子になった大括弧の中では数字だけが許可され(つまり、再帰の場合)、外側のレベルでは任意の文字が許可されます。</target>
        </trans-unit>
        <trans-unit id="15b14d23d02c2d810eb7ff4dafcb04db866620a8" translate="yes" xml:space="preserve">
          <source>Do not confuse this feature with the &lt;code&gt;repeat&lt;/code&gt; property of a test case group. The options described here are used to repeat execution of entire test runs, while the &lt;code&gt;repeat&lt;/code&gt; property of a test case group makes it possible to repeat execution of sets of test cases within a suite. For more information about the latter, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; in section Writing Test Suites.</source>
          <target state="translated">この機能をテストケースグループの &lt;code&gt;repeat&lt;/code&gt; プロパティと混同しないでください。ここで説明するオプションは、テストラン全体の実行を繰り返すために使用されます。一方、テストケースグループの &lt;code&gt;repeat&lt;/code&gt; プロパティは、スイート内でテストケースのセットの実行を繰り返すことを可能にします。後者の詳細については、「テストスイートの &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; 」の「テストケースグループ」を参照してください。</target>
        </trans-unit>
        <trans-unit id="5fd5a1472c6fe43a652bdd8bc5aa386723882a15" translate="yes" xml:space="preserve">
          <source>Do not depend on the current working directory for reading and writing data files, as this is not portable. All scratch files are to be written in the &lt;code&gt;priv_dir&lt;/code&gt; and all data files are to be located in &lt;code&gt;data_dir&lt;/code&gt;. Also, the &lt;code&gt;Common Test&lt;/code&gt; server sets the current working directory to the test case log directory at the start of every case.</source>
          <target state="translated">これは移植性がないため、データファイルの読み取りと書き込みを現在の作業ディレクトリに依存しないでください。すべてのスクラッチファイルは &lt;code&gt;priv_dir&lt;/code&gt; に書き込まれ、すべてのデータファイルは &lt;code&gt;data_dir&lt;/code&gt; に配置されます。また、 &lt;code&gt;Common Test&lt;/code&gt; サーバーは、すべてのケースの開始時に、現在の作業ディレクトリをテストケースログディレクトリに設定します。</target>
        </trans-unit>
        <trans-unit id="7194a989708cb9ceda8cc7192a66b9bda23def2c" translate="yes" xml:space="preserve">
          <source>Do not depend on the scheduling to remain exactly as it is today. Scheduling is likely to be changed in a future release to use available processor cores better.</source>
          <target state="translated">スケジューリングが現在のままであることに依存しないでください。将来のリリースでは、利用可能なプロセッサコアをより良く使用するためにスケジューリングが変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="a2f31ff69a8594f7ef57326c9ad5ac44bf992a75" translate="yes" xml:space="preserve">
          <source>Do not disable the Erlang shell while running the GUI.</source>
          <target state="translated">GUIを実行している間はErlangシェルを無効にしないでください。</target>
        </trans-unit>
        <trans-unit id="9940ce9bb1d237e4d18a0edeb4db476b18a97e5d" translate="yes" xml:space="preserve">
          <source>Do not enable &lt;code&gt;parallel_logins&lt;/code&gt; without protecting the server by other means, for example, by the &lt;code&gt;max_sessions&lt;/code&gt; option or a firewall configuration. If set to &lt;code&gt;true&lt;/code&gt;, there is no protection against DOS attacks.</source>
          <target state="translated">&lt;code&gt;max_sessions&lt;/code&gt; オプションやファイアウォール構成などの他の手段でサーバーを保護せずに、 &lt;code&gt;parallel_logins&lt;/code&gt; を有効にしないでください。 &lt;code&gt;true&lt;/code&gt; に設定した場合、DOS攻撃に対する保護はありません。</target>
        </trans-unit>
        <trans-unit id="c71ebfa08b5476018b372c85a3329c913b294dc2" translate="yes" xml:space="preserve">
          <source>Do not end after prepend characters.</source>
          <target state="translated">前置文字の後には終了しないでください。</target>
        </trans-unit>
        <trans-unit id="d8c471ab6552051ae9d3261971ab9ca63bf52f14" translate="yes" xml:space="preserve">
          <source>Do not end before extending characters or spacing marks. Characters with the &quot;mark&quot; property always have the &quot;extend&quot; grapheme breaking property.</source>
          <target state="translated">文字やマークを拡張する前に終了しないようにします。mark&quot; プロパティを持つ文字は、常に &quot;extend&quot; grapheme breaking プロパティを持っています。</target>
        </trans-unit>
        <trans-unit id="3c01623e5d9ea8f28b667a75484db29adf450c8b" translate="yes" xml:space="preserve">
          <source>Do not end between CR and LF; otherwise end after any control character.</source>
          <target state="translated">CRとLFの間で終了しないでください。そうでない場合は、任意の制御文字の後で終了します。</target>
        </trans-unit>
        <trans-unit id="8d0cf1528511fb26d91115dbca4234d18f655418" translate="yes" xml:space="preserve">
          <source>Do not fetch data that you already have.</source>
          <target state="translated">すでに持っているデータを取得しないでください。</target>
        </trans-unit>
        <trans-unit id="188b0c662f5109429f4e7982a599520d181b7813" translate="yes" xml:space="preserve">
          <source>Do not forget to consider the burst rate. If you set intensity to 1 and period to 6, it gives the same sustained error rate as 5/30 or 10/60, but will not allow even 2 restart attempts in quick succession. This is probably not what you wanted.</source>
          <target state="translated">バーストレートを考慮することを忘れないでください。インテンシティを1、ピリオドを6に設定した場合、5/30や10/60と同じ持続的なエラーレートが得られますが、2回の再起動を素早く連続して行うことはできません。これはおそらくあなたが望んでいたものではありません。</target>
        </trans-unit>
        <trans-unit id="78a25e53c1d1a1e9e8efea26b3a8a018a5711c79" translate="yes" xml:space="preserve">
          <source>Do not rely too much on the order of &lt;code&gt;Flag&lt;/code&gt; atoms or &lt;code&gt;Ifopt&lt;/code&gt; tuples. There are however some rules:</source>
          <target state="translated">&lt;code&gt;Flag&lt;/code&gt; アトムまたは &lt;code&gt;Ifopt&lt;/code&gt; タプルの順序にあまり依存しないでください。ただし、いくつかのルールがあります。</target>
        </trans-unit>
        <trans-unit id="e1c9c02fa7973c5d114818811d89f50e2cadfc9c" translate="yes" xml:space="preserve">
          <source>Do not segment outgoing reply messages. This is useful when either it is known that messages are never to large or that the transport protocol can handle such things on its own (e.g. TCP or SCTP).</source>
          <target state="translated">送信応答メッセージをセグメント化しないでください。これは、メッセージが決して大きくないことがわかっている場合や、トランスポートプロトコルがそのようなことを独自に処理できる場合に便利です (例:TCP や SCTP)。</target>
        </trans-unit>
        <trans-unit id="7d463f746b0b7fd7109b1a49ad6fea1f1a13ac94" translate="yes" xml:space="preserve">
          <source>Do not send messages or issue port commands to the &lt;code&gt;Tracee&lt;/code&gt; in any of the callbacks. This is not allowed and can cause all sorts of strange behavior, including, but not limited to, infinite recursions.</source>
          <target state="translated">メッセージや、問題のポートコマンドを送信しないでください &lt;code&gt;Tracee&lt;/code&gt; コールバックのいずれかで。これは許可されておらず、無限再帰を含むがそれに限定されない、あらゆる種類の奇妙な動作を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="8a73abdea57b18933ecedd87b093ff6419e3300f" translate="yes" xml:space="preserve">
          <source>Do not set the period to a very high value if you want to tolerate bursts. If you set intensity to 5 and period to 3600 (one hour), the supervisor will allow a short burst of 5 restarts, but then gives up if it sees another single restart almost an hour later. You probably want to regard those crashes as separate incidents, so setting the period to 5 or 10 minutes will be more reasonable.</source>
          <target state="translated">バーストを許容したい場合は、ピリオドをあまり高い値に設定しないでください。インテンシティを5に設定し、ピリオドを3600(1時間)に設定した場合、スーパーバイザは5回の再起動の短いバーストを許可しますが、1時間近く後に別の1回の再起動を見た場合は諦めます。おそらく、これらのクラッシュを別個のインシデントと見なしたいのでしょうから、期間を5分または10分に設定するのがより合理的でしょう。</target>
        </trans-unit>
        <trans-unit id="b65301fb79ef8b7b35e60f636541eaf5d9009d6f" translate="yes" xml:space="preserve">
          <source>Do not tamper with the socket options &lt;code&gt;list&lt;/code&gt;, &lt;code&gt;binary&lt;/code&gt;, &lt;code&gt;active&lt;/code&gt;, &lt;code&gt;packet&lt;/code&gt;, &lt;code&gt;nodelay&lt;/code&gt; and &lt;code&gt;deliver&lt;/code&gt; since they are used by the distribution protocol handler itself. Other raw socket options such as &lt;code&gt;packet_size&lt;/code&gt; may interfere severely, so beware!</source>
          <target state="translated">ソケットオプション &lt;code&gt;list&lt;/code&gt; 、 &lt;code&gt;binary&lt;/code&gt; 、 &lt;code&gt;active&lt;/code&gt; 、 &lt;code&gt;packet&lt;/code&gt; 、 &lt;code&gt;nodelay&lt;/code&gt; 、 &lt;code&gt;deliver&lt;/code&gt; 改ざんしないでください。これらは、配信プロトコルハンドラ自体によって使用されるためです。 &lt;code&gt;packet_size&lt;/code&gt; などの他のrawソケットオプションは深刻な干渉を引き起こす可能性があるため、注意してください。</target>
        </trans-unit>
        <trans-unit id="d8589c5d62b43bc732186af17da7031d4ee16b0e" translate="yes" xml:space="preserve">
          <source>Do not try to work around these problems by using alternative implementations of the missing algorithms! An application can only claim to be using a FIPS 140-2 validated cryptographic module if it uses it exclusively for every cryptographic operation.</source>
          <target state="translated">欠けているアルゴリズムの代替実装を使用して、これらの問題を回避しようとしないでください。アプリケーションは、FIPS 140-2で検証された暗号モジュールをすべての暗号処理に排他的に使用している場合にのみ、FIPS 140-2で検証された暗号モジュールを使用していると主張することができます。</target>
        </trans-unit>
        <trans-unit id="c5651954dc46885391a1490aca0bd0b8cd7aaad8" translate="yes" xml:space="preserve">
          <source>Do not use a &lt;code&gt;Context&lt;/code&gt; as argument in more than one call to hmac_update or hmac_final. The semantics of reusing old contexts in any way is undefined and could even crash the VM in earlier releases. The reason for this limitation is a lack of support in the underlying OpenSSL API.</source>
          <target state="translated">hmac_updateまたはhmac_finalへの複数の呼び出しで引数として &lt;code&gt;Context&lt;/code&gt; を使用しないでください。古いコンテキストを何らかの方法で再利用するセマンティクスは定義されておらず、以前のリリースではVMをクラッシュさせることさえありました。この制限の理由は、基になるOpenSSL APIのサポートの欠如です。</target>
        </trans-unit>
        <trans-unit id="71cc879e1a9b34f9f8f3f275c6f8a0b14927f088" translate="yes" xml:space="preserve">
          <source>Do not use any of the keys in these examples. Use your own keys.</source>
          <target state="translated">これらの例のキーは使用しないでください。独自のキーを使用してください。</target>
        </trans-unit>
        <trans-unit id="3e3d2471e72d9c62935331dbceb31a316086f28e" translate="yes" xml:space="preserve">
          <source>Do not use atom cache over this connection.</source>
          <target state="translated">この接続ではアトムキャッシュを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="1356865819ece0e9984d524eb4ee4ec65b6f89d1" translate="yes" xml:space="preserve">
          <source>Do recover from a testcase failure using CTHs only a last resort. If used wrongly, it can be very difficult to determine which tests that pass or fail in a test run.</source>
          <target state="translated">CTH を使用してテストケースの失敗から回復するのは、最後の手段に過ぎません。使用方法を間違えると、どのテストがテストランで合否を判断するのが非常に難しくなります。</target>
        </trans-unit>
        <trans-unit id="42c7dd7ef6767859363ae1932a37452672de1454" translate="yes" xml:space="preserve">
          <source>Do something like this:</source>
          <target state="translated">このようなことをしてください。</target>
        </trans-unit>
        <trans-unit id="038970f21cbb8e0488428da90f3fabf1886c4212" translate="yes" xml:space="preserve">
          <source>Do the following:</source>
          <target state="translated">以下のようにしてください。</target>
        </trans-unit>
        <trans-unit id="a21d03cec610102299b9a7e2e16ecfa597e7dd26" translate="yes" xml:space="preserve">
          <source>Do this on the command line or add the flags to the &lt;code&gt;LDFLAGS&lt;/code&gt; definition in your &lt;code&gt;Makefile&lt;/code&gt;.</source>
          <target state="translated">コマンドラインでこれを行うか、 &lt;code&gt;Makefile&lt;/code&gt; の &lt;code&gt;LDFLAGS&lt;/code&gt; 定義にフラグを追加します。</target>
        </trans-unit>
        <trans-unit id="70b871cacc7e26cab738e21fdfbb99e29543867f" translate="yes" xml:space="preserve">
          <source>Documents can be joined into a single new document using the constructor functions of this module. Note that the new document often represents a larger number of possible layouts than just the sum of the components.</source>
          <target state="translated">ドキュメントは、このモジュールのコンストラクタ関数を使って一つの新しいドキュメントに結合することができます。新しいドキュメントは、コンポーネントの合計だけではなく、より多くの可能性のあるレイアウトを表すことが多いことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b1cfa809f5e0beeb3084719dfa48bc7be279ead2" translate="yes" xml:space="preserve">
          <source>Does a mapfold operation over the immediate subtrees of a syntax tree. This is similar to &lt;code&gt;mapfold/3&lt;/code&gt;, but only on the immediate subtrees of &lt;code&gt;Tree&lt;/code&gt;, in left-to-right order; it does not include the root node of &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">構文ツリーの直接のサブツリーに対してマップフォールド操作を実行します。これは &lt;code&gt;mapfold/3&lt;/code&gt; に似ていますが、左から右の順序で、 &lt;code&gt;Tree&lt;/code&gt; の直接のサブツリー上でのみです。 &lt;code&gt;Tree&lt;/code&gt; のルートノードは含まれません。</target>
        </trans-unit>
        <trans-unit id="7c7eea79bea4b2b9cde4e71269ff5f714a49433e" translate="yes" xml:space="preserve">
          <source>Does any calculated expression give the same result each time?</source>
          <target state="translated">どの計算式も毎回同じ結果になりますか?</target>
        </trans-unit>
        <trans-unit id="bba1dfbc290a2c0b8836c89e393aabd52f91892a" translate="yes" xml:space="preserve">
          <source>Does the IO polling for the emulator. See &lt;code&gt;erl +IOt&lt;/code&gt; for more details.</source>
          <target state="translated">エミュレーターのIOポーリングを行います。詳細については、 &lt;code&gt;erl +IOt&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="7bb0a8f4f91e9cee2cc8f3782dde3817b9d0995c" translate="yes" xml:space="preserve">
          <source>Does the same as &lt;code&gt;compile/1,2&lt;/code&gt;, but uses an existing &lt;code&gt;.beam&lt;/code&gt; file as base, i.e. the module is not compiled from source. Thus &lt;code&gt;compile_beam/1&lt;/code&gt; is faster than &lt;code&gt;compile/1,2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;compile/1,2&lt;/code&gt; と同じですが、既存の &lt;code&gt;.beam&lt;/code&gt; ファイルをベースとして使用します。つまり、モジュールはソースからコンパイルされません。したがって、 &lt;code&gt;compile_beam/1&lt;/code&gt; は &lt;code&gt;compile/1,2&lt;/code&gt; よりも高速です。</target>
        </trans-unit>
        <trans-unit id="75b2ead98f7bae72a0d0db8e893db529be8b23f3" translate="yes" xml:space="preserve">
          <source>Does this mean that 3 is in inches? Or does it mean that 3 is in centimeters and is to be converted to inches? Erlang has a way to group things together to make things more understandable. These are called &lt;strong&gt;tuples&lt;/strong&gt; and are surrounded by curly brackets, &quot;{&quot; and &quot;}&quot;.</source>
          <target state="translated">これは、3がインチであることを意味しますか？それとも、3はセンチメートルであり、インチに変換されるという意味ですか？Erlangには、物事をよりわかりやすくするためにグループ化する方法があります。これらは&lt;strong&gt;タプル&lt;/strong&gt;と呼ばれ、中かっこ「{」と「}」で囲まれています。</target>
        </trans-unit>
        <trans-unit id="6ed065e8e03cc0ab27b9fb8825a8074464256599" translate="yes" xml:space="preserve">
          <source>Doing &lt;code&gt;./otp_build save_bootstrap&lt;/code&gt; from the &lt;code&gt;$ERL_TOP&lt;/code&gt; directory before doing &lt;code&gt;make clean&lt;/code&gt; will ensure that it will be possible to build after doing &lt;code&gt;make clean&lt;/code&gt;. &lt;code&gt;./otp_build save_bootstrap&lt;/code&gt; will be invoked automatically when &lt;code&gt;make&lt;/code&gt; is invoked from &lt;code&gt;$ERL_TOP&lt;/code&gt; with either the &lt;code&gt;clean&lt;/code&gt; target, or the default target. It is also automatically invoked if &lt;code&gt;./otp_build remove_prebuilt_files&lt;/code&gt; is invoked.</source>
          <target state="translated">こう &lt;code&gt;./otp_build save_bootstrap&lt;/code&gt; をから &lt;code&gt;$ERL_TOP&lt;/code&gt; 行う前に、ディレクトリ &lt;code&gt;make clean&lt;/code&gt; 、それはやって後に構築することが可能になることが保証されます &lt;code&gt;make clean&lt;/code&gt; 。 &lt;code&gt;./otp_build save_bootstrap&lt;/code&gt; は、 &lt;code&gt;make&lt;/code&gt; が &lt;code&gt;$ERL_TOP&lt;/code&gt; から &lt;code&gt;clean&lt;/code&gt; ターゲットまたはデフォルトターゲットのいずれかで呼び出されたときに自動的に呼び出されます。 &lt;code&gt;./otp_build remove_prebuilt_files&lt;/code&gt; が呼び出された場合も、自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d5095e2d590b30dd7a9838e94c8dcfb9378c175e" translate="yes" xml:space="preserve">
          <source>Doing &lt;code&gt;make clean&lt;/code&gt; in an arbitrary directory of the source tree, may remove files needed for bootstrapping the build.</source>
          <target state="translated">やって &lt;code&gt;make clean&lt;/code&gt; ソースツリーの任意のディレクトリに、ビルドをブートストラップするために必要なファイルを削除することがあります。</target>
        </trans-unit>
        <trans-unit id="8c13571de66cf331de3075eb6e61e83544211de9" translate="yes" xml:space="preserve">
          <source>Doing too much work in each NIF call will &lt;code&gt;degrade responsiveness of the VM&lt;/code&gt;. Doing too little work may mean that the gain of the faster processing in the NIF is eaten up by the overhead of calling the NIF and checking the arguments.</source>
          <target state="translated">各NIF呼び出しで実行する作業が多すぎる &lt;code&gt;degrade responsiveness of the VM&lt;/code&gt; が低下します。実行する作業が少なすぎると、NIFを呼び出して引数をチェックするオーバーヘッドによって、NIFでのより高速な処理の利点が失われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="4f3e8da48850a3c1cd0e52b36112de4478075ac8" translate="yes" xml:space="preserve">
          <source>Doing, for example, a &lt;code&gt;file:list_dir/1&lt;/code&gt; on one of these systems can return Unicode lists with code points &amp;gt; 255, depending on the content of the file system.</source>
          <target state="translated">たとえば、これらのシステムの1つで &lt;code&gt;file:list_dir/1&lt;/code&gt; を実行すると、ファイルシステムの内容に応じて、コードポイントが255を超えるUnicodeリストが返されます。</target>
        </trans-unit>
        <trans-unit id="79f88a9bb9f4ec699c8ec64acf057a2ef9a2bf7c" translate="yes" xml:space="preserve">
          <source>Domain name</source>
          <target state="translated">ドメイン名</target>
        </trans-unit>
        <trans-unit id="bfed24b7dd9052ba2e02af6212f78e990e171c40" translate="yes" xml:space="preserve">
          <source>Don't</source>
          <target state="translated">Don't</target>
        </trans-unit>
        <trans-unit id="630fe2c2ec0f26d7c7ab82e064c7272e10c58466" translate="yes" xml:space="preserve">
          <source>Don't trace the &lt;code&gt;user&lt;/code&gt; process if using the default trace handler function.</source>
          <target state="translated">デフォルトのトレースハンドラー関数を &lt;code&gt;user&lt;/code&gt; する場合は、ユーザープロセスをトレースしません。</target>
        </trans-unit>
        <trans-unit id="d72584f09d299f253db50d82b0ad0f89ba8e4dfc" translate="yes" xml:space="preserve">
          <source>Don't trace the group leader of the tracer process. If tracing has been switched on for all processes, call &lt;code&gt;dbg:p(TracerGLPid,clear)&lt;/code&gt; to stop tracing the group leader (&lt;code&gt;TracerGLPid&lt;/code&gt;). &lt;code&gt;process_info(TracerPid,group_leader)&lt;/code&gt; tells you which process this is (&lt;code&gt;TracerPid&lt;/code&gt; is returned from &lt;code&gt;dbg:get_tracer/0&lt;/code&gt;).</source>
          <target state="translated">トレーサープロセスのグループリーダーを追跡しないでください。すべてのプロセスでトレースがオンになっている場合は、 &lt;code&gt;dbg:p(TracerGLPid,clear)&lt;/code&gt; を呼び出して、グループリーダー（ &lt;code&gt;TracerGLPid&lt;/code&gt; ）のトレースを停止します。 &lt;code&gt;process_info(TracerPid,group_leader)&lt;/code&gt; は、これがどのプロセスであるかを通知します（ &lt;code&gt;TracerPid&lt;/code&gt; は &lt;code&gt;dbg:get_tracer/0&lt;/code&gt; から返されます）。</target>
        </trans-unit>
        <trans-unit id="3ecae28cccab7ebddc79205dd193d3992e39be12" translate="yes" xml:space="preserve">
          <source>Double click on a module to launch its module window.</source>
          <target state="translated">モジュールをダブルクリックしてモジュールウィンドウを起動します。</target>
        </trans-unit>
        <trans-unit id="524d6b5e2eb391c06d7d662842ea304a3428ac3a" translate="yes" xml:space="preserve">
          <source>Double click on an application name to launch an application window.</source>
          <target state="translated">アプリケーション名をダブルクリックすると、アプリケーションウィンドウが起動します。</target>
        </trans-unit>
        <trans-unit id="717495e0494703ed6df39cf7df4eec3540f9699b" translate="yes" xml:space="preserve">
          <source>Double click on an application to launch its application window.</source>
          <target state="translated">アプリケーションをダブルクリックして、そのアプリケーションウィンドウを起動します。</target>
        </trans-unit>
        <trans-unit id="e3ef104fbe6551b62e8dd5aed2698114cc2960eb" translate="yes" xml:space="preserve">
          <source>Double click on an module name to launch a module window.</source>
          <target state="translated">モジュール名をダブルクリックすると、モジュールウィンドウが起動します。</target>
        </trans-unit>
        <trans-unit id="c9ca655edf4df9beaad28b4f1e93729b97bd7328" translate="yes" xml:space="preserve">
          <source>Double quote</source>
          <target state="translated">ダブルクォート</target>
        </trans-unit>
        <trans-unit id="03b4a91fa37fa8f5be07f6954e031f5c6ab94101" translate="yes" xml:space="preserve">
          <source>Double-click to view the table content, or right-click and select option &lt;strong&gt;Show Table Content&lt;/strong&gt;. To view table information, select the table and activate menu &lt;strong&gt;View &amp;gt; Table information&lt;/strong&gt;, or right-click and select option &lt;strong&gt;Table info&lt;/strong&gt;.</source>
          <target state="translated">ダブルクリックしてテーブルコンテンツを表示するか、右クリックして[ &lt;strong&gt;テーブルコンテンツの表示&lt;/strong&gt; ]オプションを選択します。テーブル情報を表示するには、テーブルを選択してメニューの&lt;strong&gt;[表示]&amp;gt; [テーブル情報&lt;/strong&gt; ]をアクティブにするか、右クリックして[ &lt;strong&gt;テーブル情報&lt;/strong&gt; ]オプションを選択します。</target>
        </trans-unit>
        <trans-unit id="a5ea8d16867528d169d37b0acf9151c1e9bd53c9" translate="yes" xml:space="preserve">
          <source>Double-clicking a module brings up the View Module window.</source>
          <target state="translated">モジュールをダブルクリックすると、View Module ウィンドウが表示されます。</target>
        </trans-unit>
        <trans-unit id="bc28dc5bddbb75b67327c00dba2ea708871fd1af" translate="yes" xml:space="preserve">
          <source>Double-clicking a row in the &lt;strong&gt;Funs&lt;/strong&gt; tab has no effect.</source>
          <target state="translated">[ &lt;strong&gt;ファン&lt;/strong&gt; ]タブの行をダブルクリックしても効果はありません。</target>
        </trans-unit>
        <trans-unit id="32db7d6a7602f3bd7441157fad4ae41131e6d87d" translate="yes" xml:space="preserve">
          <source>Double-clicking a row in the &lt;strong&gt;Timers&lt;/strong&gt; tab has no effect.</source>
          <target state="translated">[ &lt;strong&gt;タイマー&lt;/strong&gt; ]タブの行をダブルクリックしても効果はありません。</target>
        </trans-unit>
        <trans-unit id="124373b861cdaa55ee48064bb5c358db179e8021" translate="yes" xml:space="preserve">
          <source>Downgrades an application &lt;code&gt;App&lt;/code&gt; from the current version to a previous version &lt;code&gt;OldVsn&lt;/code&gt; located in &lt;code&gt;Dir&lt;/code&gt; according to the &lt;code&gt;.appup&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;.appup&lt;/code&gt; ファイルに従って、アプリケーション &lt;code&gt;App&lt;/code&gt; を現在のバージョンから &lt;code&gt;Dir&lt;/code&gt; にある以前のバージョンの &lt;code&gt;OldVsn&lt;/code&gt; にダウングレードします。</target>
        </trans-unit>
        <trans-unit id="213b68c824beb73900e74352c19c9f193673f2e0" translate="yes" xml:space="preserve">
          <source>Download from &lt;code&gt;&lt;a href=&quot;http://sourceforge.net/projects/wxwindows/files/3.0.0/&quot;&gt;http://sourceforge.net/projects/wxwindows/files/3.0.0/&lt;/a&gt;&lt;/code&gt; or get it from GitHub: &lt;code&gt;&lt;a href=&quot;https://github.com/wxWidgets/wxWidgets&quot;&gt;https://github.com/wxWidgets/wxWidgets&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://sourceforge.net/projects/wxwindows/files/3.0.0/&quot;&gt;http://sourceforge.net/projects/wxwindows/files/3.0.0/&lt;/a&gt;&lt;/code&gt; からダウンロードするか、GitHubから入手してください： &lt;code&gt;&lt;a href=&quot;https://github.com/wxWidgets/wxWidgets&quot;&gt;https://github.com/wxWidgets/wxWidgets&lt;/a&gt;&lt;/code&gt; : //github.com/wxWidgets/wxWidgets</target>
        </trans-unit>
        <trans-unit id="8386933fe8a4856441fadd580fff299db5a4ba8b" translate="yes" xml:space="preserve">
          <source>Download from &lt;code&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads&quot;&gt;http://www.oracle.com/technetwork/java/javase/downloads&lt;/a&gt;&lt;/code&gt;. We have also tested with IBM's JDK 1.6.0.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads&quot;&gt;http://www.oracle.com/technetwork/java/javase/downloads&lt;/a&gt;&lt;/code&gt; からダウンロードします。IBMのJDK 1.6.0でもテストしました。</target>
        </trans-unit>
        <trans-unit id="8b39a8d218c5ca3f8fc57bb3b20d659b2903e3cd" translate="yes" xml:space="preserve">
          <source>Driver binaries are created with &lt;code&gt;&lt;a href=&quot;#driver_alloc_binary&quot;&gt;driver_alloc_binary&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ドライババイナリは、 &lt;code&gt;&lt;a href=&quot;#driver_alloc_binary&quot;&gt;driver_alloc_binary&lt;/a&gt;&lt;/code&gt; を使用して作成されます。</target>
        </trans-unit>
        <trans-unit id="226324127bebbb68d2978adef667b4d99ce22ea6" translate="yes" xml:space="preserve">
          <source>Driver binaries are used in the &lt;code&gt;driver_output2&lt;/code&gt; and &lt;code&gt;driver_outputv&lt;/code&gt; calls, and in the queue. Also the driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#outputv&quot;&gt;outputv&lt;/a&gt;&lt;/code&gt; uses driver binaries.</source>
          <target state="translated">ドライバーバイナリは、 &lt;code&gt;driver_output2&lt;/code&gt; と &lt;code&gt;driver_outputv&lt;/code&gt; 呼び出し、およびキューで使用されます。また、ドライバーコールバック &lt;code&gt;&lt;a href=&quot;driver_entry#outputv&quot;&gt;outputv&lt;/a&gt;&lt;/code&gt; はドライバーバイナリを使用します。</target>
        </trans-unit>
        <trans-unit id="124a28d8951fffb18c027deaea920077ee90b6a5" translate="yes" xml:space="preserve">
          <source>Driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; now gets &lt;code&gt;ErlDrvSizeT&lt;/code&gt; as 4th and 6th arguments instead of previously &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">ドライバーのコールバック &lt;code&gt;&lt;a href=&quot;driver_entry#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; は、以前の &lt;code&gt;int&lt;/code&gt; ではなく、4番目と6番目の引数として &lt;code&gt;ErlDrvSizeT&lt;/code&gt; を取得するようになりました。</target>
        </trans-unit>
        <trans-unit id="d01a22bd67104135a24eaf6baba00db329c9e8ca" translate="yes" xml:space="preserve">
          <source>Driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt;control&lt;/a&gt;&lt;/code&gt; now gets &lt;code&gt;ErlDrvSizeT&lt;/code&gt; as 4th and 6th arguments instead of previously &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">ドライバーコールバック &lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt;control&lt;/a&gt;&lt;/code&gt; は、以前の &lt;code&gt;int&lt;/code&gt; ではなく、4番目と6番目の引数として &lt;code&gt;ErlDrvSizeT&lt;/code&gt; を取得するようになりました。</target>
        </trans-unit>
        <trans-unit id="1ecab8b8577923531622a9e5fde5fb02223fdfd2" translate="yes" xml:space="preserve">
          <source>Driver callback &lt;code&gt;&lt;a href=&quot;driver_entry#output&quot;&gt;output&lt;/a&gt;&lt;/code&gt; now gets &lt;code&gt;ErlDrvSizeT&lt;/code&gt; as 3rd argument instead of previously &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">ドライバーコールバック &lt;code&gt;&lt;a href=&quot;driver_entry#output&quot;&gt;output&lt;/a&gt;&lt;/code&gt; は、以前の &lt;code&gt;int&lt;/code&gt; ではなく、 &lt;code&gt;ErlDrvSizeT&lt;/code&gt; を3番目の引数として取得するようになりました。</target>
        </trans-unit>
        <trans-unit id="114ae7f217d84b109210122fb59fad19e5bf87ab" translate="yes" xml:space="preserve">
          <source>Driver entries added by the &lt;code&gt;erl_ddll&lt;/code&gt; Erlang interface cannot be removed by using this interface.</source>
          <target state="translated">&lt;code&gt;erl_ddll&lt;/code&gt; Erlangインターフェイスによって追加されたドライバーエントリは、このインターフェイスを使用して削除することはできません。</target>
        </trans-unit>
        <trans-unit id="82d2f62d7632df80ba77337f6c50bfc5274b667e" translate="yes" xml:space="preserve">
          <source>Driver reload is already requested by another &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; when option &lt;code&gt;{reload, ReloadOption}&lt;/code&gt; was specified.</source>
          <target state="translated">オプション &lt;code&gt;{reload, ReloadOption}&lt;/code&gt; が指定されている場合、ドライバーの再ロードは別の &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; によって既に要求されています。</target>
        </trans-unit>
        <trans-unit id="bdb0405c87a9568c87483f079e1ba66cba5e95d4" translate="yes" xml:space="preserve">
          <source>Drops elements &lt;code&gt;Elem&lt;/code&gt; from &lt;code&gt;List1&lt;/code&gt; while &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; and returns the remaining list.</source>
          <target state="translated">&lt;code&gt;Pred(Elem)&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返し、残りのリストを返す間に、 &lt;code&gt;List1&lt;/code&gt; から要素 &lt;code&gt;Elem&lt;/code&gt; を削除します。</target>
        </trans-unit>
        <trans-unit id="57da8705f25d5b4e6976bd3ef06dda9c36e25b6f" translate="yes" xml:space="preserve">
          <source>Drops the last element of a &lt;code&gt;List&lt;/code&gt;. The list is to be non-empty, otherwise the function crashes with a &lt;code&gt;function_clause&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; の最後の要素を削除します。リストは空ではありません。空でない場合、関数はfunction_clauseでクラッシュし &lt;code&gt;function_clause&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7cc89c1203fd6f662ab09bafe6724b5d26d8fe8d" translate="yes" xml:space="preserve">
          <source>Drops usage of the latin1 atom encoding and unconditionally use utf8 encoding for all atoms. This will be changed to the default in a future major release of Erlang/OTP. Erlang/OTP systems as of R16B can decode this representation.</source>
          <target state="translated">latin1のアトムエンコーディングを削除し、すべてのアトムに無条件でutf8エンコーディングを使うようになりました。これはErlang/OTPの将来のメジャーリリースでデフォルトに変更される予定です。R16Bの時点でのErlang/OTPシステムはこの表現をデコードすることができます。</target>
        </trans-unit>
        <trans-unit id="6da6b942d555f9de8c518f3adfc3e33593613231" translate="yes" xml:space="preserve">
          <source>Due to a known bug in the underlying zlib library, &lt;code&gt;WindowBits&lt;/code&gt; values 8 and -8 do not work as expected. In zlib versions before 1.2.9 values 8 and -8 are automatically changed to 9 and -9. &lt;strong&gt;From zlib version 1.2.9 value -8 is rejected&lt;/strong&gt; causing &lt;code&gt;zlib:deflateInit/6&lt;/code&gt; to fail (8 is still changed to 9). It also seem possible that future versions of zlib may fix this bug and start accepting 8 and -8 as is.</source>
          <target state="translated">基礎となるzlibライブラリの既知のバグのため、 &lt;code&gt;WindowBits&lt;/code&gt; 値8および-8は期待どおりに機能しません。 1.2.9より前のバージョンのzlibでは、値8および-8は自動的に9および-9に変更されます。&lt;strong&gt;zlibバージョン1.2.9以降、値-8が拒否され&lt;/strong&gt;、 &lt;code&gt;zlib:deflateInit/6&lt;/code&gt; が失敗します（8は引き続き9に変更されます）。また、zlibの将来のバージョンでこのバグが修正され、8と-8がそのまま受け入れられるようになる可能性もあります。</target>
        </trans-unit>
        <trans-unit id="d53965dff14f4c80f0cc877167f2591ff39df7af" translate="yes" xml:space="preserve">
          <source>Due to the above, pull requests are only accepted on the &lt;code&gt;maint&lt;/code&gt; and the &lt;code&gt;master&lt;/code&gt; branches in our &lt;code&gt;&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;git repository&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;maint&lt;/code&gt; branch contains changes planned for the next &lt;code&gt;&lt;a href=&quot;versions#releases_and_patches&quot;&gt;maintenance patch package&lt;/a&gt;&lt;/code&gt; on the latest OTP release and the &lt;code&gt;master&lt;/code&gt; branch contain changes planned for the upcoming OTP release.</source>
          <target state="translated">上記のため、プルリクエストは &lt;code&gt;&lt;a href=&quot;https://github.com/erlang/otp&quot;&gt;git repository&lt;/a&gt;&lt;/code&gt; &lt;code&gt;maint&lt;/code&gt; ブランチと &lt;code&gt;master&lt;/code&gt; ブランチでのみ受け入れられます。 &lt;code&gt;maint&lt;/code&gt; ブランチは次のために計画の変更が含ま &lt;code&gt;&lt;a href=&quot;versions#releases_and_patches&quot;&gt;maintenance patch package&lt;/a&gt;&lt;/code&gt; の最新OTPのリリースにと &lt;code&gt;master&lt;/code&gt; ブランチを今後のOTPのリリースで計画変更が含まれています。</target>
        </trans-unit>
        <trans-unit id="e660da5a81bd948d3a902e014b76d86f2073ccc5" translate="yes" xml:space="preserve">
          <source>Due to the specific event handlers, the output format slightly differed from other log events.</source>
          <target state="translated">特定のイベントハンドラのため、出力形式が他のログイベントと若干異なります。</target>
        </trans-unit>
        <trans-unit id="3b3085bf736f2191e0ea07d229bfdc596b32d81d" translate="yes" xml:space="preserve">
          <source>Due to this, it impossible to list in documentation what algorithms that are available in a certain installation.</source>
          <target state="translated">このため、特定のインストールで利用可能なアルゴリズムをドキュメントに記載することができません。</target>
        </trans-unit>
        <trans-unit id="ce420c0f0f57998f7dfd12f03c2f66c6e5fb8dfe" translate="yes" xml:space="preserve">
          <source>Dump support for registries in erl_interface.</source>
          <target state="translated">erl_interfaceのレジストリのサポートをダンプ。</target>
        </trans-unit>
        <trans-unit id="1f4861e7450b77c73b64988357d50c9f18f21437" translate="yes" xml:space="preserve">
          <source>Dump the call graph into the specified file whose format is determined by the filename extension. Supported extensions are: &lt;code&gt;raw&lt;/code&gt;, &lt;code&gt;dot&lt;/code&gt;, and &lt;code&gt;ps&lt;/code&gt;. If something else is used as filename extension, default format &lt;code&gt;.raw&lt;/code&gt; is used.</source>
          <target state="translated">コールグラフを、ファイル名拡張子によって形式が決定される指定されたファイルにダンプします。サポートされる拡張機能は、 &lt;code&gt;raw&lt;/code&gt; 、 &lt;code&gt;dot&lt;/code&gt; 、および &lt;code&gt;ps&lt;/code&gt; です。ファイル名の拡張子として別のものが使用されている場合は、デフォルトのフォーマット &lt;code&gt;.raw&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="7184caff176c543302376cf7fec1ce54dda7f0ad" translate="yes" xml:space="preserve">
          <source>Dump the mib-server data to &lt;code&gt;stdio&lt;/code&gt; (Destination = &lt;code&gt;io&lt;/code&gt;) or the specified file.</source>
          <target state="translated">mib-serverデータを &lt;code&gt;stdio&lt;/code&gt; （Destination = &lt;code&gt;io&lt;/code&gt; ）または指定されたファイルにダンプします。</target>
        </trans-unit>
        <trans-unit id="b43f288c439d0cc70ad21f7402ed35ef10441966" translate="yes" xml:space="preserve">
          <source>Dumping tables</source>
          <target state="translated">ダンピングテーブル</target>
        </trans-unit>
        <trans-unit id="0e499b1b81d04e4a0963798172f050c39de889ef" translate="yes" xml:space="preserve">
          <source>Dumps a set of &lt;code&gt;ram_copies&lt;/code&gt; tables to disc. The next time the system is started, these tables are initiated with the data found in the files that are the result of this dump. None of the tables can have disc-resident replicas.</source>
          <target state="translated">&lt;code&gt;ram_copies&lt;/code&gt; テーブルのセットをディスクにダンプします。次にシステムが起動したときに、これらのテーブルは、このダンプの結果であるファイル内で見つかったデータを使用して開始されます。ディスクに常駐するレプリカを持つテーブルはありません。</target>
        </trans-unit>
        <trans-unit id="618d5bf84eb8eca747b739ce93060fbefb9445fd" translate="yes" xml:space="preserve">
          <source>Dumps all local tables of a Mnesia system into a text file, which can be edited (by a normal text editor) and then be reloaded with &lt;code&gt;mnesia:load_textfile/1&lt;/code&gt;. Only use this function for educational purposes. Use other functions to deal with real backups.</source>
          <target state="translated">Mnesiaシステムのすべてのローカルテーブルをテキストファイルにダンプします。テキストファイルは（通常のテキストエディターで）編集でき、 &lt;code&gt;mnesia:load_textfile/1&lt;/code&gt; で再ロードできます。この機能は教育目的でのみ使用してください。他の機能を使用して、実際のバックアップを処理します。</target>
        </trans-unit>
        <trans-unit id="2352588b3802464c989b95a72e96df7dfb9c6a62" translate="yes" xml:space="preserve">
          <source>Dumps table &lt;code&gt;Tab&lt;/code&gt; to file &lt;code&gt;Filename&lt;/code&gt;.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; をファイル &lt;code&gt;Filename&lt;/code&gt; にダンプします。</target>
        </trans-unit>
        <trans-unit id="64618333cf2b9688dec82445992bc0cf066f76aa" translate="yes" xml:space="preserve">
          <source>Dumps the contents of a registry to a &lt;code&gt;Mnesia&lt;/code&gt; table in an atomic manner, that is, either all data or no data is updated. If any errors are encountered while backing up the data, the entire operation is aborted.</source>
          <target state="translated">レジストリの内容をアトミックな方法で &lt;code&gt;Mnesia&lt;/code&gt; テーブルにダンプします。つまり、すべてのデータを更新するか、データを更新しないかのどちらかです。データのバックアップ中にエラーが発生した場合、操作全体が中止されます。</target>
        </trans-unit>
        <trans-unit id="381fbf5f76a0f53fc2e4740d2ab79b2103d820ba" translate="yes" xml:space="preserve">
          <source>Dumps the current display to a text file.</source>
          <target state="translated">現在の表示をテキストファイルにダンプします。</target>
        </trans-unit>
        <trans-unit id="bf5d48b8bd681f58ec639f6849aa1f7b2833bc07" translate="yes" xml:space="preserve">
          <source>Dumps the current microstate statistics counters to a file that can be parsed with &lt;code&gt;file:consult/1&lt;/code&gt;.</source>
          <target state="translated">現在のマイクロステート統計カウンターを &lt;code&gt;file:consult/1&lt;/code&gt; で解析できるファイルにダンプします。</target>
        </trans-unit>
        <trans-unit id="ce3c464e1eb2b91ec8a590cec1b8615bf230f5fd" translate="yes" xml:space="preserve">
          <source>Duplicate keys are allowed in matching and match each pattern associated to the keys:</source>
          <target state="translated">マッチングでは、キーの重複が許可され、キーに関連付けられた各パターンにマッチします。</target>
        </trans-unit>
        <trans-unit id="6d0d7bffffa2a241910a42a63e36f337c3babbe2" translate="yes" xml:space="preserve">
          <source>Duployan</source>
          <target state="translated">Duployan</target>
        </trans-unit>
        <trans-unit id="d87dba077b41e186992c67cc1c5d9b2114870c66" translate="yes" xml:space="preserve">
          <source>During OTP adaptation it was tested on:</source>
          <target state="translated">OTP適応時にはテストされました。</target>
        </trans-unit>
        <trans-unit id="fc319898536d39c91dbdba24fb8261626c9c368d" translate="yes" xml:space="preserve">
          <source>During decoding, the &lt;code&gt;b&lt;/code&gt; field of the record gets the decoded value of the &lt;code&gt;b&lt;/code&gt; component, if present, otherwise the value &lt;code&gt;asn1_NOVALUE&lt;/code&gt;.</source>
          <target state="translated">デコード中、レコードの &lt;code&gt;b&lt;/code&gt; フィールドは、 &lt;code&gt;b&lt;/code&gt; コンポーネントのデコードされた値を取得します（存在する場合 &lt;code&gt;asn1_NOVALUE&lt;/code&gt; 。それ以外の場合は、値asn1_NOVALUEを取得します。</target>
        </trans-unit>
        <trans-unit id="5902a6cefe9cb9c77a6268f9ff9e2f539dc55d82" translate="yes" xml:space="preserve">
          <source>During development of test suites, make no assumptions on the execution order of the test cases or suites. For example, a test case must not assume that a server it depends on is already started by a previous test case. Reasons for this follows:</source>
          <target state="translated">テストスイートの開発中は、テストケースやスイートの実行順序を想定してはいけません。例えば、テストケースは、依存するサーバが前のテストケースによって既に起動されていることを想定してはいけません。その理由は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="a18568484e447163575693c3283eebfe40833924" translate="yes" xml:space="preserve">
          <source>During development, this implementation was tested on:</source>
          <target state="translated">開発中に、この実装をテストしました。</target>
        </trans-unit>
        <trans-unit id="60d0badad83e33a80707cc8700ad85c090cff46a" translate="yes" xml:space="preserve">
          <source>During evaluation of a function, no calls can be made to local functions. An undefined function error would be generated. However, the optional argument &lt;code&gt;LocalFunctionHandler&lt;/code&gt; can be used to define a function that is called when there is a call to a local function. The argument can have the following formats:</source>
          <target state="translated">関数の評価中は、ローカル関数を呼び出すことはできません。未定義の関数エラーが生成されます。ただし、オプションの引数 &lt;code&gt;LocalFunctionHandler&lt;/code&gt; を使用して、ローカル関数が呼び出されたときに呼び出される関数を定義できます。引数の形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7e943e84a017c01c905cb5e4d5d51f8602aca5de" translate="yes" xml:space="preserve">
          <source>During execution of tests started with &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt;, the Erlang shell process, controlling &lt;code&gt;stdin&lt;/code&gt;, remains the top-level process of the &lt;code&gt;Common Test&lt;/code&gt; system of processes. Consequently, the Erlang shell is not available for interaction during the test run. If this is not desirable, for example, because the shell is needed for debugging purposes or for interaction with the SUT during test execution, set start option &lt;code&gt;release_shell&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; (in the call to &lt;code&gt;ct:run_test/1&lt;/code&gt; or by using the corresponding test specification term, described later). This makes &lt;code&gt;Common Test&lt;/code&gt; release the shell immediately after the test suite compilation stage. To accomplish this, a test runner process is spawned to take control of the test execution. The effect is that &lt;code&gt;ct:run_test/1&lt;/code&gt; returns the pid of this process rather than the test result, which instead is printed to tty at the end of the test run.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; で開始されたテストの実行中、 &lt;code&gt;stdin&lt;/code&gt; を制御するErlangシェルプロセスは、プロセスの &lt;code&gt;Common Test&lt;/code&gt; システムの最上位プロセスのままです。したがって、Erlangシェルは、テスト実行中の対話には使用できません。これが望ましくない場合、たとえば、デバッグの目的で、またはテスト実行中のSUTとの対話にシェルが必要であるため、開始オプション &lt;code&gt;release_shell&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定します（ &lt;code&gt;ct:run_test/1&lt;/code&gt; への呼び出しで、または対応するテスト仕様を使用して）用語、後述）。これは &lt;code&gt;Common Test&lt;/code&gt; テストスイートのコンパイル段階の直後にシェルを解放します。これを実現するために、テストランナープロセスが生成され、テストの実行を制御します。その結果、 &lt;code&gt;ct:run_test/1&lt;/code&gt; は、テスト結果ではなく、このプロセスのpidを返します。代わりに、テスト実行の最後にttyに出力されます。</target>
        </trans-unit>
        <trans-unit id="13400d5db5a1edd12b574982f7247626a4d1afa8" translate="yes" xml:space="preserve">
          <source>During finalization, the time offset is adjusted and fixed so that current Erlang system time aligns with the current OS system time. As the time offset can change during the finalization, Erlang system time can do a time warp at this point. The time offset is from now on fixed until the runtime system terminates. If time correction has been enabled, the time correction from now on also makes adjustments to align Erlang system time with OS system time. When the system is in the final phase, it behaves exactly as in &lt;code&gt;&lt;a href=&quot;#No_Time_Warp_Mode&quot;&gt;no time warp mode&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ファイナライズ中に、現在のErlangシステム時刻が現在のOSシステム時刻と一致するように、時間オフセットが調整および修正されます。時間オフセットはファイナライズ中に変更される可能性があるため、Erlangシステム時間はこの時点でタイムワープを実行できます。時間オフセットは、ランタイムシステムが終了するまで固定されます。時刻修正が有効になっている場合は、今後、時刻修正によってErlangシステム時刻とOSシステム時刻を合わせるための調整も行われます。システムが最終フェーズにある場合 &lt;code&gt;&lt;a href=&quot;#No_Time_Warp_Mode&quot;&gt;no time warp mode&lt;/a&gt;&lt;/code&gt; まったく同じように動作します。</target>
        </trans-unit>
        <trans-unit id="b5ae35332de729b88634ea8fa41480ea60f856d4" translate="yes" xml:space="preserve">
          <source>During high load scenarios, the length of the handler message queue rarely grows in a linear and predictable way. Instead, whenever the handler process is scheduled in, it can have an almost arbitrary number of messages waiting in the message queue. It is for this reason that the overload protection mechanism is focused on acting quickly, and quite drastically, such as immediately dropping or flushing messages, when a large queue length is detected.</source>
          <target state="translated">高負荷のシナリオでは、ハンドラメッセージキューの長さが直線的で予測可能な方法で成長することはほとんどありません。その代わり、ハンドラプロセスがスケジューリングされているときはいつでも、メッセージキューで待っているメッセージの数がほぼ任意の数になることがあります。過負荷保護メカニズムが、大きなキュー長が検出されたときに、即座にメッセージを削除したりフラッシュしたりするなど、迅速かつかなり劇的に行動することに焦点を当てているのは、このような理由からです。</target>
        </trans-unit>
        <trans-unit id="7aee45b439d948d5b7d76272a33b0c86bf4997e8" translate="yes" xml:space="preserve">
          <source>During model testing, the first test results in &lt;code&gt;{badmatch,16}&lt;/code&gt; in &lt;code&gt;{toy,start,1}&lt;/code&gt;, why?</source>
          <target state="translated">モデルテスト中、最初のテストの結果は &lt;code&gt;{toy,start,1}&lt;/code&gt; &lt;code&gt;{badmatch,16}&lt;/code&gt; になります。なぜですか？</target>
        </trans-unit>
        <trans-unit id="455e439587f82803aed60d48bf6da00489a0f0b5" translate="yes" xml:space="preserve">
          <source>During release handling, non-affected processes continue normal execution. This can lead to time-outs or other problems. For example, new processes created in the time window between suspending processes using a certain module, and loading a new version of this module, can execute old code.</source>
          <target state="translated">リリース処理中、影響を受けないプロセスは通常の実行を継続します。これにより、タイムアウトなどの問題が発生する可能性があります。例えば、特定のモジュールを使用してプロセスを中断してから、このモジュールの新しいバージョンをロードするまでの間に作成された新しいプロセスは、古いコードを実行する可能性があります。</target>
        </trans-unit>
        <trans-unit id="c18e5c5d63b2a2373e5f2ba0870a87b60d5f9fcf" translate="yes" xml:space="preserve">
          <source>During runtime, Logger configuration is changed via API functions. See section &lt;code&gt;&lt;a href=&quot;logger#configuration_API&quot;&gt;Configuration API Functions&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;logger(3)&lt;/code&gt; manual page.</source>
          <target state="translated">実行時に、ロガー構成はAPI関数を介して変更されます。セクションを参照してください &lt;code&gt;&lt;a href=&quot;logger#configuration_API&quot;&gt;Configuration API Functions&lt;/a&gt;&lt;/code&gt; 中に &lt;code&gt;logger(3)&lt;/code&gt; マニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="20bc30338e4de5739d661e0625d9f9d24eeca0b3" translate="yes" xml:space="preserve">
          <source>During the start of a system, when a client application &lt;strong&gt;could&lt;/strong&gt; start prior to the SNMP manager but is dependent upon it, and therefor has to wait for it to start.</source>
          <target state="translated">システムの起動時に、クライアントアプリケーション&lt;strong&gt;が&lt;/strong&gt; SNMPマネージャーの前に起動&lt;strong&gt;できたが&lt;/strong&gt;、SNMPマネージャーに依存しているため、起動するまで待機する必要がある場合。</target>
        </trans-unit>
        <trans-unit id="6fcbdddd017956cd0019e350d24a1939cbcd022e" translate="yes" xml:space="preserve">
          <source>During use of a port opened using &lt;code&gt;{spawn, Name}&lt;/code&gt;, &lt;code&gt;{spawn_driver, Name}&lt;/code&gt;, or &lt;code&gt;{spawn_executable, Name}&lt;/code&gt;, errors arising when sending messages to it are reported to the owning process using signals of the form &lt;code&gt;{'EXIT', Port, PosixCode}&lt;/code&gt;. For the possible values of &lt;code&gt;PosixCode&lt;/code&gt;, see &lt;code&gt;file(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{spawn, Name}&lt;/code&gt; 、 &lt;code&gt;{spawn_driver, Name}&lt;/code&gt; 、または &lt;code&gt;{spawn_executable, Name}&lt;/code&gt; を使用して開いたポートの使用中に、ポートにメッセージを送信するときに発生したエラーは、 &lt;code&gt;{'EXIT', Port, PosixCode}&lt;/code&gt; 形式のシグナルを使用して所有プロセスに報告されます、PosixCode}。 &lt;code&gt;PosixCode&lt;/code&gt; の可能な値については、 &lt;code&gt;file(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b34f8bde4114e100ca5b54c517844199b48657fc" translate="yes" xml:space="preserve">
          <source>Dynamic Erlang Driver Linking</source>
          <target state="translated">ダイナミックなErlangドライバのリンク</target>
        </trans-unit>
        <trans-unit id="a44067361315b05c273ea0405f7864e1bd1bf576" translate="yes" xml:space="preserve">
          <source>Dynamic driver loader and linker.</source>
          <target state="translated">動的なドライバローダとリンカ。</target>
        </trans-unit>
        <trans-unit id="d13cc2f7953cdc9f758c18be9f7b8a02412bfdd7" translate="yes" xml:space="preserve">
          <source>Dynamic reconfiguration</source>
          <target state="translated">動的再構成</target>
        </trans-unit>
        <trans-unit id="13aa9a50086b6ac76b1cb8c6f3e9af0f9dba8709" translate="yes" xml:space="preserve">
          <source>Dynamic version detection</source>
          <target state="translated">動的バージョン検出</target>
        </trans-unit>
        <trans-unit id="8c2f2c4c8b8adb6ccd5249a4e952ee59713af7b6" translate="yes" xml:space="preserve">
          <source>Dynamically adds a child specification to supervisor &lt;code&gt;SupRef&lt;/code&gt;, which starts the corresponding child process.</source>
          <target state="translated">子仕様をスーパーバイザー &lt;code&gt;SupRef&lt;/code&gt; に動的に追加し、対応する子プロセスを開始します。</target>
        </trans-unit>
        <trans-unit id="fdde27315f8fe4afa9c39d16385e94b637fcfb0c" translate="yes" xml:space="preserve">
          <source>Dynamically loaded into the Erlang machines address space, which is the only alternative if a precompiled version of Erlang is to be used</source>
          <target state="translated">Erlangマシンのアドレス空間に動的にロードされます。</target>
        </trans-unit>
        <trans-unit id="47cb4a6e83f17f59d314ef1f01f8353a46aca8ff" translate="yes" xml:space="preserve">
          <source>Dynamically started services are not handled by application takeover and failover behavior when &lt;code&gt;Inets&lt;/code&gt; is run as a distributed application. Nor are they automatically restarted when the &lt;code&gt;Inets&lt;/code&gt; application is restarted. As long as the &lt;code&gt;Inets&lt;/code&gt; application is operational, they are supervised and can be soft code upgraded.</source>
          <target state="translated">&lt;code&gt;Inets&lt;/code&gt; が分散アプリケーションとして実行されている場合、動的に開始されるサービスは、アプリケーションのテイクオーバーとフェイルオーバーの動作によって処理されません。また、 &lt;code&gt;Inets&lt;/code&gt; アプリケーションの再起動時に自動的に再起動されることもありません。 &lt;code&gt;Inets&lt;/code&gt; アプリケーションが動作している限り、監視され、ソフトコードをアップグレードできます。</target>
        </trans-unit>
        <trans-unit id="36f230b8bfa12c208281cb0fc0f2a5f1622391c2" translate="yes" xml:space="preserve">
          <source>Dynamically starts an &lt;code&gt;FTP&lt;/code&gt; session after the &lt;code&gt;ftp&lt;/code&gt; application has been started.</source>
          <target state="translated">&lt;code&gt;ftp&lt;/code&gt; アプリケーションが開始された後、動的に &lt;code&gt;FTP&lt;/code&gt; セッションを開始します。</target>
        </trans-unit>
        <trans-unit id="1096e1dba137c5f15869f0236240de198946ed71" translate="yes" xml:space="preserve">
          <source>Dynamically starts an &lt;code&gt;Inets&lt;/code&gt; service after the &lt;code&gt;Inets&lt;/code&gt; application has been started.</source>
          <target state="translated">&lt;code&gt;Inets&lt;/code&gt; アプリケーションが開始された後、 &lt;code&gt;Inets&lt;/code&gt; サービスを動的に開始します。</target>
        </trans-unit>
        <trans-unit id="3be880303bce628299b41c673e201ce5941eb9d6" translate="yes" xml:space="preserve">
          <source>Dynamically updates the compression level and compression strategy. The interpretation of &lt;code&gt;Level&lt;/code&gt; and &lt;code&gt;Strategy&lt;/code&gt; is as in &lt;code&gt;&lt;a href=&quot;#deflateInit-6&quot;&gt;deflateInit/6&lt;/a&gt;&lt;/code&gt;. This can be used to switch between compression and straight copy of the input data, or to switch to a different kind of input data requiring a different strategy. If the compression level is changed, the input available so far is compressed with the old level (and can be flushed); the new level takes effect only at the next call of &lt;code&gt;&lt;a href=&quot;#deflate-3&quot;&gt;deflate/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">圧縮レベルと圧縮戦略を動的に更新します。 &lt;code&gt;Level&lt;/code&gt; と &lt;code&gt;Strategy&lt;/code&gt; の解釈は &lt;code&gt;&lt;a href=&quot;#deflateInit-6&quot;&gt;deflateInit/6&lt;/a&gt;&lt;/code&gt; と同じです。これを使用して、入力データの圧縮と直接コピーを切り替えるか、別の方法を必要とする別の種類の入力データに切り替えることができます。圧縮レベルが変更された場合、これまでに使用可能な入力は古いレベルで圧縮されます（フラッシュすることもできます）。新しいレベルは、 &lt;code&gt;&lt;a href=&quot;#deflate-3&quot;&gt;deflate/3&lt;/a&gt;&lt;/code&gt; の次の呼び出しでのみ有効になります。</target>
        </trans-unit>
        <trans-unit id="0ebc0a5394d8ebbe656f6c55943154c331bf1d57" translate="yes" xml:space="preserve">
          <source>EEP 40 suggests that the language is also to allow for Unicode characters &amp;gt; 255 in variable names. Whether to implement that EEP is yet to be decided.</source>
          <target state="translated">EEP 40は、言語が変数名で255を超えるUnicode文字を許可することも示唆しています。そのEEPを実装するかどうかはまだ決定されていません。</target>
        </trans-unit>
        <trans-unit id="db5d4c5f39084ed8a98f2f308319f6fc3f3fec69" translate="yes" xml:space="preserve">
          <source>ERL Scheme</source>
          <target state="translated">ERLスキーム</target>
        </trans-unit>
        <trans-unit id="778ad9b263b62197707df5c99c6055f019a776e0" translate="yes" xml:space="preserve">
          <source>ERTS</source>
          <target state="translated">ERTS</target>
        </trans-unit>
        <trans-unit id="084c82f27172e39caac8b32a5c5a3de227cdada9" translate="yes" xml:space="preserve">
          <source>ERTS 5.9 introduced two new integer types, &lt;code&gt;&lt;a href=&quot;#ErlDrvSizeT&quot;&gt;ErlDrvSizeT&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ErlDrvSSizeT&quot;&gt;ErlDrvSSizeT&lt;/a&gt;&lt;/code&gt;, which can hold 64-bit sizes if necessary.</source>
          <target state="translated">ERTS 5.9では、必要に応じて64ビットサイズを保持できる &lt;code&gt;&lt;a href=&quot;#ErlDrvSizeT&quot;&gt;ErlDrvSizeT&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#ErlDrvSSizeT&quot;&gt;ErlDrvSSizeT&lt;/a&gt;&lt;/code&gt; の 2つの新しい整数型が導入されました。</target>
        </trans-unit>
        <trans-unit id="85dc1296e2947a844efb66d65438ec8b2ad8252a" translate="yes" xml:space="preserve">
          <source>ERTS User's Guide</source>
          <target state="translated">ERTSユーザーズガイド</target>
        </trans-unit>
        <trans-unit id="44f592d8979778308c2fb81544db747d809abcc9" translate="yes" xml:space="preserve">
          <source>ERTS version the release is intended for.</source>
          <target state="translated">リリースが対象としているERTSのバージョン。</target>
        </trans-unit>
        <trans-unit id="b612ad3744b82b6590ec2ed7801b6b4e71c44b19" translate="yes" xml:space="preserve">
          <source>ERTS/erl_driver</source>
          <target state="translated">ERTS/erl_driver</target>
        </trans-unit>
        <trans-unit id="c73f4aaaa252f5447d44e10d202890c287a9dd79" translate="yes" xml:space="preserve">
          <source>ERTS/erl_nif</source>
          <target state="translated">ERTS/erl_nif</target>
        </trans-unit>
        <trans-unit id="6dba289d5b794a18ff5aa78141b1611e24fd604f" translate="yes" xml:space="preserve">
          <source>ERTS/erl_prim_loader</source>
          <target state="translated">ERTS/erl_prim_loader</target>
        </trans-unit>
        <trans-unit id="003545865b7dee179c081e0d8ec83daa48033c14" translate="yes" xml:space="preserve">
          <source>ERTS/erl_tracer</source>
          <target state="translated">ERTS/erl_tracer</target>
        </trans-unit>
        <trans-unit id="207651703485ebb3590aa930b3610f9237b9b992" translate="yes" xml:space="preserve">
          <source>ERTS/erlang</source>
          <target state="translated">ERTS/erlang</target>
        </trans-unit>
        <trans-unit id="b64df6cef05617dfbd4d20c2d8b1cc669b3edfb0" translate="yes" xml:space="preserve">
          <source>ERTS/init</source>
          <target state="translated">ERTS/init</target>
        </trans-unit>
        <trans-unit id="95d08dc392df8636331cdbdbd25742c1d876eac5" translate="yes" xml:space="preserve">
          <source>ERTS/zlib</source>
          <target state="translated">ERTS/zlib</target>
        </trans-unit>
        <trans-unit id="7eceb14d6ed554f3e39c3487db659c8d63e28acd" translate="yes" xml:space="preserve">
          <source>ETS</source>
          <target state="translated">ETS</target>
        </trans-unit>
        <trans-unit id="535109603d1d3983bd1504d46e58246d0b9b5c5b" translate="yes" xml:space="preserve">
          <source>ETS match specifications produce a return value. Usually the &lt;code&gt;MatchBody&lt;/code&gt; contains one single &lt;code&gt;ConditionExpression&lt;/code&gt; that defines the return value without any side effects. Calls with side effects are not allowed in the ETS context.</source>
          <target state="translated">ETS一致仕様は戻り値を生成します。通常、 &lt;code&gt;MatchBody&lt;/code&gt; には、副作用なしで戻り値を定義する1つの &lt;code&gt;ConditionExpression&lt;/code&gt; が含まれています。副作用のある呼び出しは、ETSコンテキストでは許可されていません。</target>
        </trans-unit>
        <trans-unit id="46b5844c30f17802c3dbe2a6160c75fb2768d9bb" translate="yes" xml:space="preserve">
          <source>EUnit builds on ideas from the family of unit testing frameworks for Object Oriented languages that originated with JUnit by Beck and Gamma (and Beck's previous framework SUnit for Smalltalk). However, EUnit uses techniques more adapted to functional and concurrent programming, and is typically less verbose than its relatives.</source>
          <target state="translated">EUnit は、Beck と Gamma による JUnit (および Beck の以前のフレームワークである SUnit for Smalltalk)を基にしたオブジェクト指向言語用のユニットテストフレームワークをベースにしています。しかし、EUnit は機能的なプログラミングや並行プログラミングに適応した技術を使用しており、一般的にはその親戚のものよりも冗長ではありません。</target>
        </trans-unit>
        <trans-unit id="bb84cfb674cc9c07befa3e836772f6d49451b0b9" translate="yes" xml:space="preserve">
          <source>EUnit is a unit testing framework for Erlang. It is very powerful and flexible, is easy to use, and has small syntactical overhead.</source>
          <target state="translated">EUnitはErlangのためのユニットテストフレームワークです。非常に強力で柔軟性があり、使いやすく、構文的なオーバーヘッドも少ないです。</target>
        </trans-unit>
        <trans-unit id="dcb5c9416725af47e0dde86a44e3726fa172542f" translate="yes" xml:space="preserve">
          <source>EVAL Scheme</source>
          <target state="translated">エバールスキーム</target>
        </trans-unit>
        <trans-unit id="e986cd2e713da6eeece44cdc6f88d025029df261" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL support in &lt;code&gt;Common Test&lt;/code&gt; for calling property-based tests.</source>
          <target state="translated">プロパティベースの &lt;code&gt;Common Test&lt;/code&gt; を呼び出すためのCommon Testの実験的サポート。</target>
        </trans-unit>
        <trans-unit id="3535800729023232937a5a75329edb6d668dc3ac" translate="yes" xml:space="preserve">
          <source>EXPERIMENTAL support in Common Test for calling property-based tests.</source>
          <target state="translated">プロパティベースのテストを呼び出すために、Common TestでEXPERIMENTALがサポートされました。</target>
        </trans-unit>
        <trans-unit id="d179ef076d3ba549c1eaefd6c4000085c521b739" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;-spec&lt;/code&gt; contract is to be a subtype of the respective &lt;code&gt;-callback&lt;/code&gt; contract.</source>
          <target state="translated">各 &lt;code&gt;-spec&lt;/code&gt; 契約は、それぞれの &lt;code&gt;-callback&lt;/code&gt; 契約のサブタイプになります。</target>
        </trans-unit>
        <trans-unit id="bbeba8f50a6d88947fa61a1c562fdec9908b5f80" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; is included in some strongly connected component, which implies that a &lt;code&gt;&lt;a href=&quot;#topsort&quot;&gt;topological ordering&lt;/a&gt;&lt;/code&gt; of the created digraph always exists.</source>
          <target state="translated">各 &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; は、強く関連するコンポーネントに含まれています。これは、作成されたダイグラフの &lt;code&gt;&lt;a href=&quot;#topsort&quot;&gt;topological ordering&lt;/a&gt;&lt;/code&gt; が常に存在することを意味します。</target>
        </trans-unit>
        <trans-unit id="b91672b8b9d9c1074d5c3616da5bbe87be145768" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; of the driver use &lt;strong&gt;literally&lt;/strong&gt; the same pathname for the driver when demanding load, but the &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; are not concerned with if the driver is already loaded from the file system or if the object code must be loaded from file system.</source>
          <target state="translated">ドライバーの各 &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;user&lt;/a&gt;&lt;/code&gt; は、ロードを要求するときに&lt;strong&gt;文字通り&lt;/strong&gt;同じドライバーのパス名を使用し &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; が、ドライバーがファイルシステムから既にロードされているかどうか、またはオブジェクトコードをファイルシステムからロードする必要があるかどうかは関係ありません。</target>
        </trans-unit>
        <trans-unit id="4b7b0c5e0a6ab9f7071cc3d4509396575aab0f1b" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Application&lt;/code&gt; (atom) and &lt;code&gt;AppVsn&lt;/code&gt; is the name and version of an application included in the release. The minimal release based on Erlang/OTP consists of the Kernel and STDLIB applications, so these applications must be included in the list.</source>
          <target state="translated">各 &lt;code&gt;Application&lt;/code&gt; （アトム）と &lt;code&gt;AppVsn&lt;/code&gt; は、リリースに含まれているアプリケーションの名前とバージョンです。Erlang / OTPに基づく最小リリースは、カーネルお​​よびSTDLIBアプリケーションで構成されているため、これらのアプリケーションをリストに含める必要があります。</target>
        </trans-unit>
        <trans-unit id="756a2cbaa3819961fd2a604970deabef7e47b59c" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;DownToVsn&lt;/code&gt; is a previous version of the application to downgrade to.</source>
          <target state="translated">各 &lt;code&gt;DownToVsn&lt;/code&gt; は、ダウングレードするアプリケーションの以前のバージョンです。</target>
        </trans-unit>
        <trans-unit id="00de80a9bd6be23947f13b18c11247e44b2c0111" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Instructions&lt;/code&gt; is a list of release handling instructions.</source>
          <target state="translated">各 &lt;code&gt;Instructions&lt;/code&gt; は、リリース処理手順のリストです。</target>
        </trans-unit>
        <trans-unit id="cc4e66320e4a665094adabc03dbd562a3b958289" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Opt&lt;/code&gt; is a tuple &lt;code&gt;{Key,Value}&lt;/code&gt;, which define a certain property of the application. All keys are optional. Default values are used for any omitted keys.</source>
          <target state="translated">各 &lt;code&gt;Opt&lt;/code&gt; は、アプリケーションの特定のプロパティを定義するタプル &lt;code&gt;{Key,Value}&lt;/code&gt; です。すべてのキーはオプションです。省略されたキーにはデフォルト値が使用されます。</target>
        </trans-unit>
        <trans-unit id="481b5fd9f4ed559d8d313890de73dd0798ebaefc" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;UpFromVsn&lt;/code&gt; is a previous version of the application to upgrade from.</source>
          <target state="translated">各 &lt;code&gt;UpFromVsn&lt;/code&gt; は、アップグレード元のアプリケーションの以前のバージョンです。</target>
        </trans-unit>
        <trans-unit id="67d62d9c347c69602abcb833f8f9c4300f1c4701" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;declaration&lt;/code&gt; or &lt;code&gt;rule&lt;/code&gt; ends with a dot (the character &lt;code&gt;'.'&lt;/code&gt;).</source>
          <target state="translated">各 &lt;code&gt;declaration&lt;/code&gt; または &lt;code&gt;rule&lt;/code&gt; は、ドット（文字 &lt;code&gt;'.'&lt;/code&gt; ）で終わります。</target>
        </trans-unit>
        <trans-unit id="65770ef193425908bddd8a2670963b17addf7cbb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;vacmViewTreeFamilyViewName&lt;/code&gt; refers to a collection of sub-trees.</source>
          <target state="translated">各 &lt;code&gt;vacmViewTreeFamilyViewName&lt;/code&gt; は、サブツリーのコレクションを参照します。</target>
        </trans-unit>
        <trans-unit id="5ed7282900bb5fdbff5958dd466870a2cefa9c4c" translate="yes" xml:space="preserve">
          <source>Each CPU will be specified separately (assuming this information can be retrieved from the operating system), that is, a list with one &lt;code&gt;UtilDesc&lt;/code&gt; per CPU will be returned.</source>
          <target state="translated">各CPUは個別に指定されます（この情報がオペレーティングシステムから取得できる場合）、つまり、CPUごとに1 つの &lt;code&gt;UtilDesc&lt;/code&gt; を持つリストが返されます。</target>
        </trans-unit>
        <trans-unit id="34310bfb92de50fb3fdb84c9be6468f58c6dd477" translate="yes" xml:space="preserve">
          <source>Each Diameter application defined on a service is configured with a callback module that implements the &lt;code&gt;application interface&lt;/code&gt; through which diameter communicates the connectivity of remote peers, requests peer selection for outgoing requests, and communicates the reception of incoming Diameter request and answer messages. An application using diameter implements these application callback modules to provide the functionality of the Diameter node(s) it implements.</source>
          <target state="translated">サービスで定義された各Diameterアプリケーションは、diameterがリモートピアの接続を通信し、発信要求のピア選択を要求し、着信Diameter要求と応答メッセージの受信を通信する &lt;code&gt;application interface&lt;/code&gt; を実装するコールバックモジュールで構成されます。Diameterを使用するアプリケーションは、これらのアプリケーションコールバックモジュールを実装して、実装するDiameterノードの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="55244236933611821163d373997b240e1ad6204a" translate="yes" xml:space="preserve">
          <source>Each Diameter application is also configured with a dictionary module that provide encode/decode functionality for outgoing/incoming Diameter messages belonging to the application. A dictionary module is generated from a &lt;code&gt;&lt;a href=&quot;diameter_dict&quot;&gt;dictionary file&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;&lt;a href=&quot;diameterc&quot;&gt;diameterc&lt;/a&gt;&lt;/code&gt; utility. Dictionaries for the RFC 6733 Diameter Common Messages, Base Accounting and Relay applications are provided with the diameter application.</source>
          <target state="translated">各Diameterアプリケーションには、アプリケーションに属する発信/着信Diameterメッセージのエンコード/デコード機能を提供する辞書モジュールも設定されています。辞書モジュールは、 &lt;code&gt;&lt;a href=&quot;diameterc&quot;&gt;diameterc&lt;/a&gt;&lt;/code&gt; ユーティリティを使用して &lt;code&gt;&lt;a href=&quot;diameter_dict&quot;&gt;dictionary file&lt;/a&gt;&lt;/code&gt; から生成されます。 RFC 6733 Diameter共通メッセージ、基本アカウンティング、およびリレーアプリケーションの辞書は、diameterアプリケーションとともに提供されます。</target>
        </trans-unit>
        <trans-unit id="b9eadf73a0c0284009b59a288825d06c68918732" translate="yes" xml:space="preserve">
          <source>Each Logger handler has a configured formatter specified as a module and a configuration term. The purpose of the formatter is to translate the log events to a final printable string (&lt;code&gt;unicode:chardata()&lt;/code&gt;) which can be written to the output device of the handler. See sections &lt;code&gt;&lt;a href=&quot;logger_chapter#handlers&quot;&gt;Handlers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger_chapter#formatters&quot;&gt;Formatters&lt;/a&gt;&lt;/code&gt; in the Kernel User's Guide for more information.</source>
          <target state="translated">各ロガーハンドラーには、モジュールおよび構成用語として指定された構成済みフォーマッターがあります。フォーマッタの目的は、ログイベントを、ハンドラの出力デバイスに書き込むことができる最終的な印刷可能な文字列（ &lt;code&gt;unicode:chardata()&lt;/code&gt; ）に変換することです。詳細については、 『カーネルユーザーガイド』の「 &lt;code&gt;&lt;a href=&quot;logger_chapter#handlers&quot;&gt;Handlers&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;logger_chapter#formatters&quot;&gt;Formatters&lt;/a&gt;&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="f596e5edca19c4fb206995b44af1186fe1cc57ca" translate="yes" xml:space="preserve">
          <source>Each MIB is contained in one application. The MIB text files are stored under &lt;code&gt;mibs/&amp;lt;MIB&amp;gt;.mib&lt;/code&gt; in the application directory. The generated &lt;code&gt;.hrl&lt;/code&gt; files with constant declarations are stored under &lt;code&gt;include/&amp;lt;MIB&amp;gt;.hrl&lt;/code&gt;, and the compiled MIBs are stored under &lt;code&gt;priv/mibs/&amp;lt;MIB&amp;gt;.bin&lt;/code&gt;. For example, the &lt;code&gt;OTP-MIB&lt;/code&gt; is included in the SASL application:</source>
          <target state="translated">各MIBは1つのアプリケーションに含まれています。MIBテキストファイルは、アプリケーションディレクトリの &lt;code&gt;mibs/&amp;lt;MIB&amp;gt;.mib&lt;/code&gt; に保存されます。定数宣言を &lt;code&gt;include/&amp;lt;MIB&amp;gt;.hrl&lt;/code&gt; 生成された &lt;code&gt;.hrl&lt;/code&gt; ファイルはinclude / &amp;lt;MIB&amp;gt; .hrlに格納され、コンパイルされたMIBは &lt;code&gt;priv/mibs/&amp;lt;MIB&amp;gt;.bin&lt;/code&gt; に格納されます。たとえば、 &lt;code&gt;OTP-MIB&lt;/code&gt; はSASLアプリケーションに含まれています。</target>
        </trans-unit>
        <trans-unit id="96c9a5aa6202f44778f708491759e58be7229aa8" translate="yes" xml:space="preserve">
          <source>Each OAM component in OTP is implemented as one sub-application, which can be included in a management application for the system. Notice that such a complete management application is not in the scope of this generic functionality. However, this section includes examples illustrating how such an application can be built.</source>
          <target state="translated">OTP の各 OAM コンポーネントは、1 つのサブアプリケーションとして実装され、システムの管理アプリケーションに含めることができます。このような完全な管理アプリケーションは、この一般的な機能の範囲外であることに注意してください。しかし、このセクションでは、そのようなアプリケーションをどのように構築することができるかを例示しています。</target>
        </trans-unit>
        <trans-unit id="c6f070d243c99f1d0073b04e83aa5a92016f0467" translate="yes" xml:space="preserve">
          <source>Each Object Identifier (OID) is made up of a table name and a key. For example, if an employee record is represented by the tuple &lt;code&gt;{employee, 104732, klacke, 7, male, 98108, {221, 015}}&lt;/code&gt;, this record has an OID, which is the tuple &lt;code&gt;{employee, 104732}&lt;/code&gt;.</source>
          <target state="translated">各オブジェクト識別子（OID）は、テーブル名とキーで構成されています。たとえば、従業員レコードがタプル &lt;code&gt;{employee, 104732, klacke, 7, male, 98108, {221, 015}}&lt;/code&gt; 場合、このレコードにはOIDがあり、これはタプル &lt;code&gt;{employee, 104732}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="19d3a9c7f3953415557107b9a4fed3fe829f6388" translate="yes" xml:space="preserve">
          <source>Each Xref server is referred to by a unique name. The name is given when creating the server:</source>
          <target state="translated">各 Xref サーバは一意の名前で参照されます。この名前はサーバを作成する際に与えられます。</target>
        </trans-unit>
        <trans-unit id="55f7fd00c871ae23ab70f17a8c5addef99b7eb4f" translate="yes" xml:space="preserve">
          <source>Each breakpoint has a &lt;strong&gt;trigger action&lt;/strong&gt; that specifies what is to happen when a process has reached it (and stopped):</source>
          <target state="translated">各ブレークポイントには、プロセスが到達して停止したときに何が起こるかを指定する&lt;strong&gt;トリガーアクション&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="37cf7b36c1772164368bfd9e88986c528dd6631f" translate="yes" xml:space="preserve">
          <source>Each certificate in the certificate chain is issued by the previous one.</source>
          <target state="translated">証明書チェーンの各証明書は、前の証明書によって発行されます。</target>
        </trans-unit>
        <trans-unit id="69b524a56767c5a464e26aa46fb5fd446cb873ad" translate="yes" xml:space="preserve">
          <source>Each channel is an isolated &quot;pipe&quot; between a client-side process and a server-side process. Thoose process pairs could handle for example file transfers (sftp) or remote command execution (shell, exec and/or cli). If a custom shell is implemented, the user of the client could execute the special commands remotely. Note that the user is not necessarily a human but probably a system interfacing the SSH app.</source>
          <target state="translated">各チャネルは、クライアント側プロセスとサーバ側プロセスの間の分離された「パイプ」です。これらのプロセスペアは、例えばファイル転送(sftp)やリモートコマンド実行(shell,exec および/または cli)を処理することができます。カスタムシェルが実装されている場合、クライアントのユーザがリモートで特別なコマンドを実行することができます。ユーザは必ずしも人間とは限りませんが、おそらくは SSH アプリに接続するシステムであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="ab979cd854906b4b575e775a64fa69a8a251b961" translate="yes" xml:space="preserve">
          <source>Each character has exactly one Unicode general category property, specified by a two-letter acronym. For compatibility with Perl, negation can be specified by including a circumflex between the opening brace and the property name. For example, \p{^Lu} is the same as \P{Lu}.</source>
          <target state="translated">各キャラクタは、2 文字の頭字語で指定された Unicode 一般カテゴリプロパティを正確に 1 つ持ちます。Perlとの互換性のために、開中括弧とプロパティ名の間に円弧を含めることで否定を指定することができます。例えば、\p{^Lu}は、\P{Lu}と同じです。</target>
        </trans-unit>
        <trans-unit id="ee28d4558757e9383cb566bdb9b21b23482e6efe" translate="yes" xml:space="preserve">
          <source>Each character in the entry's name and value that cannot be expressed using the selected character encoding, is replaced by a string consisting of a U+0026 AMPERSAND character (&amp;amp;), a &quot;#&quot; (U+0023) character, one or more ASCII digits representing the Unicode code point of the character in base ten, and finally a &quot;;&quot; (U+003B) character.</source>
          <target state="translated">選択した文字エンコーディングを使用して表現できないエントリの名前と値の各文字は、U + 0026 AMPERSAND文字（＆）、 &quot;＃&quot;（U + 0023）文字、1つ以上のASCIIで構成される文字列に置き換えられます10進数の文字のUnicodeコードポイントを表す数字、最後に「;」（U + 003B）文字。</target>
        </trans-unit>
        <trans-unit id="4e32cc8ee72e653d2a8bc902dfb063ec8881e171" translate="yes" xml:space="preserve">
          <source>Each character is stored in one to four bytes depending on code point. The encoding is backward compatible with bytewise representation of 7-bit ASCII, as all 7-bit characters are stored in one single byte in UTF-8. The characters beyond code point 127 are stored in more bytes, letting the most significant bit in the first character indicate a multi-byte character. For details on the encoding, the RFC is publicly available.</source>
          <target state="translated">各文字はコードポイントに応じて1~4バイトで格納されます。すべての 7 ビ ッ ト 文字が UTF-8 の 1 バ イ ト に格納 さ れてい る ので、 エン コ ーデ ィ ン グは 7 ビ ッ ト ASCII の 1 バ イ ト 単位での表現 と 互換性があ り ます。コ ー ド ポ イ ン ト 127 を超え る キ ャ ラ ク タ は、 先頭キ ャ ラ ク タ の最上位ビ ッ ト がマルチバ イ ト キ ャ ラ ク タ を示す よ う に、 よ り 多 く のバ イ ト 単位で格納 さ れます。エンコーディングの詳細については、RFCが公開されています。</target>
        </trans-unit>
        <trans-unit id="4fc3cbdbc904d26469c742d8bcc9d626c6068c21" translate="yes" xml:space="preserve">
          <source>Each client and server in &lt;code&gt;Inets&lt;/code&gt; is viewed as a service. Services can be configured to be started at application startup or dynamically in runtime. To run &lt;code&gt;Inets&lt;/code&gt; as a distributed application that handles application failover and takeover, configure the services to be started at application startup. When starting the &lt;code&gt;Inets&lt;/code&gt; application, the &lt;code&gt;Inets&lt;/code&gt; top supervisor starts a number of subsupervisors and worker processes for handling the provided services. When starting services dynamically, new children are added to the supervision tree, unless the service is started with the standalone option. In this case the service is linked to the calling process and all OTP application features, such as soft upgrade, are lost.</source>
          <target state="translated">&lt;code&gt;Inets&lt;/code&gt; の各クライアントとサーバーはサービスとして表示されます。サービスは、アプリケーションの起動時に、または実行時に動的に開始するように構成できます。アプリケーションのフェイルオーバーとテイクオーバーを処理する分散アプリケーションとして &lt;code&gt;Inets&lt;/code&gt; を実行するには、アプリケーションの起動時にサービスが開始されるように構成します。 &lt;code&gt;Inets&lt;/code&gt; アプリケーションを開始すると、 &lt;code&gt;Inets&lt;/code&gt; トップスーパーバイザは、提供されたサービスを処理するための多数のサブスーパーバイザとワーカープロセスを開始します。サービスを動的に開始すると、サービスがスタンドアロンオプションで開始されない限り、新しい子が監視ツリーに追加されます。この場合、サービスは呼び出しプロセスにリンクされ、ソフトアップグレードなどのすべてのOTPアプリケーション機能が失われます。</target>
        </trans-unit>
        <trans-unit id="ea67a6cd5709298d77de8bb9187376f1a4c88dd1" translate="yes" xml:space="preserve">
          <source>Each connection may have its own configuration of callback modules, re-send timers, transaction id ranges etc. and they may be re-configured on-the-fly.</source>
          <target state="translated">各接続は、コールバックモジュール、再送タイマー、トランザクションIDの範囲などを独自に設定し、その場で再設定することができます。</target>
        </trans-unit>
        <trans-unit id="20dd79dc25ece038d84ac0a232d7057d3f1bdbf6" translate="yes" xml:space="preserve">
          <source>Each directory in the path to the requested asset is searched for an access file (default is &lt;code&gt;.htaccess&lt;/code&gt;), which restricts the web servers rights to respond to a request. If an access file is found, the rules in that file is applied to the request.</source>
          <target state="translated">リクエストされたアセットへのパスにある各ディレクトリでアクセスファイルが検索され（デフォルトは &lt;code&gt;.htaccess&lt;/code&gt; ）、リクエストに応答するWebサーバーの権限が制限されます。アクセスファイルが見つかると、そのファイルのルールがリクエストに適用されます。</target>
        </trans-unit>
        <trans-unit id="2e833d3f6d71147154bc1a01e9a0319de7a5932f" translate="yes" xml:space="preserve">
          <source>Each driver instance is associated with a port. Every port has a port owner process. Communication with the port is normally done through the port owner process. Most of the functions take the &lt;code&gt;port&lt;/code&gt; handle as an argument. This identifies the driver instance. Notice that this port handle must be stored by the driver, it is not given when the driver is called from the emulator (see &lt;code&gt;&lt;a href=&quot;driver_entry#emulator&quot;&gt;driver_entry&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">各ドライバインスタンスはポートに関連付けられています。すべてのポートにはポート所有者プロセスがあります。ポートとの通信は通常、ポート所有者プロセスを通じて行われます。ほとんどの関数は、引数として &lt;code&gt;port&lt;/code&gt; ハンドルを取ります。これは、ドライバーのインスタンスを識別します。このポートハンドルはドライバーによって格納される必要があることに注意してください。エミュレーターからドライバーが呼び出された場合は指定されません（ &lt;code&gt;&lt;a href=&quot;driver_entry#emulator&quot;&gt;driver_entry&lt;/a&gt;&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="56bbcc2fd8950bda744a20f900b28a4f1c7248c3" translate="yes" xml:space="preserve">
          <source>Each element &lt;code&gt;Ei&lt;/code&gt; specifies a &lt;strong&gt;segment&lt;/strong&gt; of the bit string. Each element &lt;code&gt;Ei&lt;/code&gt; is a value, followed by an optional &lt;strong&gt;size expression&lt;/strong&gt; and an optional &lt;strong&gt;type specifier list&lt;/strong&gt;.</source>
          <target state="translated">各要素 &lt;code&gt;Ei&lt;/code&gt; は、ビット文字列の&lt;strong&gt;セグメント&lt;/strong&gt;を指定します。各要素 &lt;code&gt;Ei&lt;/code&gt; は値であり、その後にオプションの&lt;strong&gt;サイズ式&lt;/strong&gt;とオプションの&lt;strong&gt;タイプ指定子リストが&lt;/strong&gt;続き&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="003d91a46f3f2bb18a1d90076a666cbaafc26e27" translate="yes" xml:space="preserve">
          <source>Each element specifies a certain &lt;strong&gt;segment&lt;/strong&gt; of the bitstring. A segment is a set of contiguous bits of the binary (not necessarily on a byte boundary). The first element specifies the initial segment, the second element specifies the following segment, and so on.</source>
          <target state="translated">各要素は、ビット文字列の特定の&lt;strong&gt;セグメント&lt;/strong&gt;を指定します。セグメントは、バイナリの連続するビットのセットです（バイト境界にある必要はありません）。最初の要素は最初のセグメントを指定し、2番目の要素は次のセグメントを指定します。</target>
        </trans-unit>
        <trans-unit id="5dc571d2da8f66291be308f1e1c565752924414f" translate="yes" xml:space="preserve">
          <source>Each employee works on a number of projects, hence the &lt;code&gt;in_proj&lt;/code&gt; relationship.</source>
          <target state="translated">各従業員はいくつかのプロジェクトに取り組んでいるため、 &lt;code&gt;in_proj&lt;/code&gt; 関係にあります。</target>
        </trans-unit>
        <trans-unit id="94646e4e155f2a1439c478997cfa6928f0711fd2" translate="yes" xml:space="preserve">
          <source>Each entry in the resulting list contains the following corresponding information about the program forms:</source>
          <target state="translated">結果として得られるリストの各エントリには、プログラムフォームに関する以下の対応する情報が含まれている。</target>
        </trans-unit>
        <trans-unit id="864db500c08a498afdb397e4ebfd890146597d0d" translate="yes" xml:space="preserve">
          <source>Each entry is a term:</source>
          <target state="translated">各エントリは用語です。</target>
        </trans-unit>
        <trans-unit id="70625b8b976b15fa4bf08d632aae581c8cb53c9f" translate="yes" xml:space="preserve">
          <source>Each entry is a tuple of size four:</source>
          <target state="translated">各エントリはサイズ4のタプルです。</target>
        </trans-unit>
        <trans-unit id="ef1dcdb71453a9f45d4f9107238b7424b3b3c1cb" translate="yes" xml:space="preserve">
          <source>Each entry is a tuple of size two:</source>
          <target state="translated">各エントリはサイズ2のタプルです。</target>
        </trans-unit>
        <trans-unit id="a06e8aaaa5386a6a92b409b8c6444e276227cb07" translate="yes" xml:space="preserve">
          <source>Each entry is a tuple:</source>
          <target state="translated">各エントリはタプルです。</target>
        </trans-unit>
        <trans-unit id="d485e82d6d63995f59c4df6b1bc20bfb19eec6ff" translate="yes" xml:space="preserve">
          <source>Each entry is one of the terms, one entry corresponds to one row in one of the tables.</source>
          <target state="translated">各エントリは用語の1つであり、1つのエントリはテーブルの1つの行に対応しています。</target>
        </trans-unit>
        <trans-unit id="4b7bb37e8a1565d711f264425424279d0037ae37" translate="yes" xml:space="preserve">
          <source>Each event handler is implemented as a callback module exporting a predefined set of functions. The relationship between the behavior functions and the callback functions is as follows:</source>
          <target state="translated">各イベントハンドラは、定義済みの関数セットをエクスポートするコールバックモジュールとして実装されています。振る舞い関数とコールバック関数の関係は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="d2b50254a125e7c325c0c24b3cf7ecc55cb97d9a" translate="yes" xml:space="preserve">
          <source>Each execution of a match specification is done against a match target term. The format and content of the target term depends on the context in which the match is done. The match target for ETS is always a full table tuple. The match target for call trace is always a list of all function arguments. The match target for event trace depends on the event type, see table below.</source>
          <target state="translated">マッチ指定の各実行は、マッチ対象語に対して行われます。ターゲットタームの形式と内容は、マッチが実行されるコンテキストに依存します。ETS のマッチ ターゲットは、常に完全なテーブル タプルです。呼び出しトレースのマッチ ターゲットは、常にすべての関数引数のリストです。イベント トレースのマッチ ターゲットは、イベント タイプに依存します。</target>
        </trans-unit>
        <trans-unit id="6e17c8755f13e7dc1db4b809ecd86d0b89dadb10" translate="yes" xml:space="preserve">
          <source>Each field in a record declaration can have an optional, explicit, default initializer expression, and an optional type.</source>
          <target state="translated">レコード宣言の各フィールドは、オプションで明示的なデフォルトのイニシャライザ式とオプションの型を持つことができます。</target>
        </trans-unit>
        <trans-unit id="35a4d77421dde7b897b30082bb04311e87287900" translate="yes" xml:space="preserve">
          <source>Each file in the list will be read and processed separately. For every file, each reference to some module M, such that there is an entry &lt;code&gt;{&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;}&lt;/code&gt; in &lt;code&gt;Renamings&lt;/code&gt;, will be changed to the corresponding M1. Furthermore, if a file F defines module M, and there is an entry &lt;code&gt;{&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;}&lt;/code&gt; in &lt;code&gt;Renamings&lt;/code&gt;, a new file named &lt;code&gt;&amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;.erl&lt;/code&gt; will be created in the same directory as F, containing the source code for module M, renamed to M1. If M does not have an entry in &lt;code&gt;Renamings&lt;/code&gt;, the module is not renamed, only updated, and the resulting source code is written to &lt;code&gt;&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;.erl&lt;/code&gt; (typically, this overwrites the original file). The &lt;code&gt;suffix&lt;/code&gt; option (see below) can be used to change the default &quot;&lt;code&gt;.erl&lt;/code&gt;&quot; suffix for the generated files.</source>
          <target state="translated">リスト内の各ファイルは個別に読み取られて処理されます。すべてのファイルのために、いくつかのモジュールMへの各参照は、エントリが存在するよう &lt;code&gt;{&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;}&lt;/code&gt; で &lt;code&gt;Renamings&lt;/code&gt; は、対応するM1に変更されます。さらに、ファイルFがモジュールMを定義し、 &lt;code&gt;{&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;, &amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;}&lt;/code&gt; エントリ{&amp;lt;em&amp;gt; M &amp;lt;/ em&amp;gt;、&amp;lt;em&amp;gt; M1 &amp;lt;/ em&amp;gt;}がある場合、 &lt;code&gt;&amp;lt;em&amp;gt;M1&amp;lt;/em&amp;gt;.erl&lt;/code&gt; という &lt;code&gt;Renamings&lt;/code&gt; の新しいファイルになります。 erlはFと同じディレクトリに作成され、モジュールMのソースコードを含み、名前がM1に変更されます。 Mの &lt;code&gt;&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;.erl&lt;/code&gt; エントリがない場合、モジュールの &lt;code&gt;Renamings&lt;/code&gt; は変更されず、更新のみが行われ、結果のソースコードは&amp;lt;em&amp;gt; M &amp;lt;/ em&amp;gt; .erlに書き込まれます（通常、これにより元のファイルが上書きされます）。の &lt;code&gt;suffix&lt;/code&gt; オプション（以下を参照）を使用して、生成されたファイルのデフォルトの「 &lt;code&gt;.erl&lt;/code&gt; 」サフィックスを変更できます。</target>
        </trans-unit>
        <trans-unit id="49eefe6dc97d048f34dac5cabf7a205b16b70416" translate="yes" xml:space="preserve">
          <source>Each filter set consists of a &lt;strong&gt;log level check&lt;/strong&gt;, followed by zero or more &lt;strong&gt;filter functions&lt;/strong&gt;.</source>
          <target state="translated">各フィルターセットは、&lt;strong&gt;ログレベルチェックと&lt;/strong&gt;、その後に続く0個以上の&lt;strong&gt;フィルター関数&lt;/strong&gt;で構成されます。</target>
        </trans-unit>
        <trans-unit id="a9677f896b4c452b2ab214f54b61495167737353" translate="yes" xml:space="preserve">
          <source>Each function takes the argument &lt;code&gt;NameDb&lt;/code&gt;, which is a tuple &lt;code&gt;{Name, Db}&lt;/code&gt;, to identify which database the functions should use. &lt;code&gt;Name&lt;/code&gt; is the symbolic name of the managed object as defined in the MIB, and &lt;code&gt;Db&lt;/code&gt; is either &lt;code&gt;volatile&lt;/code&gt;, &lt;code&gt;persistent&lt;/code&gt;, or &lt;code&gt;mnesia&lt;/code&gt;. If it is &lt;code&gt;mnesia&lt;/code&gt;, all variables are stored in the Mnesia table &lt;code&gt;snmp_variables&lt;/code&gt; which must be a table with two attributes (not a Mnesia SNMP table). The SNMP tables are stored in Mnesia tables with the same names as the SNMP tables. All functions assume that a Mnesia table exists with the correct name and attributes. It is the programmer's responsibility to ensure this. Specifically, if variables are stored in Mnesia, the table &lt;code&gt;snmp_variables&lt;/code&gt; must be created by the programmer. The record definition for this table is defined in the file &lt;code&gt;snmp/include/snmp_types.hrl&lt;/code&gt;.</source>
          <target state="translated">各関数はタプル &lt;code&gt;{Name, Db}&lt;/code&gt; である引数 &lt;code&gt;NameDb&lt;/code&gt; を取り、関数が使用するデータベースを識別します。 &lt;code&gt;Name&lt;/code&gt; は、MIBで定義された管理対象オブジェクトの記号名であり、 &lt;code&gt;Db&lt;/code&gt; は、 &lt;code&gt;volatile&lt;/code&gt; 、 &lt;code&gt;persistent&lt;/code&gt; 、または &lt;code&gt;mnesia&lt;/code&gt; のいずれかです。 &lt;code&gt;mnesia&lt;/code&gt; の場合、すべての変数はMnesiaテーブルの &lt;code&gt;snmp_variables&lt;/code&gt; に格納されますこれは、2つの属性を持つテーブルでなければなりません（Mnesia SNMPテーブルではありません）。SNMPテーブルは、SNMPテーブルと同じ名前のMnesiaテーブルに格納されます。すべての関数は、正しい名前と属性を持つMnesiaテーブルが存在することを前提としています。これを保証するのはプログラマの責任です。具体的には、変数がMnesiaに格納されている場合、テーブル &lt;code&gt;snmp_variables&lt;/code&gt; はプログラマーが作成する必要があります。このテーブルのレコード定義は、ファイル &lt;code&gt;snmp/include/snmp_types.hrl&lt;/code&gt; で定義されています。</target>
        </trans-unit>
        <trans-unit id="4c1190978962592425d6b4592ae603c7ba88ca4d" translate="yes" xml:space="preserve">
          <source>Each instance of &lt;code&gt;ErlNifResourceType&lt;/code&gt; represents a class of memory-managed resource objects that can be garbage collected. Each resource type has a unique name and a destructor function that is called when objects of its type are released.</source>
          <target state="translated">&lt;code&gt;ErlNifResourceType&lt;/code&gt; の各インスタンスは、ガベージコレクション可能なメモリ管理リソースオブジェクトのクラスを表します。各リソースタイプには一意の名前と、そのタイプのオブジェクトが解放されたときに呼び出されるデストラクタ関数があります。</target>
        </trans-unit>
        <trans-unit id="45e1ea35cab57f7ba717000c69e30acd0ba46d49" translate="yes" xml:space="preserve">
          <source>Each key part is 64 bits (in CBC mode only 8 bits are used)</source>
          <target state="translated">各キー部は64ビット(CBCモードでは8ビットのみ使用</target>
        </trans-unit>
        <trans-unit id="35103fefad295298276e9cfdc33729d99099ac1d" translate="yes" xml:space="preserve">
          <source>Each key-value association in the map is called an &lt;strong&gt;association pair&lt;/strong&gt;. The key and value parts of the pair are called &lt;strong&gt;elements&lt;/strong&gt;. The number of association pairs is said to be the &lt;strong&gt;size&lt;/strong&gt; of the map.</source>
          <target state="translated">マップ内の各キーと値の関連付けは、&lt;strong&gt;関連ペア&lt;/strong&gt;と呼ばれます。ペアのキーと値の部分は&lt;strong&gt;要素&lt;/strong&gt;と呼ばれ&lt;strong&gt;ます&lt;/strong&gt;。関連ペアの数は、マップの&lt;strong&gt;サイズ&lt;/strong&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="603c93584be31e061e41c3144cba0c9593d7cc4e" translate="yes" xml:space="preserve">
          <source>Each list element is copied only once. The growing result &lt;code&gt;Acc&lt;/code&gt; is the right operand for the &lt;code&gt;++&lt;/code&gt; operator, and it is &lt;strong&gt;not&lt;/strong&gt; copied.</source>
          <target state="translated">各リスト要素は一度だけコピーされます。増加する結果 &lt;code&gt;Acc&lt;/code&gt; は &lt;code&gt;++&lt;/code&gt; 演算子の正しいオペランドであり、コピーされ&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="53cec8595242fffcee11b05ab4b26518e9f93ca7" translate="yes" xml:space="preserve">
          <source>Each managed object can exist in many instances within a SNMP entity. To identify the instances, specified by an MIB module, a method to distinguish the actual instance by its 'scope' or context is used. Often the context is a physical or a logical device. It can include multiple devices, a subset of a single device or a subset of multiple devices, but the context is always defined as a subset of a single SNMP entity. To be able to identify a specific item of management information within an SNMP entity, the context, the object type and its instance must be used.</source>
          <target state="translated">各管理対象オブジェクトは、SNMPエンティティ内に多数のインスタンスで存在することができます。MIBモジュールで指定されたインスタンスを識別するために、実際のインスタンスを「スコープ」またはコンテキストで区別する方法が使用されます。コンテキストは、物理デバイスまたは論理デバイスであることが多いです。複数のデバイス、単一のデバイスのサブセット、または複数のデバイスのサブセットを含むことができますが、コンテキストは常に単一のSNMPエンティティのサブセットとして定義されます。SNMPエンティティ内の管理情報の特定の項目を識別できるようにするには、コンテキスト、オブジェクトタイプ、およびそのインスタンスを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="19f263cbfb73620501381b721ea1278aa4679eb0" translate="yes" xml:space="preserve">
          <source>Each match spec in the file ends with a full stop (&lt;code&gt;.&lt;/code&gt;) and new (syntactically correct) match specifications can be added to the file manually.</source>
          <target state="translated">ファイル内の各一致仕様は、完全停止（ &lt;code&gt;.&lt;/code&gt; ）で終わり、新しい（構文的に正しい）一致仕様を手動でファイルに追加できます。</target>
        </trans-unit>
        <trans-unit id="452318e4e784ce1e7d0ad04612ebccef8576f3c0" translate="yes" xml:space="preserve">
          <source>Each megaco application maintains its own set of counters. So in a large (distributed) MG/MGC it could be necessary to collect the statistics from several nodes (each) running the megaco application (only one of them with the transport).</source>
          <target state="translated">各メガアプリケーションは、独自のカウンタセットを保持しています。そのため、大規模な(分散した)MG/MGCでは、メガアプリケーションを実行している複数のノード(それぞれ)から統計情報を収集する必要があるかもしれません(トランスポートを使用しているノードはそのうちの1つだけです)。</target>
        </trans-unit>
        <trans-unit id="4a78fbb6a60dc9e6fef3ef416e95740b3e7b0bfe" translate="yes" xml:space="preserve">
          <source>Each module that implements server functionality using the Erlang web server API is to implement the following call back functions:</source>
          <target state="translated">ErlangのWebサーバAPIを使ってサーバ機能を実装している各モジュールは、以下のコールバック関数を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="93853d05ce58ebbbdc0ba0d0956af3c6652ad3e5" translate="yes" xml:space="preserve">
          <source>Each name in &lt;code&gt;Element_List&lt;/code&gt; must be a constructed type except the last name, which can be any type.</source>
          <target state="translated">&lt;code&gt;Element_List&lt;/code&gt; の各名前は、姓を除く構成タイプである必要があります。姓は任意のタイプにすることができます。</target>
        </trans-unit>
        <trans-unit id="01165d972ec961ccac57f0f5b0159f2b826a6985" translate="yes" xml:space="preserve">
          <source>Each normal scheduler has one run queue that it manages. If dirty schedulers schedulers are supported, all dirty CPU schedulers share one run queue, and all dirty IO schedulers share one run queue. That is, we have multiple normal run queues, one dirty CPU run queue and one dirty IO run queue. Work can &lt;strong&gt;not&lt;/strong&gt; migrate between the different types of run queues. Only work in normal run queues can migrate to other normal run queues. This has to be taken into account when evaluating the result.</source>
          <target state="translated">通常の各スケジューラには、管理する実行キューが1つあります。ダーティスケジューラスケジューラがサポートされている場合、すべてのダーティCPUスケジューラは1つの実行キューを共有し、すべてのダーティIOスケジューラは1つの実行キューを共有します。つまり、複数の通常の実行キュー、1つのダーティCPU実行キューと1つのダーティIO実行キューがあります。異なるタイプの実行キュー間で作業を移行すること&lt;strong&gt;は&lt;/strong&gt;でき&lt;strong&gt;ません&lt;/strong&gt;。通常の実行キューでの作業のみが、他の通常の実行キューに移行できます。これは、結果を評価するときに考慮に入れる必要があります。</target>
        </trans-unit>
        <trans-unit id="353f12c04da0c03581d99ccf42ebe1a0217c5270" translate="yes" xml:space="preserve">
          <source>Each of the &lt;code&gt;...&lt;/code&gt; can be a &lt;code&gt;algs_list()&lt;/code&gt; as the argument to the &lt;code&gt;preferred_algorithms&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;...&lt;/code&gt; のそれぞれは、 &lt;code&gt;preferred_algorithms&lt;/code&gt; オプションの引数として &lt;code&gt;algs_list()&lt;/code&gt; にすることができます。</target>
        </trans-unit>
        <trans-unit id="d164e93e542a99949cf0db6b6c3b3b7a076d10ae" translate="yes" xml:space="preserve">
          <source>Each of the following examples shows a simple system configuration file that configures Logger according to the description.</source>
          <target state="translated">次の各例では、記述に従って Logger を設定する簡単なシステム設定ファイルを示しています。</target>
        </trans-unit>
        <trans-unit id="4dbc90fa1fdea3ab66bbf8b0c21d295490ffe46d" translate="yes" xml:space="preserve">
          <source>Each of the following macros takes a single &lt;code&gt;ETERM&lt;/code&gt; pointer as an argument. The macros return a non-zero value if the test is true, otherwise &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">以下の各マクロは、単一の &lt;code&gt;ETERM&lt;/code&gt; ポインターを引数として取ります。テストが真の場合、マクロはゼロ以外の値を返し、そうでない場合は &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="71dbb11141d1b29bdf605883a9525fa04b5926c7" translate="yes" xml:space="preserve">
          <source>Each of the functions described below accept either the module name, the filename, or a binary containing the BEAM module.</source>
          <target state="translated">以下に説明する各関数は、モジュール名、ファイル名、またはBEAMモジュールを含むバイナリのいずれかを受け取ります。</target>
        </trans-unit>
        <trans-unit id="d3a9a70f579bb2d61aec78b5a4d09bff55e0674f" translate="yes" xml:space="preserve">
          <source>Each pair of lowercase and uppercase escape sequences partitions the complete set of characters into two disjoint sets. Any given character matches one, and only one, of each pair. The sequences can appear both inside and outside character classes. They each match one character of the appropriate type. If the current matching point is at the end of the subject string, all fail, as there is no character to match.</source>
          <target state="translated">小文字と大文字のエスケープシーケンスの各ペアは、文字の完全なセットを2つの不連続なセットに分割します。任意の文字は、各ペアのうちの 1 つにマッチします。シーケンスは、文字クラスの内側にも外側にも現れることができます。これらはそれぞれ、適切な型の 1 文字にマッチします。カ レ ン ト マ ッ チポ イ ン ト がサブジ ェ ク ト 文字列の末尾にあ る 場合は、 マ ッ チす る キ ャ ラ ク タ があ り ませんので、 すべて失敗 し ます。</target>
        </trans-unit>
        <trans-unit id="541ed98ae654af7db259dfc961c4315c8d1d922e" translate="yes" xml:space="preserve">
          <source>Each predefined analysis is a shorthand for a &lt;code&gt;&lt;a href=&quot;xref#query&quot;&gt;query&lt;/a&gt;&lt;/code&gt;, a sentence of a tiny language providing cross reference data as values of &lt;code&gt;&lt;a href=&quot;xref#predefined_variable&quot;&gt;predefined variables&lt;/a&gt;&lt;/code&gt;. The check for calls to undefined functions can thus be stated as a query:</source>
          <target state="translated">事前定義された各分析は、 &lt;code&gt;&lt;a href=&quot;xref#predefined_variable&quot;&gt;predefined variables&lt;/a&gt;&lt;/code&gt; 値として相互参照データを提供する小さな言語の文である &lt;code&gt;&lt;a href=&quot;xref#query&quot;&gt;query&lt;/a&gt;&lt;/code&gt; 省略表現です。したがって、未定義の関数の呼び出しのチェックは、クエリとして記述できます。</target>
        </trans-unit>
        <trans-unit id="b3bb6f4a5547e885fc3c22cefa6ca8cc6b8272be" translate="yes" xml:space="preserve">
          <source>Each process can only be traced by one tracer. Therefore, attempts to trace an already traced process fail.</source>
          <target state="translated">各プロセスは、1 つのトレーサーでしかトレースできません。したがって、既にトレースされたプロセスをトレースしようとすると失敗します。</target>
        </trans-unit>
        <trans-unit id="f53dfe1cf607f1f76b3cdacc1a7c9ad3df04d899" translate="yes" xml:space="preserve">
          <source>Each process encodes and decodes their messages. The number of messages processed in total (for all processes) is the mstone value.</source>
          <target state="translated">各プロセスはそれぞれのメッセージをエンコードし、デコードします。合計で処理されたメッセージの数(全プロセスの)がmstone値となります。</target>
        </trans-unit>
        <trans-unit id="9a21488145b83b166a252047079205488e77b957" translate="yes" xml:space="preserve">
          <source>Each process has a &lt;strong&gt;trace token&lt;/strong&gt;, which can be empty or not empty. When not empty, the trace token can be seen as the tuple &lt;code&gt;{Label, Flags, Serial, From}&lt;/code&gt;. The trace token is passed invisibly with each message.</source>
          <target state="translated">各プロセスには&lt;strong&gt;トレーストークンがあり&lt;/strong&gt;、これは空でも空でもかまいません。空でない場合、トレーストークンはタプル &lt;code&gt;{Label, Flags, Serial, From}&lt;/code&gt; 見なすことができます。トレーストークンは、各メッセージとともに目に見えない形で渡されます。</target>
        </trans-unit>
        <trans-unit id="e73293ff85edf8b221fca58a7375966b63368aa5" translate="yes" xml:space="preserve">
          <source>Each process has a current trace token. Initially, the token is empty. When the process sends a message to another process, a copy of the current token is sent &quot;invisibly&quot; along with the message.</source>
          <target state="translated">各プロセスは、現在のトレース・トークンを持っています。初期状態では、トークンは空です。プロセスが他のプロセスにメッセージを送信すると、現在のトークンのコピーがメッセージと一緒に「見えないように」送信されます。</target>
        </trans-unit>
        <trans-unit id="5144322b868d1af68042a24893fdf17ce8ae7e7a" translate="yes" xml:space="preserve">
          <source>Each process has a heap reserved for its use and no references between heaps of different processes are allowed. Messages passed between processes are copied between heaps.</source>
          <target state="translated">各プロセスはその使用のために予約されたヒープを持ち、異なるプロセスのヒープ間の参照は許可されていません。プロセス間で渡されたメッセージは、ヒープ間でコピーされます。</target>
        </trans-unit>
        <trans-unit id="096913c6437e32f4cf474b346e119faa89b965e8" translate="yes" xml:space="preserve">
          <source>Each process has its own input queue for messages it receives. New messages received are put at the end of the queue. When a process executes a &lt;code&gt;receive&lt;/code&gt;, the first message in the queue is matched against the first pattern in the &lt;code&gt;receive&lt;/code&gt;. If this matches, the message is removed from the queue and the actions corresponding to the pattern are executed.</source>
          <target state="translated">各プロセスには、受信するメッセージ用の独自の入力キューがあります。受信した新しいメッセージは、キューの最後に置かれます。プロセスが &lt;code&gt;receive&lt;/code&gt; 実行すると、キュー内の最初のメッセージが受信内の最初のパターンと照合され &lt;code&gt;receive&lt;/code&gt; 。これが一致した場合、メッセージはキューから削除され、パターンに対応するアクションが実行されます。</target>
        </trans-unit>
        <trans-unit id="3a4ee2d15983f4a7bc92b54819b47d8c32a6e680" translate="yes" xml:space="preserve">
          <source>Each process has its own process dictionary, accessed by calling the following BIFs:</source>
          <target state="translated">各プロセスはそれ自身のプロセス辞書を持っており、以下のBIFを呼び出すことでアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="c1effb1c4303b519ce39735425f5a670ab0dcb4b" translate="yes" xml:space="preserve">
          <source>Each release version has a status, which can be &lt;code&gt;unpacked&lt;/code&gt;, &lt;code&gt;current&lt;/code&gt;, &lt;code&gt;permanent&lt;/code&gt;, or &lt;code&gt;old&lt;/code&gt;. There is always one latest release, which either has status &lt;code&gt;permanent&lt;/code&gt; (normal case) or &lt;code&gt;current&lt;/code&gt; (installed, but not yet made permanent). The meaning of the status values are illustrated in the following table:</source>
          <target state="translated">各リリースバージョンにはステータスがあり、 &lt;code&gt;unpacked&lt;/code&gt; 、 &lt;code&gt;current&lt;/code&gt; 、 &lt;code&gt;permanent&lt;/code&gt; 、または &lt;code&gt;old&lt;/code&gt; です。常に最新のリリースが1つあり、ステータスは &lt;code&gt;permanent&lt;/code&gt; （通常の場合）または &lt;code&gt;current&lt;/code&gt; （インストール済みですが、永続的ではありません）です。ステータス値の意味を次の表に示します。</target>
        </trans-unit>
        <trans-unit id="b22912e88f3fff6681ff427aa02b35651d16061b" translate="yes" xml:space="preserve">
          <source>Each request &lt;code&gt;*_REQ&lt;/code&gt; is preceded by a 2 byte length field. Thus, the overall request format is as follows:</source>
          <target state="translated">各要求 &lt;code&gt;*_REQ&lt;/code&gt; の前には、2バイトの長さフィールドがあります。したがって、全体的な要求形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="214cfe9188b99ecc651497388a529d4ed886ff20" translate="yes" xml:space="preserve">
          <source>Each row defines a &lt;strong&gt;manager user&lt;/strong&gt; of the manager.</source>
          <target state="translated">各行は、&lt;strong&gt;マネージャーのマネージャーユーザー&lt;/strong&gt;を定義し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ca374bc8a75c956aa890688fd1192654850ec9a4" translate="yes" xml:space="preserve">
          <source>Each row defines a context in the agent. This information is used in the table &lt;code&gt;vacmContextTable&lt;/code&gt; in the SNMP-VIEW-BASED-ACM-MIB.</source>
          <target state="translated">各行は、エージェントのコンテキストを定義します。この情報は、SNMP-VIEW-BASED-ACM-MIB のテーブル &lt;code&gt;vacmContextTable&lt;/code&gt; で使用されます。</target>
        </trans-unit>
        <trans-unit id="8644f9741490487b00047e43487ce1247a0d6219" translate="yes" xml:space="preserve">
          <source>Each row specifies which security model to use, along with security level and security parameters.</source>
          <target state="translated">各行は、使用するセキュリティモデルを、セキュリティレベルとセキュリティパラメータとともに指定します。</target>
        </trans-unit>
        <trans-unit id="2b467749361658abb4d12ab5e9dc82af9af422e5" translate="yes" xml:space="preserve">
          <source>Each scheduler thread has its own set of references, and all other threads have a shared set of references. Each set of references consist of &lt;code&gt;2⁶⁴ - 1&lt;/code&gt; unique references. That is, the total amount of unique references that can be produced on a runtime system instance is &lt;code&gt;(NoSchedulers + 1) &amp;times; (2⁶⁴ - 1)&lt;/code&gt;.</source>
          <target state="translated">各スケジューラスレッドには独自の参照セットがあり、他のすべてのスレッドには参照セットが共有されています。参照の各セットは、 &lt;code&gt;2⁶⁴ - 1&lt;/code&gt; 一意の参照で構成されています。つまり、ランタイムシステムインスタンスで生成できる一意の参照の総数は、 &lt;code&gt;(NoSchedulers + 1) &amp;times; (2⁶⁴ - 1)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="bd0f886f081fb98e606d025bb4bf36be701fdf0b" translate="yes" xml:space="preserve">
          <source>Each schema has a unique cookie, which can be regarded as a unique schema identifier. The cookie must be the same on all nodes where Mnesia is supposed to run. For details, see the User's Guide.</source>
          <target state="translated">各スキーマは一意のスキーマ識別子とみなすことができる一意のクッキーを持っています。クッキーは、Mnesiaが実行されることになっているすべてのノードで同じでなければなりません。詳細については、ユーザーガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="549337d666fba4ddace993e54e248a26130c024d" translate="yes" xml:space="preserve">
          <source>Each segment has the following general syntax:</source>
          <target state="translated">各セグメントには、以下の一般的な構文があります。</target>
        </trans-unit>
        <trans-unit id="1cd372994dfc3344f859a57d088fd0676fe4b69b" translate="yes" xml:space="preserve">
          <source>Each segment in a binary can consist of zero or more bits. A segment of type &lt;code&gt;binary&lt;/code&gt; must have a size evenly divisible by 8 (or divisible by the unit size, if the unit size has been changed). A segment of type &lt;code&gt;bitstring&lt;/code&gt; has no restrictions on the size.</source>
          <target state="translated">バイナリの各セグメントは、0個以上のビットで構成できます。タイプが &lt;code&gt;binary&lt;/code&gt; のセグメントは、8で割り切れるサイズ（または、ユニットサイズが変更されている場合は、ユニットサイズで割り切れるサイズ）でなければなりません。タイプ &lt;code&gt;bitstring&lt;/code&gt; のセグメントは、サイズに制限はありません。</target>
        </trans-unit>
        <trans-unit id="f1671b1a7b09bbb4a1297d80f839111ba93c1ee9" translate="yes" xml:space="preserve">
          <source>Each segment in a binary can consist of zero or more bits. There are no alignment rules for individual segments of type &lt;code&gt;integer&lt;/code&gt; and &lt;code&gt;float&lt;/code&gt;. For binaries and bitstrings without size, the unit specifies the alignment. Since the default alignment for the &lt;code&gt;binary&lt;/code&gt; type is 8, the size of a binary segment must be a multiple of 8 bits, that is, only whole bytes.</source>
          <target state="translated">バイナリの各セグメントは、0個以上のビットで構成できます。 &lt;code&gt;integer&lt;/code&gt; 型と &lt;code&gt;float&lt;/code&gt; 型の個々のセグメントには位置合わせ規則はありません。サイズのないバイナリおよびビット文字列の場合、単位は配置を指定します。 &lt;code&gt;binary&lt;/code&gt; タイプのデフォルトの配置は8であるため、バイナリセグメントのサイズは8ビットの倍数、つまりバイト全体でなければなりません。</target>
        </trans-unit>
        <trans-unit id="e9282b1591676f5d2f51bfb0beccffd06d1eb513" translate="yes" xml:space="preserve">
          <source>Each separate (variable) package is generated as a separate file in the same directory as the &lt;code&gt;ReleaseName.tar.gz&lt;/code&gt; file.</source>
          <target state="translated">個別の（可変）パッケージは、 &lt;code&gt;ReleaseName.tar.gz&lt;/code&gt; ファイルと同じディレクトリに個別のファイルとして生成されます。</target>
        </trans-unit>
        <trans-unit id="024f41e5f9df7f8bc9804c8c5a80f4b99f3d7274" translate="yes" xml:space="preserve">
          <source>Each separate (variable) package is included in the main &lt;code&gt;ReleaseName.tar.gz&lt;/code&gt; file. This is the default.</source>
          <target state="translated">個別の（可変）パッケージはそれぞれ、メインの &lt;code&gt;ReleaseName.tar.gz&lt;/code&gt; ファイルに含まれています。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="c3e8c329b13e4f651f71df7ff5c490cb04afca90" translate="yes" xml:space="preserve">
          <source>Each signal my be set to one of the following options:</source>
          <target state="translated">各シグナルは以下のオプションのいずれかに設定されています。</target>
        </trans-unit>
        <trans-unit id="4d75df3fed93d33a1b26f0df41aacf7a9c5e0bb4" translate="yes" xml:space="preserve">
          <source>Each sub-agent calls the instrumentation for its loaded MIBs.</source>
          <target state="translated">各サブエージェントは、ロードされたMIBのインストルメンテーションを呼び出します。</target>
        </trans-unit>
        <trans-unit id="a920af7f1bd15ab26a0a0f35363ebaf253b19753" translate="yes" xml:space="preserve">
          <source>Each sub-agent can implement its own mechanisms for &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;get-next&lt;/code&gt;. For example, if the application requires the &lt;code&gt;get&lt;/code&gt; mechanism to be asynchronous, or needs a N-phase &lt;code&gt;set&lt;/code&gt; mechanism, a specialized sub-agent should be used.</source>
          <target state="translated">各サブエージェントは、 &lt;code&gt;set&lt;/code&gt; 、 &lt;code&gt;get&lt;/code&gt; および &lt;code&gt;get-next&lt;/code&gt; の独自のメカニズムを実装できます。たとえば、アプリケーションで &lt;code&gt;get&lt;/code&gt; メカニズムを非同期にする必要がある場合、またはNフェーズの &lt;code&gt;set&lt;/code&gt; メカニズムが必要な場合は、専用のサブエージェントを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="82ff02bedfa4335374a1f6b3ca8faa6ef8a2d000" translate="yes" xml:space="preserve">
          <source>Each tab in the main window contains an information page. If no information is found for an item, the page is empty. The reason for not finding information about an item can be the following:</source>
          <target state="translated">メインウィンドウの各タブには情報ページがあります。アイテムに関する情報が見つからない場合、そのページは空です。アイテムに関する情報が見つからない理由としては、以下のようなことが考えられます。</target>
        </trans-unit>
        <trans-unit id="552992daca4c23db6bff1830043b762334b97510" translate="yes" xml:space="preserve">
          <source>Each table retains its old contents in a checkpoint retainer. For performance critical applications, it can be important to realize the processing overhead associated with checkpoints. In a worst case scenario, the checkpoint retainer consumes more memory than the table itself. Also, each update becomes slightly slower on those nodes where checkpoint retainers are attached to the tables.</source>
          <target state="translated">各テーブルは、チェックポイント保持器で古い内容を保持します。パフォーマンスが重要なアプリケーションでは、チェックポイントに関連する処理オーバーヘッドを実現することが重要になる場合があります。最悪の場合、チェックポイントリテーナはテーブル自体よりも多くのメモリを消費します。また、チェックポイントリテーナがテーブルにアタッチされているノードでは、各更新が若干遅くなります。</target>
        </trans-unit>
        <trans-unit id="791a1f2a4037ba80b05edb94447b37b4e2364aa6" translate="yes" xml:space="preserve">
          <source>Each term &lt;code&gt;Term&lt;/code&gt; in the list is called an &lt;strong&gt;element&lt;/strong&gt;. The number of elements is said to be the &lt;strong&gt;length&lt;/strong&gt; of the list.</source>
          <target state="translated">各用語の &lt;code&gt;Term&lt;/code&gt; リストでは、と呼ばれている&lt;strong&gt;要素&lt;/strong&gt;。要素の数はリストの&lt;strong&gt;長さ&lt;/strong&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="ed00d75d5c4d6192c54f9d2b21cf805e6461e449" translate="yes" xml:space="preserve">
          <source>Each term &lt;code&gt;Term&lt;/code&gt; in the tuple is called an &lt;strong&gt;element&lt;/strong&gt;. The number of elements is said to be the &lt;strong&gt;size&lt;/strong&gt; of the tuple.</source>
          <target state="translated">各用語の &lt;code&gt;Term&lt;/code&gt; タプルでは呼ばれる&lt;strong&gt;要素&lt;/strong&gt;。要素の数はタプルの&lt;strong&gt;サイズ&lt;/strong&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="5abbd52c08a811a8e991cd9188a923d201e7731f" translate="yes" xml:space="preserve">
          <source>Each test case is executed by a dedicated Erlang process. The process is spawned when the test case starts, and terminated when the test case is finished. The configuration functions &lt;code&gt;init_per_testcase&lt;/code&gt; and &lt;code&gt;end_per_testcase&lt;/code&gt; execute on the same process as the test case.</source>
          <target state="translated">各テストケースは、専用のErlangプロセスによって実行されます。プロセスは、テストケースの開始時に生成され、テストケースの終了時に終了します。構成関数 &lt;code&gt;init_per_testcase&lt;/code&gt; および &lt;code&gt;end_per_testcase&lt;/code&gt; は、テストケースと同じプロセスで実行されます。</target>
        </trans-unit>
        <trans-unit id="5c925270da28c693f61f4f9343e6c13b128264b9" translate="yes" xml:space="preserve">
          <source>Each test suite module can contain the optional configuration functions &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite/1&lt;/a&gt;&lt;/code&gt;. If the init function is defined, so must the end function be.</source>
          <target state="translated">各テストスイートモジュールには、オプションの構成関数 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite/1&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_suite-1&quot;&gt;end_per_suite/1&lt;/a&gt;&lt;/code&gt; を含めることができます。init関数が定義されている場合、end関数も定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="fa673338880fff3b8ab5d57c56ce74931075ef5e" translate="yes" xml:space="preserve">
          <source>Each test suite module can contain the optional configuration functions &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase/2&lt;/a&gt;&lt;/code&gt;. If the init function is defined, so must the end function be.</source>
          <target state="translated">各テストスイートモジュールには、オプションの構成関数 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_testcase-2&quot;&gt;init_per_testcase/2&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;common_test#Module:end_per_testcase-2&quot;&gt;end_per_testcase/2&lt;/a&gt;&lt;/code&gt; を含めることができます。init関数が定義されている場合、end関数も定義されている必要があります。</target>
        </trans-unit>
        <trans-unit id="c5862fbfb3f074c11d24b7727c36cf9bdbbbda72" translate="yes" xml:space="preserve">
          <source>Each test suite module must export function &lt;code&gt;&lt;a href=&quot;common_test#Module:all-0&quot;&gt;all/0&lt;/a&gt;&lt;/code&gt;, which returns the list of all test case groups and test cases to be executed in that module.</source>
          <target state="translated">各テストスイートモジュールは関数 &lt;code&gt;&lt;a href=&quot;common_test#Module:all-0&quot;&gt;all/0&lt;/a&gt;&lt;/code&gt; をエクスポートする必要があります。これにより、そのモジュールで実行されるすべてのテストケースグループとテストケースのリストが返されます。</target>
        </trans-unit>
        <trans-unit id="a82d0b878fdfaab3c22f520d67abc9156fa79d67" translate="yes" xml:space="preserve">
          <source>Each time a function in a Cover compiled module is called, information about the call is added to an internal database of Cover. The coverage analysis is performed by examining the contents of the Cover database. The output &lt;code&gt;Answer&lt;/code&gt; is determined by two parameters, &lt;code&gt;Level&lt;/code&gt; and &lt;code&gt;Analysis&lt;/code&gt;.</source>
          <target state="translated">Coverコンパイル済みモジュールの関数が呼び出されるたびに、その呼び出しに関する情報がCoverの内部データベースに追加されます。カバレッジ分析は、Coverデータベースの内容を調べることによって実行されます。出力 &lt;code&gt;Answer&lt;/code&gt; は、 &lt;code&gt;Level&lt;/code&gt; と &lt;code&gt;Analysis&lt;/code&gt; という 2つのパラメーターによって決定されます。</target>
        </trans-unit>
        <trans-unit id="d291b759129a65a7c92477a04e632cac3277ae53" translate="yes" xml:space="preserve">
          <source>Each time a function in the Cover compiled module &lt;code&gt;channel&lt;/code&gt; is called, information about the call will be added to the Cover database. Run the test case:</source>
          <target state="translated">Coverコンパイル済みモジュール &lt;code&gt;channel&lt;/code&gt; 関数が呼び出されるたびに、呼び出しに関する情報がCoverデータベースに追加されます。テストケースを実行します。</target>
        </trans-unit>
        <trans-unit id="9e8ff16c70c1fc0240fb75f09e0d951deab35788" translate="yes" xml:space="preserve">
          <source>Each tuple contains an atom describing the type of memory as first element and the amount of allocated memory in bytes as second element. When information about allocated and used memory is present, also a third element is present, containing the amount of used memory in bytes.</source>
          <target state="translated">各タプルは、第一要素としてメモリの種類を記述したアトムを、第二要素として割り当てられたメモリのバイト数を記述したアトムを含む。割り当てられたメモリと使用されたメモリの情報がある場合は、使用されたメモリの量をバイト単位で記述した第三の要素も存在する。</target>
        </trans-unit>
        <trans-unit id="51cb2aa921488217e96ac224fc5c13f88ab59cb5" translate="yes" xml:space="preserve">
          <source>Each undecoded part that is to be decoded must be fed into function &lt;code&gt;decode_part/2&lt;/code&gt; as follows:</source>
          <target state="translated">デコードされるデコードされていない各部分は、次のように関数 &lt;code&gt;decode_part/2&lt;/code&gt; に入力する必要があります。</target>
        </trans-unit>
        <trans-unit id="a3eef4129b67bd506209f344f64f0d81fa4e275d" translate="yes" xml:space="preserve">
          <source>Each update is appended to the transaction log and occasionally (depending on how it is configured) dumped to the tables files. The table file storage is more compact than the transaction log storage, especially if the same record is updated repeatedly. If the thresholds for dumping the transaction log are reached before the previous dump is finished, an overload event is triggered.</source>
          <target state="translated">各更新はトランザクションログに追加され、時折(設定方法によっては)テーブルファイルにダンプされます。テーブルファイルのストレージは、特に同じレコードが繰り返し更新される場合には、トランザクションログのストレージよりもコンパクトになります。前回のダンプが終了する前にトランザクションログをダンプするためのしきい値に達すると、オーバーロードイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="91222363ea25938785424fffb48446fa72022ad1" translate="yes" xml:space="preserve">
          <source>Each user is represented by a tuple with the Mid of the user and a list of config parameters (each parameter is in turn a tuple: &lt;code&gt;{Item, Value}&lt;/code&gt;).</source>
          <target state="translated">各ユーザーは、ユーザーのMidと構成パラメーターのリストを持つタプルで表されます（各パラメーターは、タプル： &lt;code&gt;{Item, Value}&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c5960487e6583117a3e71addee6d735530434ddc" translate="yes" xml:space="preserve">
          <source>Earlier it was mentioned that a variable can only be given a value once in its scope. In the above you see that &lt;code&gt;Result_so_far&lt;/code&gt; is given several values. This is OK since every time you call &lt;code&gt;list_max/2&lt;/code&gt; you create a new scope and one can regard &lt;code&gt;Result_so_far&lt;/code&gt; as a different variable in each scope.</source>
          <target state="translated">以前に、変数にはそのスコープ内で一度だけ値を与えることができると述べました。上記では、 &lt;code&gt;Result_so_far&lt;/code&gt; にいくつかの値が与えられていることがわかります。 &lt;code&gt;list_max/2&lt;/code&gt; を呼び出すたびに新しいスコープを作成し、 &lt;code&gt;Result_so_far&lt;/code&gt; を各スコープの異なる変数と見なすことができるため、これは問題ありません。</target>
        </trans-unit>
        <trans-unit id="ed6caed0e440a7ff0deaaa66f177152c69eb3afa" translate="yes" xml:space="preserve">
          <source>Earlier version of the release to downgrade to.</source>
          <target state="translated">ダウングレードするためのリリースの早期バージョン。</target>
        </trans-unit>
        <trans-unit id="4f12071fcb232719f7acbb29f4900300360385fd" translate="yes" xml:space="preserve">
          <source>Earlier version of the release to upgrade from.</source>
          <target state="translated">アップグレードするリリースの旧バージョン。</target>
        </trans-unit>
        <trans-unit id="65cd0c7004f4d160355d98a242b0f8b159d1373f" translate="yes" xml:space="preserve">
          <source>Earlier versions of Perl and PCRE used to give an error at compile time for such patterns. However, as there are cases where this can be useful, such patterns are now accepted. However, if any repetition of the subpattern matches no characters, the loop is forcibly broken.</source>
          <target state="translated">以前のバージョンのPerlやPCREでは、このようなパターンではコンパイル時にエラーが発生していました。しかし、これが有用な場合もあるので、現在ではそのようなパターンも受け入れられるようになっています。ただし、サブパターンの繰り返しが何も文字にマッチしない場合、ループは強制的に破られます。</target>
        </trans-unit>
        <trans-unit id="a53b52768e55858c81dd4d8fab520a67888c0d03" translate="yes" xml:space="preserve">
          <source>Earlier versions of the ASN.1 compiler required that modules that were imported from had to be compiled before the module that imported. This caused problems when ASN.1 modules had circular dependencies.</source>
          <target state="translated">ASN.1コンパイラの以前のバージョンでは、インポート元のモジュールをインポート元のモジュールよりも前にコンパイルする必要がありました。これは、ASN.1モジュールが循環的な依存関係を持つ場合に問題を引き起こしました。</target>
        </trans-unit>
        <trans-unit id="e9d22090baa7934a13d02450261873967d2a0be1" translate="yes" xml:space="preserve">
          <source>Earlier, &lt;code&gt;Fun&lt;/code&gt; could also be specified as &lt;code&gt;{Module, Function}&lt;/code&gt;, equivalent to &lt;code&gt;apply(Module, Function, Args)&lt;/code&gt;. &lt;strong&gt;This use is deprecated and will stop working in a future release.&lt;/strong&gt;</source>
          <target state="translated">以前は、 &lt;code&gt;Fun&lt;/code&gt; は &lt;code&gt;{Module, Function}&lt;/code&gt; として指定することもでき、 &lt;code&gt;apply(Module, Function, Args)&lt;/code&gt; と同等でした。&lt;strong&gt;この使用は非推奨であり、将来のリリースでは機能しなくなります。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5887655182350a5c85026cd7362d3a2f232dbf4f" translate="yes" xml:space="preserve">
          <source>Easy-to-use timeouts (&lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#Event%20Time-Outs&quot;&gt;Event Time-Outs&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#Generic%20Time-Outs&quot;&gt;Generic Time-outs&lt;/a&gt;&lt;/code&gt; (named time-outs))</source>
          <target state="translated">使いやすいタイムアウト（ &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt; タイムアウト、 &lt;code&gt;&lt;a href=&quot;#Event%20Time-Outs&quot;&gt;Event Time-Outs&lt;/a&gt;&lt;/code&gt; タイムアウト、 &lt;code&gt;&lt;a href=&quot;#Generic%20Time-Outs&quot;&gt;Generic Time-outs&lt;/a&gt;&lt;/code&gt; （名前付きタイムアウト））</target>
        </trans-unit>
        <trans-unit id="ff096aaeb82c6666e39fc680c917cdb6ff501824" translate="yes" xml:space="preserve">
          <source>Edits configuration data.</source>
          <target state="translated">設定データを編集します。</target>
        </trans-unit>
        <trans-unit id="07db18ae9dcddd7fea233a4299ad559f0aca25b2" translate="yes" xml:space="preserve">
          <source>Edits the environment block for the service. Every environment variable specified is added to the system environment block. If a variable specified here has the same name as a system-wide environment variable, the specified value overrides the system-wide. Environment variables are added to this list by specifying &amp;lt;variable&amp;gt;=&amp;lt;value&amp;gt; and deleted from the list by specifying &amp;lt;variable&amp;gt; alone. The environment block is automatically sorted. Any number of &lt;code&gt;-env&lt;/code&gt; options can be specified in one command. Default is to use the system environment block unmodified (except for two additions, see section &lt;code&gt;&lt;a href=&quot;#002&quot;&gt;Environment&lt;/a&gt;&lt;/code&gt; below).</source>
          <target state="translated">サービスの環境ブロックを編集します。指定されたすべての環境変数がシステム環境ブロックに追加されます。ここで指定された変数がシステム全体の環境変数と同じ名前である場合、指定された値はシステム全体をオーバーライドします。環境変数は、&amp;lt;variable&amp;gt; = &amp;lt;value&amp;gt;を指定してこのリストに追加され、&amp;lt;variable&amp;gt;のみを指定してリストから削除されます。環境ブロックは自動的にソートされます。1つのコマンドで任意の数の &lt;code&gt;-env&lt;/code&gt; オプションを指定できます。デフォルトでは、システム環境ブロックを変更せずに使用します（2つの追加を除き、以下の「 &lt;code&gt;&lt;a href=&quot;#002&quot;&gt;Environment&lt;/a&gt;&lt;/code&gt; 参照）。</target>
        </trans-unit>
        <trans-unit id="2a956986208caa4daeb338ab4f70268aa64edc8b" translate="yes" xml:space="preserve">
          <source>Efficient code can be well-structured and clean, based on a sound overall architecture and sound algorithms. Efficient code can be highly implementation-code that bypasses documented interfaces and takes advantage of obscure quirks in the current implementation.</source>
          <target state="translated">効率的なコードは、健全な全体的なアーキテクチャと健全なアルゴリズムに基づいた、よく構造化されたクリーンなコードになります。効率的なコードは、文書化されたインターフェイスを迂回し、現在の実装の不明瞭な癖を利用した高度な実装コードであることがあります。</target>
        </trans-unit>
        <trans-unit id="95eb187386528f0442d2d1a0d814ad6080e6245c" translate="yes" xml:space="preserve">
          <source>Efficiently reads the terms that are appended to an internally formatted log. It minimizes disk I/O by reading 64 kilobyte chunks from the file. Functions &lt;code&gt;bchunk/2,3&lt;/code&gt; return the binaries read from the file, they do not call &lt;code&gt;binary_to_term()&lt;/code&gt;. Apart from that, they work just like &lt;code&gt;chunk/2,3&lt;/code&gt;.</source>
          <target state="translated">内部的にフォーマットされたログに追加された用語を効率的に読み取ります。ファイルから64キロバイトのチャンクを読み取ることにより、ディスクI / Oを最小限に抑えます。関数 &lt;code&gt;bchunk/2,3&lt;/code&gt; は、ファイルから読み取ったバイナリを返します &lt;code&gt;binary_to_term()&lt;/code&gt; は呼び出しません。それ以外は、 &lt;code&gt;chunk/2,3&lt;/code&gt; 同じように機能します。</target>
        </trans-unit>
        <trans-unit id="bb212465dbae7203df4ab62ae8863407da33e722" translate="yes" xml:space="preserve">
          <source>Egyptian_Hieroglyphs</source>
          <target state="translated">Egyptian_Hieroglyphs</target>
        </trans-unit>
        <trans-unit id="b605c9a1d38aeb2128970f4cfddf46cfbbab5716" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;Location&lt;/code&gt; is illegal, or it is evaluated to a negative offset in the file. Notice that if the resulting position is a negative value, the result is an error, and after the call the file position is undefined.</source>
          <target state="translated">どちらの &lt;code&gt;Location&lt;/code&gt; 違法である、またはそれは、ファイル内のオフセットマイナスに評価されます。結果の位置が負の値の場合、結果はエラーとなり、呼び出し後のファイル位置は未定義であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d30f451140817c7d120ec001c6cece0c48331e09" translate="yes" xml:space="preserve">
          <source>Either a back reference, or the two characters &quot;8&quot; and &quot;1&quot;</source>
          <target state="translated">バックリファレンスか、&quot;8 &quot;と &quot;1 &quot;の2文字のどちらかです。</target>
        </trans-unit>
        <trans-unit id="d6f7085abc2ccef85b192b8c6868e5479f1516a2" translate="yes" xml:space="preserve">
          <source>Either sends a message and returns &lt;code&gt;ok&lt;/code&gt;, or does not send the message but returns something else (see below). Otherwise the same as &lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;erlang:send/2&lt;/a&gt;&lt;/code&gt;. For more detailed explanation and warnings, see &lt;code&gt;&lt;a href=&quot;#send_nosuspend-2&quot;&gt;erlang:send_nosuspend/2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">メッセージを送信して &lt;code&gt;ok&lt;/code&gt; を返すか、メッセージを送信せずに何かを返します（以下を参照）。それ以外は &lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;erlang:send/2&lt;/a&gt;&lt;/code&gt; と同じです。詳細な説明と警告については、 &lt;code&gt;&lt;a href=&quot;#send_nosuspend-2&quot;&gt;erlang:send_nosuspend/2,3&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="9c7329b4b0e253e39f89da454478a65965c06ad0" translate="yes" xml:space="preserve">
          <source>Either set all or none of the &lt;code&gt;DED_LD*&lt;/code&gt; variables.</source>
          <target state="translated">&lt;code&gt;DED_LD*&lt;/code&gt; 変数をすべて設定するか、まったく設定しないかのいずれかです。</target>
        </trans-unit>
        <trans-unit id="4e7799671ee9bcf125ace44830967d9f98d8d690" translate="yes" xml:space="preserve">
          <source>Either set all or none of the &lt;code&gt;LFS_*&lt;/code&gt; variables.</source>
          <target state="translated">&lt;code&gt;LFS_*&lt;/code&gt; 変数をすべて設定するか、まったく設定しないかのいずれかです。</target>
        </trans-unit>
        <trans-unit id="93c3f6c0504a02d19f3c9ca403c6b9bad1813d62" translate="yes" xml:space="preserve">
          <source>Either the atom &lt;code&gt;longnames&lt;/code&gt; or the atom &lt;code&gt;shortnames&lt;/code&gt; indicating whether long or short names is used.</source>
          <target state="translated">いずれかの原子 &lt;code&gt;longnames&lt;/code&gt; 又は原子 &lt;code&gt;shortnames&lt;/code&gt; 長いか短い名前が使用されているか否かを示します。</target>
        </trans-unit>
        <trans-unit id="487f7c8a7538e9346944b722752c3236ffa482d3" translate="yes" xml:space="preserve">
          <source>Either the exit reason of the process, &lt;code&gt;noproc&lt;/code&gt; (process or port did not exist at the time of monitor creation), or &lt;code&gt;noconnection&lt;/code&gt; (no connection to the node where the monitored process resides).</source>
          <target state="translated">プロセスの終了理由、 &lt;code&gt;noproc&lt;/code&gt; （モニターの作成時にプロセスまたはポートが存在しなかった）、または &lt;code&gt;noconnection&lt;/code&gt; （モニターされたプロセスが存在するノードへの接続がない）。</target>
        </trans-unit>
        <trans-unit id="c34e480bf57ef7e38dbf93bd6c9f5b3abdddea2f" translate="yes" xml:space="preserve">
          <source>Elbasan</source>
          <target state="translated">Elbasan</target>
        </trans-unit>
        <trans-unit id="a3ca208403466a4841f552219491c8eba018e929" translate="yes" xml:space="preserve">
          <source>Element &lt;code&gt;GroupSpec&lt;/code&gt; makes it possible to specify group execution properties that overrides those in the group definition (that is, in &lt;code&gt;groups/0&lt;/code&gt;). Execution properties for subgroups might be overridden as well. This feature makes it possible to change properties of groups at the time of execution, without having to edit the test suite. The same feature is available for &lt;code&gt;group&lt;/code&gt; elements in the &lt;code&gt;Suite:all/0&lt;/code&gt; list. For details and examples, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">要素 &lt;code&gt;GroupSpec&lt;/code&gt; を使用すると、グループ定義（つまり &lt;code&gt;groups/0&lt;/code&gt; ）のプロパティをオーバーライドするグループ実行プロパティを指定できます。サブグループの実行プロパティもオーバーライドされる場合があります。この機能により、テストスイートを編集しなくても、実行時にグループのプロパティを変更できます。同じ機能は、 &lt;code&gt;Suite:all/0&lt;/code&gt; リストの &lt;code&gt;group&lt;/code&gt; 要素にも使用できます。詳細と例については、「 &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="7e3308f88fa7e4a90eab00a6aeedd94b192c76f8" translate="yes" xml:space="preserve">
          <source>Element &lt;code&gt;Location&lt;/code&gt; at the end is optional. Omitting it is equivalent to specifying an empty list.</source>
          <target state="translated">末尾の要素の &lt;code&gt;Location&lt;/code&gt; はオプションです。これを省略することは、空のリストを指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="ec9d8fff696522dd91cca874c3d28af6c174f71c" translate="yes" xml:space="preserve">
          <source>Element is any of:</source>
          <target state="translated">要素は、いずれかのものです。</target>
        </trans-unit>
        <trans-unit id="968e60ba1bd927549a1b23411ba40213ea222600" translate="yes" xml:space="preserve">
          <source>Elements from the &lt;code&gt;Config&lt;/code&gt; list can, for example, be read with &lt;code&gt;proplists:get_value/2&lt;/code&gt; in STDLIB (or the macro &lt;code&gt;?config&lt;/code&gt; defined in &lt;code&gt;ct.hrl&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Config&lt;/code&gt; リストの要素は、たとえば、 &lt;code&gt;proplists:get_value/2&lt;/code&gt; （または &lt;code&gt;ct.hrl&lt;/code&gt; で定義されたマクロ &lt;code&gt;?config&lt;/code&gt; ）で読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="eb2cb18900c542ca840a5c213e23f0b3dc15b660" translate="yes" xml:space="preserve">
          <source>Elements in a tuple</source>
          <target state="translated">タプル内の要素</target>
        </trans-unit>
        <trans-unit id="d545793775877375fff2627af68fdce76d7bc2fa" translate="yes" xml:space="preserve">
          <source>Elen</source>
          <target state="translated">Elen</target>
        </trans-unit>
        <trans-unit id="4222989fc4f8ea6a86e6368dd890fe3a7e3a9888" translate="yes" xml:space="preserve">
          <source>Em quad</source>
          <target state="translated">クワッドで</target>
        </trans-unit>
        <trans-unit id="b895da879ed23d9e84111f08fcadea33bce091c1" translate="yes" xml:space="preserve">
          <source>Em space</source>
          <target state="translated">宇宙では</target>
        </trans-unit>
        <trans-unit id="9bf49a8e8e16e64d1e80f11162b14dd5a6925b12" translate="yes" xml:space="preserve">
          <source>Emacs integration</source>
          <target state="translated">Emacs の統合</target>
        </trans-unit>
        <trans-unit id="1a9e1619cb718522f7ab0f0dba6e08852aa8d86c" translate="yes" xml:space="preserve">
          <source>Emits warnings for all implicitly exported variables referred to after the primitives where they were first defined. By default, the compiler only emits warnings for exported variables referred to in a pattern.</source>
          <target state="translated">最初に定義されたプリミティブの後で参照されるすべての暗黙のうちにエクスポートされた変数に対して警告を表示します。既定では、コンパイラはパターンで参照されるエクスポートされた変数に対してのみ警告を発します。</target>
        </trans-unit>
        <trans-unit id="d4c2117b6ef3fcf84bfe3899fed68d89773c2661" translate="yes" xml:space="preserve">
          <source>Emits warnings for unused imported functions. Default is to emit no warnings for unused imported functions.</source>
          <target state="translated">未使用のインポート関数に対して警告を表示します。デフォルトでは、未使用のインポート関数に対して警告を表示しません。</target>
        </trans-unit>
        <trans-unit id="d901413f50becfae6fdd27d649c08a5d538e0014" translate="yes" xml:space="preserve">
          <source>Empty documents are occasionally useful; in particular, they have the property that &lt;code&gt;above(X, empty())&lt;/code&gt; will force a new line after &lt;code&gt;X&lt;/code&gt; without leaving an empty line below it; since this is a common idiom, the utility function &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;break/1&lt;/a&gt;&lt;/code&gt; will place a given document in such a context.</source>
          <target state="translated">空のドキュメントが役立つ場合があります。特に、 &lt;code&gt;above(X, empty())&lt;/code&gt; は、 &lt;code&gt;X&lt;/code&gt; の下に空行を残さずに新しい行を強制するというプロパティを持っています。これは一般的なイディオムであるため、ユーティリティ関数 &lt;code&gt;&lt;a href=&quot;#break-1&quot;&gt;break/1&lt;/a&gt;&lt;/code&gt; は特定のドキュメントをそのようなコンテキストに配置します。</target>
        </trans-unit>
        <trans-unit id="fc00f52599abed8376aa0a197e15e0ea835df63f" translate="yes" xml:space="preserve">
          <source>Emulator flag &lt;code&gt;+fnu&lt;/code&gt; is ignored.</source>
          <target state="translated">エミュレータフラグ &lt;code&gt;+fnu&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="55e05c2f7b68cf5e80a54adf43f642d47a0f59b3" translate="yes" xml:space="preserve">
          <source>En quad</source>
          <target state="translated">エンクアッド</target>
        </trans-unit>
        <trans-unit id="5b62229c904d32c8112d3be27a54257af67d740a" translate="yes" xml:space="preserve">
          <source>En space</source>
          <target state="translated">エンスペース</target>
        </trans-unit>
        <trans-unit id="25ffb040887bf2788091d6954b71659dc5c37d66" translate="yes" xml:space="preserve">
          <source>Enable automatic gc of the mib server cache.</source>
          <target state="translated">mibサーバーキャッシュの自動gcを有効にします。</target>
        </trans-unit>
        <trans-unit id="fd6f2bb237a816f3fbfe6d4d2c6878e556d33f2f" translate="yes" xml:space="preserve">
          <source>Enable code coverage analysis (similar to &lt;code&gt;ct_run -cover&lt;/code&gt;).</source>
          <target state="translated">コードカバレッジ分析を有効にします（ &lt;code&gt;ct_run -cover&lt;/code&gt; と同様）。</target>
        </trans-unit>
        <trans-unit id="47033a4bb8f28d29d58e4994c4d9050176047e9e" translate="yes" xml:space="preserve">
          <source>Enable process tracing for new processes and use &lt;code&gt;dyntrace&lt;/code&gt; as tracer backend.</source>
          <target state="translated">新しいプロセスのプロセストレースを有効にし、 &lt;code&gt;dyntrace&lt;/code&gt; バックエンドとしてdyntraceを使用します。</target>
        </trans-unit>
        <trans-unit id="42b73ef7216dacb5d34f7ba030c613404e7e43a1" translate="yes" xml:space="preserve">
          <source>Enable the mib server cache.</source>
          <target state="translated">mibサーバーキャッシュを有効にします。</target>
        </trans-unit>
        <trans-unit id="4d4a9638a58d251377650d5cc7a8a58f9862c35d" translate="yes" xml:space="preserve">
          <source>Enable the process_register LTTng tracepoint for Erlang.</source>
          <target state="translated">Erlangのprocess_register LTTng tracepointを有効にします。</target>
        </trans-unit>
        <trans-unit id="086f907d75188b886010563f8bd5580d7dfa5ad7" translate="yes" xml:space="preserve">
          <source>Enables (&lt;code&gt;Flag == true&lt;/code&gt;) or disables (&lt;code&gt;Flag == false&lt;/code&gt;) printout of standard events to the terminal.</source>
          <target state="translated">端末への標準イベントの出力を有効（ &lt;code&gt;Flag == true&lt;/code&gt; ）または無効（ &lt;code&gt;Flag == false&lt;/code&gt; ）にします。</target>
        </trans-unit>
        <trans-unit id="19643cf04bb22173cf35df90be432b41c2c0c80f" translate="yes" xml:space="preserve">
          <source>Enables &lt;code&gt;sys_alloc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;sys_alloc&lt;/code&gt; を有効にします。</target>
        </trans-unit>
        <trans-unit id="2925b3bafb5ae4152db5d7ac7ad43b60459fcd09" translate="yes" xml:space="preserve">
          <source>Enables SAC delay</source>
          <target state="translated">SAC遅延を有効にします。</target>
        </trans-unit>
        <trans-unit id="60585639720a7d6f2dcd45081510159d2d44e676" translate="yes" xml:space="preserve">
          <source>Enables a table-specific parameterization of a generic hash module. This property can explicitly be set at table creation. Default is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">汎用ハッシュモジュールのテーブル固有のパラメーター化を有効にします。このプロパティは、テーブルの作成時に明示的に設定できます。デフォルトは &lt;code&gt;undefined&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a8e12000a8c8fd6dc64847bf440cb7b251ca8594" translate="yes" xml:space="preserve">
          <source>Enables all allocators (default).</source>
          <target state="translated">すべてのアロケータを有効にします(デフォルト)。</target>
        </trans-unit>
        <trans-unit id="66de0b189789174995d11e9a7ecdc4b4c55056e9" translate="yes" xml:space="preserve">
          <source>Enables all breakpoints.</source>
          <target state="translated">すべてのブレークポイントを有効にします。</target>
        </trans-unit>
        <trans-unit id="77e83ac48ceff1b4f43eaffc497baace9759de30" translate="yes" xml:space="preserve">
          <source>Enables allocator &lt;code&gt;&amp;lt;S&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">アロケータ &lt;code&gt;&amp;lt;S&amp;gt;&lt;/code&gt; を有効にします。</target>
        </trans-unit>
        <trans-unit id="2df58c7f8ed4e32b890b81f44943b59779b18455" translate="yes" xml:space="preserve">
          <source>Enables autoload tracing, displaying information while loading code.</source>
          <target state="translated">自動ロードトレースを有効にし、コードをロード中に情報を表示します。</target>
        </trans-unit>
        <trans-unit id="e63213e4ec392a2d1540f7cfff72fc5cfb579a1d" translate="yes" xml:space="preserve">
          <source>Enables automatic &lt;code&gt;&lt;a href=&quot;write_test_chapter#timetraps&quot;&gt;timetrap time-out&lt;/a&gt;&lt;/code&gt; scaling.</source>
          <target state="translated">自動 &lt;code&gt;&lt;a href=&quot;write_test_chapter#timetraps&quot;&gt;timetrap time-out&lt;/a&gt;&lt;/code&gt; スケーリングを有効にします。</target>
        </trans-unit>
        <trans-unit id="7c1880c250eb08af05373e2f459afdf06f86ade5" translate="yes" xml:space="preserve">
          <source>Enables automatic Path MTU discovery</source>
          <target state="translated">パスMTUの自動検出を有効にします。</target>
        </trans-unit>
        <trans-unit id="1aaeb3427c0032642a4226c0cd3b5f50f5fb209d" translate="yes" xml:space="preserve">
          <source>Enables debug output. The more &lt;code&gt;-d&lt;/code&gt; flags specified, the more debug output you will get (to a certain limit). This option is most useful when the &lt;code&gt;epmd&lt;/code&gt; daemon is not started as a daemon.</source>
          <target state="translated">デバッグ出力を有効にします。 &lt;code&gt;-d&lt;/code&gt; フラグをより多く指定すると、より多くのデバッグ出力が得られます（特定の制限まで）。このオプションは、 &lt;code&gt;epmd&lt;/code&gt; デーモンがデーモンとして開始されていない場合に最も役立ちます。</target>
        </trans-unit>
        <trans-unit id="dc4bb9c9b6967fcf2db9ac785f5fa835fda825a8" translate="yes" xml:space="preserve">
          <source>Enables definition of an alternative hashing scheme. The module must implement the &lt;code&gt;&lt;a href=&quot;mnesia_frag_hash&quot;&gt;mnesia_frag_hash&lt;/a&gt;&lt;/code&gt; callback behavior. This property can explicitly be set at table creation. Default is &lt;code&gt;mnesia_frag_hash&lt;/code&gt;.</source>
          <target state="translated">代替ハッシュスキームの定義を有効にします。モジュールは &lt;code&gt;&lt;a href=&quot;mnesia_frag_hash&quot;&gt;mnesia_frag_hash&lt;/a&gt;&lt;/code&gt; コールバック動作を実装する必要があります。このプロパティは、テーブルの作成時に明示的に設定できます。デフォルトは &lt;code&gt;mnesia_frag_hash&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3a700ff4718bb88a01bb446ce6cbb93500e0f99a" translate="yes" xml:space="preserve">
          <source>Enables fetching of CRLs specified as http URIs in&lt;code&gt;X509 certificate extensions&lt;/code&gt;. Requires the OTP inets application.</source>
          <target state="translated">&lt;code&gt;X509 certificate extensions&lt;/code&gt; でhttp URIとして指定されたCRLのフェッチを有効にします。OTP inetsアプリケーションが必要です。</target>
        </trans-unit>
        <trans-unit id="ad67ee1b0fedae077d66e983c37484352f51633e" translate="yes" xml:space="preserve">
          <source>Enables heartbeat</source>
          <target state="translated">心臓の鼓動を有効にする</target>
        </trans-unit>
        <trans-unit id="a3907a70a0b2989a151817232d2aeddc263d8c16" translate="yes" xml:space="preserve">
          <source>Enables installation of alternative debug functions. An example of such a function is a trigger, a function that waits for some special event and performs some action when the event is generated. For example, turning on low-level tracing.</source>
          <target state="translated">代替のデバッグ関数のインストールを可能にします。このような関数の例としては、トリガー、つまり特別なイベントを待ち、イベントが発生したときに何らかのアクションを実行する関数があります。例えば、低レベルのトレースをオンにします。</target>
        </trans-unit>
        <trans-unit id="ffe6f57150e2b9c16f36b6e2673242748d6ce067" translate="yes" xml:space="preserve">
          <source>Enables modification of the logging behavior, see &lt;code&gt;&lt;a href=&quot;run_test_chapter#logopts&quot;&gt;Log options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ロギング動作の変更を有効にし &lt;code&gt;&lt;a href=&quot;run_test_chapter#logopts&quot;&gt;Log options&lt;/a&gt;&lt;/code&gt; 。ログオプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="357280b780d03061af846c26360d95eeff0c67f7" translate="yes" xml:space="preserve">
          <source>Enables modified timing and sets the modified timing level. Valid range is 0-9. The timing of the runtime system is changed. A high level usually means a greater change than a low level. Changing the timing can be very useful for finding timing-related bugs.</source>
          <target state="translated">修正タイミングを有効にし、修正タイミングレベルを設定します。有効範囲は0~9です。ランタイムシステムのタイミングが変更される。高いレベルは通常、低いレベルよりも大きな変化を意味します。タイミングを変更することは、タイミング関連のバグを見つけるのに非常に便利です。</target>
        </trans-unit>
        <trans-unit id="615f0c0aff5e4fca8ae52bd7ab1a8c331579d793" translate="yes" xml:space="preserve">
          <source>Enables or disables &lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Time_Correction&quot;&gt;time correction&lt;/a&gt;&lt;/code&gt; を有効または無効にします。</target>
        </trans-unit>
        <trans-unit id="d823391dc2d43021b24dfe428d56fd43f464182a" translate="yes" xml:space="preserve">
          <source>Enables or disables &lt;code&gt;scheduler utilization&lt;/code&gt; balancing of load. By default scheduler utilization balancing is disabled and instead scheduler compaction of load is enabled, which strives for a load distribution that causes as many scheduler threads as possible to be fully loaded (that is, not run out of work). When scheduler utilization balancing is enabled, the system instead tries to balance scheduler utilization between schedulers. That is, strive for equal scheduler utilization on all schedulers.</source>
          <target state="translated">負荷の &lt;code&gt;scheduler utilization&lt;/code&gt; バランシングを有効または無効にします。デフォルトでは、スケジューラ使用率の分散は無効になっており、代わりに負荷のスケジューラ圧縮が有効になっています。これにより、可能な限り多くのスケジューラスレッドが完全に読み込まれる（つまり、作業が不足しない）負荷分散を目指します。スケジューラー使用率バランシングが有効になっている場合、システムは代わりにスケジューラー間のスケジューラー使用率のバランスを取ろうとします。つまり、すべてのスケジューラでスケジューラの使用率が等しくなるように努めます。</target>
        </trans-unit>
        <trans-unit id="1e32eab9107eaf08c77b89032d18371faffb6cdc" translate="yes" xml:space="preserve">
          <source>Enables or disables &lt;strong&gt;call tracing&lt;/strong&gt; for one or more functions. Must be combined with &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; to set the &lt;code&gt;call&lt;/code&gt; trace flag for one or more processes.</source>
          <target state="translated">1つ以上の関数の&lt;strong&gt;呼び出しトレース&lt;/strong&gt;を有効または無効にします。1つ以上のプロセスの &lt;code&gt;call&lt;/code&gt; トレースフラグを設定するには、 &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; と組み合わせる必要があります。</target>
        </trans-unit>
        <trans-unit id="2526ae91dd204d3d2ab7ffcfeb2b5857d6c093f2" translate="yes" xml:space="preserve">
          <source>Enables or disables OS signals.</source>
          <target state="translated">OS 信号の有効・無効を設定します。</target>
        </trans-unit>
        <trans-unit id="1c4032d67b9cd3bef26458eda1149afa48dbaf5f" translate="yes" xml:space="preserve">
          <source>Enables or disables printout of standard events to a file.</source>
          <target state="translated">標準イベントのファイルへの印刷を有効または無効にします。</target>
        </trans-unit>
        <trans-unit id="f873933c3614b84347efc49bd44a15cf27eb0ad2" translate="yes" xml:space="preserve">
          <source>Enables or disables scheduler compaction of load. By default scheduler compaction of load is enabled. When enabled, load balancing strives for a load distribution, which causes as many scheduler threads as possible to be fully loaded (that is, not run out of work). This is accomplished by migrating load (for example, runnable processes) into a smaller set of schedulers when schedulers frequently run out of work. When disabled, the frequency with which schedulers run out of work is not taken into account by the load balancing logic.</source>
          <target state="translated">スケジューラによる負荷の圧縮を有効または無効にします。デフォルトでは、スケジューラによる負荷の圧縮は有効になっています。有効にすると、ロードバランシングは負荷分散を行い、できるだけ多くのスケジューラスレッドが完全にロードされるようにします(つまり、仕事が尽きないようにします)。これは、スケジューラが頻繁に仕事を使い果たした場合に、負荷(例えば、実行可能なプロセス)をより小さなスケジューラのセットに移行することで達成されます。この機能を無効にすると、スケジューラがワークアウトする頻度は、負荷分散ロジックでは考慮されません。</target>
        </trans-unit>
        <trans-unit id="8cac6a4d74e5fb7ad5378afd8802105af7c1d25f" translate="yes" xml:space="preserve">
          <source>Enables or disables the collection of statistics. If &lt;code&gt;Flag&lt;/code&gt; is &lt;code&gt;get&lt;/code&gt;, the statistical collection is returned.</source>
          <target state="translated">統計の収集を有効または無効にします。場合は &lt;code&gt;Flag&lt;/code&gt; ある &lt;code&gt;get&lt;/code&gt; 、統計的なコレクションが返されます。</target>
        </trans-unit>
        <trans-unit id="38ff1c7d6436d6406a601e79d21b1dc7a693e097" translate="yes" xml:space="preserve">
          <source>Enables or disables the logging of all system events in text format to the file. The events are formatted with a function that is defined by the process that generated the event (with a call to &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt;). The file is opened with encoding UTF-8.</source>
          <target state="translated">テキスト形式のすべてのシステムイベントのファイルへのロギングを有効または無効にします。イベントは、（ &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt; の呼び出しを使用して）イベントを生成したプロセスによって定義された関数でフォーマットされます。ファイルはUTF-8エンコードで開かれます。</target>
        </trans-unit>
        <trans-unit id="706a0f363687eafe06b91d6585ebbab3881c8cb3" translate="yes" xml:space="preserve">
          <source>Enables saving of abstract structure on file for debugging purpose.</source>
          <target state="translated">デバッグ用に抽象構造体をファイルに保存できるようにします。</target>
        </trans-unit>
        <trans-unit id="d9853ba1a8ea65043efdb893f1250a28d51ec84b" translate="yes" xml:space="preserve">
          <source>Enables the &lt;code&gt;os_sup&lt;/code&gt; service. Needed on Solaris only.</source>
          <target state="translated">&lt;code&gt;os_sup&lt;/code&gt; サービスを有効にします。Solarisでのみ必要です。</target>
        </trans-unit>
        <trans-unit id="3299ed2aa6cc796f27c06b5528ac008312e30a87" translate="yes" xml:space="preserve">
          <source>Enables the TLS/DTLS server to have a local policy for deciding if a session is to be reused or not. Meaningful only if &lt;code&gt;reuse_sessions&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;. &lt;code&gt;SuggestedSessionId&lt;/code&gt; is a &lt;code&gt;binary()&lt;/code&gt;, &lt;code&gt;PeerCert&lt;/code&gt; is a DER-encoded certificate, &lt;code&gt;Compression&lt;/code&gt; is an enumeration integer, and &lt;code&gt;CipherSuite&lt;/code&gt; is of type &lt;code&gt;ciphersuite()&lt;/code&gt;.</source>
          <target state="translated">TLS / DTLSサーバーが、セッションを再利用するかどうかを決定するためのローカルポリシーを持つことができるようにします。 &lt;code&gt;reuse_sessions&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されている場合にのみ意味があります。 &lt;code&gt;SuggestedSessionId&lt;/code&gt; は &lt;code&gt;binary()&lt;/code&gt; 、 &lt;code&gt;PeerCert&lt;/code&gt; はDERエンコードされた証明書、 &lt;code&gt;Compression&lt;/code&gt; は列挙整数、 &lt;code&gt;CipherSuite&lt;/code&gt; はタイプ &lt;code&gt;ciphersuite()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c522128b3a7019b49d9a0b8a5e0473a314dfc7fa" translate="yes" xml:space="preserve">
          <source>Enables the autoresume feature. When enabled, remote nodes try to reconnect to the controlling node if they are restarted. The feature requires application Runtime_Tools to be started (so it has to be present in the &lt;code&gt;.boot&lt;/code&gt; scripts if the traced nodes run with embedded Erlang). If this is not possible, resume can be performed manually by starting &lt;code&gt;Runtime_Tools&lt;/code&gt; remotely using &lt;code&gt;rpc:call/4&lt;/code&gt;.</source>
          <target state="translated">自動再開機能を有効にします。有効にすると、リモートノードが再起動すると、制御ノードへの再接続を試みます。この機能を使用するには、アプリケーションのRuntime_Toolsを起動する必要があります（トレースされたノードが埋め込みErlangで実行されている場合は、 &lt;code&gt;.boot&lt;/code&gt; スクリプトに存在する必要があります）。これが不可能な場合は、 &lt;code&gt;rpc:call/4&lt;/code&gt; を使用してリモートで &lt;code&gt;Runtime_Tools&lt;/code&gt; を開始することにより、手動で再開できます。</target>
        </trans-unit>
        <trans-unit id="44c529662c2d69b9e4411fc182619f06a2aa4994" translate="yes" xml:space="preserve">
          <source>Enables the code path cache of the code server; see &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">コードサーバーのコードパスキャッシュを有効にします。 &lt;code&gt;code(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="27f7a0694e3964dbe3f3f0deff4a82e761a20c55" translate="yes" xml:space="preserve">
          <source>Enables time correction. This is the default if time correction is supported on the specific platform.</source>
          <target state="translated">時刻補正を有効にします。これは、特定のプラットフォームで時刻補正がサポートされている場合のデフォルトです。</target>
        </trans-unit>
        <trans-unit id="1f48bf86a5ea414b568d06bccd0c39df4107ada1" translate="yes" xml:space="preserve">
          <source>Enables to efficiently read the terms that are appended to a log. Minimises disk I/O by reading 64 kilobyte chunks from the file.</source>
          <target state="translated">ログに追加された用語を効率的に読み込めるようにします。ファイルから64キロバイトのチャンクを読み込むことで、ディスクI/Oを最小化します。</target>
        </trans-unit>
        <trans-unit id="9a0c56d593d7b6385220fb5c3c0f22c02a031e9c" translate="yes" xml:space="preserve">
          <source>Enables tracing for all received messages (to &lt;code&gt;'receive'&lt;/code&gt; traced processes). Any match specification is removed. &lt;strong&gt;This is the default&lt;/strong&gt;.</source>
          <target state="translated">受信したすべてのメッセージのトレースを有効にします（トレースされたプロセスを &lt;code&gt;'receive'&lt;/code&gt; するため）。一致指定はすべて削除されます。&lt;strong&gt;これがデフォルトです&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c0650d46dedcd7a949e16c3270a03871e5edb6c2" translate="yes" xml:space="preserve">
          <source>Enables tracing for all sent messages (from &lt;code&gt;send&lt;/code&gt; traced processes). Any match specification is removed. &lt;strong&gt;This is the default&lt;/strong&gt;.</source>
          <target state="translated">（ &lt;code&gt;send&lt;/code&gt; トレースプロセスからの）すべての送信メッセージのトレースを有効にします。一致指定はすべて削除されます。&lt;strong&gt;これがデフォルトです&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="24884b0a02a3d3730cdbdf4ea864f21b5887858d" translate="yes" xml:space="preserve">
          <source>Enables tracing for the matching functions. Any match specification is removed.</source>
          <target state="translated">マッチング関数のトレースを有効にします。マッチ指定はすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="4dbe510dd55a873bed641c91ad586814883d3ac4" translate="yes" xml:space="preserve">
          <source>Enables verbose output.</source>
          <target state="translated">冗長出力を有効にします。</target>
        </trans-unit>
        <trans-unit id="1d63208713c20c60f36d4a0bd52fdfeeaac74557" translate="yes" xml:space="preserve">
          <source>Enables/disables periodic transmission on a connected socket when no other data is exchanged. If the other end does not respond, the connection is considered broken and an error message is sent to the controlling process. Defaults to &lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="translated">他のデータが交換されない場合に、接続されたソケットでの定期的な送信を有効または無効にします。もう一方の端が応答しない場合、接続は切断されたと見なされ、エラーメッセージが制御プロセスに送信されます。デフォルトは &lt;code&gt;disabled&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dc8852a728863245cf6c2ea5864c53ec32099900" translate="yes" xml:space="preserve">
          <source>Enables/disables permission to send broadcasts.</source>
          <target state="translated">ブロードキャストの送信許可を有効/無効にします。</target>
        </trans-unit>
        <trans-unit id="50b6e1cb035c7e1653d306c33b0528a17000184c" translate="yes" xml:space="preserve">
          <source>Enables/disables routing bypass for outgoing messages.</source>
          <target state="translated">送信メッセージのルーティングバイパスを有効/無効にします。</target>
        </trans-unit>
        <trans-unit id="573a8fde2e1fa269c9fcf8e97134769f903a40af" translate="yes" xml:space="preserve">
          <source>Enabling the service includes actions which require root privileges, such as change of ownership and file privileges of an executable binary file, and creating a modified copy of the configuration file for &lt;code&gt;syslogd&lt;/code&gt;. When &lt;code&gt;os_sup&lt;/code&gt; is terminated, the service must be disabled, meaning the original configuration must be restored. Enabling/disabling can be done either outside or inside &lt;code&gt;os_sup&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;#config&quot;&gt;Configuration&lt;/a&gt;&lt;/code&gt; below.</source>
          <target state="translated">サービスの有効化には、実行可能バイナリファイルの所有権やファイル特権の変更、 &lt;code&gt;syslogd&lt;/code&gt; の構成ファイルの変更されたコピーの作成など、ルート特権を必要とするアクションが含まれます。 &lt;code&gt;os_sup&lt;/code&gt; が終了したら、サービスを無効にする必要があります。つまり、元の構成を復元する必要があります。有効化/無効化は、 &lt;code&gt;os_sup&lt;/code&gt; の外部または内部で実行できます。以下の &lt;code&gt;&lt;a href=&quot;#config&quot;&gt;Configuration&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="f4393b5f9d380987d4ced572aaef9ee8a74133bf" translate="yes" xml:space="preserve">
          <source>Enclosing mark</source>
          <target state="translated">封入マーク</target>
        </trans-unit>
        <trans-unit id="bca8cc4256c0c31c63935cf063643e54997e3d43" translate="yes" xml:space="preserve">
          <source>Encode (generate) an SDP construct.</source>
          <target state="translated">SDP 構成をエンコード (生成)する。</target>
        </trans-unit>
        <trans-unit id="bc6b76a0bae3808e8c4c861292502c13fd082970" translate="yes" xml:space="preserve">
          <source>Encode a Diameter message.</source>
          <target state="translated">Diameterメッセージをエンコードします。</target>
        </trans-unit>
        <trans-unit id="f48c48f6cdcaa4ee965faed6f3e5d2dd4fe0ed0a" translate="yes" xml:space="preserve">
          <source>Encode a megaco action reply. If this, for whatever reason, is not supported, the function should return the error reason &lt;code&gt;not_implemented&lt;/code&gt;.</source>
          <target state="translated">megacoアクション応答をエンコードします。何らかの理由でこれがサポートされていない場合、関数はエラー理由 &lt;code&gt;not_implemented&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="919696abd8a16da6f19a76ce339cffb55a6348e1" translate="yes" xml:space="preserve">
          <source>Encode a megaco message.</source>
          <target state="translated">メガメッセージをエンコードします。</target>
        </trans-unit>
        <trans-unit id="267e2bf6ea12bf30c6d27046637855d09ac7cfca" translate="yes" xml:space="preserve">
          <source>Encode a megaco transaction. If this, for whatever reason, is not supported, the function should return the error reason &lt;code&gt;not_implemented&lt;/code&gt;.</source>
          <target state="translated">megacoトランザクションをエンコードします。何らかの理由でこれがサポートされていない場合、関数はエラー理由 &lt;code&gt;not_implemented&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="70ef8fa05ae9c6457354b1cad354772ba81b3d6f" translate="yes" xml:space="preserve">
          <source>Encode and Decode Functions for SNMP PDUs</source>
          <target state="translated">SNMP PDUのエンコードおよびデコード機能</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
