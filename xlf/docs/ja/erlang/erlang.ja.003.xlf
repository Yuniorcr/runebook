<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="9d90fb68f823d952977ab9bbfbb917024afe2fa5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AncData&lt;/code&gt; may also contain &lt;code&gt;&lt;a href=&quot;inet#type-ancillary_data&quot;&gt; ancillary data &lt;/a&gt;&lt;/code&gt; from the socket &lt;code&gt;&lt;a href=&quot;#type-option&quot;&gt;options&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;inet#option-recvtos&quot;&gt;recvtos&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;inet#option-recvtclass&quot;&gt;recvtclass&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;inet#option-recvttl&quot;&gt;recvttl&lt;/a&gt;&lt;/code&gt;, if that is supported by the platform for the socket.</source>
          <target state="translated">&lt;code&gt;AncData&lt;/code&gt; には、ソケットのプラットフォームでサポートされている場合、ソケット &lt;code&gt;&lt;a href=&quot;#type-option&quot;&gt;options&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;inet#option-recvtos&quot;&gt;recvtos&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;inet#option-recvtclass&quot;&gt;recvtclass&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;inet#option-recvttl&quot;&gt;recvttl&lt;/a&gt;&lt;/code&gt; からの &lt;code&gt;&lt;a href=&quot;inet#type-ancillary_data&quot;&gt; ancillary data &lt;/a&gt;&lt;/code&gt; が含まれる場合もあります。</target>
        </trans-unit>
        <trans-unit id="3c4658bb2b7cc115f93bce1fdf614e65ef8900d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnotherFilter (2)&lt;/code&gt; - If more filters are inserted into the dictionary, these will turn up here as entries in the &lt;code&gt;Filters&lt;/code&gt; menu. The second filter will be number 2, the next one number 3 etc. The names are sorted.</source>
          <target state="translated">&lt;code&gt;AnotherFilter (2)&lt;/code&gt; -より多くのフィルターがディクショナリに挿入されている場合、これらはここで[ &lt;code&gt;Filters&lt;/code&gt; ]メニューのエントリとして表示されます。2番目のフィルターは2番、次の1番は3番になります。名前はソートされます。</target>
        </trans-unit>
        <trans-unit id="ffd4847a8fe59b0d20481a5e7fd449c280e7906b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AnotherFilter (2)&lt;/code&gt; - If more filters are inserted into the dictionary, these will turn up here as entries in the &lt;code&gt;Filters&lt;/code&gt; menu. The second filter will get the shortcut number 2, the next one number 3 etc. The names are sorted.</source>
          <target state="translated">&lt;code&gt;AnotherFilter (2)&lt;/code&gt; -より多くのフィルターがディクショナリに挿入されている場合、これらはここで[ &lt;code&gt;Filters&lt;/code&gt; ]メニューのエントリとして表示されます。2番目のフィルターはショートカット番号2、次の番号3などを取得します。名前はソートされます。</target>
        </trans-unit>
        <trans-unit id="83893ff359176c32f1798a765c235fcb4fdc1660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Answer = [{Clause,Value}]&lt;/code&gt;, one tuple for each clause in the module. A clause is specified by its module name &lt;code&gt;M&lt;/code&gt;, function name &lt;code&gt;F&lt;/code&gt;, arity &lt;code&gt;A&lt;/code&gt; and position in the function definition &lt;code&gt;C&lt;/code&gt; as a tuple &lt;code&gt;{M,F,A,C}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Answer = [{Clause,Value}]&lt;/code&gt; 、モジュールの句ごとに1つのタプル。節は、モジュール名 &lt;code&gt;M&lt;/code&gt; 、関数名 &lt;code&gt;F&lt;/code&gt; 、アリティ &lt;code&gt;A&lt;/code&gt; 、および関数定義 &lt;code&gt;C&lt;/code&gt; 内の位置によって、タプル &lt;code&gt;{M,F,A,C}&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="79e4fe34267e271dc9e1f3eb7cea36d0c3633614" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Answer = [{Function,Value}]&lt;/code&gt;, one tuple for each function in the module. A function is specified by its module name &lt;code&gt;M&lt;/code&gt;, function name &lt;code&gt;F&lt;/code&gt; and arity &lt;code&gt;A&lt;/code&gt; as a tuple &lt;code&gt;{M,F,A}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Answer = [{Function,Value}]&lt;/code&gt; 、モジュール内の関数ごとに1つのタプル。関数は、モジュール名 &lt;code&gt;M&lt;/code&gt; 、関数名 &lt;code&gt;F&lt;/code&gt; およびアリティ &lt;code&gt;A&lt;/code&gt; によってタプル &lt;code&gt;{M,F,A}&lt;/code&gt; として指定されます。</target>
        </trans-unit>
        <trans-unit id="881c2348cfc2144d5636391475ad92fa45a896b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Answer = [{Line,Value}]&lt;/code&gt;, one tuple for each executable line in the module. A line is specified by its module name &lt;code&gt;M&lt;/code&gt; and line number in the source file &lt;code&gt;N&lt;/code&gt; as a tuple &lt;code&gt;{M,N}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Answer = [{Line,Value}]&lt;/code&gt; 、モジュールの実行可能行ごとに1つのタプル。行は、ソースファイル &lt;code&gt;N&lt;/code&gt; のモジュール名 &lt;code&gt;M&lt;/code&gt; と行番号によって、タプル &lt;code&gt;{M,N}&lt;/code&gt; として指定されます。</target>
        </trans-unit>
        <trans-unit id="06e77f24126954b016620058577829983b5f799b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Answer = {Module,Value}&lt;/code&gt;, where &lt;code&gt;Module&lt;/code&gt; is the module name.</source>
          <target state="translated">&lt;code&gt;Answer = {Module,Value}&lt;/code&gt; 、ここで &lt;code&gt;Module&lt;/code&gt; はモジュール名です。</target>
        </trans-unit>
        <trans-unit id="127a5d14627aeafdea1a0558f13f7e8a596cb1bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;App&lt;/code&gt; is &lt;code&gt;kernel&lt;/code&gt;, &lt;code&gt;stdlib&lt;/code&gt;, &lt;code&gt;gs&lt;/code&gt;, or &lt;code&gt;debugger&lt;/code&gt; if &lt;code&gt;AbsModule&lt;/code&gt; belongs to one of these applications.</source>
          <target state="translated">&lt;code&gt;App&lt;/code&gt; &lt;code&gt;AbsModule&lt;/code&gt; がこれらのアプリケーションのいずれかに属している場合、アプリは &lt;code&gt;kernel&lt;/code&gt; 、 &lt;code&gt;stdlib&lt;/code&gt; 、 &lt;code&gt;gs&lt;/code&gt; 、または &lt;code&gt;debugger&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3657c99dab94ca619fd8eab19519a118ae949bea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;App&lt;/code&gt; is the name of the application, which must be started. &lt;code&gt;Dir&lt;/code&gt; is the new library directory of &lt;code&gt;App&lt;/code&gt;. The corresponding modules as well as the &lt;code&gt;.app&lt;/code&gt; and &lt;code&gt;.appup&lt;/code&gt; files are to be located under &lt;code&gt;Dir/ebin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;App&lt;/code&gt; は、起動する必要のあるアプリケーションの名前です。 &lt;code&gt;Dir&lt;/code&gt; は &lt;code&gt;App&lt;/code&gt; の新しいライブラリディレクトリです。対応するモジュールと &lt;code&gt;.app&lt;/code&gt; および &lt;code&gt;.appup&lt;/code&gt; ファイルは、 &lt;code&gt;Dir/ebin&lt;/code&gt; の下に配置されます。</target>
        </trans-unit>
        <trans-unit id="ec9aa546a88ba407e6d7686c2adf81e2819b1a2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;App&lt;/code&gt; is the name of the application, which must be started. &lt;code&gt;Dir&lt;/code&gt; is the previous library directory of &lt;code&gt;App&lt;/code&gt;. The corresponding modules and the old &lt;code&gt;.app&lt;/code&gt; file are to be located under &lt;code&gt;Dir/ebin&lt;/code&gt;. The &lt;code&gt;.appup&lt;/code&gt; file is to be located in the &lt;code&gt;ebin&lt;/code&gt; directory of the &lt;strong&gt;current&lt;/strong&gt; library directory of the application (&lt;code&gt;code:lib_dir(App))&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;App&lt;/code&gt; は、起動する必要のあるアプリケーションの名前です。 &lt;code&gt;Dir&lt;/code&gt; は &lt;code&gt;App&lt;/code&gt; の以前のライブラリディレクトリです。対応するモジュールと古い &lt;code&gt;.app&lt;/code&gt; ファイルは &lt;code&gt;Dir/ebin&lt;/code&gt; の下にあります。 &lt;code&gt;.appup&lt;/code&gt; のファイルがに位置する &lt;code&gt;ebin&lt;/code&gt; ののディレクトリ&lt;strong&gt;現在の&lt;/strong&gt;アプリケーションのライブラリディレクトリ（ &lt;code&gt;code:lib_dir(App))&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="426dc31ee7d2a0b16292c8d96ba002a88a6bba48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;App&lt;/code&gt; is the name of the application, which must be started. &lt;code&gt;OldVsn&lt;/code&gt; is the previous application version and can be omitted if &lt;code&gt;Dir&lt;/code&gt; is of the format &lt;code&gt;&quot;App-OldVsn&quot;&lt;/code&gt;. &lt;code&gt;Dir&lt;/code&gt; is the library directory of the previous version of &lt;code&gt;App&lt;/code&gt;. The corresponding modules and the old &lt;code&gt;.app&lt;/code&gt; file are to be located under &lt;code&gt;Dir/ebin&lt;/code&gt;. The &lt;code&gt;.appup&lt;/code&gt; file is to be located in the &lt;code&gt;ebin&lt;/code&gt; directory of the &lt;strong&gt;current&lt;/strong&gt; library directory of the application (&lt;code&gt;code:lib_dir(App)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;App&lt;/code&gt; は、起動する必要のあるアプリケーションの名前です。 &lt;code&gt;OldVsn&lt;/code&gt; は以前のアプリケーションバージョンであり、 &lt;code&gt;Dir&lt;/code&gt; の形式が &lt;code&gt;&quot;App-OldVsn&quot;&lt;/code&gt; の場合は省略できます。 &lt;code&gt;Dir&lt;/code&gt; は、以前のバージョンの &lt;code&gt;App&lt;/code&gt; のライブラリディレクトリです。対応するモジュールと古い &lt;code&gt;.app&lt;/code&gt; ファイルは &lt;code&gt;Dir/ebin&lt;/code&gt; の下にあります。 &lt;code&gt;.appup&lt;/code&gt; のファイルがに位置する &lt;code&gt;ebin&lt;/code&gt; ののディレクトリ&lt;strong&gt;現在の&lt;/strong&gt;アプリケーションのライブラリディレクトリ（ &lt;code&gt;code:lib_dir(App)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="c42857cfa3166360411a1e730d16a74637204187" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;App&lt;/code&gt; is the name of the application, which must be started. &lt;code&gt;ToVsn&lt;/code&gt; is the version to be upgraded/downgraded to, and &lt;code&gt;ToDir&lt;/code&gt; is the library directory of this version. The corresponding modules as well as the &lt;code&gt;.app&lt;/code&gt; and &lt;code&gt;.appup&lt;/code&gt; files are to be located under &lt;code&gt;Dir/ebin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;App&lt;/code&gt; は、起動する必要のあるアプリケーションの名前です。 &lt;code&gt;ToVsn&lt;/code&gt; はアップグレード/ダウングレードするバージョンで、 &lt;code&gt;ToDir&lt;/code&gt; はこのバージョンのライブラリディレクトリです。対応するモジュールと &lt;code&gt;.app&lt;/code&gt; および &lt;code&gt;.appup&lt;/code&gt; ファイルは、 &lt;code&gt;Dir/ebin&lt;/code&gt; の下に配置されます。</target>
        </trans-unit>
        <trans-unit id="80d636ede8faaba1c5b0f98c224f636d79025320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;App&lt;/code&gt; specifies the Diameter application in which the request is defined and callbacks to the corresponding callback module will follow as described below and in &lt;code&gt;diameter_app(3)&lt;/code&gt;. Unless the &lt;code&gt;detach&lt;/code&gt; option is specified, the call returns either when an answer message is received from the peer or an error occurs. In the answer case, the return value is as returned by a &lt;code&gt;handle_answer/4&lt;/code&gt; callback. In the error case, whether or not the error is returned directly by diameter or from a &lt;code&gt;handle_error/4&lt;/code&gt; callback depends on whether or not the outgoing request is successfully encoded for transmission to the peer, the cases being documented below.</source>
          <target state="translated">&lt;code&gt;App&lt;/code&gt; は、リクエストが定義されているDiameterアプリケーションを指定します。対応するコールバックモジュールへのコールバックは、以下と &lt;code&gt;diameter_app(3)&lt;/code&gt; で説明されているようになります。 &lt;code&gt;detach&lt;/code&gt; オプションが指定されていない限り、呼び出しは、ピアから応答メッセージを受信したとき、またはエラーが発生したときに返されます。回答の場合、戻り値は、 &lt;code&gt;handle_answer/4&lt;/code&gt; コールバックによって返されるものと同じです。エラーの場合、エラーが直径によって直接返されるか、 &lt;code&gt;handle_error/4&lt;/code&gt; コールバックから返されるかは、発信リクエストがピアへの送信用に正常にエンコードされているかどうかによって異なります。</target>
        </trans-unit>
        <trans-unit id="8a8d448d904669c27abf57e449a854709e6d27a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AppDirs&lt;/code&gt; can be used to specify from where the modules for the specified applications are to be loaded. &lt;code&gt;App&lt;/code&gt; is the name of an application, &lt;code&gt;Vsn&lt;/code&gt; is the version, and &lt;code&gt;Dir&lt;/code&gt; is the name of the directory where &lt;code&gt;App-Vsn&lt;/code&gt; is located. The corresponding modules are to be located under &lt;code&gt;Dir/App-Vsn/ebin&lt;/code&gt;. The directories for applications not specified in &lt;code&gt;AppDirs&lt;/code&gt; are assumed to be located in &lt;code&gt;$ROOT/lib&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AppDirs&lt;/code&gt; を使用して、指定したアプリケーションのモジュールをどこからロードするかを指定できます。 &lt;code&gt;App&lt;/code&gt; はアプリケーションの名前、 &lt;code&gt;Vsn&lt;/code&gt; はバージョン、 &lt;code&gt;Dir&lt;/code&gt; は &lt;code&gt;App-Vsn&lt;/code&gt; が配置されているディレクトリの名前です。対応するモジュールは &lt;code&gt;Dir/App-Vsn/ebin&lt;/code&gt; の下にあります。 &lt;code&gt;AppDirs&lt;/code&gt; で指定されていないアプリケーションのディレクトリは、 &lt;code&gt;$ROOT/lib&lt;/code&gt; あると見なされます。</target>
        </trans-unit>
        <trans-unit id="207257cb2f9b1769798b94b31c3d2f6eb9475a4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Application&lt;/code&gt;, an atom, is the name of the application. The file must be named &lt;code&gt;Application.app&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 、アトムは、アプリケーションの名前です。ファイルの名前は &lt;code&gt;Application.app&lt;/code&gt; にする必要があります。</target>
        </trans-unit>
        <trans-unit id="6c15f33165e8a9e4039634ce0cddd07d8c1d4238" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arg&lt;/code&gt; defaults to &lt;code&gt;silent&lt;/code&gt;. If &lt;code&gt;Arg == verbose&lt;/code&gt;, the function writes information about which nodes it is pinging to &lt;code&gt;stdout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arg&lt;/code&gt; のデフォルトは &lt;code&gt;silent&lt;/code&gt; です。場合 &lt;code&gt;Arg == verbose&lt;/code&gt; 機能が情報を書き込むについては、それがにpingを実行されてノード &lt;code&gt;stdout&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="992dec7425bd4f2e6de82a88f78a9d94966070c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arg=remove_handler&lt;/code&gt; if the event handler is deleted because another callback function has returned &lt;code&gt;remove_handler&lt;/code&gt; or &lt;code&gt;{remove_handler,Reply}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arg=remove_handler&lt;/code&gt; 別のコールバック関数が &lt;code&gt;remove_handler&lt;/code&gt; または &lt;code&gt;{remove_handler,Reply}&lt;/code&gt; 返したためにイベントハンドラーが削除された場合は、Arg = remove_handler。</target>
        </trans-unit>
        <trans-unit id="7af7677b11b798f9a3739dfe46ebad33477c1e53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arg=stop&lt;/code&gt; if the event handler is deleted because the event manager is terminating.</source>
          <target state="translated">&lt;code&gt;Arg=stop&lt;/code&gt; イベントマネージャが終了しているためにイベントハンドラが削除された場合、Arg = stop。</target>
        </trans-unit>
        <trans-unit id="5d6c6a6cd941a0cc2f9324e223acee5dea0476bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arg={error,Term}&lt;/code&gt; if the event handler is deleted because a callback function returned an unexpected value &lt;code&gt;Term&lt;/code&gt;, or &lt;code&gt;Arg={error,{'EXIT',Reason}}&lt;/code&gt; if a callback function failed.</source>
          <target state="translated">&lt;code&gt;Arg={error,Term}&lt;/code&gt; コールバック関数が、予期しない値を返したため、イベントハンドラが削除された場合に &lt;code&gt;Term&lt;/code&gt; 、または &lt;code&gt;Arg={error,{'EXIT',Reason}}&lt;/code&gt; コールバック関数が失敗した場合。</target>
        </trans-unit>
        <trans-unit id="03bb56c6b98d304f7b5d70e5aa187b8ac7cdb4ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arg={stop,Reason}&lt;/code&gt; if the event handler has a supervised connection to a process that has terminated with reason &lt;code&gt;Reason&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arg={stop,Reason}&lt;/code&gt; イベントハンドラーが理由 &lt;code&gt;Reason&lt;/code&gt; で終了したプロセスへの監視された接続を持っている場合。</target>
        </trans-unit>
        <trans-unit id="c55024c4ee2c247d70d1f4859e1df12f9d43a7fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArgList&lt;/code&gt; is a list of &lt;code&gt;{Key,Value}&lt;/code&gt; tuples. The following arguments are valid:</source>
          <target state="translated">&lt;code&gt;ArgList&lt;/code&gt; は、 &lt;code&gt;{Key,Value}&lt;/code&gt; タプルのリストです。以下の引数が有効です。</target>
        </trans-unit>
        <trans-unit id="147c30da947adf4a4892befade9701ab0bf0e23e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is a list of arguments to the function. The function is to produce data in the specified &lt;code&gt;Encoding&lt;/code&gt;. The I/O server is to call the function as &lt;code&gt;apply(Mod, Func, Args)&lt;/code&gt; and put the returned data on the I/O device as if it was sent in a &lt;code&gt;{put_chars, Encoding, Characters}&lt;/code&gt; request. If the function returns anything else than a binary or list, or throws an exception, an error is to be sent back to the client.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は、関数への引数のリストです。関数は、指定された &lt;code&gt;Encoding&lt;/code&gt; でデータを生成することです。I / Oサーバーは、関数を &lt;code&gt;apply(Mod, Func, Args)&lt;/code&gt; として呼び出し、返されたデータを &lt;code&gt;{put_chars, Encoding, Characters}&lt;/code&gt; リクエストで送信されたかのようにI / Oデバイスに配置します。関数がバイナリまたはリスト以外のものを返すか、例外をスローした場合、エラーがクライアントに返されます。</target>
        </trans-unit>
        <trans-unit id="1032ab0a45837aa5e558e55a7557977adf4f1ff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is a list of the following tuples:</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は次のタプルのリストです。</target>
        </trans-unit>
        <trans-unit id="fca660cdb3f8f915493fd2f6142cba49b524fd68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is an arbitrary term that is passed as the argument to &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は、引数として &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; に渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="6a1b0a5d9ef41fbd51f62b36125b8f3683ea6868" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is an arbitrary term that is passed as the argument to &lt;code&gt;Module:init/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は、引数として &lt;code&gt;Module:init/1&lt;/code&gt; に渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="9737f86063ec00431a02147c9bc27b1405f9cf2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is any term that is passed as one of the arguments to &lt;code&gt;Module:terminate/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は、 &lt;code&gt;Module:terminate/2&lt;/code&gt; への引数の1つとして渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="81f7120bb52c7798b1e3af5cdb0e4547df19f32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is any term that is passed as the argument to &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; への引数として渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="1b7fedff52eccd5376acb9aa6f4546a03adb0d02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is any term that is passed as the argument to &lt;code&gt;Module:init/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は、 &lt;code&gt;Module:init/1&lt;/code&gt; への引数として渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="e060c199e7898dd4ade0f060278e73885f72ca12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is not a list. Note that the list is not verified to be a proper list at the client side.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; はリストではありません。このリストは、クライアント側で適切なリストであることが確認されていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="02c601707522a54ed1a70abcee445f4c3b98a2b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is not a proper list of terms.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は適切な用語のリストではありません。</target>
        </trans-unit>
        <trans-unit id="97dfcc0fd8f0b1b83a4bbd0325906f5fb98db9c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is supposed to be the argument list, but can be any term if the spawn is erroneous.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は引数リストであると想定されていますが、spawnが誤っている場合は任意の用語にすることができます。</target>
        </trans-unit>
        <trans-unit id="a8e48d3890aaa20887a4fa74575158a565e65fd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is the &lt;code&gt;Args&lt;/code&gt; argument provided to that start function.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は、その開始関数に提供される &lt;code&gt;Args&lt;/code&gt; 引数です。</target>
        </trans-unit>
        <trans-unit id="db44c4bb41d31d070f479dd89a240a5975268e6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Args&lt;/code&gt; is the &lt;code&gt;Args&lt;/code&gt; argument provided to the start function.</source>
          <target state="translated">&lt;code&gt;Args&lt;/code&gt; は、start関数に提供される &lt;code&gt;Args&lt;/code&gt; 引数です。</target>
        </trans-unit>
        <trans-unit id="ea09ec7aab32cf16535a273589f26b3f56787bd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arity&lt;/code&gt; is an integer encoded using &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt; SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arity&lt;/code&gt; 使用して符号化整数である &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt; SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="54eb84102726aabe0653e1fa3f1a619ad148d41e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arity&lt;/code&gt; is an integer encoded using &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt;SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Arity&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;#SMALL_INTEGER_EXT&quot;&gt;SMALL_INTEGER_EXT&lt;/a&gt;&lt;/code&gt; を使用してエンコードされた整数です。</target>
        </trans-unit>
        <trans-unit id="a124f721ef0f85ef72a2ddf715aa49913f600c90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Arity&lt;/code&gt; is the number of arguments that the fun is to be called with.</source>
          <target state="translated">&lt;code&gt;Arity&lt;/code&gt; は、funが呼び出される引数の数です。</target>
        </trans-unit>
        <trans-unit id="3f8fba28f11b78c6f2489b5219bc0f90e925b3e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Asn1module.asn1db&lt;/code&gt; - Intermediate format used by the compiler when modules &lt;code&gt;IMPORT&lt;/code&gt; definitions from each other.</source>
          <target state="translated">&lt;code&gt;Asn1module.asn1db&lt;/code&gt; -モジュールが相互に &lt;code&gt;IMPORT&lt;/code&gt; 定義をインポートするときにコンパイラーが使用する中間形式。</target>
        </trans-unit>
        <trans-unit id="27cb7f27ddb0560fbc08cb9c5f5429556733ed2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Asn1module.erl&lt;/code&gt; - Erlang module with encode, decode, and value functions</source>
          <target state="translated">&lt;code&gt;Asn1module.erl&lt;/code&gt; -エンコード、デコード、および値関数を備えたErlangモジュール</target>
        </trans-unit>
        <trans-unit id="e8bd75c24f151f42d3f3909872057200314f3d8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Asn1module.hrl&lt;/code&gt; (if any &lt;code&gt;SET&lt;/code&gt; or &lt;code&gt;SEQUENCE&lt;/code&gt; is defined)</source>
          <target state="translated">&lt;code&gt;Asn1module.hrl&lt;/code&gt; （ &lt;code&gt;SET&lt;/code&gt; または &lt;code&gt;SEQUENCE&lt;/code&gt; が定義されている場合）</target>
        </trans-unit>
        <trans-unit id="a0c8dda239cec76877038dfacf6fa4f86580305d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Atom&lt;/code&gt; is the registered process name. If the process has no registered name, this tuple is not present in the list.</source>
          <target state="translated">&lt;code&gt;Atom&lt;/code&gt; は登録されたプロセス名です。プロセスに登録名がない場合、このタプルはリストにありません。</target>
        </trans-unit>
        <trans-unit id="6c9fcfc631b661af3529f95b58189aaa7ea72ad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Attributes&lt;/code&gt; is a list of pairs representing the names and corresponding values of all so-called &quot;wild&quot; attributes (as e.g. &quot;&lt;code&gt;-compile(...)&lt;/code&gt;&quot;) occurring in &lt;code&gt;Forms&lt;/code&gt; (cf. &lt;code&gt;analyze_wild_attribute/1&lt;/code&gt;). We do not guarantee that each name occurs at most once in the list. The order of listing is not defined.</source>
          <target state="translated">&lt;code&gt;Attributes&lt;/code&gt; は、 &lt;code&gt;Forms&lt;/code&gt; 発生するすべてのいわゆる「ワイルド」属性（たとえば、「- &lt;code&gt;-compile(...)&lt;/code&gt; 」）の名前と対応する値を表すペアのリストです（cf. &lt;code&gt;analyze_wild_attribute/1&lt;/code&gt; ）。各名前がリストに1回だけ出現することを保証するものではありません。リストの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="492fcbbc7039ece19bae44d452a4005e217bf3bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AuthGroupFile&lt;/code&gt; indicates which file that contains the list of groups. The filename must contain the absolute path to the file. The format of the file is one group per row and every row contains the name of the group and the members of the group, separated by a space, for example:</source>
          <target state="translated">&lt;code&gt;AuthGroupFile&lt;/code&gt; は、グループのリストを含むファイルを示します。ファイル名には、ファイルへの絶対パスを含める必要があります。ファイルの形式は、行ごとに1つのグループであり、各行にはスペースで区切られたグループの名前とグループのメンバーが含まれます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="c0cedcb725bb86c4e6101f75ba3b8fe2706cdc86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AuthKey&lt;/code&gt; is a list (of integer). This is the User's secret localized authentication key. It is not visible in the MIB. The length of this key needs to be 16 if &lt;code&gt;usmHMACMD5AuthProtocol&lt;/code&gt; is used and 20 if &lt;code&gt;usmHMACSHAAuthProtocol&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;AuthKey&lt;/code&gt; は（整数の）リストです。これは、ユーザーの秘密のローカライズされた認証キーです。MIBには表示されません。このキーの長さは、 &lt;code&gt;usmHMACMD5AuthProtocol&lt;/code&gt; を使用する場合は16、usmHMACSHAAuthProtocolを使用する場合は20にする &lt;code&gt;usmHMACSHAAuthProtocol&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="57c1622d7ad994ceacd3299cb2cbddb1b0bbb68d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AuthKey&lt;/code&gt; is a list (of integer). This is the User's secret localized authentication key. It is not visible in the MIB. The length of this key needs to be 16 if &lt;code&gt;usmHMACMD5AuthProtocol&lt;/code&gt; is used, and 20 if &lt;code&gt;usmHMACSHAAuthProtocol&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;AuthKey&lt;/code&gt; は（整数の）リストです。これは、ユーザーの秘密のローカライズされた認証キーです。MIBには表示されません。このキーの長さは、 &lt;code&gt;usmHMACMD5AuthProtocol&lt;/code&gt; を使用する場合は16、usmHMACSHAAuthProtocolを使用する場合は20にする &lt;code&gt;usmHMACSHAAuthProtocol&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="1b10a88c3205f2240688945e6b86371d396c206b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AuthKeyC&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;AuthKeyC&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="b653b0a45eb948a3ef0f15ba59caa6519d71c6c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AuthP&lt;/code&gt; is a &lt;code&gt;usmNoAuthProtocol&lt;/code&gt;, &lt;code&gt;usmHMACMD5AuthProtocol&lt;/code&gt; or &lt;code&gt;usmHMACSHAAuthProtocol&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AuthP&lt;/code&gt; は、 &lt;code&gt;usmNoAuthProtocol&lt;/code&gt; 、 &lt;code&gt;usmHMACMD5AuthProtocol&lt;/code&gt; 、または &lt;code&gt;usmHMACSHAAuthProtocol&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7280c4a4d0a8fcd3a9cd8dffde5e47b7095111ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AuthP&lt;/code&gt; is a &lt;code&gt;usmNoAuthProtocol&lt;/code&gt;, &lt;code&gt;usmHMACMD5AuthProtocol&lt;/code&gt;, or &lt;code&gt;usmHMACSHAAuthProtocol&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AuthP&lt;/code&gt; は、 &lt;code&gt;usmNoAuthProtocol&lt;/code&gt; 、 &lt;code&gt;usmHMACMD5AuthProtocol&lt;/code&gt; 、または &lt;code&gt;usmHMACSHAAuthProtocol&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f59c8c53a14be1bb1f5a3a3e9f59251f7b9b3089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AuthType&lt;/code&gt; specifies which authentication scheme to be used. Only Basic Authenticating using UUEncoding of the password and user ID is implemented.</source>
          <target state="translated">&lt;code&gt;AuthType&lt;/code&gt; は、使用する認証方式を指定します。パスワードとユーザーIDのUUEncodingを使用した基本認証のみが実装されています。</target>
        </trans-unit>
        <trans-unit id="e8e1346b7c3224addac7fc39ea796bebf1107847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AuthUserFile&lt;/code&gt; indicates which file that contains the list of users. The filename must contain the absolute path to the file. The username and password are not encrypted so do not place the file with users in a directory that is accessible through the web server. The format of the file is one user per row. Every row contains &lt;code&gt;UserName&lt;/code&gt; and &lt;code&gt;Password&lt;/code&gt; separated by a colon, for example:</source>
          <target state="translated">&lt;code&gt;AuthUserFile&lt;/code&gt; は、ユーザーのリストを含むファイルを示します。ファイル名には、ファイルへの絶対パスを含める必要があります。ユーザー名とパスワードは暗号化されていないため、ユーザーと一緒にファイルをWebサーバー経由でアクセス可能なディレクトリに配置しないでください。ファイルの形式は、行ごとに1人のユーザーです。すべての行には、コロンで区切られた &lt;code&gt;UserName&lt;/code&gt; と &lt;code&gt;Password&lt;/code&gt; が含まれています。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="fd14a81ab8de5b14e694033bdfe0baf803068704" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AutoSkipped = integer()&lt;/code&gt;, current number of auto-skipped test cases.</source>
          <target state="translated">&lt;code&gt;AutoSkipped = integer()&lt;/code&gt; 、自動スキップされたテストケースの現在の数。</target>
        </trans-unit>
        <trans-unit id="93099738b5f578b174e8f289cac53a4b1bc52e25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B&lt;/code&gt; = 256</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; = 256</target>
        </trans-unit>
        <trans-unit id="3004ad026a9658db0fdf4d25c9c4473a312496c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B&lt;/code&gt; checks that the digest received from &lt;code&gt;A&lt;/code&gt; is correct and generates a digest from the challenge received from &lt;code&gt;A&lt;/code&gt;. The digest is then sent to &lt;code&gt;A&lt;/code&gt;. The message is as follows:</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; のから受信したダイジェストことチェック &lt;code&gt;A&lt;/code&gt; は正しいとから受け取ったチャレンジからダイジェストを生成 &lt;code&gt;A&lt;/code&gt; 。その後、ダイジェストは &lt;code&gt;A&lt;/code&gt; に送信されます。メッセージは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="0d11f0d06ffd6abc0c9cd4fbd2c16a1d8563c886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B&lt;/code&gt; is a subset of &lt;code&gt;XU&lt;/code&gt; (calls to built-in functions are always external by definition, and unused built-in functions are ignored);</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; は &lt;code&gt;XU&lt;/code&gt; のサブセットです（組み込み関数の呼び出しは、定義により常に外部であり、未使用の組み込み関数は無視されます）。</target>
        </trans-unit>
        <trans-unit id="2b35a32e141d1ed3e21bbd860c385659400ee56e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B&lt;/code&gt; is a subset of &lt;code&gt;XU&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; は &lt;code&gt;XU&lt;/code&gt; のサブセットです。</target>
        </trans-unit>
        <trans-unit id="0819bbe83644a69bc189335e1796d3b7b25703dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B&lt;/code&gt; is an integer &amp;gt;= &lt;code&gt;0&lt;/code&gt;. The backlog value defines the maximum length that the queue of pending connections can grow to. Defaults to &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; は &lt;code&gt;0&lt;/code&gt; 以上の整数です。バックログ値は、保留中の接続のキューが成長できる最大長を定義します。デフォルトは &lt;code&gt;5&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d4d58124bf84e8256abda316118f81ba2f8ae0af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B&lt;/code&gt; sends a status message to &lt;code&gt;A&lt;/code&gt;, which indicates if the connection is allowed.</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; は、接続が許可されているかどうかを示すステータスメッセージを &lt;code&gt;A&lt;/code&gt; に送信します。</target>
        </trans-unit>
        <trans-unit id="6e6a228efebfc4d9fee590676228d784c22f97b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;B&lt;/code&gt; sends a status message to &lt;code&gt;A&lt;/code&gt;, which indicates if the connection is allowed. The following status codes are defined:</source>
          <target state="translated">&lt;code&gt;B&lt;/code&gt; は &lt;code&gt;A&lt;/code&gt; にステータスメッセージを送信し、接続が許可されているかどうかを示します。次のステータスコードが定義されています。</target>
        </trans-unit>
        <trans-unit id="7286c9d3e937f2b7412186bcb57a19c5de4263d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BIT STRING&lt;/code&gt;s can also be subtyped with, for example, a &lt;code&gt;SIZE&lt;/code&gt; specification:</source>
          <target state="translated">&lt;code&gt;BIT STRING&lt;/code&gt; は、たとえば &lt;code&gt;SIZE&lt;/code&gt; 指定でサブタイプ化することもできます。</target>
        </trans-unit>
        <trans-unit id="f6344caf14eb6a76b8dd7d9f43a323cbda87cb97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BeamInstr next_pf = BeamCodeAddr(I[1]);&lt;/code&gt; pre-fetches the address of the next instruction. Note that because both X registers operands fits into the instruction word, the next instruction is in the very next word.</source>
          <target state="translated">&lt;code&gt;BeamInstr next_pf = BeamCodeAddr(I[1]);&lt;/code&gt; 次の命令のアドレスをプリフェッチします。両方のXレジスタのオペランドが命令ワードに収まるため、次の命令は次のワードにあることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7040c9d0701c690f629c91d0697cef020472b3e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BeamInstr next_pf = BeamCodeAddr(I[2]);&lt;/code&gt; fetches the pointer to code for the next instruction to be executed. The &lt;code&gt;BeamCodeAddr()&lt;/code&gt; macro extracts the pointer from the lower 32 bits of the instruction word.</source>
          <target state="translated">&lt;code&gt;BeamInstr next_pf = BeamCodeAddr(I[2]);&lt;/code&gt; 次に実行される命令のコードへのポインタをフェッチします。 &lt;code&gt;BeamCodeAddr()&lt;/code&gt; マクロは、命令ワードの下位32ビットからポインタを抽出します。</target>
        </trans-unit>
        <trans-unit id="ff7ce704921453c5bef858d3bef217867e5dc235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BinInfo&lt;/code&gt; is a list containing miscellaneous information about binaries kept by the table. This &lt;code&gt;Item&lt;/code&gt; can be changed or removed without prior notice. In the current implementation &lt;code&gt;BinInfo&lt;/code&gt; is a list of tuples &lt;code&gt;{BinaryId,BinarySize,BinaryRefcCount}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BinInfo&lt;/code&gt; は、テーブルに保持されているバイナリに関するその他の情報を含むリストです。この &lt;code&gt;Item&lt;/code&gt; は、事前の通知なしに変更または削除される場合があります。現在の実装では、 &lt;code&gt;BinInfo&lt;/code&gt; はタプルのリスト &lt;code&gt;{BinaryId,BinarySize,BinaryRefcCount}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cf845cf15586d742d38d974079a8f8161123905b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BinInfo&lt;/code&gt; is a list containing miscellaneous information about binaries on the heap of this process. This &lt;code&gt;InfoTuple&lt;/code&gt; can be changed or removed without prior notice. In the current implementation &lt;code&gt;BinInfo&lt;/code&gt; is a list of tuples. The tuples contain; &lt;code&gt;BinaryId&lt;/code&gt;, &lt;code&gt;BinarySize&lt;/code&gt;, &lt;code&gt;BinaryRefcCount&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BinInfo&lt;/code&gt; は、このプロセスのヒープ上のバイナリに関するさまざまな情報を含むリストです。この &lt;code&gt;InfoTuple&lt;/code&gt; は予告なく変更または削除される場合があります。現在の実装では、 &lt;code&gt;BinInfo&lt;/code&gt; はタプルのリストです。タプルには以下が含まれます。 &lt;code&gt;BinaryId&lt;/code&gt; 、 &lt;code&gt;BinarySize&lt;/code&gt; 、 &lt;code&gt;BinaryRefcCount&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="90b03b704bcc9074330f66ce3a5857a625cf6d10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Binary&lt;/code&gt; contains a module that cannot be loaded because old code for this module already exists.</source>
          <target state="translated">&lt;code&gt;Binary&lt;/code&gt; には、このモジュールの古いコードが既に存在するためにロードできないモジュールが含まれています。</target>
        </trans-unit>
        <trans-unit id="0e588e6558665f949357389e195acde6ecf95b9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BinaryCore&lt;/code&gt; is a binary containing a summary of the &lt;code&gt;Mnesia&lt;/code&gt; internal state at the time when the fatal error was detected. By default the binary is written to a unique filename on the current directory. On RAM nodes, the core is ignored.</source>
          <target state="translated">&lt;code&gt;BinaryCore&lt;/code&gt; は、致命的なエラーが検出されたときの &lt;code&gt;Mnesia&lt;/code&gt; の内部状態の概要を含むバイナリです。デフォルトでは、バイナリは現在のディレクトリの一意のファイル名に書き込まれます。RAMノードでは、コアは無視されます。</target>
        </trans-unit>
        <trans-unit id="a67c586305f49a882bc8938e20ceff1071cdeff2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bindings&lt;/code&gt; and &lt;code&gt;Vars&lt;/code&gt; are ordered-set lists (cf. module &lt;code&gt;ordsets&lt;/code&gt;) of atoms representing variable names.</source>
          <target state="translated">&lt;code&gt;Bindings&lt;/code&gt; と &lt;code&gt;Vars&lt;/code&gt; れ命じたセットリスト（参照モジュール &lt;code&gt;ordsets&lt;/code&gt; 変数名を表す原子の）。</target>
        </trans-unit>
        <trans-unit id="1b9cff6cf3bb3d9bd50c36d732bc28b30ff70b33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bindings&lt;/code&gt; is a list of variable bindings. To retrieve the value of &lt;code&gt;Variable&lt;/code&gt; (given as an atom), use function &lt;code&gt;&lt;a href=&quot;int#get_binding-2&quot;&gt;int:get_binding(Variable,Bindings)&lt;/a&gt;&lt;/code&gt;. The function returns &lt;code&gt;unbound&lt;/code&gt; or &lt;code&gt;{value,Value}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Bindings&lt;/code&gt; は、変数バインディングのリストです。 &lt;code&gt;Variable&lt;/code&gt; （アトムとして与えられる）の値を取得するには、関数 &lt;code&gt;&lt;a href=&quot;int#get_binding-2&quot;&gt;int:get_binding(Variable,Bindings)&lt;/a&gt;&lt;/code&gt; ます。この関数は、 &lt;code&gt;unbound&lt;/code&gt; または &lt;code&gt;{value,Value}&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="f5aab7f3950ef554c87a25a113aadbca28a81c5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BitStringExpr&lt;/code&gt; is an expression that evalutes to a bit string. If &lt;code&gt;BitStringExpr&lt;/code&gt; is a function call, it must be enclosed in parentheses. Each &lt;code&gt;Qualifier&lt;/code&gt; is either a generator, a bit string generator or a filter.</source>
          <target state="translated">&lt;code&gt;BitStringExpr&lt;/code&gt; は、ビット文字列に評価される式です。 &lt;code&gt;BitStringExpr&lt;/code&gt; が関数呼び出しの場合は、括弧で囲む必要があります。各 &lt;code&gt;Qualifier&lt;/code&gt; は、ジェネレーター、ビット文字列ジェネレーター、またはフィルターのいずれかです。</target>
        </trans-unit>
        <trans-unit id="c32b38a5db8bdca899e22c75f364db1bb8f9a9ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BitStringExpr&lt;/code&gt; must be an expression that evaluates to a bitstring.</source>
          <target state="translated">&lt;code&gt;BitStringExpr&lt;/code&gt; は、ビット文字列に評価される式である必要があります。</target>
        </trans-unit>
        <trans-unit id="0514c7257e1eaea7561df36739d7578afd621976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BitStringExpr&lt;/code&gt; must be an expression, which evaluates to a bitstring.</source>
          <target state="translated">&lt;code&gt;BitStringExpr&lt;/code&gt; は、ビット文字列に評価される式である必要があります。</target>
        </trans-unit>
        <trans-unit id="8eab7359acd28e915a89c87c887f7488088c8155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bits2Val1&lt;/code&gt; is assigned symbolic values. The assignment means that the bits corresponding to &lt;code&gt;gnu&lt;/code&gt; and &lt;code&gt;punk&lt;/code&gt;, that is, bits 2 and 14 are set to 1, and the rest are set to 0. The symbolic values are shown as a list of values. If a named value, which is not specified in the type definition, is shown, a runtime error occurs.</source>
          <target state="translated">&lt;code&gt;Bits2Val1&lt;/code&gt; にはシンボリック値が割り当てられています。割り当てとは、 &lt;code&gt;gnu&lt;/code&gt; および &lt;code&gt;punk&lt;/code&gt; に対応するビット、つまりビット2および14が1に設定され、残りが0に設定されることを意味します。記号値は値のリストとして表示されます。タイプ定義で指定されていない名前付きの値が表示された場合、ランタイムエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="812f9f32a42f4277412f72739a9cadf2a6a5dd4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bits2Val2&lt;/code&gt; and &lt;code&gt;Bits2Val3&lt;/code&gt; denote the same value.</source>
          <target state="translated">&lt;code&gt;Bits2Val2&lt;/code&gt; と &lt;code&gt;Bits2Val3&lt;/code&gt; は同じ値を示します。</target>
        </trans-unit>
        <trans-unit id="9ce3da41a2fc988084160e3e41693ff75079327d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BitstringPattern &amp;lt;= BitStringExpr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BitstringPattern &amp;lt;= BitStringExpr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2c5c46192e527ee41ee7ec0bc37d6970594f46d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Body&lt;/code&gt; is the body of the HTTP response that is sent back to the client. An appropriate header is appended to the message. &lt;code&gt;StatusCode&lt;/code&gt; is the status code of the response, see &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; for the appropriate values.</source>
          <target state="translated">&lt;code&gt;Body&lt;/code&gt; は、クライアントに送り返されるHTTP応答の本文です。適切なヘッダーがメッセージに追加されます。 &lt;code&gt;StatusCode&lt;/code&gt; は、応答のステータスコードです。適切な値については、 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="694afe89c8f79e0bfce9810c6b85c3d348607578" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Boolean&lt;/code&gt; corresponds to the port parallelism hint used by this port. For more information, see option &lt;code&gt;&lt;a href=&quot;#open_port_parallelism&quot;&gt;parallelism&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;#open_port-2&quot;&gt;open_port/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; は、このポートで使用されるポート並列処理のヒントに対応しています。詳細については、 &lt;code&gt;&lt;a href=&quot;#open_port-2&quot;&gt;open_port/2&lt;/a&gt;&lt;/code&gt; のオプションの &lt;code&gt;&lt;a href=&quot;#open_port_parallelism&quot;&gt;parallelism&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="c0f0e6986d84ea1793213bb71be9501f67597eea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Boolean&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; if the process is trapping exits, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; は、プロセスが出口をトラップしている場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1bc41657a2bfab1620223715e4f42c9e64e38af3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;BootArgs&lt;/code&gt; are all command-line arguments except the emulator flags, that is, flags and plain arguments; see &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BootArgs&lt;/code&gt; は、エミュレータフラグを除くすべてのコマンドライン引数です。つまり、フラグとプレーン引数です。 &lt;code&gt;erl(1)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="bea73a1a0c27c5d40c70f329e2d4c5b0834f361e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bytes&lt;/code&gt; initiate rekeying when &lt;code&gt;Bytes&lt;/code&gt; number of bytes are transferred, or at latest after one hour.</source>
          <target state="translated">&lt;code&gt;Bytes&lt;/code&gt; 時に再入力開始 &lt;code&gt;Bytes&lt;/code&gt; のバイト数は一時間後に転送、または遅くともされています。</target>
        </trans-unit>
        <trans-unit id="ee5d206d608e76a280a948a37dfa6190279f6d28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bytes&lt;/code&gt; is the total number of bytes allocated for this port by the runtime system. The port itself can have allocated memory that is not included in &lt;code&gt;Bytes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Bytes&lt;/code&gt; は、ランタイムシステムによってこのポートに割り当てられたバイトの総数です。ポート自体は、 &lt;code&gt;Bytes&lt;/code&gt; 含まれていないメモリを割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="8bb19176f94c3c9d44cdd9f7bf4c1c3e1504a019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bytes&lt;/code&gt; is the total number of bytes queued by the port using the ERTS driver queue implementation.</source>
          <target state="translated">&lt;code&gt;Bytes&lt;/code&gt; は、ERTSドライバーのキュー実装を使用してポートによってキューに入れられたバイトの総数です。</target>
        </trans-unit>
        <trans-unit id="fce439fd7e04543bfbcea6e4688e828309e6f694" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bytes&lt;/code&gt; is the total number of bytes read from the port.</source>
          <target state="translated">&lt;code&gt;Bytes&lt;/code&gt; は、ポートから読み取られたバイトの総数です。</target>
        </trans-unit>
        <trans-unit id="6b11b169e80a4457b74586d364be5166f2b329be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Bytes&lt;/code&gt; is the total number of bytes written to the port from Erlang processes using &lt;code&gt;&lt;a href=&quot;#port_command-2&quot;&gt;port_command/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#port_command-3&quot;&gt;port_command/3&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;Port ! {Owner, {command, Data}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Bytes&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#port_command-2&quot;&gt;port_command/2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#port_command-3&quot;&gt;port_command/3&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;Port ! {Owner, {command, Data}&lt;/code&gt; を使用してErlangプロセスからポートに書き込まれた合計バイト数です。 {所有者、{コマンド、データ}。</target>
        </trans-unit>
        <trans-unit id="4b7d1478129b3712fb620e5ca23d1fdb08973847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C-a&lt;/code&gt; means pressing the &lt;strong&gt;Ctrl&lt;/strong&gt; key and the letter &lt;code&gt;a&lt;/code&gt; simultaneously.</source>
          <target state="translated">&lt;code&gt;C-a&lt;/code&gt; は、&lt;strong&gt;Ctrl&lt;/strong&gt;キーと文字 &lt;code&gt;a&lt;/code&gt; を同時に押すことを意味します。</target>
        </trans-unit>
        <trans-unit id="7c9f4723e07523d5da648d087cdcb94cb6395c21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;C&lt;/code&gt; determines the type of control sequence.</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; は制御シーケンスのタイプを決定します。</target>
        </trans-unit>
        <trans-unit id="afa4b2e15ff830bebed42e3208d953dd7cad95f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CBModule = atom()&lt;/code&gt;, &lt;code&gt;CBFunction = atom()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CBModule = atom()&lt;/code&gt; 、 &lt;code&gt;CBFunction = atom()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8054deaa1d48938d60584e54dc9bfd9de5e559d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CC&lt;/code&gt; - C compiler.</source>
          <target state="translated">&lt;code&gt;CC&lt;/code&gt; -Cコンパイラ。</target>
        </trans-unit>
        <trans-unit id="af09e2a54a6bdcf0c1dde503142ee7dc6bdbae86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CFLAGS&lt;/code&gt; - C compiler flags.</source>
          <target state="translated">&lt;code&gt;CFLAGS&lt;/code&gt; -Cコンパイラフラグ。</target>
        </trans-unit>
        <trans-unit id="9a00d06cdbffca373a47f7076fd27fda19fce8d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CFLAG_RUNTIME_LIBRARY_PATH&lt;/code&gt; - This flag should set runtime library search path for the shared libraries. Note that this actually is a linker flag, but it needs to be passed via the compiler.</source>
          <target state="translated">&lt;code&gt;CFLAG_RUNTIME_LIBRARY_PATH&lt;/code&gt; -このフラグは、共有ライブラリのランタイムライブラリ検索パスを設定する必要があります。これは実際にはリンカーフラグですが、コンパイラ経由で渡す必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="15345669eb572c1855bbaa3f876df806e0bb9beb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CPP&lt;/code&gt; - C pre-processor.</source>
          <target state="translated">&lt;code&gt;CPP&lt;/code&gt; -Cプリプロセッサ。</target>
        </trans-unit>
        <trans-unit id="82b05b15ffb6bdba5683889b5e7854c44426caad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CPPFLAGS&lt;/code&gt; - C pre-processor flags.</source>
          <target state="translated">&lt;code&gt;CPPFLAGS&lt;/code&gt; -Cプリプロセッサフ​​ラグ。</target>
        </trans-unit>
        <trans-unit id="43d23b56411071a494335e87273ea18e71e4c8ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CTHState&lt;/code&gt; is the current internal state of the CTH.</source>
          <target state="translated">&lt;code&gt;CTHState&lt;/code&gt; は、CTHの現在の内部状態です。</target>
        </trans-unit>
        <trans-unit id="adf7f5ede87d4efab76811b8e1acc8b71ccc1eae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CXX&lt;/code&gt; - C++ compiler.</source>
          <target state="translated">&lt;code&gt;CXX&lt;/code&gt; -C ++コンパイラ。</target>
        </trans-unit>
        <trans-unit id="c2b602d39c6157d77e425c0d1a1f4f4c39819503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CXXFLAGS&lt;/code&gt; - C++ compiler flags.</source>
          <target state="translated">&lt;code&gt;CXXFLAGS&lt;/code&gt; -C ++コンパイラフラグ。</target>
        </trans-unit>
        <trans-unit id="9ca1b3332c61bb373ab0cac1b520c72e6405b903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cases = integer() | unknown&lt;/code&gt;, total number of test cases.</source>
          <target state="translated">&lt;code&gt;Cases = integer() | unknown&lt;/code&gt; 、テストケースの総数。</target>
        </trans-unit>
        <trans-unit id="56d92e2aa46756f6faf0c9b20711393151f8ac14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CatchLevel&lt;/code&gt; is the number of currently active catches in this process. This &lt;code&gt;InfoTuple&lt;/code&gt; can be changed or removed without prior notice.</source>
          <target state="translated">&lt;code&gt;CatchLevel&lt;/code&gt; は、このプロセスで現在アクティブなキャッチの数です。この &lt;code&gt;InfoTuple&lt;/code&gt; は予告なく変更または削除される場合があります。</target>
        </trans-unit>
        <trans-unit id="1be072e08ad5c1651d0750a21c5d8c9209babcba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Challenge&lt;/code&gt; is &lt;code&gt;A&lt;/code&gt;'s challenge for &lt;code&gt;B&lt;/code&gt; to handle. &lt;code&gt;Digest&lt;/code&gt; is the MD5 digest that &lt;code&gt;A&lt;/code&gt; constructed from the challenge &lt;code&gt;B&lt;/code&gt; sent in the previous step.</source>
          <target state="translated">&lt;code&gt;Challenge&lt;/code&gt; は、 &lt;code&gt;B&lt;/code&gt; が処理する &lt;code&gt;A&lt;/code&gt; のチャレンジです。 &lt;code&gt;Digest&lt;/code&gt; は、 &lt;code&gt;A&lt;/code&gt; が前のステップで送信したチャレンジ &lt;code&gt;B&lt;/code&gt; から作成したMD5ダイジェストです。</target>
        </trans-unit>
        <trans-unit id="98e9cf397eefd5ef6594039175cac804a85aeb28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Challenge&lt;/code&gt; is a 32-bit big-endian integer. The other fields are node &lt;code&gt;B&lt;/code&gt;'s flags, creation and full node name, similar to the &lt;code&gt;send_name&lt;/code&gt; message.</source>
          <target state="translated">&lt;code&gt;Challenge&lt;/code&gt; は32ビットのビッグエンディアン整数です。他のフィールドは、 &lt;code&gt;send_name&lt;/code&gt; メッセージと同様に、ノード &lt;code&gt;B&lt;/code&gt; のフラグ、作成、および完全なノード名です。</target>
        </trans-unit>
        <trans-unit id="03d671e112ef9016cf4ae72f285547bd8a062a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Changed&lt;/code&gt; and &lt;code&gt;New&lt;/code&gt; are lists of &lt;code&gt;{Par,Val}&lt;/code&gt; for all changed and added configuration parameters, respectively.</source>
          <target state="translated">&lt;code&gt;Changed&lt;/code&gt; および &lt;code&gt;New&lt;/code&gt; は、それぞれ変更および追加されたすべての構成パラメーターの &lt;code&gt;{Par,Val}&lt;/code&gt; リストです。</target>
        </trans-unit>
        <trans-unit id="f9b2c2b2ee35e4be1d8be1088b4f21d0f7f615b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Changed&lt;/code&gt; is a list of parameter-value tuples including all configuration parameters with changed values.</source>
          <target state="translated">&lt;code&gt;Changed&lt;/code&gt; は、値が変更されたすべての構成パラメーターを含むパラメーター値タプルのリストです。</target>
        </trans-unit>
        <trans-unit id="7647ccd0276dc3ebdbffbce725102b37712f9aaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Characters&lt;/code&gt; are the data to be put on the I/O device. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;latin1&lt;/code&gt;, this is an &lt;code&gt;iolist()&lt;/code&gt;. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;unicode&lt;/code&gt;, this is an Erlang standard mixed Unicode list (one integer in a list per character, characters in binaries represented as UTF-8).</source>
          <target state="translated">&lt;code&gt;Characters&lt;/code&gt; は、I / Oデバイスに配置されるデータです。 &lt;code&gt;Encoding&lt;/code&gt; が &lt;code&gt;latin1&lt;/code&gt; の場合、これは &lt;code&gt;iolist()&lt;/code&gt; です。 &lt;code&gt;Encoding&lt;/code&gt; が &lt;code&gt;unicode&lt;/code&gt; の場合、これはErlang標準の混合Unicodeリストです（リスト内の文字ごとに1つの整数、バイナリの文字はUTF-8として表されます）。</target>
        </trans-unit>
        <trans-unit id="f43d36bbb43c1ae59bbdb9aae177e3ebb65e1ca3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CheckResult&lt;/code&gt; informs about the result of the request as follows:</source>
          <target state="translated">&lt;code&gt;CheckResult&lt;/code&gt; は、リクエストの結果を次のように通知します。</target>
        </trans-unit>
        <trans-unit id="8835d553742413dd94a2db1eef62b3864c33be65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Child&lt;/code&gt; - The pid of the corresponding child process, the atom &lt;code&gt;restarting&lt;/code&gt; if the process is about to be restarted, or &lt;code&gt;undefined&lt;/code&gt; if there is no such process.</source>
          <target state="translated">&lt;code&gt;Child&lt;/code&gt; -対応する子プロセスのpid 、プロセスが &lt;code&gt;restarting&lt;/code&gt; れようとしている場合に再起動するアトム、またはそのようなプロセスがない場合は &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ecdb1b7548428e5a8def4eb62cb8feb6d255ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ChildSpec&lt;/code&gt; must be a valid child specification (unless the supervisor is a &lt;code&gt;simple_one_for_one&lt;/code&gt; supervisor; see below). The child process is started by using the start function as defined in the child specification.</source>
          <target state="translated">&lt;code&gt;ChildSpec&lt;/code&gt; は有効な子仕様でなければなりません（スーパーバイザが &lt;code&gt;simple_one_for_one&lt;/code&gt; スーパーバイザでない限り。以下を参照）。子プロセスは、子仕様で定義されているstart関数を使用して開始されます。</target>
        </trans-unit>
        <trans-unit id="ef131c6397b01f4c4b3826fa4ab6c4428e8ece37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Class&lt;/code&gt; is &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;exit&lt;/code&gt;, or &lt;code&gt;throw&lt;/code&gt;. So, if it were not for the stacktrace, &lt;code&gt;erlang:raise(Class, Reason, Stacktrace)&lt;/code&gt; is equivalent to &lt;code&gt;erlang:Class(Reason)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Class&lt;/code&gt; は、 &lt;code&gt;error&lt;/code&gt; 、 &lt;code&gt;exit&lt;/code&gt; 、または &lt;code&gt;throw&lt;/code&gt; です。したがって、それがスタックトレースでない場合、 &lt;code&gt;erlang:raise(Class, Reason, Stacktrace)&lt;/code&gt; は &lt;code&gt;erlang:Class(Reason)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="3f27e7ebd5d1aa658a4a7e1584d62c8259c4c92a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Clear all events in the Collector&lt;/code&gt; - Deletes all &lt;code&gt;Events&lt;/code&gt; stored in the &lt;code&gt;Collector&lt;/code&gt; and notifies all connected &lt;code&gt;Viewers&lt;/code&gt; about this.</source>
          <target state="translated">&lt;code&gt;Clear all events in the Collector&lt;/code&gt; -すべて削除 &lt;code&gt;Events&lt;/code&gt; に保存された &lt;code&gt;Collector&lt;/code&gt; と接続されているすべての通知 &lt;code&gt;Viewers&lt;/code&gt; このことについては。</target>
        </trans-unit>
        <trans-unit id="cab109aecb8f210712a42362a10d474247682ab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Client&lt;/code&gt; must be the &lt;code&gt;From&lt;/code&gt; argument provided to the callback function &lt;code&gt;handle_call/3&lt;/code&gt;. &lt;code&gt;Reply&lt;/code&gt; is an arbitrary term, which is given back to the client as the return value of &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/[2,3].&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Client&lt;/code&gt; は、コールバック関数 &lt;code&gt;handle_call/3&lt;/code&gt; に提供される &lt;code&gt;From&lt;/code&gt; 引数でなければなりません。 &lt;code&gt;Reply&lt;/code&gt; は任意の用語であり、 &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/[2,3].&lt;/a&gt;&lt;/code&gt; 戻り値としてクライアントに返されます。</target>
        </trans-unit>
        <trans-unit id="9c15cd05d9384e66c1d26c39d377653b2cb0ead0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Client&lt;/code&gt; must be the &lt;code&gt;From&lt;/code&gt; argument provided to the callback function. &lt;code&gt;Reply&lt;/code&gt; is any term given back to the client as the return value of &lt;code&gt;call/2,3&lt;/code&gt; or &lt;code&gt;multi_call/2,3,4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Client&lt;/code&gt; は、コールバック関数に提供される &lt;code&gt;From&lt;/code&gt; 引数でなければなりません。 &lt;code&gt;Reply&lt;/code&gt; は、 &lt;code&gt;call/2,3&lt;/code&gt; または &lt;code&gt;multi_call/2,3,4&lt;/code&gt; の戻り値としてクライアントに返される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="a64832544b967ec5e0a9d1e105374ea2d0d271b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Clone&lt;/code&gt; is &lt;code&gt;zeroDotZero&lt;/code&gt; or a list of integers.</source>
          <target state="translated">&lt;code&gt;Clone&lt;/code&gt; は &lt;code&gt;zeroDotZero&lt;/code&gt; または整数のリストです。</target>
        </trans-unit>
        <trans-unit id="43f356b300ad6eb6d05f267d3c3cf909e8d94433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Close all Viewers and the Collector&lt;/code&gt; - Closes the &lt;code&gt;Collector&lt;/code&gt; and all &lt;code&gt;Viewers&lt;/code&gt; connected to it.</source>
          <target state="translated">&lt;code&gt;Close all Viewers and the Collector&lt;/code&gt; 閉じる- &lt;code&gt;Collector&lt;/code&gt; とそれに接続されているすべての &lt;code&gt;Viewers&lt;/code&gt; 閉じます。</target>
        </trans-unit>
        <trans-unit id="5de3cb69c7869e260b324c1c904774727ee131ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Close other Viewers, but this&lt;/code&gt; - Keeps this &lt;code&gt;Viewer&lt;/code&gt; window and its &lt;code&gt;Collector&lt;/code&gt; process, but closes all other &lt;code&gt;Viewers&lt;/code&gt; windowsconnected to the same &lt;code&gt;Collector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Close other Viewers, but this&lt;/code&gt; -このキープ &lt;code&gt;Viewer&lt;/code&gt; ウィンドウとその &lt;code&gt;Collector&lt;/code&gt; プロセスを、他のすべての閉じた &lt;code&gt;Viewers&lt;/code&gt; 同じにwindowsconnected &lt;code&gt;Collector&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="711ec44f41e4bec1e0704866c66a361f3a3c96f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Close this Viewer&lt;/code&gt; - Closes this &lt;code&gt;Viewer&lt;/code&gt; window, but keeps all other &lt;code&gt;Viewers&lt;/code&gt; windows and the &lt;code&gt;Collector&lt;/code&gt; process.</source>
          <target state="translated">&lt;code&gt;Close this Viewer&lt;/code&gt; -この &lt;code&gt;Viewer&lt;/code&gt; ウィンドウを閉じますが、他のすべての &lt;code&gt;Viewers&lt;/code&gt; ウィンドウと &lt;code&gt;Collector&lt;/code&gt; プロセスは保持します。</target>
        </trans-unit>
        <trans-unit id="84e73ab686070f9d79423ed9320c6fc449dc62d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Close&lt;/code&gt; - Close the system window and all its subwindows.</source>
          <target state="translated">&lt;code&gt;Close&lt;/code&gt; -システムウィンドウとそのすべてのサブウィンドウを閉じます。</target>
        </trans-unit>
        <trans-unit id="34a91ef635640753a5955cabfe077ec166782fda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Close&lt;/code&gt; - Close this window.</source>
          <target state="translated">&lt;code&gt;Close&lt;/code&gt; -このウィンドウを閉じます。</target>
        </trans-unit>
        <trans-unit id="7d74c4ff77e048822e7fc3563ffe0faf7161a918" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectFun&lt;/code&gt; is called with one argument: the &lt;code&gt;Cmds&lt;/code&gt;. It should return a list of the values to be counted. The following pre-defined functions exist:</source>
          <target state="translated">&lt;code&gt;CollectFun&lt;/code&gt; は、 &lt;code&gt;Cmds&lt;/code&gt; という1つの引数で呼び出されます。カウントする値のリストを返す必要があります。次の事前定義された関数が存在します。</target>
        </trans-unit>
        <trans-unit id="28ab0fe1dd177a3d36ce4363fbc951585785d9ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cols&lt;/code&gt; is a list of &lt;code&gt;Column&lt;/code&gt;. The agent will sort incoming variables so that all operations on one row (same index) will be supplied at the same time. The reason for this is that a database normally retrieves information row by row.</source>
          <target state="translated">&lt;code&gt;Cols&lt;/code&gt; は &lt;code&gt;Column&lt;/code&gt; のリストです。エージェントは受信変数をソートして、1つの行（同じインデックス）に対するすべての操作が同時に提供されるようにします。これは、通常、データベースが行ごとに情報を取得するためです。</target>
        </trans-unit>
        <trans-unit id="5ccac0c944224b75a43f8dbcc41ca1160562e38a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cols&lt;/code&gt; is a list of &lt;code&gt;{Column, NewValue}&lt;/code&gt;, where &lt;code&gt;Column&lt;/code&gt; is an integer, and &lt;code&gt;NewValue&lt;/code&gt; is guaranteed to be of the correct type, length and within ranges, as specified in the MIB. If the object is an enumerated integer or of type BITS, the integer value is used. The list is sorted by &lt;code&gt;Column&lt;/code&gt; (increasing) and each &lt;code&gt;Column&lt;/code&gt; is guaranteed to be a valid column number.</source>
          <target state="translated">&lt;code&gt;Cols&lt;/code&gt; は &lt;code&gt;{Column, NewValue}&lt;/code&gt; リストです。ここで、 &lt;code&gt;Column&lt;/code&gt; は整数であり、MIBで指定されている &lt;code&gt;NewValue&lt;/code&gt; 、NewValueは正しいタイプ、長さ、範囲内であることが保証されています。オブジェクトが列挙整数またはBITSタイプの場合、整数値が使用されます。リストは &lt;code&gt;Column&lt;/code&gt; （昇順）でソートされ、各 &lt;code&gt;Column&lt;/code&gt; は有効な列番号であることが保証されています。</target>
        </trans-unit>
        <trans-unit id="a0a15b07bfc1ffe5cad05a1ae6c4e1dacbf5ac9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cols&lt;/code&gt; is a list of integers which represent the column numbers. The &lt;code&gt;Cols&lt;/code&gt; are sorted by increasing value and are guaranteed to be valid column numbers.</source>
          <target state="translated">&lt;code&gt;Cols&lt;/code&gt; は、列番号を表す整数のリストです。 &lt;code&gt;Cols&lt;/code&gt; はは増加する値によってソートされ、有効な列番号であることが保証されています。</target>
        </trans-unit>
        <trans-unit id="adccc1e4b1c97647d4925ca3c4ee2b71b8712774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cols&lt;/code&gt; is a list of integers, all greater than or equal to zero. This indicates that the instrumentation should find the next accessible instance. This function returns the tuple &lt;code&gt;{NextOid, NextValue}&lt;/code&gt;, or &lt;code&gt;endOfTable&lt;/code&gt;. &lt;code&gt;NextOid&lt;/code&gt; should be the lexicographically next accessible instance of a managed object in the table. It should be a list of integers, where the first integer is the column, and the rest of the list is the indices for the next row. If &lt;code&gt;endOfTable&lt;/code&gt; is returned, the agent continues to search for the next instance among the other variables and tables.</source>
          <target state="translated">&lt;code&gt;Cols&lt;/code&gt; は、すべてゼロ以上の整数のリストです。これは、インストルメンテーションが次にアクセス可能なインスタンスを見つける必要があることを示しています。この関数は、タプル &lt;code&gt;{NextOid, NextValue}&lt;/code&gt; または &lt;code&gt;endOfTable&lt;/code&gt; を返します。 &lt;code&gt;NextOid&lt;/code&gt; は、テーブル内の管理オブジェクトの辞書順で次にアクセス可能なインスタンスである必要があります。これは整数のリストである必要があります。最初の整数は列で、リストの残りの部分は次の行のインデックスです。場合 &lt;code&gt;endOfTable&lt;/code&gt; が返され、エージェントは他の変数とテーブルの間の次のインスタンスを検索し続けています。</target>
        </trans-unit>
        <trans-unit id="f4861bdb056a50b23344253f316b2eff656738f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cols&lt;/code&gt; is a list of integers, greater than or equal to zero, which represents the column numbers.</source>
          <target state="translated">&lt;code&gt;Cols&lt;/code&gt; は、列番号を表すゼロ以上の整数のリストです。</target>
        </trans-unit>
        <trans-unit id="f70532464cdb5ef0aa69b3163f8460a8f9f4bd9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Cols&lt;/code&gt; is a list of tuples &lt;code&gt;{Column, NewValue}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cols&lt;/code&gt; はタプル &lt;code&gt;{Column, NewValue}&lt;/code&gt; リストです。</target>
        </trans-unit>
        <trans-unit id="1e60d96717432e946eca24edf788069c31202946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Column&lt;/code&gt; is the starting column; defaults to 1.</source>
          <target state="translated">&lt;code&gt;Column&lt;/code&gt; は開始列です。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="d32d55525486629e372795b7d63e44541429b999" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Comm&lt;/code&gt; is the community string (string).</source>
          <target state="translated">&lt;code&gt;Comm&lt;/code&gt; はコミュニティストリング（文字列）です。</target>
        </trans-unit>
        <trans-unit id="11a5d1d16617346cef60681dfb13cb5c122f85c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Command&lt;/code&gt; specified in &lt;code&gt;{spawn_executable, Command}&lt;/code&gt; does not point out an executable file.</source>
          <target state="translated">&lt;code&gt;Command&lt;/code&gt; で指定された &lt;code&gt;{spawn_executable, Command}&lt;/code&gt; 実行可能ファイルを指していません。</target>
        </trans-unit>
        <trans-unit id="b404d749c835c1becb57946324f09df2ee342fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Comment = string()&lt;/code&gt;, why the test case was skipped.</source>
          <target state="translated">&lt;code&gt;Comment = string()&lt;/code&gt; 、テストケースがスキップされた理由。</target>
        </trans-unit>
        <trans-unit id="7ee6bc1658bdc1c3a37a750648d890a39710467b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; Master requires all test nodes to be on the same network and share a common file system. &lt;code&gt;Common Test&lt;/code&gt; Master cannot start test nodes automatically. The nodes must be started in advance for &lt;code&gt;Common Test&lt;/code&gt; Master to be able to start test sessions on them.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; Masterでは、すべてのテストノードが同じネットワーク上にあり、共通のファイルシステムを共有する必要があります。 &lt;code&gt;Common Test&lt;/code&gt; Masterはテストノードを自動的に開始できません。 &lt;code&gt;Common Test&lt;/code&gt; Master がノードでテストセッションを開始できるようにするには、事前にノードを開始しておく必要があります。</target>
        </trans-unit>
        <trans-unit id="0f69c4ce1d74651a6a026efc489d093a12ebda77" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; also integrates use of the OTP &lt;code&gt;cover&lt;/code&gt; tool in application Tools for code coverage analysis of Erlang/OTP programs.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、Erlang / OTPプログラムのコードカバレッジ分析のために、アプリケーションツールのOTP &lt;code&gt;cover&lt;/code&gt; ツールの使用も統合します。</target>
        </trans-unit>
        <trans-unit id="90f52e792226a552a37514868a65e1a354938899" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; also provides decryption functions, &lt;code&gt;&lt;a href=&quot;ct#decrypt_config_file-2&quot;&gt;ct:decrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt;, for recreating the original text files.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、元のテキストファイルを再作成するための復号化関数 &lt;code&gt;&lt;a href=&quot;ct#decrypt_config_file-2&quot;&gt;ct:decrypt_config_file/2,3&lt;/a&gt;&lt;/code&gt; も提供します。</target>
        </trans-unit>
        <trans-unit id="baf54dcb0e0931fd6aea76d74b4621fb3a5024b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; always calls all available hook functions, even pre- and post hooks for configuration functions that are not implemented in the suite. For example, &lt;code&gt;pre_init_per_suite(x_SUITE, ...)&lt;/code&gt; and &lt;code&gt;post_init_per_suite(x_SUITE, ...)&lt;/code&gt; are called for test suite &lt;code&gt;x_SUITE&lt;/code&gt;, even if it does not export &lt;code&gt;init_per_suite/1&lt;/code&gt;. With this feature hooks can be used as configuration fallbacks, and all configuration functions can be replaced with hook functions.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は常に、使用可能なすべてのフック関数を呼び出します。スイートに実装されていない構成関数の事前フックと事後フックも呼び出します。たとえば、 &lt;code&gt;pre_init_per_suite(x_SUITE, ...)&lt;/code&gt; と &lt;code&gt;post_init_per_suite(x_SUITE, ...)&lt;/code&gt; は、 &lt;code&gt;init_per_suite/1&lt;/code&gt; をエクスポートしない場合でも、テストスイート &lt;code&gt;x_SUITE&lt;/code&gt; に対して呼び出されます。この機能により、フックを構成フォールバックとして使用でき、すべての構成関数をフック関数で置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="70e9dc44f0d138266aaa1039eaa9aacf688d1302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; can automatically delete old log. This is specified with the &lt;code&gt;keep_logs&lt;/code&gt; option. The default value for this option is &lt;code&gt;all&lt;/code&gt;, which means that no logs are deleted. If the value is set to an integer, &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;Common Test&lt;/code&gt; deletes all &lt;code&gt;ct_run.&amp;lt;timestamp&amp;gt;&lt;/code&gt; directories, except the &lt;code&gt;N&lt;/code&gt; newest.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は古いログを自動的に削除できます。これは、 &lt;code&gt;keep_logs&lt;/code&gt; オプションで指定されます。このオプションのデフォルト値は &lt;code&gt;all&lt;/code&gt; で、ログは削除されません。値が整数に設定されている場合、 &lt;code&gt;N&lt;/code&gt; は、 &lt;code&gt;Common Test&lt;/code&gt; 全て削除 &lt;code&gt;ct_run.&amp;lt;timestamp&amp;gt;&lt;/code&gt; ディレクトリ以外 &lt;code&gt;N&lt;/code&gt; 最新。</target>
        </trans-unit>
        <trans-unit id="0455ef0d4074506efec13e163df014743587524e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; does not add a newline character &lt;code&gt;(\n)&lt;/code&gt; to the end of an output string that it receives from a call to, for example, &lt;code&gt;io:format/2&lt;/code&gt;, and which it prints to the test case log.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、たとえば &lt;code&gt;io:format/2&lt;/code&gt; への呼び出しから受け取った出力文字列の最後に改行文字 &lt;code&gt;(\n)&lt;/code&gt; を追加せず、テストケースログに出力します。</target>
        </trans-unit>
        <trans-unit id="db26db9d2a1955be3a2b7bc537141254142dd941" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; enables the Debugger auto-attach feature, which means that for every new interpreted test case function that starts to execute, a new trace window automatically pops up (as each test case executes on a dedicated Erlang process). Whenever a new test case starts, &lt;code&gt;Common Test&lt;/code&gt; attempts to close the inactive trace window of the previous test case. However, if you prefer &lt;code&gt;Common Test&lt;/code&gt; to leave inactive trace windows, use option &lt;code&gt;keep_inactive&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; はデバッガーの自動アタッチ機能を有効にします。つまり、実行を開始する新しい解釈済みテストケース関数ごとに、新しいトレースウィンドウが自動的にポップアップします（各テストケースが専用のErlangプロセスで実行されるため）。新しいテストケースが開始するたびに、 &lt;code&gt;Common Test&lt;/code&gt; は前のテストケースの非アクティブなトレースウィンドウを閉じようとします。ただし、 &lt;code&gt;Common Test&lt;/code&gt; で非アクティブなトレースウィンドウを残したい場合は、オプション &lt;code&gt;keep_inactive&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="e885a1c24067f923a8a89f3dc59448b495078af1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; executes all test cases in the group in parallel.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、グループ内のすべてのテストケースを並行して実行します。</target>
        </trans-unit>
        <trans-unit id="f71c77756baa759c2418aef0634cde295b24a12a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; executes test suite programs automatically, without operator interaction. Test progress and results are printed to logs in HTML format, easily browsed with a standard web browser. &lt;code&gt;Common Test&lt;/code&gt; also sends notifications about progress and results through an OTP event manager to event handlers plugged in to the system. This way, users can integrate their own programs for, for example, logging, database storing, or supervision with &lt;code&gt;Common Test&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、オペレーターの介入なしに、テストスイートプログラムを自動的に実行します。テストの進捗状況と結果は、HTML形式でログに出力され、標準のWebブラウザーで簡単に参照できます。 &lt;code&gt;Common Test&lt;/code&gt; は、OTPイベントマネージャーを介して、システムに接続されているイベントハンドラーに進行状況と結果に関する通知も送信します。このようにして、ユーザーは、ロギング、データベースの保存、監視などの独自のプログラムを &lt;code&gt;Common Test&lt;/code&gt; と統合できます。</target>
        </trans-unit>
        <trans-unit id="987c5baf22d42dc97d25ab91a004fd91b2e1c4d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; framework code coverage support module.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; フレームワークのコードカバレッジサポートモジュール。</target>
        </trans-unit>
        <trans-unit id="0aa33ebab6e4fde0329c9780e5df77554dc87976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; framework functions for starting and stopping nodes for Large-Scale Testing.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; 大規模テストのノードを開始および停止するための共通のテストフレームワーク関数。</target>
        </trans-unit>
        <trans-unit id="1804f031199e945d268993152acaf4c05f4c9b68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; has a framework for event handling based on the OTP event manager concept and &lt;code&gt;gen_event&lt;/code&gt; behavior. When the &lt;code&gt;Common Test&lt;/code&gt; server starts, it spawns an event manager. During test execution the manager gets a notification from the server when something of potential interest happens. Any event handler plugged into the event manager can match on events of interest, take action, or pass the information on. The event handlers are Erlang modules implemented by the &lt;code&gt;Common Test&lt;/code&gt; user according to the &lt;code&gt;gen_event&lt;/code&gt; behavior (for details, see module &lt;code&gt;gen_event&lt;/code&gt; and section &lt;code&gt;gen_event Behaviour&lt;/code&gt; in OTP Design Principles in the System Documentation).</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; には、OTPイベントマネージャの概念と &lt;code&gt;gen_event&lt;/code&gt; の動作に基づくイベント処理のフレームワークがあります。とき &lt;code&gt;Common Test&lt;/code&gt; サーバーが起動すると、イベントマネージャを起動します。テストの実行中に、潜在的な関心事が発生すると、マネージャはサーバーから通知を受け取ります。イベントマネージャにプラグインされたすべてのイベントハンドラは、関心のあるイベントに一致したり、アクションを実行したり、情報を渡したりできます。イベントハンドラーは、 &lt;code&gt;gen_event&lt;/code&gt; の動作に従って &lt;code&gt;Common Test&lt;/code&gt; ユーザーによって実装されたErlangモジュールです（詳細については、システムドキュメントのOTP設計原則のモジュール &lt;code&gt;gen_event&lt;/code&gt; およびセクション &lt;code&gt;gen_event Behaviour&lt;/code&gt; を参照してください）。</target>
        </trans-unit>
        <trans-unit id="21dc25e393520f16a3d7008d0df49a60463cc92a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; includes an &lt;strong&gt;optional&lt;/strong&gt; feature to allow user HTML style sheets for customizing printouts. The functions in &lt;code&gt;ct&lt;/code&gt; that print to a test case HTML log file (&lt;code&gt;log/3,4,5&lt;/code&gt; and &lt;code&gt;pal/3,4,5&lt;/code&gt;) accept &lt;code&gt;Category&lt;/code&gt; as first argument. With this argument a category can be specified that can be mapped to a named &lt;code&gt;div&lt;/code&gt; selector in a CSS rule-set. This is useful, especially for coloring text differently depending on the type of (or reason for) the printout. Say you want one particular background color for test system configuration information, a different one for test system state information, and finally one for errors detected by the test case functions. The corresponding style sheet can look as follows:</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; には、ユーザーがHTMLスタイルシートを使用して印刷をカスタマイズできるようにする&lt;strong&gt;オプション&lt;/strong&gt;機能が含まれてい&lt;strong&gt;ます&lt;/strong&gt;。テストケースのHTMLログファイルに出力する &lt;code&gt;ct&lt;/code&gt; の関数（ &lt;code&gt;log/3,4,5&lt;/code&gt; および &lt;code&gt;pal/3,4,5&lt;/code&gt; ）は、 &lt;code&gt;Category&lt;/code&gt; を最初の引数として受け入れます。この引数を使用すると、名前付き &lt;code&gt;div&lt;/code&gt; にマップできるカテゴリを指定できますCSSルールセットのセレクター。これは、特に、印刷の種類（または理由）に応じてテキストの色を変える場合に役立ちます。テストシステム構成情報用の特定の背景色、テストシステム状態情報用の別の背景色、そしてテストケース関数によって検出されたエラー用の背景色が必要だとします。対応するスタイルシートは次のようになります。</target>
        </trans-unit>
        <trans-unit id="2e5db5b375a5b3a8e399cd7c9aacfec4545acdd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; includes default callback modules for handling configuration data specified in standard configuration files (described earlier) and in XML files as follows:</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; には、標準構成ファイル（前述）およびXMLファイルで指定された構成データを次のように処理するためのデフォルトのコールバックモジュールが含まれています。</target>
        </trans-unit>
        <trans-unit id="a03e3dc391ca610eaa0aa9f4e80a72f322dc5d2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; is a portable application for automated testing. It is suitable for:</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、自動テスト用のポータブルアプリケーションです。それはに適しています：</target>
        </trans-unit>
        <trans-unit id="13feb6f81466ef9097d1f4bfbb3cdbec9e6e293d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; is also a very useful tool for white-box testing Erlang code (for example, module testing), as the test programs can call exported Erlang functions directly. There is very little overhead required for implementing basic test suites and executing simple tests. For black-box testing Erlang software, Erlang RPC and standard O&amp;amp;M interfaces can be used for example.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; テストプログラムはエクスポートされたErlang関数を直接呼び出すことができるため、Common TestはErlangコードのホワイトボックステスト（モジュールテストなど）に非常に役立つツールでもあります。基本的なテストスイートの実装と単純なテストの実行に必要なオーバーヘッドはほとんどありません。Erlangソフトウェアのブラックボックステストでは、Erlang RPCおよび標準のO＆Mインターフェイスを使用できます。</target>
        </trans-unit>
        <trans-unit id="07b896c97c72cb0f5a0b4f34b1d567b01776d8c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; is delivered with some general-purpose CTHs that can be enabled by the user to provide generic testing functionality. Some of these CTHs are enabled by default when &lt;code&gt;common_test&lt;/code&gt; is started to run. They can be disabled by setting &lt;code&gt;enable_builtin_hooks&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; on the command line or in the test specification. The following two CTHs are delivered with &lt;code&gt;Common Test&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; には、汎用テスト機能を提供するためにユーザーが有効にできるいくつかの汎用CTHが付属しています。 &lt;code&gt;common_test&lt;/code&gt; の実行が開始されると、これらのCTHの一部はデフォルトで有効になります。コマンドラインまたはテスト仕様で &lt;code&gt;enable_builtin_hooks&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定することで、これらを無効にできます。 &lt;code&gt;Common Test&lt;/code&gt; には、次の2つのCTHが付属しています。</target>
        </trans-unit>
        <trans-unit id="8b938507a5962c5576e8ed8466129091288979a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; might later support an optional feature to only store the last (and possibly the first) set of logs of repeated test runs, but for now the user must be careful not to run out of disk space if tests are repeated during long periods of time.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、オプションの機能を後でサポートして、繰り返されたテスト実行の最後の（場合によっては最初の）ログのセットのみを格納する可能性がありますが、現時点では、テストが長期間にわたって繰り返される場合、ユーザーはディスク領域が不足しないように注意する必要があります時間。</target>
        </trans-unit>
        <trans-unit id="8d332468b4de1457a0c396b3bb7a77605c977936" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; passes all include directories (specified either with flag/option &lt;code&gt;include&lt;/code&gt;, or variable &lt;code&gt;CT_INCLUDE_PATH&lt;/code&gt; , or both, to the compiler.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、すべてのインクルードディレクトリ（フラグ/オプション &lt;code&gt;include&lt;/code&gt; または変数 &lt;code&gt;CT_INCLUDE_PATH&lt;/code&gt; のいずれか、あるいはその両方で指定）をコンパイラに渡します。</target>
        </trans-unit>
        <trans-unit id="bef77a7b82fa0ca5566c1f398477e1e765ade0ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; provides an Erlang API for running tests. The main (and most flexible) function for specifying and executing tests is &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt;. It takes the same start parameters as &lt;code&gt;&lt;a href=&quot;run_test_chapter#ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt;, but the flags are instead specified as options in a list of key-value tuples. For example, a test specified with &lt;code&gt;ct_run&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、テストを実行するためのErlang APIを提供します。テストを指定して実行するための主な（そして最も柔軟な）関数は &lt;code&gt;&lt;a href=&quot;ct#run_test-1&quot;&gt;ct:run_test/1&lt;/a&gt;&lt;/code&gt; です。開始パラメーターは &lt;code&gt;&lt;a href=&quot;run_test_chapter#ct_run&quot;&gt;ct_run&lt;/a&gt;&lt;/code&gt; と同じですが、フラグは代わりにキー値タプルのリストのオプションとして指定されます。たとえば、次のように &lt;code&gt;ct_run&lt;/code&gt; で指定されたテスト：</target>
        </trans-unit>
        <trans-unit id="482782783fd4a7eab54e0923697015b808496246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; provides libraries with useful support functions to fill various testing needs and requirements. There is, for example, support for flexible test declarations through test specifications. There is also support for central configuration and control of multiple independent test sessions (to different target systems) running in parallel.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、さまざまなテストのニーズと要件を満たすために役立つライブラリをライブラリに提供します。たとえば、テスト仕様による柔軟なテスト宣言がサポートされています。また、並行して実行される（異なるターゲットシステムへの）複数の独立したテストセッションを集中的に構成および制御することもできます。</target>
        </trans-unit>
        <trans-unit id="2e6d19abbd89ae903e16a3cea134a10de31a4f05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; provides the following three main functions for printing strings:</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、文字列を印刷するための次の3つの主要な機能を提供します。</target>
        </trans-unit>
        <trans-unit id="44759a10faf062429a727f795134f243bc807b92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; specific layer on Erlang/OTP &lt;code&gt;rpc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; Erlang / OTP &lt;code&gt;rpc&lt;/code&gt; の一般的なテスト固有のレイヤー。</target>
        </trans-unit>
        <trans-unit id="321cdcb057def14c1bf4ca3b4463d75059868378" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; specific layer on top of Telnet client &lt;code&gt;ct_telnet_client.erl&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; Telnetクライアント &lt;code&gt;ct_telnet_client.erl&lt;/code&gt; の上にある共通テスト固有のレイヤー。</target>
        </trans-unit>
        <trans-unit id="205bd1f1245130a426bf292c8f158fc4702b707f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; user interface module for the &lt;code&gt;SNMP&lt;/code&gt; application.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; &lt;code&gt;SNMP&lt;/code&gt; アプリケーション用の共通テストユーザーインターフェイスモジュール。</target>
        </trans-unit>
        <trans-unit id="fad19b900fd608b56f7a6e97efd3eb0e0832a204" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Common Test&lt;/code&gt; uses an HTML Style Sheet (CSS file) to control the look of the HTML log files generated during test runs. If the log files are not displayed correctly in the browser of your choice, or you prefer a more primitive (&quot;pre &lt;code&gt;Common Test&lt;/code&gt; v1.6&quot;) look of the logs, use the start flag/option:</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; は、HTMLスタイルシート（CSSファイル）を使用して、テスト実行中に生成されたHTMLログファイルの外観を制御します。選択したブラウザでログファイルが正しく表示されない場合、またはログをよりプリミティブ（ &quot;pre &lt;code&gt;Common Test&lt;/code&gt; v1.6&quot;）にしたい場合は、開始フラグ/オプションを使用します。</target>
        </trans-unit>
        <trans-unit id="e77ff73dfa0c11bcb9348813694ccdd31a62613e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CommunityIndex&lt;/code&gt; is a non-empty string.</source>
          <target state="translated">&lt;code&gt;CommunityIndex&lt;/code&gt; は空でない文字列です。</target>
        </trans-unit>
        <trans-unit id="c404c0ea118d3d7ddd66c2f92ba210a7713c596c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CommunityIndex&lt;/code&gt; must be a &lt;strong&gt;non-empty&lt;/strong&gt; string.</source>
          <target state="translated">&lt;code&gt;CommunityIndex&lt;/code&gt; は&lt;strong&gt;空でない&lt;/strong&gt;文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="e9a974fe4d080792768a10a6a1e32a1a8e5ce843" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CommunityName&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;CommunityName&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="4ed57948b8e5de879dc3871e7e26d7d61e94bd99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Conf = init_per_group | end_per_group&lt;/code&gt;, group configuration function.</source>
          <target state="translated">&lt;code&gt;Conf = init_per_group | end_per_group&lt;/code&gt; 、グループ構成関数。</target>
        </trans-unit>
        <trans-unit id="2162c8ea91e10788997a100e5902e316f25f7d29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ConfDir&lt;/code&gt; is a string which points to the directory where the configuration files are found.</source>
          <target state="translated">&lt;code&gt;ConfDir&lt;/code&gt; は、構成ファイルが見つかったディレクトリを指す文字列です。</target>
        </trans-unit>
        <trans-unit id="12b596ef6a3131118d7ef4ae52a15a6e95e0755e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Config1&lt;/code&gt; is the existing configuration and &lt;code&gt;Config2&lt;/code&gt; is the new configuration.</source>
          <target state="translated">&lt;code&gt;Config1&lt;/code&gt; は既存の構成で、 &lt;code&gt;Config2&lt;/code&gt; は新しい構成です。</target>
        </trans-unit>
        <trans-unit id="f5ba704c98b3d116927a830a00b0a757625b9b66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Config&lt;/code&gt; is any (zero or more) of the following:</source>
          <target state="translated">&lt;code&gt;Config&lt;/code&gt; は次のいずれか（ゼロ以上）です。</target>
        </trans-unit>
        <trans-unit id="fdff3f5b72d04a6f4aafbcbf979bb679490c2d0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Config&lt;/code&gt; is as passed in &lt;code&gt;transport_config&lt;/code&gt; tuple in the &lt;code&gt;&lt;a href=&quot;diameter#transport_opt&quot;&gt;diameter:transport_opt()&lt;/a&gt;&lt;/code&gt; list passed to &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Config&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;diameter#add_transport-2&quot;&gt;diameter:add_transport/2&lt;/a&gt;&lt;/code&gt; に渡されるdiameter： &lt;code&gt;&lt;a href=&quot;diameter#transport_opt&quot;&gt;diameter:transport_opt()&lt;/a&gt;&lt;/code&gt; リストの &lt;code&gt;transport_config&lt;/code&gt; タプルで渡されるとおりです。</target>
        </trans-unit>
        <trans-unit id="8cd9f3cad986a11f3fec1de020758edf881a72d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Config&lt;/code&gt; is the proper Erlang key-value list, with possible key-value sublists as values, like the earlier configuration file example:</source>
          <target state="translated">&lt;code&gt;Config&lt;/code&gt; は適切なErlang Key-Valueリストであり、前の構成ファイルの例のように、Key-Valueサブリストを値として使用できます。</target>
        </trans-unit>
        <trans-unit id="ebc3225b2eb346e7661c26113c29c0f9bbd9c08e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Config&lt;/code&gt; is to be an atom of the following configuration parameters:</source>
          <target state="translated">&lt;code&gt;Config&lt;/code&gt; は、以下の構成パラメーターのアトムになります。</target>
        </trans-unit>
        <trans-unit id="e985dcb5b25e561979864632b0833357ebf58c6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ConnType = ssh | sftp&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ConnType = ssh | sftp&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="13d607cfde8d7a59de4034300819408694b383a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ConnType&lt;/code&gt; always overrides the type specified in the address tuple in the configuration data (and in &lt;code&gt;ExtraOpts&lt;/code&gt;). So it is possible to, for example, open an SFTP connection directly using data originally specifying an SSH connection. Value &lt;code&gt;host&lt;/code&gt; means that the connection type specified by the host option (either in the configuration data or in &lt;code&gt;ExtraOpts&lt;/code&gt;) is used.</source>
          <target state="translated">&lt;code&gt;ConnType&lt;/code&gt; は、構成データ（および &lt;code&gt;ExtraOpts&lt;/code&gt; ）のアドレスタプルで指定されたタイプを常にオーバーライドします。したがって、たとえば、元々SSH接続を指定していたデータを使用して、直接SFTP接続を開くことが可能です。値 &lt;code&gt;host&lt;/code&gt; は、（構成データまたは &lt;code&gt;ExtraOpts&lt;/code&gt; のいずれかで）hostオプションで指定された接続タイプが使用されることを意味します。</target>
        </trans-unit>
        <trans-unit id="d93948591b08f0f67c09240a4246b82ff3d83766" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ContextName&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;ContextName&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="d8a8a2f920ed035b963dd28ce13db60d74d101df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Continuation&lt;/code&gt; is sent as the state in later calls to the function when more characters are available. When no more characters are available, the function must return &lt;code&gt;{done, eof, Rest}&lt;/code&gt;. The initial state is the empty list. The data when an end of file is reached on the IO device is the atom &lt;code&gt;eof&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Continuation&lt;/code&gt; は、より多くの文字が使用可能になったときに、後で関数を呼び出すときの状態として送信されます。使用できる文字がなくなると、関数は &lt;code&gt;{done, eof, Rest}&lt;/code&gt; 返す必要があります。初期状態は空のリストです。IOデバイスでファイルの終わりに達したときのデータは、アトム &lt;code&gt;eof&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f0a5775f48402ec28e03d748e8982e27c7b3b171" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Crash dumps&lt;/code&gt;, &lt;code&gt;drivers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Crash dumps&lt;/code&gt; 、 &lt;code&gt;drivers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b01dd5cec0ba7e8085414e78242798e3a3a2fb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;D1&lt;/code&gt; is the greatest of the two, and is said to be a super-domain of &lt;code&gt;D2&lt;/code&gt;. &lt;code&gt;D2&lt;/code&gt; is a sub-domain &lt;code&gt;D1&lt;/code&gt;. Both &lt;code&gt;D1&lt;/code&gt; and &lt;code&gt;D2&lt;/code&gt; are sub-domains of &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;D1&lt;/code&gt; は2つの中で最大であり、 &lt;code&gt;D2&lt;/code&gt; のスーパードメインであると言われています。 &lt;code&gt;D2&lt;/code&gt; はサブドメイン &lt;code&gt;D1&lt;/code&gt; です。 &lt;code&gt;D1&lt;/code&gt; と &lt;code&gt;D2&lt;/code&gt; はどちらも &lt;code&gt;[]&lt;/code&gt; のサブドメインです。</target>
        </trans-unit>
        <trans-unit id="c31f0c7a98c0ddb09e1a60682d08bc513105f1fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;D&lt;/code&gt; determines which load value should be associated with which percentage. Choosing &lt;code&gt;D&lt;/code&gt; = 50 means that 128 is 60% load, 256 is 80%, 512 is 90%, and so on.</source>
          <target state="translated">&lt;code&gt;D&lt;/code&gt; は、どの負荷値をどのパーセンテージに関連付けるかを決定します。 &lt;code&gt;D&lt;/code&gt; = 50を選択すると、128は60％の負荷、256は80％、512は90％などとなります。</target>
        </trans-unit>
        <trans-unit id="8a6bb7eab7fff3f050d66f5603c4de0eb71a7a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DED_LD&lt;/code&gt; - Linker for Dynamically loaded Erlang Drivers.</source>
          <target state="translated">&lt;code&gt;DED_LD&lt;/code&gt; -動的にロードされたErlangドライバー用のリンカー。</target>
        </trans-unit>
        <trans-unit id="f5d6fd3a1cd4700e7621c842f86632b8c9af25d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DED_LDFLAGS&lt;/code&gt; - Linker flags to use with &lt;code&gt;DED_LD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DED_LDFLAGS&lt;/code&gt; -で使用するリンカフラグ &lt;code&gt;DED_LD&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4617d4970f1b782d45910cc54df02bc75f478370" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DED_LD_FLAG_RUNTIME_LIBRARY_PATH&lt;/code&gt; - This flag should set runtime library search path for shared libraries when linking with &lt;code&gt;DED_LD&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DED_LD_FLAG_RUNTIME_LIBRARY_PATH&lt;/code&gt; -このフラグは、 &lt;code&gt;DED_LD&lt;/code&gt; とリンクするときに、共有ライブラリのランタイムライブラリ検索パスを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="29a449b43048d631b7f51c988ca402fc0e72025b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DF&lt;/code&gt; is a subset of &lt;code&gt;X + B&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DF&lt;/code&gt; は &lt;code&gt;X + B&lt;/code&gt; サブセットです。</target>
        </trans-unit>
        <trans-unit id="fe210f89612a60d1f59186e8a6d4ba843065b479" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DF_1&lt;/code&gt; is a subset of &lt;code&gt;DF_2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DF_1&lt;/code&gt; はのサブセットです &lt;code&gt;DF_2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="62e18a58f4624f3d8cb03776f83bae7a582287f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DF_2&lt;/code&gt; is a subset of &lt;code&gt;DF_3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DF_2&lt;/code&gt; はのサブセットです &lt;code&gt;DF_3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d7190bd5b3217a67a8b9796cfb11567d4920202e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DF_3&lt;/code&gt; is a subset of &lt;code&gt;DF&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DF_3&lt;/code&gt; は &lt;code&gt;DF&lt;/code&gt; のサブセットです。</target>
        </trans-unit>
        <trans-unit id="790e8d309224da4763d66697e8805a2c518c316b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DSymbol=0|1&lt;/code&gt; - Defines the value for a symbol. The symbol can be used in &lt;code&gt;%if&lt;/code&gt; and &lt;code&gt;%unless&lt;/code&gt; directives.</source>
          <target state="translated">&lt;code&gt;DSymbol=0|1&lt;/code&gt; シンボルの値を定義します。シンボルは、 &lt;code&gt;%if&lt;/code&gt; および &lt;code&gt;%unless&lt;/code&gt; ディレクティブで使用できます。</target>
        </trans-unit>
        <trans-unit id="75d4c89d703a42ae3ba9cf6fe3bf040e75901a9e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; is any Erlang term. This data is converted to binary term format and sent to the port.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; は任意のErlang用語です。このデータはバイナリ用語形式に変換され、ポートに送信されます。</target>
        </trans-unit>
        <trans-unit id="4c1d3dc949f7d7c997df0b1a0f91e3be80e2a847" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; is either &lt;code&gt;{ok, Pdu}&lt;/code&gt; or &lt;code&gt;{error, ReqId, ReasonInfo, Pdu}&lt;/code&gt;. Which one is used depends on the return value from the MPD &lt;code&gt;&lt;a href=&quot;snmpm_mpd#process_msg&quot;&gt;process_msg&lt;/a&gt;&lt;/code&gt; function. If the MsgData is &lt;code&gt;ok&lt;/code&gt;, the first is used, and if it is &lt;code&gt;{error, ReqId, Reason}&lt;/code&gt; the latter is used.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; は &lt;code&gt;{ok, Pdu}&lt;/code&gt; または &lt;code&gt;{error, ReqId, ReasonInfo, Pdu}&lt;/code&gt; いずれかです。どちらが使用されるかは、MPD &lt;code&gt;&lt;a href=&quot;snmpm_mpd#process_msg&quot;&gt;process_msg&lt;/a&gt;&lt;/code&gt; 関数からの戻り値によって異なります。MsgDataが &lt;code&gt;ok&lt;/code&gt; の場合、最初のものが使用され、それが &lt;code&gt;{error, ReqId, Reason}&lt;/code&gt; 、後者が使用されます。</target>
        </trans-unit>
        <trans-unit id="de29bb30646a35552a48e1591b259e1df9bad086" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; is received from the external program.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 外部プログラムからデータを受信します。</target>
        </trans-unit>
        <trans-unit id="4391ebeead261b430733f5cd3baf1f3974b725fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; is supplied at filter registration time, see &lt;code&gt;&lt;a href=&quot;snmpa#register_notification_filter&quot;&gt;register_notification_filter&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 参照、フィルタ登録時に供給されている &lt;code&gt;&lt;a href=&quot;snmpa#register_notification_filter&quot;&gt;register_notification_filter&lt;/a&gt;&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="a62bdbc1b093839e5477820b315f5f19c2bf284b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; is the characters read, in list or binary form (depending on the I/O server mode, see the next section).</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; は、リスト形式またはバイナリ形式で読み取られた文字です（I / Oサーバーモードに応じて、次のセクションを参照してください）。</target>
        </trans-unit>
        <trans-unit id="0bbc524912c1e63eb1397c444e1d6d8e41a6c4d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; is the record/OID written/deleted.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; は、書き込み/削除されたレコード/ OIDです。</target>
        </trans-unit>
        <trans-unit id="0393319156f791122185657650e84cdf75e2965f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Data&lt;/code&gt; will be passed on to the filter when calling the functions of the behaviour.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; 動作の関数を呼び出すと、データがフィルターに渡されます。</target>
        </trans-unit>
        <trans-unit id="af1b950d2ae88b7705a20577c64a5c0bb934b059" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Db&lt;/code&gt; is a reference to the symbolic store database (retrieved by a call to &lt;code&gt;get_symbolic_store_db/0&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Db&lt;/code&gt; は、シンボリックストアデータベースへの参照です（ &lt;code&gt;get_symbolic_store_db/0&lt;/code&gt; の呼び出しで取得）。</target>
        </trans-unit>
        <trans-unit id="5c34a6454054382ed89d2d853359771388abb68f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Deb&lt;/code&gt; is the debug structure.</source>
          <target state="translated">&lt;code&gt;Deb&lt;/code&gt; はデバッグ構造です。</target>
        </trans-unit>
        <trans-unit id="b0fb05ac1b898e351d55b0f274c472fe978e4544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Decode_Instruction&lt;/code&gt; is a tuple with your chosen function name and the components from the top type that leads to the single type you want to decode. Ensure to choose a name of your function that is not the same as any of the generated functions.</source>
          <target state="translated">&lt;code&gt;Decode_Instruction&lt;/code&gt; は、選択した関数名と、デコードする単一のタイプにつながる最上位のタイプのコンポーネントを持つタプルです。生成された関数と同じではない関数の名前を選択してください。</target>
        </trans-unit>
        <trans-unit id="c8c057affdc1fd56c570b3364c0bde170b1540e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DefaultAgentConfig&lt;/code&gt; is a list of default agent config's. These values are used as default values when this user registers agents.</source>
          <target state="translated">&lt;code&gt;DefaultAgentConfig&lt;/code&gt; は、デフォルトのエージェント構成のリストです。これらの値は、このユーザーがエージェントを登録するときにデフォルト値として使用されます。</target>
        </trans-unit>
        <trans-unit id="db37fa605ea19b45094c0a2e818ef7881238d2b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DepMods&lt;/code&gt; defaults to &lt;code&gt;[]&lt;/code&gt; and defines which other modules &lt;code&gt;Mod&lt;/code&gt; is dependent on. In the &lt;code&gt;relup&lt;/code&gt; file, instructions for loading these modules come before the instruction for loading &lt;code&gt;Mod&lt;/code&gt; when upgrading, and conversely when downgrading.</source>
          <target state="translated">&lt;code&gt;DepMods&lt;/code&gt; のデフォルトは &lt;code&gt;[]&lt;/code&gt; で、 &lt;code&gt;Mod&lt;/code&gt; が依存する他のモジュールを定義します。で &lt;code&gt;relup&lt;/code&gt; のファイル、これらのモジュールをロードするための命令がロードする命令の前に来る &lt;code&gt;Mod&lt;/code&gt; のアップグレード、逆にダウングレード。</target>
        </trans-unit>
        <trans-unit id="8926f7f7a58fd6e57bffff57b375bc212bc50e66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DepMods&lt;/code&gt; defaults to &lt;code&gt;[]&lt;/code&gt; and defines which other modules &lt;code&gt;Mod&lt;/code&gt; is dependent on. In the &lt;code&gt;relup&lt;/code&gt; file, instructions related to these modules come before the instruction for loading &lt;code&gt;Mod&lt;/code&gt; when upgrading, and conversely when downgrading.</source>
          <target state="translated">&lt;code&gt;DepMods&lt;/code&gt; のデフォルトは &lt;code&gt;[]&lt;/code&gt; で、 &lt;code&gt;Mod&lt;/code&gt; が依存する他のモジュールを定義します。で &lt;code&gt;relup&lt;/code&gt; のファイル、これらのモジュールに関連する命令がロードするための命令の前に来る &lt;code&gt;Mod&lt;/code&gt; のアップグレード、逆にダウングレード。</target>
        </trans-unit>
        <trans-unit id="e9ff243f2e06c83bd758cafe48ac35a5a3278f71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DepMods&lt;/code&gt; defaults to &lt;code&gt;[]&lt;/code&gt; and defines which other modules &lt;code&gt;Mod&lt;/code&gt; is dependent on. In the &lt;code&gt;relup&lt;/code&gt; file, instructions related to these modules come before the instruction for removing &lt;code&gt;Mod&lt;/code&gt; when upgrading, and conversely when downgrading.</source>
          <target state="translated">&lt;code&gt;DepMods&lt;/code&gt; のデフォルトは &lt;code&gt;[]&lt;/code&gt; で、 &lt;code&gt;Mod&lt;/code&gt; が依存する他のモジュールを定義します。で &lt;code&gt;relup&lt;/code&gt; のファイル、これらのモジュールに関連する命令は除去する命令の前に来る &lt;code&gt;Mod&lt;/code&gt; するとき、アップグレード、および逆にダウングレードする場合。</target>
        </trans-unit>
        <trans-unit id="b4a5dcc62531cadb5955ed6e0fa9fca7206dee80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DepMods&lt;/code&gt; is a list of modules, on which &lt;code&gt;Module&lt;/code&gt; is dependent.</source>
          <target state="translated">&lt;code&gt;DepMods&lt;/code&gt; は、 &lt;code&gt;Module&lt;/code&gt; が依存するモジュールのリストです。</target>
        </trans-unit>
        <trans-unit id="0d936b0be3695643a032b15ecf2f5c605735896a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DeptId&lt;/code&gt; is the identity of the department where the employee works.</source>
          <target state="translated">&lt;code&gt;DeptId&lt;/code&gt; は、従業員が勤務する部門のIDです。</target>
        </trans-unit>
        <trans-unit id="dda40003d1e3c0b81a29f71fbfe7965d826da662" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Depth&lt;/code&gt; is the maximum print depth; defaults to -1, which means no limitation.</source>
          <target state="translated">&lt;code&gt;Depth&lt;/code&gt; は最大印刷深さです。デフォルトは-1で、制限がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="82f2a97e9d581807a1fa359418653af55d8511d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DepthFun&lt;/code&gt; is a function that can be used for limiting the size of terms; calling &lt;code&gt;DepthFun(Term)&lt;/code&gt; substitutes &lt;code&gt;'...'&lt;/code&gt; for parts of &lt;code&gt;Term&lt;/code&gt; below the depth specified by the &lt;code&gt;info/1,2&lt;/code&gt; option &lt;code&gt;depth&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DepthFun&lt;/code&gt; は、用語のサイズを制限するために使用できる関数です。 &lt;code&gt;DepthFun(Term)&lt;/code&gt; を呼び出すと、 &lt;code&gt;info/1,2&lt;/code&gt; オプションの &lt;code&gt;depth&lt;/code&gt; で指定された深度より下の &lt;code&gt;Term&lt;/code&gt; の部分が &lt;code&gt;'...'&lt;/code&gt; 置き換えられます。</target>
        </trans-unit>
        <trans-unit id="11f91be8badda3bf828b23258ae5d1a892c8b512" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dest&lt;/code&gt; can be a remote or local process identifier, a (local) port, a locally registered name, or a tuple &lt;code&gt;{RegName, Node}&lt;/code&gt; for a registered name at another node.</source>
          <target state="translated">&lt;code&gt;Dest&lt;/code&gt; は、リモートまたはローカルのプロセス識別子、（ローカル）ポート、ローカルに登録された名前、または別のノードに登録された名前のタプル &lt;code&gt;{RegName, Node}&lt;/code&gt; にすることができます。</target>
        </trans-unit>
        <trans-unit id="2b83a68950543bb8498c5bdca13ac197b6ea6f26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Destfile&lt;/code&gt; is used to call &lt;code&gt;file:open/2&lt;/code&gt;. Please see the appropriate documentation.</source>
          <target state="translated">&lt;code&gt;Destfile&lt;/code&gt; は &lt;code&gt;file:open/2&lt;/code&gt; を呼び出すために使用されます。適切なドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2385346044103657320c410f2622bf154778ac1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Destination&lt;/code&gt; is a directory, but &lt;code&gt;Source&lt;/code&gt; is not.</source>
          <target state="translated">&lt;code&gt;Destination&lt;/code&gt; はディレクトリーですが、 &lt;code&gt;Source&lt;/code&gt; はそうではありません。</target>
        </trans-unit>
        <trans-unit id="febfe7cb6a2fd7d8b2fcda9c73e4d1edd5451860" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Destination&lt;/code&gt; is not an empty directory. On some platforms, also given when &lt;code&gt;Source&lt;/code&gt; and &lt;code&gt;Destination&lt;/code&gt; are not of the same type.</source>
          <target state="translated">&lt;code&gt;Destination&lt;/code&gt; は空のディレクトリではありません。一部のプラットフォームでは、 &lt;code&gt;Source&lt;/code&gt; と &lt;code&gt;Destination&lt;/code&gt; が同じタイプでない場合にも表示されます。</target>
        </trans-unit>
        <trans-unit id="83860f5834fc0ea553331bc440c4807419f20b40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Detail level&lt;/code&gt; - This slider controls the resolution of the &lt;code&gt;Viewer&lt;/code&gt;. Only &lt;code&gt;Events&lt;/code&gt; with a detail level &lt;code&gt;smaller&lt;/code&gt; than the selected one (default=100=max) are displayed.</source>
          <target state="translated">&lt;code&gt;Detail level&lt;/code&gt; -このスライダーは、 &lt;code&gt;Viewer&lt;/code&gt; 解像度を制御します。唯一の &lt;code&gt;Events&lt;/code&gt; 詳細レベルを有する &lt;code&gt;smaller&lt;/code&gt; 選択された一つ（デフォルト= 100 = MAX）よりが表示されます。</target>
        </trans-unit>
        <trans-unit id="dde9026b93f972019c3ce832fc0c9969422960e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dev&lt;/code&gt; is the I/O device to which the output is to be printed. See the &lt;code&gt;io(3)&lt;/code&gt; manual page in STDLIB.</source>
          <target state="translated">&lt;code&gt;Dev&lt;/code&gt; は、出力が出力されるI / Oデバイスです。STDLIB の &lt;code&gt;io(3)&lt;/code&gt; マニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="659f6646c7a238c4dbeaa55b57574a2e8cfb3717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dict2&lt;/code&gt; is a dictionary of all keys and values in &lt;code&gt;Dict1&lt;/code&gt; for which &lt;code&gt;Pred(Key, Value)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Dict2&lt;/code&gt; は、内のすべてのキーと値の辞書です &lt;code&gt;Dict1&lt;/code&gt; いる &lt;code&gt;Pred(Key, Value)&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="354ec4b8d34658742087bb8ce6f7b82df2990d30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dictionary&lt;/code&gt; is the process dictionary.</source>
          <target state="translated">&lt;code&gt;Dictionary&lt;/code&gt; はプロセス辞書です。</target>
        </trans-unit>
        <trans-unit id="58f4b6121fa8cb13fcd0a4d7ad24e9fbbedddb13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Digest&lt;/code&gt; is the digest calculated by &lt;code&gt;B&lt;/code&gt; for &lt;code&gt;A&lt;/code&gt;'s challenge.</source>
          <target state="translated">&lt;code&gt;Digest&lt;/code&gt; は、 &lt;code&gt;A&lt;/code&gt; のチャレンジに対して &lt;code&gt;B&lt;/code&gt; によって計算されたダイジェストです。</target>
        </trans-unit>
        <trans-unit id="c2ccb7f655ff6b8c71b120ee98061be594e33612" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dir = string()&lt;/code&gt;, finished running make in this directory.</source>
          <target state="translated">&lt;code&gt;Dir = string()&lt;/code&gt; 、このディレクトリでのmakeの実行が終了しました。</target>
        </trans-unit>
        <trans-unit id="0f65706d83188b13015888cb9faf62e18fcd2a62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dir = string()&lt;/code&gt;, running make in this directory.</source>
          <target state="translated">&lt;code&gt;Dir = string()&lt;/code&gt; 、このディレクトリでmakeを実行。</target>
        </trans-unit>
        <trans-unit id="12d379223cff551b803107584b06702c243da3e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dir&lt;/code&gt; can also be a directory in an archive, for example, &lt;code&gt;$OTPROOT/lib/&lt;/code&gt;&lt;code&gt;mnesia-4.4.7.ez/mnesia-4.4.7/ebin&lt;/code&gt;. For information about archive files, see &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Dir&lt;/code&gt; は、アーカイブ内のディレクトリ、たとえば、 &lt;code&gt;$OTPROOT/lib/&lt;/code&gt; &lt;code&gt;mnesia-4.4.7.ez/mnesia-4.4.7/ebin&lt;/code&gt; にすることもできます。アーカイブファイルについては、 &lt;code&gt;code(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="dc7a965fdbeb3c7566394019be4cfcff10da01dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dir&lt;/code&gt; defaults to the current working directory.</source>
          <target state="translated">&lt;code&gt;Dir&lt;/code&gt; のデフォルトは現在の作業ディレクトリです。</target>
        </trans-unit>
        <trans-unit id="7d9d3891437abded49399f63d2343345932b7723" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dir&lt;/code&gt; has an improper type, such as tuple.</source>
          <target state="translated">&lt;code&gt;Dir&lt;/code&gt; にはタプルなどの不適切なタイプがあります。</target>
        </trans-unit>
        <trans-unit id="e47ea4433263ee5b7285ec8d1c86075dd15ce6cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dir&lt;/code&gt; is a &lt;code&gt;binary()&lt;/code&gt; with characters coded in ISO-latin-1 and the VM is operating with unicode filename encoding.</source>
          <target state="translated">&lt;code&gt;Dir&lt;/code&gt; は、ISO-latin-1でコード化された文字を含む &lt;code&gt;binary()&lt;/code&gt; であり、VMは、Unicodeファイル名エンコーディングで動作しています。</target>
        </trans-unit>
        <trans-unit id="2fc665f587c35d89733e973776ef7f45b84500c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dir&lt;/code&gt; is a string. This argument sets the load path of the system to &lt;code&gt;[Dir]&lt;/code&gt;. The load path used to load modules is obtained from the initial load path, which is given in the script file, together with any path flags that were supplied in the command-line arguments. The command-line arguments modify the path as follows:</source>
          <target state="translated">&lt;code&gt;Dir&lt;/code&gt; は文字列です。この引数は、システムのロードパスを &lt;code&gt;[Dir]&lt;/code&gt; に設定します。モジュールのロードに使用されるロードパスは、スクリプトファイルで指定された初期ロードパスと、コマンドライン引数で指定されたパスフラグから取得されます。コマンドライン引数は、次のようにパスを変更します。</target>
        </trans-unit>
        <trans-unit id="8334542e3fbd2a8e9519663ffea9f4f7f5096104" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dir&lt;/code&gt; is the path to the directory where to store the config file.</source>
          <target state="translated">&lt;code&gt;Dir&lt;/code&gt; は、設定ファイルを保存するディレクトリへのパスです。</target>
        </trans-unit>
        <trans-unit id="afe705ed20a7ae651ecbe979137e0ce646c5340d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dir&lt;/code&gt; specifies which directory to use for the log files. &lt;code&gt;MaxBytes&lt;/code&gt; specifies the size of each individual file. &lt;code&gt;MaxFiles&lt;/code&gt; specifies how many files are used. &lt;code&gt;Pred&lt;/code&gt; is a predicate function used to filter the events. If no predicate function is specified, all events are logged.</source>
          <target state="translated">&lt;code&gt;Dir&lt;/code&gt; は、ログファイルに使用するディレクトリを指定します。 &lt;code&gt;MaxBytes&lt;/code&gt; は、個々のファイルのサイズを指定します。 &lt;code&gt;MaxFiles&lt;/code&gt; は、使用するファイルの数を指定します。 &lt;code&gt;Pred&lt;/code&gt; は、イベントのフィルタリングに使用される述語関数です。述語関数が指定されていない場合、すべてのイベントがログに記録されます。</target>
        </trans-unit>
        <trans-unit id="df57330e4f342d774e787ca81f003281f52b40fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Display all actors.&lt;/code&gt; - Reset the settings for hidden and/or highlighted actors.</source>
          <target state="translated">&lt;code&gt;Display all actors.&lt;/code&gt; -非表示またはハイライトされた俳優の設定をリセットします。</target>
        </trans-unit>
        <trans-unit id="62a021ad16a1ff9cc54c0d0e93db2543d4777d96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Display all actors&lt;/code&gt; - Press the 'a' button. Reset the settings for hidden and/or highlighted actors.</source>
          <target state="translated">&lt;code&gt;Display all actors&lt;/code&gt; -「a」ボタンを押します。非表示またはハイライトされたアクターの設定をリセットします。</target>
        </trans-unit>
        <trans-unit id="492c7d3f4044dd337f2d1bff47460bddadadf760" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Display application dependency graph&lt;/code&gt; - Launches an application force graph window. All included and derived applications and their dependencies will be shown in a graph.</source>
          <target state="translated">&lt;code&gt;Display application dependency graph&lt;/code&gt; -アプリケーションの力のグラフウィンドウを起動します。含まれているすべての派生アプリケーションとそれらの依存関係がグラフに表示されます。</target>
        </trans-unit>
        <trans-unit id="4eab8b8821f3f9ab23d0c072dc2b0200f5718b3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Display details of an event&lt;/code&gt; - Left mouse click on the event label or the arrowand a new &lt;code&gt;Contents Viewer&lt;/code&gt; window will pop up, displaying the contents of an &lt;code&gt;Event&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Display details of an event&lt;/code&gt; -イベントラベルまたは矢印を左クリックすると、新しい &lt;code&gt;Contents Viewer&lt;/code&gt; ウィンドウがポップアップし、 &lt;code&gt;Event&lt;/code&gt; コンテンツが表示されます。</target>
        </trans-unit>
        <trans-unit id="0573e8be8fdefab32dfc0d4a3ad822625eb671ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Display module dependency graph&lt;/code&gt; - Launch a module force graph window. All included and derived modules and their dependencies will be shown in a graph.</source>
          <target state="translated">&lt;code&gt;Display module dependency graph&lt;/code&gt; -モジュールの力グラフウィンドウを起動します。インクルードおよび派生したすべてのモジュールとその依存関係がグラフに表示されます。</target>
        </trans-unit>
        <trans-unit id="fa9b595a759830abdae278d92f580e16f788625e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DistController&lt;/code&gt; is either the process or port identifier of the distribution controller for the connection. The distribution controller should be created by the acceptor processes when a new connection is accepted. Its job is to dispatch traffic on the connection.</source>
          <target state="translated">&lt;code&gt;DistController&lt;/code&gt; は、接続用の分散コントローラーのプロセスIDまたはポートIDです。ディストリビューションコントローラは、新しい接続が受け入れられたときにアクセプタープロセスによって作成される必要があります。その仕事は、接続でトラフィックをディスパッチすることです。</target>
        </trans-unit>
        <trans-unit id="4b2ac0218aacf3e70769ae6ebed4145795a6ff3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dn&lt;/code&gt;. The user to modify. Should be &quot;&quot; if the modify request is for the user of the LDAP session.</source>
          <target state="translated">&lt;code&gt;Dn&lt;/code&gt; 。変更するユーザー。変更要求がLDAPセッションのユーザーに対するものである場合は、 &quot;&quot;にする必要があります。</target>
        </trans-unit>
        <trans-unit id="2a2d32c1c96634c1248d7e9e988cbec99f68d166" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Domain&lt;/code&gt; is one of &lt;code&gt;transportDomainUdpIpv4&lt;/code&gt; or &lt;code&gt;transportDomainUdpIpv6&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Domain&lt;/code&gt; は、 &lt;code&gt;transportDomainUdpIpv4&lt;/code&gt; または &lt;code&gt;transportDomainUdpIpv6&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="de2dc4d2f3306c93c59bc26878a8ef187f275047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Domain&lt;/code&gt; is one of the atoms: &lt;code&gt;transportDomainUdpIpv4&lt;/code&gt; | &lt;code&gt;transportDomainUdpIpv6&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Domain&lt;/code&gt; はアトムの1つです： &lt;code&gt;transportDomainUdpIpv4&lt;/code&gt; | &lt;code&gt;transportDomainUdpIpv6&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5ceca73b760dba20348c55f953e495f4920e94d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Domain&lt;/code&gt; is the source transport domain.</source>
          <target state="translated">&lt;code&gt;Domain&lt;/code&gt; はソーストランスポートドメインです。</target>
        </trans-unit>
        <trans-unit id="c27e5578f657af4816ab9a43d1006d6da3b6ac73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Domain&lt;/code&gt; is the transport domain, either &lt;code&gt;transportDomainUdpIpv4&lt;/code&gt; or &lt;code&gt;transportDomainUdpIpv6&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Domain&lt;/code&gt; は、トランスポートドメインであり、 &lt;code&gt;transportDomainUdpIpv4&lt;/code&gt; または &lt;code&gt;transportDomainUdpIpv6&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="edcdfb2d9497b4f2a51a1e8c2dd21889f1190731" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Down&lt;/code&gt; - Scrolls a few &lt;code&gt;Events&lt;/code&gt; forward.</source>
          <target state="translated">&lt;code&gt;Down&lt;/code&gt; -いくつかの &lt;code&gt;Events&lt;/code&gt; 前方にスクロールします。</target>
        </trans-unit>
        <trans-unit id="ff857dfbb90bfebd022c2947ab2ee681003fc2eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Drive&lt;/code&gt; is to be of the form &quot;&lt;code&gt;Letter&lt;/code&gt;&lt;code&gt;:&lt;/code&gt;&quot;, for example, &quot;c:&quot;.</source>
          <target state="translated">&lt;code&gt;Drive&lt;/code&gt; は、「c：」のように、「 &lt;code&gt;Letter&lt;/code&gt; &lt;code&gt;:&lt;/code&gt; 」の形式になります。</target>
        </trans-unit>
        <trans-unit id="de95faf9f3fd4ab9f738beb92e440bf83dfb6ad5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Driver&lt;/code&gt; is the name of the driver as an atom.</source>
          <target state="translated">&lt;code&gt;Driver&lt;/code&gt; は、アトムとしてのドライバーの名前です。</target>
        </trans-unit>
        <trans-unit id="7dae0eec78ae7d4aaa2f9afb42c436de2b8f7db8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Dumpfile&lt;/code&gt; is used to call &lt;code&gt;file:open/2&lt;/code&gt;, and &lt;code&gt;Filename&lt;/code&gt; is used to call &lt;code&gt;dbg:trace_port(file, Filename)&lt;/code&gt;. Please see the appropriate documentation.</source>
          <target state="translated">&lt;code&gt;Dumpfile&lt;/code&gt; は &lt;code&gt;file:open/2&lt;/code&gt; の呼び出しに使用され、 &lt;code&gt;Filename&lt;/code&gt; は &lt;code&gt;dbg:trace_port(file, Filename)&lt;/code&gt; 呼び出しに使用されます。適切なドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="3c23dc78f16ab98e255b3b276f62acb9b940d959" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;E&lt;/code&gt; is equal to &lt;code&gt;LC + XC&lt;/code&gt;. Note that &lt;code&gt;LC&lt;/code&gt; and &lt;code&gt;XC&lt;/code&gt; may have elements in common, namely if some function is locally and externally used from one and the same function.</source>
          <target state="translated">&lt;code&gt;E&lt;/code&gt; は &lt;code&gt;LC + XC&lt;/code&gt; 等しい。 &lt;code&gt;LC&lt;/code&gt; と &lt;code&gt;XC&lt;/code&gt; には共通の要素がある場合があることに注意してください。つまり、一部の機能がローカルで外部から1つの同じ機能から使用される場合です。</target>
        </trans-unit>
        <trans-unit id="f6d09607ffb29d94ae2b6a4674184288b56a692a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_ATOM_PTR(atom)&lt;/code&gt; and &lt;code&gt;ERL_ATOM_PTR_UTF8(atom)&lt;/code&gt; can be used to retrieve the atom name (as a &lt;code&gt;NULL&lt;/code&gt;-terminated string). &lt;code&gt;ERL_ATOM_SIZE(atom)&lt;/code&gt; and &lt;code&gt;ERL_ATOM_SIZE_UTF8(atom)&lt;/code&gt; return the length of the atom name.</source>
          <target state="translated">&lt;code&gt;ERL_ATOM_PTR(atom)&lt;/code&gt; および &lt;code&gt;ERL_ATOM_PTR_UTF8(atom)&lt;/code&gt; を使用して、アトム名を（ &lt;code&gt;NULL&lt;/code&gt; で終了する文字列として）取得できます。 &lt;code&gt;ERL_ATOM_SIZE(atom)&lt;/code&gt; および &lt;code&gt;ERL_ATOM_SIZE_UTF8(atom)&lt;/code&gt; は、アトム名の長さを返します。</target>
        </trans-unit>
        <trans-unit id="290077a33784913931a397b74e3ab629b90d1306" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_BIN_PTR(bin)&lt;/code&gt; retrieves a pointer to the binary data. &lt;code&gt;ERL_BIN_SIZE(bin)&lt;/code&gt; retrieves the size.</source>
          <target state="translated">&lt;code&gt;ERL_BIN_PTR(bin)&lt;/code&gt; は、バイナリデータへのポインタを取得します。 &lt;code&gt;ERL_BIN_SIZE(bin)&lt;/code&gt; はサイズを取得します。</target>
        </trans-unit>
        <trans-unit id="a349e82ce73dd964924193527ea6e628249d3930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_CONS_HEAD(list)&lt;/code&gt; and &lt;code&gt;ERL_CONS_TAIL(list)&lt;/code&gt; can be used to retrieve the head and tail components from the list. &lt;code&gt;erl_hd(list)&lt;/code&gt; and &lt;code&gt;erl_tl(list)&lt;/code&gt; do the same thing, but check that the argument really is a list.</source>
          <target state="translated">&lt;code&gt;ERL_CONS_HEAD(list)&lt;/code&gt; および &lt;code&gt;ERL_CONS_TAIL(list)&lt;/code&gt; を使用して、リストから先頭と末尾のコンポーネントを取得できます。 &lt;code&gt;erl_hd(list)&lt;/code&gt; と &lt;code&gt;erl_tl(list)&lt;/code&gt; は同じことを行いますが、引数が本当にリストであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="cc31ac63663bd903a5eceda0d3f9c2690373e290" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/code&gt;, which is incremented when driver incompatible changes are made to the Erlang runtime system. Normally it suffices to recompile drivers when &lt;code&gt;ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/code&gt; has changed, but it can, under rare circumstances, mean that drivers must be slightly modified. If so, this will of course be documented.</source>
          <target state="translated">&lt;code&gt;ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/code&gt; は、Erlangランタイムシステムに対してドライバーの互換性のない変更が行われたときに増加します。通常は、 &lt;code&gt;ERL_DRV_EXTENDED_MAJOR_VERSION&lt;/code&gt; が変更されたときにドライバーを再コンパイルするだけで十分ですが、まれな状況では、ドライバーを少し変更する必要があることを意味します。もしそうなら、これはもちろん文書化されます。</target>
        </trans-unit>
        <trans-unit id="613c1efe9b5cb265be7b23656100f1ab90fe4070" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_DRV_EXTENDED_MINOR_VERSION&lt;/code&gt;, which is incremented when new features are added. The runtime system uses the minor version of the driver to determine what features to use.</source>
          <target state="translated">&lt;code&gt;ERL_DRV_EXTENDED_MINOR_VERSION&lt;/code&gt; は、新しい機能が追加されると増分されます。ランタイムシステムは、ドライバーのマイナーバージョンを使用して、使用する機能を決定します。</target>
        </trans-unit>
        <trans-unit id="817d60fd388256e70fd99967974264662901fe4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_DRV_STRING&lt;/code&gt; constructs a string, and ends it. (So it is the same as &lt;code&gt;ERL_DRV_NIL&lt;/code&gt; followed by &lt;code&gt;ERL_DRV_STRING_CONS&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;ERL_DRV_STRING&lt;/code&gt; は文字列を作成して終了します。（つまり、 &lt;code&gt;ERL_DRV_NIL&lt;/code&gt; の後にERL_DRV_STRING_CONSが続くのと同じ &lt;code&gt;ERL_DRV_STRING_CONS&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="d855b7686619234fd716645058b7de72d2d78311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_DRV_USE&lt;/code&gt; specifies if we are using the event object or if we want to close it. On an emulator with SMP support, it is not safe to clear all events and then close the event object after &lt;code&gt;driver_select&lt;/code&gt; has returned. Another thread can still be using the event object internally. To safely close an event object, call &lt;code&gt;driver_select&lt;/code&gt; with &lt;code&gt;ERL_DRV_USE&lt;/code&gt; and &lt;code&gt;on==0&lt;/code&gt;, which clears all events and then either calls &lt;code&gt;&lt;a href=&quot;driver_entry#stop_select&quot;&gt;stop_select&lt;/a&gt;&lt;/code&gt; or schedules it to be called when it is safe to close the event object. &lt;code&gt;ERL_DRV_USE&lt;/code&gt; is to be set together with the first event for an event object. It is harmless to set &lt;code&gt;ERL_DRV_USE&lt;/code&gt; even if it already has been done. Clearing all events but keeping &lt;code&gt;ERL_DRV_USE&lt;/code&gt; set indicates that we are using the event object and probably will set events for it again.</source>
          <target state="translated">&lt;code&gt;ERL_DRV_USE&lt;/code&gt; は、イベントオブジェクトを使用しているか、それを閉じたいかを指定します。 SMPをサポートするエミュレーターでは、すべてのイベントをクリアし、 &lt;code&gt;driver_select&lt;/code&gt; が戻った後にイベントオブジェクトを閉じるのは安全ではありません。別のスレッドが内部的にイベントオブジェクトを使用している可能性があります。イベントオブジェクトを安全に閉じるには、 &lt;code&gt;ERL_DRV_USE&lt;/code&gt; および &lt;code&gt;on==0&lt;/code&gt; &lt;code&gt;driver_select&lt;/code&gt; してdriver_selectを呼び出します。これにより、すべてのイベントがクリアされ、 &lt;code&gt;&lt;a href=&quot;driver_entry#stop_select&quot;&gt;stop_select&lt;/a&gt;&lt;/code&gt; が呼び出されるか、イベントオブジェクトを安全に閉じられるときに呼び出されるようにスケジュールされます。 &lt;code&gt;ERL_DRV_USE&lt;/code&gt; は、イベントオブジェクトの最初のイベントと一緒に設定されます。 &lt;code&gt;ERL_DRV_USE&lt;/code&gt; を設定しても無害ですそれがすでに行われている場合でも。すべてのイベントをクリアし、 &lt;code&gt;ERL_DRV_USE&lt;/code&gt; を設定したままにしておくと、イベントオブジェクトを使用しており、おそらくそのイベントを再度設定することになります。</target>
        </trans-unit>
        <trans-unit id="7479174e9dc6f4484a69e9a30c3c9d2c534c15a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_DRV_USE&lt;/code&gt; was added in Erlang/OTP R13. Old drivers still work as before, but it is recommended to update them to use &lt;code&gt;ERL_DRV_USE&lt;/code&gt; and &lt;code&gt;stop_select&lt;/code&gt; to ensure that event objects are closed in a safe way.</source>
          <target state="translated">&lt;code&gt;ERL_DRV_USE&lt;/code&gt; はErlang / OTP R13で追加されました。古いドライバーは以前と &lt;code&gt;stop_select&lt;/code&gt; ように機能しますが、 &lt;code&gt;ERL_DRV_USE&lt;/code&gt; およびstop_selectを使用するようにドライバーを更新して、イベントオブジェクトが安全な方法で確実に閉じられるようにすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="a7243336c4d66a1fbea612ecff5993866fda1b6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_FLAGS&lt;/code&gt; should not include the node name.</source>
          <target state="translated">&lt;code&gt;ERL_FLAGS&lt;/code&gt; にはノード名を含めないでください。</target>
        </trans-unit>
        <trans-unit id="c8c9800b0dbe01d1557e8b98fcf036bb41dceb97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_FLOAT_VALUE(t)&lt;/code&gt; can be used to retrieve the value from an Erlang float.</source>
          <target state="translated">&lt;code&gt;ERL_FLOAT_VALUE(t)&lt;/code&gt; を使用して、Erlang floatから値を取得できます。</target>
        </trans-unit>
        <trans-unit id="85bebbf29042824a3d6486ae41f6d43345d1327d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_INT_UVALUE(t)&lt;/code&gt; can be used to retrieve the value from an Erlang unsigned integer.</source>
          <target state="translated">&lt;code&gt;ERL_INT_UVALUE(t)&lt;/code&gt; を使用して、Erlang符号なし整数から値を取得できます。</target>
        </trans-unit>
        <trans-unit id="ecfe962f536555a95b6d5a8771c50fb0b44854bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_INT_VALUE(t)&lt;/code&gt; can be used to retrieve the value from an Erlang integer.</source>
          <target state="translated">&lt;code&gt;ERL_INT_VALUE(t)&lt;/code&gt; を使用して、Erlang整数から値を取得できます。</target>
        </trans-unit>
        <trans-unit id="7607552c42fe6fafcd4a1e63187755b4d8d08a4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_NIF_SELECT_CANCEL&lt;/code&gt; can be used to cancel previously selected events. It must be used in a bitwise OR combination with &lt;code&gt;ERL_NIF_SELECT_READ&lt;/code&gt; and/or &lt;code&gt;ERL_NIF_SELECT_WRITE&lt;/code&gt; to indicate which type of event to cancel. Arguments &lt;code&gt;pid&lt;/code&gt; and &lt;code&gt;ref&lt;/code&gt; are ignored when &lt;code&gt;ERL_NIF_SELECT_CANCEL&lt;/code&gt; is specified. The return value will tell if the event was actualy cancelled or if a notification may already have been sent.</source>
          <target state="translated">&lt;code&gt;ERL_NIF_SELECT_CANCEL&lt;/code&gt; を使用して、以前に選択したイベントをキャンセルできます。キャンセルするイベントのタイプを示すには、 &lt;code&gt;ERL_NIF_SELECT_READ&lt;/code&gt; および/または &lt;code&gt;ERL_NIF_SELECT_WRITE&lt;/code&gt; とビット単位のORの組み合わせで使用する必要があります。 &lt;code&gt;ERL_NIF_SELECT_CANCEL&lt;/code&gt; が指定されている場合、引数 &lt;code&gt;pid&lt;/code&gt; および &lt;code&gt;ref&lt;/code&gt; は無視されます。戻り値は、イベントが実際にキャンセルされたかどうか、または通知がすでに送信されている可能性があるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="3598fc1a2045b74f879f7a24e5eff13a02a73fa2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_NIF_TERM enif_make_list1(ErlNifEnv* env, ERL_NIF_TERM e1)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_list2(ErlNifEnv* env, ERL_NIF_TERM e1, ERL_NIF_TERM e2)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_list3(ErlNifEnv* env, ERL_NIF_TERM e1, ERL_NIF_TERM e2, ERL_NIF_TERM e3)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_list4(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e4)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_list5(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e5)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_list6(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e6)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_list7(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e7)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_list8(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e8)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_list9(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e9)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ERL_NIF_TERM enif_make_list1(ErlNifEnv* env, ERL_NIF_TERM e1)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_list2(ErlNifEnv* env, ERL_NIF_TERM e1, ERL_NIF_TERM e2)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_list3(ErlNifEnv* env, ERL_NIF_TERM e1, ERL_NIF_TERM e2, ERL_NIF_TERM e3)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_list4(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e4)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_list5(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e5)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_list6(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e6)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_list7(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e7)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_list8(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e8)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_list9(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e9)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52982eaf6477879cf6a12c60f396d945e62e2d50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_NIF_TERM enif_make_tuple1(ErlNifEnv* env, ERL_NIF_TERM e1)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_tuple2(ErlNifEnv* env, ERL_NIF_TERM e1, ERL_NIF_TERM e2)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_tuple3(ErlNifEnv* env, ERL_NIF_TERM e1, ERL_NIF_TERM e2, ERL_NIF_TERM e3)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_tuple4(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e4)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_tuple5(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e5)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_tuple6(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e6)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_tuple7(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e7)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_tuple8(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e8)&lt;/code&gt;&lt;code&gt;ERL_NIF_TERM enif_make_tuple9(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e9)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ERL_NIF_TERM enif_make_tuple1(ErlNifEnv* env, ERL_NIF_TERM e1)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_tuple2(ErlNifEnv* env, ERL_NIF_TERM e1, ERL_NIF_TERM e2)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_tuple3(ErlNifEnv* env, ERL_NIF_TERM e1, ERL_NIF_TERM e2, ERL_NIF_TERM e3)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_tuple4(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e4)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_tuple5(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e5)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_tuple6(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e6)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_tuple7(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e7)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_tuple8(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e8)&lt;/code&gt; &lt;code&gt;ERL_NIF_TERM enif_make_tuple9(ErlNifEnv* env, ERL_NIF_TERM e1, ..., ERL_NIF_TERM e9)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bc42cf3a3588c7b9bce4b6f210b06ba642e9d7bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_NIF_UNIQUE_POSITIVE&lt;/code&gt; and &lt;code&gt;ERL_NIF_UNIQUE_MONOTONIC&lt;/code&gt; can be passed as the second argument to change the properties of the integer returned. They can be combined by OR:ing the two values together.</source>
          <target state="translated">&lt;code&gt;ERL_NIF_UNIQUE_POSITIVE&lt;/code&gt; および &lt;code&gt;ERL_NIF_UNIQUE_MONOTONIC&lt;/code&gt; を2番目の引数として渡して、返される整数のプロパティを変更できます。これらは、2つの値をOR：することで組み合わせることができます。</target>
        </trans-unit>
        <trans-unit id="7a1eca97492a396a7e2da7bc2608005663d5b982" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_PID&lt;/code&gt; (Erlang process identifier)</source>
          <target state="translated">&lt;code&gt;ERL_PID&lt;/code&gt; （Erlangプロセス識別子）</target>
        </trans-unit>
        <trans-unit id="9efe052c8d0a05e178be268daac3a4af07608aca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_PID_NODE(pid)&lt;/code&gt;, &lt;code&gt;ERL_PID_NUMBER(pid)&lt;/code&gt;, &lt;code&gt;ERL_PID_SERIAL(pid)&lt;/code&gt;, and &lt;code&gt;ERL_PID_CREATION(pid)&lt;/code&gt; can be used to retrieve the four values used to create the pid.</source>
          <target state="translated">&lt;code&gt;ERL_PID_NODE(pid)&lt;/code&gt; 、 &lt;code&gt;ERL_PID_NUMBER(pid)&lt;/code&gt; 、 &lt;code&gt;ERL_PID_SERIAL(pid)&lt;/code&gt; 、および &lt;code&gt;ERL_PID_CREATION(pid)&lt;/code&gt; を使用して、pidの作成に使用される4つの値を取得できます。</target>
        </trans-unit>
        <trans-unit id="33fabd9f90cf7d7936dc42038e48cbd12c715d0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_PORT_NODE(port)&lt;/code&gt;, &lt;code&gt;ERL_PORT_NUMBER(port)&lt;/code&gt;, and &lt;code&gt;ERL_PORT_CREATION&lt;/code&gt; can be used to retrieve the three values used to create the port.</source>
          <target state="translated">&lt;code&gt;ERL_PORT_NODE(port)&lt;/code&gt; 、 &lt;code&gt;ERL_PORT_NUMBER(port)&lt;/code&gt; 、および &lt;code&gt;ERL_PORT_CREATION&lt;/code&gt; を使用して、ポートの作成に使用される3つの値を取得できます。</target>
        </trans-unit>
        <trans-unit id="5f860892bc472587540df5d1a5619b9d5035656d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_REF&lt;/code&gt; (Erlang reference)</source>
          <target state="translated">&lt;code&gt;ERL_REF&lt;/code&gt; （Erlangリファレンス）</target>
        </trans-unit>
        <trans-unit id="bce1abdbe38a7ca47f99eb783658cca353b892b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_REF_NODE(ref)&lt;/code&gt;, &lt;code&gt;ERL_REF_NUMBER(ref)&lt;/code&gt;, and &lt;code&gt;ERL_REF_CREATION(ref)&lt;/code&gt; can be used to retrieve the three values used to create the reference.</source>
          <target state="translated">&lt;code&gt;ERL_REF_NODE(ref)&lt;/code&gt; 、 &lt;code&gt;ERL_REF_NUMBER(ref)&lt;/code&gt; 、および &lt;code&gt;ERL_REF_CREATION(ref)&lt;/code&gt; を使用して、参照の作成に使用される3つの値を取得できます。</target>
        </trans-unit>
        <trans-unit id="70121c68b4738b58b7db2b0f8c4d9e041174288b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_REF_NODE(ref)&lt;/code&gt;, &lt;code&gt;ERL_REF_NUMBERS(ref)&lt;/code&gt;, &lt;code&gt;ERL_REF_LEN(ref)&lt;/code&gt;, and &lt;code&gt;ERL_REF_CREATION(ref)&lt;/code&gt; can be used to retrieve the values used to create the reference.</source>
          <target state="translated">&lt;code&gt;ERL_REF_NODE(ref)&lt;/code&gt; 、 &lt;code&gt;ERL_REF_NUMBERS(ref)&lt;/code&gt; 、 &lt;code&gt;ERL_REF_LEN(ref)&lt;/code&gt; 、および &lt;code&gt;ERL_REF_CREATION(ref)&lt;/code&gt; を使用して、参照の作成に使用された値を取得できます。</target>
        </trans-unit>
        <trans-unit id="90fdcfb514f16fa0507d5c4a4fffb76d9c00f0d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_SMALL_BIG&lt;/code&gt; (bignum)</source>
          <target state="translated">&lt;code&gt;ERL_SMALL_BIG&lt;/code&gt; （bignum）</target>
        </trans-unit>
        <trans-unit id="d02ed50a706165c7924c78370fd1236205885e59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_SMALL_BIG&lt;/code&gt; and &lt;code&gt;ERL_U_SMALL_BIG&lt;/code&gt; are for creating Erlang &lt;code&gt;bignums&lt;/code&gt;, which can contain integers of any size. The size of an integer in Erlang is machine-dependent, but any integer &amp;gt; 2^28 requires a bignum.</source>
          <target state="translated">&lt;code&gt;ERL_SMALL_BIG&lt;/code&gt; および &lt;code&gt;ERL_U_SMALL_BIG&lt;/code&gt; は、任意のサイズの整数を含むことができるErlang &lt;code&gt;bignums&lt;/code&gt; を作成するためのものです。Erlangの整数のサイズはマシンに依存しますが、2 ^ 28より大きい整数にはbignumが必要です。</target>
        </trans-unit>
        <trans-unit id="88bfc5c63913842f9b860766789e806f573523e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_U_INTEGER&lt;/code&gt; (unsigned integer)</source>
          <target state="translated">&lt;code&gt;ERL_U_INTEGER&lt;/code&gt; （符号なし整数）</target>
        </trans-unit>
        <trans-unit id="fa6c4b1f5f1561ae52fe72c16c0f516b1556b138" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ERL_U_SMALL_BIG&lt;/code&gt; (bignum)</source>
          <target state="translated">&lt;code&gt;ERL_U_SMALL_BIG&lt;/code&gt; （bignum）</target>
        </trans-unit>
        <trans-unit id="881c2f034d761dc5bc4b85cd955213ae438d6364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ETERM *erl_decode(bufp)&lt;/code&gt;&lt;code&gt;ETERM *erl_decode_buf(bufpp)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ETERM *erl_decode(bufp)&lt;/code&gt; &lt;code&gt;ETERM *erl_decode_buf(bufpp)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd04b1a69f289d163d1452b1b1e03f44941f5c0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ETERM *erl_rpc(fd, mod, fun, args)&lt;/code&gt;&lt;code&gt;int erl_rpc_from(fd, timeout, emsg)&lt;/code&gt;&lt;code&gt;int erl_rpc_to(fd, mod, fun, args)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ETERM *erl_rpc(fd, mod, fun, args)&lt;/code&gt; &lt;code&gt;int erl_rpc_from(fd, timeout, emsg)&lt;/code&gt; &lt;code&gt;int erl_rpc_to(fd, mod, fun, args)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6092b190b2ba22ffcd8fcbb77c75eea42725618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Element&lt;/code&gt; is any of:</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="a09b75c4dd9a98c712c66c3008d92328ac9f8c6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Emakefile&lt;/code&gt; is read from top to bottom. If a module matches more than one entry, the first match is valid. For example, the following &lt;code&gt;Emakefile&lt;/code&gt; means that &lt;code&gt;file1&lt;/code&gt; shall be compiled with the options &lt;code&gt;[debug_info,{i,&quot;../foo&quot;}]&lt;/code&gt;, while all other files in the current directory shall be compiled with only the &lt;code&gt;debug_info&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;Emakefile&lt;/code&gt; は上から下に読み込まれます。モジュールが複数のエントリに一致する場合、最初の一致が有効です。たとえば、次の &lt;code&gt;Emakefile&lt;/code&gt; は、 &lt;code&gt;file1&lt;/code&gt; がオプション &lt;code&gt;[debug_info,{i,&quot;../foo&quot;}]&lt;/code&gt; でコンパイルされ、現在のディレクトリ内の他のすべてのファイルは &lt;code&gt;debug_info&lt;/code&gt; フラグのみでコンパイルされることを意味します。</target>
        </trans-unit>
        <trans-unit id="52878d671a1312dfefbfcf6e09a52127201157f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Emp&lt;/code&gt; is an employee record.</source>
          <target state="translated">&lt;code&gt;Emp&lt;/code&gt; は従業員レコードです。</target>
        </trans-unit>
        <trans-unit id="e7bead8350022baa1c74ec378c14432c0a9c5713" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Encoding&lt;/code&gt; and &lt;code&gt;Prompt&lt;/code&gt; as for &lt;code&gt;get_until&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Encoding&lt;/code&gt; &lt;code&gt;get_until&lt;/code&gt; と同様にエンコードと &lt;code&gt;Prompt&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8e0754b763cef79ea7263c22bf820a9efbc6bb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Encoding&lt;/code&gt; denotes how data is to be sent back to the client and what data is sent to the function denoted by &lt;code&gt;Module&lt;/code&gt;/&lt;code&gt;Function&lt;/code&gt;/&lt;code&gt;ExtraArgs&lt;/code&gt;. If the function supplied returns data as a list, the data is converted to this encoding. If the function supplied returns data in some other format, no conversion can be done, and it is up to the client-supplied function to return data in a proper way.</source>
          <target state="translated">&lt;code&gt;Encoding&lt;/code&gt; は、データがクライアントに送り返される方法、および &lt;code&gt;Module&lt;/code&gt; / &lt;code&gt;Function&lt;/code&gt; / &lt;code&gt;ExtraArgs&lt;/code&gt; で示される関数に送信されるデータを示します。指定された関数がデータをリストとして返す場合、データはこのエンコーディングに変換されます。提供された関数が他の形式でデータを返す場合、変換は実行できず、適切な方法でデータを返すのはクライアント提供の関数です。</target>
        </trans-unit>
        <trans-unit id="1170641f41761a2799a12a95edaa53231325fec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;unicode&lt;/code&gt; or &lt;code&gt;latin1&lt;/code&gt;, meaning that the characters are (in case of binaries) encoded as UTF-8 or ISO Latin-1 (pure bytes). A well-behaved I/O server is also to return an error indication if list elements contain integers &amp;gt; 255 when &lt;code&gt;Encoding&lt;/code&gt; is set to &lt;code&gt;latin1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Encoding&lt;/code&gt; は &lt;code&gt;unicode&lt;/code&gt; または &lt;code&gt;latin1&lt;/code&gt; です。つまり、文字は（バイナリの場合）UTF-8またはISO Latin-1（純粋なバイト）としてエンコードされます。 &lt;code&gt;Encoding&lt;/code&gt; が &lt;code&gt;latin1&lt;/code&gt; に設定されている場合、正常に動作するI / Oサーバーは、リスト要素に255 より大きい整数が含まれている場合にもエラーを返します。</target>
        </trans-unit>
        <trans-unit id="6a225ac248d4b8ea8b511bdd390c52b1133d8e47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EndTime = {date(),time()}&lt;/code&gt;, date and time the test run finished.</source>
          <target state="translated">&lt;code&gt;EndTime = {date(),time()}&lt;/code&gt; 、テスト実行が終了した日時。</target>
        </trans-unit>
        <trans-unit id="20242c58c5a7a44b31282e9f14f06bd3fcba3332" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EngineID&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;EngineID&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="0b7feeb015edb69e52fef14042c0b0617b770bd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EngineID&lt;/code&gt; is the engine-id of the agent (string).</source>
          <target state="translated">&lt;code&gt;EngineID&lt;/code&gt; は、エージェントのエンジンID（文字列）です。</target>
        </trans-unit>
        <trans-unit id="7546575c596de1c27024b1235acc1a3e5bdf5520" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EngineId&lt;/code&gt; is a string or the atom &lt;code&gt;discovery&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;EngineId&lt;/code&gt; は文字列またはアトム &lt;code&gt;discovery&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5057fd04ebd30bf531d592d00406e9fb9e8c739e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Env&lt;/code&gt; (a list) is the environment or free variables for the fun. For external funs, the returned list is always empty.</source>
          <target state="translated">&lt;code&gt;Env&lt;/code&gt; （リスト）は、楽しみのための環境変数または自由変数です。外部ファンの場合、返されるリストは常に空です。</target>
        </trans-unit>
        <trans-unit id="f38a1f56066c1b2c4f09df9cbe53f2020200eda3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Env&lt;/code&gt; environment data of the request see description above.</source>
          <target state="translated">&lt;code&gt;Env&lt;/code&gt; リクエストのEnv環境データは、上記の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="39fa1e45bb7ba9f3ea571712ab4f7ace0b7ecf0e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Env&lt;/code&gt; is to be a list of tuples &lt;code&gt;{Name, Val}&lt;/code&gt;, where &lt;code&gt;Name&lt;/code&gt; is the name of an environment variable, and &lt;code&gt;Val&lt;/code&gt; is the value it is to have in the spawned port process. Both &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Val&lt;/code&gt; must be strings. The one exception is &lt;code&gt;Val&lt;/code&gt; being the atom &lt;code&gt;false&lt;/code&gt; (in analogy with &lt;code&gt;os:getenv/1&lt;/code&gt;, which removes the environment variable.</source>
          <target state="translated">&lt;code&gt;Env&lt;/code&gt; はタプル &lt;code&gt;{Name, Val}&lt;/code&gt; リストです。ここで、 &lt;code&gt;Name&lt;/code&gt; は環境変数の名前、 &lt;code&gt;Val&lt;/code&gt; は生成されたポートプロセスで持つ値です。 &lt;code&gt;Name&lt;/code&gt; と &lt;code&gt;Val&lt;/code&gt; は両方とも文字列でなければなりません。 1つの例外は &lt;code&gt;Val&lt;/code&gt; がアトム &lt;code&gt;false&lt;/code&gt; であることです（ &lt;code&gt;os:getenv/1&lt;/code&gt; と同様、環境変数を削除します）。</target>
        </trans-unit>
        <trans-unit id="256b7bdee92b0063d9dbcb456f9cb2de1b55b27b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Eplus | ~p : Mod&lt;/code&gt;. The &lt;code&gt;|&lt;/code&gt; operator converts the second operand to the type of the first operand. In this case the module is converted to all functions of the module. It is necessary to assign a type to the module (&lt;code&gt;:&amp;nbsp;Mod&lt;/code&gt;), otherwise modules like &lt;code&gt;kernel&lt;/code&gt; would be converted to all functions of the application with the same name; the most general constant is used in cases of ambiguity.</source>
          <target state="translated">&lt;code&gt;Eplus | ~p : Mod&lt;/code&gt; 。 &lt;code&gt;|&lt;/code&gt; 演算子は、第2オペランドを第1オペランドの型に変換します。この場合、モジュールはモジュールのすべての関数に変換されます。モジュール（ &lt;code&gt;:&amp;nbsp;Mod&lt;/code&gt; ）にタイプを割り当てる必要があります。そうしないと、 &lt;code&gt;kernel&lt;/code&gt; などのモジュールが同じ名前のアプリケーションのすべての関数に変換されます。あいまいな場合には、最も一般的な定数が使用されます。</target>
        </trans-unit>
        <trans-unit id="3196f174e2f55047b41a89e355524ca495a0ed21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErlIOVec&lt;/code&gt; contains both a &lt;code&gt;SysIOVec&lt;/code&gt;, suitable for &lt;code&gt;writev&lt;/code&gt;, and one or more binaries. If these binaries are to be retained when the driver returns from &lt;code&gt;outputv&lt;/code&gt;, they can be queued (using, for example, &lt;code&gt;&lt;a href=&quot;erl_driver#driver_enq_bin&quot;&gt; erl_driver:driver_enq_bin&lt;/a&gt;&lt;/code&gt;) or, if they are kept in a static or global variable, the reference counter can be incremented.</source>
          <target state="translated">&lt;code&gt;ErlIOVec&lt;/code&gt; には、 &lt;code&gt;writev&lt;/code&gt; に適した &lt;code&gt;SysIOVec&lt;/code&gt; と1つ以上のバイナリの両方が含まれています。ドライバーが &lt;code&gt;outputv&lt;/code&gt; から戻ったときにこれらのバイナリを保持する場合は、キューに入れることができます（たとえば、 &lt;code&gt;&lt;a href=&quot;erl_driver#driver_enq_bin&quot;&gt; erl_driver:driver_enq_bin&lt;/a&gt;&lt;/code&gt; を使用）。静的変数またはグローバル変数に保持する場合は、参照カウンターをインクリメントできます。</target>
        </trans-unit>
        <trans-unit id="c6f5445adc6d1849561c3afcaf23b1069e4fdddc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErlIOVec&lt;/code&gt; contains both a &lt;code&gt;SysIOVec&lt;/code&gt;, suitable for &lt;code&gt;writev&lt;/code&gt;, and one or more binaries. If these binaries are to be retained when the driver returns from &lt;code&gt;outputv&lt;/code&gt;, they can be queued (using, for example, &lt;code&gt;&lt;a href=&quot;erl_driver#driver_enq_bin&quot;&gt;erl_driver:driver_enq_bin&lt;/a&gt;&lt;/code&gt;) or, if they are kept in a static or global variable, the reference counter can be incremented.</source>
          <target state="translated">&lt;code&gt;ErlIOVec&lt;/code&gt; には、 &lt;code&gt;writev&lt;/code&gt; に適した &lt;code&gt;SysIOVec&lt;/code&gt; と1つ以上のバイナリの両方が含まれています。ドライバーが &lt;code&gt;outputv&lt;/code&gt; から戻ったときにこれらのバイナリを保持する場合は、それらを（たとえば、 &lt;code&gt;&lt;a href=&quot;erl_driver#driver_enq_bin&quot;&gt;erl_driver:driver_enq_bin&lt;/a&gt;&lt;/code&gt; を使用して）キューに入れるか、静的変数またはグローバル変数に保持されている場合は、参照カウンターをインクリメントできます。</target>
        </trans-unit>
        <trans-unit id="a0fda3c58edbbb94096b7bb1d0b60dd27d22b8a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErlNifBinary&lt;/code&gt; contains transient information about an inspected binary term. &lt;code&gt;data&lt;/code&gt; is a pointer to a buffer of &lt;code&gt;size&lt;/code&gt; bytes with the raw content of the binary.</source>
          <target state="translated">&lt;code&gt;ErlNifBinary&lt;/code&gt; には、検査されたバイナリ項に関する一時的な情報が含まれています。 &lt;code&gt;data&lt;/code&gt; は、バイナリの生のコンテンツを含む &lt;code&gt;size&lt;/code&gt; バイトのバッファへのポインタです。</target>
        </trans-unit>
        <trans-unit id="68dd395d767083589ea166bb0590efc7ba8c7cc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErlNifEnv&lt;/code&gt; represents an environment that can host Erlang terms. All terms in an environment are valid as long as the environment is valid. &lt;code&gt;ErlNifEnv&lt;/code&gt; is an opaque type; pointers to it can only be passed on to API functions. Three types of environments exist:</source>
          <target state="translated">&lt;code&gt;ErlNifEnv&lt;/code&gt; は、Erlang用語をホストできる環境を表します。環境が有効である限り、環境内のすべての用語が有効です。 &lt;code&gt;ErlNifEnv&lt;/code&gt; は不透明（OPAQUE）型です。それへのポインタは、API関数にのみ渡すことができます。次の3種類の環境が存在します。</target>
        </trans-unit>
        <trans-unit id="7a6108af16955f65cb4d946c6ef129edffd89b0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErlNifEnv&lt;/code&gt; represents an environment that can host Erlang terms. All terms in an environment are valid as long as the environment is valid. &lt;code&gt;ErlNifEnv&lt;/code&gt; is an opaque type; pointers to it can only be passed on to API functions. Two types of environments exist:</source>
          <target state="translated">&lt;code&gt;ErlNifEnv&lt;/code&gt; は、Erlang用語をホストできる環境を表します。環境が有効である限り、環境内のすべての用語は有効です。 &lt;code&gt;ErlNifEnv&lt;/code&gt; は不透明なタイプです。それへのポインターは、API関数にのみ渡すことができます。2つのタイプの環境が存在します。</target>
        </trans-unit>
        <trans-unit id="66f91e4aa8804c6b4f013ada280146fb185d0c9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Erl_Interface&lt;/code&gt; does not provide a native implementation of the global service. Instead it uses the global services provided by a &quot;nearby&quot; Erlang node. To use the services described in this section, it is necessary to first open a connection to an Erlang node.</source>
          <target state="translated">&lt;code&gt;Erl_Interface&lt;/code&gt; は、グローバルサービスのネイティブ実装を提供しません。代わりに、「近くの」Erlangノードによって提供されるグローバルサービスを使用します。このセクションで説明するサービスを使用するには、最初にErlangノードへの接続を開く必要があります。</target>
        </trans-unit>
        <trans-unit id="21a8620d7f71b3fe04e6ae104f985d39e2c3a39b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Error&lt;/code&gt; can be &lt;code&gt;Reason&lt;/code&gt;, &lt;code&gt;{error, Reason}&lt;/code&gt;, or &lt;code&gt;{aborted, Reason}&lt;/code&gt;. &lt;code&gt;Reason&lt;/code&gt; can be an atom or a tuple with &lt;code&gt;Reason&lt;/code&gt; as an atom in the first field.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; は、 &lt;code&gt;Reason&lt;/code&gt; 、 &lt;code&gt;{error, Reason}&lt;/code&gt; 、または &lt;code&gt;{aborted, Reason}&lt;/code&gt; です。 &lt;code&gt;Reason&lt;/code&gt; 原子または有するタプルとすることができる &lt;code&gt;Reason&lt;/code&gt; 最初のフィールドにおける原子として。</target>
        </trans-unit>
        <trans-unit id="5638a7f8b468b89e69ea634869bb83a7a6a2afab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Error&lt;/code&gt; describes the error to the client, which can do whatever it wants with it. The &lt;code&gt;io&lt;/code&gt; module typically returns it &quot;as is&quot;.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; はクライアントにエラーを説明し、クライアントはそれを使用して何でも実行できます。 &lt;code&gt;io&lt;/code&gt; モジュールは、一般的に「そのまま」、それを返します。</target>
        </trans-unit>
        <trans-unit id="04d87ae5554e208370820f25f624774a9da1947c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Error&lt;/code&gt; describes the error to the client, which can do whatever it wants with it. The &lt;code&gt;io&lt;/code&gt; module typically returns it as is.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; はクライアントにエラーを説明し、クライアントはそれを使用して何でも実行できます。 &lt;code&gt;io&lt;/code&gt; モジュールは、典型的には、あるとしてそれを返します。</target>
        </trans-unit>
        <trans-unit id="542f071c4b7277d878a6f879fdb87841d69c8a2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErrorInfo&lt;/code&gt; is described later in this section. The filename is included here, as the compiler uses the Erlang pre-processor &lt;code&gt;epp&lt;/code&gt;, which allows the code to be included in other files. It is therefore important to know to &lt;strong&gt;which&lt;/strong&gt; file the line number of an error or a warning refers.</source>
          <target state="translated">&lt;code&gt;ErrorInfo&lt;/code&gt; については、このセクションで後述します。コンパイラはErlangプリプロセッサ &lt;code&gt;epp&lt;/code&gt; を使用するため、ファイル名はここに含まれています。これにより、コードを他のファイルに含めることができます。したがって、エラーまたは警告の行番号が&lt;strong&gt;どの&lt;/strong&gt;ファイルを参照しているかを知ることが重要です。</target>
        </trans-unit>
        <trans-unit id="6c3a6b9d3a2bea4238f95b3b00f732c1e463c065" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErrorInfo&lt;/code&gt; is the standard &lt;code&gt;ErrorInfo&lt;/code&gt; structure that is returned from all I/O modules. The format is as follows:</source>
          <target state="translated">&lt;code&gt;ErrorInfo&lt;/code&gt; は、すべてのI / Oモジュールから返される標準の &lt;code&gt;ErrorInfo&lt;/code&gt; 構造です。形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="1fc55e449c7b56fac5185473fc4fd0d23e23f36e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErrorLine&lt;/code&gt; is the atom &lt;code&gt;none&lt;/code&gt; if the error does not correspond to a specific line, for example, if the source file does not exist.</source>
          <target state="translated">&lt;code&gt;ErrorLine&lt;/code&gt; エラーが特定の行に対応しない場合、たとえばソースファイルが存在しない場合、ErrorLineはアトム &lt;code&gt;none&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6d4423e98bb1aad80b5461a8bc36568e125e09d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Errors&lt;/code&gt; is the list of error descriptors of all &lt;code&gt;error_marker&lt;/code&gt; nodes that occur in &lt;code&gt;Forms&lt;/code&gt;. The order of listing is not defined.</source>
          <target state="translated">&lt;code&gt;Errors&lt;/code&gt; は、 &lt;code&gt;Forms&lt;/code&gt; で発生するすべての &lt;code&gt;error_marker&lt;/code&gt; ノードのエラー記述子のリストです。リストの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="e1b253e53177217e4150964d83d1c1292726536c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErtsThrPrgrDelayHandle erts_thr_progress_unmanaged_delay(void)&lt;/code&gt; - Delay thread progress.</source>
          <target state="translated">&lt;code&gt;ErtsThrPrgrDelayHandle erts_thr_progress_unmanaged_delay(void)&lt;/code&gt; -スレッドの進行を遅らせます。</target>
        </trans-unit>
        <trans-unit id="253b4dbedc598d8836fdfc9b26b2a4f3c56a8fa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ErtsThrPrgrVal erts_thr_progress_later(void)&lt;/code&gt; - Initiation of the operation. The thread progress value returned can be used testing for completion of the operation.</source>
          <target state="translated">&lt;code&gt;ErtsThrPrgrVal erts_thr_progress_later(void)&lt;/code&gt; -操作の開始。返されたスレッドの進行状況の値は、操作の完了をテストするために使用できます。</target>
        </trans-unit>
        <trans-unit id="c60e6e43a7c29bcde6fd46a64b452b964ec8c03d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Eterm tmp_packed1 = BeamExtraData(I[0]);&lt;/code&gt; picks up both X register numbers packed into the upper 32 bits of the instruction word.</source>
          <target state="translated">&lt;code&gt;Eterm tmp_packed1 = BeamExtraData(I[0]);&lt;/code&gt; 命令ワードの上位32ビットにパックされた両方のXレジスタ番号をピックアップします。</target>
        </trans-unit>
        <trans-unit id="20f24f488de97e9c2b9d9ab9ed959de3a856cdb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event-Category&lt;/code&gt; can be either of the following:</source>
          <target state="translated">&lt;code&gt;Event-Category&lt;/code&gt; は次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="8a858aa824073140245abbd1d776d9b3a4ca64da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; and &lt;code&gt;Info&lt;/code&gt; are passed as is from &lt;code&gt;handle_debug&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; と &lt;code&gt;Info&lt;/code&gt; は、 &lt;code&gt;handle_debug&lt;/code&gt; からそのまま渡されます。</target>
        </trans-unit>
        <trans-unit id="be32fd59f7e8c2830bb3a6373ccf853a25a04f61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; is an &lt;code&gt;{EventType,EventContent}&lt;/code&gt; tuple.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; は &lt;code&gt;{EventType,EventContent}&lt;/code&gt; タプルです。</target>
        </trans-unit>
        <trans-unit id="c9d6263389578ffd88c10ea9dd4cb4fec8766e3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; is any term that is passed as one of the arguments to &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt; Module:handle_event/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt; Module:handle_event/2&lt;/a&gt;&lt;/code&gt; への引数の1つとして渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="d59346c42f2342952197ec4ead3bdc93db5ecbae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; is any term that is passed as one of the arguments to &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt;Module:handle_event/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt;Module:handle_event/2&lt;/a&gt;&lt;/code&gt; への引数の1つとして渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="92c8812cc59311b101b9b526c2bc7605e952016c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; is the &lt;code&gt;Event&lt;/code&gt; argument of &lt;code&gt;notify/2&lt;/code&gt;/&lt;code&gt;sync_notify/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; は &lt;code&gt;notify/2&lt;/code&gt; / &lt;code&gt;sync_notify/2&lt;/code&gt; の &lt;code&gt;Event&lt;/code&gt; 引数です。</target>
        </trans-unit>
        <trans-unit id="d42b65b89287d8ed496061fd3caefe5d7cf00764" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; is the system event. It is up to the user to define what a system event is and how it is to be represented. Typically at least incoming and outgoing messages are considered system events and represented by the tuples &lt;code&gt;{in,Msg[,From]}&lt;/code&gt; and &lt;code&gt;{out,Msg,To[,State]}&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; はシステムイベントです。システムイベントとは何か、それをどのように表現するかを定義するのはユーザーです。通常、少なくとも着信メッセージと発信メッセージはシステムイベントと見なされ、それぞれタプル &lt;code&gt;{in,Msg[,From]}&lt;/code&gt; および &lt;code&gt;{out,Msg,To[,State]}&lt;/code&gt; れます。</target>
        </trans-unit>
        <trans-unit id="8e8120c574fbdef0b2373999194421b7a265ecbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EventHandlers&lt;/code&gt; is a list of module names. Before a test session starts, the init function of each plugged in event handler is called (with the &lt;code&gt;InitArgs&lt;/code&gt; list as argument or &lt;code&gt;[]&lt;/code&gt; if no start arguments are specified).</source>
          <target state="translated">&lt;code&gt;EventHandlers&lt;/code&gt; はモジュール名のリストです。テストセッションが開始する前に、プラグインされた各イベントハンドラーのinit関数が呼び出されます（引数として &lt;code&gt;InitArgs&lt;/code&gt; リスト、または開始引数が指定されていない場合は &lt;code&gt;[]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="b5396e117db15bfb87425c552850bcee368014a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;EventMgrRef&lt;/code&gt; can be any of the following:</source>
          <target state="translated">&lt;code&gt;EventMgrRef&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="9c2455c5ac8b9bfa3603eab32781121e992de95c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExclNodes&lt;/code&gt; is a list of nodes to be excluded from the test. That is, tests that are specified in the test specification to run on a particular node are not performed if that node is listed in &lt;code&gt;ExclNodes&lt;/code&gt; at runtime.</source>
          <target state="translated">&lt;code&gt;ExclNodes&lt;/code&gt; は、テストから除外するノードのリストです。つまり、特定のノードで実行するようにテスト仕様で指定されているテストは、そのノードが実行時に &lt;code&gt;ExclNodes&lt;/code&gt; にリストされている場合は実行されません。</target>
        </trans-unit>
        <trans-unit id="b8e91d463912293e8731b8b5a15250334828aefb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Exclude actor (toggle)&lt;/code&gt; - Right mouse click on the actor name tag. The actor name will be enclosed in round brackets &lt;code&gt;()&lt;/code&gt;. When an actor is excluded, all events related to this actor is hidden. If the checkbox &lt;code&gt;Hide (excluded actors)&lt;/code&gt; is checked, even the name tags and corresponding vertical line of excluded actors will be hidden.</source>
          <target state="translated">&lt;code&gt;Exclude actor (toggle)&lt;/code&gt; -アクター名タグを右クリックします。アクター名は丸括弧 &lt;code&gt;()&lt;/code&gt; で囲まれます。アクターが除外されると、このアクターに関連するすべてのイベントが非表示になります。[ &lt;code&gt;Hide (excluded actors)&lt;/code&gt; チェックボックスがオンの場合、除外された俳優の名前タグと対応する垂直線も非表示になります。</target>
        </trans-unit>
        <trans-unit id="0567389015d8817ba26de637561d66144693d7c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Exports&lt;/code&gt; is a list of representations of those function names that are listed by export declaration attributes in &lt;code&gt;Forms&lt;/code&gt; (cf. &lt;code&gt;analyze_export_attribute/1&lt;/code&gt;). We do not guarantee that each name occurs at most once in the list. The order of listing is not defined.</source>
          <target state="translated">&lt;code&gt;Exports&lt;/code&gt; は、 &lt;code&gt;Forms&lt;/code&gt; エクスポート宣言属性（cf. &lt;code&gt;analyze_export_attribute/1&lt;/code&gt; ）によってリストされた関数名の表現のリストです。各名前がリストに1回だけ出現することを保証するものではありません。リストの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="8f0355c010534ae5423a867b53664189e3db344a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Expr1&lt;/code&gt; and &lt;code&gt;Expr2&lt;/code&gt;, which are also expressions, are evaluated first - in any order - before the addition is performed.</source>
          <target state="translated">&lt;code&gt;Expr1&lt;/code&gt; 式でもあるExpr1と &lt;code&gt;Expr2&lt;/code&gt; は、加算が実行される前に、最初に（任意の順序で）評価されます。</target>
        </trans-unit>
        <trans-unit id="7211d000401d588e5e82559868e09cd511cc0a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Expr1&lt;/code&gt; evaluates to &lt;code&gt;false&lt;/code&gt; in an &lt;code&gt;orelse&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;Expr1&lt;/code&gt; は、 &lt;code&gt;orelse&lt;/code&gt; 式で &lt;code&gt;false&lt;/code&gt; と評価されます。</target>
        </trans-unit>
        <trans-unit id="eeee422832153f29c93a67e50bac52241b6de5d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Expr1&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt; in an &lt;code&gt;andalso&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;Expr1&lt;/code&gt; と評価され &lt;code&gt;true&lt;/code&gt; で &lt;code&gt;andalso&lt;/code&gt; 表現。</target>
        </trans-unit>
        <trans-unit id="662f5e17af2f0c8cc395ffea808f39e153aa1f9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Expr1&lt;/code&gt; must evaluate to a pid, a registered name (atom), or a tuple &lt;code&gt;{Name,Node}&lt;/code&gt;. &lt;code&gt;Name&lt;/code&gt; is an atom and &lt;code&gt;Node&lt;/code&gt; is a node name, also an atom.</source>
          <target state="translated">&lt;code&gt;Expr1&lt;/code&gt; は、pid、登録名（atom）、またはタプル &lt;code&gt;{Name,Node}&lt;/code&gt; 評価される必要があります。 &lt;code&gt;Name&lt;/code&gt; はアトムであり、 &lt;code&gt;Node&lt;/code&gt; はノード名であり、これもアトムです。</target>
        </trans-unit>
        <trans-unit id="143302d8e9db2c4805973d558e7008d1947ce7e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Expr2&lt;/code&gt; is evaluated only if necessary. That is, &lt;code&gt;Expr2&lt;/code&gt; is evaluated only if:</source>
          <target state="translated">&lt;code&gt;Expr2&lt;/code&gt; は、必要な場合にのみ評価されます。つまり、 &lt;code&gt;Expr2&lt;/code&gt; は次の場合にのみ評価されます。</target>
        </trans-unit>
        <trans-unit id="bb8b3453fa33abd810625aed6af1b05b67aac7cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Expr&lt;/code&gt; is to evaluate to a &lt;code&gt;Name&lt;/code&gt; record. A copy of this record is returned, with the value of each specified field &lt;code&gt;FieldI&lt;/code&gt; changed to the value of evaluating the corresponding expression &lt;code&gt;ExprI&lt;/code&gt;. All other fields retain their old values.</source>
          <target state="translated">&lt;code&gt;Expr&lt;/code&gt; は &lt;code&gt;Name&lt;/code&gt; レコードに評価されます。このレコードのコピーが返され、指定された各フィールド &lt;code&gt;FieldI&lt;/code&gt; の値が、対応する式 &lt;code&gt;ExprI&lt;/code&gt; を評価した値に変更されます。他のすべてのフィールドは古い値を保持します。</target>
        </trans-unit>
        <trans-unit id="c861a94afb482d95e55eb75fae1bba5097ebb598" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExprT&lt;/code&gt; is to evaluate to an integer. The highest allowed value is 16#FFFFFFFF, that is, the value must fit in 32 bits. &lt;code&gt;receive..after&lt;/code&gt; works exactly as &lt;code&gt;receive&lt;/code&gt;, except that if no matching message has arrived within &lt;code&gt;ExprT&lt;/code&gt; milliseconds, then &lt;code&gt;BodyT&lt;/code&gt; is evaluated instead. The return value of &lt;code&gt;BodyT&lt;/code&gt; then becomes the return value of the &lt;code&gt;receive..after&lt;/code&gt; expression.</source>
          <target state="translated">&lt;code&gt;ExprT&lt;/code&gt; は整数に評価されます。最大許容値は16＃FFFFFFFFです。つまり、値は32ビットに収まる必要があります。 &lt;code&gt;receive..after&lt;/code&gt; はまったく同じ作品 &lt;code&gt;receive&lt;/code&gt; 一致するメッセージが内に到着していない場合ことを除いて、 &lt;code&gt;ExprT&lt;/code&gt; のミリ秒、そして &lt;code&gt;BodyT&lt;/code&gt; が代わりに評価されます。 &lt;code&gt;BodyT&lt;/code&gt; の戻り値は、receive..after式の戻り値になり &lt;code&gt;receive..after&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd389eaab7032a444c01c7322341050cb01623d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Expression&lt;/code&gt; (the &lt;strong&gt;template&lt;/strong&gt;) is any Erlang expression. Qualifiers are either &lt;strong&gt;filters&lt;/strong&gt; or &lt;strong&gt;generators&lt;/strong&gt;. Filters are Erlang expressions returning &lt;code&gt;boolean()&lt;/code&gt;. Generators have the form &lt;code&gt;Pattern &amp;lt;- ListExpression&lt;/code&gt;, where &lt;code&gt;ListExpression&lt;/code&gt; is an expression evaluating to a query handle or a list. Query handles are returned from &lt;code&gt;&lt;a href=&quot;#append-1&quot;&gt;append/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#keysort-2&quot;&gt;keysort/2,3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#q-1&quot;&gt;q/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sort-1&quot;&gt;sort/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#string_to_handle-1&quot;&gt; string_to_handle/1,2,3&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#table-2&quot;&gt;table/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Expression&lt;/code&gt; （&lt;strong&gt;テンプレート&lt;/strong&gt;）は任意のErlang式です。修飾子は、&lt;strong&gt;フィルター&lt;/strong&gt;または&lt;strong&gt;ジェネレーターの&lt;/strong&gt;いずれかです。フィルタは &lt;code&gt;boolean()&lt;/code&gt; を返すErlang式です。ジェネレーターの形式は &lt;code&gt;Pattern &amp;lt;- ListExpression&lt;/code&gt; 。ここで、 &lt;code&gt;ListExpression&lt;/code&gt; は、クエリハンドルまたはリストを評価する式です。クエリハンドルは、 &lt;code&gt;&lt;a href=&quot;#append-1&quot;&gt;append/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#keysort-2&quot;&gt;keysort/2,3&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#q-1&quot;&gt;q/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#sort-1&quot;&gt;sort/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#string_to_handle-1&quot;&gt; string_to_handle/1,2,3&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#table-2&quot;&gt;table/2&lt;/a&gt;&lt;/code&gt; から返されます。</target>
        </trans-unit>
        <trans-unit id="ff633e5575a8dae11d629083c60837e79d8b01c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Expression&lt;/code&gt; (the &lt;strong&gt;template&lt;/strong&gt;) is any Erlang expression. Qualifiers are either &lt;strong&gt;filters&lt;/strong&gt; or &lt;strong&gt;generators&lt;/strong&gt;. Filters are Erlang expressions returning &lt;code&gt;boolean()&lt;/code&gt;. Generators have the form &lt;code&gt;Pattern &amp;lt;- ListExpression&lt;/code&gt;, where &lt;code&gt;ListExpression&lt;/code&gt; is an expression evaluating to a query handle or a list. Query handles are returned from &lt;code&gt;&lt;a href=&quot;#append-1&quot;&gt;append/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#keysort-2&quot;&gt;keysort/2,3&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#q-1&quot;&gt;q/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#sort-1&quot;&gt;sort/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#string_to_handle-1&quot;&gt;string_to_handle/1,2,3&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#table-2&quot;&gt;table/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Expression&lt;/code&gt; （&lt;strong&gt;テンプレート&lt;/strong&gt;）は任意のErlang式です。修飾子は、&lt;strong&gt;フィルター&lt;/strong&gt;または&lt;strong&gt;ジェネレーター&lt;/strong&gt;です。フィルターは &lt;code&gt;boolean()&lt;/code&gt; を返すErlang式です。ジェネレーターの形式は、 &lt;code&gt;Pattern &amp;lt;- ListExpression&lt;/code&gt; 。ここで、 &lt;code&gt;ListExpression&lt;/code&gt; は、クエリハンドルまたはリストとして評価される式です。クエリハンドルは、 &lt;code&gt;&lt;a href=&quot;#append-1&quot;&gt;append/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#keysort-2&quot;&gt;keysort/2,3&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#q-1&quot;&gt;q/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#sort-1&quot;&gt;sort/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#string_to_handle-1&quot;&gt;string_to_handle/1,2,3&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#table-2&quot;&gt;table/2&lt;/a&gt;&lt;/code&gt; から返されます。</target>
        </trans-unit>
        <trans-unit id="41a5585df9b30ce57276abd33cc0dfddc1484041" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Extended&lt;/code&gt; equals &lt;code&gt;yes&lt;/code&gt; if the range of time values has been extended; otherwise &lt;code&gt;Extended&lt;/code&gt; equals &lt;code&gt;no&lt;/code&gt;. The range must be extended if &lt;code&gt;Function&lt;/code&gt; returns values that wrap fast. This typically is the case when the return value is a 32-bit value.</source>
          <target state="translated">&lt;code&gt;Extended&lt;/code&gt; 時間値の範囲が拡張されている場合、Extendedは &lt;code&gt;yes&lt;/code&gt; に等しくなります。それ以外の場合、 &lt;code&gt;Extended&lt;/code&gt; は &lt;code&gt;no&lt;/code&gt; と等しくなります。 &lt;code&gt;Function&lt;/code&gt; が高速に折り返す値を返す場合は、範囲を拡張する必要があります。これは通常、戻り値が32ビット値の場合です。</target>
        </trans-unit>
        <trans-unit id="00842de904bd1b223d9d3ef26dbb2f458437f173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Extra&lt;/code&gt; can be any &lt;code&gt;term()&lt;/code&gt; except the atom &lt;code&gt;ignore_extra&lt;/code&gt;. It is passed (back) to the user via the callback function &lt;code&gt;&lt;a href=&quot;megaco_user#connect&quot;&gt;handle_connect/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Extra&lt;/code&gt; は、アトム &lt;code&gt;ignore_extra&lt;/code&gt; を除く任意の &lt;code&gt;term()&lt;/code&gt; です。コールバック関数 &lt;code&gt;&lt;a href=&quot;megaco_user#connect&quot;&gt;handle_connect/3&lt;/a&gt;&lt;/code&gt; を介してユーザーに渡されます（戻されます）。</target>
        </trans-unit>
        <trans-unit id="016ef8d795e255f7f363dca307bf5b98383647e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Extra&lt;/code&gt; is any term that the notification sender wishes to pass to the Net if process when sending a notification (see &lt;code&gt;&lt;a href=&quot;snmpa#send_notification2&quot;&gt;send notification &lt;/a&gt;&lt;/code&gt; for more info).</source>
          <target state="translated">&lt;code&gt;Extra&lt;/code&gt; とは、通知の送信者が通知を送信するときにプロセスの場合にネットに渡したい用語です（詳細については、通知の &lt;code&gt;&lt;a href=&quot;snmpa#send_notification2&quot;&gt;send notification &lt;/a&gt;&lt;/code&gt; 参照してください）。</target>
        </trans-unit>
        <trans-unit id="6ac68c87afbf0744a0c5ba085556b77fef8726fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Extra&lt;/code&gt; is any term that the notification sender wishes to pass to the Net if process when sending a notification (see &lt;code&gt;&lt;a href=&quot;snmpa#send_notification2&quot;&gt;send notification&lt;/a&gt;&lt;/code&gt; for more info).</source>
          <target state="translated">&lt;code&gt;Extra&lt;/code&gt; は、通知の送信時に通知の送信者が処理する場合にネットに渡したい用語です（詳細については、通知の &lt;code&gt;&lt;a href=&quot;snmpa#send_notification2&quot;&gt;send notification&lt;/a&gt;&lt;/code&gt; 参照してください）。</target>
        </trans-unit>
        <trans-unit id="e1ea93189519f556c8607a1c3b51fac93865da75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Extra&lt;/code&gt; is any term the Net if process wishes to send to the agent. This term can be retrieved by the instrumentation functions by calling &lt;code&gt;snmp:current_net_if_data()&lt;/code&gt;. This data is also sent back to the Net if process when the agent generates a response to the request.</source>
          <target state="translated">&lt;code&gt;Extra&lt;/code&gt; は、プロセスがエージェントに送信したい場合のネットの用語です。この用語は、 &lt;code&gt;snmp:current_net_if_data()&lt;/code&gt; を呼び出すことにより、インストルメンテーション関数によって取得できます。このデータは、エージェントがリクエストへの応答を生成するときに、プロセスifにも戻されます。</target>
        </trans-unit>
        <trans-unit id="9a2d8d87ab3eb8cfec209eed6e6951ba7786caad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Extra&lt;/code&gt; is passed &quot;as is&quot; from the &lt;code&gt;{advanced,Extra}&lt;/code&gt; part of the update instruction.</source>
          <target state="translated">&lt;code&gt;Extra&lt;/code&gt; は、更新命令の &lt;code&gt;{advanced,Extra}&lt;/code&gt; 部分から「そのまま」渡されます。</target>
        </trans-unit>
        <trans-unit id="c81a21541d9de2a7fe8923ede1ced05d5a315656" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Extra&lt;/code&gt; is the term that the Net if process sent to the agent when the request was sent to the agent.</source>
          <target state="translated">&lt;code&gt;Extra&lt;/code&gt; は、リクエストがエージェントに送信されたときに、プロセスがエージェントに送信された場合にネットが使用した用語です。</target>
        </trans-unit>
        <trans-unit id="e1d8975a4528647404417d18311aa95ff023d3dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtraInfo&lt;/code&gt; is an opaque data structure passed on to the net-if process. The net-if process included in this application makes, with one exception, no use of this info, so the only use for it in such a configuration (when using the built in net-if) would be tracing. The one usage exception is: &lt;strong&gt;Any&lt;/strong&gt; tuple with &lt;code&gt;snmpm_extra_info_tag&lt;/code&gt; as its first element is reserved for internal use.</source>
          <target state="translated">&lt;code&gt;ExtraInfo&lt;/code&gt; は、net-ifプロセスに渡される不透明なデータ構造です。このアプリケーションに含まれるnet-ifプロセスでは、1つの例外を除いて、この情報は使用されないため、このような構成（組み込みのnet-ifを使用する場合）での使用はトレースのみです。つの使用例外がある：&lt;strong&gt;任意の&lt;/strong&gt;タプルと &lt;code&gt;snmpm_extra_info_tag&lt;/code&gt; としてのその最初の要素は、内部使用のために予約されています。</target>
        </trans-unit>
        <trans-unit id="aa5795d80e301c9ac1d4d855f3f9bef6e2645c40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtraInfo&lt;/code&gt; is not normally used in any way by the agent. It is intended to be passed along to the net-if process, which is a component that a user can implement themself. The users own net-if may then make use of ExtraInfo. The net-if provided with this application does not process ExtraInfo.</source>
          <target state="translated">&lt;code&gt;ExtraInfo&lt;/code&gt; は通常、エージェントによって決して使用されません。これは、ユーザーが自分で実装できるコンポーネントであるnet-ifプロセスに渡されることを目的としています。net-ifを所有するユーザーは、ExtraInfoを利用できます。このアプリケーションで提供されるnet-ifはExtraInfoを処理しません。</target>
        </trans-unit>
        <trans-unit id="1167fc289ec3487d52282629f9030a8d90651055" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtraInfo&lt;/code&gt; is some opaque data that is passed to the net-if process. It originates from the &lt;code&gt;ExtraInfo&lt;/code&gt; parameter in the calls to the &lt;code&gt;&lt;a href=&quot;snmpm#sync_get&quot;&gt;synchronous get-request&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get&quot;&gt;asynchronous get-request&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next&quot;&gt;synchronous get-next-request&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next&quot;&gt;asynchronous get-next-request&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_set&quot;&gt;synchronous set-request&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#async_set&quot;&gt;asynchronous set-request&lt;/a&gt;&lt;/code&gt; functions. Whether the net-if process chooses to use this is implementation dependent. The net-if process included in this application ignores it.</source>
          <target state="translated">&lt;code&gt;ExtraInfo&lt;/code&gt; は、net-ifプロセスに渡される不透明なデータです。これは、 &lt;code&gt;&lt;a href=&quot;snmpm#sync_get&quot;&gt;synchronous get-request&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;snmpm#async_get&quot;&gt;asynchronous get-request&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next&quot;&gt;synchronous get-next-request&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next&quot;&gt;asynchronous get-next-request&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;snmpm#sync_set&quot;&gt;synchronous set-request&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;snmpm#async_set&quot;&gt;asynchronous set-request&lt;/a&gt;&lt;/code&gt; 関数への呼び出しの &lt;code&gt;ExtraInfo&lt;/code&gt; パラメーターから発生します。 net-ifプロセスがこれを使用することを選択するかどうかは、実装に依存します。このアプリケーションに含まれるnet-ifプロセスはそれを無視します。</target>
        </trans-unit>
        <trans-unit id="698415d6f160d17b8481a524c2fe064901cd691e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtraInfo&lt;/code&gt; is some opaque data that is passed to the net-if process. It originates from the &lt;code&gt;ExtraInfo&lt;/code&gt; parameter in the calls to the &lt;code&gt;&lt;a href=&quot;snmpm#sync_get2&quot;&gt;synchronous get-request&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get2&quot;&gt;asynchronous get-request&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next2&quot;&gt;synchronous get-next-request&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next2&quot;&gt;asynchronous get-next-request&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;snmpm#sync_set2&quot;&gt;synchronous set-request&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;snmpm#async_set2&quot;&gt;asynchronous set-request&lt;/a&gt;&lt;/code&gt; functions. Whether the net-if process chooses to use this is implementation dependent. The net-if process included in this application ignores it.</source>
          <target state="translated">&lt;code&gt;ExtraInfo&lt;/code&gt; は、net-ifプロセスに渡される不透明（OPAQUE）データです。これは、 &lt;code&gt;&lt;a href=&quot;snmpm#sync_get2&quot;&gt;synchronous get-request&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;snmpm#async_get2&quot;&gt;asynchronous get-request&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;snmpm#sync_get_next2&quot;&gt;synchronous get-next-request&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;snmpm#async_get_next2&quot;&gt;asynchronous get-next-request&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;snmpm#sync_set2&quot;&gt;synchronous set-request&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;snmpm#async_set2&quot;&gt;asynchronous set-request&lt;/a&gt;&lt;/code&gt; 関数の呼び出しの &lt;code&gt;ExtraInfo&lt;/code&gt; パラメーターから発生します。net-ifプロセスがこれを使用することを選択するかどうかは、実装によって異なります。このアプリケーションに含まれているnet-ifプロセスはそれを無視します。</target>
        </trans-unit>
        <trans-unit id="22e09e963bd8e9e0cd9dbd76d530671ea2e49a2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ExtraOpts&lt;/code&gt; (optional) are extra SSH options to be added to the configuration data for &lt;code&gt;KeyOrName&lt;/code&gt;. The extra options override any existing options with the same key in the configuration data. For details on valid SSH options, see application &lt;code&gt;SSH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ExtraOpts&lt;/code&gt; （オプション）は、 &lt;code&gt;KeyOrName&lt;/code&gt; の構成データに追加される追加のSSHオプションです。追加オプションは、構成データ内の同じキーを持つ既存のオプションをオーバーライドします。有効なSSHオプションの詳細については、アプリケーション &lt;code&gt;SSH&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="f88dacc5e2f9e876a456b60a8578937872c7ff8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; is a sparsity factor that can vary between 1.6 and 1.8 due to the probabilistic nature of the internal HAMT data structure.</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; は、内部HAMTデータ構造の確率論的な性質により、1.6と1.8の間で変化するスパースファクターです。</target>
        </trans-unit>
        <trans-unit id="f9a91cff788fb3022aa9e21e5f6bc60b7e7b0649" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; is equal to &lt;code&gt;L + X&lt;/code&gt; (the defined functions are the local functions and the external functions);</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; は &lt;code&gt;L + X&lt;/code&gt; 等しい（定義された関数はローカル関数と外部関数です）。</target>
        </trans-unit>
        <trans-unit id="eab46a1dd5dc611b743456bb214a0efd219f07b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; is equal to &lt;code&gt;L + X&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; は &lt;code&gt;L + X&lt;/code&gt; 等しい。</target>
        </trans-unit>
        <trans-unit id="abc78ab88ed98a1a5686851a0f20f21b4519e183" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; is the &lt;code&gt;field width&lt;/code&gt; of the input field.</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; は入力フィールドの &lt;code&gt;field width&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ab74f72aa41ea4874db8efe8144c02a2abae90dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;F&lt;/code&gt; is the &lt;code&gt;field width&lt;/code&gt; of the printed argument. A negative value means that the argument is left-justified within the field, otherwise right-justified. If no field width is specified, the required print width is used. If the field width specified is too small, the whole field is filled with &lt;code&gt;*&lt;/code&gt; characters.</source>
          <target state="translated">&lt;code&gt;F&lt;/code&gt; は、出力される引数の &lt;code&gt;field width&lt;/code&gt; です。負の値は、引数がフィールド内で左揃えされ、それ以外の場合は右揃えされることを意味します。フィールド幅が指定されていない場合、必要な印刷幅が使用されます。指定したフィールド幅が小さすぎる場合、フィールド全体が &lt;code&gt;*&lt;/code&gt; 文字で埋められます。</target>
        </trans-unit>
        <trans-unit id="b3473051d29731d0bfcbdfed961281f1a9bd321e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FailInfo = {timetrap_timeout,integer()} | {RunTimeError,StackTrace} | UserTerm&lt;/code&gt;, error details.</source>
          <target state="translated">&lt;code&gt;FailInfo = {timetrap_timeout,integer()} | {RunTimeError,StackTrace} | UserTerm&lt;/code&gt; 、エラーの詳細。</target>
        </trans-unit>
        <trans-unit id="e6ac7dfa3e184bbafd273b7d84d6e1e5a0a459c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FailInfo = {timetrap_timeout,integer()} | {RunTimeError,StackTrace} | bad_return | UserTerm&lt;/code&gt;, error details.</source>
          <target state="translated">&lt;code&gt;FailInfo = {timetrap_timeout,integer()} | {RunTimeError,StackTrace} | bad_return | UserTerm&lt;/code&gt; 、エラーの詳細。</target>
        </trans-unit>
        <trans-unit id="7741e0b50169d120e225f1164a9cbbd7154c4314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FailReason = {Suite,ConfigFunc,FailInfo}} | {Suite,FailedCaseInSequence}&lt;/code&gt;, reason for failure.</source>
          <target state="translated">&lt;code&gt;FailReason = {Suite,ConfigFunc,FailInfo}} | {Suite,FailedCaseInSequence}&lt;/code&gt; 、失敗の理由。</target>
        </trans-unit>
        <trans-unit id="3b53fe700d860f2359d7edee023e75e866140248" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FailReason = {error,FailInfo} | {error,{RunTimeError,StackTrace}} | {timetrap_timeout,integer()} | {failed,{Suite,end_per_testcase,FailInfo}}&lt;/code&gt;, reason for failure.</source>
          <target state="translated">&lt;code&gt;FailReason = {error,FailInfo} | {error,{RunTimeError,StackTrace}} | {timetrap_timeout,integer()} | {failed,{Suite,end_per_testcase,FailInfo}}&lt;/code&gt; 、失敗の理由。</target>
        </trans-unit>
        <trans-unit id="6bea7f35c31242e541dad95c1a7fb7dffba05c1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Failed = integer()&lt;/code&gt;, current number of failed test cases.</source>
          <target state="translated">&lt;code&gt;Failed = integer()&lt;/code&gt; 、失敗したテストケースの現在の数。</target>
        </trans-unit>
        <trans-unit id="fd10d40b406076baa561594df83d89a8736eb827" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FailedCaseInSequence = atom()&lt;/code&gt;, the name of a case that failed in a sequence.</source>
          <target state="translated">&lt;code&gt;FailedCaseInSequence = atom()&lt;/code&gt; 、シーケンスで失敗したケースの名前。</target>
        </trans-unit>
        <trans-unit id="3480494a07f9200c378dd56805e08fa650392c80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fd&lt;/code&gt; is a file descriptor obtained from &lt;code&gt;erl_connect()&lt;/code&gt; or &lt;code&gt;erl_xconnect()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fd&lt;/code&gt; は、 &lt;code&gt;erl_connect()&lt;/code&gt; または &lt;code&gt;erl_xconnect()&lt;/code&gt; から取得したファイル記述子です。</target>
        </trans-unit>
        <trans-unit id="04d8c667801a492731e286b0245924b0b1586652" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Features&lt;/code&gt; is a list of atoms representing the allocation features used.</source>
          <target state="translated">&lt;code&gt;Features&lt;/code&gt; は、使用される割り当て機能を表すアトムのリストです。</target>
        </trans-unit>
        <trans-unit id="b2e251a69373a76c1951d4ff010b0cc1ab4fcd2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt; can start with a path component &lt;code&gt;$VAR&lt;/code&gt;, for some string &lt;code&gt;VAR&lt;/code&gt;. If that is the case, the value of the environment variable &lt;code&gt;VAR&lt;/code&gt; as returned by &lt;code&gt;os:getenv(VAR)&lt;/code&gt; is substituted for &lt;code&gt;$VAR&lt;/code&gt;. If &lt;code&gt;os:getenv(VAR)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;$VAR&lt;/code&gt; is left as is.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; は、一部の文字列 &lt;code&gt;VAR&lt;/code&gt; のパスコンポーネント &lt;code&gt;$VAR&lt;/code&gt; で開始できます。その場合、 &lt;code&gt;os:getenv(VAR)&lt;/code&gt; によって返される環境変数 &lt;code&gt;VAR&lt;/code&gt; の値が &lt;code&gt;$VAR&lt;/code&gt; 置き換えられます。 &lt;code&gt;os:getenv(VAR)&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返す場合、 &lt;code&gt;$VAR&lt;/code&gt; はそのまま残ります。</target>
        </trans-unit>
        <trans-unit id="a1ce85923b7f02ac40588a7645cbaf975eec4970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt; is normally a file pathname in a local filesystem. It is limited in length by the operating system, traditionally to 108 bytes.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; は通常、ローカルファイルシステム内のファイルパス名です。これは、オペレーティングシステムによって長さが制限され、従来は108バイトに制限されていました。</target>
        </trans-unit>
        <trans-unit id="cda0f1fc082ed132d084fcbe398b3217550cc4a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt; is to specify the filename with full path.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; はファイル名をフルパスで指定します。</target>
        </trans-unit>
        <trans-unit id="79457058ab605835b44c5ae17cfd2019588440d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt; must be &lt;code&gt;iodata()&lt;/code&gt;. Returns an &lt;code&gt;fd()&lt;/code&gt;, which lets module &lt;code&gt;file&lt;/code&gt; operate on the data in-memory as if it is a file.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; は &lt;code&gt;iodata()&lt;/code&gt; である必要があります。 &lt;code&gt;fd()&lt;/code&gt; を返します。これにより、モジュール &lt;code&gt;file&lt;/code&gt; がメモリ内のデータをファイルであるかのように操作できます。</target>
        </trans-unit>
        <trans-unit id="8983391af633a94df341da261f6cbd2f2c0151ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;File&lt;/code&gt;, a string, is to point out a file. The contents of this file are included as is, at the position of the directive.</source>
          <target state="translated">&lt;code&gt;File&lt;/code&gt; 文字列であるFileは、ファイルを示すためのものです。このファイルの内容は、ディレクティブの位置にそのまま含まれます。</target>
        </trans-unit>
        <trans-unit id="52aaafca45eec4b39c954930b1ec2ab029d6a466" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileInArchive&lt;/code&gt; is the name that the file has in the archive.</source>
          <target state="translated">&lt;code&gt;FileInArchive&lt;/code&gt; は、ファイルがアーカイブに持つ名前です。</target>
        </trans-unit>
        <trans-unit id="f01ba718586995fdbaf91aba34ccf57143096114" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileList&lt;/code&gt; is a list of files, with paths relative to the current directory, which are stored with this path in the archive. Files can also be specified with data in binaries to create an archive directly from data.</source>
          <target state="translated">&lt;code&gt;FileList&lt;/code&gt; は、現在のディレクトリからの相対パスを持つファイルのリストであり、このパスとともにアーカイブに保存されます。ファイルをバイナリのデータで指定して、データから直接アーカイブを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="15e908c4881b2418215c3f278d0410bbeb2caf5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FileName&lt;/code&gt; specified in &lt;code&gt;{spawn_executable, FileName}&lt;/code&gt; does not point out an existing file.</source>
          <target state="translated">&lt;code&gt;FileName&lt;/code&gt; で指定 &lt;code&gt;{spawn_executable, FileName}&lt;/code&gt; 既存のファイルを指していません。</target>
        </trans-unit>
        <trans-unit id="6c24d6fd89b3bc4897a714ee9609af21c0617d3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filename&lt;/code&gt; can also be a file in an archive, for example, &lt;code&gt;$OTPROOT/lib/&lt;/code&gt;&lt;code&gt;mnesia-4.4.7.ez/mnesia-4.4.7/ebin/&lt;/code&gt;&lt;code&gt;mnesia.beam&lt;/code&gt;. For information about archive files, see &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; は、たとえば &lt;code&gt;$OTPROOT/lib/&lt;/code&gt; &lt;code&gt;mnesia-4.4.7.ez/mnesia-4.4.7/ebin/&lt;/code&gt; &lt;code&gt;mnesia.beam&lt;/code&gt; のように、アーカイブ内のファイルにすることもできます。アーカイブファイルについては、 &lt;code&gt;code(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="94b3e298031bd950b21aa6bfb19cc97878d1fe90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filename&lt;/code&gt; can also be a file in an archive, for example, &lt;code&gt;$OTPROOT/lib/&lt;/code&gt;&lt;code&gt;mnesia-4.4.7.ez/mnesia-4.4.7/ebin/&lt;/code&gt;&lt;code&gt;mnesia&lt;/code&gt;. For information about archive files, see &lt;code&gt;code(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; は、アーカイブ内のファイルにすることもできます（例： &lt;code&gt;$OTPROOT/lib/&lt;/code&gt; &lt;code&gt;mnesia-4.4.7.ez/mnesia-4.4.7/ebin/&lt;/code&gt; &lt;code&gt;mnesia&lt;/code&gt; )。アーカイブファイルについては、 &lt;code&gt;code(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="654f6df19303c54e7536f0874062314f5d2219af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filename&lt;/code&gt; has an improper type, such as tuple.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; タプルなどの不適切なタイプがあります。</target>
        </trans-unit>
        <trans-unit id="42fe7efff8716a4e574a991225143102236c859c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filename&lt;/code&gt; is a &lt;code&gt;binary()&lt;/code&gt; with characters coded in ISO Latin-1 and the VM was started with parameter &lt;code&gt;+fnue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; は、ISO Latin-1でコード化された文字を持つ &lt;code&gt;binary()&lt;/code&gt; であり、VMはパラメーター &lt;code&gt;+fnue&lt;/code&gt; で開始されました。</target>
        </trans-unit>
        <trans-unit id="97024a4463ac75828cc2da5412449ff8ffc5685a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filename&lt;/code&gt; is an absolute filename.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; は絶対ファイル名です。</target>
        </trans-unit>
        <trans-unit id="6ba36da9dd2c338f97a2a41e7a76ef5c5f6a83a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filename&lt;/code&gt; specifies the name of the file to be read.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; は、読み取るファイルの名前を指定します。</target>
        </trans-unit>
        <trans-unit id="aeefebadc4604158bfd383d202ee363474c027af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filter =&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;logger#type-filter&quot;&gt; logger:filter()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Filter =&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;logger#type-filter&quot;&gt; logger:filter()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b19b1f33a58c8f2d3e565492064dd891202ecc8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Filter =&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;logger#type-filter&quot;&gt;logger:filter()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Filter =&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;logger#type-filter&quot;&gt;logger:filter()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3d40807e1660aff03298451fd71e09c2fa26821d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FilterDefault&lt;/code&gt; specifies the behaviour if all primary filters return &lt;code&gt;ignore&lt;/code&gt;, see section &lt;code&gt;&lt;a href=&quot;#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FilterDefault&lt;/code&gt; は、すべてのプライマリフィルターが &lt;code&gt;ignore&lt;/code&gt; 返す場合の動作を指定します。 &lt;code&gt;&lt;a href=&quot;#filters&quot;&gt;Filters&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="5121cd209c9d2b329246413e804ef6fc12be8386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FilterId =&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;logger#type-filter_id&quot;&gt; logger:filter_id()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FilterId =&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;logger#type-filter_id&quot;&gt; logger:filter_id()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cca2500f3079dc458e423376af9a6d6d4bb0c3a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FilterId =&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;logger#type-filter_id&quot;&gt;logger:filter_id()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FilterId =&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;logger#type-filter_id&quot;&gt;logger:filter_id()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fccd3dbe4676b0a90aee1459549ce191f946f8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FingerPrint&lt;/code&gt; - the fingerprint of the Host Key as &lt;code&gt;public_key:ssh_hostkey_fingerprint/1&lt;/code&gt; calculates it.</source>
          <target state="translated">&lt;code&gt;FingerPrint&lt;/code&gt; - &lt;code&gt;public_key:ssh_hostkey_fingerprint/1&lt;/code&gt; としてのホストキーのフィンガープリントがそれを計算します。</target>
        </trans-unit>
        <trans-unit id="dfce23f6455d8b249b66646a23b1643d74565af2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;First&lt;/code&gt; - Scrolls &lt;code&gt;this&lt;/code&gt; viewer to the first &lt;code&gt;Event&lt;/code&gt; in the &lt;code&gt;Collector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;First&lt;/code&gt; -スクロール &lt;code&gt;this&lt;/code&gt; 最初のビューア &lt;code&gt;Event&lt;/code&gt; で &lt;code&gt;Collector&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3916f6472ea0770f8ac231a8943f813ed3ad3d48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;First&lt;/code&gt; - Scrolls&lt;code&gt;all&lt;/code&gt; viewers to the first &lt;code&gt;Event&lt;/code&gt; in the &lt;code&gt;Collector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;First&lt;/code&gt; に、 &lt;code&gt;all&lt;/code&gt; ビューアを &lt;code&gt;Collector&lt;/code&gt; 最初の &lt;code&gt;Event&lt;/code&gt; にスクロールします。</target>
        </trans-unit>
        <trans-unit id="727595022c43e76145e4a7a9e547ab7c516d1c71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FixationTime&lt;/code&gt; corresponds to the result returned by &lt;code&gt; erlang:monotonic_time/0&lt;/code&gt; at the time of fixation. The use of &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; is &lt;code&gt; time warp safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FixationTime&lt;/code&gt; は、固定時に &lt;code&gt; erlang:monotonic_time/0&lt;/code&gt; によって返される結果に対応します。 &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; の使用は、 &lt;code&gt; time warp safe&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8c6531564b42bfd1410b47590c659982dc4d9ef9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FixationTime&lt;/code&gt; corresponds to the result returned by &lt;code&gt; erlang:timestamp/0&lt;/code&gt; at the time of fixation. Notice that when the system uses single or multi &lt;code&gt;time warp modes&lt;/code&gt; this can produce strange results, as the use of &lt;code&gt;safe_fixed&lt;/code&gt; is not &lt;code&gt; time warp safe&lt;/code&gt;. Time warp safe code must use &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;FixationTime&lt;/code&gt; は、固定時に &lt;code&gt; erlang:timestamp/0&lt;/code&gt; によって返される結果に対応します。システムがシングルまたはマルチ &lt;code&gt;time warp modes&lt;/code&gt; 使用する場合、 &lt;code&gt;safe_fixed&lt;/code&gt; の使用は &lt;code&gt; time warp safe&lt;/code&gt; はないため、これにより奇妙な結果が生じる可能性があることに注意してください。タイムワープセーフコードでは、代わりに &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="20bdd452174ccfd1d93e9a3a368a4b0e1a78efa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FixationTime&lt;/code&gt; corresponds to the result returned by &lt;code&gt;erlang:monotonic_time/0&lt;/code&gt; at the time of fixation. The use of &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; is &lt;code&gt;time warp safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FixationTime&lt;/code&gt; は、固定時に &lt;code&gt;erlang:monotonic_time/0&lt;/code&gt; によって返された結果に対応します。 &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; の使用は &lt;code&gt;time warp safe&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ac1cbee501972be0973f0466d970d13eaf1fabd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FixationTime&lt;/code&gt; corresponds to the result returned by &lt;code&gt;erlang:timestamp/0&lt;/code&gt; at the time of fixation. Notice that when the system uses single or multi &lt;code&gt;time warp modes&lt;/code&gt; this can produce strange results, as the use of &lt;code&gt;safe_fixed&lt;/code&gt; is not &lt;code&gt;time warp safe&lt;/code&gt;. Time warp safe code must use &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;FixationTime&lt;/code&gt; は、固定時に &lt;code&gt;erlang:timestamp/0&lt;/code&gt; によって返された結果に対応しています。 &lt;code&gt;safe_fixed&lt;/code&gt; の使用は &lt;code&gt;time warp safe&lt;/code&gt; はないため、システムがシングル &lt;code&gt;time warp modes&lt;/code&gt; またはマルチタイムワープモードを使用すると、奇妙な結果が生じる可能性があることに注意してください。タイムワープセーフコードでは、代わりに &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4abbc09a95e6e2fb444e3f43c08d01be72db1006" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FixedAtTime&lt;/code&gt; corresponds to the result returned by &lt;code&gt; erlang:monotonic_time/0&lt;/code&gt; at the time of fixation. The use of &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; is &lt;code&gt; time warp safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FixedAtTime&lt;/code&gt; は、固定時に &lt;code&gt; erlang:monotonic_time/0&lt;/code&gt; によって返される結果に対応します。 &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; の使用は、 &lt;code&gt; time warp safe&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cfbc4ccee91b579cc31889bfdb78a788cae6c7d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FixedAtTime&lt;/code&gt; corresponds to the result returned by &lt;code&gt; erlang:timestamp/0&lt;/code&gt; at the time of fixation. Notice that when the system uses single or multi &lt;code&gt;time warp modes&lt;/code&gt;, this can produce strange results. This is because the use of &lt;code&gt;safe_fixed&lt;/code&gt; is not &lt;code&gt; time warp safe&lt;/code&gt;. Time warp safe code must use &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;FixedAtTime&lt;/code&gt; は、固定時に &lt;code&gt; erlang:timestamp/0&lt;/code&gt; によって返される結果に対応します。システムがシングルまたはマルチ &lt;code&gt;time warp modes&lt;/code&gt; 使用する場合、これは奇妙な結果を生み出す可能性があることに注意してください。これは、 &lt;code&gt;safe_fixed&lt;/code&gt; の使用が &lt;code&gt; time warp safe&lt;/code&gt; はないためです。タイムワープセーフコードでは、代わりに &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="bac70ea64e64bf2a743f17215cfa2011f64ecfb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FixedAtTime&lt;/code&gt; corresponds to the result returned by &lt;code&gt;erlang:monotonic_time/0&lt;/code&gt; at the time of fixation. The use of &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; is &lt;code&gt;time warp safe&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FixedAtTime&lt;/code&gt; は、固定時に &lt;code&gt;erlang:monotonic_time/0&lt;/code&gt; によって返された結果に対応します。 &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; の使用は &lt;code&gt;time warp safe&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="38a3580ed8c764ae642222deca36fe3233f44b2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FixedAtTime&lt;/code&gt; corresponds to the result returned by &lt;code&gt;erlang:timestamp/0&lt;/code&gt; at the time of fixation. Notice that when the system uses single or multi &lt;code&gt;time warp modes&lt;/code&gt;, this can produce strange results. This is because the use of &lt;code&gt;safe_fixed&lt;/code&gt; is not &lt;code&gt;time warp safe&lt;/code&gt;. Time warp safe code must use &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;FixedAtTime&lt;/code&gt; は、固定時に &lt;code&gt;erlang:timestamp/0&lt;/code&gt; によって返された結果に対応します。システムがシングルまたはマルチ &lt;code&gt;time warp modes&lt;/code&gt; 使用している場合、これは奇妙な結果をもたらす可能性があることに注意してください。これは、 &lt;code&gt;safe_fixed&lt;/code&gt; の使用が &lt;code&gt;time warp safe&lt;/code&gt; はないためです。タイムワープセーフコードでは、代わりに &lt;code&gt;safe_fixed_monotonic_time&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="3b8b5bcff670e023b3f56b28c05d29285b946bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FlagList&lt;/code&gt; can contain any number of the following flags (the &quot;message tags&quot; refers to the list of &lt;code&gt;&lt;a href=&quot;#trace_3_trace_messages&quot;&gt; trace messages&lt;/a&gt;&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;FlagList&lt;/code&gt; には、次のフラグをいくつでも含めることができます（「メッセージタグ」は &lt;code&gt;&lt;a href=&quot;#trace_3_trace_messages&quot;&gt; trace messages&lt;/a&gt;&lt;/code&gt; リストを指します）。</target>
        </trans-unit>
        <trans-unit id="ab55e5fceeef61a22f8303a5a17718a88e845d67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FlagList&lt;/code&gt; can contain any number of the following flags (the &quot;message tags&quot; refers to the list of &lt;code&gt;&lt;a href=&quot;#trace_3_trace_messages&quot;&gt;trace messages&lt;/a&gt;&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;FlagList&lt;/code&gt; には、次のフラグをいくつでも含めることができます（「メッセージタグ」は、 &lt;code&gt;&lt;a href=&quot;#trace_3_trace_messages&quot;&gt;trace messages&lt;/a&gt;&lt;/code&gt; リストを指します）。</target>
        </trans-unit>
        <trans-unit id="a766d82c8283e33c538a96ac32b0825a4d7ea838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Flags&lt;/code&gt; can be a single atom, or a list of flags. The available flags are:</source>
          <target state="translated">&lt;code&gt;Flags&lt;/code&gt; は単一のアトム、またはフラグのリストです。使用可能なフラグは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9b89cc2f9a82e19633b4f3e1b5035b22bba39537" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Flags&lt;/code&gt; consist of &lt;code&gt;NumberOfAtomCacheRefs/2+1&lt;/code&gt; bytes, unless &lt;code&gt;NumberOfAtomCacheRefs&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;NumberOfAtomCacheRefs&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;Flags&lt;/code&gt; and &lt;code&gt;AtomCacheRefs&lt;/code&gt; are omitted. Each atom cache reference has a half byte flag field. Flags corresponding to a specific &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; are located in flag byte number &lt;code&gt;AtomCacheReferenceIndex/2&lt;/code&gt;. Flag byte 0 is the first byte after the &lt;code&gt;NumberOfAtomCacheRefs&lt;/code&gt; byte. Flags for an even &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; are located in the least significant half byte and flags for an odd &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; are located in the most significant half byte.</source>
          <target state="translated">&lt;code&gt;Flags&lt;/code&gt; から成る &lt;code&gt;NumberOfAtomCacheRefs/2+1&lt;/code&gt; ない限り、バイト &lt;code&gt;NumberOfAtomCacheRefs&lt;/code&gt; である &lt;code&gt;0&lt;/code&gt; 。 &lt;code&gt;NumberOfAtomCacheRefs&lt;/code&gt; が &lt;code&gt;0&lt;/code&gt; の場合、 &lt;code&gt;Flags&lt;/code&gt; と &lt;code&gt;AtomCacheRefs&lt;/code&gt; は省略されます。各Atomキャッシュ参照には、ハーフバイトのフラグフィールドがあります。特定の &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; に対応するフラグは、フラグバイト番号 &lt;code&gt;AtomCacheReferenceIndex/2&lt;/code&gt; にあります。フラグバイト0は、 &lt;code&gt;NumberOfAtomCacheRefs&lt;/code&gt; バイトの後の最初のバイトです。でものためのフラグ &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; が奇数のための最下位半バイトとフラグに位置しています &lt;code&gt;AtomCacheReferenceIndex&lt;/code&gt; 最上位のハーフバイトにあります。</target>
        </trans-unit>
        <trans-unit id="b5430cad4533990dd8600c96776d8000ed7c9460" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Flags&lt;/code&gt; is a list containing all the trace flags to be enabled, currently this is only &lt;code&gt;return_trace&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Flags&lt;/code&gt; は、有効にするすべてのトレースフラグを含むリスト &lt;code&gt;return_trace&lt;/code&gt; 。現在、これはreturn_traceのみです。</target>
        </trans-unit>
        <trans-unit id="1aeb4da61b8aca40f2fea0ab6c9b8a82e9537522" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FlagsHigh&lt;/code&gt; are the high capability flags (bit 33-64) of node &lt;code&gt;A&lt;/code&gt; as a 32-bit big endian integer. &lt;code&gt;Creation&lt;/code&gt; is the incarnation identifier of node &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FlagsHigh&lt;/code&gt; は、32ビットのビッグエンディアン整数としてのノード &lt;code&gt;A&lt;/code&gt; の高機能フラグ（ビット33〜64）です。 &lt;code&gt;Creation&lt;/code&gt; は、ノード &lt;code&gt;A&lt;/code&gt; のインカネーション識別子です。</target>
        </trans-unit>
        <trans-unit id="b548c2b0202d75a4ea5929b9b688a38ee3c4d2a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Flush&lt;/code&gt; can be set to &lt;code&gt;finish&lt;/code&gt; immediately after &lt;code&gt;&lt;a href=&quot;#deflateInit-1&quot;&gt;deflateInit&lt;/a&gt;&lt;/code&gt; if all compression is to be done in one step.</source>
          <target state="translated">&lt;code&gt;Flush&lt;/code&gt; すべての圧縮を1つのステップで行う場合は、 &lt;code&gt;&lt;a href=&quot;#deflateInit-1&quot;&gt;deflateInit&lt;/a&gt;&lt;/code&gt; の直後にフラッシュを &lt;code&gt;finish&lt;/code&gt; するように設定できます。</target>
        </trans-unit>
        <trans-unit id="afe6f39081ff14f334873100abaa64fb240efe73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ForeignKey&lt;/code&gt; can either be the atom &lt;code&gt;undefined&lt;/code&gt; or the tuple &lt;code&gt;{ForeignTab, Attr}&lt;/code&gt;, where &lt;code&gt;Attr&lt;/code&gt; denotes an attribute that is to be interpreted as a key in another fragmented table named &lt;code&gt;ForeignTab&lt;/code&gt;. &lt;code&gt;Mnesia&lt;/code&gt; ensures that the number of fragments in this table and in the foreign table are always the same.</source>
          <target state="translated">&lt;code&gt;ForeignKey&lt;/code&gt; は、 &lt;code&gt;undefined&lt;/code&gt; のアトムまたはタプル &lt;code&gt;{ForeignTab, Attr}&lt;/code&gt; いずれかです。ここで、 &lt;code&gt;Attr&lt;/code&gt; は、 &lt;code&gt;ForeignTab&lt;/code&gt; という名前の別のフラグメント化されたテーブルでキーとして解釈される属性を示します。 &lt;code&gt;Mnesia&lt;/code&gt; は、このテーブルと外部テーブルのフラグメントの数が常に同じであることを保証します。</target>
        </trans-unit>
        <trans-unit id="e63eafd75f32c95bd3f77e1afc3853c01a0ddb22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Format&lt;/code&gt; and &lt;code&gt;Args&lt;/code&gt; are as in &lt;code&gt;io:format(Format, Args)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Format&lt;/code&gt; と &lt;code&gt;Args&lt;/code&gt; は &lt;code&gt;io:format(Format, Args)&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="4a0883fe37562007d1d3a4d6b0005226fdfb9ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Format&lt;/code&gt; can contain the following:</source>
          <target state="translated">&lt;code&gt;Format&lt;/code&gt; には以下を含めることができます。</target>
        </trans-unit>
        <trans-unit id="c6abb169332994aae43fe283ca0a97f1b61cf110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Format&lt;/code&gt; is the log format as specified by the &lt;code&gt;open/1&lt;/code&gt; option &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Format&lt;/code&gt; は、 &lt;code&gt;open/1&lt;/code&gt; オプション &lt;code&gt;format&lt;/code&gt; 指定されたログ形式です。</target>
        </trans-unit>
        <trans-unit id="3325f2fd1fea5fe089ba25e0480a736da6628eb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FormatFun&lt;/code&gt; is called with an argument that describes the selected objects based on optimizations done as a result of analyzing the filters of the QLC where the call to &lt;code&gt;qlc:table/2&lt;/code&gt; occurs. The argument can have the following values:</source>
          <target state="translated">&lt;code&gt;FormatFun&lt;/code&gt; は、 &lt;code&gt;qlc:table/2&lt;/code&gt; への呼び出しが発生するQLCのフィルターを分析した結果として行われた最適化に基づいて、選択されたオブジェクトを記述する引数で呼び出されます。引数には次の値を指定できます。</target>
        </trans-unit>
        <trans-unit id="5bad635e6b2049344cb0a556243127855c6897e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FormatStr&lt;/code&gt; is a format specification string. The valid format specifiers are as follows:</source>
          <target state="translated">&lt;code&gt;FormatStr&lt;/code&gt; はフォーマット指定文字列です。有効なフォーマット指定子は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7f45a6a00a687a9621fb988f367495632d4ef50e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FormatterConfig =&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;logger#type-formatter_config&quot;&gt; logger:formatter_config()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FormatterConfig =&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;logger#type-formatter_config&quot;&gt; logger:formatter_config()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acc09b3f1d98be6e6c723613294a62f460f67edc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FormatterConfig =&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;logger#type-formatter_config&quot;&gt;logger:formatter_config()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;FormatterConfig =&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;logger#type-formatter_config&quot;&gt;logger:formatter_config()&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fe49f2625b49095774c4b3f34d48f2f3d4e63f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Forward from this event&lt;/code&gt; - Set this event to be the first event in the viewer and change its display mode to be enter forward search mode. The actor of this event (from, to or both) will be added to the list of selected actors.</source>
          <target state="translated">&lt;code&gt;Forward from this event&lt;/code&gt; -このイベントをビューアの最初のイベントに設定し、その表示モードを転送して検索モードに切り替えます。このイベントのアクター（from、to、またはその両方）が、選択されたアクターのリストに追加されます。</target>
        </trans-unit>
        <trans-unit id="b489650312c7e126f44cf77ea64a5765f5c3faa3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FreeBlocks&lt;/code&gt; is a histogram of the free block sizes in the carrier.</source>
          <target state="translated">&lt;code&gt;FreeBlocks&lt;/code&gt; は、キャリアの空きブロックサイズのヒストグラムです。</target>
        </trans-unit>
        <trans-unit id="0ffbabf5620229589e99c43368e2b1ae654c8a44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FrequencyFun/0&lt;/code&gt; returns a fun/1 which is supposed to take a list of items as input, and return an iolist wich will be printed as the table. Per default, the number of each item is counted and the percentage is printed for each. The list [a,b,a,a,c] could for example return</source>
          <target state="translated">&lt;code&gt;FrequencyFun/0&lt;/code&gt; は、入力としてアイテムのリストを受け取ることになっているfun / 1を返し、テーブルとして出力されるiolistを返します。デフォルトでは、各アイテムの数がカウントされ、それぞれのパーセンテージが印刷されます。リスト[a、b、a、a、c]は、たとえば、</target>
        </trans-unit>
        <trans-unit id="858af00f56c830e0f6201e0701ca43078a82a4dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; is a tuple &lt;code&gt;{Pid,Tag}&lt;/code&gt;, where &lt;code&gt;Pid&lt;/code&gt; is the pid of the client and &lt;code&gt;Tag&lt;/code&gt; is a unique tag.</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; はタプル &lt;code&gt;{Pid,Tag}&lt;/code&gt; であり、 &lt;code&gt;Pid&lt;/code&gt; はクライアントのpidで、 &lt;code&gt;Tag&lt;/code&gt; は一意のタグです。</target>
        </trans-unit>
        <trans-unit id="4da43e84b728d0ab88c73f25ac9bf0df860a69b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; is the &lt;code&gt;pid()&lt;/code&gt; of the client, the process which the I/O server sends the I/O reply to.</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; はクライアントの &lt;code&gt;pid()&lt;/code&gt; であり、I / OサーバーがI / O応答を送信するプロセスです。</target>
        </trans-unit>
        <trans-unit id="2b1f4ccff7fd1c2be22fd8ff1cac5093ef20d22e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; is the process identifier of the process that sent the exit signal. See also &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt; process_flag/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; は、終了シグナルを送信したプロセスのプロセスIDです。 &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt; process_flag/2&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="9c7f6ac08d5fda3746b5d6db74f30d09e88cb9f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; is the process identifier of the process that sent the exit signal. See also &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; は、終了シグナルを送信したプロセスのプロセスIDです。 &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="246bc05207cbf8bd6c7479915606145f0926d296" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; is the source &lt;code&gt;Address&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; は送信元 &lt;code&gt;Address&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="11cf098b0a53d8abd8a4cfc8b9a4662e3266372c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; must be the term from argument &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;{call,From}&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;. A reply or multiple replies canalso be sent using one or several &lt;code&gt;&lt;a href=&quot;#type-reply_action&quot;&gt;reply_action()&lt;/a&gt;&lt;/code&gt;s from a &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; は、引数 &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;{call,From}&lt;/a&gt;&lt;/code&gt; から &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; までの用語である必要があり&lt;strong&gt;ます&lt;/strong&gt;。 &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; から1つまたは複数の &lt;code&gt;&lt;a href=&quot;#type-reply_action&quot;&gt;reply_action()&lt;/a&gt;&lt;/code&gt; を使用して、1つまたは複数の応答を送信することもでき&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ed9a9c60c9eaabce67d8e427416a2b9bf96cc361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;From&lt;/code&gt; must be the term from argument &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;{call,From}&lt;/a&gt;&lt;/code&gt; to the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt;. A reply or multiple replies canalso be sent using one or several &lt;code&gt;&lt;a href=&quot;#type-reply_action&quot;&gt;reply_action()&lt;/a&gt;&lt;/code&gt;s from a &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; は、引数 &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;{call,From}&lt;/a&gt;&lt;/code&gt; から &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; までの項でなければなりません。 &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; から1つまたは複数の &lt;code&gt;&lt;a href=&quot;#type-reply_action&quot;&gt;reply_action()&lt;/a&gt;&lt;/code&gt; を使用して、1つまたは複数の応答を送信することもできます。</target>
        </trans-unit>
        <trans-unit id="e81e455143f78b82e7174a64cc50f4bc85dddea9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Full&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on whether the halt log is full or not.</source>
          <target state="translated">&lt;code&gt;Full&lt;/code&gt; は、停止ログがいっぱいかどうかによって、 &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="72997ed49915bc66f49e462b9b91b358e760c9f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fun(BackupItems, Acc)&lt;/code&gt; is applied to each item in the backup. The &lt;code&gt;Fun&lt;/code&gt; must return a tuple &lt;code&gt;{BackupItems,NewAcc}&lt;/code&gt;, where &lt;code&gt;BackupItems&lt;/code&gt; is a list of valid backup items, and &lt;code&gt;NewAcc&lt;/code&gt; is a new accumulator value. The returned backup items are written in the target backup.</source>
          <target state="translated">&lt;code&gt;Fun(BackupItems, Acc)&lt;/code&gt; は、バックアップの各アイテムに適用されます。 &lt;code&gt;Fun&lt;/code&gt; タプル返さなければならない &lt;code&gt;{BackupItems,NewAcc}&lt;/code&gt; 、 &lt;code&gt;BackupItems&lt;/code&gt; は、有効なバックアップ項目のリストであり、および &lt;code&gt;NewAcc&lt;/code&gt; は新しいアキュムレータ値です。返されたバックアップ項目は、ターゲットバックアップに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="dd8b302768132e28d9afc11cd8ffe3df3a12c15c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fun(BackupItems, Acc)&lt;/code&gt; is applied to each item in the backup. The Fun must return a tuple &lt;code&gt;{ValGoodBackupItems, NewAcc}&lt;/code&gt;, where &lt;code&gt;ValidBackupItems&lt;/code&gt; is a list of valid backup items. &lt;code&gt;NewAcc&lt;/code&gt; is a new accumulator value. The &lt;code&gt;ValidBackupItems&lt;/code&gt; are written to the target backup with the function &lt;code&gt;TargetMod:write/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun(BackupItems, Acc)&lt;/code&gt; は、バックアップの各アイテムに適用されます。Funはタプル &lt;code&gt;{ValGoodBackupItems, NewAcc}&lt;/code&gt; 返す必要があります。ここで、 &lt;code&gt;ValidBackupItems&lt;/code&gt; は有効なバックアップアイテムのリストです。 &lt;code&gt;NewAcc&lt;/code&gt; は新しいアキュムレータ値です。 &lt;code&gt;ValidBackupItems&lt;/code&gt; が機能して、ターゲットのバックアップに書き込まれる &lt;code&gt;TargetMod:write/2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d85d80aac9c6c3eade15be45b9b3d443c49a8bd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fun&lt;/code&gt; is not a a fun of zero arity.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; は、ゼロアリティの楽しみではありません。</target>
        </trans-unit>
        <trans-unit id="77fc7d2a76fccd443d160f69bcb9ce857a3f0356" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fun&lt;/code&gt; is not a fun of arity zero.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; はアリティゼロの楽しみではありません。</target>
        </trans-unit>
        <trans-unit id="0cc04794ecae87d1f875afc20ca2b99c36c9172c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Fun&lt;/code&gt; is not a fun of zero arity.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; はゼロアリティの楽しみではありません。</target>
        </trans-unit>
        <trans-unit id="a33923e560aab8b1743a1b221f4e6709cdb96b4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Func = atom()&lt;/code&gt;, name of test case or configuration function.</source>
          <target state="translated">&lt;code&gt;Func = atom()&lt;/code&gt; 、テストケースまたは構成関数の名前。</target>
        </trans-unit>
        <trans-unit id="bf4883978cd9c277741ccd630ad38d0b56a78028" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Func&lt;/code&gt; is a fun specifying a (user-defined) function used to format trace output. For each system event, the format function is called as &lt;code&gt;Func(Dev, Event, Info)&lt;/code&gt;, where:</source>
          <target state="translated">&lt;code&gt;Func&lt;/code&gt; は、トレース出力のフォーマットに使用される（ユーザー定義の）関数を指定するfunです。システムイベントごとに、フォーマット関数は &lt;code&gt;Func(Dev, Event, Info)&lt;/code&gt; として呼び出されます。ここで、</target>
        </trans-unit>
        <trans-unit id="f6cb1a650c1760c47dbeeb3b299ab1f0404cd9a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Func&lt;/code&gt; is called whenever a system event is generated. This function is to return &lt;code&gt;done&lt;/code&gt;, or a new &lt;code&gt;Func&lt;/code&gt; state. In the first case, the function is removed. It is also removed if the function fails. If one debug function should be installed more times, a unique &lt;code&gt;FuncId&lt;/code&gt; must be specified for each installation.</source>
          <target state="translated">&lt;code&gt;Func&lt;/code&gt; は、システムイベントが生成されるたびに呼び出されます。この関数は、 &lt;code&gt;done&lt;/code&gt; または新しい &lt;code&gt;Func&lt;/code&gt; 状態を返すためのものです。最初のケースでは、関数は削除されます。関数が失敗した場合も削除されます。1つのデバッグ機能をさらにインストールする必要がある場合は、インストールごとに一意の &lt;code&gt;FuncId&lt;/code&gt; を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="cb64f2a167bef6b030c12c50cf8f7f9a0cd556b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FuncName = atom()&lt;/code&gt;, the name of the test case or configuration function.</source>
          <target state="translated">&lt;code&gt;FuncName = atom()&lt;/code&gt; 、テストケースまたは構成関数の名前。</target>
        </trans-unit>
        <trans-unit id="afb24ef245f4b1820eff0fa09024dc07377a1a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;FuncSpec&lt;/code&gt; is the name of the function on the form &lt;code&gt;{Module,Function}&lt;/code&gt; or a fun, and &lt;code&gt;Arguments&lt;/code&gt; is a list of the &lt;strong&gt;evaluated&lt;/strong&gt; arguments. The function handler returns the value of the function. To signal an error, the function handler calls &lt;code&gt;exit/1&lt;/code&gt; with a suitable exit value.</source>
          <target state="translated">&lt;code&gt;FuncSpec&lt;/code&gt; は、 &lt;code&gt;{Module,Function}&lt;/code&gt; またはfun の形式の関数の名前であり、 &lt;code&gt;Arguments&lt;/code&gt; は&lt;strong&gt;評価された&lt;/strong&gt;引数のリストです。関数ハンドラは、関数の値を返します。エラーを通知するために、関数ハンドラーは適切な終了値を指定して &lt;code&gt;exit/1&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="bc01016d456f7d99de92bdc84c2faae2e27d0986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt; - First interpreted function called by the process.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; -プロセスによって呼び出される最初に解釈された関数。</target>
        </trans-unit>
        <trans-unit id="f3add1a4e7e40a8886f11204bcf2efef2ba2a626" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt; is not an atom.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; はアトムではありません。</target>
        </trans-unit>
        <trans-unit id="9235827fc16ed656a082fac9cc5738fed6f5c619" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt; is the name of the funcion used.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; は、使用される関数の名前です。</target>
        </trans-unit>
        <trans-unit id="8220b4b0344c2eb20c74bb4ca48b53f4b0f97d1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Function&lt;/code&gt; is the name of the function used. This tuple always exists if OS monotonic time is available to the runtime system.</source>
          <target state="translated">&lt;code&gt;Function&lt;/code&gt; は、使用される関数の名前です。このタプルは、ランタイムシステムがOSの単調時間を利用できる場合は常に存在します。</target>
        </trans-unit>
        <trans-unit id="05418e524cbb09c73458294c0d29172a224cae6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Functions&lt;/code&gt; is a list &lt;code&gt;[Name1/Arity1, ..., NameN/ArityN]&lt;/code&gt;, where each &lt;code&gt;NameI&lt;/code&gt; is an atom and &lt;code&gt;ArityI&lt;/code&gt; an integer.</source>
          <target state="translated">&lt;code&gt;Functions&lt;/code&gt; はリスト &lt;code&gt;[Name1/Arity1, ..., NameN/ArityN]&lt;/code&gt; であり、各 &lt;code&gt;NameI&lt;/code&gt; はアトム、 &lt;code&gt;ArityI&lt;/code&gt; は整数です。</target>
        </trans-unit>
        <trans-unit id="091a313dec4e89a6952d01a06baa35774182e0a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Functions&lt;/code&gt; is a list of the names of the functions that are defined in &lt;code&gt;Forms&lt;/code&gt; (cf. &lt;code&gt;analyze_function/1&lt;/code&gt;). We do not guarantee that each name occurs at most once in the list. The order of listing is not defined.</source>
          <target state="translated">&lt;code&gt;Functions&lt;/code&gt; は、 &lt;code&gt;Forms&lt;/code&gt; 定義された関数の名前のリストです（cf. &lt;code&gt;analyze_function/1&lt;/code&gt; ）。各名前がリストに1回だけ出現することを保証するものではありません。リストの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="55bec2044b1812002f51002dc8c3ec8bd1441d54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GCInfo&lt;/code&gt; is a list containing miscellaneous detailed information about garbage collection for this process. The content of &lt;code&gt;GCInfo&lt;/code&gt; can be changed without prior notice. For details about the meaning of each item, see &lt;code&gt;&lt;a href=&quot;#gc_minor_start&quot;&gt;gc_minor_start&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;GCInfo&lt;/code&gt; は、このプロセスのガベージコレクションに関するその他の詳細情報を含むリストです。 &lt;code&gt;GCInfo&lt;/code&gt; の内容は予告なく変更される場合があります。各項目の意味の詳細については、 &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#gc_minor_start&quot;&gt;gc_minor_start&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="a94d35b8d992867c565931dd5bfcc71efec71cc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GCInfo&lt;/code&gt; is a list containing miscellaneous information about garbage collection for this process. The content of &lt;code&gt;GCInfo&lt;/code&gt; can be changed without prior notice.</source>
          <target state="translated">&lt;code&gt;GCInfo&lt;/code&gt; は、このプロセスのガベージコレクションに関するその他の情報を含むリストです。 &lt;code&gt;GCInfo&lt;/code&gt; の内容は予告なく変更される場合があります。</target>
        </trans-unit>
        <trans-unit id="6d0cff4c6a16414ff0fa380ee763dae4522ab42c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GCResult&lt;/code&gt; informs about the result of the garbage collection request as follows:</source>
          <target state="translated">&lt;code&gt;GCResult&lt;/code&gt; は、ガベージコレクションリクエストの結果を次のように通知します。</target>
        </trans-unit>
        <trans-unit id="d033dbfb999811444c69ae083f6bafbf39665d87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GETCONF&lt;/code&gt; - &lt;code&gt;getconf&lt;/code&gt; system configuration inspection tool. &lt;code&gt;getconf&lt;/code&gt; is currently used for finding out large file support flags to use, and on Linux systems for finding out if we have an NPTL thread library or not.</source>
          <target state="translated">&lt;code&gt;GETCONF&lt;/code&gt; - &lt;code&gt;getconf&lt;/code&gt; システム構成検査ツール。 &lt;code&gt;getconf&lt;/code&gt; は現在、使用する大きなファイルサポートフラグを見つけるために使用されています。また、Linuxシステムでは、NPTLスレッドライブラリがあるかどうかを確認するために使用されています。</target>
        </trans-unit>
        <trans-unit id="d96c2d72912145042a1f8b0b88697441e91c1693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Geometry&lt;/code&gt; is the atom &lt;code&gt;rows&lt;/code&gt; or the atom &lt;code&gt;columns&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Geometry&lt;/code&gt; は、アトム &lt;code&gt;rows&lt;/code&gt; またはアトム &lt;code&gt;columns&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="41db00fc70c4cc4fd25ce41eeae52740d79118d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GetBin&lt;/code&gt; returns the file contents.</source>
          <target state="translated">&lt;code&gt;GetBin&lt;/code&gt; はファイルの内容を返します。</target>
        </trans-unit>
        <trans-unit id="af899557b5485ee8a659bae7a48fe52318540ac1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GetInfo&lt;/code&gt; is a fun that returns information about the file.</source>
          <target state="translated">&lt;code&gt;GetInfo&lt;/code&gt; は、ファイルに関する情報を返す楽しいものです。</target>
        </trans-unit>
        <trans-unit id="0a042eb638704cf85febfb9b9f33cc6b270bc1ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GotoPF(next_pf);&lt;/code&gt; transfers control to the next instruction.</source>
          <target state="translated">&lt;code&gt;GotoPF(next_pf);&lt;/code&gt; 制御を次の命令に移します。</target>
        </trans-unit>
        <trans-unit id="70528668dd45bd4358ef264cdfadedac21649261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Grammarfile&lt;/code&gt; is the file of declarations and grammar rules. Returns &lt;code&gt;ok&lt;/code&gt; upon success, or &lt;code&gt;error&lt;/code&gt; if there are errors. An Erlang file containing the parser is created if there are no errors. The options are:</source>
          <target state="translated">&lt;code&gt;Grammarfile&lt;/code&gt; は、宣言と文法規則のファイルです。成功すると &lt;code&gt;ok&lt;/code&gt; を返し、 &lt;code&gt;error&lt;/code&gt; 場合はエラーを返します。エラーがない場合、パーサーを含むErlangファイルが作成されます。オプションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d2972a5e03b6658dee110d1ae20784c4ee484f17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupDefs&lt;/code&gt; is what &lt;code&gt;&lt;a href=&quot;ct_suite#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; or the &lt;code&gt;post_groups/2&lt;/code&gt; hook returned, that is, a list of group definitions.</source>
          <target state="translated">&lt;code&gt;GroupDefs&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;ct_suite#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;post_groups/2&lt;/code&gt; フックが返したもの、つまりグループ定義のリストです。</target>
        </trans-unit>
        <trans-unit id="5e3d7c574b69ec6a5eb5d89575763cf6035660b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupDefs&lt;/code&gt; is what &lt;code&gt;&lt;a href=&quot;ct_suite#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; returned, that is, a list of group definitions.</source>
          <target state="translated">&lt;code&gt;GroupDefs&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;ct_suite#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; が返したもの、つまりグループ定義のリストです。</target>
        </trans-unit>
        <trans-unit id="8304d633e479fe26e2e73cc9ba66c3902f92e21f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupLeader&lt;/code&gt; is the group leader for the I/O of the process.</source>
          <target state="translated">&lt;code&gt;GroupLeader&lt;/code&gt; は、プロセスのI / Oのグループリーダーです。</target>
        </trans-unit>
        <trans-unit id="702e1905dbb2eeb7c346bf1d8abda306f5e06d38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupName = atom()&lt;/code&gt;, name of the group.</source>
          <target state="translated">&lt;code&gt;GroupName = atom()&lt;/code&gt; 、グループの名前。</target>
        </trans-unit>
        <trans-unit id="3829f0716499518b0456cc34fca233a8c0c42aaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupName = atom()&lt;/code&gt;, the name of the test case group.</source>
          <target state="translated">&lt;code&gt;GroupName = atom()&lt;/code&gt; 、テストケースグループの名前。</target>
        </trans-unit>
        <trans-unit id="1efe8e733ab27afd366a056770dc295f78ac9e8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupName = unknown | atom()&lt;/code&gt;, name of the group (unknown if init- or end function times out).</source>
          <target state="translated">&lt;code&gt;GroupName = unknown | atom()&lt;/code&gt; 、グループの名前（init関数またはend関数がタイムアウトした場合は不明）。</target>
        </trans-unit>
        <trans-unit id="257c27098bf44ca543ca9820c44d7858475202d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupName&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;GroupName&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="34ecca3ecc4b764ad96e5de668abdc3012485319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupName&lt;/code&gt; is the name of the group and must be unique within the test suite module. Groups can be nested, by including a group definition within the &lt;code&gt;GroupsAndTestCases&lt;/code&gt; list of another group. &lt;code&gt;Properties&lt;/code&gt; is the list of execution properties for the group. The possible values are as follows:</source>
          <target state="translated">&lt;code&gt;GroupName&lt;/code&gt; はグループの名前であり、テストスイートモジュール内で一意である必要があります。別のグループの &lt;code&gt;GroupsAndTestCases&lt;/code&gt; リスト内にグループ定義を含めることにより、グループをネストできます。 &lt;code&gt;Properties&lt;/code&gt; は、グループの実行プロパティのリストです。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2aabb2c54e4a34fd6596177f315ce302afd0d6c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GroupProperties = list()&lt;/code&gt;, list of execution properties for the group.</source>
          <target state="translated">&lt;code&gt;GroupProperties = list()&lt;/code&gt; 、グループの実行プロパティのリスト。</target>
        </trans-unit>
        <trans-unit id="431c0575241feae27ded99208e9c2e9b11d62721" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Groups&lt;/code&gt; is a list of tuples &lt;code&gt;{GroupName, Nodes}&lt;/code&gt;, specifying the name and nodes of the other global groups.</source>
          <target state="translated">&lt;code&gt;Groups&lt;/code&gt; は、他のグローバルグループの名前とノードを指定するタプル &lt;code&gt;{GroupName, Nodes}&lt;/code&gt; リストです。</target>
        </trans-unit>
        <trans-unit id="ada894a5c3364ec8538b5ee01e710b671a134ab6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HLen&lt;/code&gt; is less than 5.</source>
          <target state="translated">&lt;code&gt;HLen&lt;/code&gt; は5未満です。</target>
        </trans-unit>
        <trans-unit id="e8a29189f9bb348e68c14e107f6400375902e2fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Handler&lt;/code&gt; is the name of the callback module &lt;code&gt;Module&lt;/code&gt; or a tuple &lt;code&gt;{Module,Id}&lt;/code&gt;, where &lt;code&gt;Id&lt;/code&gt; is any term. The &lt;code&gt;{Module,Id}&lt;/code&gt; representation makes it possible to identify a specific event handler when many event handlers use the same callback module.</source>
          <target state="translated">&lt;code&gt;Handler&lt;/code&gt; コールバックモジュールの名前である &lt;code&gt;Module&lt;/code&gt; またはタプル &lt;code&gt;{Module,Id}&lt;/code&gt; 、 &lt;code&gt;Id&lt;/code&gt; は任意の用語です。 &lt;code&gt;{Module,Id}&lt;/code&gt; 表現は、多くのイベントハンドラは、同じコールバックモジュールを使用する場合、それが可能な特定のイベントハンドラを識別することができます。</target>
        </trans-unit>
        <trans-unit id="859a4a733c7a0c5ba6018d60e38c76d767305f83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Handler&lt;/code&gt; is typically the name of the callback module and &lt;code&gt;Args&lt;/code&gt; is an optional term (defaults to []) passed to the initialization callback function &lt;code&gt;Handler:init/1&lt;/code&gt;. The function returns &lt;code&gt;ok&lt;/code&gt; if successful.</source>
          <target state="translated">&lt;code&gt;Handler&lt;/code&gt; は通常、コールバックモジュールの名前で、 &lt;code&gt;Args&lt;/code&gt; は初期化コールバック関数 &lt;code&gt;Handler:init/1&lt;/code&gt; に渡されるオプションの用語（デフォルトは[]）です。関数は成功すると &lt;code&gt;ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2cf423aad5f4891c5d8255c1ce43cd3b620685e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HandlerId&lt;/code&gt; is a unique identifier which must be used in all subsequent calls referring to this handler.</source>
          <target state="translated">&lt;code&gt;HandlerId&lt;/code&gt; は、このハンドラーを参照する後続のすべての呼び出しで使用する必要がある一意の識別子です。</target>
        </trans-unit>
        <trans-unit id="38973a3c592ebba8c99759348fe21be35f4f872c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hdr&lt;/code&gt; is an optional file header (note that this text is written to the file as is).</source>
          <target state="translated">&lt;code&gt;Hdr&lt;/code&gt; はオプションのファイルヘッダーです（このテキストはそのままファイルに書き込まれることに注意してください）。</target>
        </trans-unit>
        <trans-unit id="0a998cbc44126d6e5cb9d07bcc2d54d1e1a3ea1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Head&lt;/code&gt; is a key value list of HTTP header fields. The server constructs an HTTP header from this data. See &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; for the appropriate value for each header field. If the client is an HTTP/1.0 client, the server filters the list so that only HTTP/1.0 header fields are sent back to the client.</source>
          <target state="translated">&lt;code&gt;Head&lt;/code&gt; は、HTTPヘッダーフィールドのキー値リストです。サーバーはこのデータからHTTPヘッダーを作成します。各ヘッダーフィールドの適切な値については、 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc2616.txt&quot;&gt;RFC 2616&lt;/a&gt;&lt;/code&gt; を参照してください。クライアントがHTTP / 1.0クライアントの場合、サーバーはリストをフィルタリングして、HTTP / 1.0ヘッダーフィールドのみがクライアントに送り返されるようにします。</target>
        </trans-unit>
        <trans-unit id="05427eeaa98e190ee611ecb49817bc660090b0e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HeaderLength&lt;/code&gt; determines the number of bytes preceding each binary and containing the length of the binary in bytes. Defaults to 4. The order of the header bytes is defined as follows: if &lt;code&gt;B&lt;/code&gt; is a binary containing a header only, size &lt;code&gt;Size&lt;/code&gt; of the binary is calculated as &lt;code&gt;&amp;lt;&amp;lt;Size:HeaderLength/unit:8&amp;gt;&amp;gt; = B&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;HeaderLength&lt;/code&gt; は、各バイナリの前にあり、バイト単位のバイナリの長さを含むバイト数を決定します。デフォルトは4です。ヘッダーバイトの順序は次のように定義されます &lt;code&gt;B&lt;/code&gt; がヘッダーのみを含むバイナリの場合、バイナリの &lt;code&gt;Size&lt;/code&gt; は &lt;code&gt;&amp;lt;&amp;lt;Size:HeaderLength/unit:8&amp;gt;&amp;gt; = B&lt;/code&gt; として計算されます。</target>
        </trans-unit>
        <trans-unit id="748b2a780e1c6e6c2b2739b548275b5cc3d39022" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Heading&lt;/code&gt; is a tuple of strings representing the headings of each column in the table.</source>
          <target state="translated">&lt;code&gt;Heading&lt;/code&gt; は、テーブルの各列の見出しを表す文字列のタプルです。</target>
        </trans-unit>
        <trans-unit id="4482e972dd62a6efb7010c0e5915552b13d63b78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;HibernateAfterTimeout&lt;/code&gt; specifies that the &lt;code&gt;gen_statem&lt;/code&gt; process awaits any message for &lt;code&gt;HibernateAfterTimeout&lt;/code&gt; milliseconds and if no message is received, the process goes into hibernation automatically (by calling &lt;code&gt;&lt;a href=&quot;proc_lib#hibernate-3&quot;&gt;proc_lib:hibernate/3&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;HibernateAfterTimeout&lt;/code&gt; は、 &lt;code&gt;gen_statem&lt;/code&gt; プロセスが &lt;code&gt;HibernateAfterTimeout&lt;/code&gt; ミリ秒の間メッセージを待機し、メッセージが受信されない場合、プロセスが自動的に休止状態になることを指定します（ &lt;code&gt;&lt;a href=&quot;proc_lib#hibernate-3&quot;&gt;proc_lib:hibernate/3&lt;/a&gt;&lt;/code&gt; を呼び出すことにより）。</target>
        </trans-unit>
        <trans-unit id="ab5ab31bbf1f37f66fd57d9f5eecc277051528be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hide (excluded actors)&lt;/code&gt; - When true, this means that the &lt;code&gt;Viewer&lt;/code&gt; will hide all &lt;code&gt;Events&lt;/code&gt; whose actors are marked as excluded. Excluded actors are normally enclosed in round brackets when they are displayed inthe &lt;code&gt;Viewer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Hide (excluded actors)&lt;/code&gt; -trueの場合、これは、アクターが除外としてマークされているすべての &lt;code&gt;Events&lt;/code&gt; を &lt;code&gt;Viewer&lt;/code&gt; が非表示にすることを意味します。除外されたアクタは、通常、 &lt;code&gt;Viewer&lt;/code&gt; 表示されるときに角括弧で囲まれます。</target>
        </trans-unit>
        <trans-unit id="5355e09c615cd2bb902cf3dc5bd3e0c3636f7d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hide From=To&lt;/code&gt; - When true, this means that the &lt;code&gt;Viewer&lt;/code&gt; will hide all &lt;code&gt;Events&lt;/code&gt; where the from-actor equals to its to-actor. These events are sometimes called actions.</source>
          <target state="translated">&lt;code&gt;Hide From=To&lt;/code&gt; -Trueの場合、これは、 &lt;code&gt;Viewer&lt;/code&gt; が、from-actorがto-actorと等しいすべての &lt;code&gt;Events&lt;/code&gt; を非表示にすることを意味します。これらのイベントは、アクションと呼ばれることもあります。</target>
        </trans-unit>
        <trans-unit id="ce0413d4eafcdc91153b0ae50e9909e20cab49fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hide actor in viewer&lt;/code&gt; - Known actors are shown as a named vertical bars in the &lt;code&gt;Viewer&lt;/code&gt; window. By hiding the actor, its vertical bar will be removed and the &lt;code&gt;Viewer&lt;/code&gt; will be refreshed.</source>
          <target state="translated">&lt;code&gt;Hide actor in viewer&lt;/code&gt; -既知のアクターは、 &lt;code&gt;Viewer&lt;/code&gt; ウィンドウで名前付きの垂直バーとして表示されます。アクターを非表示にすると、その垂直バーが削除され、 &lt;code&gt;Viewer&lt;/code&gt; が更新されます。</target>
        </trans-unit>
        <trans-unit id="c545dc77df01a3436f24eb846b84443664b7372e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hiding the actor&lt;/code&gt; is only useful if the &lt;code&gt;max_actors&lt;/code&gt; threshold has been reached, as it then will imply that the &quot;hidden&quot; actor will be displayed as if it were &lt;code&gt;&quot;UNKNOWN&quot;&lt;/code&gt;. If the &lt;code&gt;max_actors&lt;/code&gt; threshold not have been reached, the actor will re-appear as a vertical bar in the &lt;code&gt;Viewer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Hiding the actor&lt;/code&gt; 表示にすると、「非表示」のアクターが &lt;code&gt;&quot;UNKNOWN&quot;&lt;/code&gt; かのように表示されるため、 &lt;code&gt;max_actors&lt;/code&gt; しきい値に達した場合にのみ役立ちます。 &lt;code&gt;max_actors&lt;/code&gt; しきい値に達していない場合、アクターは &lt;code&gt;Viewer&lt;/code&gt; に垂直バーとして再表示されます。</target>
        </trans-unit>
        <trans-unit id="bd425d01dbfd4c62815da2acdf1c0ea3b092a41f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Highlight actor (toggle)&lt;/code&gt; - Left mouse click on the actor name tag. The actor name will be enclosed in square brackets &lt;code&gt;[]&lt;/code&gt;. When one or more actors are highlighted, only events related to those actors are displayed. All others are hidden.</source>
          <target state="translated">&lt;code&gt;Highlight actor (toggle)&lt;/code&gt; -アクター名タグを左クリックします。アクター名は角括弧 &lt;code&gt;[]&lt;/code&gt; で囲まれます。1つ以上のアクターが強調表示されている場合、それらのアクターに関連するイベントのみが表示されます。他のすべては隠されています。</target>
        </trans-unit>
        <trans-unit id="1cafc7252b24f1a3b971bed7ed457192e895b308" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Home&lt;/code&gt; and &lt;code&gt;End&lt;/code&gt; represent the keys with the same name on the keyboard.</source>
          <target state="translated">&lt;code&gt;Home&lt;/code&gt; と &lt;code&gt;End&lt;/code&gt; は、キーボード上の同じ名前のキーを表します。</target>
        </trans-unit>
        <trans-unit id="ce72c2da0aec183ebcf5fb28d0dc0367830b3aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Host = hostname()&lt;/code&gt;, see &lt;code&gt;inet(3)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Host = hostname()&lt;/code&gt; 、 &lt;code&gt;inet(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="37e5e080cff22a4997f8302c34ea6c58dda3555b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;How == write&lt;/code&gt; means closing the socket for writing, reading from it is still possible.</source>
          <target state="translated">&lt;code&gt;How == write&lt;/code&gt; は、書き込みのためにソケットを閉じることを意味します。ソケットからの読み取りは引き続き可能です。</target>
        </trans-unit>
        <trans-unit id="ad247bdbcb99e7cd33aaa791cf9cbdea2d5b5c28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hwaddr&lt;/code&gt; is hardware dependent, for example, on Ethernet interfaces it is the 6-byte Ethernet address (MAC address (EUI-48 address)).</source>
          <target state="translated">&lt;code&gt;Hwaddr&lt;/code&gt; はハードウェアに依存します。たとえば、イーサネットインターフェイスでは、6バイトのイーサネットアドレス（MACアドレス（EUI-48アドレス））です。</target>
        </trans-unit>
        <trans-unit id="2e630cefe5ab4a78f97b066715d0b13c553fdfd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I += 1;&lt;/code&gt; advances the instruction pointer to the next instruction.</source>
          <target state="translated">&lt;code&gt;I += 1;&lt;/code&gt; 命令ポインタを次の命令に進めます。</target>
        </trans-unit>
        <trans-unit id="3e78bbc0a9008fccf5f73ff9d94f60475d2d4f8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I += 2&lt;/code&gt; advances the instruction pointer to the next instruction.</source>
          <target state="translated">&lt;code&gt;I += 2&lt;/code&gt; は、命令ポインタを次の命令に進めます。</target>
        </trans-unit>
        <trans-unit id="301a9a27aae07dfc31c530063229e77d5d9c1a02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; - An untagged integer that will fit in 32 bits. It can be packed with other operands in a word on a 64-bit system.</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; -32ビットに収まるタグなし整数。64ビットシステムでは、他のオペランドと一緒にワードにパックできます。</target>
        </trans-unit>
        <trans-unit id="8e6bee5649f959847740bd3cf1df68a8a95f3cc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I&lt;/code&gt; in the BEAM virtual machine is the instruction pointer. When BEAM executes an instruction, &lt;code&gt;I&lt;/code&gt; points to the first word of the instruction.</source>
          <target state="translated">&lt;code&gt;I&lt;/code&gt; BEAM仮想マシンのIは命令ポインタです。BEAMが命令を実行するとき、 &lt;code&gt;I&lt;/code&gt; は命令の最初の単語を指します。</target>
        </trans-unit>
        <trans-unit id="9d6a3c00e1e7b906c142a8f786034a8faeefc54b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ID&lt;/code&gt; contains a sequence of big-endian unsigned integers (4 bytes each, so &lt;code&gt;N'&lt;/code&gt; is a multiple of 4), but is to be regarded as uninterpreted data.</source>
          <target state="translated">&lt;code&gt;ID&lt;/code&gt; には一連のビッグエンディアンの符号なし整数（各4バイト、したがって &lt;code&gt;N'&lt;/code&gt; は4の倍数）が含まれていますが、解釈されていないデータと見なされます。</target>
        </trans-unit>
        <trans-unit id="ca48f9cae796a8b974ce36856d8c1e3271d10157" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IN&lt;/code&gt; reprecents the function called (and its arguments). &lt;code&gt;OUT&lt;/code&gt; represents the unexpected/invalid result.</source>
          <target state="translated">&lt;code&gt;IN&lt;/code&gt; は、呼び出された関数（およびその引数）を表します。 &lt;code&gt;OUT&lt;/code&gt; は、予期しない/無効な結果を表します。</target>
        </trans-unit>
        <trans-unit id="0d749093a7fdc77d47cee608738a09d2b6b60099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IP&lt;/code&gt; and &lt;code&gt;InPortNo&lt;/code&gt; define the address from which &lt;code&gt;Packet&lt;/code&gt; comes. &lt;code&gt;Packet&lt;/code&gt; is a list of bytes if option &lt;code&gt;list&lt;/code&gt; is specified. &lt;code&gt;Packet&lt;/code&gt; is a binary if option &lt;code&gt;binary&lt;/code&gt; is specified.</source>
          <target state="translated">&lt;code&gt;IP&lt;/code&gt; と &lt;code&gt;InPortNo&lt;/code&gt; は、 &lt;code&gt;Packet&lt;/code&gt; の送信元のアドレスを定義します。オプション &lt;code&gt;list&lt;/code&gt; が指定されている場合、 &lt;code&gt;Packet&lt;/code&gt; はバイトのリストです。オプションの &lt;code&gt;binary&lt;/code&gt; が指定されている場合、 &lt;code&gt;Packet&lt;/code&gt; はバイナリです。</target>
        </trans-unit>
        <trans-unit id="c7d9a9f73f33e71b93ecbc9f3f6dff60e7eda11d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Id&lt;/code&gt; - As defined in the child specification or &lt;code&gt;undefined&lt;/code&gt; for a &lt;code&gt;simple_one_for_one&lt;/code&gt; supervisor.</source>
          <target state="translated">&lt;code&gt;Id&lt;/code&gt; -子仕様で定義されているかのよう &lt;code&gt;undefined&lt;/code&gt; のため &lt;code&gt;simple_one_for_one&lt;/code&gt; のスーパーバイザー。</target>
        </trans-unit>
        <trans-unit id="8c753376a5fef133650a5c0581da7eeedb008c61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Id&lt;/code&gt; is either the return value of &lt;code&gt;&lt;a href=&quot;#Module:id-1&quot;&gt;ct_hooks:id/1&lt;/a&gt;&lt;/code&gt;, or a &lt;code&gt;reference&lt;/code&gt; (created using &lt;code&gt;erlang:make_ref/0&lt;/code&gt; in ERTS) if &lt;code&gt;&lt;a href=&quot;#Module:id-1&quot;&gt;ct_hooks:id/1&lt;/a&gt;&lt;/code&gt; is not implemented.</source>
          <target state="translated">&lt;code&gt;Id&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;#Module:id-1&quot;&gt;ct_hooks:id/1&lt;/a&gt;&lt;/code&gt; の戻り値、または &lt;code&gt;&lt;a href=&quot;#Module:id-1&quot;&gt;ct_hooks:id/1&lt;/a&gt;&lt;/code&gt; が実装されていない場合は &lt;code&gt;reference&lt;/code&gt; （ &lt;code&gt;erlang:make_ref/0&lt;/code&gt; を使用して作成）のいずれかです。</target>
        </trans-unit>
        <trans-unit id="1fe3c6f0307da4c8e1c9d62774a04844f06e69a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Identifier&lt;/code&gt; is an identifier as described above.</source>
          <target state="translated">&lt;code&gt;Identifier&lt;/code&gt; は、上記の識別子です。</target>
        </trans-unit>
        <trans-unit id="1e76f531746852720380a55f71496be41705f3ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Importance&lt;/code&gt; is compared to a verbosity level set by the &lt;code&gt;verbosity&lt;/code&gt; start flag/option. The level can be set per category or generally, or both. If &lt;code&gt;verbosity&lt;/code&gt; is not set by the user, a level of 100 (&lt;code&gt;?MAX_VERBOSITY&lt;/code&gt; = all printouts visible) is used as default value. &lt;code&gt;Common Test&lt;/code&gt; performs the following test:</source>
          <target state="translated">&lt;code&gt;Importance&lt;/code&gt; は、 &lt;code&gt;verbosity&lt;/code&gt; 開始フラグ/オプションで設定された詳細レベルと比較されます。レベルは、カテゴリごと、または一般的に、あるいはその両方で設定できます。 &lt;code&gt;verbosity&lt;/code&gt; がユーザーによって設定されていない場合、デフォルト値としてレベル100（ &lt;code&gt;?MAX_VERBOSITY&lt;/code&gt; =表示されるすべての印刷出力）が使用されます。 &lt;code&gt;Common Test&lt;/code&gt; は次のテストを実行します。</target>
        </trans-unit>
        <trans-unit id="9e4f3ff412d3fe6d9bdb41ef320f6c15acf90c5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Imports&lt;/code&gt; is a list of pairs representing those module names and corresponding function names that are listed by import declaration attributes in &lt;code&gt;Forms&lt;/code&gt; (cf. &lt;code&gt;analyze_import_attribute/1&lt;/code&gt;), where each &lt;code&gt;Module&lt;/code&gt; occurs at most once in &lt;code&gt;Imports&lt;/code&gt;. We do not guarantee that each name occurs at most once in the lists of function names. The order of listing is not defined.</source>
          <target state="translated">&lt;code&gt;Imports&lt;/code&gt; は、 &lt;code&gt;Forms&lt;/code&gt; 内のインポート宣言属性（cf. &lt;code&gt;analyze_import_attribute/1&lt;/code&gt; ）によってリストされたモジュール名と対応する関数名を表すペアのリストです。各 &lt;code&gt;Module&lt;/code&gt; は &lt;code&gt;Imports&lt;/code&gt; で最大1回発生します。関数名のリストで各名前が1回だけ出現することは保証されません。リストの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="ee11edcd743f37679ed6c290d85c8841d19e87b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InEncoding&lt;/code&gt; defines how input is to be interpreted if binaries are present in &lt;code&gt;Data&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;InEncoding&lt;/code&gt; は、バイナリが &lt;code&gt;Data&lt;/code&gt; 存在する場合の入力の解釈方法を定義します</target>
        </trans-unit>
        <trans-unit id="1f4465eed45b582debf71fd583f7121ae30dcccd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InPool&lt;/code&gt; is whether the carrier is in the migration pool.</source>
          <target state="translated">&lt;code&gt;InPool&lt;/code&gt; は、キャリアが移行プールにあるかどうかです。</target>
        </trans-unit>
        <trans-unit id="1d306e7bfd91d4601a29391e4524441e83a1382f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Incr&lt;/code&gt; is negative (&lt;code&gt;&amp;lt; 0&lt;/code&gt;) and the result would be less than (&lt;code&gt;&amp;lt;&lt;/code&gt;) &lt;code&gt;Threshold&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Incr&lt;/code&gt; は負（ &lt;code&gt;&amp;lt; 0&lt;/code&gt; ）であり、結果は &lt;code&gt;Threshold&lt;/code&gt; （ &lt;code&gt;&amp;lt;&lt;/code&gt; ）未満になります。</target>
        </trans-unit>
        <trans-unit id="833090c86a4c682b98c9ab332c36b14667d192a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Incr&lt;/code&gt; is not negative (&lt;code&gt;&amp;gt;= 0&lt;/code&gt;) and the result would be greater than (&lt;code&gt;&amp;gt;&lt;/code&gt;) &lt;code&gt;Threshold&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Incr&lt;/code&gt; は負ではなく（ &lt;code&gt;&amp;gt;= 0&lt;/code&gt; ）、結果は &lt;code&gt;Threshold&lt;/code&gt; （ &lt;code&gt;&amp;gt;&lt;/code&gt; ）より大きくなります。</target>
        </trans-unit>
        <trans-unit id="845836b9643a1df11729abc96f28e19cd83cc53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Index&lt;/code&gt; (an integer) is an index into the module fun table.</source>
          <target state="translated">&lt;code&gt;Index&lt;/code&gt; （整数）は、モジュールfunテーブルへのインデックスです。</target>
        </trans-unit>
        <trans-unit id="c769a57d0c8c1afe7ffeaeb70de75a14a74e1192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Index&lt;/code&gt; is the internal index of the port. This index can be used to separate ports.</source>
          <target state="translated">&lt;code&gt;Index&lt;/code&gt; は、ポートの内部インデックスです。このインデックスは、ポートを分離するために使用できます。</target>
        </trans-unit>
        <trans-unit id="84b8ecf842803eecf88faefabd2b1f688dd8f23a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Inets&lt;/code&gt; HTTP server provides two ways of creating dynamic web pages, each with its own advantages and disadvantages:</source>
          <target state="translated">&lt;code&gt;Inets&lt;/code&gt; HTTPサーバーは、動的Webページを作成する2つの方法を提供します。それぞれに独自の利点と欠点があります。</target>
        </trans-unit>
        <trans-unit id="cc69768fc34540f0de836eebdf85cc613e486f6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Inets&lt;/code&gt; is a container for Internet clients and servers including the following:</source>
          <target state="translated">&lt;code&gt;Inets&lt;/code&gt; は、以下を含むインターネットクライアントおよびサーバーのコンテナです。</target>
        </trans-unit>
        <trans-unit id="55134bff47fe2c7afee969e113ea75b2e99487e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Info&lt;/code&gt; - More information.</source>
          <target state="translated">&lt;code&gt;Info&lt;/code&gt; -詳細情報。</target>
        </trans-unit>
        <trans-unit id="cb4a69d69345e6b86d53607870fc60e29c85e1b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Info&lt;/code&gt; is a possibly empty lists of tuples &lt;code&gt;{Pid,RefCount}&lt;/code&gt;, one tuple for every process the table is fixed by now. &lt;code&gt;RefCount&lt;/code&gt; is the value of the reference counter and it keeps track of how many times the table has been fixed by the process.</source>
          <target state="translated">&lt;code&gt;Info&lt;/code&gt; はタプル &lt;code&gt;{Pid,RefCount}&lt;/code&gt; 空のリストである可能性があり、テーブルが現在修正されているプロセスごとに1つのタプルです。 &lt;code&gt;RefCount&lt;/code&gt; は参照カウンターの値であり、プロセスによってテーブルが修正された回数を追跡します。</target>
        </trans-unit>
        <trans-unit id="89bf83108f81f245d58990e01fb200ddb703fc15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Info&lt;/code&gt; is either the atom &lt;code&gt;timeout&lt;/code&gt;, if a time-out has occurred, or the received message.</source>
          <target state="translated">&lt;code&gt;Info&lt;/code&gt; は、 &lt;code&gt;timeout&lt;/code&gt; が発生した場合のアトムタイムアウト、または受信したメッセージのいずれかです。</target>
        </trans-unit>
        <trans-unit id="e69242ba5f324b8d82fb9afa50701dd0d44bd1fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Info&lt;/code&gt; is the received message.</source>
          <target state="translated">&lt;code&gt;Info&lt;/code&gt; は受信したメッセージです。</target>
        </trans-unit>
        <trans-unit id="7e90bcc56cde7f69b3370374198e593e932d89b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Info&lt;/code&gt; is used to pass more information to &lt;code&gt;Func&lt;/code&gt;. It can be any term and is passed as is.</source>
          <target state="translated">&lt;code&gt;Info&lt;/code&gt; は &lt;code&gt;Func&lt;/code&gt; に詳細情報を渡すために使用されます。任意の用語を使用でき、そのまま渡されます。</target>
        </trans-unit>
        <trans-unit id="4f4ada19f50880b79a4598ccc5d15efc3a20087e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InfoList&lt;/code&gt; is a list of tuples. Its contents depends on &lt;code&gt;Options&lt;/code&gt;, see below.</source>
          <target state="translated">&lt;code&gt;InfoList&lt;/code&gt; はタプルのリストです。その内容は &lt;code&gt;Options&lt;/code&gt; によって異なります。以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="67fee6430e48afabc2b911839e220e34e3a04cc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InitData&lt;/code&gt; is the original configuration list of the test suite, or a &lt;code&gt;SkipOrFail&lt;/code&gt; tuple if a previous CTH has returned this.</source>
          <target state="translated">&lt;code&gt;InitData&lt;/code&gt; はテストスイートの元の構成リスト、または前のCTHがこれを返した場合は &lt;code&gt;SkipOrFail&lt;/code&gt; タプルです。</target>
        </trans-unit>
        <trans-unit id="cb1d49e7b6974e5a2c02e1d22a140e2a13ed2690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Input&lt;/code&gt; is query data of a GET request or the body of a PUT or POST request. The default behavior (legacy reasons) for delivering the body, is that the whole body is gathered and converted to a string. But if the httpd config parameter &lt;code&gt;&lt;a href=&quot;httpd#max_client_body_chunk&quot;&gt;max_client_body_chunk&lt;/a&gt;&lt;/code&gt; is set, the body will be delivered as binary chunks instead. The maximum size of the chunks is either &lt;code&gt;&lt;a href=&quot;httpd#max_client_body_chunk&quot;&gt;max_client_body_chunk&lt;/a&gt;&lt;/code&gt; or decide by the client if it uses HTTP chunked encoding to send the body. When using the chunking mechanism this callback must return {continue, State::term()} for all calls where &lt;code&gt;Input&lt;/code&gt; is &lt;code&gt;{first, Data::binary()}&lt;/code&gt; or &lt;code&gt;{continue, Data::binary(), State::term()}&lt;/code&gt;. When &lt;code&gt;Input&lt;/code&gt; is &lt;code&gt;{last, Data::binary(), State::term()}&lt;/code&gt; the return value will be ignored.</source>
          <target state="translated">&lt;code&gt;Input&lt;/code&gt; は、GET要求のクエリデータ、またはPUTまたはPOST要求の本文です。ボディを配信するためのデフォルトの動作（レガシーの理由）では、ボディ全体が収集され、文字列に変換されます。ただし、httpd構成パラメーター &lt;code&gt;&lt;a href=&quot;httpd#max_client_body_chunk&quot;&gt;max_client_body_chunk&lt;/a&gt;&lt;/code&gt; が設定されている場合、本体は代わりにバイナリチャンクとして配信されます。チャンクの最大サイズは、 &lt;code&gt;&lt;a href=&quot;httpd#max_client_body_chunk&quot;&gt;max_client_body_chunk&lt;/a&gt;&lt;/code&gt; であるか、HTTPチャンクエンコーディングを使用して本文を送信するかどうかをクライアントが決定します。チャンキングメカニズムを使用する場合、このコールバックは、 &lt;code&gt;Input&lt;/code&gt; が &lt;code&gt;{first, Data::binary()}&lt;/code&gt; または &lt;code&gt;{continue, Data::binary(), State::term()}&lt;/code&gt; であるすべての呼び出しに対して{continue、State :: term（）}を返す必要があります（）}。ときに &lt;code&gt;Input&lt;/code&gt; あります &lt;code&gt;{last, Data::binary(), State::term()}&lt;/code&gt; 戻り値は無視されます。</target>
        </trans-unit>
        <trans-unit id="6e31c1f2bf829cce31821629ba02c4c8db825469" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternalSegmentIndex&lt;/code&gt; together with the &lt;code&gt;SegmentIndex&lt;/code&gt; completely identify the location of an atom cache entry in the atom cache. &lt;code&gt;Length&lt;/code&gt; is the number of bytes that &lt;code&gt;AtomText&lt;/code&gt; consists of. Length is a 2 byte big-endian integer if flag &lt;code&gt;LongAtoms&lt;/code&gt; has been set, otherwise a 1 byte integer. When distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#DFLAG_UTF8_ATOMS&quot;&gt; DFLAG_UTF8_ATOMS&lt;/a&gt;&lt;/code&gt; has been exchanged between both nodes in the &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#distribution_handshake&quot;&gt; distribution handshake&lt;/a&gt;&lt;/code&gt;, characters in &lt;code&gt;AtomText&lt;/code&gt; are encoded in UTF-8, otherwise in Latin-1. The following &lt;code&gt;CachedAtomRef&lt;/code&gt;s with the same &lt;code&gt;SegmentIndex&lt;/code&gt; and &lt;code&gt;InternalSegmentIndex&lt;/code&gt; as this &lt;code&gt;NewAtomCacheRef&lt;/code&gt; refer to this atom until a new &lt;code&gt;NewAtomCacheRef&lt;/code&gt; with the same &lt;code&gt;SegmentIndex&lt;/code&gt; and &lt;code&gt;InternalSegmentIndex&lt;/code&gt; appear.</source>
          <target state="translated">&lt;code&gt;InternalSegmentIndex&lt;/code&gt; は、 &lt;code&gt;SegmentIndex&lt;/code&gt; とともに、アトムキャッシュ内のアトムキャッシュエントリの場所を完全に識別します。 &lt;code&gt;Length&lt;/code&gt; は、 &lt;code&gt;AtomText&lt;/code&gt; を構成するバイト数です。長さは、フラグ &lt;code&gt;LongAtoms&lt;/code&gt; が設定されている場合は2バイトのビッグエンディアン整数であり、それ以外の場合は1バイトの整数です。配布フラグ &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#DFLAG_UTF8_ATOMS&quot;&gt; DFLAG_UTF8_ATOMS&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#distribution_handshake&quot;&gt; distribution handshake&lt;/a&gt;&lt;/code&gt; 両方のノード間で交換された場合、 &lt;code&gt;AtomText&lt;/code&gt; の文字はUTF-8でエンコードされ、それ以外の場合はLatin-1でエンコードされます。これと同じ &lt;code&gt;SegmentIndex&lt;/code&gt; および &lt;code&gt;InternalSegmentIndex&lt;/code&gt; を持つ次の &lt;code&gt;CachedAtomRef&lt;/code&gt; &lt;code&gt;NewAtomCacheRef&lt;/code&gt; は、同じ &lt;code&gt;SegmentIndex&lt;/code&gt; と &lt;code&gt;InternalSegmentIndex&lt;/code&gt; を持つ新しい &lt;code&gt;NewAtomCacheRef&lt;/code&gt; が表示されるまで、このアトムを参照します。</target>
        </trans-unit>
        <trans-unit id="600738a890b5f56b515c93969303d142cb887e2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternalSegmentIndex&lt;/code&gt; together with the &lt;code&gt;SegmentIndex&lt;/code&gt; completely identify the location of an atom cache entry in the atom cache. &lt;code&gt;Length&lt;/code&gt; is the number of bytes that &lt;code&gt;AtomText&lt;/code&gt; consists of. Length is a 2 byte big-endian integer if flag &lt;code&gt;LongAtoms&lt;/code&gt; has been set, otherwise a 1 byte integer. When distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_UTF8_ATOMS&lt;/a&gt;&lt;/code&gt; has been exchanged between both nodes in the &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#distribution_handshake&quot;&gt;distribution handshake&lt;/a&gt;&lt;/code&gt;, characters in &lt;code&gt;AtomText&lt;/code&gt; are encoded in UTF-8, otherwise in Latin-1. The following &lt;code&gt;CachedAtomRef&lt;/code&gt;s with the same &lt;code&gt;SegmentIndex&lt;/code&gt; and &lt;code&gt;InternalSegmentIndex&lt;/code&gt; as this &lt;code&gt;NewAtomCacheRef&lt;/code&gt; refer to this atom until a new &lt;code&gt;NewAtomCacheRef&lt;/code&gt; with the same &lt;code&gt;SegmentIndex&lt;/code&gt; and &lt;code&gt;InternalSegmentIndex&lt;/code&gt; appear.</source>
          <target state="translated">&lt;code&gt;InternalSegmentIndex&lt;/code&gt; と &lt;code&gt;SegmentIndex&lt;/code&gt; は、Atomキャッシュ内のAtomキャッシュエントリの場所を完全に識別します。 &lt;code&gt;Length&lt;/code&gt; は、 &lt;code&gt;AtomText&lt;/code&gt; を構成するバイト数です。フラグ &lt;code&gt;LongAtoms&lt;/code&gt; が設定されている場合、長さは2バイトのビッグエンディアン整数で、それ以外の場合は1バイトの整数です。 &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#distribution_handshake&quot;&gt;distribution handshake&lt;/a&gt;&lt;/code&gt; で両方のノード間で配布フラグ &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_UTF8_ATOMS&lt;/a&gt;&lt;/code&gt; が交換された場合、 &lt;code&gt;AtomText&lt;/code&gt; の文字はUTF-8でエンコードされ、それ以外の場合はLatin-1でエンコードされます。これと同じ &lt;code&gt;SegmentIndex&lt;/code&gt; および &lt;code&gt;InternalSegmentIndex&lt;/code&gt; を持つ次の &lt;code&gt;CachedAtomRef&lt;/code&gt; &lt;code&gt;NewAtomCacheRef&lt;/code&gt; は、同じ &lt;code&gt;SegmentIndex&lt;/code&gt; と &lt;code&gt;InternalSegmentIndex&lt;/code&gt; を持つ新しい &lt;code&gt;NewAtomCacheRef&lt;/code&gt; が表示されるまで、このアトムを参照します。</target>
        </trans-unit>
        <trans-unit id="21aaeb17bd510f220d6fb06a3695dae8c8f9f05c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternalSegmentIndex&lt;/code&gt; together with the &lt;code&gt;SegmentIndex&lt;/code&gt; identify the location of the atom cache entry in the atom cache. The atom corresponding to this &lt;code&gt;CachedAtomRef&lt;/code&gt; is the latest &lt;code&gt;NewAtomCacheRef&lt;/code&gt; preceding this &lt;code&gt;CachedAtomRef&lt;/code&gt; in another previously passed distribution header.</source>
          <target state="translated">&lt;code&gt;InternalSegmentIndex&lt;/code&gt; と &lt;code&gt;SegmentIndex&lt;/code&gt; は、Atomキャッシュ内のAtomキャッシュエントリの場所を識別します。この &lt;code&gt;CachedAtomRef&lt;/code&gt; に対応するアトムは、以前に渡された別の配布ヘッダーでこの &lt;code&gt;CachedAtomRef&lt;/code&gt; に先行する最新の &lt;code&gt;NewAtomCacheRef&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cc64f3c07a7c0ed51e9e926a33414fbd3ac35d6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InternalTraceFlags&lt;/code&gt; is an integer representing the internal trace flag for this process. This &lt;code&gt;InfoTuple&lt;/code&gt; can be changed or removed without prior notice.</source>
          <target state="translated">&lt;code&gt;InternalTraceFlags&lt;/code&gt; は、このプロセスの内部トレースフラグを表す整数です。この &lt;code&gt;InfoTuple&lt;/code&gt; は予告なく変更または削除される場合があります。</target>
        </trans-unit>
        <trans-unit id="25e48926513b449cb4dd5b5821f99f3b17b0ed49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IoDevice&lt;/code&gt; is really the pid of the process that handles the file. This process is linked to the process that originally opened the file. If any process to which the &lt;code&gt;IoDevice&lt;/code&gt; is linked terminates, the file is closed and the process itself is terminated. An &lt;code&gt;IoDevice&lt;/code&gt; returned from this call can be used as an argument to the I/O functions (see &lt;code&gt;io(3)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; は、実際にはファイルを処理するプロセスのPIDです。このプロセスは、最初にファイルを開いたプロセスにリンクされています。任意のプロセス先の場合は &lt;code&gt;IoDevice&lt;/code&gt; 終了をリンクされ、ファイルが閉じられ、プロセス自体が終了されます。この呼び出しから返された &lt;code&gt;IoDevice&lt;/code&gt; は、I / O関数の引数として使用できます（ &lt;code&gt;io(3)&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="c7ffaa3eaf9098260a7e100a80bd4d2a9007dd35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;IoDevice&lt;/code&gt; is really the pid of the process that handles the file. This process monitors the process that originally opened the file (the owner process). If the owner process terminates, the file is closed and the process itself terminates too. An &lt;code&gt;IoDevice&lt;/code&gt; returned from this call can be used as an argument to the I/O functions (see &lt;code&gt;io(3)&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; は、実際にはファイルを処理するプロセスのpidです。このプロセスは、ファイルを最初に開いたプロセス（所有者プロセス）を監視します。所有者プロセスが終了すると、ファイルが閉じられ、プロセス自体も終了します。この呼び出しから返された &lt;code&gt;IoDevice&lt;/code&gt; は、I / O関数への引数として使用できます（ &lt;code&gt;io(3)&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="57b8380e384eef46fdc8f05b16a225b528571b0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Item&lt;/code&gt; can be one of the following.</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="69d4a62415669a19fbc684ab9bf98c3d5bcc77b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Kernel&lt;/code&gt; responds with one of the following messages:</source>
          <target state="translated">&lt;code&gt;Kernel&lt;/code&gt; は次のいずれかのメッセージで応答します。</target>
        </trans-unit>
        <trans-unit id="4b1933bfdb1645938c138a0ea8c4e681251357b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Key&lt;/code&gt; in the first tuple where both &lt;code&gt;Mode&lt;/code&gt; and &lt;code&gt;Module&lt;/code&gt; match is used.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; の両方の最初のタプルの &lt;code&gt;Mode&lt;/code&gt; および &lt;code&gt;Module&lt;/code&gt; 一致が使用されています。</target>
        </trans-unit>
        <trans-unit id="0d7c0c6d93f703fbcfc5b601d7a23e050ba6a6d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Key&lt;/code&gt; is the authentication key with a length according to the &lt;code&gt;Type&lt;/code&gt; and &lt;code&gt;SubType&lt;/code&gt;. The key length could be found with the &lt;code&gt;&lt;a href=&quot;#hash_info-1&quot;&gt;hash_info/1&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;hmac&lt;/code&gt;) for and &lt;code&gt;&lt;a href=&quot;#cipher_info-1&quot;&gt;cipher_info/1&lt;/a&gt;&lt;/code&gt; (&lt;code&gt;cmac&lt;/code&gt;) functions. For &lt;code&gt;poly1305&lt;/code&gt; the key length is 32 bytes. Note that the cryptographic quality of the key is not checked.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; は、 &lt;code&gt;Type&lt;/code&gt; と &lt;code&gt;SubType&lt;/code&gt; タイプに応じた長さの認証キーです。キーの長さは、 &lt;code&gt;&lt;a href=&quot;#hash_info-1&quot;&gt;hash_info/1&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;hmac&lt;/code&gt; ）forおよび &lt;code&gt;&lt;a href=&quot;#cipher_info-1&quot;&gt;cipher_info/1&lt;/a&gt;&lt;/code&gt; （ &lt;code&gt;cmac&lt;/code&gt; ）関数で見つけることができます。ため &lt;code&gt;poly1305&lt;/code&gt; キーの長さは32バイトです。キーの暗号化品質はチェックされないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="e56d32320f3c27219fdf60a2e14e4c7f75ba5d42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&lt;/code&gt; - A label. Only used by the &lt;code&gt;label/1&lt;/code&gt; instruction.</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt; -ラベル。 &lt;code&gt;label/1&lt;/code&gt; 命令でのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="198d9079bba10ca1595ca3b5ac00dc96243dc530" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;L&lt;/code&gt; specifies the maximum line length in bytes. Lines longer than this are delivered in more than one message, with &lt;code&gt;Flag&lt;/code&gt; set to &lt;code&gt;noeol&lt;/code&gt; for all but the last message. If end of file is encountered anywhere else than immediately following a newline sequence, the last line is also delivered with &lt;code&gt;Flag&lt;/code&gt; set to &lt;code&gt;noeol&lt;/code&gt;. Otherwise lines are delivered with &lt;code&gt;Flag&lt;/code&gt; set to &lt;code&gt;eol&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt; は、行の最大長をバイト単位で指定します。これより長い行は複数のメッセージで配信され、最後のメッセージ以外のすべての &lt;code&gt;Flag&lt;/code&gt; が &lt;code&gt;noeol&lt;/code&gt; に設定されます。改行シーケンスの直後以外の場所でファイルの終わりに遭遇した場合、最後の行も &lt;code&gt;Flag&lt;/code&gt; が &lt;code&gt;noeol&lt;/code&gt; に設定されて配信されます。それ以外の場合、 &lt;code&gt;Flag&lt;/code&gt; が &lt;code&gt;eol&lt;/code&gt; に設定された行が配信されます。</target>
        </trans-unit>
        <trans-unit id="1faa947a6609ede2214bb5114172a1e53e0a876d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LD&lt;/code&gt; - Linker.</source>
          <target state="translated">&lt;code&gt;LD&lt;/code&gt; -リンカ。</target>
        </trans-unit>
        <trans-unit id="57c9a76caae8a7bf463bc255e31c964ded3cfe61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LDFLAGS&lt;/code&gt; - Linker flags.</source>
          <target state="translated">&lt;code&gt;LDFLAGS&lt;/code&gt; -リンカーフラグ。</target>
        </trans-unit>
        <trans-unit id="235e2d6ec483f254244a6882f92e9e031df4d280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LFS_CFLAGS&lt;/code&gt; - Large file support C compiler flags.</source>
          <target state="translated">&lt;code&gt;LFS_CFLAGS&lt;/code&gt; -大きなファイルはCコンパイラフラグをサポートします。</target>
        </trans-unit>
        <trans-unit id="27301fa65edd6447dc4bc052320f0e460343c9e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LFS_LDFLAGS&lt;/code&gt; - Large file support linker flags.</source>
          <target state="translated">&lt;code&gt;LFS_LDFLAGS&lt;/code&gt; -大きなファイルサポートリンカーフラグ。</target>
        </trans-unit>
        <trans-unit id="5ee91aefe73d75260a864231ee6a589c5234f3eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LFS_LIBS&lt;/code&gt; - Large file support libraries.</source>
          <target state="translated">&lt;code&gt;LFS_LIBS&lt;/code&gt; -大きなファイルサポートライブラリ。</target>
        </trans-unit>
        <trans-unit id="98f86b7801cc83cb4ad74260c2e3e1f01df98850" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LIBS&lt;/code&gt; - Libraries.</source>
          <target state="translated">&lt;code&gt;LIBS&lt;/code&gt; -ライブラリ。</target>
        </trans-unit>
        <trans-unit id="8c08c4329ff232ebd7fcf28f8527058b7dd34b12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LU&lt;/code&gt; is a subset of &lt;code&gt;F&lt;/code&gt; (the locally used functions are either local functions or exported functions, again ensured by the compiler);</source>
          <target state="translated">&lt;code&gt;LU&lt;/code&gt; は &lt;code&gt;F&lt;/code&gt; のサブセットです（ローカルで使用される関数はローカル関数またはエクスポートされた関数のいずれかであり、これもコンパイラーによって保証されます）。</target>
        </trans-unit>
        <trans-unit id="e1f9466dce03029a97b72bbe36827ba7893d859d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LU&lt;/code&gt; is a subset of &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LU&lt;/code&gt; は &lt;code&gt;F&lt;/code&gt; のサブセットです。</target>
        </trans-unit>
        <trans-unit id="af090d0f385de95cd1a56baf697e425b59daaccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LU&lt;/code&gt; is equal to &lt;code&gt;range LC&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LU&lt;/code&gt; は &lt;code&gt;range LC&lt;/code&gt; 等しい。</target>
        </trans-unit>
        <trans-unit id="f5f2ca63cdc96e40d4cf9db9d65df82f417d2239" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Last&lt;/code&gt; - Scrolls &lt;code&gt;all&lt;/code&gt; viewers to the last &lt;code&gt;Event&lt;/code&gt; in the &lt;code&gt;Collector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Last&lt;/code&gt; - &lt;code&gt;all&lt;/code&gt; ビューアを &lt;code&gt;Collector&lt;/code&gt; 最後の &lt;code&gt;Event&lt;/code&gt; にスクロールします。</target>
        </trans-unit>
        <trans-unit id="b1eb894b8126ca830ac7206e7019f6c0feedc71a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Last&lt;/code&gt; - Scrolls &lt;code&gt;this&lt;/code&gt; viewer to the last &lt;code&gt;Event&lt;/code&gt; in the &lt;code&gt;Collector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Last&lt;/code&gt; -スクロール &lt;code&gt;this&lt;/code&gt; 最後に、ビューア &lt;code&gt;Event&lt;/code&gt; で &lt;code&gt;Collector&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cc9e23aef8cd69c463f5629e2c0b8e591c67ae78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LastAcc&lt;/code&gt; is the last accumulator value, that is, the last &lt;code&gt;NewAcc&lt;/code&gt; value that was returned by &lt;code&gt;Fun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LastAcc&lt;/code&gt; は最後のアキュムレータ値、つまり &lt;code&gt;Fun&lt;/code&gt; によって返された最後の &lt;code&gt;NewAcc&lt;/code&gt; 値です。</target>
        </trans-unit>
        <trans-unit id="2d2483f459bea356e073c77b3e5c32426593b6ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LastAcc&lt;/code&gt; is the last accumulator value. This is the last &lt;code&gt;NewAcc&lt;/code&gt; value that was returned by &lt;code&gt;Fun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LastAcc&lt;/code&gt; は最後のアキュムレータ値です。これは、 &lt;code&gt;Fun&lt;/code&gt; によって返された最後の &lt;code&gt;NewAcc&lt;/code&gt; 値です。</target>
        </trans-unit>
        <trans-unit id="f59d16019723b1e96956aba6f1c8aa1569c2aa9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Left&lt;/code&gt; and &lt;code&gt;Right&lt;/code&gt; represent the corresponding arrow keys.</source>
          <target state="translated">&lt;code&gt;Left&lt;/code&gt; と &lt;code&gt;Right&lt;/code&gt; は対応する矢印キーを表します。</target>
        </trans-unit>
        <trans-unit id="99275e02ca37946ceddbd090a2bab46b7b19e519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Length&lt;/code&gt; is the number of elements that follows in section &lt;code&gt;Elements&lt;/code&gt;. &lt;code&gt;Tail&lt;/code&gt; is the final tail of the list; it is &lt;code&gt;&lt;a href=&quot;#NIL_EXT&quot;&gt;NIL_EXT&lt;/a&gt;&lt;/code&gt; for a proper list, but can be any type if the list is improper (for example, &lt;code&gt;[a|b]&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Length&lt;/code&gt; は、セクション &lt;code&gt;Elements&lt;/code&gt; 続くエレメントの数です。 &lt;code&gt;Tail&lt;/code&gt; はリストの最後のテールです。適切なリストの場合は &lt;code&gt;&lt;a href=&quot;#NIL_EXT&quot;&gt;NIL_EXT&lt;/a&gt;&lt;/code&gt; ですが、リストが不適切な場合はどのタイプでもかまいません（たとえば、 &lt;code&gt;[a|b]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="f8f90bc0771be72325c249b2f487f3ab49a1b0e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Level = error | warning | info&lt;/code&gt; and is taken from the function name. &lt;code&gt;Report&lt;/code&gt; contains the actual log message, and &lt;code&gt;Metadata&lt;/code&gt; contains additional information which can be used for creating backwards compatible events for legacy &lt;code&gt;error_logger&lt;/code&gt; event handlers, see section &lt;code&gt;&lt;a href=&quot;#legacy_event_handlers&quot;&gt;Legacy Event Handlers&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Level = error | warning | info&lt;/code&gt; および関数名から取得されます。 &lt;code&gt;Report&lt;/code&gt; には実際のログメッセージが含まれ、 &lt;code&gt;Metadata&lt;/code&gt; はレガシー &lt;code&gt;error_logger&lt;/code&gt; イベントハンドラーの下位互換性のあるイベントを作成するために使用できる追加情報が含まれます。「 &lt;code&gt;&lt;a href=&quot;#legacy_event_handlers&quot;&gt;Legacy Event Handlers&lt;/a&gt;&lt;/code&gt; ハンドラー」を参照してください。</target>
        </trans-unit>
        <trans-unit id="3102f81ab7ec5c1f3019d9e47f0ac574c450f68c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Level&lt;/code&gt; decides the compression level to be used:</source>
          <target state="translated">&lt;code&gt;Level&lt;/code&gt; は、使用する圧縮レベルを決定します。</target>
        </trans-unit>
        <trans-unit id="d2e03135bf5a6b7af17c58aed4e8c59a8ea9a21d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Level&lt;/code&gt; is the current priority level for the process. For more information on priorities, see &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt; process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Level&lt;/code&gt; は、プロセスの現在の優先度レベルです。優先度の詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt; process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="b560caa51e8cc84d8dfd63f86f550fb4665de894" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Level&lt;/code&gt; is the current priority level for the process. For more information on priorities, see &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Level&lt;/code&gt; は、プロセスの現在の優先度レベルです。優先度の詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="8f48cf9a0c82cf595de0d39c717c258f6f13b81f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Level&lt;/code&gt; must be an integer in the interval &lt;code&gt;[0, 9]&lt;/code&gt;, where &lt;code&gt;0&lt;/code&gt; means no compression and &lt;code&gt;9&lt;/code&gt; means maximum compression. Before setting it to a non-zero value, ensure that the remote nodes understand this configuration.</source>
          <target state="translated">&lt;code&gt;Level&lt;/code&gt; 間隔の整数でなければならない &lt;code&gt;[0, 9]&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; 手段非圧縮及び &lt;code&gt;9&lt;/code&gt; つの手段の最大圧縮。これをゼロ以外の値に設定する前に、リモートノードがこの構成を理解していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="8d986355c740d502587d4f3b776cfe0401826a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LineLength&lt;/code&gt; is the maximum line length; defaults to 80.</source>
          <target state="translated">&lt;code&gt;LineLength&lt;/code&gt; はラインの最大長です。デフォルトは80です。</target>
        </trans-unit>
        <trans-unit id="ebb2a2555af18372271c07f85b33100b31815ab4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List2&lt;/code&gt; is a list of all elements &lt;code&gt;Elem&lt;/code&gt; in &lt;code&gt;List1&lt;/code&gt; for which &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List2&lt;/code&gt; すべての要素のリストである &lt;code&gt;Elem&lt;/code&gt; の中 &lt;code&gt;List1&lt;/code&gt; れる &lt;code&gt;Pred(Elem)&lt;/code&gt; 返し &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2ff38951d684483bae54e155971e93930510d796" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List&lt;/code&gt; can contain any Erlang terms.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; は任意のErlang用語を含めることができます。</target>
        </trans-unit>
        <trans-unit id="06fd63f74ee55e4aa51c9a02c4e87773ebbe5896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List&lt;/code&gt; must be an already bound variable.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; はすでにバインドされた変数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="398cf8d9c61aa899be0ebbec829e398ad38a53c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListExpr&lt;/code&gt; must be an expression that evaluates to a list of terms.</source>
          <target state="translated">&lt;code&gt;ListExpr&lt;/code&gt; は、条件のリストに評価される式である必要があります。</target>
        </trans-unit>
        <trans-unit id="3d9c7daf9ab424a237e0a1f08f354572367d5e93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListExpr&lt;/code&gt; must be an expression, which evaluates to a list of terms.</source>
          <target state="translated">&lt;code&gt;ListExpr&lt;/code&gt; は、用語のリストに評価される式である必要があります。</target>
        </trans-unit>
        <trans-unit id="468cb7f0952ac2bf33b191fdde94b6d3809cbfec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ListOfMibNames&lt;/code&gt; is a list of compiled MIBs, for example &lt;code&gt;[&quot;RFC1213-MIB&quot;, &quot;MY-MIB&quot;]&lt;/code&gt;. The function also performs consistency checking of trap definitions.</source>
          <target state="translated">&lt;code&gt;ListOfMibNames&lt;/code&gt; は、コンパイルされたMIBのリストです（例 &lt;code&gt;[&quot;RFC1213-MIB&quot;, &quot;MY-MIB&quot;]&lt;/code&gt; 。この関数は、トラップ定義の整合性チェックも実行します。</target>
        </trans-unit>
        <trans-unit id="ea6848e2356d89cf146f8ecdbf155c4ce26d98ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;List_Selector&lt;/code&gt; makes it possible to choose one of the encoded components in a a &lt;code&gt;SEQUENCE OF&lt;/code&gt; or a &lt;code&gt;SET OF&lt;/code&gt;. It is also possible to go further in that component and pick a subtype of that to decode. So, in the &lt;code&gt;Type_List&lt;/code&gt;: &lt;code&gt;['Window',status,buttonList,[1],number]&lt;/code&gt;, component &lt;code&gt;buttonList&lt;/code&gt; must be of type &lt;code&gt;SEQUENCE OF&lt;/code&gt; or &lt;code&gt;SET OF&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List_Selector&lt;/code&gt; を使用すると、 &lt;code&gt;SEQUENCE OF&lt;/code&gt; または &lt;code&gt;SET OF&lt;/code&gt; でエンコードされたコンポーネントの1つを選択できます。そのコンポーネントをさらに進んで、そのサブタイプを選択してデコードすることもできます。したがって、 &lt;code&gt;Type_List&lt;/code&gt; ： &lt;code&gt;['Window',status,buttonList,[1],number]&lt;/code&gt; では、コンポーネント &lt;code&gt;buttonList&lt;/code&gt; のタイプは &lt;code&gt;SEQUENCE OF&lt;/code&gt; または &lt;code&gt;SET OF&lt;/code&gt; でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8913db602383cdf125bceb9549713ffd51fae301" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Load configuration&lt;/code&gt; - Loads a new configuration from file.</source>
          <target state="translated">&lt;code&gt;Load configuration&lt;/code&gt; ロード-ファイルから新しい構成をロードします。</target>
        </trans-unit>
        <trans-unit id="fba54532627fc931b84a56bfad4ef6cfcd9df24d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Load events to the Collector from file&lt;/code&gt; - Loads the &lt;code&gt;Collector&lt;/code&gt; with &lt;code&gt;Events&lt;/code&gt; from a file and notifies all connected &lt;code&gt;Viewers&lt;/code&gt; about this.</source>
          <target state="translated">&lt;code&gt;Load events to the Collector from file&lt;/code&gt; ロード- ファイルから &lt;code&gt;Events&lt;/code&gt; と共に &lt;code&gt;Collector&lt;/code&gt; をロードし、接続されているすべての &lt;code&gt;Viewers&lt;/code&gt; にこれを通知します。</target>
        </trans-unit>
        <trans-unit id="b62c641a445fa8aac0921162416a864a87d9ce96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LoadInfo&lt;/code&gt; can be any term. It is passed on to the library as part of the initialization. A good practice is to include a module version number to support future code upgrade scenarios.</source>
          <target state="translated">&lt;code&gt;LoadInfo&lt;/code&gt; は任意の用語にすることができます。初期化の一部としてライブラリに渡されます。将来のコードアップグレードシナリオをサポートするために、モジュールのバージョン番号を含めることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="3bb1a61a4696f6f08b58624a0bbb6a79cbd3d304" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LocalFile&lt;/code&gt; and &lt;code&gt;RemoteFile&lt;/code&gt; must be absolute paths.</source>
          <target state="translated">&lt;code&gt;LocalFile&lt;/code&gt; と &lt;code&gt;RemoteFile&lt;/code&gt; は絶対パスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="13979b09c2228a3f222553b64b24450171b39d6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Location&lt;/code&gt; is a (possibly empty) list of two-tuples that can indicate the location in the source code of the function. The first element is an atom describing the type of information in the second element. The following items can occur:</source>
          <target state="translated">&lt;code&gt;Location&lt;/code&gt; は、関数のソースコード内の場所を示すことができる2つのタプルの（場合によっては空の）リストです。最初の要素は、2番目の要素の情報のタイプを説明するアトムです。次の項目が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="1a35d58a02012cb09eca606229a9d600c643f121" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Location&lt;/code&gt; is only allowed to be an integer for &lt;code&gt;raw&lt;/code&gt; and &lt;code&gt;ram&lt;/code&gt; modes.</source>
          <target state="translated">&lt;code&gt;Location&lt;/code&gt; は、 &lt;code&gt;raw&lt;/code&gt; モードと &lt;code&gt;ram&lt;/code&gt; モードでのみ整数にすることができます。</target>
        </trans-unit>
        <trans-unit id="36dc8ca8d5c14a49814cee8f6dbe9c4ba2ef3818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Location&lt;/code&gt; is only allowed to be an integer.</source>
          <target state="translated">&lt;code&gt;Location&lt;/code&gt; は整数のみが許可されています。</target>
        </trans-unit>
        <trans-unit id="c1bc3fcaa2969ca096fa4d60d18fe4a57a14b3f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LockType&lt;/code&gt; specifies what type of lock that is to be acquired for the iteration, default is &lt;code&gt;read&lt;/code&gt;. If records are written or deleted during the iteration, a write lock is to be acquired.</source>
          <target state="translated">&lt;code&gt;LockType&lt;/code&gt; は、反復のために取得されるロックのタイプを指定します。デフォルトは &lt;code&gt;read&lt;/code&gt; です。反復中にレコードが書き込まれるか削除されると、書き込みロックが取得されます。</target>
        </trans-unit>
        <trans-unit id="15f1ff3f19e0c290c165d53be446c326b140e9a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Locking&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;Locking&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="f998ddc1734a0791bda940babae62c268c1ee6a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Log&lt;/code&gt; is the log name as specified by the &lt;code&gt;open/1&lt;/code&gt; option &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Log&lt;/code&gt; は、 &lt;code&gt;open/1&lt;/code&gt; オプション &lt;code&gt;name&lt;/code&gt; 指定されたログ名です。</target>
        </trans-unit>
        <trans-unit id="2640e69e5b240e7e4eda83f2710d754038918fbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogDir = string()&lt;/code&gt;, top-level log directory for the test run.</source>
          <target state="translated">&lt;code&gt;LogDir = string()&lt;/code&gt; 、テスト実行の最上位のログディレクトリ。</target>
        </trans-unit>
        <trans-unit id="ccff0ac3c771239c3b0024204f52b0d26625dbd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogDir&lt;/code&gt; is the name of the directory where the audit trail log is stored. &lt;code&gt;Mibs&lt;/code&gt; is a list of Mibs to be used. The function uses the information in the Mibs to convert for example object identifiers to their symbolic name. &lt;code&gt;OutFile&lt;/code&gt; is the name of the generated text-file. &lt;code&gt;LogName&lt;/code&gt; is the name of the log, &lt;code&gt;LogFile&lt;/code&gt; is the name of the log file. &lt;code&gt;Start&lt;/code&gt; is the start (first) date and time from which log events will be converted and &lt;code&gt;Stop&lt;/code&gt; is the stop (last) date and time to which log events will be converted. The &lt;code&gt;Block&lt;/code&gt; argument indicates if the log should be blocked during conversion. This could be usefull when converting large logs (when otherwise the log could wrap during conversion). Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;LogDir&lt;/code&gt; は、監査証跡ログが格納されるディレクトリの名前です。 &lt;code&gt;Mibs&lt;/code&gt; は、使用するMibsのリストです。この関数は、Mibsの情報を使用して、たとえばオブジェクト識別子をシンボリック名に変換します。 &lt;code&gt;OutFile&lt;/code&gt; は、生成されたテキストファイルの名前です。 &lt;code&gt;LogName&lt;/code&gt; は &lt;code&gt;LogFile&lt;/code&gt; の名前、LogFileはログファイルの名前です。 &lt;code&gt;Start&lt;/code&gt; はログイベントが変換される開始（最初の）日時で、 &lt;code&gt;Stop&lt;/code&gt; はログイベントが変換される終了（最後の）日時です。 &lt;code&gt;Block&lt;/code&gt; 引数は、変換中にログをブロックする必要があるかどうかを示します。これは、大きなログを変換するときに役立ちます（そうでない場合、変換中にログがラップする可能性があります）。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b328f2e9480af763cf3d883568c8d91d127597e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LogFileName = string()&lt;/code&gt;, full name of the test case log file.</source>
          <target state="translated">&lt;code&gt;LogFileName = string()&lt;/code&gt; 、テストケースログファイルの完全な名前。</target>
        </trans-unit>
        <trans-unit id="f4e7b30b915b94deb30a1fd0ccc1a2d2da0372a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Logger&lt;/code&gt; is the function used for audit trail logging.</source>
          <target state="translated">&lt;code&gt;Logger&lt;/code&gt; は、監査証跡のロギングに使用される機能です。</target>
        </trans-unit>
        <trans-unit id="013ab73a971db4aa57a9ac8f34a8e95e9ec0bf4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LookupFun&lt;/code&gt; is used for looking up objects in the table.</source>
          <target state="translated">&lt;code&gt;LookupFun&lt;/code&gt; は、テーブル内のオブジェクトを検索するために使用されます。</target>
        </trans-unit>
        <trans-unit id="b2a6a1e8fb15a964b587f7fd4b88b23619c6c690" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M-f&lt;/code&gt; means pressing the &lt;strong&gt;Esc&lt;/strong&gt; key and the letter &lt;code&gt;f&lt;/code&gt; in sequence.</source>
          <target state="translated">&lt;code&gt;M-f&lt;/code&gt; は、&lt;strong&gt;Esc&lt;/strong&gt;キーと文字 &lt;code&gt;f&lt;/code&gt; を順番に押すことを意味します。</target>
        </trans-unit>
        <trans-unit id="7a53a9f6e65034affd359f36522a609ce2ddd02e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; is an optional translation modifier (of which &lt;code&gt;t&lt;/code&gt; is the only supported, meaning Unicode translation).</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; はオプションの変換修飾子です（ &lt;code&gt;t&lt;/code&gt; はサポートされている唯一の、つまりUnicode変換を意味します）。</target>
        </trans-unit>
        <trans-unit id="51b11665957ef179f982c4165416b19c25078f52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; is equal to &lt;code&gt;AM + LM + UM&lt;/code&gt;, where &lt;code&gt;AM&lt;/code&gt;, &lt;code&gt;LM&lt;/code&gt; and &lt;code&gt;UM&lt;/code&gt; are pairwise disjoint.</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; は &lt;code&gt;AM + LM + UM&lt;/code&gt; に等しく、 &lt;code&gt;AM&lt;/code&gt; 、 &lt;code&gt;LM&lt;/code&gt; 、および &lt;code&gt;UM&lt;/code&gt; はペアごとに互いに素です。</target>
        </trans-unit>
        <trans-unit id="aaf9d081b375db6e4424d9b9e7830152b7771e10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ME&lt;/code&gt; is equal to &lt;code&gt;(Mod) E&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ME&lt;/code&gt; は &lt;code&gt;(Mod) E&lt;/code&gt; 等しい。</target>
        </trans-unit>
        <trans-unit id="9cd64dbfcbcdec7d06e4b7aba2d62135c5fd2012" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MFA&lt;/code&gt; is the supplied callback function. When &lt;code&gt;nteventlog&lt;/code&gt; receives information about a new event, this function will be called as &lt;code&gt;apply(Mod, Func, [Event|Args])&lt;/code&gt; where &lt;code&gt;Event&lt;/code&gt; is a tuple</source>
          <target state="translated">&lt;code&gt;MFA&lt;/code&gt; は提供されるコールバック関数です。とき &lt;code&gt;nteventlog&lt;/code&gt; 新しいイベントについての情報を受け取り、この関数が呼ばれます &lt;code&gt;apply(Mod, Func, [Event|Args])&lt;/code&gt; &lt;code&gt;Event&lt;/code&gt; タプルであります</target>
        </trans-unit>
        <trans-unit id="283624fa2e9d4b0acc67a07ec6552a4f4b459f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODULE&lt;/code&gt; is the name of the Erlang module as an identifier without string quotations. It is stringified by the macro.</source>
          <target state="translated">&lt;code&gt;MODULE&lt;/code&gt; は、文字列引用符なしの識別子としてのErlangモジュールの名前です。マクロによって文字列化されます。</target>
        </trans-unit>
        <trans-unit id="16cd1fdb00e0335721ad29ae210cbc4c9f35d85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MPModel&lt;/code&gt; is &lt;code&gt;v1&lt;/code&gt;, &lt;code&gt;v2c&lt;/code&gt; or &lt;code&gt;v3&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MPModel&lt;/code&gt; は &lt;code&gt;v1&lt;/code&gt; 、 &lt;code&gt;v2c&lt;/code&gt; または &lt;code&gt;v3&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="f13fda4f024af3713884843abc4b6771df9db7c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MSAcc_Thread_Type&lt;/code&gt;s:</source>
          <target state="translated">&lt;code&gt;MSAcc_Thread_Type&lt;/code&gt;s:</target>
        </trans-unit>
        <trans-unit id="c970b764cf2d02177ce8b01c917d137bc921f084" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mac&lt;/code&gt; will be a binary with at most &lt;code&gt;MacLength&lt;/code&gt; bytes. Note that if &lt;code&gt;MacLength&lt;/code&gt; is greater than the actual number of bytes returned from the underlying hash, the returned hash will have that shorter length instead.</source>
          <target state="translated">&lt;code&gt;Mac&lt;/code&gt; は、最大 &lt;code&gt;MacLength&lt;/code&gt; バイトのバイナリになります。 &lt;code&gt;MacLength&lt;/code&gt; が、基になるハッシュから返される実際のバイト数よりも大きい場合、返されるハッシュの長さは代わりに短くなることに注意してください。</target>
        </trans-unit>
        <trans-unit id="d6abc44c5ddb1be069baf7b27b2c991b1a0f107d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MacLength&lt;/code&gt; will limit the size of the resultant &lt;code&gt;Mac&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MacLength&lt;/code&gt; は、結果の &lt;code&gt;Mac&lt;/code&gt; のサイズを制限します。</target>
        </trans-unit>
        <trans-unit id="309ea84fe8b00b11b9c1fd2bef28360d98535036" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Majority&lt;/code&gt; must be a boolean. Default is &lt;code&gt;false&lt;/code&gt;. When &lt;code&gt;true&lt;/code&gt;, a majority of the table replicas must be available for an update to succeed. When used on fragmented tables, &lt;code&gt;Tab&lt;/code&gt; must be the base table name. Directly changing the majority setting on individual fragments is not allowed.</source>
          <target state="translated">&lt;code&gt;Majority&lt;/code&gt; はブール値でなければなりません。デフォルトは &lt;code&gt;false&lt;/code&gt; です。 &lt;code&gt;true&lt;/code&gt; の場合、更新を成功させるには、テーブルレプリカの大部分が使用可能である必要があります。フラグメント化されたテーブルで使用する場合、 &lt;code&gt;Tab&lt;/code&gt; はベーステーブル名でなければなりません。個々のフラグメントの大部分の設定を直接変更することはできません。</target>
        </trans-unit>
        <trans-unit id="2f743798afbc2fb99d007d8798422165f47e75b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Match&lt;/code&gt; is &lt;code&gt;prefix&lt;/code&gt; or &lt;code&gt;exact&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Match&lt;/code&gt; は &lt;code&gt;prefix&lt;/code&gt; または &lt;code&gt;exact&lt;/code&gt; 一致です。</target>
        </trans-unit>
        <trans-unit id="275e125f911c29450fc6e142b633af7d445a9d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MatchBody&lt;/code&gt; constructs the return values.</source>
          <target state="translated">&lt;code&gt;MatchBody&lt;/code&gt; は戻り値を作成します。</target>
        </trans-unit>
        <trans-unit id="3edd34d6364f444692d0847425a9379e5b5193ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MatchCondition&lt;/code&gt; is a list of extra constraints applied to each record.</source>
          <target state="translated">&lt;code&gt;MatchCondition&lt;/code&gt; は、各レコードに適用される追加の制約のリストです。</target>
        </trans-unit>
        <trans-unit id="4f576fd583637c933fbce7f84bafb7fdffc9b278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MatchHead&lt;/code&gt; is the same pattern as used in &lt;code&gt;mnesia:match_object/3&lt;/code&gt; described earlier.</source>
          <target state="translated">&lt;code&gt;MatchHead&lt;/code&gt; は、 &lt;code&gt;mnesia:match_object/3&lt;/code&gt; 使用されているパターンと同じです。</target>
        </trans-unit>
        <trans-unit id="b72b7c51458ad32f88e5502818879e7efc1ba6fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaxBytes = integer()&lt;/code&gt; and &lt;code&gt;MaxFiles = integer()&lt;/code&gt;. Defines the properties of the (&lt;code&gt;disk_log(3)&lt;/code&gt;) error log file. This file is of type wrap log and max bytes is written to each file and max files is used before the first file is truncated and reused.</source>
          <target state="translated">&lt;code&gt;MaxBytes = integer()&lt;/code&gt; および &lt;code&gt;MaxFiles = integer()&lt;/code&gt; 。（ &lt;code&gt;disk_log(3)&lt;/code&gt; ）エラーログファイルのプロパティを定義します。このファイルはタイプラップログで、最大バイト数が各ファイルに書き込まれ、最初のファイルが切り捨てられて再利用される前に最大ファイル数が使用されます。</target>
        </trans-unit>
        <trans-unit id="452d9dc0607030be28d814ed2c9eea72218ced06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaxBytes = integer()&lt;/code&gt; and &lt;code&gt;MaxFiles = integer()&lt;/code&gt;. Defines the properties of the &lt;code&gt;disk_log(3)&lt;/code&gt; access log file. This file is of type wrap log and max bytes is written to each file and max files is used before the first file is truncated and reused.</source>
          <target state="translated">&lt;code&gt;MaxBytes = integer()&lt;/code&gt; および &lt;code&gt;MaxFiles = integer()&lt;/code&gt; 。 &lt;code&gt;disk_log(3)&lt;/code&gt; アクセスログファイルのプロパティを定義します。このファイルはタイプラップログで、最大バイト数が各ファイルに書き込まれ、最初のファイルが切り捨てられて再利用される前に最大ファイル数が使用されます。</target>
        </trans-unit>
        <trans-unit id="b18d57e4b62a0949a610bcea08bf38fd5c285813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaxMessageSize&lt;/code&gt; is an integer (default: 2048).</source>
          <target state="translated">&lt;code&gt;MaxMessageSize&lt;/code&gt; は整数です（デフォルト：2048）。</target>
        </trans-unit>
        <trans-unit id="13ec2404fd11daf9e2ea6fd29fa5d9ce310d7bb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaxMessageSize&lt;/code&gt; is the max message size for outgoing messages to this agent (integer).</source>
          <target state="translated">&lt;code&gt;MaxMessageSize&lt;/code&gt; は、このエージェント（整数）への送信メッセージの最大メッセージサイズです。</target>
        </trans-unit>
        <trans-unit id="6339742b86d1b61878afcd3d57589ba44d20648b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Message&lt;/code&gt; is a record where the &lt;code&gt;data&lt;/code&gt; field is assumed to be encoded (a list of bytes). If there is a v1 or v2 message, the &lt;code&gt;data&lt;/code&gt; field is an encoded &lt;code&gt;PDU&lt;/code&gt;, and if there is a v3 message, &lt;code&gt;data&lt;/code&gt; is an encoded and possibly encrypted &lt;code&gt;scopedPDU&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Message&lt;/code&gt; は、 &lt;code&gt;data&lt;/code&gt; フィールドがエンコードされていると想定されるレコード（バイトのリスト）です。v1またはv2メッセージがある場合、 &lt;code&gt;data&lt;/code&gt; フィールドはエンコードされた &lt;code&gt;PDU&lt;/code&gt; であり、v3メッセージがある場合、 &lt;code&gt;data&lt;/code&gt; はエンコードされ、場合によっては暗号化された &lt;code&gt;scopedPDU&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="94cb4026839f62c1552baa1b27ad50f22602ff37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Message&lt;/code&gt; is something which may be converted into a string by calling &lt;code&gt;Module:format_error(Message)&lt;/code&gt; and printed with &lt;code&gt;io:format/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Message&lt;/code&gt; は、 &lt;code&gt;Module:format_error(Message)&lt;/code&gt; を呼び出して文字列に変換し、 &lt;code&gt;io:format/3&lt;/code&gt; で出力できるものです。</target>
        </trans-unit>
        <trans-unit id="5c8daf14bcbe67572813cec0c5a0393b0e6abdd5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageQueue&lt;/code&gt; is a list of the messages to the process, which have not yet been processed.</source>
          <target state="translated">&lt;code&gt;MessageQueue&lt;/code&gt; は、まだ処理されていないプロセスへのメッセージのリストです。</target>
        </trans-unit>
        <trans-unit id="2d6efe0e5aaf0e1be4e00be1c769c20f54d133e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageQueueLen&lt;/code&gt; is the number of messages currently in the message queue of the process. This is the length of the list &lt;code&gt;MessageQueue&lt;/code&gt; returned as the information item &lt;code&gt;messages&lt;/code&gt; (see below).</source>
          <target state="translated">&lt;code&gt;MessageQueueLen&lt;/code&gt; は、プロセスのメッセージキューに現在あるメッセージの数です。これは、情報項目 &lt;code&gt;messages&lt;/code&gt; として返されるリスト &lt;code&gt;MessageQueue&lt;/code&gt; の長さです（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="ded802f494d0891b830134482eff5997bfcbdad7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Method = string()&lt;/code&gt; and &lt;code&gt;CgiScript = string()&lt;/code&gt;. &lt;code&gt;script&lt;/code&gt; adds an action activating a CGI script whenever a file is requested using a certain HTTP method. The method is either GET or POST, as defined in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc1945.txt&quot;&gt;RFC 1945&lt;/a&gt;&lt;/code&gt;. It propagates the URL and file path of the requested document using the standard CGI PATH_INFO and PATH_TRANSLATED environment variables.</source>
          <target state="translated">&lt;code&gt;Method = string()&lt;/code&gt; および &lt;code&gt;CgiScript = string()&lt;/code&gt; 。 &lt;code&gt;script&lt;/code&gt; は、特定のHTTPメソッドを使用してファイルが要求されるたびに、CGIスクリプトをアクティブにするアクションを追加します。 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc1945.txt&quot;&gt;RFC 1945&lt;/a&gt;&lt;/code&gt; で定義されているように、メソッドはGETまたはPOST です。標準のCGI PATH_INFOおよびPATH_TRANSLATED環境変数を使用して、要求されたドキュメントのURLとファイルパスを伝達します。</target>
        </trans-unit>
        <trans-unit id="a0b31e3c9f26b9c54df3f761b970e3cf68156cdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MimeType = string()&lt;/code&gt; and &lt;code&gt;CgiScript = string()&lt;/code&gt;. &lt;code&gt;action&lt;/code&gt; adds an action activating a CGI script whenever a file of a certain MIME type is requested. It propagates the URL and file path of the requested document using the standard CGI PATH_INFO and PATH_TRANSLATED environment variables.</source>
          <target state="translated">&lt;code&gt;MimeType = string()&lt;/code&gt; および &lt;code&gt;CgiScript = string()&lt;/code&gt; 。 &lt;code&gt;action&lt;/code&gt; は、特定のMIMEタイプのファイルが要求されたときにCGIスクリプトをアクティブにするアクションを追加します。標準のCGI PATH_INFOおよびPATH_TRANSLATED環境変数を使用して、要求されたドキュメントのURLとファイルパスを伝達します。</target>
        </trans-unit>
        <trans-unit id="65ff4b2ae1ac3cd3b04bcb879e2fa0ce0882e44b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MimeType = string()&lt;/code&gt; and &lt;code&gt;Extension = string()&lt;/code&gt;. Files delivered to the client are MIME typed according to RFC 1590. File suffixes are mapped to MIME types before file delivery. The mapping between file suffixes and MIME types can be specified as an Apache-like file or directly in the property list. Such a file can look like the follwoing:</source>
          <target state="translated">&lt;code&gt;MimeType = string()&lt;/code&gt; および &lt;code&gt;Extension = string()&lt;/code&gt; 。クライアントに配信されるファイルは、RFC 1590に従ってMIMEタイプに分類されます。ファイルサフィックスは、ファイル配信前にMIMEタイプにマップされます。ファイルサフィックスとMIMEタイプの間のマッピングは、Apacheのようなファイルとして、またはプロパティリストで直接指定できます。このようなファイルは次のようになります。</target>
        </trans-unit>
        <trans-unit id="8fac6ed4fd72f756cb109436ff23232b391592b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MinBinVHeapSize&lt;/code&gt; is the minimum binary virtual heap size for the process.</source>
          <target state="translated">&lt;code&gt;MinBinVHeapSize&lt;/code&gt; は、プロセスの最小バイナリ仮想ヒープサイズです。</target>
        </trans-unit>
        <trans-unit id="55ee40dabf9e70ed8bc05b2fd1d7a8598aa3536c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MinHeapSize&lt;/code&gt; is the minimum heap size for the process.</source>
          <target state="translated">&lt;code&gt;MinHeapSize&lt;/code&gt; は、プロセスの最小ヒープサイズです。</target>
        </trans-unit>
        <trans-unit id="aff5f6f1fba1c8630ef8136daa4cc2ab137312fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; also provides some functions that make it possible for the user to iterate over the table. The order of the iteration is unspecified if the table is not of type &lt;code&gt;ordered_set&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; は、ユーザーがテーブルを反復処理できるようにするいくつかの関数も提供します。テーブルのタイプが &lt;code&gt;ordered_set&lt;/code&gt; でない場合、反復の順序は指定されていません。</target>
        </trans-unit>
        <trans-unit id="72bab2f2e7dbed966a9b097d31a8a391f98e2968" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; can be run on nodes that do not have a disc. Replicas of &lt;code&gt;disc_copies&lt;/code&gt; or &lt;code&gt;disc_only_copies&lt;/code&gt; are not possible on such nodes. This is especially troublesome for the &lt;code&gt;schema&lt;/code&gt; table, as &lt;code&gt;Mnesia&lt;/code&gt; needs the schema to initialize itself.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; は、ディスクがないノードでも実行できます。そのようなノードでは、 &lt;code&gt;disc_copies&lt;/code&gt; または &lt;code&gt;disc_only_copies&lt;/code&gt; のレプリカは作成できません。 &lt;code&gt;Mnesia&lt;/code&gt; は自身を初期化するためにスキーマを必要とするため、これは &lt;code&gt;schema&lt;/code&gt; テーブルにとって特に厄介です。</target>
        </trans-unit>
        <trans-unit id="f2609373a83fbc8204970f36cd2f1e4776df935c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; detected a fatal error and terminates soon. The fault reason is explained in &lt;code&gt;Format&lt;/code&gt; and &lt;code&gt;Args&lt;/code&gt;, which can be given as input to &lt;code&gt;io:format/2&lt;/code&gt; or sent to &lt;code&gt;error_logger&lt;/code&gt;. By default it is sent to &lt;code&gt;error_logger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; は致命的なエラーを検出し、すぐに終了します。障害の理由は &lt;code&gt;Format&lt;/code&gt; と &lt;code&gt;Args&lt;/code&gt; で説明されています。これらは &lt;code&gt;io:format/2&lt;/code&gt; への入力として指定するか、 &lt;code&gt;error_logger&lt;/code&gt; に送信できます。デフォルトでは、 &lt;code&gt;error_logger&lt;/code&gt; に送信されます。</target>
        </trans-unit>
        <trans-unit id="ee6a7b99eec02e23c166195f05749c569caf3d44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; detected something that can be of interest when debugging the system. This is explained in &lt;code&gt;Format&lt;/code&gt; and &lt;code&gt;Args&lt;/code&gt;, which can appear as input to &lt;code&gt;io:format/2&lt;/code&gt; or sent to &lt;code&gt;error_logger&lt;/code&gt;. By default this event is printed with &lt;code&gt;io:format/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; は、システムをデバッグするときに重要な可能性のあるものを検出しました。これは &lt;code&gt;Format&lt;/code&gt; と &lt;code&gt;Args&lt;/code&gt; で説明されており、 &lt;code&gt;io:format/2&lt;/code&gt; への入力として表示されるか、 &lt;code&gt;error_logger&lt;/code&gt; に送信されます。デフォルトでは、このイベントは &lt;code&gt;io:format/2&lt;/code&gt; で出力されます。</target>
        </trans-unit>
        <trans-unit id="a2b1f244ecd502c00758a3331c19a873ff173835" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; dynamically sets and releases locks as transactions execute. It is therefore dangerous to execute code with transaction side-effects. In particular, a &lt;code&gt;receive&lt;/code&gt; statement inside a transaction can lead to a situation where the transaction hangs and never returns, which in turn can cause locks not to release. This situation can bring the whole system to a standstill, as other transactions that execute in other processes, or on other nodes, are forced to wait for the defective transaction.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; は、トランザクションの実行時に動的にロックを設定および解放します。したがって、トランザクションの副作用を伴うコードを実行することは危険です。特に、トランザクション内の &lt;code&gt;receive&lt;/code&gt; ステートメントは、トランザクションがハングして戻らないという状況を引き起こす可能性があり、その結果、ロックが解放されない可能性があります。他のプロセスまたは他のノードで実行される他のトランザクションは、欠陥のあるトランザクションを待機せざるを得ないため、この状況ではシステム全体が停止する可能性があります。</target>
        </trans-unit>
        <trans-unit id="87f4f84d4356334fa38b1abb99eef835d8aa4691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; employs a strategy whereby functions, such as &lt;code&gt;&lt;a href=&quot;mnesia#read-1&quot;&gt;mnesia:read/1&lt;/a&gt;&lt;/code&gt; acquire the necessary locks dynamically as the transactions execute. &lt;code&gt;Mnesia&lt;/code&gt; automatically sets and releases the locks and the programmer does not need to code these operations.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; は、トランザクションの実行時に &lt;code&gt;&lt;a href=&quot;mnesia#read-1&quot;&gt;mnesia:read/1&lt;/a&gt;&lt;/code&gt; などの関数が必要なロックを動的に取得する戦略を採用しています。 &lt;code&gt;Mnesia&lt;/code&gt; は自動的にロックを設定および解放し、プログラマーはこれらの操作をコーディングする必要はありません。</target>
        </trans-unit>
        <trans-unit id="74f76a1a75b72b1dbdff75bb67c4d843182e6bc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; event handling</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; イベント処理</target>
        </trans-unit>
        <trans-unit id="e99a0fa363fa2461243f4eddf870e4a68c6ccf7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; functions</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; 関数</target>
        </trans-unit>
        <trans-unit id="d73d96b53e3f52fe90e21b382aaeb1cbba1bcc16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; has detected an error. The fault reason is explained in &lt;code&gt;Format&lt;/code&gt; and &lt;code&gt;Args&lt;/code&gt;, which can be given as input to &lt;code&gt;io:format/2&lt;/code&gt; or sent to &lt;code&gt;error_logger&lt;/code&gt;. By default this event is reported to &lt;code&gt;error_logger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; がエラーを検出しました。障害の理由は &lt;code&gt;Format&lt;/code&gt; と &lt;code&gt;Args&lt;/code&gt; で説明されています。これらは &lt;code&gt;io:format/2&lt;/code&gt; への入力として指定するか、 &lt;code&gt;error_logger&lt;/code&gt; に送信できます。デフォルトでは、このイベントは &lt;code&gt;error_logger&lt;/code&gt; に報告されます。</target>
        </trans-unit>
        <trans-unit id="2d18d98588a4a575c8b1cccd2f93c49bd9908660" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; has no special counter records. However, records of the form &lt;code&gt;{TabName, Key, Integer}&lt;/code&gt; can be used as counters, and can be persistent.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; には特別なカウンターレコードはありません。ただし、 &lt;code&gt;{TabName, Key, Integer}&lt;/code&gt; という形式のレコードは、カウンターとして使用でき、永続的なものにすることができます。</target>
        </trans-unit>
        <trans-unit id="98bdca3374bd3826856d73bfb4a25975c2769d73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; has various functions for defining the database schema. Tables can be moved or deleted, and the table layout can be reconfigured.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; には、データベーススキーマを定義するためのさまざまな機能があります。テーブルは移動または削除でき、テーブルレイアウトを再構成できます。</target>
        </trans-unit>
        <trans-unit id="976b28f8bfcf3eb8fe0b6c3746dfae23025a07fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; is a distributed DBMS where data can be replicated on several nodes. In many applications, it is important that a series of write operations are performed atomically inside a transaction. The atomicity property ensures that a transaction takes effect on all nodes, or none.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; は、複数のノードでデータを複製できる分散DBMSです。多くのアプリケーションでは、一連の書き込み操作がトランザクション内でアトミックに実行されることが重要です。atomicityプロパティは、トランザクションがすべてのノードで有効になるか、まったく有効にならないようにします。</target>
        </trans-unit>
        <trans-unit id="50a11369cdd67f344988dd61fde42143473b47d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; is a distributed, fault-tolerant DBMS. Tables can be replicated on different Erlang nodes in various ways. The &lt;code&gt;Mnesia&lt;/code&gt; programmer does not need to state where the different tables reside, only the names of the different tables need to be specified in the program code. This is known as &quot;location transparency&quot; and is an important concept. In particular:</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; は、分散型のフォールトトレラントDBMSです。テーブルはさまざまな方法で異なるErlangノードに複製できます。 &lt;code&gt;Mnesia&lt;/code&gt; の異なるテーブルが存在する場所プログラマが状態に必要としない、別のテーブルの名前だけは、プログラムコードで指定する必要があります。これは「ロケーションの透過性」と呼ばれ、重要な概念です。特に：</target>
        </trans-unit>
        <trans-unit id="ce6ce805ffabb604e093e29fe750a61f56865e81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; is operational already and the Erlang nodes gain contact again. Then &lt;code&gt;Mnesia&lt;/code&gt; tries to contact &lt;code&gt;Mnesia&lt;/code&gt; on the other node to see if it also thinks that the network has been partitioned for a while. If &lt;code&gt;Mnesia&lt;/code&gt; on both nodes has logged &lt;code&gt;mnesia_down&lt;/code&gt; entries from each other, &lt;code&gt;Mnesia&lt;/code&gt; generates a system event, called &lt;code&gt;{inconsistent_database, running_partitioned_network, Node}&lt;/code&gt;, which is sent to the &lt;code&gt;Mnesia&lt;/code&gt; event handler and other possible subscribers. The default event handler reports an error to the error logger.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; はすでに稼働しており、Erlangノードは再び連絡を取ります。そして、 &lt;code&gt;Mnesia&lt;/code&gt; が接触しようと &lt;code&gt;Mnesia&lt;/code&gt; それはまた、ネットワークがしばらくの間、分割されたと考えているかどうかを確認するために他のノードに。両方のノードの &lt;code&gt;Mnesia&lt;/code&gt; が相互に &lt;code&gt;mnesia_down&lt;/code&gt; エントリをログに記録している場合、 &lt;code&gt;Mnesia&lt;/code&gt; は &lt;code&gt;{inconsistent_database, running_partitioned_network, Node}&lt;/code&gt; と呼ばれるシステムイベントを生成し、 &lt;code&gt;Mnesia&lt;/code&gt; イベントハンドラーおよびその他の可能なサブスクライバーに送信されます。デフォルトのイベントハンドラーは、エラーロガーにエラーを報告します。</target>
        </trans-unit>
        <trans-unit id="299f66c99a592f4661dd165bd4ec14d594906d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; on the current node is overloaded and the subscriber is to take action.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; 現在のノードのMnesiaは過負荷であり、サブスクライバーはアクションを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="d4d198e86471917f599cd982f9398656eadab60f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; provides the following functions that iterate over all the records in a table:</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; は、テーブル内のすべてのレコードを反復処理する次の関数を提供します。</target>
        </trans-unit>
        <trans-unit id="ea62f450db04290c7245c742f058663cd0e8cac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; regards the database as potential inconsistent and gives its applications a chance to recover from the inconsistency. For example, by installing a consistent backup as fallback and then restart the system. An alternative is to pick a &lt;code&gt;MasterNode&lt;/code&gt; from &lt;code&gt;&lt;a href=&quot;mnesia#system_info-1&quot;&gt;mnesia:system_info(db_nodes)&lt;/a&gt;&lt;/code&gt; and invoke &lt;code&gt;&lt;a href=&quot;mnesia#set_master_nodes-1&quot;&gt;mnesia:set_master_node([MasterNode])&lt;/a&gt;&lt;/code&gt;. By default an error is reported to &lt;code&gt;error_logger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; はデータベースを不整合の可能性があると見なし、そのアプリケーションに不整合から回復する機会を与えます。たとえば、一貫性のあるバックアップをフォールバックとしてインストールし、システムを再起動します。代替的には、選択する &lt;code&gt;MasterNode&lt;/code&gt; より &lt;code&gt;&lt;a href=&quot;mnesia#system_info-1&quot;&gt;mnesia:system_info(db_nodes)&lt;/a&gt;&lt;/code&gt; と呼び出し &lt;code&gt;&lt;a href=&quot;mnesia#set_master_nodes-1&quot;&gt;mnesia:set_master_node([MasterNode])&lt;/a&gt;&lt;/code&gt; 。デフォルトでは、エラーは &lt;code&gt;error_logger&lt;/code&gt; に報告されます。</target>
        </trans-unit>
        <trans-unit id="8a49502faffd0a8fc3bef10df0065138e5b5ee1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; supports read and write locks on whole tables as a complement to the normal locks on single records. As previously stated, &lt;code&gt;Mnesia&lt;/code&gt; sets and releases locks automatically, and the programmer does not need to code these operations. However, transactions that read and write many records in a specific table execute more efficiently if the transaction is started by setting a table lock on this table. This blocks other concurrent transactions from the table. The following two functions are used to set explicit table locks for read and write operations:</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; は、単一レコードの通常のロックを補完するものとして、テーブル全体の読み取りおよび書き込みロックをサポートしています。前述のように、 &lt;code&gt;Mnesia&lt;/code&gt; は自動的にロックを設定および解放するため、プログラマーはこれらの操作をコーディングする必要はありません。ただし、特定のテーブルにテーブルロックを設定してトランザクションを開始すると、特定のテーブルの多くのレコードを読み書きするトランザクションがより効率的に実行されます。これにより、他の同時トランザクションがテーブルからブロックされます。次の2つの関数は、読み取りおよび書き込み操作に対して明示的なテーブルロックを設定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a213c344fdf0ba87903055cd33de59b37e338473" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; tables can never contain duplicates of the same record in the same table. Duplicate records have attributes with the same contents and key.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; テーブルには、同じテーブル内の同じレコードの重複を含めることはできません。重複するレコードには、同じ内容とキーを持つ属性があります。</target>
        </trans-unit>
        <trans-unit id="3d033f03ed1c9abbda7b5edcbf9a3fb1803844ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; tables with storage type &lt;code&gt;RAM_copies&lt;/code&gt; and &lt;code&gt;disc_copies&lt;/code&gt; are implemented internally as &lt;code&gt;ets&lt;/code&gt; tables. Applications can access the these tables directly. This is only recommended if all options have been weighed and the possible outcomes are understood. By passing the earlier mentioned &quot;fun&quot; to the function &lt;code&gt;&lt;a href=&quot;mnesia#ets-1&quot;&gt;mnesia:ets(Fun [, Args])&lt;/a&gt;&lt;/code&gt;, it is performed but in a raw context. The operations are performed directly on the local &lt;code&gt;ets&lt;/code&gt; tables, assuming that the local storage type is &lt;code&gt;RAM_copies&lt;/code&gt; and that the table is not replicated on other nodes.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; ストレージタイプ &lt;code&gt;RAM_copies&lt;/code&gt; および &lt;code&gt;disc_copies&lt;/code&gt; のMnesiaテーブルは、 &lt;code&gt;ets&lt;/code&gt; テーブルとして内部的に実装されます。アプリケーションはこれらのテーブルに直接アクセスできます。これは、すべてのオプションが検討され、考えられる結果が理解されている場合にのみ推奨されます。前述の「fun」を関数 &lt;code&gt;&lt;a href=&quot;mnesia#ets-1&quot;&gt;mnesia:ets(Fun [, Args])&lt;/a&gt;&lt;/code&gt; に渡すことにより、実行されますが、生のコンテキストで実行されます。ローカルストレージタイプが &lt;code&gt;RAM_copies&lt;/code&gt; であり、テーブルが他のノードに複製されていないことを前提として、操作はローカル &lt;code&gt;ets&lt;/code&gt; テーブルで直接実行されます。</target>
        </trans-unit>
        <trans-unit id="51e2c37c486ebe9a5f140b6b22d0a1f0d3f61c56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mnesia&lt;/code&gt; tables with storage type &lt;code&gt;RAM_copies&lt;/code&gt; and &lt;code&gt;disc_copies&lt;/code&gt; are implemented internally as &lt;code&gt;ets&lt;/code&gt; tables. Applications can access the these tables directly. This is only recommended if all options have been weighed and the possible outcomes are understood. By passing the earlier mentioned &quot;fun&quot; to the function &lt;code&gt;&lt;a href=&quot;mnesia#ets-2&quot;&gt;mnesia:ets(Fun [, Args])&lt;/a&gt;&lt;/code&gt;, it is performed but in a raw context. The operations are performed directly on the local &lt;code&gt;ets&lt;/code&gt; tables, assuming that the local storage type is &lt;code&gt;RAM_copies&lt;/code&gt; and that the table is not replicated on other nodes.</source>
          <target state="translated">&lt;code&gt;Mnesia&lt;/code&gt; ストレージタイプ &lt;code&gt;RAM_copies&lt;/code&gt; および &lt;code&gt;disc_copies&lt;/code&gt; のMnesiaテーブルは、 &lt;code&gt;ets&lt;/code&gt; テーブルとして内部的に実装されます。アプリケーションはこれらのテーブルに直接アクセスできます。これは、すべてのオプションを比較検討し、考えられる結果が理解されている場合にのみ推奨されます。前述の &quot;fun&quot;を関数 &lt;code&gt;&lt;a href=&quot;mnesia#ets-2&quot;&gt;mnesia:ets(Fun [, Args])&lt;/a&gt;&lt;/code&gt; に渡すことにより、生のコンテキストで実行されます。ローカルストレージタイプが &lt;code&gt;RAM_copies&lt;/code&gt; であり、テーブルが他のノードに複製されていないと想定して、操作はローカル &lt;code&gt;ets&lt;/code&gt; テーブルで直接実行されます。</target>
        </trans-unit>
        <trans-unit id="026398917cd87fd0f71857fbbbfbe7bd327d21cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mod&lt;/code&gt; is a module implementing the &lt;code&gt;snmpa_notification_filter&lt;/code&gt; behaviour.</source>
          <target state="translated">&lt;code&gt;Mod&lt;/code&gt; は、 &lt;code&gt;snmpa_notification_filter&lt;/code&gt; 動作を実装するモジュールです。</target>
        </trans-unit>
        <trans-unit id="362ea97ed62390369c5b1d04c7c68020d2bfd595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mod&lt;/code&gt; is the control sequence modifier. This is one or more characters that change the interpretation of &lt;code&gt;Data&lt;/code&gt;. The current modifiers are &lt;code&gt;t&lt;/code&gt;, for Unicode translation, and &lt;code&gt;l&lt;/code&gt;, for stopping &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;P&lt;/code&gt; from detecting printable characters.</source>
          <target state="translated">&lt;code&gt;Mod&lt;/code&gt; は制御シーケンス修飾子です。これは、 &lt;code&gt;Data&lt;/code&gt; の解釈を変更する1つ以上の文字です。現在の修飾子は、Unicode変換の場合は &lt;code&gt;t&lt;/code&gt; 、 &lt;code&gt;p&lt;/code&gt; と &lt;code&gt;P&lt;/code&gt; が印刷可能な文字を検出しないようにするための &lt;code&gt;l&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a05c77fe12245fb5c4cc838c8eeb5df1e893df7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mod&lt;/code&gt; is the name of an alternative backup module.</source>
          <target state="translated">&lt;code&gt;Mod&lt;/code&gt; は、代替バックアップモジュールの名前です。</target>
        </trans-unit>
        <trans-unit id="f4e7a43ca343a4b7e5cf9d098c7f1a8c9a3ac6b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mode&lt;/code&gt; defaults to &lt;code&gt;up&lt;/code&gt; and specifies if it is an upgrade or downgrade. This instruction sends a &lt;code&gt;code_change&lt;/code&gt; system message to all processes using a module &lt;code&gt;Mod&lt;/code&gt; by calling function &lt;code&gt;sys:change_code&lt;/code&gt;, passing term &lt;code&gt;Extra&lt;/code&gt; as argument.</source>
          <target state="translated">&lt;code&gt;Mode&lt;/code&gt; デフォルトは &lt;code&gt;up&lt;/code&gt; で、アップグレードまたはダウングレードのどちらであるかを指定します。この命令は、関数 &lt;code&gt;sys:change_code&lt;/code&gt; を呼び出し、項 &lt;code&gt;Extra&lt;/code&gt; を引数として渡し、モジュール &lt;code&gt;Mod&lt;/code&gt; を使用するすべてのプロセスに &lt;code&gt;code_change&lt;/code&gt; システムメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="ad86ddcc7ca04b1c0a70c72baf756e408d18fb67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mode&lt;/code&gt; is the log mode as specified by the &lt;code&gt;open/1&lt;/code&gt; option &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Mode&lt;/code&gt; は、 &lt;code&gt;open/1&lt;/code&gt; オプション &lt;code&gt;mode&lt;/code&gt; 指定されたログモードです。</target>
        </trans-unit>
        <trans-unit id="1c286c4f9b4ed3de9b82f0584693fa9aa8e85785" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mode&lt;/code&gt; is the type of crypto algorithm to be used for encrypting the debug information. The default (and currently the only) type is &lt;code&gt;des3_cbc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Mode&lt;/code&gt; は、デバッグ情報の暗号化に使用される暗号アルゴリズムのタイプです。デフォルト（現在は唯一）のタイプは &lt;code&gt;des3_cbc&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fe0498eb8d4b45b5a8e528fd9b6a97864959f64c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mode&lt;/code&gt; is the type of crypto algorithm; currently, the only allowed value is &lt;code&gt;des3_cbc&lt;/code&gt;. &lt;code&gt;Module&lt;/code&gt; is either an atom, in which case &lt;code&gt;Key&lt;/code&gt; is only used for the module &lt;code&gt;Module&lt;/code&gt;, or &lt;code&gt;[]&lt;/code&gt;, in which case &lt;code&gt;Key&lt;/code&gt; is used for all modules. &lt;code&gt;Key&lt;/code&gt; is the non-empty key string.</source>
          <target state="translated">&lt;code&gt;Mode&lt;/code&gt; は暗号アルゴリズムのタイプです。現在、許可されている値は &lt;code&gt;des3_cbc&lt;/code&gt; のみです。 &lt;code&gt;Module&lt;/code&gt; はアトムであり、この場合、 &lt;code&gt;Key&lt;/code&gt; はモジュール &lt;code&gt;Module&lt;/code&gt; にのみ使用されるか、 &lt;code&gt;[]&lt;/code&gt; の場合、 &lt;code&gt;Key&lt;/code&gt; はすべてのモジュールに使用されます。 &lt;code&gt;Key&lt;/code&gt; は空でないキー文字列です。</target>
        </trans-unit>
        <trans-unit id="b7b2089688dbcaa372b98ae602d475aa2b7e20a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Modifier&lt;/code&gt;s:</source>
          <target state="translated">&lt;code&gt;Modifier&lt;/code&gt;s:</target>
        </trans-unit>
        <trans-unit id="f885a950c33bfb535944903bdef7d52e0b60b33d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module:Function&lt;/code&gt; must be able to handle at least three atoms: &lt;code&gt;init&lt;/code&gt;, &lt;code&gt;check&lt;/code&gt;, and &lt;code&gt;stop&lt;/code&gt;. &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; allows you to initialize and clean up the check environment.</source>
          <target state="translated">&lt;code&gt;Module:Function&lt;/code&gt; は、少なくとも3つのアトム（ &lt;code&gt;init&lt;/code&gt; 、 &lt;code&gt;check&lt;/code&gt; 、および &lt;code&gt;stop&lt;/code&gt; )を処理できる必要があります。 &lt;code&gt;init&lt;/code&gt; および &lt;code&gt;stop&lt;/code&gt; を使用すると、チェック環境を初期化してクリーンアップできます。</target>
        </trans-unit>
        <trans-unit id="b368a1e85f2065c90c82b56201768e9d94ddc091" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module:Function&lt;/code&gt; provided with option &lt;code&gt;overload&lt;/code&gt; must handle three calls: &lt;code&gt;init&lt;/code&gt;, &lt;code&gt;check&lt;/code&gt;, and &lt;code&gt;stop&lt;/code&gt;. &lt;code&gt;init&lt;/code&gt; and &lt;code&gt;stop&lt;/code&gt; allow some setup and teardown required by the check. An overload check module can look as follows:</source>
          <target state="translated">&lt;code&gt;Module:Function&lt;/code&gt; オプション &lt;code&gt;overload&lt;/code&gt; 提供される関数は、 &lt;code&gt;init&lt;/code&gt; 、 &lt;code&gt;check&lt;/code&gt; 、および &lt;code&gt;stop&lt;/code&gt; の 3つの呼び出しを処理する必要があります。 &lt;code&gt;init&lt;/code&gt; と &lt;code&gt;stop&lt;/code&gt; は、チェックに必要な設定と破棄を許可します。過負荷チェックモジュールは次のようになります。</target>
        </trans-unit>
        <trans-unit id="8695369e3ba6e8412e0f5f0914171005547b5d45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module:system_continue(Parent, NDebug, Misc)&lt;/code&gt;, where the process continues the execution.</source>
          <target state="translated">&lt;code&gt;Module:system_continue(Parent, NDebug, Misc)&lt;/code&gt; 、ここでプロセスは実行を継続します。</target>
        </trans-unit>
        <trans-unit id="1d97b25bd32b5b56226b87374d4aff24fd298b00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module:system_terminate(Reason, Parent, Debug, Misc)&lt;/code&gt;, if the process is to terminate.</source>
          <target state="translated">&lt;code&gt;Module:system_terminate(Reason, Parent, Debug, Misc)&lt;/code&gt; 、プロセスが終了する場合。</target>
        </trans-unit>
        <trans-unit id="bf516739e46854f97dc555f9f8d07adb9320095d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; (an atom) is the module name.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; （アトム）はモジュール名です。</target>
        </trans-unit>
        <trans-unit id="142f50604dd69185fd77f5d37c8950e205f23a6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; and &lt;code&gt;Function&lt;/code&gt; are atoms (encoded using &lt;code&gt;&lt;a href=&quot;#ATOM_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt;ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; と &lt;code&gt;Function&lt;/code&gt; はアトムです（ &lt;code&gt;&lt;a href=&quot;#ATOM_EXT&quot;&gt;ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#SMALL_ATOM_EXT&quot;&gt;SMALL_ATOM_UTF8_EXT&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;#ATOM_CACHE_REF&quot;&gt;ATOM_CACHE_REF&lt;/a&gt;&lt;/code&gt; を使用してエンコードされます）。</target>
        </trans-unit>
        <trans-unit id="8b149a82a2cdd80eae28936f75660c686291ab6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; is not an atom.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; はアトムではありません。</target>
        </trans-unit>
        <trans-unit id="5b415056acd25393db679814eb0fc4804a1794b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; is the application callback module as defined by the &lt;code&gt;mod&lt;/code&gt; key in the &lt;code&gt;.app&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; は、 &lt;code&gt;.app&lt;/code&gt; ファイルの &lt;code&gt;mod&lt;/code&gt; キーで定義されているアプリケーションコールバックモジュールです。</target>
        </trans-unit>
        <trans-unit id="9a8fa41567e7a29ba7f2d1dca3d700ed40a7ad67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; is the callback module (snmpm_user behaviour) which will be called whenever something happens (detected agent, incoming reply or incoming trap/notification). Note that this could have already been done as a consequence of the node config. (see users.conf).</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; はコールバックモジュール（snmpm_user behaviour）であり、何かが発生すると（検出されたエージェント、着信応答、着信トラップ/通知）呼び出されます。これは、ノード構成の結果としてすでに行われている可能性があることに注意してください。（users.confを参照）。</target>
        </trans-unit>
        <trans-unit id="07237051faad89eb648f1c2d2ed1a15fb26d970e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; is the error handler module used by the process (for undefined function calls, for example).</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; は、プロセスで使用されるエラーハンドラモジュールです（たとえば、未定義の関数呼び出しの場合）。</target>
        </trans-unit>
        <trans-unit id="407128c827c35995de108220483e4d85c0beb6f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; is the name of the callback module.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; は、コールバックモジュールの名前です。</target>
        </trans-unit>
        <trans-unit id="d0134160a25efe9fc060f1d7d3b523059d97c7e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; is the name of the module.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; はモジュールの名前です。</target>
        </trans-unit>
        <trans-unit id="1cc86c03014755b5f1e2d575f314172f7eb48c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; must be found in the code path and export &lt;code&gt;Function&lt;/code&gt; with an arity of three. An &lt;code&gt;erlScriptAlias&lt;/code&gt; must also be set up in the configuration file for the web server.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; はコードパスで見つかり、アリティが3の &lt;code&gt;Function&lt;/code&gt; をエクスポートする必要があります。アン &lt;code&gt;erlScriptAlias&lt;/code&gt; はまた、Webサーバの設定ファイルに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="51a802f0d426a5888a70a3a7a0e30628718cd9d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt; must export the following:</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; は以下をエクスポートする必要があります：</target>
        </trans-unit>
        <trans-unit id="7d093a221d68135472f7c3ed106652eb4a487d20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Arity&lt;/code&gt; is the current function call of the process.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 、 &lt;code&gt;Function&lt;/code&gt; 、 &lt;code&gt;Arity&lt;/code&gt; は、プロセスの現在の関数呼び出しです。</target>
        </trans-unit>
        <trans-unit id="0582dfe1547908a2451ee70c6f0283c376da5ee8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Arity&lt;/code&gt; is the current function call of the process. &lt;code&gt;Location&lt;/code&gt; is a list of two-tuples describing the location in the source code.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 、 &lt;code&gt;Function&lt;/code&gt; 、 &lt;code&gt;Arity&lt;/code&gt; は、プロセスの現在の関数呼び出しです。 &lt;code&gt;Location&lt;/code&gt; は、ソースコード内の場所を説明する2つのタプルのリストです。</target>
        </trans-unit>
        <trans-unit id="8a79e07e62521860565c2b17c1b765befc74c983" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Arity&lt;/code&gt; is the current function call of the process. The value &lt;code&gt;undefined&lt;/code&gt; can be returned if the process is currently executing native compiled code.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 、 &lt;code&gt;Function&lt;/code&gt; 、 &lt;code&gt;Arity&lt;/code&gt; は、プロセスの現在の関数呼び出しです。プロセスが現在ネイティブのコンパイル済みコードを実行している場合は、 &lt;code&gt;undefined&lt;/code&gt; の値を返すことができます。</target>
        </trans-unit>
        <trans-unit id="f1bf4dd28d33fda1e0c4dfc738aae8b183beba2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, &lt;code&gt;Arity&lt;/code&gt; is the initial function call with which the process was spawned.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 、 &lt;code&gt;Function&lt;/code&gt; 、 &lt;code&gt;Arity&lt;/code&gt; は、プロセスが生成された最初の関数呼び出しです。</target>
        </trans-unit>
        <trans-unit id="40c58bd468af7e443cd3b7e99b3e23559908235c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, and &lt;code&gt;Args&lt;/code&gt; denote a function that is called to produce the data (like &lt;code&gt;io_lib:format/2&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 、 &lt;code&gt;Function&lt;/code&gt; 、および &lt;code&gt;Args&lt;/code&gt; （のようなデータを生成するために呼び出される関数示す &lt;code&gt;io_lib:format/2&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="27c5906e2f07a923064efae3970c6d256569db73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;Function&lt;/code&gt;, and &lt;code&gt;ExtraArgs&lt;/code&gt; denote a function and arguments to determine when enough data is written. The function is to take two more arguments, the last state, and a list of characters. The function is to return one of:</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 、 &lt;code&gt;Function&lt;/code&gt; 、および &lt;code&gt;ExtraArgs&lt;/code&gt; は、十分なデータがいつ書き込まれるかを決定する関数と引数を示します。この関数は、最後の状態と文字のリストの2つの引数を取ります。関数は次のいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="735b6fdd9ded8b8040a7b5a71d381f59d033e3fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;Options&lt;/code&gt;, and &lt;code&gt;ServerName&lt;/code&gt; have the same meanings as when calling &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start[_link]/3,4&lt;/a&gt;&lt;/code&gt;. However, if &lt;code&gt;ServerName&lt;/code&gt; is specified, the process must have been registered accordingly &lt;strong&gt;before&lt;/strong&gt; this function is called.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 、 &lt;code&gt;Options&lt;/code&gt; 、および &lt;code&gt;ServerName&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start[_link]/3,4&lt;/a&gt;&lt;/code&gt; 呼び出す場合と同じ意味です。ただし、 &lt;code&gt;ServerName&lt;/code&gt; が指定されている場合、この関数が呼び出される&lt;strong&gt;前に&lt;/strong&gt;プロセスが適切に登録されている必要があります。</target>
        </trans-unit>
        <trans-unit id="6ff4c6c9504f011ff9174038ec73a39db3ab3ea5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;Options&lt;/code&gt;, and &lt;code&gt;ServerName&lt;/code&gt; have the same meanings as when calling &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start[_link|_monitor]/3,4&lt;/a&gt;&lt;/code&gt;. However, if &lt;code&gt;ServerName&lt;/code&gt; is specified, the process must have been registered accordingly &lt;strong&gt;before&lt;/strong&gt; this function is called.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 、 &lt;code&gt;Options&lt;/code&gt; 、および &lt;code&gt;ServerName&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start[_link|_monitor]/3,4&lt;/a&gt;&lt;/code&gt; 呼び出すときと同じ意味を持ちます。ただし、 &lt;code&gt;ServerName&lt;/code&gt; を指定する場合は、この関数を呼び出す&lt;strong&gt;前に&lt;/strong&gt;、それ&lt;strong&gt;に&lt;/strong&gt;応じてプロセスを登録しておく必要があります。</target>
        </trans-unit>
        <trans-unit id="72a6ca3acf4708afc7ea6b005278097266070eb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;Opts&lt;/code&gt; have the same meaning as when calling &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start[_link]/3,4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 、 &lt;code&gt;Opts&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start[_link]/3,4&lt;/a&gt;&lt;/code&gt; 呼び出す場合と同じ意味です。</target>
        </trans-unit>
        <trans-unit id="4474f9339059862d8cc7f9962421aa2ad78c41f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, &lt;code&gt;Opts&lt;/code&gt; have the same meaning as when calling &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start[_link|_monitor]/3,4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 、 &lt;code&gt;Opts&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start[_link|_monitor]/3,4&lt;/a&gt;&lt;/code&gt; 呼び出すときと同じ意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="2e960f4b5e2be3ea63b3ddb6d28993de499df8d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module&lt;/code&gt;, an atom, specifies which module to import functions from. &lt;code&gt;Functions&lt;/code&gt; is a list similar as for &lt;code&gt;export&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; アトムであるModuleは、関数をインポートするモジュールを指定します。 &lt;code&gt;Functions&lt;/code&gt; は、 &lt;code&gt;export&lt;/code&gt; と同様のリストです。</target>
        </trans-unit>
        <trans-unit id="94bcaf31932fafae9d441260a6361bb51e6048ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleName&lt;/code&gt; is the name declared by a module attribute in &lt;code&gt;Forms&lt;/code&gt;. If no module name is defined in &lt;code&gt;Forms&lt;/code&gt;, the result will contain no entry for the &lt;code&gt;module&lt;/code&gt; key. If multiple module name declarations should occur, all but the first will be ignored.</source>
          <target state="translated">&lt;code&gt;ModuleName&lt;/code&gt; は、 &lt;code&gt;Forms&lt;/code&gt; のモジュール属性によって宣言された名前です。 &lt;code&gt;Forms&lt;/code&gt; でモジュール名が定義されていない場合、結果には &lt;code&gt;module&lt;/code&gt; キーのエントリが含まれません。複数のモジュール名の宣言が必要な場合、最初のものを除くすべてが無視されます。</target>
        </trans-unit>
        <trans-unit id="5490f4d0695da312f5313f241b454195ab98b765" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Module_Name&lt;/code&gt; is the same as the name of the ASN.1 specification, but without the extension.</source>
          <target state="translated">&lt;code&gt;Module_Name&lt;/code&gt; は、ASN.1仕様の名前と同じですが、拡張子はありません。</target>
        </trans-unit>
        <trans-unit id="b6422d79e9a6277c38b3328216481430cb33bf79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Modules&lt;/code&gt; - As defined in the child specification.</source>
          <target state="translated">&lt;code&gt;Modules&lt;/code&gt; -子仕様で定義されています。</target>
        </trans-unit>
        <trans-unit id="28e6aa53a863e6303a37ffa4a56bcb86914429d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Modules&lt;/code&gt; is an atom or a list of atoms. It can be</source>
          <target state="translated">&lt;code&gt;Modules&lt;/code&gt; は、アトムまたはアトムのリストです。かもね</target>
        </trans-unit>
        <trans-unit id="e8a3c516ce1202b04e270df3d4677614499f980f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonitorRef&lt;/code&gt; can also be used in subsequent calls to &lt;code&gt;&lt;a href=&quot;#demonitor-1&quot;&gt;demonitor/1&lt;/a&gt;&lt;/code&gt; to remove a monitor.</source>
          <target state="translated">&lt;code&gt;MonitorRef&lt;/code&gt; は、モニターを削除するための &lt;code&gt;&lt;a href=&quot;#demonitor-1&quot;&gt;demonitor/1&lt;/a&gt;&lt;/code&gt; への後続の呼び出しでも使用できます。</target>
        </trans-unit>
        <trans-unit id="789e4dded1962ea4e59f9b85d20ea3fa53deac6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Monitors&lt;/code&gt; represent processes monitored by this port.</source>
          <target state="translated">&lt;code&gt;Monitors&lt;/code&gt; は、このポートによってモニターされるプロセスを表します。</target>
        </trans-unit>
        <trans-unit id="09dc0fe287873b1ad20b0b39ff93d31a685de6db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Move actor&lt;/code&gt; - Left mouse button drag and drop on actor name tag. Move the actor by first clicking on the actor name, keeping the button pressed while moving the cursor to a new location and release the button where the actor should be moved to.</source>
          <target state="translated">&lt;code&gt;Move actor&lt;/code&gt; -マウスの左ボタンを俳優名タグにドラッグアンドドロップします。最初に俳優名をクリックし、ボタンを押したままカーソルを新しい場所に移動して俳優を移動し、俳優の移動先のボタンを離します。</target>
        </trans-unit>
        <trans-unit id="7b274d4a050114b3ad61d946117a0d94197bdb59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MsgData&lt;/code&gt; is the message specific data used in the SNMP message. In SNMPv1 and SNMPv2c, this message data is the community string. In SNMPv3, it is the context information.</source>
          <target state="translated">&lt;code&gt;MsgData&lt;/code&gt; は、SNMPメッセージで使用されるメッセージ固有のデータです。SNMPv1およびSNMPv2cでは、このメッセージデータはコミュニティストリングです。SNMPv3では、これはコンテキスト情報です。</target>
        </trans-unit>
        <trans-unit id="b9d0ab3d8c7fc0fd7e84a099f99cc76f21806a7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MsgData&lt;/code&gt; is the message specific data used in the SNMP message. This value is normally sent to &lt;code&gt;snmpa_mpd:generate_message/4&lt;/code&gt;. In SNMPv1 and SNMPv2c, this message data is the community string. In SNMPv3, it is the context information.</source>
          <target state="translated">&lt;code&gt;MsgData&lt;/code&gt; は、SNMPメッセージで使用されるメッセージ固有のデータです。通常、この値は &lt;code&gt;snmpa_mpd:generate_message/4&lt;/code&gt; に送信されます。SNMPv1およびSNMPv2cでは、このメッセージデータはコミュニティストリングです。SNMPv3では、これはコンテキスト情報です。</target>
        </trans-unit>
        <trans-unit id="85e02c6801c032defd1ced4700fd5848d432dc82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MsgData&lt;/code&gt; is the message specific data used in the SNMP message. This value is received from the &lt;code&gt;&lt;a href=&quot;snmpm_mpd#process_msg&quot;&gt;process_msg&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;MsgData&lt;/code&gt; は、SNMPメッセージで使用されるメッセージ固有のデータです。この値は、 &lt;code&gt;&lt;a href=&quot;snmpm_mpd#process_msg&quot;&gt;process_msg&lt;/a&gt;&lt;/code&gt; 関数から受け取ります。</target>
        </trans-unit>
        <trans-unit id="c36fb42da4a1981ca1f242d482e55043db1c30e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MsgData&lt;/code&gt; is the message specific data used in the SNMP message. This value is received in a &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu&quot;&gt;send_pdu&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu_req&quot;&gt; send_pdu_req&lt;/a&gt;&lt;/code&gt; message from the agent. In SNMPv1 and SNMPv2c, this message data is the community string. In SNMPv3, it is the context information.</source>
          <target state="translated">&lt;code&gt;MsgData&lt;/code&gt; は、SNMPメッセージで使用されるメッセージ固有のデータです。この値は、エージェントからの &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu&quot;&gt;send_pdu&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu_req&quot;&gt; send_pdu_req&lt;/a&gt;&lt;/code&gt; メッセージで受信されます。SNMPv1およびSNMPv2cでは、このメッセージデータはコミュニティストリングです。SNMPv3では、これはコンテキスト情報です。</target>
        </trans-unit>
        <trans-unit id="ae0b302d8aa0d6662b1e9d5ce1cde5ca08a0d8cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MsgData&lt;/code&gt; is the message specific data used in the SNMP message. This value is received in a &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu&quot;&gt;send_pdu&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu_req&quot;&gt;send_pdu_req&lt;/a&gt;&lt;/code&gt; message from the agent. In SNMPv1 and SNMPv2c, this message data is the community string. In SNMPv3, it is the context information.</source>
          <target state="translated">&lt;code&gt;MsgData&lt;/code&gt; は、SNMPメッセージで使用されるメッセージ固有のデータです。この値は、 &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu&quot;&gt;send_pdu&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;snmp_agent_netif#im_send_pdu_req&quot;&gt;send_pdu_req&lt;/a&gt;&lt;/code&gt; メッセージでエージェントから受信されます。SNMPv1およびSNMPv2cでは、このメッセージデータはコミュニティストリングです。SNMPv3では、これはコンテキスト情報です。</target>
        </trans-unit>
        <trans-unit id="35f7d6a26d9b5f9eed5e97b95d8bf241cea559e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N'&lt;/code&gt; = 4 * &lt;code&gt;Len&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;N'&lt;/code&gt; = 4 * &lt;code&gt;Len&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="667dbaef5cd339cbd9b33e3f22daef03eb0a343e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N-1&lt;/code&gt; causes the first argument to be decremented until it becomes 0. When this occurs, the first clause of &lt;code&gt;ping/2&lt;/code&gt; is executed:</source>
          <target state="translated">&lt;code&gt;N-1&lt;/code&gt; を指定すると、最初の引数が0になるまでデクリメントされます。これが発生すると、 &lt;code&gt;ping/2&lt;/code&gt; の最初の句が実行されます。</target>
        </trans-unit>
        <trans-unit id="ffa2255c29b5026e443ca3d708e0955e501b7b04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; is the number of character rows or columns that the I/O device has, if applicable to the I/O device handled by the I/O server, otherwise &lt;code&gt;{error, enotsup}&lt;/code&gt; is a good answer.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; は、I / Oサーバーが処理するI / Oデバイスに該当する場合、I / Oデバイスが持つ文字の行または列の数です。それ以外の場合は、 &lt;code&gt;{error, enotsup}&lt;/code&gt; が適切な回答です。</target>
        </trans-unit>
        <trans-unit id="8db9fd57288267d9c537c3d85ce50ce3099c6903" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; is the number of characters to be read from the I/O device.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; は、I / Oデバイスから読み取られる文字数です。</target>
        </trans-unit>
        <trans-unit id="2dd07fd3cebf7e54becad5f2ab92a0406c76ad06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; is the number of keys in the Map.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; はマップ内のキーの数です。</target>
        </trans-unit>
        <trans-unit id="441c69f52fc06c07241bbfe4cf23af6c58ed2224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; must be an integer in the interval 0..10000. If &lt;code&gt;N&lt;/code&gt; &amp;gt; 0, call saving is made active for the process. This means that information about the &lt;code&gt;N&lt;/code&gt; most recent global function calls, BIF calls, sends, and receives made by the process are saved in a list, which can be retrieved with &lt;code&gt;process_info(Pid, last_calls)&lt;/code&gt;. A global function call is one in which the module of the function is explicitly mentioned. Only a fixed amount of information is saved, as follows:</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; は0..10000の範囲の整数でなければなりません。 &lt;code&gt;N&lt;/code&gt; &amp;gt; 0の場合、コール保存がプロセスに対してアクティブになります。つまり、プロセスによって行われた最新の &lt;code&gt;N&lt;/code&gt; 個のグローバル関数呼び出し、BIF呼び出し、送信、および受信に関する情報は、 &lt;code&gt;process_info(Pid, last_calls)&lt;/code&gt; で取得できるリストに保存されます。グローバル関数呼び出しは、関数のモジュールが明示的に記述されているものです。次のように、一定量の情報のみが保存されます。</target>
        </trans-unit>
        <trans-unit id="3125cf3d2ad76dacca25c189c2a89e92339b28a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; must lie in the range &lt;code&gt;0..32&lt;/code&gt; and &lt;code&gt;H&lt;/code&gt; must be a non-negative integer less than &lt;code&gt;1 bsl (32-N)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; は、範囲内になければならない &lt;code&gt;0..32&lt;/code&gt; 及び &lt;code&gt;H&lt;/code&gt; はより小さい負でない整数でなければならない &lt;code&gt;1 bsl (32-N)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8b95c0adc211c7570eb1260860e43d9e73bb51ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; specifies the index of the file to be read. If &lt;code&gt;N&lt;/code&gt; is omitted, the whole wrap log file is read; if it is specified, only the specified index file is read.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; は、読み取るファイルのインデックスを指定します。場合は &lt;code&gt;N&lt;/code&gt; が省略され、全体のラップログファイルが読み込まれます。指定されている場合は、指定されたインデックスファイルのみが読み取られます。</target>
        </trans-unit>
        <trans-unit id="58ca891041da8eb3be284b7a1078c0cd9e2f3f66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;N&lt;/code&gt; x &lt;code&gt;F&lt;/code&gt; words + the size of all keys and values.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; x &lt;code&gt;F&lt;/code&gt; ワード+すべてのキーと値のサイズ。</target>
        </trans-unit>
        <trans-unit id="7a21eef3be4d9915bc452c56ba51309dd73effd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEWER_REFERENCE_EXT&lt;/code&gt; was introduced in OTP 19, but only to be decoded and echoed back. Not encoded for local references.</source>
          <target state="translated">&lt;code&gt;NEWER_REFERENCE_EXT&lt;/code&gt; はOTP19で導入されましたが、デコードされてエコーバックされるだけです。ローカル参照用にエンコードされていません。</target>
        </trans-unit>
        <trans-unit id="05fae51607d9da96e6bddeb0c0b3717ed5838ff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEW_PID_EXT&lt;/code&gt; was introduced in OTP 19, but only to be decoded and echoed back. Not encoded for local processes.</source>
          <target state="translated">&lt;code&gt;NEW_PID_EXT&lt;/code&gt; はOTP19で導入されましたが、デコードされてエコーバックされるだけです。ローカルプロセス用にエンコードされていません。</target>
        </trans-unit>
        <trans-unit id="b69b8aca1134bccd5bc15c79be18d4223b75c5c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEW_PORT_EXT&lt;/code&gt; was introduced in OTP 19, but only to be decoded and echoed back. Not encoded for local ports.</source>
          <target state="translated">&lt;code&gt;NEW_PORT_EXT&lt;/code&gt; はOTP19で導入されましたが、デコードされてエコーバックされるだけです。ローカルポート用にエンコードされていません。</target>
        </trans-unit>
        <trans-unit id="8dab69d7ef148bb2c4d7575e6eeeccaa62ad35d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEW_REFERENCE_EXT&lt;/code&gt; was introduced with distribution version 4. In version 4, &lt;code&gt;N'&lt;/code&gt; is to be at most 12.</source>
          <target state="translated">&lt;code&gt;NEW_REFERENCE_EXT&lt;/code&gt; はディストリビューションバージョン4で導入されました。バージョン4では、 &lt;code&gt;N'&lt;/code&gt; は最大12です。</target>
        </trans-unit>
        <trans-unit id="9881389ed7b284c1c1a6b0690d329d906624d099" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NElements&lt;/code&gt; is the value of the &lt;code&gt;info/1,2&lt;/code&gt; option &lt;code&gt;n_elements&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NElements&lt;/code&gt; は、 &lt;code&gt;info/1,2&lt;/code&gt; オプション &lt;code&gt;n_elements&lt;/code&gt; の値です。</target>
        </trans-unit>
        <trans-unit id="1da097ac18a4009d2b893984fe6a8bff88d195b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NO_FPE_SIGNALS&lt;/code&gt; - 1 if FPE signals are not enable in runtime system, 0 otherwise.</source>
          <target state="translated">&lt;code&gt;NO_FPE_SIGNALS&lt;/code&gt; -ランタイムシステムでFPE信号が有効になっていない場合は1、それ以外の場合は0。</target>
        </trans-unit>
        <trans-unit id="a4f1743226213632e93600180fae6256a6657bf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name =&lt;/code&gt;&lt;code&gt;os:env_var_name()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Name =&lt;/code&gt; &lt;code&gt;os:env_var_name()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="170416d54102ee3c36377fa1c37d609948d05ae8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; (an atom) is a function name.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; （アトム）は関数名です。</target>
        </trans-unit>
        <trans-unit id="b87fe0848821f2e52817a442b1caf9056fab855c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; and all the &lt;code&gt;Ki&lt;/code&gt; must be atom literals, and all the &lt;code&gt;Ti&lt;/code&gt; must be constant literals. All the &lt;code&gt;Vi&lt;/code&gt; and &lt;code&gt;Ei&lt;/code&gt; must have type &lt;code&gt;var&lt;/code&gt; and represent function names. All the &lt;code&gt;Fi&lt;/code&gt; must have type &lt;code&gt;'fun'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; とすべての &lt;code&gt;Ki&lt;/code&gt; はアトムリテラルである必要があり、すべての &lt;code&gt;Ti&lt;/code&gt; は定数リテラルである必要があります。すべての &lt;code&gt;Vi&lt;/code&gt; と &lt;code&gt;Ei&lt;/code&gt; は、タイプ &lt;code&gt;var&lt;/code&gt; を持ち、関数名を表す必要があります。すべての &lt;code&gt;Fi&lt;/code&gt; は &lt;code&gt;'fun'&lt;/code&gt; タイプである必要があります。</target>
        </trans-unit>
        <trans-unit id="db357be2c6e24ba8d75e94a61e6e120c71ae64d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; does not refer to a symbolic link or the name of the file that it refers to does not conform to the expected encoding.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; がシンボリックリンクを参照していないか、参照しているファイルの名前が予期されたエンコーディングに準拠していません。</target>
        </trans-unit>
        <trans-unit id="2df931b32fd691b415cd811641613597990693bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; does not refer to a symbolic link.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; はシンボリックリンクを参照していません。</target>
        </trans-unit>
        <trans-unit id="75cdce804a63cdd95631d5a56a27a0bcf3baf793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; in these actions can be a component name of a &lt;code&gt;SEQUENCE OF&lt;/code&gt; or a &lt;code&gt;SET OF&lt;/code&gt;, or a name of an alternative in a &lt;code&gt;CHOICE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; これらのアクションには、コンポーネント名とすることができる &lt;code&gt;SEQUENCE OF&lt;/code&gt; 又は &lt;code&gt;SET OF&lt;/code&gt; 、または代替の名前 &lt;code&gt;CHOICE&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c3eb93ef8149458ab482435e4c9a7d47ca64bfd4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the checkpoint name. &lt;code&gt;Nodes&lt;/code&gt; are the nodes where the checkpoint is known.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; はチェックポイント名です。 &lt;code&gt;Nodes&lt;/code&gt; は、チェックポイントがわかっているノードです。</target>
        </trans-unit>
        <trans-unit id="7ac46ed1eedcb3ad614812c9cbbd3f2b44f49ebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the command name set by &lt;code&gt;&lt;a href=&quot;#open_port-2&quot;&gt;open_port/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#open_port-2&quot;&gt;open_port/2&lt;/a&gt;&lt;/code&gt; によって設定されたコマンド名です。</target>
        </trans-unit>
        <trans-unit id="e2cdd3bd8ec9230d1df9f453b5c15f634833bccb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the full dynamic node name of &lt;code&gt;A&lt;/code&gt;, as a string of bytes. &lt;code&gt;Nlen&lt;/code&gt; is the byte length of the node name in 16-bit big endian. Any extra data after the node &lt;code&gt;Name&lt;/code&gt; must be accepted and ignored.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; は、バイト文字列としての &lt;code&gt;A&lt;/code&gt; の完全な動的ノード名です。 &lt;code&gt;Nlen&lt;/code&gt; は、16ビットビッグエンディアンでのノード名のバイト長です。ノード &lt;code&gt;Name&lt;/code&gt; 後の余分なデータはすべて受け入れて無視する必要があります。</target>
        </trans-unit>
        <trans-unit id="d550506e707d5d81ed0acd558c1bd61cacd410bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the locally registered name of each &lt;code&gt;gen_server&lt;/code&gt; process.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; は、各 &lt;code&gt;gen_server&lt;/code&gt; プロセスのローカルに登録された名前です。</target>
        </trans-unit>
        <trans-unit id="73eb324042bd7592ebc61b396a4e74d0804b286d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the name of an activated checkpoint. For details on how to include table names in checkpoints, see the function &lt;code&gt;mnesia:activate_checkpoint(ArgList)&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;#checkpoints&quot;&gt;Checkpoints&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; は、アクティブ化されたチェックポイントの名前です。チェックポイントでテーブル名を含める方法の詳細については、関数を参照 &lt;code&gt;mnesia:activate_checkpoint(ArgList)&lt;/code&gt; で &lt;code&gt;&lt;a href=&quot;#checkpoints&quot;&gt;Checkpoints&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a8f45333ed70e58f7d247411d6058ef093b59b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the name of the driver to be unloaded. The name can be specified as an &lt;code&gt;iolist()&lt;/code&gt; or as an &lt;code&gt;atom()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; は、アンロードするドライバーの名前です。名前は &lt;code&gt;iolist()&lt;/code&gt; または &lt;code&gt;atom()&lt;/code&gt; として指定できます。</target>
        </trans-unit>
        <trans-unit id="ef8cb9dda49ee5482283bd549deb325f92f2fb87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the name of the library. &lt;code&gt;VerNum&lt;/code&gt; is the numeric version according to the library's own versioning scheme. &lt;code&gt;VerStr&lt;/code&gt; contains a text variant of the version.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; はライブラリの名前です。 &lt;code&gt;VerNum&lt;/code&gt; は、ライブラリ自体のバージョン管理スキームによる数値バージョンです。 &lt;code&gt;VerStr&lt;/code&gt; には、バージョンのテキストバリアントが含まれています。</target>
        </trans-unit>
        <trans-unit id="771edaaf4f3e7410abb24403f17386952fa561ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the name of the local function (an atom) and &lt;code&gt;Arguments&lt;/code&gt; is a list of the &lt;strong&gt;evaluated&lt;/strong&gt; arguments. The function handler returns the value of the local function. In this case, the current bindings cannot be accessed. To signal an error, the function handler calls &lt;code&gt;exit/1&lt;/code&gt; with a suitable exit value.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; はローカル関数（アトム）の名前で、 &lt;code&gt;Arguments&lt;/code&gt; は&lt;strong&gt;評価された&lt;/strong&gt;引数のリストです。関数ハンドラは、ローカル関数の値を返します。この場合、現在のバインディングにアクセスできません。エラーを通知するために、関数ハンドラーは適切な終了値で &lt;code&gt;exit/1&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a43e3667be07ca142803c5790c58519639672f7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the name of the local function (an atom), &lt;code&gt;Arguments&lt;/code&gt; is a list of the &lt;strong&gt;unevaluated&lt;/strong&gt; arguments, and &lt;code&gt;Bindings&lt;/code&gt; are the current variable bindings. The function handler returns:</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; はローカル関数（アトム）の名前、 &lt;code&gt;Arguments&lt;/code&gt; は&lt;strong&gt;未評価の&lt;/strong&gt;引数のリスト、 &lt;code&gt;Bindings&lt;/code&gt; は現在の変数バインディングです。関数ハンドラは次を返します：</target>
        </trans-unit>
        <trans-unit id="0a709740b8281285c41301bf694df250b5416fd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the name of the table. It is usually the same name as the name of the records that constitute the table. For details, see &lt;code&gt;record_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; はテーブルの名前です。通常は、テーブルを構成するレコードの名前と同じ名前です。詳細については、 &lt;code&gt;record_name&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="9f22f7134ccdd1ebfe0c6dbad2b4c85066f34a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; is the name you allocated to the Unix host in your &lt;code&gt;require&lt;/code&gt; statement, for example:</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; は、 &lt;code&gt;require&lt;/code&gt; ステートメントでUnixホストに割り当てた名前です。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="f92e9c2e33b39ed7fe892a2f6b58625c24db2d61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; must be a &lt;strong&gt;non-empty&lt;/strong&gt; string.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; は&lt;strong&gt;空でない&lt;/strong&gt;文字列でなければなりません。</target>
        </trans-unit>
        <trans-unit id="7d3a0f6f135240052a580b6c1e66616b1056df5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; must be an atom.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; はアトムでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8956a3e0869a4e2f39147cecb7e9876f6164b93b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt;, &lt;code&gt;Vsn&lt;/code&gt;, &lt;code&gt;EVsn&lt;/code&gt;, and &lt;code&gt;AppVsn&lt;/code&gt; are strings.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 、 &lt;code&gt;Vsn&lt;/code&gt; 、 &lt;code&gt;EVsn&lt;/code&gt; 、および &lt;code&gt;AppVsn&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="50d4c67b9092aa698d36ec4bda6efa981e50be27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt;, if the &lt;code&gt;gen_server&lt;/code&gt; process is locally registered</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; （ &lt;code&gt;gen_server&lt;/code&gt; プロセスがローカルに登録されている場合）</target>
        </trans-unit>
        <trans-unit id="60de7db607b53ece98d1d7aa438add6eabe64c8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt;, if the event manager is locally registered</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; （イベントマネージャがローカルに登録されている場合）</target>
        </trans-unit>
        <trans-unit id="8b8fe5e7cd19a344662822fe3984a523410afd7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt;, if the supervisor is locally registered</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; （スーパーバイザーがローカルに登録されている場合）</target>
        </trans-unit>
        <trans-unit id="66736cc8494e055af92cabef62c336e8b430dd24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NameInArchive&lt;/code&gt; is the name under which the file becomes stored in the tar file. The file gets this name when it is extracted from the tar file.</source>
          <target state="translated">&lt;code&gt;NameInArchive&lt;/code&gt; は、ファイルがtarファイルに格納されるときの名前です。ファイルは、tarファイルから抽出されるときにこの名前を取得します。</target>
        </trans-unit>
        <trans-unit id="545c865bca330a853462ad208219ff76f96725b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NameX&lt;/code&gt; are the names of the expected callbacks. &lt;code&gt;ArgX_Y&lt;/code&gt; and &lt;code&gt;ResX&lt;/code&gt; are types as they are described in &lt;code&gt;&lt;a href=&quot;../reference_manual/typespec&quot;&gt;Types and Function Specifications&lt;/a&gt;&lt;/code&gt;. The whole syntax of the &lt;code&gt;-spec&lt;/code&gt; attribute is supported by the &lt;code&gt;-callback&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;NameX&lt;/code&gt; は、予期されるコールバックの名前です。 &lt;code&gt;ArgX_Y&lt;/code&gt; と &lt;code&gt;ResX&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;../reference_manual/typespec&quot;&gt;Types and Function Specifications&lt;/a&gt;&lt;/code&gt; 説明されている型です。 &lt;code&gt;-spec&lt;/code&gt; 属性の構文全体が-callback属性でサポートされて &lt;code&gt;-callback&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="7e845e64778c4c705a878ee72c3537821180e5cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NameX&lt;/code&gt; are the names of the expected callbacks. &lt;code&gt;ArgX_Y&lt;/code&gt; and &lt;code&gt;ResX&lt;/code&gt; are types as they are described in &lt;code&gt;Types and Function Specifications&lt;/code&gt;. The whole syntax of the &lt;code&gt;-spec&lt;/code&gt; attribute is supported by the &lt;code&gt;-callback&lt;/code&gt; attribute.</source>
          <target state="translated">&lt;code&gt;NameX&lt;/code&gt; は、予想されるコールバックの名前です。 &lt;code&gt;ArgX_Y&lt;/code&gt; と &lt;code&gt;ResX&lt;/code&gt; は、 &lt;code&gt;Types and Function Specifications&lt;/code&gt; 説明されているタイプです。全体の構文 &lt;code&gt;-spec&lt;/code&gt; 属性がでサポートされてい &lt;code&gt;-callback&lt;/code&gt; 属性。</target>
        </trans-unit>
        <trans-unit id="b136947175586c5142c8832b87cb86ef8bd2be6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Namespace&lt;/code&gt; is a filename and is encoded and decoded as discussed in module &lt;code&gt;&lt;a href=&quot;file&quot;&gt;file&lt;/a&gt;&lt;/code&gt;, with the following exceptions:</source>
          <target state="translated">&lt;code&gt;Namespace&lt;/code&gt; はファイル名であり、モジュール &lt;code&gt;&lt;a href=&quot;file&quot;&gt;file&lt;/a&gt;&lt;/code&gt; で説明されているようにエンコードおよびデコードされますが、次の例外があります。</target>
        </trans-unit>
        <trans-unit id="ccbac92a2a52f857fba9558a5924f557a8a6fcbe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NativeErrorCode&lt;/code&gt; is the numberic error code returned by the underlying database. The possible values and their meanings are dependent on the database being used.</source>
          <target state="translated">&lt;code&gt;NativeErrorCode&lt;/code&gt; は、基になるデータベースによって返される番号のエラーコードです。可能な値とその意味は、使用しているデータベースによって異なります。</target>
        </trans-unit>
        <trans-unit id="765470b4e281d8e1224903815a6ad49c4c5919e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NegotiationTimeout&lt;/code&gt; in a call establishing an ssh session, for example &lt;code&gt;ssh:connect/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NegotiationTimeout&lt;/code&gt; sshセッションを確立する呼び出しのNegotiationTimeout（例 &lt;code&gt;ssh:connect/3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94cbc764c37273ab12f912e6692a604d1f8725cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;New&lt;/code&gt; already exists.</source>
          <target state="translated">&lt;code&gt;New&lt;/code&gt; すでに存在しています。</target>
        </trans-unit>
        <trans-unit id="328d53b4e71ea5302614cc8ca4f8a61091e770e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;New&lt;/code&gt; is a list of parameter-value tuples including all added configuration parameters.</source>
          <target state="translated">&lt;code&gt;New&lt;/code&gt; は、追加されたすべての構成パラメーターを含むパラメーター値タプルのリストです。</target>
        </trans-unit>
        <trans-unit id="6e31e51b7e149794f503717a777ea948ce0cc5e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NewAttributeList&lt;/code&gt; and &lt;code&gt;NewRecordName&lt;/code&gt; specify the attributes and the new record type of the converted table. Table name always remains unchanged. If &lt;code&gt;record_name&lt;/code&gt; is changed, only the Mnesia functions that use table identifiers work, for example, &lt;code&gt;mnesia:write/3&lt;/code&gt; works, but not &lt;code&gt;mnesia:write/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NewAttributeList&lt;/code&gt; と &lt;code&gt;NewRecordName&lt;/code&gt; は、変換されたテーブルの属性と新しいレコードタイプを指定します。テーブル名は常に変更されません。 &lt;code&gt;record_name&lt;/code&gt; が変更された場合、テーブル識別子を使用するMnesia関数のみが機能します。たとえば、 &lt;code&gt;mnesia:write/3&lt;/code&gt; は機能しますが、 &lt;code&gt;mnesia:write/1&lt;/code&gt; は機能しません。</target>
        </trans-unit>
        <trans-unit id="24c0dbf798566229a939b753d52c26eae9958d4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NewGroupDefs&lt;/code&gt; is the possibly modified version of this list.</source>
          <target state="translated">&lt;code&gt;NewGroupDefs&lt;/code&gt; は、このリストの変更された可能性のあるバージョンです。</target>
        </trans-unit>
        <trans-unit id="28d982c649f36ccbbd9ba53caa157858385419a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NewPasswd&lt;/code&gt;. The new password to set. Should be &quot;&quot; if the server is to generate the password. In this case, the result will be &lt;code&gt;{ok, GenPasswd}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NewPasswd&lt;/code&gt; 。設定する新しいパスワード。サーバーがパスワードを生成する場合は、 &quot;&quot;にする必要があります。この場合、結果は &lt;code&gt;{ok, GenPasswd}&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="515b7ef71b0ee4df2f875a6d00668174d6db04ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NewReturn&lt;/code&gt; is the possibly modified return value of &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt;. To recover from a failure in &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt;, return &lt;code&gt;ConfigList&lt;/code&gt; with the &lt;code&gt;tc_status&lt;/code&gt; element removed. For more details, see &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#post&quot;&gt;Post Hooks&lt;/a&gt;&lt;/code&gt; in section &quot;Manipulating Tests&quot; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;NewReturn&lt;/code&gt; は、変更される可能性のある &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; の戻り値です。障害から回復するには &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; 、返す &lt;code&gt;ConfigList&lt;/code&gt; をして &lt;code&gt;tc_status&lt;/code&gt; の削除要素。詳細については、ユーザーズガイドの「テストの操作」のセクションにある &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#post&quot;&gt;Post Hooks&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="ec62b6a5ecc1ea4c0b51c98820c28f6998c8d6a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NewReturn&lt;/code&gt; is the possibly modified return value of &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt;. To recover from a failure in &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt;, return &lt;code&gt;ConfigList&lt;/code&gt; with the &lt;code&gt;tc_status&lt;/code&gt; element removed. For more details, see &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#post&quot;&gt; Post Hooks&lt;/a&gt;&lt;/code&gt; in section &quot;Manipulating Tests&quot; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;NewReturn&lt;/code&gt; は、の可能性が修正さ戻り値である &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; 。障害から回復するには &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; 、返す &lt;code&gt;ConfigList&lt;/code&gt; をして &lt;code&gt;tc_status&lt;/code&gt; の削除要素。詳細については、ユーザーズガイドの「テストの操作」セクションの &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#post&quot;&gt; Post Hooks&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b209ba1c72d5884aeecf167a743b5dc76a7f63d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NewReturn&lt;/code&gt; is the possibly modified version of &lt;code&gt;Return&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NewReturn&lt;/code&gt; は、 &lt;code&gt;Return&lt;/code&gt; の変更された可能性のあるバージョンです。</target>
        </trans-unit>
        <trans-unit id="7c2990b022e8e0325b78a187512f911c29277388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NewState&lt;/code&gt; is a similar tuple where &lt;code&gt;Module&lt;/code&gt; and &lt;code&gt;Id&lt;/code&gt; are to have the same values as in &lt;code&gt;State&lt;/code&gt;, but the value of &lt;code&gt;HandlerState&lt;/code&gt; can be different. Returning a &lt;code&gt;NewState&lt;/code&gt;, whose &lt;code&gt;Module&lt;/code&gt; or &lt;code&gt;Id&lt;/code&gt; values differ from those of &lt;code&gt;State&lt;/code&gt;, leaves the state of the event handler unchanged. For a &lt;code&gt;gen_event&lt;/code&gt; process, &lt;code&gt;StateFun&lt;/code&gt; is called once for each event handler registered in the &lt;code&gt;gen_event&lt;/code&gt; process.</source>
          <target state="translated">&lt;code&gt;NewState&lt;/code&gt; は似たタプルで、 &lt;code&gt;Module&lt;/code&gt; と &lt;code&gt;Id&lt;/code&gt; は &lt;code&gt;State&lt;/code&gt; と同じ値を持ちますが、 &lt;code&gt;HandlerState&lt;/code&gt; の値は異なる場合があります。戻る &lt;code&gt;NewState&lt;/code&gt; にその、 &lt;code&gt;Module&lt;/code&gt; または &lt;code&gt;Id&lt;/code&gt; の値と異なる &lt;code&gt;State&lt;/code&gt; 、そのままイベントハンドラの状態を残します。 &lt;code&gt;gen_event&lt;/code&gt; プロセス、 &lt;code&gt;StateFun&lt;/code&gt; はに登録された各イベントハンドラの後に呼び出され &lt;code&gt;gen_event&lt;/code&gt; プロセス。</target>
        </trans-unit>
        <trans-unit id="17b32d3a81246afcc0dd62838016f0409a1eee0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NewState&lt;/code&gt; is stored as &lt;code&gt;hash_state&lt;/code&gt; among the other &lt;code&gt;frag_properties&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NewState&lt;/code&gt; は、他の &lt;code&gt;frag_properties&lt;/code&gt; の中で &lt;code&gt;hash_state&lt;/code&gt; として保存されます。</target>
        </trans-unit>
        <trans-unit id="3abda6b9a30de0a066f89a313d615ecf29c6078d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NewValue&lt;/code&gt; is guaranteed to be of the correct type, length and within ranges, as specified in the MIB. If the object is an enumerated integer or of type BITS, the integer value is used.</source>
          <target state="translated">&lt;code&gt;NewValue&lt;/code&gt; は、MIBで指定されているとおり、正しいタイプ、長さ、および範囲内であることが保証されています。オブジェクトが列挙整数またはBITSタイプの場合、整数値が使用されます。</target>
        </trans-unit>
        <trans-unit id="785ceb38e2973891b238ae5e1cba88100a2cfa0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Next&lt;/code&gt; - Scrolls &lt;code&gt;all&lt;/code&gt; viewers one page forward.</source>
          <target state="translated">&lt;code&gt;Next&lt;/code&gt; - &lt;code&gt;all&lt;/code&gt; ビューアを1ページ先にスクロールします。</target>
        </trans-unit>
        <trans-unit id="fcaf71de120e2b7991d4f0e072e835ed3b0c6bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Next&lt;/code&gt; - Scrolls &lt;code&gt;this&lt;/code&gt; viewer one page forward.</source>
          <target state="translated">&lt;code&gt;Next&lt;/code&gt; - &lt;code&gt;this&lt;/code&gt; ビューアを1ページ先にスクロールします。</target>
        </trans-unit>
        <trans-unit id="f5ae4fc286f50c9f2e1b1eb7c5854d1833ad72ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoWrittenItems&lt;/code&gt; is the number of items written to the log since the disk log process was created.</source>
          <target state="translated">&lt;code&gt;NoWrittenItems&lt;/code&gt; は、ディスクログプロセスの作成以降にログに書き込まれたアイテムの数です。</target>
        </trans-unit>
        <trans-unit id="fa474add3809ed4879c7a3c1a09c0fc38388a150" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Node&lt;/code&gt; and &lt;code&gt;Creation&lt;/code&gt; are as in &lt;code&gt;&lt;a href=&quot;#REFERENCE_EXT&quot;&gt;REFERENCE_EXT&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; と &lt;code&gt;Creation&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;#REFERENCE_EXT&quot;&gt;REFERENCE_EXT&lt;/a&gt;&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="d0137e00a0a60799cb48e18d9537f71c92851f18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Node&lt;/code&gt; is not an atom.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; はアトムではありません。</target>
        </trans-unit>
        <trans-unit id="07b70ef38f1f3d3e2a0ff9fe40a1a2bd64902bfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Node&lt;/code&gt; is the local node.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; はローカルノードです。</target>
        </trans-unit>
        <trans-unit id="66cbb254a1d378f7244a990b013aeea1ed865b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeDesc = [Node | {Node,...,Node}]&lt;/code&gt; is a list of node names in priority order. The order between nodes in a tuple is undefined.</source>
          <target state="translated">&lt;code&gt;NodeDesc = [Node | {Node,...,Node}]&lt;/code&gt; は、優先順位の高いノード名のリストです。タプル内のノード間の順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="74750ce275bd88c97d759afd3cb362af869f6aae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeInfo&lt;/code&gt; is a string written for each active node. When all &lt;code&gt;NodeInfo&lt;/code&gt; has been written the connection is closed by the EPMD.</source>
          <target state="translated">&lt;code&gt;NodeInfo&lt;/code&gt; は、アクティブなノードごとに書き込まれる文字列です。すべての &lt;code&gt;NodeInfo&lt;/code&gt; が書き込まれると、EPMDによって接続が閉じられます。</target>
        </trans-unit>
        <trans-unit id="586d837c1f1ce6b8f6dae5999de20273b61f1bb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeInfo&lt;/code&gt; is a string written for each node kept in the EPMD. When all &lt;code&gt;NodeInfo&lt;/code&gt; has been written the connection is closed by the EPMD.</source>
          <target state="translated">&lt;code&gt;NodeInfo&lt;/code&gt; は、EPMDに保持されるノードごとに書き込まれる文字列です。すべての &lt;code&gt;NodeInfo&lt;/code&gt; が書き込まれると、EPMDによって接続が閉じられます。</target>
        </trans-unit>
        <trans-unit id="490b80d8655d54125bed73203f8203d1f6634b01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeInfo&lt;/code&gt; is, as expressed in Erlang:</source>
          <target state="translated">&lt;code&gt;NodeInfo&lt;/code&gt; は、Erlangで表現されているとおりです。</target>
        </trans-unit>
        <trans-unit id="b479d5159f0e4a8490e344deca55e474b17b2371" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeType&lt;/code&gt;s:</source>
          <target state="translated">&lt;code&gt;NodeType&lt;/code&gt;s:</target>
        </trans-unit>
        <trans-unit id="a7b2c3bb667de2fd85c633efa594c6e2eea459ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Nodes&lt;/code&gt; is a list of node names to which the request is to be sent. Default value is the list of all known nodes &lt;code&gt;[node()|nodes()]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Nodes&lt;/code&gt; は、リクエストの送信先となるノード名のリストです。デフォルト値は、既知のすべてのノードのリスト &lt;code&gt;[node()|nodes()]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b2cbd691c92a3930825bd9afcdb4de6be7827998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Nodes&lt;/code&gt; is a list of node names where the application can run, in priority from left to right. Node names can be grouped using tuples to indicate that they have the same priority.</source>
          <target state="translated">&lt;code&gt;Nodes&lt;/code&gt; は、アプリケーションが実行できるノード名のリストで、左から右に優先順位が付けられています。タプルを使用してノード名をグループ化し、同じ優先順位を持つことを示すことができます。</target>
        </trans-unit>
        <trans-unit id="58f6ff3875611c95cda43f87920abae3c3e49b50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Nodes&lt;/code&gt; is not a proper list of atoms.</source>
          <target state="translated">&lt;code&gt;Nodes&lt;/code&gt; はアトムの適切なリストではありません。</target>
        </trans-unit>
        <trans-unit id="9b1f8e318225402b1e929bf44753fb73a9820692" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Nodes&lt;/code&gt; is not a proper list of atoms. Note that some requests may already have been sent when the failure occurs. That is, the function may or may not be applied on some nodes.</source>
          <target state="translated">&lt;code&gt;Nodes&lt;/code&gt; はアトムの適切なリストではありません。障害が発生したときに、一部の要求がすでに送信されている可能性があることに注意してください。つまり、この関数は一部のノードに適用される場合とされない場合があります。</target>
        </trans-unit>
        <trans-unit id="13e1ebff4b6f89142207fc73da0648ca05edb15c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Normal (possibly restricted)&lt;/code&gt; mode, in which commands can be edited and expressions evaluated</source>
          <target state="translated">&lt;code&gt;Normal (possibly restricted)&lt;/code&gt; コマンドを編集して式を評価できる通常の（制限されている可能性がある）モード</target>
        </trans-unit>
        <trans-unit id="b37ca8a74b6154ec7f34f34ffd7d84a3e6b7414f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoteStore&lt;/code&gt; is the &lt;code&gt;pid()&lt;/code&gt; of the note-store process.</source>
          <target state="translated">&lt;code&gt;NoteStore&lt;/code&gt; は、ノートストアプロセスの &lt;code&gt;pid()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="034da9f943bf71851a5d9f55fd9a10823d740045" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoteStore&lt;/code&gt; is the pid of the note-store process and &lt;code&gt;MasterAgent&lt;/code&gt; is the pid of the master-agent process.</source>
          <target state="translated">&lt;code&gt;NoteStore&lt;/code&gt; はノートストアプロセスのPIDで、 &lt;code&gt;MasterAgent&lt;/code&gt; はマスターエージェントプロセスのPIDです。</target>
        </trans-unit>
        <trans-unit id="48c23e9c71760101a3f67804c9010616ae9ac30d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoteStore&lt;/code&gt; is the pid of the note-store process.</source>
          <target state="translated">&lt;code&gt;NoteStore&lt;/code&gt; は、ノートストアプロセスのPIDです。</target>
        </trans-unit>
        <trans-unit id="291fb8467f940a165b239b0c369cb0109e1ab7ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Notify&lt;/code&gt; is the value set by the &lt;code&gt;open/1&lt;/code&gt; option &lt;code&gt;notify&lt;/code&gt; or function &lt;code&gt;change_notify/3&lt;/code&gt; for the owners of the log.</source>
          <target state="translated">&lt;code&gt;Notify&lt;/code&gt; は、 &lt;code&gt;open/1&lt;/code&gt; オプションの &lt;code&gt;notify&lt;/code&gt; または関数 &lt;code&gt;change_notify/3&lt;/code&gt; によってログの所有者に設定される値です。</target>
        </trans-unit>
        <trans-unit id="837a08f1c1c9f178a8455d863867aafba680c431" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NotifyName&lt;/code&gt; is a unique non-empty string.</source>
          <target state="translated">&lt;code&gt;NotifyName&lt;/code&gt; は、空でない一意の文字列です。</target>
        </trans-unit>
        <trans-unit id="e8d255fe7cfe9e0e941f5330e4ca4bf0faebaf01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NotifyView&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;NotifyView&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="a2cf72890c44949f9ed7a853209a8be6aef9702b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumFree&lt;/code&gt; number of terms, each one encoded according to its type.</source>
          <target state="translated">&lt;code&gt;NumFree&lt;/code&gt; 用語のNumFree数。それぞれのタイプに従ってエンコードされます。</target>
        </trans-unit>
        <trans-unit id="732c07e7c46a60e9725c43c489bb948b42c1a42a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number&lt;/code&gt; is the number of reductions executed by the process.</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; は、プロセスによって実行された削減の数です。</target>
        </trans-unit>
        <trans-unit id="1d76ee72d1d29eb19fe186bb8b034fe79ae29427" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OCTET STRING&lt;/code&gt; is the simplest of all ASN.1 types. &lt;code&gt;OCTET STRING&lt;/code&gt; only moves or transfers, for example, binary files or other unstructured information complying with two rules: the bytes consist of octets and encoding is not required.</source>
          <target state="translated">&lt;code&gt;OCTET STRING&lt;/code&gt; は、すべてのASN.1タイプの中で最も単純です。 &lt;code&gt;OCTET STRING&lt;/code&gt; は、バイナリファイルやその他の非構造化情報など、2つのルールに準拠した移動または転送のみを行います。バイトはオクテットで構成され、エンコードは必要ありません。</target>
        </trans-unit>
        <trans-unit id="71b349bafb6a64a7db665c51b4a9142d1799133c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ODBCErrorCode&lt;/code&gt; is the ODBC error string returned by the ODBC driver.</source>
          <target state="translated">&lt;code&gt;ODBCErrorCode&lt;/code&gt; は、ODBCドライバーによって返されるODBCエラー文字列です。</target>
        </trans-unit>
        <trans-unit id="8877b0517875c4c1353881308ce26c158f73b91a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OL&lt;/code&gt; is a subset of &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OL&lt;/code&gt; は &lt;code&gt;F&lt;/code&gt; のサブセットです。</target>
        </trans-unit>
        <trans-unit id="7042c1bf2e60730dd0e5780d9209d7e65dc3a368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP Design Principles&lt;/code&gt;, &lt;code&gt;config(4)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;rel&quot;&gt;rel(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;relup&quot;&gt;relup(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;script&quot;&gt;script(4)&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;sys(3)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools(3)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OTP Design Principles&lt;/code&gt; 、 &lt;code&gt;config(4)&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;rel&quot;&gt;rel(4)&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;relup&quot;&gt;relup(4)&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;script&quot;&gt;script(4)&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;sys(3)&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;systools&quot;&gt;systools(3)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="596e2b21797bd5cf187819c3e8f33047157815b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP Design Principles&lt;/code&gt;, &lt;code&gt;kernel(6)&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;app&quot;&gt;app(4)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OTP Design Principles&lt;/code&gt; 、 &lt;code&gt;kernel(6)&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;app&quot;&gt;app(4)&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="46a5eafa384af530e22db3928986f321e1d3b82a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-EVA-LOG-MIB&lt;/code&gt; (in &lt;code&gt;eva&lt;/code&gt;) contains objects for instrumentation and control of the events and alarm logs in the system.</source>
          <target state="translated">&lt;code&gt;OTP-EVA-LOG-MIB&lt;/code&gt; （ &lt;code&gt;eva&lt;/code&gt; 内）には、システム内のイベントとアラームログの計測と制御のためのオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="5354eb3e670814e45621ba2af5edebfff77874ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-EVA-MIB&lt;/code&gt; (in &lt;code&gt;eva&lt;/code&gt;) contains objects for instrumentation and control of the events and alarms in the system.</source>
          <target state="translated">&lt;code&gt;OTP-EVA-MIB&lt;/code&gt; （ &lt;code&gt;eva&lt;/code&gt; 内）には、システム内のイベントとアラームの計測と制御のためのオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="cd0b26353bceaed77b88726762c64be99e2f569a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-LOG-MIB&lt;/code&gt; (in &lt;code&gt;eva&lt;/code&gt;) contains objects for instrumentation and control of the logs and FTP transfer of logs.</source>
          <target state="translated">&lt;code&gt;OTP-LOG-MIB&lt;/code&gt; （ &lt;code&gt;eva&lt;/code&gt; 内）には、ログの計測と制御、およびログのFTP転送のためのオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="fbd55a7b1574a083934ff314d22a089678e67380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-MIB&lt;/code&gt; (in SASL) contains objects for instrumentation of the Erlang nodes, the Erlang machines, and the applications in the system.</source>
          <target state="translated">&lt;code&gt;OTP-MIB&lt;/code&gt; （SASL内）には、Erlangノード、Erlangマシン、およびシステム内のアプリケーションのインスツルメンテーション用のオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="ec0fae7ff36cfd7c9ba14f4f8a001319051a6bde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-OS-MON-MIB&lt;/code&gt; (in &lt;code&gt;oc_mon&lt;/code&gt;) contains objects for instrumentation of disk, memory, and CPU use of the nodes in the system.</source>
          <target state="translated">&lt;code&gt;OTP-OS-MON-MIB&lt;/code&gt; （ &lt;code&gt;oc_mon&lt;/code&gt; 内）には、システム内のノードのディスク、メモリー、およびCPUの使用を計測するためのオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="3091d8303f70a6be1db136f091f6f3b0c83fb7e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-REG&lt;/code&gt; (in SASL) contains the top-level OTP registration objects, used by all other MIBs.</source>
          <target state="translated">&lt;code&gt;OTP-REG&lt;/code&gt; （SASL内）には、他のすべてのMIBで使用されるトップレベルのOTP登録オブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="0582a9a6fe880ec879698a325c9960d6425875fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-REG&lt;/code&gt; (in SNMP) contains the top-level OTP registration objects, used by all other MIBs.</source>
          <target state="translated">&lt;code&gt;OTP-REG&lt;/code&gt; （SNMP内）には、他のすべてのMIBで使用される最上位のOTP登録オブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="1009841b81e68861a21b4e5ed63cd0e3098ce8e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-SNMPEA-LOG-MIB&lt;/code&gt; (in &lt;code&gt;eva&lt;/code&gt;) contains objects for instrumentation and control of the SNMP audit trail log in the system.</source>
          <target state="translated">&lt;code&gt;OTP-SNMPEA-LOG-MIB&lt;/code&gt; （ &lt;code&gt;eva&lt;/code&gt; 内）には、システム内のSNMP監査証跡ログの計測と制御のためのオブジェクトが含まれています。</target>
        </trans-unit>
        <trans-unit id="9dd76d91d3c352becfb98439502cf6422712a44c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-SNMPEA-MIB&lt;/code&gt; (in &lt;code&gt;snmp&lt;/code&gt;) contains objects for instrumentation and control of the extensible SNMP agent itself. The agent also implements the standard SNMPv2-MIB (or v1 part of MIB-II, if SNMPv1 is used).</source>
          <target state="translated">&lt;code&gt;OTP-SNMPEA-MIB&lt;/code&gt; （ &lt;code&gt;snmp&lt;/code&gt; 内）には、拡張可能なSNMPエージェント自体の計測と制御のためのオブジェクトが含まれています。エージェントは、標準のSNMPv2-MIB（またはSNMPv1が使用されている場合はMIB-IIのv1部分）も実装します。</target>
        </trans-unit>
        <trans-unit id="19c565759fb6706bc6b68ac7c50f98cb9c6ab3fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-TC&lt;/code&gt; (in SASL) contains the general Textual Conventions, which can be used by any other MIB.</source>
          <target state="translated">&lt;code&gt;OTP-TC&lt;/code&gt; （SASL内）には、他のMIBで使用できる一般的なテキスト表記法が含まれています。</target>
        </trans-unit>
        <trans-unit id="6cfe56e3becc51b8007df4237b008ee52a4bee8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OTP-TC&lt;/code&gt; (in SNMP) contains the general Textual Conventions, which can be used by any other MIB.</source>
          <target state="translated">&lt;code&gt;OTP-TC&lt;/code&gt; （SNMP内）には、他のMIBで使用できる一般的なテキスト規則が含まれています。</target>
        </trans-unit>
        <trans-unit id="4390b54a343de30c039d51b8f3a4002c40283a0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ok = integer()&lt;/code&gt;, current number of successful test cases.</source>
          <target state="translated">&lt;code&gt;Ok = integer()&lt;/code&gt; 、成功したテストケースの現在の数。</target>
        </trans-unit>
        <trans-unit id="19e1276ce30f4d7d3573a6ae2345113d541579ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OldConfig&lt;/code&gt; is the existing configuration and &lt;code&gt;NewConfig&lt;/code&gt; is the new configuration.</source>
          <target state="translated">&lt;code&gt;OldConfig&lt;/code&gt; は既存の構成であり、 &lt;code&gt;NewConfig&lt;/code&gt; は新しい構成です。</target>
        </trans-unit>
        <trans-unit id="d426f9dcc9f2970db45f15cf56c0e01f2d29fc82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OldPasswd&lt;/code&gt;. Sometimes required by server policy for a user to change their password. If not required, use &lt;code&gt;&lt;a href=&quot;#modify_password-3&quot;&gt;modify_password/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OldPasswd&lt;/code&gt; 。ユーザーが自分のパスワードを変更するためのサーバーポリシーで必要になる場合があります。必要ない場合は、 &lt;code&gt;&lt;a href=&quot;#modify_password-3&quot;&gt;modify_password/3&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="3919a29fdc3871d68b31237220b20168cd002a61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OldRecs&lt;/code&gt; is the contents before the operation.</source>
          <target state="translated">&lt;code&gt;OldRecs&lt;/code&gt; は、操作前のコンテンツです。</target>
        </trans-unit>
        <trans-unit id="2e3bfed079c387e722ebe26d72736f09b66c84c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OldState&lt;/code&gt; and &lt;code&gt;OldData&lt;/code&gt; is the internal state of the &lt;code&gt;gen_statem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OldState&lt;/code&gt; と &lt;code&gt;OldData&lt;/code&gt; 内部の状態である &lt;code&gt;gen_statem&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ac713cf5d1b8888b21c5fb31b7c6845f7785bb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OpCase(move_cx):&lt;/code&gt; defines a label for the instruction. The &lt;code&gt;OpCase()&lt;/code&gt; macro is defined in &lt;code&gt;beam_emu.c&lt;/code&gt;. It will expand this line to &lt;code&gt;lb_move_cx:&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OpCase(move_cx):&lt;/code&gt; 命令のラベルを定義します。 &lt;code&gt;OpCase()&lt;/code&gt; マクロは、で定義され &lt;code&gt;beam_emu.c&lt;/code&gt; 。この行を &lt;code&gt;lb_move_cx:&lt;/code&gt; に展開します。</target>
        </trans-unit>
        <trans-unit id="d368a5ff655901886b6a66d305ea3bf6e5781014" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Opaque&lt;/code&gt; is an opaque data structure that is internal to Mnesia.</source>
          <target state="translated">&lt;code&gt;Opaque&lt;/code&gt; は、Mnesiaの内部にある不透明なデータ構造です。</target>
        </trans-unit>
        <trans-unit id="478156c544529a65641b9e44200481963695f336" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Opaque&lt;/code&gt;. &lt;code&gt;Mnesia&lt;/code&gt; does not interpret this argument, but it is forwarded to the backup module. The &lt;code&gt;Mnesia&lt;/code&gt; default backup module &lt;code&gt;mnesia_backup&lt;/code&gt; interprets this argument as a local filename.</source>
          <target state="translated">&lt;code&gt;Opaque&lt;/code&gt; 。 &lt;code&gt;Mnesia&lt;/code&gt; はこの引数を解釈しませんが、バックアップモジュールに転送されます。 &lt;code&gt;Mnesia&lt;/code&gt; のデフォルトのバックアップモジュール &lt;code&gt;mnesia_backup&lt;/code&gt; の解釈ローカルファイル名として、この引数。</target>
        </trans-unit>
        <trans-unit id="ae66e284cfdfb1114963daa7564852b1152bbd20" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Oper&lt;/code&gt; is the operation performed.</source>
          <target state="translated">&lt;code&gt;Oper&lt;/code&gt; は実行される操作です。</target>
        </trans-unit>
        <trans-unit id="eb4096f3f8213f00afa344d8f15f6fd496a9da6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Operation&lt;/code&gt; is an integer, which is passed on to the driver.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; は整数であり、ドライバーに渡されます。</target>
        </trans-unit>
        <trans-unit id="f36a7227f6d79294c55bea68b2e650721c67c81b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptList&lt;/code&gt; is a list of tuples &lt;code&gt;{Option, Value}&lt;/code&gt;, where &lt;code&gt;Option&lt;/code&gt; always is an atom.</source>
          <target state="translated">&lt;code&gt;OptList&lt;/code&gt; はタプル &lt;code&gt;{Option, Value}&lt;/code&gt; リストで、 &lt;code&gt;Option&lt;/code&gt; は常にアトムです。</target>
        </trans-unit>
        <trans-unit id="287b58eb0e57c1afa55828144b7593765b16a12c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptParams&lt;/code&gt; can be used for specifying optional parameters (&lt;code&gt;default-operation&lt;/code&gt;, &lt;code&gt;test-option&lt;/code&gt;, or &lt;code&gt;error-option&lt;/code&gt;) to be added to the &lt;code&gt;edit-config&lt;/code&gt; request. The value must be a list containing valid simple XML, for example:</source>
          <target state="translated">&lt;code&gt;OptParams&lt;/code&gt; を使用して、 &lt;code&gt;edit-config&lt;/code&gt; リクエストに追加するオプションのパラメーター（ &lt;code&gt;default-operation&lt;/code&gt; 、 &lt;code&gt;test-option&lt;/code&gt; 、または &lt;code&gt;error-option&lt;/code&gt; ）を指定できます。値は、有効な単純なXMLを含むリストである必要があります。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="a8a37a6383faf5bd990e5e4e31890d2a2543b972" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Option&lt;/code&gt; can be any of the following:</source>
          <target state="translated">&lt;code&gt;Option&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="0b5a9dec8ea03d9e3bfe18de6b285b8ec48aa732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Option&lt;/code&gt; can contain Mnesia options or QLC options. Mnesia recognizes the following options (any other option is forwarded to QLC).</source>
          <target state="translated">&lt;code&gt;Option&lt;/code&gt; は、MnesiaオプションまたはQLC オプションを含めることができます。Mnesiaは以下のオプションを認識します（他のオプションはQLCに転送されます）。</target>
        </trans-unit>
        <trans-unit id="6089dd0db2650ae8cb44bd9a18bdf370e7056124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Option&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Option&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="18ac2a922adb6bbd3cc79b09678bafbed8d32509" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Option&lt;/code&gt;s:</source>
          <target state="translated">&lt;code&gt;Option&lt;/code&gt;s:</target>
        </trans-unit>
        <trans-unit id="aeaca8f7616b3338d4e2bf16fa86b281ee785e31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptionList&lt;/code&gt; is an option list allowed for &lt;code&gt;apply/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OptionList&lt;/code&gt; は、 &lt;code&gt;apply/3&lt;/code&gt; で使用できるオプションリストです。</target>
        </trans-unit>
        <trans-unit id="8a3faa2b17c6429b0a95a66a6dcd2b40c8817ca0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Options = [Opt]&lt;/code&gt;, see &lt;code&gt;gen_udp:open/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Options = [Opt]&lt;/code&gt; 、 &lt;code&gt;gen_udp:open/2&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="7dcbc7957a87f9a6cb941c683d0b472aca9e1b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Options&lt;/code&gt; is a list of &lt;code&gt;{Key,Value}&lt;/code&gt; tuples conforming to the options that you can give to &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;mnesia#create_table-2&quot;&gt;mnesia:create_table/2&lt;/a&gt;&lt;/code&gt; に指定できるオプションに準拠する &lt;code&gt;{Key,Value}&lt;/code&gt; タプルのリストです。</target>
        </trans-unit>
        <trans-unit id="48c1b92a560d577d6e5dfdab4c37a651a573dc6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Options&lt;/code&gt; is a list of compiler options which defaults to &lt;code&gt;[]&lt;/code&gt;. Only options defining include file directories and macros are passed to &lt;code&gt;compile:file/2&lt;/code&gt;, everything else is ignored.</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; は、コンパイラー・オプションのリストであり、デフォルトは &lt;code&gt;[]&lt;/code&gt; です。インクルードファイルのディレクトリとマクロを定義するオプションのみが &lt;code&gt;compile:file/2&lt;/code&gt; に渡され、それ以外はすべて無視されます。</target>
        </trans-unit>
        <trans-unit id="f559095561fde76544581fc556d0e209bd42b9ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Options&lt;/code&gt; is a list of compiler options.</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; は、コンパイラー・オプションのリストです。</target>
        </trans-unit>
        <trans-unit id="2f8423083f97a7df8ac565042d4099626af510f7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Options&lt;/code&gt; is a list of make- and compiler options. The following make options exist:</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; は、メイクおよびコンパイラオプションのリストです。次のmakeオプションがあります。</target>
        </trans-unit>
        <trans-unit id="54521563ef32a6c1ab3cb2a34a17e80587294026" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Options&lt;/code&gt; is a list with options specific for the &lt;code&gt;ASN.1&lt;/code&gt; compiler and options that are applied to the Erlang compiler. The latter are not recognized as &lt;code&gt;ASN.1&lt;/code&gt; specific. The available options are as follows:</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; は、 &lt;code&gt;ASN.1&lt;/code&gt; コンパイラーに固有のオプションと、Erlangコンパイラーに適用されるオプションのリストです。後者は &lt;code&gt;ASN.1&lt;/code&gt; 固有として認識されません。使用可能なオプションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="068e560ba76981e265832b689777071b8432704e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Options&lt;/code&gt; is a single term or a list of terms, selected from the following:</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; は、単一の用語または用語のリストであり、以下から選択されます。</target>
        </trans-unit>
        <trans-unit id="725a9878a92dc489a4ce90abe2ca36dc56c33fb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Options&lt;/code&gt; is not a proper list of terms.</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt; は用語の適切なリストではありません。</target>
        </trans-unit>
        <trans-unit id="0b6d0a9519ecf95ff8b72c3f0e24c46d6f8abaa9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Options&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Options&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="e0a91cb78162c29efe8c580e918c15fcfb6c11c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Opts&lt;/code&gt; is a list of options in the format recognized by the &lt;code&gt;proplists&lt;/code&gt; module (and by the I/O server).</source>
          <target state="translated">&lt;code&gt;Opts&lt;/code&gt; は、 &lt;code&gt;proplists&lt;/code&gt; モジュール（およびI / Oサーバー）によって認識される形式のオプションのリストです。</target>
        </trans-unit>
        <trans-unit id="bda5e6218a019341421f92df0840e483b5a564fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Opts&lt;/code&gt; is an (basically) implementation dependent list of options to the network interface process. There are however a number of options which &lt;strong&gt;must&lt;/strong&gt; be handled: &lt;code&gt;versions&lt;/code&gt; and &lt;code&gt;verbosity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Opts&lt;/code&gt; は、ネットワークインターフェイスプロセスのオプションの（基本的に）実装に依存するリストです。ただし、処理する&lt;strong&gt;必要の&lt;/strong&gt;あるオプションはいくつかあります。 &lt;code&gt;versions&lt;/code&gt; と &lt;code&gt;verbosity&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="551c07ecb25f49d23101b5a6ea66d0689d8325c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Opts&lt;/code&gt; is the same as for the &lt;code&gt;&lt;a href=&quot;snmp_config#agent_ni_opts&quot;&gt;net-if&lt;/a&gt;&lt;/code&gt; process &lt;strong&gt;and&lt;/strong&gt; takes precedence (for that transport) if present. The point is that each transport can have its own socket options.</source>
          <target state="translated">&lt;code&gt;Opts&lt;/code&gt; と同じである &lt;code&gt;&lt;a href=&quot;snmp_config#agent_ni_opts&quot;&gt;net-if&lt;/a&gt;&lt;/code&gt; 処理&lt;strong&gt;及び&lt;/strong&gt;存在する場合（その輸送のための）優先されます。重要なのは、各トランスポートが独自のソケットオプションを持つことができるということです。</target>
        </trans-unit>
        <trans-unit id="9b0d06bc7f57493511b019dfa2f4980cfcf56462" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Opts&lt;/code&gt; overrides the corresponding resolver options. If option &lt;code&gt;nameservers&lt;/code&gt; is specified, it is assumed that it is the complete list of name serves, so resolver option &lt;code&gt;alt_nameserves&lt;/code&gt; is ignored. However, if option &lt;code&gt;alt_nameserves&lt;/code&gt; is also specified to this function, it is used.</source>
          <target state="translated">&lt;code&gt;Opts&lt;/code&gt; は、対応するリゾルバーオプションをオーバーライドします。オプション &lt;code&gt;nameservers&lt;/code&gt; が指定されている場合、それはネームサーバーの完全なリストであると見なされるため、リゾルバーオプション &lt;code&gt;alt_nameserves&lt;/code&gt; は無視されます。ただし、この関数にオプション &lt;code&gt;alt_nameserves&lt;/code&gt; も指定されている場合は、それが使用されます。</target>
        </trans-unit>
        <trans-unit id="33448de07a89b4eee2f6c264b4dc9a7343972439" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Orddict2&lt;/code&gt; is a dictionary of all keys and values in &lt;code&gt;Orddict1&lt;/code&gt; for which &lt;code&gt;Pred(Key, Value)&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Orddict2&lt;/code&gt; は、内のすべてのキーと値の辞書です &lt;code&gt;Orddict1&lt;/code&gt; いる &lt;code&gt;Pred(Key, Value)&lt;/code&gt; ある &lt;code&gt;true&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b3cc79af51a5391cd1f2cecc0b523da7d7f2f9c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Origin&lt;/code&gt; is generally which NIF or driver that allocated the blocks, or 'system' if it could not be determined.</source>
          <target state="translated">&lt;code&gt;Origin&lt;/code&gt; は、通常、ブロックを割り当てたNIFまたはドライバー、または判別できなかった場合の「システム」です。</target>
        </trans-unit>
        <trans-unit id="eab40d930be126057236dbb57f8bf2a6baac9677" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsMonotonicTime&lt;/code&gt; equals current OS monotonic time in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OsMonotonicTime&lt;/code&gt; は、 &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; での現在のOSの単調時間と同じです。</target>
        </trans-unit>
        <trans-unit id="932f08e2b5494f5f7f650be331c218bd5689618e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsPid&lt;/code&gt; is the process identifier (or equivalent) of an OS process created with &lt;code&gt;&lt;a href=&quot;#open_port-2&quot;&gt;open_port({spawn | spawn_executable, Command}, Options)&lt;/a&gt;&lt;/code&gt;. If the port is not the result of spawning an OS process, the value is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OsPid&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#open_port-2&quot;&gt;open_port({spawn | spawn_executable, Command}, Options)&lt;/a&gt;&lt;/code&gt; 作成されたOSプロセスのプロセス識別子（または同等のもの）です。ポートがOSプロセスの生成の結果ではない場合、値は &lt;code&gt;undefined&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7dd0f5d27cd66e170a4b1e83594cb698b980f2aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OsSystemTime&lt;/code&gt; equals current OS system time in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OsSystemTime&lt;/code&gt; は、現在のOSシステム時間を &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; で表したものです。</target>
        </trans-unit>
        <trans-unit id="fbe902f7871d52da72531321eed3cf0a6eb50040" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Out&lt;/code&gt; is ignored if the &lt;code&gt;et&lt;/code&gt; format handler is used.</source>
          <target state="translated">&lt;code&gt;Out&lt;/code&gt; &lt;code&gt;et&lt;/code&gt; 形式ハンドラーが使用されている場合、Outは無視されます。</target>
        </trans-unit>
        <trans-unit id="a1336c266605c59ca65ac2c09a7aa6d995fc3077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OutEncoding&lt;/code&gt; defines in what format output is to be generated.</source>
          <target state="translated">&lt;code&gt;OutEncoding&lt;/code&gt; は、どの形式で出力を生成するかを定義します。</target>
        </trans-unit>
        <trans-unit id="7f3bc913aa19032a915735a998e442e8c0e9106e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OwnAuthKeyC&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;OwnAuthKeyC&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="0af7d6d5206fa4ba170f21aa28856e5f99d3c60b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OwnPrivKeyC&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;OwnPrivKeyC&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="ce93c1c12d6b6d2cf3c8e9e13e682a5eb181475c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; - A byte offset into a tuple.</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; -タプルへのバイトオフセット。</target>
        </trans-unit>
        <trans-unit id="9d6d20757f9b2b090c8dbb985edbd64142f25ed5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; is the &lt;code&gt;precision&lt;/code&gt; of the printed argument. A default value is used if no precision is specified. The interpretation of precision depends on the control sequences. Unless otherwise specified, argument &lt;code&gt;within&lt;/code&gt; is used to determine print width.</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; は、出力される引数の &lt;code&gt;precision&lt;/code&gt; です。精度が指定されていない場合は、デフォルト値が使用されます。精度の解釈は、制御シーケンスによって異なります。特に指定のない限り、 &lt;code&gt;within&lt;/code&gt; 引数は印刷幅を決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8efd3d4f5ea3949dfe599236c352331ac186fddc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PDict&lt;/code&gt; is the current value of the process dictionary of &lt;code&gt;gen_event&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PDict&lt;/code&gt; は、プロセス辞書の現在の値である &lt;code&gt;gen_event&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4743eb86880de837e3b7721a0c73d09e619df1d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PDict&lt;/code&gt; is the current value of the process dictionary of the &lt;code&gt;gen_server&lt;/code&gt; process..</source>
          <target state="translated">&lt;code&gt;PDict&lt;/code&gt; は、 &lt;code&gt;gen_server&lt;/code&gt; プロセスのプロセスディクショナリの現在の値です。</target>
        </trans-unit>
        <trans-unit id="d6456643cc36471ca8f6385bda79663870a746c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PDict&lt;/code&gt; is the current value of the process dictionary of the &lt;code&gt;gen_statem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PDict&lt;/code&gt; は、プロセス辞書の現在の値である &lt;code&gt;gen_statem&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb001daf095f814d3d2906ab3d61090d7e4183d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pad&lt;/code&gt; is the padding character. This is the character used to pad the printed representation of the argument so that it conforms to the specified field width and precision. Only one padding character can be specified and, whenever applicable, it is used for both the field width and precision. The default padding character is &lt;code&gt;' '&lt;/code&gt; (space).</source>
          <target state="translated">&lt;code&gt;Pad&lt;/code&gt; はパディング文字です。これは、指定されたフィールド幅と精度に準拠するように、引数の印刷表現を埋めるために使用される文字です。指定できる埋め込み文字は1つだけで、該当する場合は常に、フィールド幅と精度の両方に使用されます。デフォルトの埋め込み文字は &lt;code&gt;' '&lt;/code&gt; （スペース）です。</target>
        </trans-unit>
        <trans-unit id="c6f33814ce0487b47b6f45aea3db01e41094a5c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Padding&lt;/code&gt; states the number of empty character positions to the left of the comment separating it horizontally from source code on the same line (if any). If &lt;code&gt;Padding&lt;/code&gt; is &lt;code&gt;none&lt;/code&gt;, a default positive number is used. If &lt;code&gt;Padding&lt;/code&gt; is an integer less than 1, there should be no separating space. Comments are in themselves regarded as source program forms.</source>
          <target state="translated">&lt;code&gt;Padding&lt;/code&gt; は、コメントの左側の空の文字位置の数を示し、同じ行のソースコード（ある場合）から水平方向にそれを分離します。場合 &lt;code&gt;Padding&lt;/code&gt; ありません &lt;code&gt;none&lt;/code&gt; 、デフォルトの正の数が使用されています。 &lt;code&gt;Padding&lt;/code&gt; が1未満の整数の場合、分離スペースはありません。コメント自体は、ソースプログラムフォームと見なされます。</target>
        </trans-unit>
        <trans-unit id="8fcf992ee6cd46bdb833fa310ed5b8915e59ce81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PaperWidth&lt;/code&gt; specifies the total width (in character positions) of the field for which the text is to be laid out. &lt;code&gt;LineWidth&lt;/code&gt; specifies the desired maximum width (in number of characters) of the text printed on any single line, disregarding leading and trailing white space. These parameters need to be properly balanced in order to produce good layouts. By default, &lt;code&gt;PaperWidth&lt;/code&gt; is 80 and &lt;code&gt;LineWidth&lt;/code&gt; is 65.</source>
          <target state="translated">&lt;code&gt;PaperWidth&lt;/code&gt; は、テキストが配置されるフィールドの合計幅（文字位置）を指定します。 &lt;code&gt;LineWidth&lt;/code&gt; は、先頭と末尾の空白を無視して、任意の1行に印刷されるテキストの望ましい最大幅（文字数）を指定します。適切なレイアウトを作成するには、これらのパラメーターを適切にバランスさせる必要があります。デフォルトでは、 &lt;code&gt;PaperWidth&lt;/code&gt; は80で、 &lt;code&gt;LineWidth&lt;/code&gt; は65です。</target>
        </trans-unit>
        <trans-unit id="61816f1bbc3605d4c7ed850afbc995219957a6cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Par&lt;/code&gt; is to be an atom. &lt;code&gt;Val&lt;/code&gt; is any term. The application can retrieve the value of a configuration parameter by calling &lt;code&gt;application:get_env(App, Par)&lt;/code&gt; or a number of similar functions, see the &lt;code&gt;application(3)&lt;/code&gt; manual page in Kernel.</source>
          <target state="translated">&lt;code&gt;Par&lt;/code&gt; はアトムです。 &lt;code&gt;Val&lt;/code&gt; は任意の用語です。アプリケーションは、 &lt;code&gt;application:get_env(App, Par)&lt;/code&gt; またはいくつかの同様の関数を呼び出すことにより、構成パラメーターの値を取得できます。カーネルの &lt;code&gt;application(3)&lt;/code&gt; マニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="5cd492f8be5da8eccc8204e5af387f683dc3b5a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Parallel&lt;/code&gt; equals &lt;code&gt;yes&lt;/code&gt; if &lt;code&gt;Function&lt;/code&gt; is called in parallel from multiple threads. If it is not called in parallel, because calls must be serialized, &lt;code&gt;Parallel&lt;/code&gt; equals &lt;code&gt;no&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Parallel&lt;/code&gt; &lt;code&gt;Function&lt;/code&gt; が複数のスレッドから並行して呼び出される場合、Parallelは &lt;code&gt;yes&lt;/code&gt; に等しくなります。並列で呼び出されない場合は、呼び出しをシリアル化する必要があるため、 &lt;code&gt;Parallel&lt;/code&gt; は &lt;code&gt;no&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="298b1a5ee5c5ff542be1d5b8cc774a76e6d51c2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Parallel&lt;/code&gt; equals &lt;code&gt;yes&lt;/code&gt; if &lt;code&gt;Function&lt;/code&gt; is called in parallel from multiple threads. If it is not called in parallel, because calls needs to be serialized, &lt;code&gt;Parallel&lt;/code&gt; equals &lt;code&gt;no&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Parallel&lt;/code&gt; &lt;code&gt;Function&lt;/code&gt; が複数のスレッドから並行して呼び出される場合、Parallelは &lt;code&gt;yes&lt;/code&gt; に等しくなります。並列で呼び出されない場合、呼び出しをシリアル化する必要があるため、 &lt;code&gt;Parallel&lt;/code&gt; は &lt;code&gt;no&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="a964c055893b2e2147f8a5aa80f76978a24c196b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParamsName&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;ParamsName&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="e82853798869e6b8e08f635af4f23562b8963793" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParamsName&lt;/code&gt; is a unique non-empty string.</source>
          <target state="translated">&lt;code&gt;ParamsName&lt;/code&gt; は、空でない一意の文字列です。</target>
        </trans-unit>
        <trans-unit id="6fb071f2d51c9e9adbb1e19332e74734ff14e5ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Parent&lt;/code&gt; is the pid of the parent.</source>
          <target state="translated">&lt;code&gt;Parent&lt;/code&gt; は親のpidです。</target>
        </trans-unit>
        <trans-unit id="0111f8c743625fd26e700b61a8a2f8b510fdd95a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Parserfile&lt;/code&gt; is the name of the file that will contain the Erlang parser code that is generated. The default (&lt;code&gt;&quot;&quot;&lt;/code&gt;) is to add the extension &lt;code&gt;.erl&lt;/code&gt; to &lt;code&gt;Grammarfile&lt;/code&gt; stripped of the &lt;code&gt;.yrl&lt;/code&gt; extension.</source>
          <target state="translated">&lt;code&gt;Parserfile&lt;/code&gt; は、生成されるErlangパーサーコードを含むファイルの名前です。デフォルトでは（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）の拡張を追加することです &lt;code&gt;.erl&lt;/code&gt; をする &lt;code&gt;Grammarfile&lt;/code&gt; を剥奪 &lt;code&gt;.yrl&lt;/code&gt; 拡張。</target>
        </trans-unit>
        <trans-unit id="4444b88ab129d099ddb1b9e4d902a31bfe485144" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path&lt;/code&gt; exists but is not a directory.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; 存在しますが、ディレクトリではありません。</target>
        </trans-unit>
        <trans-unit id="31c19c60301c0e99882f06518267d3d1fc79dc70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path&lt;/code&gt; is interpreted literally, so that all loaders of the same driver must specify the same &lt;strong&gt;literal&lt;/strong&gt;&lt;code&gt;Path&lt;/code&gt; string, although different paths can point out the same directory in the file system (because of use of relative paths and links).</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; は文字どおりに解釈されるため、同じドライバーのすべてのローダーは同じ&lt;strong&gt;リテラルの&lt;/strong&gt; &lt;code&gt;Path&lt;/code&gt; 文字列を指定する必要がありますが、異なるパスはファイルシステム内の同じディレクトリを指す場合があります（相対パスとリンクを使用するため）。</target>
        </trans-unit>
        <trans-unit id="72096ad2831b143d815d9dad06722d834563819a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path&lt;/code&gt;, if specified, is to conform to the syntax of execution paths on the OS. Returns the absolute filename of the executable program &lt;code&gt;Name&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt; if the program is not found.</source>
          <target state="translated">&lt;code&gt;Path&lt;/code&gt; は、指定されている場合、OSの実行パスの構文に準拠しています。戻り値絶対実行可能プログラムのファイル名 &lt;code&gt;Name&lt;/code&gt; 、または &lt;code&gt;false&lt;/code&gt; プログラムが見つからない場合。</target>
        </trans-unit>
        <trans-unit id="0102a455a1d0d8a404d2e7475eed7960cfeaf36c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PathData&lt;/code&gt; is the argument used for API function &lt;code&gt;&lt;a href=&quot;mod_alias#path-3&quot;&gt;mod_alias:path/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PathData&lt;/code&gt; は、API関数 &lt;code&gt;&lt;a href=&quot;mod_alias#path-3&quot;&gt;mod_alias:path/3&lt;/a&gt;&lt;/code&gt; に使用される引数です。</target>
        </trans-unit>
        <trans-unit id="67e03b6ce9df207e631b5912bda070b27c630732" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pathname&lt;/code&gt; can be a directory, a group of files, or a file. The &lt;code&gt;Pathname&lt;/code&gt; string can contain wildcards.</source>
          <target state="translated">&lt;code&gt;Pathname&lt;/code&gt; は、ディレクトリ、ファイルのグループ、またはファイルです。 &lt;code&gt;Pathname&lt;/code&gt; 文字列にはワイルドカードを含めることができます。</target>
        </trans-unit>
        <trans-unit id="45732b3166f764b7ef155e460e83a1721dac5aaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pattern &amp;lt;- ListExpr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Pattern &amp;lt;- ListExpr&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7ad177e253e29340a003b66af1bd0cea7563a824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pattern&lt;/code&gt; can be a POSIX regular expression. The function returns when a pattern is successfully matched (at least one, in the case of multiple patterns).</source>
          <target state="translated">&lt;code&gt;Pattern&lt;/code&gt; はPOSIX正規表現にすることができます。関数は、パターンが正常に一致したときに戻ります（複数のパターンの場合は少なくとも1つ）。</target>
        </trans-unit>
        <trans-unit id="a30053a936ee88a48acb7971d5ab38f2f0d8e83a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pattern&lt;/code&gt; is an Erlang term, possibly containing unbound variables.</source>
          <target state="translated">&lt;code&gt;Pattern&lt;/code&gt; はErlangの用語であり、バインドされていない変数を含んでいる可能性があります。</target>
        </trans-unit>
        <trans-unit id="57b85b1d1b0950a8f6855ca47e2dd4650b42f4b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pdu&lt;/code&gt; is an SNMP PDU record (as defined in snmp_types.hrl) with the SNMP response.</source>
          <target state="translated">&lt;code&gt;Pdu&lt;/code&gt; は、SNMP 応答を含むSNMP PDUレコード（snmp_types.hrlで定義）です。</target>
        </trans-unit>
        <trans-unit id="9daa12e42a6ee7d41d16dc65a19e83fff5272a78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pdu&lt;/code&gt; is an SNMP PDU record, as defined in &lt;code&gt;snmp_types.hrl&lt;/code&gt;, with the SNMP request.</source>
          <target state="translated">&lt;code&gt;Pdu&lt;/code&gt; は、 &lt;code&gt;snmp_types.hrl&lt;/code&gt; で定義されているように、SNMP要求を含むSNMP PDUレコードです。</target>
        </trans-unit>
        <trans-unit id="c9faf1791e479d87a46e2d29e0595178c7cbbda1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pdu&lt;/code&gt; is the SNMP Pdu received</source>
          <target state="translated">&lt;code&gt;Pdu&lt;/code&gt; は受信したSNMP Pduです</target>
        </trans-unit>
        <trans-unit id="b5bb6137c323411e0bc0dad71bbce6bef0ebb8d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PduMS&lt;/code&gt; is the Maximum Size of the response Pdu allowed. Normally this is returned from &lt;code&gt;snmpa_mpd:process_packet&lt;/code&gt; (see Reference Manual).</source>
          <target state="translated">&lt;code&gt;PduMS&lt;/code&gt; は、Pduが許可する応答の最大サイズです。通常、これは &lt;code&gt;snmpa_mpd:process_packet&lt;/code&gt; から返されます（リファレンスマニュアルを参照）。</target>
        </trans-unit>
        <trans-unit id="2ffda993d32b39b54f89be982bae72e563e2b984" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PeerName&lt;/code&gt; - a string with the name or address of the remote host.</source>
          <target state="translated">&lt;code&gt;PeerName&lt;/code&gt; -リモートホストの名前またはアドレスを含む文字列。</target>
        </trans-unit>
        <trans-unit id="82c3412826a6b1e69920274b738497b5cd048b70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pid&lt;/code&gt; - Process identifier.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; -プロセス識別子。</target>
        </trans-unit>
        <trans-unit id="8f39bc2c554c8155c9a6f65aec7b32bbcacdaa1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pid&lt;/code&gt; is a process identifier.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; はプロセスIDです。</target>
        </trans-unit>
        <trans-unit id="61bd6230a1646bc54881ccd3f79dac8ea26e9a79" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pid&lt;/code&gt; is the Process that waits for the response for the request. The Pid was specified in the &lt;code&gt;send_pdu_req&lt;/code&gt; message &lt;code&gt;&lt;a href=&quot;#im_send_pdu_req&quot;&gt;(see below)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; は、要求に対する応答を待つプロセスです。Pidは &lt;code&gt;send_pdu_req&lt;/code&gt; メッセージで指定されました &lt;code&gt;&lt;a href=&quot;#im_send_pdu_req&quot;&gt;(see below)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0ebf4adf0ef01de57bcfaa6c59b419e009731919" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pid&lt;/code&gt; is the pid of the process executing interpreted code.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; は、解釈されたコードを実行するプロセスのPIDです。</target>
        </trans-unit>
        <trans-unit id="9a19f57d989b1fcddb01fa44f8fb35e4f2c9ba3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pid&lt;/code&gt; is the process identifier of the process connected to the port.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; は、ポートに接続されているプロセスのプロセスIDです。</target>
        </trans-unit>
        <trans-unit id="bc8378476ce2ed08e41ee8a6a8e93a0f3e2825c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pid&lt;/code&gt; is the process identifier of the process that originally created the fun.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; は、最初にファンを作成したプロセスのプロセスIDです。</target>
        </trans-unit>
        <trans-unit id="b43b39dc2ed9b601b7ed1e11509bdba32932ba68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pid&lt;/code&gt; must refer to a process at the local node.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; はローカルノードのプロセスを参照する必要があります。</target>
        </trans-unit>
        <trans-unit id="25904c39e0432f85f327b952e13f27bc2ba1ab42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PidOrPids&lt;/code&gt; may contain the same process multiple times.</source>
          <target state="translated">&lt;code&gt;PidOrPids&lt;/code&gt; には、同じプロセスが複数回含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="e78c827327043a50151a8f7db6e351160d170bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PidPortSpec&lt;/code&gt; is either a process identifier (pid) for a local process, a port identifier, or one of the following atoms:</source>
          <target state="translated">&lt;code&gt;PidPortSpec&lt;/code&gt; は、ローカルプロセスのプロセス識別子（pid）、ポート識別子、または次のアトムのいずれかです。</target>
        </trans-unit>
        <trans-unit id="5c8a59ccab15bb7dac43987f80ab1e821cea40ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PidSpec&lt;/code&gt; and &lt;code&gt;Tracer&lt;/code&gt; are used in calls to &lt;code&gt;erlang:trace(PidSpec, true, [{tracer, Tracer} | Flags])&lt;/code&gt;, and &lt;code&gt;Filename&lt;/code&gt; is used to call &lt;code&gt;dbg:trace_port(file, Filename)&lt;/code&gt;. Please see the appropriate documentation.</source>
          <target state="translated">&lt;code&gt;PidSpec&lt;/code&gt; および &lt;code&gt;Tracer&lt;/code&gt; は &lt;code&gt;erlang:trace(PidSpec, true, [{tracer, Tracer} | Flags])&lt;/code&gt; 呼び出しで使用され、 &lt;code&gt;Filename&lt;/code&gt; は &lt;code&gt;dbg:trace_port(file, Filename)&lt;/code&gt; 呼び出しに使用されます。適切なドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1833f50d54e16d92b2e13bbbdd54635fe7dbdcad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pids&lt;/code&gt; is a list of the process identifiers of the processes that the port is linked to.</source>
          <target state="translated">&lt;code&gt;Pids&lt;/code&gt; は、ポートがリンクされているプロセスのプロセスIDのリストです。</target>
        </trans-unit>
        <trans-unit id="9aeb7d1dfd344e218d0caa42d7cdbd29484d3526" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PidsAndPorts&lt;/code&gt; is a list of process identifiers and port identifiers, with processes or ports to which the process has a link.</source>
          <target state="translated">&lt;code&gt;PidsAndPorts&lt;/code&gt; は、プロセスIDまたはポートIDのリストであり、プロセスまたはプロセスがリンクしているポートが含まれます。</target>
        </trans-unit>
        <trans-unit id="399b5004de645756cdb0e61b641737629345f488" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Port&lt;/code&gt; is a port identifier, referring to a driver.</source>
          <target state="translated">&lt;code&gt;Port&lt;/code&gt; は、ドライバーを参照するポート識別子です。</target>
        </trans-unit>
        <trans-unit id="4af552ca674af7083b5dc536b0563b1727aab30d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PortInfo&lt;/code&gt;&lt;code&gt;system&lt;/code&gt; is used to indicate that the 'system' should choose (the way port number '0' (zero) is normally used). Port info '0' (zero) cannot be used for this, since it is (internally) used to represent the 'default' port number.</source>
          <target state="translated">&lt;code&gt;PortInfo&lt;/code&gt; &lt;code&gt;system&lt;/code&gt; は、「システム」が選択する必要があることを示すために使用されます（ポート番号「0」（ゼロ）が通常使用される方法）。ポート情報「0」（ゼロ）は、（内部的に）「デフォルト」のポート番号を表すために使用されるため、これには使用できません。</target>
        </trans-unit>
        <trans-unit id="aa4ec1fc2694d6b4c2de10ced8f98ddda50a1e6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PortName&lt;/code&gt; is usually a tuple &lt;code&gt;{spawn,Command}&lt;/code&gt;, where the string &lt;code&gt;Command&lt;/code&gt; is the name of the external program. The external program runs outside the Erlang workspace, unless a port driver with the name &lt;code&gt;Command&lt;/code&gt; is found. If &lt;code&gt;Command&lt;/code&gt; is found, that driver is started.</source>
          <target state="translated">&lt;code&gt;PortName&lt;/code&gt; は通常、タプル &lt;code&gt;{spawn,Command}&lt;/code&gt; 。ここで、文字列 &lt;code&gt;Command&lt;/code&gt; は外部プログラムの名前です。 &lt;code&gt;Command&lt;/code&gt; という名前のポートドライバーが見つからない限り、外部プログラムはErlangワークスペースの外で実行されます。 &lt;code&gt;Command&lt;/code&gt; が見つかった場合、そのドライバーが開始されます。</target>
        </trans-unit>
        <trans-unit id="2e6bf51b86435b4c42225dc1de28ab816d14674c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PortName&lt;/code&gt;s:</source>
          <target state="translated">&lt;code&gt;PortName&lt;/code&gt;s:</target>
        </trans-unit>
        <trans-unit id="463ce09ec6b9372ae59fbcb785e330502501c594" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PortSettings&lt;/code&gt; is a list of settings (options) for the port. The list typically contains at least a tuple &lt;code&gt;{packet,N}&lt;/code&gt;, which specifies that data sent between the port and the external program are preceded by an N-byte length indicator. Valid values for N are 1, 2, or 4. If binaries are to be used instead of lists of bytes, the option &lt;code&gt;binary&lt;/code&gt; must be included.</source>
          <target state="translated">&lt;code&gt;PortSettings&lt;/code&gt; は、ポートの設定（オプション）のリストです。通常、リストには少なくともタプル &lt;code&gt;{packet,N}&lt;/code&gt; が含まれています。これは、ポートと外部プログラムの間で送信されるデータの前にNバイトの長さインジケーターがあることを指定します。Nの有効な値は1、2、または4です。バイトのリストの代わりにバイナリを使用する場合は、オプションの &lt;code&gt;binary&lt;/code&gt; 含める必要があります。</target>
        </trans-unit>
        <trans-unit id="6477a306bcc2a0998a7ce1fad1f18ac9cf3df606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PortSettings&lt;/code&gt; is a list of settings for the port. The valid settings are as follows:</source>
          <target state="translated">&lt;code&gt;PortSettings&lt;/code&gt; は、ポートの設定のリストです。有効な設定は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7bfc9f26773a6f94ca833c55216be6d8bf5f1fff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pos&lt;/code&gt; &amp;gt; object arity.</source>
          <target state="translated">&lt;code&gt;Pos&lt;/code&gt; &amp;gt;オブジェクトアリティ。</target>
        </trans-unit>
        <trans-unit id="004861644f1aab6e308d1d91976c82622faee3a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pos&lt;/code&gt; &amp;lt; 1.</source>
          <target state="translated">&lt;code&gt;Pos&lt;/code&gt; &amp;lt;1。</target>
        </trans-unit>
        <trans-unit id="bdbeca84c85597762edabef4ed5b854f332bc4bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pred&lt;/code&gt; determines which transports to remove. An arity-3-valued &lt;code&gt;Pred&lt;/code&gt; removes all transports for which &lt;code&gt;Pred(Ref, Type, Opts)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, where &lt;code&gt;Type&lt;/code&gt; and &lt;code&gt;Opts&lt;/code&gt; are as passed to &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;Ref&lt;/code&gt; is as returned by it. The remaining forms are equivalent to an arity-3 fun as follows.</source>
          <target state="translated">&lt;code&gt;Pred&lt;/code&gt; は、削除するトランスポートを決定します。arity-3-valued &lt;code&gt;Pred&lt;/code&gt; は &lt;code&gt;Pred(Ref, Type, Opts)&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返すすべてのトランスポートを削除します。ここで、 &lt;code&gt;Type&lt;/code&gt; と &lt;code&gt;Opts&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; に渡されたとおりに、 &lt;code&gt;Ref&lt;/code&gt; はそれによって返されます。残りの形式は、次のようにarity-3 funと同等です。</target>
        </trans-unit>
        <trans-unit id="c6893380113cae97b705c1a241b18df478bffbb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prefix&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;Prefix&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="7a816e4a91bac5880615611c5a727da7982a43d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prefix&lt;/code&gt; should either be an indention string (e.g. a list of spaces) or a positive integer (which will be used to create the indention string of that length).</source>
          <target state="translated">&lt;code&gt;Prefix&lt;/code&gt; は、インデント文字列（スペースのリストなど）または正の整数（その長さのインデント文字列の作成に使用されます）のいずれかである必要があります。</target>
        </trans-unit>
        <trans-unit id="a480d89de32304ada89435e2816f659a00de5d81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prev&lt;/code&gt; - Scrolls &lt;code&gt;all&lt;/code&gt; viewers one page backwards.</source>
          <target state="translated">&lt;code&gt;Prev&lt;/code&gt; - &lt;code&gt;all&lt;/code&gt; ビューアを1ページ後ろにスクロールします。</target>
        </trans-unit>
        <trans-unit id="97a0c53dfb5dba941754773c6e1c3d7fa015d458" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prev&lt;/code&gt; - Scrolls &lt;code&gt;this&lt;/code&gt; viewer one page backwards.</source>
          <target state="translated">&lt;code&gt;Prev&lt;/code&gt; - &lt;code&gt;this&lt;/code&gt; ビューアを1ページ後ろにスクロールします。</target>
        </trans-unit>
        <trans-unit id="5b50414b0613343d372e7b33cd39ad0516e44077" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Print all pages&lt;/code&gt; - Prints all events. The page size is dependent of the selected paper type.</source>
          <target state="translated">&lt;code&gt;Print all pages&lt;/code&gt; -すべてのイベントを印刷します。ページサイズは、選択した用紙の種類によって異なります。</target>
        </trans-unit>
        <trans-unit id="0ff755d38d1ee44428dde82f8531f88bafebf90d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Print current page&lt;/code&gt; - Prints the events on the current page. The page size is dependent of the selected paper type.</source>
          <target state="translated">&lt;code&gt;Print current page&lt;/code&gt; - 現在のページのイベントを印刷します。ページサイズは、選択した用紙の種類によって異なります。</target>
        </trans-unit>
        <trans-unit id="32eb1a8dd112afc3c6a211ec306e9f661586c04d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Print setup&lt;/code&gt; - Enables editing of printer setting, such as paper and layout.</source>
          <target state="translated">&lt;code&gt;Print setup&lt;/code&gt; -用紙やレイアウトなどのプリンター設定を編集できます。</target>
        </trans-unit>
        <trans-unit id="cf54c74259cdf2a077f36b9c1a3587deb9f53c44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Priority&lt;/code&gt; is the relative priority of this hook. Hooks with a lower priority are executed first. If no priority is specified, it is set to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Priority&lt;/code&gt; は、このフックの相対的な優先度です。優先度の低いフックが最初に実行されます。優先順位が指定されていない場合は、 &lt;code&gt;0&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="7e113901e10a147bff39ab1828d264df94ffbc99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrivKey&lt;/code&gt; is a list (of integer). This is the User's secret localized encryption key. It is not visible in the MIB. The length of this key needs to be 16 if &lt;code&gt;usmDESPrivProtocol&lt;/code&gt; or &lt;code&gt;usmAesCfb128Protocol&lt;/code&gt; is used.</source>
          <target state="translated">&lt;code&gt;PrivKey&lt;/code&gt; は（整数の）リストです。これはユーザーの秘密のローカライズされた暗号化キーです。MIBでは表示されません。 &lt;code&gt;usmDESPrivProtocol&lt;/code&gt; または &lt;code&gt;usmAesCfb128Protocol&lt;/code&gt; を使用する場合、このキーの長さは16である必要があります。</target>
        </trans-unit>
        <trans-unit id="8e896ad8363d1b7e38462d7a7c50f79d5b0bfe9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrivKeyC&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;PrivKeyC&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="a4935215988c303da7c8e0c9d33ba8df8f210702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrivP&lt;/code&gt; is a &lt;code&gt;usmNoPrivProtocol&lt;/code&gt;, &lt;code&gt;usmDESPrivProtocol&lt;/code&gt; or &lt;code&gt;usmAesCfb128Protocol&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PrivP&lt;/code&gt; は、 &lt;code&gt;usmNoPrivProtocol&lt;/code&gt; 、 &lt;code&gt;usmDESPrivProtocol&lt;/code&gt; 、または &lt;code&gt;usmAesCfb128Protocol&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="83db5bbd69f30ee1fca7e3551bce3d3407c70039" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrivateKey = #'RSAPrivateKey{}'&lt;/code&gt; and the plaintext &lt;code&gt;Msg = binary()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PrivateKey = #'RSAPrivateKey{}'&lt;/code&gt; およびプレーンテキスト &lt;code&gt;Msg = binary()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="17758d4bb8717fb48ab98495537a53044a17ddce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrivateKey = #'RSAPrivateKey{}'&lt;/code&gt; or &lt;code&gt;#'DSAPrivateKey'{}&lt;/code&gt; and the plaintext &lt;code&gt;Msg = binary()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PrivateKey = #'RSAPrivateKey{}'&lt;/code&gt; または &lt;code&gt;#'DSAPrivateKey'{}&lt;/code&gt; およびプレーンテキスト &lt;code&gt;Msg = binary()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="044261ee53d7434a5ddb63ab9f1dfc7c5e54cb48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ProjNames&lt;/code&gt; is a list of the names of the projects where the employee works.</source>
          <target state="translated">&lt;code&gt;ProjNames&lt;/code&gt; は、従業員が働いているプロジェクトの名前のリストです。</target>
        </trans-unit>
        <trans-unit id="4e426f49bdad9a40bd4efd3ef29a2951db105407" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Prompt&lt;/code&gt; is a list of characters (not mixed, no binaries) or an atom to be output as a prompt for input on the I/O device. &lt;code&gt;Prompt&lt;/code&gt; is often ignored by the I/O server; if set to &lt;code&gt;''&lt;/code&gt;, it is always to be ignored (and results in nothing being written to the I/O device).</source>
          <target state="translated">&lt;code&gt;Prompt&lt;/code&gt; は、I / Oデバイスでの入力のプロンプトとして出力される文字（混合ではなく、バイナリではない）またはアトムのリストです。I / Oサーバーは &lt;code&gt;Prompt&lt;/code&gt; を無視することがよくあります。 &lt;code&gt;''&lt;/code&gt; に設定すると、常に無視されます（その結果、I / Oデバイスに何も書き込まれません）。</target>
        </trans-unit>
        <trans-unit id="9695bb21452aaf2b0f3e5c2663f0c6b757426b91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Public&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;Public&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="c8b502fa111343a5a7f54904d46c437b467cb76e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PublicKey = #'RSAPublicKey'{}&lt;/code&gt; or &lt;code&gt;{integer(), #'DssParams'{}}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PublicKey = #'RSAPublicKey'{}&lt;/code&gt; または &lt;code&gt;{integer(), #'DssParams'{}}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29e85c40eb0a5ed78ec838a45f1adaa5c33c8a83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Q&lt;/code&gt; - A byte offset into the stack. Used for updating the frame pointer register. Can be packed with other operands.</source>
          <target state="translated">&lt;code&gt;Q&lt;/code&gt; -スタックへのバイトオフセット。フレームポインタレジスタの更新に使用されます。他のオペランドと一緒にパックできます。</target>
        </trans-unit>
        <trans-unit id="0d8bd4d0332c5b7caa1a64e0edeb5656bbc89de9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RANLIB&lt;/code&gt; - &lt;code&gt;ranlib&lt;/code&gt; archive index tool.</source>
          <target state="translated">&lt;code&gt;RANLIB&lt;/code&gt; - &lt;code&gt;ranlib&lt;/code&gt; アーカイブインデックスツール。</target>
        </trans-unit>
        <trans-unit id="d3efd0325d67c2942530bdf24afd75380a7a360b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RE&lt;/code&gt; is equal to &lt;code&gt;(Rel) E&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RE&lt;/code&gt; は &lt;code&gt;(Rel) E&lt;/code&gt; 等しい。</target>
        </trans-unit>
        <trans-unit id="d15f24d40e5bc38c43d5a302e667d9f851099361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REG_BINARY&lt;/code&gt; for binaries</source>
          <target state="translated">&lt;code&gt;REG_BINARY&lt;/code&gt; バイナリの場合はREG_BINARY</target>
        </trans-unit>
        <trans-unit id="666624bb3a8819d0baba84064971eaaa0ecbfe74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REG_BINARY&lt;/code&gt;, which is a binary</source>
          <target state="translated">&lt;code&gt;REG_BINARY&lt;/code&gt; はバイナリです</target>
        </trans-unit>
        <trans-unit id="3ad1d7ff1ba8a55676548f543d585dd213fa0fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REG_DWORD&lt;/code&gt; for integers</source>
          <target state="translated">&lt;code&gt;REG_DWORD&lt;/code&gt; 整数の場合はREG_DWORD</target>
        </trans-unit>
        <trans-unit id="1f53487dfa18da60b5278ee07b6b3a27f605ae45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REG_DWORD&lt;/code&gt;, which is an integer</source>
          <target state="translated">&lt;code&gt;REG_DWORD&lt;/code&gt; 整数であるREG_DWORD</target>
        </trans-unit>
        <trans-unit id="8e541dee6df33e7b478b15edd35bf81140e1d2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REG_SZ&lt;/code&gt; for strings</source>
          <target state="translated">&lt;code&gt;REG_SZ&lt;/code&gt; 文字列のREG_SZ</target>
        </trans-unit>
        <trans-unit id="6a3a14748f737a313a9808a9d5fb1247c8867284" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;REG_SZ&lt;/code&gt;, which is a string</source>
          <target state="translated">&lt;code&gt;REG_SZ&lt;/code&gt; 文字列であるREG_SZ</target>
        </trans-unit>
        <trans-unit id="48c9159aabc82d3bbdec41eb9e76202eda315d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RELEASE_ROOT&lt;/code&gt; if you have installed using &lt;code&gt;make release RELEASE_ROOT=&amp;lt;ReleaseDir&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RELEASE_ROOT&lt;/code&gt; あなたが使用してインストールしている場合は &lt;code&gt;make release RELEASE_ROOT=&amp;lt;ReleaseDir&amp;gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a76fbd6c72d57e5490f478fc588db4b552777138" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RawOptReq&lt;/code&gt; consists of tag &lt;code&gt;raw&lt;/code&gt; followed by the protocol level, the option number, and either a binary or the size, in bytes, of the buffer in which the option value is to be stored. A binary is to be used when the underlying &lt;code&gt;getsockopt&lt;/code&gt; requires &lt;strong&gt;input&lt;/strong&gt; in the argument field. In this case, the binary size is to correspond to the required buffer size of the return value. The supplied values in a &lt;code&gt;RawOptReq&lt;/code&gt; correspond to the second, third, and fourth/fifth parameters to the &lt;code&gt;getsockopt&lt;/code&gt; call in the C socket API. The value stored in the buffer is returned as a binary &lt;code&gt;ValueBin&lt;/code&gt;, where all values are coded in the native endianess.</source>
          <target state="translated">&lt;code&gt;RawOptReq&lt;/code&gt; は、タグ &lt;code&gt;raw&lt;/code&gt; と、それに続くプロトコルレベル、オプション番号、およびバイナリまたはオプション値が格納されるバッファのサイズ（バイト単位）で構成されます。バイナリは、基になる &lt;code&gt;getsockopt&lt;/code&gt; が引数フィールドに&lt;strong&gt;入力&lt;/strong&gt;を要求するときに使用されます。この場合、バイナリサイズは、戻り値の必要なバッファサイズに対応します。 &lt;code&gt;RawOptReq&lt;/code&gt; で提供される値は、CソケットAPIの &lt;code&gt;getsockopt&lt;/code&gt; 呼び出しの2番目、3番目、および4番目/ 5番目のパラメーターに対応します。バッファに格納された値はバイナリ &lt;code&gt;ValueBin&lt;/code&gt; として返され、すべての値はネイティブエンディアンでコード化されます。</target>
        </trans-unit>
        <trans-unit id="1918be1fe7adfadd40c87ab0cd396f8d1f6cdfc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Re = string()&lt;/code&gt; and &lt;code&gt;Replacement = string()&lt;/code&gt;. &lt;code&gt;re_write&lt;/code&gt; allows documents to be stored in the local file system instead of the &lt;code&gt;document_root&lt;/code&gt; location. URLs are rewritten by &lt;code&gt;re:replace/3&lt;/code&gt; to produce a path in the local file-system, for example:</source>
          <target state="translated">&lt;code&gt;Re = string()&lt;/code&gt; および &lt;code&gt;Replacement = string()&lt;/code&gt; 。 &lt;code&gt;re_write&lt;/code&gt; を使用すると、 &lt;code&gt;document_root&lt;/code&gt; の場所ではなく、ローカルファイルシステムにドキュメントを保存できます。URLは &lt;code&gt;re:replace/3&lt;/code&gt; によって書き換えられ、ローカルファイルシステムにパスが生成されます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="a0991a107df19e2b267dff6b522c733c063992eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Re = string()&lt;/code&gt; and &lt;code&gt;Replacement = string()&lt;/code&gt;. Have the same behavior as property &lt;code&gt;re_write&lt;/code&gt;, except that they also mark the target directory as containing CGI scripts. URLs with a path beginning with url-path are mapped to scripts beginning with directory-filename, for example:</source>
          <target state="translated">&lt;code&gt;Re = string()&lt;/code&gt; および &lt;code&gt;Replacement = string()&lt;/code&gt; 。プロパティ &lt;code&gt;re_write&lt;/code&gt; と同じ動作をしますが、CGIスクリプトを含むものとしてターゲットディレクトリをマークする点が異なります。url-pathで始まるパスを持つURLは、directory-filenameで始まるスクリプトにマッピングされます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="bd305e691b262c93c97b49bfccfb00dd4a8af24f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReadView&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;ReadView&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="c310f443162362bab26c9b639932e5966e00430f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason = {failed,FailReason} | {require_failed_in_suite0,RequireInfo}&lt;/code&gt;, reason for auto-skipping &lt;code&gt;Func&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reason = {failed,FailReason} | {require_failed_in_suite0,RequireInfo}&lt;/code&gt; 、 &lt;code&gt;Func&lt;/code&gt; の自動スキップの理由。</target>
        </trans-unit>
        <trans-unit id="6e3e9d3eb9360e8553c297f5bae665eee6f6f8d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; can be any term.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; は任意の用語にすることができます。</target>
        </trans-unit>
        <trans-unit id="1fe3ac1e6a046556c2a4a1a8b087bb0e4d6339f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; can, depending on which distribution module or process that is used be any term, but for the standard TCP distribution module it is any of the following:</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; は、使用されている配布モジュールまたはプロセスに応じて任意の用語にすることができますが、標準のTCP配布モジュールの場合、次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="8fb32355efcc62c8079594accbe4d545ff65bde5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; depends on the type of error that occurred, and &lt;code&gt;Stack&lt;/code&gt; is the stack of recent function calls, see &lt;code&gt;&lt;a href=&quot;errors#exit_reasons&quot;&gt;Exit Reasons&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; は発生したエラーのタイプによって異なり、 &lt;code&gt;Stack&lt;/code&gt; は最近の関数呼び出しのスタックです。 &lt;code&gt;&lt;a href=&quot;errors#exit_reasons&quot;&gt;Exit Reasons&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="369fb2cdc2d66f6734bae926f5e37b75a7dc7f7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; depends on why the &lt;code&gt;gen_server&lt;/code&gt; process is terminating. If it is because another callback function has returned a stop tuple &lt;code&gt;{stop,..}&lt;/code&gt;, &lt;code&gt;Reason&lt;/code&gt; has the value specified in that tuple. If it is because of a failure, &lt;code&gt;Reason&lt;/code&gt; is the error reason.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; は、 &lt;code&gt;gen_server&lt;/code&gt; プロセスが終了する理由によって異なります。別のコールバック関数が停止タプル &lt;code&gt;{stop,..}&lt;/code&gt; を返したことが原因である場合、 &lt;code&gt;Reason&lt;/code&gt; はそのタプルで指定された値を持っています。障害が原因の場合、 &lt;code&gt;Reason&lt;/code&gt; はエラーの理由です。</target>
        </trans-unit>
        <trans-unit id="9b28b3d09cc2881c7f2b112a603df4663f17d25f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; depends on why the &lt;code&gt;gen_statem&lt;/code&gt; is terminating. If it is because another callback function has returned, a stop tuple &lt;code&gt;{stop,Reason}&lt;/code&gt; in &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;Actions&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;Reason&lt;/code&gt; has the value specified in that tuple. If it is because of a failure, &lt;code&gt;Reason&lt;/code&gt; is the error reason.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; は、 &lt;code&gt;gen_statem&lt;/code&gt; が終了する理由によって異なります。別のコールバック関数が戻ってきたので、それがある場合には、停止タプル &lt;code&gt;{stop,Reason}&lt;/code&gt; で &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;Actions&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;Reason&lt;/code&gt; そのタプルで指定された値を有しています。障害が原因の場合、 &lt;code&gt;Reason&lt;/code&gt; はエラーの理由です。</target>
        </trans-unit>
        <trans-unit id="855f332896eba71f0543f888292a47067a954798" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; indicates the type of error encountered.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; は、発生したエラーのタイプを示します。</target>
        </trans-unit>
        <trans-unit id="10fff19fac85a90f5b8aa82f0201e12a6685a241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; is &lt;code&gt;shutdown&lt;/code&gt; if the supervisor bridge is terminated by its supervisor. If the supervisor bridge terminates because a a linked process (apart from the main process of the subsystem) has terminated with reason &lt;code&gt;Term&lt;/code&gt;, then &lt;code&gt;Reason&lt;/code&gt; becomes &lt;code&gt;Term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; スーパーバイザブリッジがスーパーバイザによって終端されている場合、理由は &lt;code&gt;shutdown&lt;/code&gt; されます。リンクされたプロセス（サブシステムのメインプロセスを除く）が理由 &lt;code&gt;Term&lt;/code&gt; で終了したためにスーパーバイザブリッジが終了した場合、 &lt;code&gt;Reason&lt;/code&gt; は &lt;code&gt;Term&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="3b8232eff6298ad5309948bf63395e5935c73b36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; is a term denoting the stop reason and &lt;code&gt;&lt;a href=&quot;#type-state&quot;&gt;State&lt;/a&gt;&lt;/code&gt; is the internal state of the &lt;code&gt;gen_statem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; 、停止理由を表す用語であり、 &lt;code&gt;&lt;a href=&quot;#type-state&quot;&gt;State&lt;/a&gt;&lt;/code&gt; 内部の状態である &lt;code&gt;gen_statem&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44fa5003c6b4335ca7d85ec9f1507d1f9201dd99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; is a term denoting the stop reason and &lt;code&gt;State&lt;/code&gt; is the internal state of the &lt;code&gt;gen_server&lt;/code&gt; process.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; 停止理由を表す用語であり、 &lt;code&gt;State&lt;/code&gt; 内部状態である &lt;code&gt;gen_server&lt;/code&gt; のプロセス。</target>
        </trans-unit>
        <trans-unit id="5a00cfeb25bcc4bd88c1774944b82112b03bf53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; is any term. &lt;code&gt;Stacktrace&lt;/code&gt; is a list as returned from &lt;code&gt;get_stacktrace()&lt;/code&gt;, that is, a list of four-tuples &lt;code&gt;{Module, Function, Arity | Args, Location}&lt;/code&gt;, where &lt;code&gt;Module&lt;/code&gt; and &lt;code&gt;Function&lt;/code&gt; are atoms, and the third element is an integer arity or an argument list. The stacktrace can also contain &lt;code&gt;{Fun, Args, Location}&lt;/code&gt; tuples, where &lt;code&gt;Fun&lt;/code&gt; is a local fun and &lt;code&gt;Args&lt;/code&gt; is an argument list.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; は任意の用語です。 &lt;code&gt;Stacktrace&lt;/code&gt; は、 &lt;code&gt;get_stacktrace()&lt;/code&gt; から返されるリストです。つまり、4つのタプル &lt;code&gt;{Module, Function, Arity | Args, Location}&lt;/code&gt; 、ここで &lt;code&gt;Module&lt;/code&gt; と &lt;code&gt;Function&lt;/code&gt; はアトムで、3番目の要素は整数アリティまたは引数リストです。スタックトレースには &lt;code&gt;{Fun, Args, Location}&lt;/code&gt; Args 、Location}タプルを含めることもできます。ここで、 &lt;code&gt;Fun&lt;/code&gt; はローカルfunで、 &lt;code&gt;Args&lt;/code&gt; は引数リストです。</target>
        </trans-unit>
        <trans-unit id="ca0421edd1dae5de1083aedd3a10ffe643f49681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt; is as per the &lt;code&gt;Reason&lt;/code&gt; field when extended errors are not enabled.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; は、拡張エラーが有効になっていない場合の &lt;code&gt;Reason&lt;/code&gt; フィールドと同じです。</target>
        </trans-unit>
        <trans-unit id="af2e4ce807f1575988b8c17a774a87a0ac8e8c7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reason&lt;/code&gt;, the reason for aborting the test case, is printed in the test case log.</source>
          <target state="translated">&lt;code&gt;Reason&lt;/code&gt; テストケースを中止する理由であるReasonは、テストケースログに出力されます。</target>
        </trans-unit>
        <trans-unit id="ceadc1608e7b1f2607b7f7df279fdb7264745f3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReasonInfo&lt;/code&gt; is a term().</source>
          <target state="translated">&lt;code&gt;ReasonInfo&lt;/code&gt; はterm（）です。</target>
        </trans-unit>
        <trans-unit id="7d9b9345f1d99011c2fee077198764a22cc1988a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Record&lt;/code&gt; is the record involved in the operation.</source>
          <target state="translated">&lt;code&gt;Record&lt;/code&gt; は、操作に関連するレコードです。</target>
        </trans-unit>
        <trans-unit id="37ecbe52d43c1c87b0821a3e9e92b463956db5bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RecordTag&lt;/code&gt; must be an atom.</source>
          <target state="translated">&lt;code&gt;RecordTag&lt;/code&gt; はアトムでなければなりません。</target>
        </trans-unit>
        <trans-unit id="c6a73b3515e317f63a43ef55eb3c213b39c5af35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Records&lt;/code&gt; is a list of pairs representing the names and corresponding field declarations of all record declaration attributes occurring in &lt;code&gt;Forms&lt;/code&gt;. For fields declared without a default value, the corresponding value for &lt;code&gt;Default&lt;/code&gt; is the atom &lt;code&gt;none&lt;/code&gt;. Similarly, for fields declared without a type, the corresponding value for &lt;code&gt;Type&lt;/code&gt; is the atom &lt;code&gt;none&lt;/code&gt; (cf. &lt;code&gt;analyze_record_attribute/1&lt;/code&gt;). We do not guarantee that each record name occurs at most once in the list. The order of listing is not defined.</source>
          <target state="translated">&lt;code&gt;Records&lt;/code&gt; は、 &lt;code&gt;Forms&lt;/code&gt; で発生するすべてのレコード宣言属性の名前と対応するフィールド宣言を表すペアのリストです。デフォルト値なしで宣言されたフィールドの場合、 &lt;code&gt;Default&lt;/code&gt; の対応する値はアトム &lt;code&gt;none&lt;/code&gt; です。同様に、型なしで宣言されたフィールドの場合、 &lt;code&gt;Type&lt;/code&gt; の対応する値はアトム &lt;code&gt;none&lt;/code&gt; です（cf. &lt;code&gt;analyze_record_attribute/1&lt;/code&gt; ）。各レコード名がリスト内で最大1回出現することは保証されません。リストの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="857d46c364b4afa4ff2b4b7324c9125b5607f5ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ref&lt;/code&gt; is either the atom &lt;code&gt;ignore&lt;/code&gt; or something that can be used to identify the inform-request (e.g. request-id). &lt;code&gt;ignore&lt;/code&gt; is used if the response (acknowledgment) to the inform-request has already been sent (this means that the server will not make the call to the &lt;code&gt;&lt;a href=&quot;snmpm_network_interface#inform_response&quot;&gt;inform_response&lt;/a&gt;&lt;/code&gt; function). See the &lt;code&gt;&lt;a href=&quot;snmp_config#manager_irb&quot;&gt;inform request behaviour&lt;/a&gt;&lt;/code&gt; configuration option for more info.</source>
          <target state="translated">&lt;code&gt;Ref&lt;/code&gt; は、アトム &lt;code&gt;ignore&lt;/code&gt; か、inform-request（request-idなど）を識別するために使用できるものです。 &lt;code&gt;ignore&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;snmpm_network_interface#inform_response&quot;&gt;inform_response&lt;/a&gt;&lt;/code&gt; -requestへの応答（確認応答）がすでに送信されている場合に使用されます（これは、サーバーがinform_response関数を呼び出さないことを意味します）。詳細については、 &lt;code&gt;&lt;a href=&quot;snmp_config#manager_irb&quot;&gt;inform request behaviour&lt;/a&gt;&lt;/code&gt; 設定オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="f222893226755e02cb47f524354864e9f7defa47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ref&lt;/code&gt; is either the atom &lt;code&gt;ignore&lt;/code&gt; or something that can be used to identify the inform-request (e.g. request-id). &lt;code&gt;ignore&lt;/code&gt; is used if the response (acknowledgment) to the inform-request has already been sent (this means that the server will not make the call to the &lt;code&gt;&lt;a href=&quot;snmpm_network_interface#inform_response&quot;&gt;inform_response&lt;/a&gt;&lt;/code&gt; function). See the &lt;code&gt;inform request behaviour&lt;/code&gt; configuration option for more info.</source>
          <target state="translated">&lt;code&gt;Ref&lt;/code&gt; は、アトム &lt;code&gt;ignore&lt;/code&gt; またはインフォーム要求（たとえば、要求ID）を識別するために使用できるものです。 &lt;code&gt;ignore&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;snmpm_network_interface#inform_response&quot;&gt;inform_response&lt;/a&gt;&lt;/code&gt; -requestへの応答（確認）がすでに送信されている場合に使用されます（これは、サーバーがinform_response関数を呼び出さないことを意味します）。詳細については、 &lt;code&gt;inform request behaviour&lt;/code&gt; 設定オプションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="85b4e5f43237024a6a4aa3cf76e56288e0c0b26d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ref&lt;/code&gt; is something that can be used to identify the inform-request, e.g. request-id of the inform-request.</source>
          <target state="translated">&lt;code&gt;Ref&lt;/code&gt; は、インフォーム要求を識別するために使用できるものです（例：インフォーム要求の要求ID）。</target>
        </trans-unit>
        <trans-unit id="a61715fc8adbc759fad02c162f5d42de6f0d5779" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Refresh&lt;/code&gt; - Clears &lt;code&gt;all&lt;/code&gt; viewers and re-read their &lt;code&gt;Events&lt;/code&gt; from the &lt;code&gt;Collector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Refresh&lt;/code&gt; - &lt;code&gt;all&lt;/code&gt; ビューアをクリアし、 &lt;code&gt;Collector&lt;/code&gt; から &lt;code&gt;Events&lt;/code&gt; を再度読み取ります。</target>
        </trans-unit>
        <trans-unit id="53a8895ba59087126c15533cee1a475db932410e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Refresh&lt;/code&gt; - Clears &lt;code&gt;this&lt;/code&gt; viewer and re-read its &lt;code&gt;Events&lt;/code&gt; from the &lt;code&gt;Collector&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Refresh&lt;/code&gt; - &lt;code&gt;this&lt;/code&gt; ビューアをクリアし、 &lt;code&gt;Collector&lt;/code&gt; から &lt;code&gt;Events&lt;/code&gt; を再度読み取ります。</target>
        </trans-unit>
        <trans-unit id="7c545e4e75de169909ab9ad527ea89534e0a66b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Regexp&lt;/code&gt; is a string with characters encoded in the UTF-8 coding standard.</source>
          <target state="translated">&lt;code&gt;Regexp&lt;/code&gt; は、UTF-8コーディング標準でエンコードされた文字列です。</target>
        </trans-unit>
        <trans-unit id="a9a09876465526ade802cc7a9ec80e30b415058f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegisteredName&lt;/code&gt; is the registered name of the port. If the port has no registered name, &lt;code&gt;[]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;RegisteredName&lt;/code&gt; は、ポートの登録名です。ポートに名前が登録されていない場合、 &lt;code&gt;[]&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="4e6b4877a6449e271960f4ef4a2f266edf677fda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Registry&lt;/code&gt;: Store and backup of key-value pairs</source>
          <target state="translated">&lt;code&gt;Registry&lt;/code&gt; ：キーと値のペアの保存とバックアップ</target>
        </trans-unit>
        <trans-unit id="834ef1d26d407fec60c75ed8a86c20a0225a4f65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReleaseName&lt;/code&gt; is the name of the release package except the &lt;code&gt;.tar.gz&lt;/code&gt; extension.</source>
          <target state="translated">&lt;code&gt;ReleaseName&lt;/code&gt; は、 &lt;code&gt;.tar.gz&lt;/code&gt; 拡張子を除くリリースパッケージの名前です。</target>
        </trans-unit>
        <trans-unit id="28b89f11b47bdcf4a1b18832017b878b15704781" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Remaining&lt;/code&gt; is the remaining time of the given (or default) timeout time.</source>
          <target state="translated">&lt;code&gt;Remaining&lt;/code&gt; は、指定された（またはデフォルトの）タイムアウト時間の残り時間です。</target>
        </trans-unit>
        <trans-unit id="1808ad0e3b1b3c60c9c1a5765a9f5db9519da04e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Remaining&lt;/code&gt; is the remaining time of the given or default timeout time.</source>
          <target state="translated">&lt;code&gt;Remaining&lt;/code&gt; は、指定またはデフォルトのタイムアウト時間の残り時間です。</target>
        </trans-unit>
        <trans-unit id="ddebb92623e272b5d45142213bccffa52b1dfa9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Remaining&lt;/code&gt; time of the given or default timeout time.</source>
          <target state="translated">&lt;code&gt;Remaining&lt;/code&gt; 指定またはデフォルトのタイムアウト時間の残り時間。</target>
        </trans-unit>
        <trans-unit id="883c6547edf06f52ae502f7580ba5662891867a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteFile&lt;/code&gt; and &lt;code&gt;LocalFile&lt;/code&gt; must be absolute paths.</source>
          <target state="translated">&lt;code&gt;RemoteFile&lt;/code&gt; と &lt;code&gt;LocalFile&lt;/code&gt; は絶対パスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="45e8590f435ecc50c7e69b9f28fb64db7b974956" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Removed&lt;/code&gt; is a list of all parameters &lt;code&gt;Par&lt;/code&gt; that have been removed.</source>
          <target state="translated">&lt;code&gt;Removed&lt;/code&gt; は、削除されたすべてのパラメーター &lt;code&gt;Par&lt;/code&gt; のリストです。</target>
        </trans-unit>
        <trans-unit id="7a05a7d4c96ae6ea91a9f27432822300899c09b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Removed&lt;/code&gt; is a list of all removed parameters.</source>
          <target state="translated">&lt;code&gt;Removed&lt;/code&gt; は、削除されたすべてのパラメーターのリストです。</target>
        </trans-unit>
        <trans-unit id="1738f8d577f09578dea04ecdf25effafa96b0944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReplyAs&lt;/code&gt; can be any datum and is returned in the corresponding &lt;code&gt;io_reply&lt;/code&gt;. The &lt;code&gt;io&lt;/code&gt; module monitors the the I/O server and uses the monitor reference as the &lt;code&gt;ReplyAs&lt;/code&gt; datum. A more complicated client can have many outstanding I/O requests to the same I/O server and can use different references (or something else) to differentiate among the incoming I/O replies. Element &lt;code&gt;ReplyAs&lt;/code&gt; is to be considered opaque by the I/O server.</source>
          <target state="translated">&lt;code&gt;ReplyAs&lt;/code&gt; は任意のデータであり、対応する &lt;code&gt;io_reply&lt;/code&gt; で返されます。 &lt;code&gt;io&lt;/code&gt; モジュールは、I / Oサーバをモニタし、モニタ基準を使用 &lt;code&gt;ReplyAs&lt;/code&gt; のデータム。より複雑なクライアントでは、同じI / Oサーバーへの未解決のI / O要求が多数あり、異なる参照（または他の参照）を使用して、着信I / O応答を区別できます。要素 &lt;code&gt;ReplyAs&lt;/code&gt; は、I / Oサーバーによって不透明と見なされます。</target>
        </trans-unit>
        <trans-unit id="17128e2a01942fe030eec52570c1ffffd4f5e544" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqId&lt;/code&gt; corresponds to a spawn request previoulsy made by the calling process. The spawn operation has completed and a spawn reply has already been delivered to the calling process unless the spawn reply was disabled in the request.</source>
          <target state="translated">&lt;code&gt;ReqId&lt;/code&gt; は、呼び出しプロセスによって事前に作成されたスポーン要求に対応します。スポーン操作が完了し、スポーン応答が要求で無効にされていない限り、スポーン応答はすでに呼び出しプロセスに配信されています。</target>
        </trans-unit>
        <trans-unit id="2e8c17b1918abae10445021033d482a6b2a49311" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqId&lt;/code&gt; does not correspond to a spawn request that has been made by the calling process.</source>
          <target state="translated">&lt;code&gt;ReqId&lt;/code&gt; は、呼び出しプロセスによって行われたスポーン要求に対応していません。</target>
        </trans-unit>
        <trans-unit id="ea5c0cf0344fb51e26eb81916ed55d9558d5e161" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqId&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;ReqId&lt;/code&gt; は整数です。</target>
        </trans-unit>
        <trans-unit id="eacaf08d53b1d5fff2c09db06993798fe27a987e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqId&lt;/code&gt; is returned by the asynchronous request function.</source>
          <target state="translated">&lt;code&gt;ReqId&lt;/code&gt; は、非同期要求関数によって返されます。</target>
        </trans-unit>
        <trans-unit id="0d132b9a53570192260708796ea7c4b8466eddfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReqId&lt;/code&gt; is the request id of the original request.</source>
          <target state="translated">&lt;code&gt;ReqId&lt;/code&gt; は、元のリクエストのリクエストIDです。</target>
        </trans-unit>
        <trans-unit id="4cfd078b817a4cacdfa2f5ac645cfa09fbba4335" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; and &lt;code&gt;From&lt;/code&gt; are to be passed as is from the system message to the call to &lt;code&gt;handle_system_msg&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; と &lt;code&gt;From&lt;/code&gt; は、システムメッセージから &lt;code&gt;handle_system_msg&lt;/code&gt; の呼び出しにそのまま渡されます。</target>
        </trans-unit>
        <trans-unit id="9c20145c03ca8eb35759b95cf0a7d63ea017ed60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; and &lt;code&gt;Reply&lt;/code&gt; are described below.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; と &lt;code&gt;Reply&lt;/code&gt; については以下で説明します。</target>
        </trans-unit>
        <trans-unit id="9bcd48a1331b96f3c6bbdc7feb62d3cdc683a292" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; is any term that is passed as one of the arguments to &lt;code&gt;Module:handle_call/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; は、 &lt;code&gt;Module:handle_call/2&lt;/code&gt; への引数の1つとして渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="089fb0f7c4d1d7894f1de67845512f4ecad66151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; is any term that is passed as one of the arguments to &lt;code&gt;Module:handle_call/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; は、 &lt;code&gt;Module:handle_call/3&lt;/code&gt; への引数の1つとして渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="7a775324c0c87ed13af4e7b8ffa572a3255e74ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; is any term that is passed as one of the arguments to &lt;code&gt;Module:handle_cast/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; は、 &lt;code&gt;Module:handle_cast/2&lt;/code&gt; への引数の1つとして渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="6118d58b0e4bc7bc3dc2afb7de8fb2dbd927bdd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; is any term that is passed as the first argument to &lt;code&gt;Module:handle_call/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; は、 &lt;code&gt;Module:handle_call/3&lt;/code&gt; に最初の引数として渡される任意の用語です。</target>
        </trans-unit>
        <trans-unit id="2b834a6b698120e416278aa573cbc3e23ec9fbec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="30751f879314317594017fd21428a69c54f019b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; is the &lt;code&gt;Request&lt;/code&gt; argument of &lt;code&gt;call/3,4&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; は &lt;code&gt;call/3,4&lt;/code&gt; の &lt;code&gt;Request&lt;/code&gt; 引数です。</target>
        </trans-unit>
        <trans-unit id="2a26d63fe236fbc4879863d0dae439ba80eefb80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; is the &lt;code&gt;Request&lt;/code&gt; argument provided to &lt;code&gt;call&lt;/code&gt; or &lt;code&gt;multi_call&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; は、 &lt;code&gt;call&lt;/code&gt; または &lt;code&gt;multi_call&lt;/code&gt; に提供される &lt;code&gt;Request&lt;/code&gt; 引数です。</target>
        </trans-unit>
        <trans-unit id="aeb2b03e41993f045b74ee6f05dea1edd9d597b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Requests&lt;/code&gt; is a list of valid &lt;code&gt;io_request&lt;/code&gt; tuples for the protocol. They must be executed in the order that they appear in the list. The execution is to continue until one of the requests results in an error or the list is consumed. The result of the last request is sent back to the client.</source>
          <target state="translated">&lt;code&gt;Requests&lt;/code&gt; は、プロトコルの有効な &lt;code&gt;io_request&lt;/code&gt; タプルのリストです。リストに表示される順序で実行する必要があります。実行は、要求の1つがエラーになるか、リストが消費されるまで続行されます。最後のリクエストの結果がクライアントに送り返されます。</target>
        </trans-unit>
        <trans-unit id="599fb6f1c0ccf1f8e06e6d8ffd139a339dae6d01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RequireInfo = {not_available,atom() | tuple()}&lt;/code&gt;, why require failed.</source>
          <target state="translated">&lt;code&gt;RequireInfo = {not_available,atom() | tuple()}&lt;/code&gt; 、なぜrequireが失敗したのか。</target>
        </trans-unit>
        <trans-unit id="91ae1878b4f86aaad3ee26550daa21ca25883856" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Res&lt;/code&gt; is returned in the following circumstances:</source>
          <target state="translated">&lt;code&gt;Res&lt;/code&gt; は、次の状況で返されます。</target>
        </trans-unit>
        <trans-unit id="4c0d162e97a3f6b9975f5d54bdac7f2d07168d70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Result = ok | {auto_skipped,SkipReason} | {skipped,SkipReason} | {failed,FailReason}&lt;/code&gt;, the result.</source>
          <target state="translated">&lt;code&gt;Result = ok | {auto_skipped,SkipReason} | {skipped,SkipReason} | {failed,FailReason}&lt;/code&gt; 、結果。</target>
        </trans-unit>
        <trans-unit id="ae330c080fefdf389b6a1d441ab3c1fb813ba586" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Result&lt;/code&gt; can be any Erlang term, but if it is a &lt;code&gt;list()&lt;/code&gt;, the I/O server can convert it to a &lt;code&gt;binary()&lt;/code&gt; of appropriate format before returning it to the client, if the I/O server is set in binary mode (see below).</source>
          <target state="translated">&lt;code&gt;Result&lt;/code&gt; は任意のErlang用語ですが、それが &lt;code&gt;list()&lt;/code&gt; の場合、I / Oサーバーがバイナリモードに設定されている場合、I / Oサーバーはそれを適切な形式の &lt;code&gt;binary()&lt;/code&gt; に変換してからクライアントに返すことができます。 （下記参照）。</target>
        </trans-unit>
        <trans-unit id="1882015b81a394f422f9a4cc0231adffebd2ed37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RetryCount&lt;/code&gt; is an integer.</source>
          <target state="translated">&lt;code&gt;RetryCount&lt;/code&gt; は整数です。</target>
        </trans-unit>
        <trans-unit id="3bd52807e56dab7a94b2826373d5ee127aa1fccb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Return&lt;/code&gt; is the result of the &lt;code&gt;init_per_suite&lt;/code&gt; function. If it is &lt;code&gt;{skip,Reason}&lt;/code&gt; or &lt;code&gt;{fail,Reason}&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; is never called, instead the initiation is considered to be skipped or failed, respectively. If a &lt;code&gt;NewConfig&lt;/code&gt; list is returned, &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; is called with that &lt;code&gt;NewConfig&lt;/code&gt; list. For more details, see section &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#pre&quot;&gt;Pre Hooks&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;Return&lt;/code&gt; は、 &lt;code&gt;init_per_suite&lt;/code&gt; 関数の結果です。もしそうであれば &lt;code&gt;{skip,Reason}&lt;/code&gt; 又は &lt;code&gt;{fail,Reason}&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; が呼び出されない、代わりに開始は、それぞれ、スキップしたか失敗したと見なされます。場合 &lt;code&gt;NewConfig&lt;/code&gt; リストが返され、 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; それと呼ばれる &lt;code&gt;NewConfig&lt;/code&gt; リスト。詳細については、ユーザーガイドの「 &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#pre&quot;&gt;Pre Hooks&lt;/a&gt;&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="153cd0d95bea977494dbab1eebcbc88f33024ab0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Return&lt;/code&gt; is the result of the &lt;code&gt;init_per_suite&lt;/code&gt; function. If it is &lt;code&gt;{skip,Reason}&lt;/code&gt; or &lt;code&gt;{fail,Reason}&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; is never called, instead the initiation is considered to be skipped or failed, respectively. If a &lt;code&gt;NewConfig&lt;/code&gt; list is returned, &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; is called with that &lt;code&gt;NewConfig&lt;/code&gt; list. For more details, see section &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#pre&quot;&gt;Pre Hooks&lt;/a&gt;&lt;/code&gt; in the User's Guide.</source>
          <target state="translated">&lt;code&gt;Return&lt;/code&gt; は、 &lt;code&gt;init_per_suite&lt;/code&gt; 関数の結果です。もしそうであれば &lt;code&gt;{skip,Reason}&lt;/code&gt; 又は &lt;code&gt;{fail,Reason}&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; が呼び出されない、代わりに開始は、それぞれ、スキップしたか失敗したと見なされます。場合 &lt;code&gt;NewConfig&lt;/code&gt; リストが返され、 &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; それと呼ばれる &lt;code&gt;NewConfig&lt;/code&gt; リスト。詳細については、ユーザーズガイドの「 &lt;code&gt;&lt;a href=&quot;ct_hooks_chapter#pre&quot;&gt;Pre Hooks&lt;/a&gt;&lt;/code&gt; 」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="9bfbbb1a065ca0c9bb11b3ddd8f5ec09b6a157f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Return&lt;/code&gt; is what &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; returned, that is, &lt;code&gt;{fail,Reason}&lt;/code&gt;, &lt;code&gt;{skip,Reason}&lt;/code&gt;, a &lt;code&gt;Config&lt;/code&gt; list, or a term describing how &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; failed.</source>
          <target state="translated">&lt;code&gt;Return&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; が返したもの、つまり &lt;code&gt;{fail,Reason}&lt;/code&gt; 、 &lt;code&gt;{skip,Reason}&lt;/code&gt; 、 &lt;code&gt;Config&lt;/code&gt; リスト、または &lt;code&gt;&lt;a href=&quot;common_test#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; がどのように失敗したかを説明する用語です。</target>
        </trans-unit>
        <trans-unit id="bf0791f940792295bb6edacf1372dcdd850a0db1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Return&lt;/code&gt; is what &lt;code&gt;&lt;a href=&quot;ct_suite#Module:all-0&quot;&gt;all/0&lt;/a&gt;&lt;/code&gt; returned, that is, a list of test cases and groups to be executed, or a tuple &lt;code&gt;{skip,Reason}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Return&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;ct_suite#Module:all-0&quot;&gt;all/0&lt;/a&gt;&lt;/code&gt; が返したもの、つまり、実行されるテストケースとグループのリスト、またはタプル &lt;code&gt;{skip,Reason}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="50d1cf3345b66a40bb0d64db17902ce89c92d31f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Return&lt;/code&gt; is what &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; returned, that is, &lt;code&gt;{fail,Reason}&lt;/code&gt;, &lt;code&gt;{skip,Reason}&lt;/code&gt;, a &lt;code&gt;Config&lt;/code&gt; list, or a term describing how &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; failed.</source>
          <target state="translated">&lt;code&gt;Return&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; が返したもの、つまり &lt;code&gt;{fail,Reason}&lt;/code&gt; 、 &lt;code&gt;{skip,Reason}&lt;/code&gt; 、 &lt;code&gt;Config&lt;/code&gt; リスト、または &lt;code&gt;&lt;a href=&quot;ct_suite#Module:init_per_suite-1&quot;&gt;init_per_suite&lt;/a&gt;&lt;/code&gt; がどのように失敗したかを説明する用語です。</target>
        </trans-unit>
        <trans-unit id="9ce1688c287c94fc13d12b1aca3d47a723d8497a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reverse from this event&lt;/code&gt; - Set this event to be the first &lt;code&gt;Event&lt;/code&gt; in the &lt;code&gt;Viewer&lt;/code&gt; and change its display mode to be enter reverse search mode. The actor of this &lt;code&gt;Event&lt;/code&gt; (from, to or both) will be added to the list of selected actors. Observe, that the &lt;code&gt;Events&lt;/code&gt; will be shown in reverse order.</source>
          <target state="translated">&lt;code&gt;Reverse from this event&lt;/code&gt; -このイベントを &lt;code&gt;Viewer&lt;/code&gt; 最初の &lt;code&gt;Event&lt;/code&gt; し、その表示モードを逆検索モードに変更します。この &lt;code&gt;Event&lt;/code&gt; のアクター（from、to、または両方）が、選択されたアクターのリストに追加されます。ことを、確認して &lt;code&gt;Events&lt;/code&gt; 逆の順序で表示されます。</target>
        </trans-unit>
        <trans-unit id="a54d0c190922012da4a5810ef95e03925f97d85d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Root&lt;/code&gt; is the root of the installation (&lt;code&gt;$ROOT&lt;/code&gt;) as described earlier. &lt;code&gt;RelDir&lt;/code&gt; is the directory where the &lt;code&gt;RELEASES&lt;/code&gt; file is to be created (normally &lt;code&gt;$ROOT/releases&lt;/code&gt;). &lt;code&gt;RelFile&lt;/code&gt; is the name of the &lt;code&gt;.rel&lt;/code&gt; file that describes the initial release, including the extension &lt;code&gt;.rel&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Root&lt;/code&gt; は、前述のインストールのルート（ &lt;code&gt;$ROOT&lt;/code&gt; ）です。 &lt;code&gt;RelDir&lt;/code&gt; は、 &lt;code&gt;RELEASES&lt;/code&gt; ファイルが作成されるディレクトリです（通常は &lt;code&gt;$ROOT/releases&lt;/code&gt; ）。 &lt;code&gt;RelFile&lt;/code&gt; は、拡張子 &lt;code&gt;.rel&lt;/code&gt; を含む、初期リリースを記述する &lt;code&gt;.rel&lt;/code&gt; ファイルの名前です。</target>
        </trans-unit>
        <trans-unit id="109b635a0c8796283b6fa1b893e757c8758f0687" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RootAttributes&lt;/code&gt; is a list of &lt;code&gt;#xmlAttribute{}&lt;/code&gt; attributes for the &lt;code&gt;#root#&lt;/code&gt; element, which implicitly becomes the parent of the given &lt;code&gt;Content&lt;/code&gt;. The tag-handler function for &lt;code&gt;#root#&lt;/code&gt; is thus called with the complete exported data of &lt;code&gt;Content&lt;/code&gt;. Root attributes can be used to specify e.g. encoding or other metadata of an XML or HTML document.</source>
          <target state="translated">&lt;code&gt;RootAttributes&lt;/code&gt; は &lt;code&gt;#root#&lt;/code&gt; 要素の &lt;code&gt;#xmlAttribute{}&lt;/code&gt; 属性のリストであり、暗黙的に指定された &lt;code&gt;Content&lt;/code&gt; の親になります。したがって、 &lt;code&gt;#root#&lt;/code&gt; のタグハンドラー関数は、 &lt;code&gt;Content&lt;/code&gt; の完全なエクスポートデータで呼び出されます。ルート属性を使用して、XMLやHTMLドキュメントのエンコーディングやその他のメタデータなどを指定できます。</target>
        </trans-unit>
        <trans-unit id="0628994c77cf3dcb12b4f4a25202d45208ee37d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RootAttributes&lt;/code&gt; is a list of:</source>
          <target state="translated">&lt;code&gt;RootAttributes&lt;/code&gt; は次のリストです。</target>
        </trans-unit>
        <trans-unit id="6f16c3178f4a189f6eb081836a0db30bfb48a53a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rootset&lt;/code&gt; is a list of pids and registered names.</source>
          <target state="translated">&lt;code&gt;Rootset&lt;/code&gt; は、pidと登録名のリストです。</target>
        </trans-unit>
        <trans-unit id="d347b50ae6b2966f9a0f4604bef697422056a8cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Row&lt;/code&gt; is a tuple with values for all columns, including the index columns.</source>
          <target state="translated">&lt;code&gt;Row&lt;/code&gt; は、インデックス列を含むすべての列の値を持つタプルです。</target>
        </trans-unit>
        <trans-unit id="9c859e6654f149787c957c2dcb2689c0bd8a065b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowIndex&lt;/code&gt; can specify a non-existing row. Specifically, it can be the empty list. Returns the index of the next lexicographical row. If &lt;code&gt;RowIndex&lt;/code&gt; is the empty list, this function returns the index of the first row in the table.</source>
          <target state="translated">&lt;code&gt;RowIndex&lt;/code&gt; は、存在しない行を指定できます。具体的には、空のリストにすることができます。次の辞書編集行のインデックスを返します。 &lt;code&gt;RowIndex&lt;/code&gt; が空のリストの場合、この関数はテーブルの最初の行のインデックスを返します。</target>
        </trans-unit>
        <trans-unit id="d3b1391a6dfa3b34ca7d08f9561a201ce61847b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowIndex&lt;/code&gt; is a list of integers (possibly empty) that defines the key values for a row. The &lt;code&gt;RowIndex&lt;/code&gt; is the list representation (list of integers), which follow the &lt;code&gt;Cols&lt;/code&gt; integer in the OBJECT IDENTIFIER.</source>
          <target state="translated">&lt;code&gt;RowIndex&lt;/code&gt; は、行のキー値を定義する整数（空の場合もある）のリストです。 &lt;code&gt;RowIndex&lt;/code&gt; 従うリスト表現（整数のリスト）であり、 &lt;code&gt;Cols&lt;/code&gt; はのオブジェクト識別子の整数を。</target>
        </trans-unit>
        <trans-unit id="72b8e3aefce1d4d68e7638cb366c986b14e913d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowIndex&lt;/code&gt; is a list of integers that define the key values for the row. The &lt;code&gt;RowIndex&lt;/code&gt; is the list representation (list of integers) which follow the &lt;code&gt;Cols&lt;/code&gt; integer in the OBJECT IDENTIFIER.</source>
          <target state="translated">&lt;code&gt;RowIndex&lt;/code&gt; は、行のキー値を定義する整数のリストです。 &lt;code&gt;RowIndex&lt;/code&gt; 従うリスト表現（整数のリスト）である &lt;code&gt;Cols&lt;/code&gt; はのオブジェクト識別子の整数を。</target>
        </trans-unit>
        <trans-unit id="805a797a2bb2a86aa19417ee42c2228fa67e52f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowIndex&lt;/code&gt; is a list of integers which define the key values for the row. The &lt;code&gt;RowIndex&lt;/code&gt; is the list representation (list of integers) which follow the &lt;code&gt;Cols&lt;/code&gt; integer in the OBJECT IDENTIFIER.</source>
          <target state="translated">&lt;code&gt;RowIndex&lt;/code&gt; は、行のキー値を定義する整数のリストです。 &lt;code&gt;RowIndex&lt;/code&gt; 従うリスト表現（整数のリスト）である &lt;code&gt;Cols&lt;/code&gt; はのオブジェクト識別子の整数を。</target>
        </trans-unit>
        <trans-unit id="b76f2538ec83101fa6b946c72bb04458419ae16b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowIndex&lt;/code&gt; may be an empty list, an incompletely specified row index, or the index for an unspecified row.</source>
          <target state="translated">&lt;code&gt;RowIndex&lt;/code&gt; は、空のリスト、不完全に指定された行インデックス、または指定されていない行のインデックスです。</target>
        </trans-unit>
        <trans-unit id="024ea3d842b441ddaed28ba4cdb3129293153cc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rules&lt;/code&gt; defaults to:</source>
          <target state="translated">&lt;code&gt;Rules&lt;/code&gt; デフォルトは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3d53acdae1cd673daf29c1641f9ae57120fb1c23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rules&lt;/code&gt; describes how the source directory can be found when the object code directory is known. It is a list of tuples &lt;code&gt;{BinSuffix, SourceSuffix}&lt;/code&gt; and is interpreted as follows: if the end of the directory name where the object is located matches &lt;code&gt;BinSuffix&lt;/code&gt;, then the name created by replacing &lt;code&gt;BinSuffix&lt;/code&gt; with &lt;code&gt;SourceSuffix&lt;/code&gt; is expanded by calling &lt;code&gt;&lt;a href=&quot;filelib#wildcard-1&quot;&gt; filelib:wildcard/1&lt;/a&gt;&lt;/code&gt;. If a regular file is found among the matches, the function returns that location together with &lt;code&gt;Options&lt;/code&gt;. Otherwise the next rule is tried, and so on.</source>
          <target state="translated">&lt;code&gt;Rules&lt;/code&gt; は、オブジェクトコードディレクトリがわかっている場合にソースディレクトリを見つける方法を説明しています。これはタプル &lt;code&gt;{BinSuffix, SourceSuffix}&lt;/code&gt; リストであり、次のように解釈されます。オブジェクトが配置されているディレクトリ名の末尾が &lt;code&gt;BinSuffix&lt;/code&gt; と一致する場合、 &lt;code&gt;BinSuffix&lt;/code&gt; を &lt;code&gt;SourceSuffix&lt;/code&gt; に置き換えて作成された名前は、 &lt;code&gt;&lt;a href=&quot;filelib#wildcard-1&quot;&gt; filelib:wildcard/1&lt;/a&gt;&lt;/code&gt; を呼び出すことで展開されます。。一致するファイルの中に通常のファイルが見つかった場合、関数はその場所を &lt;code&gt;Options&lt;/code&gt; とともに返します。それ以外の場合は、次のルールが試行されます。</target>
        </trans-unit>
        <trans-unit id="59181cf532d934d785f1e918793863c42f39269c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rules&lt;/code&gt; describes how the source directory can be found when the object code directory is known. It is a list of tuples &lt;code&gt;{BinSuffix, SourceSuffix}&lt;/code&gt; and is interpreted as follows: if the end of the directory name where the object is located matches &lt;code&gt;BinSuffix&lt;/code&gt;, then the name created by replacing &lt;code&gt;BinSuffix&lt;/code&gt; with &lt;code&gt;SourceSuffix&lt;/code&gt; is expanded by calling &lt;code&gt;&lt;a href=&quot;filelib#wildcard-1&quot;&gt;filelib:wildcard/1&lt;/a&gt;&lt;/code&gt;. If a regular file is found among the matches, the function returns that location together with &lt;code&gt;Options&lt;/code&gt;. Otherwise the next rule is tried, and so on.</source>
          <target state="translated">&lt;code&gt;Rules&lt;/code&gt; は、オブジェクトコードディレクトリがわかっている場合にソースディレクトリを見つける方法を説明しています。これはタプル &lt;code&gt;{BinSuffix, SourceSuffix}&lt;/code&gt; リストであり、次のように解釈されます。オブジェクトが配置されているディレクトリ名の末尾が &lt;code&gt;BinSuffix&lt;/code&gt; と一致する場合、 &lt;code&gt;BinSuffix&lt;/code&gt; を &lt;code&gt;SourceSuffix&lt;/code&gt; で置き換えることによって作成された名前は、 &lt;code&gt;&lt;a href=&quot;filelib#wildcard-1&quot;&gt;filelib:wildcard/1&lt;/a&gt;&lt;/code&gt; を呼び出すことによって展開されます。。一致するファイルの中に通常のファイルが見つかった場合、関数はその場所を &lt;code&gt;Options&lt;/code&gt; とともに返します。そうでない場合は、次のルールが試されます。</target>
        </trans-unit>
        <trans-unit id="db2dac65f899efdf91b3e704976e86af9b3be344" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RunTimeError = term()&lt;/code&gt;, a runtime error, for example &lt;code&gt;badmatch&lt;/code&gt; or &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RunTimeError = term()&lt;/code&gt; 、たとえば &lt;code&gt;badmatch&lt;/code&gt; や &lt;code&gt;undef&lt;/code&gt; などの実行時エラー。</target>
        </trans-unit>
        <trans-unit id="bbf02355e3a3b63bb77aa1d3da45aed77c171dba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RunTimeError = term()&lt;/code&gt;, a runtime error, for example, &lt;code&gt;badmatch&lt;/code&gt; or &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RunTimeError = term()&lt;/code&gt; 、実行時エラー。たとえば、 &lt;code&gt;badmatch&lt;/code&gt; または &lt;code&gt;undef&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="166ce51b78108264c26dccc3b3043555b10c6393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Runtime/Wallclock&lt;/code&gt;, that is, the percentage of time where the node has been active.</source>
          <target state="translated">&lt;code&gt;Runtime/Wallclock&lt;/code&gt; 、つまりノードがアクティブであった時間の割合。</target>
        </trans-unit>
        <trans-unit id="b0d3bd112b9a60e72c91d5c923d3fb3ada76eeb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RxMatch&lt;/code&gt; is a list of matched strings. It looks as follows &lt;code&gt;[FullMatch, SubMatch1, SubMatch2, ...]&lt;/code&gt;, where &lt;code&gt;FullMatch&lt;/code&gt; is the string matched by the whole regular expression, and &lt;code&gt;SubMatchN&lt;/code&gt; is the string that matched subexpression number &lt;code&gt;N&lt;/code&gt;. Subexpressions are denoted with &lt;code&gt;'(' ')'&lt;/code&gt; in the regular expression.</source>
          <target state="translated">&lt;code&gt;RxMatch&lt;/code&gt; は、一致した文字列のリストです。それは次のように見えます &lt;code&gt;[FullMatch, SubMatch1, SubMatch2, ...]&lt;/code&gt; 、どこ &lt;code&gt;FullMatch&lt;/code&gt; は全体の正規表現でマッチした文字列であり、 &lt;code&gt;SubMatchN&lt;/code&gt; がマッチした部分式の数、その文字列である &lt;code&gt;N&lt;/code&gt; 。正規表現では、部分式は &lt;code&gt;'(' ')'&lt;/code&gt; で示されます。</target>
        </trans-unit>
        <trans-unit id="d2dc1cfdfe419af221cc8b8b70800d8513cede25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - Tagged source register (X or Y). The tag will be tested at runtime to retrieve the value from an X register or a Y register. Slighly cheaper than &lt;code&gt;s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; -タグ付きソースレジスタ（XまたはY）。タグは実行時にテストされ、XレジスタまたはYレジスタから値を取得します。よりSlighly安く &lt;code&gt;s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="52215da4c7d977d8a561835cab5cb4836f0b63a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SA2&lt;/code&gt; will not get requests starting with object identifier &lt;code&gt;[1,2,3]&lt;/code&gt; since &lt;code&gt;SA1&lt;/code&gt; does not.</source>
          <target state="translated">&lt;code&gt;SA2&lt;/code&gt; &lt;code&gt;SA1&lt;/code&gt; にはないため、SA2はオブジェクト識別子 &lt;code&gt;[1,2,3]&lt;/code&gt; で始まるリクエストを取得しません。</target>
        </trans-unit>
        <trans-unit id="718102b5ad085eb6596a0bb32aba1e6a25bcdf57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEQUENCE&lt;/code&gt;&lt;code&gt;b&lt;/code&gt; can be encoded as follows in Erlang:</source>
          <target state="translated">&lt;code&gt;SEQUENCE&lt;/code&gt; &lt;code&gt;b&lt;/code&gt; は、Erlangで次のようにエンコードできます。</target>
        </trans-unit>
        <trans-unit id="adedaa0e1ab00c603bdbaf9a4ba2b9a0390dd9cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SMALL_ATOM_EXT&lt;/code&gt; was introduced in ERTS 5.7.2 and require an exchange of distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#DFLAG_SMALL_ATOM_TAGS&quot;&gt; DFLAG_SMALL_ATOM_TAGS&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#distribution_handshake&quot;&gt; distribution handshake&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SMALL_ATOM_EXT&lt;/code&gt; はERTS5.7.2で導入され、 &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#distribution_handshake&quot;&gt; distribution handshake&lt;/a&gt;&lt;/code&gt; で配布フラグ &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#DFLAG_SMALL_ATOM_TAGS&quot;&gt; DFLAG_SMALL_ATOM_TAGS&lt;/a&gt;&lt;/code&gt; の交換が必要です。</target>
        </trans-unit>
        <trans-unit id="d353b04ae234a8027c00fdf4e2d87dc29a46b542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SMALL_ATOM_EXT&lt;/code&gt; was introduced in ERTS 5.7.2 and require an exchange of distribution flag &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_SMALL_ATOM_TAGS&lt;/a&gt;&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#distribution_handshake&quot;&gt;distribution handshake&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SMALL_ATOM_EXT&lt;/code&gt; はERTS 5.7.2で導入され、 &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#distribution_handshake&quot;&gt;distribution handshake&lt;/a&gt;&lt;/code&gt; で配布フラグ &lt;code&gt;&lt;a href=&quot;erl_dist_protocol#dflags&quot;&gt;DFLAG_SMALL_ATOM_TAGS&lt;/a&gt;&lt;/code&gt; を交換する必要があります。</target>
        </trans-unit>
        <trans-unit id="64e8f9434f966f64db42b8e21dadfb02b1e98cf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;STATIC_CFLAGS&lt;/code&gt; - Static C compiler flags.</source>
          <target state="translated">&lt;code&gt;STATIC_CFLAGS&lt;/code&gt; -静的Cコンパイラフラグ。</target>
        </trans-unit>
        <trans-unit id="b88dd1f63f13a1a76d4dae13833155a9133ae5db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Salt&lt;/code&gt; could be generated with &lt;code&gt;crypto:strong_rand_bytes(8)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Salt&lt;/code&gt; は &lt;code&gt;crypto:strong_rand_bytes(8)&lt;/code&gt; で生成できます。</target>
        </trans-unit>
        <trans-unit id="00485b2dd5e902c882e07bd97c0ddf5a172aff2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Save all events in the Collector to file&lt;/code&gt; - Saves all &lt;code&gt;Events&lt;/code&gt; stored in the &lt;code&gt;Collector&lt;/code&gt; to file.</source>
          <target state="translated">&lt;code&gt;Save all events in the Collector to file&lt;/code&gt; -すべて保存します &lt;code&gt;Events&lt;/code&gt; に保存されている &lt;code&gt;Collector&lt;/code&gt; のファイルにします。</target>
        </trans-unit>
        <trans-unit id="b8c0eca62d8bf79aa06b9250344bdfb9eb31c8c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Save configuration&lt;/code&gt; - Saves the current configuration to file. Normally, only the explicit configuration parameters with values that differ from their defaults are saved. But the configuration with or without default values and with or without derived values may also be saved.</source>
          <target state="translated">&lt;code&gt;Save configuration&lt;/code&gt; 保存-現在の構成をファイルに保存します。通常、デフォルトとは異なる値を持つ明示的な構成パラメーターのみが保存されます。ただし、デフォルト値の有無にかかわらず、派生値の有無にかかわらず、設定も保存できます。</target>
        </trans-unit>
        <trans-unit id="1d594249813ca4b8419be6eca9e0e226e90cf758" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Save&lt;/code&gt; - Save the contents of this window to file.</source>
          <target state="translated">&lt;code&gt;Save&lt;/code&gt; -このウィンドウの内容をファイルに保存します。</target>
        </trans-unit>
        <trans-unit id="8a7db09a7fd0667aa06fef75a6b3cc1ba66a450c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Saver&lt;/code&gt; (&lt;code&gt;atom()&lt;/code&gt;) is the name of the previous test case (where the data was saved). The &lt;code&gt;config&lt;/code&gt; macro can be used to extract particular data also from the recalled &lt;code&gt;ConfigList&lt;/code&gt;. It is strongly recommended that &lt;code&gt;Saver&lt;/code&gt; is always matched to the expected name of the saving test case. This way, problems because of restructuring of the test suite can be avoided. Also, it makes the dependency more explicit and the test suite easier to read and maintain.</source>
          <target state="translated">&lt;code&gt;Saver&lt;/code&gt; （ &lt;code&gt;atom()&lt;/code&gt; ）は、前のテストケースの名前です（データが保存された場所）。 &lt;code&gt;config&lt;/code&gt; マクロはリコールから、特定のデータを抽出するために使用することができる &lt;code&gt;ConfigList&lt;/code&gt; 。 &lt;code&gt;Saver&lt;/code&gt; は常に、保存テストケースの予想される名前に一致させることを強くお勧めします。これにより、テストスイートの再構築による問題を回避できます。また、依存関係がより明確になり、テストスイートが読みやすく、保守しやすくなります。</target>
        </trans-unit>
        <trans-unit id="0bf457662f146e23f4d9941192242988d9bbc304" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Scannerfile&lt;/code&gt; is the name of the file that will contain the Erlang scanner code that is generated. The default (&lt;code&gt;&quot;&quot;&lt;/code&gt;) is to add the extension &lt;code&gt;.erl&lt;/code&gt; to &lt;code&gt;FileName&lt;/code&gt; stripped of the &lt;code&gt;.xrl&lt;/code&gt; extension.</source>
          <target state="translated">&lt;code&gt;Scannerfile&lt;/code&gt; は、生成されるErlangスキャナーコードを含むファイルの名前です。デフォルトでは（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）の拡張を追加することです &lt;code&gt;.erl&lt;/code&gt; をする &lt;code&gt;FileName&lt;/code&gt; を剥奪 &lt;code&gt;.xrl&lt;/code&gt; 拡張。</target>
        </trans-unit>
        <trans-unit id="74f9abd428040e29545c1c7146f048bbe05b499c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Schedulers&lt;/code&gt; can be omitted if &lt;code&gt;:SchedulerOnline&lt;/code&gt; is not and conversely. The number of schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt; erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Schedulers&lt;/code&gt; あれば、省略することができます &lt;code&gt;:SchedulerOnline&lt;/code&gt; ないと逆です。オンラインのスケジューラーの数は、 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt; erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; 介して実行時に変更できます。</target>
        </trans-unit>
        <trans-unit id="fbc3bf675ab2e1501917f762563ef90c270cd69b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecLevel&lt;/code&gt; is &lt;code&gt;noAuthNoPriv&lt;/code&gt;, &lt;code&gt;authNoPriv&lt;/code&gt;, or &lt;code&gt;authPriv&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SecLevel&lt;/code&gt; は &lt;code&gt;noAuthNoPriv&lt;/code&gt; 、 &lt;code&gt;authNoPriv&lt;/code&gt; 、または &lt;code&gt;authPriv&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="0ba6c912556b867c75dc49daafaa36aea4085d1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecLevel&lt;/code&gt; is security level (noAuthNoPriv | authNoPriv | authPriv).</source>
          <target state="translated">&lt;code&gt;SecLevel&lt;/code&gt; はセキュリティレベルです（noAuthNoPriv | authNoPriv | authPriv）。</target>
        </trans-unit>
        <trans-unit id="219a44885687fd5ab1bd450244b028c33da03a05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecModel&lt;/code&gt; is &lt;code&gt;any&lt;/code&gt;, &lt;code&gt;v1&lt;/code&gt;, &lt;code&gt;v2c&lt;/code&gt;, or &lt;code&gt;usm&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SecModel&lt;/code&gt; は &lt;code&gt;any&lt;/code&gt; 、 &lt;code&gt;v1&lt;/code&gt; 、 &lt;code&gt;v2c&lt;/code&gt; 、または &lt;code&gt;usm&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="341f4eb3d0bd17184f4da0b5de50b6e8ce4bb72a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecModel&lt;/code&gt; is the security model (any | v1 | v2c | usm).</source>
          <target state="translated">&lt;code&gt;SecModel&lt;/code&gt; はセキュリティモデルです（任意の| v1 | v2c | usm）。</target>
        </trans-unit>
        <trans-unit id="327a96f9d4f700ec6e525b4f5195a4a3f49efb5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecName&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;SecName&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="d48bc3f9ef07aeb330eeb8ad1166dee18a28e947" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecName&lt;/code&gt; is the security name (string).</source>
          <target state="translated">&lt;code&gt;SecName&lt;/code&gt; はセキュリティ名（文字列）です。</target>
        </trans-unit>
        <trans-unit id="bdd1104b91549560b02f81e033381080c58b1352" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecurityLevel&lt;/code&gt; is &lt;code&gt;noAuthNoPriv&lt;/code&gt;, &lt;code&gt;authNoPriv&lt;/code&gt; or &lt;code&gt;authPriv&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SecurityLevel&lt;/code&gt; は &lt;code&gt;noAuthNoPriv&lt;/code&gt; 、 &lt;code&gt;authNoPriv&lt;/code&gt; または &lt;code&gt;authPriv&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f57f858908b4eef2410061f9691b7f6c199f3bf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecurityModel&lt;/code&gt; is &lt;code&gt;v1&lt;/code&gt;, &lt;code&gt;v2c&lt;/code&gt;, or &lt;code&gt;usm&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SecurityModel&lt;/code&gt; は &lt;code&gt;v1&lt;/code&gt; 、 &lt;code&gt;v2c&lt;/code&gt; 、または &lt;code&gt;usm&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0e8c8829e225300aaefbd4d63b50237f0e7ec0f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecurityName&lt;/code&gt; is a string.</source>
          <target state="translated">&lt;code&gt;SecurityName&lt;/code&gt; は文字列です。</target>
        </trans-unit>
        <trans-unit id="e7450624c90f4d7bf08863db06de24f0358bca1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SeqTraceInfo&lt;/code&gt; can have the following formats:</source>
          <target state="translated">&lt;code&gt;SeqTraceInfo&lt;/code&gt; には、次の形式があります。</target>
        </trans-unit>
        <trans-unit id="6743ede844c5120ed2dd205c9bd7b362f10416da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SequentialTraceToken&lt;/code&gt; is the sequential trace token for the process. This &lt;code&gt;InfoTuple&lt;/code&gt; can be changed or removed without prior notice.</source>
          <target state="translated">&lt;code&gt;SequentialTraceToken&lt;/code&gt; は、プロセスの順次トレーストークンです。この &lt;code&gt;InfoTuple&lt;/code&gt; は予告なく変更または削除される場合があります。</target>
        </trans-unit>
        <trans-unit id="ec57d7181d7cdf5a4ab074727924178a13829cab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Serial&lt;/code&gt; is a tuple &lt;code&gt;{PreviousSerial, ThisSerial}&lt;/code&gt;, where:</source>
          <target state="translated">&lt;code&gt;Serial&lt;/code&gt; はタプル &lt;code&gt;{PreviousSerial, ThisSerial}&lt;/code&gt; 。ここで、</target>
        </trans-unit>
        <trans-unit id="d29ab552b3779a6efffef6625eb5a9037c24176c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerialValue = {Previous, Current}&lt;/code&gt;. The &lt;code&gt;serial&lt;/code&gt; component contains counters which enables the traced messages to be sorted, should never be set explicitly by the user as these counters are updated automatically. Default is &lt;code&gt;{0, 0}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SerialValue = {Previous, Current}&lt;/code&gt; 。 &lt;code&gt;serial&lt;/code&gt; コンポーネントは、トレースされたメッセージをソートすることを可能にするこれらのカウンタは自動的に更新されると、ユーザが明示的に設定すべきではありませんカウンタが含まれています。デフォルトは &lt;code&gt;{0, 0}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2439118264f60e11ebf8f5ca7ce9606bcd2a54dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Server&lt;/code&gt; is the pid of the managing process.</source>
          <target state="translated">&lt;code&gt;Server&lt;/code&gt; は管理プロセスのpidです。</target>
        </trans-unit>
        <trans-unit id="ccd50a89a2818d7f46a1e4462eb2411dca15791e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ServerName&lt;/code&gt; specifies the &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; to register for the &lt;code&gt;gen_statem&lt;/code&gt;. If the &lt;code&gt;gen_statem&lt;/code&gt; is started with &lt;code&gt;start_link/3&lt;/code&gt;, no &lt;code&gt;ServerName&lt;/code&gt; is provided and the &lt;code&gt;gen_statem&lt;/code&gt; is not registered.</source>
          <target state="translated">&lt;code&gt;ServerName&lt;/code&gt; は、 &lt;code&gt;gen_statem&lt;/code&gt; に登録する &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; を指定します。 &lt;code&gt;gen_statem&lt;/code&gt; が &lt;code&gt;start_link/3&lt;/code&gt; で開始された場合、 &lt;code&gt;ServerName&lt;/code&gt; は提供されず、 &lt;code&gt;gen_statem&lt;/code&gt; は登録されません。</target>
        </trans-unit>
        <trans-unit id="6650cc4fb868165399ea3520f9c965698118e105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ServerRef&lt;/code&gt; can be any of the following:</source>
          <target state="translated">&lt;code&gt;ServerRef&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="ad7e606ed26855629ae8e299242dbb905e89b963" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set3&lt;/code&gt; contains the elements of &lt;code&gt;Set1&lt;/code&gt; that do not belong to &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set3&lt;/code&gt; の要素が含ま &lt;code&gt;Set1&lt;/code&gt; に属していない &lt;code&gt;Set2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba12ab0bb711feaebbc8860bcb6854680e830226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set4&lt;/code&gt; contains the elements of &lt;code&gt;Set1&lt;/code&gt; that belong to &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set4&lt;/code&gt; の要素が含ま &lt;code&gt;Set1&lt;/code&gt; に属し &lt;code&gt;Set2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f1be4eccd489ebd20f7b2faf5f53cbab0e789bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set5&lt;/code&gt; contains the elements of &lt;code&gt;Set2&lt;/code&gt; that do not belong to &lt;code&gt;Set1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set5&lt;/code&gt; はの要素が含まれ &lt;code&gt;Set2&lt;/code&gt; に属していない &lt;code&gt;Set1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0cec1fcdb9c656759cdaf19fe37c7121fdfb635f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SetOrUpdate&lt;/code&gt; has the value &lt;code&gt;set&lt;/code&gt; if the configuration change originates from a call to &lt;code&gt;&lt;a href=&quot;#set_handler_config-2&quot;&gt; set_handler_config/2,3&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;update&lt;/code&gt; if it originates from &lt;code&gt;&lt;a href=&quot;#update_handler_config-2&quot;&gt; update_handler_config/2,3&lt;/a&gt;&lt;/code&gt;. The handler can use this parameteter to decide how to update the value of the &lt;code&gt;config&lt;/code&gt; field, that is, the handler specific configuration data. Typically, if &lt;code&gt;SetOrUpdate&lt;/code&gt; equals &lt;code&gt;set&lt;/code&gt;, values that are not specified must be given their default values. If &lt;code&gt;SetOrUpdate&lt;/code&gt; equals &lt;code&gt;update&lt;/code&gt;, the values found in &lt;code&gt;OldConfig&lt;/code&gt; must be used instead.</source>
          <target state="translated">&lt;code&gt;SetOrUpdate&lt;/code&gt; は値持つ &lt;code&gt;set&lt;/code&gt; への呼び出しから構成変更発信場合 &lt;code&gt;&lt;a href=&quot;#set_handler_config-2&quot;&gt; set_handler_config/2,3&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;update&lt;/code&gt; 、それが由来する場合 &lt;code&gt;&lt;a href=&quot;#update_handler_config-2&quot;&gt; update_handler_config/2,3&lt;/a&gt;&lt;/code&gt; 。ハンドラは値更新する方法を決定するために、このparameteterを使用することができます &lt;code&gt;config&lt;/code&gt; 、ハンドラの具体的な構成データであるフィールドを、。通常、 &lt;code&gt;SetOrUpdate&lt;/code&gt; が &lt;code&gt;set&lt;/code&gt; と等しい場合、指定されていない値にはデフォルト値を指定する必要があります。 &lt;code&gt;SetOrUpdate&lt;/code&gt; が &lt;code&gt;update&lt;/code&gt; と等しい場合は、代わりに &lt;code&gt;OldConfig&lt;/code&gt; にある値を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="70a19403991d16b3e98fb9faeac9e5623cb4f073" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Settings&lt;/code&gt; is a list of subsystems, their configurable parameters, and used values. Settings can differ between different combinations of platforms, allocators, and allocation features. Memory sizes are given in bytes.</source>
          <target state="translated">&lt;code&gt;Settings&lt;/code&gt; は、サブシステム、それらの構成可能なパラメーター、および使用される値のリストです。設定は、プラットフォーム、アロケータ、および割り当て機能のさまざまな組み合わせ間で異なる場合があります。メモリサイズはバイト単位で示されます。</target>
        </trans-unit>
        <trans-unit id="8b09f867b70328f30c3265df6467ae7a3bd2b7a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Show actor in viewer&lt;/code&gt; - This implies that the actor will be added as a known actor in the &lt;code&gt;Viewer&lt;/code&gt; with its own vertical bar.</source>
          <target state="translated">&lt;code&gt;Show actor in viewer&lt;/code&gt; -これは、アクターが独自の垂直バーを持つ &lt;code&gt;Viewer&lt;/code&gt; 既知のアクターとして追加されることを意味します。</target>
        </trans-unit>
        <trans-unit id="17f44a9678dd0c950ddf2a0c1d6116369154821e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SinceLogWasOpened&lt;/code&gt; (&lt;code&gt;SinceLastInfo&lt;/code&gt;) is the number of times a wrap log file has been filled up and a new one is opened or &lt;code&gt;inc_wrap_file/1&lt;/code&gt; has been called since the disk log was last opened (&lt;code&gt;info/1&lt;/code&gt; was last called). The first time &lt;code&gt;info/2&lt;/code&gt; is called after a log was (re)opened or truncated, the two values are equal.</source>
          <target state="translated">&lt;code&gt;SinceLogWasOpened&lt;/code&gt; （ &lt;code&gt;SinceLastInfo&lt;/code&gt; ）は、ディスクログが最後に開かれてから（ &lt;code&gt;info/1&lt;/code&gt; が最後に呼び出されて）、ラップログファイルがいっぱいになって新しいファイルが開かれた回数、または &lt;code&gt;inc_wrap_file/1&lt;/code&gt; が呼び出された回数です。ログが（再度）開かれたか切り捨てられた後に初めて &lt;code&gt;info/2&lt;/code&gt; が呼び出されたとき、2つの値は同じです。</target>
        </trans-unit>
        <trans-unit id="7b87fe0e6ac8b4dad20c2d14ba541c9668c3a806" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Size&lt;/code&gt; is the log size as specified by the &lt;code&gt;open/1&lt;/code&gt; option &lt;code&gt;size&lt;/code&gt;, or the size set by &lt;code&gt;change_size/2&lt;/code&gt;. The value set by &lt;code&gt;change_size/2&lt;/code&gt; is reflected immediately.</source>
          <target state="translated">&lt;code&gt;Size&lt;/code&gt; は、 &lt;code&gt;open/1&lt;/code&gt; オプションの &lt;code&gt;size&lt;/code&gt; で指定されたログサイズ、または &lt;code&gt;change_size/2&lt;/code&gt; で設定されたサイズです。 &lt;code&gt;change_size/2&lt;/code&gt; で設定した値はすぐに反映されます。</target>
        </trans-unit>
        <trans-unit id="7cbe34a07dd4273ce268d6b1d2f6839a6dc4a510" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Size&lt;/code&gt; is the size in bytes of the process. This includes call stack, heap, and internal structures.</source>
          <target state="translated">&lt;code&gt;Size&lt;/code&gt; は、プロセスのバイト単位のサイズです。これには、呼び出しスタック、ヒープ、および内部構造が含まれます。</target>
        </trans-unit>
        <trans-unit id="8ca18c1b7f66a9d9f6b09bec054ce88db7752adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Size&lt;/code&gt; is the size in words of the youngest heap generation of the process. This generation includes the process stack. This information is highly implementation-dependent, and can change if the implementation changes.</source>
          <target state="translated">&lt;code&gt;Size&lt;/code&gt; は、プロセスの最も若いヒープ世代のサイズです。この世代には、プロセススタックが含まれます。この情報は実装に大きく依存しており、実装が変更されると変更される可能性があります。</target>
        </trans-unit>
        <trans-unit id="faea89fe6a20bd3a32d4fa0c205e62e7924b23a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Size&lt;/code&gt; is the size of the tuple representation, that is, one more than the number of fields.</source>
          <target state="translated">&lt;code&gt;Size&lt;/code&gt; は、タプル表現のサイズです。つまり、フィールド数よりも1つ多くなります。</target>
        </trans-unit>
        <trans-unit id="17514b48a3b866b2e9dfcb8e3d95efe4e4b4c3a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Size&lt;/code&gt; is the stack size, in words, of the process.</source>
          <target state="translated">&lt;code&gt;Size&lt;/code&gt; は、プロセスのスタックサイズです。</target>
        </trans-unit>
        <trans-unit id="5a58e3487963a9acab4d786cb6a0eee2d9817c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Size&lt;/code&gt; is the total size, in words, of all heap fragments of the process. This includes the process stack and any unreceived messages that are considered to be part of the heap.</source>
          <target state="translated">&lt;code&gt;Size&lt;/code&gt; は、プロセスのすべてのヒープフラグメントの合計サイズ、つまり言葉です。これには、プロセススタックと、ヒープの一部と見なされる未受信のメッセージが含まれます。</target>
        </trans-unit>
        <trans-unit id="e901cd8f15a32fc9a1535932ad01605577758d5a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Size&lt;/code&gt; must be a &lt;code&gt;guard expression&lt;/code&gt;, which can use literals and previously bound variables. The following is not allowed:</source>
          <target state="translated">&lt;code&gt;Size&lt;/code&gt; は &lt;code&gt;guard expression&lt;/code&gt; である必要があり、リテラルと以前にバインドされた変数を使用できます。以下は許可されていません。</target>
        </trans-unit>
        <trans-unit id="0f08f9cd818e055ea0596b6a52fb54c4c09e4d57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Size&lt;/code&gt; must be an integer literal, or a previously bound variable. The following is not allowed:</source>
          <target state="translated">&lt;code&gt;Size&lt;/code&gt; は整数リテラル、または以前にバインドされた変数でなければなりません。以下は許可されていません。</target>
        </trans-unit>
        <trans-unit id="19db3e286cc1c8531e52e1b339ad118a0441191f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SkipReason = {require_failed,RequireInfo} | {require_failed_in_suite0,RequireInfo} | {failed,{Suite,init_per_testcase,FailInfo}} | UserTerm&lt;/code&gt;, why the case was skipped.</source>
          <target state="translated">&lt;code&gt;SkipReason = {require_failed,RequireInfo} | {require_failed_in_suite0,RequireInfo} | {failed,{Suite,init_per_testcase,FailInfo}} | UserTerm&lt;/code&gt; 、ケースがスキップされた理由。</target>
        </trans-unit>
        <trans-unit id="4fab2dd4646103b8f301fa526a4bb185c4a36b85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Source&lt;/code&gt; and &lt;code&gt;Destination&lt;/code&gt; are on different file systems.</source>
          <target state="translated">&lt;code&gt;Source&lt;/code&gt; と &lt;code&gt;Destination&lt;/code&gt; が異なるファイルシステムにあります。</target>
        </trans-unit>
        <trans-unit id="fa451814be285e54f76678d894af6e41a8fea7fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Source&lt;/code&gt; and &lt;code&gt;Target&lt;/code&gt; are opaque data used exclusively by modules &lt;code&gt;SourceMod&lt;/code&gt; and &lt;code&gt;TargetMod&lt;/code&gt; to initialize the backup media.</source>
          <target state="translated">&lt;code&gt;Source&lt;/code&gt; と &lt;code&gt;Target&lt;/code&gt; は、バックアップメディアを初期化するためにモジュール &lt;code&gt;SourceMod&lt;/code&gt; と &lt;code&gt;TargetMod&lt;/code&gt; によって排他的に使用される不透明なデータです。</target>
        </trans-unit>
        <trans-unit id="16f1ce84821addcd0d3a2407674de48e428bf44e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Source&lt;/code&gt; and &lt;code&gt;Target&lt;/code&gt; are opaque data used exclusively by the modules &lt;code&gt;SourceMod&lt;/code&gt; and &lt;code&gt;TargetMod&lt;/code&gt; for initializing the backup medias.</source>
          <target state="translated">&lt;code&gt;Source&lt;/code&gt; および &lt;code&gt;Target&lt;/code&gt; は、バックアップメディアを初期化するためにモジュール &lt;code&gt;SourceMod&lt;/code&gt; および &lt;code&gt;TargetMod&lt;/code&gt; によって排他的に使用される不透明なデータです。</target>
        </trans-unit>
        <trans-unit id="c2f408234ceed3a4496b1f6d9ae28a19944f0aea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Source&lt;/code&gt; does not exist.</source>
          <target state="translated">&lt;code&gt;Source&lt;/code&gt; が存在しません。</target>
        </trans-unit>
        <trans-unit id="0ea39651f53ab8a5d772a933512e0a2a77ed11d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Source&lt;/code&gt; is a directory, but &lt;code&gt;Destination&lt;/code&gt; is not.</source>
          <target state="translated">&lt;code&gt;Source&lt;/code&gt; はディレクトリーですが、 &lt;code&gt;Destination&lt;/code&gt; はそうではありません。</target>
        </trans-unit>
        <trans-unit id="711570b546af7d3a823cbffc24f25b5208236f61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Source&lt;/code&gt; is a root directory, or &lt;code&gt;Destination&lt;/code&gt; is a subdirectory of &lt;code&gt;Source&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Source&lt;/code&gt; はルートディレクトリ、または &lt;code&gt;Destination&lt;/code&gt; は &lt;code&gt;Source&lt;/code&gt; のサブディレクトリです。</target>
        </trans-unit>
        <trans-unit id="4b935728707cc5c1b1c1b095a4cf903523cd781b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SourceMod&lt;/code&gt; and &lt;code&gt;TargetMod&lt;/code&gt; are module names.</source>
          <target state="translated">&lt;code&gt;SourceMod&lt;/code&gt; と &lt;code&gt;TargetMod&lt;/code&gt; はモジュール名です。</target>
        </trans-unit>
        <trans-unit id="ea6a4422966cef7b8f671e6a38788cefaa43e151" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SourceMod&lt;/code&gt; and &lt;code&gt;TargetMod&lt;/code&gt; are the names of the modules that actually access the backup media.</source>
          <target state="translated">&lt;code&gt;SourceMod&lt;/code&gt; および &lt;code&gt;TargetMod&lt;/code&gt; は、バックアップメディアに実際にアクセスするモジュールの名前です。</target>
        </trans-unit>
        <trans-unit id="3443d56d4c07efa682d958c9677c0fc54a9e0822" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SshConnectOption&lt;/code&gt; is any valid option to &lt;code&gt;ssh:connect/3,4&lt;/code&gt;. Common options used are &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;user_dir&lt;/code&gt;. The &lt;code&gt;SshConnectOptions&lt;/code&gt; are verfied by the SSH application.</source>
          <target state="translated">&lt;code&gt;SshConnectOption&lt;/code&gt; は、 &lt;code&gt;ssh:connect/3,4&lt;/code&gt; の有効なオプションです。使用される一般的なオプションは、 &lt;code&gt;user&lt;/code&gt; 、 &lt;code&gt;password&lt;/code&gt; および &lt;code&gt;user_dir&lt;/code&gt; です。 &lt;code&gt;SshConnectOptions&lt;/code&gt; は、 SSHアプリケーションによってverfiedされています。</target>
        </trans-unit>
        <trans-unit id="bd4bf30d5c4b11126029883626cb8b5398cd68b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Stack&lt;/code&gt; is the stack of function calls being evaluated when the error occurred, given as a list of tuples &lt;code&gt;{Module,Name,Arity}&lt;/code&gt; with the most recent function call first. The most recent function call tuple can in some cases be &lt;code&gt;{Module,Name,[Arg]}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stack&lt;/code&gt; は、エラーが発生したときに評価される関数呼び出しのスタックであり、最新の関数呼び出しが最初のタプル &lt;code&gt;{Module,Name,Arity}&lt;/code&gt; リストとして指定されます。最新の関数呼び出しタプルは、場合によっては &lt;code&gt;{Module,Name,[Arg]}&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="1381c0feaac2c56dd75ec5d186062dc16e2d0e00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackTrace = list()&lt;/code&gt;, list of function calls preceding a runtime error.</source>
          <target state="translated">&lt;code&gt;StackTrace = list()&lt;/code&gt; 、ランタイムエラーの前の関数呼び出しのリスト。</target>
        </trans-unit>
        <trans-unit id="47e28f77295e790060ead4d8da3c08a6183ab2e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackTrace = list()&lt;/code&gt;, list of function calls preceeding a runtime error.</source>
          <target state="translated">&lt;code&gt;StackTrace = list()&lt;/code&gt; 、ランタイムエラーの前の関数呼び出しのリスト。</target>
        </trans-unit>
        <trans-unit id="fb94775b34220f7485999939776b9c02e731bd67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Stacktrace&lt;/code&gt; is a list as provided in a try-catch clause.</source>
          <target state="translated">&lt;code&gt;Stacktrace&lt;/code&gt; は、try-catch句で提供されるリストです。</target>
        </trans-unit>
        <trans-unit id="73538348b38128bf4eda67bf5e1e6ae6ab4e3a51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Stacktrace&lt;/code&gt;, if specified, must be the name of a variable (not a pattern). The stack trace is bound to the variable when the corresponding &lt;code&gt;ExceptionPattern&lt;/code&gt; matches.</source>
          <target state="translated">&lt;code&gt;Stacktrace&lt;/code&gt; を指定する場合は、（パターンではなく）変数の名前でなければなりません。スタックトレースは、対応する &lt;code&gt;ExceptionPattern&lt;/code&gt; が一致するときに変数にバインドされます。</target>
        </trans-unit>
        <trans-unit id="2f1a4a4d674dd450fb9dd57113eb840ede386707" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Start&lt;/code&gt; is zero-based, that is:</source>
          <target state="translated">&lt;code&gt;Start&lt;/code&gt; はゼロベースです。つまり、</target>
        </trans-unit>
        <trans-unit id="331889f634f2d79381421991f288e4e200d65cd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartArgs&lt;/code&gt; is defined by the key &lt;code&gt;mod&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;#appl_res_file&quot;&gt;application resource file&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StartArgs&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#appl_res_file&quot;&gt;application resource file&lt;/a&gt;&lt;/code&gt; キー &lt;code&gt;mod&lt;/code&gt; によって定義されます。</target>
        </trans-unit>
        <trans-unit id="8902d0c21b3652c9965bcc6a61b99b03fc5e7253" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartArgs&lt;/code&gt; is the &lt;code&gt;StartArgs&lt;/code&gt; argument defined by the application specification key &lt;code&gt;mod&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StartArgs&lt;/code&gt; は、アプリケーション仕様キー &lt;code&gt;mod&lt;/code&gt; によって定義された &lt;code&gt;StartArgs&lt;/code&gt; 引数です。</target>
        </trans-unit>
        <trans-unit id="21344ebd9dbd62a1617db45ad3adfdc4a45ea7e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartLocation&lt;/code&gt; indicates the initial location when scanning starts. If &lt;code&gt;StartLocation&lt;/code&gt; is a line, &lt;code&gt;Anno&lt;/code&gt;, &lt;code&gt;EndLocation&lt;/code&gt;, and &lt;code&gt;ErrorLocation&lt;/code&gt; are lines. If &lt;code&gt;StartLocation&lt;/code&gt; is a pair of a line and a column, &lt;code&gt;Anno&lt;/code&gt; takes the form of an opaque compound data type, and &lt;code&gt;EndLocation&lt;/code&gt; and &lt;code&gt;ErrorLocation&lt;/code&gt; are pairs of a line and a column. The &lt;strong&gt;token annotations&lt;/strong&gt; contain information about the column and the line where the token begins, as well as the text of the token (if option &lt;code&gt;text&lt;/code&gt; is specified), all of which can be accessed by calling &lt;code&gt;&lt;a href=&quot;#column-1&quot;&gt;column/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#line-1&quot;&gt;line/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#location-1&quot;&gt;location/1&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#text-1&quot;&gt;text/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StartLocation&lt;/code&gt; は、スキャンの開始時の最初の場所を示します。 &lt;code&gt;StartLocation&lt;/code&gt; がラインの場合、 &lt;code&gt;Anno&lt;/code&gt; 、 &lt;code&gt;EndLocation&lt;/code&gt; 、および &lt;code&gt;ErrorLocation&lt;/code&gt; はラインです。 &lt;code&gt;StartLocation&lt;/code&gt; が行と列のペアである場合、 &lt;code&gt;Anno&lt;/code&gt; は不透明な複合データ型の形式を取り、 &lt;code&gt;EndLocation&lt;/code&gt; と &lt;code&gt;ErrorLocation&lt;/code&gt; は行と列のペアです。&lt;strong&gt;トークン注釈は&lt;/strong&gt;（オプションの場合、トークンが開始列と行に関する情報、並びにトークンのテキストを含む &lt;code&gt;text&lt;/code&gt; 指定されている）を呼び出すことによってアクセスすることができるすべては、 &lt;code&gt;&lt;a href=&quot;#column-1&quot;&gt;column/1&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#line-1&quot;&gt;line/1&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#location-1&quot;&gt;location/1&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#text-1&quot;&gt;text/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b443761110ac87b03c05e7d747250cf7761bcf51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartMessage&lt;/code&gt; can in field &lt;code&gt;content&lt;/code&gt; be encoded with a value of any type that an object in object set &lt;code&gt;GENERAL-PROCEDURES&lt;/code&gt; has in its &lt;code&gt;NEW MESSAGE&lt;/code&gt; field. This field refers to a type field &lt;code&gt;&amp;amp;Message&lt;/code&gt; in the class. Field &lt;code&gt;msgId&lt;/code&gt; is always encoded as a &lt;code&gt;PrintableString&lt;/code&gt;, as the field refers to a fixed type in the class.</source>
          <target state="translated">&lt;code&gt;StartMessage&lt;/code&gt; は、フィールド &lt;code&gt;content&lt;/code&gt; で、オブジェクトセット &lt;code&gt;GENERAL-PROCEDURES&lt;/code&gt; のオブジェクトが &lt;code&gt;NEW MESSAGE&lt;/code&gt; フィールドに持つ任意のタイプの値でエンコードできます。このフィールドは、クラスのタイプフィールド &lt;code&gt;&amp;amp;Message&lt;/code&gt; を参照します。フィールドはクラスの固定型を参照するため、フィールド &lt;code&gt;msgId&lt;/code&gt; は常に &lt;code&gt;PrintableString&lt;/code&gt; としてエンコードされます。</target>
        </trans-unit>
        <trans-unit id="30be4806f54c757f35e502e6467c7134c1354df0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartTime = {date(),time()}&lt;/code&gt;, test run start date and time.</source>
          <target state="translated">&lt;code&gt;StartTime = {date(),time()}&lt;/code&gt; 、テスト実行の開始日時。</target>
        </trans-unit>
        <trans-unit id="96a4a2c6218e172e30692b77067034c6287d73b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartType&lt;/code&gt; is usually the atom &lt;code&gt;normal&lt;/code&gt;. It has other values only in the case of a takeover or failover, see &lt;code&gt;&lt;a href=&quot;distributed_applications&quot;&gt;Distributed Applications&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StartType&lt;/code&gt; は、通常、原子である &lt;code&gt;normal&lt;/code&gt; 。テイクオーバーまたはフェイルオーバーの場合にのみ、他の値があり &lt;code&gt;&lt;a href=&quot;distributed_applications&quot;&gt;Distributed Applications&lt;/a&gt;&lt;/code&gt; 。分散アプリケーションを参照してください。</target>
        </trans-unit>
        <trans-unit id="079ffaa7919818e7ba60deb4839e9ee4b7e10b25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; and &lt;code&gt;Timeout&lt;/code&gt; have the same meanings as in the return value of &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt;. The callback module &lt;code&gt;Module&lt;/code&gt; does not need to export an &lt;code&gt;init/1&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; と &lt;code&gt;Timeout&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; の戻り値と同じ意味を持っています。コールバックモジュール &lt;code&gt;Module&lt;/code&gt; は、 &lt;code&gt;init/1&lt;/code&gt; 関数をエクスポートする必要はありません。</target>
        </trans-unit>
        <trans-unit id="0293cc93c6a69f8c3a5c4843d0d0086907f49f9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; is a term describing the internal state and is passed to &lt;code&gt;system_continue&lt;/code&gt;/&lt;code&gt;system_terminate&lt;/code&gt;/ &lt;code&gt;system_get_state&lt;/code&gt;/&lt;code&gt;system_replace_state&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; は内部状態を説明する用語であり、 &lt;code&gt;system_continue&lt;/code&gt; / &lt;code&gt;system_terminate&lt;/code&gt; / &lt;code&gt;system_get_state&lt;/code&gt; / &lt;code&gt;system_replace_state&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="69380207c6ab51bed60a573747a7210de399af73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; is taken from the return value of &lt;code&gt;Module:init/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; は &lt;code&gt;Module:init/1&lt;/code&gt; の戻り値から取得されます。</target>
        </trans-unit>
        <trans-unit id="dbff9f5d0fe23afcc10e93052c871132b2e25b7c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; is the current state and it can not be changed since the state callback was called with a &lt;code&gt;&lt;a href=&quot;#type-state_enter&quot;&gt;&lt;strong&gt;state enter call&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; は現在の状態であり、stateコールバックが &lt;code&gt;&lt;a href=&quot;#type-state_enter&quot;&gt;&lt;strong&gt;state enter call&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; れたため、変更できません。</target>
        </trans-unit>
        <trans-unit id="7b366a8bb94d366ae998f699d4348d15e980f295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; is the current state and it cannot be changed since the state callback was called with a &lt;code&gt;&lt;a href=&quot;#type-state_enter&quot;&gt;&lt;strong&gt;state enter call&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; は現在の状態であり、状態コールバックが &lt;code&gt;&lt;a href=&quot;#type-state_enter&quot;&gt;&lt;strong&gt;state enter call&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; れたため、変更できません。</target>
        </trans-unit>
        <trans-unit id="30b3ca99e842468ff3033339687091bf2713ccea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; is the initial value of the &lt;code&gt;hash_state&lt;/code&gt;&lt;code&gt;frag_property&lt;/code&gt;. &lt;code&gt;NewState&lt;/code&gt; is stored as &lt;code&gt;hash_state&lt;/code&gt; among the other &lt;code&gt;frag_properties&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; は、 &lt;code&gt;hash_state&lt;/code&gt; &lt;code&gt;frag_property&lt;/code&gt; の初期値です。 &lt;code&gt;NewState&lt;/code&gt; は、他の &lt;code&gt;frag_properties&lt;/code&gt; の中で &lt;code&gt;hash_state&lt;/code&gt; として保存されます。</target>
        </trans-unit>
        <trans-unit id="996d9c9a4872bf62e78f107c015e689bc1b8d0ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; is the internal state of the &lt;code&gt;gen_server&lt;/code&gt; process.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; 内部の状態である &lt;code&gt;gen_server&lt;/code&gt; のプロセス。</target>
        </trans-unit>
        <trans-unit id="a6737dac939a5f9ad754a2a6bf6d7937bf98777f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; is the internal state of the event handler.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; は、イベントハンドラーの内部状態です。</target>
        </trans-unit>
        <trans-unit id="746a7ecddba0be1c419cf1cce649c2ad5e63e6bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; is the new server state.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; は新しいサーバーの状態です。</target>
        </trans-unit>
        <trans-unit id="a3bcd2ae61bd0fb2c7380211754420270318f0bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; is the return value of &lt;code&gt;Module:prep_stop/1&lt;/code&gt;, if such a function exists. Otherwise &lt;code&gt;State&lt;/code&gt; is taken from the return value of &lt;code&gt;Module:start/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; そのような関数が存在する場合、Stateは &lt;code&gt;Module:prep_stop/1&lt;/code&gt; の戻り値です。それ以外の場合、 &lt;code&gt;State&lt;/code&gt; は &lt;code&gt;Module:start/2&lt;/code&gt; の戻り値から取得されます。</target>
        </trans-unit>
        <trans-unit id="722588208aad94e2ed67ae619208ebeab6fff31d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt; is the state returned from &lt;code&gt;Module:start/2&lt;/code&gt;, or &lt;code&gt;[]&lt;/code&gt; if no state was returned. &lt;code&gt;NewState&lt;/code&gt; is any term and is passed to &lt;code&gt;Module:stop/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; は &lt;code&gt;Module:start/2&lt;/code&gt; から返された状態、または状態が返されなかった場合は &lt;code&gt;[]&lt;/code&gt; です。 &lt;code&gt;NewState&lt;/code&gt; は任意の用語で、 &lt;code&gt;Module:stop/1&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="45410ce12fd3a406f075bd0bc7474e6f3a70fdfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;State&lt;/code&gt;, &lt;code&gt;Data&lt;/code&gt;, and &lt;code&gt;Actions&lt;/code&gt; have the same meanings as in the return value of &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt;. Also, the callback module does not need to export a &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;State&lt;/code&gt; 、 &lt;code&gt;Data&lt;/code&gt; 、および &lt;code&gt;Actions&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; の戻り値と同じ意味を持っています。また、コールバックモジュールは &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; 関数をエクスポートする必要はありません。</target>
        </trans-unit>
        <trans-unit id="ed898633e0b796d617d31d1d104b00d909616e85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StateType&lt;/code&gt; is &lt;code&gt;&lt;a href=&quot;#type-state_name&quot;&gt;state_name()&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;state_functions&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;#type-state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;handle_event_function&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StateType&lt;/code&gt; がある &lt;code&gt;&lt;a href=&quot;#type-state_name&quot;&gt;state_name()&lt;/a&gt;&lt;/code&gt; 場合 &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; ある &lt;code&gt;state_functions&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;#type-state&quot;&gt;state()&lt;/a&gt;&lt;/code&gt; 場合 &lt;code&gt;&lt;a href=&quot;#type-callback_mode&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; ある &lt;code&gt;handle_event_function&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f63ed6c6936ead90f330465aea0f55c09ab105f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Status&lt;/code&gt; - Current status of the process.</source>
          <target state="translated">&lt;code&gt;Status&lt;/code&gt; -プロセスの現在のステータス。</target>
        </trans-unit>
        <trans-unit id="170ce0967ff947ea5a10aead434443240f773ef3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Status&lt;/code&gt; is &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;{blocked, QueueLogRecords}&lt;/code&gt; as set by functions &lt;code&gt;block/1,2&lt;/code&gt; and &lt;code&gt;unblock/1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Status&lt;/code&gt; は &lt;code&gt;ok&lt;/code&gt; または &lt;code&gt;{blocked, QueueLogRecords}&lt;/code&gt; 、関数 &lt;code&gt;block/1,2&lt;/code&gt; およびunblock &lt;code&gt;unblock/1&lt;/code&gt; によって設定されます。</target>
        </trans-unit>
        <trans-unit id="b8bcaa8bb6507ea1f20e9ee1d70768cbe631715c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Status&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;Status&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="4a2b6157b18349a36e34c8cd6ec50e943ece38b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Status&lt;/code&gt; is the status of the process and is one of the following:</source>
          <target state="translated">&lt;code&gt;Status&lt;/code&gt; はプロセスのステータスであり、次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="5399f53770272c1cc5555cafcf7ab1ae7a34f976" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Status&lt;/code&gt; must be a non-negative integer, a string, or the atom &lt;code&gt;abort&lt;/code&gt;. Halts the Erlang runtime system. Has no return value. Depending on &lt;code&gt;Status&lt;/code&gt;, the following occurs:</source>
          <target state="translated">&lt;code&gt;Status&lt;/code&gt; は負でない整数、文字列、またはアトム &lt;code&gt;abort&lt;/code&gt; でなければなりません。Erlangランタイムシステムを停止します。戻り値はありません。 &lt;code&gt;Status&lt;/code&gt; に応じて、次のことが起こります。</target>
        </trans-unit>
        <trans-unit id="bb02a540b6d90a0e88da0858e0c65318c29eb839" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Strategy&lt;/code&gt; affects only the compression ratio, but not the correctness of the compressed output even if it is not set appropriately.</source>
          <target state="translated">&lt;code&gt;Strategy&lt;/code&gt; は圧縮率にのみ影響し、適切に設定されていなくても、圧縮された出力の正確さには影響しません。</target>
        </trans-unit>
        <trans-unit id="76d0f1ce8eb35d4b21b455ba531cd0268cb96c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Streams&lt;/code&gt; is a list of stream names. The following filter is sent to the NETCONF server in a &lt;code&gt;get&lt;/code&gt; request:</source>
          <target state="translated">&lt;code&gt;Streams&lt;/code&gt; は、ストリーム名のリストです。次のフィルタは、中NETCONFサーバに送信され &lt;code&gt;get&lt;/code&gt; リクエスト：</target>
        </trans-unit>
        <trans-unit id="e1ba17dd03e055396af3d769d1c2cf0c7aa319a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Stubs&lt;/code&gt; contains one entry for each exported input module (cf. the &lt;code&gt;export&lt;/code&gt; option), each entry describing a stub module that redirects calls of functions in the original module to the corresponding (possibly renamed) functions in the new module. The stub descriptors can be used to automatically generate stub modules; see &lt;code&gt;create_stubs/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Stubs&lt;/code&gt; は、エクスポートされた入力モジュール（ &lt;code&gt;export&lt;/code&gt; オプションを参照）ごとに1つのエントリが含まれます。各エントリは、元のモジュールの関数の呼び出しを新しいモジュールの対応する（名前が変更される可能性がある）関数にリダイレクトするスタブモジュールを示します。スタブ記述子を使用して、スタブモジュールを自動的に生成できます。 &lt;code&gt;create_stubs/2&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="524ba3ef3d1645f35a4bf0db5083cae1efd640dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SubType&lt;/code&gt; depends on the MAC &lt;code&gt;Type&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;SubType&lt;/code&gt; &lt;code&gt;Type&lt;/code&gt; はMACタイプによって異なります：</target>
        </trans-unit>
        <trans-unit id="13276b86e27394ec8c39f39146c552ab267a13db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Suite = atom()&lt;/code&gt;, name of the suite.</source>
          <target state="translated">&lt;code&gt;Suite = atom()&lt;/code&gt; 、スイートの名前。</target>
        </trans-unit>
        <trans-unit id="6aa4ee9e9d97d355c50f19483f0d0999058f3269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Suite = atom()&lt;/code&gt;, name of the test suite.</source>
          <target state="translated">&lt;code&gt;Suite = atom()&lt;/code&gt; 、テストスイートの名前。</target>
        </trans-unit>
        <trans-unit id="691f6e7c47630175a8057bcd1a62d13c8d255314" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Suite = atom()&lt;/code&gt;, the name of the suite.</source>
          <target state="translated">&lt;code&gt;Suite = atom()&lt;/code&gt; 、スイートの名前。</target>
        </trans-unit>
        <trans-unit id="468ccfa0b55d2b206b7acb6b5e659cd07695a747" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SuiteName&lt;/code&gt; is the name of the suite to be run.</source>
          <target state="translated">&lt;code&gt;SuiteName&lt;/code&gt; は、実行するスイートの名前です。</target>
        </trans-unit>
        <trans-unit id="11e72995c16089c33b28c8766ac3c89c3ccf2c44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Suites = integer()&lt;/code&gt;, total number of suites.</source>
          <target state="translated">&lt;code&gt;Suites = integer()&lt;/code&gt; 、スイートの総数。</target>
        </trans-unit>
        <trans-unit id="41f18704f194ca335a6e4e871bface89cbd6bf8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Sup&lt;/code&gt; is the pid, or name, of the supervisor and &lt;code&gt;Pid&lt;/code&gt; is the pid of the child.</source>
          <target state="translated">&lt;code&gt;Sup&lt;/code&gt; はスーパーバイザのPIDまたは名前であり、 &lt;code&gt;Pid&lt;/code&gt; は子のPIDです。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
