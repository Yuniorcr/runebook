<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="3acd8ddbcc99cb042f913dc83212b95ed1cb771d" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents &lt;code&gt;Term&lt;/code&gt;. Option &lt;code&gt;Depth&lt;/code&gt; controls the depth of the structures written. When the specified depth is reached, everything below this level is replaced by &quot;&lt;code&gt;...&lt;/code&gt;&quot;. &lt;code&gt;Depth&lt;/code&gt; defaults to -1, which means no limitation. Option &lt;code&gt;CharsLimit&lt;/code&gt; puts a soft limit on the number of characters returned. When the number of characters is reached, remaining structures are replaced by &quot;&lt;code&gt;...&lt;/code&gt;&quot;. &lt;code&gt;CharsLimit&lt;/code&gt; defaults to -1, which means no limit on the number of characters returned.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; を表す文字リストを返します。Option &lt;code&gt;Depth&lt;/code&gt; は、書き込まれる構造の深さを制御します。指定した深さに達すると、このレベルより下のすべてが「 &lt;code&gt;...&lt;/code&gt; 」に置き換えられます。 &lt;code&gt;Depth&lt;/code&gt; デフォルトは-1で、制限がないことを意味します。Option &lt;code&gt;CharsLimit&lt;/code&gt; は、返される文字数に弱い制限を課します。文字数に達すると、残りの構造は「 &lt;code&gt;...&lt;/code&gt; 」に置き換えられます。 &lt;code&gt;CharsLimit&lt;/code&gt; のデフォルトは-1です。これは、返される文字数に制限がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="7515af71865382538c9b621bc97880e10cea729c" translate="yes" xml:space="preserve">
          <source>Returns a character list that represents a new line character.</source>
          <target state="translated">新しい行文字を表す文字リストを返します。</target>
        </trans-unit>
        <trans-unit id="9837e9f3695bc3f529cc76c8333474205016bf54" translate="yes" xml:space="preserve">
          <source>Returns a complete list of keys, in any order, which resides within &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 内にあるキーの完全なリストを任意の順序で返します。</target>
        </trans-unit>
        <trans-unit id="a8d07324a8f857482b575ffdf8a5133ff3cd3086" translate="yes" xml:space="preserve">
          <source>Returns a complete list of values, in arbitrary order, contained in map &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">マップ &lt;code&gt;Map&lt;/code&gt; に含まれる値の完全なリストを任意の順序で返します。</target>
        </trans-unit>
        <trans-unit id="85b8ca0c9892ea474287d876db824903003ce54e" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;List1&lt;/code&gt; where the first element matching &lt;code&gt;Elem&lt;/code&gt; is deleted, if there is such an element.</source>
          <target state="translated">そのような要素がある場合、 &lt;code&gt;Elem&lt;/code&gt; に一致する最初の要素が削除された &lt;code&gt;List1&lt;/code&gt; のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="700b0d9b0fdb56ec10ab211365995c4237a52e77" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;TupleList1&lt;/code&gt; where the first occurrence of a &lt;code&gt;T&lt;/code&gt; tuple whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt; is replaced with &lt;code&gt;NewTuple&lt;/code&gt;, if there is such a tuple &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">戻り値のコピー &lt;code&gt;TupleList1&lt;/code&gt; の最初の出現 &lt;code&gt;T&lt;/code&gt; のタプル &lt;code&gt;N&lt;/code&gt; 番目の要素が等しい比較 &lt;code&gt;Key&lt;/code&gt; 用いて置換され &lt;code&gt;NewTuple&lt;/code&gt; タプル例えば、Aがある場合、 &lt;code&gt;T&lt;/code&gt; は。</target>
        </trans-unit>
        <trans-unit id="7074df7afcc8a3fe9972b4dcffcd75e05c47d4ad" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;TupleList1&lt;/code&gt; where the first occurrence of a tuple &lt;code&gt;T&lt;/code&gt; whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt; is replaced with &lt;code&gt;NewTuple&lt;/code&gt;, if there is such a tuple &lt;code&gt;T&lt;/code&gt;. If there is no such tuple &lt;code&gt;T&lt;/code&gt;, a copy of &lt;code&gt;TupleList1&lt;/code&gt; where [&lt;code&gt;NewTuple&lt;/code&gt;] has been appended to the end is returned.</source>
          <target state="translated">戻り値のコピー &lt;code&gt;TupleList1&lt;/code&gt; タプルの最初の出現 &lt;code&gt;T&lt;/code&gt; &lt;code&gt;N&lt;/code&gt; は番目の要素に等しい比較 &lt;code&gt;Key&lt;/code&gt; に置き換えられ &lt;code&gt;NewTuple&lt;/code&gt; ようなタプルが存在する場合、 &lt;code&gt;T&lt;/code&gt; 。そのようなタプルが存在しない場合 &lt;code&gt;T&lt;/code&gt; 、のコピー &lt;code&gt;TupleList1&lt;/code&gt; [ &lt;code&gt;NewTuple&lt;/code&gt; は】最後に追加されたが返されます。</target>
        </trans-unit>
        <trans-unit id="169e3b3fcbb9198de6cf8a879d88e8f319d03c21" translate="yes" xml:space="preserve">
          <source>Returns a copy of &lt;code&gt;TupleList1&lt;/code&gt; where the first occurrence of a tuple whose &lt;code&gt;N&lt;/code&gt;th element compares equal to &lt;code&gt;Key&lt;/code&gt; is deleted, if there is such a tuple.</source>
          <target state="translated">そのようなタプルがある場合、 &lt;code&gt;N&lt;/code&gt; 番目の要素が &lt;code&gt;Key&lt;/code&gt; と等しいタプルの最初の出現が削除される &lt;code&gt;TupleList1&lt;/code&gt; のコピーを返します。</target>
        </trans-unit>
        <trans-unit id="380d9bbd8030f3784e9e84eeac3cf89d2d38cc45" translate="yes" xml:space="preserve">
          <source>Returns a descriptive string in English of an error tuple returned by &lt;code&gt;yecc:file/1,2&lt;/code&gt;. This function is mainly used by the compiler invoking Yecc.</source>
          <target state="translated">&lt;code&gt;yecc:file/1,2&lt;/code&gt; によって返されたエラータプルの説明文字列を英語で返します。この関数は主に、Yeccを呼び出すコンパイラーによって使用されます。</target>
        </trans-unit>
        <trans-unit id="ea47de793fe37ea3966e30287cdccc9610f6a216" translate="yes" xml:space="preserve">
          <source>Returns a descriptive string in English of an error tuple returned by some of the functions of the &lt;code&gt;qlc&lt;/code&gt; module or the parse transform. This function is mainly used by the compiler invoking the parse transform.</source>
          <target state="translated">&lt;code&gt;qlc&lt;/code&gt; モジュールまたは解析変換の一部の関数によって返されたエラータプルの英語の説明文字列を返します。この関数は主に、解析変換を呼び出すコンパイラーによって使用されます。</target>
        </trans-unit>
        <trans-unit id="e93141b18c3c27b104fa1cc5138d9897a358d8fc" translate="yes" xml:space="preserve">
          <source>Returns a diagnostic error string. For possible POSIX values and corresponding strings, see section &lt;code&gt;&lt;a href=&quot;#error_codes&quot;&gt;POSIX Error Codes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">診断エラー文字列を返します。可能なPOSIX値と対応する文字列については、「 &lt;code&gt;&lt;a href=&quot;#error_codes&quot;&gt;POSIX Error Codes&lt;/a&gt;&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="f9e192d9437478b049a8b9aa1bad050415102360" translate="yes" xml:space="preserve">
          <source>Returns a flattened version of &lt;code&gt;DeepList&lt;/code&gt; with tail &lt;code&gt;Tail&lt;/code&gt; appended.</source>
          <target state="translated">テール &lt;code&gt;Tail&lt;/code&gt; 追加された、 &lt;code&gt;DeepList&lt;/code&gt; のフラットバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="47da8955925179f50f9dfa6cb72f5900bef0a615" translate="yes" xml:space="preserve">
          <source>Returns a flattened version of &lt;code&gt;DeepList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DeepList&lt;/code&gt; のフラット化されたバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="bf51931597afcea360993522d0f3008415edcdb8" translate="yes" xml:space="preserve">
          <source>Returns a float by converting &lt;code&gt;Number&lt;/code&gt; to a float, for example:</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; をfloatに変換することにより、floatを返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="edd12ee1c17bec99d0c7359851a155d5deadfbb6" translate="yes" xml:space="preserve">
          <source>Returns a function, the domain of which is &lt;code&gt;Set1&lt;/code&gt;. The value of an element of the domain is the result of applying &lt;code&gt;SetFun&lt;/code&gt; to the element.</source>
          <target state="translated">ドメインが &lt;code&gt;Set1&lt;/code&gt; である関数を返します。ドメインの要素の値は、要素に &lt;code&gt;SetFun&lt;/code&gt; を適用した結果です。</target>
        </trans-unit>
        <trans-unit id="7e2294c09c737c43acca0710dc36b7b7bff6cdd3" translate="yes" xml:space="preserve">
          <source>Returns a integer variable name higher than any other integer variable name in the syntax tree. An exception is thrown if &lt;code&gt;Tree&lt;/code&gt; does not represent a well-formed Core Erlang syntax tree.</source>
          <target state="translated">構文ツリー内の他の整数変数名よりも高い整数変数名を返します。 &lt;code&gt;Tree&lt;/code&gt; が整形式のCoreErlang構文ツリーを表していない場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="2d30676cc7fc6228d2bebb6faf14ea1f72ae9ec1" translate="yes" xml:space="preserve">
          <source>Returns a key-value list with information about the daemon.</source>
          <target state="translated">デーモンに関する情報を含むキー-値のリストを返します。</target>
        </trans-unit>
        <trans-unit id="e600b971199809d7a45269d85fb5dd13e5a69264" translate="yes" xml:space="preserve">
          <source>Returns a key-value list, where the keys are the different types of algorithms and the values are the algorithms themselves.</source>
          <target state="translated">キーと値のリストを返します。キーはアルゴリズムの種類、値はアルゴリズムそのものです。</target>
        </trans-unit>
        <trans-unit id="b2d9617255f0ee4bcd0e04faa828b16902d2f770" translate="yes" xml:space="preserve">
          <source>Returns a list (a dictionary) containing information about the agent. Information includes loaded MIBs, registered sub-agents, some information about the memory allocation.</source>
          <target state="translated">エージェントに関する情報を含むリスト(辞書)を返します。情報には、ロードされたMIB、登録されたサブエージェント、メモリ割り当てに関するいくつかの情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="95b90dff177d50cab52043268bf45b0241a8f703" translate="yes" xml:space="preserve">
          <source>Returns a list (a dictionary) containing information about the manager. Information includes statistics counters, miscellaneous info about each process (e.g. memory allocation), and so on.</source>
          <target state="translated">マネージャに関する情報を含むリスト(辞書)を返します。情報には、統計カウンタや各プロセスの雑多な情報 (メモリ割り当てなど)などが含まれます。</target>
        </trans-unit>
        <trans-unit id="cbfbf6b40ded09b3040d10ffc70b9e38cad6903e" translate="yes" xml:space="preserve">
          <source>Returns a list containing &lt;code&gt;InfoTuple&lt;/code&gt;s with miscellaneous information about the process identified by &lt;code&gt;Pid&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if the process is not alive.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; で識別されるプロセスに関するその他の情報を含む &lt;code&gt;InfoTuple&lt;/code&gt; を含むリストを返します。プロセスがアクティブで &lt;code&gt;undefined&lt;/code&gt; 場合はundefinedを返します。</target>
        </trans-unit>
        <trans-unit id="3563a46b724960f3efe2b2af847c70a7a360a7dc" translate="yes" xml:space="preserve">
          <source>Returns a list containing &lt;code&gt;N&lt;/code&gt; copies of term &lt;code&gt;Elem&lt;/code&gt;.</source>
          <target state="translated">項 &lt;code&gt;Elem&lt;/code&gt; の &lt;code&gt;N&lt;/code&gt; 個のコピーを含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="cc020fc059b80f3fa0c55039966d437233a23d00" translate="yes" xml:space="preserve">
          <source>Returns a list containing information about the global groups. Each list element is a tuple. The order of the tuples is undefined.</source>
          <target state="translated">グローバルグループに関する情報を含むリストを返します。各リスト要素はタプルです。タプルの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="951e1381c9f14d041387253dd8d66f9aa28670ce" translate="yes" xml:space="preserve">
          <source>Returns a list containing information about the source of &lt;code&gt;OS monotonic time&lt;/code&gt; that is used by the runtime system.</source>
          <target state="translated">ランタイムシステムによって使用される &lt;code&gt;OS monotonic time&lt;/code&gt; ソースに関する情報を含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="ddc00d646108eeca88c90d7fb6dbb69928931016" translate="yes" xml:space="preserve">
          <source>Returns a list containing information about the source of &lt;code&gt;OS system time&lt;/code&gt; that is used by the runtime system.</source>
          <target state="translated">ランタイムシステムで使用される &lt;code&gt;OS system time&lt;/code&gt; ソースに関する情報を含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="0b9c262ea9805bcbeef0b916aaf39f57234d691c" translate="yes" xml:space="preserve">
          <source>Returns a list containing miscellaneous information about the emulators internal I/O checking. Notice that the content of the returned list can vary between platforms and over time. It is only guaranteed that a list is returned.</source>
          <target state="translated">エミュレータの内部 I/O 検査に関する雑多な情報を含むリストを返します。返されるリストの内容は、プラットフォームや時間の経過とともに変化する可能性があることに注意してください。リストが返されることは保証されています。</target>
        </trans-unit>
        <trans-unit id="fefe64ec8c64c2e0bd5eb488a17daca003e4f2bb" translate="yes" xml:space="preserve">
          <source>Returns a list containing some information about a BEAM file as tuples &lt;code&gt;{Item, Info}&lt;/code&gt;:</source>
          <target state="translated">BEAMファイルに関するいくつかの情報を含むリストをタプル &lt;code&gt;{Item, Info}&lt;/code&gt; として返します。</target>
        </trans-unit>
        <trans-unit id="11917c8d8150c5d519465c4e301c4f065886e9fd" translate="yes" xml:space="preserve">
          <source>Returns a list containing the &lt;code&gt;{Item, Value}&lt;/code&gt; tuples for all other items, or returns &lt;code&gt;false&lt;/code&gt; if no tracing is active for this function.</source>
          <target state="translated">他のすべてのアイテムの &lt;code&gt;{Item, Value}&lt;/code&gt; タプルを含むリストを返すか、この関数のトレースがアクティブでない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e45792a08459d1264971c1799cfec732179dbf0b" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt; where all except the first element of the elements comparing equal according to the &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Fun&lt;/code&gt; have been deleted. &lt;code&gt;Fun(A, B)&lt;/code&gt; is to return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; compares less than or equal to &lt;code&gt;B&lt;/code&gt; in the ordering, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">並べ替え &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Fun&lt;/code&gt; に従って等しいと比較する要素の最初の要素を除くすべてが削除された、 &lt;code&gt;List1&lt;/code&gt; の並べ替えられた要素を含むリストを返します。 &lt;code&gt;Fun(A, B)&lt;/code&gt; 返すことで &lt;code&gt;true&lt;/code&gt; 場合 &lt;code&gt;A&lt;/code&gt; 以下比較またはに等しい &lt;code&gt;B&lt;/code&gt; の順序でそれ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="d8fe3b09996ca76df4bbe74b69277d528ae8ad3e" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt; where all except the first element of the elements comparing equal have been deleted.</source>
          <target state="translated">等しいと比較する要素の最初の要素を除くすべてが削除された、 &lt;code&gt;List1&lt;/code&gt; のソートされた要素を含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="4ac0dc5f24e09780cafeb9a333d3e1b9d5895862" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt;, according to the &lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Fun&lt;/code&gt;. &lt;code&gt;Fun(A, B)&lt;/code&gt; is to return &lt;code&gt;true&lt;/code&gt; if &lt;code&gt;A&lt;/code&gt; compares less than or equal to &lt;code&gt;B&lt;/code&gt; in the ordering, otherwise &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ordering_function&quot;&gt;ordering function&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Fun&lt;/code&gt; に従って、 &lt;code&gt;List1&lt;/code&gt; のソートされた要素を含むリストを返します。 &lt;code&gt;Fun(A, B)&lt;/code&gt; 返すことで &lt;code&gt;true&lt;/code&gt; 場合 &lt;code&gt;A&lt;/code&gt; 以下比較またはに等しい &lt;code&gt;B&lt;/code&gt; の順序でそれ以外の場合は、 &lt;code&gt;false&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="8a938a1e5e68a22bffcdd498e806765af6aa24d0" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of &lt;code&gt;List1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List1&lt;/code&gt; のソートされた要素を含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="6f4b4280d08d92442ec94e1625e4659624668a58" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of list &lt;code&gt;TupleList1&lt;/code&gt; where all except the first tuple of the tuples comparing equal have been deleted. Sorting is performed on the &lt;code&gt;N&lt;/code&gt;th element of the tuples.</source>
          <target state="translated">等しいと比較するタプルの最初のタプルを除くすべてが削除された、リスト &lt;code&gt;TupleList1&lt;/code&gt; のソートされた要素を含むリストを返します。ソートは、タプルの &lt;code&gt;N&lt;/code&gt; 番目の要素に対して実行されます。</target>
        </trans-unit>
        <trans-unit id="9184378fb1930d165bcaac2d0fb3cf34216f6720" translate="yes" xml:space="preserve">
          <source>Returns a list containing the sorted elements of list &lt;code&gt;TupleList1&lt;/code&gt;. Sorting is performed on the &lt;code&gt;N&lt;/code&gt;th element of the tuples. The sort is stable.</source>
          <target state="translated">リスト &lt;code&gt;TupleList1&lt;/code&gt; のソートされた要素を含むリストを返します。ソートは、タプルの &lt;code&gt;N&lt;/code&gt; 番目の要素に対して実行されます。ソートは安定しています。</target>
        </trans-unit>
        <trans-unit id="f4cb2e3f7a02d479aa9a83f602a2f6ab8a517f62" translate="yes" xml:space="preserve">
          <source>Returns a list containing tuples with information about &lt;code&gt;Port&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if the port is not open. The order of the tuples is undefined, and all the tuples are not mandatory. If the port is closed and the calling process was previously linked to the port, the exit signal from the port is guaranteed to be delivered before &lt;code&gt;port_info/1&lt;/code&gt; returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">情報を持つタプル含むリストを返し &lt;code&gt;Port&lt;/code&gt; 、または &lt;code&gt;undefined&lt;/code&gt; ポートが開いていない場合に。タプルの順序は定義されておらず、すべてのタプルが必須というわけではありません。ポートが閉じており、呼び出しプロセスが以前にポートにリンクされていた場合、 &lt;code&gt;port_info/1&lt;/code&gt; が &lt;code&gt;undefined&lt;/code&gt; を返す前に、ポートからの終了信号が確実に配信されます。</target>
        </trans-unit>
        <trans-unit id="b6dea5e836421666324d435b4db8d6bf6eebcd0f" translate="yes" xml:space="preserve">
          <source>Returns a list corresponding to &lt;code&gt;Tuple&lt;/code&gt;. &lt;code&gt;Tuple&lt;/code&gt; can contain any Erlang terms. Example:</source>
          <target state="translated">&lt;code&gt;Tuple&lt;/code&gt; に対応するリストを返します。 &lt;code&gt;Tuple&lt;/code&gt; は任意のErlang用語を含めることができます。例：</target>
        </trans-unit>
        <trans-unit id="5e85c7d8f3efd3892bf025810675bca230ae96c2" translate="yes" xml:space="preserve">
          <source>Returns a list corresponding to the specified format string, where control sequences have been replaced with corresponding tuples. This list can be passed to:</source>
          <target state="translated">指定したフォーマット文字列に対応するリストを返します。このリストは</target>
        </trans-unit>
        <trans-unit id="6fac3d237a3083a77964a5e83a4480749ea8e970" translate="yes" xml:space="preserve">
          <source>Returns a list describing the default garbage collection settings. A process spawned on the local node by a &lt;code&gt;spawn&lt;/code&gt; or &lt;code&gt;spawn_link&lt;/code&gt; uses these garbage collection settings. The default settings can be changed by using &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt; erlang:system_flag/2&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; can spawn a process that does not use the default settings.</source>
          <target state="translated">デフォルトのガベージコレクション設定を説明するリストを返します。 &lt;code&gt;spawn&lt;/code&gt; または &lt;code&gt;spawn_link&lt;/code&gt; によってローカルノードでスポーンされたプロセスは、これらのガベージコレクション設定を使用します。デフォルト設定は &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt; erlang:system_flag/2&lt;/a&gt;&lt;/code&gt; を使用して変更できます。 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; は、デフォルト設定を使用しないプロセスを生成できます。</target>
        </trans-unit>
        <trans-unit id="d433f5cf2ede44b50d5e4bfea7a196ae3ff826ba" translate="yes" xml:space="preserve">
          <source>Returns a list describing the default garbage collection settings. A process spawned on the local node by a &lt;code&gt;spawn&lt;/code&gt; or &lt;code&gt;spawn_link&lt;/code&gt; uses these garbage collection settings. The default settings can be changed by using &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt;erlang:system_flag/2&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; can spawn a process that does not use the default settings.</source>
          <target state="translated">デフォルトのガベージコレクション設定を説明するリストを返します。 &lt;code&gt;spawn&lt;/code&gt; または &lt;code&gt;spawn_link&lt;/code&gt; によってローカルノードで生成されたプロセスは、これらのガベージコレクション設定を使用します。デフォルト設定は &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt;erlang:system_flag/2&lt;/a&gt;&lt;/code&gt; を使用して変更できます。 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; は、デフォルト設定を使用しないプロセスを生成できます。</target>
        </trans-unit>
        <trans-unit id="0dc9856d46bf6a12f54a618c6625b0ec80a8b5df" translate="yes" xml:space="preserve">
          <source>Returns a list in which all the sublists of &lt;code&gt;ListOfLists&lt;/code&gt; have been appended.</source>
          <target state="translated">&lt;code&gt;ListOfLists&lt;/code&gt; のすべてのサブリストが追加されたリストを返します。</target>
        </trans-unit>
        <trans-unit id="88c6630a9f871d489e61eaad0e38eee679856290" translate="yes" xml:space="preserve">
          <source>Returns a list of 2-tuples containing interface names and the interface addresses. &lt;code&gt;Ifname&lt;/code&gt; is a Unicode string. &lt;code&gt;Hwaddr&lt;/code&gt; is hardware dependent, for example, on Ethernet interfaces it is the 6-byte Ethernet address (MAC address (EUI-48 address)).</source>
          <target state="translated">インターフェイス名とインターフェイスアドレスを含む2タプルのリストを返します。 &lt;code&gt;Ifname&lt;/code&gt; はUnicode文字列です。 &lt;code&gt;Hwaddr&lt;/code&gt; はハードウェアに依存します。たとえば、イーサネットインターフェイスでは、6バイトのイーサネットアドレス（MACアドレス（EUI-48アドレス））です。</target>
        </trans-unit>
        <trans-unit id="ebf373b527439e02840e534e7c1a7a311062cb55" translate="yes" xml:space="preserve">
          <source>Returns a list of 2-tuples containing interface names and the interfaces' addresses. &lt;code&gt;Ifname&lt;/code&gt; is a Unicode string and &lt;code&gt;Ifopts&lt;/code&gt; is a list of interface address description tuples.</source>
          <target state="translated">インターフェイス名とインターフェイスのアドレスを含む2タプルのリストを返します。 &lt;code&gt;Ifname&lt;/code&gt; はUnicode文字列であり、 &lt;code&gt;Ifopts&lt;/code&gt; はインターフェイスアドレス記述タプルのリストです。</target>
        </trans-unit>
        <trans-unit id="3f71c4452a368c45d083def80d770a73c29034a6" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#components&quot;&gt;connected components.&lt;/a&gt;&lt;/code&gt;. Each component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Each vertex of digraph &lt;code&gt;Digraph&lt;/code&gt; occurs in exactly one component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#components&quot;&gt;connected components.&lt;/a&gt;&lt;/code&gt; リストを返します。。各コンポーネントはその頂点によって表されます。頂点の順序とコンポーネントの順序は任意です。 &lt;code&gt;Digraph&lt;/code&gt; グラフダイグラフの各頂点は、1つのコンポーネントでのみ発生します。</target>
        </trans-unit>
        <trans-unit id="5da3e3b8a94bc791abc816f9346bcad6a1eea10d" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt;. Each strongly component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Each vertex of digraph &lt;code&gt;Digraph&lt;/code&gt; occurs in exactly one strong component.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; リストを返します。各強いコンポーネントは、その頂点によって表されます。頂点の順序とコンポーネントの順序は任意です。 &lt;code&gt;Digraph&lt;/code&gt; グラフダイグラフの各頂点は、厳密に1つの強いコンポーネントで発生します。</target>
        </trans-unit>
        <trans-unit id="7830daab6d27f2c0100a7114c6a0f76f768e6fe0" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt;. Each strongly component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Only vertices that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; are returned, otherwise the returned list is equal to that returned by &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt; strong_components/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; リストを返します。各強力なコンポーネントは、その頂点によって表されます。頂点の順序とコンポーネントの順序は任意です。 &lt;code&gt;Digraph&lt;/code&gt; のある &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; に含まれている頂点のみが返されます。それ以外の場合、返されるリストは、 &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt; strong_components/1&lt;/a&gt;&lt;/code&gt; によって返されるリストと同じです。</target>
        </trans-unit>
        <trans-unit id="7bb091d4a5b810b53a23fa41c17a3361cbf0d2a3" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt;. Each strongly component is represented by its vertices. The order of the vertices and the order of the components are arbitrary. Only vertices that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; are returned, otherwise the returned list is equal to that returned by &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt;strong_components/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#strong_components&quot;&gt;strongly connected components&lt;/a&gt;&lt;/code&gt; リストを返します。各強いコンポーネントは、その頂点によって表されます。頂点の順序とコンポーネントの順序は任意です。 &lt;code&gt;Digraph&lt;/code&gt; の一部の &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; に含まれる頂点のみが返されます。それ以外の場合、返されるリストは &lt;code&gt;&lt;a href=&quot;#strong_components-1&quot;&gt;strong_components/1&lt;/a&gt;&lt;/code&gt; によって返されるリストと同じです。</target>
        </trans-unit>
        <trans-unit id="4127df4a91b808c5b3def539a088b05fee89d307" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt; リストを返します。</target>
        </trans-unit>
        <trans-unit id="43db1c1c48f50e3b1d845fdbf19f66279ce2566f" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;Pid&lt;/code&gt;s when multi-scheduling is blocked, otherwise the empty list is returned. The &lt;code&gt;Pid&lt;/code&gt;s in the list represent all the processes currently blocking multi-scheduling. A &lt;code&gt;Pid&lt;/code&gt; occurs only once in the list, even if the corresponding process has blocked multiple times.</source>
          <target state="translated">マルチスケジューリングがブロックされている場合は &lt;code&gt;Pid&lt;/code&gt; のリストを返し、そうでない場合は空のリストを返します。リストの &lt;code&gt;Pid&lt;/code&gt; は、マルチスケジューリングを現在ブロックしているすべてのプロセスを表します。A &lt;code&gt;Pid&lt;/code&gt; 、対応するプロセスが複数回をブロックした場合でも、一度だけリストで発生します。</target>
        </trans-unit>
        <trans-unit id="154f96716f8d883305d6304a997283ae6ee27289" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;Pid&lt;/code&gt;s when normal multi-scheduling is blocked (that is, all normal schedulers but one is blocked), otherwise the empty list is returned. The &lt;code&gt;Pid&lt;/code&gt;s in the list represent all the processes currently blocking normal multi-scheduling. A &lt;code&gt;Pid&lt;/code&gt; occurs only once in the list, even if the corresponding process has blocked multiple times.</source>
          <target state="translated">通常のマルチスケジューリングがブロックされている場合（つまり、1つを除くすべての通常のスケジューラがブロックされている場合）は &lt;code&gt;Pid&lt;/code&gt; のリストを返し、そうでない場合は空のリストを返します。リスト内の &lt;code&gt;Pid&lt;/code&gt; は、通常のマルチスケジューリングを現在ブロックしているすべてのプロセスを表します。A &lt;code&gt;Pid&lt;/code&gt; 、対応するプロセスが複数回をブロックした場合でも、一度だけリストで発生します。</target>
        </trans-unit>
        <trans-unit id="57e2dcc16a9b139c21ab18285d7e2ad903ce02a4" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{AttributeName,ValueList}&lt;/code&gt; tuples, where &lt;code&gt;AttributeName&lt;/code&gt; is the name of an attribute, and &lt;code&gt;ValueList&lt;/code&gt; is a list of values. Notice that a given attribute can occur more than once in the list with different values if the attribute occurs more than once in the module.</source>
          <target state="translated">&lt;code&gt;{AttributeName,ValueList}&lt;/code&gt; タプルのリストを返します。AttributeNameは &lt;code&gt;AttributeName&lt;/code&gt; の名前、 &lt;code&gt;ValueList&lt;/code&gt; は値のリストです。属性がモジュール内で複数回出現する場合、指定された属性は異なる値を持つリストで複数回出現する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3c14a6a2c4cce24bfa7ca2ac6c1f8be3f5f25833" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Name,Arity}&lt;/code&gt; tuples with all NIF functions in the module.</source>
          <target state="translated">モジュール内のすべてのNIF関数を含む &lt;code&gt;{Name,Arity}&lt;/code&gt; タプルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="6b2922594297df0088f8700eeedfe6096fa503c2" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Name,Arity}&lt;/code&gt; tuples with all exported functions in the module.</source>
          <target state="translated">モジュール内のすべてのエクスポートされた関数を含む &lt;code&gt;{Name,Arity}&lt;/code&gt; タプルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="e8b319b6b888df687485f890d43db6f44b6c4655" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Name,Arity}&lt;/code&gt; tuples with all functions in the module.</source>
          <target state="translated">モジュール内のすべての関数を含む &lt;code&gt;{Name,Arity}&lt;/code&gt; タプルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="3a7e353b4a88ab38667580701bd694c35c95dbe2" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Tag, Value}&lt;/code&gt; pairs describing digraph &lt;code&gt;G&lt;/code&gt;. The following pairs are returned:</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; を説明する &lt;code&gt;{Tag, Value}&lt;/code&gt; ペアのリストを返します。次のペアが返されます。</target>
        </trans-unit>
        <trans-unit id="9c8458d8410a1d0968559a8e0e00b23d4b3ae912" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;{Tag, Value}&lt;/code&gt; pairs describing the log. If a disk log process is running on the current node, that log is used as source of information, otherwise an individual distributed log on some other node is chosen, if such a log exists.</source>
          <target state="translated">ログを説明する &lt;code&gt;{Tag, Value}&lt;/code&gt; ペアのリストを返します。現在のノードでディスクログプロセスが実行されている場合、そのログは情報のソースとして使用されます。それ以外の場合、そのようなログが存在する場合は、他のノードの個別の分散ログが選択されます。</target>
        </trans-unit>
        <trans-unit id="7bd349713934525fe537ce0807b710e8b7395e7a" translate="yes" xml:space="preserve">
          <source>Returns a list of Erlang modules that are preloaded in the system. As all loading of code is done through the file system, the file system must have been loaded previously. Hence, at least the module &lt;code&gt;init&lt;/code&gt; must be preloaded.</source>
          <target state="translated">システムにプリロードされているErlangモジュールのリストを返します。コードのすべてのロードはファイルシステムを介して行われるため、ファイルシステムは事前にロードされている必要があります。したがって、少なくともモジュール &lt;code&gt;init&lt;/code&gt; をプリロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="5fcc0d5751c8ec2b6c807390bfa62c34d0b34a75" translate="yes" xml:space="preserve">
          <source>Returns a list of all &lt;code&gt;&lt;a href=&quot;#in_neighbour&quot;&gt;in-neighbors&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; の &lt;code&gt;V&lt;/code&gt; のすべて &lt;code&gt;&lt;a href=&quot;#in_neighbour&quot;&gt;in-neighbors&lt;/a&gt;&lt;/code&gt; リストを、指定されていない順序で返します。</target>
        </trans-unit>
        <trans-unit id="043c23901cc97ae91b903f980aa30af0b56c3809" translate="yes" xml:space="preserve">
          <source>Returns a list of all &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; の &lt;code&gt;V&lt;/code&gt; のすべて &lt;code&gt;&lt;a href=&quot;#out_neighbour&quot;&gt;out-neighbors&lt;/a&gt;&lt;/code&gt; リストを、指定されていない順序で返します。</target>
        </trans-unit>
        <trans-unit id="3df935727cfbfaa9dbe4fe6d8b3b3167c3639cce" translate="yes" xml:space="preserve">
          <source>Returns a list of all IP addresses for &lt;code&gt;Host&lt;/code&gt;. &lt;code&gt;Host&lt;/code&gt; can be an IP address, a single hostname, or a fully qualified hostname.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; のすべてのIPアドレスのリストを返します。 &lt;code&gt;Host&lt;/code&gt; は、IPアドレス、単一のホスト名、または完全修飾ホスト名です。</target>
        </trans-unit>
        <trans-unit id="1d4364925c788f26b54afc37d6c0865635b11a49" translate="yes" xml:space="preserve">
          <source>Returns a list of all active alarms. This function can only be used when the simple handler is installed.</source>
          <target state="translated">すべてのアクティブなアラームのリストを返します。この関数は、シンプルハンドラがインストールされている場合にのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="4d83a528f29c34ba116c40292488d3eb70934fc5" translate="yes" xml:space="preserve">
          <source>Returns a list of all address/port number pairs for the other end of an association &lt;code&gt;Assoc&lt;/code&gt; of a socket.</source>
          <target state="translated">ソケットの関連付け &lt;code&gt;Assoc&lt;/code&gt; のもう一方の端のすべてのアドレス/ポート番号のペアのリストを返します。</target>
        </trans-unit>
        <trans-unit id="37943fcff62e0b1a782163b5ddfe2a958601aa47" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; の &lt;code&gt;V&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; するすべてのエッジのリストを、指定されていない順序で返します。</target>
        </trans-unit>
        <trans-unit id="79b7f5719a792534470074c560a0cb7fc9e9570b" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; from or &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on&lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; の &lt;code&gt;V&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#emanate&quot;&gt;emanating&lt;/a&gt;&lt;/code&gt; 、またはVに &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; するすべてのエッジのリストを、指定されていない順序で返します。</target>
        </trans-unit>
        <trans-unit id="c80e5a2a56fe621893eae2a06e29a521a972cdfb" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; on &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; の &lt;code&gt;V&lt;/code&gt; に &lt;code&gt;&lt;a href=&quot;#incident&quot;&gt;incident&lt;/a&gt;&lt;/code&gt; するすべてのエッジのリストを、指定されていない順序で返します。</target>
        </trans-unit>
        <trans-unit id="afb64be0e307b3b5bc1ec0959a00f18029bbf9d8" translate="yes" xml:space="preserve">
          <source>Returns a list of all edges of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; のすべての辺のリストを、指定されていない順序で返します。</target>
        </trans-unit>
        <trans-unit id="4f6c580e74f8d38922556a969626a716e24d2e9c" translate="yes" xml:space="preserve">
          <source>Returns a list of all environment variables. Each environment variable is expressed as a single string on the format &lt;code&gt;&quot;VarName=Value&quot;&lt;/code&gt;, where &lt;code&gt;VarName&lt;/code&gt; is the name of the variable and &lt;code&gt;Value&lt;/code&gt; its value.</source>
          <target state="translated">すべての環境変数のリストを返します。各環境変数は、フォーマット上の1つの文字列として表現される &lt;code&gt;&quot;VarName=Value&quot;&lt;/code&gt; 、 &lt;code&gt;VarName&lt;/code&gt; 変数の名前と &lt;code&gt;Value&lt;/code&gt; の値。</target>
        </trans-unit>
        <trans-unit id="93bb4adf157b71ca6bc6a0759803fd92769762c4" translate="yes" xml:space="preserve">
          <source>Returns a list of all event handlers installed in event manager &lt;code&gt;EventMgrRef&lt;/code&gt;.</source>
          <target state="translated">イベントマネージャ &lt;code&gt;EventMgrRef&lt;/code&gt; にインストールされているすべてのイベントハンドラのリストを返します。</target>
        </trans-unit>
        <trans-unit id="bfc121aace29701e3baf969570fb127fefcfdc82" translate="yes" xml:space="preserve">
          <source>Returns a list of all files that match Unix-style wildcard string &lt;code&gt;Wildcard&lt;/code&gt;.</source>
          <target state="translated">Unixスタイルのワイルドカード文字列 &lt;code&gt;Wildcard&lt;/code&gt; に一致するすべてのファイルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="1c048986eb5b99b6c3d0fc28ecf9a6ff624ad3a2" translate="yes" xml:space="preserve">
          <source>Returns a list of all globally registered names.</source>
          <target state="translated">グローバルに登録されているすべての名前のリストを返します。</target>
        </trans-unit>
        <trans-unit id="f176de7fca84aced2753bbfc571727dfc4f35880" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in a dictionary.</source>
          <target state="translated">辞書内のすべてのキーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="dbfd81800b50649a258f5c18a61bd115d191a1df" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in dictionary &lt;code&gt;Dict&lt;/code&gt;.</source>
          <target state="translated">辞書 &lt;code&gt;Dict&lt;/code&gt; 内のすべてのキーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="f08a08cb5c1a882b71dd053c742aed473cc6546e" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys in the table named &lt;code&gt;Tab&lt;/code&gt;. The semantics of this function is context-sensitive. For more information, see &lt;code&gt;mnesia:activity/4&lt;/code&gt;. In transaction-context, it acquires a read lock on the entire table.</source>
          <target state="translated">&lt;code&gt;Tab&lt;/code&gt; という名前のテーブル内のすべてのキーのリストを返します。この関数のセマンティクスは状況依存です。詳細については、 &lt;code&gt;mnesia:activity/4&lt;/code&gt; を参照してください。トランザクションコンテキストでは、テーブル全体の読み取りロックを取得します。</target>
        </trans-unit>
        <trans-unit id="9c7359dd742e1537d1d169581241e507e45c3cce" translate="yes" xml:space="preserve">
          <source>Returns a list of all keys present in the process dictionary, for example:</source>
          <target state="translated">プロセス辞書に存在するすべてのキーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="0ddf4b4375a459efbcdfa794fcf649485ac5a147" translate="yes" xml:space="preserve">
          <source>Returns a list of all known groups.</source>
          <target state="translated">すべての既知のグループのリストを返します。</target>
        </trans-unit>
        <trans-unit id="1e0835d3c0b4cf9bd9fe6cf1fd1e7ad062324491" translate="yes" xml:space="preserve">
          <source>Returns a list of all loaded Erlang modules (current and old code), including preloaded modules.</source>
          <target state="translated">ロードされたすべてのErlangモジュール(現在のコードと古いコード)のリストを返します(プリロードされたモジュールを含む)。</target>
        </trans-unit>
        <trans-unit id="bc60b62ebdbd773ca0309f6910be322957761556" translate="yes" xml:space="preserve">
          <source>Returns a list of all local address/port number pairs for a socket for the specified association &lt;code&gt;Assoc&lt;/code&gt;.</source>
          <target state="translated">指定された関連付け &lt;code&gt;Assoc&lt;/code&gt; のソケットのすべてのローカルアドレス/ポート番号のペアのリストを返します。</target>
        </trans-unit>
        <trans-unit id="f7dc4c061c3850d7a7870035dc4e94ffd8613672" translate="yes" xml:space="preserve">
          <source>Returns a list of all names that are globally registered on the specified node or in the specified global group.</source>
          <target state="translated">指定したノードまたは指定したグローバルグループにグローバルに登録されている全ての名前のリストを返します。</target>
        </trans-unit>
        <trans-unit id="7c4b4b8c36675bc126068e2a2c1e6ccc9e4261a4" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects in table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; 内のすべてのオブジェクトのリストを返します。</target>
        </trans-unit>
        <trans-unit id="77725aebb2ef339e70937be0c2051678c8c054b9" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects of table &lt;code&gt;Name&lt;/code&gt; that match &lt;code&gt;Pattern&lt;/code&gt; in some unspecified order. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">不特定の順序で &lt;code&gt;Pattern&lt;/code&gt; に一致するテーブル &lt;code&gt;Name&lt;/code&gt; のすべてのオブジェクトのリストを返します。パターンの説明については、 &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="61b95f655be17ae15f0b44ab3ad6122729a20e75" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects with key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; のキー &lt;code&gt;Key&lt;/code&gt; を持つすべてのオブジェクトのリストを返します。</target>
        </trans-unit>
        <trans-unit id="9e9f0ec7ff458179b38463bf9a04f77d97419d78" translate="yes" xml:space="preserve">
          <source>Returns a list of all objects with key &lt;code&gt;Key&lt;/code&gt; stored in table &lt;code&gt;Name&lt;/code&gt;, for example:</source>
          <target state="translated">テーブル &lt;code&gt;Name&lt;/code&gt; に格納されているキー &lt;code&gt;Key&lt;/code&gt; を持つすべてのオブジェクトのリストを返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="cdac43702f2aba415f5052450dbc118b75446ea1" translate="yes" xml:space="preserve">
          <source>Returns a list of all ports on the current node.</source>
          <target state="translated">現在のノード上のすべてのポートのリストを返します。</target>
        </trans-unit>
        <trans-unit id="9ce0c3313c9bf3a0c7bebd454ff56690ad0719ea" translate="yes" xml:space="preserve">
          <source>Returns a list of all possible engine methods.</source>
          <target state="translated">可能なすべてのエンジンメソッドのリストを返します。</target>
        </trans-unit>
        <trans-unit id="d461c7d4a5aeb9cb83b612fcaae8d8717f453ddd" translate="yes" xml:space="preserve">
          <source>Returns a list of all processes having monitors for &lt;code&gt;loading&lt;/code&gt; active. Each process is returned as &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt;, where &lt;code&gt;integer()&lt;/code&gt; is the number of monitors held by process &lt;code&gt;pid()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;loading&lt;/code&gt; アクティブにするためのモニターを持つすべてのプロセスのリストを返します。各プロセスは &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt; として返されます。ここで、 &lt;code&gt;integer()&lt;/code&gt; はプロセス &lt;code&gt;pid()&lt;/code&gt; が保持するモニターの数です。</target>
        </trans-unit>
        <trans-unit id="c5345d61c82791c015c56220a450122dd678a7ef" translate="yes" xml:space="preserve">
          <source>Returns a list of all processes having monitors for &lt;code&gt;unloading&lt;/code&gt; active. Each process is returned as &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt;, where &lt;code&gt;integer()&lt;/code&gt; is the number of monitors held by process &lt;code&gt;pid()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unloading&lt;/code&gt; アクティブにするためのモニターを持つすべてのプロセスのリストを返します。各プロセスは &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt; として返されます。ここで、 &lt;code&gt;integer()&lt;/code&gt; はプロセス &lt;code&gt;pid()&lt;/code&gt; が保持するモニターの数です。</target>
        </trans-unit>
        <trans-unit id="abe65c790dcbeea723ecc962b888487ba04d86b4" translate="yes" xml:space="preserve">
          <source>Returns a list of all sockets, according to the filter rule.</source>
          <target state="translated">フィルタルールに従って、すべてのソケットのリストを返します。</target>
        </trans-unit>
        <trans-unit id="9f2294ec3b3e05bf49af504df2b909e6ec87a16f" translate="yes" xml:space="preserve">
          <source>Returns a list of all successful &lt;code&gt;set&lt;/code&gt; requests performed in the test case in reverse order. The list contains the involved user and agent, the value before &lt;code&gt;set&lt;/code&gt;, and the new value. This is intended to simplify the cleanup in function &lt;code&gt;end_per_testcase&lt;/code&gt;, that is, the undoing of the &lt;code&gt;set&lt;/code&gt; requests and their possible side-effects.</source>
          <target state="translated">テストケースで実行されたすべての成功した &lt;code&gt;set&lt;/code&gt; リクエストのリストを逆の順序で返します。リストには、関連するユーザーとエージェント、 &lt;code&gt;set&lt;/code&gt; 前の値、および新しい値が含まれています。これは、関数 &lt;code&gt;end_per_testcase&lt;/code&gt; のクリーンアップ、つまり、 &lt;code&gt;set&lt;/code&gt; 要求とそれらの可能な副作用の取り消しを単純化することを目的としています。</target>
        </trans-unit>
        <trans-unit id="4893fd8a8ef2169d1d6f4f55a02db2ef6c7f3316" translate="yes" xml:space="preserve">
          <source>Returns a list of all tables at the node. Named tables are specified by their names, unnamed tables are specified by their table identifiers.</source>
          <target state="translated">ノードにあるすべてのテーブルのリストを返します。名前付きテーブルは名前で指定し、名前なしテーブルはテーブル識別子で指定します。</target>
        </trans-unit>
        <trans-unit id="c2d2dc02f513e298b4c0d0d92dca6fc6174c6f9e" translate="yes" xml:space="preserve">
          <source>Returns a list of all test cases and groups in the suite. (Mandatory)</source>
          <target state="translated">スイート内のすべてのテストケースとグループの一覧を返します。(必須)</target>
        </trans-unit>
        <trans-unit id="33270f7a4986636484eca555ab46e461893a130c" translate="yes" xml:space="preserve">
          <source>Returns a list of all the available drivers, both (statically) linked-in and dynamically loaded ones.</source>
          <target state="translated">(静的に)リンクインされたものと動的にロードされたものの両方の、利用可能なすべてのドライバのリストを返します。</target>
        </trans-unit>
        <trans-unit id="04759c11fd73a2efcf88a70d3422834e9b011fc0" translate="yes" xml:space="preserve">
          <source>Returns a list of all vertices of &lt;code&gt;Digraph&lt;/code&gt; that are included in some &lt;code&gt;&lt;a href=&quot;#loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">いくつかの &lt;code&gt;&lt;a href=&quot;#loop&quot;&gt;loop&lt;/a&gt;&lt;/code&gt; 含まれる &lt;code&gt;Digraph&lt;/code&gt; のすべての頂点のリストを返します。</target>
        </trans-unit>
        <trans-unit id="a19d9681e5c717524ff61fdfef23656f87179012" translate="yes" xml:space="preserve">
          <source>Returns a list of all vertices of digraph &lt;code&gt;G&lt;/code&gt;, in some unspecified order.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; のすべての頂点のリストを、指定されていない順序で返します。</target>
        </trans-unit>
        <trans-unit id="968406049a111afaf72af0af1f8bb8eb78c42ecf" translate="yes" xml:space="preserve">
          <source>Returns a list of all visible nodes in the system, except the local node. Same as &lt;code&gt;nodes(visible)&lt;/code&gt;.</source>
          <target state="translated">ローカルノードを除く、システム内のすべての可視ノードのリストを返します。 &lt;code&gt;nodes(visible)&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="dc6bc0e391071c484061d628d178cbff3e152018" translate="yes" xml:space="preserve">
          <source>Returns a list of all visible nodes this node is connected to.</source>
          <target state="translated">このノードが接続されているすべての可視ノードのリストを返します。</target>
        </trans-unit>
        <trans-unit id="6db93870b8f3066ae79078f67e4e6860484e238d" translate="yes" xml:space="preserve">
          <source>Returns a list of applications called by some of the given applications.</source>
          <target state="translated">与えられたアプリケーションのいくつかによって呼び出されたアプリケーションのリストを返します。</target>
        </trans-unit>
        <trans-unit id="10994056e2c405c8e5f465fd8e9053e5ebab6b28" translate="yes" xml:space="preserve">
          <source>Returns a list of applications that use some of the given applications.</source>
          <target state="translated">指定したアプリケーションの一部を使用しているアプリケーションのリストを返します。</target>
        </trans-unit>
        <trans-unit id="b24886dbf7496049f4ecd273365791488f0278d5" translate="yes" xml:space="preserve">
          <source>Returns a list of atoms indicating what kind of traces is enabled for the process. The list is empty if no traces are enabled, and one or more of the followings atoms if traces are enabled: &lt;code&gt;send&lt;/code&gt;, &lt;code&gt;'receive'&lt;/code&gt;, &lt;code&gt;set_on_spawn&lt;/code&gt;, &lt;code&gt;call&lt;/code&gt;, &lt;code&gt;return_to&lt;/code&gt;, &lt;code&gt;procs&lt;/code&gt;, &lt;code&gt;ports&lt;/code&gt;, &lt;code&gt;set_on_first_spawn&lt;/code&gt;, &lt;code&gt;set_on_link&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;running_procs&lt;/code&gt;, &lt;code&gt;running_ports&lt;/code&gt;, &lt;code&gt;silent&lt;/code&gt;, &lt;code&gt;exiting&lt;/code&gt;, &lt;code&gt;monotonic_timestamp&lt;/code&gt;, &lt;code&gt;strict_monotonic_timestamp&lt;/code&gt;, &lt;code&gt;garbage_collection&lt;/code&gt;, &lt;code&gt;timestamp&lt;/code&gt;, and &lt;code&gt;arity&lt;/code&gt;. The order is arbitrary.</source>
          <target state="translated">プロセスで有効になっているトレースの種類を示すアトムのリストを返します。トレースが有効でない場合、リストは空で、トレースが有効な場合、 &lt;code&gt;send&lt;/code&gt; 、 &lt;code&gt;'receive'&lt;/code&gt; 、 &lt;code&gt;set_on_spawn&lt;/code&gt; 、 &lt;code&gt;call&lt;/code&gt; 、 &lt;code&gt;return_to&lt;/code&gt; 、 &lt;code&gt;procs&lt;/code&gt; 、 &lt;code&gt;ports&lt;/code&gt; 、 &lt;code&gt;set_on_first_spawn&lt;/code&gt; 、 &lt;code&gt;set_on_link&lt;/code&gt; 、 &lt;code&gt;running&lt;/code&gt; 、 &lt;code&gt;running_procs&lt;/code&gt; 、 &lt;code&gt;running_ports&lt;/code&gt; 、 &lt;code&gt;silent&lt;/code&gt; 、 &lt;code&gt;exiting&lt;/code&gt; 、 &lt;code&gt;monotonic_timestamp&lt;/code&gt; 、 &lt;code&gt;strict_monotonic_timestamp&lt;/code&gt; 、 &lt;code&gt;garbage_collection&lt;/code&gt; 、 &lt;code&gt;timestamp&lt;/code&gt; 、および &lt;code&gt;arity&lt;/code&gt; 。順序は任意です。</target>
        </trans-unit>
        <trans-unit id="12e497843e2a7289d6149d4e08100bac66c03d7a" translate="yes" xml:space="preserve">
          <source>Returns a list of available service names.</source>
          <target state="translated">利用可能なサービス名のリストを返します。</target>
        </trans-unit>
        <trans-unit id="50bb031da4375f328785a9048fd32bb0339becaa" translate="yes" xml:space="preserve">
          <source>Returns a list of calls to &lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#undefined_function&quot;&gt;undefined functions&lt;/a&gt;&lt;/code&gt; の呼び出しのリストを返します。</target>
        </trans-unit>
        <trans-unit id="4c0809ad5fe91f2a1540f8726031c3435a2d31f1" translate="yes" xml:space="preserve">
          <source>Returns a list of characters that represents &lt;code&gt;Term&lt;/code&gt;, but breaks representations longer than one line into many lines and indents each line sensibly. Also tries to detect and output lists of printable characters as strings.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; を表す文字のリストを返しますが、1行より長い表現を多くの行に分割し、各行を適切にインデントします。また、印刷可能な文字のリストを文字列として検出して出力しようとします。</target>
        </trans-unit>
        <trans-unit id="3f286e9902703d63cef30e1a2fa893cd5ecb0acf" translate="yes" xml:space="preserve">
          <source>Returns a list of currently running services where each service is described by an &lt;code&gt;[{Option, Value}]&lt;/code&gt; list. The information in the list is specific for each service and each service has probably its own info function that gives more details about the service.</source>
          <target state="translated">現在実行中のサービスのリストを返します。各サービスは &lt;code&gt;[{Option, Value}]&lt;/code&gt; リストで記述されています。リスト内の情報は各サービスに固有であり、各サービスにはおそらく、サービスに関する詳細を提供する独自の情報関数があります。</target>
        </trans-unit>
        <trans-unit id="084662247fef910681b6171e1663f68995c7859d" translate="yes" xml:space="preserve">
          <source>Returns a list of currently running services.</source>
          <target state="translated">現在実行中のサービスの一覧を返します。</target>
        </trans-unit>
        <trans-unit id="ba31ab287b1e147cd88d32b205f4a36f704479d7" translate="yes" xml:space="preserve">
          <source>Returns a list of exported functions that have not been externally used.</source>
          <target state="translated">外部で使用していないエクスポートされた関数のリストを返します。</target>
        </trans-unit>
        <trans-unit id="4b154549626a7bcacfd686a92d0fda2a611b70ac" translate="yes" xml:space="preserve">
          <source>Returns a list of external calls to &lt;code&gt;&lt;a href=&quot;#deprecated_function&quot;&gt;deprecated functions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#deprecated_function&quot;&gt;deprecated functions&lt;/a&gt;&lt;/code&gt; への外部呼び出しのリストを返します。</target>
        </trans-unit>
        <trans-unit id="32517d5c2af586191b5173533650bebc1bffbbb4" translate="yes" xml:space="preserve">
          <source>Returns a list of external calls to deprecated functions. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_version&lt;/code&gt;, calls to functions to be removed in next version are returned. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_major_release&lt;/code&gt;, calls to functions to be removed in next major release are returned as well as calls to functions to be removed in next version. Finally, if &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;eventually&lt;/code&gt;, all calls to functions to be removed are returned, including calls to functions to be removed in next version or next major release.</source>
          <target state="translated">非推奨の関数への外部呼び出しのリストを返します。場合 &lt;code&gt;DeprFlag&lt;/code&gt; がに等しい &lt;code&gt;next_version&lt;/code&gt; 、次のバージョンでは削除される関数の呼び出しが返されます。場合 &lt;code&gt;DeprFlag&lt;/code&gt; がに等しい &lt;code&gt;next_major_release&lt;/code&gt; 関数の呼び出しは、次のバージョンで削除されるよう、次のメジャーリリースで削除される関数の呼び出しも同様に返されます。場合は最後に、 &lt;code&gt;DeprFlag&lt;/code&gt; がに等しい &lt;code&gt;eventually&lt;/code&gt; 、削除する機能へのすべての呼び出しは、次のバージョンまたは次のメジャーリリースで削除される関数の呼び出しを含め、返されます。</target>
        </trans-unit>
        <trans-unit id="cb673ae3720fac80ec1a135aecc694cd458f7261" translate="yes" xml:space="preserve">
          <source>Returns a list of externally used deprecated functions.</source>
          <target state="translated">外部で使用されている非推奨の関数の一覧を返します。</target>
        </trans-unit>
        <trans-unit id="a9829544e62bb9dedc591edb94c882610ca2e43c" translate="yes" xml:space="preserve">
          <source>Returns a list of externally used deprecated functions. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_version&lt;/code&gt;, functions to be removed in next version are returned. If &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;next_major_release&lt;/code&gt;, functions to be removed in next major release are returned as well as functions to be removed in next version. Finally, if &lt;code&gt;DeprFlag&lt;/code&gt; is equal to &lt;code&gt;eventually&lt;/code&gt;, all functions to be removed are returned, including functions to be removed in next version or next major release.</source>
          <target state="translated">外部で使用されている非推奨の関数のリストを返します。場合 &lt;code&gt;DeprFlag&lt;/code&gt; がに等しい &lt;code&gt;next_version&lt;/code&gt; 、次のバージョンでは削除される機能が返されます。場合 &lt;code&gt;DeprFlag&lt;/code&gt; がに等しい &lt;code&gt;next_major_release&lt;/code&gt; 機能は、次のバージョンで削除されるよう、次のメジャーリリースで削除される機能も同様に返されます。場合は最後に、 &lt;code&gt;DeprFlag&lt;/code&gt; がに等しい &lt;code&gt;eventually&lt;/code&gt; 、削除されるすべての機能は、次のバージョンまたは次のメジャーリリースで削除される機能を含む、返されます。</target>
        </trans-unit>
        <trans-unit id="9c16ec69948faef553061062962df2e83f4ce4cd" translate="yes" xml:space="preserve">
          <source>Returns a list of files in long format.</source>
          <target state="translated">長い形式のファイルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="6ad21696ddddea063cd554ceacb160c5db7ba23b" translate="yes" xml:space="preserve">
          <source>Returns a list of files in short format.</source>
          <target state="translated">短い形式でファイルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="d3dd0806ea9ad3800be3094d001dfa65b812370a" translate="yes" xml:space="preserve">
          <source>Returns a list of functions called by some of the given functions.</source>
          <target state="translated">与えられた関数のいくつかによって呼び出される関数のリストを返します。</target>
        </trans-unit>
        <trans-unit id="ee8897dbc8e22eb3180fb6c0ce972395a85f76d2" translate="yes" xml:space="preserve">
          <source>Returns a list of functions that use some of the given functions.</source>
          <target state="translated">与えられた関数の一部を使用する関数のリストを返します。</target>
        </trans-unit>
        <trans-unit id="26a8e4aa5621032974d108ad8918b510b464aa66" translate="yes" xml:space="preserve">
          <source>Returns a list of indexed positions, a list of positive integers.</source>
          <target state="translated">インデックス付きの位置のリスト、正の整数のリストを返します。</target>
        </trans-unit>
        <trans-unit id="868d7068f2695229a97a1b37ac88365741c71aac" translate="yes" xml:space="preserve">
          <source>Returns a list of integers corresponding to the bytes of &lt;code&gt;Binary&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Binary&lt;/code&gt; のバイトに対応する整数のリストを返します。</target>
        </trans-unit>
        <trans-unit id="baae318f95ec782dfe99b7a1cf39b3d469a5c78e" translate="yes" xml:space="preserve">
          <source>Returns a list of integers corresponding to the bytes of &lt;code&gt;Bitstring&lt;/code&gt;. If the number of bits in the binary is not divisible by 8, the last element of the list is a bitstring containing the remaining 1-7 bits.</source>
          <target state="translated">&lt;code&gt;Bitstring&lt;/code&gt; のバイトに対応する整数のリストを返します。バイナリのビット数が8で割り切れない場合、リストの最後の要素は、残りの1〜7ビットを含むビット文字列です。</target>
        </trans-unit>
        <trans-unit id="ced9ad7b31c06a6c357f5d995afcc3deb5960aa4" translate="yes" xml:space="preserve">
          <source>Returns a list of integers in the range 0..255, or a binary, depending on the port driver. The meaning of the returned data also depends on the port driver.</source>
          <target state="translated">ポートドライバに応じて、0~255 の範囲の整数のリスト、またはバイナリを返します。返されるデータの意味もポートドライバに依存します。</target>
        </trans-unit>
        <trans-unit id="5018802cea03ded6891e038bbc7786e5b9387b8c" translate="yes" xml:space="preserve">
          <source>Returns a list of integers representing valid heap sizes in words. All Erlang heaps are sized from sizes in this list.</source>
          <target state="translated">有効なヒープサイズを表す整数のリストを単語で返します。すべてのErlangヒープのサイズはこのリストのサイズから決定されます。</target>
        </trans-unit>
        <trans-unit id="f978eb2ced8d417db74ad6af6bd33be8bc6aa176" translate="yes" xml:space="preserve">
          <source>Returns a list of keys that are associated with the value &lt;code&gt;Val&lt;/code&gt; in the process dictionary, for example:</source>
          <target state="translated">プロセスディクショナリの値 &lt;code&gt;Val&lt;/code&gt; に関連付けられているキーのリストを返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="7faa822a6ccc19ae1a6a32d0f46c76580445242c" translate="yes" xml:space="preserve">
          <source>Returns a list of lexemes in &lt;code&gt;String&lt;/code&gt;, separated by the grapheme clusters in &lt;code&gt;SeparatorList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SeparatorList&lt;/code&gt; の書記素クラスタで区切られた、 &lt;code&gt;String&lt;/code&gt; の語彙素のリストを返します。</target>
        </trans-unit>
        <trans-unit id="5419e387478cd2d333fc79c3e503148c404842de" translate="yes" xml:space="preserve">
          <source>Returns a list of local functions that have not been locally used.</source>
          <target state="translated">ローカルで使用されていないローカル関数のリストを返します。</target>
        </trans-unit>
        <trans-unit id="1d6be377cd2458111bc4b6fbb2cfb9a9a74a47a2" translate="yes" xml:space="preserve">
          <source>Returns a list of microstate statistics values where the values for all threads of the same type has been merged.</source>
          <target state="translated">同じタイプのすべてのスレッドの値がマージされたマイクロステート統計値のリストを返します。</target>
        </trans-unit>
        <trans-unit id="0550afac88eb9a8eb0f14a24706b5af098091401" translate="yes" xml:space="preserve">
          <source>Returns a list of modules called by some of the given modules.</source>
          <target state="translated">与えられたモジュールのいくつかによって呼び出されたモジュールのリストを返します。</target>
        </trans-unit>
        <trans-unit id="ceeb9c9c5730d6ab87639534f5ecb8c3b0a22d2b" translate="yes" xml:space="preserve">
          <source>Returns a list of modules that use some of the given modules.</source>
          <target state="translated">指定したモジュールの一部を使用しているモジュールのリストを返します。</target>
        </trans-unit>
        <trans-unit id="b235467d6709bd8ccc2013fa5aef97d39f0b8d33" translate="yes" xml:space="preserve">
          <source>Returns a list of names that have been registered using &lt;code&gt;&lt;a href=&quot;#register-2&quot;&gt;register/2&lt;/a&gt;&lt;/code&gt;, for example:</source>
          <target state="translated">たとえば、 &lt;code&gt;&lt;a href=&quot;#register-2&quot;&gt;register/2&lt;/a&gt;&lt;/code&gt; を使用して登録された名前のリストを返します。</target>
        </trans-unit>
        <trans-unit id="13999dba88f2eb6f5cb139d0fb966e1648bf423e" translate="yes" xml:space="preserve">
          <source>Returns a list of names that have been registered using &lt;code&gt;register/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;register/2&lt;/code&gt; を使用して登録された名前のリストを返します。</target>
        </trans-unit>
        <trans-unit id="ce492879a7ba84da48427363485db5d4a629cff8" translate="yes" xml:space="preserve">
          <source>Returns a list of nodes according to the argument specified. The returned result, when the argument is a list, is the list of nodes satisfying the disjunction(s) of the list elements.</source>
          <target state="translated">戻り値:指定された引数に応じたノードのリストを返します。返される結果は、引数がリストの場合、リストの要素の論理和を満たすノードのリストとなります。</target>
        </trans-unit>
        <trans-unit id="c71362b22874ada3dd5fa0eba4f3ee91278af3eb" translate="yes" xml:space="preserve">
          <source>Returns a list of objects stored in a table. The exact representation of the returned objects is not public. The lists of data can be used for initializing a table by specifying value &lt;code&gt;bchunk&lt;/code&gt; to option &lt;code&gt;format&lt;/code&gt; of function &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; The Mnesia application uses this function for copying open tables.</source>
          <target state="translated">テーブルに格納されているオブジェクトのリストを返します。返されたオブジェクトの正確な表現は公開されていません。データのリストは、関数 &lt;code&gt;&lt;a href=&quot;#init_table-3&quot;&gt;init_table/3&lt;/a&gt;&lt;/code&gt; のオプション &lt;code&gt;format&lt;/code&gt; に値 &lt;code&gt;bchunk&lt;/code&gt; を指定することにより、テーブルを初期化するために使用できます。Mnesiaアプリケーションは、開いているテーブルをコピーするためにこの関数を使用します。</target>
        </trans-unit>
        <trans-unit id="f9bffce89f7109e7d59ff0c80cad70c7dbe48b7e" translate="yes" xml:space="preserve">
          <source>Returns a list of pairs representing the key-value associations of &lt;code&gt;Map&lt;/code&gt;, where the pairs &lt;code&gt;[{K1,V1}, ..., {Kn,Vn}]&lt;/code&gt; are returned in arbitrary order.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; のキーと値の関連付けを表すペアのリストを返します。ペア &lt;code&gt;[{K1,V1}, ..., {Kn,Vn}]&lt;/code&gt; は任意の順序で返されます。</target>
        </trans-unit>
        <trans-unit id="4d1b4659cd8c9b4ba5ca06938e6a33a2961246ee" translate="yes" xml:space="preserve">
          <source>Returns a list of port identifiers corresponding to all the ports existing on the local node.</source>
          <target state="translated">ローカルノード上に存在するすべてのポートに対応するポート識別子のリストを返します。</target>
        </trans-unit>
        <trans-unit id="e25261255c64b6e9c6fbb04e22f777fd08abad27" translate="yes" xml:space="preserve">
          <source>Returns a list of process identifiers corresponding to all the processes currently existing on the local node.</source>
          <target state="translated">ローカルノード上に現在存在するすべてのプロセスに対応するプロセス識別子のリストを返します。</target>
        </trans-unit>
        <trans-unit id="1c401cc51be311fb5a9746f3141daeb53e2a93ba" translate="yes" xml:space="preserve">
          <source>Returns a list of public keys and their related attributes. Each pair of key and attribute corresponds to one entry in the authorized key file:</source>
          <target state="translated">公開鍵とそれに関連する属性の一覧を返します。鍵と属性の各ペアは、認可された鍵ファイルの一つのエントリに対応します。</target>
        </trans-unit>
        <trans-unit id="42b7571725676b4b3e6e5209e39f9d6ca92b7621" translate="yes" xml:space="preserve">
          <source>Returns a list of public keys and their related attributes. Each pair of key and attribute corresponds to one entry in the known hosts file:</source>
          <target state="translated">公開鍵とそれに関連する属性の一覧を返します。鍵と属性の各ペアは、既知のホストファイルの一つのエントリに対応します。</target>
        </trans-unit>
        <trans-unit id="e1647f4adcdca1c6949eb846233576503cd38246" translate="yes" xml:space="preserve">
          <source>Returns a list of raw lock counter data.</source>
          <target state="translated">生のロックカウンターデータのリストを返します。</target>
        </trans-unit>
        <trans-unit id="b77bc0fb3f7fcc8c875d7206cf9c2f37960b95e5" translate="yes" xml:space="preserve">
          <source>Returns a list of releases called by some of the given releases.</source>
          <target state="translated">与えられたリリースのいくつかによって呼び出されたリリースのリストを返します。</target>
        </trans-unit>
        <trans-unit id="ea3c2f2fe1710d83b2fbf6c819e837ee8a69801b" translate="yes" xml:space="preserve">
          <source>Returns a list of releases that use some of the given releases.</source>
          <target state="translated">指定したリリースの一部を使用しているリリースのリストを返します。</target>
        </trans-unit>
        <trans-unit id="f31252702b155cc33d51703c9098b84fc375be34" translate="yes" xml:space="preserve">
          <source>Returns a list of subkeys to the current key. Calls the Win32 API function &lt;code&gt;EnumRegKeysEx()&lt;/code&gt;.</source>
          <target state="translated">現在のキーのサブキーのリストを返します。Win32 API関数 &lt;code&gt;EnumRegKeysEx()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="1bba8eb4a5957bfd492dc75647f6d9ed467f0159" translate="yes" xml:space="preserve">
          <source>Returns a list of supported ECCs. &lt;code&gt;eccs()&lt;/code&gt; is equivalent to calling &lt;code&gt;eccs(Protocol)&lt;/code&gt; with all supported protocols and then deduplicating the output.</source>
          <target state="translated">サポートされているECCのリストを返します。 &lt;code&gt;eccs()&lt;/code&gt; は、サポートされているすべての &lt;code&gt;eccs(Protocol)&lt;/code&gt; を呼び出してから、出力を重複排除することと同じです。</target>
        </trans-unit>
        <trans-unit id="f9e905003a43bb65664c1578be1f50b1ed0523a6" translate="yes" xml:space="preserve">
          <source>Returns a list of the current member nodes of the pool.</source>
          <target state="translated">プールの現在のメンバーノードのリストを返します。</target>
        </trans-unit>
        <trans-unit id="a15792d08e63403fc434652df9a1cdcdabcdc464" translate="yes" xml:space="preserve">
          <source>Returns a list of the driver options provided when loading, and any options set by the driver during initialization. The only valid option is &lt;code&gt;kill_ports&lt;/code&gt;.</source>
          <target state="translated">ロード時に提供されるドライバーオプションのリストと、初期化中にドライバーによって設定されるオプションを返します。有効なオプションは &lt;code&gt;kill_ports&lt;/code&gt; のみです。</target>
        </trans-unit>
        <trans-unit id="850ede50334af3f9fbcfce82ce09564006479789" translate="yes" xml:space="preserve">
          <source>Returns a list of the items in the queue in the same order; the front item of the queue becomes the head of the list.</source>
          <target state="translated">キュー内の項目のリストを同じ順番で返します。</target>
        </trans-unit>
        <trans-unit id="2306838c698bb764b3b0afd24902eca91be9b23c" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all allocators using the ERTS internal &lt;code&gt;alloc_util&lt;/code&gt; framework as atoms. For more information, see section &lt;code&gt;The alloc_util framework&lt;/code&gt; in &lt;code&gt;erts_alloc(3)&lt;/code&gt;.</source>
          <target state="translated">ERTS内部 &lt;code&gt;alloc_util&lt;/code&gt; フレームワークをアトムとして使用して、すべてのアロケーターの名前のリストを返します。詳細については、セクションを参照 &lt;code&gt;The alloc_util framework&lt;/code&gt; における &lt;code&gt;erts_alloc(3)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7e974d731dbcb432212e482b837ca861ae8314e8" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all open tables on this node.</source>
          <target state="translated">このノードで開いているすべてのテーブルの名前のリストを返します。</target>
        </trans-unit>
        <trans-unit id="3c151e0085c833f64177d4a6e4f6919ea6f99389" translate="yes" xml:space="preserve">
          <source>Returns a list of tokens in &lt;code&gt;String&lt;/code&gt;, separated by the characters in &lt;code&gt;SeparatorList&lt;/code&gt;.</source>
          <target state="translated">トークンのリストを、 &lt;code&gt;SeparatorList&lt;/code&gt; の文字で区切られた &lt;code&gt;String&lt;/code&gt; で返します。</target>
        </trans-unit>
        <trans-unit id="1ad431dba6bc6da79e0357c3dac050451502276f" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{DriverName, InfoList}&lt;/code&gt;, where &lt;code&gt;InfoList&lt;/code&gt; is the result of calling &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt; for that &lt;code&gt;DriverName&lt;/code&gt;. Only dynamically linked-in drivers are included in the list.</source>
          <target state="translated">戻り値のタプルのリスト &lt;code&gt;{DriverName, InfoList}&lt;/code&gt; 、 &lt;code&gt;InfoList&lt;/code&gt; が呼び出した結果である &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt; そのため &lt;code&gt;DriverName&lt;/code&gt; 。動的にリンクされたドライバーのみがリストに含まれます。</target>
        </trans-unit>
        <trans-unit id="ae8465626b9b68439f83968cce3546e43ebc9d82" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Module, Filename, Loaded}&lt;/code&gt; for all available modules. A module is considered to be available if it either is loaded or would be loaded if called. &lt;code&gt;Filename&lt;/code&gt; is normally the absolute filename, as described for &lt;code&gt;&lt;a href=&quot;#is_loaded-1&quot;&gt;is_loaded/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">使用可能なすべての &lt;code&gt;{Module, Filename, Loaded}&lt;/code&gt; のタプル{Module、Filename、Loaded}のリストを返します。モジュールは、ロードされているか、呼び出された場合にロードされる場合に使用可能であると見なされます。 &lt;code&gt;&lt;a href=&quot;#is_loaded-1&quot;&gt;is_loaded/1&lt;/a&gt;&lt;/code&gt; で説明されているように、 &lt;code&gt;Filename&lt;/code&gt; は通常、絶対ファイル名です。</target>
        </trans-unit>
        <trans-unit id="d0ef20ecf553692b8e111343585a02a21206f99a" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Module, Loaded}&lt;/code&gt; for all loaded modules. &lt;code&gt;Loaded&lt;/code&gt; is normally the absolute filename, as described for &lt;code&gt;&lt;a href=&quot;#is_loaded-1&quot;&gt;is_loaded/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ロードされたすべての &lt;code&gt;{Module, Loaded}&lt;/code&gt; のタプル{Module、Loaded}のリストを返します。 &lt;code&gt;Loaded&lt;/code&gt; ために記載したように、通常、絶対ファイル名であり、 &lt;code&gt;&lt;a href=&quot;#is_loaded-1&quot;&gt;is_loaded/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e3c9ba179e33dcf9e2c42a043c08fa87dbfd864f" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Node, ControllingEntity}&lt;/code&gt;, one entry for each connected remote node. &lt;code&gt;Node&lt;/code&gt; is the node name and &lt;code&gt;ControllingEntity&lt;/code&gt; is the port or process identifier responsible for the communication to that node. More specifically, &lt;code&gt;ControllingEntity&lt;/code&gt; for nodes connected through TCP/IP (the normal case) is the socket used in communication with the specific node.</source>
          <target state="translated">タプルのリスト &lt;code&gt;{Node, ControllingEntity}&lt;/code&gt; 返します。接続されたリモートノードごとに1つのエントリがあります。 &lt;code&gt;Node&lt;/code&gt; はノード名、 &lt;code&gt;ControllingEntity&lt;/code&gt; はそのノードへの通信を担当するポートまたはプロセスの識別子です。より具体的には、TCP / IPを介して接続されたノードの &lt;code&gt;ControllingEntity&lt;/code&gt; （通常の場合）は、特定のノードとの通信に使用されるソケットです。</target>
        </trans-unit>
        <trans-unit id="44e6825baa47aa89be776e805f265e60abf634a8" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples &lt;code&gt;{Tag, Value}&lt;/code&gt;, where &lt;code&gt;Tag&lt;/code&gt; is the information item and &lt;code&gt;Value&lt;/code&gt; is the result of calling &lt;code&gt;&lt;a href=&quot;#info-2&quot;&gt;info/2&lt;/a&gt;&lt;/code&gt; with this driver name and this tag. The result is a tuple list containing all information available about a driver.</source>
          <target state="translated">タプルのリスト &lt;code&gt;{Tag, Value}&lt;/code&gt; 返します。ここで、 &lt;code&gt;Tag&lt;/code&gt; は情報アイテムで、 &lt;code&gt;Value&lt;/code&gt; はこのドライバー名とこのタグを使用して &lt;code&gt;&lt;a href=&quot;#info-2&quot;&gt;info/2&lt;/a&gt;&lt;/code&gt; を呼び出した結果です。結果は、ドライバーに関して利用可能なすべての情報を含むタプルリストです。</target>
        </trans-unit>
        <trans-unit id="12347dac098a5cb8dce5f290295128f3fe58fabb" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples where, for each tuple in &lt;code&gt;TupleList1&lt;/code&gt;, the &lt;code&gt;N&lt;/code&gt;th element &lt;code&gt;Term1&lt;/code&gt; of the tuple has been replaced with the result of calling &lt;code&gt;Fun(Term1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TupleList1&lt;/code&gt; の各タプルについて、タプルの &lt;code&gt;N&lt;/code&gt; 番目の要素 &lt;code&gt;Term1&lt;/code&gt; が &lt;code&gt;Fun(Term1)&lt;/code&gt; を呼び出した結果に置き換えられたタプルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="0ea13b9a591517629a6950337a6fdc59bc811b5e" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with &lt;code&gt;{SchedulerId, ActiveTime, TotalTime}&lt;/code&gt;, where &lt;code&gt;SchedulerId&lt;/code&gt; is an integer ID of the scheduler, &lt;code&gt;ActiveTime&lt;/code&gt; is the duration the scheduler has been busy, and &lt;code&gt;TotalTime&lt;/code&gt; is the total time duration since &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt; scheduler_wall_time&lt;/a&gt;&lt;/code&gt; activation for the specific scheduler. Note that activation time can differ significantly between schedulers. Currently dirty schedulers are activated at system start while normal schedulers are activated some time after the &lt;code&gt;scheduler_wall_time&lt;/code&gt; functionality is enabled. The time unit is undefined and can be subject to change between releases, OSs, and system restarts. &lt;code&gt;scheduler_wall_time&lt;/code&gt; is only to be used to calculate relative values for scheduler utilization. &lt;code&gt;ActiveTime&lt;/code&gt; can never exceed &lt;code&gt;TotalTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{SchedulerId, ActiveTime, TotalTime}&lt;/code&gt; のタプルのリストを返します。SchedulerIdは &lt;code&gt;SchedulerId&lt;/code&gt; の整数ID、 &lt;code&gt;ActiveTime&lt;/code&gt; はスケジューラーがビジー状態の期間、 &lt;code&gt;TotalTime&lt;/code&gt; は特定のスケジューラーの &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt; scheduler_wall_time&lt;/a&gt;&lt;/code&gt; アクティベーション以降の合計時間です。アクティベーション時間は、スケジューラー間で大幅に異なる可能性があることに注意してください。現在、ダーティスケジューラはシステムの起動時にアクティブになりますが、通常のスケジューラは、 &lt;code&gt;scheduler_wall_time&lt;/code&gt; 機能が有効になった後しばらくするとアクティブになります。時間単位は未定義であり、リリース、OS、およびシステムの再起動の間で変更される可能性があります。 &lt;code&gt;scheduler_wall_time&lt;/code&gt; スケジューラー使用率の相対値を計算するためにのみ使用されます。 &lt;code&gt;ActiveTime&lt;/code&gt; は超えることはできません &lt;code&gt;TotalTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="93f2213e17f85fa838d64a2d3eb5add22cd2de9f" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with &lt;code&gt;{SchedulerId, ActiveTime, TotalTime}&lt;/code&gt;, where &lt;code&gt;SchedulerId&lt;/code&gt; is an integer ID of the scheduler, &lt;code&gt;ActiveTime&lt;/code&gt; is the duration the scheduler has been busy, and &lt;code&gt;TotalTime&lt;/code&gt; is the total time duration since &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; activation for the specific scheduler. Note that activation time can differ significantly between schedulers. Currently dirty schedulers are activated at system start while normal schedulers are activated some time after the &lt;code&gt;scheduler_wall_time&lt;/code&gt; functionality is enabled. The time unit is undefined and can be subject to change between releases, OSs, and system restarts. &lt;code&gt;scheduler_wall_time&lt;/code&gt; is only to be used to calculate relative values for scheduler utilization. &lt;code&gt;ActiveTime&lt;/code&gt; can never exceed &lt;code&gt;TotalTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{SchedulerId, ActiveTime, TotalTime}&lt;/code&gt; のタプルのリストを返します。ここで、 &lt;code&gt;SchedulerId&lt;/code&gt; はスケジューラーの整数ID、 &lt;code&gt;ActiveTime&lt;/code&gt; はスケジューラーがビジーであった時間、 &lt;code&gt;TotalTime&lt;/code&gt; は特定のスケジューラーの &lt;code&gt;&lt;a href=&quot;#system_flag_scheduler_wall_time&quot;&gt;scheduler_wall_time&lt;/a&gt;&lt;/code&gt; のアクティブ化以降の合計時間です。アクティベーション時間は、スケジューラによって大幅に異なる場合があることに注意してください。現在、ダーティースケジューラーはシステムの起動時にアクティブ化されますが、通常のスケジューラーは、 &lt;code&gt;scheduler_wall_time&lt;/code&gt; 機能が有効になった後しばらくしてからアクティブ化されます。時間単位は定義されておらず、リリース、OS、システムの再起動の間に変更される可能性があります。 &lt;code&gt;scheduler_wall_time&lt;/code&gt; スケジューラ使用率の相対値を計算するためにのみ使用されます。 &lt;code&gt;ActiveTime&lt;/code&gt; は超えることはできません &lt;code&gt;TotalTime&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b0df76cdc4cfbbde2fe80593dbf1e84b9d9b10f5" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with information about how the module was compiled. This list is empty if the module has been stripped with the &lt;code&gt;beam_lib(3)&lt;/code&gt; module (in STDLIB).</source>
          <target state="translated">モジュールのコンパイル方法に関する情報を含むタプルのリストを返します。モジュールが（STDLIBの） &lt;code&gt;beam_lib(3)&lt;/code&gt; モジュールで削除されている場合、このリストは空です。</target>
        </trans-unit>
        <trans-unit id="fa56aa1fb0f06d1e02b293ee9314f572354d0ea1" translate="yes" xml:space="preserve">
          <source>Returns a list of tuples with information about miscellaneous allocated memory areas.</source>
          <target state="translated">雑多に割り当てられたメモリ領域に関する情報を持つタプルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="f7b16e4394cb94a84d5b5f2836ea7de7ccbbcfec" translate="yes" xml:space="preserve">
          <source>Returns a list where each element represents the amount of active processes and ports on each run queue and its associated schedulers. That is, the number of processes and ports that are ready to run, or are currently running. Values for normal run queues and their associated schedulers are located first in the resulting list. The first element corresponds to scheduler number 1 and so on. If support for dirty schedulers exist, an element with the value for the dirty CPU run queue and its associated dirty CPU schedulers follow and then as last element the value for the the dirty IO run queue and its associated dirty IO schedulers follow. The information is &lt;strong&gt;not&lt;/strong&gt; gathered atomically. That is, the result is not necessarily a consistent snapshot of the state, but instead quite efficiently gathered.</source>
          <target state="translated">各要素が各実行キューとそれに関連するスケジューラー上のアクティブなプロセスとポートの量を表すリストを返します。つまり、実行の準備ができているか、現在実行中のプロセスとポートの数です。通常の実行キューとそれに関連するスケジューラの値は、結果のリストの最初にあります。最初の要素はスケジューラー番号1に対応します。ダーティスケジューラのサポートが存在する場合、ダーティCPU実行キューとそれに関連するダーティCPUスケジューラの値を持つ要素が続き、最後の要素として、ダーティIO実行キューとそれに関連するダーティIOスケジューラの値が続きます。情報はアトミックに収集され&lt;strong&gt;ません&lt;/strong&gt;。つまり、結果は必ずしも状態の一貫したスナップショットではなく、かなり効率的に収集されます。</target>
        </trans-unit>
        <trans-unit id="51b7aac5180aaaa66bcf990dbf7675324e29f8c7" translate="yes" xml:space="preserve">
          <source>Returns a list where each element represents the amount of processes and ports ready to run for each run queue. Values for normal run queues are located first in the resulting list. The first element corresponds to the normal run queue of scheduler number 1 and so on. If support for dirty schedulers exist, values for the dirty CPU run queue and the dirty IO run queue follow (in that order) at the end. The information is &lt;strong&gt;not&lt;/strong&gt; gathered atomically. That is, the result is not necessarily a consistent snapshot of the state, but instead quite efficiently gathered.</source>
          <target state="translated">各要素が各実行キューで実行可能なプロセスとポートの量を表すリストを返します。通常の実行キューの値は、結果のリストの最初にあります。最初の要素は、スケジューラ番号1の通常の実行キューに対応します。ダーティスケジューラのサポートが存在する場合、最後にダーティCPU実行キューとダーティIO実行キューの値が（この順序で）続きます。情報はアトミックに収集され&lt;strong&gt;ません&lt;/strong&gt;。つまり、結果は必ずしも状態の一貫したスナップショットではなく、かなり効率的に収集されます。</target>
        </trans-unit>
        <trans-unit id="b941d4e04084edb236c9a8bc253eef2e0e08e909" translate="yes" xml:space="preserve">
          <source>Returns a list whose elements are the path components of &lt;code&gt;Filename&lt;/code&gt;.</source>
          <target state="translated">要素が &lt;code&gt;Filename&lt;/code&gt; のパスコンポーネントであるリストを返します。</target>
        </trans-unit>
        <trans-unit id="3b70d93737bf6a89e8ce6d041c54b88e85e71398" translate="yes" xml:space="preserve">
          <source>Returns a list with all imported files.</source>
          <target state="translated">インポートされたすべてのファイルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="5afb452302f4c7864dfc86d8b974a0284562ae6d" translate="yes" xml:space="preserve">
          <source>Returns a list with all interpreted modules.</source>
          <target state="translated">すべての解釈済みモジュールのリストを返します。</target>
        </trans-unit>
        <trans-unit id="e405f34b7fb82a4fbead2e416cd71fa78865f7d4" translate="yes" xml:space="preserve">
          <source>Returns a list with all modules for which there are imported data.</source>
          <target state="translated">インポートされたデータがあるすべてのモジュールのリストを返します。</target>
        </trans-unit>
        <trans-unit id="f4fcf940d968f85951fff3e7ec2314be13cd9afe" translate="yes" xml:space="preserve">
          <source>Returns a list with all modules that are currently Cover compiled.</source>
          <target state="translated">現在Coverがコンパイルされているすべてのモジュールのリストを返します。</target>
        </trans-unit>
        <trans-unit id="3f20449f4bf0d390767524abb875a22e6ecfa1c7" translate="yes" xml:space="preserve">
          <source>Returns a list with all nodes that are part of the coverage analysis. Note that the current node is not returned. This node is always part of the analysis.</source>
          <target state="translated">カバレッジ解析の一部であるすべてのノードのリストを返します。現在のノードは返されないことに注意してください。このノードは常に解析の一部です。</target>
        </trans-unit>
        <trans-unit id="08ea13abe178179b2c16be03199e32b1415d19e8" translate="yes" xml:space="preserve">
          <source>Returns a list with information about memory dynamically allocated by the Erlang emulator. Each list element is a tuple &lt;code&gt;{Type, Size}&lt;/code&gt;. The first element &lt;code&gt;Type&lt;/code&gt; is an atom describing memory type. The second element &lt;code&gt;Size&lt;/code&gt; is the memory size in bytes.</source>
          <target state="translated">Erlangエミュレーターによって動的に割り当てられたメモリに関する情報のリストを返します。各リスト要素はタプル &lt;code&gt;{Type, Size}&lt;/code&gt; です。最初の要素 &lt;code&gt;Type&lt;/code&gt; は、メモリタイプを説明するアトムです。2番目の要素 &lt;code&gt;Size&lt;/code&gt; は、バイト単位のメモリサイズです。</target>
        </trans-unit>
        <trans-unit id="e23b59b74d5e9a9c8a369969dccc0b1f1d37006e" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the applications that are currently running. &lt;code&gt;Application&lt;/code&gt; is the application name. &lt;code&gt;Description&lt;/code&gt; and &lt;code&gt;Vsn&lt;/code&gt; are the values of their &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;vsn&lt;/code&gt; application specification keys, respectively.</source>
          <target state="translated">現在実行中のアプリケーションに関する情報を含むリストを返します。 &lt;code&gt;Application&lt;/code&gt; はアプリケーション名です。 &lt;code&gt;Description&lt;/code&gt; と &lt;code&gt;Vsn&lt;/code&gt; は、それぞれの &lt;code&gt;description&lt;/code&gt; と &lt;code&gt;vsn&lt;/code&gt; アプリケーション仕様キーの値です。</target>
        </trans-unit>
        <trans-unit id="1e44a0a7cbeb6cb5ea225de0094765c1cb93aadd" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the applications, and included applications, which are loaded using &lt;code&gt;load/1,2&lt;/code&gt;. &lt;code&gt;Application&lt;/code&gt; is the application name. &lt;code&gt;Description&lt;/code&gt; and &lt;code&gt;Vsn&lt;/code&gt; are the values of their &lt;code&gt;description&lt;/code&gt; and &lt;code&gt;vsn&lt;/code&gt; application specification keys, respectively.</source>
          <target state="translated">&lt;code&gt;load/1,2&lt;/code&gt; を使用してロードされたアプリケーションおよび含まれているアプリケーションに関する情報のリストを返します。 &lt;code&gt;Application&lt;/code&gt; はアプリケーション名です。 &lt;code&gt;Description&lt;/code&gt; と &lt;code&gt;Vsn&lt;/code&gt; は、それぞれの &lt;code&gt;description&lt;/code&gt; と &lt;code&gt;vsn&lt;/code&gt; アプリケーション仕様キーの値です。</target>
        </trans-unit>
        <trans-unit id="082096aee53907006df4d528f6963a9cdbd2834b" translate="yes" xml:space="preserve">
          <source>Returns a list with information about the fun &lt;code&gt;Fun&lt;/code&gt;. Each list element is a tuple. The order of the tuples is undefined, and more tuples can be added in a future release.</source>
          <target state="translated">楽しい &lt;code&gt;Fun&lt;/code&gt; に関する情報を含むリストを返します。各リスト要素はタプルです。タプルの順序は定義されておらず、今後のリリースでタプルを追加できるようになります。</target>
        </trans-unit>
        <trans-unit id="2a273f2482e4d6f1fbc97d67161e9515716d64c5" translate="yes" xml:space="preserve">
          <source>Returns a list with the elements in &lt;code&gt;List1&lt;/code&gt; in reverse order, with tail &lt;code&gt;Tail&lt;/code&gt; appended.</source>
          <target state="translated">&lt;code&gt;List1&lt;/code&gt; の要素を逆の順序で、末尾に &lt;code&gt;Tail&lt;/code&gt; 追加したリストを返します。</target>
        </trans-unit>
        <trans-unit id="832ea77d23505552832301d7dbbab7be5e7a90dd" translate="yes" xml:space="preserve">
          <source>Returns a list with the elements in &lt;code&gt;List1&lt;/code&gt; in reverse order.</source>
          <target state="translated">&lt;code&gt;List1&lt;/code&gt; の要素を逆の順序で含むリストを返します。</target>
        </trans-unit>
        <trans-unit id="84f1499d684e80e69120459b5874982c864856cb" translate="yes" xml:space="preserve">
          <source>Returns a list with values for all columns in &lt;code&gt;Cols&lt;/code&gt;. If a column is undefined, its value is &lt;code&gt;noinit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cols&lt;/code&gt; のすべての列の値のリストを返します。列が未定義の場合、その値は &lt;code&gt;noinit&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b991dac7a17f515ad11ab8a2b69b9dfa6585c04e" translate="yes" xml:space="preserve">
          <source>Returns a map &lt;code&gt;Map&lt;/code&gt; for which predicate &lt;code&gt;Pred&lt;/code&gt; holds true in &lt;code&gt;MapOrIter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MapOrIter&lt;/code&gt; で述語 &lt;code&gt;Pred&lt;/code&gt; がtrueであるマップ &lt;code&gt;Map&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="9d731f70bc552bebc033484d0448ae22ca88ea46" translate="yes" xml:space="preserve">
          <source>Returns a map iterator &lt;code&gt;Iterator&lt;/code&gt; that can be used by &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;maps:next/1&lt;/a&gt;&lt;/code&gt; to traverse the key-value associations in a map. When iterating over a map, the memory usage is guaranteed to be bounded no matter the size of the map.</source>
          <target state="translated">マップ内のキーと値の関連付けをトラバースするために &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;maps:next/1&lt;/a&gt;&lt;/code&gt; で使用できるマップイテレータ &lt;code&gt;Iterator&lt;/code&gt; を返します。マップを反復するとき、メモリ使用量はマップのサイズに関係なく制限されることが保証されています。</target>
        </trans-unit>
        <trans-unit id="889c13f526ea5af22f09d7bee74de5ffbd9e20aa" translate="yes" xml:space="preserve">
          <source>Returns a negative value if the call failed where the following bits can be set:</source>
          <target state="translated">呼び出しに失敗した場合、以下のビットを設定することができる負の値を返します。</target>
        </trans-unit>
        <trans-unit id="8ac0cf6601f38f269545889202b2d8acb5d9c708" translate="yes" xml:space="preserve">
          <source>Returns a new Erlang term corresponding to the requested element, or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;position&lt;/code&gt; was greater than the arity of &lt;code&gt;tuple&lt;/code&gt;.</source>
          <target state="translated">要求された要素に対応する新しいErlang用語を返します。 &lt;code&gt;position&lt;/code&gt; が &lt;code&gt;tuple&lt;/code&gt; のアリティより大きい場合は &lt;code&gt;NULL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2164c82352c48fe9a836862f6cfd23661803f164" translate="yes" xml:space="preserve">
          <source>Returns a new TLS/DTLS socket if the handshake is successful.</source>
          <target state="translated">ハンドシェイクに成功した場合、新しい TLS/DTLS ソケットを返します。</target>
        </trans-unit>
        <trans-unit id="456254db671e7211f8cf975ebc7a01fd2d4e0998" translate="yes" xml:space="preserve">
          <source>Returns a new empty map.</source>
          <target state="translated">新しい空のマップを返します。</target>
        </trans-unit>
        <trans-unit id="8e4eb51649304c2bec63792cfa85aa4863b22406" translate="yes" xml:space="preserve">
          <source>Returns a new empty ordered set.</source>
          <target state="translated">新しい空の順序付きセットを返します。</target>
        </trans-unit>
        <trans-unit id="302caa64733fc4c7b16056c605dcc203b92d6f74" translate="yes" xml:space="preserve">
          <source>Returns a new empty set.</source>
          <target state="translated">新しい空の集合を返します。</target>
        </trans-unit>
        <trans-unit id="b56ae43d0f846bf1949be3f1ab4e439b4e4b97ba" translate="yes" xml:space="preserve">
          <source>Returns a new empty tree.</source>
          <target state="translated">新しい空のツリーを返します。</target>
        </trans-unit>
        <trans-unit id="52ddf9faadedd1f5401cea097538ddfd635f7163" translate="yes" xml:space="preserve">
          <source>Returns a new list &lt;code&gt;List3&lt;/code&gt; that is a copy of &lt;code&gt;List1&lt;/code&gt;, subjected to the following procedure: for each element in &lt;code&gt;List2&lt;/code&gt;, its first occurrence in &lt;code&gt;List1&lt;/code&gt; is deleted.</source>
          <target state="translated">新しいリストを返します &lt;code&gt;List3&lt;/code&gt; のコピーである &lt;code&gt;List1&lt;/code&gt; 、以下の手順にかけ、：の各要素のために &lt;code&gt;List2&lt;/code&gt; 、でその最初の出現 &lt;code&gt;List1&lt;/code&gt; 削除されます。</target>
        </trans-unit>
        <trans-unit id="4542acc8afa6c33c6e9c090883b8ca0e51803bc7" translate="yes" xml:space="preserve">
          <source>Returns a new list &lt;code&gt;List3&lt;/code&gt;, which is made from the elements of &lt;code&gt;List1&lt;/code&gt; followed by the elements of &lt;code&gt;List2&lt;/code&gt;.</source>
          <target state="translated">戻り値は、新しいリスト &lt;code&gt;List3&lt;/code&gt; の要素から作られ、 &lt;code&gt;List1&lt;/code&gt; をはの要素が続く &lt;code&gt;List2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b455a2440938bc559af3ddb6ee2c37352ebdc0c" translate="yes" xml:space="preserve">
          <source>Returns a new map &lt;code&gt;Map2&lt;/code&gt; with the keys &lt;code&gt;K1&lt;/code&gt; through &lt;code&gt;Kn&lt;/code&gt; and their associated values from map &lt;code&gt;Map1&lt;/code&gt;. Any key in &lt;code&gt;Ks&lt;/code&gt; that does not exist in &lt;code&gt;Map1&lt;/code&gt; is ignored.</source>
          <target state="translated">キー &lt;code&gt;K1&lt;/code&gt; から &lt;code&gt;Kn&lt;/code&gt; までの新しいマップ &lt;code&gt;Map2&lt;/code&gt; と、マップ &lt;code&gt;Map1&lt;/code&gt; からの関連する値を返します。 &lt;code&gt;Map1&lt;/code&gt; に存在しない &lt;code&gt;Ks&lt;/code&gt; のキーは無視されます。</target>
        </trans-unit>
        <trans-unit id="67290e0a103586074d306b260be7f713463f57f6" translate="yes" xml:space="preserve">
          <source>Returns a new map &lt;code&gt;Map2&lt;/code&gt; without keys &lt;code&gt;K1&lt;/code&gt; through &lt;code&gt;Kn&lt;/code&gt; and their associated values from map &lt;code&gt;Map1&lt;/code&gt;. Any key in &lt;code&gt;Ks&lt;/code&gt; that does not exist in &lt;code&gt;Map1&lt;/code&gt; is ignored</source>
          <target state="translated">キー &lt;code&gt;Map2&lt;/code&gt; から &lt;code&gt;K1&lt;/code&gt; から &lt;code&gt;Kn&lt;/code&gt; までの新しいマップMap2およびそれらに関連付けられた値をマップ &lt;code&gt;Map1&lt;/code&gt; から返します。 &lt;code&gt;Map1&lt;/code&gt; に存在しない &lt;code&gt;Ks&lt;/code&gt; のキーはすべて無視されます</target>
        </trans-unit>
        <trans-unit id="9855aceea290cffa09098763d7a883e94c7067a3" translate="yes" xml:space="preserve">
          <source>Returns a new ordered set formed from &lt;code&gt;Ordset1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted.</source>
          <target state="translated">戻り値から形成された新しい順序集合 &lt;code&gt;Ordset1&lt;/code&gt; で &lt;code&gt;Element&lt;/code&gt; 挿入しました。</target>
        </trans-unit>
        <trans-unit id="2cf3a026b42c22429203bd312f9f574526c3d067" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted.</source>
          <target state="translated">形成された新しいセットを返します &lt;code&gt;Set1&lt;/code&gt; と &lt;code&gt;Element&lt;/code&gt; 挿入されます。</target>
        </trans-unit>
        <trans-unit id="9a3e77a0d4c9926366de861b366eb9d929768d67" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted. Assumes that &lt;code&gt;Element&lt;/code&gt; is not present in &lt;code&gt;Set1&lt;/code&gt;.</source>
          <target state="translated">形成された新しいセットを返します &lt;code&gt;Set1&lt;/code&gt; と &lt;code&gt;Element&lt;/code&gt; 挿入されます。ことを前提としてい &lt;code&gt;Element&lt;/code&gt; 中に存在していない &lt;code&gt;Set1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a0426b5d4fc3e15824ae4b2f3a72d0b0d793a688" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; inserted. If &lt;code&gt;Element&lt;/code&gt; is already an element in &lt;code&gt;Set1&lt;/code&gt;, nothing is changed.</source>
          <target state="translated">形成された新しいセットを返します &lt;code&gt;Set1&lt;/code&gt; と &lt;code&gt;Element&lt;/code&gt; 挿入されます。場合は &lt;code&gt;Element&lt;/code&gt; は、すでにの要素である &lt;code&gt;Set1&lt;/code&gt; 、何も変更されません。</target>
        </trans-unit>
        <trans-unit id="2876ee8ff5d8de8cd5c5022fe3c35a8168024c73" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; removed. Assumes that &lt;code&gt;Element&lt;/code&gt; is present in &lt;code&gt;Set1&lt;/code&gt;.</source>
          <target state="translated">戻り値から形成された新しいセット &lt;code&gt;Set1&lt;/code&gt; で &lt;code&gt;Element&lt;/code&gt; 削除しました。ことを前提としてい &lt;code&gt;Element&lt;/code&gt; 中に存在している &lt;code&gt;Set1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82e2522189efdcb96f05ed6fc0dd4b26ea0dbace" translate="yes" xml:space="preserve">
          <source>Returns a new set formed from &lt;code&gt;Set1&lt;/code&gt; with &lt;code&gt;Element&lt;/code&gt; removed. If &lt;code&gt;Element&lt;/code&gt; is not an element in &lt;code&gt;Set1&lt;/code&gt;, nothing is changed.</source>
          <target state="translated">戻り値から形成された新しいセット &lt;code&gt;Set1&lt;/code&gt; で &lt;code&gt;Element&lt;/code&gt; 削除しました。 &lt;code&gt;Element&lt;/code&gt; が &lt;code&gt;Set1&lt;/code&gt; の要素でない場合、何も変更されません。</target>
        </trans-unit>
        <trans-unit id="0b340b0d4312756cdb0d5ea9d80123f4413bac57" translate="yes" xml:space="preserve">
          <source>Returns a new tuple that has one element more than &lt;code&gt;Tuple1&lt;/code&gt;, and contains the elements in &lt;code&gt;Tuple1&lt;/code&gt; followed by &lt;code&gt;Term&lt;/code&gt; as the last element. Semantically equivalent to &lt;code&gt;list_to_tuple(tuple_to_list(Tuple1) ++ [Term])&lt;/code&gt;, but much faster. Example:</source>
          <target state="translated">&lt;code&gt;Tuple1&lt;/code&gt; よりも1つ多い要素があり、 &lt;code&gt;Tuple1&lt;/code&gt; の要素を含み、最後の要素として &lt;code&gt;Term&lt;/code&gt; が続く新しいタプルを返します。意味的には &lt;code&gt;list_to_tuple(tuple_to_list(Tuple1) ++ [Term])&lt;/code&gt; と同等ですが、はるかに高速です。例：</target>
        </trans-unit>
        <trans-unit id="bde383d63490d451b0f95496f5ddc0d941fd0a06" translate="yes" xml:space="preserve">
          <source>Returns a new tuple with element &lt;code&gt;Term&lt;/code&gt; inserted at position &lt;code&gt;Index&lt;/code&gt; in tuple &lt;code&gt;Tuple1&lt;/code&gt;. All elements from position &lt;code&gt;Index&lt;/code&gt; and upwards are pushed one step higher in the new tuple &lt;code&gt;Tuple2&lt;/code&gt;. Example:</source>
          <target state="translated">戻り値の要素を持つ新しいタプル &lt;code&gt;Term&lt;/code&gt; の位置に挿入された &lt;code&gt;Index&lt;/code&gt; タプルに &lt;code&gt;Tuple1&lt;/code&gt; 。位置 &lt;code&gt;Index&lt;/code&gt; 以降のすべての要素は、新しいタプル &lt;code&gt;Tuple2&lt;/code&gt; で1つ上にプッシュされます。例：</target>
        </trans-unit>
        <trans-unit id="541fb2fe1465f22b99417c012a85d115f1b4a3e6" translate="yes" xml:space="preserve">
          <source>Returns a new tuple with element at &lt;code&gt;Index&lt;/code&gt; removed from tuple &lt;code&gt;Tuple1&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Index&lt;/code&gt; 要素がタプル &lt;code&gt;Tuple1&lt;/code&gt; から削除された新しいタプルを返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="308fbca02547a432a27bb42f69b457aa760415cc" translate="yes" xml:space="preserve">
          <source>Returns a newly created list with information about all child specifications and child processes belonging to supervisor &lt;code&gt;SupRef&lt;/code&gt;.</source>
          <target state="translated">スーパーバイザ &lt;code&gt;SupRef&lt;/code&gt; に属するすべての子仕様と子プロセスに関する情報を含む、新しく作成されたリストを返します。</target>
        </trans-unit>
        <trans-unit id="988718b7da23cf5e7319125e8929491ce6761321" translate="yes" xml:space="preserve">
          <source>Returns a newly created port data lock on success, otherwise &lt;code&gt;NULL&lt;/code&gt;. The function fails if &lt;code&gt;port&lt;/code&gt; is invalid or if a port data lock already has been associated with the &lt;code&gt;port&lt;/code&gt;.</source>
          <target state="translated">成功すると、新しく作成されたポートデータロックを &lt;code&gt;NULL&lt;/code&gt; 。それ以外の場合はNULLを返します。 &lt;code&gt;port&lt;/code&gt; が無効である場合、またはポートデータロックがすでに &lt;code&gt;port&lt;/code&gt; 関連付けられている場合、関数は失敗します。</target>
        </trans-unit>
        <trans-unit id="c7d31e4d735f6c2c90a55d4e9e9bc358b81bb147" translate="yes" xml:space="preserve">
          <source>Returns a non-empty list of some objects stored in a table that match a given pattern in some unspecified order. The table, the pattern, and the number of objects that are matched are all defined by &lt;code&gt;Continuation&lt;/code&gt;, which has been returned by a previous call to &lt;code&gt;match_object/1&lt;/code&gt; or &lt;code&gt;match_object/3&lt;/code&gt;.</source>
          <target state="translated">特定のパターンに不特定の順序で一致する、テーブルに格納されているいくつかのオブジェクトの空でないリストを返します。テーブル、パターン、および適合されているオブジェクトの数は、すべてで定義されている &lt;code&gt;Continuation&lt;/code&gt; する前の呼び出しによって返された、 &lt;code&gt;match_object/1&lt;/code&gt; 又は &lt;code&gt;match_object/3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="50270629b3dafeeafed7462734d9b34f2cc291ea" translate="yes" xml:space="preserve">
          <source>Returns a non-negative value on success where the following bits can be set:</source>
          <target state="translated">成功した場合に、以下のビットを設定できる非負の値を返します。</target>
        </trans-unit>
        <trans-unit id="2d93e71a340752a5f5290f10d48436940f20b574" translate="yes" xml:space="preserve">
          <source>Returns a normal N(Mean, Variance) deviate float and updates the state in the process dictionary.</source>
          <target state="translated">正規の N(Mean,Variance)偏差 float を返し、プロセス辞書の状態を更新します。</target>
        </trans-unit>
        <trans-unit id="4d38c985d064614595f3a0fa28e7ddf78a708833" translate="yes" xml:space="preserve">
          <source>Returns a number indicating the number of processes that matched &lt;code&gt;PidPortSpec&lt;/code&gt;. If &lt;code&gt;PidPortSpec&lt;/code&gt; is a process identifier, the return value is &lt;code&gt;1&lt;/code&gt;. If &lt;code&gt;PidPortSpec&lt;/code&gt; is &lt;code&gt;all&lt;/code&gt; or &lt;code&gt;existing&lt;/code&gt;, the return value is the number of processes running. If &lt;code&gt;PidPortSpec&lt;/code&gt; is &lt;code&gt;new&lt;/code&gt;, the return value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PidPortSpec&lt;/code&gt; と一致したプロセスの数を示す数値を返します。場合 &lt;code&gt;PidPortSpec&lt;/code&gt; はプロセス識別子で、戻り値は &lt;code&gt;1&lt;/code&gt; 。場合 &lt;code&gt;PidPortSpec&lt;/code&gt; がある &lt;code&gt;all&lt;/code&gt; または &lt;code&gt;existing&lt;/code&gt; 、戻り値は、実行中のプロセスの数です。場合 &lt;code&gt;PidPortSpec&lt;/code&gt; がある &lt;code&gt;new&lt;/code&gt; 、戻り値は &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ce0bda480a992988544423b3c6fa8905aadc73a7" translate="yes" xml:space="preserve">
          <source>Returns a pair of sets that, regarded as constituting a set, forms a &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt;. If the result of applying &lt;code&gt;SetFun&lt;/code&gt; to an element of &lt;code&gt;Set1&lt;/code&gt; gives an element in &lt;code&gt;Set2&lt;/code&gt;, the element belongs to &lt;code&gt;Set3&lt;/code&gt;, otherwise the element belongs to &lt;code&gt;Set4&lt;/code&gt;.</source>
          <target state="translated">セットを構成すると見なされ、 &lt;code&gt;Set1&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; を形成するセットのペアを返します。適用した結果場合 &lt;code&gt;SetFun&lt;/code&gt; をの要素に &lt;code&gt;Set1&lt;/code&gt; 内の要素与え &lt;code&gt;Set2&lt;/code&gt; 、要素はに属し &lt;code&gt;Set3&lt;/code&gt; 、それ以外の要素はに属し &lt;code&gt;Set4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="39f67903b4cc9df547e9b82924cf4116b4951f8e" translate="yes" xml:space="preserve">
          <source>Returns a performance counter that can be used as a very fast and high resolution timestamp. This counter is read directly from the hardware or operating system with the same guarantees. This means that two consecutive calls to the function are not guaranteed to be monotonic, though it most likely will be. The performance counter will be converted to the resolution passed as an argument.</source>
          <target state="translated">非常に高速で高解像度のタイムスタンプとして使用できるパフォーマンスカウンタを返します。このカウンタは、ハードウェアまたはオペレーティングシステムから、同じ保証で直接読み込まれます。つまり、この関数を2回連続して呼び出しても、ほとんどの場合は単調であることが保証されていません。パフォーマンスカウンタは、引数として渡された分解能に変換されます。</target>
        </trans-unit>
        <trans-unit id="1857f2d600eb2dbb33f64af93199be89a69a819b" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a dynamically allocated buffer containing a string. If &lt;code&gt;list&lt;/code&gt; is not an I/O list, or if &lt;code&gt;list&lt;/code&gt; contains the integer 0, &lt;code&gt;NULL&lt;/code&gt; is returned. It is the caller's responsibility to free the allocated buffer with &lt;code&gt;erl_free()&lt;/code&gt;.</source>
          <target state="translated">文字列を含む動的に割り当てられたバッファへのポインタを返します。場合は &lt;code&gt;list&lt;/code&gt; I / Oリストでない場合、または &lt;code&gt;list&lt;/code&gt; 、整数0が含まれている、 &lt;code&gt;NULL&lt;/code&gt; が返されます。割り当てられたバッファを &lt;code&gt;erl_free()&lt;/code&gt; で解放するのは呼び出し側の責任です。</target>
        </trans-unit>
        <trans-unit id="98516b5a626e7b8596556a34709ca73247b01eaa" translate="yes" xml:space="preserve">
          <source>Returns a pointer to a subterm that can be used in a later call to &lt;code&gt;erl_decode()&lt;/code&gt; to retrieve the term at that position. If there is no term, or &lt;code&gt;pos&lt;/code&gt; would exceed the size of the terms in the buffer, &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="translated">後で &lt;code&gt;erl_decode()&lt;/code&gt; を呼び出してその位置にある用語を取得する際に使用できるサブ用語へのポインターを返します。用語がない場合、または &lt;code&gt;pos&lt;/code&gt; がバッファー内の用語のサイズを超える場合は、 &lt;code&gt;NULL&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="738279ad9c25157358239c6c5bc58c59b10a737b" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the mutex name.</source>
          <target state="translated">mutex名へのポインタを返します。</target>
        </trans-unit>
        <trans-unit id="ad33e5274a9c6e8726271829305d60b5c1898046" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the name of the condition.</source>
          <target state="translated">条件の名前へのポインタを返します。</target>
        </trans-unit>
        <trans-unit id="0236a2b61b14c10b30aba53ffa3f9d6657a360d5" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the name of the rwlock.</source>
          <target state="translated">rwlockの名前へのポインタを返します。</target>
        </trans-unit>
        <trans-unit id="34cdae0227fab5cdeaeb8741625ac7444eb216e2" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the name of the thread.</source>
          <target state="translated">スレッド名へのポインタを返します。</target>
        </trans-unit>
        <trans-unit id="1632cb168390baa31ea4378dbe892487fdec9c10" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the raw binary data and sets &lt;code&gt;*termp&lt;/code&gt; to the binary term.</source>
          <target state="translated">生のバイナリデータへのポインタを返し、 &lt;code&gt;*termp&lt;/code&gt; をバイナリ項に設定します。</target>
        </trans-unit>
        <trans-unit id="a4a9c476e43b8961c65de17c74e3c3bdb342013b" translate="yes" xml:space="preserve">
          <source>Returns a port identifier &lt;code&gt;Port&lt;/code&gt; as the result of opening a new Erlang port. Messages can be sent to, and received from, a port identifier, just like a pid. Port identifiers can also be linked to using &lt;code&gt;link/1&lt;/code&gt;, or registered under a name using &lt;code&gt;register/2&lt;/code&gt;.</source>
          <target state="translated">新しいErlangポートを開いた結果として、ポート識別子 &lt;code&gt;Port&lt;/code&gt; を返します。メッセージは、pidと同様に、ポート識別子との間で送受信できます。ポート識別子は &lt;code&gt;link/1&lt;/code&gt; を使用してリンクすることも、 &lt;code&gt;register/2&lt;/code&gt; を使用して名前で登録することもできます。</target>
        </trans-unit>
        <trans-unit id="ea32cacd6364b95061a97d1cb1603d042e7fa2f6" translate="yes" xml:space="preserve">
          <source>Returns a port identifier as the result of opening a new Erlang port. A port can be seen as an external Erlang process.</source>
          <target state="translated">新しいErlangポートを開いた結果としてポートの識別子を返します。ポートは外部のErlangプロセスとして見ることができます。</target>
        </trans-unit>
        <trans-unit id="549ae3ced02337c9218c3560bd2c5d22638a139a" translate="yes" xml:space="preserve">
          <source>Returns a port identifier whose text representation is a &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">テキスト表現が &lt;code&gt;String&lt;/code&gt; であるポート識別子を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="34378032b52dc70a1698e3af6cc3f1c7d64920c1" translate="yes" xml:space="preserve">
          <source>Returns a process identifier whose text representation is a &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">テキスト表現が &lt;code&gt;String&lt;/code&gt; であるプロセス識別子を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="ba66e63940a9d08f025b8a3d60da5d4a3ce0926f" translate="yes" xml:space="preserve">
          <source>Returns a property list (see &lt;code&gt;&lt;a href=&quot;proplists&quot;&gt; proplists&lt;/a&gt;&lt;/code&gt;) containing the counts for each of the following elements of the supervisor's child specifications and managed processes:</source>
          <target state="translated">スーパーバイザーの子仕様および管理対象プロセスの次の各要素のカウントを含むプロパティリスト（ &lt;code&gt;&lt;a href=&quot;proplists&quot;&gt; proplists&lt;/a&gt;&lt;/code&gt; を参照）を返します。</target>
        </trans-unit>
        <trans-unit id="475f248087f9c4fb29685c91698ec5831e8d5075" translate="yes" xml:space="preserve">
          <source>Returns a property list (see &lt;code&gt;&lt;a href=&quot;proplists&quot;&gt;proplists&lt;/a&gt;&lt;/code&gt;) containing the counts for each of the following elements of the supervisor's child specifications and managed processes:</source>
          <target state="translated">スーパーバイザの子仕様および管理対象プロセスの次の各要素の数を含むプロパティリスト（ &lt;code&gt;&lt;a href=&quot;proplists&quot;&gt;proplists&lt;/a&gt;&lt;/code&gt; を参照）を返します。</target>
        </trans-unit>
        <trans-unit id="c53e20ed0d00e49d31e0aa5aa4f54ac6264c5c5e" translate="yes" xml:space="preserve">
          <source>Returns a query handle for a QLC table. In Erlang/OTP there is support for ETS, Dets, and Mnesia tables, but many other data structures can be turned into QLC tables. This is accomplished by letting function(s) in the module implementing the data structure create a query handle by calling &lt;code&gt;qlc:table/2&lt;/code&gt;. The different ways to traverse the table and properties of the table are handled by callback functions provided as options to &lt;code&gt;qlc:table/2&lt;/code&gt;.</source>
          <target state="translated">QLCテーブルのクエリハンドルを返します。Erlang / OTPでは、ETS、Dets、Mnesiaテーブルがサポートされていますが、他の多くのデータ構造をQLCテーブルに変換できます。これは、データ構造を実装するモジュール内の関数に &lt;code&gt;qlc:table/2&lt;/code&gt; を呼び出してクエリハンドルを作成させることで実現されます。テーブルとテーブルのプロパティを走査するさまざまな方法は、 &lt;code&gt;qlc:table/2&lt;/code&gt; のオプションとして提供されるコールバック関数によって処理されます。</target>
        </trans-unit>
        <trans-unit id="bc6fefdf356fea365a23c8acde6c866a605532d9" translate="yes" xml:space="preserve">
          <source>Returns a query handle for a QLC. The QLC must be the first argument to this function, otherwise it is evaluated as an ordinary list comprehension. It is also necessary to add the following line to the source code:</source>
          <target state="translated">QLCに対する問い合わせハンドルを返します。QLCはこの関数の第一引数でなければならず、そうでない場合は通常のリスト内包として評価されます。また、ソースコードに以下の行を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="13597ae114db01f956de1e90cbe62d0d265a9c96" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH2&lt;/code&gt;, the answers to query handle &lt;code&gt;QH1&lt;/code&gt; are sorted by &lt;code&gt;&lt;a href=&quot;file_sorter#keysort-4&quot;&gt;file_sorter:keysort/4&lt;/a&gt;&lt;/code&gt; according to the options.</source>
          <target state="translated">クエリハンドルを返します。クエリハンドル &lt;code&gt;QH2&lt;/code&gt; を評価するとき、クエリハンドル &lt;code&gt;QH1&lt;/code&gt; に対する回答は、オプションに従って &lt;code&gt;&lt;a href=&quot;file_sorter#keysort-4&quot;&gt;file_sorter:keysort/4&lt;/a&gt;&lt;/code&gt; でソートされます。</target>
        </trans-unit>
        <trans-unit id="49fdde57e389d284799c22342f17d306ca57749e" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH2&lt;/code&gt;, the answers to query handle &lt;code&gt;QH1&lt;/code&gt; are sorted by &lt;code&gt;&lt;a href=&quot;file_sorter#sort-3&quot;&gt;file_sorter:sort/3&lt;/a&gt;&lt;/code&gt; according to the options.</source>
          <target state="translated">クエリハンドルを返します。クエリハンドル &lt;code&gt;QH2&lt;/code&gt; を評価するとき、クエリハンドル &lt;code&gt;QH1&lt;/code&gt; への回答は、オプションに従って &lt;code&gt;&lt;a href=&quot;file_sorter#sort-3&quot;&gt;file_sorter:sort/3&lt;/a&gt;&lt;/code&gt; でソートされます。</target>
        </trans-unit>
        <trans-unit id="8875629f1300f906d14654a0c483b031376d3cd9" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH3&lt;/code&gt;, all answers to &lt;code&gt;QH1&lt;/code&gt; are returned, followed by all answers to &lt;code&gt;QH2&lt;/code&gt;.</source>
          <target state="translated">クエリハンドルを返します。クエリハンドルを評価すると &lt;code&gt;QH3&lt;/code&gt; を、すべての答えに &lt;code&gt;QH1&lt;/code&gt; は、返されたにすべての答えが続いている &lt;code&gt;QH2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f8da3937aac99f038108c359dfdfa445ced24fb" translate="yes" xml:space="preserve">
          <source>Returns a query handle. When evaluating query handle &lt;code&gt;QH&lt;/code&gt;, all answers to the first query handle in &lt;code&gt;QHL&lt;/code&gt; are returned, followed by all answers to the remaining query handles in &lt;code&gt;QHL&lt;/code&gt;.</source>
          <target state="translated">クエリハンドルを返します。クエリハンドル &lt;code&gt;QH&lt;/code&gt; を評価すると、 &lt;code&gt;QHL&lt;/code&gt; の最初のクエリハンドルに対するすべての回答が返され、その後に &lt;code&gt;QHL&lt;/code&gt; の残りのクエリハンドルに対するすべての回答が返されます。</target>
        </trans-unit>
        <trans-unit id="5a1d738bb5afe4518c8379826056585c25a992bd" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; containing the items of &lt;code&gt;Q1&lt;/code&gt; in the reverse order.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; のアイテムを逆の順序で含むキュー &lt;code&gt;Q2&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e196ff3d55fb6fa7fcb6519db49f306184136ab7" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of calling &lt;code&gt;Fun(Item)&lt;/code&gt; on all items in &lt;code&gt;Q1&lt;/code&gt;, in order from front to rear.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; のすべての &lt;code&gt;Fun(Item)&lt;/code&gt; に対して、Fun（Item）を呼び出した結果であるキュー &lt;code&gt;Q2&lt;/code&gt; を、前から後ろに向かって返します。</target>
        </trans-unit>
        <trans-unit id="fc688776bc490270c0f81180569b41a72371fe8a" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the front item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; からフロントアイテムを削除した結果であるキュー &lt;code&gt;Q2&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="7866351e56d26351d3905136cdca01271e3003ce" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the head item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; からヘッドアイテムを削除した結果であるキュー &lt;code&gt;Q2&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3d84547dca262b8b2adbada430f33494114cb921" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the rear item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; から後方アイテムを削除した結果であるキュー &lt;code&gt;Q2&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1f2d3c60bdc7c08da57f3619f31be48f2ee0cd4b" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q2&lt;/code&gt; that is the result of removing the tail item from &lt;code&gt;Q1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; からテールアイテムを削除した結果であるキュー &lt;code&gt;Q2&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="33b4357dbf4625d2bb49c9f673f132d92849bcfd" translate="yes" xml:space="preserve">
          <source>Returns a queue &lt;code&gt;Q3&lt;/code&gt; that is the result of joining &lt;code&gt;Q1&lt;/code&gt; and &lt;code&gt;Q2&lt;/code&gt; with &lt;code&gt;Q1&lt;/code&gt; in front of &lt;code&gt;Q2&lt;/code&gt;.</source>
          <target state="translated">キュー返し &lt;code&gt;Q3&lt;/code&gt; 接合の結果であり、 &lt;code&gt;Q1&lt;/code&gt; 及び &lt;code&gt;Q2&lt;/code&gt; を用いて &lt;code&gt;Q1&lt;/code&gt; の前に &lt;code&gt;Q2&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="0721f3e84c31aa90efcf282f74b77512e19d40eb" translate="yes" xml:space="preserve">
          <source>Returns a queue containing the items in &lt;code&gt;L&lt;/code&gt; in the same order; the head item of the list becomes the front item of the queue.</source>
          <target state="translated">&lt;code&gt;L&lt;/code&gt; のアイテムを同じ順序で含むキューを返します。リストの先頭のアイテムがキューの先頭のアイテムになります。</target>
        </trans-unit>
        <trans-unit id="3c13ac8791052956515344c82c17f8e137051af7" translate="yes" xml:space="preserve">
          <source>Returns a random float uniformly distributed between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt;, updating the state in the process dictionary.</source>
          <target state="translated">&lt;code&gt;0.0&lt;/code&gt; と &lt;code&gt;1.0&lt;/code&gt; の間に均一に分散されたランダムなフロートを返し、プロセスディクショナリの状態を更新します。</target>
        </trans-unit>
        <trans-unit id="5ffd661695d1f146c4d4b52eece1203485c98b21" translate="yes" xml:space="preserve">
          <source>Returns a random float uniformly distributed in the value range &lt;code&gt;0.0 =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; and updates the state in the process dictionary.</source>
          <target state="translated">&lt;code&gt;0.0 =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; の値の範囲で均一に分散されたランダムなフロートを返し、プロセスディクショナリの状態を更新します。</target>
        </trans-unit>
        <trans-unit id="eac6bc74d4e0acad3c62b2f96267d447e245c7a6" translate="yes" xml:space="preserve">
          <source>Returns a random float uniformly distributed in the value range &lt;code&gt;DBL_MIN =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; and updates the state in the process dictionary.</source>
          <target state="translated">値の範囲 &lt;code&gt;DBL_MIN =&amp;lt; X &amp;lt; 1.0&lt;/code&gt; に均一に分散されたランダムなフロートを返し、プロセスディクショナリの状態を更新します。</target>
        </trans-unit>
        <trans-unit id="220e5a07c91a567d9306f69e052d7530c918c974" translate="yes" xml:space="preserve">
          <source>Returns a reference whose text representation is a &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">テキスト表現が &lt;code&gt;String&lt;/code&gt; である参照を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="5981a9c84fff78d573bbd1e25c8f19a1a7c41b47" translate="yes" xml:space="preserve">
          <source>Returns a representation of the attributes associated with a syntax tree node. The attributes are all the extra information that can be attached to a node. Currently, this includes position information, source code comments, and user annotations. The result of this function cannot be inspected directly; only attached to another node (see &lt;code&gt;&lt;a href=&quot;#set_attrs-2&quot;&gt;set_attrs/2&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">構文ツリーノードに関連付けられた属性の表現を返します。属性は、ノードに添付できるすべての追加情報です。現在、これには、位置情報、ソースコードのコメント、およびユーザーの注釈が含まれます。この関数の結果を直接検査することはできません。別のノードにのみ接続されます（ &lt;code&gt;&lt;a href=&quot;#set_attrs-2&quot;&gt;set_attrs/2&lt;/a&gt;&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="29de78454c28e34a2a642e7a8961ad2591a09234" translate="yes" xml:space="preserve">
          <source>Returns a runtime system independent version of the microstate statistics data presented by &lt;code&gt; erlang:statistics(microstate_accounting)&lt;/code&gt;. All counters have been normalized to be in microsecond resolution.</source>
          <target state="translated">&lt;code&gt; erlang:statistics(microstate_accounting)&lt;/code&gt; によって提示されたマイクロステート統計データのランタイムシステムに依存しないバージョンを返します。すべてのカウンターは、マイクロ秒の解像度になるように正規化されています。</target>
        </trans-unit>
        <trans-unit id="41c3c0aa8007477bae8340b92aecee54aba8147e" translate="yes" xml:space="preserve">
          <source>Returns a runtime system independent version of the microstate statistics data presented by &lt;code&gt;erlang:statistics(microstate_accounting)&lt;/code&gt;. All counters have been normalized to be in microsecond resolution.</source>
          <target state="translated">&lt;code&gt;erlang:statistics(microstate_accounting)&lt;/code&gt; によって提示されるマイクロステート統計データのランタイムシステムに依存しないバージョンを返します。すべてのカウンターは、マイクロ秒の解像度になるように正規化されています。</target>
        </trans-unit>
        <trans-unit id="639003c0bcc32fe7eb6be91e1cb42c7c94c0e076" translate="yes" xml:space="preserve">
          <source>Returns a sequence of integers that starts with &lt;code&gt;From&lt;/code&gt; and contains the successive results of adding &lt;code&gt;Incr&lt;/code&gt; to the previous element, until &lt;code&gt;To&lt;/code&gt; is reached or passed (in the latter case, &lt;code&gt;To&lt;/code&gt; is not an element of the sequence). &lt;code&gt;Incr&lt;/code&gt; defaults to 1.</source>
          <target state="translated">&lt;code&gt;From&lt;/code&gt; で始まり、 &lt;code&gt;To&lt;/code&gt; に到達するか渡されるまで前の要素に &lt;code&gt;Incr&lt;/code&gt; を追加した連続した結果を含む整数のシーケンスを返します（後者の場合、 &lt;code&gt;To&lt;/code&gt; はシーケンスの要素ではありません）。 &lt;code&gt;Incr&lt;/code&gt; のデフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="8b3cb83da87bf82fcc52a1009c086d823d2d7f98" translate="yes" xml:space="preserve">
          <source>Returns a set containing only element &lt;code&gt;Element&lt;/code&gt;.</source>
          <target state="translated">要素 &lt;code&gt;Element&lt;/code&gt; のみを含むセットを返します。</target>
        </trans-unit>
        <trans-unit id="6f10fef368394c28f1d20e18f2a6039026240320" translate="yes" xml:space="preserve">
          <source>Returns a set of the elements in &lt;code&gt;List&lt;/code&gt;, where &lt;code&gt;List&lt;/code&gt; can be unordered and contain duplicates.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; の要素のセットを返します。ここで、 &lt;code&gt;List&lt;/code&gt; は順序付けなしで重複を含むことができます。</target>
        </trans-unit>
        <trans-unit id="753f6ab832bf18ad6e71eab42e1639c10f7f8d5e" translate="yes" xml:space="preserve">
          <source>Returns a set of the elements in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; の要素のセットを返します。</target>
        </trans-unit>
        <trans-unit id="a98dc36da5b203b779b5c5939c13afc2118a29d9" translate="yes" xml:space="preserve">
          <source>Returns a sorted lists of the names of the variables of an &lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt;. The default is to return the &lt;code&gt;&lt;a href=&quot;#user_variable&quot;&gt;user variables&lt;/a&gt;&lt;/code&gt; only.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#xref_server&quot;&gt;Xref server&lt;/a&gt;&lt;/code&gt; 変数の名前のソートされたリストを返します。デフォルトでは、 &lt;code&gt;&lt;a href=&quot;#user_variable&quot;&gt;user variables&lt;/a&gt;&lt;/code&gt; のみが返されます。</target>
        </trans-unit>
        <trans-unit id="4d0a71645d1f3545b0c4bb0969a3ef5985a3224a" translate="yes" xml:space="preserve">
          <source>Returns a standard normal deviate float (that is, the mean is 0 and the standard deviation is 1) and updates the state in the process dictionary.</source>
          <target state="translated">標準の正規偏差 float(つまり、平均値が 0、標準偏差が 1)を返し、プロセス辞書の状態を更新します。</target>
        </trans-unit>
        <trans-unit id="5c1ea25fa4c5f8b145f8f707d7f1c4662e2f7b63" translate="yes" xml:space="preserve">
          <source>Returns a string consisting of &lt;code&gt;Number&lt;/code&gt; characters &lt;code&gt;Character&lt;/code&gt;. Optionally, the string can end with string &lt;code&gt;Tail&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 文字 &lt;code&gt;Character&lt;/code&gt; で構成される文字列を返します。オプションで、文字列は文字列 &lt;code&gt;Tail&lt;/code&gt; で終了できます。</target>
        </trans-unit>
        <trans-unit id="8eb5679eca27a81f2f8c00730da843064fd19386" translate="yes" xml:space="preserve">
          <source>Returns a string containing &lt;code&gt;String&lt;/code&gt; repeated &lt;code&gt;Number&lt;/code&gt; times.</source>
          <target state="translated">戻り値が含まれる文字列 &lt;code&gt;String&lt;/code&gt; 繰り返し &lt;code&gt;Number&lt;/code&gt; 時間を。</target>
        </trans-unit>
        <trans-unit id="9420605dab264db14377df3c7c369cd794988d36" translate="yes" xml:space="preserve">
          <source>Returns a string containing the Erlang driver version used by the runtime system. It has the form &lt;code&gt; &quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">ランタイムシステムで使用されるErlangドライバーのバージョンを含む文字列を返します。 &lt;code&gt; &quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;&lt;/code&gt; の形式です。</target>
        </trans-unit>
        <trans-unit id="ca720cab6edb5af65d70d200416f25bce42dff96" translate="yes" xml:space="preserve">
          <source>Returns a string containing the Erlang driver version used by the runtime system. It has the form &lt;code&gt;&quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">ランタイムシステムで使用されるErlangドライバーのバージョンを含む文字列を返します。 &lt;code&gt;&quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;&lt;/code&gt; という形式です。</target>
        </trans-unit>
        <trans-unit id="1ece8e40e1f507575b3bf20fd73a6e0672d7350c" translate="yes" xml:space="preserve">
          <source>Returns a string containing the Erlang machine name.</source>
          <target state="translated">Erlangのマシン名を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="4a7d526e434bb32d45334ad10ea54c1c2f791139" translate="yes" xml:space="preserve">
          <source>Returns a string containing the OTP release number of the OTP release that the currently executing ERTS application is part of.</source>
          <target state="translated">現在実行中の ERTS アプリケーションが属する OTP リリースの OTP リリース番号を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="a5c774d62af9c350116ae56e808daa9a8135061e" translate="yes" xml:space="preserve">
          <source>Returns a string containing the processor and OS architecture the emulator is built for.</source>
          <target state="translated">エミュレータがビルドされているプロセッサとOSのアーキテクチャを含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="821408643d3812334edfe7c70f2c8bdd3090056c" translate="yes" xml:space="preserve">
          <source>Returns a string containing the version number of the emulator.</source>
          <target state="translated">エミュレータのバージョン番号を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="4ad4f5193c4b241dc3533ca0bd261ddcc8281845" translate="yes" xml:space="preserve">
          <source>Returns a string containing the version of the Erlang NIF interface used by the runtime system. It is on the form &quot;&amp;lt;major ver&amp;gt;.&amp;lt;minor ver&amp;gt;&quot;.</source>
          <target state="translated">ランタイムシステムで使用されるErlang NIFインターフェースのバージョンを含む文字列を返します。「&amp;lt;メジャーバージョン&amp;gt;。&amp;lt;マイナーバージョン&amp;gt;」という形式です。</target>
        </trans-unit>
        <trans-unit id="249a381d6d64e85569639e56f4abc0c76775977f" translate="yes" xml:space="preserve">
          <source>Returns a string containing version number and some important properties, such as the number of schedulers.</source>
          <target state="translated">バージョン番号と、スケジューラの数などの重要なプロパティを含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="592cba2a4f69e8ba547f8910b96da1e46a1c67d8" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Atom&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Atom&lt;/code&gt; のテキスト表現に対応する文字列を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="321baf49392c0eafb95b3b64884a211ea92a6f7e" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Float&lt;/code&gt; using fixed decimal point formatting.</source>
          <target state="translated">固定小数点フォーマットを使用して、 &lt;code&gt;Float&lt;/code&gt; のテキスト表現に対応する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="845804924b90ea31613ae6d5ea09637d3555f2ae" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Fun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; のテキスト表現に対応する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="d750f9d480b4bae30d0af2c744ba69c36ebeaa17" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt; in base &lt;code&gt;Base&lt;/code&gt;, for example:</source>
          <target state="translated">ベース &lt;code&gt;Base&lt;/code&gt; の &lt;code&gt;Integer&lt;/code&gt; のテキスト表現に対応する文字列を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="d28245f1e2faea5c401927009ee01c220d8c620b" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Integer&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; のテキスト表現に対応する文字列を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="0b33ef62cb3a9619f4bb28cafc910beb1049d31b" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Pid&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; のテキスト表現に対応する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="a01f4beff7183843fdd5fec40bac132ab6f148c2" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of &lt;code&gt;Ref&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ref&lt;/code&gt; のテキスト表現に対応する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="d129c7d8767c6334e5a4a61ca3f9d29803c4e6f8" translate="yes" xml:space="preserve">
          <source>Returns a string corresponding to the text representation of the port identifier &lt;code&gt;Port&lt;/code&gt;.</source>
          <target state="translated">ポート識別子 &lt;code&gt;Port&lt;/code&gt; のテキスト表現に対応する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="d01a763290d161874d170974dac8ae6a46597510" translate="yes" xml:space="preserve">
          <source>Returns a string representation of an encoding. The string is recognized by &lt;code&gt;&lt;a href=&quot;#read_encoding-1&quot;&gt;read_encoding/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#read_encoding_from_binary-1&quot;&gt; read_encoding_from_binary/1,2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#set_encoding-1&quot;&gt;set_encoding/1,2&lt;/a&gt;&lt;/code&gt; as a valid encoding.</source>
          <target state="translated">エンコーディングの文字列表現を返します。文字列は、 &lt;code&gt;&lt;a href=&quot;#read_encoding-1&quot;&gt;read_encoding/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#read_encoding_from_binary-1&quot;&gt; read_encoding_from_binary/1,2&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#set_encoding-1&quot;&gt;set_encoding/1,2&lt;/a&gt;&lt;/code&gt; によって有効なエンコーディングとして認識されます。</target>
        </trans-unit>
        <trans-unit id="722bee6a2590720890936d18e6c3a69afefa6faa" translate="yes" xml:space="preserve">
          <source>Returns a string representation of an encoding. The string is recognized by &lt;code&gt;&lt;a href=&quot;#read_encoding-1&quot;&gt;read_encoding/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#read_encoding_from_binary-1&quot;&gt;read_encoding_from_binary/1,2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#set_encoding-1&quot;&gt;set_encoding/1,2&lt;/a&gt;&lt;/code&gt; as a valid encoding.</source>
          <target state="translated">エンコーディングの文字列表現を返します。文字列は、 &lt;code&gt;&lt;a href=&quot;#read_encoding-1&quot;&gt;read_encoding/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#read_encoding_from_binary-1&quot;&gt;read_encoding_from_binary/1,2&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#set_encoding-1&quot;&gt;set_encoding/1,2&lt;/a&gt;&lt;/code&gt; によって有効なエンコーディングとして認識されます。</target>
        </trans-unit>
        <trans-unit id="67af947c46cc1e568aec078c3d6093f6948052aa" translate="yes" xml:space="preserve">
          <source>Returns a string where any trailing &lt;code&gt;\n&lt;/code&gt; or &lt;code&gt;\r\n&lt;/code&gt; have been removed from &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">末尾の &lt;code&gt;\n&lt;/code&gt; または &lt;code&gt;\r\n&lt;/code&gt; が &lt;code&gt;String&lt;/code&gt; から削除された文字列を返します。</target>
        </trans-unit>
        <trans-unit id="4a0cd3b8788f1f4abd133a92ff4a9323bf82931f" translate="yes" xml:space="preserve">
          <source>Returns a string which describes the error &lt;code&gt;ErrorInfo&lt;/code&gt; returned when there is an error in a regular expression.</source>
          <target state="translated">正規表現でエラーが発生したときに返されるエラー &lt;code&gt;ErrorInfo&lt;/code&gt; を説明する文字列を返します。</target>
        </trans-unit>
        <trans-unit id="ed93319dfab86a95c5d7739f463d1f22d56b5ff7" translate="yes" xml:space="preserve">
          <source>Returns a string with the elements of &lt;code&gt;StringList&lt;/code&gt; separated by the string in &lt;code&gt;Separator&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Separator&lt;/code&gt; の文字列で区切られた &lt;code&gt;StringList&lt;/code&gt; の要素を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="d3f6a4bb443347056ff4bb78fd9be46ff4f44f39" translate="yes" xml:space="preserve">
          <source>Returns a string, where &lt;code&gt;String&lt;/code&gt; is centered in the string and surrounded by blanks or &lt;code&gt;Character&lt;/code&gt;. The resulting string has length &lt;code&gt;Number&lt;/code&gt;.</source>
          <target state="translated">文字列、戻り値 &lt;code&gt;String&lt;/code&gt; 、文字列の中央に位置し、空白または囲まれる &lt;code&gt;Character&lt;/code&gt; 。結果の文字列の長さは &lt;code&gt;Number&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="856440dd7379ef2ee50b8dbbe737f978de9a80e4" translate="yes" xml:space="preserve">
          <source>Returns a string, where leading or trailing, or both, &lt;code&gt;Characters&lt;/code&gt; have been removed. &lt;code&gt;Dir&lt;/code&gt; which can be &lt;code&gt;leading&lt;/code&gt;, &lt;code&gt;trailing&lt;/code&gt;, or &lt;code&gt;both&lt;/code&gt;, indicates from which direction characters are to be removed.</source>
          <target state="translated">先頭または末尾、あるいはその両方の &lt;code&gt;Characters&lt;/code&gt; が削除された文字列を返します。 &lt;code&gt;Dir&lt;/code&gt; ことができる &lt;code&gt;leading&lt;/code&gt; 、 &lt;code&gt;trailing&lt;/code&gt; 、または &lt;code&gt;both&lt;/code&gt; 、方向の文字が削除されるべきで示しています。</target>
        </trans-unit>
        <trans-unit id="578a3937330919a210b2dcef50f14c32643c53b8" translate="yes" xml:space="preserve">
          <source>Returns a string, where leading or trailing, or both, blanks or a number of &lt;code&gt;Character&lt;/code&gt; have been removed. &lt;code&gt;Direction&lt;/code&gt;, which can be &lt;code&gt;left&lt;/code&gt;, &lt;code&gt;right&lt;/code&gt;, or &lt;code&gt;both&lt;/code&gt;, indicates from which direction blanks are to be removed. &lt;code&gt;strip/1&lt;/code&gt; is equivalent to &lt;code&gt;strip(String, both)&lt;/code&gt;.</source>
          <target state="translated">先頭または末尾、あるいはその両方の空白またはいくつかの &lt;code&gt;Character&lt;/code&gt; が削除された文字列を返します。 &lt;code&gt;Direction&lt;/code&gt; 、 &lt;code&gt;left&lt;/code&gt; 、 &lt;code&gt;right&lt;/code&gt; 、または &lt;code&gt;both&lt;/code&gt; であり、どの方向からブランクを削除するかを示します。 &lt;code&gt;strip/1&lt;/code&gt; は &lt;code&gt;strip(String, both)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="3b61c0f61aabf0a3f7ea6fd4848159462feb7998" translate="yes" xml:space="preserve">
          <source>Returns a subset S of the &lt;code&gt;&lt;a href=&quot;#weak_relation&quot;&gt;weak relation&lt;/a&gt;&lt;/code&gt; W corresponding to the binary relation &lt;code&gt;BinRel1&lt;/code&gt;. Let F be the &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt;. The subset S is defined so that x S y if x W y for some x in F and for some y in F.</source>
          <target state="translated">二項関係 &lt;code&gt;BinRel1&lt;/code&gt; に対応する &lt;code&gt;&lt;a href=&quot;#weak_relation&quot;&gt;weak relation&lt;/a&gt;&lt;/code&gt; WのサブセットSを返します。F を &lt;code&gt;BinRel1&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; とする。サブセットSは、Fの一部のxとFの一部のyについてx W yの場合、x S yとなるように定義されます。</target>
        </trans-unit>
        <trans-unit id="b2eb6357fa31863d69699995784e8ab743fe546e" translate="yes" xml:space="preserve">
          <source>Returns a subset of &lt;code&gt;Set1&lt;/code&gt; containing those elements that do not give an element in &lt;code&gt;Set2&lt;/code&gt; as the result of applying &lt;code&gt;SetFun&lt;/code&gt;.</source>
          <target state="translated">サブセットを返し &lt;code&gt;Set1&lt;/code&gt; の要素与えることはありませんそれらの要素含む &lt;code&gt;Set2&lt;/code&gt; 適用した結果として &lt;code&gt;SetFun&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="07ede649fccf16d077bd784e71f2b2ea53bba28d" translate="yes" xml:space="preserve">
          <source>Returns a subset of &lt;code&gt;Set1&lt;/code&gt; containing those elements that gives an element in &lt;code&gt;Set2&lt;/code&gt; as the result of applying &lt;code&gt;SetFun&lt;/code&gt;.</source>
          <target state="translated">サブセットを返し &lt;code&gt;Set1&lt;/code&gt; の要素与えるそれらの要素を含む &lt;code&gt;Set2&lt;/code&gt; 適用した結果として &lt;code&gt;SetFun&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="e11559487c6f5bd3d643533e9faacfe01f709456" translate="yes" xml:space="preserve">
          <source>Returns a substring of &lt;code&gt;String&lt;/code&gt; of at most &lt;code&gt;Length&lt;/code&gt; grapheme clusters, starting at position &lt;code&gt;Start&lt;/code&gt;.</source>
          <target state="translated">サブ返し &lt;code&gt;String&lt;/code&gt; せいぜいの &lt;code&gt;Length&lt;/code&gt; 位置から開始し、書記素クラスタを &lt;code&gt;Start&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="953a90492454dd674656729b23274ea4c43bf73d" translate="yes" xml:space="preserve">
          <source>Returns a substring of &lt;code&gt;String&lt;/code&gt;, starting at position &lt;code&gt;Start&lt;/code&gt; to the end of the string, or to and including position &lt;code&gt;Stop&lt;/code&gt;.</source>
          <target state="translated">位置 &lt;code&gt;Start&lt;/code&gt; から文字列の最後まで、または位置 &lt;code&gt;Stop&lt;/code&gt; までを含む、 &lt;code&gt;String&lt;/code&gt; の部分文字列を返します。</target>
        </trans-unit>
        <trans-unit id="f365d6065acb778455e6e12b3c74c9416301cb1a" translate="yes" xml:space="preserve">
          <source>Returns a substring of &lt;code&gt;String&lt;/code&gt;, starting at position &lt;code&gt;Start&lt;/code&gt;, and ending at the end of the string or at length &lt;code&gt;Length&lt;/code&gt;.</source>
          <target state="translated">位置 &lt;code&gt;Start&lt;/code&gt; で始まり、文字列の最後または長さ &lt;code&gt;Length&lt;/code&gt; で終わる &lt;code&gt;String&lt;/code&gt; のサブストリングを返します。</target>
        </trans-unit>
        <trans-unit id="269b906ff1204a86bc1f9bdf30b2139db27bb7f8" translate="yes" xml:space="preserve">
          <source>Returns a suitable &lt;code&gt;regexp&lt;/code&gt; string matching common prompts for users on Unix hosts.</source>
          <target state="translated">Unixホスト上のユーザー向けの一般的なプロンプトに一致する適切な &lt;code&gt;regexp&lt;/code&gt; 文字列を返します。</target>
        </trans-unit>
        <trans-unit id="2c78c1be16943a0ae8debbcf9106e3ad03551724" translate="yes" xml:space="preserve">
          <source>Returns a suitable path, or paths, for a given type. If &lt;code&gt;os&lt;/code&gt; is not set in &lt;code&gt;Opts&lt;/code&gt; the function will default to the native option, that is &lt;code&gt;'linux'&lt;/code&gt;, &lt;code&gt;'darwin'&lt;/code&gt; or &lt;code&gt;'windows'&lt;/code&gt;, as understood by &lt;code&gt;os:type/0&lt;/code&gt;. Anything not recognized as &lt;code&gt;'darwin'&lt;/code&gt; or &lt;code&gt;'windows'&lt;/code&gt; is interpreted as &lt;code&gt;'linux'&lt;/code&gt;.</source>
          <target state="translated">指定されたタイプに適した1つまたは複数のパスを返します。 &lt;code&gt;os&lt;/code&gt; が &lt;code&gt;Opts&lt;/code&gt; で設定されていない場合、関数はデフォルトでネイティブオプションに設定されます。つまり、 &lt;code&gt;os:type/0&lt;/code&gt; で理解されるように、 &lt;code&gt;'darwin'&lt;/code&gt; &lt;code&gt;'linux'&lt;/code&gt; 、'darwin'または &lt;code&gt;'windows'&lt;/code&gt; です。 &lt;code&gt;'darwin'&lt;/code&gt; または &lt;code&gt;'windows'&lt;/code&gt; として認識されないものは、 &lt;code&gt;'linux'&lt;/code&gt; として解釈されます。</target>
        </trans-unit>
        <trans-unit id="8c920b6b5298494c5a0714e6b648d21d79ec962c" translate="yes" xml:space="preserve">
          <source>Returns a summary of all carriers in the system, optionally filtered by allocator type and scheduler id.</source>
          <target state="translated">システム内のすべてのキャリアのサマリーを返します。</target>
        </trans-unit>
        <trans-unit id="2d30f2d815938df0e275b67633bde3053cd366a0" translate="yes" xml:space="preserve">
          <source>Returns a summary of all tagged allocations in the system, optionally filtered by allocator type and scheduler id.</source>
          <target state="translated">システム内のすべてのタグ付けされた割り当ての概要を返します。</target>
        </trans-unit>
        <trans-unit id="b52475f9bda569c98ba8b2a5e21ecfc538ad2b2c" translate="yes" xml:space="preserve">
          <source>Returns a term from the driver. The meaning of the returned data also depends on the port driver.</source>
          <target state="translated">ドライバからタームを返します。返されるデータの意味は、ポートドライバにも依存します。</target>
        </trans-unit>
        <trans-unit id="4dc55a0a9d2c7c3ed0f4095f99a29e63c2c62028" translate="yes" xml:space="preserve">
          <source>Returns a term where each collection of annotations &lt;code&gt;Anno&lt;/code&gt; of the nodes of the &lt;code&gt;erl_parse&lt;/code&gt; tree &lt;code&gt;Abstr&lt;/code&gt; is replaced by the term returned by &lt;code&gt;&lt;a href=&quot;erl_anno#to_term-1&quot;&gt; erl_anno:to_term(Anno)&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;erl_parse&lt;/code&gt; tree is traversed in a depth-first, left-to-right fashion.</source>
          <target state="translated">&lt;code&gt;erl_parse&lt;/code&gt; ツリー &lt;code&gt;Abstr&lt;/code&gt; のノードの注釈 &lt;code&gt;Anno&lt;/code&gt; の各コレクションが、 &lt;code&gt;&lt;a href=&quot;erl_anno#to_term-1&quot;&gt; erl_anno:to_term(Anno)&lt;/a&gt;&lt;/code&gt; によって返される用語に置き換えられる用語を返します。 &lt;code&gt;erl_parse&lt;/code&gt; のツリーは深さ優先、左から右への方法で横断されます。</target>
        </trans-unit>
        <trans-unit id="b859ce68b1d8adca07b2965536d637ec8cadea58" translate="yes" xml:space="preserve">
          <source>Returns a term where each collection of annotations &lt;code&gt;Anno&lt;/code&gt; of the nodes of the &lt;code&gt;erl_parse&lt;/code&gt; tree &lt;code&gt;Abstr&lt;/code&gt; is replaced by the term returned by &lt;code&gt;&lt;a href=&quot;erl_anno#to_term-1&quot;&gt;erl_anno:to_term(Anno)&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;erl_parse&lt;/code&gt; tree is traversed in a depth-first, left-to-right fashion.</source>
          <target state="translated">&lt;code&gt;erl_parse&lt;/code&gt; ツリー &lt;code&gt;Abstr&lt;/code&gt; のノードの注釈 &lt;code&gt;Anno&lt;/code&gt; の各コレクションが &lt;code&gt;&lt;a href=&quot;erl_anno#to_term-1&quot;&gt;erl_anno:to_term(Anno)&lt;/a&gt;&lt;/code&gt; によって返された用語に置き換えられた用語を返します。 &lt;code&gt;erl_parse&lt;/code&gt; のツリーは深さ優先、左から右への方法で横断されます。</target>
        </trans-unit>
        <trans-unit id="e42dc51bd19a435d1ed15dfb6ce6f69261d199cf" translate="yes" xml:space="preserve">
          <source>Returns a triple of sets:</source>
          <target state="translated">セットのトリプルを返します。</target>
        </trans-unit>
        <trans-unit id="735e0414a28d09eb877ff1287020a8fec4ca7190" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{Continuation2, Terms, Badbytes}&lt;/code&gt; if the log is opened in read only mode and the read chunk is corrupt. &lt;code&gt;Badbytes&lt;/code&gt; indicates the number of non-Erlang terms found in the chunk. Notice that the log is not repaired.</source>
          <target state="translated">ログが読み取り専用モードで開かれていて、読み取りチャンクが破損している場合は、タプル &lt;code&gt;{Continuation2, Terms, Badbytes}&lt;/code&gt; 返します。 &lt;code&gt;Badbytes&lt;/code&gt; は、チャンクで見つかった非Erlang用語の数を示します。ログは修復されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="705d98017c54a4145d8945773c510ff675589920" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{Continuation2, Terms}&lt;/code&gt;, where &lt;code&gt;Terms&lt;/code&gt; is a list of terms found in the log. &lt;code&gt;Continuation2&lt;/code&gt; is yet another continuation that must be passed on to any subsequent calls to &lt;code&gt;chunk()&lt;/code&gt;. With a series of calls to &lt;code&gt;chunk()&lt;/code&gt;, it is then possible to extract all terms from a log.</source>
          <target state="translated">タプル &lt;code&gt;{Continuation2, Terms}&lt;/code&gt; 返します。ここで、 &lt;code&gt;Terms&lt;/code&gt; はログで見つかった用語のリストです。 &lt;code&gt;Continuation2&lt;/code&gt; は、後続の &lt;code&gt;chunk()&lt;/code&gt; の呼び出しに渡す必要があるさらに別の継続です。 &lt;code&gt;chunk()&lt;/code&gt; への一連の呼び出しにより、ログからすべての用語を抽出することが可能になります。</target>
        </trans-unit>
        <trans-unit id="3e6586d9f3ce82931b21b60b27dd393b23b35e61" translate="yes" xml:space="preserve">
          <source>Returns a tuple &lt;code&gt;{ok, Value}&lt;/code&gt;, where &lt;code&gt;Value&lt;/code&gt; is the value associated with &lt;code&gt;Key&lt;/code&gt;, or &lt;code&gt;error&lt;/code&gt; if no value is associated with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">タプル &lt;code&gt;{ok, Value}&lt;/code&gt; 返します。ここで、 &lt;code&gt;Value&lt;/code&gt; は &lt;code&gt;Key&lt;/code&gt; に関連付けられた値、または &lt;code&gt;Map&lt;/code&gt; で &lt;code&gt;Key&lt;/code&gt; に関連付けられた値がない場合は &lt;code&gt;error&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="2607e69fa01e875df820f574c7f74fb2cd670568" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the binaries that are the result of splitting &lt;code&gt;Bin&lt;/code&gt; into two parts at position &lt;code&gt;Pos&lt;/code&gt;. This is not a destructive operation. After the operation, there are three binaries altogether. Example:</source>
          <target state="translated">位置 &lt;code&gt;Pos&lt;/code&gt; で &lt;code&gt;Bin&lt;/code&gt; を2つの部分に分割した結果であるバイナリを含むタプルを返します。これは破壊的な操作ではありません。操作後、3つのバイナリがすべて存在します。例：</target>
        </trans-unit>
        <trans-unit id="9a953fe642e9ea0605f4fff70a26b2507c1b3aa6" translate="yes" xml:space="preserve">
          <source>Returns a tuple containing the name of the global group that the local node belongs to, and the list of all other known group names. Returns &lt;code&gt;undefined&lt;/code&gt; if no global groups are defined.</source>
          <target state="translated">ローカルノードが属するグローバルグループの名前と、他のすべての既知のグループ名のリストを含むタプルを返します。グローバルグループが定義されてい &lt;code&gt;undefined&lt;/code&gt; 場合は、undefinedを返します。</target>
        </trans-unit>
        <trans-unit id="8232215373c041489cdb2744c563121a995f6acf" translate="yes" xml:space="preserve">
          <source>Returns a tuple corresponding to &lt;code&gt;List&lt;/code&gt;, for example</source>
          <target state="translated">たとえば、 &lt;code&gt;List&lt;/code&gt; に対応するタプルを返します</target>
        </trans-unit>
        <trans-unit id="8be6168849e8fc6888196588072087f0076f61c3" translate="yes" xml:space="preserve">
          <source>Returns a tuple that is a copy of argument &lt;code&gt;Tuple1&lt;/code&gt; with the element specified by integer argument &lt;code&gt;Index&lt;/code&gt; (the first element is the element with index 1) replaced by argument &lt;code&gt;Value&lt;/code&gt;, for example:</source>
          <target state="translated">整数引数 &lt;code&gt;Index&lt;/code&gt; で指定された要素（最初の要素はインデックス1の要素）を引数 &lt;code&gt;Value&lt;/code&gt; で置き換えた引数 &lt;code&gt;Tuple1&lt;/code&gt; のコピーであるタプルを返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="6a7c335b82027fd8c045fffe77c36ccbff0c13c7" translate="yes" xml:space="preserve">
          <source>Returns a two-tuple describing the C compiler used when compiling the runtime system. The first element is an atom describing the name of the compiler, or &lt;code&gt;undefined&lt;/code&gt; if unknown. The second element is a term describing the version of the compiler, or &lt;code&gt;undefined&lt;/code&gt; if unknown.</source>
          <target state="translated">ランタイムシステムのコンパイル時に使用されるCコンパイラを説明する2つのタプルを返します。最初の要素は、コンパイラの名前を説明するアトムです。不明の場合は &lt;code&gt;undefined&lt;/code&gt; です。2番目の要素はコンパイラのバージョンを説明する用語であり、不明な場合は &lt;code&gt;undefined&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3c389771eefa736d7a360710a6c8bc6d38e3527a" translate="yes" xml:space="preserve">
          <source>Returns a type descriptor for a data constructor node. (Cf. &lt;code&gt;is_data/1&lt;/code&gt;.) This is mainly useful for comparing types and for constructing new nodes of the same type (cf. &lt;code&gt;make_data/2&lt;/code&gt;). If &lt;code&gt;Node&lt;/code&gt; represents an integer, floating-point number, atom or empty list, the result is &lt;code&gt;{atomic, Value}&lt;/code&gt;, where &lt;code&gt;Value&lt;/code&gt; is the value of &lt;code&gt;concrete(Node)&lt;/code&gt;, otherwise the result is either &lt;code&gt;cons&lt;/code&gt; or &lt;code&gt;tuple&lt;/code&gt;.</source>
          <target state="translated">データコンストラクタノードの型記述子を返します。（Cf. &lt;code&gt;is_data/1&lt;/code&gt; 。）これは主に、タイプを比較したり、同じタイプの新しいノードを構築したりする場合に役立ちます（ &lt;code&gt;make_data/2&lt;/code&gt; を参照）。場合 &lt;code&gt;Node&lt;/code&gt; 、整数、浮動小数点数、原子または空のリストを示し、結果は &lt;code&gt;{atomic, Value}&lt;/code&gt; 、 &lt;code&gt;Value&lt;/code&gt; の値であり、 &lt;code&gt;concrete(Node)&lt;/code&gt; そうでなければ結果はどちらかであり、 &lt;code&gt;cons&lt;/code&gt; または &lt;code&gt;tuple&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bd17a1db0a2825afcbae7fb15829012b0f42afe" translate="yes" xml:space="preserve">
          <source>Returns a unique integer with the same properties as specified by &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt; erlang:unique_integer/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt; erlang:unique_integer/1&lt;/a&gt;&lt;/code&gt; で指定されたものと同じプロパティを持つ一意の整数を返します。</target>
        </trans-unit>
        <trans-unit id="5740db8c28697d1afcbc4e308050a43c877c7fde" translate="yes" xml:space="preserve">
          <source>Returns a unique integer with the same properties as specified by &lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;erlang:unique_integer/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#unique_integer-1&quot;&gt;erlang:unique_integer/1&lt;/a&gt;&lt;/code&gt; で指定されたものと同じプロパティを持つ一意の整数を返します。</target>
        </trans-unit>
        <trans-unit id="92166f03715e25e6472246acbbedab43f98787f8" translate="yes" xml:space="preserve">
          <source>Returns a user-named atom which is not already in the set &lt;code&gt;Used&lt;/code&gt;. The atom is generated by applying the given &lt;code&gt;Function&lt;/code&gt; to a generated integer. Integers are generated using an algorithm which tries to keep the names randomly distributed within a reasonably small range relative to the number of elements in the set.</source>
          <target state="translated">セットにまだ &lt;code&gt;Used&lt;/code&gt; されていないユーザー指定のアトムを返します。アトムは、生成された整数に指定された &lt;code&gt;Function&lt;/code&gt; を適用することによって生成されます。整数は、セット内の要素の数に対して比較的小さな範囲内で名前をランダムに分散させようとするアルゴリズムを使用して生成されます。</target>
        </trans-unit>
        <trans-unit id="4327f3d264bcd8b0ae95ab1f5ed7bdf5e84393b8" translate="yes" xml:space="preserve">
          <source>Returns a value &lt;code&gt;Value&lt;/code&gt; from node with key &lt;code&gt;Key&lt;/code&gt; and new &lt;code&gt;Tree2&lt;/code&gt; without the node with this value. Assumes that the node with key is present in the tree, crashes otherwise.</source>
          <target state="translated">キー &lt;code&gt;Key&lt;/code&gt; を持つノードから値 &lt;code&gt;Value&lt;/code&gt; を返し、この値を持つノードなしで新しい &lt;code&gt;Tree2&lt;/code&gt; を返します。キーを持つノードがツリーに存在すると想定し、そうでない場合はクラッシュします。</target>
        </trans-unit>
        <trans-unit id="4168e52d6544b4b42840b6372f8f622c6f448253" translate="yes" xml:space="preserve">
          <source>Returns a value &lt;code&gt;Value&lt;/code&gt; from node with key &lt;code&gt;Key&lt;/code&gt; and new &lt;code&gt;Tree2&lt;/code&gt; without the node with this value. Returns &lt;code&gt;error&lt;/code&gt; if the node with the key is not present in the tree.</source>
          <target state="translated">キー &lt;code&gt;Key&lt;/code&gt; を持つノードから値 &lt;code&gt;Value&lt;/code&gt; を返し、この値を持つノードなしで新しい &lt;code&gt;Tree2&lt;/code&gt; を返します。キーを持つノードがツリーに存在しない場合、 &lt;code&gt;error&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="a1642a1e6b772de93938827c947cfd1dbe257341" translate="yes" xml:space="preserve">
          <source>Returns a value identifying the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt; time warp mode&lt;/a&gt;&lt;/code&gt; that is used:</source>
          <target state="translated">使用される &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt; time warp mode&lt;/a&gt;&lt;/code&gt; を識別する値を返します。</target>
        </trans-unit>
        <trans-unit id="e826161e82e3562160201bc702c5e477b3e85c5f" translate="yes" xml:space="preserve">
          <source>Returns a value identifying the &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt;time warp mode&lt;/a&gt;&lt;/code&gt; that is used:</source>
          <target state="translated">使用される &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt;time warp mode&lt;/a&gt;&lt;/code&gt; を識別する値を返します。</target>
        </trans-unit>
        <trans-unit id="aa4ef8038e74b148a39815f7b1d4b8bc6534e619" translate="yes" xml:space="preserve">
          <source>Returns all AGENT-CAPABILITY statements in the sysORTable in the agent. This table is defined in the SNMPv2-MIB.</source>
          <target state="translated">エージェント内のsysORTable内のすべてのAGENT-CAPABILITY文を返します。このテーブルはSNMPv2-MIBで定義されています。</target>
        </trans-unit>
        <trans-unit id="6b71fa8a588a560f59b9200a22d57a388590704f" translate="yes" xml:space="preserve">
          <source>Returns all command-line flags and the system-defined flags, see &lt;code&gt;&lt;a href=&quot;#get_argument-1&quot;&gt;get_argument/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">すべてのコマンドラインフラグとシステム定義のフラグを返します &lt;code&gt;&lt;a href=&quot;#get_argument-1&quot;&gt;get_argument/1&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="b737e570aa8cd4407289cf34f69037c654103e1c" translate="yes" xml:space="preserve">
          <source>Returns all default or all supported (except anonymous), or all anonymous cipher suites for a TLS version</source>
          <target state="translated">TLS バージョンのすべてのデフォルトまたはサポートされている (anonymous を除く)、またはすべての anonymous 暗号スイートを返します。</target>
        </trans-unit>
        <trans-unit id="f326622232be4bf94f1c1540859768938351646c" translate="yes" xml:space="preserve">
          <source>Returns all objects in slot &lt;code&gt;I&lt;/code&gt; of table &lt;code&gt;Tab&lt;/code&gt;. A table can be traversed by repeatedly calling the function, starting with the first slot &lt;code&gt;I=0&lt;/code&gt; and ending when &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned. If argument &lt;code&gt;I&lt;/code&gt; is out of range, the function fails with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; のスロット &lt;code&gt;I&lt;/code&gt; にあるすべてのオブジェクトを返します。最初のスロット &lt;code&gt;I=0&lt;/code&gt; から始まり、 &lt;code&gt;'$end_of_table'&lt;/code&gt; が返されたときに終了する関数を繰り返し呼び出すことで、テーブルをトラバースできます。引数 &lt;code&gt;I&lt;/code&gt; が範囲外の場合、関数は &lt;code&gt;badarg&lt;/code&gt; の理由で失敗します。</target>
        </trans-unit>
        <trans-unit id="40fdfa6f155034c29e901dff0a2e3f5fcaebb299" translate="yes" xml:space="preserve">
          <source>Returns all processes containing &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; of the specific drivers as a list of tuples &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt;, where &lt;code&gt;integer()&lt;/code&gt; denotes the number of users in process &lt;code&gt;pid()&lt;/code&gt;.</source>
          <target state="translated">特定のドライバーの &lt;code&gt;&lt;a href=&quot;#users&quot;&gt;users&lt;/a&gt;&lt;/code&gt; を含むすべてのプロセスをタプルのリスト &lt;code&gt;{pid(),integer() &amp;gt;= 0}&lt;/code&gt; として返します。ここで、 &lt;code&gt;integer()&lt;/code&gt; はプロセス &lt;code&gt;pid()&lt;/code&gt; のユーザー数を示します。</target>
        </trans-unit>
        <trans-unit id="7def8e73482ec8d94593909e53032f3b00abdc70" translate="yes" xml:space="preserve">
          <source>Returns all processes in the group &lt;code&gt;Name&lt;/code&gt;. Processes are returned in no specific order. This function is optimised for speed.</source>
          <target state="translated">グループ &lt;code&gt;Name&lt;/code&gt; 内のすべてのプロセスを返します。プロセスは特定の順序で返されません。この機能は速度が最適化されています。</target>
        </trans-unit>
        <trans-unit id="bc3987f827fa9d8780caf6488acf737e109e3252" translate="yes" xml:space="preserve">
          <source>Returns all processes in the group &lt;code&gt;Name&lt;/code&gt;. This function is to be used from within a client function that accesses the group. It is therefore optimized for speed.</source>
          <target state="translated">グループ &lt;code&gt;Name&lt;/code&gt; 内のすべてのプロセスを返します。この関数は、グループにアクセスするクライアント関数内から使用されます。したがって、速度が最適化されます。</target>
        </trans-unit>
        <trans-unit id="ed3dae6d3a54c3ec31d773b576ef24181831d923" translate="yes" xml:space="preserve">
          <source>Returns all processes running on the local node in the group &lt;code&gt;Name&lt;/code&gt;. Processes are returned in no specific order. This function is optimised for speed.</source>
          <target state="translated">グループ &lt;code&gt;Name&lt;/code&gt; のローカルノードで実行されているすべてのプロセスを返します。プロセスは特定の順序で返されません。この機能は速度が最適化されています。</target>
        </trans-unit>
        <trans-unit id="6c6d0be05d0408e52a3786054fb8ceaae26e7c51" translate="yes" xml:space="preserve">
          <source>Returns all processes running on the local node in the group &lt;code&gt;Name&lt;/code&gt;. This function is to be used from within a client function that accesses the group. It is therefore optimized for speed.</source>
          <target state="translated">ローカルノードで実行されているすべてのプロセスをグループ &lt;code&gt;Name&lt;/code&gt; に返します。この関数は、グループにアクセスするクライアント関数内から使用されます。したがって、速度が最適化されます。</target>
        </trans-unit>
        <trans-unit id="423be9deda973d3e785dc9a3df60a71f657ed121" translate="yes" xml:space="preserve">
          <source>Returns all releases known to the release handler.</source>
          <target state="translated">リリースハンドラが知っているすべてのリリースを返します。</target>
        </trans-unit>
        <trans-unit id="5d902f70d2cba8313a80ff7bb8dec6b22e7149e8" translate="yes" xml:space="preserve">
          <source>Returns all releases, known to the release handler, of a specific status.</source>
          <target state="translated">特定の状態のリリースハンドラが知っているすべてのリリースを返します。</target>
        </trans-unit>
        <trans-unit id="9eceb21130e5a4945ba8d3212b8d59565f94dea9" translate="yes" xml:space="preserve">
          <source>Returns all test cases in the specified suite.</source>
          <target state="translated">指定したスイート内のすべてのテストケースを返します。</target>
        </trans-unit>
        <trans-unit id="b137f4cee723eb59e69759cc5efdca3baddad0b5" translate="yes" xml:space="preserve">
          <source>Returns all time recorded for all threads.</source>
          <target state="translated">すべてのスレッドについて記録されたすべての時間を返します。</target>
        </trans-unit>
        <trans-unit id="2aab69100467c522a9b501f13e8c52ffccfc60c0" translate="yes" xml:space="preserve">
          <source>Returns all time spent doing work for all threads, i.e. all time not spent in the &lt;code&gt;sleep&lt;/code&gt; state.</source>
          <target state="translated">すべてのスレッドの作業に費やされたすべての時間、つまり &lt;code&gt;sleep&lt;/code&gt; 状態で費やされなかったすべての時間を返します。</target>
        </trans-unit>
        <trans-unit id="76e788e3283c77df8c4519c8e3d9bb04ca1d332a" translate="yes" xml:space="preserve">
          <source>Returns all values associated with the command-line user flag &lt;code&gt;Flag&lt;/code&gt;. If &lt;code&gt;Flag&lt;/code&gt; is provided several times, each &lt;code&gt;Values&lt;/code&gt; is returned in preserved order. Example:</source>
          <target state="translated">コマンドラインユーザーフラグ &lt;code&gt;Flag&lt;/code&gt; に関連付けられたすべての値を返します。 &lt;code&gt;Flag&lt;/code&gt; が複数回指定されている場合、各 &lt;code&gt;Values&lt;/code&gt; は保持された順序で返されます。例：</target>
        </trans-unit>
        <trans-unit id="7d9c23aad375e2d0498bad2128a29c00b63d04ec" translate="yes" xml:space="preserve">
          <source>Returns all vertices of digraph &lt;code&gt;Digraph&lt;/code&gt;. The order is given by a &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; of the digraph, collecting visited vertices in postorder. More precisely, the vertices visited while searching from an arbitrarily chosen vertex are collected in postorder, and all those collected vertices are placed before the subsequently visited vertices.</source>
          <target state="translated">&lt;code&gt;Digraph&lt;/code&gt; すべての頂点を返します。順序は、有向グラフの &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; によって与えられ、訪問した頂点をポストオーダーで収集します。より正確には、任意に選択された頂点から検索中にアクセスされた頂点は後順で収集され、収集されたすべての頂点は、次にアクセスされた頂点の前に配置されます。</target>
        </trans-unit>
        <trans-unit id="d29763c44b5655dd5108bfb772f8ccbf16f29fb4" translate="yes" xml:space="preserve">
          <source>Returns all vertices of digraph &lt;code&gt;Digraph&lt;/code&gt;. The order is given by a &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; of the digraph, collecting visited vertices in preorder.</source>
          <target state="translated">&lt;code&gt;Digraph&lt;/code&gt; すべての頂点を返します。順序は有向グラフの &lt;code&gt;&lt;a href=&quot;#depth_first_traversal&quot;&gt;depth-first traversal&lt;/a&gt;&lt;/code&gt; によって与えられ、訪問した頂点を事前順序で収集します。</target>
        </trans-unit>
        <trans-unit id="deeeefa9f1f56581cddb1a5fc8454aa4c6ab5512" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;#empty_digraph&quot;&gt;empty digraph&lt;/a&gt;&lt;/code&gt; with properties according to the options in &lt;code&gt;Type&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Type&lt;/code&gt; のオプションに応じたプロパティを持つ &lt;code&gt;&lt;a href=&quot;#empty_digraph&quot;&gt;empty digraph&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="48830b738a29d123c309402c4c3c334f501d41c9" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;erlang#now-0&quot;&gt; erlang:now()&lt;/a&gt;&lt;/code&gt; time stamp.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#now-0&quot;&gt; erlang:now()&lt;/a&gt;&lt;/code&gt; タイムスタンプを返します。</target>
        </trans-unit>
        <trans-unit id="42e337d2e9aa3d0219a49a57a1c45b799cdf19d1" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;&lt;a href=&quot;erlang#now-0&quot;&gt;erlang:now()&lt;/a&gt;&lt;/code&gt; time stamp.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#now-0&quot;&gt;erlang:now()&lt;/a&gt;&lt;/code&gt; タイムスタンプを返します。</target>
        </trans-unit>
        <trans-unit id="f34e75efc590885c0884151454122b4827e6f119" translate="yes" xml:space="preserve">
          <source>Returns an &lt;code&gt;erl_parse&lt;/code&gt;-compatible representation of a syntax tree, if possible. If &lt;code&gt;Tree&lt;/code&gt; represents a well-formed Erlang program or expression, the conversion should work without problems. Typically, &lt;code&gt;&lt;a href=&quot;#is_tree-1&quot;&gt;is_tree/1&lt;/a&gt;&lt;/code&gt; yields &lt;code&gt;true&lt;/code&gt; if conversion failed (i.e., the result is still an abstract syntax tree), and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;erl_parse&lt;/code&gt; 、構文ツリーのerl_parse互換の表現を返します。場合は &lt;code&gt;Tree&lt;/code&gt; 整形式Erlangのプログラムや式を表し、変換が問題なく動作するはずです。一般的に、 &lt;code&gt;&lt;a href=&quot;#is_tree-1&quot;&gt;is_tree/1&lt;/a&gt;&lt;/code&gt; 利回り &lt;code&gt;true&lt;/code&gt; 変換が失敗した場合（つまり、結果はまだ抽象構文木である）、そして &lt;code&gt;false&lt;/code&gt; そう。</target>
        </trans-unit>
        <trans-unit id="8bef83f584affe71decd895a1c3671b84dfef6ee" translate="yes" xml:space="preserve">
          <source>Returns an Erlang binary object.</source>
          <target state="translated">Erlangのバイナリオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="ffa27dc7183e3e80aadb934affbacb1778496241" translate="yes" xml:space="preserve">
          <source>Returns an Erlang binary term, or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; was not an I/O list.</source>
          <target state="translated">Erlangバイナリ項を返します。 &lt;code&gt;list&lt;/code&gt; がI / Oリストでない場合は &lt;code&gt;NULL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b646df828c5e4677e887302ec677c85ad056f8d9" translate="yes" xml:space="preserve">
          <source>Returns an Erlang float object with the value specified in &lt;code&gt;f&lt;/code&gt; or &lt;code&gt;NULL&lt;/code&gt; if &lt;code&gt;f&lt;/code&gt; is not finite.</source>
          <target state="translated">値を返しますアーランfloatオブジェクトはで指定された &lt;code&gt;f&lt;/code&gt; または &lt;code&gt;NULL&lt;/code&gt; 場合 &lt;code&gt;f&lt;/code&gt; が有限ではありません。</target>
        </trans-unit>
        <trans-unit id="b7381bdbb30a79dae14026685292b788098b56fd" translate="yes" xml:space="preserve">
          <source>Returns an Erlang integer object with the value specified in &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; で指定された値を持つErlang整数オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="b3193ba7e758d6b8057578ba99e0142b88f45810" translate="yes" xml:space="preserve">
          <source>Returns an Erlang list corresponding to the original list minus the first element, or &lt;code&gt;NULL&lt;/code&gt; pointer if &lt;code&gt;list&lt;/code&gt; was not a list.</source>
          <target state="translated">元のリストから最初の要素を引いたものに対応するErlangリスト、または &lt;code&gt;list&lt;/code&gt; がリストでない場合は &lt;code&gt;NULL&lt;/code&gt; ポインターを返します。</target>
        </trans-unit>
        <trans-unit id="51e2d39adb2a9582d19f8d4bb2040aea7b343702" translate="yes" xml:space="preserve">
          <source>Returns an Erlang list object corresponding to the character sequence in &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; の文字シーケンスに対応するErlangリストオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="b7ea18929e00b770980d3d6f6932dda99f8f2612" translate="yes" xml:space="preserve">
          <source>Returns an Erlang list.</source>
          <target state="translated">Erlangのリストを返します。</target>
        </trans-unit>
        <trans-unit id="57d486ab439fc0e78b3a2e39a55e17536e503e9d" translate="yes" xml:space="preserve">
          <source>Returns an Erlang pid object.</source>
          <target state="translated">Erlangのpidオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="f94eb09a637da7cca6f9c95508104baaacab25f6" translate="yes" xml:space="preserve">
          <source>Returns an Erlang port object.</source>
          <target state="translated">Erlangのポートオブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="69b6822eed0645367b44f76b526363c80e9d9346" translate="yes" xml:space="preserve">
          <source>Returns an Erlang reference object.</source>
          <target state="translated">Erlangの参照オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="a590f7f64d0c6dc423d6529eacf20f62f1f3ca21" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term containing an atom. Notice that it is the caller's responsibility to ensure that &lt;code&gt;string&lt;/code&gt; contains a valid name for an atom.</source>
          <target state="translated">アトムを含むErlang用語を返します。 &lt;code&gt;string&lt;/code&gt; にアトムの有効な名前が含まれていることを確認するのは呼び出し側の責任であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b10d603538bb7e8eb3305090172876b919d95fd9" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term corresponding to the head head element in the list, or a &lt;code&gt;NULL&lt;/code&gt; pointer if &lt;code&gt;list&lt;/code&gt; was not a list.</source>
          <target state="translated">リストの先頭要素に対応するErlang用語を返します。 &lt;code&gt;list&lt;/code&gt; がリストでない場合は &lt;code&gt;NULL&lt;/code&gt; ポインターを返します。</target>
        </trans-unit>
        <trans-unit id="095f11364bb01e494b56620a202b5541d815ff60" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term that is an example of a valid Erlang representation of a value of the &lt;code&gt;ASN.1&lt;/code&gt; type &lt;code&gt;Type&lt;/code&gt;. The value is a random value and subsequent calls to this function will for most types return different values.</source>
          <target state="translated">&lt;code&gt;ASN.1&lt;/code&gt; タイプ &lt;code&gt;Type&lt;/code&gt; の値の有効なErlang表現の例であるErlang用語を返します。値はランダムな値であり、この関数への後続の呼び出しは、ほとんどのタイプで異なる値を返します。</target>
        </trans-unit>
        <trans-unit id="53f0661f88a4fb5e9cafcb5a1c38c68a078b4742" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term that is the result of decoding binary object &lt;code&gt;Binary&lt;/code&gt;, which must be encoded according to the &lt;code&gt; Erlang external term format&lt;/code&gt;.</source>
          <target state="translated">バイナリオブジェクト &lt;code&gt;Binary&lt;/code&gt; をデコードした結果であるErlang用語を返します。これは、 &lt;code&gt; Erlang external term format&lt;/code&gt; に従ってエンコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="c806840578ee1deb2041df9cee1666f482911593" translate="yes" xml:space="preserve">
          <source>Returns an Erlang term that is the result of decoding binary object &lt;code&gt;Binary&lt;/code&gt;, which must be encoded according to the &lt;code&gt;Erlang external term format&lt;/code&gt;.</source>
          <target state="translated">バイナリオブジェクト &lt;code&gt;Binary&lt;/code&gt; をデコードした結果であるErlang用語を返します。これは、 &lt;code&gt;Erlang external term format&lt;/code&gt; に従ってエンコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="4161f95ef9693af88f0334a08b7de8fe83886a31" translate="yes" xml:space="preserve">
          <source>Returns an Erlang unsigned integer object with the value specified in &lt;code&gt;n&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; で指定された値を持つErlang符号なし整数オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="b163f688f77c348943e0af13fe017fd1f9afb89a" translate="yes" xml:space="preserve">
          <source>Returns an Erlang variable object with the name &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">name &lt;code&gt;name&lt;/code&gt; Erlang変数オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="72560455363d77db550fcad32e03d01e8e464568" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the build type of the runtime system. This is normally the atom &lt;code&gt;opt&lt;/code&gt; for optimized. Other possible return values are &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;purify&lt;/code&gt;, &lt;code&gt;quantify&lt;/code&gt;, &lt;code&gt;purecov&lt;/code&gt;, &lt;code&gt;gcov&lt;/code&gt;, &lt;code&gt;valgrind&lt;/code&gt;, &lt;code&gt;gprof&lt;/code&gt;, and &lt;code&gt;lcnt&lt;/code&gt;. Possible return values can be added or removed at any time without prior notice.</source>
          <target state="translated">ランタイムシステムのビルドタイプを説明するアトムを返します。これは通常、最適化を &lt;code&gt;opt&lt;/code&gt; するアトムです。他の可能な戻り値は &lt;code&gt;debug&lt;/code&gt; 、 &lt;code&gt;purify&lt;/code&gt; 、 &lt;code&gt;quantify&lt;/code&gt; 、 &lt;code&gt;purecov&lt;/code&gt; 、 &lt;code&gt;gcov&lt;/code&gt; の、 &lt;code&gt;valgrind&lt;/code&gt; の、 &lt;code&gt;gprof&lt;/code&gt; は、と &lt;code&gt;lcnt&lt;/code&gt; 。戻り値は、事前の通知なしにいつでも追加または削除できます。</target>
        </trans-unit>
        <trans-unit id="f04a1f5f0a498f6dd001e66e2a7cfac6343a21d1" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the dynamic trace framework compiled into the virtual machine. It can be &lt;code&gt;dtrace&lt;/code&gt;, &lt;code&gt;systemtap&lt;/code&gt;, or &lt;code&gt;none&lt;/code&gt;. For a commercial or standard build, it is always &lt;code&gt;none&lt;/code&gt;. The other return values indicate a custom configuration (for example, &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt;). For more information about dynamic tracing, see &lt;code&gt; dyntrace(3)&lt;/code&gt; manual page and the &lt;code&gt;README.dtrace&lt;/code&gt;/&lt;code&gt;README.systemtap&lt;/code&gt; files in the Erlang source code top directory.</source>
          <target state="translated">仮想マシンにコンパイルされた動的トレースフレームワークを説明するアトムを返します。それはすることができ &lt;code&gt;dtrace&lt;/code&gt; は、 &lt;code&gt;systemtap&lt;/code&gt; 、または &lt;code&gt;none&lt;/code&gt; 。商用または標準ビルドの場合、常に &lt;code&gt;none&lt;/code&gt; です。その他の戻り値は、カスタム構成を示します（たとえば、。 &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt; ）。ダイナミックトレースの詳細については、 &lt;code&gt; dyntrace(3)&lt;/code&gt; マニュアルページと &lt;code&gt;README.dtrace&lt;/code&gt; / &lt;code&gt;README.systemtap&lt;/code&gt; のErlangのソースコードの最上位ディレクトリ内のファイルを。</target>
        </trans-unit>
        <trans-unit id="003054975617245e964de16aa3f1604dc487dd8a" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the dynamic trace framework compiled into the virtual machine. It can be &lt;code&gt;dtrace&lt;/code&gt;, &lt;code&gt;systemtap&lt;/code&gt;, or &lt;code&gt;none&lt;/code&gt;. For a commercial or standard build, it is always &lt;code&gt;none&lt;/code&gt;. The other return values indicate a custom configuration (for example, &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt;). For more information about dynamic tracing, see &lt;code&gt;dyntrace(3)&lt;/code&gt; manual page and the &lt;code&gt;README.dtrace&lt;/code&gt;/&lt;code&gt;README.systemtap&lt;/code&gt; files in the Erlang source code top directory.</source>
          <target state="translated">仮想マシンにコンパイルされた動的トレースフレームワークを説明するアトムを返します。それはすることができ &lt;code&gt;dtrace&lt;/code&gt; は、 &lt;code&gt;systemtap&lt;/code&gt; 、または &lt;code&gt;none&lt;/code&gt; 。商用または標準ビルドの場合は、常に &lt;code&gt;none&lt;/code&gt; です。その他の戻り値は、カスタム構成を示します（たとえば、。 &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt; ）。動的トレースの詳細については、 &lt;code&gt;dyntrace(3)&lt;/code&gt; マニュアルページと、Erlangソースコードのトップディレクトリにある &lt;code&gt;README.dtrace&lt;/code&gt; / &lt;code&gt;README.systemtap&lt;/code&gt; ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="d9bb4cea76db43aeac51826cd029247df700ada1" translate="yes" xml:space="preserve">
          <source>Returns an atom describing the mode of the code server: &lt;code&gt;interactive&lt;/code&gt; or &lt;code&gt;embedded&lt;/code&gt;.</source>
          <target state="translated">コードサーバーのモードを説明するアトムを返します： &lt;code&gt;interactive&lt;/code&gt; または &lt;code&gt;embedded&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4b51973d541e4b5b197b534360e4f378cd9f64dd" translate="yes" xml:space="preserve">
          <source>Returns an atom given a name &lt;code&gt;string&lt;/code&gt;. The atom is created and does not change, so the return value can be saved and reused, which is faster than looking up the atom several times.</source>
          <target state="translated">名前 &lt;code&gt;string&lt;/code&gt; を指定してアトムを返します。アトムが作成され、変更されないため、戻り値を保存して再利用できます。これは、アトムを数回検索するよりも高速です。</target>
        </trans-unit>
        <trans-unit id="7a85323f1923a2f1729a520bc4b67feb73350624" translate="yes" xml:space="preserve">
          <source>Returns an atom representing the module name.</source>
          <target state="translated">モジュール名を表すアトムを返します。</target>
        </trans-unit>
        <trans-unit id="d67202c4124aa04da3d82fb6d5a23abce5ac778e" translate="yes" xml:space="preserve">
          <source>Returns an atom which is not already in the set &lt;code&gt;Used&lt;/code&gt;. This is equivalent to &lt;code&gt;new_variable_name(Function, Used)&lt;/code&gt;, where &lt;code&gt;Function&lt;/code&gt; maps a given integer &lt;code&gt;N&lt;/code&gt; to the atom whose name consists of &quot;&lt;code&gt;V&lt;/code&gt;&quot; followed by the numeral for &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">セットにまだ &lt;code&gt;Used&lt;/code&gt; されていないアトムを返します。これは &lt;code&gt;new_variable_name(Function, Used)&lt;/code&gt; と同等です。ここで、 &lt;code&gt;Function&lt;/code&gt; は、指定された整数 &lt;code&gt;N&lt;/code&gt; を、名前が「 &lt;code&gt;V&lt;/code&gt; 」とそれに続く &lt;code&gt;N&lt;/code&gt; の数字で構成されるアトムにマップします。</target>
        </trans-unit>
        <trans-unit id="988e838fe7d5aef0f6c0550a01971cd083666dd3" translate="yes" xml:space="preserve">
          <source>Returns an empty binding structure.</source>
          <target state="translated">空のバインディング構造体を返します。</target>
        </trans-unit>
        <trans-unit id="9d49703761470f70420cbdc828629bf9e5b1cb70" translate="yes" xml:space="preserve">
          <source>Returns an empty list if &lt;code&gt;cnt&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;cnt&lt;/code&gt; が0の場合、空のリストを返します。</target>
        </trans-unit>
        <trans-unit id="a708e1d41ae8898a5d41e3dd0d64120fa89116b1" translate="yes" xml:space="preserve">
          <source>Returns an empty queue.</source>
          <target state="translated">空のキューを返します。</target>
        </trans-unit>
        <trans-unit id="df37e4cd60f068eeb3d3ca2acc09e9fd502783b9" translate="yes" xml:space="preserve">
          <source>Returns an empty registry on success, otherwise &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">成功した場合は空のレジストリを返し、それ以外の場合は &lt;code&gt;NULL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="23161e8696beb077ca5ff7f8ffdb2f4971911821" translate="yes" xml:space="preserve">
          <source>Returns an integer &amp;lt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;lhs&lt;/code&gt; &amp;lt; &lt;code&gt;rhs&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;lhs&lt;/code&gt; = &lt;code&gt;rhs&lt;/code&gt;, and &amp;gt; &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;lhs&lt;/code&gt; &amp;gt; &lt;code&gt;rhs&lt;/code&gt;. Corresponds to the Erlang operators &lt;code&gt;==&lt;/code&gt;, &lt;code&gt;/=&lt;/code&gt;, &lt;code&gt;=&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;gt;=&lt;/code&gt;, and &lt;code&gt;&amp;gt;&lt;/code&gt; (but &lt;strong&gt;not&lt;/strong&gt;&lt;code&gt;=:=&lt;/code&gt; or &lt;code&gt;=/=&lt;/code&gt;).</source>
          <target state="translated">戻り整数&amp;lt; &lt;code&gt;0&lt;/code&gt; であれば &lt;code&gt;lhs&lt;/code&gt; &amp;lt; &lt;code&gt;rhs&lt;/code&gt; 、 &lt;code&gt;0&lt;/code&gt; であれば &lt;code&gt;lhs&lt;/code&gt; = &lt;code&gt;rhs&lt;/code&gt; 、及び&amp;gt; &lt;code&gt;0&lt;/code&gt; であれば &lt;code&gt;lhs&lt;/code&gt; &amp;gt; &lt;code&gt;rhs&lt;/code&gt; 。Erlangの演算子 &lt;code&gt;==&lt;/code&gt; 、 &lt;code&gt;/=&lt;/code&gt; 、 &lt;code&gt;=&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;gt;=&lt;/code&gt; 、 &lt;code&gt;&amp;gt;&lt;/code&gt; に対応します（ &lt;code&gt;=:=&lt;/code&gt; または &lt;code&gt;=/=&lt;/code&gt; に&lt;strong&gt;は対応しません&lt;/strong&gt;）。</target>
        </trans-unit>
        <trans-unit id="f1d9a5358491fa89656a3ef75ea3e77112b76c2c" translate="yes" xml:space="preserve">
          <source>Returns an integer by rounding &lt;code&gt;Number&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; を四捨五入して整数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="42e7c4b497727c29e3a60dab6ddb84c79055cbef" translate="yes" xml:space="preserve">
          <source>Returns an integer by truncating &lt;code&gt;Number&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; を切り捨てて整数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="fa6cd31e25fbf671dcdc524f0f8fdc2ab6e357b4" translate="yes" xml:space="preserve">
          <source>Returns an integer or float that is the arithmetical absolute value of &lt;code&gt;Float&lt;/code&gt; or &lt;code&gt;Int&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; または &lt;code&gt;Int&lt;/code&gt; の算術絶対値である整数または浮動小数点数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="34b43dc6d74cce530672601405bf2dc2dea6ebd0" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the number of active connections.</source>
          <target state="translated">アクティブな接続の数を表す整数値を返します。</target>
        </trans-unit>
        <trans-unit id="3b95eb5322f95f7378ff3b2b852274a22ae1b2e3" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the number of replies that has originated from this Erlang node and still are active (and therefore consumes system resources).</source>
          <target state="translated">この Erlang ノードから発信され、まだアクティブな (つまりシステムリソースを消費する)リプライの数を表す整数を返します。</target>
        </trans-unit>
        <trans-unit id="b98345e2c7b425ca817567c3203a95df510202a5" translate="yes" xml:space="preserve">
          <source>Returns an integer representing the number of requests that has originated from this Erlang node and still are active (and therefore consumes system resources).</source>
          <target state="translated">この Erlang ノードから発信されたリクエストのうち、まだアクティブなもの(つまりシステムリソースを消費するもの)の数を integer で返します。</target>
        </trans-unit>
        <trans-unit id="fa3be6822bf2f17b33b0118cdae4604c26865fd5" translate="yes" xml:space="preserve">
          <source>Returns an integer that is the number of bytes needed to contain &lt;code&gt;Bitstring&lt;/code&gt;. That is, if the number of bits in &lt;code&gt;Bitstring&lt;/code&gt; is not divisible by 8, the resulting number of bytes is rounded &lt;strong&gt;up&lt;/strong&gt;. Examples:</source>
          <target state="translated">&lt;code&gt;Bitstring&lt;/code&gt; を含めるために必要なバイト数である整数を返します。つまり、 &lt;code&gt;Bitstring&lt;/code&gt; のビット数が8で割り切れない場合、結果のバイト数は切り上げ&lt;strong&gt;られ&lt;/strong&gt;ます。例：</target>
        </trans-unit>
        <trans-unit id="a0ccc3445984cd8ca41ce2c94d384ac9dd3f4eb9" translate="yes" xml:space="preserve">
          <source>Returns an integer that is the number of elements in &lt;code&gt;Tuple&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Tuple&lt;/code&gt; の要素数である整数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="ad0adf24553b9086dfd682de31eca972d4b7c381" translate="yes" xml:space="preserve">
          <source>Returns an integer that is the size in bits of &lt;code&gt;Bitstring&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Bitstring&lt;/code&gt; のビット単位のサイズである整数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="762aa9ecbb62d3c742e303f6ee84a4d568033d71" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation in base &lt;code&gt;Base&lt;/code&gt; is &lt;code&gt;Binary&lt;/code&gt;, for example:</source>
          <target state="translated">ベース &lt;code&gt;Base&lt;/code&gt; のテキスト表現が &lt;code&gt;Binary&lt;/code&gt; である整数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="e5a0a03b4d74a10e949a947ee296fd9d8ea4f617" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation in base &lt;code&gt;Base&lt;/code&gt; is &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">ベース &lt;code&gt;Base&lt;/code&gt; のテキスト表現が &lt;code&gt;String&lt;/code&gt; である整数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="e3560c665353cecfc79e5afa38a4b5bae858a32e" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;Binary&lt;/code&gt;, for example:</source>
          <target state="translated">テキスト表現が &lt;code&gt;Binary&lt;/code&gt; である整数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="8eacb8a6026b61056725ece1110b069482677e14" translate="yes" xml:space="preserve">
          <source>Returns an integer whose text representation is &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">テキスト表現が &lt;code&gt;String&lt;/code&gt; である整数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="f94153a9b60ae8655262dd32603d003b4560fdb5" translate="yes" xml:space="preserve">
          <source>Returns an integer, that is the size in bytes, of the binary that would be the result of &lt;code&gt;iolist_to_binary(Item)&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;iolist_to_binary(Item)&lt;/code&gt; の結果となるバイナリの、バイト単位のサイズである整数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="0c93d5fc3d93036110d84e23d9645cf1ef2f6b11" translate="yes" xml:space="preserve">
          <source>Returns an integer, which is the number of key-value pairs in &lt;code&gt;Map&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; のキーと値のペアの数である整数を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="09a372e2de3544caaeeb7f5db805f15bde609b8a" translate="yes" xml:space="preserve">
          <source>Returns an iovec that is made from the integers and binaries in &lt;code&gt;IoListOrBinary&lt;/code&gt;.</source>
          <target state="translated">整数とバイナリから作られIOVEC返し &lt;code&gt;IoListOrBinary&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="e1d2203f2c4260e64bd616e0af5c56feb4679bb0" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Set&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The difference as compared to the iterator returned by &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; is that the first element greater than or equal to &lt;code&gt;Element&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; のエントリをトラバースするために使用できるイテレータを返します。 &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; を参照してください。 &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; によって返されるイテレータとの違いは、 &lt;code&gt;Element&lt;/code&gt; 以上の最初の要素が返されることです。</target>
        </trans-unit>
        <trans-unit id="bf26d648fe3f9ada4031ee789c3c86a3374d50fe" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Set&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The implementation of this is very efficient; traversing the whole set using &lt;code&gt;next/1&lt;/code&gt; is only slightly slower than getting the list of all elements using &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; and traversing that. The main advantage of the iterator approach is that it does not require the complete list of all elements to be built in memory at one time.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; のエントリをトラバースするために使用できるイテレータを返します。 &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; を参照してください。これの実装は非常に効率的です。 &lt;code&gt;next/1&lt;/code&gt; を使用してセット全体をトラバースすることは、 &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; を使用してすべての要素のリストを取得し、それをトラバースするよりもわずかに遅くなります。イテレータアプローチの主な利点は、すべての要素の完全なリストを一度にメモリに構築する必要がないことです。</target>
        </trans-unit>
        <trans-unit id="41cf66b1df0def909f57f1fe8897f565fd27185b" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Tree&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The difference as compared to the iterator returned by &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; is that the first key greater than or equal to &lt;code&gt;Key&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; のエントリのトラバースに使用できるイテレータを返します。 &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; を参照してください。 &lt;code&gt;&lt;a href=&quot;#iterator-1&quot;&gt;iterator/1&lt;/a&gt;&lt;/code&gt; によって返されるイテレータとの違いは、 &lt;code&gt;Key&lt;/code&gt; 以上の最初のキーが返されることです。</target>
        </trans-unit>
        <trans-unit id="e6603b1e8419e4b3a9c53586d55b1e117fa59add" translate="yes" xml:space="preserve">
          <source>Returns an iterator that can be used for traversing the entries of &lt;code&gt;Tree&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt;. The implementation of this is very efficient; traversing the whole tree using &lt;code&gt;next/1&lt;/code&gt; is only slightly slower than getting the list of all elements using &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; and traversing that. The main advantage of the iterator approach is that it does not require the complete list of all elements to be built in memory at one time.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; のエントリのトラバースに使用できるイテレータを返します。 &lt;code&gt;&lt;a href=&quot;#next-1&quot;&gt;next/1&lt;/a&gt;&lt;/code&gt; を参照してください。これの実装は非常に効率的です。 &lt;code&gt;next/1&lt;/code&gt; を使用してツリー全体をトラバースすることは、 &lt;code&gt;&lt;a href=&quot;#to_list-1&quot;&gt;to_list/1&lt;/a&gt;&lt;/code&gt; を使用してすべての要素のリストを取得し、それをトラバースするよりもわずかに遅いだけです。イテレータアプローチの主な利点は、すべての要素の完全なリストを一度にメモリに構築する必要がないことです。</target>
        </trans-unit>
        <trans-unit id="251efe7b1ee7e8402270eee07d4c38a31a180ae5" translate="yes" xml:space="preserve">
          <source>Returns an open file descriptor on success, otherwise a negative value. In the latter case &lt;code&gt;erl_errno&lt;/code&gt; is set to one of:</source>
          <target state="translated">成功した場合は開いているファイル記述子を返し、それ以外の場合は負の値を返します。後者の場合、 &lt;code&gt;erl_errno&lt;/code&gt; は次のいずれかに設定されます。</target>
        </trans-unit>
        <trans-unit id="fdfffa9137c7a5414315c48e30aecab15892963e" translate="yes" xml:space="preserve">
          <source>Returns an ordered set of the elements in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; の要素の順序付けられたセットを返します。</target>
        </trans-unit>
        <trans-unit id="e5eda07451a3577540ca80f6508ad9ae729211c1" translate="yes" xml:space="preserve">
          <source>Returns an ordered-set list of the names of all variables in the syntax tree. (This includes function name variables.) An exception is thrown if &lt;code&gt;Tree&lt;/code&gt; does not represent a well-formed Core Erlang syntax tree.</source>
          <target state="translated">構文ツリー内のすべての変数の名前の順序セットリストを返します。（これには関数名変数が含まれます。） &lt;code&gt;Tree&lt;/code&gt; が整形式のCore Erlang構文ツリーを表していない場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="3dcf143c406cc677eb02ad78c6375d68b0b0956e" translate="yes" xml:space="preserve">
          <source>Returns an unordered list of the keys used in &lt;code&gt;List&lt;/code&gt;, not containing duplicates.</source>
          <target state="translated">重複を含まない、 &lt;code&gt;List&lt;/code&gt; で使用されているキーの順不同のリストを返します。</target>
        </trans-unit>
        <trans-unit id="d0257854f95b8e3b83216dc68878936b5858023c" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; from the vertex to some vertex of &lt;code&gt;Vertices&lt;/code&gt;. In particular, as paths can have length zero, the vertices of &lt;code&gt;Vertices&lt;/code&gt; are included in the returned list.</source>
          <target state="translated">ダイグラフの頂点のソートされていないリストを返します。リストの各頂点について、頂点から &lt;code&gt;Vertices&lt;/code&gt; の頂点への &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; が存在するようにします。特に、パスは長さがゼロになる可能性があるため、 &lt;code&gt;Vertices&lt;/code&gt; の頂点は返されるリストに含まれます。</target>
        </trans-unit>
        <trans-unit id="f55e9014080b34fc9b11903183d78f6396199723" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; from some vertex of &lt;code&gt;Vertices&lt;/code&gt; to the vertex. In particular, as paths can have length zero, the vertices of &lt;code&gt;Vertices&lt;/code&gt; are included in the returned list.</source>
          <target state="translated">ダイグラフの頂点のソートされていないリストを返します。リストの各頂点 &lt;code&gt;Digraph&lt;/code&gt; 、一部の頂点の &lt;code&gt;Vertices&lt;/code&gt; から頂点 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; がダイグラフに存在するようにします。特に、パスは長さがゼロになる可能性があるため、 &lt;code&gt;Vertices&lt;/code&gt; の頂点は返されるリストに含まれます。</target>
        </trans-unit>
        <trans-unit id="534915567af70fcc2b08c5e57e82d2863b827ac4" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;Digraph&lt;/code&gt; of length one or more from some vertex of &lt;code&gt;Vertices&lt;/code&gt; to the vertex. As a consequence, only those vertices of &lt;code&gt;Vertices&lt;/code&gt; that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; are returned.</source>
          <target state="translated">ダイグラフの頂点のソートされていないリストを返します。リストの各頂点について、 &lt;code&gt;Digraph&lt;/code&gt; には、頂点のいくつかの頂点から &lt;code&gt;Vertices&lt;/code&gt; への長さ1以上の &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; があります。結果として、一部の &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 含まれる &lt;code&gt;Vertices&lt;/code&gt; の頂点のみが返されます。</target>
        </trans-unit>
        <trans-unit id="f28355e536bf47a1f0c2fd3ce97c5f1e224ca28a" translate="yes" xml:space="preserve">
          <source>Returns an unsorted list of digraph vertices such that for each vertex in the list, there is a &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; of length one or more from the vertex to some vertex of &lt;code&gt;Vertices&lt;/code&gt;. Therefore only those vertices of &lt;code&gt;Vertices&lt;/code&gt; that are included in some &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; are returned.</source>
          <target state="translated">ダイグラフの頂点のソートされていないリストを返します。リストの各頂点について、頂点から &lt;code&gt;Vertices&lt;/code&gt; のいくつかの頂点 &lt;code&gt;&lt;a href=&quot;#path&quot;&gt;path&lt;/a&gt;&lt;/code&gt; の長さ1以上のパスが存在するようにします。したがって、一部の &lt;code&gt;&lt;a href=&quot;#cycle&quot;&gt;cycle&lt;/a&gt;&lt;/code&gt; 含まれる &lt;code&gt;Vertices&lt;/code&gt; の頂点のみが返されます。</target>
        </trans-unit>
        <trans-unit id="518449232fbe1ed623aaeb282017025b66e1fc06" translate="yes" xml:space="preserve">
          <source>Returns and purges the list of text strings buffered during the latest session of capturing printouts to &lt;code&gt;stdout&lt;/code&gt;. Log categories that are to be ignored in &lt;code&gt;ListOfStrings&lt;/code&gt; can be specified with &lt;code&gt;ExclCategories&lt;/code&gt;. If &lt;code&gt;ExclCategories = []&lt;/code&gt;, no filtering takes place.</source>
          <target state="translated">&lt;code&gt;stdout&lt;/code&gt; への印刷出力をキャプチャする最後のセッション中にバッファリングされたテキスト文字列のリストを返し、パージします。で無視するログカテゴリ &lt;code&gt;ListOfStrings&lt;/code&gt; はで指定することができ &lt;code&gt;ExclCategories&lt;/code&gt; 。もし &lt;code&gt;ExclCategories = []&lt;/code&gt; 、フィルタリングは行われません。</target>
        </trans-unit>
        <trans-unit id="0a94e185cbeae786ecd84f1870ec12764f587327" translate="yes" xml:space="preserve">
          <source>Returns and removes a list of all objects with key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; のキー &lt;code&gt;Key&lt;/code&gt; を持つすべてのオブジェクトのリストを返し、削除します。</target>
        </trans-unit>
        <trans-unit id="2448fb9033f4608431484c2e881e5499cd1e0e89" translate="yes" xml:space="preserve">
          <source>Returns annotations with representation Term.</source>
          <target state="translated">Termを表現したアノテーションを返します。</target>
        </trans-unit>
        <trans-unit id="8eec22103cb622707f198ede42b94d4929cae615" translate="yes" xml:space="preserve">
          <source>Returns any data specified with tag &lt;code&gt;userdata&lt;/code&gt; in the list of tuples returned from &lt;code&gt;&lt;a href=&quot;common_test#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;common_test#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt; から返されたタプルのリスト内のタグ &lt;code&gt;userdata&lt;/code&gt; で指定されたデータを返します。</target>
        </trans-unit>
        <trans-unit id="f6dc490b367d3da98d3e0ddeb7d371725e4d44de" translate="yes" xml:space="preserve">
          <source>Returns any data specified with tag &lt;code&gt;userdata&lt;/code&gt; in the list of tuples returned from &lt;code&gt;&lt;a href=&quot;ct_suite#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ct_suite#Module:suite-0&quot;&gt;suite/0&lt;/a&gt;&lt;/code&gt; から返されるタプルのリストでタグ &lt;code&gt;userdata&lt;/code&gt; で指定されたデータを返します。</target>
        </trans-unit>
        <trans-unit id="b580ad2eb1c2b5c00d42b03d280cb2c743b9ff93" translate="yes" xml:space="preserve">
          <source>Returns any data specified with tag &lt;code&gt;userdata&lt;/code&gt; in the list of tuples returned from &lt;code&gt;Suite:group(GroupName)&lt;/code&gt; or &lt;code&gt;Suite:Case()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Suite:group(GroupName)&lt;/code&gt; または &lt;code&gt;Suite:Case()&lt;/code&gt; から返されたタプルのリスト内のタグ &lt;code&gt;userdata&lt;/code&gt; で指定されたデータを返します。</target>
        </trans-unit>
        <trans-unit id="1dae253bd97a89263ed4726b4d9bf9d4155e09f6" translate="yes" xml:space="preserve">
          <source>Returns any plain command-line arguments as a list of strings (possibly empty).</source>
          <target state="translated">任意のプレーンなコマンドライン引数を文字列のリストとして返します(空の場合もあります)。</target>
        </trans-unit>
        <trans-unit id="c5c6703549d09920f0f5a93b1f134e5a5e890e90" translate="yes" xml:space="preserve">
          <source>Returns captured substrings as pairs of byte indexes into the subject string and length of the matching string in the subject (as if the subject string was flattened with &lt;code&gt; erlang:iolist_to_binary/1&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt; unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; before matching). Notice that option &lt;code&gt;unicode&lt;/code&gt; results in &lt;strong&gt;byte-oriented&lt;/strong&gt; indexes in a (possibly virtual) &lt;strong&gt;UTF-8 encoded&lt;/strong&gt; binary. A byte index tuple &lt;code&gt;{0,2}&lt;/code&gt; can therefore represent one or two characters when &lt;code&gt;unicode&lt;/code&gt; is in effect. This can seem counter-intuitive, but has been deemed the most effective and useful way to do it. To return lists instead can result in simpler code if that is desired. This return type is the default.</source>
          <target state="translated">キャプチャされた部分文字列をバイトインデックスのペアとしてサブジェクト文字列とサブジェクト内の一致する文字列の長さに返します（一致する前にサブジェクト文字列が &lt;code&gt; erlang:iolist_to_binary/1&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt; unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; でフラット化されたかのように）。お知らせそのオプションの &lt;code&gt;unicode&lt;/code&gt; での結果&lt;strong&gt;バイト指向&lt;/strong&gt;（おそらく仮想）におけるインデックス&lt;strong&gt;UTF-8エンコードされた&lt;/strong&gt;バイナリが。したがって、バイトインデックスタプル &lt;code&gt;{0,2}&lt;/code&gt; は、 &lt;code&gt;unicode&lt;/code&gt; が有効な場合に1文字または2文字を表すことができます。これは直感に反するように思えるかもしれませんが、それを行うための最も効果的で便利な方法と見なされています。代わりにリストを返すことで、必要に応じてコードを単純化できます。この戻り値の型がデフォルトです。</target>
        </trans-unit>
        <trans-unit id="fd4cba92cb758d0327a7e88229536ba937439243" translate="yes" xml:space="preserve">
          <source>Returns captured substrings as pairs of byte indexes into the subject string and length of the matching string in the subject (as if the subject string was flattened with &lt;code&gt;erlang:iolist_to_binary/1&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt;unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; before matching). Notice that option &lt;code&gt;unicode&lt;/code&gt; results in &lt;strong&gt;byte-oriented&lt;/strong&gt; indexes in a (possibly virtual) &lt;strong&gt;UTF-8 encoded&lt;/strong&gt; binary. A byte index tuple &lt;code&gt;{0,2}&lt;/code&gt; can therefore represent one or two characters when &lt;code&gt;unicode&lt;/code&gt; is in effect. This can seem counter-intuitive, but has been deemed the most effective and useful way to do it. To return lists instead can result in simpler code if that is desired. This return type is the default.</source>
          <target state="translated">キャプチャされた部分文字列を、サブジェクト文字列へのバイトインデックスと一致する文字列の長さのペアとして（サブジェクト文字列が &lt;code&gt;erlang:iolist_to_binary/1&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;unicode#characters_to_binary-2&quot;&gt;unicode:characters_to_binary/2&lt;/a&gt;&lt;/code&gt; でフラット化されてから一致するかのように）返します。オプションの &lt;code&gt;unicode&lt;/code&gt; は、（おそらく仮想）&lt;strong&gt;UTF-8エンコードされた&lt;/strong&gt;バイナリで&lt;strong&gt;バイト指向の&lt;/strong&gt;インデックスになることに注意してください。したがって、 &lt;code&gt;unicode&lt;/code&gt; が有効な場合、バイトインデックスタプル &lt;code&gt;{0,2}&lt;/code&gt; は1文字または2文字を表すことができます。これは直感に反するように見えるかもしれませんが、それを行うための最も効果的で有用な方法であると考えられています。代わりにリストを返すと、必要に応じてコードが単純になります。この戻りタイプがデフォルトです。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e369d9a71630206756798203becbc53e7728adeb" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">引数として渡された &lt;code&gt;Unit&lt;/code&gt; 変換された現在の &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="f797f69d451a2435ad92ddb2b8a08b9b87b47b5c" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">現在の &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; で返します。</target>
        </trans-unit>
        <trans-unit id="3f7165b6b66e3bdfe0e7fe3e2305081d07bd8e2f" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; on the format &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt;. This format is the same as &lt;code&gt; os:timestamp/0&lt;/code&gt; and the deprecated &lt;code&gt;&lt;a href=&quot;#now-0&quot;&gt; erlang:now/0&lt;/a&gt;&lt;/code&gt; use. The reason for the existence of &lt;code&gt;erlang:timestamp()&lt;/code&gt; is purely to simplify use for existing code that assumes this time stamp format. Current Erlang system time can more efficiently be retrieved in the time unit of your choice using &lt;code&gt;&lt;a href=&quot;#system_time-1&quot;&gt; erlang:system_time/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">現在の &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt; 形式で返します。この形式は、 &lt;code&gt; os:timestamp/0&lt;/code&gt; および非推奨の &lt;code&gt;&lt;a href=&quot;#now-0&quot;&gt; erlang:now/0&lt;/a&gt;&lt;/code&gt; の使用と同じです。 &lt;code&gt;erlang:timestamp()&lt;/code&gt; が存在する理由は、純粋に、このタイムスタンプ形式を想定している既存のコードの使用を簡素化するためです。現在のErlangシステム時刻は、 &lt;code&gt;&lt;a href=&quot;#system_time-1&quot;&gt; erlang:system_time/1&lt;/a&gt;&lt;/code&gt; を使用して、選択した時間単位でより効率的に取得できます。</target>
        </trans-unit>
        <trans-unit id="997359c09668c7069c3575aa744eed8df1d53049" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">引数として渡された &lt;code&gt;Unit&lt;/code&gt; 変換された現在の &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="d070a56a6b625aa547a552856e89f99d16aaab43" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">現在の &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; で返します。</target>
        </trans-unit>
        <trans-unit id="f63e6508cd9e75a0611137fbfdf6f5c3756b3ee7" translate="yes" xml:space="preserve">
          <source>Returns current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; on the format &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt;. This format is the same as &lt;code&gt;os:timestamp/0&lt;/code&gt; and the deprecated &lt;code&gt;&lt;a href=&quot;#now-0&quot;&gt;erlang:now/0&lt;/a&gt;&lt;/code&gt; use. The reason for the existence of &lt;code&gt;erlang:timestamp()&lt;/code&gt; is purely to simplify use for existing code that assumes this time stamp format. Current Erlang system time can more efficiently be retrieved in the time unit of your choice using &lt;code&gt;&lt;a href=&quot;#system_time-1&quot;&gt;erlang:system_time/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">現在の &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;{MegaSecs, Secs, MicroSecs}&lt;/code&gt; 形式で返します。この形式は &lt;code&gt;os:timestamp/0&lt;/code&gt; および非推奨の &lt;code&gt;&lt;a href=&quot;#now-0&quot;&gt;erlang:now/0&lt;/a&gt;&lt;/code&gt; の使用と同じです。 &lt;code&gt;erlang:timestamp()&lt;/code&gt; が存在する理由は、このタイムスタンプ形式を想定している既存のコードの使用を単純化するためです。現在のErlangシステム時刻は、 &lt;code&gt;&lt;a href=&quot;#system_time-1&quot;&gt;erlang:system_time/1&lt;/a&gt;&lt;/code&gt; を使用して、選択した時間単位でより効率的に取得できます。</target>
        </trans-unit>
        <trans-unit id="24a27c8c497c79d0b77fe1926ba6380d8a40002f" translate="yes" xml:space="preserve">
          <source>Returns current date and time as the data type DateAndTime, as specified in RFC1903. This is an OCTET STRING.</source>
          <target state="translated">RFC1903で規定されているデータ型DateAndTimeとして現在の日時を返します。これはOCET STRINGです。</target>
        </trans-unit>
        <trans-unit id="58b4d45688c89e92a5d1d069f171f6e770908925" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;ERL_TICK&lt;/code&gt; or the &lt;code&gt;msgtype&lt;/code&gt; field of the &lt;code&gt;erlang_msg *msg&lt;/code&gt;. The length of the message is put in &lt;code&gt;*msglen&lt;/code&gt;. On error a value &lt;code&gt;&amp;lt; 0&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;ERL_TICK&lt;/code&gt; または &lt;code&gt;erlang_msg *msg&lt;/code&gt; &lt;code&gt;msgtype&lt;/code&gt; フィールドのいずれかを返します。メッセージの長さは &lt;code&gt;*msglen&lt;/code&gt; に入れられます。エラーの場合、値 &lt;code&gt;&amp;lt; 0&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="7c8f5ac2a445b3814ba7f8e5716fd69d614e67f9" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;{ok, Result}&lt;/code&gt; if the operation was successful, or &lt;code&gt;{error, Reason}&lt;/code&gt; if the current tracer is a process or if it is a port not supporting the operation.</source>
          <target state="translated">操作が成功した場合は &lt;code&gt;ok&lt;/code&gt; または &lt;code&gt;{ok, Result}&lt;/code&gt; 返します。現在のトレーサーがプロセスである場合、または操作をサポートしていないポートの場合は &lt;code&gt;{error, Reason}&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="a6b787e7a2bbffd850f45f0d713920a67ee4a0d2" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;{module, Module}&lt;/code&gt;, or &lt;code&gt;{error, Reason}&lt;/code&gt; if loading fails. &lt;code&gt;Reason&lt;/code&gt; is one of the following:</source>
          <target state="translated">ロードが失敗した場合 &lt;code&gt;{error, Reason}&lt;/code&gt; &lt;code&gt;{module, Module}&lt;/code&gt; または{error、Reason}を返します。 &lt;code&gt;Reason&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="7a7249bc329d9fb9405d3f4c79e87256b4499e0d" translate="yes" xml:space="preserve">
          <source>Returns either &lt;code&gt;{ok, undefined}&lt;/code&gt; if no crypto key fun is registered, or &lt;code&gt;{ok, Term}&lt;/code&gt;, where &lt;code&gt;Term&lt;/code&gt; is the return value from &lt;code&gt;CryptoKeyFun(clear)&lt;/code&gt;, see &lt;code&gt;crypto_key_fun/1&lt;/code&gt;.</source>
          <target state="translated">暗号鍵funが登録されていない場合は &lt;code&gt;{ok, undefined}&lt;/code&gt; 返すか、または &lt;code&gt;{ok, Term}&lt;/code&gt; 返します。ここで、 &lt;code&gt;Term&lt;/code&gt; は &lt;code&gt;CryptoKeyFun(clear)&lt;/code&gt; からの戻り値です &lt;code&gt;crypto_key_fun/1&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="6e5069174115750570cddd31cc2cef10b9ef79b1" translate="yes" xml:space="preserve">
          <source>Returns either the arity of an Erlang tuple or the number of bytes in an Erlang binary object.</source>
          <target state="translated">ErlangタプルのアリティかErlangバイナリオブジェクトのバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="9d607c213646af91692ae675dd3aac634aacaecf" translate="yes" xml:space="preserve">
          <source>Returns either the key following &lt;code&gt;Key1&lt;/code&gt; in table &lt;code&gt;Name&lt;/code&gt; according to the internal order of the table, or &lt;code&gt;'$end_of_table'&lt;/code&gt; if there is no next key.</source>
          <target state="translated">テーブルの内部順序に従って、テーブル &lt;code&gt;Name&lt;/code&gt; の &lt;code&gt;Key1&lt;/code&gt; に続くキーを返すか、次のキーがない場合は &lt;code&gt;'$end_of_table'&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="d5bc2dbc9587e6ef5460dad5cf3f87b237cc728c" translate="yes" xml:space="preserve">
          <source>Returns either the value of &lt;code&gt;Expr1&lt;/code&gt; (that is, &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) or the value of &lt;code&gt;Expr2&lt;/code&gt; (if &lt;code&gt;Expr2&lt;/code&gt; is evaluated).</source>
          <target state="translated">&lt;code&gt;Expr1&lt;/code&gt; の値（つまり、 &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; ）または &lt;code&gt;Expr2&lt;/code&gt; の値（ &lt;code&gt;Expr2&lt;/code&gt; が評価される場合）を返します。</target>
        </trans-unit>
        <trans-unit id="6323eed878e360580ee27b0c7c7fcd513bdc13b3" translate="yes" xml:space="preserve">
          <source>Returns for each object of table &lt;code&gt;Name&lt;/code&gt; that matches &lt;code&gt;Pattern&lt;/code&gt; a list of bindings in some unspecified order. For a description of patterns, see &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt;. If the keypos'th element of &lt;code&gt;Pattern&lt;/code&gt; is unbound, all table objects are matched. If the keypos'th element is bound, only the objects with the correct key are matched.</source>
          <target state="translated">&lt;code&gt;Pattern&lt;/code&gt; 一致するテーブル &lt;code&gt;Name&lt;/code&gt; の各オブジェクトについて、バインディングのリストを不特定の順序で返します。パターンの説明については、 &lt;code&gt;&lt;a href=&quot;ets#match-2&quot;&gt;ets:match/2&lt;/a&gt;&lt;/code&gt; を参照してください。 &lt;code&gt;Pattern&lt;/code&gt; のkeypos番目の要素がバインドされていない場合、すべてのテーブルオブジェクトが一致します。keyposの要素がバインドされている場合、正しいキーを持つオブジェクトのみが一致します。</target>
        </trans-unit>
        <trans-unit id="918c4edfa410fe0325d57cd8b0922f70f40f5c41" translate="yes" xml:space="preserve">
          <source>Returns fractions of real-time or run-time spent in the various threads from the given microstate statistics values.</source>
          <target state="translated">与えられたマイクロステート統計値から、様々なスレッドで使用されたリアルタイムまたはランタイムの分数を返します。</target>
        </trans-unit>
        <trans-unit id="f67e767c1786e9a6e8c8f714e5c031353ef2065b" translate="yes" xml:space="preserve">
          <source>Returns information about &lt;code&gt;Fun&lt;/code&gt; as specified by &lt;code&gt;Item&lt;/code&gt;, in the form &lt;code&gt;{Item,Info}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{Item,Info}&lt;/code&gt; 形式で、 &lt;code&gt;Item&lt;/code&gt; によって指定された &lt;code&gt;Fun&lt;/code&gt; に関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="29427c069c86e73d452e6c2cf589458f1b031710" translate="yes" xml:space="preserve">
          <source>Returns information about Erlang Distribution in the current system as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; で指定された現在のシステムのErlangディストリビューションに関する情報を返します：</target>
        </trans-unit>
        <trans-unit id="00381d055f3b647b59d9ffa1642b39ddd0b2cebb" translate="yes" xml:space="preserve">
          <source>Returns information about a TFTP daemon, server, or client process.</source>
          <target state="translated">TFTP デーモン、サーバー、クライアントプロセスに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="d157a1aae5cc57d7500e4b1afdd969529c16fccb" translate="yes" xml:space="preserve">
          <source>Returns information about a connection intended for e.g debugging or logging.</source>
          <target state="translated">デバッグやロギングなどを目的とした接続に関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="320e9d3b701a0f26129d0bdc14183e5f9c50e1d7" translate="yes" xml:space="preserve">
          <source>Returns information about a daemon intended for e.g debugging or logging.</source>
          <target state="translated">デバッグやロギングなどを目的としたデーモンに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="34ac827a99e8836cb168ff01024d0483b709e391" translate="yes" xml:space="preserve">
          <source>Returns information about a query handle. The information describes the simplifications and optimizations that are the results of preparing the query for evaluation. This function is probably mainly useful during debugging.</source>
          <target state="translated">クエリハンドルに関する情報を返します。この情報には、評価用のクエリを準備した結果である単純化や最適化が記述されています。この関数は、主にデバッグ時に役立つと思われます。</target>
        </trans-unit>
        <trans-unit id="b61c6f9e4f952792d73b74ecc86a589c837dcde2" translate="yes" xml:space="preserve">
          <source>Returns information about a registry. Using information returned by this function, you can see whether the size of the registry is suitable for the amount of data it contains.</source>
          <target state="translated">レジストリに関する情報を返します。この関数が返す情報を使用すると、レジストリのサイズがデータの量に見合っているかどうかを確認することができます。</target>
        </trans-unit>
        <trans-unit id="aaf544708d3f6a6ee99b4924c5f04dc700680b39" translate="yes" xml:space="preserve">
          <source>Returns information about all TFTP daemon processes.</source>
          <target state="translated">すべての TFTP デーモンプロセスに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="73ad91d00ddb0e0ae60c348b4d17a6c6912df3e9" translate="yes" xml:space="preserve">
          <source>Returns information about all TFTP server processes.</source>
          <target state="translated">すべての TFTP サーバプロセスに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="20cb52f97ce8bf1d78906f33ba8345818f41a092" translate="yes" xml:space="preserve">
          <source>Returns information about an object.</source>
          <target state="translated">オブジェクトに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="8b2f681c86231b46727d63fab0ac4094e7d23f0c" translate="yes" xml:space="preserve">
          <source>Returns information about garbage collection, for example:</source>
          <target state="translated">ガベージコレクションに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="2c7aed6202813fcc443975dd687501d0a3102dc9" translate="yes" xml:space="preserve">
          <source>Returns information about how the user has requested schedulers to be bound or not bound.</source>
          <target state="translated">ユーザーがどのようにスケジューラをバインドするように要求したか、バインドしないように要求したかについての情報を返します。</target>
        </trans-unit>
        <trans-unit id="2ec089f54f08182afed4881a4e1669c367ccf309" translate="yes" xml:space="preserve">
          <source>Returns information about reductions, for example:</source>
          <target state="translated">還元率などの情報を返します。</target>
        </trans-unit>
        <trans-unit id="c92f6d947bb85f7605a3005fad497b9d3a3569f4" translate="yes" xml:space="preserve">
          <source>Returns information about runtime, in milliseconds.</source>
          <target state="translated">ランタイムに関する情報をミリ秒単位で返します。</target>
        </trans-unit>
        <trans-unit id="75991b90e4fe86df8cf66783088e92e710b74bab" translate="yes" xml:space="preserve">
          <source>Returns information about schedulers, scheduling and threads in the current system as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; で指定された現在のシステムのスケジューラ、スケジューリング、およびスレッドに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="ae97536a283bf5c0b56cfec555d6233fcde3756a" translate="yes" xml:space="preserve">
          <source>Returns information about table &lt;code&gt;Name&lt;/code&gt; as a list of tuples:</source>
          <target state="translated">テーブル &lt;code&gt;Name&lt;/code&gt; に関する情報をタプルのリストとして返します。</target>
        </trans-unit>
        <trans-unit id="6f85c1f156b4fca3e99653ec5d74d9444618729e" translate="yes" xml:space="preserve">
          <source>Returns information about table &lt;code&gt;Tab&lt;/code&gt; as a list of tuples. If &lt;code&gt;Tab&lt;/code&gt; has the correct type for a table identifier, but does not refer to an existing ETS table, &lt;code&gt;undefined&lt;/code&gt; is returned. If &lt;code&gt;Tab&lt;/code&gt; is not of the correct type, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; に関する情報をタプルのリストとして返します。場合 &lt;code&gt;Tab&lt;/code&gt; テーブル識別子のための正しいタイプがありますが、既存のETSテーブルを参照していない、 &lt;code&gt;undefined&lt;/code&gt; 返されます。 &lt;code&gt;Tab&lt;/code&gt; が正しいタイプでない場合、 &lt;code&gt;badarg&lt;/code&gt; 例外が発生します。</target>
        </trans-unit>
        <trans-unit id="3de9834a84497aba408c74c20b679b322fbc9bba" translate="yes" xml:space="preserve">
          <source>Returns information about the Mnesia system, such as transaction statistics, &lt;code&gt;db_nodes&lt;/code&gt;, and configuration parameters. The valid keys are as follows:</source>
          <target state="translated">トランザクション統計、 &lt;code&gt;db_nodes&lt;/code&gt; 、構成パラメーターなど、Mnesiaシステムに関する情報を返します。有効なキーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b0ad6ab25e00fd31d6d42f5ef20dc55845a97d47" translate="yes" xml:space="preserve">
          <source>Returns information about the State in the argument. The information is the form of a map, which currently contains at least:</source>
          <target state="translated">引数に含まれるステートに関する情報を返します。情報はマップの形をしており、現在は少なくとも</target>
        </trans-unit>
        <trans-unit id="3a624b5819d80f8d786c5c409c2f82ae4f7de210" translate="yes" xml:space="preserve">
          <source>Returns information about the current system (emulator) limits as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; で指定された現在のシステム（エミュレーター）制限に関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="4d6a1391af722b90c279e4ecd2014c5e15b18c3b" translate="yes" xml:space="preserve">
          <source>Returns information about the current system (emulator) time as specified by &lt;code&gt;Item&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; で指定された現在のシステム（エミュレーター）時間に関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="4d683c5330deee43af8dda717b26cb8cb76a91f4" translate="yes" xml:space="preserve">
          <source>Returns information about the current system. The documentation of this function is broken into the following sections in order to make it easier to navigate.</source>
          <target state="translated">現在のシステムに関する情報を返します。この関数のドキュメントは、ナビゲートを容易にするために以下のセクションに分けられています。</target>
        </trans-unit>
        <trans-unit id="9612263eb8e62ba51324bdb8f09116aa4b64a64c" translate="yes" xml:space="preserve">
          <source>Returns information about the currently used scheduler bindings.</source>
          <target state="translated">現在使用しているスケジューラのバインディングに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="8e183acee45d9b4755dd07ddb202bcfed9f59615" translate="yes" xml:space="preserve">
          <source>Returns information about the default process heap settings:</source>
          <target state="translated">デフォルトのプロセスヒープ設定に関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="e99647a7b11a6067aa29e2adfe9b2c26b0de9f54" translate="yes" xml:space="preserve">
          <source>Returns information about the process identified by &lt;code&gt;Pid&lt;/code&gt;, as specified by &lt;code&gt;Item&lt;/code&gt; or &lt;code&gt;ItemList&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt; if the process is not alive.</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; または &lt;code&gt;ItemList&lt;/code&gt; で指定された、 &lt;code&gt;Pid&lt;/code&gt; で識別されるプロセスに関する情報を返します。プロセスが生きてい &lt;code&gt;undefined&lt;/code&gt; 場合はundefinedを返します。</target>
        </trans-unit>
        <trans-unit id="dedfb23643940b8e66d602f928ce947a170709bc" translate="yes" xml:space="preserve">
          <source>Returns information about the specified PLT.</source>
          <target state="translated">指定した PLT に関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="134c344e9d341c118ba638b32d9c75bd01f818e3" translate="yes" xml:space="preserve">
          <source>Returns information about the specified allocator. As from ERTS 5.6.1, the return value is a list of &lt;code&gt;{instance, InstanceNo, InstanceInfo}&lt;/code&gt; tuples, where &lt;code&gt;InstanceInfo&lt;/code&gt; contains information about a specific instance of the allocator. If &lt;code&gt;Alloc&lt;/code&gt; is not a recognized allocator, &lt;code&gt;undefined&lt;/code&gt; is returned. If &lt;code&gt;Alloc&lt;/code&gt; is disabled, &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">指定されたアロケータに関する情報を返します。ERTS 5.6.1からのように、戻り値はリストである &lt;code&gt;{instance, InstanceNo, InstanceInfo}&lt;/code&gt; タプル、 &lt;code&gt;InstanceInfo&lt;/code&gt; はアロケータの特定のインスタンスに関する情報を含みます。 &lt;code&gt;Alloc&lt;/code&gt; が認識されたアロケータでない場合、 &lt;code&gt;undefined&lt;/code&gt; が返されます。 &lt;code&gt;Alloc&lt;/code&gt; が無効の場合、 &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="0a39703ed80d026886b97b29f3cb2305370a5bd2" translate="yes" xml:space="preserve">
          <source>Returns information about the table dumped to file by &lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#tab2file-2&quot;&gt;tab2file/2&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#tab2file-3&quot;&gt;tab2file/3&lt;/a&gt;&lt;/code&gt; によってファイルにダンプされたテーブルに関する情報を返します。</target>
        </trans-unit>
        <trans-unit id="ffdbd7494c0d40e81fbd66fbce3b02001cf630af" translate="yes" xml:space="preserve">
          <source>Returns information about wall clock. &lt;code&gt;wall_clock&lt;/code&gt; can be used in the same manner as &lt;code&gt;runtime&lt;/code&gt;, except that real time is measured as opposed to runtime or CPU time.</source>
          <target state="translated">壁時計に関する情報を返します。 &lt;code&gt;wall_clock&lt;/code&gt; は、ランタイムまたはCPU時間ではなくリアルタイムが測定されることを除いて、 &lt;code&gt;runtime&lt;/code&gt; と同じ方法で使用できます。</target>
        </trans-unit>
        <trans-unit id="abb0cd19cdd8b0638cd14d51f38d146f23135edf" translate="yes" xml:space="preserve">
          <source>Returns information as specified by &lt;code&gt;Item&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Item&lt;/code&gt; で指定された情報を返します。</target>
        </trans-unit>
        <trans-unit id="83b83e2c4db217042bead4125a190b5bf0f10766" translate="yes" xml:space="preserve">
          <source>Returns internal statistics about &lt;code&gt;set&lt;/code&gt;, &lt;code&gt;bag&lt;/code&gt;, and &lt;code&gt;duplicate_bag&lt;/code&gt; tables on an internal format used by OTP test suites. Not for production use.</source>
          <target state="translated">OTPテストスイートで使用される内部形式で、 &lt;code&gt;set&lt;/code&gt; 、 &lt;code&gt;bag&lt;/code&gt; 、および &lt;code&gt;duplicate_bag&lt;/code&gt; テーブルに関する内部統計を返します。本番用ではありません。</target>
        </trans-unit>
        <trans-unit id="fcc529961eeea2bcb6a3c57c8ae87e3e98ef2262" translate="yes" xml:space="preserve">
          <source>Returns internal statistics about tables on an internal format used by OTP test suites. Not for production use.</source>
          <target state="translated">OTPテストスイートで使用されている内部フォーマットのテーブルに関する内部統計を返します。本番用ではありません。</target>
        </trans-unit>
        <trans-unit id="0fdc64bc14710c38583f74335de4689eacba7eb7" translate="yes" xml:space="preserve">
          <source>Returns lexeme number &lt;code&gt;N&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt;, where lexemes are separated by the grapheme clusters in &lt;code&gt;SeparatorList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 語彙素番号 &lt;code&gt;N&lt;/code&gt; を返します。語彙素は &lt;code&gt;SeparatorList&lt;/code&gt; の書記素クラスタで区切られます。</target>
        </trans-unit>
        <trans-unit id="177742e996781c388cf44e159de27e03157e6cdc" translate="yes" xml:space="preserve">
          <source>Returns list of pids that are monitoring given port at the moment.</source>
          <target state="translated">現在、指定したポートを監視している pid のリストを返します。</target>
        </trans-unit>
        <trans-unit id="e428b53fcffd274a623f9f135991769113470904" translate="yes" xml:space="preserve">
          <source>Returns local date and time converted from the return value from &lt;code&gt;erlang:timestamp/0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;erlang:timestamp/0&lt;/code&gt; の戻り値から変換されたローカルの日付と時刻を返します。</target>
        </trans-unit>
        <trans-unit id="833264d9c4c3210c6943d95bf1e760f7c657ae75" translate="yes" xml:space="preserve">
          <source>Returns local time.</source>
          <target state="translated">現地時間を返します。</target>
        </trans-unit>
        <trans-unit id="f6d1f81ffc8b25a8b6796831f820a4eee4709cca" translate="yes" xml:space="preserve">
          <source>Returns matching substrings as binaries. If option &lt;code&gt;unicode&lt;/code&gt; is used, these binaries are in UTF-8. If the \C sequence is used together with &lt;code&gt;unicode&lt;/code&gt;, the binaries can be invalid UTF-8.</source>
          <target state="translated">一致する部分文字列をバイナリとして返します。オプション &lt;code&gt;unicode&lt;/code&gt; が使用されている場合、これらのバイナリはUTF-8です。\ Cシーケンスが &lt;code&gt;unicode&lt;/code&gt; と一緒に使用される場合、バイナリは無効なUTF-8になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="3a23f2593c452c95374ebeefe7b8d677f721fe8c" translate="yes" xml:space="preserve">
          <source>Returns matching substrings as lists of characters (Erlang &lt;code&gt;string()&lt;/code&gt;s). It option &lt;code&gt;unicode&lt;/code&gt; is used in combination with the \C sequence in the regular expression, a captured subpattern can contain bytes that are not valid UTF-8 (\C matches bytes regardless of character encoding). In that case the &lt;code&gt;list&lt;/code&gt; capturing can result in the same types of tuples that &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt; unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; can return, namely three-tuples with tag &lt;code&gt;incomplete&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt;, the successfully converted characters and the invalid UTF-8 tail of the conversion as a binary. The best strategy is to avoid using the \C sequence when capturing lists.</source>
          <target state="translated">一致する部分文字列を文字のリストとして返します（Erlang &lt;code&gt;string()&lt;/code&gt; s）。オプション &lt;code&gt;unicode&lt;/code&gt; を正規表現の\ Cシーケンスと組み合わせて使用​​すると、キャプチャされたサブパターンに有効なUTF-8ではないバイトが含まれる可能性があります（\ Cは文字エンコードに関係なくバイトに一致します）。その場合、 &lt;code&gt;list&lt;/code&gt; キャプチャにより、 &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt; unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; が返すことができるのと同じタイプのタプル、つまり、タグが &lt;code&gt;incomplete&lt;/code&gt; または &lt;code&gt;error&lt;/code&gt; 3つのタプル、正常に変換された文字、およびバイナリとしての変換の無効なUTF-8テールが発生する可能性があります。 。最善の戦略は、リストをキャプチャするときに\ Cシーケンスを使用しないようにすることです。</target>
        </trans-unit>
        <trans-unit id="df6fb542ac6298148c4628d7b50d50effc0823c9" translate="yes" xml:space="preserve">
          <source>Returns matching substrings as lists of characters (Erlang &lt;code&gt;string()&lt;/code&gt;s). It option &lt;code&gt;unicode&lt;/code&gt; is used in combination with the \C sequence in the regular expression, a captured subpattern can contain bytes that are not valid UTF-8 (\C matches bytes regardless of character encoding). In that case the &lt;code&gt;list&lt;/code&gt; capturing can result in the same types of tuples that &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt;unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; can return, namely three-tuples with tag &lt;code&gt;incomplete&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt;, the successfully converted characters and the invalid UTF-8 tail of the conversion as a binary. The best strategy is to avoid using the \C sequence when capturing lists.</source>
          <target state="translated">一致する部分文字列を文字のリストとして返します（Erlang &lt;code&gt;string()&lt;/code&gt; s）。このオプション &lt;code&gt;unicode&lt;/code&gt; は、正規表現の\ Cシーケンスと組み合わせて使用​​されます。キャプチャされたサブパターンには、有効なUTF-8ではないバイトが含まれる可能性があります（\ Cは文字エンコードに関係なくバイトに一致します）。その場合、 &lt;code&gt;list&lt;/code&gt; キャプチャにより、 &lt;code&gt;&lt;a href=&quot;unicode#characters_to_list-2&quot;&gt;unicode:characters_to_list/2&lt;/a&gt;&lt;/code&gt; が返すことができるのと同じタイプのタプル、つまり、タグが &lt;code&gt;incomplete&lt;/code&gt; または &lt;code&gt;error&lt;/code&gt; 3つのタプル、正常に変換された文字、および変換の無効なUTF-8テールがバイナリとして生成される可能性があります。 。最善の戦略は、リストをキャプチャするときに\ Cシーケンスを使用しないことです。</target>
        </trans-unit>
        <trans-unit id="28ca01a6f5eb6005db2633f2649168fb78905dc4" translate="yes" xml:space="preserve">
          <source>Returns no matching subpatterns, gives the single atom &lt;code&gt;match&lt;/code&gt; as the return value of the function when matching successfully instead of the &lt;code&gt;{match, list()}&lt;/code&gt; return. Specifying an empty list gives the same behavior.</source>
          <target state="translated">一致するサブパターンを返さず、関数 &lt;code&gt;{match, list()}&lt;/code&gt; 代わりに正常に一致した場合、関数の戻り値として単一のアトムの &lt;code&gt;match&lt;/code&gt; を返します。空のリストを指定しても同じ動作になります。</target>
        </trans-unit>
        <trans-unit id="71c8e08afa64e822ed88ad01f72880656f15c77b" translate="yes" xml:space="preserve">
          <source>Returns one of the following:</source>
          <target state="translated">以下のいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="4ac4df0fa1d9c2cd461b98067935dc76cbc78030" translate="yes" xml:space="preserve">
          <source>Returns only positive integers.</source>
          <target state="translated">正の整数のみを返します。</target>
        </trans-unit>
        <trans-unit id="39fba73fafca3b20ce7ae66a0bcf604663dffe5d" translate="yes" xml:space="preserve">
          <source>Returns only the elements of &lt;code&gt;Ordset1&lt;/code&gt; that are not also elements of &lt;code&gt;Ordset2&lt;/code&gt;.</source>
          <target state="translated">戻り値の要素のみ &lt;code&gt;Ordset1&lt;/code&gt; もの要素ではありません &lt;code&gt;Ordset2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dbf62fa1c230f9ff958db44f0929d3c2e391865b" translate="yes" xml:space="preserve">
          <source>Returns only the elements of &lt;code&gt;Set1&lt;/code&gt; that are not also elements of &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">戻り値の要素のみ &lt;code&gt;Set1&lt;/code&gt; もの要素ではありません &lt;code&gt;Set2&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9ef614610a6e34b2cc33317c2f1bab1ad880e94d" translate="yes" xml:space="preserve">
          <source>Returns pointer to the new environment.</source>
          <target state="translated">新しい環境へのポインタを返します。</target>
        </trans-unit>
        <trans-unit id="3df71ede0d1c1721b7d64fb91cce9d8d064f7572" translate="yes" xml:space="preserve">
          <source>Returns seconds since or before Unix time epoch, which is 1970-01-01 00:00 UTC.</source>
          <target state="translated">Unix タイムエポック(1970-01-01 00:00 UTC)からの秒数を返します。</target>
        </trans-unit>
        <trans-unit id="060ceec1994b0f4db8c8d84a98e3888dd441f936" translate="yes" xml:space="preserve">
          <source>Returns some or all of the remaining answers to a query cursor. Only the owner of &lt;code&gt;QueryCursor&lt;/code&gt; can retrieve answers.</source>
          <target state="translated">残りの回答の一部またはすべてをクエリカーソルに返します。 &lt;code&gt;QueryCursor&lt;/code&gt; の所有者のみが回答を取得できます。</target>
        </trans-unit>
        <trans-unit id="caac4497837fbacfa43c092f1f26da0b20ec239a" translate="yes" xml:space="preserve">
          <source>Returns some textual information about the current process as a binary. Takes no arguments and is only allowed in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">現在のプロセスに関するいくつかのテキスト情報をバイナリとして返します。引数を &lt;code&gt;MatchBody&lt;/code&gt; ず、トレース時にMatchBodyパーツでのみ許可されます。</target>
        </trans-unit>
        <trans-unit id="c8cd8a210b9f6de0a669b999ec91c75db76d6eae" translate="yes" xml:space="preserve">
          <source>Returns specific information about one aspect of a driver. Parameter &lt;code&gt;Tag&lt;/code&gt; specifies which aspect to get information about. The return &lt;code&gt;Value&lt;/code&gt; differs between different tags:</source>
          <target state="translated">ドライバーの1つの側面に関する特定の情報を返します。パラメータ &lt;code&gt;Tag&lt;/code&gt; は、情報を取得するアスペクトを指定します。戻り &lt;code&gt;Value&lt;/code&gt; はタグによって異なります。</target>
        </trans-unit>
        <trans-unit id="824656855cca96798e6b6be83bdaa026868f113d" translate="yes" xml:space="preserve">
          <source>Returns status of ongoing test. The returned list contains information about which test case is executing (a list of cases when a parallel test case group is executing), as well as counters for successful, failed, skipped, and total test cases so far.</source>
          <target state="translated">進行中のテストのステータスを返します。返されるリストには、どのテストケースが実行されているかの情報(並列テストケースグループが実行されている場合のケースのリスト)と、成功、失敗、スキップ、これまでの総テストケース数のカウンタが含まれます。</target>
        </trans-unit>
        <trans-unit id="d3c9ff9631f70dd71bcf65ab3f6f0786c5a04e1f" translate="yes" xml:space="preserve">
          <source>Returns test progress. If &lt;code&gt;Status&lt;/code&gt; is &lt;code&gt;ongoing&lt;/code&gt;, tests are running on the node and are not yet finished.</source>
          <target state="translated">テストの進捗状況を返します。 &lt;code&gt;Status&lt;/code&gt; が &lt;code&gt;ongoing&lt;/code&gt; 場合、テストはノードで実行されており、まだ完了していません。</target>
        </trans-unit>
        <trans-unit id="94556d0f9711b921d52b24afcb3e185050c30911" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#Cartesian_product&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; と &lt;code&gt;Set2&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#Cartesian_product&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="cf6c140fa3d3f04c65f2a9ce387184abff140810" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#Cartesian_product_tuple&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; of the non-empty tuple of sets &lt;code&gt;TupleOfSets&lt;/code&gt;. If (x[1], ..., x[n]) is an element of the n-ary relation &lt;code&gt;Relation&lt;/code&gt;, then x[i] is drawn from element i of &lt;code&gt;TupleOfSets&lt;/code&gt;.</source>
          <target state="translated">セット &lt;code&gt;TupleOfSets&lt;/code&gt; の空でないタプルの &lt;code&gt;&lt;a href=&quot;#Cartesian_product_tuple&quot;&gt;Cartesian product&lt;/a&gt;&lt;/code&gt; を返します。（x [1]、...、x [n]）がn項関係 &lt;code&gt;Relation&lt;/code&gt; の要素である場合、x [i]は &lt;code&gt;TupleOfSets&lt;/code&gt; の要素iから描画されます。</target>
        </trans-unit>
        <trans-unit id="1dbabd9cacc3eb998bb13a8811a3fb3de99e786f" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#composite&quot;&gt;composite&lt;/a&gt;&lt;/code&gt; of the functions &lt;code&gt;Function1&lt;/code&gt; and &lt;code&gt;Function2&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;Function1&lt;/code&gt; と &lt;code&gt;Function2&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#composite&quot;&gt;composite&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ce5143caf37001b8d7bd2d66766c3fa4b00a3f6a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel1&lt;/code&gt;.</source>
          <target state="translated">二項関係 &lt;code&gt;BinRel1&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6b56dc94a86cd6430ecc25a5f7add662a543150b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; of the sets &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">セット &lt;code&gt;Set1&lt;/code&gt; と &lt;code&gt;Set2&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#difference&quot;&gt;difference&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="677f3ea43abf2d6482799ef655a19de0c06e1e50" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">二項関係 &lt;code&gt;BinRel&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="84d607afcb81a88772424a4010e7f2b35107612c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#extension&quot;&gt;extension&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt; such that for each element E in &lt;code&gt;Set&lt;/code&gt; that does not belong to the &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt;, &lt;code&gt;BinRel2&lt;/code&gt; contains the pair (E, &lt;code&gt;AnySet&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;BinRel1&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#domain&quot;&gt;domain&lt;/a&gt;&lt;/code&gt; に属していない &lt;code&gt;Set&lt;/code&gt; の各要素E &lt;code&gt;BinRel1&lt;/code&gt; 、 &lt;code&gt;BinRel2&lt;/code&gt; にはペア（E、 &lt;code&gt;AnySet&lt;/code&gt; ）が含まれるようにBinRel1の &lt;code&gt;&lt;a href=&quot;#extension&quot;&gt;extension&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="32104972d486cc1c20806fbad1a4085270295051" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; of an atomic, ordered, or unordered set.</source>
          <target state="translated">アトミック、順序付き、または順序なしのセットの &lt;code&gt;&lt;a href=&quot;#external_set&quot;&gt;external set&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b858f2265fa5602606b78bcd4666e9cdffdeeec1" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">二項関係 &lt;code&gt;BinRel&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#field&quot;&gt;field&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="87dd833acacf73c63d010c62d8b953739dffbe91" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; of set &lt;code&gt;Set1&lt;/code&gt; under the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">バイナリ関係 &lt;code&gt;BinRel&lt;/code&gt; の下でセット &lt;code&gt;Set1&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#image&quot;&gt;image&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="051d4e152d74f5d8ec5ed39ecb2040038c544630" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#in_degree&quot;&gt;in-degree&lt;/a&gt;&lt;/code&gt; of vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; の頂点 &lt;code&gt;V&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#in_degree&quot;&gt;in-degree&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6a561681ac701c8a4d56dc954055ad10a0f0de57" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; と &lt;code&gt;Set2&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#intersection&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; 部分を返します。</target>
        </trans-unit>
        <trans-unit id="40430941541972db68e1a0d5bc81df12d854171b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#intersection_n&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; of the set of sets &lt;code&gt;SetOfSets&lt;/code&gt;.</source>
          <target state="translated">セット &lt;code&gt;SetOfSets&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#intersection_n&quot;&gt;intersection&lt;/a&gt;&lt;/code&gt; 部分を返します。</target>
        </trans-unit>
        <trans-unit id="bf0c3968de0fe24bcaf61da6f9fadc50fdbad634" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#inverse&quot;&gt;inverse&lt;/a&gt;&lt;/code&gt; of function &lt;code&gt;Function1&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;Function1&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#inverse&quot;&gt;inverse&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="dc452f77109d5afbd0cee8fcb42d810d37c9c47a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#inverse_image&quot;&gt;inverse image&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; under the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">バイナリ関係 &lt;code&gt;BinRel&lt;/code&gt; の下で &lt;code&gt;Set1&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#inverse_image&quot;&gt;inverse image&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="68a13340b1cd8618d555f1d038704d5b261e8a9a" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="368dcc33d5a6ba18e50dc9df5b51dea4e9b4cfbf" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#natural_join&quot;&gt;natural join&lt;/a&gt;&lt;/code&gt; of the relations &lt;code&gt;Relation1&lt;/code&gt; and &lt;code&gt;Relation2&lt;/code&gt; on coordinates &lt;code&gt;I&lt;/code&gt; and &lt;code&gt;J&lt;/code&gt;.</source>
          <target state="translated">座標 &lt;code&gt;I&lt;/code&gt; および &lt;code&gt;J&lt;/code&gt; 上の関係 &lt;code&gt;Relation1&lt;/code&gt; および &lt;code&gt;Relation2&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#natural_join&quot;&gt;natural join&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="fe7819f155414ebf129bdea3d9f509f80b72e9c9" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#out_degree&quot;&gt;out-degree&lt;/a&gt;&lt;/code&gt; of vertex &lt;code&gt;V&lt;/code&gt; of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; の頂点 &lt;code&gt;V&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#out_degree&quot;&gt;out-degree&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a6ca1b44295c5c2832cef9f44390c9d11cb3528c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set&lt;/code&gt; such that two elements are considered equal if the results of applying &lt;code&gt;SetFun&lt;/code&gt; are equal.</source>
          <target state="translated">&lt;code&gt;SetFun&lt;/code&gt; の適用結果が等しい場合に2つの要素が等しいと見なされるように、 &lt;code&gt;Set&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="89307605ace8536ca4e601f9c65b035dae9b7ea3" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of the union of the set of sets &lt;code&gt;SetOfSets&lt;/code&gt; such that two elements are considered equal if they belong to the same elements of &lt;code&gt;SetOfSets&lt;/code&gt;.</source>
          <target state="translated">2つの要素が &lt;code&gt;SetOfSets&lt;/code&gt; の同じ要素に属している場合に等しいと見なされるように、 &lt;code&gt;SetOfSets&lt;/code&gt; のセットの和集合の &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="5087c356d885226125e2154f7079502de4aed969" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#range&quot;&gt;range&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel&lt;/code&gt;.</source>
          <target state="translated">二項関係 &lt;code&gt;BinRel&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#range&quot;&gt;range&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2810ab21093fbfa3cab83056a55e0bd159fef721" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; of the &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel1&lt;/code&gt; and the binary relation &lt;code&gt;BinRel2&lt;/code&gt;.</source>
          <target state="translated">返し &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#converse&quot;&gt;converse&lt;/a&gt;&lt;/code&gt; 二項関係の &lt;code&gt;BinRel1&lt;/code&gt; バイナリ関係 &lt;code&gt;BinRel2&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="b4b761e50ce46d06235f90640a8ca5c0c10b05a0" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; of the binary relations &lt;code&gt;BinRel1&lt;/code&gt; and &lt;code&gt;BinRel2&lt;/code&gt;.</source>
          <target state="translated">二項関係 &lt;code&gt;BinRel1&lt;/code&gt; と &lt;code&gt;BinRel2&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#relative_product&quot;&gt;relative product&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ae9bfbd7a06dfe8fa66ada26e99a7cee6e066cb5" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; of the binary relation &lt;code&gt;BinRel1&lt;/code&gt; to &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">バイナリ関係 &lt;code&gt;BinRel1&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;Set&lt;/code&gt; に返します。</target>
        </trans-unit>
        <trans-unit id="0b4ee65a70c56b7f786b172d44cc00ec0aa39e29" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;ordered set&lt;/a&gt;&lt;/code&gt; containing the sets of the non-empty tuple &lt;code&gt;TupleOfSets&lt;/code&gt;.</source>
          <target state="translated">空でないタプル &lt;code&gt;TupleOfSets&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;ordered set&lt;/a&gt;&lt;/code&gt; を含む順序付きセットを返します。</target>
        </trans-unit>
        <trans-unit id="4c28f607c9ef0ab38425da1edf46fef2af7b052c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; containing the sets of list &lt;code&gt;ListOfSets&lt;/code&gt;.</source>
          <target state="translated">リスト &lt;code&gt;ListOfSets&lt;/code&gt; のセットを含む &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;unordered set&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="57dd0b9f33ba6c7e8139d342916c14bbfb06fcca" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;untyped empty set&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;empty_set()&lt;/code&gt; is equivalent to &lt;code&gt;from_term([],&amp;nbsp;['_'])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#sets_definition&quot;&gt;untyped empty set&lt;/a&gt;&lt;/code&gt; ていない空のセットを返します。 &lt;code&gt;empty_set()&lt;/code&gt; は &lt;code&gt;from_term([],&amp;nbsp;['_'])&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="d6704646f451bc5c6e8686c529fb8f0f6264344b" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#strict_relation&quot;&gt;strict relation&lt;/a&gt;&lt;/code&gt; corresponding to the binary relation &lt;code&gt;BinRel1&lt;/code&gt;.</source>
          <target state="translated">二項関係 &lt;code&gt;BinRel1&lt;/code&gt; に対応する &lt;code&gt;&lt;a href=&quot;#strict_relation&quot;&gt;strict relation&lt;/a&gt;&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="4617dd5e79be4e1536db790a08855eed6ff53f11" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#symmetric_difference&quot;&gt;symmetric difference&lt;/a&gt;&lt;/code&gt; (or the Boolean sum) of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; と &lt;code&gt;Set2&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#symmetric_difference&quot;&gt;symmetric difference&lt;/a&gt;&lt;/code&gt; （またはブール和）を返します。</target>
        </trans-unit>
        <trans-unit id="c18b47adc05793ac87d87b7d15c2e03d5a254292" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; of an atomic, ordered, or unordered set.</source>
          <target state="translated">アトミック、順序付き、または順序なしのセットの &lt;code&gt;&lt;a href=&quot;#type&quot;&gt;type&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6bfac114aed449319c8e31bceeda119c76c28ba5" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; と &lt;code&gt;Set2&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#union&quot;&gt;union&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e53ca3c10a8a8a21196072419118b8fae5c9d932" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;&lt;a href=&quot;#union_n&quot;&gt;union&lt;/a&gt;&lt;/code&gt; of the set of sets &lt;code&gt;SetOfSets&lt;/code&gt;.</source>
          <target state="translated">セット &lt;code&gt;SetOfSets&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;#union_n&quot;&gt;union&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6a187b4420c5ebd10dbbd211cf7d71a6c4d27393" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;CpuTopology&lt;/code&gt; currently used by the emulator. The CPU topology is used when binding schedulers to logical processors. The CPU topology used is the &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_defined&quot;&gt; user-defined CPU topology&lt;/a&gt;&lt;/code&gt;, if such exists, otherwise the &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_detected&quot;&gt; automatically detected CPU topology&lt;/a&gt;&lt;/code&gt;, if such exists. If no CPU topology exists, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">エミュレータで現在使用されている &lt;code&gt;CpuTopology&lt;/code&gt; を返します。CPUトポロジーは、スケジューラーを論理プロセッサーにバインドするときに使用されます。使用されるCPUトポロジは、 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_defined&quot;&gt; user-defined CPU topology&lt;/a&gt;&lt;/code&gt; （存在する場合）です。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_detected&quot;&gt; automatically detected CPU topology&lt;/a&gt;&lt;/code&gt; （存在する場合）です。CPUトポロジが存在しない場合、 &lt;code&gt;undefined&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="91838b437ece561b0ec42a6597726299aecadac1" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;CpuTopology&lt;/code&gt; currently used by the emulator. The CPU topology is used when binding schedulers to logical processors. The CPU topology used is the &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_defined&quot;&gt;user-defined CPU topology&lt;/a&gt;&lt;/code&gt;, if such exists, otherwise the &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_detected&quot;&gt;automatically detected CPU topology&lt;/a&gt;&lt;/code&gt;, if such exists. If no CPU topology exists, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">エミュレータが現在使用している &lt;code&gt;CpuTopology&lt;/code&gt; を返します。CPUトポロジーは、スケジューラーを論理プロセッサーにバインドするときに使用されます。使用されるCPUトポロジは、 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_defined&quot;&gt;user-defined CPU topology&lt;/a&gt;&lt;/code&gt; （存在する場合）です。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_topology_detected&quot;&gt;automatically detected CPU topology&lt;/a&gt;&lt;/code&gt; （存在する場合）です。CPUトポロジが存在しない場合は、 &lt;code&gt;undefined&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="dab8241606216d9529af71335ee70c5d8c7051ee" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;N&lt;/code&gt;th element (numbering from 1) of &lt;code&gt;Tuple&lt;/code&gt;, for example:</source>
          <target state="translated">Tupleの &lt;code&gt;N&lt;/code&gt; 番目の要素（1から &lt;code&gt;Tuple&lt;/code&gt; ）を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="cdf3718787b6defba034666ecc29b3bde4de5b3c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;N&lt;/code&gt;th element of &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; の &lt;code&gt;N&lt;/code&gt; 番目の要素を返します。</target>
        </trans-unit>
        <trans-unit id="3f7d61cb0d1a71d668ba42d67232c201d3aaa8f6" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;N&lt;/code&gt;th tail of &lt;code&gt;List&lt;/code&gt;, that is, the sublist of &lt;code&gt;List&lt;/code&gt; starting at &lt;code&gt;N+1&lt;/code&gt; and continuing up to the end of the list.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; の &lt;code&gt;N&lt;/code&gt; 番目のテール、つまり &lt;code&gt;N+1&lt;/code&gt; から始まりリストの最後まで続く &lt;code&gt;List&lt;/code&gt; のサブリストを返します。</target>
        </trans-unit>
        <trans-unit id="b700db350e6d3dd2cf5c5e698d6f0dfec55b3da7" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Osfamily&lt;/code&gt; and, in some cases, the &lt;code&gt;Osname&lt;/code&gt; of the current OS.</source>
          <target state="translated">&lt;code&gt;Osfamily&lt;/code&gt; を返し、場合によっては、現在のOSの &lt;code&gt;Osname&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="22a5e0b1d79cbf87e90c83b569e72dfa52deba87" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Type&lt;/code&gt; of operator that &lt;code&gt;OpName/Arity&lt;/code&gt; belongs to, or generates a &lt;code&gt;function_clause&lt;/code&gt; error if it is not an operator.</source>
          <target state="translated">&lt;code&gt;OpName/Arity&lt;/code&gt; が属する演算子の &lt;code&gt;Type&lt;/code&gt; を返します。演算子でない場合は、 &lt;code&gt;function_clause&lt;/code&gt; エラーを生成します。</target>
        </trans-unit>
        <trans-unit id="9f114a3e7a0c6775b1972d44d38072d22561267f" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Value&lt;/code&gt; of the environment variable &lt;code&gt;VarName&lt;/code&gt;, or &lt;code&gt;DefaultValue&lt;/code&gt; if the environment variable is undefined.</source>
          <target state="translated">環境変数 &lt;code&gt;VarName&lt;/code&gt; の &lt;code&gt;Value&lt;/code&gt; 、または環境変数が定義されていない場合は &lt;code&gt;DefaultValue&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="66576c02a9bfe704fa0ff919f9fe091b12ec3d54" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;Value&lt;/code&gt; of the environment variable &lt;code&gt;VarName&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt; if the environment variable is undefined.</source>
          <target state="translated">返し &lt;code&gt;Value&lt;/code&gt; 環境変数の &lt;code&gt;VarName&lt;/code&gt; 、または &lt;code&gt;false&lt;/code&gt; 環境変数が定義されていない場合。</target>
        </trans-unit>
        <trans-unit id="c7585fb0bfa91748aa85428e75ff582877c40484" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;et&lt;/code&gt; handler, which can be used with &lt;code&gt;format/2&lt;/code&gt; or &lt;code&gt;tracer/2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;et&lt;/code&gt; &lt;code&gt;format/2&lt;/code&gt; ハンドラーを返します。これはformat / 2または &lt;code&gt;tracer/2&lt;/code&gt; で使用できます。</target>
        </trans-unit>
        <trans-unit id="f64b1ffe37f5fcc8ee01c87348a675edacd5113f" translate="yes" xml:space="preserve">
          <source>Returns the CPU time in the same format as &lt;code&gt;&lt;a href=&quot;erlang#timestamp-0&quot;&gt; erlang:timestamp()&lt;/a&gt;&lt;/code&gt;. The CPU time is the time the current logical CPU has spent executing since some arbitrary point in the past. If the OS does not support fetching this value, &lt;code&gt;enif_cpu_time&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;erlang#timestamp-0&quot;&gt; erlang:timestamp()&lt;/a&gt;&lt;/code&gt; と同じ形式でCPU時間を返します。CPU時間は、現在の論理CPUが過去の任意の時点から実行に費やした時間です。OSがこの値のフェッチをサポートしていない場合、 &lt;code&gt;enif_cpu_time&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt; enif_make_badarg&lt;/a&gt;&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="8eddf39c08022d4015ebc25735765019cb49319b" translate="yes" xml:space="preserve">
          <source>Returns the CPU time in the same format as &lt;code&gt;&lt;a href=&quot;erlang#timestamp-0&quot;&gt;erlang:timestamp()&lt;/a&gt;&lt;/code&gt;. The CPU time is the time the current logical CPU has spent executing since some arbitrary point in the past. If the OS does not support fetching this value, &lt;code&gt;enif_cpu_time&lt;/code&gt; invokes &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">CPU時間を &lt;code&gt;&lt;a href=&quot;erlang#timestamp-0&quot;&gt;erlang:timestamp()&lt;/a&gt;&lt;/code&gt; と同じ形式で返します。CPU時間は、過去の任意の時点以降、現在の論理CPUが実行に費やした時間です。OSがこの値のフェッチをサポートしていない場合、 &lt;code&gt;enif_cpu_time&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;#enif_make_badarg&quot;&gt;enif_make_badarg&lt;/a&gt;&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="51d8383e4c6f3976cb80fe1ea98ebbf2e3ec74c0" translate="yes" xml:space="preserve">
          <source>Returns the Erlang object corresponding to the value of &lt;code&gt;name&lt;/code&gt; in &lt;code&gt;term&lt;/code&gt;. If no variable with the name &lt;code&gt;name&lt;/code&gt; is found in &lt;code&gt;term&lt;/code&gt;, or if &lt;code&gt;term&lt;/code&gt; is not a valid Erlang term, &lt;code&gt;NULL&lt;/code&gt; is returned.</source>
          <target state="translated">値に対応するErlangのオブジェクトを返し &lt;code&gt;name&lt;/code&gt; で &lt;code&gt;term&lt;/code&gt; 。 &lt;code&gt;term&lt;/code&gt; に名前 &lt;code&gt;name&lt;/code&gt; の変数が見つからない場合、または &lt;code&gt;term&lt;/code&gt; が有効なErlang用語でない場合は、 &lt;code&gt;NULL&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="7a8ece02f9a39ae71e8e4075a5272fbf6d39d52f" translate="yes" xml:space="preserve">
          <source>Returns the Erlang term represented by a syntax tree. An exception is thrown if &lt;code&gt;Node&lt;/code&gt; does not represent a literal term.</source>
          <target state="translated">構文木で表されるErlang用語を返します。 &lt;code&gt;Node&lt;/code&gt; がリテラル用語を表していない場合、例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="805a1aa5dab7d22768d74c10f85e66531c307cca" translate="yes" xml:space="preserve">
          <source>Returns the Erlang term represented by a syntax tree. Evaluation fails with reason &lt;code&gt;badarg&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; does not represent a literal term.</source>
          <target state="translated">構文ツリーで表されたErlang用語を返します。 &lt;code&gt;Node&lt;/code&gt; がリテラル用語を表していない場合、評価は理由 &lt;code&gt;badarg&lt;/code&gt; で失敗します。</target>
        </trans-unit>
        <trans-unit id="9db79599de14ada84de9497958e5c2a4d0bc2605" translate="yes" xml:space="preserve">
          <source>Returns the ErrorInfo structure of a &lt;code&gt;warning_marker&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;warning_marker&lt;/code&gt; ノードのErrorInfo構造を返します。</target>
        </trans-unit>
        <trans-unit id="265c66ce0ed7670b2bbace8ea093eb9b359d74e8" translate="yes" xml:space="preserve">
          <source>Returns the ErrorInfo structure of an &lt;code&gt;error_marker&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;error_marker&lt;/code&gt; ノードのErrorInfo構造を返します。</target>
        </trans-unit>
        <trans-unit id="fbe576bae9bd07a2ef249b71e5ee954a9d5edc72" translate="yes" xml:space="preserve">
          <source>Returns the IP address for &lt;code&gt;Host&lt;/code&gt; as a tuple of integers. &lt;code&gt;Host&lt;/code&gt; can be an IP address, a single hostname, or a fully qualified hostname.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; のIPアドレスを整数のタプルとして返します。 &lt;code&gt;Host&lt;/code&gt; は、IPアドレス、単一のホスト名、または完全修飾ホスト名です。</target>
        </trans-unit>
        <trans-unit id="8ae9cfad0e8e863f8c66a9dcb1247f56cbc89ebe" translate="yes" xml:space="preserve">
          <source>Returns the OS version. On most systems, this function returns a tuple, but a string is returned instead if the system has versions that cannot be expressed as three numbers.</source>
          <target state="translated">OS のバージョンを返します。ほとんどのシステムでは、この関数はタプルを返しますが、システムに3つの数字で表現できないバージョンがある場合は、代わりに文字列を返します。</target>
        </trans-unit>
        <trans-unit id="181b9edd95af5ec5601442b00a2522062f3d54de" translate="yes" xml:space="preserve">
          <source>Returns the Universal Coordinated Time (UTC) reported by the underlying operating system. Returns local time if universal time is unavailable.</source>
          <target state="translated">この関数は、オペレーティングシステムで報告されている協定世界時(UTC)を返します。世界標準時が利用できない場合は、ローカルタイムを返します。</target>
        </trans-unit>
        <trans-unit id="6091699a5789a4fc9713bbcbcfafb54548c1e272" translate="yes" xml:space="preserve">
          <source>Returns the X509 certificate subject id.</source>
          <target state="translated">X509 証明書のサブジェクト ID を返します。</target>
        </trans-unit>
        <trans-unit id="7b21dc8a39643a3c80fd2b1c8e002b74bca0137c" translate="yes" xml:space="preserve">
          <source>Returns the action subtree of an abstract receive-expression.</source>
          <target state="translated">抽象的な受信式のアクションサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="48e170cc105f4161fb09b99b3975617f31981f33" translate="yes" xml:space="preserve">
          <source>Returns the address and port for the other end of a connection.</source>
          <target state="translated">接続の相手側のアドレスとポートを返します。</target>
        </trans-unit>
        <trans-unit id="cd655a00e2e593fe55937c13fc5aac27b2324ade" translate="yes" xml:space="preserve">
          <source>Returns the address and port number of the peer.</source>
          <target state="translated">相手のアドレスとポート番号を返します。</target>
        </trans-unit>
        <trans-unit id="3b2b259fa573feecbe4cc5ae5d5f0a79801b5131" translate="yes" xml:space="preserve">
          <source>Returns the address of the peer connected to the socket.</source>
          <target state="translated">ソケットに接続している相手のアドレスを返します。</target>
        </trans-unit>
        <trans-unit id="f68341465e5965717e97dbbbde61c3182dee4bfd" translate="yes" xml:space="preserve">
          <source>Returns the amount of padding before the comment, or &lt;code&gt;none&lt;/code&gt;. The latter means that a default padding may be used.</source>
          <target state="translated">コメントの前のパディングの量、または &lt;code&gt;none&lt;/code&gt; を返します。後者は、デフォルトのパディングを使用できることを意味します。</target>
        </trans-unit>
        <trans-unit id="2379dd0c459b280d4c7c6c4ea7588ffed992abfb" translate="yes" xml:space="preserve">
          <source>Returns the amount of time in seconds garbage collection of an entry in a node table is delayed. This limit can be set on startup by passing command-line flag &lt;code&gt;+zdntgc&lt;/code&gt; to &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of the command-line flag.</source>
          <target state="translated">ノードテーブルのエントリのガベージコレクションが遅延する時間を秒単位で返します。この制限は、コマンドラインフラグ &lt;code&gt;+zdntgc&lt;/code&gt; を &lt;code&gt;erl(1)&lt;/code&gt; に渡すことにより、起動時に設定できます。詳細については、コマンドラインフラグのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="701cc174b9fd947122cbcd2cce3b1ff525b138aa" translate="yes" xml:space="preserve">
          <source>Returns the application specification keys and their values for &lt;code&gt;Application&lt;/code&gt;. If the argument is omitted, it defaults to the application of the calling process.</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; のアプリケーション仕様キーとその値を返します。引数を省略すると、デフォルトで呼び出しプロセスのアプリケーションになります。</target>
        </trans-unit>
        <trans-unit id="b02c22f9effcf6b6380b9e5962e6ec00eba9a289" translate="yes" xml:space="preserve">
          <source>Returns the argument (the arity) subtree of an &lt;code&gt;arity_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;arity_qualifier&lt;/code&gt; ノードの引数（arity）サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="d0b0bb85b9cb3c72e3a41f18b22c69da6dcbdbc9" translate="yes" xml:space="preserve">
          <source>Returns the argument (the class) subtree of a &lt;code&gt;class_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;class_qualifier&lt;/code&gt; ノードの引数（クラス）サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="d90cc244925629a076f65a0fb5caae61eaa4d706" translate="yes" xml:space="preserve">
          <source>Returns the argument (the module) subtree of a &lt;code&gt;module_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;module_qualifier&lt;/code&gt; ノードの引数（モジュール）サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="c8dd020fe10ad85c0997e84cc437917667a7a41d" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree (the size) of a &lt;code&gt;size_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;size_qualifier&lt;/code&gt; ノードの引数サブツリー（サイズ）を返します。</target>
        </trans-unit>
        <trans-unit id="8198ab4dd0d22e3dff53d2ca91e06298c2b81166" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;case_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;case_expr&lt;/code&gt; ノードの引数サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="5ff0fe1f35a466048009ddb772cbaf179afa62f1" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;map_expr&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;#{...}&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Argument#{...}&lt;/code&gt;&quot;, &lt;code&gt;Argument&lt;/code&gt; is returned.</source>
          <target state="translated">もしあれば、 &lt;code&gt;map_expr&lt;/code&gt; ノードの引数サブツリーを返します。 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;#{...}&lt;/code&gt; &quot;を表す場合、 &lt;code&gt;none&lt;/code&gt; も返されません。それ以外の場合、 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;Argument#{...}&lt;/code&gt; 」を表すと、 &lt;code&gt;Argument&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="9d80f0f6da97655437937e97d0e0f33b08a5901c" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;prefix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;prefix_expr&lt;/code&gt; ノードの引数サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="0abb995005c490373685fbd7865ccc829287daa8" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;record_access&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_access&lt;/code&gt; ノードの引数サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="1e2719e6c9b06e1a2de4d14a0a66e2216ebe7af3" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of a &lt;code&gt;record_expr&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;#Type{...}&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Argument#Type{...}&lt;/code&gt;&quot;, &lt;code&gt;Argument&lt;/code&gt; is returned.</source>
          <target state="translated">もしあれば、 &lt;code&gt;record_expr&lt;/code&gt; ノードの引数サブツリーを返します。 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;#Type{...}&lt;/code&gt; 」を表す場合、 &lt;code&gt;none&lt;/code&gt; も返されません。それ以外の場合、 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;Argument#Type{...}&lt;/code&gt; 」を表すと、 &lt;code&gt;Argument&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="b2d70e2341344b223a4012fdbbf3fea74944c4a6" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of an abstract case-expression.</source>
          <target state="translated">抽象的なケース表現の引数サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="5efbc7164f8c30c78c2e2f29cf2998482e5adbac" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of an abstract let-expression.</source>
          <target state="translated">抽象的なlet-expressionの引数サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="296e64e199a2433090fb6ee6c7d0c97f68adaa3a" translate="yes" xml:space="preserve">
          <source>Returns the argument subtree of an abstract sequencing expression.</source>
          <target state="translated">抽象シーケンシング式の引数サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="d1d9b088904c097ac8124857fc6224d8ee996d74" translate="yes" xml:space="preserve">
          <source>Returns the argument types subtrees of a &lt;code&gt;function_type&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;fun((...) -&amp;gt; Return)&lt;/code&gt;&quot;, &lt;code&gt;any_arity&lt;/code&gt; is returned; otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;(T1, ...Tn) -&amp;gt; Return&lt;/code&gt;&quot; or &quot;&lt;code&gt;fun((T1, ...Tn) -&amp;gt; Return)&lt;/code&gt;&quot;, &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;function_type&lt;/code&gt; ノードの引数型サブツリーを返します。 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;fun((...) -&amp;gt; Return)&lt;/code&gt; 」を表す場合、 &lt;code&gt;any_arity&lt;/code&gt; が返されます。それ以外の場合、 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;(T1, ...Tn) -&amp;gt; Return&lt;/code&gt; &quot;または &quot; &lt;code&gt;fun((T1, ...Tn) -&amp;gt; Return)&lt;/code&gt; &quot;を表す場合、 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="9c18c16c27a458af59175ad22b7bd9bd59c7a091" translate="yes" xml:space="preserve">
          <source>Returns the arguments subtrees of a &lt;code&gt;type_application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;type_application&lt;/code&gt; ノードの引数サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="72f269a2d979e51b4999dceb0f352fbf973e1a82" translate="yes" xml:space="preserve">
          <source>Returns the arguments subtrees of a &lt;code&gt;user_type_application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;user_type_application&lt;/code&gt; ノードの引数サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="7eb582ee7ce33e41a7730f453b0676215b2e94a5" translate="yes" xml:space="preserve">
          <source>Returns the arity of a &lt;code&gt;fun_expr&lt;/code&gt; node. The result is the number of parameter patterns in the first clause of the fun-expression; subsequent clauses are ignored.</source>
          <target state="translated">&lt;code&gt;fun_expr&lt;/code&gt; ノードのアリティを返します。結果は、fun-expressionの最初の句のパラメーターパターンの数です。後続の句は無視されます。</target>
        </trans-unit>
        <trans-unit id="2a8b8fb2df18f380f4f38b75c0f50791f2fbda24" translate="yes" xml:space="preserve">
          <source>Returns the arity of a &lt;code&gt;function&lt;/code&gt; node. The result is the number of parameter patterns in the first clause of the function; subsequent clauses are ignored.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; ノードのアリティを返します。結果は、関数の最初の句のパラメーターパターンの数です。後続の句は無視されます。</target>
        </trans-unit>
        <trans-unit id="c41bb9e006064a2c010fad97f836ec54460c1c0a" translate="yes" xml:space="preserve">
          <source>Returns the arity of a &lt;code&gt;named_fun_expr&lt;/code&gt; node. The result is the number of parameter patterns in the first clause of the named fun-expression; subsequent clauses are ignored.</source>
          <target state="translated">&lt;code&gt;named_fun_expr&lt;/code&gt; ノードのアリティを返します。結果は、名前付きfun-expressionの最初の句のパラメーターパターンの数です。後続の句は無視されます。</target>
        </trans-unit>
        <trans-unit id="1c66e978985db464d51eb252b089fb77ac6ef9c2" translate="yes" xml:space="preserve">
          <source>Returns the arity part of an abstract function name variable.</source>
          <target state="translated">抽象関数名変数のアリティ部分を返します。</target>
        </trans-unit>
        <trans-unit id="0fee583493c0b9e812aebbcb65816d5e5078f9b1" translate="yes" xml:space="preserve">
          <source>Returns the associated post-comments of a node. This is a possibly empty list of abstract comments, in top-down textual order. When the code is formatted, post-comments are typically displayed to the right of and/or below the node. For example:</source>
          <target state="translated">ノードの関連するポストコメントを返します。これは、トップダウンのテキスト順に並んだ抽象的なコメントの空のリストである可能性があります。コードがフォーマットされている場合、ポストコメントは通常、ノードの右端や下に表示されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="683fdac42b4a88e80c18ba7ab4b4a9d4d5c04916" translate="yes" xml:space="preserve">
          <source>Returns the associated pre-comments of a node. This is a possibly empty list of abstract comments, in top-down textual order. When the code is formatted, pre-comments are typically displayed directly above the node. For example:</source>
          <target state="translated">ノードの関連するプレコメントを返します。これは、トップダウンのテキスト順に並べられた抽象的なコメントの空の可能性のあるリストです。コードがフォーマットされている場合、プレコメントは通常、ノードの真上に表示されます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7afe94017d50f6c3e4542d893d4891267047b5da" translate="yes" xml:space="preserve">
          <source>Returns the atom name of the Erlang error, given the error number in &lt;code&gt;error&lt;/code&gt;. The error atoms are &lt;code&gt;einval&lt;/code&gt;, &lt;code&gt;enoent&lt;/code&gt;, and so on. It can be used to make error terms from the driver.</source>
          <target state="translated">でエラー番号与えられ、Erlangのエラーの原子名を返します &lt;code&gt;error&lt;/code&gt; 。エラーアトムは &lt;code&gt;einval&lt;/code&gt; 、 &lt;code&gt;enoent&lt;/code&gt; などです。ドライバーからエラー条件を作成するために使用できます。</target>
        </trans-unit>
        <trans-unit id="45b5ca4f214d218d6e6e8c0e1e9abaa8a7babafb" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;Binary&lt;/code&gt;. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;latin1&lt;/code&gt;, no translation of bytes in the binary is done. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;utf8&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;, the binary must contain valid UTF-8 sequences.</source>
          <target state="translated">テキスト表現が &lt;code&gt;Binary&lt;/code&gt; であるアトムを返します。 &lt;code&gt;Encoding&lt;/code&gt; が &lt;code&gt;latin1&lt;/code&gt; の場合、バイナリのバイトの変換は行われません。場合 &lt;code&gt;Encoding&lt;/code&gt; ある &lt;code&gt;utf8&lt;/code&gt; または &lt;code&gt;unicode&lt;/code&gt; 、バイナリは、有効なUTF-8シーケンスが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="d60467e198a678082f07504c8074b8ce5347dad9" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;Binary&lt;/code&gt;. If &lt;code&gt;Encoding&lt;/code&gt; is &lt;code&gt;utf8&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;, the binary must contain valid UTF-8 sequences.</source>
          <target state="translated">テキスト表現が &lt;code&gt;Binary&lt;/code&gt; であるアトムを返します。場合 &lt;code&gt;Encoding&lt;/code&gt; ある &lt;code&gt;utf8&lt;/code&gt; または &lt;code&gt;unicode&lt;/code&gt; 、バイナリは、有効なUTF-8シーケンスが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="122f0b4fd4ccc7dc5fd6c72e2ee3e4994d3439fe" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;String&lt;/code&gt;, but only if there already exists such atom.</source>
          <target state="translated">テキスト表現が &lt;code&gt;String&lt;/code&gt; であるアトムを返しますが、そのようなアトムがすでに存在する場合に限られます。</target>
        </trans-unit>
        <trans-unit id="44f1680f8e149640f004a08954c48f2d34519a45" translate="yes" xml:space="preserve">
          <source>Returns the atom whose text representation is &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">テキスト表現が &lt;code&gt;String&lt;/code&gt; であるアトムを返します。</target>
        </trans-unit>
        <trans-unit id="13c1c072703152513178d451868e8920094a28e5" translate="yes" xml:space="preserve">
          <source>Returns the automatically detected &lt;code&gt;CpuTopologyy&lt;/code&gt;. The emulator detects the CPU topology on some newer Linux, Solaris, FreeBSD, and Windows systems. On Windows system with more than 32 logical processors, the CPU topology is not detected.</source>
          <target state="translated">自動的に検出された &lt;code&gt;CpuTopologyy&lt;/code&gt; を返します。エミュレータは、一部の新しいLinux、Solaris、FreeBSD、およびWindowsシステムでCPUトポロジを検出します。32を超える論理プロセッサを搭載したWindowsシステムでは、CPUトポロジが検出されません。</target>
        </trans-unit>
        <trans-unit id="96e3a5c6ba0d4b6a2a5c0b7c4da30ec8aa054415" translate="yes" xml:space="preserve">
          <source>Returns the average system load in the last 15 minutes, as described above. 0 represents no load, 256 represents the load reported as 1.00 by &lt;code&gt;rup&lt;/code&gt;.</source>
          <target state="translated">上記のように、過去15分間の平均システム負荷を返します。0は無負荷を表し、256は &lt;code&gt;rup&lt;/code&gt; によって1.00として報告された負荷を表します。</target>
        </trans-unit>
        <trans-unit id="34bc91dbef178d80091af01ff6437e2e5d6e1dad" translate="yes" xml:space="preserve">
          <source>Returns the average system load in the last five minutes, as described above. 0 represents no load, 256 represents the load reported as 1.00 by &lt;code&gt;rup&lt;/code&gt;.</source>
          <target state="translated">上記のように、過去5分間の平均システム負荷を返します。0は無負荷を表し、256は &lt;code&gt;rup&lt;/code&gt; によって1.00として報告された負荷を表します。</target>
        </trans-unit>
        <trans-unit id="ae0fefb3302bbd16183db84e84e61b8bcc8302e8" translate="yes" xml:space="preserve">
          <source>Returns the average system load in the last minute, as described above. 0 represents no load, 256 represents the load reported as 1.00 by &lt;code&gt;rup&lt;/code&gt;.</source>
          <target state="translated">上記のように、直前の1分間の平均システム負荷を返します。0は無負荷を表し、256は &lt;code&gt;rup&lt;/code&gt; によって1.00として報告された負荷を表します。</target>
        </trans-unit>
        <trans-unit id="c62b146f0ea6b2937c89cd31e61adbfbe55c52c6" translate="yes" xml:space="preserve">
          <source>Returns the binary relation containing the elements (E, Set) such that Set belongs to &lt;code&gt;SetOfSets&lt;/code&gt; and E belongs to Set. If &lt;code&gt;SetOfSets&lt;/code&gt; is a &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; of a set X and R is the equivalence relation in X induced by &lt;code&gt;SetOfSets&lt;/code&gt;, then the returned relation is the &lt;code&gt;&lt;a href=&quot;#canonical_map&quot;&gt;canonical map&lt;/a&gt;&lt;/code&gt; from X onto the equivalence classes with respect to R.</source>
          <target state="translated">Setが &lt;code&gt;SetOfSets&lt;/code&gt; に属し、E がSetに属するような要素（E、Set）を含む二項関係を返します。場合 &lt;code&gt;SetOfSets&lt;/code&gt; がある &lt;code&gt;&lt;a href=&quot;#partition&quot;&gt;partition&lt;/a&gt;&lt;/code&gt; セットXおよびRは、によって誘導されるXにおける同値関係である &lt;code&gt;SetOfSets&lt;/code&gt; 、返さ関係は &lt;code&gt;&lt;a href=&quot;#canonical_map&quot;&gt;canonical map&lt;/a&gt;&lt;/code&gt; R.に対する同値類にXから</target>
        </trans-unit>
        <trans-unit id="4b9f4fa6495150f4dac559c79c1b53664912ecca" translate="yes" xml:space="preserve">
          <source>Returns the binding of &lt;code&gt;Name&lt;/code&gt; in &lt;code&gt;BindingStruct&lt;/code&gt;.</source>
          <target state="translated">結合を返し &lt;code&gt;Name&lt;/code&gt; で &lt;code&gt;BindingStruct&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f618e504ad847fbbd7a00a8a41536e92c2995e6e" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;binary_field&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;binary_field&lt;/code&gt; の本体サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="af1f37946f37e3568c8ef91679e97c14c7e2464e" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;catch_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;catch_expr&lt;/code&gt; ノードの本体サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="98e586311ff39235b2a2d68b424bb03e980aa8bd" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;class_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;class_qualifier&lt;/code&gt; ノードの本体サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="2a3600c52226fd07ebbfc2010e2d2edbf0af076a" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;generator&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; ノードの本体サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="b5736be84b042590cad9734b948b9235728217c2" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;match_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;match_expr&lt;/code&gt; ノードの本体サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="f1ef4325567f20cf2b1008d1affe78f02eb24483" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;module_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;module_qualifier&lt;/code&gt; ノードの本体サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="82ef6f543d6328e386a601179345711ecea72f1f" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;parentheses&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;parentheses&lt;/code&gt; ノードの本体サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="40bfd6b9354c50dc5460300711c61fa6434b6e6b" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of a &lt;code&gt;size_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;size_qualifier&lt;/code&gt; ノードの本体サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="eee234eae2d5e4cda0de37e9f374f8df9573070b" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an &lt;code&gt;arity_qualifier&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;arity_qualifier&lt;/code&gt; ノードの本体サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="49e09bc308e5e2dbfc57287e45fc5a319dca96fe" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract catch-expression.</source>
          <target state="translated">抽象的なキャッチ式のボディサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="3dd798aec0a162df7f85cdd081e4cf267551d58c" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract clause.</source>
          <target state="translated">抽象節の本文サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="b3adc16411c02f86f892337c37d51892204f0e43" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract fun-expression.</source>
          <target state="translated">抽象的な fun-expression の body サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="a43fb47299d12372834470945983b1529beba608" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract let-expression.</source>
          <target state="translated">抽象的なlet-expressionのボディサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="de13160dd3319b4c8d59426d9d313f5a250ac67e" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract letrec-expression.</source>
          <target state="translated">抽象的なletrec-expressionのボディサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="fa97f50226a4aec936db01a23944aca4345c0dc4" translate="yes" xml:space="preserve">
          <source>Returns the body subtree of an abstract sequencing expression.</source>
          <target state="translated">抽象シーケンシング式のボディサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="54333922a1b9f2fdd3c5f0d07ef37ce87e1e7318" translate="yes" xml:space="preserve">
          <source>Returns the byte at position &lt;code&gt;Pos&lt;/code&gt; (zero-based) in binary &lt;code&gt;Subject&lt;/code&gt; as an integer. If &lt;code&gt;Pos&lt;/code&gt; &amp;gt;= &lt;code&gt;byte_size(Subject)&lt;/code&gt;, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">位置 &lt;code&gt;Pos&lt;/code&gt; （ゼロベース）のバイトを、バイナリ &lt;code&gt;Subject&lt;/code&gt; で整数として返します。もし &lt;code&gt;Pos&lt;/code&gt; &amp;gt; = &lt;code&gt;byte_size(Subject)&lt;/code&gt; 、 &lt;code&gt;badarg&lt;/code&gt; の例外が発生します。</target>
        </trans-unit>
        <trans-unit id="9e10739d63bd28a77ebe02ce1df0249e36756e95" translate="yes" xml:space="preserve">
          <source>Returns the call count value for this function or &lt;code&gt;true&lt;/code&gt; for the pseudo function &lt;code&gt;on_load&lt;/code&gt; if call count tracing is active. Otherwise &lt;code&gt;false&lt;/code&gt; is returned.</source>
          <target state="translated">この関数の呼び出しカウント値を返します。呼び出しカウントトレースがアクティブな場合は、疑似関数 &lt;code&gt;on_load&lt;/code&gt; の &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c1a6461d609159d0eebd3e7835ad0c3e1892acac" translate="yes" xml:space="preserve">
          <source>Returns the call time values for this function or &lt;code&gt;true&lt;/code&gt; for the pseudo function &lt;code&gt;on_load&lt;/code&gt; if call time tracing is active. Otherwise &lt;code&gt;false&lt;/code&gt; is returned. The call time values returned, &lt;code&gt;[{Pid, Count, S, Us}]&lt;/code&gt;, is a list of each process that executed the function and its specific counters.</source>
          <target state="translated">この関数の呼び出し時間の値を返します。呼び出し時間トレースがアクティブな場合は、疑似関数 &lt;code&gt;on_load&lt;/code&gt; の場合は &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合は &lt;code&gt;false&lt;/code&gt; が返されます。返される呼び出し時間値 &lt;code&gt;[{Pid, Count, S, Us}]&lt;/code&gt; は、関数を実行した各プロセスとその特定のカウンターのリストです。</target>
        </trans-unit>
        <trans-unit id="19f003446976eabe33a935b6550373619df6e5c7" translate="yes" xml:space="preserve">
          <source>Returns the calling function as a tuple &lt;code&gt;{Module, Function, Arity}&lt;/code&gt; or the atom &lt;code&gt;undefined&lt;/code&gt; if the calling function cannot be determined. Can only be used in the &lt;code&gt;MatchBody&lt;/code&gt; part when tracing.</source>
          <target state="translated">呼び出し元の関数を判別できない場合は、呼び出し &lt;code&gt;undefined&lt;/code&gt; &lt;code&gt;{Module, Function, Arity}&lt;/code&gt; タプル{モジュール、関数、アリティ}または未定義のアトムとして返します。トレース時に &lt;code&gt;MatchBody&lt;/code&gt; パーツでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="46e267a27ac8442f544f0a2c3835b8dcea423740" translate="yes" xml:space="preserve">
          <source>Returns the category of &lt;code&gt;Token&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; のカテゴリを返します。</target>
        </trans-unit>
        <trans-unit id="604f66a1103440ecb2eb4492664aefc897080ed5" translate="yes" xml:space="preserve">
          <source>Returns the character sequence represented by a &lt;code&gt;text&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;text&lt;/code&gt; ノードによって表される文字シーケンスを返します。</target>
        </trans-unit>
        <trans-unit id="a96cfa892cb1fdb86fb77d2cf4769581f610589c" translate="yes" xml:space="preserve">
          <source>Returns the child specification map for the child identified by &lt;code&gt;Id&lt;/code&gt; under supervisor &lt;code&gt;SupRef&lt;/code&gt;. The returned map contains all keys, both mandatory and optional.</source>
          <target state="translated">スーパーバイザ &lt;code&gt;SupRef&lt;/code&gt; の下で &lt;code&gt;Id&lt;/code&gt; によって識別された子の子仕様マップを返します。返されるマップには、必須とオプションの両方のすべてのキーが含まれています。</target>
        </trans-unit>
        <trans-unit id="9f3c8087df59c0c2485ac3b75db76bdcc90130de" translate="yes" xml:space="preserve">
          <source>Returns the code path.</source>
          <target state="translated">コードパスを返します。</target>
        </trans-unit>
        <trans-unit id="a157676aa3f637ae8e98f5f55b1f9756d1948eb2" translate="yes" xml:space="preserve">
          <source>Returns the column of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; の注釈のコレクションの列を返します。</target>
        </trans-unit>
        <trans-unit id="0c6e40c25f1cd3004cb8fe3ac679ec834c21994d" translate="yes" xml:space="preserve">
          <source>Returns the column of the annotations Anno.</source>
          <target state="translated">アノテーション Anno のカラムを返します。</target>
        </trans-unit>
        <trans-unit id="ff2a63c39c785ad3e66b17711dba93c1299ae2c4" translate="yes" xml:space="preserve">
          <source>Returns the command used to start this Erlang instance. If this information could not be found, the string &lt;code&gt;&quot;no_prog_name&quot;&lt;/code&gt; is returned.</source>
          <target state="translated">このErlangインスタンスを開始するために使用されるコマンドを返します。この情報が見つからなかった場合は、文字列 &lt;code&gt;&quot;no_prog_name&quot;&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="11df78c00081dac2a230bf7409d5559f21e28ad1" translate="yes" xml:space="preserve">
          <source>Returns the compatibility mode of the local node as an integer. The integer returned represents the Erlang/OTP release that the current emulator has been set to be backward compatible with. The compatibility mode can be configured at startup by using command-line flag &lt;code&gt;+R&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">ローカルノードの互換モードを整数として返します。返される整数は、現在のエミュレータが下位互換性を持つように設定されているErlang / OTPリリースを表します。互換モードは、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドラインフラグ &lt;code&gt;+R&lt;/code&gt; を使用して起動時に構成できます。</target>
        </trans-unit>
        <trans-unit id="319f75b70c46c602fd13253c7d3031c3983c82c1" translate="yes" xml:space="preserve">
          <source>Returns the compiler library directory. Equivalent to &lt;code&gt;code:lib_dir(compiler)&lt;/code&gt;.</source>
          <target state="translated">コンパイラライブラリディレクトリを返します。 &lt;code&gt;code:lib_dir(compiler)&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="8b6e176a6f35ea4563e4440ef3eab5546e4ae7ee" translate="yes" xml:space="preserve">
          <source>Returns the configuration parameters and their values for &lt;code&gt;Application&lt;/code&gt;. If the argument is omitted, it defaults to the application of the calling process.</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; の構成パラメーターとその値を返します。引数を省略すると、デフォルトで呼び出しプロセスのアプリケーションになります。</target>
        </trans-unit>
        <trans-unit id="cad5d8239e2b47ab5ade33b4f4080c89475049b8" translate="yes" xml:space="preserve">
          <source>Returns the contents of the specified variable in an Erlang term.</source>
          <target state="translated">Erlang用語で指定した変数の内容を返します。</target>
        </trans-unit>
        <trans-unit id="cf99ac28ff31b26e2148d67a91215bfe540f6df4" translate="yes" xml:space="preserve">
          <source>Returns the cookie header that would have been sent when making a request to &lt;code&gt;Url&lt;/code&gt; using profile &lt;code&gt;Profile&lt;/code&gt;. If no profile is specified, the default profile is used.</source>
          <target state="translated">プロファイル &lt;code&gt;Profile&lt;/code&gt; を使用して &lt;code&gt;Url&lt;/code&gt; にリクエストを送信したときに送信されるはずのCookieヘッダーを返します。プロファイルが指定されていない場合、デフォルトのプロファイルが使用されます。</target>
        </trans-unit>
        <trans-unit id="608ad012f81e226a19e0c07f218a243a0aa81c53" translate="yes" xml:space="preserve">
          <source>Returns the creation of the local node as an integer. The creation is changed when a node is restarted. The creation of a node is stored in process identifiers, port identifiers, and references. This makes it (to some extent) possible to distinguish between identifiers from different incarnations of a node. The valid creations are integers in the range 1..3, but this will probably change in a future release. If the node is not alive, &lt;code&gt;0&lt;/code&gt; is returned.</source>
          <target state="translated">ローカルノードの作成を整数として返します。ノードの再起動時に作成が変更されます。ノードの作成は、プロセス識別子、ポート識別子、および参照に保存されます。これにより、（ある程度）ノードの異なる化身の識別子を区別することが可能になります。有効な作成は、1..3の範囲の整数ですが、将来のリリースで変更される可能性があります。ノードがアクティブでない場合、 &lt;code&gt;0&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="3c18827d24d967dc7530d8b115b01e2753f74116" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. Notice that it is not uncommon with negative values.</source>
          <target state="translated">現在の &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 返します。負の値でも珍しいことではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fdfae5e16d780ddc3ea92abf68d35634a70d13d0" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">引数として渡された &lt;code&gt;Unit&lt;/code&gt; 変換された現在の &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="711859b62d08d55c53fb38b52ca9673bcee01f86" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;. This is a monotonically increasing time since some unspecified point in time.</source>
          <target state="translated">現在の &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; で返します。これは、不特定の時点から単調に増加する時間です。</target>
        </trans-unit>
        <trans-unit id="2a20c4abd06789f1e71e8b077b463cc27dcfa6cc" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt;. Notice that it is not uncommon with negative values.</source>
          <target state="translated">現在の &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; 返します。負の値でも珍しいことではないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="0b645e2753405e3d64b5df7c7790cbc8c131d990" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;OS system time&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">引数として渡された &lt;code&gt;Unit&lt;/code&gt; 変換された現在の &lt;code&gt;OS system time&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="4d25da574e4b27d6fcf1c2570f032dc078861560" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;OS system time&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;time unit&lt;/code&gt;.</source>
          <target state="translated">現在の &lt;code&gt;OS system time&lt;/code&gt; を &lt;code&gt;native&lt;/code&gt; &lt;code&gt;time unit&lt;/code&gt; で返します。</target>
        </trans-unit>
        <trans-unit id="1a75e4bbbf2f66935151b586b17801f7017b5d15" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;OS system time&lt;/code&gt; in the same format as &lt;code&gt;erlang:timestamp/0&lt;/code&gt;. The tuple can be used together with function &lt;code&gt;calendar:now_to_universal_time/1&lt;/code&gt; or &lt;code&gt;calendar:now_to_local_time/1&lt;/code&gt; to get calendar time. Using the calendar time, together with the &lt;code&gt;MicroSecs&lt;/code&gt; part of the return tuple from this function, allows you to log time stamps in high resolution and consistent with the time in the rest of the OS.</source>
          <target state="translated">現在の &lt;code&gt;OS system time&lt;/code&gt; を &lt;code&gt;erlang:timestamp/0&lt;/code&gt; と同じ形式で返します。タプルは、関数 &lt;code&gt;calendar:now_to_universal_time/1&lt;/code&gt; または &lt;code&gt;calendar:now_to_local_time/1&lt;/code&gt; と一緒に使用して、カレンダー時間を取得できます。この関数からの戻りタプルの &lt;code&gt;MicroSecs&lt;/code&gt; 部分とともにカレンダー時間を使用すると、タイムスタンプを高解像度でログに記録し、残りのOSの時間と一致させることができます。</target>
        </trans-unit>
        <trans-unit id="37c49005a262a0f1d1598a4c15faa8b63df387ad" translate="yes" xml:space="preserve">
          <source>Returns the current &lt;code&gt;system_logger&lt;/code&gt; as set by &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt;erlang:system_flag(system_logger, _)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">現在返し &lt;code&gt;system_logger&lt;/code&gt; によって設定されるように &lt;code&gt;&lt;a href=&quot;#system_flag-2&quot;&gt;erlang:system_flag(system_logger, _)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8efa54c365a73183d02fa71838aec36646f6c216" translate="yes" xml:space="preserve">
          <source>Returns the current address to which the socket is bound.</source>
          <target state="translated">ソケットがバインドされている現在のアドレスを返します。</target>
        </trans-unit>
        <trans-unit id="02a1e778f4e86f140ebf62bb3a535503e471751b" translate="yes" xml:space="preserve">
          <source>Returns the current call stack back-trace (&lt;strong&gt;stacktrace&lt;/strong&gt;) of the process. The stack has the same format as in the &lt;code&gt;catch&lt;/code&gt; part of a &lt;code&gt;try&lt;/code&gt;. See &lt;code&gt;The call-stack back trace (stacktrace)&lt;/code&gt;. The depth of the stacktrace is truncated according to the &lt;code&gt;backtrace_depth&lt;/code&gt; system flag setting.</source>
          <target state="translated">プロセスの現在のコールスタックバックトレース（&lt;strong&gt;stacktrace&lt;/strong&gt;）を返します。スタックの形式は、 &lt;code&gt;try&lt;/code&gt; の &lt;code&gt;catch&lt;/code&gt; 部分と同じです。 &lt;code&gt;The call-stack back trace (stacktrace)&lt;/code&gt; 参照してください。 &lt;code&gt;backtrace_depth&lt;/code&gt; の深さは、backtrace_depthシステムフラグ設定に従って切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="7006f00550b2e544d2b3fda9e41c63614deb9d5a" translate="yes" xml:space="preserve">
          <source>Returns the current call stack back-trace (&lt;strong&gt;stacktrace&lt;/strong&gt;) of the process. The stack has the same format as returned by &lt;code&gt;&lt;a href=&quot;#get_stacktrace-0&quot;&gt;erlang:get_stacktrace/0&lt;/a&gt;&lt;/code&gt;. The depth of the stacktrace is truncated according to the &lt;code&gt;backtrace_depth&lt;/code&gt; system flag setting.</source>
          <target state="translated">プロセスの現在の呼び出しスタックのバックトレース（&lt;strong&gt;stacktrace&lt;/strong&gt;）を返します。スタックの形式は &lt;code&gt;&lt;a href=&quot;#get_stacktrace-0&quot;&gt;erlang:get_stacktrace/0&lt;/a&gt;&lt;/code&gt; によって返されるものと同じです。 &lt;code&gt;backtrace_depth&lt;/code&gt; の深さは、backtrace_depthシステムフラグ設定に従って切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="9206c23baf7330abc4f2d2174b72db4b3f519889" translate="yes" xml:space="preserve">
          <source>Returns the current date and time according to Universal Time Coordinated (UTC) in the form &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt; if supported by the underlying OS. Otherwise &lt;code&gt;erlang:universaltime()&lt;/code&gt; is equivalent to &lt;code&gt;erlang:localtime()&lt;/code&gt;. Example:</source>
          <target state="translated">基礎となるOSでサポートされている場合は、世界協定時刻（UTC）に従って現在の日付と時刻を &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt; の形式で返します。それ以外の場合、 &lt;code&gt;erlang:universaltime()&lt;/code&gt; は &lt;code&gt;erlang:localtime()&lt;/code&gt; と同等です。例：</target>
        </trans-unit>
        <trans-unit id="f96af23658442caff1c6ee92ae5f4eb5e2d8b598" translate="yes" xml:space="preserve">
          <source>Returns the current date as &lt;code&gt;{Year, Month, Day}&lt;/code&gt;.</source>
          <target state="translated">現在の日付を &lt;code&gt;{Year, Month, Day}&lt;/code&gt; として返します。</target>
        </trans-unit>
        <trans-unit id="2cf5f4fbb8247b2209f4fabecfa72ccf18767bfb" translate="yes" xml:space="preserve">
          <source>Returns the current list of allowed slave hosts.</source>
          <target state="translated">許可されているスレーブホストの現在のリストを返します。</target>
        </trans-unit>
        <trans-unit id="b9e1afec157e2e1d2c1c4fda988f28412653138c" translate="yes" xml:space="preserve">
          <source>Returns the current local date and time, &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt;, for example:</source>
          <target state="translated">現在のローカルの日付と時刻、 &lt;code&gt;{{Year, Month, Day}, {Hour, Minute, Second}}&lt;/code&gt; 返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="2e89bdc2b41269f4de0be6712411919f3ceca2f8" translate="yes" xml:space="preserve">
          <source>Returns the current mapping for warning events. Events sent using &lt;code&gt;warning_msg/1,2&lt;/code&gt; or &lt;code&gt;warning_report/1,2&lt;/code&gt; are tagged as errors, warnings (default), or info, depending on the value of command-line flag &lt;code&gt;+W&lt;/code&gt;.</source>
          <target state="translated">警告イベントの現在のマッピングを返します。 &lt;code&gt;warning_msg/1,2&lt;/code&gt; または &lt;code&gt;warning_report/1,2&lt;/code&gt; を使用して送信されたイベントは、コマンドラインフラグ &lt;code&gt;+W&lt;/code&gt; の値に応じて、エラー、警告（デフォルト）、または情報としてタグ付けされます。</target>
        </trans-unit>
        <trans-unit id="03eaef2e18db17be19de254c9e4a5586bfaa0a58" translate="yes" xml:space="preserve">
          <source>Returns the current performance counter value in &lt;code&gt;perf_counter&lt;/code&gt;&lt;code&gt;time unit&lt;/code&gt;. This is a highly optimized call that might not be traceable.</source>
          <target state="translated">現在のパフォーマンスカウンター値を &lt;code&gt;perf_counter&lt;/code&gt; &lt;code&gt;time unit&lt;/code&gt; で返します。これは高度に最適化された呼び出しであり、追跡できない可能性があります。</target>
        </trans-unit>
        <trans-unit id="2f185b6b26a103b2b6122c6550d07654dc93ff97" translate="yes" xml:space="preserve">
          <source>Returns the current reference count of the port data lock passed as argument (&lt;code&gt;pdl&lt;/code&gt;).</source>
          <target state="translated">引数（ &lt;code&gt;pdl&lt;/code&gt; ）として渡されたポートデータロックの現在の参照カウントを返します。</target>
        </trans-unit>
        <trans-unit id="4030aa5cb3b3dfa9bc9bb9280a40746b196b00c9" translate="yes" xml:space="preserve">
          <source>Returns the current reference count on &lt;code&gt;bin&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bin&lt;/code&gt; の現在の参照カウントを返します。</target>
        </trans-unit>
        <trans-unit id="57117cfb32abba815f94d6a57bcf4e9818afab65" translate="yes" xml:space="preserve">
          <source>Returns the current state of process flag &lt;code&gt;message_queue_data&lt;/code&gt;. &lt;code&gt;MQD&lt;/code&gt; is either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスフラグ &lt;code&gt;message_queue_data&lt;/code&gt; の現在の状態を返します。 &lt;code&gt;MQD&lt;/code&gt; は &lt;code&gt;off_heap&lt;/code&gt; または &lt;code&gt;on_heap&lt;/code&gt; のいずれかです。詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="d052dab57302944610daa13b6732e65e7594abd0" translate="yes" xml:space="preserve">
          <source>Returns the current state of process flag &lt;code&gt;message_queue_data&lt;/code&gt;. &lt;code&gt;MQD&lt;/code&gt; is either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスフラグ &lt;code&gt;message_queue_data&lt;/code&gt; の現在の状態を返します。 &lt;code&gt;MQD&lt;/code&gt; は &lt;code&gt;off_heap&lt;/code&gt; または &lt;code&gt;on_heap&lt;/code&gt; のいずれかです。詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5cb7080ebfba8377d800779f5b6b5972f25409a6" translate="yes" xml:space="preserve">
          <source>Returns the current system monitoring settings set by &lt;code&gt;&lt;a href=&quot;#system_monitor-2&quot;&gt; erlang:system_monitor/2&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;{MonitorPid, Options}&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if no settings exist. The order of the options can be different from the one that was set.</source>
          <target state="translated">戻り値によって設定された設定監視現在のシステム &lt;code&gt;&lt;a href=&quot;#system_monitor-2&quot;&gt; erlang:system_monitor/2&lt;/a&gt;&lt;/code&gt; として &lt;code&gt;{MonitorPid, Options}&lt;/code&gt; 、または &lt;code&gt;undefined&lt;/code&gt; ない設定が存在しない場合。オプションの順序は、設定されたものとは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="e4f55dab96f26c8ba082de5de479eb29ebf575b4" translate="yes" xml:space="preserve">
          <source>Returns the current system monitoring settings set by &lt;code&gt;&lt;a href=&quot;#system_monitor-2&quot;&gt;erlang:system_monitor/2&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;{MonitorPid, Options}&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if no settings exist. The order of the options can be different from the one that was set.</source>
          <target state="translated">戻り値によって設定された設定監視現在のシステム &lt;code&gt;&lt;a href=&quot;#system_monitor-2&quot;&gt;erlang:system_monitor/2&lt;/a&gt;&lt;/code&gt; として &lt;code&gt;{MonitorPid, Options}&lt;/code&gt; 、または &lt;code&gt;undefined&lt;/code&gt; ない設定が存在しない場合。オプションの順序は、設定された順序と異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="4f0efb9db6394cabcf1ce55877c9fe977d4bf696" translate="yes" xml:space="preserve">
          <source>Returns the current system profiling settings set by &lt;code&gt;&lt;a href=&quot;#system_profile-2&quot;&gt; erlang:system_profile/2&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;{ProfilerPid, Options}&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if there are no settings. The order of the options can be different from the one that was set.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_profile-2&quot;&gt; erlang:system_profile/2&lt;/a&gt;&lt;/code&gt; によって設定された現在のシステムプロファイリング設定を &lt;code&gt;{ProfilerPid, Options}&lt;/code&gt; として返すか、設定がない場合は &lt;code&gt;undefined&lt;/code&gt; を返します。オプションの順序は、設定されたものとは異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="e94f1c1a87e3b71f88ffad8e78f930a5a919fccd" translate="yes" xml:space="preserve">
          <source>Returns the current system profiling settings set by &lt;code&gt;&lt;a href=&quot;#system_profile-2&quot;&gt;erlang:system_profile/2&lt;/a&gt;&lt;/code&gt; as &lt;code&gt;{ProfilerPid, Options}&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt; if there are no settings. The order of the options can be different from the one that was set.</source>
          <target state="translated">戻り値によって設定された設定プロファイル現在のシステム &lt;code&gt;&lt;a href=&quot;#system_profile-2&quot;&gt;erlang:system_profile/2&lt;/a&gt;&lt;/code&gt; として &lt;code&gt;{ProfilerPid, Options}&lt;/code&gt; 、または &lt;code&gt;undefined&lt;/code&gt; 設定がない場合。オプションの順序は、設定された順序と異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="76329b1b04a56512687c837f540694b0cca5bdfb" translate="yes" xml:space="preserve">
          <source>Returns the current time as &lt;code&gt;{Hour, Minute, Second}&lt;/code&gt;.</source>
          <target state="translated">現在の時刻を &lt;code&gt;{Hour, Minute, Second}&lt;/code&gt; として返します。</target>
        </trans-unit>
        <trans-unit id="88291274301b54418cc11c1900cbcc9f61082d30" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; 間の現在の時間オフセットを、引数として渡された &lt;code&gt;Unit&lt;/code&gt; 変換して返します。</target>
        </trans-unit>
        <trans-unit id="dbec6f6193fde2b8b200a6e02632a17346a7ede8" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;time_unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; 間の現在の時間オフセットを、引数として渡された &lt;code&gt;time_unit&lt;/code&gt; に変換して返します。</target>
        </trans-unit>
        <trans-unit id="43ccbd93cd57654f40f0b6cab4abbea5a06b0788" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;. Current time offset added to an Erlang monotonic time gives corresponding Erlang system time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt; Erlang monotonic time&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt; Erlang system time&lt;/a&gt;&lt;/code&gt; 間の現在の時間オフセットを &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; 返します。アーラン単調時間に追加された現在の時間オフセットは、対応するアーランシステム時間を与えます。</target>
        </trans-unit>
        <trans-unit id="0b06a60e6aa8e9650f56ffc46b72886f7a7aaaf9" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;Unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">引数として渡された &lt;code&gt;Unit&lt;/code&gt; 変換された &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 間の現在の時間オフセットを返します。</target>
        </trans-unit>
        <trans-unit id="44568658e69aa0c07fd80bcfe2f914b4967c6fa5" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; converted into the &lt;code&gt;time_unit&lt;/code&gt; passed as argument.</source>
          <target state="translated">引数として渡された &lt;code&gt;time_unit&lt;/code&gt; に変換された &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 間の現在の時間オフセットを返します。</target>
        </trans-unit>
        <trans-unit id="c634418d8dce9f1df80dfb796f863964845406c0" translate="yes" xml:space="preserve">
          <source>Returns the current time offset between &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;native&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt;. Current time offset added to an Erlang monotonic time gives corresponding Erlang system time.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Erlang_Monotonic_Time&quot;&gt;Erlang monotonic time&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;time_correction#Erlang_System_Time&quot;&gt;Erlang system time&lt;/a&gt;&lt;/code&gt; 間の現在の時間オフセットを &lt;code&gt;native&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type_time_unit&quot;&gt;time unit&lt;/a&gt;&lt;/code&gt; 返します。Erlang単調時間に追加された現在の時間オフセットは、対応するErlangシステム時間を示します。</target>
        </trans-unit>
        <trans-unit id="6f911a46de11449a7332120a7fcff2f13f03320f" translate="yes" xml:space="preserve">
          <source>Returns the current version number of the interpreter. Same as the version number of the Debugger application.</source>
          <target state="translated">インタープリタの現在のバージョン番号を返します。デバッガアプリケーションのバージョン番号と同じです。</target>
        </trans-unit>
        <trans-unit id="f3da5908b9e02033e12ede02fbab26899392a315" translate="yes" xml:space="preserve">
          <source>Returns the current working directory at the local client.</source>
          <target state="translated">ローカルクライアントの現在の作業ディレクトリを返します。</target>
        </trans-unit>
        <trans-unit id="0fe2ddffadede96a71d2b41ac18d0aaa85da0f36" translate="yes" xml:space="preserve">
          <source>Returns the current working directory at the remote server.</source>
          <target state="translated">リモートサーバの現在の作業ディレクトリを返します。</target>
        </trans-unit>
        <trans-unit id="40ec27418eec0200280b3f6b646fe3a07caca002" translate="yes" xml:space="preserve">
          <source>Returns the date and time the specified file or directory was last modified, or &lt;code&gt;0&lt;/code&gt; if the file does not exist.</source>
          <target state="translated">指定されたファイルまたはディレクトリが最後に変更された日時を返します。ファイルが存在しない場合は &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="665277cc2d2109d3285fdb5e4e6b0f100569a5f8" translate="yes" xml:space="preserve">
          <source>Returns the decompression dictionary currently in use by the stream. This function must be called between &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1,2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#inflateEnd-1&quot;&gt;inflateEnd&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">現在ストリームで使用されている解凍ディクショナリを返します。この関数は、 &lt;code&gt;&lt;a href=&quot;#inflateInit-1&quot;&gt;inflateInit/1,2&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#inflateEnd-1&quot;&gt;inflateEnd&lt;/a&gt;&lt;/code&gt; の間で呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="cfb922e4a38673d1141981ca392c079972b4539e" translate="yes" xml:space="preserve">
          <source>Returns the default encoding of Erlang source files.</source>
          <target state="translated">Erlangソースファイルのデフォルトのエンコーディングを返します。</target>
        </trans-unit>
        <trans-unit id="4242a7681508d13aa2f8877ebc667e73a1f63ac0" translate="yes" xml:space="preserve">
          <source>Returns the default port parallelism scheduling hint used. For more information, see command-line argument &lt;code&gt;&lt;a href=&quot;erl#+spp&quot;&gt;+spp&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">使用されるデフォルトのポート並列処理スケジューリングヒントを返します。詳細については、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドライン引数 &lt;code&gt;&lt;a href=&quot;erl#+spp&quot;&gt;+spp&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="8eabb9103de8c6b9960e24cc527704701342fafa" translate="yes" xml:space="preserve">
          <source>Returns the default state.</source>
          <target state="translated">デフォルトの状態を返します。</target>
        </trans-unit>
        <trans-unit id="3788384433fc7bc669257c1d26dbfd7731333b9d" translate="yes" xml:space="preserve">
          <source>Returns the default value of the &lt;code&gt;message_queue_data&lt;/code&gt; process flag, which is either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. This default is set by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information on the &lt;code&gt;message_queue_data&lt;/code&gt; process flag, see documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;message_queue_data&lt;/code&gt; プロセスフラグのデフォルト値である &lt;code&gt;off_heap&lt;/code&gt; または &lt;code&gt;on_heap&lt;/code&gt; を返します。このデフォルトは、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドライン引数 &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; によって設定されます。詳細について &lt;code&gt;message_queue_data&lt;/code&gt; の処理フラグのドキュメントを参照 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8677b590a14f42456a2ac32995ad391ecc867a45" translate="yes" xml:space="preserve">
          <source>Returns the default value of the &lt;code&gt;message_queue_data&lt;/code&gt; process flag, which is either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. This default is set by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information on the &lt;code&gt;message_queue_data&lt;/code&gt; process flag, see documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;message_queue_data&lt;/code&gt; プロセスフラグのデフォルト値を返します。これは、 &lt;code&gt;off_heap&lt;/code&gt; または &lt;code&gt;on_heap&lt;/code&gt; です。このデフォルトは、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドライン引数 &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; によって設定されます。詳細について &lt;code&gt;message_queue_data&lt;/code&gt; の処理フラグのドキュメントを参照 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7da89f4140ad3599b3649f21974300c4287c6b38" translate="yes" xml:space="preserve">
          <source>Returns the default values of one or more options.</source>
          <target state="translated">1つ以上のオプションのデフォルト値を返します。</target>
        </trans-unit>
        <trans-unit id="6649635be6debd0195bfa53f737ffb88e939ccb5" translate="yes" xml:space="preserve">
          <source>Returns the detected CPU quota the emulator is limited by. The return value is an integer saying how many processors' worth of runtime we get (between 1 and the number of logical processors), or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect a quota.</source>
          <target state="translated">エミュレータが制限されている検出されたCPUクォータを返します。戻り値は、取得するランタイムのプロセッサー数（1から論理プロセッサーの数まで）を示す整数、またはエミュレーターがクォータを検出できない場合は &lt;code&gt;unknown&lt;/code&gt; アトムです。</target>
        </trans-unit>
        <trans-unit id="5af727694834cdffdd3eedb346721703ea0a373d" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors available to the Erlang runtime system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect the available logical processors. The number of available logical processors is less than or equal to the number of &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors_online&quot;&gt; logical processors online&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Erlangランタイムシステムで利用可能な論理プロセッサの検出数を返します。戻り値は整数、またはエミュレーターが使用可能な論理プロセッサーを検出できない場合はアトムが &lt;code&gt;unknown&lt;/code&gt; です。使用可能な論理プロセッサーの数は、 &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors_online&quot;&gt; logical processors online&lt;/a&gt;&lt;/code&gt; の論理プロセッサーの数以下です。</target>
        </trans-unit>
        <trans-unit id="ff386debfef1f2d90455df24f04746f84af518ed" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors available to the Erlang runtime system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect the available logical processors. The number of available logical processors is less than or equal to the number of &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors_online&quot;&gt;logical processors online&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Erlangランタイムシステムで利用可能な論理プロセッサの検出された数を返します。戻り値は整数、またはエミュレーターが使用可能な論理プロセッサーを検出できない場合は &lt;code&gt;unknown&lt;/code&gt; アトムのいずれかです。利用可能な論理プロセッサの数は、 &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors_online&quot;&gt;logical processors online&lt;/a&gt;&lt;/code&gt; の論理プロセッサの数以下です。</target>
        </trans-unit>
        <trans-unit id="037a7bd34e42bd117fc89f3c74420d2f42e4b29d" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors configured in the system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect the configured logical processors.</source>
          <target state="translated">システムに構成されている論理プロセッサーの検出された数を返します。戻り値は整数で &lt;code&gt;unknown&lt;/code&gt; か、エミュレーターが構成済みの論理プロセッサーを検出できない場合はアトムは不明です。</target>
        </trans-unit>
        <trans-unit id="75df2a91b04a670c6edc6b88eda8dcb4a138f15c" translate="yes" xml:space="preserve">
          <source>Returns the detected number of logical processors online on the system. The return value is either an integer, or the atom &lt;code&gt;unknown&lt;/code&gt; if the emulator cannot detect logical processors online. The number of logical processors online is less than or equal to the number of &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors&quot;&gt;logical processors configured&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">システム上でオンラインの論理プロセッサーの検出された数を返します。戻り値は整数、またはエミュレーターが論理プロセッサーをオンラインで検出できない場合は &lt;code&gt;unknown&lt;/code&gt; アトムのいずれかです。オンラインの論理プロセッサーの数は、 &lt;code&gt;&lt;a href=&quot;#system_info_logical_processors&quot;&gt;logical processors configured&lt;/a&gt;&lt;/code&gt; いる論理プロセッサーの数以下です。</target>
        </trans-unit>
        <trans-unit id="558c58df1a07e17f1666b7d4a938e6fecf7e87a8" translate="yes" xml:space="preserve">
          <source>Returns the difference between the binary relation &lt;code&gt;BinRel1&lt;/code&gt; and the &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; of &lt;code&gt;BinRel1&lt;/code&gt; to &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">二項関係の違いを返し &lt;code&gt;BinRel1&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#restriction&quot;&gt;restriction&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;BinRel1&lt;/code&gt; に &lt;code&gt;Set&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3f5c147e109870a10b8fcf598c56fa7ac40af8b1" translate="yes" xml:space="preserve">
          <source>Returns the difference between two &lt;code&gt;{Date, Time}&lt;/code&gt; tuples. &lt;code&gt;T2&lt;/code&gt; is to refer to an epoch later than &lt;code&gt;T1&lt;/code&gt;.</source>
          <target state="translated">2つの &lt;code&gt;{Date, Time}&lt;/code&gt; タプルの差を返します。 &lt;code&gt;T2&lt;/code&gt; は &lt;code&gt;T1&lt;/code&gt; より後のエポックを指します。</target>
        </trans-unit>
        <trans-unit id="7869bf51a15a44640ab7aa4588109fb14cb1be63" translate="yes" xml:space="preserve">
          <source>Returns the directory part of &lt;code&gt;Filename&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; のディレクトリ部分を返します。</target>
        </trans-unit>
        <trans-unit id="41349ccc6b387ba6e1ddf307dcacfea19ced223b" translate="yes" xml:space="preserve">
          <source>Returns the elements of &lt;code&gt;Ordset&lt;/code&gt; as a list.</source>
          <target state="translated">&lt;code&gt;Ordset&lt;/code&gt; の要素をリストとして返します。</target>
        </trans-unit>
        <trans-unit id="304695da848c1919956abdfe27b96de91c796e72" translate="yes" xml:space="preserve">
          <source>Returns the elements of &lt;code&gt;Set&lt;/code&gt; as a list.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; の要素をリストとして返します。</target>
        </trans-unit>
        <trans-unit id="e1aae790bf4ccd5289e7da8c168b4fd9080e0e93" translate="yes" xml:space="preserve">
          <source>Returns the elements of &lt;code&gt;Set&lt;/code&gt; as a list. The order of the returned elements is undefined.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; の要素をリストとして返します。返される要素の順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="845464c74c7576d61ca8fdb3dbfbe2c70002a6f0" translate="yes" xml:space="preserve">
          <source>Returns the elements of the ordered set &lt;code&gt;ASet&lt;/code&gt; as a tuple of sets, and the elements of the unordered set &lt;code&gt;ASet&lt;/code&gt; as a sorted list of sets without duplicates.</source>
          <target state="translated">戻り値順序集合の要素 &lt;code&gt;ASet&lt;/code&gt; セットのタプルとして、そして順不同集合の要素 &lt;code&gt;ASet&lt;/code&gt; 重複のないセットのソートされたリストとして。</target>
        </trans-unit>
        <trans-unit id="4313cdc6c13f459bec7e45b2099a14c30408d080" translate="yes" xml:space="preserve">
          <source>Returns the empty list [] if &lt;code&gt;memsup&lt;/code&gt; is not available, or if the memory check times out.</source>
          <target state="translated">&lt;code&gt;memsup&lt;/code&gt; が利用できない場合、またはメモリチェックがタイムアウトした場合は、空のリスト[]を返します。</target>
        </trans-unit>
        <trans-unit id="242cb3f69fbaa404c4786eef038b7a4fbf84b893" translate="yes" xml:space="preserve">
          <source>Returns the encoding of &lt;code&gt;Term&lt;/code&gt; according to the Erlang external term format as &lt;code&gt;&lt;a href=&quot;#type-ext_iovec&quot;&gt;ext_iovec()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">アーラン外部用語フォーマットに従って &lt;code&gt;Term&lt;/code&gt; のエンコーディングを &lt;code&gt;&lt;a href=&quot;#type-ext_iovec&quot;&gt;ext_iovec()&lt;/a&gt;&lt;/code&gt; として返します。</target>
        </trans-unit>
        <trans-unit id="b15b93fdd8dc40296efcdb537f329bdd156b7571" translate="yes" xml:space="preserve">
          <source>Returns the end location of the text of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations. If there is no text, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; の注釈のコレクションのテキストの終了位置を返します。テキストがない場合、 &lt;code&gt;undefined&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="3566fcdfb82b096317ead46d5a85bbfa3fe8cb6e" translate="yes" xml:space="preserve">
          <source>Returns the end location of the text of the annotations Anno. If there is no text, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">Annoアノテーションのテキストの終了位置を返します。テキストがない場合、 &lt;code&gt;undefined&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="fe9fc59fa4e9c55102e83a40dcfc6626c44188d0" translate="yes" xml:space="preserve">
          <source>Returns the error function of &lt;code&gt;X&lt;/code&gt;, where:</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; の誤差関数を返します。</target>
        </trans-unit>
        <trans-unit id="686f5240ee2196e547d590a69ec391bd68224d19" translate="yes" xml:space="preserve">
          <source>Returns the exception body subtree of an abstract try-expression.</source>
          <target state="translated">抽象的な試行式の例外ボディサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="df41e402615ec12dfa6f577c1547801ba5417470" translate="yes" xml:space="preserve">
          <source>Returns the expression subtree of an abstract try-expression.</source>
          <target state="translated">抽象的なトライ式の式サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="109826f6cfa33e54fb245e45afc8591b64e3bba5" translate="yes" xml:space="preserve">
          <source>Returns the field subtree of a &lt;code&gt;record_access&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_access&lt;/code&gt; ノードのフィールドサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="b27dfea3f21a6c6109ec3a891661eb30e3875663" translate="yes" xml:space="preserve">
          <source>Returns the field subtree of a &lt;code&gt;record_index_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_index_expr&lt;/code&gt; ノードのフィールドサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="3e81ea77f2022c3796a8609a56132cf18fe9cd64" translate="yes" xml:space="preserve">
          <source>Returns the field subtree of a &lt;code&gt;typed_record_field&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;typed_record_field&lt;/code&gt; ノードのフィールドサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="8b0af1e459fd815b4cea75c53c3bff0b28f7c3ec" translate="yes" xml:space="preserve">
          <source>Returns the fields subtree of a &lt;code&gt;record_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_type&lt;/code&gt; ノードのフィールドサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="eef6115bf3cbfb227bf8d7f73920e2016137eed2" translate="yes" xml:space="preserve">
          <source>Returns the file extension of &lt;code&gt;Filename&lt;/code&gt;, including the period. Returns an empty string if no extension exists.</source>
          <target state="translated">ピリオドを含む &lt;code&gt;Filename&lt;/code&gt; のファイル拡張子を返します。拡張子が存在しない場合は、空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="e8297c18bcd4a2fbf65f408905dbc4e4d2ee524b" translate="yes" xml:space="preserve">
          <source>Returns the file list of an open zip archive. The first returned element is the zip archive comment.</source>
          <target state="translated">開いている zip アーカイブのファイル一覧を返します。返される最初の要素は、ZIP アーカイブのコメントです。</target>
        </trans-unit>
        <trans-unit id="b8757cebc59a2e85f8dfa6edb9bfb743d3ce2c6c" translate="yes" xml:space="preserve">
          <source>Returns the file name and line number of a &lt;code&gt;file&lt;/code&gt; attribute. The result is the pair &lt;code&gt;{File, Line}&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-file(File, Line).&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; 属性のファイル名と行番号を返します。 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;-file(File, Line).&lt;/code&gt; &quot;を表す場合 &lt;code&gt;{File, Line}&lt;/code&gt; 結果はペア{File、Line}です。</target>
        </trans-unit>
        <trans-unit id="1456a3887b5b610672115b126cd12736e891fab5" translate="yes" xml:space="preserve">
          <source>Returns the filename encoding mode. If it is &lt;code id=&quot;native_name_encoding&quot;&gt;latin1&lt;/code&gt;, the system translates no filenames. If it is &lt;code&gt;utf8&lt;/code&gt;, filenames are converted back and forth to the native filename encoding (usually UTF-8, but UTF-16 on Windows).</source>
          <target state="translated">ファイル名のエンコーディングモードを返します。それがある場合は &lt;code id=&quot;native_name_encoding&quot;&gt;latin1&lt;/code&gt; 、システムが何のファイル名を変換しません。 &lt;code&gt;utf8&lt;/code&gt; の場合、ファイル名はネイティブのファイル名エンコーディングに変換されます（通常はUTF-8ですが、WindowsではUTF-16）。</target>
        </trans-unit>
        <trans-unit id="727793519659512f5257edb60f23f683897f14f6" translate="yes" xml:space="preserve">
          <source>Returns the filename of the annotations Anno. If there is no filename, &lt;code&gt;undefined&lt;/code&gt; is returned.</source>
          <target state="translated">Annoアノテーションのファイル名を返します。ファイル名がない場合は、 &lt;code&gt;undefined&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="2f5fc3394338a8cc347e85497f5e6caf19603431" translate="yes" xml:space="preserve">
          <source>Returns the first byte of binary &lt;code&gt;Subject&lt;/code&gt; as an integer. If the size of &lt;code&gt;Subject&lt;/code&gt; is zero, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">バイナリ &lt;code&gt;Subject&lt;/code&gt; 最初のバイトを整数として返します。 &lt;code&gt;Subject&lt;/code&gt; のサイズがゼロの場合、 &lt;code&gt;badarg&lt;/code&gt; 例外が発生します。</target>
        </trans-unit>
        <trans-unit id="a3ed97b0bfafb06a9dad771086d04b322fda9e71" translate="yes" xml:space="preserve">
          <source>Returns the first codepoint in &lt;code&gt;String&lt;/code&gt; and the rest of &lt;code&gt;String&lt;/code&gt; in the tail. Returns an empty list if &lt;code&gt;String&lt;/code&gt; is empty or an &lt;code&gt;{error, String}&lt;/code&gt; tuple if the next byte is invalid.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; の最初のコードポイントと末尾の &lt;code&gt;String&lt;/code&gt; の残りを返します。 &lt;code&gt;String&lt;/code&gt; が空の場合は空のリストを返し、次のバイトが無効の場合は &lt;code&gt;{error, String}&lt;/code&gt; タプルを返します。</target>
        </trans-unit>
        <trans-unit id="8500a0db24f3f61b666bb13c1748bb8adb85729e" translate="yes" xml:space="preserve">
          <source>Returns the first element of &lt;code&gt;List&lt;/code&gt; that compares greater than or equal to all other elements of &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">戻り値の最初の要素 &lt;code&gt;List&lt;/code&gt; 以上の他のすべての要素と等しい &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcf6624fd4846f2e03c90674aa49850e3302db4b" translate="yes" xml:space="preserve">
          <source>Returns the first element of &lt;code&gt;List&lt;/code&gt; that compares less than or equal to all other elements of &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">戻り値の最初の要素 &lt;code&gt;List&lt;/code&gt; の全ての他の要素に等しい未満または比較 &lt;code&gt;List&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a07a96ec11922ababf9e0b221ffc98cfb381a8e5" translate="yes" xml:space="preserve">
          <source>Returns the first entry associated with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;, if one exists, otherwise returns &lt;code&gt;none&lt;/code&gt;. For an atom &lt;code&gt;A&lt;/code&gt; in the list, the tuple &lt;code&gt;{A, true}&lt;/code&gt; is the entry associated with &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 内の &lt;code&gt;Key&lt;/code&gt; に関連付けられている最初のエントリが存在する場合はそれを返し、存在しない場合は &lt;code&gt;none&lt;/code&gt; 返しません。リスト内のアトム &lt;code&gt;A&lt;/code&gt; の場合、タプル &lt;code&gt;{A, true}&lt;/code&gt; は &lt;code&gt;A&lt;/code&gt; に関連付けられたエントリです。</target>
        </trans-unit>
        <trans-unit id="fe1a1dac558cf7ee7c3948d12685817160e28b44" translate="yes" xml:space="preserve">
          <source>Returns the first grapheme cluster in &lt;code&gt;String&lt;/code&gt; and the rest of &lt;code&gt;String&lt;/code&gt; in the tail. Returns an empty list if &lt;code&gt;String&lt;/code&gt; is empty or an &lt;code&gt;{error, String}&lt;/code&gt; tuple if the next byte is invalid.</source>
          <target state="translated">最初の書記素クラスタ返し &lt;code&gt;String&lt;/code&gt; と、残りの &lt;code&gt;String&lt;/code&gt; 尾では。 &lt;code&gt;String&lt;/code&gt; が空の場合は空のリストを返し、次のバイトが無効の場合は &lt;code&gt;{error, String}&lt;/code&gt; タプルを返します。</target>
        </trans-unit>
        <trans-unit id="25ba3109732e19175965f13ba8cd3b6daf23b319" translate="yes" xml:space="preserve">
          <source>Returns the first key &lt;code&gt;Key&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;. For an &lt;code&gt;ordered_set&lt;/code&gt; table, the first key in Erlang term order is returned. For other table types, the first key according to the internal order of the table is returned. If the table is empty, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; の最初のキー &lt;code&gt;Key&lt;/code&gt; を返します。 &lt;code&gt;ordered_set&lt;/code&gt; のテーブル、Erlangの項順序の最初のキーが返されます。他のテーブルタイプの場合、テーブルの内部順序に従った最初のキーが返されます。テーブルが空の場合、 &lt;code&gt;'$end_of_table'&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="51e9c415d50d1e9d91a39e8134346225ce37d24e" translate="yes" xml:space="preserve">
          <source>Returns the first key stored in table &lt;code&gt;Name&lt;/code&gt; according to the internal order of the table, or &lt;code&gt;'$end_of_table'&lt;/code&gt; if the table is empty.</source>
          <target state="translated">テーブルの内部順序に従ってテーブル &lt;code&gt;Name&lt;/code&gt; に格納されている最初のキーを返します。テーブルが空 &lt;code&gt;'$end_of_table'&lt;/code&gt; 場合は'$ end_of_table'を返します。</target>
        </trans-unit>
        <trans-unit id="3f0fc8e12d9ed576ac7506425a7d0d58ae05c1a9" translate="yes" xml:space="preserve">
          <source>Returns the first row of the result set and positions a cursor at this row.</source>
          <target state="translated">結果セットの最初の行を返し、その行にカーソルを配置します。</target>
        </trans-unit>
        <trans-unit id="0edc9fc7ed8a8a7a64efef2d8ec8d72f1236fc7f" translate="yes" xml:space="preserve">
          <source>Returns the flags subtree of an abstract bit-string template.</source>
          <target state="translated">抽象ビット列テンプレートのフラグサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="3606db966ce51875346d949f6a51ecfaba27d4fb" translate="yes" xml:space="preserve">
          <source>Returns the float whose text representation is &lt;code&gt;Binary&lt;/code&gt;, for example:</source>
          <target state="translated">テキスト表現が &lt;code&gt;Binary&lt;/code&gt; であるフロートを返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="9b4beb841f30e65ed156e20f321adf0444ec4cff" translate="yes" xml:space="preserve">
          <source>Returns the float whose text representation is &lt;code&gt;String&lt;/code&gt;, for example:</source>
          <target state="translated">テキスト表現が &lt;code&gt;String&lt;/code&gt; であるフロートを返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="a1f057c3822134d8b28aa2f668a5660a867e0628" translate="yes" xml:space="preserve">
          <source>Returns the function constraint subtree of a &lt;code&gt;constrained_function_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;constrained_function_type&lt;/code&gt; ノードの関数制約サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="ebaedcde684c1d236e989ca64eda7f3a84ac7910" translate="yes" xml:space="preserve">
          <source>Returns the function name represented by a syntax tree. If &lt;code&gt;Node&lt;/code&gt; represents a function name, such as &quot;&lt;code&gt;foo/1&lt;/code&gt;&quot; or &quot;&lt;code&gt;bloggs:fred/2&lt;/code&gt;&quot;, a uniform representation of that name is returned. Different nestings of arity and module name qualifiers in the syntax tree does not affect the result.</source>
          <target state="translated">構文ツリーで表される関数名を返します。 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;foo/1&lt;/code&gt; 」や「 &lt;code&gt;bloggs:fred/2&lt;/code&gt; 」などの関数名を表す場合、その名前の統一表現が返されます。構文ツリー内のアリティおよびモジュール名修飾子の異なるネストは結果に影響しません。</target>
        </trans-unit>
        <trans-unit id="a8999dd31e765cda8569349af3508c9f7f8bfb78" translate="yes" xml:space="preserve">
          <source>Returns the function type subtree of a &lt;code&gt;constrained_function_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;constrained_function_type&lt;/code&gt; ノードの関数タイプサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="7cd8491a2f60117ed7de95f1f7fe570d1ba4500c" translate="yes" xml:space="preserve">
          <source>Returns the grouped list of all subtrees of a node. If &lt;code&gt;Node&lt;/code&gt; is a leaf node (cf. &lt;code&gt;is_leaf/1&lt;/code&gt;), this is the empty list, otherwise the result is always a nonempty list, containing the lists of subtrees of &lt;code&gt;Node&lt;/code&gt;, in left-to-right order as they occur in the printed program text, and grouped by category. Often, each group contains only a single subtree.</source>
          <target state="translated">ノードのすべてのサブツリーのグループ化されたリストを返します。場合 &lt;code&gt;Node&lt;/code&gt; リーフノードである（参照 &lt;code&gt;is_leaf/1&lt;/code&gt; ）、これは、そうでなければ結果が空でないリストは、のサブツリーのリストを含む、常に、空のリストである &lt;code&gt;Node&lt;/code&gt; 、それらが印刷さで起こるように、左から右への順序でプログラムテキスト、およびカテゴリ別にグループ化されています。多くの場合、各グループには1つのサブツリーのみが含まれます。</target>
        </trans-unit>
        <trans-unit id="5de20b75df90cdf1cc80195b73620ec6c4870aa4" translate="yes" xml:space="preserve">
          <source>Returns the grouped list of all subtrees of a syntax tree. If &lt;code&gt;Node&lt;/code&gt; is a leaf node (see &lt;code&gt;&lt;a href=&quot;#is_leaf-1&quot;&gt;is_leaf/1&lt;/a&gt;&lt;/code&gt;), this is the empty list, otherwise the result is always a nonempty list, containing the lists of subtrees of &lt;code&gt;Node&lt;/code&gt;, in left-to-right order as they occur in the printed program text, and grouped by category. Often, each group contains only a single subtree.</source>
          <target state="translated">構文ツリーのすべてのサブツリーのグループ化されたリストを返します。場合 &lt;code&gt;Node&lt;/code&gt; （参照リーフノードである &lt;code&gt;&lt;a href=&quot;#is_leaf-1&quot;&gt;is_leaf/1&lt;/a&gt;&lt;/code&gt; ）、これは空のリストであり、そうでなければ結果は、サブツリーのリストを含む、常に空でないリストである &lt;code&gt;Node&lt;/code&gt; 、それらが印刷されたプログラムで発生するように左から右へ順に、テキスト、およびカテゴリ別にグループ化されています。多くの場合、各グループに含まれるサブツリーは1つだけです。</target>
        </trans-unit>
        <trans-unit id="81cadbe4c10aee223963aee8b501ed86dafc88a3" translate="yes" xml:space="preserve">
          <source>Returns the guard subtree of a &lt;code&gt;clause&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;(P1, ..., Pn) when Guard -&amp;gt; B1, ..., Bm&lt;/code&gt;&quot;, &lt;code&gt;Guard&lt;/code&gt; is returned. Otherwise, the result is &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;clause&lt;/code&gt; ノードのガードサブツリーがあれば、それを返します。場合は &lt;code&gt;Node&lt;/code&gt; 表している&quot; &lt;code&gt;(P1, ..., Pn) when Guard -&amp;gt; B1, ..., Bm&lt;/code&gt; &quot;、 &lt;code&gt;Guard&lt;/code&gt; 返されます。それ以外の場合、結果は &lt;code&gt;none&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ee62d28c87ba901603a4e3b7f79b1348a6d15b79" translate="yes" xml:space="preserve">
          <source>Returns the guard subtree of an abstract clause.</source>
          <target state="translated">抽象節のガードサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="b7eb44e7bcb999c4f868db6d21ac1bb4f4bbf88a" translate="yes" xml:space="preserve">
          <source>Returns the head element subtree of a &lt;code&gt;list&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[Head ...]&lt;/code&gt;&quot;, the result will represent &quot;&lt;code&gt;Head&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; ノードのヘッド要素サブツリーを返します。場合 &lt;code&gt;Node&lt;/code&gt; 「を表し &lt;code&gt;[Head ...]&lt;/code&gt; 」、結果は「表現する &lt;code&gt;Head&lt;/code&gt; 」。</target>
        </trans-unit>
        <trans-unit id="3af7dc0dda93b0edf615f60f73e149b75a538963" translate="yes" xml:space="preserve">
          <source>Returns the head of &lt;code&gt;List&lt;/code&gt;, that is, the first element, for example:</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; の先頭、つまり最初の要素を返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="c429a57d83d81113cfdf33581cf5b7f9fc509fd9" translate="yes" xml:space="preserve">
          <source>Returns the head subtree of an abstract list constructor.</source>
          <target state="translated">抽象リストのコンストラクタの先頭サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="08be17c480e4cc74c13469a30f0056b1b791d8a8" translate="yes" xml:space="preserve">
          <source>Returns the heap type used by the current emulator. One heap type exists:</source>
          <target state="translated">現在のエミュレータが使用しているヒープタイプを返します。ヒープ型は1つです。</target>
        </trans-unit>
        <trans-unit id="67210385c8b6f03ec34d72d1cf9492efe63df195" translate="yes" xml:space="preserve">
          <source>Returns the high limit of an &lt;code&gt;integer_range_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;integer_range_type&lt;/code&gt; ノードの上限を返します。</target>
        </trans-unit>
        <trans-unit id="80cf3bc103bf6686d6efa5afdf72bccb467e014e" translate="yes" xml:space="preserve">
          <source>Returns the hook function field of the prettyprinter context.</source>
          <target state="translated">prettyprinter コンテキストのフック関数フィールドを返します。</target>
        </trans-unit>
        <trans-unit id="17b634c122fc1647e261bad737f777bc68b9b223" translate="yes" xml:space="preserve">
          <source>Returns the identifier for process, port, or a tuple containing the tracer module and tracer state tracing this process. If this process is not traced, the return value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">プロセス、ポート、またはこのプロセスをトレースするトレーサモジュールとトレーサ状態を含むタプルの識別子を返します。このプロセスがトレースされない場合、戻り値は &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2b4b024bb85113e64fc85854071e0f29184ee616" translate="yes" xml:space="preserve">
          <source>Returns the identifier of the collector process.</source>
          <target state="translated">コレクタープロセスの識別子を返します。</target>
        </trans-unit>
        <trans-unit id="0c937a4f07683a6cd57b66b82410b3e29ce7abb4" translate="yes" xml:space="preserve">
          <source>Returns the identifier part of an abstract function name variable.</source>
          <target state="translated">抽象関数名変数の識別子部分を返します。</target>
        </trans-unit>
        <trans-unit id="ca35c6af029523190c06061eddb3a36813343f5f" translate="yes" xml:space="preserve">
          <source>Returns the indentation if &lt;code&gt;String&lt;/code&gt; has been printed, starting at &lt;code&gt;StartIndent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; が印刷されている場合は、 &lt;code&gt;StartIndent&lt;/code&gt; からインデントを返します。</target>
        </trans-unit>
        <trans-unit id="766abe8759c884fc6f54934153d617d87cb441c3" translate="yes" xml:space="preserve">
          <source>Returns the index of the first occurrence of &lt;code&gt;Character&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;Character&lt;/code&gt; does not occur.</source>
          <target state="translated">が最初に出現する位置のインデックスを返します &lt;code&gt;Character&lt;/code&gt; で &lt;code&gt;String&lt;/code&gt; 。 &lt;code&gt;Character&lt;/code&gt; が発生しない場合は &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="32680945734478a7cceeb64e3e9a132211aca10e" translate="yes" xml:space="preserve">
          <source>Returns the index of the last occurrence of &lt;code&gt;Character&lt;/code&gt; in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;Character&lt;/code&gt; does not occur.</source>
          <target state="translated">が最後に出現する位置のインデックスを返します &lt;code&gt;Character&lt;/code&gt; で &lt;code&gt;String&lt;/code&gt; 。 &lt;code&gt;Character&lt;/code&gt; が発生しない場合は &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="bacc374c53c5c810e9234b786a89dc572a4ed2bf" translate="yes" xml:space="preserve">
          <source>Returns the information associated with &lt;code&gt;Item&lt;/code&gt; for table &lt;code&gt;Name&lt;/code&gt;. In addition to the &lt;code&gt;{Item, Value}&lt;/code&gt; pairs defined for &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt;, the following items are allowed:</source>
          <target state="translated">テーブル &lt;code&gt;Name&lt;/code&gt; の &lt;code&gt;Item&lt;/code&gt; に関連付けられた情報を返します。 &lt;code&gt;&lt;a href=&quot;#info-1&quot;&gt;info/1&lt;/a&gt;&lt;/code&gt; に定義された &lt;code&gt;{Item, Value}&lt;/code&gt; ペアに加えて、次のアイテムが許可されます：</target>
        </trans-unit>
        <trans-unit id="4bf340b9b4979b1bb33a207c9e6c9b7576b07311" translate="yes" xml:space="preserve">
          <source>Returns the information associated with &lt;code&gt;Item&lt;/code&gt; for table &lt;code&gt;Tab&lt;/code&gt;, or returns &lt;code&gt;undefined&lt;/code&gt; if &lt;code&gt;Tab&lt;/code&gt; does not refer an existing ETS table. If &lt;code&gt;Tab&lt;/code&gt; is not of the correct type, or if &lt;code&gt;Item&lt;/code&gt; is not one of the allowed values, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; の &lt;code&gt;Item&lt;/code&gt; に関連付けられた情報を返します。 &lt;code&gt;Tab&lt;/code&gt; が既存のETSテーブルを参照していない場合は、 &lt;code&gt;undefined&lt;/code&gt; を返します。場合 &lt;code&gt;Tab&lt;/code&gt; 正しいタイプではない場合、または &lt;code&gt;Item&lt;/code&gt; 許可された値の一つではない、 &lt;code&gt;badarg&lt;/code&gt; の例外が発生します。</target>
        </trans-unit>
        <trans-unit id="db1cb8d7799409cf97df64d4e97a6ced6db4da9e" translate="yes" xml:space="preserve">
          <source>Returns the initialization vector to be used in the next iteration of encrypt/decrypt of type &lt;code&gt;Type&lt;/code&gt;. &lt;code&gt;Data&lt;/code&gt; is the encrypted data from the previous iteration step. The &lt;code&gt;IVec&lt;/code&gt; argument is only needed for &lt;code&gt;des_cfb&lt;/code&gt; as the vector used in the previous iteration step.</source>
          <target state="translated">タイプ &lt;code&gt;Type&lt;/code&gt; の暗号化/復号化の次の反復で使用される初期化ベクトルを返します。 &lt;code&gt;Data&lt;/code&gt; は、前の反復ステップからの暗号化されたデータです。 &lt;code&gt;IVec&lt;/code&gt; 引数はのみのために必要とされる &lt;code&gt;des_cfb&lt;/code&gt; 前の反復ステップで用いられるベクターとして。</target>
        </trans-unit>
        <trans-unit id="0af7feb7dc230951d85a30279f50c7cc989db5ec" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt;&lt;code&gt;Family&lt;/code&gt;.</source>
          <target state="translated">交点を返し &lt;code&gt;&lt;a href=&quot;#family&quot;&gt;family&lt;/a&gt;&lt;/code&gt; &lt;code&gt;Family&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6918ab6794e57e9b098a10306bd631cd5928a7a5" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;Ordset1&lt;/code&gt; and &lt;code&gt;Ordset2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ordset1&lt;/code&gt; と &lt;code&gt;Ordset2&lt;/code&gt; の共通部分を返します。</target>
        </trans-unit>
        <trans-unit id="83c21ac18848efa1de73cc9f1af37db64edb655f" translate="yes" xml:space="preserve">
          <source>Returns the intersection of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; と &lt;code&gt;Set2&lt;/code&gt; の共通部分を返します。</target>
        </trans-unit>
        <trans-unit id="3ebd978d9d23d26299d4430554d2ba0bef4130d4" translate="yes" xml:space="preserve">
          <source>Returns the intersection of the non-empty list of sets.</source>
          <target state="translated">空ではない集合のリストの交点を返します。</target>
        </trans-unit>
        <trans-unit id="871491bb4f88eae3839119473dafd8cdc887da5e" translate="yes" xml:space="preserve">
          <source>Returns the issuer id.</source>
          <target state="translated">発行者IDを返します。</target>
        </trans-unit>
        <trans-unit id="ad00670d8637f256db21c3aa2caacc5960f36d01" translate="yes" xml:space="preserve">
          <source>Returns the issuer of the &lt;code&gt;CRL&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CRL&lt;/code&gt; の発行者を返します。</target>
        </trans-unit>
        <trans-unit id="b532cfb321a8c907cfdccae15fa01ce4ccce743b" translate="yes" xml:space="preserve">
          <source>Returns the keys in &lt;code&gt;Tree&lt;/code&gt; as an ordered list.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; のキーを順序付けられたリストとして返します。</target>
        </trans-unit>
        <trans-unit id="2efe5caa35a7c7964dec64e36d33af72b8e11119" translate="yes" xml:space="preserve">
          <source>Returns the label, value-expression, and type of a record field specifier. The result is a pair &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;Label&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, or &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;. If the field has no value-expression, the value for &lt;code&gt;Default&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;. If the field has no type, the value for &lt;code&gt;Type&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">レコードフィールド指定子のラベル、値式、およびタイプを返します。 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;Label&lt;/code&gt; 」、「 &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt; 」、「 &lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; 」、または「ラベル：&amp;lt;em&amp;gt;タイプ&amp;lt;/ em&amp;gt;」を表す場合 &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt; 結果はペア{ラベル、{デフォルト、タイプ}}、または「 &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; 」。フィールドに値式がない場合、 &lt;code&gt;Default&lt;/code&gt; の値はアトム &lt;code&gt;none&lt;/code&gt; になります。フィールドにタイプがない場合、 &lt;code&gt;Type&lt;/code&gt; の値はアトム &lt;code&gt;none&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="48a250452ce3e81e9c520ba067d0d6201fc704a8" translate="yes" xml:space="preserve">
          <source>Returns the largest element in &lt;code&gt;Set&lt;/code&gt;. Assumes that &lt;code&gt;Set&lt;/code&gt; is not empty.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; の最大の要素を返します。 &lt;code&gt;Set&lt;/code&gt; が空でないと仮定します。</target>
        </trans-unit>
        <trans-unit id="215a5d757eb055a83e5ff59de344c98cc86f52f1" translate="yes" xml:space="preserve">
          <source>Returns the largest integer not greater than &lt;code&gt;Number&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; 以下の最大の整数を返します。例えば：</target>
        </trans-unit>
        <trans-unit id="595ac8a52eae212a230fb30580da4283e89ba746" translate="yes" xml:space="preserve">
          <source>Returns the largest of &lt;code&gt;Term1&lt;/code&gt; and &lt;code&gt;Term2&lt;/code&gt;. If the terms are equal, &lt;code&gt;Term1&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Term1&lt;/code&gt; と &lt;code&gt;Term2&lt;/code&gt; の最大値を返します。条件が等しい場合、 &lt;code&gt;Term1&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="882dc7451aad45b42a7873769962f24bf4be6868" translate="yes" xml:space="preserve">
          <source>Returns the last byte of binary &lt;code&gt;Subject&lt;/code&gt; as an integer. If the size of &lt;code&gt;Subject&lt;/code&gt; is zero, a &lt;code&gt;badarg&lt;/code&gt; exception is raised.</source>
          <target state="translated">バイナリ &lt;code&gt;Subject&lt;/code&gt; 最後のバイトを整数として返します。 &lt;code&gt;Subject&lt;/code&gt; のサイズがゼロの場合、 &lt;code&gt;badarg&lt;/code&gt; 例外が発生します。</target>
        </trans-unit>
        <trans-unit id="3baa57324d471f294ae33ecf89d1f912880bdf75" translate="yes" xml:space="preserve">
          <source>Returns the last component of &lt;code&gt;Filename&lt;/code&gt; with extension &lt;code&gt;Ext&lt;/code&gt; stripped. This function is to be used to remove a (possible) specific extension. To remove an existing extension when you are unsure which one it is, use &lt;code&gt;rootname(basename(Filename))&lt;/code&gt;.</source>
          <target state="translated">拡張子 &lt;code&gt;Ext&lt;/code&gt; が取り除かれた &lt;code&gt;Filename&lt;/code&gt; の最後のコンポーネントを返します。この関数は、（可能な）特定の拡張子を削除するために使用されます。どの拡張子かわからないときに既存の拡張子を削除するには、 &lt;code&gt;rootname(basename(Filename))&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="2de1aa6a031348235c64e473d8161ca7dcb89078" translate="yes" xml:space="preserve">
          <source>Returns the last component of &lt;code&gt;Filename&lt;/code&gt;, or &lt;code&gt;Filename&lt;/code&gt; itself if it does not contain any directory separators.</source>
          <target state="translated">&lt;code&gt;Filename&lt;/code&gt; の最後のコンポーネント、またはディレクトリセパレータが含まれていない場合は &lt;code&gt;Filename&lt;/code&gt; 自体を返します。</target>
        </trans-unit>
        <trans-unit id="de735b3add151b4e3ceffe483849b7459fa29c66" translate="yes" xml:space="preserve">
          <source>Returns the last element in &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; の最後の要素を返します。</target>
        </trans-unit>
        <trans-unit id="fc32fb22ced75cd1a97ae42785f59ea43251c7ee" translate="yes" xml:space="preserve">
          <source>Returns the last key &lt;code&gt;Key&lt;/code&gt; according to Erlang term order in table &lt;code&gt;Tab&lt;/code&gt; of type &lt;code&gt;ordered_set&lt;/code&gt;. For other table types, the function is synonymous to &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt;. If the table is empty, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">タイプ &lt;code&gt;ordered_set&lt;/code&gt; のテーブル &lt;code&gt;Tab&lt;/code&gt; の Erlang用語の順序に従って最後のキー &lt;code&gt;Key&lt;/code&gt; を返します。他のテーブルタイプの場合、関数は &lt;code&gt;&lt;a href=&quot;#first-1&quot;&gt;first/1&lt;/a&gt;&lt;/code&gt; と同義です。テーブルが空の場合、 &lt;code&gt;'$end_of_table'&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="2e4ef73baa32afa0b0e487870e1607070bbec974" translate="yes" xml:space="preserve">
          <source>Returns the last row of the result set and positions a cursor at this row.</source>
          <target state="translated">結果セットの最後の行を返し、その行にカーソルを配置します。</target>
        </trans-unit>
        <trans-unit id="f7bfd3c8900e1fcc3a3e53ca0c688950be56f31a" translate="yes" xml:space="preserve">
          <source>Returns the left argument subtree of an &lt;code&gt;infix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;infix_expr&lt;/code&gt; ノードの左引数サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="b48a36ffca062c9ef253787edf6b1da17c53fd8d" translate="yes" xml:space="preserve">
          <source>Returns the length of &lt;code&gt;List&lt;/code&gt;, for example:</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; の長さを返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="a411230f0c97ff164b970e44dbef7f489d7096be" translate="yes" xml:space="preserve">
          <source>Returns the length of &lt;code&gt;list&lt;/code&gt;, or &lt;code&gt;-1&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is not an I/O list.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; の長さ、または &lt;code&gt;list&lt;/code&gt; がI / Oリストでない場合は &lt;code&gt;-1&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="91a272817fb1e0acd72db3bbf3cd046272e70413" translate="yes" xml:space="preserve">
          <source>Returns the length of an I/O list.</source>
          <target state="translated">I/Oリストの長さを返します。</target>
        </trans-unit>
        <trans-unit id="9fa4d6d170b8717addba0d4eadeea023df77c066" translate="yes" xml:space="preserve">
          <source>Returns the length of the longest common prefix of the binaries in list &lt;code&gt;Binaries&lt;/code&gt;.</source>
          <target state="translated">リスト &lt;code&gt;Binaries&lt;/code&gt; 内のバイナリの最も長い共通の接頭辞の長さを返します。</target>
        </trans-unit>
        <trans-unit id="15e85e4df262bfcc149c40fec2b8304b90131796" translate="yes" xml:space="preserve">
          <source>Returns the length of the longest common suffix of the binaries in list &lt;code&gt;Binaries&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Binaries&lt;/code&gt; リストのバイナリの共通の最長サフィックスの長さを返します。</target>
        </trans-unit>
        <trans-unit id="5ab7b7fa10ce4a2921d3bb5fa079090c3c65076d" translate="yes" xml:space="preserve">
          <source>Returns the length of the longest path in the tree. A leaf node has depth zero, the tree representing &quot;&lt;code&gt;{foo, bar}&lt;/code&gt;&quot; has depth one, etc.</source>
          <target state="translated">ツリー内の最長パスの長さを返します。リーフノードの深さは0、「 &lt;code&gt;{foo, bar}&lt;/code&gt; 」を表すツリーの深さは1などです。</target>
        </trans-unit>
        <trans-unit id="a4ff55d7b2a5e4098e8e34d232a725c7ab5566db" translate="yes" xml:space="preserve">
          <source>Returns the length of the maximum initial segment of &lt;code&gt;String&lt;/code&gt;, which consists entirely of characters from &lt;code&gt;Chars&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Chars&lt;/code&gt; からの文字のみで構成される &lt;code&gt;String&lt;/code&gt; の最大初期セグメントの長さを返します。</target>
        </trans-unit>
        <trans-unit id="e8fa5aad5e7539b94067326466d02a326177ce9e" translate="yes" xml:space="preserve">
          <source>Returns the length of the maximum initial segment of &lt;code&gt;String&lt;/code&gt;, which consists entirely of characters not from &lt;code&gt;Chars&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; の最大の初期セグメントの長さを返します。これは、 &lt;code&gt;Chars&lt;/code&gt; 以外の文字のみで構成されています。</target>
        </trans-unit>
        <trans-unit id="592fd7ef2d1a9eda374ed0a7ff8d1fb5124ca836" translate="yes" xml:space="preserve">
          <source>Returns the library directory, &lt;code&gt;$OTPROOT/lib&lt;/code&gt;, where &lt;code&gt;$OTPROOT&lt;/code&gt; is the root directory of Erlang/OTP.</source>
          <target state="translated">ライブラリディレクトリ &lt;code&gt;$OTPROOT/lib&lt;/code&gt; 返します。 &lt;code&gt;$OTPROOT&lt;/code&gt; はErlang / OTPのルートディレクトリです。</target>
        </trans-unit>
        <trans-unit id="381a9c3f08262de49fdb40b5f3b3c553c29f53ac" translate="yes" xml:space="preserve">
          <source>Returns the limit for number of ETS tables. This limit is &lt;code&gt;partially obsolete&lt;/code&gt; and number of tables are only limited by available memory.</source>
          <target state="translated">ETSテーブルの数の制限を返します。この制限は &lt;code&gt;partially obsolete&lt;/code&gt; され、テーブルの数は使用可能なメモリによってのみ制限されます。</target>
        </trans-unit>
        <trans-unit id="7e933a610e69851601b2fe7f550ae005744bf4da" translate="yes" xml:space="preserve">
          <source>Returns the line of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; の注釈のコレクションの行を返します。</target>
        </trans-unit>
        <trans-unit id="5b68d341dd888c350386ee38f3622cdb62c24dd2" translate="yes" xml:space="preserve">
          <source>Returns the line of the annotations Anno.</source>
          <target state="translated">アノテーション Anno の行を返します。</target>
        </trans-unit>
        <trans-unit id="c421ffe1e26f240ebb4f7bb518a6bd8c3f22fde3" translate="yes" xml:space="preserve">
          <source>Returns the line widh field of the prettyprinter context.</source>
          <target state="translated">prettyprinter コンテキストの line widh フィールドを返します。</target>
        </trans-unit>
        <trans-unit id="5ffad1fc56f669ab3bf1594843425fd0f9acf4f0" translate="yes" xml:space="preserve">
          <source>Returns the lines of text of the abstract comment.</source>
          <target state="translated">抽象コメントのテキスト行を返します。</target>
        </trans-unit>
        <trans-unit id="bdceda20eaa78e2c73e651a69d5134503d89dd75" translate="yes" xml:space="preserve">
          <source>Returns the list of &quot;after&quot; subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;try_expr&lt;/code&gt; ノードの「後」のサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="83a3cb8f4311d9fee98f333c4f9c7d1f3747f9a9" translate="yes" xml:space="preserve">
          <source>Returns the list of action body subtrees of a &lt;code&gt;receive_expr&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;receive C1; ...; Cn end&lt;/code&gt;&quot;, this is the empty list.</source>
          <target state="translated">&lt;code&gt;receive_expr&lt;/code&gt; ノードのアクション本体サブツリーのリストを返します。 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;receive C1; ...; Cn end&lt;/code&gt; 」を表す場合、これは空のリストです。</target>
        </trans-unit>
        <trans-unit id="bf0ab24b6e5813df7a073cd6326fffae8592f4ac" translate="yes" xml:space="preserve">
          <source>Returns the list of all abstract variables in a pattern. An exception is thrown if &lt;code&gt;Node&lt;/code&gt; does not represent a well-formed Core Erlang clause pattern. The order of listing is not defined.</source>
          <target state="translated">パターン内のすべての抽象変数のリストを返します。 &lt;code&gt;Node&lt;/code&gt; が整形式のCoreErlang句パターンを表していない場合、例外がスローされます。リストの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="f5409356c9e9c2eeef5256b7a2b7af8a704442fe" translate="yes" xml:space="preserve">
          <source>Returns the list of all abstract variables in the given patterns. An exception is thrown if some element in &lt;code&gt;Patterns&lt;/code&gt; does not represent a well-formed Core Erlang clause pattern. The order of listing is not defined.</source>
          <target state="translated">指定されたパターンのすべての抽象変数のリストを返します。 &lt;code&gt;Patterns&lt;/code&gt; の一部の要素が整形式のCoreErlang句のパターンを表していない場合、例外がスローされます。リストの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="dba74c3691fb975ec9f9de2027feb157beff4853" translate="yes" xml:space="preserve">
          <source>Returns the list of all abstract variables in the patterns of an abstract clause. The order of listing is not defined.</source>
          <target state="translated">抽象節のパターンに含まれる全ての抽象変数のリストを返します。リストの順番は定義されていません。</target>
        </trans-unit>
        <trans-unit id="a3f26cfc2c9d11a0875140fd3e9d329f7cf626c5" translate="yes" xml:space="preserve">
          <source>Returns the list of all currently loaded modules for which &lt;code&gt;&lt;a href=&quot;#module_status-1&quot;&gt;module_status/1&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;modified&lt;/code&gt;. See also &lt;code&gt;&lt;a href=&quot;#all_loaded-0&quot;&gt;all_loaded/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#module_status-1&quot;&gt;module_status/1&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;modified&lt;/code&gt; を返す、現在ロードされているすべてのモジュールのリストを返します。 &lt;code&gt;&lt;a href=&quot;#all_loaded-0&quot;&gt;all_loaded/0&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="4074d21c5e78433215bddf596b730cbd9571852d" translate="yes" xml:space="preserve">
          <source>Returns the list of all entries associated with &lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;. If no such entry exists, the result is the empty list.</source>
          <target state="translated">&lt;code&gt;Key&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt; に関連付けられているすべてのエントリのリストを返します。そのようなエントリが存在しない場合、結果は空のリストになります。</target>
        </trans-unit>
        <trans-unit id="33c543dd7cf255ead0222de44f1197badf5ef930" translate="yes" xml:space="preserve">
          <source>Returns the list of all test cases and test case groups in the test suite module to be executed. This list also specifies the order the cases and groups are executed by &lt;code&gt;Common Test&lt;/code&gt;. A test case is represented by an atom, the name of the test case function, or a &lt;code&gt;testcase&lt;/code&gt; tuple indicating that the test case shall be repeated. A test case group is represented by a &lt;code&gt;group&lt;/code&gt; tuple, where &lt;code&gt;GroupName&lt;/code&gt;, an atom, is the name of the group (defined in &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;Module:groups/0&lt;/a&gt;&lt;/code&gt;). Execution properties for groups can also be specified, both for a top-level group and for any of its subgroups. Group execution properties specified here override properties in the group definition (see &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;Module:groups/0&lt;/a&gt;&lt;/code&gt;). (With value &lt;code&gt;default&lt;/code&gt;, the group definition properties are used).</source>
          <target state="translated">実行するテストスイートモジュール内のすべてのテストケースとテストケースグループのリストを返します。このリストには、ケースやグループがで実行される順序を指定する &lt;code&gt;Common Test&lt;/code&gt; 。テストケースは、アトム、テストケース関数の名前、またはテストケースを繰り返すことを示す &lt;code&gt;testcase&lt;/code&gt; タプルで表されます。テストケースグループは、 &lt;code&gt;group&lt;/code&gt; タプルで表され &lt;code&gt;GroupName&lt;/code&gt; 。ここで、アトムであるGroupNameは、グループの名前です（ &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;Module:groups/0&lt;/a&gt;&lt;/code&gt; で定義されています）。グループの実行プロパティは、トップレベルグループとそのサブグループの両方に対して指定することもできます。ここで指定されたグループ実行プロパティは、グループ定義のプロパティを上書きします（ &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;Module:groups/0&lt;/a&gt;&lt;/code&gt; を参照）。 （価値あり &lt;code&gt;default&lt;/code&gt; では、グループ定義プロパティが使用されます）。</target>
        </trans-unit>
        <trans-unit id="4b90db412db69843fc9c55da35c6d6e35fc21fcc" translate="yes" xml:space="preserve">
          <source>Returns the list of all test cases and test case groups in the test suite module to be executed. This list also specifies the order the cases and groups are executed by &lt;code&gt;Common Test&lt;/code&gt;. A test case is represented by an atom, the name of the test case function. A test case group is represented by a &lt;code&gt;group&lt;/code&gt; tuple, where &lt;code&gt;GroupName&lt;/code&gt;, an atom, is the name of the group (defined in &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt;). Execution properties for groups can also be specified, both for a top-level group and for any of its subgroups. Group execution properties specified here override properties in the group definition (see &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt;). (With value &lt;code&gt;default&lt;/code&gt;, the group definition properties are used).</source>
          <target state="translated">実行するテストスイートモジュール内のすべてのテストケースとテストケースグループのリストを返します。このリストは、ケースとグループが &lt;code&gt;Common Test&lt;/code&gt; によって実行される順序も指定します。テストケースは、テストケース関数の名前であるアトムによって表されます。テストケースグループは、 &lt;code&gt;group&lt;/code&gt; タプルで表され &lt;code&gt;GroupName&lt;/code&gt; 。アトムのGroupNameは、グループの名前です（ &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; で定義）。グループの実行プロパティは、トップレベルグループとそのサブグループの両方に対して指定することもできます。ここで指定されたグループ実行プロパティは、グループ定義のプロパティをオーバーライドします（ &lt;code&gt;&lt;a href=&quot;#Module:groups-0&quot;&gt;groups/0&lt;/a&gt;&lt;/code&gt; を参照）。 （値が &lt;code&gt;default&lt;/code&gt; の場合、グループ定義プロパティーが使用されます）。</target>
        </trans-unit>
        <trans-unit id="9f7bc040a55769c2d560efbbc9bfd9aeb11b35dd" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of a &lt;code&gt;macro&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;?Name&lt;/code&gt;&quot;, &lt;code&gt;none&lt;/code&gt; is returned. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;?Name(A1, ..., An)&lt;/code&gt;&quot;, &lt;code&gt;[A1, ..., An]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; ノードの引数サブツリーがあれば、そのリストを返します。 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;?Name&lt;/code&gt; &quot;を表す場合、 &lt;code&gt;none&lt;/code&gt; も返されません。それ以外の場合、 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;?Name(A1, ..., An)&lt;/code&gt; 」を表す場合、 &lt;code&gt;[A1, ..., An]&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="cd2abf692bb89f1661533fd8c05a69c2d5f69705" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an &lt;code&gt;application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;application&lt;/code&gt; ノードの引数サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="b51010749945c47c4a6c5f5d3ade7e33ffdcf50d" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an &lt;code&gt;attribute&lt;/code&gt; node, if any. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-Name.&lt;/code&gt;&quot;, the result is &lt;code&gt;none&lt;/code&gt;. Otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-Name(E1, ..., En).&lt;/code&gt;&quot;, &lt;code&gt;[E1, ..., E1]&lt;/code&gt; is returned.</source>
          <target state="translated">存在する場合、 &lt;code&gt;attribute&lt;/code&gt; ノードの引数サブツリーのリストを返します。 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;-Name.&lt;/code&gt; 」を表す場合、結果は &lt;code&gt;none&lt;/code&gt; です。それ以外の場合、 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;-Name(E1, ..., En).&lt;/code&gt; &quot;を表す場合、 &lt;code&gt;[E1, ..., E1]&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="5941b8a7a66e18c12264f7cd22a3b52dba29310e" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an abstract function application.</source>
          <target state="translated">抽象関数アプリケーションの引数サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="d13cd4836d9e90ac1910dff017734c9100b84f00" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an abstract inter-module call.</source>
          <target state="translated">抽象的なインターモジュールコールの引数サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="7cd9609759ae346e45822e25fdf4f8285b349d0e" translate="yes" xml:space="preserve">
          <source>Returns the list of argument subtrees of an abstract primitive operation call.</source>
          <target state="translated">抽象プリミティブ操作呼び出しの引数サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="002cc27d9fa32b3b9b24b393e8046e89d6738cf2" translate="yes" xml:space="preserve">
          <source>Returns the list of bindings contained in the binding structure.</source>
          <target state="translated">バインディング構造に含まれるバインディングの一覧を返します。</target>
        </trans-unit>
        <trans-unit id="5174b9697fb1207ec868d471717172647eff5d58" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;binary_comp&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;binary_comp&lt;/code&gt; ノードの本体サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="3764fca4cbc9e969b7bb5f22406bbe65ffceaa69" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;block_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;block_expr&lt;/code&gt; ノードの本体サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="268c5b2ec33d12dc92e33eec2a35d11789339bf3" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;conjunction&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;conjunction&lt;/code&gt; ノードの本体サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="3b83cd1e6d000ce366f138095649d55539bb3870" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;disjunction&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;disjunction&lt;/code&gt; ノードの本体サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="418577006bf89ddd302725795d34301ae3eebf59" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;list_comp&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;list_comp&lt;/code&gt; ノードの本体サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="2e074f4f653ca571b3aabaa3e095ceb1264770b3" translate="yes" xml:space="preserve">
          <source>Returns the list of body subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;try_expr&lt;/code&gt; ノードの本体サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="b82a11ca3b703fc466802dfb6bbbf88fa8ba8935" translate="yes" xml:space="preserve">
          <source>Returns the list of case-clause subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;try Body catch H1; ...; Hn end&lt;/code&gt;&quot;, the result is the empty list.</source>
          <target state="translated">&lt;code&gt;try_expr&lt;/code&gt; ノードのcase-clauseサブツリーのリストを返します。 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;try Body catch H1; ...; Hn end&lt;/code&gt; &quot;を表す場合、結果は空のリストになります。</target>
        </trans-unit>
        <trans-unit id="b163a2a697db375070516e96cf791160e3f8d653" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print &lt;code&gt;Latin1String&lt;/code&gt; as a string.</source>
          <target state="translated">&lt;code&gt;Latin1String&lt;/code&gt; を文字列として出力するために必要な文字のリストを返します。</target>
        </trans-unit>
        <trans-unit id="124942b2cf897d58985bc38eb5a5acb9816a0d63" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print &lt;code&gt;String&lt;/code&gt; as a string.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; を文字列として出力するために必要な文字のリストを返します。</target>
        </trans-unit>
        <trans-unit id="b42ad7ebc647ce2e5442ae846b7d53befad54d04" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print &lt;code&gt;String&lt;/code&gt; as a string. Non-Latin-1 characters are escaped.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; を文字列として出力するために必要な文字のリストを返します。非Latin-1文字はエスケープされます。</target>
        </trans-unit>
        <trans-unit id="0f2300197a91df71da83cb8bef05262f0dd970b5" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print a character constant in the ISO Latin-1 character set.</source>
          <target state="translated">ISO Latin-1文字セット内の文字定数を印刷するのに必要な文字のリストを返します。</target>
        </trans-unit>
        <trans-unit id="5c0c8313f5ebbada3d38c47694ce547bedf69828" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print a character constant in the Unicode character set.</source>
          <target state="translated">Unicode 文字セット内の文字定数を印刷するために必要な文字のリストを返します。</target>
        </trans-unit>
        <trans-unit id="afc44efa34ad4cdb1404aeae6b5b54830fce13c3" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print a character constant in the Unicode character set. Non-Latin-1 characters are escaped.</source>
          <target state="translated">Unicode 文字セ ッ ト 内の文字定数を印刷するために必要なキ ャ ラ ク タ の リ ス ト を返します。ラテン語1文字以外の文字はエスケープされます。</target>
        </trans-unit>
        <trans-unit id="711128e38d9b2b114faf6ac288b83e56c8d75731" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print atom &lt;code&gt;Atom&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Atom&lt;/code&gt; 印刷に必要な文字のリストを返します。</target>
        </trans-unit>
        <trans-unit id="689aa40246069f6a3c6dadf8c4e44160c116a4e8" translate="yes" xml:space="preserve">
          <source>Returns the list of characters needed to print atom &lt;code&gt;Atom&lt;/code&gt;. Non-Latin-1 characters are escaped.</source>
          <target state="translated">&lt;code&gt;Atom&lt;/code&gt; 印刷に必要な文字のリストを返します。非Latin-1文字はエスケープされます。</target>
        </trans-unit>
        <trans-unit id="acd1089b8486cdaabf46562a1414e8d723fdfd00" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;case_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;case_expr&lt;/code&gt; ノードの節サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="c4ec2b5350e039a89bf27307ded21a4be020b41a" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;cond_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;cond_expr&lt;/code&gt; ノードの節サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="db4d0cbbdc7ae0347b8b0b19fa56c7a744652ea3" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;fun_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;fun_expr&lt;/code&gt; ノードの節サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="4a4811dab4399a621db98a65df21a9456e96d83c" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;function&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; ノードの節サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="02cc128b9f2ae8c4dbfdbc060621fae35cdd1213" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;named_fun_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;named_fun_expr&lt;/code&gt; ノードの節サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="c74b6fdbcb358b8ac8ffcf58c36b97f6fa1d4cdd" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of a &lt;code&gt;receive_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;receive_expr&lt;/code&gt; ノードの節サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="13dff7dca71508f0bbf6094893dda46bb978468e" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of an &lt;code&gt;if_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;if_expr&lt;/code&gt; ノードの節サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="18efa2b6c2396954e8395002e5b91e718c2d3bce" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of an abstract case-expression.</source>
          <target state="translated">抽象的な大文字小文字の表現の節サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="5d73b8673beb6ef0c9070d50ad97f019dda33ce8" translate="yes" xml:space="preserve">
          <source>Returns the list of clause subtrees of an abstract receive-expression.</source>
          <target state="translated">抽象受信式の句サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="b7fde246bf7c3ef0b4a2f461639882e4c5bf4e9a" translate="yes" xml:space="preserve">
          <source>Returns the list of definitions of an abstract letrec-expression. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt;&quot;, the returned value is &lt;code&gt;[{V1, F1}, ..., {Vn, Fn}]&lt;/code&gt;.</source>
          <target state="translated">抽象letrec式の定義のリストを返します。 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt; &quot;を表す場合、戻り値は &lt;code&gt;[{V1, F1}, ..., {Vn, Fn}]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="945436a6b5fa519ab0f1edcf4fc9470566c60ff8" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of a &lt;code&gt;tuple&lt;/code&gt; node.</source>
          <target state="translated">要素のサブツリーのリストを返し &lt;code&gt;tuple&lt;/code&gt; ノードを。</target>
        </trans-unit>
        <trans-unit id="6fabb3f95c2e4e3818af26e4f5091c9e26f9d629" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of a list skeleton. &lt;code&gt;Node&lt;/code&gt; must represent a proper list. E.g., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[X1, X2 | [X3, X4 | []]&lt;/code&gt;&quot;, then &lt;code&gt;list_elements(Node)&lt;/code&gt; yields the list &lt;code&gt;[X1, X2, X3, X4]&lt;/code&gt;.</source>
          <target state="translated">リストスケルトンの要素サブツリーのリストを返します。 &lt;code&gt;Node&lt;/code&gt; は適切なリストを表す必要があります。たとえば、 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;[X1, X2 | [X3, X4 | []]&lt;/code&gt; 」を &lt;code&gt;list_elements(Node)&lt;/code&gt; 場合、list_elements（Node）はリスト &lt;code&gt;[X1, X2, X3, X4]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="1a70747717895527a2c93640bc8fb7297c29a19a" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of an abstract list. &lt;code&gt;Node&lt;/code&gt; must represent a proper list. E.g., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[X1, X2 | [X3, X4 | []]&lt;/code&gt;&quot;, then &lt;code&gt;list_elements(Node)&lt;/code&gt; yields the list &lt;code&gt;[X1, X2, X3, X4]&lt;/code&gt;.</source>
          <target state="translated">抽象リストの要素サブツリーのリストを返します。 &lt;code&gt;Node&lt;/code&gt; は適切なリストを表す必要があります。たとえば、 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;[X1, X2 | [X3, X4 | []]&lt;/code&gt; &quot;を &lt;code&gt;list_elements(Node)&lt;/code&gt; 場合、list_elements（Node）はリスト &lt;code&gt;[X1, X2, X3, X4]&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="21a6d01ce9801f0c323f7deb9da8709a2ed605de" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of an abstract tuple.</source>
          <target state="translated">抽象タプルの要素サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="bd6f833551e230675df31bdd34d04877f6471a05" translate="yes" xml:space="preserve">
          <source>Returns the list of element subtrees of an abstract value list.</source>
          <target state="translated">抽象値リストの要素サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="e75f7c9dff95d26b3cd8df37ade8ce6b70576732" translate="yes" xml:space="preserve">
          <source>Returns the list of exception variable subtrees of an abstract try-expression.</source>
          <target state="translated">抽象的なトライ式の例外変数のサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="bcaed8b98b132735c6318c0b3ba11cbe5e34c6ad" translate="yes" xml:space="preserve">
          <source>Returns the list of exports subtrees of an abstract module definition.</source>
          <target state="translated">抽象モジュール定義のエクスポートサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="94cb2abcd5c82b5d31f4dbdac385e330bef9e815" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;binary&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;binary&lt;/code&gt; ノードのフィールドサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="72c9d9bbfb3bb2e94574748bc9ed774b1e38a9ac" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;map_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_expr&lt;/code&gt; ノードのフィールドサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="d9211e45912cbd7098c6aa17c81d7c02c5d50f07" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;map_type&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;map()&lt;/code&gt;&quot;, &lt;code&gt;any_size&lt;/code&gt; is returned; otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;#{F1, ..., Fn}&lt;/code&gt;&quot;, &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;map_type&lt;/code&gt; ノードのフィールドサブツリーのリストを返します。 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;map()&lt;/code&gt; 」を表す場合、 &lt;code&gt;any_size&lt;/code&gt; が返されます。それ以外の場合、 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;#{F1, ..., Fn}&lt;/code&gt; &quot;を表す場合、 &lt;code&gt;[F1, ..., Fn]&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="4b7e98031ca99be9217e22e82d33dad17bd6ce2a" translate="yes" xml:space="preserve">
          <source>Returns the list of field subtrees of a &lt;code&gt;record_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_expr&lt;/code&gt; ノードのフィールドサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="407fb8b9bb2f6e33c8560a0efcab1f10e71343c9" translate="yes" xml:space="preserve">
          <source>Returns the list of function definitions of an abstract module definition.</source>
          <target state="translated">抽象モジュール定義の関数定義のリストを返します。</target>
        </trans-unit>
        <trans-unit id="a2ab4efae449df4c15eb828bb4bb88eeac2475b5" translate="yes" xml:space="preserve">
          <source>Returns the list of function names declared by an export attribute. We do not guarantee that each name occurs at most once in the list. The order of listing is not defined.</source>
          <target state="translated">export属性で宣言された関数名のリストを返します。各名前がリストの中で最大一度だけ出現することを保証するものではありません。リストの順番は定義されていません。</target>
        </trans-unit>
        <trans-unit id="2c2b2400f5c0a83524d5608c5163ef8e6e949ed8" translate="yes" xml:space="preserve">
          <source>Returns the list of handler-clause subtrees of a &lt;code&gt;try_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;try_expr&lt;/code&gt; ノードのハンドラ節のサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="5b2e456cd8bbdb40ab0a4925fd6255bde9bbe6c8" translate="yes" xml:space="preserve">
          <source>Returns the list of left-hand side function variable subtrees of a letrec-expression. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt;&quot;, the returned value is &lt;code&gt;[V1, ..., Vn]&lt;/code&gt;.</source>
          <target state="translated">letrec式の左側の関数変数サブツリーのリストを返します。 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;letrec V1 = F1 ... Vn = Fn in Body&lt;/code&gt; &quot;を表す場合、戻り値は &lt;code&gt;[V1, ..., Vn]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a0ed376d8d81020e699dae4f48b717f4b97e2ecc" translate="yes" xml:space="preserve">
          <source>Returns the list of left-hand side function variable subtrees of an abstract module definition.</source>
          <target state="translated">抽象モジュール定義の左側の関数変数サブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="00bfcbbdcbee2de56a6b375d9f6f67ff2c2883ef" translate="yes" xml:space="preserve">
          <source>Returns the list of left-hand side variables of an abstract let-expression.</source>
          <target state="translated">抽象的なlet-expressionの左辺変数のリストを返します。</target>
        </trans-unit>
        <trans-unit id="87121cf9d482041e9558ca7b8f9f6e5b0520be74" translate="yes" xml:space="preserve">
          <source>Returns the list of pairs of attribute key/value subtrees of an abstract module definition.</source>
          <target state="translated">抽象モジュール定義の属性キー/値サブツリーのペアのリストを返します。</target>
        </trans-unit>
        <trans-unit id="9e23575dfd8657140c767e7d648299a94cfbc8ff" translate="yes" xml:space="preserve">
          <source>Returns the list of parameter subtrees of an abstract fun-expression.</source>
          <target state="translated">抽象式のパラメータサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="f1363caa5b1b4439d25f3d3cfc135eabcd34bcc8" translate="yes" xml:space="preserve">
          <source>Returns the list of pattern subtrees of a &lt;code&gt;clause&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;clause&lt;/code&gt; ノードのパターンサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="d359ce4bd10b631c59b089cf02d5ad747dd85eb7" translate="yes" xml:space="preserve">
          <source>Returns the list of pattern subtrees of an abstract clause.</source>
          <target state="translated">抽象節のパターンサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="0edfeb6fa717efb05f804898e3906078da14f4d2" translate="yes" xml:space="preserve">
          <source>Returns the list of segment subtrees of an abstract binary-template.</source>
          <target state="translated">抽象バイナリーテンプレートのセグメントサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="87af8f9219134786af7ce2b52a493fc461baf999" translate="yes" xml:space="preserve">
          <source>Returns the list of subnodes of a &lt;code&gt;form_list&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;form_list&lt;/code&gt; ノードのサブノードのリストを返します。</target>
        </trans-unit>
        <trans-unit id="d77d89eba9d9e06e8771e8285173cd9640606868" translate="yes" xml:space="preserve">
          <source>Returns the list of subtrees of a data constructor node. If the arity of the constructor is zero, the result is the empty list.</source>
          <target state="translated">データコンストラクタノードのサブツリーのリストを返します。コンストラクタのアリティが 0 の場合、結果は空のリストとなります。</target>
        </trans-unit>
        <trans-unit id="ef5893064443af2ad8ff45e9e7236f44f316877e" translate="yes" xml:space="preserve">
          <source>Returns the list of success variable subtrees of an abstract try-expression.</source>
          <target state="translated">抽象的なトライ式の成功変数のサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="8bda49464f0d0756b59ce17601ca68354e6cbd6b" translate="yes" xml:space="preserve">
          <source>Returns the list of type element subtrees of a &lt;code&gt;tuple_type&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;tuple()&lt;/code&gt;&quot;, &lt;code&gt;any_size&lt;/code&gt; is returned; otherwise, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;{T1, ..., Tn}&lt;/code&gt;&quot;, &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;tuple_type&lt;/code&gt; ノードのタイプ要素サブツリーのリストを返します。 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;tuple()&lt;/code&gt; 」を表す場合、 &lt;code&gt;any_size&lt;/code&gt; が返されます。それ以外の場合、 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;{T1, ..., Tn}&lt;/code&gt; 」を表す場合、 &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="7b83f500ab1dfa61376b1b83f850e92057de9ae6" translate="yes" xml:space="preserve">
          <source>Returns the list of type subtrees of a &lt;code&gt;type_union&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;type_union&lt;/code&gt; ノードのタイプサブツリーのリストを返します。</target>
        </trans-unit>
        <trans-unit id="49ac30210525f39051654f12dae9f6c5d49732cf" translate="yes" xml:space="preserve">
          <source>Returns the list of type-specifier subtrees of a &lt;code&gt;binary_field&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;.../T1, ..., Tn&lt;/code&gt;&quot;, the result is &lt;code&gt;[T1, ..., Tn]&lt;/code&gt;, otherwise the result is the empty list.</source>
          <target state="translated">&lt;code&gt;binary_field&lt;/code&gt; ノードのタイプ指定子サブツリーのリストを返します。 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;.../T1, ..., Tn&lt;/code&gt; &quot;を表す場合、結果は &lt;code&gt;[T1, ..., Tn]&lt;/code&gt; 。それ以外の場合、結果は空のリストです。</target>
        </trans-unit>
        <trans-unit id="7a4e3a816d4cabd41a07f6e0e2a76249c29b6f5a" translate="yes" xml:space="preserve">
          <source>Returns the list of user annotations associated with a syntax tree node. For a newly created node, this is the empty list. The annotations may be any terms.</source>
          <target state="translated">構文ツリー・ノードに関連付けられたユーザー注釈のリストを返します。新しく作成されたノードの場合、これは空のリストです。アノテーションには、任意の用語を使用できます。</target>
        </trans-unit>
        <trans-unit id="f05ea1685ae0a61f80ea66b99708918dcb2cf8b4" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;char&lt;/code&gt; node. This includes the leading &quot;&lt;code&gt;$&lt;/code&gt;&quot; character. Characters beyond 255 will be escaped.</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; ノードで表されるリテラル文字列を返します。これには、先​​頭の「 &lt;code&gt;$&lt;/code&gt; 」文字が含まれます。255文字を超える文字はエスケープされます。</target>
        </trans-unit>
        <trans-unit id="0d81c5c279a5eda522a6b5badccf42435ca7d3d2" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;char&lt;/code&gt; node. This includes the leading &quot;&lt;code&gt;$&lt;/code&gt;&quot; character. Depending on the encoding a character beyond 255 will be escaped (&lt;code&gt;latin1&lt;/code&gt;) or copied as is (&lt;code&gt;utf8&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;char&lt;/code&gt; ノードで表されるリテラル文字列を返します。これには、先​​頭の「 &lt;code&gt;$&lt;/code&gt; 」文字が含まれます。エンコーディングに応じて、255を超える文字はエスケープ（ &lt;code&gt;latin1&lt;/code&gt; ）またはそのままコピー（ &lt;code&gt;utf8&lt;/code&gt; ）されます。</target>
        </trans-unit>
        <trans-unit id="1b891959bf59e8ca2fffbccba3879fbf60620309" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;string&lt;/code&gt; node. This includes surrounding double-quote characters. Characters beyond 255 will be escaped.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; ノードによって表されるリテラル文字列を返します。これには、二重引用符で囲まれた文字が含まれます。255文字を超える文字はエスケープされます。</target>
        </trans-unit>
        <trans-unit id="94708d1b48e867433799573e91a46ad5786537b3" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by a &lt;code&gt;string&lt;/code&gt; node. This includes surrounding double-quote characters. Depending on the encoding characters beyond 255 will be escaped (&lt;code&gt;latin1&lt;/code&gt;) or copied as is (&lt;code&gt;utf8&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; ノードによって表されるリテラル文字列を返します。これには、二重引用符で囲まれた文字が含まれます。255を超えるエンコード文字に応じて、エスケープ（ &lt;code&gt;latin1&lt;/code&gt; ）またはそのままコピー（ &lt;code&gt;utf8&lt;/code&gt; ）されます。</target>
        </trans-unit>
        <trans-unit id="db6627ca004e84117c4e7f3e06084d9eaba4c8df" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an &lt;code&gt;atom&lt;/code&gt; node. This includes surrounding single-quote characters if necessary. Characters beyond 255 will be escaped.</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt; ノードによって表されるリテラル文字列を返します。これには、必要に応じて、引用符で囲まれた文字も含まれます。255文字を超える文字はエスケープされます。</target>
        </trans-unit>
        <trans-unit id="7f635664ad233d5bd0b244b79390f17bc0205523" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an &lt;code&gt;atom&lt;/code&gt; node. This includes surrounding single-quote characters if necessary. Depending on the encoding a character beyond 255 will be escaped (&lt;code&gt;latin1&lt;/code&gt;) or copied as is (&lt;code&gt;utf8&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt; ノードによって表されるリテラル文字列を返します。これには、必要に応じて、引用符で囲まれた文字も含まれます。エンコーディングに応じて、255を超える文字はエスケープ（ &lt;code&gt;latin1&lt;/code&gt; ）またはそのままコピー（ &lt;code&gt;utf8&lt;/code&gt; ）されます。</target>
        </trans-unit>
        <trans-unit id="d4a3e54d55cc95e70b5d4f984092f23abd31bdcc" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an &lt;code&gt;operator&lt;/code&gt; node. This is simply the operator name as a string.</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ノードによって表されるリテラル文字列を返します。これは単に文字列としての演算子名です。</target>
        </trans-unit>
        <trans-unit id="830a006f9be994d18bb6c9e8f1a9b0131f8cfd99" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an abstract atom. This always includes surrounding single-quote characters.</source>
          <target state="translated">抽象原子で表現されたリテラル文字列を返します。これは常に周囲のシングルクオート文字を含みます。</target>
        </trans-unit>
        <trans-unit id="569f4a4d8ff2c4c4a187179e9b3e67480e0e3fb3" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an abstract character. This includes a leading &lt;code&gt;$&lt;/code&gt; character. Currently, all characters that are not in the set of ISO 8859-1 (Latin-1) &quot;printing&quot; characters will be escaped.</source>
          <target state="translated">抽象文字で表されるリテラル文字列を返します。これには、先​​頭の &lt;code&gt;$&lt;/code&gt; 文字が含まれます。現在、ISO 8859-1（Latin-1）の「印刷」文字のセットに含まれていないすべての文字はエスケープされます。</target>
        </trans-unit>
        <trans-unit id="2109d1d183a4107d9ed52140351a1042cdaa3597" translate="yes" xml:space="preserve">
          <source>Returns the literal string represented by an abstract string. This includes surrounding double-quote characters &lt;code&gt;&quot;...&quot;&lt;/code&gt;. Currently, characters that are not in the set of ISO 8859-1 (Latin-1) &quot;printing&quot; characters will be escaped, except for spaces.</source>
          <target state="translated">抽象文字列で表されるリテラル文字列を返します。これには、周囲の二重引用符 &lt;code&gt;&quot;...&quot;&lt;/code&gt; ます。現在、ISO 8859-1（Latin-1）の「印刷」文字のセットに含まれていない文字は、スペースを除いてエスケープされます。</target>
        </trans-unit>
        <trans-unit id="aab851e7716b8e5c1393bffb59ecd8b060532944" translate="yes" xml:space="preserve">
          <source>Returns the local address and port number for a socket.</source>
          <target state="translated">ソケットのローカルアドレスとポート番号を返します。</target>
        </trans-unit>
        <trans-unit id="a9868e26c5ed6e859c3893f7f5acd607cb999fb0" translate="yes" xml:space="preserve">
          <source>Returns the local address and port number of socket &lt;code&gt;Socket&lt;/code&gt;.</source>
          <target state="translated">ソケット &lt;code&gt;Socket&lt;/code&gt; のローカルアドレスとポート番号を返します。</target>
        </trans-unit>
        <trans-unit id="459cd845dce8772e43fb07e4ffd28edd58d70ea2" translate="yes" xml:space="preserve">
          <source>Returns the local address and port number of socket &lt;code&gt;SslSocket&lt;/code&gt;.</source>
          <target state="translated">ソケット &lt;code&gt;SslSocket&lt;/code&gt; のローカルアドレスとポート番号を返します。</target>
        </trans-unit>
        <trans-unit id="207897434cf6d424c60c9a2592f2ed623b554212" translate="yes" xml:space="preserve">
          <source>Returns the local hostname. Never fails.</source>
          <target state="translated">ローカルのホスト名を返します。失敗することはありません。</target>
        </trans-unit>
        <trans-unit id="416a2be1303d6295c22b6af59e1d4507c16d5877" translate="yes" xml:space="preserve">
          <source>Returns the local port number for a socket.</source>
          <target state="translated">ソケットのローカルポート番号を返します。</target>
        </trans-unit>
        <trans-unit id="9147fe3c3e9abb708f6cae387be447f39cede517" translate="yes" xml:space="preserve">
          <source>Returns the local time reported by the underlying operating system.</source>
          <target state="translated">使用しているオペレーティングシステムで報告されているローカルタイムを返します。</target>
        </trans-unit>
        <trans-unit id="f2ac7c23a785efb776256267402553ed72acdc79" translate="yes" xml:space="preserve">
          <source>Returns the location of &lt;code&gt;Token&lt;/code&gt;'s collection of annotations.</source>
          <target state="translated">&lt;code&gt;Token&lt;/code&gt; の注釈のコレクションの場所を返します。</target>
        </trans-unit>
        <trans-unit id="15450e7a956656f7c1d1dced67e9ebfc4fe434db" translate="yes" xml:space="preserve">
          <source>Returns the location of the annotations Anno.</source>
          <target state="translated">アノテーションの位置を返します。</target>
        </trans-unit>
        <trans-unit id="3be606322d70c4081148f07bc2dccb0e20248da7" translate="yes" xml:space="preserve">
          <source>Returns the log name given the pid of a disk log process on the current node, or &lt;code&gt;undefined&lt;/code&gt; if the specified pid is not a disk log process.</source>
          <target state="translated">現在のノードのディスクログプロセスのpidを指定するとログ名を返します。指定したpidがディスクログプロセスで &lt;code&gt;undefined&lt;/code&gt; 場合は未定義を返します。</target>
        </trans-unit>
        <trans-unit id="cf3d88c2d35e4a8dfc61488af3d1ed6d19769610" translate="yes" xml:space="preserve">
          <source>Returns the logged system events in the debug structure, that is the last argument to &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">デバッグ構造でログに記録されたシステムイベントを返します。これは、 &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt; の最後の引数です。</target>
        </trans-unit>
        <trans-unit id="73f5aac53c46c70833281e58ca24443d9c95874d" translate="yes" xml:space="preserve">
          <source>Returns the low limit of an &lt;code&gt;integer_range_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;integer_range_type&lt;/code&gt; ノードの下限を返します。</target>
        </trans-unit>
        <trans-unit id="f2bd7056d9d366befcaba6d0aeddf8edab781e9e" translate="yes" xml:space="preserve">
          <source>Returns the magic cookie of the current node.</source>
          <target state="translated">現在のノードのマジッククッキーを返します。</target>
        </trans-unit>
        <trans-unit id="b5f5f3d5339b0ae05f73b408853fe635dfc27a09" translate="yes" xml:space="preserve">
          <source>Returns the magic cookie of the local node if the node is alive, otherwise the atom &lt;code&gt;nocookie&lt;/code&gt;.</source>
          <target state="translated">ノードが生きている場合はローカルノードのマジッククッキーを返し、そうでない場合はアトム &lt;code&gt;nocookie&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="af40012a87462ebdc7d7eb5c438abdea2903d250" translate="yes" xml:space="preserve">
          <source>Returns the match specification for this event, if it has one, or &lt;code&gt;true&lt;/code&gt; if no match specification has been set.</source>
          <target state="translated">このイベントの一致仕様がある場合はそれを返し、一致仕様が設定されていない場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="1fc547455f6862114face1b2da4682cb415ae754" translate="yes" xml:space="preserve">
          <source>Returns the match specification for this function, if it has one. If the function is locally or globally traced but has no match specification defined, the returned value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">この関数の一致仕様がある場合は、それを返します。関数がローカルまたはグローバルにトレースされているが、一致指定が定義されていない場合、戻り値は &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4441bfe54590e77458cc37627580797883203ac1" translate="yes" xml:space="preserve">
          <source>Returns the matching values or configuration elements, given a configuration variable key or its associated name (if one has been specified with &lt;code&gt;&lt;a href=&quot;#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt; or a &lt;code&gt;require&lt;/code&gt; statement).</source>
          <target state="translated">構成変数キーまたはそれに関連付けられた名前（ &lt;code&gt;&lt;a href=&quot;#require-2&quot;&gt;ct:require/2&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;require&lt;/code&gt; ステートメントで指定されている場合）を指定すると、一致する値または構成要素を返します。</target>
        </trans-unit>
        <trans-unit id="d23f0c88894f290d5b9b102e091670bac8391f45" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of atoms allowed. This limit can be increased at startup by passing command-line flag &lt;code&gt;+t&lt;/code&gt; to &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">許容されるアトムの最大数を返します。この制限は、コマンドラインフラグ &lt;code&gt;+t&lt;/code&gt; を &lt;code&gt;erl(1)&lt;/code&gt; に渡すことにより、起動時に増やすことができます。</target>
        </trans-unit>
        <trans-unit id="d6fb52579f304fb3c577df6aa4ae0e4eb5be1887" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of simultaneously existing ports at the local node as an integer. This limit can be configured at startup by using command-line flag &lt;code&gt;&lt;a href=&quot;erl#+Q&quot;&gt;+Q&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">ローカルノードに同時に存在するポートの最大数を整数として返します。この制限は、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドラインフラグ &lt;code&gt;&lt;a href=&quot;erl#+Q&quot;&gt;+Q&lt;/a&gt;&lt;/code&gt; を使用して、起動時に構成できます。</target>
        </trans-unit>
        <trans-unit id="5b700a394a5c84844c80ba3f172e4544dca86353" translate="yes" xml:space="preserve">
          <source>Returns the maximum number of simultaneously existing processes at the local node. The value is given as an integer. This limit can be configured at startup by using command-line flag &lt;code&gt;&lt;a href=&quot;erl#+P&quot;&gt;+P&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">ローカルノードに同時に存在するプロセスの最大数を返します。値は整数として与えられます。この制限は、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドラインフラグ &lt;code&gt;&lt;a href=&quot;erl#+P&quot;&gt;+P&lt;/a&gt;&lt;/code&gt; を使用して起動時に構成できます。</target>
        </trans-unit>
        <trans-unit id="f4a67f052574e591f5879ac32a955c52623b1d4f" translate="yes" xml:space="preserve">
          <source>Returns the memory size in bytes allocated for memory of type &lt;code&gt;Type&lt;/code&gt;. The argument can also be specified as a list of &lt;code&gt;memory_type()&lt;/code&gt; atoms, in which case a corresponding list of &lt;code&gt;{memory_type(), Size :: integer &amp;gt;= 0}&lt;/code&gt; tuples is returned.</source>
          <target state="translated">タイプ &lt;code&gt;Type&lt;/code&gt; のメモリに割り当てられたメモリサイズをバイト単位で返します。引数は、 &lt;code&gt;memory_type()&lt;/code&gt; アトムのリストとして指定することもできます。その場合、対応する &lt;code&gt;{memory_type(), Size :: integer &amp;gt;= 0}&lt;/code&gt; タプルのリストが返されます。</target>
        </trans-unit>
        <trans-unit id="a00b66debcb037df17cfd893ceba7c9264fed643" translate="yes" xml:space="preserve">
          <source>Returns the merged (union) set of &lt;code&gt;Ordset1&lt;/code&gt; and &lt;code&gt;Ordset2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ordset1&lt;/code&gt; と &lt;code&gt;Ordset2&lt;/code&gt; のマージ（ユニオン）セットを返します。</target>
        </trans-unit>
        <trans-unit id="43723d218ab77b13f41262ad39332981f13bced9" translate="yes" xml:space="preserve">
          <source>Returns the merged (union) set of &lt;code&gt;Set1&lt;/code&gt; and &lt;code&gt;Set2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set1&lt;/code&gt; と &lt;code&gt;Set2&lt;/code&gt; のマージ（ユニオン）セットを返します。</target>
        </trans-unit>
        <trans-unit id="82034e6778b6dcba85c02ae63e0f4ed694f64129" translate="yes" xml:space="preserve">
          <source>Returns the merged (union) set of the list of sets.</source>
          <target state="translated">セットのリストのマージされた(結合された)セットを返します。</target>
        </trans-unit>
        <trans-unit id="815b9a219dc48a930a199069152d8a275ab24b40" translate="yes" xml:space="preserve">
          <source>Returns the meta-trace match specification for this function, if it has one. If the function is meta-traced but has no match specification defined, the returned value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">この関数のメタトレース一致指定がある場合は、それを返します。関数がメタトレースされているが、一致指定が定義されていない場合、戻り値は &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c2f5f6a2a6b6469f072401d9cbc9381506bd595a" translate="yes" xml:space="preserve">
          <source>Returns the meta-trace tracer process, port, or trace module for this function, if it has one. If the function is not meta-traced, the returned value is &lt;code&gt;false&lt;/code&gt;. If the function is meta-traced but has once detected that the tracer process is invalid, the returned value is &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">この関数のメタトレーストレーサープロセス、ポート、またはトレースモジュールがある場合は、それを返します。関数がメタトレースされていない場合、戻り値は &lt;code&gt;false&lt;/code&gt; です。関数がメタトレースされているが、トレーサープロセスが無効であることを一度検出した場合、戻り値は &lt;code&gt;[]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="34e8ff19ef4285929e3a1c678ed923458705440f" translate="yes" xml:space="preserve">
          <source>Returns the modified timing-level (an integer) if modified timing is enabled, otherwise &lt;code&gt;undefined&lt;/code&gt;. For more information about modified timing, see command-line flag &lt;code&gt;+T&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;</source>
          <target state="translated">変更されたタイミングが有効な場合は変更されたタイミングレベル（整数）を返し、それ以外の場合は &lt;code&gt;undefined&lt;/code&gt; を返します。変更されたタイミングの詳細については、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドラインフラグ &lt;code&gt;+T&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="26dcf724b8d44245fe738cbd6dd4f75405d78c75" translate="yes" xml:space="preserve">
          <source>Returns the module name and (if present) list of function names declared by an import attribute. The returned value is an atom &lt;code&gt;Module&lt;/code&gt; or a pair &lt;code&gt;{Module, Names}&lt;/code&gt;, where &lt;code&gt;Names&lt;/code&gt; is a list of function names declared as imported from the module named by &lt;code&gt;Module&lt;/code&gt;. We do not guarantee that each name occurs at most once in &lt;code&gt;Names&lt;/code&gt;. The order of listing is not defined.</source>
          <target state="translated">インポート属性によって宣言されたモジュール名と関数名のリスト（存在する場合）を返します。戻り値は、アトム &lt;code&gt;Module&lt;/code&gt; またはペア &lt;code&gt;{Module, Names}&lt;/code&gt; です &lt;code&gt;Names&lt;/code&gt; は、 &lt;code&gt;Module&lt;/code&gt; によって名前が付けられたモジュールからインポートされたものとして宣言された関数名のリストです。 &lt;code&gt;Names&lt;/code&gt; で各名前が1回だけ出現することは保証されません。リストの順序は定義されていません。</target>
        </trans-unit>
        <trans-unit id="e8205eb1a6ab8179a1e53b60fe711b222979681e" translate="yes" xml:space="preserve">
          <source>Returns the module name and possible parameters declared by a module attribute. If the attribute is a plain module declaration such as &lt;code&gt;-module(name)&lt;/code&gt;, the result is the module name. If the attribute is a parameterized module declaration, the result is a tuple containing the module name and a list of the parameter variable names.</source>
          <target state="translated">モジュール名と、モジュール属性によって宣言された可能なパラメーターを返します。属性が &lt;code&gt;-module(name)&lt;/code&gt; などのプレーンモジュール宣言の場合、結果はモジュール名になります。属性がパラメーター化されたモジュール宣言の場合、結果はモジュール名とパラメーター変数名のリストを含むタプルになります。</target>
        </trans-unit>
        <trans-unit id="1625033fb1bdc39aa810e69379902f0ba1e637c7" translate="yes" xml:space="preserve">
          <source>Returns the module subtree of an abstract inter-module call.</source>
          <target state="translated">抽象的なモジュール間コールのモジュールサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="8aed4639b687b004ed924728735d1b26c94586ff" translate="yes" xml:space="preserve">
          <source>Returns the module version or versions. A version is defined by module attribute &lt;code&gt;-vsn(Vsn)&lt;/code&gt;. If this attribute is not specified, the version defaults to the checksum of the module. Notice that if version &lt;code&gt;Vsn&lt;/code&gt; is not a list, it is made into one, that is &lt;code&gt;{ok,{Module,[Vsn]}}&lt;/code&gt; is returned. If there are many &lt;code&gt;-vsn&lt;/code&gt; module attributes, the result is the concatenated list of versions.</source>
          <target state="translated">モジュールのバージョンを返します。バージョンは、モジュール属性 &lt;code&gt;-vsn(Vsn)&lt;/code&gt; によって定義されます。この属性が指定されていない場合、バージョンはデフォルトでモジュールのチェックサムになります。バージョン &lt;code&gt;Vsn&lt;/code&gt; がリストでない場合はリストになり、つまり &lt;code&gt;{ok,{Module,[Vsn]}}&lt;/code&gt; が返されることに注意してください。多くの &lt;code&gt;-vsn&lt;/code&gt; モジュール属性がある場合、結果はバージョンの連結リストです。</target>
        </trans-unit>
        <trans-unit id="eee87aeb430afe57bdaf60f72df82adf25882dc2" translate="yes" xml:space="preserve">
          <source>Returns the most relevant information about the connection, ssl options that are undefined will be filtered out. Note that values that affect the security of the connection will only be returned if explicitly requested by connection_information/2.</source>
          <target state="translated">接続に関する最も関連性の高い情報を返します。接続のセキュリティに影響を与える値は、connection_information/2 で明示的に要求された場合にのみ返されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="0c6ee76bdc3c2fc22ebc00215ab57a8039fcf4e1" translate="yes" xml:space="preserve">
          <source>Returns the name and arity of a function definition. The result is a pair &lt;code&gt;{Name, A}&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a function definition &quot;&lt;code&gt;Name(&amp;lt;em&amp;gt;P_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;P_A&amp;lt;/em&amp;gt;) -&amp;gt; ...&lt;/code&gt;&quot;.</source>
          <target state="translated">関数定義の名前とアリティを返します。 &lt;code&gt;Node&lt;/code&gt; が関数定義「 &lt;code&gt;Name(&amp;lt;em&amp;gt;P_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;P_A&amp;lt;/em&amp;gt;) -&amp;gt; ...&lt;/code&gt; 」を表す場合 &lt;code&gt;{Name, A}&lt;/code&gt; 結果はペア{Name、A}です。</target>
        </trans-unit>
        <trans-unit id="007ac5d499e30c87a2d58f2fa3dfeea0e04901d0" translate="yes" xml:space="preserve">
          <source>Returns the name and the list of fields of a record declaration attribute. The result is a pair &lt;code&gt;{Name, Fields}&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-record(Name, {...}).&lt;/code&gt;&quot;, where &lt;code&gt;Fields&lt;/code&gt; is a list of pairs &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt; for each field &quot;&lt;code&gt;Label&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, &quot;&lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;, or &quot;&lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt;&quot; in the declaration, listed in left-to-right order. If the field has no default-value declaration, the value for &lt;code&gt;Default&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;. If the field has no type declaration, the value for &lt;code&gt;Type&lt;/code&gt; will be the atom &lt;code&gt;none&lt;/code&gt;. We do not guarantee that each label occurs at most once in the list.</source>
          <target state="translated">レコード宣言属性の名前とフィールドのリストを返します。 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;-record(Name, {...}).&lt;/code&gt; &quot;を表す場合 &lt;code&gt;{Name, Fields}&lt;/code&gt; 結果はペア{Name、Fields} です。ここで、 &lt;code&gt;Fields&lt;/code&gt; は各フィールドのペア &lt;code&gt;{Label, {Default, Type}}&lt;/code&gt; リストです&quot; &lt;code&gt;Label&lt;/code&gt; &quot;、&quot; &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt;&lt;/code&gt; &quot;、&quot; &lt;code&gt;Label :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; &quot;、または&quot; &lt;code&gt;Label = &amp;lt;em&amp;gt;Default&amp;lt;/em&amp;gt; :: &amp;lt;em&amp;gt;Type&amp;lt;/em&amp;gt;&lt;/code&gt; &quot;宣言内で、左から右の順にリストされます。フィールドにdefault-value宣言がない場合、 &lt;code&gt;Default&lt;/code&gt; の値はアトム &lt;code&gt;none&lt;/code&gt; になります。フィールドに型宣言がない場合、 &lt;code&gt;Type&lt;/code&gt; の値 &lt;code&gt;none&lt;/code&gt; のアトムになります。各ラベルがリストに1回だけ出現することを保証するものではありません。</target>
        </trans-unit>
        <trans-unit id="db29b3ea3ed9d5840c73389f91f74f7b1dc1efde" translate="yes" xml:space="preserve">
          <source>Returns the name and value of a &quot;wild&quot; attribute. The result is the pair &lt;code&gt;{Name, Value}&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;-Name(Value)&lt;/code&gt;&quot;.</source>
          <target state="translated">「ワイルド」属性の名前と値を返します。 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;-Name(Value)&lt;/code&gt; &quot;を表す場合 &lt;code&gt;{Name, Value}&lt;/code&gt; 結果はペア{Name、Value}です。</target>
        </trans-unit>
        <trans-unit id="4cf6bef09de734ae6a52a3c5252fdfc894cdf6db" translate="yes" xml:space="preserve">
          <source>Returns the name of a &lt;code&gt;variable&lt;/code&gt; node as a string.</source>
          <target state="translated">&lt;code&gt;variable&lt;/code&gt; ノードの名前を文字列として返します。</target>
        </trans-unit>
        <trans-unit id="e6381a5b40dc5ae4251941dd888e7b01dfd282b2" translate="yes" xml:space="preserve">
          <source>Returns the name of a &lt;code&gt;variable&lt;/code&gt; node as an atom.</source>
          <target state="translated">&lt;code&gt;variable&lt;/code&gt; ノードの名前をアトムとして返します。</target>
        </trans-unit>
        <trans-unit id="ed115c535b0ef6ce3723030585e03ad7536f6174" translate="yes" xml:space="preserve">
          <source>Returns the name of a called function. The result is a representation of the name of the applied function &lt;code&gt;F/A&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents a function application &quot;&lt;code&gt;&amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;X_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;X_A&amp;lt;/em&amp;gt;)&lt;/code&gt;&quot;. If the function is not explicitly named (i.e., &lt;code&gt;F&lt;/code&gt; is given by some expression), only the arity &lt;code&gt;A&lt;/code&gt; is returned.</source>
          <target state="translated">呼び出された関数の名前を返します。結果は、適用された関数 &lt;code&gt;F/A&lt;/code&gt; の名前の表現になります（ &lt;code&gt;Node&lt;/code&gt; が関数アプリケーションを表す場合）&quot; &lt;code&gt;&amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;X_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;X_A&amp;lt;/em&amp;gt;)&lt;/code&gt; &quot;。関数が明示的に指定されていない場合（つまり、 &lt;code&gt;F&lt;/code&gt; が何らかの式で指定されている場合）、アリティ &lt;code&gt;A&lt;/code&gt; のみが返されます。</target>
        </trans-unit>
        <trans-unit id="9148d7ebab4a1613559851f9c2444070c5fe576e" translate="yes" xml:space="preserve">
          <source>Returns the name of a used type. The result is a representation of the name of the used pre-defined or local type &lt;code&gt;N/A&lt;/code&gt;, if &lt;code&gt;Node&lt;/code&gt; represents a local (user) type application &quot;&lt;code&gt;&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt;&quot;, or a representation of the name of the used remote type &lt;code&gt;M:N/A&lt;/code&gt; if &lt;code&gt;Node&lt;/code&gt; represents a remote user type application &quot;&lt;code&gt;&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;:&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt;&quot;.</source>
          <target state="translated">使用されているタイプの名前を返します。 &lt;code&gt;Node&lt;/code&gt; がローカル（ユーザー）タイプのアプリケーションを表す場合、結果は使用された事前定義またはローカルタイプ &lt;code&gt;N/A&lt;/code&gt; の名前の表現である&quot; &lt;code&gt;&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt; &quot;、または &lt;code&gt;Node&lt;/code&gt; がリモートユーザータイプのアプリケーションを表す場合は、使用されるリモートタイプ &lt;code&gt;M:N/A&lt;/code&gt; の名前の表現&quot; &lt;code&gt;&amp;lt;em&amp;gt;M&amp;lt;/em&amp;gt;:&amp;lt;em&amp;gt;N&amp;lt;/em&amp;gt;(&amp;lt;em&amp;gt;T_1&amp;lt;/em&amp;gt;, ..., &amp;lt;em&amp;gt;T_A&amp;lt;/em&amp;gt;)&lt;/code&gt; &quot;。</target>
        </trans-unit>
        <trans-unit id="d22a26e82728827ed03c2b39bdc709badd4430f6" translate="yes" xml:space="preserve">
          <source>Returns the name of an &lt;code&gt;operator&lt;/code&gt; node. Note that the name is returned as an atom.</source>
          <target state="translated">&lt;code&gt;operator&lt;/code&gt; ノードの名前を返します。名前はアトムとして返されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2df87ddbac814446554a7d01b4795c20781b2ed4" translate="yes" xml:space="preserve">
          <source>Returns the name of an abstract variable.</source>
          <target state="translated">抽象変数の名前を返します。</target>
        </trans-unit>
        <trans-unit id="5ff64514f16ec6c034ae6fb62cf75e8cf81a7665" translate="yes" xml:space="preserve">
          <source>Returns the name of an implicit fun expression &quot;&lt;code&gt;fun &amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;&lt;/code&gt;&quot;. The result is a representation of the function name &lt;code&gt;F&lt;/code&gt;. (Cf. &lt;code&gt;analyze_function_name/1&lt;/code&gt;.)</source>
          <target state="translated">暗黙のfun式「 &lt;code&gt;fun &amp;lt;em&amp;gt;F&amp;lt;/em&amp;gt;&lt;/code&gt; 」の名前を返します。結果は、関数名 &lt;code&gt;F&lt;/code&gt; の表現です。（cf. &lt;code&gt;analyze_function_name/1&lt;/code&gt; 。）</target>
        </trans-unit>
        <trans-unit id="d864b4aeaa7386e89e67b9ae63cd819d9f41a6d4" translate="yes" xml:space="preserve">
          <source>Returns the name of the application to which the process &lt;code&gt;Pid&lt;/code&gt; or the module &lt;code&gt;Module&lt;/code&gt; belongs. Providing no argument is the same as calling &lt;code&gt;get_application(self())&lt;/code&gt;.</source>
          <target state="translated">プロセス &lt;code&gt;Pid&lt;/code&gt; またはモジュール &lt;code&gt;Module&lt;/code&gt; が属するアプリケーションの名前を返します。引数を指定しないことは、 &lt;code&gt;get_application(self())&lt;/code&gt; を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="c7ed02c4f1263972459ef8e555cafb04a5cb3b1d" translate="yes" xml:space="preserve">
          <source>Returns the name of the current host.</source>
          <target state="translated">現在のホストの名前を返します。</target>
        </trans-unit>
        <trans-unit id="7d62b642c52c728d5bcbfefe5f52c72ec31e0471" translate="yes" xml:space="preserve">
          <source>Returns the name of the current node. Allowed in guards.</source>
          <target state="translated">現在のノードの名前を返します。ガードで許可されます。</target>
        </trans-unit>
        <trans-unit id="8510c7c82ca88f84b7575435a166132cfbf338a7" translate="yes" xml:space="preserve">
          <source>Returns the name of the escript that is executed. If the function is invoked outside the context of an escript, the behavior is undefined.</source>
          <target state="translated">実行された escript の名前を返します。この関数が escript のコンテキスト外で呼び出された場合の動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="4e96e3414a1d1fc235f3ea83919b8dc8eb1d909d" translate="yes" xml:space="preserve">
          <source>Returns the name of the local host. If Erlang was started with command-line flag &lt;code&gt;-name&lt;/code&gt;, &lt;code&gt;Name&lt;/code&gt; is the fully qualified name.</source>
          <target state="translated">ローカルホストの名前を返します。Erlangがコマンドラインフラグ &lt;code&gt;-name&lt;/code&gt; で起動された場合、 &lt;code&gt;Name&lt;/code&gt; は完全修飾名です。</target>
        </trans-unit>
        <trans-unit id="fcafb7c7fbc116067a03b38cd1217a58db1c7164" translate="yes" xml:space="preserve">
          <source>Returns the name of the local node. If the node is not alive, &lt;code&gt;nonode@nohost&lt;/code&gt; is returned instead.</source>
          <target state="translated">ローカルノードの名前を返します。ノードが &lt;code&gt;nonode@nohost&lt;/code&gt; ない場合は、代わりにnonode @ nohostが返されます。</target>
        </trans-unit>
        <trans-unit id="30fc380ea808fa5540bd8e951118112f9a14a296" translate="yes" xml:space="preserve">
          <source>Returns the name of the log file &lt;code&gt;Filename&lt;/code&gt;, or &lt;code&gt;{error, no_log_file}&lt;/code&gt; if logging to file is not enabled.</source>
          <target state="translated">戻り値ログファイルの名前 &lt;code&gt;Filename&lt;/code&gt; 、または &lt;code&gt;{error, no_log_file}&lt;/code&gt; ファイルへのロギングが有効になっていない場合。</target>
        </trans-unit>
        <trans-unit id="0429924e574032bfd549705fe083c8cf1e3e8649" translate="yes" xml:space="preserve">
          <source>Returns the name of the target that the specified connection belongs to.</source>
          <target state="translated">指定した接続が属する対象の名前を返します。</target>
        </trans-unit>
        <trans-unit id="756be78b2bbf2ca59e105d611595048a3b7d839a" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;constraint&lt;/code&gt; node.</source>
          <target state="translated">コン &lt;code&gt;constraint&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="76e04edf05ecf5a831fbb2d6cd173266764050b7" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;function&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="4e36136e160d0bafbfea7b1da9ae279b456db37c" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;macro&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;macro&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="900862649122a3fce897e03938145bae5fea2a14" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_field_assoc&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_field_assoc&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="e6145ffbc27bfd93b80822f15197a8ad0c91d15f" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_field_exact&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_field_exact&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="f77498fc989ea746382c2a0ca52346c58677e618" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_type_assoc&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_type_assoc&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="835380ba3e2354bc2f27660f60c502c0253db616" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;map_type_exact&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;map_type_exact&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="2d3d12a21c3442ab392d04173e9f7f33171ceb03" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;named_fun_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;named_fun_expr&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="939901a31fe919b4a471f4f2c4baff1efb974c5c" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;record_field&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_field&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="6b38accc8373842fde8d529c0026aaae246c6a8b" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;record_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_type&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="a52bf5aa1c91ec8283732decefec61991879b4e6" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of a &lt;code&gt;record_type_field&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;record_type_field&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="f72ea48a2fdac3d8bc5650288a263570fc636215" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an &lt;code&gt;annotated_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;annotated_type&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="96db8060ebdf0b56f7be23a01dabf76c6f3eef30" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an &lt;code&gt;attribute&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="6e947c02a1a2057175521e6dc318ab909ac5926d" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an &lt;code&gt;implicit_fun&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;implicit_fun&lt;/code&gt; ノードの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="2fbb3162a093a1961978dc1251e320dcae52879a" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an abstract inter-module call.</source>
          <target state="translated">抽象的なインターモジュール呼び出しの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="06b61e57252078c14ba9c192651bb544d8440169" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an abstract module definition.</source>
          <target state="translated">抽象モジュール定義の名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="5bb25437155136c8a265b1160b2de9d5359a6173" translate="yes" xml:space="preserve">
          <source>Returns the name subtree of an abstract primitive operation call.</source>
          <target state="translated">抽象プリミティブ操作呼び出しの名前サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="36b7655180fcc8ac1bc7f1f07959643f308992b5" translate="yes" xml:space="preserve">
          <source>Returns the names of all group nodes, regardless of their current status.</source>
          <target state="translated">現在の状態に関係なく、すべてのグループノードの名前を返します。</target>
        </trans-unit>
        <trans-unit id="4517f549ce5eaa64742e0071f4faa17896e3b860" translate="yes" xml:space="preserve">
          <source>Returns the names of the disk logs accessible on the current node. The first list contains local disk logs and the second list contains distributed disk logs.</source>
          <target state="translated">現在のノードでアクセス可能なディスクログの名前を返します。最初のリストにはローカルのディスクログが、 2 番目のリストには分散されたディスクログが含まれます。</target>
        </trans-unit>
        <trans-unit id="66d609ac0ad975e923b6e0e753ec884c92a29456" translate="yes" xml:space="preserve">
          <source>Returns the names of variables occurring in a syntax tree, The result is a set of variable names represented by atoms. Macro names are not included.</source>
          <target state="translated">シンタックスツリーに含まれる変数名を返します。マクロ名は含まれません。</target>
        </trans-unit>
        <trans-unit id="6ef6e7858a7f9f0a1946d1d2e810bbafb986782b" translate="yes" xml:space="preserve">
          <source>Returns the next Erlang form from the opened Erlang source file. Tuple &lt;code&gt;{eof, Line}&lt;/code&gt; is returned at the end of the file. The first form corresponds to an implicit attribute &lt;code&gt;-file(File,1).&lt;/code&gt;, where &lt;code&gt;File&lt;/code&gt; is the file name.</source>
          <target state="translated">開いているErlangソースファイルから次のErlangフォームを返します。タプル &lt;code&gt;{eof, Line}&lt;/code&gt; はファイルの最後に返されます。最初の形式は、暗黙の属性 &lt;code&gt;-file(File,1).&lt;/code&gt; 対応しています。ここで、 &lt;code&gt;File&lt;/code&gt; はファイル名です。</target>
        </trans-unit>
        <trans-unit id="f39c3c02ac7fc307b241a77b655c2418ea9279ce" translate="yes" xml:space="preserve">
          <source>Returns the next key &lt;code&gt;Key2&lt;/code&gt;, following key &lt;code&gt;Key1&lt;/code&gt; in table &lt;code&gt;Tab&lt;/code&gt;. For table type &lt;code&gt;ordered_set&lt;/code&gt;, the next key in Erlang term order is returned. For other table types, the next key according to the internal order of the table is returned. If no next key exists, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; のキー &lt;code&gt;Key1&lt;/code&gt; に続く、次のキー &lt;code&gt;Key2&lt;/code&gt; を返します。テーブルタイプ &lt;code&gt;ordered_set&lt;/code&gt; の場合、Erlang用語の順序の次のキーが返されます。その他のテーブルタイプの場合、テーブルの内部順序に応じた次のキーが返されます。次のキーが存在しない場合、 &lt;code&gt;'$end_of_table'&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="cf3072514589e15b52d21f7b73a490cfc41586aa" translate="yes" xml:space="preserve">
          <source>Returns the next key-value association in &lt;code&gt;Iterator&lt;/code&gt; and a new iterator for the remaining associations in the iterator.</source>
          <target state="translated">&lt;code&gt;Iterator&lt;/code&gt; の次のキーと値の関連付け、およびイテレータの残りの関連付けの新しいイテレータを返します。</target>
        </trans-unit>
        <trans-unit id="e8ac983f9489351b9b3974c653fe958f0feac7d7" translate="yes" xml:space="preserve">
          <source>Returns the next row of the result set relative the current cursor position and positions the cursor at this row. If the cursor is positioned at the last row of the result set when this function is called the returned value will be &lt;code&gt;{selected, ColNames,[]}&lt;/code&gt; e.i. the list of row values is empty indicating that there is no more data to fetch.</source>
          <target state="translated">現在のカーソル位置に相対的な結果セットの次の行を返し、この行にカーソルを配置します。この関数が呼び出されたときにカーソルが結果セットの最後の行に置かれている場合、戻り値は &lt;code&gt;{selected, ColNames,[]}&lt;/code&gt; なります。つまり、行の値のリストが空で、フェッチするデータがないことを示しています。</target>
        </trans-unit>
        <trans-unit id="2a3cc80198ccf8a2422cb88e06be84c0d2ec7f1e" translate="yes" xml:space="preserve">
          <source>Returns the node where &lt;code&gt;Arg&lt;/code&gt; originates. &lt;code&gt;Arg&lt;/code&gt; can be a process identifier, a reference, or a port. If the local node is not alive, &lt;code&gt;nonode@nohost&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;Arg&lt;/code&gt; が発生するノードを返します。 &lt;code&gt;Arg&lt;/code&gt; は、プロセス識別子、参照、またはポートです。ローカルノードが &lt;code&gt;nonode@nohost&lt;/code&gt; ない場合、nonode @ nohostが返されます。</target>
        </trans-unit>
        <trans-unit id="7c4ff193cb26f222d298407efeb61e630c79c97f" translate="yes" xml:space="preserve">
          <source>Returns the node where &lt;code&gt;Arg&lt;/code&gt;, a pid, reference, or port, is located.</source>
          <target state="translated">&lt;code&gt;Arg&lt;/code&gt; 、pid、参照、またはポートが配置されているノードを返します。</target>
        </trans-unit>
        <trans-unit id="cdb939066b84f045a8eb1bbcb3b1492ceaddc96d" translate="yes" xml:space="preserve">
          <source>Returns the node with the expected lowest future load.</source>
          <target state="translated">将来の負荷が最も低いと予想されるノードを返します。</target>
        </trans-unit>
        <trans-unit id="20e0e84ddb30606ecca97ce2dbf6dbaf1fa1c9f6" translate="yes" xml:space="preserve">
          <source>Returns the number of ETS tables currently existing at the local node.</source>
          <target state="translated">ローカルノードに現在存在するETSテーブルの数を返します。</target>
        </trans-unit>
        <trans-unit id="cd9adff4dac1e4dbde3c24ac92ca38ebe99be758" translate="yes" xml:space="preserve">
          <source>Returns the number of UNIX processes running on this machine. This is a crude way of measuring the system load, but it may be of interest in some cases.</source>
          <target state="translated">このマシンで稼働しているUNIXプロセスの数を返します。これはシステムの負荷を測定するための粗雑な方法ですが、場合によっては興味をそそられるかもしれません。</target>
        </trans-unit>
        <trans-unit id="faa77efe8a0c1950ca900e43b0b99b95cd560d8f" translate="yes" xml:space="preserve">
          <source>Returns the number of active sockets.</source>
          <target state="translated">アクティブなソケットの数を返します。</target>
        </trans-unit>
        <trans-unit id="c504302b7487a29ac3ee011e13b274c12f99aa24" translate="yes" xml:space="preserve">
          <source>Returns the number of argument subtrees of an abstract function application.</source>
          <target state="translated">抽象関数アプリケーションの引数サブツリーの数を返します。</target>
        </trans-unit>
        <trans-unit id="49f3db63478719d2a3d4423ddb6c8ecd09de81bd" translate="yes" xml:space="preserve">
          <source>Returns the number of argument subtrees of an abstract inter-module call.</source>
          <target state="translated">抽象的なインターモジュールコールの引数サブツリーの数を返します。</target>
        </trans-unit>
        <trans-unit id="d65664376b3a5474c1cef82f92aab9a963a6412d" translate="yes" xml:space="preserve">
          <source>Returns the number of argument subtrees of an abstract primitive operation call.</source>
          <target state="translated">抽象プリミティブ操作呼び出しの引数サブツリーの数を返します。</target>
        </trans-unit>
        <trans-unit id="2da0bb8e43dd1cb7ce1b45513e68e19d15ed3f92" translate="yes" xml:space="preserve">
          <source>Returns the number of async threads in the async thread pool used for asynchronous driver calls (&lt;code&gt; erl_driver:driver_async()&lt;/code&gt;). The value is given as an integer.</source>
          <target state="translated">非同期ドライバー呼び出しに使用される非同期スレッドプール内の非同期スレッドの数を返します（ &lt;code&gt; erl_driver:driver_async()&lt;/code&gt; ）。値は整数として指定されます。</target>
        </trans-unit>
        <trans-unit id="68195efba97e00bb80a72e998c3ce9768deb6dcd" translate="yes" xml:space="preserve">
          <source>Returns the number of async threads in the async thread pool used for asynchronous driver calls (&lt;code&gt;erl_driver:driver_async()&lt;/code&gt;). The value is given as an integer.</source>
          <target state="translated">非同期ドライバー呼び出し（ &lt;code&gt;erl_driver:driver_async()&lt;/code&gt; ）に使用される非同期スレッドプール内の非同期スレッドの数を返します。値は整数として指定されます。</target>
        </trans-unit>
        <trans-unit id="de16206d78e81676063deda742f4bdf29ddc346f" translate="yes" xml:space="preserve">
          <source>Returns the number of atoms currently existing at the local node. The value is given as an integer.</source>
          <target state="translated">ローカルノードに現在存在する原子の数を返します。値は整数で与えられます。</target>
        </trans-unit>
        <trans-unit id="289e5e258e74d38d0c7744ab02085a55d74045f9" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes currently in the driver queue.</source>
          <target state="translated">ドライバキューの現在のバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="9685234297aa62c4ec6b93c2f5203975bb333255" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes remaining in the queue on success, otherwise &lt;code&gt;-1&lt;/code&gt;.</source>
          <target state="translated">成功した場合にキューに残っているバイト数を返します。それ以外の場合は &lt;code&gt;-1&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e1989ed9742c3110fc080b47dde3c3f316aead1d" translate="yes" xml:space="preserve">
          <source>Returns the number of bytes written (including terminating &lt;code&gt;NULL&lt;/code&gt; character) or &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;term&lt;/code&gt; is not an atom with maximum length of &lt;code&gt;size-1&lt;/code&gt;.</source>
          <target state="translated">リターンする（終端を含む書き込まれたバイト数 &lt;code&gt;NULL&lt;/code&gt; または文字） &lt;code&gt;0&lt;/code&gt; を場合 &lt;code&gt;term&lt;/code&gt; の最大長原子ではない &lt;code&gt;size-1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="28e2238e73b47b77e05ca2933c0cce9ea32e5cd7" translate="yes" xml:space="preserve">
          <source>Returns the number of characters in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; の文字数を返します。</target>
        </trans-unit>
        <trans-unit id="ab7c66f6c0ae44a560915366f99ad2d69ccd8be7" translate="yes" xml:space="preserve">
          <source>Returns the number of characters that have been scanned up to that point, including whitespace characters.</source>
          <target state="translated">空白文字を含む、それまでにスキャンした文字数を返します。</target>
        </trans-unit>
        <trans-unit id="b9a65fbe0ac8aee32e97b5e854b44d3ce3c467ce" translate="yes" xml:space="preserve">
          <source>Returns the number of characters written on success, otherwise a negative value.</source>
          <target state="translated">成功時に書き込まれた文字数を返し、そうでない場合は負の値を返します。</target>
        </trans-unit>
        <trans-unit id="b625423ddef94067248deca4c04683f8e549d739" translate="yes" xml:space="preserve">
          <source>Returns the number of dirty CPU scheduler threads used by the emulator. Dirty CPU schedulers execute CPU-bound native functions, such as NIFs, linked-in driver code, and BIFs that cannot be managed cleanly by the normal emulator schedulers.</source>
          <target state="translated">エミュレータが使用しているダーティ CPU スケジューラのスレッド数を返します。ダーティCPUスケジューラは、通常のエミュレータのスケジューラではクリーンに管理できないNIFやリンクインドライバコード、BIFなど、CPUに依存したネイティブ関数を実行します。</target>
        </trans-unit>
        <trans-unit id="7f256108e8868ab847f1eff7205badbf224a1696" translate="yes" xml:space="preserve">
          <source>Returns the number of dirty CPU schedulers online. The return value satisfies &lt;code&gt;1 &amp;lt;= DirtyCPUSchedulersOnline &amp;lt;= N&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the smallest of the return values of &lt;code&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/code&gt; and &lt;code&gt;erlang:system_info(schedulers_online)&lt;/code&gt;.</source>
          <target state="translated">オンラインのダーティCPUスケジューラの数を返します。戻り値は &lt;code&gt;1 &amp;lt;= DirtyCPUSchedulersOnline &amp;lt;= N&lt;/code&gt; 満たします。ここで、 &lt;code&gt;N&lt;/code&gt; は &lt;code&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/code&gt; および &lt;code&gt;erlang:system_info(schedulers_online)&lt;/code&gt; system_info（schedulers_online）の戻り値の最小値です。</target>
        </trans-unit>
        <trans-unit id="972b6b25e8bef227b0888f4e0ec09a488a7fd291" translate="yes" xml:space="preserve">
          <source>Returns the number of dirty I/O schedulers as an integer. Dirty I/O schedulers execute I/O-bound native functions, such as NIFs and linked-in driver code, which cannot be managed cleanly by the normal emulator schedulers.</source>
          <target state="translated">ダーティI/Oスケジューラの数を整数で返します。ダーティI/Oスケジューラは、通常のエミュレータのスケジューラではクリーンに管理できない、NIFやリンクインドライバコードなどのI/Oバウンドのネイティブ関数を実行します。</target>
        </trans-unit>
        <trans-unit id="f2cecf2f2587c973d7ba7749223e67ce5bcd9288" translate="yes" xml:space="preserve">
          <source>Returns the number of edges of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; のエッジの数を返します。</target>
        </trans-unit>
        <trans-unit id="7e0fe1fbaca57f92941dbf5961b597f892cbcbf3" translate="yes" xml:space="preserve">
          <source>Returns the number of element subtrees of a list skeleton. &lt;code&gt;Node&lt;/code&gt; must represent a proper list. E.g., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[X1 | [X2, X3 | [X4, X5, X6]]]&lt;/code&gt;&quot;, then &lt;code&gt;list_length(Node)&lt;/code&gt; returns the integer 6.</source>
          <target state="translated">リストのスケルトンの要素サブツリーの数を返します。 &lt;code&gt;Node&lt;/code&gt; は適切なリストを表す必要があります。たとえば、 &lt;code&gt;Node&lt;/code&gt; が「 &lt;code&gt;[X1 | [X2, X3 | [X4, X5, X6]]]&lt;/code&gt; 」を &lt;code&gt;list_length(Node)&lt;/code&gt; 場合、list_length（Node）は整数6を返します。</target>
        </trans-unit>
        <trans-unit id="11fe16c4bca2a3ef9c80a84bd4d422d2e37c0a79" translate="yes" xml:space="preserve">
          <source>Returns the number of element subtrees of an abstract list. &lt;code&gt;Node&lt;/code&gt; must represent a proper list. E.g., if &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[X1 | [X2, X3 | [X4, X5, X6]]]&lt;/code&gt;&quot;, then &lt;code&gt;list_length(Node)&lt;/code&gt; returns the integer 6.</source>
          <target state="translated">抽象リストの要素サブツリーの数を返します。 &lt;code&gt;Node&lt;/code&gt; は適切なリストを表す必要があります。たとえば、 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;[X1 | [X2, X3 | [X4, X5, X6]]]&lt;/code&gt; &quot;を &lt;code&gt;list_length(Node)&lt;/code&gt; 場合、list_length（Node）は整数6を返します。</target>
        </trans-unit>
        <trans-unit id="9b838bdf00f2c012822c68c54c58d945296cd890" translate="yes" xml:space="preserve">
          <source>Returns the number of element subtrees of an abstract tuple.</source>
          <target state="translated">抽象タプルの要素サブツリーの数を返します。</target>
        </trans-unit>
        <trans-unit id="1a40f32104666cf14c4127ffaced1598242fb985" translate="yes" xml:space="preserve">
          <source>Returns the number of element subtrees of an abstract value list.</source>
          <target state="translated">抽象値リストの要素サブツリーの数を返します。</target>
        </trans-unit>
        <trans-unit id="ad586e32862b432a0a41088a52255a88a289ea6d" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in &lt;code&gt;Ordset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Ordset&lt;/code&gt; 内の要素の数を返します。</target>
        </trans-unit>
        <trans-unit id="7bceeed5f3c9033126d8483cf01a323f732e14be" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; の要素数を返します。</target>
        </trans-unit>
        <trans-unit id="27741694d88ef2b8c9cd98a9ef33f42ed7c245ca" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in a tuple or the number of bytes in a binary or bitstring, for example:</source>
          <target state="translated">タプルの要素数や、バイナリやビット文字列のバイト数などを返します。</target>
        </trans-unit>
        <trans-unit id="c968d21c414055b6f6881cf8f979d52fd5e70356" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in an &lt;code&gt;Orddict&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Orddict&lt;/code&gt; の要素数を返します。</target>
        </trans-unit>
        <trans-unit id="0347b9e4b937d3628927c5a51702f2b0a337c4e1" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in an encoded term.</source>
          <target state="translated">エンコードされた項の要素数を返します。</target>
        </trans-unit>
        <trans-unit id="cbb04a338deacffc9cdd45a081bac00c58279528" translate="yes" xml:space="preserve">
          <source>Returns the number of elements in dictionary &lt;code&gt;Dict&lt;/code&gt;.</source>
          <target state="translated">辞書 &lt;code&gt;Dict&lt;/code&gt; 内の要素の数を返します。</target>
        </trans-unit>
        <trans-unit id="bc78430436d67ee43831124b6a2d7e6df88457ce" translate="yes" xml:space="preserve">
          <source>Returns the number of elements of a &lt;code&gt;tuple&lt;/code&gt; node.</source>
          <target state="translated">要素数を返し &lt;code&gt;tuple&lt;/code&gt; ノード。</target>
        </trans-unit>
        <trans-unit id="5d26e03c95e98c9b4ddb07abeb329de06ac539a0" translate="yes" xml:space="preserve">
          <source>Returns the number of elements of the ordered or unordered set &lt;code&gt;ASet&lt;/code&gt;.</source>
          <target state="translated">順序付きまたは順序なしのセット &lt;code&gt;ASet&lt;/code&gt; の要素の数を返します。</target>
        </trans-unit>
        <trans-unit id="c225130ea4a23823ec37a6247fe9d56da5d6dc0c" translate="yes" xml:space="preserve">
          <source>Returns the number of exact reductions.</source>
          <target state="translated">厳密な削減数を返します。</target>
        </trans-unit>
        <trans-unit id="27414b5e7862e995bd023cb7aba132000145e35e" translate="yes" xml:space="preserve">
          <source>Returns the number of functions matching argument &lt;code&gt;MFA&lt;/code&gt;. This is zero if none matched.</source>
          <target state="translated">引数 &lt;code&gt;MFA&lt;/code&gt; に一致する関数の数を返します。一致するものがなければゼロです。</target>
        </trans-unit>
        <trans-unit id="3eab28eed3d513f19bc8be9e90ec8f8a9c40eae5" translate="yes" xml:space="preserve">
          <source>Returns the number of grapheme clusters in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; の書記素クラスタの数を返します。</target>
        </trans-unit>
        <trans-unit id="875852e065bfcab09f0d2f2e878c3b2d86af0d05" translate="yes" xml:space="preserve">
          <source>Returns the number of key-value associations in &lt;code&gt;Map&lt;/code&gt;. This operation occurs in constant time.</source>
          <target state="translated">&lt;code&gt;Map&lt;/code&gt; 内のキーと値の関連付けの数を返します。この操作は一定の時間で発生します。</target>
        </trans-unit>
        <trans-unit id="4b4469de5b1f17d299564dd3431612d3a6b7e884" translate="yes" xml:space="preserve">
          <source>Returns the number of left-hand side variables of an abstract let-expression.</source>
          <target state="translated">抽象let-expressionの左辺の変数の数を返します。</target>
        </trans-unit>
        <trans-unit id="ab99794bdead76dd1c19e887d93d13e246ef599e" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Hours + Minutes + Seconds&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Hours + Minutes + Seconds&lt;/code&gt; のミリ秒数を返します。</target>
        </trans-unit>
        <trans-unit id="3e21598081417b439b5643f4da2844b6f5db7888" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Hours&lt;/code&gt;.</source>
          <target state="translated">ミリ秒数を &lt;code&gt;Hours&lt;/code&gt; で返します。</target>
        </trans-unit>
        <trans-unit id="edd8dc1060ce206d5c2e4bc39fe2bfe625eb43a8" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Minutes&lt;/code&gt;.</source>
          <target state="translated">ミリ秒数を &lt;code&gt;Minutes&lt;/code&gt; で返します。</target>
        </trans-unit>
        <trans-unit id="12c8b32a329885d598a6369eb66f2e456bac0905" translate="yes" xml:space="preserve">
          <source>Returns the number of milliseconds in &lt;code&gt;Seconds&lt;/code&gt;.</source>
          <target state="translated">ミリ秒数を返し &lt;code&gt;Seconds&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e37ee5b1b74524e5d5bf9ae8b42b650f5310f0ee" translate="yes" xml:space="preserve">
          <source>Returns the number of nodes in &lt;code&gt;Tree&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Tree&lt;/code&gt; のノード数を返します。</target>
        </trans-unit>
        <trans-unit id="bc9a93bc0d77c37498540b62ea2586ca944319bd" translate="yes" xml:space="preserve">
          <source>Returns the number of objects in the table, a non-negative integer.</source>
          <target state="translated">テーブル内のオブジェクトの数を、負ではない整数で返します。</target>
        </trans-unit>
        <trans-unit id="ef7f9184d4db73c4c94e61289ff5c2df0380e449" translate="yes" xml:space="preserve">
          <source>Returns the number of parameter subtrees of an abstract fun-expression.</source>
          <target state="translated">抽象式のパラメータサブツリーの数を返します。</target>
        </trans-unit>
        <trans-unit id="1403423bc487b6409173ca721885e0f995b0be24" translate="yes" xml:space="preserve">
          <source>Returns the number of pattern subtrees of an abstract clause.</source>
          <target state="translated">抽象節のパターンサブツリーの数を返します。</target>
        </trans-unit>
        <trans-unit id="ddd7d03445c2ab56bf345eadf4a78c17fe249214" translate="yes" xml:space="preserve">
          <source>Returns the number of ports (an &lt;code&gt;integer() &amp;gt;= 0&lt;/code&gt;) using the driver.</source>
          <target state="translated">ドライバを使用してポートの数（ &lt;code&gt;integer() &amp;gt;= 0&lt;/code&gt; ）を返します。</target>
        </trans-unit>
        <trans-unit id="491d9bc6df2db855e8c29dbad2bf37402fcc8564" translate="yes" xml:space="preserve">
          <source>Returns the number of ports currently existing at the local node. The value is given as an integer. This is the same value as returned by &lt;code&gt;length(erlang:ports())&lt;/code&gt;, but more efficient.</source>
          <target state="translated">ローカルノードに現在存在するポートの数を返します。値は整数として指定されます。これは &lt;code&gt;length(erlang:ports())&lt;/code&gt; によって返される値と同じですが、より効率的です。</target>
        </trans-unit>
        <trans-unit id="583d57fb0564ec0306d359b8d46a2530b90a86d0" translate="yes" xml:space="preserve">
          <source>Returns the number of processes currently existing at the local node. The value is given as an integer. This is the same value as returned by &lt;code&gt;length(processes())&lt;/code&gt;, but more efficient.</source>
          <target state="translated">ローカルノードに現在存在するプロセスの数を返します。値は整数として指定されます。これは、 &lt;code&gt;length(processes())&lt;/code&gt; によって返される値と同じですが、より効率的です。</target>
        </trans-unit>
        <trans-unit id="785f587d2a9ba00ce2609c7ff903f6c1bb1110ac" translate="yes" xml:space="preserve">
          <source>Returns the number of scheduler threads used by the emulator. Scheduler threads online schedules Erlang processes and Erlang ports, and execute Erlang code and Erlang linked-in driver code.</source>
          <target state="translated">エミュレータで使われているスケジューラースレッドの数を返します。スケジューラースレッドはオンラインでErlangプロセスやErlangポートをスケジュールし、ErlangコードやErlangリンクインドライバコードを実行します。</target>
        </trans-unit>
        <trans-unit id="6402e69f258c1835a9c52804476542b4c976434e" translate="yes" xml:space="preserve">
          <source>Returns the number of schedulers online. The scheduler identifiers of schedulers online satisfy the relationship &lt;code&gt;1 &amp;lt;= SchedulerId &amp;lt;= erlang:system_info(schedulers_online)&lt;/code&gt;.</source>
          <target state="translated">オンラインのスケジューラーの数を返します。オンラインのスケジューラーのスケジューラーIDは、関係 &lt;code&gt;1 &amp;lt;= SchedulerId &amp;lt;= erlang:system_info(schedulers_online)&lt;/code&gt; 満たします。</target>
        </trans-unit>
        <trans-unit id="e5b2848fc2497fdc525632a37ac35933549746cc" translate="yes" xml:space="preserve">
          <source>Returns the number of seconds since midnight up to the specified time.</source>
          <target state="translated">指定した時間までの0時からの秒数を返します。</target>
        </trans-unit>
        <trans-unit id="ffbc86e2482f174303a71199a1f5608893d1ed2d" translate="yes" xml:space="preserve">
          <source>Returns the number of sessions in the cache. If size exceeds the maximum number of sessions, the current cache entries will be invalidated regardless of their remaining lifetime. Is to be callable from any process.</source>
          <target state="translated">キャッシュ内のセッション数を返します。サイズがセッション数の最大値を超えた場合、現在のキャッシュエントリは残りの有効期間に関わらず無効となります。どのプロセスからでも呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="16ddf2387fd04809ee8daa453a0efa12e73e124b" translate="yes" xml:space="preserve">
          <source>Returns the number of start bits, &lt;code&gt;M&lt;/code&gt;, of a &lt;code&gt;bitstring_type&lt;/code&gt; node.</source>
          <target state="translated">スタートビットの数を返し &lt;code&gt;M&lt;/code&gt; の、 &lt;code&gt;bitstring_type&lt;/code&gt; のノード。</target>
        </trans-unit>
        <trans-unit id="2e6475c6db47d98c9167cc4f4f722da9bb5c01e5" translate="yes" xml:space="preserve">
          <source>Returns the number of subtrees of a data constructor node. This is equivalent to &lt;code&gt;length(data_es(Node))&lt;/code&gt;, but potentially more efficient.</source>
          <target state="translated">データコンストラクタノードのサブツリーの数を返します。これは &lt;code&gt;length(data_es(Node))&lt;/code&gt; と同等ですが、より効率的になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="36ef3e0a5dbdeac871ee3e6f8d38ff39927bfb55" translate="yes" xml:space="preserve">
          <source>Returns the number of vertices of digraph &lt;code&gt;G&lt;/code&gt;.</source>
          <target state="translated">ダイグラフ &lt;code&gt;G&lt;/code&gt; の頂点の数を返します。</target>
        </trans-unit>
        <trans-unit id="7c7b135d5b9e3c6434f3fc9376651b53ae756d53" translate="yes" xml:space="preserve">
          <source>Returns the number of words in &lt;code&gt;String&lt;/code&gt;, separated by blanks or &lt;code&gt;Character&lt;/code&gt;.</source>
          <target state="translated">内の単語の数を返します &lt;code&gt;String&lt;/code&gt; 空白で区切ったり、 &lt;code&gt;Character&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="816478c4d0ecefe3cc8fa0901f0b437027d2fe17" translate="yes" xml:space="preserve">
          <source>Returns the numeral string represented by a &lt;code&gt;float&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; ノードで表される数値文字列を返します。</target>
        </trans-unit>
        <trans-unit id="4a45899daebd5f8f4dd974886fc3e48dbefc658c" translate="yes" xml:space="preserve">
          <source>Returns the numeral string represented by a floating-point literal node.</source>
          <target state="translated">浮動小数点リテラルノードで表現された数値文字列を返します。</target>
        </trans-unit>
        <trans-unit id="a586d3cb678be1749add7a5da87769e378a20dec" translate="yes" xml:space="preserve">
          <source>Returns the numeral string represented by an &lt;code&gt;integer&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;integer&lt;/code&gt; ノードで表される数値文字列を返します。</target>
        </trans-unit>
        <trans-unit id="ef66c08edf10b9e8d896d663ea824921701e133d" translate="yes" xml:space="preserve">
          <source>Returns the numeral string represented by an integer literal node.</source>
          <target state="translated">整数リテラルノードで表現された数値文字列を返します。</target>
        </trans-unit>
        <trans-unit id="7c5f0cb49feee55aa2ec12d1aa9ff79a709d0ef3" translate="yes" xml:space="preserve">
          <source>Returns the object code file extension corresponding to the Erlang machine used, namely &lt;code&gt;.beam&lt;/code&gt;.</source>
          <target state="translated">使用されるErlangマシンに対応するオブジェクトコードファイル拡張子、つまり &lt;code&gt;.beam&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="6a87f473568302f6f0157e494cb4551c83562306" translate="yes" xml:space="preserve">
          <source>Returns the official name of &lt;code&gt;Host&lt;/code&gt;, or &lt;code&gt;{error, Host}&lt;/code&gt; if no such name is found. See also &lt;code&gt;&lt;a href=&quot;inet&quot;&gt;inet(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; の正式名、またはそのような名前が見つからない場合は &lt;code&gt;{error, Host}&lt;/code&gt; 返します。 &lt;code&gt;&lt;a href=&quot;inet&quot;&gt;inet(3)&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="f362a3afc2fafb536dcb997b8b99e94c30dbe125" translate="yes" xml:space="preserve">
          <source>Returns the old state identifier, that is:</source>
          <target state="translated">古い状態の識別子を返します。</target>
        </trans-unit>
        <trans-unit id="c212b94b18e6ce7fb278680ccf26e904eae63ef1" translate="yes" xml:space="preserve">
          <source>Returns the old value of the flag.</source>
          <target state="translated">フラグの古い値を返します。</target>
        </trans-unit>
        <trans-unit id="a4d5cbf7a554387015c97a39e626461ec015fa1e" translate="yes" xml:space="preserve">
          <source>Returns the operator precedence field of the prettyprinter context.</source>
          <target state="translated">prettyprinter コンテキストの演算子の優先順位フィールドを返します。</target>
        </trans-unit>
        <trans-unit id="e8704fd8ab7a384142305a1b7f6f1d6978057230" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of a &lt;code&gt;prefix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;prefix_expr&lt;/code&gt; ノードの演算子サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="c27d9b6065ec14668d370cca91d5666dafc230f9" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of an &lt;code&gt;application&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;application&lt;/code&gt; ノードの演算子サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="9731910832b6b164f42fcebed8fdf99171fbd591" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of an &lt;code&gt;infix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;infix_expr&lt;/code&gt; ノードの演算子サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="ddc5bc3bf612dcfa57442dae7127ec5146e1f698" translate="yes" xml:space="preserve">
          <source>Returns the operator subtree of an abstract function application.</source>
          <target state="translated">抽象関数アプリケーションの演算子サブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="85b33ca2308142d2f8f7b80f3de5d0e5583d8d1d" translate="yes" xml:space="preserve">
          <source>Returns the pair &lt;code&gt;{node, Node}&lt;/code&gt;, describing the chunk continuation returned by &lt;code&gt;chunk/2,3&lt;/code&gt;, &lt;code&gt;bchunk/2,3&lt;/code&gt;, or &lt;code&gt;chunk_step/3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{node, Node}&lt;/code&gt; のペアを返し、 &lt;code&gt;chunk/2,3&lt;/code&gt; 、 &lt;code&gt;bchunk/2,3&lt;/code&gt; 、または &lt;code&gt;chunk_step/3&lt;/code&gt; によって返されるチャンクの継続を記述します。</target>
        </trans-unit>
        <trans-unit id="90a0aac47f2a74669c81ad36eebc01a1652c9cd2" translate="yes" xml:space="preserve">
          <source>Returns the paper widh field of the prettyprinter context.</source>
          <target state="translated">prettyprinter コンテキストの paper widh フィールドを返します。</target>
        </trans-unit>
        <trans-unit id="02537d119ef2252eea478fd30ef841670ba037d6" translate="yes" xml:space="preserve">
          <source>Returns the path for the &quot;library directory&quot;, the top directory, for an application &lt;code&gt;Name&lt;/code&gt; located under &lt;code&gt;$OTPROOT/lib&lt;/code&gt; or on a directory referred to with environment variable &lt;code&gt;ERL_LIBS&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$OTPROOT/lib&lt;/code&gt; 下、または環境変数 &lt;code&gt;ERL_LIBS&lt;/code&gt; で参照されるディレクトリにあるアプリケーション &lt;code&gt;Name&lt;/code&gt; の「ライブラリディレクトリ」の最上位ディレクトリのパスを返します。</target>
        </trans-unit>
        <trans-unit id="e9f65ccd60013371b1b2ad8467610f0efc52e1f6" translate="yes" xml:space="preserve">
          <source>Returns the path to a subdirectory directly under the top directory of an application. Normally the subdirectories reside under the top directory for the application, but when applications at least partly resides in an archive, the situation is different. Some of the subdirectories can reside as regular directories while other reside in an archive file. It is not checked whether this directory exists.</source>
          <target state="translated">アプリケーションのトップディレクトリ直下のサブディレクトリへのパスを返します。通常、サブディレクトリはアプリケーションのトップディレクトリの下に存在しますが、 アプリケーションの少なくとも一部がアーカイブに存在する場合は状況が異なります。サブディレクトリの一部は通常のディレクトリとして存在し、他のサブディレクトリはアーカイブファイルの中に存在します。このディレクトリが存在するかどうかはチェックされません。</target>
        </trans-unit>
        <trans-unit id="321113d5c8b9ba5a1634dc932451dd1414a4ed08" translate="yes" xml:space="preserve">
          <source>Returns the path to the &lt;code&gt;priv&lt;/code&gt; directory in an application. Equivalent to &lt;code&gt;code:lib_dir(Name, priv)&lt;/code&gt;.</source>
          <target state="translated">アプリケーションの &lt;code&gt;priv&lt;/code&gt; ディレクトリへのパスを返します。 &lt;code&gt;code:lib_dir(Name, priv)&lt;/code&gt; 同等です。</target>
        </trans-unit>
        <trans-unit id="49f8d3a368e0189cd9b4ee8bb0935ede3e6cc08e" translate="yes" xml:space="preserve">
          <source>Returns the path to the current key. This is the equivalent of &lt;code&gt;pwd&lt;/code&gt;.</source>
          <target state="translated">現在のキーへのパスを返します。これは &lt;code&gt;pwd&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="006ce942b88e0ca111302602b61535fbad8bbc68" translate="yes" xml:space="preserve">
          <source>Returns the path type, which is one of the following:</source>
          <target state="translated">パスの種類を返します。</target>
        </trans-unit>
        <trans-unit id="84ce7f7e9dd661fabc914f1faef4348283166ea4" translate="yes" xml:space="preserve">
          <source>Returns the pattern subtree of a &lt;code&gt;generator&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;generator&lt;/code&gt; ノードのパターンサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="153c3ae9cc171eb05251aa0aba53e1cb2111fa80" translate="yes" xml:space="preserve">
          <source>Returns the pattern subtree of a &lt;code&gt;match_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;match_expr&lt;/code&gt; ノードのパターンサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="595210ee76a1a50fef34943fc4c102cc45501b2b" translate="yes" xml:space="preserve">
          <source>Returns the pattern subtree of an abstract pattern alias.</source>
          <target state="translated">抽象パターンエイリアスのパターンサブツリーを返します。</target>
        </trans-unit>
        <trans-unit id="4631b360f167d661d505445df0774472e0ea03e9" translate="yes" xml:space="preserve">
          <source>Returns the pid registered under &lt;code&gt;Name&lt;/code&gt;, or &lt;code&gt;undefined&lt;/code&gt;if the name is not registered.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; に登録されているpidを返します。名前が登録されていない場合は &lt;code&gt;undefined&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="324e95de400a41779998513f2bd89025046048e0" translate="yes" xml:space="preserve">
          <source>Returns the pid with the globally registered name &lt;code&gt;Name&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt; if the name is not globally registered.</source>
          <target state="translated">グローバルに登録された名前 &lt;code&gt;Name&lt;/code&gt; を持つpidを返します。名前がグローバルに登録されていない場合は、 &lt;code&gt;undefined&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8236434e0b154933eee5239693c72e6b1e2140d0" translate="yes" xml:space="preserve">
          <source>Returns the pid, port identifier or tracer module of the current system tracer or &lt;code&gt;false&lt;/code&gt; if no system tracer is activated.</source>
          <target state="translated">現在のシステムトレーサーのpid、ポート識別子、またはトレーサーモジュールを返します。アクティブ化されているシステムトレーサーがない場合は &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="92f35027bcaad43876596a88a76aeeb303390618" translate="yes" xml:space="preserve">
          <source>Returns the pointer to the private data that was set by &lt;code&gt;&lt;a href=&quot;#load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#upgrade&quot;&gt;upgrade&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#upgrade&quot;&gt;upgrade&lt;/a&gt;&lt;/code&gt; によって設定されたプライベートデータへのポインタを返します。</target>
        </trans-unit>
        <trans-unit id="546c6ad3a07fa0ce8c58312141c49c8103a49fd9" translate="yes" xml:space="preserve">
          <source>Returns the port owner process.</source>
          <target state="translated">ポートオーナープロセスを返します。</target>
        </trans-unit>
        <trans-unit id="dd3ec286f3fd13578531ca16ade1edd5c47afaf4" translate="yes" xml:space="preserve">
          <source>Returns the position information associated with &lt;code&gt;Node&lt;/code&gt;. This is usually a nonnegative integer (indicating the source code line number), but may be any term. By default, all new tree nodes have their associated position information set to the integer zero.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; に関連付けられた位置情報を返します。これは通常、非負の整数（ソースコードの行番号を示す）ですが、任意の項を指定できます。デフォルトでは、すべての新しいツリーノードは、関連付けられた位置情報が整数ゼロに設定されています。</target>
        </trans-unit>
        <trans-unit id="15bf9a5ff537a8ff48b2248c819f055824722f30" translate="yes" xml:space="preserve">
          <source>Returns the position of the table key, a positive integer.</source>
          <target state="translated">テーブルキーの位置を正の整数で返します。</target>
        </trans-unit>
        <trans-unit id="80d1c70786cedec3b8802fd4a00934131cb78803" translate="yes" xml:space="preserve">
          <source>Returns the position where the first occurrence of &lt;code&gt;SubString&lt;/code&gt; begins in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;SubString&lt;/code&gt; does not exist in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 内で最初に出現する &lt;code&gt;SubString&lt;/code&gt; の位置を返します。 &lt;code&gt;String&lt;/code&gt; に &lt;code&gt;SubString&lt;/code&gt; が存在しない場合は &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="4b92023841df981fc854cd6c21086b8c99e997ed" translate="yes" xml:space="preserve">
          <source>Returns the position where the last occurrence of &lt;code&gt;SubString&lt;/code&gt; begins in &lt;code&gt;String&lt;/code&gt;. Returns &lt;code&gt;0&lt;/code&gt; if &lt;code&gt;SubString&lt;/code&gt; does not exist in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; で &lt;code&gt;SubString&lt;/code&gt; が最後に出現する位置を返します。 &lt;code&gt;String&lt;/code&gt; に &lt;code&gt;SubString&lt;/code&gt; が存在しない場合は &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a573b144d2932c1f987d4fafd6cad9f79955e6d8" translate="yes" xml:space="preserve">
          <source>Returns the prefix element subtrees of a &lt;code&gt;list&lt;/code&gt; node. If &lt;code&gt;Node&lt;/code&gt; represents &quot;&lt;code&gt;[E1, ..., En]&lt;/code&gt;&quot; or &quot;&lt;code&gt;[E1, ..., En | Tail]&lt;/code&gt;&quot;, the returned value is &lt;code&gt;[E1, ..., En]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; ノードのプレフィックス要素サブツリーを返します。 &lt;code&gt;Node&lt;/code&gt; が &quot; &lt;code&gt;[E1, ..., En]&lt;/code&gt; &quot;または &quot; &lt;code&gt;[E1, ..., En | Tail]&lt;/code&gt; &quot;を表す場合、戻り値は &lt;code&gt;[E1, ..., En]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6d39efa51d78c02315f14baedf1490bdc2478b33" translate="yes" xml:space="preserve">
          <source>Returns the previous key &lt;code&gt;Key2&lt;/code&gt;, preceding key &lt;code&gt;Key1&lt;/code&gt; according to Erlang term order in table &lt;code&gt;Tab&lt;/code&gt; of type &lt;code&gt;ordered_set&lt;/code&gt;. For other table types, the function is synonymous to &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt;. If no previous key exists, &lt;code&gt;'$end_of_table'&lt;/code&gt; is returned.</source>
          <target state="translated">戻り値は、以前のキー &lt;code&gt;Key2&lt;/code&gt; 、キー先行 &lt;code&gt;Key1&lt;/code&gt; テーブルにアーラン項順序に従って &lt;code&gt;Tab&lt;/code&gt; 型の &lt;code&gt;ordered_set&lt;/code&gt; 。他のテーブルタイプの場合、関数は &lt;code&gt;&lt;a href=&quot;#next-2&quot;&gt;next/2&lt;/a&gt;&lt;/code&gt; と同義です。以前のキーが存在しない場合、 &lt;code&gt;'$end_of_table'&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c8d4ae737b4db2c67bfe04ef9c377e7e5e6e3dbd" translate="yes" xml:space="preserve">
          <source>Returns the previous row of the result set relative the current cursor position and positions the cursor at this row.</source>
          <target state="translated">現在のカーソル位置から見た結果セットの前の行を返し、その行にカーソルを配置します。</target>
        </trans-unit>
        <trans-unit id="2e3aed75f5551975fb003b65a6b091a77e6494cb" translate="yes" xml:space="preserve">
          <source>Returns the previous system monitor settings just like &lt;code&gt;&lt;a href=&quot;#system_monitor-0&quot;&gt; erlang:system_monitor/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_monitor-0&quot;&gt; erlang:system_monitor/0&lt;/a&gt;&lt;/code&gt; と同じように以前のシステムモニター設定を返します。</target>
        </trans-unit>
        <trans-unit id="79429747a01ca62392853f8ded40b70de6e8ccea" translate="yes" xml:space="preserve">
          <source>Returns the previous system monitor settings just like &lt;code&gt;&lt;a href=&quot;#system_monitor-0&quot;&gt;erlang:system_monitor/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#system_monitor-0&quot;&gt;erlang:system_monitor/0&lt;/a&gt;&lt;/code&gt; と同様に、以前のシステムモニター設定を返します。</target>
        </trans-unit>
        <trans-unit id="cac41fdf6cb77bccdde51e850b532f7064f9c74d" translate="yes" xml:space="preserve">
          <source>Returns the previous value of the trace token.</source>
          <target state="translated">トレーストークンの前の値を返します。</target>
        </trans-unit>
        <trans-unit id="b2ce30a9003a3dcc5bfa6f287e1ba4c1a86e09dc" translate="yes" xml:space="preserve">
          <source>Returns the printname of an &lt;code&gt;atom&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;atom&lt;/code&gt; ノードの印刷名を返します。</target>
        </trans-unit>
        <trans-unit id="de913fdfd67c653b94d3ca22501a2f4f53ed3e4b" translate="yes" xml:space="preserve">
          <source>Returns the printname of an abstract atom.</source>
          <target state="translated">抽象原子のprintnameを返します。</target>
        </trans-unit>
        <trans-unit id="2523b83ccfeaa0870112d689fc316053b18b0851" translate="yes" xml:space="preserve">
          <source>Returns the process ID associated with a living monitor. It can be used in the &lt;code&gt;&lt;a href=&quot;driver_entry#process_exit&quot;&gt; process_exit&lt;/a&gt;&lt;/code&gt; callback to get the process identification for the exiting process.</source>
          <target state="translated">稼働中のモニターに関連付けられているプロセスIDを返します。 &lt;code&gt;&lt;a href=&quot;driver_entry#process_exit&quot;&gt; process_exit&lt;/a&gt;&lt;/code&gt; コールバックで使用して、既存のプロセスのプロセスIDを取得できます。</target>
        </trans-unit>
        <trans-unit id="c09417a2f782c732ace352e8c361babceffd6222" translate="yes" xml:space="preserve">
          <source>Returns the process ID associated with a living monitor. It can be used in the &lt;code&gt;&lt;a href=&quot;driver_entry#process_exit&quot;&gt;process_exit&lt;/a&gt;&lt;/code&gt; callback to get the process identification for the exiting process.</source>
          <target state="translated">稼働中のモニターに関連付けられているプロセスIDを返します。これを &lt;code&gt;&lt;a href=&quot;driver_entry#process_exit&quot;&gt;process_exit&lt;/a&gt;&lt;/code&gt; コールバックで使用して、既存のプロセスのプロセスIDを取得できます。</target>
        </trans-unit>
        <trans-unit id="0f70d0ce41a4f881616a60ac88b11968ce5d22b0" translate="yes" xml:space="preserve">
          <source>Returns the process ID of the process that made the current call to the driver. The process ID can be used with &lt;code&gt;&lt;a href=&quot;#driver_send_term&quot;&gt;driver_send_term&lt;/a&gt;&lt;/code&gt; to send back data to the caller. &lt;code&gt;driver_caller&lt;/code&gt; only returns valid data when currently executing in one of the following driver callbacks:</source>
          <target state="translated">ドライバーを現在呼び出しているプロセスのプロセスIDを返します。プロセスIDを &lt;code&gt;&lt;a href=&quot;#driver_send_term&quot;&gt;driver_send_term&lt;/a&gt;&lt;/code&gt; とともに使用して、呼び出し元にデータを送り返すことができます。 &lt;code&gt;driver_caller&lt;/code&gt; は、次のいずれかのドライバーコールバックで現在実行されている場合にのみ有効なデータを返します。</target>
        </trans-unit>
        <trans-unit id="01f1399ec4848c924251bf599db1e66546a717fe" translate="yes" xml:space="preserve">
          <source>Returns the process dictionary and deletes it, for example:</source>
          <target state="translated">プロセス辞書を返し、削除します。</target>
        </trans-unit>
        <trans-unit id="a2e0820a69de06d02f05f63a54b009bfff38ba5e" translate="yes" xml:space="preserve">
          <source>Returns the process dictionary as a list of &lt;code&gt;{Key, Val}&lt;/code&gt; tuples, for example:</source>
          <target state="translated">プロセスディクショナリを &lt;code&gt;{Key, Val}&lt;/code&gt; タプルのリストとして返します。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="da30893a43070676175cefc324f5d6933878732e" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. A link is created between the calling process and the new process, atomically. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned and an exit signal with reason &lt;code&gt;noconnection&lt;/code&gt; is sent to the calling process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt; spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; の適用によって開始された新しいプロセスのプロセス識別子（pid）を &lt;code&gt;Node&lt;/code&gt; 空のリスト &lt;code&gt;[]&lt;/code&gt; に返します。呼び出し元のプロセスと新しいプロセスの間に、アトミックにリンクが作成されます。場合は &lt;code&gt;Node&lt;/code&gt; 存在しない、役に立たないPIDが返され、理由で終了信号 &lt;code&gt;noconnection&lt;/code&gt; は、呼び出し元のプロセスに送信されます。それ以外の場合は &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt; spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="807e6d59f8272dfb2df4ddaa7f2cb965c1c9b897" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. A link is created between the calling process and the new process, atomically. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned and an exit signal with reason &lt;code&gt;noconnection&lt;/code&gt; is sent to the calling process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; のアプリケーションによって開始された新しいプロセスのプロセス識別子（pid）を &lt;code&gt;Node&lt;/code&gt; の空のリスト &lt;code&gt;[]&lt;/code&gt; に返します。呼び出しプロセスと新しいプロセスの間にリンクがアトミックに作成されます。場合は &lt;code&gt;Node&lt;/code&gt; 存在しない、役に立たないPIDが返され、理由で終了信号 &lt;code&gt;noconnection&lt;/code&gt; は、呼び出し元のプロセスに送信されます。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="5b805e859795d47f79c78974d6d3bf3de04d9de9" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; のアプリケーションによって開始された新しいプロセスのプロセス識別子（pid）を &lt;code&gt;Node&lt;/code&gt; の空のリスト &lt;code&gt;[]&lt;/code&gt; に返します。場合は &lt;code&gt;Node&lt;/code&gt; 存在しない、役に立たないpidが返されます。それ以外は &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="1651cff75e71bc3cca74deea905d1f150b6a5fa1" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; のアプリケーションによって開始された新しいプロセスのプロセス識別子（pid）を空のリスト &lt;code&gt;[]&lt;/code&gt; に返します。それ以外は &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="7b834c15d425d0adaacdb65c97269e4e402b7ae7" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. A link is created between the calling process and the new process, atomically. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned and an exit signal with reason &lt;code&gt;noconnection&lt;/code&gt; is sent to the calling process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt; spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module:Function&lt;/code&gt; を &lt;code&gt;Node&lt;/code&gt; &lt;code&gt;Args&lt;/code&gt; に適用することによって開始された新しいプロセスのプロセス識別子（pid）を返します。呼び出し元のプロセスと新しいプロセスの間に、アトミックにリンクが作成されます。場合は &lt;code&gt;Node&lt;/code&gt; 存在しない、役に立たないPIDが返され、理由で終了信号 &lt;code&gt;noconnection&lt;/code&gt; は、呼び出し元のプロセスに送信されます。それ以外の場合は &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt; spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="65c181b527326b49f0ac827a0e921c9415e9d4dd" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. A link is created between the calling process and the new process, atomically. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned and an exit signal with reason &lt;code&gt;noconnection&lt;/code&gt; is sent to the calling process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">アプリケーションによって開始された新しいプロセスのプロセス識別子（PID）を返します &lt;code&gt;Module:Function&lt;/code&gt; へ &lt;code&gt;Args&lt;/code&gt; の &lt;code&gt;Node&lt;/code&gt; 。呼び出しプロセスと新しいプロセスの間にリンクがアトミックに作成されます。場合は &lt;code&gt;Node&lt;/code&gt; 存在しない、役に立たないPIDが返され、理由で終了信号 &lt;code&gt;noconnection&lt;/code&gt; は、呼び出し元のプロセスに送信されます。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="c3a0803f013a3f94e9d9aa95cf9347116b949810" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">アプリケーションによって開始された新しいプロセスのプロセス識別子（PID）を返します &lt;code&gt;Module:Function&lt;/code&gt; へ &lt;code&gt;Args&lt;/code&gt; の &lt;code&gt;Node&lt;/code&gt; 。場合は &lt;code&gt;Node&lt;/code&gt; 存在しない、役に立たないpidが返されます。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="54fa4c4d9fa8b92ec1113f462f90e3f78e85dcfc" translate="yes" xml:space="preserve">
          <source>Returns the process identifier (pid) of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">アプリケーションによって開始された新しいプロセスのプロセス識別子（PID）を返します &lt;code&gt;Module:Function&lt;/code&gt; へ &lt;code&gt;Args&lt;/code&gt; の &lt;code&gt;Node&lt;/code&gt; 。場合は &lt;code&gt;Node&lt;/code&gt; 存在しない、役に立たないpidが返されます。それ以外は &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="b7f404866224f71a3e58de3b96014164fefc80b8" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; does not exist, a useless pid is returned. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; のアプリケーションによって開始された新しいプロセスのプロセス識別子を &lt;code&gt;Node&lt;/code&gt; の空のリスト &lt;code&gt;[]&lt;/code&gt; に返します。場合は &lt;code&gt;Node&lt;/code&gt; 存在しない、役に立たないpidが返されます。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="1fed894a1512ce46a2a275ccfd62d287023c4f84" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;. A link is created between the calling process and the new process, atomically. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; のアプリケーションによって開始された新しいプロセスのプロセスIDを空のリスト &lt;code&gt;[]&lt;/code&gt; に返します。呼び出しプロセスと新しいプロセスの間にリンクがアトミックに作成されます。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="af6d8e47602ea5bce18d73a9ce0ed0ceabcf5d9a" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; のアプリケーションによって開始された新しいプロセスのプロセスIDを空のリスト &lt;code&gt;[]&lt;/code&gt; に返します。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="fa0e7a06fec50492dfee2ff7bf1d4a8a811eb517" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt;.</source>
          <target state="translated">アプリケーションによって開始された新しいプロセスのプロセス識別子を返し &lt;code&gt;Module:Function&lt;/code&gt; へ &lt;code&gt;Args&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1399dccf65e4176de1759161036d154a0c401255" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process started by the application of &lt;code&gt;Module:Function&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt;. A link is created between the calling process and the new process, atomically. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">アプリケーションによって開始された新しいプロセスのプロセス識別子を返し &lt;code&gt;Module:Function&lt;/code&gt; へ &lt;code&gt;Args&lt;/code&gt; 。呼び出しプロセスと新しいプロセスの間にリンクがアトミックに作成されます。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="ff27fd3ab29e161a7f6b2c0357a332ed0ea4d1d7" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process, started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt; on the node &lt;code&gt;Node&lt;/code&gt;, and a reference for a monitor created to the new process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ノード &lt;code&gt;Node&lt;/code&gt; の空のリスト &lt;code&gt;[]&lt;/code&gt; に &lt;code&gt;Fun&lt;/code&gt; を適用することによって開始された、新しいプロセスのプロセスIDと、新しいプロセスに対して作成されたモニターの参照を返します。それ以外の場合は &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="6bd62b70a6cb87542c88c34c5500d5087ac288c7" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of a new process, started by the application of &lt;code&gt;Fun&lt;/code&gt; to the empty list &lt;code&gt;[]&lt;/code&gt;, and a reference for a monitor created to the new process. Otherwise works like &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Fun&lt;/code&gt; のアプリケーションによって開始された新しいプロセスのプロセスIDを空のリスト &lt;code&gt;[]&lt;/code&gt; に返し、新しいプロセスに対して作成されたモニターの参照を返します。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;#spawn-3&quot;&gt;spawn/3&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="55c30a325ce59bc5c22a7ad0509019e23da0eb3f" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the calling process, for example:</source>
          <target state="translated">呼び出したプロセスのプロセス識別子を返します。</target>
        </trans-unit>
        <trans-unit id="87465ac9469d5adad8a1f34c987e678f8f5c4742" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the current Erlang emulator in the format most commonly used by the OS environment. Returns &lt;code&gt;Value&lt;/code&gt; as a string containing the (usually) numerical identifier for a process. On Unix, this is typically the return value of the &lt;code&gt;getpid()&lt;/code&gt; system call. On Windows, the process id as returned by the &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; system call is used.</source>
          <target state="translated">現在のErlangエミュレーターのプロセスIDを、OS環境で最も一般的に使用される形式で返します。プロセスの（通常は）数値識別子を含む文字列として &lt;code&gt;Value&lt;/code&gt; を返します。Unixでは、これは通常 &lt;code&gt;getpid()&lt;/code&gt; システムコールの戻り値です。Windowsでは、 &lt;code&gt;GetCurrentProcessId()&lt;/code&gt; システムコールによって返されるプロセスID が使用されます。</target>
        </trans-unit>
        <trans-unit id="f141a72600726122755cdbd5a26145ed550e1567" translate="yes" xml:space="preserve">
          <source>Returns the process identifier of the group leader for the process evaluating the function.</source>
          <target state="translated">関数を評価するプロセスのグループリーダのプロセス識別子を返します。</target>
        </trans-unit>
        <trans-unit id="d1b6bc3db8dba2bad54d7202a8f3ea45429a7ace" translate="yes" xml:space="preserve">
          <source>Returns the process identifier or port identifier with the registered name &lt;code&gt;RegName&lt;/code&gt;. Returns &lt;code&gt;undefined&lt;/code&gt; if the name is not registered. Example:</source>
          <target state="translated">登録された名前 &lt;code&gt;RegName&lt;/code&gt; を持つプロセス識別子またはポート識別子を返します。名前が登録されていない場合は、 &lt;code&gt;undefined&lt;/code&gt; を返します。例：</target>
        </trans-unit>
        <trans-unit id="ecb395b84c751bcedee93e1b2d5e6863abd7cc75" translate="yes" xml:space="preserve">
          <source>Returns the process, port or tracer module to which all trace messages are sent.</source>
          <target state="translated">すべてのトレースメッセージが送信されるプロセス、ポート、またはトレーサモジュールを返します。</target>
        </trans-unit>
        <trans-unit id="cf05e569cedcd2f699b774279737522a264abe22" translate="yes" xml:space="preserve">
          <source>Returns the promised answer from a previous &lt;code&gt;&lt;a href=&quot;#async_call-4&quot;&gt;async_call/4&lt;/a&gt;&lt;/code&gt;. If the answer is available, it is returned immediately. Otherwise, the calling process is suspended until the answer arrives from &lt;code&gt;Node&lt;/code&gt;.</source>
          <target state="translated">以前の &lt;code&gt;&lt;a href=&quot;#async_call-4&quot;&gt;async_call/4&lt;/a&gt;&lt;/code&gt; からの約束された答えを返します。回答がある場合は、すぐに返されます。それ以外の場合、呼び出しプロセスは、 &lt;code&gt;Node&lt;/code&gt; から応答が到着するまで中断されます。</target>
        </trans-unit>
        <trans-unit id="910d9c8f6c605e2ebc36d8399a34502b524de425" translate="yes" xml:space="preserve">
          <source>Returns the protocol negotiated through ALPN or NPN extensions.</source>
          <target state="translated">ALPNまたはNPN拡張でネゴシエートされたプロトコルを返します。</target>
        </trans-unit>
        <trans-unit id="b755e387a12dca07a6c933ca60eadca3fe83ccc1" translate="yes" xml:space="preserve">
          <source>Returns the random number generator state in an external format. To be used with &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">乱数ジェネレーターの状態を外部形式で返します。 &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt; で使用されます。</target>
        </trans-unit>
        <trans-unit id="3590809b8ac9f39c04bb9426b56ed391a2bbe418" translate="yes" xml:space="preserve">
          <source>Returns the random number state in an external format. To be used with &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">乱数の状態を外部形式で返します。 &lt;code&gt;&lt;a href=&quot;#seed-1&quot;&gt;seed/1&lt;/a&gt;&lt;/code&gt; で使用されます。</target>
        </trans-unit>
        <trans-unit id="b7b10a6898add1d6fde81dfb4f349332aaad68f9" translate="yes" xml:space="preserve">
          <source>Returns the read encoding, or &lt;code&gt;none&lt;/code&gt; if no valid encoding is found.</source>
          <target state="translated">読み取りエンコーディングを返します。有効なエンコーディングが見つから &lt;code&gt;none&lt;/code&gt; 場合は、なしを返します。</target>
        </trans-unit>
        <trans-unit id="be675b48eb569f66a276c6f1557deff36ab74c40" translate="yes" xml:space="preserve">
          <source>Returns the record name and field name/names of a record expression. If &lt;code&gt;Node&lt;/code&gt; has type &lt;code&gt;record_expr&lt;/code&gt;, &lt;code&gt;record_index_expr&lt;/code&gt; or &lt;code&gt;record_access&lt;/code&gt;, a pair &lt;code&gt;{Type, Info}&lt;/code&gt; is returned, otherwise an atom &lt;code&gt;Type&lt;/code&gt; is returned. &lt;code&gt;Type&lt;/code&gt; is the node type of &lt;code&gt;Node&lt;/code&gt;, and &lt;code&gt;Info&lt;/code&gt; depends on &lt;code&gt;Type&lt;/code&gt;, as follows:</source>
          <target state="translated">レコード式のレコード名とフィールド名を返します。場合 &lt;code&gt;Node&lt;/code&gt; タイプ有する &lt;code&gt;record_expr&lt;/code&gt; 、 &lt;code&gt;record_index_expr&lt;/code&gt; 又は &lt;code&gt;record_access&lt;/code&gt; を、対 &lt;code&gt;{Type, Info}&lt;/code&gt; 返され、そうでない原子 &lt;code&gt;Type&lt;/code&gt; 戻されます。 &lt;code&gt;Type&lt;/code&gt; は &lt;code&gt;Node&lt;/code&gt; のノードタイプであり、 &lt;code&gt;Info&lt;/code&gt; は次のように &lt;code&gt;Type&lt;/code&gt; に依存します。</target>
        </trans-unit>
        <trans-unit id="e1c83086703974239395b7bb9dc744f602eb77a1" translate="yes" xml:space="preserve">
          <source>Returns the requested information items about the connection, if they are defined.</source>
          <target state="translated">接続に関する要求された情報項目が定義されている場合は、それを返します。</target>
        </trans-unit>
        <trans-unit id="18d7bc4d6909e7f0305f443f69d1f98beb0f9733" translate="yes" xml:space="preserve">
          <source>Returns the resized driver binary on success. Returns &lt;code&gt;NULL&lt;/code&gt; on failure (out of memory).</source>
          <target state="translated">成功した場合、サイズ変更されたドライババイナリを返します。失敗した場合（メモリ不足）に &lt;code&gt;NULL&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="802f3ed0058e0984ef41ca351845339e93fd6d3f" translate="yes" xml:space="preserve">
          <source>Returns the result of applying &lt;code&gt;Function&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;Args&lt;/code&gt;. The applied function must be exported from &lt;code&gt;Module&lt;/code&gt;. The arity of the function is the length of &lt;code&gt;Args&lt;/code&gt;. Example:</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; in &lt;code&gt;Function&lt;/code&gt; を &lt;code&gt;Args&lt;/code&gt; に適用した結果を返します。適用した関数は &lt;code&gt;Module&lt;/code&gt; からエクスポートする必要があります。関数のアリティは &lt;code&gt;Args&lt;/code&gt; の長さです。例：</target>
        </trans-unit>
        <trans-unit id="5a8b030da557ad21c5d956f96aea50c6ccb4a8b5" translate="yes" xml:space="preserve">
          <source>Returns the result of the latest disk check. &lt;code&gt;Id&lt;/code&gt; is a string that identifies the disk or partition. &lt;code&gt;KByte&lt;/code&gt; is the total size of the disk or partition in kbytes. &lt;code&gt;Capacity&lt;/code&gt; is the percentage of disk space used.</source>
          <target state="translated">最新のディスクチェックの結果を返します。 &lt;code&gt;Id&lt;/code&gt; は、ディスクまたはパーティションを識別する文字列です。 &lt;code&gt;KByte&lt;/code&gt; は、ディスクまたはパーティションの合計サイズ（KB）です。 &lt;code&gt;Capacity&lt;/code&gt; は、使用されているディスク領域の割合です。</target>
        </trans-unit>
        <trans-unit id="08fb64d1fcca474be353d73ce71ec40d76145dbb" translate="yes" xml:space="preserve">
          <source>Returns the result of the latest memory check, where &lt;code&gt;Total&lt;/code&gt; is the total memory size and &lt;code&gt;Allocated&lt;/code&gt; the allocated memory size, in bytes.</source>
          <target state="translated">最新のメモリチェックの結果を返します。ここで、 &lt;code&gt;Total&lt;/code&gt; は合計メモリサイズで、 &lt;code&gt;Allocated&lt;/code&gt; Allocationed Memory Sizeをバイト単位で示します。</target>
        </trans-unit>
        <trans-unit id="b00ec42ba8237ebfadd6315ade14b35bfd08f9e2" translate="yes" xml:space="preserve">
          <source>Returns the results of applying match specification &lt;code&gt;MatchSpec&lt;/code&gt; to all or some objects stored in table &lt;code&gt;Name&lt;/code&gt;. The order of the objects is not specified. For a description of match specifications, see the &lt;code&gt;ERTS User's Guide&lt;/code&gt;.</source>
          <target state="translated">テーブル &lt;code&gt;Name&lt;/code&gt; に格納されているすべてまたは一部のオブジェクトに一致仕様 &lt;code&gt;MatchSpec&lt;/code&gt; を適用した結果を返します。オブジェクトの順序は指定されていません。一致仕様の説明については、「 &lt;code&gt;ERTS User's Guide&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="6efe4481e69930df81a4ee722df788d22bd00f95" translate="yes" xml:space="preserve">
          <source>Returns the results of applying match specification &lt;code&gt;MatchSpec&lt;/code&gt; to some or all objects stored in table &lt;code&gt;Name&lt;/code&gt;. The order of the objects is not specified. For a description of match specifications, see the &lt;code&gt;ERTS User's Guide&lt;/code&gt;.</source>
          <target state="translated">テーブル &lt;code&gt;Name&lt;/code&gt; に格納されている一部またはすべてのオブジェクトに一致仕様 &lt;code&gt;MatchSpec&lt;/code&gt; を適用した結果を返します。オブジェクトの順序は指定されていません。一致仕様の説明については、「 &lt;code&gt;ERTS User's Guide&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="a69f43778418dcd230b6c80b662a5cf2771aac1f" translate="yes" xml:space="preserve">
          <source>Returns the return type subtrees of a &lt;code&gt;function_type&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;function_type&lt;/code&gt; ノードの戻りタイプのサブツリーを戻します。</target>
        </trans-unit>
        <trans-unit id="cb40bb7ee217b76d4a18e20b3dd0e03ef80b7a49" translate="yes" xml:space="preserve">
          <source>Returns the reverse list of the grapheme clusters in &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">書記素クラスタの逆のリストを &lt;code&gt;String&lt;/code&gt; で返します。</target>
        </trans-unit>
        <trans-unit id="26c1c1e09a3dec81e00b7ab0615665b9c61ea7da" translate="yes" xml:space="preserve">
          <source>Returns the right argument subtree of an &lt;code&gt;infix_expr&lt;/code&gt; node.</source>
          <target state="translated">&lt;code&gt;infix_expr&lt;/code&gt; ノードの右引数サブツリーを返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
