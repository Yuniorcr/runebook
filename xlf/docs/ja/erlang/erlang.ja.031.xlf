<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="fc2106dbbf5f859efe242b4f2863fc622702b3ed" translate="yes" xml:space="preserve">
          <source>Opens a NETCONF session as a channel on the given SSH connection, and exchanges hello messages with the server.</source>
          <target state="translated">SSH 接続上で NETCONF セッションをチャネルとして開き、サーバとの間で hello メッセージを交換します。</target>
        </trans-unit>
        <trans-unit id="01cccde2b149248e69a585d60c61c3d13087127c" translate="yes" xml:space="preserve">
          <source>Opens a NETCONF session, but does not send &lt;code&gt;hello&lt;/code&gt;.</source>
          <target state="translated">NETCONFセッションを開きますが、 &lt;code&gt;hello&lt;/code&gt; を送信しません。</target>
        </trans-unit>
        <trans-unit id="45f71db9541f82e0ef4dd81a5e3160d6a9c42345" translate="yes" xml:space="preserve">
          <source>Opens a TLS/DTLS connection to &lt;code&gt;Host&lt;/code&gt;, &lt;code&gt;Port&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; 、 &lt;code&gt;Port&lt;/code&gt; へのTLS / DTLS接続を開きます。</target>
        </trans-unit>
        <trans-unit id="e0e8afe49dad7508484506ff701e53d0d8fc26e0" translate="yes" xml:space="preserve">
          <source>Opens a Telnet connection to the specified target host.</source>
          <target state="translated">指定したターゲットホストへの Telnet 接続を開きます。</target>
        </trans-unit>
        <trans-unit id="863e973e6a31c9261a3ac1a5ee27b4c5d6dfcd10" translate="yes" xml:space="preserve">
          <source>Opens a channel for an SSH session.</source>
          <target state="translated">SSH セッション用のチャンネルを開きます。</target>
        </trans-unit>
        <trans-unit id="f4b954e8567f661fe6c4ddf769bdcc65e25fa9df" translate="yes" xml:space="preserve">
          <source>Opens a channel for an SSH session. The channel id returned from this function is the id used as input to the other functions in this module.</source>
          <target state="translated">SSH セッション用のチャンネルを開きます。この関数から返されるチャネル ID は、このモジュールの他の関数の入力として使用される ID です。</target>
        </trans-unit>
        <trans-unit id="84e8a4380a15d0e1019641a8397c044a4caf2ec5" translate="yes" xml:space="preserve">
          <source>Opens a connection to the database. The connection is associated with the process that created it and can only be accessed through it. This function may spawn new processes to handle the connection. These processes will terminate if the process that created the connection dies or if you call disconnect/1.</source>
          <target state="translated">データベースへの接続を開きます。この接続は、その接続を作成したプロセスに関連付けられており、そのプロセスを介してのみアクセスすることができます。この関数は、接続を処理するための新しいプロセスを生成することがあります。これらのプロセスは、接続を作成したプロセスが死亡した場合、または disconnect/1 を呼び出した場合に終了します。</target>
        </trans-unit>
        <trans-unit id="8a2ca3ab2e6a54c904b5fe348aa46db48f2f0c68" translate="yes" xml:space="preserve">
          <source>Opens a detailed information window on the selected process, including the following:</source>
          <target state="translated">選択したプロセスの詳細情報ウィンドウを開きます。</target>
        </trans-unit>
        <trans-unit id="f750e93585a93a3a78ed2d040624e4bedee5783b" translate="yes" xml:space="preserve">
          <source>Opens a file for preprocessing.</source>
          <target state="translated">前処理のためのファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="0dae8080316d196c81e5e5bd698fc2b46c3bd578" translate="yes" xml:space="preserve">
          <source>Opens a file for read or write access.</source>
          <target state="translated">読み書きアクセスのためにファイルを開きます。</target>
        </trans-unit>
        <trans-unit id="05853d805e8d0a64be6bd32197c1efe7fc8affff" translate="yes" xml:space="preserve">
          <source>Opens a file on the server and returns a handle, which can be used for reading or writing.</source>
          <target state="translated">サーバー上のファイルを開き、ハンドルを返します。</target>
        </trans-unit>
        <trans-unit id="c8cba523b51510605036808e563faed86bad7a34" translate="yes" xml:space="preserve">
          <source>Opens a handle to a directory on the server. The handle can be used for reading directory contents.</source>
          <target state="translated">サーバ上のディレクトリへのハンドルを開きます。このハンドルは、ディレクトリの内容を読み取るために使用することができます。</target>
        </trans-unit>
        <trans-unit id="582c61865473eb0cf103ce22b094eb7d48793963" translate="yes" xml:space="preserve">
          <source>Opens a handle to a tar file on the server, associated with &lt;code&gt;ChannelPid&lt;/code&gt;. The handle can be used for remote tar creation and extraction, as defined by the &lt;code&gt;erl_tar:init/3&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;ChannelPid&lt;/code&gt; に関連付けられた、サーバー上のtarファイルへのハンドルを開きます。このハンドルは、 &lt;code&gt;erl_tar:init/3&lt;/code&gt; 関数で定義されているように、リモートtarの作成と抽出に使用できます。</target>
        </trans-unit>
        <trans-unit id="a2c2e2f345cf2c0d7bffb15b36f80da084528f09" translate="yes" xml:space="preserve">
          <source>Opens a handle to a tar file on the server, associated with &lt;code&gt;ChannelPid&lt;/code&gt;. The handle can be used for remote tar creation and extraction. The actual writing and reading is performed by calls to &lt;code&gt;erl_tar:add/3,4&lt;/code&gt; and &lt;code&gt;erl_tar:extract/2&lt;/code&gt;. Note: The &lt;code&gt;erl_tar:init/3&lt;/code&gt; function should not be called, that one is called by this open_tar function.</source>
          <target state="translated">&lt;code&gt;ChannelPid&lt;/code&gt; に関連付けられたサーバー上のtarファイルへのハンドルを開きます。ハンドルは、リモートタールの作成と抽出に使用できます。実際の書き込みと読み取りは、 &lt;code&gt;erl_tar:add/3,4&lt;/code&gt; および &lt;code&gt;erl_tar:extract/2&lt;/code&gt; の呼び出しによって実行されます。注： &lt;code&gt;erl_tar:init/3&lt;/code&gt; 関数は呼び出さないでください。この関数は、このopen_tar関数によって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="38a016da939f8a64a311d0439e65d9ca62d7e550" translate="yes" xml:space="preserve">
          <source>Opens a named NETCONF session and exchanges &lt;code&gt;hello&lt;/code&gt; messages.</source>
          <target state="translated">名前付きNETCONFセッションを開き、 &lt;code&gt;hello&lt;/code&gt; メッセージを交換します。</target>
        </trans-unit>
        <trans-unit id="6c86f8db1e9c8781949e8303c056c061130288be" translate="yes" xml:space="preserve">
          <source>Opens a named NETCONF session, but does not send &lt;code&gt;hello&lt;/code&gt;.</source>
          <target state="translated">名前付きNETCONFセッションを開きますが、 &lt;code&gt;hello&lt;/code&gt; を送信しません。</target>
        </trans-unit>
        <trans-unit id="ae78d453fdc1ed67800d13633ccdbf6892076735" translate="yes" xml:space="preserve">
          <source>Opens a table. An empty Dets table is created if no file exists.</source>
          <target state="translated">テーブルを開きます。ファイルが存在しない場合、空の Dets テーブルが作成されます。</target>
        </trans-unit>
        <trans-unit id="5b10027bd172d07f8eae36a418eb12d0559fcafd" translate="yes" xml:space="preserve">
          <source>Opens a trace port on each node to be traced. By default, trace messages are written to binary files on remote nodes (the binary trace log).</source>
          <target state="translated">トレースする各ノード上のトレースポートを開きます。デフォルトでは、トレースメッセージはリモートノード上のバイナリファイル(バイナリトレースログ)に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="6a5ff76be69758b5b422a1d897ebb9c5f931b8de" translate="yes" xml:space="preserve">
          <source>Opens a zip archive, and reads and saves its directory. This means that later reading files from the archive is faster than unzipping files one at a time with &lt;code&gt;&lt;a href=&quot;#unzip-1&quot;&gt;unzip/1,2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">zipアーカイブを開き、そのディレクトリを読み取って保存します。これは、後でアーカイブからファイルを読み取る方が、unzip &lt;code&gt;&lt;a href=&quot;#unzip-1&quot;&gt;unzip/1,2&lt;/a&gt;&lt;/code&gt; を使用して一度に1つずつファイルを解凍するよりも高速であることを意味します。</target>
        </trans-unit>
        <trans-unit id="cfb9d8cc25812a80fcde10dfb14baff5e93d3d89" translate="yes" xml:space="preserve">
          <source>Opens a zlib stream.</source>
          <target state="translated">zlibストリームを開きます。</target>
        </trans-unit>
        <trans-unit id="cf71532877f9185120e6ff70251b83955022ad68" translate="yes" xml:space="preserve">
          <source>Opens an FTP connection and fetches a file from the remote host.</source>
          <target state="translated">FTP 接続を開き、リモートホストからファイルを取得します。</target>
        </trans-unit>
        <trans-unit id="0edbf2d8cf836a0928dd1ee04359d15b3360a7a1" translate="yes" xml:space="preserve">
          <source>Opens an FTP connection and sends a file to the remote host.</source>
          <target state="translated">FTP 接続を開き、リモートホストにファイルを送信します。</target>
        </trans-unit>
        <trans-unit id="34a1d5c3e19d27c4c884a326dd68b7ad28a75ae7" translate="yes" xml:space="preserve">
          <source>Opens an FTP connection to the specified node.</source>
          <target state="translated">指定したノードへのFTP接続を開きます。</target>
        </trans-unit>
        <trans-unit id="375e952b3e4358b9086c82fb4e035f4c2d220eed" translate="yes" xml:space="preserve">
          <source>Opens an SSH connection to a NETCONF server.</source>
          <target state="translated">NETCONF サーバへの SSH 接続を開きます。</target>
        </trans-unit>
        <trans-unit id="a16d2119745f4d905dfff9790116b88f38df60dd" translate="yes" xml:space="preserve">
          <source>Opens an SSH or SFTP connection using the information associated with &lt;code&gt;KeyOrName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;KeyOrName&lt;/code&gt; に関連付けられた情報を使用して、SSHまたはSFTP接続を開きます。</target>
        </trans-unit>
        <trans-unit id="39bf3429a9eb17df337807274369a2a1485631e4" translate="yes" xml:space="preserve">
          <source>Opens an TLS/DTLS connection to &lt;code&gt;Host&lt;/code&gt;, &lt;code&gt;Port&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Host&lt;/code&gt; 、 &lt;code&gt;Port&lt;/code&gt; へのTLS / DTLS接続を開きます。</target>
        </trans-unit>
        <trans-unit id="62effb5551d902e97d0967400f135108af21c88b" translate="yes" xml:space="preserve">
          <source>Opens an existing resource type and takes over ownership of all its instances. The supplied destructor &lt;code&gt;dtor&lt;/code&gt; is called both for existing instances and new instances not yet created by the calling NIF library.</source>
          <target state="translated">既存のリソースタイプを開き、そのすべてのインスタンスの所有権を引き継ぎます。提供されているデストラクタ &lt;code&gt;dtor&lt;/code&gt; は、既存のインスタンスと、呼び出し元のNIFライブラリによってまだ作成されていない新しいインスタンスの両方に対して呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9f30c59ec922ffa7f6658907dc759edc40afdb39" translate="yes" xml:space="preserve">
          <source>Opens an existing table. If the table is not properly closed, it is repaired. The returned reference is to be used as the table name. This function is most useful for debugging purposes.</source>
          <target state="translated">既存のテーブルを開きます。テーブルが適切に閉じられていない場合は、修復されます。返された参照は、テーブル名として使用されます。この関数は、デバッグ目的で最も有用です。</target>
        </trans-unit>
        <trans-unit id="6191fa62fa9a2d5758147014b1cebb180f7936ed" translate="yes" xml:space="preserve">
          <source>Opens an interactive Windows console window for the Erlang shell of the service. Automatically disables the &lt;code&gt;StopAction&lt;/code&gt;. A service started with an interactive console window does not survive logouts. &lt;code&gt;OnFail&lt;/code&gt; actions do not work with debug consoles either.</source>
          <target state="translated">サービスのErlangシェルのインタラクティブなWindowsコンソールウィンドウを開きます。 &lt;code&gt;StopAction&lt;/code&gt; を自動的に無効にします。対話型コンソールウィンドウで開始されたサービスは、ログアウト後も存続しません。 &lt;code&gt;OnFail&lt;/code&gt; アクションは、デバッグコンソールでも機能しません。</target>
        </trans-unit>
        <trans-unit id="6b42e9b24605e4d337c32c2f54025481d238a9f0" translate="yes" xml:space="preserve">
          <source>Opens file &lt;code&gt;File&lt;/code&gt; in the mode determined by &lt;code&gt;Modes&lt;/code&gt;, which can contain one or more of the following options:</source>
          <target state="translated">&lt;code&gt;Modes&lt;/code&gt; によって決定されたモードでファイル &lt;code&gt;File&lt;/code&gt; を開きます。このモードには、次のオプションの1つ以上を含めることができます。</target>
        </trans-unit>
        <trans-unit id="f1f250fc2e30dcf740ba52a6778d1bf170664542" translate="yes" xml:space="preserve">
          <source>Opens log file &lt;code&gt;Filename&lt;/code&gt;. Returns &lt;code&gt;ok&lt;/code&gt; if successful, or &lt;code&gt;{error, allready_have_logfile}&lt;/code&gt; if logging to file is already enabled, or an error tuple if another error occurred (for example, if &lt;code&gt;Filename&lt;/code&gt; cannot be opened). The file is opened with encoding UTF-8.</source>
          <target state="translated">ログファイル &lt;code&gt;Filename&lt;/code&gt; を開きます。成功した場合は &lt;code&gt;ok&lt;/code&gt; を、ファイルへのロギングがすでに有効になっている場合は &lt;code&gt;{error, allready_have_logfile}&lt;/code&gt; 、別のエラーが発生した場合（ &lt;code&gt;Filename&lt;/code&gt; を開くことができない場合など）はエラータプルを返します。ファイルはUTF-8エンコードで開かれます。</target>
        </trans-unit>
        <trans-unit id="515b021c218ccf64dc87cfd2e6aafb2c71875e7c" translate="yes" xml:space="preserve">
          <source>Opens the &lt;code&gt;&lt;a href=&quot;#interpret&quot;&gt;Interpret Modules window&lt;/a&gt;&lt;/code&gt;, where new modules to be interpreted can be specified.</source>
          <target state="translated">解釈する新しいモジュールを指定できる[モジュールの &lt;code&gt;&lt;a href=&quot;#interpret&quot;&gt;Interpret Modules window&lt;/a&gt;&lt;/code&gt; 開きます。</target>
        </trans-unit>
        <trans-unit id="9b4d52c05a1dfa015184d5b6d02092d14d75b8e3" translate="yes" xml:space="preserve">
          <source>Opens the registry for reading or writing. The current key is the root (&lt;code&gt;HKEY_CLASSES_ROOT&lt;/code&gt;). Flag &lt;code&gt;read&lt;/code&gt; in the mode list can be omitted.</source>
          <target state="translated">レジストリを読み取りまたは書き込み用に開きます。現在のキーはルート（ &lt;code&gt;HKEY_CLASSES_ROOT&lt;/code&gt; ）です。モードリストで &lt;code&gt;read&lt;/code&gt; フラグは省略できます。</target>
        </trans-unit>
        <trans-unit id="3844a6955eb1488c222cb350aad910d634debf0b" translate="yes" xml:space="preserve">
          <source>Operating system interface</source>
          <target state="translated">オペレーティングシステムのインターフェイス</target>
        </trans-unit>
        <trans-unit id="6ba10933377bd765bd39421a74f86a9f5033cd62" translate="yes" xml:space="preserve">
          <source>Operating system-specific functions.</source>
          <target state="translated">システム固有の機能を操作します。</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="3c9639c2c52d47e5befdf848b84975f48bd5f879" translate="yes" xml:space="preserve">
          <source>Operation &lt;code&gt;&lt;a href=&quot;#kill_session-2&quot;&gt;kill_session/2,3&lt;/a&gt;&lt;/code&gt; can be used to force the release of a lock owned by another NETCONF session. How this is achieved by the server side is implementation-specific.</source>
          <target state="translated">操作 &lt;code&gt;&lt;a href=&quot;#kill_session-2&quot;&gt;kill_session/2,3&lt;/a&gt;&lt;/code&gt; を使用して、別のNETCONFセッションが所有するロックを強制的に解放できます。これがサーバー側でどのように実現されるかは、実装によって異なります。</target>
        </trans-unit>
        <trans-unit id="2fd85be02fe70099570593767a6ed02c554cee82" translate="yes" xml:space="preserve">
          <source>Operations on finite sets and relations represented as sets</source>
          <target state="translated">有限集合と集合で表される関係の操作</target>
        </trans-unit>
        <trans-unit id="d721e6bae341c96a244ef5325ee7783da8aa05da" translate="yes" xml:space="preserve">
          <source>Operator precedence in falling priority:</source>
          <target state="translated">優先順位の低下におけるオペレーターの優先順位。</target>
        </trans-unit>
        <trans-unit id="9ac3210fbaf7aa51089439b718a4799d5b27c2af" translate="yes" xml:space="preserve">
          <source>Option (&lt;code&gt;option()&lt;/code&gt;) details:</source>
          <target state="translated">オプション（ &lt;code&gt;option()&lt;/code&gt; ）の詳細：</target>
        </trans-unit>
        <trans-unit id="7bc4e2bf65691f392e0c6aef8849b96e3503d3f9" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;+d&lt;/code&gt; instructs the emulator to produce only a core dump and no crash dump if an internal error is detected.</source>
          <target state="translated">オプション &lt;code&gt;+d&lt;/code&gt; は、内部エラーが検出された場合、コアダンプのみを生成し、クラッシュダンプは生成しないようにエミュレーターに指示します。</target>
        </trans-unit>
        <trans-unit id="9cc73ba20b77152d175148d97de55bb048d9c415" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;Encoding&lt;/code&gt; is used for selecting which integer lists to be considered as strings. The default is to use the encoding returned by function &lt;code&gt;&lt;a href=&quot;epp#default_encoding-0&quot;&gt; epp:default_encoding/0&lt;/a&gt;&lt;/code&gt;. Value &lt;code&gt;none&lt;/code&gt; means that no integer lists are considered as strings. &lt;code&gt;encoding_func()&lt;/code&gt; is called with one integer of a list at a time; if it returns &lt;code&gt;true&lt;/code&gt; for every integer, the list is considered a string.</source>
          <target state="translated">オプション &lt;code&gt;Encoding&lt;/code&gt; は、文字列と見なされる整数リストを選択するために使用されます。デフォルトでは、関数 &lt;code&gt;&lt;a href=&quot;epp#default_encoding-0&quot;&gt; epp:default_encoding/0&lt;/a&gt;&lt;/code&gt; によって返されるエンコーディングを使用します。値 &lt;code&gt;none&lt;/code&gt; は、整数リストが文字列と見なされないことを意味します。 &lt;code&gt;encoding_func()&lt;/code&gt; は、一度に1つのリストの整数で呼び出されます。すべての整数に対して &lt;code&gt;true&lt;/code&gt; を返す場合、リストは文字列と見なされます。</target>
        </trans-unit>
        <trans-unit id="617924dbd7f61aaccfafefec23e2e5c27276a861" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;Encoding&lt;/code&gt; is used for selecting which integer lists to be considered as strings. The default is to use the encoding returned by function &lt;code&gt;&lt;a href=&quot;epp#default_encoding-0&quot;&gt;epp:default_encoding/0&lt;/a&gt;&lt;/code&gt;. Value &lt;code&gt;none&lt;/code&gt; means that no integer lists are considered as strings. &lt;code&gt;encoding_func()&lt;/code&gt; is called with one integer of a list at a time; if it returns &lt;code&gt;true&lt;/code&gt; for every integer, the list is considered a string.</source>
          <target state="translated">オプション &lt;code&gt;Encoding&lt;/code&gt; は、文字列と見なされる整数リストを選択するために使用されます。デフォルトでは、関数 &lt;code&gt;&lt;a href=&quot;epp#default_encoding-0&quot;&gt;epp:default_encoding/0&lt;/a&gt;&lt;/code&gt; によって返されるエンコーディングを使用します。値 &lt;code&gt;none&lt;/code&gt; は、整数リストが文字列と見なされないことを意味します。 &lt;code&gt;encoding_func()&lt;/code&gt; は、一度に1つの整数のリストで呼び出されます。すべての整数に対して &lt;code&gt;true&lt;/code&gt; を返す場合、リストは文字列と見なされます。</target>
        </trans-unit>
        <trans-unit id="03b58ec642c1d6975a7cca9e9e0680f47eecc590" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;Format&lt;/code&gt; determines the function that is applied to binaries to create the terms to be sorted. Defaults to &lt;code&gt;binary_term&lt;/code&gt;, which is equivalent to &lt;code&gt;fun&amp;nbsp;binary_to_term/1&lt;/code&gt;. Value &lt;code&gt;binary&lt;/code&gt; is equivalent to &lt;code&gt;fun(X) -&amp;gt; X end&lt;/code&gt;, which means that the binaries are sorted as they are. This is the fastest format. If &lt;code&gt;Format&lt;/code&gt; is &lt;code&gt;term&lt;/code&gt;, &lt;code&gt;io:read/2&lt;/code&gt; is called to read terms. In that case, only the default value of option &lt;code&gt;header&lt;/code&gt; is allowed.</source>
          <target state="translated">オプション &lt;code&gt;Format&lt;/code&gt; は、ソートする用語を作成するためにバイナリに適用される関数を決定します。デフォルトは &lt;code&gt;binary_term&lt;/code&gt; で、これは &lt;code&gt;fun&amp;nbsp;binary_to_term/1&lt;/code&gt; と同等です。値の &lt;code&gt;binary&lt;/code&gt; は &lt;code&gt;fun(X) -&amp;gt; X end&lt;/code&gt; と同等です。つまり、バイナリはそのままの形でソートされます。これは最速のフォーマットです。 &lt;code&gt;Format&lt;/code&gt; が &lt;code&gt;term&lt;/code&gt; の場合、用語を &lt;code&gt;io:read/2&lt;/code&gt; ためにio：read / 2が呼び出されます。その場合、オプション &lt;code&gt;header&lt;/code&gt; デフォルト値のみが許可されます。</target>
        </trans-unit>
        <trans-unit id="515640376a1e84c5e88279e98275326333b1e883" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;Line&lt;/code&gt; is the line to be assigned to each node of &lt;code&gt;AbsTerm&lt;/code&gt;.</source>
          <target state="translated">Option &lt;code&gt;Line&lt;/code&gt; は、 &lt;code&gt;AbsTerm&lt;/code&gt; の各ノードに割り当てられるラインです。</target>
        </trans-unit>
        <trans-unit id="ba8fe57baa6137f1e318cb3833968d8989a57f43" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;accept&lt;/code&gt; specifies remote addresses for a listening transport and is not valid for a connecting transport. If specified, a remote address that does not match one of the specified addresses causes the association to be aborted. Multiple &lt;code&gt;accept&lt;/code&gt; options can be specified. A string-valued &lt;code&gt;Match&lt;/code&gt; that does not parse as an address is interpreted as a regular expression.</source>
          <target state="translated">オプション &lt;code&gt;accept&lt;/code&gt; は、リスニングトランスポートのリモートアドレスを指定し、接続トランスポートには無効です。指定した場合、指定したアドレスのいずれとも一致しないリモートアドレスにより、関連付けが中止されます。複数の &lt;code&gt;accept&lt;/code&gt; オプションを指定できます。アドレスとして解析されない文字列値の &lt;code&gt;Match&lt;/code&gt; は、正規表現として解釈されます。</target>
        </trans-unit>
        <trans-unit id="37bd8dc1b650be1a6635cb23b4502d2226d11576" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;accept&lt;/code&gt; specifies remote addresses for a listening transport and is not valid for a connecting transport. If specified, a remote address that does not match one of the specified addresses causes the connection to be aborted. Multiple &lt;code&gt;accept&lt;/code&gt; options can be specified. A string-valued &lt;code&gt;Match&lt;/code&gt; that does not parse as an address is interpreted as a regular expression.</source>
          <target state="translated">オプション &lt;code&gt;accept&lt;/code&gt; は、リスニングトランスポートのリモートアドレスを指定し、接続トランスポートには無効です。指定した場合、指定したアドレスのいずれとも一致しないリモートアドレスにより、接続が中止されます。複数の &lt;code&gt;accept&lt;/code&gt; オプションを指定できます。アドレスとして解析されない文字列値の &lt;code&gt;Match&lt;/code&gt; は、正規表現として解釈されます。</target>
        </trans-unit>
        <trans-unit id="1f55894395584bb9a3e02eafbec27ef2e407d6b9" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;allow_passive_connect&lt;/code&gt; is used internally and is seldom needed in applications where the network topology and the Kernel options in effect are known in advance.</source>
          <target state="translated">オプション &lt;code&gt;allow_passive_connect&lt;/code&gt; は内部で使用され、ネットワークトポロジと有効なカーネルオプションが事前にわかっているアプリケーションではほとんど必要ありません。</target>
        </trans-unit>
        <trans-unit id="1a76c912018b3dd2b854bd85ee5b0c4b94ebb022" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;c&lt;/code&gt; makes &lt;code&gt;Ctrl-C&lt;/code&gt; interrupt the current shell instead of invoking the emulator break handler. Option &lt;code&gt;d&lt;/code&gt; (same as specifying &lt;code&gt;+B&lt;/code&gt; without an extra option) disables the break handler. Option &lt;code&gt;i&lt;/code&gt; makes the emulator ignore any break signal.</source>
          <target state="translated">オプション &lt;code&gt;c&lt;/code&gt; は、エミュレータのブレークハンドラを呼び出す代わりに、 &lt;code&gt;Ctrl-C&lt;/code&gt; で現在のシェルを中断します。オプション &lt;code&gt;d&lt;/code&gt; （追加オプションなしで &lt;code&gt;+B&lt;/code&gt; を指定するのと同じ）は、ブレークハンドラーを無効にします。オプション &lt;code&gt;i&lt;/code&gt; は、エミュレータにブレーク信号を無視させます。</target>
        </trans-unit>
        <trans-unit id="326d67c6dd06e800f8ccc7205a53b4bad41af409" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;cache&lt;/code&gt; has no effect if it is known that the QLC is to be evaluated at most once. This is always true for the top-most QLC and also for the list expression of the first generator in a list of qualifiers. Notice that in the presence of side effects in filters or callback functions, the answers to QLCs can be affected by option &lt;code&gt;cache&lt;/code&gt;.</source>
          <target state="translated">QLCが最大で1回評価されることがわかっている場合、オプション &lt;code&gt;cache&lt;/code&gt; は効果がありません。これは、最上位のQLCと、修飾子のリストの最初のジェネレーターのリスト式にも常に当てはまります。フィルターまたはコールバック関数に副作用がある場合、QLCへの回答はオプション &lt;code&gt;cache&lt;/code&gt; 影響を受ける可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c7d8de2a211bf879bd6b340617eed0c81c43b5ad" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;cache_all&lt;/code&gt; can be set to &lt;code&gt;ets&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt; when evaluating a query. It adds a &lt;code&gt;cache&lt;/code&gt; or &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt; option to every list expression except QLC tables and lists on all levels of the query. This can be used for testing if caching would improve efficiency at all. If the answer is yes, further testing is needed to pinpoint the generators that are to be cached.</source>
          <target state="translated">オプション &lt;code&gt;cache_all&lt;/code&gt; は、クエリを評価するときに &lt;code&gt;ets&lt;/code&gt; または &lt;code&gt;list&lt;/code&gt; に設定できます。クエリのすべてのレベルのQLCテーブルとリストを除くすべてのリスト式に、 &lt;code&gt;cache&lt;/code&gt; または &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt; オプションを追加します。これは、キャッシュによって効率が向上するかどうかをテストするために使用できます。答えが「はい」の場合、キャッシュされるジェネレーターを特定するために、さらにテストが必要です。</target>
        </trans-unit>
        <trans-unit id="7a829489a7a9e56e844e391961dfa203573e6326" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;capability&lt;/code&gt; specifies the content of a corresponding element in an outgoing hello message, each option specifying the content of a single element. If no base NETCONF capability is configured then the RFC 4741 1.0 capability, &quot;urn:ietf:params:netconf:base:1.0&quot;, is added, otherwise not. In particular, the RFC 6241 1.1 capability must be explicitly configured. NETCONF capabilities can be specified using the shorthand notation defined in RFC 6241, any capability string starting with a colon being prefixed by either &quot;urn:ietf:params:netconf&quot; or &quot;urn:ietf:params:netconf:capability&quot;, as appropriate.</source>
          <target state="translated">オプション &lt;code&gt;capability&lt;/code&gt; は、発信helloメッセージ内の対応する要素の内容を指定し、各オプションは単一の要素の内容を指定します。基本NETCONF機能が設定されていない場合は、RFC 4741 1.0機能「urn：ietf：params：netconf：base：1.0」が追加されます。それ以外の場合は追加されません。特に、RFC 62411.1機能を明示的に構成する必要があります。 NETCONF機能は、RFC 6241で定義されている省略表記を使用して指定できます。コロンで始まる機能文字列には、必要に応じて「urn：ietf：params：netconf」または「urn：ietf：params：netconf：capability」のいずれかをプレフィックスとして付けます。</target>
        </trans-unit>
        <trans-unit id="8f4c8cddaf80a90f873230e5b6a5e7a3ad8af338" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;compile_source&lt;/code&gt; only affects the result if the escript contains &lt;code&gt;source&lt;/code&gt; code. In this case the Erlang code is automatically compiled and &lt;code&gt;{source, BeamCode}&lt;/code&gt; is returned instead of &lt;code&gt;{source, SourceCode}&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;compile_source&lt;/code&gt; は、escriptに &lt;code&gt;source&lt;/code&gt; コードが含まれている場合にのみ結果に影響します。この場合、Erlangコードは自動的にコンパイルされ、 &lt;code&gt;{source, SourceCode}&lt;/code&gt; ではなく &lt;code&gt;{source, BeamCode}&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="4ac2c8d2a46b7ed6d2b62afd37f0558c267adb74" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;debug_info&lt;/code&gt; can be specified to the Compiler (see &lt;code&gt;compile(3)&lt;/code&gt;) to have debug information, such as &lt;code&gt;Erlang Abstract Format&lt;/code&gt;, stored in the &lt;code&gt;debug_info&lt;/code&gt; chunk. Tools such as Debugger and Xref require the debug information to be included.</source>
          <target state="translated">オプション &lt;code&gt;debug_info&lt;/code&gt; をコンパイラー（ &lt;code&gt;compile(3)&lt;/code&gt; を参照）に指定して、 &lt;code&gt;Erlang Abstract Format&lt;/code&gt; などのデバッグ情報を &lt;code&gt;debug_info&lt;/code&gt; チャンクに保管できます。DebuggerやXrefなどのツールには、デバッグ情報を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="bceef863ec9665aec5cef62d9d27d0ce6ab12ecb" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;debug_info&lt;/code&gt; causes &lt;strong&gt;debug information&lt;/strong&gt; or &lt;strong&gt;abstract code&lt;/strong&gt; to be added to the &lt;code&gt;.beam&lt;/code&gt; file. This increases the file size and makes it possible to reconstruct the source code. It is therefore recommended not to include debug information in code aimed for target systems.</source>
          <target state="translated">オプション &lt;code&gt;debug_info&lt;/code&gt; を使用すると、&lt;strong&gt;デバッグ情報&lt;/strong&gt;または&lt;strong&gt;抽象コード&lt;/strong&gt;が &lt;code&gt;.beam&lt;/code&gt; ファイルに追加されます。これによりファイルサイズが増加し、ソースコードを再構築することが可能になります。したがって、ターゲットシステム向けのコードにデバッグ情報を含めないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="769f8dc6e95ee290900e92345b3ad7fa81275ab3" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;extended_info&lt;/code&gt; specifies what extra information is written to the table dump:</source>
          <target state="translated">オプション &lt;code&gt;extended_info&lt;/code&gt; は、テーブルダンプに書き込まれる追加情報を指定します。</target>
        </trans-unit>
        <trans-unit id="7392a715b1ab5247b835edd88a64118c85b3ed71" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;format&lt;/code&gt; also determines what is written to the sorted output file: if &lt;code&gt;Format&lt;/code&gt; is &lt;code&gt;term&lt;/code&gt;, then &lt;code&gt;io:format/3&lt;/code&gt; is called to write each term, otherwise the binary prefixed by a header is written. Notice that the binary written is the same binary that was read; the results of applying function &lt;code&gt;Format&lt;/code&gt; are thrown away when the terms have been sorted. Reading and writing terms using the &lt;code&gt;io&lt;/code&gt; module is much slower than reading and writing binaries.</source>
          <target state="translated">オプションの &lt;code&gt;format&lt;/code&gt; また、ソートされた出力ファイルに書き込まれるかを決定する：場合 &lt;code&gt;Format&lt;/code&gt; である &lt;code&gt;term&lt;/code&gt; は、 &lt;code&gt;io:format/3&lt;/code&gt; 各用語を書き込むために呼び出され、そうでなければヘッダが付けバイナリが書き込まれます。書き込まれたバイナリは、読み取られたバイナリと同じであることに注意してください。用語がソートされると、関数 &lt;code&gt;Format&lt;/code&gt; を適用した結果は破棄されます。 &lt;code&gt;io&lt;/code&gt; モジュールを使用した用語の読み取りと書き込みは、バイナリの読み取りと書き込みよりもはるかに低速です。</target>
        </trans-unit>
        <trans-unit id="c6b86819a94a42b6a35f9a5c83dd920e56cafa28" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;fragment_timer&lt;/code&gt; specifies the timeout, in milliseconds, of a timer used to flush messages from the incoming byte stream even if the number of bytes indicated in the Message Length field of its Diameter Header have not yet been accumulated: such a message is received over the transport interface after two successive timeouts without the reception of additional bytes. Defaults to 1000.</source>
          <target state="translated">オプションの &lt;code&gt;fragment_timer&lt;/code&gt; は、Diameterヘッダーのメッセージ長フィールドに示されたバイト数がまだ蓄積されていない場合でも、着信バイトストリームからメッセージをフラッシュするために使用されるタイマーのタイムアウトをミリ秒単位で指定します。このようなメッセージは、追加のバイトを受信せずに2回連続してタイムアウトした後のトランスポートインターフェイス。デフォルトは1000です。</target>
        </trans-unit>
        <trans-unit id="ed047187b33ff5a36de976c2d7f174208794b18a" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;fullsweep_after&lt;/code&gt; makes it possible to specify the maximum number of generational collections before forcing a fullsweep, even if there is room on the old heap. Setting the number to zero disables the general collection algorithm, that is, all live data is copied at every garbage collection.</source>
          <target state="translated">オプション &lt;code&gt;fullsweep_after&lt;/code&gt; を使用すると、古いヒープに空きがある場合でも、フルスイープを強制する前の世代別コレクションの最大数を指定できます。数値をゼロに設定すると、一般的な収集アルゴリズムが無効になります。つまり、すべてのライブデータがガベージコレクションごとにコピーされます。</target>
        </trans-unit>
        <trans-unit id="ecaf25cf5459dfb31ebf85a2facfaa8a1ab4324e" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;hosts&lt;/code&gt; has no effect if &lt;code&gt;log_type&lt;/code&gt; is set to &lt;code&gt;html&lt;/code&gt; or &lt;code&gt;silent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;log_type&lt;/code&gt; が &lt;code&gt;html&lt;/code&gt; または &lt;code&gt;silent&lt;/code&gt; に設定されている場合、オプション &lt;code&gt;hosts&lt;/code&gt; は効果がありません。</target>
        </trans-unit>
        <trans-unit id="64143a1b2e482aa0e161fd7b97567d3f14883e09" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;in_comment_only&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; by default, which is correct for Erlang source files. If set to &lt;code&gt;false&lt;/code&gt;, the encoding string does not necessarily have to occur in a comment.</source>
          <target state="translated">オプション &lt;code&gt;in_comment_only&lt;/code&gt; はデフォルトで &lt;code&gt;true&lt;/code&gt; であり、これはErlangソースファイルに適しています。 &lt;code&gt;false&lt;/code&gt; に設定した場合、エンコーディング文字列は必ずしもコメント内にある必要はありません。</target>
        </trans-unit>
        <trans-unit id="ebc5aecdab80e23de01ab20e75171559f54d5713" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;inet6&lt;/code&gt; has no effect on this function. You probably want to use &lt;code&gt;Type = a | aaaa&lt;/code&gt; instead.</source>
          <target state="translated">オプション &lt;code&gt;inet6&lt;/code&gt; はこの機能に影響を与えません。 &lt;code&gt;Type = a | aaaa&lt;/code&gt; を使用したいと思うでしょう。代わりにaaaa。</target>
        </trans-unit>
        <trans-unit id="8ca5f10fb139927f4989778fe340ba3f7bdbce64" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;ipv6_host_with_bracket&lt;/code&gt; deals with how to parse IPv6 addresses. For details, see argument &lt;code&gt;Options&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;#request-4&quot;&gt;request/[4,5]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;ipv6_host_with_bracket&lt;/code&gt; は、IPv6アドレスを解析する方法を扱います。詳細については、 &lt;code&gt;&lt;a href=&quot;#request-4&quot;&gt;request/[4,5]&lt;/a&gt;&lt;/code&gt; の引数 &lt;code&gt;Options&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="29e3299985763e8c1fce58b82fc31709b15fd60b" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;join&lt;/code&gt; can be used to force the &lt;code&gt;qlc&lt;/code&gt; module to use a certain join method. For the rest of this section it is assumed that the excessively slow join method called &quot;nested loop&quot; has been chosen:</source>
          <target state="translated">オプションの &lt;code&gt;join&lt;/code&gt; を使用して、 &lt;code&gt;qlc&lt;/code&gt; モジュールに特定の結合方法を強制的に使用させることができます。このセクションの残りの部分では、「ネストされたループ」と呼ばれる非常に遅い結合方法が選択されていると想定しています。</target>
        </trans-unit>
        <trans-unit id="895c90440d351c3b981bbc05eca735daa09f36b0" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;join&lt;/code&gt; does not imply that the test terms are merged, only that all tests are executed in one single test run.</source>
          <target state="translated">オプション &lt;code&gt;join&lt;/code&gt; は、テスト用語がマージされることを意味するのではなく、すべてのテストが1回のテスト実行で実行されることだけを意味します。</target>
        </trans-unit>
        <trans-unit id="176adb220c5fcd1ac1d87552301af2b1ded87f73" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;line_length&lt;/code&gt; also applies to &lt;code&gt;http*&lt;/code&gt; packet types as an alias for option &lt;code&gt;packet_size&lt;/code&gt; if &lt;code&gt;packet_size&lt;/code&gt; itself is not set. This use is only intended for backward compatibility.</source>
          <target state="translated">オプション &lt;code&gt;line_length&lt;/code&gt; はまたに適用され &lt;code&gt;http*&lt;/code&gt; オプションの別名として、パケットタイプ &lt;code&gt;packet_size&lt;/code&gt; 場合 &lt;code&gt;packet_size&lt;/code&gt; 自体はセットではありません。この使用は、下位互換性のみを目的としています。</target>
        </trans-unit>
        <trans-unit id="9ab41e9f6eb5eab4065b30a808546e5a4a2b51e9" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;message_cb&lt;/code&gt; specifies a callback that is invoked on incoming and outgoing messages, that can be used to implement flow control. It is applied to two arguments: an atom indicating the reason for the callback (&lt;code&gt;send&lt;/code&gt;, &lt;code&gt;recv&lt;/code&gt;, or &lt;code&gt;ack&lt;/code&gt; after a completed send), and the message in question (binary() on &lt;code&gt;recv&lt;/code&gt;, binary() or diameter_packet record on &lt;code&gt;send&lt;/code&gt; or &lt;code&gt;ack&lt;/code&gt;, or &lt;code&gt;false&lt;/code&gt; on &lt;code&gt;ack&lt;/code&gt; when an incoming request has been discarded). It should return a list of actions and a new callback as tail; eg. &lt;code&gt;[fun cb/3, State]&lt;/code&gt;. Valid actions are the atoms &lt;code&gt;send&lt;/code&gt; or &lt;code&gt;recv&lt;/code&gt;, to cause a following message-valued action to be sent/received, a message to send/receive (binary() or diameter_packet record), or a boolean() to enable/disable reading on the socket. More than one &lt;code&gt;send&lt;/code&gt;/&lt;code&gt;recv&lt;/code&gt;/message sequence can be returned from the same callback, and an initial &lt;code&gt;send&lt;/code&gt;/&lt;code&gt;recv&lt;/code&gt; can be omitted if the same as the value passed as the callback's first argument. Reading is initially enabled, and returning &lt;code&gt;false&lt;/code&gt; does not imply there cannot be subsequent &lt;code&gt;recv&lt;/code&gt; callbacks since messages may already have been read. An empty tail is equivalent to the prevailing callback. Defaults to a callback equivalent to &lt;code&gt;fun(ack, _) -&amp;gt; []; (_, Msg) -&amp;gt; [Msg] end&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;message_cb&lt;/code&gt; は、着信および発信メッセージで呼び出されるコールバックを指定します。これを使用して、フロー制御を実装できます。これは、2つの引数に適用されます。コールバックの理由を示すアトム（ &lt;code&gt;send&lt;/code&gt; が完了した後のsend、 &lt;code&gt;recv&lt;/code&gt; 、または &lt;code&gt;ack&lt;/code&gt; ）、および問題のメッセージ（ &lt;code&gt;recv&lt;/code&gt; のバイナリ（）、binary（）、または &lt;code&gt;send&lt;/code&gt; または &lt;code&gt;ack&lt;/code&gt; の diameter_packetレコード）、または &lt;code&gt;false&lt;/code&gt; の &lt;code&gt;ack&lt;/code&gt; の着信要求が破棄されています）。アクションのリストと新しいコールバックをテールとして返す必要があります。例えば。 &lt;code&gt;[fun cb/3, State]&lt;/code&gt; 。有効なアクションは、アトム &lt;code&gt;send&lt;/code&gt; または &lt;code&gt;recv&lt;/code&gt; 、次のメッセージ値のアクションを送受信するには、メッセージを送受信（binary（）またはdiameter_packetレコード）、またはブール値（）を使用してソケットの読み取りを有効または無効にします。同じコールバックから複数の &lt;code&gt;send&lt;/code&gt; / &lt;code&gt;recv&lt;/code&gt; / messageシーケンスを返すことができ、コールバックの最初の引数として渡された値と同じ場合、最初の &lt;code&gt;send&lt;/code&gt; / &lt;code&gt;recv&lt;/code&gt; を省略できます。最初は読み取りが有効になっていて、 &lt;code&gt;false&lt;/code&gt; を返すことは、メッセージが既に読み取られている可能性があるため、後続の &lt;code&gt;recv&lt;/code&gt; コールバックがないことを意味しません。空の尾は、一般的なコールバックと同等です。デフォルトは &lt;code&gt;fun(ack, _) -&amp;gt; []; (_, Msg) -&amp;gt; [Msg] end&lt;/code&gt; と同等のコールバックです。 （_、Msg）-&amp;gt; [Msg] end。</target>
        </trans-unit>
        <trans-unit id="b8d5b9882df46cf953f258565ab460a21016ddc5" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;monitor&lt;/code&gt; is not supported by &lt;code&gt;spawn_opt/5&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;monitor&lt;/code&gt; は &lt;code&gt;spawn_opt/5&lt;/code&gt; でサポートされていません。</target>
        </trans-unit>
        <trans-unit id="058fcf7970e7469cb0bc642aad1ff0a1a179cc45" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;multicast_ttl&lt;/code&gt; changes the time-to-live (TTL) for outgoing multicast datagrams to control the scope of the multicasts.</source>
          <target state="translated">オプション &lt;code&gt;multicast_ttl&lt;/code&gt; は、マルチキャストのスコープを制御するために、発信マルチキャストデータグラムの存続時間（TTL）を変更します。</target>
        </trans-unit>
        <trans-unit id="369ac162beffd61017f1f26b4498fc999c7935c0" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;packet&lt;/code&gt; determines how/if an incoming message is packaged into a diameter_packet record. If &lt;code&gt;false&lt;/code&gt; then messages are received as binary(). If &lt;code&gt;true&lt;/code&gt; then as a record with the binary() message in the &lt;code&gt;bin&lt;/code&gt; field and a &lt;code&gt;{stream, Id}&lt;/code&gt; tuple in the &lt;code&gt;transport_data&lt;/code&gt; field, where &lt;code&gt;Id&lt;/code&gt; is the identifier of the inbound stream the message was received on. If &lt;code&gt;raw&lt;/code&gt; then as a record with the received ancillary sctp_sndrcvinfo record in the &lt;code&gt;transport_data&lt;/code&gt; field. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;packet&lt;/code&gt; は、着信メッセージがdiameter_packetレコードにパッケージ化される方法/かどうかを決定します。 &lt;code&gt;false&lt;/code&gt; の場合、メッセージはbinary（）として受信されます。 &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;bin&lt;/code&gt; フィールドにbinary（）メッセージがあり、 &lt;code&gt;transport_data&lt;/code&gt; フィールドに &lt;code&gt;{stream, Id}&lt;/code&gt; タプルがあるレコードとして &lt;code&gt;Id&lt;/code&gt; は、メッセージが受信されたインバウンドストリームの識別子です。 &lt;code&gt;raw&lt;/code&gt; の場合、 &lt;code&gt;transport_data&lt;/code&gt; フィールドに受信した補助的なsctp_sndrcvinfoレコードを持つレコードとして。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0baa94c523937f7abe156cc0676d6a21aa0601f3" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;pending_driver&lt;/code&gt; is of little use, but is present for completeness, as it is well defined which reload options that can give rise to which delays. However, it can be a good idea to use the same &lt;code&gt;MonitorOption&lt;/code&gt; as the &lt;code&gt;ReloadOption&lt;/code&gt;, if present.</source>
          <target state="translated">オプション &lt;code&gt;pending_driver&lt;/code&gt; はほとんど役に立ちませんが、どのリロードオプションがどの遅延を引き起こす可能性があるかが明確に定義されているため、完全を期すために存在しています。しかし、同じ使用することをお勧めすることができ &lt;code&gt;MonitorOption&lt;/code&gt; 通り &lt;code&gt;ReloadOption&lt;/code&gt; 存在する場合、。</target>
        </trans-unit>
        <trans-unit id="b9556e70d4bac7e47023b3e6de8358a32c614234" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;persistent&lt;/code&gt; can be set to &lt;code&gt;true&lt;/code&gt; to guarantee that parameters set with &lt;code&gt;set_env/2&lt;/code&gt; are not overridden by those defined in the application resource file on load. This means that persistent values will stick after the application is loaded and also on application reload.</source>
          <target state="translated">オプション &lt;code&gt;persistent&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定すると、 &lt;code&gt;set_env/2&lt;/code&gt; で設定されたパラメーターが、ロード時にアプリケーションリソースファイルで定義されたパラメーターによって上書きされないことが保証されます。これは、アプリケーションがロードされた後、およびアプリケーションのリロード時に永続的な値が保持されることを意味します。</target>
        </trans-unit>
        <trans-unit id="f5cff995931880f38d32793bedddc8696fd39abc" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;persistent&lt;/code&gt; can be set to &lt;code&gt;true&lt;/code&gt; to guarantee that parameters set with &lt;code&gt;set_env/4&lt;/code&gt; are not overridden by those defined in the application resource file on load. This means that persistent values will stick after the application is loaded and also on application reload.</source>
          <target state="translated">オプション &lt;code&gt;persistent&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定して、 &lt;code&gt;set_env/4&lt;/code&gt; で設定されたパラメーターが、ロード時にアプリケーションリソースファイルで定義されたパラメーターによって上書きされないようにすることができます。これは、アプリケーションが読み込まれた後、およびアプリケーションの再読み込み時に永続的な値が残ることを意味します。</target>
        </trans-unit>
        <trans-unit id="9c0c34736e937a0d6bddb3baef2d644165d26b6e" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;progress&lt;/code&gt; is intended to be used by applications that want to create some type of progress report, such as a progress bar in a GUI. Default for the progress option is &lt;code&gt;ignore&lt;/code&gt;, that is, the option is not used. When the progress option is specified, the following happens when &lt;code&gt;ftp:send/[3,4]&lt;/code&gt; or &lt;code&gt;ftp:recv/[3,4]&lt;/code&gt; are called:</source>
          <target state="translated">オプション &lt;code&gt;progress&lt;/code&gt; は、GUIのプログレスバーなど、ある種のプログレスレポートを作成するアプリケーションで使用することを目的としています。progressオプションのデフォルトは &lt;code&gt;ignore&lt;/code&gt; です。つまり、このオプションは使用されません。progressオプションが指定されている場合、 &lt;code&gt;ftp:send/[3,4]&lt;/code&gt; または &lt;code&gt;ftp:recv/[3,4]&lt;/code&gt; が呼び出されると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="dbc0c804ab6c1e7a5b640a84e147efe8c10f9c09" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;read_concurrency&lt;/code&gt; can be combined with option &lt;code&gt;&lt;a href=&quot;#new_2_write_concurrency&quot;&gt; write_concurrency&lt;/a&gt;&lt;/code&gt;. You typically want to combine these when large concurrent read bursts and large concurrent write bursts are common.</source>
          <target state="translated">オプション &lt;code&gt;read_concurrency&lt;/code&gt; は、オプション &lt;code&gt;&lt;a href=&quot;#new_2_write_concurrency&quot;&gt; write_concurrency&lt;/a&gt;&lt;/code&gt; と組み合わせることができます。通常、大規模な同時読み取りバーストと大規模な同時書き込みバーストが一般的である場合は、これらを組み合わせる必要があります。</target>
        </trans-unit>
        <trans-unit id="121fc2ac086a7c8d8d3e29d994b8f84bb924c24b" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;read_concurrency&lt;/code&gt; can be combined with option &lt;code&gt;&lt;a href=&quot;#new_2_write_concurrency&quot;&gt;write_concurrency&lt;/a&gt;&lt;/code&gt;. You typically want to combine these when large concurrent read bursts and large concurrent write bursts are common.</source>
          <target state="translated">オプション &lt;code&gt;read_concurrency&lt;/code&gt; は、オプション &lt;code&gt;&lt;a href=&quot;#new_2_write_concurrency&quot;&gt;write_concurrency&lt;/a&gt;&lt;/code&gt; と組み合わせることができます。大規模な同時読み取りバーストと大規模な同時書き込みバーストが一般的である場合は、通常これらを組み合わせます。</target>
        </trans-unit>
        <trans-unit id="ce25f3241dc3da9e62005bbb6632271b6187acc5" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;repair&lt;/code&gt; is ignored if the table is already open.</source>
          <target state="translated">テーブルが既に開いている場合、オプションの &lt;code&gt;repair&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="cebc9a26a2692e09f8edba6efb06adb14bf3202b" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;report_errors&lt;/code&gt; adds the possibility that an error tuple is returned. The tuple either indicates a matching error (&lt;code&gt;match_limit&lt;/code&gt; or &lt;code&gt;match_limit_recursion&lt;/code&gt;), or a compilation error, where the error tuple has the format &lt;code&gt;{error, {compile, CompileErr}}&lt;/code&gt;. Notice that if option &lt;code&gt;report_errors&lt;/code&gt; is not specified, the function never returns error tuples, but reports compilation errors as a &lt;code&gt;badarg&lt;/code&gt; exception and failed matches because of exceeded match limits simply as &lt;code&gt;nomatch&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;report_errors&lt;/code&gt; は、エラータプルが返される可能性を追加します。タプルは、一致エラー（ &lt;code&gt;match_limit&lt;/code&gt; または &lt;code&gt;match_limit_recursion&lt;/code&gt; ）またはコンパイルエラーを示します。エラータプルの形式は &lt;code&gt;{error, {compile, CompileErr}}&lt;/code&gt; です。オプション &lt;code&gt;report_errors&lt;/code&gt; が指定されていない場合、関数はエラータプルを返すことはありませんが、コンパイルエラーを &lt;code&gt;badarg&lt;/code&gt; 例外として報告し、一致制限を超えたために一致が失敗したことを単に &lt;code&gt;nomatch&lt;/code&gt; として報告します。</target>
        </trans-unit>
        <trans-unit id="4fc492ec1e8bbd2f982156bf23c1f5fcad8e8282" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;sender&lt;/code&gt; specifies whether or not to use a dedicated process for sending outgoing messages, which avoids the possibility of send blocking reception. Defaults to &lt;code&gt;false&lt;/code&gt;. If set to &lt;code&gt;true&lt;/code&gt; then a &lt;code&gt;message_cb&lt;/code&gt; that avoids the possibility of messages being queued in the sender process without bound should be configured.</source>
          <target state="translated">オプション &lt;code&gt;sender&lt;/code&gt; は、送信メッセージの送信に専用プロセスを使用するかどうかを指定します。これにより、送信ブロッキング受信の可能性が回避されます。デフォルトは &lt;code&gt;false&lt;/code&gt; です。 &lt;code&gt;true&lt;/code&gt; に設定した場合、メッセージがバインドされずに送信側プロセスのキューに入れられる可能性を回避する &lt;code&gt;message_cb&lt;/code&gt; を構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="50b59aee750b8ace41d580c775edcd5cf8326a92" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;ssl_options&lt;/code&gt; must be specified for a transport that should support TLS: a value of &lt;code&gt;true&lt;/code&gt; results in a TLS handshake immediately upon connection establishment while &lt;code&gt;list()&lt;/code&gt; specifies options to be passed to &lt;code&gt;ssl:connect/2&lt;/code&gt; or &lt;code&gt;ssl:ssl_accept/2&lt;/code&gt; after capabilities exchange if TLS is negotiated.</source>
          <target state="translated">TLSをサポートする必要があるトランスポートにはオプション &lt;code&gt;ssl_options&lt;/code&gt; を指定する必要があります。値が &lt;code&gt;true&lt;/code&gt; の場合、接続の確立直後にTLSハンドシェイクが発生しますが、 &lt;code&gt;list()&lt;/code&gt; は機能交換後に &lt;code&gt;ssl:connect/2&lt;/code&gt; または &lt;code&gt;ssl:ssl_accept/2&lt;/code&gt; に渡されるオプションを指定しますTLSがネゴシエートされた場合。</target>
        </trans-unit>
        <trans-unit id="eb0b2c00845747ebfd6a57dac944c8489e34fe1d" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;timeout&lt;/code&gt; (milliseconds) is used when setting up the SSH connection and when waiting for the &lt;code&gt;hello&lt;/code&gt; message from the server. It is not used for any other purposes during the lifetime of the connection.</source>
          <target state="translated">オプションの &lt;code&gt;timeout&lt;/code&gt; （ミリ秒）は、SSH接続をセットアップするとき、およびサーバーからの &lt;code&gt;hello&lt;/code&gt; メッセージを待機するときに使用されます。接続の存続期間中は、他の目的には使用されません。</target>
        </trans-unit>
        <trans-unit id="afc7cede7fbac62c14c694ddc0b6eec6bf4a0ae3" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;timeout&lt;/code&gt; (milliseconds) is used when setting up the SSH connection. It is not used for any other purposes during the lifetime of the connection.</source>
          <target state="translated">オプションの &lt;code&gt;timeout&lt;/code&gt; （ミリ秒）は、SSH接続のセットアップ時に使用されます。接続の存続期間中は、他の目的には使用されません。</target>
        </trans-unit>
        <trans-unit id="33648c8e4866da798d09c425a4d8d5d74a5e0058" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;timeout&lt;/code&gt; specifies how long the client must wait for prompt. If the time expires, the function returns &lt;code&gt;{error,timeout}&lt;/code&gt;. For information about the default value for the command timeout, see the &lt;code&gt;&lt;a href=&quot;#Default_values&quot;&gt;list of default values&lt;/a&gt;&lt;/code&gt; in the beginning of this module.</source>
          <target state="translated">オプションの &lt;code&gt;timeout&lt;/code&gt; は、クライアントがプロンプトを待つ時間を指定します。時間切れになると、関数は &lt;code&gt;{error,timeout}&lt;/code&gt; 返します。コマンドタイムアウト &lt;code&gt;&lt;a href=&quot;#Default_values&quot;&gt;list of default values&lt;/a&gt;&lt;/code&gt; は、このモジュールの冒頭にあるデフォルト値のリストを参照してください。</target>
        </trans-unit>
        <trans-unit id="3322b8eb2ac3b0d6c5921c1fd7368fb6163c677f" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;timeout&lt;/code&gt; specifies the number of milliseconds to allow for connection establishment and, if the function in question results in an outgoing hello message, reception of the server hello. The timeout applies to connection and hello independently; one timeout for connection establishment, another for hello reception.</source>
          <target state="translated">オプション &lt;code&gt;timeout&lt;/code&gt; は、接続の確立を許可するミリ秒数を指定し、問題の関数が送信helloメッセージを生成する場合は、サーバーhelloを受信します。タイムアウトは、接続とhelloに個別に適用されます。1つは接続確立用のタイムアウト、もう1つはhello受信用です。</target>
        </trans-unit>
        <trans-unit id="9c0719ab2fd2367d9658fdeb70a32aaa618f2e49" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;unicode&lt;/code&gt; is an alias for &lt;code&gt;utf8&lt;/code&gt;, as this is the preferred encoding for Unicode characters in binaries. &lt;code&gt;utf16&lt;/code&gt; is an alias for &lt;code&gt;{utf16,big}&lt;/code&gt; and &lt;code&gt;utf32&lt;/code&gt; is an alias for &lt;code&gt;{utf32,big}&lt;/code&gt;. The atoms &lt;code&gt;big&lt;/code&gt; and &lt;code&gt;little&lt;/code&gt; denote big- or little-endian encoding.</source>
          <target state="translated">オプション &lt;code&gt;unicode&lt;/code&gt; は &lt;code&gt;utf8&lt;/code&gt; のエイリアスです。これは、バイナリのUnicode文字の優先エンコーディングであるためです。 &lt;code&gt;utf16&lt;/code&gt; は &lt;code&gt;{utf16,big}&lt;/code&gt; のエイリアスで、 &lt;code&gt;utf32&lt;/code&gt; は &lt;code&gt;{utf32,big}&lt;/code&gt; エイリアスです。アトム &lt;code&gt;big&lt;/code&gt; と &lt;code&gt;little&lt;/code&gt; は、ビッグエンディアンまたはリトルエンディアンのエンコーディングを示します。</target>
        </trans-unit>
        <trans-unit id="dd54ba2652e6caa2fdc53e186c7711e64ef49755" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;unordered&lt;/code&gt; specifies whether or not to use unordered delivery, integer &lt;code&gt;N&lt;/code&gt; being equivalent to &lt;code&gt;N =&amp;lt; OS&lt;/code&gt;, where &lt;code&gt;OS&lt;/code&gt; is the number of outbound streams negotiated on the association in question. Regardless of configuration, sending is ordered on stream 0 until reception of a second incoming message, to ensure that a peer receives capabilities exchange messages before any other. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;unordered&lt;/code&gt; は、順不同配信を使用するかどうかを指定します。整数 &lt;code&gt;N&lt;/code&gt; は &lt;code&gt;N =&amp;lt; OS&lt;/code&gt; と同等です。ここで、 &lt;code&gt;OS&lt;/code&gt; は問題の関連付けでネゴシエートされた送信ストリームの数です。設定に関係なく、2番目の着信メッセージを受信するまでストリーム0で送信が順序付けされ、ピアが他のどの機能よりも先に機能交換メッセージを受信できるようにします。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9437b2aaf317ba6723d7637ccb49bca377c204e5" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;variables&lt;/code&gt; can be used to specify an installation directory other than &lt;code&gt;$ROOT/lib&lt;/code&gt; for some of the applications. If a variable &lt;code&gt;{VarName,Prefix}&lt;/code&gt; is specified and an application is found in a directory &lt;code&gt;Prefix/Rest/App[-Vsn]/ebin&lt;/code&gt;, this application gets the path &lt;code&gt;VarName/Rest/App-Vsn/ebin&lt;/code&gt; in the boot script. If an application is found in a directory &lt;code&gt;Prefix/Rest&lt;/code&gt;, the path is &lt;code&gt;VarName/Rest/App-Vsn/ebin&lt;/code&gt;. When starting Erlang, all variables &lt;code&gt;VarName&lt;/code&gt; are given values using command-line flag &lt;code&gt;boot_var&lt;/code&gt;.</source>
          <target state="translated">一部のアプリケーションでは、オプション &lt;code&gt;variables&lt;/code&gt; を使用して、 &lt;code&gt;$ROOT/lib&lt;/code&gt; 以外のインストールディレクトリを指定できます。変数 &lt;code&gt;{VarName,Prefix}&lt;/code&gt; が指定されていて、アプリケーションが &lt;code&gt;Prefix/Rest/App[-Vsn]/ebin&lt;/code&gt; 場合、このアプリケーションはブートスクリプトでパス &lt;code&gt;VarName/Rest/App-Vsn/ebin&lt;/code&gt; を取得します。アプリケーションが &lt;code&gt;Prefix/Rest&lt;/code&gt; ディレクトリにある場合、パスは &lt;code&gt;VarName/Rest/App-Vsn/ebin&lt;/code&gt; です。 Erlangを起動すると、すべての変数 &lt;code&gt;VarName&lt;/code&gt; にコマンドラインフラグ &lt;code&gt;boot_var&lt;/code&gt; を使用して値が与えられます。</target>
        </trans-unit>
        <trans-unit id="3fe4cb46f323a7c472497777738ff73ebf76a2c2" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;variables&lt;/code&gt; can be used to specify an installation directory other than &lt;code&gt;lib&lt;/code&gt; for some of the applications. If variable &lt;code&gt;{VarName,Prefix}&lt;/code&gt; is specified and an application is found in directory &lt;code&gt;Prefix/Rest/App[-Vsn]/ebin&lt;/code&gt;, this application is packed into a separate &lt;code&gt;VarName.tar.gz&lt;/code&gt; file as &lt;code&gt;Rest/App-Vsn/ebin&lt;/code&gt;.</source>
          <target state="translated">一部のアプリケーションでは、オプション &lt;code&gt;variables&lt;/code&gt; を使用して &lt;code&gt;lib&lt;/code&gt; 以外のインストールディレクトリを指定できます。変数 &lt;code&gt;{VarName,Prefix}&lt;/code&gt; が指定されていて、アプリケーションが &lt;code&gt;Prefix/Rest/App[-Vsn]/ebin&lt;/code&gt; 場合、このアプリケーションは &lt;code&gt;Rest/App-Vsn/ebin&lt;/code&gt; として個別の &lt;code&gt;VarName.tar.gz&lt;/code&gt; ファイルにパックされます。</target>
        </trans-unit>
        <trans-unit id="a5d38b5eca75c6ce7a8a86d89951c54beea09b28" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;verbose&lt;/code&gt; (or rather &lt;code&gt;{verbose,true}&lt;/code&gt;) causes diagnostics printout through &lt;code&gt;io:format/2&lt;/code&gt; of queries, replies retransmissions, and so on, similar to from utilities, such as &lt;code&gt;dig&lt;/code&gt; and &lt;code&gt;nslookup&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;verbose&lt;/code&gt; （または &lt;code&gt;{verbose,true}&lt;/code&gt; ）を使用すると、 &lt;code&gt;dig&lt;/code&gt; や &lt;code&gt;nslookup&lt;/code&gt; などのユーティリティと同様に、クエリの &lt;code&gt;io:format/2&lt;/code&gt; 、応答の再送信などを介して診断が出力されます。</target>
        </trans-unit>
        <trans-unit id="3a9444c4853f083de328fc1ee9ccc9ae214b7bd7" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;verbose&lt;/code&gt; can be added to get information about the generated files:</source>
          <target state="translated">オプションの &lt;code&gt;verbose&lt;/code&gt; を追加して、生成されたファイルに関する情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="72dc8b34cd621366e301671b30bbc40e7b1100a0" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;write_concurrency&lt;/code&gt; can be combined with option &lt;code&gt;&lt;a href=&quot;#new_2_read_concurrency&quot;&gt;read_concurrency&lt;/a&gt;&lt;/code&gt;. You typically want to combine these when large concurrent read bursts and large concurrent write bursts are common; for more information, see option &lt;code&gt;&lt;a href=&quot;#new_2_read_concurrency&quot;&gt;read_concurrency&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;write_concurrency&lt;/code&gt; は、オプション &lt;code&gt;&lt;a href=&quot;#new_2_read_concurrency&quot;&gt;read_concurrency&lt;/a&gt;&lt;/code&gt; と組み合わせることができます。大規模な同時読み取りバーストと大規模な同時書き込みバーストが一般的である場合は、通常これらを組み合わせます。詳細については、オプション &lt;code&gt;&lt;a href=&quot;#new_2_read_concurrency&quot;&gt;read_concurrency&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="9a9faea62aad9078a0a76ca4af9ddb6c33c84d32" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{cache,&amp;nbsp;ets}&lt;/code&gt; can be used to cache the answers to a QLC. The answers are stored in one ETS table for each cached QLC. When a cached QLC is evaluated again, answers are fetched from the table without any further computations. Therefore, when all answers to a cached QLC have been found, the ETS tables used for caching answers to the qualifiers of the QLC can be emptied. Option &lt;code&gt;cache&lt;/code&gt; is equivalent to &lt;code&gt;{cache,&amp;nbsp;ets}&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;{cache,&amp;nbsp;ets}&lt;/code&gt; を使用して、QLCへの回答をキャッシュできます。回答は、キャッシュされたQLCごとに1つのETSテーブルに保存されます。キャッシュされたQLCが再度評価されると、それ以上の計算を行わずにテーブルから回答がフェッチされます。したがって、キャッシュされたQLCに対するすべての回答が見つかった場合、QLCの修飾子に対する回答をキャッシュするために使用されるETSテーブルを空にすることができます。オプション &lt;code&gt;cache&lt;/code&gt; は、 &lt;code&gt;{cache,&amp;nbsp;ets}&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="f0b3ecf3fceaf01bc2ca34bef8c3c517c967e629" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt; can be used to cache the answers to a QLC like &lt;code&gt;{cache,&amp;nbsp;ets}&lt;/code&gt;. The difference is that the answers are kept in a list (on the process heap). If the answers would occupy more than a certain amount of RAM memory, a temporary file is used for storing the answers. Option &lt;code&gt;max_list_size&lt;/code&gt; sets the limit in bytes and the temporary file is put on the directory set by option &lt;code&gt;tmpdir&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt; を使用して、 &lt;code&gt;{cache,&amp;nbsp;ets}&lt;/code&gt; ようなQLCへの回答をキャッシュできます。違いは、回答がリスト（プロセスヒープ上）に保持されることです。回答が一定量以上のRAMメモリを占有する場合は、一時ファイルを使用して回答を保存します。オプション &lt;code&gt;max_list_size&lt;/code&gt; は制限をバイト単位で設定し、一時ファイルはオプション &lt;code&gt;tmpdir&lt;/code&gt; で設定されたディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="c363b0b99cf0b9f17d626eea478292453b3a04e0" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt; offers the possibility to store the answers in a list on the process heap. This has the potential of being faster than ETS tables, as there is no need to copy answers from the table. However, it can often result in slower evaluation because of more garbage collections of the process heap and increased RAM memory consumption because of larger heaps. Another drawback with cache lists is that if the list size exceeds a limit, a temporary file is used. Reading the answers from a file is much slower than copying them from an ETS table. But if the available RAM memory is scarce, setting the &lt;code&gt;&lt;a href=&quot;#max_list_size&quot;&gt;limit&lt;/a&gt;&lt;/code&gt; to some low value is an alternative.</source>
          <target state="translated">オプション &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt; は、回答をプロセスヒープのリストに格納する可能性を提供します。テーブルから回答をコピーする必要がないため、これはETSテーブルよりも高速になる可能性があります。ただし、多くの場合、プロセスヒープのガベージコレクションが多いために評価が遅くなり、ヒープが大きいためにRAMメモリ消費が増加します。キャッシュリストのもう1つの欠点は、リストのサイズが制限を超えると、一時ファイルが使用されることです。ファイルからの回答の読み取りは、ETSテーブルからの回答のコピーよりもはるかに遅くなります。ただし、使用可能なRAMメモリが不足している場合は、 &lt;code&gt;&lt;a href=&quot;#max_list_size&quot;&gt;limit&lt;/a&gt;&lt;/code&gt; を低い値に設定することもできます。</target>
        </trans-unit>
        <trans-unit id="78277a7753947f4b67c1f00cd1efea245ef61134" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{exit_on_close, false}&lt;/code&gt; is useful if the peer has done a shutdown on the write side.</source>
          <target state="translated">オプション &lt;code&gt;{exit_on_close, false}&lt;/code&gt; は、ピアが書き込み側でシャットダウンを行った場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="06b017310b210415f4e3f5ffc5d41bfadc6c3b12" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{join,&amp;nbsp;Join}&lt;/code&gt; can be used to ensure that a certain join method is used:</source>
          <target state="translated">オプション &lt;code&gt;{join,&amp;nbsp;Join}&lt;/code&gt; を使用すると、特定の結合方法が確実に使用されます。</target>
        </trans-unit>
        <trans-unit id="30fedae2cf205df5ff8623315cf8962b5f1bff95" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{lookup,&amp;nbsp;true}&lt;/code&gt; can be used to ensure that the &lt;code&gt;qlc&lt;/code&gt; module looks up constants in some QLC table. If there are more than one QLC table among the list expressions of the generators, constants must be looked up in at least one of the tables. The evaluation of the query fails if there are no constants to look up. This option is useful when it would be unacceptable to traverse all objects in some table. Setting option &lt;code&gt;lookup&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; ensures that no constants are looked up (&lt;code&gt;{max_lookup,&amp;nbsp;0}&lt;/code&gt; has the same effect). Defaults to &lt;code&gt;any&lt;/code&gt;, which means that constants are looked up whenever possible.</source>
          <target state="translated">オプション &lt;code&gt;{lookup,&amp;nbsp;true}&lt;/code&gt; を使用すると、 &lt;code&gt;qlc&lt;/code&gt; モジュールが一部のQLCテーブルで定数を確実に検索できます。ジェネレーターのリスト式の中に複数のQLCテーブルがある場合、少なくとも1つのテーブルで定数を検索する必要があります。検索する定数がない場合、クエリの評価は失敗します。このオプションは、テーブル内のすべてのオブジェクトをトラバースすることが許容できない場合に役立ちます。オプションの &lt;code&gt;lookup&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定すると、定数が検索されなくなります（ &lt;code&gt;{max_lookup,&amp;nbsp;0}&lt;/code&gt; でも同じ効果があります）。デフォルトは &lt;code&gt;any&lt;/code&gt; です。つまり、可能な限り定数が検索されます。</target>
        </trans-unit>
        <trans-unit id="e9c6fcc69606cfd5e227d68821d1d1d7a8fea3e4" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{minor_version, Version}&lt;/code&gt; can be used to control some encoding details. This option was introduced in Erlang/OTP R11B-4. The valid values for &lt;code&gt;Version&lt;/code&gt; are:</source>
          <target state="translated">オプション &lt;code&gt;{minor_version, Version}&lt;/code&gt; を使用して、エンコーディングの詳細を制御できます。このオプションはErlang / OTP R11B-4で導入されました。 &lt;code&gt;Version&lt;/code&gt; の有効な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e9c3856b6828cbaadee3b68b65792a41e0088ebf" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{minor_version, Version}&lt;/code&gt; specifies how floats are encoded. For a detailed description, see &lt;code&gt;&lt;a href=&quot;#term_to_binary-2&quot;&gt; term_to_binary/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;{minor_version, Version}&lt;/code&gt; は、floatのエンコード方法を指定します。詳細な説明については、 &lt;code&gt;&lt;a href=&quot;#term_to_binary-2&quot;&gt; term_to_binary/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="fe3131626c8fb97f4a37a0360d9d266a8a597be3" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{minor_version, Version}&lt;/code&gt; specifies how floats are encoded. For a detailed description, see &lt;code&gt;&lt;a href=&quot;#term_to_binary-2&quot;&gt;term_to_binary/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;{minor_version, Version}&lt;/code&gt; は、フロートのエンコード方法を指定します。詳細については、 &lt;code&gt;&lt;a href=&quot;#term_to_binary-2&quot;&gt;term_to_binary/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="524c17823f60e5f4fb7f4313f11efaa80a725ce7" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{shell, ShellType}&lt;/code&gt; allows making &lt;code&gt;ttb&lt;/code&gt; operation similar to &lt;code&gt;dbg&lt;/code&gt;. Using &lt;code&gt;{shell, true}&lt;/code&gt; displays all trace messages in the shell before storing them. &lt;code&gt;{shell, only}&lt;/code&gt; additionally disables message storage (making the tool to behave exactly like &lt;code&gt;dbg&lt;/code&gt;). This is allowed only with IP trace ports (&lt;code&gt;{trace, {local, File}}&lt;/code&gt;).</source>
          <target state="translated">オプション &lt;code&gt;{shell, ShellType}&lt;/code&gt; 使用すると、 &lt;code&gt;ttb&lt;/code&gt; 操作を &lt;code&gt;dbg&lt;/code&gt; と同様にすることができます。 &lt;code&gt;{shell, true}&lt;/code&gt; を使用すると、すべてのトレースメッセージが保存される前にシェルに表示されます。 &lt;code&gt;{shell, only}&lt;/code&gt; さらにメッセージストレージを無効にします（ツールを &lt;code&gt;dbg&lt;/code&gt; とまったく同じように動作させます）。これは、IPトレースポート（ &lt;code&gt;{trace, {local, File}}&lt;/code&gt; ）でのみ許可されます。</target>
        </trans-unit>
        <trans-unit id="ef42e9a1232f5a9ba117da4d9479739de508ecd1" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{unique,&amp;nbsp;true}&lt;/code&gt; can be used to remove duplicate answers to a QLC. The unique answers are stored in one ETS table for each QLC. The table is emptied every time it is known that there are no more answers to the QLC. Option &lt;code&gt;unique&lt;/code&gt; is equivalent to &lt;code&gt;{unique,&amp;nbsp;true}&lt;/code&gt;. If option &lt;code&gt;unique&lt;/code&gt; is combined with option &lt;code&gt;{cache,&amp;nbsp;ets}&lt;/code&gt;, two ETS tables are used, but the full answers are stored in one table only. If option &lt;code&gt;unique&lt;/code&gt; is combined with option &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt;, the answers are sorted twice using &lt;code&gt;&lt;a href=&quot;#keysort-3&quot;&gt;keysort/3&lt;/a&gt;&lt;/code&gt;; once to remove duplicates and once to restore the order.</source>
          <target state="translated">オプション &lt;code&gt;{unique,&amp;nbsp;true}&lt;/code&gt; を使用して、QLCに対する重複した回答を削除できます。一意の回答は、QLCごとに1つのETSテーブルに保存されます。 QLCに対する回答がこれ以上ないことが判明するたびに、テーブルは空になります。オプション &lt;code&gt;unique&lt;/code&gt; は &lt;code&gt;{unique,&amp;nbsp;true}&lt;/code&gt; と同等です。オプション &lt;code&gt;unique&lt;/code&gt; をオプション &lt;code&gt;{cache,&amp;nbsp;ets}&lt;/code&gt; と組み合わせると、2つのETSテーブルが使用されますが、完全な回答は1つのテーブルにのみ格納されます。オプション &lt;code&gt;unique&lt;/code&gt; をオプション &lt;code&gt;{cache,&amp;nbsp;list}&lt;/code&gt; と組み合わせると、回答は &lt;code&gt;&lt;a href=&quot;#keysort-3&quot;&gt;keysort/3&lt;/a&gt;&lt;/code&gt; を使用して2回ソートされます。 1回は重複を削除し、1回は順序を復元します。</target>
        </trans-unit>
        <trans-unit id="d03fe843ff69bab217c2db04a4de76a5997a0834" translate="yes" xml:space="preserve">
          <source>Option &lt;code&gt;{var_tar,VarTar}&lt;/code&gt; can be used to specify if and where a separate package is to be stored. In this option &lt;code&gt;VarTar&lt;/code&gt; is one of the following:</source>
          <target state="translated">オプション &lt;code&gt;{var_tar,VarTar}&lt;/code&gt; を使用して、個別のパッケージを保存するかどうか、どこに保存するかを指定できます。このオプションでは、 &lt;code&gt;VarTar&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="035817bcba72e336831559d60aeb6facccf9b64f" translate="yes" xml:space="preserve">
          <source>Option &lt;strong&gt;Close&lt;/strong&gt; executes &lt;code&gt;erlang:port_close/1&lt;/code&gt; on the port under the mouse pointer.</source>
          <target state="translated">オプション&lt;strong&gt;Close&lt;/strong&gt;は、マウスポインターの下のポートで &lt;code&gt;erlang:port_close/1&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="35e926c6fbc3d99b909d12d014b384bd4c783eb2" translate="yes" xml:space="preserve">
          <source>Option &lt;strong&gt;Kill process&lt;/strong&gt; brutally kills the processes under the mouse pointer by sending an exit signal with reason &lt;code&gt;kill&lt;/code&gt;.</source>
          <target state="translated">オプション&lt;strong&gt;Killプロセス&lt;/strong&gt;は、理由 &lt;code&gt;kill&lt;/code&gt; で終了信号を送信することにより、マウスポインターの下の&lt;strong&gt;プロセスを&lt;/strong&gt;残酷に強制終了します。</target>
        </trans-unit>
        <trans-unit id="70321865963caf3c8ea1efe0081cc07fb0b639e6" translate="yes" xml:space="preserve">
          <source>Option &lt;strong&gt;Port info&lt;/strong&gt; opens a detailed information window for the port under the mouse pointer. In addition to the information above, it also shows links and monitors.</source>
          <target state="translated">Option &lt;strong&gt;Port info&lt;/strong&gt;は、マウスポインターの下にあるポートの詳細情報ウィンドウを開きます。上記の情報に加えて、リンクとモニターも表示されます。</target>
        </trans-unit>
        <trans-unit id="7d65b0f04dbfd40d29f90c9cb3594f974e725b28" translate="yes" xml:space="preserve">
          <source>Option &lt;strong&gt;Process info&lt;/strong&gt; opens a detailed information window on the process under the mouse pointer, including the following:</source>
          <target state="translated">オプション&lt;strong&gt;プロセス情報&lt;/strong&gt;は、マウスポインターの下のプロセスに関する詳細情報ウィンドウを開きます。</target>
        </trans-unit>
        <trans-unit id="99160977b4d7a39a2a6e97003b66bdad996bc6ed" translate="yes" xml:space="preserve">
          <source>Option &lt;strong&gt;Trace selected ports by name&lt;/strong&gt; adds the registered name of the port to tab &lt;strong&gt;Trace Overview&lt;/strong&gt;. This can be useful when tracing is done on many nodes, as ports with that name are then traced on all traced nodes.</source>
          <target state="translated">オプション&lt;strong&gt;選択したポートを名前でトレースする&lt;/strong&gt;と、ポートの登録名が[ &lt;strong&gt;トレースの概要&lt;/strong&gt; ]タブに追加&lt;strong&gt;されます&lt;/strong&gt;。これは、多くのノードでトレースが行われる場合に役立ちます。その名前のポートは、トレースされたすべてのノードでトレースされるためです。</target>
        </trans-unit>
        <trans-unit id="2b6c236e8cdc6b5cda5c55b97f093a7e3cd6785f" translate="yes" xml:space="preserve">
          <source>Option &lt;strong&gt;Trace selected ports&lt;/strong&gt; adds the selected port identifiers, and the nodes that the ports reside on, to tab &lt;strong&gt;Trace Overview&lt;/strong&gt;.</source>
          <target state="translated">Option &lt;strong&gt;Trace selected ports&lt;/strong&gt;は、選択されたポート識別子、およびポートが存在するノードを[ &lt;strong&gt;Trace Overview&lt;/strong&gt; ]タブに追加します。</target>
        </trans-unit>
        <trans-unit id="ac9ff1921b3900c17896467fd0d99ce466117b8b" translate="yes" xml:space="preserve">
          <source>Option &lt;strong&gt;Trace selected processes by name&lt;/strong&gt; adds the registered name of the processes. This can be useful when tracing is done on many nodes, as processes with that name are then traced on all traced nodes.</source>
          <target state="translated">オプション&lt;strong&gt;選択したプロセスを名前でトレースする&lt;/strong&gt;と、プロセスの登録名が追加&lt;strong&gt;され&lt;/strong&gt;ます。これは、その名前のプロセスがすべてのトレースされたノードでトレースされるため、トレースが多くのノードで行われる場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="5f5a98945509d3374dcec511a2237bb11d72c5e8" translate="yes" xml:space="preserve">
          <source>Option &lt;strong&gt;Trace selected processes&lt;/strong&gt; adds the selected process identifiers to tab &lt;strong&gt;Trace Overview&lt;/strong&gt; plus the node that the processes reside on.</source>
          <target state="translated">オプション&lt;strong&gt;選択したプロセス&lt;/strong&gt;を&lt;strong&gt;トレース&lt;/strong&gt;すると、選択したプロセス識別子が[ &lt;strong&gt;トレースの概要&lt;/strong&gt; ]タブに加えて、プロセスが存在するノードに追加されます。</target>
        </trans-unit>
        <trans-unit id="bbcdc0d51603836feb28f7c0f6ebeff6083e909a" translate="yes" xml:space="preserve">
          <source>Option can be an empty list. Otherwise, see possible &lt;strong&gt;POSIX&lt;/strong&gt; names in Section 8 in &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4254.txt&quot;&gt; RFC 4254&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オプションは空のリストにすることができます。それ以外の場合は、 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc4254.txt&quot;&gt; RFC 4254&lt;/a&gt;&lt;/code&gt; のセクション8で可能な&lt;strong&gt;POSIX&lt;/strong&gt;名を参照してください。</target>
        </trans-unit>
        <trans-unit id="ed343dc73ff17a12eae43c4c8abcaf085a15af89" translate="yes" xml:space="preserve">
          <source>Option description:</source>
          <target state="translated">説明オプション。</target>
        </trans-unit>
        <trans-unit id="842a1436ee68919d09edec512df7b86300e0f790" translate="yes" xml:space="preserve">
          <source>Option for the request to be synchronous or asynchronous.</source>
          <target state="translated">リクエストを同期または非同期にするためのオプション。</target>
        </trans-unit>
        <trans-unit id="1293048f15d31bf84b0b730a9b1782f9b01e778a" translate="yes" xml:space="preserve">
          <source>Option list, required but not used.</source>
          <target state="translated">オプションリスト、必須ですが使用しません。</target>
        </trans-unit>
        <trans-unit id="462548ed78075584c1554197ff33d7cd930b932f" translate="yes" xml:space="preserve">
          <source>Option passed to &lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt;. Has one of the following types.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#add_transport-2&quot;&gt;add_transport/2&lt;/a&gt;&lt;/code&gt; に渡されるオプション。次のいずれかのタイプです。</target>
        </trans-unit>
        <trans-unit id="23707ebafb992d8dfae9b58a9ba61d8c8fd2c70a" translate="yes" xml:space="preserve">
          <source>Option passed to &lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt;. Can be any &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#capability&quot;&gt;capability()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; as well as the following.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#start_service-2&quot;&gt;start_service/2&lt;/a&gt;&lt;/code&gt; に渡されるオプション。次のように、任意の &lt;code&gt;&lt;code&gt;&lt;a href=&quot;#capability&quot;&gt;capability()&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; ことができます。</target>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="4d4b2106cdcb3604717e69731f6481a51f9daa36" translate="yes" xml:space="preserve">
          <source>Optional Header Elements</source>
          <target state="translated">オプションのヘッダー要素</target>
        </trans-unit>
        <trans-unit id="dfbb34787505eab01012f74ede55769d7b2752c8" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;code id=&quot;hook_function&quot;&gt;HookFunction&lt;/code&gt;, shown in the functions described in this module, defines a function that is called when an unknown form occurs where there is to be a valid expression. If &lt;code&gt;HookFunction&lt;/code&gt; is equal to &lt;code&gt;none&lt;/code&gt;, there is no hook function.</source>
          <target state="translated">このモジュールで説明されている関数に示されているオプションの引数 &lt;code id=&quot;hook_function&quot;&gt;HookFunction&lt;/code&gt; は、有効な式がある場所で不明なフォームが発生したときに呼び出される関数を定義します。 &lt;code&gt;HookFunction&lt;/code&gt; が &lt;code&gt;none&lt;/code&gt; に等しい場合、フック関数はありません。</target>
        </trans-unit>
        <trans-unit id="276de84647d247405111dca217abe17bdd0364d3" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;code&gt;NumberOfAnswers&lt;/code&gt; determines the maximum number of answers returned. Defaults to &lt;code&gt;10&lt;/code&gt;. If less than the requested number of answers is returned, subsequent calls to &lt;code&gt;next_answers&lt;/code&gt; return &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">オプションの引数 &lt;code&gt;NumberOfAnswers&lt;/code&gt; は、返される回答の最大数を決定します。デフォルトは &lt;code&gt;10&lt;/code&gt; です。要求された数より少ない回答が返された場合、それ以降の &lt;code&gt;next_answers&lt;/code&gt; の呼び出しは &lt;code&gt;[]&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8e155301399a6f11bab8a0f03e661dc264bf4113" translate="yes" xml:space="preserve">
          <source>Optional argument &lt;code&gt;Timeout&lt;/code&gt; specifies a time-out in milliseconds. The default value is &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">オプション引数 &lt;code&gt;Timeout&lt;/code&gt; は、タイムアウトをミリ秒単位で指定します。デフォルト値は &lt;code&gt;infinity&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cc160da129ae196cb0bc016f6e6b2dc9018a93f1" translate="yes" xml:space="preserve">
          <source>Optional disc. The schema can reside on disc or in RAM. If the schema is found on disc, Mnesia starts as a disc-based node and the storage type of the schema table is &lt;code&gt;disc_copies&lt;/code&gt;. If no schema is found on disc, Mnesia starts as a disc-less node and the storage type of the schema table is &lt;code&gt;ram_copies&lt;/code&gt;. Default value for the application parameter is &lt;code&gt;opt_disc&lt;/code&gt;.</source>
          <target state="translated">オプションのディスク。スキーマはディスクまたはRAMに常駐できます。スキーマがディスクにある場合、Mnesiaはディスクベースのノードとして起動し、スキーマテーブルのストレージタイプは &lt;code&gt;disc_copies&lt;/code&gt; です。ディスクにスキーマが見つからない場合、Mnesiaはディスクのないノードとして起動し、スキーマテーブルのストレージタイプは &lt;code&gt;ram_copies&lt;/code&gt; です。アプリケーションパラメータのデフォルト値は &lt;code&gt;opt_disc&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="08766916e383f04d3e4dd8436f435e4ff78d676e" translate="yes" xml:space="preserve">
          <source>Optional disc. The schema can reside on either disc or RAM. If the schema is found on disc, &lt;code&gt;Mnesia&lt;/code&gt; starts as a disc-full node (the storage type of the schema table is disc_copies). If no schema is found on disc, &lt;code&gt;Mnesia&lt;/code&gt; starts as a disc-less node (the storage type of the schema table is &lt;code&gt;ram_copies&lt;/code&gt;). The default for the application parameter is &lt;code&gt;opt_disc&lt;/code&gt;.</source>
          <target state="translated">オプションのディスク。スキーマは、ディスクまたはRAMに常駐できます。スキーマがディスクにある場合、 &lt;code&gt;Mnesia&lt;/code&gt; はディスクフルノードとして開始します（スキーマテーブルのストレージタイプはdisc_copiesです）。ディスクにスキーマが見つからない場合、 &lt;code&gt;Mnesia&lt;/code&gt; はディスクなしのノードとして開始します（スキーマテーブルのストレージタイプは &lt;code&gt;ram_copies&lt;/code&gt; です）。アプリケーションパラメータのデフォルトは &lt;code&gt;opt_disc&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="85dd2f62ecb3fc58781f23223662bb5750bb8b07" translate="yes" xml:space="preserve">
          <source>Optional fields are to be omitted from the map if they have no value:</source>
          <target state="translated">オプションのフィールドは、値がない場合はマップから省略されます。</target>
        </trans-unit>
        <trans-unit id="f7ff2e1b639664116012253b69978817d7cb9d18" translate="yes" xml:space="preserve">
          <source>Optional parameter that indicates which stream of event is of interest. If not present, events in the default NETCONF stream are sent.</source>
          <target state="translated">どのイベントのストリームに関心があるかを示すオプションのパラメータです。存在しない場合、デフォルトの NETCONF ストリームのイベントが送信されます。</target>
        </trans-unit>
        <trans-unit id="9f20bc591a797de16d0e389435598756b6d01a90" translate="yes" xml:space="preserve">
          <source>Optional parameter that indicates which subset of all possible events is of interest. The parameter format is the same as that of the filter parameter in the NETCONF protocol operations. If not present, all events not precluded by other parameters are sent.</source>
          <target state="translated">すべての可能なイベントのうち、どのサブセットに関心があるかを示すオプションのパラメータです。パラメータの形式は、NETCONF プロトコル操作の filter パラメータと同じです。存在しない場合、他のパラメータによって除外されていないすべてのイベントが送信されます。</target>
        </trans-unit>
        <trans-unit id="91c8bbcc154e216bf161a4cea2cf2921f55e3375" translate="yes" xml:space="preserve">
          <source>Optional parameter used to trigger the replay feature and indicate that the replay is to start at the time specified. If &lt;code&gt;StartTime&lt;/code&gt; is not present, this is not a replay subscription.</source>
          <target state="translated">リプレイ機能をトリガーし、指定した時間にリプレイを開始することを示すために使用されるオプションのパラメーター。場合 &lt;code&gt;StartTime&lt;/code&gt; 存在しない場合、これはリプレイサブスクリプションではありません。</target>
        </trans-unit>
        <trans-unit id="3b62c08c67213d147aac035093ce60b242c49707" translate="yes" xml:space="preserve">
          <source>Optional parameter used with the optional replay feature to indicate the newest notifications of interest. If &lt;code&gt;StopTime&lt;/code&gt; is not present, the notifications continues until the subscription is terminated.</source>
          <target state="translated">関心のある最新の通知を示すためにオプションの再生機能で使用されるオプションのパラメーター。 &lt;code&gt;StopTime&lt;/code&gt; が存在しない場合、サブスクリプションが終了するまで通知が継続します。</target>
        </trans-unit>
        <trans-unit id="a4149a55fc8e55fc8490190fca6fd327f9a538b3" translate="yes" xml:space="preserve">
          <source>Optional.</source>
          <target state="translated">Optional.</target>
        </trans-unit>
        <trans-unit id="e8af255ca8f0d30288a7d242bda54e97c39eddd8" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;&quot;&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c3e770d9ae3be1592b6bb4e71a2a0b4d02b632c8" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;&quot;agentEngine&quot;&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;&quot;agentEngine&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f444f3a32fb5864a64535a82d40b191fe3d8f92a" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;&quot;ct_test&quot;&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;&quot;ct_test&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d86ff1cf1753eeb2712d25027e36b3bfeeb878b3" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;&quot;mgrEngine&quot;&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;&quot;mgrEngine&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3a5be38a4ec672fa5fc505b1d3938e2c4805690c" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;4000&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;4000&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3d818395035fabb022c90708c6cc84ee8b4b5af1" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;484&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;484&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="eb016daeda5d1c2dc4395fae5d7f67d4983388a1" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;5000&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;5000&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a91274ea47ca456c7c73bd65eabdba098688b45e" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;[v2]&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;[v2]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9145bb534991daf57f7701301bbf91899e9dd502" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c1862eeb7c8ff53d3ad48a0810e5755cdc2bd4c3" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;localhost&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;localhost&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="56e30788f63a5934b2591e0b2064ad81f73c70ba" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;none&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;none&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="50d0a6ed5f07cbf3535d40a94c01a427fc76812c" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;trap&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;trap&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="81e97dcaaa41ca3300b210af9cb347aabd6782bc" translate="yes" xml:space="preserve">
          <source>Optional. Default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">オプション。デフォルトは &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e7a5e868b1b2f32a86b5bd642dcb3afd6a406ab2" translate="yes" xml:space="preserve">
          <source>Optional. SNMPv3 only.</source>
          <target state="translated">オプションです。SNMPv3のみ。</target>
        </trans-unit>
        <trans-unit id="e29d2e9b1f6270c8f759be9d98bdcc632686ece6" translate="yes" xml:space="preserve">
          <source>Optional. Specifies a file name relative to the release directory (that is, the subdirectory of &amp;lt;release root&amp;gt; where the &lt;code&gt;.boot&lt;/code&gt; file and others are located). The contents of this file is appended to the command line when Erlang is started. This makes it easy to start the emulator with different options for different releases.</source>
          <target state="translated">オプション。リリースディレクトリ（つまり、 &lt;code&gt;.boot&lt;/code&gt; ファイルなどが配置されている&amp;lt;リリースルート&amp;gt;のサブディレクトリ）に関連するファイル名を指定します。このファイルの内容は、Erlangの起動時にコマンドラインに追加されます。これにより、リリースごとに異なるオプションでエミュレータを簡単に起動できます。</target>
        </trans-unit>
        <trans-unit id="2b0c96e71650acccc82db9e27a628d2721580904" translate="yes" xml:space="preserve">
          <source>Optional. Specifies another data file than &lt;code&gt;start_erl.data&lt;/code&gt; in the &amp;lt;release root&amp;gt;. It is specified relative to the &amp;lt;release root&amp;gt; or absolute (including drive letter, and so on). This option is used by the release handler during upgrade and is not to be used during normal operation. Normally the release data file is not to be named differently.</source>
          <target state="translated">オプション。&amp;lt;リリースルート&amp;gt;の &lt;code&gt;start_erl.data&lt;/code&gt; 以外のデータファイルを指定します。&amp;lt;リリースルート&amp;gt;または絶対パス（ドライブ文字などを含む）を基準に指定されます。このオプションは、アップグレード中にリリースハンドラーによって使用され、通常の操作中には使用されません。通常、リリースデータファイルは別の名前にする必要はありません。</target>
        </trans-unit>
        <trans-unit id="6e896a68b07b1ca3cf93595378b5e6e78183b5ae" translate="yes" xml:space="preserve">
          <source>Optional. Specifies what &lt;code&gt;start_erl.data&lt;/code&gt; file to use.</source>
          <target state="translated">オプション。使用する &lt;code&gt;start_erl.data&lt;/code&gt; ファイルを指定します。</target>
        </trans-unit>
        <trans-unit id="8dfb648c156e19ccfde0a8a75080225f82a66290" translate="yes" xml:space="preserve">
          <source>Optional: a list of</source>
          <target state="translated">オプション:リスト</target>
        </trans-unit>
        <trans-unit id="40298ed5ccf236464308dd175b962b82475a2522" translate="yes" xml:space="preserve">
          <source>Optional: one or more</source>
          <target state="translated">オプション:1つ以上</target>
        </trans-unit>
        <trans-unit id="c38ca1d794e5db4040d672952825698f938f1b2b" translate="yes" xml:space="preserve">
          <source>Optionally an associated condition. A condition is a tuple &lt;code&gt;{Module,Name}&lt;/code&gt;. When the breakpoint is reached, &lt;code&gt;Module:Name(Bindings)&lt;/code&gt; is called. If it evaluates to &lt;code&gt;true&lt;/code&gt;, execution stops. If it evaluates to &lt;code&gt;false&lt;/code&gt;, the breakpoint is ignored. &lt;code&gt;Bindings&lt;/code&gt; contains the current variable bindings. To retrieve the value for a specified variable, use &lt;code&gt;get_binding&lt;/code&gt;.</source>
          <target state="translated">オプションで、関連する条件。条件はタプル &lt;code&gt;{Module,Name}&lt;/code&gt; です。ブレークポイントに到達すると、 &lt;code&gt;Module:Name(Bindings)&lt;/code&gt; が呼び出されます。 &lt;code&gt;true&lt;/code&gt; と評価された場合、実行は停止します。 &lt;code&gt;false&lt;/code&gt; と評価された場合、ブレークポイントは無視されます。 &lt;code&gt;Bindings&lt;/code&gt; には、現在の変数バインディングが含まれています。指定した変数の値を取得するには、 &lt;code&gt;get_binding&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="8a4282aaa4b303055b863e5204685bc1397a847f" translate="yes" xml:space="preserve">
          <source>Optionally invoked for a time consuming transaction request</source>
          <target state="translated">オプションで、時間のかかるトランザクション要求のために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c6c8e1e5181e25bac7195f77b91e7ea903739f23" translate="yes" xml:space="preserve">
          <source>Optionally invoked for a transaction acknowledgement</source>
          <target state="translated">オプションでトランザクション確認のために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a5f2278c7ee5f9556ced2e826a1b917355402ad3" translate="yes" xml:space="preserve">
          <source>Optionally invoked for a transaction reply</source>
          <target state="translated">オプションでトランザクション応答のために呼び出されます。</target>
        </trans-unit>
        <trans-unit id="da6a3730bb2085f8ebf92b6273cda1787e65e75e" translate="yes" xml:space="preserve">
          <source>Optionally specifies how captured substrings are to be returned. If omitted, the default of &lt;code&gt;index&lt;/code&gt; is used.</source>
          <target state="translated">オプションで、キャプチャされた部分文字列を返す方法を指定します。省略した場合、デフォルトの &lt;code&gt;index&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="c9a37fc27a14f568c026b4fd05c32a49102ca20f" translate="yes" xml:space="preserve">
          <source>Optionaly, in case of &lt;code&gt;publickey&lt;/code&gt; authorization, one or more of the remote user's public keys in the &lt;code&gt;&lt;a href=&quot;#USERDIR&quot;&gt;USERDIR&lt;/a&gt;&lt;/code&gt; directory are used. See the files &lt;code&gt;&lt;a href=&quot;#FILE-authorized_keys&quot;&gt;USERDIR/authorized_keys&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#FILE-authorized_keys2&quot;&gt;USERDIR/authorized_keys2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オプションで、 &lt;code&gt;publickey&lt;/code&gt; 認証の場合、 &lt;code&gt;&lt;a href=&quot;#USERDIR&quot;&gt;USERDIR&lt;/a&gt;&lt;/code&gt; ディレクトリ内の1つ以上のリモートユーザーの公開鍵が使用されます。ファイル &lt;code&gt;&lt;a href=&quot;#FILE-authorized_keys&quot;&gt;USERDIR/authorized_keys&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#FILE-authorized_keys2&quot;&gt;USERDIR/authorized_keys2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="9749013cefa7f03d17b664b15412b1588b737407" translate="yes" xml:space="preserve">
          <source>Options (&lt;code&gt;Opt&lt;/code&gt;s):</source>
          <target state="translated">オプション（ &lt;code&gt;Opt&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="1cc6e01afd8e684ce4b8791ec94b07a2736be0c2" translate="yes" xml:space="preserve">
          <source>Options :: [create_opt()]) -&amp;gt;</source>
          <target state="translated">オプション:: [create_opt（）]）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2a71724fb98cff6a19705fe029e03eebb720115b" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;-P&lt;/code&gt;, &lt;code&gt;-E&lt;/code&gt;, and &lt;code&gt;-S&lt;/code&gt; are equivalent to &lt;code&gt;+'P'&lt;/code&gt;, &lt;code&gt;+'E'&lt;/code&gt;, and &lt;code&gt;+'S'&lt;/code&gt;, except that it is not necessary to include the single quotes to protect them from the shell.</source>
          <target state="translated">オプション &lt;code&gt;-P&lt;/code&gt; 、 &lt;code&gt;-E&lt;/code&gt; 、および &lt;code&gt;-S&lt;/code&gt; は、シェルから保護するために一重引用符を含める必要がないことを除いて、 &lt;code&gt;+'P'&lt;/code&gt; 、 &lt;code&gt;+'E'&lt;/code&gt; 、および &lt;code&gt;+'S'&lt;/code&gt; と同等です。</target>
        </trans-unit>
        <trans-unit id="e0366a9ebac5c17541c6d26640b461361c80a4a4" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;Username&lt;/code&gt; and &lt;code&gt;Password&lt;/code&gt; are used to log on to the remote host &lt;code&gt;Host&lt;/code&gt;. &lt;code&gt;Username&lt;/code&gt;, if omitted, defaults to the current username. &lt;code&gt;Password&lt;/code&gt; is empty by default.</source>
          <target state="translated">オプションの &lt;code&gt;Username&lt;/code&gt; と &lt;code&gt;Password&lt;/code&gt; は、リモートホスト &lt;code&gt;Host&lt;/code&gt; へのログオンに使用されます。 &lt;code&gt;Username&lt;/code&gt; を省略すると、デフォルトで現在のユーザー名になります。 &lt;code&gt;Password&lt;/code&gt; はデフォルトでは空です。</target>
        </trans-unit>
        <trans-unit id="9dcd58b0792b2c9e9c3b6819e8f16b982914d604" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;binary&lt;/code&gt; and &lt;code&gt;encoding&lt;/code&gt; are common for all I/O servers in OTP, while &lt;code&gt;echo&lt;/code&gt; and &lt;code&gt;expand&lt;/code&gt; are valid only for this I/O server. Option &lt;code&gt;unicode&lt;/code&gt; notifies how characters are put on the physical I/O device, that is, if the terminal itself is Unicode-aware. It does not affect how characters are sent in the I/O protocol, where each request contains encoding information for the provided or returned data.</source>
          <target state="translated">オプションの &lt;code&gt;binary&lt;/code&gt; と &lt;code&gt;encoding&lt;/code&gt; はOTPのすべてのI / Oサーバーに共通ですが、 &lt;code&gt;echo&lt;/code&gt; と &lt;code&gt;expand&lt;/code&gt; はこのI / Oサーバーにのみ有効です。オプション &lt;code&gt;unicode&lt;/code&gt; は、物理I / Oデバイスに文字がどのように配置されるか、つまり、端末自体がUnicodeに対応しているかどうかを通知します。I / Oプロトコルでの文字の送信方法には影響しません。各リクエストには、提供または返されたデータのエンコード情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="8ff02c5f14ce17a7d5799eee0ac8c1ea2bf12c76" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;cache&lt;/code&gt; and &lt;code&gt;unique&lt;/code&gt; apply not only to the QLC itself but also to the results of looking up constants, running match specifications, and joining handles.</source>
          <target state="translated">オプションの &lt;code&gt;cache&lt;/code&gt; と &lt;code&gt;unique&lt;/code&gt; は、QLC自体だけでなく、定数の検索、一致指定の実行、およびハンドルの結合の結果にも適用されます。</target>
        </trans-unit>
        <trans-unit id="9580f262070eeecb51ff008fdc6585d927dbc1f8" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;global&lt;/code&gt; and &lt;code&gt;{scope, part()}&lt;/code&gt; work as for &lt;code&gt;&lt;a href=&quot;#split-3&quot;&gt;split/3&lt;/a&gt;&lt;/code&gt;. The return type is always a &lt;code&gt;binary()&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;global&lt;/code&gt; および &lt;code&gt;{scope, part()}&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;#split-3&quot;&gt;split/3&lt;/a&gt;&lt;/code&gt; と同様に機能します。戻り値の型は常に &lt;code&gt;binary()&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="75961960aaa5db134dc677d4d398db1f86aa02d2" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;host&lt;/code&gt; and &lt;code&gt;port&lt;/code&gt; specify the server endpoint to which to connect, and are passed directly to &lt;code&gt;ssh:connect/4&lt;/code&gt;, as are arbitrary ssh options. Common options are &lt;code&gt;user&lt;/code&gt;, &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;user_dir&lt;/code&gt;.</source>
          <target state="translated">オプション &lt;code&gt;host&lt;/code&gt; および &lt;code&gt;port&lt;/code&gt; は、接続先のサーバーエンドポイントを指定し、任意のsshオプションと同様に、 &lt;code&gt;ssh:connect/4&lt;/code&gt; に直接渡されます。一般的なオプションは、 &lt;code&gt;user&lt;/code&gt; 、 &lt;code&gt;password&lt;/code&gt; 、 &lt;code&gt;user_dir&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="51c09aef080d57e48a07185acafc8ce6ebec94f6" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;message_cb&lt;/code&gt; and &lt;code&gt;sender&lt;/code&gt; have semantics identical to those documented in &lt;code&gt;&lt;a href=&quot;diameter_tcp#sender&quot;&gt;diameter_tcp(3)&lt;/a&gt;&lt;/code&gt;, but with the message argument to a &lt;code&gt;recv&lt;/code&gt; callback being as directed by the &lt;code&gt;packet&lt;/code&gt; option.</source>
          <target state="translated">オプション &lt;code&gt;message_cb&lt;/code&gt; および &lt;code&gt;sender&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;diameter_tcp#sender&quot;&gt;diameter_tcp(3)&lt;/a&gt;&lt;/code&gt; に記載されているものと同じセマンティクスを持っていますが、 &lt;code&gt;recv&lt;/code&gt; コールバックへのメッセージ引数は、 &lt;code&gt;packet&lt;/code&gt; オプションによって指示されたとおりです。</target>
        </trans-unit>
        <trans-unit id="668ebce6eb26637e08574b22c150f48b118e610d" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;monitor&lt;/code&gt; and &lt;code&gt;link&lt;/code&gt; are ignored in the list-valued case. An MFA is applied with an additional term prepended to its argument list, and should return either the pid of the handler process that invokes &lt;code&gt;diameter_traffic:request/1&lt;/code&gt; on the argument in order to process the request, or the atom &lt;code&gt;discard&lt;/code&gt;. The handler process need not be local, and diameter need not be started on the remote node, but diameter and relevant application callbacks must be on the code path.</source>
          <target state="translated">リスト値の場合、オプションの &lt;code&gt;monitor&lt;/code&gt; と &lt;code&gt;link&lt;/code&gt; は無視されます。 MFAは、引数リストの前に追加の用語を追加して適用され、要求を処理するために引数で &lt;code&gt;diameter_traffic:request/1&lt;/code&gt; を呼び出すハンドラープロセスのpid 、またはアトム &lt;code&gt;discard&lt;/code&gt; いずれかを返す必要があります。ハンドラープロセスはローカルである必要はなく、diameterはリモートノードで開始される必要はありませんが、diameterと関連するアプリケーションコールバックはコードパス上にある必要があります。</target>
        </trans-unit>
        <trans-unit id="e61d32b3cca20de20d192710649075d0fa3c950e" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;raddr&lt;/code&gt; and &lt;code&gt;rport&lt;/code&gt; specify the remote address and port for a connecting transport and are not valid for a listening transport.</source>
          <target state="translated">オプション &lt;code&gt;raddr&lt;/code&gt; および &lt;code&gt;rport&lt;/code&gt; は、接続トランスポートのリモートアドレスとポートを指定し、リスニングトランスポートには無効です。</target>
        </trans-unit>
        <trans-unit id="d9f19d6b068a72ffa150ad3783e561ce5a572f10" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;raddr&lt;/code&gt; and &lt;code&gt;rport&lt;/code&gt; specify the remote address and port for a connecting transport and not valid for a listening transport: the former is required while latter defaults to 3868 if unspecified. Multiple &lt;code&gt;raddr&lt;/code&gt; options can be specified, in which case the connecting transport in question attempts each in sequence until an association is established.</source>
          <target state="translated">オプション &lt;code&gt;raddr&lt;/code&gt; と &lt;code&gt;rport&lt;/code&gt; は、接続トランスポートのリモートアドレスとポートを指定し、リスニングトランスポートには無効です。前者は必須ですが、指定しない場合、後者はデフォルトで3868になります。複数の &lt;code&gt;raddr&lt;/code&gt; オプションを指定できます。この場合、問題の接続トランスポートは、関連付けが確立されるまで、順番に試行します。</target>
        </trans-unit>
        <trans-unit id="ffb596bacd291beb9c0f85faa25b79b4527311a4" translate="yes" xml:space="preserve">
          <source>Options &lt;code&gt;repeat&lt;/code&gt; and &lt;code&gt;sequence&lt;/code&gt; can be combined to match a sequence multiple times.</source>
          <target state="translated">オプション &lt;code&gt;repeat&lt;/code&gt; と &lt;code&gt;sequence&lt;/code&gt; を組み合わせて、シーケンスを複数回一致させることができます。</target>
        </trans-unit>
        <trans-unit id="2a156299ace864a0d2165f732e3884af6ab552b9" translate="yes" xml:space="preserve">
          <source>Options Accepted By escript</source>
          <target state="translated">escript で受け入れられるオプション</target>
        </trans-unit>
        <trans-unit id="3253e08c4676ac3d9e5c7ba947d4ff7346f3e690" translate="yes" xml:space="preserve">
          <source>Options Menu</source>
          <target state="translated">オプションメニュー</target>
        </trans-unit>
        <trans-unit id="e81a184b61cbd5436906125ea2fd1369abbf5985" translate="yes" xml:space="preserve">
          <source>Options allow to customize the behaviour of the scanner. See also &lt;code&gt;tutorial&lt;/code&gt; on customization functions.</source>
          <target state="translated">オプションにより、スキャナーの動作をカスタマイズできます。カスタマイズ機能の &lt;code&gt;tutorial&lt;/code&gt; もご覧ください。</target>
        </trans-unit>
        <trans-unit id="d1df937b910b748dfde76ee563a39943f8c8982a" translate="yes" xml:space="preserve">
          <source>Options allow to customize the behaviour of the validation.</source>
          <target state="translated">オプションで検証の動作をカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="2d2339a2a5eabae774a416fb2e29a52c85a83319" translate="yes" xml:space="preserve">
          <source>Options allows to customize the behaviour of the XPath scanner.</source>
          <target state="translated">オプションでXPathスキャナの動作をカスタマイズすることができます。</target>
        </trans-unit>
        <trans-unit id="5ffa2c48bad8b2b21cb7fd3c0cdc61a21bc9b14c" translate="yes" xml:space="preserve">
          <source>Options are processed in the order they occur in the list, that is, later options have higher precedence.</source>
          <target state="translated">オプ シ ョ ンは、 リ ス ト 内で出現 し た順に処理 さ れます。</target>
        </trans-unit>
        <trans-unit id="5257320eb8c67ae70e398e048755a4a432e71e80" translate="yes" xml:space="preserve">
          <source>Options available to &lt;code&gt;&lt;a href=&quot;#call-4&quot;&gt;call/4&lt;/a&gt;&lt;/code&gt; when sending an outgoing Diameter request. Has one of the following types.</source>
          <target state="translated">発信Diameterリクエストを送信するときに &lt;code&gt;&lt;a href=&quot;#call-4&quot;&gt;call/4&lt;/a&gt;&lt;/code&gt; で使用できるオプション。次のいずれかのタイプです。</target>
        </trans-unit>
        <trans-unit id="43baa3cfdab8fbfb50fe057ed27dea4648766c66" translate="yes" xml:space="preserve">
          <source>Options can be set to make the release package include source code and the ERTS binary as well.</source>
          <target state="translated">オプションは、リリースパッケージにソースコードとERTSバイナリを含めるように設定することができます。</target>
        </trans-unit>
        <trans-unit id="ba5ad669703dff008e4b32951b24529560fa2ff0" translate="yes" xml:space="preserve">
          <source>Options common to clients and daemons</source>
          <target state="translated">クライアントとデーモンに共通のオプション</target>
        </trans-unit>
        <trans-unit id="19f6806cc859d20b910b98cdb91856f7d205c282" translate="yes" xml:space="preserve">
          <source>Options defining a Diameter application. Has one of the following types.</source>
          <target state="translated">Diameter アプリケーションを定義するオプション。以下のいずれかのタイプを持っています。</target>
        </trans-unit>
        <trans-unit id="85fa7bc47c34fb7d169b6cba28b8680c98650d6d" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;&lt;a href=&quot;#cmd-2&quot;&gt;os:cmd/2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#cmd-2&quot;&gt;os:cmd/2&lt;/a&gt;&lt;/code&gt; のオプション</target>
        </trans-unit>
        <trans-unit id="c747f7830167fa762f894dbecb9703a094daa7ee" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;&lt;a href=&quot;#connect-3&quot;&gt;clients&lt;/a&gt;&lt;/code&gt;. The individual options are further explained below or by following the hyperlinks.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#connect-3&quot;&gt;clients&lt;/a&gt;&lt;/code&gt; オプション。個々のオプションについては、以下でさらに説明するか、ハイパーリンクをたどって説明します。</target>
        </trans-unit>
        <trans-unit id="7a1ffff775190d7efc280e2ad290e1f4ea5665b9" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;&lt;a href=&quot;#daemon-1&quot;&gt;daemons&lt;/a&gt;&lt;/code&gt;. The individual options are further explained below or by following the hyperlinks.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#daemon-1&quot;&gt;daemons&lt;/a&gt;&lt;/code&gt; オプション。個々のオプションについては、以下でさらに説明するか、ハイパーリンクをたどって説明します。</target>
        </trans-unit>
        <trans-unit id="b1da4f4ded338618658f16678eab34365d8af2b8" translate="yes" xml:space="preserve">
          <source>Options for &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt()&lt;/a&gt;&lt;/code&gt; のオプション。</target>
        </trans-unit>
        <trans-unit id="eb4d9d68b8a4bdc7b530015f01b070a24bbaaaae" translate="yes" xml:space="preserve">
          <source>Options for ROOT, Intermediate and Peer certs</source>
          <target state="translated">ROOT、中級、ピアサートのオプション</target>
        </trans-unit>
        <trans-unit id="9042d93fd9440ddea881c97ce0150fe0b79baee4" translate="yes" xml:space="preserve">
          <source>Options for hardening are described in the &lt;code&gt;&lt;a href=&quot;hardening&quot;&gt;Hardening SSH&lt;/a&gt;&lt;/code&gt; chapter. How the options for algorithm configuration interact are described in the &lt;code&gt;&lt;a href=&quot;configure_algos&quot;&gt;Configuring algorithms in SSH&lt;/a&gt;&lt;/code&gt; chapter.</source>
          <target state="translated">強化のオプションについては、 &lt;code&gt;&lt;a href=&quot;hardening&quot;&gt;Hardening SSH&lt;/a&gt;&lt;/code&gt; 強化の章で説明しています。アルゴリズム構成のオプションがどのように相互作用するかについては、 &lt;code&gt;&lt;a href=&quot;configure_algos&quot;&gt;Configuring algorithms in SSH&lt;/a&gt;&lt;/code&gt; の構成の章で説明されています。</target>
        </trans-unit>
        <trans-unit id="566dbd8ceb4282768aef5cb41d2fb475cfe4f53a" translate="yes" xml:space="preserve">
          <source>Options for level &lt;code&gt;ip&lt;/code&gt;:</source>
          <target state="translated">レベル &lt;code&gt;ip&lt;/code&gt; オプション：</target>
        </trans-unit>
        <trans-unit id="b6254ef355357f5050a678c222e0253528618965" translate="yes" xml:space="preserve">
          <source>Options for level &lt;code&gt;ipv6&lt;/code&gt;:</source>
          <target state="translated">レベル &lt;code&gt;ipv6&lt;/code&gt; のオプション：</target>
        </trans-unit>
        <trans-unit id="282d3bbec47472c7487917ac2473620e7adb1b32" translate="yes" xml:space="preserve">
          <source>Options for level &lt;code&gt;otp&lt;/code&gt;:</source>
          <target state="translated">レベル &lt;code&gt;otp&lt;/code&gt; オプション：</target>
        </trans-unit>
        <trans-unit id="fea2e1f6451d5a765df0b487e0d49558cf7a79e9" translate="yes" xml:space="preserve">
          <source>Options for level &lt;code&gt;sctp&lt;/code&gt;:</source>
          <target state="translated">レベル &lt;code&gt;sctp&lt;/code&gt; のオプション：</target>
        </trans-unit>
        <trans-unit id="29a1be83b21515714e747f576513d1ff3041b0c9" translate="yes" xml:space="preserve">
          <source>Options for level &lt;code&gt;socket&lt;/code&gt;:</source>
          <target state="translated">レベル &lt;code&gt;socket&lt;/code&gt; オプション：</target>
        </trans-unit>
        <trans-unit id="26fc97cb1ab2be800ebf0710071f234e21a67fc7" translate="yes" xml:space="preserve">
          <source>Options for level &lt;code&gt;tcp&lt;/code&gt;:</source>
          <target state="translated">レベル &lt;code&gt;tcp&lt;/code&gt; のオプション：</target>
        </trans-unit>
        <trans-unit id="357a3218944002f2aa86ac8760669dc098099654" translate="yes" xml:space="preserve">
          <source>Options for level &lt;code&gt;udp&lt;/code&gt;:</source>
          <target state="translated">レベル &lt;code&gt;udp&lt;/code&gt; オプション：</target>
        </trans-unit>
        <trans-unit id="1ff564237d1265e1d9e5c013163df9ff0e749c0f" translate="yes" xml:space="preserve">
          <source>Options for public key encrypt/decrypt. Only RSA is supported.</source>
          <target state="translated">公開鍵の暗号化/復号化のオプション。RSAのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="90b13cdea6bce419cba673b7f212cd4d1f015a67" translate="yes" xml:space="preserve">
          <source>Options for sign and verify.</source>
          <target state="translated">サインと検証のためのオプション。</target>
        </trans-unit>
        <trans-unit id="de2af7cb9d8a73a31380a359d67d255134013079" translate="yes" xml:space="preserve">
          <source>Options for the default ssh_file callback module</source>
          <target state="translated">既定の ssh_file コールバックモジュールのオプション</target>
        </trans-unit>
        <trans-unit id="bc2f2c736a746d27a97fe210a5df470704203acf" translate="yes" xml:space="preserve">
          <source>Options for the ssh_agent callback module</source>
          <target state="translated">ssh_agent コールバックモジュールのオプション</target>
        </trans-unit>
        <trans-unit id="271cee05e17a96561b06a7392bd67ac3d4ab26c5" translate="yes" xml:space="preserve">
          <source>Options in the environment variable EUNIT are also included last in the option list, i.e., have lower precedence than those in &lt;code&gt;Options&lt;/code&gt;.</source>
          <target state="translated">環境変数EUNITのオプションもオプションリストの最後に含まれます。つまり、 &lt;code&gt;Options&lt;/code&gt; よりも優先順位が低くなります。</target>
        </trans-unit>
        <trans-unit id="2d595c0adb932691342148a1f5ccb473e844d862" translate="yes" xml:space="preserve">
          <source>Options passed to &lt;code&gt;erlang:spawn_opt/2&lt;/code&gt; when spawning a process for an incoming Diameter request. Options &lt;code&gt;monitor&lt;/code&gt; and &lt;code&gt;link&lt;/code&gt; are ignored.</source>
          <target state="translated">着信Diameterリクエストのプロセスを生成するときに &lt;code&gt;erlang:spawn_opt/2&lt;/code&gt; に渡されるオプション。オプションの &lt;code&gt;monitor&lt;/code&gt; と &lt;code&gt;link&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="fb6adb442fc6700a7d845b5b6f08d580352873cb" translate="yes" xml:space="preserve">
          <source>Options preceding &lt;code&gt;-erl_args&lt;/code&gt; that &lt;code&gt;Common Test&lt;/code&gt; does not recognize are also passed on to the emulator untouched. By &lt;code&gt;-erl_args&lt;/code&gt; the user can specify flags with the same name, but with different destinations, on the &lt;code&gt;ct_run&lt;/code&gt; command line.</source>
          <target state="translated">前のオプション &lt;code&gt;-erl_args&lt;/code&gt; という &lt;code&gt;Common Test&lt;/code&gt; もそのままエミュレータに渡されます認識しませんが。 &lt;code&gt;-erl_args&lt;/code&gt; ユーザーが上で、同じ名前のフラグを指定するが、異なる宛先を持つことができ &lt;code&gt;ct_run&lt;/code&gt; のコマンドライン。</target>
        </trans-unit>
        <trans-unit id="ff1becd31ec7dd72ea26d9a9fd1b56a0ae87b96b" translate="yes" xml:space="preserve">
          <source>Options provided to &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/[3,4]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/[3,4]&lt;/a&gt;&lt;/code&gt; に提供されるオプション。</target>
        </trans-unit>
        <trans-unit id="be2f1fd15114f1dab339629da4d391e98859a026" translate="yes" xml:space="preserve">
          <source>Options provided to &lt;code&gt;&lt;a href=&quot;ssh#daemon-2&quot;&gt;ssh:daemon/2,3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ssh#daemon-2&quot;&gt;ssh:daemon/2,3&lt;/a&gt;&lt;/code&gt; に提供されるオプション。</target>
        </trans-unit>
        <trans-unit id="34209f6f492a2966caf548e5cb61a33749ede09a" translate="yes" xml:space="preserve">
          <source>Options that can be given to the &lt;code&gt;cth_conn_log&lt;/code&gt; hook, which is used for logging of NETCONF and Telnet connections. See &lt;code&gt;&lt;a href=&quot;ct_netconfc#Logging&quot;&gt;ct_netconfc&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;ct_telnet#Logging&quot;&gt;ct_telnet&lt;/a&gt;&lt;/code&gt; for description and examples of how to use this hook.</source>
          <target state="translated">NETCONFおよびTelnet接続のロギングに使用される &lt;code&gt;cth_conn_log&lt;/code&gt; フックに指定できるオプション。このフックの使用方法の説明と例については、 &lt;code&gt;&lt;a href=&quot;ct_netconfc#Logging&quot;&gt;ct_netconfc&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;ct_telnet#Logging&quot;&gt;ct_telnet&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="c9ee1ea2881fd5e5e1f4f2dcf607eb50c3389b53" translate="yes" xml:space="preserve">
          <source>Options that can be used when starting a &lt;code&gt;gen_statem&lt;/code&gt; server through, &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; を介して &lt;code&gt;gen_statem&lt;/code&gt; サーバーを起動するときに使用できるオプション。</target>
        </trans-unit>
        <trans-unit id="228dffd69b4e3c0e126c643a9f0b0e320c2b02c8" translate="yes" xml:space="preserve">
          <source>Options that can be used when starting a &lt;code&gt;gen_statem&lt;/code&gt; server through, for example, &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">たとえば、 &lt;code&gt;&lt;a href=&quot;#start_link-3&quot;&gt;start_link/3&lt;/a&gt;&lt;/code&gt; を介して &lt;code&gt;gen_statem&lt;/code&gt; サーバーを起動するときに使用できるオプション。</target>
        </trans-unit>
        <trans-unit id="d6e5101586b632aaf8a368594dc5123cd9322755" translate="yes" xml:space="preserve">
          <source>Options to configure a &lt;code&gt;ErlNifIOQueue&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ErlNifIOQueue&lt;/code&gt; を構成するオプション。</target>
        </trans-unit>
        <trans-unit id="23d20f728be4aacef3be89090ba5883ef7e28da2" translate="yes" xml:space="preserve">
          <source>Options used for setting up an SSH connection to a NETCONF server.</source>
          <target state="translated">NETCONF サーバへの SSH 接続を設定する際に使用するオプションです。</target>
        </trans-unit>
        <trans-unit id="910207f354e542f3e522ad9da85b70501659257e" translate="yes" xml:space="preserve">
          <source>Options used to customize the behaviour of the parser. Possible options are:</source>
          <target state="translated">パーサーの動作をカスタマイズするためのオプションです。使用可能なオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="42d00fed5d36db33cd37d8b52271d2720789f5a2" translate="yes" xml:space="preserve">
          <source>Options) -&amp;gt;</source>
          <target state="translated">オプション）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="6d118f8e941d56db78406a33fb3a53aed05d43fb" translate="yes" xml:space="preserve">
          <source>Options: see &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt;. Note however that for &lt;code&gt;quick_parse_file/2&lt;/code&gt;, the option &lt;code&gt;no_fail&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">オプション： &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt; を参照してください。ただし、 &lt;code&gt;quick_parse_file/2&lt;/code&gt; の場合、オプション &lt;code&gt;no_fail&lt;/code&gt; はデフォルトで &lt;code&gt;true&lt;/code&gt; であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="b12501090de711d45f4f134407e2f3085fb7dedb" translate="yes" xml:space="preserve">
          <source>Opts :: [&lt;code&gt;&lt;a href=&quot;#type-debug_opt&quot;&gt;debug_opt()&lt;/a&gt;&lt;/code&gt; | &lt;code&gt;&lt;a href=&quot;#type-hibernate_after_opt&quot;&gt;hibernate_after_opt()&lt;/a&gt;&lt;/code&gt;],</source>
          <target state="translated">オプション:: [ &lt;code&gt;&lt;a href=&quot;#type-debug_opt&quot;&gt;debug_opt()&lt;/a&gt;&lt;/code&gt; | &lt;code&gt;&lt;a href=&quot;#type-hibernate_after_opt&quot;&gt;hibernate_after_opt()&lt;/a&gt;&lt;/code&gt; ]、</target>
        </trans-unit>
        <trans-unit id="755886f8ab2742679da1bf59039bff5251443996" translate="yes" xml:space="preserve">
          <source>Opts :: [&lt;code&gt;&lt;a href=&quot;#type-enter_loop_opt&quot;&gt;enter_loop_opt()&lt;/a&gt;&lt;/code&gt;],</source>
          <target state="translated">Opts :: [&lt;code&gt;&lt;a href=&quot;#type-enter_loop_opt&quot;&gt;enter_loop_opt()&lt;/a&gt;&lt;/code&gt;],</target>
        </trans-unit>
        <trans-unit id="9ef1aeb0b64bab0b8696b0aebb6c7bffc58deff9" translate="yes" xml:space="preserve">
          <source>Opts :: [&lt;code&gt;&lt;a href=&quot;#type-start_opt&quot;&gt;start_opt()&lt;/a&gt;&lt;/code&gt;]) -&amp;gt;</source>
          <target state="translated">オプション:: [ &lt;code&gt;&lt;a href=&quot;#type-start_opt&quot;&gt;start_opt()&lt;/a&gt;&lt;/code&gt; ]）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="afce6d0b0f239ad1ab536fe15749163d8cbfb224" translate="yes" xml:space="preserve">
          <source>Opts :: [compressed | verbose | cooked]) -&amp;gt;</source>
          <target state="translated">オプション:: [圧縮| 詳細| 調理済み]）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9ddc3f14766efb56c4d34a9542fe728065e02b6b" translate="yes" xml:space="preserve">
          <source>Or - if building a 64bit version:</source>
          <target state="translated">または-64bit版をビルドする場合。</target>
        </trans-unit>
        <trans-unit id="5326c62b422be5d15a751d74a2dc4fcf60deb938" translate="yes" xml:space="preserve">
          <source>Or calls the following if the process is to terminate:</source>
          <target state="translated">または、プロセスを終了させる場合は以下を呼び出します。</target>
        </trans-unit>
        <trans-unit id="ba69cd0427a638368d97eab4ad9466aab5343d29" translate="yes" xml:space="preserve">
          <source>Or perhaps in combination with constants:</source>
          <target state="translated">定数との組み合わせでも良いかもしれません。</target>
        </trans-unit>
        <trans-unit id="01433e00bc9b318bce7a3cc505bdb311b1e7b75c" translate="yes" xml:space="preserve">
          <source>Or resulting in the next clause being tested in function heads and case expressions.</source>
          <target state="translated">あるいは、次の節が関数ヘッドや大文字小文字の表現でテストされることになります。</target>
        </trans-unit>
        <trans-unit id="0045ed6a97a1146a04c393e163018af002e6d4f9" translate="yes" xml:space="preserve">
          <source>Or what happens if the server goes down in the middle of sending a message, leaving the sending client hanging forever in the &lt;code&gt;await_result&lt;/code&gt; function?</source>
          <target state="translated">または、サーバーがメッセージの送信中にダウンし、送信クライアントが &lt;code&gt;await_result&lt;/code&gt; 関数で永久にハングしたままになるとどうなりますか？</target>
        </trans-unit>
        <trans-unit id="66e4dcf09aeb43d320a42f1b4be9f68e9c1bc539" translate="yes" xml:space="preserve">
          <source>Oracle Java SE JDK -- The Java Development Kit (Standard Edition). Required for building the application &lt;code&gt;jinterface&lt;/code&gt;. At least version 1.6.0 of the JDK is required.</source>
          <target state="translated">Oracle Java SE JDK-Java開発キット（Standard Edition）。アプリケーション &lt;code&gt;jinterface&lt;/code&gt; を構築するために必要です。JDKのバージョン1.6.0以降が必要です。</target>
        </trans-unit>
        <trans-unit id="46e91eb4640ec2930b03548b549f832b4d7231f2" translate="yes" xml:space="preserve">
          <source>Order of Versions</source>
          <target state="translated">バージョン順</target>
        </trans-unit>
        <trans-unit id="0bf474cf8ba0ba095b74a741f3d8323580f1cc75" translate="yes" xml:space="preserve">
          <source>Ordered_set Tables</source>
          <target state="translated">Ordered_set テーブル</target>
        </trans-unit>
        <trans-unit id="7d70c02187561212366cd733179443acd95da909" translate="yes" xml:space="preserve">
          <source>Orders &lt;code&gt;Common Test&lt;/code&gt; to repeat execution of all the cases in the group a given number of times, or until any, or all, cases fail or succeed.</source>
          <target state="translated">受注 &lt;code&gt;Common Test&lt;/code&gt; グループ内の所定の回数を例すべての実行を繰り返す、または任意の、または全てまで、ケースが失敗するか成功します。</target>
        </trans-unit>
        <trans-unit id="d2f0ae466f7c5d340f95e5db43c368a9a3b0bc8a" translate="yes" xml:space="preserve">
          <source>Orders &lt;code&gt;Common Test&lt;/code&gt; to repeat execution of the cases in the group a given number of times, or until any, or all, cases fail or succeed.</source>
          <target state="translated">受注 &lt;code&gt;Common Test&lt;/code&gt; グループ内の所定の回数を例実行を繰り返す、または任意の、または全てまで、ケースが失敗するか成功します。</target>
        </trans-unit>
        <trans-unit id="636580cb18b2a3d3ee70fe45f93fcb8012a1efb3" translate="yes" xml:space="preserve">
          <source>Orders a generic server to exit with the specified &lt;code&gt;Reason&lt;/code&gt; and waits for it to terminate. The &lt;code&gt;gen_server&lt;/code&gt; process calls &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt; Module:terminate/2&lt;/a&gt;&lt;/code&gt; before exiting.</source>
          <target state="translated">指定された &lt;code&gt;Reason&lt;/code&gt; で汎用サーバーを終了するように命令し、サーバーが終了するのを待ちます。 &lt;code&gt;gen_server&lt;/code&gt; のプロセスを呼び出す &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt; Module:terminate/2&lt;/a&gt;&lt;/code&gt; 終了する前に。</target>
        </trans-unit>
        <trans-unit id="5112607d3f38b5535b071c81b4e3ced527521a31" translate="yes" xml:space="preserve">
          <source>Orders a generic server to exit with the specified &lt;code&gt;Reason&lt;/code&gt; and waits for it to terminate. The &lt;code&gt;gen_server&lt;/code&gt; process calls &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt;Module:terminate/2&lt;/a&gt;&lt;/code&gt; before exiting.</source>
          <target state="translated">指定された &lt;code&gt;Reason&lt;/code&gt; 終了するように汎用サーバーに命令し、終了するまで待機します。 &lt;code&gt;gen_server&lt;/code&gt; のプロセスを呼び出す &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt;Module:terminate/2&lt;/a&gt;&lt;/code&gt; 終了する前に。</target>
        </trans-unit>
        <trans-unit id="addadfcd76036a3c6afad7bab40aa94a4dc339ad" translate="yes" xml:space="preserve">
          <source>Orders event manager &lt;code&gt;EventMgrRef&lt;/code&gt; to exit with the specifies &lt;code&gt;Reason&lt;/code&gt; and waits for it to terminate. Before terminating, &lt;code&gt;gen_event&lt;/code&gt; calls &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt; Module:terminate(stop,...)&lt;/a&gt;&lt;/code&gt; for each installed event handler.</source>
          <target state="translated">イベントマネージャ &lt;code&gt;EventMgrRef&lt;/code&gt; に、指定された &lt;code&gt;Reason&lt;/code&gt; 終了するように命令し、終了するのを待ちます。終了する前に、 &lt;code&gt;gen_event&lt;/code&gt; はインストールされている各イベントハンドラーに対して &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt; Module:terminate(stop,...)&lt;/a&gt;&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="54d7ea1c4f89a8a332559591ee4debf050cee229" translate="yes" xml:space="preserve">
          <source>Orders event manager &lt;code&gt;EventMgrRef&lt;/code&gt; to exit with the specifies &lt;code&gt;Reason&lt;/code&gt; and waits for it to terminate. Before terminating, &lt;code&gt;gen_event&lt;/code&gt; calls &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt;Module:terminate(stop,...)&lt;/a&gt;&lt;/code&gt; for each installed event handler.</source>
          <target state="translated">イベントマネージャー &lt;code&gt;EventMgrRef&lt;/code&gt; に、指定された &lt;code&gt;Reason&lt;/code&gt; 終了するように命令し、終了するまで待機します。終了する前に、 &lt;code&gt;gen_event&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;#Module:terminate-2&quot;&gt;Module:terminate(stop,...)&lt;/a&gt;&lt;/code&gt; インストールされているイベントハンドラごとにModule：terminate（stop、...）を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a3f48e6002fbd3799add791dc0a450399f2f90c2" translate="yes" xml:space="preserve">
          <source>Orders the &lt;code&gt;gen_statem&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; to exit with the specified &lt;code&gt;Reason&lt;/code&gt; and waits for it to terminate. The &lt;code&gt;gen_statem&lt;/code&gt; calls &lt;code&gt;&lt;a href=&quot;#Module:terminate-3&quot;&gt;Module:terminate/3&lt;/a&gt;&lt;/code&gt; before exiting.</source>
          <target state="translated">指定された &lt;code&gt;Reason&lt;/code&gt; 終了するように &lt;code&gt;gen_statem&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; に命令し、それが終了するのを待ちます。 &lt;code&gt;gen_statem&lt;/code&gt; は呼び出す &lt;code&gt;&lt;a href=&quot;#Module:terminate-3&quot;&gt;Module:terminate/3&lt;/a&gt;&lt;/code&gt; 終了する前に。</target>
        </trans-unit>
        <trans-unit id="21b34b1ca6772cefd2286c0a8bd7c2c47fffae8f" translate="yes" xml:space="preserve">
          <source>Orders the process to exit with the specified &lt;code&gt;Reason&lt;/code&gt; and waits for it to terminate.</source>
          <target state="translated">指定された &lt;code&gt;Reason&lt;/code&gt; でプロセスが終了するように命令し、プロセスが終了するのを待ちます。</target>
        </trans-unit>
        <trans-unit id="a61c180dee133a0d4fb6e99797fd60387a9fa2b3" translate="yes" xml:space="preserve">
          <source>Orders the process to terminate with the specified &lt;code&gt;Reason&lt;/code&gt;. The termination is done asynchronously, so it is not guaranteed that the process is terminated when the function returns.</source>
          <target state="translated">指定された &lt;code&gt;Reason&lt;/code&gt; でプロセスを終了するように命令します。終了は非同期で行われるため、関数が戻ったときにプロセスが終了することは保証されていません。</target>
        </trans-unit>
        <trans-unit id="ccb8dd4b62075b726550209fcb7d0f2adb744793" translate="yes" xml:space="preserve">
          <source>Ordinary characters that must match the next input character.</source>
          <target state="translated">次の入力文字と一致しなければならない普通の文字。</target>
        </trans-unit>
        <trans-unit id="e33058c8aca144db86ea897b7f2317a8d1c1af9d" translate="yes" xml:space="preserve">
          <source>Origin-Host AVP</source>
          <target state="translated">オリジンホストAVP</target>
        </trans-unit>
        <trans-unit id="66ca57643d2d91ab73b0b3763337e2fec53749fc" translate="yes" xml:space="preserve">
          <source>Origin-Realm AVP</source>
          <target state="translated">オリジンリアルムAVP</target>
        </trans-unit>
        <trans-unit id="236ee85d9ea34d47b8bad24ef64b77e613147f6c" translate="yes" xml:space="preserve">
          <source>Origin-State-Id AVP</source>
          <target state="translated">オリジン-ステートID AVP</target>
        </trans-unit>
        <trans-unit id="8a2b322ac24d0d94010349833607bcb6c362fc2e" translate="yes" xml:space="preserve">
          <source>Origin-State-Id is optional but, if configured, will be included in outgoing CER/CEA and DWR/DWA messages. Setting a value of &lt;code&gt;0&lt;/code&gt; (zero) is equivalent to not setting a value, as documented in RFC 6733. The function &lt;code&gt;&lt;a href=&quot;#origin_state_id-0&quot;&gt;origin_state_id/0&lt;/a&gt;&lt;/code&gt; can be used as to retrieve a value that is computed when the diameter application is started.</source>
          <target state="translated">Origin-State-Idはオプションですが、構成されている場合、発信CER / CEAおよびDWR / DWAメッセージに含まれます。値 &lt;code&gt;0&lt;/code&gt; （ゼロ）を設定することは、RFC 6733で文書化されているように、値を設定しないことと同じです。関数 &lt;code&gt;&lt;a href=&quot;#origin_state_id-0&quot;&gt;origin_state_id/0&lt;/a&gt;&lt;/code&gt; を使用して、直径アプリケーションの開始時に計算される値を取得できます。</target>
        </trans-unit>
        <trans-unit id="a110457753a54db4b2f584279c17319e7442c3ff" translate="yes" xml:space="preserve">
          <source>Original API</source>
          <target state="translated">オリジナルAPI</target>
        </trans-unit>
        <trans-unit id="e2f0776017330240cb474fc09a019aea6a403d19" translate="yes" xml:space="preserve">
          <source>Originating a Request</source>
          <target state="translated">リクエストの作成</target>
        </trans-unit>
        <trans-unit id="c10643b85fbfbd4fbb63e61c52588993e2ffbfa5" translate="yes" xml:space="preserve">
          <source>Oriya</source>
          <target state="translated">Oriya</target>
        </trans-unit>
        <trans-unit id="42cb2600c161bf7bf85310fb50b63266488059bf" translate="yes" xml:space="preserve">
          <source>Osmanya</source>
          <target state="translated">Osmanya</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="e5f5f875b3d15fa11fe3de5896a4e66d7c090218" translate="yes" xml:space="preserve">
          <source>Other (rare) error condition, such as &lt;code&gt;{error, estale}&lt;/code&gt; if reading from an NFS file system.</source>
          <target state="translated">NFSファイルシステムから読み取る場合の &lt;code&gt;{error, estale}&lt;/code&gt; などの他の（まれな）エラー条件。</target>
        </trans-unit>
        <trans-unit id="03965c1e12674420b58d4f32742d1467e2298c0b" translate="yes" xml:space="preserve">
          <source>Other ASN.1 types and values can differ much from these figures. It is therefore important that you, in every case where you intend to use either of these decodes, perform some tests that show if you will benefit your purpose.</source>
          <target state="translated">他のASN.1のタイプや値は、これらの数値とは大きく異なることがあります。したがって、これらのデコードのいずれかを使用しようとする場合には必ず、目的に役立つかどうかを示すいくつかのテストを行うことが重要です。</target>
        </trans-unit>
        <trans-unit id="c1385ef92fd62e1027c2fed35303a7d7f5d9ee0f" translate="yes" xml:space="preserve">
          <source>Other Flags</source>
          <target state="translated">その他の国旗</target>
        </trans-unit>
        <trans-unit id="dec81ea1827d7684fb9060cf49585a878d5be333" translate="yes" xml:space="preserve">
          <source>Other PCRE-specific options can be set by the application when the compiling or matching functions are called. Sometimes the pattern can contain special leading sequences, such as (*CRLF), to override what the application has set or what has been defaulted. Details are provided in section &lt;code&gt;&lt;a href=&quot;#newline_sequences&quot;&gt; Newline Sequences&lt;/a&gt;&lt;/code&gt; earlier.</source>
          <target state="translated">他のPCRE固有のオプションは、コンパイルまたはマッチング関数が呼び出されたときにアプリケーションによって設定できます。パターンには、（* CRLF）などの特別な先行シーケンスを含めて、アプリケーションが設定したものやデフォルトになっているものをオーバーライドできる場合があります。詳細は、前のセクション &lt;code&gt;&lt;a href=&quot;#newline_sequences&quot;&gt; Newline Sequences&lt;/a&gt;&lt;/code&gt; います。</target>
        </trans-unit>
        <trans-unit id="db5a9e63db2cdafd4d9a58a4d1e203908f440948" translate="yes" xml:space="preserve">
          <source>Other PCRE-specific options can be set by the application when the compiling or matching functions are called. Sometimes the pattern can contain special leading sequences, such as (*CRLF), to override what the application has set or what has been defaulted. Details are provided in section &lt;code&gt;&lt;a href=&quot;#newline_sequences&quot;&gt;Newline Sequences&lt;/a&gt;&lt;/code&gt; earlier.</source>
          <target state="translated">その他のPCRE固有のオプションは、コンパイルまたはマッチング関数が呼び出されたときにアプリケーションで設定できます。場合によっては、パターンに（* CRLF）などの特別な先行シーケンスを含めて、アプリケーションが設定したものやデフォルトの設定をオーバーライドすることができます。詳細は、前のセクション「 &lt;code&gt;&lt;a href=&quot;#newline_sequences&quot;&gt;Newline Sequences&lt;/a&gt;&lt;/code&gt; 提供されています。</target>
        </trans-unit>
        <trans-unit id="0f49cb27bb45f84c3f80150dae558a48052d7977" translate="yes" xml:space="preserve">
          <source>Other Storage Media</source>
          <target state="translated">その他の記憶媒体</target>
        </trans-unit>
        <trans-unit id="d244aac16bfbb22cf74ea0c33f98a68a4cf6d192" translate="yes" xml:space="preserve">
          <source>Other Tools</source>
          <target state="translated">その他のツール</target>
        </trans-unit>
        <trans-unit id="302303d7df48684e7df86411d56b9659af7d97fb" translate="yes" xml:space="preserve">
          <source>Other Unicode encodings than integers representing code points or UTF-8 in binaries are referred to as &quot;external encodings&quot;. The ISO Latin-1 encoding is in binaries and lists referred to as latin1-encoding.</source>
          <target state="translated">バイナリ内のコードポイントを表す整数や UTF-8 以外の Unicode エンコーディングは「外部エンコーディング」と呼ばれています。ISO Latin-1 エンコーディングは、バイナリやリストでは latin1-encoding と呼ばれています。</target>
        </trans-unit>
        <trans-unit id="ed0cea3720246c22c3a30bbc4492b0bc7ca1703c" translate="yes" xml:space="preserve">
          <source>Other addresses are possible, for example Linux implements &quot;Abstract Addresses&quot;. See the documentation for Unix Domain Sockets on your system, normally &lt;code&gt;unix&lt;/code&gt; in manual section 7.</source>
          <target state="translated">他のアドレスも可能です。たとえば、Linuxは「抽象アドレス」を実装しています。システムのUnixドメインソケットのドキュメントを参照してください。通常は、手動セクション7の &lt;code&gt;unix&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dd29435e6c5d5cb295da7f257e1e953a855af66c" translate="yes" xml:space="preserve">
          <source>Other applications like ssl/tls or https might have options that are passed down to the &lt;code&gt;public_key:pkix_verify_hostname&lt;/code&gt;. You will probably not have to call it directly</source>
          <target state="translated">ssl / tlsやhttpsなどの他のアプリケーションには、 &lt;code&gt;public_key:pkix_verify_hostname&lt;/code&gt; に渡されるオプションがある場合があります。おそらく直接呼び出す必要はないでしょう</target>
        </trans-unit>
        <trans-unit id="88b1b43caa29bc1ae4d1876c05734a9c8181e624" translate="yes" xml:space="preserve">
          <source>Other characters represent themselves. Only filenames that have exactly the same character in the same position match. Matching is case-sensitive, for example, &quot;a&quot; does not match &quot;A&quot;.</source>
          <target state="translated">その他の文字は自分自身を表します。同じ位置に全く同じ文字を持つファイル名のみがマッチします。マッチングは大文字と小文字を区別し、例えば &quot;a &quot;は &quot;A &quot;とは一致しません。</target>
        </trans-unit>
        <trans-unit id="14464638b9e33ce4c0d8ac32a7485fa9028da73b" translate="yes" xml:space="preserve">
          <source>Other combinations, such as &lt;code&gt;{Module,'_',Arity}&lt;/code&gt;, are not allowed. Local functions match wildcards only if option &lt;code&gt;local&lt;/code&gt; is in &lt;code&gt;FlagList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{Module,'_',Arity}&lt;/code&gt; などの他の組み合わせは許可されません。ローカル関数がワイルドカードと一致する &lt;code&gt;local&lt;/code&gt; は、オプションlocalが &lt;code&gt;FlagList&lt;/code&gt; にある場合のみです。</target>
        </trans-unit>
        <trans-unit id="ad1281a2fabb7670b330f0b63f7a590c6d68515e" translate="yes" xml:space="preserve">
          <source>Other configuration parameters exist, to be used for customizing the overload protection behaviour. The same parameters are used both in the standard handler and the disk_log handler, and are documented in the &lt;code&gt;&lt;a href=&quot;logger_chapter#overload_protection&quot;&gt;User's Guide &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">過負荷保護動作をカスタマイズするために使用される他の構成パラメーターが存在します。同じパラメータが標準ハンドラとdisk_logハンドラの両方で使用されており、 &lt;code&gt;&lt;a href=&quot;logger_chapter#overload_protection&quot;&gt;User's Guide &lt;/a&gt;&lt;/code&gt; 記載されています。</target>
        </trans-unit>
        <trans-unit id="885f57e5d13595e0ee4f423a6b4d92f55b55a565" translate="yes" xml:space="preserve">
          <source>Other configuration parameters exist, to be used for customizing the overload protection behaviour. The same parameters are used both in the standard handler and the disk_log handler, and are documented in the &lt;code&gt;&lt;a href=&quot;logger_chapter#overload_protection&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">過負荷保護の動作をカスタマイズするために使用される他の構成パラメーターが存在します。同じハンドラーが標準ハンドラーとdisk_logハンドラーの両方で使用され、 &lt;code&gt;&lt;a href=&quot;logger_chapter#overload_protection&quot;&gt;User's Guide&lt;/a&gt;&lt;/code&gt; 記載されています。</target>
        </trans-unit>
        <trans-unit id="bd2063ac325b87a9381eab00b4e9d208668c9217" translate="yes" xml:space="preserve">
          <source>Other constants (terms and bound variables), all regarded as false</source>
          <target state="translated">その他の定数(項と結合変数)、すべて偽とみなされます。</target>
        </trans-unit>
        <trans-unit id="5785009adfe7a26f06e17419436f0bb3a5dc5365" translate="yes" xml:space="preserve">
          <source>Other data types</source>
          <target state="translated">その他のデータ型</target>
        </trans-unit>
        <trans-unit id="c3ac4deb2089a1f649e5fdba0cc491bef7b16555" translate="yes" xml:space="preserve">
          <source>Other directories in the development environment may be needed. If source code from languages other than Erlang is used, for instance C-code for NIFs, that code should be placed in a separate directory. By convention it is recommended to prefix such directories with the language name, for example &lt;code&gt;c_src&lt;/code&gt; for C, &lt;code&gt;java_src&lt;/code&gt; for Java or &lt;code&gt;go_src&lt;/code&gt; for Go. Directories with &lt;code&gt;_src&lt;/code&gt; suffix indicates that it is a part of the application and the compilation step. The final build artifacts should target the &lt;code&gt;priv/lib&lt;/code&gt; or &lt;code&gt;priv/bin&lt;/code&gt; directories.</source>
          <target state="translated">開発環境の他のディレクトリが必要になる場合があります。 Erlang以外の言語からのソースコード、たとえばNIFのCコードを使用する場合、そのコードは別のディレクトリに配置する必要があります。慣例では、例えばのために、言語の名前で、このようなディレクトリの接頭辞することをお勧めします &lt;code&gt;c_src&lt;/code&gt; Cのために、 &lt;code&gt;java_src&lt;/code&gt; Java用または &lt;code&gt;go_src&lt;/code&gt; 行くため。 &lt;code&gt;_src&lt;/code&gt; サフィックスの付いたディレクトリは、それがアプリケーションおよびコンパイル手順の一部であることを示します。最終的なビルドアーティファクトは、 &lt;code&gt;priv/lib&lt;/code&gt; または &lt;code&gt;priv/bin&lt;/code&gt; ディレクトリをターゲットにする必要があります。</target>
        </trans-unit>
        <trans-unit id="ae9077b452914a72240410cfd78d06125441adc8" translate="yes" xml:space="preserve">
          <source>Other errors than these can occur, as the &lt;code&gt;erlang:halt/1&lt;/code&gt; BIF can generate any message. If the message is not generated by the BIF and does not occur in the list above, it can be because of an error in the emulator. There can however be unusual messages, not mentioned here, which are still connected to an application failure. There is much more information available, so a thorough reading of the crash dump can reveal the crash reason. The size of processes, the number of ETS tables, and the Erlang data on each process stack can be useful to find the problem.</source>
          <target state="translated">&lt;code&gt;erlang:halt/1&lt;/code&gt; BIFは任意のメッセージを生成できるため、これら以外のエラーが発生する可能性があります。メッセージがBIFによって生成されず、上記のリストに表示されない場合は、エミュレーターのエラーが原因である可能性があります。ただし、ここでは説明していませんが、アプリケーションの障害にまだ接続されている異常なメッセージが存在する可能性があります。利用可能な情報がはるかに多いため、クラッシュダンプを完全に読むと、クラッシュの理由が明らかになります。プロセスのサイズ、ETSテーブルの数、各プロセススタックのErlangデータは、問題を見つけるのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="b60efd3d69d9ecb24af68e74d348360a07b5ed6b" translate="yes" xml:space="preserve">
          <source>Other features:</source>
          <target state="translated">その他の特徴。</target>
        </trans-unit>
        <trans-unit id="a58b6dc215a18ea443d12708103eda9efd5d5635" translate="yes" xml:space="preserve">
          <source>Other fields are rarely used. For complete information, see &lt;code&gt;&lt;a href=&quot;http://www.rfc-archive.org/getrfc.php?rfc=2960&quot;&gt;RFC 2960&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13&quot;&gt;Sockets API Extensions for SCTP&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">他のフィールドはほとんど使用されません。詳細については、 &lt;code&gt;&lt;a href=&quot;http://www.rfc-archive.org/getrfc.php?rfc=2960&quot;&gt;RFC 2960&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;http://tools.ietf.org/html/draft-ietf-tsvwg-sctpsocket-13&quot;&gt;Sockets API Extensions for SCTP&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="cbd6de3d10f2fc66f49e8c1b345f9c0059ed9ba5" translate="yes" xml:space="preserve">
          <source>Other functions that create sets are &lt;code&gt;&lt;a href=&quot;#from_external-2&quot;&gt;from_external/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#from_sets-1&quot;&gt;from_sets/1&lt;/a&gt;&lt;/code&gt;. Special cases of &lt;code&gt;from_term/2&lt;/code&gt; are &lt;code&gt;&lt;a href=&quot;#a_function-1&quot;&gt;a_function/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#empty_set-0&quot;&gt;empty_set/0&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#family-1&quot;&gt;family/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#relation-1&quot;&gt;relation/1,2&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#set-1&quot;&gt;set/1,2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">セットを作成する他の関数は &lt;code&gt;&lt;a href=&quot;#from_external-2&quot;&gt;from_external/2&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#from_sets-1&quot;&gt;from_sets/1&lt;/a&gt;&lt;/code&gt; です。特別な場合 &lt;code&gt;from_term/2&lt;/code&gt; である &lt;code&gt;&lt;a href=&quot;#a_function-1&quot;&gt;a_function/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#empty_set-0&quot;&gt;empty_set/0&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#family-1&quot;&gt;family/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#relation-1&quot;&gt;relation/1,2&lt;/a&gt;&lt;/code&gt; 、及び &lt;code&gt;&lt;a href=&quot;#set-1&quot;&gt;set/1,2&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d8b80772e0f8b1d872444ba18ad7b48f4cc4cfe" translate="yes" xml:space="preserve">
          <source>Other letter</source>
          <target state="translated">その他の手紙</target>
        </trans-unit>
        <trans-unit id="1e25df6c3ebdcf4ee11a121bc16f17e603a8b7df" translate="yes" xml:space="preserve">
          <source>Other match specs activates tracing of calls to &lt;code&gt;et:trace_me/4,5&lt;/code&gt; accordingly with &lt;code&gt;erlang:trace_pattern/2&lt;/code&gt;.</source>
          <target state="translated">他の一致仕様では、 &lt;code&gt;erlang:trace_pattern/2&lt;/code&gt; に応じて &lt;code&gt;et:trace_me/4,5&lt;/code&gt; への呼び出しのトレースをアクティブにします。</target>
        </trans-unit>
        <trans-unit id="51ca0c2d75fe6310043838d9fb791594049c226f" translate="yes" xml:space="preserve">
          <source>Other modules can provide a nullary &lt;code&gt;TraverseFun&lt;/code&gt;. An example is &lt;code&gt;gb_table:table/1&lt;/code&gt; in section &lt;code&gt;&lt;a href=&quot;#implementing_a_qlc_table&quot;&gt;Implementing a QLC Table&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">他のモジュールは、nullary &lt;code&gt;TraverseFun&lt;/code&gt; を提供できます。例は、「 &lt;code&gt;gb_table:table/1&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#implementing_a_qlc_table&quot;&gt;Implementing a QLC Table&lt;/a&gt;&lt;/code&gt; セクションのgb_table：table / 1です。</target>
        </trans-unit>
        <trans-unit id="17c16931cb7557980e4b6e326788381e28a97c59" translate="yes" xml:space="preserve">
          <source>Other notable features:</source>
          <target state="translated">他にも注目すべき特徴があります。</target>
        </trans-unit>
        <trans-unit id="3022c490a2bd62676beabc0c1b504084140a7de5" translate="yes" xml:space="preserve">
          <source>Other number</source>
          <target state="translated">その他の番号</target>
        </trans-unit>
        <trans-unit id="97bd01729246532af9de85d0c3ab1ddb360d5a4e" translate="yes" xml:space="preserve">
          <source>Other options are:</source>
          <target state="translated">他のオプションは</target>
        </trans-unit>
        <trans-unit id="599ffbd6e95e9102a19874cfc765e0666e6a5f25" translate="yes" xml:space="preserve">
          <source>Other options:</source>
          <target state="translated">その他のオプション</target>
        </trans-unit>
        <trans-unit id="997739492917d646490ffd1fec1419fa6e98b907" translate="yes" xml:space="preserve">
          <source>Other priorities than &lt;code&gt;normal&lt;/code&gt; are normally not needed. When other priorities are used, use them with care, &lt;strong&gt;especially&lt;/strong&gt; priority &lt;code&gt;high&lt;/code&gt;. A process on priority &lt;code&gt;high&lt;/code&gt; is only to perform work for short periods. Busy looping for long periods in a &lt;code&gt;high&lt;/code&gt; priority process causes most likely problems, as important OTP servers run on priority &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;normal&lt;/code&gt; 以外の優先順位は通常必要ありません。他の優先度を使用する場合は、&lt;strong&gt;特に&lt;/strong&gt;優先度が &lt;code&gt;high&lt;/code&gt; 場合は注意して使用してください。優先度が &lt;code&gt;high&lt;/code&gt; プロセスは、短時間の作業のみです。で長時間ビジーループ &lt;code&gt;high&lt;/code&gt; 重要なOTPサーバは優先順位で実行するよう優先度のプロセスは、最も可能性の高い問題が発生し &lt;code&gt;normal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd7bd73139a7f3678d7510386d6ecf37b58dbf90" translate="yes" xml:space="preserve">
          <source>Other problems were different experienced limitations of the OS implementation of mmap:</source>
          <target state="translated">その他の問題は、mmapのOS実装の制限を経験したことが異なっていた。</target>
        </trans-unit>
        <trans-unit id="8dea56314c50bfb058a315994e322b37ac05f071" translate="yes" xml:space="preserve">
          <source>Other processes can read the digraph (default).</source>
          <target state="translated">他のプロセスはディグラフを読むことができます(デフォルト)。</target>
        </trans-unit>
        <trans-unit id="20bc18ec4477d52890b4d5aac0d2cbc92eb389a4" translate="yes" xml:space="preserve">
          <source>Other punctuation</source>
          <target state="translated">その他の句読点</target>
        </trans-unit>
        <trans-unit id="ec9bcce7656bc224a64ce97ba2b5bd792aeb6391" translate="yes" xml:space="preserve">
          <source>Other requirements:</source>
          <target state="translated">その他の要件。</target>
        </trans-unit>
        <trans-unit id="e28544fd56893780941b6044efc20d476e8af135" translate="yes" xml:space="preserve">
          <source>Other states do not normally occur in the output from &lt;code&gt;connect/*&lt;/code&gt;. Rather, they can occur in &lt;code&gt;#sctp_assoc_change{}&lt;/code&gt; events received instead of data in &lt;code&gt;&lt;a href=&quot;#recv-1&quot;&gt;recv/*&lt;/a&gt;&lt;/code&gt; calls. All of them indicate losing the association because of various error conditions, and are listed here for the sake of completeness:</source>
          <target state="translated">その他の状態は、通常、 &lt;code&gt;connect/*&lt;/code&gt; からの出力では発生しません。むしろ、 &lt;code&gt;&lt;a href=&quot;#recv-1&quot;&gt;recv/*&lt;/a&gt;&lt;/code&gt; 呼び出しのデータの代わりに、受信した &lt;code&gt;#sctp_assoc_change{}&lt;/code&gt; イベントで発生する可能性があります。これらはすべて、さまざまなエラー条件のために関連付けが失われたことを示しており、完全を期すためにここにリストされています。</target>
        </trans-unit>
        <trans-unit id="d0a8ec65432412d24f9c042216a5db6173548a99" translate="yes" xml:space="preserve">
          <source>Other symbol</source>
          <target state="translated">その他の記号</target>
        </trans-unit>
        <trans-unit id="577365eaf2b9f85de95baced848e1cc288b22cd3" translate="yes" xml:space="preserve">
          <source>Other table access than reading, such as calling &lt;code&gt;InfoFun&lt;/code&gt;, is assumed to be OK at any time.</source>
          <target state="translated">&lt;code&gt;InfoFun&lt;/code&gt; の呼び出しなど、読み取り以外のテーブルアクセスはいつでも問題ないと想定されます。</target>
        </trans-unit>
        <trans-unit id="24654f0b470cc0982d088fd0b8978733097cbe87" translate="yes" xml:space="preserve">
          <source>Other tuples than the ones defined are ignored.</source>
          <target state="translated">定義されたタプル以外のタプルは無視されます。</target>
        </trans-unit>
        <trans-unit id="15363bfb92322f3fe6ad2718148dd35e33fdb154" translate="yes" xml:space="preserve">
          <source>Other types can be read, and are returned as binaries.</source>
          <target state="translated">その他の型は読み込み可能で、バイナリとして返されます。</target>
        </trans-unit>
        <trans-unit id="cdedf43490cc2ff1da81cd679f5229c3c1cc0879" translate="yes" xml:space="preserve">
          <source>Other types cannot be added or changed.</source>
          <target state="translated">その他のタイプの追加・変更はできません。</target>
        </trans-unit>
        <trans-unit id="70e28792612da22154d851b53e24c945311f74a0" translate="yes" xml:space="preserve">
          <source>Other useful function(s) for debugging the agent are:</source>
          <target state="translated">エージェントをデバッグするための他の有用な関数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="2ebc4c4dd4036621515140929b889184c451a256" translate="yes" xml:space="preserve">
          <source>Other useful information can be found at our GitHub wiki:</source>
          <target state="translated">その他の便利な情報はGitHub wikiにあります。</target>
        </trans-unit>
        <trans-unit id="0531b334dc961f9344129177c8d2945332656c08" translate="yes" xml:space="preserve">
          <source>Other valid options depends on what options are supported by the node identified by &lt;code&gt;Node&lt;/code&gt;. A description of other valid &lt;code&gt;Option&lt;/code&gt;s for the local node of current OTP version can be found in the documentation of &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">その他の有効なオプションは、ノードによって識別される &lt;code&gt;Node&lt;/code&gt; サポートされているオプションによって異なります。現在のOTPバージョンのローカルノードに対する他の有効な &lt;code&gt;Option&lt;/code&gt; の説明は、 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; のドキュメントにあります。</target>
        </trans-unit>
        <trans-unit id="198dd873fca5b5131fb3a9224056b4006b7b1428" translate="yes" xml:space="preserve">
          <source>Otherwise all options valid for function &lt;code&gt;compile/2&lt;/code&gt; are also allowed. Options allowed both for compilation and execution of a match, namely &lt;code&gt;anchored&lt;/code&gt; and &lt;code&gt;{newline, NLSpec}&lt;/code&gt;, affect both the compilation and execution if present together with a non-precompiled regular expression.</source>
          <target state="translated">それ以外の場合は、関数 &lt;code&gt;compile/2&lt;/code&gt; に有効なすべてのオプションも許可されます。オプションは、両方の試合のコンパイルと実行のために許可され、すなわち &lt;code&gt;anchored&lt;/code&gt; および &lt;code&gt;{newline, NLSpec}&lt;/code&gt; 非コンパイル済み正規表現と一緒に存在する場合は、コンパイルと実行の両方に影響を与えます。</target>
        </trans-unit>
        <trans-unit id="e30cc24dff4a8e4fd3505b91e8729e2519c09a8a" translate="yes" xml:space="preserve">
          <source>Otherwise an &lt;code&gt;undef&lt;/code&gt; exception is raised.</source>
          <target state="translated">それ以外の場合は、 &lt;code&gt;undef&lt;/code&gt; 例外が発生します。</target>
        </trans-unit>
        <trans-unit id="397a19a3210257e034ddbc5987f1f58dde936b81" translate="yes" xml:space="preserve">
          <source>Otherwise recreates the exported seed and returns the state. See also &lt;code&gt;&lt;a href=&quot;#export_seed-0&quot;&gt; export_seed/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合は、エクスポートされたシードを再作成し、状態を返します。 &lt;code&gt;&lt;a href=&quot;#export_seed-0&quot;&gt; export_seed/0&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="75ef1eb055dcb5b6ca421038e624721c946bf1b2" translate="yes" xml:space="preserve">
          <source>Otherwise recreates the exported seed and returns the state. See also &lt;code&gt;&lt;a href=&quot;#export_seed-0&quot;&gt;export_seed/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合は、エクスポートされたシードを再作成し、状態を返します。 &lt;code&gt;&lt;a href=&quot;#export_seed-0&quot;&gt;export_seed/0&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b75f15a942afae834871232ccf0ba77e7558f01c" translate="yes" xml:space="preserve">
          <source>Otherwise recreates the exported seed in the process dictionary, and returns the state. See also &lt;code&gt;&lt;a href=&quot;#export_seed-0&quot;&gt;export_seed/0&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合は、エクスポートされたシードをプロセスディクショナリに再作成し、状態を返します。 &lt;code&gt;&lt;a href=&quot;#export_seed-0&quot;&gt;export_seed/0&lt;/a&gt;&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="4516a5a0c8fab848ec459b0a78f55d03b3d5d1ac" translate="yes" xml:space="preserve">
          <source>Otherwise the &lt;code&gt;gen_statem&lt;/code&gt; goes into &lt;code&gt;receive&lt;/code&gt; or hibernation (if &lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;) to wait for the next message. In hibernation the next non-system event awakens the &lt;code&gt;gen_statem&lt;/code&gt;, or rather the next incoming message awakens the &lt;code&gt;gen_statem&lt;/code&gt;, but if it is a system event it goes right back into hibernation. When a new message arrives the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; is called with the corresponding event, and we start again from the top of this sequence.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;gen_statem&lt;/code&gt; は &lt;code&gt;receive&lt;/code&gt; または休止状態（ &lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合）に入り、次のメッセージを待ちます。休止状態では、次の非システムイベントが &lt;code&gt;gen_statem&lt;/code&gt; を起動します。つまり、次の着信メッセージが &lt;code&gt;gen_statem&lt;/code&gt; を起動しますが、システムイベントの場合は、すぐに休止状態に戻ります。新しいメッセージが到着すると、対応するイベントで &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; が呼び出され、このシーケンスの先頭から再開します。</target>
        </trans-unit>
        <trans-unit id="d87b5659173c759cef0ab46aa4a7fb80d00cb3c5" translate="yes" xml:space="preserve">
          <source>Otherwise the &lt;code&gt;gen_statem&lt;/code&gt; goes into &lt;code&gt;receive&lt;/code&gt; or hibernation (if &lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;) to wait for the next message. In hibernation the next non-system event awakens the &lt;code&gt;gen_statem&lt;/code&gt;, or rather the next incoming message awakens the &lt;code&gt;gen_statem&lt;/code&gt;, but if it is a system event it goes right back into hibernation. When a new message arrives the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; is called with the corresponding event, and we start again from the top of this sequence.</source>
          <target state="translated">そうでない場合、 &lt;code&gt;gen_statem&lt;/code&gt; は &lt;code&gt;receive&lt;/code&gt; または休止状態（ &lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; の場合）に入り、次のメッセージを待ちます。休止状態では、次の非システムイベントが &lt;code&gt;gen_statem&lt;/code&gt; を呼び起こすか、次の着信メッセージが &lt;code&gt;gen_statem&lt;/code&gt; を呼び起こしますが、システムイベントの場合は、休止状態に戻ります。新しいメッセージが到着すると、 &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; が対応するイベントで呼び出され、このシーケンスの先頭から再び開始します。</target>
        </trans-unit>
        <trans-unit id="ca5bba34991dc2c836a13ba5d708caac9b079155" translate="yes" xml:space="preserve">
          <source>Otherwise the same as &lt;code&gt;&lt;a href=&quot;#enter_loop-6&quot;&gt;enter_loop/6&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;Server = Server_or_Actions&lt;/code&gt; and &lt;code&gt;Actions = []&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合は、 &lt;code&gt;Server = Server_or_Actions&lt;/code&gt; および &lt;code&gt;Actions = []&lt;/code&gt; 指定した &lt;code&gt;&lt;a href=&quot;#enter_loop-6&quot;&gt;enter_loop/6&lt;/a&gt;&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="7a3e409482e92d7312335dbbdf06b6be17b9baa1" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;Name&lt;/code&gt; is to be a filename.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;Name&lt;/code&gt; はファイル名になります。</target>
        </trans-unit>
        <trans-unit id="00aeea6c12722cc94d58e2f90a9872f32740085b" translate="yes" xml:space="preserve">
          <source>Otherwise, end the cluster.</source>
          <target state="translated">そうでなければ、クラスタを終了します。</target>
        </trans-unit>
        <trans-unit id="721932d781d83d618f6a74c5ad3eea7a7cd92826" translate="yes" xml:space="preserve">
          <source>Otherwise, if function &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; is exported, it is called as &lt;code&gt;'$handle_undefined_function'(&lt;/code&gt;Function, Args).</source>
          <target state="translated">それ以外の場合、関数 &lt;code&gt;'$handle_undefined_function'/2&lt;/code&gt; がエクスポートされると、 &lt;code&gt;'$handle_undefined_function'(&lt;/code&gt; Function、Args）として呼び出されます。</target>
        </trans-unit>
        <trans-unit id="bd45978f4d37112b76326ff6ee1522682525ecd5" translate="yes" xml:space="preserve">
          <source>Otherwise, if the calling process is trapping exits, and/or &lt;code&gt;PidOrPort&lt;/code&gt; is remote, &lt;code&gt;link/1&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, but an exit signal with reason &lt;code&gt;noproc&lt;/code&gt; is sent to the calling process.</source>
          <target state="translated">それ以外の場合、呼び出しプロセスが出口をトラップしているか、 &lt;code&gt;PidOrPort&lt;/code&gt; がリモートの場合、 &lt;code&gt;link/1&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返しますが、理由 &lt;code&gt;noproc&lt;/code&gt; の終了信号が呼び出しプロセスに送信されます。</target>
        </trans-unit>
        <trans-unit id="da43d3db522f1f4c7c74271266d895bb136efa89" translate="yes" xml:space="preserve">
          <source>Otherwise, it returns, if possible, the value of &lt;code&gt;apply(Fun, Args)&lt;/code&gt; after an attempt is made to autoload &lt;code&gt;Module&lt;/code&gt;. If this is not possible, the call fails with exit reason &lt;code&gt;undef&lt;/code&gt;.</source>
          <target state="translated">それ以外の場合は、 &lt;code&gt;Module&lt;/code&gt; のオートロードが試行された後、可能であれば、 &lt;code&gt;apply(Fun, Args)&lt;/code&gt; 値を返します。これが不可能な場合、呼び出しは終了理由 &lt;code&gt;undef&lt;/code&gt; で失敗します。</target>
        </trans-unit>
        <trans-unit id="cacbdaf48917ea52fc8e545a2f82b0aa7f975a90" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;code&gt;gen_server&lt;/code&gt; process terminates immediately.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;gen_server&lt;/code&gt; プロセスはすぐに終了します。</target>
        </trans-unit>
        <trans-unit id="94d92e282ea81d3ea91c85388ba278cc5356a549" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;code&gt;gen_statem&lt;/code&gt; is immediately terminated.</source>
          <target state="translated">それ以外の場合、 &lt;code&gt;gen_statem&lt;/code&gt; はすぐに終了します。</target>
        </trans-unit>
        <trans-unit id="4310db4b8648fe0dc2ce19712dff695071b2d572" translate="yes" xml:space="preserve">
          <source>Otherwise, this option (&lt;code&gt;timeout&lt;/code&gt;) is used as the negotiation timeout only and there is no connection timeout set</source>
          <target state="translated">それ以外の場合、このオプション（ &lt;code&gt;timeout&lt;/code&gt; ）はネゴシエーションタイムアウトとしてのみ使用され、接続タイムアウトは設定されません。</target>
        </trans-unit>
        <trans-unit id="b3f7c8e4e4677a9df71f0dfa15c3c32d290db0d1" translate="yes" xml:space="preserve">
          <source>Our Java code (jinterface, ic) is tested on windows with JDK 8. Get it for Windows and install it, the JRE is not enough.</source>
          <target state="translated">弊社のJavaコード(jinterface,ic)はJDK 8でWindows上でテストしています。Windows用に入手してインストールしてください。</target>
        </trans-unit>
        <trans-unit id="6fc1fe0597f841fdd158f43b025edbb7cffcfe68" translate="yes" xml:space="preserve">
          <source>Our driver data is also extended, we keep track of the socket used for communication with postgres, and also the port, which is needed when we send data to the port with &lt;code&gt;driver_output&lt;/code&gt;. We have a flag &lt;code&gt;connecting&lt;/code&gt; to tell whether the driver is waiting for a connection or waiting for the result of a query. (This is needed, as the entry &lt;code&gt;ready_io&lt;/code&gt; is called both when connecting and when there is a query result.)</source>
          <target state="translated">ドライバーデータも拡張され、postgresとの通信に使用されるソケットと、 &lt;code&gt;driver_output&lt;/code&gt; を使用してポートにデータを送信するときに必要なポートを追跡します。私たちは旗持っ &lt;code&gt;connecting&lt;/code&gt; ドライバが接続を待っているか、クエリの結果を待っているかどうかを伝えることを。（エントリ &lt;code&gt;ready_io&lt;/code&gt; は接続時とクエリ結果がある場合の両方で呼び出されるため、これが必要です。）</target>
        </trans-unit>
        <trans-unit id="f0056bc8aeb56d2dc843d5e275d5c6af5ac8105e" translate="yes" xml:space="preserve">
          <source>Our example test could for example be a simple test of an ftp server, where we perform get, put and delete requests, some of them in parallel. Per default, the result has three sections:</source>
          <target state="translated">テストの例としては、例えば ftp サーバの単純なテストで、get、put、delete のリクエストをいくつか並行して実行します。デフォルトでは、結果は3つのセクションで構成されています。</target>
        </trans-unit>
        <trans-unit id="6438f58ef6f89d7bd274993ab31926c276b0cdc6" translate="yes" xml:space="preserve">
          <source>Our new release, &quot;SECOND&quot;, is now the current release, but we can also see that our &quot;FIRST&quot; release is still permanent. This means that if the node would be restarted now, it would come up running the &quot;FIRST&quot; release again.</source>
          <target state="translated">新しいリリースである &quot;SECOND &quot;は現在のリリースですが、&quot;FIRST &quot;はまだ恒久的なリリースであることがわかります。これは、もし今ノードを再起動した場合、再び &quot;FIRST &quot;リリースを実行していることを意味します。</target>
        </trans-unit>
        <trans-unit id="867b0a717a764649cafbff4174c1ab32b19f1745" translate="yes" xml:space="preserve">
          <source>Outbound binary encoding in binaries</source>
          <target state="translated">バイナリでのアウトバウンドバイナリエンコーディング</target>
        </trans-unit>
        <trans-unit id="59cc61305ef8bc0545ffbb32a894c83964c825a0" translate="yes" xml:space="preserve">
          <source>Outbound percent-encoding in lists and binaries</source>
          <target state="translated">リストとバイナリでのアウトバウンドのパーセンテージエンコーディング</target>
        </trans-unit>
        <trans-unit id="f6e7d5a9598d3a265926a82b01d7b1deec941696" translate="yes" xml:space="preserve">
          <source>Outgoing reply messages will be segmented as needed (see &lt;code&gt;max_pdu_size&lt;/code&gt; below). Segment messages are sent all at once (i.e. no acknowledgement awaited before sending the next segment).</source>
          <target state="translated">発信応答メッセージは必要に応じて分割されます（以下の &lt;code&gt;max_pdu_size&lt;/code&gt; を参照）。セグメントメッセージは一度に送信されます（つまり、次のセグメントを送信する前に確認応答を待機しません）。</target>
        </trans-unit>
        <trans-unit id="db1552aa4fc51b4e7d46fa43321f568f6c953efb" translate="yes" xml:space="preserve">
          <source>Outgoing reply messages will be segmented as needed (see &lt;code&gt;max_pdu_size&lt;/code&gt; below). This value, K, indicate the outstanding window, i.e. how many segments can be outstanding (not acknowledged) at any given time.</source>
          <target state="translated">発信応答メッセージは必要に応じて分割されます（以下の &lt;code&gt;max_pdu_size&lt;/code&gt; を参照）。この値Kは、未解決のウィンドウ、つまり、特定の時点で未解決（確認応答なし）にできるセグメントの数を示します。</target>
        </trans-unit>
        <trans-unit id="685ad21255174c3fd01ff63b9cc3a546c7bc9ee3" translate="yes" xml:space="preserve">
          <source>Output messages are sent without packet lengths. A user-defined protocol must be used between the Erlang process and the external object.</source>
          <target state="translated">出力メッセージはパケット長なしで送信されます。Erlangプロセスと外部オブジェクトの間では、ユーザー定義のプロトコルを使わなければなりません。</target>
        </trans-unit>
        <trans-unit id="3f7c458df3a3815d9db3a23cdf615c8f0139aaad" translate="yes" xml:space="preserve">
          <source>Output to stdout on the server side is also displayed as well as the resulting term from the function call:</source>
          <target state="translated">サーバ側の標準出力への出力と、関数呼び出しの結果の項も表示されます。</target>
        </trans-unit>
        <trans-unit id="1940195f61826f0bf71c04e3e654bd8f616a6a5b" translate="yes" xml:space="preserve">
          <source>Outputs information from parsing the input file and generating the internal tables.</source>
          <target state="translated">入力ファイルを解析して内部テーブルを生成した情報を出力します。</target>
        </trans-unit>
        <trans-unit id="73c0f26b2a7bd194530650de5672dbbf0d19179d" translate="yes" xml:space="preserve">
          <source>Outputs the message &lt;code&gt;Text&lt;/code&gt; (which can be a plain string, an IO-list, or just an atom). The result is always &lt;code&gt;ok&lt;/code&gt;.</source>
          <target state="translated">メッセージ &lt;code&gt;Text&lt;/code&gt; 出力します（プレーン文字列、IOリスト、またはアトムのみ）。結果は常に &lt;code&gt;ok&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="47cdda9f06afdf9eb8f93de49e9252c88f5dc624" translate="yes" xml:space="preserve">
          <source>Outside a character class, a backslash followed by a digit &amp;gt; 0 (and possibly further digits) is a back reference to a capturing subpattern earlier (that is, to its left) in the pattern, provided there have been that many previous capturing left parentheses.</source>
          <target state="translated">文字クラスの外で、0より大きい数字（および場合によってはさらに多くの数字）が後に続くバックスラッシュは、パターン内の以前の（つまり、その左側の）キャプチャサブパターンへの後方参照です。 。</target>
        </trans-unit>
        <trans-unit id="cd6a3b6581f40f67d6587389bf34b0d7ce3534cd" translate="yes" xml:space="preserve">
          <source>Outside a character class, a dot in the pattern matches any character in the subject string except (by default) a character that signifies the end of a line.</source>
          <target state="translated">文字クラスの外では、パターン内のドットは、(デフォルトでは)行末を意味する文字を除いて、件名文字列内の任意の文字にマッチします。</target>
        </trans-unit>
        <trans-unit id="81930bbe14ad5ca39d3f1c5a979f1ece61d2de2e" translate="yes" xml:space="preserve">
          <source>Outside a character class, by default, the escape sequence \R matches any Unicode newline sequence. In non-UTF-8 mode, \R is equivalent to the following:</source>
          <target state="translated">文字クラスの外では、デフォルトでは、エスケープシーケンス \Rは、任意のUnicode改行シーケンスにマッチします。非UTF-8モードでは、Rは以下と同等である。</target>
        </trans-unit>
        <trans-unit id="85b61b9dbc2dcc77797a3d987698e978f37365fe" translate="yes" xml:space="preserve">
          <source>Outside a character class, in the default matching mode, the circumflex character is an assertion that is true only if the current matching point is at the start of the subject string. If argument &lt;code&gt;startoffset&lt;/code&gt; of &lt;code&gt;&lt;a href=&quot;#run-3&quot;&gt;run/3&lt;/a&gt;&lt;/code&gt; is non-zero, circumflex can never match if option &lt;code&gt;multiline&lt;/code&gt; is unset. Inside a character class, circumflex has an entirely different meaning (see below).</source>
          <target state="translated">文字クラスの外側、デフォルトのマッチングモードでは、サーカムフレックス文字は、現在のマッチングポイントが対象文字列の先頭にある場合にのみ真となるアサーションです。 &lt;code&gt;&lt;a href=&quot;#run-3&quot;&gt;run/3&lt;/a&gt;&lt;/code&gt; の引数 &lt;code&gt;startoffset&lt;/code&gt; がゼロ以外の場合、オプション &lt;code&gt;multiline&lt;/code&gt; が設定されていないと、サーカムフレックスは一致しません。文字クラス内では、サーカムフレックスの意味はまったく異なります（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="96066ed4fc24874155ae3f2d4ec23afe749bc90e" translate="yes" xml:space="preserve">
          <source>Outside a character class, the escape sequence \C matches any data unit, regardless if a UTF mode is set. One data unit is one byte. Unlike a dot, \C always matches line-ending characters. The feature is provided in Perl to match individual bytes in UTF-8 mode, but it is unclear how it can usefully be used. As \C breaks up characters into individual data units, matching one unit with \C in a UTF mode means that the remaining string can start with a malformed UTF character. This has undefined results, as PCRE assumes that it deals with valid UTF strings.</source>
          <target state="translated">文字クラス外のエスケープシーケンスは、UTF モードが設定されているかどうかに関わらず、任意のデータ単位にマッチします。1つのデータ単位は1バイトです。ドットとは異なり、\C は常に改行文字にマッチします。この機能は、PerlではUTF-8モードで個々のバイトにマッチするように提供されていますが、それがどのように有用に使用できるかは不明です。C は文字を個々のデータユニットに分割するので、UTF モードで 1 つのユニットを \C でマッチさせると、残りの文字列が不正な UTF 文字で始まる可能性があることを意味する。PCREは有効なUTF文字列を扱うと仮定しているため、これは未定義の結果となります。</target>
        </trans-unit>
        <trans-unit id="d06e3f0473ed837ae5eabca58e86d752a67b3e6e" translate="yes" xml:space="preserve">
          <source>Over time, as the Framework has evolved from SNMPv1 , through SNMPv2, to SNMPv3 the definitions of each of these architectural components have become richer and more clearly defined, but the fundamental architecture has remained consistent.</source>
          <target state="translated">時間の経過とともに、フレームワークはSNMPv1からSNMPv2、SNMPv3へと進化してきましたが、これらの各アーキテクチャコンポーネントの定義はより豊富になり、より明確に定義されるようになりましたが、基本的なアーキテクチャは一貫しています。</target>
        </trans-unit>
        <trans-unit id="afffe81c6dad8cc96b3ce448af31b5dc40135548" translate="yes" xml:space="preserve">
          <source>Overhead</source>
          <target state="translated">Overhead</target>
        </trans-unit>
        <trans-unit id="edc8f798d5c08e478ccf078886e412565dd84cb0" translate="yes" xml:space="preserve">
          <source>Overload Protection</source>
          <target state="translated">積み過ぎの保護</target>
        </trans-unit>
        <trans-unit id="cef9305d1dcaaa55a42c6722272e0c832cae51ee" translate="yes" xml:space="preserve">
          <source>Overload protection</source>
          <target state="translated">過負荷保護</target>
        </trans-unit>
        <trans-unit id="1024473923480d46de1a6ce534031a4fb8bf2fe9" translate="yes" xml:space="preserve">
          <source>Overload protection activated on one node does not affect other nodes, where the tracing continues as normal. &lt;code&gt;ttb:stop/0,1&lt;/code&gt; fetches data from all clients, including everything collected before the activation of overload protection.</source>
          <target state="translated">1つのノードでアクティブ化された過負荷保護は、トレースが通常どおり続行される他のノードには影響しません。 &lt;code&gt;ttb:stop/0,1&lt;/code&gt; は、過負荷保護がアクティブになる前に収集されたすべてを含む、すべてのクライアントからデータをフェッチします。</target>
        </trans-unit>
        <trans-unit id="9872bf40547ca2f3f14680ffa0287ececed0c74a" translate="yes" xml:space="preserve">
          <source>Override protocol version when sending a message by adding the item &lt;code&gt;{protocol_version, integer()}&lt;/code&gt; to the Options. See &lt;code&gt;&lt;a href=&quot;megaco#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;megaco#cast&quot;&gt;cast&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">オプションに項目 &lt;code&gt;{protocol_version, integer()}&lt;/code&gt; を追加して、メッセージを送信するときにプロトコルバージョンをオーバーライドします。 &lt;code&gt;&lt;a href=&quot;megaco#call&quot;&gt;call&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;megaco#cast&quot;&gt;cast&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="07d3d194fae83d351901e71d428409c25c0a3d51" translate="yes" xml:space="preserve">
          <source>Override the default, which is to analyze BEAM files, and analyze starting from Erlang source code instead.</source>
          <target state="translated">BEAMファイルを解析するデフォルトをオーバーライドし、代わりにErlangのソースコードから解析します。</target>
        </trans-unit>
        <trans-unit id="15565d57245d3503a665b06bb1ebc90f34652149" translate="yes" xml:space="preserve">
          <source>Overrides any value set by function &lt;code&gt;&lt;a href=&quot;#set_options-1&quot;&gt;set_options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">関数 &lt;code&gt;&lt;a href=&quot;#set_options-1&quot;&gt;set_options&lt;/a&gt;&lt;/code&gt; で設定された値を上書きします。</target>
        </trans-unit>
        <trans-unit id="e903860e59ffb2ebea40577767dba45a92e0e0e5" translate="yes" xml:space="preserve">
          <source>Overrides the default definition of a newline in the subject string, which is LF (ASCII 10) in Erlang.</source>
          <target state="translated">サブジェクト文字列の改行のデフォルト定義をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="70f5e663bdd85b0cbb11a197a25022368effaefb" translate="yes" xml:space="preserve">
          <source>Overrides the source file name as presented in &lt;code&gt;module_info(compile)&lt;/code&gt; and stack traces.</source>
          <target state="translated">&lt;code&gt;module_info(compile)&lt;/code&gt; およびスタックトレースに示されているソースファイル名をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="2178a71f4d4796adf7ebfc54ce9d2c304cda5e26" translate="yes" xml:space="preserve">
          <source>Overrides which callback module is used. Defaults to &lt;code&gt;inet_sctp&lt;/code&gt; for IPv4 and &lt;code&gt;inet6_sctp&lt;/code&gt; for IPv6.</source>
          <target state="translated">使用するコールバックモジュールを上書きします。IPv4の場合はデフォルトで &lt;code&gt;inet_sctp&lt;/code&gt; になり、IPv6の場合は &lt;code&gt;inet6_sctp&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="9febcfe22539c2d72353741f4a91ee3eee5e5d0a" translate="yes" xml:space="preserve">
          <source>Overrides which callback module is used. Defaults to &lt;code&gt;inet_tcp&lt;/code&gt; for IPv4 and &lt;code&gt;inet6_tcp&lt;/code&gt; for IPv6.</source>
          <target state="translated">使用するコールバックモジュールを上書きします。IPv4の場合はデフォルトで &lt;code&gt;inet_tcp&lt;/code&gt; になり、IPv6の場合は &lt;code&gt;inet6_tcp&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="fb4575b7495ce7d57228d043087de6f17605a208" translate="yes" xml:space="preserve">
          <source>Overrides which callback module is used. Defaults to &lt;code&gt;inet_udp&lt;/code&gt; for IPv4 and &lt;code&gt;inet6_udp&lt;/code&gt; for IPv6.</source>
          <target state="translated">使用するコールバックモジュールを上書きします。IPv4の場合はデフォルトで &lt;code&gt;inet_udp&lt;/code&gt; になり、IPv6の場合は &lt;code&gt;inet6_udp&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="e2f619cd71b1d0660f0efea7cc2e66087681e7c2" translate="yes" xml:space="preserve">
          <source>Overriding CTHs</source>
          <target state="translated">CTHのオーバーライド</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="d263dc838fe87831b80976b412672c3d8e02db11" translate="yes" xml:space="preserve">
          <source>Owners can subscribe to &lt;strong&gt;notifications&lt;/strong&gt;, messages of the form &lt;code&gt;{disk_log, Node, Log, Info}&lt;/code&gt;, which are sent from the disk log process when certain events occur, see the functions and in particular the &lt;code&gt;open/1&lt;/code&gt; option &lt;code&gt;&lt;a href=&quot;#notify&quot;&gt;notify&lt;/a&gt;&lt;/code&gt;. A log can have many owners, but a process cannot own a log more than once. However, the same process can open the log as a user more than once.</source>
          <target state="translated">所有者は、&lt;strong&gt;通知&lt;/strong&gt;、 &lt;code&gt;{disk_log, Node, Log, Info}&lt;/code&gt; 形式のメッセージをサブスクライブできます。これらのメッセージは、特定のイベントが発生したときにディスクログプロセスから送信されます。関数、特に &lt;code&gt;open/1&lt;/code&gt; オプション &lt;code&gt;&lt;a href=&quot;#notify&quot;&gt;notify&lt;/a&gt;&lt;/code&gt; を参照してください。ログは多くの所有者を持つことができますが、プロセスは1回しかログを所有できません。ただし、同じプロセスでユーザーとしてログを複数回開くことができます。</target>
        </trans-unit>
        <trans-unit id="0bf7d16b62f8d7d4458289a41b07f8e9ce785647" translate="yes" xml:space="preserve">
          <source>Owners subscribing to notifications are notified of an error with an &lt;code&gt;error_status&lt;/code&gt; message if the error reason tag is &lt;code&gt;invalid_header&lt;/code&gt; or &lt;code&gt;file_error&lt;/code&gt;.</source>
          <target state="translated">通知をサブスクライブしている所有者は、エラー理由タグが &lt;code&gt;invalid_header&lt;/code&gt; または &lt;code&gt;file_error&lt;/code&gt; の場合、 &lt;code&gt;error_status&lt;/code&gt; メッセージでエラーが通知されます。</target>
        </trans-unit>
        <trans-unit id="47ddeec7968a11b2b2f13154dd59f134a92d672e" translate="yes" xml:space="preserve">
          <source>Owners subscribing to notifications normally receive a &lt;code&gt;wrap&lt;/code&gt; message, but if an error occurs with a reason tag of &lt;code&gt;invalid_header&lt;/code&gt; or &lt;code&gt;file_error&lt;/code&gt;, an &lt;code&gt;error_status&lt;/code&gt; message is sent.</source>
          <target state="translated">通知をサブスクライブする所有者は通常、 &lt;code&gt;wrap&lt;/code&gt; メッセージを受け取りますが、reasonタグが &lt;code&gt;invalid_header&lt;/code&gt; または &lt;code&gt;file_error&lt;/code&gt; でエラーが発生した場合、 &lt;code&gt;error_status&lt;/code&gt; メッセージが送信されます。</target>
        </trans-unit>
        <trans-unit id="ea5a85a9a6040f17a47f7ba2c861df0d45af862d" translate="yes" xml:space="preserve">
          <source>Owners subscribing to notifications receive a &lt;code&gt;truncate&lt;/code&gt; message.</source>
          <target state="translated">通知をサブスクライブする所有者は、 &lt;code&gt;truncate&lt;/code&gt; メッセージを受け取ります。</target>
        </trans-unit>
        <trans-unit id="69f83710cbb8ab650339dad71d8d01aeb1346e48" translate="yes" xml:space="preserve">
          <source>Owners subscribing to notifications receive message &lt;code&gt;read_only&lt;/code&gt;, &lt;code&gt;blocked_log&lt;/code&gt;, or &lt;code&gt;format_external&lt;/code&gt; if the item cannot be written on the log, and possibly one of the messages &lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, or &lt;code&gt;error_status&lt;/code&gt; if an item is written on the log. Message &lt;code&gt;error_status&lt;/code&gt; is sent if something is wrong with the header function or if a file error occurs.</source>
          <target state="translated">通知をサブスクライブした所有者は、アイテムをログに書き込むことができない場合はメッセージ &lt;code&gt;read_only&lt;/code&gt; 、 &lt;code&gt;blocked_log&lt;/code&gt; 、または &lt;code&gt;format_external&lt;/code&gt; を受け取り、アイテムがログに書き込まれる場合はメッセージ &lt;code&gt;wrap&lt;/code&gt; 、 &lt;code&gt;full&lt;/code&gt; 、または &lt;code&gt;error_status&lt;/code&gt; のいずれかを受け取ります。ヘッダー関数に問題がある場合、またはファイルエラーが発生した場合、メッセージ &lt;code&gt;error_status&lt;/code&gt; が送信されます。</target>
        </trans-unit>
        <trans-unit id="fc53f78ca51a5c5588dc259bf4af7ddf544cabda" translate="yes" xml:space="preserve">
          <source>Owners subscribing to notifications receive message &lt;code&gt;read_only&lt;/code&gt;, &lt;code&gt;blocked_log&lt;/code&gt;, or &lt;code&gt;format_external&lt;/code&gt; if the items cannot be written on the log, and possibly one or more of the messages &lt;code&gt;wrap&lt;/code&gt;, &lt;code&gt;full&lt;/code&gt;, and &lt;code&gt;error_status&lt;/code&gt; if items are written on the log. Message &lt;code&gt;error_status&lt;/code&gt; is sent if something is wrong with the header function or if a file error occurs.</source>
          <target state="translated">通知をサブスクライブした所有者は、アイテムをログに書き込むことができない場合はメッセージ &lt;code&gt;read_only&lt;/code&gt; 、 &lt;code&gt;blocked_log&lt;/code&gt; 、または &lt;code&gt;format_external&lt;/code&gt; を受け取り、アイテムがログに書き込まれる場合は1つ以上のメッセージ &lt;code&gt;wrap&lt;/code&gt; 、 &lt;code&gt;full&lt;/code&gt; 、および &lt;code&gt;error_status&lt;/code&gt; を受け取ります。ヘッダー関数に問題がある場合、またはファイルエラーが発生した場合、メッセージ &lt;code&gt;error_status&lt;/code&gt; が送信されます。</target>
        </trans-unit>
        <trans-unit id="36f780fdbda5b2b2ce85c9ebb57086d1880ae757" translate="yes" xml:space="preserve">
          <source>PC</source>
          <target state="translated">PC</target>
        </trans-unit>
        <trans-unit id="d561f41a3e664cc0a8835732d97f931d41f72800" translate="yes" xml:space="preserve">
          <source>PCRE (and Perl) also recognize the Posix syntax [.ch.] and [=ch=] where &quot;ch&quot; is a &quot;collating element&quot;, but these are not supported, and an error is given if they are encountered.</source>
          <target state="translated">PCRE (およびPerl)は、Posix構文[.ch.]と[=ch=]を認識します。ここで &quot;ch &quot;は &quot;照合要素 &quot;ですが、これらはサポートされておらず、それらに遭遇した場合はエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="c7e1a3a2c06dd5d35852b8fd7f58b67f48a9a787" translate="yes" xml:space="preserve">
          <source>PCRE contains some optimizations that are used to speed up matching by running some checks at the start of each match attempt. For example, it can know the minimum length of matching subject, or that a particular character must be present. When one of these optimizations bypasses the running of a match, any included backtracking verbs are not processed. processed. You can suppress the start-of-match optimizations by setting option &lt;code&gt;no_start_optimize&lt;/code&gt; when calling &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#run-3&quot;&gt;run/3&lt;/a&gt;&lt;/code&gt;, or by starting the pattern with (*NO_START_OPT).</source>
          <target state="translated">PCREには、各照合の開始時にいくつかのチェックを実行して照合を高速化するために使用されるいくつかの最適化が含まれています。たとえば、一致するサブジェクトの最小長を認識したり、特定の文字が存在する必要があることを認識したりできます。これらの最適化の1つが一致の実行をバイパスする場合、含まれるバックトラッキング動詞は処理されません。処理されました。 &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#run-3&quot;&gt;run/3&lt;/a&gt;&lt;/code&gt; を呼び出すときにオプション &lt;code&gt;no_start_optimize&lt;/code&gt; を設定するか、または（* NO_START_OPT）でパターンを開始することにより、マッチの開始の最適化を抑制できます。</target>
        </trans-unit>
        <trans-unit id="b299ec8de52cb755bee6ddf20ed30414c507680c" translate="yes" xml:space="preserve">
          <source>PCRE differs from Perl in its handling of backtracking verbs in repeated groups. For example, consider:</source>
          <target state="translated">PCREはPerlとは異なり、繰り返しグループ内での動詞のバックトラックの扱いが異なります。例えば、考えてみてください。</target>
        </trans-unit>
        <trans-unit id="3cc508b88f2a03ca5b89b7762b1f20cd8e196650" translate="yes" xml:space="preserve">
          <source>PCRE does not allow \C to appear in lookbehind assertions (described below) in a UTF mode, as this would make it impossible to calculate the length of the lookbehind.</source>
          <target state="translated">PCREは、Lookbehindの長さを計算することができなくなるため、UTFモードでLookbehindアサーション(後述)の中に †Cが現れることを許可しない。</target>
        </trans-unit>
        <trans-unit id="1cbd2b65949cf73edf1658ac5a4fd6ddc42bd83c" translate="yes" xml:space="preserve">
          <source>PCRE has an optimization that automatically &quot;possessifies&quot; certain simple pattern constructs. For example, the sequence A+B is treated as A++B, as there is no point in backtracking into a sequence of A:s when B must follow.</source>
          <target state="translated">PCREには、特定の単純なパターン構成を自動的に「所有」する最適化機能があります。例えば、A+BのシーケンスはA++Bとして扱われます。</target>
        </trans-unit>
        <trans-unit id="f0fc58f08622bddb7678d55039d7a59b7bc48042" translate="yes" xml:space="preserve">
          <source>PCRE supports an extension to Oniguruma: if a number is preceded by a plus or minus sign, it is taken as a relative reference, for example:</source>
          <target state="translated">PCREは鬼車の拡張機能をサポートしています:数値の前にプラスまたはマイナス記号がある場合は、例えば相対参照として扱われます。</target>
        </trans-unit>
        <trans-unit id="dec962e9c5b1c207185027f300491448a37e5072" translate="yes" xml:space="preserve">
          <source>PCRE supports five conventions for indicating line breaks in strings: a single CR (carriage return) character, a single LF (line feed) character, the two-character sequence CRLF, any of the three preceding, and any Unicode newline sequence.</source>
          <target state="translated">PCRE は、文字列の改行を示すための 5 つの規則をサポートしています:単一の CR (キャリッジリターン)文字、単一の LF (改行)文字、2 文字のシーケンス CRLF、前の 3 つのいずれか、および任意の Unicode 改行シーケンスです。</target>
        </trans-unit>
        <trans-unit id="fa87f3aabeb31ade442c9f5f35c180a263350233" translate="yes" xml:space="preserve">
          <source>PEM files, used by ssl API-functions, are cached. The cache is regularly checked to see if any cache entries should be invalidated, however this function provides a way to unconditionally clear the whole cache.</source>
          <target state="translated">ssl API 関数で使用される PEM ファイルはキャッシュされます。キャッシュは定期的にキャッシュエントリが無効になるかどうかチェックされますが、この関数は無条件にキャッシュ全体をクリアする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="5042994dc29e0b7745ace489955579f5e16456d2" translate="yes" xml:space="preserve">
          <source>POLY1305</source>
          <target state="translated">POLY1305</target>
        </trans-unit>
        <trans-unit id="d0568d1c1f87f3ca3e6965698849e46435e09220" translate="yes" xml:space="preserve">
          <source>POLY1305 is available with OpenSSL 1.1.1 or later if not disabled by configuration.</source>
          <target state="translated">POLY1305は、設定で無効化されていなければOpenSSL 1.1.1.1以降で利用可能です。</target>
        </trans-unit>
        <trans-unit id="cf8aa6cc7fa4d908912776c2db48294fafe7237e" translate="yes" xml:space="preserve">
          <source>POSIX Error Codes</source>
          <target state="translated">POSIX エラーコード</target>
        </trans-unit>
        <trans-unit id="135bec020b8c2fed18e800ec919b567b281c8a13" translate="yes" xml:space="preserve">
          <source>POSIX Time</source>
          <target state="translated">ポジックスタイム</target>
        </trans-unit>
        <trans-unit id="c890d6f6c5e3b641d450986635fca5239474a886" translate="yes" xml:space="preserve">
          <source>PRE TLS-1.3 these names differ for RFC names</source>
          <target state="translated">PRE TLS-1.3では、これらの名前はRFC名のために異なります。</target>
        </trans-unit>
        <trans-unit id="2eac7604dbdefe54932409a6ebb9a50abd2e8624" translate="yes" xml:space="preserve">
          <source>PSK and session resumption is supported (stateful and stateless tickets)</source>
          <target state="translated">PSKとセッションの再開がサポートされています(ステートフルチケットとステートレスチケット</target>
        </trans-unit>
        <trans-unit id="1ba8df77889f1181a72d5c498af3180cd0487517" translate="yes" xml:space="preserve">
          <source>PSK with (EC)DHE</source>
          <target state="translated">PSK with (EC)DHE</target>
        </trans-unit>
        <trans-unit id="046d25012c0b58d806710b7947f458d18f6711f8" translate="yes" xml:space="preserve">
          <source>PSK-only</source>
          <target state="translated">PSK-only</target>
        </trans-unit>
        <trans-unit id="1cd905f009accd2df9f1ab5f8a17d5b5c38872a6" translate="yes" xml:space="preserve">
          <source>Package the installation in &lt;code&gt;&amp;lt;RELEASE_DIR&amp;gt;&lt;/code&gt;, place it wherever you want on your target machine, and run the &lt;code&gt;Install&lt;/code&gt; script on your target machine:</source>
          <target state="translated">インストールを &lt;code&gt;&amp;lt;RELEASE_DIR&amp;gt;&lt;/code&gt; にパッケージ化し、ターゲットマシンの任意の場所に配置して、ターゲットマシンで &lt;code&gt;Install&lt;/code&gt; スクリプトを実行します。</target>
        </trans-unit>
        <trans-unit id="c2b5d604d7f06e3d1f95fc5dc804a3221b871852" translate="yes" xml:space="preserve">
          <source>Packed Encoding Rules (PER), both the aligned and unaligned variant</source>
          <target state="translated">パックドエンコーディングルール(PER)は、アラインドおよびアンアラインドバリアントの両方に対応しています。</target>
        </trans-unit>
        <trans-unit id="e71a71de422305a16e28853d413eeb1fe6adaa8c" translate="yes" xml:space="preserve">
          <source>Packets can be sent to the returned socket &lt;code&gt;Socket&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;send/2&lt;/a&gt;&lt;/code&gt;. Packets sent from the peer are delivered as messages (unless &lt;code&gt;{active, false}&lt;/code&gt; is specified in the option list for the listening socket, in which case packets are retrieved by calling &lt;code&gt;&lt;a href=&quot;#recv-2&quot;&gt;recv/2&lt;/a&gt;&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;send/2&lt;/a&gt;&lt;/code&gt; を使用して、返されたソケット &lt;code&gt;Socket&lt;/code&gt; にパケットを送信できます。ピアから送信されたパケットはメッセージとして配信されます（リスニングソケットのオプションリストで &lt;code&gt;{active, false}&lt;/code&gt; が指定されていない限り、 &lt;code&gt;&lt;a href=&quot;#recv-2&quot;&gt;recv/2&lt;/a&gt;&lt;/code&gt; を呼び出してパケットが取得されます）。</target>
        </trans-unit>
        <trans-unit id="999e0ae2fd1b7fad6eb65fd1659da2a1e9675393" translate="yes" xml:space="preserve">
          <source>Packets can be sent to the returned socket &lt;code&gt;Socket&lt;/code&gt; using &lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;send/2&lt;/a&gt;&lt;/code&gt;. Packets sent from the peer are delivered as messages:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#send-2&quot;&gt;send/2&lt;/a&gt;&lt;/code&gt; を使用して、返されたソケット &lt;code&gt;Socket&lt;/code&gt; にパケットを送信できます。ピアから送信されたパケットは、メッセージとして配信されます。</target>
        </trans-unit>
        <trans-unit id="a9cbdaa25497050f647df52257a52127df4c6dcd" translate="yes" xml:space="preserve">
          <source>Packets consist of a header specifying the number of bytes in the packet, followed by that number of bytes. The header length can be one, two, or four bytes, and containing an unsigned integer in big-endian byte order. Each send operation generates the header, and the header is stripped off on each receive operation.</source>
          <target state="translated">パケットは、パケット内のバイト数を指定するヘッダと、それに続くバイト数で構成されています。ヘッダの長さは1バイト、2バイト、または4バイトで、ビッグエンディアンのバイト順で符号なし整数を含むことができます。各送信操作はヘッダを生成し、ヘッダは各受信操作で除去されます。</target>
        </trans-unit>
        <trans-unit id="d0d592f83333abf860b4699c427f31bf34be37ff" translate="yes" xml:space="preserve">
          <source>Packets consist of a header specifying the number of bytes in the packet, followed by that number of bytes. The length of the header can be one, two, or four bytes; the order of the bytes is big-endian. The header is stripped off when the packet is returned.</source>
          <target state="translated">パケットは、パケット内のバイト数を指定するヘッダと、それに続くバイト数で構成されています。ヘッダの長さは1バイト、2バイト、または4バイトで、バイトの順序はビッグエンディアンです。パケットが返されたときにヘッダは取り除かれます。</target>
        </trans-unit>
        <trans-unit id="f8676c898cfd0dc16d652496de7c51b83121c16e" translate="yes" xml:space="preserve">
          <source>Padding could be enabled with the option &lt;code&gt;&lt;a href=&quot;#type-padding&quot;&gt;{padding,Padding}&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;#type-cryptolib_padding&quot;&gt;cryptolib_padding&lt;/a&gt;&lt;/code&gt; enables &lt;code&gt;pkcs_padding&lt;/code&gt; or no padding (&lt;code&gt;none&lt;/code&gt;). The paddings &lt;code&gt;zero&lt;/code&gt; or &lt;code&gt;random&lt;/code&gt; fills the last part of the last block with zeroes or random bytes. If the last block is already full, nothing is added.</source>
          <target state="translated">オプション &lt;code&gt;&lt;a href=&quot;#type-padding&quot;&gt;{padding,Padding}&lt;/a&gt;&lt;/code&gt; 使用すると、パディングを有効にできます。 &lt;code&gt;&lt;a href=&quot;#type-cryptolib_padding&quot;&gt;cryptolib_padding&lt;/a&gt;&lt;/code&gt; は有効 &lt;code&gt;pkcs_padding&lt;/code&gt; または全くパディング（ &lt;code&gt;none&lt;/code&gt; ）。 &lt;code&gt;zero&lt;/code&gt; または &lt;code&gt;random&lt;/code&gt; のパディングは、最後のブロックの最後の部分をゼロまたはランダムバイトで埋めます。最後のブロックがすでにいっぱいの場合、何も追加されません。</target>
        </trans-unit>
        <trans-unit id="b9b4528e2d3cf117ea52177114c90e71d60519dc" translate="yes" xml:space="preserve">
          <source>Pads &lt;code&gt;String&lt;/code&gt; to &lt;code&gt;Length&lt;/code&gt; with grapheme cluster &lt;code&gt;Char&lt;/code&gt;. &lt;code&gt;Dir&lt;/code&gt;, which can be &lt;code&gt;leading&lt;/code&gt;, &lt;code&gt;trailing&lt;/code&gt;, or &lt;code&gt;both&lt;/code&gt;, indicates where the padding should be added.</source>
          <target state="translated">パッド &lt;code&gt;String&lt;/code&gt; に &lt;code&gt;Length&lt;/code&gt; 書記素クラスタと &lt;code&gt;Char&lt;/code&gt; 。 &lt;code&gt;Dir&lt;/code&gt; することができ、 &lt;code&gt;leading&lt;/code&gt; 、 &lt;code&gt;trailing&lt;/code&gt; 、または &lt;code&gt;both&lt;/code&gt; 、パディングが追加されるべき場所を示します。</target>
        </trans-unit>
        <trans-unit id="62bfbd510157d2b2d32934302b71a771f9fb8488" translate="yes" xml:space="preserve">
          <source>Pahawh_Hmong</source>
          <target state="translated">Pahawh_Hmong</target>
        </trans-unit>
        <trans-unit id="ea98d285a450c2d86578176798a994d47e81c69f" translate="yes" xml:space="preserve">
          <source>Palmyrene</source>
          <target state="translated">Palmyrene</target>
        </trans-unit>
        <trans-unit id="eb7595283333290680efe8f59bad4f5efb16ee78" translate="yes" xml:space="preserve">
          <source>Paragraph separator</source>
          <target state="translated">段落区切り</target>
        </trans-unit>
        <trans-unit id="ea1f90af11a63290665889dc8c71bcb46ef20ff7" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;ArgL&lt;/code&gt; is a list of the following options:</source>
          <target state="translated">パラメータ &lt;code&gt;ArgL&lt;/code&gt; は、次のオプションのリストです。</target>
        </trans-unit>
        <trans-unit id="481ff685beef8edc87c1c25cefdedd5dd3072163" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;FlagList&lt;/code&gt; is a list of options. The following are the valid options:</source>
          <target state="translated">パラメータ &lt;code&gt;FlagList&lt;/code&gt; はオプションのリストです。有効なオプションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="fb58c9f9f7662428e1102cf73d06277b9a9f8408" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;Item&lt;/code&gt; specifies which driver to monitor (the driver name) and which state change to monitor. The parameter is a tuple of arity two whose first element is the driver name and second element is one of the following:</source>
          <target state="translated">パラメーター &lt;code&gt;Item&lt;/code&gt; は、監視するドライバー（ドライバー名）と監視する状態変化を指定します。パラメータは、最初の要素がドライバ名で2番目の要素が次のいずれかであるアリティ2のタプルです。</target>
        </trans-unit>
        <trans-unit id="ffc2bcb064cabdbae071c079e72742a961a53078" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;MgrAgentConfName&lt;/code&gt; in the functions is to be a name you allocate in your test suite using a &lt;code&gt;require&lt;/code&gt; statement. Example (where &lt;code&gt;MgrAgentConfName = snmp_mgr_agent&lt;/code&gt;):</source>
          <target state="translated">関数のパラメーター &lt;code&gt;MgrAgentConfName&lt;/code&gt; は、 &lt;code&gt;require&lt;/code&gt; ステートメントを使用してテストスイートに割り当てる名前になります。例（ &lt;code&gt;MgrAgentConfName = snmp_mgr_agent&lt;/code&gt; ）：</target>
        </trans-unit>
        <trans-unit id="67a9b163fdabde30f306efc624573ddbed00e72a" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;Options&lt;/code&gt; is a list of atoms that specifies table type, access rights, key position, and whether the table is named. Default values are used for omitted options. This means that not specifying any options (&lt;code&gt;[]&lt;/code&gt;) is the same as specifying &lt;code&gt;[set, protected, {keypos,1}, {heir,none}, {write_concurrency,false}, {read_concurrency,false}]&lt;/code&gt;.</source>
          <target state="translated">パラメーター &lt;code&gt;Options&lt;/code&gt; は、テーブルの種類、アクセス権、キーの位置、およびテーブルに名前を付けるかどうかを指定するアトムのリストです。省略されたオプションにはデフォルト値が使用されます。つまり、オプション（ &lt;code&gt;[]&lt;/code&gt; ）を指定しないことは、 &lt;code&gt;[set, protected, {keypos,1}, {heir,none}, {write_concurrency,false}, {read_concurrency,false}]&lt;/code&gt; を指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="1a2266f7f7cc282a30cd7a8c0468383b6f19dbee" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;Options&lt;/code&gt; is a list of options that specifies table type, access rights, key position, and whether the table is named. Default values are used for omitted options. This means that not specifying any options (&lt;code&gt;[]&lt;/code&gt;) is the same as specifying &lt;code&gt;[set, protected, {keypos,1}, {heir,none}, {write_concurrency,false}, {read_concurrency,false}, {decentralized_counters,false}]&lt;/code&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;Options&lt;/code&gt; は、テーブルタイプ、アクセス権、キーの位置、およびテーブルに名前が付けられているかどうかを指定するオプションのリストです。省略されたオプションにはデフォルト値が使用されます。つまり、オプション（ &lt;code&gt;[]&lt;/code&gt; ）を指定しないことは、 &lt;code&gt;[set, protected, {keypos,1}, {heir,none}, {write_concurrency,false}, {read_concurrency,false}, {decentralized_counters,false}]&lt;/code&gt; を指定することと同じです。 ]。</target>
        </trans-unit>
        <trans-unit id="a0265f8de4f4646ca005773d4ffc9856ff9b487f" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;UserData&lt;/code&gt; is typically the result of opening a low-level structure like a file descriptor or an SFTP channel id. The different &lt;code&gt;Fun&lt;/code&gt; clauses operate on that very term.</source>
          <target state="translated">パラメータ &lt;code&gt;UserData&lt;/code&gt; は通常、ファイル記述子やSFTPチャネルIDなどの低レベルの構造を開いた結果です。さまざまな &lt;code&gt;Fun&lt;/code&gt; 句は、まさにその用語で機能します。</target>
        </trans-unit>
        <trans-unit id="9d795107fbe2f795cba5a352dc3d9eb7ed96b4b2" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;UserPrivate&lt;/code&gt; is typically the result of opening a low-level structure like a file descriptor or an SFTP channel id. The different &lt;code&gt;Fun&lt;/code&gt; clauses operate on that very term.</source>
          <target state="translated">パラメータ &lt;code&gt;UserPrivate&lt;/code&gt; は、通常、ファイル記述子やSFTPチャネルIDなどの低レベルの構造を開いた結果です。さまざまな &lt;code&gt;Fun&lt;/code&gt; 句がまさにその用語に作用します。</target>
        </trans-unit>
        <trans-unit id="178879c4f36263f5398b5fe0c1d2b17ffe37778c" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;buf&lt;/code&gt; points to the data to send, and &lt;code&gt;len&lt;/code&gt; is the number of bytes.</source>
          <target state="translated">パラメータ &lt;code&gt;buf&lt;/code&gt; は送信するデータを指し、 &lt;code&gt;len&lt;/code&gt; はバイト数です。</target>
        </trans-unit>
        <trans-unit id="8c3b0a66603387ab483d713b83c217fa59d3b555" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;event&lt;/code&gt; identifies an OS-specific event object. On Unix systems, the functions &lt;code&gt;select&lt;/code&gt;/&lt;code&gt;poll&lt;/code&gt; are used. The event object must be a socket or pipe (or other object that &lt;code&gt;select&lt;/code&gt;/&lt;code&gt;poll&lt;/code&gt; can use). On Windows, the Win32 API function &lt;code&gt;WaitForMultipleObjects&lt;/code&gt; is used. This places other restrictions on the event object; see the Win32 SDK documentation.</source>
          <target state="translated">パラメータ &lt;code&gt;event&lt;/code&gt; は、OS固有のイベントオブジェクトを識別します。Unixシステムでは、関数 &lt;code&gt;select&lt;/code&gt; / &lt;code&gt;poll&lt;/code&gt; が使用されます。イベントオブジェクトは、ソケットまたはパイプ（または &lt;code&gt;select&lt;/code&gt; / &lt;code&gt;poll&lt;/code&gt; が使用できる他のオブジェクト）でなければなりません。Windowsでは、Win32 API関数 &lt;code&gt;WaitForMultipleObjects&lt;/code&gt; が使用されます。これにより、イベントオブジェクトに他の制限が適用されます。Win32 SDKのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="164ddca5ff1565ca4f9e0ee9934496e78da5103a" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;extra_db_nodes&lt;/code&gt; can also be used on disc based nodes.</source>
          <target state="translated">パラメータ &lt;code&gt;extra_db_nodes&lt;/code&gt; は、ディスクベースのノードでも使用できます。</target>
        </trans-unit>
        <trans-unit id="19911242e8e159e23d1389d3ca9b289be8023784" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;group_names_or_paths&lt;/code&gt; specifies one or more group names and/or one or more group paths. At startup, &lt;code&gt;Common Test&lt;/code&gt; searches for matching groups in the group definitions tree (that is, the list returned from &lt;code&gt;Suite:groups/0&lt;/code&gt;; for details, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;group_names_or_paths&lt;/code&gt; は、1つ以上のグループ名または1つ以上のグループパス、あるいはその両方を指定します。 &lt;code&gt;Common Test&lt;/code&gt; は起動時に、グループ定義ツリー（つまり、 &lt;code&gt;Suite:groups/0&lt;/code&gt; から返されたリスト）で一致するグループを検索します。詳細については、「 &lt;code&gt;&lt;a href=&quot;write_test_chapter#test_case_groups&quot;&gt;Test Case Groups&lt;/a&gt;&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="83d4a946c14610cd207ac0d8f60cb89155f38f46" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;mode&lt;/code&gt; is a bitwise OR combination of &lt;code&gt;ERL_DRV_READ&lt;/code&gt;, &lt;code&gt;ERL_DRV_WRITE&lt;/code&gt;, and &lt;code&gt;ERL_DRV_USE&lt;/code&gt;. The first two specify whether to wait for read events and/or write events. A fired read event calls &lt;code&gt;&lt;a href=&quot;driver_entry#ready_input&quot;&gt; ready_input&lt;/a&gt;&lt;/code&gt; and a fired write event calls &lt;code&gt;&lt;a href=&quot;driver_entry#ready_output&quot;&gt; ready_output&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;mode&lt;/code&gt; は、 &lt;code&gt;ERL_DRV_READ&lt;/code&gt; 、 &lt;code&gt;ERL_DRV_WRITE&lt;/code&gt; 、および &lt;code&gt;ERL_DRV_USE&lt;/code&gt; のビットごとのORの組み合わせです。最初の2つは、読み取りイベントまたは書き込みイベント、あるいはその両方を待機するかどうかを指定します。起動された読み取りイベントは &lt;code&gt;&lt;a href=&quot;driver_entry#ready_input&quot;&gt; ready_input&lt;/a&gt;&lt;/code&gt; を呼び出し、起動された書き込みイベントは &lt;code&gt;&lt;a href=&quot;driver_entry#ready_output&quot;&gt; ready_output&lt;/a&gt;&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="1db4151b626c494895a3303e3e9dc15c541574a3" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;mode&lt;/code&gt; is a bitwise OR combination of &lt;code&gt;ERL_DRV_READ&lt;/code&gt;, &lt;code&gt;ERL_DRV_WRITE&lt;/code&gt;, and &lt;code&gt;ERL_DRV_USE&lt;/code&gt;. The first two specify whether to wait for read events and/or write events. A fired read event calls &lt;code&gt;&lt;a href=&quot;driver_entry#ready_input&quot;&gt;ready_input&lt;/a&gt;&lt;/code&gt; and a fired write event calls &lt;code&gt;&lt;a href=&quot;driver_entry#ready_output&quot;&gt;ready_output&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;mode&lt;/code&gt; は、 &lt;code&gt;ERL_DRV_READ&lt;/code&gt; 、 &lt;code&gt;ERL_DRV_WRITE&lt;/code&gt; 、および &lt;code&gt;ERL_DRV_USE&lt;/code&gt; のビット単位ORの組み合わせです。最初の2つは、読み取りイベントまたは書き込みイベント、あるいはその両方を待機するかどうかを指定します。発生した読み取りイベントは &lt;code&gt;&lt;a href=&quot;driver_entry#ready_input&quot;&gt;ready_input&lt;/a&gt;&lt;/code&gt; を呼び出し、発生した書き込みイベントは &lt;code&gt;&lt;a href=&quot;driver_entry#ready_output&quot;&gt;ready_output&lt;/a&gt;&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="24b7e614b3fb7661e3c4bfa669cf966c8e65b191" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;offset&lt;/code&gt; is an offset into the binary and &lt;code&gt;len&lt;/code&gt; is the number of bytes to send.</source>
          <target state="translated">パラメータ &lt;code&gt;offset&lt;/code&gt; はバイナリへのオフセットで、 &lt;code&gt;len&lt;/code&gt; は送信するバイト数です。</target>
        </trans-unit>
        <trans-unit id="2c09fe112bbeb4630f395aac2bcdfe148aca5521" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;on&lt;/code&gt; is to be &lt;code&gt;1&lt;/code&gt; for setting events and &lt;code&gt;0&lt;/code&gt; for clearing them.</source>
          <target state="translated">パラメータ &lt;code&gt;on&lt;/code&gt; は、イベントを設定する場合は &lt;code&gt;1&lt;/code&gt; 、クリアする場合は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4c6329fafab17889c996d466aa0b5a818fe1c76a" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;port&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; an ordinary port handle, but a port handle converted using &lt;code&gt;&lt;a href=&quot;#driver_mk_port&quot;&gt; driver_mk_port&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;port&lt;/code&gt; は通常のポートハンドルではあり&lt;strong&gt;ません&lt;/strong&gt;が、 &lt;code&gt;&lt;a href=&quot;#driver_mk_port&quot;&gt; driver_mk_port&lt;/a&gt;&lt;/code&gt; を使用して変換されたポートハンドルです。</target>
        </trans-unit>
        <trans-unit id="f74566537c8d9ce233e9f86c48184e78edfc96b6" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;port&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; an ordinary port handle, but a port handle converted using &lt;code&gt;&lt;a href=&quot;#driver_mk_port&quot;&gt;driver_mk_port&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;port&lt;/code&gt; は通常のポートハンドルでは&lt;strong&gt;なく&lt;/strong&gt;、 &lt;code&gt;&lt;a href=&quot;#driver_mk_port&quot;&gt;driver_mk_port&lt;/a&gt;&lt;/code&gt; を使用して変換されたポートハンドルです。</target>
        </trans-unit>
        <trans-unit id="b389bdc5e8c68c9bf486330a4dfc6e8f07dac5d9" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;process&lt;/code&gt; is to be the return value of an earlier call to &lt;code&gt;&lt;a href=&quot;#driver_caller&quot;&gt; driver_caller&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#driver_connected&quot;&gt;driver_connected&lt;/a&gt;&lt;/code&gt; call.</source>
          <target state="translated">パラメータ &lt;code&gt;process&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#driver_caller&quot;&gt; driver_caller&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#driver_connected&quot;&gt;driver_connected&lt;/a&gt;&lt;/code&gt; 呼び出しへの以前の呼び出しの戻り値になります。</target>
        </trans-unit>
        <trans-unit id="31842056db03aa395dd407bca74bccb68a5a26bb" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;process&lt;/code&gt; is to be the return value of an earlier call to &lt;code&gt;&lt;a href=&quot;#driver_caller&quot;&gt;driver_caller&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#driver_connected&quot;&gt;driver_connected&lt;/a&gt;&lt;/code&gt; call.</source>
          <target state="translated">パラメータ &lt;code&gt;process&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#driver_caller&quot;&gt;driver_caller&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#driver_connected&quot;&gt;driver_connected&lt;/a&gt;&lt;/code&gt; 呼び出しへの以前の呼び出しの戻り値になります。</target>
        </trans-unit>
        <trans-unit id="66a261af649e0d1c255cd39045bb5e13b9ca6186" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;skip&lt;/code&gt; is a number of bytes to skip of the &lt;code&gt;ev&lt;/code&gt; vector from the head.</source>
          <target state="translated">パラメータ &lt;code&gt;skip&lt;/code&gt; は、先頭からの &lt;code&gt;ev&lt;/code&gt; ベクトルをスキップするバイト数です。</target>
        </trans-unit>
        <trans-unit id="64e4fb00a7835e330447d940e7db2ce15d43c569" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;term&lt;/code&gt; points to an array of &lt;code&gt;ErlDrvTermData&lt;/code&gt; with &lt;code&gt;n&lt;/code&gt; elements. This array contains terms described in the driver term format. Every term consists of 1-4 elements in the array. The first term has a term type and then arguments. Parameter &lt;code&gt;port&lt;/code&gt; specifies the sending port.</source>
          <target state="translated">パラメータ &lt;code&gt;term&lt;/code&gt; は、 &lt;code&gt;n&lt;/code&gt; 要素を持つ &lt;code&gt;ErlDrvTermData&lt;/code&gt; の配列を指します。この配列には、ドライバー用語形式で記述された用語が含まれています。すべての項は、配列の1〜4個の要素で構成されています。最初の用語には用語タイプがあり、次に引数があります。パラメータ &lt;code&gt;port&lt;/code&gt; は送信ポートを指定します。</target>
        </trans-unit>
        <trans-unit id="619a12371bd91db45106e0947981ba34d3c2bd49" translate="yes" xml:space="preserve">
          <source>Parameterization, which is defined in X.683, can be used when defining types, values, value sets, classes, objects, or object sets. A part of a definition can be supplied as a parameter. For example, if a &lt;code&gt;Type&lt;/code&gt; is used in a definition with a certain purpose, you want the type name to express the intention. This can be done with parameterization.</source>
          <target state="translated">X.683で定義されているパラメーター化は、型、値、値セット、クラス、オブジェクト、またはオブジェクトセットを定義するときに使用できます。定義の一部をパラメーターとして指定できます。たとえば、特定の目的を持つ定義で &lt;code&gt;Type&lt;/code&gt; が使用されている場合は、タイプ名に意図を表す必要があります。これは、パラメーター化を使用して行うことができます。</target>
        </trans-unit>
        <trans-unit id="d6f2f731b6fa47d9e1cb589072277ce145e0fd44" translate="yes" xml:space="preserve">
          <source>Parameterized queries</source>
          <target state="translated">パラメータ化されたクエリ</target>
        </trans-unit>
        <trans-unit id="e37afe9cf72f8741ca2e835677dabb056b3df604" translate="yes" xml:space="preserve">
          <source>Parameters &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;term&lt;/code&gt;, and &lt;code&gt;n&lt;/code&gt; work as in &lt;code&gt;&lt;a href=&quot;#erl_drv_output_term&quot;&gt; erl_drv_output_term&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;port&lt;/code&gt; 、 &lt;code&gt;term&lt;/code&gt; 、および &lt;code&gt;n&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#erl_drv_output_term&quot;&gt; erl_drv_output_term&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="3001577f3d424b071c234b5e5a77e2c797ba8919" translate="yes" xml:space="preserve">
          <source>Parameters &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;term&lt;/code&gt;, and &lt;code&gt;n&lt;/code&gt; work as in &lt;code&gt;&lt;a href=&quot;#erl_drv_output_term&quot;&gt;erl_drv_output_term&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;port&lt;/code&gt; 、 &lt;code&gt;term&lt;/code&gt; 、および &lt;code&gt;n&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#erl_drv_output_term&quot;&gt;erl_drv_output_term&lt;/a&gt;&lt;/code&gt; と同様に機能します。</target>
        </trans-unit>
        <trans-unit id="5222f53305ea881b58cbd6fc24ce56b2532be794" translate="yes" xml:space="preserve">
          <source>Parameters &lt;code&gt;term&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; work as in &lt;code&gt;&lt;a href=&quot;#erl_drv_output_term&quot;&gt; erl_drv_output_term&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;term&lt;/code&gt; と &lt;code&gt;n&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#erl_drv_output_term&quot;&gt; erl_drv_output_term&lt;/a&gt;&lt;/code&gt; のように機能します。</target>
        </trans-unit>
        <trans-unit id="aa047ce05d4bbf51547604b5fd791b6e5ce4e1a0" translate="yes" xml:space="preserve">
          <source>Parameters &lt;code&gt;term&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; work as in &lt;code&gt;&lt;a href=&quot;#erl_drv_output_term&quot;&gt;erl_drv_output_term&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;term&lt;/code&gt; と &lt;code&gt;n&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;#erl_drv_output_term&quot;&gt;erl_drv_output_term&lt;/a&gt;&lt;/code&gt; と同じように機能します。</target>
        </trans-unit>
        <trans-unit id="52408a3808b8f3d07d1e351897f44c8601912f48" translate="yes" xml:space="preserve">
          <source>Parameters to be used to call public_key:generate_key/1, to generate a key, or an existing key. Defaults to generating an ECDSA key. Note this could fail if Erlang/OTP is compiled with a very old cryptolib.</source>
          <target state="translated">public_key:generate_key/1 の呼び出し、鍵の生成、または既存の鍵の生成に使用するパラメータ。デフォルトはECDSAキーを生成します。Erlang/OTPが非常に古いクリプトリブでコンパイルされている場合は失敗する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="603b6d7d88b76cdf28420d118d75c73cf2f74970" translate="yes" xml:space="preserve">
          <source>Parametric curve definition.</source>
          <target state="translated">パラメトリック曲線の定義。</target>
        </trans-unit>
        <trans-unit id="f544c8871ad84d3b8d3ea9af03500476893103ea" translate="yes" xml:space="preserve">
          <source>Parentheses are used for grouping, either to make an expression more readable or to override the default precedence of operators:</source>
          <target state="translated">括弧は、式をより読みやすくしたり、演算子のデフォルトの優先順位を上書きしたりするためにグループ化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a38e57cb166c131b67e7c17a52a16571f7e59fb9" translate="yes" xml:space="preserve">
          <source>Parenthesized expressions are useful to override &lt;code&gt;&lt;a href=&quot;#prec&quot;&gt;operator precedences&lt;/a&gt;&lt;/code&gt;, for example, in arithmetic expressions:</source>
          <target state="translated">括弧で囲まれた式は、たとえば算術式で演算 &lt;code&gt;&lt;a href=&quot;#prec&quot;&gt;operator precedences&lt;/a&gt;&lt;/code&gt; を上書きするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="1eeecad7580d2da2f17c99a50bfedd315bdbe5ca" translate="yes" xml:space="preserve">
          <source>Parse Transformations</source>
          <target state="translated">解析変換</target>
        </trans-unit>
        <trans-unit id="1ec3038821c8e34cb4ca25c92efd7b368a0d8e5a" translate="yes" xml:space="preserve">
          <source>Parse a stream containing an XML document.</source>
          <target state="translated">XML ドキュメントを含むストリームを解析します。</target>
        </trans-unit>
        <trans-unit id="8217aea2b6b930a773bd2a30eafc88abe67c2fba" translate="yes" xml:space="preserve">
          <source>Parse file containing an XML document</source>
          <target state="translated">XML 文書を含むパースファイル</target>
        </trans-unit>
        <trans-unit id="5a6136b4aa579fcfcffcc46e0f8f8eb6d5603d86" translate="yes" xml:space="preserve">
          <source>Parse file containing an XML document as a stream, DOM style. Wrapper for a call to the XML parser &lt;code&gt;xmerl_scan&lt;/code&gt; with a &lt;code&gt;continuation_fun&lt;/code&gt; for handling streams of XML data. Note that the &lt;code&gt;continuation_fun&lt;/code&gt;, &lt;code&gt;acc_fun&lt;/code&gt;, &lt;code&gt;fetch_fun&lt;/code&gt;, &lt;code&gt;rules&lt;/code&gt; and &lt;code&gt;close_fun&lt;/code&gt; options cannot be user defined using this parser.</source>
          <target state="translated">XMLドキュメントをストリーム、DOMスタイルとして含む解析ファイル。XMLデータのストリームを処理するための &lt;code&gt;continuation_fun&lt;/code&gt; を &lt;code&gt;xmerl_scan&lt;/code&gt; したXMLパーサーxmerl_scanの呼び出しのラッパー。 &lt;code&gt;continuation_fun&lt;/code&gt; 、 &lt;code&gt;acc_fun&lt;/code&gt; 、 &lt;code&gt;fetch_fun&lt;/code&gt; 、 &lt;code&gt;rules&lt;/code&gt; 、および &lt;code&gt;close_fun&lt;/code&gt; オプションは、このパーサーを使用してユーザー定義できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="674e40f858960e6e4df14fbdc24544779fa454b2" translate="yes" xml:space="preserve">
          <source>Parse file containing an XML document as a stream, SAX style. Wrapper for a call to the XML parser &lt;code&gt;xmerl_scan&lt;/code&gt; with a &lt;code&gt;continuation_fun&lt;/code&gt; for handling streams of XML data. Note that the &lt;code&gt;continuation_fun&lt;/code&gt;, &lt;code&gt;acc_fun&lt;/code&gt;, &lt;code&gt;fetch_fun&lt;/code&gt;, &lt;code&gt;rules&lt;/code&gt;, &lt;code&gt;hook_fun&lt;/code&gt;, &lt;code&gt;close_fun&lt;/code&gt; and &lt;code&gt;user_state&lt;/code&gt; options cannot be user defined using this parser.</source>
          <target state="translated">XMLドキュメントをストリーム、SAXスタイルとして含む解析ファイル。XMLデータのストリームを処理するための &lt;code&gt;continuation_fun&lt;/code&gt; を &lt;code&gt;xmerl_scan&lt;/code&gt; したXMLパーサーxmerl_scanの呼び出しのラッパー。 &lt;code&gt;continuation_fun&lt;/code&gt; 、 &lt;code&gt;acc_fun&lt;/code&gt; 、 &lt;code&gt;fetch_fun&lt;/code&gt; 、 &lt;code&gt;rules&lt;/code&gt; 、 &lt;code&gt;hook_fun&lt;/code&gt; 、 &lt;code&gt;close_fun&lt;/code&gt; および &lt;code&gt;user_state&lt;/code&gt; オプションは、このパーサーを使用してユーザー定義できないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="fc9ee985dfae362f5f4036d5f83dc0f5fe590d74" translate="yes" xml:space="preserve">
          <source>Parse file containing an XML document, SAX style. Wrapper for a call to the XML parser &lt;code&gt;xmerl_scan&lt;/code&gt; with a &lt;code&gt;hook_fun&lt;/code&gt; for using xmerl export functionality directly after an entity is parsed.</source>
          <target state="translated">SAXスタイルのXMLドキュメントを含む解析ファイル。XMLパーサへの呼び出しのためのラッパー &lt;code&gt;xmerl_scan&lt;/code&gt; と &lt;code&gt;hook_fun&lt;/code&gt; エンティティが解析された後、直接xmerlエクスポート機能を使用するため。</target>
        </trans-unit>
        <trans-unit id="a7e66c978a3bc50b34f2f8f441cb5d45be8ce70b" translate="yes" xml:space="preserve">
          <source>Parse file containing an XML document. This functions uses a default continuation function to read the file in blocks.</source>
          <target state="translated">XML文書を含むファイルを解析します。この関数は、デフォルトの継続関数を使用して、ファイルをブロック単位で読み込む。</target>
        </trans-unit>
        <trans-unit id="c11cdcc0a2531ae96dc218c56c12636fa75bf6fe" translate="yes" xml:space="preserve">
          <source>Parse string containing an XML document</source>
          <target state="translated">XML 文書を含むパース文字列</target>
        </trans-unit>
        <trans-unit id="6b19e7fcfb29d25095c7a452b5d973ecb668a8f0" translate="yes" xml:space="preserve">
          <source>Parse text and substitute meta-variables.</source>
          <target state="translated">テキストを解析し、メタ変数を置換します。</target>
        </trans-unit>
        <trans-unit id="f3059059775d564c176b513311505460d999325b" translate="yes" xml:space="preserve">
          <source>Parse text and substitute meta-variables. Takes an initial scanner starting position as first argument.</source>
          <target state="translated">テキストを解析し、メタ変数を置換します。最初の引数としてスキャナの開始位置を取ります。</target>
        </trans-unit>
        <trans-unit id="995f08395199c28811d1c157ebeb410cdf5f6a52" translate="yes" xml:space="preserve">
          <source>Parse text.</source>
          <target state="translated">テキストを解析します。</target>
        </trans-unit>
        <trans-unit id="6f88d437ec32b29a09b77bb3c60dda1a500d3d76" translate="yes" xml:space="preserve">
          <source>Parse text. Takes an initial scanner starting position as first argument.</source>
          <target state="translated">テキストを解析します。スキャナの最初の開始位置を第一引数に取ります。</target>
        </trans-unit>
        <trans-unit id="2db8f8fef89f426d3dbefc3cc3581aafe79f6ce1" translate="yes" xml:space="preserve">
          <source>Parse the given test specification files and return the tests to run and skip.</source>
          <target state="translated">与えられたテスト仕様ファイルを解析し、実行するテストとスキップするテストを返します。</target>
        </trans-unit>
        <trans-unit id="2163966b8b6a50fd1cf0cca656abeddf8dd5cc71" translate="yes" xml:space="preserve">
          <source>Parse transform for merl.</source>
          <target state="translated">merl のパース変換。</target>
        </trans-unit>
        <trans-unit id="16b406d744c815ddcee583e6e5df09f0720355fa" translate="yes" xml:space="preserve">
          <source>Parse transform for merl. Enables the use of automatic metavariables and using quasi-quotes in matches and case switches. Also optimizes calls to functions in &lt;code&gt;merl&lt;/code&gt; by partially evaluating them, turning strings to templates, etc., at compile-time.</source>
          <target state="translated">merlの変換を解析します。自動メタ変数の使用と、一致およびケーススイッチでの準引用符の使用を有効にします。また、コンパイル時に関数を部分的に評価し、文字列をテンプレートに &lt;code&gt;merl&lt;/code&gt; するなどして、merl内の関数の呼び出しを最適化します。</target>
        </trans-unit>
        <trans-unit id="1a936ecbdaa0108bef18e5866e06c3f267270543" translate="yes" xml:space="preserve">
          <source>Parse transformations are used if a programmer wants to use Erlang syntax, but with different semantics. The original Erlang code is then transformed into other Erlang code.</source>
          <target state="translated">パース変換はプログラマがErlangの構文を使いたい場合に使われますが、セマンティクスは異なります。オリジナルのErlangコードは他のErlangコードに変換されます。</target>
        </trans-unit>
        <trans-unit id="e2baf70db7b7c168b6c27755c6350a0d8b3a3116" translate="yes" xml:space="preserve">
          <source>Parse transformations are used when a programmer wants to use Erlang syntax but with different semantics. The original Erlang code is then transformed into other Erlang code.</source>
          <target state="translated">パース変換はプログラマがErlangの構文を使いたいときに使われますが、セマンティクスは異なります。元のErlangコードは他のErlangコードに変換されます。</target>
        </trans-unit>
        <trans-unit id="b27625b152a11d3756ff7a956cb8d71acc5d561c" translate="yes" xml:space="preserve">
          <source>Parse trees for Erlang expression, see section &lt;code&gt;The Abstract Format&lt;/code&gt; in the ERTS User's Guide.</source>
          <target state="translated">Erlang式のツリーを解析します。「ERTSユーザーガイド」の「 &lt;code&gt;The Abstract Format&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="1b485e40955067baa97180fef7a23873d2bbfac9" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;Tokens&lt;/code&gt; as if it was a form. Returns one of the following:</source>
          <target state="translated">&lt;code&gt;Tokens&lt;/code&gt; をフォームであるかのように解析します。次のいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="40605f235bf487ac5cc36c28815be60cb52740c7" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;Tokens&lt;/code&gt; as if it was a list of expressions. Returns one of the following:</source>
          <target state="translated">&lt;code&gt;Tokens&lt;/code&gt; を式のリストであるかのように解析します。次のいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="f5e90d2f7ca99ca3b5931aed84bb2db57dbbc833" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;Tokens&lt;/code&gt; as if it was a term. Returns one of the following:</source>
          <target state="translated">&lt;code&gt;Tokens&lt;/code&gt; を用語であるかのように解析します。次のいずれかを返します。</target>
        </trans-unit>
        <trans-unit id="86ede94d84471001f5bfaece799d5f9fa59c6b81" translate="yes" xml:space="preserve">
          <source>Parses a URI. If no scheme defaults are provided, the value of the &lt;code&gt;&lt;a href=&quot;#scheme_defaults&quot;&gt;scheme_defaults&lt;/a&gt;&lt;/code&gt; function is used.</source>
          <target state="translated">URIを解析します。スキームのデフォルトが指定されていない場合は、 &lt;code&gt;&lt;a href=&quot;#scheme_defaults&quot;&gt;scheme_defaults&lt;/a&gt;&lt;/code&gt; 関数の値が使用されます。</target>
        </trans-unit>
        <trans-unit id="22aeb59a17ed90dfcd4e4d9f7b96872d034caad8" translate="yes" xml:space="preserve">
          <source>Parses a digit map body</source>
          <target state="translated">桁マップ本体を解析します。</target>
        </trans-unit>
        <trans-unit id="dd0ff0f3941a66c29a5874954a99087c88f42111" translate="yes" xml:space="preserve">
          <source>Parses a digit map body, represented as a list of characters, into a list of state transitions suited to be evaluated by megaco:eval_digit_map/1,2.</source>
          <target state="translated">文字のリストとして表現されたデジットマップ本体を、megaco:eval_digit_map/1,2で評価されるのに適した状態遷移のリストに解析します。</target>
        </trans-unit>
        <trans-unit id="f9c79f9646018440e3ebc591b18276096ccfad27" translate="yes" xml:space="preserve">
          <source>Parses an &lt;code&gt;&lt;a href=&quot;#type-ip_address&quot;&gt;ip_address()&lt;/a&gt;&lt;/code&gt; and returns an IPv4 or IPv6 address string.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#type-ip_address&quot;&gt;ip_address()&lt;/a&gt;&lt;/code&gt; を解析し、IPv4またはIPv6アドレス文字列を返します。</target>
        </trans-unit>
        <trans-unit id="b6c5f3cfcbd29b09ebd5d2c45e4555d696f66e8a" translate="yes" xml:space="preserve">
          <source>Parses an &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt; compliant &lt;code&gt;uri_string()&lt;/code&gt; into a &lt;code&gt;uri_map()&lt;/code&gt;, that holds the parsed components of the &lt;code&gt;URI&lt;/code&gt;. If parsing fails, an error tuple is returned.</source>
          <target state="translated">構文解析 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc3986.txt&quot;&gt;RFC 3986&lt;/a&gt;&lt;/code&gt; に準拠 &lt;code&gt;uri_string()&lt;/code&gt; 内に &lt;code&gt;uri_map()&lt;/code&gt; の解析された部品保持する、 &lt;code&gt;URI&lt;/code&gt; を。解析が失敗した場合、エラータプルが返されます。</target>
        </trans-unit>
        <trans-unit id="e34be64e7e0d26bd52b330f13bd6dd5de7306b80" translate="yes" xml:space="preserve">
          <source>Parses an IPv4 address string and returns an &lt;code&gt;&lt;a href=&quot;#type-ip4_address&quot;&gt;ip4_address()&lt;/a&gt;&lt;/code&gt;. Accepts a shortened IPv4 address string.</source>
          <target state="translated">IPv4アドレス文字列を解析し、 &lt;code&gt;&lt;a href=&quot;#type-ip4_address&quot;&gt;ip4_address()&lt;/a&gt;&lt;/code&gt; を返します。短縮されたIPv4アドレス文字列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="18cc80d670fa4d4c9b9ad5cf24a3ddc556aaf953" translate="yes" xml:space="preserve">
          <source>Parses an IPv4 address string containing four fields, that is, &lt;strong&gt;not&lt;/strong&gt; shortened, and returns an &lt;code&gt;&lt;a href=&quot;#type-ip4_address&quot;&gt;ip4_address()&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">4つのフィールドを含む、つまり短縮されて&lt;strong&gt;いない&lt;/strong&gt; IPv4アドレス文字列を解析し、 &lt;code&gt;&lt;a href=&quot;#type-ip4_address&quot;&gt;ip4_address()&lt;/a&gt;&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="c579f7b626178d3c420a2e9643120d9f2832584e" translate="yes" xml:space="preserve">
          <source>Parses an IPv4 or IPv6 address string and returns an &lt;code&gt;&lt;a href=&quot;#type-ip4_address&quot;&gt;ip4_address()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#type-ip6_address&quot;&gt;ip6_address()&lt;/a&gt;&lt;/code&gt;. Accepts a shortened IPv4 address string.</source>
          <target state="translated">IPv4またはIPv6アドレス文字列を解析し、 &lt;code&gt;&lt;a href=&quot;#type-ip4_address&quot;&gt;ip4_address()&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#type-ip6_address&quot;&gt;ip6_address()&lt;/a&gt;&lt;/code&gt; を返します。短縮されたIPv4アドレス文字列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="5aa7dda9589a835953ec88f83cdf4c9c4edfbf77" translate="yes" xml:space="preserve">
          <source>Parses an IPv4 or IPv6 address string and returns an &lt;code&gt;&lt;a href=&quot;#type-ip4_address&quot;&gt;ip4_address()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#type-ip6_address&quot;&gt;ip6_address()&lt;/a&gt;&lt;/code&gt;. Does &lt;strong&gt;not&lt;/strong&gt; accept a shortened IPv4 address string.</source>
          <target state="translated">IPv4またはIPv6アドレス文字列を解析し、 &lt;code&gt;&lt;a href=&quot;#type-ip4_address&quot;&gt;ip4_address()&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#type-ip6_address&quot;&gt;ip6_address()&lt;/a&gt;&lt;/code&gt; を返します。ん&lt;strong&gt;ではない&lt;/strong&gt;短縮IPv4アドレスの文字列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="4b1a2097f959aec277e56d7b2f09d960c163d98b" translate="yes" xml:space="preserve">
          <source>Parses an IPv6 address string and returns an &lt;code&gt;&lt;a href=&quot;#type-ip6_address&quot;&gt;ip6_address()&lt;/a&gt;&lt;/code&gt;. Does &lt;strong&gt;not&lt;/strong&gt; accept IPv4 addresses.</source>
          <target state="translated">IPv6アドレス文字列を解析し、 &lt;code&gt;&lt;a href=&quot;#type-ip6_address&quot;&gt;ip6_address()&lt;/a&gt;&lt;/code&gt; を返します。い&lt;strong&gt;ない&lt;/strong&gt; IPv4アドレスを受け入れます。</target>
        </trans-unit>
        <trans-unit id="eac51ea7e0934384fa0112eeeaf88c4ebab04633" translate="yes" xml:space="preserve">
          <source>Parses an IPv6 address string and returns an &lt;code&gt;&lt;a href=&quot;#type-ip6_address&quot;&gt;ip6_address()&lt;/a&gt;&lt;/code&gt;. If an IPv4 address string is specified, an IPv4-mapped IPv6 address is returned.</source>
          <target state="translated">IPv6アドレス文字列を解析し、 &lt;code&gt;&lt;a href=&quot;#type-ip6_address&quot;&gt;ip6_address()&lt;/a&gt;&lt;/code&gt; を返します。IPv4アドレス文字列が指定されている場合、IPv4にマップされたIPv6アドレスが返されます。</target>
        </trans-unit>
        <trans-unit id="bf75044e156126d255e07b08533855db07ce584c" translate="yes" xml:space="preserve">
          <source>Parses an escript and extracts its sections. This is the reverse of &lt;code id=&quot;extract_2&quot;&gt;&lt;a href=&quot;#create_2&quot;&gt;create/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">escriptを解析し、そのセクションを抽出します。これは &lt;code id=&quot;extract_2&quot;&gt;&lt;a href=&quot;#create_2&quot;&gt;create/2&lt;/a&gt;&lt;/code&gt; の逆です。</target>
        </trans-unit>
        <trans-unit id="86b0f38abf52f234a7baaf70256d4015ecabaa26" translate="yes" xml:space="preserve">
          <source>Parses an escript and extracts its sections. This is the reverse of &lt;code&gt;&lt;a href=&quot;#create-2&quot;&gt;create/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">escriptを解析し、そのセクションを抽出します。これは &lt;code&gt;&lt;a href=&quot;#create-2&quot;&gt;create/2&lt;/a&gt;&lt;/code&gt; の逆です。</target>
        </trans-unit>
        <trans-unit id="bdec3f2af87f1d33ee6b97ffa74db142958cd9e8" translate="yes" xml:space="preserve">
          <source>Parses the printout from an SQL table and returns a list of tuples.</source>
          <target state="translated">SQLテーブルからプリントアウトを解析し、タプルのリストを返します。</target>
        </trans-unit>
        <trans-unit id="7294d33710169103141018bfcb0ee5ad3daa81e2" translate="yes" xml:space="preserve">
          <source>Parsing</source>
          <target state="translated">Parsing</target>
        </trans-unit>
        <trans-unit id="f5365bc5f3e468cf2148385f40bff58f883061be" translate="yes" xml:space="preserve">
          <source>Parsing URIs into its components and returing a map</source>
          <target state="translated">URI をコンポーネントにパースしてマップを返す</target>
        </trans-unit>
        <trans-unit id="c8eb7f630b2224852a36c9237667bd9e0484c53a" translate="yes" xml:space="preserve">
          <source>Parsing and serializing non-UTF-8 form-urlencoded query strings are also supported (&lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML 5.0&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">UTF-8以外のフォームURLエンコードされたクエリ文字列の解析とシリアル化もサポートされています（ &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/html50/&quot;&gt;HTML 5.0&lt;/a&gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="394ec0942f3b3fee9fe7ee73fb59ad007a74829f" translate="yes" xml:space="preserve">
          <source>Parsing of test specifications for &lt;code&gt;Common Test&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Common Test&lt;/code&gt; のテスト仕様の解析。</target>
        </trans-unit>
        <trans-unit id="546554c2840e61b82ab7aeb7ea63ff6baaa80832" translate="yes" xml:space="preserve">
          <source>Parsing of test specifications for Common Test.</source>
          <target state="translated">共通テストのテスト仕様の解析</target>
        </trans-unit>
        <trans-unit id="9769719e65a84af80528eb749196580978ee6445" translate="yes" xml:space="preserve">
          <source>Part of a match specification list cannot be changed directly. If a function has a match specification, it can be replaced with a new one. To change an existing match specification, use the BIF &lt;code&gt;&lt;a href=&quot;#trace_info-2&quot;&gt;erlang:trace_info/2&lt;/a&gt;&lt;/code&gt; to retrieve the existing match specification.</source>
          <target state="translated">一致仕様リストの一部を直接変更することはできません。関数に一致指定がある場合は、新しい関数に置き換えることができます。既存の一致指定を変更するには、BIF &lt;code&gt;&lt;a href=&quot;#trace_info-2&quot;&gt;erlang:trace_info/2&lt;/a&gt;&lt;/code&gt; を使用して、既存の一致指定を取得します。</target>
        </trans-unit>
        <trans-unit id="bf0d342d4ce21f38adfd95210e15a51046211865" translate="yes" xml:space="preserve">
          <source>Part of a pattern within square brackets is called a &quot;character class&quot;. The following are the only metacharacters in a character class:</source>
          <target state="translated">角括弧内のパターンの一部を「文字クラス」と呼びます。文字クラスに含まれるメタキャラクタは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="18b2611fc7db391596d869af43d014cbb4c1feec" translate="yes" xml:space="preserve">
          <source>Part of the &lt;code&gt;new API&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;new API&lt;/code&gt; 一部。</target>
        </trans-unit>
        <trans-unit id="36ce5203ba89b037d3f45fb0ea5c0d88605494d9" translate="yes" xml:space="preserve">
          <source>Part of the &lt;code&gt;new API&lt;/code&gt;. Do a complete encrypt or decrypt of the full text in the argument &lt;code&gt;Data&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;new API&lt;/code&gt; 一部。引数 &lt;code&gt;Data&lt;/code&gt; の全文を完全に暗号化または復号化します。</target>
        </trans-unit>
        <trans-unit id="6d2353d027c421b57617139eec211d5a253dad9b" translate="yes" xml:space="preserve">
          <source>Part of the &lt;code&gt;new API&lt;/code&gt;. Do a complete encrypt or decrypt with an AEAD cipher of the full text.</source>
          <target state="translated">&lt;code&gt;new API&lt;/code&gt; 一部。全文のAEAD暗号を使用して完全な暗号化または復号化を実行します。</target>
        </trans-unit>
        <trans-unit id="ad7926d1e37321235fe2bb0990ccec6758b82f69" translate="yes" xml:space="preserve">
          <source>Part of the &lt;code&gt;new API&lt;/code&gt;. Do an actual crypto operation on a part of the full text and the IV is supplied for each part. The &lt;code&gt;State&lt;/code&gt; should be created with &lt;code&gt;&lt;a href=&quot;crypto#crypto_dyn_iv_init-3&quot;&gt;crypto_dyn_iv_init/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;new API&lt;/code&gt; 一部。全文の一部で実際の暗号化操作を実行すると、IVが各部分に提供されます。 &lt;code&gt;State&lt;/code&gt; 使用して作成する必要があります &lt;code&gt;&lt;a href=&quot;crypto#crypto_dyn_iv_init-3&quot;&gt;crypto_dyn_iv_init/3&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d1b71960d803159cc937f7519730574a3e8c0cf0" translate="yes" xml:space="preserve">
          <source>Part of the &lt;code&gt;new API&lt;/code&gt;. Initializes a series of encryptions or decryptions and creates an internal state with a reference that is returned.</source>
          <target state="translated">&lt;code&gt;new API&lt;/code&gt; 一部。一連の暗号化または復号化を初期化し、返される参照を使用して内部状態を作成します。</target>
        </trans-unit>
        <trans-unit id="3c3a7ef9d414fd26a4f258e7fd770312d08a2e59" translate="yes" xml:space="preserve">
          <source>Part of the &lt;code&gt;new API&lt;/code&gt;. It does an actual crypto operation on a part of the full text. If the part is less than a number of full blocks, only the full blocks (possibly none) are encrypted or decrypted and the remaining bytes are saved to the next &lt;code&gt;crypto_update&lt;/code&gt; operation. The &lt;code&gt;State&lt;/code&gt; should be created with &lt;code&gt;&lt;a href=&quot;crypto#crypto_init-3&quot;&gt;crypto_init/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;crypto#crypto_init-4&quot;&gt;crypto_init/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;new API&lt;/code&gt; 一部。全文の一部に対して実際の暗号化操作を行います。パーツが完全なブロックの数より少ない場合、完全なブロックのみ（おそらくなし）が暗号化または復号化され、残りのバイトは次の &lt;code&gt;crypto_update&lt;/code&gt; 操作に保存されます。 &lt;code&gt;State&lt;/code&gt; 使用して作成する必要があります &lt;code&gt;&lt;a href=&quot;crypto#crypto_init-3&quot;&gt;crypto_init/3&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;crypto#crypto_init-4&quot;&gt;crypto_init/4&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bcb9ea04e25a8921a95bf6ab1089af46b847ca3" translate="yes" xml:space="preserve">
          <source>Partitions &lt;code&gt;List&lt;/code&gt; into a list of sublists and a remainder. &lt;code&gt;Lists&lt;/code&gt; contains one sublist for each key in &lt;code&gt;Keys&lt;/code&gt;, in the corresponding order. The relative order of the elements in each sublist is preserved from the original &lt;code&gt;List&lt;/code&gt;. &lt;code&gt;Rest&lt;/code&gt; contains the elements in &lt;code&gt;List&lt;/code&gt; that are not associated with any of the specified keys, also with their original relative order preserved.</source>
          <target state="translated">パーティション &lt;code&gt;List&lt;/code&gt; のサブリストと、残りのリストに。 &lt;code&gt;Lists&lt;/code&gt; には、 &lt;code&gt;Keys&lt;/code&gt; の各キーに対応する順序で1つのサブリストが含まれています。各サブリストの要素の相対的な順序は、元の &lt;code&gt;List&lt;/code&gt; から保持されます。 &lt;code&gt;Rest&lt;/code&gt; には、指定されたキーのいずれにも関連付けられていない &lt;code&gt;List&lt;/code&gt; の要素が含まれ、元の相対順序も保持されます。</target>
        </trans-unit>
        <trans-unit id="1d1e8ed0c63bea5501f0e18a8588004e6a97f424" translate="yes" xml:space="preserve">
          <source>Partitions &lt;code&gt;List&lt;/code&gt; into two lists according to &lt;code&gt;Pred&lt;/code&gt;. &lt;code&gt;splitwith/2&lt;/code&gt; behaves as if it is defined as follows:</source>
          <target state="translated">パーティションの &lt;code&gt;List&lt;/code&gt; によると二つのリストに &lt;code&gt;Pred&lt;/code&gt; 。 &lt;code&gt;splitwith/2&lt;/code&gt; は、次のように定義されているかのように動作します。</target>
        </trans-unit>
        <trans-unit id="7a0f34af55f62b96f8e7863f5d8947f87bbe0f4d" translate="yes" xml:space="preserve">
          <source>Partitions &lt;code&gt;List&lt;/code&gt; into two lists, where the first list contains all elements for which &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, and the second list contains all elements for which &lt;code&gt;Pred(Elem)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; を2つのリストに分割します。最初のリストには &lt;code&gt;Pred(Elem)&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返すすべての要素が含まれ、2番目のリストには &lt;code&gt;Pred(Elem)&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; を返すすべての要素が含まれます。</target>
        </trans-unit>
        <trans-unit id="be77f796fd8548373af529ca7332cc6d13c15156" translate="yes" xml:space="preserve">
          <source>Parts of certificates can be decoded with &lt;code&gt;public_key:der_decode/2&lt;/code&gt;, using the ASN.1 type of that part. However, an application-specific certificate extension requires application-specific ASN.1 decode/encode-functions. In the recent example, the first value of &lt;code&gt;rdnSequence&lt;/code&gt; is of ASN.1 type &lt;code&gt;'X520CommonName'. ({2,5,4,3} = ?id-at-commonName)&lt;/code&gt;:</source>
          <target state="translated">証明書の一部は、その部分のASN.1タイプを使用して、 &lt;code&gt;public_key:der_decode/2&lt;/code&gt; でデコードできます。ただし、アプリケーション固有の証明書拡張には、アプリケーション固有のASN.1デコード/エンコード機能が必要です。最近の例では、 &lt;code&gt;rdnSequence&lt;/code&gt; の最初の値はASN.1タイプ &lt;code&gt;'X520CommonName'. ({2,5,4,3} = ?id-at-commonName)&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="39f1ccafc930086a1e2f26b171bee188745affe2" translate="yes" xml:space="preserve">
          <source>Pass extra chunks to be stored in the &lt;code&gt;.beam&lt;/code&gt; file. The extra chunks must be a list of tuples with a four byte binary as chunk name followed by a binary with the chunk contents. See &lt;code&gt;beam_lib&lt;/code&gt; for more information.</source>
          <target state="translated">&lt;code&gt;.beam&lt;/code&gt; ファイルに格納する追加のチャンクを渡します。追加のチャンクは、チャンク名として4バイトのバイナリがあり、その後にチャンクの内容を持つバイナリが続くタプルのリストである必要があります。詳細については、 &lt;code&gt;beam_lib&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="c0d014bb56599fcece5464b8d5372d0e641b8c1b" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;+Mea config&lt;/code&gt; command-line flag to the Erlang runtime system you are going to use for creation of the allocator configuration. It will disable features that prevent &lt;code&gt;erts_alloc_config&lt;/code&gt; from doing its job. Note, you should &lt;strong&gt;not&lt;/strong&gt; use this flag when using the created configuration. Also note that it is important that you use the same &lt;code&gt;amount of schedulers&lt;/code&gt; when creating the configuration as you are going the use on the system using the configuration.</source>
          <target state="translated">&lt;code&gt;+Mea config&lt;/code&gt; コマンドラインフラグを、アロケーター構成の作成に使用するErlangランタイムシステムに渡します。 &lt;code&gt;erts_alloc_config&lt;/code&gt; の機能を無効にする機能を無効にします。作成した構成を使用する場合は、このフラグを使用し&lt;strong&gt;ない&lt;/strong&gt;でください。また、構成を作成するときは、構成を使用するシステムで使用するのと同じ &lt;code&gt;amount of schedulers&lt;/code&gt; を使用することが重要です。</target>
        </trans-unit>
        <trans-unit id="52a8e49b5b4f355426b2d1b0e4d23c4d22798cb7" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;megaco_receive_handle&lt;/code&gt; to the transport module.</source>
          <target state="translated">パス &lt;code&gt;megaco_receive_handle&lt;/code&gt; をトランスポートモジュールに。</target>
        </trans-unit>
        <trans-unit id="a12c368fddb9450ed1c838dd29236b5bedef5580" translate="yes" xml:space="preserve">
          <source>Pass the cross compilation variables as command line arguments to &lt;code&gt;configure&lt;/code&gt; using a &lt;code&gt;&amp;lt;VARIABLE&amp;gt;=&amp;lt;VALUE&amp;gt;&lt;/code&gt; syntax.</source>
          <target state="translated">&lt;code&gt;&amp;lt;VARIABLE&amp;gt;=&amp;lt;VALUE&amp;gt;&lt;/code&gt; 構文を使用して &lt;code&gt;configure&lt;/code&gt; するには、クロスコンパイル変数をコマンドライン引数として渡します。</target>
        </trans-unit>
        <trans-unit id="15b216add241be5dbff40c5c961c72de3bf72091" translate="yes" xml:space="preserve">
          <source>Passed &quot;as-is&quot; from the &lt;code&gt;{advanced,Extra}&lt;/code&gt; part of the update instruction.</source>
          <target state="translated">更新命令の &lt;code&gt;{advanced,Extra}&lt;/code&gt; 部分から「現状のまま」渡されます。</target>
        </trans-unit>
        <trans-unit id="48905dff7e74ddb13af1cf1fa9519a564cdab569" translate="yes" xml:space="preserve">
          <source>Passed as the first argument to all NIFs. All function arguments passed to a NIF belong to that environment. The return value from a NIF must also be a term belonging to the same environment.</source>
          <target state="translated">すべてのNIFの第一引数として渡されます。NIFに渡されるすべての関数引数は、その環境に属します。NIFからの戻り値も同じ環境に属する項でなければなりません。</target>
        </trans-unit>
        <trans-unit id="fe19796ea8ae4e0d9e314bad1316720d47fe5a55" translate="yes" xml:space="preserve">
          <source>Passed as the first argument to all the non-NIF callback functions (&lt;code&gt;&lt;a href=&quot;#load&quot;&gt;load&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#upgrade&quot;&gt;upgrade&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ErlNifResourceDtor&quot;&gt;dtor&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#ErlNifResourceDown&quot;&gt;down&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#ErlNifResourceStop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt;). Works like a process bound environment but with a temporary pseudo process that &quot;terminates&quot; when the callback has returned. Terms may be created in this environment but they will only be accessible during the callback.</source>
          <target state="translated">すべての非NIFコールバック関数（ &lt;code&gt;&lt;a href=&quot;#load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#upgrade&quot;&gt;upgrade&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#ErlNifResourceDtor&quot;&gt;dtor&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#ErlNifResourceDown&quot;&gt;down&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#ErlNifResourceStop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; ）に最初の引数として渡されます。プロセスバウンド環境のように機能しますが、コールバックが戻ったときに「終了」する一時的な疑似プロセスを使用します。用語はこの環境で作成できますが、コールバック中にのみアクセスできます。</target>
        </trans-unit>
        <trans-unit id="5c3be2c46cb777ea99e77e7f907baf818750d4a3" translate="yes" xml:space="preserve">
          <source>Passes &lt;code&gt;ListIn&lt;/code&gt; through a sequence of substitution/expansion stages. For an &lt;code&gt;aliases&lt;/code&gt; operation, function &lt;code&gt;&lt;a href=&quot;#substitute_aliases-2&quot;&gt; substitute_aliases/2&lt;/a&gt;&lt;/code&gt; is applied using the specified list of aliases:</source>
          <target state="translated">渡し &lt;code&gt;ListIn&lt;/code&gt; を置換/拡張期のシーケンスを。ため &lt;code&gt;aliases&lt;/code&gt; 操作、機能 &lt;code&gt;&lt;a href=&quot;#substitute_aliases-2&quot;&gt; substitute_aliases/2&lt;/a&gt;&lt;/code&gt; エイリアスの指定されたリストを使用して適用されます。</target>
        </trans-unit>
        <trans-unit id="2a480eadd0d94fe624912e0c9231b5b28630f2a3" translate="yes" xml:space="preserve">
          <source>Passes &lt;code&gt;ListIn&lt;/code&gt; through a sequence of substitution/expansion stages. For an &lt;code&gt;aliases&lt;/code&gt; operation, function &lt;code&gt;&lt;a href=&quot;#substitute_aliases-2&quot;&gt;substitute_aliases/2&lt;/a&gt;&lt;/code&gt; is applied using the specified list of aliases:</source>
          <target state="translated">渡し &lt;code&gt;ListIn&lt;/code&gt; を置換/拡張期のシーケンスを。ため &lt;code&gt;aliases&lt;/code&gt; 操作、機能 &lt;code&gt;&lt;a href=&quot;#substitute_aliases-2&quot;&gt;substitute_aliases/2&lt;/a&gt;&lt;/code&gt; エイリアスの指定されたリストを使用して適用されます。</target>
        </trans-unit>
        <trans-unit id="e5bad30c3f82a8b6ce3c2d80f62cb2189d29b412" translate="yes" xml:space="preserve">
          <source>Passes extra arguments to the emulator startup program &lt;code&gt;erl.exe&lt;/code&gt; (or &lt;code&gt;start_erl.exe&lt;/code&gt;). Arguments that cannot be specified here are &lt;code&gt;-noinput&lt;/code&gt; (&lt;code&gt;StopActions&lt;/code&gt; would not work), &lt;code&gt;-name&lt;/code&gt;, and &lt;code&gt;-sname&lt;/code&gt; (they are specified in any way). The most common use is for specifying cookies and flags to be passed to &lt;code&gt;init:boot()&lt;/code&gt; (&lt;code&gt;-s&lt;/code&gt;).</source>
          <target state="translated">エミュレータ起動プログラム &lt;code&gt;erl.exe&lt;/code&gt; （または &lt;code&gt;start_erl.exe&lt;/code&gt; ）に追加の引数を渡します。ここで指定することができない引数です &lt;code&gt;-noinput&lt;/code&gt; （ &lt;code&gt;StopActions&lt;/code&gt; が動作しない）、 &lt;code&gt;-name&lt;/code&gt; 、および &lt;code&gt;-sname&lt;/code&gt; （それらがどのような方法で指定されています）。最も一般的な使用法は、 &lt;code&gt;init:boot()&lt;/code&gt; （- &lt;code&gt;-s&lt;/code&gt; ）に渡されるCookieとフラグを指定することです。</target>
        </trans-unit>
        <trans-unit id="17423ed9634ebf487daeddd08024ea098b0dfac8" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;msg_env&lt;/code&gt; as &lt;code&gt;NULL&lt;/code&gt; is only supported as from ERTS 8.0 (Erlang/OTP 19).</source>
          <target state="translated">&lt;code&gt;msg_env&lt;/code&gt; を &lt;code&gt;NULL&lt;/code&gt; として渡すことは、ERTS 8.0（Erlang / OTP 19）以降でのみサポートされます。</target>
        </trans-unit>
        <trans-unit id="05b52936612a6b19fd4936a6190ec91e1270fc3f" translate="yes" xml:space="preserve">
          <source>Passing the others on to an enclosing &lt;code&gt;try&lt;/code&gt; or &lt;code&gt;catch&lt;/code&gt;, or to default error handling.</source>
          <target state="translated">他を、囲んでいる &lt;code&gt;try&lt;/code&gt; または &lt;code&gt;catch&lt;/code&gt; 、またはデフォルトのエラー処理に渡します。</target>
        </trans-unit>
        <trans-unit id="7c5751b4937e362acbdf37fef68aa0c840a5f43f" translate="yes" xml:space="preserve">
          <source>Password authentication in Erlang SSH</source>
          <target state="translated">Erlang SSHでのパスワード認証</target>
        </trans-unit>
        <trans-unit id="c3441c01856bc44f16f44713579f9eb0b9cab8a3" translate="yes" xml:space="preserve">
          <source>Password-protected and encrypted archives are not supported.</source>
          <target state="translated">パスワードで保護されたアーカイブや暗号化されたアーカイブはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="6c3606fd7f334a9c3d48f5825a16e88b15b8c73b" translate="yes" xml:space="preserve">
          <source>Pasted text is inserted at the current prompt position and is interpreted by Erlang as usual keyboard input.</source>
          <target state="translated">貼り付けられたテキストは現在のプロンプトの位置に挿入され、Erlangでは通常のキーボード入力と同じように解釈されます。</target>
        </trans-unit>
        <trans-unit id="bae50870edf6016cbfd2f917e452b9a16dcd7599" translate="yes" xml:space="preserve">
          <source>Patches are either released as maintenance patch packages or emergency patch packages. The only difference is that maintenance patch packages are planned and usually contain more changes than emergency patch packages. Emergency patch packages are released to solve one or more specific issues when such are discovered.</source>
          <target state="translated">パッチはメンテナンスパッチパッケージか緊急パッチパッケージとしてリリースされます。唯一の違いは、メンテナンスパッチパッケージは計画されており、通常は緊急パッチパッケージよりも多くの変更を含んでいます。緊急パッチパッケージは、一つ以上の特定の問題が発見された場合に、それを解決するためにリリースされます。</target>
        </trans-unit>
        <trans-unit id="8160b1ab2039239aefde8cb0e11cb5ebe2e0ad8b" translate="yes" xml:space="preserve">
          <source>Patching applications is a one-way process. Create a backup of your OTP installation directory before proceeding.</source>
          <target state="translated">アプリケーションのパッチ適用は一方通行のプロセスです。先に進む前に、OTP インストールディレクトリのバックアップを作成してください。</target>
        </trans-unit>
        <trans-unit id="55c14b77f9d8f42c4e27a07e774f4f8fb65cbb79" translate="yes" xml:space="preserve">
          <source>Path P is &lt;strong id=&quot;simple_path&quot;&gt;simple&lt;/strong&gt; if all vertices are distinct, except that the first and the last vertices can be the same.</source>
          <target state="translated">パスPは、最初と最後の頂点が同じであることを除いて、すべての頂点が異なる場合は&lt;strong id=&quot;simple_path&quot;&gt;単純&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="b2e97f14f2f6a2a22960aaaf716fd64dd488ed83" translate="yes" xml:space="preserve">
          <source>Path P is a &lt;strong id=&quot;cycle&quot;&gt;cycle&lt;/strong&gt; if the length of P is not zero and v[1] = v[k].</source>
          <target state="translated">パスPは、P の長さがゼロでなく、v [1] = v [k]の場合、&lt;strong id=&quot;cycle&quot;&gt;サイクル&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="ec4b3c7aff6a8f5ca4aa618fd7283506da7262b5" translate="yes" xml:space="preserve">
          <source>Path to a file containing PEM-encoded CA certificates. The CA certificates are used during server authentication and when building the client certificate chain.</source>
          <target state="translated">PEM エンコードされた CA 証明書を含むファイルへのパス。CA 証明書は、サーバ認証時やクライアント証明書チェーンの構築時に使用されます。</target>
        </trans-unit>
        <trans-unit id="e90e566c06157343897915883777d52efdf4c086" translate="yes" xml:space="preserve">
          <source>Path to a file containing PEM-encoded CA certificates. The CA certificates are used to build the server certificate chain and for client authentication. The CAs are also used in the list of acceptable client CAs passed to the client when a certificate is requested. Can be omitted if there is no need to verify the client and if there are no intermediate CAs for the server certificate.</source>
          <target state="translated">PEM エンコードされた CA 証明書を含むファイルへのパス。CA 証明書は、サーバ証明書チェーンの構築およびクライアント認証に使用される。CA 証明書は、証明書が要求されたときにクライアントに渡される許容可能なクライアント CA のリストでも使用されます。クライアントを検証する必要がなく、サーバ証明書のための中間 CA が存在しない場合は省略できる。</target>
        </trans-unit>
        <trans-unit id="a605e96cddb300d711887a44f810e2c399109734" translate="yes" xml:space="preserve">
          <source>Path to a file containing PEM-encoded Diffie Hellman parameters to be used by the server if a cipher suite using Diffie Hellman key exchange is negotiated. If not specified, default parameters are used.</source>
          <target state="translated">Diffie Hellman 鍵交換を用いた暗号化スイートがネゴシエートされた場合にサーバが使用する PEM エンコードされた Diffie Hellman パラメータを含むファイルへのパス。指定されなかった場合はデフォルトのパラメータが使用されます。</target>
        </trans-unit>
        <trans-unit id="4652f6d89f276e4fe49b02c8985562829b98b7ad" translate="yes" xml:space="preserve">
          <source>Path to a file containing the user certificate on PEM format or possible several certificates where the first one is the users certificate and the rest of the certificates constitutes the certificate chain. For more details see &lt;code&gt;&lt;a href=&quot;#type-cert&quot;&gt;cert()&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="translated">PEM形式のユーザー証明書または可能な複数の証明書を含むファイルへのパス。最初の証明書はユーザー証明書であり、残りの証明書は証明書チェーンを構成します。詳細については、 &lt;code&gt;&lt;a href=&quot;#type-cert&quot;&gt;cert()&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="eac8a20a2d9480ebb53700b4e9bedee92d37f637" translate="yes" xml:space="preserve">
          <source>Path to a file containing the user certificate.</source>
          <target state="translated">ユーザー証明書を含むファイルへのパス。</target>
        </trans-unit>
        <trans-unit id="1e962d8338f96f1e74e511aa7a15c1b3d987bd58" translate="yes" xml:space="preserve">
          <source>Path to the file containing the user's private PEM-encoded key. As PEM-files can contain several entries, this option defaults to the same file as given by option &lt;code&gt;certfile&lt;/code&gt;.</source>
          <target state="translated">ユーザーのPEMエンコードされた秘密鍵を含むファイルへのパス。PEMファイルには複数のエントリを含めることができるため、このオプションのデフォルトは、オプション &lt;code&gt;certfile&lt;/code&gt; で指定されたものと同じファイルになります。</target>
        </trans-unit>
        <trans-unit id="8fcabcda1f4e1160624d33fb2f5784f5c63030cc" translate="yes" xml:space="preserve">
          <source>PathList is a list of directories to search when fetching files. If the file in question is not in the fetch_path, the URI will be used as a file name.</source>
          <target state="translated">PathListは、ファイルをフェッチする際に検索するディレクトリのリストです。問題のファイルがfetch_pathにない場合は、URIがファイル名として使用されます。</target>
        </trans-unit>
        <trans-unit id="47482e00ecdde046c872e760861acd107da31305" translate="yes" xml:space="preserve">
          <source>Paths to keys are left to right, with subkeys to the right and backslash between keys. (Remember that backslashes must be doubled in Erlang strings.) Case is preserved but not significant.</source>
          <target state="translated">キーへのパスは左から右へ、サブキーは右へ、キーとキーの間にバックスラッシュを入れます。(Erlangの文字列ではバックスラッシュは2倍にしなければならないことを覚えておいてください。)大文字小文字は保存されますが、重要ではありません。</target>
        </trans-unit>
        <trans-unit id="4a4ff6f40515d80959eb2891b1a4f521722adb61" translate="yes" xml:space="preserve">
          <source>Pattern matching</source>
          <target state="translated">パターンマッチング</target>
        </trans-unit>
        <trans-unit id="07df831a704cd0fc47532246baa7f29146388369" translate="yes" xml:space="preserve">
          <source>Pattern matching in function head as well as in &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;receive&lt;/code&gt; clauses are optimized by the compiler. With a few exceptions, there is nothing to gain by rearranging clauses.</source>
          <target state="translated">関数の先頭と、 &lt;code&gt;case&lt;/code&gt; および &lt;code&gt;receive&lt;/code&gt; 句のパターンマッチングは、コンパイラによって最適化されます。いくつかの例外はありますが、句を並べ替えても何も得られません。</target>
        </trans-unit>
        <trans-unit id="e33f96bb1810cf2a758f0574bbb8ca910eec1915" translate="yes" xml:space="preserve">
          <source>Pattern matching with records is very similar to creating records. For example, inside a &lt;code&gt;case&lt;/code&gt; or &lt;code&gt;receive&lt;/code&gt;:</source>
          <target state="translated">レコードとのパターンマッチングは、レコードの作成とよく似ています。たとえば、 &lt;code&gt;case&lt;/code&gt; 内部または &lt;code&gt;receive&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3b4cf89b5b26547550456e5e4f643ae53f5d29be" translate="yes" xml:space="preserve">
          <source>Pattern variables &lt;code&gt;'$N'&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt;=0,1,...</source>
          <target state="translated">パターン変数 &lt;code&gt;'$N'&lt;/code&gt; 、ここで &lt;code&gt;N&lt;/code&gt; = 0,1、...</target>
        </trans-unit>
        <trans-unit id="98d00def036dd2fd6e93404dff53fcc8b8b39938" translate="yes" xml:space="preserve">
          <source>Patterns are allowed in clause heads, &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;receive&lt;/code&gt; expressions, and match expressions.</source>
          <target state="translated">パターンは、句の頭、 &lt;code&gt;case&lt;/code&gt; および &lt;code&gt;receive&lt;/code&gt; 式、およびmatch式で使用できます。</target>
        </trans-unit>
        <trans-unit id="6af09a32bdb3adae271bf8a9bea0cb4b9c66dda2" translate="yes" xml:space="preserve">
          <source>Pau_Cin_Hau</source>
          <target state="translated">Pau_Cin_Hau</target>
        </trans-unit>
        <trans-unit id="49ed482e870cd614e256519cffa6b9161630c632" translate="yes" xml:space="preserve">
          <source>Pause call count tracing for all functions in all modules and stop it for all functions in modules to be loaded. This is the same as &lt;code&gt;(pause({'_','_','_'})+stop({on_load}))&lt;/code&gt;.</source>
          <target state="translated">すべてのモジュールのすべての関数の呼び出しカウントトレースを一時停止し、モジュールのすべての関数が読み込まれるまで停止します。これは &lt;code&gt;(pause({'_','_','_'})+stop({on_load}))&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2db0d11168e0cf244f7875ac1346e7b6c97f62cc" translate="yes" xml:space="preserve">
          <source>Pause call counters for matching functions in matching modules. The &lt;code&gt;FS&lt;/code&gt; argument can be used to specify the first argument to &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt;. See erlang(3).</source>
          <target state="translated">一致するモジュール内の一致する関数の呼び出しカウンターを一時停止します。 &lt;code&gt;FS&lt;/code&gt; の引数は、最初の引数を指定するために使用することができ &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt; 。erlang（3）を参照してください。</target>
        </trans-unit>
        <trans-unit id="391d516918ec3156c32ea3be943e04f2e2a433a7" translate="yes" xml:space="preserve">
          <source>Pauses the call counters for specified functions. This minimises the impact of code running in the background or in the shell that disturbs the profiling. Call counters are automatically paused when they &quot;hit the ceiling&quot; of the host machine word size. For a 32 bit host the maximum counter value is 2147483647.</source>
          <target state="translated">指定した関数の呼び出しカウンタを一時停止します。これにより、バックグラウンドやシェルで実行されているコードの影響を最小限に抑え、プロファイリングを妨害します。呼び出しカウンタは、ホストマシンのワードサイズの「上限」に達すると自動的に一時停止されます。32 ビットホストの場合、カウンタの最大値は 2147483647 です。</target>
        </trans-unit>
        <trans-unit id="cf9afa37f2e5869dc6ad902115a35d4f0c5f630f" translate="yes" xml:space="preserve">
          <source>Peer Connections</source>
          <target state="translated">ピアコネクション</target>
        </trans-unit>
        <trans-unit id="59488fa72b53c2103f34565feb175db9fb2c4131" translate="yes" xml:space="preserve">
          <source>Peer State Machine</source>
          <target state="translated">ピアステートマシン</target>
        </trans-unit>
        <trans-unit id="98ae8b5da563501389aa05d3f2695db094619a3c" translate="yes" xml:space="preserve">
          <source>Peer Table</source>
          <target state="translated">ピアテーブル</target>
        </trans-unit>
        <trans-unit id="1bee610f8ffa13f60ce754210a4e3cbf3ffbe983" translate="yes" xml:space="preserve">
          <source>Peer to which the request in question can be sent, preempting the selection of peers having advertised support for the Diameter application in question. Multiple options can be specified, and their order is respected in the candidate lists passed to a subsequent &lt;code&gt;pick_peer/4&lt;/code&gt; callback.</source>
          <target state="translated">問題のリクエストを送信できるピア。問題のDiameterアプリケーションのサポートをアドバタイズしたピアの選択に優先します。複数のオプションを指定でき、それらの順序は、後続の &lt;code&gt;pick_peer/4&lt;/code&gt; コールバックに渡される候補リストで尊重されます。</target>
        </trans-unit>
        <trans-unit id="84b84620029f6985cb04948713a4f88534fba4df" translate="yes" xml:space="preserve">
          <source>Peer-to-Peer Considerations</source>
          <target state="translated">ピアツーピアの考察</target>
        </trans-unit>
        <trans-unit id="fcd5fc2500f0a1816c7d774f52e29f9431495a7a" translate="yes" xml:space="preserve">
          <source>Peers are only shared with services of the same name for the purpose of sending outgoing requests. Since the value of the &lt;code&gt;&lt;a href=&quot;#application_opt&quot;&gt;application_opt()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;alias&lt;/code&gt;, passed to &lt;code&gt;&lt;a href=&quot;#call-4&quot;&gt;call/4&lt;/a&gt;&lt;/code&gt;, is the handle for identifying a peer as a suitable candidate, services that share peers must use the same aliases to identify their supported applications. They should typically also configure identical &lt;code&gt;&lt;a href=&quot;#capabilities&quot;&gt;capabilities()&lt;/a&gt;&lt;/code&gt;, since by sharing peer connections they are distributing the implementation of a single Diameter node across multiple Erlang nodes.</source>
          <target state="translated">ピアは、発信要求を送信する目的で同じ名前のサービスとのみ共有されます。 &lt;code&gt;&lt;a href=&quot;#call-4&quot;&gt;call/4&lt;/a&gt;&lt;/code&gt; に渡される &lt;code&gt;&lt;a href=&quot;#application_opt&quot;&gt;application_opt()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;alias&lt;/code&gt; の値は、ピアを適切な候補として識別するためのハンドルであるため、ピアを共有するサービスは、サポートされるアプリケーションを識別するために同じエイリアスを使用する必要があります。また、ピア接続を共有することにより、複数のErlangノード間で単一のDiameterノードの実装を分散しているため、通常は同じ &lt;code&gt;&lt;a href=&quot;#capabilities&quot;&gt;capabilities()&lt;/a&gt;&lt;/code&gt; も構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="83040eadd1e47ac6af77c8ee2d41f0ec18c15f6e" translate="yes" xml:space="preserve">
          <source>Per module to caller</source>
          <target state="translated">呼び出し元のモジュールごと</target>
        </trans-unit>
        <trans-unit id="2cad7f79a8783eead4b37e0cf84881231114b250" translate="yes" xml:space="preserve">
          <source>Per process to screen/file</source>
          <target state="translated">プロセスごとにスクリーニング/ファイル</target>
        </trans-unit>
        <trans-unit id="15141e26e03178e5d1d620e527c846aa1c625c2d" translate="yes" xml:space="preserve">
          <source>Per process/function to screen/file</source>
          <target state="translated">プロセス/機能ごとにスクリーニング/ファイル化する</target>
        </trans-unit>
        <trans-unit id="21a672c25cb6115c561386f5282f6c411185f4cd" translate="yes" xml:space="preserve">
          <source>Percent-encoding is implemented in &lt;code&gt;&lt;a href=&quot;uri_string#recompose-1&quot;&gt;uri_string:recompose/1&lt;/a&gt;&lt;/code&gt; and it happens when converting a &lt;code&gt;&lt;a href=&quot;uri_string#type-uri_map&quot;&gt;uri_map()&lt;/a&gt;&lt;/code&gt; into a &lt;code&gt;&lt;a href=&quot;uri_string#type-uri_string&quot;&gt;uri_string()&lt;/a&gt;&lt;/code&gt;. There is no equivalent to a raw percent-encoding function as percent-encoding shall be applied on the component level using different sets of allowed characters. Applying percent-encoding directly on an input URI would not be safe just as in the case of &lt;code&gt;&lt;a href=&quot;uri_string#percent_decode-1&quot;&gt;uri_string:percent_decode/1&lt;/a&gt;&lt;/code&gt;, the output could be an invalid URI.</source>
          <target state="translated">パーセント符号化で実装され &lt;code&gt;&lt;a href=&quot;uri_string#recompose-1&quot;&gt;uri_string:recompose/1&lt;/a&gt;&lt;/code&gt; および変換時にそれが起こる &lt;code&gt;&lt;a href=&quot;uri_string#type-uri_map&quot;&gt;uri_map()&lt;/a&gt;&lt;/code&gt; 内に &lt;code&gt;&lt;a href=&quot;uri_string#type-uri_string&quot;&gt;uri_string()&lt;/a&gt;&lt;/code&gt; 。パーセントエンコードは、許可された文字のさまざまなセットを使用してコンポーネントレベルで適用されるため、生のパーセントエンコード関数に相当するものはありません。 &lt;code&gt;&lt;a href=&quot;uri_string#percent_decode-1&quot;&gt;uri_string:percent_decode/1&lt;/a&gt;&lt;/code&gt; の場合のように、入力URIに直接パーセントエンコードを適用することは安全ではなく、出力が無効なURIである可能性があります。</target>
        </trans-unit>
        <trans-unit id="6128679797da16a04d84c728a524e6710fc16bbe" translate="yes" xml:space="preserve">
          <source>Percentage of accumulated waiting time of wall clock time. This percentage can be higher than 100% since accumulated time is from all threads.</source>
          <target state="translated">ウォールクロック時間の累積待ち時間の割合。累積時間は全スレッドからのものなので、このパーセンテージは100%よりも高くなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="cfb78b6579cb64af21372225b9a2c062736452a4" translate="yes" xml:space="preserve">
          <source>Perform CRL (Certificate Revocation List) verification &lt;code&gt; (public_key:pkix_crls_validate/3)&lt;/code&gt; on all the certificates during the path validation &lt;code&gt;(public_key:pkix_path_validation/3) &lt;/code&gt; of the certificate chain. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">証明書チェーンのパス検証 &lt;code&gt;(public_key:pkix_path_validation/3) &lt;/code&gt; 中に、すべての証明書に対してCRL（証明書失効リスト）検証 &lt;code&gt; (public_key:pkix_crls_validate/3)&lt;/code&gt; を実行します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="900a5b77b467253970a850573dc79a89db1e52f1" translate="yes" xml:space="preserve">
          <source>Perform CRL (Certificate Revocation List) verification &lt;code&gt;(public_key:pkix_crls_validate/3)&lt;/code&gt; on all the certificates during the path validation &lt;code&gt;(public_key:pkix_path_validation/3)&lt;/code&gt; of the certificate chain. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">証明書チェーンのパス検証 &lt;code&gt;(public_key:pkix_path_validation/3)&lt;/code&gt; 中に、すべての証明書に対してCRL（証明書失効リスト）検証 &lt;code&gt;(public_key:pkix_crls_validate/3)&lt;/code&gt; を実行します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7dfd0566897f67f4a88a10a9ccab4a835f714346" translate="yes" xml:space="preserve">
          <source>Perform a backup of the mib-server data.</source>
          <target state="translated">mib-serverデータのバックアップを実行します。</target>
        </trans-unit>
        <trans-unit id="f5297ab6e77bd5a8f87b119bc54aebb086ae8bf2" translate="yes" xml:space="preserve">
          <source>Perform a backup of the mib-storage table.</source>
          <target state="translated">mib-storage テーブルのバックアップを実行します。</target>
        </trans-unit>
        <trans-unit id="bb3df0035ca80e21666d0fd6cd422cbcccdf7b1a" translate="yes" xml:space="preserve">
          <source>Perform a code-change (upgrade or downgrade).</source>
          <target state="translated">コード変更(アップグレードまたはダウングレード)を実行します。</target>
        </trans-unit>
        <trans-unit id="dcafc54e1058ab12e1726559ee25482e972eb9fa" translate="yes" xml:space="preserve">
          <source>Perform a minimal decode of a megaco message.</source>
          <target state="translated">megacoメッセージの最小デコードを実行します。</target>
        </trans-unit>
        <trans-unit id="794622c63bd34b165ba99166f899c7db08151e43" translate="yes" xml:space="preserve">
          <source>Perform mib server cache gc.</source>
          <target state="translated">mib サーバーキャッシュ gc を実行します。</target>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="3130994b43da1d8950109e1c6564a8348e9d6104" translate="yes" xml:space="preserve">
          <source>Performance Considerations</source>
          <target state="translated">パフォーマンスに関する考察</target>
        </trans-unit>
        <trans-unit id="ffce32cc050ae65e8a2071012a2914617cc171d0" translate="yes" xml:space="preserve">
          <source>Performance suffers when modified timing is enabled. This flag is &lt;strong&gt;only&lt;/strong&gt; intended for testing and debugging.</source>
          <target state="translated">タイミングの変更を有効にすると、パフォーマンスが低下します。このフラグは、テストとデバッグ&lt;strong&gt;のみを&lt;/strong&gt;目的としています。</target>
        </trans-unit>
        <trans-unit id="7d4cef1e85e0d8796653ef41a51578e4b550d221" translate="yes" xml:space="preserve">
          <source>Performance tuning. Defaults to &lt;code&gt;false&lt;/code&gt;, in which case an operation that mutates (writes to) the table obtains exclusive access, blocking any concurrent access of the same table until finished. If set to &lt;code&gt;true&lt;/code&gt;, the table is optimized to concurrent write access. Different objects of the same table can be mutated (and read) by concurrent processes. This is achieved to some degree at the expense of memory consumption and the performance of sequential access and concurrent reading.</source>
          <target state="translated">性能調整。デフォルトは &lt;code&gt;false&lt;/code&gt; です。この場合、テーブルを変更（書き込み）する操作は排他アクセスを取得し、終了するまで同じテーブルへの同時アクセスをブロックします。 &lt;code&gt;true&lt;/code&gt; に設定すると、テーブルは同時書き込みアクセスに最適化されます。同じテーブルの異なるオブジェクトは、並行プロセスによって変更（および読み取り）できます。これは、メモリの消費と順次アクセスおよび同時読み取りのパフォーマンスを犠牲にしてある程度達成されます。</target>
        </trans-unit>
        <trans-unit id="4ab94c7cedeb2cfec74773af353f3d78c22eb541" translate="yes" xml:space="preserve">
          <source>Performance tuning. Defaults to &lt;code&gt;false&lt;/code&gt;. When set to &lt;code&gt;true&lt;/code&gt;, the table is optimized for concurrent read operations. When this option is enabled on a runtime system with SMP support, read operations become much cheaper; especially on systems with multiple physical processors. However, switching between read and write operations becomes more expensive.</source>
          <target state="translated">性能調整。デフォルトは &lt;code&gt;false&lt;/code&gt; です。 &lt;code&gt;true&lt;/code&gt; に設定すると、テーブルは同時読み取り操作用に最適化されます。SMPをサポートするランタイムシステムでこのオプションを有効にすると、読み取り操作が大幅に安価になります。特に、複数の物理プロセッサーを備えたシステムで。ただし、読み取り操作と書き込み操作を切り替えると、コストが高くなります。</target>
        </trans-unit>
        <trans-unit id="91515440c402b608cc59dbc5bbe6e2a35b330acc" translate="yes" xml:space="preserve">
          <source>Performance tuning. Defaults to &lt;code&gt;true&lt;/code&gt; for tables of type &lt;code&gt;ordered_set&lt;/code&gt; with the &lt;code&gt;&lt;a href=&quot;#new_2_write_concurrency&quot;&gt; write_concurrency&lt;/a&gt;&lt;/code&gt; option enabled, and defaults to false for all other table types. This option has no effect if the &lt;code&gt;write_concurrency&lt;/code&gt; option is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">性能調整。デフォルトは &lt;code&gt;true&lt;/code&gt; タイプのテーブルのための &lt;code&gt;ordered_set&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;#new_2_write_concurrency&quot;&gt; write_concurrency&lt;/a&gt;&lt;/code&gt; の有効オプション、および他のすべてのテーブル型のためのデフォルトはfalse。 &lt;code&gt;write_concurrency&lt;/code&gt; オプションが &lt;code&gt;false&lt;/code&gt; に設定されている場合、このオプションは効果がありません。</target>
        </trans-unit>
        <trans-unit id="24461109bfb38c1846415956b344d29b6573204f" translate="yes" xml:space="preserve">
          <source>Performing the handshakes/cookie verification</source>
          <target state="translated">握手/クッキーの検証を行う</target>
        </trans-unit>
        <trans-unit id="748a52904d3e179112746e46060bb4e26004cda9" translate="yes" xml:space="preserve">
          <source>Performs CRL validation. It is intended to be called from the verify fun of &lt;code&gt;&lt;a href=&quot;#pkix_path_validation-3&quot;&gt; pkix_path_validation/3 &lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">CRL検証を実行します。これは、 &lt;code&gt;&lt;a href=&quot;#pkix_path_validation-3&quot;&gt; pkix_path_validation/3 &lt;/a&gt;&lt;/code&gt; のverifyfunから呼び出されることを目的としています。</target>
        </trans-unit>
        <trans-unit id="4f5f75852079a024445eb45615d781f09840d582" translate="yes" xml:space="preserve">
          <source>Performs CRL validation. It is intended to be called from the verify fun of &lt;code&gt;&lt;a href=&quot;#pkix_path_validation-3&quot;&gt;pkix_path_validation/3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">CRL検証を実行します。 &lt;code&gt;&lt;a href=&quot;#pkix_path_validation-3&quot;&gt;pkix_path_validation/3&lt;/a&gt;&lt;/code&gt; の検証機能から呼び出されることを意図しています。</target>
        </trans-unit>
        <trans-unit id="55946f4b90e3f6fd8ef1498f50ddd3c5f07b68a6" translate="yes" xml:space="preserve">
          <source>Performs a GET operation on the agent. All loaded MIB objects are visible in this operation. The agent calls the corresponding instrumentation functions just as if it was a GET request coming from a manager.</source>
          <target state="translated">エージェントに対して GET 操作を実行します。この操作では、ロードされたすべての MIB オブジェクトが表示されます。エージェントは、マネージャからの GET 要求であるかのように、対応するインストルメンテーション関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="98e445605a9fc3e5f98515d8ffa3a57e6ffd8436" translate="yes" xml:space="preserve">
          <source>Performs a GET-NEXT operation on the agent. All loaded MIB objects are visible in this operation. The agent calls the corresponding instrumentation functions just as if it was a GET request coming from a manager.</source>
          <target state="translated">エージェントに対して GET-NEXT 操作を実行します。この操作では、ロードされたすべてのMIBオブジェクトが表示されます。エージェントは、マネージャからの GET 要求であるかのように、対応するインストルメンテーション関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="74811a8e4cadcf197c65d7d83047edc0c17164a0" translate="yes" xml:space="preserve">
          <source>Performs a basic path validation according to &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5280.txt&quot;&gt;RFC 5280.&lt;/a&gt;&lt;/code&gt; However, CRL validation is done separately by &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3 &lt;/a&gt;&lt;/code&gt; and is to be called from the supplied &lt;code&gt;verify_fun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5280.txt&quot;&gt;RFC 5280.&lt;/a&gt;&lt;/code&gt; に従って基本的なパス検証を実行します。ただし、CRL検証は &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3 &lt;/a&gt;&lt;/code&gt; によって個別に実行され、提供された &lt;code&gt;verify_fun&lt;/code&gt; から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="fbfe9d2053799030c3effc383609b21073247735" translate="yes" xml:space="preserve">
          <source>Performs a basic path validation according to &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5280.txt&quot;&gt;RFC 5280.&lt;/a&gt;&lt;/code&gt; However, CRL validation is done separately by &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3&lt;/a&gt;&lt;/code&gt; and is to be called from the supplied &lt;code&gt;verify_fun&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5280.txt&quot;&gt;RFC 5280.&lt;/a&gt;&lt;/code&gt; に従って基本パス検証を実行します。ただし、CRL検証は &lt;code&gt;&lt;a href=&quot;#pkix_crls_validate-3&quot;&gt;pkix_crls_validate/3&lt;/a&gt;&lt;/code&gt; によって個別に行われ、提供された &lt;code&gt;verify_fun&lt;/code&gt; から呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9816bd4572d4da2d5254081f508d19359bc0475d" translate="yes" xml:space="preserve">
          <source>Performs a sanity check on the system. If no issues were found, &lt;code&gt;ok&lt;/code&gt; is returned. If issues were found, &lt;code&gt;{failed, Failures}&lt;/code&gt; is returned. All failures found will be part of the &lt;code&gt;Failures&lt;/code&gt; list. Currently defined &lt;code&gt;Failure&lt;/code&gt; elements in the &lt;code&gt;Failures&lt;/code&gt; list:</source>
          <target state="translated">システムの健全性チェックを実行します。問題が見つからなかった場合は、 &lt;code&gt;ok&lt;/code&gt; が返されます。問題が見つかった場合、 &lt;code&gt;{failed, Failures}&lt;/code&gt; が返されます。検出されたすべての失敗は、 &lt;code&gt;Failures&lt;/code&gt; リストの一部になります。 &lt;code&gt;Failures&lt;/code&gt; リストで現在定義されている &lt;code&gt;Failure&lt;/code&gt; 要素：</target>
        </trans-unit>
        <trans-unit id="1be49612d446742e1eb3514b871f56b8a3ce8433" translate="yes" xml:space="preserve">
          <source>Performs a sequence of &lt;code&gt;pread/3&lt;/code&gt; in one operation, which is more efficient than calling them one at a time. Returns &lt;code&gt;{ok, [Data, ...]}&lt;/code&gt; or &lt;code&gt;{error, Reason}&lt;/code&gt;, where each &lt;code&gt;Data&lt;/code&gt;, the result of the corresponding &lt;code&gt;pread&lt;/code&gt;, is either a list or a binary depending on the mode of the file, or &lt;code&gt;eof&lt;/code&gt; if the requested position is beyond end of file.</source>
          <target state="translated">&lt;code&gt;pread/3&lt;/code&gt; のシーケンスを1回の操作で実行します。これは、一度に1つずつ呼び出すよりも効率的です。戻り &lt;code&gt;{ok, [Data, ...]}&lt;/code&gt; または &lt;code&gt;{error, Reason}&lt;/code&gt; それぞれ、 &lt;code&gt;Data&lt;/code&gt; 、対応の結果 &lt;code&gt;pread&lt;/code&gt; 、リストまたはファイルのモードに応じてバイナリのいずれかである、または &lt;code&gt;eof&lt;/code&gt; 要求された場合位置がファイルの終わりを超えています。</target>
        </trans-unit>
        <trans-unit id="22bb771fd651389aaadce513456ba74d3fd0ed89" translate="yes" xml:space="preserve">
          <source>Performs a sequence of &lt;code&gt;pwrite/3&lt;/code&gt; in one operation, which is more efficient than calling them one at a time. Returns &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;{error, {N, Reason}}&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the number of successful writes done before the failure.</source>
          <target state="translated">1回の操作で &lt;code&gt;pwrite/3&lt;/code&gt; のシーケンスを実行します。これは、一度に1つずつ呼び出すよりも効率的です。 &lt;code&gt;ok&lt;/code&gt; または &lt;code&gt;{error, {N, Reason}}&lt;/code&gt; 返します。ここで、 &lt;code&gt;N&lt;/code&gt; は失敗の前に行われた成功した書き込みの数です。</target>
        </trans-unit>
        <trans-unit id="280190b61c0c88706d5eded9a13af6f093ee900b" translate="yes" xml:space="preserve">
          <source>Performs a synchronous call to a port. The meaning of &lt;code&gt;Operation&lt;/code&gt; and &lt;code&gt;Data&lt;/code&gt; depends on the port, that is, on the port driver. Not all port drivers support this feature.</source>
          <target state="translated">ポートへの同期呼び出しを実行します。 &lt;code&gt;Operation&lt;/code&gt; と &lt;code&gt;Data&lt;/code&gt; の意味は、ポート、つまりポートドライバーによって異なります。すべてのポートドライバがこの機能をサポートしているわけではありません。</target>
        </trans-unit>
        <trans-unit id="40fc6748b5fbb2d35ce953467a85ef32b1d82a24" translate="yes" xml:space="preserve">
          <source>Performs a synchronous control operation on a port. The meaning of &lt;code&gt;Operation&lt;/code&gt; and &lt;code&gt;Data&lt;/code&gt; depends on the port, that is, on the port driver. Not all port drivers support this control feature.</source>
          <target state="translated">ポートで同期制御操作を実行します。 &lt;code&gt;Operation&lt;/code&gt; と &lt;code&gt;Data&lt;/code&gt; の意味は、ポート、つまりポートドライバーによって異なります。すべてのポートドライバがこの制御機能をサポートしているわけではありません。</target>
        </trans-unit>
        <trans-unit id="13d765f074145e069c27186fead40fb3ae13c752" translate="yes" xml:space="preserve">
          <source>Performs a syntactic and semantic check of the script file. Warnings and errors (if any) are written to the standard output, but the script will not be run. The exit status is &lt;code&gt;0&lt;/code&gt; if any errors are found, otherwise &lt;code&gt;127&lt;/code&gt;.</source>
          <target state="translated">スクリプトファイルの構文的および意味的なチェックを実行します。警告とエラー（ある場合）は標準出力に書き込まれますが、スクリプトは実行されません。エラーが検出された場合の終了ステータスは &lt;code&gt;0&lt;/code&gt; です。それ以外の場合は &lt;code&gt;127&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="51b00069a7d5cb93226f893911ac7caf2f55b4b0" translate="yes" xml:space="preserve">
          <source>Performs a test of encode and decode of types in &lt;code&gt;Module&lt;/code&gt;. The generated functions are called by this function. This function is useful during test to secure that the generated encode and decode functions as well as the general runtime support work as expected.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; の型のエンコードとデコードのテストを実行します。生成された関数は、この関数によって呼び出されます。この関数は、テスト中に生成されたエンコードおよびデコード関数と一般的なランタイムサポートが期待どおりに機能することを保証するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="d3b4972ee35b6d2ed6932472f96493c8c99e99ae" translate="yes" xml:space="preserve">
          <source>Performs a user-initiated dump of the local log file. This is usually not necessary, as Mnesia by default manages this automatically. See configuration parameters &lt;code&gt;&lt;a href=&quot;#dump_log_time_threshold&quot;&gt;dump_log_time_threshold&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#dump_log_write_threshold&quot;&gt;dump_log_write_threshold&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ユーザーが開始したローカルログファイルのダンプを実行します。Mnesiaはデフォルトでこれを自動的に管理するため、これは通常必要ありません。構成パラメーター &lt;code&gt;&lt;a href=&quot;#dump_log_time_threshold&quot;&gt;dump_log_time_threshold&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#dump_log_write_threshold&quot;&gt;dump_log_write_threshold&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="cbce4fd8e8c273fb3d0d070a4bf63febe024097d" translate="yes" xml:space="preserve">
          <source>Performs an asynchronous call. The function &lt;code&gt;async_invoke&lt;/code&gt; is invoked in a thread separate from the emulator thread. This enables the driver to perform time-consuming, blocking operations without blocking the emulator.</source>
          <target state="translated">非同期呼び出しを実行します。関数 &lt;code&gt;async_invoke&lt;/code&gt; は、エミュレータスレッドとは別のスレッドで呼び出されます。これにより、ドライバーはエミュレーターをブロックせずに時間のかかるブロック操作を実行できます。</target>
        </trans-unit>
        <trans-unit id="fd8e1e45db305e4c65eb358872501f86f5ca41b3" translate="yes" xml:space="preserve">
          <source>Performs an ets/dets matching on the table. See Stdlib documentation, module ets, for a description of &lt;code&gt;Pattern&lt;/code&gt; and the return values.</source>
          <target state="translated">テーブルでets / detsマッチングを実行します。 &lt;code&gt;Pattern&lt;/code&gt; と戻り値の説明については、Stdlibのドキュメント、モジュールetsを参照してください。</target>
        </trans-unit>
        <trans-unit id="80ddf1ab4c5a4ace67d0fceb7152a9233f49eec4" translate="yes" xml:space="preserve">
          <source>Performs an identity transformation on Erlang forms, as an example.</source>
          <target state="translated">例として、Erlangフォーム上でidentity変換を行います。</target>
        </trans-unit>
        <trans-unit id="e96ceee5ca669b69ceed3f28a9e634eb2729259c" translate="yes" xml:space="preserve">
          <source>Performs analysis of one or more Cover compiled modules, as specified by &lt;code&gt;Analysis&lt;/code&gt; and &lt;code&gt;Level&lt;/code&gt; (see above), by examining the contents of the internal database.</source>
          <target state="translated">内部データベースの内容を調べることにより、 &lt;code&gt;Analysis&lt;/code&gt; and &lt;code&gt;Level&lt;/code&gt; （上記を参照）で指定された1つ以上のCoverコンパイル済みモジュールの分析を実行します。</target>
        </trans-unit>
        <trans-unit id="ef62ac9b7159f229d46fa80ce221a721a030144b" translate="yes" xml:space="preserve">
          <source>Performs bit-wise XOR (exclusive or) on the data supplied.</source>
          <target state="translated">供給されたデータに対してビット単位の XOR(排他的または排他的)を実行します。</target>
        </trans-unit>
        <trans-unit id="1e4270aba1ba7205d6177c0c6c52d4aee26d94d9" translate="yes" xml:space="preserve">
          <source>Performs command &lt;code&gt;listenv&lt;/code&gt; on the specified Telnet connection and returns the result as a list of key-value pairs.</source>
          <target state="translated">指定されたTelnet接続で &lt;code&gt;listenv&lt;/code&gt; コマンドを実行し、結果をキーと値のペアのリストとして返します。</target>
        </trans-unit>
        <trans-unit id="1e742f72d48ea0d869f73c425bd3bb42130fb756" translate="yes" xml:space="preserve">
          <source>Performs login of &lt;code&gt;User&lt;/code&gt; with &lt;code&gt;Password&lt;/code&gt; to the account specified by &lt;code&gt;Account&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Account&lt;/code&gt; で指定されたアカウントに &lt;code&gt;Password&lt;/code&gt; with &lt;code&gt;User&lt;/code&gt; のログインを実行します。</target>
        </trans-unit>
        <trans-unit id="61aff80f20917a90cadf86008c298098cf718490" translate="yes" xml:space="preserve">
          <source>Performs login of &lt;code&gt;User&lt;/code&gt; with &lt;code&gt;Password&lt;/code&gt;.</source>
          <target state="translated">ログイン処理を行う &lt;code&gt;User&lt;/code&gt; と &lt;code&gt;Password&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="769228d92551ca190343e485d3132a7289d3b538" translate="yes" xml:space="preserve">
          <source>Performs multiple &lt;code&gt;call&lt;/code&gt; operations in parallel on multiple nodes. That is, evaluates &lt;code&gt;apply(Module, Function, Args)&lt;/code&gt; on the nodes &lt;code&gt;Nodes&lt;/code&gt; in parallel. &lt;code&gt;Timeout&lt;/code&gt; is an integer representing the timeout in milliseconds or the atom &lt;code&gt;infinity&lt;/code&gt; which prevents the operation from ever timing out. The result is returned as a list where the result from each node is placed at the same position as the node name is placed in &lt;code&gt;Nodes&lt;/code&gt;. Each item in the resulting list is formatted as either:</source>
          <target state="translated">複数のノードで複数の &lt;code&gt;call&lt;/code&gt; 操作を並行して実行します。つまり、ノード &lt;code&gt;Nodes&lt;/code&gt; で &lt;code&gt;apply(Module, Function, Args)&lt;/code&gt; を並列に評価します。 &lt;code&gt;Timeout&lt;/code&gt; は、ミリ秒単位のタイムアウトまたは操作がタイムアウトしないようにするアトム &lt;code&gt;infinity&lt;/code&gt; を表す整数です。結果は、ノード名が中に配置されているように、各ノードからの結果が同じ位置に配置されたリストとして戻される &lt;code&gt;Nodes&lt;/code&gt; 。結果のリストの各項目は、次のいずれかの形式になります。</target>
        </trans-unit>
        <trans-unit id="4a3c66dde8a5c3d5e1d69b450f3fb1194e697017" translate="yes" xml:space="preserve">
          <source>Performs possible initializations of the cache and returns a reference to it that is used as parameter to the other API functions. Is called by the cache handling processes &lt;code&gt;init&lt;/code&gt; function, hence putting the same requirements on it as a normal process &lt;code&gt;init&lt;/code&gt; function. This function is called twice when starting the SSL application, once with the role client and once with the role server, as the SSL application must be prepared to take on both roles.</source>
          <target state="translated">キャッシュの可能な初期化を実行し、他のAPI関数へのパラメーターとして使用されるキャッシュへの参照を返します。キャッシュ処理プロセスの &lt;code&gt;init&lt;/code&gt; 関数によって呼び出されるため、通常のプロセスの &lt;code&gt;init&lt;/code&gt; 関数と同じ要件が課されます。SSLアプリケーションは両方の役割を担うように準備する必要があるため、この関数は、SSLアプリケーションの起動時に2回呼び出されます。1回はロールクライアントで、もう1回はロールサーバーで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f6e21c5aaeabe015b0a346ede9fe7603c40e3285" translate="yes" xml:space="preserve">
          <source>Performs some checks on the package, for example, checks that all mandatory files are present, and extracts its contents.</source>
          <target state="translated">例えば、すべての必須ファイルが存在するかどうかをチェックし、その内容を抽出します。</target>
        </trans-unit>
        <trans-unit id="d7e17286dfe95065d8a22e3569662aef2ec0170e" translate="yes" xml:space="preserve">
          <source>Performs the SSL/TLS/DTLS server-side handshake.</source>
          <target state="translated">SSL/TLS/DTLS サーバーサイドハンドシェイクを実行します。</target>
        </trans-unit>
        <trans-unit id="2464610ee2491632e223d2a2d09c63b72ea7ebff" translate="yes" xml:space="preserve">
          <source>Performs the TLS/DTLS server-side handshake.</source>
          <target state="translated">TLS/DTLS サーバ側ハンドシェイクを実行します。</target>
        </trans-unit>
        <trans-unit id="de30caaee38c0ba213430dd42690a090335a596f" translate="yes" xml:space="preserve">
          <source>Perhaps you want to do something more arranged for human reading. Suppose that you want to list all different brands in the beginning with links to each group of motorcycles. You also want all motorcycles sorted by brand, then some flashy colors on top of it. Thus you rearrange the order of the elements and put in arbitrary HTML tags. This is possible to do by means of the &lt;code&gt;&lt;a href=&quot;http://www.w3.org/Style/XSL/&quot;&gt;XSL Transformation (XSLT)&lt;/a&gt;&lt;/code&gt; like functionality in xmerl.</source>
          <target state="translated">おそらく、人間が読むためにもっと整理された何かをしたいでしょう。オートバイの各グループへのリンクを含むすべての異なるブランドを最初にリストしたいとします。また、すべてのオートバイをブランド別に並べ替え、その上に派手な色を付けたいとします。したがって、要素の順序を並べ替え、任意のHTMLタグを配置します。これは、xmerlの機能のような &lt;code&gt;&lt;a href=&quot;http://www.w3.org/Style/XSL/&quot;&gt;XSL Transformation (XSLT)&lt;/a&gt;&lt;/code&gt; を使用して行うことができます。</target>
        </trans-unit>
        <trans-unit id="dc72f276fa3f20586692a9e869fb89bcfcd032e0" translate="yes" xml:space="preserve">
          <source>Periodically checks the disks. For each disk or partition which uses more than a certain amount of the available space, the alarm &lt;code&gt;{{disk_almost_full, MountedOn}, []}&lt;/code&gt; is set.</source>
          <target state="translated">ディスクを定期的にチェックします。使用可能なスペースが一定量を超えるディスクまたはパーティションごとに、アラーム &lt;code&gt;{{disk_almost_full, MountedOn}, []}&lt;/code&gt; が設定されます。</target>
        </trans-unit>
        <trans-unit id="bc7dbf4febfa0c8bb5d477417b519dab3eca2415" translate="yes" xml:space="preserve">
          <source>Periodically flushes all file trace port clients (see &lt;code&gt; dbg:flush_trace_port/1&lt;/code&gt;). When enabled, the buffers are freed each &lt;code&gt;MSec&lt;/code&gt; millisecond. This option is not allowed with &lt;code&gt;{file, {local, File}}&lt;/code&gt; tracing.</source>
          <target state="translated">すべてのファイルトレースポートクライアントを定期的にフラッシュします（ &lt;code&gt; dbg:flush_trace_port/1&lt;/code&gt; を参照）。有効にすると、バッファがそれぞれ解放され &lt;code&gt;MSec&lt;/code&gt; ミリ秒。このオプションは、 &lt;code&gt;{file, {local, File}}&lt;/code&gt; トレースでは使用できません。</target>
        </trans-unit>
        <trans-unit id="ae86c831bcfb2749ff7edc7ec83510fdd2c53cda" translate="yes" xml:space="preserve">
          <source>Periodically flushes all file trace port clients (see &lt;code&gt;dbg:flush_trace_port/1&lt;/code&gt;). When enabled, the buffers are freed each &lt;code&gt;MSec&lt;/code&gt; millisecond. This option is not allowed with &lt;code&gt;{file, {local, File}}&lt;/code&gt; tracing.</source>
          <target state="translated">すべてのファイルトレースポートクライアントを定期的にフラッシュします（ &lt;code&gt;dbg:flush_trace_port/1&lt;/code&gt; を参照）。有効にすると、バッファは &lt;code&gt;MSec&lt;/code&gt; ミリ秒ごとに解放されます。このオプションは、 &lt;code&gt;{file, {local, File}}&lt;/code&gt; トレースでは使用できません。</target>
        </trans-unit>
        <trans-unit id="c59c25186e0bd17e60b87557f8d70871e9a6d4de" translate="yes" xml:space="preserve">
          <source>Periodically performs a memory check:</source>
          <target state="translated">定期的にメモリチェックを行います。</target>
        </trans-unit>
        <trans-unit id="ec9bd9a3791c02544b4da2b4e584f9e54f09f137" translate="yes" xml:space="preserve">
          <source>Peripheral, trace, and debug functionality is at greater risk of being changed in an incompatible way than functionality in the language itself and core libraries used during operation.</source>
          <target state="translated">ペリフェラル、トレース、デバッグ機能は、言語自体や操作時に使用するコアライブラリの機能よりも、互換性のない方法で変更されるリスクが大きい。</target>
        </trans-unit>
        <trans-unit id="7d00286c1df2e01196a79a4eb5cbf70766e74af5" translate="yes" xml:space="preserve">
          <source>Peripheral, trace, and debug functionality is at greater risk of removal than functionality in the language itself and core libraries used during operation.</source>
          <target state="translated">ペリフェラル、トレース、デバッグ機能は、言語自体や操作中に使用されるコアライブラリの機能よりも、削除されるリスクが大きい。</target>
        </trans-unit>
        <trans-unit id="4cdcf1198efb4c7cd76975e49ce37ac8c50b1461" translate="yes" xml:space="preserve">
          <source>Perl 5</source>
          <target state="translated">Perl 5</target>
        </trans-unit>
        <trans-unit id="f883526d06ac7dbd60d3aeb0d4a51ea2f54f7ccb" translate="yes" xml:space="preserve">
          <source>Perl 5.10 introduced a feature where each alternative in a subpattern uses the same numbers for its capturing parentheses. Such a subpattern starts with &lt;code&gt;(?|&lt;/code&gt; and is itself a non-capturing subpattern. For example, consider the following pattern:</source>
          <target state="translated">Perl 5.10は、サブパターン内の各選択肢がキャプチャする括弧に同じ番号を使用する機能を導入しました。このようなサブパターンは &lt;code&gt;(?|&lt;/code&gt; で始まり、それ自体が非キャプチャサブパターンです。たとえば、次のパターンを考えてみます。</target>
        </trans-unit>
        <trans-unit id="b82c2b36892e4b847da5ec02ae07fa7e941783f0" translate="yes" xml:space="preserve">
          <source>Perl 5.10 introduced some &quot;Special Backtracking Control Verbs&quot;, which are still described in the Perl documentation as &quot;experimental and subject to change or removal in a future version of Perl&quot;. It goes on to say: &quot;Their usage in production code should be noted to avoid problems during upgrades.&quot; The same remarks apply to the PCRE features described in this section.</source>
          <target state="translated">Perl 5.10 では、いくつかの「特別なバックトラッキング制御動詞」が導入されましたが、Perl のドキュメントには「実験的なものであり、将来のバージョンの Perl で変更または削除される可能性があります」と記述されています。さらに、以下のように説明されています。&quot;アップグレード時の問題を避けるために、プロダクションコードでの使用に注意してください。&quot; このセクションで説明されている PCRE の機能にも同じ注意が適用されます。</target>
        </trans-unit>
        <trans-unit id="e78f523b81d69e2ce697283a6d30d972833c9add" translate="yes" xml:space="preserve">
          <source>Perl and POSIX space are now the same. Perl added VT to its space character set at release 5.18 and PCRE changed at release 8.34.</source>
          <target state="translated">PerlとPOSIXのスペースが同じになりました。Perlはリリース5.18でスペース文字セットにVTが追加され、PCREはリリース8.34で変更されました。</target>
        </trans-unit>
        <trans-unit id="2de73d4e781601af4c1bbb6f2148001448b0732c" translate="yes" xml:space="preserve">
          <source>Perl documents that the use of \K within assertions is &quot;not well defined&quot;. In PCRE, \K is acted upon when it occurs inside positive assertions, but is ignored in negative assertions. Note that when a pattern such as (?=ab\K) matches, the reported start of the match can be greater than the end of the match.</source>
          <target state="translated">Perl は、アサーション内での \K の使用が「よく定義されていない」ことを文書化しています。PCRE では、正のアサーションの中で \K が発生した場合に処理されますが、負のアサーションでは無視されます。(?=ab\K)のようなパターンがマッチする場合、報告されたマッチの開始は、マッチの終了よりも大きくなる可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7f68ced8ff5ff018b572b360c5b59d5cb10a9ec8" translate="yes" xml:space="preserve">
          <source>Perl has no direct equivalent of &lt;code&gt;notempty&lt;/code&gt; or &lt;code&gt;notempty_atstart&lt;/code&gt;, but it does make a special case of a pattern match of the empty string within its split() function, and when using modifier &lt;code&gt;/g&lt;/code&gt;. The Perl behavior can be emulated after matching a null string by first trying the match again at the same offset with &lt;code&gt;notempty_atstart&lt;/code&gt; and &lt;code&gt;anchored&lt;/code&gt;, and then, if that fails, by advancing the starting offset (see below) and trying an ordinary match again.</source>
          <target state="translated">Perlには &lt;code&gt;notempty&lt;/code&gt; または &lt;code&gt;notempty_atstart&lt;/code&gt; に直接相当するものはありませんが、split（）関数内および修飾子 &lt;code&gt;/g&lt;/code&gt; を使用する場合に、空の文字列のパターン一致の特別なケースが作成されます。最初に &lt;code&gt;notempty_atstart&lt;/code&gt; とanchoredを使用 &lt;code&gt;anchored&lt;/code&gt; て同じオフセットで一致を再試行し、次に失敗した場合は開始オフセットを進め（通常は以下を参照）、通常の一致を再試行することにより、null文字列の一致後にPerlの動作をエミュレートできます。</target>
        </trans-unit>
        <trans-unit id="fe8e00e55de2ba8dd6ec7b50c079a9f787696c02" translate="yes" xml:space="preserve">
          <source>Perl supports the Posix notation for character classes. This uses names enclosed by [: and :] within the enclosing square brackets. PCRE also supports this notation. For example, the following matches &quot;0&quot;, &quot;1&quot;, any alphabetic character, or &quot;%&quot;:</source>
          <target state="translated">Perl は文字クラスの Posix 記法をサポートしています。これは、[:と :]で囲まれた名前を角括弧で囲んだものを使用します。PCREもこの表記法をサポートしています。例えば、以下は、&quot;0&quot;、&quot;1&quot;、任意のアルファベット文字、または&quot;%&quot;にマッチします。</target>
        </trans-unit>
        <trans-unit id="765fb2057a7d0f34aecd0daea653b99ec1e8d5fd" translate="yes" xml:space="preserve">
          <source>Perl uses the syntax (?(&amp;lt;name&amp;gt;)...) or (?('name')...) to test for a used subpattern by name. For compatibility with earlier versions of PCRE, which had this facility before Perl, the syntax (?(name)...) is also recognized.</source>
          <target state="translated">Perlは構文（？（&amp;lt;name&amp;gt;）...）または（？（ 'name'）...）を使用して、使用されているサブパターンを名前でテストします。Perlより前にこの機能があった以前のバージョンのPCREとの互換性のために、構文（？（name）...）も認識されます。</target>
        </trans-unit>
        <trans-unit id="5ae8f7a8fad341ccb38028f9d0cbbf740e954e88" translate="yes" xml:space="preserve">
          <source>Perl-like regular expressions for Erlang.</source>
          <target state="translated">ErlangのためのPerlライクな正規表現。</target>
        </trans-unit>
        <trans-unit id="863d66a8ea986e9d2766a9fb1020b6a98f7a40ae" translate="yes" xml:space="preserve">
          <source>Permanent Failures</source>
          <target state="translated">恒久的な失敗</target>
        </trans-unit>
        <trans-unit id="5e842f59f65d2bb9be9ae185301ffb374b609927" translate="yes" xml:space="preserve">
          <source>Permanently deletes all replicas of table &lt;code&gt;Tab&lt;/code&gt;.</source>
          <target state="translated">テーブル &lt;code&gt;Tab&lt;/code&gt; のすべてのレプリカを完全に削除します。</target>
        </trans-unit>
        <trans-unit id="9d10bab6320387e35667d7efc31ca008974ef6de" translate="yes" xml:space="preserve">
          <source>Permits access to the specified set of nodes.</source>
          <target state="translated">指定したノードのセットへのアクセスを許可します。</target>
        </trans-unit>
        <trans-unit id="cbcc14cf66794a811615925669093ae6f0483b21" translate="yes" xml:space="preserve">
          <source>Persistence. Tables can be coherently kept on disc and in the main memory.</source>
          <target state="translated">永続性。テーブルは、ディスクとメインメモリに一貫して保持することができます。</target>
        </trans-unit>
        <trans-unit id="f92e7deab74e37ba55baaec014f2b2842033b9fb" translate="yes" xml:space="preserve">
          <source>Persistent connections are not supported when setting the &lt;code&gt;socket_opts&lt;/code&gt; option. When &lt;code&gt;socket_opts&lt;/code&gt; is not set the current implementation assumes the requests to the same host, port combination will use the same socket options.</source>
          <target state="translated">&lt;code&gt;socket_opts&lt;/code&gt; オプションを設定する場合、永続的な接続はサポートされません。 &lt;code&gt;socket_opts&lt;/code&gt; が設定されていない場合、現在の実装は同じホストへの要求を想定しており、ポートの組み合わせは同じソケットオプションを使用します。</target>
        </trans-unit>
        <trans-unit id="6a685aab78a1ff039ade99a9798da21ecfe76ab6" translate="yes" xml:space="preserve">
          <source>Persistent terms is an advanced feature and is not a general replacement for ETS tables. Before using persistent terms, make sure to fully understand the consequence to system performance when updating or deleting persistent terms.</source>
          <target state="translated">永続的用語は高度な機能であり、ETSテーブルの一般的な代替品ではありません。永続的な用語を使用する前に、永続的な用語を更新または削除する際のシステム・パフォーマンスへの影響を十分に理解してください。</target>
        </trans-unit>
        <trans-unit id="49d7a033f1e6bc84489abbcac9eae834fe583a72" translate="yes" xml:space="preserve">
          <source>Persistent terms.</source>
          <target state="translated">永続的な用語。</target>
        </trans-unit>
        <trans-unit id="2bee04fabd8ac0fac36ed62f88c0b1f7fc8cfa48" translate="yes" xml:space="preserve">
          <source>Peter's client receives the message in the &lt;code&gt;await_result&lt;/code&gt; function.</source>
          <target state="translated">Peterのクライアントは、 &lt;code&gt;await_result&lt;/code&gt; 関数でメッセージを受信します。</target>
        </trans-unit>
        <trans-unit id="a1fbe41a1fd16bc593d390402b8a1d609687aad4" translate="yes" xml:space="preserve">
          <source>Phags_Pa</source>
          <target state="translated">Phags_Pa</target>
        </trans-unit>
        <trans-unit id="6908ab9bda0e225ecfd064a3d987f42cfc69e74c" translate="yes" xml:space="preserve">
          <source>Phoenician</source>
          <target state="translated">Phoenician</target>
        </trans-unit>
        <trans-unit id="816184994301f53e2f7c60336684c53229d3fc02" translate="yes" xml:space="preserve">
          <source>Pick just a few suites</source>
          <target state="translated">いくつかのスイートルームを選ぶ</target>
        </trans-unit>
        <trans-unit id="f298de9cea75ea5230dda5d9d28b4989aaf746f4" translate="yes" xml:space="preserve">
          <source>Pid</source>
          <target state="translated">Pid</target>
        </trans-unit>
        <trans-unit id="39e4ade84d7c390c8d53a5ae6be8e034ac54f0ea" translate="yes" xml:space="preserve">
          <source>Pid is the pid returned from &lt;code&gt;inets:start/[2,3]&lt;/code&gt;. Can also be retrieved form &lt;code&gt;inets:services/0&lt;/code&gt; and &lt;code&gt;inets:services_info/0&lt;/code&gt;, see &lt;code&gt;&lt;a href=&quot;inets&quot;&gt;inets(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Pidは &lt;code&gt;inets:start/[2,3]&lt;/code&gt; から返されたpid です。 &lt;code&gt;inets:services/0&lt;/code&gt; および &lt;code&gt;inets:services_info/0&lt;/code&gt; から取得することもできます &lt;code&gt;&lt;a href=&quot;inets&quot;&gt;inets(3)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="e01f641077fee77726a119c7fdcdd0d01e6ca152" translate="yes" xml:space="preserve">
          <source>PidOrPids :: pid() | [pid()]) -&amp;gt;</source>
          <target state="translated">PidOrPids :: pid() | [pid()]) -&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e5a12aecdd3b6ac3a81192c0d891abe00ae128dc" translate="yes" xml:space="preserve">
          <source>Pipelining is only used if the pipeline time-out is set, otherwise persistent connections without pipelining are used. That is, the client always waits for the previous response before sending the next request.</source>
          <target state="translated">パイプラインが使用されるのは、パイプラインのタイムアウトが設定されている場合のみで、そうでない場合はパイプラインなしの永続的な接続が使用されます。つまり、クライアントは常に次のリクエストを送信する前に前のレスポンスを待ちます。</target>
        </trans-unit>
        <trans-unit id="299afcf56421dc47a2f48e2448670fa6fa1de131" translate="yes" xml:space="preserve">
          <source>Plain arguments are not interpreted in any way. They are also stored by the &lt;code&gt;init&lt;/code&gt; process and can be retrieved by calling &lt;code&gt;init:get_plain_arguments/0&lt;/code&gt;. Plain arguments can occur before the first flag, or after a &lt;code&gt;--&lt;/code&gt; flag. Also, the &lt;code&gt;-extra&lt;/code&gt; flag causes everything that follows to become plain arguments.</source>
          <target state="translated">単純な引数は決して解釈されません。これらも &lt;code&gt;init&lt;/code&gt; プロセスによって格納され、 &lt;code&gt;init:get_plain_arguments/0&lt;/code&gt; を呼び出すことで取得できます。単純な引数は、最初のフラグの前、または &lt;code&gt;--&lt;/code&gt; フラグの後に発生します。また、 &lt;code&gt;-extra&lt;/code&gt; フラグを指定すると、その後に続くすべてのものが単純な引数になります。</target>
        </trans-unit>
        <trans-unit id="11b1d9af09ba599e8f15b95865824e691f3b401f" translate="yes" xml:space="preserve">
          <source>Plain system messages. These are received as &lt;code&gt;{system, From, Msg}&lt;/code&gt;. The content and meaning of this message are not interpreted by the receiving process module. When a system message is received, function &lt;code&gt;&lt;a href=&quot;#handle_system_msg-6&quot;&gt; handle_system_msg/6&lt;/a&gt;&lt;/code&gt; is called to handle the request.</source>
          <target state="translated">プレーンなシステムメッセージ。これらは &lt;code&gt;{system, From, Msg}&lt;/code&gt; として受信されます。このメッセージの内容と意味は、受信プロセスモジュールによって解釈されません。システムメッセージを受信すると、関数 &lt;code&gt;&lt;a href=&quot;#handle_system_msg-6&quot;&gt; handle_system_msg/6&lt;/a&gt;&lt;/code&gt; が呼び出されて要求が処理されます。</target>
        </trans-unit>
        <trans-unit id="021e228d28e31a2dac01ca348b598716a2be960a" translate="yes" xml:space="preserve">
          <source>Plain system messages. These are received as &lt;code&gt;{system, From, Msg}&lt;/code&gt;. The content and meaning of this message are not interpreted by the receiving process module. When a system message is received, function &lt;code&gt;&lt;a href=&quot;#handle_system_msg-6&quot;&gt;handle_system_msg/6&lt;/a&gt;&lt;/code&gt; is called to handle the request.</source>
          <target state="translated">単純なシステムメッセージ。これらは &lt;code&gt;{system, From, Msg}&lt;/code&gt; として受信されます。このメッセージの内容と意味は、受信プロセスモジュールによって解釈されません。システムメッセージが受信されると、要求を処理するために関数 &lt;code&gt;&lt;a href=&quot;#handle_system_msg-6&quot;&gt;handle_system_msg/6&lt;/a&gt;&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="32e02713e0dda686ae47235808f8c5c0c7010f65" translate="yes" xml:space="preserve">
          <source>PlainText</source>
          <target state="translated">PlainText</target>
        </trans-unit>
        <trans-unit id="6c4dde4d34ff165124f9124a75a7cc5be39f9952" translate="yes" xml:space="preserve">
          <source>PlainText :: iodata()) -&amp;gt;</source>
          <target state="translated">平文:: iodata（））-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="38a2100e6697f9c988273348c65437beba4c1a2f" translate="yes" xml:space="preserve">
          <source>Please note that by historical reasons both the &lt;code&gt;HostAddress&lt;/code&gt; argument and the &lt;code&gt;gen_tcp connect_option() {ip,Address}&lt;/code&gt; set the listening address. This is a source of possible inconsistent settings.</source>
          <target state="translated">歴史的な理由により、 &lt;code&gt;HostAddress&lt;/code&gt; 引数と &lt;code&gt;gen_tcp connect_option() {ip,Address}&lt;/code&gt; 両方がリスニングアドレスを設定することに注意してください。これは、一貫性のない設定の原因となる可能性があります。</target>
        </trans-unit>
        <trans-unit id="67b04c48713ae02b17574be1c7c9e6c47d938551" translate="yes" xml:space="preserve">
          <source>Please note that by historical reasons both the &lt;code&gt;HostAddress&lt;/code&gt; argument and the &lt;code&gt;gen_tcp connect_option(){ip,Address}&lt;/code&gt; set the listening address. This is a source of possible inconsistent settings.</source>
          <target state="translated">歴史的な理由により、 &lt;code&gt;HostAddress&lt;/code&gt; 引数と &lt;code&gt;gen_tcp connect_option(){ip,Address}&lt;/code&gt; 両方がリスニングアドレスを設定することに注意してください。これは、矛盾する設定の原因となる可能性があります。</target>
        </trans-unit>
        <trans-unit id="32abe057fa82c9bf0495c06f768e39e26b9f11f2" translate="yes" xml:space="preserve">
          <source>Please note that design is something, that not necessarily will, but might change in future releases. While the semantics of the API will not change as it is independent of the implementation.</source>
          <target state="translated">デザインは何か、必ずしもそうなるわけではありませんが、将来のリリースで変更される可能性があることに注意してください。APIのセマンティクスは実装から独立しているため変更されませんが。</target>
        </trans-unit>
        <trans-unit id="aa1d93d97f3230b4f87fac4d80b8e20f34958a43" translate="yes" xml:space="preserve">
          <source>Please note that httpc normalizes input URIs before internal processing and special care shall be taken when the URI has percent (&quot;%&quot;) characters. A percent serves as the indicator for percent-encoded octets and it must be percent-encoded as &quot;%25&quot; for that octet to be used as data within the URI.</source>
          <target state="translated">httpcは内部処理の前に入力URIを正規化し、URIにパーセンテージ(&quot;%&quot;)文字がある場合は特別な注意を払わなければならないことに注意してください。パーセントはパーセントエンコードされたオクテットのための指標として機能し、そのオクテットがURI内のデータとして使用されるためには&quot;%25 &quot;としてパーセントエンコードされなければならない。</target>
        </trans-unit>
        <trans-unit id="597358d6204ed2d5f3fed145f855762b0d748a69" translate="yes" xml:space="preserve">
          <source>Please see the GNU Emacs Manual and the etags man page for more info.</source>
          <target state="translated">詳細は GNU Emacs マニュアルと etags man ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="0c436ed1231dc5771eef264b43827bd13f0e6d7b" translate="yes" xml:space="preserve">
          <source>Please submit any patches for cross compiling in a way consistent with this system. All input is welcome as we have a very limited set of cross compiling environments to test with. If a new configuration variable is needed, add it to &lt;code&gt;$ERL_TOP/xcomp/erl-xcomp.conf.template&lt;/code&gt;, and use it in &lt;code&gt;configure.in&lt;/code&gt;. Other files that might need to be updated are:</source>
          <target state="translated">このシステムと一貫性のある方法でクロスコンパイルするためのパッチを提出してください。テストできるクロスコンパイル環境は非常に限られているため、すべての入力を歓迎します。新しい構成変数が必要な場合は、 &lt;code&gt;$ERL_TOP/xcomp/erl-xcomp.conf.template&lt;/code&gt; に追加して、 &lt;code&gt;configure.in&lt;/code&gt; で使用します。更新する必要があるかもしれない他のファイルは次のとおりです：</target>
        </trans-unit>
        <trans-unit id="4140a0c59f9aa45b8631c3e0f8a874473a22c621" translate="yes" xml:space="preserve">
          <source>Please take a look at the reference of &lt;code&gt;sanity_check()&lt;/code&gt; for more information.</source>
          <target state="translated">詳細については、 &lt;code&gt;sanity_check()&lt;/code&gt; のリファレンスをご覧ください。</target>
        </trans-unit>
        <trans-unit id="de27f66a37035340860ce9e599a1a2f161cf94be" translate="yes" xml:space="preserve">
          <source>Please, observe that these performance figures are related to our implementation in Erlang/OTP. Measurements of other implementations using other tools and techniques may of course result in other figures.</source>
          <target state="translated">これらのパフォーマンスの数値はErlang/OTPでの実装に関連したものであることに注意してください。他のツールや技術を使って他の実装を測定した場合、もちろん他の数値になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="d9963c2e5095bb9cc0241cd748d7939bdbfdd2d6" translate="yes" xml:space="preserve">
          <source>Pointer to next structure in a linked list of all port structures. This list is used when accepting connections and when the driver is unloaded.</source>
          <target state="translated">すべてのポート構造体のリンクされたリストの次の構造体へのポインタ。このリストは、接続を受け入れるときやドライバがアンロードされたときに使用されます。</target>
        </trans-unit>
        <trans-unit id="f19f028244073bea25c8d31a9519278211c9e77e" translate="yes" xml:space="preserve">
          <source>Pointer to the array of reference numbers in ref &lt;code&gt;t&lt;/code&gt;.</source>
          <target state="translated">ref &lt;code&gt;t&lt;/code&gt; の参照番号の配列へのポインター。</target>
        </trans-unit>
        <trans-unit id="90279912bde8fc7a98584b2f5586d2486ad5964a" translate="yes" xml:space="preserve">
          <source>Pointer to the dynamically allocated buffer.</source>
          <target state="translated">動的に割り当てられたバッファへのポインタ。</target>
        </trans-unit>
        <trans-unit id="1604bd8010fd538d08c7b5045fd397612cd1e659" translate="yes" xml:space="preserve">
          <source>Points out a file containing a decryption key for &lt;code&gt;&lt;a href=&quot;config_file_chapter#encrypted_config_files&quot;&gt;encrypted configuration files&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;config_file_chapter#encrypted_config_files&quot;&gt;encrypted configuration files&lt;/a&gt;&lt;/code&gt; 復号化キーを含むファイルを指摘します。</target>
        </trans-unit>
        <trans-unit id="7afa60ee7ef4769f7cc3c7f050d9db637653fed0" translate="yes" xml:space="preserve">
          <source>Points out a user HTML style sheet (described later).</source>
          <target state="translated">ユーザーのHTMLスタイルシートを指摘します(後述)。</target>
        </trans-unit>
        <trans-unit id="c3267371bb927c874f21bde6afeb9450a04b23f0" translate="yes" xml:space="preserve">
          <source>Policy certificate extensions are not supported.</source>
          <target state="translated">ポリシー証明書の拡張はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="5a35981ceab91897e91ab04e8e2d42162dbd7728" translate="yes" xml:space="preserve">
          <source>Policy for the selection of the temporary port that is used by the server/client during the file transfer. Default is &lt;code&gt;random&lt;/code&gt;, which is the standardized policy. With this policy a randomized free port is used. A single port or a range of ports can be useful if the protocol passes through a firewall.</source>
          <target state="translated">ファイル転送中にサーバー/クライアントが使用する一時ポートの選択に関するポリシー。デフォルトは &lt;code&gt;random&lt;/code&gt; 。これは標準化されたポリシーです。このポリシーでは、ランダム化された空きポートが使用されます。プロトコルがファイアウォールを通過する場合、単一のポートまたはポートの範囲が役立ちます。</target>
        </trans-unit>
        <trans-unit id="465d89dc629419a077edf90091affa9697b2e338" translate="yes" xml:space="preserve">
          <source>Polling interval (sleep time between polls) = 1 second</source>
          <target state="translated">ポーリング間隔(ポール間のスリープ時間)=1秒</target>
        </trans-unit>
        <trans-unit id="f8b9e6faf5ca12ec30a6ab11e637a8f904a10ff8" translate="yes" xml:space="preserve">
          <source>Polling limit (max number of times to poll to get a remaining string terminated) = 0</source>
          <target state="translated">ポーリング制限(残りの文字列を終了させるためのポーリングの最大回数)=0</target>
        </trans-unit>
        <trans-unit id="dc3e5751626ffc8947f9f0b3a17d71ba3b06ae9b" translate="yes" xml:space="preserve">
          <source>Pooled carriers are always &lt;strong&gt;employed&lt;/strong&gt; by their &lt;strong&gt;owner&lt;/strong&gt;.</source>
          <target state="translated">プールされた運送業者は、常に&lt;strong&gt;所有者&lt;/strong&gt;によって&lt;strong&gt;雇用さ&lt;/strong&gt;れています。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f674f7342afffc2f1fe6b84a078cfaa6e0d124f7" translate="yes" xml:space="preserve">
          <source>Pooled carriers are not allocated from.</source>
          <target state="translated">からプールされたキャリアは割り当てられません。</target>
        </trans-unit>
        <trans-unit id="85ac5ed2edbd75fdc5be499e6afb737ffdefac14" translate="yes" xml:space="preserve">
          <source>Pop the top module from the internal stack of callback modules and set it to be the new &lt;code&gt;&lt;a href=&quot;#Callback%20Module&quot;&gt; &lt;strong&gt;callback module&lt;/strong&gt; &lt;/a&gt;&lt;/code&gt; for the running server. If the stack is empty the server fails. Otherwise like &lt;code&gt;{change_callback_module, NewModule}&lt;/code&gt; above.</source>
          <target state="translated">コールバックモジュールの内部スタックから最上位モジュールをポップし、実行中のサーバーの新しい &lt;code&gt;&lt;a href=&quot;#Callback%20Module&quot;&gt; &lt;strong&gt;callback module&lt;/strong&gt; &lt;/a&gt;&lt;/code&gt; になるように設定します。スタックが空の場合、サーバーは失敗します。それ以外の場合は &lt;code&gt;{change_callback_module, NewModule}&lt;/code&gt; 上記の{change_callback_module、NewModule}のようになります。 &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="991780bf544d0a8fc475baa289ae5667bb4579b0" translate="yes" xml:space="preserve">
          <source>Pops the top module from the internal stack of callback modules and changes the callback module to be the popped module. If the stack is empty the server fails. Otherwise like &lt;code&gt;{change_callback_module, NewModule}&lt;/code&gt; above.</source>
          <target state="translated">コールバックモジュールの内部スタックから最上位モジュールをポップし、コールバックモジュールをポップされたモジュールに変更します。スタックが空の場合、サーバーは失敗します。それ以外の場合は &lt;code&gt;{change_callback_module, NewModule}&lt;/code&gt; 上記の{change_callback_module、NewModule}のようになります。</target>
        </trans-unit>
        <trans-unit id="fe035157cda20b361ce30613e29b5d6f1a46b5fc" translate="yes" xml:space="preserve">
          <source>Port</source>
          <target state="translated">Port</target>
        </trans-unit>
        <trans-unit id="799fa570fa6f42daa22b2994cc3725a643fc7be8" translate="yes" xml:space="preserve">
          <source>Port :: &lt;code&gt;inet:port_number()&lt;/code&gt;) -&amp;gt;</source>
          <target state="translated">ポート:: &lt;code&gt;inet:port_number()&lt;/code&gt; ）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="ea62c46246b1ea7a1efd0181063c1442570f3e77" translate="yes" xml:space="preserve">
          <source>Port :: &lt;code&gt;inet:port_number()&lt;/code&gt;,</source>
          <target state="translated">ポート:: &lt;code&gt;inet:port_number()&lt;/code&gt; 、</target>
        </trans-unit>
        <trans-unit id="3db9bac190e277a6139a6817df535ad965dd6629" translate="yes" xml:space="preserve">
          <source>Port = &lt;code&gt;integer() &amp;gt; 0&lt;/code&gt;</source>
          <target state="translated">ポート= &lt;code&gt;integer() &amp;gt; 0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c4923d568bc203f2611ee342cb7f5146785d157" translate="yes" xml:space="preserve">
          <source>Port Example</source>
          <target state="translated">ポートの例</target>
        </trans-unit>
        <trans-unit id="9658d0e5f890f70c212b44e605a327442f5f0483" translate="yes" xml:space="preserve">
          <source>Port Programs</source>
          <target state="translated">ポートプログラム</target>
        </trans-unit>
        <trans-unit id="59426fd42c4bd1ecdac5914a8115399d46411358" translate="yes" xml:space="preserve">
          <source>Port handle of the executing port.</source>
          <target state="translated">実行中のポートのポートハンドル。</target>
        </trans-unit>
        <trans-unit id="bda81d4c1d517232b2d8149167cc3dc467ef84ea" translate="yes" xml:space="preserve">
          <source>Port queries, that is, on which port the node with a specified name listens</source>
          <target state="translated">ポートクエリ、つまり、指定された名前のノードがどのポートをリッスンするかを調べる</target>
        </trans-unit>
        <trans-unit id="909ce0bd80b59fe5319fb9028cc0d212219399d1" translate="yes" xml:space="preserve">
          <source>Portable hash function that gives the same hash for the same Erlang term regardless of machine architecture and ERTS version (the BIF was introduced in ERTS 4.9.1.1). The function returns a hash value for &lt;code&gt;Term&lt;/code&gt; within the range &lt;code&gt;1..Range&lt;/code&gt;. The maximum value for &lt;code&gt;Range&lt;/code&gt; is 2^32.</source>
          <target state="translated">マシンアーキテクチャやERTSバージョンに関係なく、同じErlang用語に対して同じハッシュを提供するポータブルハッシュ関数（BIFはERTS 4.9.1.1で導入されました）。この関数は、範囲 &lt;code&gt;1..Range&lt;/code&gt; 内の &lt;code&gt;Term&lt;/code&gt; のハッシュ値を返します。 &lt;code&gt;Range&lt;/code&gt; の最大値は2 ^ 32です。</target>
        </trans-unit>
        <trans-unit id="054b8319dfcb3d23d08071f8f07f5156fb5d7c54" translate="yes" xml:space="preserve">
          <source>Portable hash function that gives the same hash for the same Erlang term regardless of machine architecture and ERTS version (the BIF was introduced in ERTS 5.2). The function returns a hash value for &lt;code&gt;Term&lt;/code&gt; within the range &lt;code&gt;0..Range-1&lt;/code&gt;. The maximum value for &lt;code&gt;Range&lt;/code&gt; is 2^32. When without argument &lt;code&gt;Range&lt;/code&gt;, a value in the range 0..2^27-1 is returned.</source>
          <target state="translated">マシンアーキテクチャやERTSバージョンに関係なく、同じErlang用語に対して同じハッシュを提供するポータブルハッシュ関数（BIFはERTS 5.2で導入されました）。この関数は、範囲 &lt;code&gt;0..Range-1&lt;/code&gt; 内の &lt;code&gt;Term&lt;/code&gt; のハッシュ値を返します。 &lt;code&gt;Range&lt;/code&gt; の最大値は2 ^ 32です。引数 &lt;code&gt;Range&lt;/code&gt; がない場合、0..2 ^ 27-1の範囲の値が返されます。</target>
        </trans-unit>
        <trans-unit id="1154c86e0447265172bd06d0ffc96a0fbd31265c" translate="yes" xml:space="preserve">
          <source>Portable hash function that gives the same hash for the same Erlang term regardless of machine architecture and ERTS version.</source>
          <target state="translated">マシンアーキテクチャやERTSのバージョンに関係なく、同じErlang項に対して同じハッシュを与えるポータブルハッシュ関数。</target>
        </trans-unit>
        <trans-unit id="16c2eb4dbbcdafb15c712951d6aee1bf0a101658" translate="yes" xml:space="preserve">
          <source>Ports</source>
          <target state="translated">Ports</target>
        </trans-unit>
        <trans-unit id="6631722b28d8fb75219e7fe0927592627111d1a6" translate="yes" xml:space="preserve">
          <source>Ports and Linked-In Drivers</source>
          <target state="translated">ポートとリンクインドライバ</target>
        </trans-unit>
        <trans-unit id="c97a4b3879c8d95d45f28ff453955a6b9bfa5cfb" translate="yes" xml:space="preserve">
          <source>Ports are always byte-oriented, so before sending data that you are not sure is bytewise-encoded to a port, ensure to encode it in a proper Unicode encoding. Sometimes this means that only part of the data must be encoded as, for example, UTF-8. Some parts can be binary data (like a length indicator) or something else that must not undergo character encoding, so no automatic translation is present.</source>
          <target state="translated">ポートは常にバイト指向なので、バイトエンコードされているかどうかわからないデータをポートに送る前に、適切な Unicode エンコーディングでエンコードするようにしてください。これは、データの一部だけを、例えばUTF-8としてエンコードしなければならないことを意味することもあります。いくつかの部分はバイナリデータ(長さの指標のようなもの)であったり、文字エンコーディングを受けてはいけない他の何かであったりするので、自動変換は存在しません。</target>
        </trans-unit>
        <trans-unit id="e4193cfa2c1ff713d813bfaa0d36b429c920defb" translate="yes" xml:space="preserve">
          <source>Ports are configured by the user: diameter places no restrictions.</source>
          <target state="translated">ポートはユーザーによって設定されます。</target>
        </trans-unit>
        <trans-unit id="cb46560c81a3989fb4e829762625b62e66c95636" translate="yes" xml:space="preserve">
          <source>Ports provide the basic mechanism for communication with the external world, from Erlang's point of view. The ports provide a byte-oriented interface to an external program. When a port is created, Erlang can communicate with it by sending and receiving lists of bytes (not Erlang terms). This means that the programmer might have to invent a suitable encoding and decoding scheme.</source>
          <target state="translated">ポートはErlangの観点から、外部との通信のための基本的なメカニズムを提供します。ポートは外部プログラムへのバイト指向のインターフェースを提供します。ポートが作られると、Erlangはバイトのリスト(Erlang用語ではありません)を送受信することでポートと通信することができます。これはプログラマが適切なエンコーディングとデコーディングのスキームを考案しなければならないことを意味します。</target>
        </trans-unit>
        <trans-unit id="e5dca5bbd887da11b920c85a6859b7dc5d6446ce" translate="yes" xml:space="preserve">
          <source>Posix character class (only if followed by Posix syntax)</source>
          <target state="translated">ポジックス文字クラス(ポジックス構文に続いている場合のみ</target>
        </trans-unit>
        <trans-unit id="cf44c2ab63d2bfdbd90509d6ab05ee59689772ed" translate="yes" xml:space="preserve">
          <source>Possessive quantifiers are always greedy; the setting of option &lt;code&gt;ungreedy&lt;/code&gt; is ignored. They are a convenient notation for the simpler forms of an atomic group. However, there is no difference in the meaning of a possessive quantifier and the equivalent atomic group, but there can be a performance difference; possessive quantifiers are probably slightly faster.</source>
          <target state="translated">所有量指定子は常に貪欲です。 &lt;code&gt;ungreedy&lt;/code&gt; オプションの設定は無視されます。これらは、原子グループのより単純な形式の便利な表記法です。ただし、所有格指定子と同等の原子グループの意味に違いはありませんが、パフォーマンスに違いが生じる可能性があります。所有格指定子はおそらくわずかに高速です。</target>
        </trans-unit>
        <trans-unit id="9b6f1087ff5e67d140eb09f11b3dad81741a1747" translate="yes" xml:space="preserve">
          <source>Possessive quantifiers can be used with lookbehind assertions to specify efficient matching of fixed-length strings at the end of subject strings. Consider the following simple pattern when applied to a long string that does not match:</source>
          <target state="translated">所有量詞を lookbehind アサーションと一緒に使用して、固定長の文字列の効率的なマッチングを主語文字列の末尾に指定することができます。マッチしない長い文字列に適用される以下の単純なパターンを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="1dfe8268667e0c66e3daa6ac9b57143d77624130" translate="yes" xml:space="preserve">
          <source>Possible Erlang 'EXIT' messages is to be handled by this function and all channels are to handle the following message.</source>
          <target state="translated">Erlangの'EXIT'メッセージはこの関数で処理され、すべてのチャンネルは以下のメッセージを処理します。</target>
        </trans-unit>
        <trans-unit id="149bf3ac15f9f4fc58f0fe306b8c56c8c16051d0" translate="yes" xml:space="preserve">
          <source>Possible SCTP events:</source>
          <target state="translated">考えられる SCTP イベント。</target>
        </trans-unit>
        <trans-unit id="b91d93860e0e7dc1f57e9b3c4cd2dfcbc0c4795b" translate="yes" xml:space="preserve">
          <source>Possible actions: ignore as in drop the event (maybe log it) or deal with the event in some other state as in postpone it.</source>
          <target state="translated">考えられるアクション:イベントをドロップする(多分ログに記録する)ように無視するか、イベントを延期するように他の状態でイベントを処理します。</target>
        </trans-unit>
        <trans-unit id="986d4a1466fd9cd5e38ecaec22d116bf1c515c81" translate="yes" xml:space="preserve">
          <source>Possible configuration variables include:</source>
          <target state="translated">設定可能な変数は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="34001dfcb817c4c0ae5c87f2102d6fe4615ff7e1" translate="yes" xml:space="preserve">
          <source>Possible options and values vary depending on the I/O device. For a list of supported options and their current values on a specific I/O device, use function &lt;code&gt;&lt;a href=&quot;#getopts-1&quot;&gt;getopts/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">可能なオプションと値は、I / Oデバイスによって異なります。特定のI / Oデバイスでサポートされているオプションとその現在の値のリストについては、関数 &lt;code&gt;&lt;a href=&quot;#getopts-1&quot;&gt;getopts/1&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="878f3530033a9b08ada15887a53634015460882c" translate="yes" xml:space="preserve">
          <source>Possible options are :</source>
          <target state="translated">可能なオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="60e11e810786d4e1c3e27a2df214cc536e9941c7" translate="yes" xml:space="preserve">
          <source>Possible options are:</source>
          <target state="translated">可能性のある選択肢は</target>
        </trans-unit>
        <trans-unit id="2005d62e46c5a3d6f217477137da0006cd82c5a1" translate="yes" xml:space="preserve">
          <source>Possible reasons for a bad certificate:</source>
          <target state="translated">証明書がダメな理由として考えられること</target>
        </trans-unit>
        <trans-unit id="1473fc3a07d611c813c39a776d207edb467c5e8f" translate="yes" xml:space="preserve">
          <source>Possibly the most important feature of an editor designed for programmers is the ability to indent a line of code in accordance with the structure of the programming language. The Erlang mode does, of course, provide this feature. The layout used is based on the common use of the language. The mode also provides things as syntax highlighting, electric commands, module name verification, comment support including paragraph filling, skeletons, tags support etc.</source>
          <target state="translated">プログラマーのためにデザインされたエディタの最も重要な機能は、プログラミング言語の構造に合わせてコードの行をインデントする機能かもしれません。Erlangモードはもちろんこの機能を備えています。レイアウトは言語の一般的な使い方に基づいています。このモードでは、シンタックスハイライト、電気コマンド、モジュール名の検証、段落埋めを含むコメントのサポート、スケルトン、タグのサポートなども提供しています。</target>
        </trans-unit>
        <trans-unit id="d22147626ea096d748e45c8057c724e89829172f" translate="yes" xml:space="preserve">
          <source>Postponing is ordered by the &lt;code&gt;&lt;a href=&quot;#Transition%20Actions&quot;&gt; &lt;strong&gt;transition action&lt;/strong&gt; &lt;/a&gt;&lt;/code&gt;&lt;code&gt;postpone&lt;/code&gt;.</source>
          <target state="translated">延期は、 &lt;code&gt;&lt;a href=&quot;#Transition%20Actions&quot;&gt; &lt;strong&gt;transition action&lt;/strong&gt; &lt;/a&gt;&lt;/code&gt; &lt;code&gt;postpone&lt;/code&gt; によって順序付けられます。 &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c84b501894f8e4082c349aaca37c8c128c099d19" translate="yes" xml:space="preserve">
          <source>Postponing is ordered by the state transition &lt;code&gt;&lt;a href=&quot;#State%20Transition%20Actions&quot;&gt;State Transition Action&lt;/a&gt;&lt;/code&gt;&lt;code&gt;postpone&lt;/code&gt;.</source>
          <target state="translated">延期は、状態遷移 &lt;code&gt;&lt;a href=&quot;#State%20Transition%20Actions&quot;&gt;State Transition Action&lt;/a&gt;&lt;/code&gt; &lt;code&gt;postpone&lt;/code&gt; によって順序付けられます。</target>
        </trans-unit>
        <trans-unit id="3e2fa43d974da83b84f8b7a0198aa7c4a5f02ff1" translate="yes" xml:space="preserve">
          <source>PowerPC: All 32-bit 6xx/7xx(G3)/74xx(G4) processors should work. 32-bit mode on 970 (G5) and POWER5 processors should work.</source>
          <target state="translated">PowerPC。32 ビットの 6xx/7xx(G3)/74xx(G4)プロセッサはすべて動作するはずです。970 (G5)および POWER5 プロセッサの 32 ビットモードは動作するはずです。</target>
        </trans-unit>
        <trans-unit id="cfd617494e5919519b64ca7cf73d988ce7314f09" translate="yes" xml:space="preserve">
          <source>PowerPC: Linux, Mac OSX</source>
          <target state="translated">PowerPC:Linux、Mac OSX</target>
        </trans-unit>
        <trans-unit id="bb533d9ed60c4c4366192eaf66aa35d663c4e5ef" translate="yes" xml:space="preserve">
          <source>Pre and Post commands for &lt;code&gt;&lt;a href=&quot;#engine_load-3&quot;&gt;engine_load/3 and /4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#engine_load-3&quot;&gt;engine_load/3 and /4&lt;/a&gt;&lt;/code&gt; PreおよびPostコマンド。</target>
        </trans-unit>
        <trans-unit id="0e662ed0ab305723c6508be67f9b43c339486ad4" translate="yes" xml:space="preserve">
          <source>Pre-Defined Module Attributes</source>
          <target state="translated">定義済みのモジュール属性</target>
        </trans-unit>
        <trans-unit id="0a9ed395dc4a0c7112396cf0cd653ab947e17244" translate="yes" xml:space="preserve">
          <source>Pre-Processing</source>
          <target state="translated">Pre-Processing</target>
        </trans-unit>
        <trans-unit id="8756ea35ca147cf4eb388864ebf89dce85216cce" translate="yes" xml:space="preserve">
          <source>Pre-built Source Release</source>
          <target state="translated">ビルド済みのソースリリース</target>
        </trans-unit>
        <trans-unit id="87851276bfe81c98a7198277088c96a9d033b5dc" translate="yes" xml:space="preserve">
          <source>Pre-defined macro functions</source>
          <target state="translated">あらかじめ定義されたマクロ機能</target>
        </trans-unit>
        <trans-unit id="e2d753c3372e1527a96177f0cb9217ccadf215de" translate="yes" xml:space="preserve">
          <source>Pre-defined macros and variables</source>
          <target state="translated">定義済みのマクロと変数</target>
        </trans-unit>
        <trans-unit id="e9533f120fc37f02251d4dcf3459051b82c4e403" translate="yes" xml:space="preserve">
          <source>Pre-defined module attributes is to be placed before any function declaration.</source>
          <target state="translated">事前に定義されたモジュール属性は、関数宣言の前に配置されます。</target>
        </trans-unit>
        <trans-unit id="926f83f2a7c83bde06ce094d99185e3842a8a8f9" translate="yes" xml:space="preserve">
          <source>Pre-formatted &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_html_21.0.tar.gz&quot;&gt;html documentation&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_man_21.0.tar.gz&quot;&gt;man pages&lt;/a&gt;&lt;/code&gt; can be downloaded from</source>
          <target state="translated">事前にフォーマットされた &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_html_21.0.tar.gz&quot;&gt;html documentation&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_man_21.0.tar.gz&quot;&gt;man pages&lt;/a&gt;&lt;/code&gt; は、以下からダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="bcf0b40568c417d952629596d718f9e8e4b093be" translate="yes" xml:space="preserve">
          <source>Pre-formatted &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_html_23.2.tar.gz&quot;&gt;html documentation&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_man_23.2.tar.gz&quot;&gt;man pages&lt;/a&gt;&lt;/code&gt; can be downloaded from</source>
          <target state="translated">事前にフォーマットされた &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_html_23.2.tar.gz&quot;&gt;html documentation&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;http://www.erlang.org/download/otp_doc_man_23.2.tar.gz&quot;&gt;man pages&lt;/a&gt;&lt;/code&gt; はからダウンロードできます。</target>
        </trans-unit>
        <trans-unit id="ff56d95f5ae87da89cf746ab41ce4e6a479c1f0d" translate="yes" xml:space="preserve">
          <source>Predictive Loop Avoidance</source>
          <target state="translated">予測ループ回避</target>
        </trans-unit>
        <trans-unit id="5377ce70ede93e38d6f770b9c04d7953c8a34e30" translate="yes" xml:space="preserve">
          <source>Prefer creating a few large persistent terms to creating many small persistent terms. The execution time for storing a persistent term is proportional to the number of already existing terms.</source>
          <target state="translated">多くの小さな永続項を作成するよりも、いくつかの大きな永続項を作成することを好む。永続項を格納するための実行時間は、すでに存在する項の数に比例します。</target>
        </trans-unit>
        <trans-unit id="1fa566d2725a0b203f5437a8f646bcbb04681b10" translate="yes" xml:space="preserve">
          <source>Preferably, you would check the machine type, the operating system, and the Kernel version before executing anything similar to this code.</source>
          <target state="translated">好ましくは、このコードに類似したものを実行する前に、マシンの種類、オペレーティングシステム、カーネルのバージョンを確認してください。</target>
        </trans-unit>
        <trans-unit id="84c0062ba00a989bbfa87f065cc839159da1421f" translate="yes" xml:space="preserve">
          <source>Preliminary version 3, based on TD-33</source>
          <target state="translated">TD-33をベースにした速報版3</target>
        </trans-unit>
        <trans-unit id="da668ceef4aad0b079d2fa1313967654991563d7" translate="yes" xml:space="preserve">
          <source>Preliminary version 3, based on TD-33, but text encoding updated with the final solution for priority in &lt;code&gt;contextProperty&lt;/code&gt; (which is backward compatible with v2).</source>
          <target state="translated">TD-33に基づく暫定バージョン3。ただし、テキストエンコーディングは、 &lt;code&gt;contextProperty&lt;/code&gt; （v2との下位互換性）の優先度の最終ソリューションで更新されました。</target>
        </trans-unit>
        <trans-unit id="8ce9d534fd06e5e0f995497a19bceaa290fe794b" translate="yes" xml:space="preserve">
          <source>Preliminary version 3, based on the final version of the v3-standard, but &lt;strong&gt;excluding&lt;/strong&gt; segments!</source>
          <target state="translated">v3標準の最終バージョンに基づく暫定バージョン3。&lt;strong&gt;ただし、&lt;/strong&gt;セグメントは&lt;strong&gt;除外&lt;/strong&gt;されます。</target>
        </trans-unit>
        <trans-unit id="635a0b9ab635f6550fdf7e8b53c541a528049aa3" translate="yes" xml:space="preserve">
          <source>Preloaded modules are always reported as &lt;code&gt;loaded&lt;/code&gt;, without inspecting the contents on disk. Cover compiled modules will always be reported as &lt;code&gt;modified&lt;/code&gt; if an object file exists, or as &lt;code&gt;removed&lt;/code&gt; otherwise. Modules whose load path is an empty string (which is the convention for auto-generated code) will only be reported as &lt;code&gt;loaded&lt;/code&gt; or &lt;code&gt;not_loaded&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;loaded&lt;/code&gt; されたモジュールは、ディスクの内容を検査することなく、常にloadedと報告されます。カバーコンパイルされたモジュールは、オブジェクトファイルが存在する場合は常に &lt;code&gt;modified&lt;/code&gt; として報告され、そうでない場合は &lt;code&gt;removed&lt;/code&gt; ものとして報告されます。ロードパスが空の文字列（自動生成コードの規則）であるモジュールは、 &lt;code&gt;loaded&lt;/code&gt; または &lt;code&gt;not_loaded&lt;/code&gt; としてのみ報告されます。</target>
        </trans-unit>
        <trans-unit id="a8bc382020aaaa716a496826f97b0c9d436c31a9" translate="yes" xml:space="preserve">
          <source>Preparation</source>
          <target state="translated">Preparation</target>
        </trans-unit>
        <trans-unit id="f39a18f1762094e5cc4c63111fe2c5cee36d0231" translate="yes" xml:space="preserve">
          <source>Prepare for next call to &lt;code&gt;trace_pattern&lt;/code&gt; by updating the new staging area (the old active) for all enabled breakpoints.</source>
          <target state="translated">有効なすべてのブレークポイントの新しいステージング領域（古いアクティブ）を更新して、 &lt;code&gt;trace_pattern&lt;/code&gt; への次の呼び出しの準備をします。</target>
        </trans-unit>
        <trans-unit id="7400972dd44b6d7ca793bcda89fa90523fd49cc6" translate="yes" xml:space="preserve">
          <source>Prepare for next call to &lt;code&gt;trace_pattern&lt;/code&gt; by updating the new staging part (the old active) of the breakpoint to be identic to the the new active part.</source>
          <target state="translated">ブレークポイントの新しいステージング部分（古いアクティブ）を新しいアクティブ部分と同一になるように更新して、 &lt;code&gt;trace_pattern&lt;/code&gt; への次の呼び出しの準備をします。</target>
        </trans-unit>
        <trans-unit id="0ccb4a6b47e69ccdef1feeb0cb6c0bbd699daa33" translate="yes" xml:space="preserve">
          <source>Prepares to load the modules in the list &lt;code&gt;Modules&lt;/code&gt;. Finish the loading by calling &lt;code&gt;&lt;a href=&quot;#finish_loading-1&quot;&gt;finish_loading(Prepared)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">リスト &lt;code&gt;Modules&lt;/code&gt; のモジュールをロードする準備をします。 &lt;code&gt;&lt;a href=&quot;#finish_loading-1&quot;&gt;finish_loading(Prepared)&lt;/a&gt;&lt;/code&gt; を呼び出してロードを終了します。</target>
        </trans-unit>
        <trans-unit id="9af0e9a7676ad5c34d0982329c5f5caab38b02df" translate="yes" xml:space="preserve">
          <source>Prepares to open a file on the client side.</source>
          <target state="translated">クライアント側でファイルを開く準備をします。</target>
        </trans-unit>
        <trans-unit id="1af579a4819f628301944085e091406a4beaf50a" translate="yes" xml:space="preserve">
          <source>Prepend the specified directory to the code path. Use to point at beam files compiled from inherited dictionaries, &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; in a dictionary file creating a beam dependency, not an erl/hrl dependency.</source>
          <target state="translated">指定したディレクトリをコードパスの先頭に追加します。ビーム継承された辞書からコンパイルされたファイル、ポイントに使用 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#inherits&quot;&gt;@inherits&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; ビームの依存関係を作成する辞書ファイルではなく、ERL / HRL依存。</target>
        </trans-unit>
        <trans-unit id="a20fa72c3402e6bde9460d87001f7ae629c23c73" translate="yes" xml:space="preserve">
          <source>Preprocesses and parses an Erlang source file. Notice that tuple &lt;code&gt;{eof, Line}&lt;/code&gt; returned at the end of the file is included as a &quot;form&quot;.</source>
          <target state="translated">Erlangソースファイルを前処理して解析します。ファイルの最後に返されたタプル &lt;code&gt;{eof, Line}&lt;/code&gt; が「フォーム」として含まれていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="690b8706d3e1f79bde61f6dc644048c260a4aafe" translate="yes" xml:space="preserve">
          <source>Preprocessor</source>
          <target state="translated">Preprocessor</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="2691f43bd7041517e5cd137cba084147892ae0d0" translate="yes" xml:space="preserve">
          <source>Presented IDs</source>
          <target state="translated">提示されたID</target>
        </trans-unit>
        <trans-unit id="0c6c64c4381af2076f81188f61e3735af23c9c67" translate="yes" xml:space="preserve">
          <source>Presented Identifier</source>
          <target state="translated">提示された識別子</target>
        </trans-unit>
        <trans-unit id="1d8162ec721e521c8cbbcf0236344390db358601" translate="yes" xml:space="preserve">
          <source>Presents the error returned by an SSL function as a printable string.</source>
          <target state="translated">SSL関数が返したエラーを印刷可能な文字列として表示します。</target>
        </trans-unit>
        <trans-unit id="834be78dfc277babb3a97beb35d93868f34537ec" translate="yes" xml:space="preserve">
          <source>Presents the result of</source>
          <target state="translated">の結果を発表します。</target>
        </trans-unit>
        <trans-unit id="04f8808cdf1dcc1ebc30cfb13086e1464c6e225f" translate="yes" xml:space="preserve">
          <source>Press Control-C to shut down the Erlang system and the Erlang shell.</source>
          <target state="translated">Control-Cを押してErlangシステムとErlangシェルをシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="2711f010ee53e2db82bf69468b5b4f03b6d1cfe4" translate="yes" xml:space="preserve">
          <source>Pretty print the Logger configuration.</source>
          <target state="translated">ロガーの設定をきれいに印刷します。</target>
        </trans-unit>
        <trans-unit id="f85da72e94aea2381a2f0b0888b6cb0b938cff09" translate="yes" xml:space="preserve">
          <source>Pretty printing of abstract Erlang syntax trees.</source>
          <target state="translated">抽象的なErlangのシンタックスツリーをきれいに印刷しています。</target>
        </trans-unit>
        <trans-unit id="be15d452e14cc6357729870688727ace6920738d" translate="yes" xml:space="preserve">
          <source>Pretty prints a &lt;code&gt;Form&lt;/code&gt;, which is an abstract form of a type that is returned by &lt;code&gt;&lt;a href=&quot;erl_parse#parse_form-1&quot;&gt; erl_parse:parse_form/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Prettyは、 &lt;code&gt;&lt;a href=&quot;erl_parse#parse_form-1&quot;&gt; erl_parse:parse_form/1&lt;/a&gt;&lt;/code&gt; によって返される型の抽象形式である &lt;code&gt;Form&lt;/code&gt; を出力します。</target>
        </trans-unit>
        <trans-unit id="dc508f11298d514f277642f83dadf29968dd9d46" translate="yes" xml:space="preserve">
          <source>Pretty prints a &lt;code&gt;Form&lt;/code&gt;, which is an abstract form of a type that is returned by &lt;code&gt;&lt;a href=&quot;erl_parse#parse_form-1&quot;&gt;erl_parse:parse_form/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Pretty は、 &lt;code&gt;&lt;a href=&quot;erl_parse#parse_form-1&quot;&gt;erl_parse:parse_form/1&lt;/a&gt;&lt;/code&gt; によって返されるタイプの抽象 &lt;code&gt;Form&lt;/code&gt; であるFormを出力します。</target>
        </trans-unit>
        <trans-unit id="d63df205ad942f1c830ebd4e4bc701ca8b9e816f" translate="yes" xml:space="preserve">
          <source>Pretty-print a syntax tree or template to the standard output. This is a utility function for development and debugging.</source>
          <target state="translated">構文ツリーやテンプレートを標準出力にプリティプリントします。開発やデバッグのためのユーティリティ関数です。</target>
        </trans-unit>
        <trans-unit id="ac772a8e8177c0183620391b61e4e90f72e8fe2f" translate="yes" xml:space="preserve">
          <source>Prettyprint-formats an abstract Erlang syntax tree as text. For example, if you have a &lt;code&gt;.beam&lt;/code&gt; file that has been compiled with &lt;code&gt;debug_info&lt;/code&gt;, the following should print the source code for the module (as it looks in the debug info representation):</source>
          <target state="translated">Prettyprintは、抽象Erlang構文ツリーをテキストとしてフォーマットします。あなたが持っている場合たとえば、 &lt;code&gt;.beam&lt;/code&gt; してコンパイルされたファイル &lt;code&gt;debug_info&lt;/code&gt; （それがデバッグ情報の表現に見えるよう）、以下はモジュールのソースコードを印刷する必要があります。</target>
        </trans-unit>
        <trans-unit id="bf3e85268675b1375b86ffb5b4b5e86258ba6284" translate="yes" xml:space="preserve">
          <source>Prevents loading information about source filenames and line numbers. This saves some memory, but exceptions do not contain information about the filenames and line numbers.</source>
          <target state="translated">ソースのファイル名や行番号に関する情報の読み込みを防ぎます。これはメモリを節約しますが、例外にはファイル名や行番号に関する情報は含まれません。</target>
        </trans-unit>
        <trans-unit id="d09eeaa3bc8ced4fe796ecbcf1dd05c62de1e4cd" translate="yes" xml:space="preserve">
          <source>Prevents the Server Name Indication extension from being sent and disables the hostname verification check &lt;code&gt;public_key:pkix_verify_hostname/2&lt;/code&gt;</source>
          <target state="translated">サーバー名表示拡張が送信されないようにし、ホスト名検証チェック &lt;code&gt;public_key:pkix_verify_hostname/2&lt;/code&gt; を無効にします</target>
        </trans-unit>
        <trans-unit id="13c464652aa4866a035cb6021e96dd21a453187f" translate="yes" xml:space="preserve">
          <source>Previous implementation used to allow all characters as long as they were integer values greater than or equal to zero. This sometimes lead to unwanted results since null characters (integer value zero) often are interpreted as string termination. The current implementation rejects these.</source>
          <target state="translated">以前の実装では、ゼロ以上の整数値であればすべての文字を許可していました。これは、ヌル文字(整数値ゼロ)が文字列の終端と解釈されることが多いため、望ましくない結果になることがありました。現在の実装では、これらを拒否しています。</target>
        </trans-unit>
        <trans-unit id="7569c52a61d993390fecf54a831ac17622da8694" translate="yes" xml:space="preserve">
          <source>Previously &lt;code&gt;erlang:now/0&lt;/code&gt; was the only option for doing many things. This section deals with some things that &lt;code&gt;erlang:now/0&lt;/code&gt; can be used for, and how you use the new API.</source>
          <target state="translated">以前は &lt;code&gt;erlang:now/0&lt;/code&gt; が多くのことを行う唯一のオプションでした。このセクションでは、 &lt;code&gt;erlang:now/0&lt;/code&gt; を使用できるいくつかの事項と、新しいAPIの使用方法について説明します。</target>
        </trans-unit>
        <trans-unit id="c7564efe264c3b6c0a1caef06afe212ed23e0f2a" translate="yes" xml:space="preserve">
          <source>Previously all operations sending signals to ports began by acquiring the port lock, then performed preparations for sending the signal, and then finally sent the signal. The preparations typically included inspecting the state of the port, and preparing the data to pass along with the signal. The preparation of data is frequently quite time consuming, and did not really depend on the port. That is we would like to do this without having the port lock locked.</source>
          <target state="translated">以前は、ポートに信号を送信するすべての操作は、ポートロックを取得することから始まり、信号を送信するための準備を行い、最後に信号を送信していました。準備には通常、ポートの状態を検査し、信号と一緒に渡すデータを準備することが含まれていました。データの準備にはかなりの時間がかかることが多く、実際にはポートに依存することはありませんでした。つまり、ポートロックをかけずに行いたいということです。</target>
        </trans-unit>
        <trans-unit id="e16667c6d147892f06ecec60287d99fb172844a5" translate="yes" xml:space="preserve">
          <source>Previously when a process that was in a run queue got suspended, we removed it from the queue straight away. This involved locking the process, locking the run queue, and then unlinking it from the double linked list implementing the queue. Removing a process from a lock free queue gets really complicated. Instead, of removing it from the queue, we just leave it in the queue and mark it as suspended. When later selected for execution we check if the process is suspended, if so just dropped it. During its time in the queue, it might also get resumed again, if so execute it when it get selected for execution.</source>
          <target state="translated">以前は、ランキューの中にあるプロセスがサスペンドされた場合、すぐにキューから削除していました。これには、プロセスをロックし、ランキューをロックし、キューを実装している二重リンクリストからそれをアンリンクすることが含まれていました。ロックされていないキューからプロセスを削除することは、とても複雑になります。キューからプロセスを削除するのではなく、単にキューの中に残しておき、それをサスペンドとしてマークします。後で実行のために選択されたときに、プロセスが中断されているかどうかをチェックし、 もし中断されている場合にはそれを単に削除します。キューの中にいる間に、それはまた、再び再開されるかもしれません。</target>
        </trans-unit>
        <trans-unit id="e0ceee1e4ba51d6772fb4907373f07ae18936fe7" translate="yes" xml:space="preserve">
          <source>Previously, in the runtime system without SMP support, specific driver callbacks were always called from the same thread. This is &lt;strong&gt;not&lt;/strong&gt; the case in the runtime system with SMP support. Regardless of locking scheme used, calls to driver callbacks can be made from different threads. For example, two consecutive calls to exactly the same callback for exactly the same port can be made from two different threads. This is for &lt;strong&gt;most&lt;/strong&gt; drivers not a problem, but it can be. Drivers that depend on all callbacks that are called in the same thread, &lt;strong&gt;must&lt;/strong&gt; be rewritten before they are used in the runtime system with SMP support.</source>
          <target state="translated">以前は、SMPサポートのないランタイムシステムでは、特定のドライバーコールバックが常に同じスレッドから呼び出されていました。これは、SMPをサポートするランタイムシステムには当てはまり&lt;strong&gt;ません&lt;/strong&gt;。使用されるロックスキームに関係なく、ドライバーコールバックの呼び出しは異なるスレッドから行うことができます。たとえば、まったく同じポートに対するまったく同じコールバックへの2つの連続した呼び出しは、2つの異なるスレッドから行うことができます。これは&lt;strong&gt;ほとんどの&lt;/strong&gt;ドライバーにとって問題ではありませんが、問題である可能性があります。同じスレッドで呼び出されるすべてのコールバックに依存するドライバーは、SMPをサポートするランタイムシステムで使用する前に書き換える&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="5f579d9ae867a89d0d67a62b8e2faa9a8ddf24b1" translate="yes" xml:space="preserve">
          <source>Primary Logger Configuration</source>
          <target state="translated">プライマリ ロガーの構成</target>
        </trans-unit>
        <trans-unit id="41e95726528ea52023e106b0ac0c22d8fda4f9a9" translate="yes" xml:space="preserve">
          <source>Primary configuration data for Logger. The following default values apply:</source>
          <target state="translated">ロガーのプライマリ構成データ。以下のデフォルト値が適用されます。</target>
        </trans-unit>
        <trans-unit id="42d555687785b7ddf41e200674b7e8d72cd8d523" translate="yes" xml:space="preserve">
          <source>Primary filters are added with &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt; logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; and removed with &lt;code&gt;&lt;a href=&quot;logger#remove_primary_filter-1&quot;&gt; logger:remove_primary_filter/1&lt;/a&gt;&lt;/code&gt;. They can also be added at system start via the Kernel configuration parameter &lt;code&gt;&lt;a href=&quot;#logger_parameter&quot;&gt;logger&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一次フィルタが追加されて &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt; logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; とし、除去 &lt;code&gt;&lt;a href=&quot;logger#remove_primary_filter-1&quot;&gt; logger:remove_primary_filter/1&lt;/a&gt;&lt;/code&gt; 。これらは、システムの起動時にカーネル構成パラメーター &lt;code&gt;&lt;a href=&quot;#logger_parameter&quot;&gt;logger&lt;/a&gt;&lt;/code&gt; 介して追加することもできます。</target>
        </trans-unit>
        <trans-unit id="d4247f20e948bccce17d13768ac3cbeade11f898" translate="yes" xml:space="preserve">
          <source>Primary filters are added with &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt;logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; and removed with &lt;code&gt;&lt;a href=&quot;logger#remove_primary_filter-1&quot;&gt;logger:remove_primary_filter/1&lt;/a&gt;&lt;/code&gt;. They can also be added at system start via the Kernel configuration parameter &lt;code&gt;&lt;a href=&quot;#logger_parameter&quot;&gt;logger&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">一次フィルタが追加されて &lt;code&gt;&lt;a href=&quot;logger#add_primary_filter-2&quot;&gt;logger:add_primary_filter/2&lt;/a&gt;&lt;/code&gt; とし、除去 &lt;code&gt;&lt;a href=&quot;logger#remove_primary_filter-1&quot;&gt;logger:remove_primary_filter/1&lt;/a&gt;&lt;/code&gt; 。カーネル構成パラメーター &lt;code&gt;&lt;a href=&quot;#logger_parameter&quot;&gt;logger&lt;/a&gt;&lt;/code&gt; 使用して、システムの起動時に追加することもできます。</target>
        </trans-unit>
        <trans-unit id="c017c83ba101ed388ebd807c4962577b9c15b383" translate="yes" xml:space="preserve">
          <source>Print information about the progress of execution (analysis phases, time spent in each, and size of the relative input).</source>
          <target state="translated">実行の進捗状況(解析フェーズ、それぞれにかかった時間、相対入力の大きさ)の情報を印刷します。</target>
        </trans-unit>
        <trans-unit id="d875fa0682eb986753b79ff11bb8426e9a0c7e07" translate="yes" xml:space="preserve">
          <source>Print logs to a file</source>
          <target state="translated">ログをファイルに印刷する</target>
        </trans-unit>
        <trans-unit id="840da8e13285304b6387e89b722d638fe4321fb7" translate="yes" xml:space="preserve">
          <source>Print percentage of time spent in each state out of system time as well as thread time. Default: false.</source>
          <target state="translated">各状態で過ごした時間のうち、 システム時間 と スレッド時間の割合を表示します。デフォルト:false。</target>
        </trans-unit>
        <trans-unit id="07be91632e8eb7326b61e92e0be9119ccf72f9d9" translate="yes" xml:space="preserve">
          <source>Print the Dialyzer version and some more information and exit.</source>
          <target state="translated">ダイアライザーのバージョンといくつかの詳細情報を印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="92dfebd42b16e35a5fd17a2305e434920bbb3835" translate="yes" xml:space="preserve">
          <source>Print the configuration of all handlers.</source>
          <target state="translated">すべてのハンドラーの設定を印刷します。</target>
        </trans-unit>
        <trans-unit id="465f1109a54007c3651daa6d3f5648d85d0c94ae" translate="yes" xml:space="preserve">
          <source>Print the documentation for &lt;code&gt;Module:Function/Arity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module:Function/Arity&lt;/code&gt; のドキュメントを印刷します。</target>
        </trans-unit>
        <trans-unit id="3c54f23b1168b2002879e4bf41359b131882a9c7" translate="yes" xml:space="preserve">
          <source>Print the documentation for &lt;code&gt;Module&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; のドキュメントを印刷する</target>
        </trans-unit>
        <trans-unit id="ec4c7fdc49fc657235f735e67b103083d086d3a9" translate="yes" xml:space="preserve">
          <source>Print the documentation for all &lt;code&gt;Module:Function&lt;/code&gt;s (regardless of arity).</source>
          <target state="translated">すべての &lt;code&gt;Module:Function&lt;/code&gt; のドキュメントを印刷します（アリティに関係なく）。</target>
        </trans-unit>
        <trans-unit id="4ad3462bebc7bf990bf0f02e7785a28379a6206b" translate="yes" xml:space="preserve">
          <source>Print the given microstate statistics values to standard out. With many states this can be quite verbose. See the top of this reference manual for a brief description of what the fields mean.</source>
          <target state="translated">与えられたマイクロステート統計値を印刷して標準化します。多くのステートでは、これは非常に冗長になる可能性があります。フィールドの意味についての簡単な説明は、このリファレンスマニュアルのトップを参照してください。</target>
        </trans-unit>
        <trans-unit id="4970bf3b0689c3bc33384763bf346be0cfadd6f5" translate="yes" xml:space="preserve">
          <source>Print the given microstate statistics values to stdout. Same as &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt; msacc:print(DataOrStats,#{}). &lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">指定されたマイクロステート統計値をstdoutに出力します。 &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt; msacc:print(DataOrStats,#{}). &lt;/a&gt;&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="c29cb731638369d14c3a95c6a29333f3020a9db2" translate="yes" xml:space="preserve">
          <source>Print the given microstate statistics values to stdout. Same as &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt;msacc:print(DataOrStats,#{}).&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">指定されたマイクロステート統計値をstdoutに出力します。 &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt;msacc:print(DataOrStats,#{}).&lt;/a&gt;&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="d7eaf72064647bad389abb4f1d3dfdc027f8b39d" translate="yes" xml:space="preserve">
          <source>Print the given microstate statistics values to the given file or device. The other arguments behave the same way as for &lt;code&gt;&lt;a href=&quot;#print-2&quot;&gt;print/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定されたマイクロステート統計値を指定されたファイルまたはデバイスに出力します。他の引数は &lt;code&gt;&lt;a href=&quot;#print-2&quot;&gt;print/2&lt;/a&gt;&lt;/code&gt; と同じように動作します。</target>
        </trans-unit>
        <trans-unit id="ba5de3ef9125e2ec267d01741dd2ed47712b2cfb" translate="yes" xml:space="preserve">
          <source>Print the primary Logger configurations.</source>
          <target state="translated">プライマリ ロガーの設定を印刷します。</target>
        </trans-unit>
        <trans-unit id="34634055c6f69316398bf0d40b7161096698a0c0" translate="yes" xml:space="preserve">
          <source>Print the statistics by source file and line numbers.</source>
          <target state="translated">ソースファイルと行番号で統計情報を印刷します。</target>
        </trans-unit>
        <trans-unit id="6346a375113351396db6189bbd3e28045635ee9a" translate="yes" xml:space="preserve">
          <source>Print the structure of a syntax tree or template to the standard output. This is a utility function for development and debugging.</source>
          <target state="translated">構文ツリーやテンプレートの構造を標準出力に出力します。開発やデバッグのためのユーティリティ機能です。</target>
        </trans-unit>
        <trans-unit id="e10fd3ed853bc375bf83189519dd5d93564c2fbe" translate="yes" xml:space="preserve">
          <source>Print the type documentation for &lt;code&gt;Module&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; のタイプドキュメントを印刷します</target>
        </trans-unit>
        <trans-unit id="f1efdeed5130231a6e5fabdee2f6a141a2950036" translate="yes" xml:space="preserve">
          <source>Print the type documentation for &lt;code&gt;Type/Arity&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 内の &lt;code&gt;Type/Arity&lt;/code&gt; タイプドキュメントを印刷します。</target>
        </trans-unit>
        <trans-unit id="631758cd60c7a5de270b74862175133314a58a36" translate="yes" xml:space="preserve">
          <source>Print the type documentation for &lt;code&gt;Type&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; regardless of arity.</source>
          <target state="translated">以下のためのタイプのドキュメントの印刷 &lt;code&gt;Type&lt;/code&gt; で &lt;code&gt;Module&lt;/code&gt; にかかわらずアリティの。</target>
        </trans-unit>
        <trans-unit id="b0de2ead24e5961c777ca83b34e36a96963308e8" translate="yes" xml:space="preserve">
          <source>Print this message and exit.</source>
          <target state="translated">このメッセージを印刷して終了します。</target>
        </trans-unit>
        <trans-unit id="67d04a8c259ba2c520817ac42065457527ed5559" translate="yes" xml:space="preserve">
          <source>Printing characters, excluding letters, digits, and space</source>
          <target state="translated">文字、数字、スペースを除いた文字の印刷</target>
        </trans-unit>
        <trans-unit id="dd479d5b24caa5cc7f6fcec5ba84f65bfd052c0e" translate="yes" xml:space="preserve">
          <source>Printing characters, excluding space</source>
          <target state="translated">スペースを除いた文字の印刷</target>
        </trans-unit>
        <trans-unit id="1ceeb223cd6849a3604ba83fadcbca0256451f47" translate="yes" xml:space="preserve">
          <source>Printing characters, including space</source>
          <target state="translated">スペースを含む文字の印刷</target>
        </trans-unit>
        <trans-unit id="5d921c48d9c8fb8f05637fa271ea8672b6ca0cee" translate="yes" xml:space="preserve">
          <source>Printing options:</source>
          <target state="translated">印刷オプション。</target>
        </trans-unit>
        <trans-unit id="d6045c26dcc40b8b0b1a862cc5369f2a960dd880" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;Text&lt;/code&gt; and the wall clock time for evaluation of &lt;code&gt;Expr&lt;/code&gt;. The result is always the value of &lt;code&gt;Expr&lt;/code&gt;, so this macro can be wrapped around any expression to show its run time when the code is compiled with debugging enabled. For example, &lt;code&gt;List1 = ?debugTime(&quot;sorting&quot;, lists:sort(List))&lt;/code&gt; might show as &quot;&lt;code&gt;sorting: 0.015 s&lt;/code&gt;&quot;.</source>
          <target state="translated">印刷の &lt;code&gt;Text&lt;/code&gt; との評価のためのウォールクロック時間 &lt;code&gt;Expr&lt;/code&gt; 。結果は常に &lt;code&gt;Expr&lt;/code&gt; の値であるため、このマクロを任意の式にラップして、デバッグを有効にしてコードをコンパイルしたときの実行時間を表示できます。たとえば、 &lt;code&gt;List1 = ?debugTime(&quot;sorting&quot;, lists:sort(List))&lt;/code&gt; は、「 &lt;code&gt;sorting: 0.015 s&lt;/code&gt; 」と表示されます。</target>
        </trans-unit>
        <trans-unit id="249624d6cefc4a2b88e5bd0c9d8e84ed3f1f76d0" translate="yes" xml:space="preserve">
          <source>Prints a list of internal lock counters by source code locations.</source>
          <target state="translated">ソースコードの場所別に内部ロックカウンタのリストを表示します。</target>
        </trans-unit>
        <trans-unit id="5b46759cd364af5f12c0d8bc8dd37e3821f4b179" translate="yes" xml:space="preserve">
          <source>Prints a list of internal lock counters for a specific lock.</source>
          <target state="translated">特定のロックの内部ロック・カウンタのリストを表示します。</target>
        </trans-unit>
        <trans-unit id="f780c7159f6f13c37c7d77cfd6cc4335b5ecf7a3" translate="yes" xml:space="preserve">
          <source>Prints a list of internal locks and its statistics.</source>
          <target state="translated">内部ロックのリストとその統計情報を表示します。</target>
        </trans-unit>
        <trans-unit id="34938f37f4431fc15190b179d6c88b3314bbc2c3" translate="yes" xml:space="preserve">
          <source>Prints a term using the record definitions known to the shell. All of &lt;code&gt;Term&lt;/code&gt; is printed; the depth is not limited as is the case when a return value is printed.</source>
          <target state="translated">シェルが認識しているレコード定義を使用して用語を出力します。 &lt;code&gt;Term&lt;/code&gt; すべてが印刷されます。戻り値が出力される場合のように、深さは制限されません。</target>
        </trans-unit>
        <trans-unit id="af0bf4827e6f6c31d2c88fd072f546d7d79231d8" translate="yes" xml:space="preserve">
          <source>Prints a term, in clear text, to the file specified by &lt;code&gt;fp&lt;/code&gt;, or the buffer pointed to by &lt;code&gt;s&lt;/code&gt;. It tries to resemble the term printing in the Erlang shell.</source>
          <target state="translated">用語をクリアテキストで、 &lt;code&gt;fp&lt;/code&gt; で指定されたファイル、または &lt;code&gt;s&lt;/code&gt; で示されたバッファに出力します。これは、Erlangシェルでの印刷という用語に似ています。</target>
        </trans-unit>
        <trans-unit id="dbb3d816fd9f97adbc552b5513c5a135cb6248eb" translate="yes" xml:space="preserve">
          <source>Prints a text representation of &lt;code&gt;Term&lt;/code&gt; on the standard output.</source>
          <target state="translated">&lt;code&gt;Term&lt;/code&gt; のテキスト表現を標準出力に出力します。</target>
        </trans-unit>
        <trans-unit id="f131bd4ae3bf99f6a37fd4eaaff33b16a3ddd00d" translate="yes" xml:space="preserve">
          <source>Prints all existing breakpoints in &lt;code&gt;Module&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; 内のすべての既存のブレークポイントを出力します。</target>
        </trans-unit>
        <trans-unit id="5a8350e6665f2a056f33d55252db1621c39e138f" translate="yes" xml:space="preserve">
          <source>Prints all existing breakpoints.</source>
          <target state="translated">既存のブレークポイントをすべて印刷します。</target>
        </trans-unit>
        <trans-unit id="a09e12adb74f08869231e9cda96a7ab997d865d7" translate="yes" xml:space="preserve">
          <source>Prints all filenames in the zip archive &lt;code&gt;Archive&lt;/code&gt; to the Erlang shell. (Similar to &lt;code&gt;tar&amp;nbsp;t&lt;/code&gt;.)</source>
          <target state="translated">zipアーカイブ &lt;code&gt;Archive&lt;/code&gt; 内のすべてのファイル名をErlangシェルに出力します。（ &lt;code&gt;tar&amp;nbsp;t&lt;/code&gt; 似ています。）</target>
        </trans-unit>
        <trans-unit id="18e7b8e58c0e38665fb68377f1d2376f33278d8b" translate="yes" xml:space="preserve">
          <source>Prints all record definitions.</source>
          <target state="translated">すべてのレコード定義を印刷します。</target>
        </trans-unit>
        <trans-unit id="66a41d50c3e8acabd70db40b3336aae5ee4b67bb" translate="yes" xml:space="preserve">
          <source>Prints all system events on &lt;code&gt;standard_io&lt;/code&gt;. The events are formatted with a function that is defined by the process that generated the event (with a call to &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">すべてのシステムイベントを &lt;code&gt;standard_io&lt;/code&gt; に出力します。イベントは、（ &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt; の呼び出しを使用して）イベントを生成したプロセスによって定義された関数でフォーマットされます。</target>
        </trans-unit>
        <trans-unit id="6a70ee13c7e68963279aefe5da5f06258c94682e" translate="yes" xml:space="preserve">
          <source>Prints an informational message about each added file.</source>
          <target state="translated">追加された各ファイルの情報を表示します。</target>
        </trans-unit>
        <trans-unit id="b783bcbadb2cc653a08641efe74f849f29f9e618" translate="yes" xml:space="preserve">
          <source>Prints an informational message about the added file.</source>
          <target state="translated">追加されたファイルに関する情報メッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="789b189bdffe8e48a506f0e50b3eae0173a1b17d" translate="yes" xml:space="preserve">
          <source>Prints an informational message for each extracted file.</source>
          <target state="translated">抽出されたファイルごとに情報メッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="b42f15b17183c3dbb48cf5820eb8a855896d590a" translate="yes" xml:space="preserve">
          <source>Prints and logs from a test case.</source>
          <target state="translated">テストケースから印刷してログを記録します。</target>
        </trans-unit>
        <trans-unit id="0cf9dc25b9f3af6da971b72a11d06f3ed2521439" translate="yes" xml:space="preserve">
          <source>Prints both the source code for &lt;code&gt;Expr&lt;/code&gt; and its current value. E.g., &lt;code&gt;?debugVal(f(X))&lt;/code&gt; might be displayed as &quot;&lt;code&gt;f(X) = 42&lt;/code&gt;&quot;. (Large terms are truncated to the depth given by the macro &lt;code&gt;EUNIT_DEBUG_VAL_DEPTH&lt;/code&gt;, which defaults to 15 but can be overridden by the user.) The result is always the value of &lt;code&gt;Expr&lt;/code&gt;, so this macro can be wrapped around any expression to display its value when the code is compiled with debugging enabled.</source>
          <target state="translated">&lt;code&gt;Expr&lt;/code&gt; のソースコードとその現在の値の両方を出力します。たとえば、 &lt;code&gt;?debugVal(f(X))&lt;/code&gt; は &quot; &lt;code&gt;f(X) = 42&lt;/code&gt; &quot; と表示されます。（大きな項は、マクロ &lt;code&gt;EUNIT_DEBUG_VAL_DEPTH&lt;/code&gt; で指定された深さに切り捨てられます。デフォルトは15ですが、ユーザーがオーバーライドできます。）結果は常に &lt;code&gt;Expr&lt;/code&gt; の値であるため、このマクロは、式をラップしてその値を表示できます。コードはデバッグを有効にしてコンパイルされます。</target>
        </trans-unit>
        <trans-unit id="cba2a56bd54f58298d76b707819499e391db4251" translate="yes" xml:space="preserve">
          <source>Prints call statistics for each process in the analysis. This is the default.</source>
          <target state="translated">解析内の各プロセスの呼び出し統計情報を出力します。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="e1be7a76157fe86cb7376f259794a335da8ea625" translate="yes" xml:space="preserve">
          <source>Prints callers and called information in the analysis. This is the default.</source>
          <target state="translated">分析の呼び出し元および呼び出した情報を印刷します。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="c909f68d3cdf1b4678031168fcbd218d91fd2a8e" translate="yes" xml:space="preserve">
          <source>Prints filenames and information about all files in the zip archive &lt;code&gt;Archive&lt;/code&gt; to the Erlang shell. (Similar to &lt;code&gt;tar tv&lt;/code&gt;.)</source>
          <target state="translated">ファイル名とzipアーカイブ &lt;code&gt;Archive&lt;/code&gt; 内のすべてのファイルに関する情報をErlangシェルに出力します。（ &lt;code&gt;tar tv&lt;/code&gt; に似ています。）</target>
        </trans-unit>
        <trans-unit id="3d37aa2c01035d21e560d11bd3a6a17de70550c3" translate="yes" xml:space="preserve">
          <source>Prints from a test case to the console.</source>
          <target state="translated">テストケースからコンソールに印刷します。</target>
        </trans-unit>
        <trans-unit id="f28c890f7ca27b31a21a647f349c289e1195b699" translate="yes" xml:space="preserve">
          <source>Prints from a test case to the log file.</source>
          <target state="translated">テストケースからログファイルに出力します。</target>
        </trans-unit>
        <trans-unit id="367bedb7c3ebf6d1df93886702fa7c7177182d00" translate="yes" xml:space="preserve">
          <source>Prints help text.</source>
          <target state="translated">ヘルプテキストを印刷します。</target>
        </trans-unit>
        <trans-unit id="4842182b0113366c688f6ed8532b18cf4974ced6" translate="yes" xml:space="preserve">
          <source>Prints information about all table definitions on the terminal.</source>
          <target state="translated">端末上のすべてのテーブル定義に関する情報を表示します。</target>
        </trans-unit>
        <trans-unit id="c9b99b5c7266c995bbf989e773efe1fa4d05005d" translate="yes" xml:space="preserve">
          <source>Prints information about one table definition on the terminal.</source>
          <target state="translated">1つのテーブル定義に関する情報を端末に表示します。</target>
        </trans-unit>
        <trans-unit id="9a832165573cfbb962be90caea9e1e9a84652de7" translate="yes" xml:space="preserve">
          <source>Prints lcnt server state and generic information about collected lock statistics.</source>
          <target state="translated">lcnt サーバの状態と収集したロック統計情報の一般的な情報を表示します。</target>
        </trans-unit>
        <trans-unit id="96fd634328bfac39da0d4ad325d6f383ea04727b" translate="yes" xml:space="preserve">
          <source>Prints names and information about all files in the tar file &lt;code&gt;Name&lt;/code&gt; to the Erlang shell (similar to &quot;&lt;code&gt;tar&amp;nbsp;tv&lt;/code&gt;&quot;).</source>
          <target state="translated">tarファイル &lt;code&gt;Name&lt;/code&gt; 内のすべてのファイルの名前と情報をErlangシェルに出力します（「 &lt;code&gt;tar&amp;nbsp;tv&lt;/code&gt; 」と同様）。</target>
        </trans-unit>
        <trans-unit id="0b7c144db0f81aaecb54453231a97d3656fc6209" translate="yes" xml:space="preserve">
          <source>Prints one expression. It is useful for implementing hooks (see section &lt;code&gt;&lt;a href=&quot;#knownlimitations&quot;&gt;Known Limitations&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">1つの式を出力します。これはフックの実装に役立ちます（ &lt;code&gt;&lt;a href=&quot;#knownlimitations&quot;&gt;Known Limitations&lt;/a&gt;&lt;/code&gt; 参照）。</target>
        </trans-unit>
        <trans-unit id="0d811790ffe033d437439353029d5c5f60196585" translate="yes" xml:space="preserve">
          <source>Prints selected record definitions. &lt;code&gt;RecordNames&lt;/code&gt; is a record name or a list of record names.</source>
          <target state="translated">選択したレコード定義を印刷します。 &lt;code&gt;RecordNames&lt;/code&gt; は、レコード名またはレコード名のリストです。</target>
        </trans-unit>
        <trans-unit id="3337334a9f65d4805b4e67126869967487e4a45a" translate="yes" xml:space="preserve">
          <source>Prints system information on the terminal. This function can be used even if Mnesia is not started. However, more information is displayed if Mnesia is started.</source>
          <target state="translated">端末にシステム情報を印刷します。この機能はMnesiaを起動していなくても使用できます。ただし、Mnesiaを起動すると、より多くの情報が表示されます。</target>
        </trans-unit>
        <trans-unit id="cc7fe00a6e4282e0ab0f331a54683530177db63d" translate="yes" xml:space="preserve">
          <source>Prints the argument with the string syntax. The argument is, if no Unicode translation modifier is present, an &lt;code&gt;iolist()&lt;/code&gt;, a &lt;code&gt;binary()&lt;/code&gt;, or an &lt;code&gt;atom()&lt;/code&gt;. If the Unicode translation modifier (&lt;code&gt;t&lt;/code&gt;) is in effect, the argument is &lt;code&gt;unicode:chardata()&lt;/code&gt;, meaning that binaries are in UTF-8. The characters are printed without quotes. The string is first truncated by the specified precision and then padded and justified to the specified field width. The default precision is the field width.</source>
          <target state="translated">文字列構文で引数を出力します。引数は、Unicode変換修飾子が存在しない場合、 &lt;code&gt;iolist()&lt;/code&gt; 、 &lt;code&gt;binary()&lt;/code&gt; 、または &lt;code&gt;atom()&lt;/code&gt; です。Unicode変換修飾子（ &lt;code&gt;t&lt;/code&gt; ）が有効な場合、引数は &lt;code&gt;unicode:chardata()&lt;/code&gt; です。これは、バイナリがUTF-8であることを意味します。文字は引用符なしで印刷されます。文字列は、まず指定された精度で切り捨てられ、次にパディングされて指定されたフィールド幅に揃えられます。デフォルトの精度はフィールド幅です。</target>
        </trans-unit>
        <trans-unit id="bd5cd1b05b1d6e3d16e8bf612aeeaa8d48e96e04" translate="yes" xml:space="preserve">
          <source>Prints the content of all the (snmp) tables and variables for all mibs handled by the snmp agent.</source>
          <target state="translated">snmpエージェントが扱うすべてのmibのすべての(snmp)テーブルと変数の内容を印刷します。</target>
        </trans-unit>
        <trans-unit id="90637c82b5d5250fe221618f94be01dea7995ed8" translate="yes" xml:space="preserve">
          <source>Prints the content of all the (snmp) tables for all mibs handled by the snmp agent.</source>
          <target state="translated">snmpエージェントが扱うすべてのmibのすべての(snmp)テーブルの内容を印刷します。</target>
        </trans-unit>
        <trans-unit id="4bf87b55c70954b59410622021acfda18b4d862a" translate="yes" xml:space="preserve">
          <source>Prints the content of all the (snmp) variables for all mibs handled by the snmp agent.</source>
          <target state="translated">snmpエージェントが扱うすべてのmibのすべての(snmp)変数の内容を出力します。</target>
        </trans-unit>
        <trans-unit id="5b79c2bcb86c7797ba5fa06effcf5832d223d36a" translate="yes" xml:space="preserve">
          <source>Prints the contents of the database on screen. This is useful for debugging since the &lt;code&gt;STANDARD-MIB&lt;/code&gt; and &lt;code&gt;OTP-SNMPEA-MIB&lt;/code&gt; (and maybe your own MIBs) are stored in &lt;code&gt;snmpa_local_db&lt;/code&gt;.</source>
          <target state="translated">データベースの内容を画面に出力します。 &lt;code&gt;STANDARD-MIB&lt;/code&gt; および &lt;code&gt;OTP-SNMPEA-MIB&lt;/code&gt; （およびおそらく独自のMIB）は &lt;code&gt;snmpa_local_db&lt;/code&gt; に格納されているため、これはデバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="cf9bf607d302af3ec16b8915f5fde9c68b05ce6e" translate="yes" xml:space="preserve">
          <source>Prints the current microstate accounting to standard out. Same as &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt; msacc:print(msacc:stats(),#{}). &lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">現在のマイクロステートアカウンティングを標準出力に出力します。 &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt; msacc:print(msacc:stats(),#{}). &lt;/a&gt;&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="3d48e71ba53b9a774ace4b3048a7d6147bac49e2" translate="yes" xml:space="preserve">
          <source>Prints the current microstate accounting to standard out. Same as &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt;msacc:print(msacc:stats(),#{}).&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">現在のマイクロステートアカウンティングを標準出力に出力します。 &lt;code&gt;&lt;a href=&quot;#print-1&quot;&gt;msacc:print(msacc:stats(),#{}).&lt;/a&gt;&lt;/code&gt; 同じです。</target>
        </trans-unit>
        <trans-unit id="1f573f7b3b8befc12d22fd5e016d5affba5ec7e7" translate="yes" xml:space="preserve">
          <source>Prints the current status of all interpreted processes.</source>
          <target state="translated">すべての解釈されたプロセスの現在の状態を表示します。</target>
        </trans-unit>
        <trans-unit id="b7de039db4515d2480ed1087648907d99e3cce17" translate="yes" xml:space="preserve">
          <source>Prints the current variable bindings.</source>
          <target state="translated">現在の変数のバインディングを表示します。</target>
        </trans-unit>
        <trans-unit id="38356e23d298a145e0dd7db9a9c3d8f5137f87bd" translate="yes" xml:space="preserve">
          <source>Prints the formatted string in the comment field in the table on the test suite result page.</source>
          <target state="translated">テストスイートの結果ページの表のコメントフィールドに、フォーマットされた文字列を印刷します。</target>
        </trans-unit>
        <trans-unit id="9a338446495bbc76dc9e6e72c05e03dc5573b368" translate="yes" xml:space="preserve">
          <source>Prints the history list.</source>
          <target state="translated">履歴リストを印刷します。</target>
        </trans-unit>
        <trans-unit id="1587f809009dffca5babc79d912a7baf0c2c4678" translate="yes" xml:space="preserve">
          <source>Prints the logged system events in the debug structure, using &lt;code&gt;FormFunc&lt;/code&gt; as defined when the event was generated by a call to &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">イベントが &lt;code&gt;&lt;a href=&quot;#handle_debug-4&quot;&gt;handle_debug/4&lt;/a&gt;&lt;/code&gt; の呼び出しによって生成されたときに定義された &lt;code&gt;FormFunc&lt;/code&gt; を使用して、ログに記録されたシステムイベントをデバッグ構造に出力します。</target>
        </trans-unit>
        <trans-unit id="c697f405132de684f29b1c85650f6166f19d3f38" translate="yes" xml:space="preserve">
          <source>Prints the name of the working directory.</source>
          <target state="translated">作業ディレクトリの名前を表示します。</target>
        </trans-unit>
        <trans-unit id="2b0a0e8caa63b361ad3055b9a938bd9ee0847140" translate="yes" xml:space="preserve">
          <source>Prints the names of all files in the tar file &lt;code&gt;Name&lt;/code&gt; to the Erlang shell (similar to &quot;&lt;code&gt;tar&amp;nbsp;t&lt;/code&gt;&quot;).</source>
          <target state="translated">tarファイル &lt;code&gt;Name&lt;/code&gt; 内のすべてのファイルの名前をErlangシェルに出力します（「 &lt;code&gt;tar&amp;nbsp;t&lt;/code&gt; 」と同様）。</target>
        </trans-unit>
        <trans-unit id="df056a5b36536b5f6f05efef7d94a9025dcb4881" translate="yes" xml:space="preserve">
          <source>Prints the node uptime (as specified by &lt;code&gt;erlang:statistics(wall_clock)&lt;/code&gt;) in human-readable form.</source>
          <target state="translated">ノードの稼働時間（ &lt;code&gt;erlang:statistics(wall_clock)&lt;/code&gt; で指定）を人間が読める形式で出力します。</target>
        </trans-unit>
        <trans-unit id="236e4648c9dfa6dccb2557b594716eafdf865791" translate="yes" xml:space="preserve">
          <source>Prints the specified &lt;code&gt;Comment&lt;/code&gt; in the comment field in the table on the test suite result page.</source>
          <target state="translated">テストスイート結果ページのテーブルのコメントフィールドに指定された &lt;code&gt;Comment&lt;/code&gt; します。</target>
        </trans-unit>
        <trans-unit id="86341a0cf794500a0ef3c32c1e84cb1e5b1a1ea2" translate="yes" xml:space="preserve">
          <source>Prints the specified Erlang term to the specified output stream.</source>
          <target state="translated">指定されたErlang項を指定された出力ストリームに出力します。</target>
        </trans-unit>
        <trans-unit id="325bdac9b9003ed5a24e798d3e0a5f4333783830" translate="yes" xml:space="preserve">
          <source>Prior to Erlang/OTP 21.0, supervisor, crash, and progress reports were only logged when the SASL application was running. This behaviour can, for backwards compatibility, be enabled by setting the Kernel configuration parameter &lt;code&gt; logger_sasl_compatible&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;SASL Error Logging&lt;/code&gt; in the SASL User's Guide.</source>
          <target state="translated">Erlang / OTP 21.0より前は、スーパーバイザー、クラッシュ、および進行状況のレポートは、SASLアプリケーションの実行中にのみログに記録されていました。この動作は、下位互換性のために、カーネル構成パラメーター &lt;code&gt; logger_sasl_compatible&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定することで有効にできます。詳細については、 &lt;code&gt;SASL Error Logging&lt;/code&gt; SASLユーザーズガイドに。</target>
        </trans-unit>
        <trans-unit id="01d810dcc882a2671bb99ec2a3f4b52034e71105" translate="yes" xml:space="preserve">
          <source>Prior to Erlang/OTP 21.0, supervisor, crash, and progress reports were only logged when the SASL application was running. This behaviour can, for backwards compatibility, be enabled by setting the Kernel configuration parameter &lt;code&gt;logger_sasl_compatible&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;SASL Error Logging&lt;/code&gt; in the SASL User's Guide.</source>
          <target state="translated">Erlang / OTP 21.0より前のバージョンでは、監視プログラム、クラッシュ、および進行状況のレポートは、SASLアプリケーションの実行中にのみ記録されていました。この動作は、下位互換性のために、カーネル構成パラメーター &lt;code&gt;logger_sasl_compatible&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定することで有効にできます。詳細については、 『SASL User's Guide』の「 &lt;code&gt;SASL Error Logging&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="9c5c3d6724263056f8e5809f4ae6b20baea9b0f8" translate="yes" xml:space="preserve">
          <source>Prior to Erlang/OTP 21.0, these reports were only logged when the SASL application was running, and they were printed trough SASL's own event handlers &lt;code&gt;sasl_report_tty_h&lt;/code&gt; and &lt;code&gt;sasl_report_file_h&lt;/code&gt;.</source>
          <target state="translated">Erlang / OTP 21.0より前の &lt;code&gt;sasl_report_tty_h&lt;/code&gt; では、これらのレポートはSASLアプリケーションの実行中にのみログに記録され、SASL独自のイベントハンドラーsasl_report_tty_hおよび &lt;code&gt;sasl_report_file_h&lt;/code&gt; を介して出力されていました。</target>
        </trans-unit>
        <trans-unit id="a9517dd9993b228427ab1498ed0cfff24f45932f" translate="yes" xml:space="preserve">
          <source>Prior to OTP 22.1, this function was documented as having 15 variants in 6 arities. These are still exported for backwards compatibility, but no longer documented. The map-based variants documented above provide the same functionality with simpler arguments.</source>
          <target state="translated">OTP 22.1 より前のバージョンでは、この関数は 6 つの属性に 15 のバリエーションがあると文書化されていました。これらは後方互換性のために今でもエクスポートされていますが、もはやドキュメント化されていません。上記のマップベースのバリアントは、よりシンプルな引数で同じ機能を提供します。</target>
        </trans-unit>
        <trans-unit id="53132db818aa78ab7620a49cbf8f5a24e49b420c" translate="yes" xml:space="preserve">
          <source>Prior to each test execution, Common Test does a simulated test run in order to count test suites, groups and cases for logging purposes. This causes the &lt;code&gt;post_all/3&lt;/code&gt; hook function to always be called twice. For this reason, side effects are best avoided in this callback.</source>
          <target state="translated">Common Testは、各テストを実行する前に、ログ記録の目的でテストスイート、グループ、およびケースをカウントするために、シミュレートされたテスト実行を実行します。これにより、 &lt;code&gt;post_all/3&lt;/code&gt; フック関数が常に2回呼び出されます。このため、このコールバックでは副作用を回避するのが最善です。</target>
        </trans-unit>
        <trans-unit id="d9fa9488e8079c2ed6ee6f3914be0fef3b123eb1" translate="yes" xml:space="preserve">
          <source>Prior to each test execution, Common Test does a simulated test run in order to count test suites, groups and cases for logging purposes. This causes the &lt;code&gt;post_groups/2&lt;/code&gt; hook function to always be called twice. For this reason, side effects are best avoided in this callback.</source>
          <target state="translated">Common Testは、各テストを実行する前に、ログ記録の目的でテストスイート、グループ、およびケースをカウントするために、シミュレートされたテスト実行を実行します。これにより、 &lt;code&gt;post_groups/2&lt;/code&gt; フック関数が常に2回呼び出されます。このため、このコールバックでは副作用を回避するのが最善です。</target>
        </trans-unit>
        <trans-unit id="cfc234fd653a76336820a16651d9ce91647ca6e8" translate="yes" xml:space="preserve">
          <source>Prior to stdlib-3.7 (OTP-22.0) &lt;code&gt;write_concurrency&lt;/code&gt; had no effect on &lt;code&gt;ordered_set&lt;/code&gt;.</source>
          <target state="translated">stdlib-3.7（OTP-22.0）より &lt;code&gt;write_concurrency&lt;/code&gt; は、write_concurrencyは &lt;code&gt;ordered_set&lt;/code&gt; に影響を与えませんでした。</target>
        </trans-unit>
        <trans-unit id="06bdb66fe24b1bd0f13724edf2132df5e7b44cc6" translate="yes" xml:space="preserve">
          <source>Priority level &lt;code&gt;max&lt;/code&gt; is reserved for internal use in the Erlang runtime system, and is &lt;strong&gt;not&lt;/strong&gt; to be used by others.</source>
          <target state="translated">優先レベル &lt;code&gt;max&lt;/code&gt; は、Erlangランタイムシステムの内部使用のために予約されており、他のユーザーが使用することは&lt;strong&gt;できません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="891a5ba970623a36963c697cb5e2983045ef4bf5" translate="yes" xml:space="preserve">
          <source>Private directory for a test suite. This directory is to be used when the test suite needs to write to files.</source>
          <target state="translated">テストスイートのためのプライベートディレクトリ。このディレクトリは、テストスイートがファイルに書き込む必要がある場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="1560d5e03a4510a6c6ad469d0a62cd63315c3854" translate="yes" xml:space="preserve">
          <source>Private key of the host matching the &lt;code&gt;Algorithm&lt;/code&gt;. It may be a reference to a 'ssh-rsa', rsa-sha2-* or 'ssh-dss' (NOT ecdsa) key stored in a loaded Engine.</source>
          <target state="translated">&lt;code&gt;Algorithm&lt;/code&gt; 一致するホストの秘密鍵。ロードされたエンジンに格納されている「ssh-rsa」、rsa-sha2- *、または「ssh-dss」（ecdsaではない）キーへの参照である場合があります。</target>
        </trans-unit>
        <trans-unit id="603f6c7b83b91ba3b66637cb17d80977c31db448" translate="yes" xml:space="preserve">
          <source>Private key of the user matching the &lt;code&gt;Algorithm&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Algorithm&lt;/code&gt; 一致するユーザーの秘密鍵。</target>
        </trans-unit>
        <trans-unit id="74ad72304fcac0b5a69a08a6f5ec35c07a46f71f" translate="yes" xml:space="preserve">
          <source>Private use</source>
          <target state="translated">個人利用</target>
        </trans-unit>
        <trans-unit id="b79a8e30c6fdcdcf9dd5d5409cd8498f3ab57c1c" translate="yes" xml:space="preserve">
          <source>Probe specifications can be found in &lt;code&gt;erts/emulator/beam/erlang_dtrace.d&lt;/code&gt;, and a few example scripts can be found under &lt;code&gt;lib/runtime_tools/examples/&lt;/code&gt;.</source>
          <target state="translated">プローブの仕様は &lt;code&gt;erts/emulator/beam/erlang_dtrace.d&lt;/code&gt; にあり、いくつかのサンプルスクリプトは &lt;code&gt;lib/runtime_tools/examples/&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="f85f3223fd42f20ff0f4013198f3a0482c317dc6" translate="yes" xml:space="preserve">
          <source>Probes in the dtrace.so NIF library like this:</source>
          <target state="translated">dtrace.so NIFライブラリのプローブはこんな感じ。</target>
        </trans-unit>
        <trans-unit id="4180fe17ea663764396b9e7a7c467588a0d635b1" translate="yes" xml:space="preserve">
          <source>Problems were found during the analysis.</source>
          <target state="translated">分析中に問題点が見つかった。</target>
        </trans-unit>
        <trans-unit id="dcd7a97391d07066e93a31ea99c263af50266780" translate="yes" xml:space="preserve">
          <source>Problems when extracting from a tar file, &lt;code&gt;erl_tar:extract/2&lt;/code&gt; returned &lt;code&gt;{error, {Name, Reason}}&lt;/code&gt;.</source>
          <target state="translated">tarファイルからの抽出時の問題、 &lt;code&gt;erl_tar:extract/2&lt;/code&gt; は &lt;code&gt;{error, {Name, Reason}}&lt;/code&gt; 返しました。</target>
        </trans-unit>
        <trans-unit id="a4ea781ed99930cb2040f2b3d1f7277fa799d5c7" translate="yes" xml:space="preserve">
          <source>Procedure</source>
          <target state="translated">Procedure</target>
        </trans-unit>
        <trans-unit id="d682fc9dab69c1d2daf94fe72d9c9c2027249415" translate="yes" xml:space="preserve">
          <source>Procedures</source>
          <target state="translated">Procedures</target>
        </trans-unit>
        <trans-unit id="5c506e1119ce934c20944a9840c90c01b739012d" translate="yes" xml:space="preserve">
          <source>Process Communication</source>
          <target state="translated">プロセスコミュニケーション</target>
        </trans-unit>
        <trans-unit id="81f4402b2340732e32048f86bdd935e046c914b7" translate="yes" xml:space="preserve">
          <source>Process Grid</source>
          <target state="translated">プロセスグリッド</target>
        </trans-unit>
        <trans-unit id="1b5406f64cf5c66ba3e1f6f68c84ed91019d67d3" translate="yes" xml:space="preserve">
          <source>Process Groups implement strong eventual consistency. Unlike &lt;code&gt;&lt;a href=&quot;pg2&quot;&gt;pg2&lt;/a&gt;&lt;/code&gt;, that provides strong ordering guarantees, Process Groups membership view may temporarily diverge. For example, when processes on &lt;code&gt;node1&lt;/code&gt; and &lt;code&gt;node2&lt;/code&gt; join concurrently, &lt;code&gt;node3&lt;/code&gt; and &lt;code&gt;node4&lt;/code&gt; may receive updates in a different order.</source>
          <target state="translated">プロセスグループは、強力な結果整合性を実装します。強力な順序保証を提供する &lt;code&gt;&lt;a href=&quot;pg2&quot;&gt;pg2&lt;/a&gt;&lt;/code&gt; とは異なり、プロセスグループのメンバーシップビューは一時的に異なる場合があります。たとえば、 &lt;code&gt;node1&lt;/code&gt; と &lt;code&gt;node2&lt;/code&gt; のプロセスが同時に参加する場合、 &lt;code&gt;node3&lt;/code&gt; と &lt;code&gt;node4&lt;/code&gt; は異なる順序で更新を受信する可能性があります。</target>
        </trans-unit>
        <trans-unit id="e976a26adbbfd7012fe545033a0a8839af4e4c58" translate="yes" xml:space="preserve">
          <source>Process IDs of processes linked to this one. Can also contain ports. If process monitoring is used, this field also tells in which direction the monitoring is in effect. That is, a link &quot;to&quot; a process tells you that the &quot;current&quot; process was monitoring the other, and a link &quot;from&quot; a process tells you that the other process was monitoring the current one.</source>
          <target state="translated">これにリンクされているプロセスのプロセスID。ポートを含むこともできます。プロセス監視が使用されている場合、このフィールドは監視がどの方向で有効であるかも示します。つまり、あるプロセスへの &quot;to &quot;リンクは、&quot;現在の &quot;プロセスが他のプロセスを監視していることを示し、あるプロセスからの &quot;from &quot;リンクは、他のプロセスが現在のプロセスを監視していることを示します。</target>
        </trans-unit>
        <trans-unit id="5c2a6df2a2c67e8993bc6d87fb8bd6f06f3a923e" translate="yes" xml:space="preserve">
          <source>Process Implementation Functions</source>
          <target state="translated">プロセス実装機能</target>
        </trans-unit>
        <trans-unit id="e4e4bc359a8d952b99a64e9bb76a5b77309cbdfc" translate="yes" xml:space="preserve">
          <source>Process Menu</source>
          <target state="translated">プロセスメニュー</target>
        </trans-unit>
        <trans-unit id="d7a28bb3334285a1e0ac0387ca14af38afa1bb3b" translate="yes" xml:space="preserve">
          <source>Process a received message</source>
          <target state="translated">受信したメッセージを処理する</target>
        </trans-unit>
        <trans-unit id="8bb6fc6f7e7a2280b8063de0d5700d2bb0cb9663" translate="yes" xml:space="preserve">
          <source>Process filters</source>
          <target state="translated">プロセスフィルター</target>
        </trans-unit>
        <trans-unit id="bbbfe7098744c6470df556a76ad34523d9620833" translate="yes" xml:space="preserve">
          <source>Process groups can be organised into multiple scopes. Scopes are completely independent of each other. A process may join any number of groups in any number of scopes. Scopes are designed to decouple single mesh into a set of overlay networks, reducing amount of traffic required to propagate group membership information. Default scope &lt;code&gt;pg&lt;/code&gt; is started automatically when &lt;code&gt;kernel(6)&lt;/code&gt; is configured to do so.</source>
          <target state="translated">プロセスグループは、複数のスコープに編成できます。スコープは互いに完全に独立しています。プロセスは、任意の数のスコープ内の任意の数のグループに参加できます。スコープは、単一のメッシュを一連のオーバーレイネットワークに分離するように設計されており、グループメンバーシップ情報を伝達するために必要なトラフィックの量を削減します。 &lt;code&gt;kernel(6)&lt;/code&gt; がそうするように構成されている場合、デフォルトのスコープ &lt;code&gt;pg&lt;/code&gt; は自動的に開始されます。</target>
        </trans-unit>
        <trans-unit id="6ed08f16461a6d037cb208e9913ab037737a77bd" translate="yes" xml:space="preserve">
          <source>Process identifier of the &lt;code&gt;Kernel&lt;/code&gt; process. That is, the process that called either &lt;code&gt;&lt;a href=&quot;#setup&quot;&gt;setup/5&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#accept_connection&quot;&gt;accept_connection/5&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Kernel&lt;/code&gt; プロセスのプロセス識別子。つまり、 &lt;code&gt;&lt;a href=&quot;#setup&quot;&gt;setup/5&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#accept_connection&quot;&gt;accept_connection/5&lt;/a&gt;&lt;/code&gt; を呼び出したプロセスです。</target>
        </trans-unit>
        <trans-unit id="b2a5dd3b972f257d7fbc08cb7fd3527f448acb92" translate="yes" xml:space="preserve">
          <source>Process identifier of the group leader of the newly created process.</source>
          <target state="translated">新規作成したプロセスのグループリーダのプロセス識別子。</target>
        </trans-unit>
        <trans-unit id="5350a81bb4d7a6e885720414c324c78fdac18460" translate="yes" xml:space="preserve">
          <source>Process identifier of the process created by the &lt;code&gt;&lt;a href=&quot;#accept&quot;&gt;accept/1&lt;/a&gt;&lt;/code&gt; callback.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#accept&quot;&gt;accept/1&lt;/a&gt;&lt;/code&gt; コールバックによって作成されたプロセスのプロセス識別子。</target>
        </trans-unit>
        <trans-unit id="423e976c638ce3015784a0556ff5f2c502e53ea5" translate="yes" xml:space="preserve">
          <source>Process identifier of the process making the request. That is, the parent process to be.</source>
          <target state="translated">リクエストを行うプロセスのプロセス識別子。つまり、対象となる親プロセス。</target>
        </trans-unit>
        <trans-unit id="04402a10f6411016e19cf84d1d0c3b48a617b2c7" translate="yes" xml:space="preserve">
          <source>Process identifier of the process making the spawn request.</source>
          <target state="translated">スポーン要求を行ったプロセスのプロセス識別子。</target>
        </trans-unit>
        <trans-unit id="ec8568d5958f46e915bd83080ff98e0e79a75222" translate="yes" xml:space="preserve">
          <source>Process is monitored by pid.</source>
          <target state="translated">プロセスはpidで監視しています。</target>
        </trans-unit>
        <trans-unit id="d75f836c4b41dbd50f08ee91d634c102832d9687" translate="yes" xml:space="preserve">
          <source>Process max heap size configuration. For more info see &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">最大ヒープサイズ構成を処理します。詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="2ea03c83c0bea6d342541a89cb5e2488edbcde72" translate="yes" xml:space="preserve">
          <source>Process message queue data configuration. For more info see &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">メッセージキューのデータ構成を処理します。詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="6f880ba7aefb600d7833f0168b36c50728469e28" translate="yes" xml:space="preserve">
          <source>Process metadata is set and updated with &lt;code&gt;&lt;a href=&quot;logger#set_process_metadata-1&quot;&gt; logger:set_process_metadata/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger#update_process_metadata-1&quot;&gt; logger:update_process_metadata/1&lt;/a&gt;&lt;/code&gt;, respectively. This metadata applies to the process on which these calls are made, and Logger adds the metadata to all log events issued on that process.</source>
          <target state="translated">プロセスメタデータは、それぞれ &lt;code&gt;&lt;a href=&quot;logger#set_process_metadata-1&quot;&gt; logger:set_process_metadata/1&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;logger#update_process_metadata-1&quot;&gt; logger:update_process_metadata/1&lt;/a&gt;&lt;/code&gt; で設定および更新されます。このメタデータは、これらの呼び出しが行われるプロセスに適用され、Loggerはそのプロセスで発行されたすべてのログイベントにメタデータを追加します。</target>
        </trans-unit>
        <trans-unit id="beca56c90caa14898b2c241f5874170cc90c2a9c" translate="yes" xml:space="preserve">
          <source>Process metadata is set and updated with &lt;code&gt;&lt;a href=&quot;logger#set_process_metadata-1&quot;&gt;logger:set_process_metadata/1&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;logger#update_process_metadata-1&quot;&gt;logger:update_process metadata/1&lt;/a&gt;&lt;/code&gt;, respectively. This metadata applies to the process on which these calls are made, and Logger adds the metadata to all log events issued on that process.</source>
          <target state="translated">プロセスのメタデータは、それぞれ &lt;code&gt;&lt;a href=&quot;logger#set_process_metadata-1&quot;&gt;logger:set_process_metadata/1&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;logger#update_process_metadata-1&quot;&gt;logger:update_process metadata/1&lt;/a&gt;&lt;/code&gt; で設定および更新されます。このメタデータはこれらの呼び出しが行われるプロセスに適用され、Loggerはそのプロセスで発行されたすべてのログイベントにメタデータを追加します。</target>
        </trans-unit>
        <trans-unit id="540946d7cea619b7ce232c97b46a1860d2e4a41b" translate="yes" xml:space="preserve">
          <source>Process priority level. For more info see &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">プロセスの優先度レベル。詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="67e5f2d87d665dc7e3929e88907eef304eb59bc0" translate="yes" xml:space="preserve">
          <source>Process the action requests and either return an error_descr() indicating some fatal error or a list of action replies (wildcarded or not).</source>
          <target state="translated">アクションリクエストを処理して、致命的なエラーを示す error_descr()か、アクションリプライのリスト (ワイルドカード化されているかどうか)を返します。</target>
        </trans-unit>
        <trans-unit id="ed7308bb59f2876220e45299939d241199595df2" translate="yes" xml:space="preserve">
          <source>Processes</source>
          <target state="translated">Processes</target>
        </trans-unit>
        <trans-unit id="6055fe67fe73591ecd6add960eb22a68e35be849" translate="yes" xml:space="preserve">
          <source>Processes an incoming message. Performs authentication and decryption as necessary. The return values should be passed the manager server.</source>
          <target state="translated">受信メッセージを処理します。必要に応じて認証と復号を行う。戻り値はマネージャサーバに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="288b10741351f050abd56115edaeab3cbc0b134b" translate="yes" xml:space="preserve">
          <source>Processes an incoming packet. Performs authentication and decryption as necessary. The return values should be passed to the agent.</source>
          <target state="translated">受信パケットを処理します。必要に応じて認証と復号を実行します。戻り値はエージェントに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="ed98243f088a1f790e5261686fb35da9e9e2e36b" translate="yes" xml:space="preserve">
          <source>Processes and ports added by process/port identifiers add the nodes these processes/ports reside on in the node list. More nodes can be added by clicking button &lt;strong&gt;Add Nodes&lt;/strong&gt;, or by right-clicking in the &lt;strong&gt;Nodes&lt;/strong&gt; list and select &lt;strong&gt;Add Nodes&lt;/strong&gt;. To remove nodes, select them, then right-click and choose &lt;strong&gt;Remove nodes&lt;/strong&gt;.</source>
          <target state="translated">プロセス/ポート識別子によって追加されたプロセスとポートは、これらのプロセス/ポートが常駐するノードをノードリストに追加します。[ &lt;strong&gt;ノードの追加&lt;/strong&gt; ]ボタン&lt;strong&gt;を&lt;/strong&gt;クリックするか、[ &lt;strong&gt;ノード]&lt;/strong&gt;リストを右クリックして[ &lt;strong&gt;ノードの追加&lt;/strong&gt; ] を選択すると、&lt;strong&gt;ノードを&lt;/strong&gt;さらに&lt;strong&gt;追加&lt;/strong&gt;できます。ノードを削除するには、ノードを選択し、右クリックして[ &lt;strong&gt;ノードの削除&lt;/strong&gt; ]を選択します。</target>
        </trans-unit>
        <trans-unit id="bf438e45a34ce6e54b5666dee9827f7d9908c9aa" translate="yes" xml:space="preserve">
          <source>Processes are added from the &lt;strong&gt;Applications&lt;/strong&gt; or &lt;strong&gt;Processes&lt;/strong&gt; tabs. Ports are added from the &lt;strong&gt;Ports&lt;/strong&gt; tab. A special &lt;strong&gt;new&lt;/strong&gt; identifier, meaning all processes, or ports, started after trace start, can be added with buttons &lt;strong&gt;Add 'new' Processes&lt;/strong&gt; and &lt;strong&gt;Add 'new' Ports&lt;/strong&gt;, respecively.</source>
          <target state="translated">プロセスは、「&lt;strong&gt;アプリケーション」&lt;/strong&gt;または「&lt;strong&gt;プロセス」&lt;/strong&gt;タブから追加されます。ポートは[ &lt;strong&gt;ポート&lt;/strong&gt; ]タブから追加されます。トレースの開始後に開始されたすべてのプロセスまたはポートを意味する特別な&lt;strong&gt;新しい&lt;/strong&gt;識別子は、&lt;strong&gt;「新しいプロセスの追加」&lt;/strong&gt;ボタンと&lt;strong&gt;「新しい」ポートの追加&lt;/strong&gt;ボタンでそれぞれ&lt;strong&gt;追加&lt;/strong&gt;できます。</target>
        </trans-unit>
        <trans-unit id="be549e5919a2d84debbcdab9c71aa73639ddafc7" translate="yes" xml:space="preserve">
          <source>Processes can be specified as registered names, globally registered names, or process identifiers. Ports can be specified as registered names or port identifiers. If a registered name is specified, the flags are set on processes/ports with this name on all active nodes.</source>
          <target state="translated">プロセスは、登録名、グローバル登録名、またはプロセス識別子として指定できます。ポートは、登録名またはポート識別子として指定できます。登録名が指定された場合、この名前のプロセス/ポートには、すべてのアクティブなノードでフラグが設定されます。</target>
        </trans-unit>
        <trans-unit id="c93cc0cb1c7c1cf0a914f4b84e40d8422afe1f41" translate="yes" xml:space="preserve">
          <source>Processes can monitor other processes and detect process terminations, see &lt;code&gt;&lt;a href=&quot;processes#errors&quot;&gt;Processes&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスは他のプロセスを監視し、プロセスの終了を検出できます。 &lt;code&gt;&lt;a href=&quot;processes#errors&quot;&gt;Processes&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="630a26a9de10b21d483dfee70c4d12d378a250c0" translate="yes" xml:space="preserve">
          <source>Processes communicate by sending and receiving messages. Messages are sent by using the &lt;code&gt;&lt;a href=&quot;expressions#send&quot;&gt;send operator !&lt;/a&gt;&lt;/code&gt; and received by calling &lt;code&gt;&lt;a href=&quot;expressions#receive&quot;&gt;receive&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスはメッセージを送受信することによって通信します。メッセージは、 &lt;code&gt;&lt;a href=&quot;expressions#send&quot;&gt;send operator !&lt;/a&gt;&lt;/code&gt; を使用して送信されます。そして、 &lt;code&gt;&lt;a href=&quot;expressions#receive&quot;&gt;receive&lt;/a&gt;&lt;/code&gt; を呼び出して受信します。</target>
        </trans-unit>
        <trans-unit id="d178bde37cb4db43efd1bc3bc63a9067eff3bf67" translate="yes" xml:space="preserve">
          <source>Processes in &lt;code&gt;ch_app&lt;/code&gt; for which code have not been updated, for example, the supervisor, are still evaluating code from &lt;code&gt;ch_app-1&lt;/code&gt;.</source>
          <target state="translated">コードが更新されていない &lt;code&gt;ch_app&lt;/code&gt; 内のプロセス（スーパーバイザーなど）は、まだ &lt;code&gt;ch_app-1&lt;/code&gt; からのコードを評価しています。</target>
        </trans-unit>
        <trans-unit id="033f59a44cf3d7e0ad2fb2a6c9d6d37906dc4f55" translate="yes" xml:space="preserve">
          <source>Processes sending command data to the port are suspended if either the port is busy or if the port message queue is busy. Suspended processes are resumed when neither the port or the port message queue is busy.</source>
          <target state="translated">ポートがビジー状態またはポートメッセージキューがビジー状態の場合、ポートにコマンドデータを送信するプロセスは中断されます。サスペンドされたプロセスは、ポートまたはポートメッセージキューがビジー状態でない場合に再開されます。</target>
        </trans-unit>
        <trans-unit id="7813ce8e07b59a64bbf71e0e1c1f12985cd75cf4" translate="yes" xml:space="preserve">
          <source>Processes sending command data to the port are suspended if either the port or the port message queue is busy. Suspended processes are resumed when neither the port or the port message queue is busy. Command data is in this context data passed to the port using either &lt;code&gt;Port ! {Owner, {command, Data}}&lt;/code&gt; or &lt;code&gt;port_command/[2,3]&lt;/code&gt;.</source>
          <target state="translated">ポートまたはポートメッセージキューがビジーの場合、コマンドデータをポートに送信するプロセスは一時停止されます。中断されたプロセスは、ポートまたはポートメッセージキューのどちらもビジー状態のときに再開されます。コマンドデータは、このコンテキストでは、いずれかのポートを使用してポートに渡されるデータ &lt;code&gt;Port ! {Owner, {command, Data}}&lt;/code&gt; または &lt;code&gt;port_command/[2,3]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a29be095a2ff95859b3cad24b61604a71c86c0b" translate="yes" xml:space="preserve">
          <source>Processes started with functions &lt;code&gt;proc_lib:spawn&lt;/code&gt; or &lt;code&gt;proc_lib:spawn_link&lt;/code&gt; are wrapped within a &lt;code&gt;catch&lt;/code&gt;. A crash report is issued when such a process terminates with an unexpected reason, which is any reason other than &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;shutdown&lt;/code&gt;, or &lt;code&gt;{shutdown,Term}&lt;/code&gt;. Processes using behaviors &lt;code&gt;gen_server&lt;/code&gt;, &lt;code&gt;gen_fsm&lt;/code&gt; or &lt;code&gt;gen_statem&lt;/code&gt; are examples of such processes. A crash report contains the following items:</source>
          <target state="translated">関数 &lt;code&gt;proc_lib:spawn&lt;/code&gt; または &lt;code&gt;proc_lib:spawn_link&lt;/code&gt; で開始されたプロセスは、 &lt;code&gt;catch&lt;/code&gt; 内にラップされます。クラッシュレポートは、そのようなプロセスが予期しない理由で終了したときに発行されます。これは、 &lt;code&gt;normal&lt;/code&gt; 、 &lt;code&gt;shutdown&lt;/code&gt; 、または &lt;code&gt;{shutdown,Term}&lt;/code&gt; 以外の理由です。ビヘイビア &lt;code&gt;gen_server&lt;/code&gt; 、 &lt;code&gt;gen_fsm&lt;/code&gt; または &lt;code&gt;gen_statem&lt;/code&gt; を使用するプロセスは、そのようなプロセスの例です。クラッシュレポートには次の項目が含まれます。</target>
        </trans-unit>
        <trans-unit id="7a39a6bcdcfd7777bfaedcdb0b7cb9d27d3872a4" translate="yes" xml:space="preserve">
          <source>Processes that are not implemented as one of the standard behaviors must still understand system messages. The following three messages must be understood:</source>
          <target state="translated">標準的な動作の一つとして実装されていないプロセスでも、システムメッセージを理解しなければなりません。以下の3つのメッセージを理解しなければならない。</target>
        </trans-unit>
        <trans-unit id="258d2694c3db94bd2e39f0eb743d67f6aa439cd6" translate="yes" xml:space="preserve">
          <source>Processes, ports and ets tables can then be inspecting using their respective info functions, i.e. &lt;code&gt;erlang:process_info/2 &lt;/code&gt;, &lt;code&gt;erlang:port_info/2 &lt;/code&gt; and &lt;code&gt;ets:info/1&lt;/code&gt;.</source>
          <target state="translated">プロセス、ポート、およびetsテーブルは、それぞれの情報関数、つまり &lt;code&gt;erlang:process_info/2 &lt;/code&gt; 、 &lt;code&gt;erlang:port_info/2 &lt;/code&gt; 、および &lt;code&gt;ets:info/1&lt;/code&gt; を使用して検査できます。</target>
        </trans-unit>
        <trans-unit id="58c7efb2fc2ee91313efcb0b51ba3d6222f1b4e4" translate="yes" xml:space="preserve">
          <source>Processes, ports and ets tables can then be inspecting using their respective info functions, i.e. &lt;code&gt;erlang:process_info/2&lt;/code&gt;, &lt;code&gt;erlang:port_info/2&lt;/code&gt; and &lt;code&gt;ets:info/1&lt;/code&gt;.</source>
          <target state="translated">プロセス、ポート、およびetsテーブルは、それぞれのinfo関数、つまり &lt;code&gt;erlang:process_info/2&lt;/code&gt; 、 &lt;code&gt;erlang:port_info/2&lt;/code&gt; および &lt;code&gt;ets:info/1&lt;/code&gt; を使用して検査できます。</target>
        </trans-unit>
        <trans-unit id="e6017176610426ad0695826f94e970fac5ae785f" translate="yes" xml:space="preserve">
          <source>Processing Local Requests</source>
          <target state="translated">ローカルリクエストの処理</target>
        </trans-unit>
        <trans-unit id="2f93aa73375c48e5ac1052bbdea13b31c4c62dea" translate="yes" xml:space="preserve">
          <source>Processing Received Answers</source>
          <target state="translated">受信した回答の処理</target>
        </trans-unit>
        <trans-unit id="47c0c8f7f7c694d8170efc2ece7ee9a4d20e521e" translate="yes" xml:space="preserve">
          <source>Processing options such as case-independence are fixed when a subpattern is defined, so if it is used as a subroutine, such options cannot be changed for different calls. For example, the following pattern matches &quot;abcabc&quot; but not &quot;abcABC&quot;, as the change of processing option does not affect the called subpattern:</source>
          <target state="translated">大文字小文字の区別などの処理オプションは、サブパターンが定義された時点で固定されているため、サブルーチンとして使用された場合、呼び出しのたびにオプションを変更することはできません。例えば、以下のパターンは「abcabc」と一致しますが、処理オプションの変更は呼び出されたサブパターンには影響しないため、「abcABC」とは一致しません。</target>
        </trans-unit>
        <trans-unit id="e8cd404c23dee55e608769bb45175244d3e786e5" translate="yes" xml:space="preserve">
          <source>Produces &lt;code&gt;logger events&lt;/code&gt; on logger &lt;code&gt;level error&lt;/code&gt; under the hierarchical logger &lt;code&gt;domain:&lt;/code&gt;&lt;code&gt;[otp, inets, httpd, ServerID, error]&lt;/code&gt; The built in logger formatting function produces log entries from the error reports:</source>
          <target state="translated">生成 &lt;code&gt;logger events&lt;/code&gt; ロガー上の &lt;code&gt;level error&lt;/code&gt; 階層的ロガー下 &lt;code&gt;domain:&lt;/code&gt; &lt;code&gt;[otp, inets, httpd, ServerID, error]&lt;/code&gt; ロガー機能をフォーマットするに建てられたエラーレポートからログエントリを生成します。</target>
        </trans-unit>
        <trans-unit id="0eab01ffe9a07f631f008bdf0c75bf332d75ff92" translate="yes" xml:space="preserve">
          <source>Produces a Makefile rule to track header dependencies. The rule is sent to &lt;code&gt;stdout&lt;/code&gt;. No object file is produced.</source>
          <target state="translated">ヘッダーの依存関係を追跡するMakefileルールを生成します。ルールは &lt;code&gt;stdout&lt;/code&gt; に送信されます。オブジェクトファイルは作成されません。</target>
        </trans-unit>
        <trans-unit id="0b0b65fd07934b92a1f3f3b16fdae0415377d8f3" translate="yes" xml:space="preserve">
          <source>Produces a Makefile rule to track headers dependencies. No object file is produced.</source>
          <target state="translated">ヘッダの依存関係を追跡するための Makefile ルールを生成します。オブジェクトファイルは生成されません。</target>
        </trans-unit>
        <trans-unit id="522655e258c4e569c30e0510cdca6d0699bc8809" translate="yes" xml:space="preserve">
          <source>Produces a list of miscellaneous information. Intended for debugging. If no profile is specified, the default profile is used.</source>
          <target state="translated">雑多な情報のリストを生成します。デバッグ用です。プロファイルが指定されていない場合は、デフォルトのプロファイルが使用されます。</target>
        </trans-unit>
        <trans-unit id="17b15b2832a09a04ae3469c8eba4b0f7717aeed3" translate="yes" xml:space="preserve">
          <source>Produces a list of the entire cookie database. Intended for debugging/testing purposes. If no profile is specified, the default profile is used.</source>
          <target state="translated">クッキーデータベース全体のリストを生成します。デバッグ/テスト目的で使用することを意図しています。プロファイルが指定されていない場合は、デフォルトのプロファイルが使用されます。</target>
        </trans-unit>
        <trans-unit id="aa4a70cdd8befb25aae49184a69129ba10dc3026" translate="yes" xml:space="preserve">
          <source>Produces a listing of the assembler code in the file &lt;code&gt;&amp;lt;File&amp;gt;.S&lt;/code&gt;. No object file is produced.</source>
          <target state="translated">ファイル &lt;code&gt;&amp;lt;File&amp;gt;.S&lt;/code&gt; にアセンブラコードのリストを作成します。オブジェクトファイルは作成されません。</target>
        </trans-unit>
        <trans-unit id="14a6e3657dbd240095b72afb45cd733b01f3e525" translate="yes" xml:space="preserve">
          <source>Produces a listing of the code, after all source code transformations have been performed, in the file &lt;code&gt;&amp;lt;File&amp;gt;.E&lt;/code&gt;. No object file is produced.</source>
          <target state="translated">すべてのソースコード変換が実行された後、ファイル &lt;code&gt;&amp;lt;File&amp;gt;.E&lt;/code&gt; にコードのリストを生成します。オブジェクトファイルは作成されません。</target>
        </trans-unit>
        <trans-unit id="01e05890546d0a6ddd75cdab592794da9dd67dbc" translate="yes" xml:space="preserve">
          <source>Produces a listing of the parsed code, after preprocessing and parse transforms, in the file &lt;code&gt;&amp;lt;File&amp;gt;.P&lt;/code&gt;. No object file is produced.</source>
          <target state="translated">ファイル &lt;code&gt;&amp;lt;File&amp;gt;.P&lt;/code&gt; に、前処理と解析の変換後の解析済みコードのリストを生成します。オブジェクトファイルは作成されません。</target>
        </trans-unit>
        <trans-unit id="b42942b44b3250eb3b2271073a1658bcb5331121" translate="yes" xml:space="preserve">
          <source>Produces a new map &lt;code&gt;Map&lt;/code&gt; by calling function &lt;code&gt;fun F(K, V1)&lt;/code&gt; for every &lt;code&gt;K&lt;/code&gt; to value &lt;code&gt;V1&lt;/code&gt; association in &lt;code&gt;MapOrIter&lt;/code&gt; in any order. Function &lt;code&gt;fun F/2&lt;/code&gt; must return value &lt;code&gt;V2&lt;/code&gt; to be associated with key &lt;code&gt;K&lt;/code&gt; for the new map &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MapOrIter&lt;/code&gt; のすべての &lt;code&gt;K&lt;/code&gt; から値 &lt;code&gt;V1&lt;/code&gt; への関連付けの関数 &lt;code&gt;fun F(K, V1)&lt;/code&gt; を任意の順序で呼び出して、新しいマップ &lt;code&gt;Map&lt;/code&gt; を生成します。関数 &lt;code&gt;fun F/2&lt;/code&gt; は、新しいマップ &lt;code&gt;Map&lt;/code&gt; のキー &lt;code&gt;K&lt;/code&gt; に関連付けられる値 &lt;code&gt;V2&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="b65baebfeee97894cc99c3e97f532ea2844c3dd7" translate="yes" xml:space="preserve">
          <source>Produces a new map &lt;code&gt;Map&lt;/code&gt; by calling function &lt;code&gt;fun F(Key, Value1)&lt;/code&gt; for every &lt;code&gt;Key&lt;/code&gt; to value &lt;code&gt;Value1&lt;/code&gt; association in &lt;code&gt;MapOrIter&lt;/code&gt; in any order. Function &lt;code&gt;fun Fun/2&lt;/code&gt; must return value &lt;code&gt;Value2&lt;/code&gt; to be associated with key &lt;code&gt;Key&lt;/code&gt; for the new map &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fun F(Key, Value1)&lt;/code&gt; すべての &lt;code&gt;Key&lt;/code&gt; と値の &lt;code&gt;Value1&lt;/code&gt; の関連付けに対して、関数fun F（Key、Value1）を任意の順序で呼び出すことにより、新しいマップ &lt;code&gt;Map&lt;/code&gt; を &lt;code&gt;MapOrIter&lt;/code&gt; します。関数 &lt;code&gt;Value2&lt;/code&gt; &lt;code&gt;fun Fun/2&lt;/code&gt; は、新しいマップ &lt;code&gt;Map&lt;/code&gt; のキー &lt;code&gt;Key&lt;/code&gt; に関連付ける値Value2を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="734f2970d4a5791f19c5ec99de733cebe7c5db24" translate="yes" xml:space="preserve">
          <source>Produces a slightly processed dump of the session database. It is intended for debugging. If no profile is specified, the default profile is used.</source>
          <target state="translated">セッションデータベースのわずかに処理されたダンプを生成します。これはデバッグ用です。プロファイルが指定されていない場合は、デフォルトのプロファイルが使用されます。</target>
        </trans-unit>
        <trans-unit id="f3e2b5bef8d3aea29dc3d87dc03c8bd706ff3c63" translate="yes" xml:space="preserve">
          <source>Produces an Erlang binary object from a buffer containing a sequence of bytes.</source>
          <target state="translated">バイト列を含むバッファからErlangバイナリオブジェクトを生成します。</target>
        </trans-unit>
        <trans-unit id="28dc5d49200b0d0db7991c1bd65981ee7a79b5b9" translate="yes" xml:space="preserve">
          <source>Product identification, or similar.</source>
          <target state="translated">製品の識別、またはそれに類するもの。</target>
        </trans-unit>
        <trans-unit id="47c4b8b7bf496f53b2cc4542ca4954138de2040e" translate="yes" xml:space="preserve">
          <source>Product-Name AVP</source>
          <target state="translated">製品名 AVP</target>
        </trans-unit>
        <trans-unit id="17df105acacb67dbb629858e9cd9d8d447c45b58" translate="yes" xml:space="preserve">
          <source>Profile :: atom()) -&amp;gt;</source>
          <target state="translated">プロファイル::アトム（））-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0026a969a9cb473a3dd25bc732d4ff9709ac80a8" translate="yes" xml:space="preserve">
          <source>Profile :: term()) -&amp;gt;</source>
          <target state="translated">プロフィール:: term（））-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="57c6e422edb8ce7e828dbfdc0ca3e7e40b6fc1e1" translate="yes" xml:space="preserve">
          <source>Profile process locks, equal to adding &lt;code&gt;process&lt;/code&gt; to the lock category mask; see &lt;code&gt;lcnt:rt_mask/2&lt;/code&gt;</source>
          <target state="translated">プロファイルプロセスロック。 &lt;code&gt;process&lt;/code&gt; をロックカテゴリマスクに追加することと同じです。 &lt;code&gt;lcnt:rt_mask/2&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="f72795f752c26fa8b5758727320096204ecec91e" translate="yes" xml:space="preserve">
          <source>Profiling is done in the following steps:</source>
          <target state="translated">プロファイリングは以下の手順で行います。</target>
        </trans-unit>
        <trans-unit id="630e9fa5225f76b674631196640d8884476f77f0" translate="yes" xml:space="preserve">
          <source>Profiling is essentially done in 3 steps:</source>
          <target state="translated">プロファイリングは基本的に3つのステップで行われます。</target>
        </trans-unit>
        <trans-unit id="129873d7917621f62579cca8da507adfd58f5037" translate="yes" xml:space="preserve">
          <source>Profiling; the trace file is read and raw profile data is collected into an internal RAM storage on the node. During this step the trace data may be dumped in text format to file or console.</source>
          <target state="translated">プロファイリング:トレースファイルが読み込まれ、生のプロファイルデータがノード上の内部RAMストレージに収集されます。このステップでは、トレースデータはテキスト形式でファイルまたはコンソールにダンプされます。</target>
        </trans-unit>
        <trans-unit id="864662422fc6799b55caf37fed8419aea855ecf3" translate="yes" xml:space="preserve">
          <source>Profiling; the trace file is read, the execution call stack is simulated, and raw profile data is calculated from the simulated call stack and the trace timestamps. The profile data is stored in the &lt;code&gt;fprof&lt;/code&gt; server state. During this step the trace data may be dumped in text format to file or console.</source>
          <target state="translated">プロファイリング; トレースファイルが読み取られ、実行呼び出しスタックがシミュレートされ、シミュレートされた呼び出しスタックとトレースタイムスタンプから生のプロファイルデータが計算されます。プロファイルデータは、 &lt;code&gt;fprof&lt;/code&gt; サーバー状態で保存されます。このステップ中に、トレースデータがテキスト形式でファイルまたはコンソールにダンプされます。</target>
        </trans-unit>
        <trans-unit id="9d68007b0763cb230f9034ec96f52b39d03ad630" translate="yes" xml:space="preserve">
          <source>Program</source>
          <target state="translated">Program</target>
        </trans-unit>
        <trans-unit id="2866921ef7dbac7fe5d0f0f9c3f43ccc11ffda6a" translate="yes" xml:space="preserve">
          <source>Program Explained</source>
          <target state="translated">プログラムの説明</target>
        </trans-unit>
        <trans-unit id="be14140f572829d13e013899b88b1a29c94a894b" translate="yes" xml:space="preserve">
          <source>Program used for starting Common Test from the OS command line.</source>
          <target state="translated">OSのコマンドラインから共通テストを起動するためのプログラムです。</target>
        </trans-unit>
        <trans-unit id="04fc4ca4a8116882232b1856689a04eb18a1fd86" translate="yes" xml:space="preserve">
          <source>Programmers are strongly advised not to engage in parse transformations. No support is offered for problems encountered.</source>
          <target state="translated">プログラマは、パース変換を行わないことを強くお勧めします。問題が発生した場合のサポートは提供されません。</target>
        </trans-unit>
        <trans-unit id="cd20cc773cac79796c578e4d9775b5144b70f227" translate="yes" xml:space="preserve">
          <source>Programming Erlang: Software for a Concurrent World (2007), Pragmatic Bookshelf, ISBN13: 9781934356005.</source>
          <target state="translated">プログラミングErlang.並行世界のためのソフトウェア (2007),Pragmatic Bookshelf,ISBN13:9781934356005.</target>
        </trans-unit>
        <trans-unit id="04bef1b7e7ac277d38fb7b2086faa2a0ce21e478" translate="yes" xml:space="preserve">
          <source>Programming Erlang: Software for a Concurrent World by Joe Armstrong; ISBN: 978-1-93435-600-5</source>
          <target state="translated">プログラミング Erlang.並行世界のためのソフトウェア Joe Armstrong著;ISBN:978-1-93435-600-5</target>
        </trans-unit>
        <trans-unit id="4fff5c0832402c080338f74960f55c82c6dba845" translate="yes" xml:space="preserve">
          <source>Programming concurrent Erlang systems is the subject of a separate book. However, it is worthwhile to draw attention to the following features, which permit concurrent processes to exist in a &lt;code&gt;Mnesia&lt;/code&gt; system:</source>
          <target state="translated">並行Erlangシステムのプログラミングは、別の本の主題です。ただし、 &lt;code&gt;Mnesia&lt;/code&gt; システムに同時プロセスが存在できるようにする次の機能に注意を払うことは価値があります。</target>
        </trans-unit>
        <trans-unit id="a7ee4483c6941542c37358b60ce74e365d1f78dd" translate="yes" xml:space="preserve">
          <source>Programs should always operate on a normalized form and compare canonical-equivalent Unicode characters as equal. All characters should thus be normalized to one form once on the system borders. One of the following functions can convert characters to their normalized forms &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt; characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt; characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_list-1&quot;&gt; characters_to_nfd_list/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_binary-1&quot;&gt; characters_to_nfd_binary/1&lt;/a&gt;&lt;/code&gt;. For general text &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt; characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt; characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt; is preferred, and for identifiers one of the compatibility normalization functions, such as &lt;code&gt;&lt;a href=&quot;#characters_to_nfkc_list-1&quot;&gt; characters_to_nfkc_list/1&lt;/a&gt;&lt;/code&gt;, is preferred for security reasons. The normalization functions where introduced in OTP 20. Additional information on normalization can be found in the &lt;code&gt;&lt;a href=&quot;http://unicode.org/faq/normalization.html&quot;&gt;Unicode FAQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プログラムは常に正規化された形式で動作し、正規の同等のUnicode文字を等しいものとして比較する必要があります。したがって、すべての文字は、システムの境界で1回1つの形式に正規化する必要があります。次の関数のいずれかで、文字を正規化された形式 &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt; characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt; characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_list-1&quot;&gt; characters_to_nfd_list/1&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_binary-1&quot;&gt; characters_to_nfd_binary/1&lt;/a&gt;&lt;/code&gt; に変換できます。一般的なテキストの場合、 &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt; characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt; characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt; が推奨され、識別子の場合、 &lt;code&gt;&lt;a href=&quot;#characters_to_nfkc_list-1&quot;&gt; characters_to_nfkc_list/1&lt;/a&gt;&lt;/code&gt; などの互換性正規化関数の1つが推奨されます。、セキュリティ上の理由から推奨されます。正規化機能はOTP20で導入されました。正規化の詳細については、 &lt;code&gt;&lt;a href=&quot;http://unicode.org/faq/normalization.html&quot;&gt;Unicode FAQ&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f766991f1e78a66d69e7e9b58e7feee18bce8c08" translate="yes" xml:space="preserve">
          <source>Programs should always operate on a normalized form and compare canonical-equivalent Unicode characters as equal. All characters should thus be normalized to one form once on the system borders. One of the following functions can convert characters to their normalized forms &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt;characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt;characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_list-1&quot;&gt;characters_to_nfd_list/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_binary-1&quot;&gt;characters_to_nfd_binary/1&lt;/a&gt;&lt;/code&gt;. For general text &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt;characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt;characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt; is preferred, and for identifiers one of the compatibility normalization functions, such as &lt;code&gt;&lt;a href=&quot;#characters_to_nfkc_list-1&quot;&gt;characters_to_nfkc_list/1&lt;/a&gt;&lt;/code&gt;, is preferred for security reasons. The normalization functions where introduced in OTP 20. Additional information on normalization can be found in the &lt;code&gt;&lt;a href=&quot;http://unicode.org/faq/normalization.html&quot;&gt;Unicode FAQ&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プログラムは常に正規化された形式で動作し、正規に等しいUnicode文字を等しいと比較する必要があります。したがって、すべての文字は、システムの境界で一度1つのフォームに正規化する必要があります。次の関数のいずれかは、文字を正規化された形式 &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt;characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt;characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_list-1&quot;&gt;characters_to_nfd_list/1&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#characters_to_nfd_binary-1&quot;&gt;characters_to_nfd_binary/1&lt;/a&gt;&lt;/code&gt; に変換できます。一般的なテキストの場合は、 &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_list-1&quot;&gt;characters_to_nfc_list/1&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#characters_to_nfc_binary-1&quot;&gt;characters_to_nfc_binary/1&lt;/a&gt;&lt;/code&gt; が推奨され、識別子の場合は、 &lt;code&gt;&lt;a href=&quot;#characters_to_nfkc_list-1&quot;&gt;characters_to_nfkc_list/1&lt;/a&gt;&lt;/code&gt; などの互換性正規化関数の1つ、セキュリティ上の理由から推奨されます。OTP 20で導入された正規化関数。正規化に関する追加情報は、 &lt;code&gt;&lt;a href=&quot;http://unicode.org/faq/normalization.html&quot;&gt;Unicode FAQ&lt;/a&gt;&lt;/code&gt; にあります。</target>
        </trans-unit>
        <trans-unit id="fc562a9bcac4fb874aa74077af2a891fe251b3ed" translate="yes" xml:space="preserve">
          <source>Programs that process plain text or binary data files.</source>
          <target state="translated">プレーンテキストやバイナリデータファイルを処理するプログラム。</target>
        </trans-unit>
        <trans-unit id="7c71281f9dbe691f92bb15faa53cb0c49a91d43a" translate="yes" xml:space="preserve">
          <source>Progress = &lt;code&gt;ignore | {CBModule, CBFunction, InitProgress}&lt;/code&gt;</source>
          <target state="translated">進行状況= &lt;code&gt;ignore | {CBModule, CBFunction, InitProgress}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="519ffd1265424ff9151c74fa5631e9848160fa7a" translate="yes" xml:space="preserve">
          <source>Progress report</source>
          <target state="translated">進捗報告</target>
        </trans-unit>
        <trans-unit id="a3f10a152d854770b6ab1de6f50d8a4da946dbb4" translate="yes" xml:space="preserve">
          <source>Progress reports are issued as &lt;code&gt;info&lt;/code&gt; level log events, and since the default primary log level is &lt;code&gt;notice&lt;/code&gt;, these are not logged by default. To enable printing of progress reports, set the &lt;code&gt;&lt;a href=&quot;#primary_level&quot;&gt;primary log level&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;info&lt;/code&gt;.</source>
          <target state="translated">進捗レポートは、 &lt;code&gt;info&lt;/code&gt; レベルのログイベントとして発行されます。デフォルトのプライマリログレベルは &lt;code&gt;notice&lt;/code&gt; であるため、デフォルトではログに記録されません。進捗レポートの印刷を有効にするには、 &lt;code&gt;&lt;a href=&quot;#primary_level&quot;&gt;primary log level&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;info&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="4d970e24b22fc0f6e277e6e1b9c10241b2293ff1" translate="yes" xml:space="preserve">
          <source>Prompting</source>
          <target state="translated">Prompting</target>
        </trans-unit>
        <trans-unit id="2feeef99e0f2d9657de9874ba0e75f9b066346ff" translate="yes" xml:space="preserve">
          <source>Propagate the same error signal to the links of the killed process.</source>
          <target state="translated">同じエラー信号を、殺されたプロセスのリンクに伝搬させます。</target>
        </trans-unit>
        <trans-unit id="5eb34826139e0a6c504423934bde097d38a8e5ac" translate="yes" xml:space="preserve">
          <source>Properties are not inherited from top-level groups to nested subgroups. For instance, in the previous example, the test cases in &lt;code&gt;group2&lt;/code&gt; are not executed in random order (which is the property of &lt;code&gt;group1&lt;/code&gt;).</source>
          <target state="translated">プロパティはトップレベルグループからネストされたサブグループに継承されません。たとえば、前の例では、 &lt;code&gt;group2&lt;/code&gt; のテストケースはランダムな順序で実行されません（これは &lt;code&gt;group1&lt;/code&gt; のプロパティです）。</target>
        </trans-unit>
        <trans-unit id="cf72435a6a8dfe264c2d8cbb64919ecfbaeba5bb" translate="yes" xml:space="preserve">
          <source>Property lists are ordinary lists containing entries in the form of either tuples, whose first elements are keys used for lookup and insertion, or atoms, which work as shorthand for tuples &lt;code&gt;{Atom, true}&lt;/code&gt;. (Other terms are allowed in the lists, but are ignored by this module.) If there is more than one entry in a list for a certain key, the first occurrence normally overrides any later (irrespective of the arity of the tuples).</source>
          <target state="translated">プロパティリストは、最初の要素がルックアップと挿入に使用されるキーであるタプル、またはアプルの形式のエントリを含む通常のリストです。 &lt;code&gt;{Atom, true}&lt;/code&gt; タプル{Atom、true}の短縮形として機能します。（他の用語はリストで許可されていますが、このモジュールでは無視されます。）特定のキーのリストに複数のエントリがある場合、最初に出現したものが通常は後からオーバーライドされます（タプルのアリティに関係なく）。</target>
        </trans-unit>
        <trans-unit id="8f3a63f6f6853f3776df6fd40f512c3bc2423c62" translate="yes" xml:space="preserve">
          <source>Property lists are useful for representing inherited properties, such as options passed to a function where a user can specify options overriding the default settings, object properties, annotations, and so on.</source>
          <target state="translated">プロパティリストは、ユーザーがデフォルト設定を上書きするオプションを指定できる関数に渡されたオプションや、オブジェクトのプロパティ、アノテーションなど、継承されたプロパティを表現するのに便利です。</target>
        </trans-unit>
        <trans-unit id="69ef40d1cd2975594eba3c5b03a443daf8151c13" translate="yes" xml:space="preserve">
          <source>Protocol Errors</source>
          <target state="translated">プロトコルエラー</target>
        </trans-unit>
        <trans-unit id="1b0a81e8f360216134418545602ccf414662dde9" translate="yes" xml:space="preserve">
          <source>Protocol Messages</source>
          <target state="translated">プロトコルメッセージ</target>
        </trans-unit>
        <trans-unit id="2e1b345b4778495a0a85f0806404f2ef32e5c47c" translate="yes" xml:space="preserve">
          <source>Protocol Overview</source>
          <target state="translated">プロトコルの概要</target>
        </trans-unit>
        <trans-unit id="a1a8787c51e4736d24c8977bdbdc2c59f887b0e9" translate="yes" xml:space="preserve">
          <source>Protocol operations in the NETCONF protocol are realized as remote procedure calls (RPCs) from client to server and a corresponding reply from server to client. RPCs are sent using like-named functions (eg. &lt;code&gt;&lt;a href=&quot;#edit_config-3&quot;&gt;edit_config/3-5&lt;/a&gt;&lt;/code&gt; to send an edit-config RPC), with the server reply as return value. There are functions for each RPC defined in RFC 6241 and the create-subscription RPC from RFC 5277, all of which are wrappers on &lt;code&gt;&lt;a href=&quot;#send_rpc-2&quot;&gt;send_rpc/2,3&lt;/a&gt;&lt;/code&gt;, that can be used to send an arbitrary RPC not defined in RFC 6241 or RFC 5277.</source>
          <target state="translated">NETCONFプロトコルのプロトコル操作は、クライアントからサーバーへのリモートプロシージャコール（RPC）と、サーバーからクライアントへの対応する応答として実現されます。RPCは、サーバーの応答を戻り値として、同じ名前の関数（たとえば、 &lt;code&gt;&lt;a href=&quot;#edit_config-3&quot;&gt;edit_config/3-5&lt;/a&gt;&lt;/code&gt; でedit- configRPCを送信する）を使用して送信されます。 &lt;code&gt;&lt;a href=&quot;#send_rpc-2&quot;&gt;send_rpc/2,3&lt;/a&gt;&lt;/code&gt; 定義されている各RPCとRFC5277のcreate-subscriptionRPCの関数があり、これらはすべてsend_rpc / 2,3のラッパーであり、RFC6241またはRFC5277で定義されていない任意のRPCを送信するために使用できます。</target>
        </trans-unit>
        <trans-unit id="c07efc54af15e46ede9045b5a09cbf868ae19105" translate="yes" xml:space="preserve">
          <source>Prototypes for the driver callback routines can be found in the &lt;code&gt;erl_driver.h&lt;/code&gt; header file.</source>
          <target state="translated">ドライバーコールバックルーチンのプロトタイプは、 &lt;code&gt;erl_driver.h&lt;/code&gt; ヘッダーファイルにあります。</target>
        </trans-unit>
        <trans-unit id="f653b51c616d14c355967d6de899534adb195231" translate="yes" xml:space="preserve">
          <source>Prototyping</source>
          <target state="translated">Prototyping</target>
        </trans-unit>
        <trans-unit id="1f374df4d309c019bc6178248783e9390656a10a" translate="yes" xml:space="preserve">
          <source>Provide a fun to implement your own logging of the SSH message SSH_MSG_DEBUG. The last three parameters are from the message, see &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4253#section-11.3&quot;&gt;RFC 4253, section 11.3&lt;/a&gt;&lt;/code&gt;. The &lt;code&gt;&lt;a href=&quot;#type-connection_ref&quot;&gt;connection_ref()&lt;/a&gt;&lt;/code&gt; is the reference to the connection on which the message arrived. The return value from the fun is not checked.</source>
          <target state="translated">SSHメッセージSSH_MSG_DEBUGの独自のロギングを実装する楽しみを提供します。最後の3つのパラメーターはメッセージからのものです &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4253#section-11.3&quot;&gt;RFC 4253, section 11.3&lt;/a&gt;&lt;/code&gt; 参照してください。 &lt;code&gt;&lt;a href=&quot;#type-connection_ref&quot;&gt;connection_ref()&lt;/a&gt;&lt;/code&gt; は、メッセージが到着した接続への参照です。funからの戻り値はチェックされません。</target>
        </trans-unit>
        <trans-unit id="08a2504f6114a9c36ec403b96c7c302a482e126f" translate="yes" xml:space="preserve">
          <source>Provide default headers for the HTTP servers responses. Note that this option may override built-in defaults.</source>
          <target state="translated">HTTP サーバのレスポンスにデフォルトのヘッダを提供します。このオプションは組み込みのデフォルトを上書きする可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="2bca3403285a45fca5f582216c20e2b31fefe923" translate="yes" xml:space="preserve">
          <source>Provide some simple support for sequential tracing.</source>
          <target state="translated">シーケンシャルトレースのための簡単なサポートを提供します。</target>
        </trans-unit>
        <trans-unit id="410239829c19fb6bb8f95e6437ab94a49a5db9bc" translate="yes" xml:space="preserve">
          <source>Provides a decryption key for &lt;code&gt;&lt;a href=&quot;config_file_chapter#encrypted_config_files&quot;&gt;encrypted configuration files&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;config_file_chapter#encrypted_config_files&quot;&gt;encrypted configuration files&lt;/a&gt;&lt;/code&gt; 復号化キーを提供します。</target>
        </trans-unit>
        <trans-unit id="903b44886dfe622745223d5547c0cc9c2859f2f6" translate="yes" xml:space="preserve">
          <source>Provides a fun to implement your own logging or other action when an unexpected message arrives. If the fun returns &lt;code&gt;report&lt;/code&gt; the usual info report is issued but if &lt;code&gt;skip&lt;/code&gt; is returned no report is generated.</source>
          <target state="translated">予期しないメッセージが到着したときに、独自のロギングやその他のアクションを実装する楽しみを提供します。funが &lt;code&gt;report&lt;/code&gt; 返す場合、通常の情報レポートが発行されますが、 &lt;code&gt;skip&lt;/code&gt; が返される場合、レポートは生成されません。</target>
        </trans-unit>
        <trans-unit id="6ffbd3b6dc47604871d65b5a79796a1a2da426e0" translate="yes" xml:space="preserve">
          <source>Provides a fun to implement your own logging or other handling at disconnects.</source>
          <target state="translated">切断時に独自のロギングなどの処理を実装する楽しみを提供します。</target>
        </trans-unit>
        <trans-unit id="a8122202de6a4acb088d775f3973da908d4fecce" translate="yes" xml:space="preserve">
          <source>Provides a fun to implement your own logging when a user authenticates to the server.</source>
          <target state="translated">ユーザーがサーバーに認証したときに、独自のログを実装する楽しみを提供します。</target>
        </trans-unit>
        <trans-unit id="6ae014fb7ce0d00946111ea1f6afbd515ba680d3" translate="yes" xml:space="preserve">
          <source>Provides a fun to implement your own logging when a user fails to authenticate.</source>
          <target state="translated">ユーザーの認証に失敗した場合に、独自のログを実装する楽しみを提供します。</target>
        </trans-unit>
        <trans-unit id="693b50c9238225aebe1905f9a4bbeddbe802666a" translate="yes" xml:space="preserve">
          <source>Provides a fun to implement your own logging when the peer disconnects.</source>
          <target state="translated">ピアが切断されたときに独自のロギングを実装する楽しみを提供します。</target>
        </trans-unit>
        <trans-unit id="2622540d75e1ce825909c4c27dcf1a5e81b022b9" translate="yes" xml:space="preserve">
          <source>Provides a function for password validation. This could used for calling an external system or handeling passwords stored as hash values.</source>
          <target state="translated">パスワード検証のための関数を提供します。これは、外部システムを呼び出したり、ハッシュ値として保存されたパスワードをハンドリングするために使用されます。</target>
        </trans-unit>
        <trans-unit id="b02519300dbb28165f9b31d399e480b06aff4a3e" translate="yes" xml:space="preserve">
          <source>Provides a function for password validation. This function is called with user and password as strings, and returns:</source>
          <target state="translated">パスワード検証のための関数を提供します。この関数は、ユーザーとパスワードを文字列にして呼び出され、返されます。</target>
        </trans-unit>
        <trans-unit id="6aa5ff7905134531fc9760a2816fc0228545f5bd" translate="yes" xml:space="preserve">
          <source>Provides a function for tab-completion (expansion) like the Erlang shell. This function is called when the user presses the &lt;strong&gt;Tab&lt;/strong&gt; key. The expansion is active when calling line-reading functions, such as &lt;code&gt;&lt;a href=&quot;#get_line-1&quot;&gt;get_line/1,2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Erlangシェルのようなタブ補完（拡張）の機能を提供します。この関数は、ユーザーが&lt;strong&gt;Tab&lt;/strong&gt;キーを押すと呼び出されます。 &lt;code&gt;&lt;a href=&quot;#get_line-1&quot;&gt;get_line/1,2&lt;/a&gt;&lt;/code&gt; などの行読み取り関数を呼び出すと、展開がアクティブになります。</target>
        </trans-unit>
        <trans-unit id="0126483ea757d9c456fac59884fa78b1895b0c1d" translate="yes" xml:space="preserve">
          <source>Provides a global password that authenticates any user.</source>
          <target state="translated">任意のユーザーを認証するグローバルパスワードを提供します。</target>
        </trans-unit>
        <trans-unit id="bcf2a440040f1adc832c9af437538a1274c09fbb" translate="yes" xml:space="preserve">
          <source>Provides a list of the scheme and their default port numbers supported (by default) by this utility.</source>
          <target state="translated">このユーティリティでサポートされているスキームとそのデフォルトのポート番号のリストを提供します(デフォルトでは)。</target>
        </trans-unit>
        <trans-unit id="e41ea94fc42949509a5e1ad43ddb8e3777a04f48" translate="yes" xml:space="preserve">
          <source>Provides a map with information about block_size, key_length, iv_length and possibly other properties of the cipher algorithm in question.</source>
          <target state="translated">block_size、key_length、iv_length、および問題の暗号アルゴリズムの他のプロパティに関する情報を含むマップを提供します。</target>
        </trans-unit>
        <trans-unit id="c4d6929e2e0f81130f02865c5e36545d49049a55" translate="yes" xml:space="preserve">
          <source>Provides a map with information about block_size, size and possibly other properties of the hash algorithm in question.</source>
          <target state="translated">block_size、サイズ、および問題のハッシュアルゴリズムの他のプロパティに関する情報を含むマップを提供します。</target>
        </trans-unit>
        <trans-unit id="882538ba1337b4bc7c8a6a34a8a92a54495af42b" translate="yes" xml:space="preserve">
          <source>Provides a name for the NIF that is scheduled for execution. If it cannot be converted to an atom, &lt;code&gt;enif_schedule_nif&lt;/code&gt; returns a &lt;code&gt;badarg&lt;/code&gt; exception.</source>
          <target state="translated">実行がスケジュールされているNIFの名前を提供します。アトムに変換できない場合、 &lt;code&gt;enif_schedule_nif&lt;/code&gt; は &lt;code&gt;badarg&lt;/code&gt; 例外を返します。</target>
        </trans-unit>
        <trans-unit id="9a7fa191207bdbdcf1355b3abd90f2d61475ca15" translate="yes" xml:space="preserve">
          <source>Provides a password for password authentication. If this option is not given, the user is asked for a password, if the password authentication method is attempted.</source>
          <target state="translated">パスワード認証のためのパスワードを提供します。このオプションが指定されていない場合、パスワード認証方法が試みられた場合、ユーザはパスワードの入力を求められます。</target>
        </trans-unit>
        <trans-unit id="2e6245a80cc81adaed06ea9939826c09d6c8984a" translate="yes" xml:space="preserve">
          <source>Provides a way of filtering log events based on a &lt;code&gt;domain&lt;/code&gt; field in &lt;code&gt;Metadata&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Metadata&lt;/code&gt; の &lt;code&gt;domain&lt;/code&gt; フィールドに基づいてログイベントをフィルタリングする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="955f63ea342c9ccdf55e0b9ef1640dd09419b809" translate="yes" xml:space="preserve">
          <source>Provides a way of filtering log events based on the log level.</source>
          <target state="translated">ログレベルに基づいてログイベントをフィルタリングする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="917a3a6ad732d2f5671eafaeed7176e9ef18f549" translate="yes" xml:space="preserve">
          <source>Provides access to the registry on Windows.</source>
          <target state="translated">Windows のレジストリへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="05ac5290f4045fe43f63e391afe9724d565253dd" translate="yes" xml:space="preserve">
          <source>Provides an Erlang interface to communicate with relational SQL-databases. It is built on top of Microsofts ODBC interface and therefore requires that you have an ODBC driver to the database that you want to connect to. The Erlang ODBC application is designed using the version 3.0 of the ODBC-standard, however using the option &lt;code&gt;{scrollable_cursors, off}&lt;/code&gt; for a connection has been known to make it work for at least some 2.X drivers.</source>
          <target state="translated">リレーショナルSQLデータベースと通信するためのErlangインターフェースを提供します。MicrosoftのODBCインターフェイスの上に構築されているため、接続するデータベースへのODBCドライバーが必要です。Erlang ODBCアプリケーションは、ODBC標準のバージョン3.0を使用して設計されていますが、接続にオプション &lt;code&gt;{scrollable_cursors, off}&lt;/code&gt; を使用すると、少なくとも一部の2.Xドライバーで機能することが知られています。</target>
        </trans-unit>
        <trans-unit id="f79e1bbf3ee82741dfe60b12a6243392fa5cd563" translate="yes" xml:space="preserve">
          <source>Provides base64 encode and decode, see &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">base64エンコードおよびデコードを提供します。 &lt;code&gt;&lt;a href=&quot;https://www.ietf.org/rfc/rfc2045.txt&quot;&gt;RFC 2045&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4e9af3af74f64719e08406feffc5d04267f3391b" translate="yes" xml:space="preserve">
          <source>Provides base64 encode and decode, see RFC 2045.</source>
          <target state="translated">RFC 2045 を参照してください。</target>
        </trans-unit>
        <trans-unit id="0767fcb9cf2d27bebf009a5c390e3880f87527f9" translate="yes" xml:space="preserve">
          <source>Provides extended diagnostics, use &lt;code&gt;&lt;a href=&quot;#error_string-1&quot;&gt;error_string/1.&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">拡張診断を提供し、使用 &lt;code&gt;&lt;a href=&quot;#error_string-1&quot;&gt;error_string/1.&lt;/a&gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e583caf4df904713adcce17bae909ffac9b6bbf8" translate="yes" xml:space="preserve">
          <source>Provides functions to handle public-key infrastructure, for details see &lt;code&gt;public_key(6)&lt;/code&gt;.</source>
          <target state="translated">詳細については、公開鍵インフラストラクチャを処理する関数を提供します。 &lt;code&gt;public_key(6)&lt;/code&gt; 。 public_key（6）。</target>
        </trans-unit>
        <trans-unit id="9b490ba126a125b5dbe6b1345ee3fd68b833fe2f" translate="yes" xml:space="preserve">
          <source>Provides information about the FIPS operating status of crypto and the underlying OpenSSL library. If crypto was built with FIPS support this can be either &lt;code&gt;enabled&lt;/code&gt; (when running in FIPS mode) or &lt;code&gt;not_enabled&lt;/code&gt;. For other builds this value is always &lt;code&gt;not_supported&lt;/code&gt;.</source>
          <target state="translated">暗号および基礎となるOpenSSLライブラリのFIPS動作ステータスに関する情報を提供します。暗号がFIPSサポートで構築されている場合、これは &lt;code&gt;enabled&lt;/code&gt; （FIPSモードで実行している場合）または &lt;code&gt;not_enabled&lt;/code&gt; 。他のビルドでは、この値は常に &lt;code&gt;not_supported&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="30dbaaafbb7e052ae711783e3f47a1722fb23cbb" translate="yes" xml:space="preserve">
          <source>Provides information about the FIPS operating status of crypto and the underlying libcrypto library. If crypto was built with FIPS support this can be either &lt;code&gt;enabled&lt;/code&gt; (when running in FIPS mode) or &lt;code&gt;not_enabled&lt;/code&gt;. For other builds this value is always &lt;code&gt;not_supported&lt;/code&gt;.</source>
          <target state="translated">暗号のFIPS動作ステータスと基盤となるlibcryptoライブラリに関する情報を提供します。暗号がFIPSサポートを使用して構築されている場合、これは &lt;code&gt;enabled&lt;/code&gt; （FIPSモードで実行している場合）または &lt;code&gt;not_enabled&lt;/code&gt; のいずれかです。他のビルドの場合、この値は常に &lt;code&gt;not_supported&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8e528ef223145dad4b73216f63054349090dcd33" translate="yes" xml:space="preserve">
          <source>Provides more control than the &lt;code&gt;load/2&lt;/code&gt;/&lt;code&gt;reload/2&lt;/code&gt; and &lt;code&gt;load_driver/2&lt;/code&gt;/&lt;code&gt;reload_driver/2&lt;/code&gt; interfaces. It never waits for completion of other operations related to the driver, but immediately returns the status of the driver as one of the following:</source>
          <target state="translated">&lt;code&gt;load/2&lt;/code&gt; / &lt;code&gt;reload/2&lt;/code&gt; および &lt;code&gt;load_driver/2&lt;/code&gt; / よりも多くの制御を提供します &lt;code&gt;reload_driver/2&lt;/code&gt; インターフェースます。ドライバーに関連する他の操作の完了を待つことはありませんが、ドライバーのステータスを次のいずれかとして即座に返します。</target>
        </trans-unit>
        <trans-unit id="15c9038fc5b1524a7c052b7a20860ee70d660228" translate="yes" xml:space="preserve">
          <source>Provides passwords for password authentication. The passwords are used when someone tries to connect to the server and public key user-authentication fails. The option provides a list of valid usernames and the corresponding passwords.</source>
          <target state="translated">パスワード認証用のパスワードを提供します。パスワードは、誰かがサーバに接続しようとしたときに公開鍵認証に失敗したときに使用されます。このオプションは、有効なユーザ名とそれに対応するパスワードのリストを提供します。</target>
        </trans-unit>
        <trans-unit id="b074a4910398fb49d04cfd408836de827bf0e394" translate="yes" xml:space="preserve">
          <source>Provides the flag &lt;code&gt;-boot&lt;/code&gt; specifying the boot file of the release version found (&lt;code&gt;&quot;releases/FIRST/start.boot&quot;&lt;/code&gt;).</source>
          <target state="translated">見つかったリリースバージョンのブートファイルを指定するフラグ &lt;code&gt;-boot&lt;/code&gt; を提供します（ &lt;code&gt;&quot;releases/FIRST/start.boot&quot;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="a72441e1164e80082373bf66638549573dc043ff" translate="yes" xml:space="preserve">
          <source>Provides the name and version of the libraries used by crypto.</source>
          <target state="translated">cryptoで使用されるライブラリの名前とバージョンを提供します。</target>
        </trans-unit>
        <trans-unit id="77276a6c8bb030519317824295c69e75a13fdde9" translate="yes" xml:space="preserve">
          <source>Provides the username. If this option is not given, &lt;code&gt;ssh&lt;/code&gt; reads from the environment (&lt;code&gt;LOGNAME&lt;/code&gt; or &lt;code&gt;USER&lt;/code&gt; on UNIX, &lt;code&gt;USERNAME&lt;/code&gt; on Windows).</source>
          <target state="translated">ユーザー名を提供します。このオプションが指定されていない場合、 &lt;code&gt;ssh&lt;/code&gt; は環境（UNIXでは &lt;code&gt;LOGNAME&lt;/code&gt; または &lt;code&gt;USER&lt;/code&gt; 、 &lt;code&gt;USERNAME&lt;/code&gt; 、Windows USERNAME）。</target>
        </trans-unit>
        <trans-unit id="b09826e2df02ed043b8710bf898e2179004a2680" translate="yes" xml:space="preserve">
          <source>Provides your own CLI implementation in a daemon.</source>
          <target state="translated">デーモンで独自のCLI実装を提供します。</target>
        </trans-unit>
        <trans-unit id="6337706f6e77732d06ad836d88d60b82dd945341" translate="yes" xml:space="preserve">
          <source>Proxy Agents</source>
          <target state="translated">代理店</target>
        </trans-unit>
        <trans-unit id="a7d3fe08253cdc3ad07d2f5dabfe674d1aa52bd9" translate="yes" xml:space="preserve">
          <source>Proxy-Host AVP</source>
          <target state="translated">プロキシホスト AVP</target>
        </trans-unit>
        <trans-unit id="aaa9a1afcf35a6a510bb9543bf0d6f52952fb297" translate="yes" xml:space="preserve">
          <source>Proxy-Info AVP</source>
          <target state="translated">プロキシインフォAVP</target>
        </trans-unit>
        <trans-unit id="64812682c3ee84678a9b41d9cc2b26f19b76cc5c" translate="yes" xml:space="preserve">
          <source>Proxy-State AVP</source>
          <target state="translated">プロキシステートAVP</target>
        </trans-unit>
        <trans-unit id="40db0b3883f06edc9792ae47fe2fd8fc1148af25" translate="yes" xml:space="preserve">
          <source>Psalter_Pahlavi</source>
          <target state="translated">Psalter_Pahlavi</target>
        </trans-unit>
        <trans-unit id="d0fdfc27d15a90f7600623009abb8fe006b3ef96" translate="yes" xml:space="preserve">
          <source>Pseudo function that by a &lt;code&gt;parse_transform&lt;/code&gt; translates &lt;code&gt;LiteralFun&lt;/code&gt; typed as parameter in the function call to a &lt;code&gt;&lt;a href=&quot;#match_spec&quot;&gt;match specification&lt;/a&gt;&lt;/code&gt;. With &quot;literal&quot; is meant that the fun must textually be written as the parameter of the function, it cannot be held in a variable that in turn is passed to the function.</source>
          <target state="translated">であること、擬似機能 &lt;code&gt;parse_transform&lt;/code&gt; が翻訳 &lt;code&gt;LiteralFun&lt;/code&gt; がへの関数呼び出しのパラメータとして入力された &lt;code&gt;&lt;a href=&quot;#match_spec&quot;&gt;match specification&lt;/a&gt;&lt;/code&gt; 。「リテラル」とは、funが関数のパラメーターとしてテキストで記述されなければならないことを意味し、関数に渡される変数に保持することはできません。</target>
        </trans-unit>
        <trans-unit id="b76821618a6e81543a9111bbe440dd93c8037696" translate="yes" xml:space="preserve">
          <source>Pseudo function that by means of a &lt;code&gt;parse_transform&lt;/code&gt; translates the &lt;strong&gt;literal&lt;/strong&gt;&lt;code&gt;fun()&lt;/code&gt; typed as parameter in the function call to a match specification as described in the &lt;code&gt;match_spec&lt;/code&gt; manual of ERTS users guide. (with literal I mean that the &lt;code&gt;fun()&lt;/code&gt; needs to textually be written as the parameter of the function, it cannot be held in a variable which in turn is passed to the function).</source>
          <target state="translated">こと擬似機能 &lt;code&gt;parse_transform&lt;/code&gt; 変換&lt;strong&gt;リテラル&lt;/strong&gt; &lt;code&gt;fun()&lt;/code&gt; に記載されるようにマッチ仕様に関数呼び出しのパラメータとして入力 &lt;code&gt;match_spec&lt;/code&gt; ERTSユーザガイドの説明書。（文字通り、つまり &lt;code&gt;fun()&lt;/code&gt; が関数のパラメーターとしてテキストで記述される必要があるます。それは、関数に渡される変数に保持することはできません）。</target>
        </trans-unit>
        <trans-unit id="ad66a675910e9dc1b80a46c98524572b8db0801a" translate="yes" xml:space="preserve">
          <source>Pseudo random number generation.</source>
          <target state="translated">疑似乱数生成。</target>
        </trans-unit>
        <trans-unit id="3d62ca4c64f68f59f57794d1a577fae252d0de3d" translate="yes" xml:space="preserve">
          <source>Pseudo-random number generation.</source>
          <target state="translated">擬似乱数の生成。</target>
        </trans-unit>
        <trans-unit id="c20825441684d87fd2029a194a2fa7c884903fe5" translate="yes" xml:space="preserve">
          <source>Public Key Ciphers</source>
          <target state="translated">公開鍵暗号</target>
        </trans-unit>
        <trans-unit id="336ac16c89226b0af6be05bedd8e39d0d89d2481" translate="yes" xml:space="preserve">
          <source>Public Key Sign and Verify</source>
          <target state="translated">公開鍵の署名と検証</target>
        </trans-unit>
        <trans-unit id="a70714540366d8fae2fe06e39149c6abe313d018" translate="yes" xml:space="preserve">
          <source>Public key authentication in Erlang SSH</source>
          <target state="translated">Erlang SSH での公開鍵認証</target>
        </trans-unit>
        <trans-unit id="c98572a8cdc44f29acd6d9bafcc787680c0311e9" translate="yes" xml:space="preserve">
          <source>Public-key data (keys, certificates, and so on) can be stored in Privacy Enhanced Mail (PEM) format. The PEM files have the following structure:</source>
          <target state="translated">公開鍵データ(鍵、証明書など)は、PEM(Privacy Enhanced Mail)形式で保存することができます。PEMファイルは以下のような構造になっています。</target>
        </trans-unit>
        <trans-unit id="af9d874c62240cf5f3756c1a09f53a1acbbe30fb" translate="yes" xml:space="preserve">
          <source>Public-key decryption using the private key. See also &lt;code&gt;crypto:private_decrypt/4&lt;/code&gt;</source>
          <target state="translated">秘密鍵を使用した公開鍵の復号化。こちらもご覧ください &lt;code&gt;crypto:private_decrypt/4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0d0b4eff2289312e196864ad9ede672c54ac16fd" translate="yes" xml:space="preserve">
          <source>Public-key decryption using the public key. See also &lt;code&gt;crypto:public_decrypt/4&lt;/code&gt;</source>
          <target state="translated">公開鍵を使用した公開鍵の復号化。こちらもご覧ください &lt;code&gt;crypto:public_decrypt/4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1c9a6fa031fc4d41c5bb997e94e3205b5bde379c" translate="yes" xml:space="preserve">
          <source>Public-key encryption using the private key. See also &lt;code&gt;crypto:private_encrypt/4&lt;/code&gt;.</source>
          <target state="translated">秘密鍵を使用した公開鍵暗号化。 &lt;code&gt;crypto:private_encrypt/4&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="b474ab2cacf9c0bf60c2569f1a89c4cf597b125c" translate="yes" xml:space="preserve">
          <source>Public-key encryption using the public key. See also &lt;code&gt;crypto:public_encrypt/4&lt;/code&gt;.</source>
          <target state="translated">公開鍵を使用した公開鍵暗号化。 &lt;code&gt;crypto:public_encrypt/4&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="2af20711419a0ca72d8212bc8c208e78e4545388" translate="yes" xml:space="preserve">
          <source>Public/Private Keys</source>
          <target state="translated">パブリックキー/プライベートキー</target>
        </trans-unit>
        <trans-unit id="7681fa099c677c9c3bef9e3f7267e6ecaf959e64" translate="yes" xml:space="preserve">
          <source>PublicKey :: &lt;code&gt;public_key:public_key()&lt;/code&gt;,</source>
          <target state="translated">PublicKey :: &lt;code&gt;public_key:public_key()&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="68fc7bd4bc44e3818645b5f17ee1089ffb95b680" translate="yes" xml:space="preserve">
          <source>Punctuation</source>
          <target state="translated">Punctuation</target>
        </trans-unit>
        <trans-unit id="9a2f2d19b27f34b47025e9233d9cd866b4bd3b4e" translate="yes" xml:space="preserve">
          <source>Punctuation character</source>
          <target state="translated">句読点文字</target>
        </trans-unit>
        <trans-unit id="82792519d207c87b83fb05059a79c1df3520b2eb" translate="yes" xml:space="preserve">
          <source>Punctuation characters</source>
          <target state="translated">句読点文字</target>
        </trans-unit>
        <trans-unit id="0438651b1551394f1e2bbfd8ad53fbbf577875d4" translate="yes" xml:space="preserve">
          <source>Punctuation space</source>
          <target state="translated">句読点スペース</target>
        </trans-unit>
        <trans-unit id="f4845e6e07d3e7c50eaf916600cc5ee92c07d965" translate="yes" xml:space="preserve">
          <source>Purges and loads, or reloads, a module by calling &lt;code&gt;code:purge(Module)&lt;/code&gt; followed by &lt;code&gt;code:load_file(Module)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;code:purge(Module)&lt;/code&gt; に続けて &lt;code&gt;code:load_file(Module)&lt;/code&gt; を呼び出すことにより、モジュールをパージおよびロードまたは再ロードします。</target>
        </trans-unit>
        <trans-unit id="2a530eeffee5c0860d74ab29d23d89f4632d5774" translate="yes" xml:space="preserve">
          <source>Purges each module &lt;code&gt;Mod&lt;/code&gt;, that is, removes the old code. Notice that any process executing purged code is killed.</source>
          <target state="translated">各モジュール &lt;code&gt;Mod&lt;/code&gt; をパージしますます。つまり、古いコードを削除します。パージされたコードを実行するプロセスはすべて強制終了されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3fdb75c711668c4160644fd3a6e8e5aebaaf8245" translate="yes" xml:space="preserve">
          <source>Purges the code for &lt;code&gt;Module&lt;/code&gt;, that is, removes code marked as old, but only if no processes linger in it.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; のコードを削除します削除します。つまり、古いとマークされたコードを削除しますが、その中にプロセスが残っていない場合のみです。</target>
        </trans-unit>
        <trans-unit id="3d8198c900f27b7b2a03e448756c517424e92bed" translate="yes" xml:space="preserve">
          <source>Purges the code for &lt;code&gt;Module&lt;/code&gt;, that is, removes code marked as old. If some processes still linger in the old code, these processes are killed before the code is removed.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; のコードを削除します削除します。つまり、古いとマークされたコードを削除します。一部のプロセスが古いコードに残っている場合、これらのプロセスはコードが削除される前に強制終了されます。</target>
        </trans-unit>
        <trans-unit id="4cdaf8c1d6cdda09ba5cdf41daf294b6c9ed7786" translate="yes" xml:space="preserve">
          <source>Purists may argue that this should be modelled with a separate state machine that sends pre-processed events to the main state machine, but to decrease overhead the small pre-processing state machine can be implemented in the common state event handling of the main state machine using a few state data variables that then sends the pre-processed events as internal events to the main state machine. Using internal events also can make it easier to synchronize the state machines.</source>
          <target state="translated">しかし、オーバーヘッドを減らすために、小さな前処理ステートマシンは、少数のステートデータ変数を使用してメインステートマシンの共通ステートイベント処理の中に実装することができます。また、内部イベントを使用することで、ステートマシンの同期を容易にすることができます。</target>
        </trans-unit>
        <trans-unit id="89ea6fdb33fc3dacfafa57a13cd28cd1e7ef36c9" translate="yes" xml:space="preserve">
          <source>Push the current &lt;strong&gt;callback module&lt;/strong&gt; to the top of an internal stack of callback modules and set the new &lt;code&gt;&lt;a href=&quot;#Callback%20Module&quot;&gt; &lt;strong&gt;callback module&lt;/strong&gt; &lt;/a&gt;&lt;/code&gt; for the running server. Otherwise like &lt;code&gt;{change_callback_module, NewModule}&lt;/code&gt; above.</source>
          <target state="translated">現在の&lt;strong&gt;コールバックモジュール&lt;/strong&gt;を&lt;strong&gt;コールバックモジュール&lt;/strong&gt;の内部スタックの一番上にプッシュし、実行中のサーバーの新しい &lt;code&gt;&lt;a href=&quot;#Callback%20Module&quot;&gt; &lt;strong&gt;callback module&lt;/strong&gt; &lt;/a&gt;&lt;/code&gt; バックモジュールを設定します。それ以外の場合は &lt;code&gt;{change_callback_module, NewModule}&lt;/code&gt; 上記の{change_callback_module、NewModule}のようになります。 &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="21d0557e3f9ecb76a229545c8585bdf38a2980a1" translate="yes" xml:space="preserve">
          <source>Pushes the current callback module to the top of an internal stack of callback modules and changes the callback module to &lt;code&gt;NewModule&lt;/code&gt;. Otherwise like &lt;code&gt;{change_callback_module, NewModule}&lt;/code&gt; above.</source>
          <target state="translated">現在のコールバックモジュールをコールバックモジュールの内部スタックの一番上に &lt;code&gt;NewModule&lt;/code&gt; 、コールバックモジュールをNewModuleに変更します。それ以外の場合は &lt;code&gt;{change_callback_module, NewModule}&lt;/code&gt; 上記の{change_callback_module、NewModule}のようになります。</target>
        </trans-unit>
        <trans-unit id="10c01ec6868afc102597a3ed42373e9470221d26" translate="yes" xml:space="preserve">
          <source>Pushing back characters gives you unexpected possibilities to cause the scanner to loop!</source>
          <target state="translated">キャラクターを押し返すことで、スキャナーがループするという意外な可能性を秘めています!</target>
        </trans-unit>
        <trans-unit id="4fe937319833d21c895af7373098e512f06998b1" translate="yes" xml:space="preserve">
          <source>Put the marker on a function name and double click to go to the definition of the function. If the function is defined in another module, that module will be loaded and added to the page list.</source>
          <target state="translated">関数名の上にマーカーを置き、ダブルクリックすると関数の定義に移動します。関数が他のモジュールで定義されている場合は、そのモジュールが読み込まれてページリストに追加されます。</target>
        </trans-unit>
        <trans-unit id="5c334594f2e0d971a5e8ed41a49b4ac58e9cff76" translate="yes" xml:space="preserve">
          <source>Put their names in the association file.</source>
          <target state="translated">アソシエーションファイルに名前を入れます。</target>
        </trans-unit>
        <trans-unit id="267984807457cef8b61168f668ee488edeae227f" translate="yes" xml:space="preserve">
          <source>Puts data at the head of the driver queue. The data in &lt;code&gt;buf&lt;/code&gt; is copied (&lt;code&gt;len&lt;/code&gt; bytes) and placed at the beginning of the queue.</source>
          <target state="translated">データをドライバーキューの先頭に配置します。 &lt;code&gt;buf&lt;/code&gt; のデータがコピーされます（ &lt;code&gt;len&lt;/code&gt; バイト）、キューの先頭に配置されます。</target>
        </trans-unit>
        <trans-unit id="9e27e158ac5c5a01e234c267f7eda9d6f033aceb" translate="yes" xml:space="preserve">
          <source>Puts data in the binary &lt;code&gt;bin&lt;/code&gt;, at &lt;code&gt;offset&lt;/code&gt; with length &lt;code&gt;len&lt;/code&gt; at the head of the driver queue. It is most often faster than &lt;code&gt;&lt;a href=&quot;#driver_pushq&quot;&gt;driver_pushq&lt;/a&gt;&lt;/code&gt;, because no data must be copied.</source>
          <target state="translated">ドライバーキューの先頭にある長さ &lt;code&gt;len&lt;/code&gt; の &lt;code&gt;offset&lt;/code&gt; でバイナリ &lt;code&gt;bin&lt;/code&gt; にデータを配置します。ほとんどの場合、データをコピーする必要がないため、 &lt;code&gt;&lt;a href=&quot;#driver_pushq&quot;&gt;driver_pushq&lt;/a&gt;&lt;/code&gt; よりも高速です。</target>
        </trans-unit>
        <trans-unit id="35a65ec39446238a0a0eac9475e71d6cef8cf751" translate="yes" xml:space="preserve">
          <source>Puts the Erlang term &lt;code&gt;TraceInfo&lt;/code&gt; into the sequential trace output if the calling process currently is executing within a sequential trace and the &lt;code&gt;print&lt;/code&gt; flag of the trace token is set.</source>
          <target state="translated">プットアーラン用語 &lt;code&gt;TraceInfo&lt;/code&gt; を順次トレース出力を呼び出すプロセスが現在順次トレース内で実行された場合 &lt;code&gt;print&lt;/code&gt; トレーストークンのフラグがセットされています。</target>
        </trans-unit>
        <trans-unit id="042a67e13942247a8e41ae9098af6d0aa9580018" translate="yes" xml:space="preserve">
          <source>Puts the calling process into a wait state where its memory allocation has been reduced as much as possible. This is useful if the process does not expect to receive any messages soon.</source>
          <target state="translated">呼び出したプロセスを、メモリ割り当てを可能な限り減らした待ち状態にします。これは、プロセスがすぐにメッセージの受信を期待していない場合に便利です。</target>
        </trans-unit>
        <trans-unit id="d013f0295b6c01c558d00c5ba53aca86377c9dd9" translate="yes" xml:space="preserve">
          <source>Puts the data in &lt;code&gt;ev&lt;/code&gt;, skipping the first &lt;code&gt;skip&lt;/code&gt; bytes of it, at the head of the driver queue. It is faster than &lt;code&gt;&lt;a href=&quot;#driver_pushq&quot;&gt;driver_pushq&lt;/a&gt;&lt;/code&gt;, because no data must be copied.</source>
          <target state="translated">データを &lt;code&gt;ev&lt;/code&gt; に入れ、その最初の &lt;code&gt;skip&lt;/code&gt; バイトをスキップして、ドライバーキューの先頭に配置します。 &lt;code&gt;&lt;a href=&quot;#driver_pushq&quot;&gt;driver_pushq&lt;/a&gt;&lt;/code&gt; よりも高速ですデータをコピーする必要がないため。</target>
        </trans-unit>
        <trans-unit id="0e3da342d32b71066e0ff7598d5155af43136f49" translate="yes" xml:space="preserve">
          <source>Pythagorean triplets are sets of integers &lt;code&gt;{A,B,C}&lt;/code&gt; such that &lt;code&gt;A**2 + B**2 = C**2&lt;/code&gt;.</source>
          <target state="translated">ピタゴラスのトリプレットは、 &lt;code&gt;A**2 + B**2 = C**2&lt;/code&gt; ような整数のセット &lt;code&gt;{A,B,C}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cbdad7e832388f477b308e785e461d43f185fd4b" translate="yes" xml:space="preserve">
          <source>Q: Can I build something that looks exactly as the commercial release?</source>
          <target state="translated">Q:市販のリリースと全く同じようなものを作ることはできますか?</target>
        </trans-unit>
        <trans-unit id="9c33e934c4ed63e98eb95622daa029fee8f2aee2" translate="yes" xml:space="preserve">
          <source>Q: Can you help me setup X in Cygwin/MSYS/MSYS2?</source>
          <target state="translated">Q:Cygwin/MSYS/MSYS2でXのセットアップを手伝ってもらえますか?</target>
        </trans-unit>
        <trans-unit id="2a92f9f3084b89244941d6f295251370a4ed363a" translate="yes" xml:space="preserve">
          <source>Q: Can/will I build a Cygwin binary with the procedure you describe?</source>
          <target state="translated">Q:あなたが説明している手順でCygwinバイナリをビルドできますか?</target>
        </trans-unit>
        <trans-unit id="8fdbaf479bc8188c169196a96796d9e462c3fb1f" translate="yes" xml:space="preserve">
          <source>Q: Hah, I saw you, you used GCC even though you said you didn't!</source>
          <target state="translated">Q:はあ、見た!見てないと言っていたのにGCCを使っていたのか!?</target>
        </trans-unit>
        <trans-unit id="4d33d2562fd29f6e1c9fc76d264215b3d5aeeca3" translate="yes" xml:space="preserve">
          <source>Q: OK, you need VC++, but now you've started to demand a quite recent (and expensive) version of Visual Studio. Why?</source>
          <target state="translated">Q:VC++が必要なのに、Visual Studio のかなり新しい (そして高価な)バージョンを要求し始めました。なぜでしょうか?</target>
        </trans-unit>
        <trans-unit id="5fa7db24f83822063f97229323a06aa3a0877f5d" translate="yes" xml:space="preserve">
          <source>Q: So how does it all work then?</source>
          <target state="translated">Q:では、どのような仕組みになっているのでしょうか?</target>
        </trans-unit>
        <trans-unit id="4848dd0945c44e751b1591373d20f6801c1998a4" translate="yes" xml:space="preserve">
          <source>Q: So now there's a MS VC++ project file somewhere and I can build OTP using the nifty VC++ GUI?</source>
          <target state="translated">Q:MSのVC++プロジェクトファイルがどこかにあり、VC++のGUIを使ってOTPを構築できるようになったのですね。</target>
        </trans-unit>
        <trans-unit id="7beb25dc53e0563d452b76025a13d007739f049b" translate="yes" xml:space="preserve">
          <source>Q: So, now I can build Erlang using GCC on Windows?</source>
          <target state="translated">Q:WindowsでGCCを使ってErlangをビルドできるようになったのですか?</target>
        </trans-unit>
        <trans-unit id="1f93ee200a556071dcfd3098474bd38969c35084" translate="yes" xml:space="preserve">
          <source>Q: Which version of Cygwin/MSYS/MSYS2 and other tools do you use then?</source>
          <target state="translated">Q:Cygwin/MSYS/MSYS2などのツールはどのバージョンを使っていますか?</target>
        </trans-unit>
        <trans-unit id="8891a2f89f4aba3906b6429931ac38fc100643aa" translate="yes" xml:space="preserve">
          <source>Q: Which version of WSL and other tools do you use then?</source>
          <target state="translated">Q:では、WSLなどのツールはどのバージョンを使っていますか?</target>
        </trans-unit>
        <trans-unit id="3824ecc6208efe4bfe24a674a751c9d0ca079f07" translate="yes" xml:space="preserve">
          <source>Q: Why haven't you got rid of VC++ then, you ******?</source>
          <target state="translated">Q:なぜVC++を処分しなかったのですか?</target>
        </trans-unit>
        <trans-unit id="cb20cfbdc096ea44ab338185d58c6e58b37996ba" translate="yes" xml:space="preserve">
          <source>Q: You use and need Cygwin, but then you haven't taken the time to port Erlang to the Cygwin environment but instead focus on your commercial release, is that really ethical?</source>
          <target state="translated">Q:あなたはCygwinを使っていて必要としているのに、ErlangをCygwin環境に移植する時間を取らずに商用リリースに集中していますよね。</target>
        </trans-unit>
        <trans-unit id="ab248038951d6f5bbf2e6b69cbcd23902b8c49b9" translate="yes" xml:space="preserve">
          <source>QLC</source>
          <target state="translated">QLC</target>
        </trans-unit>
        <trans-unit id="44b991a394914f0303f96d96a457d83497af8f65" translate="yes" xml:space="preserve">
          <source>QLC can be used as a database programming language for Mnesia. It includes a notation called &quot;list comprehensions&quot; and can be used to make complex database queries over a set of tables.</source>
          <target state="translated">QLCは、Mnesiaのデータベースプログラミング言語として使用することができます。リスト内包と呼ばれる記法が含まれており、テーブルの集合に対して複雑なデータベースクエリを作成することができます。</target>
        </trans-unit>
        <trans-unit id="2b344639b609596306bc487c87eb37bfda190216" translate="yes" xml:space="preserve">
          <source>QLC can optimize the query compiler for the Mnesia DBMS, essentially making the DBMS more efficient.</source>
          <target state="translated">QLCはMnesia DBMS用のクエリコンパイラを最適化することができ、本質的にDBMSをより効率的にすることができます。</target>
        </trans-unit>
        <trans-unit id="5d2d92876611f40bde581d69101f8fddd8c14363" translate="yes" xml:space="preserve">
          <source>QLC queries can also be used to search &lt;code&gt;Mnesia&lt;/code&gt; tables. By using the function &lt;code&gt;&lt;a href=&quot;mnesia#table-1&quot;&gt;mnesia:table/[1|2]&lt;/a&gt;&lt;/code&gt; as the generator inside a QLC query, you let the query operate on a &lt;code&gt;Mnesia&lt;/code&gt; table. &lt;code&gt;Mnesia&lt;/code&gt;-specific options to &lt;code&gt;mnesia:table/2&lt;/code&gt; are &lt;code&gt;{lock, Lock}&lt;/code&gt;, &lt;code&gt;{n_objects,Integer}&lt;/code&gt;, and &lt;code&gt;{traverse, SelMethod}&lt;/code&gt;:</source>
          <target state="translated">QLCクエリは、 &lt;code&gt;Mnesia&lt;/code&gt; テーブルの検索にも使用できます。関数 &lt;code&gt;&lt;a href=&quot;mnesia#table-1&quot;&gt;mnesia:table/[1|2]&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;Mnesia&lt;/code&gt; クエリ内のジェネレーターとして使用することにより、クエリでMnesiaテーブルを操作できます。 &lt;code&gt;Mnesia&lt;/code&gt; &lt;code&gt;mnesia:table/2&lt;/code&gt; Mnesia固有のオプションは、 &lt;code&gt;{lock, Lock}&lt;/code&gt; 、 &lt;code&gt;{n_objects,Integer}&lt;/code&gt; 、および &lt;code&gt;{traverse, SelMethod}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d2442c21b812ded9c8602b0eb848411eef6d3f41" translate="yes" xml:space="preserve">
          <source>QLC queries can be performed in all these activity contexts (&lt;code&gt;transaction&lt;/code&gt;, &lt;code&gt;sync_transaction&lt;/code&gt;, &lt;code&gt;async_dirty&lt;/code&gt;, &lt;code&gt;sync_dirty&lt;/code&gt;, and &lt;code&gt;ets&lt;/code&gt;). The &lt;code&gt;ets&lt;/code&gt; activity only works if the table has no indexes.</source>
          <target state="translated">QLCクエリは、これらすべてのアクティビティコンテキスト（ &lt;code&gt;transaction&lt;/code&gt; 、 &lt;code&gt;sync_transaction&lt;/code&gt; 、 &lt;code&gt;async_dirty&lt;/code&gt; 、 &lt;code&gt;sync_dirty&lt;/code&gt; 、および &lt;code&gt;ets&lt;/code&gt; ）で実行できます。 &lt;code&gt;ets&lt;/code&gt; テーブルにインデックスがない場合の活動にのみ動作します。</target>
        </trans-unit>
        <trans-unit id="6fdde551c1ae8e6fe45e078d55ddb3f31ce7e09a" translate="yes" xml:space="preserve">
          <source>QLCs are convenient for stating constraints on data from two or more tables. The following example does a natural join on two query handles on position 2:</source>
          <target state="translated">QLCは、2つ以上のテーブルからのデータに対する制約を記述するのに便利です。次の例では、2つのクエリハンドルの位置2に自然結合を行います。</target>
        </trans-unit>
        <trans-unit id="2fb1858154779be9095d34bc86481decea9864b5" translate="yes" xml:space="preserve">
          <source>Qualifiers</source>
          <target state="translated">Qualifiers</target>
        </trans-unit>
        <trans-unit id="28177dc15b26c0a74159857924b18e3df0638648" translate="yes" xml:space="preserve">
          <source>Queries can be sent to the master to determine which node will have the least load.</source>
          <target state="translated">クエリをマスタに送信して、どのノードが最も負荷が少ないかを判断することができます。</target>
        </trans-unit>
        <trans-unit id="594265df0f504d11dc7e03fde007c6624ca2cfba" translate="yes" xml:space="preserve">
          <source>Queries the database to find out the ODBC data types of the columns of the table &lt;code&gt;Table&lt;/code&gt;.</source>
          <target state="translated">データベースを照会して、テーブル &lt;code&gt;Table&lt;/code&gt; の列のODBCデータ型を見つけます。</target>
        </trans-unit>
        <trans-unit id="2412c764d41ab6b9791a2250b7102a18362506f7" translate="yes" xml:space="preserve">
          <source>Query ::= Statement&lt;code&gt;,&lt;/code&gt; ...</source>
          <target state="translated">クエリ:: =ステートメント &lt;code&gt;,&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="c162938e377e38115dc3cedfcf24cb92df1d737c" translate="yes" xml:space="preserve">
          <source>Query List Comprehension (QLC) can be used with Mnesia to produce specialized functions that enhance the operational ability of Mnesia. QLC has its own documentation as part of the OTP documentation set. The main features of QLC when used with Mnesia are as follows:</source>
          <target state="translated">Query List Comprehension (QLC)は、Mnesiaの運用能力を高める特殊な機能を生成するためにMnesiaと一緒に使用することができます。QLCはOTPドキュメントセットの一部として独自のドキュメントを持っています。Mnesiaで使用する場合のQLCの主な機能は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="0d6e12fb5478de8f3fa8e6c09b0ca1974dd2631e" translate="yes" xml:space="preserve">
          <source>Query interface</source>
          <target state="translated">クエリインターフェース</target>
        </trans-unit>
        <trans-unit id="c1792a32d0b77c434cdc1e30d03076a0c0097b22" translate="yes" xml:space="preserve">
          <source>Query interface to Mnesia, ETS, Dets, and so on.</source>
          <target state="translated">Mnesia、ETS、Detsなどへのクエリインターフェース。</target>
        </trans-unit>
        <trans-unit id="966933c9d4fe3603343d28156ae1dd639fce4546" translate="yes" xml:space="preserve">
          <source>Queues are double-ended. The mental picture of a queue is a line of people (items) waiting for their turn. The queue front is the end with the item that has waited the longest. The queue rear is the end an item enters when it starts to wait. If instead using the mental picture of a list, the front is called head and the rear is called tail.</source>
          <target state="translated">行列はダブルエンドです。待ち行列のイメージは、順番を待っている人(アイテム)の列です。キューの前部は、最長の待ち時間を持っているアイテムとの終わりです。キューの後部は、それが待つことを開始したときにアイテムが入る終わりです。代わりにリストの精神的な絵を使用する場合は、フロントはヘッドと呼ばれ、リアはテールと呼ばれます。</target>
        </trans-unit>
        <trans-unit id="a20596c790f832b98307345d7e29739a19f1b37f" translate="yes" xml:space="preserve">
          <source>Quits Erlang. Notice that this option is disabled if Erlang is started with the ignore break, &lt;code&gt;+Bi&lt;/code&gt;, system flag (which can be useful, for example when running a restricted shell, see the next section).</source>
          <target state="translated">Erlangを終了します。Erlangがignore break、 &lt;code&gt;+Bi&lt;/code&gt; 、システムフラグで起動されている場合、このオプションは無効になることに注意してください（たとえば、制限付きシェルを実行する場合に役立ちます。次のセクションを参照してください）。</target>
        </trans-unit>
        <trans-unit id="9e0e35667c233db47de30256c67c29187c2127da" translate="yes" xml:space="preserve">
          <source>RAM memory of 96 MB is recommended to run OTP on Windows NT. A system with less than 64 MB of RAM is not recommended.</source>
          <target state="translated">Windows NT で OTP を実行するには、96 MB の RAM メモリを推奨します。64 MB 未満の RAM を搭載したシステムは推奨されません。</target>
        </trans-unit>
        <trans-unit id="3b330731a188b19fdf61999609e5e9b932bb400b" translate="yes" xml:space="preserve">
          <source>REAL</source>
          <target state="translated">REAL</target>
        </trans-unit>
        <trans-unit id="e243ff0db6962f2860f9daeb7b76706585f6a228" translate="yes" xml:space="preserve">
          <source>RFC 1350, The TFTP Protocol (revision 2)</source>
          <target state="translated">RFC 1350、TFTP プロトコル (リビジョン 2)</target>
        </trans-unit>
        <trans-unit id="1dce0d83a131f276794188635a3dd2c84e8c7eb2" translate="yes" xml:space="preserve">
          <source>RFC 2347, TFTP Option Extension</source>
          <target state="translated">RFC 2347,TFTP オプション拡張</target>
        </trans-unit>
        <trans-unit id="bbc82bb105613050636fa25569250ca1eee846e0" translate="yes" xml:space="preserve">
          <source>RFC 2348, TFTP Blocksize Option</source>
          <target state="translated">RFC 2348,TFTP ブロックサイズオプション</target>
        </trans-unit>
        <trans-unit id="58b78666477f6c30faf4308df7d8a596afe3e335" translate="yes" xml:space="preserve">
          <source>RFC 2349, TFTP Timeout Interval and Transfer Size Options</source>
          <target state="translated">RFC 2349,TFTP タイムアウト間隔と転送サイズのオプション</target>
        </trans-unit>
        <trans-unit id="59a4f7837e70ac5999135a8d3596c58b849ab6fc" translate="yes" xml:space="preserve">
          <source>RFC 2830</source>
          <target state="translated">RFC2830</target>
        </trans-unit>
        <trans-unit id="4b90d6cab31b63063971c3605ede011c0f69a6ae" translate="yes" xml:space="preserve">
          <source>RFC 4510 - RFC 4519</source>
          <target state="translated">RFC 4510-RFC 4519</target>
        </trans-unit>
        <trans-unit id="e045a28c1bf7b6ecab4874ab74282cfdb4c62672" translate="yes" xml:space="preserve">
          <source>RFC 4716 SSH Public-Key Files</source>
          <target state="translated">RFC 4716 SSH 公開鍵ファイル</target>
        </trans-unit>
        <trans-unit id="d99facf0134d096b722a33331e4fe8b6452b7572" translate="yes" xml:space="preserve">
          <source>RFC 4716 SSH files looks confusingly like PEM files, but there are some differences:</source>
          <target state="translated">RFC 4716 SSH ファイルは PEM ファイルと紛らわしいように見えますが、いくつかの違いがあります。</target>
        </trans-unit>
        <trans-unit id="1da6885bf9a20f8d0085f4bb97f71554cbe07e08" translate="yes" xml:space="preserve">
          <source>RFC 6733 is unclear about the semantics of the M-bit. One the one hand, the CCF specification in section 3.2 documents AVP in a command grammar as meaning &lt;strong&gt;any&lt;/strong&gt; arbitrary AVP; on the other hand, 1.3.4 states that AVPs setting the M-bit cannot be added to an existing command: the modified command must instead be placed in a new Diameter application.</source>
          <target state="translated">RFC 6733は、Mビットのセマンティクスについては不明です。一つ一方、意味としてコマンド文法セクション3.2ドキュメントAVPでCCF仕様&lt;strong&gt;任意の&lt;/strong&gt;任意のAVPを。一方、1.3.4では、Mビットを設定するAVPを既存のコマンドに追加することはできません。変更されたコマンドは、代わりに新しいDiameterアプリケーションに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="1a00bbd3345e1dc4481f48b2eb823bd6a52b39bc" translate="yes" xml:space="preserve">
          <source>RFC1155, 1157, 1212 and 1215 (SNMPv1)</source>
          <target state="translated">RFC1155、1157、1212、1215 (SNMPv1)</target>
        </trans-unit>
        <trans-unit id="776412993c8f2099a41ff3173b993a46e8d2ffc2" translate="yes" xml:space="preserve">
          <source>RFC1157, RFC1905 and/or RFC2272 should be studied carefully before using this module, &lt;code&gt;snmp_pdus&lt;/code&gt;.</source>
          <target state="translated">このモジュール &lt;code&gt;snmp_pdus&lt;/code&gt; を使用する前に、RFC1157、RFC1905、RFC2272を注意深く検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="1168b5a47f86b0c1ab1cefa353e2e20f382b649a" translate="yes" xml:space="preserve">
          <source>RFC1901-1907 (SNMPv2c)</source>
          <target state="translated">RFC1901-1907 (SNMPv2c)</target>
        </trans-unit>
        <trans-unit id="8f47f36a71eeb2e19619fed1c9a260fe790b894f" translate="yes" xml:space="preserve">
          <source>RFC1908, 2089 (coexistence between SNMPv1 and SNMPv2)</source>
          <target state="translated">RFC1908,2089 (SNMPv1とSNMPv2の共存)</target>
        </trans-unit>
        <trans-unit id="b65e8c8967997cf54ae07d33911cd338bcfd5fea" translate="yes" xml:space="preserve">
          <source>RFC2271, RFC2273 (SNMP std MIBs)</source>
          <target state="translated">RFC2271,RFC2273 (SNMP標準MIB)</target>
        </trans-unit>
        <trans-unit id="0af95ef1de17ae695b66479ee11b7103aa465be4" translate="yes" xml:space="preserve">
          <source>RIPEMD</source>
          <target state="translated">RIPEMD</target>
        </trans-unit>
        <trans-unit id="56d91d770f6fd64e188020f40d1d915be6e046dc" translate="yes" xml:space="preserve">
          <source>RSA</source>
          <target state="translated">RSA</target>
        </trans-unit>
        <trans-unit id="2eaf7255c3d0769be8db606fdc4cb3c75a6bc45e" translate="yes" xml:space="preserve">
          <source>RSA Private Key with Password</source>
          <target state="translated">パスワード付きRSA秘密鍵</target>
        </trans-unit>
        <trans-unit id="6ea4c0026f066dc5abcb51545da113f964141a7c" translate="yes" xml:space="preserve">
          <source>RSA is available with all OpenSSL versions compatible with Erlang CRYPTO if not disabled by configuration. To dynamically check availability, check that the atom &lt;code&gt;rsa&lt;/code&gt; is present in the list returned by &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(public_keys)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">RSAは、構成によって無効にされていない場合、ErlangCRYPTOと互換性のあるすべてのOpenSSLバージョンで使用できます。可用性を動的にチェックするには、 &lt;code&gt;&lt;a href=&quot;crypto#supports-1&quot;&gt;crypto:supports(public_keys)&lt;/a&gt;&lt;/code&gt; によって返されるリストにアトム &lt;code&gt;rsa&lt;/code&gt; が存在することを確認します。</target>
        </trans-unit>
        <trans-unit id="7048ce67ecec532f7cc5dce118117bd7056bb418" translate="yes" xml:space="preserve">
          <source>RSA key generation is only available if the runtime was built with dirty scheduler support. Otherwise, attempting to generate an RSA key will raise exception &lt;code&gt;error:notsup&lt;/code&gt;.</source>
          <target state="translated">RSAキーの生成は、ランタイムがダーティスケジューラサポートを使用して構築されている場合にのみ使用できます。そうしないと、RSAキーを生成しようとすると、例外 &lt;code&gt;error:notsup&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f8914ca9f86bbe9f10be1026bac810afc6078c5e" translate="yes" xml:space="preserve">
          <source>RSA key generation is only available if the runtime was built with dirty scheduler support. Otherwise, attempting to generate an RSA key will throw exception &lt;code&gt;error:notsup&lt;/code&gt;.</source>
          <target state="translated">RSAキー生成は、ランタイムがダーティスケジューラサポートでビルドされている場合にのみ使用できます。そうでない場合、RSAキーを生成しようとすると、例外 &lt;code&gt;error:notsup&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="f8a99f35d61ceca4837d76f44bfe87e13e69d5a3" translate="yes" xml:space="preserve">
          <source>RSASSA-PSS signature schemes</source>
          <target state="translated">RSASSA-PSS署名方式</target>
        </trans-unit>
        <trans-unit id="05d92fe0db12744e04d5c42042cf1cefb4d02e52" translate="yes" xml:space="preserve">
          <source>Raises an &lt;code&gt;undef&lt;/code&gt; exception with a stacktrace, indicating that &lt;code&gt;Module:Function/N&lt;/code&gt; is undefined.</source>
          <target state="translated">レイズ &lt;code&gt;undef&lt;/code&gt; ことを示す、スタックトレースと例外を &lt;code&gt;Module:Function/N&lt;/code&gt; 定義されていません。</target>
        </trans-unit>
        <trans-unit id="459599ff17e3d64ffa950ad44a266ffa3f086014" translate="yes" xml:space="preserve">
          <source>Range = 1..2^32, Hash = 1..Range</source>
          <target state="translated">Range=1...2^32,Hash=1...Range</target>
        </trans-unit>
        <trans-unit id="a7f829a993da34443f81cc1e6ec49f9944aa415e" translate="yes" xml:space="preserve">
          <source>Ranges of taken salt (if any) and returned value depend on the hash type.</source>
          <target state="translated">取られた salt (もしあれば)の範囲と返される値はハッシュ型に依存します。</target>
        </trans-unit>
        <trans-unit id="4739ff05fa329071f045d72b76e29a97728b5a87" translate="yes" xml:space="preserve">
          <source>Ranges operate in the collating sequence of character values. They can also be used for characters specified numerically, for example, [\000-\037]. Ranges can include any characters that are valid for the current mode.</source>
          <target state="translated">範囲は、文字値の照合順序で動作します。それらはまた、数値的に指定された文字、例えば、[\000-037]のために使用することができます。範囲は、現在のモードで有効な任意の文字を含むことができる。</target>
        </trans-unit>
        <trans-unit id="5b944ab1d190ffab8bdf5f92747b67f829f474fa" translate="yes" xml:space="preserve">
          <source>Rarely used. Determines the ACK time (specified by &lt;code&gt;assoc_value&lt;/code&gt;, in milliseconds) for the specified association or the whole endpoint if &lt;code&gt;assoc_value = 0&lt;/code&gt; (default).</source>
          <target state="translated">ほとんど使われません。 &lt;code&gt;assoc_value = 0&lt;/code&gt; （デフォルト）の場合、指定された関連付けまたはエンドポイント全体のACK時間（ミリ秒単位で &lt;code&gt;assoc_value&lt;/code&gt; で指定）を決定します。</target>
        </trans-unit>
        <trans-unit id="acb7267dc157944fbc4f68b9244986a8dd01d029" translate="yes" xml:space="preserve">
          <source>Rather than reading the &lt;code&gt;Emakefile&lt;/code&gt; specify configuration explicitly.</source>
          <target state="translated">&lt;code&gt;Emakefile&lt;/code&gt; を読み取るのではなく、構成を明示的に指定します。</target>
        </trans-unit>
        <trans-unit id="47883c793c16264c0bf3a9f6e7125312a6498763" translate="yes" xml:space="preserve">
          <source>Raw filenames were introduced together with Unicode filename support in ERTS 5.8.2 (Erlang/OTP R14B01). The reason &quot;raw filenames&quot; were introduced in the system was to be able to represent filenames, specified in different encodings on the same system, consistently. It can seem practical to have the VM automatically translate a filename that is not in UTF-8 to a list of Unicode characters, but this would open up for both duplicate filenames and other inconsistent behavior.</source>
          <target state="translated">生のファイル名は ERTS 5.8.2 (Erlang/OTP R14B01)で Unicode ファイル名のサポートとともに導入されました。生のファイル名」がシステムに導入された理由は、同じシステム上で異なるエンコーディングで指定されたファイル名を一貫して表現できるようにするためです。UTF-8ではないファイル名を自動的にUnicode文字のリストに変換することは実用的に思えますが、これはファイル名の重複や他の一貫性のない動作の原因になります。</target>
        </trans-unit>
        <trans-unit id="795061f45c0310d22fcc247f07c3b4e23fa83463" translate="yes" xml:space="preserve">
          <source>Raw files use the file system of the host machine of the node. For normal files (non-raw), the file server is used to find the files, and if the node is running its file server as slave to the file server of another node, and the other node runs on some other host machine, they can have different file systems. However, this is seldom a problem.</source>
          <target state="translated">生ファイルは、ノードのホストマシンのファイルシステムを使用します。通常のファイル(非ローファイル)の場合は、ファイルサーバがファイルを見つけるために使用され、ノードがそのファイルサーバを他のノードのファイルサーバのスレーブとして実行していて、他のノードが他のホストマシン上で実行されている場合、それらは異なるファイルシステムを持つことができます。しかし、これが問題になることはめったにありません。</target>
        </trans-unit>
        <trans-unit id="4c84575df9844c415b455e79411320007894aa74" translate="yes" xml:space="preserve">
          <source>Raw socket options, such as &lt;code&gt;packet&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; must not be specified on the command line.</source>
          <target state="translated">&lt;code&gt;packet&lt;/code&gt; や &lt;code&gt;size&lt;/code&gt; などの生のソケットオプションは、コマンドラインで指定しないでください。</target>
        </trans-unit>
        <trans-unit id="1a1608e0a1ead364bb6ddf1ef14e4576861c85e2" translate="yes" xml:space="preserve">
          <source>Re-Auth-Answer</source>
          <target state="translated">Re-Auth-Answer</target>
        </trans-unit>
        <trans-unit id="cea1207d9889c12a36609f11fca3aa3647d57966" translate="yes" xml:space="preserve">
          <source>Re-Auth-Request</source>
          <target state="translated">Re-Auth-Request</target>
        </trans-unit>
        <trans-unit id="16429bb7f0689c5c487b46f0ec26c0177f1ef94a" translate="yes" xml:space="preserve">
          <source>Re-Auth-Request-Type AVP</source>
          <target state="translated">Re-Auth-Request-Type AVP</target>
        </trans-unit>
        <trans-unit id="7bc3f1950022396c1453ed6991b28afe5cc3b167" translate="yes" xml:space="preserve">
          <source>Re-Auth-Request-Type AVP Values</source>
          <target state="translated">Re-Auth-Request-Type AVP値</target>
        </trans-unit>
        <trans-unit id="77e1d4c89a77db083b40468156c72a44aaeb8a27" translate="yes" xml:space="preserve">
          <source>Re-defining the match operation</source>
          <target state="translated">マッチ操作の再定義</target>
        </trans-unit>
        <trans-unit id="33eb91045c8eb5bfc8955b6b24ea62f8a0bae9e0" translate="yes" xml:space="preserve">
          <source>Re-keying</source>
          <target state="translated">Re-keying</target>
        </trans-unit>
        <trans-unit id="19c1fde66df90cd89fae9d3e8cfddd3b6967eaae" translate="yes" xml:space="preserve">
          <source>Re-send a megaco message.</source>
          <target state="translated">megacoのメッセージを再送します。</target>
        </trans-unit>
        <trans-unit id="8f461656f4f97af8310e6bbba806a6dfac4836a2" translate="yes" xml:space="preserve">
          <source>Re-send of messages, handling pending transactions, acknowledgements etc. is handled automatically by the Megaco application but the user is free to override the default behaviour by the various configuration possibilities. See megaco:update_user_info/2 and megaco:update_conn_info/2 about the possibilities.</source>
          <target state="translated">メッセージの再送信、保留中のトランザクションの処理、謝辞などはMegacoアプリケーションによって自動的に処理されますが、ユーザは様々な設定の可能性によってデフォルトの動作を自由に上書きすることができます。可能性については megaco:update_user_info/2 と megaco:update_conn_info/2 を参照してください。</target>
        </trans-unit>
        <trans-unit id="cc298594d701205369ec5adc40340226d9806b5c" translate="yes" xml:space="preserve">
          <source>Read a compiled mib.</source>
          <target state="translated">コンパイルされたミブを読む。</target>
        </trans-unit>
        <trans-unit id="d29eaf7d5b0696daa9e2eb7af2a4eda9b4483580" translate="yes" xml:space="preserve">
          <source>Read a file dump produced by &lt;code&gt;&lt;a href=&quot;#to_file-1&quot;&gt; to_file(Filename)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#to_file-1&quot;&gt; to_file(Filename)&lt;/a&gt;&lt;/code&gt; によって生成されたファイルダンプを読み取ります。</target>
        </trans-unit>
        <trans-unit id="2d219c0f4eafc3f8960679e044824d76e3076ea1" translate="yes" xml:space="preserve">
          <source>Read a file dump produced by &lt;code&gt;&lt;a href=&quot;#to_file-1&quot;&gt;to_file(Filename)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#to_file-1&quot;&gt;to_file(Filename)&lt;/a&gt;&lt;/code&gt; によって生成されたファイルダンプを読み取ります。</target>
        </trans-unit>
        <trans-unit id="094a01892ae368406b5fc03359c07f6767d0465e" translate="yes" xml:space="preserve">
          <source>Read a record from the mib-storage table.</source>
          <target state="translated">mib-storage テーブルからレコードを読み込みます。</target>
        </trans-unit>
        <trans-unit id="f6ff77a0a3df9a2261cdc95790a6b678efe244aa" translate="yes" xml:space="preserve">
          <source>Read atomic value.</source>
          <target state="translated">原子値を読み込みます。</target>
        </trans-unit>
        <trans-unit id="fae42d0f132843e9c05600efe03222c799da3c90" translate="yes" xml:space="preserve">
          <source>Read back a stored value:</source>
          <target state="translated">保存されている値を読み出します。</target>
        </trans-unit>
        <trans-unit id="27567215dc4334b10c37b9ca844dcffd0d6a48fd" translate="yes" xml:space="preserve">
          <source>Read counter value.</source>
          <target state="translated">カウンタの値を読み込みます。</target>
        </trans-unit>
        <trans-unit id="9b417049ca594705f8e80c3117ca276b4d1ab2aa" translate="yes" xml:space="preserve">
          <source>Read data on the connected socket identified by &lt;code&gt;ctx&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ctx&lt;/code&gt; で識別される接続されたソケットのデータを読み取ります。</target>
        </trans-unit>
        <trans-unit id="8d5d990ecf5aa325dd10c8954d8f4a8821e157b8" translate="yes" xml:space="preserve">
          <source>Read locks an rwlock. The calling thread is blocked until the rwlock has been read locked. A thread that currently has read or read/write locked the rwlock &lt;strong&gt;cannot&lt;/strong&gt; lock the same rwlock again.</source>
          <target state="translated">読み取りはrwlockをロックします。呼び出しスレッドは、rwlockが読み取りロックされるまでブロックされます。現在rwlock &lt;strong&gt;が&lt;/strong&gt;読み取りまたは読み取り/書き込みロックしているスレッド&lt;strong&gt;は&lt;/strong&gt;、同じrwlockを再度ロックする&lt;strong&gt;ことはできません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="76ccfbe9ca99e346c048962da6d197423a7cbd46" translate="yes" xml:space="preserve">
          <source>Read locks can be shared. This means that if one transaction manages to acquire a read lock on an item, other transactions can also acquire a read lock on the same item. However, if someone has a read lock, no one can acquire a write lock at the same item. If someone has a write lock, no one can acquire either a read lock or a write lock at the same item.</source>
          <target state="translated">リード・ロックは共有することができます。これは、あるトランザクションがアイテムのリードロックを取得することに成功した場合、他のトランザクションも同じアイテムのリードロックを取得することができることを意味します。しかし、誰かがリード・ロックを持っている場合、誰も同じアイテムのライト・ロックを取得することはできない。誰かが書き込みロックを持っている場合、誰も同じアイテムで読み取りロックも書き込みロックも取得できない。</target>
        </trans-unit>
        <trans-unit id="456c28f5533d4eb09cd97080da5711f1478a5dcf" translate="yes" xml:space="preserve">
          <source>Read more about behaviours and callback modules in &lt;code&gt; OTP Design Principles&lt;/code&gt;.</source>
          <target state="translated">動作とコールバックモジュールの詳細については、 &lt;code&gt; OTP Design Principles&lt;/code&gt; をご覧ください。</target>
        </trans-unit>
        <trans-unit id="ab3b8c2401387cd20afc043cfe4cdb6d7fad5178" translate="yes" xml:space="preserve">
          <source>Read more about behaviours and callback modules in &lt;code&gt;OTP Design Principles&lt;/code&gt;.</source>
          <target state="translated">動作とコールバックモジュールの詳細については、 &lt;code&gt;OTP Design Principles&lt;/code&gt; をご覧ください。</target>
        </trans-unit>
        <trans-unit id="61362260d54488c95a5f54ff4abb862733375e24" translate="yes" xml:space="preserve">
          <source>Read more about funs in &lt;code&gt;&lt;a href=&quot;expressions#funs&quot;&gt; Fun Expressions&lt;/a&gt;&lt;/code&gt;. For more examples, see &lt;code&gt; Programming Examples&lt;/code&gt;.</source>
          <target state="translated">中低速運行についてもっと読む &lt;code&gt;&lt;a href=&quot;expressions#funs&quot;&gt; Fun Expressions&lt;/a&gt;&lt;/code&gt; 。その他の例については、 &lt;code&gt; Programming Examples&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="07143977457b982ffd87794e7909594ac2808846" translate="yes" xml:space="preserve">
          <source>Read more about funs in &lt;code&gt;&lt;a href=&quot;expressions#funs&quot;&gt;Fun Expressions&lt;/a&gt;&lt;/code&gt;. For more examples, see &lt;code&gt;Programming Examples&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;expressions#funs&quot;&gt;Fun Expressions&lt;/a&gt;&lt;/code&gt; の funsの詳細をご覧ください。その他の例については、 &lt;code&gt;Programming Examples&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="5940b2687eed5e9f65b97bfd87d49fb0609ebc83" translate="yes" xml:space="preserve">
          <source>Read more about maps in &lt;code&gt;&lt;a href=&quot;expressions#map_expressions&quot;&gt; Map Expressions&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">マップの詳細については、 &lt;code&gt;&lt;a href=&quot;expressions#map_expressions&quot;&gt; Map Expressions&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
