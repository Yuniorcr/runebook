<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="erlang">
    <body>
      <group id="erlang">
        <trans-unit id="c292e2a63f9af9f0309b2c4849a8d45ddaf2d9b9" translate="yes" xml:space="preserve">
          <source>Sending a message to a pid never fails, even if the pid identifies a non-existing process.</source>
          <target state="translated">pid へのメッセージの送信は、たとえ pid が存在しないプロセスを識別していたとしても、失敗することはありません。</target>
        </trans-unit>
        <trans-unit id="29ac6cce0e5098ad64850007168cdad9fb21d8c4" translate="yes" xml:space="preserve">
          <source>Sending a request over a peer connection on a remote node is less efficient than sending it over a local connection. It may be preferable to make use of the &lt;code&gt;&lt;a href=&quot;#service_opt&quot;&gt;service_opt()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;restrict_connections&lt;/code&gt; and maintain a dedicated connection on each node from which requests are sent.</source>
          <target state="translated">リモートノードのピア接続を介して要求を送信することは、ローカル接続を介して送信するよりも効率的ではありません。 &lt;code&gt;&lt;a href=&quot;#service_opt&quot;&gt;service_opt()&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;restrict_connections&lt;/code&gt; を利用して、リクエストの送信元である各ノードで専用接続を維持することが望ましい場合があります。</target>
        </trans-unit>
        <trans-unit id="3bcf8eb70abf6b1e60c4f6aa9fda4e892ab0529a" translate="yes" xml:space="preserve">
          <source>Sending and receiving Erlang messages</source>
          <target state="translated">Erlangメッセージの送受信</target>
        </trans-unit>
        <trans-unit id="f1198d0d25231b985491ef306d5c4a89c06c725b" translate="yes" xml:space="preserve">
          <source>Sending node, process/port and message term</source>
          <target state="translated">送信ノード、プロセス/ポート、メッセージ用語</target>
        </trans-unit>
        <trans-unit id="998e351e56b8e33052260f9b3f69633c52f141c8" translate="yes" xml:space="preserve">
          <source>Sending segmented messages:</source>
          <target state="translated">セグメント化されたメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="444a45cb9a6faa18eaf863392c1d10b290f21495" translate="yes" xml:space="preserve">
          <source>Sending the &lt;code&gt;SIGUSR1&lt;/code&gt; signal to an Erlang machine (Unix only) forces a crash dump. This slogan reflects that the Erlang machine crash-dumped because of receiving that signal.</source>
          <target state="translated">&lt;code&gt;SIGUSR1&lt;/code&gt; シグナルをErlangマシン（UNIXのみ）に送信すると、強制的にクラッシュダンプが発生します。このスローガンは、その信号を受信したためにErlangマシンがクラッシュダンプしたことを反映しています。</target>
        </trans-unit>
        <trans-unit id="a57cb38242fec142c3fcf43b28be05dff5d819a7" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;Bytes&lt;/code&gt; from the file referenced by &lt;code&gt;RawFile&lt;/code&gt; beginning at &lt;code&gt;Offset&lt;/code&gt; to &lt;code&gt;Socket&lt;/code&gt;. Returns &lt;code&gt;{ok, BytesSent}&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;. If &lt;code&gt;Bytes&lt;/code&gt; is set to &lt;code&gt;0&lt;/code&gt; all data after the specified &lt;code&gt;Offset&lt;/code&gt; is sent.</source>
          <target state="translated">送信 &lt;code&gt;Bytes&lt;/code&gt; 参照するファイルから &lt;code&gt;RawFile&lt;/code&gt; から始まる &lt;code&gt;Offset&lt;/code&gt; に &lt;code&gt;Socket&lt;/code&gt; 。成功すると &lt;code&gt;{ok, BytesSent}&lt;/code&gt; 返し、それ以外の場合は &lt;code&gt;{error, Reason}&lt;/code&gt; 返します。 &lt;code&gt;Bytes&lt;/code&gt; が &lt;code&gt;0&lt;/code&gt; に設定されている場合、指定された &lt;code&gt;Offset&lt;/code&gt; 後のすべてのデータが送信されます。</target>
        </trans-unit>
        <trans-unit id="41d5bb2c90de6596d2eb55e87cee5af3d5e0d821" translate="yes" xml:space="preserve">
          <source>Sends &lt;code&gt;Data&lt;/code&gt; to the port.</source>
          <target state="translated">&lt;code&gt;Data&lt;/code&gt; をポートに送信します。</target>
        </trans-unit>
        <trans-unit id="fccebd66486b6b87d1f00d078ac674ff79fd9307" translate="yes" xml:space="preserve">
          <source>Sends EOF on channel &lt;code&gt;ChannelId&lt;/code&gt;.</source>
          <target state="translated">チャネル &lt;code&gt;ChannelId&lt;/code&gt; で EOFを送信します。</target>
        </trans-unit>
        <trans-unit id="bf1001dd99ff6f64248ef05d77aef7030f181d81" translate="yes" xml:space="preserve">
          <source>Sends a &lt;code&gt;Data&lt;/code&gt; message over an existing association and specified stream.</source>
          <target state="translated">既存の関連付けと指定されたストリームを介して &lt;code&gt;Data&lt;/code&gt; メッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="7261a65308fb98fab49626b538f6d1bc1c245d1a" translate="yes" xml:space="preserve">
          <source>Sends a NETCONF &lt;code&gt;rpc&lt;/code&gt; request to the server.</source>
          <target state="translated">NETCONF &lt;code&gt;rpc&lt;/code&gt; 要求をサーバーに送信します。</target>
        </trans-unit>
        <trans-unit id="38e70e1f59e12808e9579b02e98e9757ab623a9e" translate="yes" xml:space="preserve">
          <source>Sends a Telnet command and returns immediately (uses a format string and a list of arguments to build the command).</source>
          <target state="translated">Telnetコマンドを送信してすぐに戻ります(コマンドを構築するためにフォーマット文字列と引数のリストを使用します)。</target>
        </trans-unit>
        <trans-unit id="83d8c23cb4376be7992d249305da5cba4d9f3b72" translate="yes" xml:space="preserve">
          <source>Sends a Telnet command and returns immediately.</source>
          <target state="translated">Telnet コマンドを送信し、すぐに戻ります。</target>
        </trans-unit>
        <trans-unit id="19082caa1729b273bc9cc0e4eea68b871585d379" translate="yes" xml:space="preserve">
          <source>Sends a Telnet command and waits for prompt (uses a format string and a list of arguments to build the command).</source>
          <target state="translated">Telnet コマンドを送信し、プロンプトを待ちます (フォーマット文字列と引数のリストを使用してコマンドを構築します)。</target>
        </trans-unit>
        <trans-unit id="0a2005ff59f24226083c61ca19f6818691744257" translate="yes" xml:space="preserve">
          <source>Sends a command through Telnet and waits for prompt.</source>
          <target state="translated">Telnet経由でコマンドを送信し、プロンプトを待ちます。</target>
        </trans-unit>
        <trans-unit id="90d379b9e4a73699023ae63093671e3c84d26338" translate="yes" xml:space="preserve">
          <source>Sends a file over FTP.</source>
          <target state="translated">FTPでファイルを送信します。</target>
        </trans-unit>
        <trans-unit id="c70e14c02c2aecb0b694f5d4ce681132e93df400" translate="yes" xml:space="preserve">
          <source>Sends a message and returns &lt;code&gt;Msg&lt;/code&gt;. This is the same as using the &lt;code&gt; send operator&lt;/code&gt;: &lt;code&gt;Dest ! Msg&lt;/code&gt;.</source>
          <target state="translated">メッセージを送信し、 &lt;code&gt;Msg&lt;/code&gt; を返します。これは、 &lt;code&gt; send operator&lt;/code&gt; を使用するのと同じ &lt;code&gt;Dest ! Msg&lt;/code&gt; ：Dest！メッセージ。</target>
        </trans-unit>
        <trans-unit id="32a783de449556f411e3719d4440d455e2aec8f0" translate="yes" xml:space="preserve">
          <source>Sends a message and returns &lt;code&gt;Msg&lt;/code&gt;. This is the same as using the &lt;code&gt;send operator&lt;/code&gt;: &lt;code&gt;Dest ! Msg&lt;/code&gt;.</source>
          <target state="translated">メッセージを送信し、 &lt;code&gt;Msg&lt;/code&gt; を返します。これは、使用するのと同じである &lt;code&gt;send operator&lt;/code&gt; ： &lt;code&gt;Dest ! Msg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e737bf5ca4a6e58bb46eb491dc4d98e8f4f9bc3" translate="yes" xml:space="preserve">
          <source>Sends a message on a connection.</source>
          <target state="translated">接続でメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="d6c18ead8d836f36f7fe9abece9db9344f11d47f" translate="yes" xml:space="preserve">
          <source>Sends a message on a socket. The send handle is obtained by megaco_udp:create_send_handle/3. Increments the NumOutMessages and NumOutOctets counters if message successfully sent. In case of a failure to send, the NumErrors counter is &lt;strong&gt;not&lt;/strong&gt; incremented. This is done elsewhere in the megaco app.</source>
          <target state="translated">ソケットでメッセージを送信します。送信ハンドルは、megaco_udp：create_send_handle / 3によって取得されます。メッセージが正常に送信された場合、NumOutMessagesおよびNumOutOctetsカウンターを増分します。送信に失敗した場合、NumErrorsカウンターは増加し&lt;strong&gt;ません&lt;/strong&gt;。これは、megacoアプリの他の場所で行われます。</target>
        </trans-unit>
        <trans-unit id="9bc2a8776012822c44b929c24970b34d8ba658ec" translate="yes" xml:space="preserve">
          <source>Sends a message to a process.</source>
          <target state="translated">プロセスにメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="b8b2a440063172ede5825159b4de4c1873e19be0" translate="yes" xml:space="preserve">
          <source>Sends a message to all registered subscribers.</source>
          <target state="translated">登録されているすべての購読者にメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="618bf8fa508e724a66f87142604142c99c463f1b" translate="yes" xml:space="preserve">
          <source>Sends a monitor request of type &lt;code&gt;Type&lt;/code&gt; to the entity identified by &lt;code&gt;Item&lt;/code&gt;. If the monitored entity does not exist or it changes monitored state, the caller of &lt;code&gt;monitor/2&lt;/code&gt; is notified by a message on the following format:</source>
          <target state="translated">タイプ &lt;code&gt;Type&lt;/code&gt; の監視リクエストを &lt;code&gt;Item&lt;/code&gt; で識別されるエンティティに送信します。監視対象のエンティティが存在しないか、監視対象の状態が変化した場合、 &lt;code&gt;monitor/2&lt;/code&gt; の呼び出し元は、次の形式のメッセージで通知されます。</target>
        </trans-unit>
        <trans-unit id="85fd25da87ba98fc21b2b3ba79c5f9669f36d785" translate="yes" xml:space="preserve">
          <source>Sends a packet on a socket.</source>
          <target state="translated">ソケット上でパケットを送信します。</target>
        </trans-unit>
        <trans-unit id="3a8256d0a01ae48f4ae2facf5b21aca79262fc4c" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified &lt;code&gt;Destination&lt;/code&gt; with ancillary data &lt;code&gt;AncData&lt;/code&gt;.</source>
          <target state="translated">補助データ &lt;code&gt;AncData&lt;/code&gt; を使用して、指定された &lt;code&gt;Destination&lt;/code&gt; パケットを送信します。</target>
        </trans-unit>
        <trans-unit id="9d0860242a0e4fc678a5f0e61a49de6ed3339002" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified &lt;code&gt;Destination&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Destination&lt;/code&gt; パケットを送信します。</target>
        </trans-unit>
        <trans-unit id="44291254eabd0d7a4d77dbff42f787794d8c696f" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified &lt;code&gt;Destination&lt;/code&gt;. Since &lt;code&gt;Destination&lt;/code&gt; is complete, &lt;code&gt;PortZero&lt;/code&gt; is redundant and has to be &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Destination&lt;/code&gt; パケットを送信します。以来 &lt;code&gt;Destination&lt;/code&gt; 完了すると、 &lt;code&gt;PortZero&lt;/code&gt; は冗長であり、でなければなら &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f1a22fdc3fdd94703e349f9e149bff0145349ed1" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified &lt;code&gt;Host&lt;/code&gt; and &lt;code&gt;Port&lt;/code&gt;, with ancillary data &lt;code&gt;AncData&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Host&lt;/code&gt; と &lt;code&gt;Port&lt;/code&gt; に、補助データ &lt;code&gt;AncData&lt;/code&gt; を使用してパケットを送信します。</target>
        </trans-unit>
        <trans-unit id="182ce73ce95fb784f0c7c5f2e7dd254f992ec2d6" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified &lt;code&gt;Host&lt;/code&gt; and &lt;code&gt;Port&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;Host&lt;/code&gt; と &lt;code&gt;Port&lt;/code&gt; パケットを送信します。</target>
        </trans-unit>
        <trans-unit id="2e8f6fd072383efae278f3a3987d40724ec0db85" translate="yes" xml:space="preserve">
          <source>Sends a packet to the specified address and port. Argument &lt;code&gt;Address&lt;/code&gt; can be a hostname or a socket address.</source>
          <target state="translated">指定されたアドレスとポートにパケットを送信します。引数 &lt;code&gt;Address&lt;/code&gt; は、ホスト名またはソケットアドレスを指定できます。</target>
        </trans-unit>
        <trans-unit id="e65a9b0ed6d2891dc68f3014f216bc475e43a9fa" translate="yes" xml:space="preserve">
          <source>Sends a request to event handler &lt;code&gt;Handler&lt;/code&gt; installed in event manager &lt;code&gt;EventMgrRef&lt;/code&gt; and returns a handle &lt;code&gt;RequestId&lt;/code&gt;. The return value &lt;code&gt;RequestId&lt;/code&gt; shall later be used with &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt; wait_response/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt; check_response/2&lt;/a&gt;&lt;/code&gt; in the same process to fetch the actual result of the request.</source>
          <target state="translated">イベントマネージャー &lt;code&gt;EventMgrRef&lt;/code&gt; にインストールされているイベントハンドラー &lt;code&gt;Handler&lt;/code&gt; リクエストを送信し、ハンドル &lt;code&gt;RequestId&lt;/code&gt; を返します。戻り値 &lt;code&gt;RequestId&lt;/code&gt; は、後で同じプロセスで &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt; wait_response/2&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt; check_response/2&lt;/a&gt;&lt;/code&gt; とともに使用され、要求の実際の結果をフェッチします。</target>
        </trans-unit>
        <trans-unit id="e073b19b459dfe1139aefa37e319b98ecec9da97" translate="yes" xml:space="preserve">
          <source>Sends a request to execute a predefined subsystem.</source>
          <target state="translated">定義済みのサブシステムを実行するための要求を送信します。</target>
        </trans-unit>
        <trans-unit id="8e61db569d2ea1904d6ce7914d2984f0fa53fd16" translate="yes" xml:space="preserve">
          <source>Sends a request to get the specified event streams.</source>
          <target state="translated">指定されたイベントストリームを取得するためのリクエストを送信します。</target>
        </trans-unit>
        <trans-unit id="1c02871669715c5df37f632bded166d0d6ce6c14" translate="yes" xml:space="preserve">
          <source>Sends a request to the &lt;code&gt;ServerRef&lt;/code&gt; of the &lt;code&gt;gen_server&lt;/code&gt; process and returns a handle &lt;code&gt;RequestId&lt;/code&gt;. The return value &lt;code&gt;RequestId&lt;/code&gt; shall later be used with &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt; wait_response/2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt; check_response/2&lt;/a&gt;&lt;/code&gt; to fetch the actual result of the request.</source>
          <target state="translated">&lt;code&gt;gen_server&lt;/code&gt; プロセスの &lt;code&gt;ServerRef&lt;/code&gt; に要求を送信し、ハンドル &lt;code&gt;RequestId&lt;/code&gt; を返します。戻り値 &lt;code&gt;RequestId&lt;/code&gt; は、後で &lt;code&gt;&lt;a href=&quot;#wait_response-2&quot;&gt; wait_response/2&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#check_response-2&quot;&gt; check_response/2&lt;/a&gt;&lt;/code&gt; とともに使用して、要求の実際の結果をフェッチします。</target>
        </trans-unit>
        <trans-unit id="25253afd5a685271172f0b86f55f00f2c8ceb4b6" translate="yes" xml:space="preserve">
          <source>Sends a request to the &lt;code&gt;gen_statem&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; and returns a handle &lt;code&gt;RequestId&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; に要求を送信し、ハンドル &lt;code&gt;RequestId&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="61fd8443642476c67011c6c794b85a9208da6f4e" translate="yes" xml:space="preserve">
          <source>Sends a synchronous notification of type &lt;code&gt;Name&lt;/code&gt; with &lt;code&gt;Data&lt;/code&gt; to the &lt;code&gt;Common Test&lt;/code&gt; event manager. This can later be caught by any installed event manager.</source>
          <target state="translated">タイプの同期通知送信 &lt;code&gt;Name&lt;/code&gt; と &lt;code&gt;Data&lt;/code&gt; に &lt;code&gt;Common Test&lt;/code&gt; イベントマネージャを。これは後で、インストールされているイベントマネージャでキャッチできます。</target>
        </trans-unit>
        <trans-unit id="642294bb002ba063bc2d41f715130809aa53f640" translate="yes" xml:space="preserve">
          <source>Sends a tick message, which is a packet of length 0. Ticking is done when the port is in &lt;code&gt;data&lt;/code&gt; mode, so the command for sending data cannot be used (besides it ignores zero length packages in &lt;code&gt;command&lt;/code&gt; mode). This is used by the ticker to send dummy data when no other traffic is present.</source>
          <target state="translated">長さ0のパケットであるティックメッセージを送信します。ティックはポートが &lt;code&gt;data&lt;/code&gt; モードのときに行われるため、データを送信するコマンドは使用できません（ &lt;code&gt;command&lt;/code&gt; モードでは長さゼロのパッケージを無視します）。これは、他のトラフィックが存在しないときにダミーデータを送信するためにティッカーによって使用されます。</target>
        </trans-unit>
        <trans-unit id="cd21d4aea87e135f8db24e03b9c26172b603401e" translate="yes" xml:space="preserve">
          <source>Sends all &lt;code&gt;Replies&lt;/code&gt;, then terminates the &lt;code&gt;gen_statem&lt;/code&gt; by calling &lt;code&gt;&lt;a href=&quot;#Module:terminate-3&quot;&gt;Module:terminate/3&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;Reason&lt;/code&gt; and &lt;code&gt;NewData&lt;/code&gt;, if specified.</source>
          <target state="translated">すべての &lt;code&gt;Replies&lt;/code&gt; &lt;code&gt;gen_statem&lt;/code&gt; し、 &lt;code&gt;Reason&lt;/code&gt; および &lt;code&gt;NewData&lt;/code&gt; （指定されている場合）を指定して &lt;code&gt;&lt;a href=&quot;#Module:terminate-3&quot;&gt;Module:terminate/3&lt;/a&gt;&lt;/code&gt; を呼び出すことにより、gen_statemを終了します。</target>
        </trans-unit>
        <trans-unit id="1b571cf3ceca14f6161cbb475388a7821a979c94" translate="yes" xml:space="preserve">
          <source>Sends an Erlang term to a process.</source>
          <target state="translated">Erlangの項をプロセスに送ります。</target>
        </trans-unit>
        <trans-unit id="927c9e1e1bf78835f28716551ead89eb338ad958" translate="yes" xml:space="preserve">
          <source>Sends an Erlang term to a registered process.</source>
          <target state="translated">Erlangの項を登録されたプロセスに送ります。</target>
        </trans-unit>
        <trans-unit id="57d7c6fb590dc0f13e1974114e2730537afad3bb" translate="yes" xml:space="preserve">
          <source>Sends an HTTP request. The function can be both synchronous and asynchronous. In the latter case, the function returns &lt;code&gt;{ok, RequestId}&lt;/code&gt; and then the information is delivered to the &lt;code&gt;receiver&lt;/code&gt; depending on that value.</source>
          <target state="translated">HTTPリクエストを送信します。関数は同期と非同期の両方が可能です。後者の場合、関数は &lt;code&gt;{ok, RequestId}&lt;/code&gt; を返し、その値に応じて情報が &lt;code&gt;receiver&lt;/code&gt; 配信されます。</target>
        </trans-unit>
        <trans-unit id="bc7532344130633ffd04ed3ff3c05c1b9a15db47" translate="yes" xml:space="preserve">
          <source>Sends an SSH Connection Protocol &lt;code&gt;pty_req&lt;/code&gt;, to allocate a pseudo-terminal. Is to be called by an SSH client process.</source>
          <target state="translated">SSH接続プロトコル &lt;code&gt;pty_req&lt;/code&gt; を送信して、疑似端末を割り当てます。SSHクライアントプロセスによって呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d95dc1250619b283e9f31b9437b2e11fe452144b" translate="yes" xml:space="preserve">
          <source>Sends an XML document to the server.</source>
          <target state="translated">XML ドキュメントをサーバーに送信します。</target>
        </trans-unit>
        <trans-unit id="0ef0a82dbfc2de9f26d73492b241fb6b356feafd" translate="yes" xml:space="preserve">
          <source>Sends an arbitrary FTP command and returns verbatim a list of the lines sent back by the FTP server. This function is intended to give application accesses to FTP commands that are server-specific or that cannot be provided by this FTP client.</source>
          <target state="translated">任意の FTP コマンドを送信し、FTP サーバから送信された行のリストをそのまま返します。この関数は、サーバ固有のFTPコマンドや、このFTPクライアントでは提供できないFTPコマンドへのアクセスをアプリケーションに提供することを目的としています。</target>
        </trans-unit>
        <trans-unit id="f17ba9077ee94c188fdef8a384f5cdd747c8329a" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous event to the &lt;code&gt;gen_statem&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; and returns &lt;code&gt;ok&lt;/code&gt; immediately, ignoring if the destination node or &lt;code&gt;gen_statem&lt;/code&gt; does not exist. The &lt;code&gt;gen_statem&lt;/code&gt; calls the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event_type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;cast&lt;/code&gt; and event content &lt;code&gt;Msg&lt;/code&gt;.</source>
          <target state="translated">非同期イベントを送信 &lt;code&gt;gen_statem&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; 戻る &lt;code&gt;ok&lt;/code&gt; 宛先ノード場合、または無視して、直ちに &lt;code&gt;gen_statem&lt;/code&gt; は存在しません。 &lt;code&gt;gen_statem&lt;/code&gt; は呼び出す &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; し &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event_type()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;cast&lt;/code&gt; とイベント内容 &lt;code&gt;Msg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74984885bd2673385ef69978113530fdf76c8ceb" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous event to the &lt;code&gt;gen_statem&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; and returns &lt;code&gt;ok&lt;/code&gt; immediately, ignoring if the destination node or &lt;code&gt;gen_statem&lt;/code&gt; does not exist. The &lt;code&gt;gen_statem&lt;/code&gt; calls the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; with &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event_type()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;cast&lt;/code&gt; and event content &lt;code&gt;Msg&lt;/code&gt;.</source>
          <target state="translated">非同期イベントを &lt;code&gt;gen_statem&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-server_ref&quot;&gt;ServerRef&lt;/a&gt;&lt;/code&gt; に送信し、宛先ノードまたは &lt;code&gt;gen_statem&lt;/code&gt; が存在しない場合は無視して、すぐに &lt;code&gt;ok&lt;/code&gt; を返します。 &lt;code&gt;gen_statem&lt;/code&gt; は呼び出す &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; し &lt;code&gt;&lt;a href=&quot;#type-event_type&quot;&gt;event_type()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;cast&lt;/code&gt; とイベント内容 &lt;code&gt;Msg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b547bdaa5517f467cc9589c58e11c8caaa64283" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous message to the channel process and returns ok immediately, ignoring if the destination node or channel process does not exist. The channel calls &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the message.</source>
          <target state="translated">非同期メッセージをチャネルプロセスに送信し、宛先ノードまたはチャネルプロセスが存在しないかどうかを無視して、すぐにokを返します。チャネルは、 &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; を呼び出してメッセージを処理します。</target>
        </trans-unit>
        <trans-unit id="1a9158a1a92cc117659b31066bac983f8399ba15" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous notification of type &lt;code&gt;Name&lt;/code&gt; with &lt;code&gt;Data&lt;/code&gt;to the Common Test event manager. This can later be caught by any installed event manager.</source>
          <target state="translated">タイプ &lt;code&gt;Name&lt;/code&gt; と &lt;code&gt;Data&lt;/code&gt; 非同期通知をCommon Testイベントマネージャに送信します。これは後で、インストールされているイベントマネージャでキャッチできます。</target>
        </trans-unit>
        <trans-unit id="bb88ec0fa1bb6c44340bd2c6baf681f9e95dd6e0" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;ServerRef&lt;/code&gt; of the &lt;code&gt;gen_server&lt;/code&gt; process and returns &lt;code&gt;ok&lt;/code&gt; immediately, ignoring if the destination node or &lt;code&gt;gen_server&lt;/code&gt; process does not exist. The &lt;code&gt;gen_server&lt;/code&gt; process calls &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt; Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the request.</source>
          <target state="translated">非同期リクエストを &lt;code&gt;gen_server&lt;/code&gt; プロセスの &lt;code&gt;ServerRef&lt;/code&gt; に送信し、宛先ノードまたは &lt;code&gt;gen_server&lt;/code&gt; プロセスが存在しないかどうかを無視して、すぐに &lt;code&gt;ok&lt;/code&gt; を返します。 &lt;code&gt;gen_server&lt;/code&gt; のプロセスが呼び出す &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt; Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 要求を処理します。</target>
        </trans-unit>
        <trans-unit id="cb4f98023a2bc3e1eae9494947b8c9a4c2c152f3" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;ServerRef&lt;/code&gt; of the &lt;code&gt;gen_server&lt;/code&gt; process and returns &lt;code&gt;ok&lt;/code&gt; immediately, ignoring if the destination node or &lt;code&gt;gen_server&lt;/code&gt; process does not exist. The &lt;code&gt;gen_server&lt;/code&gt; process calls &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the request.</source>
          <target state="translated">非同期リクエストを &lt;code&gt;gen_server&lt;/code&gt; プロセスの &lt;code&gt;ServerRef&lt;/code&gt; に送信し、宛先ノードまたは &lt;code&gt;gen_server&lt;/code&gt; プロセスが存在しないかどうかを無視して、すぐに &lt;code&gt;ok&lt;/code&gt; を返します。 &lt;code&gt;gen_server&lt;/code&gt; のプロセスが呼び出す &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 要求を処理します。</target>
        </trans-unit>
        <trans-unit id="6e14699f73e6824283b5c283a67bc3100e4cdf09" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;gen_server&lt;/code&gt; processes locally registered as &lt;code&gt;Name&lt;/code&gt; at the specified nodes. The function returns immediately and ignores nodes that do not exist, or where the &lt;code&gt;gen_server&lt;/code&gt;&lt;code&gt;Name&lt;/code&gt; does not exist. The &lt;code&gt;gen_server&lt;/code&gt; processes call &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt; Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the request.</source>
          <target state="translated">指定されたノードで &lt;code&gt;Name&lt;/code&gt; としてローカルに登録された &lt;code&gt;gen_server&lt;/code&gt; プロセスに非同期要求を送信します。この関数はすぐに戻り、存在しないノード、または &lt;code&gt;gen_server&lt;/code&gt; &lt;code&gt;Name&lt;/code&gt; が存在しないノードを無視します。 &lt;code&gt;gen_server&lt;/code&gt; のプロセスが呼び出す &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt; Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 要求を処理します。</target>
        </trans-unit>
        <trans-unit id="eac57b700cbb66597b777c52c875949a36394b4a" translate="yes" xml:space="preserve">
          <source>Sends an asynchronous request to the &lt;code&gt;gen_server&lt;/code&gt; processes locally registered as &lt;code&gt;Name&lt;/code&gt; at the specified nodes. The function returns immediately and ignores nodes that do not exist, or where the &lt;code&gt;gen_server&lt;/code&gt;&lt;code&gt;Name&lt;/code&gt; does not exist. The &lt;code&gt;gen_server&lt;/code&gt; processes call &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; to handle the request.</source>
          <target state="translated">指定されたノードで &lt;code&gt;Name&lt;/code&gt; としてローカルに登録された &lt;code&gt;gen_server&lt;/code&gt; プロセスに非同期リクエストを送信します。関数はすぐに戻り、存在しないノード、または &lt;code&gt;gen_server&lt;/code&gt; &lt;code&gt;Name&lt;/code&gt; が存在しないノードを無視します。 &lt;code&gt;gen_server&lt;/code&gt; のプロセスが呼び出す &lt;code&gt;&lt;a href=&quot;#Module:handle_cast-2&quot;&gt;Module:handle_cast/2&lt;/a&gt;&lt;/code&gt; 要求を処理します。</target>
        </trans-unit>
        <trans-unit id="bbd707c298ab1500e2e01da1e947594d5ec67473" translate="yes" xml:space="preserve">
          <source>Sends an event notification to event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt; Module:handle_event/2&lt;/a&gt;&lt;/code&gt; for each installed event handler to handle the event.</source>
          <target state="translated">イベントマネージャー &lt;code&gt;EventMgrRef&lt;/code&gt; にイベント通知を送信します。イベントマネージャは、インストールされているイベントハンドラごとに &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt; Module:handle_event/2&lt;/a&gt;&lt;/code&gt; を呼び出して、イベントを処理します。</target>
        </trans-unit>
        <trans-unit id="22d9a76964fdc6de46919f2ae3b1586fb8725f05" translate="yes" xml:space="preserve">
          <source>Sends an event notification to event manager &lt;code&gt;EventMgrRef&lt;/code&gt;. The event manager calls &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt;Module:handle_event/2&lt;/a&gt;&lt;/code&gt; for each installed event handler to handle the event.</source>
          <target state="translated">イベント通知をイベントマネージャ &lt;code&gt;EventMgrRef&lt;/code&gt; に送信します。イベントマネージャは、インストールされているイベントハンドラごとに &lt;code&gt;&lt;a href=&quot;#Module:handle_event-2&quot;&gt;Module:handle_event/2&lt;/a&gt;&lt;/code&gt; を呼び出して、イベントを処理します。</target>
        </trans-unit>
        <trans-unit id="a48ebf47e427cbcbd5d8bf43978d938c7e022ba7" translate="yes" xml:space="preserve">
          <source>Sends an exit signal with exit reason &lt;code&gt;Reason&lt;/code&gt; to the process or port identified by &lt;code&gt;Pid&lt;/code&gt;.</source>
          <target state="translated">終了理由 &lt;code&gt;Reason&lt;/code&gt; の終了信号を、 &lt;code&gt;Pid&lt;/code&gt; で識別されるプロセスまたはポートに送信します。</target>
        </trans-unit>
        <trans-unit id="2d5f63244b8379209a3e5559dd9527cc393818d2" translate="yes" xml:space="preserve">
          <source>Sends ctrl commands to the OpenSSL engine given by &lt;code&gt;Engine&lt;/code&gt;. &lt;code&gt;Optional&lt;/code&gt; is a boolean argument that can relax the semantics of the function. If set to &lt;code&gt;true&lt;/code&gt; it will only return failure if the ENGINE supported the given command name but failed while executing it, if the ENGINE doesn't support the command name it will simply return success without doing anything. In this case we assume the user is only supplying commands specific to the given ENGINE so we set this to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Engine&lt;/code&gt; によって指定されたOpenSSLエンジンにctrlコマンドを送信します。 &lt;code&gt;Optional&lt;/code&gt; は、関数のセマンティクスを緩和できるブール引数です。 &lt;code&gt;true&lt;/code&gt; に設定すると、エンジンが指定されたコマンド名をサポートし、実行中に失敗した場合にのみ失敗を返します。エンジンがコマンド名をサポートしていない場合は、何もせずに単に成功を返します。この場合、ユーザーは特定のENGINEに固有のコマンドのみを提供していると想定するため、これを &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="c12a83bc6e3e8d31296d6cd5740549de25b10e84" translate="yes" xml:space="preserve">
          <source>Sends ctrl commands to the OpenSSL engine given by &lt;code&gt;Engine&lt;/code&gt;. This function is the same as calling &lt;code&gt;engine_ctrl_cmd_string/4&lt;/code&gt; with &lt;code&gt;Optional&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Engine&lt;/code&gt; によって指定されたOpenSSLエンジンにctrlコマンドを送信します。この関数は、 &lt;code&gt;Optional&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定して &lt;code&gt;engine_ctrl_cmd_string/4&lt;/code&gt; を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="67d17c375a9a060f32a85373bddb44efde580601" translate="yes" xml:space="preserve">
          <source>Sends data from an Erl Scheme script back to the client.</source>
          <target state="translated">Erl Schemeスクリプトのデータをクライアントに送り返します。</target>
        </trans-unit>
        <trans-unit id="c04c3739a3daf75c3fef5c563bcd271e4f7af2ca" translate="yes" xml:space="preserve">
          <source>Sends data from an I/O vector, &lt;code&gt;ev&lt;/code&gt;, to the port owner process. It has a header buffer (&lt;code&gt;hbuf&lt;/code&gt; and &lt;code&gt;hlen&lt;/code&gt;), just like &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt; driver_output2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">I / Oベクトル &lt;code&gt;ev&lt;/code&gt; からポート所有者プロセスにデータを送信します。 &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt; driver_output2&lt;/a&gt;&lt;/code&gt; と同様に、ヘッダーバッファー（ &lt;code&gt;hbuf&lt;/code&gt; および &lt;code&gt;hlen&lt;/code&gt; ）があります。</target>
        </trans-unit>
        <trans-unit id="b6b7b3a58756f819969ad1c659f38d894b5b0c06" translate="yes" xml:space="preserve">
          <source>Sends data from an I/O vector, &lt;code&gt;ev&lt;/code&gt;, to the port owner process. It has a header buffer (&lt;code&gt;hbuf&lt;/code&gt; and &lt;code&gt;hlen&lt;/code&gt;), just like &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">I / Oベクトル &lt;code&gt;ev&lt;/code&gt; からポート所有者プロセスにデータを送信します。 &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt; と同様に、ヘッダーバッファー（ &lt;code&gt;hbuf&lt;/code&gt; および &lt;code&gt;hlen&lt;/code&gt; ）があります。</target>
        </trans-unit>
        <trans-unit id="22caa4aafbbd2c636933e8db75ff46089c65895a" translate="yes" xml:space="preserve">
          <source>Sends data from the driver up to the emulator. The data is received as terms or binary data, depending on how the driver port was opened.</source>
          <target state="translated">ドライバからエミュレータにデータを送信します。ドライバのポートがどのように開かれていたかに応じて、データはタームまたはバイナリデータとして受信されます。</target>
        </trans-unit>
        <trans-unit id="f310650dd2279c9e0104d9edd659e1ffeaba54d5" translate="yes" xml:space="preserve">
          <source>Sends data in the special driver term format to the port owner process. This is a fast way to deliver term data from a driver. It needs no binary conversion, so the port owner process receives data as normal Erlang terms. The &lt;code&gt;&lt;a href=&quot;#erl_drv_send_term&quot;&gt; erl_drv_send_term&lt;/a&gt;&lt;/code&gt; functions can be used for sending to any process on the local node.</source>
          <target state="translated">特別なドライバー用語形式でデータをポート所有者プロセスに送信します。これは、ドライバーから用語データを配信するための高速な方法です。バイナリ変換は必要ないため、ポート所有者プロセスは通常のErlang用語としてデータを受け取ります。 &lt;code&gt;&lt;a href=&quot;#erl_drv_send_term&quot;&gt; erl_drv_send_term&lt;/a&gt;&lt;/code&gt; の機能は、ローカルノード上の任意のプロセスに送信するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="b61c157cd04931da6bc6144a1854ed21be64bcff" translate="yes" xml:space="preserve">
          <source>Sends data in the special driver term format to the port owner process. This is a fast way to deliver term data from a driver. It needs no binary conversion, so the port owner process receives data as normal Erlang terms. The &lt;code&gt;&lt;a href=&quot;#erl_drv_send_term&quot;&gt;erl_drv_send_term&lt;/a&gt;&lt;/code&gt; functions can be used for sending to any process on the local node.</source>
          <target state="translated">特別なドライバー用語形式のデータをポート所有者プロセスに送信します。これは、ドライバーから期間データを配信するための高速な方法です。バイナリ変換は必要ないため、ポート所有者プロセスは通常のErlang用語としてデータを受け取ります。 &lt;code&gt;&lt;a href=&quot;#erl_drv_send_term&quot;&gt;erl_drv_send_term&lt;/a&gt;&lt;/code&gt; の機能は、ローカルノード上の任意のプロセスに送信するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="aa5fa6ad7ca6754d75f1d129e656e6d856ced2b1" translate="yes" xml:space="preserve">
          <source>Sends data to a port owner process from a driver binary. It has a header buffer (&lt;code&gt;hbuf&lt;/code&gt; and &lt;code&gt;hlen&lt;/code&gt;) just like &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt;. Parameter &lt;code&gt;hbuf&lt;/code&gt; can be &lt;code&gt;NULL&lt;/code&gt;.</source>
          <target state="translated">ドライバーバイナリからポートオーナープロセスにデータを送信します。 &lt;code&gt;&lt;a href=&quot;#driver_output2&quot;&gt;driver_output2&lt;/a&gt;&lt;/code&gt; と同じように、ヘッダーバッファー（ &lt;code&gt;hbuf&lt;/code&gt; および &lt;code&gt;hlen&lt;/code&gt; ）があります。パラメータ &lt;code&gt;hbuf&lt;/code&gt; は &lt;code&gt;NULL&lt;/code&gt; にすることができます。</target>
        </trans-unit>
        <trans-unit id="a0a197ca0cf13d48f3bf505f9547ecf84c9b338a" translate="yes" xml:space="preserve">
          <source>Sends data to a port. &lt;code&gt;port_command(Port, Data, [])&lt;/code&gt; equals &lt;code&gt;port_command(Port, Data)&lt;/code&gt;.</source>
          <target state="translated">データをポートに送信します。 &lt;code&gt;port_command(Port, Data, [])&lt;/code&gt; は &lt;code&gt;port_command(Port, Data)&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="32e3ac2032ba950eadeae218f87711e153b4ecbe" translate="yes" xml:space="preserve">
          <source>Sends data to a port. Same as &lt;code&gt;Port ! {PortOwner, {command, Data}}&lt;/code&gt; except for the error behavior and being synchronous (see below). Any process can send data to a port with &lt;code&gt;port_command/2&lt;/code&gt;, not only the port owner (the connected process).</source>
          <target state="translated">データをポートに送信します。 &lt;code&gt;Port ! {PortOwner, {command, Data}}&lt;/code&gt; 同じ！{PortOwner、{command、Data}}（エラーの動作と同期であることを除く）（以下を参照）。ポート所有者（接続されたプロセス）だけでなく、任意のプロセスがデータを &lt;code&gt;port_command/2&lt;/code&gt; でポートに送信できます。</target>
        </trans-unit>
        <trans-unit id="e0104e693c2d55afcfea7268a884a1110584555c" translate="yes" xml:space="preserve">
          <source>Sends data to server on specified session channel and waits to receive the server response.</source>
          <target state="translated">指定したセッションチャネルでサーバにデータを送信し、サーバからの応答を待ちます。</target>
        </trans-unit>
        <trans-unit id="15e214027ca7a8de2b53e7284b306d106dc4152e" translate="yes" xml:space="preserve">
          <source>Sends data to server on specified session channel.</source>
          <target state="translated">指定されたセッションチャネルでサーバにデータを送信します。</target>
        </trans-unit>
        <trans-unit id="d1cab56c9ab8cf986e93c06c7a3cc2852bb89003" translate="yes" xml:space="preserve">
          <source>Sends event &lt;code&gt;clear_alarm&lt;/code&gt; to all event handlers.</source>
          <target state="translated">イベント &lt;code&gt;clear_alarm&lt;/code&gt; をすべてのイベントハンドラーに送信します。</target>
        </trans-unit>
        <trans-unit id="dd355f42320150cb8365ea32b28a9e4c6a73272d" translate="yes" xml:space="preserve">
          <source>Sends event &lt;code&gt;set_alarm&lt;/code&gt; to all event handlers.</source>
          <target state="translated">イベント &lt;code&gt;set_alarm&lt;/code&gt; をすべてのイベントハンドラーに送信します。</target>
        </trans-unit>
        <trans-unit id="12851ee683118032e0a97a530784b4dd66833f17" translate="yes" xml:space="preserve">
          <source>Sends it back to the caller:</source>
          <target state="translated">発信者に送り返します。</target>
        </trans-unit>
        <trans-unit id="5f80e9661dcb5ef0c9d1d4530ca7c9e31260bf57" translate="yes" xml:space="preserve">
          <source>Sends it to the port.</source>
          <target state="translated">ポートに送ります。</target>
        </trans-unit>
        <trans-unit id="4a5ae1dd8a5dccb6192fbcd7dd439c14ca24ab3d" translate="yes" xml:space="preserve">
          <source>Sends message &lt;code&gt;Msg&lt;/code&gt; to the pid globally registered as &lt;code&gt;Name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; としてグローバルに登録されたpidにメッセージ &lt;code&gt;Msg&lt;/code&gt; を送信します。</target>
        </trans-unit>
        <trans-unit id="9e82d2dea2625ade5f9a8c6d973a3ad6294d60fe" translate="yes" xml:space="preserve">
          <source>Sends one or more transaction request(s) and waits for the reply.</source>
          <target state="translated">1つ以上のトランザクションリクエストを送信し、返信を待ちます。</target>
        </trans-unit>
        <trans-unit id="5c434891a9dcf72b8a90e1acddd74c5bf598f8a5" translate="yes" xml:space="preserve">
          <source>Sends one or more transaction request(s) but does NOT wait for a reply</source>
          <target state="translated">1つ以上のトランザクションリクエストを送信するが、返信を待たない</target>
        </trans-unit>
        <trans-unit id="1b11eeadb5e331d1d238ecdcf3a96126cc536da7" translate="yes" xml:space="preserve">
          <source>Sends status replies to requests where the requester has stated that it wants a status report, that is, &lt;code&gt;WantReply = true&lt;/code&gt;. If &lt;code&gt;WantReply&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, calling this function becomes a &quot;noop&quot;. Is to be called while handling an SSH Connection Protocol message containing a &lt;code&gt;WantReply&lt;/code&gt; boolean value.</source>
          <target state="translated">リクエスタがステータスレポートが必要であると要求した場合、つまり、 &lt;code&gt;WantReply = true&lt;/code&gt; 、ステータス応答をリクエストに送信します。 &lt;code&gt;WantReply&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、この関数の呼び出しは「無効」になります。 &lt;code&gt;WantReply&lt;/code&gt; ブール値を含むSSH接続プロトコルメッセージの処理中に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="7d6e87f9e1af68d240068e5b70f509bf549f0633" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;Data&lt;/code&gt; message with all sending parameters from a &lt;code&gt;&lt;a href=&quot;#record-sctp_sndrcvinfo&quot;&gt;#sctp_sndrcvinfo{}&lt;/a&gt;&lt;/code&gt; record. This way, the user can specify the PPID (passed to the remote end) and context (passed to the local SCTP layer), which can be used, for example, for error identification. However, such a fine level of user control is rarely required. The function &lt;code&gt;send/4&lt;/code&gt; is sufficient for most applications.</source>
          <target state="translated">送信 &lt;code&gt;Data&lt;/code&gt; からすべての送信パラメータを使用してメッセージを &lt;code&gt;&lt;a href=&quot;#record-sctp_sndrcvinfo&quot;&gt;#sctp_sndrcvinfo{}&lt;/a&gt;&lt;/code&gt; レコード。このようにして、ユーザーはPPID（リモートエンドに渡される）とコンテキスト（ローカルSCTP層に渡される）を指定できます。これは、たとえばエラーの識別に使用できます。ただし、このような細かいレベルのユーザー制御はほとんど必要ありません。関数 &lt;code&gt;send/4&lt;/code&gt; は、ほとんどのアプリケーションに十分です。</target>
        </trans-unit>
        <trans-unit id="ef0a1cfad9c6060907db674c021f5126aa8f4bda" translate="yes" xml:space="preserve">
          <source>Sends the data &amp;lt;data&amp;gt; on the connected/accepted socket (in &lt;code&gt;command&lt;/code&gt; mode). The sending is acknowledged when the data has left this process.</source>
          <target state="translated">接続された/受け入れられたソケット（ &lt;code&gt;command&lt;/code&gt; モード）でデータ&amp;lt;data&amp;gt;を送信します。データがこのプロセスを離れると、送信が確認されます。</target>
        </trans-unit>
        <trans-unit id="02c82d5d06a980a6d12cde7f085cdd47e478d5a9" translate="yes" xml:space="preserve">
          <source>Sends the file &lt;code&gt;Filename&lt;/code&gt; to &lt;code&gt;Socket&lt;/code&gt;. Returns &lt;code&gt;{ok, BytesSent}&lt;/code&gt; if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;.</source>
          <target state="translated">ファイル &lt;code&gt;Filename&lt;/code&gt; を &lt;code&gt;Socket&lt;/code&gt; に送信します。成功すると &lt;code&gt;{ok, BytesSent}&lt;/code&gt; 返し、それ以外の場合は &lt;code&gt;{error, Reason}&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="2f607b4f9fa0c564e7614ddcd801e8a5df876b95" translate="yes" xml:space="preserve">
          <source>Sends the notification &lt;code&gt;Notification&lt;/code&gt; to the management targets defined for &lt;code&gt;NotifyName&lt;/code&gt; in the &lt;code&gt;snmpNotifyTable&lt;/code&gt; in SNMP-NOTIFICATION-MIB from the specified context.</source>
          <target state="translated">指定されたコンテキストから、SNMP-NOTIFICATION-MIBの &lt;code&gt;snmpNotifyTable&lt;/code&gt; の &lt;code&gt;NotifyName&lt;/code&gt; に定義された管理ターゲットに通知 &lt;code&gt;Notification&lt;/code&gt; を送信します。</target>
        </trans-unit>
        <trans-unit id="66e982604e3980f741e949ec9010aa745b5914a9" translate="yes" xml:space="preserve">
          <source>Sends the value of &lt;code&gt;Expr2&lt;/code&gt; as a message to the process specified by &lt;code&gt;Expr1&lt;/code&gt;. The value of &lt;code&gt;Expr2&lt;/code&gt; is also the return value of the expression.</source>
          <target state="translated">&lt;code&gt;Expr2&lt;/code&gt; の値をメッセージとして &lt;code&gt;Expr1&lt;/code&gt; で指定されたプロセスに送信します。値は &lt;code&gt;Expr2&lt;/code&gt; また、式の戻り値です。</target>
        </trans-unit>
        <trans-unit id="907e230655804593ab94674e107d67e8c1168666" translate="yes" xml:space="preserve">
          <source>Sent pending limit (see the MGOriginatedPendingLimit and the MGCOriginatedPendingLimit of the megaco root package). This parameter specifies how many pending messages that can be sent (for a given received transaction request). When the limit is exceeded, the transaction is aborted (see &lt;code&gt;&lt;a href=&quot;megaco_user#request_abort&quot;&gt;handle_trans_request_abort&lt;/a&gt;&lt;/code&gt;) and an error message is sent to the other side.</source>
          <target state="translated">送信された保留中の制限（megacoルートパッケージのMGOriginatedPendingLimitおよびMGCOriginatedPendingLimitを参照）。このパラメーターは、（所定の受信トランザクション要求に対して）送信できる保留メッセージの数を指定します。制限を超えると、トランザクションは中止され（ &lt;code&gt;&lt;a href=&quot;megaco_user#request_abort&quot;&gt;handle_trans_request_abort&lt;/a&gt;&lt;/code&gt; を参照）、エラーメッセージが相手側に送信されます。</target>
        </trans-unit>
        <trans-unit id="1f176b543509f30039b1b53c658506d6b0190e5a" translate="yes" xml:space="preserve">
          <source>Sent when a log is truncated or reopened. For halt logs &lt;code&gt;NoLostItems&lt;/code&gt; is the number of items written on the log since the disk log process was created. For wrap logs &lt;code&gt;NoLostItems&lt;/code&gt; is the number of items on all wrap log files.</source>
          <target state="translated">ログが切り捨てられたとき、または再度開かれたときに送信されます。停止ログの場合、 &lt;code&gt;NoLostItems&lt;/code&gt; は、ディスクログプロセスが作成されてからログに書き込まれたアイテムの数です。ラップログの &lt;code&gt;NoLostItems&lt;/code&gt; すべてのラップログファイルの項目の数です。</target>
        </trans-unit>
        <trans-unit id="a33ce3fad1114de787998c2c35e494de50d28c5d" translate="yes" xml:space="preserve">
          <source>Sent when a wrap log has filled up one of its files and a new file is opened. &lt;code&gt;NoLostItems&lt;/code&gt; is the number of previously logged items that were lost when truncating existing files.</source>
          <target state="translated">ラップログがそのファイルの1つでいっぱいになり、新しいファイルが開かれたときに送信されます。 &lt;code&gt;NoLostItems&lt;/code&gt; は、既存のファイルを切り捨てたときに失われた、以前にログに記録されたアイテムの数です。</target>
        </trans-unit>
        <trans-unit id="64ddb7835db34a3c62d27dc1a9e620d3bae1e499" translate="yes" xml:space="preserve">
          <source>Sent when a young garbage collection is about to be started. &lt;code&gt;Info&lt;/code&gt; is a list of two-element tuples, where the first element is a key, and the second is the value. Do not depend on any order of the tuples. The following keys are defined:</source>
          <target state="translated">若いガベージコレクションが開始されようとしているときに送信されます。 &lt;code&gt;Info&lt;/code&gt; は2要素のタプルのリストで、最初の要素はキー、2番目の要素は値です。タプルの順序に依存しないでください。次のキーが定義されています。</target>
        </trans-unit>
        <trans-unit id="13a5fcc86589571d6cba964d19b54d2f5e3dd445" translate="yes" xml:space="preserve">
          <source>Sent when an asynchronous log attempt is made to a blocked log that does not queue log attempts. &lt;code&gt;Items&lt;/code&gt; is the items from the log attempt.</source>
          <target state="translated">ログ試行をキューに入れないブロックされたログに対して非同期ログ試行が行われたときに送信されます。 &lt;code&gt;Items&lt;/code&gt; は、ログ試行からのアイテムです。</target>
        </trans-unit>
        <trans-unit id="72c5003b2fb4d153b50e578a5df32e00a38f408a" translate="yes" xml:space="preserve">
          <source>Sent when an asynchronous log attempt is made to a log file opened in read-only mode. &lt;code&gt;Items&lt;/code&gt; is the items from the log attempt.</source>
          <target state="translated">読み取り専用モードで開かれたログファイルに対して非同期ログの試行が行われたときに送信されます。 &lt;code&gt;Items&lt;/code&gt; は、ログ試行からのアイテムです。</target>
        </trans-unit>
        <trans-unit id="8a874181b27ada8edbf449b7e49664c9710599a9" translate="yes" xml:space="preserve">
          <source>Sent when an attempt to log items to a wrap log would write more bytes than the limit set by option &lt;code&gt;size&lt;/code&gt;.</source>
          <target state="translated">アイテムをラップログに記録しようとすると、オプション &lt;code&gt;size&lt;/code&gt; 設定された制限より多くのバイトが書き込まれる場合に送信されます。</target>
        </trans-unit>
        <trans-unit id="824eb071add20d7bf3036cfe85970417a0e22601" translate="yes" xml:space="preserve">
          <source>Sent when fullsweep garbage collection is about to be started. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_minor_start&lt;/code&gt;.</source>
          <target state="translated">フルスイープガベージコレクションが開始されようとしているときに送信されます。 &lt;code&gt;Info&lt;/code&gt; には、メッセージ &lt;code&gt;gc_minor_start&lt;/code&gt; と同じ種類のリストが含まれています。</target>
        </trans-unit>
        <trans-unit id="0da909a4b11e2c658bb803fd136f8378aaeb0a2a" translate="yes" xml:space="preserve">
          <source>Sent when fullsweep garbage collection is finished. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_minor_start&lt;/code&gt;, but the sizes reflect the new sizes after a fullsweep garbage collection.</source>
          <target state="translated">フルスイープガベージコレクションが完了すると送信されます。 &lt;code&gt;Info&lt;/code&gt; には、メッセージ &lt;code&gt;gc_minor_start&lt;/code&gt; と同じ種類のリストが含まれていますが、サイズは、フルスイープガベージコレクション後の新しいサイズを反映しています。</target>
        </trans-unit>
        <trans-unit id="a4ec09f770b521ff7e91cf7659a27a557c8ff324" translate="yes" xml:space="preserve">
          <source>Sent when function &lt;code&gt;alog/2&lt;/code&gt; or &lt;code&gt;alog_terms/2&lt;/code&gt; is used for internally formatted logs. &lt;code&gt;Items&lt;/code&gt; is the items from the log attempt.</source>
          <target state="translated">関数 &lt;code&gt;alog_terms/2&lt;/code&gt; &lt;code&gt;alog/2&lt;/code&gt; またはalog_terms / 2が内部的にフォーマットされたログに使用されると送信されます。 &lt;code&gt;Items&lt;/code&gt; は、ログ試行からのアイテムです。</target>
        </trans-unit>
        <trans-unit id="17ac271e79f5c1c17bc5a6e418eb4882c5a60d51" translate="yes" xml:space="preserve">
          <source>Sent when the &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; max_heap_size&lt;/a&gt;&lt;/code&gt; is reached during garbage collection. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_start&lt;/code&gt;, but the sizes reflect the sizes that triggered &lt;code&gt;max_heap_size&lt;/code&gt; to be reached.</source>
          <target state="translated">ガベージコレクション中に &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; max_heap_size&lt;/a&gt;&lt;/code&gt; に達したときに送信されます。 &lt;code&gt;Info&lt;/code&gt; にはメッセージ &lt;code&gt;gc_start&lt;/code&gt; と同じ種類のリストが含まれていますが、サイズは &lt;code&gt;max_heap_size&lt;/code&gt; に到達するきっかけとなったサイズを反映しています。</target>
        </trans-unit>
        <trans-unit id="9411ea8fb8de0f74b5c5f1beee0451c15e6b0589" translate="yes" xml:space="preserve">
          <source>Sent when the &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;max_heap_size&lt;/a&gt;&lt;/code&gt; is reached during garbage collection. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_start&lt;/code&gt;, but the sizes reflect the sizes that triggered &lt;code&gt;max_heap_size&lt;/code&gt; to be reached.</source>
          <target state="translated">ガベージコレクション中に &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;max_heap_size&lt;/a&gt;&lt;/code&gt; に達すると送信されます。 &lt;code&gt;Info&lt;/code&gt; にはメッセージ &lt;code&gt;gc_start&lt;/code&gt; と同じ種類のリストが含まれていますが、サイズは &lt;code&gt;max_heap_size&lt;/code&gt; への到達をトリガーしたサイズを反映しています。</target>
        </trans-unit>
        <trans-unit id="e6b9f3855413ffa56c28f28f6ca8eb4677876689" translate="yes" xml:space="preserve">
          <source>Sent when the error status changes. The error status is defined by the outcome of the last attempt to log items to the log, or to truncate the log, or the last use of function &lt;code&gt;sync/1&lt;/code&gt;, &lt;code&gt;inc_wrap_file/1&lt;/code&gt;, or &lt;code&gt;change_size/2&lt;/code&gt;. &lt;code&gt;Status&lt;/code&gt; is either &lt;code&gt;ok&lt;/code&gt; or &lt;code&gt;{error, Error}&lt;/code&gt;, the former is the initial value.</source>
          <target state="translated">エラーステータスが変化すると送信されます。エラーステータスは、ログに項目を記録する最後の試行の結果、またはログを切り捨てる結果、または関数 &lt;code&gt;sync/1&lt;/code&gt; 、 &lt;code&gt;inc_wrap_file/1&lt;/code&gt; 、または &lt;code&gt;change_size/2&lt;/code&gt; の最後の使用によって定義されます。 &lt;code&gt;Status&lt;/code&gt; は &lt;code&gt;ok&lt;/code&gt; または &lt;code&gt;{error, Error}&lt;/code&gt; いずれかで、前者が初期値です。</target>
        </trans-unit>
        <trans-unit id="1ce7595aa8c96ab9168ee2c2fbdaad2c701fd3b8" translate="yes" xml:space="preserve">
          <source>Sent when young garbage collection is finished. &lt;code&gt;Info&lt;/code&gt; contains the same kind of list as in message &lt;code&gt;gc_minor_start&lt;/code&gt;, but the sizes reflect the new sizes after garbage collection.</source>
          <target state="translated">若いガベージコレクションが終了すると送信されます。 &lt;code&gt;Info&lt;/code&gt; にはメッセージ &lt;code&gt;gc_minor_start&lt;/code&gt; と同じ種類のリストが含まれていますが、サイズにはガベージコレクション後の新しいサイズが反映されています。</target>
        </trans-unit>
        <trans-unit id="5b6f13cb83c8306b0c9e46de691662aea75507ed" translate="yes" xml:space="preserve">
          <source>Separates two documents by either a single space, or a line break and intentation. In other words, one of the layouts</source>
          <target state="translated">2つの文書を、1つのスペース、または改行とインテンションのいずれかで区切る。言い換えれば、レイアウトのいずれか</target>
        </trans-unit>
        <trans-unit id="b4b289a7b76be83adf9d38e7a3ee28190349bff2" translate="yes" xml:space="preserve">
          <source>Separator</source>
          <target state="translated">Separator</target>
        </trans-unit>
        <trans-unit id="799fa8ef2a7a0b5c9995dccfc8fc9b1a47c65034" translate="yes" xml:space="preserve">
          <source>SeparatorList :: [&lt;code&gt;&lt;a href=&quot;#type-grapheme_cluster&quot;&gt;grapheme_cluster()&lt;/a&gt;&lt;/code&gt;]) -&amp;gt;</source>
          <target state="translated">SeparatorList :: [ &lt;code&gt;&lt;a href=&quot;#type-grapheme_cluster&quot;&gt;grapheme_cluster()&lt;/a&gt;&lt;/code&gt; ]）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="78ad79ed72c72b1fc342f57808f8e1b8c61026fc" translate="yes" xml:space="preserve">
          <source>Sequential tracing between nodes is performed transparently. This applies to C-nodes built with &lt;code&gt;Erl_Interface&lt;/code&gt; too. A C-node built with &lt;code&gt;Erl_Interface&lt;/code&gt; only maintains one trace token, which means that the C-node appears as one process from the sequential tracing point of view.</source>
          <target state="translated">ノード間の順次トレースは透過的に実行されます。これは、 &lt;code&gt;Erl_Interface&lt;/code&gt; で構築されたCノードにも適用されます。 &lt;code&gt;Erl_Interface&lt;/code&gt; で構築されたCノードは、1つのトレーストークンのみを保持します。つまり、Cノードは、シーケンシャルトレースの観点からは1つのプロセスとして表示されます。</target>
        </trans-unit>
        <trans-unit id="46a89c8f3b87cbc1073fbf9ffe1ab457bad8531f" translate="yes" xml:space="preserve">
          <source>Sequential tracing is a way to trace a sequence of information transfers between different local or remote processes, where the sequence is initiated by a single transfer. The typical information transfer is an ordinary Erlang message passed between two processes, but information is transferred also in other ways. In short, it works as follows:</source>
          <target state="translated">シーケンシャルトレースとは、異なるローカルまたはリモートプロセス間の情報転送のシーケンスをトレースする方法で、シーケンスは1つの転送によって開始されます。典型的な情報転送は2つのプロセス間で渡される通常のErlangメッセージですが、情報は他の方法でも転送されます。簡単に言えば、次のように動作します。</target>
        </trans-unit>
        <trans-unit id="67674db1221be14a488e3b7f6dea2118795c01a2" translate="yes" xml:space="preserve">
          <source>Sequential tracing is a way to trace a sequence of messages sent between different local or remote processes, where the sequence is initiated by a single message. In short, it works as follows:</source>
          <target state="translated">シーケンシャルトレースは、異なるローカルまたはリモートプロセス間で送信されたメッセージのシーケンスをトレースする方法で、シーケンスは単一のメッセージによって開始されます。簡単に言えば、次のように動作します。</target>
        </trans-unit>
        <trans-unit id="b39a3365fc30062e1068f6656700d4efb42fc644" translate="yes" xml:space="preserve">
          <source>Sequential tracing is not performed across ports.</source>
          <target state="translated">シーケンシャルトレースはポートをまたいで実行されません。</target>
        </trans-unit>
        <trans-unit id="6ce9ef8c4d6e02924137b5130dba040bdf86df6b" translate="yes" xml:space="preserve">
          <source>Sequential tracing makes it possible to trace all messages resulting from one initial message. Sequential tracing is independent of the ordinary tracing in Erlang, which is controlled by the &lt;code&gt;erlang:trace/3&lt;/code&gt; BIF. For more information about what sequential tracing is and how it can be used, see section &lt;code&gt;&lt;a href=&quot;#whatis&quot;&gt;Sequential Tracing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">順次トレースでは、1つの初期メッセージから発生したすべてのメッセージをトレースできます。順次トレースは、 &lt;code&gt;erlang:trace/3&lt;/code&gt; BIF によって制御されるErlangの通常のトレースから独立しています。順次トレースとは何か、およびその使用方法の詳細については、「 &lt;code&gt;&lt;a href=&quot;#whatis&quot;&gt;Sequential Tracing&lt;/a&gt;&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="48ecef15522768577266326d0a461f78e82af76f" translate="yes" xml:space="preserve">
          <source>Sequential tracing makes it possible to trace information flows between processes resulting from one initial transfer of information. Sequential tracing is independent of the ordinary tracing in Erlang, which is controlled by the &lt;code&gt;erlang:trace/3&lt;/code&gt; BIF. For more information about what sequential tracing is and how it can be used, see section &lt;code&gt;&lt;a href=&quot;#whatis&quot;&gt;Sequential Tracing&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">シーケンシャルトレースを使用すると、情報の最初の転送から生じるプロセス間の情報フローをトレースできます。シーケンシャルトレースは、 &lt;code&gt;erlang:trace/3&lt;/code&gt; BIFによって制御されるErlangの通常のトレースとは独立しています。シーケンシャルトレースとは何か、およびその使用方法の詳細については、「 &lt;code&gt;&lt;a href=&quot;#whatis&quot;&gt;Sequential Tracing&lt;/a&gt;&lt;/code&gt; 」のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="d33f9eca6a2fdfbea8cbb835613d1765f28fcd72" translate="yes" xml:space="preserve">
          <source>Sequential tracing of information transfers.</source>
          <target state="translated">情報伝達の逐次トレース。</target>
        </trans-unit>
        <trans-unit id="f08e204d675fb02cb9c92420ea2ac07088bb7955" translate="yes" xml:space="preserve">
          <source>Sequential tracing of messages.</source>
          <target state="translated">メッセージの逐次トレース。</target>
        </trans-unit>
        <trans-unit id="887d14189b02ef3efe48b0dd7ea45040d5fdd376" translate="yes" xml:space="preserve">
          <source>Sequential tracing. The sequential trace token is propagated as usual, but no sequential trace messages are generated.</source>
          <target state="translated">シーケンシャルトレース。シーケンシャルトレーストークンは通常通り伝搬されますが、シーケンシャルトレースメッセージは生成されません。</target>
        </trans-unit>
        <trans-unit id="83f8c31a333d64148e70eba194553a6e0c2f9907" translate="yes" xml:space="preserve">
          <source>Serial</source>
          <target state="translated">Serial</target>
        </trans-unit>
        <trans-unit id="cf3a1d3f348f6e54ac99c355d7e8d7a99531227d" translate="yes" xml:space="preserve">
          <source>Server :: &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; | pid(),</source>
          <target state="translated">サーバー:: &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; | pid（）、</target>
        </trans-unit>
        <trans-unit id="947a6b42e35e6379a3a871ac25a5cc35eea47ac4" translate="yes" xml:space="preserve">
          <source>Server Directed Model</source>
          <target state="translated">サーバ指示モデル</target>
        </trans-unit>
        <trans-unit id="4088e54dc4e611bb45e3968736ee0b02ab8ec32f" translate="yes" xml:space="preserve">
          <source>Server Name Indication</source>
          <target state="translated">サーバー名表示</target>
        </trans-unit>
        <trans-unit id="5fe47b0a641720e6d3506a1b8c3fa57c4b588d5e" translate="yes" xml:space="preserve">
          <source>Server host key</source>
          <target state="translated">サーバーホストキー</target>
        </trans-unit>
        <trans-unit id="a7318b76018cff441c5791590e6c5344ff5bc39a" translate="yes" xml:space="preserve">
          <source>Server specification to use when addressing a &lt;code&gt;gen_statem&lt;/code&gt; server. See &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;gen_statem&lt;/code&gt; サーバーをアドレス指定するときに使用するサーバー仕様。上記の &lt;code&gt;&lt;a href=&quot;#call-2&quot;&gt;call/2&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="4ea8b115537d60c0612335af6a2297305218af54" translate="yes" xml:space="preserve">
          <source>Server start happens either when &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; returns or when &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; is called. Code change happens when &lt;code&gt;&lt;a href=&quot;#Module:code_change-4&quot;&gt;Module:code_change/4&lt;/a&gt;&lt;/code&gt; returns.</source>
          <target state="translated">サーバーの起動は、 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; が戻るとき、または &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; が呼び出されたときに行われます。 &lt;code&gt;&lt;a href=&quot;#Module:code_change-4&quot;&gt;Module:code_change/4&lt;/a&gt;&lt;/code&gt; が戻ると、コードが変更されます。</target>
        </trans-unit>
        <trans-unit id="34696cd123aa488d5c0c0ff57d9e92ebef037319" translate="yes" xml:space="preserve">
          <source>Server start happens either when &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; returns or when &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; is called. Code change happens when &lt;code&gt;&lt;a href=&quot;#Module:code_change-4&quot;&gt;Module:code_change/4&lt;/a&gt;&lt;/code&gt; returns. A change of the callback module happens when a &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; returns any of the actions &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;change_callback_module&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;push_callback_module&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;pop_callback_module&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">サーバーの起動は、 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; が戻ったとき、または &lt;code&gt;&lt;a href=&quot;#enter_loop-4&quot;&gt;enter_loop/4-6&lt;/a&gt;&lt;/code&gt; が呼び出されたときに発生します。 &lt;code&gt;&lt;a href=&quot;#Module:code_change-4&quot;&gt;Module:code_change/4&lt;/a&gt;&lt;/code&gt; が戻ると、コードが変更されます。コールバックモジュールの変更は、 &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; がアクション &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;change_callback_module&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;push_callback_module&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;pop_callback_module&lt;/a&gt;&lt;/code&gt; のいずれかを返すときに発生します。</target>
        </trans-unit>
        <trans-unit id="8e8e2636f54dfc7cabd3623ccbd882479778dea9" translate="yes" xml:space="preserve">
          <source>Server-Initiated Re-Auth</source>
          <target state="translated">サーバ起動型再認証</target>
        </trans-unit>
        <trans-unit id="e82fbe1fe2cd50ba3acc1673f098d550a5d21fc1" translate="yes" xml:space="preserve">
          <source>Server_or_Actions :: &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; | pid() | [&lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt;]) -&amp;gt;</source>
          <target state="translated">Server_or_Actions :: &lt;code&gt;&lt;a href=&quot;#type-server_name&quot;&gt;server_name()&lt;/a&gt;&lt;/code&gt; | pid（）| [ &lt;code&gt;&lt;a href=&quot;#type-action&quot;&gt;action()&lt;/a&gt;&lt;/code&gt; ]）-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2b5206f4124f60fdd9a2690b8553f9a39ef96857" translate="yes" xml:space="preserve">
          <source>Servers port number.</source>
          <target state="translated">サーバーのポート番号。</target>
        </trans-unit>
        <trans-unit id="edc08bd865f52ee5ced6ffaf01854d93b1e04a57" translate="yes" xml:space="preserve">
          <source>Service Pack 4 or later must be installed.</source>
          <target state="translated">サービスパック4以降がインストールされている必要があります。</target>
        </trans-unit>
        <trans-unit id="5397f6342a9bc113dc40386582fe49f64c070de6" translate="yes" xml:space="preserve">
          <source>Service options:</source>
          <target state="translated">サービスオプション。</target>
        </trans-unit>
        <trans-unit id="157383d93308c0e9d76a43e40db97f98bfd6756d" translate="yes" xml:space="preserve">
          <source>Services started as &lt;code&gt;stand_alone&lt;/code&gt; are not listed.</source>
          <target state="translated">&lt;code&gt;stand_alone&lt;/code&gt; として開始されたサービスは表示されません。</target>
        </trans-unit>
        <trans-unit id="fac29b321611cba90b0d60f830609e67913f5c89" translate="yes" xml:space="preserve">
          <source>Services to be configured for startup at application startup are to be put into the Erlang node configuration file on the following form:</source>
          <target state="translated">アプリケーション起動時に起動時に設定するサービスは、以下の形式でErlangノード設定ファイルに入れます。</target>
        </trans-unit>
        <trans-unit id="4b80725e2cdf98d03e3544d8e834835b10673511" translate="yes" xml:space="preserve">
          <source>Session Termination</source>
          <target state="translated">セッションの終了</target>
        </trans-unit>
        <trans-unit id="2189dd0e9404a2caed342278528b49ca88aef0f4" translate="yes" xml:space="preserve">
          <source>Session data is by default kept by the SSL application in a memory storage, hence session data is lost at application restart or takeover. Users can define their own callback module to handle session data storage if persistent data storage is required. Session data is also invalidated after 24 hours from it was saved, for security reasons. The amount of time the session data is to be saved can be configured.</source>
          <target state="translated">セッションデータはデフォルトではSSLアプリケーションによってメモリストレージに保存されます。永続的なデータ保存が必要な場合、ユーザーは独自のコールバックモジュールを定義してセッションデータの保存を処理することができます。また、セキュリティ上の理由から、セッションデータは保存されてから24時間経過すると無効になります。セッションデータを保存する時間を設定することができます。</target>
        </trans-unit>
        <trans-unit id="717b69cbfec0112048201130fc68c6fe0a095716" translate="yes" xml:space="preserve">
          <source>Session data is by default kept by the SSL application in a memory storage, hence session data is lost at application restart or takeover. Users can define their own callback module to handle session data storage if persistent data storage is required. Session data is also invalidated when session database exceeds its limit or 24 hours after being saved (RFC max lifetime recommendation). The amount of time the session data is to be saved can be configured.</source>
          <target state="translated">セッションデータはデフォルトではSSLアプリケーションによってメモリストレージに保存されます。永続的なデータ保存が必要な場合、ユーザーは独自のコールバックモジュールを定義してセッションデータの保存を処理することができます。また、セッションデータは、セッションデータベースが限界を超えた場合や、保存されてから24時間経過した場合にも無効になります(RFC最大寿命の推奨)。セッションデータを保存する時間を設定することができます。</target>
        </trans-unit>
        <trans-unit id="a44c233f663706896d30f9765750b2547461a634" translate="yes" xml:space="preserve">
          <source>Session state is the responsibility of the user.</source>
          <target state="translated">セッションの状態はユーザの責任です。</target>
        </trans-unit>
        <trans-unit id="6455e5ce6aca50c825c6b4db75096ece0dfd1c53" translate="yes" xml:space="preserve">
          <source>Session tickets are only sent to user if option &lt;strong&gt;session_tickets&lt;/strong&gt; is set to &lt;code&gt;manual&lt;/code&gt;</source>
          <target state="translated">オプション&lt;strong&gt;session_tickets&lt;/strong&gt;が &lt;code&gt;manual&lt;/code&gt; に設定されている場合、セッションチケットはユーザーにのみ送信されます</target>
        </trans-unit>
        <trans-unit id="cebc049d5c17444aa46a6658e1f24a7d52fbde42" translate="yes" xml:space="preserve">
          <source>Session tickets are protected by application traffic keys, and in stateless tickets, the opaque data structure itself is self-encrypted.</source>
          <target state="translated">セッションチケットはアプリケーションのトラフィックキーで保護されており、ステートレスチケットでは不透明なデータ構造自体が自己暗号化されています。</target>
        </trans-unit>
        <trans-unit id="f80b4368d7fc0e4ad412af8c18d1c09547daa8ef" translate="yes" xml:space="preserve">
          <source>Session tickets are sent by servers on newly estalished TLS connections. The number of tickets sent and their lifetime are configurable by application variables. See also &lt;code&gt; SSL's configuration&lt;/code&gt;.</source>
          <target state="translated">セッションチケットは、新しく確立されたTLS接続上のサーバーによって送信されます。送信されるチケットの数とその有効期間は、アプリケーション変数によって構成できます。 &lt;code&gt; SSL's configuration&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="3261aa50156b1282e661f0f64bba6833eafe648b" translate="yes" xml:space="preserve">
          <source>Session tickets can be stateful or stateless. A stateful session ticket is a database reference (session ticket store) and used with stateful servers, while a stateless ticket is a self-encrypted and self-authenticated data structure with cryptographic keying material and state data, enabling session resumption with stateless servers.</source>
          <target state="translated">セッションチケットには、ステートフルまたはステートレスがあります。ステートフルなセッションチケットはデータベース参照(セッションチケットストア)であり、ステートフルサーバで使用されるのに対し、ステートレスなセッションチケットは暗号化された自己認証されたデータ構造であり、暗号化されたキーイング素材とステートデータを持ち、ステートレスサーバでのセッション再開を可能にします。</target>
        </trans-unit>
        <trans-unit id="4a09b63aa8aef12610e5097f5dcbecb6ec0b6397" translate="yes" xml:space="preserve">
          <source>Session-Binding AVP</source>
          <target state="translated">セッションバインディング AVP</target>
        </trans-unit>
        <trans-unit id="6d5b951f326d46a73f615ecb89203802d45c7d34" translate="yes" xml:space="preserve">
          <source>Session-Binding AVP Values</source>
          <target state="translated">セッションバインディング AVP 値</target>
        </trans-unit>
        <trans-unit id="76db6dd6136e7be7b5da291aa7c562b11f178550" translate="yes" xml:space="preserve">
          <source>Session-Id AVP</source>
          <target state="translated">セッション ID AVP</target>
        </trans-unit>
        <trans-unit id="d2ca0ce02888b561d968cd54e3873df3a762e039" translate="yes" xml:space="preserve">
          <source>Session-Server-Failover AVP</source>
          <target state="translated">セッションサーバーフェイルオーバーAVP</target>
        </trans-unit>
        <trans-unit id="f91c41d0abfc87527176ac558dba342c0c601933" translate="yes" xml:space="preserve">
          <source>Session-Server-Failover AVP Values</source>
          <target state="translated">セッション-サーバー-フェイルオーバー AVP 値</target>
        </trans-unit>
        <trans-unit id="01b80be07c4be1b4c9104178d53867c1782237c3" translate="yes" xml:space="preserve">
          <source>Session-Termination-Answer</source>
          <target state="translated">Session-Termination-Answer</target>
        </trans-unit>
        <trans-unit id="74c5a3349930ea180e9bd3a286a7f55ec0def5f8" translate="yes" xml:space="preserve">
          <source>Session-Termination-Request</source>
          <target state="translated">Session-Termination-Request</target>
        </trans-unit>
        <trans-unit id="bea31b7972c1044f4e21c4ecd2c6baeb0c1dd29c" translate="yes" xml:space="preserve">
          <source>Session-Timeout AVP</source>
          <target state="translated">セッションタイムアウト AVP</target>
        </trans-unit>
        <trans-unit id="65554231afb0cf98bd9fcd70eaca9a432abba10e" translate="yes" xml:space="preserve">
          <source>Session-related messages and AVPs are defined in provided dictionaries. Their proper use is the user's responsibility.</source>
          <target state="translated">セッションに関連したメッセージとAVPは、提供された辞書で定義されています。それらを適切に使用するのはユーザの責任です。</target>
        </trans-unit>
        <trans-unit id="8ee903ecf91ea851dcf9b23255683d465f969e4b" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;ERL_TOP&lt;/code&gt; to where you unpacked the source distribution</source>
          <target state="translated">&lt;code&gt;ERL_TOP&lt;/code&gt; をソース配布を解凍した場所に設定します</target>
        </trans-unit>
        <trans-unit id="f4cdff9c23032ddcb6335b343ed2c5050c34846b" translate="yes" xml:space="preserve">
          <source>Set A is &lt;strong id=&quot;equal&quot;&gt;equal&lt;/strong&gt; to set B if they contain the same elements, which is denoted A = B. Two ordered sets are equal if they contain the same number of elements and have equal elements at each coordinate.</source>
          <target state="translated">セットAは、それらが同じ要素を含んでいる場合、セットB と&lt;strong id=&quot;equal&quot;&gt;等しく&lt;/strong&gt;なります。これは、A = Bで表されます。2つの順序付けされたセットは、同じ数の要素を含み、各座標で等しい要素を持っている場合に等しくなります。</target>
        </trans-unit>
        <trans-unit id="19215245cb9fd1a4e8ffc186a287650d6b65cbcd" translate="yes" xml:space="preserve">
          <source>Set B is a &lt;strong id=&quot;subset&quot;&gt;subset&lt;/strong&gt; of set A if A contains all elements that B contains.</source>
          <target state="translated">Bに含まれるすべての要素がAに含まれている場合、セットBはセットAの&lt;strong id=&quot;subset&quot;&gt;サブセット&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="e9257d4053325a45b96b37e49d5ef31548019ece" translate="yes" xml:space="preserve">
          <source>Set Operation</source>
          <target state="translated">設定操作</target>
        </trans-unit>
        <trans-unit id="3c977a7d012429b4882cd8fd42de15ac59fe5b5b" translate="yes" xml:space="preserve">
          <source>Set a &lt;code&gt;Trace Pattern&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Trace Pattern&lt;/code&gt; 設定する</target>
        </trans-unit>
        <trans-unit id="4583a6360c8b4779fda288e6b176634adebb983e" translate="yes" xml:space="preserve">
          <source>Set a process as heir. The heir inherits the table if the owner terminates. Message &lt;code&gt;{'ETS-TRANSFER',tid(),FromPid,HeirData}&lt;/code&gt; is sent to the heir when that occurs. The heir must be a local process. Default heir is &lt;code&gt;none&lt;/code&gt;, which destroys the table when the owner terminates.</source>
          <target state="translated">プロセスを相続人として設定します。所有者が終了すると、相続人はテーブルを継承します。メッセージ &lt;code&gt;{'ETS-TRANSFER',tid(),FromPid,HeirData}&lt;/code&gt; が発生すると、相続人に送信されます。相続人はローカルプロセスでなければなりません。デフォルトの相続人は &lt;code&gt;none&lt;/code&gt; で、所有者が終了するとテーブルを破棄します。</target>
        </trans-unit>
        <trans-unit id="8ef928b043a7a5a938f7df2dbafc0cf65f7d6ac5" translate="yes" xml:space="preserve">
          <source>Set a user specified tag that will be present in the trace messages of both the &lt;code&gt;efile_drv&lt;/code&gt; and the user-probe mentioned above.</source>
          <target state="translated">上記の &lt;code&gt;efile_drv&lt;/code&gt; とユーザープローブの両方のトレースメッセージに表示されるユーザー指定のタグを設定します。</target>
        </trans-unit>
        <trans-unit id="c7a6b177b9d5a4df54ae46f1889aa42bf32ec061" translate="yes" xml:space="preserve">
          <source>Set an option on a socket.</source>
          <target state="translated">ソケットにオプションを設定します。</target>
        </trans-unit>
        <trans-unit id="fca740d8839ff1180f428e14ec18e071dc0b41b0" translate="yes" xml:space="preserve">
          <source>Set atomic to &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">アトミックを &lt;code&gt;Value&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="5193d4f565dfa3ff18d9dc4a6925c9ce696b7d15" translate="yes" xml:space="preserve">
          <source>Set call count breakpoints on the matching functions that has no call count breakpoints. Call counters are set to zero and running for all matching functions.</source>
          <target state="translated">コールカウントブレークポイントがないマッチング関数にコールカウントブレークポイントを設定します。すべてのマッチング関数のコールカウンタはゼロに設定され、実行されます。</target>
        </trans-unit>
        <trans-unit id="1cafdd1b97a4b90af210a34981f512d8480b991c" translate="yes" xml:space="preserve">
          <source>Set carrier pool to use for the allocator. Memory carriers will only migrate between allocator instances that use the same carrier pool. The following carrier pool names exist:</source>
          <target state="translated">アロケータに使用するキャリアプールを設定します。メモリキャリアは、同じキャリアプールを使用するアロケータインスタンス間でのみ移行します。以下のキャリアプール名が存在します。</target>
        </trans-unit>
        <trans-unit id="139559d2dc59c6cbd9c41d9f3aad0e5ddcc64e1b" translate="yes" xml:space="preserve">
          <source>Set configuration data for the Logger proxy. This overwrites the current proxy configuration. Keys that are not specified in the &lt;code&gt;Config&lt;/code&gt; map gets default values.</source>
          <target state="translated">Loggerプロキシの構成データを設定します。これにより、現在のプロキシ構成が上書きされます。 &lt;code&gt;Config&lt;/code&gt; マップで指定されていないキーはデフォルト値を取得します。</target>
        </trans-unit>
        <trans-unit id="c206e40d4815924e1a53503d6048d57f14c73244" translate="yes" xml:space="preserve">
          <source>Set configuration data for the specified handler. This overwrites the current handler configuration.</source>
          <target state="translated">指定したハンドラの設定データを設定します。現在のハンドラの設定を上書きします。</target>
        </trans-unit>
        <trans-unit id="fbd47d4fce652ab713e8b7a98d636d1b5c75dd28" translate="yes" xml:space="preserve">
          <source>Set default character set used (default UTF-8). This character set is used only if not explicitly given by the XML declaration.</source>
          <target state="translated">使用するデフォルトの文字セットを設定します(デフォルトはUTF-8)。この文字セットは、XML宣言で明示的に指定されていない場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="baebae1f9fc0f15dbe8dc93f5929e2d2010ab5c6" translate="yes" xml:space="preserve">
          <source>Set default character set used (default UTF-8). This character set is used only if not explicitly given by the XML document.</source>
          <target state="translated">使用するデフ ォル ト 文字セ ッ ト を設定 し ます (デフ ォル ト は UTF-8)。この文字セットは、XML文書で明示的に指定されていない場合にのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="4a3e6a4c11b886b8824a5e7b68d05fef80e861ce" translate="yes" xml:space="preserve">
          <source>Set domain name.</source>
          <target state="translated">ドメイン名を設定します。</target>
        </trans-unit>
        <trans-unit id="6a03c3e67eba8831929ee4d03c547cef34f82cc3" translate="yes" xml:space="preserve">
          <source>Set group id on execution</source>
          <target state="translated">実行時にグループIDを設定</target>
        </trans-unit>
        <trans-unit id="a43ef2be073c4212dbed0aea6fd234494f19d7a6" translate="yes" xml:space="preserve">
          <source>Set how often (in milliseconds) the resolver cache for &lt;code&gt;inet_res(3)&lt;/code&gt; is refreshed (that is, expired DNS records are deleted). Defaults to 1 hour.</source>
          <target state="translated">&lt;code&gt;inet_res(3)&lt;/code&gt; のリゾルバキャッシュが更新される頻度（ミリ秒単位）を設定します（つまり、期限切れのDNSレコードが削除されます）。デフォルトは1時間です。</target>
        </trans-unit>
        <trans-unit id="aab4471587cac7b6356c8f95deb918d9452c2016" translate="yes" xml:space="preserve">
          <source>Set if the &lt;code&gt;&lt;a href=&quot;#SPAWN_REQUEST&quot;&gt;SPAWN_REQUEST&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SPAWN_REQUEST_TT&quot;&gt;SPAWN_REQUEST_TT&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SPAWN_REPLY&quot;&gt;SPAWN_REPLY&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#SPAWN_REPLY_TT&quot;&gt;SPAWN_REPLY_TT&lt;/a&gt;&lt;/code&gt; control messages are supported.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#SPAWN_REQUEST&quot;&gt;SPAWN_REQUEST&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#SPAWN_REQUEST_TT&quot;&gt;SPAWN_REQUEST_TT&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#SPAWN_REPLY&quot;&gt;SPAWN_REPLY&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#SPAWN_REPLY_TT&quot;&gt;SPAWN_REPLY_TT&lt;/a&gt;&lt;/code&gt; 制御メッセージがサポートされているかどうかを設定します。</target>
        </trans-unit>
        <trans-unit id="b11208dde369a91b8db91c4eecdb2a252788928f" translate="yes" xml:space="preserve">
          <source>Set metadata which Logger shall automatically insert in all log events produced on the current process.</source>
          <target state="translated">現在のプロセスで生成されたすべてのログ イベントにロガーが自動的に挿入するメタデータを設定します。</target>
        </trans-unit>
        <trans-unit id="0c14eb8947d1e24438a3eac4d7df936565933ad4" translate="yes" xml:space="preserve">
          <source>Set namespace nodes in xmlContext.</source>
          <target state="translated">xmlContext で名前空間ノードを設定します。</target>
        </trans-unit>
        <trans-unit id="c6d6929fb4197046544b86579372effd2f9fdb0d" translate="yes" xml:space="preserve">
          <source>Set namespace nodes, from XmlNamspace, in xmlContext</source>
          <target state="translated">xmlContext で XmlNamspace から名前空間ノードを設定します。</target>
        </trans-unit>
        <trans-unit id="755833965a565c58dbf1c617acd710f1c28c172b" translate="yes" xml:space="preserve">
          <source>Set next state and update the server data. If the &lt;code&gt;Actions&lt;/code&gt; field is used, execute &lt;strong&gt;transition actions&lt;/strong&gt;. An empty &lt;code&gt;Actions&lt;/code&gt; list is equivalent to not returning the field.</source>
          <target state="translated">次の状態を設定し、サーバーデータを更新します。「 &lt;code&gt;Actions&lt;/code&gt; フィールドを使用する場合は、&lt;strong&gt;遷移アクションを実行し&lt;/strong&gt;ます。空の &lt;code&gt;Actions&lt;/code&gt; リストは、フィールドを返さないことと同じです。</target>
        </trans-unit>
        <trans-unit id="eb924690fa3d68e56455acfeb0d6fd826110f164" translate="yes" xml:space="preserve">
          <source>Set next state and update the server data. If the &lt;code&gt;Actions&lt;/code&gt; field is used, execute state transition actions. An empty &lt;code&gt;Actions&lt;/code&gt; list is equivalent to not returning the field.</source>
          <target state="translated">次の状態を設定し、サーバーデータを更新します。 &lt;code&gt;Actions&lt;/code&gt; フィールドを使用する場合は、状態遷移アクションを実行します。空の &lt;code&gt;Actions&lt;/code&gt; リストは、フィールドを返さないことと同じです。</target>
        </trans-unit>
        <trans-unit id="ea728b8b4cd9259e1b16d138a022dafb98890ab9" translate="yes" xml:space="preserve">
          <source>Set not allowed on all platforms.</source>
          <target state="translated">すべてのプラットフォームで設定は許可されていません。</target>
        </trans-unit>
        <trans-unit id="2d5717080ccba3110b1e93c082220f5cdc31e7b6" translate="yes" xml:space="preserve">
          <source>Set one or more options for distribution sockets. Argument &lt;code&gt;Node&lt;/code&gt; can be either one node name or the atom &lt;code&gt;new&lt;/code&gt; to affect the distribution sockets of all future connected nodes.</source>
          <target state="translated">配布ソケットの1つ以上のオプションを設定します。引数 &lt;code&gt;Node&lt;/code&gt; は、1つのノード名または &lt;code&gt;new&lt;/code&gt; アトムのいずれかで、将来接続されるすべてのノードの配布ソケットに影響を与えることができます。</target>
        </trans-unit>
        <trans-unit id="8cc7b027f5a2252a98b992a5c8c7b2bb7c817f4a" translate="yes" xml:space="preserve">
          <source>Set options for the standard I/O device (&lt;code&gt;IoDevice&lt;/code&gt;).</source>
          <target state="translated">標準I / Oデバイス（ &lt;code&gt;IoDevice&lt;/code&gt; ）のオプションを設定します。</target>
        </trans-unit>
        <trans-unit id="cf47b1d493820f3cd014f5d017683359abec4814" translate="yes" xml:space="preserve">
          <source>Set options on a socket.</source>
          <target state="translated">ソケットにオプションを設定します。</target>
        </trans-unit>
        <trans-unit id="72213ee26b861ef8b91cdf7c410ea5ee9c5dadc3" translate="yes" xml:space="preserve">
          <source>Set or update metadata to use when logging from current process</source>
          <target state="translated">現在のプロセスからロギングする際に使用するメタデータを設定または更新します。</target>
        </trans-unit>
        <trans-unit id="ef64726061cb76ad432c186d4f382a9be21eb83d" translate="yes" xml:space="preserve">
          <source>Set primary configuration data for Logger. This overwrites the current configuration.</source>
          <target state="translated">ロガーのプライマリ設定データを設定します。これは現在の設定を上書きします。</target>
        </trans-unit>
        <trans-unit id="cf3dcf47b54fea34ce93c2d32bf22b640191e01a" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;fips_mode&lt;/code&gt; configuration setting of the crypto application to &lt;code&gt;true&lt;/code&gt;&lt;strong&gt;before loading the crypto module&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;暗号モジュールをロードする前&lt;/strong&gt;に、暗号アプリケーションの &lt;code&gt;fips_mode&lt;/code&gt; 構成設定を &lt;code&gt;true&lt;/code&gt; &lt;strong&gt;に&lt;/strong&gt;設定し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="b55d6a29e9fb5d686b0e320238784e96147a41ab" translate="yes" xml:space="preserve">
          <source>Set the appropriate flags value for the dirty NIF in its &lt;code&gt;&lt;a href=&quot;#ErlNifFunc&quot;&gt; ErlNifFunc&lt;/a&gt;&lt;/code&gt; entry.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ErlNifFunc&quot;&gt; ErlNifFunc&lt;/a&gt;&lt;/code&gt; エントリでダーティNIFに適切なフラグ値を設定します。</target>
        </trans-unit>
        <trans-unit id="5f63971e4cdc0fb0e823b787c37999e857dc6498" translate="yes" xml:space="preserve">
          <source>Set the appropriate flags value for the dirty NIF in its &lt;code&gt;&lt;a href=&quot;#ErlNifFunc&quot;&gt;ErlNifFunc&lt;/a&gt;&lt;/code&gt; entry.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ErlNifFunc&quot;&gt;ErlNifFunc&lt;/a&gt;&lt;/code&gt; エントリでダーティNIFに適切なフラグ値を設定します。</target>
        </trans-unit>
        <trans-unit id="094a9868d56dc50d00ad47de9adb55f55e047155" translate="yes" xml:space="preserve">
          <source>Set the environment &lt;code&gt;ERL_TOP&lt;/code&gt; to point to the root directory of the source distribution. Let's say I stood in &lt;code&gt;$HOME/src&lt;/code&gt; and unpacked &lt;code&gt;otp_src_21.tar.gz&lt;/code&gt;, I then add the following to &lt;code&gt;.profile&lt;/code&gt;:</source>
          <target state="translated">ソース配布のルートディレクトリを指すように環境 &lt;code&gt;ERL_TOP&lt;/code&gt; を設定します。 &lt;code&gt;$HOME/src&lt;/code&gt; に立って &lt;code&gt;otp_src_21.tar.gz&lt;/code&gt; を解凍したとしましょう。次に &lt;code&gt;.profile&lt;/code&gt; に以下を追加します：</target>
        </trans-unit>
        <trans-unit id="634529c19d88ec790dbd299ccd82fd28e8b83d7e" translate="yes" xml:space="preserve">
          <source>Set the environment &lt;code&gt;ERL_TOP&lt;/code&gt; to point to the root directory of the source distribution. Let's say I stood in &lt;code&gt;/mnt/c/src&lt;/code&gt; and unpacked &lt;code&gt;otp_src_23.tar.gz&lt;/code&gt;, I then add the following to &lt;code&gt;.profile&lt;/code&gt;:</source>
          <target state="translated">ソースディストリビューションのルートディレクトリを指すように環境 &lt;code&gt;ERL_TOP&lt;/code&gt; を設定します。 &lt;code&gt;/mnt/c/src&lt;/code&gt; に立って &lt;code&gt;otp_src_23.tar.gz&lt;/code&gt; を解凍したとしましょう。次に、以下を &lt;code&gt;.profile&lt;/code&gt; に追加します。</target>
        </trans-unit>
        <trans-unit id="f03c76b694103efe22ab155d9d756cf6a1a3c8cf" translate="yes" xml:space="preserve">
          <source>Set the log level for all the modules of the specified application.</source>
          <target state="translated">指定したアプリケーションのすべてのモジュールのログレベルを設定します。</target>
        </trans-unit>
        <trans-unit id="5f1b46d28e8f7ffadae8dfc27bb9023505b34bd8" translate="yes" xml:space="preserve">
          <source>Set the log level for the specified modules.</source>
          <target state="translated">指定したモジュールのログレベルを設定します。</target>
        </trans-unit>
        <trans-unit id="1590b68234453973543219bb52f90ccf04143339" translate="yes" xml:space="preserve">
          <source>Set the macro &lt;code&gt;'MOD_eqc'&lt;/code&gt; to the correct module name for the selected tool. That is, the macro &lt;code&gt;'MOD_eqc'&lt;/code&gt; is set to either &lt;code&gt;eqc&lt;/code&gt;, &lt;code&gt;proper&lt;/code&gt; or &lt;code&gt;triq&lt;/code&gt;.</source>
          <target state="translated">マクロ &lt;code&gt;'MOD_eqc'&lt;/code&gt; を、選択したツールの正しいモジュール名に設定します。つまり、マクロ &lt;code&gt;'MOD_eqc'&lt;/code&gt; は、 &lt;code&gt;eqc&lt;/code&gt; 、 &lt;code&gt;proper&lt;/code&gt; 、または &lt;code&gt;triq&lt;/code&gt; のいずれかに設定されます。</target>
        </trans-unit>
        <trans-unit id="7515e95df724fe9b5d68c6f4b74d9995d8b11c01" translate="yes" xml:space="preserve">
          <source>Set the number of DNS queries &lt;code&gt;inet_res(3)&lt;/code&gt; will try before giving up. Defaults to 3.</source>
          <target state="translated">あきらめる前に &lt;code&gt;inet_res(3)&lt;/code&gt; が試行するDNSクエリの数を設定します。デフォルトは3です。</target>
        </trans-unit>
        <trans-unit id="164faa04e1b0ae48ff64261f3a879cb2f355ae26" translate="yes" xml:space="preserve">
          <source>Set the protocol version in the megaco_receive_handle to &lt;code&gt;dynamic&lt;/code&gt; (this is the default).</source>
          <target state="translated">megaco_receive_handleのプロトコルバージョンを &lt;code&gt;dynamic&lt;/code&gt; に設定します（これがデフォルトです）。</target>
        </trans-unit>
        <trans-unit id="20a11f749f7c15205dcb2c9760cceb7b8ef6d9da" translate="yes" xml:space="preserve">
          <source>Set the resolver cache size. Defaults to 100 DNS records.</source>
          <target state="translated">リゾルバのキャッシュサイズを設定します。デフォルトは 100 DNS レコードです。</target>
        </trans-unit>
        <trans-unit id="2805a7b47d71baa112cad571428ef5bd63c07d3a" translate="yes" xml:space="preserve">
          <source>Set the seed for PRNG to the given binary. This calls the RAND_seed function from openssl. Only use this if the system you are running on does not have enough &quot;randomness&quot; built in. Normally this is when &lt;code&gt;&lt;a href=&quot;#strong_rand_bytes-1&quot;&gt;strong_rand_bytes/1&lt;/a&gt;&lt;/code&gt; raises &lt;code&gt;error:low_entropy&lt;/code&gt;</source>
          <target state="translated">PRNGのシードを指定されたバイナリに設定します。これにより、opensslからRAND_seed関数が呼び出されます。これは、実行しているシステムに十分な「ランダム性」が組み込まれていない場合にのみ使用してください。通常、これは、 &lt;code&gt;&lt;a href=&quot;#strong_rand_bytes-1&quot;&gt;strong_rand_bytes/1&lt;/a&gt;&lt;/code&gt; で &lt;code&gt;error:low_entropy&lt;/code&gt; が発生する場合です。</target>
        </trans-unit>
        <trans-unit id="4ce09a83b1b5a283eb8968bc9ca42ab561a8776a" translate="yes" xml:space="preserve">
          <source>Set the seed for PRNG to the given binary. This calls the RAND_seed function from openssl. Only use this if the system you are running on does not have enough &quot;randomness&quot; built in. Normally this is when &lt;code&gt;&lt;a href=&quot;#strong_rand_bytes-1&quot;&gt;strong_rand_bytes/1&lt;/a&gt;&lt;/code&gt; throws &lt;code&gt;low_entropy&lt;/code&gt;</source>
          <target state="translated">PRNGのシードを指定されたバイナリに設定します。これはopensslからRAND_seed関数を呼び出します。これは、実行中のシステムに十分な「ランダム性」が組み込まれていない場合にのみ使用してください。通常、これは &lt;code&gt;&lt;a href=&quot;#strong_rand_bytes-1&quot;&gt;strong_rand_bytes/1&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;low_entropy&lt;/code&gt; をスローする場合です</target>
        </trans-unit>
        <trans-unit id="b5aa74580980ac1cdaaeb8b177b326aacaa0569a" translate="yes" xml:space="preserve">
          <source>Set the staging part of the breakpoint as enabled with specified breakpoint data.</source>
          <target state="translated">指定したブレークポイントデータで有効になっているブレークポイントの演出部分を設定します。</target>
        </trans-unit>
        <trans-unit id="39f635f4f20e4c51855fdc78219636e760e994c7" translate="yes" xml:space="preserve">
          <source>Set the time to wait until retry (in milliseconds) for DNS queries made by &lt;code&gt;inet_res(3)&lt;/code&gt;. Defaults to 2 seconds.</source>
          <target state="translated">&lt;code&gt;inet_res(3)&lt;/code&gt; によって行われたDNSクエリの再試行までの待機時間（ミリ秒単位）を設定します。デフォルトは2秒です。</target>
        </trans-unit>
        <trans-unit id="08d13b6a782c03e365d37eabd19ca664da2780cc" translate="yes" xml:space="preserve">
          <source>Set to 'false' if xmerl should skip comments otherwise they will be returned as xmlComment records (default 'true').</source>
          <target state="translated">xmerlがコメントをスキップする場合は'false'に設定します。そうでない場合はxmlCommentレコードとして返されます(デフォルトは'true')。</target>
        </trans-unit>
        <trans-unit id="76fbe7708004047bb2afb1c782b1da39380920d9" translate="yes" xml:space="preserve">
          <source>Set to 'true' if xmerl should add to elements missing attributes with a defined default value (default 'false').</source>
          <target state="translated">xmerlが定義されたデフォルト値(デフォルトは'false'です)を持つ属性を欠落している要素に追加する場合、'true'に設定します。</target>
        </trans-unit>
        <trans-unit id="b3a6100862ef8000dffdbfabef9b03fbe4efed5b" translate="yes" xml:space="preserve">
          <source>Set to 'true' if xmerl should behave quietly and not output any information to standard output (default 'false').</source>
          <target state="translated">xmerlが静かに動作し、標準出力に何の情報も出力しないかどうかを 'true' に設定します (デフォルトは 'false' です)。</target>
        </trans-unit>
        <trans-unit id="66eb7a7119e62d94590579d9ba538816580a8e4b" translate="yes" xml:space="preserve">
          <source>Set to 'true' if xmerl should return a complete XML document as an xmlDocument record (default 'false').</source>
          <target state="translated">xmerl が完全な XML ドキュメントを xmlDocument レコードとして返すかどうかを 'true' に設定します (デフォルトは 'false' です)。</target>
        </trans-unit>
        <trans-unit id="a1a03c1e0b0cd1d311bb054ba770b084cc6f021d" translate="yes" xml:space="preserve">
          <source>Set user id on execution</source>
          <target state="translated">実行時にユーザーIDを設定</target>
        </trans-unit>
        <trans-unit id="a03a3e4e8928d8477b7e1f484633e86f075cb412" translate="yes" xml:space="preserve">
          <source>Set verbosity levels (similar to &lt;code&gt;ct_run -verbosity&lt;/code&gt;).</source>
          <target state="translated">詳細レベルを設定します（ &lt;code&gt;ct_run -verbosity&lt;/code&gt; と同様）。</target>
        </trans-unit>
        <trans-unit id="ca778adba8a1ef9615d0d2c7fde406715790347d" translate="yes" xml:space="preserve">
          <source>Set(T,Term) = Term, where T is an atom</source>
          <target state="translated">Set(T,Term)=Term,ここで T は原子である。</target>
        </trans-unit>
        <trans-unit id="1e10feb9799e50623c9bf8a9567eaa50e9939fd6" translate="yes" xml:space="preserve">
          <source>Set([T], [X[1], ..., X[n]]) = {Set(T, X[1]), ..., Set(T, X[n])}</source>
          <target state="translated">Set([T],[X[1],...,X[n])={Set(T,X[1],...,Set(T,X[n])}.</target>
        </trans-unit>
        <trans-unit id="413498d027ca502d98470e9ce84766c4039cf1ea" translate="yes" xml:space="preserve">
          <source>Set([T], []) = {}</source>
          <target state="translated">Set([T],[])={}。</target>
        </trans-unit>
        <trans-unit id="7fd0a36887cd69f40802ddb5e7e82ea6eeebcf34" translate="yes" xml:space="preserve">
          <source>Set({T[1], ..., T[n]}, {X[1], ..., X[n]}) = (Set(T[1], X[1]), ..., Set(T[n], X[n]))</source>
          <target state="translated">Set({T[1],...T[n]},{X[1],...X[n]})=(Set(T[1],X[1]),...Set(T[n],X[n]))</target>
        </trans-unit>
        <trans-unit id="1c06dfb34f2f4bf919808259ba70305b1ddd9650" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*dp&lt;/code&gt; to the floating-point value of &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*dp&lt;/code&gt; を &lt;code&gt;term&lt;/code&gt; の浮動小数点値に設定します。</target>
        </trans-unit>
        <trans-unit id="e051f7d5badeaed03b0b1d0a541992d21c1addf9" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*head&lt;/code&gt; and &lt;code&gt;*tail&lt;/code&gt; from list &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">リスト &lt;code&gt;list&lt;/code&gt; &lt;code&gt;*head&lt;/code&gt; と &lt;code&gt;*tail&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="e51b6603c560e21dcd95c8a681f5cba8d55372a9" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*ip&lt;/code&gt; to the integer value of &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*ip&lt;/code&gt; を &lt;code&gt;term&lt;/code&gt; の整数値に設定します。</target>
        </trans-unit>
        <trans-unit id="571e173a08327b6e4b86b6ce45879f312f580ef8" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*ip&lt;/code&gt; to the long integer value of &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*ip&lt;/code&gt; を &lt;code&gt;term&lt;/code&gt; の長整数値に設定します。</target>
        </trans-unit>
        <trans-unit id="613dc3641992693e7800bbeb7cd30ae95e85d4a3" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*ip&lt;/code&gt; to the unsigned integer value of &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*ip&lt;/code&gt; を &lt;code&gt;term&lt;/code&gt; の符号なし整数値に設定します。</target>
        </trans-unit>
        <trans-unit id="86ba384052f60ac175063bcb3873f9c02f933f41" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*ip&lt;/code&gt; to the unsigned long integer value of &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*ip&lt;/code&gt; を &lt;code&gt;term&lt;/code&gt; の符号なし長整数値に設定します。</target>
        </trans-unit>
        <trans-unit id="915a720de8e28ec31c8841ac19081593d9b84062" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*len&lt;/code&gt; to the length (number of bytes excluding terminating &lt;code&gt;NULL&lt;/code&gt; character) of the atom &lt;code&gt;term&lt;/code&gt; with encoding &lt;code&gt;encode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*len&lt;/code&gt; を、エンコーディング &lt;code&gt;encode&lt;/code&gt; を使用して、アトム &lt;code&gt;term&lt;/code&gt; の長さ（終端の &lt;code&gt;NULL&lt;/code&gt; 文字を除くバイト数）に設定します。</target>
        </trans-unit>
        <trans-unit id="f45f5eb51a4fbfb531a0011893bc38aa06940406" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*len&lt;/code&gt; to the length of list &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*len&lt;/code&gt; をリスト &lt;code&gt;term&lt;/code&gt; の長さに設定します。</target>
        </trans-unit>
        <trans-unit id="4540298ab375e444ccad190a52e6e0477fd70600" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*list_out&lt;/code&gt; to the reverse list of the list &lt;code&gt;list_in&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt;, or returns &lt;code&gt;false&lt;/code&gt; if &lt;code&gt;list_in&lt;/code&gt; is not a list.</source>
          <target state="translated">セット &lt;code&gt;*list_out&lt;/code&gt; リストの逆のリストに &lt;code&gt;list_in&lt;/code&gt; 戻り &lt;code&gt;true&lt;/code&gt; 、またはリターン &lt;code&gt;false&lt;/code&gt; ならば &lt;code&gt;list_in&lt;/code&gt; がリストではありません。</target>
        </trans-unit>
        <trans-unit id="4aacd3e0359772fef237556f152787f4d410bbfd" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*objp&lt;/code&gt; to point to the resource object referred to by &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*objp&lt;/code&gt; を、 &lt;code&gt;term&lt;/code&gt; で参照されるリソースオブジェクトを指すように設定します。</target>
        </trans-unit>
        <trans-unit id="05fcb7ced968bcff373ec6a2edb89431fd8224dd" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*size&lt;/code&gt; to the number of key-value pairs in the map &lt;code&gt;term&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*size&lt;/code&gt; をマップ &lt;code&gt;term&lt;/code&gt; のキーと値のペアの数に設定します。</target>
        </trans-unit>
        <trans-unit id="beaa2fee2e9a9f6a8abdbe5756d1796f1ba8d12e" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;*value&lt;/code&gt; to the value associated with &lt;code&gt;key&lt;/code&gt; in the map &lt;code&gt;map&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;*value&lt;/code&gt; をマップ &lt;code&gt;map&lt;/code&gt; &lt;code&gt;key&lt;/code&gt; に関連付けられた値に設定します。</target>
        </trans-unit>
        <trans-unit id="2d424f307db0ea4cc28ba2b241c77bfef339d143" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; only flag. Defaults to &lt;code&gt;true&lt;/code&gt;. When a super carrier is used and this flag is &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;mseg_alloc&lt;/code&gt; only creates carriers in the super carrier. Notice that the &lt;code&gt;alloc_util&lt;/code&gt; framework can create &lt;code&gt;sys_alloc&lt;/code&gt; carriers, so if you want all carriers to be created in the super carrier, you therefore want to disable use of &lt;code&gt;sys_alloc&lt;/code&gt; carriers by also passing &lt;code&gt;&lt;a href=&quot;#Musac&quot;&gt;+Musac false&lt;/a&gt;&lt;/code&gt;. When the flag is &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;mseg_alloc&lt;/code&gt; tries to create carriers outside of the super carrier when the super carrier is full.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; のみのフラグを設定します。デフォルトは &lt;code&gt;true&lt;/code&gt; です。スーパーキャリアが使用され、このフラグが &lt;code&gt;true&lt;/code&gt; の場合、 &lt;code&gt;mseg_alloc&lt;/code&gt; はスーパーキャリアにのみキャリアを作成します。ことに注意してください &lt;code&gt;alloc_util&lt;/code&gt; 枠組みを作成することができます &lt;code&gt;sys_alloc&lt;/code&gt; あなたはすべてのキャリアがスーパーキャリアで作成することにしたいのであれば、あなたはそのための使用を無効にしたい、キャリアを &lt;code&gt;sys_alloc&lt;/code&gt; も渡すことによってキャリア &lt;code&gt;&lt;a href=&quot;#Musac&quot;&gt;+Musac false&lt;/a&gt;&lt;/code&gt; 。フラグが &lt;code&gt;false&lt;/code&gt; の場合、スーパーキャリアがいっぱいになると、 &lt;code&gt;mseg_alloc&lt;/code&gt; はスーパーキャリアの外部にキャリアを作成しようとします。</target>
        </trans-unit>
        <trans-unit id="b1d4ec5452d888d17be9d1b1fff275616c522a40" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; reserve physical memory flag. Defaults to &lt;code&gt;true&lt;/code&gt;. When this flag is &lt;code&gt;true&lt;/code&gt;, physical memory is reserved for the whole super carrier at once when it is created. The reservation is after that left unchanged. When this flag is set to &lt;code&gt;false&lt;/code&gt;, only virtual address space is reserved for the super carrier upon creation. The system attempts to reserve physical memory upon carrier creations in the super carrier, and attempt to unreserve physical memory upon carrier destructions in the super carrier.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; 予約物理メモリフラグを設定します。デフォルトは &lt;code&gt;true&lt;/code&gt; です。このフラグが &lt;code&gt;true&lt;/code&gt; の場合、スーパーキャリアが作成されると、スーパーキャリア全体のために物理メモリが一度に予約されます。予約は変更されません。このフラグを &lt;code&gt;false&lt;/code&gt; に設定すると、作成時にスーパーキャリア用に仮想アドレススペースのみが予約されます。システムは、スーパーキャリアでのキャリアの作成時に物理メモリの予約を試み、スーパーキャリアでのキャリアの破壊時に物理メモリの予約を解除しようとします。</target>
        </trans-unit>
        <trans-unit id="b5a297dec64e0c41c90d9d4e3f880b30e39fdcd8" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; reserved free segment descriptors. Defaults to &lt;code&gt;65536&lt;/code&gt;. This parameter determines the amount of memory to reserve for free segment descriptors used by the super carrier. If the system runs out of reserved memory for free segment descriptors, other memory is used. This can however cause fragmentation issues, so you want to ensure that this never happens. The maximum amount of free segment descriptors used can be retrieved from the &lt;code&gt;erts_mmap&lt;/code&gt; tuple part of the result from calling &lt;code&gt; erlang:system_info({allocator, mseg_alloc})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; 予約済み空きセグメント記述子を設定します。デフォルトは &lt;code&gt;65536&lt;/code&gt; です。このパラメータは、スーパーキャリアが使用する空きセグメント記述子用に予約するメモリの量を決定します。システムが空きセグメント記述子用に予約されたメモリを使い果たした場合、他のメモリが使用されます。ただし、これにより断片化の問題が発生する可能性があるため、これが発生しないようにする必要があります。使用される空きセグメント記述子の最大量は、 &lt;code&gt; erlang:system_info({allocator, mseg_alloc})&lt;/code&gt; を呼び出した結果の &lt;code&gt;erts_mmap&lt;/code&gt; タプル部分から取得できます。</target>
        </trans-unit>
        <trans-unit id="1612d1b41c97922be4489ee03c0939a8fd5d8b4d" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; reserved free segment descriptors. Defaults to &lt;code&gt;65536&lt;/code&gt;. This parameter determines the amount of memory to reserve for free segment descriptors used by the super carrier. If the system runs out of reserved memory for free segment descriptors, other memory is used. This can however cause fragmentation issues, so you want to ensure that this never happens. The maximum amount of free segment descriptors used can be retrieved from the &lt;code&gt;erts_mmap&lt;/code&gt; tuple part of the result from calling &lt;code&gt;erlang:system_info({allocator, mseg_alloc})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#MMscs&quot;&gt;super carrier&lt;/a&gt;&lt;/code&gt; 予約した空きセグメント記述子を設定します。デフォルトは &lt;code&gt;65536&lt;/code&gt; です。このパラメーターは、スーパーキャリアが使用する空きセグメント記述子用に予約するメモリの量を決定します。システムが空きセグメント記述子用の予約済みメモリを使い果たすと、他のメモリが使用されます。ただし、これにより断片化の問題が発生する可能性があるため、これが発生しないようにする必要があります。使用される空きセグメント記述子の最大量は、 &lt;code&gt;erlang:system_info({allocator, mseg_alloc})&lt;/code&gt; を呼び出した結果の &lt;code&gt;erts_mmap&lt;/code&gt; タプル部分から取得できます。</target>
        </trans-unit>
        <trans-unit id="9ebb876a63208fcdcfb339ce9e69d82e63c7a04b" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt;time warp mode&lt;/a&gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;time_correction#Time_Warp_Modes&quot;&gt;time warp mode&lt;/a&gt;&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="7d25034a18042a5fdc2f4a71230a294a34c64875" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;verbosity levels for printouts&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;write_test_chapter#logging&quot;&gt;verbosity levels for printouts&lt;/a&gt;&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="4852521a61b195efaf2f348ded9c7d061b93172d" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;IPV6_TCLASS IP&lt;/code&gt; level options on platforms where this is implemented. The behavior and allowed range varies between different systems. The option is ignored on platforms where it is not implemented. Use with caution.</source>
          <target state="translated">これが実装されているプラ​​ットフォームで &lt;code&gt;IPV6_TCLASS IP&lt;/code&gt; レベルオプションを設定します。動作と許容範囲は、システムによって異なります。このオプションは、実装されていないプラットフォームでは無視されます。注意して使用してください。</target>
        </trans-unit>
        <trans-unit id="35cf2c0f5bf4ff6c4b3ed386f7b45919378d8588" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;IP_TOS IP&lt;/code&gt; level options on platforms where this is implemented. The behavior and allowed range varies between different systems. The option is ignored on platforms where it is not implemented. Use with caution.</source>
          <target state="translated">これが実装されているプラ​​ットフォームで &lt;code&gt;IP_TOS IP&lt;/code&gt; レベルオプションを設定します。動作と許容範囲は、システムによって異なります。このオプションは、実装されていないプラットフォームでは無視されます。注意して使用してください。</target>
        </trans-unit>
        <trans-unit id="3067dd797e2d91f5e74fcce739bf10d2c4d32e50" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;net_ticktime&lt;/code&gt; (see &lt;code&gt;kernel(6)&lt;/code&gt;) to &lt;code&gt;NetTicktime&lt;/code&gt; seconds. &lt;code&gt;TransitionPeriod&lt;/code&gt; defaults to &lt;code&gt;60&lt;/code&gt;.</source>
          <target state="translated">セットは &lt;code&gt;net_ticktime&lt;/code&gt; （参照 &lt;code&gt;kernel(6)&lt;/code&gt; へ） &lt;code&gt;NetTicktime&lt;/code&gt; の秒。 &lt;code&gt;TransitionPeriod&lt;/code&gt; のデフォルトは &lt;code&gt;60&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c15b21e5980ed919de9bd7b33856ffd75d752ac5" translate="yes" xml:space="preserve">
          <source>Sets a conditional breakpoint.</source>
          <target state="translated">条件付きブレークポイントを設定します。</target>
        </trans-unit>
        <trans-unit id="e958994f825f779aaaf22b4d1627bd52da981b53" translate="yes" xml:space="preserve">
          <source>Sets a function breakpoint.</source>
          <target state="translated">関数のブレークポイントを設定します。</target>
        </trans-unit>
        <trans-unit id="13db4a451ebcde54e302290d8a49e1f659727139" translate="yes" xml:space="preserve">
          <source>Sets a line breakpoint.</source>
          <target state="translated">改行ポイントを設定します。</target>
        </trans-unit>
        <trans-unit id="d7529eae50d20b8a22057a81dd1f470a3676e6b5" translate="yes" xml:space="preserve">
          <source>Sets a link to the parent process (like &lt;code&gt;&lt;a href=&quot;#spawn_link-3&quot;&gt;spawn_link/3&lt;/a&gt;&lt;/code&gt; does).</source>
          <target state="translated">親プロセスへのリンクを設定します（ &lt;code&gt;&lt;a href=&quot;#spawn_link-3&quot;&gt;spawn_link/3&lt;/a&gt;&lt;/code&gt; と同様）。</target>
        </trans-unit>
        <trans-unit id="378330ec692ad34d970693f8795104131edf1cb9" translate="yes" xml:space="preserve">
          <source>Sets a lock on &lt;code&gt;Id&lt;/code&gt; (using &lt;code&gt;&lt;a href=&quot;#set_lock-3&quot;&gt;set_lock/3&lt;/a&gt;&lt;/code&gt;). If this succeeds, &lt;code&gt;Fun()&lt;/code&gt; is evaluated and the result &lt;code&gt;Res&lt;/code&gt; is returned. Returns &lt;code&gt;aborted&lt;/code&gt; if the lock attempt fails. If &lt;code&gt;Retries&lt;/code&gt; is set to &lt;code&gt;infinity&lt;/code&gt;, the transaction does not abort.</source>
          <target state="translated">&lt;code&gt;Id&lt;/code&gt; にロックを設定します（ &lt;code&gt;&lt;a href=&quot;#set_lock-3&quot;&gt;set_lock/3&lt;/a&gt;&lt;/code&gt; を使用）。これが成功すると、 &lt;code&gt;Fun()&lt;/code&gt; が評価され、結果 &lt;code&gt;Res&lt;/code&gt; が返されます。ロックの試行が失敗し &lt;code&gt;aborted&lt;/code&gt; 場合は中止された状態を返します。 &lt;code&gt;Retries&lt;/code&gt; が &lt;code&gt;infinity&lt;/code&gt; に設定されている場合、トランザクションは中止されません。</target>
        </trans-unit>
        <trans-unit id="e1aebf3301cf94c465826ebf94b60880a279cbdf" translate="yes" xml:space="preserve">
          <source>Sets a lock on the specified nodes (or on all nodes if none are specified) on &lt;code&gt;ResourceId&lt;/code&gt; for &lt;code&gt;LockRequesterId&lt;/code&gt;. If a lock already exists on &lt;code&gt;ResourceId&lt;/code&gt; for another requester than &lt;code&gt;LockRequesterId&lt;/code&gt;, and &lt;code&gt;Retries&lt;/code&gt; is not equal to &lt;code&gt;0&lt;/code&gt;, the process sleeps for a while and tries to execute the action later. When &lt;code&gt;Retries&lt;/code&gt; attempts have been made, &lt;code&gt;false&lt;/code&gt; is returned, otherwise &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;Retries&lt;/code&gt; is &lt;code&gt;infinity&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt; is eventually returned (unless the lock is never released).</source>
          <target state="translated">&lt;code&gt;LockRequesterId&lt;/code&gt; の &lt;code&gt;ResourceId&lt;/code&gt; に指定されたノード（または指定されていない場合はすべてのノード）にロックを設定します。 &lt;code&gt;LockRequesterId&lt;/code&gt; 以外のリクエスタの &lt;code&gt;ResourceId&lt;/code&gt; にすでにロックが存在し、 &lt;code&gt;Retries&lt;/code&gt; が &lt;code&gt;0&lt;/code&gt; でない場合、プロセスはしばらくスリープ状態になり、後でアクションを実行しようとします。ときに &lt;code&gt;Retries&lt;/code&gt; 試みが行われている、 &lt;code&gt;false&lt;/code&gt; がそうでない場合、返される &lt;code&gt;true&lt;/code&gt; 。 &lt;code&gt;Retries&lt;/code&gt; が &lt;code&gt;infinity&lt;/code&gt; の場合、最終的に &lt;code&gt;true&lt;/code&gt; が返されます（ロックが解放されない限り）。</target>
        </trans-unit>
        <trans-unit id="31eee8040c64ddf8571c4c3add0e9753c79530ec" translate="yes" xml:space="preserve">
          <source>Sets a network namespace for the socket. Parameter &lt;code&gt;Namespace&lt;/code&gt; is a filename defining the namespace, for example, &lt;code&gt;&quot;/var/run/netns/example&quot;&lt;/code&gt;, typically created by command &lt;code&gt;ip netns add example&lt;/code&gt;. This option must be used in a function call that creates a socket, that is, &lt;code&gt;&lt;a href=&quot;gen_tcp#connect-3&quot;&gt;gen_tcp:connect/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gen_tcp#listen-2&quot;&gt;gen_tcp:listen/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gen_udp#open-1&quot;&gt;gen_udp:open/1,2&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;gen_sctp#open-0&quot;&gt;gen_sctp:open/0,1,2&lt;/a&gt;&lt;/code&gt;, and also &lt;code&gt;&lt;a href=&quot;#getifaddrs-1&quot;&gt;getifaddrs/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ソケットのネットワーク名前空間を設定します。パラメータ &lt;code&gt;Namespace&lt;/code&gt; は、名前空間を定義するファイル名です。たとえば、 &lt;code&gt;&quot;/var/run/netns/example&quot;&lt;/code&gt; 、通常、コマンド &lt;code&gt;ip netns add example&lt;/code&gt; によって作成されます。このオプションは、ソケットを作成する関数呼び出しで使用する必要があります。つまり、 &lt;code&gt;&lt;a href=&quot;gen_tcp#connect-3&quot;&gt;gen_tcp:connect/3,4&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;gen_tcp#listen-2&quot;&gt;gen_tcp:listen/2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;gen_udp#open-1&quot;&gt;gen_udp:open/1,2&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;gen_sctp#open-0&quot;&gt;gen_sctp:open/0,1,2&lt;/a&gt;&lt;/code&gt; 、およびまた、 &lt;code&gt;&lt;a href=&quot;#getifaddrs-1&quot;&gt;getifaddrs/1&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45fa85c61ffdffc636edd96b3c09aa20ad418e82" translate="yes" xml:space="preserve">
          <source>Sets a network namespace for the socket. Parameter &lt;code&gt;Namespace&lt;/code&gt; is a filename defining the namespace, for example, &lt;code&gt;&quot;/var/run/netns/example&quot;&lt;/code&gt;, typically created by command &lt;code&gt;ip netns add example&lt;/code&gt;. This option must be used in a function call that creates a socket, that is, &lt;code&gt;&lt;a href=&quot;gen_tcp#connect-3&quot;&gt;gen_tcp:connect/3,4&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gen_tcp#listen-2&quot;&gt;gen_tcp:listen/2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;gen_udp#open-1&quot;&gt;gen_udp:open/1,2&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;gen_sctp#open-0&quot;&gt;gen_sctp:open/0,1,2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ソケットのネットワーク名前空間を設定します。パラメータ &lt;code&gt;Namespace&lt;/code&gt; は、名前空間を定義するファイル名です。たとえば、 &lt;code&gt;&quot;/var/run/netns/example&quot;&lt;/code&gt; 、通常、コマンド &lt;code&gt;ip netns add example&lt;/code&gt; で作成されます。このオプションは、ソケットを作成する関数呼び出しで使用する必要があります。つまり、 &lt;code&gt;&lt;a href=&quot;gen_tcp#connect-3&quot;&gt;gen_tcp:connect/3,4&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;gen_tcp#listen-2&quot;&gt;gen_tcp:listen/2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;gen_udp#open-1&quot;&gt;gen_udp:open/1,2&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;gen_sctp#open-0&quot;&gt;gen_sctp:open/0,1,2&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fc9ccba50f71fcd13f784682ef8be0b3e882300c" translate="yes" xml:space="preserve">
          <source>Sets a new &lt;code&gt;Value&lt;/code&gt; for environment variable &lt;code&gt;VarName&lt;/code&gt;.</source>
          <target state="translated">環境変数 &lt;code&gt;VarName&lt;/code&gt; の新しい &lt;code&gt;Value&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="d81d3bf72e4dc51ac97c9faa67c434a822a766af" translate="yes" xml:space="preserve">
          <source>Sets a new directory for the object code. The current directory is used for output, except when a directory has been specified with this option.</source>
          <target state="translated">オブジェクトコードの新しいディレクトリを設定します。このオプションでディレクトリが指定されている場合を除き、カレントディレクトリが出力に使用されます。</target>
        </trans-unit>
        <trans-unit id="4ccc3c86ad893d9367459062c3e0cd6e9a7d7648" translate="yes" xml:space="preserve">
          <source>Sets a new timetrap for the running test case.</source>
          <target state="translated">実行中のテストケースに新しいタイムトラップを設定します。</target>
        </trans-unit>
        <trans-unit id="94974c0a1d5854fe21633dd5ad87299cb2fa3e5c" translate="yes" xml:space="preserve">
          <source>Sets a new value to a variable. The variable is created if it does not exist. No checks are made on the type of the new value.</source>
          <target state="translated">変数に新しい値を設定します。変数が存在しない場合は、変数が作成されます。新しい値の型はチェックされません。</target>
        </trans-unit>
        <trans-unit id="67c8307c383c4b2a2c9cf2c4db6d748df38e0492" translate="yes" xml:space="preserve">
          <source>Sets a temporary reboot command. This command is used if a &lt;code&gt;HEART_COMMAND&lt;/code&gt; other than the one specified with the environment variable is to be used to reboot the system. The new Erlang runtime system uses (if it misbehaves) environment variable &lt;code&gt;HEART_COMMAND&lt;/code&gt; to reboot.</source>
          <target state="translated">一時的な再起動コマンドを設定します。このコマンドは、環境変数で指定されたもの以外の &lt;code&gt;HEART_COMMAND&lt;/code&gt; を使用してシステムを再起動する場合に使用されます。新しいErlangランタイムシステムは、（ &lt;code&gt;HEART_COMMAND&lt;/code&gt; しない場合は）環境変数HEART_COMMANDを使用して再起動します。</target>
        </trans-unit>
        <trans-unit id="bfcfc1f87c9268646e242d73a5086422e1c0e9ec" translate="yes" xml:space="preserve">
          <source>Sets a time limit for the complete &lt;code&gt;expect&lt;/code&gt; operation. After &lt;code&gt;TotalTimeout&lt;/code&gt; milliseconds, &lt;code&gt;{error,timeout}&lt;/code&gt; is returned. Default is &lt;code&gt;infinity&lt;/code&gt; (that is, no time limit).</source>
          <target state="translated">完全な &lt;code&gt;expect&lt;/code&gt; 操作の時間制限を設定します。 &lt;code&gt;TotalTimeout&lt;/code&gt; ミリ秒後、 &lt;code&gt;{error,timeout}&lt;/code&gt; が返されます。デフォルトは &lt;code&gt;infinity&lt;/code&gt; （つまり、時間制限はありません）。</target>
        </trans-unit>
        <trans-unit id="7ac530e4a2972399690caac535efe4009b77a789" translate="yes" xml:space="preserve">
          <source>Sets a time-out on a connection when no channels are active. Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">アクティブなチャネルがない場合の接続のタイムアウトを設定します。デフォルトは &lt;code&gt;infinity&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="04f58b131e4c5efa20eb55570ef64870b720e260" translate="yes" xml:space="preserve">
          <source>Sets a time-out on a connection when no channels are open. Defaults to &lt;code&gt;infinity&lt;/code&gt;. The unit is milliseconds.</source>
          <target state="translated">開いているチャネルがない場合に、接続のタイムアウトを設定します。デフォルトは &lt;code&gt;infinity&lt;/code&gt; です。単位はミリ秒です。</target>
        </trans-unit>
        <trans-unit id="80d407ca28e92b15f8e9a5ead685e62e613d8d41" translate="yes" xml:space="preserve">
          <source>Sets a time-out on a connection when no channels are open. Defaults to infinity.</source>
          <target state="translated">チャンネルが開いていないときの接続のタイムアウトを設定します。デフォルトは無限大です。</target>
        </trans-unit>
        <trans-unit id="98e674062633a7af96f204ff5dc228376acf0a5d" translate="yes" xml:space="preserve">
          <source>Sets a timeout on the transport layer connect time. For &lt;code&gt;gen_tcp&lt;/code&gt; the time is in milli-seconds and the default value is &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">トランスポート層の接続時間にタイムアウトを設定します。 &lt;code&gt;gen_tcp&lt;/code&gt; 時間はミリ秒であり、デフォルト値は &lt;code&gt;infinity&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee425ba9c0ee48277c9503c7d0126036be193f1f" translate="yes" xml:space="preserve">
          <source>Sets a timer on the driver, which will count down and call the driver when it is timed out. Parameter &lt;code&gt;time&lt;/code&gt; is the time in milliseconds before the timer expires.</source>
          <target state="translated">ドライバーにタイマーを設定します。タイマーがタイムアウトすると、カウントダウンしてドライバーを呼び出します。パラメータ &lt;code&gt;time&lt;/code&gt; は、タイマーが切れるまでのミリ秒単位の時間です。</target>
        </trans-unit>
        <trans-unit id="a49ab86917c6d2a622df15cb53f1cc3db42e35a4" translate="yes" xml:space="preserve">
          <source>Sets a user-defined CPU topology. The user-defined CPU topology overrides any automatically detected CPU topology. The CPU topology is used when &lt;code&gt;&lt;a href=&quot;#+sbt&quot;&gt;binding schedulers to logical processors&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ユーザー定義のCPUトポロジを設定します。ユーザー定義のCPUトポロジは、自動的に検出されたCPUトポロジを上書きします。CPUトポロジは、 &lt;code&gt;&lt;a href=&quot;#+sbt&quot;&gt;binding schedulers to logical processors&lt;/a&gt;&lt;/code&gt; にバインドするときに使用されます。</target>
        </trans-unit>
        <trans-unit id="a5a46f50076710c9e5150e115a75150579da01d6" translate="yes" xml:space="preserve">
          <source>Sets all flags except &lt;code&gt;silent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;silent&lt;/code&gt; を除くすべてのフラグを設定します。</target>
        </trans-unit>
        <trans-unit id="9c03475cf14316ae353a4e7da23272a974c3a451" translate="yes" xml:space="preserve">
          <source>Sets all trace flags except &lt;code&gt;tracer&lt;/code&gt; and &lt;code&gt;cpu_timestamp&lt;/code&gt;, which are in their nature different than the others.</source>
          <target state="translated">&lt;code&gt;tracer&lt;/code&gt; と &lt;code&gt;cpu_timestamp&lt;/code&gt; を除いて、すべてのトレースフラグを設定します。これらは、他のものとは性質が異なります。</target>
        </trans-unit>
        <trans-unit id="854090be1c214475fbf1b8a6ff2070087d7f8451" translate="yes" xml:space="preserve">
          <source>Sets an &lt;code&gt;&lt;a href=&quot;#ErlNifPid&quot;&gt;ErlNifPid&lt;/a&gt;&lt;/code&gt; variable as undefined. See &lt;code&gt;&lt;a href=&quot;#enif_is_pid_undefined&quot;&gt; enif_is_pid_undefined&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#ErlNifPid&quot;&gt;ErlNifPid&lt;/a&gt;&lt;/code&gt; 変数を未定義として設定します。 &lt;code&gt;&lt;a href=&quot;#enif_is_pid_undefined&quot;&gt; enif_is_pid_undefined&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="10c846791ad68cf6dbd94eefcd66884aefebb31c" translate="yes" xml:space="preserve">
          <source>Sets an additional message appended to the trace message sent. One can only set one additional message in the body. Later calls replace the appended message.</source>
          <target state="translated">送信されたトレースメッセージに追加のメッセージを設定します。ボディには 1 つの追加メッセージしか設定できません。後の呼び出しは、追加されたメッセージを置き換えます。</target>
        </trans-unit>
        <trans-unit id="0af1dd2df9ce15000cd6d34bd367aefd9761c132" translate="yes" xml:space="preserve">
          <source>Sets and gets limits that will be used for controlling the busy state of the port message queue.</source>
          <target state="translated">ポートメッセージキューのビジー状態を制御するために使用される制限値を設定または取得します。</target>
        </trans-unit>
        <trans-unit id="8358d2f89529ff4b158b690b7b56c9c199b14059" translate="yes" xml:space="preserve">
          <source>Sets and unsets the busy state of the port. If &lt;code&gt;on&lt;/code&gt; is non-zero, the port is set to busy. If it is zero, the port is set to not busy. You typically want to combine this feature with the &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt; busy port message queue&lt;/a&gt;&lt;/code&gt; functionality.</source>
          <target state="translated">ポートのビジー状態を設定および設定解除します。場合 &lt;code&gt;on&lt;/code&gt; ゼロで、ポートが忙しいに設定されています。ゼロの場合、ポートはビジーではないように設定されます。通常、この機能を &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt; busy port message queue&lt;/a&gt;&lt;/code&gt; 機能と組み合わせる必要があります。</target>
        </trans-unit>
        <trans-unit id="4d5c29272406fc646646cf47942988ee10b91f01" translate="yes" xml:space="preserve">
          <source>Sets and unsets the busy state of the port. If &lt;code&gt;on&lt;/code&gt; is non-zero, the port is set to busy. If it is zero, the port is set to not busy. You typically want to combine this feature with the &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt;busy port message queue&lt;/a&gt;&lt;/code&gt; functionality.</source>
          <target state="translated">ポートのビジー状態を設定および設定解除します。場合 &lt;code&gt;on&lt;/code&gt; ゼロで、ポートが忙しいに設定されています。ゼロの場合、ポートはビジーでないように設定されています。通常、この機能を &lt;code&gt;&lt;a href=&quot;#erl_drv_busy_msgq_limits&quot;&gt;busy port message queue&lt;/a&gt;&lt;/code&gt; 機能と組み合わせる必要があります。</target>
        </trans-unit>
        <trans-unit id="8a85c3ea45147b9fedbadf6c395811358fe8a84f" translate="yes" xml:space="preserve">
          <source>Sets are collections of elements with no duplicate elements. An &lt;code&gt;ordset&lt;/code&gt; is a representation of a set, where an ordered list is used to store the elements of the set. An ordered list is more efficient than an unordered list. Elements are ordered according to the &lt;strong&gt;Erlang term order&lt;/strong&gt;.</source>
          <target state="translated">セットは、重複する要素のない要素のコレクションです。 &lt;code&gt;ordset&lt;/code&gt; は、順序付きリストは、集合の要素を格納するために使用されるセットの表現です。順序付きリストは、順序なしリストよりも効率的です。要素は、&lt;strong&gt;Erlang用語の順序&lt;/strong&gt;に従って並べられます。</target>
        </trans-unit>
        <trans-unit id="4c19d390137232ae72a1d248cdc31d7776e598b6" translate="yes" xml:space="preserve">
          <source>Sets are collections of elements with no duplicate elements. The representation of a set is undefined.</source>
          <target state="translated">セットとは、要素の集合であり、重複する要素はありません。セットの表現は未定義です。</target>
        </trans-unit>
        <trans-unit id="365028eb14a26a137690d1db3a4043622bdbec75" translate="yes" xml:space="preserve">
          <source>Sets certain flags for the process &lt;code&gt;Pid&lt;/code&gt;, in the same manner as &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;. Returns the old value of the flag. The valid values for &lt;code&gt;Flag&lt;/code&gt; are only a subset of those allowed in &lt;code&gt;process_flag/2&lt;/code&gt;, namely &lt;code&gt;save_calls&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; と同じ方法で、プロセス &lt;code&gt;Pid&lt;/code&gt; に特定のフラグを設定します。フラグの古い値を返します。 &lt;code&gt;Flag&lt;/code&gt; の有効な値は、 &lt;code&gt;process_flag/2&lt;/code&gt; で許可されている値のサブセット、つまり &lt;code&gt;save_calls&lt;/code&gt; のみです。</target>
        </trans-unit>
        <trans-unit id="a3079388d610d17042e9be4c35387553a2f4be5e" translate="yes" xml:space="preserve">
          <source>Sets default scheduler hint for port parallelism. If set to &lt;code&gt;true&lt;/code&gt;, the virtual machine schedules port tasks when it improves parallelism in the system. If set to &lt;code&gt;false&lt;/code&gt;, the virtual machine tries to perform port tasks immediately, improving latency at the expense of parallelism. Default to &lt;code&gt;false&lt;/code&gt;. The default used can be inspected in runtime by calling &lt;code&gt;&lt;a href=&quot;erlang#system_info_port_parallelism&quot;&gt; erlang:system_info(port_parallelism)&lt;/a&gt;&lt;/code&gt;. The default can be overridden on port creation by passing option &lt;code&gt;&lt;a href=&quot;erlang#open_port_parallelism&quot;&gt; parallelism&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;erlang#open_port-2&quot;&gt; erlang:open_port/2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ポート並列処理のデフォルトのスケジューラヒントを設定します。 &lt;code&gt;true&lt;/code&gt; に設定すると、仮想マシンは、システムの並列処理が改善されたときにポートタスクをスケジュールします。 &lt;code&gt;false&lt;/code&gt; に設定すると、仮想マシンはポートタスクをすぐに実行しようとし、並列処理を犠牲にして遅延を改善します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。使用されるデフォルトは、 &lt;code&gt;&lt;a href=&quot;erlang#system_info_port_parallelism&quot;&gt; erlang:system_info(port_parallelism)&lt;/a&gt;&lt;/code&gt; を呼び出すことで実行時に検査できます。オプションの &lt;code&gt;&lt;a href=&quot;erlang#open_port_parallelism&quot;&gt; parallelism&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;&lt;a href=&quot;erlang#open_port-2&quot;&gt; erlang:open_port/2&lt;/a&gt;&lt;/code&gt; に渡すことで、ポートの作成時にデフォルトをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="68d944e5445db3a3e9e6c96dd7a0661e897b6fdc" translate="yes" xml:space="preserve">
          <source>Sets default scheduler hint for port parallelism. If set to &lt;code&gt;true&lt;/code&gt;, the virtual machine schedules port tasks when it improves parallelism in the system. If set to &lt;code&gt;false&lt;/code&gt;, the virtual machine tries to perform port tasks immediately, improving latency at the expense of parallelism. Default to &lt;code&gt;false&lt;/code&gt;. The default used can be inspected in runtime by calling &lt;code&gt;&lt;a href=&quot;erlang#system_info_port_parallelism&quot;&gt;erlang:system_info(port_parallelism)&lt;/a&gt;&lt;/code&gt;. The default can be overridden on port creation by passing option &lt;code&gt;&lt;a href=&quot;erlang#open_port_parallelism&quot;&gt;parallelism&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;erlang#open_port-2&quot;&gt;erlang:open_port/2&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">ポート並列処理のデフォルトスケジューラヒントを設定します。 &lt;code&gt;true&lt;/code&gt; に設定すると、仮想マシンはシステムの並列性を向上させるときにポートタスクをスケジュールします。 &lt;code&gt;false&lt;/code&gt; に設定すると、仮想マシンはポートタスクをすぐに実行しようとし、並列性を犠牲にして待ち時間を改善します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。使用されるデフォルトは、 &lt;code&gt;&lt;a href=&quot;erlang#system_info_port_parallelism&quot;&gt;erlang:system_info(port_parallelism)&lt;/a&gt;&lt;/code&gt; を呼び出すことにより、実行時に検査できます。オプションの &lt;code&gt;&lt;a href=&quot;erlang#open_port_parallelism&quot;&gt;parallelism&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;&lt;a href=&quot;erlang#open_port-2&quot;&gt;erlang:open_port/2&lt;/a&gt;&lt;/code&gt; に渡すことにより、ポートの作成時にデフォルトをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="c9a29d89884c070d02b26f487494764ac64dbd6f" translate="yes" xml:space="preserve">
          <source>Sets entry &lt;code&gt;I&lt;/code&gt; of the array to &lt;code&gt;Value&lt;/code&gt;. If &lt;code&gt;I&lt;/code&gt; is not a non-negative integer, or if the array has fixed size and &lt;code&gt;I&lt;/code&gt; is larger than the maximum index, the call fails with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">配列のエントリ &lt;code&gt;I&lt;/code&gt; を &lt;code&gt;Value&lt;/code&gt; に設定します。場合 &lt;code&gt;I&lt;/code&gt; 非負整数でない、またはアレイのサイズを固定した場合 &lt;code&gt;I&lt;/code&gt; 最大インデックスよりも大きい場合、コールが理由で失敗 &lt;code&gt;badarg&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8c90881659aa67d159aefaf68b8302a375d2eac8" translate="yes" xml:space="preserve">
          <source>Sets flags for how the &lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt; control&lt;/a&gt;&lt;/code&gt; driver entry function will return data to the port owner process. (The &lt;code&gt;control&lt;/code&gt; function is called from &lt;code&gt;&lt;a href=&quot;erlang#port_control-3&quot;&gt; erlang:port_control/3&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt; control&lt;/a&gt;&lt;/code&gt; ドライバエントリ関数がポート所有者プロセスにデータを返す方法のフラグを設定します。（ &lt;code&gt;control&lt;/code&gt; 関数は &lt;code&gt;&lt;a href=&quot;erlang#port_control-3&quot;&gt; erlang:port_control/3&lt;/a&gt;&lt;/code&gt; から呼び出されます。）</target>
        </trans-unit>
        <trans-unit id="7f9596847477de68fb61cd31ce6754f1d1d487b6" translate="yes" xml:space="preserve">
          <source>Sets flags for how the &lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt;control&lt;/a&gt;&lt;/code&gt; driver entry function will return data to the port owner process. (The &lt;code&gt;control&lt;/code&gt; function is called from &lt;code&gt;erlang:port_control/3&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;driver_entry#control&quot;&gt;control&lt;/a&gt;&lt;/code&gt; ドライバーエントリ関数がポートオーナープロセスにデータを返す方法のフラグを設定します。（ &lt;code&gt;control&lt;/code&gt; 関数は &lt;code&gt;erlang:port_control/3&lt;/code&gt; から呼び出されます。）</target>
        </trans-unit>
        <trans-unit id="557630be3374a84ea5bc1ff008a6dce65119c3ef" translate="yes" xml:space="preserve">
          <source>Sets how many call frames are to be fetched when inspecting the call stack. Does not affect other Attach Process windows.</source>
          <target state="translated">呼び出しスタックを検査する際に、何個の呼び出しフレームを取得するかを設定します。他のアタッチプロセスウィンドウには影響しません。</target>
        </trans-unit>
        <trans-unit id="43a639918218c5c3e261631ffa16e882d8c1f703" translate="yes" xml:space="preserve">
          <source>Sets how many call frames to be fetched when inspecting the call stack from the Attach Process window. Does not affect existing Attach Process windows.</source>
          <target state="translated">アタッチプロセスウィンドウからコールスタックを検査する際に取得するコールフレームの数を設定します。既存のアタッチプロセスウィンドウには影響しません。</target>
        </trans-unit>
        <trans-unit id="b55fa43db9072680896babe3757d7a3bb1da846d" translate="yes" xml:space="preserve">
          <source>Sets how to save call frames in the stack, see &lt;code&gt;&lt;a href=&quot;int#stack_trace-0&quot;&gt;int:stack_trace/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">呼び出しフレームをスタックに保存する方法を設定します &lt;code&gt;&lt;a href=&quot;int#stack_trace-0&quot;&gt;int:stack_trace/1&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="c0cec0ea0baa490d705d421e9bab395f447f4506" translate="yes" xml:space="preserve">
          <source>Sets limits that will be used for controlling the busy state of the port message queue.</source>
          <target state="translated">ポートメッセージキューのビジー状態を制御するために使用される制限を設定します。</target>
        </trans-unit>
        <trans-unit id="0c5f7e245c16a1a592f8d0c7eaa639013a0ad145" translate="yes" xml:space="preserve">
          <source>Sets limits that will be used for controlling the busy state of the port.</source>
          <target state="translated">ポートのビジー状態を制御するために使用する制限を設定します。</target>
        </trans-unit>
        <trans-unit id="ee934fe8c08a4614f83600d30848c99d1315fa93" translate="yes" xml:space="preserve">
          <source>Sets module log level for the given modules. Equivalent to calling</source>
          <target state="translated">与えられたモジュールのモジュールログレベルを設定します。を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="7b334159a61dd92e365ecad762f28fd3d37d4da3" translate="yes" xml:space="preserve">
          <source>Sets of Unicode characters are defined as belonging to certain scripts. A character from one of these sets can be matched using a script name, for example:</source>
          <target state="translated">Unicode キ ャ ラ ク タ のセ ッ ト は、 特定の ス ク リ プ ト に属す る も の と し て定義 さ れてい ます。これらのセットのいずれかの文字は、例えばスクリプト名を使用して一致させることができます。</target>
        </trans-unit>
        <trans-unit id="842480b04476339cdf8614f6453996b05005a349" translate="yes" xml:space="preserve">
          <source>Sets of test cases, called test case groups, can also be defined. A test case group can have execution properties associated with it. Execution properties specify if the test cases in the group are to be executed in random order, in parallel, or in sequence, and if the execution of the group is to be repeated. Test case groups can also be nested (that is, a group can, besides test cases, contain subgroups).</source>
          <target state="translated">テストケースグループと呼ばれるテストケースのセットを定義することもできます。テストケースグループは、それに関連付けられた実行プロパティを持つことができます。実行プロパティは、グループ内のテストケースがランダムな順序で実行されるのか、並列で実行されるのか、順番に実行されるのか、グループの実行が繰り返されるのかを指定します。テストケースグループは入れ子にすることもできます(つまり、グループはテストケースの他にサブグループを含むことができます)。</target>
        </trans-unit>
        <trans-unit id="5d0da6d96de7e6be80588b11eea7a1ce862b4c3e" translate="yes" xml:space="preserve">
          <source>Sets one or more options for a socket.</source>
          <target state="translated">ソケットに1つ以上のオプションを設定します。</target>
        </trans-unit>
        <trans-unit id="7d0f9778ea14e46d4dc23c64c0a9cf53af4c6ca7" translate="yes" xml:space="preserve">
          <source>Sets options according to &lt;code&gt;Options&lt;/code&gt; for socket &lt;code&gt;Socket&lt;/code&gt;.</source>
          <target state="translated">ソケット &lt;code&gt;Socket&lt;/code&gt; のオプションに従って &lt;code&gt;Options&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="392bdc2a479d02e92c95f7a72e8d3f92f49730d2" translate="yes" xml:space="preserve">
          <source>Sets options according to &lt;code&gt;Options&lt;/code&gt; for socket &lt;code&gt;SslSocket&lt;/code&gt;.</source>
          <target state="translated">ソケット &lt;code&gt;SslSocket&lt;/code&gt; のオプションに従って &lt;code&gt;Options&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="01bcb72c72449c33f6503140032c6f455f96e4e9" translate="yes" xml:space="preserve">
          <source>Sets options to be used for subsequent requests.</source>
          <target state="translated">後続のリクエストで使用するオプションを設定します。</target>
        </trans-unit>
        <trans-unit id="7a4449503a9d9395375abbaa4d1c05c6bf1b2ef0" translate="yes" xml:space="preserve">
          <source>Sets or clears flag &lt;code&gt;sensitive&lt;/code&gt; for the current process. When a process has been marked as sensitive by calling &lt;code&gt;process_flag(sensitive, true)&lt;/code&gt;, features in the runtime system that can be used for examining the data or inner working of the process are silently disabled.</source>
          <target state="translated">現在のプロセスの &lt;code&gt;sensitive&lt;/code&gt; フラグを設定またはクリアします。 &lt;code&gt;process_flag(sensitive, true)&lt;/code&gt; 呼び出すことによってプロセスが機密としてマークされている場合、データの検査またはプロセスの内部動作に使用できるランタイムシステムの機能は警告なしに無効になります。</target>
        </trans-unit>
        <trans-unit id="94f77b8a941c5bce3024a5454d16f36a5c3b6b03" translate="yes" xml:space="preserve">
          <source>Sets port in &lt;code&gt;command&lt;/code&gt; mode.</source>
          <target state="translated">&lt;code&gt;command&lt;/code&gt; モードでポートを設定します。</target>
        </trans-unit>
        <trans-unit id="5fb048f96bac21957c754b644e5dfe6157346204" translate="yes" xml:space="preserve">
          <source>Sets port in &lt;code&gt;data&lt;/code&gt; mode.</source>
          <target state="translated">ポートを &lt;code&gt;data&lt;/code&gt; モードに設定します。</target>
        </trans-unit>
        <trans-unit id="eae4ef4f56e53748ffd6d502fdfc94fe01735c0e" translate="yes" xml:space="preserve">
          <source>Sets port in &lt;code&gt;intermediate&lt;/code&gt; mode.</source>
          <target state="translated">ポートを &lt;code&gt;intermediate&lt;/code&gt; モードに設定します。</target>
        </trans-unit>
        <trans-unit id="c2bd8703f20f2ab0ab7e1b460035c994a52db76f" translate="yes" xml:space="preserve">
          <source>Sets pretty printing of lists to &lt;code&gt;Strings&lt;/code&gt;. The previous value of the flag is returned.</source>
          <target state="translated">リストのプリティプリントを &lt;code&gt;Strings&lt;/code&gt; に設定します。フラグの以前の値が返されます。</target>
        </trans-unit>
        <trans-unit id="7f63ff7fab40d5dbc3b262e9d79c1e43b4cf8ef7" translate="yes" xml:space="preserve">
          <source>Sets scheduler bind type.</source>
          <target state="translated">スケジューラのバインドタイプを設定します。</target>
        </trans-unit>
        <trans-unit id="789ba565310b9718ceeaeb577ba32e08910a047d" translate="yes" xml:space="preserve">
          <source>Sets scheduler busy wait threshold. Defaults to &lt;code&gt;medium&lt;/code&gt;. The threshold determines how long schedulers are to busy wait when running out of work before going to sleep.</source>
          <target state="translated">スケジューラーのビジー待機しきい値を設定します。デフォルトは &lt;code&gt;medium&lt;/code&gt; です。しきい値は、スケジューラがスリープ状態になる前に、仕事がなくなったときにビジー状態で待機する時間を決定します。</target>
        </trans-unit>
        <trans-unit id="2a12e502ac7e03517055fac2216ca745fb21e314" translate="yes" xml:space="preserve">
          <source>Sets scheduler hint for port parallelism. If set to &lt;code&gt;true&lt;/code&gt;, the virtual machine schedules port tasks; when doing so, it improves parallelism in the system. If set to &lt;code&gt;false&lt;/code&gt;, the virtual machine tries to perform port tasks immediately, improving latency at the expense of parallelism. The default can be set at system startup by passing command-line argument &lt;code&gt;&lt;a href=&quot;erl#+spp&quot;&gt;+spp&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;erl(1)&lt;/code&gt;.</source>
          <target state="translated">ポートの並列処理のスケジューラヒントを設定します。 &lt;code&gt;true&lt;/code&gt; に設定すると、仮想マシンはポートタスクをスケジュールします。そうすることで、システムの並列性が向上します。 &lt;code&gt;false&lt;/code&gt; に設定すると、仮想マシンはポートタスクをすぐに実行しようとし、並列性を犠牲にして待ち時間を改善します。デフォルトは、システム起動時にコマンドライン引数 &lt;code&gt;&lt;a href=&quot;erl#+spp&quot;&gt;+spp&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;erl(1)&lt;/code&gt; に渡すことで設定できます。</target>
        </trans-unit>
        <trans-unit id="705443dd75f41eddccabe316679e591b90ecea21" translate="yes" xml:space="preserve">
          <source>Sets scheduler wake cleanup threshold. Defaults to &lt;code&gt;medium&lt;/code&gt;. Controls how eager schedulers are to be requesting wakeup because of certain cleanup operations. When a lazy setting is used, more outstanding cleanup operations can be left undone while a scheduler is idling. When an eager setting is used, schedulers are more frequently woken, potentially increasing CPU-utilization.</source>
          <target state="translated">スケジューラウェイククリーンアップのしきい値を設定します。デフォルトは &lt;code&gt;medium&lt;/code&gt; です。特定のクリーンアップ操作により、スケジューラがウェイクアップを要求する方法を制御します。遅延設定を使用すると、スケジューラーがアイドリングしている間、より優れたクリーンアップ操作を元に戻すことができます。Eager設定を使用すると、スケジューラーがより頻繁にウェイクアップされ、CPU使用率が増加する可能性があります。</target>
        </trans-unit>
        <trans-unit id="7d38290b47732b181fb3fc7e5c1c52cfada68e3f" translate="yes" xml:space="preserve">
          <source>Sets scheduler wakeup strategy. Default strategy changed in ERTS 5.10 (Erlang/OTP R16A). This strategy was known as &lt;code&gt;proposal&lt;/code&gt; in Erlang/OTP R15. The &lt;code&gt;legacy&lt;/code&gt; strategy was used as default from R13 up to and including R15.</source>
          <target state="translated">スケジューラのウェイクアップ戦略を設定します。ERTS 5.10（Erlang / OTP R16A）でデフォルトの戦略が変更されました。この戦略は、Erlang / OTP R15 では &lt;code&gt;proposal&lt;/code&gt; として知られていました。 &lt;code&gt;legacy&lt;/code&gt; 戦略はR15を含めへとアップR13からデフォルトとして使用されました。</target>
        </trans-unit>
        <trans-unit id="9c5e094555066696f08aabf4d60ea661e9639b6c" translate="yes" xml:space="preserve">
          <source>Sets scheduler wakeup threshold. Defaults to &lt;code&gt;medium&lt;/code&gt;. The threshold determines when to wake up sleeping schedulers when more work than can be handled by currently awake schedulers exists. A low threshold causes earlier wakeups, and a high threshold causes later wakeups. Early wakeups distribute work over multiple schedulers faster, but work does more easily bounce between schedulers.</source>
          <target state="translated">スケジューラーのウェイクアップしきい値を設定します。デフォルトは &lt;code&gt;medium&lt;/code&gt; です。しきい値は、現在起動しているスケジューラで処理できるよりも多くの作業が存在する場合に、いつスリープスケジューラを起動するかを決定します。しきい値が低いとウェイクアップが早くなり、しきい値が高いとウェイクアップが遅くなります。早期のウェイクアップは、複数のスケジューラに作業をより速く分散しますが、作業はスケジューラ間でより簡単にバウンスします。</target>
        </trans-unit>
        <trans-unit id="b6bccfdea98e85199778d64fc0291952e4ec723d" translate="yes" xml:space="preserve">
          <source>Sets scheduler-forced wakeup interval. All run queues are scanned each &lt;code&gt;Interval&lt;/code&gt; milliseconds. While there are sleeping schedulers in the system, one scheduler is woken for each non-empty run queue found. &lt;code&gt;Interval&lt;/code&gt; default to &lt;code&gt;0&lt;/code&gt;, meaning this feature is disabled.</source>
          <target state="translated">スケジューラ強制ウェイクアップ間隔を設定します。すべての実行キューは、 &lt;code&gt;Interval&lt;/code&gt; ミリ秒ごとにスキャンされます。システムにスリープ中のスケジューラがある間、見つかった空でない実行キューごとに1つのスケジューラが起動されます。 &lt;code&gt;Interval&lt;/code&gt; デフォルトは &lt;code&gt;0&lt;/code&gt; で、この機能は無効になっています。</target>
        </trans-unit>
        <trans-unit id="110adc5f2f2d49b4b94105f09d26db5cb890c642" translate="yes" xml:space="preserve">
          <source>Sets super carrier size (in MB). Defaults to &lt;code&gt;0&lt;/code&gt;, that is, the super carrier is by default disabled. The super carrier is a large continuous area in the virtual address space. &lt;code&gt;mseg_alloc&lt;/code&gt; always tries to create new carriers in the super carrier if it exists. Notice that the &lt;code&gt;alloc_util&lt;/code&gt; framework can create &lt;code&gt;sys_alloc&lt;/code&gt; carriers. For more information, see &lt;code&gt;&lt;a href=&quot;#MMsco&quot;&gt;+MMsco&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">スーパーキャリアサイズ（MB）を設定します。デフォルトは &lt;code&gt;0&lt;/code&gt; です。つまり、スーパーキャリアはデフォルトで無効になっています。スーパーキャリアは、仮想アドレス空間の大きな連続した領域です。 &lt;code&gt;mseg_alloc&lt;/code&gt; は、スーパーキャリアが存在する場合、常にスーパーキャリアに新しいキャリアを作成しようとします。 &lt;code&gt;alloc_util&lt;/code&gt; フレームワークは &lt;code&gt;sys_alloc&lt;/code&gt; キャリアを作成できることに注意してください。詳細については、「 &lt;code&gt;&lt;a href=&quot;#MMsco&quot;&gt;+MMsco&lt;/a&gt;&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="4af175291c0524942dcce2c373e3303753be98c5" translate="yes" xml:space="preserve">
          <source>Sets system flag &lt;code&gt;fullsweep_after&lt;/code&gt;. &lt;code&gt;Number&lt;/code&gt; is a non-negative integer indicating how many times generational garbage collections can be done without forcing a fullsweep collection. The value applies to new processes, while processes already running are not affected.</source>
          <target state="translated">システムフラグ &lt;code&gt;fullsweep_after&lt;/code&gt; を設定します。 &lt;code&gt;Number&lt;/code&gt; は、全スイープコレクションを強制せずに世代別ガベージコレクションを実行できる回数を示す負でない整数です。この値は新しいプロセスに適用されますが、すでに実行中のプロセスは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="4bd8008392defeaba1e689998767b13e64127d74" translate="yes" xml:space="preserve">
          <source>Sets system flags for &lt;code&gt;erts_alloc(3)&lt;/code&gt;. &lt;code&gt;Alloc&lt;/code&gt; is the allocator to affect, for example &lt;code&gt;binary_alloc&lt;/code&gt;. &lt;code&gt;F&lt;/code&gt; is the flag to change and &lt;code&gt;V&lt;/code&gt; is the new value.</source>
          <target state="translated">&lt;code&gt;erts_alloc(3)&lt;/code&gt; のシステムフラグを設定します。 &lt;code&gt;Alloc&lt;/code&gt; は、たとえば &lt;code&gt;binary_alloc&lt;/code&gt; などの影響を受けるアロケータです。 &lt;code&gt;F&lt;/code&gt; は変更するフラグで、 &lt;code&gt;V&lt;/code&gt; は新しい値です。</target>
        </trans-unit>
        <trans-unit id="fe541c9550f647980c41d36a62c1b41fc3300c1a" translate="yes" xml:space="preserve">
          <source>Sets system profiler options. &lt;code&gt;ProfilerPid&lt;/code&gt; is a local process identifier (pid) or port receiving profiling messages. The receiver is excluded from all profiling. The second argument is a list of profiling options:</source>
          <target state="translated">システムプロファイラオプションを設定します。 &lt;code&gt;ProfilerPid&lt;/code&gt; は、ローカルプロセス識別子（pid）またはプロファイリングメッセージを受信するポートです。レシーバーはすべてのプロファイリングから除外されます。2番目の引数は、プロファイリングオプションのリストです。</target>
        </trans-unit>
        <trans-unit id="a72bd2e35bed397dab160cd3f2611e9fe2f44002" translate="yes" xml:space="preserve">
          <source>Sets table options. The only allowed option to be set after the table has been created is &lt;code&gt;&lt;a href=&quot;#heir&quot;&gt;heir&lt;/a&gt;&lt;/code&gt;. The calling process must be the table owner.</source>
          <target state="translated">テーブルオプションを設定します。テーブルが作成された後に設定できる唯一の許可されたオプションは &lt;code&gt;&lt;a href=&quot;#heir&quot;&gt;heir&lt;/a&gt;&lt;/code&gt; です。呼び出しプロセスはテーブル所有者でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8cb4ca231a49ec941deeee872d0b32eeae11d280" translate="yes" xml:space="preserve">
          <source>Sets tcp socket options on the tcp-socket below an ssh connection.</source>
          <target state="translated">ssh 接続以下の tcp ソケットの tcp ソケットオプションを設定します。</target>
        </trans-unit>
        <trans-unit id="2e1370d09ddeefa5429f567d1d2021ca12a30888" translate="yes" xml:space="preserve">
          <source>Sets the &quot;progress&quot; of the initialization program. The &lt;code&gt;init:get_status/0&lt;/code&gt; function returns the current value of the progress, which is &lt;code&gt;{InternalStatus,Term}&lt;/code&gt;.</source>
          <target state="translated">初期化プログラムの「進行状況」を設定します。 &lt;code&gt;init:get_status/0&lt;/code&gt; 関数である進歩の現在の値を返し &lt;code&gt;{InternalStatus,Term}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ea07f73f85af4b08faea28cdb71c399a30b19906" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#SOCKET_PATH&quot;&gt;socket path&lt;/a&gt;&lt;/code&gt; for the communication with the agent.</source>
          <target state="translated">エージェントとの通信用の &lt;code&gt;&lt;a href=&quot;#SOCKET_PATH&quot;&gt;socket path&lt;/a&gt;&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="235a9d06be54f8c431dccf670cee249de7ac0ff6" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#SYSDIR&quot;&gt;system directory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#SYSDIR&quot;&gt;system directory&lt;/a&gt;&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="9873d2692ff04b3f7f2626cda6f2d0b2f60cb79e" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#USERDIR&quot;&gt;user directory&lt;/a&gt;&lt;/code&gt; dynamically by evaluating the &lt;code&gt;user2dir&lt;/code&gt; function.</source>
          <target state="translated">&lt;code&gt;user2dir&lt;/code&gt; 関数を評価することにより、 &lt;code&gt;&lt;a href=&quot;#USERDIR&quot;&gt;user directory&lt;/a&gt;&lt;/code&gt; 動的に設定します。</target>
        </trans-unit>
        <trans-unit id="3af75c909f441a81a64f234cd094c9f5264d2d33" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#USERDIR&quot;&gt;user directory&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#USERDIR&quot;&gt;user directory&lt;/a&gt;&lt;/code&gt; 設定します。</target>
        </trans-unit>
        <trans-unit id="9deadafcb636ce2300764e73764281e9f79e92e7" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt;. If the given path is a list of directories, the set of &lt;code&gt;&lt;a href=&quot;#library_module&quot;&gt;library modules&lt;/a&gt;&lt;/code&gt; is determined by choosing the first module encountered while traversing the directories in the given order, for those modules that occur in more than one directory. By default, the library path is an empty list.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#library_path&quot;&gt;library path&lt;/a&gt;&lt;/code&gt; 設定します。指定されたパスがディレクトリのリストである場合、 &lt;code&gt;&lt;a href=&quot;#library_module&quot;&gt;library modules&lt;/a&gt;&lt;/code&gt; のセットは、複数のディレクトリで発生するモジュールについて、指定された順序でディレクトリをトラバースするときに最初に検出されるモジュールを選択することによって決定されます。デフォルトでは、ライブラリパスは空のリストです。</target>
        </trans-unit>
        <trans-unit id="392c93390d535f1df2f37abb2c2ee7a55d9c3ff5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt; transition_option() &lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-postpone&quot;&gt;postpone()&lt;/a&gt;&lt;/code&gt; for this &lt;strong&gt;state transition&lt;/strong&gt;. This action is ignored when returned from &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; or given to &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt;, as there is no event to postpone in those cases.</source>
          <target state="translated">この&lt;strong&gt;状態遷移&lt;/strong&gt;の &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt; transition_option() &lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-postpone&quot;&gt;postpone()&lt;/a&gt;&lt;/code&gt; を設定します。 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; から返されるか、 &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt; に渡されると、このアクションは無視されます。これらの場合、延期するイベントがないためです。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="44067ee3e248c621eea2461d3dc06a7c49aedd2e" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-event_timeout&quot;&gt;event_timeout()&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;Time&lt;/code&gt; with &lt;code&gt;EventContent&lt;/code&gt; and time-out options &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">セット &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-event_timeout&quot;&gt;event_timeout()&lt;/a&gt;&lt;/code&gt; へ &lt;code&gt;Time&lt;/code&gt; と &lt;code&gt;EventContent&lt;/code&gt; とタイムアウトオプションの &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53a8c68391586d0ac6547d160d8a110c5dbc28b3" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-generic_timeout&quot;&gt;generic_timeout()&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;Time&lt;/code&gt; for &lt;code&gt;Name&lt;/code&gt; with &lt;code&gt;EventContent&lt;/code&gt; and time-out options &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">セット &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-generic_timeout&quot;&gt;generic_timeout()&lt;/a&gt;&lt;/code&gt; へ &lt;code&gt;Time&lt;/code&gt; のために &lt;code&gt;Name&lt;/code&gt; 持つ &lt;code&gt;EventContent&lt;/code&gt; とタイムアウトオプション &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1871760915e8b6d1e57309c31b3a47e972ae4be9" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; for this &lt;strong&gt;state transition&lt;/strong&gt;.</source>
          <target state="translated">この&lt;strong&gt;状態遷移&lt;/strong&gt;の &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; を設定します。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="30684f7d4981c9e1a62530e17bf883b5eb02a6ff" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; for this state transition.</source>
          <target state="translated">この状態遷移の &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-hibernate&quot;&gt;hibernate()&lt;/a&gt;&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="83a0223739bff17a151a7c16afd90099930bc8b5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-postpone&quot;&gt;postpone()&lt;/a&gt;&lt;/code&gt; for this state transition. This action is ignored when returned from &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; or given to &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt;, as there is no event to postpone in those cases.</source>
          <target state="translated">この状態遷移の &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-postpone&quot;&gt;postpone()&lt;/a&gt;&lt;/code&gt; を設定します。 &lt;code&gt;&lt;a href=&quot;#Module:init-1&quot;&gt;Module:init/1&lt;/a&gt;&lt;/code&gt; から返されたり、 &lt;code&gt;&lt;a href=&quot;#enter_loop-5&quot;&gt;enter_loop/5,6&lt;/a&gt;&lt;/code&gt; に渡されたりすると、このアクションは無視されます。これらのケースでは延期するイベントがないためです。</target>
        </trans-unit>
        <trans-unit id="247d0b30de1256443cd386fe363d5272f57f80df" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;#type-state_timeout&quot;&gt;state_timeout()&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;Time&lt;/code&gt; with &lt;code&gt;EventContent&lt;/code&gt; and time-out options &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">セット &lt;code&gt;&lt;a href=&quot;#type-transition_option&quot;&gt;transition_option()&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#type-state_timeout&quot;&gt;state_timeout()&lt;/a&gt;&lt;/code&gt; へ &lt;code&gt;Time&lt;/code&gt; 持つ &lt;code&gt;EventContent&lt;/code&gt; とタイムアウトオプション &lt;code&gt;&lt;a href=&quot;#type-timeout_option&quot;&gt;Options&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="53d52ae60abfaf725011b6848f52ce6020c1f710" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;SO_PRIORITY&lt;/code&gt; socket level option on platforms where this is implemented. The behavior and allowed range varies between different systems. The option is ignored on platforms where it is not implemented. Use with caution.</source>
          <target state="translated">これが実装されているプラ​​ットフォームで &lt;code&gt;SO_PRIORITY&lt;/code&gt; ソケットレベルオプションを設定します。動作と許容範囲は、システムによって異なります。このオプションは、実装されていないプラットフォームでは無視されます。注意して使用してください。</target>
        </trans-unit>
        <trans-unit id="3de5e206f62db5910dddeb7452ac934321d4f439" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;max_heap_size&lt;/code&gt; process flag. The default &lt;code&gt;max_heap_size&lt;/code&gt; is determined by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, Size)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max_heap_size&lt;/code&gt; プロセスフラグを設定します。デフォルトの &lt;code&gt;max_heap_size&lt;/code&gt; は、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドライン引数 &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; によって決定されます。詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, Size)&lt;/a&gt;&lt;/code&gt; ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="7f4305a29ea9e75c952650e9de33069fe615b6f1" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;max_heap_size&lt;/code&gt; process flag. The default &lt;code&gt;max_heap_size&lt;/code&gt; is determined by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size,Size)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;max_heap_size&lt;/code&gt; プロセスフラグを設定します。デフォルトの &lt;code&gt;max_heap_size&lt;/code&gt; は、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドライン引数 &lt;code&gt;&lt;a href=&quot;erl#+hmax&quot;&gt;+hmax&lt;/a&gt;&lt;/code&gt; によって決定されます。詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size,Size)&lt;/a&gt;&lt;/code&gt; ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="91db435ec30a72142779bcdf20ec92f816db57aa" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;os_pid&lt;/code&gt; seen when doing &lt;code&gt;&lt;a href=&quot;erlang#port_info-2&quot;&gt; erlang:port_info/2&lt;/a&gt;&lt;/code&gt; on this port.</source>
          <target state="translated">このポートで &lt;code&gt;&lt;a href=&quot;erlang#port_info-2&quot;&gt; erlang:port_info/2&lt;/a&gt;&lt;/code&gt; を実行するときに表示される &lt;code&gt;os_pid&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="e3c896f2b3f505d02fa9f498fa10868ea66308f5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;os_pid&lt;/code&gt; seen when doing &lt;code&gt;erlang:port_info/2&lt;/code&gt; on this port.</source>
          <target state="translated">このポートで &lt;code&gt;erlang:port_info/2&lt;/code&gt; を実行したときに見られる &lt;code&gt;os_pid&lt;/code&gt; を設定します。</target>
        </trans-unit>
        <trans-unit id="62c1677618763bf038d6e46228bd8e5ee838115f" translate="yes" xml:space="preserve">
          <source>Sets the EDNS version that &lt;code&gt;inet_res(3)&lt;/code&gt; will use. The only allowed version is zero. Defaults to &lt;code&gt;false&lt;/code&gt;, which means not to use EDNS.</source>
          <target state="translated">&lt;code&gt;inet_res(3)&lt;/code&gt; が使用するEDNSバージョンを設定します。許可される唯一のバージョンはゼロです。デフォルトは &lt;code&gt;false&lt;/code&gt; で、EDNSを使用しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="22ef88e548dffe2695e83197ffb9b451eda0527a" translate="yes" xml:space="preserve">
          <source>Sets the SFTP root directory. Then the user cannot see any files above this root. If, for example, the root directory is set to &lt;code&gt;/tmp&lt;/code&gt;, then the user sees this directory as &lt;code&gt;/&lt;/code&gt;. If the user then writes &lt;code&gt;cd /etc&lt;/code&gt;, the user moves to &lt;code&gt;/tmp/etc&lt;/code&gt;.</source>
          <target state="translated">SFTPルートディレクトリを設定します。その後、ユーザーはこのルートより上のファイルを見ることができません。たとえば、ルートディレクトリが &lt;code&gt;/tmp&lt;/code&gt; に設定されている場合、ユーザーにはこのディレクトリが &lt;code&gt;/&lt;/code&gt; と表示されます。その後、ユーザーが &lt;code&gt;cd /etc&lt;/code&gt; 書き込むと、ユーザーは &lt;code&gt;/tmp/etc&lt;/code&gt; に移動します。</target>
        </trans-unit>
        <trans-unit id="8877971d9d703f1e711372a08825403316d7e95f" translate="yes" xml:space="preserve">
          <source>Sets the SFTP version to use. Defaults to 5. Version 6 is under development and limited.</source>
          <target state="translated">使用する SFTP のバージョンを設定します。デフォルトは 5 です。バージョン 6 は開発中であり、制限されています。</target>
        </trans-unit>
        <trans-unit id="8ccfb70351c6433354bbcf378bd99cdbed6dfce6" translate="yes" xml:space="preserve">
          <source>Sets the Type-Of-Service field on the IP datagrams that are sent, to the specified value. This effectively determines a prioritization policy for the outbound packets. The acceptable values are system-dependent.</source>
          <target state="translated">送信するIPデータグラムのType-Of-Serviceフィールドを指定した値に設定します。これにより、送信パケットの優先順位付けポリシーが効果的に決定されます。許容される値はシステムに依存します。</target>
        </trans-unit>
        <trans-unit id="eab85e947ba482e18e7bb4919535fd42a5266576" translate="yes" xml:space="preserve">
          <source>Sets the account for an operation, if needed.</source>
          <target state="translated">必要に応じて、操作のためのアカウントを設定します。</target>
        </trans-unit>
        <trans-unit id="d42e58ba97e4277ac0d4115ed6fbf8e9c986c9b0" translate="yes" xml:space="preserve">
          <source>Sets the allowed UDP payload size &lt;code&gt;inet_res(3)&lt;/code&gt; will advertise in EDNS queries. Also sets the limit when the DNS query will be deemed too large for UDP forcing a TCP query instead; this is not entirely correct, as the advertised UDP payload size of the individual nameserver is what is to be used, but this simple strategy will do until a more intelligent (probing, caching) algorithm needs to be implemented. Default to 1280, which stems from the standard Ethernet MTU size.</source>
          <target state="translated">&lt;code&gt;inet_res(3)&lt;/code&gt; がEDNSクエリで通知する許可されるUDPペイロードサイズを設定します。また、DNSクエリがUDPに対してTCPクエリを強制するには大きすぎると見なされる場合の制限も設定します。個々のネームサーバーのアドバタイズされたUDPペイロードサイズが使用されるものであるため、これは完全に正しくはありませんが、この単純な戦略は、よりインテリジェントな（プローブ、キャッシング）アルゴリズムを実装する必要があるまで行われます。デフォルトは1280で、標準のイーサネットMTUサイズに由来します。</target>
        </trans-unit>
        <trans-unit id="ccd95df1aed0cdb51d1320cf718c03497224dc0a" translate="yes" xml:space="preserve">
          <source>Sets the application configuration parameter &lt;code&gt;Par&lt;/code&gt; to the value &lt;code&gt;Val&lt;/code&gt; for the application &lt;code&gt;Application&lt;/code&gt;; see &lt;code&gt;app(4)&lt;/code&gt; and &lt;code&gt; application(3)&lt;/code&gt;.</source>
          <target state="translated">アプリケーション構成パラメーター &lt;code&gt;Par&lt;/code&gt; をアプリケーション &lt;code&gt;Application&lt;/code&gt; の値 &lt;code&gt;Val&lt;/code&gt; に設定します。 &lt;code&gt;app(4)&lt;/code&gt; および &lt;code&gt; application(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="6577d9bea2036a30156c3c5527dd06a4c86be02c" translate="yes" xml:space="preserve">
          <source>Sets the application configuration parameter &lt;code&gt;Par&lt;/code&gt; to the value &lt;code&gt;Val&lt;/code&gt; for the application &lt;code&gt;Application&lt;/code&gt;; see &lt;code&gt;app(4)&lt;/code&gt; and &lt;code&gt;application(3)&lt;/code&gt;.</source>
          <target state="translated">アプリケーション構成パラメーター &lt;code&gt;Par&lt;/code&gt; をアプリケーション &lt;code&gt;Application&lt;/code&gt; の値 &lt;code&gt;Val&lt;/code&gt; に設定します。 &lt;code&gt;app(4)&lt;/code&gt; および &lt;code&gt;application(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="c7196246ff7c882e793640c66749d164bdc6f82d" translate="yes" xml:space="preserve">
          <source>Sets the areas to be visible in an &lt;code&gt;&lt;a href=&quot;#attach&quot;&gt;Attach Process window&lt;/a&gt;&lt;/code&gt;. Does not affect existing Attach Process windows.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#attach&quot;&gt;Attach Process window&lt;/a&gt;&lt;/code&gt; 表示する領域を設定します。既存の接続プロセスウィンドウには影響しません。</target>
        </trans-unit>
        <trans-unit id="cbb9c3fb8f1ce99f109e9887fbbdf78879940dca" translate="yes" xml:space="preserve">
          <source>Sets the attributes of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Attributes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; の &lt;code&gt;Attributes&lt;/code&gt; をAttributesに設定します。</target>
        </trans-unit>
        <trans-unit id="84596578fd723b61daba1bf34b66cca849fbe4b2" translate="yes" xml:space="preserve">
          <source>Sets the code path to the list of directories &lt;code&gt;Path&lt;/code&gt;.</source>
          <target state="translated">コードパスをディレクトリ &lt;code&gt;Path&lt;/code&gt; のリストに設定します。</target>
        </trans-unit>
        <trans-unit id="9b5886c8b67f42b23e753322dc78b32aed10fd89" translate="yes" xml:space="preserve">
          <source>Sets the compatibility mode.</source>
          <target state="translated">互換性モードを設定します。</target>
        </trans-unit>
        <trans-unit id="944d785aef67c4495fac86e50f30a32b1b411b9c" translate="yes" xml:space="preserve">
          <source>Sets the conditional test of the breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;Function&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; in &lt;code&gt;Line&lt;/code&gt; のブレークポイントの条件付きテストを &lt;code&gt;Function&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="3903c607ad295badc26503d3ad81d9c44d7f68c2" translate="yes" xml:space="preserve">
          <source>Sets the conditional test of the breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;Function&lt;/code&gt;. The function must fulfill the requirements specified in section &lt;code&gt;&lt;a href=&quot;#int_breakpoints&quot;&gt;Breakpoints&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; in &lt;code&gt;Line&lt;/code&gt; のブレークポイントの条件付きテストを &lt;code&gt;Function&lt;/code&gt; に設定します。関数は、セクション &lt;code&gt;&lt;a href=&quot;#int_breakpoints&quot;&gt;Breakpoints&lt;/a&gt;&lt;/code&gt; 指定された要件を満たしている必要があります。</target>
        </trans-unit>
        <trans-unit id="37b9a38d00eb4a2aeca355414b7bbd933806e63f" translate="yes" xml:space="preserve">
          <source>Sets the configuration &lt;code&gt;Config&lt;/code&gt; for multiple applications. It is equivalent to calling &lt;code&gt;set_env/4&lt;/code&gt; on each application individually, except it is more efficient. The given &lt;code&gt;Config&lt;/code&gt; is validated before the configuration is set.</source>
          <target state="translated">複数のアプリケーションの構成構成を &lt;code&gt;Config&lt;/code&gt; します。より効率的であることを除けば、各アプリケーションで &lt;code&gt;set_env/4&lt;/code&gt; を個別に呼び出すことと同じです。与えられた &lt;code&gt;Config&lt;/code&gt; がコンフィギュレーションが設定される前に検証されます。</target>
        </trans-unit>
        <trans-unit id="c4061c32d14920b9566bcc250e2af955175c928c" translate="yes" xml:space="preserve">
          <source>Sets the current working directory of the file server to &lt;code&gt;Dir&lt;/code&gt;. Returns &lt;code&gt;ok&lt;/code&gt; if successful.</source>
          <target state="translated">ファイルサーバーの現在の作業ディレクトリを &lt;code&gt;Dir&lt;/code&gt; に設定します。成功した場合は &lt;code&gt;ok&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2f682600156d1ac8d49837d1b919d3416024f3f6" translate="yes" xml:space="preserve">
          <source>Sets the default binary virtual heap size of processes to the size &lt;code&gt;Size&lt;/code&gt;.</source>
          <target state="translated">プロセスのデフォルトのバイナリ仮想ヒープサイズをサイズ &lt;code&gt;Size&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="8788ba87541bacd719f0d84f7dac6ea0f39a7fb2" translate="yes" xml:space="preserve">
          <source>Sets the default heap size of processes to the size &lt;code&gt;Size&lt;/code&gt;.</source>
          <target state="translated">プロセスのデフォルトのヒープサイズをサイズ &lt;code&gt;Size&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="0a19118a27143ada79a588568525e84826266c39" translate="yes" xml:space="preserve">
          <source>Sets the default maximum heap size of processes to the size &lt;code&gt;Size&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;, which means that no maximum heap size is used. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスのデフォルトの最大ヒープサイズをサイズ &lt;code&gt;Size&lt;/code&gt; に設定します。デフォルトは &lt;code&gt;0&lt;/code&gt; です。これは、最大ヒープサイズが使用されないことを意味します。詳細については、 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="60007f967f2cc669c29b946459ed60410b3e6ca1" translate="yes" xml:space="preserve">
          <source>Sets the default maximum heap size of processes to the size &lt;code&gt;Size&lt;/code&gt;. Defaults to &lt;code&gt;0&lt;/code&gt;, which means that no maximum heap size is used. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスのデフォルトの最大ヒープサイズをサイズ &lt;code&gt;Size&lt;/code&gt; に設定します。デフォルトは &lt;code&gt;0&lt;/code&gt; で、最大ヒープサイズは使用されません。詳細については、 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="158d0712604e2633e7fa7fa6ddb26976b391261c" translate="yes" xml:space="preserve">
          <source>Sets the default maximum heap size settings for processes. The size is specified in words. The new &lt;code&gt;max_heap_size&lt;/code&gt; effects only processes spawned efter the change has been made. &lt;code&gt;max_heap_size&lt;/code&gt; can be set for individual processes using &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスのデフォルトの最大ヒープサイズ設定を設定します。サイズは単語で指定されます。新しい &lt;code&gt;max_heap_size&lt;/code&gt; エフェクトは、変更が行われた後に生成されたプロセスのみを処理します。 &lt;code&gt;max_heap_size&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt; process_flag/2&lt;/a&gt;&lt;/code&gt; を使用して個々のプロセスに設定できます。</target>
        </trans-unit>
        <trans-unit id="60a389437f3f73af86efbff82f57301b8ab688e3" translate="yes" xml:space="preserve">
          <source>Sets the default maximum heap size settings for processes. The size is specified in words. The new &lt;code&gt;max_heap_size&lt;/code&gt; effects only processes spawned efter the change has been made. &lt;code&gt;max_heap_size&lt;/code&gt; can be set for individual processes using &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスのデフォルトの最大ヒープサイズ設定を設定します。サイズはワード単位で指定されます。新しい &lt;code&gt;max_heap_size&lt;/code&gt; エフェクトは、変更が行われた後に生成されたプロセスのみを処理します。 &lt;code&gt;max_heap_size&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#process_flag_max_heap_size&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; を使用して個々のプロセスに設定できます。</target>
        </trans-unit>
        <trans-unit id="b2bc4e73c5ac7544d6780c8fd56c8b96b851f60a" translate="yes" xml:space="preserve">
          <source>Sets the default minimum binary virtual heap size for processes. The size is specified in words. The new &lt;code&gt;min_bin_vhheap_size&lt;/code&gt; effects only processes spawned after the change of &lt;code&gt;min_bin_vheap_size&lt;/code&gt; has been made. &lt;code&gt;min_bin_vheap_size&lt;/code&gt; can be set for individual processes by using &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスのデフォルトの最小バイナリ仮想ヒープサイズを設定します。サイズはワード単位で指定されます。新しい &lt;code&gt;min_bin_vhheap_size&lt;/code&gt; エフェクトは、 &lt;code&gt;min_bin_vheap_size&lt;/code&gt; の変更後に作成されたプロセスのみに影響します。 &lt;code&gt;min_bin_vheap_size&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/2,3,4&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; を使用して個々のプロセスに設定できます。</target>
        </trans-unit>
        <trans-unit id="98113d028a855f2fc4c1c43b662b1836412ae4a8" translate="yes" xml:space="preserve">
          <source>Sets the default minimum heap size for processes. The size is specified in words. The new &lt;code&gt;min_heap_size&lt;/code&gt; effects only processes spawned after the change of &lt;code&gt;min_heap_size&lt;/code&gt; has been made. &lt;code&gt;min_heap_size&lt;/code&gt; can be set for individual processes by using &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスのデフォルトの最小ヒープサイズを設定します。サイズはワード単位で指定されます。新しい &lt;code&gt;min_heap_size&lt;/code&gt; エフェクトは、 &lt;code&gt;min_heap_size&lt;/code&gt; が変更された後に生成されたプロセスのみに影響します。 &lt;code&gt;min_heap_size&lt;/code&gt; は、 &lt;code&gt;&lt;a href=&quot;#spawn_opt-4&quot;&gt;spawn_opt/4&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#process_flag-2&quot;&gt;process_flag/2&lt;/a&gt;&lt;/code&gt; を使用して個々のプロセスに設定できます。</target>
        </trans-unit>
        <trans-unit id="628128c11e0eb3e2cfac2a2ee2d78d824488310a" translate="yes" xml:space="preserve">
          <source>Sets the default value for process flag &lt;code&gt;message_queue_data&lt;/code&gt;. Defaults to &lt;code&gt;on_heap&lt;/code&gt;. If &lt;code&gt;+hmqd&lt;/code&gt; is not passed, &lt;code&gt;on_heap&lt;/code&gt; will be the default. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスフラグ &lt;code&gt;message_queue_data&lt;/code&gt; のデフォルト値を設定します。デフォルトは &lt;code&gt;on_heap&lt;/code&gt; です。 &lt;code&gt;+hmqd&lt;/code&gt; が渡されない場合、 &lt;code&gt;on_heap&lt;/code&gt; がデフォルトになります。詳細については、 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="dcfe1f8e6db4840d30e58fb942c0c004b2301a72" translate="yes" xml:space="preserve">
          <source>Sets the default value for process flag &lt;code&gt;message_queue_data&lt;/code&gt;. Defaults to &lt;code&gt;on_heap&lt;/code&gt;. If &lt;code&gt;+hmqd&lt;/code&gt; is not passed, &lt;code&gt;on_heap&lt;/code&gt; will be the default. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">プロセスフラグ &lt;code&gt;message_queue_data&lt;/code&gt; のデフォルト値を設定します。デフォルトは &lt;code&gt;on_heap&lt;/code&gt; です。 &lt;code&gt;+hmqd&lt;/code&gt; が渡されない場合、 &lt;code&gt;on_heap&lt;/code&gt; がデフォルトになります。詳細については、 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="c7c2ea2b7700109a84493d49d1dc00bb82175dc5" translate="yes" xml:space="preserve">
          <source>Sets the default value for the array to &lt;code&gt;Value&lt;/code&gt;.</source>
          <target state="translated">配列のデフォルト値を &lt;code&gt;Value&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="dc9601c01c1c1e3069c8eaf3af9dd5940c97b57c" translate="yes" xml:space="preserve">
          <source>Sets the default value of one or more options. The options that can be set this way are:</source>
          <target state="translated">1 つ以上のオプションのデフォルト値を設定します。この方法で設定できるオプションは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="f898d2913a3e851d5c7b70975dff3b539f8026a2" translate="yes" xml:space="preserve">
          <source>Sets the delayed node table garbage collection time (&lt;code&gt;&lt;a href=&quot;erlang#system_info_delayed_node_table_gc&quot;&gt;delayed_node_table_gc&lt;/a&gt;&lt;/code&gt;) in seconds. Valid values are either &lt;code&gt;infinity&lt;/code&gt; or an integer in the range 0-100000000. Defaults to 60.</source>
          <target state="translated">遅延ノードテーブルのガベージコレクション時間（ &lt;code&gt;&lt;a href=&quot;erlang#system_info_delayed_node_table_gc&quot;&gt;delayed_node_table_gc&lt;/a&gt;&lt;/code&gt; ）を秒単位で設定します。有効な値は、 &lt;code&gt;infinity&lt;/code&gt; または0〜100000000の範囲の整数です。デフォルトは60です。</target>
        </trans-unit>
        <trans-unit id="57d5edb58d125521e91d331fbf4ed477db24c7a9" translate="yes" xml:space="preserve">
          <source>Sets the distribution buffer busy limit (&lt;code&gt;&lt;a href=&quot;erlang#system_info_dist_buf_busy_limit&quot;&gt;dist_buf_busy_limit&lt;/a&gt;&lt;/code&gt;) in kilobytes. Valid range is 1-2097151. Defaults to 1024.</source>
          <target state="translated">配布バッファーのビジー制限（ &lt;code&gt;&lt;a href=&quot;erlang#system_info_dist_buf_busy_limit&quot;&gt;dist_buf_busy_limit&lt;/a&gt;&lt;/code&gt; ）をキロバイト単位で設定します。有効な範囲は1〜2097151です。デフォルトは1024です。</target>
        </trans-unit>
        <trans-unit id="d50bdc36b528791e8b69abb70b67013aa7f2bd35" translate="yes" xml:space="preserve">
          <source>Sets the elements in &lt;code&gt;Cols&lt;/code&gt; to the row specified by &lt;code&gt;RowIndex&lt;/code&gt;. No checks are performed on the new values.</source>
          <target state="translated">要素設定 &lt;code&gt;Cols&lt;/code&gt; はによって指定された行に &lt;code&gt;RowIndex&lt;/code&gt; 。新しい値のチェックは行われません。</target>
        </trans-unit>
        <trans-unit id="fc21daaad542079b18ac1ea07963d8433ef93a4a" translate="yes" xml:space="preserve">
          <source>Sets the events a debugged process is to be attached to automatically. Affects existing debugged processes.</source>
          <target state="translated">デバッグされたプロセスが自動的にアタッチされるイベントを設定します。既存のデバッグされたプロセスに影響を与えます。</target>
        </trans-unit>
        <trans-unit id="41611ee00a14ab42ec3a3e885687ce728dd300a9" translate="yes" xml:space="preserve">
          <source>Sets the exception handling of the evaluator process. The previous exception handling is returned. The default (&lt;code&gt;false&lt;/code&gt;) is to kill the evaluator process when an exception occurs, which causes the shell to create a new evaluator process. When the exception handling is set to &lt;code&gt;true&lt;/code&gt;, the evaluator process lives on, which means that, for example, ports and ETS tables as well as processes linked to the evaluator process survive the exception.</source>
          <target state="translated">エバリュエータープロセスの例外処理を設定します。以前の例外処理が返されます。デフォルト（ &lt;code&gt;false&lt;/code&gt; ）では、例外が発生するとエバリュエータープロセスが強制終了され、シェルが新しいエバリュエータープロセスを作成します。例外処理が &lt;code&gt;true&lt;/code&gt; に設定されている場合、エバリュエータープロセスは存続します。これは、たとえば、ポートとETSテーブル、およびエバリュエータープロセスにリンクされたプロセスが例外に耐えることを意味します。</target>
        </trans-unit>
        <trans-unit id="e77ac71b59fce1d6b574dd7f680d1f1e50a7a675" translate="yes" xml:space="preserve">
          <source>Sets the exception handling of the evaluator process. The previous exception handling is returned. The default (&lt;code&gt;false&lt;/code&gt;) is to kill the evaluator process when an exception occurs, which causes the shell to create a new evaluator process. When the exception handling is set to &lt;code&gt;true&lt;/code&gt;, the evaluator process lives on. This means, for example, that ports and ETS tables as well as processes linked to the evaluator process survive the exception.</source>
          <target state="translated">エバリュエータープロセスの例外処理を設定します。以前の例外処理が返されます。デフォルト（ &lt;code&gt;false&lt;/code&gt; ）では、例外が発生したときにエバリュエータープロセスが強制終了され、シェルが新しいエバリュエータープロセスを作成します。例外処理が &lt;code&gt;true&lt;/code&gt; に設定されている場合、エバリュエータープロセスは存続します。これは、たとえば、ポートとETSテーブル、およびエバリュエータープロセスにリンクされたプロセスが例外を乗り越えたことを意味します。</target>
        </trans-unit>
        <trans-unit id="17cf9b381aa9aeb752e73de2f6ee8c98c60dbcd8" translate="yes" xml:space="preserve">
          <source>Sets the file owner. &lt;code&gt; file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">ファイルの所有者を設定します。 &lt;code&gt; file:read_file_info/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a159ac6daa93e107b9fbbb4fde280ebc4d39af2" translate="yes" xml:space="preserve">
          <source>Sets the file owner. &lt;code&gt;file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">ファイルの所有者を設定します。 &lt;code&gt;file:read_file_info/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2b6cc6dca65bd7e27afc8d823644da994375f329" translate="yes" xml:space="preserve">
          <source>Sets the file position of the file referenced by &lt;code&gt;Handle&lt;/code&gt;. Returns &lt;code&gt;{ok, NewPosition}&lt;/code&gt; (as an absolute offset) if successful, otherwise &lt;code&gt;{error, reason()}&lt;/code&gt;. &lt;code&gt;Location&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;Handle&lt;/code&gt; によって参照されるファイルのファイル位置を設定します。成功した場合は &lt;code&gt;{ok, NewPosition}&lt;/code&gt; （絶対オフセットとして）を返し、それ以外の場合は &lt;code&gt;{error, reason()}&lt;/code&gt; 返します。 &lt;code&gt;Location&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="7c972a59b0cc54dc813e15bf5068fe780f073733" translate="yes" xml:space="preserve">
          <source>Sets the file transfer type to &lt;code&gt;ascii&lt;/code&gt; or &lt;code&gt;binary&lt;/code&gt;. When an FTP session is opened, the default transfer type of the server is used, most often &lt;code&gt;ascii&lt;/code&gt;, which is default according to &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;RFC 959&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ファイル転送タイプを &lt;code&gt;ascii&lt;/code&gt; または &lt;code&gt;binary&lt;/code&gt; に設定します。FTPセッションが開かれると、サーバーのデフォルトの転送タイプが使用されます。多くの場合は &lt;code&gt;ascii&lt;/code&gt; で、これは &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc959.txt&quot;&gt;RFC 959&lt;/a&gt;&lt;/code&gt; によるデフォルトです。</target>
        </trans-unit>
        <trans-unit id="6851dcbf2474ca3ffe84ea041679691dd353f1ef" translate="yes" xml:space="preserve">
          <source>Sets the group leader of &lt;code&gt;Pid&lt;/code&gt; to &lt;code&gt;GroupLeader&lt;/code&gt;. Typically, this is used when a process started from a certain shell is to have another group leader than &lt;code&gt;init&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Pid&lt;/code&gt; のグループリーダーを &lt;code&gt;GroupLeader&lt;/code&gt; に設定します。通常、これは、特定のシェルから開始されたプロセスが &lt;code&gt;init&lt;/code&gt; 以外のグループリーダーを持つ場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="b7fbd42c940e18826557bcb137e881aec23f7a54" translate="yes" xml:space="preserve">
          <source>Sets the group that the file owner belongs to. &lt;code&gt; file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">ファイルの所有者が属するグループを設定します。 &lt;code&gt; file:read_file_info/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6f9128f712d622e0ceef8a5620cc3de049747c1e" translate="yes" xml:space="preserve">
          <source>Sets the group that the file owner belongs to. &lt;code&gt;file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">ファイル所有者が属するグループを設定します。 &lt;code&gt;file:read_file_info/1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7797f328061524b1c58a840bede4655d0568b709" translate="yes" xml:space="preserve">
          <source>Sets the host OS environment variable &lt;code&gt;Variable&lt;/code&gt; to the value &lt;code&gt;Value&lt;/code&gt; for the Erlang runtime system. Example:</source>
          <target state="translated">ホストOS環境変数 &lt;code&gt;Variable&lt;/code&gt; をErlangランタイムシステムの値 &lt;code&gt;Value&lt;/code&gt; に設定します。例：</target>
        </trans-unit>
        <trans-unit id="02e0b51fdfba6b1d0c27973279245d91010b5af2" translate="yes" xml:space="preserve">
          <source>Sets the individual &lt;code&gt;Component&lt;/code&gt; of the trace token to &lt;code&gt;Val&lt;/code&gt;. Returns the previous value of the component.</source>
          <target state="translated">トレーストークンの個々の &lt;code&gt;Component&lt;/code&gt; を &lt;code&gt;Val&lt;/code&gt; に設定します。コンポーネントの以前の値を返します。</target>
        </trans-unit>
        <trans-unit id="985fb0849fd22e6640e7965c4cd4ace35c359fee" translate="yes" xml:space="preserve">
          <source>Sets the initial current working directory for the server.</source>
          <target state="translated">サーバの最初のカレント作業ディレクトリを設定します。</target>
        </trans-unit>
        <trans-unit id="731f35736796e6932947e2cc126ce2edb1347f1b" translate="yes" xml:space="preserve">
          <source>Sets the initial process dictionary size of processes to the size &lt;code&gt;Size&lt;/code&gt;.</source>
          <target state="translated">プロセスの初期プロセスディクショナリサイズをサイズ &lt;code&gt;Size&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="17728489612d8f94f200dec3cb3aff87fafa3729" translate="yes" xml:space="preserve">
          <source>Sets the integer lists to be printed as strings. Does not affect existing debugged processes.</source>
          <target state="translated">文字列として出力される整数リストを設定します。既存のデバッグプロセスには影響しません。</target>
        </trans-unit>
        <trans-unit id="90d0ef89722f71c5730216311cc5541ea6b55336" translate="yes" xml:space="preserve">
          <source>Sets the intermediate buffer size.</source>
          <target state="translated">中間バッファサイズを設定します。</target>
        </trans-unit>
        <trans-unit id="af4f5bf83b571a8a5074fed2e2fa82a0a1569b63" translate="yes" xml:space="preserve">
          <source>Sets the last time, as &lt;code&gt; POSIX time&lt;/code&gt;, when the file was read. See also &lt;code&gt; file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">ファイルが読み取られた最後の時刻を &lt;code&gt; POSIX time&lt;/code&gt; として設定します。 &lt;code&gt; file:read_file_info/1&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="88f5d99da9c3b14df8f5b40d01fd9dd08eea4b74" translate="yes" xml:space="preserve">
          <source>Sets the last time, as &lt;code&gt; POSIX time&lt;/code&gt;, when the file was written. See also &lt;code&gt; file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">ファイルが書き込まれた最後の時刻を &lt;code&gt; POSIX time&lt;/code&gt; として設定します。 &lt;code&gt; file:read_file_info/1&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="7ac561d939d8c45fcbd87826f32339286e776ec0" translate="yes" xml:space="preserve">
          <source>Sets the last time, as &lt;code&gt;POSIX time&lt;/code&gt;, when the file was read. See also &lt;code&gt;file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">最後にファイルが読み取られた &lt;code&gt;POSIX time&lt;/code&gt; をPOSIX時間として設定します。 &lt;code&gt;file:read_file_info/1&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="4ee23b430fa87183a18ee4d2393bc3b62d357d94" translate="yes" xml:space="preserve">
          <source>Sets the last time, as &lt;code&gt;POSIX time&lt;/code&gt;, when the file was written. See also &lt;code&gt;file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">ファイルが書き込まれた最後の時刻を &lt;code&gt;POSIX time&lt;/code&gt; として設定します。 &lt;code&gt;file:read_file_info/1&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="e63b2cf24d121a8191b7d039aad2c341b260a58d" translate="yes" xml:space="preserve">
          <source>Sets the limit when rekeying is to be initiated. Both the max time and max amount of data could be configured:</source>
          <target state="translated">リキーを開始する際の制限を設定します。最大時間と最大データ量の両方を設定できます。</target>
        </trans-unit>
        <trans-unit id="af48a2b2b92073cb57b2f692084af50bb03d291b" translate="yes" xml:space="preserve">
          <source>Sets the line delimiting character for line-oriented protocols (&lt;code&gt;line&lt;/code&gt;). Defaults to &lt;code&gt;$\n&lt;/code&gt;.</source>
          <target state="translated">行指向プロトコル（ &lt;code&gt;line&lt;/code&gt; ）の行区切り文字を設定します。デフォルトは &lt;code&gt;$\n&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5e6fe117c413145b19db762d11138f85ee039433" translate="yes" xml:space="preserve">
          <source>Sets the list of user annotations of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Annotations&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; のユーザー注釈のリストを &lt;code&gt;Annotations&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="981845aba37ef35eab06f51a3ae2ac367bc155a2" translate="yes" xml:space="preserve">
          <source>Sets the local device for a multicast socket.</source>
          <target state="translated">マルチキャストソケットのローカルデバイスを設定します。</target>
        </trans-unit>
        <trans-unit id="f09daec059640c8b963395e48629f0c00818db5a" translate="yes" xml:space="preserve">
          <source>Sets the lock category mask to the given categories.</source>
          <target state="translated">ロックカテゴリマスクを指定されたカテゴリに設定します。</target>
        </trans-unit>
        <trans-unit id="c214655cd8a400a29f74586c858b99c736bb9c6a" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Cookie&lt;/code&gt; and verifies the status of the authorization. Equivalent to calling &lt;code&gt;erlang:set_cookie(Node, Cookie)&lt;/code&gt;, followed by &lt;code&gt;&lt;a href=&quot;#is_auth-1&quot;&gt;auth:is_auth(Node)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">セットのマジッククッキー &lt;code&gt;Node&lt;/code&gt; に &lt;code&gt;Cookie&lt;/code&gt; や検証承認の状況。 &lt;code&gt;erlang:set_cookie(Node, Cookie)&lt;/code&gt; を呼び出し、その後に &lt;code&gt;&lt;a href=&quot;#is_auth-1&quot;&gt;auth:is_auth(Node)&lt;/a&gt;&lt;/code&gt; を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="4ff79d91c0e32eed72387e275e6ee6fab9a61354" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Cookie&lt;/code&gt; and verifies the status of the authorization. Equivalent to calling &lt;code&gt;erlang:set_cookie(Node,Cookie)&lt;/code&gt;, followed by &lt;code&gt;&lt;a href=&quot;#is_auth-1&quot;&gt;auth:is_auth(Node)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">セットのマジッククッキー &lt;code&gt;Node&lt;/code&gt; に &lt;code&gt;Cookie&lt;/code&gt; や検証承認の状況。呼び出すことに相当 &lt;code&gt;erlang:set_cookie(Node,Cookie)&lt;/code&gt; 、続い &lt;code&gt;&lt;a href=&quot;#is_auth-1&quot;&gt;auth:is_auth(Node)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd3dd3928b7eb74c2fd234567b79d6051f3d08b1" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of &lt;code&gt;Node&lt;/code&gt; to the atom &lt;code&gt;Cookie&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; is the local node, the function also sets the cookie of all other unknown nodes to &lt;code&gt;Cookie&lt;/code&gt; (see section &lt;code&gt; Distributed Erlang&lt;/code&gt; in the Erlang Reference Manual in System Documentation).</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; のマジッククッキーをアトム &lt;code&gt;Cookie&lt;/code&gt; に設定します。場合は &lt;code&gt;Node&lt;/code&gt; ローカル・ノードがあり、機能は他のすべての未知のノードのクッキー設定 &lt;code&gt;Cookie&lt;/code&gt; （see節 &lt;code&gt; Distributed Erlang&lt;/code&gt; Erlangのリファレンスシステムのマニュアルのマニュアルを）。</target>
        </trans-unit>
        <trans-unit id="df15ab4bf1f360b587c5373f56b589b729a7fec3" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of &lt;code&gt;Node&lt;/code&gt; to the atom &lt;code&gt;Cookie&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; is the local node, the function also sets the cookie of all other unknown nodes to &lt;code&gt;Cookie&lt;/code&gt; (see section &lt;code&gt;Distributed Erlang&lt;/code&gt; in the Erlang Reference Manual in System Documentation).</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; のマジックcookieをアトム &lt;code&gt;Cookie&lt;/code&gt; に設定します。場合は &lt;code&gt;Node&lt;/code&gt; ローカル・ノードがあり、機能は他のすべての未知のノードのクッキー設定 &lt;code&gt;Cookie&lt;/code&gt; （see節 &lt;code&gt;Distributed Erlang&lt;/code&gt; Erlangのリファレンスシステムのマニュアルのマニュアルを）。</target>
        </trans-unit>
        <trans-unit id="ae7a4bb3e17a936a0c654b361522eed839bf71e0" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of the node to &lt;code&gt;Cookie&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;erlang#set_cookie-2&quot;&gt; erlang:set_cookie/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ノードのマジッククッキー設定 &lt;code&gt;Cookie&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;erlang#set_cookie-2&quot;&gt; erlang:set_cookie/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="447df44c0af27f51c4f67f1143d02e462b58f2a8" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie of the node to &lt;code&gt;Cookie&lt;/code&gt;; see &lt;code&gt;&lt;a href=&quot;erlang#set_cookie-2&quot;&gt;erlang:set_cookie/2&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ノードのマジッククッキー設定 &lt;code&gt;Cookie&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;erlang#set_cookie-2&quot;&gt;erlang:set_cookie/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="2606b578e82eed07e3cb4c6e8c744e9ea859f896" translate="yes" xml:space="preserve">
          <source>Sets the magic cookie used when connecting to &lt;code&gt;Node&lt;/code&gt;. If &lt;code&gt;Node&lt;/code&gt; is the current node, &lt;code&gt;Cookie&lt;/code&gt; is used when connecting to all new nodes.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; への接続時に使用されるマジッククッキーを設定します。場合 &lt;code&gt;Node&lt;/code&gt; 現在のノードであり、 &lt;code&gt;Cookie&lt;/code&gt; すべての新しいノードに接続するときに使用されます。</target>
        </trans-unit>
        <trans-unit id="98120836a276d717e4781faa5657007e0c9ee6b7" translate="yes" xml:space="preserve">
          <source>Sets the mapping of warning messages for &lt;code&gt;error_logger&lt;/code&gt;. Messages sent to the error logger using one of the warning routines can be mapped to errors (&lt;code&gt;+W e&lt;/code&gt;), warnings (&lt;code&gt;+W w&lt;/code&gt;), or information reports (&lt;code&gt;+W i&lt;/code&gt;). Defaults to warnings. The current mapping can be retrieved using &lt;code&gt;error_logger:warning_map/0&lt;/code&gt;. For more information, see &lt;code&gt; error_logger:warning_map/0&lt;/code&gt; in Kernel.</source>
          <target state="translated">&lt;code&gt;error_logger&lt;/code&gt; の警告メッセージのマッピングを設定します。警告ルーチンの1つを使用してエラーロガーに送信されたメッセージは、エラー（ &lt;code&gt;+W e&lt;/code&gt; ）、警告（ &lt;code&gt;+W w&lt;/code&gt; ）、または情報レポート（ &lt;code&gt;+W i&lt;/code&gt; ）にマップできます。デフォルトは警告です。現在のマッピングは、 &lt;code&gt;error_logger:warning_map/0&lt;/code&gt; を使用して取得できます。詳細については、カーネルの &lt;code&gt; error_logger:warning_map/0&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="4c4bedd53e1740ad105d899475e39c0b492f1068" translate="yes" xml:space="preserve">
          <source>Sets the mapping of warning messages for &lt;code&gt;error_logger&lt;/code&gt;. Messages sent to the error logger using one of the warning routines can be mapped to errors (&lt;code&gt;+W e&lt;/code&gt;), warnings (&lt;code&gt;+W w&lt;/code&gt;), or information reports (&lt;code&gt;+W i&lt;/code&gt;). Defaults to warnings. The current mapping can be retrieved using &lt;code&gt;error_logger:warning_map/0&lt;/code&gt;. For more information, see &lt;code&gt;error_logger:warning_map/0&lt;/code&gt; in Kernel.</source>
          <target state="translated">&lt;code&gt;error_logger&lt;/code&gt; の警告メッセージのマッピングを設定します。警告ルーチンの1つを使用してエラーロガーに送信されたメッセージは、エラー（ &lt;code&gt;+W e&lt;/code&gt; ）、警告（ &lt;code&gt;+W w&lt;/code&gt; ）、または情報レポート（ &lt;code&gt;+W i&lt;/code&gt; ）にマッピングできます。デフォルトは警告です。現在のマッピングは、 &lt;code&gt;error_logger:warning_map/0&lt;/code&gt; を使用して取得できます。詳細については、カーネルの &lt;code&gt;error_logger:warning_map/0&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b29dc0d3c6bde8b91c5e600eef69cc9f6783479a" translate="yes" xml:space="preserve">
          <source>Sets the maximum allowed length of the packet body. If the packet header indicates that the length of the packet is longer than the maximum allowed length, the packet is considered invalid. The same occurs if the packet header is too large for the socket receive buffer.</source>
          <target state="translated">パケット本体の最大許容長を設定します。パケットヘッダの長さが最大許容長よりも長い場合、そのパケットは無効であると判断される。パケットヘッダがソケットの受信バッファに対して大きすぎる場合も同様である。</target>
        </trans-unit>
        <trans-unit id="bc7a1ad8d2963723a8fd60b1b6cd900baef40048" translate="yes" xml:space="preserve">
          <source>Sets the maximum allowed size of the packet body. If the packet header indicates that the length of the packet is longer than the maximum allowed length, the packet is considered invalid. Defaults to 0, which means no size limit.</source>
          <target state="translated">パケット本体の最大許容サイズを設定します。パケットヘッダがパケットの長さが最大許容長よりも長いことを示している場合、そのパケットは無効とみなされます。デフォルトは 0 で、これはサイズ制限がないことを意味します。</target>
        </trans-unit>
        <trans-unit id="a08d09a857db0a3afa786335f6d9718e647247a5" translate="yes" xml:space="preserve">
          <source>Sets the maximum depth of call stack back-traces in the exit reason element of &lt;code&gt;'EXIT'&lt;/code&gt; tuples. The flag also limits the stacktrace depth returned by &lt;code&gt;process_info&lt;/code&gt; item &lt;code&gt;current_stacktrace.&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;'EXIT'&lt;/code&gt; タプルの終了理由要素のコールスタックバックトレースの最大深度を設定します。このフラグは、 &lt;code&gt;process_info&lt;/code&gt; アイテム &lt;code&gt;current_stacktrace.&lt;/code&gt; によって返されるスタックトレースの深さも制限します。</target>
        </trans-unit>
        <trans-unit id="cdf0048b550dce2497152cc03e6293577c75b2b5" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of ETS tables. This limit is &lt;code&gt;partially obsolete&lt;/code&gt;.</source>
          <target state="translated">ETSテーブルの最大数を設定します。この制限は &lt;code&gt;partially obsolete&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2cf49b16a0fe474a4b12580aa850482cbcf54323" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of UDP packets to read without intervention from the socket when data is available. When this many packets have been read and delivered to the destination process, new packets are not read until a new notification of available data has arrived. Defaults to &lt;code&gt;5&lt;/code&gt;. If this parameter is set too high, the system can become unresponsive because of UDP packet flooding.</source>
          <target state="translated">データが利用可能な場合にソケットからの介入なしに読み取るUDPパケットの最大数を設定します。この数のパケットが読み取られて宛先プロセスに配信されると、使用可能なデータの新しい通知が到着するまで、新しいパケットは読み取られません。デフォルトは &lt;code&gt;5&lt;/code&gt; です。このパラメーターの設定が高すぎると、UDPパケットのフラッディングのためにシステムが応答しなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="4956af80d3ecccd4ebaa967b75b1efe8ce902411" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of atoms the virtual machine can handle. Defaults to 1,048,576.</source>
          <target state="translated">仮想マシンが処理できるアトムの最大数を設定します。デフォルトは 1,048,576 です。</target>
        </trans-unit>
        <trans-unit id="fc52a08a41b36c008741c220b19700a4b1f17d50" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of simultaneously existing ports for this system if a Number is passed as value. Valid range for &lt;code&gt;Number&lt;/code&gt; is &lt;code&gt;[1024-134217727]&lt;/code&gt;</source>
          <target state="translated">数値が値として渡される場合、このシステムに同時に存在するポートの最大数を設定します。 &lt;code&gt;Number&lt;/code&gt; 有効範囲は &lt;code&gt;[1024-134217727]&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="0b1bfec3bb12cb13846bb9555a8f5f91e13baf7b" translate="yes" xml:space="preserve">
          <source>Sets the maximum number of simultaneously existing processes for this system if a &lt;code&gt;Number&lt;/code&gt; is passed as value. Valid range for &lt;code&gt;Number&lt;/code&gt; is &lt;code&gt;[1024-134217727]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; が値として渡される場合、このシステムに同時に存在するプロセスの最大数を設定します。 &lt;code&gt;Number&lt;/code&gt; 有効範囲は &lt;code&gt;[1024-134217727]&lt;/code&gt; です</target>
        </trans-unit>
        <trans-unit id="fd3d0f4a3ec9c9fe2025e6b38f80c729998948a7" translate="yes" xml:space="preserve">
          <source>Sets the maximum time the test case is allowed to execute. If this time is exceeded, the test case fails with reason &lt;code&gt;timetrap_timeout&lt;/code&gt;. Notice that &lt;code&gt;init_per_testcase&lt;/code&gt; and &lt;code&gt;end_per_testcase&lt;/code&gt; are included in the timetrap time. For details, see section &lt;code&gt;&lt;a href=&quot;write_test_chapter#timetraps&quot;&gt;Timetrap Time-Outs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">テストケースの実行を許可する最大時間を設定します。この時間を超えると、テストケースは理由 &lt;code&gt;timetrap_timeout&lt;/code&gt; で失敗します。 &lt;code&gt;init_per_testcase&lt;/code&gt; と &lt;code&gt;end_per_testcase&lt;/code&gt; がタイムトラップ時間に含まれていることに注意してください。詳細については、「 &lt;code&gt;&lt;a href=&quot;write_test_chapter#timetraps&quot;&gt;Timetrap Time-Outs&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="324d088b62be41b223f26760134fa6f5f4b4409d" translate="yes" xml:space="preserve">
          <source>Sets the name of a file containing the list of user groups for user authentication. The filename can be either absolute or relative to the &lt;code&gt;server_root&lt;/code&gt;. If the plain storage method is used, the group file is a plain text file, where each line contains a group name followed by a colon, followed by the members usernames separated by spaces.</source>
          <target state="translated">ユーザー認証用のユーザーグループのリストを含むファイルの名前を設定します。ファイル名は、絶対 &lt;code&gt;server_root&lt;/code&gt; またはserver_rootに対する相対パスのいずれかです。プレーンストレージ方式を使用する場合、グループファイルはプレーンテキストファイルで、各行にはグループ名、コロン、メンバー名の順にスペースで区切られています。</target>
        </trans-unit>
        <trans-unit id="33014e717faffd760226fc3c32a7f5ea0967d547" translate="yes" xml:space="preserve">
          <source>Sets the name of a file containing the list of users and passwords for user authentication. The filename can be either absolute or relative to the &lt;code&gt;server_root&lt;/code&gt;. If using the plain storage method, this file is a plain text file where each line contains a username followed by a colon, followed by the non-encrypted password. If usernames are duplicated, the behavior is undefined.</source>
          <target state="translated">ユーザー認証用のユーザーとパスワードのリストを含むファイルの名前を設定します。ファイル名は、絶対 &lt;code&gt;server_root&lt;/code&gt; またはserver_rootに対する相対パスのいずれかです。プレーンストレージ方式を使用する場合、このファイルはプレーンテキストファイルで、各行にはユーザー名、コロン、暗号化されていないパスワードが含まれます。ユーザー名が重複している場合の動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="d558392153a0820116aa8acdc19a2134dbd3d561" translate="yes" xml:space="preserve">
          <source>Sets the name of the authorization realm (auth-domain) for a directory. This string informs the client about which username and password to use.</source>
          <target state="translated">ディレクトリの認証領域 (auth-domain)の名前を設定します。この文字列は、使用するユーザ名とパスワードをクライアントに通知します。</target>
        </trans-unit>
        <trans-unit id="5a2b4a3a9524de729d631b79099b5ccf6d3a6cc7" translate="yes" xml:space="preserve">
          <source>Sets the named (or default) value to &lt;code&gt;value&lt;/code&gt;. Calls the Win32 API function &lt;code&gt;RegSetValueEx()&lt;/code&gt;. The value can be of three types, and the corresponding registry type is used. The supported types are the following:</source>
          <target state="translated">名前付き（またはデフォルト）の値を &lt;code&gt;value&lt;/code&gt; に設定します。Win32 API関数 &lt;code&gt;RegSetValueEx()&lt;/code&gt; を呼び出します。値には3つのタイプがあり、対応するレジストリタイプが使用されます。サポートされるタイプは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6aa7a6b0b3d91aac076c25016cfd1bdb91b9ee48" translate="yes" xml:space="preserve">
          <source>Sets the number of IO poll threads to use when polling for I/O. The maximum number of poll threads allowed is 1024. The default is 1.</source>
          <target state="translated">I/Oポーリング時に使用するIOポーリングスレッド数を設定します。許可されるポーリングスレッドの最大数は1024です。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="8252bf59f35afefeae49fd9f5ad304aa84e5c254" translate="yes" xml:space="preserve">
          <source>Sets the number of IO pollsets to use when polling for I/O. This option is only used on platforms that support concurrent updates of a pollset, otherwise the same number of pollsets are used as IO poll threads. The default is 1.</source>
          <target state="translated">I/Oポーリング時に使用するIOポールセットの数を設定します。このオプションは、ポールセットの同時更新をサポートするプラットフォームでのみ使用され、そうでない場合は同じ数のポールセットがIOポールスレッドとして使用されます。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="d431589418401b249620fb2560f77b2c8f2920d4" translate="yes" xml:space="preserve">
          <source>Sets the number of dirty CPU scheduler threads to create and dirty CPU scheduler threads to set online. The maximum for both values is 1024, and each value is further limited by the settings for normal schedulers:</source>
          <target state="translated">作成するダーティCPUスケジューラのスレッド数と、オンラインで設定するダーティCPUスケジューラのスレッド数を設定します。いずれの値も最大値は1024で、それぞれの値は通常のスケジューラの設定によってさらに制限されます。</target>
        </trans-unit>
        <trans-unit id="7f059be725bc687428244a4ee6d3278e9410a9c2" translate="yes" xml:space="preserve">
          <source>Sets the number of dirty CPU schedulers online. Range is &lt;code&gt;1 &amp;lt;= DirtyCPUSchedulersOnline &amp;lt;= N&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; is the smallest of the return values of &lt;code&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/code&gt; and &lt;code&gt;erlang:system_info(schedulers_online)&lt;/code&gt;.</source>
          <target state="translated">ダーティCPUスケジューラの数をオンラインで設定します。範囲は &lt;code&gt;1 &amp;lt;= DirtyCPUSchedulersOnline &amp;lt;= N&lt;/code&gt; 。ここで、 &lt;code&gt;N&lt;/code&gt; は &lt;code&gt;erlang:system_info(dirty_cpu_schedulers)&lt;/code&gt; と &lt;code&gt;erlang:system_info(schedulers_online)&lt;/code&gt; system_info（schedulers_online）の戻り値の最小値です。</target>
        </trans-unit>
        <trans-unit id="153db4e3d34aceffa6303ce716fdc65e09e97afc" translate="yes" xml:space="preserve">
          <source>Sets the number of dirty I/O scheduler threads to create. Valid range is 0-1024. By default, the number of dirty I/O scheduler threads created is 10, same as the default number of threads in the &lt;code&gt;&lt;a href=&quot;#async_thread_pool_size&quot;&gt;async thread pool&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">作成するダーティI / Oスケジューラスレッドの数を設定します。有効な範囲は0〜1024です。デフォルトでは、作成されるダーティI / Oスケジューラスレッドの数は、 &lt;code&gt;&lt;a href=&quot;#async_thread_pool_size&quot;&gt;async thread pool&lt;/a&gt;&lt;/code&gt; 内のデフォルトのスレッド数と同じ10です。</target>
        </trans-unit>
        <trans-unit id="2d472c0e0387c7eaf8f974c34e7e7e1a7a4c8f83" translate="yes" xml:space="preserve">
          <source>Sets the number of dirty I/O scheduler threads to create. Valid range is 1-1024. By default, the number of dirty I/O scheduler threads created is 10.</source>
          <target state="translated">作成するダーティI/Oスケジューラのスレッド数を設定します。有効な範囲は1~1024です。デフォルトでは、作成するダーティI/Oスケジューラのスレッド数は10です。</target>
        </trans-unit>
        <trans-unit id="9dc382dc2668aae31b50c8b929069fa4ef7cf20e" translate="yes" xml:space="preserve">
          <source>Sets the number of previous commands to keep in the history list to &lt;code&gt;N&lt;/code&gt;. The previous number is returned. Defaults to 20.</source>
          <target state="translated">履歴リストに保持する前のコマンドの数を &lt;code&gt;N&lt;/code&gt; に設定します。以前の番号が返されます。デフォルトは20です。</target>
        </trans-unit>
        <trans-unit id="8f34246147a49d84739a8fbd1c44c94ef1dce635" translate="yes" xml:space="preserve">
          <source>Sets the number of results from previous commands to keep in the history list to &lt;code&gt;N&lt;/code&gt;. The previous number is returned. Defaults to 20.</source>
          <target state="translated">履歴リストに保持する前のコマンドからの結果の数を &lt;code&gt;N&lt;/code&gt; に設定します。以前の番号が返されます。デフォルトは20です。</target>
        </trans-unit>
        <trans-unit id="7a62121dcc55a541c16dbca03c971c4d0c707f75" translate="yes" xml:space="preserve">
          <source>Sets the number of scheduler threads to create and scheduler threads to set online. The maximum for both values is 1024. If the Erlang runtime system is able to determine the number of logical processors configured and logical processors available, &lt;code&gt;Schedulers&lt;/code&gt; defaults to logical processors configured, and &lt;code&gt;SchedulersOnline&lt;/code&gt; defaults to logical processors available; otherwise the default values are 1. &lt;code&gt;Schedulers&lt;/code&gt; can be omitted if &lt;code&gt;:SchedulerOnline&lt;/code&gt; is not and conversely. The number of schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">作成するスケジューラスレッドとオンラインに設定するスケジューラスレッドの数を設定します。Erlangのランタイムシステムは、利用可能な構成の論理プロセッサと論理プロセッサの数を決定することができる場合には両方の値のための最大値は、1024である &lt;code&gt;Schedulers&lt;/code&gt; の論理構成プロセッサ、及びデフォルト &lt;code&gt;SchedulersOnline&lt;/code&gt; のデフォルト使用可能な論理プロセッサに、そうでない場合は、デフォルト値は1です &lt;code&gt;Schedulers&lt;/code&gt; あれば省略でき &lt;code&gt;:SchedulerOnline&lt;/code&gt; ないと逆です。オンラインのスケジューラーの数は、 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; して実行時に変更できます。</target>
        </trans-unit>
        <trans-unit id="60b2dc5f4fbd085c53ac66d11d536e7a50a7f2a0" translate="yes" xml:space="preserve">
          <source>Sets the number of scheduler threads to create and scheduler threads to set online. The maximum for both values is 1024. If the Erlang runtime system is able to determine the number of logical processors configured and logical processors available, &lt;code&gt;Schedulers&lt;/code&gt; defaults to logical processors configured, and &lt;code&gt;SchedulersOnline&lt;/code&gt; defaults to logical processors available; otherwise the default values are 1. If the emulator detects that it is subject to a &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_quota&quot;&gt;CPU quota&lt;/a&gt;&lt;/code&gt;, the default value for &lt;code&gt;SchedulersOnline&lt;/code&gt; will be limited accordingly.</source>
          <target state="translated">作成するスケジューラースレッドの数とオンラインで設定するスケジューラースレッドの数を設定します。Erlangのランタイムシステムは、利用可能な構成の論理プロセッサと論理プロセッサの数を決定することができる場合には両方の値のための最大値は、1024である &lt;code&gt;Schedulers&lt;/code&gt; の論理構成プロセッサ、及びデフォルト &lt;code&gt;SchedulersOnline&lt;/code&gt; のデフォルト使用可能な論理プロセッサに、それ以外の場合、デフォルト値は1です。エミュレーターが &lt;code&gt;&lt;a href=&quot;erlang#system_info_cpu_quota&quot;&gt;CPU quota&lt;/a&gt;&lt;/code&gt; 対象であることを検出すると、 &lt;code&gt;SchedulersOnline&lt;/code&gt; のデフォルト値はそれに応じて制限されます。</target>
        </trans-unit>
        <trans-unit id="b01e97a0946f0daf9d05b34eb1ec6ece3db95a34" translate="yes" xml:space="preserve">
          <source>Sets the number of schedulers online. Range is &lt;code&gt;1 &amp;lt;= SchedulersOnline &amp;lt;= erlang:system_info(schedulers)&lt;/code&gt;.</source>
          <target state="translated">オンラインでスケジューラーの数を設定します。範囲は &lt;code&gt;1 &amp;lt;= SchedulersOnline &amp;lt;= erlang:system_info(schedulers)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9a8ff1fa759cc8215f6ceba85374b21a711f6113" translate="yes" xml:space="preserve">
          <source>Sets the number of seconds a connection can be inactive before &lt;code&gt;epmd&lt;/code&gt; times out and closes the connection. Defaults to 60.</source>
          <target state="translated">&lt;code&gt;epmd&lt;/code&gt; がタイムアウトして接続を閉じるまでに、接続を非アクティブにできる秒数を設定します。デフォルトは60です。</target>
        </trans-unit>
        <trans-unit id="8f3973be7bf1aa683cfb6537f5b7e623d570128e" translate="yes" xml:space="preserve">
          <source>Sets the number of threads in async thread pool. Valid range is 0-1024. Defaults to 1.</source>
          <target state="translated">非同期スレッドプールのスレッド数を設定します。有効な範囲は 0 ~ 1024 です。既定値は 1 です。</target>
        </trans-unit>
        <trans-unit id="546e80cce60182a0fbaeea1c2cbd4f298916a928" translate="yes" xml:space="preserve">
          <source>Sets the number of threads in async thread pool. Valid range is 1-1024. The async thread pool is used by linked-in drivers to handle work that may take a very long time. Since OTP 21 there are very few linked-in drivers in the default Erlang/OTP distribution that uses the async thread pool. Most of them have been migrated to dirty IO schedulers. Defaults to 1.</source>
          <target state="translated">非同期スレッドプールのスレッド数を設定します。有効な範囲は 1 ~ 1024 です。非同期スレッドプールはリンクインドライバが非常に長い時間がかかる作業を処理するために使われます。OTP 21以降、デフォルトのErlang/OTPディストリビューションでは非同期スレッドプールを使っているリンクインドライバはほとんどありません。ほとんどのドライバーはダーティなIOスケジューラに移行されています。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="84ff85aa29b5c4930ac56b8d83524b1825cd3161" translate="yes" xml:space="preserve">
          <source>Sets the path of the loader if &lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt; interprets a &lt;code&gt;path&lt;/code&gt; command in the start script.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt; が起動スクリプトの &lt;code&gt;path&lt;/code&gt; コマンドを解釈する場合、ローダーのパスを設定します。</target>
        </trans-unit>
        <trans-unit id="9f14f892bed23c0a93046e148efc501f22efca7b" translate="yes" xml:space="preserve">
          <source>Sets the port owner (the connected port) to &lt;code&gt;Pid&lt;/code&gt;. Roughly the same as &lt;code&gt;Port ! {Owner, {connect, Pid}}&lt;/code&gt; except for the following:</source>
          <target state="translated">ポート所有者（接続されたポート）を &lt;code&gt;Pid&lt;/code&gt; に設定します。 &lt;code&gt;Port ! {Owner, {connect, Pid}}&lt;/code&gt; とほぼ同じです！{所有者、{接続、Pid}}以下を除く：</target>
        </trans-unit>
        <trans-unit id="1243f4206de9e59878fa5fcca92cd1e36dc0ab75" translate="yes" xml:space="preserve">
          <source>Sets the port owner of &lt;code&gt;Port&lt;/code&gt;to &lt;code&gt;NewPid&lt;/code&gt;. The old port owner &lt;code&gt;Pid&lt;/code&gt; stays linked to the port and must call &lt;code&gt;unlink(Port)&lt;/code&gt; if this is not desired.</source>
          <target state="translated">&lt;code&gt;Port&lt;/code&gt; のポート所有者を &lt;code&gt;NewPid&lt;/code&gt; に設定します。古いポート所有者 &lt;code&gt;Pid&lt;/code&gt; はポートにリンクされたままであり、これが必要ない場合は &lt;code&gt;unlink(Port)&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="10437219d9579a554d6d2d338f43778e137ea386" translate="yes" xml:space="preserve">
          <source>Sets the port owner of &lt;code&gt;Port&lt;/code&gt;to &lt;code&gt;NewPid&lt;/code&gt;. Unless the port is already closed, the port replies with&lt;code&gt;{Port,connected}&lt;/code&gt; to the old port owner. Note that the old port owner is still linked to the port, but the new port owner is not.</source>
          <target state="translated">&lt;code&gt;Port&lt;/code&gt; のポート所有者を &lt;code&gt;NewPid&lt;/code&gt; に設定します。ポートが既に閉じられていない限り、ポートは古いポート所有者に &lt;code&gt;{Port,connected}&lt;/code&gt; 応答します。古いポート所有者はまだポートにリンクされていますが、新しいポート所有者はリンクされていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ad029bbf844eebe81edd3e067ea50cd5b9a13b30" translate="yes" xml:space="preserve">
          <source>Sets the position information of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Pos&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; の位置情報を &lt;code&gt;Pos&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="45748fef38eb94e3119fde2bd98d9e941ccce529" translate="yes" xml:space="preserve">
          <source>Sets the position of &lt;code&gt;UserData&lt;/code&gt; as defined for files in &lt;code&gt; file:position/2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt; file:position/2&lt;/code&gt; 内のファイルに対して定義された &lt;code&gt;UserData&lt;/code&gt; の位置を設定します</target>
        </trans-unit>
        <trans-unit id="4d250de16211908674b5dbe01fbc4373edca0777" translate="yes" xml:space="preserve">
          <source>Sets the position of &lt;code&gt;UserPrivate&lt;/code&gt; as defined for files in &lt;code&gt;file:position/2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;file:position/2&lt;/code&gt; のファイルに定義されている &lt;code&gt;UserPrivate&lt;/code&gt; の位置を設定します。</target>
        </trans-unit>
        <trans-unit id="f0b196fb299c2125cdfbde73581f4a4476a39fde" translate="yes" xml:space="preserve">
          <source>Sets the position of the file referenced by &lt;code&gt;IoDevice&lt;/code&gt; to &lt;code&gt;Location&lt;/code&gt;. Returns &lt;code&gt;{ok, NewPosition}&lt;/code&gt; (as absolute offset) if successful, otherwise &lt;code&gt;{error, Reason}&lt;/code&gt;. &lt;code&gt;Location&lt;/code&gt; is one of the following:</source>
          <target state="translated">&lt;code&gt;IoDevice&lt;/code&gt; によって参照されるファイルの位置を &lt;code&gt;Location&lt;/code&gt; に設定します。成功した場合は &lt;code&gt;{ok, NewPosition}&lt;/code&gt; （絶対オフセットとして）を返し、それ以外の場合は &lt;code&gt;{error, Reason}&lt;/code&gt; 返します。 &lt;code&gt;Location&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="6883a3ea18416f403ba8ad9a0d501e2eefa78b3d" translate="yes" xml:space="preserve">
          <source>Sets the post-comments of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Comments&lt;/code&gt;. &lt;code&gt;Comments&lt;/code&gt; should be a possibly empty list of abstract comments, in top-down textual order</source>
          <target state="translated">後のコメント設定 &lt;code&gt;Node&lt;/code&gt; への &lt;code&gt;Comments&lt;/code&gt; 。 &lt;code&gt;Comments&lt;/code&gt; は、空の抽象コメントのリストであり、上から下へのテキスト順である必要があります</target>
        </trans-unit>
        <trans-unit id="d1b0fbcbff045cc34e57a32fd1f4e7df3709a04b" translate="yes" xml:space="preserve">
          <source>Sets the pre-comments of &lt;code&gt;Node&lt;/code&gt; to &lt;code&gt;Comments&lt;/code&gt;. &lt;code&gt;Comments&lt;/code&gt; should be a possibly empty list of abstract comments, in top-down textual order.</source>
          <target state="translated">前のコメントを設定します &lt;code&gt;Node&lt;/code&gt; に &lt;code&gt;Comments&lt;/code&gt; 。 &lt;code&gt;Comments&lt;/code&gt; は、空の抽象コメントのリストであり、上から下へのテキスト順になります。</target>
        </trans-unit>
        <trans-unit id="db69f82a6e8a341aeda2362a91ac7c6447053ffe" translate="yes" xml:space="preserve">
          <source>Sets the priority of the new process. Equivalent to executing &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt; process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt; in the start function of the new process, except that the priority is set before the process is selected for execution for the first time. For more information on priorities, see &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt; process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">新しいプロセスの優先度を設定します。新しいプロセスの開始関数で &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt; process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt; を実行するのと同じですが、プロセスが初めて実行されるように選択される前に優先度が設定される点が異なります。優先度の詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt; process_flag(priority, Level)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="d157d45bafcc2fac8b81e213b89a1d03c8b7a90d" translate="yes" xml:space="preserve">
          <source>Sets the priority of the new process. Equivalent to executing &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority,Level)&lt;/a&gt;&lt;/code&gt; in the start function of the new process, except that the priority is set before the process is selected for execution for the first time. For more information on priorities, see &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority,Level)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">新しいプロセスの優先度を設定します。新しいプロセスのstart関数で &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority,Level)&lt;/a&gt;&lt;/code&gt; を実行するのと同じですが、最初に実行するプロセスを選択する前に優先順位が設定される点が異なります。優先度の詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_priority&quot;&gt;process_flag(priority,Level)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="34a61461689281b3d9e3ae53839861a878ef82f2" translate="yes" xml:space="preserve">
          <source>Sets the process priority. &lt;code&gt;Level&lt;/code&gt; is an atom. Four priority levels exist: &lt;code&gt;low&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;high&lt;/code&gt;, and &lt;code&gt;max&lt;/code&gt;. Default is &lt;code&gt;normal&lt;/code&gt;.</source>
          <target state="translated">プロセスの優先順位を設定します。 &lt;code&gt;Level&lt;/code&gt; はアトムです。優先順位には、 &lt;code&gt;low&lt;/code&gt; 、 &lt;code&gt;normal&lt;/code&gt; 、 &lt;code&gt;high&lt;/code&gt; 、 &lt;code&gt;max&lt;/code&gt; 4つのレベルがあります。デフォルトは &lt;code&gt;normal&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="24e3d00d6b542ec695023aac73d1d73e259c1461" translate="yes" xml:space="preserve">
          <source>Sets the process that will receive the logging messages generated by ERTS. If set to &lt;code&gt;undefined&lt;/code&gt;, all logging messages generated by ERTS will be dropped. The messages will be in the format:</source>
          <target state="translated">ERTSによって生成されたロギングメッセージを受信するプロセスを設定します。 &lt;code&gt;undefined&lt;/code&gt; に設定すると、ERTSによって生成されたすべてのログメッセージがドロップされます。メッセージは次の形式になります。</target>
        </trans-unit>
        <trans-unit id="f3a495e55d1473a6207c204fb7e226c0921984f6" translate="yes" xml:space="preserve">
          <source>Sets the proxy configuration, equivalent to calling</source>
          <target state="translated">プロキシ設定を設定します。</target>
        </trans-unit>
        <trans-unit id="50b1f645e434cb258a1d300e632d91fdda4f05f7" translate="yes" xml:space="preserve">
          <source>Sets the range of characters that the system considers printable in heuristic detection of strings. This typically affects the shell, debugger, and &lt;code&gt;io:format&lt;/code&gt; functions (when &lt;code&gt;~tp&lt;/code&gt; is used in the format string).</source>
          <target state="translated">文字列のヒューリスティック検出でシステムが印刷可能と見なす文字の範囲を設定します。これは通常、シェル、デバッガー、および &lt;code&gt;io:format&lt;/code&gt; 関数に影響します（フォーマット文字列で &lt;code&gt;~tp&lt;/code&gt; が使用されている場合）。</target>
        </trans-unit>
        <trans-unit id="9cff87b01d48ddf15427db3cb6340d1ab9a8fb9a" translate="yes" xml:space="preserve">
          <source>Sets the reply tag to &lt;code&gt;ReplyTag&lt;/code&gt; in the reply message. That is, in the &lt;code&gt;&lt;a href=&quot;#spawn_request_success_message&quot;&gt;&lt;i&gt;success&lt;/i&gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#spawn_request_error_message&quot;&gt;&lt;i&gt;error&lt;/i&gt;&lt;/a&gt;&lt;/code&gt; message that is sent to the caller due to the spawn operation. The default reply tag is the atom &lt;code&gt;spawn_reply&lt;/code&gt;.</source>
          <target state="translated">返信メッセージで返信タグを &lt;code&gt;ReplyTag&lt;/code&gt; に設定します。つまり、スポーン操作のために呼び出し元に送信される &lt;code&gt;&lt;a href=&quot;#spawn_request_success_message&quot;&gt;&lt;i&gt;success&lt;/i&gt;&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#spawn_request_error_message&quot;&gt;&lt;i&gt;error&lt;/i&gt;&lt;/a&gt;&lt;/code&gt; メッセージ。デフォルトの応答タグはアトム &lt;code&gt;spawn_reply&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="214aa9e0cde51c6f24ca5bb8fc39f132f748f85d" translate="yes" xml:space="preserve">
          <source>Sets the shell prompt function to &lt;code&gt;PromptFunc&lt;/code&gt;. The previous prompt function is returned.</source>
          <target state="translated">シェルプロンプト関数を &lt;code&gt;PromptFunc&lt;/code&gt; に設定します。前のプロンプト関数に戻ります。</target>
        </trans-unit>
        <trans-unit id="cb087048709547fc663b275e9b6886b0adfc31d0" translate="yes" xml:space="preserve">
          <source>Sets the specified trace flags on the specified processes or ports. Flag &lt;code&gt;timestamp&lt;/code&gt; is always turned on.</source>
          <target state="translated">指定したプロセスまたはポートに指定したトレースフラグを設定します。フラグの &lt;code&gt;timestamp&lt;/code&gt; は常にオンになっています。</target>
        </trans-unit>
        <trans-unit id="5620ce3649c4687e1cfb824230792252a14432a9" translate="yes" xml:space="preserve">
          <source>Sets the stack trace option, see section &lt;code&gt;&lt;a href=&quot;#stack_trace&quot;&gt;Stack Trace&lt;/a&gt;&lt;/code&gt;. Does not affect existing debugged processes.</source>
          <target state="translated">スタックトレースオプションを設定します。「 &lt;code&gt;&lt;a href=&quot;#stack_trace&quot;&gt;Stack Trace&lt;/a&gt;&lt;/code&gt; 」を参照してください。既存のデバッグプロセスには影響しません。</target>
        </trans-unit>
        <trans-unit id="abdf8ead1a0b012fa3884cebf343315960b9465f" translate="yes" xml:space="preserve">
          <source>Sets the state of the &lt;code&gt;message_queue_data&lt;/code&gt; process flag. &lt;code&gt;MQD&lt;/code&gt; is to be either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. The default &lt;code&gt;message_queue_data&lt;/code&gt; process flag is determined by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt; +hmqd&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;message_queue_data&lt;/code&gt; プロセスフラグの状態を設定します。 &lt;code&gt;MQD&lt;/code&gt; は、 &lt;code&gt;off_heap&lt;/code&gt; または &lt;code&gt;on_heap&lt;/code&gt; のいずれかになります。デフォルトの &lt;code&gt;message_queue_data&lt;/code&gt; プロセスフラグは、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドライン引数 &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt; +hmqd&lt;/a&gt;&lt;/code&gt; によって決定されます。詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt; process_flag(message_queue_data, MQD)&lt;/a&gt;&lt;/code&gt; ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="5e15eff48e53b53579fe684ef80bdea8be78ba40" translate="yes" xml:space="preserve">
          <source>Sets the state of the &lt;code&gt;message_queue_data&lt;/code&gt; process flag. &lt;code&gt;MQD&lt;/code&gt; is to be either &lt;code&gt;off_heap&lt;/code&gt; or &lt;code&gt;on_heap&lt;/code&gt;. The default &lt;code&gt;message_queue_data&lt;/code&gt; process flag is determined by command-line argument &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; in &lt;code&gt;erl(1)&lt;/code&gt;. For more information, see the documentation of &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data,MQD)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;message_queue_data&lt;/code&gt; プロセスフラグの状態を設定します。 &lt;code&gt;MQD&lt;/code&gt; は &lt;code&gt;off_heap&lt;/code&gt; または &lt;code&gt;on_heap&lt;/code&gt; のいずれかです。デフォルトの &lt;code&gt;message_queue_data&lt;/code&gt; プロセスフラグは、 &lt;code&gt;erl(1)&lt;/code&gt; のコマンドライン引数 &lt;code&gt;&lt;a href=&quot;erl#+hmqd&quot;&gt;+hmqd&lt;/a&gt;&lt;/code&gt; によって決定されます。詳細については、 &lt;code&gt;&lt;a href=&quot;#process_flag_message_queue_data&quot;&gt;process_flag(message_queue_data,MQD)&lt;/a&gt;&lt;/code&gt; ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ea853c8ced97def75717cf0264f6ffa79a284e1d" translate="yes" xml:space="preserve">
          <source>Sets the system directory, containing the host key files that identify the host keys for &lt;code&gt;ssh&lt;/code&gt;. Defaults to &lt;code&gt;/etc/ssh&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ssh&lt;/code&gt; のホストキーを識別するホストキーファイルを含むシステムディレクトリを設定します。デフォルトは &lt;code&gt;/etc/ssh&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="dadfc4f2c22a540bc9158c5cdf3feefc2deaaa9f" translate="yes" xml:space="preserve">
          <source>Sets the system performance monitoring options. &lt;code&gt;MonitorPid&lt;/code&gt; is a local process identifier (pid) receiving system monitor messages. The second argument is a list of monitoring options:</source>
          <target state="translated">システムパフォーマンス監視オプションを設定します。 &lt;code&gt;MonitorPid&lt;/code&gt; は、システムモニターメッセージを受信するローカルプロセス識別子（pid）です。2番目の引数は、監視オプションのリストです。</target>
        </trans-unit>
        <trans-unit id="4a32ff972234c4763ee9efb0d8897edf310089c2" translate="yes" xml:space="preserve">
          <source>Sets the system tracer. The system tracer can be either a process, port or &lt;code&gt;tracer module&lt;/code&gt; denoted by &lt;code&gt;Tracer&lt;/code&gt;. Returns the previous value (which can be &lt;code&gt;false&lt;/code&gt; if no system tracer is active).</source>
          <target state="translated">システムトレーサーを設定します。システムトレーサーは、プロセス、ポート、または &lt;code&gt;Tracer&lt;/code&gt; で示される &lt;code&gt;tracer module&lt;/code&gt; いずれかです。以前の値を返します（アクティブなシステムトレーサーがない場合は &lt;code&gt;false&lt;/code&gt; になることがあります）。</target>
        </trans-unit>
        <trans-unit id="b584505d01661ee314ccddd68b712dd9da0002c2" translate="yes" xml:space="preserve">
          <source>Sets the text strings that the daemon sends to the client for presentation to the user when using &lt;code&gt;keyboard-interactive&lt;/code&gt; authentication.</source>
          <target state="translated">&lt;code&gt;keyboard-interactive&lt;/code&gt; 認証を使用するときに、デーモンがユーザーに提示するためにクライアントに送信するテキスト文字列を設定します。</target>
        </trans-unit>
        <trans-unit id="3c6a52e3fe331972e102400ad15024d26902ce1a" translate="yes" xml:space="preserve">
          <source>Sets the three diffie-hellman-group-exchange parameters that guides the connected server in choosing a group. See &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; for the details. The default value is &lt;code&gt;{1024, 6144, 8192}&lt;/code&gt;.</source>
          <target state="translated">接続サーバーがグループを選択する際のガイドとなる3つのdiffie-hellman-group-exchangeパラメーターを設定します。詳細については、 &lt;code&gt;&lt;a href=&quot;https://tools.ietf.org/html/rfc4419&quot;&gt;RFC 4419&lt;/a&gt;&lt;/code&gt; を参照してください。デフォルト値は &lt;code&gt;{1024, 6144, 8192}&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9b36931f579df3f2d9a6e12dfa83eb8ecdf25f86" translate="yes" xml:space="preserve">
          <source>Sets the time, as &lt;code&gt; POSIX time&lt;/code&gt;, when the file was created. See also &lt;code&gt; file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">ファイルが作成された &lt;code&gt; POSIX time&lt;/code&gt; をPOSIX時刻として設定します。 &lt;code&gt; file:read_file_info/1&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="1dea03eddbfbdc17b4856b2ed4739297317bf436" translate="yes" xml:space="preserve">
          <source>Sets the time, as &lt;code&gt;POSIX time&lt;/code&gt;, when the file was created. See also &lt;code&gt;file:read_file_info/1&lt;/code&gt;.</source>
          <target state="translated">ファイルが作成された &lt;code&gt;POSIX time&lt;/code&gt; 、POSIX時間として設定します。 &lt;code&gt;file:read_file_info/1&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="c200ccdccaa9b5103f5cca9a46fbc0a24205ad87" translate="yes" xml:space="preserve">
          <source>Sets the time-out in milliseconds when communicating with the agent via the socket. The default value is &lt;code&gt;1000&lt;/code&gt;.</source>
          <target state="translated">ソケットを介してエージェントと通信するときのタイムアウトをミリ秒単位で設定します。デフォルト値は &lt;code&gt;1000&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="250d8fbdeb78ba08efed81e67dd78ccb714268c7" translate="yes" xml:space="preserve">
          <source>Sets the trace token for the calling process to &lt;code&gt;Token&lt;/code&gt;. If &lt;code&gt;Token == []&lt;/code&gt; then tracing is disabled, otherwise &lt;code&gt;Token&lt;/code&gt; should be an Erlang term returned from &lt;code&gt;get_token/0&lt;/code&gt; or &lt;code&gt;set_token/1&lt;/code&gt;. &lt;code&gt;set_token/1&lt;/code&gt; can be used to temporarily exclude message passing from the trace by setting the trace token to empty like this:</source>
          <target state="translated">呼び出しプロセスのトレーストークンを &lt;code&gt;Token&lt;/code&gt; に設定します。場合は &lt;code&gt;Token == []&lt;/code&gt; 、トレースが無効になっている、そうでない場合は &lt;code&gt;Token&lt;/code&gt; から返されたErlangの用語でなければなりません &lt;code&gt;get_token/0&lt;/code&gt; または &lt;code&gt;set_token/1&lt;/code&gt; 。 &lt;code&gt;set_token/1&lt;/code&gt; ようにトレーストークンを空に設定することで、set_token / 1を使用して、トレースから渡されるメッセージを一時的に除外できます。</target>
        </trans-unit>
        <trans-unit id="e177a1c4c107bb86d8df071af64538578333e871" translate="yes" xml:space="preserve">
          <source>Sets the trace token to empty for all processes on the local node. The process internal counters used to create the serial of the trace token is set to 0. The trace token is set to empty for all messages in message queues. Together this will effectively stop all ongoing sequential tracing in the local node.</source>
          <target state="translated">ローカル ノード上のすべてのプロセスに対して、トレース トークンを空に設定します。トレーストークンのシリアルを作成するために使用されるプロセス内部カウンタは0に設定されます。 トレーストークンは、メッセージキュー内のすべてのメッセージに対して空に設定されます。これを合わせると、ローカルノードで進行中のすべてのシーケンシャルトレースが効果的に停止します。</target>
        </trans-unit>
        <trans-unit id="b85bdc9737a006802bb3468719a30c56ed2b6420" translate="yes" xml:space="preserve">
          <source>Sets the trigger action of the breakpoint at &lt;code&gt;Line&lt;/code&gt; in &lt;code&gt;Module&lt;/code&gt; to &lt;code&gt;Action&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Module&lt;/code&gt; in &lt;code&gt;Line&lt;/code&gt; のブレークポイントのトリガーアクションを &lt;code&gt;Action&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="1193045982755353264319dac915c785e3a3bdb7" translate="yes" xml:space="preserve">
          <source>Sets the type of authentication database that is used for the directory. The key difference between the different methods is that dynamic data can be saved when Mnesia and Dets are used.</source>
          <target state="translated">ディレクトリに使用する認証データベースの種類を設定します。それぞれの方法の大きな違いは、MnesiaとDetsを使用した場合に動的なデータを保存できることです。</target>
        </trans-unit>
        <trans-unit id="8f1019b895f47525edc0d1ccc4bb351ad518bd49" translate="yes" xml:space="preserve">
          <source>Sets the type of authentication database that is used for the directory. The key difference between the different methods is that dynamic data can be saved when Mnesia and Dets are used. This property is called &lt;code&gt;AuthDbType&lt;/code&gt; in the Apache-like configuration files.</source>
          <target state="translated">ディレクトリに使用される認証データベースのタイプを設定します。異なる方法の主な違いは、MnesiaとDetsを使用すると動的データを保存できることです。このプロパティは、Apacheに似た構成ファイルでは &lt;code&gt;AuthDbType&lt;/code&gt; と呼ばれています。</target>
        </trans-unit>
        <trans-unit id="f55760789ebae0eb5eec69876adf78743b98b39e" translate="yes" xml:space="preserve">
          <source>Sets the user directory. That is, the directory containing &lt;code&gt;ssh&lt;/code&gt; configuration files for the user, such as &lt;code&gt;known_hosts&lt;/code&gt;, &lt;code&gt;id_rsa&lt;/code&gt;, &lt;code&gt;id_dsa&lt;/code&gt;&amp;gt;, &lt;code&gt;id_ecdsa&lt;/code&gt; and &lt;code&gt;authorized_key&lt;/code&gt;. Defaults to the directory normally referred to as &lt;code&gt;~/.ssh&lt;/code&gt;.</source>
          <target state="translated">ユーザーディレクトリを設定します。つまり、 &lt;code&gt;known_hosts&lt;/code&gt; 、 &lt;code&gt;id_rsa&lt;/code&gt; 、 &lt;code&gt;id_dsa&lt;/code&gt; &amp;gt;、 &lt;code&gt;id_ecdsa&lt;/code&gt; 、 &lt;code&gt;authorized_key&lt;/code&gt; など、ユーザーの &lt;code&gt;ssh&lt;/code&gt; 設定ファイルを含むディレクトリです。デフォルトは通常 &lt;code&gt;~/.ssh&lt;/code&gt; と呼ばれるディレクトリです。</target>
        </trans-unit>
        <trans-unit id="7d825fb37837385173f37fa7881f3347a79ab999" translate="yes" xml:space="preserve">
          <source>Sets the user-defined &lt;code&gt;CpuTopology&lt;/code&gt;. The user-defined CPU topology overrides any automatically detected CPU topology. By passing &lt;code&gt;undefined&lt;/code&gt; as &lt;code&gt;CpuTopology&lt;/code&gt;, the system reverts to the CPU topology automatically detected. The returned value equals the value returned from &lt;code&gt;erlang:system_info(cpu_topology)&lt;/code&gt; before the change was made.</source>
          <target state="translated">ユーザー定義の &lt;code&gt;CpuTopology&lt;/code&gt; を設定します。ユーザー定義のCPUトポロジは、自動的に検出されたCPUトポロジを上書きします。渡すことによって &lt;code&gt;undefined&lt;/code&gt; として &lt;code&gt;CpuTopology&lt;/code&gt; 、CPUトポロジにシステム戻しますが自動的に検出します。戻り値は、変更が行われる前に &lt;code&gt;erlang:system_info(cpu_topology)&lt;/code&gt; から返された値と同じです。</target>
        </trans-unit>
        <trans-unit id="2b72f27156031ba71a8d4202b37098640e69fc41" translate="yes" xml:space="preserve">
          <source>Sets the value of an environment variable.</source>
          <target state="translated">環境変数の値を設定します。</target>
        </trans-unit>
        <trans-unit id="04e01758d601353244a736a3ca2896d9893ba37c" translate="yes" xml:space="preserve">
          <source>Sets the value of configuration parameter &lt;code&gt;Par&lt;/code&gt; for &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">パラメータ設定の値を設定します &lt;code&gt;Par&lt;/code&gt; のため &lt;code&gt;Application&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="78404ccd4e2d2f45089e78392485de58e14cdbca" translate="yes" xml:space="preserve">
          <source>Sets the value of the &lt;code&gt;get_size&lt;/code&gt; option on the distribution channel identified by &lt;code&gt;DHandle&lt;/code&gt;. This option controls the return value of calls to &lt;code&gt;&lt;a href=&quot;#dist_ctrl_get_data-1&quot;&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/a&gt;&lt;/code&gt; where &lt;code&gt;DHandle&lt;/code&gt; equals &lt;code&gt;DHandle&lt;/code&gt; used when setting this option. When the &lt;code&gt;get_size&lt;/code&gt; option is:</source>
          <target state="translated">&lt;code&gt;DHandle&lt;/code&gt; で識別される配布チャネルの &lt;code&gt;get_size&lt;/code&gt; オプションの値を設定します。このオプションは、への呼び出しの戻り値を制御 &lt;code&gt;&lt;a href=&quot;#dist_ctrl_get_data-1&quot;&gt;erlang:dist_ctrl_get_data(DHandle)&lt;/a&gt;&lt;/code&gt; &lt;code&gt;DHandle&lt;/code&gt; が等しい &lt;code&gt;DHandle&lt;/code&gt; は、このオプションを設定するときに使用します。とき &lt;code&gt;get_size&lt;/code&gt; オプションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="55c27c673096bb19cfcdced65bcaa10b64df36dc" translate="yes" xml:space="preserve">
          <source>Sets the value of the node trace control word to &lt;code&gt;TCW&lt;/code&gt;, which is to be an unsigned integer. For more information, see function &lt;code&gt;set_tcw&lt;/code&gt; in section &quot;Match Specifications in Erlang&quot; in the User's Guide.</source>
          <target state="translated">ノードトレースコントロールワードの値を &lt;code&gt;TCW&lt;/code&gt; に設定します。TCWは符号なし整数です。詳細については、ユーザーズガイドの「Erlangの一致指定」セクションの関数 &lt;code&gt;set_tcw&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="7182205efd9afd1346318005e01f5aa86d91f5ff" translate="yes" xml:space="preserve">
          <source>Sets the value of the source, as returned by &lt;code&gt;module_info(compile)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;module_info(compile)&lt;/code&gt; が返すソースの値を設定します。</target>
        </trans-unit>
        <trans-unit id="fb3ed06f1faae89c65cc4108c40990ddbc59d3b2" translate="yes" xml:space="preserve">
          <source>Sets the wanted time-out value for the server to set up a request connection.</source>
          <target state="translated">サーバーがリクエスト接続を設定するためのタイムアウト値を設定します。</target>
        </trans-unit>
        <trans-unit id="8a2e325c916954b457f470ed8b9a2c99afd59b9f" translate="yes" xml:space="preserve">
          <source>Sets thread-specific data associated with &lt;code&gt;key&lt;/code&gt; for the calling thread. You are only allowed to set thread-specific data for threads while they are fully under your control. For example, if you set thread-specific data in a thread calling a driver callback function, it must be cleared, that is, set to &lt;code&gt;NULL&lt;/code&gt;, before returning from the driver callback function.</source>
          <target state="translated">呼び出しスレッドの &lt;code&gt;key&lt;/code&gt; に関連付けられたスレッド固有のデータを設定します。スレッドが完全に制御されている間は、スレッド固有のデータのみを設定できます。たとえば、ドライバーコールバック関数を呼び出すスレッドでスレッド固有のデータを設定する場合、ドライバーコールバック関数から戻る前に、データをクリアする（つまり、 &lt;code&gt;NULL&lt;/code&gt; に設定する）必要があります。</target>
        </trans-unit>
        <trans-unit id="f13ebdcb8f9c816521928fa2ebf58ae63bc5aba3" translate="yes" xml:space="preserve">
          <source>Sets trace pattern for &lt;strong&gt;message receiving&lt;/strong&gt;. Must be combined with &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; to set the &lt;code&gt;'receive'&lt;/code&gt; trace flag for one or more processes. By default all messages received by &lt;code&gt;'receive'&lt;/code&gt; traced processes are traced. To limit traced receive events based on the message content, the sender and/or the receiver, use &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;メッセージ受信の&lt;/strong&gt;トレースパターンを設定し&lt;strong&gt;ます&lt;/strong&gt;。1つ以上のプロセスの &lt;code&gt;'receive'&lt;/code&gt; トレースフラグを設定するには、 &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; と組み合わせる必要があります。デフォルトでは、 &lt;code&gt;'receive'&lt;/code&gt; トレースプロセスによって受信されたすべてのメッセージがトレースされます。メッセージの内容、送信者または受信者、あるいはその両方に基づいてトレースされる受信イベントを制限するには、 &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="000acbf623dd0a04850e3eb66addbc07363da5f6" translate="yes" xml:space="preserve">
          <source>Sets trace pattern for &lt;strong&gt;message sending&lt;/strong&gt;. Must be combined with &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; to set the &lt;code&gt;send&lt;/code&gt; trace flag for one or more processes. By default all messages sent from &lt;code&gt;send&lt;/code&gt; traced processes are traced. To limit traced send events based on the message content, the sender and/or the receiver, use &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;メッセージ送信の&lt;/strong&gt;トレースパターンを設定し&lt;strong&gt;ます&lt;/strong&gt;。1つ以上のプロセスにトレース &lt;code&gt;send&lt;/code&gt; フラグを設定するには、 &lt;code&gt;&lt;a href=&quot;#trace-3&quot;&gt;erlang:trace/3&lt;/a&gt;&lt;/code&gt; と組み合わせる必要があります。デフォルトでは、トレース &lt;code&gt;send&lt;/code&gt; プロセスから送信されたすべてのメッセージがトレースされます。メッセージの内容、送信者または受信者、あるいはその両方に基づいてトレース送信イベントを制限するには、 &lt;code&gt;erlang:trace_pattern/3&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="9d302ee41855a16aeca79fd40608595aaab94477" translate="yes" xml:space="preserve">
          <source>Sets trace patterns on global function calls.</source>
          <target state="translated">グローバル関数呼び出しのトレースパターンを設定します。</target>
        </trans-unit>
        <trans-unit id="42634745b031a96191e0de66538275f46ca3009d" translate="yes" xml:space="preserve">
          <source>Sets trace patterns on local and global function calls.</source>
          <target state="translated">ローカルおよびグローバル関数呼び出しのトレースパターンを設定します。</target>
        </trans-unit>
        <trans-unit id="0192a66af59bf23c109408fa8d652e9f7a095877" translate="yes" xml:space="preserve">
          <source>Sets trace patterns on messages.</source>
          <target state="translated">メッセージのトレースパターンを設定します。</target>
        </trans-unit>
        <trans-unit id="4812ffb6716d1729060478d1911eb2d87c30fbd4" translate="yes" xml:space="preserve">
          <source>Sets up a Unix Domain Socket. See &lt;code&gt;&lt;a href=&quot;inet#type-local_address&quot;&gt; inet:local_address() &lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Unixドメインソケットを設定します。 &lt;code&gt;&lt;a href=&quot;inet#type-local_address&quot;&gt; inet:local_address() &lt;/a&gt;&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="f20b5257c8e818508783afccee9848f1d15a7976" translate="yes" xml:space="preserve">
          <source>Sets up a Unix Domain Socket. See &lt;code&gt;&lt;a href=&quot;inet#type-local_address&quot;&gt;inet:local_address()&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">Unixドメインソケットを設定します。 &lt;code&gt;&lt;a href=&quot;inet#type-local_address&quot;&gt;inet:local_address()&lt;/a&gt;&lt;/code&gt; を参照してください</target>
        </trans-unit>
        <trans-unit id="b753fabf9b556745a4eefcc949081ec333308d37" translate="yes" xml:space="preserve">
          <source>Sets up a connection to &lt;code&gt;Node&lt;/code&gt;. Returns &lt;code&gt;pong&lt;/code&gt; if it is successful, otherwise &lt;code&gt;pang&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; への接続を設定します。成功した場合は &lt;code&gt;pong&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;pang&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8fe298c3aa8927bcebad0c320253b098aeef5b1e" translate="yes" xml:space="preserve">
          <source>Sets up a connection to an Erlang node.</source>
          <target state="translated">Erlangノードへの接続を設定します。</target>
        </trans-unit>
        <trans-unit id="9088fae4ec74e8a34481645dcda97cdce0454731" translate="yes" xml:space="preserve">
          <source>Sets up a socket to listen on port &lt;code&gt;Port&lt;/code&gt; on the local host.</source>
          <target state="translated">ローカルホスト上のポート &lt;code&gt;Port&lt;/code&gt; でリッスンするようにソケットを設定します。</target>
        </trans-unit>
        <trans-unit id="a22f13589dbf577fc1fc7b2e192f2896825076d0" translate="yes" xml:space="preserve">
          <source>Sets up a socket to listen on the IP address and port number it is bound to.</source>
          <target state="translated">ソケットがバインドされているIPアドレスとポート番号をリッスンするように設定します。</target>
        </trans-unit>
        <trans-unit id="43f7db90674d7030b023f5511d952ba3ab50d90d" translate="yes" xml:space="preserve">
          <source>Sets up the socket for IPv4.</source>
          <target state="translated">IPv4用のソケットを設定します。</target>
        </trans-unit>
        <trans-unit id="268135a3a9b8586213ce649e0e938b5d7832f78c" translate="yes" xml:space="preserve">
          <source>Sets up the socket for IPv4. This is the default.</source>
          <target state="translated">IPv4用のソケットを設定します。これがデフォルトです。</target>
        </trans-unit>
        <trans-unit id="155bd11114ba428e9118aeae911dce2f96284be3" translate="yes" xml:space="preserve">
          <source>Sets up the socket for IPv6.</source>
          <target state="translated">IPv6用のソケットを設定します。</target>
        </trans-unit>
        <trans-unit id="151f5bdfc57ff342c5c7407e70c7d5a7f7364306" translate="yes" xml:space="preserve">
          <source>Sets verbosity for the designated process. For the lowest verbosity &lt;code&gt;silence&lt;/code&gt;, nothing is printed. The higher the verbosity, the more is printed.</source>
          <target state="translated">指定されたプロセスの詳細度を設定します。冗長性が最も低い &lt;code&gt;silence&lt;/code&gt; 場合、何も出力されません。冗長性が高いほど、より多く印刷されます。</target>
        </trans-unit>
        <trans-unit id="2fc807f18af7e2ec34af31e8d501e6bbfd070a54" translate="yes" xml:space="preserve">
          <source>Sets warning level to &lt;code&gt;Number&lt;/code&gt;. Defaults to &lt;code&gt;1&lt;/code&gt;. To turn off warnings, use &lt;code&gt;-W0&lt;/code&gt;.</source>
          <target state="translated">警告レベルを &lt;code&gt;Number&lt;/code&gt; に設定します。デフォルトは &lt;code&gt;1&lt;/code&gt; です。警告をオフにするには、 &lt;code&gt;-W0&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="23e977113917830f9919d655c7161aaf4b253609" translate="yes" xml:space="preserve">
          <source>Sets when and how to attach to a debugged process automatically, see &lt;code&gt;&lt;a href=&quot;int#auto_attach-0&quot;&gt;int:auto_attach/2&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;Function&lt;/code&gt; defaults to the standard function used by Debugger.</source>
          <target state="translated">デバッグされるプロセスに自動的にアタッチするタイミングと方法を設定します &lt;code&gt;&lt;a href=&quot;int#auto_attach-0&quot;&gt;int:auto_attach/2&lt;/a&gt;&lt;/code&gt; 参照してください。 &lt;code&gt;Function&lt;/code&gt; デフォルトは、デバッガーが使用する標準関数です。</target>
        </trans-unit>
        <trans-unit id="d10778ddf5efe6e1338524c56217df5c98662e72" translate="yes" xml:space="preserve">
          <source>Sets whether to kill processes reaching the maximum heap size or not. Default to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">最大ヒープサイズに達したプロセスを強制終了するかどうかを設定します。デフォルトは &lt;code&gt;true&lt;/code&gt; です。詳細については、 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="6852b168dabd12c3dfbafe087c4d253711cdc5d6" translate="yes" xml:space="preserve">
          <source>Sets whether to kill processes reaching the maximum heap size or not. Default to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">最大ヒープサイズに達したプロセスを強制終了するかどうかを設定します。デフォルトは &lt;code&gt;true&lt;/code&gt; です。詳細については、 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="b13d3a89efc72e87a945724af0f1a02ceaa4170b" translate="yes" xml:space="preserve">
          <source>Sets whether to send an error logger message or not for processes reaching the maximum heap size. Defaults to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">最大ヒープサイズに達したプロセスに対してエラーロガーメッセージを送信するかどうかを設定します。デフォルトは &lt;code&gt;true&lt;/code&gt; です。詳細については、 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt; process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="f5edbc9f34510070fcc2628f8a5499511c41d843" translate="yes" xml:space="preserve">
          <source>Sets whether to send an error logger message or not for processes reaching the maximum heap size. Defaults to &lt;code&gt;true&lt;/code&gt;. For more information, see &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">最大ヒープサイズに達したプロセスに対してエラーロガーメッセージを送信するかどうかを設定します。デフォルトは &lt;code&gt;true&lt;/code&gt; です。詳細については、 &lt;code&gt;&lt;a href=&quot;erlang#process_flag_max_heap_size&quot;&gt;process_flag(max_heap_size, MaxHeapSize)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="1a4bf1689aa6558bcc36de9fa2511f7420ccd2f5" translate="yes" xml:space="preserve">
          <source>Sets which areas are to be visible. Does not affect other Attach Process windows.</source>
          <target state="translated">表示する領域を設定します。他の添付プロセスウィンドウには影響しません。</target>
        </trans-unit>
        <trans-unit id="6db7f09bb39eedf1c38d589591b9edf0bb98249c" translate="yes" xml:space="preserve">
          <source>Setting File and Line</source>
          <target state="translated">ファイルとラインの設定</target>
        </trans-unit>
        <trans-unit id="69e78c76daadcc09ad7daf7a77b23b4c9806193d" translate="yes" xml:space="preserve">
          <source>Setting TERM Environment Variable</source>
          <target state="translated">TERM環境変数の設定</target>
        </trans-unit>
        <trans-unit id="87680df1e188aeb28980ce9ee7a1bce6e692209b" translate="yes" xml:space="preserve">
          <source>Setting TERM environment variable</source>
          <target state="translated">環境変数 TERM の設定</target>
        </trans-unit>
        <trans-unit id="56be8fa38057df49a2d4669fd1732a946514c951" translate="yes" xml:space="preserve">
          <source>Setting a driver monitor for &lt;code&gt;loading&lt;/code&gt; eventually leads to one of the following messages being sent:</source>
          <target state="translated">ドライバーモニターの &lt;code&gt;loading&lt;/code&gt; 設定すると、最終的に次のいずれかのメッセージが送信されます。</target>
        </trans-unit>
        <trans-unit id="f5930b58898b1200ca714f8da35aca07bd97aa15" translate="yes" xml:space="preserve">
          <source>Setting a timer with the same &lt;code&gt;Name&lt;/code&gt; while it is running will restart it with the new time-out value. Therefore it is possible to cancel a specific time-out by setting it to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">実行中に同じ &lt;code&gt;Name&lt;/code&gt; タイマーを設定すると、新しいタイムアウト値で再起動されます。したがって、 &lt;code&gt;infinity&lt;/code&gt; 設定することにより、特定のタイムアウトをキャンセルすることができます。</target>
        </trans-unit>
        <trans-unit id="f9dbe73b75e3132da6c0f88cd457f518463da818" translate="yes" xml:space="preserve">
          <source>Setting the capture &lt;code&gt;Type&lt;/code&gt; to &lt;code&gt;binary&lt;/code&gt; gives:</source>
          <target state="translated">キャプチャ &lt;code&gt;Type&lt;/code&gt; を &lt;code&gt;binary&lt;/code&gt; 設定すると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="bdb6a2bf7d379a0ba8bba983befb348c71f7da48" translate="yes" xml:space="preserve">
          <source>Setting the environment variable to a negative value does not reboot the runtime system until the crash dump file is completly written.</source>
          <target state="translated">環境変数を負の値に設定しても、クラッシュダンプファイルが完全に書き込まれるまでランタイムシステムは再起動しません。</target>
        </trans-unit>
        <trans-unit id="98650d1d499b81b182077d119e9cc56720e9a1cd" translate="yes" xml:space="preserve">
          <source>Setting the shutdown time to anything other than &lt;code&gt;infinity&lt;/code&gt; for a child of type &lt;code&gt;supervisor&lt;/code&gt; can cause a race condition where the child in question unlinks its own children, but fails to terminate them before it is killed.</source>
          <target state="translated">タイプ &lt;code&gt;supervisor&lt;/code&gt; 子のシャットダウン時間を &lt;code&gt;infinity&lt;/code&gt; 以外に設定すると、問題の子が自分の子のリンクを解除するが、殺される前にそれらを終了できないという競合状態が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="a02b22d3c6077ae6046c20ba84fd141c4597a662" translate="yes" xml:space="preserve">
          <source>Setting these variables wrong may cause hard to detect runtime errors. If you need to change these values, &lt;strong&gt;really&lt;/strong&gt; make sure that the values are correct.</source>
          <target state="translated">これらの変数を誤って設定すると、実行時エラーの検出が困難になる可能性があります。あなたはこれらの値を変更する必要がある場合、&lt;strong&gt;実際に&lt;/strong&gt;値が正しいことを確認してください。</target>
        </trans-unit>
        <trans-unit id="593e05cc199b5354a496052a90ad11424ea46336" translate="yes" xml:space="preserve">
          <source>Setting this flag to &lt;code&gt;false&lt;/code&gt; is not supported on all systems. The flag is then ignored.</source>
          <target state="translated">このフラグを &lt;code&gt;false&lt;/code&gt; に設定することは、すべてのシステムでサポートされているわけではありません。その後、フラグは無視されます。</target>
        </trans-unit>
        <trans-unit id="8927ca5a33183f7759ed85a781a6453e7449e504" translate="yes" xml:space="preserve">
          <source>Setting this flag to &lt;code&gt;false&lt;/code&gt; is possibly not supported on all systems. The flag is then ignored.</source>
          <target state="translated">このフラグを &lt;code&gt;false&lt;/code&gt; に設定することは、すべてのシステムでサポートされているとは限りません。その後、フラグは無視されます。</target>
        </trans-unit>
        <trans-unit id="21bad2817493376033146aa725b2c62429dfb949" translate="yes" xml:space="preserve">
          <source>Setting this option on platforms where it does not exist is ignored. Getting this option with &lt;code&gt;&lt;a href=&quot;#getopts-2&quot;&gt;getopts/2&lt;/a&gt;&lt;/code&gt; returns no value, that is, the returned list does not contain an &lt;code&gt;{ipv6_v6only,_}&lt;/code&gt; tuple. On Windows, the option does not exist, but it is emulated as a read-only option with value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">このオプションが存在しないプラットフォームでの設定は無視されます。 &lt;code&gt;&lt;a href=&quot;#getopts-2&quot;&gt;getopts/2&lt;/a&gt;&lt;/code&gt; でこのオプションを取得しても値は返されません。つまり、返されたリストには &lt;code&gt;{ipv6_v6only,_}&lt;/code&gt; タプルが含まれていません。Windowsでは、オプションは存在しませんが、値が &lt;code&gt;true&lt;/code&gt; の読み取り専用オプションとしてエミュレートされます。</target>
        </trans-unit>
        <trans-unit id="c7882ea914fd57a6b70a77be9894b15da220ad16" translate="yes" xml:space="preserve">
          <source>Setting this option to &lt;code&gt;true&lt;/code&gt; allows you to distinguish between a connection that was closed normally, and one that was aborted (intentionally or unintentionally) by the TCP peer. A call to &lt;code&gt;&lt;a href=&quot;gen_tcp#recv-2&quot;&gt;gen_tcp:recv/2&lt;/a&gt;&lt;/code&gt; returns &lt;code&gt;{error, econnreset}&lt;/code&gt;. In active mode, the controlling process receives a &lt;code&gt;{tcp_error, Socket, econnreset}&lt;/code&gt; message before the usual &lt;code&gt;{tcp_closed, Socket}&lt;/code&gt;, as is the case for any other socket error. Calls to &lt;code&gt;&lt;a href=&quot;gen_tcp#send-2&quot;&gt;gen_tcp:send/2&lt;/a&gt;&lt;/code&gt; also returns &lt;code&gt;{error, econnreset}&lt;/code&gt; when it is detected that a TCP peer has sent an RST.</source>
          <target state="translated">このオプションを &lt;code&gt;true&lt;/code&gt; に設定すると、正常に閉じられた接続と、TCPピアによって（意図的または意図せずに）中止された接続を区別できます。 &lt;code&gt;&lt;a href=&quot;gen_tcp#recv-2&quot;&gt;gen_tcp:recv/2&lt;/a&gt;&lt;/code&gt; を呼び出すと &lt;code&gt;{error, econnreset}&lt;/code&gt; が返されます。アクティブモードでは、他のソケットエラーの場合と同様に、制御プロセスは通常の &lt;code&gt;{tcp_closed, Socket}&lt;/code&gt; 前に &lt;code&gt;{tcp_error, Socket, econnreset}&lt;/code&gt; メッセージを受け取ります。TCPピアがRSTを送信したことが検出されると、 &lt;code&gt;&lt;a href=&quot;gen_tcp#send-2&quot;&gt;gen_tcp:send/2&lt;/a&gt;&lt;/code&gt; の呼び出しも &lt;code&gt;{error, econnreset}&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="637256b8a8ace5ebe12ef97908b3a787a8c7db8a" translate="yes" xml:space="preserve">
          <source>Setting this timer while it is running will restart it with the new time-out value. Therefore it is possible to cancel this time-out by setting it to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">実行中にこのタイマーを設定すると、新しいタイムアウト値で再起動されます。したがって、 &lt;code&gt;infinity&lt;/code&gt; 設定することにより、このタイムアウトをキャンセルすることができます。</target>
        </trans-unit>
        <trans-unit id="df43883f77d81a0444a883d2bd164d4cdfbf7dfe" translate="yes" xml:space="preserve">
          <source>Setting up an Erlang tracer on a set of nodes and connecting trace clients to the ports of these tracers is not intuitive. In order to make this it easier the &lt;code&gt;Event Tracer&lt;/code&gt; has a notion of global tracing. When used, the &lt;code&gt;et_collector&lt;/code&gt; process will monitor Erlang nodes and when one connects, an Erlang tracer will automatically be started on the newly connected node. A corresponding trace client will also be started on the &lt;code&gt;Collector&lt;/code&gt; node in order to automatically forward the trace &lt;code&gt;Events&lt;/code&gt; to the &lt;code&gt;Collector&lt;/code&gt;. Set the boolean parameter &lt;code&gt;trace_global&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for either the &lt;code&gt;et_collector&lt;/code&gt; or &lt;code&gt;et_viewer&lt;/code&gt; in order to activate the global tracing. There is no restriction on how many concurrent (anonymous) collectors you can have, but you can only have one &lt;strong&gt;global&lt;/strong&gt;&lt;code&gt;Collector&lt;/code&gt; as its name is registered in &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">一連のノードでErlangトレーサーを設定し、トレースクライアントをこれらのトレーサーのポートに接続することは直感的ではありません。これを簡単にするために、 &lt;code&gt;Event Tracer&lt;/code&gt; はグローバルトレースの概念があります。使用すると、 &lt;code&gt;et_collector&lt;/code&gt; プロセスはErlangノードを監視し、1つが接続すると、新しく接続されたノードでErlangトレーサーが自動的に開始されます。トレース &lt;code&gt;Events&lt;/code&gt; を &lt;code&gt;Collector&lt;/code&gt; に自動的に転送するために、対応するトレースクライアントも &lt;code&gt;Collector&lt;/code&gt; ノードで起動されます。ブール値パラメータセット &lt;code&gt;trace_global&lt;/code&gt; に &lt;code&gt;true&lt;/code&gt; いずれかについて &lt;code&gt;et_collector&lt;/code&gt; または &lt;code&gt;et_viewer&lt;/code&gt; グローバルトレースをアクティブにするため。持つことができる同時（匿名）コレクターの数に制限はありませんが、名前は &lt;code&gt;global&lt;/code&gt; に登録されているため、&lt;strong&gt;グローバル&lt;/strong&gt; &lt;code&gt;Collector&lt;/code&gt; は1つしか持つことができません。</target>
        </trans-unit>
        <trans-unit id="92be12f51cfcae1379d05955e4edd3794a720f91" translate="yes" xml:space="preserve">
          <source>Setting up connections, sending and receiving data.</source>
          <target state="translated">接続の設定、データの送受信</target>
        </trans-unit>
        <trans-unit id="d9bcae303564e4f2b0a81dbc82c1c2a6226bacd0" translate="yes" xml:space="preserve">
          <source>Setting up the trace:</source>
          <target state="translated">トレースの設定。</target>
        </trans-unit>
        <trans-unit id="a51e3da2458bdd26e8b067eb0fdeaf14a14ae006" translate="yes" xml:space="preserve">
          <source>Setup Telnet connection to a Unix host.</source>
          <target state="translated">UnixホストへのTelnet接続を設定します。</target>
        </trans-unit>
        <trans-unit id="663702dff631642a2cf35f5021ac8225355092ec" translate="yes" xml:space="preserve">
          <source>Setup a connection to an LDAP server, the &lt;code&gt;HOST&lt;/code&gt;'s are tried in order.</source>
          <target state="translated">LDAPサーバーへの接続をセットアップします &lt;code&gt;HOST&lt;/code&gt; が順番に試行されます。</target>
        </trans-unit>
        <trans-unit id="d9bdeaa169ac79e6d85855e41f472a17ba2a4109" translate="yes" xml:space="preserve">
          <source>Setup a connection to the MGC with megaco:connect/4 and provide it with a receive handle obtained from megaco:user_info/2.</source>
          <target state="translated">megaco:connect/4でMGCへの接続を設定し、megaco:user_info/2で取得した受信ハンドルを提供します。</target>
        </trans-unit>
        <trans-unit id="e25bcc4326bd2dce597a662adc2220a4d7e18163" translate="yes" xml:space="preserve">
          <source>Setup the environment with:</source>
          <target state="translated">で環境を整える。</target>
        </trans-unit>
        <trans-unit id="9f49948dfbe508cb0e9b5a2e0b068b2ceac48204" translate="yes" xml:space="preserve">
          <source>Several binary terms can be managed by the same resource object. The destructor is not called until the last binary is garbage collected. This can be useful to return different parts of a larger binary buffer.</source>
          <target state="translated">複数のバイナリ項を同じリソースオブジェクトで管理することができます。デストラクタは、最後のバイナリがガベージコレクションされるまで呼び出されません。これは、より大きなバイナリバッファの異なる部分を返すのに便利です。</target>
        </trans-unit>
        <trans-unit id="f203ffdc28fd3a5e01f37c57a0b2ffb21a1404a5" translate="yes" xml:space="preserve">
          <source>Several configuration options for authentication handling are available in &lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/[3,4]&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;ssh#daemon-2&quot;&gt;ssh:daemon/[2,3]&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;ssh#connect-3&quot;&gt;ssh:connect/[3,4]&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;ssh#daemon-2&quot;&gt;ssh:daemon/[2,3]&lt;/a&gt;&lt;/code&gt; では、認証処理のいくつかの構成オプションを使用できます。</target>
        </trans-unit>
        <trans-unit id="17a1068b0ec5899384907dd32033d6b291c50746" translate="yes" xml:space="preserve">
          <source>Several entities (&lt;code&gt;mib-server&lt;/code&gt; via the its data module and the &lt;code&gt;symbolic-store&lt;/code&gt;) of the snmp agent uses this for storage of miscelaneous mib related data dataretrieved while loading a mib.</source>
          <target state="translated">snmpエージェントのいくつかのエンティ &lt;code&gt;mib-server&lt;/code&gt; （そのデータ・モジュールを介したmib-serverと &lt;code&gt;symbolic-store&lt;/code&gt; ）は、これを使用して、mibのロード中に取得されたその他のmib関連データ・データを保管します。</target>
        </trans-unit>
        <trans-unit id="b3dac911d4d97804fc7ab2a4ca1605a501a5814a" translate="yes" xml:space="preserve">
          <source>Several instructions can share a group. As an example, the following instructions have different names, but in the end they all create a binary. The last two operands are common for all of them:</source>
          <target state="translated">複数の命令がグループを共有することができます。例として、以下の命令は異なる名前を持っていますが、最終的にはすべてバイナリを作成します。最後の2つのオペランドはすべて共通です。</target>
        </trans-unit>
        <trans-unit id="47dc841907020a6c99a3862103e41b6f954068f8" translate="yes" xml:space="preserve">
          <source>Several module attributes have predefined meanings. Some of them have arity two, but user-defined module attributes must have arity one.</source>
          <target state="translated">いくつかのモジュール属性は事前に定義された意味を持っています。それらの中にはアリティ2を持つものもありますが、ユーザー定義のモジュール属性はアリティ1を持たなければなりません。</target>
        </trans-unit>
        <trans-unit id="64b1f44e8ea5da422fccfc427560cce56bf4ec0b" translate="yes" xml:space="preserve">
          <source>Several of the procedures in this section require expert knowledge of the Solaris operating system. For most of them super user privilege is needed.</source>
          <target state="translated">このセクションのいくつかの手順では、Solaris オペレーティングシステムの専門的な知識が必要です。ほとんどの場合、スーパーユーザ権限が必要です。</target>
        </trans-unit>
        <trans-unit id="c4878bcf5e2a41e786bb27ba681ceac3573bfe05" translate="yes" xml:space="preserve">
          <source>Several things are wrong with the messenger example in &lt;code&gt;&lt;a href=&quot;conc_prog#ex&quot;&gt;A Larger Example&lt;/a&gt;&lt;/code&gt;. For example, if a node where a user is logged on goes down without doing a logoff, the user remains in the server's &lt;code&gt;User_List&lt;/code&gt;, but the client disappears. This makes it impossible for the user to log on again as the server thinks the user already is logged on.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;conc_prog#ex&quot;&gt;A Larger Example&lt;/a&gt;&lt;/code&gt; のメッセンジャーの例にはいくつかの問題があります。たとえば、ユーザーがログオンしているノードがログオフせずに停止した場合、ユーザーはサーバーの &lt;code&gt;User_List&lt;/code&gt; に残りますが、クライアントは表示されなくなります。これにより、サーバーはユーザーが既にログオンしていると認識しているため、ユーザーが再度ログオンすることはできません。</target>
        </trans-unit>
        <trans-unit id="0d5312822a3678145f8534f5413245ef38ad1e54" translate="yes" xml:space="preserve">
          <source>Several transactions can run concurrently, and their execution is fully synchronized by the DBMS. Mnesia ensures that no two processes manipulate data simultaneously.</source>
          <target state="translated">複数のトランザクションを同時に実行することができ、その実行はDBMSによって完全に同期されています。Mnesiaは、2つのプロセスが同時にデータを操作しないことを保証します。</target>
        </trans-unit>
        <trans-unit id="92056ce55485ad43691924b2fa50c145b64665a0" translate="yes" xml:space="preserve">
          <source>Several users have created Erlang port drivers, linked-in drivers, or NIFs that allow Erlang code to try to activate a probe, e.g. &lt;code&gt;foo_module:dtrace_probe(&quot;message goes here!&quot;)&lt;/code&gt;.</source>
          <target state="translated">いくつかのユーザーが、Erlangポートドライバー、リンクされたドライバー、またはNIFを作成しました。これにより、Erlangコードがプローブをアクティブにしようとすることができ &lt;code&gt;foo_module:dtrace_probe(&quot;message goes here!&quot;)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="953228d3c8c820114f1fb9c582c86cdc57738b22" translate="yes" xml:space="preserve">
          <source>Shall ack's be accumulated or not.</source>
          <target state="translated">アックが溜まるか溜まらないか。</target>
        </trans-unit>
        <trans-unit id="9dd9163cd11e283c13779c403a7f468f2fe1f10f" translate="yes" xml:space="preserve">
          <source>Shall outgoing messages be segmented or not:</source>
          <target state="translated">送信メッセージを分割するかどうか。</target>
        </trans-unit>
        <trans-unit id="84da0d111d1591fb8d93639edcffa7d1e68ef6c3" translate="yes" xml:space="preserve">
          <source>Shall requests be accumulated or not.</source>
          <target state="translated">リクエストが溜まるか溜まらないか。</target>
        </trans-unit>
        <trans-unit id="c1d41fa6accb18af237aee7055043bfe6e9ffefd" translate="yes" xml:space="preserve">
          <source>Shall the agent utilize the mib server lookup cache or not.</source>
          <target state="translated">エージェントはmibサーバのルックアップキャッシュを利用するかどうか。</target>
        </trans-unit>
        <trans-unit id="79f0dcea94ed19607e21c8e24deeecee8068e306" translate="yes" xml:space="preserve">
          <source>Shall the provided descriptor be duplicated (dup) or not.</source>
          <target state="translated">提供されたディスクリプタを複製(dup)するかどうか。</target>
        </trans-unit>
        <trans-unit id="1999b28ce10eeddd9229bdd4cdb29f0107536815" translate="yes" xml:space="preserve">
          <source>Sharada</source>
          <target state="translated">Sharada</target>
        </trans-unit>
        <trans-unit id="4798770317cbbba3bd3456b905b876a908476919" translate="yes" xml:space="preserve">
          <source>Shared subterms are &lt;strong&gt;not&lt;/strong&gt; preserved in the following cases:</source>
          <target state="translated">次の場合、共有サブタームは保持され&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="39563286dc1b257ea37b2acac903e4d5484b60f1" translate="yes" xml:space="preserve">
          <source>SharedSecret</source>
          <target state="translated">SharedSecret</target>
        </trans-unit>
        <trans-unit id="61106366759b055e0ad334722705582952604753" translate="yes" xml:space="preserve">
          <source>Shavian</source>
          <target state="translated">Shavian</target>
        </trans-unit>
        <trans-unit id="bdc1fd5d3c0f3dcfd55d010426e61bf9451e680d" translate="yes" xml:space="preserve">
          <source>Shell</source>
          <target state="translated">Shell</target>
        </trans-unit>
        <trans-unit id="92d91c0e9c2e10b3624ca467a6cfec024511dd3e" translate="yes" xml:space="preserve">
          <source>Shell Commands</source>
          <target state="translated">シェルコマンド</target>
        </trans-unit>
        <trans-unit id="ef9616c857753c597c39d03dcea5d1d91ea29e1e" translate="yes" xml:space="preserve">
          <source>Shell break mode, which allows the user to kill the current shell, start multiple shells, and so on.</source>
          <target state="translated">現在のシェルを強制終了させたり、複数のシェルを起動させたりするシェルブレークモード。</target>
        </trans-unit>
        <trans-unit id="9a06f06d11a4ab61872b5cff61fb65cd691ff9c5" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;&lt;a href=&quot;#mac-4&quot;&gt;mac(Type, undefined, Key, Data)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#mac-4&quot;&gt;mac(Type, undefined, Key, Data)&lt;/a&gt;&lt;/code&gt; 略。</target>
        </trans-unit>
        <trans-unit id="9f4f36bde2b16d3555b48b8dcb1ef5f5eb7136df" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;&lt;a href=&quot;#macN-5&quot;&gt;macN(Type, undefined, Key, Data, MacLength)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以下のためのショート &lt;code&gt;&lt;a href=&quot;#macN-5&quot;&gt;macN(Type, undefined, Key, Data, MacLength)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="11a67e5487f6594da4d2d31b9f31bb33ca600fb7" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;&lt;a href=&quot;#mac_init-3&quot;&gt;mac_init(Type, undefined, Key)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以下のためのショート &lt;code&gt;&lt;a href=&quot;#mac_init-3&quot;&gt;mac_init(Type, undefined, Key)&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fa1a01079b5835555814261f1212f480e1691e25" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;[return_comments, return_white_spaces]&lt;/code&gt;.</source>
          <target state="translated">略して &lt;code&gt;[return_comments, return_white_spaces]&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76db78875af6459d9f0696e37664eeca77bff7e0" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;{sync_transaction, infinity}&lt;/code&gt;</source>
          <target state="translated">ショート &lt;code&gt;{sync_transaction, infinity}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40b4a47803a3f7d2d655392829dc3c728c04b670" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;{timeout,Time,Time}&lt;/code&gt;, that is, the time-out message is the time-out time. This form exists to make the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; return value &lt;code&gt;{next_state,NextState,NewData,Time}&lt;/code&gt; allowed like for &lt;code&gt;gen_fsm&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{timeout,Time,Time}&lt;/code&gt; 略です。つまり、タイムアウトメッセージはタイムアウト時間です。このフォームは &lt;code&gt;{next_state,NextState,NewData,Time}&lt;/code&gt; ように &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;&lt;strong&gt;state callback&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; 戻り値{next_state、NextState、NewData、Time}を許可するために &lt;code&gt;gen_fsm&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="31adfe9300bdea8479ecdebe4d15167c20d2a058" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;{timeout,Time,Time}&lt;/code&gt;, that is, the time-out message is the time-out time. This form exists to make the &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; return value &lt;code&gt;{next_state,NextState,NewData,Time}&lt;/code&gt; allowed like for &lt;code&gt;gen_fsm&lt;/code&gt;.</source>
          <target state="translated">ショート &lt;code&gt;{timeout,Time,Time}&lt;/code&gt; 、であり、タイムアウトメッセージは、タイムアウト時間です。このフォームは &lt;code&gt;{next_state,NextState,NewData,Time}&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;#state%20callback&quot;&gt;state callback&lt;/a&gt;&lt;/code&gt; 戻り値{next_state、NextState、NewData、Time}を許可するために &lt;code&gt;gen_fsm&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="9f5066037d01a80777a796bb823f34a8a4627bc4" translate="yes" xml:space="preserve">
          <source>Short for &lt;code&gt;{transaction, infinity}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{transaction, infinity}&lt;/code&gt; 短縮形</target>
        </trans-unit>
        <trans-unit id="7a5cc636f6e706f346639f25e6caf9640ec221fa" translate="yes" xml:space="preserve">
          <source>Short for iterate(Handle, Prev, Limit, undefined, Prev) -&amp;gt; NewAcc</source>
          <target state="translated">イテレートの短縮形（ハンドル、前、制限、未定義、前）-&amp;gt; NewAcc</target>
        </trans-unit>
        <trans-unit id="0eddb382ca301cea608270411284f3b7a5baecb7" translate="yes" xml:space="preserve">
          <source>Short-circuit expressions (&lt;code&gt;andalso&lt;/code&gt;/&lt;code&gt;orelse&lt;/code&gt;)</source>
          <target state="translated">短絡式（ &lt;code&gt;andalso&lt;/code&gt; / &lt;code&gt;orelse&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e4d03a5e2757528aa47d1292f70f2e09181472bf" translate="yes" xml:space="preserve">
          <source>Shortcut for &lt;code&gt;{shell, true}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{shell, true}&lt;/code&gt; ショートカット。</target>
        </trans-unit>
        <trans-unit id="4430a48833772a9118c84cdf670050ab3520f691" translate="yes" xml:space="preserve">
          <source>Shortcuts are provided for the most common match specifications (to not force you to use &lt;code&gt;dbg:fun2ms&lt;/code&gt; continually).</source>
          <target state="translated">最も一般的な一致指定にショートカットが用意されています（ &lt;code&gt;dbg:fun2ms&lt;/code&gt; を継続的に使用するように強制しないため）。</target>
        </trans-unit>
        <trans-unit id="5a834720e0a7fbb62e1fa52d859544b13c9feac3" translate="yes" xml:space="preserve">
          <source>Shorthand for &lt;code&gt;&lt;a href=&quot;#allocations-1&quot;&gt;allocations(#{}).&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#allocations-1&quot;&gt;allocations(#{}).&lt;/a&gt;&lt;/code&gt; 省略形（＃{}）。</target>
        </trans-unit>
        <trans-unit id="75477da2f51c368c966e096bed63b71628d41fa6" translate="yes" xml:space="preserve">
          <source>Shorthand for &lt;code&gt;&lt;a href=&quot;#carriers-1&quot;&gt;carriers(#{}).&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#carriers-1&quot;&gt;carriers(#{}).&lt;/a&gt;&lt;/code&gt; 省略形（＃{}）。</target>
        </trans-unit>
        <trans-unit id="8ecedead60dacea1d8e283b2d1d72c8978ac59af" translate="yes" xml:space="preserve">
          <source>Should dynamic tracing be enabled in the current build, either by configuring with &lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt; or with &lt;code&gt;./configure --with-dynamic-trace=systemtap&lt;/code&gt;, the module can be used for two things:</source>
          <target state="translated">&lt;code&gt;./configure --with-dynamic-trace=dtrace&lt;/code&gt; または &lt;code&gt;./configure --with-dynamic-trace=systemtap&lt;/code&gt; を使用して構成することにより、現在のビルドで動的トレースを有効にする場合、モジュールは次の2つの目的で使用できます。</target>
        </trans-unit>
        <trans-unit id="c0437abf42c4b352aef94f3921643a39aab05c60" translate="yes" xml:space="preserve">
          <source>Should indicate a row number in the result set. When used together with the option &lt;code&gt;relative&lt;/code&gt;it will be used as an offset from the current cursor position, when used together with the option &lt;code&gt;absolute&lt;/code&gt;it will be interpreted as a row number.</source>
          <target state="translated">結果セットの行番号を示す必要があります。オプション &lt;code&gt;relative&lt;/code&gt; と一緒に使用すると、現在のカーソル位置からのオフセットとして使用され、オプション &lt;code&gt;absolute&lt;/code&gt; と一緒に使用すると、行番号として解釈されます。</target>
        </trans-unit>
        <trans-unit id="87bbe6664ba23178fc2f08be7a16df28de849d32" translate="yes" xml:space="preserve">
          <source>Should this state enter call return any of the mentioned &lt;code&gt;repeat_*&lt;/code&gt; callback results it is repeated again, with the updated &lt;code&gt;Data&lt;/code&gt;.</source>
          <target state="translated">この状態がcallに入ると、前述の &lt;code&gt;repeat_*&lt;/code&gt; コールバックの結果のいずれかが返され、更新された &lt;code&gt;Data&lt;/code&gt; で再び繰り返されます。</target>
        </trans-unit>
        <trans-unit id="5ed71c0673531ef050259f62c8bc181620c1ee73" translate="yes" xml:space="preserve">
          <source>Show Reports</source>
          <target state="translated">レポートを表示</target>
        </trans-unit>
        <trans-unit id="8bb1c009b2a3939af7acb19eae44ed0b4006d58f" translate="yes" xml:space="preserve">
          <source>Shows statistics about how many processes and ports of different priorities are scheduled on this scheduler.</source>
          <target state="translated">このスケジューラで、異なる優先度のプロセスとポートが何個スケジュールされているかの統計情報を表示します。</target>
        </trans-unit>
        <trans-unit id="cca56f8737e5ba39e8bb4fa3267f178eeefba8dd" translate="yes" xml:space="preserve">
          <source>Shows the Debugger documentation. This function requires a web browser.</source>
          <target state="translated">デバッガのドキュメントを表示します。この機能を利用するにはWebブラウザが必要です。</target>
        </trans-unit>
        <trans-unit id="e9a0366eca6c33c68a7ae8650693a9b72c0ed968" translate="yes" xml:space="preserve">
          <source>Shows the list of traced nodes on the console.</source>
          <target state="translated">コンソールにトレースされたノードのリストを表示します。</target>
        </trans-unit>
        <trans-unit id="af7317b061e054bbf75a81c9cf23a533ab246505" translate="yes" xml:space="preserve">
          <source>Shows the process current stack trace.</source>
          <target state="translated">プロセスの現在のスタックトレースを表示します。</target>
        </trans-unit>
        <trans-unit id="afd62206b65136a95184a6d1bc0e6d27d271ad8a" translate="yes" xml:space="preserve">
          <source>Shows the process dictionary.</source>
          <target state="translated">プロセス辞書を表示します。</target>
        </trans-unit>
        <trans-unit id="7e1e5e65f35d2ced1865bbb58bc31b796acd9dc9" translate="yes" xml:space="preserve">
          <source>Shows the process information.</source>
          <target state="translated">プロセス情報を表示します。</target>
        </trans-unit>
        <trans-unit id="25ea81fb58517940197f2aafaef0ab992149d1f7" translate="yes" xml:space="preserve">
          <source>Shows the process messages.</source>
          <target state="translated">プロセスメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="c539f252c25e14ac8c38ae7080c889438210e1db" translate="yes" xml:space="preserve">
          <source>Shows the process state.</source>
          <target state="translated">プロセスの状態を表示します。</target>
        </trans-unit>
        <trans-unit id="f8f25cbfb5c9eb839d810e956131b96efa598923" translate="yes" xml:space="preserve">
          <source>Shut down all or part of a full-duplex connection.</source>
          <target state="translated">全二重接続の全部または一部をシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="00e04a038b0f4a60ba35ed85bd576feefa37527a" translate="yes" xml:space="preserve">
          <source>Shut down the application.</source>
          <target state="translated">アプリケーションをシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="5929b8178813a482c23e31d212e2b87ab625aacb" translate="yes" xml:space="preserve">
          <source>Shut down the connection.</source>
          <target state="translated">接続をシャットダウンします。</target>
        </trans-unit>
        <trans-unit id="771605b7e2faa19b853b2b22a601d4632a4de900" translate="yes" xml:space="preserve">
          <source>Shutdown messages. If the process traps exits, it must be able to handle a shutdown request from its parent, the supervisor. The message &lt;code&gt;{'EXIT', Parent, Reason}&lt;/code&gt; from the parent is an order to terminate. The process must terminate when this message is received, normally with the same &lt;code&gt;Reason&lt;/code&gt; as &lt;code&gt;Parent&lt;/code&gt;.</source>
          <target state="translated">シャットダウンメッセージ。プロセスが終了する場合、プロセスはその親であるスーパーバイザからのシャットダウン要求を処理できる必要があります。親からのメッセージ &lt;code&gt;{'EXIT', Parent, Reason}&lt;/code&gt; は終了するための命令です。このメッセージは、通常同じで、受信された場合、プロセスは終了しなければならない &lt;code&gt;Reason&lt;/code&gt; として &lt;code&gt;Parent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5dd17f62764d26edd13c5721eca15f106d89d872" translate="yes" xml:space="preserve">
          <source>Shutdown the connection after sending an unbindRequest to the server. If the connection is tls the connection will be closed with &lt;code&gt;ssl:close/1&lt;/code&gt;, otherwise with &lt;code&gt;gen_tcp:close/1&lt;/code&gt;.</source>
          <target state="translated">unbindRequestをサーバーに送信した後、接続をシャットダウンします。接続がtlsの場合、接続は &lt;code&gt;ssl:close/1&lt;/code&gt; で閉じられ、そうでない場合は &lt;code&gt;gen_tcp:close/1&lt;/code&gt; で閉じられます。</target>
        </trans-unit>
        <trans-unit id="e6bbb0a6e5cac678bc175ea6d85ec4b15910fc2a" translate="yes" xml:space="preserve">
          <source>Siddham</source>
          <target state="translated">Siddham</target>
        </trans-unit>
        <trans-unit id="4e73f25226c38f85c03e2bae0b5a152e6391c8fd" translate="yes" xml:space="preserve">
          <source>Sign with an engine stored private key</source>
          <target state="translated">エンジンに保存された秘密鍵で署名する</target>
        </trans-unit>
        <trans-unit id="630e9ed4e7c2f5356a2ef604fc80241d1a4a399b" translate="yes" xml:space="preserve">
          <source>Signal latency. Due to the previous synchronous implementation, latency of signals sent from processes to ports have usually been very low. During contention the latency has of course increased. Users expect latency of these signals to be low, a sudden increase in latency would not be appreciated by our users.</source>
          <target state="translated">信号のレイテンシ。以前の同期実装により、プロセスからポートに送信される信号の待ち時間は通常非常に短くなっています。競合時にはもちろんレイテンシは増加しています。ユーザーはこれらの信号のレイテンシが低いことを期待していますが、急激なレイテンシの増加はユーザーには好まれません。</target>
        </trans-unit>
        <trans-unit id="335ada0fd1e8e66a25c60aa34ea9bc4094159c99" translate="yes" xml:space="preserve">
          <source>Signal ordering guarantee. Signals from process &lt;code&gt;X&lt;/code&gt; to port &lt;code&gt;Y&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; be delivered to &lt;code&gt;Y&lt;/code&gt; in the same order as sent from &lt;code&gt;X&lt;/code&gt;.</source>
          <target state="translated">信号の注文保証。プロセスからの信号 &lt;code&gt;X&lt;/code&gt; ポート &lt;code&gt;Y&lt;/code&gt; は、&lt;strong&gt;しなければならない&lt;/strong&gt;に配信さ &lt;code&gt;Y&lt;/code&gt; から送信されたと同じ順序で &lt;code&gt;X&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="be1fe36a30a5da7f54ce4747832ce5c1e754df3f" translate="yes" xml:space="preserve">
          <source>Signals (RFC 4254, section 6.9)</source>
          <target state="translated">シグナル (RFC 4254、セクション 6.9)</target>
        </trans-unit>
        <trans-unit id="605784b6a41da8c216384af17fedaf4ea7949e51" translate="yes" xml:space="preserve">
          <source>Signals on a condition variable. That is, if other threads are waiting on the condition variable being signaled, &lt;strong&gt;one&lt;/strong&gt; of them is woken.</source>
          <target state="translated">条件変数のシグナル。つまり、通知されている条件変数で他のスレッドが待機している場合、そのうちの&lt;strong&gt;1つ&lt;/strong&gt;が起こされます。</target>
        </trans-unit>
        <trans-unit id="a42db5fa15b2aaf10f4ab3ca3339ac18a184f963" translate="yes" xml:space="preserve">
          <source>Signals that no more options will follow. The rest of the arguments is treated as filenames, even if they start with hyphens.</source>
          <target state="translated">これ以上のオプションが続かないことを示します。引数の残りの部分は、ハイフンで始まっていてもファイル名として扱われます。</target>
        </trans-unit>
        <trans-unit id="9e81626d91d87689423a127ef78b79b6280ae1d9" translate="yes" xml:space="preserve">
          <source>Signals to Erlang that the driver has encountered an EOF and is to be closed, unless the port was opened with option &lt;code&gt;eof&lt;/code&gt;, in which case &lt;code&gt;eof&lt;/code&gt; is sent to the port. Otherwise the port is closed and an &lt;code&gt;'EXIT'&lt;/code&gt; message is sent to the port owner process.</source>
          <target state="translated">ドライバーがEOFに遭遇し、ポートがオプション &lt;code&gt;eof&lt;/code&gt; で開かれていない限り閉じられることをErlangに通知します。この場合、 &lt;code&gt;eof&lt;/code&gt; はポートに送信されます。それ以外の場合、ポートは閉じられ、 &lt;code&gt;'EXIT'&lt;/code&gt; メッセージがポート所有者プロセスに送信されます。</target>
        </trans-unit>
        <trans-unit id="16b32371d9d1262296723dfb57c3bb8cc193e0d3" translate="yes" xml:space="preserve">
          <source>Signals to Erlang that the driver has encountered an error and is to be closed. The port is closed and the tuple &lt;code&gt;{'EXIT', error, Err}&lt;/code&gt; is sent to the port owner process, where error is an error atom (&lt;code&gt;driver_failure_atom&lt;/code&gt; and &lt;code&gt;driver_failure_posix&lt;/code&gt;) or an integer (&lt;code&gt;driver_failure&lt;/code&gt;).</source>
          <target state="translated">ドライバーにエラーが発生したため、ドライバーを終了することをErlangに通知します。ポートが閉じられ、タプル &lt;code&gt;{'EXIT', error, Err}&lt;/code&gt; がポート所有者プロセスに送信されます。エラーはエラーアトム（ &lt;code&gt;driver_failure_atom&lt;/code&gt; および &lt;code&gt;driver_failure_posix&lt;/code&gt; ）または整数（ &lt;code&gt;driver_failure&lt;/code&gt; ）です。</target>
        </trans-unit>
        <trans-unit id="2ed050bcc714436bf2f469d55f05f070015bc07b" translate="yes" xml:space="preserve">
          <source>Signature Algorithms</source>
          <target state="translated">署名アルゴリズム</target>
        </trans-unit>
        <trans-unit id="fa68abbcd0be412d32a08716226355d755903c22" translate="yes" xml:space="preserve">
          <source>Signature Algorithms Certificate</source>
          <target state="translated">署名アルゴリズム 証明書</target>
        </trans-unit>
        <trans-unit id="965b9da4fc5ee59e5eab3aea8692dc8773dce529" translate="yes" xml:space="preserve">
          <source>Signature Algorithms: All algorithms form RFC 8446</source>
          <target state="translated">署名アルゴリズム。すべてのアルゴリズムはRFC 8446に準拠しています。</target>
        </trans-unit>
        <trans-unit id="d8393a49bd477502a464f4e8c274610689e23884" translate="yes" xml:space="preserve">
          <source>Signature OID from a certificate or a certificate revocation list.</source>
          <target state="translated">証明書または証明書失効リストからの署名 OID。</target>
        </trans-unit>
        <trans-unit id="e4192711e69a169ef257a8ed11ef7b729ebe7f27" translate="yes" xml:space="preserve">
          <source>Signed 32-bit integer in big-endian format.</source>
          <target state="translated">ビッグエンディアン形式の符号付き32ビット整数。</target>
        </trans-unit>
        <trans-unit id="e8f027fb105359b9adbe2c5e3e92eecc0d931640" translate="yes" xml:space="preserve">
          <source>Significant slowdown</source>
          <target state="translated">大幅な減速</target>
        </trans-unit>
        <trans-unit id="d1ce612bbd2647327e208416917e5465c1f2cf95" translate="yes" xml:space="preserve">
          <source>Signifies that one or more arguments are of wrong data type or are otherwise badly formed.</source>
          <target state="translated">1つまたは複数の引数が間違ったデータ型であるか、またはそれ以外の形であることを示します。</target>
        </trans-unit>
        <trans-unit id="d22f04603be83e708f1977fc5e2ef8d2a468e176" translate="yes" xml:space="preserve">
          <source>Signifies that the algorithm is known but is not supported by current underlying libcrypto or explicitly disabled when building that one.</source>
          <target state="translated">アルゴリズムは既知だが、現在の libcrypto の基礎となっているものではサポートされていないか、そのアルゴリズムを構築する際に明示的に無効にされていることを示します。</target>
        </trans-unit>
        <trans-unit id="aaf29fdf7d3efb52ff1d067430cfd6fabe62a793" translate="yes" xml:space="preserve">
          <source>Signs an 'OTPTBSCertificate'. Returns the corresponding DER-encoded certificate.</source>
          <target state="translated">OTPTBSCertificate' に署名します。対応するDERエンコードされた証明書を返します。</target>
        </trans-unit>
        <trans-unit id="412a0c1f6813d40930f20e83a07080e463a488ae" translate="yes" xml:space="preserve">
          <source>Silent mode is inhibited by executing &lt;code&gt;erlang:trace(_, false, [silent|_])&lt;/code&gt;, or by a match specification executing the function &lt;code&gt;{silent, false}&lt;/code&gt;.</source>
          <target state="translated">サイレントモードは、 &lt;code&gt;erlang:trace(_, false, [silent|_])&lt;/code&gt; 実行するか、関数 &lt;code&gt;{silent, false}&lt;/code&gt; 実行する一致指定によって禁止されます。</target>
        </trans-unit>
        <trans-unit id="cc5b38bafdb2cd68736d6e58f39158c6684c316b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+IOp&quot;&gt;+IOp&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of IO pollsets to create, based on the number of poll threads configured. If both &lt;code&gt;+IOPp&lt;/code&gt; and &lt;code&gt;+IOp&lt;/code&gt; are used, &lt;code&gt;+IOPp&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#+IOp&quot;&gt;+IOp&lt;/a&gt;&lt;/code&gt; に似ていますが、構成されたポーリングスレッドの数に基づいて、パーセンテージを使用して、作成するIOポーリングセットの数を設定します。両方の場合は &lt;code&gt;+IOPp&lt;/code&gt; と &lt;code&gt;+IOp&lt;/code&gt; 使用されている、 &lt;code&gt;+IOPp&lt;/code&gt; 無視されます。</target>
        </trans-unit>
        <trans-unit id="beaae04fe80dac03472574f6a33a1acd3da285ba" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+IOt&quot;&gt;+IOt&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of IO poll threads to create, based on the number of schedulers configured. If both &lt;code&gt;+IOPt&lt;/code&gt; and &lt;code&gt;+IOt&lt;/code&gt; are used, &lt;code&gt;+IOPt&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#+IOt&quot;&gt;+IOt&lt;/a&gt;&lt;/code&gt; に似ていますが、構成されたスケジューラーの数に基づいて、パーセンテージを使用して、作成するIOポーリングスレッドの数を設定します。両方の場合は &lt;code&gt;+IOPt&lt;/code&gt; と &lt;code&gt;+IOt&lt;/code&gt; 使用されている、 &lt;code&gt;+IOPt&lt;/code&gt; 無視されます。</target>
        </trans-unit>
        <trans-unit id="d29c3a8cb7c8651dc67ba8c291c251740a7f678c" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of scheduler threads to create, based on logical processors configured, and scheduler threads to set online, based on logical processors available. Specified values must be &amp;gt; 0. For example, &lt;code&gt;+SP 50:25&lt;/code&gt; sets the number of scheduler threads to 50% of the logical processors configured, and the number of scheduler threads online to 25% of the logical processors available. &lt;code&gt;SchedulersPercentage&lt;/code&gt; can be omitted if &lt;code&gt;:SchedulersOnlinePercentage&lt;/code&gt; is not and conversely. The number of schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt; erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; に似ていますが、パーセンテージを使用して、構成された論理プロセッサーに基づいて作成するスケジューラースレッドの数を設定し、使用可能な論理プロセッサーに基づいてオンラインで設定するスケジューラースレッドの数を設定します。指定する値は&amp;gt; 0である必要があります。たとえば、 &lt;code&gt;+SP 50:25&lt;/code&gt; は、スケジューラースレッドの数を構成された論理プロセッサーの50％に設定し、オンラインのスケジューラースレッドの数を使用可能な論理プロセッサーの25％に設定します。 &lt;code&gt;SchedulersPercentage&lt;/code&gt; があれば、省略することができます &lt;code&gt;:SchedulersOnlinePercentage&lt;/code&gt; ないと逆です。オンラインのスケジューラーの数は、 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt; erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; 介して実行時に変更できます。</target>
        </trans-unit>
        <trans-unit id="3ed1027dcf2ea46a9a4998d498242256f205af11" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of scheduler threads to create, based on logical processors configured, and scheduler threads to set online, based on logical processors available. Specified values must be &amp;gt; 0. For example, &lt;code&gt;+SP 50:25&lt;/code&gt; sets the number of scheduler threads to 50% of the logical processors configured, and the number of scheduler threads online to 25% of the logical processors available. &lt;code&gt;SchedulersPercentage&lt;/code&gt; can be omitted if &lt;code&gt;:SchedulersOnlinePercentage&lt;/code&gt; is not and conversely. The number of schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#+S&quot;&gt;+S&lt;/a&gt;&lt;/code&gt; に似ていますが、パーセンテージを使用して、構成された論理プロセッサに基づいて作成するスケジューラスレッドの数を設定し、使用可能な論理プロセッサに基づいてオンラインに設定するスケジューラスレッドを設定します。指定する値は0 &lt;code&gt;+SP 50:25&lt;/code&gt; 必要があります。たとえば、+ SP 50:25は、スケジューラスレッドの数を構成済みの論理プロセッサの50％に設定し、オンラインのスケジューラスレッドの数を使用可能な論理プロセッサの25％に設定します。 &lt;code&gt;SchedulersPercentage&lt;/code&gt; があれば、省略することができます &lt;code&gt;:SchedulersOnlinePercentage&lt;/code&gt; ないと逆です。オンラインのスケジューラーの数は、 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_schedulers_online&quot;&gt;erlang:system_flag(schedulers_online, SchedulersOnline)&lt;/a&gt;&lt;/code&gt; して実行時に変更できます。</target>
        </trans-unit>
        <trans-unit id="f56e9c3012c66b6db422ac0c6b22122dc0ba1e4a" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+SDcpu&quot;&gt;+SDcpu&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of dirty CPU scheduler threads to create and the number of dirty CPU scheduler threads to set online. Specified values must be &amp;gt; 0. For example, &lt;code&gt;+SDPcpu 50:25&lt;/code&gt; sets the number of dirty CPU scheduler threads to 50% of the logical processors configured and the number of dirty CPU scheduler threads online to 25% of the logical processors available. &lt;code&gt;DirtyCPUSchedulersPercentage&lt;/code&gt; can be omitted if &lt;code&gt;:DirtyCPUSchedulersOnlinePercentage&lt;/code&gt; is not and conversely. The number of dirty CPU schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt; erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#+SDcpu&quot;&gt;+SDcpu&lt;/a&gt;&lt;/code&gt; に似ていますが、パーセンテージを使用して、作成するダーティCPUスケジューラスレッドの数とオンラインに設定するダーティCPUスケジューラスレッドの数を設定します。指定する値は0 &lt;code&gt;+SDPcpu 50:25&lt;/code&gt; 必要があります。たとえば、+ SDPcpu 50:25は、ダーティCPUスケジューラースレッドの数を構成済み論理プロセッサーの50％に設定し、オンラインのダーティCPUスケジューラースレッドの数を使用可能な論理プロセッサーの25％に設定します。 &lt;code&gt;DirtyCPUSchedulersPercentage&lt;/code&gt; が &lt;code&gt;:DirtyCPUSchedulersOnlinePercentage&lt;/code&gt; でない場合は、DirtyCPUSchedulersPercentageを省略できます。オンラインのダーティCPUスケジューラーの数は、実行時に &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt; erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; 介して変更できます。</target>
        </trans-unit>
        <trans-unit id="a7daafcf7ad6c93a7a6f9d32a59194055af91723" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#+SDcpu&quot;&gt;+SDcpu&lt;/a&gt;&lt;/code&gt; but uses percentages to set the number of dirty CPU scheduler threads to create and the number of dirty CPU scheduler threads to set online. Specified values must be &amp;gt; 0. For example, &lt;code&gt;+SDPcpu 50:25&lt;/code&gt; sets the number of dirty CPU scheduler threads to 50% of the logical processors configured and the number of dirty CPU scheduler threads online to 25% of the logical processors available. &lt;code&gt;DirtyCPUSchedulersPercentage&lt;/code&gt; can be omitted if &lt;code&gt;:DirtyCPUSchedulersOnlinePercentage&lt;/code&gt; is not and conversely. The number of dirty CPU schedulers online can be changed at runtime through &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#+SDcpu&quot;&gt;+SDcpu&lt;/a&gt;&lt;/code&gt; に似ていますが、パーセンテージを使用して、作成するダーティCPUスケジューラスレッドの数とオンラインに設定するダーティCPUスケジューラスレッドの数を設定します。指定する値は0 &lt;code&gt;+SDPcpu 50:25&lt;/code&gt; 必要があります。たとえば、+ SDPcpu 50:25は、ダーティCPUスケジューラスレッドの数を構成済みの論理プロセッサの50％に設定し、オンラインのダーティCPUスケジューラスレッドの数を使用可能な論理プロセッサの25％に設定します。 &lt;code&gt;DirtyCPUSchedulersPercentage&lt;/code&gt; があれば、省略することができます &lt;code&gt;:DirtyCPUSchedulersOnlinePercentage&lt;/code&gt; ないと逆です。オンラインのダーティーCPUスケジューラーの数は、 &lt;code&gt;&lt;a href=&quot;erlang#system_flag_dirty_cpu_schedulers_online&quot;&gt;erlang:system_flag(dirty_cpu_schedulers_online, DirtyCPUSchedulersOnline)&lt;/a&gt;&lt;/code&gt; して実行時に変更できます。</target>
        </trans-unit>
        <trans-unit id="23646d43525fa8727fd14d31f241c4e8c2382559" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#get_all_values-2&quot;&gt;get_all_values/2&lt;/a&gt;&lt;/code&gt;, but each value is wrapped in a list unless it is already itself a list. The resulting list of lists is concatenated. This is often useful for &quot;incremental&quot; options.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#get_all_values-2&quot;&gt;get_all_values/2&lt;/a&gt;&lt;/code&gt; と似ていますが、それ自体がリストでない限り、各値はリストにラップされます。結果のリストのリストは連結されます。これは多くの場合、「増分」オプションに役立ちます。</target>
        </trans-unit>
        <trans-unit id="c71338b1d526b480e927286135466622d44048af" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#get_value-2&quot;&gt;get_value/2&lt;/a&gt;&lt;/code&gt;, but returns the list of values for &lt;strong&gt;all&lt;/strong&gt; entries &lt;code&gt;{Key, Value}&lt;/code&gt; in &lt;code&gt;List&lt;/code&gt;. If no such entry exists, the result is the empty list.</source>
          <target state="translated">類似 &lt;code&gt;&lt;a href=&quot;#get_value-2&quot;&gt;get_value/2&lt;/a&gt;&lt;/code&gt; が、復帰のための値のリスト&lt;strong&gt;のすべて&lt;/strong&gt;のエントリ &lt;code&gt;{Key, Value}&lt;/code&gt; で &lt;code&gt;List&lt;/code&gt; 。そのようなエントリが存在しない場合、結果は空のリストになります。</target>
        </trans-unit>
        <trans-unit id="1e79016034236afb8e96918f496249aefb66daea" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#parse-3&quot;&gt;parse/3&lt;/a&gt;&lt;/code&gt;, but does a more quick-and-dirty processing of the code. See &lt;code&gt;&lt;a href=&quot;#quick_parse_file-2&quot;&gt;quick_parse_file/2&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#parse-3&quot;&gt;parse/3&lt;/a&gt;&lt;/code&gt; に似ていますが、コードの処理がより迅速でダーティです。詳細は &lt;code&gt;&lt;a href=&quot;#quick_parse_file-2&quot;&gt;quick_parse_file/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="591c6115ca4de4119e98f9d60e0ba5162fc97c7e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt;, but does a more quick-and-dirty processing of the code. Macro definitions and other preprocessor directives are discarded, and all macro calls are replaced with atoms. This is useful when only the main structure of the code is of interest, and not the details. Furthermore, the quick-parse method can usually handle more strange cases than the normal, more exact parsing.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#parse_file-2&quot;&gt;parse_file/2&lt;/a&gt;&lt;/code&gt; に似ていますが、コードの処理がより迅速でダーティです。マクロ定義およびその他のプリプロセッサディレクティブは破棄され、すべてのマクロ呼び出しはアトムに置き換えられます。これは、コードの主要な構造だけが重要で、詳細は必要ない場合に役立ちます。さらに、クイック解析メソッドは通常、通常のより正確な解析よりも奇妙なケースを処理できます。</target>
        </trans-unit>
        <trans-unit id="66054f6b91c1d4dc893f7baed3f4fc4b0f39d068" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#parse_form-3&quot;&gt;parse_form/3&lt;/a&gt;&lt;/code&gt;, but does a more quick-and-dirty processing of the code. See &lt;code&gt;&lt;a href=&quot;#quick_parse_file-2&quot;&gt;quick_parse_file/2&lt;/a&gt;&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#parse_form-3&quot;&gt;parse_form/3&lt;/a&gt;&lt;/code&gt; に似ていますが、コードの処理がより迅速でダーティです。詳細は &lt;code&gt;&lt;a href=&quot;#quick_parse_file-2&quot;&gt;quick_parse_file/2&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="1cfc453ab3294622bc18b55823b9dca359bf7eaa" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;&lt;a href=&quot;#text-1&quot;&gt;text/1&lt;/a&gt;&lt;/code&gt;, but the result is treated as having zero width. This is regardless of the actual length of the string. Null text is typically used for markup, which is supposed to have no effect on the actual layout.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#text-1&quot;&gt;text/1&lt;/a&gt;&lt;/code&gt; と似ていますが、結果は幅がゼロとして扱われます。これは、文字列の実際の長さに関係ありません。nullテキストは通常​​、マークアップに使用されます。これは、実際のレイアウトには影響を与えないと想定されています。</target>
        </trans-unit>
        <trans-unit id="a313253bd8ecf55665744df8607d46a41cb09a4e" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;Busy&lt;/code&gt;, but for processor states that have been identified as non-busy (see below).</source>
          <target state="translated">&lt;code&gt;Busy&lt;/code&gt; に似ていますが、非ビジーであると識別されたプロセッサー状態用です（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="72e027038a1d8d631fe5efff041f41ef409e7329" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;epmd -names&lt;/code&gt;, see &lt;code&gt;erts:epmd(1)&lt;/code&gt;. &lt;code&gt;Host&lt;/code&gt; defaults to the local host. Returns the names and associated port numbers of the Erlang nodes that &lt;code&gt;epmd&lt;/code&gt; registered at the specified host. Returns &lt;code&gt;{error, address}&lt;/code&gt; if &lt;code&gt;epmd&lt;/code&gt; is not operational.</source>
          <target state="translated">&lt;code&gt;epmd -names&lt;/code&gt; と同様に、 &lt;code&gt;erts:epmd(1)&lt;/code&gt; を参照してください。 &lt;code&gt;Host&lt;/code&gt; デフォルトはローカルホストです。指定されたホストに &lt;code&gt;epmd&lt;/code&gt; が登録したErlangノードの名前と関連するポート番号を返します。 &lt;code&gt;epmd&lt;/code&gt; が動作しない場合 &lt;code&gt;{error, address}&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="82fcb52db95f9a14e4104723017ba9e2eb50e140" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;erl_receive_msg&lt;/code&gt;. The difference is that &lt;code&gt;erl_xreceive_msg&lt;/code&gt; expects the buffer to have been allocated by &lt;code&gt;malloc&lt;/code&gt;, and reallocates it if the received message does not fit into the original buffer. Therefore both buffer and buffer length are given as pointers; their values can change by the call.</source>
          <target state="translated">&lt;code&gt;erl_receive_msg&lt;/code&gt; に似ています。違いは、 &lt;code&gt;erl_xreceive_msg&lt;/code&gt; は &lt;code&gt;malloc&lt;/code&gt; によってバッファーが割り当てられていることを期待し、受信したメッセージが元のバッファーに収まらない場合に再割り当てすることです。したがって、バッファーとバッファー長の両方がポインターとして指定されます。それらの値は呼び出しによって変更できます。</target>
        </trans-unit>
        <trans-unit id="ab87d8ac9fbd24c47c965fa94af671a7b7a42f29" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;fprintf&lt;/code&gt; but this format string also accepts &lt;code&gt;&quot;%T&quot;&lt;/code&gt;, which formats Erlang terms of type &lt;code&gt;&lt;a href=&quot;#ERL_NIF_TERM&quot;&gt;ERL_NIF_TERM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fprintf&lt;/code&gt; に似ていますが、このフォーマット文字列は &lt;code&gt;&quot;%T&quot;&lt;/code&gt; も受け入れます。これは、タイプ &lt;code&gt;&lt;a href=&quot;#ERL_NIF_TERM&quot;&gt;ERL_NIF_TERM&lt;/a&gt;&lt;/code&gt; のErlang用語をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="24a3520b99d03fedfe093fa71f689f66180f99db" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;fprintf&lt;/code&gt; but this format string also accepts &lt;code&gt;&quot;%T&quot;&lt;/code&gt;, which formats Erlang terms.</source>
          <target state="translated">&lt;code&gt;fprintf&lt;/code&gt; に似ていますが、このフォーマット文字列は、Erlang用語をフォーマットする &lt;code&gt;&quot;%T&quot;&lt;/code&gt; も受け入れます。</target>
        </trans-unit>
        <trans-unit id="0763544797f9cc930c9c7101e8ab0d1d22e9c8a2" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;restart&lt;/code&gt;, but does not try to detect cyclic restarts; it is expected that some other mechanism is present to avoid the problem.</source>
          <target state="translated">&lt;code&gt;restart&lt;/code&gt; に似ていますが、周期的な再起動を検出しようとしません。問題を回避するために他のメカニズムが存在することが期待されます。</target>
        </trans-unit>
        <trans-unit id="4ca14a71b883332df372dbc2ac708b02bc19611b" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;s&lt;/code&gt;, but the resulting string is converted into an atom.</source>
          <target state="translated">&lt;code&gt;s&lt;/code&gt; に似ていますが、結果の文字列はアトムに変換されます。</target>
        </trans-unit>
        <trans-unit id="fa8b7ba7547e2b8fd1aa01b5699931e06be79828" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;snprintf&lt;/code&gt; but this format string also accepts &lt;code&gt;&quot;%T&quot;&lt;/code&gt;, which formats Erlang terms of type &lt;code&gt;&lt;a href=&quot;#ERL_NIF_TERM&quot;&gt;ERL_NIF_TERM&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;snprintf&lt;/code&gt; に似ていますが、このフォーマット文字列は &lt;code&gt;&quot;%T&quot;&lt;/code&gt; も受け入れます。これは、タイプ &lt;code&gt;&lt;a href=&quot;#ERL_NIF_TERM&quot;&gt;ERL_NIF_TERM&lt;/a&gt;&lt;/code&gt; のErlang用語をフォーマットします。</target>
        </trans-unit>
        <trans-unit id="41b6788042ed4402f8196ce090ffe41800f243e1" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;snprintf&lt;/code&gt; but this format string also accepts &lt;code&gt;&quot;%T&quot;&lt;/code&gt;, which formats Erlang terms.</source>
          <target state="translated">&lt;code&gt;snprintf&lt;/code&gt; に似ていますが、このフォーマット文字列はErlang用語をフォーマットする &lt;code&gt;&quot;%T&quot;&lt;/code&gt; も受け入れます。</target>
        </trans-unit>
        <trans-unit id="dc61bb7ba306f6c5743c6b046f81f49228917865" translate="yes" xml:space="preserve">
          <source>Similar to option &lt;code&gt;basic_validation&lt;/code&gt;. No code is generated, but more compiler passes are run to ensure that warnings generated by the optimization passes are generated (such as clauses that will not match, or expressions that are guaranteed to fail with an exception at runtime).</source>
          <target state="translated">オプション &lt;code&gt;basic_validation&lt;/code&gt; に似ています。コードは生成されませんが、最適化パスによって生成された警告（一致しない句、実行時に例外で失敗することが保証されている式など）が確実に生成されるように、より多くのコンパイラパスが実行されます。</target>
        </trans-unit>
        <trans-unit id="b09ef632a09513d38827bddcf23558af804221c6" translate="yes" xml:space="preserve">
          <source>Similar to the &lt;code&gt;debug_info_key&lt;/code&gt; option, but the key is read from an &lt;code&gt;.erlang.crypt&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;debug_info_key&lt;/code&gt; オプションに似ていますが、キーは &lt;code&gt;.erlang.crypt&lt;/code&gt; ファイルから読み取られます。</target>
        </trans-unit>
        <trans-unit id="0fbf22d2d36bde3d87c90b58638094bd2d62b855" translate="yes" xml:space="preserve">
          <source>Similarly, binaries that look like UTF-8 encoded strings are output with the binary string syntax if the &lt;code&gt;t&lt;/code&gt; modifier is specified:</source>
          <target state="translated">同様に、 &lt;code&gt;t&lt;/code&gt; 修飾子が指定されている場合、UTF-8エンコードされた文字列のように見えるバイナリは、バイナリ文字列構文で出力されます。</target>
        </trans-unit>
        <trans-unit id="4a5d414c80fb2628268791e5b7748129dcb29b5d" translate="yes" xml:space="preserve">
          <source>Similarly, for messages received from a port, a port controller has to retrieve trace-specific information, and set appropriate sequential trace flags through calls to &lt;code&gt;seq_trace:set_token/2&lt;/code&gt;.</source>
          <target state="translated">同様に、ポートから受信したメッセージの場合、ポートコントローラーはトレース固有の情報を取得し、 &lt;code&gt;seq_trace:set_token/2&lt;/code&gt; の呼び出しを通じて適切な順次トレースフラグを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="25997ae5e98658acfbb221772e9d3e259057b949" translate="yes" xml:space="preserve">
          <source>Similarly, multiple values from the map can be matched:</source>
          <target state="translated">同様に、マップからの複数の値を一致させることができます。</target>
        </trans-unit>
        <trans-unit id="8d183ee2551cd4ea6e4d3eebe55485c514589d6f" translate="yes" xml:space="preserve">
          <source>Similarly, the application must be stopped by calling &lt;code&gt;application:stop(Application)&lt;/code&gt; at all involved nodes.</source>
          <target state="translated">同様に、関連するすべてのノードで &lt;code&gt;application:stop(Application)&lt;/code&gt; を呼び出して、アプリケーションを停止する必要があります。</target>
        </trans-unit>
        <trans-unit id="f5b5e30866ed0fb5b8f5d08a3acd60a7754728a0" translate="yes" xml:space="preserve">
          <source>Similarly, trivial transformations on the source-code level such as converting a &lt;code&gt;case&lt;/code&gt; statement to clauses at the top-level of the function seldom makes any difference to the generated code.</source>
          <target state="translated">同様に、 &lt;code&gt;case&lt;/code&gt; ステートメントを関数の最上位レベルの句に変換するなど、ソースコードレベルでの簡単な変換では、生成されたコードにほとんど違いが生じません。</target>
        </trans-unit>
        <trans-unit id="bf12ea44b68122770e35ca5a253cccd62d860498" translate="yes" xml:space="preserve">
          <source>Simple Higher Order Functions</source>
          <target state="translated">シンプルな高次関数</target>
        </trans-unit>
        <trans-unit id="ce56ddd62b380bd2c81731139cdc0c712149a87a" translate="yes" xml:space="preserve">
          <source>Simple code replacement of the module &lt;code&gt;Mod&lt;/code&gt;.</source>
          <target state="translated">モジュール &lt;code&gt;Mod&lt;/code&gt; の簡単なコード置換。</target>
        </trans-unit>
        <trans-unit id="87da945cd34ff8f8a141563c28f80c41d1476512" translate="yes" xml:space="preserve">
          <source>Simple event-based front-ends to xmerl_scan for processing of XML documents in streams and for parsing in SAX style.</source>
          <target state="translated">XML ドキュメントをストリームで処理し、SAX スタイルでパースするための xmerl_scan のシンプルなイベントベースのフロントエンド。</target>
        </trans-unit>
        <trans-unit id="56a07b115ecfcd5e8be531e976a2a96fb43a2ceb" translate="yes" xml:space="preserve">
          <source>Simple event-based front-ends to xmerl_scan for processing of XML documents in streams and for parsing in SAX style. Each contain more elaborate settings of xmerl_scan that makes usage of the customization functions.</source>
          <target state="translated">XMLドキュメントをストリームで処理したり、SAXスタイルでパースしたりするためのxmerl_scanのシンプルなイベントベースのフロントエンドです。それぞれのフロントエンドには、カスタマイズ機能を利用するための xmerl_scan のより精巧な設定が含まれています。</target>
        </trans-unit>
        <trans-unit id="6667a691d6c48980afebaca8b210f62982385042" translate="yes" xml:space="preserve">
          <source>Simple filters are translated into equivalent match specifications.</source>
          <target state="translated">単純なフィルターは等価一致仕様に変換されます。</target>
        </trans-unit>
        <trans-unit id="a7ac2dd4dd81d9ff20ef673d34ebb52a547c79d8" translate="yes" xml:space="preserve">
          <source>Simple skeletons: If, Case, Receive, Receive After, Receive Loop - Basic code constructs.</source>
          <target state="translated">シンプルなスケルトン。If、Case、Receive、Receive After、Receive Loop-基本的なコード構造。</target>
        </trans-unit>
        <trans-unit id="22d543a32fba30bc1f23d1bfefa506cc5184802e" translate="yes" xml:space="preserve">
          <source>Simple use; creates and seeds the default algorithm with a non-constant seed if not already done:</source>
          <target state="translated">単純な利用法;デフォルトのアルゴリズムを作成し,既に実行されていない場合は,不変のシードを用いてシードします.</target>
        </trans-unit>
        <trans-unit id="9d366ef7a00e61a9e60ce8b79309e5e1e09c594f" translate="yes" xml:space="preserve">
          <source>Simplified start of a sequence chart viewer with global tracing activated.</source>
          <target state="translated">グローバルトレースを有効にしたシーケンスチャートビューアの簡素化された開始。</target>
        </trans-unit>
        <trans-unit id="4877feccaf7be9c5cb78312e4ba3da5b4a7402da" translate="yes" xml:space="preserve">
          <source>Simply put, connection-oriented socket communication (TCP/IP) consists of an initiator socket (&quot;server&quot;) started at a certain host with a certain port number. A connector socket (&quot;client&quot;), which is aware of the initiator host name and port number, can connect to it and data can be sent between them.</source>
          <target state="translated">接続指向ソケット通信(TCP/IP)は、簡単に言えば、特定のホストで起動された特定のポート番号のイニシエータソケット(サーバ)から構成されています。イニシエータホスト名とポート番号を知っているコネクタソケット(「クライアント」)が接続し、両者の間でデータを送信することができます。</target>
        </trans-unit>
        <trans-unit id="506ee5095e84f9f475858f43278c69f52b0d1486" translate="yes" xml:space="preserve">
          <source>Simulates a time-out when executing a &lt;code&gt;receive...after&lt;/code&gt; statement.</source>
          <target state="translated">&lt;code&gt;receive...after&lt;/code&gt; ステートメントの実行時のタイムアウトをシミュレートします。</target>
        </trans-unit>
        <trans-unit id="6e32cda5df77b168fc7318c22725d629257e0556" translate="yes" xml:space="preserve">
          <source>Simultaneous backup calls are &lt;strong&gt;not&lt;/strong&gt; allowed. That is, two different processes cannot simultaneously successfully call this function. One of them will be first, and succeed. The second will fail with the error reason &lt;code&gt;backup_in_progress&lt;/code&gt;.</source>
          <target state="translated">同時バックアップ呼び出しは許可されて&lt;strong&gt;いません&lt;/strong&gt;。つまり、2つの異なるプロセスが同時にこの関数を正常に呼び出すことはできません。それらの1つが最初になり、成功します。2番目は失敗し、エラー理由 &lt;code&gt;backup_in_progress&lt;/code&gt; が表示されます。</target>
        </trans-unit>
        <trans-unit id="22a4ed66c623d273a571652cc9ae1a89577a837f" translate="yes" xml:space="preserve">
          <source>Since</source>
          <target state="translated">Since</target>
        </trans-unit>
        <trans-unit id="deb3684d5ead9f80a8f0c0356fa4de19eda57364" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;filter_default&lt;/code&gt; defaults to &lt;code&gt;log&lt;/code&gt;, this handler now receives all log events. If you want info events only in the file, you must add a filter to stop all non-info events. The built-in filter &lt;code&gt;&lt;a href=&quot;logger_filters#level-2&quot;&gt; logger_filters:level/2&lt;/a&gt;&lt;/code&gt; can do this:</source>
          <target state="translated">以来 &lt;code&gt;filter_default&lt;/code&gt; デフォルト &lt;code&gt;log&lt;/code&gt; 、このハンドラは現在、すべてのログ・イベントを受け取ります。ファイルにのみ情報イベントが必要な場合は、フィルターを追加して、すべての非情報イベントを停止する必要があります。組み込みのフィルター &lt;code&gt;&lt;a href=&quot;logger_filters#level-2&quot;&gt; logger_filters:level/2&lt;/a&gt;&lt;/code&gt; は、次のことを実行できます。</target>
        </trans-unit>
        <trans-unit id="b2914983192b284a9d510877945c3ce2a59d441e" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;filter_default&lt;/code&gt; defaults to &lt;code&gt;log&lt;/code&gt;, this handler now receives all log events. If you want info events only in the file, you must add a filter to stop all non-info events. The built-in filter &lt;code&gt;&lt;a href=&quot;logger_filters#level-2&quot;&gt;logger_filters:level/2&lt;/a&gt;&lt;/code&gt; can do this:</source>
          <target state="translated">以来 &lt;code&gt;filter_default&lt;/code&gt; デフォルト &lt;code&gt;log&lt;/code&gt; 、このハンドラは現在、すべてのログ・イベントを受け取ります。ファイル内でのみ情報イベントが必要な場合は、フィルターを追加して、すべての非情報イベントを停止する必要があります。組み込みのフィルター &lt;code&gt;&lt;a href=&quot;logger_filters#level-2&quot;&gt;logger_filters:level/2&lt;/a&gt;&lt;/code&gt; はこれを行うことができます：</target>
        </trans-unit>
        <trans-unit id="6022342a60e9de6fa2494fe49163e991025cb95e" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;fprof&lt;/code&gt; uses trace to file, the runtime performance degradation is minimized, but still far from negligible, especially for programs that use the filesystem heavily by themselves. Where you place the trace file is also important, e.g on Solaris &lt;code&gt;/tmp&lt;/code&gt; is usually a good choice since it is essentially a RAM disk, while any NFS (network) mounted disk is a bad idea.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; はファイルへのトレースを使用するため、実行時のパフォーマンスの低下は最小限に抑えられますが、特にファイルシステムを単独で頻繁に使用するプログラムの場合は、無視できるほどではありません。トレースファイルを配置する場所も重要です。たとえば、Solarisでは &lt;code&gt;/tmp&lt;/code&gt; は本質的にRAMディスクであるため、通常は適切な選択ですが、NFS（ネットワーク）でマウントされたディスクは不適切です。</target>
        </trans-unit>
        <trans-unit id="cc4aa5cbb251c7ad89f2aeeababed306f6d9026b" translate="yes" xml:space="preserve">
          <source>Since &lt;code&gt;fprof&lt;/code&gt; uses trace to file, the runtime performance degradation is minimized, but still far from negligible, especially not for programs that use the filesystem heavily by themselves. Where you place the trace file is also important, e.g on Solaris &lt;code&gt;/tmp&lt;/code&gt; is usually a good choice, while any NFS mounted disk is a lousy choice.</source>
          <target state="translated">&lt;code&gt;fprof&lt;/code&gt; はファイルへのトレースを使用するため、実行時のパフォーマンスの低下は最小限に抑えられますが、特にファイルシステムを単独で頻繁に使用するプログラムの場合は無視できません。トレースファイルの場所も重要です。たとえば、Solarisでは &lt;code&gt;/tmp&lt;/code&gt; が通常適切な選択ですが、NFSマウントされたディスクは粗末な選択です。</target>
        </trans-unit>
        <trans-unit id="a7e523deb3133ff853e30d467f7a1e58416fbcc0" translate="yes" xml:space="preserve">
          <source>Since ERTS 5.5 (Erlang/OTP R11B), &lt;code&gt;orig_bytes&lt;/code&gt; is guaranteed to be properly aligned for storage of an array of doubles (usually 8-byte aligned).</source>
          <target state="translated">ERTS 5.5（Erlang / OTP R11B）以降、 &lt;code&gt;orig_bytes&lt;/code&gt; はdoubleの配列を格納するために適切に配置されることが保証されています（通常は8バイトに配置）。</target>
        </trans-unit>
        <trans-unit id="7b4f82fe7fc2ec7a3e8ea259abcf7ecef813be40" translate="yes" xml:space="preserve">
          <source>Since ERTS 5.7.2 (OTP R13B) the runtime system passes a distribution flag in the handshake stage that enables the use of a &lt;code&gt;&lt;a href=&quot;erl_ext_dist#distribution_header&quot;&gt;distribution header &lt;/a&gt;&lt;/code&gt; on all messages passed. Messages passed between nodes have in this case the following format:</source>
          <target state="translated">ERTS 5.7.2（OTP R13B）以降、ランタイムシステムはハンドシェイクステージで配布フラグを渡し、渡されたすべてのメッセージで &lt;code&gt;&lt;a href=&quot;erl_ext_dist#distribution_header&quot;&gt;distribution header &lt;/a&gt;&lt;/code&gt; を使用できるようにします。この場合、ノード間で渡されるメッセージの形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="72cffeb51e0969b463e7862612a7a16a012bc42e" translate="yes" xml:space="preserve">
          <source>Since ERTS 9.0 (OTP-20.0), resource terms have a defined behavior when compared and serialized through &lt;code&gt;term_to_binary&lt;/code&gt; or passed between nodes.</source>
          <target state="translated">ERTS 9.0（OTP-20.0）以降、リソース用語は、 &lt;code&gt;term_to_binary&lt;/code&gt; を介して比較およびシリアル化されたとき、またはノード間で渡されたときに、定義された動作を持っています。</target>
        </trans-unit>
        <trans-unit id="c9ee9d4a83339c7cbf019dafa14b709fff182389" translate="yes" xml:space="preserve">
          <source>Since Logger is new in Erlang/OTP 21.0, we do reserve the right to introduce changes to the Logger API and functionality in patches following this release. These changes might or might not be backwards compatible with the initial version.</source>
          <target state="translated">LoggerはErlang/OTP 21.0では新しいものなので、このリリースに続くパッチでLoggerのAPIと機能に変更を加える権利を留保しています。これらの変更は初期バージョンとの下位互換性があるかもしれませんし、ないかもしれません。</target>
        </trans-unit>
        <trans-unit id="1388c7f42c463e118733594ab56b9edf44014b2b" translate="yes" xml:space="preserve">
          <source>Since Mnesia detects deadlocks, a transaction can be restarted any number of times. This function attempts a restart as specified in &lt;code&gt;Retries&lt;/code&gt;. &lt;code&gt;Retries&lt;/code&gt; must be an integer greater than 0 or the atom &lt;code&gt;infinity&lt;/code&gt;. Default is &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">Mnesiaはデッドロックを検出するため、トランザクションは何度でも再開できます。この関数は、「再試行」で指定された再起動を試み &lt;code&gt;Retries&lt;/code&gt; 。 &lt;code&gt;Retries&lt;/code&gt; は、0より大きい整数またはアトム &lt;code&gt;infinity&lt;/code&gt; なければなりません。デフォルトは &lt;code&gt;infinity&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="54cccee0e2962510ff34ad2497056ae18c5dc9a8" translate="yes" xml:space="preserve">
          <source>Since OTP 21 the recommended module to handle URIs is &lt;code&gt;uri_string&lt;/code&gt;. The module &lt;code&gt;http_uri&lt;/code&gt; does not provide a implementation that satisfies the RFC. Formally deprecated since OTP-23.</source>
          <target state="translated">OTP 21以降、URIを処理するために推奨されるモジュールは &lt;code&gt;uri_string&lt;/code&gt; です。モジュール &lt;code&gt;http_uri&lt;/code&gt; は、RFCを満たす実装を提供していません。OTP-23以降、正式に非推奨になりました。</target>
        </trans-unit>
        <trans-unit id="963d9d48c7ed23ddce3bee658cf6c76c9bd17ce0" translate="yes" xml:space="preserve">
          <source>Since OTP 21 the recommended module to handle URIs is &lt;code&gt;uri_string&lt;/code&gt;. The module http_uri does not provide a implementation that satisfies the RFC.</source>
          <target state="translated">OTP 21以降、URIを処理するために推奨されるモジュールは &lt;code&gt;uri_string&lt;/code&gt; です。モジュールhttp_uriは、RFCを満たす実装を提供していません。</target>
        </trans-unit>
        <trans-unit id="e1f2a7910e9660499194205c29b7be7835a30ce8" translate="yes" xml:space="preserve">
          <source>Since R14, the following can also be written:</source>
          <target state="translated">R14なので、以下のようにも書けます。</target>
        </trans-unit>
        <trans-unit id="413d9b584917b55b7fedeb013c6059a26ce95726" translate="yes" xml:space="preserve">
          <source>Since XSLT is based on a functional programming approach with pattern matching and recursion it is possible to write similar style sheets in Erlang. At least for basic transforms. This document describes how to use the XPath implementation together with Erlangs pattern matching and a couple of functions to write XSLT like transforms.</source>
          <target state="translated">XSLTはパターンマッチングと再帰を用いた関数型プログラミングのアプローチに基づいているので、Erlangでも似たようなスタイルシートを書くことができます。少なくとも基本的な変換についてはそうです。このドキュメントでは、XPathの実装をErlangのパターンマッチングといくつかの関数と一緒に使ってXSLTのような変換を書く方法を説明します。</target>
        </trans-unit>
        <trans-unit id="ada107b11ee6de2781cde05ad5e1f711f358a1b4" translate="yes" xml:space="preserve">
          <source>Since a distributed application can move between nodes, some addressing mechanism is required to ensure that it can be addressed by other applications, regardless on which node it currently executes. This issue is not addressed here, but the &lt;code&gt;global&lt;/code&gt; or &lt;code&gt;pg2&lt;/code&gt; modules in Kernel can be used for this purpose.</source>
          <target state="translated">分散アプリケーションはノード間を移動できるため、現在実行されているノードに関係なく、他のアプリケーションから確実にアドレス指定できるようにするためのアドレス指定メカニズムが必要です。この問題はここでは扱われていませんが、カーネルの &lt;code&gt;global&lt;/code&gt; モジュールまたは &lt;code&gt;pg2&lt;/code&gt; モジュールをこの目的で使用できます。</target>
        </trans-unit>
        <trans-unit id="66ff30f9b57f24db2b0f992306001681b97fc267" translate="yes" xml:space="preserve">
          <source>Since a distributed application can move between nodes, some addressing mechanism is required to ensure that it can be addressed by other applications, regardless on which node it currently executes. This issue is not addressed here, but the &lt;code&gt;global&lt;/code&gt; or &lt;code&gt;pg&lt;/code&gt; modules in Kernel can be used for this purpose.</source>
          <target state="translated">分散アプリケーションはノード間を移動できるため、現在実行しているノードに関係なく、他のアプリケーションで確実にアドレス指定できるようにするには、何らかのアドレス指定メカニズムが必要です。この問題はここでは扱われていませんが、カーネルの &lt;code&gt;global&lt;/code&gt; モジュールまたは &lt;code&gt;pg&lt;/code&gt; モジュールをこの目的に使用できます。</target>
        </trans-unit>
        <trans-unit id="87e18457af74e313fcf9d346cd7367f52085b23e" translate="yes" xml:space="preserve">
          <source>Since a postponed event is only retried after a &lt;strong&gt;state change&lt;/strong&gt;, you have to think about where to keep a state data item. You can keep it in the server &lt;code&gt;Data&lt;/code&gt; or in the &lt;code&gt;State&lt;/code&gt; itself, for example by having two more or less identical states to keep a boolean value, or by using a complex state (see section &lt;code&gt;&lt;a href=&quot;#Complex%20State&quot;&gt;Complex State&lt;/a&gt;&lt;/code&gt;) with &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;&lt;code&gt;handle_event_function&lt;/code&gt;. If a change in the value changes the set of events that is handled, then the value should be kept in the State. Otherwise no postponed events will be retried since only the server Data changes.</source>
          <target state="translated">延期されたイベントは&lt;strong&gt;状態変更&lt;/strong&gt;後にのみ再試行されるため、状態データ項目をどこに保持するかを検討する必要があります。あなたは、サーバーに保管することができ &lt;code&gt;Data&lt;/code&gt; かに &lt;code&gt;State&lt;/code&gt; （節参照自体、例えばブール値を維持するために、2つの多かれ少なかれ同じ状態を有することにより、または複雑な状態を使用することにより、 &lt;code&gt;&lt;a href=&quot;#Complex%20State&quot;&gt;Complex State&lt;/a&gt;&lt;/code&gt; 持つ） &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;&lt;strong&gt;callback mode&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; &lt;code&gt;handle_event_function&lt;/code&gt; 。値の変更によって処理されるイベントのセットが変更された場合、値は状態に保持される必要があります。それ以外の場合、サーバーデータのみが変更されるため、延期されたイベントは再試行されません。</target>
        </trans-unit>
        <trans-unit id="98f99e28651d1cfab72f2d2bfc5daa600567ec43" translate="yes" xml:space="preserve">
          <source>Since a postponed event is only retried after a state change, you have to think about where to keep a state data item. You can keep it in the server &lt;code&gt;Data&lt;/code&gt; or in the &lt;code&gt;State&lt;/code&gt; itself, for example by having two more or less identical states to keep a boolean value, or by using a complex state (see section &lt;code&gt;&lt;a href=&quot;#Complex%20State&quot;&gt;Complex State&lt;/a&gt;&lt;/code&gt;) with &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;Callback Mode&lt;/a&gt;&lt;/code&gt;&lt;code&gt;handle_event_function&lt;/code&gt;. If a change in the value changes the set of events that is handled, then the value should be kept in the State. Otherwise no postponed events will be retried since only the server Data changes.</source>
          <target state="translated">延期されたイベントは状態変更後にのみ再試行されるため、状態データ項目をどこに保持するかを考慮する必要があります。あなたは、サーバーに保管することができ &lt;code&gt;Data&lt;/code&gt; や中 &lt;code&gt;State&lt;/code&gt; （節参照ブール値を維持するために、2つの多かれ少なかれ同じ状態を有することにより、または複雑な状態を使用することにより、例えば、自分自身 &lt;code&gt;&lt;a href=&quot;#Complex%20State&quot;&gt;Complex State&lt;/a&gt;&lt;/code&gt; 持つ） &lt;code&gt;&lt;a href=&quot;#Callback%20Modes&quot;&gt;Callback Mode&lt;/a&gt;&lt;/code&gt; &lt;code&gt;handle_event_function&lt;/code&gt; 。値の変更により、処理されるイベントのセットが変更される場合、値は状態に保持される必要があります。それ以外の場合、サーバーのデータのみが変更されるため、延期されたイベントは再試行されません。</target>
        </trans-unit>
        <trans-unit id="5a6f8f634b0fc5e7ed2d9442c74c26d0c1d5e639" translate="yes" xml:space="preserve">
          <source>Since applications tend to be transient (they are dynamically loaded and unloaded), the management of these applications must be dynamic as well. For example, if we have an equipment MIB for a rack and different MIBs for boards, which can be installed in the rack, the MIB for a card should be loaded when the card is inserted, and unloaded when the card is removed.</source>
          <target state="translated">アプリケーションは過渡的(動的にロードとアンロードが行われる)である傾向があるため、これらのアプリケーションの管理も動的でなければなりません。例えば、ラック用の機器MIBと、ラックにインストール可能なボード用の異なるMIBがある場合、カード用のMIBは、カードが挿入されたときにロードされ、カードが取り出されたときにアンロードされる必要があります。</target>
        </trans-unit>
        <trans-unit id="823de482e19675451f12ff79abbfd8b7be1c5f44" translate="yes" xml:space="preserve">
          <source>Since both operations involve the 1.1 index, this is transformed into one call to &lt;code&gt;my_table&lt;/code&gt;:</source>
          <target state="translated">どちらの操作にも1.1インデックスが含まれるため、これは &lt;code&gt;my_table&lt;/code&gt; への1回の呼び出しに変換されます。</target>
        </trans-unit>
        <trans-unit id="b635880c7663b7344b64c7beff4c9c8ade44107b" translate="yes" xml:space="preserve">
          <source>Since breakpoints are used there is no need for special compilation of any module to be profiled. For now these breakpoints can only be set on BEAM code so BIFs cannot be call count traced.</source>
          <target state="translated">ブレークポイントを使用するので、プロファイル化するモジュールを特別にコンパイルする必要はありません。今のところ、これらのブレークポイントはBEAMコードにのみ設定できるので、BIFはコールカウントをトレースすることができません。</target>
        </trans-unit>
        <trans-unit id="52bfe1fd9891a26c0e22f589483714dc657e5292" translate="yes" xml:space="preserve">
          <source>Since it is desired to update the record using the function &lt;code&gt;&lt;a href=&quot;mnesia#write-1&quot;&gt;mnesia:write/1&lt;/a&gt;&lt;/code&gt; after the salary has been increased, a write lock (third argument to &lt;code&gt;read&lt;/code&gt;) is acquired when the record from the table is read.</source>
          <target state="translated">給与が引き上げられた後、関数 &lt;code&gt;&lt;a href=&quot;mnesia#write-1&quot;&gt;mnesia:write/1&lt;/a&gt;&lt;/code&gt; を使用してレコードを更新することが望ましいため、テーブルからレコードが &lt;code&gt;read&lt;/code&gt; と、書き込みロック（readの 3番目の引数）が取得されます。</target>
        </trans-unit>
        <trans-unit id="e6a5be82abdc524be2ea57029dbb0043327eeb95" translate="yes" xml:space="preserve">
          <source>Since it is the port itself which decides when it is time to enter a busy state, it needs to be executing in order to enter the busy state. As a result of &lt;code&gt;command&lt;/code&gt; signals being scheduled, we may get into a situation where the port gets flooded by a huge amount of &lt;code&gt;command&lt;/code&gt; signals before it even gets a chance to set itself into a busy state. This since it has not been scheduled for execution yet. That is, under these circumstances the busy port functionality loose the flow control properties it was intended to provide.</source>
          <target state="translated">ビジー状態に入るタイミングを決定するのはポート自体であるため、ビジー状態に入るには実行する必要があります。 &lt;code&gt;command&lt;/code&gt; 信号がスケジュールされた結果、ポートがビジー状態になる前に、大量の &lt;code&gt;command&lt;/code&gt; 信号でポートがフラッディングする状況に陥る可能性があります。これは、まだ実行がスケジュールされていないためです。つまり、これらの状況では、ビジーポート機能は、提供することを目的としたフロー制御プロパティを失います。</target>
        </trans-unit>
        <trans-unit id="38407ec48edd8217e05a2557f650908c44d41ec9" translate="yes" xml:space="preserve">
          <source>Since record expressions are expanded to tuple expressions, creating records and accessing record fields are allowed in guards. However all subexpressions, for example, for field initiations, must be valid guard expressions as well.</source>
          <target state="translated">レコード式はタプル式に拡張されているので、レコードの作成とレコードフィールドへのアクセスはガード式で許可されています。しかし、フィールドの開始などのすべてのサブ式は、同様に有効なガード式でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f25817276926c066362bed9d894325da88019f08" translate="yes" xml:space="preserve">
          <source>Since several features of Erlang mode is based on the standard layout they might not work correctly if a nonstandard layout is used.</source>
          <target state="translated">Erlangモードのいくつかの機能は標準レイアウトに基づいているので、非標準レイアウトが使われていると正しく動作しないかもしれません。</target>
        </trans-unit>
        <trans-unit id="e8a4b0204d170a43618a3e25ddada921e0a9ceb2" translate="yes" xml:space="preserve">
          <source>Since single line logging is the default of the built-in formatter you only have to provide the empty map as the configuration. The example below uses the &lt;code&gt;sys.config&lt;/code&gt; to change the formatter configuration.</source>
          <target state="translated">組み込みフォーマッタのデフォルトは1行のロギングであるため、構成として空のマップを指定するだけで済みます。以下の例では、 &lt;code&gt;sys.config&lt;/code&gt; を使用してフォーマッタ構成を変更しています。</target>
        </trans-unit>
        <trans-unit id="f54cc9fd4c566e40c2141eb6b3736f3621a8b951" translate="yes" xml:space="preserve">
          <source>Since the &lt;strong&gt;state enter call&lt;/strong&gt; is not an event there are restrictions on the allowed return value and &lt;code&gt;&lt;a href=&quot;#Transition%20Actions&quot;&gt;State Transition Actions&lt;/a&gt;&lt;/code&gt;. You may not change the state, &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; this non-event, &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;insert any events&lt;/a&gt;&lt;/code&gt;, or change the &lt;code&gt;&lt;a href=&quot;#Callback%20Module&quot;&gt;&lt;strong&gt;callback module&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">以来&lt;strong&gt;状態はコールが入る&lt;/strong&gt;イベントではありません許可され、戻り値と上の制限がある &lt;code&gt;&lt;a href=&quot;#Transition%20Actions&quot;&gt;State Transition Actions&lt;/a&gt;&lt;/code&gt; 。状態を変更したり、この非イベントを &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; たり、イベントを &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;insert any events&lt;/a&gt;&lt;/code&gt; たり、 &lt;code&gt;&lt;a href=&quot;#Callback%20Module&quot;&gt;&lt;strong&gt;callback module&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; 変更したりすることはできません。</target>
        </trans-unit>
        <trans-unit id="1e787ba4bb5c99b509695608c3b39b160986dc89" translate="yes" xml:space="preserve">
          <source>Since the Net if process is responsible for encoding and decoding of SNMP messages, it must also update the relevant counters in the SNMP group in MIB-II. It can use the functions in the module &lt;code&gt;snmpa_mpd&lt;/code&gt; for this purpose (refer to the Reference Manual, section &lt;code&gt;snmp&lt;/code&gt;, module &lt;code&gt;&lt;a href=&quot;snmp_pdus&quot;&gt;snmpa_mpd&lt;/a&gt;&lt;/code&gt; for more details.)</source>
          <target state="translated">Net ifプロセスはSNMPメッセージのエンコードとデコードを担当するため、MIB-IIのSNMPグループの関連するカウンターも更新する必要があります。この目的で、モジュール &lt;code&gt;snmpa_mpd&lt;/code&gt; の関数を使用できます（詳細については、リファレンスマニュアルのセクション &lt;code&gt;snmp&lt;/code&gt; 、モジュール &lt;code&gt;&lt;a href=&quot;snmp_pdus&quot;&gt;snmpa_mpd&lt;/a&gt;&lt;/code&gt; を参照してください）。</target>
        </trans-unit>
        <trans-unit id="e4e021b70c4309ea3c8bcb22dd51c073b89dc2f3" translate="yes" xml:space="preserve">
          <source>Since the Net if process is responsible for encoding and decoding of SNMP messages, it must also update the relevant counters in the SNMP group in MIB-II. It can use the functions in the module &lt;code&gt;snmpm_mpd&lt;/code&gt; for this purpose (refer to the Reference Manual, section &lt;code&gt;snmp&lt;/code&gt;, module &lt;code&gt;snmpm_mpd&lt;/code&gt; for more details).</source>
          <target state="translated">Net ifプロセスはSNMPメッセージのエンコードとデコードを担当するため、MIB-IIのSNMPグループの関連するカウンターも更新する必要があります。この目的で、モジュール &lt;code&gt;snmpm_mpd&lt;/code&gt; の関数を使用できます（詳細については、リファレンスマニュアルのセクション &lt;code&gt;snmp&lt;/code&gt; 、モジュール &lt;code&gt;snmpm_mpd&lt;/code&gt; を参照してください）。</target>
        </trans-unit>
        <trans-unit id="4954e51808f572d06972cd97dd69985cb22ea1ee" translate="yes" xml:space="preserve">
          <source>Since the carrier has been unlinked from the data structure of available free blocks, no more allocations will be made in the carrier.</source>
          <target state="translated">キャリアは利用可能なフリーブロックのデータ構造からリンクされていないので、これ以上の割り当てはキャリアには行われません。</target>
        </trans-unit>
        <trans-unit id="fbcf2799e1a30a770abcef39bfc0e1f47999b962" translate="yes" xml:space="preserve">
          <source>Since the payload is larger than 128-bytes it is split into two fragments. The second fragment does not have any atom cache update instructions so it is a lot simpler:</source>
          <target state="translated">ペイロードは128バイトよりも大きいので、2つのフラグメントに分割されます。2つ目のフラグメントにはアトムキャッシュの更新命令がないので、よりシンプルになります。</target>
        </trans-unit>
        <trans-unit id="02f0c872afde435f83990c58521c75bab3d861bd" translate="yes" xml:space="preserve">
          <source>Since the state enter call is not an event there are restrictions on the allowed return value and &lt;code&gt;&lt;a href=&quot;#State%20Transition%20Actions&quot;&gt;State Transition Actions&lt;/a&gt;&lt;/code&gt;. You may not change the state, &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; this non-event, or &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;insert events&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">状態入力呼び出しはイベントではないため、許可される戻り値と &lt;code&gt;&lt;a href=&quot;#State%20Transition%20Actions&quot;&gt;State Transition Actions&lt;/a&gt;&lt;/code&gt; には制限があります。状態を変更したり、この非イベントを &lt;code&gt;&lt;a href=&quot;#Postponing%20Events&quot;&gt;postpone&lt;/a&gt;&lt;/code&gt; たり、イベントを &lt;code&gt;&lt;a href=&quot;#Inserted%20Events&quot;&gt;insert events&lt;/a&gt;&lt;/code&gt; たりすることはできません。</target>
        </trans-unit>
        <trans-unit id="b8bdd22800d998b3d6968c1bfc746532bc1009a1" translate="yes" xml:space="preserve">
          <source>Since the supervisor is part of a supervision tree, it is automatically terminated by its supervisor. When asked to shut down, it terminates all child processes in reversed start order according to the respective shutdown specifications, and then terminates itself.</source>
          <target state="translated">スーパバイザはスーパビジョンツリーの一部であるため、スーパバイザによって自動的に終了されます。シャットダウンを要求されると、それはそれぞれのシャットダウン仕様に従って、開始順序を逆にしてすべての子プロセスを終了させ、それ自身を終了させます。</target>
        </trans-unit>
        <trans-unit id="08c5ff113595492032ba59b4a55450c477046a91" translate="yes" xml:space="preserve">
          <source>Since the supervisor is to change its internal state, synchronized code replacement is required. However, a special &lt;code&gt;update&lt;/code&gt; instruction must be used.</source>
          <target state="translated">スーパーバイザは内部状態を変更するため、同期コードの交換が必要です。ただし、特別な &lt;code&gt;update&lt;/code&gt; 命令を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="65a7232a87d15fbe1b393f1aa3930d5001a666c2" translate="yes" xml:space="preserve">
          <source>Since the version 3 implemented, in this version of the Megaco application, is preliminary, it is necessary to have a way to handle different version 3 implementations. For this reason the encoding config option &lt;code&gt;{version3, version3()}&lt;/code&gt; has been introduced. This option, if present, has to be &lt;strong&gt;first&lt;/strong&gt; in the encoding config list. Version 1 and 2 codec's ignore this option, if found.</source>
          <target state="translated">Megacoアプリケーションのこのバージョンで実装されているバージョン3は暫定的なものであるため、異なるバージョン3の実装を処理する方法が必要です。このため、エンコーディング設定オプション &lt;code&gt;{version3, version3()}&lt;/code&gt; が導入されました。このオプションは、存在する場合、エンコーディング構成リストの&lt;strong&gt;最初&lt;/strong&gt;にある必要があります。バージョン1と2のコーデックは、このオプションを検出しても無視します。</target>
        </trans-unit>
        <trans-unit id="ed6a4422d27f7fd5661017aa05e73f8c0b7788d1" translate="yes" xml:space="preserve">
          <source>Since we are only interested in a ratio, the unary operator &lt;code&gt;#&lt;/code&gt; that counts the elements of the operand is used. It cannot be applied to the &lt;code&gt;digraph&lt;/code&gt; representation of graphs.</source>
          <target state="translated">比率のみに関心があるため、オペランドの要素を数える単項演算子 &lt;code&gt;#&lt;/code&gt; が使用されます。グラフの &lt;code&gt;digraph&lt;/code&gt; 表現には適用できません。</target>
        </trans-unit>
        <trans-unit id="41813ca49767fb16da8ba26835539d16f89a22b5" translate="yes" xml:space="preserve">
          <source>Since we go from a state where I/O signals are the only port related signals scheduled, to a state where potentially all port related signals may be scheduled we may drastically increase the load on the run queue lock. The amount of scheduled port tasks very much depend on the Erlang application executing, which we do not control, and we do not want to get increased contention on the run queue locks. We therefore need another approach of protecting the port task queue.</source>
          <target state="translated">I/Oシグナルが唯一のポート関連シグナルをスケジュールしている状態から、潜在的にすべてのポート関連シグナルがスケジュールされている状態に移行したので、ランキューロックの負荷が大幅に増加する可能性があります。スケジュールされたポートタスクの量はErlangアプリケーションの実行に大きく依存します。そこで、ポートタスクキューを保護する別のアプローチが必要になります。</target>
        </trans-unit>
        <trans-unit id="aa8219103b5c345a541f3c2acfdce4793ae02f6a" translate="yes" xml:space="preserve">
          <source>Since we have a limited amount of unique identifiers, we need to be careful not to waste them. If previously used identifiers are reused too quick, identifiers originating from terminated processes will refer to newly created processes, and mixups will occur. The previously used approach was quite good at not wasting identifiers. Using a modified version of the same approach also lets us keep the ordering property that we have always had.</source>
          <target state="translated">固有の識別子の数には限りがあるので、無駄にしないように注意する必要があります。以前に使用した識別子の再利用が早すぎると、終了したプロセスの識別子が新たに作成されたプロセスを参照してしまうことになります。以前に使用していたアプローチは、識別子を無駄にしないという点では非常に優れていました。同じアプローチを修正したものを使用することで、これまでの順序付けの特性を維持することができます。</target>
        </trans-unit>
        <trans-unit id="2c9492919ad524efc08c529443e062c0e4df4399" translate="yes" xml:space="preserve">
          <source>Since we have the average real-time and the percentage spent in each state we can easily calculate the time spent in each state by multiplying &lt;code&gt;Average thread real-time&lt;/code&gt; with &lt;code&gt;Thread state %&lt;/code&gt;, i.e. to get the time Scheduler 1 spent in the emulator state we do &lt;code&gt;1000513us * 0.13% = 1300us&lt;/code&gt;.</source>
          <target state="translated">平均リアルタイムと各状態で費やされたパーセンテージがあるので、平均 &lt;code&gt;Average thread real-time&lt;/code&gt; と &lt;code&gt;Thread state %&lt;/code&gt; を乗算することで、各状態で費やされた時間を簡単に計算できます。つまり、スケジューラー1がエミュレーター状態で費やした時間を取得します。やる &lt;code&gt;1000513us * 0.13% = 1300us&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7687b60defdbe9ddedde4a9326ea17abd8623f5a" translate="yes" xml:space="preserve">
          <source>Since we still need to be able to pass references to memory between scheduler threads we need some way to manage this. An allocator instance belonging to one scheduler thread is only allowed to be manipulated by that scheduler thread. When other threads need to deallocate memory originating from a foreign allocator instance, they only pass the memory block to a &quot;message box&quot; containing deallocation jobs attached to the originating allocator instance. When a scheduler thread detects such deallocation job it performs the actual deallocation.</source>
          <target state="translated">スケジューラースレッド間でメモリへの参照を渡すことができるようにする必要があるので、これを管理する方法が必要です。あるスケジューラースレッドに属するアロケータインスタンスは、そのスケジューラースレッドのみが操作できるようになっています。他のスレッドが他のアロケータインスタンスからのメモリを解放する必要がある場合、他のスレッドは、元のアロケータインスタンスにアタッチされた解放ジョブを含む &quot;メッセージボックス &quot;にメモリブロックを渡すだけです。スケジューラースレッドがそのようなデアロケートジョブを検出すると、実際のデアロケートを実行します。</target>
        </trans-unit>
        <trans-unit id="1432622692b32e253b48613bca71ae7b32a29c9f" translate="yes" xml:space="preserve">
          <source>Single Time Warp Mode</source>
          <target state="translated">シングルタイムワープモード</target>
        </trans-unit>
        <trans-unit id="7e633562ce278aa8f63877ae1b686c99ed11160e" translate="yes" xml:space="preserve">
          <source>Single direction links (monitor).</source>
          <target state="translated">単方向リンク(モニター)。</target>
        </trans-unit>
        <trans-unit id="105bb54dd9215587b0a435a3a794841d6b616bf6" translate="yes" xml:space="preserve">
          <source>Single line configuration</source>
          <target state="translated">単一行構成</target>
        </trans-unit>
        <trans-unit id="b103261a83b179716c89c6c92972b372068f6b15" translate="yes" xml:space="preserve">
          <source>Single quote</source>
          <target state="translated">単一の引用</target>
        </trans-unit>
        <trans-unit id="5d14ba00f00906805970adcc45cc1c084f8e21a4" translate="yes" xml:space="preserve">
          <source>Single-command interface for running all available tests</source>
          <target state="translated">利用可能なすべてのテストを実行するためのシングルコマンドインターフェース</target>
        </trans-unit>
        <trans-unit id="7a48d59b7a29cd918002eed1d70074d35d9b4eba" translate="yes" xml:space="preserve">
          <source>Singleblock carrier threshold (in kilobytes). Blocks larger than this threshold are placed in singleblock carriers. Blocks smaller than this threshold are placed in multiblock carriers. On 32-bit Unix style OS this threshold cannot be set &amp;gt; 8 MB.</source>
          <target state="translated">シングルブロックキャリアしきい値（キロバイト単位）。このしきい値より大きいブロックは、シングルブロックキャリアに配置されます。このしきい値よりも小さいブロックは、マルチブロックキャリアに配置されます。32ビットUnixスタイルのOSでは、このしきい値を8 MBより大きく設定することはできません。</target>
        </trans-unit>
        <trans-unit id="0ab7336e86a131253ff20a56630ee902f7f1baa9" translate="yes" xml:space="preserve">
          <source>Singleblock carriers are used for storage of one block.</source>
          <target state="translated">シングルブロックキャリアは、1つのブロックを格納するために使用されます。</target>
        </trans-unit>
        <trans-unit id="0d8bc28bd230eae9445fec6a48931c7bdeb53ee1" translate="yes" xml:space="preserve">
          <source>Sinhala</source>
          <target state="translated">Sinhala</target>
        </trans-unit>
        <trans-unit id="bcc519db180ce33c37a28038f9639369bd1d4e9e" translate="yes" xml:space="preserve">
          <source>Six-per-em space</source>
          <target state="translated">シックスパーエム・スペース</target>
        </trans-unit>
        <trans-unit id="c30a22a0c2135ec0cec715a4a76c42dfb354a904" translate="yes" xml:space="preserve">
          <source>Size of binary</source>
          <target state="translated">バイナリのサイズ</target>
        </trans-unit>
        <trans-unit id="17247ca22728636fe023051e3ba32f701d781f3c" translate="yes" xml:space="preserve">
          <source>Size of file in bytes.</source>
          <target state="translated">ファイルのサイズをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="9e96264108fb9df35c85ec32347e8bf452fcc01f" translate="yes" xml:space="preserve">
          <source>Size of fragmented heap data, in words. This is data either created by messages sent to the process or by the Erlang BIFs. This amount depends on so many things that this field is usually uninteresting.</source>
          <target state="translated">フラグメント化されたヒープデータのサイズ。これはプロセスに送られたメッセージかErlangのBIFによって作られたデータです。この量は多くのことに依存しているので、このフィールドは通常は興味がありません。</target>
        </trans-unit>
        <trans-unit id="63716907875fcd1f66f968ad7e49958d3e42b56c" translate="yes" xml:space="preserve">
          <source>Size of fragmented heap data. This is data either created by messages sent to the process or by the Erlang BIFs. This amount depends on so many things that this field is utterly uninteresting.</source>
          <target state="translated">フラグメント化されたヒープデータのサイズ。これはプロセスに送られたメッセージかErlangのBIFによって作られたデータです。この量は多くのものに依存しているので、このフィールドは全く面白くありません。</target>
        </trans-unit>
        <trans-unit id="b3fb7549aa7480acb278edcf1e91f5f0f2152183" translate="yes" xml:space="preserve">
          <source>Size of the largest packet, in bytes, received by the socket.</source>
          <target state="translated">ソケットが受信した最大のパケットのサイズ(バイト単位)。</target>
        </trans-unit>
        <trans-unit id="08df95fdf35c7eec41f0a9c9d9c4b47e002ddbc5" translate="yes" xml:space="preserve">
          <source>Size of the largest packet, in bytes, sent from the socket.</source>
          <target state="translated">ソケットから送信される最大のパケットのサイズをバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="1c83c7295156dbb91f77bb4ba266a1a7c41f363a" translate="yes" xml:space="preserve">
          <source>Sizes of carriers allocated through &lt;code&gt;sys_alloc&lt;/code&gt; are decided based on the value of the &lt;code&gt;sys_alloc&lt;/code&gt; carrier size (&lt;code&gt;&lt;a href=&quot;#Muycs&quot;&gt;ycs&lt;/a&gt;&lt;/code&gt;) parameter. The size of a carrier is the least number of multiples of the value of parameter &lt;code&gt;ycs&lt;/code&gt; satisfying the request.</source>
          <target state="translated">&lt;code&gt;sys_alloc&lt;/code&gt; によって割り当てられるキャリアのサイズは、 &lt;code&gt;sys_alloc&lt;/code&gt; キャリアサイズ（ &lt;code&gt;&lt;a href=&quot;#Muycs&quot;&gt;ycs&lt;/a&gt;&lt;/code&gt; ）パラメータの値に基づいて決定されます。キャリアのサイズは、要求を満たすパラメーター &lt;code&gt;ycs&lt;/code&gt; の値の倍数の最小数です。</target>
        </trans-unit>
        <trans-unit id="7ed10f9c165e6ee4cd302a0c0a580f3f550fe00b" translate="yes" xml:space="preserve">
          <source>Sizes of multiblock carriers allocated through &lt;code id=&quot;mseg_mbc_sizes&quot;&gt;mseg_alloc&lt;/code&gt; are decided based on the following parameters:</source>
          <target state="translated">&lt;code id=&quot;mseg_mbc_sizes&quot;&gt;mseg_alloc&lt;/code&gt; を通じて割り当てられるマルチブロックキャリアのサイズは、次のパラメーターに基づいて決定されます。</target>
        </trans-unit>
        <trans-unit id="0bed184c65df7dacbe62f4d77eb0b8f8c5826dd1" translate="yes" xml:space="preserve">
          <source>Skeletons</source>
          <target state="translated">Skeletons</target>
        </trans-unit>
        <trans-unit id="0a9b668642be4f00b5d47877ce22cf6c2fb62125" translate="yes" xml:space="preserve">
          <source>Skip and Fail Hooks</source>
          <target state="translated">スキップフックとフェイルフック</target>
        </trans-unit>
        <trans-unit id="67e4cb5be30bed4914cbc885eac6aa27e1c067db" translate="yes" xml:space="preserve">
          <source>Skip the PLT check when running Dialyzer. This is useful when working with installed PLTs that never change.</source>
          <target state="translated">Dialyzerの実行時にPLTチェックをスキップします。これは、変更されることのないインストールされたPLTを使用して作業する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="7b52aa379772757b0fe4a78bce2ea1da242c9ad4" translate="yes" xml:space="preserve">
          <source>Skip this token completely.</source>
          <target state="translated">このトークンを完全にスキップします。</target>
        </trans-unit>
        <trans-unit id="74f1ab290e5643bdd12eabc9033247b063146a2e" translate="yes" xml:space="preserve">
          <source>Skips a term in the specified buffer; recursively skips elements of lists and tuples, so that a full term is skipped. This is a way to get the size of an Erlang term.</source>
          <target state="translated">リストやタプルの要素を再帰的にスキップし、完全な項をスキップします。これはErlangの項のサイズを取得する方法です。</target>
        </trans-unit>
        <trans-unit id="c5d1ad5d7d1fd7f9741f0b2668fe06f182b3e019" translate="yes" xml:space="preserve">
          <source>Skips the current code line and stop at the next line. If used on the last line in a function body, the function returns &lt;code&gt;skipped&lt;/code&gt;.</source>
          <target state="translated">現在のコード行をスキップして、次の行で停止します。関数本体の最後の行で使用すると、関数は &lt;code&gt;skipped&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="12872491886f1b08fbb3cf57173012f5dd4fec62" translate="yes" xml:space="preserve">
          <source>Skips the external DTD during parsing.</source>
          <target state="translated">解析中に外部DTDをスキップします。</target>
        </trans-unit>
        <trans-unit id="92835d057c07b90a27533d164ca25536f2c3c68f" translate="yes" xml:space="preserve">
          <source>Slave nodes on other hosts than the current one are started with the &lt;code&gt;rsh&lt;/code&gt; program. The user must be allowed to &lt;code&gt;rsh&lt;/code&gt; to the remote hosts without being prompted for a password. This can be arranged in a number of ways (for details, see the &lt;code&gt;rsh&lt;/code&gt; documentation). A slave node started on the same host as the master inherits certain environment values from the master, such as the current directory and the environment variables. For what can be assumed about the environment when a slave is started on another host, see the documentation for the &lt;code&gt;rsh&lt;/code&gt; program.</source>
          <target state="translated">現在のホスト以外のホストのスレーブノードは、 &lt;code&gt;rsh&lt;/code&gt; プログラムで起動されます。ユーザーは、パスワードの入力を求められることなく、リモートホストへの &lt;code&gt;rsh&lt;/code&gt; を許可されている必要があります。これはいくつかの方法で調整できます（詳細については、 &lt;code&gt;rsh&lt;/code&gt; のドキュメントを参照してください）。マスターと同じホストで開始されたスレーブノードは、現在のディレクトリや環境変数など、マスターから特定の環境値を継承します。スレーブが別のホストで起動されたときの環境について想定できることについては、 &lt;code&gt;rsh&lt;/code&gt; プログラムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="6fccbacb912585deb4397758d490994d0f2c6a92" translate="yes" xml:space="preserve">
          <source>Slave nodes on other hosts than the current one are started with the &lt;code&gt;ssh&lt;/code&gt; program. The user must be allowed to &lt;code&gt;ssh&lt;/code&gt; to the remote hosts without being prompted for a password. This can be arranged in a number of ways (for details, see the &lt;code&gt;ssh&lt;/code&gt; documentation). A slave node started on the same host as the master inherits certain environment values from the master, such as the current directory and the environment variables. For what can be assumed about the environment when a slave is started on another host, see the documentation for the &lt;code&gt;ssh&lt;/code&gt; program.</source>
          <target state="translated">現在のホスト以外のホスト上のスレーブノードは、 &lt;code&gt;ssh&lt;/code&gt; プログラムで起動されます。ユーザーは、パスワードの入力を求められることなく、リモートホストへの &lt;code&gt;ssh&lt;/code&gt; を許可されている必要があります。これは、さまざまな方法で調整できます（詳細については、 &lt;code&gt;ssh&lt;/code&gt; のドキュメントを参照してください）。マスターと同じホストで開始されたスレーブノードは、現在のディレクトリや環境変数など、マスターから特定の環境値を継承します。スレーブが別のホストで起動されたときの環境について想定できることについては、 &lt;code&gt;ssh&lt;/code&gt; プログラムのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f1716dbdd0f95ad310714f9fefb5093d293011f6" translate="yes" xml:space="preserve">
          <source>Slen</source>
          <target state="translated">Slen</target>
        </trans-unit>
        <trans-unit id="6950650642d0c097c0b9f5240ccad72b3af95d64" translate="yes" xml:space="preserve">
          <source>Slen=6</source>
          <target state="translated">Slen=6</target>
        </trans-unit>
        <trans-unit id="46e7b5151387b666d53e50322e1d0a7f9e148f90" translate="yes" xml:space="preserve">
          <source>Slider and radio buttons:</source>
          <target state="translated">スライダーとラジオボタン。</target>
        </trans-unit>
        <trans-unit id="f400bc734467b454d0e076beebad58eecf4cb7e0" translate="yes" xml:space="preserve">
          <source>Slower than &lt;code&gt;ERL_NIF_INTERNAL_HASH.&lt;/code&gt; It corresponds to &lt;code&gt;&lt;a href=&quot;erlang#phash2-1&quot;&gt;erlang:phash2/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ERL_NIF_INTERNAL_HASH.&lt;/code&gt; より遅い。 &lt;code&gt;&lt;a href=&quot;erlang#phash2-1&quot;&gt;erlang:phash2/1&lt;/a&gt;&lt;/code&gt; に対応しています。</target>
        </trans-unit>
        <trans-unit id="c74fd9714e38b26dbf7f58d75f93cfc977a05ba6" translate="yes" xml:space="preserve">
          <source>Small</source>
          <target state="translated">Small</target>
        </trans-unit>
        <trans-unit id="56bb7666ead8069c1504c97c55a171c4da5cbb93" translate="yes" xml:space="preserve">
          <source>Small Map</source>
          <target state="translated">スモールマップ</target>
        </trans-unit>
        <trans-unit id="27e0f4492a9daee17682a7168a304983487d7286" translate="yes" xml:space="preserve">
          <source>Small Server - skeleton for a simple server not using OTP.</source>
          <target state="translated">Small Server-OTP を使用しないシンプルなサーバのスケルトン。</target>
        </trans-unit>
        <trans-unit id="ab47f140f6431c36c5c0962034598b25caaa4c80" translate="yes" xml:space="preserve">
          <source>Small integer</source>
          <target state="translated">小整数</target>
        </trans-unit>
        <trans-unit id="615a21503b02e3adddcc1994014a16d4418ded1b" translate="yes" xml:space="preserve">
          <source>Small slowdown</source>
          <target state="translated">スモールスローダウン</target>
        </trans-unit>
        <trans-unit id="dcd3690ddcf80c023fa06b72b4a57ce718129939" translate="yes" xml:space="preserve">
          <source>Smallest (&lt;code&gt;mseg_alloc&lt;/code&gt;) multiblock carrier size (in kilobytes). See the description on how sizes for &lt;code&gt;mseg_alloc&lt;/code&gt; multiblock carriers are decided in section &lt;code&gt;&lt;a href=&quot;#mseg_mbc_sizes&quot;&gt; The alloc_util Framework&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">最小（ &lt;code&gt;mseg_alloc&lt;/code&gt; ）マルチブロックキャリアサイズ（キロバイト単位）。 &lt;code&gt;mseg_alloc&lt;/code&gt; マルチブロックキャリアのサイズがどのように決定されるかについては、 &lt;code&gt;&lt;a href=&quot;#mseg_mbc_sizes&quot;&gt; The alloc_util Framework&lt;/a&gt;&lt;/code&gt; セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="91ee6052934e3e6dab1195f8369c85835857eede" translate="yes" xml:space="preserve">
          <source>Smallest (&lt;code&gt;mseg_alloc&lt;/code&gt;) multiblock carrier size (in kilobytes). See the description on how sizes for &lt;code&gt;mseg_alloc&lt;/code&gt; multiblock carriers are decided in section &lt;code&gt;&lt;a href=&quot;#mseg_mbc_sizes&quot;&gt;The alloc_util Framework&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">最小（ &lt;code&gt;mseg_alloc&lt;/code&gt; ）マルチブロックキャリアサイズ（キロバイト単位）。 &lt;code&gt;mseg_alloc&lt;/code&gt; マルチブロックキャリアのサイズがセクション &lt;code&gt;&lt;a href=&quot;#mseg_mbc_sizes&quot;&gt;The alloc_util Framework&lt;/a&gt;&lt;/code&gt; 決定される方法の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="5bfaace8e249861b328e002295865f19586c544c" translate="yes" xml:space="preserve">
          <source>So after an authentication, the user name is not used anymore and has no influence.</source>
          <target state="translated">そのため、認証後はユーザー名は使われなくなり、影響力はありません。</target>
        </trans-unit>
        <trans-unit id="c85767e72613dbb1348877a02afcc58287018438" translate="yes" xml:space="preserve">
          <source>So far this I/O server is fairly generic (except for request &lt;code&gt;rewind&lt;/code&gt; handled in the main loop and the creation of an ETS table). Most I/O servers contain code similar to this one.</source>
          <target state="translated">これまでのところ、このI / Oサーバーはかなり一般的です（メインループで処理される要求の &lt;code&gt;rewind&lt;/code&gt; とETSテーブルの作成を除く）。ほとんどのI / Oサーバーには、このようなコードが含まれています。</target>
        </trans-unit>
        <trans-unit id="f5e4e0a5c86630b775fa459febe3da79f7ac4b59" translate="yes" xml:space="preserve">
          <source>So far, only functions that take funs as arguments have been described. More powerful functions, that themselves return funs, can also be written. The following examples illustrate these type of functions.</source>
          <target state="translated">これまでのところ、引数としてfunを取る関数だけが記述されています。それ自体が funs を返す、より強力な関数も書くことができます。以下の例は、これらのタイプの関数を説明しています。</target>
        </trans-unit>
        <trans-unit id="4510a9d36f72cd900065dc9e0203fb013dd0a81c" translate="yes" xml:space="preserve">
          <source>So instead of writing:</source>
          <target state="translated">だから、書く代わりに</target>
        </trans-unit>
        <trans-unit id="95e1e890c27bcd42db8ee2ad74018397c4317c7e" translate="yes" xml:space="preserve">
          <source>So now when you run &lt;code&gt;$ERL_TOP/erl.exe&lt;/code&gt;, you should have a debug compiled emulator, which you will see if you do a:</source>
          <target state="translated">したがって、 &lt;code&gt;$ERL_TOP/erl.exe&lt;/code&gt; を実行すると、デバッグコンパイルされたエミュレーターが存在するはずです。</target>
        </trans-unit>
        <trans-unit id="cf10922783071cba140f7011f79e6768bdc244c5" translate="yes" xml:space="preserve">
          <source>So this is a module, called &lt;code&gt;tut1&lt;/code&gt; that contains a function called &lt;code&gt;fac&amp;gt;&lt;/code&gt;, which takes one argument, &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">したがって、これは &lt;code&gt;tut1&lt;/code&gt; と呼ばれるモジュールで、1つの引数 &lt;code&gt;N&lt;/code&gt; をとる &lt;code&gt;fac&amp;gt;&lt;/code&gt; と呼ばれる関数が含まれています。</target>
        </trans-unit>
        <trans-unit id="52e40c1d81b442b8facdd40d0d3f89cf4a723cf9" translate="yes" xml:space="preserve">
          <source>So what does</source>
          <target state="translated">では何をするのかというと</target>
        </trans-unit>
        <trans-unit id="6ed68677aedf0efff05f0804b8f66e77084348e7" translate="yes" xml:space="preserve">
          <source>So what part of the mib is implemented? Basically the relevant statistic counters of the &lt;strong&gt;MedGwyGatewayStatsEntry&lt;/strong&gt;.</source>
          <target state="translated">では、MIBのどの部分が実装されているのでしょうか？基本的には、&lt;strong&gt;MedGwyGatewayStatsEntryの&lt;/strong&gt;関連する統計カウンター。</target>
        </trans-unit>
        <trans-unit id="71148c3a19e900debcb05c1f43dd71bf8e88606f" translate="yes" xml:space="preserve">
          <source>So, &lt;code&gt;Fun(Item)&lt;/code&gt; returning &lt;code&gt;[Item]&lt;/code&gt; is thereby semantically equivalent to returning &lt;code&gt;true&lt;/code&gt;, just as returning &lt;code&gt;[]&lt;/code&gt; is semantically equivalent to returning &lt;code&gt;false&lt;/code&gt;. But returning a list builds more garbage than returning an atom.</source>
          <target state="translated">したがって、 &lt;code&gt;[Item]&lt;/code&gt; を返す &lt;code&gt;Fun(Item)&lt;/code&gt; は、意味的に &lt;code&gt;true&lt;/code&gt; を返すことと同じです。これは、 &lt;code&gt;[]&lt;/code&gt; を返す &lt;code&gt;false&lt;/code&gt; が意味的にfalseを返すことと同じです。しかし、リストを返すと、アトムを返すよりもガベージが増えます。</target>
        </trans-unit>
        <trans-unit id="9f5e70766f91bd5c14eec201242bbc754b76a223" translate="yes" xml:space="preserve">
          <source>So, &lt;code&gt;inet_dns:(inet_dns:record_type(X))(X)&lt;/code&gt; converts any of these data structures into a &lt;code&gt;{Field,Value}&lt;/code&gt; list.</source>
          <target state="translated">したがって、 &lt;code&gt;inet_dns:(inet_dns:record_type(X))(X)&lt;/code&gt; は、これらのデータ構造のいずれかを &lt;code&gt;{Field,Value}&lt;/code&gt; リストに変換します。</target>
        </trans-unit>
        <trans-unit id="118864ac5d65e1e867b9e6fd4d4898c9132dc2c1" translate="yes" xml:space="preserve">
          <source>So, &lt;code&gt;{inch,3}&lt;/code&gt; denotes 3 inches and &lt;code&gt;{centimeter,5}&lt;/code&gt; denotes 5 centimeters. Now let us write a new program that converts centimeters to inches and conversely. Enter the following code in a file called &lt;code&gt;tut3.erl&lt;/code&gt;):</source>
          <target state="translated">したがって、 &lt;code&gt;{inch,3}&lt;/code&gt; は3インチを表し、 &lt;code&gt;{centimeter,5}&lt;/code&gt; は5センチメートルを表します。ここで、センチメートルをインチに、そして逆に変換する新しいプログラムを書いてみましょう。 &lt;code&gt;tut3.erl&lt;/code&gt; というファイルに次のコードを入力します。</target>
        </trans-unit>
        <trans-unit id="8193dbf214daf0d3f2898c600c59ec5be738c228" translate="yes" xml:space="preserve">
          <source>So, a conversion function must know not only one character at a time, but possibly the whole sentence, the natural language to translate to, the differences in input and output string length, and so on. Erlang/OTP has currently no Unicode &lt;code&gt;uppercase&lt;/code&gt;/&lt;code&gt;lowercase&lt;/code&gt; functionality with language specific handling, but publicly available libraries address these issues.</source>
          <target state="translated">したがって、変換関数は一度に1文字だけでなく、文全体、翻訳先の自然言語、入力文字列と出力文字列の長さの違いなども知っている必要があります。Erlang / OTPには現在、言語固有の処理を行うUnicodeの &lt;code&gt;uppercase&lt;/code&gt; / &lt;code&gt;lowercase&lt;/code&gt; 機能はありませんが、公的に利用可能なライブラリはこれらの問題に対処しています。</target>
        </trans-unit>
        <trans-unit id="77c7da51740ebf4aac184b154f2d3319539425a2" translate="yes" xml:space="preserve">
          <source>So, if you have followed the instructions above, when you start a bash shell, you should have an INCLUDE environment with a Windows style path, a LIB environment variable also in Windows style, and finally a PATH that let's you reach cl, makensis, javac etc from the command prompt (use &lt;code&gt;which cl&lt;/code&gt; etc to verify from bash).</source>
          <target state="translated">したがって、上記の手順に従っている場合、bashシェルを起動すると、Windowsスタイルのパスを含むINCLUDE環境、WindowsスタイルのLIB環境変数、そして最後にcl、makensisに到達するためのPATHが必要です。コマンドプロンプトからjavacなど（bashから確認するには、 &lt;code&gt;which cl&lt;/code&gt; などを使用）。</target>
        </trans-unit>
        <trans-unit id="a0f4a01e5dab52ff57ba0d29283590a6847f8015" translate="yes" xml:space="preserve">
          <source>So, in total we keep four trees of free descriptors for the super carrier; two for &lt;code&gt;sa&lt;/code&gt; and two for &lt;code&gt;sua&lt;/code&gt;. They all use the same red-black-tree implementation that support the different sorting orders used.</source>
          <target state="translated">したがって、合計で、スーパーキャリア用の無料記述子のツリーを4つ保持します。以下のための2つ &lt;code&gt;sa&lt;/code&gt; とのための2つ &lt;code&gt;sua&lt;/code&gt; 。それらはすべて、使用されるさまざまなソート順をサポートする同じ赤黒木実装を使用します。</target>
        </trans-unit>
        <trans-unit id="98a8abd15f6cc0422a4656dd44d3f70185751320" translate="yes" xml:space="preserve">
          <source>So, the value &lt;code&gt;#'StartMessage'{msgId=&quot;home&quot;,content=&quot;Any Printable String&quot;}&lt;/code&gt; is legal to encode as a &lt;code&gt;StartMessage&lt;/code&gt; value. However, the value &lt;code&gt;#'StartMessage'{msgId=&quot;remote&quot;, content=&quot;Some String&quot;}&lt;/code&gt; is illegal as the constraint in &lt;code&gt;StartMessage&lt;/code&gt; tells that when you have chosen a value from a specific object in object set &lt;code&gt;GENERAL-PROCEDURES&lt;/code&gt; in field &lt;code&gt;msgId&lt;/code&gt;, you must choose a value from that same object in the content field too. In this second case, it is to be any &lt;code&gt;INTEGER&lt;/code&gt; value.</source>
          <target state="translated">したがって、値 &lt;code&gt;#'StartMessage'{msgId=&quot;home&quot;,content=&quot;Any Printable String&quot;}&lt;/code&gt; &lt;code&gt;StartMessage&lt;/code&gt; 値としてエンコードすることは正当です。ただし、値 &lt;code&gt;#'StartMessage'{msgId=&quot;remote&quot;, content=&quot;Some String&quot;}&lt;/code&gt; は不正です &lt;code&gt;StartMessage&lt;/code&gt; の制約により、フィールド &lt;code&gt;msgId&lt;/code&gt; のオブジェクトセット &lt;code&gt;GENERAL-PROCEDURES&lt;/code&gt; の特定のオブジェクトから値を選択したことがわかります。、コンテンツフィールドでも同じオブジェクトから値を選択する必要があります。この2番目のケースでは、任意の &lt;code&gt;INTEGER&lt;/code&gt; 値になります。</target>
        </trans-unit>
        <trans-unit id="2bbdfa84f4bbd4e6020efbcbf6535245cdb559d3" translate="yes" xml:space="preserve">
          <source>So, we see that &lt;code&gt;foo:create_file_slow/2&lt;/code&gt; used very little time for its own execution. It spent most of its time in &lt;code&gt;file:close/1&lt;/code&gt;. The function &lt;code&gt;foo:create_file_slow/3&lt;/code&gt; that writes 3/4 of the file contents is the second biggest time thief.</source>
          <target state="translated">したがって、 &lt;code&gt;foo:create_file_slow/2&lt;/code&gt; は、それ自体の実行にほとんど時間を使用していません。ほとんどの時間を &lt;code&gt;file:close/1&lt;/code&gt; に費やしました。ファイルの内容の3/4を書き込む関数 &lt;code&gt;foo:create_file_slow/3&lt;/code&gt; は、2番目に大きな時間泥棒です。</target>
        </trans-unit>
        <trans-unit id="e186bfb95806558f8cb0695f1dbdea1ab9d233dc" translate="yes" xml:space="preserve">
          <source>So, you can always send Unicode data to the &lt;code&gt;standard_io&lt;/code&gt; device. Files, however, accept only Unicode code points beyond ISO Latin-1 if &lt;code&gt;encoding&lt;/code&gt; is set to something else than &lt;code&gt;latin1&lt;/code&gt;.</source>
          <target state="translated">したがって、Unicodeデータをいつでも &lt;code&gt;standard_io&lt;/code&gt; デバイスに送信できます。ただし、 &lt;code&gt;encoding&lt;/code&gt; が &lt;code&gt;latin1&lt;/code&gt; 以外に設定されている場合、ファイルはISO Latin-1を超えるUnicodeコードポイントのみを受け入れます。</target>
        </trans-unit>
        <trans-unit id="13488b4d38269ec5b0d0aadbf625ed4a6743ad33" translate="yes" xml:space="preserve">
          <source>Socket identifier returned from &lt;code&gt;&lt;a href=&quot;#open-0&quot;&gt;open/*&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#open-0&quot;&gt;open/*&lt;/a&gt;&lt;/code&gt; から返されたソケット識別子。</target>
        </trans-unit>
        <trans-unit id="b7583a9f0df518612f75b762f2220de65a949258" translate="yes" xml:space="preserve">
          <source>Socket interface.</source>
          <target state="translated">ソケットインターフェース。</target>
        </trans-unit>
        <trans-unit id="612f45129eba1638fe81aa4162ddaf53ddd263c4" translate="yes" xml:space="preserve">
          <source>Socket options to be used for this request.</source>
          <target state="translated">このリクエストに使用されるソケットオプション。</target>
        </trans-unit>
        <trans-unit id="508c36b3241ae34627fb1cadebb1f27b16e0f61a" translate="yes" xml:space="preserve">
          <source>Sockets</source>
          <target state="translated">Sockets</target>
        </trans-unit>
        <trans-unit id="a8fdd4f5d3041b4be9443232ec0200a5490ea7bb" translate="yes" xml:space="preserve">
          <source>Sockets are set 'non-blocking' when created, so this option is *not* available (as it would adversely effect the Erlang VM to set a socket 'blocking').</source>
          <target state="translated">ソケットは作成時に'ノンブロッキング'に設定されているので、このオプションは使えません*(Erlang VMがソケットを'ブロッキング'に設定すると悪影響を及ぼすので)。</target>
        </trans-unit>
        <trans-unit id="86def5ab9579842d4d2ad82dcea44ecfef2f7f83" translate="yes" xml:space="preserve">
          <source>Soft upgrade according to the OTP release concept is not straight forward for the server side, as subsystem channel processes are spawned by the &lt;code&gt;ssh&lt;/code&gt; application and hence added to its supervisor tree. The subsystem channels can be upgraded when upgrading the user application, if the callback functions can handle two versions of the state, but this function cannot be used in the normal way.</source>
          <target state="translated">サブシステムチャネルプロセスは &lt;code&gt;ssh&lt;/code&gt; アプリケーションによって生成され、そのスーパーバイザーツリーに追加されるため、OTPリリースの概念によるソフトアップグレードはサーバー側にとって単純なものではありません。サブシステムチャネルは、コールバック関数が2つのバージョンの状態を処理できる場合、ユーザーアプリケーションのアップグレード時にアップグレードできますが、この関数は通常の方法では使用できません。</target>
        </trans-unit>
        <trans-unit id="4c647435dd36e71d5d166b4756d5d3011047b867" translate="yes" xml:space="preserve">
          <source>Solaris 10, 11</source>
          <target state="translated">ソラリス</target>
        </trans-unit>
        <trans-unit id="624c844f2078405a61bb6ca548e78668f1dda2e4" translate="yes" xml:space="preserve">
          <source>Solaris 10. I have done limited testing on Solaris 11 and OpenIndiana release 151a, and both appear to work.</source>
          <target state="translated">Solaris 10。Solaris 11 と OpenIndiana リリース 151a で限定的なテストを行いましたが、どちらも動作しているようです。</target>
        </trans-unit>
        <trans-unit id="29fb3d807e57c89d0e80c7767fd4e811d0a2f43c" translate="yes" xml:space="preserve">
          <source>Solaris 9 is supported. The build requires a &lt;code&gt;gcc&lt;/code&gt; that has been configured to use Sun's assembler and linker. Using the GNU assembler but Sun's linker has been known to cause problems.</source>
          <target state="translated">Solaris 9がサポートされています。ビルドには、Sunのアセンブラーとリンカーを使用するように構成された &lt;code&gt;gcc&lt;/code&gt; が必要です。GNUアセンブラーを使用していますが、Sunのリンカーは問題を引き起こすことがわかっています。</target>
        </trans-unit>
        <trans-unit id="25503b712d04e9c9eb54dd4a937f841cf032dafe" translate="yes" xml:space="preserve">
          <source>Solaris Operation</source>
          <target state="translated">ソラリスえんざん</target>
        </trans-unit>
        <trans-unit id="ad98f7ac7fd5751dca0d8e7bc21baa0bc34cb03d" translate="yes" xml:space="preserve">
          <source>Solaris only. Defines if the service should be enabled (and disabled) inside (&lt;code&gt;true&lt;/code&gt;) or outside (&lt;code&gt;false&lt;/code&gt;) &lt;code&gt;os_sup&lt;/code&gt;. For backwards compatibility reasons, the default is &lt;code&gt;true&lt;/code&gt;. The recommended value is &lt;code&gt;false&lt;/code&gt;, as the Erlang emulator should normally not be run with &lt;code&gt;root&lt;/code&gt; privileges, as is required for enabling the service.</source>
          <target state="translated">Solarisのみ。 &lt;code&gt;os_sup&lt;/code&gt; の内部（ &lt;code&gt;true&lt;/code&gt; ）または外部（ &lt;code&gt;false&lt;/code&gt; ）でサービスを有効（および無効）にするかどうかを定義します。後方互換性の理由から、デフォルトは &lt;code&gt;true&lt;/code&gt; です。サービスを有効にするために必要なため、Erlangエミュレーターは通常 &lt;code&gt;root&lt;/code&gt; 特権で実行すべきではないため、推奨値は &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f5ac99369ea24f03a02ebf82bb384ea26a5ac2c1" translate="yes" xml:space="preserve">
          <source>Solaris only. Defines the directory which contains the backup copy and the Erlang specific configuration files for &lt;code&gt;syslogd&lt;/code&gt;, and a named pipe to receive the messages from &lt;code&gt;syslogd&lt;/code&gt;. Default is &lt;code&gt;&quot;/etc&quot;&lt;/code&gt;.</source>
          <target state="translated">Solarisのみ。 &lt;code&gt;syslogd&lt;/code&gt; のバックアップコピーとErlang固有の構成ファイル、および &lt;code&gt;syslogd&lt;/code&gt; からメッセージを受信する名前付きパイプを含むディレクトリを定義します。デフォルトは &lt;code&gt;&quot;/etc&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4e77b966f6e049572ff21e8d379d0e22fd8916f9" translate="yes" xml:space="preserve">
          <source>Solaris only. Defines the full name of the configuration file for &lt;code&gt;syslogd&lt;/code&gt;. Default is &lt;code&gt;&quot;/etc/syslog.conf&quot;&lt;/code&gt;.</source>
          <target state="translated">Solarisのみ。 &lt;code&gt;syslogd&lt;/code&gt; の構成ファイルの完全な名前を定義します。デフォルトは &lt;code&gt;&quot;/etc/syslog.conf&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b4df00f7a4ca6b0ced1b2110bf8eb636b19a4625" translate="yes" xml:space="preserve">
          <source>Solaris takes about 17 MB of RAM on a system with 64 MB of total RAM. This leaves about 47 MB for the applications. If the system uses swapping, these figures cannot be improved because unnecessary daemon processes are swapped out. However, if swapping is disabled, or if the swap space is of limited resource in the system, it becomes necessary to kill off unnecessary daemon processes.</source>
          <target state="translated">Solaris は、総 RAM が 64 MB のシステムで約 17 MB の RAM を使用します。これは、アプリケーションのために約 47 MB を残します。システムがスワップを使用している場合、不要なデーモンプロセスがスワップアウトされるため、これらの数値を改善することはできません。しかし、スワッピングが無効になっている場合や、システム内のスワップスペースが限られたリソースである場合には、不要なデーモンプロセスを削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="2dd11de5ff1de725ae1b4e7108ef3240598ba71d" translate="yes" xml:space="preserve">
          <source>Solaris: Solaris 10 (32-bit and 64-bit) and 9 (32-bit) are supported. The build requires a version of the GNU C compiler (gcc) that has been configured to use the GNU assembler (gas). Sun's x86 assembler is emphatically &lt;strong&gt;not&lt;/strong&gt; supported.</source>
          <target state="translated">Solaris：Solaris 10（32ビットおよび64ビット）および9（32ビット）がサポートされています。ビルドには、GNUアセンブラ（ガス）を使用するように構成されたバージョンのGNU Cコンパイラ（gcc）が必要です。Sunのx86アセンブラは、&lt;strong&gt;明らかに&lt;/strong&gt;サポートされて&lt;strong&gt;いません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="2bb6e4a6032e5fc32bd3a65f34d4f5ea5aa85068" translate="yes" xml:space="preserve">
          <source>Some BIFs can be used in guard tests and are marked with &quot;Allowed in guard tests&quot;.</source>
          <target state="translated">BIFの中には、ガードテストで使用できるものがあり、「ガードテストで使用可能」と記載されているものもあります。</target>
        </trans-unit>
        <trans-unit id="80f012db159278267232139e217072696541f481" translate="yes" xml:space="preserve">
          <source>Some OS (Windows) do not differentiate between read and write events. The callback for a fired event then only depends on the value of &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">一部のOS（Windows）は、読み取りイベントと書き込みイベントを区別しません。発生したイベントのコールバックは、 &lt;code&gt;mode&lt;/code&gt; の値にのみ依存します。</target>
        </trans-unit>
        <trans-unit id="37d2998d34aa405bea2f6df724f8a6563ad615eb" translate="yes" xml:space="preserve">
          <source>Some additional BIFs that apply to port drivers: &lt;code&gt;port_control/3&lt;/code&gt; and &lt;code&gt;erlang:port_call/3&lt;/code&gt;.</source>
          <target state="translated">ポートドライバーに適用されるいくつかの追加の &lt;code&gt;port_control/3&lt;/code&gt; ：port_control / 3および &lt;code&gt;erlang:port_call/3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c7eb12c2180def045a657bcad996c0a0423ae416" translate="yes" xml:space="preserve">
          <source>Some applications are automatically skipped if the dependencies aren't met. Here is a list of utilities needed for those applications. You will also find the utilities needed for building the documentation.</source>
          <target state="translated">依存関係が満たされていないと自動的にスキップされるアプリケーションもあります。これらのアプリケーションに必要なユーティリティのリストです。ドキュメントの作成に必要なユーティリティもあります。</target>
        </trans-unit>
        <trans-unit id="a0e4a35d0c545ba54a56f4dd7085a38c13dd5a2a" translate="yes" xml:space="preserve">
          <source>Some applications need to wait for certain tables to be accessible to do useful work. &lt;code&gt;mnesia:wait_for_tables/2&lt;/code&gt; either hangs until all tables in &lt;code&gt;TabList&lt;/code&gt; are accessible, or until &lt;code&gt;timeout&lt;/code&gt; is reached.</source>
          <target state="translated">一部のアプリケーションは、有用な作業を行うために特定のテーブルがアクセス可能になるのを待つ必要があります。 &lt;code&gt;mnesia:wait_for_tables/2&lt;/code&gt; は、 &lt;code&gt;TabList&lt;/code&gt; のすべてのテーブルがアクセス可能になるまで、または &lt;code&gt;timeout&lt;/code&gt; に達するまでハングします。</target>
        </trans-unit>
        <trans-unit id="4c9aaa2e5d4bc3afe4ced1e01253d9da9c7949c5" translate="yes" xml:space="preserve">
          <source>Some applications that allow their users to supply patterns can wish to restrict them to non-UTF data for security reasons. If option &lt;code&gt;never_utf&lt;/code&gt; is set at compile time, (*UTF), and so on, are not allowed, and their appearance causes an error.</source>
          <target state="translated">ユーザーがパターンを提供できるようにする一部のアプリケーションでは、セキュリティ上の理由から、それらを非UTFデータに制限したい場合があります。コンパイル時にオプション &lt;code&gt;never_utf&lt;/code&gt; が設定されている場合（* UTF）などは許可されず、それらが出現するとエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="4b281a8092f67f1c1b221a783644996df2f7b610" translate="yes" xml:space="preserve">
          <source>Some built-in filters exist. These are defined in &lt;code&gt;&lt;a href=&quot;logger_filters&quot;&gt;logger_filters(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">いくつかの組み込みフィルターが存在します。これらは &lt;code&gt;&lt;a href=&quot;logger_filters&quot;&gt;logger_filters(3)&lt;/a&gt;&lt;/code&gt; で定義されています。</target>
        </trans-unit>
        <trans-unit id="e24f1f8d2061556727b8d32e994209de9af0eb7d" translate="yes" xml:space="preserve">
          <source>Some built-in filters exist. These are defined in &lt;code&gt;&lt;a href=&quot;logger_filters&quot;&gt;logger_filters&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">いくつかの組み込みフィルターが存在します。これらは &lt;code&gt;&lt;a href=&quot;logger_filters&quot;&gt;logger_filters&lt;/a&gt;&lt;/code&gt; で定義されています。</target>
        </trans-unit>
        <trans-unit id="7e5617bd0f20199d75624f4c99a4f91fbc316df7" translate="yes" xml:space="preserve">
          <source>Some communication is synchronous. If broken down into pieces, a synchronous communication operation consists of two asynchronous signals; one request signal and one reply signal. An example of such a synchronous communication is a call to &lt;code&gt;&lt;a href=&quot;erlang#process_info-2&quot;&gt; erlang:process_info/2&lt;/a&gt;&lt;/code&gt; when the first argument is not &lt;code&gt;self()&lt;/code&gt;. The caller sends an asynchronous signal requesting information, and then waits for the reply signal containing the requested information. When the request signal reaches its destination, the destination process replies with the requested information.</source>
          <target state="translated">一部の通信は同期しています。細かく分割すると、同期通信操作は2つの非同期信号で構成されます。1つの要求信号と1つの応答信号。このような同期通信の例は、最初の引数が &lt;code&gt;self()&lt;/code&gt; でない場合の &lt;code&gt;&lt;a href=&quot;erlang#process_info-2&quot;&gt; erlang:process_info/2&lt;/a&gt;&lt;/code&gt; の呼び出しです。呼び出し元は、情報を要求する非同期信号を送信し、要求された情報を含む応答信号を待ちます。要求シグナルが宛先に到達すると、宛先プロセスは要求された情報で応答します。</target>
        </trans-unit>
        <trans-unit id="7f7d0d246c8a5c5d27d0b39b1f60bb773efa7225" translate="yes" xml:space="preserve">
          <source>Some communication is synchronous. If broken down into pieces, a synchronous communication operation consists of two asynchronous signals; one request signal and one reply signal. An example of such a synchronous communication is a call to &lt;code&gt;erlang:process_info/2&lt;/code&gt; when the first argument is not &lt;code&gt;self()&lt;/code&gt;. The caller sends an asynchronous signal requesting information, and then waits for the reply signal containing the requested information. When the request signal reaches its destination, the destination process replies with the requested information.</source>
          <target state="translated">一部の通信は同期です。分割すると、同期通信操作は2つの非同期信号で構成されます。 1つの要求信号と1つの応答信号。このような同期通信の例は、最初の引数が &lt;code&gt;self()&lt;/code&gt; でない場合の &lt;code&gt;erlang:process_info/2&lt;/code&gt; の呼び出しです。呼び出し元は、情報を要求する非同期信号を送信し、要求された情報を含む応答信号を待ちます。要求信号が宛先に到達すると、宛先プロセスは要求された情報で応答します。</target>
        </trans-unit>
        <trans-unit id="3978ab6efced12cfbb61d20b2f971236e994634d" translate="yes" xml:space="preserve">
          <source>Some configuration parameters control the behavior of Reltool on system (&lt;code&gt;sys&lt;/code&gt;) level. Others provide control on application (&lt;code&gt;app&lt;/code&gt;) level and yet others are on module (&lt;code&gt;mod&lt;/code&gt;) level. Module level parameters override application level parameters and application level parameters override system level parameters. Escript &lt;code&gt;escript&lt;/code&gt; level parameters override system level parameters.</source>
          <target state="translated">一部の構成パラメーターは、システム（ &lt;code&gt;sys&lt;/code&gt; ）レベルでのReltoolの動作を制御します。アプリケーション（ &lt;code&gt;app&lt;/code&gt; ）レベルでの制御を提供するものと、モジュール（ &lt;code&gt;mod&lt;/code&gt; ）レベルでの制御を提供するものがあります。モジュールレベルのパラメーターはアプリケーションレベルのパラメーターをオーバーライドし、アプリケーションレベルのパラメーターはシステムレベルのパラメーターをオーバーライドします。Escriptは &lt;code&gt;escript&lt;/code&gt; レベルのパラメータオーバーライドシステム・レベルのパラメータを。</target>
        </trans-unit>
        <trans-unit id="618bfc8450660310d66e99090ee429bade92ad51" translate="yes" xml:space="preserve">
          <source>Some definitions:</source>
          <target state="translated">いくつかの定義があります。</target>
        </trans-unit>
        <trans-unit id="2f7a9488bf7c334ab0c6c89dafc10cc9d316b90d" translate="yes" xml:space="preserve">
          <source>Some dependencies can only be required in specific runtime scenarios. When such optional dependencies exist, these are specified and documented in the corresponding &quot;App&quot; documentation of the specific application.</source>
          <target state="translated">依存関係の中には、特定のランタイムシナリオでのみ必要とされるものがあります。そのようなオプションの依存関係が存在する場合、それらは特定のアプリケーションの対応する &quot;App &quot;ドキュメントで指定され、文書化されます。</target>
        </trans-unit>
        <trans-unit id="68757bf72df0b2bd8846b22de1a19877ad71f237" translate="yes" xml:space="preserve">
          <source>Some driver calls, such as &lt;code&gt;driver_enq_binary&lt;/code&gt;, increment the driver reference count, and others, such as &lt;code&gt;driver_deq&lt;/code&gt; decrement it.</source>
          <target state="translated">以下のようないくつかのドライバコール、 &lt;code&gt;driver_enq_binary&lt;/code&gt; は、ドライバの参照カウントをインクリメントし、のような他、 &lt;code&gt;driver_deq&lt;/code&gt; はそれをデクリメントします。</target>
        </trans-unit>
        <trans-unit id="fae4f4ff86e0a96f567e91dd26cc69718fc3e566" translate="yes" xml:space="preserve">
          <source>Some drivers may not have the information of the number of affected rows available and then the return value may be &lt;code&gt;{updated, undefined}&lt;/code&gt;.</source>
          <target state="translated">一部のドライバーは、影響を受ける行の数の情報を利用できない場合があり、戻り値は &lt;code&gt;{updated, undefined}&lt;/code&gt; なる場合があります。</target>
        </trans-unit>
        <trans-unit id="c340244d6c4f199052de9779543a19d1cc478aeb" translate="yes" xml:space="preserve">
          <source>Some drivers may not have the information of the number of rows in the result set, then &lt;code&gt;NrRows&lt;/code&gt; will have the value &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">一部のドライバーは、結果セットの行数の情報を持たない場合があり、 &lt;code&gt;NrRows&lt;/code&gt; の値は &lt;code&gt;undefined&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="67a29222509223f881305b482bc65c2ab88a5b4c" translate="yes" xml:space="preserve">
          <source>Some effort is made to keep the trace clean from unnecessary trace messages; tracing is started and stopped from a spawned process while the &lt;code&gt;erlang:apply/2&lt;/code&gt; call is made in the current process, only surrounded by &lt;code&gt;receive&lt;/code&gt; and &lt;code&gt;send&lt;/code&gt; statements towards the trace starting process. The trace starting process exits when not needed any more.</source>
          <target state="translated">不要なトレースメッセージからトレースをクリーンに保つために、いくつかの努力が払われています。現在のプロセスで &lt;code&gt;erlang:apply/2&lt;/code&gt; 呼び出しが行われている間、生成されたプロセスからトレースが開始および停止され、トレース開始プロセスへの &lt;code&gt;receive&lt;/code&gt; 文と &lt;code&gt;send&lt;/code&gt; 文によってのみ囲まれます。トレース開始プロセスは、不要になったときに終了します。</target>
        </trans-unit>
        <trans-unit id="496abb379f44739b88c8e58701ff98fc41a88ab7" translate="yes" xml:space="preserve">
          <source>Some equalities: &lt;code&gt;[node()] = nodes(this)&lt;/code&gt;, &lt;code&gt;nodes(connected) = nodes([visible, hidden])&lt;/code&gt;, and &lt;code&gt;nodes() = nodes(visible)&lt;/code&gt;.</source>
          <target state="translated">いくつかの等式： &lt;code&gt;[node()] = nodes(this)&lt;/code&gt; 、 &lt;code&gt;nodes(connected) = nodes([visible, hidden])&lt;/code&gt; 、および &lt;code&gt;nodes() = nodes(visible)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="26855bd5f1d5d80dd65d606ab5f637e7c6c21e35" translate="yes" xml:space="preserve">
          <source>Some errors are opaque and can only be interpreted by passing them to function &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt;, but some can be interpreted directly:</source>
          <target state="translated">一部のエラーは不透明で、関数 &lt;code&gt;&lt;a href=&quot;#format_error-1&quot;&gt;format_error/1&lt;/a&gt;&lt;/code&gt; に渡すことによってのみ解釈できますが、一部は直接解釈できます。</target>
        </trans-unit>
        <trans-unit id="0125a70ff3f4339d6599111237d60e6049101ad8" translate="yes" xml:space="preserve">
          <source>Some events, such as messages, are directed from some actor to another. Other events (termed actions) may be undirected and only have one actor.</source>
          <target state="translated">メッセージのようないくつかのイベントは、あるアクターから別のアクターに指示されます。他のイベント(アクションと呼ばれる)は無指向で、1つのアクタのみを持っている場合があります。</target>
        </trans-unit>
        <trans-unit id="76ad8817c1327c1b7086ac60c66dfe886f7bfd0a" translate="yes" xml:space="preserve">
          <source>Some examples are provided in the &lt;code&gt;&lt;a href=&quot;http_client&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">いくつかの例が &lt;code&gt;&lt;a href=&quot;http_client&quot;&gt;Inets User's Guide&lt;/a&gt;&lt;/code&gt; で提供されています。</target>
        </trans-unit>
        <trans-unit id="2f8b1001c872fc59d3163a5b2d66238174a5dc51" translate="yes" xml:space="preserve">
          <source>Some examples are suitable uses for persistent terms are:</source>
          <target state="translated">持続的な用語の適切な使用例としては、次のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="513e710823d55696dc981caf342f105faed53e3e" translate="yes" xml:space="preserve">
          <source>Some file operation failed for &lt;code&gt;File&lt;/code&gt;. &lt;code&gt;Posix&lt;/code&gt; is an atom named from the Posix error codes, such as &lt;code&gt;enoent&lt;/code&gt;, &lt;code&gt;eacces&lt;/code&gt;, or &lt;code&gt;eisdir&lt;/code&gt;. See &lt;code&gt;file(3)&lt;/code&gt; in Kernel.</source>
          <target state="translated">一部のファイル操作が失敗しました &lt;code&gt;File&lt;/code&gt; 。 &lt;code&gt;Posix&lt;/code&gt; は、 &lt;code&gt;enoent&lt;/code&gt; 、 &lt;code&gt;eacces&lt;/code&gt; 、eisdirなどのPosixエラーコードから名前が付けられたアトム &lt;code&gt;eisdir&lt;/code&gt; 。カーネルの &lt;code&gt;file(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="0121d7a46586e8ed0bc5fae7d24a808f5944d15f" translate="yes" xml:space="preserve">
          <source>Some file operation failed, as for the previous item in the list.</source>
          <target state="translated">リストの前の項目と同様に、一部のファイル操作に失敗しました。</target>
        </trans-unit>
        <trans-unit id="5f22fa362b8d49f640a721aaa96c04f811728ae0" translate="yes" xml:space="preserve">
          <source>Some final advice:</source>
          <target state="translated">最終的なアドバイスをいくつか。</target>
        </trans-unit>
        <trans-unit id="8585f49555109af88209e7c1d968d2a4b955eec0" translate="yes" xml:space="preserve">
          <source>Some functions allow for an</source>
          <target state="translated">一部の機能では</target>
        </trans-unit>
        <trans-unit id="cf6762de9e6f3e6c78bcb67fccdec2635330cfb2" translate="yes" xml:space="preserve">
          <source>Some functions in Erlang are not meant to return; either because they define servers or because they are used to throw exceptions, as in the following function:</source>
          <target state="translated">Erlangのいくつかの関数は、サーバを定義しているか、例外を投げるために使われているかのどちらかです。</target>
        </trans-unit>
        <trans-unit id="354d82bac53c31a6353de08652df5f12865d65b4" translate="yes" xml:space="preserve">
          <source>Some functions, where noted, fail with reason &lt;code&gt;empty&lt;/code&gt; for an empty queue.</source>
          <target state="translated">一部の関数は、注記されている場合、空のキューのために理由が &lt;code&gt;empty&lt;/code&gt; で失敗します。</target>
        </trans-unit>
        <trans-unit id="0d038ce143e1cb1e24c1bac68d9127ee8fff8c16" translate="yes" xml:space="preserve">
          <source>Some hints that may get you started faster</source>
          <target state="translated">あなたがより早く始めることができるかもしれないいくつかのヒント</target>
        </trans-unit>
        <trans-unit id="72f6d806a1af7b326c8d125dd4956ae7df93d399" translate="yes" xml:space="preserve">
          <source>Some implementation details:</source>
          <target state="translated">いくつかの実装の詳細。</target>
        </trans-unit>
        <trans-unit id="4d43305e935c9725cef7c4090f238c14cc411d68" translate="yes" xml:space="preserve">
          <source>Some instructions, such as &lt;code&gt;select_val/3&lt;/code&gt;, essentially has a variable number of operands. Such instructions have a &lt;code&gt;{list,[...]}&lt;/code&gt; operand as their last operand in the BEAM assembly code. For example:</source>
          <target state="translated">&lt;code&gt;select_val/3&lt;/code&gt; などの一部の命令には、基本的に可変数のオペランドがあります。このような命令には、BEAMアセンブリコードの最後のオペランドとして &lt;code&gt;{list,[...]}&lt;/code&gt; オペランドがあります。例えば：</target>
        </trans-unit>
        <trans-unit id="88cc423d2346aa5d89a61bae8f27cf450553a78c" translate="yes" xml:space="preserve">
          <source>Some locks in the system are static and protects global resources, for example &lt;code&gt;bif_timers&lt;/code&gt; and the &lt;code&gt;run_queue&lt;/code&gt; locks. Other locks are dynamic and not necessarily long lived, for example process locks and ets-table locks. The statistics data from short lived locks can be stored separately when the locks are deleted. This behavior is by default turned off to save memory but can be turned on via &lt;code&gt;lcnt:rt_opt({copy_save, true})&lt;/code&gt;. The &lt;code&gt;lcnt:apply/1,2,3&lt;/code&gt; functions enables this behavior during profiling.</source>
          <target state="translated">システム内の一部のロックは静的で、 &lt;code&gt;bif_timers&lt;/code&gt; や &lt;code&gt;run_queue&lt;/code&gt; ロックなどのグローバルリソースを保護します。他のロックは動的であり、必ずしも長期間有効であるとは限りません。たとえば、プロセスロックやets-tableロックなどです。短期間のロックの統計データは、ロックが削除されたときに個別に保存できます。この動作は、デフォルトではメモリを節約するためにオフになっていますが、 &lt;code&gt;lcnt:rt_opt({copy_save, true})&lt;/code&gt; を介してオンにすることができます。 &lt;code&gt;lcnt:apply/1,2,3&lt;/code&gt; の機能は、プロファイル作成時に、この動作を可能にします。</target>
        </trans-unit>
        <trans-unit id="d49bf30d21ce869c86a9e6e341b1213d413618d4" translate="yes" xml:space="preserve">
          <source>Some modules are, however, changed to be explicitly Unicode-aware. These modules include:</source>
          <target state="translated">しかし、いくつかのモジュールは、明示的にUnicodeに対応するように変更されています。これらのモジュールには以下のようなものがあります。</target>
        </trans-unit>
        <trans-unit id="c0dfb6529f706bbf7ab549e78cda1404fa38c5d3" translate="yes" xml:space="preserve">
          <source>Some native BIFs may need to get a consistent snapshot view of the active code. To do this it is important to only read &lt;code&gt;the_active_code_index&lt;/code&gt; one time and then use that index value for all code accessing during the BIF. If a load operation is executed in parallel, reading &lt;code&gt;the_active_code_index&lt;/code&gt; a second time might result in a different value, and thereby a different view of the code.</source>
          <target state="translated">一部のネイティブBIFは、アクティブなコードの一貫したスナップショットビューを取得する必要がある場合があります。これを行うには、 &lt;code&gt;the_active_code_index&lt;/code&gt; を1回だけ読み取り、BIF中にアクセスするすべてのコードにそのインデックス値を使用することが重要です。ロード操作が並行して実行される場合、 &lt;code&gt;the_active_code_index&lt;/code&gt; をもう一度読み取ると、値が異なり、コードのビューが異なる可能性があります。</target>
        </trans-unit>
        <trans-unit id="0623dd151085c4492286205a78688f85df58d3a3" translate="yes" xml:space="preserve">
          <source>Some notes about combined instructions</source>
          <target state="translated">組み合わされた命令についてのいくつかの注意事項</target>
        </trans-unit>
        <trans-unit id="c6f152dd4071f6ae051f303ae1eedc9c8f2bd8e4" translate="yes" xml:space="preserve">
          <source>Some of the available &lt;code&gt;configure&lt;/code&gt; options are:</source>
          <target state="translated">使用可能な &lt;code&gt;configure&lt;/code&gt; オプションには、次のものがあります。</target>
        </trans-unit>
        <trans-unit id="e645b0f6736a3232d2755056481c36e947424569" translate="yes" xml:space="preserve">
          <source>Some of the decode functions need a pre-allocated buffer. This buffer must be allocated large enough, and for non-compound types the &lt;code&gt;&lt;a href=&quot;#ei_get_type&quot;&gt;ei_get_type()&lt;/a&gt;&lt;/code&gt; function returns the size required (notice that for strings an extra byte is needed for the &lt;code&gt;NULL&lt;/code&gt;-terminator).</source>
          <target state="translated">一部のデコード関数には、事前に割り当てられたバッファが必要です。このバッファには十分な大きさを割り当てる必要があり、非複合型の場合、 &lt;code&gt;&lt;a href=&quot;#ei_get_type&quot;&gt;ei_get_type()&lt;/a&gt;&lt;/code&gt; 関数は必要なサイズを返します（文字列の場合、 &lt;code&gt;NULL&lt;/code&gt; ターミネータに追加のバイトが必要であることに注意してください）。</target>
        </trans-unit>
        <trans-unit id="da87bf2715c3c501af0cfb153f102fd46a742fdf" translate="yes" xml:space="preserve">
          <source>Some of the decode functions need a pre-allocated buffer. This buffer must be allocated large enough, and for non-compound types the &lt;code&gt;ei_get_type()&lt;/code&gt; function returns the size required (notice that for strings an extra byte is needed for the &lt;code&gt;NULL&lt;/code&gt;-terminator).</source>
          <target state="translated">一部のデコード関数には、事前に割り当てられたバッファが必要です。このバッファには十分な大きさを割り当てる必要があり、非複合型の場合、 &lt;code&gt;ei_get_type()&lt;/code&gt; 関数は必要なサイズを返します（文字列の場合、 &lt;code&gt;NULL&lt;/code&gt; ターミネータに追加のバイトが必要になることに注意してください）。</target>
        </trans-unit>
        <trans-unit id="50a19878495c9175717bcac71b2941e4ab49b575" translate="yes" xml:space="preserve">
          <source>Some of the function has no defined return value (&lt;code&gt;void()&lt;/code&gt;), they can of course return anything. But the functions that do have specified return value(s) &lt;strong&gt;must&lt;/strong&gt; adhere to this. None of the functions can use exit of throw to return.</source>
          <target state="translated">一部の関数には戻り値が定義されていません（ &lt;code&gt;void()&lt;/code&gt; ）。もちろん、何でも返すことができます。ただし、戻り値が指定されている関数は、これに準拠する&lt;strong&gt;必要があり&lt;/strong&gt;ます。どの関数も、throwの出口を使用して戻ることはできません。</target>
        </trans-unit>
        <trans-unit id="58c4297bbd79b22aab207521ab54898a45f07587" translate="yes" xml:space="preserve">
          <source>Some of the functions take a parameter of type &lt;code&gt;ErlDrvBinary&lt;/code&gt;, a driver binary. It is to be both allocated and freed by the caller. Using a binary directly avoids one extra copying of data.</source>
          <target state="translated">一部の関数は、ドライバーバイナリであるタイプ &lt;code&gt;ErlDrvBinary&lt;/code&gt; のパラメーターを受け取ります。呼び出し元によって割り当てられ、解放されます。バイナリを直接使用すると、データの余分なコピーが1つ回避されます。</target>
        </trans-unit>
        <trans-unit id="001a161f565b29818bbd7f20b13e46a85a712341" translate="yes" xml:space="preserve">
          <source>Some of the functions use a &lt;strong&gt;match specification&lt;/strong&gt;, &lt;code&gt;match_spec&lt;/code&gt;. For a brief explanation, see &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt;. For a detailed description, see section &lt;code&gt; Match Specifications in Erlang&lt;/code&gt; in ERTS User's Guide.</source>
          <target state="translated">機能の一部が使用&lt;strong&gt;マッチの仕様を&lt;/strong&gt;、 &lt;code&gt;match_spec&lt;/code&gt; 。簡単な説明については、 &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt; を参照してください。詳細な説明については、 『ERTS User's Guide』の「 &lt;code&gt; Match Specifications in Erlang&lt;/code&gt; MatchSpecifications 」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="6ad34f68080f1adaf7546e5395d3ecdc52cbeebe" translate="yes" xml:space="preserve">
          <source>Some of the functions use a &lt;strong&gt;match specification&lt;/strong&gt;, &lt;code&gt;match_spec&lt;/code&gt;. For a brief explanation, see &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt;. For a detailed description, see section &lt;code&gt;Match Specifications in Erlang&lt;/code&gt; in ERTS User's Guide.</source>
          <target state="translated">機能の一部が使用&lt;strong&gt;マッチの仕様を&lt;/strong&gt;、 &lt;code&gt;match_spec&lt;/code&gt; 。簡単な説明については、 &lt;code&gt;&lt;a href=&quot;#select-2&quot;&gt;select/2&lt;/a&gt;&lt;/code&gt; を参照してください。詳細については、「ERTSユーザーガイド」の「 &lt;code&gt;Match Specifications in Erlang&lt;/code&gt; 」を参照してください。</target>
        </trans-unit>
        <trans-unit id="8d5d8e22f3613061ec1244d11b0b7d37b626a6c9" translate="yes" xml:space="preserve">
          <source>Some of the functions use the process dictionary variable &lt;code&gt;random_seed&lt;/code&gt; to remember the current seed.</source>
          <target state="translated">一部の関数は、プロセスディクショナリ変数 &lt;code&gt;random_seed&lt;/code&gt; を使用して、現在のシードを記憶します。</target>
        </trans-unit>
        <trans-unit id="6775990a8a6aa5573ab69d179177f07666ac31c3" translate="yes" xml:space="preserve">
          <source>Some of the general string functions can seem to overlap each other. The reason is that this string package is the combination of two earlier packages and all functions of both packages have been retained.</source>
          <target state="translated">一般的な文字列関数の中には、互いに重複しているように見えるものがあります。これは、この文字列パッケージが以前の 2 つのパッケージを組み合わせたもので、 両方のパッケージのすべての関数が保持されているためです。</target>
        </trans-unit>
        <trans-unit id="d7eb347b3644f1948715a42c0af4d0cc7dba6261" translate="yes" xml:space="preserve">
          <source>Some of the most frequently used instructions are described in this section. The complete list of instructions is included in the &lt;code&gt;appup(4)&lt;/code&gt; manual page in SASL.</source>
          <target state="translated">このセクションでは、最も頻繁に使用される指示のいくつかについて説明します。手順の完全なリストは、SASLの &lt;code&gt;appup(4)&lt;/code&gt; マニュアルページに含まれています。</target>
        </trans-unit>
        <trans-unit id="79ec577256d81f891e7d0017206b7c2060aadb91" translate="yes" xml:space="preserve">
          <source>Some of the new BIFs on some systems, perhaps surprisingly, return negative integer values on a newly started runtime system. This is not a bug, but a memory use optimization.</source>
          <target state="translated">いくつかのシステム上の新しいBIFの中には、おそらく驚くべきことに、新しく起動したランタイムシステムで負の整数値を返すものがあります。これはバグではなく、メモリ使用の最適化です。</target>
        </trans-unit>
        <trans-unit id="684eb1657854da03a2d8a0600a6a92dd5cd4fbc5" translate="yes" xml:space="preserve">
          <source>Some of the send options (&lt;code&gt;community&lt;/code&gt;, &lt;code&gt;sec_model&lt;/code&gt;, &lt;code&gt;sec_name&lt;/code&gt;, &lt;code&gt;sec_level&lt;/code&gt; and &lt;code&gt;max_message_size&lt;/code&gt;) are &lt;code&gt;override options&lt;/code&gt;. That is, for &lt;strong&gt;this&lt;/strong&gt; request, they override any configuration done when the agent was registered.</source>
          <target state="translated">一部の送信オプション（ &lt;code&gt;community&lt;/code&gt; 、 &lt;code&gt;sec_model&lt;/code&gt; 、 &lt;code&gt;sec_name&lt;/code&gt; 、 &lt;code&gt;sec_level&lt;/code&gt; 、 &lt;code&gt;max_message_size&lt;/code&gt; ）は、 &lt;code&gt;override options&lt;/code&gt; です。つまり、&lt;strong&gt;この&lt;/strong&gt;リクエストでは、エージェントが登録されたときに行われた構成を上書きします。</target>
        </trans-unit>
        <trans-unit id="960c5649731f1c53a1352fb9839c4bd38b2e8266" translate="yes" xml:space="preserve">
          <source>Some of the tests that come with erlang use native code to test. This means that when cross compiling erlang you also have to cross compile test suites in order to run tests on the target host. To do this you first have to release the tests as usual.</source>
          <target state="translated">erlangに付属しているテストの中にはネイティブコードを使ってテストするものもあります。つまり、erlangをクロスコンパイルするとき、ターゲットホストでテストを実行するためにテストスイートもクロスコンパイルしなければならないということです。これを行うには、まず通常通りにテストをリリースしなければなりません。</target>
        </trans-unit>
        <trans-unit id="5b9c8cd590ef1853bc4a27f157c87d9f801d5e5f" translate="yes" xml:space="preserve">
          <source>Some of the warnings are optional, and can be turned on by specifying the appropriate option, described below.</source>
          <target state="translated">いくつかの警告はオプションであり、後述する適切なオプションを指定することで有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="5ce7c1dced54f61f871a3fa993365b98f52c0f88" translate="yes" xml:space="preserve">
          <source>Some of these messages are ripped from the call flow examples in an old version of the RFC and others are created to test a specific feature of megaco.</source>
          <target state="translated">これらのメッセージの中には、古いバージョンのRFCのコールフローの例から抜粋したものもあれば、megacoの特定の機能をテストするために作成されたものもあります。</target>
        </trans-unit>
        <trans-unit id="9b2e9cd0d4ac1ff0219bd38f99b5d6d5c7ac424a" translate="yes" xml:space="preserve">
          <source>Some of these values will override results of tests performed by &lt;code&gt;configure&lt;/code&gt;, and some will not be used until &lt;code&gt;configure&lt;/code&gt; is sure that it cannot figure the result out.</source>
          <target state="translated">これらの値の一部は、 &lt;code&gt;configure&lt;/code&gt; によって実行されたテストの結果を上書きし、一部は、 &lt;code&gt;configure&lt;/code&gt; が結果を理解できないことが確実になるまで使用されません。</target>
        </trans-unit>
        <trans-unit id="587d577c94caa5ad9d7c91012ed0b0688cd33fcd" translate="yes" xml:space="preserve">
          <source>Some operation, indicated by the term &lt;code&gt;When&lt;/code&gt;, failed on the master node &lt;code&gt;Master&lt;/code&gt; with the specified error reason &lt;code&gt;Reason&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;When&lt;/code&gt; という用語で示される一部の操作が、指定されたエラー理由 &lt;code&gt;Reason&lt;/code&gt; でマスターノード &lt;code&gt;Master&lt;/code&gt; で失敗しました。</target>
        </trans-unit>
        <trans-unit id="f3bf1fddcf4e131ffd826621406c3070e7fa1d20" translate="yes" xml:space="preserve">
          <source>Some options are OS and OS version dependent. Do not use it unless you know what effect your option values will have on an TCP stream.</source>
          <target state="translated">オプションの中には、OSやOSのバージョンに依存するものがあります。オプションの値が TCP ストリームにどのような影響を与えるかを知っている場合以外は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="532a5fdf2519fa2810638913400161805aff1924" translate="yes" xml:space="preserve">
          <source>Some options can be specified to control the loading operation. The options are specified as a list of two-tuples. The tuples have the following values and meanings:</source>
          <target state="translated">読み込み動作を制御するために、いくつかのオプションを指定することができます。オプションは、2つのタプルのリストとして指定されます。タプルは以下の値と意味を持ちます。</target>
        </trans-unit>
        <trans-unit id="1c034056f93d9ab7b4d34e283dc77ed6d015f68f" translate="yes" xml:space="preserve">
          <source>Some options that can be passed to &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt; compile/2&lt;/a&gt;&lt;/code&gt; can also be set by special items at the start of a pattern. These are not Perl-compatible, but are provided to make these options accessible to pattern writers who are not able to change the program that processes the pattern. Any number of these items can appear, but they must all be together right at the start of the pattern string, and the letters must be in upper case.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt; compile/2&lt;/a&gt;&lt;/code&gt; に渡すことができるいくつかのオプションは、パターンの先頭にある特別な項目によって設定することもできます。これらはPerl互換ではありませんが、パターンを処理するプログラムを変更できないパターン作成者がこれらのオプションにアクセスできるようにするために提供されています。これらの項目はいくつでも表示できますが、パターン文字列の先頭ですべて一緒にする必要があり、文字は大文字にする必要があります。</target>
        </trans-unit>
        <trans-unit id="3d6d5d5c93f1282380fc46283af217c17178ad5f" translate="yes" xml:space="preserve">
          <source>Some options that can be passed to &lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt; can also be set by special items at the start of a pattern. These are not Perl-compatible, but are provided to make these options accessible to pattern writers who are not able to change the program that processes the pattern. Any number of these items can appear, but they must all be together right at the start of the pattern string, and the letters must be in upper case.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#compile-2&quot;&gt;compile/2&lt;/a&gt;&lt;/code&gt; に渡すことができるいくつかのオプションは、パターンの開始時に特別なアイテムによって設定することもできます。これらはPerl互換ではありませんが、パターンを処理するプログラムを変更できないパターン作成者がこれらのオプションにアクセスできるようにするために提供されています。これらの項目はいくつでも表示できますが、すべてパターン文字列の先頭にまとめて配置し、文字は大文字にする必要があります。</target>
        </trans-unit>
        <trans-unit id="ea452507ebfbea5c3fe7913973b6c4778548d7c0" translate="yes" xml:space="preserve">
          <source>Some parts of OTP has had limited VxWorks support, such as for example &lt;code&gt;erl_interface&lt;/code&gt;. This support is now deprecated and has also been scheduled for removal in OTP 23.</source>
          <target state="translated">&lt;code&gt;erl_interface&lt;/code&gt; など、OTPの一部ではVxWorksのサポートが制限されています。このサポートは現在非推奨であり、OTP23でも削除される予定です。</target>
        </trans-unit>
        <trans-unit id="6b9dfb977ffc1e82682a71d816c1ba159d76ec0a" translate="yes" xml:space="preserve">
          <source>Some parts of OTP were designed a very long time ago and did not necessarily take today's computing environments into account. In some cases the consequences of those design decisions are too severe. This may be performance wise, scalability wise, etc. If we deem the consequences too severe, we might introduce incompatible changes. This kind of incompatibility will not be introduced in a patch, but instead in the next release.</source>
          <target state="translated">OTP のいくつかの部分は、非常に昔に設計されたもので、必ずしも今日のコンピューティング環境を考慮に入れていないものがあります。いくつかのケースでは、それらの設計上の決定の結果があまりにも深刻なものとなっています。これは、パフォーマンスやスケーラビリティなどの観点からかもしれません。結果があまりにも厳しいと判断した場合、互換性のない変更を導入することになるかもしれません。この種の非互換性はパッチではなく、次のリリースで導入されます。</target>
        </trans-unit>
        <trans-unit id="893be26d407a35c51326a6edae88e5915e76231b" translate="yes" xml:space="preserve">
          <source>Some printouts during test case execution:</source>
          <target state="translated">テストケース実行中に印刷されるものがあります。</target>
        </trans-unit>
        <trans-unit id="1f278538d6488a2d8d8ae3fb2e1b8042afb8fd32" translate="yes" xml:space="preserve">
          <source>Some registry values are stored as strings with references to environment variables, for example, &lt;code&gt;%SystemRoot%Windows&lt;/code&gt;. &lt;code&gt;SystemRoot&lt;/code&gt; is an environment variable, and is to be replaced with its value. Function &lt;code&gt;&lt;a href=&quot;#expand-1&quot;&gt;expand/1&lt;/a&gt;&lt;/code&gt; is provided so that environment variables surrounded by &lt;code&gt;%&lt;/code&gt; can be expanded to their values.</source>
          <target state="translated">一部のレジストリ値は、 &lt;code&gt;%SystemRoot%Windows&lt;/code&gt; など、環境変数への参照を含む文字列として保存されます。 &lt;code&gt;SystemRoot&lt;/code&gt; は環境変数であり、その値に置き換えられます。 &lt;code&gt;%&lt;/code&gt; で囲まれた環境変数をその値に展開できるように、関数 &lt;code&gt;&lt;a href=&quot;#expand-1&quot;&gt;expand/1&lt;/a&gt;&lt;/code&gt; が提供されています。</target>
        </trans-unit>
        <trans-unit id="0599ae407bc9c76a4fca1d19b027f18a4d9b930a" translate="yes" xml:space="preserve">
          <source>Some shell printouts in the following examples are abbreviated for increased readability.</source>
          <target state="translated">以下の例では、読みやすさを向上させるために、いくつかのシェルプリントアウトを省略しています。</target>
        </trans-unit>
        <trans-unit id="692031fe2faf78976297b5de58de12f7ed174433" translate="yes" xml:space="preserve">
          <source>Some special cases of this functionality are presented in the next section.</source>
          <target state="translated">この機能のいくつかの特殊なケースについては、次のセクションで紹介します。</target>
        </trans-unit>
        <trans-unit id="55ed2a58ab9e0bd8975719e95e31944d94f92b07" translate="yes" xml:space="preserve">
          <source>Some special information, such as error reports, progress reports, and printouts written with &lt;code&gt;erlang:display/1&lt;/code&gt;, or &lt;code&gt;io:format/3&lt;/code&gt; specifically addressed to a receiver other than &lt;code&gt;standard_io&lt;/code&gt; (for example, the default group leader process &lt;code&gt;user&lt;/code&gt;).</source>
          <target state="translated">エラーレポート、進捗レポート、 &lt;code&gt;erlang:display/1&lt;/code&gt; または &lt;code&gt;io:format/3&lt;/code&gt; を使用して記述された印刷物など、特に &lt;code&gt;standard_io&lt;/code&gt; 以外の受信者（デフォルトのグループリーダープロセス &lt;code&gt;user&lt;/code&gt; ）に宛てられた特別な情報。</target>
        </trans-unit>
        <trans-unit id="cf417384297e3515a02ab56855cb40aa31fe1342" translate="yes" xml:space="preserve">
          <source>Some sub-directories are &lt;strong&gt;required&lt;/strong&gt;. Some sub-directories are &lt;strong&gt;optional&lt;/strong&gt;, meaning that it should only be used if the application itself requires it. Finally, some sub-directories are &lt;strong&gt;recommended&lt;/strong&gt;, meaning it is encouraged that it is used and used as described here. For example, both documentation and tests are encouraged to exist in an application for it to be deemed a proper OTP application.</source>
          <target state="translated">いくつかのサブディレクトリが&lt;strong&gt;必要です&lt;/strong&gt;。一部のサブディレクトリは&lt;strong&gt;オプションです&lt;/strong&gt;。つまり、アプリケーション自体で必要な場合にのみ使用する必要があります。最後に、いくつかのサブディレクトリが&lt;strong&gt;推奨&lt;/strong&gt;されます。つまり、ここで説明されているように使用することをお勧めします。たとえば、適切なOTPアプリケーションと見なされるように、ドキュメントとテストの両方をアプリケーションに含めることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c44b50783046445aa2fac90bdff5c889ef6680d4" translate="yes" xml:space="preserve">
          <source>Some tabs contain a left-hand menu where subitems of the information area can be selected. Click one of the rows, and the information is displayed in the right-hand information area.</source>
          <target state="translated">いくつかのタブには、情報領域のサブアイテムを選択できる左側のメニューがあります。行のいずれかをクリックすると、右側の情報エリアに情報が表示されます。</target>
        </trans-unit>
        <trans-unit id="0076c2c8aefb7261b0fcf3532f34d775d0493fda" translate="yes" xml:space="preserve">
          <source>Some terminology is needed: the certificate presents hostname(s) on which it is valid. Those are called</source>
          <target state="translated">いくつかの専門用語が必要です:証明書は有効なホスト名を提示します。これらを</target>
        </trans-unit>
        <trans-unit id="63b274f76c6915b5c4efc76b8f955fd7472ef3ca" translate="yes" xml:space="preserve">
          <source>Some things have changed from &lt;code&gt;pg_sync.c&lt;/code&gt;: we use the entry &lt;code&gt;ready_io&lt;/code&gt; for &lt;code&gt;ready_input&lt;/code&gt; and &lt;code&gt;ready_output&lt;/code&gt;, which is called from the emulator only when there is input to be read from the socket. (Actually, the socket is used in a &lt;code&gt;select&lt;/code&gt; function inside the emulator, and when the socket is signaled, indicating there is data to read, the &lt;code&gt;ready_input&lt;/code&gt; entry is called. More about this below.)</source>
          <target state="translated">&lt;code&gt;pg_sync.c&lt;/code&gt; からいくつかの変更がありました &lt;code&gt;ready_input&lt;/code&gt; および &lt;code&gt;ready_output&lt;/code&gt; には、エントリ &lt;code&gt;ready_io&lt;/code&gt; を使用します。これは、ソケットから読み取られる入力がある場合にのみエミュレーターから呼び出されます。（実際には、ソケットはエミュレーター内の &lt;code&gt;select&lt;/code&gt; 関数で使用され、ソケットに信号が送られ、読み取るデータがあることを示すと、 &lt;code&gt;ready_input&lt;/code&gt; エントリーが呼び出されます。これについては、以下で詳しく説明します。）</target>
        </trans-unit>
        <trans-unit id="c24f9271e656a8d0dd4d8378ae6c5abe42b2d5bf" translate="yes" xml:space="preserve">
          <source>Some time later the user takes another snapshot and calculates scheduler utilization per scheduler, for example:</source>
          <target state="translated">しばらくして、ユーザーは別のスナップショットを取得して、例えばスケジューラごとのスケジューラの使用率を計算します。</target>
        </trans-unit>
        <trans-unit id="0f8abc0c839caa7196a71b3ea51b8663752766ec" translate="yes" xml:space="preserve">
          <source>Some tips on what to check when the emulator does not seem to receive the terms that you send:</source>
          <target state="translated">エミュレータが送信した条件を受信していないように見えるときに確認するためのいくつかのヒント。</target>
        </trans-unit>
        <trans-unit id="13a7a6036cf3e3a8f2567862912a17463e2aaf70" translate="yes" xml:space="preserve">
          <source>Some truths seem to live on well beyond their best-before date, perhaps because &quot;information&quot; spreads faster from person-to-person than a single release note that says, for example, that body-recursive calls have become faster.</source>
          <target state="translated">いくつかの真実は、その賞味期限を超えて生き続けているように見えるが、それはおそらく、例えば、ボディ再帰的な呼び出しが速くなったというような単一のリリースノートよりも、「情報」が人から人へとより速く広がるからだろう。</target>
        </trans-unit>
        <trans-unit id="7eb9cc620f302f2c96a12a6bae9c8ac6ec071b22" translate="yes" xml:space="preserve">
          <source>Some useful BIFs for distributed programming (for more information, see the &lt;code&gt; erlang(3)&lt;/code&gt; manual page in ERTS:</source>
          <target state="translated">分散プログラミングに役立ついくつかのBIF &lt;code&gt; erlang(3)&lt;/code&gt; 詳細については、ERTSのerlang（3）マニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="8e7a4b4ac918ad5e06dc9ae720dadbac82d7190a" translate="yes" xml:space="preserve">
          <source>Some useful BIFs for distributed programming (for more information, see the &lt;code&gt;erlang(3)&lt;/code&gt; manual page in ERTS:</source>
          <target state="translated">分散プログラミングに役立ついくつかのBIF &lt;code&gt;erlang(3)&lt;/code&gt; 詳細については、ERTSのerlang（3）のマニュアルページを参照してください：</target>
        </trans-unit>
        <trans-unit id="a527f53a8e0e672ee0ca44e8b1c4a439f278ddd4" translate="yes" xml:space="preserve">
          <source>Some useful information is initialized when a process starts. The registered names, or the process identifiers, of the parent process, and the parent ancestors, are stored together with information about the function initially called in the process.</source>
          <target state="translated">プロセスが開始されると、いくつかの有用な情報が初期化されます。親プロセスとその親プロセスの祖先の登録名(プロセス識別子)は、そのプロセスで最初に呼び出された関数に関する情報とともに保存されます。</target>
        </trans-unit>
        <trans-unit id="2028cb2443f8e9daf49220a78619a7c89b656283" translate="yes" xml:space="preserve">
          <source>Some useful operators in guards are:</source>
          <target state="translated">ガードで便利な演算子がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="4dd789ff17ead2cfd47f8e836331495a9404fbba" translate="yes" xml:space="preserve">
          <source>Some useful shell commands for debugging the XPath parser</source>
          <target state="translated">XPath パーサのデバッグに便利なシェルコマンド</target>
        </trans-unit>
        <trans-unit id="d501c243bd37e478e360879f419074506e613f43" translate="yes" xml:space="preserve">
          <source>Some uses of &lt;code&gt;length/1&lt;/code&gt; can be replaced by matching. For example, the following code:</source>
          <target state="translated">&lt;code&gt;length/1&lt;/code&gt; の一部の使用は、マッチングで置き換えることができます。たとえば、次のコード：</target>
        </trans-unit>
        <trans-unit id="74687f19a9be956a6ffa1f42131c4ad5ea03191f" translate="yes" xml:space="preserve">
          <source>Some values may destroy the functionality of the SSH protocol.</source>
          <target state="translated">値によっては、SSH プロトコルの機能を破壊する可能性があります。</target>
        </trans-unit>
        <trans-unit id="d8d49521180b38936cf3e7e09cfe3ccc3672539a" translate="yes" xml:space="preserve">
          <source>Something is wrong with a fun &lt;code&gt;F&lt;/code&gt;.</source>
          <target state="translated">楽しい &lt;code&gt;F&lt;/code&gt; に問題があります。</target>
        </trans-unit>
        <trans-unit id="a595a840021c4a9915671590852399dcdae9a6d0" translate="yes" xml:space="preserve">
          <source>Sometimes (see &lt;code&gt;&lt;a href=&quot;#table-2&quot;&gt;table/2&lt;/a&gt;&lt;/code&gt;) traversal of tables can be done by looking up key values, which is assumed to be fast. Under certain (rare) circumstances there can be too many key values to look up.  Option &lt;code id=&quot;max_lookup&quot;&gt;{max_lookup,&amp;nbsp;MaxLookup}&lt;/code&gt; can then be used to limit the number of lookups: if more than &lt;code&gt;MaxLookup&lt;/code&gt; lookups would be required, no lookups are done but the table is traversed instead. Defaults to &lt;code&gt;infinity&lt;/code&gt;, which means that there is no limit on the number of keys to look up.</source>
          <target state="translated">ときどき（ &lt;code&gt;&lt;a href=&quot;#table-2&quot;&gt;table/2&lt;/a&gt;&lt;/code&gt; を参照）、テーブルの走査は、高速であると想定されるキー値を検索することで実行できます。特定の（まれな）環境では、キー値が多すぎて検索できない場合があります。 &lt;code id=&quot;max_lookup&quot;&gt;{max_lookup,&amp;nbsp;MaxLookup}&lt;/code&gt; オプション{max_lookup、MaxLookup}を使用して、ルックアップの数を制限できます &lt;code&gt;MaxLookup&lt;/code&gt; ルックアップより多くのルックアップが必要な場合、ルックアップは行われず、代わりにテーブルが走査されます。デフォルトは &lt;code&gt;infinity&lt;/code&gt; です。つまり、検索するキーの数に制限はありません。</target>
        </trans-unit>
        <trans-unit id="db8cadc6cd039cae6c311adc00775bedcbb7aca7" translate="yes" xml:space="preserve">
          <source>Sometimes a function may unexpectedly waste a lot (some 10 ms or more depending on host machine OS) of OWN (and ACC) time, even functions that does practically nothing at all. The problem may be that the OS has chosen to schedule out the Erlang runtime system process for a while, and if the OS does not support high resolution cpu time measurements &lt;code&gt;fprof&lt;/code&gt; will use wallclock time for its calculations, and it will appear as functions randomly burn virtual machine time.</source>
          <target state="translated">関数が、OWN（およびACC）の時間を予想外に多く（ホストマシンのOSによっては10ミリ秒以上）浪費することがあります。問題は、OSがしばらくErlangランタイムシステムプロセスをスケジュールすることを選択したことであり、OSが高解像度CPU時間測定をサポートしていない場合、 &lt;code&gt;fprof&lt;/code&gt; は計算にウォールクロック時間を使用し、関数がランダムに書き込みとして表示されます。仮想マシン時間。</target>
        </trans-unit>
        <trans-unit id="7dc115a1319ae042b4c92877e4c6447e43fecbc6" translate="yes" xml:space="preserve">
          <source>Sometimes an exception to the above rule has to be made to make new features (or even bug fixes) possible. A call to &lt;code&gt;ei_set_compat_rel(release_number)&lt;/code&gt; sets the &lt;code&gt;ei&lt;/code&gt; library in compatibility mode of OTP release &lt;code&gt;release_number&lt;/code&gt;.</source>
          <target state="translated">新しい機能（またはバグ修正）を可能にするために、上記のルールの例外を作成する必要がある場合があります。 &lt;code&gt;ei_set_compat_rel(release_number)&lt;/code&gt; を呼び出すと、 &lt;code&gt;ei&lt;/code&gt; ライブラリがOTPリリース &lt;code&gt;release_number&lt;/code&gt; の互換モードに設定されます。</target>
        </trans-unit>
        <trans-unit id="11baeb3a6936f5ffe7074980bba11ba16d0a46d1" translate="yes" xml:space="preserve">
          <source>Sometimes communication between an Erlang program and another program using a standard protocol is desirable. Erlang/OTP currently supports TCP/IP and UDP &lt;strong&gt;sockets&lt;/strong&gt;: as follows:</source>
          <target state="translated">Erlangプログラムと標準プロトコルを使用する別のプログラムとの間の通信が望ましい場合があります。Erlang / OTPは現在TCP / IPおよびUDP &lt;strong&gt;ソケットを&lt;/strong&gt;サポートしています：</target>
        </trans-unit>
        <trans-unit id="20e4ac1b44cad1ebb6d70856e70e3ea359b59c1a" translate="yes" xml:space="preserve">
          <source>Sometimes database queries can take a long time to complete, in our &lt;code&gt;pg_sync&lt;/code&gt; driver, the emulator halts while the driver is doing its job. This is often not acceptable, as no other Erlang process gets a chance to do anything. To improve on our postgres driver, we re-implement it using the asynchronous calls in LibPQ.</source>
          <target state="translated">データベースのクエリが完了するまでに時間がかかることがあります &lt;code&gt;pg_sync&lt;/code&gt; ドライバーでは、ドライバーがその仕事をしている間にエミュレーターが停止します。他のErlangプロセスは何もする機会がないので、これはしばしば受け入れられません。postgresドライバーを改善するために、LibPQの非同期呼び出しを使用して再実装します。</target>
        </trans-unit>
        <trans-unit id="70ce76b9d3fc6249cf9062a1c46f08d4f3c3cb3e" translate="yes" xml:space="preserve">
          <source>Sometimes events can arrive in any state of the &lt;code&gt;gen_statem&lt;/code&gt;. It is convenient to handle these in a common state handler function that all state functions call for events not specific to the state.</source>
          <target state="translated">場合によっては、イベントが &lt;code&gt;gen_statem&lt;/code&gt; の任意の状態で到着することがあります。すべての状態関数が状態に固有ではないイベントを呼び出す共通の状態ハンドラー関数でこれらを処理すると便利です。</target>
        </trans-unit>
        <trans-unit id="0f4ab1fc14c191996bdc9b1d59c99ba2ce62ef2f" translate="yes" xml:space="preserve">
          <source>Sometimes in a system of &lt;code&gt;ASN.1&lt;/code&gt; modules, different default tag modes, for example, &lt;code&gt;AUTOMATIC&lt;/code&gt;, &lt;code&gt;IMPLICIT&lt;/code&gt;, or &lt;code&gt;EXPLICIT&lt;/code&gt;. The multi-file compilation resolves the default tagging as if the modules were compiled separately.</source>
          <target state="translated">&lt;code&gt;ASN.1&lt;/code&gt; モジュールのシステムでは、 &lt;code&gt;AUTOMATIC&lt;/code&gt; 、 &lt;code&gt;IMPLICIT&lt;/code&gt; 、 &lt;code&gt;EXPLICIT&lt;/code&gt; などのさまざまなデフォルトタグモードが時々あります。マルチファイルコンパイルでは、モジュールが個別にコンパイルされたかのように、デフォルトのタグ付けが解決されます。</target>
        </trans-unit>
        <trans-unit id="28ac3307ee87c7874d6aad9c77e81050831a6a1c" translate="yes" xml:space="preserve">
          <source>Sometimes it is desirable to open a zip archive, and to unzip files from it file by file, without having to reopen the archive. This can be done by functions &lt;code&gt;&lt;a href=&quot;#zip_open-1&quot;&gt;zip_open/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#zip_get-1&quot;&gt;zip_get/1,2&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#zip_list_dir-1&quot;&gt;zip_list_dir/1&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#zip_close-1&quot;&gt;zip_close/1&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">zipアーカイブを開き、アーカイブを再度開くことなく、ファイルごとにファイルを解凍することが望ましい場合があります。これは、関数 &lt;code&gt;&lt;a href=&quot;#zip_open-1&quot;&gt;zip_open/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#zip_get-1&quot;&gt;zip_get/1,2&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#zip_list_dir-1&quot;&gt;zip_list_dir/1&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#zip_close-1&quot;&gt;zip_close/1&lt;/a&gt;&lt;/code&gt; で実行できます。</target>
        </trans-unit>
        <trans-unit id="962be223b6e1106971ec47ead3e447a5c9197ea3" translate="yes" xml:space="preserve">
          <source>Sometimes it is impossible, or infeasible, to implement independent test cases. Maybe it is not possible to read the SUT state. Maybe resetting the SUT is impossible and it takes too long time to restart the system. In situations where test case dependency is necessary, CT offers a structured way to carry data from one test case to the next. The same mechanism can also be used to carry data from one test suite to the next.</source>
          <target state="translated">独立したテストケースを実装することができない、あるいはできないことがある。SUTの状態を読み取ることができないのかもしれません。SUT をリセットすることが不可能で、システムを再起動するのに時間がかかりすぎる場合があります。テストケースの依存性が必要な状況では、CTは、あるテストケースから次のテストケースへデータを運ぶための構造化された方法を提供します。同じメカニズムは、1つのテストスイートから次のテストスイートへデータを運ぶためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="5b3c4360ea605c722129889aad9e073dd0528647" translate="yes" xml:space="preserve">
          <source>Sometimes it is not possible to retrieve the values for some of the objects in the notification specification with a get-operation. However, they are known when the &lt;code&gt;send_notification&lt;/code&gt; function is called. This is the case if an object is an element in a table. It is possible to give the values of some objects to the &lt;code&gt;send_notification&lt;/code&gt; function &lt;code&gt;snmpa:send_notification(Agent, Notification, Receiver, Varbinds)&lt;/code&gt;. In this function, &lt;code&gt;Varbinds&lt;/code&gt; is a list of &lt;code&gt;Varbind&lt;/code&gt;, where each &lt;code&gt;Varbind&lt;/code&gt; is one of:</source>
          <target state="translated">場合によっては、get操作で通知仕様の一部のオブジェクトの値を取得できないことがあります。ただし、これらは &lt;code&gt;send_notification&lt;/code&gt; 関数が呼び出されたときに認識されます。これは、オブジェクトがテーブルの要素の場合です。一部のオブジェクトの値を &lt;code&gt;send_notification&lt;/code&gt; 関数 &lt;code&gt;snmpa:send_notification(Agent, Notification, Receiver, Varbinds)&lt;/code&gt; に渡すことができます。この関数では、 &lt;code&gt;Varbinds&lt;/code&gt; はVarbindのリストで &lt;code&gt;Varbind&lt;/code&gt; 、各 &lt;code&gt;Varbind&lt;/code&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="18f53eb4fc8c8a4320ec0fb342a69d7dd865fbb6" translate="yes" xml:space="preserve">
          <source>Sometimes test cases depend on each other so that if one case fails, the following tests are not to be executed. Typically, if the &lt;code&gt;save_config&lt;/code&gt; facility is used and a test case that is expected to save data crashes, the following case cannot run. &lt;code&gt;Common Test&lt;/code&gt; offers a way to declare such dependencies, called sequences.</source>
          <target state="translated">場合によっては、テストケースが互いに依存しているため、1つのケースが失敗した場合、次のテストは実行されません。通常、 &lt;code&gt;save_config&lt;/code&gt; 機能が使用されており、データを保存すると予想されるテストケースがクラッシュした場合、次のケースは実行できません。 &lt;code&gt;Common Test&lt;/code&gt; は、シーケンスと呼ばれるそのような依存関係を宣言する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="6799ff5620c272139e2872edd534d0a33e7d529c" translate="yes" xml:space="preserve">
          <source>Sometimes the escape sequence \K (see above) can be used instead of a lookbehind assertion to get round the fixed-length restriction.</source>
          <target state="translated">lookbehind アサーションの代わりにエスケープシーケンス \K (上記参照)を使用して固定長の制限を回避できることもある。</target>
        </trans-unit>
        <trans-unit id="91d713d409fd840d2a2fd28e664b363a3c3973a3" translate="yes" xml:space="preserve">
          <source>Sometimes the system can enter a state where the reported memory from &lt;code&gt;erlang:memory(total)&lt;/code&gt; is very different from the memory reported by the OS. This can be because of internal fragmentation within the Erlang Run-Time System. Data about how memory is allocated can be retrieved using &lt;code&gt; erlang:system_info(allocator)&lt;/code&gt;. The data you get from that function is very raw and not very plesant to read. &lt;code&gt;&lt;a href=&quot;http://ferd.github.io/recon/recon_alloc.html&quot;&gt;recon_alloc&lt;/a&gt;&lt;/code&gt; can be used to extract useful information from system_info statistics counters.</source>
          <target state="translated">時には、システムがどこから報告されたメモリ状態に入ることができる &lt;code&gt;erlang:memory(total)&lt;/code&gt; OSによって報告されたメモリとは非常に異なっています。これは、Erlangランタイムシステム内の内部断片化が原因である可能性があります。メモリの割り当て方法に関するデータは、 &lt;code&gt; erlang:system_info(allocator)&lt;/code&gt; を使用して取得できます。その関数から取得するデータは非常に生であり、読みやすいものではありません。 &lt;code&gt;&lt;a href=&quot;http://ferd.github.io/recon/recon_alloc.html&quot;&gt;recon_alloc&lt;/a&gt;&lt;/code&gt; を使用して、system_info統計カウンターから有用な情報を抽出できます。</target>
        </trans-unit>
        <trans-unit id="9f742e389a3de6261a036ea786f6851d9053f699" translate="yes" xml:space="preserve">
          <source>Sometimes the system can enter a state where the reported memory from &lt;code&gt;erlang:memory(total)&lt;/code&gt; is very different from the memory reported by the OS. This can be because of internal fragmentation within the Erlang Run-Time System. Data about how memory is allocated can be retrieved using &lt;code&gt;erlang:system_info(allocator)&lt;/code&gt;. The data you get from that function is very raw and not very plesant to read. &lt;code&gt;&lt;a href=&quot;http://ferd.github.io/recon/recon_alloc.html&quot;&gt;recon_alloc&lt;/a&gt;&lt;/code&gt; can be used to extract useful information from system_info statistics counters.</source>
          <target state="translated">時々、システムは &lt;code&gt;erlang:memory(total)&lt;/code&gt; から報告されたメモリがOSによって報告されたメモリと非常に異なる状態になることがあります。これは、Erlangランタイムシステム内の内部断片化が原因である可能性があります。メモリの割り当て方法に関するデータは、 &lt;code&gt;erlang:system_info(allocator)&lt;/code&gt; を使用して取得できます。その関数から取得するデータは非常に生であり、読むのにそれほど面白くない。 &lt;code&gt;&lt;a href=&quot;http://ferd.github.io/recon/recon_alloc.html&quot;&gt;recon_alloc&lt;/a&gt;&lt;/code&gt; は、system_info統計カウンターから有用な情報を抽出するために使用できます。</target>
        </trans-unit>
        <trans-unit id="9b1a0dbc909bd1d69d7a427e71f3d97d4434bf44" translate="yes" xml:space="preserve">
          <source>Sometimes, an example says more than a thousand words. The following small Erlang module shows how EUnit can be used in practice.</source>
          <target state="translated">時には、例が千の言葉以上のことを言っていることもあります。次の小さなErlangモジュールは、EUnitが実際にどのように使えるかを示しています。</target>
        </trans-unit>
        <trans-unit id="141171fb0d1fd830be08540cd391f0b82b2cb5a0" translate="yes" xml:space="preserve">
          <source>Sometimes, however, it can be useful to save all calls, even tail-recursive calls. This is done with option &lt;strong&gt;Stack On, Tail&lt;/strong&gt;. Notice that this option consumes more memory and slows down execution of interpreted functions when there are many tail-recursive calls.</source>
          <target state="translated">ただし、末尾再帰呼び出しを含め、すべての呼び出しを保存すると便利な場合があります。これは、オプション&lt;strong&gt;Stack On、Tailで&lt;/strong&gt;行われます。多くの末尾再帰呼び出しがある場合、このオプションはより多くのメモリを消費し、解釈された関数の実行を遅くすることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7528f753ad83a3f31ee20a4a9df5023228949195" translate="yes" xml:space="preserve">
          <source>Sometimes, it can be convenient not to produce the whole set of test descriptions before the testing begins; for example, if you want to generate a huge amount of tests that would take up too much space to keep in memory all at once.</source>
          <target state="translated">テストが始まる前にテスト記述の全セットを作成しない方が便利な場合もあります。例えば、メモリに一度に保存するにはスペースを取りすぎるほどの大量のテストを生成したい場合などです。</target>
        </trans-unit>
        <trans-unit id="e8a15c3b3a3ffffe356dc1c64607437dff58e484" translate="yes" xml:space="preserve">
          <source>Sometimes, testing some unit &lt;code&gt;A&lt;/code&gt; (e.g., a function) requires that it collaborates somehow with some other unit &lt;code&gt;B&lt;/code&gt; (perhaps being passed as an argument, or by reference) - but &lt;code&gt;B&lt;/code&gt; has not been implemented yet. A &quot;mock object&quot; - an object which, for the purposes of testing &lt;code&gt;A&lt;/code&gt;, looks and behaves like a real &lt;code&gt;B&lt;/code&gt; - might then be used instead. (This is of course only useful if it would be significantly more work to implement a real &lt;code&gt;B&lt;/code&gt; than to create a mock object.)</source>
          <target state="translated">場合によっては、一部のユニット &lt;code&gt;A&lt;/code&gt; （関数など）をテストするときに、他のユニット &lt;code&gt;B&lt;/code&gt; （おそらく引数として、または参照によって渡される）と何らかの形で連携する必要がありますが、 &lt;code&gt;B&lt;/code&gt; はまだ実装されていません。 「モックオブジェクト」 &lt;code&gt;A&lt;/code&gt; をテストするために、実際の &lt;code&gt;B&lt;/code&gt; のように見え、動作するオブジェクト-が代わりに使用されます。 （これはもちろん、モックオブジェクトを作成するよりも実際の &lt;code&gt;B&lt;/code&gt; を実装するほうがはるかに多くの作業が必要な場合にのみ役立ちます。）</target>
        </trans-unit>
        <trans-unit id="0a45b5fa3cbcf07e819f1dbe6736a78703c55350" translate="yes" xml:space="preserve">
          <source>Sometimes, the tree structure of a code fragment isn't very obvious, and parts of the structure may be invisible when printed as source code. For instance, a simple function definition like the following:</source>
          <target state="translated">時々、コードフラグメントのツリー構造があまり明確ではなく、ソースコードとして印刷したときに構造の一部が見えないことがあります。例えば、以下のような単純な関数定義があります。</target>
        </trans-unit>
        <trans-unit id="3f5a4e4270a7a6dacae32c73a607ab7be8a3fae4" translate="yes" xml:space="preserve">
          <source>Sometimes, when the range of a function is more important than the function itself, the function is called a &lt;strong&gt;family&lt;/strong&gt;.</source>
          <target state="translated">関数の範囲が関数自体よりも重要である場合、関数は&lt;strong&gt;ファミリ&lt;/strong&gt;と呼ばれることがあります。</target>
        </trans-unit>
        <trans-unit id="6c3d850f9c60834aad749bf8ac8a3f5f1f45da55" translate="yes" xml:space="preserve">
          <source>Sora_Sompeng</source>
          <target state="translated">Sora_Sompeng</target>
        </trans-unit>
        <trans-unit id="b1a6c8fcce88ee4bcf40d107a65ee3f65ecea47e" translate="yes" xml:space="preserve">
          <source>Sorts terms on files.</source>
          <target state="translated">ファイル上の用語をソートします。</target>
        </trans-unit>
        <trans-unit id="1631590253eec5683c842d19992a2c57c732cacd" translate="yes" xml:space="preserve">
          <source>Sorts tuples on files.</source>
          <target state="translated">ファイル上のタプルをソートします。</target>
        </trans-unit>
        <trans-unit id="9b28d47983f31cf72a4077cc7d9a41a857609c4a" translate="yes" xml:space="preserve">
          <source>Sorts tuples on files. The sort is performed on the element(s) mentioned in &lt;code&gt;KeyPos&lt;/code&gt;. If two tuples compare equal (&lt;code&gt;==&lt;/code&gt;) on one element, the next element according to &lt;code&gt;KeyPos&lt;/code&gt; is compared. The sort is stable.</source>
          <target state="translated">ファイルのタプルをソートします。並べ替えは、 &lt;code&gt;KeyPos&lt;/code&gt; で指定された要素に対して実行されます。2つのタプルが1つの要素で等しい（ &lt;code&gt;==&lt;/code&gt; ）と比較する場合、 &lt;code&gt;KeyPos&lt;/code&gt; に基づく次の要素が比較されます。ソートは安定しています。</target>
        </trans-unit>
        <trans-unit id="4e7484d321669c42caf2ee17f3c18c5acb876879" translate="yes" xml:space="preserve">
          <source>Source code can be reconstructed from the debug information. To prevent this, use encrypted debug information (see below).</source>
          <target state="translated">デバッグ情報からソースコードを再構築することができます。これを防ぐには、暗号化されたデバッグ情報を使用してください(下記参照)。</target>
        </trans-unit>
        <trans-unit id="5203b12fc8bf99e156b8857e7b7938720028ac47" translate="yes" xml:space="preserve">
          <source>Source files from other languages that generate Erlang code, such as ASN.1 or Mibs, should be placed in directories, at the top level or in &lt;code&gt;src&lt;/code&gt;, with the same name as the source language, for example &lt;code&gt;asn1&lt;/code&gt; and &lt;code&gt;mibs&lt;/code&gt;. Build artifacts should be placed in their respective language directory, such as &lt;code&gt;src&lt;/code&gt; for Erlang code or &lt;code&gt;java_src&lt;/code&gt; for Java code.</source>
          <target state="translated">このようASN.1またはMIBのようErlangのコードを生成し、他の言語からのソースファイルは、トップレベルまたはに、ディレクトリに配置する必要があり &lt;code&gt;src&lt;/code&gt; の例では、ソース言語と同じ名前で、 &lt;code&gt;asn1&lt;/code&gt; と &lt;code&gt;mibs&lt;/code&gt; 。ビルドアーティファクトは、Erlangコードの場合は &lt;code&gt;src&lt;/code&gt; 、Javaコードの場合は &lt;code&gt;java_src&lt;/code&gt; など、それぞれの言語ディレクトリに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="6d8c9b124d521027647b4f270cb2872798f9264e" translate="yes" xml:space="preserve">
          <source>Space</source>
          <target state="translated">Space</target>
        </trans-unit>
        <trans-unit id="df9975b8828480ef5a2bcbf7c8e1186fadb81e2f" translate="yes" xml:space="preserve">
          <source>Space characters between mark-up as &lt;code&gt;space&lt;/code&gt;, &lt;code&gt;tab&lt;/code&gt; and &lt;code&gt;line feed&lt;/code&gt; are normalized and returned as xmlText records.</source>
          <target state="translated">マークアップなどの間にスペース文字 &lt;code&gt;space&lt;/code&gt; 、 &lt;code&gt;tab&lt;/code&gt; や &lt;code&gt;line feed&lt;/code&gt; 正規化し、XMLTEXTレコードとして返されます。</target>
        </trans-unit>
        <trans-unit id="6c52a99f638b2f6880712039a2d8fba807d2f455" translate="yes" xml:space="preserve">
          <source>Space or tab only</source>
          <target state="translated">スペースまたはタブのみ</target>
        </trans-unit>
        <trans-unit id="cd78242918f53a012c175a68aa9091a9a360f24a" translate="yes" xml:space="preserve">
          <source>Space separator</source>
          <target state="translated">スペースセパレータ</target>
        </trans-unit>
        <trans-unit id="af9cc9c4b2d6d26d730a19f4f006d58e864ef162" translate="yes" xml:space="preserve">
          <source>Space.</source>
          <target state="translated">Space.</target>
        </trans-unit>
        <trans-unit id="8eef4763fa1fe16b6bb4a2baf8cab5427460e619" translate="yes" xml:space="preserve">
          <source>Spacing mark</source>
          <target state="translated">スペーシングマーク</target>
        </trans-unit>
        <trans-unit id="5a94447ed0523279661d0e9fc1d87b2db2370048" translate="yes" xml:space="preserve">
          <source>Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the &lt;code&gt;erlang:spawn_opt&lt;/code&gt; BIFs.</source>
          <target state="translated">このマニュアルページの冒頭で説明されているように、新しいプロセスを生成して初期化します。プロセスは &lt;code&gt;erlang:spawn_opt&lt;/code&gt; BIFを使用して生成されます。</target>
        </trans-unit>
        <trans-unit id="0f341ce249d51c9b11286c1f984ee17348a44f5c" translate="yes" xml:space="preserve">
          <source>Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the &lt;code&gt;spawn&lt;/code&gt; BIFs.</source>
          <target state="translated">このマニュアルページの冒頭で説明されているように、新しいプロセスを生成して初期化します。プロセスは、 &lt;code&gt;spawn&lt;/code&gt; BIF を使用して生成されます。</target>
        </trans-unit>
        <trans-unit id="4a7ed2584cb35f5a4781d8640847abd5044f7acd" translate="yes" xml:space="preserve">
          <source>Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the &lt;code&gt;spawn_link&lt;/code&gt; BIFs.</source>
          <target state="translated">このマニュアルページの冒頭で説明されているように、新しいプロセスを生成して初期化します。プロセスは、 &lt;code&gt;spawn_link&lt;/code&gt; BIFを使用して生成されます。</target>
        </trans-unit>
        <trans-unit id="b3cbb2dc5868cb0ededa580453f13a294d8af72c" translate="yes" xml:space="preserve">
          <source>Spawns a new process and initializes it as described in the beginning of this manual page. The process is spawned using the &lt;code&gt;spawn_opt&lt;/code&gt; BIFs.</source>
          <target state="translated">このマニュアルページの冒頭で説明されているように、新しいプロセスを生成して初期化します。プロセスは、 &lt;code&gt;spawn_opt&lt;/code&gt; BIFを使用して生成されます。</target>
        </trans-unit>
        <trans-unit id="c4239d5cd20bcd2d24ac65a94922cccc6c8478c4" translate="yes" xml:space="preserve">
          <source>Spawns a process on the pool node that is expected to have the lowest future load.</source>
          <target state="translated">将来の負荷が最も低いと予想されるプールノード上のプロセスをスポーンします。</target>
        </trans-unit>
        <trans-unit id="dafad9130ea38369a11a7749c33f82f643bd8480" translate="yes" xml:space="preserve">
          <source>Spawns and links to a process on the pool node that is expected to have the lowest future load.</source>
          <target state="translated">将来の負荷が最も低いと予想されるプールノード上のプロセスをスポーンし、リンクします。</target>
        </trans-unit>
        <trans-unit id="97f6f7c8b851bb1fa31a0691ac4fd651901620ac" translate="yes" xml:space="preserve">
          <source>Special Flag for literal_alloc</source>
          <target state="translated">literal_alloc の特殊フラグ</target>
        </trans-unit>
        <trans-unit id="5acf81316cdebc5ea464a6f14689235e745fb310" translate="yes" xml:space="preserve">
          <source>Special Flags</source>
          <target state="translated">スペシャルフラッグ</target>
        </trans-unit>
        <trans-unit id="b547c85d3f281c0e0dabcfde624fc728af461ba5" translate="yes" xml:space="preserve">
          <source>Special Set Transaction Mechanism</source>
          <target state="translated">特別セット取引の仕組み</target>
        </trans-unit>
        <trans-unit id="1f2c035c13e5154d536f08a14892fa4f0e712738" translate="yes" xml:space="preserve">
          <source>Specific BEAM instructions. The specific instructions are the instructions that are actually executed by the runtime system. They can be changed at any time without causing compatibility issues. The loader translates generic instructions to specific instructions. In general, for each generic instruction, there exists a family of specific instructions. The OTP 20 release has 389 specific instructions.</source>
          <target state="translated">特定のBEAM命令。特定の命令は、ランタイムシステムが実際に実行する命令です。互換性の問題を引き起こすことなく、いつでも変更することができます。ローダは汎用命令を特定命令に変換します。一般的に、各汎用命令には、特定命令のファミリーが存在します。OTP 20 リリースには 389 個の特定命令があります。</target>
        </trans-unit>
        <trans-unit id="2c5e414c1b8309ce6e5fc0ef999dc90a86b1b36d" translate="yes" xml:space="preserve">
          <source>Specific for the event.</source>
          <target state="translated">イベントに特化した</target>
        </trans-unit>
        <trans-unit id="c2077f98e0a89f01a856fb46e7a674ad07325697" translate="yes" xml:space="preserve">
          <source>Specific functions to support this are &lt;code&gt;&lt;a href=&quot;#create_subscription-1&quot;&gt;create_subscription/1-6&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#get_event_streams-1&quot;&gt;get_event_streams/1-3&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">これをサポートする特定の関数は、 &lt;code&gt;&lt;a href=&quot;#create_subscription-1&quot;&gt;create_subscription/1-6&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#get_event_streams-1&quot;&gt;get_event_streams/1-3&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="fec7247721de870e0f06696429a05e91553b7f67" translate="yes" xml:space="preserve">
          <source>Specific generic time-outs can just as &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt; be restarted or cancelled by setting it to a new time or &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">特定の一般的なタイムアウトは、 &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;State Time-Outs&lt;/a&gt;&lt;/code&gt; を新しい時間または &lt;code&gt;infinity&lt;/code&gt; 設定することにより、再起動またはキャンセルすることができます。</target>
        </trans-unit>
        <trans-unit id="78113e480551c940016707de594db78ce7763561" translate="yes" xml:space="preserve">
          <source>Specific generic time-outs can just as &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;state time-outs&lt;/a&gt;&lt;/code&gt; be restarted or cancelled by setting it to a new time or &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">特定の一般的なタイムアウトは、 &lt;code&gt;&lt;a href=&quot;#State%20Time-Outs&quot;&gt;state time-outs&lt;/a&gt;&lt;/code&gt; 新しい時間または &lt;code&gt;infinity&lt;/code&gt; 設定することで、再開またはキャンセルすることができます。</target>
        </trans-unit>
        <trans-unit id="043b62d9c56f096aa038b6c25572955691ac021e" translate="yes" xml:space="preserve">
          <source>Specifically, the application configuration parameters are automatically updated according to (in increasing priority order):</source>
          <target state="translated">具体的には、(優先度の高い順に)アプリケーション設定パラメータを自動的に更新する。</target>
        </trans-unit>
        <trans-unit id="2d465c7b0696d5d019af407873a8f228fb47f494" translate="yes" xml:space="preserve">
          <source>Specified &lt;code&gt;.rel&lt;/code&gt; file &lt;code&gt;File&lt;/code&gt; cannot be read or does not contain a single term.</source>
          <target state="translated">指定された &lt;code&gt;.rel&lt;/code&gt; ファイル &lt;code&gt;File&lt;/code&gt; を読み取れないか、単一の用語が含まれていません。</target>
        </trans-unit>
        <trans-unit id="6c9d3ee319194053cb474f42b3ded7c409f99060" translate="yes" xml:space="preserve">
          <source>Specified &lt;code&gt;.rel&lt;/code&gt; file does not contain a recognized release specification, but another term &lt;code&gt;Data&lt;/code&gt;.</source>
          <target state="translated">指定された &lt;code&gt;.rel&lt;/code&gt; ファイルには、承認されたリリース仕様は含まれていませんが、別の用語 &lt;code&gt;Data&lt;/code&gt; が含まれています。</target>
        </trans-unit>
        <trans-unit id="658af0b4be0658972a1ed6d4ed084caefdf2e39f" translate="yes" xml:space="preserve">
          <source>Specified &lt;code&gt;relup&lt;/code&gt; file &lt;code&gt;Relup&lt;/code&gt; contains bad data.</source>
          <target state="translated">指定された &lt;code&gt;relup&lt;/code&gt; ファイル &lt;code&gt;Relup&lt;/code&gt; に不正なデータが含まれています。</target>
        </trans-unit>
        <trans-unit id="1b4f12d52aaae6c06a275fb9d469c739fedfaa98" translate="yes" xml:space="preserve">
          <source>Specified release version &lt;code&gt;Vsn&lt;/code&gt; is already in use.</source>
          <target state="translated">指定されたリリースバージョン &lt;code&gt;Vsn&lt;/code&gt; は既に使用されています。</target>
        </trans-unit>
        <trans-unit id="a068d6cb0d76c0bfa9363688a200702b68200211" translate="yes" xml:space="preserve">
          <source>Specifies AVPs for which module Mod provides encode/decode functions. The section contents consists of AVP names. For each such name, &lt;code&gt;Mod:Name(encode|decode, Type, Data, Opts)&lt;/code&gt; is expected to provide encode/decode for values of the AVP, where Name is the name of the AVP, Type is it's type as declared in the &lt;code&gt;@avp_types&lt;/code&gt; section of the dictionary, Data is the value to encode/decode, and Opts is a term that is passed through encode/decode.</source>
          <target state="translated">モジュールModがエンコード/デコード機能を提供するAVPを指定します。セクションの内容は、AVP名で構成されています。そのような名前ごとに、 &lt;code&gt;Mod:Name(encode|decode, Type, Data, Opts)&lt;/code&gt; はAVPの値のエンコード/デコードを提供することが期待されます。ここで、NameはAVPの名前、Typeは &lt;code&gt;@avp_types&lt;/code&gt; 宣言されたタイプですディクショナリのavp_typesセクション、Dataはエンコード/デコードする値、Optsはエンコード/デコードを通じて渡される用語です。</target>
        </trans-unit>
        <trans-unit id="e08b9a9519abea6701ca06cbf3a649033c9f8732" translate="yes" xml:space="preserve">
          <source>Specifies Logger's compatibility with &lt;code&gt;SASL Error Logging&lt;/code&gt;. See the &lt;code&gt; kernel(6)&lt;/code&gt; manual page for more information about this parameter.</source>
          <target state="translated">指定ロガーの互換性 &lt;code&gt;SASL Error Logging&lt;/code&gt; 。このパラメータの詳細については、 &lt;code&gt; kernel(6)&lt;/code&gt; のマニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="aac38a050f1e9da7fe89de7d587aaf6d51bcf2ed" translate="yes" xml:space="preserve">
          <source>Specifies Logger's compatibility with &lt;code&gt;SASL Error Logging&lt;/code&gt;. See the &lt;code&gt;kernel(6)&lt;/code&gt; manual page for more information about this parameter.</source>
          <target state="translated">&lt;code&gt;SASL Error Logging&lt;/code&gt; とのロガーの互換性を指定します。このパラメータの詳細については、 &lt;code&gt;kernel(6)&lt;/code&gt; のマニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="7683235bcdb93e8b7ba424f0769c8c38888e4193" translate="yes" xml:space="preserve">
          <source>Specifies a channel process to handle an SFTP subsystem.</source>
          <target state="translated">SFTP サブシステムを処理するチャネルプロセスを指定します。</target>
        </trans-unit>
        <trans-unit id="f6cd0aa6bbc4042b79b01a293cbdc0343a05c421" translate="yes" xml:space="preserve">
          <source>Specifies a formatter that the handler can use for converting the log event term to a printable string.</source>
          <target state="translated">ハンドラがログイベント用語を印刷可能な文字列に変換するために使用できるフォーマッタを指定します。</target>
        </trans-unit>
        <trans-unit id="963ff978b9122b7f2cc35cc12260364e995a51f6" translate="yes" xml:space="preserve">
          <source>Specifies a function for prettyprinting Erlang syntax trees. This is used for outputting the resulting module definition, as well as for creating stub files. The function is assumed to return formatted text for the given syntax tree, and should raise an exception if an error occurs. The default formatting function calls &lt;code&gt;erl_prettypr:format/2&lt;/code&gt;.</source>
          <target state="translated">Erlang構文ツリーをプリティプリントするための関数を指定します。これは、結果のモジュール定義を出力するため、およびスタブファイルを作成するために使用されます。この関数は、指定された構文ツリーのフォーマット済みテキストを返すと想定されており、エラーが発生した場合は例外が発生します。デフォルトのフォーマット関数は &lt;code&gt;erl_prettypr:format/2&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="d938a0dbc6626a45daeb05fab2c852825569cc93" translate="yes" xml:space="preserve">
          <source>Specifies a function for prettyprinting Erlang syntax trees. This is used for outputting the resulting module definition. The function is assumed to return formatted text for the given syntax tree, and should raise an exception if an error occurs. The default formatting function calls &lt;code&gt;erl_prettypr:format/2&lt;/code&gt;.</source>
          <target state="translated">Erlang構文ツリーをプリティプリントするための関数を指定します。これは、結果のモジュール定義を出力するために使用されます。この関数は、指定された構文ツリーのフォーマット済みテキストを返すと想定されており、エラーが発生した場合は例外が発生します。デフォルトのフォーマット関数は &lt;code&gt;erl_prettypr:format/2&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="6ad9656e8bb0143f9e40287fdb029ca4771602ab" translate="yes" xml:space="preserve">
          <source>Specifies a function to be called each time a new log file is opened. The call &lt;code&gt;M:F(A)&lt;/code&gt; is assumed to return &lt;code&gt;{ok, Head}&lt;/code&gt;. The item &lt;code&gt;Head&lt;/code&gt; is written first in each file. &lt;code&gt;Head&lt;/code&gt; is to be a term if the format is &lt;code&gt;internal&lt;/code&gt;, otherwise a sequence of bytes.</source>
          <target state="translated">新しいログファイルが開かれるたびに呼び出される関数を指定します。呼び出し &lt;code&gt;M:F(A)&lt;/code&gt; は &lt;code&gt;{ok, Head}&lt;/code&gt; を返すと想定されています。項目 &lt;code&gt;Head&lt;/code&gt; は、各ファイルの最初に書き込まれます。フォーマットが &lt;code&gt;internal&lt;/code&gt; の場合、 &lt;code&gt;Head&lt;/code&gt; は用語であり、それ以外の場合はバイトのシーケンスです。</target>
        </trans-unit>
        <trans-unit id="df7b1a9a5cbfb53f64dd762a721127536842da62" translate="yes" xml:space="preserve">
          <source>Specifies a function to be called each time a new log file is opened. The call &lt;code&gt;M:F(A)&lt;/code&gt; is assumed to return &lt;code&gt;{ok, Head}&lt;/code&gt;. The item &lt;code&gt;Head&lt;/code&gt; is written first in each file. &lt;code&gt;Head&lt;/code&gt; is to be a term if the format is &lt;code&gt;internal&lt;/code&gt;, otherwise an &lt;code&gt;iodata()&lt;/code&gt;.</source>
          <target state="translated">新しいログファイルが開かれるたびに呼び出される関数を指定します。 &lt;code&gt;M:F(A)&lt;/code&gt; の呼び出しは &lt;code&gt;{ok, Head}&lt;/code&gt; を返すと想定されています。アイテム &lt;code&gt;Head&lt;/code&gt; は、各ファイルの最初に書き込まれます。 &lt;code&gt;Head&lt;/code&gt; フォーマットがある場合の用語であることがある &lt;code&gt;internal&lt;/code&gt; 、そうでなければ &lt;code&gt;iodata()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3c9a582c23e345c6f1af8d7c94f774ace3fc24ee" translate="yes" xml:space="preserve">
          <source>Specifies a header to be written first on the log file. If the log is a wrap log, the item &lt;code&gt;Head&lt;/code&gt; is written first in each new file. &lt;code&gt;Head&lt;/code&gt; is to be a term if the format is &lt;code&gt;internal&lt;/code&gt;, otherwise a sequence of bytes. Defaults to &lt;code&gt;none&lt;/code&gt;, which means that no header is written first on the file.</source>
          <target state="translated">ログファイルの最初に書き込まれるヘッダーを指定します。ログがラップログの場合、項目 &lt;code&gt;Head&lt;/code&gt; は、新しいファイルごとに最初に書き込まれます。フォーマットが &lt;code&gt;internal&lt;/code&gt; の場合、 &lt;code&gt;Head&lt;/code&gt; は用語であり、それ以外の場合はバイトのシーケンスです。デフォルトは &lt;code&gt;none&lt;/code&gt; です。これは、ヘッダーがファイルに最初に書き込まれないことを意味します。</target>
        </trans-unit>
        <trans-unit id="e48e383dc2c4a63e5320d40f25c906a84e3b0491" translate="yes" xml:space="preserve">
          <source>Specifies a header to be written first on the log file. If the log is a wrap log, the item &lt;code&gt;Head&lt;/code&gt; is written first in each new file. &lt;code&gt;Head&lt;/code&gt; is to be a term if the format is &lt;code&gt;internal&lt;/code&gt;, otherwise an &lt;code&gt;iodata()&lt;/code&gt;. Defaults to &lt;code&gt;none&lt;/code&gt;, which means that no header is written first on the file.</source>
          <target state="translated">ログファイルに最初に書き込むヘッダーを指定します。ログがラップログの場合、アイテム &lt;code&gt;Head&lt;/code&gt; は新しいファイルごとに最初に書き込まれます。 &lt;code&gt;Head&lt;/code&gt; フォーマットがある場合の用語であることがある &lt;code&gt;internal&lt;/code&gt; 、そうでなければ &lt;code&gt;iodata()&lt;/code&gt; 。デフォルトは &lt;code&gt;none&lt;/code&gt; です。これは、ファイルに最初にヘッダーが書き込まれないことを意味します。</target>
        </trans-unit>
        <trans-unit id="8af13086d5a1e7a4068ce9ffac242c55cd65eb47" translate="yes" xml:space="preserve">
          <source>Specifies a list of &quot;pre-defined&quot; macro definitions for the Erlang preprocessor, if used (cf. the &lt;code&gt;preprocess&lt;/code&gt; option). The default value is the empty list.</source>
          <target state="translated">Erlangプリプロセッサの「定義済み」マクロ定義のリストを指定します（使用されている場合）（ &lt;code&gt;preprocess&lt;/code&gt; オプションを参照）。デフォルト値は空のリストです。</target>
        </trans-unit>
        <trans-unit id="6ce40a7275652419ded2308203c717e9bd294631" translate="yes" xml:space="preserve">
          <source>Specifies a list of MIBs (including path) and defines which MIBs are initially loaded into the SNMP manager.</source>
          <target state="translated">MIBのリスト(パスを含む)を指定し、どのMIBをSNMPマネージャに最初にロードするかを定義します。</target>
        </trans-unit>
        <trans-unit id="efe5714e9076819f77f683fa042f092f47cb3ce1" translate="yes" xml:space="preserve">
          <source>Specifies a list of MIBs (including path) that defines which MIBs are initially loaded into the SNMP master agent.</source>
          <target state="translated">どのMIBをSNMPマスターエージェントに最初にロードするかを定義するMIBのリスト(パスを含む)を指定します。</target>
        </trans-unit>
        <trans-unit id="646d02a3d453f371128366bcbdaac3802f473664" translate="yes" xml:space="preserve">
          <source>Specifies a list of directory names for the Erlang preprocessor, if used, to search for include files (cf. the &lt;code&gt;preprocess&lt;/code&gt; option). The default value is the empty list. The directory of the source file and the current directory are automatically appended to the list.</source>
          <target state="translated">インクルードファイルを検索するために使用する場合、Erlangプリプロセッサのディレクトリ名のリストを指定します（ &lt;code&gt;preprocess&lt;/code&gt; オプションを参照）。デフォルト値は空のリストです。ソースファイルのディレクトリと現在のディレクトリが自動的にリストに追加されます。</target>
        </trans-unit>
        <trans-unit id="50e618efb5e45e439fec74d31b0e4d5224079b3b" translate="yes" xml:space="preserve">
          <source>Specifies a list of environment variables that will extend the environment.</source>
          <target state="translated">環境を拡張する環境変数のリストを指定します。</target>
        </trans-unit>
        <trans-unit id="0587c7f9327b49d3f0f08383c29baaa0dcc72c0e" translate="yes" xml:space="preserve">
          <source>Specifies a list of names of input modules such that calls to these &quot;safe&quot; modules may be turned into direct local calls, that do not test for code replacement. Typically, this can be done for e.g. standard library modules. If a module is &quot;safe&quot;, it is per definition also &quot;static&quot; (cf. below). The list may be empty. By default, all involved modules &lt;strong&gt;except the target module&lt;/strong&gt; are considered &quot;safe&quot;.</source>
          <target state="translated">これらの「安全な」モジュールへの呼び出しがコードの置き換えをテストしない直接ローカル呼び出しに変換されるように、入力モジュールの名前のリストを指定します。通常、これは、たとえば標準ライブラリモジュールに対して実行できます。モジュールが「安全」である場合、定義ごとに「静的」でもあります（以下を参照）。リストは空の場合があります。デフォルトで&lt;strong&gt;は、ターゲットモジュールを除く&lt;/strong&gt;すべての関連&lt;strong&gt;モジュール&lt;/strong&gt;が「安全」と見なされ&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="0db911337b6925833457c9d743d617bb68c80e07" translate="yes" xml:space="preserve">
          <source>Specifies a list of names of input modules which will be assumed never to be replaced (reloaded) unless the target module is also first replaced. The list may be empty. The target module itself (which may also be one of the input modules) is always regarded as &quot;static&quot;, regardless of the value of this option. By default, all involved modules are assumed to be static.</source>
          <target state="translated">ターゲットモジュールも最初に置き換えられない限り、置き換えられない(リロードされない)と仮定される入力モジュールの名前のリストを指定します。リストは空でも構いません。ターゲットモジュール自体 (入力モジュールの 1 つである可能性もあります)は、このオプションの値に関係なく、常に &quot;static&quot; とみなされます。デフォルトでは、関係するすべてのモジュールは静的であるとみなされます。</target>
        </trans-unit>
        <trans-unit id="b000ffa4bdf3664abecd4e83f559cdc89da1c823" translate="yes" xml:space="preserve">
          <source>Specifies a list of names of input modules whose interfaces should be exported by the output module. A stub descriptor is generated for each specified module, unless its name is &lt;code&gt;Name&lt;/code&gt;. If no modules are specified, then if &lt;code&gt;Name&lt;/code&gt; is also the name of an input module, that module will be exported; otherwise the first listed module in &lt;code&gt;Sources&lt;/code&gt; will be exported. The default value is the empty list.</source>
          <target state="translated">インターフェースが出力モジュールによってエクスポートされる入力モジュールの名前のリストを指定します。名前が &lt;code&gt;Name&lt;/code&gt; でない限り、指定されたモジュールごとにスタブ記述子が生成されます。モジュールが指定されていない場合、 &lt;code&gt;Name&lt;/code&gt; が入力モジュールの名前でもある場合、そのモジュールがエクスポートされます。そうでない場合、 &lt;code&gt;Sources&lt;/code&gt; 最初にリストされているモジュールがエクスポートされます。デフォルト値は空のリストです。</target>
        </trans-unit>
        <trans-unit id="a02f9858ed6c9d2732f8c874a4263901db1be213" translate="yes" xml:space="preserve">
          <source>Specifies a list of pairs of module names, representing a mapping from old names to new. &lt;strong&gt;The set of old names may not include any of the names of the input modules.&lt;/strong&gt; All calls to the listed old modules will be rewritten to refer to the corresponding new modules. &lt;strong&gt;The redirected calls will not be further processed, even if the new destination is in one of the input modules.&lt;/strong&gt; This option mainly exists to support module renaming; cf. &lt;code&gt;rename/3&lt;/code&gt;. The default value is the empty list.</source>
          <target state="translated">古い名前から新しい名前へのマッピングを表す、モジュール名のペアのリストを指定します。&lt;strong&gt;古い名前のセットには、入力モジュールの名前を含めることはできません。&lt;/strong&gt;リストされた古いモジュールへのすべての呼び出しは、対応する新しいモジュールを参照するように書き換えられます。&lt;strong&gt;新しい宛先が入力モジュールの1つにある場合でも、リダイレクトされた呼び出しはそれ以上処理されません。&lt;/strong&gt;このオプションは主にモジュールの名前変更をサポートするために存在します。 cf. &lt;code&gt;rename/3&lt;/code&gt; 。デフォルト値は空のリストです。</target>
        </trans-unit>
        <trans-unit id="36ecf352bd9307ae219dddc3a8afe793a6662482" translate="yes" xml:space="preserve">
          <source>Specifies a list of rules for associating object files with source files, to be passed to the function &lt;code&gt;filelib:find_source/2&lt;/code&gt;. This can be used to change the way Igor looks for source files. If this option is not specified, the default system rules are used. The first occurrence of this option completely overrides any later in the option list.</source>
          <target state="translated">オブジェクトファイルをソースファイルに関連付けるための規則のリストを指定し、関数 &lt;code&gt;filelib:find_source/2&lt;/code&gt; に渡します。これは、Igorがソースファイルを探す方法を変更するために使用できます。このオプションを指定しない場合、デフォルトのシステムルールが使用されます。このオプションの最初の出現は、オプションリストのそれ以降のすべてを完全に上書きします。</target>
        </trans-unit>
        <trans-unit id="2bd12245ab5a3976c6e07486b9cb0019038bc563" translate="yes" xml:space="preserve">
          <source>Specifies a longest time to wait for a send operation to be accepted by the underlying TCP stack. When the limit is exceeded, the send operation returns &lt;code&gt;{error,timeout}&lt;/code&gt;. How much of a packet that got sent is unknown; the socket is therefore to be closed whenever a time-out has occurred (see &lt;code&gt;send_timeout_close&lt;/code&gt; below). Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">基になるTCPスタックによって送信操作が受け入れられるのを待機する最長時間を指定します。制限を超えると、送信操作は &lt;code&gt;{error,timeout}&lt;/code&gt; 返します。送信されたパケットのどれだけが不明か。したがって、ソケットはタイムアウトが発生するたびに閉じられます（以下の &lt;code&gt;send_timeout_close&lt;/code&gt; を参照）。デフォルトは &lt;code&gt;infinity&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="314f1878cccf35ceb86706079d5b9775e575e39c" translate="yes" xml:space="preserve">
          <source>Specifies a protocol for Erlang distribution:</source>
          <target state="translated">Erlang配布のプロトコルを指定します。</target>
        </trans-unit>
        <trans-unit id="643b41e2bc85174b6811dc19db5ad4235f91e26f" translate="yes" xml:space="preserve">
          <source>Specifies a textual comment describing the service. This comment shows up as the service description in the Windows service manager.</source>
          <target state="translated">サービスを説明するテキスト コメントを指定します。このコメントは、Windows サービス マネージャでサービスの説明として表示されます。</target>
        </trans-unit>
        <trans-unit id="a67a5ea5fdcea5f89208fb21f5b1fc4f4019256f" translate="yes" xml:space="preserve">
          <source>Specifies an &lt;strong&gt;extra&lt;/strong&gt; environment for the emulator. The environment variables specified here are added to the system-wide environment block that is normally present when a service starts up. Variables present in both the system-wide environment and in the service environment specification will be set to the value specified in the service.</source>
          <target state="translated">エミュレータ用の&lt;strong&gt;追加の&lt;/strong&gt;環境を指定します。ここで指定された環境変数は、サービスの起動時に通常存在するシステム全体の環境ブロックに追加されます。システム全体の環境とサービス環境の仕様の両方に存在する変数は、サービスで指定された値に設定されます。</target>
        </trans-unit>
        <trans-unit id="13b946ab1dd1ffa32bcf74841cac44319e24350c" translate="yes" xml:space="preserve">
          <source>Specifies an alternative to &lt;code&gt;rsh&lt;/code&gt; for starting a slave node on a remote host; see &lt;code&gt;slave(3)&lt;/code&gt;.</source>
          <target state="translated">リモートホストでスレーブノードを起動するための &lt;code&gt;rsh&lt;/code&gt; の代替を指定します。 &lt;code&gt;slave(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="7292d6780a37ceec29bd7462c1aae08533215aa1" translate="yes" xml:space="preserve">
          <source>Specifies an alternative to &lt;code&gt;ssh&lt;/code&gt; for starting a slave node on a remote host; see &lt;code&gt;slave(3)&lt;/code&gt;.</source>
          <target state="translated">リモートホストでスレーブノードを起動するための &lt;code&gt;ssh&lt;/code&gt; の代替を指定します。 &lt;code&gt;slave(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="b0d35d144a129393da88306e0a6c4fcfc31be7e2" translate="yes" xml:space="preserve">
          <source>Specifies an output format. Whether the output is returned or written to file depends on whether or not option &lt;code&gt;return&lt;/code&gt; is specified. When written to file, the resulting file(s) will have extensions &lt;code&gt;.D&lt;/code&gt;, &lt;code&gt;.F&lt;/code&gt;, &lt;code&gt;.erl&lt;/code&gt;, and &lt;code&gt;.hrl&lt;/code&gt; respectively, basenames defaulting to &lt;code&gt;dictionary&lt;/code&gt; if the input dictionary is literal and does not specify &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#name&quot;&gt;@name&lt;/a&gt;&lt;/code&gt;&lt;/code&gt;. When returned, results are in the order of the corresponding format options. Format options default to &lt;code&gt;erl&lt;/code&gt; and &lt;code&gt;hrl&lt;/code&gt; (in this order) if unspecified.</source>
          <target state="translated">出力フォーマットを指定します。出力が返されるか、ファイルに書き込まれるかは、オプション &lt;code&gt;return&lt;/code&gt; が指定されているかどうかによって異なります。ファイルに書き込まれると、結果のファイルには拡張子 &lt;code&gt;.D&lt;/code&gt; 、 &lt;code&gt;.F&lt;/code&gt; 、 &lt;code&gt;.erl&lt;/code&gt; 、 &lt;code&gt;.hrl&lt;/code&gt; がそれぞれ付き、入力辞書がリテラルで &lt;code&gt;&lt;code&gt;&lt;a href=&quot;diameter_dict#name&quot;&gt;@name&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; を指定しない場合、ベース名はデフォルトで &lt;code&gt;dictionary&lt;/code&gt; なります。返されるとき、結果は対応するフォーマットオプションの順序になります。書式オプションを指定しない場合、デフォルトで &lt;code&gt;erl&lt;/code&gt; と &lt;code&gt;hrl&lt;/code&gt; （この順序）になります。</target>
        </trans-unit>
        <trans-unit id="6e8e542f3ab3386ab7c7c837a33999f0cb6c6ce5" translate="yes" xml:space="preserve">
          <source>Specifies another format string to be used in the &lt;code&gt;strftime&lt;/code&gt; C library call. That is, specifying this to &lt;code&gt;&quot;%e-%b-%Y, %T %Z&quot;&lt;/code&gt; gives log messages with time stamps like &lt;code&gt;15-May-2003, 10:23:04 MET&lt;/code&gt;. For more information, see the documentation for the C library function &lt;code&gt;strftime&lt;/code&gt;. Defaults to &lt;code&gt;&quot;%a %b %e %T %Z %Y&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;strftime&lt;/code&gt; Cライブラリ呼び出しで使用される別のフォーマット文字列を指定します。つまり、これを &lt;code&gt;&quot;%e-%b-%Y, %T %Z&quot;&lt;/code&gt; に指定すると、 &lt;code&gt;15-May-2003, 10:23:04 MET&lt;/code&gt; ようなタイムスタンプが付いたログメッセージが生成されます。詳細については、Cライブラリ関数 &lt;code&gt;strftime&lt;/code&gt; のドキュメントを参照してください。デフォルトは &lt;code&gt;&quot;%a %b %e %T %Z %Y&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ed319463db02b0d588dac27abf8ff7da396e22ad" translate="yes" xml:space="preserve">
          <source>Specifies any data related to the test case. This data can be retrieved at any time using the &lt;code&gt;&lt;a href=&quot;ct#userdata-3&quot;&gt;ct:userdata/3&lt;/a&gt;&lt;/code&gt; utility function.</source>
          <target state="translated">テストケースに関連するデータを指定します。このデータは、 &lt;code&gt;&lt;a href=&quot;ct#userdata-3&quot;&gt;ct:userdata/3&lt;/a&gt;&lt;/code&gt; ユーティリティ関数を使用していつでも取得できます。</target>
        </trans-unit>
        <trans-unit id="6fdfea2103ae0ef022a18ee840851b481113ab20" translate="yes" xml:space="preserve">
          <source>Specifies configuration variables required by the test case. If the required configuration variables are not found in any of the test system configuration files, the test case is skipped.</source>
          <target state="translated">テストケースに必要な構成変数を指定します。必要な構成変数がテストシステムの構成ファイルにない場合、テストケースはスキップされます。</target>
        </trans-unit>
        <trans-unit id="496b6b9f1a04ec6fa47e8880570cc1c9d273aa58" translate="yes" xml:space="preserve">
          <source>Specifies directory &lt;code&gt;Dir&lt;/code&gt; where all generated files are to be placed. If this option is omitted, the files are placed in the current directory.</source>
          <target state="translated">生成されたすべてのファイルが配置されるディレクトリ &lt;code&gt;Dir&lt;/code&gt; を指定します。このオプションを省略すると、ファイルは現在のディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="756b0e315646422f58d559cd8b900ee5bb7d2208" translate="yes" xml:space="preserve">
          <source>Specifies how characters are input or output from or to the I/O device, implying that, for example, a terminal is set to handle Unicode input and output or a file is set to handle UTF-8 data encoding.</source>
          <target state="translated">I/Oデバイスから、またはI/Oデバイスへの文字の入出力方法を指定します。これは、例えば、端末がUnicodeの入出力を扱うように設定されていたり、ファイルがUTF-8のデータエンコーディングを扱うように設定されていたりすることを意味します。</target>
        </trans-unit>
        <trans-unit id="fb1b6a1ebeeca4db9d3ed67224fd81d5599255b9" translate="yes" xml:space="preserve">
          <source>Specifies how long time (in milliseconds) the &lt;code&gt;init&lt;/code&gt; process is allowed to spend shutting down the system. If &lt;code&gt;Time&lt;/code&gt; milliseconds have elapsed, all processes still existing are killed. Defaults to &lt;code&gt;infinity&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; プロセスがシステムのシャットダウンに費やすことができる時間（ミリ秒単位）を指定します。場合は &lt;code&gt;Time&lt;/code&gt; （ミリ秒）が経過した、まだ既存のすべてのプロセスが殺されます。デフォルトは &lt;code&gt;infinity&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="e550ff7d24fc305dd6d8d061ea2e492652765d42" translate="yes" xml:space="preserve">
          <source>Specifies how much memory is to be allocated for the internal compression state: &lt;code&gt;MemLevel&lt;/code&gt;=1 uses minimum memory but is slow and reduces compression ratio; &lt;code&gt;MemLevel&lt;/code&gt;=9 uses maximum memory for optimal speed. Defaults to 8.</source>
          <target state="translated">内部圧縮状態に割り当てるメモリ量を指定します &lt;code&gt;MemLevel&lt;/code&gt; = 1は最小メモリを使用しますが、速度が遅く、圧縮率が低下します。 &lt;code&gt;MemLevel&lt;/code&gt; = 9は、最適な速度のために最大メモリを使用します。デフォルトは8です。</target>
        </trans-unit>
        <trans-unit id="57c541278f8dbc9de3fbe87344bf887f36543447" translate="yes" xml:space="preserve">
          <source>Specifies how the parts of the original string are presented in the result list. Valid types:</source>
          <target state="translated">元の文字列の各部分が結果リストにどのように表示されるかを指定します。有効な型。</target>
        </trans-unit>
        <trans-unit id="df4c55d66a278e2a151d09c02b1175eb335a021d" translate="yes" xml:space="preserve">
          <source>Specifies if &lt;code&gt;os_sup&lt;/code&gt; is to be started or not.</source>
          <target state="translated">&lt;code&gt;os_sup&lt;/code&gt; を開始するかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="dfe108b428db082101b7903eec41f3818ecf7325" translate="yes" xml:space="preserve">
          <source>Specifies if and how the audit trail log shall be repaired when opened. Unless this parameter has the value &lt;code&gt;snmp_repair&lt;/code&gt; it is sent to &lt;code&gt;disk_log&lt;/code&gt;. If, on the other hand, the value is &lt;code&gt;snmp_repair&lt;/code&gt;, snmp attempts to handle certain faults on its own. And even if it cannot repair the file, it does not truncate it directly, but instead &lt;strong&gt;moves it aside&lt;/strong&gt; for later off-line analysis.</source>
          <target state="translated">開いたときに監査証跡ログを修復するかどうか、および修復する方法を指定します。このパラメーターの値が &lt;code&gt;snmp_repair&lt;/code&gt; でない限り、disk_logに送信され &lt;code&gt;disk_log&lt;/code&gt; 。一方、値が &lt;code&gt;snmp_repair&lt;/code&gt; の場合、snmpは特定の障害を自分で処理しようとします。また、ファイルを修復できない場合でも、ファイルを直接切り捨てることはせず、後でオフラインで分析&lt;strong&gt;するために脇に置き&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="f3658421417f6f7023d4c932a6bc3bee6c32fab9" translate="yes" xml:space="preserve">
          <source>Specifies if logging is to be ended if &lt;code&gt;rb&lt;/code&gt; encounters an unprintable report. (You can get a report with an incorrect form if function &lt;code&gt;error_logger&lt;/code&gt;, &lt;code&gt;error_msg&lt;/code&gt;, or &lt;code&gt;info_msg&lt;/code&gt; has been called with an invalid format string)</source>
          <target state="translated">&lt;code&gt;rb&lt;/code&gt; が印刷できないレポートに遭遇した場合にロギングを終了するかどうかを指定します。（関数 &lt;code&gt;error_logger&lt;/code&gt; 、 &lt;code&gt;error_msg&lt;/code&gt; 、または &lt;code&gt;info_msg&lt;/code&gt; が無効なフォーマット文字列で呼び出された場合、誤った形式のレポートを取得する可能性があります）</target>
        </trans-unit>
        <trans-unit id="765304e2a33975f373a966a3122f13f17732444d" translate="yes" xml:space="preserve">
          <source>Specifies if messages will be sent to &lt;code&gt;error_logger&lt;/code&gt; on recoverable errors with the log files. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">ログファイルの回復可能なエラーでメッセージを &lt;code&gt;error_logger&lt;/code&gt; に送信するかどうかを指定します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="8395a04227320893b9d3333f53a3d612f76dffc4" translate="yes" xml:space="preserve">
          <source>Specifies if the analysis should be sorted according to the ACC column, which is the default, or the OWN column. See &lt;code&gt;&lt;a href=&quot;#analysis&quot;&gt;Analysis Format&lt;/a&gt;&lt;/code&gt; below.</source>
          <target state="translated">分析をデフォルトのACC列またはOWN列のどちらに従ってソートするかを指定します。以下の &lt;code&gt;&lt;a href=&quot;#analysis&quot;&gt;Analysis Format&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="33cb184ada96d2b9e14fcd7f20b8ab8cb290a1c1" translate="yes" xml:space="preserve">
          <source>Specifies if the audit trail log entries will be (sequence) numbered or not. The range of the sequence numbers are according to RFC 5424, i.e. 1 through 2147483647.</source>
          <target state="translated">監査証跡ログのエントリに(シーケンス)番号を付けるかどうかを指定します。シーケンス番号の範囲はRFC 5424に準拠しており、1から2147483647までです。</target>
        </trans-unit>
        <trans-unit id="fcb0ad30ffe597be9ec1747276ec75d711dad8ed" translate="yes" xml:space="preserve">
          <source>Specifies if the client is to try to reuse sessions when possible.</source>
          <target state="translated">クライアントが可能な限りセッションを再利用しようとするかどうかを指定します。</target>
        </trans-unit>
        <trans-unit id="cb1659dc4dae00743b1c42bc838d72145e161054" translate="yes" xml:space="preserve">
          <source>Specifies if the log is to be opened in read-only or read-write mode. Defaults to &lt;code&gt;read_write&lt;/code&gt;.</source>
          <target state="translated">ログを読み取り専用モードまたは読み取り/書き込みモードのどちらで開くかを指定します。デフォルトは &lt;code&gt;read_write&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d2cbddf85ffbe382ec390161b6364754eef56872" translate="yes" xml:space="preserve">
          <source>Specifies if the server is to agree to reuse sessions when requested by the clients. See also option &lt;code&gt;reuse_session&lt;/code&gt;.</source>
          <target state="translated">サーバーがクライアントから要求されたときにセッションを再利用することに同意するかどうかを指定します。オプション &lt;code&gt;reuse_session&lt;/code&gt; も参照してください。</target>
        </trans-unit>
        <trans-unit id="d9ce6ecaf4bf285d5669a8d76ba655b048146b32" translate="yes" xml:space="preserve">
          <source>Specifies if the slave node is to be killed if a time-out occurs during initialization or startup. Defaults to &lt;code&gt;true&lt;/code&gt;. Notice that the node can also be still alive it the boot time-out occurred, but it is not killed in this case.</source>
          <target state="translated">初期化中または起動中にタイムアウトが発生した場合にスレーブノードを強制終了するかどうかを指定します。デフォルトは &lt;code&gt;true&lt;/code&gt; です。ブートタイムアウトが発生した場合でもノードは存続している可能性がありますが、この場合は強制終了されません。</target>
        </trans-unit>
        <trans-unit id="05e7c736cb0375dfd7e2e85ef1ae816625c278db" translate="yes" xml:space="preserve">
          <source>Specifies if the slave node is to be stopped if the master node stops. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">マスターノードが停止した場合にスレーブノードを停止するかどうかを指定します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6863f48147c29f941903c73fdc940937446b00a9" translate="yes" xml:space="preserve">
          <source>Specifies if to reject renegotiation attempt that does not live up to &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt;. By default &lt;code&gt;secure_renegotiate&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, that is, secure renegotiation is enforced. If set to &lt;code&gt;false&lt;/code&gt; secure renegotiation will still be used if possible, but it falls back to insecure renegotiation if the peer does not support &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt; に準拠していない再ネゴシエーションの試行を拒否するかどうかを指定します。デフォルトでは、 &lt;code&gt;secure_renegotiate&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; に設定されています。つまり、セキュアな再ネゴシエーションが実施されます。 &lt;code&gt;false&lt;/code&gt; に設定すると、可能であれば引き続きセキュアな再ネゴシエーションが使用されますが、ピアが &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc5746.txt&quot;&gt;RFC 5746&lt;/a&gt;&lt;/code&gt; をサポートしていない場合は、セキュアでない再ネゴシエーションにフォールバックします。</target>
        </trans-unit>
        <trans-unit id="924a9c0514e91ad663f8ee671a9bd00c58581242" translate="yes" xml:space="preserve">
          <source>Specifies include directories (described earlier).</source>
          <target state="translated">インクルードディレクトリを指定します (前に説明しました)。</target>
        </trans-unit>
        <trans-unit id="e4832d43452327b219c706dc50084a728937cbd1" translate="yes" xml:space="preserve">
          <source>Specifies specifically that \R is to match all the Unicode newline characters (including CRLF, and so on, the default).</source>
          <target state="translated">特に、すべての Unicode 改行文字(デフォルトでは CRLF などを含む)と一致させることを指定する。</target>
        </trans-unit>
        <trans-unit id="19c79d8a677d7198ac041cefa87536c05e47b241" translate="yes" xml:space="preserve">
          <source>Specifies specifically that \R is to match all the Unicode newline characters (including CRLF, and so on, the default). (Overrides the compilation option.)</source>
          <target state="translated">具体的には、全てのUnicode改行文字(デフォルトのCRLF等を含む)と一致させることを指定します。(コンパイルオプションを上書きします)。</target>
        </trans-unit>
        <trans-unit id="497cbddcc844eb037f2eeb5c9e71b539696cfec7" translate="yes" xml:space="preserve">
          <source>Specifies specifically that \R is to match only the CR LF, or CRLF sequences, not the Unicode-specific newline characters. (Overrides the compilation option.)</source>
          <target state="translated">特に指定するのは、Unicode 固有の改行文字ではなく、CR LF、または CRLF シーケンスのみに一致するようにすることである。(コンパイルオプションを上書きします)。</target>
        </trans-unit>
        <trans-unit id="e99bc9c0572d58f55185c99879f560312e3f0dcd" translate="yes" xml:space="preserve">
          <source>Specifies specifically that \R is to match only the CR, LF, or CRLF sequences, not the Unicode-specific newline characters.</source>
          <target state="translated">特に指定するのは、\R is to match only CR,LF,or CRLF sequences,not not unicode-specific newline charactersである。</target>
        </trans-unit>
        <trans-unit id="95a2505a1ec4fa886afebcc07b0d9a91d416f9b6" translate="yes" xml:space="preserve">
          <source>Specifies that Unicode character properties are to be used when resolving \B, \b, \D, \d, \S, \s, \W and \w. Without this flag, only ISO Latin-1 properties are used. Using Unicode properties hurts performance, but is semantically correct when working with Unicode characters beyond the ISO Latin-1 range.</source>
          <target state="translated">このフラグがない場合は、ISO Latin-1プロパティのみ使用されます。Unicodeプロパティを使用すると、パフォーマンスが低下しますが、ISO Latin-1の範囲を超えてUnicode文字を扱う場合には、意味的には正しいです。</target>
        </trans-unit>
        <trans-unit id="0bbf9d2b815d82e53e9695faeeb0b36d7ee91451" translate="yes" xml:space="preserve">
          <source>Specifies that a tracer module is to be called instead of sending a trace message. The tracer module can then ignore or change the trace message. For more details on how to write a tracer module, see &lt;code&gt;erl_tracer(3)&lt;/code&gt;.</source>
          <target state="translated">トレースメッセージを送信する代わりに、トレーサモジュールを呼び出すことを指定します。その後、トレーサモジュールはトレースメッセージを無視または変更できます。トレーサモジュールの作成方法の詳細については、 &lt;code&gt;erl_tracer(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="6b6710bb6e3aa6ebbf29da6da58e9263bde44061" translate="yes" xml:space="preserve">
          <source>Specifies that empty parts at the end of the result list are to be disregarded. The same as specifying &lt;code&gt;{parts,0}&lt;/code&gt;. This corresponds to the default behavior of the &lt;code&gt;split&lt;/code&gt; built-in function in Perl.</source>
          <target state="translated">結果リストの最後にある空の部分を無視することを指定します。 &lt;code&gt;{parts,0}&lt;/code&gt; を指定するのと同じです。これは、Perlの &lt;code&gt;split&lt;/code&gt; 組み込み関数のデフォルトの動作に対応しています。</target>
        </trans-unit>
        <trans-unit id="824d1a2ca43b36b67d5479813a6dd9d8b68c0f0c" translate="yes" xml:space="preserve">
          <source>Specifies that output from the Erlang shell is to be sent to a &quot;debug log&quot;. The log file is named &amp;lt;servicename&amp;gt;&lt;code&gt;.debug&lt;/code&gt; or &amp;lt;servicename&amp;gt;&lt;code&gt;.debug.&lt;/code&gt;&amp;lt;N&amp;gt;, where &amp;lt;N&amp;gt; is an integer from 1 through 99. The log file is placed in the working directory of the service (as specified in &lt;code&gt;WorkDir&lt;/code&gt;).</source>
          <target state="translated">Erlangシェルからの出力が「デバッグログ」に送信されることを指定します。ログファイルの名前は&amp;lt;servicename&amp;gt; &lt;code&gt;.debug&lt;/code&gt; または&amp;lt;servicename&amp;gt; &lt;code&gt;.debug.&lt;/code&gt; &amp;lt;N&amp;gt;。ここで、&amp;lt;N&amp;gt;は1から99までの整数です。ログファイルは、サービスの作業ディレクトリに配置されます（ &lt;code&gt;WorkDir&lt;/code&gt; で指定）。</target>
        </trans-unit>
        <trans-unit id="58b3a9b24285b73688af255d7015013063348a3b" translate="yes" xml:space="preserve">
          <source>Specifies that the (*UTF) and/or (*UTF8) &quot;start-of-pattern items&quot; are forbidden. This flag cannot be combined with option &lt;code&gt;unicode&lt;/code&gt;. Useful if ISO Latin-1 patterns from an external source are to be compiled.</source>
          <target state="translated">（* UTF）や（* UTF8）の「パターン開始項目」を禁止することを指定します。このフラグをオプション &lt;code&gt;unicode&lt;/code&gt; と組み合わせることはできません。外部ソースからのISO Latin-1パターンをコンパイルする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="9700fc678df1f11d54375309f05dbcc5a3a5dc6e" translate="yes" xml:space="preserve">
          <source>Specifies that the end of the subject string is not the end of a line, so the dollar metacharacter is not to match it nor (except in multiline mode) a newline immediately before it. Setting this without &lt;code&gt;multiline&lt;/code&gt; (at compile time) causes dollar never to match. This option affects only the behavior of the dollar metacharacter. It does not affect \Z or \z.</source>
          <target state="translated">件名の文字列の終わりが行の終わりではないことを指定します。そのため、ドルのメタ文字は、その直前の改行でも（複数行モードを除き）改行でもありません。これを &lt;code&gt;multiline&lt;/code&gt; なしで（コンパイル時に）設定すると、ドルが一致しなくなります。このオプションは、ドルのメタキャラクターの動作にのみ影響します。\ Zまたは\ zには影響しません。</target>
        </trans-unit>
        <trans-unit id="d4d943073641a7e0bab24f416a2974ddc8d8857d" translate="yes" xml:space="preserve">
          <source>Specifies that the first character of the subject string is not the beginning of a line, so the circumflex metacharacter is not to match before it. Setting this without &lt;code&gt;multiline&lt;/code&gt; (at compile time) causes circumflex never to match. This option only affects the behavior of the circumflex metacharacter. It does not affect \A.</source>
          <target state="translated">対象文字列の最初の文字が行の先頭ではないことを指定します。そのため、曲折アクセントメタ文字はその前に一致しません。これを &lt;code&gt;multiline&lt;/code&gt; なしで（コンパイル時に）設定すると、サーカムフレックスは決して一致しなくなります。このオプションは、サーカムフレックスメタキャラクターの動作にのみ影響します。\ Aには影響しません。</target>
        </trans-unit>
        <trans-unit id="301e7c4e17cd1fd9770abbc7a8ef562e86042517" translate="yes" xml:space="preserve">
          <source>Specifies that trace to process or port shall be done instead of trace to file. This option is only allowed with the &lt;code&gt;start&lt;/code&gt; option, but not with the &lt;code&gt;{file, Filename}&lt;/code&gt; option.</source>
          <target state="translated">ファイルへのトレースではなく、プロセスまたはポートへのトレースを行うことを指定します。このオプションは、 &lt;code&gt;start&lt;/code&gt; オプションでのみ使用できます。 &lt;code&gt;{file, Filename}&lt;/code&gt; オプションでは使用できません。</target>
        </trans-unit>
        <trans-unit id="dd4acdf541509e49deec7e92fd0e9d395ece9f1d" translate="yes" xml:space="preserve">
          <source>Specifies the IP addresses for the hosts on which Erlang boot servers are running, see &lt;code&gt; erl_boot_server(3)&lt;/code&gt;. This flag is mandatory if flag &lt;code&gt;-loader inet&lt;/code&gt; is present.</source>
          <target state="translated">Erlangブートサーバーが実行されているホストのIPアドレスを指定します &lt;code&gt; erl_boot_server(3)&lt;/code&gt; 参照してください。flag &lt;code&gt;-loader inet&lt;/code&gt; が存在する場合、このフラグは必須です。</target>
        </trans-unit>
        <trans-unit id="1b044d59af8123aeee08f75d87b47c142ec0b445" translate="yes" xml:space="preserve">
          <source>Specifies the IP addresses for the hosts on which Erlang boot servers are running, see &lt;code&gt;erl_boot_server(3)&lt;/code&gt;. This flag is mandatory if flag &lt;code&gt;-loader inet&lt;/code&gt; is present.</source>
          <target state="translated">Erlangブートサーバーが実行されているホストのIPアドレスを指定します &lt;code&gt;erl_boot_server(3)&lt;/code&gt; 参照してください。フラグ &lt;code&gt;-loader inet&lt;/code&gt; が存在する場合、このフラグは必須です。</target>
        </trans-unit>
        <trans-unit id="d655bd05e7e251cd06d594beb4f1f79b9f6de020" translate="yes" xml:space="preserve">
          <source>Specifies the Windows-internal service name (not the display name, which is the one &lt;code&gt;erlsrv&lt;/code&gt; uses to identify the service).</source>
          <target state="translated">Windowsの内部サービス名を指定します（ &lt;code&gt;erlsrv&lt;/code&gt; がサービスを識別するために使用する表示名ではありません）。</target>
        </trans-unit>
        <trans-unit id="bf01e6a0d4d05e55b0e780ecb5e8fa79971096e0" translate="yes" xml:space="preserve">
          <source>Specifies the application callback module and a start argument, see &lt;code&gt;&lt;a href=&quot;application&quot;&gt;application(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">アプリケーションコールバックモジュールと開始引数を指定します。application &lt;code&gt;&lt;a href=&quot;application&quot;&gt;application(3)&lt;/a&gt;&lt;/code&gt; 参照してください。</target>
        </trans-unit>
        <trans-unit id="49dfe5548a8c0579d075b6c6686487463f9cd8f4" translate="yes" xml:space="preserve">
          <source>Specifies the channel process to handle an SFTP subsystem.</source>
          <target state="translated">SFTP サブシステムを処理するチャネルプロセスを指定します。</target>
        </trans-unit>
        <trans-unit id="6ff6aaeb83d014daae561e0fc64f8e825faae1c0" translate="yes" xml:space="preserve">
          <source>Specifies the configuration for &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt;, except the primary log level, which is specified with &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt;logger_level&lt;/a&gt;&lt;/code&gt;, and the compatibility with &lt;code&gt;SASL Error Logging&lt;/code&gt;, which is specified with &lt;code&gt;&lt;a href=&quot;#logger_sasl_compatible&quot;&gt; logger_sasl_compatible&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">指定のコンフィギュレーション &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; に指定されている次ログ・レベルを除く、 &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt;logger_level&lt;/a&gt;&lt;/code&gt; 、および互換性 &lt;code&gt;SASL Error Logging&lt;/code&gt; で指定されている、 &lt;code&gt;&lt;a href=&quot;#logger_sasl_compatible&quot;&gt; logger_sasl_compatible&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48c02cec66812ec7852ece4c0bc62b88b2e8921c" translate="yes" xml:space="preserve">
          <source>Specifies the configuration for &lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt;, except the primary log level, which is specified with &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt;logger_level&lt;/a&gt;&lt;/code&gt;, and the compatibility with &lt;code&gt;SASL Error Logging&lt;/code&gt;, which is specified with &lt;code&gt;&lt;a href=&quot;#logger_sasl_compatible&quot;&gt;logger_sasl_compatible&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;logger&quot;&gt;Logger&lt;/a&gt;&lt;/code&gt; の構成を指定します。ただし、 &lt;code&gt;&lt;a href=&quot;#logger_level&quot;&gt;logger_level&lt;/a&gt;&lt;/code&gt; で指定されるプライマリログレベルと、logger_sasl_compatibleで指定される &lt;code&gt;SASL Error Logging&lt;/code&gt; との互換性は &lt;code&gt;&lt;a href=&quot;#logger_sasl_compatible&quot;&gt;logger_sasl_compatible&lt;/a&gt;&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="e7f4e920703dbc3bfa71ee2c1411346b4e2817a4" translate="yes" xml:space="preserve">
          <source>Specifies the cookie of the Erlang runtime system. This flag is mandatory if flag &lt;code&gt;-loader inet&lt;/code&gt; is present.</source>
          <target state="translated">ErlangランタイムシステムのCookieを指定します。フラグ &lt;code&gt;-loader inet&lt;/code&gt; が存在する場合、このフラグは必須です。</target>
        </trans-unit>
        <trans-unit id="45b46b787a31fffabed5eed01450820e532b6f37" translate="yes" xml:space="preserve">
          <source>Specifies the destination for the analysis. If this option is not given or it is &lt;code&gt;dest&lt;/code&gt;, the destination will be the caller's group leader, otherwise the destination &lt;code&gt;Dest&lt;/code&gt; is either the &lt;code&gt;pid()&lt;/code&gt; of an I/O device or a filename. And, finally, if the filename is &lt;code&gt;[]&lt;/code&gt; - &lt;code&gt;&quot;fprof.analysis&quot;&lt;/code&gt; is used instead.</source>
          <target state="translated">分析の宛先を指定します。このオプションが指定されていないか &lt;code&gt;dest&lt;/code&gt; の場合、宛先は呼び出し元のグループリーダーになります。それ以外の場合、宛先 &lt;code&gt;Dest&lt;/code&gt; はI / Oデバイスの &lt;code&gt;pid()&lt;/code&gt; またはファイル名です。そして最後に、ファイル名が &lt;code&gt;[]&lt;/code&gt; の場合 - 代わりに &lt;code&gt;&quot;fprof.analysis&quot;&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="952057c2e8687b3566ab54479525a8c7a6b88329" translate="yes" xml:space="preserve">
          <source>Specifies the destination for the trace text dump. If this option is not given, no dump is generated, if it is &lt;code&gt;dump&lt;/code&gt; the destination will be the caller's group leader, otherwise the destination &lt;code&gt;Dump&lt;/code&gt; is either the pid of an I/O device or a filename. And, finally, if the filename is &lt;code&gt;[]&lt;/code&gt; - &lt;code&gt;&quot;fprof.dump&quot;&lt;/code&gt; is used instead. This option is not allowed with the &lt;code&gt;stop&lt;/code&gt; option.</source>
          <target state="translated">トレーステキストダンプの宛先を指定します。このオプションが与えられていない場合、ダンプが生成されないことがある場合は、 &lt;code&gt;dump&lt;/code&gt; 先をそれ以外の場合は、宛先、発信者のグループのリーダーになります &lt;code&gt;Dump&lt;/code&gt; I / Oデバイスまたはファイル名のPIDのいずれかです。そして最後に、ファイル名が &lt;code&gt;[]&lt;/code&gt; の場合 - 代わりに &lt;code&gt;&quot;fprof.dump&quot;&lt;/code&gt; が使用されます。このオプションは、 &lt;code&gt;stop&lt;/code&gt; オプションと一緒に使用することはできません。</target>
        </trans-unit>
        <trans-unit id="39e4e09132b10b25be07956cc6decb2963d7fa7b" translate="yes" xml:space="preserve">
          <source>Specifies the destination to write the formatted text. Default destination is &lt;code&gt;standard_io&lt;/code&gt;, but a filename can also be specified.</source>
          <target state="translated">フォーマット済みテキストの書き込み先を指定します。デフォルトの宛先は &lt;code&gt;standard_io&lt;/code&gt; ですが、ファイル名も指定できます。</target>
        </trans-unit>
        <trans-unit id="6a898b76288f135e14a68d460953620429563cc7" translate="yes" xml:space="preserve">
          <source>Specifies the directory in which the CRLs can be found.</source>
          <target state="translated">CRL が見つかるディレクトリを指定します。</target>
        </trans-unit>
        <trans-unit id="2569413a393a3d307887a9afe3143d813c8f282e" translate="yes" xml:space="preserve">
          <source>Specifies the encoding of the generated file.</source>
          <target state="translated">生成されるファイルのエンコーディングを指定します。</target>
        </trans-unit>
        <trans-unit id="e2d994c9fb529d50e95d1c799426c3d5d1ffbe12" translate="yes" xml:space="preserve">
          <source>Specifies the encryption or decryption applied to tar files when using &lt;code&gt;&lt;a href=&quot;#open_tar-3&quot;&gt;open_tar/3&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#open_tar-4&quot;&gt;open_tar/4&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#open_tar-3&quot;&gt;open_tar/3&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#open_tar-4&quot;&gt;open_tar/4&lt;/a&gt;&lt;/code&gt; を使用するときにtarファイルに適用される暗号化または復号化を指定します。</target>
        </trans-unit>
        <trans-unit id="d529e121b4b6cce7f1e463c84058fee2efbbcaa7" translate="yes" xml:space="preserve">
          <source>Specifies the end of an &lt;code&gt;ifdef&lt;/code&gt;, an &lt;code&gt;ifndef&lt;/code&gt; directive, or the end of an &lt;code&gt;if&lt;/code&gt; or &lt;code&gt;elif&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;ifdef&lt;/code&gt; の終了、 &lt;code&gt;ifndef&lt;/code&gt; ディレクティブ、または &lt;code&gt;if&lt;/code&gt; または &lt;code&gt;elif&lt;/code&gt; ディレクティブの終了を指定します。</target>
        </trans-unit>
        <trans-unit id="0ded5fdd324009ea93d0f4014740ca8247c88277" translate="yes" xml:space="preserve">
          <source>Specifies the file name suffix to be used when a backup file is created; the default value is &lt;code&gt;&quot;.bak&quot;&lt;/code&gt; (cf. the &lt;code&gt;backups&lt;/code&gt; option).</source>
          <target state="translated">バックアップファイルの作成時に使用するファイル名のサフィックスを指定します。デフォルト値は &lt;code&gt;&quot;.bak&quot;&lt;/code&gt; （ &lt;code&gt;backups&lt;/code&gt; オプションを参照）。</target>
        </trans-unit>
        <trans-unit id="a42a69056256f3b36155d0001e5a724fc33c5b60" translate="yes" xml:space="preserve">
          <source>Specifies the file name suffix to be used when a backup file is created; the default value is &lt;code&gt;&quot;.bak&quot;&lt;/code&gt;.</source>
          <target state="translated">バックアップファイルの作成時に使用するファイル名のサフィックスを指定します。デフォルト値は &lt;code&gt;&quot;.bak&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9e8a95521317583e3190ac9fef113c569b2fb1c1" translate="yes" xml:space="preserve">
          <source>Specifies the filename of the trace. If the option &lt;code&gt;file&lt;/code&gt; is given, or none of these options are given, the file &lt;code&gt;&quot;fprof.trace&quot;&lt;/code&gt; is used. This option is only allowed with the &lt;code&gt;start&lt;/code&gt; option, but not with the &lt;code&gt;{tracer, Tracer}&lt;/code&gt; option.</source>
          <target state="translated">トレースのファイル名を指定します。オプション &lt;code&gt;file&lt;/code&gt; が指定されている場合、またはこれらのオプションが指定されていない場合、ファイル &lt;code&gt;&quot;fprof.trace&quot;&lt;/code&gt; が使用されます。このオプションは、 &lt;code&gt;start&lt;/code&gt; オプションでのみ使用できます。 &lt;code&gt;{tracer, Tracer}&lt;/code&gt; オプションでは使用できません。</target>
        </trans-unit>
        <trans-unit id="65b1fccea2216ad3473b2d58aed2d9e2c5006d28" translate="yes" xml:space="preserve">
          <source>Specifies the filenames that are used for access files. When a request comes, every directory in the path to the requested asset are searched after files with the names specified by this parameter. If such a file is found, the file is parsed and the restrictions specified in it are applied to the request.</source>
          <target state="translated">アクセス ファイルに使用するファイル名を指定します。リクエストが来ると、リクエストされたアセットへのパス内の全てのディレクトリで、このパラメータで指定された名前のファイルが検索されます。そのようなファイルが見つかった場合は、そのファイルを解析し、そのファイルで指定された制限がリクエストに適用されます。</target>
        </trans-unit>
        <trans-unit id="5455c6185a0a3b774fbb3441f9f86c47fd4a7e3e" translate="yes" xml:space="preserve">
          <source>Specifies the format handler to use. If this option is not specified, option &lt;code&gt;handler&lt;/code&gt; that is specified when starting the tracer is used. If option &lt;code&gt;handler&lt;/code&gt; is not specified when starting the tracer either, a default handler is used, which prints each trace message as a text line.</source>
          <target state="translated">使用するフォーマットハンドラを指定します。このオプションが指定されていない場合、オプション &lt;code&gt;handler&lt;/code&gt; 、トレーサの起動時に指定されたハンドラが使用されます。トレーサの起動時にオプション &lt;code&gt;handler&lt;/code&gt; も指定されていない場合、デフォルトのハンドラが使用され、各トレースメッセージがテキスト行として出力されます。</target>
        </trans-unit>
        <trans-unit id="3a28c94a725c63da3fc84e3cd6f693ad640dd550" translate="yes" xml:space="preserve">
          <source>Specifies the handler filters.</source>
          <target state="translated">ハンドラのフィルタを指定します。</target>
        </trans-unit>
        <trans-unit id="80c9f8084de6512b7f113466e2688bc2f4a04fe7" translate="yes" xml:space="preserve">
          <source>Specifies the identity of the Erlang runtime system. If it is run as a distributed node, &lt;code&gt;Id&lt;/code&gt; must be identical to the name supplied together with flag &lt;code&gt;-sname&lt;/code&gt; or &lt;code&gt;-name&lt;/code&gt;.</source>
          <target state="translated">ErlangランタイムシステムのIDを指定します。分散ノードとして実行される場合、 &lt;code&gt;Id&lt;/code&gt; は、フラグ &lt;code&gt;-sname&lt;/code&gt; または &lt;code&gt;-name&lt;/code&gt; とともに指定された名前と同一である必要があります。</target>
        </trans-unit>
        <trans-unit id="7a85202bcef348fbe2b9d55de3145e290c4d7c05" translate="yes" xml:space="preserve">
          <source>Specifies the identity the client presents to the server. The matching secret is found by calling &lt;code&gt;user_lookup_fun&lt;/code&gt;</source>
          <target state="translated">クライアントがサーバーに提示するIDを指定します。一致するシークレットは、 &lt;code&gt;user_lookup_fun&lt;/code&gt; を呼び出すことで見つかります</target>
        </trans-unit>
        <trans-unit id="f0c95ccbe0f0ea3a453fce44769b19d8b010f5a6" translate="yes" xml:space="preserve">
          <source>Specifies the identity the client presents to the server. The matching secret is found by calling &lt;code&gt;user_lookup_fun&lt;/code&gt;.</source>
          <target state="translated">クライアントがサーバーに提示するIDを指定します。一致するシークレットは、 &lt;code&gt;user_lookup_fun&lt;/code&gt; を呼び出すことによって見つかります。</target>
        </trans-unit>
        <trans-unit id="ff680f64a65cc9615ac537805e1ac6fcea622aae" translate="yes" xml:space="preserve">
          <source>Specifies the initial array size; this also implies &lt;code&gt;{fixed, true}&lt;/code&gt;. If &lt;code&gt;N&lt;/code&gt; is not a non-negative integer, the call fails with reason &lt;code&gt;badarg&lt;/code&gt;.</source>
          <target state="translated">初期配列サイズを指定します。これは &lt;code&gt;{fixed, true}&lt;/code&gt; も意味します。 &lt;code&gt;N&lt;/code&gt; が負でない整数でない場合、呼び出しは理由 &lt;code&gt;badarg&lt;/code&gt; で失敗します。</target>
        </trans-unit>
        <trans-unit id="37f5b1b51dd225ae5c6aa407ed3956444a85e8d5" translate="yes" xml:space="preserve">
          <source>Specifies the log destination.</source>
          <target state="translated">ログの保存先を指定します。</target>
        </trans-unit>
        <trans-unit id="5ed4292ec93c010643527041e454b4e7961a84b4" translate="yes" xml:space="preserve">
          <source>Specifies the log level for a TLS/DTLS connection. Alerts are logged on &lt;code&gt;notice&lt;/code&gt; level, which is the default level. The level &lt;code&gt;debug&lt;/code&gt; triggers verbose logging of TLS/DTLS protocol messages. See also &lt;code&gt;ssl(6)&lt;/code&gt;</source>
          <target state="translated">TLS / DTLS接続のログレベルを指定します。アラートは、デフォルトレベルである &lt;code&gt;notice&lt;/code&gt; レベルでログに記録されます。レベル &lt;code&gt;debug&lt;/code&gt; は、TLS / DTLSプロトコルメッセージの詳細ログをトリガーします。 &lt;code&gt;ssl(6)&lt;/code&gt; も参照してください</target>
        </trans-unit>
        <trans-unit id="29dd5dab4832d8ebcf48692822520b370b91f6d5" translate="yes" xml:space="preserve">
          <source>Specifies the log level for the handler, that is, log events that are equally or more severe than this level, are forwarded to the handler filters for this handler.</source>
          <target state="translated">ハンドラのログレベルを指定します。つまり、このレベルと同等かそれ以上に深刻なログイベントは、このハンドラのハンドラフィルタに転送されます。</target>
        </trans-unit>
        <trans-unit id="1c259b9830dc67a8b8fd35b98c5e2380f8f41a44" translate="yes" xml:space="preserve">
          <source>Specifies the log name. This name must be passed on as a parameter in all subsequent logging operations. A name must always be supplied.</source>
          <target state="translated">ログ名を指定します。この名前は、その後のすべてのロギング操作でパラメータとして渡される必要があります。名前は常に指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="aa320d11d86318d02e1157235f520312d38e3ea6" translate="yes" xml:space="preserve">
          <source>Specifies the maximum fragment length the client is prepared to accept from the server. See &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">クライアントがサーバーから受け入れる準備ができている最大フラグメント長を指定します。 &lt;code&gt;&lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;RFC 6066&lt;/a&gt;&lt;/code&gt; 参照してください</target>
        </trans-unit>
        <trans-unit id="c52d1a9bacb11746d7cb358ab914802339c46802" translate="yes" xml:space="preserve">
          <source>Specifies the maximum number of attempts to authenticate a user before the user is blocked out. If a user successfully authenticates while blocked, the user receives a 403 (Forbidden) response from the server. If the user makes a failed attempt while blocked, the server returns 401 (Unauthorized), for security reasons. Default is &lt;code&gt;3&lt;/code&gt;. Can be set to infinity.</source>
          <target state="translated">ユーザーがブロックされるまでにユーザーを認証する最大試行回数を指定します。ブロック中にユーザーが認証に成功すると、ユーザーはサーバーから403（禁止）応答を受け取ります。ブロック中にユーザーが試行に失敗した場合、サーバーはセキュリティ上の理由から401（Unauthorized）を返します。デフォルトは &lt;code&gt;3&lt;/code&gt; です。無限に設定できます。</target>
        </trans-unit>
        <trans-unit id="6149a14f9ab3d7f7a28bfb24f233f5b9dd59163c" translate="yes" xml:space="preserve">
          <source>Specifies the method used by &lt;code&gt;erl_prim_loader&lt;/code&gt; to load Erlang modules into the system; see &lt;code&gt;&lt;a href=&quot;erl_prim_loader&quot;&gt;erl_prim_loader(3)&lt;/a&gt;&lt;/code&gt;. Two &lt;code&gt;Loader&lt;/code&gt; methods are supported:</source>
          <target state="translated">Erlangモジュールをシステムにロードするために &lt;code&gt;erl_prim_loader&lt;/code&gt; が使用するメソッドを指定します。 &lt;code&gt;&lt;a href=&quot;erl_prim_loader&quot;&gt;erl_prim_loader(3)&lt;/a&gt;&lt;/code&gt; を参照してください。2つの &lt;code&gt;Loader&lt;/code&gt; メソッドがサポートされています。</target>
        </trans-unit>
        <trans-unit id="8b6b14950ff828d2b84321b57a0ff5134951e1c8" translate="yes" xml:space="preserve">
          <source>Specifies the module to use for registration and lookup of node names. Defaults to &lt;code&gt;erl_epmd&lt;/code&gt;.</source>
          <target state="translated">ノード名の登録と検索に使用するモジュールを指定します。デフォルトは &lt;code&gt;erl_epmd&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4071e650de6631118bb07c784d07e5d47f922ee2" translate="yes" xml:space="preserve">
          <source>Specifies the name of a configuration file, &lt;code&gt;Config.config&lt;/code&gt;, which is used to configure applications; see &lt;code&gt;app(4)&lt;/code&gt; and &lt;code&gt;application(3)&lt;/code&gt;.</source>
          <target state="translated">アプリケーションの構成に使用される構成ファイル &lt;code&gt;Config.config&lt;/code&gt; の名前を指定します。 &lt;code&gt;app(4)&lt;/code&gt; および &lt;code&gt;application(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="dc67360fc01156f260633490cfe8c48a3e088425" translate="yes" xml:space="preserve">
          <source>Specifies the name of one or more configuration files, &lt;code&gt;Config.config&lt;/code&gt;, which is used to configure applications; see &lt;code&gt;app(4)&lt;/code&gt; and &lt;code&gt; application(3)&lt;/code&gt;.</source>
          <target state="translated">アプリケーションの構成に使用される1つ以上の構成ファイル &lt;code&gt;Config.config&lt;/code&gt; の名前を指定します。 &lt;code&gt;app(4)&lt;/code&gt; および &lt;code&gt; application(3)&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="8f264fd69484af28ffae734472c59803b0ef0b2e" translate="yes" xml:space="preserve">
          <source>Specifies the name of the boot file, &lt;code&gt;File.boot&lt;/code&gt;, which is used to start the system; see &lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt;. Unless &lt;code&gt;File&lt;/code&gt; contains an absolute path, the system searches for &lt;code&gt;File.boot&lt;/code&gt; in the current and &lt;code&gt;$ROOT/bin&lt;/code&gt; directories.</source>
          <target state="translated">システムの起動に使用されるブートファイル &lt;code&gt;File.boot&lt;/code&gt; の名前を指定します。 &lt;code&gt;&lt;a href=&quot;init&quot;&gt;init(3)&lt;/a&gt;&lt;/code&gt; を参照してください。 &lt;code&gt;File&lt;/code&gt; に絶対パスが含まれていない限り、システムは現在のディレクトリと &lt;code&gt;$ROOT/bin&lt;/code&gt; ディレクトリで &lt;code&gt;File.boot&lt;/code&gt; を検索します。</target>
        </trans-unit>
        <trans-unit id="1ec64a2173b07191e2d565ccd485aae746f480c5" translate="yes" xml:space="preserve">
          <source>Specifies the name of the directory in which the output file is to be written. An empty string is interpreted as the current directory. By default, the current directory is used.</source>
          <target state="translated">出力ファイルを書き込むディレクトリ名を指定します。空の文字列は、カレントディレクトリとして解釈されます。デフォルトでは、カレントディレクトリが使用されます。</target>
        </trans-unit>
        <trans-unit id="716ee0450ad53d215821f32f0ee8d0adac820253" translate="yes" xml:space="preserve">
          <source>Specifies the name of the directory in which the output file is to be written. By default, the current directory is used. If the value is an empty string, the current directory is used.</source>
          <target state="translated">出力ファイルを書き込むディレクトリの名前を指定します。デフォルトでは、カレントディレクトリが使用されます。値が空文字列の場合は、カレントディレクトリが使用されます。</target>
        </trans-unit>
        <trans-unit id="9ee4f335d4191683ebb2904dbd95995dac769beb" translate="yes" xml:space="preserve">
          <source>Specifies the name of the directory to which any generated stub module files are written. The default value is &lt;code&gt;&quot;stubs&quot;&lt;/code&gt;.</source>
          <target state="translated">生成されたスタブモジュールファイルが書き込まれるディレクトリの名前を指定します。デフォルト値は &lt;code&gt;&quot;stubs&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="6dc5726d987ee0f019dd98cad0981dc7d6253a8c" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file (without suffix) to which the resulting source code is to be written. By default, this is the same as the &lt;code&gt;Name&lt;/code&gt; argument.</source>
          <target state="translated">結果のソースコードが書き込まれるファイルの名前（サフィックスなし）を指定します。デフォルトでは、これは &lt;code&gt;Name&lt;/code&gt; 引数と同じです。</target>
        </trans-unit>
        <trans-unit id="f8540c944de095f6483b18ec6123d81a4f4c080e" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file (without suffix) to which the resulting source code is to be written. If this option is not specified, the &lt;code&gt;Name&lt;/code&gt; argument is used.</source>
          <target state="translated">結果のソースコードが書き込まれるファイルの名前（サフィックスなし）を指定します。このオプションが指定されていない場合、 &lt;code&gt;Name&lt;/code&gt; 引数が使用されます。</target>
        </trans-unit>
        <trans-unit id="37257543bb4235b7c81905784d4365c5b22e9d21" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file from which the source code was taken. This is only used for generation of error reports. The default value is the empty string.</source>
          <target state="translated">ソース コードを取得したファイル名を指定します。これはエラー・レポートの生成にのみ使用されます。既定値は空文字列です。</target>
        </trans-unit>
        <trans-unit id="e4237ef82d4494fb98b2da4e67391f4c6d4fa281" translate="yes" xml:space="preserve">
          <source>Specifies the name of the file to be used for logged terms. If this value is omitted and the log name is an atom or a string, the filename defaults to &lt;code&gt;lists:concat([Log, &quot;.LOG&quot;])&lt;/code&gt; for halt logs.</source>
          <target state="translated">ログに記録された用語に使用されるファイルの名前を指定します。この値が省略され、ログ名がアトムまたは文字列の場合、停止ログのファイル名はデフォルトで &lt;code&gt;lists:concat([Log, &quot;.LOG&quot;])&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="873ccffbaf98b33adc0461b78b73fe49ca222ee4" translate="yes" xml:space="preserve">
          <source>Specifies the name of the loader used by &lt;code&gt;erl_prim_loader&lt;/code&gt;. &lt;code&gt;Loader&lt;/code&gt; can be &lt;code&gt;efile&lt;/code&gt; (use the local file system) or &lt;code&gt;inet&lt;/code&gt; (load using the &lt;code&gt;boot_server&lt;/code&gt; on another Erlang node).</source>
          <target state="translated">&lt;code&gt;erl_prim_loader&lt;/code&gt; が使用するローダーの名前を指定します。 &lt;code&gt;Loader&lt;/code&gt; は &lt;code&gt;efile&lt;/code&gt; （ローカルファイルシステムを使用）または &lt;code&gt;inet&lt;/code&gt; （別のErlangノードの &lt;code&gt;boot_server&lt;/code&gt; を使用してロード）のいずれかです。</target>
        </trans-unit>
        <trans-unit id="a0c4c893c52783bf1527d7276992d6ec887b51d4" translate="yes" xml:space="preserve">
          <source>Specifies the number of columns in the analysis text. If this option is not given the number of columns is set to 80.</source>
          <target state="translated">解析テキストの列数を指定します。このオプションを指定しない場合、列数は 80 に設定されます。</target>
        </trans-unit>
        <trans-unit id="29f2553b90ba8e21a17c8412a775ae878d7a5f28" translate="yes" xml:space="preserve">
          <source>Specifies the number of minutes a failed user authentication is remembered. If a user authenticates after this time has passed, the previous failed authentications are forgotten. Default is &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">失敗したユーザー認証が記憶される分数を指定します。この時間が経過した後にユーザーが認証を行うと、以前の失敗した認証は忘れられます。デフォルトは &lt;code&gt;30&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0e81de7d06e2b3f516ef0f3fcb291599f5346d7a" translate="yes" xml:space="preserve">
          <source>Specifies the number of minutes a user is blocked. After this timehas passed, the user automatically regains access. Default is &lt;code&gt;60&lt;/code&gt;.</source>
          <target state="translated">ユーザーがブロックされる分数を指定します。この時間が経過すると、ユーザーは自動的にアクセスを回復します。デフォルトは &lt;code&gt;60&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3f3927329a37955b0329e90f73d6bd01c48d70eb" translate="yes" xml:space="preserve">
          <source>Specifies the number of parts the subject string is to be split into.</source>
          <target state="translated">サブジェクト文字列を分割する部分の数を指定します。</target>
        </trans-unit>
        <trans-unit id="8207d98172a81fbc09c1ba4c28e7bde32ac7dadd" translate="yes" xml:space="preserve">
          <source>Specifies the number of seconds a successful user authentication is remembered. After this time has passed, the authentication is no longer reported. Default is &lt;code&gt;30&lt;/code&gt;.</source>
          <target state="translated">成功したユーザー認証が記憶される秒数を指定します。この時間が経過すると、認証は報告されなくなります。デフォルトは &lt;code&gt;30&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="55a9699573c4a262b4fa5935c65712551d146d2d" translate="yes" xml:space="preserve">
          <source>Specifies the options for the SNMP note store.</source>
          <target state="translated">SNMPノートストアのオプションを指定します。</target>
        </trans-unit>
        <trans-unit id="90560d87857a7ebc70c6aeffcc6b2e765e1a9d02" translate="yes" xml:space="preserve">
          <source>Specifies the options for the manager server process.</source>
          <target state="translated">マネージャーサーバープロセスのオプションを指定します。</target>
        </trans-unit>
        <trans-unit id="2820010a48c19c5d199aa3acf1fc88ba1c9738f2" translate="yes" xml:space="preserve">
          <source>Specifies the preferred maximum number of characters on any line, including indentation. The default value is 80.</source>
          <target state="translated">インデントを含めて、任意の行の望ましい最大文字数を指定します。デフォルト値は80です。</target>
        </trans-unit>
        <trans-unit id="0d5267db33a1d988cde050567cc551cd47aadb69" translate="yes" xml:space="preserve">
          <source>Specifies the preferred maximum number of characters on any line, not counting indentation. The default value is 65.</source>
          <target state="translated">インデントを考慮せずに、任意の行に表示する文字数の最大値を指定します。デフォルト値は65です。</target>
        </trans-unit>
        <trans-unit id="875af41d367db07368951fed1887bb6bf57dfa8b" translate="yes" xml:space="preserve">
          <source>Specifies the primary filters.</source>
          <target state="translated">プライマリフィルタを指定します。</target>
        </trans-unit>
        <trans-unit id="16f23d44854f2be07047a6283bcceeca405aa6a8" translate="yes" xml:space="preserve">
          <source>Specifies the primary log level, that is, log event that are equally or more severe than this level, are forwarded to the primary filters. Less severe log events are immediately discarded.</source>
          <target state="translated">プライマリログレベルを指定します。つまり、このレベルと同じかそれ以上に深刻なログイベントをプライマリフィルタに転送します。重度の低いログ イベントは直ちに破棄されます。</target>
        </trans-unit>
        <trans-unit id="0fe10d443b571f9009ea2bd0013789e9ea9ce912" translate="yes" xml:space="preserve">
          <source>Specifies the primary log level. See the &lt;code&gt;kernel(6)&lt;/code&gt; manual page for more information about this parameter.</source>
          <target state="translated">プライマリログレベルを指定します。このパラメータの詳細については、 &lt;code&gt;kernel(6)&lt;/code&gt; のマニュアルページを参照してください。</target>
        </trans-unit>
        <trans-unit id="151b1572a25df546c65b5193dbbe46b97f12f35f" translate="yes" xml:space="preserve">
          <source>Specifies the processes to be traced. Trace flags specified in this call specify what to trace on each process. This function can be called many times if you like different trace flags to be set on different processes.</source>
          <target state="translated">トレースするプロセスを指定します。この呼び出しで指定されたトレースフラグは、各プロセスで何をトレースするかを指定します。プロセスごとに異なるトレースフラグを設定したい場合は、この関数を何度も呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="2651e9cda43c2a3b2258924c47236ffab78d21c8" translate="yes" xml:space="preserve">
          <source>Specifies the server identity hint, which the server presents to the client.</source>
          <target state="translated">サーバーがクライアントに提示するサーバー ID ヒントを指定します。</target>
        </trans-unit>
        <trans-unit id="f4d334fe554edc3fb1d020c6bf3708ea49d7d731" translate="yes" xml:space="preserve">
          <source>Specifies the short or long node name of the Erlang emulator. The Erlang services are always distributed. Default is to use the service name as (short) nodename.</source>
          <target state="translated">Erlangエミュレータの短いノード名か長いノード名を指定します。Erlangのサービスは常に配布されています。デフォルトはサービス名を(短い)ノード名にします。</target>
        </trans-unit>
        <trans-unit id="48d12a63782a3e24ddc5e514f3a55e564c6217fa" translate="yes" xml:space="preserve">
          <source>Specifies the size of the audit trail log. This parameter is sent to &lt;code&gt;disk_log&lt;/code&gt;.</source>
          <target state="translated">監査証跡ログのサイズを指定します。このパラメーターは &lt;code&gt;disk_log&lt;/code&gt; に送信されます。</target>
        </trans-unit>
        <trans-unit id="b5a9ba11e27524f18872f5a681810d5e606cda71" translate="yes" xml:space="preserve">
          <source>Specifies the suffix to be used for the output file names; the default value is &lt;code&gt;&quot;.erl&quot;&lt;/code&gt;.</source>
          <target state="translated">出力ファイル名に使用するサフィックスを指定します。デフォルト値は &lt;code&gt;&quot;.erl&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="5fb79a41fe81a312aa3e97be11db5d4a8002931d" translate="yes" xml:space="preserve">
          <source>Specifies the timeout time for the request-keep-alive timer.</source>
          <target state="translated">リクエストキープアライブタイマーのタイムアウト時間を指定します。</target>
        </trans-unit>
        <trans-unit id="11d52c1796914b8a1f5f214bbba67a504109d182" translate="yes" xml:space="preserve">
          <source>Specifies the type of output file. &lt;code&gt;Output_type&lt;/code&gt; is the same as the file extension of the output file, but without the period. This option is ignored by compilers that have a single output format.</source>
          <target state="translated">出力ファイルのタイプを指定します。 &lt;code&gt;Output_type&lt;/code&gt; は、出力ファイルのファイル拡張子と同じですが、ピリオドはありません。このオプションは、単一の出力形式を持つコンパイラでは無視されます。</target>
        </trans-unit>
        <trans-unit id="eced978aa05aa22684ae33073877e513a8908239" translate="yes" xml:space="preserve">
          <source>Specifies the username and password to use to authenticate to the server.</source>
          <target state="translated">サーバーへの認証に使用するユーザー名とパスワードを指定します。</target>
        </trans-unit>
        <trans-unit id="80bcf2009be18d6d83aadd3c29a800b05ed7e545" translate="yes" xml:space="preserve">
          <source>Specifies what happens to a log event if all filters return &lt;code&gt;ignore&lt;/code&gt;, or if no filters exist.</source>
          <target state="translated">すべてのフィルターが &lt;code&gt;ignore&lt;/code&gt; を返した場合、またはフィルターが存在しない場合にログイベントがどうなるかを指定します。</target>
        </trans-unit>
        <trans-unit id="4dfa114baf9f8d6f2b236d8d0ccb65ecd0f7d095" translate="yes" xml:space="preserve">
          <source>Specifies what type of an audit trail log should be used. The effect of the type is actually different for the the agent and the manager.</source>
          <target state="translated">監査証跡ログの種類を指定します。エージェントとマネージャでは、実際にはタイプの効果が異なります。</target>
        </trans-unit>
        <trans-unit id="bd18d7ad2981fad7ccb5d75bad1824c22ce4eae6" translate="yes" xml:space="preserve">
          <source>Specifies where shell output is to be sent. Default is that shell output is discarded. To be used only for debugging.</source>
          <target state="translated">シェル出力をどこに送るかを指定します。デフォルトでは、シェル出力は破棄されます。デバッグ時にのみ使用します。</target>
        </trans-unit>
        <trans-unit id="2effffeb6cea75b368a013821667ea4efacfcb2d" translate="yes" xml:space="preserve">
          <source>Specifies where the HTML log files are to be written.</source>
          <target state="translated">HTMLログファイルを書き込む場所を指定します。</target>
        </trans-unit>
        <trans-unit id="aeca1d9ed381187a250a618ba95a1823e7727e72" translate="yes" xml:space="preserve">
          <source>Specifies where the application &lt;code&gt;Application = atom()&lt;/code&gt; can execute.</source>
          <target state="translated">アプリケーション &lt;code&gt;Application = atom()&lt;/code&gt; を実行できる場所を指定します。</target>
        </trans-unit>
        <trans-unit id="1a96b1e410416b1763090d51946ce858f0aaa753" translate="yes" xml:space="preserve">
          <source>Specifies where the audit trail log should be stored.</source>
          <target state="translated">監査証跡ログを保存する場所を指定します。</target>
        </trans-unit>
        <trans-unit id="dc14492fbf0bed719b58b6a14729ced65f4dffc2" translate="yes" xml:space="preserve">
          <source>Specifies where to send the trace messages. &lt;code&gt;Tracer&lt;/code&gt; must be the process identifier of a local process or the port identifier of a local port.</source>
          <target state="translated">トレースメッセージの送信先を指定します。 &lt;code&gt;Tracer&lt;/code&gt; は、ローカルプロセスのプロセス識別子またはローカルポートのポート識別子である必要があります。</target>
        </trans-unit>
        <trans-unit id="0736a03e461873d2b6560c5e341722f3499d53ae" translate="yes" xml:space="preserve">
          <source>Specifies whether Erlang should start &lt;code&gt;&lt;a href=&quot;epmd&quot;&gt;epmd&lt;/a&gt;&lt;/code&gt; on startup. By default this is &lt;code&gt;true&lt;/code&gt;, but if you prefer to start epmd manually, set this to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">Erlangが起動時に &lt;code&gt;&lt;a href=&quot;epmd&quot;&gt;epmd&lt;/a&gt;&lt;/code&gt; を開始するかどうかを指定します。デフォルトではこれは &lt;code&gt;true&lt;/code&gt; ですが、epmdを手動で開始する場合は、これを &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="14a0817207cc536325027c5c3de6ecde5063837c" translate="yes" xml:space="preserve">
          <source>Specifies whether the &lt;code&gt;disksup&lt;/code&gt; helper process should only use POSIX conformant commands (&lt;code&gt;true&lt;/code&gt;) or not. The default is &lt;code&gt;false&lt;/code&gt;. Setting this parameter to &lt;code&gt;true&lt;/code&gt; can be necessary on embedded systems with stripped-down versions of Unix tools like &lt;code&gt;df&lt;/code&gt;. The returned disk data and alarms can be different when using this option.</source>
          <target state="translated">&lt;code&gt;disksup&lt;/code&gt; ヘルパープロセスでPOSIX準拠のコマンドのみを使用するか（ &lt;code&gt;true&lt;/code&gt; ）、否かを指定します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。このパラメーターを &lt;code&gt;true&lt;/code&gt; に設定する必要があるのは、 &lt;code&gt;df&lt;/code&gt; などのUnixツールの簡略化されたバージョンが組み込まれたシステムの場合です。このオプションを使用すると、返されるディスクデータとアラームが異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="e37a2fb49e4dd84f2ebb07340bc32c5cea43f117" translate="yes" xml:space="preserve">
          <source>Specifies whether the &lt;code&gt;memsup&lt;/code&gt; process should only check system memory usage (&lt;code&gt;true&lt;/code&gt;) or not. The default is &lt;code&gt;false&lt;/code&gt;, meaning that information regarding both system memory usage and Erlang process memory usage is collected.</source>
          <target state="translated">&lt;code&gt;memsup&lt;/code&gt; プロセスがシステムメモリの使用状況のみをチェックするか（ &lt;code&gt;true&lt;/code&gt; ）、否かを指定します。デフォルトは &lt;code&gt;false&lt;/code&gt; です。つまり、システムのメモリ使用量とErlangプロセスのメモリ使用量の両方に関する情報が収集されます。</target>
        </trans-unit>
        <trans-unit id="cb2182a89513f347731a10ff199fd168b6267f41" translate="yes" xml:space="preserve">
          <source>Specifies which captured (sub)patterns are to be returned. &lt;code&gt;ValueSpec&lt;/code&gt; can either be an atom describing a predefined set of return values, or a list containing the indexes or the names of specific subpatterns to return.</source>
          <target state="translated">どのキャプチャー（サブ）パターンが返されるかを指定します。 &lt;code&gt;ValueSpec&lt;/code&gt; は、定義済みの戻り値のセットを記述するアトム、または返す特定のサブパターンのインデックスまたは名前を含むリストのいずれかです。</target>
        </trans-unit>
        <trans-unit id="277d0642b5c94d1ca87165ddc5a437572041b2fc" translate="yes" xml:space="preserve">
          <source>Specifies which captured substrings are returned and in what format. By default, &lt;code&gt;run/3&lt;/code&gt; captures all of the matching part of the substring and all capturing subpatterns (all of the pattern is automatically captured). The default return type is (zero-based) indexes of the captured parts of the string, specified as &lt;code&gt;{Offset,Length}&lt;/code&gt; pairs (the &lt;code&gt;index&lt;/code&gt;&lt;code&gt;Type&lt;/code&gt; of capturing).</source>
          <target state="translated">キャプチャされたどの部分文字列をどの形式で返すかを指定します。デフォルトでは、 &lt;code&gt;run/3&lt;/code&gt; は、サブストリングのすべての一致部分とすべてのキャプチャサブパターンをキャプチャします（すべてのパターンが自動的にキャプチャされます）。デフォルトの戻り値の型は、文字列のキャプチャされた部分の（ゼロから始まる）インデックスであり、 &lt;code&gt;{Offset,Length}&lt;/code&gt; ペア（キャプチャの &lt;code&gt;index&lt;/code&gt; &lt;code&gt;Type&lt;/code&gt; ）として指定されます。</target>
        </trans-unit>
        <trans-unit id="1dfd505e5090d57866814c4b21d2e04b0287b2d1" translate="yes" xml:space="preserve">
          <source>Specifies which element in the stored tuples to use as key. By default, it is the first element, that is, &lt;code&gt;Pos=1&lt;/code&gt;. However, this is not always appropriate. In particular, we do not want the first element to be the key if we want to store Erlang records in a table.</source>
          <target state="translated">保存されたタプルのどの要素をキーとして使用するかを指定します。デフォルトでは、これは最初の要素、つまり &lt;code&gt;Pos=1&lt;/code&gt; です。ただし、これは常に適切であるとは限りません。特に、Erlangレコードをテーブルに保存したい場合、最初の要素をキーにしたくありません。</target>
        </trans-unit>
        <trans-unit id="7fcb53499b90545bdc746f25b23b043b8860b0b9" translate="yes" xml:space="preserve">
          <source>Specifies which flags are added to the parameters of the executable &lt;code&gt;erl&lt;/code&gt;.</source>
          <target state="translated">実行可能 &lt;code&gt;erl&lt;/code&gt; のパラメーターに追加するフラグを指定します。</target>
        </trans-unit>
        <trans-unit id="dd591e33ef98c9a1d0f243438180b88cf38ad60e" translate="yes" xml:space="preserve">
          <source>Specifies which local port number to use.</source>
          <target state="translated">使用するローカルポート番号を指定します。</target>
        </trans-unit>
        <trans-unit id="a5ca385b7addea770b4598e52e3732e070259ae5" translate="yes" xml:space="preserve">
          <source>Specifies which other Erlang nodes the &lt;code&gt;inet&lt;/code&gt; loader can use. This flag is mandatory if flag &lt;code&gt;-loader inet&lt;/code&gt; is present. On each host, there must be on Erlang node with the &lt;code&gt; erl_boot_server(3)&lt;/code&gt;, which handles the load requests. &lt;code&gt;Hosts&lt;/code&gt; is a list of IP addresses (hostnames are not acceptable).</source>
          <target state="translated">&lt;code&gt;inet&lt;/code&gt; ローダーが使用できる他のErlangノードを指定します。flag &lt;code&gt;-loader inet&lt;/code&gt; が存在する場合、このフラグは必須です。各ホストには、ロード要求を処理する &lt;code&gt; erl_boot_server(3)&lt;/code&gt; を備えたErlangノードが存在する必要があります。 &lt;code&gt;Hosts&lt;/code&gt; はIPアドレスのリストです（ホスト名は使用できません）。</target>
        </trans-unit>
        <trans-unit id="a1332f139f846bbd53ce081097f03155f361535d" translate="yes" xml:space="preserve">
          <source>Specifies which other Erlang nodes the &lt;code&gt;inet&lt;/code&gt; loader can use. This flag is mandatory if flag &lt;code&gt;-loader inet&lt;/code&gt; is present. On each host, there must be on Erlang node with the &lt;code&gt;erl_boot_server(3)&lt;/code&gt;, which handles the load requests. &lt;code&gt;Hosts&lt;/code&gt; is a list of IP addresses (hostnames are not acceptable).</source>
          <target state="translated">&lt;code&gt;inet&lt;/code&gt; ローダーが使用できる他のErlangノードを指定します。フラグ &lt;code&gt;-loader inet&lt;/code&gt; が存在する場合、このフラグは必須です。各ホストには、ロード要求を処理する &lt;code&gt;erl_boot_server(3)&lt;/code&gt; を含む Erlangノードが必要です。 &lt;code&gt;Hosts&lt;/code&gt; はIPアドレスのリストです（ホスト名は使用できません）。</target>
        </trans-unit>
        <trans-unit id="53558be962c35002e0bb56fe77e9b7ddc3141ff5" translate="yes" xml:space="preserve">
          <source>Specifies which processes that shall be traced. If this option is not given, the calling process is traced. All processes spawned by the traced processes are also traced. This option is only allowed with the &lt;code&gt;start&lt;/code&gt; option.</source>
          <target state="translated">トレースするプロセスを指定します。このオプションを指定しない場合、呼び出しプロセスがトレースされます。トレースされたプロセスによって生成されたすべてのプロセスもトレースされます。このオプションは、 &lt;code&gt;start&lt;/code&gt; オプションでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="441075734f5829cc5fb329d4f975f091bf99c295" translate="yes" xml:space="preserve">
          <source>Specify &lt;code&gt;etype&lt;/code&gt; as one of the following constants:</source>
          <target state="translated">&lt;code&gt;etype&lt;/code&gt; を次の定数のいずれかとして指定します。</target>
        </trans-unit>
        <trans-unit id="2d4998769b2f5a4eee7b2e8f3a102444590d215c" translate="yes" xml:space="preserve">
          <source>Specify a system file that Erlang is to read configuration data from. &lt;code&gt;Format&lt;/code&gt; tells the parser how the file is to be interpreted:</source>
          <target state="translated">Erlangが設定データを読み取るシステムファイルを指定します。 &lt;code&gt;Format&lt;/code&gt; は、ファイルがどのように解釈されるかをパーサーに指示します。</target>
        </trans-unit>
        <trans-unit id="9b5adb5a9a945608c7adb24d26976f20ac1fc146" translate="yes" xml:space="preserve">
          <source>Specify a system file that Erlang is to read resolver configuration from for the internal DNS client &lt;code&gt;inet_res(3)&lt;/code&gt;, and monitor for changes, even if it does not exist. The path must be absolute.</source>
          <target state="translated">Erlangが内部DNSクライアント &lt;code&gt;inet_res(3)&lt;/code&gt; のリゾルバー構成を読み取るシステムファイルを指定し、それが存在しない場合でも変更を監視します。パスは絶対パスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="39e8cf1c87a200f852a1927aa8f089cf8d3ecc5f" translate="yes" xml:space="preserve">
          <source>Specify a system file that Erlang is to read resolver configuration from for the internal hosts file resolver, and monitor for changes, even if it does not exist. The path must be absolute.</source>
          <target state="translated">Erlangが内部のhostsファイルレゾルバのためにレゾルバの設定を読み込んで、存在しない場合でも変更を監視するシステムファイルを指定します。パスは絶対パスでなければなりません。</target>
        </trans-unit>
        <trans-unit id="e23627b00304a4d8b1bcae862d72b0ee4e2fbcce" translate="yes" xml:space="preserve">
          <source>Specify a system registry that Erlang is to read configuration data from. &lt;code&gt;win32&lt;/code&gt; is the only valid option.</source>
          <target state="translated">Erlangが構成データを読み取るシステムレジストリを指定します。 &lt;code&gt;win32&lt;/code&gt; が唯一の有効なオプションです。</target>
        </trans-unit>
        <trans-unit id="6718bd8fe7e1b17232d92e3bedaf177dc4950f5c" translate="yes" xml:space="preserve">
          <source>Specify breakpoints.</source>
          <target state="translated">ブレークポイントを指定します。</target>
        </trans-unit>
        <trans-unit id="05aefe09978c71eb533e67bc0a4a5abc92516f10" translate="yes" xml:space="preserve">
          <source>Specify how to perform lookup and caching of certificate revocation lists. &lt;code&gt;Module&lt;/code&gt; defaults to &lt;code&gt;ssl_crl_cache&lt;/code&gt; with &lt;code&gt;DbHandle&lt;/code&gt; being &lt;code&gt;internal&lt;/code&gt; and an empty argument list.</source>
          <target state="translated">証明書失効リストの検索とキャッシュの実行方法を指定します。 &lt;code&gt;Module&lt;/code&gt; デフォルトは &lt;code&gt;ssl_crl_cache&lt;/code&gt; で、 &lt;code&gt;DbHandle&lt;/code&gt; は &lt;code&gt;internal&lt;/code&gt; で、引数リストは空です。</target>
        </trans-unit>
        <trans-unit id="753ca300cab73ef6f1046dee190ebc7e69330958" translate="yes" xml:space="preserve">
          <source>Specify include directories to be passed to the compiler for automatic compilation (similar to &lt;code&gt;ct_run -include&lt;/code&gt;).</source>
          <target state="translated">自動コンパイルのためにコンパイラに渡されるインクルードディレクトリを指定します（ &lt;code&gt;ct_run -include&lt;/code&gt; と同様）。</target>
        </trans-unit>
        <trans-unit id="86afce635e7f24039de98afd64bd791651c094bf" translate="yes" xml:space="preserve">
          <source>Specify lookup methods and in which order to try them. The valid methods are as follows:</source>
          <target state="translated">ルックアップメソッドと、それらを試す順番を指定します。有効なメソッドは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="0e987e5615e4f2657bffcf3fb915277d969f20f2" translate="yes" xml:space="preserve">
          <source>Specify the &lt;code&gt;Mnesia&lt;/code&gt; directory by providing an application parameter either when starting the Erlang shell or in the application script. Previously, the following example was used to create the directory for the &lt;code&gt;Company&lt;/code&gt; database:</source>
          <target state="translated">Erlangシェルの起動時またはアプリケーションスクリプトでアプリケーションパラメータを指定して、 &lt;code&gt;Mnesia&lt;/code&gt; ディレクトリを指定します。以前は、次の例を使用して &lt;code&gt;Company&lt;/code&gt; データベースのディレクトリを作成していました。</target>
        </trans-unit>
        <trans-unit id="d9cb48a0bee2458b16541c2ec1dac43622330992" translate="yes" xml:space="preserve">
          <source>Specify the hostname to be used in TLS Server Name Indication extension. If not specified it will default to the &lt;code&gt;Host&lt;/code&gt; argument of &lt;code&gt;&lt;a href=&quot;#connect-3&quot;&gt;connect/[3,4]&lt;/a&gt;&lt;/code&gt; unless it is of type inet:ipaddress().</source>
          <target state="translated">TLSサーバー名表示拡張で使用するホスト名を指定します。指定しない場合、タイプinet：ipaddress（）でない限り、デフォルトで &lt;code&gt;&lt;a href=&quot;#connect-3&quot;&gt;connect/[3,4]&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;Host&lt;/code&gt; 引数が使用されます。</target>
        </trans-unit>
        <trans-unit id="b753efb9c74f7d99f9413cb4a9d22f6871c7956e" translate="yes" xml:space="preserve">
          <source>Specify the modules to be interpreted.</source>
          <target state="translated">解釈するモジュールを指定します。</target>
        </trans-unit>
        <trans-unit id="80ff8e788f0f029eac875c1827744b22530cc430" translate="yes" xml:space="preserve">
          <source>Specify the name of the libraries with &lt;code&gt;-lerl_interface -lei&lt;/code&gt;.</source>
          <target state="translated">ライブラリの名前を &lt;code&gt;-lerl_interface -lei&lt;/code&gt; で指定します。</target>
        </trans-unit>
        <trans-unit id="8fa6af97edefb9b9b0732afaa471526dab3e4a4f" translate="yes" xml:space="preserve">
          <source>Specify the name of the library with &lt;code&gt;-lei&lt;/code&gt;.</source>
          <target state="translated">ライブラリの名前を &lt;code&gt;-lei&lt;/code&gt; で指定します。</target>
        </trans-unit>
        <trans-unit id="1692060e0567093bed4a0b8bdb40881502bb2791" translate="yes" xml:space="preserve">
          <source>Specify the path to &lt;code&gt;libei.a&lt;/code&gt; with &lt;code&gt;-L$OTPROOT/lib/erl_interface-3.2.3/lib&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-L$OTPROOT/lib/erl_interface-3.2.3/lib&lt;/code&gt; を &lt;code&gt;libei.a&lt;/code&gt; してlibei.aへのパスを指定します。</target>
        </trans-unit>
        <trans-unit id="01ed86a54a658842ff830edb8386136f3061d27d" translate="yes" xml:space="preserve">
          <source>Specify the path to &lt;code&gt;liberl_interface.a&lt;/code&gt; and &lt;code&gt;libei.a&lt;/code&gt; with &lt;code&gt;-L$OTPROOT/lib/erl_interface-3.2.3/lib&lt;/code&gt;.</source>
          <target state="translated">パスを指定し &lt;code&gt;liberl_interface.a&lt;/code&gt; と &lt;code&gt;libei.a&lt;/code&gt; と &lt;code&gt;-L$OTPROOT/lib/erl_interface-3.2.3/lib&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7f7a3b41f49e858f11c0a5c92131e043c94eddc2" translate="yes" xml:space="preserve">
          <source>Specify the top-level HTML log directory (similar to &lt;code&gt;ct_run -logdir&lt;/code&gt;).</source>
          <target state="translated">トップレベルのHTMLログディレクトリを指定します（ &lt;code&gt;ct_run -logdir&lt;/code&gt; と同様）。</target>
        </trans-unit>
        <trans-unit id="848fa5d5c77622c0914c10cd7da75a2854d6d4c2" translate="yes" xml:space="preserve">
          <source>Specify which ASN.1 specs to compile in a module with extension &lt;code&gt;.set.asn&lt;/code&gt;. Choose a module name and provide the names of the ASN.1 specs. For example, if you have the specs &lt;code&gt;File1.asn&lt;/code&gt;, &lt;code&gt;File2.asn&lt;/code&gt;, and &lt;code&gt;File3.asn&lt;/code&gt;, your module &lt;code&gt;MyModule.set.asn&lt;/code&gt; looks as follows:</source>
          <target state="translated">拡張子が &lt;code&gt;.set.asn&lt;/code&gt; のモジュールでコンパイルするASN.1仕様を指定します。モジュール名を選択し、ASN.1仕様の名前を入力します。たとえば、仕様が &lt;code&gt;File1.asn&lt;/code&gt; 、 &lt;code&gt;File2.asn&lt;/code&gt; 、および &lt;code&gt;File3.asn&lt;/code&gt; の場合、モジュール &lt;code&gt;MyModule.set.asn&lt;/code&gt; は次のようになります。</target>
        </trans-unit>
        <trans-unit id="0ede1ca168066274e82416d16462db165a08574e" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;0&lt;/code&gt; as the number of parts gives the same effect as option &lt;code&gt;trim&lt;/code&gt;. If subexpressions are captured, empty subexpressions matched at the end are also stripped from the result if &lt;code&gt;trim&lt;/code&gt; or &lt;code&gt;{parts,0}&lt;/code&gt; is specified.</source>
          <target state="translated">パーツ数として &lt;code&gt;0&lt;/code&gt; を指定すると、オプション &lt;code&gt;trim&lt;/code&gt; と同じ効果が得られます。部分式がキャプチャされた場合、 &lt;code&gt;trim&lt;/code&gt; または &lt;code&gt;{parts,0}&lt;/code&gt; が指定されていると、最後に一致した空の部分式も結果から削除されます。</target>
        </trans-unit>
        <trans-unit id="1ae6586dedf228b0386f11a5096f7781896e3713" translate="yes" xml:space="preserve">
          <source>Specifying a &lt;code&gt;#diameter_callback{}&lt;/code&gt; record allows individual functions to be configured in place of the usual &lt;code&gt;diameter_app(3)&lt;/code&gt; callbacks. See &lt;code&gt;diameter_callback.erl&lt;/code&gt; for details.</source>
          <target state="translated">&lt;code&gt;#diameter_callback{}&lt;/code&gt; レコードを指定すると、通常の &lt;code&gt;diameter_app(3)&lt;/code&gt; コールバックの代わりに個々の関数を設定できます。詳細については、 &lt;code&gt;diameter_callback.erl&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="92f28840a22e4c1a0178116b6217dead2ce2b0d0" translate="yes" xml:space="preserve">
          <source>Specifying a SetFun as an integer I is equivalent to specifying &lt;code&gt;{external, fun(X)&amp;nbsp;-&amp;gt; element(I,&amp;nbsp;X)&amp;nbsp;end}&lt;/code&gt;, but is to be preferred, as it makes it possible to handle this case even more efficiently.</source>
          <target state="translated">SetFunを整数Iとして指定することは &lt;code&gt;{external, fun(X)&amp;nbsp;-&amp;gt; element(I,&amp;nbsp;X)&amp;nbsp;end}&lt;/code&gt; を指定することと同じですが、このケースをさらに効率的に処理できるため、推奨されます。</target>
        </trans-unit>
        <trans-unit id="b200657ccccc323bc4b3a61970c9fb6663f8829a" translate="yes" xml:space="preserve">
          <source>Specifying a Vendor-Id in the definition of a grouped AVP is equivalent to specifying it with &lt;code&gt;@avp_vendor_id&lt;/code&gt;.</source>
          <target state="translated">グループ化されたAVPの定義でVendor-Idを指定することは、 &lt;code&gt;@avp_vendor_id&lt;/code&gt; でそれを指定することと同じです。</target>
        </trans-unit>
        <trans-unit id="0939c70054b8b7d25dfe8894b65b0d6a2f6c5cb4" translate="yes" xml:space="preserve">
          <source>Specifying a capability as a transport option may be particularly appropriate for Inband-Security-Id, in case TLS is desired over TCP as implemented by &lt;code&gt;&lt;a href=&quot;diameter_tcp&quot;&gt;diameter_tcp(3)&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">トランスポートオプションとして機能を指定することは、 &lt;code&gt;&lt;a href=&quot;diameter_tcp&quot;&gt;diameter_tcp(3)&lt;/a&gt;&lt;/code&gt; で実装されているようにTCP経由でTLSが必要な場合に、Inband-Security-Idに特に適しています。</target>
        </trans-unit>
        <trans-unit id="fb7efdf3486ed6f6f03fa215fe68c9b19961adc4" translate="yes" xml:space="preserve">
          <source>Specifying a default value for a required variable can result in a test case always getting executed. This might not be a desired behavior.</source>
          <target state="translated">必須の変数にデフォルト値を指定すると、テストケースが常に実行されてしまうことがあります。これは望ましい動作ではないかもしれません。</target>
        </trans-unit>
        <trans-unit id="df93bcf6a37c6be11e1f38fe0c2c4974ff170827" translate="yes" xml:space="preserve">
          <source>Specifying a lower value can result in matches with deep recursion failing, when they should have matched:</source>
          <target state="translated">より低い値を指定すると、マッチするはずだったのに、深い再帰でマッチが失敗することがあります。</target>
        </trans-unit>
        <trans-unit id="9fee67be666602823141fbcc3f4990dca2082eff" translate="yes" xml:space="preserve">
          <source>Specifying caseless matching does not affect these escape sequences. For example, \p{Lu} always matches only uppercase letters. This is different from the behavior of current versions of Perl.</source>
          <target state="translated">ケースレスマッチングを指定しても、これらのエスケープシーケンスには影響しません。例えば、\p{Lu}は常に大文字のみにマッチします。これは現在のPerlのバージョンの動作とは異なります。</target>
        </trans-unit>
        <trans-unit id="e9328e55b836e81b496740c36ae4239082f4dfed" translate="yes" xml:space="preserve">
          <source>Specifying the &lt;code&gt;Mnesia&lt;/code&gt; directory where the database is to be stored.</source>
          <target state="translated">データベースを保存する &lt;code&gt;Mnesia&lt;/code&gt; ディレクトリを指定します。</target>
        </trans-unit>
        <trans-unit id="b9523b57f2fe527eb52b35d6387fb2934f9c06f0" translate="yes" xml:space="preserve">
          <source>Specifying value &lt;code&gt;0&lt;/code&gt; for &lt;code&gt;Schedulers&lt;/code&gt; or &lt;code&gt;SchedulersOnline&lt;/code&gt; resets the number of scheduler threads or scheduler threads online, respectively, to its default value.</source>
          <target state="translated">&lt;code&gt;Schedulers&lt;/code&gt; または &lt;code&gt;SchedulersOnline&lt;/code&gt; に値 &lt;code&gt;0&lt;/code&gt; を指定すると、スケジューラスレッドまたはオンラインのスケジューラスレッドの数がそれぞれデフォルト値にリセットされます。</target>
        </trans-unit>
        <trans-unit id="4fb0f8341b4c2833ab84851143e545f80147f547" translate="yes" xml:space="preserve">
          <source>Split large distribution messages into multiple fragments.</source>
          <target state="translated">大規模な配信メッセージを複数のフラグメントに分割します。</target>
        </trans-unit>
        <trans-unit id="8e6a9fde2011a67805370713435ac141e07d78b7" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;List1&lt;/code&gt; into &lt;code&gt;List2&lt;/code&gt; and &lt;code&gt;List3&lt;/code&gt;. &lt;code&gt;List2&lt;/code&gt; contains the first &lt;code&gt;N&lt;/code&gt; elements and &lt;code&gt;List3&lt;/code&gt; the remaining elements (the &lt;code&gt;N&lt;/code&gt;th tail).</source>
          <target state="translated">&lt;code&gt;List1&lt;/code&gt; を &lt;code&gt;List2&lt;/code&gt; と &lt;code&gt;List3&lt;/code&gt; に分割します。 &lt;code&gt;List2&lt;/code&gt; には最初の &lt;code&gt;N&lt;/code&gt; 個の要素が含まれ、 &lt;code&gt;List3&lt;/code&gt; には残りの要素（ &lt;code&gt;N&lt;/code&gt; 番目の末尾）が含まれます。</target>
        </trans-unit>
        <trans-unit id="e21cd9e17d2310b92584df470b648894e95593ac" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;Q1&lt;/code&gt; in two. The &lt;code&gt;N&lt;/code&gt; front items are put in &lt;code&gt;Q2&lt;/code&gt; and the rest in &lt;code&gt;Q3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Q1&lt;/code&gt; を2つに分割します。 &lt;code&gt;N&lt;/code&gt; 前の項目がに置かれ &lt;code&gt;Q2&lt;/code&gt; とで、残り &lt;code&gt;Q3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="00eec603124d258453b60da5c407f4065bdd3a82" translate="yes" xml:space="preserve">
          <source>Splits &lt;code&gt;String&lt;/code&gt; where &lt;code&gt;SearchPattern&lt;/code&gt; is encountered and return the remaining parts. &lt;code&gt;Where&lt;/code&gt;, default &lt;code&gt;leading&lt;/code&gt;, indicates whether the &lt;code&gt;leading&lt;/code&gt;, the &lt;code&gt;trailing&lt;/code&gt; or &lt;code&gt;all&lt;/code&gt; encounters of &lt;code&gt;SearchPattern&lt;/code&gt; will split &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SearchPattern&lt;/code&gt; が検出された場所で &lt;code&gt;String&lt;/code&gt; 分割し、残りの部分を返します。 &lt;code&gt;Where&lt;/code&gt; 、デフォルトの &lt;code&gt;leading&lt;/code&gt; 、 &lt;code&gt;SearchPattern&lt;/code&gt; の &lt;code&gt;leading&lt;/code&gt; 、 &lt;code&gt;trailing&lt;/code&gt; または &lt;code&gt;all&lt;/code&gt; エンカウンターが &lt;code&gt;String&lt;/code&gt; を分割するかどうかを示します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
