<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="jquery">
    <body>
      <group id="jquery">
        <trans-unit id="8cb0744718997bd96f294785ec7b3705813dca11" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Delegated event handlers do not work for SVG.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;委任されたイベントハンドラーはSVGでは機能しません。</target>
        </trans-unit>
        <trans-unit id="942e6f4af0644024fbe1f44be8be9496f385ab07" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Delegated events do not work for SVG.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;委任イベントはSVGでは機能しません。</target>
        </trans-unit>
        <trans-unit id="4dece9787706ceca0406ef7099a827799bf99966" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Do not use this method to remove native properties such as checked, disabled, or selected. This will remove the property completely and, once removed, cannot be added again to element. Use &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; to set these properties to &lt;code&gt;false&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドを使用して、チェック済み、無効、選択済みなどのネイティブプロパティを削除しないでください。これにより、プロパティが完全に削除されます。一度削除すると、要素に再度追加することはできません。代わりに &lt;code&gt;&lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt;&lt;/code&gt; を使用して、これらのプロパティを &lt;code&gt;false&lt;/code&gt; に設定してください。</target>
        </trans-unit>
        <trans-unit id="54d563021a35ae48b9a3d12c29998bff25f1f923" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For both plain objects and DOM objects other than &lt;code&gt;window&lt;/code&gt;, if a triggered event name matches the name of a property on the object, jQuery will attempt to invoke the property as a method if no event handler calls &lt;a href=&quot;event.preventdefault&quot;&gt;&lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/a&gt;. If this behavior is not desired, use &lt;a href=&quot;triggerhandler&quot;&gt;&lt;code&gt;.triggerHandler()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;window&lt;/code&gt; 以外のプレーンオブジェクトとDOMオブジェクトの両方で、トリガーされたイベント名がオブジェクトのプロパティの名前と一致する場合、イベントハンドラーが&lt;a href=&quot;event.preventdefault&quot;&gt; &lt;code&gt;event.preventDefault()&lt;/code&gt; を&lt;/a&gt;呼び出さない場合、jQueryはプロパティをメソッドとして呼び出そうとします。この動作が望ましくない場合は、代わりに&lt;a href=&quot;triggerhandler&quot;&gt; &lt;code&gt;.triggerHandler()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="f80ae80beca09be1a96db4dcd969d0308f65dc79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; For performance reasons, the dynamic state of certain form elements (e.g., user data typed into &lt;code&gt;textarea&lt;/code&gt; and user selections made to a &lt;code&gt;select&lt;/code&gt;) is not copied to the cloned elements. When cloning &lt;code&gt;input&lt;/code&gt; elements, the dynamic state of the element (e.g., user data typed into text inputs and user selections made to a checkbox) is retained in the cloned elements.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;パフォーマンス上の理由から、特定のフォーム要素の動的な状態（たとえば、 &lt;code&gt;textarea&lt;/code&gt; に入力されたユーザーデータおよび &lt;code&gt;select&lt;/code&gt; に対して行われたユーザー選択）は、複製された要素にコピーされません。 &lt;code&gt;input&lt;/code&gt; 要素を複製する場合、要素の動的な状態（たとえば、テキスト入力に入力されたユーザーデータやチェックボックスで行われたユーザー選択）は、複製された要素に保持されます。</target>
        </trans-unit>
        <trans-unit id="d2a6f26fbe51f11a45f5316d5cf51601df5693be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Host objects (or objects used by browser host environments to complete the execution environment of ECMAScript) have a number of inconsistencies which are difficult to robustly feature detect cross-platform. As a result of this, &lt;code&gt;$.isPlainObject()&lt;/code&gt; may evaluate inconsistently across browsers in certain instances.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ホストオブジェクト（またはECMAScriptの実行環境を完成するためにブラウザーのホスト環境で使用されるオブジェクト）には、クロスプラットフォームで機能を確実に検出するのが難しい多くの不整合があります。この結果、特定のインスタンスでは、 &lt;code&gt;$.isPlainObject()&lt;/code&gt; はブラウザー間で一貫性のない評価を行う場合があります。</target>
        </trans-unit>
        <trans-unit id="1dbe4fcd1e06a58361b95d919ca641229880a635" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; If you use a custom jQuery build &lt;em&gt;without the effects module&lt;/em&gt;, the &lt;code&gt;:animated&lt;/code&gt; selector will throw an error.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;&lt;em&gt;エフェクトモジュールなしで&lt;/em&gt;カスタムjQueryビルドを使用する場合、 &lt;code&gt;:animated&lt;/code&gt; セレクターはエラーをスローします。</target>
        </trans-unit>
        <trans-unit id="8eb67262dcc2dbf13fd200f6c8a7d2033f9cd002" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In Internet Explorer up to and including version 9, setting the text content of an HTML element may corrupt the text nodes of its children that are being removed from the document as a result of the operation. If you are keeping references to these DOM elements and need them to be unchanged, use &lt;code&gt;.empty().html( string )&lt;/code&gt; instead of &lt;code&gt;.html(string)&lt;/code&gt; so that the elements are removed from the document before the new string is assigned to the element.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;バージョン9以前のInternet Explorerでは、HTML要素のテキストコンテンツを設定すると、操作の結果としてドキュメントから削除される子のテキストノードが破損する可能性があります。これらのDOM要素への参照を保持し、それらを変更する必要がある場合は、 &lt;code&gt;.html(string)&lt;/code&gt; ではなく &lt;code&gt;.empty().html( string )&lt;/code&gt; 使用して、新しい文字列がに割り当てられる前に要素がドキュメントから削除されるようにします。素子。</target>
        </trans-unit>
        <trans-unit id="4384c305db1376fe87300885ea145d29b4c72323" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In order for .die() to function correctly, the selector used with it must match exactly the selector initially used with .live().</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; .die（）が正しく機能するためには、.die（）で使用されるセレクターが、最初に.live（）で使用されるセレクターと正確に一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="16d7303d59a5f1ad26660642d43ac1e94b9e8276" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Removing an inline &lt;code&gt;onclick&lt;/code&gt; event handler using &lt;code&gt;.removeAttr()&lt;/code&gt; doesn't achieve the desired effect in Internet Explorer 8, 9 and 11. To avoid potential problems, use &lt;code&gt;.prop()&lt;/code&gt; instead:</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;.removeAttr()&lt;/code&gt; を使用してインラインの &lt;code&gt;onclick&lt;/code&gt; イベントハンドラーを削除しても、Internet Explorer 8、9、および11では望ましい効果が得られません。潜在的な問題を回避するには、代わりに &lt;code&gt;.prop()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="f309a9a392ecd03d45bb0301b5e4db8f8ea99503" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;.live()&lt;/code&gt; and &lt;code&gt;.delegate()&lt;/code&gt; methods cannot be used to detect the &lt;code&gt;load&lt;/code&gt; event of an iframe. The load event does not correctly bubble up the parent document and the event.target isn't set by Firefox, IE9 or Chrome, which is required to do event delegation.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;.live()&lt;/code&gt; と &lt;code&gt;.delegate()&lt;/code&gt; メソッドを検出するために使用することができない &lt;code&gt;load&lt;/code&gt; IFRAMEのイベント。loadイベントは親ドキュメントを正しくバブルアップせず、event.targetは、イベントの委任を行うために必要なFirefox、IE9、またはChromeによって設定されません。</target>
        </trans-unit>
        <trans-unit id="cbff0fff16481c41a79bc297774302cd28c0735f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code&gt;deferred.always()&lt;/code&gt; method receives the arguments that were used to &lt;code&gt;.resolve()&lt;/code&gt; or &lt;code&gt;.reject()&lt;/code&gt; the &lt;code&gt;Deferred&lt;/code&gt; object, which are often very different. For this reason, it's best to use it only for actions that do not require inspecting the arguments. In all other cases, use explicit &lt;a href=&quot;deferred.done&quot;&gt;&lt;code&gt;.done()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;.fail()&lt;/code&gt;&lt;/a&gt; handlers since the arguments will have well-known orders.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;deferred.always()&lt;/code&gt; メソッドをするために使用された引数を受け取る &lt;code&gt;.resolve()&lt;/code&gt; 又は &lt;code&gt;.reject()&lt;/code&gt; &lt;code&gt;Deferred&lt;/code&gt; しばしば非常に異なっているオブジェクトを、。このため、引数の検査を必要としないアクションにのみ使用することをお勧めします。その他の場合はすべて、引数の順序が既知であるため、明示的な&lt;a href=&quot;deferred.done&quot;&gt; &lt;code&gt;.done()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;.fail()&lt;/code&gt; &lt;/a&gt;ハンドラーを使用します。</target>
        </trans-unit>
        <trans-unit id="ba1121a8c044ba75d907e526ad026f7e7bd23100" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The first argument &lt;em&gt;must&lt;/em&gt; be a DOM element, not a jQuery object or plain JavaScript object.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;最初の引数は、jQueryオブジェクトやプレーンJavaScriptオブジェクトではなく、DOM要素で&lt;em&gt;なければ&lt;/em&gt;なりません。</target>
        </trans-unit>
        <trans-unit id="203666d70f4b53f36701fcb1ec9cee4f9090ce80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The settings specified here will affect &lt;em&gt;all&lt;/em&gt; calls to &lt;code&gt;$.ajax&lt;/code&gt; or Ajax-based derivatives such as &lt;code&gt;$.get()&lt;/code&gt;. This can cause undesirable behavior since other callers (for example, plugins) may be expecting the normal default settings. For that reason we &lt;em&gt;strongly recommend against using this API&lt;/em&gt;. Instead, set the options explicitly in the call or define a simple plugin to do so.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;ここで指定した設定は、 &lt;code&gt;$.ajax&lt;/code&gt; または &lt;code&gt;$.get()&lt;/code&gt; などのAjaxベースの派生への&lt;em&gt;すべての&lt;/em&gt;呼び出しに影響&lt;em&gt;し&lt;/em&gt;ます。他の呼び出し元（プラグインなど）が通常のデフォルト設定を期待している可能性があるため、これは望ましくない動作を引き起こす可能性があります。そのため、&lt;em&gt;このAPIを使用し&lt;/em&gt;ないことを&lt;em&gt;強くお勧めします&lt;/em&gt;。代わりに、呼び出しでオプションを明示的に設定するか、そうするための単純なプラグインを定義します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6b768c1338206091fede1517818ee50ac7f66ef7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This function has been deprecated and is now an alias for &lt;a href=&quot;addback&quot;&gt;&lt;code&gt;.addBack()&lt;/code&gt;&lt;/a&gt;, which should be used with jQuery 1.8 and later.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;この関数は非推奨になり、jQuery 1.8以降で使用する必要がある&lt;a href=&quot;addback&quot;&gt; &lt;code&gt;.addBack()&lt;/code&gt; の&lt;/a&gt;エイリアスになりました。</target>
        </trans-unit>
        <trans-unit id="8392bec420fa9f575e6bddfe8dca24e33e1fbdd8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is a low-level method, you should probably use &lt;code&gt;&lt;a href=&quot;dequeue&quot;&gt;.dequeue()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これは低レベルのメソッドです。おそらく代わりに &lt;code&gt;&lt;a href=&quot;dequeue&quot;&gt;.dequeue()&lt;/a&gt;&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2143ba715e5aedac3e07ff61f22ce44ebfe9656e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is a low-level method, you should probably use &lt;code&gt;&lt;a href=&quot;queue&quot;&gt;.queue()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これは低レベルのメソッドです。おそらく、代わりに &lt;code&gt;&lt;a href=&quot;queue&quot;&gt;.queue()&lt;/a&gt;&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d620358b27d72582090e8def2c015269cbea40da" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is a low-level method, you should probably use &lt;code&gt;&lt;a href=&quot;removedata&quot;&gt;.removeData()&lt;/a&gt;&lt;/code&gt; instead.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これは低レベルのメソッドです。おそらく、代わりに &lt;code&gt;&lt;a href=&quot;removedata&quot;&gt;.removeData()&lt;/a&gt;&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="c433687cd5be2c617aa50fa4d31449a6880c5385" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This is a low-level method; a more convenient &lt;code&gt;&lt;a href=&quot;data&quot;&gt;.data()&lt;/a&gt;&lt;/code&gt; is also available.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これは低レベルの方法です。より便利な &lt;code&gt;&lt;a href=&quot;data&quot;&gt;.data()&lt;/a&gt;&lt;/code&gt; も使用できます。</target>
        </trans-unit>
        <trans-unit id="0d604d01e84b827caa2e75b86a9cb4120199c973" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; This method may cause performance issues, especially when used on many elements. If you're encountering such issues, use performance testing tools to determine whether this method is causing them. Moreover, this method can cause problems with responsive layouts if the display value differs at different viewport sizes.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;このメソッドは、特に多くの要素で使用される場合、パフォーマンスの問題を引き起こす可能性があります。このような問題が発生した場合は、パフォーマンステストツールを使用して、この方法が問題を引き起こしているかどうかを判断してください。さらに、この方法では、異なるビューポートサイズで表示値が異なる場合、レスポンシブレイアウトで問題が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="728cc3c548ab7b7f47d7a7807c7ae6e4b16b5b5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; To reverse the &lt;code&gt;.add()&lt;/code&gt; you can use &lt;a href=&quot;not&quot;&gt;&lt;code&gt;.not( elements | selector )&lt;/code&gt;&lt;/a&gt; to remove elements from the jQuery results, or &lt;a href=&quot;end&quot;&gt;&lt;code&gt;.end()&lt;/code&gt;&lt;/a&gt; to return to the selection before you added.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;.add()&lt;/code&gt; を逆にするには、.not（&lt;a href=&quot;not&quot;&gt; &lt;code&gt;.not( elements | selector )&lt;/code&gt; &lt;/a&gt;を使用してjQuery結果から要素を削除するか、&lt;a href=&quot;end&quot;&gt; &lt;code&gt;.end()&lt;/code&gt; &lt;/a&gt;を使用して追加前の選択に戻ることができます。</target>
        </trans-unit>
        <trans-unit id="7e7ba16dcd759f9653e9fd3781342bdc06b4694b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Unlike shorthand animation methods such as &lt;code&gt;.slideDown()&lt;/code&gt; and &lt;code&gt;.fadeIn()&lt;/code&gt;, the &lt;code&gt;.animate()&lt;/code&gt; method does &lt;em&gt;not&lt;/em&gt; make hidden elements visible as part of the effect. For example, given &lt;code&gt;$( &quot;someElement&quot; ).hide().animate({height: &quot;20px&quot;}, 500)&lt;/code&gt;, the animation will run, but &lt;em&gt;the element will remain hidden&lt;/em&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;.slideDown()&lt;/code&gt; や &lt;code&gt;.fadeIn()&lt;/code&gt; などの省略形のアニメーションメソッドとは異なり、 &lt;code&gt;.animate()&lt;/code&gt; メソッドは、非表示の要素をエフェクトの一部として表示しませ&lt;em&gt;ん&lt;/em&gt;。たとえば、 &lt;code&gt;$( &quot;someElement&quot; ).hide().animate({height: &quot;20px&quot;}, 500)&lt;/code&gt; と、アニメーションは実行されますが&lt;em&gt;、要素は非表示のまま&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="f65293ea9a02bc3177d8777db0cb2e794c443fcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Using &lt;code&gt;.clone()&lt;/code&gt; has the side-effect of producing elements with duplicate &lt;code&gt;id&lt;/code&gt; attributes, which are supposed to be unique. Where possible, it is recommended to avoid cloning elements with this attribute or using &lt;code&gt;class&lt;/code&gt; attributes as identifiers instead.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;.clone()&lt;/code&gt; を使用すると、一意であると想定される重複した &lt;code&gt;id&lt;/code&gt; 属性を持つ要素が生成されるという副作用があります。可能であれば、この属性を持つ要素を複製したり、識別子として &lt;code&gt;class&lt;/code&gt; 属性を使用したりしないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="1e5cc0423e196008d1bc2fbb860b9ab9a93f8a82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Using a proxied function to unbind an event on an element will unbind all proxied functions on that element, as the same proxy function is used for all proxied events. To allow unbinding a specific event, use unique class names on the event (e.g. &lt;code&gt;click.proxy1&lt;/code&gt;, &lt;code&gt;click.proxy2&lt;/code&gt;) when attaching them.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;プロキシされた関数を使用して要素のイベントのバインドを解除すると、同じプロキシ関数がすべてのプロキシされたイベントに使用されるため、その要素のすべてのプロキシされた関数のバインドが解除されます。特定のイベントの &lt;code&gt;click.proxy1&lt;/code&gt; を &lt;code&gt;click.proxy2&lt;/code&gt; できるようにするには、イベントをアタッチするときに、イベントで一意のクラス名（たとえば、click.proxy1、click.proxy2）を使用します。</target>
        </trans-unit>
        <trans-unit id="6e77c80458e4629a10720a7691b951d7439c5b21" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When a CSS selector string is passed to &lt;code&gt;.filter()&lt;/code&gt;, text and comment nodes will always be removed from the resulting jQuery object during the filtering process. When a specific node or array of nodes are provided, a text or comment node will be included in the resulting jQuery object only if it matches one of the nodes in the filtering array.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; CSSセレクター文字列が &lt;code&gt;.filter()&lt;/code&gt; に渡されると、フィルタリングプロセス中に、結果のjQueryオブジェクトからテキストノードとコメントノードが常に削除されます。特定のノードまたはノードの配列が指定されている場合、テキストまたはコメントのノードは、フィルタリング配列内のいずれかのノードと一致する場合にのみ、結果のjQueryオブジェクトに含まれます。</target>
        </trans-unit>
        <trans-unit id="981b4af88352f6e3c6215c9fb8a1f5562779f9a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When a CSS selector string is passed to &lt;code&gt;.not()&lt;/code&gt;, text and comment nodes will always be removed from the resulting jQuery object during the filtering process. When a specific node or array of nodes are provided, text or comment nodes will only be removed from the jQuery object if they match one of the nodes in the filtering array.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; CSSセレクター文字列が &lt;code&gt;.not()&lt;/code&gt; に渡されると、フィルタリングプロセス中に、結果のjQueryオブジェクトからテキストノードとコメントノードが常に削除されます。特定のノードまたはノードの配列が指定されている場合、テキストまたはコメントのノードは、フィルタリング配列のノードのいずれかに一致する場合にのみjQueryオブジェクトから削除されます。</target>
        </trans-unit>
        <trans-unit id="048769b60993106a56bcdb9e90923a09c8e16cb9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When passing a selector string to the &lt;code&gt;.wrapInner()&lt;/code&gt; function, the expected input is well formed HTML with correctly closed tags. Examples of valid input include:</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;セレクター文字列を &lt;code&gt;.wrapInner()&lt;/code&gt; 関数に渡す場合、予期される入力は、正しく閉じたタグが付いた整形式のHTMLです。有効な入力の例は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="b224f83d1b18a1e42df81a9f6bf0f7896be35a9c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When triggering with a plain object that is not array-like but still contains a &lt;code&gt;length&lt;/code&gt; property, you should pass the object in an array (e.g. &lt;code&gt;[ { length: 1 } ]&lt;/code&gt;).</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;配列に似ていなくても &lt;code&gt;length&lt;/code&gt; プロパティを含むプレーンオブジェクトでトリガーする場合は、オブジェクトを配列で渡す必要があります（例： &lt;code&gt;[ { length: 1 } ]&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="455a0d1adee9712e6f37d7ef1c2a9305393095cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; When using the &lt;code&gt;.clone()&lt;/code&gt; method, you can modify the cloned elements or their contents before (re-)inserting them into the document.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;.clone()&lt;/code&gt; メソッドを使用する場合、ドキュメントにそれらを（再）挿入する前に、複製された要素またはその内容を変更できます。</target>
        </trans-unit>
        <trans-unit id="16e68a471a6af7b42f4de6d4046645aaf1339a62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You can get the returned Ajax contents by looking at &lt;code&gt;xhr.responseText&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;返されたAjaxコンテンツを取得するには、 &lt;code&gt;xhr.responseText&lt;/code&gt; を調べます。</target>
        </trans-unit>
        <trans-unit id="ea50e4e0e3ba862e54fc9b39a569e88b0205130d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You can get the returned Ajax contents by looking at &lt;code&gt;xhr.responseXML&lt;/code&gt; or &lt;code&gt;xhr.responseText&lt;/code&gt; for xml and html respectively.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;返されたAjaxコンテンツを取得するには、それぞれxmlおよびhtmlの &lt;code&gt;xhr.responseXML&lt;/code&gt; または &lt;code&gt;xhr.responseText&lt;/code&gt; を調べます。</target>
        </trans-unit>
        <trans-unit id="0fa94b5a700d556c34c708de51291d97cf4a9de5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You will need to specify a complementary entry for this type in &lt;code&gt;converters&lt;/code&gt; for this to work properly.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;これを正しく機能 &lt;code&gt;converters&lt;/code&gt; は、コンバーターでこのタイプの補足エントリーを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2d94b2e36820a0d6b14925689b5c0cc889f82eca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; as the &lt;code&gt;keypress&lt;/code&gt; event isn't covered by any official specification, the actual behavior encountered when using it may differ across browsers, browser versions, and platforms.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt;として &lt;code&gt;keypress&lt;/code&gt; イベントが任意の正式な仕様に覆われていない、それを使用する際に遭遇した実際の動作は、ブラウザ、ブラウザのバージョン、およびプラットフォーム間で異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="a72439d09acee11e0939a454dab49367b918717f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; if attempting to animate an element with a height or width of 0px, where contents of the element are visible due to overflow, jQuery may clip this overflow during animation. By fixing the dimensions of the original element being hidden however, it is possible to ensure that the animation runs smoothly. A &lt;a href=&quot;https://www.google.com/search?q=clearfix&quot;&gt;clearfix&lt;/a&gt; can be used to automatically fix the dimensions of your main element without the need to set this manually.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; 0pxの高さまたは幅を持つ要素をアニメーション化しようとすると、要素のコンテンツがオーバーフローのために表示される場合、jQueryはアニメーション中にこのオーバーフローをクリップすることがあります。ただし、非表示になっている元の要素の寸法を固定することで、アニメーションがスムーズに実行されるようにすることができます。&lt;a href=&quot;https://www.google.com/search?q=clearfix&quot;&gt;clearfixは&lt;/a&gt;自動的にこれを手動で設定することなく、あなたの主な要素の寸法を固定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="c13e9056adf699d6319a7d27d189aa7d259ca1f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; jQuery does not support getting the offset coordinates of hidden elements or accounting for margins set on the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; document element.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; jQueryは、非表示要素のオフセット座標の取得や、 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; ドキュメント要素に設定されたマージンの考慮をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="3b473018f3deb18da4f1568f4522cf32ce5d1248" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; jQuery does not support getting the position coordinates of hidden elements or accounting for margins set on the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; document element.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; jQueryは、非表示要素の位置座標の取得や、 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; ドキュメント要素に設定されたマージンの考慮をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="f8ff59419314b6844ba3e6332f0ebb19610d7989" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;.css()&lt;/code&gt; ignores &lt;code&gt;!important&lt;/code&gt; declarations. So, the statement &lt;code&gt;$( &quot;p&quot; ).css( &quot;color&quot;, &quot;red !important&quot; )&lt;/code&gt; does not turn the color of all paragraphs in the page to red. It's strongly advised to use classes instead; otherwise use a jQuery plugin.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;.css()&lt;/code&gt; は &lt;code&gt;!important&lt;/code&gt; 宣言を無視します。したがって、ステートメント &lt;code&gt;$( &quot;p&quot; ).css( &quot;color&quot;, &quot;red !important&quot; )&lt;/code&gt; は、ページ内のすべての段落の色を赤に変えません。代わりにクラスを使用することを強くお勧めします。それ以外の場合は、jQueryプラグインを使用します。</target>
        </trans-unit>
        <trans-unit id="5cc3cff26ade546c9f5d4c284e2b77b2a01e5127" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt;&lt;code&gt;.scrollLeft()&lt;/code&gt;, when called directly or animated as a property using &lt;code&gt;.animate()&lt;/code&gt;, will not work if the element it is being applied to is hidden.</source>
          <target state="translated">&lt;strong&gt;注：&lt;/strong&gt; &lt;code&gt;.scrollLeft()&lt;/code&gt; を直接呼び出すか、 &lt;code&gt;.animate()&lt;/code&gt; を使用してプロパティとしてアニメーション化した場合、適用先の要素が非表示の場合は機能しません。</target>
        </trans-unit>
        <trans-unit id="290ebec41d77eb54398146f8f43606cb3d38b3f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: In jQuery 1.3 &lt;code&gt;[@attr]&lt;/code&gt; style selectors were removed (they were previously deprecated in jQuery 1.2). Simply remove the &quot;@&quot; symbol from your selectors in order to make them work again.</source>
          <target state="translated">&lt;strong&gt;注&lt;/strong&gt;：jQuery 1.3では、 &lt;code&gt;[@attr]&lt;/code&gt; スタイルセレクターが削除されました（以前はjQuery 1.2で非推奨でした）。セレクターから「@」記号を削除するだけで、セレクターを再び機能させることができます。</target>
        </trans-unit>
        <trans-unit id="083919582eccdbee288d0dc79d72b61d9575687f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Prior to jQuery 1.8&lt;/strong&gt;, the arguments could be a function or an array of functions.</source>
          <target state="translated">&lt;strong&gt;jQuery 1.8より前のバージョン&lt;/strong&gt;では、引数は関数または関数の配列でした。</target>
        </trans-unit>
        <trans-unit id="cfcbe621b600aa6855d694faf0c74f8d1a09274d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Promise callbacks&lt;/strong&gt; &amp;mdash; &lt;code&gt;.done()&lt;/code&gt;, &lt;code&gt;.fail()&lt;/code&gt;, &lt;code&gt;.always()&lt;/code&gt;, and &lt;code&gt;.then()&lt;/code&gt; &amp;mdash; are invoked, in the order they are registered.</source>
          <target state="translated">&lt;strong&gt;プロミスコールバック&lt;/strong&gt; - &lt;code&gt;.done()&lt;/code&gt; 、 &lt;code&gt;.fail()&lt;/code&gt; 、 &lt;code&gt;.always()&lt;/code&gt; 、および &lt;code&gt;.then()&lt;/code&gt; -彼らは登録されているために、呼び出されます。</target>
        </trans-unit>
        <trans-unit id="d93bfb24b1a23102fc291e7e03e62436417637a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regarding HTML5 data-* attributes:&lt;/strong&gt; This low-level method does NOT retrieve the &lt;code&gt;data-*&lt;/code&gt; attributes unless the more convenient &lt;code&gt;&lt;a href=&quot;data&quot;&gt;.data()&lt;/a&gt;&lt;/code&gt; method has already retrieved them.</source>
          <target state="translated">&lt;strong&gt;HTML5のdata- *属性について：&lt;/strong&gt;この低レベルのメソッドは、より便利な &lt;code&gt;&lt;a href=&quot;data&quot;&gt;.data()&lt;/a&gt;&lt;/code&gt; メソッドが既に取得していない限り、data- &lt;code&gt;data-*&lt;/code&gt; 属性を取得しません。</target>
        </trans-unit>
        <trans-unit id="9e77d71525927ede151fd320eadbfacdea57b307" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;.delay()&lt;/code&gt; method is best for delaying between queued jQuery effects. Because it is limited&amp;mdash;it doesn't, for example, offer a way to cancel the delay&amp;mdash;&lt;code&gt;.delay()&lt;/code&gt; is not a replacement for JavaScript's native &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers.setTimeout&quot;&gt;setTimeout&lt;/a&gt; function, which may be more appropriate for certain use cases.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;.delay()&lt;/code&gt; メソッドは、キューに入れられたjQueryの効果との間の遅延のために最善です。制限があるため（たとえば、 &lt;code&gt;.delay()&lt;/code&gt; をキャンセルする方法を提供していません）、. delay（）は、JavaScriptのネイティブの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers.setTimeout&quot;&gt;setTimeout&lt;/a&gt;関数の代わりにはなりません。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="86669143bbd5d21b82a59f1f4e5e91757e67ce16" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This method is deprecated as of jQuery 1.7 and will be moved to a plugin in jQuery 1.8.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;このメソッドはjQuery 1.7で非推奨になり、jQuery 1.8のプラグインに移動されます。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74d6c322622200f5dbb29a7a9ca67a2bbfd6f378" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This signature (only!) is deprecated as of jQuery 1.7 and &lt;em&gt;removed&lt;/em&gt; in jQuery 1.8&lt;/strong&gt;. It was primarily meant to be used internally or by plugin authors.</source>
          <target state="translated">&lt;strong&gt;このシグネチャ（のみ！）はjQuery 1.7で非推奨になり、jQuery 1.8で&lt;em&gt;削除され&lt;/em&gt;ました&lt;/strong&gt;。それは主に内部的に、またはプラグインの作者によって使用されることを意図していました。</target>
        </trans-unit>
        <trans-unit id="1fd5fcf60a6f94646f4ba72d8cdede8f188a1160" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This signature (only!) is deprecated as of jQuery 3.0&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;このシグネチャ（のみ！）は、jQuery 3.0以降では非推奨です&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="1fe1db82d39ba77e44e061d9fee78a30d4624478" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;WARNING&lt;/strong&gt;: When setting the 'class' attribute, you must always use quotes!</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;： 'class'属性を設定するときは、常に引用符を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="e6dc6fb5f57d8c8ea692ed100dacfb8198107dcf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Passing &lt;code&gt;false&lt;/code&gt; for the first argument is not supported.</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;：最初の引数に &lt;code&gt;false&lt;/code&gt; を渡すことはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="1fb3fb2570ad27f79efb22b7e389103f862d5d51" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: Versions prior to 3.4 had a security issue where calling &lt;code&gt;jQuery.extend(true, {}, object)&lt;/code&gt; on an unsanitized object containing a &lt;code&gt;__proto__&lt;/code&gt; property would extend &lt;code&gt;Object.prototype&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;警告&lt;/strong&gt;：3.4より前のバージョンには、 &lt;code&gt;__proto__&lt;/code&gt; プロパティを含むサニタイズされていないオブジェクトで &lt;code&gt;jQuery.extend(true, {}, object)&lt;/code&gt; を呼び出すとObject.prototypeが拡張されるというセキュリティの問題があり &lt;code&gt;Object.prototype&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="449ddbc4074b15fea463245c5b65d4d02ad1dd35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;accepts&lt;/strong&gt; (default: &lt;code&gt;depends on dataType&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;受け入れる&lt;/strong&gt;（デフォルト： &lt;code&gt;depends on dataType&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="121a6731ee5e03d392fcacfb80e61ad30988ee49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;additionalArguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;additionalArguments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c282119bc2aa895f52c7f6ac872b27a2fe59a5dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;always&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;always&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="41f2a72ff9f7c1c028db6c3a40648873f85a18c6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;alwaysCallbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;alwaysCallbacks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9b38ae5d5e0a03398f4e07c891a7c92c0aa15adf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ancestor: &lt;/strong&gt;Any valid selector.</source>
          <target state="translated">&lt;strong&gt;祖先：&lt;/strong&gt;任意の有効なセレクター。</target>
        </trans-unit>
        <trans-unit id="cdba158899879c68e7e41af998128bb0678119b1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;args&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;args&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="885e8dfd5447855fd5816cce0896037aeab3daec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;arguments&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;arguments&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8b92f13f438fcb2b029f80ac0d509cc2a83017ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;array&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;array&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9f912ad7c6e93cc65e9aee78cee084ba6099424f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;async&lt;/strong&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;async&lt;/strong&gt;（デフォルト： &lt;code&gt;true&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="2836d74eabb832fe698bc25e7168f72a722f231a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attribute: &lt;/strong&gt;An attribute name.</source>
          <target state="translated">&lt;strong&gt;attribute：&lt;/strong&gt;属性名。</target>
        </trans-unit>
        <trans-unit id="48c68c2764dab66f12008a1a116854b710269655" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributeFilter1: &lt;/strong&gt;An attribute filter.</source>
          <target state="translated">&lt;strong&gt;attributeFilter1：&lt;/strong&gt;属性フィルター。</target>
        </trans-unit>
        <trans-unit id="7d79df8377d46fe14a81e073572917d12486274c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributeFilter2: &lt;/strong&gt;Another attribute filter, reducing the selection even more</source>
          <target state="translated">&lt;strong&gt;attributeFilter2：&lt;/strong&gt;選択をさらに減らす別の属性フィルター</target>
        </trans-unit>
        <trans-unit id="1aba10d193c48562f44b08990b0b3364ebeced53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributeFilterN: &lt;/strong&gt;As many more attribute filters as necessary</source>
          <target state="translated">&lt;strong&gt;attributeFilterN：&lt;/strong&gt;必要なだけ多くの属性フィルター</target>
        </trans-unit>
        <trans-unit id="fa28e1a1acb75ac1d3d8ff85ef13d2c2b2073ba8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributeName&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;attributeName&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eee5820e9a97b0f42a52303422e5604a196c3278" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;attributes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;attributes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae77d2a9743e435ed97f2fbb5c402345ec94d4e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;beforeSend&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;beforeSend&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7767771cda5da4a27adda764ee905e9e0a8ba32e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;beforeStart&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;beforeStart&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa39fefbe10d0dc9ca7b6cec90e626336809c034" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;cache&lt;/strong&gt; (default: &lt;code&gt;true, false for dataType 'script' and 'jsonp'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;キャッシュ&lt;/strong&gt;（デフォルト： &lt;code&gt;true, false for dataType 'script' and 'jsonp'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="4a43214cf5ab706755ad25a01745366ed33cc732" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;callback&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;callback&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa3b949239b1b24aa8775ff77f86222eb88ed84c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;callbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;callbacks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cc3e13ef4452b9b6f80fcd92ba3e921c6a06b06" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;child: &lt;/strong&gt;A selector to filter the child elements.</source>
          <target state="translated">&lt;strong&gt;child：&lt;/strong&gt;子要素をフィルターするセレクター。</target>
        </trans-unit>
        <trans-unit id="0a36b959ec4267b8580b5725a0a80e426a6b70f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;class: &lt;/strong&gt;A class to search for. An element can have multiple classes; only one of them must match.</source>
          <target state="translated">&lt;strong&gt;class：&lt;/strong&gt;検索するクラス。要素は複数のクラスを持つことができます。それらの1つだけが一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="f50eaceec527f2fb8060c2170c3716663b95c660" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;className&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;className&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3f7d7682daba8c987bf3f23d8782214b8db0222b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;classNames&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;classNames&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bc16d5f0974676817b790478cfbe19881ae27ca9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;clearQueue&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;clearQueue&lt;/strong&gt;（デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3d23e921d1611732cbe1c640713ad7af76f82da2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;code&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;code&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91947c44200b5b28dc68f510bad797f6099396cf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;complete&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;complete&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="88cc8636ba28ae178e1c733c4b06a50b6681923c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contained&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;contained&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6516f6a3293a5cda1292ef4ded696e488afbd4c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;container&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;container&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6d61514aba3f10993f97a0438d5177e6b3813f3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;content&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;content&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f206468e51127d19dda8988a4332e042af887482" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contentType&lt;/strong&gt; (default: &lt;code&gt;'application/x-www-form-urlencoded; charset=UTF-8'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;contentType&lt;/strong&gt;（デフォルト： &lt;code&gt;'application/x-www-form-urlencoded; charset=UTF-8'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="fae75d0c59bb07ae304d3284bd261cdf05143271" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;contents&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;contents&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="828bab5a4b1caa2320c77fd6531f3bbd6bf4377c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;context&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;context&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="915e7a22c26b2e40c36b0d7078938568016f6ef3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;context&lt;/strong&gt; (default: &lt;code&gt;document&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;コンテキスト&lt;/strong&gt;（デフォルト： &lt;code&gt;document&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e143cb3c0d98a21d1ca7d94e13adfea02c48594a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;converters&lt;/strong&gt; (default: &lt;code&gt;{&quot;* text&quot;: window.String, &quot;text html&quot;: true, &quot;text json&quot;: jQuery.parseJSON, &quot;text xml&quot;: jQuery.parseXML}&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;コンバーター&lt;/strong&gt;（デフォルト： &lt;code&gt;{&quot;* text&quot;: window.String, &quot;text html&quot;: true, &quot;text json&quot;: jQuery.parseJSON, &quot;text xml&quot;: jQuery.parseXML}&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b5ae46e2fba251c0ecc80d469a0bcf3afeaa1c4e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;coordinates&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;coordinates&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e07606c5d9e669d199cb6b6a3ff11ce5cb65f80c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;crossDomain&lt;/strong&gt; (default: &lt;code&gt;false for same-domain requests, true for cross-domain requests&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;crossDomain&lt;/strong&gt;（デフォルト： &lt;code&gt;false for same-domain requests, true for cross-domain requests&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f511c1828669c36db5dc8696841675bbe8e71c49" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;data&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;data&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ae01a60e1e4f5928f2e70b804b4fb7fdd8898f9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dataFilter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;dataFilter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e67645e1830e74c5263e3a54c01a5625d7a01ac3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dataType&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;dataType&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6975ea6b1f490a4d01b00b1c7dae6ec0abca24df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dataType&lt;/strong&gt; (default: &lt;code&gt;Intelligent Guess (xml, json, script, or html)&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;dataType&lt;/strong&gt;（デフォルト： &lt;code&gt;Intelligent Guess (xml, json, script, or html)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f795aa7d9a90edcee4b5b48ef73af243d6855fd6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;dataTypes&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;dataTypes&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="dfab94a86a300efed9642212ffa05f369aedd036" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;deep&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;deep&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f2b673f64fe70c65d504c03d19ff7a177e619f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;deepWithDataAndEvents&lt;/strong&gt; (default: &lt;code&gt;value of withDataAndEvents&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;deepWithDataAndEvents&lt;/strong&gt;（デフォルト：&lt;strong&gt;withDataAndEventsの&lt;/strong&gt; &lt;code&gt;value of withDataAndEvents&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8811e29ee1fa93afe4a210efaee262003a55d347" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;deferreds&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;deferreds&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df57e719f54f882f457fb5ef34c9bbb58f163662" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;descendant: &lt;/strong&gt;A selector to filter the descendant elements.</source>
          <target state="translated">&lt;strong&gt;descendant：&lt;/strong&gt;子孫要素をフィルターするセレクター。</target>
        </trans-unit>
        <trans-unit id="2777663789c8940d299595628ff36ae8cd96b7c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;display&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;display&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a0a756e9c21533cb5e5b19836218f39338cec69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;doc&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;doc&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eec21ac3de09c33db7efabbb65f7820e02623173" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;done&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;done&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46f8a00ce4674481b097543af9945b2fc7bede1b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;doneCallbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;doneCallbacks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="accd4c636e7d5db769a776595bfb97414c41cb19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;doneFilter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;doneFilter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31e8bf65b1e56c767e045a86fe1b68d72bc46f3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;duration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;duration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a9ace4f512b38b12fbea8b46dbb7aa33d7f275bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;duration&lt;/strong&gt; (default: &lt;code&gt;400&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;期間&lt;/strong&gt;（デフォルト： &lt;code&gt;400&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bf0ab64d45b1154af99ef62854f3601dd75a9366" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;easing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;easing&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0e43e1b521e271931eb89ff3fc66490d6c12d2b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;easing&lt;/strong&gt; (default: &lt;code&gt;swing&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;イージング&lt;/strong&gt;（デフォルト： &lt;code&gt;swing&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="e2f2ea85588ba3e8ff74d0e851fd190d7901cfd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;element: &lt;/strong&gt;An element to search for. Refers to the tagName of DOM nodes.</source>
          <target state="translated">&lt;strong&gt;element：&lt;/strong&gt;検索する要素。DOMノードのtagNameを参照します。</target>
        </trans-unit>
        <trans-unit id="2879a1c3b2e81d6f8e2c515b9df10320586351e5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;element&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;element&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="497dc782adad663cbf8120bd4437d573637d71cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;elementArray&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;elementArray&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff24cd368b15081f62bfc217e85e8bdc467a1bf8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;elements&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;elements&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c8ba21dd86041b818669f3e6424dde2a1b73ea59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;end&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;end&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d77f05acd1e8727edc800e84aad97845d0926578" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;error&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;error&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3c6eb2f6fe55ecbfbbd62bbf29a994cf2545ffb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;event&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;event&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46628bf863a214a4b1be9cdc51338faadcd2e76f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eventData&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;eventData&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3ad1b988992078bed4266604d821ba4d66aa6a5c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;eventType&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;eventType&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f7e22fda5fd73526533f6573f6ddb90dfb45b1f6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;events&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;events&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69e9c0b619cc40f3fc3f530da7a4b2a70e6d2aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;extraParameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;extraParameters&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="325b0bab2449ce9608481f59fd37d00eaa4f4aba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fail&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;fail&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6f172acf16c07e4939d98c861fd45d05e9ccd3c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;failCallbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;failCallbacks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a8e12782d74fe2d2722c317977f57613120567eb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;failFilter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;failFilter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f3b0d5c89c8088634bee90ecb557b288bf604a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;false&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;false&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5fe54301c0132c584e46785165b5c59f0cd42a69" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;filter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;filter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64a0f945bafc87ef4a5a183104c43bd7162ff6c4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;first&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;first&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a5fe657ceb750e9efa20ecb6e9605a99cd8606b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;flags&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;flags&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="076854a4f9effc2429dd08cd1faea400754ebace" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fromIndex&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;fromIndex&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="22922a9d9c3d728b35a1da88936aa55d8811ad3e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;function-html&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;function-html&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e51a776d72925993e6ee8a134706aa4192c29f1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;function&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;function&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1776b521e9c022cfea6bbb7f91b46f1213453ca2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;global&lt;/strong&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;グローバル&lt;/strong&gt;（デフォルト： &lt;code&gt;true&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="200a9f93aa80b40dd9e55bc675443ed719879e05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;handler&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;handler&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="966a9adcac483dfba679ff8456c7f189b0e659b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;handlerIn&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;handlerIn&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3237565032de4d3599f65f94614668b3d16d977a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;handlerInOut&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;handlerInOut&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="469bd78374762bebff8275bb2084886695d9bb59" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;handlerOut&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;handlerOut&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6671004ac32001324f41124d1df19f2515c3afad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;headers&lt;/strong&gt; (default: &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;ヘッダー&lt;/strong&gt;（デフォルト： &lt;code&gt;{}&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5a2d9c02e94a212de9b41ba533ad50accd0d29e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;hold&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;hold&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c3fe094561cf03c49f876243d2abbe069ac3c80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;html&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;html&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bff7381775e965dba838b93ae474a93848651195" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;htmlString&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;htmlString&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="208ebaf35ff8ba765919a3ada801ed8cb693caf4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;id: &lt;/strong&gt;An ID to search for, specified via the id attribute of an element.</source>
          <target state="translated">&lt;strong&gt;id：&lt;/strong&gt;要素のid属性で指定された、検索するID。</target>
        </trans-unit>
        <trans-unit id="209e1760714d9d91367f4ebd64f29d51b99757b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ifModified&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;ifModified&lt;/strong&gt;（デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="99d76c407749d72d5806df23fd7eac564e87265b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;includeMargin&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;includeMargin&lt;/strong&gt;（デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bd1aabe63830d6eb3338be642b47960c6d6aaf7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index-related selectors&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;インデックス関連のセレクター&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e23dfd738f5166262d3c95f3350fa8046d95ea2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;The index of each child to match, starting with &lt;code&gt;1&lt;/code&gt;, the string &lt;code&gt;even&lt;/code&gt; or &lt;code&gt;odd&lt;/code&gt;, or an equation ( eg. &lt;code&gt;:nth-child(even)&lt;/code&gt;, &lt;code&gt;:nth-child(4n)&lt;/code&gt; )</source>
          <target state="translated">&lt;strong&gt;インデックス：&lt;/strong&gt;一致するように、それぞれの子のインデックスから始まる &lt;code&gt;1&lt;/code&gt; 、列 &lt;code&gt;even&lt;/code&gt; 又は &lt;code&gt;odd&lt;/code&gt; 、又は式（例えば &lt;code&gt;:nth-child(even)&lt;/code&gt; 、 &lt;code&gt;:nth-child(4n)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="06166bac000820e391782b77033ef6f956293b85" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;The index of each child to match, starting with &lt;code&gt;1&lt;/code&gt;, the string &lt;code&gt;even&lt;/code&gt; or &lt;code&gt;odd&lt;/code&gt;, or an equation ( eg. &lt;code&gt;:nth-of-type(even)&lt;/code&gt;, &lt;code&gt;:nth-of-type(4n)&lt;/code&gt; )</source>
          <target state="translated">&lt;strong&gt;インデックス：&lt;/strong&gt;一致するように、それぞれの子のインデックスから始まる &lt;code&gt;1&lt;/code&gt; 、列 &lt;code&gt;even&lt;/code&gt; 又は &lt;code&gt;odd&lt;/code&gt; 、又は式（例えば &lt;code&gt;:nth-of-type(even)&lt;/code&gt; 、 &lt;code&gt;:nth-of-type(4n)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="de8dbe62525754aefd31098b612d0b9d3a860870" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;The index of each child to match, starting with the last one (&lt;code&gt;1&lt;/code&gt;), the string &lt;code&gt;even&lt;/code&gt; or &lt;code&gt;odd&lt;/code&gt;, or an equation ( eg. &lt;code&gt;:nth-last-child(even)&lt;/code&gt;, &lt;code&gt;:nth-last-child(4n)&lt;/code&gt; )</source>
          <target state="translated">&lt;strong&gt;インデックス：&lt;/strong&gt;一致するように、それぞれの子のインデックス、最後の（から始まる &lt;code&gt;1&lt;/code&gt; ）、文字列 &lt;code&gt;even&lt;/code&gt; 又は &lt;code&gt;odd&lt;/code&gt; 、又は式（例えば &lt;code&gt;:nth-last-child(even)&lt;/code&gt; 、 &lt;code&gt;:nth-last-child(4n)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="4485ab4705a0e2c659d51fb1d31b4acbd79dfbae" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;The index of each child to match, starting with the last one (&lt;code&gt;1&lt;/code&gt;), the string &lt;code&gt;even&lt;/code&gt; or &lt;code&gt;odd&lt;/code&gt;, or an equation ( eg. &lt;code&gt;:nth-last-of-type(even)&lt;/code&gt;, &lt;code&gt;:nth-last-of-type(4n)&lt;/code&gt; )</source>
          <target state="translated">&lt;strong&gt;インデックス：&lt;/strong&gt;一致するように、それぞれの子のインデックス、最後の1から始まる（ &lt;code&gt;1&lt;/code&gt; ）、文字列 &lt;code&gt;even&lt;/code&gt; 又は &lt;code&gt;odd&lt;/code&gt; 、又は式（例えば &lt;code&gt;:nth-last-of-type(even)&lt;/code&gt; 、 &lt;code&gt;:nth-last-of-type(4n)&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="5652e4428286ce29c368164b617c1301394e60a4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;Zero-based index of the element to match.</source>
          <target state="translated">&lt;strong&gt;index：&lt;/strong&gt;一致する要素のゼロから始まるインデックス。</target>
        </trans-unit>
        <trans-unit id="a15bea00bc95bc89a667661a96e02052ed6bb528" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index: &lt;/strong&gt;Zero-based index.</source>
          <target state="translated">&lt;strong&gt;index：&lt;/strong&gt;ゼロベースのインデックス。</target>
        </trans-unit>
        <trans-unit id="69079d90ef1851e2f0bbb8bc6ce5067ce4982a9f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;index&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;index&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c4907e9aaa9f6f8ff01f56f9a961d46d5b47e07e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;indexFromEnd: &lt;/strong&gt;Zero-based index of the element to match, counting backwards from the last element.</source>
          <target state="translated">&lt;strong&gt;indexFromEnd：&lt;/strong&gt;一致する要素のゼロから&lt;strong&gt;始まる&lt;/strong&gt;インデックス。最後の要素から逆方向に数えます。</target>
        </trans-unit>
        <trans-unit id="5e8b1c7995a82351a0d6e5fdc505affc6b010af7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;indexFromEnd: &lt;/strong&gt;Zero-based index, counting backwards from the last element.</source>
          <target state="translated">&lt;strong&gt;indexFromEnd：&lt;/strong&gt;ゼロから&lt;strong&gt;始まる&lt;/strong&gt;インデックス。最後の要素から逆方向に数えます。</target>
        </trans-unit>
        <trans-unit id="009d509641a25696e20dc6d865aa1c6e41f9e8b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;indexFromEnd&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;indexFromEnd&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad5fd5c944ea8963ea43842c485cf4c42ae38de3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;invert&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;invert&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5ed1a3cc480524921334877b02e8f618c9ee94bb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;isLocal&lt;/strong&gt; (default: &lt;code&gt;depends on current location protocol&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;isLocal&lt;/strong&gt;（デフォルト： &lt;code&gt;depends on current location protocol&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f1f59635c8a84d5c89e7b4946e5a817c07b1ea1f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jQuery 3&lt;/strong&gt; changes the behavior of this method to align it to the &lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#dom-dataset&quot;&gt;Dataset API specifications&lt;/a&gt;. Specifically, jQuery 3 transforms every two-character sequence of &quot;-&quot; (U+002D) followed by a lowercase ASCII letter by the uppercase version of the letter as per definition of &lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#dom-dataset&quot;&gt;the algorithm of the Dataset API&lt;/a&gt;. Writing a statement like &lt;code&gt;$( &quot;body&quot; ).data( { &quot;my-name&quot;: &quot;aValue&quot; } ).data();&lt;/code&gt; will return &lt;code&gt;{ myName: &quot;aValue&quot; }&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;jQuery 3&lt;/strong&gt;は、このメソッドの動作を変更して、&lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#dom-dataset&quot;&gt;Dataset API仕様&lt;/a&gt;に合わせます。具体的には、jQuery 3 &lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#dom-dataset&quot;&gt;は、Dataset APIのアルゴリズムの&lt;/a&gt;定義に従って、「-」（U + 002D）の2文字のシーケンスごとに小文字のASCII文字を大文字のバージョンに変換します。 &lt;code&gt;$( &quot;body&quot; ).data( { &quot;my-name&quot;: &quot;aValue&quot; } ).data();&lt;/code&gt; ようなステートメントを記述します。 &lt;code&gt;{ myName: &quot;aValue&quot; }&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="fa2774f8dadcfeb2f92f696b83048e000c5c9733" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jqXHR.always(function( data|jqXHR, textStatus, jqXHR|errorThrown ) { });&lt;/strong&gt; (added in jQuery 1.6)</source>
          <target state="translated">&lt;strong&gt;jqXHR.always（function（data | jqXHR、textStatus、jqXHR | errorThrown）{}）; &lt;/strong&gt;（jQuery 1.6で追加）</target>
        </trans-unit>
        <trans-unit id="9a3e9a5e6a8dab4819b19c11a34b4485f8f0232e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jqXHR.done(function( data, textStatus, jqXHR ) {});&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jqXHR.done（function（data、textStatus、jqXHR）{}）;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="091701b4bcee3995ccdf4ddae82768330149ad94" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jqXHR.fail(function( jqXHR, textStatus, errorThrown ) {});&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jqXHR.fail（function（jqXHR、textStatus、errorThrown）{}）;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70d70857376c27cac2f17e7fe28169730a2cc6ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jqXHR.then(function( data, textStatus, jqXHR ) {}, function( jqXHR, textStatus, errorThrown ) {});&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jqXHR.then（function（data、textStatus、jqXHR）{}、function（jqXHR、textStatus、errorThrown）{}）;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6cdb3481b357c5341768790edbd2c31061621574" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;json&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;json&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ea10674490aa358cfe6d1385505801b51a13d45" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jsonp&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jsonp&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="da5f9dd2c5770724408bd88371dcae32041e325a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jsonpCallback&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;jsonpCallback&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8855289aebef3a3d57e74210e3bca6b53e75ea56" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;jumpToEnd&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;jumpToEnd&lt;/strong&gt;（デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b1acbd806ed98adc57ad69d8ed54bf25ef0aa561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;keepScripts&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;keepScripts&lt;/strong&gt;（デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="4be38f119a0ce341e162a99506751307db405b05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;key&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c23578433c6140700740f2a92138adc7b40de1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;language: &lt;/strong&gt;A language code.</source>
          <target state="translated">&lt;strong&gt;言語：&lt;/strong&gt;言語コード。</target>
        </trans-unit>
        <trans-unit id="141fafaccc619483b292ca17a5affe6854d5a601" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;list&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;list&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32f8330b584dc33f9968fe37d9a9dccb441a3dca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;message&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;message&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9a7f68e50a716078d91746b425543d0bd4b5cbf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;method&lt;/strong&gt; (default: &lt;code&gt;'GET'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;メソッド&lt;/strong&gt;（デフォルト： &lt;code&gt;'GET'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="837fbb8844e9c7e46aefb1b3038ec4cdbe5cd9a0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;mimeType&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;mimeType&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f810f79a2630765b9651210d00a76337d99974d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;name&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;name&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1f11dd5c237d62dc9927c3f874bbe016402a9b02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;namespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;namespace&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc1bb95dd645feab9ff3c585a8983735dca4bcf0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;newContent&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;newContent&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32b2ebffe364fb15370757502543f745a0a8c3ed" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;newQueue&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;newQueue&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="446fbcb84852547e918439b48983e76a3c85a41c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;next: &lt;/strong&gt;A selector to match the element that is next to the first selector.</source>
          <target state="translated">&lt;strong&gt;next：&lt;/strong&gt;最初のセレクターの次の要素に一致するセレクター。</target>
        </trans-unit>
        <trans-unit id="059b52cec39349d25281b1f0075f3bddf36b3a6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;node&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;node&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6e48029ed9b76a47dea127f04063a1aebb89da71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;nonce&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;nonce&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c327d8b933a9541eb8e9c716c1c9c07608e24c3b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;obj&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;obj&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ff401e77971919fd31cf87c1bdfd94784ebc48b9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;object1&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;object1&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a65af86207932fc6210e8a3dd529e8396b4bbe05" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;object&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;object&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="845601dde47c345eab24ebd74055f27e24333375" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;objectN&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;objectN&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0d6c1049eb20a3d0ae682d3ab6d79a1491faf1a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;opacity&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;opacity&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b79ca5befdc026d0d3e962decafbd0b6bc0e917" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;options&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;options&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="515e3df4e9b262f6d24560a658c47eb646fa7fdf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;ownerDocument&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;ownerDocument&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9c2738402aa2e0e6f5d9605066e5f1a1a76de0ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;parent: &lt;/strong&gt;Any valid selector.</source>
          <target state="translated">&lt;strong&gt;親：&lt;/strong&gt;任意の有効なセレクター。</target>
        </trans-unit>
        <trans-unit id="3e4aed89041b84e5dbea1013ca4d8535922ae1d8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;password&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;password&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93d17987b7724031d01c7a0844d9c45ff0f923dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;prev: &lt;/strong&gt;Any valid selector.</source>
          <target state="translated">&lt;strong&gt;prev：&lt;/strong&gt;有効なセレクター。</target>
        </trans-unit>
        <trans-unit id="7a15e2eb763cd2c660679acbaa0a782b469e4ac3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;preventBubble&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;preventBubble&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="235176cd17be8f276794c9dc22d2c019bfdac05f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;processData&lt;/strong&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;processData&lt;/strong&gt;（デフォルト： &lt;code&gt;true&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="82fa1260b7049f5fb337d544d60c3f8b8129ba4d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;progress&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;progress&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a621fbf5f32cc7c89e46301503035207492711ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;progressCallbacks&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;progressCallbacks&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d56d3c01c4bf2b242eac8f77025dc50604cb5949" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;progressFilter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;progressFilter&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e7f489df13b677092b8585271f742ad360a5c7b6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;properties&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;properties&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aba937385a52d06721c16295239abb4ace4a8676" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;propertyName&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;propertyName&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3c5d0ea5d73c8fdc2d5ef6e7e8cfd32e952712e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;propertyNames&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;propertyNames&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bf3d68c4f71a9b4e779991edccc3c02bd6f74af4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;queue&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;queue&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8069677388b6c0c56aa6f30dfec340088e8a1730" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;queue&lt;/strong&gt; (default: &lt;code&gt;'fx'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;キュー&lt;/strong&gt;（デフォルト： &lt;code&gt;'fx'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="9d2e80b872dea044b300bd005e08f5e0a39b3baa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;queue&lt;/strong&gt; (default: &lt;code&gt;true&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;キュー&lt;/strong&gt;（デフォルト： &lt;code&gt;true&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="8383ce65025eaf79fc22fe6d94d3d491754cd427" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;queueName&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;queueName&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e937d6710e03cf470133dbd37f7f00bf412e814b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;removeAll&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;removeAll&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8cab33ec3705343b761f090fee09e80d4d8bf05e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;scriptAttrs&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;scriptAttrs&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ed6f08f6b02ea4de00ac476ee0d11f5bb304c962" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;scriptCharset&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;scriptCharset&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ad0613d4a89fce9ad43f611fc15f76d893efc7df" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;second&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;second&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b9251e29489477ea48a1e92927de58bda699ecf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;selection&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="938386e251491609c8400042c0466442b10ddb12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector1: &lt;/strong&gt;Any valid selector.</source>
          <target state="translated">&lt;strong&gt;selector1：&lt;/strong&gt;任意の有効なセレクター。</target>
        </trans-unit>
        <trans-unit id="3aeb61646c7d1110d56bbadbccc39d5b146db758" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector2: &lt;/strong&gt;Another valid selector.</source>
          <target state="translated">&lt;strong&gt;selector2：&lt;/strong&gt;別の有効なセレクター。</target>
        </trans-unit>
        <trans-unit id="f30902bcc50aca7dcf307db7696691d6d4aec971" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector: &lt;/strong&gt;A selector with which to filter by.</source>
          <target state="translated">&lt;strong&gt;selector：&lt;/strong&gt;フィルターに使用するセレクター。</target>
        </trans-unit>
        <trans-unit id="aefefd2250589ddf2dd176029d76556b143541e6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector: &lt;/strong&gt;Any selector.</source>
          <target state="translated">&lt;strong&gt;セレクター：&lt;/strong&gt;任意のセレクター。</target>
        </trans-unit>
        <trans-unit id="5d56cd6c115223115e1b7d3e71b6bcfa4af41b2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selector&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;selector&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0da97f9f71d7cfef74cf713ad92e02ad604c300f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selectorN: &lt;/strong&gt;As many more valid selectors as you like.</source>
          <target state="translated">&lt;strong&gt;selectorN：&lt;/strong&gt;より多くの有効なセレクターを好きなだけ。</target>
        </trans-unit>
        <trans-unit id="c0d49950222227e0c8f494a8cfc3951a9bc4607e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;selectors&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;selectors&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5c5f26db4014a50a962a8d07b50ccc2102aeee6a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;settings&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;settings&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="161a478723f6d6592dce60d17dda248e9f39e0b0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;siblings: &lt;/strong&gt;A selector to filter elements that are the following siblings of the first selector.</source>
          <target state="translated">&lt;strong&gt;兄弟：&lt;/strong&gt;最初のセレクターの次の兄弟である要素をフィルターするセレクター。</target>
        </trans-unit>
        <trans-unit id="0b49b8110ceea8983a9f0692bc49dd581e2908d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;specialEasing&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;specialEasing&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="340d93d630e5f4d5a65d03a2dc1f6b8cd6757131" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;start&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;start&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97eafdd572ef6c531ac977b61dfe3a8d92567760" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;state&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;state&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="53bbc8c5ef1f581280b575ad614784b318ce20e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;statusCode&lt;/strong&gt; (default: &lt;code&gt;{}&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;statusCode&lt;/strong&gt;（デフォルト： &lt;code&gt;{}&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b5d96c176de391eade95d3eab7f894273c12e2ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;step&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;step&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0aae87bbf1303e1aae4f16f704cc5f3a17b46b3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;str&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;str&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7de2644e5faebc244b72786db4a48425f7bc9714" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;success&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;success&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab570f012eef8a22b0f529a22053b8c64a432da6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;target&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;target&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="316b773910d7e6b633f6188cb92ed2d48f3969cb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;text: &lt;/strong&gt;A string of text to look for. It's case sensitive.</source>
          <target state="translated">&lt;strong&gt;text：&lt;/strong&gt;検索するテキストの文字列。大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="fcf8f69a27acdf62f1b9ccf27f213246ac8f4353" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;text&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;text&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="59d73a769f98d9796fd1fd1082837525503b83aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;timeout&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;timeout&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a9f8b3bff9d3fc56a2937643d4081b7134b2750" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;traditional&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;traditional&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ddd45f32ad57791baa66f77cf529514bd23835e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type&lt;/strong&gt; (default: &lt;code&gt;'GET'&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;タイプ&lt;/strong&gt;（デフォルト： &lt;code&gt;'GET'&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a828fcd9191f662c235001b0fb0433c232093abb" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;type&lt;/strong&gt; (default: &lt;code&gt;fx&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;タイプ&lt;/strong&gt;（デフォルト： &lt;code&gt;fx&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ce5a3af0fdf8b9239a29b8efca3845f0b5e7257d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;url&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;url&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd066f52641027d05113b21a6066496ab9f98361" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;url&lt;/strong&gt; (default: &lt;code&gt;The current page&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;url&lt;/strong&gt;（デフォルト： &lt;code&gt;The current page&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="20b91c2b4e89299d5bb4c9111828118dfe4327db" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;username&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;username&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea8a1c85d9185c658b57e8e3a31c5541416e65f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value: &lt;/strong&gt;An attribute value. &lt;strong&gt;Can be either a &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#attribute-selectors&quot;&gt;valid identifier&lt;/a&gt; or a quoted string.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;value：&lt;/strong&gt;属性値。&lt;strong&gt;&lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#attribute-selectors&quot;&gt;有効な識別子&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;または引用符付き文字列の&lt;/strong&gt;&lt;strong&gt;いずれかです。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f74c8077c22c9c8f36a020bfbc1edb8c5925caf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value: &lt;/strong&gt;An attribute value. Can be either a &lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#attribute-selectors&quot;&gt;valid identifier&lt;/a&gt; or a quoted string.</source>
          <target state="translated">&lt;strong&gt;value：&lt;/strong&gt;属性値。&lt;a href=&quot;https://www.w3.org/TR/css3-selectors/#attribute-selectors&quot;&gt;有効な識別子&lt;/a&gt;または引用符付き文字列のいずれかです。</target>
        </trans-unit>
        <trans-unit id="2fe8c102c8793c67d6746562319d7cce28d3e604" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;value&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;value&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="513698c3c90424d3723cb7631615b42b5ddf6e3c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;withDataAndEvents&lt;/strong&gt; (default: &lt;code&gt;false&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;withDataAndEvents&lt;/strong&gt;（デフォルト： &lt;code&gt;false&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="74f914a3291ee61fcac30f5e21c0753316a7d67f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;wrappingElement&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;wrappingElement&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="07c9e2f41a6ec75886feea007ebc82b6dfd008f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xhr&lt;/strong&gt; (default: &lt;code&gt;ActiveXObject when available (IE), the XMLHttpRequest otherwise&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;xhr&lt;/strong&gt;（デフォルト： &lt;code&gt;ActiveXObject when available (IE), the XMLHttpRequest otherwise&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="300e8bca1b1ae7e10126dad6b8a5972167110906" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;xhrFields&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;xhrFields&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="50b2b174a5fb989cc8f8ea6a8a3b4be3f120914d" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;category/events/event-object&quot;&gt;&lt;code&gt;jQuery.Event&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;category/events/event-object&quot;&gt; &lt;code&gt;jQuery.Event&lt;/code&gt; の&lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="626ac64b932e199476dbb071878917c879dd21d8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;keypress&lt;/code&gt; event handler can be attached to any element, but the event is only sent to the element that has the focus. Focusable elements can vary between browsers, but form controls can always get focus so are reasonable candidates for this event type.</source>
          <target state="translated">&lt;code&gt;keypress&lt;/code&gt; イベントハンドラは、任意の要素に取り付けることができるが、イベントにのみフォーカスを持つ要素に送信されます。フォーカス可能な要素はブラウザーによって異なる場合がありますが、フォームコントロールは常にフォーカスを取得できるため、このイベントタイプの適切な候補です。</target>
        </trans-unit>
        <trans-unit id="00471909eec233c7deebd79fc454fb846953b8e8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;scroll&lt;/code&gt; event is sent whenever the element's scroll position changes, regardless of the cause. A mouse click or drag on the scroll bar, dragging inside the element, pressing the arrow keys, or using the mouse's scroll wheel could cause this event.</source>
          <target state="translated">&lt;code&gt;scroll&lt;/code&gt; 要素のスクロール位置は、原因にかかわらず、変更されるたびにイベントが送信されます。マウスでクリックまたはスクロールバーをドラッグ、要素内をドラッグ、矢印キーを押す、またはマウスのスクロールホイールを使用すると、このイベントが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="cadf7bd3373b572121397792ced8447484716e1b" translate="yes" xml:space="preserve">
          <source>A Boolean (not just truthy/falsy) value to determine whether the class should be added or removed.</source>
          <target state="translated">クラスを追加するか削除するかを決定するためのブール値(truthy/falsyだけではありません)。</target>
        </trans-unit>
        <trans-unit id="0ec4d31a09917ea70c210aa2a68f62c78d912db7" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether event handlers and data for all children of the cloned element should be copied. By default its value matches the first argument's value (which defaults to &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">複製された要素のすべての子のイベントハンドラーとデータをコピーするかどうかを示すブール値。デフォルトでは、その値は最初の引数の値（デフォルトでは &lt;code&gt;false&lt;/code&gt; ）と一致します。</target>
        </trans-unit>
        <trans-unit id="920c3bd13fe409f20335d3672f31ea673e261ddb" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether event handlers and data should be copied along with the elements. The default value is &lt;code&gt;false&lt;/code&gt;. &lt;em&gt;*In jQuery 1.5.0 the default value was incorrectly &lt;code&gt;true&lt;/code&gt;; it was changed back to &lt;code&gt;false&lt;/code&gt; in 1.5.1 and up.&lt;/em&gt;</source>
          <target state="translated">イベントハンドラーとデータを要素と共にコピーするかどうかを示すブール値。デフォルト値は &lt;code&gt;false&lt;/code&gt; です。&lt;em&gt;* jQuery 1.5.0では、デフォルト値は誤って &lt;code&gt;true&lt;/code&gt; でした。1.5.1 以降では &lt;code&gt;false&lt;/code&gt; に変更されています。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f919eec872376d34605381386cf5f9fb85d19fe0" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether event handlers should be copied along with the elements. As of jQuery 1.4, element data will be copied as well.</source>
          <target state="translated">イベント ハンドラを要素と一緒にコピーするかどうかを示すブール値。jQuery 1.4では、要素データもコピーされます。</target>
        </trans-unit>
        <trans-unit id="f59db941393f75c89c1fc8c7da3ed9d869acca6a" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to complete the current animation immediately. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">現在のアニメーションをすぐに完了するかどうかを示すブール値。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="25e09d30904b8efdce26c2968ea59361fcae58e4" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to include scripts passed in the HTML string</source>
          <target state="translated">HTML 文字列で渡されたスクリプトを含めるかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="0a0d744f15a1d56d9ae87b925348d78e12a77fce" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to include the element's margin in the calculation.</source>
          <target state="translated">要素の余白を計算に含めるかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="f804d183051d6a0d27db1c39aef4407550e7f5f0" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to new value should account for the element's margin.</source>
          <target state="translated">新しい値が要素のマージンを考慮するかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="4e6a7a90884cde2d7b7d736bb5c1534ac2d959d3" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to perform a traditional &quot;shallow&quot; serialization.</source>
          <target state="translated">伝統的な &quot;浅い &quot;シリアライズを実行するかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="c11dee93c846a62d2b582e0d3629879f2fb1afc3" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to place the animation in the effects queue. If false, the animation will begin immediately. &lt;strong&gt;As of jQuery 1.7&lt;/strong&gt;, the queue option can also accept a string, in which case the animation is added to the queue represented by that string. When a custom queue name is used the animation does not automatically start; you must call &lt;code&gt;.dequeue(&quot;queuename&quot;)&lt;/code&gt; to start it.</source>
          <target state="translated">アニメーションをエフェクトキューに配置するかどうかを示すブール値。falseの場合、アニメーションはすぐに始まります。&lt;strong&gt;jQuery 1.7&lt;/strong&gt;以降、キューオプションは文字列も受け入れることができます。その場合、アニメーションはその文字列で表されるキューに追加されます。カスタムキュー名を使用すると、アニメーションは自動的に開始されません。開始するには、 &lt;code&gt;.dequeue(&quot;queuename&quot;)&lt;/code&gt; を呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="e13d16cdd05a32ad075b6e6bf4b4c47ce5a2f70e" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to remove all jQuery variables from the global scope (including jQuery itself).</source>
          <target state="translated">グローバル スコープ(jQuery 自体を含む)からすべての jQuery 変数を削除するかどうかを示すブール値。</target>
        </trans-unit>
        <trans-unit id="c7da3cd3d7fccdcfe1a4e238f54c267d262fa099" translate="yes" xml:space="preserve">
          <source>A Boolean indicating whether to remove queued animation as well. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">キューに入れられたアニメーションも削除するかどうかを示すブール値。デフォルトは &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a0206764326c9aeeb36eb2a04265ab7ec2768971" translate="yes" xml:space="preserve">
          <source>A CSS property name.</source>
          <target state="translated">CSSプロパティ名。</target>
        </trans-unit>
        <trans-unit id="1d9a424ac18a5524588a6de30886896df9726a11" translate="yes" xml:space="preserve">
          <source>A CSS property.</source>
          <target state="translated">CSSプロパティ。</target>
        </trans-unit>
        <trans-unit id="bca3ac43884a66581ce72f0010645625b64c0ef9" translate="yes" xml:space="preserve">
          <source>A DOM Element, Document, jQuery or selector to use as context</source>
          <target state="translated">コンテキストとして使用する DOM 要素、ドキュメント、jQuery、またはセレクタ。</target>
        </trans-unit>
        <trans-unit id="0a4e6fd668747ce7aeec451a94588f515bfd0824" translate="yes" xml:space="preserve">
          <source>A DOM Element, Document, or jQuery to use as context</source>
          <target state="translated">コンテキストとして使用する DOM Element、Document、または jQuery。</target>
        </trans-unit>
        <trans-unit id="bf6f8db638458c0d54ecd199a356441fad514fcc" translate="yes" xml:space="preserve">
          <source>A DOM element from which to remove and execute a queued function.</source>
          <target state="translated">キューに入っている関数を削除して実行するための DOM 要素。</target>
        </trans-unit>
        <trans-unit id="6d1863a8b326e3d329d040c31d8fc5a7b51c6541" translate="yes" xml:space="preserve">
          <source>A DOM element from which to remove data.</source>
          <target state="translated">データを削除する DOM 要素。</target>
        </trans-unit>
        <trans-unit id="d3d26c0e06fc373c118ae41852f8a2af7a04f20e" translate="yes" xml:space="preserve">
          <source>A DOM element on which to add a queued function.</source>
          <target state="translated">キュー関数を追加する DOM 要素。</target>
        </trans-unit>
        <trans-unit id="87b27947cf248720c62360b80a49e194db582937" translate="yes" xml:space="preserve">
          <source>A DOM element to be checked for data.</source>
          <target state="translated">データをチェックする DOM 要素。</target>
        </trans-unit>
        <trans-unit id="45caa837053521fb05701b95b0856988c80a5089" translate="yes" xml:space="preserve">
          <source>A DOM element to inspect for an attached queue.</source>
          <target state="translated">アタッチされたキューを検査する DOM 要素。</target>
        </trans-unit>
        <trans-unit id="dd594c9f3c7e503df9384a470a7baec60d1a116f" translate="yes" xml:space="preserve">
          <source>A DOM element to match elements against.</source>
          <target state="translated">要素にマッチする DOM 要素。</target>
        </trans-unit>
        <trans-unit id="893b319a3c9368eac617d7d5ec0f2e00d03cff2d" translate="yes" xml:space="preserve">
          <source>A DOM element to wrap in a jQuery object.</source>
          <target state="translated">jQuery オブジェクトでラップする DOM 要素。</target>
        </trans-unit>
        <trans-unit id="7eadc41cd28ba5d36f6cc6229d6b0b11330467b6" translate="yes" xml:space="preserve">
          <source>A DOM element where the array of queued functions is attached.</source>
          <target state="translated">キューに入れられた関数の配列が取り付けられている DOM 要素。</target>
        </trans-unit>
        <trans-unit id="2ee74e86b63853eb4fcf21549d356240bb5d0398" translate="yes" xml:space="preserve">
          <source>A DOM element within which a matching element may be found.</source>
          <target state="translated">一致する要素が見つかる可能性のある DOM 要素。</target>
        </trans-unit>
        <trans-unit id="827dbd231c2f10b0fab1e98238915fda6a0b4f2d" translate="yes" xml:space="preserve">
          <source>A DOM node or jQuery object indicating where to stop matching ancestor elements.</source>
          <target state="translated">祖先要素のマッチングを停止する場所を示す DOM ノードまたは jQuery オブジェクト。</target>
        </trans-unit>
        <trans-unit id="a64727482368a47807766530bf4ee2b41024cb45" translate="yes" xml:space="preserve">
          <source>A DOM node or jQuery object indicating where to stop matching following sibling elements.</source>
          <target state="translated">以下の兄弟要素のマッチングを停止する場所を示す DOM ノードまたは jQuery オブジェクト。</target>
        </trans-unit>
        <trans-unit id="17bde10249ad93c47c5e7adaa5199cc2c447f1c1" translate="yes" xml:space="preserve">
          <source>A DOM node or jQuery object indicating where to stop matching preceding sibling elements.</source>
          <target state="translated">先行する兄弟要素のマッチングを停止する場所を示す DOM ノードまたは jQuery オブジェクト。</target>
        </trans-unit>
        <trans-unit id="010801983f9d1a7f0dbf70e0a0dde4f374f712ba" translate="yes" xml:space="preserve">
          <source>A Deferred object starts in the &lt;em&gt;pending&lt;/em&gt; state. Any callbacks added to the object with &lt;a href=&quot;deferred.then&quot;&gt;&lt;code&gt;deferred.then()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.always&quot;&gt;&lt;code&gt;deferred.always()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;deferred.done&quot;&gt;&lt;code&gt;deferred.done()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;deferred.fail()&lt;/code&gt;&lt;/a&gt; are queued to be executed later. Calling &lt;a href=&quot;deferred.resolve&quot;&gt;&lt;code&gt;deferred.resolve()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.resolvewith&quot;&gt;&lt;code&gt;deferred.resolveWith()&lt;/code&gt;&lt;/a&gt; transitions the Deferred into the &lt;em&gt;resolved&lt;/em&gt; state and immediately executes any &lt;code&gt;doneCallbacks&lt;/code&gt; that are set. Calling &lt;a href=&quot;deferred.reject&quot;&gt;&lt;code&gt;deferred.reject()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;deferred.rejectwith&quot;&gt;&lt;code&gt;deferred.rejectWith()&lt;/code&gt;&lt;/a&gt; transitions the Deferred into the &lt;em&gt;rejected&lt;/em&gt; state and immediately executes any &lt;code&gt;failCallbacks&lt;/code&gt; that are set. Once the object has entered the resolved or rejected state, it stays in that state. Callbacks can still be added to the resolved or rejected Deferred &amp;mdash; they will execute immediately.</source>
          <target state="translated">Deferredオブジェクトは&lt;em&gt;保留&lt;/em&gt;状態で開始されます。&lt;a href=&quot;deferred.then&quot;&gt; &lt;code&gt;deferred.then()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;deferred.always&quot;&gt; &lt;code&gt;deferred.always()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;deferred.done&quot;&gt; &lt;code&gt;deferred.done()&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;deferred.fail()&lt;/code&gt; で&lt;/a&gt;オブジェクトに追加されたコールバックは、後で実行するためにキューに入れられます。&lt;a href=&quot;deferred.resolve&quot;&gt; &lt;code&gt;deferred.resolve()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;deferred.resolvewith&quot;&gt; &lt;code&gt;deferred.resolveWith()&lt;/code&gt; を&lt;/a&gt;呼び出すと、Deferredは&lt;em&gt;解決済み&lt;/em&gt;状態に移行し、設定されている &lt;code&gt;doneCallbacks&lt;/code&gt; をすぐに実行します。&lt;a href=&quot;deferred.reject&quot;&gt; &lt;code&gt;deferred.reject()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;deferred.rejectwith&quot;&gt; &lt;code&gt;deferred.rejectWith()&lt;/code&gt; を&lt;/a&gt;呼び出すと、Deferredが&lt;em&gt;拒否された&lt;/em&gt;状態に移行し、すべての &lt;code&gt;failCallbacks&lt;/code&gt; をすぐに実行します設定されています。オブジェクトが解決済みまたは拒否された状態になると、その状態のままになります。コールバックは解決された、または拒否されたDeferredに追加できます&amp;mdash;すぐに実行されます。</target>
        </trans-unit>
        <trans-unit id="ce3170832ca8da401726b2f69a0723e1a5c2293b" translate="yes" xml:space="preserve">
          <source>A Promise-like object (or &amp;ldquo;thenable&amp;rdquo;) that resolves when the document is ready.</source>
          <target state="translated">ドキュメントの準備ができたときに解決するPromiseのようなオブジェクト（または「Thenable」）。</target>
        </trans-unit>
        <trans-unit id="240c0df6ba4ea5ea4bc5b7101fb2745bf460a947" translate="yes" xml:space="preserve">
          <source>A basic usage of &lt;code&gt;.bind()&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;.bind()&lt;/code&gt; の基本的な使用法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5b74fc0b9ede71ed0f7e999cca15790e6e877188" translate="yes" xml:space="preserve">
          <source>A boolean (not just truthy/falsy) value to determine whether the class should be added or removed.</source>
          <target state="translated">クラスを追加するか削除するかを決定するブーリアン値 (truthy/falsyだけではありません)。</target>
        </trans-unit>
        <trans-unit id="d0770e589b3aafd562b33bad9fcf99dbc71fb481" translate="yes" xml:space="preserve">
          <source>A boolean in JavaScript can be either true or false:</source>
          <target state="translated">JavaScriptのブール値は、trueかfalseのどちらかになります。</target>
        </trans-unit>
        <trans-unit id="0e69f234a1ef8b1309106ceb1a0e8c24d44b9ebd" translate="yes" xml:space="preserve">
          <source>A boolean value to determine whether the class should be added or removed.</source>
          <target state="translated">クラスを追加するか削除するかを決定するブール値。</target>
        </trans-unit>
        <trans-unit id="8a0a8c9f1a1b97635466500bd71aacb656b4619b" translate="yes" xml:space="preserve">
          <source>A callback function returning the HTML content or jQuery object to wrap around all the matched elements. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the first element in the set. &lt;strong&gt;Prior to jQuery 3.0&lt;/strong&gt;, the callback was incorrectly called for every element in the set and received the index position of the element in the set as an argument.</source>
          <target state="translated">一致したすべての要素をラップするHTMLコンテンツまたはjQueryオブジェクトを返すコールバック関数。関数内では、 &lt;code&gt;this&lt;/code&gt; はセットの最初の要素を指します。&lt;strong&gt;jQuery 3.0以前&lt;/strong&gt;は、セット内のすべての要素に対してコールバックが誤って呼び出され、セット内の要素のインデックス位置を引数として受け取りました。</target>
        </trans-unit>
        <trans-unit id="5b6b9c779501501f6734990d02b1816ab9ac7f36" translate="yes" xml:space="preserve">
          <source>A callback function returning the HTML content or jQuery object to wrap around the matched elements. Receives the index position of the element in the set as an argument. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">一致した要素をラップするHTMLコンテンツまたはjQueryオブジェクトを返すコールバック関数。セット内の要素のインデックス位置を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="c12b01aa0e94a905dc545025988b5b836cf10754" translate="yes" xml:space="preserve">
          <source>A callback function that is executed if the request succeeds.</source>
          <target state="translated">リクエストが成功した場合に実行されるコールバック関数。</target>
        </trans-unit>
        <trans-unit id="71b8d3200fe65df02233dffe3ef4ea9995f76aeb" translate="yes" xml:space="preserve">
          <source>A callback function that is executed if the request succeeds. Required if &lt;code&gt;dataType&lt;/code&gt; is provided, but can be &lt;code&gt;null&lt;/code&gt; in that case.</source>
          <target state="translated">リクエストが成功した場合に実行されるコールバック関数。 &lt;code&gt;dataType&lt;/code&gt; が指定されている場合は必須ですが、その場合は &lt;code&gt;null&lt;/code&gt; にすることができます。</target>
        </trans-unit>
        <trans-unit id="aefd86b7987286d867033e9e3c3c8b2165021d1b" translate="yes" xml:space="preserve">
          <source>A callback function that is executed if the request succeeds. Required if &lt;code&gt;dataType&lt;/code&gt; is provided, but you can use &lt;code&gt;null&lt;/code&gt; or &lt;a href=&quot;jquery.noop&quot;&gt;&lt;code&gt;jQuery.noop&lt;/code&gt;&lt;/a&gt; as a placeholder.</source>
          <target state="translated">リクエストが成功した場合に実行されるコールバック関数。場合は必須 &lt;code&gt;dataType&lt;/code&gt; 用意されていますが、使用することができ &lt;code&gt;null&lt;/code&gt; または&lt;a href=&quot;jquery.noop&quot;&gt; &lt;code&gt;jQuery.noop&lt;/code&gt; を&lt;/a&gt;プレースホルダとして。</target>
        </trans-unit>
        <trans-unit id="ea77c8fa0f085d1fa307cc11eb6c2d36908a37ae" translate="yes" xml:space="preserve">
          <source>A callback function that is executed when the request completes.</source>
          <target state="translated">リクエストが完了したときに実行されるコールバック関数。</target>
        </trans-unit>
        <trans-unit id="fc24d0d68837d9ce9a44d8ddba702c51ff899c62" translate="yes" xml:space="preserve">
          <source>A callback function which generates a structure to wrap around the content of the matched elements. Receives the index position of the element in the set as an argument. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">一致した要素のコンテンツをラップする構造を生成するコールバック関数。セット内の要素のインデックス位置を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="56fc03cb5e820fcf7567d582f4fe60e241e833b1" translate="yes" xml:space="preserve">
          <source>A callback is a plain JavaScript function passed to some method as an argument or option. Some callbacks are just events, called to give the user a chance to react when a certain state is triggered. jQuery's event system uses such callbacks everywhere:</source>
          <target state="translated">コールバックとは、引数やオプションとしてメソッドに渡される JavaScript の関数のことです。コールバックの中には、特定の状態がトリガーされたときにユーザーに反応する機会を与えるために呼び出される単なるイベントであるものもあります。</target>
        </trans-unit>
        <trans-unit id="adc8027f6bd489ce959848a15303f4211f406e20" translate="yes" xml:space="preserve">
          <source>A collection of properties that represent the presence of different browser features or bugs. Intended for jQuery&amp;rsquo;s internal use; specific properties may be removed when they are no longer needed internally to improve page startup performance. For your own project&amp;rsquo;s feature-detection needs, we strongly recommend the use of an external library such as Modernizr instead of dependency on properties in jQuery.support.</source>
          <target state="translated">さまざまなブラウザ機能またはバグの存在を表すプロパティのコレクション。jQueryの内部使用を目的としています。特定のプロパティは、ページの起動パフォーマンスを向上させるために内部で不要になったときに削除される場合があります。独自のプロジェクトの機能検出のニーズのために、jQuery.supportのプロパティに依存するのではなく、Modernizrなどの外部ライブラリを使用することを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="3e39a6c12e937aad1df5923cb5f95b446fffb324" translate="yes" xml:space="preserve">
          <source>A common challenge developers attempt to solve using the &lt;code&gt;.load()&lt;/code&gt; shortcut is to execute a function when an image (or collection of images) have completely loaded. There are several known caveats with this that should be noted. These are:</source>
          <target state="translated">開発者が &lt;code&gt;.load()&lt;/code&gt; ショートカットを使用して解決しようとする一般的な課題は、画像（または画像のコレクション）が完全に読み込まれたときに関数を実行することです。これには、注意すべきいくつかの既知の警告があります。これらは：</target>
        </trans-unit>
        <trans-unit id="6b8475a7b6d2289f17daa8d7b422e02b5f2f5a5a" translate="yes" xml:space="preserve">
          <source>A common pattern is to bind the &lt;code&gt;mousemove&lt;/code&gt; handler from within a &lt;code&gt;mousedown&lt;/code&gt; hander, and to unbind it from a corresponding &lt;code&gt;mouseup&lt;/code&gt; handler. If implementing this sequence of events, remember that the &lt;code&gt;mouseup&lt;/code&gt; event might be sent to a different HTML element than the &lt;code&gt;mousemove&lt;/code&gt; event was. To account for this, the &lt;code&gt;mouseup&lt;/code&gt; handler should typically be bound to an element high up in the DOM tree, such as &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">一般的なパターンは、 &lt;code&gt;mousedown&lt;/code&gt; ハンドラー内から &lt;code&gt;mousemove&lt;/code&gt; ハンドラーをバインドし、対応する &lt;code&gt;mouseup&lt;/code&gt; ハンドラーからバインド解除することです。この一連のイベントを実装する場合、 &lt;code&gt;mouseup&lt;/code&gt; イベントは、 &lt;code&gt;mousemove&lt;/code&gt; イベントとは異なるHTML要素に送信される可能性があることに注意してください。これを説明するには、通常、 &lt;code&gt;mouseup&lt;/code&gt; ハンドラーを &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; などのDOMツリーの上位の要素にバインドする必要があります。</target>
        </trans-unit>
        <trans-unit id="184111b0518db1fbd91b3963c0b0ee491c0e3583" translate="yes" xml:space="preserve">
          <source>A common use of single-DOM-element construction is to call jQuery methods on an element that has been passed to a callback function through the keyword &lt;code&gt;this&lt;/code&gt;:</source>
          <target state="translated">単一のDOM要素の構築の一般的な用途は、キーワード &lt;code&gt;this&lt;/code&gt; を通じてコールバック関数に渡された要素のjQueryメソッドを呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="2aafa8f510461d86ff76a1a56b6daec7882bfa2d" translate="yes" xml:space="preserve">
          <source>A contrived example to show some functionality.</source>
          <target state="translated">機能性を示すための工夫された例</target>
        </trans-unit>
        <trans-unit id="e21cdb94c4f2f83c67962ccadad3e451860825de" translate="yes" xml:space="preserve">
          <source>A css hook can also hook into jQuery's animation mechanism by adding a property to the &lt;code&gt;jQuery.fx.step&lt;/code&gt; object:</source>
          <target state="translated">cssフックは、 &lt;code&gt;jQuery.fx.step&lt;/code&gt; オブジェクトにプロパティを追加することにより、jQueryのアニメーションメカニズムにフックすることもできます。</target>
        </trans-unit>
        <trans-unit id="83ae4bacb8c7d691716078995ce2a81158e945e5" translate="yes" xml:space="preserve">
          <source>A descendant of an element could be a child, grandchild, great-grandchild, and so on, of that element.</source>
          <target state="translated">ある要素の子孫は、その要素の子、孫、ひ孫などである可能性があります。</target>
        </trans-unit>
        <trans-unit id="c4e1a1f2c420eb84d4d2ed2fa808a395a262aae3" translate="yes" xml:space="preserve">
          <source>A document in which context the code will be evaluated.</source>
          <target state="translated">コードが評価されるコンテキストのドキュメント。</target>
        </trans-unit>
        <trans-unit id="cc9bbed056015a7899a93f89d20bb309683e5012" translate="yes" xml:space="preserve">
          <source>A document in which the new elements will be created.</source>
          <target state="translated">新しい要素が作成されるドキュメント。</target>
        </trans-unit>
        <trans-unit id="924208eda054c5ccc6d4754b61907a6b659c623e" translate="yes" xml:space="preserve">
          <source>A document object created by the browser's DOM parser, usually from a string representing HTML or XML.</source>
          <target state="translated">ブラウザの DOM パーサによって作成されたドキュメントオブジェクトで、通常は HTML や XML を表す文字列から作成されます。</target>
        </trans-unit>
        <trans-unit id="1fc72c22e8b173e3f8fecbef3713beee5415191e" translate="yes" xml:space="preserve">
          <source>A document object created by the browser's XML DOM parser, usually from a string representing XML. XML documents have different semantics than HTML documents, but most of the traversing and manipulation methods provided by jQuery will work with them.</source>
          <target state="translated">ブラウザの XML DOM パーサーによって作成されるドキュメント オブジェクトで、通常は XML を表す文字列から作成されます。XML ドキュメントは HTML ドキュメントとは異なるセマンティクスを持っていますが、jQuery で提供されているトラバースおよび操作メソッドのほとんどはこれらのドキュメントで動作します。</target>
        </trans-unit>
        <trans-unit id="24b051961bce2d1f152c59880502299059f4e42d" translate="yes" xml:space="preserve">
          <source>A factory function that returns a chainable utility object with methods to register multiple callbacks into callback queues, invoke callback queues, and relay the success or failure state of any synchronous or asynchronous function.</source>
          <target state="translated">複数のコールバックをコールバックキューに登録したり、コールバックキューを呼び出したり、同期・非同期関数の成功・失敗状態を中継したりするメソッドを持つ、チェーン可能なユーティリティオブジェクトを返すファクトリ関数です。</target>
        </trans-unit>
        <trans-unit id="64a1046d639cfc723f7e4690b931fe8de5ceec6e" translate="yes" xml:space="preserve">
          <source>A few of these methods&amp;mdash;such as &lt;code&gt;.attr()&lt;/code&gt;, &lt;code&gt;.html()&lt;/code&gt;, and &lt;code&gt;.val()&lt;/code&gt;&amp;mdash;also act as &quot;getters,&quot; retrieving information from DOM elements for later use.</source>
          <target state="translated">これらの方法、などのいくつかの &lt;code&gt;.attr()&lt;/code&gt; 、 &lt;code&gt;.html()&lt;/code&gt; 、及び &lt;code&gt;.val()&lt;/code&gt; 後で使用するためにDOM要素から情報を取得「ゲッター」として作用-also。</target>
        </trans-unit>
        <trans-unit id="08637979ad548cbb8e7f45e55e9bef1531b9b3ca" translate="yes" xml:space="preserve">
          <source>A float is a plain Number type, just as Integer, but whenever explicitly mentioned, indicates that a floating-point number is expected.</source>
          <target state="translated">float は Integer と同様にプレーンな数値型ですが、明示的に言及されている場合には、浮動小数点数が期待されることを示します。</target>
        </trans-unit>
        <trans-unit id="aebd13eed23d9a14e61d2aea09f0bff9b996c4ec" translate="yes" xml:space="preserve">
          <source>A function in JavaScript can be either named or anonymous. Any function can be assigned to a variable or passed to a method, but passing member functions this way can cause them to be called in the context of another object (i.e. with a different &quot;this&quot; object).</source>
          <target state="translated">JavaScript の関数は、名前を付けても匿名でも構いません。どの関数も変数に代入したり、メソッドに渡すことができますが、この方法でメンバ関数を渡すと、別のオブジェクトのコンテキストで呼び出されることがあります (つまり、別の &quot;this&quot; オブジェクトで呼び出されることになります)。</target>
        </trans-unit>
        <trans-unit id="cf323156ce3f3cd6fce0ea4c7e4e6e64262dee4d" translate="yes" xml:space="preserve">
          <source>A function object that will be invoked for each element in the current set.</source>
          <target state="translated">現在のセットの各要素に対して呼び出される関数オブジェクト。</target>
        </trans-unit>
        <trans-unit id="c51314357c391c9d33dbc48dd66562769baf4ef0" translate="yes" xml:space="preserve">
          <source>A function returning one or more space-separated class names to be added to the existing class name(s). Receives the index position of the element in the set and the existing class name(s) as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">既存のクラス名に追加する1つ以上のスペースで区切られたクラス名を返す関数。セット内の要素のインデックス位置と既存のクラス名を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="818d1dc0ac6110d854226d8e48e28fbf8ad5df1f" translate="yes" xml:space="preserve">
          <source>A function returning one or more space-separated class names to be removed. Receives the index position of the element in the set and the old class value as arguments.</source>
          <target state="translated">削除するクラス名をスペースで区切って1つ以上返す関数。セット内の要素のインデックス位置と古いクラスの値を引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="fde41246699cfab9d72243dffedd881a46bce7bc" translate="yes" xml:space="preserve">
          <source>A function returning one or more space-separated classes or an array of classes to be added to the existing class name(s). Receives the index position of the element in the set and the existing class name(s) as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">1つ以上のスペースで区切られたクラス、または既存のクラス名に追加されるクラスの配列を返す関数。セット内の要素のインデックス位置と既存のクラス名を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を参照します。</target>
        </trans-unit>
        <trans-unit id="33bd20eb1ec321d8b135acf93b477a10467392b5" translate="yes" xml:space="preserve">
          <source>A function returning one or more space-separated classes or an array of classes to be removed. Receives the index position of the element in the set and the old class value as arguments.</source>
          <target state="translated">1つ以上のスペースで区切られたクラス、または削除するクラスの配列を返す関数。セット内の要素のインデックス位置と古いクラスの値を引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="14df6d6698c8c9a43b12cfb14201a01a98b042ed" translate="yes" xml:space="preserve">
          <source>A function returning the HTML content to set. Receives the index position of the element in the set and the old HTML value as arguments. jQuery empties the element before calling the function; use the oldhtml argument to reference the previous content. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">設定するHTMLコンテンツを返す関数。セット内の要素のインデックス位置と古いHTML値を引数として受け取ります。jQueryは、関数を呼び出す前に要素を空にします。oldhtml引数を使用して、前のコンテンツを参照します。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="7f449a822d2b01e88a9aae435584e37309b36090" translate="yes" xml:space="preserve">
          <source>A function returning the height to set. Receives the index position of the element in the set and the old height as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">設定する高さを返す関数。セット内の要素のインデックス位置と古い高さを引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="10d520ab0f74f296c3765f54cf507462ed183996" translate="yes" xml:space="preserve">
          <source>A function returning the inner height (including padding but not border) to set. Receives the index position of the element in the set and the old inner height as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">設定する内側の高さ（パディングを含むがボーダーは含まない）を返す関数。セット内の要素のインデックス位置と古い内部の高さを引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="abfbb315afa751b5d7657f654414fd9a7326595a" translate="yes" xml:space="preserve">
          <source>A function returning the inner width (including padding but not border) to set. Receives the index position of the element in the set and the old inner width as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">設定する内側の幅（パディングを含むがボーダーは含まない）を返す関数。セット内の要素のインデックス位置と古い内側の幅を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="e1dfc2a0e9bb1f1ea8293ea4107f4f9b246c50dc" translate="yes" xml:space="preserve">
          <source>A function returning the outer height to set. Receives the index position of the element in the set and the old outer height as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">設定する外側の高さを返す関数。セット内の要素のインデックス位置と古い外側の高さを引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="002ceb8e932dc0a4090f1d34edd08705004e050f" translate="yes" xml:space="preserve">
          <source>A function returning the outer width to set. Receives the index position of the element in the set and the old outer width as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">設定する外側の幅を返す関数。セット内の要素のインデックス位置と古い外側の幅を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="7173cc3e505639d489c0afc74affb9a0aefa359f" translate="yes" xml:space="preserve">
          <source>A function returning the text content to set. Receives the index position of the element in the set and the old text value as arguments.</source>
          <target state="translated">テキストの内容をセットに返す関数です。セット内の要素のインデックス位置と古いテキスト値を引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="c7f4c26220cd2d712a66f587dabd3603aa0bc4bc" translate="yes" xml:space="preserve">
          <source>A function returning the value to set. &lt;code&gt;this&lt;/code&gt; is the current element. Receives the index position of the element in the set and the old attribute value as arguments.</source>
          <target state="translated">設定する値を返す関数。 &lt;code&gt;this&lt;/code&gt; が現在の要素です。セット内の要素のインデックス位置と古い属性値を引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="e2fea61311c9437cf6fab0f41d4dbd35f5a3260f" translate="yes" xml:space="preserve">
          <source>A function returning the value to set. &lt;code&gt;this&lt;/code&gt; is the current element. Receives the index position of the element in the set and the old value as arguments.</source>
          <target state="translated">設定する値を返す関数。 &lt;code&gt;this&lt;/code&gt; が現在の要素です。セット内の要素のインデックス位置と古い値を引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="8c07c262923799511241f410dbf84e30dc94101e" translate="yes" xml:space="preserve">
          <source>A function returning the value to set. Receives the index position of the element in the set and the old property value as arguments. Within the function, the keyword &lt;code&gt;this&lt;/code&gt; refers to the current element.</source>
          <target state="translated">設定する値を返す関数。セット内の要素のインデックス位置と古いプロパティ値を引数として受け取ります。関数内で、キーワード &lt;code&gt;this&lt;/code&gt; は現在の要素を参照します。</target>
        </trans-unit>
        <trans-unit id="70484d6751f8eb4fa5e2e97b127affbd2e4209b7" translate="yes" xml:space="preserve">
          <source>A function returning the width to set. Receives the index position of the element in the set and the old width as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">設定する幅を返す関数。セット内の要素のインデックス位置と古い幅を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="9480b6124b5e2dab92340aaa773d010f9d472092" translate="yes" xml:space="preserve">
          <source>A function that is called just before the constructor returns.</source>
          <target state="translated">コンストラクタが戻る直前に呼び出される関数。</target>
        </trans-unit>
        <trans-unit id="5c2e69d09bec9a695cb64d2d222611074890438b" translate="yes" xml:space="preserve">
          <source>A function that is called once the animation on an element is complete.</source>
          <target state="translated">要素のアニメーションが完了した後に呼び出される関数です。</target>
        </trans-unit>
        <trans-unit id="5d151a7b6ac3e784bc4f27d9af62342e03bd3664" translate="yes" xml:space="preserve">
          <source>A function that is called when the Deferred is rejected.</source>
          <target state="translated">Deferredが拒否されたときに呼び出される関数。</target>
        </trans-unit>
        <trans-unit id="6d1fb608edb694aada2926c988aec8d241506826" translate="yes" xml:space="preserve">
          <source>A function that is called when the Deferred is resolved.</source>
          <target state="translated">Deferredが解決されたときに呼び出される関数。</target>
        </trans-unit>
        <trans-unit id="4659ac6c87a9f68a56eb5dabf20f2673e6f30adc" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert after each element in the set of matched elements. Receives the index position of the element in the set and the old HTML value of the element as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">一致する要素のセットの各要素の後に挿入するHTML文字列、DOM要素、テキストノード、またはjQueryオブジェクトを返す関数。セット内の要素のインデックス位置と要素の古いHTML値を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="408898d82b744761f15ea9efbd2a583224388171" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert after each element in the set of matched elements. Receives the index position of the element in the set as an argument. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">一致する要素のセットの各要素の後に挿入するHTML文字列、DOM要素、テキストノード、またはjQueryオブジェクトを返す関数。セット内の要素のインデックス位置を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="f7b2de4c13e0e64a59daf9c899078e0ab82e3bb1" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert at the beginning of each element in the set of matched elements. Receives the index position of the element in the set and the old HTML value of the element as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">一致する要素のセットの各要素の先頭に挿入するHTML文字列、DOM要素、テキストノード、またはjQueryオブジェクトを返す関数。セット内の要素のインデックス位置と要素の古いHTML値を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="5253b07ef8bdb66d405f1c343254cce069b39a3e" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert at the end of each element in the set of matched elements. Receives the index position of the element in the set and the old HTML value of the element as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">一致する要素のセットの各要素の末尾に挿入するHTML文字列、DOM要素、テキストノード、またはjQueryオブジェクトを返す関数。セット内の要素のインデックス位置と要素の古いHTML値を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="c0e3254e931d7e2c26ddc9287bc0c69bf7150c18" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert before each element in the set of matched elements. Receives the index position of the element in the set and the old HTML value of the element as arguments. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">一致する要素のセットの各要素の前に挿入するHTML文字列、DOM要素、テキストノード、またはjQueryオブジェクトを返す関数。セット内の要素のインデックス位置と要素の古いHTML値を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="03952d80c1b1361b1788afb54c65b0769f8535ad" translate="yes" xml:space="preserve">
          <source>A function that returns an HTML string, DOM element(s), text node(s), or jQuery object to insert before each element in the set of matched elements. Receives the index position of the element in the set as an argument. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current element in the set.</source>
          <target state="translated">一致する要素のセットの各要素の前に挿入するHTML文字列、DOM要素、テキストノード、またはjQueryオブジェクトを返す関数。セット内の要素のインデックス位置を引数として受け取ります。関数内では、 &lt;code&gt;this&lt;/code&gt; はセット内の現在の要素を指します。</target>
        </trans-unit>
        <trans-unit id="4bfbfe1fe083e342a10330fd8d4ceaba9e14d827" translate="yes" xml:space="preserve">
          <source>A function that returns class names to be toggled in the class attribute of each element in the matched set. Receives the index position of the element in the set, the old class value, and the state as arguments.</source>
          <target state="translated">マッチした集合内の各要素のclass属性でトグルされるクラス名を返す関数です。引数として、セット内の要素のインデックス位置、古いクラス値、状態を受け取ります。</target>
        </trans-unit>
        <trans-unit id="59014d0dbf254380c8c9990a936511429cb9368c" translate="yes" xml:space="preserve">
          <source>A function that returns content with which to replace the set of matched elements.</source>
          <target state="translated">一致した要素の集合を置き換える内容を返す関数。</target>
        </trans-unit>
        <trans-unit id="b6a1e06262c7e6bdb41932d991367e3972437df9" translate="yes" xml:space="preserve">
          <source>A function that returns one or more space-separated classes or an array of classes to be toggled in the class attribute of each element in the matched set. Receives the index position of the element in the set, the old class value, and the state as arguments.</source>
          <target state="translated">マッチしたセット内の各要素のクラス属性でトグルされる1つ以上のスペースで区切られたクラスまたはクラスの配列を返す関数。セット内の要素のインデックス位置、古いクラス値、状態を引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="b2e0a2a30a9031f365d69d00594a618e42bea4ed" translate="yes" xml:space="preserve">
          <source>A function to be called after each step of the animation, only once per animated element regardless of the number of animated properties. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;)</source>
          <target state="translated">アニメーションの各ステップの後で呼び出される関数。アニメーション化されたプロパティの数に関係なく、アニメーション化された要素ごとに1回だけ呼び出されます。 （追加されたバージョン：&lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="c156388e96eed1e2888c80a5c31c0aef6dd5e455" translate="yes" xml:space="preserve">
          <source>A function to be called for each animated property of each animated element. This function provides an opportunity to modify the Tween object to change the value of the property before it is set.</source>
          <target state="translated">各アニメーション要素のアニメーション化されたプロパティごとに呼び出される関数。この関数は、Tweenオブジェクトを修正して、プロパティの値を設定する前に変更する機会を提供します。</target>
        </trans-unit>
        <trans-unit id="6f159a4d37ae4fac06aed418777a819e9ab106cb" translate="yes" xml:space="preserve">
          <source>A function to be called if the request fails. The function receives three arguments: The jqXHR (in jQuery 1.4.x, XMLHttpRequest) object, a string describing the type of error that occurred and an optional exception object, if one occurred. Possible values for the second argument (besides &lt;code&gt;null&lt;/code&gt;) are &lt;code&gt;&quot;timeout&quot;&lt;/code&gt;, &lt;code&gt;&quot;error&quot;&lt;/code&gt;, &lt;code&gt;&quot;abort&quot;&lt;/code&gt;, and &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt;. When an HTTP error occurs, &lt;code&gt;errorThrown&lt;/code&gt; receives the textual portion of the HTTP status, such as &quot;Not Found&quot; or &quot;Internal Server Error.&quot; (in HTTP/2 it may instead be an empty string) &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, the &lt;code&gt;error&lt;/code&gt; setting can accept an array of functions. Each function will be called in turn. &lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;This handler is not called for cross-domain script and cross-domain JSONP requests.&lt;/em&gt; This is an &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt;.</source>
          <target state="translated">リクエストが失敗した場合に呼び出される関数。この関数は3つの引数を受け取ります。jqXHR（jQuery 1.4.xではXMLHttpRequest）オブジェクト、発生したエラーのタイプを説明する文字列、およびオプションの例外オブジェクト（発生した場合）です。 2番目の引数（ &lt;code&gt;null&lt;/code&gt; 以外）に指定できる値は、 &lt;code&gt;&quot;timeout&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;error&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;abort&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt; です。 HTTPエラーが発生すると、 &lt;code&gt;errorThrown&lt;/code&gt; は、「NotFound」や「InternalServerError」などのHTTPステータスのテキスト部分を受け取ります。 （HTTP / 2では、代わりに空の文字列になる場合があります）&lt;strong&gt;jQuery 1.5&lt;/strong&gt;以降、 &lt;code&gt;error&lt;/code&gt; 設定は関数の配列を受け入れることができます。各関数は順番に呼び出されます。&lt;strong&gt;注：&lt;/strong&gt;&lt;em&gt;このハンドラーは、クロスドメインスクリプトおよびクロスドメインJSONPリクエストでは呼び出されません。&lt;/em&gt;これは&lt;a href=&quot;ajax_events&quot;&gt;Ajaxイベント&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="fa9ed95fe0d396d70a84077bc3fbea7d8f521968" translate="yes" xml:space="preserve">
          <source>A function to be called if the request fails. The function receives three arguments: The jqXHR (in jQuery 1.4.x, XMLHttpRequest) object, a string describing the type of error that occurred and an optional exception object, if one occurred. Possible values for the second argument (besides &lt;code&gt;null&lt;/code&gt;) are &lt;code&gt;&quot;timeout&quot;&lt;/code&gt;, &lt;code&gt;&quot;error&quot;&lt;/code&gt;, &lt;code&gt;&quot;abort&quot;&lt;/code&gt;, and &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt;. When an HTTP error occurs, &lt;code&gt;errorThrown&lt;/code&gt; receives the textual portion of the HTTP status, such as &quot;Not Found&quot; or &quot;Internal Server Error.&quot; &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, the &lt;code&gt;error&lt;/code&gt; setting can accept an array of functions. Each function will be called in turn. &lt;strong&gt;Note:&lt;/strong&gt;&lt;em&gt;This handler is not called for cross-domain script and cross-domain JSONP requests.&lt;/em&gt; This is an &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt;.</source>
          <target state="translated">リクエストが失敗した場合に呼び出される関数。関数は3つの引数を受け取ります。jqXHR（jQuery 1.4.xではXMLHttpRequest）オブジェクト、発生したエラーのタイプを説明する文字列、およびオプションの例外オブジェクト（発生した場合）です。 2番目の引数（ &lt;code&gt;null&lt;/code&gt; 以外）の可能な値は、 &lt;code&gt;&quot;timeout&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;error&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;abort&quot;&lt;/code&gt; 、および &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt; です。 HTTPエラーが発生すると、 &lt;code&gt;errorThrown&lt;/code&gt; は「Not Found」や「Internal Server Error」などのHTTPステータスのテキスト部分を受け取ります。&lt;strong&gt;jQuery 1.5&lt;/strong&gt;以降、 &lt;code&gt;error&lt;/code&gt; 設定は関数の配列を受け入れることができます。各関数が順番に呼び出されます。&lt;strong&gt;注意：&lt;/strong&gt;&lt;em&gt;このハンドラーは、クロスドメインスクリプトおよびクロスドメインJSONPリクエストでは呼び出されません。&lt;/em&gt;これは&lt;a href=&quot;ajax_events&quot;&gt;Ajaxイベント&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="ad31380401388d46afbf4aa87a9c27790d81c023" translate="yes" xml:space="preserve">
          <source>A function to be called if the request succeeds. The function gets passed three arguments: The data returned from the server, formatted according to the &lt;code&gt;dataType&lt;/code&gt; parameter or the &lt;code&gt;dataFilter&lt;/code&gt; callback function, if specified; a string describing the status; and the &lt;code&gt;jqXHR&lt;/code&gt; (in jQuery 1.4.x, XMLHttpRequest) object. &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, &lt;em&gt;the success setting can accept an array of functions. Each function will be called in turn.&lt;/em&gt; This is an &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt;.</source>
          <target state="translated">リクエストが成功した場合に呼び出される関数。関数は三つの引数が渡される：に従ってフォーマット、サーバから返されたデータを &lt;code&gt;dataType&lt;/code&gt; パラメータまたは &lt;code&gt;dataFilter&lt;/code&gt; のコールバック関数を指定する場合。ステータスを説明する文字列。および &lt;code&gt;jqXHR&lt;/code&gt; （jQuery 1.4.xでは、XMLHttpRequest）オブジェクト。&lt;strong&gt;jQuery 1.5&lt;/strong&gt;以降&lt;em&gt;、success設定は関数の配列を受け入れることができます。各関数が順番に呼び出されます。&lt;/em&gt;これは&lt;a href=&quot;ajax_events&quot;&gt;Ajaxイベント&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="fb32174cd1d6a5d8a18d1b368a08ceecac710ca9" translate="yes" xml:space="preserve">
          <source>A function to be called when the animation on an element completes (its Promise object is resolved). (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;)</source>
          <target state="translated">要素のアニメーションが完了したときに呼び出される関数（そのPromiseオブジェクトが解決されます）。（追加されたバージョン：&lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="8bbd1abb73263ad0edbc6840f98c3b801c4d0c73" translate="yes" xml:space="preserve">
          <source>A function to be called when the animation on an element completes or stops without completing (its Promise object is either resolved or rejected). (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;)</source>
          <target state="translated">要素のアニメーションが完了するか、完了せずに停止したときに呼び出される関数（そのPromiseオブジェクトは解決または拒否されます）。（追加されたバージョン：&lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="47cf859ff9fdcd9c21b063f0c2db553ac4588eca" translate="yes" xml:space="preserve">
          <source>A function to be called when the animation on an element fails to complete (its Promise object is rejected). (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;)</source>
          <target state="translated">要素のアニメーションが完了しないときに呼び出される関数（そのPromiseオブジェクトは拒否されます）。（追加されたバージョン：&lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="2d29415bebcdb74bed2cee3a491f4186730f315c" translate="yes" xml:space="preserve">
          <source>A function to be called when the request finishes (after &lt;code&gt;success&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; callbacks are executed). The function gets passed two arguments: The jqXHR (in jQuery 1.4.x, XMLHTTPRequest) object and a string categorizing the status of the request (&lt;code&gt;&quot;success&quot;&lt;/code&gt;, &lt;code&gt;&quot;notmodified&quot;&lt;/code&gt;, &lt;code&gt;&quot;nocontent&quot;&lt;/code&gt;, &lt;code&gt;&quot;error&quot;&lt;/code&gt;, &lt;code&gt;&quot;timeout&quot;&lt;/code&gt;, &lt;code&gt;&quot;abort&quot;&lt;/code&gt;, or &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt;). &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, the &lt;code&gt;complete&lt;/code&gt; setting can accept an array of functions. Each function will be called in turn. This is an &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt;.</source>
          <target state="translated">リクエストが終了したときに呼び出される関数（ &lt;code&gt;success&lt;/code&gt; と &lt;code&gt;error&lt;/code&gt; コールバックが実行された後）。関数には2つの引数が渡されます。jqXHR（jQuery 1.4.xではXMLHTTPRequest）オブジェクトと、リクエストのステータスを分類する文字列（ &lt;code&gt;&quot;success&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;notmodified&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;nocontent&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;error&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;timeout&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;abort&quot;&lt;/code&gt; または &lt;code&gt;&quot;parsererror&quot;&lt;/code&gt; ）。&lt;strong&gt;jQuery 1.5&lt;/strong&gt;以降では、 &lt;code&gt;complete&lt;/code&gt; 設定で関数の配列を受け入れることができます。各関数が順番に呼び出されます。これは&lt;a href=&quot;ajax_events&quot;&gt;Ajaxイベント&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="830af2258f76931e1bc10e0633d9a5c5df74722e" translate="yes" xml:space="preserve">
          <source>A function to be used to handle the raw response data of XMLHttpRequest. This is a pre-filtering function to sanitize the response. You should return the sanitized data. The function accepts two arguments: The raw data returned from the server and the 'dataType' parameter.</source>
          <target state="translated">XMLHttpRequestの生のレスポンスデータを扱うための関数です。レスポンスをサニタイズするための事前フィルタリング関数です。サニタイズされたデータを返す必要があります。この関数は2つの引数を受け取ります。サーバから返された生データと 'dataType' パラメータです。</target>
        </trans-unit>
        <trans-unit id="4a538969ce5551c1ec7eb37c0fffbd97a0adae9e" translate="yes" xml:space="preserve">
          <source>A function to call once the animation is complete, called once per matched element.</source>
          <target state="translated">アニメーションが完成したら呼び出す関数で、マッチした要素ごとに一度だけ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="02f3189dae7689756c608f1e49173e72d6b5bfaa" translate="yes" xml:space="preserve">
          <source>A function to call once the animation is complete.</source>
          <target state="translated">アニメーションが完成したら呼び出す関数。</target>
        </trans-unit>
        <trans-unit id="1a2d04f991750751824046581c93078c4ca73c92" translate="yes" xml:space="preserve">
          <source>A function to call when the animation on an element begins. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;)</source>
          <target state="translated">要素のアニメーションが始まるときに呼び出す関数。（追加されたバージョン：&lt;a href=&quot;https://api.jquery.com/category/version/1.8/&quot;&gt;1.8&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="00abc12c6dbd128df3ff31abcd20eee447557006" translate="yes" xml:space="preserve">
          <source>A function to execute after the DOM is ready.</source>
          <target state="translated">DOM の準備ができた後に実行する関数。</target>
        </trans-unit>
        <trans-unit id="6c77cd917ae31bd5bab654729b5c8880efc68dbd" translate="yes" xml:space="preserve">
          <source>A function to execute at the time the event is triggered.</source>
          <target state="translated">イベントが発生した時に実行する関数です。</target>
        </trans-unit>
        <trans-unit id="a4fc09df3d31e39c3f46bb7443bd9e0461b16463" translate="yes" xml:space="preserve">
          <source>A function to execute each time the event is triggered.</source>
          <target state="translated">イベントが発生するたびに実行する関数。</target>
        </trans-unit>
        <trans-unit id="1d7a2f701495fe15a5f2026c1a75a6d6593f8303" translate="yes" xml:space="preserve">
          <source>A function to execute every even time the element is clicked.</source>
          <target state="translated">要素がクリックされるたびに実行される関数。</target>
        </trans-unit>
        <trans-unit id="980225d7f36a288fe8940aea1f7f709f50402ec7" translate="yes" xml:space="preserve">
          <source>A function to execute every odd time the element is clicked.</source>
          <target state="translated">奇数回要素がクリックされるたびに実行される関数。</target>
        </trans-unit>
        <trans-unit id="d996e1d0806dc7e5a8a7c65c34cd693846895570" translate="yes" xml:space="preserve">
          <source>A function to execute for each matched element.</source>
          <target state="translated">一致した要素ごとに実行する関数。</target>
        </trans-unit>
        <trans-unit id="1f39a010c4c95bce00da7c032d444a38c94b4f0d" translate="yes" xml:space="preserve">
          <source>A function to execute when the event is triggered.</source>
          <target state="translated">イベントが発生したときに実行する関数です。</target>
        </trans-unit>
        <trans-unit id="f18a6795613eae497dc9fcd01f68e20e1d0ab6af" translate="yes" xml:space="preserve">
          <source>A function to execute when the event is triggered. The value &lt;code&gt;false&lt;/code&gt; is also allowed as a shorthand for a function that simply does &lt;code&gt;return false&lt;/code&gt;.</source>
          <target state="translated">イベントがトリガーされたときに実行する関数。値 &lt;code&gt;false&lt;/code&gt; は、単に &lt;code&gt;return false&lt;/code&gt; 関数の省略形としても許可されます。</target>
        </trans-unit>
        <trans-unit id="082863cdc42f6ee121f3d5d690e79fdaaa2f561f" translate="yes" xml:space="preserve">
          <source>A function to execute when the mouse pointer enters or leaves the element.</source>
          <target state="translated">マウスポインタが要素に入ったとき、または要素から離れたときに実行する関数です。</target>
        </trans-unit>
        <trans-unit id="e3fc355ad5f2cefe48c73caeafee87c4066182b8" translate="yes" xml:space="preserve">
          <source>A function to execute when the mouse pointer enters the element.</source>
          <target state="translated">マウスポインタが要素に入ったときに実行する関数。</target>
        </trans-unit>
        <trans-unit id="a9d10c2c2e36552c0bf0490f40a6c4d819b49069" translate="yes" xml:space="preserve">
          <source>A function to execute when the mouse pointer leaves the element.</source>
          <target state="translated">マウスポインタが要素から離れたときに実行する関数。</target>
        </trans-unit>
        <trans-unit id="753a25946bf5f52e3814052eabc3b8264848b502" translate="yes" xml:space="preserve">
          <source>A function to return the coordinates to set. Receives the index of the element in the collection as the first argument and the current coordinates as the second argument. The function should return an object with the new &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt; properties.</source>
          <target state="translated">設定する座標を返す関数。コレクション内の要素のインデックスを最初の引数として受け取り、現在の座標を2番目の引数として受け取ります。関数は、新しい &lt;code&gt;top&lt;/code&gt; および &lt;code&gt;left&lt;/code&gt; プロパティを持つオブジェクトを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="f05d291a6c84e80c139e5e38c615b05ee2a882d3" translate="yes" xml:space="preserve">
          <source>A function used as a test for each element in the set. &lt;code&gt;this&lt;/code&gt; is the current DOM element.</source>
          <target state="translated">セット内の各要素のテストとして使用される関数。 &lt;code&gt;this&lt;/code&gt; は現在のDOM要素です。</target>
        </trans-unit>
        <trans-unit id="e2ae8d3a23305e6457ed8e62ecb96ec49e9367c9" translate="yes" xml:space="preserve">
          <source>A function used as a test for each element in the set. It accepts two arguments, &lt;code&gt;index&lt;/code&gt;, which is the element's index in the jQuery collection, and &lt;code&gt;element&lt;/code&gt;, which is the DOM element. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current DOM element.</source>
          <target state="translated">セット内の各要素のテストとして使用される関数。これは2つの引数、受け入れ &lt;code&gt;index&lt;/code&gt; 要素のjQueryのコレクション内のインデックス、およびである、 &lt;code&gt;element&lt;/code&gt; のDOM要素です、。関数内では、 &lt;code&gt;this&lt;/code&gt; は現在のDOM要素を参照します。</target>
        </trans-unit>
        <trans-unit id="73041dce596fe7a99887952ee9471320bb8ab111" translate="yes" xml:space="preserve">
          <source>A function used as a test for every element in the set. It accepts two arguments, &lt;code&gt;index&lt;/code&gt;, which is the element's index in the jQuery collection, and &lt;code&gt;element&lt;/code&gt;, which is the DOM element. Within the function, &lt;code&gt;this&lt;/code&gt; refers to the current DOM element.</source>
          <target state="translated">セット内のすべての要素のテストとして使用される関数。これは2つの引数、受け入れ &lt;code&gt;index&lt;/code&gt; 要素のjQueryのコレクション内のインデックス、およびである、 &lt;code&gt;element&lt;/code&gt; のDOM要素です、。関数内では、 &lt;code&gt;this&lt;/code&gt; は現在のDOM要素を参照します。</target>
        </trans-unit>
        <trans-unit id="cf177e23d8c6379641152c3437f2aabb016f0f0c" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, called when the Deferred is rejected.</source>
          <target state="translated">Deferredが拒否されたときに呼び出される関数、または関数の配列。</target>
        </trans-unit>
        <trans-unit id="f3369f77e56c6e26db096d6ad07679d3dd2cf6b1" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, called when the Deferred is resolved.</source>
          <target state="translated">Deferredが解決されたときに呼び出される関数、または関数の配列。</target>
        </trans-unit>
        <trans-unit id="de834d0c6a69a14edd755f504978c46047906ca8" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, called when the Deferred notifies progress.</source>
          <target state="translated">Deferredが進行状況を通知するときに呼び出される関数、または関数の配列。</target>
        </trans-unit>
        <trans-unit id="115f24532655e181de87e9b01d270d724cf4344f" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, that are called when the Deferred is rejected.</source>
          <target state="translated">Deferredが拒否されたときに呼び出される関数、または関数の配列。</target>
        </trans-unit>
        <trans-unit id="634747d8641665697e88856f8b6d50950fbcc02d" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, that are called when the Deferred is resolved.</source>
          <target state="translated">Deferredが解決されたときに呼び出される関数、または関数の配列。</target>
        </trans-unit>
        <trans-unit id="27643de03084e9c096720511997205f7367ceb63" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, that are to be added to the callback list.</source>
          <target state="translated">コールバックリストに追加する関数、または関数の配列。</target>
        </trans-unit>
        <trans-unit id="9401192aa8ef9fe415df74b2467402e0bae42e64" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, that are to be removed from the callback list.</source>
          <target state="translated">コールバックリストから削除する関数、または関数の配列。</target>
        </trans-unit>
        <trans-unit id="cd5fb3ac6c30ac36c49776d0440d2b93328aa35f" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, that is called when the Deferred is resolved or rejected.</source>
          <target state="translated">Deferredが解決または拒否されたときに呼び出される関数、または関数の配列。</target>
        </trans-unit>
        <trans-unit id="9cb7be4f39fc09f3fab8f565bfa4f220a5a9fceb" translate="yes" xml:space="preserve">
          <source>A function, or array of functions, to be called when the Deferred generates progress notifications.</source>
          <target state="translated">Deferredが進捗通知を生成する際に呼び出される関数、または関数の配列。</target>
        </trans-unit>
        <trans-unit id="8f83959f9afcf8112b303e2cb07c9372e8097689" translate="yes" xml:space="preserve">
          <source>A generic iterator function, which can be used to seamlessly iterate over both objects and arrays. Arrays and array-like objects with a length property (such as a function&amp;rsquo;s arguments object) are iterated by numeric index, from 0 to length-1. Other objects are iterated via their named properties.</source>
          <target state="translated">オブジェクトと配列の両方をシームレスに反復するために使用できる汎用の反復関数。配列および長さプロパティを持つ配列のようなオブジェクト（関数の引数オブ​​ジェクトなど）は、0から長さ-1までの数値インデックスによって反復されます。他のオブジェクトは、それらの名前付きプロパティを介して反復されます。</target>
        </trans-unit>
        <trans-unit id="2d92bc9edc3a42db0c91576f6ea211416ba256b3" translate="yes" xml:space="preserve">
          <source>A handler can also be removed by specifying the function name in the &lt;code&gt;handler&lt;/code&gt; argument. When jQuery attaches an event handler, it assigns a unique id to the handler function. Handlers proxied by &lt;a href=&quot;jquery.proxy&quot;&gt;&lt;code&gt;jQuery.proxy()&lt;/code&gt;&lt;/a&gt; or a similar mechanism will all have the same unique id (the proxy function), so passing proxied handlers to &lt;code&gt;.off&lt;/code&gt; may remove more handlers than intended. In those situations it is better to attach and remove event handlers using namespaces.</source>
          <target state="translated">&lt;code&gt;handler&lt;/code&gt; 引数に関数名を指定して、ハンドラーを削除することもできます。jQueryがイベントハンドラーをアタッチするとき、jQueryはハンドラー関数に一意のIDを割り当てます。&lt;a href=&quot;jquery.proxy&quot;&gt; &lt;code&gt;jQuery.proxy()&lt;/code&gt; &lt;/a&gt;または類似のメカニズムによってプロキシされたハンドラーはすべて同じ一意のID（プロキシ関数）を持つため、プロキシされたハンドラーを &lt;code&gt;.off&lt;/code&gt; に渡すと、意図したより多くのハンドラーが削除される可能性があります。これらの状況では、名前空間を使用してイベントハンドラーをアタッチおよび削除することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="773b0de39c7c8466186cb1d6daf9deaaeccd3e8b" translate="yes" xml:space="preserve">
          <source>A handler function previously attached for the event(s), or the special value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">以前にイベントにアタッチされたハンドラー関数、または特別な値 &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7d48397dc00398a0be21fbbc3a905f814414a98d" translate="yes" xml:space="preserve">
          <source>A handler to return the new transport object to use with the data type provided in the first argument.</source>
          <target state="translated">最初の引数で提供されたデータ型で使用するための新しいトランスポート・オブジェクトを返すハンドラ。</target>
        </trans-unit>
        <trans-unit id="efe45440020f396bb332e155d0131cc0a8b3a6d7" translate="yes" xml:space="preserve">
          <source>A handler to set default values for future Ajax requests.</source>
          <target state="translated">将来の Ajax リクエストのデフォルト値を設定するハンドラ。</target>
        </trans-unit>
        <trans-unit id="8b616c71e4816d9853dba9be74c74c7bcf058b80" translate="yes" xml:space="preserve">
          <source>A jQuery object contains a collection of Document Object Model (DOM) elements that have been created from an HTML string or selected from a document. Since jQuery methods often use CSS selectors to match elements from a document, the set of elements in a jQuery object is often called a set of &quot;matched elements&quot; or &quot;selected elements&quot;.</source>
          <target state="translated">jQuery オブジェクトには、HTML 文字列から作成された、またはドキュメントから選択された DOM (Document Object Model)要素の集合が含まれます。jQuery のメソッドでは、CSS のセレクタを使用してドキュメントからの要素をマッチさせることが多いため、jQuery オブジェクト内の要素の集合は、「マッチされた要素」または「選択された要素」の集合と呼ばれることが多いです。</target>
        </trans-unit>
        <trans-unit id="3f76333833f74ff3202934ff64e50dc6406a96b0" translate="yes" xml:space="preserve">
          <source>A jQuery object may be empty, containing no DOM elements. You can create an empty jQuery object with &lt;code&gt;$()&lt;/code&gt; (that is, passing no arguments at all). A jQuery object may also be empty if a selector doesn't select any elements, or if a chained method filters out all the elements. It is not an error; any further methods called on that jQuery object simply have no effect since they have no elements to act upon. So, in this example if there are no bad entries on the page then no elements will be colored red:</source>
          <target state="translated">jQueryオブジェクトは、DOM要素を含まない空の場合があります。 &lt;code&gt;$()&lt;/code&gt; で空のjQueryオブジェクトを作成できます（つまり、引数をまったく渡さない）。セレクターが要素を選択しない場合、またはチェーンされたメソッドがすべての要素をフィルターで除外する場合も、jQueryオブジェクトは空になる可能性があります。エラーではありません。そのjQueryオブジェクトで呼び出されるそれ以上のメソッドは、作用する要素がないため、単に効果がありません。したがって、この例では、ページに不正なエントリがない場合、要素は赤で表示されません。</target>
        </trans-unit>
        <trans-unit id="d0e758d7830a95a9d2bd5505c4ec7b4e19086d7f" translate="yes" xml:space="preserve">
          <source>A jQuery object to match elements against.</source>
          <target state="translated">要素を照合するjQueryオブジェクト。</target>
        </trans-unit>
        <trans-unit id="03fd7b5b9f521b81a56d0eb7c415cdb90b219f0c" translate="yes" xml:space="preserve">
          <source>A long jQuery chain can be visualized as a structured code block, with filtering methods providing the openings of nested blocks and &lt;code&gt;end()&lt;/code&gt; methods closing them:</source>
          <target state="translated">長いjQueryチェーンは、ネストされたブロックの開始を提供するフィルタリングメソッドとそれらを閉じる &lt;code&gt;end()&lt;/code&gt; メソッドを使用して、構造化コードブロックとして視覚化できます。</target>
        </trans-unit>
        <trans-unit id="2ffe826b2d9c790c2c689cab648729fe13478413" translate="yes" xml:space="preserve">
          <source>A map of additional options to pass to the method.</source>
          <target state="translated">メソッドに渡す追加オプションのマップ。</target>
        </trans-unit>
        <trans-unit id="c720e16799077544f34b90736e99fa4afffc6844" translate="yes" xml:space="preserve">
          <source>A message is thus logged for each item in the list:</source>
          <target state="translated">このように、リスト内の各項目についてメッセージが記録されます。</target>
        </trans-unit>
        <trans-unit id="611ddfc3cf6248ec7db9c5426fa94106df89306f" translate="yes" xml:space="preserve">
          <source>A mime type to override the</source>
          <target state="translated">をオーバーライドするマイムタイプ</target>
        </trans-unit>
        <trans-unit id="624e39acb8caebe47577e44b889b416edc84c92e" translate="yes" xml:space="preserve">
          <source>A multi-purpose callbacks list object that provides a powerful way to manage callback lists.</source>
          <target state="translated">コールバックリストを管理するための強力な方法を提供する多目的コールバックリストオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="a0f82643f79503ae2d928ab14cdffe4a27f5d99b" translate="yes" xml:space="preserve">
          <source>A multi-purpose object that provides a powerful way to manage callback lists. It supports adding, removing, firing, and disabling callbacks. The Callbacks object is created and returned by the &lt;code&gt;$.Callbacks&lt;/code&gt; function and subsequently returned by most of that function's methods.</source>
          <target state="translated">コールバックリストを管理する強力な方法を提供する多目的オブジェクト。コールバックの追加、削除、起動、無効化をサポートしています。Callbacksオブジェクトは、 &lt;code&gt;$.Callbacks&lt;/code&gt; 関数によって作成および返され、その後、その関数のほとんどのメソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="0dda9dce04ebb586f5c2a18836c863b7ab81c911" translate="yes" xml:space="preserve">
          <source>A negative index is counted from the end of the matched set, so this example returns the last item in the list:</source>
          <target state="translated">負のインデックスは、マッチしたセットの最後からカウントされるので、この例ではリストの最後の項目が返されます。</target>
        </trans-unit>
        <trans-unit id="889c716d14887957b66d3ef6c83cca24b46a6b9b" translate="yes" xml:space="preserve">
          <source>A number between 0 and 1 denoting the target opacity.</source>
          <target state="translated">目標の不透明度を示す0から1の間の数値。</target>
        </trans-unit>
        <trans-unit id="ba91bf6a0d4a4fa7097a4a3bd75aaa187814c5c9" translate="yes" xml:space="preserve">
          <source>A number indicating the new position to set the scroll bar to.</source>
          <target state="translated">スクロールバーを設定する新しい位置を示す数値。</target>
        </trans-unit>
        <trans-unit id="084f6554f531f8756e8f4d4ff703ff6b66d6db12" translate="yes" xml:space="preserve">
          <source>A number of techniques are used to determine the exact return value for an object. The [[Class]] is determined as follows:</source>
          <target state="translated">オブジェクトの正確な戻り値を決定するために、多くのテクニックが使用されています。クラス]]は以下のように決定されます。</target>
        </trans-unit>
        <trans-unit id="4b46a2fe3093269d8f79e50cc1582c110bcc921c" translate="yes" xml:space="preserve">
          <source>A number representing the number of pixels, or a number along with an optional unit of measure appended (as a string).</source>
          <target state="translated">画素数を表す数値、または任意の単位(文字列)を付加した数値。</target>
        </trans-unit>
        <trans-unit id="99303541e148ff6daee8bb26aafe77bc001a5b5e" translate="yes" xml:space="preserve">
          <source>A password to be used with XMLHttpRequest in response to an HTTP access authentication request.</source>
          <target state="translated">HTTPアクセス認証要求に応答してXMLHttpRequestで使用するパスワード。</target>
        </trans-unit>
        <trans-unit id="ab19b47675cd8d730a94b4e614887e48acb579ba" translate="yes" xml:space="preserve">
          <source>A plain object of data that will be passed to the event handler.</source>
          <target state="translated">イベントハンドラに渡されるデータのプレーンオブジェクト。</target>
        </trans-unit>
        <trans-unit id="ba869a3a227bc70e4b8a5d088d801946222c7fc2" translate="yes" xml:space="preserve">
          <source>A plain object of one or more JavaScript event types and functions to execute for them.</source>
          <target state="translated">1つ以上のJavaScriptイベントタイプのプレーンオブジェクトと、それらのために実行する関数。</target>
        </trans-unit>
        <trans-unit id="ac417ebac8b0a4a62c307d3c6bd56484576907c3" translate="yes" xml:space="preserve">
          <source>A plain object of one or more event types and functions to execute for them.</source>
          <target state="translated">1つ以上のイベントタイプのプレーンなオブジェクトと、それらのために実行する関数。</target>
        </trans-unit>
        <trans-unit id="b87b96f2c71d3cc94f93cc3e54495217d3eb1ddb" translate="yes" xml:space="preserve">
          <source>A plain object of one or more event types, such as &lt;code&gt;click&lt;/code&gt; or &lt;code&gt;keydown&lt;/code&gt; and their corresponding functions that are no longer to be executed.</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; や &lt;code&gt;keydown&lt;/code&gt; などの1つ以上のイベントタイプのプレーンオブジェクトと、実行されなくなった対応する機能。</target>
        </trans-unit>
        <trans-unit id="65a7fccb41dcf6ef469cbaf846e13252cdc947d2" translate="yes" xml:space="preserve">
          <source>A plain object or string that is sent to the server with the request.</source>
          <target state="translated">リクエストと一緒にサーバに送られるプレーンなオブジェクトまたは文字列。</target>
        </trans-unit>
        <trans-unit id="8870051a98bcbe7a81d944697e971d777e6b20cc" translate="yes" xml:space="preserve">
          <source>A plain object to wrap in a jQuery object.</source>
          <target state="translated">jQueryオブジェクトにラップするプレーンオブジェクト。</target>
        </trans-unit>
        <trans-unit id="6cbca1d5fade541a587b0771d8b25cf3ed42717a" translate="yes" xml:space="preserve">
          <source>A pre-request callback function that can be used to modify the jqXHR (in jQuery 1.4.x, XMLHTTPRequest) object before it is sent. Use this to set custom headers, etc. The jqXHR and settings objects are passed as arguments. This is an &lt;a href=&quot;ajax_events&quot;&gt;Ajax Event&lt;/a&gt;. Returning &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;beforeSend&lt;/code&gt; function will cancel the request. &lt;strong&gt;As of jQuery 1.5&lt;/strong&gt;, the &lt;code&gt;beforeSend&lt;/code&gt; option will be called regardless of the type of request.</source>
          <target state="translated">送信前にjqXHR（jQuery 1.4.xではXMLHTTPRequest）オブジェクトを変更するために使用できる要求前コールバック関数。これを使用して、カスタムヘッダーなどを設定します。jqXHRおよび設定オブジェクトは、引数として渡されます。これは&lt;a href=&quot;ajax_events&quot;&gt;Ajaxイベント&lt;/a&gt;です。 &lt;code&gt;beforeSend&lt;/code&gt; 関数で &lt;code&gt;false&lt;/code&gt; を返すと、リクエストがキャンセルされます。&lt;strong&gt;jQuery 1.5&lt;/strong&gt;以降では、要求のタイプに関係なく、 &lt;code&gt;beforeSend&lt;/code&gt; オプションが呼び出されます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="092ec48ee827f10c9be7bb97fbc5ce1343151e19" translate="yes" xml:space="preserve">
          <source>A reference to or instance of the object holding all of QUnit's assertions. See the &lt;a href=&quot;https://api.qunitjs.com/QUnit.assert/&quot;&gt;API documentation for &lt;code&gt;QUnit.assert&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">QUnitのすべてのアサーションを保持するオブジェクトへの参照またはインスタンス。詳細については&lt;a href=&quot;https://api.qunitjs.com/QUnit.assert/&quot;&gt;、 &lt;code&gt;QUnit.assert&lt;/code&gt; &lt;/a&gt;のAPIドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="0c20a76d0d88023564986ef3b2f40542127c56da" translate="yes" xml:space="preserve">
          <source>A reference to or instance of the object holding all of QUnit's assertions. See the &lt;a href=&quot;https://api.qunitjs.com/config/QUnit.assert&quot;&gt;API documentation for &lt;code&gt;QUnit.assert&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">QUnitのすべてのアサーションを保持するオブジェクトへの参照またはインスタンス。詳細については&lt;a href=&quot;https://api.qunitjs.com/config/QUnit.assert&quot;&gt;、 &lt;code&gt;QUnit.assert&lt;/code&gt; &lt;/a&gt;のAPIドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="fa237466d668e2af485a8ada69dd59e5ce48c7cb" translate="yes" xml:space="preserve">
          <source>A reference to the context in which the callbacks in the list should be fired.</source>
          <target state="translated">リスト内のコールバックが実行されるコンテキストへの参照。</target>
        </trans-unit>
        <trans-unit id="197befb9fa33927cf680b0266ece4dec3f477319" translate="yes" xml:space="preserve">
          <source>A second click will show the element once again:</source>
          <target state="translated">2回目のクリックで再び要素が表示されます。</target>
        </trans-unit>
        <trans-unit id="240db7cd0f957cc5027593ea9b2055d6a9827dc3" translate="yes" xml:space="preserve">
          <source>A selection using a jQuery collection of all span tags. Only spans within p tags are changed to red while others are left blue.</source>
          <target state="translated">すべてのスパンタグのjQueryコレクションを使った選択。p タグ内のスパンのみが赤に変更され、その他のスパンは青のままになります。</target>
        </trans-unit>
        <trans-unit id="1aebe38f6ff013a230ec79d74aae9e2e3f0dddfe" translate="yes" xml:space="preserve">
          <source>A selector expression that filters the set of matched elements to be removed.</source>
          <target state="translated">一致した要素のセットをフィルタリングして削除するセレクタ式。</target>
        </trans-unit>
        <trans-unit id="8bc353917b6ca843f07c00695e75b746680722c3" translate="yes" xml:space="preserve">
          <source>A selector is used in jQuery to select DOM elements from a DOM document. That document is, in most cases, the DOM document present in all browsers, but can also be an XML document received via Ajax.</source>
          <target state="translated">セレクタは jQuery で DOM ドキュメントから DOM 要素を選択するために使用されます。このドキュメントは、ほとんどの場合、すべてのブラウザに存在する DOM ドキュメントですが、Ajax を介して受信した XML ドキュメントである場合もあります。</target>
        </trans-unit>
        <trans-unit id="61044b883373809326dbdb4520b5949305be0945" translate="yes" xml:space="preserve">
          <source>A selector representing a jQuery collection in which to look for an element.</source>
          <target state="translated">要素を探す jQuery コレクションを表すセレクタ。</target>
        </trans-unit>
        <trans-unit id="4555b8647f43620359287d4ec32cf2da53c8d333" translate="yes" xml:space="preserve">
          <source>A selector representing selector passed to jQuery(), if any, when creating the original set.</source>
          <target state="translated">元のセットを作成する際に jQuery()に渡されるセレクタがあれば、それを表すセレクタ。</target>
        </trans-unit>
        <trans-unit id="f8c73427c3128104a631a74524ecb84403358f77" translate="yes" xml:space="preserve">
          <source>A selector string to filter the descendants of the selected elements that trigger the event. If the selector is &lt;code&gt;null&lt;/code&gt; or omitted, the event is always triggered when it reaches the selected element.</source>
          <target state="translated">イベントをトリガーする選択された要素の子孫をフィルターするセレクター文字列。セレクターが &lt;code&gt;null&lt;/code&gt; または省略されている場合、イベントは、選択された要素に到達したときに常にトリガーされます。</target>
        </trans-unit>
        <trans-unit id="9cbf79d728e25a6fc3b6a1e9ad5bce6f8424a9e4" translate="yes" xml:space="preserve">
          <source>A selector string to filter the descendants of the selected elements that will call the handler. If the selector is null or omitted, the handler is always called when it reaches the selected element.</source>
          <target state="translated">ハンドラを呼び出す選択された要素の子孫をフィルタリングするためのセレクタ文字列。セレクタが NULL または省略された場合、ハンドラは常に選択された要素に到達したときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="f5e6ec2b56fa242c521a687328c06c6fc00cf828" translate="yes" xml:space="preserve">
          <source>A selector string, jQuery object, DOM element, or array of elements indicating which element(s) to replace.</source>
          <target state="translated">どの要素を置き換えるかを示すセレクタ文字列、jQuery オブジェクト、DOM 要素、または要素の配列。</target>
        </trans-unit>
        <trans-unit id="4a9501785e328fbb08d497028aa330bfbdfb5728" translate="yes" xml:space="preserve">
          <source>A selector to check the parent element against. If an element's parent does not match the selector, the element won't be unwrapped.</source>
          <target state="translated">親要素をチェックするセレクタ。要素の親がセレクタと一致しない場合、要素は展開されません。</target>
        </trans-unit>
        <trans-unit id="435581819124b69f642b0223243517af58b24047" translate="yes" xml:space="preserve">
          <source>A selector to filter the elements that trigger the event.</source>
          <target state="translated">イベントのトリガーとなる要素をフィルタリングするセレクタ。</target>
        </trans-unit>
        <trans-unit id="b223afec38749c3ba658bb4f622af170370af471" translate="yes" xml:space="preserve">
          <source>A selector which should match the one originally passed to &lt;code&gt;.on()&lt;/code&gt; when attaching event handlers.</source>
          <target state="translated">イベントハンドラーをアタッチするときに、最初に &lt;code&gt;.on()&lt;/code&gt; に渡されたセレクターと一致するセレクター。</target>
        </trans-unit>
        <trans-unit id="d288f4f3edb9c199d7e103c67222dcc3df98c3b7" translate="yes" xml:space="preserve">
          <source>A selector which will be used to filter the event results.</source>
          <target state="translated">イベントの結果をフィルタリングするために使用されるセレクタ。</target>
        </trans-unit>
        <trans-unit id="6161bb1925091d5d1767ab5682ac7c1b9490bafa" translate="yes" xml:space="preserve">
          <source>A selector, element, HTML string, array of elements, or jQuery object; the matched set of elements will be inserted at the beginning of the element(s) specified by this parameter.</source>
          <target state="translated">セレクタ、要素、HTML 文字列、要素の配列、または jQuery オブジェクト。マッチした要素のセットは、このパラメータで指定された要素の先頭に挿入されます。</target>
        </trans-unit>
        <trans-unit id="b85a830aa6290eb8261e6ce7454e9b57d4f68f7d" translate="yes" xml:space="preserve">
          <source>A selector, element, HTML string, array of elements, or jQuery object; the matched set of elements will be inserted at the end of the element(s) specified by this parameter.</source>
          <target state="translated">セレクタ、要素、HTML 文字列、要素の配列、または jQuery オブジェクト。マッチした要素のセットは、このパラメータで指定された要素の最後に挿入されます。</target>
        </trans-unit>
        <trans-unit id="2048e3033a15c7384490ab51dcb346715258bb36" translate="yes" xml:space="preserve">
          <source>A selector, element, HTML string, or jQuery object specifying the structure to wrap around the matched elements.</source>
          <target state="translated">セレクタ、要素、HTML 文字列、またはマッチした要素の回り込み構造を指定する jQuery オブジェクト。</target>
        </trans-unit>
        <trans-unit id="4bb8eb5d193e11fe2e8a28f7a9bc61c7eddf6c02" translate="yes" xml:space="preserve">
          <source>A selector, element, HTML string, or jQuery object specifying the structure to wrap around the matched elements. When you pass a jQuery collection containing more than one element, or a selector matching more than one element, the first element will be used.</source>
          <target state="translated">セレクタ、要素、HTML 文字列、または一致した要素を囲む構造を指定する jQuery オブジェクト。複数の要素を含む jQuery コレクション、または複数の要素にマッチするセレクタを渡すと、最初の要素が使用されます。</target>
        </trans-unit>
        <trans-unit id="8b1ab2d888cf6bc4e5db29aff58f73a664ffa53a" translate="yes" xml:space="preserve">
          <source>A selector, element, array of elements, HTML string, or jQuery object; the matched set of elements will be inserted after the element(s) specified by this parameter.</source>
          <target state="translated">セレクタ、要素、要素の配列、HTML 文字列、または jQuery オブジェクト。マッチした要素のセットは、このパラメータで指定された要素の後に挿入されます。</target>
        </trans-unit>
        <trans-unit id="7ca5a1100e219133598fd1008c8929b4691b6d94" translate="yes" xml:space="preserve">
          <source>A selector, element, array of elements, HTML string, or jQuery object; the matched set of elements will be inserted before the element(s) specified by this parameter.</source>
          <target state="translated">セレクタ、要素、要素の配列、HTML 文字列、または jQuery オブジェクト。マッチした要素のセットは、このパラメータで指定された要素の前に挿入されます。</target>
        </trans-unit>
        <trans-unit id="a8f2020f4f2a03685d11bc56cfc356f9ba862e67" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that configure the Ajax request. All properties except for &lt;code&gt;url&lt;/code&gt; are optional. A default can be set for any option with &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;. See &lt;a href=&quot;jquery.ajax#jQuery-ajax-settings&quot;&gt;jQuery.ajax( settings )&lt;/a&gt; for a complete list of all settings. The type option will automatically be set to &lt;code&gt;GET&lt;/code&gt;.</source>
          <target state="translated">Ajaxリクエストを構成するキーと値のペアのセット。 &lt;code&gt;url&lt;/code&gt; を除くすべてのプロパティはオプションです。&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$ .ajaxSetup（）を使用&lt;/a&gt;して、任意のオプションにデフォルトを設定できます。すべての設定の完全なリストについては、&lt;a href=&quot;jquery.ajax#jQuery-ajax-settings&quot;&gt;jQuery.ajax（settings）&lt;/a&gt;を参照してください。typeオプションは自動的に &lt;code&gt;GET&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="d09637d2f4d79e4cdf99c8aa8adf15dc3a0978a4" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that configure the Ajax request. All properties except for &lt;code&gt;url&lt;/code&gt; are optional. A default can be set for any option with &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;. See &lt;a href=&quot;jquery.ajax#jQuery-ajax-settings&quot;&gt;jQuery.ajax( settings )&lt;/a&gt; for a complete list of all settings. Type will automatically be set to &lt;code&gt;POST&lt;/code&gt;.</source>
          <target state="translated">Ajaxリクエストを構成するキーと値のペアのセット。 &lt;code&gt;url&lt;/code&gt; を除くすべてのプロパティはオプションです。&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$ .ajaxSetup（）を使用&lt;/a&gt;して、任意のオプションにデフォルトを設定できます。すべての設定の完全なリストについては、&lt;a href=&quot;jquery.ajax#jQuery-ajax-settings&quot;&gt;jQuery.ajax（settings）&lt;/a&gt;を参照してください。タイプは自動的に &lt;code&gt;POST&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="62044105e05af19bfd1984dacaa143abe7767f2b" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that configure the Ajax request. All settings are optional. A default can be set for any option with &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;.</source>
          <target state="translated">Ajaxリクエストを構成するキーと値のペアのセット。すべての設定はオプションです。&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$ .ajaxSetup（）を使用&lt;/a&gt;して、任意のオプションにデフォルトを設定できます。</target>
        </trans-unit>
        <trans-unit id="0dea1cc5df272df8fdf29792310e10e896f79c0c" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that configure the Ajax request. All settings are optional. A default can be set for any option with &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;. See &lt;a href=&quot;#jQuery-ajax-settings&quot;&gt;jQuery.ajax( settings )&lt;/a&gt; below for a complete list of all settings.</source>
          <target state="translated">Ajaxリクエストを構成するキーと値のペアのセット。すべての設定はオプションです。&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$ .ajaxSetup（）を使用&lt;/a&gt;して、任意のオプションにデフォルトを設定できます。すべての設定の完全なリストについては、以下の&lt;a href=&quot;#jQuery-ajax-settings&quot;&gt;jQuery.ajax（settings）を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="8fc373a69f6b5dc161210f77fd661e32cddfc31a" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that configure the default Ajax request. All options are optional.</source>
          <target state="translated">デフォルトの Ajax リクエストを設定するキー/値のペアのセット。すべてのオプションはオプションです。</target>
        </trans-unit>
        <trans-unit id="aa5f15f4fab20ecefd307f8273830834f31a184a" translate="yes" xml:space="preserve">
          <source>A set of key/value pairs that map a given &lt;code&gt;dataType&lt;/code&gt; to its MIME type, which gets sent in the &lt;code&gt;Accept&lt;/code&gt; request header. This header tells the server what kind of response it will accept in return. For example, the following defines a custom type &lt;code&gt;mycustomtype&lt;/code&gt; to be sent with the request:</source>
          <target state="translated">特定の &lt;code&gt;dataType&lt;/code&gt; をMIMEタイプにマップするキーと値のペアのセット。MIMEタイプは &lt;code&gt;Accept&lt;/code&gt; リクエストヘッダーで送信されます。このヘッダーは、サーバーが受け取る応答の種類をサーバーに通知します。たとえば、次の例では、リクエストとともに送信されるカスタムタイプ &lt;code&gt;mycustomtype&lt;/code&gt; を定義しています。</target>
        </trans-unit>
        <trans-unit id="b875876239e5de43bcf810ac3e1c2533682c949f" translate="yes" xml:space="preserve">
          <source>A string can be defined using single or double quotes. You can nest single quotes inside of double quotes, and the other way around. To mix double quotes with double quotes (or single with single), the nested ones have to be escaped with a backslash.</source>
          <target state="translated">文字列は、シングルクォートまたはダブルクォートを使用して定義することができます。シングルクォートをダブルクォートの中に入れ子にすることもできますし、その逆もできます。ダブルクォートとダブルクォートを混ぜる(またはシングルとシングルを混ぜる)には、入れ子にしたものをバックスラッシュでエスケープしなければなりません。</target>
        </trans-unit>
        <trans-unit id="b4ee796037c8b24b4ea0ffeccd0d1a499ff63d62" translate="yes" xml:space="preserve">
          <source>A string containing a JavaScript event type, such as &quot;click&quot; or &quot;keydown&quot;</source>
          <target state="translated">click&quot; や &quot;keydown&quot; などの JavaScript イベントタイプを含む文字列</target>
        </trans-unit>
        <trans-unit id="8122457cc83d84ad4c1974e3c03de520151c1940" translate="yes" xml:space="preserve">
          <source>A string containing a JavaScript event type, such as &quot;click&quot; or &quot;keydown.&quot; As of jQuery 1.4 the string can contain multiple, space-separated event types or custom event names.</source>
          <target state="translated">&quot;click&quot; や &quot;keydown&quot; などの JavaScript イベント タイプを含む文字列。jQuery 1.4 以降では、この文字列には、スペースで区切られた複数のイベント タイプまたはカスタム イベント名を含めることができます。</target>
        </trans-unit>
        <trans-unit id="aa216c5aa5c38cd38ba70f8d0b472a57ec7a822c" translate="yes" xml:space="preserve">
          <source>A string containing a JavaScript event type, such as &lt;code&gt;click&lt;/code&gt; or &lt;code&gt;keydown&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; や &lt;code&gt;keydown&lt;/code&gt; などのJavaScriptイベントタイプを含む文字列。</target>
        </trans-unit>
        <trans-unit id="7dd7a34444a29f66191f44be7c1a5e1d1e46c395" translate="yes" xml:space="preserve">
          <source>A string containing a JavaScript event type, such as &lt;code&gt;click&lt;/code&gt; or &lt;code&gt;submit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; や &lt;code&gt;submit&lt;/code&gt; などのJavaScriptイベントタイプを含む文字列。</target>
        </trans-unit>
        <trans-unit id="fb545be9e3afd37f4fbe049a8aabeede3a284859" translate="yes" xml:space="preserve">
          <source>A string containing a namespace to unbind all events from.</source>
          <target state="translated">すべてのイベントのバインドを解除するための名前空間を含む文字列。</target>
        </trans-unit>
        <trans-unit id="b2a2aa21cdb7758666ff7f4202d2568dd1da5b66" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression</source>
          <target state="translated">セレクタ式を含む文字列</target>
        </trans-unit>
        <trans-unit id="6b178d4a56422a872bcdddd4aea410127c0d1548" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to escape.</source>
          <target state="translated">エスケープするセレクタ式を含む文字列。</target>
        </trans-unit>
        <trans-unit id="1c949e3138f027aa18bef420df2d52afa0468911" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to indicate where to stop matching ancestor elements.</source>
          <target state="translated">祖先要素のマッチングを停止する場所を示すセレクタ式を含む文字列。</target>
        </trans-unit>
        <trans-unit id="8f9322e9bd53c0035f320d6328efece412fd6d59" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to indicate where to stop matching following sibling elements.</source>
          <target state="translated">次の兄弟要素のマッチングをどこで止めるかを示すセレクタ式を含む文字列。</target>
        </trans-unit>
        <trans-unit id="ab519886e81c84738902552f1d4243c03fd936cb" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to indicate where to stop matching preceding sibling elements.</source>
          <target state="translated">先行する兄弟要素のマッチングをどこで止めるかを示すセレクタ式を含む文字列。</target>
        </trans-unit>
        <trans-unit id="874a3b28d8c4819d989673ba4bcc92abb1691039" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to match elements against.</source>
          <target state="translated">要素をマッチさせるためのセレクタ式を含む文字列。</target>
        </trans-unit>
        <trans-unit id="53517c5087601fd11e15e0dc06e922e939133e0f" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression to match the current set of elements against.</source>
          <target state="translated">現在の要素のセットにマッチするセレクタ式を含む文字列。</target>
        </trans-unit>
        <trans-unit id="e026b2f26561a7d3599a593d9bd4d72915e3f457" translate="yes" xml:space="preserve">
          <source>A string containing a selector expression, a DOM element, or an array of elements to match against the set.</source>
          <target state="translated">セレクタ式、DOM 要素、またはセットにマッチする要素の配列を含む文字列。</target>
        </trans-unit>
        <trans-unit id="5be87aef37b8be4bc6fb063251b4b8e37d1c736c" translate="yes" xml:space="preserve">
          <source>A string containing one or more DOM event types, such as &quot;click&quot; or &quot;submit,&quot; or custom event names.</source>
          <target state="translated">click&quot; や &quot;submit&quot; などの一つ以上の DOM イベントタイプ、またはカスタムイベント名を含む文字列。</target>
        </trans-unit>
        <trans-unit id="991badff8b5ea2ef9b9f7a5684ed5db432f47844" translate="yes" xml:space="preserve">
          <source>A string containing one or more JavaScript event types, such as &quot;click&quot; or &quot;submit,&quot; or custom event names.</source>
          <target state="translated">クリック」や「送信」などの1つ以上のJavaScriptイベントタイプ、またはカスタムイベント名を含む文字列。</target>
        </trans-unit>
        <trans-unit id="b4a34c3b9709c018e0898cbbd1f333b2ff593cba" translate="yes" xml:space="preserve">
          <source>A string containing one or more space-separated JavaScript event types, such as &quot;click&quot; or &quot;keydown,&quot; or custom event names.</source>
          <target state="translated">クリック」や「キーダウン」などの1つ以上のスペースで区切られたJavaScriptイベントタイプ、またはカスタムイベント名を含む文字列。</target>
        </trans-unit>
        <trans-unit id="6994fb465971f28333ba96c8bb95dd772491e42a" translate="yes" xml:space="preserve">
          <source>A string containing the URL to which the request is sent.</source>
          <target state="translated">リクエストが送信される URL を含む文字列。</target>
        </trans-unit>
        <trans-unit id="280d40a6a1755944383dceab95e23b0639e4c793" translate="yes" xml:space="preserve">
          <source>A string containing the jQuery version number.</source>
          <target state="translated">jQuery のバージョン番号を含む文字列。</target>
        </trans-unit>
        <trans-unit id="0118a75b907e1c80459d45e2c1caa8a299f1c4f5" translate="yes" xml:space="preserve">
          <source>A string containing the name of the queue. Defaults to &lt;code&gt;fx&lt;/code&gt;, the standard effects queue.</source>
          <target state="translated">キューの名前を含む文字列。デフォルトは、標準のエフェクトキューである &lt;code&gt;fx&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a5a3a322eaa9009b34fd666c867a73dc13271360" translate="yes" xml:space="preserve">
          <source>A string defining a single, standalone, HTML element (e.g. &amp;lt;div/&amp;gt; or &amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;).</source>
          <target state="translated">単一のスタンドアロンのHTML要素を定義する文字列（&amp;lt;div /&amp;gt;または&amp;lt;div&amp;gt; &amp;lt;/ div&amp;gt;など）。</target>
        </trans-unit>
        <trans-unit id="fdf892770269e2e5b22e51159168cd893d9519f2" translate="yes" xml:space="preserve">
          <source>A string identifying the data type to use</source>
          <target state="translated">使用するデータ型を指定する文字列</target>
        </trans-unit>
        <trans-unit id="02f4c8f3f8e451e4ec19e0c2407f8b5c4b4cf0ff" translate="yes" xml:space="preserve">
          <source>A string in JavaScript has some built-in methods to manipulate the string, though the result is always a new string - or something else, eg. split returns an &lt;a href=&quot;types#Array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="translated">JavaScriptの文字列には、文字列を操作するための組み込みメソッドがいくつかありますが、結果は常に新しい文字列、または何か他のものです。splitは&lt;a href=&quot;types#Array&quot;&gt;配列を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="bb2fbec40ee6f8afe789d2949c2c083739a6e8a9" translate="yes" xml:space="preserve">
          <source>A string in JavaScript is an immutable primitive value that contains none, one or many characters.</source>
          <target state="translated">JavaScriptにおける文字列とは、何も含まない、1文字、または多数の文字を含む不変のプリミティブ値のことです。</target>
        </trans-unit>
        <trans-unit id="2e1f6f6516781634bf2cea15d0ec883a43cd236b" translate="yes" xml:space="preserve">
          <source>A string indicating which easing function to use for the transition.</source>
          <target state="translated">トランジションに使用するイージング関数を示す文字列。</target>
        </trans-unit>
        <trans-unit id="8ebb73f51bb164c822cac96b08e926c9d34ec88e" translate="yes" xml:space="preserve">
          <source>A string is designated &lt;strong&gt;htmlString&lt;/strong&gt; in jQuery documentation when it is used to represent one or more DOM elements, typically to be created and inserted in the document. When passed as an argument of the &lt;code&gt;jQuery()&lt;/code&gt; function, the string is identified as HTML if it starts with &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt;) and is parsed as such until the final &lt;code&gt;&amp;gt;&lt;/code&gt; character. Prior to jQuery 1.9, a string was considered to be HTML if it contained &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt;&lt;em&gt;anywhere within the string&lt;/em&gt;.</source>
          <target state="translated">文字列は、1つ以上のDOM要素を表すために使用される場合、jQueryドキュメントでは&lt;strong&gt;htmlString&lt;/strong&gt;として指定されます。通常、作成され、ドキュメントに挿入されます。 &lt;code&gt;jQuery()&lt;/code&gt; 関数の引数として渡される場合、文字列は &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt; で始まる場合はHTMLとして識別され、最後の &lt;code&gt;&amp;gt;&lt;/code&gt; 文字までそのように解析されます。それが含まれている場合はjQuery 1.9に先立ち、文字列はHTMLであると考えられた &lt;code&gt;&amp;lt;tag ... &amp;gt;&lt;/code&gt; &lt;em&gt;文字列内の任意の場所を&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="68e6208a4a77d9a381adee6a6d1e0b94ba4cec11" translate="yes" xml:space="preserve">
          <source>A string naming the piece of data to delete.</source>
          <target state="translated">削除するデータの一部を指定する文字列。</target>
        </trans-unit>
        <trans-unit id="2022df9661ed513ea326f9fd33aa0cd09a5cca69" translate="yes" xml:space="preserve">
          <source>A string naming the piece of data to remove.</source>
          <target state="translated">削除するデータの一部を指定する文字列。</target>
        </trans-unit>
        <trans-unit id="bbaf0b87fe19a3016bd905c02c9e0bb4790cc09b" translate="yes" xml:space="preserve">
          <source>A string naming the piece of data to set.</source>
          <target state="translated">設定するデータの一部を指定する文字列。</target>
        </trans-unit>
        <trans-unit id="469c187b5b09e07d903e894452dbe6feb32f29be" translate="yes" xml:space="preserve">
          <source>A string of HTML to create on the fly. Note that this parses HTML, &lt;strong&gt;not&lt;/strong&gt; XML.</source>
          <target state="translated">オンザフライで作成するHTMLの文字列。これはXML では&lt;strong&gt;なく&lt;/strong&gt; HTMLを解析することに注意してください。</target>
        </trans-unit>
        <trans-unit id="fa917126906ddbdff3980fdd12465a254bd63aac" translate="yes" xml:space="preserve">
          <source>A string of HTML to set as the content of each matched element.</source>
          <target state="translated">マッチした各要素の内容として設定するHTMLの文字列。</target>
        </trans-unit>
        <trans-unit id="82a5750e07c30e9387fdae249c9a3581e0037e3b" translate="yes" xml:space="preserve">
          <source>A string of text, a number, or an array of strings corresponding to the value of each matched element to set as selected/checked.</source>
          <target state="translated">テキスト、数値、または文字列の配列のうち、一致する各要素の値に対応するものを、選択/チェックしたものとして設定します。</target>
        </trans-unit>
        <trans-unit id="5b44c2cc4e18ef0026d8f50c34591c2a857d84ff" translate="yes" xml:space="preserve">
          <source>A string or number determining how long the animation will run.</source>
          <target state="translated">アニメーションの実行時間を決定する文字列または数値。</target>
        </trans-unit>
        <trans-unit id="81616ca223cb30275ff05264d8e36118db942f20" translate="yes" xml:space="preserve">
          <source>A string representing a selector expression to find additional elements to add to the set of matched elements.</source>
          <target state="translated">一致した要素のセットに追加する要素を見つけるためのセレクタ式を表す文字列。</target>
        </trans-unit>
        <trans-unit id="b79c5f7b15842a1722513c43a3c29d820df27381" translate="yes" xml:space="preserve">
          <source>A transport is an object that provides two methods, &lt;code&gt;send&lt;/code&gt; and &lt;code&gt;abort&lt;/code&gt;, that are used internally by &lt;code&gt;$.ajax()&lt;/code&gt; to issue requests. A transport is the most advanced way to enhance &lt;code&gt;$.ajax()&lt;/code&gt; and should be used only as a last resort when prefilters and converters are insufficient.</source>
          <target state="translated">トランスポートは、リクエストを発行するために &lt;code&gt;$.ajax()&lt;/code&gt; によって内部的に使用される &lt;code&gt;send&lt;/code&gt; および &lt;code&gt;abort&lt;/code&gt; という 2つのメソッドを提供するオブジェクトです。トランスポートは &lt;code&gt;$.ajax()&lt;/code&gt; を拡張する最も高度な方法であり、プレフィルターとコンバーターが不十分な場合の最後の手段としてのみ使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="5ba082c7b0ef01c96cae18101a2223c928a0679f" translate="yes" xml:space="preserve">
          <source>A typical prefilter registration using &lt;code&gt;$.ajaxPrefilter()&lt;/code&gt; looks like this:</source>
          <target state="translated">&lt;code&gt;$.ajaxPrefilter()&lt;/code&gt; を使用した一般的なプレフィルター登録は次のようになります。</target>
        </trans-unit>
        <trans-unit id="c47743ee075c61ac1f29b345b0976e32bc8ab623" translate="yes" xml:space="preserve">
          <source>A username to be used with XMLHttpRequest in response to an HTTP access authentication request.</source>
          <target state="translated">HTTP アクセス認証リクエストに応答して XMLHttpRequest で使用するユーザ名。</target>
        </trans-unit>
        <trans-unit id="483405e13d567b0d5b813c73748d045dd6da0abf" translate="yes" xml:space="preserve">
          <source>A value to set for the attribute. If &lt;code&gt;null&lt;/code&gt;, the specified attribute will be removed (as in &lt;a href=&quot;removeattr&quot;&gt;&lt;code&gt;.removeAttr()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">属性に設定する値。場合は &lt;code&gt;null&lt;/code&gt; を、指定した属性は、（のように削除されます&lt;a href=&quot;removeattr&quot;&gt; &lt;code&gt;.removeAttr()&lt;/code&gt; &lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d4d770b273cfa954dfbbc72d0490860f20784c4c" translate="yes" xml:space="preserve">
          <source>A value to set for the property.</source>
          <target state="translated">プロパティに設定する値。</target>
        </trans-unit>
        <trans-unit id="04e5c4d27b7c2943275c6946eb76bed079e7a8dd" translate="yes" xml:space="preserve">
          <source>A zero-based integer indicating which element to retrieve.</source>
          <target state="translated">どの要素を取得するかを示すゼロベースの整数。</target>
        </trans-unit>
        <trans-unit id="bf808762a54b11b8753bc2e59e4e91378d2ba7be" translate="yes" xml:space="preserve">
          <source>Access the offset of the second paragraph:</source>
          <target state="translated">第2段落のオフセットにアクセスします。</target>
        </trans-unit>
        <trans-unit id="b7ae0aa64d3f0cef72314e6b3b5bf62d2351847b" translate="yes" xml:space="preserve">
          <source>Access the position of the second paragraph:</source>
          <target state="translated">第二段落の位置にアクセスします。</target>
        </trans-unit>
        <trans-unit id="b597abdf8fb4aacd833519bc6a94cc043505d460" translate="yes" xml:space="preserve">
          <source>According to the &lt;a href=&quot;https://www.w3.org/TR/html401/interact/forms.html#h-17.4&quot;&gt;W3C forms specification&lt;/a&gt;, the &lt;code&gt;checked&lt;/code&gt; attribute is a &lt;em&gt;&lt;a href=&quot;https://www.w3.org/TR/html4/intro/sgmltut.html#h-3.3.4.2&quot;&gt;boolean attribute&lt;/a&gt;&lt;/em&gt;, which means the corresponding property is &lt;strong&gt;true&lt;/strong&gt; if the attribute is present at all&amp;mdash;even if, for example, the attribute has no value or is set to empty string value or even &quot;false&quot;. This is true of all boolean attributes.</source>
          <target state="translated">よる&lt;a href=&quot;https://www.w3.org/TR/html401/interact/forms.html#h-17.4&quot;&gt;W3Cフォーム仕様&lt;/a&gt;、 &lt;code&gt;checked&lt;/code&gt; 属性は&lt;em&gt;&lt;a href=&quot;https://www.w3.org/TR/html4/intro/sgmltut.html#h-3.3.4.2&quot;&gt;ブール属性&lt;/a&gt;&lt;/em&gt;対応する特性を意味する&lt;strong&gt;真の&lt;/strong&gt;属性が存在する場合に、例えば、属性は値を持たない、あるいは空の文字列値以上に設定されている全ても「false」。これは、すべてのブール属性に当てはまります。</target>
        </trans-unit>
        <trans-unit id="e5fd1225e4e56322d02ee4a94b479764117cf1d5" translate="yes" xml:space="preserve">
          <source>Add a callback or a collection of callbacks to a callback list.</source>
          <target state="translated">コールバックまたはコールバックのコレクションをコールバックリストに追加します。</target>
        </trans-unit>
        <trans-unit id="ce773313c649231c46235da2376ce49b4450d255" translate="yes" xml:space="preserve">
          <source>Add a class to List 2, item 2 by targeting the second to last &amp;lt;li&amp;gt;</source>
          <target state="translated">最後から2番目の&amp;lt;li&amp;gt;をターゲットとして、クラスをリスト2、アイテム2に追加します。</target>
        </trans-unit>
        <trans-unit id="b45b56bcbfd9da994f717482b790c57231ce6289" translate="yes" xml:space="preserve">
          <source>Add a collection of DOM elements onto the jQuery stack.</source>
          <target state="translated">jQuery スタックに DOM 要素のコレクションを追加します。</target>
        </trans-unit>
        <trans-unit id="be9f2a33dddf764c7177d0f8d9c751204da1f253" translate="yes" xml:space="preserve">
          <source>Add and remove event handlers on the colored button.</source>
          <target state="translated">色付きボタンにイベントハンドラを追加・削除します。</target>
        </trans-unit>
        <trans-unit id="e9b78982c9def74f29c568c0f4852a564b18303c" translate="yes" xml:space="preserve">
          <source>Add handlers to be called when the Deferred object generates progress notifications.</source>
          <target state="translated">Deferredオブジェクトが進捗通知を生成する際に呼び出されるハンドラを追加しました。</target>
        </trans-unit>
        <trans-unit id="ac12c3058f7fde572e86b3098ab26500f3453496" translate="yes" xml:space="preserve">
          <source>Add handlers to be called when the Deferred object is either resolved or rejected.</source>
          <target state="translated">Deferredオブジェクトが解決されたか拒否された場合に呼び出されるハンドラを追加します。</target>
        </trans-unit>
        <trans-unit id="371bd59760fdc11b58080c83cc145b774bdcb1b1" translate="yes" xml:space="preserve">
          <source>Add handlers to be called when the Deferred object is rejected.</source>
          <target state="translated">Deferredオブジェクトが拒否されたときに呼び出されるハンドラを追加します。</target>
        </trans-unit>
        <trans-unit id="238cf537c5263bc1113573c2fd378f5cdf992bac" translate="yes" xml:space="preserve">
          <source>Add handlers to be called when the Deferred object is resolved, rejected, or still in progress.</source>
          <target state="translated">Deferredオブジェクトが解決されたとき、拒否されたとき、あるいはまだ進行中のときに呼び出されるハンドラを追加します。</target>
        </trans-unit>
        <trans-unit id="3a37202abed87db8c9af9cdf60d76d2d2f1fef19" translate="yes" xml:space="preserve">
          <source>Add handlers to be called when the Deferred object is resolved.</source>
          <target state="translated">Deferredオブジェクトが解決されたときに呼び出されるハンドラを追加します。</target>
        </trans-unit>
        <trans-unit id="30a698a98dc22cad927eebc24df0936f623f8f6d" translate="yes" xml:space="preserve">
          <source>Add or remove one or more classes from each element in the set of matched elements, depending on either the class&amp;rsquo;s presence or the value of the state argument.</source>
          <target state="translated">クラスの存在または状態引数の値に応じて、一致する要素のセットの各要素から1つ以上のクラスを追加または削除します。</target>
        </trans-unit>
        <trans-unit id="22a90b3408b0c1a626ed8540d4a2da0ab85c9ac4" translate="yes" xml:space="preserve">
          <source>Add some elements onto the jQuery stack, then pop back off again.</source>
          <target state="translated">jQueryスタックにいくつかの要素を追加してから、再びポップバックします。</target>
        </trans-unit>
        <trans-unit id="2a803ea6d681f9adedac48904077839c4a6bf8bc" translate="yes" xml:space="preserve">
          <source>Add some html to each div then immediately do further manipulations to the inserted html.</source>
          <target state="translated">各 div にいくつかの html を追加してから、すぐに挿入された html にさらに操作を加えます。</target>
        </trans-unit>
        <trans-unit id="65ce11a3b962e38e91fb7ff2b3af6ada0225b1c3" translate="yes" xml:space="preserve">
          <source>Add some html to each div.</source>
          <target state="translated">各divにhtmlを追加します。</target>
        </trans-unit>
        <trans-unit id="337b398ab3f45b14c4e5e3d18302f7c0edb27246" translate="yes" xml:space="preserve">
          <source>Add spans around each word then add a hover and italicize words with the letter &lt;strong&gt;t&lt;/strong&gt;.</source>
          <target state="translated">各単語の周囲にスパンを追加してから、吹き出しを追加し、文字&lt;strong&gt;tで&lt;/strong&gt;単語を斜体にします。</target>
        </trans-unit>
        <trans-unit id="62cfa4aadd0aba31784b73c37e549d894ccaf707" translate="yes" xml:space="preserve">
          <source>Add text to the paragraph (notice the bold tag is escaped).</source>
          <target state="translated">段落にテキストを追加します(太字タグはエスケープされていることに注意してください)。</target>
        </trans-unit>
        <trans-unit id="a34a9c785f658c2a6829abc49a23e85e4d46168b" translate="yes" xml:space="preserve">
          <source>Add the &quot;highlight&quot; class to the clicked paragraph on every third click of that paragraph, remove it every first and second click.</source>
          <target state="translated">その段落の3回目のクリックごとにクリックされた段落に「ハイライト」クラスを追加し、1回目と2回目のクリックごとに削除します。</target>
        </trans-unit>
        <trans-unit id="834c1d53246f37769f79afb3e7cab085edb7dcf3" translate="yes" xml:space="preserve">
          <source>Add the class &quot;selected&quot; to the matched elements.</source>
          <target state="translated">マッチした要素にクラス「selected」を追加します。</target>
        </trans-unit>
        <trans-unit id="98b550603e7f55e0c398e39c8de0b840abe72777" translate="yes" xml:space="preserve">
          <source>Add the class bigImg to all images with height greater than 100 upon each image load.</source>
          <target state="translated">各画像の読み込み時に、高さが100を超えるすべての画像にクラス bigImg を追加します。</target>
        </trans-unit>
        <trans-unit id="9b497d8b22a2a92c4bda16328ba9d8ecbb7ad497" translate="yes" xml:space="preserve">
          <source>Add the classes &quot;selected&quot; and &quot;highlight&quot; to the matched elements (3.3+ syntax).</source>
          <target state="translated">マッチした要素に &quot;selected &quot;と &quot;highlight &quot;のクラスを追加します(3.3+の構文)。</target>
        </trans-unit>
        <trans-unit id="562c614d5012357faeb3cd3a877dbfc767907e43" translate="yes" xml:space="preserve">
          <source>Add the classes &quot;selected&quot; and &quot;highlight&quot; to the matched elements.</source>
          <target state="translated">マッチした要素に &quot;selected &quot;と &quot;highlight &quot;のクラスを追加します。</target>
        </trans-unit>
        <trans-unit id="c6247ec805df36e5ec5645e709e8a4ef380933ac" translate="yes" xml:space="preserve">
          <source>Add the previous set of elements on the stack to the current set, optionally filtered by a selector.</source>
          <target state="translated">スタック上の要素の前のセットを現在のセットに追加します。</target>
        </trans-unit>
        <trans-unit id="c9e9cca0eb657c68636c4f45eae5d452ba76f355" translate="yes" xml:space="preserve">
          <source>Add the previous set of elements on the stack to the current set.</source>
          <target state="translated">スタック上の要素の前のセットを現在のセットに追加します。</target>
        </trans-unit>
        <trans-unit id="51607d436f9d1ef82a2aacd5421562ff9f62a243" translate="yes" xml:space="preserve">
          <source>Add two methods to the jQuery prototype (&lt;code&gt;$.fn&lt;/code&gt;) object and then use one of them.</source>
          <target state="translated">2つのメソッドをjQueryプロトタイプ（ &lt;code&gt;$.fn&lt;/code&gt; ）オブジェクトに追加し、そのうちの1つを使用します。</target>
        </trans-unit>
        <trans-unit id="3b85afd11c83038ed13b02a8d65cd24318c81428" translate="yes" xml:space="preserve">
          <source>Added to jQuery in version 1.4, the &lt;code&gt;.delay()&lt;/code&gt; method allows us to delay the execution of functions that follow it in the queue. It can be used with the standard effects queue or with a custom queue. Only subsequent events in a queue are delayed; for example this will &lt;em&gt;not&lt;/em&gt; delay the no-arguments forms of &lt;code&gt;.show()&lt;/code&gt; or &lt;code&gt;.hide()&lt;/code&gt; which do not use the effects queue.</source>
          <target state="translated">バージョン1.4のjQueryに追加された &lt;code&gt;.delay()&lt;/code&gt; メソッドを使用すると、キュー内でそれに続く関数の実行を遅らせることができます。標準のエフェクトキューまたはカスタムキューで使用できます。キュー内の後続のイベントのみが遅延されます。例えばこれはなり&lt;em&gt;ません&lt;/em&gt;無引数のフォーム遅延 &lt;code&gt;.show()&lt;/code&gt; または &lt;code&gt;.hide()&lt;/code&gt; エフェクトキューを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="ba795a00df86c5677bfb5d2e0dd71eedaf9a7c80" translate="yes" xml:space="preserve">
          <source>Adding a method to a jQuery sub so that it isn't exposed externally:</source>
          <target state="translated">jQueryのサブにメソッドを追加して、外部に公開しないようにします。</target>
        </trans-unit>
        <trans-unit id="68a736860550b72f606074f70cdcdccec572150e" translate="yes" xml:space="preserve">
          <source>Additional Arguments</source>
          <target state="translated">追加の引数</target>
        </trans-unit>
        <trans-unit id="a6886107051f6296b301c835737605aa7c616a6a" translate="yes" xml:space="preserve">
          <source>Additional Notes</source>
          <target state="translated">その他の注意事項</target>
        </trans-unit>
        <trans-unit id="da83617584d2bcf3ead915c16910c45109bbc8de" translate="yes" xml:space="preserve">
          <source>Additional Notes:</source>
          <target state="translated">追加の注意事項。</target>
        </trans-unit>
        <trans-unit id="211b632f6521bd2b0bebe085843569e0df097c22" translate="yes" xml:space="preserve">
          <source>Additional handlers to cycle through after clicks.</source>
          <target state="translated">クリック後に循環させるための追加のハンドラ。</target>
        </trans-unit>
        <trans-unit id="41b5f2e6aebc43182a4eee3c33dbf7e657d4ea1a" translate="yes" xml:space="preserve">
          <source>Additional notes</source>
          <target state="translated">追加の注意事項</target>
        </trans-unit>
        <trans-unit id="f71fd57cfa3c24a647af30c996ef3e0480679e21" translate="yes" xml:space="preserve">
          <source>Additional objects containing properties to merge in.</source>
          <target state="translated">マージするプロパティを含む追加のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="90398f70fdfa499a7e41f2b2f92a010364f466cb" translate="yes" xml:space="preserve">
          <source>Additional parameters to pass along to the event handler.</source>
          <target state="translated">イベントハンドラに渡す追加のパラメータ。</target>
        </trans-unit>
        <trans-unit id="52b64ad863218cb1bfbbb58f4ba3c71e95800cb1" translate="yes" xml:space="preserve">
          <source>Adds a background and text color to all the headers on the page.</source>
          <target state="translated">ページ上のすべてのヘッダーに背景とテキストの色を追加します。</target>
        </trans-unit>
        <trans-unit id="bb2ee4ca3026806da90f77e4ef2bb858eeb32d01" translate="yes" xml:space="preserve">
          <source>Adds a border to divs that are not green or blue.</source>
          <target state="translated">緑でも青でもない div に境界線を追加します。</target>
        </trans-unit>
        <trans-unit id="82bf9ba53e5c702c6e04c9321444143667249540" translate="yes" xml:space="preserve">
          <source>Adds more elements, created on the fly, to the set of matched elements.</source>
          <target state="translated">一致した要素のセットに、その場で作成された要素を追加します。</target>
        </trans-unit>
        <trans-unit id="8373586919555793f2266124c7b3fde712e12823" translate="yes" xml:space="preserve">
          <source>Adds more elements, matched by the given expression, to the set of matched elements.</source>
          <target state="translated">指定された式でマッチした要素を、マッチした要素のセットに追加します。</target>
        </trans-unit>
        <trans-unit id="ed273fd6111a4203a9493a3fba12654b3f9d1077" translate="yes" xml:space="preserve">
          <source>Adds one or more Elements to the set of matched elements.</source>
          <target state="translated">一致した要素のセットに1つ以上の要素を追加します。</target>
        </trans-unit>
        <trans-unit id="326c34ea8dd6625ee9ed7c59408b20fddca6f9d9" translate="yes" xml:space="preserve">
          <source>Adds the class &quot;test&quot; to all divs that have a paragraph inside of them.</source>
          <target state="translated">段落を含むすべての div に &quot;test&quot; クラスを追加します。</target>
        </trans-unit>
        <trans-unit id="f94d96f04532a0477ab76d7f3a5599d5789a18d4" translate="yes" xml:space="preserve">
          <source>Adds the focused class to whatever element has focus</source>
          <target state="translated">focus を持つ要素にフォーカスクラスを追加します。</target>
        </trans-unit>
        <trans-unit id="b80d265ec353e5153c52d99791b35cdedefb4008" translate="yes" xml:space="preserve">
          <source>Adds the specified class(es) to each element in the set of matched elements.</source>
          <target state="translated">一致した要素のセット内の各要素に、指定されたクラスを追加します。</target>
        </trans-unit>
        <trans-unit id="97ac6614ad14f6416b45b25e3d11e9ca8ac85b37" translate="yes" xml:space="preserve">
          <source>Adjust the opacity of the matched elements.</source>
          <target state="translated">マッチした要素の不透明度を調整します。</target>
        </trans-unit>
        <trans-unit id="a73a2ceee060f3a2057665bc437069f75cae0606" translate="yes" xml:space="preserve">
          <source>Advanced Options</source>
          <target state="translated">高度なオプション</target>
        </trans-unit>
        <trans-unit id="a2d5617de761f769e4aa7bd1ae8646b790bf2c6d" translate="yes" xml:space="preserve">
          <source>After the code is executed, a click on the element with ID &lt;code&gt;foo&lt;/code&gt; will display the alert. Subsequent clicks will do nothing. This code is equivalent to:</source>
          <target state="translated">コードが実行された後、ID &lt;code&gt;foo&lt;/code&gt; の要素をクリックするとアラートが表示されます。以降のクリックは何もしません。このコードは次と同等です。</target>
        </trans-unit>
        <trans-unit id="de162ec04b37592d591dd7a093b0cd510fe9b03b" translate="yes" xml:space="preserve">
          <source>After this code executes, (single) clicks on</source>
          <target state="translated">このコードが実行された後、(シングルで)</target>
        </trans-unit>
        <trans-unit id="38b51d6d79b99318d20f270b7ced98abd8f71dcc" translate="yes" xml:space="preserve">
          <source>After this code executes, clicking on</source>
          <target state="translated">このコードが実行された後</target>
        </trans-unit>
        <trans-unit id="975fc1a2b84a0a9e0015dbbfc66021999fe5cd6c" translate="yes" xml:space="preserve">
          <source>After this code executes, clicks on</source>
          <target state="translated">このコードが実行されたら</target>
        </trans-unit>
        <trans-unit id="48dc05219308f86a170992a2daf1ae686f7eb60f" translate="yes" xml:space="preserve">
          <source>After this code executes, clicks on the</source>
          <target state="translated">このコードが実行されたら</target>
        </trans-unit>
        <trans-unit id="f22f4f1afcbe8173708126919fd22a1724a44386" translate="yes" xml:space="preserve">
          <source>After this code executes, clicks on the Trigger button will also alert the message:</source>
          <target state="translated">このコードが実行された後、トリガーボタンをクリックすると、メッセージもアラートされます。</target>
        </trans-unit>
        <trans-unit id="4fc0d721b8bef3a9473b657fa8646fcea23d970a" translate="yes" xml:space="preserve">
          <source>After this code executes, clicks on the Trigger button will also append the message:</source>
          <target state="translated">このコードが実行された後、トリガーボタンをクリックするとメッセージが追加されます。</target>
        </trans-unit>
        <trans-unit id="d09d81fbce595cc2821e9d9d3018c3593a7a1102" translate="yes" xml:space="preserve">
          <source>After this code is executed, when the user clicks inside the element with an ID of &lt;code&gt;foo&lt;/code&gt;, its text contents will be shown as an alert.</source>
          <target state="translated">このコードが実行された後、ユーザーがIDが &lt;code&gt;foo&lt;/code&gt; の要素内をクリックすると、そのテキストの内容がアラートとして表示されます。</target>
        </trans-unit>
        <trans-unit id="772dc590f4260b29af96b3a654d8879adde657d9" translate="yes" xml:space="preserve">
          <source>Again, we get back the zero-based position of the list item:</source>
          <target state="translated">ここでも、リスト項目のゼロベースの位置を取得します。</target>
        </trans-unit>
        <trans-unit id="e96e133edf2417f71af2cbe9a8e32a29e82791b8" translate="yes" xml:space="preserve">
          <source>Ajax</source>
          <target state="translated">Ajax</target>
        </trans-unit>
        <trans-unit id="1997c6e8193ca98d41b1597d9953afee5b72d803" translate="yes" xml:space="preserve">
          <source>Ajax Events</source>
          <target state="translated">Ajaxのイベント</target>
        </trans-unit>
        <trans-unit id="4418f6cc1db2c41fbd687b9820ef6b4cdf66fcc5" translate="yes" xml:space="preserve">
          <source>Ajax requests are time-limited, so errors can be caught and handled to provide a better user experience. Request timeouts are usually either left at their default or set as a global default using &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; rather than being overridden for specific requests with the &lt;code&gt;timeout&lt;/code&gt; option.</source>
          <target state="translated">Ajaxリクエストには時間制限があるため、エラーをキャッチして処理し、ユーザーエクスペリエンスを向上させることができます。リクエストのタイムアウトは通常、デフォルトのままにするか、 &lt;code&gt;timeout&lt;/code&gt; オプションで特定のリクエストを上書きするのではなく、 &lt;code&gt;&lt;a href=&quot;jquery.ajaxsetup&quot;&gt;$.ajaxSetup()&lt;/a&gt;&lt;/code&gt; を使用してグローバルデフォルトとして設定します。</target>
        </trans-unit>
        <trans-unit id="7151308eac5153959a33eeb655a6b12462c3a3f4" translate="yes" xml:space="preserve">
          <source>Ajax requests produce a number of different events that you can subscribe to. Here's a full list of the events and in what order they are triggered.</source>
          <target state="translated">Ajax リクエストは、購読できるさまざまなイベントを生成します。以下にイベントの完全なリストと、それらがどのような順番でトリガーされるかを示します。</target>
        </trans-unit>
        <trans-unit id="c10abf5ce6094230a1ac53038ea83f3f48c39925" translate="yes" xml:space="preserve">
          <source>Alert &quot;this is WebKit!&quot; only for WebKit browsers. &lt;strong&gt;Will not work in jQuery 1.9 or later&lt;/strong&gt; unless the &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt; plugin is included.</source>
          <target state="translated">「これはWebKitです！」という警告 WebKitブラウザーのみ。&lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt;プラグインが含まれていない場合、jQuery &lt;strong&gt;1.9以降では機能しません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="c34180e79917710f520092edffd7d68640e617c2" translate="yes" xml:space="preserve">
          <source>Alert that currentTarget matches the `this` keyword.</source>
          <target state="translated">currentTarget が `this` キーワードにマッチすることを警告します。</target>
        </trans-unit>
        <trans-unit id="f86faf970df8a349c00d79c2bbf4652fdc44a338" translate="yes" xml:space="preserve">
          <source>Alert the results from requesting test.cgi with an additional payload of data (HTML or XML, depending on what was returned).</source>
          <target state="translated">test.cgiへのリクエストの結果を、データの追加ペイロード(HTMLまたはXML、返されたデータに応じて)で警告します。</target>
        </trans-unit>
        <trans-unit id="7e474ded5020ff001cde4e071c64159b9fae76d1" translate="yes" xml:space="preserve">
          <source>Alert the results from requesting test.php (HTML or XML, depending on what was returned).</source>
          <target state="translated">test.phpをリクエストした結果を警告する (返された内容に応じてHTMLまたはXML)</target>
        </trans-unit>
        <trans-unit id="f17bca347565dad724a58abb89a7acd04b6b5528" translate="yes" xml:space="preserve">
          <source>Alert the results from requesting test.php with an additional payload of data (HTML or XML, depending on what was returned).</source>
          <target state="translated">test.php をリクエストした結果に、データの追加ペイロード (返されたデータに応じて HTML または XML)を追加して警告します。</target>
        </trans-unit>
        <trans-unit id="ae3009efe067f749a5b87428871e2cfa42e17c7c" translate="yes" xml:space="preserve">
          <source>Alert the version of IE's rendering engine that is being used. &lt;strong&gt;Will not work in jQuery 1.9 or later&lt;/strong&gt; unless the &lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt; plugin is included.</source>
          <target state="translated">使用されているIEのレンダリングエンジンのバージョンに警告します。&lt;a href=&quot;https://github.com/jquery/jquery-migrate/#readme&quot;&gt;jQuery Migrate&lt;/a&gt;プラグインが含まれていない場合、jQuery &lt;strong&gt;1.9以降では機能しません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="4ad0101fc1496516b29cda27f2e907fd10c2ec4c" translate="yes" xml:space="preserve">
          <source>Aliasing the jQuery Object</source>
          <target state="translated">jQueryオブジェクトのエイリアス</target>
        </trans-unit>
        <trans-unit id="7eaf9e25fb40e98af7144dbbd63aafb9a3ff08f6" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ajaxComplete&lt;/code&gt; handlers are invoked, regardless of what Ajax request was completed. If you must differentiate between the requests, use the parameters passed to the handler. Each time an &lt;code&gt;ajaxComplete&lt;/code&gt; handler is executed, it is passed the event object, the &lt;code&gt;XMLHttpRequest&lt;/code&gt; object, and the settings object that was used in the creation of the request. For example, you can restrict the callback to only handling events dealing with a particular URL:</source>
          <target state="translated">どのAjaxリクエストが完了したかに関係なく、すべての &lt;code&gt;ajaxComplete&lt;/code&gt; ハンドラーが呼び出されます。リクエストを区別する必要がある場合は、ハンドラーに渡されるパラメーターを使用します。たび &lt;code&gt;ajaxComplete&lt;/code&gt; のハンドラが実行されたが、それはイベントオブジェクト、渡された &lt;code&gt;XMLHttpRequest&lt;/code&gt; オブジェクト、および要求の作成に使用された設定オブジェクトを。たとえば、特定のURLを処理するイベントのみを処理するようにコールバックを制限できます。</target>
        </trans-unit>
        <trans-unit id="f40c611312abde09d2943f8b06b2b416af640f25" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ajaxError&lt;/code&gt; handlers are invoked, regardless of what Ajax request was completed. To differentiate between the requests, use the parameters passed to the handler. Each time an &lt;code&gt;ajaxError&lt;/code&gt; handler is executed, it is passed the event object, the &lt;code&gt;jqXHR&lt;/code&gt; object (prior to jQuery 1.5, the &lt;code&gt;&lt;abbr&gt;XHR&lt;/abbr&gt;&lt;/code&gt; object), and the settings object that was used in the creation of the request. When an HTTP error occurs, the fourth argument (&lt;code&gt;thrownError&lt;/code&gt;) receives the textual portion of the HTTP status, such as &quot;Not Found&quot; or &quot;Internal Server Error.&quot; For example, to restrict the error callback to only handling events dealing with a particular URL:</source>
          <target state="translated">どのAjaxリクエストが完了したかに関係なく、すべての &lt;code&gt;ajaxError&lt;/code&gt; ハンドラーが呼び出されます。リクエストを区別するには、ハンドラーに渡されるパラメーターを使用します。各時間 &lt;code&gt;ajaxError&lt;/code&gt; のハンドラが実行され、それはイベントオブジェクト、渡され &lt;code&gt;jqXHR&lt;/code&gt; の（jQueryの1.5、前にオブジェクト &lt;code&gt;&lt;abbr&gt;XHR&lt;/abbr&gt;&lt;/code&gt; のオブジェクト）、およびリクエストの作成に使用した設定オブジェクト。 HTTPエラーが発生すると、4番目の引数（ &lt;code&gt;thrownError&lt;/code&gt; ）は、「見つかりません」や「内部サーバーエラー」などのHTTPステータスのテキスト部分を受け取ります。たとえば、エラーコールバックを特定のURLを処理するイベントのみを処理するように制限するには：</target>
        </trans-unit>
        <trans-unit id="3ed336321a178d1c401229ebf5926dee8f37916c" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ajaxSend&lt;/code&gt; handlers are invoked, regardless of what Ajax request is to be sent. If you must differentiate between the requests, use the parameters passed to the handler. Each time an &lt;code&gt;ajaxSend&lt;/code&gt; handler is executed, it is passed the event object, the &lt;code&gt;jqXHR&lt;/code&gt; object (in version 1.4, &lt;code&gt;XMLHttpRequest&lt;/code&gt;object), and the &lt;a href=&quot;jquery.ajax&quot;&gt;settings object&lt;/a&gt; that was used in the creation of the Ajax request. For example, you can restrict the callback to only handling events dealing with a particular URL:</source>
          <target state="translated">送信するAjax要求に関係なく、すべての &lt;code&gt;ajaxSend&lt;/code&gt; ハンドラーが呼び出されます。リクエストを区別する必要がある場合は、ハンドラーに渡されるパラメーターを使用します。たび &lt;code&gt;ajaxSend&lt;/code&gt; のハンドラが実行されたが、それはイベントオブジェクト、渡され &lt;code&gt;jqXHR&lt;/code&gt; の（バージョン1.4で、オブジェクト &lt;code&gt;XMLHttpRequest&lt;/code&gt; オブジェクト）、および&lt;a href=&quot;jquery.ajax&quot;&gt;設定オブジェクト&lt;/a&gt; Ajaxリクエストの作成に使用しました。たとえば、特定のURLを処理するイベントのみを処理するようにコールバックを制限できます。</target>
        </trans-unit>
        <trans-unit id="ac765bf4016ee6703c1756ef57f826b90a35ea2f" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;ajaxSuccess&lt;/code&gt; handlers are invoked, regardless of what Ajax request was completed. If you must differentiate between the requests, you can use the parameters passed to the handler. Each time an &lt;code&gt;ajaxSuccess&lt;/code&gt; handler is executed, it is passed the event object, the &lt;code&gt;XMLHttpRequest&lt;/code&gt; object, and the settings object that was used in the creation of the request. For example, you can restrict the callback to only handling events dealing with a particular URL:</source>
          <target state="translated">どのAjaxリクエストが完了したかに関係なく、すべての &lt;code&gt;ajaxSuccess&lt;/code&gt; ハンドラーが呼び出されます。リクエストを区別する必要がある場合は、ハンドラーに渡されるパラメーターを使用できます。たび &lt;code&gt;ajaxSuccess&lt;/code&gt; のハンドラが実行されたが、それはイベントオブジェクト、渡された &lt;code&gt;XMLHttpRequest&lt;/code&gt; オブジェクト、および要求の作成に使用された設定オブジェクトを。たとえば、特定のURLを処理するイベントのみを処理するようにコールバックを制限できます。</target>
        </trans-unit>
        <trans-unit id="760631802d5b265c7dff1f01b0d497d2c7690fff" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;option&lt;/code&gt; elements are considered hidden, regardless of their &lt;code&gt;selected&lt;/code&gt; state.</source>
          <target state="translated">&lt;code&gt;selected&lt;/code&gt; 状態に関係なく、すべての &lt;code&gt;option&lt;/code&gt; 要素は非表示と見なされます。</target>
        </trans-unit>
        <trans-unit id="6a8728475bda933607a291a1ebdcd5fd0f9ef2b7" translate="yes" xml:space="preserve">
          <source>All Selector (&amp;ldquo;*&amp;rdquo;)</source>
          <target state="translated">すべてのセレクタ（「*」）</target>
        </trans-unit>
        <trans-unit id="78d17f9bfb79fba667f26b912ffa4005ac59e5d3" translate="yes" xml:space="preserve">
          <source>All animated properties should be animated to a &lt;em&gt;single numeric value&lt;/em&gt;, except as noted below; most properties that are non-numeric cannot be animated using basic jQuery functionality (For example, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, or &lt;code&gt;left&lt;/code&gt; can be animated but &lt;code&gt;background-color&lt;/code&gt; cannot be, unless the &lt;a href=&quot;https://github.com/jquery/jquery-color&quot;&gt;jQuery.Color&lt;/a&gt; plugin is used). Property values are treated as a number of pixels unless otherwise specified. The units &lt;code&gt;em&lt;/code&gt; and &lt;code&gt;%&lt;/code&gt; can be specified where applicable.</source>
          <target state="translated">以下に記載されている&lt;em&gt;場合&lt;/em&gt;を除き、すべてのアニメーションプロパティは&lt;em&gt;単一の数値に&lt;/em&gt;アニメーション化する必要があります。数値以外のほとんどのプロパティは、基本的なjQuery機能を使用してアニメーション化できません（たとえば、 &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;height&lt;/code&gt; 、または &lt;code&gt;left&lt;/code&gt; はアニメーション化できますが、&lt;a href=&quot;https://github.com/jquery/jquery-color&quot;&gt;jQuery.Color&lt;/a&gt;プラグインを使用しない限り、 &lt;code&gt;background-color&lt;/code&gt; はアニメーション化できません）。プロパティ値は、特に指定のない限り、ピクセル数として扱われます。単位 &lt;code&gt;em&lt;/code&gt; および &lt;code&gt;%&lt;/code&gt; は、必要に応じて指定できます。</target>
        </trans-unit>
        <trans-unit id="8647c6b02dad91a501957cad2d142c4b2d209c74" translate="yes" xml:space="preserve">
          <source>All event handlers in jQuery are called with the handling element as the context.</source>
          <target state="translated">jQueryのすべてのイベントハンドラは、handling要素をコンテキストとして呼び出します。</target>
        </trans-unit>
        <trans-unit id="ad25327557d731ab78e7da76c1b3b23fe160594f" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.animate()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.animate()&lt;/code&gt; を含むすべてのjQuery効果は、 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e8fe57c77f5000c2059cf2941ffde511d272a576" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.fadeIn()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.fadeIn()&lt;/code&gt; を含むすべてのjQuery効果は、 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f4e60fdc031aee295d0006bfdfaad087fc178a90" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.fadeOut()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.fadeOut()&lt;/code&gt; を含むすべてのjQuery効果は、 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="e8f6d6934f05e3eac2ac070786cc1341f211f773" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.fadeTo()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.fadeTo()&lt;/code&gt; を含むすべてのjQuery効果は、 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="cb602a09d3198a5d3efbf84e26795d114ea64475" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.fadeToggle()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.fadeToggle()&lt;/code&gt; を含むすべてのjQuery効果は、 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4b6aa8c0d770adfa65b735d23e020ed58435b194" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.hide()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.hide()&lt;/code&gt; を含むすべてのjQuery効果は、 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9b48790b65be13af9e47d57a0a844eff622c2615" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.show()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.show()&lt;/code&gt; を含むすべてのjQuery効果は、 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="105783e1780356ae4c7f712e399bab7a0a0ca525" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.slideDown()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.slideDown()&lt;/code&gt; を含むすべてのjQuery効果は、 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="b5f3fe862e7b273a2327fe15ac947e22faaf5c8d" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.slideToggle()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.slideToggle()&lt;/code&gt; を含むすべてのjQuery効果は、 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="f628c06825afec107849a5a09daecb611b2da9bc" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.slideUp()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.slideUp()&lt;/code&gt; を含むすべてのjQuery効果は、 &lt;code&gt;jQuery.fx.off = true&lt;/code&gt; 設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="29cb5dec492c815817ea58557ff86d1a006d995a" translate="yes" xml:space="preserve">
          <source>All jQuery effects, including &lt;code&gt;.toggle()&lt;/code&gt;, can be turned off globally by setting &lt;code&gt;jQuery.fx.off = true&lt;/code&gt;, which effectively sets the duration to 0. For more information, see &lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.off&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;jQuery.fx.off = true&lt;/code&gt; &lt;code&gt;.toggle()&lt;/code&gt; を含むすべてのjQuery効果は、jQuery.fx.off = trueを設定することでグローバルにオフにできます。これにより、継続時間が0に効果的に設定されます。詳細については、&lt;a href=&quot;jquery.fx.off&quot;&gt;jQuery.fx.offを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="287aa18aba4ffc98a24250125c5079aaa392fbda" translate="yes" xml:space="preserve">
          <source>All objects have a prototype property. Whenever the interpreter looks for a property, it also checks in the object's prototype if the property is not found on the object itself. jQuery uses the prototype extensively to add methods to jQuery instances. Internally, jQuery makes &lt;code&gt;jQuery.fn&lt;/code&gt; an alias of &lt;code&gt;jQuery.prototype&lt;/code&gt; so you can use either one (though plugin developers have standardized on &lt;code&gt;fn&lt;/code&gt;).</source>
          <target state="translated">すべてのオブジェクトには、プロトタイププロパティがあります。インタプリタは、プロパティを探すときはいつでも、オブジェクト自体にプロパティが見つからないかどうか、オブジェクトのプロトタイプをチェックします。 jQueryはプロトタイプを広範囲に使用して、jQueryインスタンスにメソッドを追加します。内部的には、jQueryのは、作る &lt;code&gt;jQuery.fn&lt;/code&gt; にのエイリアス &lt;code&gt;jQuery.prototype&lt;/code&gt; をあなたが（プラグイン開発者が上の標準化されているもののいずれかを使用できるように &lt;code&gt;fn&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="6667426623e3c68f8d6d1d9874ffec96684134b6" translate="yes" xml:space="preserve">
          <source>All of the following jQuery code will work.</source>
          <target state="translated">以下のjQueryコードはすべて動作します。</target>
        </trans-unit>
        <trans-unit id="2da415ba3d670a3cf463e0ed5df724709d567db6" translate="yes" xml:space="preserve">
          <source>All of the matched DOM nodes are returned by this call, contained in a standard array:</source>
          <target state="translated">一致したすべての DOM ノードがこの呼び出しによって返され、標準配列に含まれています。</target>
        </trans-unit>
        <trans-unit id="a6b4f3bf6fb68b960039db71d486e3f9ed0678c2" translate="yes" xml:space="preserve">
          <source>All of the methods in this section manipulate the DOM in some manner. A few of them simply change one of the attributes of an element (also listed in the &lt;a href=&quot;attributes&quot;&gt;Attributes category&lt;/a&gt;), while others set an element's style properties (also listed in the &lt;a href=&quot;css&quot;&gt;CSS category&lt;/a&gt;). Still others modify entire elements (or groups of elements) themselves&amp;mdash;inserting, copying, removing, and so on. All of these methods are referred to as &quot;setters,&quot; as they change the values of properties.</source>
          <target state="translated">このセクションのすべてのメソッドは、何らかの方法でDOMを操作します。それらのいくつかは単に要素の属性の1つを変更するだけで（&lt;a href=&quot;attributes&quot;&gt;属性カテゴリに&lt;/a&gt;も一覧表示されます）、他の要素は要素のスタイルプロパティを設定します（&lt;a href=&quot;css&quot;&gt;CSSカテゴリに&lt;/a&gt;も一覧表示されます）。さらに、要素全体（または要素のグループ）自体を変更（挿入、コピー、削除など）するものもあります。これらのメソッドはすべて、プロパティの値を変更するため、「セッター」と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="e6c95967beed3d4359c2b9faafbd7d52cba20111" translate="yes" xml:space="preserve">
          <source>All selector (&amp;quot;*&amp;quot;)</source>
          <target state="translated">すべてのセレクター（ &quot;*&quot;）</target>
        </trans-unit>
        <trans-unit id="6bb0e22a27a7cedd9aaebd3c2389cfcb18bb2211" translate="yes" xml:space="preserve">
          <source>All selectors are accepted inside &lt;code&gt;:not()&lt;/code&gt;, for example: &lt;code&gt;:not(div a)&lt;/code&gt; and &lt;code&gt;:not(div,a)&lt;/code&gt;.</source>
          <target state="translated">すべてのセレクターは、 &lt;code&gt;:not()&lt;/code&gt; 内で受け入れられます（例 &lt;code&gt;:not(div a)&lt;/code&gt; および &lt;code&gt;:not(div,a)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81c8af7bd623fc0837e9261cd24e4558aee91a90" translate="yes" xml:space="preserve">
          <source>All strings have a length property.</source>
          <target state="translated">すべての文字列には length プロパティがあります。</target>
        </trans-unit>
        <trans-unit id="283cd48c97fa361d5fab5a9492a8d605c83ee9ae" translate="yes" xml:space="preserve">
          <source>All subsequent Ajax calls using any function will use the new settings, unless overridden by the individual calls, until the next invocation of &lt;code&gt;$.ajaxSetup()&lt;/code&gt;.</source>
          <target state="translated">任意の関数を使用する後続のすべてのAjax呼び出しは、個々の呼び出しによってオーバーライドされない限り、次の &lt;code&gt;$.ajaxSetup()&lt;/code&gt; 呼び出しまで、新しい設定を使用します。</target>
        </trans-unit>
        <trans-unit id="cb381b30d3148c2a47b170f0b32e4bbb5ad0b8c6" translate="yes" xml:space="preserve">
          <source>Allow the current environment to be recognized as &quot;local,&quot; (e.g. the filesystem), even if jQuery does not recognize it as such by default. The following protocols are currently recognized as local: &lt;code&gt;file&lt;/code&gt;, &lt;code&gt;*-extension&lt;/code&gt;, and &lt;code&gt;widget&lt;/code&gt;. If the &lt;code&gt;isLocal&lt;/code&gt; setting needs modification, it is recommended to do so once in the &lt;code&gt;$.ajaxSetup()&lt;/code&gt; method. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.5.1/&quot;&gt;1.5.1&lt;/a&gt;)</source>
          <target state="translated">jQueryがデフォルトで認識していない場合でも、現在の環境が「ローカル」（ファイルシステムなど）として認識されるようにします。現在、ローカルとして認識されているプロトコルは、 &lt;code&gt;file&lt;/code&gt; 、 &lt;code&gt;*-extension&lt;/code&gt; 、および &lt;code&gt;widget&lt;/code&gt; です。 &lt;code&gt;isLocal&lt;/code&gt; 設定を変更する必要がある場合は、 &lt;code&gt;$.ajaxSetup()&lt;/code&gt; メソッドで一度変更することをお勧めします。（追加されたバージョン：&lt;a href=&quot;https://api.jquery.com/category/version/1.5.1/&quot;&gt;1.5.1&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="5d695adedf50969dffe6a3a9571817cffc116132" translate="yes" xml:space="preserve">
          <source>Allow the request to be successful only if the response has changed since the last request. This is done by checking the Last-Modified header. Default value is &lt;code&gt;false&lt;/code&gt;, ignoring the header. In jQuery 1.4 this technique also checks the 'etag' specified by the server to catch unmodified data.</source>
          <target state="translated">最後の要求以降に応答が変更された場合にのみ、要求の成功を許可します。これは、Last-Modifiedヘッダーをチェックすることによって行われます。デフォルト値は &lt;code&gt;false&lt;/code&gt; で、ヘッダーは無視されます。jQuery 1.4では、この手法はサーバーによって指定された「etag」もチェックして、変更されていないデータをキャッチします。</target>
        </trans-unit>
        <trans-unit id="8d1d3f1e511534dcb1aeb19ce968a6710d15e68a" translate="yes" xml:space="preserve">
          <source>Also, jQuery can equally interpret the CSS and DOM formatting of multiple-word properties. For example, jQuery understands and returns the correct value for both &lt;code&gt;.css( &quot;background-color&quot; )&lt;/code&gt; and &lt;code&gt;.css( &quot;backgroundColor&quot; )&lt;/code&gt;. This means mixed case has a special meaning, &lt;code&gt;.css( &quot;WiDtH&quot; )&lt;/code&gt; won't do the same as &lt;code&gt;.css( &quot;width&quot; )&lt;/code&gt;, for example.</source>
          <target state="translated">また、jQueryは、複数の単語のプロパティのCSSおよびDOM形式を同等に解釈できます。たとえば、jQueryは &lt;code&gt;.css( &quot;background-color&quot; )&lt;/code&gt; と &lt;code&gt;.css( &quot;backgroundColor&quot; )&lt;/code&gt; 両方の正しい値を理解して返します。この手段混在する場合には、特別な意味を持っている、 &lt;code&gt;.css( &quot;WiDtH&quot; )&lt;/code&gt; と同じことをしないだろう &lt;code&gt;.css( &quot;width&quot; )&lt;/code&gt; 例えば、。</target>
        </trans-unit>
        <trans-unit id="d67b0c23698c2f9e897edbb1f6880128a530c89f" translate="yes" xml:space="preserve">
          <source>Also, jQuery can equally interpret the CSS and DOM formatting of multiple-word properties. For example, jQuery understands and returns the correct value for both &lt;code&gt;.css({ &quot;background-color&quot;: &quot;#ffe&quot;, &quot;border-left&quot;: &quot;5px solid #ccc&quot; })&lt;/code&gt; and &lt;code&gt;.css({backgroundColor: &quot;#ffe&quot;, borderLeft: &quot;5px solid #ccc&quot; })&lt;/code&gt;. Notice that with the DOM notation, quotation marks around the property names are optional, but with CSS notation they're required due to the hyphen in the name.</source>
          <target state="translated">また、jQueryは、複数の単語のプロパティのCSSおよびDOM形式を同等に解釈できます。たとえば、jQueryは &lt;code&gt;.css({ &quot;background-color&quot;: &quot;#ffe&quot;, &quot;border-left&quot;: &quot;5px solid #ccc&quot; })&lt;/code&gt; と &lt;code&gt;.css({backgroundColor: &quot;#ffe&quot;, borderLeft: &quot;5px solid #ccc&quot; })&lt;/code&gt; 。DOM表記では、プロパティ名を囲む引用符はオプションですが、CSS表記では、名前にハイフンがあるため必須です。</target>
        </trans-unit>
        <trans-unit id="de1564f9eba7b2cff5e05337544ac039c4f1e7d0" translate="yes" xml:space="preserve">
          <source>Alternative way to pass data through an event object:</source>
          <target state="translated">イベントオブジェクトにデータを渡す別の方法。</target>
        </trans-unit>
        <trans-unit id="9733efd7d82ebf41277dc79e0322e17b4a7145be" translate="yes" xml:space="preserve">
          <source>Alternatively, you could define a new method that uses the more flexible &lt;code&gt;$.ajax()&lt;/code&gt; method.</source>
          <target state="translated">または、より柔軟な &lt;code&gt;$.ajax()&lt;/code&gt; メソッドを使用する新しいメソッドを定義することもできます。</target>
        </trans-unit>
        <trans-unit id="a51558f8b5e860de61cb60a813f01f6aca4ddb1a" translate="yes" xml:space="preserve">
          <source>Although the XHR object is a standard, there are variations in its behavior on different browsers. Refer to the WHATWG site and Mozilla Developer Network for more information:</source>
          <target state="translated">XHR オブジェクトは標準ですが、ブラウザによって動作にばらつきがあります。詳細は WHATWG のサイトや Mozilla Developer Network を参照してください。</target>
        </trans-unit>
        <trans-unit id="1065641ea0d7d77abdf206bc0e7a90026f8e3a18" translate="yes" xml:space="preserve">
          <source>Although the new paragraph has been created and its background color changed, it still does not appear on the page. To place it on the page, we could add one of the insertion methods to the chain.</source>
          <target state="translated">新しい段落が作成され、背景色が変更されましたが、ページにはまだ表示されません。ページ上に配置するには、挿入方法のいずれかをチェインに追加します。</target>
        </trans-unit>
        <trans-unit id="8fff222df1aaf071c62cd8af31c31f5a7ac004b8" translate="yes" xml:space="preserve">
          <source>Although their resulting selections are usually the same, &lt;code&gt;:enabled&lt;/code&gt; selector is subtly different from &lt;code&gt;:not([disabled])&lt;/code&gt;; &lt;code&gt;:enabled&lt;/code&gt; selects elements that have their boolean disabled property strictly equal to false, while &lt;code&gt;:not([disabled])&lt;/code&gt; selects elements that do not have a disabled &lt;em&gt;attribute&lt;/em&gt; set (regardless of its value).</source>
          <target state="translated">結果の選択は通常同じですが、 &lt;code&gt;:enabled&lt;/code&gt; セレクターは &lt;code&gt;:not([disabled])&lt;/code&gt; と微妙に異なります。 &lt;code&gt;:enabled&lt;/code&gt; は、ブールのdisabledプロパティが厳密にfalseに等しい要素を選択します。一方、 &lt;code&gt;:not([disabled])&lt;/code&gt; は、（値に関係なく）disabled &lt;em&gt;属性が&lt;/em&gt;設定されていない要素を選択します。</target>
        </trans-unit>
        <trans-unit id="eb7133d491fa8746ca68cb50d390f93a0c44cee9" translate="yes" xml:space="preserve">
          <source>Although their resulting selections are usually the same, the &lt;code&gt;:disabled&lt;/code&gt; selector is subtly different from the &lt;code&gt;[disabled]&lt;/code&gt; attribute selector;&lt;code&gt;:disabled&lt;/code&gt; matches elements that are &lt;a href=&quot;https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements&quot;&gt;actually disabled&lt;/a&gt; while &lt;code&gt;[disabled]&lt;/code&gt; only checks for the existence of the disabled attribute.</source>
          <target state="translated">結果の選択は通常同じですが、 &lt;code&gt;:disabled&lt;/code&gt; セレクターは &lt;code&gt;[disabled]&lt;/code&gt; 属性セレクターとは微妙に異なります。 &lt;code&gt;:disabled&lt;/code&gt; は、&lt;a href=&quot;https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements&quot;&gt;実際に無効になっ&lt;/a&gt;ている要素と一致しますが、 &lt;code&gt;[disabled]&lt;/code&gt; は、disabled属性の存在のみをチェックします。</target>
        </trans-unit>
        <trans-unit id="aea1345bafb1d0bee4ddbfdd61a79acd6cf14775" translate="yes" xml:space="preserve">
          <source>Although this category is referred to as 'internal', any methods documented within the API site should be considered public and may be freely used.</source>
          <target state="translated">このカテゴリは「内部」と呼ばれていますが、APIサイト内で文書化されたメソッドはすべて公開されているとみなされ、自由に使用することができます。</target>
        </trans-unit>
        <trans-unit id="b3db99a0ce96fa54a74629ff0285d5bfb76b3f16" translate="yes" xml:space="preserve">
          <source>An HTML fragment to add to the set of matched elements.</source>
          <target state="translated">一致した要素のセットに追加するHTMLフラグメント。</target>
        </trans-unit>
        <trans-unit id="269a14ab868b71bddaa3b4f5eda59baf3cb076d2" translate="yes" xml:space="preserve">
          <source>An HTML snippet, selector expression, jQuery object, or DOM element specifying the structure to wrap around the content of the matched elements.</source>
          <target state="translated">HTML スニペット、セレクタ式、jQuery オブジェクト、またはマッチした要素のコンテンツをラップする構造を指定する DOM 要素。</target>
        </trans-unit>
        <trans-unit id="ec43e6a2e9cdc032cf89120d1645ac4ffa90446f" translate="yes" xml:space="preserve">
          <source>An alias for &lt;code&gt;method&lt;/code&gt;. You should use &lt;code&gt;type&lt;/code&gt; if you're using versions of jQuery prior to 1.9.0.</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; のエイリアス。1.9.0より前のバージョンのjQueryを使用している場合は、 &lt;code&gt;type&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="4c5ae6da59dd8550169f1da09f18c267f567ac39" translate="yes" xml:space="preserve">
          <source>An alternate way to achieve the above example using an element rather than a jQuery object. Checks against an existing collection of alternating list elements. Blue, alternating list elements slide up while others turn red.</source>
          <target state="translated">jQuery オブジェクトではなく要素を使用して上記の例を実現する別の方法。交互に配置されたリスト要素の既存のコレクションをチェックします。青色の交互リスト要素は上にスライドし、他の要素は赤くなります。</target>
        </trans-unit>
        <trans-unit id="7366d7bc4562afa81a378487d5c9368eb228ed0d" translate="yes" xml:space="preserve">
          <source>An alternative construct to the complete callback option, the &lt;code&gt;.always()&lt;/code&gt; method replaces the deprecated &lt;code&gt;.complete()&lt;/code&gt; method.</source>
          <target state="translated">完全なコールバックオプションの代替構成である &lt;code&gt;.always()&lt;/code&gt; メソッドは、非推奨の &lt;code&gt;.complete()&lt;/code&gt; メソッドを置き換えます。</target>
        </trans-unit>
        <trans-unit id="9c146b1bb12f6f42e44c7985e63c8bc8bff2d461" translate="yes" xml:space="preserve">
          <source>An alternative construct to the error callback option, the &lt;code&gt;.fail()&lt;/code&gt; method replaces the deprecated &lt;code&gt;.error()&lt;/code&gt; method. Refer to &lt;code&gt;&lt;a href=&quot;deferred.fail&quot;&gt;deferred.fail()&lt;/a&gt;&lt;/code&gt; for implementation details.</source>
          <target state="translated">エラーコールバックオプションの代替構成である &lt;code&gt;.fail()&lt;/code&gt; メソッドは、非推奨の &lt;code&gt;.error()&lt;/code&gt; メソッドを置き換えます。実装の詳細については、 &lt;code&gt;&lt;a href=&quot;deferred.fail&quot;&gt;deferred.fail()&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="dd1c9001b07ef10bfada9aa1caa0e1af065ce9ea" translate="yes" xml:space="preserve">
          <source>An alternative construct to the success callback option, refer to &lt;code&gt;&lt;a href=&quot;deferred.done&quot;&gt;deferred.done()&lt;/a&gt;&lt;/code&gt; for implementation details.</source>
          <target state="translated">成功コールバックオプションの代替構成。実装の詳細については、 &lt;code&gt;&lt;a href=&quot;deferred.done&quot;&gt;deferred.done()&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="766fc34a62672ad391c7ca9632b1d9e3518fdeb8" translate="yes" xml:space="preserve">
          <source>An ancestor element is hidden, so the element is not shown on the page.</source>
          <target state="translated">先祖要素は非表示になっているので、ページには表示されません。</target>
        </trans-unit>
        <trans-unit id="2f46d9103cf06d8d84bfb6ab464482d281ea6ef7" translate="yes" xml:space="preserve">
          <source>An array containing a set of DOM elements to wrap in a jQuery object.</source>
          <target state="translated">jQuery オブジェクトでラップする DOM 要素のセットを含む配列。</target>
        </trans-unit>
        <trans-unit id="c04e518fe1288226c83e383869aefefeec1878ee" translate="yes" xml:space="preserve">
          <source>An array has a length property that is useful for iteration:</source>
          <target state="translated">配列には、反復処理に便利なlengthプロパティがあります。</target>
        </trans-unit>
        <trans-unit id="5957d19e2fdc07469f8936b52e0dec11c033c64e" translate="yes" xml:space="preserve">
          <source>An array of classes to be added to the class attribute of each matched element.</source>
          <target state="translated">マッチした各要素の class 属性に追加されるクラスの配列。</target>
        </trans-unit>
        <trans-unit id="5a6753c835d165fa6d8917875b31c3d84828290b" translate="yes" xml:space="preserve">
          <source>An array of classes to be removed from the class attribute of each matched element.</source>
          <target state="translated">マッチした各要素の class 属性から削除するクラスの配列。</target>
        </trans-unit>
        <trans-unit id="cd4398f53254161edfeed077991f5e15ca76c913" translate="yes" xml:space="preserve">
          <source>An array of classes to be toggled for each element in the matched set.</source>
          <target state="translated">一致したセットの各要素に対して切り替えられるクラスの配列。</target>
        </trans-unit>
        <trans-unit id="30e3b41927450d20c992b8534a8e18118eb2a3f9" translate="yes" xml:space="preserve">
          <source>An array of elements to push onto the stack and make into a new jQuery object.</source>
          <target state="translated">スタックにプッシュして新しいjQueryオブジェクトにするための要素の配列。</target>
        </trans-unit>
        <trans-unit id="cbaabba11ff398fd16e5e65656d7160cd2b791bf" translate="yes" xml:space="preserve">
          <source>An array of functions to replace the current queue contents.</source>
          <target state="translated">現在のキューの内容を置き換えるための関数の配列。</target>
        </trans-unit>
        <trans-unit id="b45d8e8ebf9ac1035efa09dd65337d89d7c54d1f" translate="yes" xml:space="preserve">
          <source>An array of one or more CSS properties.</source>
          <target state="translated">1つ以上のCSSプロパティの配列。</target>
        </trans-unit>
        <trans-unit id="ad8846c656b44b0174146886a31eb3210aa74373" translate="yes" xml:space="preserve">
          <source>An array or array-like object of arguments to pass to the callbacks in the list. If omitted or undefined, no arguments will be passed.</source>
          <target state="translated">リスト内のコールバックに渡す引数の配列または配列のようなオブジェクト。省略された場合や未定義の場合は、引数は渡されません。</target>
        </trans-unit>
        <trans-unit id="980db8b0bb417f1db2ab33779be545ecf5c778bf" translate="yes" xml:space="preserve">
          <source>An array or space-separated string naming the pieces of data to delete.</source>
          <target state="translated">削除するデータの部分の名前を指定する配列またはスペースで区切られた文字列。</target>
        </trans-unit>
        <trans-unit id="e87bff7c74fa68535e1da27eaaa6721787993de0" translate="yes" xml:space="preserve">
          <source>An array or string containing a selector expression to match elements against (can also be a jQuery object).</source>
          <target state="translated">要素をマッチさせるセレクタ式を含む配列または文字列 (jQuery オブジェクトにすることもできます)。</target>
        </trans-unit>
        <trans-unit id="82c0f9a7a89886fb732ee3d538f30a92a656511d" translate="yes" xml:space="preserve">
          <source>An array through which to search.</source>
          <target state="translated">検索対象となる配列。</target>
        </trans-unit>
        <trans-unit id="ca2b0d1cb96e1c2dccd118fbad1285396463214e" translate="yes" xml:space="preserve">
          <source>An array, a plain object, or a jQuery object to serialize.</source>
          <target state="translated">シリアライズする配列、プレーン オブジェクト、または jQuery オブジェクト。</target>
        </trans-unit>
        <trans-unit id="978707ecb865c7e53f4968940d70c061ac17f6d6" translate="yes" xml:space="preserve">
          <source>An array, no matter if it has elements or not, never defaults to false:</source>
          <target state="translated">配列は、要素があるかどうかに関わらず、デフォルトが false になることはありません。</target>
        </trans-unit>
        <trans-unit id="5db10efb8e853ae179d6303731d3f49dc9e08cbb" translate="yes" xml:space="preserve">
          <source>An attribute to remove; as of version 1.7, it can be a space-separated list of attributes.</source>
          <target state="translated">バージョン1.7では、スペースで区切られた属性のリストにすることができます。</target>
        </trans-unit>
        <trans-unit id="7ceac2281cba43c44095b385b1fde3ab0b079f6c" translate="yes" xml:space="preserve">
          <source>An element could also be selected as the replacement:</source>
          <target state="translated">また、要素を選択して置換することもできます。</target>
        </trans-unit>
        <trans-unit id="b2fc7f7fbdc8724603650a944df7c546ca9ffbdf" translate="yes" xml:space="preserve">
          <source>An element in the DOM can also be selected and inserted after another element:</source>
          <target state="translated">DOM 内の要素は、別の要素の後に選択して挿入することもできます。</target>
        </trans-unit>
        <trans-unit id="30148b85dab23a15c447f036b9752c58adc980cf" translate="yes" xml:space="preserve">
          <source>An element in the Document Object Model (DOM) can have attributes, text, and children. It provides methods to traverse the parent and children and to get access to its attributes. Due to inconsistencies in DOM API specifications and implementations, however, those methods can be a challenge to use. jQuery provides a &quot;wrapper&quot; around those elements to help interacting with the DOM. But sometimes you will be working directly with DOM elements, or see methods that (also) accept DOM elements as arguments.</source>
          <target state="translated">Document Object Model (DOM)の要素は、属性、テキスト、子を持つことができます。この要素には、親と子を辿り、その属性にアクセスするためのメソッドが用意されています。しかし、DOM API の仕様と実装に不整合があるため、これらのメソッドを使用するのは難しい場合があります。jQuery は、これらの要素を囲む「ラッパー」を提供し、DOM との対話を支援します。しかし、時にはDOM要素を直接操作したり、DOM要素を引数として受け入れるメソッドを見ることもあるでしょう。</target>
        </trans-unit>
        <trans-unit id="922c8e7a90c5ea29cc712e40f6e8e397a8c98777" translate="yes" xml:space="preserve">
          <source>An element or a jQuery object to match elements against.</source>
          <target state="translated">要素をマッチさせるための要素または jQuery オブジェクト。</target>
        </trans-unit>
        <trans-unit id="4dc80181edd1d9236c3644bfd87a9d125b6b3e5f" translate="yes" xml:space="preserve">
          <source>An element should be connected to the DOM when calling &lt;code&gt;.css()&lt;/code&gt; on it. If it isn't, jQuery may throw an error.</source>
          <target state="translated">要素は、 &lt;code&gt;.css()&lt;/code&gt; を呼び出すときにDOMに接続する必要があります。そうでない場合、jQueryはエラーをスローする可能性があります。</target>
        </trans-unit>
        <trans-unit id="97dfe9c3afe9d7cde1e581d39fcc0325e6a8b9ff" translate="yes" xml:space="preserve">
          <source>An element to match elements against.</source>
          <target state="translated">要素を照合するための要素。</target>
        </trans-unit>
        <trans-unit id="a9089c00aaaf252c2a707ed96bbe0bc14f75f438" translate="yes" xml:space="preserve">
          <source>An empty function.</source>
          <target state="translated">空の関数。</target>
        </trans-unit>
        <trans-unit id="4a272c6be8b8c6dfeaa6c9f401c7c6f63d5b6555" translate="yes" xml:space="preserve">
          <source>An empty string defaults to false:</source>
          <target state="translated">空の文字列のデフォルトは false です。</target>
        </trans-unit>
        <trans-unit id="f4302a2953a7ece03d9a5db8f0c0ea0c51051c0a" translate="yes" xml:space="preserve">
          <source>An equivalent selector to &lt;code&gt;$( &quot;:button&quot; )&lt;/code&gt; using valid CSS is &lt;code&gt;$( &quot;button, input[type='button']&quot; )&lt;/code&gt;.</source>
          <target state="translated">有効なCSSを使用した &lt;code&gt;$( &quot;:button&quot; )&lt;/code&gt; と同等のセレクターは &lt;code&gt;$( &quot;button, input[type='button']&quot; )&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="71c2be1387d3eeafb41f4dc2950ddbc2ed23c53b" translate="yes" xml:space="preserve">
          <source>An error can also be thrown by the engine under some circumstances. For example, when trying to access a property of &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">状況によっては、エンジンによってエラーがスローされることもあります。たとえば、 &lt;code&gt;null&lt;/code&gt; のプロパティにアクセスしようとすると、次のようになります。</target>
        </trans-unit>
        <trans-unit id="bd7f8a3305b0cd5b9f8242b1ca1147142048f55e" translate="yes" xml:space="preserve">
          <source>An error thrown in the function wrapped in &lt;code&gt;jQuery()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;jQuery()&lt;/code&gt; でラップされた関数でスローされたエラー。</target>
        </trans-unit>
        <trans-unit id="928db9fc6a777865c2d660f55fcf2aaf1b8465e8" translate="yes" xml:space="preserve">
          <source>An event name can be qualified by &lt;em&gt;event namespaces&lt;/em&gt; that simplify removing or triggering the event. For example, &lt;code&gt;&quot;click.myPlugin.simple&quot;&lt;/code&gt; defines both the myPlugin and simple namespaces for this particular click event. A click event handler attached via that string could be removed with &lt;code&gt;.off(&quot;click.myPlugin&quot;)&lt;/code&gt; or &lt;code&gt;.off(&quot;click.simple&quot;)&lt;/code&gt; without disturbing other click handlers attached to the elements. Namespaces are similar to CSS classes in that they are not hierarchical; only one name needs to match. Namespaces beginning with an underscore are reserved for jQuery's use.</source>
          <target state="translated">イベント名は、イベントの削除またはトリガーを簡略化する&lt;em&gt;イベント名前空間&lt;/em&gt;で修飾できます。たとえば、 &lt;code&gt;&quot;click.myPlugin.simple&quot;&lt;/code&gt; は、この特定のクリックイベントのmyPluginと単純な名前空間の両方を定義します。その文字列を介して接続されたクリックイベントハンドラーは、要素に接続された他のクリックハンドラーに &lt;code&gt;.off(&quot;click.simple&quot;)&lt;/code&gt; ことなく、 &lt;code&gt;.off(&quot;click.myPlugin&quot;)&lt;/code&gt; または.off（ &quot;click.simple&quot;）で削除できます。名前空間は、階層的ではないという点でCSSクラスに似ています。一致する必要がある名前は1つだけです。アンダースコアで始まる名前空間は、jQueryで使用するために予約されています。</target>
        </trans-unit>
        <trans-unit id="f099e35301146d7b803ea51b01a3f6018d45ae73" translate="yes" xml:space="preserve">
          <source>An event name can be qualified by &lt;em&gt;event namespaces&lt;/em&gt; that simplify removing or triggering the event. For example, &lt;code&gt;&quot;click.myPlugin.simple&quot;&lt;/code&gt; defines both the myPlugin and simple namespaces for this particular click event. A click event handler attached via that string could be removed with &lt;code&gt;.off(&quot;click.myPlugin&quot;)&lt;/code&gt; or &lt;code&gt;.off(&quot;click.simple&quot;)&lt;/code&gt; without disturbing other click handlers attached to the elements. Namespaces are similar to CSS classes in that they are not hierarchical; only one name needs to match. Namespaces should contain upper/lowercase letters and digits only.</source>
          <target state="translated">イベント名は、イベントの削除またはトリガーを簡素化する&lt;em&gt;イベント名前空間&lt;/em&gt;で修飾できます。たとえば、 &lt;code&gt;&quot;click.myPlugin.simple&quot;&lt;/code&gt; は、この特定のクリックイベントのmyPluginと単純な名前空間の両方を定義します。その文字列を介してアタッチされたクリックイベントハンドラーは、要素にアタッチされた他のクリックハンドラーを妨げることなく、 &lt;code&gt;.off(&quot;click.myPlugin&quot;)&lt;/code&gt; または &lt;code&gt;.off(&quot;click.simple&quot;)&lt;/code&gt; で削除できます。名前空間は、階層的ではないという点でCSSクラスに似ています。一致する必要がある名前は1つだけです。名前空間には、大文字/小文字と数字のみを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="c96e3939eb6119ee7b0a6cd65229a682ec69be3c" translate="yes" xml:space="preserve">
          <source>An event-delegation approach attaches an event handler to only one element, the tbody, and the event only needs to bubble up one level (from the clicked &lt;code&gt;tr&lt;/code&gt; to &lt;code&gt;tbody&lt;/code&gt;):</source>
          <target state="translated">イベント委任アプローチでは、イベントハンドラーをtbodyの1つの要素にのみアタッチします。イベントは、1つのレベル（クリックされた &lt;code&gt;tr&lt;/code&gt; から &lt;code&gt;tbody&lt;/code&gt; まで）をバブルアップするだけで済みます。</target>
        </trans-unit>
        <trans-unit id="4afa3002569ea926dd550058ca5036368da05c5a" translate="yes" xml:space="preserve">
          <source>An example of this is a test against &lt;code&gt;document.location&lt;/code&gt; using &lt;code&gt;$.isPlainObject()&lt;/code&gt; as follows:</source>
          <target state="translated">この例は、次のように &lt;code&gt;$.isPlainObject()&lt;/code&gt; を使用した &lt;code&gt;document.location&lt;/code&gt; に対するテストです。</target>
        </trans-unit>
        <trans-unit id="fc41df76082729861611e0284199427fd491754f" translate="yes" xml:space="preserve">
          <source>An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function. Note, this code will do nothing unless the paragraph element is hidden.</source>
          <target state="translated">別のスタイルのアニメーションを提供するために「イージング」機能を使用した例です。これは、このイージング機能を提供するプラグインがある場合にのみ機能します。このコードは段落要素が隠されていない限り何もしないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="eb00ab2592cc87a429b5829e35aa5bac7d994386" translate="yes" xml:space="preserve">
          <source>An existing jQuery object to add to the set of matched elements.</source>
          <target state="translated">一致した要素のセットに追加する既存の jQuery オブジェクト。</target>
        </trans-unit>
        <trans-unit id="a64eb83f461ec9a2d4658ad1ebbad90d0c2b614b" translate="yes" xml:space="preserve">
          <source>An existing jQuery object to clone.</source>
          <target state="translated">クローンする既存の jQuery オブジェクト。</target>
        </trans-unit>
        <trans-unit id="f8ac91678c3faa3942170f78efbaa96993d8b6fa" translate="yes" xml:space="preserve">
          <source>An existing jQuery object to match the current set of elements against.</source>
          <target state="translated">現在の要素のセットを照合する既存の jQuery オブジェクト。</target>
        </trans-unit>
        <trans-unit id="a223855e51555d7b6124b53fd9b477d245f82384" translate="yes" xml:space="preserve">
          <source>An instance of an Error object is thrown as an exception when a runtime error occurs. Error can also be used as base to define user custom exception classes. In JavaScript an error can be thrown as shown below:</source>
          <target state="translated">エラーオブジェクトのインスタンスは、ランタイムエラーが発生したときに例外としてスローされます。エラーは、ユーザーのカスタム例外クラスを定義するためのベースとして使用することもできます。JavaScriptでは、以下のようにエラーをスローすることができます。</target>
        </trans-unit>
        <trans-unit id="8e6b7e6fa0fd9412f3dc1bbd9c814f6a3d98e01e" translate="yes" xml:space="preserve">
          <source>An integer indicating the 0-based position at which the elements begin to be selected. If negative, it indicates an offset from the end of the set.</source>
          <target state="translated">要素の選択を開始する 0 を基準とした位置を示す整数。負数の場合は、セットの終わりからのオフセットを示します。</target>
        </trans-unit>
        <trans-unit id="4a7a97beec7a572bfb8ba925554949c159c98185" translate="yes" xml:space="preserve">
          <source>An integer indicating the 0-based position at which the elements stop being selected. If negative, it indicates an offset from the end of the set. If omitted, the range continues until the end of the set.</source>
          <target state="translated">0 を基準とした、要素の選択を停止する位置を示す整数。負数の場合は、セットの終端からのオフセットを示す。省略した場合は、セットの終了まで継続する。</target>
        </trans-unit>
        <trans-unit id="72acde568da51e8edcd5e4832db44114a464bdfb" translate="yes" xml:space="preserve">
          <source>An integer indicating the 0-based position of the element.</source>
          <target state="translated">要素の0を基準とした位置を示す整数。</target>
        </trans-unit>
        <trans-unit id="0061630ad9695b9d25344ff2d5564376e4b848e0" translate="yes" xml:space="preserve">
          <source>An integer indicating the new position to set the scroll bar to.</source>
          <target state="translated">スクロールバーを設定する新しい位置を示す整数。</target>
        </trans-unit>
        <trans-unit id="ba8db9672051510c1526f62ce05901b75ecb7758" translate="yes" xml:space="preserve">
          <source>An integer indicating the number of milliseconds to delay execution of the next item in the queue.</source>
          <target state="translated">キュー内の次の項目の実行を遅らせるミリ秒数を示す整数。</target>
        </trans-unit>
        <trans-unit id="1e018f035824e90fa4b2628ed81a25bb06f924e2" translate="yes" xml:space="preserve">
          <source>An integer indicating the position of the element, counting backwards from the last element in the set.</source>
          <target state="translated">要素の位置を示す整数で,集合内の最後の要素から逆算します.</target>
        </trans-unit>
        <trans-unit id="9882475293cc26b7a8ea4a8a8237c46c4aa1ac60" translate="yes" xml:space="preserve">
          <source>An integer is a plain Number type, but whenever explicitly mentioned, indicates that a non-floating-point number is expected.</source>
          <target state="translated">整数は単純な数値型ですが、明示的に言及されている場合は、非浮動小数点数が期待されることを示しています。</target>
        </trans-unit>
        <trans-unit id="ab1ad08270278401573b013aa2d31d59dea6a909" translate="yes" xml:space="preserve">
          <source>An integer representing the number of pixels, or an integer along with an optional unit of measure appended (as a string).</source>
          <target state="translated">ピクセル数を表す整数,または整数に(文字列として)任意の単位を付加したもの.</target>
        </trans-unit>
        <trans-unit id="8a86ea48edeb4a031904db76363a1c0e171711ff" translate="yes" xml:space="preserve">
          <source>An integer representing the number of pixels, or an integer with an optional unit of measure appended (as a string).</source>
          <target state="translated">ピクセル数を表す整数,または任意の単位(文字列)を付加した整数.</target>
        </trans-unit>
        <trans-unit id="be5c76eef18779333c7dbbc7bf9f70ad731d34a7" translate="yes" xml:space="preserve">
          <source>An object containing additional properties to merge in.</source>
          <target state="translated">マージする追加のプロパティを含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="21a9b5cccc7c150baf9479a95a728e5a79271329" translate="yes" xml:space="preserve">
          <source>An object containing all CSS properties that may be used without a unit. The .css() method uses this object to see if it may append px to unitless values.</source>
          <target state="translated">単位なしで使用できるすべての CSS プロパティを含むオブジェクト。.css()メソッドはこのオブジェクトを使用して、単位のない値に px を追加できるかどうかを調べます。</target>
        </trans-unit>
        <trans-unit id="c0f7dc7452be24af322a78b7e9c2c9f73ae0edc9" translate="yes" xml:space="preserve">
          <source>An object containing data that will be passed to the event handler.</source>
          <target state="translated">イベントハンドラに渡されるデータを含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="864fc8ef6fc75e4ce488064cc0f17b3a09c86d97" translate="yes" xml:space="preserve">
          <source>An object containing dataType-to-dataType converters. Each converter's value is a function that returns the transformed value of the response. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;)</source>
          <target state="translated">dataType-to-dataTypeコンバーターを含むオブジェクト。各コンバーターの値は、応答の変換された値を返す関数です。（追加されたバージョン：&lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="8b820f7085f21c973295edee5dad08662b885693" translate="yes" xml:space="preserve">
          <source>An object containing one or more DOM event types and functions to execute for them.</source>
          <target state="translated">1 つ以上の DOM イベントタイプとそのために実行する関数を含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="1dfdacc858f3acb0ffd3b94803f144f8505d2faf" translate="yes" xml:space="preserve">
          <source>An object containing one or more of the CSS properties defined by the properties argument and their corresponding easing functions. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.4/&quot;&gt;1.4&lt;/a&gt;)</source>
          <target state="translated">properties引数および対応するイージング関数によって定義された1つ以上のCSSプロパティを含むオブジェクト。（追加されたバージョン：&lt;a href=&quot;https://api.jquery.com/category/version/1.4/&quot;&gt;1.4&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="3497c52e084b86b109b2df302f3c16b0ae1513d8" translate="yes" xml:space="preserve">
          <source>An object containing the properties &lt;code&gt;top&lt;/code&gt; and &lt;code&gt;left&lt;/code&gt;, which are numbers indicating the new top and left coordinates for the elements.</source>
          <target state="translated">プロパティ &lt;code&gt;top&lt;/code&gt; および &lt;code&gt;left&lt;/code&gt; を含むオブジェクト。これは、要素の新しい上座標と左座標を示す数値です。</target>
        </trans-unit>
        <trans-unit id="53214e64070ead40b51fb4bc19345885c476118a" translate="yes" xml:space="preserve">
          <source>An object in which the string keys represent one or more space-separated event types and optional namespaces, and the values represent a handler function to be called for the event(s).</source>
          <target state="translated">文字列のキーは、1つ以上のスペースで区切られたイベントタイプとオプションの名前空間を表し、値はイベントに対して呼び出されるハンドラ関数を表します。</target>
        </trans-unit>
        <trans-unit id="6d635fc9868c04b2999b49a3d5867d850bf4d5c8" translate="yes" xml:space="preserve">
          <source>An object of CSS properties and values that the animation will move toward.</source>
          <target state="translated">アニメーションが移動するCSSプロパティと値のオブジェクト。</target>
        </trans-unit>
        <trans-unit id="a78d38eb72874d64dbaa0e7085e7130dd75a581b" translate="yes" xml:space="preserve">
          <source>An object of additional header key/value pairs to send along with requests using the XMLHttpRequest transport. The header &lt;code&gt;X-Requested-With: XMLHttpRequest&lt;/code&gt; is always added, but its default &lt;code&gt;XMLHttpRequest&lt;/code&gt; value can be changed here. Values in the &lt;code&gt;headers&lt;/code&gt; setting can also be overwritten from within the &lt;code&gt;beforeSend&lt;/code&gt; function. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;)</source>
          <target state="translated">XMLHttpRequestトランスポートを使用してリクエストと共に送信する追加のヘッダーキー/値ペアのオブジェクト。ヘッダー &lt;code&gt;X-Requested-With: XMLHttpRequest&lt;/code&gt; は常に追加されますが、そのデフォルトの &lt;code&gt;XMLHttpRequest&lt;/code&gt; 値はここで変更できます。 &lt;code&gt;headers&lt;/code&gt; 設定の値は、 &lt;code&gt;beforeSend&lt;/code&gt; 関数内から上書きすることもできます。（追加されたバージョン：&lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="c55fe5b1d672ba68926478a01a9ae434208e2bd8" translate="yes" xml:space="preserve">
          <source>An object of attribute-value pairs to set.</source>
          <target state="translated">設定する属性値ペアのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="48f8022876f9fc64852a81649056552d0bc0891b" translate="yes" xml:space="preserve">
          <source>An object of attributes, events, and methods to call on the newly-created element.</source>
          <target state="translated">新しく作成された要素に対して呼び出すための属性、イベント、メソッドのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f63487fec3aa830fd635ba5190736ff149953196" translate="yes" xml:space="preserve">
          <source>An object of fieldName-fieldValue pairs to set on the native &lt;code&gt;&lt;abbr&gt;XHR&lt;/abbr&gt;&lt;/code&gt; object. For example, you can use it to set &lt;code&gt;withCredentials&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; for cross-domain requests if needed.</source>
          <target state="translated">ネイティブ &lt;code&gt;&lt;abbr&gt;XHR&lt;/abbr&gt;&lt;/code&gt; オブジェクトに設定するfieldName-fieldValueペアのオブジェクト。たとえば、必要に応じてこれを使用して、クロスドメインリクエストに対して &lt;code&gt;withCredentials&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="a25e58be5c3c80344ddb2a04c8d1e99aabcf641d" translate="yes" xml:space="preserve">
          <source>An object of key-value pairs of data to update.</source>
          <target state="translated">更新するデータのキーと値のペアのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="29900764937fc05301237dcf6aacbdccc1b51a45" translate="yes" xml:space="preserve">
          <source>An object of numeric HTTP codes and functions to be called when the response has the corresponding code. For example, the following will alert when the response status is a 404:</source>
          <target state="translated">HTTPコードを数値化したオブジェクトで、レスポンスに対応するコードがある場合に呼び出される関数です。例えば、以下はレスポンスのステータスが404の場合にアラートを出します。</target>
        </trans-unit>
        <trans-unit id="f4aae8db752d14632ad189b5fd6b4653950b4443" translate="yes" xml:space="preserve">
          <source>An object of one or more event types and previously bound functions to unbind from them.</source>
          <target state="translated">1つ以上のイベントタイプと以前にバインドされた関数のオブジェクトで、それらからバインドを解除します。</target>
        </trans-unit>
        <trans-unit id="1dc2de63e0eb808b7ce570217ba74ac973436ebe" translate="yes" xml:space="preserve">
          <source>An object of property-value pairs to set.</source>
          <target state="translated">設定するプロパティと値のペアのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="65138e5a2120db36e2ab205a7f9374cec508b514" translate="yes" xml:space="preserve">
          <source>An object of string/regular-expression pairs that determine how jQuery will parse the response, given its content type. (version added: &lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;)</source>
          <target state="translated">コンテンツタイプを指定して、jQueryが応答を解析する方法を決定する文字列/正規表現のペアのオブジェクト。（追加されたバージョン：&lt;a href=&quot;https://api.jquery.com/category/version/1.5/&quot;&gt;1.5&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="1c5033584e4d431d0c1fe992fd84bccf5a86546b" translate="yes" xml:space="preserve">
          <source>An object that will receive the new properties if additional objects are passed in or that will extend the jQuery namespace if it is the sole argument.</source>
          <target state="translated">追加のオブジェクトが渡された場合は新しいプロパティを受け取り、それが唯一の引数である場合はjQuery名前空間を拡張するオブジェクト。</target>
        </trans-unit>
        <trans-unit id="03587202c0138dae5dee1c411be8fe330f4085e0" translate="yes" xml:space="preserve">
          <source>An object that will receive the new properties.</source>
          <target state="translated">新しいプロパティを受け取るオブジェクト。</target>
        </trans-unit>
        <trans-unit id="ec625f244735ff0c4e2404484fd608b4827b6c7c" translate="yes" xml:space="preserve">
          <source>An object to merge onto the jQuery namespace.</source>
          <target state="translated">jQuery ネームスペースにマージするオブジェクト。</target>
        </trans-unit>
        <trans-unit id="92a7187114d7a982682762f96ccdc7011afac950" translate="yes" xml:space="preserve">
          <source>An object to merge onto the jQuery prototype.</source>
          <target state="translated">jQuery プロトタイプにマージするオブジェクト。</target>
        </trans-unit>
        <trans-unit id="179f67e8f4c638bbb574025592e7c0a0291ef31e" translate="yes" xml:space="preserve">
          <source>An object where the string keys represent one or more space-separated event types and optional namespaces, and the values represent handler functions previously attached for the event(s).</source>
          <target state="translated">文字列キーは、1つ以上のスペースで区切られたイベントタイプとオプションの名前空間を表し、値はイベントに対して以前にアタッチされたハンドラ関数を表します。</target>
        </trans-unit>
        <trans-unit id="cd319f4b4a4395c085199213984656bfa55d0fad" translate="yes" xml:space="preserve">
          <source>An object, no matter if it has properties or not, never defaults to false:</source>
          <target state="translated">オブジェクトは、それがプロパティを持っているかどうかに関わらず、デフォルトが false になることはありません。</target>
        </trans-unit>
        <trans-unit id="f8af5431b5383aabfe902c95f07964b9d3d1e669" translate="yes" xml:space="preserve">
          <source>An optional array of arguments that are passed to the doneCallbacks.</source>
          <target state="translated">doneCallbacks に渡される引数のオプション配列。</target>
        </trans-unit>
        <trans-unit id="16b8b8010e15b807ba2ccc5e7e52c076696ef081" translate="yes" xml:space="preserve">
          <source>An optional array of arguments that are passed to the failCallbacks.</source>
          <target state="translated">failCallbacks に渡される引数のオプション配列。</target>
        </trans-unit>
        <trans-unit id="e374272cd607f631653130ac320f49fd306b444f" translate="yes" xml:space="preserve">
          <source>An optional array of arguments that are passed to the progressCallbacks.</source>
          <target state="translated">progressCallbacks に渡される引数のオプション配列。</target>
        </trans-unit>
        <trans-unit id="b8b5b0ad77a356f8693dc818fb9c07982ee27535" translate="yes" xml:space="preserve">
          <source>An optional function that is called when progress notifications are sent to the Deferred.</source>
          <target state="translated">進捗通知がDeferredに送信される際に呼び出されるオプションの関数です。</target>
        </trans-unit>
        <trans-unit id="986aafa946c61f7a9eccaf1739ebe3119b89433a" translate="yes" xml:space="preserve">
          <source>An optional function that is called when the Deferred is rejected.</source>
          <target state="translated">Deferredが拒否されたときに呼び出されるオプションの関数。</target>
        </trans-unit>
        <trans-unit id="ed6d4ce2a49f39fb614c56d269e89c9062cf1ab2" translate="yes" xml:space="preserve">
          <source>An optional function that is called when the Deferred is resolved.</source>
          <target state="translated">Deferredが解決されたときに呼び出されるオプションの関数。</target>
        </trans-unit>
        <trans-unit id="d0e92ee3c334b5877b6faa0e643c9936a4c3f330" translate="yes" xml:space="preserve">
          <source>An optional list of space-separated flags that change how the callback list behaves.</source>
          <target state="translated">コールバックリストの振る舞いを変更するためのスペース区切りのフラグをオプションで指定します。</target>
        </trans-unit>
        <trans-unit id="c9b367a1b8fe3b48af15d5c2d919282309cc0226" translate="yes" xml:space="preserve">
          <source>An optional object of data passed to an event method when the current executing handler is bound.</source>
          <target state="translated">現在の実行ハンドラがバインドされているときにイベントメソッドに渡されるデータのオプションのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="685cf1c91544aae0972cbd933a49ded7a9d55ff7" translate="yes" xml:space="preserve">
          <source>An optional string containing one or more space-separated dataTypes</source>
          <target state="translated">1つ以上のスペースで区切られたdataTypesを含むオプションの文字列</target>
        </trans-unit>
        <trans-unit id="9b96b0ee46c2488c791121a6ae7c473814939988" translate="yes" xml:space="preserve">
          <source>And then pass this jQuery object to find:</source>
          <target state="translated">そして、このjQueryオブジェクトを渡して検索します。</target>
        </trans-unit>
        <trans-unit id="10144b895c49492955d9dc2f549739d56834cb60" translate="yes" xml:space="preserve">
          <source>Animate all paragraphs and execute a callback function when the animation is complete. The first argument is an object of CSS properties, the second specifies that the animation should take 1000 milliseconds to complete, the third states the easing type, and the fourth argument is an anonymous callback function.</source>
          <target state="translated">すべての段落をアニメーション化し、アニメーションが完了したらコールバック関数を実行します。第1引数はCSSプロパティのオブジェクト、第2引数はアニメーションが完了するまでに1000ミリ秒かかることを指定、第3引数はイージングの種類を指定、第4引数は匿名のコールバック関数です。</target>
        </trans-unit>
        <trans-unit id="c23eafcf3b4ee6b2fccf4f18ccf3142525e967f4" translate="yes" xml:space="preserve">
          <source>Animate all paragraphs to a left style of 50 and opacity of 1 (opaque, visible), completing the animation within 500 milliseconds.</source>
          <target state="translated">すべての段落を左のスタイル50、不透明度1(不透明、可視)にアニメーション化し、500ミリ秒以内にアニメーションを完成させます。</target>
        </trans-unit>
        <trans-unit id="95814719c69bdd73bac331d35696dfe8e949ecff" translate="yes" xml:space="preserve">
          <source>Animate all paragraphs to toggle both height and opacity, completing the animation within 600 milliseconds.</source>
          <target state="translated">すべての段落をアニメーション化して高さと不透明度を切り替え、600ミリ秒以内にアニメーションを完成させます。</target>
        </trans-unit>
        <trans-unit id="76386f70e1b04570ac1c33175bcc81d8b697fa3a" translate="yes" xml:space="preserve">
          <source>Animate the hiding and showing of two divs, delaying the first before showing it.</source>
          <target state="translated">2 つの div の非表示と表示をアニメーション化し、最初の div を遅らせてから表示します。</target>
        </trans-unit>
        <trans-unit id="fa369b8b4ac2214c80394c520a1a2729aee9f9ce" translate="yes" xml:space="preserve">
          <source>Animate the left and opacity style properties of all paragraphs; run the animation &lt;em&gt;outside&lt;/em&gt; the queue, so that it will automatically start without waiting for its turn.</source>
          <target state="translated">すべての段落のleftおよびopacityスタイルプロパティをアニメーション化します。順番を待たずに自動的に開始されるように、キューの&lt;em&gt;外で&lt;/em&gt;アニメーションを実行します。</target>
        </trans-unit>
        <trans-unit id="d300d64323cc6323f5d293cfd6b675e0f36e86ea" translate="yes" xml:space="preserve">
          <source>Animated properties can also be relative. If a value is supplied with a leading &lt;code&gt;+=&lt;/code&gt; or &lt;code&gt;-=&lt;/code&gt; sequence of characters, then the target value is computed by adding or subtracting the given number from the current value of the property.</source>
          <target state="translated">アニメーション化されたプロパティも相対的である場合があります。値に先行する &lt;code&gt;+=&lt;/code&gt; または &lt;code&gt;-=&lt;/code&gt; 文字シーケンスが指定されている場合、ターゲット値は、プロパティの現在の値から指定された数値を加算または減算することによって計算されます。</target>
        </trans-unit>
        <trans-unit id="bfbda33c256ff2ebdc8c449b185dc61f6ae41d40" translate="yes" xml:space="preserve">
          <source>Animates a div's left property with a relative value. Click several times on the buttons to see the relative animations queued up.</source>
          <target state="translated">div の左プロパティを相対値でアニメーション化します。ボタンを何度かクリックすると、キューに入っている相対アニメーションを見ることができます。</target>
        </trans-unit>
        <trans-unit id="a7f9381da4f7c7122bfbfa9d12c698a3b99c44d6" translate="yes" xml:space="preserve">
          <source>Animates all divs to slide down and show themselves over 600 milliseconds.</source>
          <target state="translated">すべての div が 600 ミリ秒以上にわたってスライドダウンして表示されるようにアニメーション化します。</target>
        </trans-unit>
        <trans-unit id="88a39736e69be28978f8c87757d5115a01f3d382" translate="yes" xml:space="preserve">
          <source>Animates all divs to slide up, completing the animation within 400 milliseconds.</source>
          <target state="translated">すべての div をスライドアップするようにアニメーション化し、400 ミリ秒以内にアニメーションを完成させます。</target>
        </trans-unit>
        <trans-unit id="a0e06fa5d7569e78756ab7f035a51136f7b514d3" translate="yes" xml:space="preserve">
          <source>Animates all hidden paragraphs to show slowly, completing the animation within 600 milliseconds.</source>
          <target state="translated">すべての隠された段落をゆっくりと表示し、600ミリ秒以内にアニメーションを完成させます。</target>
        </trans-unit>
        <trans-unit id="b413f3d8a6bef743951e9049fa3b207158b4cf4a" translate="yes" xml:space="preserve">
          <source>Animates all inputs to slide down, completing the animation within 1000 milliseconds. Once the animation is done, the input look is changed especially if it is the middle input which gets the focus.</source>
          <target state="translated">すべての入力をスライドダウンさせ、1000 ミリ秒以内にアニメーションを完成させます。アニメーションが完了すると、特に中央の入力にフォーカスを当てると、入力の見た目が変わります。</target>
        </trans-unit>
        <trans-unit id="f37fb99081e59299bcdcbd3f1cb58c2f720404e7" translate="yes" xml:space="preserve">
          <source>Animates all paragraphs to be shown if they are hidden and hidden if they are visible, completing the animation within 600 milliseconds.</source>
          <target state="translated">すべての段落が非表示になっている場合は表示され、表示されている場合は非表示になり、600ミリ秒以内にアニメーションが完了します。</target>
        </trans-unit>
        <trans-unit id="a8c55a350e7361689de5e4f9a1438e0a03956323" translate="yes" xml:space="preserve">
          <source>Animates all paragraphs to fade out, completing the animation within 600 milliseconds.</source>
          <target state="translated">すべての段落がフェードアウトするようにアニメーションし、600ミリ秒以内にアニメーションを完成させます。</target>
        </trans-unit>
        <trans-unit id="c713123b72be1b756a9deddb46cf82bff2d084c0" translate="yes" xml:space="preserve">
          <source>Animates all paragraphs to slide up or down, completing the animation within 600 milliseconds.</source>
          <target state="translated">すべての段落を上下にスライドさせ、600ミリ秒以内にアニメーションを完成させます。</target>
        </trans-unit>
        <trans-unit id="d7dedf422710b7e3223d8a3afe416c02c9969070" translate="yes" xml:space="preserve">
          <source>Animates all paragraphs to toggle both height and opacity, completing the animation within 600 milliseconds.</source>
          <target state="translated">すべての段落をアニメーション化して高さと不透明度を切り替え、600ミリ秒以内にアニメーションを完成させます。</target>
        </trans-unit>
        <trans-unit id="3cdfe48246d2e90a3260e8352fb855a73de63b98" translate="yes" xml:space="preserve">
          <source>Animates all shown paragraphs to hide slowly, completing the animation within 600 milliseconds.</source>
          <target state="translated">表示されているすべての段落がゆっくりと非表示になるようにアニメーションし、600ミリ秒以内にアニメーションを完成させます。</target>
        </trans-unit>
        <trans-unit id="95058e027a898bc0d5368bdca1a39e43061e9a98" translate="yes" xml:space="preserve">
          <source>Animates all spans (words in this case) to hide fastly, completing each animation within 200 milliseconds. Once each animation is done, it starts the next one.</source>
          <target state="translated">すべてのスパン(ここでは単語)を非表示にするためのアニメーションを高速に行い、200ミリ秒以内に各アニメーションを完了させます。各アニメーションが終わると、次のアニメーションを開始します。</target>
        </trans-unit>
        <trans-unit id="81fc5b786bf1afbdb485f4c7161bd3c142953c45" translate="yes" xml:space="preserve">
          <source>Animates divs between dividers with a toggle that makes some appear and some disappear.</source>
          <target state="translated">仕切りの間の div をトグルでアニメーション化し、一部が表示されたり、一部が消えたりします。</target>
        </trans-unit>
        <trans-unit id="10cc24048d0415bf3ddef00fec236ba4ae1e1fbc" translate="yes" xml:space="preserve">
          <source>Animates first paragraph to fade to an opacity of 0.33 (33%, about one third visible), completing the animation within 600 milliseconds.</source>
          <target state="translated">最初の段落を 0.33 (33%,約 3 分の 1 が見える)の不透明度にフェードするようにアニメーション化し、600 ミリ秒以内にアニメーションを完成させます。</target>
        </trans-unit>
        <trans-unit id="4585cd7bae4c5fa3468c022c40f0dc1c2133e973" translate="yes" xml:space="preserve">
          <source>Animates hidden divs to fade in one by one, completing each animation within 600 milliseconds.</source>
          <target state="translated">隠されたdivを1つずつフェードインするようにアニメーション化し、600ミリ秒以内に各アニメーションを完成させます。</target>
        </trans-unit>
        <trans-unit id="fbbda23ffa789e0069a007414d761aed088d2e19" translate="yes" xml:space="preserve">
          <source>Animates the first div's left property and synchronizes the remaining divs, using the step function to set their left properties at each stage of the animation.</source>
          <target state="translated">最初の div の左プロパティをアニメーション化し、残りの div を同期させます。</target>
        </trans-unit>
        <trans-unit id="ff08465a9d9d6db43a8c9f3b2951a883f4bdecd2" translate="yes" xml:space="preserve">
          <source>Animates the parent paragraph to slide up, completing the animation within 200 milliseconds. Once the animation is done, it displays an alert.</source>
          <target state="translated">親パラグラフを上にスライドさせ、200ミリ秒以内にアニメーションを完了させます。アニメーションが完了すると、アラートが表示されます。</target>
        </trans-unit>
        <trans-unit id="d044d5dda484f7cfe3f0c114600ea0df5edee907" translate="yes" xml:space="preserve">
          <source>Animating with cssHooks</source>
          <target state="translated">cssHooks でのアニメーション</target>
        </trans-unit>
        <trans-unit id="9d7fcd039acb3115d146b3b9b5d687e0fc0bf119" translate="yes" xml:space="preserve">
          <source>Animation Properties and Values</source>
          <target state="translated">アニメーションのプロパティと値</target>
        </trans-unit>
        <trans-unit id="e084417f183d8c27fe1790a868abfc15ca6682ec" translate="yes" xml:space="preserve">
          <source>Animations can be turned back on by setting the property to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">プロパティを &lt;code&gt;false&lt;/code&gt; に設定すると、アニメーションをオンに戻すことができます。</target>
        </trans-unit>
        <trans-unit id="e03b16164d90f80e5695ef36d36fb1516d1671fc" translate="yes" xml:space="preserve">
          <source>Animations may be stopped globally by setting the property &lt;code&gt;$.fx.off&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. When this is done, all animation methods will immediately set elements to their final state when called, rather than displaying an effect.</source>
          <target state="translated">プロパティ &lt;code&gt;$.fx.off&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定することにより、アニメーションをグローバルに停止できます。これが実行されると、すべてのアニメーションメソッドは、効果を表示するのではなく、呼び出されるとすぐに要素を最終状態に設定します。</target>
        </trans-unit>
        <trans-unit id="10dfd76e459af9db4799f3ae57670352b3308f61" translate="yes" xml:space="preserve">
          <source>Another method supported by &lt;code&gt;$.Callbacks&lt;/code&gt; is &lt;code&gt;.remove()&lt;/code&gt;, which has the ability to remove a particular callback from the callback list. Here's a practical example of &lt;code&gt;.remove()&lt;/code&gt; being used:</source>
          <target state="translated">&lt;code&gt;$.Callbacks&lt;/code&gt; サポートされているもう1つのメソッドは &lt;code&gt;.remove()&lt;/code&gt; で、コールバックリストから特定のコールバックを削除する機能があります。使用されている &lt;code&gt;.remove()&lt;/code&gt; の実用的な例を次に示します。</target>
        </trans-unit>
        <trans-unit id="ce3dc0bc4b28abd8100c3f2a3201df80849398d6" translate="yes" xml:space="preserve">
          <source>Another variation defines a variable that is filled for each iteration, removing the array-notation from the loop-body. It does not work when the array contains 0 or empty strings!</source>
          <target state="translated">もう一つのバリエーションは、ループボディから配列の表記を削除して、繰り返しのたびに満たされる変数を定義します。これは、配列に0や空の文字列が含まれている場合には動作しません!</target>
        </trans-unit>
        <trans-unit id="a58b9be75317f07da56cfd29c5db4bff14a98191" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;unload&lt;/code&gt; event handler should be bound to the &lt;code&gt;window&lt;/code&gt; object:</source>
          <target state="translated">任意の &lt;code&gt;unload&lt;/code&gt; イベントハンドラがにバインドする必要がある &lt;code&gt;window&lt;/code&gt; オブジェクト：</target>
        </trans-unit>
        <trans-unit id="ef4bb6d9c41ca6c8a34062a59d549e00e4e3b8bd" translate="yes" xml:space="preserve">
          <source>Any event handlers attached with &lt;code&gt;.on()&lt;/code&gt; or one of its shortcut methods are triggered when the corresponding event occurs. They can be fired manually, however, with the &lt;code&gt;.trigger()&lt;/code&gt; method. A call to &lt;code&gt;.trigger()&lt;/code&gt; executes the handlers in the same order they would be if the event were triggered naturally by the user:</source>
          <target state="translated">&lt;code&gt;.on()&lt;/code&gt; またはそのショートカットメソッドの1つに関連付けられたイベントハンドラーは、対応するイベントが発生するとトリガーされます。ただし、 &lt;code&gt;.trigger()&lt;/code&gt; メソッドを使用して手動で起動できます。 &lt;code&gt;.trigger()&lt;/code&gt; の呼び出しは、イベントがユーザーによって自然にトリガーされた場合と同じ順序でハンドラーを実行します。</target>
        </trans-unit>
        <trans-unit id="9ccb37ec55250bad5e2796069e93398d6c460ecb" translate="yes" xml:space="preserve">
          <source>Any event names can be used for the &lt;code&gt;events&lt;/code&gt; argument. jQuery will pass through the browser's standard JavaScript event types, calling the &lt;code&gt;handler&lt;/code&gt; function when the browser generates events due to user actions such as &lt;code&gt;click&lt;/code&gt;. In addition, the &lt;a href=&quot;trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; method can trigger both standard browser event names and custom event names to call attached handlers. Event names should only contain alphanumerics, underscore, and colon characters.</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; 引数には、任意のイベント名を使用できます。 jQueryは、ブラウザーの標準JavaScriptイベントタイプを通過し、ブラウザーが &lt;code&gt;click&lt;/code&gt; などのユーザーアクションによってイベントを生成したときに &lt;code&gt;handler&lt;/code&gt; 関数を呼び出します。さらに、&lt;a href=&quot;trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt;メソッドは、標準のブラウザーイベント名とカスタムイベント名の両方をトリガーして、添付されているハンドラーを呼び出すことができます。イベント名に使用できるのは、英数字、アンダースコア、コロンのみです。</target>
        </trans-unit>
        <trans-unit id="6c324a77dd72e351c6ad051d96e89690b65ab780" translate="yes" xml:space="preserve">
          <source>Any handler that has been attached with &lt;code&gt;.live()&lt;/code&gt; can be removed with &lt;code&gt;.die()&lt;/code&gt;. This method is analogous to calling &lt;code&gt;.off()&lt;/code&gt; with no arguments, which is used to remove all handlers attached with &lt;code&gt;.on()&lt;/code&gt;. See the discussions of &lt;code&gt;.live()&lt;/code&gt; and &lt;code&gt;.off()&lt;/code&gt; for further details.</source>
          <target state="translated">添付された任意のハンドラ &lt;code&gt;.live()&lt;/code&gt; 用いて除去することができる &lt;code&gt;.die()&lt;/code&gt; 。このメソッドは、引数なしで &lt;code&gt;.off()&lt;/code&gt; を呼び出すことに似ています。これは、 &lt;code&gt;.on()&lt;/code&gt; でアタッチされたすべてのハンドラーを削除するために使用されます。詳細については、 &lt;code&gt;.live()&lt;/code&gt; および &lt;code&gt;.off()&lt;/code&gt; の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="566f988178c1d721f6afa5318e3e56b3db180d81" translate="yes" xml:space="preserve">
          <source>Any number of arguments to be passed to the function named in the &lt;code&gt;name&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 引数で指定された関数に渡される任意の数の引数。</target>
        </trans-unit>
        <trans-unit id="c35082a3ff942fe3ec38e1b891112e82ee12e453" translate="yes" xml:space="preserve">
          <source>Any number of arguments to be passed to the function referenced in the &lt;code&gt;function&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 引数で参照される関数に渡される任意の数の引数。</target>
        </trans-unit>
        <trans-unit id="a4533d769fe92d909b865ff015167b2a0b4d51eb" translate="yes" xml:space="preserve">
          <source>Any object that has a &lt;code&gt;then&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;then&lt;/code&gt; メソッドを持つオブジェクト。</target>
        </trans-unit>
        <trans-unit id="984b466a7cfe7ed396b51ac9a52fb1f4a1717b43" translate="yes" xml:space="preserve">
          <source>Any object to turn into a native Array.</source>
          <target state="translated">任意のオブジェクトをネイティブの配列に変換します。</target>
        </trans-unit>
        <trans-unit id="270d3e556381146cab98497f80e4c57858013adc" translate="yes" xml:space="preserve">
          <source>Any string is legal for &lt;code&gt;eventType&lt;/code&gt;; if the string is not the name of a native DOM event, then the handler is bound to a custom event. These events are never called by the browser, but may be triggered manually from other JavaScript code using &lt;code&gt;.trigger()&lt;/code&gt; or &lt;code&gt;.triggerHandler()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eventType&lt;/code&gt; には任意の文字列を使用できます。文字列がネイティブDOMイベントの名前でない場合、ハンドラーはカスタムイベントにバインドされます。これらのイベントはブラウザーによって呼び出されることはありませんが、 &lt;code&gt;.trigger()&lt;/code&gt; または &lt;code&gt;.triggerHandler()&lt;/code&gt; を使用して他のJavaScriptコードから手動でトリガーできます。</target>
        </trans-unit>
        <trans-unit id="474cc1b13f8ef1bd44d4bb025c41f791e8a6b97f" translate="yes" xml:space="preserve">
          <source>Anything</source>
          <target state="translated">Anything</target>
        </trans-unit>
        <trans-unit id="adb21c453333ec2338bfa3d6441c3c092f662924" translate="yes" xml:space="preserve">
          <source>Append all spans to the element with the ID &quot;foo&quot; (Check append() documentation for more examples)</source>
          <target state="translated">ID &quot;foo&quot; を持つ要素にすべてのスパンを追加します (より多くの例については append()のドキュメントを参照してください)</target>
        </trans-unit>
        <trans-unit id="daffde917b6c37dcf62b1ff1d873ea60a0f7b202" translate="yes" xml:space="preserve">
          <source>Appends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.</source>
          <target state="translated">すべての段落に jQuery オブジェクト(DOM 要素の配列に似たもの)を追加します。</target>
        </trans-unit>
        <trans-unit id="bcfe614922e72b84af6cbc6c4f0961429aade7fc" translate="yes" xml:space="preserve">
          <source>Appends an Element to all paragraphs.</source>
          <target state="translated">すべての段落に要素を追加します。</target>
        </trans-unit>
        <trans-unit id="695e6a54c5eadeaba212880d08d9019d930f6a9a" translate="yes" xml:space="preserve">
          <source>Appends some HTML to all paragraphs.</source>
          <target state="translated">すべての段落にHTMLを追加します。</target>
        </trans-unit>
        <trans-unit id="6691c9c26cd474c3ef1ce4958a54813cfd2519b1" translate="yes" xml:space="preserve">
          <source>Apply the CSS style &lt;code&gt;cursor:pointer&lt;/code&gt; to the element that needs to bubble clicks (or a parent including &lt;code&gt;document.documentElement&lt;/code&gt;). Note however, this will disable copy\paste on the element and cause it to be highlighted when touched.</source>
          <target state="translated">CSSスタイルの &lt;code&gt;cursor:pointer&lt;/code&gt; を、バブルクリックが必要な要素（または &lt;code&gt;document.documentElement&lt;/code&gt; を含む親）に適用します。ただし、これにより要素のコピー/貼り付けが無効になり、タッチすると強調表示されます。</target>
        </trans-unit>
        <trans-unit id="82a0f09496a7f911481abd38af9b7cb672943993" translate="yes" xml:space="preserve">
          <source>Apply three different styles to list items to demonstrate that &lt;code&gt;:eq()&lt;/code&gt; is designed to select a single element while &lt;code&gt;:nth-child()&lt;/code&gt; or &lt;code&gt;:eq()&lt;/code&gt; within a looping construct such as &lt;code&gt;.each()&lt;/code&gt; can select multiple elements.</source>
          <target state="translated">リストアイテムに3つの異なるスタイルを適用して、 &lt;code&gt;:eq()&lt;/code&gt; が単一の要素を選択するように設計されているのに対し、 &lt;code&gt;.each()&lt;/code&gt; などのループ構造内の &lt;code&gt;:nth-child()&lt;/code&gt; または &lt;code&gt;:eq()&lt;/code&gt; は複数の要素を選択できることを示します。</target>
        </trans-unit>
        <trans-unit id="d4c86b27339cca3b4e17f74cb6b3d7791d3dfcdd" translate="yes" xml:space="preserve">
          <source>Applying &lt;code&gt;.toggleClass( &quot;bounce spin&quot; )&lt;/code&gt; to the same &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; alternates between &lt;code&gt;&amp;lt;div class=&quot;tumble bounce spin&quot;&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;div class=&quot;tumble&quot;&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">同じ &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; に &lt;code&gt;.toggleClass( &quot;bounce spin&quot; )&lt;/code&gt; を適用すると、 &lt;code&gt;&amp;lt;div class=&quot;tumble bounce spin&quot;&amp;gt;&lt;/code&gt; と &lt;code&gt;&amp;lt;div class=&quot;tumble&quot;&amp;gt;&lt;/code&gt; が交互に使用されます。</target>
        </trans-unit>
        <trans-unit id="cbb9fa252e60809efa55a7ad83aea5438ef56753" translate="yes" xml:space="preserve">
          <source>Arguments</source>
          <target state="translated">Arguments</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="bb0cc719fa8cfbfc81c453949aeb5050bb06ba4e" translate="yes" xml:space="preserve">
          <source>Array Notation</source>
          <target state="translated">配列表記法</target>
        </trans-unit>
        <trans-unit id="d6abbff561024f089bb37bedd66fd9b70814b805" translate="yes" xml:space="preserve">
          <source>Array&amp;lt;Type&amp;gt; Notation</source>
          <target state="translated">Array &amp;lt;Type&amp;gt;表記</target>
        </trans-unit>
        <trans-unit id="aea7efafadaab1cd1d412288c2a7445844c9719c" translate="yes" xml:space="preserve">
          <source>Array-Like Object</source>
          <target state="translated">配列類似オブジェクト</target>
        </trans-unit>
        <trans-unit id="f4aa4f8d458749123fa80906cd63312f167548fc" translate="yes" xml:space="preserve">
          <source>Array-like objects &amp;mdash; those with a &lt;code&gt;.length&lt;/code&gt; property &lt;em&gt;and&lt;/em&gt; a value on the &lt;code&gt;.length - 1&lt;/code&gt; index &amp;mdash; must be converted to actual arrays before being passed to &lt;code&gt;$.map()&lt;/code&gt;. The jQuery library provides &lt;a href=&quot;jquery.makearray&quot;&gt;$.makeArray()&lt;/a&gt; for such conversions.</source>
          <target state="translated">配列のようなオブジェクト&amp;mdash; &lt;code&gt;.length&lt;/code&gt; プロパティ&lt;em&gt;と&lt;/em&gt; &lt;code&gt;.length - 1&lt;/code&gt; インデックスの値を持つオブジェクト&amp;mdash; は、 &lt;code&gt;$.map()&lt;/code&gt; に渡す前に実際の配列に変換する必要があります。 jQueryライブラリは、そのような変換のために&lt;a href=&quot;jquery.makearray&quot;&gt;$ .makeArray（）&lt;/a&gt;を提供します。</target>
        </trans-unit>
        <trans-unit id="dc537d4dcf876b7def50d3b5b58899b798744587" translate="yes" xml:space="preserve">
          <source>Arrays in JavaScript are mutable lists with a few built-in methods. You can define arrays using the array literal:</source>
          <target state="translated">JavaScript の配列は、いくつかの組み込みメソッドを持つ変異可能なリストです。配列リテラルを使って配列を定義することができます。</target>
        </trans-unit>
        <trans-unit id="a63cdb27464a08150495d5039bb04d14a9750803" translate="yes" xml:space="preserve">
          <source>As an alternative or in addition to the &lt;code&gt;data&lt;/code&gt; argument provided to the &lt;code&gt;.on()&lt;/code&gt; method, you can also pass data to an event handler using a second argument to &lt;a href=&quot;trigger&quot;&gt;&lt;code&gt;.trigger()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;triggerhandler&quot;&gt;&lt;code&gt;.triggerHandler()&lt;/code&gt;&lt;/a&gt;. Data provided this way is passed to the event handler as further parameters after the &lt;code&gt;Event&lt;/code&gt; object. If an array was passed to the second argument of &lt;code&gt;.trigger()&lt;/code&gt; or &lt;code&gt;.triggerHandler()&lt;/code&gt;, each element in the array will be presented to the event handler as an individual parameter.</source>
          <target state="translated">&lt;code&gt;.on()&lt;/code&gt; メソッドに提供される &lt;code&gt;data&lt;/code&gt; 引数の代替として、またはそれに加えて、&lt;a href=&quot;trigger&quot;&gt; &lt;code&gt;.trigger()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;triggerhandler&quot;&gt; &lt;code&gt;.triggerHandler()&lt;/code&gt; の&lt;/a&gt; 2番目の引数を使用して、データをイベントハンドラーに渡すこともできます。この方法で提供されたデータは、 &lt;code&gt;Event&lt;/code&gt; オブジェクトの後に追加のパラメーターとしてイベントハンドラーに渡されます。配列が &lt;code&gt;.trigger()&lt;/code&gt; または &lt;code&gt;.triggerHandler()&lt;/code&gt; の2番目の引数に渡された場合、配列内の各要素は、個別のパラメーターとしてイベントハンドラーに提示されます。</target>
        </trans-unit>
        <trans-unit id="db63ee6a85aa74a66c56c44262b9a461236a0a78" translate="yes" xml:space="preserve">
          <source>As described in the discussion for &lt;code&gt;&lt;a href=&quot;end&quot;&gt;.end()&lt;/a&gt;&lt;/code&gt;, jQuery objects maintain an internal stack that keeps track of changes to the matched set of elements. When one of the DOM traversal methods is called, the new set of elements is pushed onto the stack. If the previous set of elements is desired as well, &lt;code&gt;.addBack()&lt;/code&gt; can help.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;end&quot;&gt;.end()&lt;/a&gt;&lt;/code&gt; の説明で説明したように、jQueryオブジェクトは、一致する要素のセットに対する変更を追跡する内部スタックを維持します。DOMトラバーサルメソッドの1つが呼び出されると、新しい要素のセットがスタックにプッシュされます。前の要素のセットも必要な場合は、 &lt;code&gt;.addBack()&lt;/code&gt; が役立ちます。</target>
        </trans-unit>
        <trans-unit id="3adc06685f7490e45dc59084a9100062f0d5c568" translate="yes" xml:space="preserve">
          <source>As described in the discussion for &lt;code&gt;&lt;a href=&quot;end&quot;&gt;.end()&lt;/a&gt;&lt;/code&gt;, jQuery objects maintain an internal stack that keeps track of changes to the matched set of elements. When one of the DOM traversal methods is called, the new set of elements is pushed onto the stack. If the previous set of elements is desired as well, &lt;code&gt;.andSelf()&lt;/code&gt; can help.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;end&quot;&gt;.end()&lt;/a&gt;&lt;/code&gt; の説明で説明したように、jQueryオブジェクトは、一致する要素のセットに対する変更を追跡する内部スタックを維持します。DOMトラバーサルメソッドの1つが呼び出されると、新しい要素のセットがスタックにプッシュされます。前の要素のセットも必要な場合は、 &lt;code&gt;.andSelf()&lt;/code&gt; が役立ちます。</target>
        </trans-unit>
        <trans-unit id="383c3c295e897d466cd5e0dd7461b25943195430" translate="yes" xml:space="preserve">
          <source>As of 3.0 the default behavior is changed. If the &lt;code&gt;context&lt;/code&gt; is not specified or given as &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, a new &lt;code&gt;document&lt;/code&gt; is used. This can potentially improve security because inline events will not execute when the HTML is parsed. Once the parsed HTML is injected into a document it does execute, but this gives tools a chance to traverse the created DOM and remove anything deemed unsafe. This improvement does not apply to internal uses of &lt;code&gt;jQuery.parseHTML&lt;/code&gt; as they usually pass in the current &lt;code&gt;document&lt;/code&gt;. Therefore, a statement like &lt;code&gt;$( &quot;#log&quot; ).append( $( htmlString ) )&lt;/code&gt; is still subject to the injection of malicious code.</source>
          <target state="translated">3.0以降では、デフォルトの動作が変更されています。場合 &lt;code&gt;context&lt;/code&gt; 指定されたかのように与えられていない &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;undefined&lt;/code&gt; 、新しい &lt;code&gt;document&lt;/code&gt; 使用されています。これにより、HTMLが解析されるときにインラインイベントが実行されないため、セキュリティが向上する可能性があります。解析されたHTMLがドキュメントに挿入されると実行されますが、これにより、ツールは作成されたDOMをトラバースし、安全でないと見なされたものをすべて削除することができます。 &lt;code&gt;jQuery.parseHTML&lt;/code&gt; は通常、現在の &lt;code&gt;document&lt;/code&gt; で渡されるため、この改善はjQuery.parseHTMLの内部使用には適用されません。したがって、 &lt;code&gt;$( &quot;#log&quot; ).append( $( htmlString ) )&lt;/code&gt; ようなステートメントは、引き続き悪意のあるコードの注入の影響を受けます。</target>
        </trans-unit>
        <trans-unit id="5fe8e36a4d42c73b1d3d31f2930b5ef45b9a3ef0" translate="yes" xml:space="preserve">
          <source>As of &lt;b&gt;jQuery 1.4&lt;/b&gt; the &lt;code&gt;.live()&lt;/code&gt; method supports custom events as well as &lt;em&gt;all JavaScript events that bubble&lt;/em&gt;. It also supports certain events that don't bubble, including &lt;code&gt;change&lt;/code&gt;, &lt;code&gt;submit&lt;/code&gt;, &lt;code&gt;focus&lt;/code&gt; and &lt;code&gt;blur&lt;/code&gt;.</source>
          <target state="translated">以下のよう&lt;b&gt;jQueryの1.4 &lt;/b&gt; &lt;code&gt;.live()&lt;/code&gt; メソッドは、カスタムイベントだけでなく、サポートしている&lt;em&gt;すべてのJavaScriptのイベントそのバブルを&lt;/em&gt;。また、 &lt;code&gt;change&lt;/code&gt; 、 &lt;code&gt;submit&lt;/code&gt; 、 &lt;code&gt;focus&lt;/code&gt; 、 &lt;code&gt;blur&lt;/code&gt; など、バブルしない特定のイベントもサポートします。</target>
        </trans-unit>
        <trans-unit id="b4922af35890577194c285ffb6d255af469c3d1f" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.12/2.2, this behavior is changed to improve the support for XML documents, including SVG. Starting from this version, the &lt;code&gt;class&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt; is used instead. So, &lt;code&gt;.addClass()&lt;/code&gt; can be used on XML or SVG documents.</source>
          <target state="translated">jQuery 1.12 / 2.2以降、この動作は変更され、SVGを含むXMLドキュメントのサポートが改善されています。このバージョンから、代わりに &lt;code&gt;class&lt;/code&gt; &lt;em&gt;属性&lt;/em&gt;が使用されます。したがって、 &lt;code&gt;.addClass()&lt;/code&gt; はXMLまたはSVGドキュメントで使用できます。</target>
        </trans-unit>
        <trans-unit id="ff2bf3fb1f5bde5d1ee1a685d5d4e295c1898a96" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.12/2.2, this behavior is changed to improve the support for XML documents, including SVG. Starting from this version, the &lt;code&gt;class&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt; is used instead. So, &lt;code&gt;.removeClass()&lt;/code&gt; can be used on XML or SVG documents.</source>
          <target state="translated">jQuery 1.12 / 2.2以降、この動作は変更され、SVGを含むXMLドキュメントのサポートが改善されています。このバージョンから、代わりに &lt;code&gt;class&lt;/code&gt; &lt;em&gt;属性&lt;/em&gt;が使用されます。したがって、 &lt;code&gt;.removeClass()&lt;/code&gt; はXMLまたはSVGドキュメントで使用できます。</target>
        </trans-unit>
        <trans-unit id="bc47af5c660e316a73d9bfbc202b0eab5c7427cb" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.12/2.2, this method supports XML documents, including SVG.</source>
          <target state="translated">jQuery 1.12/2.2では、このメソッドはSVGを含むXMLドキュメントをサポートしています。</target>
        </trans-unit>
        <trans-unit id="1d80a90cbdd16a2225f4248c8b9f027b65fa0192" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.3, &lt;code&gt;.trigger()&lt;/code&gt;ed events bubble up the DOM tree; an event handler can stop the bubbling by returning &lt;code&gt;false&lt;/code&gt; from the handler or calling the &lt;a href=&quot;event.stoppropagation&quot;&gt;&lt;code&gt;.stopPropagation()&lt;/code&gt;&lt;/a&gt; method on the event object passed into the event. Although &lt;code&gt;.trigger()&lt;/code&gt; simulates an event activation, complete with a synthesized event object, it does not perfectly replicate a naturally-occurring event.</source>
          <target state="translated">jQuery 1.3以降、 &lt;code&gt;.trigger()&lt;/code&gt; edイベントはDOMツリーを吹き飛ばします。イベントハンドラーは、ハンドラーから &lt;code&gt;false&lt;/code&gt; を返すか、イベントに渡されたイベントオブジェクトで&lt;a href=&quot;event.stoppropagation&quot;&gt; &lt;code&gt;.stopPropagation()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって、バブリングを停止できます。けれども &lt;code&gt;.trigger()&lt;/code&gt; が合成されたイベントオブジェクトとの完全なイベントの活性化を、シミュレートし、それは完全に天然に存在するイベントを複製しません。</target>
        </trans-unit>
        <trans-unit id="0c8e32bc047b404f56183cc0b0dfd5ad7359f5f1" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.3, the return value of a function is used instead of the function as a String.</source>
          <target state="translated">jQuery 1.3からは、関数の戻り値がStringではなく、関数の戻り値が使われるようになりました。</target>
        </trans-unit>
        <trans-unit id="45bddf91c8817b3d04bba566931a1cf57653396b" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4 the results from .add() will always be returned in document order (rather than a simple concatenation).</source>
          <target state="translated">jQuery 1.4 では、.add()の結果は常にドキュメント順に返されます (単純な連結ではなく)。</target>
        </trans-unit>
        <trans-unit id="8b92833ca22111bd848e6df7d54ad52a1f5ee2c5" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4 the results will always be returned in document order.</source>
          <target state="translated">jQuery 1.4 以降、結果は常にドキュメント順に返されます。</target>
        </trans-unit>
        <trans-unit id="61a4278855157f578676b23840bbb5b53035fd29" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4 this method checks both properties on the object itself and properties inherited from prototypes (in that it doesn't use hasOwnProperty). The argument should always be a plain JavaScript &lt;code&gt;Object&lt;/code&gt; as other types of object (DOM elements, primitive strings/numbers, host objects) may not give consistent results across browsers. To determine if an object is a plain JavaScript object, use &lt;a href=&quot;jquery.isplainobject&quot;&gt;&lt;code&gt;$.isPlainObject()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">jQuery 1.4以降、このメソッドはオブジェクト自体のプロパティと、プロトタイプから継承されたプロパティ（hasOwnPropertyを使用しない）の両方をチェックします。他のタイプのオブジェクト（DOM要素、プリミティブ文字列/数値、ホストオブジェクト）はブラウザー間で一貫した結果を提供しない可能性があるため、引数は常にプレーンJavaScript &lt;code&gt;Object&lt;/code&gt; である必要があります。オブジェクトがプレーンJavaScriptオブジェクトかどうかを判別するには、&lt;a href=&quot;jquery.isplainobject&quot;&gt; &lt;code&gt;$.isPlainObject()&lt;/code&gt; &lt;/a&gt;使用します</target>
        </trans-unit>
        <trans-unit id="e8a2815ac6a599777b632ed80b175597a5a7ae75" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4 we can bind multiple event handlers simultaneously by passing an object of event type/handler pairs:</source>
          <target state="translated">jQuery 1.4では、イベントタイプとハンドラのペアのオブジェクトを渡すことで、複数のイベントハンドラを同時にバインドすることができます。</target>
        </trans-unit>
        <trans-unit id="90a4ded90ec1cf89e4cfab7720335a9b1ac8ff60" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4 we can no longer attach data (and thus, events) to object, embed, or applet elements because critical errors occur when attaching data to Java applets.</source>
          <target state="translated">jQuery 1.4 では、Java アプレットにデータをアタッチする際に重大なエラーが発生するため、オブジェクト、埋め込み、またはアプレットの要素にデータ(つまりイベント)をアタッチできなくなりました。</target>
        </trans-unit>
        <trans-unit id="0d134c746f27a767674bf78628c3073c2db61477" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, &lt;code&gt;.after()&lt;/code&gt; supports passing a function that returns the elements to insert.</source>
          <target state="translated">jQuery 1.4以降、 &lt;code&gt;.after()&lt;/code&gt; は挿入する要素を返す関数の受け渡しをサポートしています。</target>
        </trans-unit>
        <trans-unit id="409ecc2b9569c6330a9b689d28e1e102ea540ad9" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, &lt;code&gt;.css()&lt;/code&gt; allows us to pass a function as the property value:</source>
          <target state="translated">jQuery 1.4以降、 &lt;code&gt;.css()&lt;/code&gt; を使用すると、プロパティ値として関数を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="1ecc82677c406d9b0842869db339355d439d7ac9" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, calling the &lt;code&gt;jQuery()&lt;/code&gt; method with &lt;em&gt;no arguments&lt;/em&gt; returns an empty jQuery set (with a &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; property of 0). In previous versions of jQuery, this would return a set containing the document node.</source>
          <target state="translated">jQuery 1.4以降、&lt;em&gt;引数なしで&lt;/em&gt; &lt;code&gt;jQuery()&lt;/code&gt; メソッドを呼び出すと、空のjQueryセット（ &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; プロパティが0）が返されます。以前のバージョンのjQueryでは、ドキュメントノードを含むセットを返していました。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cac80b3c011e6a5cb72b93c65b67a84581c4842c" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;$.param()&lt;/code&gt; method serializes deep objects recursively to accommodate modern scripting languages and frameworks such as PHP and Ruby on Rails. You can disable this functionality globally by setting &lt;code&gt;jQuery.ajaxSettings.traditional = true;&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.4以降、 &lt;code&gt;$.param()&lt;/code&gt; メソッドはディープオブジェクトを再帰的にシリアル化して、PHPやRuby on Railsなどの最新のスクリプト言語やフレームワークに対応します。この機能をグローバルに無効にするには、 &lt;code&gt;jQuery.ajaxSettings.traditional = true;&lt;/code&gt; 設定します。。</target>
        </trans-unit>
        <trans-unit id="65e0f0421ef7011dcd7798a00027e1fa46255307" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.addClass()&lt;/code&gt; method's argument can receive a function.</source>
          <target state="translated">jQuery 1.4以降、 &lt;code&gt;.addClass()&lt;/code&gt; メソッドの引数は関数を受け取ることができます。</target>
        </trans-unit>
        <trans-unit id="41671d22091b72acf598deb51da105653c810b4f" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.html()&lt;/code&gt; method allows the HTML content to be set by passing in a function.</source>
          <target state="translated">jQuery 1.4以降、 &lt;code&gt;.html()&lt;/code&gt; メソッドを使用すると、関数を渡してHTMLコンテンツを設定できます。</target>
        </trans-unit>
        <trans-unit id="ad2176f0988f49b8ace9bad092e54db71ea6a1d3" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.not()&lt;/code&gt; method can take a function as its argument in the same way that &lt;code&gt;.filter()&lt;/code&gt; does. Elements for which the function returns &lt;code&gt;true&lt;/code&gt; are excluded from the filtered set; all other elements are included.</source>
          <target state="translated">jQuery 1.4以降、 &lt;code&gt;.not()&lt;/code&gt; メソッドは、 &lt;code&gt;.filter()&lt;/code&gt; と同じ方法で関数を引数として使用できます。関数が &lt;code&gt;true&lt;/code&gt; を返す要素は、フィルタリングされたセットから除外されます。他のすべての要素が含まれています。</target>
        </trans-unit>
        <trans-unit id="abc4d3ab51fc84699c45e50617b6a23f624bcab9" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.removeClass()&lt;/code&gt; method allows us to indicate the class to be removed by passing in a function.</source>
          <target state="translated">jQuery 1.4以降では、 &lt;code&gt;.removeClass()&lt;/code&gt; メソッドを使用して、関数を渡すことで削除するクラスを指定できます。</target>
        </trans-unit>
        <trans-unit id="11868e537b2f911ce09188aa2e303a372f587eeb" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.text()&lt;/code&gt; method allows us to set the text content by passing in a function.</source>
          <target state="translated">jQuery 1.4以降、 &lt;code&gt;.text()&lt;/code&gt; メソッドを使用すると、関数を渡してテキストコンテンツを設定できます。</target>
        </trans-unit>
        <trans-unit id="8fbe71d81d67af58d49c9ad8fbf88b9eda490957" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;.text()&lt;/code&gt; method returns the value of text and CDATA nodes as well as element nodes.</source>
          <target state="translated">jQuery 1.4以降、 &lt;code&gt;.text()&lt;/code&gt; メソッドは、要素ノードだけでなく、テキストおよびCDATAノードの値を返します。</target>
        </trans-unit>
        <trans-unit id="a22f2639f0f3e7253b48d3f60be4bf8534583c44" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the &lt;code&gt;change&lt;/code&gt; event bubbles in Internet Explorer, behaving consistently with the event in other modern browsers.</source>
          <target state="translated">jQuery 1.4以降、 &lt;code&gt;change&lt;/code&gt; イベントはInternet Explorerでバブルし、他の最新のブラウザーでのイベントと一貫して動作します。</target>
        </trans-unit>
        <trans-unit id="a1c4787fb59ddfd1f3eb73b1945b4667a00ac068" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4, the same event handler can be bound to an element multiple times. This is especially useful when the &lt;code&gt;event.data&lt;/code&gt; feature is being used, or when other unique data resides in a closure around the event handler function. For example:</source>
          <target state="translated">jQuery 1.4以降、同じイベントハンドラーを要素に複数回バインドできます。これは、 &lt;code&gt;event.data&lt;/code&gt; 機能が使用されている場合、または他の一意のデータがイベントハンドラー関数の周りのクロージャーにある場合に特に便利です。例えば：</target>
        </trans-unit>
        <trans-unit id="e95086371502e608f2f3430c00ec72bd1843bbc8" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4.2 duplicate event handlers can be bound to an element instead of being discarded. This is useful when the event data feature is being used, or when other unique data resides in a closure around the event handler function.</source>
          <target state="translated">jQuery 1.4.2 以降では、重複したイベント ハンドラは破棄されるのではなく、要素にバインドすることができます。これは、イベント データ機能を使用している場合や、イベント ハンドラ関数の周囲のクロージャに他の一意のデータが存在する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="dfa98e13084683fbb59f13713d585fc14da6d8b7" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4.3 &lt;a href=&quot;https://johnresig.com/blog/html-5-data-attributes/&quot;&gt;HTML 5 data- attributes&lt;/a&gt; will be automatically pulled in to jQuery's data object. The treatment of attributes with embedded dashes was changed in jQuery 1.6 to conform to the &lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes&quot;&gt;W3C HTML5 specification&lt;/a&gt;.</source>
          <target state="translated">jQuery 1.4.3以降、&lt;a href=&quot;https://johnresig.com/blog/html-5-data-attributes/&quot;&gt;HTML 5&lt;/a&gt;のdata 属性はjQueryのデータオブジェクトに自動的に取り込まれます。ダッシュが埋め込まれた属性の扱いは、jQuery 1.6で変更され、&lt;a href=&quot;https://www.w3.org/TR/html5/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes&quot;&gt;W3C HTML5仕様&lt;/a&gt;に準拠しました。</target>
        </trans-unit>
        <trans-unit id="a6bdfa160ffe9631926aaed322f4f86696da7183" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.4.3, an optional string naming an easing function may be used. Easing functions specify the speed at which the animation progresses at different points within the animation. The only easing implementations in the jQuery library are the default, called &lt;code&gt;swing&lt;/code&gt;, and one that progresses at a constant pace, called &lt;code&gt;linear&lt;/code&gt;. More easing functions are available with the use of plug-ins, most notably the &lt;a href=&quot;https://jqueryui.com&quot;&gt;jQuery UI suite&lt;/a&gt;.</source>
          <target state="translated">jQuery 1.4.3以降、イージング関数を指定するオプションの文字列を使用できます。イージング関数は、アニメーション内のさまざまなポイントでアニメーションが進行する速度を指定します。jQueryライブラリの唯一のイージング実装は、 &lt;code&gt;swing&lt;/code&gt; と呼ばれるデフォルトと、 &lt;code&gt;linear&lt;/code&gt; と呼ばれる一定のペースで進行するものです。プラグイン、特に&lt;a href=&quot;https://jqueryui.com&quot;&gt;jQuery UIスイートを&lt;/a&gt;使用すると、より多くのイージング関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="ab20aaf74b985a1f2cf98c6fc5b5b85c55b08917" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.5, &lt;code&gt;withDataAndEvents&lt;/code&gt; can be optionally enhanced with &lt;code&gt;deepWithDataAndEvents &lt;/code&gt; to copy the events and data for all children of the cloned element.</source>
          <target state="translated">jQueryの1.5のとおり、 &lt;code&gt;withDataAndEvents&lt;/code&gt; は任意に高めることができる &lt;code&gt;deepWithDataAndEvents &lt;/code&gt; クローン化された要素のすべての子供たちのためのイベントとデータをコピーします。</target>
        </trans-unit>
        <trans-unit id="efa8f1455ec0d83d5c810f929f58950086cd768a" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.5, the &lt;a href=&quot;category/deferred-object&quot;&gt;Deferred&lt;/a&gt; object provides a way to register multiple callbacks into self-managed callback queues, invoke callback queues as appropriate, and relay the success or failure state of any synchronous or asynchronous function.</source>
          <target state="translated">jQuery 1.5以降、&lt;a href=&quot;category/deferred-object&quot;&gt;Deferred&lt;/a&gt;オブジェクトは、複数のコールバックを自己管理のコールバックキューに登録し、必要に応じてコールバックキューを呼び出し、同期または非同期関数の成功または失敗の状態を中継する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="bbc611303b99903072fe277021b7a22997b99eda" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.5, the &lt;a href=&quot;jquery.ajax&quot;&gt;$.ajax()&lt;/a&gt; method returns the jqXHR object, which is a superset of the XMLHTTPRequest object. For more information, see the &lt;a href=&quot;jquery.ajax#jqXHR&quot;&gt;jqXHR section of the $.ajax entry&lt;/a&gt;</source>
          <target state="translated">jQuery 1.5以降、&lt;a href=&quot;jquery.ajax&quot;&gt;$。ajax（）&lt;/a&gt;メソッドは、XMLHTTPRequestオブジェクトのスーパーセットであるjqXHRオブジェクトを返します。詳細について&lt;a href=&quot;jquery.ajax#jqXHR&quot;&gt;は、$。ajaxエントリのjqXHRセクションを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="3c8e1f573da4722ec551e628164c1fd456258450" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.5, you may use &lt;a href=&quot;deferred.fail&quot;&gt;&lt;code&gt;.fail()&lt;/code&gt;&lt;/a&gt; to account for errors:</source>
          <target state="translated">jQuery 1.5以降では、&lt;a href=&quot;deferred.fail&quot;&gt; &lt;code&gt;.fail()&lt;/code&gt; &lt;/a&gt;を使用してエラーを説明できます。</target>
        </trans-unit>
        <trans-unit id="9e6309b11f3b892aefd6e94ce3523ea53cce2603" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.6, &lt;code&gt;.css()&lt;/code&gt; accepts relative values similar to &lt;code&gt;.animate()&lt;/code&gt;. Relative values are a string starting with &lt;code&gt;+=&lt;/code&gt; or &lt;code&gt;-=&lt;/code&gt; to increment or decrement the current value. For example, if an element's padding-left was 10px, &lt;code&gt;.css( &quot;padding-left&quot;, &quot;+=15&quot; )&lt;/code&gt; would result in a total padding-left of 25px.</source>
          <target state="translated">jQuery 1.6以降、 &lt;code&gt;.css()&lt;/code&gt; は &lt;code&gt;.animate()&lt;/code&gt; と同様の相対値を受け入れます。相対値は、現在の値を増分または減分する &lt;code&gt;+=&lt;/code&gt; または &lt;code&gt;-=&lt;/code&gt; で始まる文字列です。たとえば、要素のpadding-leftが10pxの場合、 &lt;code&gt;.css( &quot;padding-left&quot;, &quot;+=15&quot; )&lt;/code&gt; 結果、合計padding-leftは25pxになります。</target>
        </trans-unit>
        <trans-unit id="b8df253d75fb04460ea8a5c48864cdfaebc01975" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.6, the &lt;code&gt;.attr()&lt;/code&gt; method returns &lt;code&gt;undefined&lt;/code&gt; for attributes that have not been set. &lt;strong&gt;To retrieve and change DOM properties such as the &lt;code&gt;checked&lt;/code&gt;, &lt;code&gt;selected&lt;/code&gt;, or &lt;code&gt;disabled&lt;/code&gt; state of form elements, use the &lt;a href=&quot;prop&quot;&gt;.prop()&lt;/a&gt; method.&lt;/strong&gt;</source>
          <target state="translated">jQuery 1.6以降、 &lt;code&gt;.attr()&lt;/code&gt; メソッドは、設定されていない属性に対して &lt;code&gt;undefined&lt;/code&gt; を返します。&lt;strong&gt;フォーム要素&lt;/strong&gt;&lt;strong&gt;の &lt;code&gt;checked&lt;/code&gt; 、 &lt;code&gt;selected&lt;/code&gt; 、または &lt;code&gt;disabled&lt;/code&gt; 状態などのDOMプロパティを取得して変更するには、&lt;a href=&quot;prop&quot;&gt;.prop（）&lt;/a&gt;メソッドを使用します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5cbe4238fa853084ef97be39e8212a576a55a6a7" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.6, you can also pass an object to &lt;code&gt;jQuery.Event()&lt;/code&gt; and its properties will be set on the newly created Event object.</source>
          <target state="translated">jQuery 1.6以降、 &lt;code&gt;jQuery.Event()&lt;/code&gt; にオブジェクトを渡すこともでき、そのプロパティは新しく作成されたEventオブジェクトに設定されます。</target>
        </trans-unit>
        <trans-unit id="5da2c6c1523952bb91a3fd56b7f2e0ba7e03f6a4" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.7 this API has been deprecated; please use &lt;a href=&quot;deferred.state&quot;&gt;&lt;code&gt;deferred.state()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">jQuery 1.7以降、このAPIは非推奨になりました。代わりに&lt;a href=&quot;deferred.state&quot;&gt; &lt;code&gt;deferred.state()&lt;/code&gt; &lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="4b48ac1c86618af30fb212ddbe8375cffd96bfb6" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.8, the &lt;code&gt;.css()&lt;/code&gt; setter will automatically take care of prefixing the property name. For example, take &lt;code&gt;.css( &quot;user-select&quot;, &quot;none&quot; )&lt;/code&gt; in Chrome/Safari will set it as &lt;code&gt;-webkit-user-select&lt;/code&gt;, Firefox will use &lt;code&gt;-moz-user-select&lt;/code&gt;, and IE10 will use &lt;code&gt;-ms-user-select&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.8以降、 &lt;code&gt;.css()&lt;/code&gt; セッターはプロパティ名のプレフィックスを自動的に処理します。たとえば、Chrome / Safariで &lt;code&gt;.css( &quot;user-select&quot;, &quot;none&quot; )&lt;/code&gt; を使用 &lt;code&gt;-webkit-user-select&lt;/code&gt; 、-webkit-user-selectとして設定され、Firefoxは &lt;code&gt;-moz-user-select&lt;/code&gt; を使用し、IE10は &lt;code&gt;-ms-user-select&lt;/code&gt; を使用します-select。</target>
        </trans-unit>
        <trans-unit id="3d3af6d593de158fe669b5a3ac1c021912f220ff" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxComplete()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9以降では、 &lt;code&gt;.ajaxComplete()&lt;/code&gt; メソッドで追加されたものを含め、&lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQueryグローバルAjaxイベントの&lt;/a&gt;すべてのハンドラーを &lt;code&gt;document&lt;/code&gt; に添付する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="074fb93f066bcee32ab0d457291bf1a41a0b671d" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxError()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9以降では、 &lt;code&gt;.ajaxError()&lt;/code&gt; メソッドで追加されたものを含め、&lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQueryグローバルAjaxイベントの&lt;/a&gt;すべてのハンドラーを &lt;code&gt;document&lt;/code&gt; にアタッチする&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0a3c5aa8e7bd3fc6d7f245d9517eda08d95cec39" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxSend()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9以降では、 &lt;code&gt;.ajaxSend()&lt;/code&gt; メソッドで追加されたものを含め、&lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQueryグローバルAjaxイベントの&lt;/a&gt;すべてのハンドラーを &lt;code&gt;document&lt;/code&gt; に添付する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5554be43799278ed2cee938b99198504f4de3620" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxStart()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9以降では、 &lt;code&gt;.ajaxStart()&lt;/code&gt; メソッドで追加されたものを含め、&lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQueryグローバルAjaxイベントの&lt;/a&gt;すべてのハンドラーを &lt;code&gt;document&lt;/code&gt; に添付する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e151cc18ebc96b52761440516a84b9000261d78a" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxStop()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9以降では、 &lt;code&gt;.ajaxStop()&lt;/code&gt; メソッドで追加されたものを含む、&lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQueryグローバルAjaxイベントの&lt;/a&gt;すべてのハンドラーを &lt;code&gt;document&lt;/code&gt; にアタッチする&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="958a03c61a6be2f18a5d9a93bd096ab9b6168692" translate="yes" xml:space="preserve">
          <source>As of jQuery 1.9, all the handlers for the &lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQuery global Ajax events&lt;/a&gt;, including those added with the &lt;code&gt;.ajaxSuccess()&lt;/code&gt; method, &lt;em&gt;must&lt;/em&gt; be attached to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">jQuery 1.9以降では、 &lt;code&gt;.ajaxSuccess()&lt;/code&gt; メソッドで追加されたものを含め、&lt;a href=&quot;category/ajax/global-ajax-event-handlers&quot;&gt;jQueryグローバルAjaxイベントの&lt;/a&gt;すべてのハンドラーを &lt;code&gt;document&lt;/code&gt; に添付する&lt;em&gt;必要&lt;/em&gt;が&lt;em&gt;あり&lt;/em&gt;ます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b7e6b3b8ab53b6962cc4671c0b8e105b936d781" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0 &lt;code&gt;$.isNumeric()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; only if the argument is of type &lt;a href=&quot;types#Number&quot;&gt;&lt;code&gt;number&lt;/code&gt;&lt;/a&gt;, or if it's of type &lt;code&gt;string&lt;/code&gt; and it can be coerced into finite numbers. In all other cases, it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">jQuery 3.0以降、 &lt;code&gt;$.isNumeric()&lt;/code&gt; は、引数が&lt;a href=&quot;types#Number&quot;&gt; &lt;code&gt;number&lt;/code&gt; &lt;/a&gt;型である場合、または引数が &lt;code&gt;string&lt;/code&gt; 型であり、有限数に強制変換できる場合にのみ &lt;code&gt;true&lt;/code&gt; を返します。それ以外の場合はすべて、 &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e5aa593fc221a03c9b6bf247d27325ac55f1eb78" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, &lt;code&gt;$.parseJSON&lt;/code&gt; is deprecated. To parse JSON strings use the native &lt;code&gt;JSON.parse&lt;/code&gt; method instead.</source>
          <target state="translated">jQuery 3.0以降、 &lt;code&gt;$.parseJSON&lt;/code&gt; 。parseJSONは非推奨になりました。JSON文字列を解析するには、代わりにネイティブの &lt;code&gt;JSON.parse&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="f46dc2289fd1b41645d7ce6a3e70772dc92846c3" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, &lt;code&gt;.bind()&lt;/code&gt; has been deprecated. It was superseded by the &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt; method for attaching event handlers to a document since jQuery 1.7, so its use was already discouraged. For earlier versions, the &lt;code&gt;.bind()&lt;/code&gt; method is used for attaching an event handler directly to elements. Handlers are attached to the currently selected elements in the jQuery object, so those elements &lt;em&gt;must exist&lt;/em&gt; at the point the call to &lt;code&gt;.bind()&lt;/code&gt; occurs. For more flexible event binding, see the discussion of event delegation in &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">jQuery 3.0以降、 &lt;code&gt;.bind()&lt;/code&gt; は非推奨になりました。jQuery 1.7以降、イベントハンドラーをドキュメントにアタッチする&lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; &lt;/a&gt;メソッドに置き換えられたため、その使用はすでに推奨されていませんでした。以前のバージョンでは、 &lt;code&gt;.bind()&lt;/code&gt; メソッドは、イベントハンドラーを要素に直接アタッチするために使用されていました。ハンドラーはjQueryオブジェクトで現在選択されている要素にアタッチされるため、これらの要素&lt;em&gt;は&lt;/em&gt; &lt;code&gt;.bind()&lt;/code&gt; の呼び出しが発生した時点で&lt;em&gt;存在&lt;/em&gt;している&lt;em&gt;必要があり&lt;/em&gt;ます。より柔軟なイベントバインディングについては、&lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; の&lt;/a&gt;イベント委譲の説明を参照してください。</target>
        </trans-unit>
        <trans-unit id="d13ae9b9c056d619d357478a9c0a71a11eae8214" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, &lt;code&gt;.delegate()&lt;/code&gt; has been deprecated. It was superseded by the &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt; method since jQuery 1.7, so its use was already discouraged. For earlier versions, however, it remains the most effective means to use event delegation. More information on event binding and delegation is in the &lt;a href=&quot;on&quot;&gt;&lt;code&gt;.on()&lt;/code&gt;&lt;/a&gt; method. In general, these are the equivalent templates for the two methods:</source>
          <target state="translated">jQuery 3.0以降、 &lt;code&gt;.delegate()&lt;/code&gt; は非推奨になりました。jQuery 1.7以降、&lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; &lt;/a&gt;メソッドに置き換えられたため、その使用はすでに推奨されていませんでした。ただし、以前のバージョンでは、イベント委任を使用するのが最も効果的な方法であり続けます。イベントのバインドと委任の詳細については、&lt;a href=&quot;on&quot;&gt; &lt;code&gt;.on()&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。一般に、これらは2つのメソッドと同等のテンプレートです。</target>
        </trans-unit>
        <trans-unit id="77e93be5b34d3f2ab6409e2f2676e808068354a9" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, &lt;code&gt;.unbind()&lt;/code&gt; has been deprecated. It was superseded by the &lt;a href=&quot;off&quot;&gt;&lt;code&gt;.off()&lt;/code&gt;&lt;/a&gt; method since jQuery 1.7, so its use was already discouraged.</source>
          <target state="translated">jQuery 3.0以降、 &lt;code&gt;.unbind()&lt;/code&gt; は非推奨になりました。jQuery 1.7以降は&lt;a href=&quot;off&quot;&gt; &lt;code&gt;.off()&lt;/code&gt; &lt;/a&gt;メソッドに置き換えられたため、その使用はすでに推奨されていませんでした。</target>
        </trans-unit>
        <trans-unit id="73eaaf23595739f5bed33113ace36bea16a8f789" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, &lt;code&gt;.undelegate()&lt;/code&gt; has been deprecated. It was superseded by the &lt;a href=&quot;off&quot;&gt;&lt;code&gt;.off()&lt;/code&gt;&lt;/a&gt; method since jQuery 1.7, so its use was already discouraged.</source>
          <target state="translated">jQuery 3.0以降、 &lt;code&gt;.undelegate()&lt;/code&gt; は非推奨になりました。jQuery 1.7以降は&lt;a href=&quot;off&quot;&gt; &lt;code&gt;.off()&lt;/code&gt; &lt;/a&gt;メソッドに置き換えられたため、その使用はすでに推奨されていませんでした。</target>
        </trans-unit>
        <trans-unit id="c42636d689138f4824141d5d1c48aba80d4fc491" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, only the first syntax is recommended; the other syntaxes still work but are deprecated. This is because the selection has no bearing on the behavior of the &lt;code&gt;.ready()&lt;/code&gt; method, which is inefficient and can lead to incorrect assumptions about the method's behavior. For example, the third syntax works with &lt;code&gt;&quot;document&quot;&lt;/code&gt; which selects nothing. The fourth syntax waits for the document to be ready but implies (incorrectly) that it waits for images to become ready.</source>
          <target state="translated">jQuery 3.0以降では、最初の構文のみをお勧めします。他の構文は引き続き機能しますが、非推奨です。これは、選択が &lt;code&gt;.ready()&lt;/code&gt; メソッドの動作に影響を与えないためです。これは非効率的であり、メソッドの動作に関する誤った仮定につながる可能性があります。たとえば、3番目の構文は何も選択しない &lt;code&gt;&quot;document&quot;&lt;/code&gt; で機能します。 4番目の構文は、ドキュメントの準備が整うまで待機しますが、イメージの準備が整うまで（誤って）待機することを意味します。</target>
        </trans-unit>
        <trans-unit id="4ab79995b015b04dc3ba5bdac9fcba97c892c0cc" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, the &lt;code&gt;$.param()&lt;/code&gt; method no longer uses &lt;code&gt;jQuery.ajaxSettings.traditional&lt;/code&gt; as its default setting and will default to &lt;code&gt;false&lt;/code&gt;. For best compatibility across versions, call &lt;code&gt;$.param()&lt;/code&gt; with an explicit value for the second argument and do not use defaults.</source>
          <target state="translated">jQuery 3.0以降、 &lt;code&gt;$.param()&lt;/code&gt; メソッドはデフォルト設定として &lt;code&gt;jQuery.ajaxSettings.traditional&lt;/code&gt; を使用しなくなり、デフォルトで &lt;code&gt;false&lt;/code&gt; になります。バージョン間の最適な互換性のために、2番目の引数に明示的な値を指定して &lt;code&gt;$.param()&lt;/code&gt; を呼び出し、デフォルトを使用しないでください。</target>
        </trans-unit>
        <trans-unit id="c43327ed669e013435c4519310b0ca72b5b7b66c" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.0, use of this object is supported via &lt;code&gt;&lt;a href=&quot;jquery.when&quot;&gt;jQuery.when&lt;/a&gt;&lt;/code&gt; or the native &lt;code&gt;Promise.resolve()&lt;/code&gt;. Code should not make assumptions about whether this object is a &lt;code&gt;jQuery.Deferred&lt;/code&gt;, native Promise, or some other type of promise object.</source>
          <target state="translated">jQuery 3.0以降、このオブジェクトの使用は &lt;code&gt;&lt;a href=&quot;jquery.when&quot;&gt;jQuery.when&lt;/a&gt;&lt;/code&gt; またはネイティブの &lt;code&gt;Promise.resolve()&lt;/code&gt; でサポートされています。コードは、このオブジェクトが &lt;code&gt;jQuery.Deferred&lt;/code&gt; 、ネイティブPromise、またはその他のタイプのpromiseオブジェクトであるかどうかを想定してはなりません。</target>
        </trans-unit>
        <trans-unit id="1ac48e1524df474a8e85b14636a036a218ff30e9" translate="yes" xml:space="preserve">
          <source>As of jQuery 3.3, &lt;code&gt;jQuery.isFunction()&lt;/code&gt; has been deprecated. In most cases, its use can be replaced by &lt;code&gt;typeof x === &quot;function&quot;&lt;/code&gt;.</source>
          <target state="translated">jQuery 3.3以降、 &lt;code&gt;jQuery.isFunction()&lt;/code&gt; は非推奨になりました。ほとんどの場合、その使用は &lt;code&gt;typeof x === &quot;function&quot;&lt;/code&gt; で置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="6c7f4cbf5ccd269125f02c56ac0975aafbd65060" translate="yes" xml:space="preserve">
          <source>As of jQuery &lt;strong&gt;1.4.3&lt;/strong&gt;, an optional string naming an easing function may be used. Easing functions specify the speed at which the animation progresses at different points within the animation. The only easing implementations in the jQuery library are the default, called &lt;code&gt;swing&lt;/code&gt;, and one that progresses at a constant pace, called &lt;code&gt;linear&lt;/code&gt;. More easing functions are available with the use of plug-ins, most notably the &lt;a href=&quot;https://jqueryui.com&quot;&gt;jQuery UI suite&lt;/a&gt;.</source>
          <target state="translated">jQuery &lt;strong&gt;1.4.3&lt;/strong&gt;以降、イージング関数を指定するオプションの文字列を使用できます。イージング関数は、アニメーション内のさまざまなポイントでアニメーションが進行する速度を指定します。jQueryライブラリの唯一のイージング実装は、 &lt;code&gt;swing&lt;/code&gt; と呼ばれるデフォルトと、 &lt;code&gt;linear&lt;/code&gt; と呼ばれる一定のペースで進行するものです。プラグイン、特に&lt;a href=&quot;https://jqueryui.com&quot;&gt;jQuery UIスイートを&lt;/a&gt;使用すると、より多くのイージング関数を使用できます。</target>
        </trans-unit>
        <trans-unit id="8e924f4f741ec344a93b78011b3a3fdd3f8103e5" translate="yes" xml:space="preserve">
          <source>As of jQuery version 1.4, you can set per-property easing functions within a single &lt;code&gt;.animate()&lt;/code&gt; call. In the first version of &lt;code&gt;.animate()&lt;/code&gt;, each property can take an array as its value: The first member of the array is the CSS property and the second member is an easing function. If a per-property easing function is not defined for a particular property, it uses the value of the &lt;code&gt;.animate()&lt;/code&gt; method's optional easing argument. If the easing argument is not defined, the default &lt;code&gt;swing&lt;/code&gt; function is used.</source>
          <target state="translated">jQueryバージョン1.4以降、1つの &lt;code&gt;.animate()&lt;/code&gt; 呼び出し内でプロパティごとのイージング関数を設定できます。 &lt;code&gt;.animate()&lt;/code&gt; の最初のバージョンでは、各プロパティは配列を値として取ることができます。配列の最初のメンバーはCSSプロパティで、2番目のメンバーはイージング関数です。プロパティごとのイージング関数が特定のプロパティに対して定義されていない場合、 &lt;code&gt;.animate()&lt;/code&gt; メソッドのオプションのイージング引数の値を使用します。イージング引数が定義されていない場合、デフォルトの &lt;code&gt;swing&lt;/code&gt; 関数が使用されます。</target>
        </trans-unit>
        <trans-unit id="56660c2e6b7048463001854c605eca841870c8ae" translate="yes" xml:space="preserve">
          <source>As previously noted, a plugin is required for the &lt;code&gt;easeOutBounce&lt;/code&gt; function.</source>
          <target state="translated">前述のとおり、 &lt;code&gt;easeOutBounce&lt;/code&gt; 関数にはプラグインが必要です。</target>
        </trans-unit>
        <trans-unit id="13169eef82ea18f6be52b317766d61e85fb86452" translate="yes" xml:space="preserve">
          <source>As shown in the discussion for &lt;code&gt;&lt;a href=&quot;append&quot;&gt;.append()&lt;/a&gt;&lt;/code&gt;, normally when an element is inserted somewhere in the DOM, it is moved from its old location. So, given the code:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;append&quot;&gt;.append()&lt;/a&gt;&lt;/code&gt; の説明で示したように、通常、要素がDOMのどこかに挿入されると、要素は元の場所から移動されます。したがって、コードを考えると：</target>
        </trans-unit>
        <trans-unit id="9416a212e0a7d124a45507d921441a01dcaf27ce" translate="yes" xml:space="preserve">
          <source>As soon as the image has been loaded, the handler is called.</source>
          <target state="translated">画像が読み込まれるとすぐにハンドラが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9fbcc855597e08732bfa078cc0d722192c2b8501" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.blur()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;blur&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;blur&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.blur()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;blur&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;blur&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e32ce36fd15cb537e0ea280bfcd9256cab59ddb4" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.change()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;change&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;change&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.change()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;change&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;change&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2efac081f23856e664536fe7d96a41295e3d2278" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.click()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;click&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;click&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.click()&lt;/code&gt; メソッドがためだけの速記である &lt;code&gt;.on( &quot;click&quot;, handler )&lt;/code&gt; 、デタッチ使用可能です &lt;code&gt;.off( &quot;click&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8f17ef5e115e505ebe8539b7bfaa675a611e2a03" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.contextmenu()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;contextmenu&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;contextmenu&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.contextmenu()&lt;/code&gt; メソッドのためだけ速記です &lt;code&gt;.on( &quot;contextmenu&quot;, handler )&lt;/code&gt; 使用可能で取り外し、 &lt;code&gt;.off( &quot;contextmenu&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1cf9f2c164dd156c7846c039b04784be32aa4d7" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.dblclick()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;dblclick&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;dblclick&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.dblclick()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;dblclick&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;dblclick&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="793cecac7d04330d4ba3e423be8675fd31e9b2cf" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.error()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;error&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;error&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.error()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;error&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;error&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72be964990eae112061156672059a81e0dc52679" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.focus()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;focus&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;focus&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.focus()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;focus&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;focus&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="06fcd1e538d69d16cab9743da39e1665c944d3b7" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.focusin()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;focusin&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;focusin&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.focusin()&lt;/code&gt; メソッドがためだけの速記である &lt;code&gt;.on( &quot;focusin&quot;, handler )&lt;/code&gt; 、取り外しが使用可能である &lt;code&gt;.off( &quot;focusin&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="46d8bdb755970968552cb2e806ec2af9e939e76c" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.focusout()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;focusout&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;focusout&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.focusout()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;focusout&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;focusout&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94a7c28e2049c4899d33f1e345ce3f78d18c887b" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.keydown()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;keydown&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;keydown&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.keydown()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;keydown&quot;, handler )&lt;/code&gt; 、脱着が使用可能である &lt;code&gt;.off( &quot;keydown&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="41da67cd941dc2e9d62bcb2fa8eaede0e8459f37" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.keypress()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;keypress&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;keypress&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.keypress()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;keypress&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;keypress&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="82e06ddeafd1eed6dc3231a50263b7f238056455" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.keyup()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;keyup&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;keyup&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.keyup()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;keyup&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;keyup&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba6e6e1990debe8af91f41d664f095238af393b6" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mousedown()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mousedown&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mousedown&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.mousedown()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;mousedown&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;mousedown&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8eaa7f5a31898b0d6a479d83525dd7ec896de2fb" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mouseenter()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mouseenter&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mouseenter&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.mouseenter()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;mouseenter&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;mouseenter&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2928bc1044dc3971651291ecc00775539b48c933" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mouseleave()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mouseleave&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mouseleave&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.mouseleave()&lt;/code&gt; メソッドのためだけ速記です &lt;code&gt;.on( &quot;mouseleave&quot;, handler )&lt;/code&gt; 使用可能で取り外し、 &lt;code&gt;.off( &quot;mouseleave&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3d851ab9d652544cef9c2a70feadb5248a4d9241" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mousemove()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mousemove&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mousemove&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.mousemove()&lt;/code&gt; メソッドのためだけ速記です &lt;code&gt;.on( &quot;mousemove&quot;, handler )&lt;/code&gt; 使用可能で取り外し、 &lt;code&gt;.off( &quot;mousemove&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a7b6b5955c63f72813097921d2874f5d372a83f8" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mouseout()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mouseout&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mouseout&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.mouseout()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;mouseout&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;mouseout&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d040f736adc22a1019b5b2bc1f80daa56737d172" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mouseover()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mouseover&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mouseover&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.mouseover()&lt;/code&gt; メソッドはただの省略形です &lt;code&gt;.on( &quot;mouseover&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;mouseover&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="61e0f17ee173d933a88cd897a13169c4cf56e7cc" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.mouseup()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;mouseup&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;mouseup&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.mouseup()&lt;/code&gt; メソッドのためだけ速記です &lt;code&gt;.on( &quot;mouseup&quot;, handler )&lt;/code&gt; 使用可能で取り外し、 &lt;code&gt;.off( &quot;mouseup&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="873da6be344a0d0eb199a76c528f0b8203cfaa2d" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.resize()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;resize&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;resize&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.resize()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;resize&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;resize&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="81d16b093824b341f82dec86c38ad28b6a4e04cc" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.scroll()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;scroll&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;scroll&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.scroll()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;scroll&quot;, handler )&lt;/code&gt; 、デタッチ使用可能です &lt;code&gt;.off( &quot;scroll&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="51d128450a11521ab1b0dcf0f7e52e2b736700e3" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.select()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;select&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;select&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.select()&lt;/code&gt; メソッドがためだけの速記である &lt;code&gt;.on( &quot;select&quot;, handler )&lt;/code&gt; 、デタッチ使用可能です &lt;code&gt;.off( &quot;select&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="72ef76fdbbf492e23fd862648d4d5d66933b2ef9" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.submit()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;submit&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;submit&quot; )&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.submit()&lt;/code&gt; メソッドがためだけの速記である &lt;code&gt;.on( &quot;submit&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;submit&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a113ed3c7bad61421272e8835cbb4ffd1033ae4d" translate="yes" xml:space="preserve">
          <source>As the &lt;code&gt;.unload()&lt;/code&gt; method is just a shorthand for &lt;code&gt;.on( &quot;unload&quot;, handler )&lt;/code&gt;, detaching is possible using &lt;code&gt;.off( &quot;unload&quot; )&lt;/code&gt;.</source>
          <target state="translated">以下のよう &lt;code&gt;.unload()&lt;/code&gt; メソッドは、ちょうどの省略形です &lt;code&gt;.on( &quot;unload&quot;, handler )&lt;/code&gt; 、デタッチ使用可能である &lt;code&gt;.off( &quot;unload&quot; )&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c0a32d557fef41ee09fd9115f1e37ea31879c97d" translate="yes" xml:space="preserve">
          <source>As the element is clicked repeatedly, the messages alternate:</source>
          <target state="translated">要素が繰り返しクリックされると、メッセージが交互に表示されます。</target>
        </trans-unit>
        <trans-unit id="ca3ce62d362c76a6c59e1cb96df08c8205e39cdb" translate="yes" xml:space="preserve">
          <source>As the return value is a jQuery object, which contains an array, it's very common to call &lt;code&gt;.get()&lt;/code&gt; on the result to work with a basic array.</source>
          <target state="translated">戻り値は配列を含むjQueryオブジェクトであるため、基本的な配列を処理するために結果に対して &lt;code&gt;.get()&lt;/code&gt; を呼び出すことは非常に一般的です。</target>
        </trans-unit>
        <trans-unit id="40571ef97d237fc395c12a234f6fe0a13fc08dd1" translate="yes" xml:space="preserve">
          <source>As with &lt;code&gt;.on()&lt;/code&gt;, you can pass &lt;code&gt;events&lt;/code&gt; as an object instead of specifying an &lt;code&gt;events&lt;/code&gt; string and &lt;code&gt;handler&lt;/code&gt; function as separate arguments. The keys for the &lt;code&gt;events&lt;/code&gt; object are events and/or namespaces; the values are handler functions or the special value &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">同様に &lt;code&gt;.on()&lt;/code&gt; 、あなたが渡すことができ &lt;code&gt;events&lt;/code&gt; の代わりに指定の対象となる &lt;code&gt;events&lt;/code&gt; 文字列と &lt;code&gt;handler&lt;/code&gt; 別々の引数としての機能を。 &lt;code&gt;events&lt;/code&gt; オブジェクトのキーは、イベントや名前空間です。値はハンドラー関数または特別な値 &lt;code&gt;false&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ffce140bc62bef3df132a8a35fcaec913eebc30c" translate="yes" xml:space="preserve">
          <source>As with other pseudo-class selectors (those that begin with a &quot;:&quot;) it is recommended to precede it with a tag name or some other selector; otherwise, the universal selector ( &quot;*&quot; ) is implied. In other words, the bare &lt;code&gt;$( &quot;:enabled&quot; )&lt;/code&gt; is equivalent to &lt;code&gt;$( &quot;*:enabled&quot; )&lt;/code&gt;, so &lt;code&gt;$( &quot;input:enabled&quot; )&lt;/code&gt; or similar should be used instead.</source>
          <target state="translated">他の疑似クラスセレクター（ &quot;：&quot;で始まるもの）と同様に、タグ名または他のセレクターをその前に置くことをお勧めします。それ以外の場合は、ユニバーサルセレクター（ &quot;*&quot;）が暗黙指定されます。つまり、必要最低限​​の &lt;code&gt;$( &quot;:enabled&quot; )&lt;/code&gt; は &lt;code&gt;$( &quot;*:enabled&quot; )&lt;/code&gt; ：enabled&quot;）と同等なので、代わりに &lt;code&gt;$( &quot;input:enabled&quot; )&lt;/code&gt; などを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="91c7ebdcc15f6d9b2214e27d79e62056968dc760" translate="yes" xml:space="preserve">
          <source>As with other pseudo-class selectors (those that begin with a &quot;:&quot;), it is recommended to precede &lt;code&gt;:focus&lt;/code&gt; with a tag name or some other selector; otherwise, the universal selector ( &quot;*&quot; ) is implied. In other words, the bare &lt;code&gt;$( &quot;:focus&quot; )&lt;/code&gt; is equivalent to &lt;code&gt;$( &quot;*:focus&quot; )&lt;/code&gt;. If you are looking for the currently focused element, &lt;code&gt;$( document.activeElement )&lt;/code&gt; will retrieve it without having to search the whole DOM tree.</source>
          <target state="translated">他の疑似クラスセレクター（ &quot;：&quot;で始まるもの）と同様に、 &lt;code&gt;:focus&lt;/code&gt; の前にタグ名または他のセレクターを置くことをお勧めします。それ以外の場合は、ユニバーサルセレクター（ &quot;*&quot;）が暗黙指定されます。つまり、必要最低限​​の &lt;code&gt;$( &quot;:focus&quot; )&lt;/code&gt; は &lt;code&gt;$( &quot;*:focus&quot; )&lt;/code&gt; と同等です。現在フォーカスされている要素を探している場合、 &lt;code&gt;$( document.activeElement )&lt;/code&gt; は、DOMツリー全体を検索する必要なしに要素を取得します。</target>
        </trans-unit>
        <trans-unit id="647e18f3f935a3fd73427c4d7d11bea1159212ab" translate="yes" xml:space="preserve">
          <source>As with other pseudo-class selectors (those that begin with a &quot;:&quot;), it is recommended to precede it with a tag name or some other selector; otherwise, the universal selector (&quot;*&quot;) is implied. In other words, the bare &lt;code&gt;$(':disabled')&lt;/code&gt; is equivalent to &lt;code&gt;$('*:disabled')&lt;/code&gt;, so &lt;code&gt;$('input:disabled')&lt;/code&gt; or similar should be used instead.</source>
          <target state="translated">他の疑似クラスセレクター（ &quot;：&quot;で始まるもの）と同様に、タグ名または他のセレクターをその前に置くことをお勧めします。それ以外の場合は、ユニバーサルセレクター（ &quot;*&quot;）が暗黙指定されます。つまり、必要最低限​​の &lt;code&gt;$(':disabled')&lt;/code&gt; は &lt;code&gt;$('*:disabled')&lt;/code&gt; ：disabled'）と同等なので、代わりに &lt;code&gt;$('input:disabled')&lt;/code&gt; などを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="dc98d26ed4dcbb8b34483a0df24a4492b6dd2a42" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;.prop()&lt;/code&gt; method, the &lt;code&gt;.css()&lt;/code&gt; method makes setting properties of elements quick and easy. This method can take either a property name and value as separate parameters, or a single object of key-value pairs.</source>
          <target state="translated">同様に &lt;code&gt;.prop()&lt;/code&gt; メソッド、 &lt;code&gt;.css()&lt;/code&gt; メソッドは、迅速かつ簡単に要素のプロパティを設定します。このメソッドは、プロパティ名と値を別々のパラメーターとして受け取るか、キーと値のペアの単一のオブジェクトを受け取ります。</target>
        </trans-unit>
        <trans-unit id="7f0f5f64ced28ad3c6ea1455c27eb3c84bd6fc11" translate="yes" xml:space="preserve">
          <source>As would:</source>
          <target state="translated">そうだな</target>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="2c35a85354eb67c444afe51f46f20865d4490ff1" translate="yes" xml:space="preserve">
          <source>At its simplest, the &lt;code&gt;$.ajax()&lt;/code&gt; function can be called with no arguments:</source>
          <target state="translated">最も単純な場合、 &lt;code&gt;$.ajax()&lt;/code&gt; 関数は引数なしで呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="eebe9a39cd20a1f9276dc5c15c849b02e2a3d064" translate="yes" xml:space="preserve">
          <source>At present, the only operations supported on plain JavaScript objects wrapped in jQuery are: &lt;code&gt;.data()&lt;/code&gt;,&lt;code&gt;.prop()&lt;/code&gt;,&lt;code&gt;.on()&lt;/code&gt;, &lt;code&gt;.off()&lt;/code&gt;, &lt;code&gt;.trigger()&lt;/code&gt; and &lt;code&gt;.triggerHandler()&lt;/code&gt;. The use of &lt;code&gt;.data()&lt;/code&gt; (or any method requiring &lt;code&gt;.data()&lt;/code&gt;) on a plain object will result in a new property on the object called jQuery{randomNumber} (eg. jQuery123456789).</source>
          <target state="translated">現時点では、無地のJavaScriptでサポートされる唯一の操作は、jQueryのに包まれたオブジェクトです： &lt;code&gt;.data()&lt;/code&gt; 、 &lt;code&gt;.prop()&lt;/code&gt; 、 &lt;code&gt;.on()&lt;/code&gt; 、 &lt;code&gt;.off()&lt;/code&gt; 、 &lt;code&gt;.trigger()&lt;/code&gt; と &lt;code&gt;.triggerHandler()&lt;/code&gt; 。プレーンオブジェクトで &lt;code&gt;.data()&lt;/code&gt; （または &lt;code&gt;.data()&lt;/code&gt; を必要とするメソッド）を使用すると、jQuery {randomNumber}（jQuery123456789など）というオブジェクトの新しいプロパティが生成されます。</target>
        </trans-unit>
        <trans-unit id="ecb41aecb43a37f1f4714367c6764a2e3a82c718" translate="yes" xml:space="preserve">
          <source>Attach a function to be executed before an Ajax request is sent. This is an Ajax Event.</source>
          <target state="translated">Ajaxリクエストを送信する前に実行する関数を添付します。これはAjaxイベントです。</target>
        </trans-unit>
        <trans-unit id="0ef30079b9b383f7f9081a653a7de0d8d877983e" translate="yes" xml:space="preserve">
          <source>Attach a function to be executed whenever an Ajax request completes successfully. This is an Ajax Event.</source>
          <target state="translated">Ajaxリクエストが正常に完了したときに実行される関数を添付します。これはAjaxイベントです。</target>
        </trans-unit>
        <trans-unit id="65abde1e51059fef7b669098c53e4240309a9091" translate="yes" xml:space="preserve">
          <source>Attach a handler to an event for the elements.</source>
          <target state="translated">要素のイベントにハンドラを付けます。</target>
        </trans-unit>
        <trans-unit id="9520173cdfb3475761e92ec0dc17b67944253d23" translate="yes" xml:space="preserve">
          <source>Attach a handler to an event for the elements. The handler is executed at most once per element per event type.</source>
          <target state="translated">要素のイベントにハンドラをアタッチします。ハンドラはイベントタイプごとに要素ごとに最大1回実行されます。</target>
        </trans-unit>
        <trans-unit id="dd1a0870e2a8de2f0f02247937af519036bbdfed" translate="yes" xml:space="preserve">
          <source>Attach a handler to one or more events for all elements that match the selector, now or in the future, based on a specific set of root elements.</source>
          <target state="translated">特定のルート要素のセットに基づいて、現在または将来、セレクタにマッチするすべての要素のための1つまたは複数のイベントにハンドラをアタッチします。</target>
        </trans-unit>
        <trans-unit id="98c3dfba5b088abc1105aa5e7a293d550b555877" translate="yes" xml:space="preserve">
          <source>Attach an event handler for all elements which match the current selector, now and in the future.</source>
          <target state="translated">現在および将来、現在のセレクタにマッチするすべての要素のイベントハンドラをアタッチします。</target>
        </trans-unit>
        <trans-unit id="730a1f9809417de4200e7e766d6835ae722f6f2b" translate="yes" xml:space="preserve">
          <source>Attach an event handler function for one or more events to the selected elements.</source>
          <target state="translated">選択された要素に1つ以上のイベントのためのイベントハンドラ機能を付けます。</target>
        </trans-unit>
        <trans-unit id="7718624e007ddcd5de3d2599efb4ce26ce4be45a" translate="yes" xml:space="preserve">
          <source>Attach and trigger custom (non-browser) events.</source>
          <target state="translated">カスタム(非ブラウザ)イベントをアタッチしてトリガーします。</target>
        </trans-unit>
        <trans-unit id="7d1c1d28d6c7b408d400d9e7372e897fd8a3d9d5" translate="yes" xml:space="preserve">
          <source>Attach multiple event handlers simultaneously using a plain object.</source>
          <target state="translated">プレーンオブジェクトを使用して、複数のイベントハンドラを同時にアタッチします。</target>
        </trans-unit>
        <trans-unit id="e59663e406a36fe62a2952e44db5f1322fece4b8" translate="yes" xml:space="preserve">
          <source>Attach multiple events&amp;mdash;one on &lt;code&gt;mouseenter&lt;/code&gt; and one on &lt;code&gt;mouseleave&lt;/code&gt; to the same element:</source>
          <target state="translated">複数のイベントをアタッチします。1つは &lt;code&gt;mouseenter&lt;/code&gt; で、もう1つは &lt;code&gt;mouseleave&lt;/code&gt; で同じ要素にアタッチします。</target>
        </trans-unit>
        <trans-unit id="29a3d64891aaf52b7afc66f87a6cb8ea96ce92e0" translate="yes" xml:space="preserve">
          <source>Attach the event handler to any element:</source>
          <target state="translated">イベントハンドラを任意の要素にアタッチします。</target>
        </trans-unit>
        <trans-unit id="371fb45c710124ad9004e4e093e3213b75dafc38" translate="yes" xml:space="preserve">
          <source>Attach the event handler to the document:</source>
          <target state="translated">イベントハンドラをドキュメントに添付します。</target>
        </trans-unit>
        <trans-unit id="b4efd20033489a911c81c3440ceaecdb239411e0" translate="yes" xml:space="preserve">
          <source>Attaches a change event to the select that gets the text for each selected option and writes them in the div. It then triggers the event for the initial text draw.</source>
          <target state="translated">選択された各オプションのテキストを取得して div に書き込む変更イベントを select にアタッチします。そして、最初のテキスト描画のイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="b2556642260143a75c973b3604f203f2a75fc571" translate="yes" xml:space="preserve">
          <source>Attaching many delegated event handlers near the top of the document tree can degrade performance. Each time the event occurs, jQuery must compare all selectors of all attached events of that type to every element in the path from the event target up to the top of the document. For best performance, attach delegated events at a document location as close as possible to the target elements. Avoid excessive use of &lt;code&gt;document&lt;/code&gt; or &lt;code&gt;document.body&lt;/code&gt; for delegated events on large documents.</source>
          <target state="translated">ドキュメントツリーの上部近くに多くの委任されたイベントハンドラーをアタッチすると、パフォーマンスが低下する可能性があります。イベントが発生するたびに、jQueryは、そのタイプのすべての添付イベントのすべてのセレクターを、イベントターゲットからドキュメントの先頭までのパスのすべての要素と比較する必要があります。最高のパフォーマンスを得るには、委任されたイベントを、可能な限りターゲット要素に近いドキュメントの場所に添付します。大きなドキュメントでの委任されたイベントに対して &lt;code&gt;document&lt;/code&gt; または &lt;code&gt;document.body&lt;/code&gt; を過度に使用しないでください。</target>
        </trans-unit>
        <trans-unit id="438031db07e8dbb99581a0eddfde53f05f0428e9" translate="yes" xml:space="preserve">
          <source>Attempting to set focus to a hidden element causes an error in Internet Explorer. Take care to only use &lt;code&gt;.focus()&lt;/code&gt; on elements that are visible. To run an element's focus event handlers without setting focus to the element, use &lt;code&gt;.triggerHandler( &quot;focus&quot; )&lt;/code&gt; instead of &lt;code&gt;.focus()&lt;/code&gt;.</source>
          <target state="translated">非表示の要素にフォーカスを設定しようとすると、Internet Explorerでエラーが発生します。表示されている要素に対してのみ &lt;code&gt;.focus()&lt;/code&gt; を使用するように注意してください。要素にフォーカスを設定せずに要素のフォーカスイベントハンドラーを実行するには、 &lt;code&gt;.focus()&lt;/code&gt; の代わりに.triggerHandler（ &lt;code&gt;.triggerHandler( &quot;focus&quot; )&lt;/code&gt; 使用します。</target>
        </trans-unit>
        <trans-unit id="5935930da04000b8b8eeb03cf2914fc69d607c66" translate="yes" xml:space="preserve">
          <source>Attribute Contains Prefix Selector [name|=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">属性にプレフィックスセレクターが含まれています[name | =&amp;rdquo; value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="4d1ad996a352520e7ac2391dfc0c939bd6487d46" translate="yes" xml:space="preserve">
          <source>Attribute Contains Selector [name*=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">属性にセレクターが含まれています[name * =&amp;rdquo; value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="3ee11217ff69c7ef9589cf9e185fe878fe24753b" translate="yes" xml:space="preserve">
          <source>Attribute Contains Word Selector [name~=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">属性に単語セレクターが含まれています[name〜=&amp;rdquo; value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="dfd242a454707599c6b641783fd975c362e1c233" translate="yes" xml:space="preserve">
          <source>Attribute Ends With Selector [name$=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">属性はセレクターで終わります[name $ =&amp;rdquo; value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="bfa0e758b75f974a165bd79193bc0240ec4d7418" translate="yes" xml:space="preserve">
          <source>Attribute Equals Selector [name=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">属性がセレクターに等しい[name =&amp;rdquo; value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="21f8a624fb6667c34833bbdf8a2ed1eb35cec8e2" translate="yes" xml:space="preserve">
          <source>Attribute Not Equal Selector [name!=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">属性が等しくないセレクタ[name！=&amp;rdquo; value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="449f0a00c9c533ae347d525a683eefcfc4b9d147" translate="yes" xml:space="preserve">
          <source>Attribute Starts With Selector [name^=&amp;rdquo;value&amp;rdquo;]</source>
          <target state="translated">属性はセレクタで始まります[name ^ =&amp;rdquo; value&amp;rdquo;]</target>
        </trans-unit>
        <trans-unit id="8bbfff9b4e4aa8644187046a2632e35354218de2" translate="yes" xml:space="preserve">
          <source>Attribute contains prefix selector [name|=&amp;quot;value&amp;quot;]</source>
          <target state="translated">属性にプレフィックスセレクタが含まれています[name | = &quot;value&quot;]</target>
        </trans-unit>
        <trans-unit id="1a7e61618b3b0f87a02ee49b9054c696f0c45dba" translate="yes" xml:space="preserve">
          <source>Attribute contains selector [name*=&amp;quot;value&amp;quot;]</source>
          <target state="translated">属性にセレクターが含まれています[name * = &quot;value&quot;]</target>
        </trans-unit>
        <trans-unit id="19db7f23c70a5f6ec8b0fafae22e0abd21b0b931" translate="yes" xml:space="preserve">
          <source>Attribute contains word selector [name~=&amp;quot;value&amp;quot;]</source>
          <target state="translated">属性に単語セレクターが含まれています[name〜= &quot;value&quot;]</target>
        </trans-unit>
        <trans-unit id="35a7afd577f64287ce640b8b8fd9b4862c555777" translate="yes" xml:space="preserve">
          <source>Attribute ends with selector [name$=&amp;quot;value&amp;quot;]</source>
          <target state="translated">属性はセレクタ[name $ = &quot;value&quot;]で終わります</target>
        </trans-unit>
        <trans-unit id="5eb7374b195c63b7d39ec6e8e1c8f5e6044f7dd8" translate="yes" xml:space="preserve">
          <source>Attribute equals selector [name=&amp;quot;value&amp;quot;]</source>
          <target state="translated">属性がセレクターと等しい[name = &quot;value&quot;]</target>
        </trans-unit>
        <trans-unit id="a863fb34a866da876375fb87cfdcad9ce46fa4b9" translate="yes" xml:space="preserve">
          <source>Attribute not equal selector [name!=&amp;quot;value&amp;quot;]</source>
          <target state="translated">属性がセレクターと等しくありません[name！= &quot;value&quot;]</target>
        </trans-unit>
        <trans-unit id="6f12c175f84bd5ba7d70e1134e14adf684dac500" translate="yes" xml:space="preserve">
          <source>Attribute starts with selector [name^=&amp;quot;value&amp;quot;]</source>
          <target state="translated">属性はセレクター[name ^ = &quot;value&quot;]で始まります</target>
        </trans-unit>
        <trans-unit id="c50113839a2bac88d41c7500f055b1ea998aa588" translate="yes" xml:space="preserve">
          <source>Attribute values in selector expressions &lt;b&gt;must&lt;/b&gt; follow the rules for W3C CSS selectors; in general, that means anything other than a &lt;a href=&quot;https://www.w3.org/TR/CSS21/syndata.html#value-def-identifier&quot;&gt;valid identifier&lt;/a&gt; should be surrounded by quotation marks.</source>
          <target state="translated">セレクター式の属性値は、W3C CSSセレクターのルールに従う&lt;b&gt;必要があり&lt;/b&gt;ます。一般に、これは&lt;a href=&quot;https://www.w3.org/TR/CSS21/syndata.html#value-def-identifier&quot;&gt;有効な識別子&lt;/a&gt;以外のものは引用符で囲む必要があることを意味します。</target>
        </trans-unit>
        <trans-unit id="d2aec391cf1973409ad2b68ce96329b520f51268" translate="yes" xml:space="preserve">
          <source>Attributes vs. Properties</source>
          <target state="translated">属性とプロパティ</target>
        </trans-unit>
        <trans-unit id="9ef0fd5bc70085a148e41e4440c88433b97d4806" translate="yes" xml:space="preserve">
          <source>Augment the resulting array by returning an array inside the function.</source>
          <target state="translated">関数内で配列を返すことで、結果の配列を拡張します。</target>
        </trans-unit>
        <trans-unit id="f769ae6c251653928e85afb1703e08f8dc12503e" translate="yes" xml:space="preserve">
          <source>Available flags are:</source>
          <target state="translated">利用可能なフラグは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">基本的な使い方</target>
        </trans-unit>
        <trans-unit id="809ade9c90d5ba87eee5ff1513edd2af2b7d3f3d" translate="yes" xml:space="preserve">
          <source>Be aware, however, that jQuery's event binding subsystem assigns a unique id to each event handling function in order to track it when it is used to specify the function to be unbound. The function represented by &lt;code&gt;jQuery.proxy()&lt;/code&gt; is seen as a single function by the event subsystem, even when it is used to bind different contexts. To avoid unbinding the wrong handler, use a unique event namespace for binding and unbinding (e.g., &lt;code&gt;&quot;click.myproxy1&quot;&lt;/code&gt;) rather than specifying the proxied function during unbinding.</source>
          <target state="translated">ただし、jQueryのイベントバインディングサブシステムは、アンバインドする関数を指定するために使用されるときに追跡するために、各イベント処理関数に一意のIDを割り当てることに注意してください。 &lt;code&gt;jQuery.proxy()&lt;/code&gt; で表される関数は、異なるコンテキストをバインドするために使用されている場合でも、イベントサブシステムによって単一の関数として認識されます。誤ったハンドラーのバインド &lt;code&gt;&quot;click.myproxy1&quot;&lt;/code&gt; を回避するには、バインド解除時にプロキシ関数を指定するのではなく、バインドとバインド解除に一意のイベント名前空間（「click.myproxy1」など）を使用します。</target>
        </trans-unit>
        <trans-unit id="155e75714f44125d3e5465a30666f64968695c99" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;$.Callbacks()&lt;/code&gt; supports a list of flags rather than just one, setting several flags has a cumulative effect similar to &quot;&amp;amp;&amp;amp;&quot;. This means it's possible to combine flags to create callback lists that, say, both are</source>
          <target state="translated">&lt;code&gt;$.Callbacks()&lt;/code&gt; は1つではなくフラグのリストをサポートするため、複数のフラグを設定すると、 &quot;&amp;amp;&amp;amp;&quot;と同様の累積的な効果があります。つまり、フラグを組み合わせてコールバックリストを作成することが可能です。</target>
        </trans-unit>
        <trans-unit id="102f63f32cf11fc98c4592b357e93b6acf9190f8" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;$.browser&lt;/code&gt; uses &lt;code&gt;navigator.userAgent&lt;/code&gt; to determine the platform, it is vulnerable to spoofing by the user or misrepresentation by the browser itself. It is always best to avoid browser-specific code entirely where possible. Instead of relying on &lt;code&gt;$.browser&lt;/code&gt; it's better to use libraries like &lt;a href=&quot;https://modernizr.com/&quot;&gt;Modernizr&lt;/a&gt;.</source>
          <target state="translated">ので &lt;code&gt;$.browser&lt;/code&gt; 使用しています &lt;code&gt;navigator.userAgent&lt;/code&gt; をプラットフォームを決定するために、それはブラウザ自体によって、ユーザーまたは不実表示によるなりすましに対して脆弱です。可能な限り、ブラウザ固有のコードを完全に回避することが常に最善です。 &lt;code&gt;$.browser&lt;/code&gt; に依存する代わりに、&lt;a href=&quot;https://modernizr.com/&quot;&gt;Modernizr&lt;/a&gt;などのライブラリを使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="fba62bc075131985dca041eade026044d9c0b20b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:animated&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:animated&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:animated&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:animated&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">なぜなら &lt;code&gt;:animated&lt;/code&gt; 、jQueryの延長ではなく、CSSの仕様の一部で使用して照会 &lt;code&gt;:animated&lt;/code&gt; ネイティブDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:animated&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを得るには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:animated&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2c0ba32512408cd28c001e239134c80a4c8a1ec7" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:button&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:button&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:button&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:button&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ので &lt;code&gt;:button&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:button&lt;/code&gt; ネイティブのDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:button&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを得るには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:button&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e280d817fea7a068dc01c630e3452a0b8762aa87" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:checkbox&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:checkbox&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;checkbox&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">ので &lt;code&gt;:checkbox&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会する &lt;code&gt;:checkbox&lt;/code&gt; ネイティブのDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザでより良いパフォーマンスを得るには、代わりに &lt;code&gt;[type=&quot;checkbox&quot;]&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="81d81e9c3fd84ac8ff8994f846e21ab25f9f588b" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:eq()&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:eq()&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;$(&quot;your-pure-css-selector&quot;).eq(index)&lt;/code&gt; instead.</source>
          <target state="translated">ので &lt;code&gt;:eq()&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会し &lt;code&gt;:eq()&lt;/code&gt; ネイティブのDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザーでより良いパフォーマンスを得るには、代わりに &lt;code&gt;$(&quot;your-pure-css-selector&quot;).eq(index)&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="df1efd09e52b8adadf50e4ef32256dff3e5848e2" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:even&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:even&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:even&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:even&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ので &lt;code&gt;:even&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:even&lt;/code&gt; ネイティブDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:even&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを実現するには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:even&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9cfc302df575a97a73bcc8eb11b4b03cf75bd1f4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:file&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:file&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;file&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">ので &lt;code&gt;:file&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:file&lt;/code&gt; ネイティブのDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザでより良いパフォーマンスを得るには、代わりに &lt;code&gt;[type=&quot;file&quot;]&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="9186afa117ea9cf6bd900cf6c121ab212431f201" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:first&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:first&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:first&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:first&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ので &lt;code&gt;:first&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:first&lt;/code&gt; 缶がネイティブDOMが提供するパフォーマンス向上の利点を取ることはありませ &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:first&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを実現するには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:first&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="9c618e65c204a65f50c5e7e5d92acb9c2506387e" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:gt()&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:gt()&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;$(&quot;your-pure-css-selector&quot;).slice(index)&lt;/code&gt; instead.</source>
          <target state="translated">ため &lt;code&gt;:gt()&lt;/code&gt; 、jQueryの拡張はなく、CSS仕様の一部であり、使用するクエリ &lt;code&gt;:gt()&lt;/code&gt; ネイティブDOMによって提供されるパフォーマンスの向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザーでより良いパフォーマンスを得るには、代わりに &lt;code&gt;$(&quot;your-pure-css-selector&quot;).slice(index)&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="67c3d2c92b3cb374d28f6ec3ee73cfe8c216a3f1" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:has()&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:has()&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;$( &quot;your-pure-css-selector&quot; ).has( selector/DOMElement )&lt;/code&gt; instead.</source>
          <target state="translated">ので &lt;code&gt;:has()&lt;/code&gt; 、jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:has()&lt;/code&gt; ネイティブのDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザーでのパフォーマンスを向上させるには、代わりに &lt;code&gt;$( &quot;your-pure-css-selector&quot; ).has( selector/DOMElement )&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="b79c9bf2004c81b510c41f6754dc7a5ab0349048" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:header&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:header&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:header&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:header&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ため &lt;code&gt;:header&lt;/code&gt; jQueryの拡張はなく、CSS仕様の一部であり、使用するクエリ &lt;code&gt;:header&lt;/code&gt; ネイティブDOMによって提供されるパフォーマンスの向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:header&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを得るには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:header&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="df0d7df1ba139b99f1b5b05d109c3112e9b83f61" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:hidden&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:hidden&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:hidden&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:hidden&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ので &lt;code&gt;:hidden&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用してクエリ &lt;code&gt;:hidden&lt;/code&gt; ネイティブDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:hidden&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを得るには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:hidden&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d2315d92211dbb5fe9630dde928552295843e6f5" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:image&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:image&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;image&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">ため &lt;code&gt;:image&lt;/code&gt; jQueryの拡張はなく、CSS仕様の一部であり、使用するクエリ &lt;code&gt;:image&lt;/code&gt; ネイティブDOMによって提供されるパフォーマンスの向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザでより良いパフォーマンスを得るには、代わりに &lt;code&gt;[type=&quot;image&quot;]&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="7b87566111c4af273bc22b379bd5f9124269f7f5" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:input&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:input&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:input&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:input&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ため &lt;code&gt;:input&lt;/code&gt; jQueryの拡張はなく、CSS仕様の一部であり、使用するクエリ &lt;code&gt;:input&lt;/code&gt; ネイティブDOMによって提供されるパフォーマンスの向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:input&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを得るには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:input&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="166fbaeb73a5a49004db24f41430b109101e1d32" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:last&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:last&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:last&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:last&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">なぜなら &lt;code&gt;:last&lt;/code&gt; jQueryの拡張とCSSの仕様の一部ではない、で使用してクエリ &lt;code&gt;:last&lt;/code&gt; ネイティブDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:last&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを得るには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:last&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e44398bef963cf538e451a511d36b27507e47edd" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:lt()&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:lt()&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;$(&quot;your-pure-css-selector&quot;).slice(0, index)&lt;/code&gt; instead.</source>
          <target state="translated">ため &lt;code&gt;:lt()&lt;/code&gt; 、jQueryの拡張はなく、CSS仕様の一部であり、使用するクエリ &lt;code&gt;:lt()&lt;/code&gt; ネイティブDOMによって提供されるパフォーマンスの向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザーでより良いパフォーマンスを得るには &lt;code&gt;$(&quot;your-pure-css-selector&quot;).slice(0, index)&lt;/code&gt; 代わりに$（ &quot;your-pure-css-selector&quot;）。slice（0、index）を使用してください。</target>
        </trans-unit>
        <trans-unit id="e4d546b8017e87deed3fa24827c782a3482dec3a" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:odd&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:odd&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:odd&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:odd&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ので &lt;code&gt;:odd&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:odd&lt;/code&gt; 缶がネイティブDOMが提供するパフォーマンス向上の利点を取ることはありませ &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:odd&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを実現するには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:odd&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e4636a2dcb2de766c267501224d0877ed6e9918c" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:parent&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:parent&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:parent&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:parent&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ので &lt;code&gt;:parent&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:parent&lt;/code&gt; ネイティブDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:parent&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを得るには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:parent&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="fc6d187ab769466036265e4d155f8b76b70fe708" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:password&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:password&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;password&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">ので &lt;code&gt;:password&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:password&lt;/code&gt; ネイティブのDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザでより良いパフォーマンスを得るには、代わりに &lt;code&gt;[type=&quot;password&quot;]&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="bc37fd11e5c4dc4385cdad98288889e04e8c15b4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:radio&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:radio&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;radio&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">ので &lt;code&gt;:radio&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:radio&lt;/code&gt; ネイティブのDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザでより良いパフォーマンスを得るには、代わりに &lt;code&gt;[type=&quot;radio&quot;]&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="c95325ab72ee389dcb1a96eb39c067ae28e4796f" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:reset&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:reset&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;reset&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">ので &lt;code&gt;:reset&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:reset&lt;/code&gt; ネイティブのDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザでより良いパフォーマンスを得るには、代わりに &lt;code&gt;[type=&quot;reset&quot;]&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="03bef5abf0e51bfe726beee5091dfe8672e55d75" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:selected&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:selected&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:selected&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:selected&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ので &lt;code&gt;:selected&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用してクエリ &lt;code&gt;:selected&lt;/code&gt; ネイティブのDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:selected&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを実現するには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:selected&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6e1d90037209ec897039be5c4a01a3f42990b70c" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:submit&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:submit&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;input[type=&quot;submit&quot;], button[type=&quot;submit&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;:submit&lt;/code&gt; はjQuery拡張であり、CSS仕様の一部ではないため、：submitを使用 &lt;code&gt;:submit&lt;/code&gt; クエリは、ネイティブDOM &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッドによって提供されるパフォーマンスの向上を利用できません。最新のブラウザーでのパフォーマンスを向上させるには、代わりに &lt;code&gt;input[type=&quot;submit&quot;], button[type=&quot;submit&quot;]&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="1078b314d0ec8fdaefc501fbd80cab95e17bb479" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:text&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:text&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;[type=&quot;text&quot;]&lt;/code&gt; instead.</source>
          <target state="translated">ので &lt;code&gt;:text&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会 &lt;code&gt;:text&lt;/code&gt; ネイティブのDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザでより良いパフォーマンスを得るには、代わりに &lt;code&gt;[type=&quot;text&quot;]&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="560816a74940a28f31d1fc729acfed137a26e2ec" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;:visible&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;:visible&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. To achieve the best performance when using &lt;code&gt;:visible&lt;/code&gt; to select elements, first select the elements using a pure CSS selector, then use &lt;a href=&quot;filter&quot;&gt;&lt;code&gt;.filter(&quot;:visible&quot;)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ので &lt;code&gt;:visible&lt;/code&gt; jQueryの拡張はなく、CSS仕様の一部であり、使用するクエリ &lt;code&gt;:visible&lt;/code&gt; 缶ネイティブDOMによって提供されるパフォーマンスの向上を利用しない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。 &lt;code&gt;:visible&lt;/code&gt; を使用して要素を選択するときに最高のパフォーマンスを実現するには、最初に純粋なCSSセレクターを使用して要素を選択し、次に&lt;a href=&quot;filter&quot;&gt; &lt;code&gt;.filter(&quot;:visible&quot;)&lt;/code&gt; を使用し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="02bb2b740533d10901d7713398fd460f693568ed" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;[name!=&quot;value&quot;]&lt;/code&gt; is a jQuery extension and not part of the CSS specification, queries using &lt;code&gt;[name!=&quot;value&quot;]&lt;/code&gt; cannot take advantage of the performance boost provided by the native DOM &lt;code&gt;querySelectorAll()&lt;/code&gt; method. For better performance in modern browsers, use &lt;code&gt;$( &quot;your-pure-css-selector&quot; ).not( &quot;[name='value']&quot; )&lt;/code&gt; instead.</source>
          <target state="translated">ので &lt;code&gt;[name!=&quot;value&quot;]&lt;/code&gt; jQueryの延長ではなく、CSSの仕様の一部であり、使用して照会し &lt;code&gt;[name!=&quot;value&quot;]&lt;/code&gt; ネイティブDOMが提供するパフォーマンス向上の利点を取ることができない &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッド。最新のブラウザーでのパフォーマンスを向上させるには、代わりに &lt;code&gt;$( &quot;your-pure-css-selector&quot; ).not( &quot;[name='value']&quot; )&lt;/code&gt; 使用してください。</target>
        </trans-unit>
        <trans-unit id="57063691614e306ad4ea2a1bec14acee623e5e34" translate="yes" xml:space="preserve">
          <source>Because JavaScript treats 0 as loosely equal to false (i.e. 0 == false, but 0 !== false), to check for the presence of &lt;code&gt;value&lt;/code&gt; within &lt;code&gt;array&lt;/code&gt;, you need to check if it's not equal to (or greater than) -1.</source>
          <target state="translated">JavaScriptは0を大まかにfalseとして扱うため（つまり、0 == false、ただし0！== false）、 &lt;code&gt;array&lt;/code&gt; 内の &lt;code&gt;value&lt;/code&gt; の存在を確認するには、-1と等しくない（またはそれより大きい）かどうかを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="c7c5e2688cc5e2e14c8f9617ca8354d496dcf606" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;a href=&quot;first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting.</source>
          <target state="translated">jQueryの実装ため &lt;code&gt;:nth-&lt;/code&gt; セレクタを厳密CSS仕様から導出される、の値 &lt;code&gt;n&lt;/code&gt; 「1インデックス」され、カウントのような他の選択式の場合1から始まることを意味する&lt;a href=&quot;first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt; jQueryは、JavaScriptの「0インデックス」カウントに従います。</target>
        </trans-unit>
        <trans-unit id="5232024b50f76617575e755c1fa91c3378fab495" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;a href=&quot;first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing three &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$( &quot;li:nth-last-child(1)&quot; )&lt;/code&gt; selects the third, last, &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">jQueryの実装ため &lt;code&gt;:nth-&lt;/code&gt; セレクタを厳密CSS仕様から導出される、の値 &lt;code&gt;n&lt;/code&gt; 「1インデックス」され、カウントのような他の選択式の場合1から始まることを意味する&lt;a href=&quot;first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt; jQueryは、JavaScriptの「0インデックス」カウントに従います。3つの &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; を含む単一の&amp;lt;ul&amp;gt;が与えられると、 &lt;code&gt;$( &quot;li:nth-last-child(1)&quot; )&lt;/code&gt; は3番目の最後の &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; を選択します。</target>
        </trans-unit>
        <trans-unit id="5596c8923129cc6c65ec0f09f3ff76d6920c979c" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;a href=&quot;first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing three &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$('li:nth-last-of-type(1)')&lt;/code&gt; selects the third, last, &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">jQueryの実装ため &lt;code&gt;:nth-&lt;/code&gt; セレクタを厳密CSS仕様から導出される、の値 &lt;code&gt;n&lt;/code&gt; 「1インデックス」され、カウントのような他の選択式の場合1から始まることを意味する&lt;a href=&quot;first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt; jQueryは、JavaScriptの「0インデックス」カウントに従います。3つの &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; を含む単一の&amp;lt;ul&amp;gt;が与えられると、 &lt;code&gt;$('li:nth-last-of-type(1)')&lt;/code&gt; は3番目の最後の &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; を選択します。</target>
        </trans-unit>
        <trans-unit id="5ea5fa4f9a74540fcadf38f86616f47d2d70803e" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;code&gt;:eq()&lt;/code&gt; or &lt;code&gt;:even&lt;/code&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting.</source>
          <target state="translated">jQueryの &lt;code&gt;:nth-&lt;/code&gt; セレクターの実装はCSS仕様から厳密に派生しているため、 &lt;code&gt;n&lt;/code&gt; の値は「1インデックス付き」であり、カウントは1から始まります。 &lt;code&gt;:eq()&lt;/code&gt; や &lt;code&gt;:even&lt;/code&gt; jQuery などの他のセレクター式の場合JavaScriptの「0インデックス」カウント。</target>
        </trans-unit>
        <trans-unit id="18c7c2f80f7cc096128494b692c7bee1d36d9d9a" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;code&gt;:eq()&lt;/code&gt; or &lt;code&gt;:even&lt;/code&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing three &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$( &quot;li:nth-last-child(1)&quot; )&lt;/code&gt; selects the third, last, &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">jQueryの &lt;code&gt;:nth-&lt;/code&gt; セレクターの実装はCSS仕様から厳密に派生しているため、 &lt;code&gt;n&lt;/code&gt; の値は「1インデックス付き」であり、カウントは1から始まります。 &lt;code&gt;:eq()&lt;/code&gt; や &lt;code&gt;:even&lt;/code&gt; jQuery などの他のセレクター式の場合JavaScriptの「0インデックス」カウント。3つの &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; を含む単一の&amp;lt;ul&amp;gt;を指定すると、 &lt;code&gt;$( &quot;li:nth-last-child(1)&quot; )&lt;/code&gt; は3番目の最後の &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; を選択します。</target>
        </trans-unit>
        <trans-unit id="4e55b8aa74165cae99e4a3219bc884520b7812eb" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;code&gt;:eq()&lt;/code&gt; or &lt;code&gt;:even&lt;/code&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing three &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$('li:nth-last-of-type(1)')&lt;/code&gt; selects the third, last, &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">jQueryの &lt;code&gt;:nth-&lt;/code&gt; セレクターの実装はCSS仕様から厳密に派生しているため、 &lt;code&gt;n&lt;/code&gt; の値は「1インデックス付き」であり、カウントは1から始まります。 &lt;code&gt;:eq()&lt;/code&gt; や &lt;code&gt;:even&lt;/code&gt; jQuery などの他のセレクター式の場合JavaScriptの「0インデックス」カウント。3つの &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; を含む単一の&amp;lt;ul&amp;gt;が与えられた場合、 &lt;code&gt;$('li:nth-last-of-type(1)')&lt;/code&gt; は3番目の最後の &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; を選択します。</target>
        </trans-unit>
        <trans-unit id="e4a6c18948e32235339000716e8a8997c1aad84a" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. For other selector expressions such as &lt;code&gt;:eq()&lt;/code&gt; or &lt;code&gt;:even&lt;/code&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing two &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$( &quot;li:nth-child(1)&quot; )&lt;/code&gt; selects the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; while &lt;code&gt;$( &quot;li:eq(1)&quot; )&lt;/code&gt; selects the second.</source>
          <target state="translated">jQueryの &lt;code&gt;:nth-&lt;/code&gt; セレクターの実装はCSS仕様から厳密に派生しているため、 &lt;code&gt;n&lt;/code&gt; の値は「1インデックス付き」であり、カウントは1から始まります。 &lt;code&gt;:eq()&lt;/code&gt; や &lt;code&gt;:even&lt;/code&gt; jQuery などの他のセレクター式の場合JavaScriptの「0インデックス」カウント。2つの &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; を含む単一の&amp;lt;ul&amp;gt;を指定すると、 &lt;code&gt;$( &quot;li:nth-child(1)&quot; )&lt;/code&gt; は最初の &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; を選択し、 &lt;code&gt;$( &quot;li:eq(1)&quot; )&lt;/code&gt; は2番目を選択します。</target>
        </trans-unit>
        <trans-unit id="cf135649f933835bdcbcb1d71b6185dcd9364021" translate="yes" xml:space="preserve">
          <source>Because jQuery's implementation of &lt;code&gt;:nth-&lt;/code&gt; selectors is strictly derived from the CSS specification, the value of &lt;code&gt;n&lt;/code&gt; is &quot;1-indexed&quot;, meaning that the counting starts at 1. jQuery methods like &lt;a href=&quot;first&quot;&gt;&lt;code&gt;.first()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;eq&quot;&gt;&lt;code&gt;.eq()&lt;/code&gt;&lt;/a&gt; jQuery follows JavaScript's &quot;0-indexed&quot; counting. Given a single &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; containing two &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;s, &lt;code&gt;$( &quot;li:nth-child(1)&quot; )&lt;/code&gt; selects the first &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; while &lt;code&gt;$( &quot;li&quot; ).eq( 1 )&lt;/code&gt; selects the second.</source>
          <target state="translated">jQueryの実装ので &lt;code&gt;:nth-&lt;/code&gt; セレクタは厳密にCSSの仕様に由来している、の値 &lt;code&gt;n&lt;/code&gt; が「1インデックス」され、カウントのような1 jQueryの方法で開始することを意味&lt;a href=&quot;first&quot;&gt; &lt;code&gt;.first()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;eq&quot;&gt; &lt;code&gt;.eq()&lt;/code&gt; &lt;/a&gt; jQueryのでは、JavaScriptのを次の「0インデックス」カウント。2つの &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; を含む単一の&amp;lt;ul&amp;gt;が与えられると、 &lt;code&gt;$( &quot;li:nth-child(1)&quot; )&lt;/code&gt; は最初の &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; を選択し、 &lt;code&gt;$( &quot;li&quot; ).eq( 1 )&lt;/code&gt; は2番目の&amp;lt;li&amp;gt;を選択します。</target>
        </trans-unit>
        <trans-unit id="a39895609d1da7069721a251888780642a29dab4" translate="yes" xml:space="preserve">
          <source>Because the handlers are closures that both have &lt;code&gt;message&lt;/code&gt; in their environment, both will display the message</source>
          <target state="translated">ハンドラーはどちらも環境に &lt;code&gt;message&lt;/code&gt; を持つクロージャーであるため、どちらもメッセージを表示します</target>
        </trans-unit>
        <trans-unit id="eb873c2fff1625bd36983841d57f798d8fb056a3" translate="yes" xml:space="preserve">
          <source>Before jQuery 1.7, to stop further handlers from executing after one bound using &lt;code&gt;.live()&lt;/code&gt;, the handler must return &lt;code&gt;false&lt;/code&gt;. Calling &lt;code&gt;.stopPropagation()&lt;/code&gt; will not accomplish this.</source>
          <target state="translated">jQuery 1.7より前の &lt;code&gt;.live()&lt;/code&gt; では、.live（）を使用してバインドされた後のハンドラーの実行を停止するには、ハンドラーが &lt;code&gt;false&lt;/code&gt; を返す必要があります。 &lt;code&gt;.stopPropagation()&lt;/code&gt; を呼び出しても、これは達成されません。</target>
        </trans-unit>
        <trans-unit id="41ef87fdd757c7963c932739a1821aa8b7a83813" translate="yes" xml:space="preserve">
          <source>Before jQuery version 1.12/2.2, the &lt;code&gt;.addClass()&lt;/code&gt; method manipulated the &lt;code&gt;className&lt;/code&gt;&lt;em&gt;property&lt;/em&gt; of the selected elements, not the &lt;code&gt;class&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt;. Once the property was changed, it was the browser that updated the attribute accordingly. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</source>
          <target state="translated">jQueryバージョン1.12 / 2.2より前のバージョンでは、 &lt;code&gt;.addClass()&lt;/code&gt; メソッドは、 &lt;code&gt;class&lt;/code&gt; &lt;em&gt;属性&lt;/em&gt;ではなく、選択された要素の &lt;code&gt;className&lt;/code&gt; &lt;em&gt;プロパティ&lt;/em&gt;を操作していました。プロパティが変更されると、それに応じて属性を更新したのはブラウザでした。この動作の影響は、このメソッドがHTML DOMセマンティクスを持つドキュメント（たとえば、純粋なXMLドキュメントではない）に対してのみ機能することでした。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c66cb765464159d96e2a7ac875b9a4030b673a40" translate="yes" xml:space="preserve">
          <source>Before jQuery version 1.12/2.2, the &lt;code&gt;.removeClass()&lt;/code&gt; method manipulated the &lt;code&gt;className&lt;/code&gt;&lt;em&gt;property&lt;/em&gt; of the selected elements, not the &lt;code&gt;class&lt;/code&gt;&lt;em&gt;attribute&lt;/em&gt;. Once the property was changed, it was the browser that updated the attribute accordingly. This means that when the &lt;code&gt;class&lt;/code&gt; attribute was updated and the last class name was removed, the browser might have set the attribute's value to an empty string instead of removing the attribute completely. An implication of this behavior was that this method only worked for documents with HTML DOM semantics (e.g., not pure XML documents).</source>
          <target state="translated">jQueryバージョン1.12 / 2.2より前のバージョンでは、 &lt;code&gt;.removeClass()&lt;/code&gt; メソッドは、 &lt;code&gt;class&lt;/code&gt; &lt;em&gt;属性&lt;/em&gt;ではなく、選択された要素の &lt;code&gt;className&lt;/code&gt; &lt;em&gt;プロパティ&lt;/em&gt;を操作していました。プロパティが変更されると、それに応じて属性を更新したのはブラウザでした。つまり、 &lt;code&gt;class&lt;/code&gt; 属性が更新され、最後のクラス名が削除された場合、ブラウザーは属性を完全に削除するのではなく、属性の値を空の文字列に設定した可能性があります。この動作の影響は、このメソッドがHTML DOMセマンティクスを持つドキュメント（たとえば、純粋なXMLドキュメントではない）に対してのみ機能することでした。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="49cafa2f2a412ee2e1f802c1bfc7df49a03f4136" translate="yes" xml:space="preserve">
          <source>Before normalizing a vendor-specific CSS property, first determine whether the browser supports the standard property or a vendor-prefixed variation. For example, to check for support of the &lt;code&gt;border-radius&lt;/code&gt; property, see if any variation is a member of a temporary element's &lt;code&gt;style&lt;/code&gt; object.</source>
          <target state="translated">ベンダー固有のCSSプロパティを正規化する前に、まずブラウザが標準のプロパティをサポートするか、ベンダーがプレフィックスを付けたバリエーションをサポートするかを決定します。たとえば、 &lt;code&gt;border-radius&lt;/code&gt; プロパティのサポートを確認するには、一時的な要素の &lt;code&gt;style&lt;/code&gt; オブジェクトのメンバーであるバリエーションがあるかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="637a5eb69033874690f2f58c7b85efbf7ff0ad0a" translate="yes" xml:space="preserve">
          <source>Begins with the current element</source>
          <target state="translated">現在の要素で始まる</target>
        </trans-unit>
        <trans-unit id="5feeaa7d68127f14007039b4c736d27a3c38a304" translate="yes" xml:space="preserve">
          <source>Begins with the parent element</source>
          <target state="translated">親要素で始まる</target>
        </trans-unit>
        <trans-unit id="1bc3dad368acdaada0707799f33febed1af16546" translate="yes" xml:space="preserve">
          <source>Bind a single click to divs with an id that adds the id to the div's text.</source>
          <target state="translated">シングルクリックを div にバインドして、id を div のテキストに追加します。</target>
        </trans-unit>
        <trans-unit id="851052b533894bf64b47bd63454478f66a28d64c" translate="yes" xml:space="preserve">
          <source>Bind an event handler to be fired when the mouse enters an element, or trigger that handler on an element.</source>
          <target state="translated">マウスが要素に入ったときに発生するイベントハンドラをバインドしたり、要素上でそのハンドラをトリガーしたりします。</target>
        </trans-unit>
        <trans-unit id="882f176c047ac3d6aa46371bc4ddf1caf6bb48bf" translate="yes" xml:space="preserve">
          <source>Bind an event handler to be fired when the mouse leaves an element, or trigger that handler on an element.</source>
          <target state="translated">マウスが要素から離れたときに発生するイベントハンドラをバインドしたり、要素上でそのハンドラをトリガーしたりします。</target>
        </trans-unit>
        <trans-unit id="032ec17a21a34446b2222e705fa60c11a8eac9ca" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;blur&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「ぼかし」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="5f23c4d496a726fad44a992af6d779e8e17abf64" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;change&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「変更」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="eea6f5f866a82c3aca113f8801153eb22bcfacba" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;click&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「クリック」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="1b9bade6c7acfc3afffee3a8574f63a348276d42" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;contextmenu&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「contextmenu」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="e738d1b9db1a686decdbc73717dd5948c08e8135" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;dblclick&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「dblclick」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="e4b9a09819dd55dc3c8f1d28f30821a0251b9633" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;error&amp;rdquo; JavaScript event.</source>
          <target state="translated">イベントハンドラーを「エラー」JavaScriptイベントにバインドします。</target>
        </trans-unit>
        <trans-unit id="20574032d198c76b3cdf0a4b17794f5a5cdf98ce" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;focus&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「フォーカス」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="34d600be9c8d6096ccbbed7c4d3b116895bed66e" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;focusin&amp;rdquo; event.</source>
          <target state="translated">イベントハンドラーを「focusin」イベントにバインドします。</target>
        </trans-unit>
        <trans-unit id="5f713250c674c7d2b5bfc0a2e36bea1ff581f431" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;focusout&amp;rdquo; JavaScript event.</source>
          <target state="translated">イベントハンドラーを「focusout」JavaScriptイベントにバインドします。</target>
        </trans-unit>
        <trans-unit id="caed2031efff74c2090bb7b03338b4425548ce4f" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;keydown&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「keydown」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="1d3966dfe615a6c8068c1ee1e44a40ed2e627253" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;keypress&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「keypress」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="87ab6c096c2cf0f64e51e3c6d42f220137502ce9" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;keyup&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「keyup」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="b8c442d2cec74119e092347646fdbfc042a981c4" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;load&amp;rdquo; JavaScript event.</source>
          <target state="translated">イベントハンドラーを「ロード」JavaScriptイベントにバインドします。</target>
        </trans-unit>
        <trans-unit id="65b83d5cf409c3310a91a830774a609fc1be19ce" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;mousedown&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「マウスダウン」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="e5bb45f91cb4427cf9423c488a1ccfa88caba945" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;mousemove&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「mousemove」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="cbf40019166e08a89113c61d3d408aaf9e8f3286" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;mouseout&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「マウスアウト」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="bb0bacba21117f955e30b9f03cea897d37258ee9" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;mouseover&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「マウスオーバー」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="09fd25202784b4e109916a6a5cdf8c550fa2166d" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;mouseup&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「マウスアップ」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="821e997d10f45647c1a27f92fa0329ace6f017a8" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;resize&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「サイズ変更」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="94faf9cad8831236c2e0a0a4338faea6b8f8e81b" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;scroll&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「スクロール」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="d827cb9541dd3d7eb7fbd0b82e081a7f4cead162" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;select&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「select」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="bc622fcaecffa93a1ddda490076e0d7a83a8c526" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;submit&amp;rdquo; JavaScript event, or trigger that event on an element.</source>
          <target state="translated">イベントハンドラーを「送信」JavaScriptイベントにバインドするか、要素でそのイベントをトリガーします。</target>
        </trans-unit>
        <trans-unit id="675f07ebfb7a651461d78438cd00a34d86bc4ad3" translate="yes" xml:space="preserve">
          <source>Bind an event handler to the &amp;ldquo;unload&amp;rdquo; JavaScript event.</source>
          <target state="translated">イベントハンドラーを「アンロード」JavaScriptイベントにバインドします。</target>
        </trans-unit>
        <trans-unit id="05e4d5abe2dad5e226681754c378b2b968c6812d" translate="yes" xml:space="preserve">
          <source>Bind custom events with .live().</source>
          <target state="translated">カスタムイベントを .live()でバインドします。</target>
        </trans-unit>
        <trans-unit id="2a3a834648736e146ab5d34929a75f7245aaf737" translate="yes" xml:space="preserve">
          <source>Bind custom events.</source>
          <target state="translated">カスタムイベントをバインドします。</target>
        </trans-unit>
        <trans-unit id="833ce0c9c546b14d09cb0d45bb2b2852e683f85a" translate="yes" xml:space="preserve">
          <source>Bind multiple events simultaneously.</source>
          <target state="translated">複数のイベントを同時にバインドします。</target>
        </trans-unit>
        <trans-unit id="a3dfc98e0b12e4b597738ab3d20c9b3bd4ce3151" translate="yes" xml:space="preserve">
          <source>Bind one or two handlers to the matched elements, to be executed when the mouse pointer enters and leaves the elements.</source>
          <target state="translated">マッチした要素に1つまたは2つのハンドラをバインドし、マウスポインタが要素に入ったり出たりしたときに実行されます。</target>
        </trans-unit>
        <trans-unit id="5f02ab9fdf3fdc70be0b67d750fbe4a408c96438" translate="yes" xml:space="preserve">
          <source>Bind two or more handlers to the matched elements, to be executed on alternate clicks.</source>
          <target state="translated">マッチした要素に2つ以上のハンドラをバインドし、交互にクリックしたときに実行されます。</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="134aab82a8b8a88bd0d6f79e7cfb352682be75c6" translate="yes" xml:space="preserve">
          <source>Boolean Default</source>
          <target state="translated">論理値 デフォルト</target>
        </trans-unit>
        <trans-unit id="9e128578d5def943e4807ecbc159f072a57ecc23" translate="yes" xml:space="preserve">
          <source>Boolean default</source>
          <target state="translated">ブールデフォルト</target>
        </trans-unit>
        <trans-unit id="6c64b6e3a46e39e929a68dc6157f5afb5d205b8a" translate="yes" xml:space="preserve">
          <source>Borrowing from CSS 1&amp;ndash;3, and then adding its own, jQuery offers a powerful set of tools for matching a set of elements in a document.</source>
          <target state="translated">CSS 1〜3を借用して独自に追加したjQueryは、ドキュメント内の一連の要素を照合するための強力なツールセットを提供します。</target>
        </trans-unit>
        <trans-unit id="f0dde38b7f8442abb6954f7cd4c1a3cc6d6981a4" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;.size()&lt;/code&gt; and &lt;code&gt;.length&lt;/code&gt; identify the number of items:</source>
          <target state="translated">&lt;code&gt;.size()&lt;/code&gt; と &lt;code&gt;.length&lt;/code&gt; はどちらもアイテムの数を識別します。</target>
        </trans-unit>
        <trans-unit id="a08d683fc1f979506c7b448a002043ca95161a79" translate="yes" xml:space="preserve">
          <source>Both NaN and Infinity are of type &quot;number&quot;:</source>
          <target state="translated">NaNもインフィニティもタイプは「数」です。</target>
        </trans-unit>
        <trans-unit id="44a3da72766aa1cefecfe87886ba57c6209e3bf7" translate="yes" xml:space="preserve">
          <source>Browsers also provide the &lt;code&gt;load&lt;/code&gt; event on the &lt;code&gt;window&lt;/code&gt; object. When this event fires it indicates that all assets on the page have loaded, including images. This event can be watched in jQuery using &lt;code&gt;$( window ).on( &quot;load&quot;, handler )&lt;/code&gt;. In cases where code relies on loaded assets (for example, if the dimensions of an image are required), the code should be placed in a handler for the &lt;code&gt;load&lt;/code&gt; event instead.</source>
          <target state="translated">ブラウザは、 &lt;code&gt;window&lt;/code&gt; オブジェクトの &lt;code&gt;load&lt;/code&gt; イベントも提供します。このイベントが発生すると、画像を含む、ページ上のすべてのアセットが読み込まれたことを示します。このイベントは、jQueryで &lt;code&gt;$( window ).on( &quot;load&quot;, handler )&lt;/code&gt; を使用して監視できます。コードが読み込まれたアセットに依存している場合（たとえば、画像のサイズが必要な場合）、代わりにコードを &lt;code&gt;load&lt;/code&gt; イベントのハンドラーに配置する必要があります。</target>
        </trans-unit>
        <trans-unit id="7668c744d8d2f6e0fd344b265e8971e673274ce7" translate="yes" xml:space="preserve">
          <source>Build a list of all the values within a form.</source>
          <target state="translated">フォーム内のすべての値のリストを作成します。</target>
        </trans-unit>
        <trans-unit id="99d86ca93684fdcd47f5093337c5f98e93368ffc" translate="yes" xml:space="preserve">
          <source>Built-in Methods</source>
          <target state="translated">ビルトイン方式</target>
        </trans-unit>
        <trans-unit id="af714f981e3d0837ea96ccaa766e31ed322e29d1" translate="yes" xml:space="preserve">
          <source>But:</source>
          <target state="translated">But:</target>
        </trans-unit>
        <trans-unit id="f599fdac888dcf3cbb48e3afd2745d17b6d06996" translate="yes" xml:space="preserve">
          <source>By default a callback list will act like an event callback list and can be &quot;fired&quot; multiple times.</source>
          <target state="translated">デフォルトでは、コールバックリストはイベントコールバックリストのように動作し、複数回 &quot;発射 &quot;することができます。</target>
        </trans-unit>
        <trans-unit id="1e9c56195b738ad8a182f20495b02413b9845ed7" translate="yes" xml:space="preserve">
          <source>By default the object contains the following properties:</source>
          <target state="translated">デフォルトでは、オブジェクトには以下のプロパティが含まれています。</target>
        </trans-unit>
        <trans-unit id="9d08857b9fa739aeed4b41ba9940e069c5071ff6" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;$.getScript()&lt;/code&gt; sets the cache setting to &lt;code&gt;false&lt;/code&gt;. This appends a timestamped query parameter to the request URL to ensure that the browser downloads the script each time it is requested. You can override this feature by setting the cache property globally using &lt;a href=&quot;jquery.ajaxsetup&quot;&gt;&lt;code&gt;$.ajaxSetup()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;$.getScript()&lt;/code&gt; はキャッシュ設定を &lt;code&gt;false&lt;/code&gt; に設定します。これにより、タイムスタンプ付きのクエリパラメータがリクエストURLに追加され、ブラウザがリクエストされるたびにスクリプトがダウンロードされるようになります。&lt;a href=&quot;jquery.ajaxsetup&quot;&gt; &lt;code&gt;$.ajaxSetup()&lt;/code&gt; &lt;/a&gt;を使用してグローバルにキャッシュプロパティを設定することにより、この機能をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="6ab9366a1bea5a4c5c7a977bc4d69433c5595051" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;type&lt;/code&gt; is &lt;code&gt;&quot;fx&quot;&lt;/code&gt;, which means the returned Promise is resolved when all animations of the selected elements have completed.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;type&lt;/code&gt; は &lt;code&gt;&quot;fx&quot;&lt;/code&gt; です。これは、選択した要素のすべてのアニメーションが完了すると、返されたPromiseが解決されることを意味します。</target>
        </trans-unit>
        <trans-unit id="b22c5f6f0fabfe4cd047c2051928f78b488a8574" translate="yes" xml:space="preserve">
          <source>By default, Ajax requests are sent using the GET HTTP method. If the POST method is required, the method can be specified by setting a value for the &lt;code&gt;type&lt;/code&gt; option. This option affects how the contents of the &lt;code&gt;data&lt;/code&gt; option are sent to the server. POST data will always be transmitted to the server using UTF-8 charset, per the W3C XMLHTTPRequest standard.</source>
          <target state="translated">デフォルトでは、AjaxリクエストはGET HTTPメソッドを使用して送信されます。 POSTメソッドが必要な場合は、 &lt;code&gt;type&lt;/code&gt; オプションの値を設定することでメソッドを指定できます。このオプションは、 &lt;code&gt;data&lt;/code&gt; オプションのコンテンツがサーバーに送信される方法に影響します。 W3C XMLHTTPRequest標準に従い、POSTデータは常にUTF-8文字セットを使用してサーバーに送信されます。</target>
        </trans-unit>
        <trans-unit id="426b3ee051b4ee35449ab731f507b89586c3e858" translate="yes" xml:space="preserve">
          <source>By default, all requests are sent asynchronously (i.e. this is set to &lt;code&gt;true&lt;/code&gt; by default). If you need synchronous requests, set this option to &lt;code&gt;false&lt;/code&gt;. Cross-domain requests and &lt;code&gt;dataType: &quot;jsonp&quot;&lt;/code&gt; requests do not support synchronous operation. Note that synchronous requests may temporarily lock the browser, disabling any actions while the request is active. &lt;strong&gt;As of jQuery 1.8&lt;/strong&gt;, the use of &lt;code&gt;async: false&lt;/code&gt; with jqXHR (&lt;code&gt;$.Deferred&lt;/code&gt;) is deprecated; you must use the success/error/complete callback options instead of the corresponding methods of the jqXHR object such as &lt;code&gt;jqXHR.done()&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、すべてのリクエストは非同期に送信されます（つまり、デフォルトでは &lt;code&gt;true&lt;/code&gt; に設定されています）。同期リクエストが必要な場合は、このオプションを &lt;code&gt;false&lt;/code&gt; に設定します。クロスドメインリクエストと &lt;code&gt;dataType: &quot;jsonp&quot;&lt;/code&gt; リクエストは同期操作をサポートしていません。同期リクエストは一時的にブラウザをロックし、リクエストがアクティブな間はアクションを無効にする場合があることに注意してください。&lt;strong&gt;jQuery 1.8&lt;/strong&gt;以降、jqXHR（ &lt;code&gt;$.Deferred&lt;/code&gt; ）での &lt;code&gt;async: false&lt;/code&gt; 使用は非推奨になりました。 &lt;code&gt;jqXHR.done()&lt;/code&gt; などのjqXHRオブジェクトの対応するメソッドの代わりに、成功/エラー/完了のコールバックオプションを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ad8d9d8f966f0dfeb28f7ab2c2ca1c093887621e" translate="yes" xml:space="preserve">
          <source>By default, data passed in to the &lt;code&gt;data&lt;/code&gt; option as an object (technically, anything other than a string) will be processed and transformed into a query string, fitting to the default content-type &quot;application/x-www-form-urlencoded&quot;. If you want to send a DOMDocument, or other non-processed data, set this option to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;data&lt;/code&gt; オプションにオブジェクトとして渡されたデータ（技術的には文字列以外のもの）が処理され、クエリ文字列に変換され、デフォルトのコンテンツタイプ「application / x-www-form-urlencoded」に適合します。 。DOMDocumentまたはその他の未処理のデータを送信する場合は、このオプションを &lt;code&gt;false&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="d95d71c179f26cbfbe1c0efcca02098e1e2fa681" translate="yes" xml:space="preserve">
          <source>By default, elements are created with an &lt;code&gt;.ownerDocument&lt;/code&gt; matching the document into which the jQuery library was loaded. Elements being injected into a different document should be created using that document, e.g., &lt;code&gt;$(&quot;&amp;lt;p&amp;gt;hello iframe&amp;lt;/p&amp;gt;&quot;, $(&quot;#myiframe&quot;).prop(&quot;contentWindow&quot;).document)&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、jQueryライブラリがロードされたドキュメントと一致する &lt;code&gt;.ownerDocument&lt;/code&gt; で要素が作成されます。別のドキュメントに挿入される要素は、そのドキュメントを使用して作成する必要があります（例： &lt;code&gt;$(&quot;&amp;lt;p&amp;gt;hello iframe&amp;lt;/p&amp;gt;&quot;, $(&quot;#myiframe&quot;).prop(&quot;contentWindow&quot;).document)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bc908bd16fbe6143344de37d896661754868a8b4" translate="yes" xml:space="preserve">
          <source>By default, jQuery adds a &quot;px&quot; unit to the values passed to the &lt;code&gt;.css()&lt;/code&gt; method. This behavior can be prevented by adding the property to the &lt;a href=&quot;jquery.cssnumer&quot;&gt;&lt;code&gt;jQuery.cssNumber&lt;/code&gt;&lt;/a&gt; object</source>
          <target state="translated">デフォルトでは、jQueryは &lt;code&gt;.css()&lt;/code&gt; メソッドに渡される値に「px」ユニットを追加します。この動作は、&lt;a href=&quot;jquery.cssnumer&quot;&gt; &lt;code&gt;jQuery.cssNumber&lt;/code&gt; &lt;/a&gt;オブジェクトにプロパティを追加することで防ぐことができます</target>
        </trans-unit>
        <trans-unit id="bb7e062f340afd064069201a47c758f6b46d48a0" translate="yes" xml:space="preserve">
          <source>By default, most events bubble up from the original event target to the &lt;code&gt;document&lt;/code&gt; element. At each element along the way, jQuery calls any matching event handlers that have been attached. A handler can prevent the event from bubbling further up the document tree (and thus prevent handlers on those elements from running) by calling &lt;code&gt;event.stopPropagation()&lt;/code&gt;. Any other handlers attached on the current element &lt;em&gt;will&lt;/em&gt; run however. To prevent that, call &lt;code&gt;event.stopImmediatePropagation()&lt;/code&gt;. (Event handlers bound to an element are called in the same order that they were bound.)</source>
          <target state="translated">デフォルトでは、ほとんどのイベントは元のイベントターゲットから &lt;code&gt;document&lt;/code&gt; 要素にバブルアップします。途中の各要素で、jQueryは、関連付けられている一致するイベントハンドラーを呼び出します。ハンドラーは、 &lt;code&gt;event.stopPropagation()&lt;/code&gt; を呼び出すことによって、イベントがドキュメントツリーの上方に移動するのを防ぐ（したがって、これらの要素のハンドラーが実行されないようにする）ことができます。ただし、現在の要素にアタッチされている他のハンドラ&lt;em&gt;は&lt;/em&gt;実行&lt;em&gt;され&lt;/em&gt;ます。これを防ぐには、 &lt;code&gt;event.stopImmediatePropagation()&lt;/code&gt; を呼び出します。 （要素にバインドされたイベントハンドラーは、バインドされた順序で呼び出されます。）</target>
        </trans-unit>
        <trans-unit id="ce1f745731b5dd745e454e33124fc30c46057d17" translate="yes" xml:space="preserve">
          <source>By default, requests are always issued, but the browser may serve results out of its cache. To disallow use of the cached results, set &lt;code&gt;cache&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. To cause the request to report failure if the asset has not been modified since the last request, set &lt;code&gt;ifModified&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">デフォルトでは、リクエストは常に発行されますが、ブラウザはキャッシュから結果を提供する場合があります。キャッシュされた結果の使用を禁止するには、 &lt;code&gt;cache&lt;/code&gt; を &lt;code&gt;false&lt;/code&gt; に設定します。アセットが最後のリクエスト以降に変更されていない場合にリクエストが失敗を報告するようにするには、 &lt;code&gt;ifModified&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="27d52f4d9026441969d6592066b6f6a2bef76bcf" translate="yes" xml:space="preserve">
          <source>By default, selectors perform their searches within the DOM starting at the document root. However, an alternate context can be given for the search by using the optional second parameter to the &lt;code&gt;$()&lt;/code&gt; function. For example, to do a search within an event handler, the search can be restricted like so:</source>
          <target state="translated">デフォルトでは、セレクターはドキュメントルートから始まるDOM内で検索を実行します。ただし、 &lt;code&gt;$()&lt;/code&gt; 関数にオプションの2番目のパラメーターを使用することで、検索に代替コンテキストを指定できます。たとえば、イベントハンドラ内で検索を行うには、次のように検索を制限できます。</target>
        </trans-unit>
        <trans-unit id="c04a41a9c901d27b78f4c2560deab31a24cc713c" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;context&lt;/code&gt; is the current &lt;code&gt;document&lt;/code&gt; if not specified or given as &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;. If the HTML was to be used in another document such as an iframe, that frame's document could be used.</source>
          <target state="translated">デフォルトでは、 &lt;code&gt;context&lt;/code&gt; が指定されていない場合、または &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;undefined&lt;/code&gt; として指定されていない場合、現在の &lt;code&gt;document&lt;/code&gt; です。 HTMLがiframeなどの別のドキュメントで使用される場合、そのフレームのドキュメントを使用できます。</target>
        </trans-unit>
        <trans-unit id="a63b823685bb5a0df45e013f32413b0a23060ed8" translate="yes" xml:space="preserve">
          <source>By design, any jQuery constructor or method that accepts an HTML string &amp;mdash; &lt;a href=&quot;jquery&quot;&gt;jQuery()&lt;/a&gt;, &lt;a href=&quot;append&quot;&gt;.append()&lt;/a&gt;, &lt;a href=&quot;after&quot;&gt;.after()&lt;/a&gt;, etc. &amp;mdash; can potentially execute code. This can occur by injection of script tags or use of HTML attributes that execute code (for example, &lt;code&gt;&amp;lt;img onload=&quot;&quot;&amp;gt;&lt;/code&gt;). Do not use these methods to insert strings obtained from untrusted sources such as URL query parameters, cookies, or form inputs. Doing so can introduce cross-site-scripting (XSS) vulnerabilities. Remove or escape any user input before adding content to the document.</source>
          <target state="translated">デザイン、HTML文字列を受け付ける任意のjQueryのコンストラクタまたは方法により- &lt;a href=&quot;jquery&quot;&gt;jQueryの（） &lt;/a&gt;、&lt;a href=&quot;append&quot;&gt;.append（） &lt;/a&gt;、&lt;a href=&quot;after&quot;&gt;.after（） &lt;/a&gt;、等-潜在的にコードを実行することができます。これは、スクリプトタグの挿入、またはコードを実行するHTML属性の使用（たとえば、 &lt;code&gt;&amp;lt;img onload=&quot;&quot;&amp;gt;&lt;/code&gt; ）によって発生する可能性があります。これらのメソッドを使用して、URLクエリパラメータ、Cookie、フォーム入力などの信頼できないソースから取得した文字列を挿入しないでください。これを行うと、クロスサイトスクリプティング（XSS）の脆弱性が発生する可能性があります。ドキュメントにコンテンツを追加する前に、ユーザー入力を削除またはエスケープします。</target>
        </trans-unit>
        <trans-unit id="47d5f282fd7c5b6fc4262f993df66e5c3b67ce39" translate="yes" xml:space="preserve">
          <source>By naming the handler, we can be assured that no other functions are accidentally removed. Note that the following will &lt;em&gt;not&lt;/em&gt; work:</source>
          <target state="translated">ハンドラーに名前を付けることにより、他の関数が誤って削除されないことが保証されます。以下は機能し&lt;em&gt;ない&lt;/em&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="ee56b1929a9e11ff88b2efda0e09e192d9855044" translate="yes" xml:space="preserve">
          <source>By specifying the &lt;code&gt;click&lt;/code&gt; event type, only handlers for that event type will be unbound. This approach can still have negative ramifications if other scripts might be attaching behaviors to the same element, however. Robust and extensible applications typically demand the two-argument version for this reason:</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; イベントタイプを指定すると、そのイベントタイプのハンドラーのみがバインド解除されます。ただし、他のスクリプトが同じ要素に動作をアタッチしている可能性がある場合、このアプローチは否定的な影響を与える可能性があります。堅牢で拡張可能なアプリケーションでは、通常、次の理由により2引数バージョンが必要です。</target>
        </trans-unit>
        <trans-unit id="2042dcd8171d52d088702f4be79627a77b16400c" translate="yes" xml:space="preserve">
          <source>By using a function to set attributes, you can compute the value based on other properties of the element. For example, to concatenate a new value with an existing value:</source>
          <target state="translated">関数を使用して属性を設定することで、要素の他のプロパティに基づいて値を計算することができます。例えば、新しい値を既存の値と連結します。</target>
        </trans-unit>
        <trans-unit id="ed5a21f78f1f068a54690dced88c66dd00279ce8" translate="yes" xml:space="preserve">
          <source>By using a function to set properties, you can compute the value based on other properties of the element. For example, to toggle all checkboxes based off their individual values:</source>
          <target state="translated">関数を使ってプロパティを設定することで、要素の他のプロパティに基づいて値を計算することができます。例えば、個々の値に基づいてすべてのチェックボックスをトグルします。</target>
        </trans-unit>
        <trans-unit id="57e93d13177beaa87a4a73aca1f5650d942e3604" translate="yes" xml:space="preserve">
          <source>Caching Responses</source>
          <target state="translated">キャッシング対応</target>
        </trans-unit>
        <trans-unit id="0564a37bec5c23453adaf9321ee666ddc1b4088d" translate="yes" xml:space="preserve">
          <source>Call all callbacks in a list with the given context and arguments.</source>
          <target state="translated">与えられたコンテキストと引数を持つリスト内のすべてのコールバックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="ccbe9d18f4c8f7ec453f510c75f895efc7226e3d" translate="yes" xml:space="preserve">
          <source>Call all of the callbacks with the given arguments.</source>
          <target state="translated">与えられた引数ですべてのコールバックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="6fd09725bfdf077db26b4f7a241dd8b4150d49a1" translate="yes" xml:space="preserve">
          <source>Call the progressCallbacks on a Deferred object with the given args.</source>
          <target state="translated">与えられた引数でDeferredオブジェクト上のprogressCallbacksを呼び出します。</target>
        </trans-unit>
        <trans-unit id="9a8059338e0430066d305f213250eeb9c9fbdd3f" translate="yes" xml:space="preserve">
          <source>Call the progressCallbacks on a Deferred object with the given context and args.</source>
          <target state="translated">与えられたコンテキストと引数を持つDeferredオブジェクト上でprogressCallbacksを呼び出します。</target>
        </trans-unit>
        <trans-unit id="42fb639b7313463881ed7d9bae34cc709237f03b" translate="yes" xml:space="preserve">
          <source>Callback</source>
          <target state="translated">Callback</target>
        </trans-unit>
        <trans-unit id="c9f2e1265c7a59ea173f0f11e5294ed2b15d6f7c" translate="yes" xml:space="preserve">
          <source>Callback Function</source>
          <target state="translated">コールバック関数</target>
        </trans-unit>
        <trans-unit id="5a601a94e84d57d225183dc3af0474c3a004dc30" translate="yes" xml:space="preserve">
          <source>Callback Function Queues</source>
          <target state="translated">コールバック関数キュー</target>
        </trans-unit>
        <trans-unit id="9c55daf6e61f9dc1556f1ec913e0ca99b7e0ea38" translate="yes" xml:space="preserve">
          <source>Callback Functions</source>
          <target state="translated">コールバック関数</target>
        </trans-unit>
        <trans-unit id="a9af4863d7aa8c65690d68dd4e55654d4dd44161" translate="yes" xml:space="preserve">
          <source>Callback for creating the XMLHttpRequest object. Defaults to the ActiveXObject when available (IE), the XMLHttpRequest otherwise. Override to provide your own implementation for XMLHttpRequest or enhancements to the factory.</source>
          <target state="translated">XMLHttpRequest オブジェクトを作成するためのコールバック。デフォルトは、利用可能な場合は ActiveXObject (IE)、そうでない場合は XMLHttpRequest です。XMLHttpRequest の独自の実装を提供したり、ファクトリを拡張したりするためにオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="a86a66725ddd95d5efed8e749f5570ea831e77d9" translate="yes" xml:space="preserve">
          <source>Callbacks Object</source>
          <target state="translated">コールバックオブジェクト</target>
        </trans-unit>
        <trans-unit id="e14e8cd10533a8efa27eb2af602d8c16578fc4cc" translate="yes" xml:space="preserve">
          <source>Callbacks are executed in the order they were added. Since &lt;code&gt;deferred.then&lt;/code&gt; returns a Promise, other methods of the Promise object can be chained to this one, including additional &lt;code&gt;.then()&lt;/code&gt; methods.</source>
          <target state="translated">コールバックは追加された順序で実行されます。 &lt;code&gt;deferred.then&lt;/code&gt; はPromiseを返すため、追加の &lt;code&gt;.then()&lt;/code&gt; メソッドを含め、Promiseオブジェクトの他のメソッドをこのメソッドにチェーンできます。</target>
        </trans-unit>
        <trans-unit id="e69b2026e5eb9b61282dd176dae6d9813026b156" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;event.stoppropagation&quot;&gt;&lt;code&gt;event.stopPropagation()&lt;/code&gt;&lt;/a&gt; in the event handler is ineffective in stopping event handlers attached lower in the document; the event has already propagated to &lt;code&gt;document&lt;/code&gt;.</source>
          <target state="translated">イベントハンドラーで&lt;a href=&quot;event.stoppropagation&quot;&gt; &lt;code&gt;event.stopPropagation()&lt;/code&gt; &lt;/a&gt;を呼び出しても、ドキュメントの下に添付されているイベントハンドラーを停止することはできません。イベントはすでに &lt;code&gt;document&lt;/code&gt; に伝達されています。</target>
        </trans-unit>
        <trans-unit id="cf3ba7d5f247ee09f67cae44ec94a40217fbbed4" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;$( selector ).hover( handlerIn, handlerOut )&lt;/code&gt; is shorthand for:</source>
          <target state="translated">呼び出し &lt;code&gt;$( selector ).hover( handlerIn, handlerOut )&lt;/code&gt; の省略形です。</target>
        </trans-unit>
        <trans-unit id="3e72d72cad03f7e24f7f900ab00ea85843a3429b" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;$(selector).hover(handlerInOut)&lt;/code&gt; is shorthand for:</source>
          <target state="translated">呼び出し &lt;code&gt;$(selector).hover(handlerInOut)&lt;/code&gt; の省略形です。</target>
        </trans-unit>
        <trans-unit id="bc7af523c69befa0bf6af9758496e2d5437611d1" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;.data()&lt;/code&gt; with no parameters retrieves all of the values as a JavaScript object. This object can be safely cached in a variable as long as a new object is not set with &lt;code&gt;.data(obj)&lt;/code&gt;. Using the object directly to get or set values is faster than making individual calls to &lt;code&gt;.data()&lt;/code&gt; to get or set each value:</source>
          <target state="translated">パラメータなしで &lt;code&gt;.data()&lt;/code&gt; を呼び出すと、すべての値がJavaScriptオブジェクトとして取得されます。このオブジェクトは、新しいオブジェクトが &lt;code&gt;.data(obj)&lt;/code&gt; で設定されていない限り、変数に安全にキャッシュできます。オブジェクトを直接使用して値を取得または設定する方が、 &lt;code&gt;.data()&lt;/code&gt; を個別に呼び出して各値を取得または設定するよりも高速です。</target>
        </trans-unit>
        <trans-unit id="8ec2570ac78cc484942d9d02c4a351dc25f7c088" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;.data()&lt;/code&gt; with no parameters returns a JavaScript object containing each stored value as a property. The object can be used directly to get data values (but note that property names originally containing dashes will have been modified as described below).</source>
          <target state="translated">パラメータなしで &lt;code&gt;.data()&lt;/code&gt; を呼び出すと、格納されている各値をプロパティとして含むJavaScriptオブジェクトが返されます。オブジェクトを直接使用してデータ値を取得できます（ただし、元々ダッシュが含まれていたプロパティ名は、以下で説明するように変更されていることに注意してください）。</target>
        </trans-unit>
        <trans-unit id="57d8175940e69eae84e5717801c7dc474c8b80f9" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;jQuery()&lt;/code&gt; (or &lt;code&gt;$()&lt;/code&gt;) with an id selector as its argument will return a jQuery object containing a collection of either zero or one DOM element.</source>
          <target state="translated">idセレクターを引数として &lt;code&gt;jQuery()&lt;/code&gt; （または &lt;code&gt;$()&lt;/code&gt; ）を呼び出すと、ゼロまたは1つのDOM要素のコレクションを含むjQueryオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="5e9e9d9104911a2d5d092dab75ff72c453aa78b3" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;jQuery.data( element )&lt;/code&gt; retrieves all of the element's associated values as a JavaScript object. Note that jQuery itself uses this method to store data for internal use, such as event handlers, so do not assume that it contains only data that your own code has stored.</source>
          <target state="translated">&lt;code&gt;jQuery.data( element )&lt;/code&gt; 呼び出すと、要素に関連付けられたすべての値がJavaScriptオブジェクトとして取得されます。jQuery自体がこのメソッドを使用して、イベントハンドラーなどの内部で使用するデータを格納するため、独自のコードが格納したデータのみが含まれているとは限りません。</target>
        </trans-unit>
        <trans-unit id="ee59480a24569bafc7adb90744d2c735b7662ee4" translate="yes" xml:space="preserve">
          <source>Calling the &lt;code&gt;jQuery()&lt;/code&gt; method with &lt;em&gt;no arguments&lt;/em&gt; returns an empty jQuery set (with a &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; property of 0). Similarly, if an argument of &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;undefined&lt;/code&gt;, an empty array (&lt;code&gt;[]&lt;/code&gt;), or an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) is passed, the set contains no elements.</source>
          <target state="translated">&lt;em&gt;引数なしで&lt;/em&gt; &lt;code&gt;jQuery()&lt;/code&gt; メソッドを呼び出すと、空のjQueryセット（ &lt;code&gt;&lt;a href=&quot;length&quot;&gt;.length&lt;/a&gt;&lt;/code&gt; プロパティが0）が返されます。同様に、 &lt;code&gt;null&lt;/code&gt; 、 &lt;code&gt;undefined&lt;/code&gt; 、空の配列（ &lt;code&gt;[]&lt;/code&gt; ）、または空の文字列（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）の引数が渡された場合、セットには要素が含まれません。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3d6ba7f95738a620806758f743c386b40530f90c" translate="yes" xml:space="preserve">
          <source>Can bind and unbind events to the colored button.</source>
          <target state="translated">色付きボタンにイベントをバインドしたり、バインドを解除したりすることができます。</target>
        </trans-unit>
        <trans-unit id="8547a2d5367bc71b00545eeb6dfeefe13505dbc7" translate="yes" xml:space="preserve">
          <source>Can bind custom events too.</source>
          <target state="translated">カスタムイベントをバインドすることもできます。</target>
        </trans-unit>
        <trans-unit id="474cfa6c77d569b7e72a6a8e59b172c594c8a55c" translate="yes" xml:space="preserve">
          <source>Can cease to fire for images that already live in the browser's cache</source>
          <target state="translated">ブラウザのキャッシュに保存されている画像の撮影を停止することができます。</target>
        </trans-unit>
        <trans-unit id="c09c36c558278a61eada49e27c98ba37887a14e5" translate="yes" xml:space="preserve">
          <source>Cancel a default action and prevent it from bubbling up by returning &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">デフォルトのアクションをキャンセルし、 &lt;code&gt;false&lt;/code&gt; を返すことで泡立つのを防ぎます：</target>
        </trans-unit>
        <trans-unit id="be7682f8165460ae0f4dd7f9463d8cdff09ea450" translate="yes" xml:space="preserve">
          <source>Cancel a default action and prevent it from bubbling up by returning false.</source>
          <target state="translated">デフォルトのアクションをキャンセルし、falseを返すことでバブルアップを防ぎます。</target>
        </trans-unit>
        <trans-unit id="180fd3e11931320e5d4e36f9483416fac6a9dd4a" translate="yes" xml:space="preserve">
          <source>Cancel a form submit action and prevent the event from bubbling up by returning &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">フォーム送信アクションをキャンセルし、 &lt;code&gt;false&lt;/code&gt; を返すことでイベントが発生しないようにします。</target>
        </trans-unit>
        <trans-unit id="2df29b928681084cabf614463b1b1a742e20cbc7" translate="yes" xml:space="preserve">
          <source>Cancel a link's default action using the &lt;code&gt;.preventDefault()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;.preventDefault()&lt;/code&gt; メソッドを使用してリンクのデフォルトアクションをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="00ccaf7ce24bf444d721e89dfd2a9b66066610d0" translate="yes" xml:space="preserve">
          <source>Cancel only the default action by using &lt;code&gt;.preventDefault()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;.preventDefault()&lt;/code&gt; を使用して、デフォルトのアクションのみをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="064cc3230bae84a39f03c4e6a5e3078058c37dbe" translate="yes" xml:space="preserve">
          <source>Cancel only the default action by using the .preventDefault() method.</source>
          <target state="translated">.preventDefault()メソッドを使用してデフォルトのアクションのみをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="c9cbc58f88e6b601ceb9d9ef24cf90f93ff27c5e" translate="yes" xml:space="preserve">
          <source>Cancel only the default action by using the preventDefault method.</source>
          <target state="translated">preventDefaultメソッドを使用して、デフォルトのアクションのみをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="43af0dd4d7532eb12b3767ce9dac612255b1f8eb" translate="yes" xml:space="preserve">
          <source>Cancel the default action (navigation) of the click.</source>
          <target state="translated">クリックのデフォルトアクション(ナビゲーション)をキャンセルします。</target>
        </trans-unit>
        <trans-unit id="6ccb60071be8f00760a3824d9f7d0fad57de789f" translate="yes" xml:space="preserve">
          <source>Categories</source>
          <target state="translated">Categories</target>
        </trans-unit>
        <trans-unit id="3ef69c1f0bf7bf91822ac0c69c60b4733105fa7a" translate="yes" xml:space="preserve">
          <source>Category: Ajax</source>
          <target state="translated">カテゴリ。エイジャックス</target>
        </trans-unit>
        <trans-unit id="4f8165cf28e9a7ddd6c8f1f580da0002e5300663" translate="yes" xml:space="preserve">
          <source>Category: Attribute</source>
          <target state="translated">カテゴリ。属性</target>
        </trans-unit>
        <trans-unit id="4d0e61f0b9cbfa5443888453b086bb89d3900b1b" translate="yes" xml:space="preserve">
          <source>Category: Attributes</source>
          <target state="translated">カテゴリ。属性</target>
        </trans-unit>
        <trans-unit id="f80c93036b59266ab5f046dc19f48785b0e62c30" translate="yes" xml:space="preserve">
          <source>Category: Basic</source>
          <target state="translated">カテゴリのご紹介。基本的なこと</target>
        </trans-unit>
        <trans-unit id="29c442f02e00e68f6b6884a72c9c747b8c6c4998" translate="yes" xml:space="preserve">
          <source>Category: Basic Filter</source>
          <target state="translated">カテゴリー 基本的なフィルター</target>
        </trans-unit>
        <trans-unit id="c7ce1e5f2fc6ce5b4516b9a69ef1879da77ac3f0" translate="yes" xml:space="preserve">
          <source>Category: Basics</source>
          <target state="translated">カテゴリー 基礎知識</target>
        </trans-unit>
        <trans-unit id="f11a895650a15593d02ef441d63c4074ed455f5a" translate="yes" xml:space="preserve">
          <source>Category: Browser Events</source>
          <target state="translated">カテゴリー別に見てみましょう。ブラウザイベント</target>
        </trans-unit>
        <trans-unit id="1142e99ed233f23f051d45596f801e94b95af474" translate="yes" xml:space="preserve">
          <source>Category: CSS</source>
          <target state="translated">カテゴリー。CSS</target>
        </trans-unit>
        <trans-unit id="900bc4fb38463165a36cffd5c7d81a77b3b292de" translate="yes" xml:space="preserve">
          <source>Category: Callbacks Object</source>
          <target state="translated">カテゴリ。コールバックオブジェクト</target>
        </trans-unit>
        <trans-unit id="8519c92e1c42a0087bb0b64b460340e43d687b44" translate="yes" xml:space="preserve">
          <source>Category: Child Filter</source>
          <target state="translated">カテゴリー別に見る 子フィルター</target>
        </trans-unit>
        <trans-unit id="4353365c0205af2a97caed1723230e701cd10eb1" translate="yes" xml:space="preserve">
          <source>Category: Class Attribute</source>
          <target state="translated">カテゴリです。クラス属性</target>
        </trans-unit>
        <trans-unit id="bf227cd77b5899766df9dac01864c822f3fca464" translate="yes" xml:space="preserve">
          <source>Category: Collection Manipulation</source>
          <target state="translated">カテゴリ。コレクションの操作</target>
        </trans-unit>
        <trans-unit id="1d643ecc48014221cced9ed42b6105a9a5e75747" translate="yes" xml:space="preserve">
          <source>Category: Content Filter</source>
          <target state="translated">カテゴリー別に見てみましょう。コンテンツフィルタ</target>
        </trans-unit>
        <trans-unit id="7db17c6d111ed5ee7d6626a5ae1bfadadca66c41" translate="yes" xml:space="preserve">
          <source>Category: Copying</source>
          <target state="translated">カテゴリー コピー</target>
        </trans-unit>
        <trans-unit id="e146268dd0800825e05247f16fb6c557b98b48c1" translate="yes" xml:space="preserve">
          <source>Category: Core</source>
          <target state="translated">カテゴリーは以下の通りです。コア</target>
        </trans-unit>
        <trans-unit id="01542c1cadafad1f2a7121aa341d006931ebb6f9" translate="yes" xml:space="preserve">
          <source>Category: Custom</source>
          <target state="translated">カテゴリ。カスタム</target>
        </trans-unit>
        <trans-unit id="5c534935d4cbd2cc27416654f3adc3a016dba12e" translate="yes" xml:space="preserve">
          <source>Category: DOM Element Methods</source>
          <target state="translated">カテゴリ。DOM 要素メソッド</target>
        </trans-unit>
        <trans-unit id="83fbfc0fc2b0ad4b896a0887fe72ae9c5e8e0e75" translate="yes" xml:space="preserve">
          <source>Category: DOM Insertion, Around</source>
          <target state="translated">カテゴリ。DOM の挿入,周辺</target>
        </trans-unit>
        <trans-unit id="8adc5d12ce90ea615356a727fbc5099a8c196695" translate="yes" xml:space="preserve">
          <source>Category: DOM Insertion, Inside</source>
          <target state="translated">カテゴリ。DOM の挿入,内部</target>
        </trans-unit>
        <trans-unit id="0f7e5bc7980f03e8a8a1f06d7746212c5587fb54" translate="yes" xml:space="preserve">
          <source>Category: DOM Insertion, Outside</source>
          <target state="translated">カテゴリ。DOM 挿入,外部</target>
        </trans-unit>
        <trans-unit id="4c696040cf67a9641011f5d0a1b7b5f0bb2d1adf" translate="yes" xml:space="preserve">
          <source>Category: DOM Removal</source>
          <target state="translated">カテゴリ。DOM 除去</target>
        </trans-unit>
        <trans-unit id="928160c6f59a104a863a3c80157c5b25d988ace0" translate="yes" xml:space="preserve">
          <source>Category: DOM Replacement</source>
          <target state="translated">カテゴリ。DOMの置き換え</target>
        </trans-unit>
        <trans-unit id="bc6094e5bbe5aadd5273a110e229f25f8eb40046" translate="yes" xml:space="preserve">
          <source>Category: Data</source>
          <target state="translated">カテゴリー データ</target>
        </trans-unit>
        <trans-unit id="67b943ec003a6ea6b970cf1aa7dab873bff46634" translate="yes" xml:space="preserve">
          <source>Category: Data Storage</source>
          <target state="translated">カテゴリ。データストレージ</target>
        </trans-unit>
        <trans-unit id="0fb9af786f6f59cb459a78bbd173ad6dc887c4f7" translate="yes" xml:space="preserve">
          <source>Category: Deferred Object</source>
          <target state="translated">カテゴリー。繰延オブジェクト</target>
        </trans-unit>
        <trans-unit id="70f87adfcfc5130a69deeebfd6b9860553804eab" translate="yes" xml:space="preserve">
          <source>Category: Dimensions</source>
          <target state="translated">カテゴリー 寸法</target>
        </trans-unit>
        <trans-unit id="a7610eb73fa005a43acc4df12da3a9e5bcf78b49" translate="yes" xml:space="preserve">
          <source>Category: Document Loading</source>
          <target state="translated">カテゴリー ドキュメントの読み込み</target>
        </trans-unit>
        <trans-unit id="5a36ac24203aeb87fa2834a28ec10de4d0c9b2f4" translate="yes" xml:space="preserve">
          <source>Category: Effects</source>
          <target state="translated">カテゴリー.エフェクト</target>
        </trans-unit>
        <trans-unit id="c5133d2f939ea3b0ff0885231596e90c1af03e8e" translate="yes" xml:space="preserve">
          <source>Category: Event Handler Attachment</source>
          <target state="translated">カテゴリ。イベントハンドラ・アタッチメント</target>
        </trans-unit>
        <trans-unit id="934e13ba2e195c4059e740f4dfb605905ef7e7bf" translate="yes" xml:space="preserve">
          <source>Category: Event Object</source>
          <target state="translated">カテゴリです。イベントオブジェクト</target>
        </trans-unit>
        <trans-unit id="d9c263ec58d642bc09aad36219724386e5ff15c2" translate="yes" xml:space="preserve">
          <source>Category: Events</source>
          <target state="translated">カテゴリー別に見る。イベント</target>
        </trans-unit>
        <trans-unit id="05f4d65f75262738b2557d4c507fdf769f6253fd" translate="yes" xml:space="preserve">
          <source>Category: Fading</source>
          <target state="translated">カテゴリー フェージング</target>
        </trans-unit>
        <trans-unit id="ae38070da89db228c17d6969cec20005dff78219" translate="yes" xml:space="preserve">
          <source>Category: Filtering</source>
          <target state="translated">カテゴリ。フィルタリング</target>
        </trans-unit>
        <trans-unit id="e026db8e86bd9d8c7a6b65c10c2414616a945059" translate="yes" xml:space="preserve">
          <source>Category: Form</source>
          <target state="translated">カテゴリー フォーム</target>
        </trans-unit>
        <trans-unit id="134e050972d7348dc409bac965083a9442eb6ff3" translate="yes" xml:space="preserve">
          <source>Category: Form Events</source>
          <target state="translated">カテゴリー別に見てみましょう。フォームイベント</target>
        </trans-unit>
        <trans-unit id="9feb3d20cc931ef63a845693bf15446431ce2ad9" translate="yes" xml:space="preserve">
          <source>Category: Forms</source>
          <target state="translated">カテゴリー別に見る。フォーム</target>
        </trans-unit>
        <trans-unit id="7a950700adea85f7676161ebc7b15320050ed29c" translate="yes" xml:space="preserve">
          <source>Category: General Attributes</source>
          <target state="translated">カテゴリのご紹介です。一般的な属性</target>
        </trans-unit>
        <trans-unit id="c35449e545b938250e9137e00fee582914cfdeed" translate="yes" xml:space="preserve">
          <source>Category: Global Ajax Event Handlers</source>
          <target state="translated">カテゴリ。グローバルAjaxイベントハンドラ</target>
        </trans-unit>
        <trans-unit id="69a4d9a3089fc0aa7152777e5daf9622cbcfdacb" translate="yes" xml:space="preserve">
          <source>Category: Helper Functions</source>
          <target state="translated">カテゴリに分類されます。ヘルパー機能</target>
        </trans-unit>
        <trans-unit id="82dfe00fce76921f064f322ed2cd73aaa10abf53" translate="yes" xml:space="preserve">
          <source>Category: Hierarchy</source>
          <target state="translated">カテゴリー:ヒエラルク</target>
        </trans-unit>
        <trans-unit id="de42cfb551d21f728336efc9126decc50e3776d5" translate="yes" xml:space="preserve">
          <source>Category: Internals</source>
          <target state="translated">カテゴリー 内部</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
