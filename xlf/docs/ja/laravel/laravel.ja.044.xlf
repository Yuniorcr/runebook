<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="42c13b8f9ea74fceeebc09d4f7b094796a124ac3" translate="yes" xml:space="preserve">
          <source>Upgrading Socialite</source>
          <target state="translated">ソシャゲのアップグレード</target>
        </trans-unit>
        <trans-unit id="e223cb7cddb4169a6690d71ba96c2ab2263286d1" translate="yes" xml:space="preserve">
          <source>Upgrading Telescope</source>
          <target state="translated">望遠鏡のアップグレード</target>
        </trans-unit>
        <trans-unit id="d505533398635ad971e0ccd38b7c3af38267f58e" translate="yes" xml:space="preserve">
          <source>Upgrading To 5.7.0 From 5.6</source>
          <target state="translated">5.6から5.7.0へのアップグレード</target>
        </trans-unit>
        <trans-unit id="dff068beb807d9b771c5e73de83346dc5fab73af" translate="yes" xml:space="preserve">
          <source>Upgrading To 8.0 From 7.x</source>
          <target state="translated">7.xから8.0へのアップグレード</target>
        </trans-unit>
        <trans-unit id="605ab121b0528444f54d7535cf18ad408ae5b7dc" translate="yes" xml:space="preserve">
          <source>Upgrading To Valet 2.0</source>
          <target state="translated">バレット2.0へのアップグレード</target>
        </trans-unit>
        <trans-unit id="023fd83a0de52728b167fe09fbf61b2660601158" translate="yes" xml:space="preserve">
          <source>UploadedFile</source>
          <target state="translated">UploadedFile</target>
        </trans-unit>
        <trans-unit id="0fae64d1bc9acb27d0e1c2b4e9cab51326ba47b0" translate="yes" xml:space="preserve">
          <source>UploadedFile (Http)</source>
          <target state="translated">UploadedFile (Http)</target>
        </trans-unit>
        <trans-unit id="891a51edb29c30d3cf856e8dbf435840a6e1615e" translate="yes" xml:space="preserve">
          <source>UploadedFile::clientExtension()</source>
          <target state="translated">UploadedFile::clientExtension()</target>
        </trans-unit>
        <trans-unit id="929cdbfae255d063719196518f122ff600026a9a" translate="yes" xml:space="preserve">
          <source>UploadedFile::createFromBase()</source>
          <target state="translated">UploadedFile::createFromBase()</target>
        </trans-unit>
        <trans-unit id="8ca9b5c61903439dbe6b306208888d59eae2c415" translate="yes" xml:space="preserve">
          <source>UploadedFile::fake()</source>
          <target state="translated">UploadedFile::fake()</target>
        </trans-unit>
        <trans-unit id="bec6b04348c3d4d79d97bb39bf4b76eea2cc6b5c" translate="yes" xml:space="preserve">
          <source>UploadedFile::get()</source>
          <target state="translated">UploadedFile::get()</target>
        </trans-unit>
        <trans-unit id="eb17a0f2baf59c892614bb1db35c4e10777b559b" translate="yes" xml:space="preserve">
          <source>UploadedFile::parseOptions()</source>
          <target state="translated">UploadedFile::parseOptions()</target>
        </trans-unit>
        <trans-unit id="bee0d4b4858e108447d498caaf1760a65e535671" translate="yes" xml:space="preserve">
          <source>UploadedFile::store()</source>
          <target state="translated">UploadedFile::store()</target>
        </trans-unit>
        <trans-unit id="80446ee3e5915a0c6c137ec25ced82fcaead3852" translate="yes" xml:space="preserve">
          <source>UploadedFile::storeAs()</source>
          <target state="translated">UploadedFile::storeAs()</target>
        </trans-unit>
        <trans-unit id="1efb800abe70f17967219892620a445c0ebc9d89" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePublicly()</source>
          <target state="translated">UploadedFile::storePublicly()</target>
        </trans-unit>
        <trans-unit id="5754c39d9e8ad5919ce457740d4cbe045b8c566a" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePubliclyAs()</source>
          <target state="translated">UploadedFile::storePubliclyAs()</target>
        </trans-unit>
        <trans-unit id="d722f8772a10eda25d2382dd9f73e58571c41a50" translate="yes" xml:space="preserve">
          <source>UriInterface</source>
          <target state="translated">UriInterface</target>
        </trans-unit>
        <trans-unit id="cedd7ec3ef52de0d1eed81f7d9f6353902052acf" translate="yes" xml:space="preserve">
          <source>UriInterface
    effectiveUri()</source>
          <target state="translated">UriInterface effectiveUri()</target>
        </trans-unit>
        <trans-unit id="e2aa20e71f24069d864f6960094daa88183d169b" translate="yes" xml:space="preserve">
          <source>UriValidator</source>
          <target state="translated">UriValidator</target>
        </trans-unit>
        <trans-unit id="b9ef8e5c22c477698492f2eb201d546b80e4d992" translate="yes" xml:space="preserve">
          <source>UriValidator (Routing\Matching)</source>
          <target state="translated">UriValidator (ルーティングマッチング)</target>
        </trans-unit>
        <trans-unit id="a1ffb6435d5b897a1a9505be58529ca105e7c2b1" translate="yes" xml:space="preserve">
          <source>UriValidator::matches()</source>
          <target state="translated">UriValidator::matches()</target>
        </trans-unit>
        <trans-unit id="9eff5906156c95b179bf55d811165d62dbf6f86e" translate="yes" xml:space="preserve">
          <source>UrlGenerationException</source>
          <target state="translated">UrlGenerationException</target>
        </trans-unit>
        <trans-unit id="885ede85647c1a7b223cc3e8e0925b2257f4658d" translate="yes" xml:space="preserve">
          <source>UrlGenerationException (Routing\Exceptions)</source>
          <target state="translated">UrlGenerationException (RoutingExceptions)</target>
        </trans-unit>
        <trans-unit id="a75bc3a2dc94e7d269950325bc494454f3d84051" translate="yes" xml:space="preserve">
          <source>UrlGenerationException::forMissingParameters()</source>
          <target state="translated">UrlGenerationException::forMissingParameters()</target>
        </trans-unit>
        <trans-unit id="0769e65016ed0c832ab200b2aa5f1bd9d7c92758" translate="yes" xml:space="preserve">
          <source>UrlGenerator</source>
          <target state="translated">UrlGenerator</target>
        </trans-unit>
        <trans-unit id="b1e2ed20c7649a6018d6ee4f1ad2e204e0db0e05" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Contracts)</source>
          <target state="translated">UrlGenerator (契約書)</target>
        </trans-unit>
        <trans-unit id="43458e6fc9284c0a508e0b54a744075649ddcd6e" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Routing)</source>
          <target state="translated">UrlGenerator (ルーティング)</target>
        </trans-unit>
        <trans-unit id="962077cfbfeafaa6253c938f85a8dba9cafae24b" translate="yes" xml:space="preserve">
          <source>UrlGenerator::__construct()</source>
          <target state="translated">UrlGenerator::__construct()</target>
        </trans-unit>
        <trans-unit id="da33d4331a00ff0816ebdb06fb9c8eaf2c90748f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::action()</source>
          <target state="translated">UrlGenerator::action()</target>
        </trans-unit>
        <trans-unit id="a83c1ab93b408a5da87b592ab85b7090eb1321e6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::asset()</source>
          <target state="translated">UrlGenerator::asset()</target>
        </trans-unit>
        <trans-unit id="6f88971227ce1bd491fca24e780bc700e853af1f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::assetFrom()</source>
          <target state="translated">UrlGenerator::assetFrom()</target>
        </trans-unit>
        <trans-unit id="32152f3f1615212665fc00469e3fadf773b1de37" translate="yes" xml:space="preserve">
          <source>UrlGenerator::current()</source>
          <target state="translated">UrlGenerator::current()</target>
        </trans-unit>
        <trans-unit id="2facd0534bc9480e4c20c0a251d1e9a3766da62f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::defaults()</source>
          <target state="translated">UrlGenerator::defaults()</target>
        </trans-unit>
        <trans-unit id="644fec71bb011a37dd3a037828713c3102f8a1ae" translate="yes" xml:space="preserve">
          <source>UrlGenerator::extractQueryString()</source>
          <target state="translated">UrlGenerator::extractQueryString()</target>
        </trans-unit>
        <trans-unit id="930dbb951463ea5132f8f86c24825d1df188f732" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceRootUrl()</source>
          <target state="translated">UrlGenerator::forceRootUrl()</target>
        </trans-unit>
        <trans-unit id="44324252ab95b010591205848107f64eae2ece3e" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceScheme()</source>
          <target state="translated">UrlGenerator::forceScheme()</target>
        </trans-unit>
        <trans-unit id="e5ac6e06a412bcd30f0eb5b5e4e1c8981e87b69c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::format()</source>
          <target state="translated">UrlGenerator::format()</target>
        </trans-unit>
        <trans-unit id="471c2173777b81f2c0a978ff1916746caa917310" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatAction()</source>
          <target state="translated">UrlGenerator::formatAction()</target>
        </trans-unit>
        <trans-unit id="f63022f163ec7f591a9530793b4bf3e803fe2b74" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatHostUsing()</source>
          <target state="translated">UrlGenerator::formatHostUsing()</target>
        </trans-unit>
        <trans-unit id="ba9558b4fc925020bac08b64e6aa98800bf077da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatParameters()</source>
          <target state="translated">UrlGenerator::formatParameters()</target>
        </trans-unit>
        <trans-unit id="77bc4e8f54322b0ed0c88425db13e228caed07a4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatPathUsing()</source>
          <target state="translated">UrlGenerator::formatPathUsing()</target>
        </trans-unit>
        <trans-unit id="d3c233468f2a2a061916a36043db0a969b73ccba" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatRoot()</source>
          <target state="translated">UrlGenerator::formatRoot()</target>
        </trans-unit>
        <trans-unit id="f921db8fec662e2d3a34f7f81cea8393f02001f4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatScheme()</source>
          <target state="translated">UrlGenerator::formatScheme()</target>
        </trans-unit>
        <trans-unit id="18904ae888c8163de2140cf5e9c9fcc8ac854381" translate="yes" xml:space="preserve">
          <source>UrlGenerator::full()</source>
          <target state="translated">UrlGenerator::full()</target>
        </trans-unit>
        <trans-unit id="4843c6f1e994ef77abaf5a340e9d49fe158eaf98" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getDefaultParameters()</source>
          <target state="translated">UrlGenerator::getDefaultParameters()</target>
        </trans-unit>
        <trans-unit id="e69d68e8e68722142ae11988c2b9bccc9d4224bc" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getPreviousUrlFromSession()</source>
          <target state="translated">UrlGenerator::getPreviousUrlFromSession()</target>
        </trans-unit>
        <trans-unit id="47adfe9ee6d750475c97577a69ed7056997ab075" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getRequest()</source>
          <target state="translated">UrlGenerator::getRequest()</target>
        </trans-unit>
        <trans-unit id="9ceb4fe2dd747f996e60a5cf9604850dba51dbec" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getSession()</source>
          <target state="translated">UrlGenerator::getSession()</target>
        </trans-unit>
        <trans-unit id="e8418f58d10ca59ef65eb911712c3acf8c077408" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasCorrectSignature()</source>
          <target state="translated">UrlGenerator::hasCorrectSignature()</target>
        </trans-unit>
        <trans-unit id="277e48c12c3941ad209732eea7965055f06dd152" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasValidRelativeSignature()</source>
          <target state="translated">UrlGenerator::hasValidRelativeSignature()</target>
        </trans-unit>
        <trans-unit id="c66d6d241e6efe575ef5c97b8f1015a20d6eba84" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasValidSignature()</source>
          <target state="translated">UrlGenerator::hasValidSignature()</target>
        </trans-unit>
        <trans-unit id="ca1cb3b12049ce569522f22cf2b619ab2168ffef" translate="yes" xml:space="preserve">
          <source>UrlGenerator::isValidUrl()</source>
          <target state="translated">UrlGenerator::isValidUrl()</target>
        </trans-unit>
        <trans-unit id="d2d25b87c42581a75d02cef68ebc5bb978512ff8" translate="yes" xml:space="preserve">
          <source>UrlGenerator::pathFormatter()</source>
          <target state="translated">UrlGenerator::pathFormatter()</target>
        </trans-unit>
        <trans-unit id="68667b7bb1b86d45ff800caabb6ca6b0e3a75ad6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::previous()</source>
          <target state="translated">UrlGenerator::previous()</target>
        </trans-unit>
        <trans-unit id="085f58c8ee1be5809a1eb56bb0def52fe0899402" translate="yes" xml:space="preserve">
          <source>UrlGenerator::removeIndex()</source>
          <target state="translated">UrlGenerator::removeIndex()</target>
        </trans-unit>
        <trans-unit id="796c12bf7e518d5b6caa6e3b04876f9d41e2e1b6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::route()</source>
          <target state="translated">UrlGenerator::route()</target>
        </trans-unit>
        <trans-unit id="3f4b888a055754d4bd2a2e496a6472a71a5f1232" translate="yes" xml:space="preserve">
          <source>UrlGenerator::routeUrl()</source>
          <target state="translated">UrlGenerator::routeUrl()</target>
        </trans-unit>
        <trans-unit id="546e38149374e7d15613b598c3cda70058e0379d" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secure()</source>
          <target state="translated">UrlGenerator::secure()</target>
        </trans-unit>
        <trans-unit id="9e06c873e1ff0be7027c084e83ca847125148f36" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secureAsset()</source>
          <target state="translated">UrlGenerator::secureAsset()</target>
        </trans-unit>
        <trans-unit id="0049d696c4c49ab56330e02b64abf7c5782c2f21" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setKeyResolver()</source>
          <target state="translated">UrlGenerator::setKeyResolver()</target>
        </trans-unit>
        <trans-unit id="7bb84eafb7b49f8faf7aad9b8973b34509555187" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRequest()</source>
          <target state="translated">UrlGenerator::setRequest()</target>
        </trans-unit>
        <trans-unit id="789e4a0b11bf0edae16be4459b76d327a98e3f44" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRootControllerNamespace()</source>
          <target state="translated">UrlGenerator::setRootControllerNamespace()</target>
        </trans-unit>
        <trans-unit id="fb3f373477aa5a6ec53629555cabdc2308a9cd60" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRoutes()</source>
          <target state="translated">UrlGenerator::setRoutes()</target>
        </trans-unit>
        <trans-unit id="4ff19c4e0f57466ea6fc6dfa735551d5e85bac88" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setSessionResolver()</source>
          <target state="translated">UrlGenerator::setSessionResolver()</target>
        </trans-unit>
        <trans-unit id="5cf090cc105e37125ff3d98bc5204a85b039548a" translate="yes" xml:space="preserve">
          <source>UrlGenerator::signatureHasNotExpired()</source>
          <target state="translated">UrlGenerator::signatureHasNotExpired()</target>
        </trans-unit>
        <trans-unit id="7eaed9594e126480c5f9c637fb9b88556faea2da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::signedRoute()</source>
          <target state="translated">UrlGenerator::signedRoute()</target>
        </trans-unit>
        <trans-unit id="508e07bbc212c1d6693da067f10d6a3d810056da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::temporarySignedRoute()</source>
          <target state="translated">UrlGenerator::temporarySignedRoute()</target>
        </trans-unit>
        <trans-unit id="e75eb34daec7052fa4f1c5ef75a0e419594ddb18" translate="yes" xml:space="preserve">
          <source>UrlGenerator::to()</source>
          <target state="translated">UrlGenerator::to()</target>
        </trans-unit>
        <trans-unit id="4d80db61d2d377e640cbb363d032fd4a26ee4e0c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::toRoute()</source>
          <target state="translated">UrlGenerator::toRoute()</target>
        </trans-unit>
        <trans-unit id="af56f7f12d9fd2230182fbdd0a6bb833213966ca" translate="yes" xml:space="preserve">
          <source>UrlRoutable</source>
          <target state="translated">UrlRoutable</target>
        </trans-unit>
        <trans-unit id="88831b58f6d1222d31691ec4661fb51691d9589f" translate="yes" xml:space="preserve">
          <source>UrlRoutable (Contracts)</source>
          <target state="translated">UrlRoutable (契約書)</target>
        </trans-unit>
        <trans-unit id="26867eb6098ebe702718474a39808543575a18cf" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKey()</source>
          <target state="translated">UrlRoutable::getRouteKey()</target>
        </trans-unit>
        <trans-unit id="531de13b5fac1fca950c86df5cd3cd3c56af20ab" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKeyName()</source>
          <target state="translated">UrlRoutable::getRouteKeyName()</target>
        </trans-unit>
        <trans-unit id="31cb23620e46182ad5a67b605614e703296d3372" translate="yes" xml:space="preserve">
          <source>UrlRoutable::resolveChildRouteBinding()</source>
          <target state="translated">UrlRoutable::resolveChildRouteBinding()</target>
        </trans-unit>
        <trans-unit id="f64287f41a85f084f8752d60b768a92aa5c5dea2" translate="yes" xml:space="preserve">
          <source>UrlRoutable::resolveRouteBinding()</source>
          <target state="translated">UrlRoutable::resolveRouteBinding()</target>
        </trans-unit>
        <trans-unit id="82d9aa8714d152b96d98145954211474a4a200b4" translate="yes" xml:space="preserve">
          <source>UrlWindow</source>
          <target state="translated">UrlWindow</target>
        </trans-unit>
        <trans-unit id="4ac09d342c760e171ef290e74de15fb664e0758f" translate="yes" xml:space="preserve">
          <source>UrlWindow (Pagination)</source>
          <target state="translated">UrlWindow (ページネーション)</target>
        </trans-unit>
        <trans-unit id="254ee6bbdd5efd79d6d42ad23b9937c22c401a12" translate="yes" xml:space="preserve">
          <source>UrlWindow::__construct()</source>
          <target state="translated">UrlWindow::__construct()</target>
        </trans-unit>
        <trans-unit id="a8710b73bc828e6c8f0822bf04003e610c0db5cb" translate="yes" xml:space="preserve">
          <source>UrlWindow::currentPage()</source>
          <target state="translated">UrlWindow::currentPage()</target>
        </trans-unit>
        <trans-unit id="364f275d33ecdb278caba77beaf055db29737f00" translate="yes" xml:space="preserve">
          <source>UrlWindow::get()</source>
          <target state="translated">UrlWindow::get()</target>
        </trans-unit>
        <trans-unit id="710443fde65d94cfc63eedfc96ba98f04acb5c30" translate="yes" xml:space="preserve">
          <source>UrlWindow::getAdjacentUrlRange()</source>
          <target state="translated">UrlWindow::getAdjacentUrlRange()</target>
        </trans-unit>
        <trans-unit id="f3e3248b32fec4e45b1a7bc4a3bee3e3f2318828" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFinish()</source>
          <target state="translated">UrlWindow::getFinish()</target>
        </trans-unit>
        <trans-unit id="c122b588961947ddb91ff54012612f8df543dd7d" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFullSlider()</source>
          <target state="translated">UrlWindow::getFullSlider()</target>
        </trans-unit>
        <trans-unit id="a2a4408d81c496eef32b1bd4f094b611b7188eb9" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToBeginning()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToBeginning()</target>
        </trans-unit>
        <trans-unit id="1d6e0206f309c298f5ae5fcd088665a799719b54" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToEnding()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToEnding()</target>
        </trans-unit>
        <trans-unit id="4f04e8bc590290708741548077563e5ad0f2e67b" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSmallSlider()</source>
          <target state="translated">UrlWindow::getSmallSlider()</target>
        </trans-unit>
        <trans-unit id="7d90fac9aa941967c93f97cec7322364ee9590ef" translate="yes" xml:space="preserve">
          <source>UrlWindow::getStart()</source>
          <target state="translated">UrlWindow::getStart()</target>
        </trans-unit>
        <trans-unit id="b131c59f5e016f4708ef17de7064718df2080c67" translate="yes" xml:space="preserve">
          <source>UrlWindow::getUrlSlider()</source>
          <target state="translated">UrlWindow::getUrlSlider()</target>
        </trans-unit>
        <trans-unit id="1f9db9230bc50f04616b2fbcf0215e94d105cadc" translate="yes" xml:space="preserve">
          <source>UrlWindow::hasPages()</source>
          <target state="translated">UrlWindow::hasPages()</target>
        </trans-unit>
        <trans-unit id="09c4f7c2a4e5c08140573da3f0f13d9b494e5e76" translate="yes" xml:space="preserve">
          <source>UrlWindow::lastPage()</source>
          <target state="translated">UrlWindow::lastPage()</target>
        </trans-unit>
        <trans-unit id="920ce395356ed4a66196648b5dd3fdf76c6236e5" translate="yes" xml:space="preserve">
          <source>UrlWindow::make()</source>
          <target state="translated">UrlWindow::make()</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="1eacdee234ef1b0e0b0211b90a5e5ca754328790" translate="yes" xml:space="preserve">
          <source>Use the default date class when generating dates.</source>
          <target state="translated">日付を生成する際には、既定の日付クラスを使用します。</target>
        </trans-unit>
        <trans-unit id="0f3d075a25e14a0e6d5ebf97174a7206edf23a62" translate="yes" xml:space="preserve">
          <source>Use the given Carbon factory when generating dates.</source>
          <target state="translated">日付を生成する際には、指定されたカーボンファクトリーを使用します。</target>
        </trans-unit>
        <trans-unit id="d083a4731a08d850d3ebe74d8451ce258de7317b" translate="yes" xml:space="preserve">
          <source>Use the given date type (class) when generating dates.</source>
          <target state="translated">日付を生成する際には、指定された日付タイプ(クラス)を使用します。</target>
        </trans-unit>
        <trans-unit id="ac8ad0b96f0102b8578078d30950925cf13fbfe0" translate="yes" xml:space="preserve">
          <source>Use the given handler when generating dates (class name, callable, or factory).</source>
          <target state="translated">日付(クラス名、呼び出し可能、ファクトリー)を生成する際に、指定されたハンドラを使用します。</target>
        </trans-unit>
        <trans-unit id="cd92a2af065149bb26b02b77ff1a08bf20165eae" translate="yes" xml:space="preserve">
          <source>Use the write pdo for query.</source>
          <target state="translated">クエリにはwrite pdoを使用します。</target>
        </trans-unit>
        <trans-unit id="e4f4a0ed9e21405e675e8b19940bbbf737969532" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions</source>
          <target state="translated">UsePusherChannelConventions</target>
        </trans-unit>
        <trans-unit id="f22835b3432dfa66e1e5dc1fffe499d98f38c199" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions (Broadcasting\Broadcasters)</source>
          <target state="translated">UsePusherChannelConventions (Broadcasters)</target>
        </trans-unit>
        <trans-unit id="3574d67353af85f96380c9eddb23fda7cae133eb" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions::isGuardedChannel()</source>
          <target state="translated">UsePusherChannelConventions::isGuardedChannel()</target>
        </trans-unit>
        <trans-unit id="46c184f534d49637912f77649a76dc5e9e61ad17" translate="yes" xml:space="preserve">
          <source>UsePusherChannelConventions::normalizeChannelName()</source>
          <target state="translated">UsePusherChannelConventions::normalizeChannelName()</target>
        </trans-unit>
        <trans-unit id="4cf361c53629d5b3a5f597c733c74c5fb7ac7600" translate="yes" xml:space="preserve">
          <source>Used to extract a sub-section of the data for faster iteration.</source>
          <target state="translated">高速な反復処理のためにデータのサブセクションを抽出するために使用されます。</target>
        </trans-unit>
        <trans-unit id="9f8a2389a20ca0752aa9e95093515517e90e194c" translate="yes" xml:space="preserve">
          <source>User</source>
          <target state="translated">User</target>
        </trans-unit>
        <trans-unit id="f6e6901a736331a2d03d0bae71f2aa30c7a437c7" translate="yes" xml:space="preserve">
          <source>User (Foundation\Auth)</source>
          <target state="translated">User (Foundation\Auth)</target>
        </trans-unit>
        <trans-unit id="3dead4fbc02efb51af5fbf25b8189d6cb3e4cc57" translate="yes" xml:space="preserve">
          <source>User Customizations</source>
          <target state="translated">ユーザーのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="52f4c119180f7fb6d994831c0aa80b1b6a041349" translate="yes" xml:space="preserve">
          <source>User Identification</source>
          <target state="translated">利用者識別</target>
        </trans-unit>
        <trans-unit id="c5894e60fa9cbc30ade4b7159bc3b136927b3eb5" translate="yes" xml:space="preserve">
          <source>User Preferred Locales</source>
          <target state="translated">ユーザーの希望するロケール</target>
        </trans-unit>
        <trans-unit id="00694732aa07caf73ddfd791cbe4fa72d599807b" translate="yes" xml:space="preserve">
          <source>User exposed observable events.</source>
          <target state="translated">ユーザーに公開された観測可能なイベント。</target>
        </trans-unit>
        <trans-unit id="0ac94d25b6b0c34e1f5760af0a042b7043e679c5" translate="yes" xml:space="preserve">
          <source>User log for Nginx errors.</source>
          <target state="translated">Nginxのエラーのためのユーザーログ</target>
        </trans-unit>
        <trans-unit id="6ce36742b51d45166a8f8937eca8a3d174310237" translate="yes" xml:space="preserve">
          <source>User log for PHP errors.</source>
          <target state="translated">PHPのエラーのためのユーザーログ。</target>
        </trans-unit>
        <trans-unit id="19932fcd6dd1e91b6f6ec9819c90fd63e29c3f4e" translate="yes" xml:space="preserve">
          <source>UserProvider</source>
          <target state="translated">UserProvider</target>
        </trans-unit>
        <trans-unit id="b1bacba86cebdb93ac86015e7becb4856b6787db" translate="yes" xml:space="preserve">
          <source>UserProvider (Contracts)</source>
          <target state="translated">ユーザープロバイダー(契約</target>
        </trans-unit>
        <trans-unit id="683fa399ea4e3bea06e0f6293d7beffac735ea8c" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByCredentials()</source>
          <target state="translated">UserProvider::retrieveByCredentials()</target>
        </trans-unit>
        <trans-unit id="4d5d883b153ed3c4b328c3b600b9be62a29d66f5" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveById()</source>
          <target state="translated">UserProvider::retrieveById()</target>
        </trans-unit>
        <trans-unit id="f643afb3ac6a9e952d9007cdb9e0117047753cbf" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByToken()</source>
          <target state="translated">UserProvider::retrieveByToken()</target>
        </trans-unit>
        <trans-unit id="2800a0be963e2c4eab0cca73e021a0fdc9bbca68" translate="yes" xml:space="preserve">
          <source>UserProvider::updateRememberToken()</source>
          <target state="translated">UserProvider::updateRememberToken()</target>
        </trans-unit>
        <trans-unit id="66b7b24c2b975df0a3277fc043c17a1d74c004c1" translate="yes" xml:space="preserve">
          <source>UserProvider::validateCredentials()</source>
          <target state="translated">UserProvider::validateCredentials()</target>
        </trans-unit>
        <trans-unit id="2e7db576eadb453c186f445a796970d3e0af302f" translate="yes" xml:space="preserve">
          <source>Username Customization</source>
          <target state="translated">ユーザー名のカスタマイズ</target>
        </trans-unit>
        <trans-unit id="2c1db596d2dfc88f58701d9fe9d57e9dcdcc4032" translate="yes" xml:space="preserve">
          <source>Using A Global &lt;code&gt;from&lt;/code&gt; Address</source>
          <target state="translated">グローバル &lt;code&gt;from&lt;/code&gt; アドレスの使用</target>
        </trans-unit>
        <trans-unit id="216f35abbad1de6e68b33b2cdcc8837d76c280f4" translate="yes" xml:space="preserve">
          <source>Using An Example Application</source>
          <target state="translated">アプリケーション例の使用</target>
        </trans-unit>
        <trans-unit id="62e9f45ef979b380dbcb1184e2215f7d004bdca7" translate="yes" xml:space="preserve">
          <source>Using An Existing Client Instance</source>
          <target state="translated">既存のクライアントインスタンスの使用</target>
        </trans-unit>
        <trans-unit id="a9d983ec2ba25e12439b4bb33bb9cb4ff20cec94" translate="yes" xml:space="preserve">
          <source>Using Another Domain</source>
          <target state="translated">別のドメインを使用する</target>
        </trans-unit>
        <trans-unit id="1cfff2a1417bb9f3fa6ef651cf3c78ac02039444" translate="yes" xml:space="preserve">
          <source>Using Attributes &amp;amp; Slots Inside The Class</source>
          <target state="translated">クラス内での属性とスロットの使用</target>
        </trans-unit>
        <trans-unit id="e79b57a72e1ee274f7267c00a9af517c0d13725c" translate="yes" xml:space="preserve">
          <source>Using Bootstrap</source>
          <target state="translated">ブートストラップを使う</target>
        </trans-unit>
        <trans-unit id="25112a4804e46ede87116524e3f34212886cddfb" translate="yes" xml:space="preserve">
          <source>Using Closures</source>
          <target state="translated">クロージャの使用</target>
        </trans-unit>
        <trans-unit id="25786ca0bd0d30fd8fa61a08279117e107aabca9" translate="yes" xml:space="preserve">
          <source>Using Components</source>
          <target state="translated">コンポーネントの使用</target>
        </trans-unit>
        <trans-unit id="24932eb2b8d5b43b0680490a8468087bc33abbd5" translate="yes" xml:space="preserve">
          <source>Using Cursors</source>
          <target state="translated">カーサの使用</target>
        </trans-unit>
        <trans-unit id="fa10774d0e271ce1daa32ba7d67741dff0dd4dd8" translate="yes" xml:space="preserve">
          <source>Using Extensions</source>
          <target state="translated">拡張機能の使用</target>
        </trans-unit>
        <trans-unit id="686c3d4bfe9f7aa5efa5e0095401e7adf93fea51" translate="yes" xml:space="preserve">
          <source>Using Factories</source>
          <target state="translated">工場の利用</target>
        </trans-unit>
        <trans-unit id="f2036f1ba7e70d3832aa3097ae413a7dc03e90ba" translate="yes" xml:space="preserve">
          <source>Using Forms</source>
          <target state="translated">フォームの使用</target>
        </trans-unit>
        <trans-unit id="c4a2849b37e855e210cf7bff023adbf8def68ec4" translate="yes" xml:space="preserve">
          <source>Using Magic Methods</source>
          <target state="translated">魔法のメソッドを使って</target>
        </trans-unit>
        <trans-unit id="9ee6d0556e77496962a7f68fc2938ee8a2b4b239" translate="yes" xml:space="preserve">
          <source>Using Model Factories</source>
          <target state="translated">モデル工場の使用</target>
        </trans-unit>
        <trans-unit id="9024e7794fa530c1d7fe273d02883b5baa90cf94" translate="yes" xml:space="preserve">
          <source>Using Multiple Database Connections</source>
          <target state="translated">複数のデータベース接続を使用する</target>
        </trans-unit>
        <trans-unit id="3705315f35938a6abf481834794518bd704bd8ea" translate="yes" xml:space="preserve">
          <source>Using Multiple Redis Connections</source>
          <target state="translated">複数の Redis 接続を使用する</target>
        </trans-unit>
        <trans-unit id="70946ec4b6a6083b237c2f5b126322c2957bd26c" translate="yes" xml:space="preserve">
          <source>Using Named Bindings</source>
          <target state="translated">名前付きバインディングの使用</target>
        </trans-unit>
        <trans-unit id="55cb1e4b38a0c574a47a6387cc78f55aea1bb2bc" translate="yes" xml:space="preserve">
          <source>Using OAuth2 with authorization codes is how most developers are familiar with OAuth2. When using authorization codes, a client application will redirect a user to your server where they will either approve or deny the request to issue an access token to the client.</source>
          <target state="translated">認証コードを使って OAuth2 を使用することは、ほとんどの開発者が OAuth2 をどのように理解しているかを示しています。認証コードを使用する場合、クライアントアプリケーションはユーザをサーバにリダイレクトし、サーバはクライアントにアクセストークンを発行するリクエストを承認するか拒否します。</target>
        </trans-unit>
        <trans-unit id="96139a5c99e2a55f4e1d42578e8b77ebaa7c6ecd" translate="yes" xml:space="preserve">
          <source>Using Other Browsers</source>
          <target state="translated">他のブラウザを使用する</target>
        </trans-unit>
        <trans-unit id="547f3d366f6ba6dbebb442ff52e5209ac22bfe3d" translate="yes" xml:space="preserve">
          <source>Using React</source>
          <target state="translated">Reactを使う</target>
        </trans-unit>
        <trans-unit id="1f29841b38fd243f89b80a9f29f63a4ed2ee9216" translate="yes" xml:space="preserve">
          <source>Using Rule Objects</source>
          <target state="translated">ルールオブジェクトの使用</target>
        </trans-unit>
        <trans-unit id="3d7a463ee7e4d28ba8333eaae5d3584b6aea8c25" translate="yes" xml:space="preserve">
          <source>Using Seeds</source>
          <target state="translated">種子の利用</target>
        </trans-unit>
        <trans-unit id="e2228f5e9598a5d7c4ea863d0e5acf274d8ad1a0" translate="yes" xml:space="preserve">
          <source>Using Short Keys</source>
          <target state="translated">ショートキーの使用</target>
        </trans-unit>
        <trans-unit id="c142408ff0ea25a774b51389fb5125e10d488f17" translate="yes" xml:space="preserve">
          <source>Using The &lt;code&gt;from&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; メソッドの使用</target>
        </trans-unit>
        <trans-unit id="e828f2da10d4699211aea8ec287ea22dc98d8e4a" translate="yes" xml:space="preserve">
          <source>Using The Encrypter</source>
          <target state="translated">暗号化器の使用</target>
        </trans-unit>
        <trans-unit id="32e4c8f87a22afe4dc721aef0e4172613cbd432a" translate="yes" xml:space="preserve">
          <source>Using The Keyboard</source>
          <target state="translated">キーボードの使用</target>
        </trans-unit>
        <trans-unit id="6acef1ffb7973221335871f1416a7eb621f9bb2c" translate="yes" xml:space="preserve">
          <source>Using The Mouse</source>
          <target state="translated">マウスの使用</target>
        </trans-unit>
        <trans-unit id="2be585cd02cbac6e6aa7f3a5e76a42890611569a" translate="yes" xml:space="preserve">
          <source>Using The Notifiable Trait</source>
          <target state="translated">届出可能な特性を利用する</target>
        </trans-unit>
        <trans-unit id="bc0066137ddde9f57acea92265960870ddbc85d4" translate="yes" xml:space="preserve">
          <source>Using The Notification Facade</source>
          <target state="translated">通知ファサードの使用</target>
        </trans-unit>
        <trans-unit id="2c4389b8f20380044dd4d1a71631f1bd707c2a9a" translate="yes" xml:space="preserve">
          <source>Using The Session</source>
          <target state="translated">セッションの使用</target>
        </trans-unit>
        <trans-unit id="4ddeb48ad6c4a3dbd99803569688896b32d1a88b" translate="yes" xml:space="preserve">
          <source>Using Translation Strings As Keys</source>
          <target state="translated">翻訳文字列をキーとして使用する</target>
        </trans-unit>
        <trans-unit id="dd22fed353795223638fa3d57ab7cca926b4236a" translate="yes" xml:space="preserve">
          <source>Using a few simple methods, you may access all of the user input from your &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance without worrying about which HTTP verb was used for the request. Regardless of the HTTP verb, the &lt;code&gt;input&lt;/code&gt; method may be used to retrieve user input:</source>
          <target state="translated">いくつかの単純なメソッドを使用して、リクエストにどのHTTP動詞が使用されたかを気にすることなく、 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; インスタンスからすべてのユーザー入力にアクセスできます。HTTP動詞に関係なく、 &lt;code&gt;input&lt;/code&gt; メソッドを使用してユーザー入力を取得できます。</target>
        </trans-unit>
        <trans-unit id="e9fda880257aba205c2a22d38cfb42a74e3c5c03" translate="yes" xml:space="preserve">
          <source>Using automatic hostnames works best for &quot;per project&quot; installations of Homestead. If you host multiple sites on a single Homestead instance, you may add the &quot;domains&quot; for your web sites to the &lt;code&gt;hosts&lt;/code&gt; file on your machine. The &lt;code&gt;hosts&lt;/code&gt; file will redirect requests for your Homestead sites into your Homestead machine. On Mac and Linux, this file is located at &lt;code&gt;/etc/hosts&lt;/code&gt;. On Windows, it is located at &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt;. The lines you add to this file will look like the following:</source>
          <target state="translated">自動ホスト名の使用は、Homesteadの「プロジェクトごと」のインストールに最適です。1つのHomesteadインスタンスで複数のサイトをホストする場合は、Webサイトの「ドメイン」をマシンの &lt;code&gt;hosts&lt;/code&gt; ファイルに追加できます。 &lt;code&gt;hosts&lt;/code&gt; ファイルには、あなたのホームステッドのマシンにあなたのホームステッドサイトの要求をリダイレクトします。MacおよびLinuxでは、このファイルは &lt;code&gt;/etc/hosts&lt;/code&gt; にあります。Windowsでは、 &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt; 。このファイルに追加する行は次のようになります。</target>
        </trans-unit>
        <trans-unit id="499b7bb5cc827ba820779c1f492f97fb13dcac85" translate="yes" xml:space="preserve">
          <source>Using contextual binding, you may resolve this dependency by providing the &lt;code&gt;give&lt;/code&gt; method with a Closure that returns an array of resolved &lt;code&gt;Filter&lt;/code&gt; instances:</source>
          <target state="translated">コンテキストバインディングを使用すると、解決された &lt;code&gt;Filter&lt;/code&gt; インスタンスの配列を返すClosureを &lt;code&gt;give&lt;/code&gt; メソッドに提供することで、この依存関係を解決できます。</target>
        </trans-unit>
        <trans-unit id="17438b1ca0a4af5dbc616107d6d56a129c0a5e4d" translate="yes" xml:space="preserve">
          <source>Using directives such as &lt;code&gt;@env&lt;/code&gt; directly on a component is not supported at this time.</source>
          <target state="translated">&lt;code&gt;@env&lt;/code&gt; では、コンポーネントで@envなどのディレクティブを直接使用することはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="406c1ebda5c578fc0028f36c7519ac73224c8118" translate="yes" xml:space="preserve">
          <source>Using either the &lt;code&gt;pingBefore($url)&lt;/code&gt; or &lt;code&gt;thenPing($url)&lt;/code&gt; feature requires the Guzzle HTTP library. You can add Guzzle to your project using the Composer package manager:</source>
          <target state="translated">いずれかを使用して &lt;code&gt;pingBefore($url)&lt;/code&gt; または &lt;code&gt;thenPing($url)&lt;/code&gt; 機能では、がつがつ食うHTTPライブラリが必要です。Composerパッケージマネージャを使用して、プロジェクトにGuzzleを追加できます。</target>
        </trans-unit>
        <trans-unit id="0e30d58ca464af791be0f4dd1b5adbb1b8914db2" translate="yes" xml:space="preserve">
          <source>Using real-time facades, you may treat any class in your application as if it were a facade. To illustrate how this can be used, let's examine an alternative. For example, let's assume our &lt;code&gt;Podcast&lt;/code&gt; model has a &lt;code&gt;publish&lt;/code&gt; method. However, in order to publish the podcast, we need to inject a &lt;code&gt;Publisher&lt;/code&gt; instance:</source>
          <target state="translated">リアルタイムのファサードを使用すると、アプリケーション内のクラスをファサードのように扱うことができます。これをどのように使用できるかを説明するために、別の方法を検討しましょう。たとえば、 &lt;code&gt;Podcast&lt;/code&gt; モデルに &lt;code&gt;publish&lt;/code&gt; メソッドがあるとします。ただし、ポッドキャストを公開するには、 &lt;code&gt;Publisher&lt;/code&gt; インスタンスを挿入する必要があります。</target>
        </trans-unit>
        <trans-unit id="1989c15c720e800a884e34521b523d9b38a95afa" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Cache&lt;/code&gt; facade, you may access various cache stores via the &lt;code&gt;store&lt;/code&gt; method. The key passed to the &lt;code&gt;store&lt;/code&gt; method should correspond to one of the stores listed in the &lt;code&gt;stores&lt;/code&gt; configuration array in your &lt;code&gt;cache&lt;/code&gt; configuration file:</source>
          <target state="translated">&lt;code&gt;Cache&lt;/code&gt; ファサードを使用すると、 &lt;code&gt;store&lt;/code&gt; メソッドを介してさまざまなキャッシュストアにアクセスできます。 &lt;code&gt;store&lt;/code&gt; メソッドに渡されるキーは、 &lt;code&gt;cache&lt;/code&gt; 構成ファイル内の &lt;code&gt;stores&lt;/code&gt; 構成配列にリストされているストアの1つに対応している必要があります。</target>
        </trans-unit>
        <trans-unit id="b7a1520a74cd435ee873b2f1ed48c86b342a6b5f" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Route::fallback&lt;/code&gt; method, you may define a route that will be executed when no other route matches the incoming request. Typically, unhandled requests will automatically render a &quot;404&quot; page via your application's exception handler. However, since you may define the &lt;code&gt;fallback&lt;/code&gt; route within your &lt;code&gt;routes/web.php&lt;/code&gt; file, all middleware in the &lt;code&gt;web&lt;/code&gt; middleware group will apply to the route. Of course, you are free to add additional middleware to this route as needed:</source>
          <target state="translated">&lt;code&gt;Route::fallback&lt;/code&gt; メソッドを使用して、着信リクエストに一致する他のルートがないときに実行されるルートを定義できます。通常、未処理のリクエストは、アプリケーションの例外ハンドラを介して「404」ページを自動的にレンダリングします。ただし、 &lt;code&gt;routes/web.php&lt;/code&gt; ファイル内で &lt;code&gt;fallback&lt;/code&gt; ルートを定義できるため、 &lt;code&gt;web&lt;/code&gt; ミドルウェアグループのすべてのミドルウェアがルートに適用されます。もちろん、必要に応じて、このルートにミドルウェアを自由に追加できます。</target>
        </trans-unit>
        <trans-unit id="69fb67d90753e9b38d58d2e4f323adafcad646da" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Route::fallback&lt;/code&gt; method, you may define a route that will be executed when no other route matches the incoming request. Typically, unhandled requests will automatically render a &quot;404&quot; page via your application's exception handler. However, since you may define the &lt;code&gt;fallback&lt;/code&gt; route within your &lt;code&gt;routes/web.php&lt;/code&gt; file, all middleware in the &lt;code&gt;web&lt;/code&gt; middleware group will apply to the route. You are free to add additional middleware to this route as needed:</source>
          <target state="translated">&lt;code&gt;Route::fallback&lt;/code&gt; メソッドを使用して、他のルートが着信要求に一致しない場合に実行されるルートを定義できます。通常、未処理のリクエストは、アプリケーションの例外ハンドラを介して「404」ページを自動的にレンダリングします。ただし、 &lt;code&gt;routes/web.php&lt;/code&gt; ファイル内で &lt;code&gt;fallback&lt;/code&gt; ルートを定義できるため、 &lt;code&gt;web&lt;/code&gt; ミドルウェアグループ内のすべてのミドルウェアがルートに適用されます。必要に応じて、このルートにミドルウェアを自由に追加できます。</target>
        </trans-unit>
        <trans-unit id="65f521afa14d4f75e7a8432c2968b7b3abc4f8a2" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks to be executed before or after a queued job is processed. These callbacks are a great opportunity to perform additional logging or increment statistics for a dashboard. Typically, you should call these methods from a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;. For example, we may use the &lt;code&gt;AppServiceProvider&lt;/code&gt; that is included with Laravel:</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサード&lt;/a&gt;の &lt;code&gt;before&lt;/code&gt; および &lt;code&gt;after&lt;/code&gt; メソッドを使用して、キューに入れられたジョブが処理される前または後に実行されるコールバックを指定できます。これらのコールバックは、ダッシュボードの追加のロギングまたはインクリメント統計を実行する絶好の機会です。通常、これらのメソッドは&lt;a href=&quot;providers&quot;&gt;サービスプロバイダー&lt;/a&gt;から呼び出す必要があります。たとえば、Laravelに含まれている &lt;code&gt;AppServiceProvider&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="b783bcb9ebc1f36e40dc3bc7c1644f534e87b195" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods, you may specify code to be executed before and after the scheduled task is complete:</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; メソッドと &lt;code&gt;after&lt;/code&gt; メソッドを使用して、スケジュールされたタスクが完了する前後に実行するコードを指定できます。</target>
        </trans-unit>
        <trans-unit id="56c4c76e7391f602da6b92e92ebf5057f621b782" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;catch&lt;/code&gt; method, you may provide a Closure that should be executed if the queued Closure fails to complete successfully after exhausting all of your queue's configured retry attempts:</source>
          <target state="translated">&lt;code&gt;catch&lt;/code&gt; メソッドを使用すると、キューの構成済みの再試行をすべて使い果たした後、キューに入れられたクロージャが正常に完了しなかった場合に実行する必要があるクロージャを指定できます。</target>
        </trans-unit>
        <trans-unit id="678c4bdbc0980fe89557af54092436241e5d6049" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;emailOutputTo&lt;/code&gt; method, you may e-mail the output to an e-mail address of your choice. Before e-mailing the output of a task, you should configure Laravel's &lt;a href=&quot;mail&quot;&gt;e-mail services&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;emailOutputTo&lt;/code&gt; メソッドを使用すると、選択した電子メールアドレスに出力を電子メールで送信できます。タスクの出力を電子メールで送信する前に、Laravelの&lt;a href=&quot;mail&quot;&gt;電子メールサービスを&lt;/a&gt;設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="805cc0a60fdd61923070deec51473812bc87daf6" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;first&lt;/code&gt; method, you may create the first view that exists in a given array of views. This is useful if your application or package allows views to be customized or overwritten:</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; 方法を使用して、特定のビューの配列に存在する最初のビューを作成できます。これは、アプリケーションまたはパッケージでビューのカスタマイズまたは上書きが許可されている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="7a926a83ee058b1589aa1d7379c1abc5befa110a" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;first&lt;/code&gt; method, you may render the first attribute in a given attribute bag:</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; 方法を使用して、特定の属性バッグの最初の属性をレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="d89c7129bfcb2320bd6e3cf389f22cc353c3275e" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;looping&lt;/code&gt; method on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks that execute before the worker attempts to fetch a job from a queue. For example, you might register a Closure to rollback any transactions that were left open by a previously failed job:</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサード&lt;/a&gt;で &lt;code&gt;looping&lt;/code&gt; メソッドを使用すると、ワーカーがキューからジョブをフェッチしようとする前に実行するコールバックを指定できます。たとえば、以前に失敗したジョブによって開いたままにされたトランザクションをロールバックするためにクロージャを登録できます。</target>
        </trans-unit>
        <trans-unit id="c88eb0e8a9ad89538b979ac4c1c5c209c1188062" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;pingBefore&lt;/code&gt; and &lt;code&gt;thenPing&lt;/code&gt; methods, the scheduler can automatically ping a given URL before or after a task is complete. This method is useful for notifying an external service, such as &lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer&lt;/a&gt;, that your scheduled task is commencing or has finished execution:</source>
          <target state="translated">使用 &lt;code&gt;pingBefore&lt;/code&gt; と &lt;code&gt;thenPing&lt;/code&gt; タスクが完了する前または後の方法、スケジューラが自動的に指定されたURLにpingを実行することができます。このメソッドは、&lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer&lt;/a&gt;などの外部サービスに、スケジュールされたタスクが開始中または実行が完了したことを通知するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="50064d12b24b039c91d1244e92a456d73c9241ec" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;psubscribe&lt;/code&gt; method, you may subscribe to a wildcard channel, which may be useful for catching all messages on all channels. The &lt;code&gt;$channel&lt;/code&gt; name will be passed as the second argument to the provided callback &lt;code&gt;Closure&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;psubscribe&lt;/code&gt; メソッドを使用すると、ワイルドカードチャネルをサブスクライブできます。これは、すべてのチャネルのすべてのメッセージをキャッチするのに役立ちます。 &lt;code&gt;$channel&lt;/code&gt; 名が提供されるコールバックへの2番目の引数として渡されます &lt;code&gt;Closure&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="7cff7155c545f37c1ab3e589532cfcfadb593e62" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;queue&lt;/code&gt; method on the &lt;code&gt;Artisan&lt;/code&gt; facade, you may even queue Artisan commands so they are processed in the background by your &lt;a href=&quot;queues&quot;&gt;queue workers&lt;/a&gt;. Before using this method, make sure you have configured your queue and are running a queue listener:</source>
          <target state="translated">&lt;code&gt;Artisan&lt;/code&gt; ファサードの &lt;code&gt;queue&lt;/code&gt; メソッドを使用すると、Artisanコマンドを&lt;a href=&quot;queues&quot;&gt;キューに入れ&lt;/a&gt;て、キューワーカーによってバックグラウンドで処理されるようにすることもできます。このメソッドを使用する前に、キューを構成し、キューリスナーを実行していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="27a24dbd64e1ac755132eb44feff861706999322" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;timezone&lt;/code&gt; method, you may specify that a scheduled task's time should be interpreted within a given timezone:</source>
          <target state="translated">&lt;code&gt;timezone&lt;/code&gt; メソッドを使用すると、スケジュールされたタスクの時間を特定のタイムゾーン内で解釈するように指定できます。</target>
        </trans-unit>
        <trans-unit id="e3ed6eadd37b5bc0955a052e8e60637bdc9c6048" translate="yes" xml:space="preserve">
          <source>Using the Memcached driver requires the &lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECL package&lt;/a&gt; to be installed. You may list all of your Memcached servers in the &lt;code&gt;config/cache.php&lt;/code&gt; configuration file:</source>
          <target state="translated">Memcachedドライバーを使用するには、&lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECLパッケージ&lt;/a&gt;をインストールする必要があります。すべてのMemcachedサーバーを &lt;code&gt;config/cache.php&lt;/code&gt; 構成ファイルにリストできます。</target>
        </trans-unit>
        <trans-unit id="58f310a81c605f751594a4ca39a2a50c4c3577f4" translate="yes" xml:space="preserve">
          <source>Using the new &lt;code&gt;catch&lt;/code&gt; method, you may now provide a Closure that should be executed if a queued Closure fails to complete successfully after exhausting all of your queue's configured retry attempts:</source>
          <target state="translated">新しい &lt;code&gt;catch&lt;/code&gt; メソッドを使用して、キューに設定されたすべての再試行を使い果たした後、キューに入れられたクロージャが正常に完了しなかった場合に実行する必要があるクロージャを提供できるようになりました。</target>
        </trans-unit>
        <trans-unit id="78a2d37146e8eba2af43a7613e424eb034b4424b" translate="yes" xml:space="preserve">
          <source>Using the subquery functionality available to the &lt;code&gt;select&lt;/code&gt; and &lt;code&gt;addSelect&lt;/code&gt; methods, we can select all of the &lt;code&gt;destinations&lt;/code&gt; and the name of the flight that most recently arrived at that destination using a single query:</source>
          <target state="translated">&lt;code&gt;addSelect&lt;/code&gt; メソッドとaddSelectメソッドで使用できるサブクエリ機能を使用 &lt;code&gt;select&lt;/code&gt; と、1つのクエリを使用して、すべての &lt;code&gt;destinations&lt;/code&gt; とその目的地に最後に到着したフライトの名前を選択できます。</target>
        </trans-unit>
        <trans-unit id="34b17c91b4d18aaebbbfe1050a5a592f42520a50" translate="yes" xml:space="preserve">
          <source>Using these model definitions and relationships, we may retrieve &lt;code&gt;ActivityFeed&lt;/code&gt; model instances and eager load all &lt;code&gt;parentable&lt;/code&gt; models and their respective nested relationship counts:</source>
          <target state="translated">これらのモデル定義と関係を使用して、 &lt;code&gt;ActivityFeed&lt;/code&gt; モデルインスタンスを取得し、すべての &lt;code&gt;parentable&lt;/code&gt; モデルとそれぞれのネストされた関係カウントを熱心にロードできます。</target>
        </trans-unit>
        <trans-unit id="2b635005fa10ad4dd5e39fb5d08120a6cfc28c7a" translate="yes" xml:space="preserve">
          <source>Using these model definitions and relationships, we may retrieve &lt;code&gt;ActivityFeed&lt;/code&gt; model instances and eager load all &lt;code&gt;parentable&lt;/code&gt; models and their respective nested relationships:</source>
          <target state="translated">これらのモデル定義と関係を使用して、 &lt;code&gt;ActivityFeed&lt;/code&gt; モデルインスタンスを取得し、すべての &lt;code&gt;parentable&lt;/code&gt; モデルとそれぞれのネストされた関係を熱心にロードできます。</target>
        </trans-unit>
        <trans-unit id="4c31156efed35ee7814650f8971c3698059440e3" translate="yes" xml:space="preserve">
          <source>Util</source>
          <target state="translated">Util</target>
        </trans-unit>
        <trans-unit id="3381deb6de2c946be91070f6793edeb6ed737dd5" translate="yes" xml:space="preserve">
          <source>Util (Container)</source>
          <target state="translated">ユーティリティ(コンテナ)</target>
        </trans-unit>
        <trans-unit id="7a113dca44af51991a38c445f7c89b4c32510c62" translate="yes" xml:space="preserve">
          <source>Util::arrayWrap()</source>
          <target state="translated">Util::arrayWrap()</target>
        </trans-unit>
        <trans-unit id="14baba7ebe94810f45f2044da2f65072e5533037" translate="yes" xml:space="preserve">
          <source>Util::getParameterClassName()</source>
          <target state="translated">Util::getParameterClassName()</target>
        </trans-unit>
        <trans-unit id="b5ba942a8e2c83fbd24f49896a6252d63736f617" translate="yes" xml:space="preserve">
          <source>Util::unwrapIfClosure()</source>
          <target state="translated">Util::unwrapIfClosure()</target>
        </trans-unit>
        <trans-unit id="bcb12112c0f1179c9c17c9f8020135846a27f2d8" translate="yes" xml:space="preserve">
          <source>Utilizing A Local Scope</source>
          <target state="translated">ローカルスコープの活用</target>
        </trans-unit>
        <trans-unit id="976bf1c80ce87f4d5095dac7464aeabbcb5981e2" translate="yes" xml:space="preserve">
          <source>UuidInterface</source>
          <target state="translated">UuidInterface</target>
        </trans-unit>
        <trans-unit id="a9b75398a82b8ed5247b1501be51d83c1e6df52b" translate="yes" xml:space="preserve">
          <source>VARCHAR equivalent column with a length.</source>
          <target state="translated">VARCHARに相当する長さのカラム。</target>
        </trans-unit>
        <trans-unit id="1033afd1ffe433be3334a586831b5b90e719c44a" translate="yes" xml:space="preserve">
          <source>VARCHAR equivalent column with a optional length.</source>
          <target state="translated">任意の長さのVARCHAR等価列。</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="7c4318788e30db66abddf721412f42bf7eac6d83" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PRIVATE</source>
          <target state="translated">VISIBILITY_PRIVATE</target>
        </trans-unit>
        <trans-unit id="17fd123d652bb24f8e16616f88600967f74eeb90" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PUBLIC</source>
          <target state="translated">VISIBILITY_PUBLIC</target>
        </trans-unit>
        <trans-unit id="1f185450ee544ae965bb9573dd704b8abfefef26" translate="yes" xml:space="preserve">
          <source>Valet 2.0 transitions Valet's underlying web server from Caddy to Nginx. Before upgrading to this version you should run the following commands to stop and uninstall the existing Caddy daemon:</source>
          <target state="translated">Valet 2.0 は、Valet の基盤となるウェブサーバを Caddy から Nginx に移行します。このバージョンにアップグレードする前に、以下のコマンドを実行して既存の Caddy デーモンを停止してアンインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="a5f60770e7d6e5e9ec19004e18065c8dd0579aca" translate="yes" xml:space="preserve">
          <source>Valet Directories &amp;amp; Files</source>
          <target state="translated">係員のディレクトリとファイル</target>
        </trans-unit>
        <trans-unit id="eb51daea5519daa59c110af3ff0fdce0f775a821" translate="yes" xml:space="preserve">
          <source>Valet Or Homestead</source>
          <target state="translated">バレットまたはホームステッド</target>
        </trans-unit>
        <trans-unit id="262d72c5ab80eeb0c46ac525c5515c7c340d1a45" translate="yes" xml:space="preserve">
          <source>Valet allows you to switch PHP versions using the &lt;code&gt;valet use php@version&lt;/code&gt; command. Valet will install the specified PHP version via Brew if it is not already installed:</source>
          <target state="translated">Valetを使用すると、 &lt;code&gt;valet use php@version&lt;/code&gt; コマンドを使用してPHPのバージョンを切り替えることができます。Valetは、指定されたPHPバージョンがまだインストールされていない場合、Brewを介してインストールします。</target>
        </trans-unit>
        <trans-unit id="b860762aa48e6e66610e929c3e05dead400a78ea" translate="yes" xml:space="preserve">
          <source>Valet even includes a command to share your local sites with the world, providing an easy way to test your site on mobile devices or share it with team members and clients. No additional software installation is required once Valet is installed.</source>
          <target state="translated">Valetには、ローカルサイトを世界と共有するためのコマンドも含まれており、モバイルデバイスでサイトをテストしたり、チームメンバーやクライアントと共有したりするための簡単な方法を提供しています。Valetをインストールしてしまえば、ソフトウェアの追加インストールは必要ありません。</target>
        </trans-unit>
        <trans-unit id="26fa6221d420c739c957e39e36b8669ec9493b9a" translate="yes" xml:space="preserve">
          <source>Valet even includes a command to share your local sites with the world. No additional software installation is required once Valet is installed.</source>
          <target state="translated">Valetには、ローカルサイトを世界と共有するためのコマンドも含まれています。Valetをインストールしてしまえば、ソフトウェアの追加インストールは必要ありません。</target>
        </trans-unit>
        <trans-unit id="15bee6457bf5499b6941a3d7bc06352107aef258" translate="yes" xml:space="preserve">
          <source>Valet is a Laravel development environment for Mac minimalists. No Vagrant, no &lt;code&gt;/etc/hosts&lt;/code&gt; file. You can even share your sites publicly using local tunnels. &lt;em&gt;Yeah, we like it too.&lt;/em&gt;</source>
          <target state="translated">ValetはMacミニマリストのためのLaravel開発環境です。Vagrantも &lt;code&gt;/etc/hosts&lt;/code&gt; ファイルもありません。ローカルトンネルを使用してサイトを公開することもできます。&lt;em&gt;ええ、私たちもそれが好きです。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f9075b144ccce6118130d572163d5c32c096b2c8" translate="yes" xml:space="preserve">
          <source>Valet only serves one PHP version at a time, even if you have multiple PHP versions installed.</source>
          <target state="translated">複数のPHPバージョンがインストールされている場合でも、Valetは一度に1つのPHPバージョンしか提供しません。</target>
        </trans-unit>
        <trans-unit id="42c0b9ead0c11c596b4a96ec474adae3a3c540be" translate="yes" xml:space="preserve">
          <source>Valet only supports Mac, and requires you to install PHP and a database server directly onto your local machine. This is easily achieved by using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; with commands like &lt;code&gt;brew install php&lt;/code&gt; and &lt;code&gt;brew install mysql&lt;/code&gt;. Valet provides a blazing fast local development environment with minimal resource consumption, so it's great for developers who only require PHP / MySQL and do not need a fully virtualized development environment.</source>
          <target state="translated">ValetはMacのみをサポートしており、PHPとデータベースサーバーをローカルマシンに直接インストールする必要があります。これは、 &lt;code&gt;brew install php&lt;/code&gt; や &lt;code&gt;brew install mysql&lt;/code&gt; などのコマンドで&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;を使用することで簡単に実現できます。Valetは、最小限のリソース消費で高速のローカル開発環境を提供するため、PHP / MySQLのみを必要とし、完全に仮想化された開発環境を必要としない開発者に最適です。</target>
        </trans-unit>
        <trans-unit id="4a0f3915baa54a174906bade2cc3e085088fdd3b" translate="yes" xml:space="preserve">
          <source>Valet only supports Mac, and requires you to install PHP and a database server directly onto your local machine. This is easily achieved by using &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; with commands like &lt;code&gt;brew install php&lt;/code&gt; and &lt;code&gt;brew install mysql&lt;/code&gt;. Valet provides a blazing fast local development environment with minimal resource consumption, so it's great for developers who only require PHP / MySQL and do not need a fully virtualized development environment.</source>
          <target state="translated">ValetはMacのみをサポートしており、PHPとデータベースサーバーをローカルマシンに直接インストールする必要があります。これは、 &lt;code&gt;brew install mysql&lt;/code&gt; &lt;code&gt;brew install php&lt;/code&gt; やbrewinstallmysqlなどのコマンドで&lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;を使用することで簡単に実現できます。Valetは、最小限のリソース消費で非常に高速なローカル開発環境を提供するため、PHP / MySQLのみを必要とし、完全に仮想化された開発環境を必要としない開発者に最適です。</target>
        </trans-unit>
        <trans-unit id="5f4dba68eec7fd8faf4182ea5b8911c03fb7055b" translate="yes" xml:space="preserve">
          <source>Valet restricts incoming traffic to the internal &lt;code&gt;127.0.0.1&lt;/code&gt; interface by default. This way your development machine isn't exposed to security risks from the Internet.</source>
          <target state="translated">Valetは、デフォルトで着信トラフィックを内部 &lt;code&gt;127.0.0.1&lt;/code&gt; インターフェースに制限します。これにより、開発マシンがインターネットからのセキュリティリスクにさらされることがなくなります。</target>
        </trans-unit>
        <trans-unit id="6dbfbc5d8337390ade7cc39d221ef41687ed6cab" translate="yes" xml:space="preserve">
          <source>Valet will automatically start its daemon each time your machine boots. There is no need to run &lt;code&gt;valet start&lt;/code&gt; or &lt;code&gt;valet install&lt;/code&gt; ever again once the initial Valet installation is complete.</source>
          <target state="translated">Valetは、マシンが起動するたびにデーモンを自動的に起動します。最初のValetインストールが完了したら、 &lt;code&gt;valet start&lt;/code&gt; または &lt;code&gt;valet install&lt;/code&gt; を再度実行する必要はありません。</target>
        </trans-unit>
        <trans-unit id="6ed72a875afbc5ee507bace92ae70597f3e95336" translate="yes" xml:space="preserve">
          <source>Valet's master configuration file</source>
          <target state="translated">バレットのマスター設定ファイル</target>
        </trans-unit>
        <trans-unit id="57e96c6ba747a0c200bcccb1b419a4e886fdbece" translate="yes" xml:space="preserve">
          <source>Validate a given attribute against a rule.</source>
          <target state="translated">与えられた属性をルールに対して検証します。</target>
        </trans-unit>
        <trans-unit id="bf05c9bb9c98f61e1d302485ed610ec9dbcd9444" translate="yes" xml:space="preserve">
          <source>Validate a given rule against a route and request.</source>
          <target state="translated">ルートとリクエストに対して与えられたルールを検証します。</target>
        </trans-unit>
        <trans-unit id="d4b6027fe5ad73a4c290bbac11d3555f16f1dd96" translate="yes" xml:space="preserve">
          <source>Validate a password reset for the given credentials.</source>
          <target state="translated">与えられた資格情報のパスワードリセットを検証します。</target>
        </trans-unit>
        <trans-unit id="6a0c4f022d9c795fc1f2a61e99f93f887e2bccd4" translate="yes" xml:space="preserve">
          <source>Validate a user against the given credentials.</source>
          <target state="translated">与えられた資格情報に対してユーザーを検証します。</target>
        </trans-unit>
        <trans-unit id="6bffe55f8f623a1224d882b06bf194cbc65a7546" translate="yes" xml:space="preserve">
          <source>Validate a user's credentials.</source>
          <target state="translated">ユーザーの資格情報を検証します。</target>
        </trans-unit>
        <trans-unit id="88bf33d745c16d038c737ecf51b73fe1debde309" translate="yes" xml:space="preserve">
          <source>Validate an attribute is contained within a list of values.</source>
          <target state="translated">属性が値のリストに含まれていることを検証します。</target>
        </trans-unit>
        <trans-unit id="ef0b710d34997d403a7854d04236bae2cc162119" translate="yes" xml:space="preserve">
          <source>Validate an attribute is not contained within a list of values.</source>
          <target state="translated">属性が値のリストに含まれていないことを検証します。</target>
        </trans-unit>
        <trans-unit id="0bbbeba79817c9a5086a8f0076e7f31f685c95fe" translate="yes" xml:space="preserve">
          <source>Validate an attribute is unique among other values.</source>
          <target state="translated">属性が他の値の中で一意であることを検証します。</target>
        </trans-unit>
        <trans-unit id="a3688c63a10d1a97aac77c7d7a69dc854a8bc94d" translate="yes" xml:space="preserve">
          <source>Validate an attribute using a custom rule object.</source>
          <target state="translated">カスタムルールオブジェクトを使用して属性を検証します。</target>
        </trans-unit>
        <trans-unit id="f4742cb9bd40c1efc47dd7a72490be12a8a03997" translate="yes" xml:space="preserve">
          <source>Validate and return the decoded response JSON.</source>
          <target state="translated">デコードされたレスポンスJSONを検証して返します。</target>
        </trans-unit>
        <trans-unit id="ff4e36dc555e99bd821546820b2d9af938a738d9" translate="yes" xml:space="preserve">
          <source>Validate that a required attribute exists.</source>
          <target state="translated">必須属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="f04da6cab263ff3bee6b08cace4a973dfc32e6c1" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters, dashes, and underscores.</source>
          <target state="translated">属性が英数字、ダッシュ、およびアンダースコアのみを含むことを検証します。</target>
        </trans-unit>
        <trans-unit id="72d23bac999a5932fc758e21a78a5e2845978ce6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters.</source>
          <target state="translated">属性が英数字のみを含むことを検証します。</target>
        </trans-unit>
        <trans-unit id="e9fe65d0f707ad143edd22baff2365eff37d90d3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alphabetic characters.</source>
          <target state="translated">属性がアルファベット文字のみを含むことを検証します。</target>
        </trans-unit>
        <trans-unit id="343482576c652c62c3f758f2a8a84b67326b95c3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute does not pass a regular expression check.</source>
          <target state="translated">属性が正規表現チェックを通過しないことを検証します。</target>
        </trans-unit>
        <trans-unit id="528c4f3f775ec32d1a02f06f86ad0bedbe080102" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists even if not filled.</source>
          <target state="translated">埋められていなくても属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="59fc4f9414926244586f0a65035d9015f551562d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes do not.</source>
          <target state="translated">他のすべての属性が存在しない場合に、ある属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="7ae72d0c62fd66b764922dea73382cf9b3a9d7cc" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes exists.</source>
          <target state="translated">他のすべての属性が存在する場合に、ある属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="a7d4b77cb04bb7993b55744bfbfb9c5a9121f630" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not have a given value.</source>
          <target state="translated">他の属性が指定された値を持たない場合に属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="e3d1586f41a80f5392410201a83d37a9cced3e5f" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not.</source>
          <target state="translated">他の属性が存在しない場合に、ある属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="6910ffad2ed3ac501d9ab9ba6c93157d14ad4f89" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute has a given value.</source>
          <target state="translated">他の属性が与えられた値を持つ場合に、その属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="b18848b3e6ba7b069c97d7d249349ed0630d5cfa" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when any other attribute exists.</source>
          <target state="translated">他の属性が存在する場合に、その属性が存在することを検証します。</target>
        </trans-unit>
        <trans-unit id="ef3dc2da8cb7d76ce0b640a4401ed6d3dc777054" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a given number of digits.</source>
          <target state="translated">属性が指定された桁数を持つことを検証します。</target>
        </trans-unit>
        <trans-unit id="c25adb3ce0614ad4841b984aed069bc89daf9267" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a matching confirmation.</source>
          <target state="translated">属性に一致する確認があることを検証します。</target>
        </trans-unit>
        <trans-unit id="78e4c4963c6610602a85d57f4f87027bdfa9f56d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a boolean.</source>
          <target state="translated">属性がブール値であることを検証します。</target>
        </trans-unit>
        <trans-unit id="ef297e9dda78fca255cd04f6680efefd38de0e98" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a string.</source>
          <target state="translated">属性が文字列であることを検証します。</target>
        </trans-unit>
        <trans-unit id="917ef08a453ae5c72f72992ab2adcf047729f5f2" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IP.</source>
          <target state="translated">属性が有効な IP であることを検証します。</target>
        </trans-unit>
        <trans-unit id="002b3a6923d6a6558705d6522dc586406140c54c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv4.</source>
          <target state="translated">属性が有効なIPv4であることを検証します。</target>
        </trans-unit>
        <trans-unit id="81443e60479152cb9295ec1af294468b2ff78709" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv6.</source>
          <target state="translated">属性が有効なIPv6であることを検証します。</target>
        </trans-unit>
        <trans-unit id="8f537f1355b5fcd44027e9d4f1b106b8f1ea8172" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid URL.</source>
          <target state="translated">属性が有効な URL であることを検証します。</target>
        </trans-unit>
        <trans-unit id="619b7bce58701df04f09f543200d3d93f5415b9e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid UUID.</source>
          <target state="translated">属性が有効なUUIDであることを検証します。</target>
        </trans-unit>
        <trans-unit id="4cea5b6196d6fcd64b9c9c78609e744d9ef9686c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid date.</source>
          <target state="translated">属性が有効な日付であることを検証します。</target>
        </trans-unit>
        <trans-unit id="69de406e80d83d478d4ffc643d664935eb791d9e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid e-mail address.</source>
          <target state="translated">属性が有効な電子メールアドレスであることを検証します。</target>
        </trans-unit>
        <trans-unit id="797b268481d712b46de1e235d3fc9a2de04fa53a" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid timezone.</source>
          <target state="translated">属性が有効なタイムゾーンであることを検証します。</target>
        </trans-unit>
        <trans-unit id="6408631ac8cfe3a1a98def64a84e4afc540e8bb6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an active URL.</source>
          <target state="translated">属性がアクティブな URL であることを検証します。</target>
        </trans-unit>
        <trans-unit id="ce8e0538d7ffc7023a95490c83b9fe970007ec61" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an array.</source>
          <target state="translated">属性が配列であることを検証します。</target>
        </trans-unit>
        <trans-unit id="803717010ab309ed8d3cc551e176e4584906c4dd" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an integer.</source>
          <target state="translated">属性が整数であることを検証します。</target>
        </trans-unit>
        <trans-unit id="2e0946185badb69b3adbf87c3fbf61a0abafaaba" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is between a given number of digits.</source>
          <target state="translated">属性が指定された桁数の間にあることを検証します。</target>
        </trans-unit>
        <trans-unit id="9be0fabb9bb58086041743aeaf2dedf2b9718d36" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is different from another attribute.</source>
          <target state="translated">ある属性が他の属性と異なることを検証します。</target>
        </trans-unit>
        <trans-unit id="e663a2c5c85ab2612a48b0b4c0bf70e7d11619a4" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is equal to another date.</source>
          <target state="translated">属性が別の日付と等しいことを検証します。</target>
        </trans-unit>
        <trans-unit id="3feaa754c65000f926bd8e4073b7024445588a3e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than another attribute.</source>
          <target state="translated">ある属性が他の属性よりも大きいことを検証します。</target>
        </trans-unit>
        <trans-unit id="800ca0d2cf10da481e4165f16419d6ae6c5e5952" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than or equal another attribute.</source>
          <target state="translated">ある属性が他の属性より大きいか等しいかを検証します。</target>
        </trans-unit>
        <trans-unit id="2742f5408d37a36fc6242e7d86d75c1e62792d4d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than another attribute.</source>
          <target state="translated">ある属性が他の属性よりも小さいことを検証します。</target>
        </trans-unit>
        <trans-unit id="caf6a3a079ce556bd86acaee877ac71b916a4715" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than or equal another attribute.</source>
          <target state="translated">ある属性が他の属性以下であることを検証します。</target>
        </trans-unit>
        <trans-unit id="fb28b05b8f72a7b43101e797cc2643264b66ab9b" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is numeric.</source>
          <target state="translated">属性が数値であることを検証します。</target>
        </trans-unit>
        <trans-unit id="c8e5167bcea5859f503cb801c69f60f028a1aee9" translate="yes" xml:space="preserve">
          <source>Validate that an attribute matches a date format.</source>
          <target state="translated">属性が日付フォーマットに一致することを検証します。</target>
        </trans-unit>
        <trans-unit id="d76daf0f330118c6b2aa7427b4b1da2b505404eb" translate="yes" xml:space="preserve">
          <source>Validate that an attribute passes a regular expression check.</source>
          <target state="translated">属性が正規表現チェックを通過していることを検証します。</target>
        </trans-unit>
        <trans-unit id="3a539f3f8586772f9fd67bffc1c95b62d8d3f105" translate="yes" xml:space="preserve">
          <source>Validate that an attribute was &quot;accepted&quot;.</source>
          <target state="translated">属性が &quot;受け入れられた &quot;ことを検証します。</target>
        </trans-unit>
        <trans-unit id="214716c83b0d8ef48101601818e20150cf81439e" translate="yes" xml:space="preserve">
          <source>Validate that the current logged in user's password matches the given value.</source>
          <target state="translated">現在ログインしているユーザーのパスワードが、指定された値と一致するかどうかを検証します。</target>
        </trans-unit>
        <trans-unit id="0497e984636cc2b1a09153ebcaf9c91dc833ac08" translate="yes" xml:space="preserve">
          <source>Validate that the values of an attribute is in another attribute.</source>
          <target state="translated">ある属性の値が別の属性にあることを検証します。</target>
        </trans-unit>
        <trans-unit id="e6d9e9c96da34104c09bdf7def6a6b29e8ad179f" translate="yes" xml:space="preserve">
          <source>Validate that two attributes match.</source>
          <target state="translated">2つの属性が一致することを検証します。</target>
        </trans-unit>
        <trans-unit id="e3620446f2ca1f3fd2eca3a72554a36095785f33" translate="yes" xml:space="preserve">
          <source>Validate the MIME type of a file is an image MIME type.</source>
          <target state="translated">ファイルの MIME タイプが image MIME タイプであることを検証します。</target>
        </trans-unit>
        <trans-unit id="20d0e2474bb0af729d0be9b0f3da8607546ace69" translate="yes" xml:space="preserve">
          <source>Validate the MIME type of a file upload attribute is in a set of MIME types.</source>
          <target state="translated">ファイルアップロード属性のMIMEタイプがMIMEタイプのセットにあることを検証します。</target>
        </trans-unit>
        <trans-unit id="4735a342c86e55fbaf6f547d236a4ecbe4e1a8c9" translate="yes" xml:space="preserve">
          <source>Validate the attribute ends with a given substring.</source>
          <target state="translated">属性が与えられた部分文字列で終わることを検証します。</target>
        </trans-unit>
        <trans-unit id="f1d6cb4266f5555fc71ac82e87b714a3efef1d28" translate="yes" xml:space="preserve">
          <source>Validate the attribute is a valid JSON string.</source>
          <target state="translated">属性が有効な JSON 文字列であることを検証します。</target>
        </trans-unit>
        <trans-unit id="069770360d7bc9432f7161dabac97ae81fd3e6fb" translate="yes" xml:space="preserve">
          <source>Validate the attribute starts with a given substring.</source>
          <target state="translated">属性が与えられた部分文字列で始まることを検証します。</target>
        </trans-unit>
        <trans-unit id="094f2e7e7466c3b3e93038e2ecc51d3c78089a4e" translate="yes" xml:space="preserve">
          <source>Validate the class instance.</source>
          <target state="translated">クラスのインスタンスを検証します。</target>
        </trans-unit>
        <trans-unit id="d21701b21e598af31812a5f02aeae2fc9e40cfde" translate="yes" xml:space="preserve">
          <source>Validate the date is after a given date.</source>
          <target state="translated">日付が指定された日付以降であることを検証します。</target>
        </trans-unit>
        <trans-unit id="d2c308a3f37b8b513d1ae686ec9d1848e706ac18" translate="yes" xml:space="preserve">
          <source>Validate the date is before a given date.</source>
          <target state="translated">日付が指定された日付より前であることを検証します。</target>
        </trans-unit>
        <trans-unit id="08cccbea395497c23ee52b3ca3ead2731090f2a1" translate="yes" xml:space="preserve">
          <source>Validate the date is before or equal a given date.</source>
          <target state="translated">日付が指定された日付の前か前の日付になっているかどうかを検証します。</target>
        </trans-unit>
        <trans-unit id="1383019b7afaf43a658a091823aed663aa6dbbbd" translate="yes" xml:space="preserve">
          <source>Validate the date is equal or after a given date.</source>
          <target state="translated">日付が指定された日付と同じか、指定された日付以降であることを検証します。</target>
        </trans-unit>
        <trans-unit id="6e0ae6e12f0427b9ede930f5818916eb1d993090" translate="yes" xml:space="preserve">
          <source>Validate the dimensions of an image matches the given values.</source>
          <target state="translated">画像の寸法が与えられた値と一致するかどうかを検証します。</target>
        </trans-unit>
        <trans-unit id="3256a9ae08572e6cb6c4fb4f05a59c2263fa2591" translate="yes" xml:space="preserve">
          <source>Validate the email for the given request.</source>
          <target state="translated">与えられたリクエストのメールを検証します。</target>
        </trans-unit>
        <trans-unit id="09317486b20a4311e63713a86fa34d0a5e4c3e81" translate="yes" xml:space="preserve">
          <source>Validate the existence of an attribute value in a database table.</source>
          <target state="translated">データベーステーブル内の属性値の存在を検証します。</target>
        </trans-unit>
        <trans-unit id="b57c98634df5e8051a1f41f40f38d512056c788e" translate="yes" xml:space="preserve">
          <source>Validate the given attribute is filled if it is present.</source>
          <target state="translated">与えられた属性が存在する場合、それが満たされているかどうかを検証します。</target>
        </trans-unit>
        <trans-unit id="5cfe149dddd63fa3b2492865a1f39a47d6c2dad5" translate="yes" xml:space="preserve">
          <source>Validate the given class instance.</source>
          <target state="translated">与えられたクラスインスタンスを検証します。</target>
        </trans-unit>
        <trans-unit id="3660f89a504538689f3c45669e1dd095fa7a901b" translate="yes" xml:space="preserve">
          <source>Validate the given data against the provided rules.</source>
          <target state="translated">与えられたデータを、与えられたルールに照らし合わせて検証します。</target>
        </trans-unit>
        <trans-unit id="ffdf88ff2af0273270f74150dc03f87346410085" translate="yes" xml:space="preserve">
          <source>Validate the given password reset token.</source>
          <target state="translated">与えられたパスワードリセットトークンを検証します。</target>
        </trans-unit>
        <trans-unit id="63727740ce5927e5def18a144f697d48a1213352" translate="yes" xml:space="preserve">
          <source>Validate the given request with the given rules.</source>
          <target state="translated">与えられたリクエストを与えられたルールで検証します。</target>
        </trans-unit>
        <trans-unit id="eafa4f3a58dd76f8787ca2d5a54e2c0a12045092" translate="yes" xml:space="preserve">
          <source>Validate the given value is a valid file.</source>
          <target state="translated">与えられた値が有効なファイルであることを確認します。</target>
        </trans-unit>
        <trans-unit id="6a3174d73527340cc452ac07b0971673cfaebde5" translate="yes" xml:space="preserve">
          <source>Validate the guessed extension of a file upload is in a set of file extensions.</source>
          <target state="translated">アップロードされたファイルの推測された拡張子がファイル拡張子のセットに含まれていることを検証します。</target>
        </trans-unit>
        <trans-unit id="731f426adc01f941a4e923878af9bf8761dc583a" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute is between a set of values.</source>
          <target state="translated">属性のサイズが一連の値の間にあることを検証します。</target>
        </trans-unit>
        <trans-unit id="ef99e0ecfba33c15ccde77b1af91ac175eb3bcfe" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute is greater than a minimum value.</source>
          <target state="translated">属性のサイズが最小値よりも大きいことを検証します。</target>
        </trans-unit>
        <trans-unit id="d8a76feae4da54a55c9bf40196ca3592d3a18129" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute is less than a maximum value.</source>
          <target state="translated">属性のサイズが最大値以下であることを検証します。</target>
        </trans-unit>
        <trans-unit id="9cc9e9b58dfac3310ea4be7a22d7c6b456bdd57b" translate="yes" xml:space="preserve">
          <source>Validate the size of an attribute.</source>
          <target state="translated">属性のサイズを検証します。</target>
        </trans-unit>
        <trans-unit id="4de2dad5038df71f5d1f6215011c8210c3282559" translate="yes" xml:space="preserve">
          <source>Validate the uniqueness of an attribute value on a given database table.</source>
          <target state="translated">与えられたデータベーステーブル上の属性値の一意性を検証します。</target>
        </trans-unit>
        <trans-unit id="de38fa8a655f8b5e50625c17a41dfeea1cf2a23a" translate="yes" xml:space="preserve">
          <source>Validate the user login request.</source>
          <target state="translated">ユーザーのログイン要求を検証します。</target>
        </trans-unit>
        <trans-unit id="8c241a937c862bd3d5631ca459661d2e8dde74fa" translate="yes" xml:space="preserve">
          <source>Validate the value of an attribute is a multiple of a given value.</source>
          <target state="translated">属性の値が与えられた値の倍数であることを検証します。</target>
        </trans-unit>
        <trans-unit id="ebe65eabeb395f7b300063479ce1fcebed8a77c9" translate="yes" xml:space="preserve">
          <source>ValidatePostSize</source>
          <target state="translated">ValidatePostSize</target>
        </trans-unit>
        <trans-unit id="92bd9f078a7aa54cbfd9792ee811214cfd88639c" translate="yes" xml:space="preserve">
          <source>ValidatePostSize (Foundation\Http)</source>
          <target state="translated">ValidatePostSize (FoundationHttp)</target>
        </trans-unit>
        <trans-unit id="785c4f87ee49ded109f858c636de1b67a57e5ba9" translate="yes" xml:space="preserve">
          <source>ValidatePostSize::getPostMaxSize()</source>
          <target state="translated">ValidatePostSize::getPostMaxSize()</target>
        </trans-unit>
        <trans-unit id="ce2714ef0c280eb8a650cc2c484823120e6e7b0e" translate="yes" xml:space="preserve">
          <source>ValidatePostSize::handle()</source>
          <target state="translated">ValidatePostSize::handle()</target>
        </trans-unit>
        <trans-unit id="afc878921cac9b9f093e4550b344fbf95dcc3443" translate="yes" xml:space="preserve">
          <source>ValidateSignature</source>
          <target state="translated">ValidateSignature</target>
        </trans-unit>
        <trans-unit id="15ae3bafa217f181e654e04ece79a81cf1c10448" translate="yes" xml:space="preserve">
          <source>ValidateSignature (Routing\Middleware)</source>
          <target state="translated">ValidateSignature (RoutingMiddleware)</target>
        </trans-unit>
        <trans-unit id="3d6f80ddfb2b22707b6eedb50d2343d46f1d51a4" translate="yes" xml:space="preserve">
          <source>ValidateSignature::handle()</source>
          <target state="translated">ValidateSignature::handle()</target>
        </trans-unit>
        <trans-unit id="75444607bba6453dbace639fe614c84c90652bc0" translate="yes" xml:space="preserve">
          <source>Validated</source>
          <target state="translated">Validated</target>
        </trans-unit>
        <trans-unit id="a1ef2d5c2c524e09ce3c10a46e7bbf44d7bbe886" translate="yes" xml:space="preserve">
          <source>Validated (Auth\Events)</source>
          <target state="translated">Validated (AuthEvents)</target>
        </trans-unit>
        <trans-unit id="c41c2c41f57eb8b83498386cfc1f9d93b2c6c1b4" translate="yes" xml:space="preserve">
          <source>Validated::__construct()</source>
          <target state="translated">Validated::__construct()</target>
        </trans-unit>
        <trans-unit id="15a564685a9be19b2555452b38bbeb7aa085d56c" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes</source>
          <target state="translated">ValidatesAttributes</target>
        </trans-unit>
        <trans-unit id="c2da878831cc17d046f3cfcae6dd4d9feaa41185" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes (Validation\Concerns)</source>
          <target state="translated">ValidatesAttributes (ValidationConcerns)</target>
        </trans-unit>
        <trans-unit id="f26a2829eb4c948a520201c9bc4d7c5aaa353ea0" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::allFailingRequired()</source>
          <target state="translated">ValidatesAttributes::allFailingRequired()</target>
        </trans-unit>
        <trans-unit id="17ab6463be9869ca7decd2725c86ae6804cbdceb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::anyFailingRequired()</source>
          <target state="translated">ValidatesAttributes::anyFailingRequired()</target>
        </trans-unit>
        <trans-unit id="b4ea82aee8dd7955d918c7575049dd4b50815cce" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::checkDateTimeOrder()</source>
          <target state="translated">ValidatesAttributes::checkDateTimeOrder()</target>
        </trans-unit>
        <trans-unit id="36b3f6be1ccd7c4a65473959921e9e6c2f980799" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::compare()</source>
          <target state="translated">ValidatesAttributes::compare()</target>
        </trans-unit>
        <trans-unit id="9d6ef883fb6aab2c4fd83f3a574c5317da9e0537" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::compareDates()</source>
          <target state="translated">ValidatesAttributes::compareDates()</target>
        </trans-unit>
        <trans-unit id="2ecdab7f49465a08395a49c363503ae61a364390" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::convertValuesToBoolean()</source>
          <target state="translated">ValidatesAttributes::convertValuesToBoolean()</target>
        </trans-unit>
        <trans-unit id="26bd520421a9cfef6922b12577a7d7faa25420cd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::convertValuesToNull()</source>
          <target state="translated">ValidatesAttributes::convertValuesToNull()</target>
        </trans-unit>
        <trans-unit id="3281493509b34c2dac4009357805683d4b43b8f2" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::extractDistinctValues()</source>
          <target state="translated">ValidatesAttributes::extractDistinctValues()</target>
        </trans-unit>
        <trans-unit id="9755ba6b5238da9ef1ba9e1f70786033f5868155" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::failsBasicDimensionChecks()</source>
          <target state="translated">ValidatesAttributes::failsBasicDimensionChecks()</target>
        </trans-unit>
        <trans-unit id="b8a65b66e00f6b810b38658964776cc50657d1de" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::failsRatioCheck()</source>
          <target state="translated">ValidatesAttributes::failsRatioCheck()</target>
        </trans-unit>
        <trans-unit id="53f16e6a6081e9637ef6829aec91a770c6e22e34" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateFormat()</source>
          <target state="translated">ValidatesAttributes::getDateFormat()</target>
        </trans-unit>
        <trans-unit id="caa5d0f93765937c0c1368dc0092fa540a7e4b10" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateTime()</source>
          <target state="translated">ValidatesAttributes::getDateTime()</target>
        </trans-unit>
        <trans-unit id="ea75627158edec50e9d016c73b7becaa7e58ec13" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateTimeWithOptionalFormat()</source>
          <target state="translated">ValidatesAttributes::getDateTimeWithOptionalFormat()</target>
        </trans-unit>
        <trans-unit id="bca1c394d5b0ff34d91dd10bc7841344e4ac9b71" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDateTimestamp()</source>
          <target state="translated">ValidatesAttributes::getDateTimestamp()</target>
        </trans-unit>
        <trans-unit id="0d5fb1c4ce501f52c739b45e8be65320ce0c42e1" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getDistinctValues()</source>
          <target state="translated">ValidatesAttributes::getDistinctValues()</target>
        </trans-unit>
        <trans-unit id="926b2d79fbb05c380c51b3c3a37eff4d2ba44b99" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getExistCount()</source>
          <target state="translated">ValidatesAttributes::getExistCount()</target>
        </trans-unit>
        <trans-unit id="f59abd6262f05833531c2e1033b06bcbc244b6dd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getExtraConditions()</source>
          <target state="translated">ValidatesAttributes::getExtraConditions()</target>
        </trans-unit>
        <trans-unit id="c52e25b945d3eb212e97b4affb4d3cac676c8f25" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getQueryColumn()</source>
          <target state="translated">ValidatesAttributes::getQueryColumn()</target>
        </trans-unit>
        <trans-unit id="8455c55feabd6d7ce068a01e09c2c6b8486ae69b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getSize()</source>
          <target state="translated">ValidatesAttributes::getSize()</target>
        </trans-unit>
        <trans-unit id="cceefab8c9b2d78f2f606ee90fb219980224da07" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getUniqueExtra()</source>
          <target state="translated">ValidatesAttributes::getUniqueExtra()</target>
        </trans-unit>
        <trans-unit id="3fe4af36e6c262b3fe29811105062a2795c4dbb4" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::getUniqueIds()</source>
          <target state="translated">ValidatesAttributes::getUniqueIds()</target>
        </trans-unit>
        <trans-unit id="c5eefe1190bfed327c0a31ea17d8d187c18c3957" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::guessColumnForQuery()</source>
          <target state="translated">ValidatesAttributes::guessColumnForQuery()</target>
        </trans-unit>
        <trans-unit id="e7449d6991f3b58e1ec312a92db888b445e44425" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::isSameType()</source>
          <target state="translated">ValidatesAttributes::isSameType()</target>
        </trans-unit>
        <trans-unit id="a155e9709c503da5a1b7e6a8aef90390e9558fcc" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::isTestingRelativeDateTime()</source>
          <target state="translated">ValidatesAttributes::isTestingRelativeDateTime()</target>
        </trans-unit>
        <trans-unit id="0c73aa79a25c0b52ca96aab466ed860a9f4aae12" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::isValidFileInstance()</source>
          <target state="translated">ValidatesAttributes::isValidFileInstance()</target>
        </trans-unit>
        <trans-unit id="2e7951962e3ab51b64a56f4c2ef90c52fab55c86" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::parseNamedParameters()</source>
          <target state="translated">ValidatesAttributes::parseNamedParameters()</target>
        </trans-unit>
        <trans-unit id="313db3e4762d349a8645e5e253080597a0e3269e" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::parseTable()</source>
          <target state="translated">ValidatesAttributes::parseTable()</target>
        </trans-unit>
        <trans-unit id="ee8b24b967f1c30b09de39f3bc3de07fcfc1d8dd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::prepareUniqueId()</source>
          <target state="translated">ValidatesAttributes::prepareUniqueId()</target>
        </trans-unit>
        <trans-unit id="f98ec13ef9fc729e83b949a3c3959ec266cb777b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::prepareValuesAndOther()</source>
          <target state="translated">ValidatesAttributes::prepareValuesAndOther()</target>
        </trans-unit>
        <trans-unit id="cdd183c2c64bf139e4dae5056616c2b65dcc74f9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::requireParameterCount()</source>
          <target state="translated">ValidatesAttributes::requireParameterCount()</target>
        </trans-unit>
        <trans-unit id="bcb5dd1a9bb118e26d5f232b2d1dc2964a585dbb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::requireSameType()</source>
          <target state="translated">ValidatesAttributes::requireSameType()</target>
        </trans-unit>
        <trans-unit id="0d13a5838a4f0c4da19adb3fd2f5bf2390ad77cc" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::shouldBeNumeric()</source>
          <target state="translated">ValidatesAttributes::shouldBeNumeric()</target>
        </trans-unit>
        <trans-unit id="b85ae9ecaf5bfcf31309841360332b1c8b1c8b0d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::shouldBlockPhpUpload()</source>
          <target state="translated">ValidatesAttributes::shouldBlockPhpUpload()</target>
        </trans-unit>
        <trans-unit id="fb265ae64eae56feb408d97f16b4feb7c582c644" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAccepted()</source>
          <target state="translated">ValidatesAttributes::validateAccepted()</target>
        </trans-unit>
        <trans-unit id="c87931bddfb6a2f076925a4e18bc1e0910f42c6d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateActiveUrl()</source>
          <target state="translated">ValidatesAttributes::validateActiveUrl()</target>
        </trans-unit>
        <trans-unit id="9cf63454c83006cd41430505eff7f202fc032510" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAfter()</source>
          <target state="translated">ValidatesAttributes::validateAfter()</target>
        </trans-unit>
        <trans-unit id="3056108db86af1490a780f054255d83d296f54a4" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAfterOrEqual()</source>
          <target state="translated">ValidatesAttributes::validateAfterOrEqual()</target>
        </trans-unit>
        <trans-unit id="13306c88f3ec881df7cb477c3be669dddfde7cc3" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAlpha()</source>
          <target state="translated">ValidatesAttributes::validateAlpha()</target>
        </trans-unit>
        <trans-unit id="4747544e4302a6d6faaa18284256d8dca0d12930" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAlphaDash()</source>
          <target state="translated">ValidatesAttributes::validateAlphaDash()</target>
        </trans-unit>
        <trans-unit id="179edefc28013c221b375bebe12a4b737637fce7" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateAlphaNum()</source>
          <target state="translated">ValidatesAttributes::validateAlphaNum()</target>
        </trans-unit>
        <trans-unit id="35575d7897a1687dbea2c9f4c592b83a5f60dd43" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateArray()</source>
          <target state="translated">ValidatesAttributes::validateArray()</target>
        </trans-unit>
        <trans-unit id="ca04e58627c5ed01c71cd5901386a1e3f4e39fdf" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBail()</source>
          <target state="translated">ValidatesAttributes::validateBail()</target>
        </trans-unit>
        <trans-unit id="98a0b2dd0a7ceacf8b5581df347c661f68655ee8" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBefore()</source>
          <target state="translated">ValidatesAttributes::validateBefore()</target>
        </trans-unit>
        <trans-unit id="4c15f1f2d71d6f89df4030f93d8db0a3ecf9cc21" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBeforeOrEqual()</source>
          <target state="translated">ValidatesAttributes::validateBeforeOrEqual()</target>
        </trans-unit>
        <trans-unit id="b034f66d1277663bc78b1845a81a3eeb33d6c659" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBetween()</source>
          <target state="translated">ValidatesAttributes::validateBetween()</target>
        </trans-unit>
        <trans-unit id="b219e2fbe777d8e86b558fa850073798abd251bb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateBoolean()</source>
          <target state="translated">ValidatesAttributes::validateBoolean()</target>
        </trans-unit>
        <trans-unit id="2dc8ea025cbc8d856957aea0c5549f0b0b5da787" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateConfirmed()</source>
          <target state="translated">ValidatesAttributes::validateConfirmed()</target>
        </trans-unit>
        <trans-unit id="e254bff7405cb3d982d25ef153a5cd2d2a896a9a" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDate()</source>
          <target state="translated">ValidatesAttributes::validateDate()</target>
        </trans-unit>
        <trans-unit id="544bc49f8febf9d72c4ec18536f98c0a6f839e1d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDateEquals()</source>
          <target state="translated">ValidatesAttributes::validateDateEquals()</target>
        </trans-unit>
        <trans-unit id="7d940bcf4d3615819f8f922bd36723b3eb0a5d6b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDateFormat()</source>
          <target state="translated">ValidatesAttributes::validateDateFormat()</target>
        </trans-unit>
        <trans-unit id="152be1cad8c8ae7404d166e8ee7b14f06937a348" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDifferent()</source>
          <target state="translated">ValidatesAttributes::validateDifferent()</target>
        </trans-unit>
        <trans-unit id="a99d5ef40bf60b4794a19274b96ffebd235918d5" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDigits()</source>
          <target state="translated">ValidatesAttributes::validateDigits()</target>
        </trans-unit>
        <trans-unit id="3117683274fdc9599428dca5febe4b55b47412e7" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDigitsBetween()</source>
          <target state="translated">ValidatesAttributes::validateDigitsBetween()</target>
        </trans-unit>
        <trans-unit id="ad641c00870bc9c718ad875a9fbb3124bea942c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDimensions()</source>
          <target state="translated">ValidatesAttributes::validateDimensions()</target>
        </trans-unit>
        <trans-unit id="032d50039ab84604f989aa7bcce2f07eda5286c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateDistinct()</source>
          <target state="translated">ValidatesAttributes::validateDistinct()</target>
        </trans-unit>
        <trans-unit id="99e3429d1b02317737400ed6a351bc4ec2bab7ca" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateEmail()</source>
          <target state="translated">ValidatesAttributes::validateEmail()</target>
        </trans-unit>
        <trans-unit id="f9e60d6180cb4d20186c1b498a72d647d2973e9f" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateEndsWith()</source>
          <target state="translated">ValidatesAttributes::validateEndsWith()</target>
        </trans-unit>
        <trans-unit id="3269ae3af0f30561fcdd5ebe257cc39cfb060635" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExcludeIf()</source>
          <target state="translated">ValidatesAttributes::validateExcludeIf()</target>
        </trans-unit>
        <trans-unit id="a5c4e6ba4161a32ba1f7aa7fbef4fa19bacf0c80" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExcludeUnless()</source>
          <target state="translated">ValidatesAttributes::validateExcludeUnless()</target>
        </trans-unit>
        <trans-unit id="22216f83687e2b6fc60403a832cd6227fb18d101" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExcludeWithout()</source>
          <target state="translated">ValidatesAttributes::validateExcludeWithout()</target>
        </trans-unit>
        <trans-unit id="9588b6001d8ef93fec693d3ed14c4ae6adf97ada" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateExists()</source>
          <target state="translated">ValidatesAttributes::validateExists()</target>
        </trans-unit>
        <trans-unit id="a0bfd3226e2644da8585cf113b09b2c1a2eeb7e3" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateFile()</source>
          <target state="translated">ValidatesAttributes::validateFile()</target>
        </trans-unit>
        <trans-unit id="9c0f1429368dcf05a8df3c8ee6e40499948fb023" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateFilled()</source>
          <target state="translated">ValidatesAttributes::validateFilled()</target>
        </trans-unit>
        <trans-unit id="9b4e9f6e2a47f7f65d950a900ebb383353b384b3" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateGt()</source>
          <target state="translated">ValidatesAttributes::validateGt()</target>
        </trans-unit>
        <trans-unit id="13ba7fa1cd8c3e233c52f75d9f47289de7f987c9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateGte()</source>
          <target state="translated">ValidatesAttributes::validateGte()</target>
        </trans-unit>
        <trans-unit id="72c6c145fdaeee7e546e8cfdd2ee95f78b7faece" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateImage()</source>
          <target state="translated">ValidatesAttributes::validateImage()</target>
        </trans-unit>
        <trans-unit id="c851a75a89f0e58991ca4c32567a9725bb8c91c2" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIn()</source>
          <target state="translated">ValidatesAttributes::validateIn()</target>
        </trans-unit>
        <trans-unit id="c9cf7aa36bb6d0c11a492a9543064154d8a7482b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateInArray()</source>
          <target state="translated">ValidatesAttributes::validateInArray()</target>
        </trans-unit>
        <trans-unit id="8543936699e4126458a989d337713b544f546b06" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateInteger()</source>
          <target state="translated">ValidatesAttributes::validateInteger()</target>
        </trans-unit>
        <trans-unit id="d291f469bf1aec308ee24c46d6ba0c9c4c10b931" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIp()</source>
          <target state="translated">ValidatesAttributes::validateIp()</target>
        </trans-unit>
        <trans-unit id="819ffe6dc31a9afc0ea9e1dff2a89db682ec7b4d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIpv4()</source>
          <target state="translated">ValidatesAttributes::validateIpv4()</target>
        </trans-unit>
        <trans-unit id="4c4e32702f18f5a821ae0769351b7ef892f8ff0c" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateIpv6()</source>
          <target state="translated">ValidatesAttributes::validateIpv6()</target>
        </trans-unit>
        <trans-unit id="06a81f5a919432b01dd535f7d9b99f141d6d723b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateJson()</source>
          <target state="translated">ValidatesAttributes::validateJson()</target>
        </trans-unit>
        <trans-unit id="cb5bf08eb2c8df8949b434cebbc1543dab8bf1e6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateLt()</source>
          <target state="translated">ValidatesAttributes::validateLt()</target>
        </trans-unit>
        <trans-unit id="88d78fe29f6ac523e756ae962df9aa9abba815f9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateLte()</source>
          <target state="translated">ValidatesAttributes::validateLte()</target>
        </trans-unit>
        <trans-unit id="1385baff2fe83e3de5283fba0cb9c77782729aeb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMax()</source>
          <target state="translated">ValidatesAttributes::validateMax()</target>
        </trans-unit>
        <trans-unit id="505c9f683890eef9a7c5ef3fbdc92a35d27f0db1" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMimes()</source>
          <target state="translated">ValidatesAttributes::validateMimes()</target>
        </trans-unit>
        <trans-unit id="a95fb3ba2981c6c221afae864c64e58c0a8ec067" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMimetypes()</source>
          <target state="translated">ValidatesAttributes::validateMimetypes()</target>
        </trans-unit>
        <trans-unit id="dc961644487cb442024adaabb77563d02b8a494b" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMin()</source>
          <target state="translated">ValidatesAttributes::validateMin()</target>
        </trans-unit>
        <trans-unit id="43dc8f0aa309acfae1c55fe1f78cd2ff870945a1" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateMultipleOf()</source>
          <target state="translated">ValidatesAttributes::validateMultipleOf()</target>
        </trans-unit>
        <trans-unit id="f5bc035770e261fcd54fd8f8cfb01c95199383e0" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNotIn()</source>
          <target state="translated">ValidatesAttributes::validateNotIn()</target>
        </trans-unit>
        <trans-unit id="ac4723039d23b91d4352f60c3fed4cc6b9bb1b55" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNotRegex()</source>
          <target state="translated">ValidatesAttributes::validateNotRegex()</target>
        </trans-unit>
        <trans-unit id="376978bdd35c4e52b342505163f7f860c39ba418" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNullable()</source>
          <target state="translated">ValidatesAttributes::validateNullable()</target>
        </trans-unit>
        <trans-unit id="86c84b9d951f1bb91a41049c228b4d352e07b967" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateNumeric()</source>
          <target state="translated">ValidatesAttributes::validateNumeric()</target>
        </trans-unit>
        <trans-unit id="592182a7a458be6b8a8e61bb2aed0dbfe3d5b7d5" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validatePassword()</source>
          <target state="translated">ValidatesAttributes::validatePassword()</target>
        </trans-unit>
        <trans-unit id="c4e8973fa41f090d021cd8e2f08f0600ae8fe3dd" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validatePresent()</source>
          <target state="translated">ValidatesAttributes::validatePresent()</target>
        </trans-unit>
        <trans-unit id="b9ed19d61ba5cfae1a5b66d04ef25095b7417918" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRegex()</source>
          <target state="translated">ValidatesAttributes::validateRegex()</target>
        </trans-unit>
        <trans-unit id="93b9483de8cb19e716c9b2f981cdacf987665b18" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequired()</source>
          <target state="translated">ValidatesAttributes::validateRequired()</target>
        </trans-unit>
        <trans-unit id="3c96edce9f256e20fdabb4c53eca4a9b7bc16da4" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredIf()</source>
          <target state="translated">ValidatesAttributes::validateRequiredIf()</target>
        </trans-unit>
        <trans-unit id="df14ccbac1f6968f91992ea832fedb75710c218d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredUnless()</source>
          <target state="translated">ValidatesAttributes::validateRequiredUnless()</target>
        </trans-unit>
        <trans-unit id="6625f42f8ac126be9f4e250b6b487ff3f42257c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWith()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWith()</target>
        </trans-unit>
        <trans-unit id="d6af8c8b502420f2d63168ce305b0185e424e831" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWithAll()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWithAll()</target>
        </trans-unit>
        <trans-unit id="516354e47c82f19903911d2d0a54947d6a98afdb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWithout()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWithout()</target>
        </trans-unit>
        <trans-unit id="dba63898509349c82911d1755cca577c5d9921c9" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateRequiredWithoutAll()</source>
          <target state="translated">ValidatesAttributes::validateRequiredWithoutAll()</target>
        </trans-unit>
        <trans-unit id="df2d92d4c290fe822d31bec9c262872e61139dc7" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateSame()</source>
          <target state="translated">ValidatesAttributes::validateSame()</target>
        </trans-unit>
        <trans-unit id="a757fa81a30699fb11a5951771a326ba238107c6" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateSize()</source>
          <target state="translated">ValidatesAttributes::validateSize()</target>
        </trans-unit>
        <trans-unit id="79dcee6e817014cca8bb1f6290fe530003761a4d" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateSometimes()</source>
          <target state="translated">ValidatesAttributes::validateSometimes()</target>
        </trans-unit>
        <trans-unit id="788ba8e5b0240e3da85815432bbae103e411c551" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateStartsWith()</source>
          <target state="translated">ValidatesAttributes::validateStartsWith()</target>
        </trans-unit>
        <trans-unit id="751232d79c720436f26c06749e3b8058000be3fb" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateString()</source>
          <target state="translated">ValidatesAttributes::validateString()</target>
        </trans-unit>
        <trans-unit id="26e84c4b92f57ae5eee015ff2e2aa99b693247b2" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateTimezone()</source>
          <target state="translated">ValidatesAttributes::validateTimezone()</target>
        </trans-unit>
        <trans-unit id="947212bbac1c5ea9b2d210e8704b3b5958ca0d34" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateUnique()</source>
          <target state="translated">ValidatesAttributes::validateUnique()</target>
        </trans-unit>
        <trans-unit id="4316f8e2be1cf266bf11de489843b05f831b8b13" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateUrl()</source>
          <target state="translated">ValidatesAttributes::validateUrl()</target>
        </trans-unit>
        <trans-unit id="7a09356834e14b14774e34cc03804c367ddd1733" translate="yes" xml:space="preserve">
          <source>ValidatesAttributes::validateUuid()</source>
          <target state="translated">ValidatesAttributes::validateUuid()</target>
        </trans-unit>
        <trans-unit id="dc4e00c068a8796f6dcd067679a6b471ff5cedfd" translate="yes" xml:space="preserve">
          <source>ValidatesRequests</source>
          <target state="translated">ValidatesRequests</target>
        </trans-unit>
        <trans-unit id="c7313f87e451a4fed617cfecb6c360020c54e4f9" translate="yes" xml:space="preserve">
          <source>ValidatesRequests (Foundation\Validation)</source>
          <target state="translated">ValidatesRequests (FoundationValidation)</target>
        </trans-unit>
        <trans-unit id="d7aa60a5c48dabb9207ddfe5cd5080de6c2faec5" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::getValidationFactory()</source>
          <target state="translated">ValidatesRequests::getValidationFactory()</target>
        </trans-unit>
        <trans-unit id="bf943b1ea7666b2e346af49da9d27ffb566683d4" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::validate()</source>
          <target state="translated">ValidatesRequests::validate()</target>
        </trans-unit>
        <trans-unit id="dc0a77f883907caa6346b31aa02594e835a999f1" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::validateWith()</source>
          <target state="translated">ValidatesRequests::validateWith()</target>
        </trans-unit>
        <trans-unit id="eaad482e5b4fdd3613dd02038395f3271e68eab4" translate="yes" xml:space="preserve">
          <source>ValidatesRequests::validateWithBag()</source>
          <target state="translated">ValidatesRequests::validateWithBag()</target>
        </trans-unit>
        <trans-unit id="36d14d9e65e3d3bb292e77b97d10971dfaa0eef5" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolved</source>
          <target state="translated">ValidatesWhenResolved</target>
        </trans-unit>
        <trans-unit id="58c723e903ed899e23a0b50054de836a970d4963" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolved (Contracts)</source>
          <target state="translated">ValidatesWhenResolved (契約)</target>
        </trans-unit>
        <trans-unit id="2f6a1b408ae12ea348c7ca3acaadd11ece13b70c" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolved::validateResolved()</source>
          <target state="translated">ValidatesWhenResolved::validateResolved()</target>
        </trans-unit>
        <trans-unit id="aa59a86ea9bada8b6bea60bd9bb399421b0fbfc7" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait</source>
          <target state="translated">ValidatesWhenResolvedTrait</target>
        </trans-unit>
        <trans-unit id="a81f355a3fb20177fa52fa2d8681ad008df73849" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait (Validation)</source>
          <target state="translated">ValidatesWhenResolvedTrait (Validation)</target>
        </trans-unit>
        <trans-unit id="c1f993d41e2e43ba5fc223fb73128ffc5f48ad1d" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::failedAuthorization()</source>
          <target state="translated">ValidatesWhenResolvedTrait::failedAuthorization()</target>
        </trans-unit>
        <trans-unit id="342916d642613af3ffbb5442bea7ca11981405e0" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::failedValidation()</source>
          <target state="translated">ValidatesWhenResolvedTrait::failedValidation()</target>
        </trans-unit>
        <trans-unit id="f24db7e28f078c5d7cd9dc2d3b9ec7af380949b0" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::getValidatorInstance()</source>
          <target state="translated">ValidatesWhenResolvedTrait::getValidatorInstance()</target>
        </trans-unit>
        <trans-unit id="09e3d4c8c719fdbb74606212ff353c64ce10a24c" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::passedValidation()</source>
          <target state="translated">ValidatesWhenResolvedTrait::passedValidation()</target>
        </trans-unit>
        <trans-unit id="d79a5fc20ac340eb7118cde054ad9e5bd5eecd5e" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::passesAuthorization()</source>
          <target state="translated">ValidatesWhenResolvedTrait::passesAuthorization()</target>
        </trans-unit>
        <trans-unit id="1410346c3e4d95e25b60527831a5f72191d7b263" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::prepareForValidation()</source>
          <target state="translated">ValidatesWhenResolvedTrait::prepareForValidation()</target>
        </trans-unit>
        <trans-unit id="cb4a3ddd52e06806692d81e29a6f1f5981f17679" translate="yes" xml:space="preserve">
          <source>ValidatesWhenResolvedTrait::validateResolved()</source>
          <target state="translated">ValidatesWhenResolvedTrait::validateResolved()</target>
        </trans-unit>
        <trans-unit id="6150496ab8f08515e54f318062f96918132f6d84" translate="yes" xml:space="preserve">
          <source>Validating Arrays</source>
          <target state="translated">配列の検証</target>
        </trans-unit>
        <trans-unit id="ac5e983d5791afb94472f53a83d93a9b149da9bd" translate="yes" xml:space="preserve">
          <source>Validating Signed Route Requests</source>
          <target state="translated">署名されたルートリクエストを検証する</target>
        </trans-unit>
        <trans-unit id="6ca99c365771929f7eb3b62133c00b9482307d2b" translate="yes" xml:space="preserve">
          <source>Validating Successful Uploads</source>
          <target state="translated">成功したアップロードを検証する</target>
        </trans-unit>
        <trans-unit id="3172d5c82735caa5b592b69796a580cc233f01a4" translate="yes" xml:space="preserve">
          <source>Validating When Present</source>
          <target state="translated">提示時の検証</target>
        </trans-unit>
        <trans-unit id="84b9626d4dae03e41511b7c72e2c70065bf5ddbc" translate="yes" xml:space="preserve">
          <source>Validating array based form input fields doesn't have to be a pain. You may use &quot;dot notation&quot; to validate attributes within an array. For example, if the incoming HTTP request contains a &lt;code&gt;photos[profile]&lt;/code&gt; field, you may validate it like so:</source>
          <target state="translated">配列ベースのフォーム入力フィールドの検証は、面倒なことではありません。「ドット表記」を使用して、配列内の属性を検証できます。たとえば、着信HTTPリクエストに &lt;code&gt;photos[profile]&lt;/code&gt; フィールドが含まれている場合、次のように検証できます。</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="64663fbc455226f25626eb6e66c56aff0aefa7ac" translate="yes" xml:space="preserve">
          <source>Validation / Storage Customization</source>
          <target state="translated">バリデーション/ストレージのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="21e01fb19ea64886f4d64d5a6d8f7601d4d3b1b7" translate="yes" xml:space="preserve">
          <source>Validation Errors</source>
          <target state="translated">バリデーションエラー</target>
        </trans-unit>
        <trans-unit id="0600289276ade2488c6f3dd4f302a27cb9ba9013" translate="yes" xml:space="preserve">
          <source>Validation Quickstart</source>
          <target state="translated">バリデーションクイックスタート</target>
        </trans-unit>
        <trans-unit id="dd3016277bd4a88df4607f705afe045c61fae853" translate="yes" xml:space="preserve">
          <source>ValidationData</source>
          <target state="translated">ValidationData</target>
        </trans-unit>
        <trans-unit id="2a74245b1ef9b77b941415400e5ac7bd92f9563d" translate="yes" xml:space="preserve">
          <source>ValidationException</source>
          <target state="translated">ValidationException</target>
        </trans-unit>
        <trans-unit id="746c009697ef1ccba2be12bbc057998a227a0617" translate="yes" xml:space="preserve">
          <source>ValidationRuleParser</source>
          <target state="translated">ValidationRuleParser</target>
        </trans-unit>
        <trans-unit id="c6111fc19b1d2bc9cd9b18bbc9890b5d20bff13e" translate="yes" xml:space="preserve">
          <source>ValidationRuleParser::parseParameters</source>
          <target state="translated">ValidationRuleParser::parseParameters</target>
        </trans-unit>
        <trans-unit id="9144d57180c146f2ac0c502d79f742d9d8e77279" translate="yes" xml:space="preserve">
          <source>ValidationServiceProvider</source>
          <target state="translated">ValidationServiceProvider</target>
        </trans-unit>
        <trans-unit id="39a878fb3195097e6c3030e570840bca668989de" translate="yes" xml:space="preserve">
          <source>Validation\Concerns</source>
          <target state="translated">Validation\Concerns</target>
        </trans-unit>
        <trans-unit id="817048f1cede9167f31e7cb1cf94bcde4df7235a" translate="yes" xml:space="preserve">
          <source>Validation\Rules</source>
          <target state="translated">Validation\Rules</target>
        </trans-unit>
        <trans-unit id="6e5b7a60980482ab39ae77b25489457b817517cd" translate="yes" xml:space="preserve">
          <source>Validator</source>
          <target state="translated">Validator</target>
        </trans-unit>
        <trans-unit id="f9f9d594159e3f2c3f8d28d216615dd715ca0095" translate="yes" xml:space="preserve">
          <source>Validator (Contracts)</source>
          <target state="translated">バリデータ(契約書)</target>
        </trans-unit>
        <trans-unit id="09e0fe7247e34cdb327e39e585234667cab29469" translate="yes" xml:space="preserve">
          <source>Validator (Instance)</source>
          <target state="translated">バリデータ (インスタンス)</target>
        </trans-unit>
        <trans-unit id="0b336addaaa239952fb415f7fd85918e65045df7" translate="yes" xml:space="preserve">
          <source>Validator (Support\Facades)</source>
          <target state="translated">Validator (SupportFacades)</target>
        </trans-unit>
        <trans-unit id="a5abb5e3af805ac643b776d8760f718835ae744b" translate="yes" xml:space="preserve">
          <source>Validator (Validation)</source>
          <target state="translated">バリデータ (バリデーション)</target>
        </trans-unit>
        <trans-unit id="8bef6aa283c23efb213d9dffadf61beb55b65477" translate="yes" xml:space="preserve">
          <source>Validator::__call()</source>
          <target state="translated">Validator::__call()</target>
        </trans-unit>
        <trans-unit id="9bde66161ccef1cb590c46e57ac88ac2533bad14" translate="yes" xml:space="preserve">
          <source>Validator::__construct()</source>
          <target state="translated">Validator::__construct()</target>
        </trans-unit>
        <trans-unit id="1abd94f00b3df4694c659478ad29690e3fa0a57f" translate="yes" xml:space="preserve">
          <source>Validator::addCustomAttributes()</source>
          <target state="translated">Validator::addCustomAttributes()</target>
        </trans-unit>
        <trans-unit id="21594937b1ffe86b61baeaa36f41801ea5169136" translate="yes" xml:space="preserve">
          <source>Validator::addCustomValues()</source>
          <target state="translated">Validator::addCustomValues()</target>
        </trans-unit>
        <trans-unit id="a6dde80edd8816711bb5c3b2806786c0fac34b71" translate="yes" xml:space="preserve">
          <source>Validator::addDependentExtension()</source>
          <target state="translated">Validator::addDependentExtension()</target>
        </trans-unit>
        <trans-unit id="716ad347ca4d768925dde99fc3cd4d79cccfc6ad" translate="yes" xml:space="preserve">
          <source>Validator::addDependentExtensions()</source>
          <target state="translated">Validator::addDependentExtensions()</target>
        </trans-unit>
        <trans-unit id="c0df5c0e13371d977c068af45e2a497911bb143f" translate="yes" xml:space="preserve">
          <source>Validator::addExtension()</source>
          <target state="translated">Validator::addExtension()</target>
        </trans-unit>
        <trans-unit id="9eb5329d9f6d63d5f0359959849c3c333bd1efaa" translate="yes" xml:space="preserve">
          <source>Validator::addExtensions()</source>
          <target state="translated">Validator::addExtensions()</target>
        </trans-unit>
        <trans-unit id="026a5248f1127c432ba53ac2f495d3a73a3a4f5f" translate="yes" xml:space="preserve">
          <source>Validator::addFailure()</source>
          <target state="translated">Validator::addFailure()</target>
        </trans-unit>
        <trans-unit id="01a28e92d6873f4bb574bbe5c5f54cd3ac614511" translate="yes" xml:space="preserve">
          <source>Validator::addImplicitExtension()</source>
          <target state="translated">Validator::addImplicitExtension()</target>
        </trans-unit>
        <trans-unit id="f80a828b2833ef3a11050fa47855612257a51326" translate="yes" xml:space="preserve">
          <source>Validator::addImplicitExtensions()</source>
          <target state="translated">Validator::addImplicitExtensions()</target>
        </trans-unit>
        <trans-unit id="ba0488e8ba658aa57c58a61987f9f5a40bcd9532" translate="yes" xml:space="preserve">
          <source>Validator::addReplacer()</source>
          <target state="translated">Validator::addReplacer()</target>
        </trans-unit>
        <trans-unit id="d7d68509a66123cdb1024e383163792b3521a444" translate="yes" xml:space="preserve">
          <source>Validator::addReplacers()</source>
          <target state="translated">Validator::addReplacers()</target>
        </trans-unit>
        <trans-unit id="27230774d3beaa78570d935e27f429a1f9e0d73c" translate="yes" xml:space="preserve">
          <source>Validator::addRules()</source>
          <target state="translated">Validator::addRules()</target>
        </trans-unit>
        <trans-unit id="abe6805240f5ec8b4addcc8cddbfa3b06f5da284" translate="yes" xml:space="preserve">
          <source>Validator::after()</source>
          <target state="translated">Validator::after()</target>
        </trans-unit>
        <trans-unit id="fa54f2778577b1670233c279e5ae64fc39148337" translate="yes" xml:space="preserve">
          <source>Validator::attributes()</source>
          <target state="translated">Validator::attributes()</target>
        </trans-unit>
        <trans-unit id="d823cef5024bb45f86dcf960916bb5b47f043315" translate="yes" xml:space="preserve">
          <source>Validator::attributesThatHaveMessages()</source>
          <target state="translated">Validator::attributesThatHaveMessages()</target>
        </trans-unit>
        <trans-unit id="f681eee205ce9473a40d7962536b6c00c6e1233d" translate="yes" xml:space="preserve">
          <source>Validator::callClassBasedExtension()</source>
          <target state="translated">Validator::callClassBasedExtension()</target>
        </trans-unit>
        <trans-unit id="bdbc39c0af702f572d39b7e3118d2e8cd2251bed" translate="yes" xml:space="preserve">
          <source>Validator::callExtension()</source>
          <target state="translated">Validator::callExtension()</target>
        </trans-unit>
        <trans-unit id="6f0533704a007ebeef16357656dc7870bff7b77f" translate="yes" xml:space="preserve">
          <source>Validator::dependsOnOtherFields()</source>
          <target state="translated">Validator::dependsOnOtherFields()</target>
        </trans-unit>
        <trans-unit id="88882a126316707bfc806bd1b5fcde47feea3519" translate="yes" xml:space="preserve">
          <source>Validator::errors()</source>
          <target state="translated">Validator::errors()</target>
        </trans-unit>
        <trans-unit id="273def9425464059f65c1aaee06d223b09d3e930" translate="yes" xml:space="preserve">
          <source>Validator::excludeAttribute()</source>
          <target state="translated">Validator::excludeAttribute()</target>
        </trans-unit>
        <trans-unit id="9ebafc5e71635a883e8afc895d7242d6eba290a0" translate="yes" xml:space="preserve">
          <source>Validator::failed()</source>
          <target state="translated">Validator::failed()</target>
        </trans-unit>
        <trans-unit id="488b98eeb868d233b0c30d414a69069f5731ae79" translate="yes" xml:space="preserve">
          <source>Validator::fails()</source>
          <target state="translated">Validator::fails()</target>
        </trans-unit>
        <trans-unit id="25ae2bca3b6115498d3f7d42de77f69e69bbe1fe" translate="yes" xml:space="preserve">
          <source>Validator::getData()</source>
          <target state="translated">Validator::getData()</target>
        </trans-unit>
        <trans-unit id="551ec908fa41f84996feb5a92c20996c7c4dc170" translate="yes" xml:space="preserve">
          <source>Validator::getExplicitKeys()</source>
          <target state="translated">Validator::getExplicitKeys()</target>
        </trans-unit>
        <trans-unit id="a0303d5906e1bfc36bd833212aa3ba10f00e9652" translate="yes" xml:space="preserve">
          <source>Validator::getFacadeAccessor()</source>
          <target state="translated">Validator::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="45835e605f92b1382945edb67a836e63ddc4d03c" translate="yes" xml:space="preserve">
          <source>Validator::getMessageBag()</source>
          <target state="translated">Validator::getMessageBag()</target>
        </trans-unit>
        <trans-unit id="ba703451e38ca9b4eb087266d90da35d0ebf26ec" translate="yes" xml:space="preserve">
          <source>Validator::getPresenceVerifier()</source>
          <target state="translated">Validator::getPresenceVerifier()</target>
        </trans-unit>
        <trans-unit id="c7f0d2ed13b35efd587255a5fac70dc9203e0407" translate="yes" xml:space="preserve">
          <source>Validator::getPresenceVerifierFor()</source>
          <target state="translated">Validator::getPresenceVerifierFor()</target>
        </trans-unit>
        <trans-unit id="de2adaa115b4190ffd5e9641b37486d723ce95f3" translate="yes" xml:space="preserve">
          <source>Validator::getPrimaryAttribute()</source>
          <target state="translated">Validator::getPrimaryAttribute()</target>
        </trans-unit>
        <trans-unit id="7de7dbfc7c4805fc1a4d2cbaf55b32153d955f8a" translate="yes" xml:space="preserve">
          <source>Validator::getRule()</source>
          <target state="translated">Validator::getRule()</target>
        </trans-unit>
        <trans-unit id="32c0e39b6a0adfdc422299b3e86f75639259eda2" translate="yes" xml:space="preserve">
          <source>Validator::getRules()</source>
          <target state="translated">Validator::getRules()</target>
        </trans-unit>
        <trans-unit id="8e520480b181e3bc995f91f3852a72d39c677c0c" translate="yes" xml:space="preserve">
          <source>Validator::getTranslator()</source>
          <target state="translated">Validator::getTranslator()</target>
        </trans-unit>
        <trans-unit id="9aa84aebc80134eddc22d691525b5bd77647b5fb" translate="yes" xml:space="preserve">
          <source>Validator::getValue()</source>
          <target state="translated">Validator::getValue()</target>
        </trans-unit>
        <trans-unit id="d8131288f8329952e472cd70e4a22699ed44e310" translate="yes" xml:space="preserve">
          <source>Validator::hasNotFailedPreviousRuleIfPresenceRule()</source>
          <target state="translated">Validator::hasNotFailedPreviousRuleIfPresenceRule()</target>
        </trans-unit>
        <trans-unit id="62885d41cea839c09c03ee34c05e26b947e4d06d" translate="yes" xml:space="preserve">
          <source>Validator::hasRule()</source>
          <target state="translated">Validator::hasRule()</target>
        </trans-unit>
        <trans-unit id="0eca29b14b4ed23a63d5f393240708d56e00c501" translate="yes" xml:space="preserve">
          <source>Validator::invalid()</source>
          <target state="translated">Validator::invalid()</target>
        </trans-unit>
        <trans-unit id="ce101d689a80b1fa1056d68054fb1c4046505982" translate="yes" xml:space="preserve">
          <source>Validator::isImplicit()</source>
          <target state="translated">Validator::isImplicit()</target>
        </trans-unit>
        <trans-unit id="024c957288d4def17d50978022c0e415c37ff174" translate="yes" xml:space="preserve">
          <source>Validator::isNotNullIfMarkedAsNullable()</source>
          <target state="translated">Validator::isNotNullIfMarkedAsNullable()</target>
        </trans-unit>
        <trans-unit id="d58201bd96d770516c5006e4567fcf86bec0768d" translate="yes" xml:space="preserve">
          <source>Validator::isValidatable()</source>
          <target state="translated">Validator::isValidatable()</target>
        </trans-unit>
        <trans-unit id="908e4e0cc3b11ad728317e77aebef8f1885f5f73" translate="yes" xml:space="preserve">
          <source>Validator::messages()</source>
          <target state="translated">Validator::messages()</target>
        </trans-unit>
        <trans-unit id="058a94a4751640bbbbf1faada3bc723e76578cde" translate="yes" xml:space="preserve">
          <source>Validator::parseData()</source>
          <target state="translated">Validator::parseData()</target>
        </trans-unit>
        <trans-unit id="243e56898e63baf5d7f1eaec889fa497350ec157" translate="yes" xml:space="preserve">
          <source>Validator::passes()</source>
          <target state="translated">Validator::passes()</target>
        </trans-unit>
        <trans-unit id="7ba4e61f18f7580719f8c6cc4519c4fd7c9860dd" translate="yes" xml:space="preserve">
          <source>Validator::passesOptionalCheck()</source>
          <target state="translated">Validator::passesOptionalCheck()</target>
        </trans-unit>
        <trans-unit id="f36d3e2269c50e3feaa8898fe67261623b14d1a2" translate="yes" xml:space="preserve">
          <source>Validator::presentOrRuleIsImplicit()</source>
          <target state="translated">Validator::presentOrRuleIsImplicit()</target>
        </trans-unit>
        <trans-unit id="e92fdb3c657c6ed54727488be4b3140a0a8d73ba" translate="yes" xml:space="preserve">
          <source>Validator::removeAttribute()</source>
          <target state="translated">Validator::removeAttribute()</target>
        </trans-unit>
        <trans-unit id="ff795c4327fdb9332cc1ab298a6e995898d74bc7" translate="yes" xml:space="preserve">
          <source>Validator::replaceAsterisksInParameters()</source>
          <target state="translated">Validator::replaceAsterisksInParameters()</target>
        </trans-unit>
        <trans-unit id="f44780a0f916f0e6ff8419167e90c9e3a4d578b1" translate="yes" xml:space="preserve">
          <source>Validator::replacePlaceholderInString()</source>
          <target state="translated">Validator::replacePlaceholderInString()</target>
        </trans-unit>
        <trans-unit id="801a3ed45b0347f0ecf4d36feb973381e12d031e" translate="yes" xml:space="preserve">
          <source>Validator::replacePlaceholders()</source>
          <target state="translated">Validator::replacePlaceholders()</target>
        </trans-unit>
        <trans-unit id="175a6b8827fa8473e598f73a9547c26758e998be" translate="yes" xml:space="preserve">
          <source>Validator::setAttributeNames()</source>
          <target state="translated">Validator::setAttributeNames()</target>
        </trans-unit>
        <trans-unit id="cca0f5a13ad192478ff6811d3b9379a92a606317" translate="yes" xml:space="preserve">
          <source>Validator::setContainer()</source>
          <target state="translated">Validator::setContainer()</target>
        </trans-unit>
        <trans-unit id="7d73b27013df883b23bb5bae638b5ba9e668cfcf" translate="yes" xml:space="preserve">
          <source>Validator::setCustomMessages()</source>
          <target state="translated">Validator::setCustomMessages()</target>
        </trans-unit>
        <trans-unit id="1cde8278eec1d98a44e571080a49b782ae5741d1" translate="yes" xml:space="preserve">
          <source>Validator::setData()</source>
          <target state="translated">Validator::setData()</target>
        </trans-unit>
        <trans-unit id="9b90d18719adc21aa647d63e0c00de0c7c5ce9c9" translate="yes" xml:space="preserve">
          <source>Validator::setFallbackMessages()</source>
          <target state="translated">Validator::setFallbackMessages()</target>
        </trans-unit>
        <trans-unit id="5daa160b7cefd119a59718d1baa556ca8c2af8b2" translate="yes" xml:space="preserve">
          <source>Validator::setImplicitAttributesFormatter()</source>
          <target state="translated">Validator::setImplicitAttributesFormatter()</target>
        </trans-unit>
        <trans-unit id="307bf903285fad521eb54283c712361a5a065b97" translate="yes" xml:space="preserve">
          <source>Validator::setPresenceVerifier()</source>
          <target state="translated">Validator::setPresenceVerifier()</target>
        </trans-unit>
        <trans-unit id="6dd7618a7102607f8b0f32531337fb77a5771bc0" translate="yes" xml:space="preserve">
          <source>Validator::setRules()</source>
          <target state="translated">Validator::setRules()</target>
        </trans-unit>
        <trans-unit id="9030e63023d5174b967ff2a1cec338abbdbb1380" translate="yes" xml:space="preserve">
          <source>Validator::setTranslator()</source>
          <target state="translated">Validator::setTranslator()</target>
        </trans-unit>
        <trans-unit id="a3e36752cbe9dc5a3458be9da925e8f46cd6b6b1" translate="yes" xml:space="preserve">
          <source>Validator::setValueNames()</source>
          <target state="translated">Validator::setValueNames()</target>
        </trans-unit>
        <trans-unit id="8f391b1993669ab762ec40b8fa1295cae3a89bba" translate="yes" xml:space="preserve">
          <source>Validator::shouldBeExcluded()</source>
          <target state="translated">Validator::shouldBeExcluded()</target>
        </trans-unit>
        <trans-unit id="f75dcc3d8c3f533e2fb56de17fa9d57b8070e98e" translate="yes" xml:space="preserve">
          <source>Validator::shouldStopValidating()</source>
          <target state="translated">Validator::shouldStopValidating()</target>
        </trans-unit>
        <trans-unit id="30fdccd1bede135087c2b485275afe154c5a238c" translate="yes" xml:space="preserve">
          <source>Validator::sometimes()</source>
          <target state="translated">Validator::sometimes()</target>
        </trans-unit>
        <trans-unit id="2b03ca2fde9207c2edc07aeea2002841e071f8da" translate="yes" xml:space="preserve">
          <source>Validator::valid()</source>
          <target state="translated">Validator::valid()</target>
        </trans-unit>
        <trans-unit id="83093e901543a93a05fa8ae6b5e80bfddbbbfdfa" translate="yes" xml:space="preserve">
          <source>Validator::validate()</source>
          <target state="translated">Validator::validate()</target>
        </trans-unit>
        <trans-unit id="3f8fef8aee038d0909ae6f72fa46c8d0843eedc7" translate="yes" xml:space="preserve">
          <source>Validator::validateAttribute()</source>
          <target state="translated">Validator::validateAttribute()</target>
        </trans-unit>
        <trans-unit id="a314bfa45b3adf1256a77ec0f066e1b68c27d1fa" translate="yes" xml:space="preserve">
          <source>Validator::validateUsingCustomRule()</source>
          <target state="translated">Validator::validateUsingCustomRule()</target>
        </trans-unit>
        <trans-unit id="bb2984cd881777e14ae533f4707d6f78deebc9cb" translate="yes" xml:space="preserve">
          <source>Validator::validateWithBag()</source>
          <target state="translated">Validator::validateWithBag()</target>
        </trans-unit>
        <trans-unit id="61e22c307c152eff386d5c15ce9bcb799927108b" translate="yes" xml:space="preserve">
          <source>Validator::validated()</source>
          <target state="translated">Validator::validated()</target>
        </trans-unit>
        <trans-unit id="807e4053bc45088b15dc83ec9738651b61bfa267" translate="yes" xml:space="preserve">
          <source>ValidatorInterface</source>
          <target state="translated">ValidatorInterface</target>
        </trans-unit>
        <trans-unit id="59289c44d296d208a7e3dbb4618747129c7e86cd" translate="yes" xml:space="preserve">
          <source>ValidatorInterface (Routing\Matching)</source>
          <target state="translated">ValidatorInterface (RoutingMatching)</target>
        </trans-unit>
        <trans-unit id="d2c6cf39d743bcf396be72a4c5516afd721d621e" translate="yes" xml:space="preserve">
          <source>ValidatorInterface::matches()</source>
          <target state="translated">ValidatorInterface::matches()</target>
        </trans-unit>
        <trans-unit id="1d8ccb2516de3489ebb8b2748614c95303b60f7e" translate="yes" xml:space="preserve">
          <source>Value Object Casting</source>
          <target state="translated">値オブジェクトの鋳造</target>
        </trans-unit>
        <trans-unit id="12fbe14b21876e01b721ca8b147ccd3e14bef69f" translate="yes" xml:space="preserve">
          <source>ValuePrefix</source>
          <target state="translated">ValuePrefix</target>
        </trans-unit>
        <trans-unit id="72461ac8b6fbc994b5aef6bf388f203910dfe9f8" translate="yes" xml:space="preserve">
          <source>ValuePrefix::create()</source>
          <target state="translated">ValuePrefix::create()</target>
        </trans-unit>
        <trans-unit id="a806f567a0da9636c575eb6b626d06a5efcaee5b" translate="yes" xml:space="preserve">
          <source>ValuePrefix::remove()</source>
          <target state="translated">ValuePrefix::remove()</target>
        </trans-unit>
        <trans-unit id="5c5a080a2368930bf1b1117949e48fda2eccab46" translate="yes" xml:space="preserve">
          <source>Vanilla JS</source>
          <target state="translated">バニラJS</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="846e7a77bc3a6be34611b593969a1111633f94e2" translate="yes" xml:space="preserve">
          <source>Variables that are dynamically passed to mailable views &lt;a href=&quot;https://github.com/laravel/framework/pull/24232&quot;&gt;are now automatically &quot;camel cased&quot;&lt;/a&gt;, which makes mailable dynamic variable behavior consistent with dynamic view variables. Dynamic mailable variables are not a documented Laravel feature, so likelihood of impact to your application is low.</source>
          <target state="translated">メール可能なビューに動的に渡される変数&lt;a href=&quot;https://github.com/laravel/framework/pull/24232&quot;&gt;は、自動的に「キャメルケース」&lt;/a&gt;になり、メール可能な動的変数の動作が動的ビュー変数と一致します。動的なメール可能な変数は文書化されたLaravel機能ではないため、アプリケーションへの影響の可能性は低いです。</target>
        </trans-unit>
        <trans-unit id="1b28ca470fa7964b7fb6dd599c8350918ba34169" translate="yes" xml:space="preserve">
          <source>Variadic Tag Dependencies</source>
          <target state="translated">異種タグの依存関係</target>
        </trans-unit>
        <trans-unit id="27ea8d3e9f119ebc625127ec1eae5ffef60fc7ff" translate="yes" xml:space="preserve">
          <source>Vendor Extraction</source>
          <target state="translated">ベンダー抽出</target>
        </trans-unit>
        <trans-unit id="60aa156aec8b7900f2fcc7555572da6806ed404e" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand</source>
          <target state="translated">VendorPublishCommand</target>
        </trans-unit>
        <trans-unit id="ba9aac51bbeeb2b8d94ded984e70d3278877151e" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand (Foundation)</source>
          <target state="translated">VendorPublishCommand (Foundation)</target>
        </trans-unit>
        <trans-unit id="5eb11c73725827e1bf3217624dac6d495d0eda45" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::__construct()</source>
          <target state="translated">VendorPublishCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="6d82e346662fc447c071b0cb9304cd16d75cd7ce" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::createParentDirectory()</source>
          <target state="translated">VendorPublishCommand::createParentDirectory()</target>
        </trans-unit>
        <trans-unit id="f9426e4e3b8601829b71ab0d712db62c60fc9844" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::determineWhatShouldBePublished()</source>
          <target state="translated">VendorPublishCommand::determineWhatShouldBePublished()</target>
        </trans-unit>
        <trans-unit id="3a2f6ccad9f3376dc271b765f26ce750a8629028" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::handle()</source>
          <target state="translated">VendorPublishCommand::handle()</target>
        </trans-unit>
        <trans-unit id="a7e16ac2b2e2a07358e63547ba94c2f80f30d0a1" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::moveManagedFiles()</source>
          <target state="translated">VendorPublishCommand::moveManagedFiles()</target>
        </trans-unit>
        <trans-unit id="2321b05d3cee837eb16954813b3d18815973beaa" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::parseChoice()</source>
          <target state="translated">VendorPublishCommand::parseChoice()</target>
        </trans-unit>
        <trans-unit id="88279687627a36a1ea7f2f4e0bcf6e3d8b1ff47a" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::pathsToPublish()</source>
          <target state="translated">VendorPublishCommand::pathsToPublish()</target>
        </trans-unit>
        <trans-unit id="af47432168b02e3d2e775ca075c44c328e220635" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::promptForProviderOrTag()</source>
          <target state="translated">VendorPublishCommand::promptForProviderOrTag()</target>
        </trans-unit>
        <trans-unit id="1574c7712ed5265ae681647bd3f975f1591bff19" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishDirectory()</source>
          <target state="translated">VendorPublishCommand::publishDirectory()</target>
        </trans-unit>
        <trans-unit id="81d597f62cffda77e3329a775f8a264509b5e7e1" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishFile()</source>
          <target state="translated">VendorPublishCommand::publishFile()</target>
        </trans-unit>
        <trans-unit id="856a988a5bb31e9afe36f80b79672d4874093d5a" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishItem()</source>
          <target state="translated">VendorPublishCommand::publishItem()</target>
        </trans-unit>
        <trans-unit id="c1cfd1f2871a32069e214897bf1f63a2f5749c94" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishTag()</source>
          <target state="translated">VendorPublishCommand::publishTag()</target>
        </trans-unit>
        <trans-unit id="8a735a1d49e6abfb0f6decb90440d59ad0559cf6" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::publishableChoices()</source>
          <target state="translated">VendorPublishCommand::publishableChoices()</target>
        </trans-unit>
        <trans-unit id="25c54d5fb6ae5f31f733098e7e205e7e4e894bf3" translate="yes" xml:space="preserve">
          <source>VendorPublishCommand::status()</source>
          <target state="translated">VendorPublishCommand::status()</target>
        </trans-unit>
        <trans-unit id="33817a63b651d4a84e7a5d740d58bef5f67a6a2a" translate="yes" xml:space="preserve">
          <source>Verb</source>
          <target state="translated">Verb</target>
        </trans-unit>
        <trans-unit id="aed3b8c6a7c0fbbdbffa59a082415b138a87a6a6" translate="yes" xml:space="preserve">
          <source>Verified</source>
          <target state="translated">Verified</target>
        </trans-unit>
        <trans-unit id="4990372b20215a80d9461942ec22c6a264e5c95b" translate="yes" xml:space="preserve">
          <source>Verified (Auth\Events)</source>
          <target state="translated">Verified (AuthEvents)</target>
        </trans-unit>
        <trans-unit id="1e0d19fc5305547873e0fb9363de406bef84d26b" translate="yes" xml:space="preserve">
          <source>Verified::__construct()</source>
          <target state="translated">Verified::__construct()</target>
        </trans-unit>
        <trans-unit id="ee90d7d5543cc2e1f5f4aad1d2eaf90d83c96549" translate="yes" xml:space="preserve">
          <source>VerifiesEmails</source>
          <target state="translated">VerifiesEmails</target>
        </trans-unit>
        <trans-unit id="72daaad87bd915f988de1ef417449fd19be953ef" translate="yes" xml:space="preserve">
          <source>VerifiesEmails (Foundation\Auth)</source>
          <target state="translated">VerifiesEmails (FoundationAuth)</target>
        </trans-unit>
        <trans-unit id="ff533e166c7180ef75e6440b243f94b76893ac74" translate="yes" xml:space="preserve">
          <source>VerifiesEmails::resend()</source>
          <target state="translated">VerifiesEmails::resend()</target>
        </trans-unit>
        <trans-unit id="fb00b91262a52e9a6ff5e59654dc1638e2af0ddc" translate="yes" xml:space="preserve">
          <source>VerifiesEmails::show()</source>
          <target state="translated">VerifiesEmails::show()</target>
        </trans-unit>
        <trans-unit id="11039d8339d484b0840bdb6953f5b77792c6eb53" translate="yes" xml:space="preserve">
          <source>VerifiesEmails::verify()</source>
          <target state="translated">VerifiesEmails::verify()</target>
        </trans-unit>
        <trans-unit id="f09c1a37a38b85cd68b664b013db3c35702c3a9e" translate="yes" xml:space="preserve">
          <source>Verify that the encryption payload is valid.</source>
          <target state="translated">暗号化ペイロードが有効であることを確認します。</target>
        </trans-unit>
        <trans-unit id="82e851551f83af80c4fd460e7dce35b9c25fe81f" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken</source>
          <target state="translated">VerifyCsrfToken</target>
        </trans-unit>
        <trans-unit id="481bca3f16c19b1c667d5d078c5a774f386a275b" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken (Foundation\Http)</source>
          <target state="translated">VerifyCsrfToken (Foundation)</target>
        </trans-unit>
        <trans-unit id="a5b38088228e470a5d75e318ba73e736ba95bd6e" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::__construct()</source>
          <target state="translated">VerifyCsrfToken::__construct()</target>
        </trans-unit>
        <trans-unit id="7e6e12f9159344da2b6c521f0aa96e5d1dc6c0c4" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::addCookieToResponse()</source>
          <target state="translated">VerifyCsrfToken::addCookieToResponse()</target>
        </trans-unit>
        <trans-unit id="6af8a4e33186e8a9a29edb243d9a356ae84b7c74" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::getTokenFromRequest()</source>
          <target state="translated">VerifyCsrfToken::getTokenFromRequest()</target>
        </trans-unit>
        <trans-unit id="300aeeedac93060543f4fe4dd397b60afa043dc0" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::handle()</source>
          <target state="translated">VerifyCsrfToken::handle()</target>
        </trans-unit>
        <trans-unit id="955c69feda3cd458fd7daffa6f49a66f69268cd3" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::inExceptArray()</source>
          <target state="translated">VerifyCsrfToken::inExceptArray()</target>
        </trans-unit>
        <trans-unit id="a9814f4b5f82d2e62700728b15778cea7be6d819" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::isReading()</source>
          <target state="translated">VerifyCsrfToken::isReading()</target>
        </trans-unit>
        <trans-unit id="cdc8e5b5a6f1413c075d35904ad14868615d112b" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::runningUnitTests()</source>
          <target state="translated">VerifyCsrfToken::runningUnitTests()</target>
        </trans-unit>
        <trans-unit id="234104e58b89c3d5c6084eb95bd18d66f91947cf" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::serialized()</source>
          <target state="translated">VerifyCsrfToken::serialized()</target>
        </trans-unit>
        <trans-unit id="04d3868387074252929691e7bf30dff30f3240aa" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::shouldAddXsrfTokenCookie()</source>
          <target state="translated">VerifyCsrfToken::shouldAddXsrfTokenCookie()</target>
        </trans-unit>
        <trans-unit id="73aa614209b04bd56d58fa37ddb497da79f05ca9" translate="yes" xml:space="preserve">
          <source>VerifyCsrfToken::tokensMatch()</source>
          <target state="translated">VerifyCsrfToken::tokensMatch()</target>
        </trans-unit>
        <trans-unit id="3c6be84b1a0b232d34c6744c5051d91d4f2c89b3" translate="yes" xml:space="preserve">
          <source>VerifyEmail</source>
          <target state="translated">VerifyEmail</target>
        </trans-unit>
        <trans-unit id="28c25950bf5161b431f8eaca12c08d4c676ad0cb" translate="yes" xml:space="preserve">
          <source>VerifyEmail (Auth\Notifications)</source>
          <target state="translated">VerifyEmail (AuthNotifications)</target>
        </trans-unit>
        <trans-unit id="dfdae09afd0e8b72428282852c5357335fdf7f2a" translate="yes" xml:space="preserve">
          <source>VerifyEmail::buildMailMessage()</source>
          <target state="translated">VerifyEmail::buildMailMessage()</target>
        </trans-unit>
        <trans-unit id="8a03c0cd496b925addd52fcdf10d1a5ebfd7c5d3" translate="yes" xml:space="preserve">
          <source>VerifyEmail::createUrlUsing()</source>
          <target state="translated">VerifyEmail::createUrlUsing()</target>
        </trans-unit>
        <trans-unit id="6372cb0fd0c2f730f37afcaf4e3243c27ec9661b" translate="yes" xml:space="preserve">
          <source>VerifyEmail::toMail()</source>
          <target state="translated">VerifyEmail::toMail()</target>
        </trans-unit>
        <trans-unit id="747395ae35e22dcd74852d7ffd4969abeb6733f7" translate="yes" xml:space="preserve">
          <source>VerifyEmail::toMailUsing()</source>
          <target state="translated">VerifyEmail::toMailUsing()</target>
        </trans-unit>
        <trans-unit id="77f66035652829511a6c585913671d4e3dc07684" translate="yes" xml:space="preserve">
          <source>VerifyEmail::verificationUrl()</source>
          <target state="translated">VerifyEmail::verificationUrl()</target>
        </trans-unit>
        <trans-unit id="13433abad2e71f2638abe9774c3cdc74102f7764" translate="yes" xml:space="preserve">
          <source>VerifyEmail::via()</source>
          <target state="translated">VerifyEmail::via()</target>
        </trans-unit>
        <trans-unit id="47bb88094ae980a3488e26d5c06c61f56262541c" translate="yes" xml:space="preserve">
          <source>Verifying A Password Against A Hash</source>
          <target state="translated">ハッシュに対するパスワードの検証</target>
        </trans-unit>
        <trans-unit id="ede44ecd9dab58dbdb53971a85a66c62fb10a50f" translate="yes" xml:space="preserve">
          <source>Verifying An Exact JSON Match</source>
          <target state="translated">正確な JSON マッチの検証</target>
        </trans-unit>
        <trans-unit id="87fc16e974f29a9261e02a6b67b6e18ae3100c86" translate="yes" xml:space="preserve">
          <source>Verifying JSON Paths</source>
          <target state="translated">JSONパスの検証</target>
        </trans-unit>
        <trans-unit id="634bee50d59107ceb4e2fd3e849d66c1600b8fdb" translate="yes" xml:space="preserve">
          <source>Verifying Webhook Signatures</source>
          <target state="translated">ウェブフック署名の検証</target>
        </trans-unit>
        <trans-unit id="2da600bf9404843107a9531694f654e5662959e0" translate="yes" xml:space="preserve">
          <source>Version</source>
          <target state="translated">Version</target>
        </trans-unit>
        <trans-unit id="81bc56b974a9f54ba6d3db31f2adbf63a8300ee6" translate="yes" xml:space="preserve">
          <source>Versioning / Cache Busting</source>
          <target state="translated">バージョニング/キャッシュバスター</target>
        </trans-unit>
        <trans-unit id="e22fc540f2af12c8ec78a747a89bd3b49988f423" translate="yes" xml:space="preserve">
          <source>Versioning Scheme</source>
          <target state="translated">バージョニングスキーム</target>
        </trans-unit>
        <trans-unit id="fd8a8491cc0bd951bd841f43ac95a43993e12abd" translate="yes" xml:space="preserve">
          <source>Via Blade Templates</source>
          <target state="translated">ブレードテンプレート経由</target>
        </trans-unit>
        <trans-unit id="4c53eb56ef64e0264243d307fc1960a19960ab80" translate="yes" xml:space="preserve">
          <source>Via Composer Create-Project</source>
          <target state="translated">コンポーザークリエイトプロジェクト経由</target>
        </trans-unit>
        <trans-unit id="73db5daddd56688e1dda7d522a9b062cd64a0dce" translate="yes" xml:space="preserve">
          <source>Via Controller Helpers</source>
          <target state="translated">コントローラヘルパー経由</target>
        </trans-unit>
        <trans-unit id="d0025b51c080b8656aab5b271be5145d2badee46" translate="yes" xml:space="preserve">
          <source>Via Laravel Installer</source>
          <target state="translated">Laravelインストーラーを経由して</target>
        </trans-unit>
        <trans-unit id="b303f4566c13cdee6542f610dba3260651a07126" translate="yes" xml:space="preserve">
          <source>Via Middleware</source>
          <target state="translated">ミドルウェア経由</target>
        </trans-unit>
        <trans-unit id="304b7868d1c04a6b3e24553f168d73d19a0eaacb" translate="yes" xml:space="preserve">
          <source>Via Public Properties</source>
          <target state="translated">公共のプロパティを介して</target>
        </trans-unit>
        <trans-unit id="81b33d9592194e2212f54c6a8926eb12365a7ca1" translate="yes" xml:space="preserve">
          <source>Via The &lt;code&gt;with&lt;/code&gt; Method:</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; メソッド経由：</target>
        </trans-unit>
        <trans-unit id="e3b61f5d3d2be4aa656894845ce145e491635ee3" translate="yes" xml:space="preserve">
          <source>Via The User Model</source>
          <target state="translated">ユーザーモデルを介して</target>
        </trans-unit>
        <trans-unit id="689d1952b8b1ed7e7ee1f9efd94e37fb4541cb4f" translate="yes" xml:space="preserve">
          <source>Via the &lt;code&gt;faker&lt;/code&gt; property, factories have access to the &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHP library, which allows you to conveniently generate various kinds of random data for testing.</source>
          <target state="translated">経由して &lt;code&gt;faker&lt;/code&gt; プロパティ、工場へのアクセス持っている&lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;偽物&lt;/a&gt;あなたは便利なテストのためにランダムな各種のデータを生成することができますPHPライブラリを、。</target>
        </trans-unit>
        <trans-unit id="69bd4ef9fbd0894a22759c3766b859defbdedbc8" translate="yes" xml:space="preserve">
          <source>View</source>
          <target state="translated">View</target>
        </trans-unit>
        <trans-unit id="636384962685e7a27a4f3552b6bf81bfe178bd9b" translate="yes" xml:space="preserve">
          <source>View (Contracts)</source>
          <target state="translated">表示(契約)</target>
        </trans-unit>
        <trans-unit id="c38a4568f526f342e8fcf688778413b79264f388" translate="yes" xml:space="preserve">
          <source>View (Instance)</source>
          <target state="translated">ビュー (インスタンス)</target>
        </trans-unit>
        <trans-unit id="ac2091b347f21fadce61dbd640950009db3acb59" translate="yes" xml:space="preserve">
          <source>View (Support\Facades)</source>
          <target state="translated">View (SupportFacades)</target>
        </trans-unit>
        <trans-unit id="fce585b3bc9ac6775d43e718a94f4cfbf8f3832e" translate="yes" xml:space="preserve">
          <source>View &lt;strong&gt;creators&lt;/strong&gt; are very similar to view composers; however, they are executed immediately after the view is instantiated instead of waiting until the view is about to render. To register a view creator, use the &lt;code&gt;creator&lt;/code&gt; method:</source>
          <target state="translated">ビュー&lt;strong&gt;クリエーター&lt;/strong&gt;は、ビューコンポーザーと非常に似ています。ただし、ビューがレンダリングされるまで待機するのではなく、ビューがインスタンス化された直後に実行されます。ビュー作成者を登録するには、 &lt;code&gt;creator&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="a617c39de9912a57b038bc089fac9aef2fcd602e" translate="yes" xml:space="preserve">
          <source>View Components</source>
          <target state="translated">コンポーネントを見る</target>
        </trans-unit>
        <trans-unit id="b8beebfe4516b39e3e9cd125c3b013717fc8fba3" translate="yes" xml:space="preserve">
          <source>View Composers</source>
          <target state="translated">コンポーザーを見る</target>
        </trans-unit>
        <trans-unit id="1a887ed3d5c0a73c479f298946b97ae34b6cb6c7" translate="yes" xml:space="preserve">
          <source>View Creators</source>
          <target state="translated">クリエイターを見る</target>
        </trans-unit>
        <trans-unit id="0b356ea8e0756a911b2013cd62103873365bcb04" translate="yes" xml:space="preserve">
          <source>View Data</source>
          <target state="translated">データを見る</target>
        </trans-unit>
        <trans-unit id="216fac9acc90914885a8b9e2f5ece0b60d24a1cb" translate="yes" xml:space="preserve">
          <source>View Responses</source>
          <target state="translated">レスポンスを見る</target>
        </trans-unit>
        <trans-unit id="fad0fbfb5b81d3b4cdda705944cbe470d375c4ce" translate="yes" xml:space="preserve">
          <source>View Routes</source>
          <target state="translated">ルートを見る</target>
        </trans-unit>
        <trans-unit id="617d854bfb196f4bbe39ef242236cce9417f1b5a" translate="yes" xml:space="preserve">
          <source>View Watcher</source>
          <target state="translated">ビュー・ウォッチャー</target>
        </trans-unit>
        <trans-unit id="a6af680459d0b11a021f6dc182a15b0bea1a0595" translate="yes" xml:space="preserve">
          <source>View a list of logs which are written by Valet's services.</source>
          <target state="translated">バレエさんのサービスで書き込まれたログの一覧を表示します。</target>
        </trans-unit>
        <trans-unit id="bb642ffd803c6d11460735424c344786a7414834" translate="yes" xml:space="preserve">
          <source>View all of your &quot;parked&quot; paths.</source>
          <target state="translated">あなたの「公園」の道をすべて表示します。</target>
        </trans-unit>
        <trans-unit id="e476fc63786200bda3d812334fb2f3c95b57a2fc" translate="yes" xml:space="preserve">
          <source>View composers are callbacks or class methods that are called when a view is rendered. If you have data that you want to be bound to a view each time that view is rendered, a view composer can help you organize that logic into a single location.</source>
          <target state="translated">ビューコンポーザーとは、ビューがレンダリングされたときに呼び出されるコールバックやクラスメソッドのことです。ビューがレンダリングされるたびにビューにバインドしたいデータがある場合、ビューコンポーザーを使用すると、ロジックを一箇所にまとめることができます。</target>
        </trans-unit>
        <trans-unit id="05c5d346faeb325d0ff51bae601a7260f9617b1d" translate="yes" xml:space="preserve">
          <source>View directory names should not contain the &lt;code&gt;.&lt;/code&gt; character.</source>
          <target state="translated">ビューディレクトリ名に &lt;code&gt;.&lt;/code&gt; 含めることはできません。キャラクター。</target>
        </trans-unit>
        <trans-unit id="2ef694be0731d775be969e9dee2904c709e275e7" translate="yes" xml:space="preserve">
          <source>View::getData()</source>
          <target state="translated">View::getData()</target>
        </trans-unit>
        <trans-unit id="12d718b41cea54e89300e228033dc8210dc7ab81" translate="yes" xml:space="preserve">
          <source>View::getFacadeAccessor()</source>
          <target state="translated">View::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="3ecef7336a07ca36532e5ac1234cc535c16a1d99" translate="yes" xml:space="preserve">
          <source>View::name()</source>
          <target state="translated">View::name()</target>
        </trans-unit>
        <trans-unit id="c002348c4cbfabae7f2aa2a0a353278eb8fc7e59" translate="yes" xml:space="preserve">
          <source>View::with()</source>
          <target state="translated">View::with()</target>
        </trans-unit>
        <trans-unit id="92b25985c03cdcff5335fe20c390c36551184e23" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand</source>
          <target state="translated">ViewCacheCommand</target>
        </trans-unit>
        <trans-unit id="68d3e66bb32bed77f80396350b2630d0e4fe7fef" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand (Foundation)</source>
          <target state="translated">ViewCacheCommand (ファンデーション)</target>
        </trans-unit>
        <trans-unit id="fa12ebbd1ebe10822612b0886b83da2ba4bc9c1e" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::bladeFilesIn()</source>
          <target state="translated">ViewCacheCommand::bladeFilesIn()</target>
        </trans-unit>
        <trans-unit id="7bb687c6fe711efd3db1f8f5fd9fe66ab594ac3d" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::compileViews()</source>
          <target state="translated">ViewCacheCommand::compileViews()</target>
        </trans-unit>
        <trans-unit id="84d24ca6ac83d82e1e73ae828043db1ae7ffa173" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::handle()</source>
          <target state="translated">ViewCacheCommand::handle()</target>
        </trans-unit>
        <trans-unit id="9da4330c86144a2696923548a4ebb695880c12ca" translate="yes" xml:space="preserve">
          <source>ViewCacheCommand::paths()</source>
          <target state="translated">ViewCacheCommand::paths()</target>
        </trans-unit>
        <trans-unit id="c1e60e26f0f206f77b5851b78a6269c2fadb089b" translate="yes" xml:space="preserve">
          <source>ViewClearCommand</source>
          <target state="translated">ViewClearCommand</target>
        </trans-unit>
        <trans-unit id="8e6e83d8b2d895bb88cee297b02622bfebae916d" translate="yes" xml:space="preserve">
          <source>ViewClearCommand (Foundation)</source>
          <target state="translated">ViewClearCommand (Foundation)</target>
        </trans-unit>
        <trans-unit id="a6cd454a2d601bf5996be869dc74f5a458da5f8c" translate="yes" xml:space="preserve">
          <source>ViewClearCommand::__construct()</source>
          <target state="translated">ViewClearCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="fd48eeeccbb7cf4f670ee13b18bfe76e7f32fd17" translate="yes" xml:space="preserve">
          <source>ViewClearCommand::handle()</source>
          <target state="translated">ViewClearCommand::handle()</target>
        </trans-unit>
        <trans-unit id="36e0c76f563736f6c88b0432a721b2418d20b3b7" translate="yes" xml:space="preserve">
          <source>ViewController</source>
          <target state="translated">ViewController</target>
        </trans-unit>
        <trans-unit id="9e6cb8dd74a9d9e5e8e455d7a7c4e142859204ff" translate="yes" xml:space="preserve">
          <source>ViewController (Routing)</source>
          <target state="translated">ViewController (ルーティング)</target>
        </trans-unit>
        <trans-unit id="909287a7c532f879ef5c0cc229d7cba3d44ad1c4" translate="yes" xml:space="preserve">
          <source>ViewController::__construct()</source>
          <target state="translated">ViewController::__construct()</target>
        </trans-unit>
        <trans-unit id="4d4a135538ea1460881b660c21dc3e029b8a5fdf" translate="yes" xml:space="preserve">
          <source>ViewController::__invoke()</source>
          <target state="translated">ViewController::__invoke()</target>
        </trans-unit>
        <trans-unit id="aea61113b1842710f9ac25fd963f7283f452f182" translate="yes" xml:space="preserve">
          <source>ViewErrorBag</source>
          <target state="translated">ViewErrorBag</target>
        </trans-unit>
        <trans-unit id="f7963e44f1ebe85f265d10e7148da4475e6f1c62" translate="yes" xml:space="preserve">
          <source>ViewErrorBag (Support)</source>
          <target state="translated">ViewErrorBag (サポート)</target>
        </trans-unit>
        <trans-unit id="d409e2f2ba61778a136c5f6c9c5e1a86e251f6a0" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__call()</source>
          <target state="translated">ViewErrorBag::__call()</target>
        </trans-unit>
        <trans-unit id="f4923f90dd20358f3ef924b3446496f85862bb9f" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__get()</source>
          <target state="translated">ViewErrorBag::__get()</target>
        </trans-unit>
        <trans-unit id="1d1b8ef16c752ac7d411f83e2a5222322cf542cc" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__set()</source>
          <target state="translated">ViewErrorBag::__set()</target>
        </trans-unit>
        <trans-unit id="6bd33ca55c4589c854d75bac447bd5d12acd98fb" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::__toString()</source>
          <target state="translated">ViewErrorBag::__toString()</target>
        </trans-unit>
        <trans-unit id="a436fe71d64f9c550e9d310dffa42cf461b8628b" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::any()</source>
          <target state="translated">ViewErrorBag::any()</target>
        </trans-unit>
        <trans-unit id="d06414ba3824b8f3f2c2698c8938a27155d41926" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::count()</source>
          <target state="translated">ViewErrorBag::count()</target>
        </trans-unit>
        <trans-unit id="aec4a0c9600fcd41c2f70eb24a68f5ff8f83631e" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::getBag()</source>
          <target state="translated">ViewErrorBag::getBag()</target>
        </trans-unit>
        <trans-unit id="f2ac1a9a9e028846168aa39e5c657673e479ecaa" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::getBags()</source>
          <target state="translated">ViewErrorBag::getBags()</target>
        </trans-unit>
        <trans-unit id="b9fb491fc002a38275b35a93bf88f10abc8d17e0" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::hasBag()</source>
          <target state="translated">ViewErrorBag::hasBag()</target>
        </trans-unit>
        <trans-unit id="6b09df207b989c9cb5b3a60ac64d8e93d8e71ee6" translate="yes" xml:space="preserve">
          <source>ViewErrorBag::put()</source>
          <target state="translated">ViewErrorBag::put()</target>
        </trans-unit>
        <trans-unit id="e46a0b36d1391d2e2fcd5b8a15363ea9a3069be0" translate="yes" xml:space="preserve">
          <source>ViewFinderInterface</source>
          <target state="translated">ViewFinderInterface</target>
        </trans-unit>
        <trans-unit id="8c814cb87f281c21b5263b1341d5b98df7322113" translate="yes" xml:space="preserve">
          <source>ViewName</source>
          <target state="translated">ViewName</target>
        </trans-unit>
        <trans-unit id="bd159f6b18e6b33ba7d6277d6eef99edb5c9680d" translate="yes" xml:space="preserve">
          <source>ViewServiceProvider</source>
          <target state="translated">ViewServiceProvider</target>
        </trans-unit>
        <trans-unit id="2da6064b2d9fe83acd521ec78b23c36ae3317d6b" translate="yes" xml:space="preserve">
          <source>View\Compilers</source>
          <target state="translated">View\Compilers</target>
        </trans-unit>
        <trans-unit id="f5066f522b00a9f6b984a4528eaa66c2a265a8cd" translate="yes" xml:space="preserve">
          <source>View\Concerns</source>
          <target state="translated">View\Concerns</target>
        </trans-unit>
        <trans-unit id="3ef9c7846ad7408ed1ca056b587f44ba52f217a0" translate="yes" xml:space="preserve">
          <source>View\Engines</source>
          <target state="translated">View\Engines</target>
        </trans-unit>
        <trans-unit id="6f410dbe82914b0c5bf0317bbb149c6280f12c32" translate="yes" xml:space="preserve">
          <source>View\Middleware</source>
          <target state="translated">View\Middleware</target>
        </trans-unit>
        <trans-unit id="24be61285e096fa817d4cdb0a0ed8294ea5bd2fb" translate="yes" xml:space="preserve">
          <source>Views</source>
          <target state="translated">Views</target>
        </trans-unit>
        <trans-unit id="c4ad283f6ad2ced43a72af53523fbb898b795783" translate="yes" xml:space="preserve">
          <source>Views contain the HTML served by your application and separate your controller / application logic from your presentation logic. Views are stored in the &lt;code&gt;resources/views&lt;/code&gt; directory. A simple view might look something like this:</source>
          <target state="translated">ビューには、アプリケーションによって提供されるHTMLが含まれ、コントローラー/アプリケーションロジックをプレゼンテーションロジックから分離します。ビューは、 &lt;code&gt;resources/views&lt;/code&gt; ディレクトリに保存されます。単純なビューは次のようになります。</target>
        </trans-unit>
        <trans-unit id="7c94ddf422987d16f0164145c01e88a54f263be3" translate="yes" xml:space="preserve">
          <source>Views may also be nested within subdirectories of the &lt;code&gt;resources/views&lt;/code&gt; directory. &quot;Dot&quot; notation may be used to reference nested views. For example, if your view is stored at &lt;code&gt;resources/views/admin/profile.blade.php&lt;/code&gt;, you may reference it like so:</source>
          <target state="translated">ビューは、 &lt;code&gt;resources/views&lt;/code&gt; ディレクトリのサブディレクトリ内にネストすることもできます。「ドット」表記は、ネストされたビューを参照するために使用できます。たとえば、ビューが &lt;code&gt;resources/views/admin/profile.blade.php&lt;/code&gt; に保存されている場合は、次のように参照できます。</target>
        </trans-unit>
        <trans-unit id="a0016aa1d302b4434ce107416ddbe852b5be6b50" translate="yes" xml:space="preserve">
          <source>Views rendered via &lt;code&gt;@each&lt;/code&gt; do not inherit the variables from the parent view. If the child view requires these variables, you should use &lt;code&gt;@foreach&lt;/code&gt; and &lt;code&gt;@include&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;@each&lt;/code&gt; を介してレンダリングされたビューは、親ビューから変数を継承しません。子ビューでこれらの変数が必要な場合は、代わりに &lt;code&gt;@foreach&lt;/code&gt; と &lt;code&gt;@include&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="cb837c2918c14957ebf249f5eb0de4adb9ee6f1c" translate="yes" xml:space="preserve">
          <source>VirtualBox</source>
          <target state="translated">VirtualBox</target>
        </trans-unit>
        <trans-unit id="09237dbacbb33a0831b186279d9a2723fdcb6836" translate="yes" xml:space="preserve">
          <source>Vue</source>
          <target state="translated">Vue</target>
        </trans-unit>
        <trans-unit id="9c98b2cfaa9d4765b9e2cfb3f936b31569dd6962" translate="yes" xml:space="preserve">
          <source>Vue (Foundation\Console)</source>
          <target state="translated">Vue (FoundationConsole)</target>
        </trans-unit>
        <trans-unit id="e6579d8fdec926cbc1031ee4bdaa166a7ab5940c" translate="yes" xml:space="preserve">
          <source>Vue::install()</source>
          <target state="translated">Vue::install()</target>
        </trans-unit>
        <trans-unit id="8649e69091a6d5c4eb2d2d03d7b4bb1f158d41ae" translate="yes" xml:space="preserve">
          <source>Vue::updateBootstrapping()</source>
          <target state="translated">Vue::updateBootstrapping()</target>
        </trans-unit>
        <trans-unit id="cbcd70a74512eeadab3512921cb7d817164457c4" translate="yes" xml:space="preserve">
          <source>Vue::updateComponent()</source>
          <target state="translated">Vue::updateComponent()</target>
        </trans-unit>
        <trans-unit id="2b2e1df8765b3d354d8b0924e1cc455ecd831db4" translate="yes" xml:space="preserve">
          <source>Vue::updatePackageArray()</source>
          <target state="translated">Vue::updatePackageArray()</target>
        </trans-unit>
        <trans-unit id="5a7ded80f30477b8e1df7a28ca05d7fae8123953" translate="yes" xml:space="preserve">
          <source>Vue::updateWebpackConfiguration()</source>
          <target state="translated">Vue::updateWebpackConfiguration()</target>
        </trans-unit>
        <trans-unit id="a86e95a3de6c6d679d6527aad5d93c5216555e6f" translate="yes" xml:space="preserve">
          <source>WEDNESDAY</source>
          <target state="translated">WEDNESDAY</target>
        </trans-unit>
        <trans-unit id="33d30632848d3fd0ed2340adbd7be3e3e8e61010" translate="yes" xml:space="preserve">
          <source>Waiting</source>
          <target state="translated">Waiting</target>
        </trans-unit>
        <trans-unit id="9dcf209dcba3241aed59f7200135e60eaf14fe05" translate="yes" xml:space="preserve">
          <source>Waiting For Elements</source>
          <target state="translated">エレメントを待つ</target>
        </trans-unit>
        <trans-unit id="ed6061f202f89fcf8a46854ddd6e953ac4d52bf4" translate="yes" xml:space="preserve">
          <source>Waiting For Links</source>
          <target state="translated">リンク待ち</target>
        </trans-unit>
        <trans-unit id="6c06973b4a2eae112161738c9e56fef2bf19a56f" translate="yes" xml:space="preserve">
          <source>Waiting For Selectors</source>
          <target state="translated">セレクターを待つ</target>
        </trans-unit>
        <trans-unit id="8915cfb76f2a79cd2bcef3566a351979bbf7b6f5" translate="yes" xml:space="preserve">
          <source>Waiting For Text</source>
          <target state="translated">テキストを待つ</target>
        </trans-unit>
        <trans-unit id="f3a93e906bd1e623a66b1a5edc4c444c1cb143fb" translate="yes" xml:space="preserve">
          <source>Waiting On JavaScript Expressions</source>
          <target state="translated">JavaScript の表現を待つ</target>
        </trans-unit>
        <trans-unit id="0ac24870fd2eb25329b6b68d56f0522cc9a7a394" translate="yes" xml:space="preserve">
          <source>Waiting On The Page Location</source>
          <target state="translated">ページの場所で待機中</target>
        </trans-unit>
        <trans-unit id="33002fb30e1011c3479252eaf5d8d9ae9eeae1ae" translate="yes" xml:space="preserve">
          <source>Waiting On Vue Expressions</source>
          <target state="translated">ヴューの表現を待っている</target>
        </trans-unit>
        <trans-unit id="66f079e10a7d7aec45467c653706f4284c46e572" translate="yes" xml:space="preserve">
          <source>Waiting With A Callback</source>
          <target state="translated">コールバックでの待ち時間</target>
        </trans-unit>
        <trans-unit id="f3ec1f68508f56c1e6d4c0a48a87e9c014546b05" translate="yes" xml:space="preserve">
          <source>Waiting for Page Reloads</source>
          <target state="translated">ページの再読み込み待ち</target>
        </trans-unit>
        <trans-unit id="995340db620c223b34855337a153200471060564" translate="yes" xml:space="preserve">
          <source>Want to create a Laravel project with login, registration, and more features already built for you? Check out &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;.</source>
          <target state="translated">ログイン、登録、その他の機能がすでに構築されているLaravelプロジェクトを作成したいですか？&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;LaravelJetstreamを&lt;/a&gt;チェックしてください。</target>
        </trans-unit>
        <trans-unit id="5560ea8a458f1e9c46b7acfb8d66ba581e4fa337" translate="yes" xml:space="preserve">
          <source>Want to get started fast? Install &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; in a fresh Laravel application. After migrating your database, navigate your browser to &lt;code&gt;/register&lt;/code&gt; or any other URL that is assigned to your application. Jetstream will take care of scaffolding your entire authentication system!</source>
          <target state="translated">早く始めたいですか？新しいLaravelアプリケーションに&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;LaravelJetstream&lt;/a&gt;をインストールします。データベースを移行した後、ブラウザを &lt;code&gt;/register&lt;/code&gt; またはアプリケーションに割り当てられている他のURLに移動します。Jetstreamは、認証システム全体のスキャフォールディングを処理します。</target>
        </trans-unit>
        <trans-unit id="94ba1b6436197f2871eed9afacebad288a2e7f89" translate="yes" xml:space="preserve">
          <source>Want to get started fast? Install &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; in a fresh Laravel application. After migrating your database, navigate your browser to &lt;code&gt;/register&lt;/code&gt; or any other URL that is assigned to your application. Jetstream will take care of scaffolding your entire authentication system, including email verification support!</source>
          <target state="translated">早く始めたいですか？新しいLaravelアプリケーションに&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;LaravelJetstream&lt;/a&gt;をインストールします。データベースを移行した後、ブラウザを &lt;code&gt;/register&lt;/code&gt; またはアプリケーションに割り当てられている他のURLに移動します。Jetstreamは、電子メール検証サポートを含む、認証システム全体の足場を処理します。</target>
        </trans-unit>
        <trans-unit id="6c94f606e7fac0dd6a8d9ff76ae21bbf5b7ec6c8" translate="yes" xml:space="preserve">
          <source>Want to get started fast? Install &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; in a fresh Laravel application. After migrating your database, navigate your browser to &lt;code&gt;/register&lt;/code&gt; or any other URL that is assigned to your application. Jetstream will take care of scaffolding your entire authentication system, including resetting passwords!</source>
          <target state="translated">早く始めたいですか？新しいLaravelアプリケーションに&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;LaravelJetstream&lt;/a&gt;をインストールします。データベースを移行した後、ブラウザを &lt;code&gt;/register&lt;/code&gt; またはアプリケーションに割り当てられている他のURLに移動します。 Jetstreamは、パスワードのリセットを含む、認証システム全体のスキャフォールディングを処理します。</target>
        </trans-unit>
        <trans-unit id="a8059e31694578c1b0344a76a345357dd60e8f01" translate="yes" xml:space="preserve">
          <source>Warning[]</source>
          <target state="translated">Warning[]</target>
        </trans-unit>
        <trans-unit id="2518c5bcf1dbf29e31772ad830ac92c36e2f45e7" translate="yes" xml:space="preserve">
          <source>Warning[]
    getWarnings()</source>
          <target state="translated">Warning[]getWarnings()</target>
        </trans-unit>
        <trans-unit id="31079e2838d6a488df71812a6406f9902113cf4a" translate="yes" xml:space="preserve">
          <source>Watching Assets For Changes</source>
          <target state="translated">変化のための資産を監視する</target>
        </trans-unit>
        <trans-unit id="10d45f8067cbf5c49bec145ca14df4b3e6457d76" translate="yes" xml:space="preserve">
          <source>We also encourage you to view the changes in the &lt;code&gt;laravel/laravel&lt;/code&gt;&lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHub repository&lt;/a&gt;. While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be. You can easily view the changes with the &lt;a href=&quot;https://github.com/laravel/laravel/compare/5.6...master&quot;&gt;GitHub comparison tool&lt;/a&gt; and choose which updates are important to you.</source>
          <target state="translated">&lt;code&gt;laravel/laravel&lt;/code&gt; &lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHubリポジトリで&lt;/a&gt;変更を確認することもお勧めします。これらの変更の多くは必須ではありませんが、これらのファイルをアプリケーションと同期させておきたい場合があります。これらの変更の一部は、このアップグレードガイドで説明されていますが、構成ファイルやコメントの変更など、他の変更は説明されていません。&lt;a href=&quot;https://github.com/laravel/laravel/compare/5.6...master&quot;&gt;GitHub比較ツールを使用&lt;/a&gt;して変更を簡単に表示し、重要な更新を選択できます。</target>
        </trans-unit>
        <trans-unit id="188331b21c24108bd714dd53a2d51ad4768df41c" translate="yes" xml:space="preserve">
          <source>We also encourage you to view the changes in the &lt;code&gt;laravel/laravel&lt;/code&gt;&lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;GitHub repository&lt;/a&gt;. While many of these changes are not required, you may wish to keep these files in sync with your application. Some of these changes will be covered in this upgrade guide, but others, such as changes to configuration files or comments, will not be. You can easily view the changes with the &lt;a href=&quot;https://github.com/laravel/laravel/compare/7.x...master&quot;&gt;GitHub comparison tool&lt;/a&gt; and choose which updates are important to you.</source>
          <target state="translated">また、 &lt;code&gt;laravel/laravel&lt;/code&gt; GitHub&lt;a href=&quot;https://github.com/laravel/laravel&quot;&gt;リポジトリで&lt;/a&gt;変更を確認することをお勧めします。これらの変更の多くは必須ではありませんが、これらのファイルをアプリケーションと同期させておきたい場合があります。これらの変更の一部はこのアップグレードガイドで説明されていますが、構成ファイルやコメントの変更など、その他の変更については説明されていません。&lt;a href=&quot;https://github.com/laravel/laravel/compare/7.x...master&quot;&gt;GitHub比較ツールを使用&lt;/a&gt;して変更を簡単に表示し、重要な更新を選択できます。</target>
        </trans-unit>
        <trans-unit id="7156481a1a1be6ca98c965d55920fe22b53ec5fb" translate="yes" xml:space="preserve">
          <source>We attempt to document every possible breaking change. Since some of these breaking changes are in obscure parts of the framework only a portion of these changes may actually affect your application.</source>
          <target state="translated">私たちは可能な限りの変更点を文書化しようとしています。これらの変更のいくつかはフレームワークの不明瞭な部分にあるので、これらの変更の一部だけが実際にあなたのアプリケーションに影響を与える可能性があります。</target>
        </trans-unit>
        <trans-unit id="ef98fd09547c6700ab606df12b038c51fc1c802b" translate="yes" xml:space="preserve">
          <source>We can mock the call to the &lt;code&gt;Cache&lt;/code&gt; facade by using the &lt;code&gt;shouldReceive&lt;/code&gt; method, which will return an instance of a &lt;a href=&quot;https://github.com/padraic/mockery&quot;&gt;Mockery&lt;/a&gt; mock. Since facades are actually resolved and managed by the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, they have much more testability than a typical static class. For example, let's mock our call to the &lt;code&gt;Cache&lt;/code&gt; facade's &lt;code&gt;get&lt;/code&gt; method:</source>
          <target state="translated">私たちはへの呼び出しモックできる &lt;code&gt;Cache&lt;/code&gt; 使用によりファサードを &lt;code&gt;shouldReceive&lt;/code&gt; のインスタンスを返します方法、&lt;a href=&quot;https://github.com/padraic/mockery&quot;&gt;嘲笑の&lt;/a&gt;モックを。ファサードは実際にはLaravel &lt;a href=&quot;container&quot;&gt;サービスコンテナ&lt;/a&gt;によって解決および管理されるため、一般的な静的クラスよりもはるかにテストしやすくなっています。たとえば、 &lt;code&gt;Cache&lt;/code&gt; ファサードの &lt;code&gt;get&lt;/code&gt; メソッドへの呼び出しをモック化してみましょう。</target>
        </trans-unit>
        <trans-unit id="bedef6004beb50d50d9aff32fc5f57658ab3cb12" translate="yes" xml:space="preserve">
          <source>We can write the following test to verify that the &lt;code&gt;Cache::get&lt;/code&gt; method was called with the argument we expected:</source>
          <target state="translated">次のテストを記述して、予想した引数で &lt;code&gt;Cache::get&lt;/code&gt; メソッドが呼び出されたことを確認できます。</target>
        </trans-unit>
        <trans-unit id="7bdcc0d5946ce4f8ac5185ba8c4fc842448e9f58" translate="yes" xml:space="preserve">
          <source>We could also modify a column to be nullable:</source>
          <target state="translated">また、カラムをヌル可能に変更することもできます。</target>
        </trans-unit>
        <trans-unit id="eac69c1fb918fc92ab1fd0cd3256e8335a8c9d26" translate="yes" xml:space="preserve">
          <source>We just need to implement each of these methods using a MongoDB connection. For an example of how to implement each of these methods, take a look at the &lt;code&gt;Illuminate\Cache\MemcachedStore&lt;/code&gt; in the framework source code. Once our implementation is complete, we can finish our custom driver registration.</source>
          <target state="translated">MongoDB接続を使用してこれらの各メソッドを実装する必要があるだけです。これらの各メソッドを実装する方法の例については、フレームワークのソースコードの &lt;code&gt;Illuminate\Cache\MemcachedStore&lt;/code&gt; ください。実装が完了したら、カスタムドライバーの登録を完了できます。</target>
        </trans-unit>
        <trans-unit id="e0e8cdaa63c430e37eb846ab6630af2dade84df5" translate="yes" xml:space="preserve">
          <source>We may pass content to the &lt;code&gt;slot&lt;/code&gt; by injecting content into the component:</source>
          <target state="translated">コンポーネントにコンテンツを挿入することで、コンテンツを &lt;code&gt;slot&lt;/code&gt; 渡すことができます。</target>
        </trans-unit>
        <trans-unit id="a472d31daf95235421ff5f44ec9bfde21808fb22" translate="yes" xml:space="preserve">
          <source>We will access Laravel's authentication services via the &lt;code&gt;Auth&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, so we'll need to make sure to import the &lt;code&gt;Auth&lt;/code&gt; facade at the top of the class. Next, let's check out the &lt;code&gt;attempt&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;Auth&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサード&lt;/a&gt;を介してLaravelの認証サービスにアクセスするため、クラスの最上部にある &lt;code&gt;Auth&lt;/code&gt; ファサードをインポートする必要があります。次に、 &lt;code&gt;attempt&lt;/code&gt; メソッドを確認してみましょう。</target>
        </trans-unit>
        <trans-unit id="1d719f706c1e82d33414649974d7dfe68600e2c6" translate="yes" xml:space="preserve">
          <source>We've already examined how to pass data attributes to a component; however, sometimes you may need to specify additional HTML attributes, such as &lt;code&gt;class&lt;/code&gt;, that are not part of the data required for a component to function. Typically, you want to pass these additional attributes down to the root element of the component template. For example, imagine we want to render an &lt;code&gt;alert&lt;/code&gt; component like so:</source>
          <target state="translated">データ属性をコンポーネントに渡す方法については、すでに説明しました。ただし、コンポーネントが機能するために必要なデータの一部ではない、 &lt;code&gt;class&lt;/code&gt; などの追加のHTML属性を指定する必要がある場合があります。通常、これらの追加の属性をコンポーネントテンプレートのルート要素に渡します。たとえば、次のような &lt;code&gt;alert&lt;/code&gt; コンポーネントをレンダリングするとします。</target>
        </trans-unit>
        <trans-unit id="26037b5b0bfa3f49c1a4763e25ee1bee011d319d" translate="yes" xml:space="preserve">
          <source>Web Server Configuration</source>
          <target state="translated">ウェブサーバの設定</target>
        </trans-unit>
        <trans-unit id="e21fe93b150dc90da16caac8eecd7697af124c0b" translate="yes" xml:space="preserve">
          <source>Web Servers</source>
          <target state="translated">ウェブサーバー</target>
        </trans-unit>
        <trans-unit id="08893e6585bd4f8739b3fe8d6a5a6848a7267e29" translate="yes" xml:space="preserve">
          <source>Webdriver &amp;amp; Laravel Dusk Utilities</source>
          <target state="translated">Webdriver＆LaravelDuskユーティリティ</target>
        </trans-unit>
        <trans-unit id="aded54ec3ed315a888256b00507f341b77a42b8e" translate="yes" xml:space="preserve">
          <source>Webhooks &amp;amp; CSRF Protection</source>
          <target state="translated">WebhookとCSRF保護</target>
        </trans-unit>
        <trans-unit id="2c3f5842543c3f35e7df5231d55cc2b67a7d32bc" translate="yes" xml:space="preserve">
          <source>Webpack offers a variety of &lt;a href=&quot;https://webpack.js.org/configuration/devtool/#devtool&quot;&gt;source mapping styles&lt;/a&gt;. By default, Mix's source mapping style is set to &lt;code&gt;eval-source-map&lt;/code&gt;, which provides a fast rebuild time. If you want to change the mapping style, you may do so using the &lt;code&gt;sourceMaps&lt;/code&gt; method:</source>
          <target state="translated">Webpackは、さまざまな&lt;a href=&quot;https://webpack.js.org/configuration/devtool/#devtool&quot;&gt;ソースマッピングスタイル&lt;/a&gt;を提供します。デフォルトでは、Mixのソースマッピングスタイルは &lt;code&gt;eval-source-map&lt;/code&gt; に設定されており、これにより再構築時間が短縮されます。マッピングスタイルを変更する場合は、 &lt;code&gt;sourceMaps&lt;/code&gt; メソッドを使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="de833b27867cf0dabdf48eedb5c8d371dafab45b" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier includes a Webhook controller that can easily cancel the customer's subscription for you. As noted above, all you need to do is point a route to the controller:</source>
          <target state="translated">顧客のクレジットカードの有効期限が切れたら?心配ありません-キャッシャーには、顧客の購読を簡単にキャンセルできるWebhookコントローラが含まれています。上述したように、必要なのはコントローラへのルートを指定することだけです。</target>
        </trans-unit>
        <trans-unit id="87919cd5573ff73c0b5eeb8d810478cacaea886b" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier includes a Webhook controller that can easily cancel the customer's subscription for you. Just point a route to the controller:</source>
          <target state="translated">顧客のクレジットカードの有効期限が切れたら?心配ありません-キャッシャーには、顧客の購読を簡単にキャンセルできるWebhookコントローラが含まれています。コントローラーへのルートを指定するだけです。</target>
        </trans-unit>
        <trans-unit id="7428637e3488d0eccd1517040f158683c29113b3" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier's Webhook controller will cancel the customer's subscription for you. Failed payments will automatically be captured and handled by the controller. The controller will cancel the customer's subscription when Paddle determines the subscription has failed (normally after three failed payment attempts).</source>
          <target state="translated">顧客のクレジットカードの有効期限が切れたら?心配ありません-キャッシャーのWebhookコントローラーがお客様のサブスクリプションをキャンセルします。失敗した支払いは、自動的にコントローラによって捕捉され、処理されます。Paddleがサブスクリプションが失敗したと判断した場合(通常は3回の支払い失敗の後)、コントローラは顧客のサブスクリプションをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="6ba21b4776f95280cd7a6a81340dd1a564900e5e" translate="yes" xml:space="preserve">
          <source>What if a customer's credit card expires? No worries - Cashier's Webhook controller will cancel the customer's subscription for you. Failed payments will automatically be captured and handled by the controller. The controller will cancel the customer's subscription when Stripe determines the subscription has failed (normally after three failed payment attempts).</source>
          <target state="translated">顧客のクレジットカードの有効期限が切れたら?心配ありません-キャッシャーのWebhookコントローラーがお客様のサブスクリプションをキャンセルします。失敗した支払いは自動的にコントローラに取り込まれ、処理されます。Stripeがサブスクリプションに失敗したと判断した場合(通常は3回の支払い失敗後)、コントローラは顧客のサブスクリプションをキャンセルします。</target>
        </trans-unit>
        <trans-unit id="9a66d4a0910eaef54ed1f2355f51b009b4f380d6" translate="yes" xml:space="preserve">
          <source>When Issuing Personal Access Tokens</source>
          <target state="translated">パーソナルアクセストークンを発行する場合</target>
        </trans-unit>
        <trans-unit id="892983fe50cf425a97431f2e54dc9df64982ec00" translate="yes" xml:space="preserve">
          <source>When Requesting Authorization Codes</source>
          <target state="translated">認証コードを要求する場合</target>
        </trans-unit>
        <trans-unit id="14d90ed812d7b5f98aac8f60b0355bb851e3ff13" translate="yes" xml:space="preserve">
          <source>When To Use Contracts</source>
          <target state="translated">契約書を利用する場合</target>
        </trans-unit>
        <trans-unit id="2426ce7e94e748b33b9c4a6addc3c07e09f43ed2" translate="yes" xml:space="preserve">
          <source>When To Use Facades</source>
          <target state="translated">ファサードを使用する場合</target>
        </trans-unit>
        <trans-unit id="5fcecf31209da042c789df78979d8c91ae942cdf" translate="yes" xml:space="preserve">
          <source>When a batch job fails, the &lt;code&gt;catch&lt;/code&gt; callback (if assigned) will be invoked. This callback is only invoked for the job that fails within the batch.</source>
          <target state="translated">バッチジョブが失敗すると、 &lt;code&gt;catch&lt;/code&gt; コールバック（割り当てられている場合）が呼び出されます。このコールバックは、バッチ内で失敗したジョブに対してのみ呼び出されます。</target>
        </trans-unit>
        <trans-unit id="9ee6e36d9ea3a168ea2a90f52b68861939ab5a5f" translate="yes" xml:space="preserve">
          <source>When a client is created, it will be issued a client ID and client secret. These values will be used when requesting access tokens from your application. The client creation route will return the new client instance:</source>
          <target state="translated">クライアントが作成されると、クライアントIDとクライアントシークレットが発行されます。これらの値は、アプリケーションからアクセストークンを要求する際に使用されます。クライアント作成ルートは新しいクライアントインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="79664f80c60a7601888248326f1a8fc76cf3fa74" translate="yes" xml:space="preserve">
          <source>When a column is considered a date, you may set its value to a UNIX timestamp, date string (&lt;code&gt;Y-m-d&lt;/code&gt;), date-time string, and of course a &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; instance, and the date's value will automatically be correctly stored in your database:</source>
          <target state="translated">列が日付と見なされる場合、その値をUNIXタイムスタンプ、日付文字列（ &lt;code&gt;Y-m-d&lt;/code&gt; ）、日付時刻文字列、およびもちろん &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; インスタンスに設定することができ、日付の値は自動的にデータベースに正しく保存されます：</target>
        </trans-unit>
        <trans-unit id="38409375bc40cf2cf018c471fb7393ef58c466aa" translate="yes" xml:space="preserve">
          <source>When a column is considered a date, you may set its value to a UNIX timestamp, date string (&lt;code&gt;Y-m-d&lt;/code&gt;), date-time string, or a &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; instance. The date's value will be correctly converted and stored in your database:</source>
          <target state="translated">列が日付と見なされる場合、その値をUNIXタイムスタンプ、日付文字列（ &lt;code&gt;Y-m-d&lt;/code&gt; ）、日時文字列、または &lt;code&gt;DateTime&lt;/code&gt; / &lt;code&gt;Carbon&lt;/code&gt; インスタンスに設定できます。日付の値は正しく変換され、データベースに保存されます。</target>
        </trans-unit>
        <trans-unit id="b74cc881b7ad29ba66430297949ddfc45d719b6f" translate="yes" xml:space="preserve">
          <source>When a job within a batch fails, Laravel will automatically mark the batch as &quot;cancelled&quot;. If you wish, you may disable this behavior so that a job failure does not automatically mark the batch as cancelled. This may be accomplished by calling the &lt;code&gt;allowFailures&lt;/code&gt; method while dispatching the batch:</source>
          <target state="translated">バッチ内のジョブが失敗すると、Laravelは自動的にバッチを「キャンセル済み」としてマークします。必要に応じて、この動作を無効にして、ジョブの失敗によってバッチがキャンセル済みとして自動的にマークされないようにすることができます。これは、バッチのディスパッチ中に &lt;code&gt;allowFailures&lt;/code&gt; メソッドを呼び出すことで実現できます。</target>
        </trans-unit>
        <trans-unit id="125590675e6bd15a02a86c5eb8b4805c385c6c14" translate="yes" xml:space="preserve">
          <source>When a model &lt;code&gt;belongsTo&lt;/code&gt; or &lt;code&gt;belongsToMany&lt;/code&gt; another model, such as a &lt;code&gt;Comment&lt;/code&gt; which belongs to a &lt;code&gt;Post&lt;/code&gt;, it is sometimes helpful to update the parent's timestamp when the child model is updated. For example, when a &lt;code&gt;Comment&lt;/code&gt; model is updated, you may want to automatically &quot;touch&quot; the &lt;code&gt;updated_at&lt;/code&gt; timestamp of the owning &lt;code&gt;Post&lt;/code&gt;. Eloquent makes it easy. Just add a &lt;code&gt;touches&lt;/code&gt; property containing the names of the relationships to the child model:</source>
          <target state="translated">モデルとき &lt;code&gt;belongsTo&lt;/code&gt; のか &lt;code&gt;belongsToMany&lt;/code&gt; のような別のモデル、 &lt;code&gt;Comment&lt;/code&gt; に属している &lt;code&gt;Post&lt;/code&gt; 、子モデルが更新されたときに、親のタイムスタンプを更新するために、時には便利です。たとえば、 &lt;code&gt;Comment&lt;/code&gt; モデルが更新されたときに、所有する &lt;code&gt;Post&lt;/code&gt; の &lt;code&gt;updated_at&lt;/code&gt; タイムスタンプを自動的に「変更」したい場合があります。雄弁はそれを簡単にします。関係の名前を含む &lt;code&gt;touches&lt;/code&gt; プロパティを子モデルに追加するだけです。</target>
        </trans-unit>
        <trans-unit id="bfa7b3468c37ed0ba4e4753a360920a868dd4045" translate="yes" xml:space="preserve">
          <source>When a model is being unserialized, check if it needs to be booted.</source>
          <target state="translated">モデルがアンセリアル化されている場合、それを起動する必要があるかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="28308971c138caf83500a5fefb8ef266d7b98000" translate="yes" xml:space="preserve">
          <source>When a notification is sent, the &lt;code&gt;Illuminate\Notifications\Events\NotificationSent&lt;/code&gt; event is fired by the notification system. This contains the &quot;notifiable&quot; entity and the notification instance itself. You may register listeners for this event in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">通知が送信されると、通知システムによって &lt;code&gt;Illuminate\Notifications\Events\NotificationSent&lt;/code&gt; イベントが発生します。これには、「通知可能な」エンティティと通知インスタンス自体が含まれます。このイベントのリスナーを &lt;code&gt;EventServiceProvider&lt;/code&gt; に登録できます。</target>
        </trans-unit>
        <trans-unit id="38397c32243598bc3d6649cbdc7987be437fa21c" translate="yes" xml:space="preserve">
          <source>When a payment needs additional confirmation, the subscription will remain in an &lt;code&gt;incomplete&lt;/code&gt; or &lt;code&gt;past_due&lt;/code&gt; state as indicated by its &lt;code&gt;stripe_status&lt;/code&gt; database column. Cashier will automatically activate the customer's subscription via a webhook as soon as payment confirmation is complete.</source>
          <target state="translated">お支払いは、追加の確認が必要な場合は、サブスクリプションは、に残る &lt;code&gt;incomplete&lt;/code&gt; または &lt;code&gt;past_due&lt;/code&gt; そのによって示されるような状態 &lt;code&gt;stripe_status&lt;/code&gt; のデータベース列。キャッシャーは、支払いの確認が完了するとすぐに、Webhookを介して顧客のサブスクリプションを自動的にアクティブ化します。</target>
        </trans-unit>
        <trans-unit id="b1805c87f7bdbb2805f83a454c29953e2114c423" translate="yes" xml:space="preserve">
          <source>When a remote service needs to authenticate to access an API, cookies are not typically used because there is no web browser. Instead, the remote service sends an API token to the API on each request. The application may validate the incoming token against a table of valid API tokens and &quot;authenticate&quot; the request as being performed by the user associated with that API token.</source>
          <target state="translated">リモートサービスが API にアクセスするために認証が必要な場合、Web ブラウザがないため、クッキーは通常使用されません。その代わり、リモートサービスはリクエストごとに API トークンを API に送信します。アプリケーションは、有効なAPIトークンのテーブルに対して受信トークンを検証し、そのAPIトークンに関連付けられたユーザーによって実行されたリクエストを「認証」することができます。</target>
        </trans-unit>
        <trans-unit id="620ac5e7d1e3b6cc566be2f5b51ac5041d2234d8" translate="yes" xml:space="preserve">
          <source>When a soft deleted model is permanently deleted using &lt;code&gt;forceDelete&lt;/code&gt;, Scout will remove it from the search index automatically.</source>
          <target state="translated">&lt;code&gt;forceDelete&lt;/code&gt; 的に削除されたモデルがforceDeleteを使用して完全に削除されると、Scoutはそのモデルを検索インデックスから自動的に削除します。</target>
        </trans-unit>
        <trans-unit id="41b64d2b7c503175ee376c52d910344d28230a0b" translate="yes" xml:space="preserve">
          <source>When a subscription has an incomplete payment, you should direct the user to Cashier's payment confirmation page, passing the &lt;code&gt;latestPayment&lt;/code&gt; identifier. You may use the &lt;code&gt;latestPayment&lt;/code&gt; method available on subscription instance to retrieve this identifier:</source>
          <target state="translated">サブスクリプションの支払いが不完全な場合は、 &lt;code&gt;latestPayment&lt;/code&gt; の支払いIDを渡して、ユーザーをキャッシャーの支払い確認ページに誘導する必要があります。サブスクリプションインスタンスで使用可能な &lt;code&gt;latestPayment&lt;/code&gt; メソッドを使用して、この識別子を取得できます。</target>
        </trans-unit>
        <trans-unit id="ac1174138ecc9999919ae0f8c84cfc8a18b6d75f" translate="yes" xml:space="preserve">
          <source>When a subscription has multiple plans, it will have multiple subscription &quot;items&quot; stored in your database's &lt;code&gt;subscription_items&lt;/code&gt; table. You may access these via the &lt;code&gt;items&lt;/code&gt; relationship on the subscription:</source>
          <target state="translated">サブスクリプションに複数のプランがある場合、データベースの &lt;code&gt;subscription_items&lt;/code&gt; テーブルに複数のサブスクリプション「アイテム」が保存されます。サブスクリプションの &lt;code&gt;items&lt;/code&gt; 関係を介してこれらにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="5bed68a026f2be6ba6a1ba11b81caac39b109879" translate="yes" xml:space="preserve">
          <source>When a subscription is cancelled, Cashier will automatically set the &lt;code&gt;ends_at&lt;/code&gt; column in your database. This column is used to know when the &lt;code&gt;subscribed&lt;/code&gt; method should begin returning &lt;code&gt;false&lt;/code&gt;. For example, if a customer cancels a subscription on March 1st, but the subscription was not scheduled to end until March 5th, the &lt;code&gt;subscribed&lt;/code&gt; method will continue to return &lt;code&gt;true&lt;/code&gt; until March 5th.</source>
          <target state="translated">サブスクリプションがキャンセルされると、Cashierはデータベースに自動的に &lt;code&gt;ends_at&lt;/code&gt; 列を設定します。この列は、 &lt;code&gt;subscribed&lt;/code&gt; メソッドがいつ &lt;code&gt;false&lt;/code&gt; を返し始めるかを知るために使用されます。たとえば、顧客が3月1日にサブスクリプションをキャンセルしたが、サブスクリプションが3月5日まで終了するようにスケジュールされていなかった場合、 &lt;code&gt;subscribed&lt;/code&gt; メソッドは3月5日まで &lt;code&gt;true&lt;/code&gt; を返し続けます。</target>
        </trans-unit>
        <trans-unit id="829d53700c3d9a7a9970d2ced4f9499c9f73abda" translate="yes" xml:space="preserve">
          <source>When a subscription is in a &lt;code&gt;past_due&lt;/code&gt; state it cannot be changed until payment information has been updated. Therefore, the &lt;code&gt;swap&lt;/code&gt; and &lt;code&gt;updateQuantity&lt;/code&gt; methods will throw an exception when the subscription is in a &lt;code&gt;past_due&lt;/code&gt; state.</source>
          <target state="translated">サブスクリプションが &lt;code&gt;past_due&lt;/code&gt; 状態の場合、支払い情報が更新されるまで変更できません。したがって、サブスクリプションが &lt;code&gt;past_due&lt;/code&gt; 状態の場合、 &lt;code&gt;swap&lt;/code&gt; メソッドと &lt;code&gt;updateQuantity&lt;/code&gt; メソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="e90473ecb434fd03572601e96ec88d6c2f75b216" translate="yes" xml:space="preserve">
          <source>When a subscription is in an &lt;code&gt;incomplete&lt;/code&gt; state it cannot be changed until the payment is confirmed. Therefore, the &lt;code&gt;swap&lt;/code&gt; and &lt;code&gt;updateQuantity&lt;/code&gt; methods will throw an exception when the subscription is in an &lt;code&gt;incomplete&lt;/code&gt; state.</source>
          <target state="translated">サブスクリプションが &lt;code&gt;incomplete&lt;/code&gt; 状態の場合、支払いが確認されるまで変更できません。したがって、サブスクリプションが &lt;code&gt;incomplete&lt;/code&gt; 状態の場合、 &lt;code&gt;swap&lt;/code&gt; メソッドと &lt;code&gt;updateQuantity&lt;/code&gt; メソッドは例外をスローします。</target>
        </trans-unit>
        <trans-unit id="ec208e717edbb6899fa3abe4664a9bac177caf55" translate="yes" xml:space="preserve">
          <source>When a subscription is past due, you should instruct the user to &lt;a href=&quot;#updating-payment-information&quot;&gt;update their payment information&lt;/a&gt;. You may configure how past due subscriptions are handled in your &lt;a href=&quot;https://vendors.paddle.com/subscription-settings&quot;&gt;Paddle subscription settings&lt;/a&gt;.</source>
          <target state="translated">サブスクリプションの期限が過ぎている場合は&lt;a href=&quot;#updating-payment-information&quot;&gt;、支払い情報&lt;/a&gt;を更新するようにユーザーに指示する必要があります。&lt;a href=&quot;https://vendors.paddle.com/subscription-settings&quot;&gt;Paddleサブスクリプション設定&lt;/a&gt;で、期限を過ぎたサブスクリプションの処理方法を構成できます。</target>
        </trans-unit>
        <trans-unit id="5ac4faf211138e88fb57d75fa30602c561011117" translate="yes" xml:space="preserve">
          <source>When a subscription is paused, Cashier will automatically set the &lt;code&gt;paused_from&lt;/code&gt; column in your database. This column is used to know when the &lt;code&gt;paused&lt;/code&gt; method should begin returning &lt;code&gt;true&lt;/code&gt;. For example, if a customer pauses a subscription on March 1st, but the subscription was not scheduled to recur until March 5th, the &lt;code&gt;paused&lt;/code&gt; method will continue to return &lt;code&gt;false&lt;/code&gt; until March 5th.</source>
          <target state="translated">サブスクリプションが一時停止されると、キャッシャーはデータベースの &lt;code&gt;paused_from&lt;/code&gt; 列を自動的に設定します。この列は、 &lt;code&gt;paused&lt;/code&gt; メソッドが &lt;code&gt;true&lt;/code&gt; を返し始めるタイミングを知るために使用されます。たとえば、顧客が3月1日にサブスクリプションを一時停止したが、サブスクリプションが3月5日まで繰り返されるようにスケジュールされていなかった場合、 &lt;code&gt;paused&lt;/code&gt; メソッドは3月5日まで &lt;code&gt;false&lt;/code&gt; を返し続けます。</target>
        </trans-unit>
        <trans-unit id="0ae5724a796109eb543fbe47159eca8929375bc3" translate="yes" xml:space="preserve">
          <source>When a test fails, Dusk will automatically resize the browser to fit the content prior to taking a screenshot. You may disable this feature by calling the &lt;code&gt;disableFitOnFailure&lt;/code&gt; method within your test:</source>
          <target state="translated">テストが失敗すると、Duskはスクリーンショットを撮る前に、コンテンツに合わせてブラウザのサイズを自動的に変更します。テスト内で &lt;code&gt;disableFitOnFailure&lt;/code&gt; メソッドを呼び出すことにより、この機能を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="44a5e34bab8939d35b562af47d0351b53d839269" translate="yes" xml:space="preserve">
          <source>When a user has finished updating their information, a &lt;code&gt;subscription_updated&lt;/code&gt; webhook will be dispatched by Paddle and the subscription details will be updated in your application's database.</source>
          <target state="translated">ユーザーが情報の更新を完了すると、 &lt;code&gt;subscription_updated&lt;/code&gt; WebhookがPaddleによってディスパッチされ、サブスクリプションの詳細がアプリケーションのデータベースで更新されます。</target>
        </trans-unit>
        <trans-unit id="5c425cb0adacc52cf2cf300360d7e8e80a1cd201" translate="yes" xml:space="preserve">
          <source>When a user is successfully authenticated, they will be redirected to the &lt;code&gt;/home&lt;/code&gt; URI. You can customize the post-authentication redirect location by defining a &lt;code&gt;redirectTo&lt;/code&gt; property on the &lt;code&gt;LoginController&lt;/code&gt;, &lt;code&gt;RegisterController&lt;/code&gt;, &lt;code&gt;ResetPasswordController&lt;/code&gt;, and &lt;code&gt;VerificationController&lt;/code&gt;:</source>
          <target state="translated">ユーザーが正常に認証されると、ユーザーは &lt;code&gt;/home&lt;/code&gt; URIにリダイレクトされます。 &lt;code&gt;LoginController&lt;/code&gt; 、 &lt;code&gt;RegisterController&lt;/code&gt; 、 &lt;code&gt;ResetPasswordController&lt;/code&gt; 、および &lt;code&gt;VerificationController&lt;/code&gt; で &lt;code&gt;redirectTo&lt;/code&gt; プロパティを定義することにより、認証後のリダイレクト場所をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="9aac150840300add0edd70cb094dc507d556d551" translate="yes" xml:space="preserve">
          <source>When a user is successfully authenticated, they will typically be redirected to the &lt;code&gt;/home&lt;/code&gt; URI. You can customize the post-authentication redirect path using the &lt;code&gt;HOME&lt;/code&gt; constant defined in your &lt;code&gt;RouteServiceProvider&lt;/code&gt;:</source>
          <target state="translated">ユーザーが正常に認証されると、通常は &lt;code&gt;/home&lt;/code&gt; homeURIにリダイレクトされます。 &lt;code&gt;RouteServiceProvider&lt;/code&gt; で定義された &lt;code&gt;HOME&lt;/code&gt; 定数を使用して、認証後のリダイレクトパスをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="f1ca86eee0721c970f4f0f707759a4e87ba67aab" translate="yes" xml:space="preserve">
          <source>When a user is viewing one of their orders, we don't want them to have to refresh the page to view status updates. Instead, we want to broadcast the updates to the application as they are created. So, we need to mark the &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; event with the &lt;code&gt;ShouldBroadcast&lt;/code&gt; interface. This will instruct Laravel to broadcast the event when it is fired:</source>
          <target state="translated">ユーザーが注文の1つを表示しているときに、ステータスの更新を表示するためにページを更新する必要はありません。代わりに、更新が作成されたときにアプリケーションにブロードキャストする必要があります。したがって、 &lt;code&gt;ShouldBroadcast&lt;/code&gt; インターフェイスで &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; イベントをマークする必要があります。これにより、イベントが発生したときにイベントをブロードキャストするようにLaravelに指示します。</target>
        </trans-unit>
        <trans-unit id="11599e295b83f1af295523f73811bb41e23c9a15" translate="yes" xml:space="preserve">
          <source>When accessing Eloquent relationships as properties, the relationship data is &quot;lazy loaded&quot;. This means the relationship data is not actually loaded until you first access the property. However, Eloquent can &quot;eager load&quot; relationships at the time you query the parent model. Eager loading alleviates the N + 1 query problem. To illustrate the N + 1 query problem, consider a &lt;code&gt;Book&lt;/code&gt; model that is related to &lt;code&gt;Author&lt;/code&gt;:</source>
          <target state="translated">Eloquent関係にプロパティとしてアクセスすると、関係データは「遅延ロード」されます。つまり、最初にプロパティにアクセスするまで、関係データは実際にはロードされません。ただし、Eloquentは、親モデルにクエリを実行するときに関係を「積極的にロード」できます。熱心な読み込みにより、N + 1クエリの問題が緩和されます。 N + 1クエリの問題を説明するために、 &lt;code&gt;Author&lt;/code&gt; に関連する &lt;code&gt;Book&lt;/code&gt; モデルを考えます。</target>
        </trans-unit>
        <trans-unit id="b323ee3069c4b6808ea86369838a7ae662f6bb46" translate="yes" xml:space="preserve">
          <source>When accessing the records for a model, you may wish to limit your results based on the absence of a relationship. For example, imagine you want to retrieve all blog posts that &lt;strong&gt;don't&lt;/strong&gt; have any comments. To do so, you may pass the name of the relationship to the &lt;code&gt;doesntHave&lt;/code&gt; and &lt;code&gt;orDoesntHave&lt;/code&gt; methods:</source>
          <target state="translated">モデルのレコードにアクセスするとき、関係がないことに基づいて結果を制限したい場合があります。たとえば、コメント&lt;strong&gt;がない&lt;/strong&gt;ブログ投稿をすべて取得したいとします。そのためには、に関係の名前を渡すことが &lt;code&gt;doesntHave&lt;/code&gt; と &lt;code&gt;orDoesntHave&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="7c053f435d68621cde60c6767a2dccee97f31915" translate="yes" xml:space="preserve">
          <source>When accessing the records for a model, you may wish to limit your results based on the existence of a relationship. For example, imagine you want to retrieve all blog posts that have at least one comment. To do so, you may pass the name of the relationship to the &lt;code&gt;has&lt;/code&gt; and &lt;code&gt;orHas&lt;/code&gt; methods:</source>
          <target state="translated">モデルのレコードにアクセスするとき、関係の存在に基づいて結果を制限したい場合があります。たとえば、少なくとも1つのコメントを持つすべてのブログ投稿を取得するとします。そのためには、関係の名前を &lt;code&gt;has&lt;/code&gt; および &lt;code&gt;orHas&lt;/code&gt; メソッドに渡します。</target>
        </trans-unit>
        <trans-unit id="c97c0ea18ee09f224057523fdf1b4729c3f6635c" translate="yes" xml:space="preserve">
          <source>When accessing this hidden route, you will then be redirected to the &lt;code&gt;/&lt;/code&gt; route of the application. Once the cookie has been issued to your browser, you will be able to browse the application normally as if it was not in maintenance mode.</source>
          <target state="translated">この隠しルートにアクセスすると、アプリケーションの &lt;code&gt;/&lt;/code&gt; ルートにリダイレクトされます。Cookieがブラウザに発行されると、メンテナンスモードではないかのようにアプリケーションを通常どおり閲覧できるようになります。</target>
        </trans-unit>
        <trans-unit id="ed5edd420fb1b9abde903c3b3241bd9d695e535f" translate="yes" xml:space="preserve">
          <source>When adding a &quot;morph map&quot; to your existing application, every morphable &lt;code&gt;*_type&lt;/code&gt; column value in your database that still contains a fully-qualified class will need to be converted to its &quot;map&quot; name.</source>
          <target state="translated">既存のアプリケーションに「モーフマップ」を追加する場合、完全修飾クラスをまだ含むデータベース内のすべてのモーフィング可能な &lt;code&gt;*_type&lt;/code&gt; 列値は、その「マップ」名に変換する必要があります。</target>
        </trans-unit>
        <trans-unit id="a8fbe56b17580829f6ed4e37be9ced4b0fd9c8fd" translate="yes" xml:space="preserve">
          <source>When all of Laravel's services are neatly defined within simple interfaces, it is very easy to determine the functionality offered by a given service. &lt;strong&gt;The contracts serve as succinct documentation to the framework's features.&lt;/strong&gt;</source>
          <target state="translated">Laravelのすべてのサービスが単純なインターフェース内で適切に定義されている場合、特定のサービスが提供する機能を簡単に判別できます。&lt;strong&gt;コントラクトは、フレームワークの機能に関する簡潔なドキュメントとして機能します。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5235b27a68a522bbaa59b773fd1854fcd5b8b8e6" translate="yes" xml:space="preserve">
          <source>When all of the responses in a response sequence have been consumed, any further requests will cause the response sequence to throw an exception. If you would like to specify a default response that should be returned when a sequence is empty, you may use the &lt;code&gt;whenEmpty&lt;/code&gt; method:</source>
          <target state="translated">応答シーケンス内のすべての応答が消費されると、それ以上の要求により、応答シーケンスは例外をスローします。シーケンスが空のときに返されるデフォルトの応答を指定する場合は、 &lt;code&gt;whenEmpty&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="e3d352571b21e5443c5cc66f8deca03023cd91ba" translate="yes" xml:space="preserve">
          <source>When an Eloquent model is converted to JSON, its loaded relationships will automatically be included as attributes on the JSON object. Also, though Eloquent relationship methods are defined using &quot;camel case&quot;, a relationship's JSON attribute will be &quot;snake case&quot;.</source>
          <target state="translated">EloquentモデルがJSONに変換されると、ロードされたリレーションシップは自動的にJSONオブジェクトの属性として含まれます。また、Eloquentのリレーションシップメソッドは &quot;ラクダの場合 &quot;で定義されていますが、リレーションシップのJSON属性は &quot;スネークの場合 &quot;になります。</target>
        </trans-unit>
        <trans-unit id="667565a9e6b7c0a2cf584ee328747e96c0baa854" translate="yes" xml:space="preserve">
          <source>When an Eloquent model is converted to an array or JSON using the &lt;code&gt;toArray&lt;/code&gt; method, your custom cast value objects will typically be serialized as well as long as they implement the &lt;code&gt;Illuminate\Contracts\Support\Arrayable&lt;/code&gt; and &lt;code&gt;JsonSerializable&lt;/code&gt; interfaces. However, when using value objects provided by third-party libraries, you may not have the ability to add these interfaces to the object.</source>
          <target state="translated">Eloquentモデルが &lt;code&gt;toArray&lt;/code&gt; メソッドを使用して配列またはJSONに変換される場合、カスタムキャスト値オブジェクトは、 &lt;code&gt;Illuminate\Contracts\Support\Arrayable&lt;/code&gt; および &lt;code&gt;JsonSerializable&lt;/code&gt; インターフェイスを実装している限り、通常はシリアル化されます。ただし、サードパーティライブラリによって提供される値オブジェクトを使用する場合、これらのインターフェイスをオブジェクトに追加できない場合があります。</target>
        </trans-unit>
        <trans-unit id="4fb8366001d90bc865426f48a5271e4ae0523cd6" translate="yes" xml:space="preserve">
          <source>When an event is broadcast, all of its &lt;code&gt;public&lt;/code&gt; properties are automatically serialized and broadcast as the event's payload, allowing you to access any of its public data from your JavaScript application. So, for example, if your event has a single public &lt;code&gt;$user&lt;/code&gt; property that contains an Eloquent model, the event's broadcast payload would be:</source>
          <target state="translated">イベントがブロードキャストされると、そのすべての &lt;code&gt;public&lt;/code&gt; プロパティが自動的にシリアル化され、イベントのペイロードとしてブロードキャストされるため、JavaScriptアプリケーションから任意のパブリックデータにアクセスできます。したがって、たとえば、イベントにEloquentモデルを含む単一のパブリック &lt;code&gt;$user&lt;/code&gt; プロパティがある場合、イベントのブロードキャストペイロードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="969808d80333b9dba3eb634c42582d4394dc25f4" translate="yes" xml:space="preserve">
          <source>When an exception is uncaught and the &lt;code&gt;APP_DEBUG&lt;/code&gt; environment variable is &lt;code&gt;true&lt;/code&gt;, the debug page will show all environment variables and their contents. In some cases you may want to obscure certain variables. You may do this by updating the &lt;code&gt;debug_blacklist&lt;/code&gt; option in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file.</source>
          <target state="translated">例外が &lt;code&gt;APP_DEBUG&lt;/code&gt; ず、APP_DEBUG環境変数が &lt;code&gt;true&lt;/code&gt; の場合、デバッグページにはすべての環境変数とその内容が表示されます。場合によっては、特定の変数を隠す必要があります。これを行うには、 &lt;code&gt;config/app.php&lt;/code&gt; 構成ファイルの &lt;code&gt;debug_blacklist&lt;/code&gt; オプションを更新します。</target>
        </trans-unit>
        <trans-unit id="bccc1757c37bcc547282bc6cc09d8a305d208adb" translate="yes" xml:space="preserve">
          <source>When an exception is uncaught and the &lt;code&gt;APP_DEBUG&lt;/code&gt; environment variable is &lt;code&gt;true&lt;/code&gt;, the debug page will show all environment variables and their contents. In some cases you may want to obscure certain variables. You may do this by updating the &lt;code&gt;debug_hide&lt;/code&gt; option in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file.</source>
          <target state="translated">例外がキャッチされず、 &lt;code&gt;APP_DEBUG&lt;/code&gt; 環境変数が &lt;code&gt;true&lt;/code&gt; の場合、デバッグページにはすべての環境変数とその内容が表示されます。場合によっては、特定の変数を隠したいことがあります。これを行うには、 &lt;code&gt;config/app.php&lt;/code&gt; 構成ファイルの &lt;code&gt;debug_hide&lt;/code&gt; オプションを更新します。</target>
        </trans-unit>
        <trans-unit id="3fc5815db9657aee6bfe9d117db29bd6bd81b6d4" translate="yes" xml:space="preserve">
          <source>When assigning JSON columns, each column's mass-assignable key must be specified in your model's &lt;code&gt;$fillable&lt;/code&gt; array. For security, Laravel does not support updating nested JSON attributes when using the &lt;code&gt;guarded&lt;/code&gt; property:</source>
          <target state="translated">JSON列を割り当てるときは、各列の一括割り当て可能なキーをモデルの &lt;code&gt;$fillable&lt;/code&gt; 配列で指定する必要があります。セキュリティのために、Laravelは、使用している場合、ネストされたJSON属性の更新をサポートしていません &lt;code&gt;guarded&lt;/code&gt; プロパティを：</target>
        </trans-unit>
        <trans-unit id="c3d6994a2f5c467954d1b24849e183b214e2e0ea" translate="yes" xml:space="preserve">
          <source>When assigning middleware to a group of routes, you may occasionally need to prevent the middleware from being applied to an individual route within the group. You may accomplish this using the &lt;code&gt;withoutMiddleware&lt;/code&gt; method:</source>
          <target state="translated">ミドルウェアをルートのグループに割り当てる場合、ミドルウェアがグループ内の個々のルートに適用されないようにする必要がある場合があります。これは、 &lt;code&gt;withoutMiddleware&lt;/code&gt; メソッドを使用して実行できます。</target>
        </trans-unit>
        <trans-unit id="6c60a9c7919beaa0268ba1595d1baa54eb25e8c3" translate="yes" xml:space="preserve">
          <source>When assigning middleware, you may also pass the fully qualified class name:</source>
          <target state="translated">ミドルウェアを割り当てる際には、完全修飾クラス名を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="276cfcc69d0e274dfb553ef69778ff0607833be0" translate="yes" xml:space="preserve">
          <source>When attaching a custom cast to a model, cast parameters may be specified by separating them from the class name using a &lt;code&gt;:&lt;/code&gt; character and comma-delimiting multiple parameters. The parameters will be passed to the constructor of the cast class:</source>
          <target state="translated">カスタムキャストをモデルにアタッチする場合、キャストパラメータは、 &lt;code&gt;:&lt;/code&gt; 文字とコンマ区切りの複数のパラメータを使用してクラス名から分離することで指定できます。パラメータは、キャストクラスのコンストラクタに渡されます。</target>
        </trans-unit>
        <trans-unit id="b2c1ed07264972afba59ae985f0771dd7af8def5" translate="yes" xml:space="preserve">
          <source>When attaching a relationship to a model, you may also pass an array of additional data to be inserted into the intermediate table:</source>
          <target state="translated">リレーションシップをモデルにアタッチする際に、中間テーブルに挿入する追加データの配列を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="55b662eeb5711cd71c5942a26509a1ff97f04732" translate="yes" xml:space="preserve">
          <source>When attaching files to a message, you may also specify the display name and / or MIME type by passing an &lt;code&gt;array&lt;/code&gt; as the second argument to the &lt;code&gt;attach&lt;/code&gt; method:</source>
          <target state="translated">メッセージにファイルを添付するときは、 &lt;code&gt;attach&lt;/code&gt; メソッドの2番目の引数として &lt;code&gt;array&lt;/code&gt; を渡すことにより、表示名やMIMEタイプを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="1510a7793661573c67e22803651201b30d0eb3be" translate="yes" xml:space="preserve">
          <source>When attaching the &lt;code&gt;auth&lt;/code&gt; middleware to a route, you may also specify which guard should be used to authenticate the user. The guard specified should correspond to one of the keys in the &lt;code&gt;guards&lt;/code&gt; array of your &lt;code&gt;auth.php&lt;/code&gt; configuration file:</source>
          <target state="translated">ルートに &lt;code&gt;auth&lt;/code&gt; ミドルウェアをアタッチするときに、ユーザーの認証に使用するガードを指定することもできます。指定した &lt;code&gt;guards&lt;/code&gt; は、 &lt;code&gt;auth.php&lt;/code&gt; 設定ファイルのguards配列のキーの1つに対応している必要があります。</target>
        </trans-unit>
        <trans-unit id="5eed1c27c5d4578e0e9486b83cc660b5c928070d" translate="yes" xml:space="preserve">
          <source>When attempting to determine if the authenticated user can update a given post, we can invoke this policy method like so:</source>
          <target state="translated">認証されたユーザが指定された投稿を更新できるかどうかを判断しようとするとき、このポリシーメソッドを次のように呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="c00752cacbe43d19f0a902ea201cbf46ea5c6312" translate="yes" xml:space="preserve">
          <source>When authenticating using the password grant, Passport will use the &lt;code&gt;email&lt;/code&gt; attribute of your model as the &quot;username&quot;. However, you may customize this behavior by defining a &lt;code&gt;findForPassport&lt;/code&gt; method on your model:</source>
          <target state="translated">パスワード付与を使用して認証する場合、Passportはモデルの &lt;code&gt;email&lt;/code&gt; 属性を「ユーザー名」として使用します。ただし、モデルで &lt;code&gt;findForPassport&lt;/code&gt; メソッドを定義することにより、この動作をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="66a5889f4169ed4c816c8e5730e5fba639aa6bd9" translate="yes" xml:space="preserve">
          <source>When authenticating using the password grant, Passport will use the &lt;code&gt;password&lt;/code&gt; attribute of your model to validate the given password. If your model does not have a &lt;code&gt;password&lt;/code&gt; attribute or you wish to customize the password validation logic, you can define a &lt;code&gt;validateForPassportPasswordGrant&lt;/code&gt; method on your model:</source>
          <target state="translated">パスワード付与を使用して認証する場合、Passportはモデルの &lt;code&gt;password&lt;/code&gt; 属性を使用して、指定されたパスワードを検証します。モデルに &lt;code&gt;password&lt;/code&gt; 属性がない場合、またはパスワード検証ロジックをカスタマイズ &lt;code&gt;validateForPassportPasswordGrant&lt;/code&gt; 場合は、モデルにvalidateForPassportPasswordGrantメソッドを定義できます。</target>
        </trans-unit>
        <trans-unit id="91a779e6ecbb6d1f9ac1482cb55158b88b51a760" translate="yes" xml:space="preserve">
          <source>When authorizing actions using policies, you may pass an array as the second argument to the various authorization functions and helpers. The first element in the array will be used to determine which policy should be invoked, while the rest of the array elements are passed as parameters to the policy method and can be used for additional context when making authorization decisions. For example, consider the following &lt;code&gt;PostPolicy&lt;/code&gt; method definition which contains an additional &lt;code&gt;$category&lt;/code&gt; parameter:</source>
          <target state="translated">ポリシーを使用してアクションを承認する場合、さまざまな承認関数とヘルパーに2番目の引数として配列を渡すことができます。配列の最初の要素は、呼び出すポリシーを決定するために使用され、残りの配列要素はパラメーターとしてポリシーメソッドに渡され、承認の決定を行う際の追加のコンテキストに使用できます。たとえば、追加の &lt;code&gt;$category&lt;/code&gt; パラメーターを含む次の &lt;code&gt;PostPolicy&lt;/code&gt; メソッド定義について考えてみます。</target>
        </trans-unit>
        <trans-unit id="8df2b7303c72f1b951c8a60f4f94155afd6b0ca9" translate="yes" xml:space="preserve">
          <source>When available, Mix will automatically display OS notifications for each bundle. This will give you instant feedback, as to whether the compilation was successful or not. However, there may be instances when you'd prefer to disable these notifications. One such example might be triggering Mix on your production server. Notifications may be deactivated, via the &lt;code&gt;disableNotifications&lt;/code&gt; method.</source>
          <target state="translated">利用可能な場合、Mixは各バンドルのOS通知を自動的に表示します。これにより、コンパイルが成功したかどうかについて、即座にフィードバックが得られます。ただし、これらの通知を無効にしたい場合があります。そのような例の1つは、運用サーバーでMixをトリガーすることです。 &lt;code&gt;disableNotifications&lt;/code&gt; メソッドを使用して、通知を非アクティブ化できます。</target>
        </trans-unit>
        <trans-unit id="636db3c2aaed2d253bb2842f4a4fc4e26cfe414d" translate="yes" xml:space="preserve">
          <source>When building JSON APIs, you will often need to convert your models and relationships to arrays or JSON. Eloquent includes convenient methods for making these conversions, as well as controlling which attributes are included in your serializations.</source>
          <target state="translated">JSON APIを構築する際には、モデルやリレーションシップを配列やJSONに変換する必要があることがよくあります。Eloquent には、これらの変換を行うための便利なメソッドが用意されており、シリアライゼーションに含まれる属性を制御することもできます。</target>
        </trans-unit>
        <trans-unit id="6fb85b7adab979c027e20c432bc822368c3c1ed2" translate="yes" xml:space="preserve">
          <source>When building JavaScript driven applications, it is convenient to have your JavaScript HTTP library automatically attach the CSRF token to every outgoing request. By default, the &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file registers the value of the &lt;code&gt;csrf-token&lt;/code&gt; meta tag with the Axios HTTP library. If you are not using this library, you will need to manually configure this behavior for your application.</source>
          <target state="translated">JavaScriptで駆動されるアプリケーションを構築する場合、JavaScript HTTPライブラリですべての送信リクエストにCSRFトークンを自動的に添付すると便利です。デフォルトでは、 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; ファイルは、 &lt;code&gt;csrf-token&lt;/code&gt; メタタグの値をAxios HTTPライブラリに登録します。このライブラリを使用していない場合は、アプリケーションのこの動作を手動で構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="f3067d0c3770f7632d9510135c70f42fa772ec9a" translate="yes" xml:space="preserve">
          <source>When building JavaScript driven applications, it is convenient to have your JavaScript HTTP library automatically attach the CSRF token to every outgoing request. By default, the Axios HTTP library provided in the &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file automatically sends an &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; header using the value of the encrypted &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie. If you are not using this library, you will need to manually configure this behavior for your application.</source>
          <target state="translated">JavaScript駆動型アプリケーションを構築する場合、JavaScriptHTTPライブラリがすべての送信リクエストにCSRFトークンを自動的に添付するようにすると便利です。デフォルトでは、 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; ファイルで提供される &lt;code&gt;XSRF-TOKEN&lt;/code&gt; は、暗号化されたXSRF-TOKENcookieの値を使用してX-XSRF-TOKENヘッダーを自動的に送信します。このライブラリを使用していない場合は、アプリケーションに対してこの動作を手動で構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="12a0cff7b2a84dfe7bdec52e1d3fab79e37be94a" translate="yes" xml:space="preserve">
          <source>When building a third-party package that interacts with Laravel, it's better to inject &lt;a href=&quot;contracts&quot;&gt;Laravel contracts&lt;/a&gt; instead of using facades. Since packages are built outside of Laravel itself, you will not have access to Laravel's facade testing helpers.</source>
          <target state="translated">Laravelと対話するサードパーティパッケージをビルドする場合、ファサードを使用する代わりに&lt;a href=&quot;contracts&quot;&gt;Laravelコントラクト&lt;/a&gt;を注入することをお勧めします。パッケージはLaravelの外部でビルドされるため、Laravelのファサードテストヘルパーにアクセスできません。</target>
        </trans-unit>
        <trans-unit id="f7378e497110554a6b1844f41f18a6eec883e8c4" translate="yes" xml:space="preserve">
          <source>When building an API, it can be extremely useful to be able to consume your own API from your JavaScript application. This approach to API development allows your own application to consume the same API that you are sharing with the world. The same API may be consumed by your web application, mobile applications, third-party applications, and any SDKs that you may publish on various package managers.</source>
          <target state="translated">APIを構築する際に、自分のJavaScriptアプリケーションから自分のAPIを消費できることは非常に便利です。このAPI開発へのアプローチにより、自分のアプリケーションが世界と共有しているのと同じAPIを消費することができます。同じAPIは、Webアプリケーション、モバイルアプリケーション、サードパーティアプリケーション、および様々なパッケージマネージャで公開されているSDKによって消費される可能性があります。</target>
        </trans-unit>
        <trans-unit id="6be3eacbbca4b74796539528c666baec5cc7d86c" translate="yes" xml:space="preserve">
          <source>When building an API, you may need a transformation layer that sits between your Eloquent models and the JSON responses that are actually returned to your application's users. Laravel's resource classes allow you to expressively and easily transform your models and model collections into JSON.</source>
          <target state="translated">APIを構築する際、Eloquentモデルとアプリケーションのユーザーに実際に返されるJSONレスポンスの間にある変換レイヤーが必要になることがあります。Laravelのリソースクラスを使うと、モデルやモデルコレクションを表現力豊かに簡単にJSONに変換することができます。</target>
        </trans-unit>
        <trans-unit id="a6607885304fb61d14c604ddeb24934795e6cd0a" translate="yes" xml:space="preserve">
          <source>When building an application that utilizes event broadcasting, you may substitute the &lt;code&gt;event&lt;/code&gt; function with the &lt;code&gt;broadcast&lt;/code&gt; function. Like the &lt;code&gt;event&lt;/code&gt; function, the &lt;code&gt;broadcast&lt;/code&gt; function dispatches the event to your server-side listeners:</source>
          <target state="translated">イベント放送を利用したアプリケーションを構築する場合、 &lt;code&gt;event&lt;/code&gt; 機能を &lt;code&gt;broadcast&lt;/code&gt; 機能に置き換えてもよい。 &lt;code&gt;event&lt;/code&gt; 関数と同様に、 &lt;code&gt;broadcast&lt;/code&gt; 関数はイベントをサーバー側リスナーにディスパッチします。</target>
        </trans-unit>
        <trans-unit id="d9e69dc2d180d0cabba430a89f31271b220f0d1d" translate="yes" xml:space="preserve">
          <source>When building the database schema for the &lt;code&gt;App\Models\User&lt;/code&gt; model, make sure the password column is at least 60 characters in length. Maintaining the default string column length of 255 characters would be a good choice.</source>
          <target state="translated">&lt;code&gt;App\Models\User&lt;/code&gt; モデルのデータベーススキーマを構築するときは、パスワード列の長さが60文字以上であることを確認してください。デフォルトの文字列列の長さを255文字に維持することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="45b9c4684696d6586f0197e97981726f66bb33b5" translate="yes" xml:space="preserve">
          <source>When building the database schema for the &lt;code&gt;App\User&lt;/code&gt; model, make sure the password column is at least 60 characters in length. Maintaining the default string column length of 255 characters would be a good choice.</source>
          <target state="translated">&lt;code&gt;App\User&lt;/code&gt; モデルのデータベーススキーマを構築する場合、パスワード列の長さが60文字以上であることを確認してください。255文字のデフォルトの文字列列長を維持することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="82ad7c629a170f1e3a5c02f3772396de4a4513de" translate="yes" xml:space="preserve">
          <source>When calling routes that are protected by Passport, your application's API consumers should specify their access token as a &lt;code&gt;Bearer&lt;/code&gt; token in the &lt;code&gt;Authorization&lt;/code&gt; header of their request. For example, when using the Guzzle HTTP library:</source>
          <target state="translated">Passportで保護されているルートを呼び出す場合、アプリケーションのAPIコンシューマーは、リクエストの &lt;code&gt;Authorization&lt;/code&gt; ヘッダーで &lt;code&gt;Bearer&lt;/code&gt; トークンとしてアクセストークンを指定する必要があります。たとえば、Guzzle HTTPライブラリを使用する場合：</target>
        </trans-unit>
        <trans-unit id="fb37fc3e51eccf912c60dabe31580d5db666d650" translate="yes" xml:space="preserve">
          <source>When calling the &lt;code&gt;paginate&lt;/code&gt; method, you will receive an instance of &lt;code&gt;Illuminate\Pagination\LengthAwarePaginator&lt;/code&gt;. When calling the &lt;code&gt;simplePaginate&lt;/code&gt; method, you will receive an instance of &lt;code&gt;Illuminate\Pagination\Paginator&lt;/code&gt;. These objects provide several methods that describe the result set. In addition to these helpers methods, the paginator instances are iterators and may be looped as an array. So, once you have retrieved the results, you may display the results and render the page links using &lt;a href=&quot;blade&quot;&gt;Blade&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;paginate&lt;/code&gt; メソッドを呼び出すと、 &lt;code&gt;Illuminate\Pagination\LengthAwarePaginator&lt;/code&gt; インスタンスを受け取ります。 &lt;code&gt;simplePaginate&lt;/code&gt; メソッドを呼び出すと、 &lt;code&gt;Illuminate\Pagination\Paginator&lt;/code&gt; インスタンスを受け取ります。これらのオブジェクトは、結果セットを記述するいくつかのメソッドを提供します。これらのヘルパーメソッドに加えて、paginatorインスタンスはイテレータであり、配列としてループされる場合があります。したがって、結果を取得したら、&lt;a href=&quot;blade&quot;&gt;Blade&lt;/a&gt;を使用して結果を表示し、ページリンクをレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="cba0dc201c3755c53f3cf2c114d2d45911248180" translate="yes" xml:space="preserve">
          <source>When calling the &lt;code&gt;terminate&lt;/code&gt; method on your middleware, Laravel will resolve a fresh instance of the middleware from the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. If you would like to use the same middleware instance when the &lt;code&gt;handle&lt;/code&gt; and &lt;code&gt;terminate&lt;/code&gt; methods are called, register the middleware with the container using the container's &lt;code&gt;singleton&lt;/code&gt; method.</source>
          <target state="translated">ミドルウェアで &lt;code&gt;terminate&lt;/code&gt; メソッドを呼び出すと、Laravelは&lt;a href=&quot;container&quot;&gt;サービスコンテナ&lt;/a&gt;からミドルウェアの新しいインスタンスを解決します。 &lt;code&gt;handle&lt;/code&gt; メソッドと &lt;code&gt;terminate&lt;/code&gt; メソッドが呼び出されたときに同じミドルウェアインスタンスを使用する場合は、コンテナの &lt;code&gt;singleton&lt;/code&gt; メソッドを使用してミドルウェアをコンテナに登録します。</target>
        </trans-unit>
        <trans-unit id="09fb136514b95b79aa9029e0f00f5c2901a77cbf" translate="yes" xml:space="preserve">
          <source>When calling the &lt;code&gt;terminate&lt;/code&gt; method on your middleware, Laravel will resolve a fresh instance of the middleware from the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;. If you would like to use the same middleware instance when the &lt;code&gt;handle&lt;/code&gt; and &lt;code&gt;terminate&lt;/code&gt; methods are called, register the middleware with the container using the container's &lt;code&gt;singleton&lt;/code&gt; method. Typically this should be done in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider.php&lt;/code&gt;:</source>
          <target state="translated">ミドルウェアで &lt;code&gt;terminate&lt;/code&gt; メソッドを呼び出すと、Laravelは&lt;a href=&quot;container&quot;&gt;サービスコンテナ&lt;/a&gt;からミドルウェアの新しいインスタンスを解決します。 &lt;code&gt;handle&lt;/code&gt; メソッドと &lt;code&gt;terminate&lt;/code&gt; メソッドが呼び出されたときに同じミドルウェアインスタンスを使用する場合は、コンテナの &lt;code&gt;singleton&lt;/code&gt; メソッドを使用してミドルウェアをコンテナに登録します。通常、これは &lt;code&gt;AppServiceProvider.php&lt;/code&gt; の &lt;code&gt;register&lt;/code&gt; メソッドで実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="6f297356b226ef75b0e7ea8079e6c0e23182df35" translate="yes" xml:space="preserve">
          <source>When calling this method, the &lt;code&gt;user&lt;/code&gt; arguments may be passed in order to the command line. For example, the following command will set the value of &lt;code&gt;user&lt;/code&gt; to &lt;code&gt;['foo', 'bar']&lt;/code&gt;:</source>
          <target state="translated">このメソッドを呼び出すときに、 &lt;code&gt;user&lt;/code&gt; 引数がコマンドラインに順番に渡される場合があります。たとえば、次のコマンドは &lt;code&gt;user&lt;/code&gt; の値を &lt;code&gt;['foo', 'bar']&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="935b068a3bb97d04e8da75d3774fb37afa4012da" translate="yes" xml:space="preserve">
          <source>When casting to value objects, any changes made to the value object will automatically be synced back to the model before the model is saved:</source>
          <target state="translated">値オブジェクトにキャストすると、値オブジェクトに加えられた変更は、モデルが保存される前に自動的にモデルに同期されます。</target>
        </trans-unit>
        <trans-unit id="3c7a93c6bb474e06fd2f2fb4113a72d9048ffd05" translate="yes" xml:space="preserve">
          <source>When chaining jobs, you may use the &lt;code&gt;catch&lt;/code&gt; method to specify a Closure that should be invoked if a job within the chain fails. The given callback will receive the exception instance that caused the job failure:</source>
          <target state="translated">ジョブをチェーンする場合、 &lt;code&gt;catch&lt;/code&gt; メソッドを使用して、チェーン内のジョブが失敗した場合に呼び出す必要があるクロージャを指定できます。指定されたコールバックは、ジョブの失敗の原因となった例外インスタンスを受け取ります。</target>
        </trans-unit>
        <trans-unit id="f49a63636a46e32fd5e6d49e596bcc2ccb56bc76" translate="yes" xml:space="preserve">
          <source>When changing the hard-coded Tax Rate IDs returned by the &lt;code&gt;taxRates&lt;/code&gt; method, the tax settings on any existing subscriptions for the user will remain the same. If you wish to update the tax value for existing subscriptions with the returned &lt;code&gt;taxTaxRates&lt;/code&gt; values, you should call the &lt;code&gt;syncTaxRates&lt;/code&gt; method on the user's subscription instance:</source>
          <target state="translated">&lt;code&gt;taxRates&lt;/code&gt; メソッドによって返されるハードコードされた税率IDを変更する場合、ユーザーの既存のサブスクリプションの税設定は同じままです。返された &lt;code&gt;taxTaxRates&lt;/code&gt; 値で既存のサブスクリプションの税額を更新する場合は、ユーザーのサブスクリプションインスタンスで &lt;code&gt;syncTaxRates&lt;/code&gt; メソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="0b6652aed5cd44d989a49ea31c8110db618dbe29" translate="yes" xml:space="preserve">
          <source>When copying a directory, the &lt;code&gt;copy&lt;/code&gt; method will flatten the directory's structure. To maintain the directory's original structure, you should use the &lt;code&gt;copyDirectory&lt;/code&gt; method instead:</source>
          <target state="translated">ディレクトリをコピーする場合、 &lt;code&gt;copy&lt;/code&gt; メソッドはディレクトリの構造をフラット化します。ディレクトリの元の構造を維持するには、代わりに &lt;code&gt;copyDirectory&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2667b25c72d01d0e8833759f9e7eaacaf7a1626c" translate="yes" xml:space="preserve">
          <source>When creating a custom validation rule, you may sometimes need to define custom place-holder replacements for error messages. You may do so by creating a custom Validator as described above then making a call to the &lt;code&gt;replacer&lt;/code&gt; method on the &lt;code&gt;Validator&lt;/code&gt; facade. You may do this within the &lt;code&gt;boot&lt;/code&gt; method of a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;:</source>
          <target state="translated">カスタム検証ルールを作成するときに、エラーメッセージのカスタムプレースホルダー置換を定義する必要がある場合があります。上記のようにカスタムValidatorを作成し、 &lt;code&gt;Validator&lt;/code&gt; ファサードの &lt;code&gt;replacer&lt;/code&gt; メソッドを呼び出すことで、これを行うことができます。これは、&lt;a href=&quot;providers&quot;&gt;サービスプロバイダーの&lt;/a&gt; &lt;code&gt;boot&lt;/code&gt; メソッド内で実行できます。</target>
        </trans-unit>
        <trans-unit id="4309846d3eb245c338bacc3d783c9cd4c7c9e3c5" translate="yes" xml:space="preserve">
          <source>When creating a custom validation rule, you may sometimes need to define custom placeholder replacements for error messages. You may do so by creating a custom Validator as described above then making a call to the &lt;code&gt;replacer&lt;/code&gt; method on the &lt;code&gt;Validator&lt;/code&gt; facade. You may do this within the &lt;code&gt;boot&lt;/code&gt; method of a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;:</source>
          <target state="translated">カスタム検証ルールを作成するときに、エラーメッセージのカスタムプレースホルダー置換を定義する必要がある場合があります。これを行うには、上記のようにカスタムValidatorを作成してから、 &lt;code&gt;Validator&lt;/code&gt; ファサードの &lt;code&gt;replacer&lt;/code&gt; メソッドを呼び出します。これは、&lt;a href=&quot;providers&quot;&gt;サービスプロバイダーの&lt;/a&gt; &lt;code&gt;boot&lt;/code&gt; メソッド内で行うことができます。</target>
        </trans-unit>
        <trans-unit id="b9a99910cb4d97355a9a894395c4a50b27c322de" translate="yes" xml:space="preserve">
          <source>When creating an Echo instance that uses the &lt;code&gt;pusher&lt;/code&gt; connector, you may also specify a &lt;code&gt;cluster&lt;/code&gt; as well as whether the connection must be made over TLS (by default, when &lt;code&gt;forceTLS&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, a non-TLS connection will be made if the page was loaded over HTTP, or as a fallback if a TLS connection fails):</source>
          <target state="translated">&lt;code&gt;pusher&lt;/code&gt; コネクタを使用するEchoインスタンスを作成するときに、 &lt;code&gt;cluster&lt;/code&gt; を指定することもできます。また、接続をTLS経由で行う必要があるかどうかも指定できます（デフォルトでは、 &lt;code&gt;forceTLS&lt;/code&gt; が &lt;code&gt;false&lt;/code&gt; の場合、ページが読み込まれると非TLS接続が行われます。 HTTP経由、またはTLS接続が失敗した場合のフォールバックとして）：</target>
        </trans-unit>
        <trans-unit id="a70de08feb757b5533e6ef8fb54644f5fb74a762" translate="yes" xml:space="preserve">
          <source>When creating an Echo instance that uses the &lt;code&gt;pusher&lt;/code&gt; connector, you may also specify a &lt;code&gt;cluster&lt;/code&gt; as well as whether the connection should be encrypted:</source>
          <target state="translated">&lt;code&gt;pusher&lt;/code&gt; コネクタを使用するEchoインスタンスを作成するときは、 &lt;code&gt;cluster&lt;/code&gt; と、接続を暗号化するかどうかを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="1683526f8b6bad10b61652ae2df835962171ee2e" translate="yes" xml:space="preserve">
          <source>When creating files using the &lt;code&gt;fake&lt;/code&gt; method, you may specify the width, height, and size of the image in order to better test your validation rules:</source>
          <target state="translated">&lt;code&gt;fake&lt;/code&gt; 方法でファイルを作成する場合、検証ルールをより適切にテストするために、画像の幅、高さ、サイズを指定できます。</target>
        </trans-unit>
        <trans-unit id="9297c0c887cd5b6a96e0c51fb4b5bf876388c407" translate="yes" xml:space="preserve">
          <source>When creating the table, you may use any of the schema builder's &lt;a href=&quot;#creating-columns&quot;&gt;column methods&lt;/a&gt; to define the table's columns.</source>
          <target state="translated">テーブルを作成するときは、スキーマビルダーの&lt;a href=&quot;#creating-columns&quot;&gt;列メソッド&lt;/a&gt;のいずれかを使用してテーブルの列を定義できます。</target>
        </trans-unit>
        <trans-unit id="518235eb7ee927b1366faedbaa7565832ec969ce" translate="yes" xml:space="preserve">
          <source>When customizing Homestead, Ubuntu may ask you if you would like to keep a package's original configuration or overwrite it with a new configuration file. To avoid this, you should use the following command when installing packages to avoid overwriting any configuration previously written by Homestead:</source>
          <target state="translated">Homesteadをカスタマイズする際に、Ubuntuではパッケージの元の設定を維持するか、新しい設定ファイルで上書きするかを聞かれることがあります。これを避けるために、パッケージをインストールする際に以下のコマンドを使用して、Homesteadで以前に書かれた設定を上書きしないようにしましょう。</target>
        </trans-unit>
        <trans-unit id="30135835125895fbd65984848b9e15fe258d1385" translate="yes" xml:space="preserve">
          <source>When dealing with HTML elements like checkboxes, your application may receive &quot;truthy&quot; values that are actually strings. For example, &quot;true&quot; or &quot;on&quot;. For convenience, you may use the &lt;code&gt;boolean&lt;/code&gt; method to retrieve these values as booleans. The &lt;code&gt;boolean&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; for 1, &quot;1&quot;, true, &quot;true&quot;, &quot;on&quot;, and &quot;yes&quot;. All other values will return &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">チェックボックスなどのHTML要素を処理する場合、アプリケーションは実際には文字列である「真の」値を受け取る可能性があります。たとえば、「true」または「on」です。便宜上、 &lt;code&gt;boolean&lt;/code&gt; メソッドを使用してこれらの値をブール値として取得できます。 &lt;code&gt;boolean&lt;/code&gt; メソッドが返す &lt;code&gt;true&lt;/code&gt; 1のために、「1」、真、「真」、「上」、および「はい」。他のすべての値は &lt;code&gt;false&lt;/code&gt; を返します：</target>
        </trans-unit>
        <trans-unit id="ea89923970ce3f554740212e339e023bb926040b" translate="yes" xml:space="preserve">
          <source>When dealing with nested arrays or objects, you may specify the key used to determine uniqueness:</source>
          <target state="translated">入れ子になった配列やオブジェクトを扱う際には、一意性を判断するために使用するキーを指定することができます。</target>
        </trans-unit>
        <trans-unit id="bcc6e8b59c43b0a62074ded6ffbd2735d6014359" translate="yes" xml:space="preserve">
          <source>When debugging functional tests that make requests to the web server, it is easier to autostart debugging rather than modifying tests to pass through a custom header or cookie to trigger debugging. To force Xdebug to start automatically, modify &lt;code&gt;/etc/php/7.x/fpm/conf.d/20-xdebug.ini&lt;/code&gt; inside your Vagrant box and add the following configuration:</source>
          <target state="translated">Webサーバーに要求を行う機能テストをデバッグする場合、カスタムヘッダーまたはCookieを通過してデバッグをトリガーするようにテストを変更するよりも、デバッグを自動開始する方が簡単です。 Xdebugを強制的に自動的に開始するには、Vagrantボックス内の &lt;code&gt;/etc/php/7.x/fpm/conf.d/20-xdebug.ini&lt;/code&gt; を変更し、次の構成を追加します。</target>
        </trans-unit>
        <trans-unit id="c9dab00d5c672e6fa72dd329131c98099d23d99d" translate="yes" xml:space="preserve">
          <source>When declaring a resource route, you may specify a subset of actions the controller should handle instead of the full set of default actions:</source>
          <target state="translated">リソースルートを宣言する際に、デフォルトのアクションのフルセットではなく、コントローラが処理するアクションのサブセットを指定することができます。</target>
        </trans-unit>
        <trans-unit id="0b6c69d8fed783cacda4127746365d2a2e451cce" translate="yes" xml:space="preserve">
          <source>When declaring resource routes that will be consumed by APIs, you will commonly want to exclude routes that present HTML templates such as &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;edit&lt;/code&gt;. For convenience, you may use the &lt;code&gt;apiResource&lt;/code&gt; method to automatically exclude these two routes:</source>
          <target state="translated">APIによって消費されるリソースルートを宣言する場合、通常、 &lt;code&gt;create&lt;/code&gt; や &lt;code&gt;edit&lt;/code&gt; などのHTMLテンプレートを提示するルートを除外します。便宜上、 &lt;code&gt;apiResource&lt;/code&gt; メソッドを使用して、これら2つのルートを自動的に除外できます。</target>
        </trans-unit>
        <trans-unit id="b475c89219d52d249fc059c174753fe77faaf88b" translate="yes" xml:space="preserve">
          <source>When defining a Closure based command, you may use the &lt;code&gt;describe&lt;/code&gt; method to add a description to the command. This description will be displayed when you run the &lt;code&gt;php artisan list&lt;/code&gt; or &lt;code&gt;php artisan help&lt;/code&gt; commands:</source>
          <target state="translated">クロージャベースのコマンドを定義するとき、 &lt;code&gt;describe&lt;/code&gt; メソッドを使用して、コマンドに説明を追加できます。この説明は、 &lt;code&gt;php artisan list&lt;/code&gt; または &lt;code&gt;php artisan help&lt;/code&gt; コマンドを実行すると表示されます。</target>
        </trans-unit>
        <trans-unit id="032bac906d489a90c95e8a9209c6eb78ef73404c" translate="yes" xml:space="preserve">
          <source>When defining a child view, use the Blade &lt;code&gt;@extends&lt;/code&gt; directive to specify which layout the child view should &quot;inherit&quot;. Views which extend a Blade layout may inject content into the layout's sections using &lt;code&gt;@section&lt;/code&gt; directives. Remember, as seen in the example above, the contents of these sections will be displayed in the layout using &lt;code&gt;@yield&lt;/code&gt;:</source>
          <target state="translated">子ビューを定義するときは、Blade &lt;code&gt;@extends&lt;/code&gt; ディレクティブを使用して、子ビューが「継承」するレイアウトを指定します。Bladeレイアウトを拡張するビューは、 &lt;code&gt;@section&lt;/code&gt; section ディレクティブを使用してコンテンツをレイアウトのセクションに挿入できます。上記の例にあるように、これらのセクションのコンテンツは &lt;code&gt;@yield&lt;/code&gt; を使用してレイアウトに表示されます。</target>
        </trans-unit>
        <trans-unit id="493ca91f41aa9fd9d6b54a0ee7ce85fe6e316e51" translate="yes" xml:space="preserve">
          <source>When defining an option that expects an array input, each option value passed to the command should be prefixed with the option name:</source>
          <target state="translated">配列入力を想定したオプションを定義する場合は、コマンドに渡される各オプションの値の前にオプション名を付けるべきです。</target>
        </trans-unit>
        <trans-unit id="8904e2b72a344813981270ebd7c1243c01a6474b" translate="yes" xml:space="preserve">
          <source>When defining dynamic relationships, always provide explicit key name arguments to the Eloquent relationship methods.</source>
          <target state="translated">ダイナミック・リレーションシップを定義する場合、Eloquent リレーションシップ・メソッドには必ず明示的なキー名引数を指定してください。</target>
        </trans-unit>
        <trans-unit id="70da2087238022ca8997c2a2a9b0219c46ccdf11" translate="yes" xml:space="preserve">
          <source>When defining policy methods that will not receive a model instance, such as a &lt;code&gt;create&lt;/code&gt; method, it will not receive a model instance. Instead, you should define the method as only expecting the authenticated user:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; メソッドなど、モデルインスタンスを受信しないポリシーメソッドを定義する場合、モデルインスタンスを受信しません。代わりに、認証されたユーザーのみを予期するようにメソッドを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="eb95e7ac5a38d028f0226bb542549d0ddf8d0b5a" translate="yes" xml:space="preserve">
          <source>When defining the &lt;code&gt;RoleUser&lt;/code&gt; model, we will extend the &lt;code&gt;Pivot&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;RoleUser&lt;/code&gt; モデルを定義するときに、 &lt;code&gt;Pivot&lt;/code&gt; クラスを拡張します。</target>
        </trans-unit>
        <trans-unit id="e49ba9c0bf3574b04acbb6568be9590832dfa438" translate="yes" xml:space="preserve">
          <source>When defining the &lt;code&gt;UserRole&lt;/code&gt; model, we will extend the &lt;code&gt;Pivot&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;UserRole&lt;/code&gt; モデルを定義するとき、 &lt;code&gt;Pivot&lt;/code&gt; クラスを拡張します。</target>
        </trans-unit>
        <trans-unit id="7cf72653b8e40816e43dee62856576bb7c94604b" translate="yes" xml:space="preserve">
          <source>When deploying Passport to your production servers for the first time, you will likely need to run the &lt;code&gt;passport:keys&lt;/code&gt; command. This command generates the encryption keys Passport needs in order to generate access token. The generated keys are not typically kept in source control:</source>
          <target state="translated">Passportを初めて運用サーバーに展開するときは、おそらく &lt;code&gt;passport:keys&lt;/code&gt; コマンドを実行する必要があります。このコマンドは、アクセストークンを生成するためにPassportが必要とする暗号化キーを生成します。生成されたキーは通常、ソース管理に保持されません。</target>
        </trans-unit>
        <trans-unit id="9d2ad0d9cde7eb3b1a3fb631e23c38ecc60e2bc9" translate="yes" xml:space="preserve">
          <source>When deploying to production, make sure that you are optimizing Composer's class autoloader map so Composer can quickly find the proper file to load for a given class:</source>
          <target state="translated">本番環境にデプロイする際には、Composer のクラス・オートローダー・マップが最適化されていることを確認してください。これにより、Composer は、指定されたクラスにロードする適切なファイルをすばやく見つけることができます。</target>
        </trans-unit>
        <trans-unit id="bab4c3c9170da76afa526f48ea600d0420dab84e" translate="yes" xml:space="preserve">
          <source>When deploying your application to production, you should make sure that you run the &lt;code&gt;config:cache&lt;/code&gt; Artisan command during your deployment process:</source>
          <target state="translated">アプリケーションを本番環境にデプロイするときは、デプロイメントプロセス中に必ず &lt;code&gt;config:cache&lt;/code&gt; Artisanコマンドを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="12ab09ffb9fa52591e6e6c5e2fd0b802b845f959" translate="yes" xml:space="preserve">
          <source>When deploying your application to production, you should make sure that you run the &lt;code&gt;view:cache&lt;/code&gt; Artisan command during your deployment process:</source>
          <target state="translated">アプリケーションを本番環境にデプロイするときは、デプロイメントプロセス中に &lt;code&gt;view:cache&lt;/code&gt; cacheArtisanコマンドを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="b37a50ed76cf914e07270baaf09fc1dd22f0e4a3" translate="yes" xml:space="preserve">
          <source>When designing a mail notification template, it is convenient to quickly preview the rendered mail message in your browser like a typical Blade template. For this reason, Laravel allows you to return any mail message generated by a mail notification directly from a route Closure or controller. When a &lt;code&gt;MailMessage&lt;/code&gt; is returned, it will be rendered and displayed in the browser, allowing you to quickly preview its design without needing to send it to an actual email address:</source>
          <target state="translated">メール通知テンプレートを設計するときは、通常のBladeテンプレートのように、レンダリングされたメールメッセージをブラウザですばやくプレビューすると便利です。このため、Laravelでは、メール通知によって生成されたメールメッセージをルートクロージャまたはコントローラーから直接返すことができます。とき &lt;code&gt;MailMessage&lt;/code&gt; 返され、それはあなたがすぐに実際の電子メールアドレスに送信することなく、そのデザインをプレビューすることができ、ブラウザに表示し、表示されます。</target>
        </trans-unit>
        <trans-unit id="28b560fcfb364682e703668f064af491a9541439" translate="yes" xml:space="preserve">
          <source>When designing a mailable's template, it is convenient to quickly preview the rendered mailable in your browser like a typical Blade template. For this reason, Laravel allows you to return any mailable directly from a route Closure or controller. When a mailable is returned, it will be rendered and displayed in the browser, allowing you to quickly preview its design without needing to send it to an actual email address:</source>
          <target state="translated">メーラーブルのテンプレートを設計する際、一般的なBladeのテンプレートのように、レンダリングされたメーラーブルをブラウザで素早くプレビューできるのは便利です。このため、Laravelでは、ルートクロージャーやコントローラから直接任意のメーラーブルを返すことができます。メーラーブルが返されると、レンダリングされてブラウザに表示されるので、実際のメールアドレスに送らなくても素早くデザインをプレビューすることができます。</target>
        </trans-unit>
        <trans-unit id="c099c2d3c0ed83534c5ae0df6449f696583293fb" translate="yes" xml:space="preserve">
          <source>When developing an application that sends email, you probably don't want to actually send emails to live email addresses. Laravel provides several ways to &quot;disable&quot; the actual sending of emails during local development.</source>
          <target state="translated">メールを送信するアプリケーションを開発する場合、実際にライブのメールアドレスにメールを送信したくないという方も多いのではないでしょうか。Laravelには、ローカル開発時に実際にメールを送信しないように「無効化」する方法がいくつか用意されています。</target>
        </trans-unit>
        <trans-unit id="d066770c417c971ee86970897b32126b29387c57" translate="yes" xml:space="preserve">
          <source>When executing a mass delete statement via Eloquent, the &lt;code&gt;deleting&lt;/code&gt; and &lt;code&gt;deleted&lt;/code&gt; model events will not be fired for the deleted models. This is because the models are never actually retrieved when executing the delete statement.</source>
          <target state="translated">Eloquentを介して一括削除ステートメントを実行 &lt;code&gt;deleting&lt;/code&gt; と、 &lt;code&gt;deleted&lt;/code&gt; モデルに対して削除および削除されたモデルイベントが発生しません。これは、deleteステートメントの実行時にモデルが実際に取得されることはないためです。</target>
        </trans-unit>
        <trans-unit id="ec3b939c6ae0eeae4fc27cd1bd057ac8bd430bec" translate="yes" xml:space="preserve">
          <source>When executing the code above, the underlying subscription item with the &lt;code&gt;basic-plan&lt;/code&gt; is deleted and the one with the &lt;code&gt;chat-plan&lt;/code&gt; is preserved. Additionally, a new subscription item for the new &lt;code&gt;pro-plan&lt;/code&gt; is created.</source>
          <target state="translated">上記のコードを実行すると、 &lt;code&gt;basic-plan&lt;/code&gt; の基になるサブスクリプションアイテムが削除され、 &lt;code&gt;chat-plan&lt;/code&gt; プランのサブスクリプションアイテムが保持されます。さらに、新しい &lt;code&gt;pro-plan&lt;/code&gt; 新しいサブスクリプションアイテムが作成されます。</target>
        </trans-unit>
        <trans-unit id="2078110991c2cb517f80e63597da66f796b090f9" translate="yes" xml:space="preserve">
          <source>When faking requests, HTTP client middleware are not executed. You should define expectations for faked responses as if these middleware have run correctly.</source>
          <target state="translated">リクエストを偽装すると、HTTP クライアントミドルウェアは実行されません。これらのミドルウェアが正しく実行されたかのように、フェイクされたレスポンスに対する期待値を定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="14eea13dc2b6be36270c96abb8931250facc6f1d" translate="yes" xml:space="preserve">
          <source>When faking responses, you may occasionally wish to inspect the requests the client receives in order to make sure your application is sending the correct data or headers. You may accomplish this by calling the &lt;code&gt;Http::assertSent&lt;/code&gt; method after calling &lt;code&gt;Http::fake&lt;/code&gt;.</source>
          <target state="translated">応答を偽造する場合、アプリケーションが正しいデータまたはヘッダーを送信していることを確認するために、クライアントが受信する要求を検査したい場合があります。あなたは呼び出すことによって、これを達成することができる &lt;code&gt;Http::assertSent&lt;/code&gt; 呼び出した後にメソッドを &lt;code&gt;Http::fake&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bbba5dea965ae2dd54f4f5383ed17fd26b796e3" translate="yes" xml:space="preserve">
          <source>When getting started with Laravel, many developers are confused by the lack of a &lt;code&gt;models&lt;/code&gt; directory. However, the lack of such a directory is intentional. We find the word &quot;models&quot; ambiguous since it means many different things to many different people. Some developers refer to an application's &quot;model&quot; as the totality of all of its business logic, while others refer to &quot;models&quot; as classes that interact with a relational database.</source>
          <target state="translated">Laravelを使い始めると、多くの開発者は &lt;code&gt;models&lt;/code&gt; ディレクトリがないことに戸惑います。ただし、そのようなディレクトリの欠如は意図的なものです。「モデル」という言葉は、多くの異なる人々にとって多くの異なることを意味するため、あいまいです。一部の開発者は、アプリケーションの「モデル」をすべてのビジネスロジックの全体として参照しますが、「モデル」をリレーショナルデータベースと対話するクラスとして参照します。</target>
        </trans-unit>
        <trans-unit id="611d51d36dc67aff091e4f2a7be4bc9ec356b5e6" translate="yes" xml:space="preserve">
          <source>When given an array, the &lt;code&gt;has&lt;/code&gt; method will determine if all of the specified values are present:</source>
          <target state="translated">配列が指定されると、 &lt;code&gt;has&lt;/code&gt; メソッドは指定された値がすべて存在するかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="885bd7735d5aa27fcff220e5f9a01155cb9d9730" translate="yes" xml:space="preserve">
          <source>When handling an incoming request authenticated by Sanctum, you may determine if the token has a given ability using the &lt;code&gt;tokenCan&lt;/code&gt; method:</source>
          <target state="translated">Sanctumによって認証された着信要求を処理する場合、 &lt;code&gt;tokenCan&lt;/code&gt; メソッドを使用して、トークンに特定の機能があるかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="ce11ad0a398efedb0607c3112c42d1b116894b60" translate="yes" xml:space="preserve">
          <source>When hiding relationships, use the relationship's method name.</source>
          <target state="translated">リレーションシップを隠す場合は、リレーションシップのメソッド名を使用します。</target>
        </trans-unit>
        <trans-unit id="ae01e7b52e1d18b232afcf2de3de0f4c1d57311c" translate="yes" xml:space="preserve">
          <source>When in a nested loop, the parent's loop variable.</source>
          <target state="translated">入れ子になったループ内では、親のループ変数。</target>
        </trans-unit>
        <trans-unit id="b9a519d5ad3076c7df6ad8c41a3fcaf2c900c8c7" translate="yes" xml:space="preserve">
          <source>When injecting a model ID to a route or controller action, you will often query to retrieve the model that corresponds to that ID. Laravel route model binding provides a convenient way to automatically inject the model instances directly into your routes. For example, instead of injecting a user's ID, you can inject the entire &lt;code&gt;User&lt;/code&gt; model instance that matches the given ID.</source>
          <target state="translated">ルートまたはコントローラーアクションにモデルIDを挿入する場合、そのIDに対応するモデルを取得するためにクエリを実行することがよくあります。Laravelルートモデルバインディングは、モデルインスタンスをルートに直接自動的に挿入する便利な方法を提供します。たとえば、ユーザーのIDを挿入する代わりに、特定のIDに一致する &lt;code&gt;User&lt;/code&gt; モデルインスタンス全体を挿入できます。</target>
        </trans-unit>
        <trans-unit id="e87b699f41db3a57b8fb75bd606266db3c825a24" translate="yes" xml:space="preserve">
          <source>When injecting an Eloquent model into a job, it is automatically serialized before being placed on the queue and restored when the job is processed. However, if the model has been deleted while the job was waiting to be processed by a worker, your job may fail with a &lt;code&gt;ModelNotFoundException&lt;/code&gt;.</source>
          <target state="translated">Eloquentモデルをジョブに挿入すると、キューに配置される前に自動的にシリアル化され、ジョブの処理時に復元されます。ただし、ジョブがワーカーによる処理を待機している間にモデルが削除された場合、ジョブは &lt;code&gt;ModelNotFoundException&lt;/code&gt; で失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="570d91dd65073b79d750be698d666985f01a318d" translate="yes" xml:space="preserve">
          <source>When interacting with uploaded files, you may use the &lt;code&gt;storePublicly&lt;/code&gt; and &lt;code&gt;storePubliclyAs&lt;/code&gt; methods to store the uploaded file with &lt;code&gt;public&lt;/code&gt; visibility:</source>
          <target state="translated">アップロードされたファイルと対話するときは、使用すること &lt;code&gt;storePublicly&lt;/code&gt; と &lt;code&gt;storePubliclyAs&lt;/code&gt; でアップロードされたファイル保存する方法を &lt;code&gt;public&lt;/code&gt; の可視性を：</target>
        </trans-unit>
        <trans-unit id="249f34c33e6a94024054b76a71f98eebd2fbeab9" translate="yes" xml:space="preserve">
          <source>When interpreting the words and actions of others, participants should always assume good intentions.</source>
          <target state="translated">他人の言動を解釈する際には、参加者は常に善意を前提としなければなりません。</target>
        </trans-unit>
        <trans-unit id="5f8c53532795061653ab60af8bb7bf8e4052ccfb" translate="yes" xml:space="preserve">
          <source>When issuing a mass update or delete via Eloquent, the &lt;code&gt;saved&lt;/code&gt;, &lt;code&gt;updated&lt;/code&gt;, &lt;code&gt;deleting&lt;/code&gt;, and &lt;code&gt;deleted&lt;/code&gt; model events will not be fired for the affected models. This is because the models are never actually retrieved when issuing a mass update or delete.</source>
          <target state="translated">Eloquentを介して一括更新または削除を発行する場合、影響を受けるモデルに対して、 &lt;code&gt;saved&lt;/code&gt; 、 &lt;code&gt;updated&lt;/code&gt; 、 &lt;code&gt;deleting&lt;/code&gt; 、および &lt;code&gt;deleted&lt;/code&gt; モデルイベントは発生しません。これは、一括更新または一括削除を発行するときにモデルが実際に取得されることがないためです。</target>
        </trans-unit>
        <trans-unit id="59838b8d4c3d40af66dbfad5a0a5ca84f28599b7" translate="yes" xml:space="preserve">
          <source>When issuing a mass update via Eloquent, the &lt;code&gt;saved&lt;/code&gt; and &lt;code&gt;updated&lt;/code&gt; model events will not be fired for the updated models. This is because the models are never actually retrieved when issuing a mass update.</source>
          <target state="translated">Eloquentを介して一括更新を発行する場合、 &lt;code&gt;saved&lt;/code&gt; および &lt;code&gt;updated&lt;/code&gt; モデルイベントは、更新されたモデルに対して発生しません。これは、一括更新を発行するときにモデルが実際に取得されることはないためです。</target>
        </trans-unit>
        <trans-unit id="0ed9982b4c7c93de60e9b8eadcba9cc2e3a3ce19" translate="yes" xml:space="preserve">
          <source>When issuing a mass update via Eloquent, the &lt;code&gt;saving&lt;/code&gt;, &lt;code&gt;saved&lt;/code&gt;, &lt;code&gt;updating&lt;/code&gt;, and &lt;code&gt;updated&lt;/code&gt; model events will not be fired for the updated models. This is because the models are never actually retrieved when issuing a mass update.</source>
          <target state="translated">Eloquentを介して一括更新を発行する場合、 &lt;code&gt;saving&lt;/code&gt; 、 &lt;code&gt;saved&lt;/code&gt; 、 &lt;code&gt;updating&lt;/code&gt; 、および &lt;code&gt;updated&lt;/code&gt; モデルイベントは、更新されたモデルに対して発生しません。これは、一括更新を発行するときにモデルが実際に取得されることがないためです。</target>
        </trans-unit>
        <trans-unit id="f5db836e6f3715e38e3e0e8d21d918ba72abf0b2" translate="yes" xml:space="preserve">
          <source>When issuing tokens for a mobile application, you are also free to specify &lt;a href=&quot;#token-abilities&quot;&gt;token abilities&lt;/a&gt;</source>
          <target state="translated">モバイルアプリケーションのトークンを発行するときは、&lt;a href=&quot;#token-abilities&quot;&gt;トークンの機能を&lt;/a&gt;自由に指定することもできます</target>
        </trans-unit>
        <trans-unit id="badd832e930e49cc7f3a838f8f1497107483fe29" translate="yes" xml:space="preserve">
          <source>When jobs are available on the queue, the worker will keep processing jobs with no delay in between them. However, the &lt;code&gt;sleep&lt;/code&gt; option determines how long (in seconds) the worker will &quot;sleep&quot; if there are no new jobs available. While sleeping, the worker will not process any new jobs - the jobs will be processed after the worker wakes up again.</source>
          <target state="translated">キューでジョブが利用可能になると、ワーカーはジョブ間の遅延なくジョブを処理し続けます。ただし、 &lt;code&gt;sleep&lt;/code&gt; オプションは、利用可能な新しいジョブがない場合にワーカーが「スリープ」する時間（秒単位）を決定します。就寝中は、ワーカーは新しいジョブを処理しません。ジョブは、ワーカーが再びウェイクアップした後に処理されます。</target>
        </trans-unit>
        <trans-unit id="6ce94f10f68e74600dc843e2e60d84b6ce303e24" translate="yes" xml:space="preserve">
          <source>When listing the invoices for the customer, you may use the invoice's helper methods to display the relevant invoice information. For example, you may wish to list every invoice in a table, allowing the user to easily download any of them:</source>
          <target state="translated">顧客の請求書をリストアップする際に、請求書のヘルパーメソッドを使用して関連する請求書情報を表示することができます。例えば、すべての請求書をテーブルにリストアップして、ユーザーが簡単にダウンロードできるようにしたい場合があります。</target>
        </trans-unit>
        <trans-unit id="a9eab307f3b3056835aefd5a1bb7af35cea64621" translate="yes" xml:space="preserve">
          <source>When listing the receipts for the customer, you may use the receipt's helper methods to display the relevant receipt information. For example, you may wish to list every receipt in a table, allowing the user to easily download any of the receipts:</source>
          <target state="translated">顧客のレシートをリストアップする際に、レシートのヘルパーメソッドを使用して関連するレシート情報を表示することができます。例えば、すべてのレシートを表にリストアップして、ユーザーが簡単にレシートをダウンロードできるようにしたい場合があります。</target>
        </trans-unit>
        <trans-unit id="630491cd1fb162df1d41d18373cd26e63a591db7" translate="yes" xml:space="preserve">
          <source>When looping, a &lt;code&gt;$loop&lt;/code&gt; variable will be available inside of your loop. This variable provides access to some useful bits of information such as the current loop index and whether this is the first or last iteration through the loop:</source>
          <target state="translated">ループする場合、ループ内で &lt;code&gt;$loop&lt;/code&gt; 変数を使用できます。この変数は、現在のループインデックスや、これがループの最初の反復か最後の反復かなど、いくつかの有用な情報へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="1c04573d3d5765e7c8354d81a1f28088357b68c2" translate="yes" xml:space="preserve">
          <source>When looping, you may use the &lt;a href=&quot;#the-loop-variable&quot;&gt;loop variable&lt;/a&gt; to gain valuable information about the loop, such as whether you are in the first or last iteration through the loop.</source>
          <target state="translated">ループするとき、&lt;a href=&quot;#the-loop-variable&quot;&gt;ループ変数&lt;/a&gt;を使用して、ループの最初または最後の反復にいるかどうかなど、ループに関する貴重な情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="7fd8422a7db5f61bc851553a8d572990ab747eea" translate="yes" xml:space="preserve">
          <source>When making &lt;code&gt;GET&lt;/code&gt; requests, you may either append a query string to the URL directly or pass an array of key / value pairs as the second argument to the &lt;code&gt;get&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;GET&lt;/code&gt; リクエストを行うときは、クエリ文字列をURLに直接追加するか、キーと値のペアの配列を &lt;code&gt;get&lt;/code&gt; メソッドの2番目の引数として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="37a87a030b094e3f3c88d7997812b03c6b5877bb" translate="yes" xml:space="preserve">
          <source>When making a path assertion such as &lt;code&gt;$browser-&amp;gt;assertPathIs('/home')&lt;/code&gt;, the assertion can fail if &lt;code&gt;window.location.pathname&lt;/code&gt; is being updated asynchronously. You may use the &lt;code&gt;waitForLocation&lt;/code&gt; method to wait for the location to be a given value:</source>
          <target state="translated">&lt;code&gt;$browser-&amp;gt;assertPathIs('/home')&lt;/code&gt; などのパスアサーションを作成する場合、 &lt;code&gt;window.location.pathname&lt;/code&gt; が非同期に更新されていると、アサーションが失敗する可能性があります。ロケーションが指定された値になるまで待機するには、 &lt;code&gt;waitForLocation&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="112e6bee110402287d445aaaa363d31734163c0c" translate="yes" xml:space="preserve">
          <source>When manually creating a paginator instance, you should manually &quot;slice&quot; the array of results you pass to the paginator. If you're unsure how to do this, check out the &lt;a href=&quot;https://secure.php.net/manual/en/function.array-slice.php&quot;&gt;array_slice&lt;/a&gt; PHP function.</source>
          <target state="translated">paginatorインスタンスを手動で作成するときは、paginatorに渡す結果の配列を手動で「スライス」する必要があります。これを行う方法がわからない場合は、&lt;a href=&quot;https://secure.php.net/manual/en/function.array-slice.php&quot;&gt;array_slice&lt;/a&gt; PHP関数を確認してください。</target>
        </trans-unit>
        <trans-unit id="c3997b6ee918c58bec94022a8b090aeb8ae0eb42" translate="yes" xml:space="preserve">
          <source>When manually implementing email verification, you are required to define the contents of the verification notice view yourself. If you would like scaffolding that includes all necessary authentication and verification views, check out &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;.</source>
          <target state="translated">電子メール検証を手動で実装する場合は、検証通知ビューの内容を自分で定義する必要があります。必要なすべての認証および検証ビューを含むスキャフォールディングが必要な場合は、&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;LaravelJetstreamを&lt;/a&gt;チェックしてください。</target>
        </trans-unit>
        <trans-unit id="9916b7441b1355d7a1a57fdefe45a3d44db0b8cd" translate="yes" xml:space="preserve">
          <source>When manually implementing password resets, you are required to define the contents of the views and routes yourself. If you would like scaffolding that includes all necessary authentication and verification logic, check out &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;.</source>
          <target state="translated">パスワードのリセットを手動で実装する場合は、ビューの内容とルートを自分で定義する必要があります。必要なすべての認証および検証ロジックを含むスキャフォールディングが必要な場合は、&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;LaravelJetstreamを&lt;/a&gt;チェックしてください。</target>
        </trans-unit>
        <trans-unit id="a60e8976240c19309b6131cde05de8544a79ab4b" translate="yes" xml:space="preserve">
          <source>When merging attributes that are not &lt;code&gt;class&lt;/code&gt; attributes, the values provided to the &lt;code&gt;merge&lt;/code&gt; method will be considered the &quot;default&quot; values of attribute which can be overwritten by the component's consumer. Unlike &lt;code&gt;class&lt;/code&gt; attributes, non-class attributes are not appended to each other. For example, a &lt;code&gt;button&lt;/code&gt; component may look like the following:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 属性ではない属性をマージする場合、 &lt;code&gt;merge&lt;/code&gt; メソッドに提供された値は、コンポーネントのコンシューマーによって上書きされる可能性のある属性の「デフォルト」値と見なされます。 &lt;code&gt;class&lt;/code&gt; 属性とは異なり、非クラス属性は相互に追加されません。たとえば、 &lt;code&gt;button&lt;/code&gt; コンポーネントは次のようになります。</target>
        </trans-unit>
        <trans-unit id="997bdd68cd01c1f694df0ebacf68cfd611f464b6" translate="yes" xml:space="preserve">
          <source>When mocking an object that is going to be injected into your application via Laravel's service container, you will need to bind your mocked instance into the container as an &lt;code&gt;instance&lt;/code&gt; binding. This will instruct the container to use your mocked instance of the object instead of constructing the object itself:</source>
          <target state="translated">Laravelのサービスコンテナを介してアプリケーションに注入されるオブジェクトをモックする場合、モックされた &lt;code&gt;instance&lt;/code&gt; バインディングとしてコンテナにバインドする必要があります。これにより、オブジェクト自体を作成する代わりに、オブジェクトのモックインスタンスを使用するようにコンテナに指示されます。</target>
        </trans-unit>
        <trans-unit id="a7e0426f2335d7f8f4061e58791752606c1d0ce5" translate="yes" xml:space="preserve">
          <source>When passing information in this manner, the data should be an array with key / value pairs. Inside your view, you can then access each value using its corresponding key, such as &lt;code&gt;&amp;lt;?php echo $key; ?&amp;gt;&lt;/code&gt;. As an alternative to passing a complete array of data to the &lt;code&gt;view&lt;/code&gt; helper function, you may use the &lt;code&gt;with&lt;/code&gt; method to add individual pieces of data to the view:</source>
          <target state="translated">この方法で情報を渡す場合、データはキーと値のペアを持つ配列である必要があります。ビュー内で、 &lt;code&gt;&amp;lt;?php echo $key; ?&amp;gt;&lt;/code&gt; などの対応するキーを使用して各値にアクセスできます。 ？&amp;gt;。データの完全な配列を &lt;code&gt;view&lt;/code&gt; ヘルパー関数に渡す代わりに、 &lt;code&gt;with&lt;/code&gt; メソッドを使用して、個々のデータをビューに追加できます。</target>
        </trans-unit>
        <trans-unit id="4cee1b7f11aeea844f3e37c303c175b5c6b6fed7" translate="yes" xml:space="preserve">
          <source>When providing metadata, please avoid using &lt;code&gt;subscription_name&lt;/code&gt; as a metadata key. This key is reserved for internal use by Cashier.</source>
          <target state="translated">メタデータを提供するときは、 &lt;code&gt;subscription_name&lt;/code&gt; をメタデータキーとして使用しないでください。このキーは、キャッシャーによる内部使用のために予約されています。</target>
        </trans-unit>
        <trans-unit id="d6f7f5f784ae24b730ca163e333bc620653b7876" translate="yes" xml:space="preserve">
          <source>When receiving authorization requests, Passport will automatically display a template to the user allowing them to approve or deny the authorization request. If they approve the request, they will be redirected back to the &lt;code&gt;redirect_uri&lt;/code&gt; that was specified by the consuming application. The &lt;code&gt;redirect_uri&lt;/code&gt; must match the &lt;code&gt;redirect&lt;/code&gt; URL that was specified when the client was created.</source>
          <target state="translated">Passportは、承認要求を受信すると、ユーザーにテンプレートを自動的に表示して、承認要求を承認または拒否できるようにします。ユーザーがリクエストを承認すると、使用するアプリケーションによって指定された &lt;code&gt;redirect_uri&lt;/code&gt; にリダイレクトされます。 &lt;code&gt;redirect_uri&lt;/code&gt; 一致している必要があります &lt;code&gt;redirect&lt;/code&gt; クライアントの作成時に指定されたURLを。</target>
        </trans-unit>
        <trans-unit id="2832860d0939db625b735827d5fd2e980923b294" translate="yes" xml:space="preserve">
          <source>When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as &lt;code&gt;5.7.*&lt;/code&gt;, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less.</source>
          <target state="translated">Laravelのメジャーリリースには重大な変更が含まれているため、アプリケーションまたはパッケージからLaravelフレームワークまたはそのコンポーネントを参照するときは、常に &lt;code&gt;5.7.*&lt;/code&gt; などのバージョン制約を使用する必要があります。ただし、1日以内に新しいメジャーリリースに更新できるように常に努めています。</target>
        </trans-unit>
        <trans-unit id="ecc2962ca6b6d6ad9094131317c7b960e5941338" translate="yes" xml:space="preserve">
          <source>When referencing the Laravel framework or its components from your application or package, you should always use a version constraint such as &lt;code&gt;^8.0&lt;/code&gt;, since major releases of Laravel do include breaking changes. However, we strive to always ensure you may update to a new major release in one day or less.</source>
          <target state="translated">アプリケーションまたはパッケージからLaravelフレームワークまたはそのコンポーネントを参照する場合、Laravelのメジャーリリースには重大な変更が含まれているため、常に &lt;code&gt;^8.0&lt;/code&gt; などのバージョン制約を使用する必要があります。ただし、1日以内に新しいメジャーリリースに更新できるように常に努めています。</target>
        </trans-unit>
        <trans-unit id="4d477ea5139573bfab84fe05919a01eb014fbc63" translate="yes" xml:space="preserve">
          <source>When registering event listeners manually, you may wrap the listener Closure within the &lt;code&gt;Illuminate\Events\queueable&lt;/code&gt; function to instruct Laravel to execute the listener using the &lt;a href=&quot;queues&quot;&gt;queue&lt;/a&gt;:</source>
          <target state="translated">イベントリスナーを手動で登録する場合、 &lt;code&gt;Illuminate\Events\queueable&lt;/code&gt; 関数内でリスナーClosureをラップして、&lt;a href=&quot;queues&quot;&gt;キュー&lt;/a&gt;を使用してリスナーを実行するようにLaravelに指示できます。</target>
        </trans-unit>
        <trans-unit id="67740bd53dd394d2ca478a0a40cbbcb6f6dd2970" translate="yes" xml:space="preserve">
          <source>When registering routes for single action controllers, you do not need to specify a method:</source>
          <target state="translated">シングルアクションコントローラにルートを登録する場合は、メソッドを指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="85796647e4fa4a49763539cbd680e854a8f5d50d" translate="yes" xml:space="preserve">
          <source>When removing a &lt;code&gt;belongsTo&lt;/code&gt; relationship, you may use the &lt;code&gt;dissociate&lt;/code&gt; method. This method will set the relationship's foreign key to &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;belongsTo&lt;/code&gt; 関係を削除する場合、 &lt;code&gt;dissociate&lt;/code&gt; メソッドを使用できます。このメソッドは、関係の外部キーを &lt;code&gt;null&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="a7bf667a1788129a6fa64adeb77396163dd8f8f7" translate="yes" xml:space="preserve">
          <source>When requesting an access token using the authorization code grant, consumers should specify their desired scopes as the &lt;code&gt;scope&lt;/code&gt; query string parameter. The &lt;code&gt;scope&lt;/code&gt; parameter should be a space-delimited list of scopes:</source>
          <target state="translated">認証コード付与を使用してアクセストークンを要求する場合、コンシューマは目的のスコープを &lt;code&gt;scope&lt;/code&gt; クエリ文字列パラメータとして指定する必要があります。 &lt;code&gt;scope&lt;/code&gt; パラメータは、スコープのスペース区切りのリストでなければなりません。</target>
        </trans-unit>
        <trans-unit id="a8af0df12da61722f088cdc349e3a263f56a034e" translate="yes" xml:space="preserve">
          <source>When returning a resource collection from a route, Laravel resets the collection's keys so that they are in simple numerical order. However, you may add a &lt;code&gt;preserveKeys&lt;/code&gt; property to your resource class indicating if collection keys should be preserved:</source>
          <target state="translated">ルートからリソースコレクションを返す場合、Laravelはコレクションのキーをリセットして単純な番号順にします。ただし、コレクションキーを保持する必要があるかどうかを示す &lt;code&gt;preserveKeys&lt;/code&gt; プロパティをリソースクラスに追加できます。</target>
        </trans-unit>
        <trans-unit id="4f34f7552a82bf023f8adb374ea206e28d2b9b04" translate="yes" xml:space="preserve">
          <source>When returning additional meta data from your resources, you never have to worry about accidentally overriding the &lt;code&gt;links&lt;/code&gt; or &lt;code&gt;meta&lt;/code&gt; keys that are automatically added by Laravel when returning paginated responses. Any additional &lt;code&gt;links&lt;/code&gt; you define will be merged with the links provided by the paginator.</source>
          <target state="translated">リソースから追​​加のメタデータを返す場合、ページ分割された応答を返すときにLaravelによって自動的に追加される &lt;code&gt;links&lt;/code&gt; または &lt;code&gt;meta&lt;/code&gt; 誤って上書きすることを心配する必要はありません。定義する追加の &lt;code&gt;links&lt;/code&gt; は、ページ編集者が提供するリンクとマージされます。</target>
        </trans-unit>
        <trans-unit id="3b659e248971c7cad5e72326fc37d62e8eba5142" translate="yes" xml:space="preserve">
          <source>When returning an authorization response from your gate, the &lt;code&gt;Gate::allows&lt;/code&gt; method will still return a simple boolean value; however, you may use the &lt;code&gt;Gate::inspect&lt;/code&gt; method to get the full authorization response returned by the gate:</source>
          <target state="translated">ゲートから承認応答を返す場合でも、 &lt;code&gt;Gate::allows&lt;/code&gt; メソッドは単純なブール値を返します。ただし、 &lt;code&gt;Gate::inspect&lt;/code&gt; メソッドを使用して、ゲートから返される完全な承認応答を取得することはできます。</target>
        </trans-unit>
        <trans-unit id="1e542c7317b65712ce596fe952430f795900ad12" translate="yes" xml:space="preserve">
          <source>When returning an authorization response from your policy, the &lt;code&gt;Gate::allows&lt;/code&gt; method will still return a simple boolean value; however, you may use the &lt;code&gt;Gate::inspect&lt;/code&gt; method to get the full authorization response returned by the gate:</source>
          <target state="translated">ポリシーから承認応答を返す場合でも、 &lt;code&gt;Gate::allows&lt;/code&gt; メソッドは単純なブール値を返します。ただし、 &lt;code&gt;Gate::inspect&lt;/code&gt; メソッドを使用して、ゲートから返される完全な承認応答を取得することはできます。</target>
        </trans-unit>
        <trans-unit id="235950e59c45df6dbd55d8c7429704a2775b8a87" translate="yes" xml:space="preserve">
          <source>When returning paginated collections in a resource response, Laravel will wrap your resource data in a &lt;code&gt;data&lt;/code&gt; key even if the &lt;code&gt;withoutWrapping&lt;/code&gt; method has been called. This is because paginated responses always contain &lt;code&gt;meta&lt;/code&gt; and &lt;code&gt;links&lt;/code&gt; keys with information about the paginator's state:</source>
          <target state="translated">リソース応答でページ分割されたコレクションを返す場合、Laravelは &lt;code&gt;withoutWrapping&lt;/code&gt; メソッドが呼び出されていても、リソースデータを &lt;code&gt;data&lt;/code&gt; キーでラップします。ページ分割応答は常に含まれているためです &lt;code&gt;meta&lt;/code&gt; および &lt;code&gt;links&lt;/code&gt; ページネータの状態に関する情報でキーを：</target>
        </trans-unit>
        <trans-unit id="55aef540220ab8c145c79470cc7804f48f7e641b" translate="yes" xml:space="preserve">
          <source>When running tests via &lt;code&gt;phpunit&lt;/code&gt;, Laravel will automatically set the configuration environment to &lt;code&gt;testing&lt;/code&gt; because of the environment variables defined in the &lt;code&gt;phpunit.xml&lt;/code&gt; file. Laravel also automatically configures the session and cache to the &lt;code&gt;array&lt;/code&gt; driver while testing, meaning no session or cache data will be persisted while testing.</source>
          <target state="translated">&lt;code&gt;phpunit&lt;/code&gt; を介してテストを実行すると、 &lt;code&gt;phpunit.xml&lt;/code&gt; ファイルで定義された環境変数により、Laravelは設定環境を &lt;code&gt;testing&lt;/code&gt; 自動的に設定します。Laravelはまた、テスト中にセッションと &lt;code&gt;array&lt;/code&gt; ドライバーへのキャッシュを自動的に構成します。つまり、テスト中にセッションまたはキャッシュデータは保持されません。</target>
        </trans-unit>
        <trans-unit id="ba33530bda7d5433d01b7b160dec5838a201d990" translate="yes" xml:space="preserve">
          <source>When running tests via &lt;code&gt;vendor/bin/phpunit&lt;/code&gt;, Laravel will automatically set the configuration environment to &lt;code&gt;testing&lt;/code&gt; because of the environment variables defined in the &lt;code&gt;phpunit.xml&lt;/code&gt; file. Laravel also automatically configures the session and cache to the &lt;code&gt;array&lt;/code&gt; driver while testing, meaning no session or cache data will be persisted while testing.</source>
          <target state="translated">&lt;code&gt;vendor/bin/phpunit&lt;/code&gt; を介してテストを実行すると、 &lt;code&gt;phpunit.xml&lt;/code&gt; ファイルで定義されている環境変数により、Laravelは構成環境を &lt;code&gt;testing&lt;/code&gt; 自動的に設定します。 Laravelはまた、テスト中にセッションとキャッシュを &lt;code&gt;array&lt;/code&gt; ドライバーに自動的に構成します。つまり、テスト中にセッションまたはキャッシュデータが保持されることはありません。</target>
        </trans-unit>
        <trans-unit id="3642a6010302d9a2d8571729ccc47dd22312b0f6" translate="yes" xml:space="preserve">
          <source>When running tests, Dusk will back-up your &lt;code&gt;.env&lt;/code&gt; file and rename your Dusk environment to &lt;code&gt;.env&lt;/code&gt;. Once the tests have completed, your &lt;code&gt;.env&lt;/code&gt; file will be restored.</source>
          <target state="translated">テストを実行すると、Duskは &lt;code&gt;.env&lt;/code&gt; ファイルを &lt;code&gt;.env&lt;/code&gt; 、Dusk環境の名前を.envに変更します。テストが完了すると、 &lt;code&gt;.env&lt;/code&gt; ファイルが復元されます。</target>
        </trans-unit>
        <trans-unit id="e548e334c81e5793d6808a41993a74d99fa7f376" translate="yes" xml:space="preserve">
          <source>When running your applications behind a load balancer that terminates TLS / SSL certificates, you may notice your application sometimes does not generate HTTPS links. Typically this is because your application is being forwarded traffic from your load balancer on port 80 and does not know it should generate secure links.</source>
          <target state="translated">TLS/SSL 証明書を終了するロードバランサの後ろでアプリケーションを実行している場合、アプリケーションが HTTPS リンクを生成しないことがあることに気づくかもしれません。一般的にこれは、アプリケーションがロードバランサからのトラフィックをポート80で転送されていて、安全なリンクを生成する必要があることを知らないためです。</target>
        </trans-unit>
        <trans-unit id="69c1f1f03f6870f116f900338c453c7b441c7d2f" translate="yes" xml:space="preserve">
          <source>When sending JSON requests to your application, you may access the JSON data via the &lt;code&gt;input&lt;/code&gt; method as long as the &lt;code&gt;Content-Type&lt;/code&gt; header of the request is properly set to &lt;code&gt;application/json&lt;/code&gt;. You may even use &quot;dot&quot; syntax to dig into JSON arrays:</source>
          <target state="translated">アプリケーションにJSONリクエストを送信する場合、リクエストの &lt;code&gt;Content-Type&lt;/code&gt; ヘッダーが &lt;code&gt;application/json&lt;/code&gt; に適切に設定されている限り、 &lt;code&gt;input&lt;/code&gt; メソッドを介してJSONデータにアクセスできます。「ドット」構文を使用してJSON配列を掘り下げることもできます。</target>
        </trans-unit>
        <trans-unit id="ae17b9d6ffa7bc93026e7359a3c906c2bac4b23f" translate="yes" xml:space="preserve">
          <source>When sending mail notifications, be sure to set the &lt;code&gt;name&lt;/code&gt; value in your &lt;code&gt;config/app.php&lt;/code&gt; configuration file. This value will be used in the header and footer of your mail notification messages.</source>
          <target state="translated">メール通知を送信するときは、必ず &lt;code&gt;config/app.php&lt;/code&gt; 構成ファイルに &lt;code&gt;name&lt;/code&gt; 値を設定してください。この値は、メール通知メッセージのヘッダーとフッターで使用されます。</target>
        </trans-unit>
        <trans-unit id="a57bedb41b07e62fe43b1a2fd5924faeb27f2ee0" translate="yes" xml:space="preserve">
          <source>When sending notifications via the &lt;code&gt;mail&lt;/code&gt; channel, the notification system will automatically look for an &lt;code&gt;email&lt;/code&gt; property on your notifiable entity. You may customize which email address is used to deliver the notification by defining a &lt;code&gt;routeNotificationForMail&lt;/code&gt; method on the entity:</source>
          <target state="translated">&lt;code&gt;mail&lt;/code&gt; チャネルを介して通知を送信する場合、通知システムは通知可能なエンティティの &lt;code&gt;email&lt;/code&gt; プロパティを自動的に検索します。エンティティに &lt;code&gt;routeNotificationForMail&lt;/code&gt; メソッドを定義することで、通知の配信に使用するメールアドレスをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="25492d9feabe4c50f8dd3f0051c456deb51f87bd" translate="yes" xml:space="preserve">
          <source>When sending notifications via the &lt;code&gt;nexmo&lt;/code&gt; channel, the notification system will automatically look for a &lt;code&gt;phone_number&lt;/code&gt; attribute on the notifiable entity. If you would like to customize the phone number the notification is delivered to, define a &lt;code&gt;routeNotificationForNexmo&lt;/code&gt; method on the entity:</source>
          <target state="translated">&lt;code&gt;nexmo&lt;/code&gt; チャネルを介して通知を送信する場合、通知システムは通知可能なエンティティの &lt;code&gt;phone_number&lt;/code&gt; 属性を自動的に探します。通知の配信先の電話番号をカスタマイズする場合は、エンティティに &lt;code&gt;routeNotificationForNexmo&lt;/code&gt; メソッドを定義します。</target>
        </trans-unit>
        <trans-unit id="ed35dc09fc8b95398c7fe494f4b20ba8a4a48e0a" translate="yes" xml:space="preserve">
          <source>When storing credit cards to a customer for future use, the Stripe Setup Intents API must be used to securely gather the customer's payment method details. A &quot;Setup Intent&quot; indicates to Stripe the intention to charge a customer's payment method. Cashier's &lt;code&gt;Billable&lt;/code&gt; trait includes the &lt;code&gt;createSetupIntent&lt;/code&gt; to easily create a new Setup Intent. You should call this method from the route or controller that will render the form which gathers your customer's payment method details:</source>
          <target state="translated">将来使用するためにクレジットカードを顧客に保存する場合、Stripe Setup Intents APIを使用して、顧客の支払い方法の詳細を安全に収集する必要があります。 「セットアップインテント」は、顧客の支払い方法に請求するインテントをストライプ化することを示します。キャッシャーの &lt;code&gt;Billable&lt;/code&gt; な特性には、新しいセットアップインテントを簡単に作成するための &lt;code&gt;createSetupIntent&lt;/code&gt; が含まれています。このメソッドは、顧客の支払い方法の詳細を収集するフォームをレンダリングするルートまたはコントローラーから呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2c6c348b0b8a7777e0eaf4112f46152e440a338c" translate="yes" xml:space="preserve">
          <source>When testing Laravel applications, you may wish to &quot;mock&quot; certain aspects of your application so they are not actually executed during a given test. For example, when testing a controller that dispatches an event, you may wish to mock the event listeners so they are not actually executed during the test. This allows you to only test the controller's HTTP response without worrying about the execution of the event listeners, since the event listeners can be tested in their own test case.</source>
          <target state="translated">Laravelアプリケーションをテストするとき、アプリケーションの特定の部分を「モック」して、テスト中に実際に実行されないようにしたい場合があります。例えば、イベントをディスパッチするコントローラをテストする場合、イベントリスナーをモックして、テスト中に実際に実行されないようにしたい場合があります。これにより、イベントリスナーはそれ自身のテストケースでテストできるので、イベントリスナーの実行を気にすることなく、コントローラの HTTP レスポンスのみをテストすることができます。</target>
        </trans-unit>
        <trans-unit id="1fa45a32d5f7a441183697a40360a3f6807b3295" translate="yes" xml:space="preserve">
          <source>When testing an application that uses Cashier, you may mock the actual HTTP requests to the Stripe API; however, this requires you to partially re-implement Cashier's own behavior. Therefore, we recommend allowing your tests to hit the actual Stripe API. While this is slower, it provides more confidence that your application is working as expected and any slow tests may be placed within their own PHPUnit testing group.</source>
          <target state="translated">Cashierを使用するアプリケーションをテストする場合、Stripe APIへの実際のHTTPリクエストをモックすることができますが、これはCashierの動作を部分的に再実装する必要があります。そのため、実際のStripe APIをテストすることをお勧めします。この方が遅いですが、アプリケーションが期待通りに動作しているかどうかの確認ができますし、遅いテストはPHPUnitのテストグループ内に置くことができます。</target>
        </trans-unit>
        <trans-unit id="98cd3ef6c47c5747bd1a5816f545f1bf53150caa" translate="yes" xml:space="preserve">
          <source>When testing applications that use JavaScript extensively, it often becomes necessary to &quot;wait&quot; for certain elements or data to be available before proceeding with a test. Dusk makes this a cinch. Using a variety of methods, you may wait for elements to be visible on the page or even wait until a given JavaScript expression evaluates to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">JavaScriptを広範囲に使用するアプリケーションをテストする場合、テストを進める前に、特定の要素またはデータが利用可能になるのを「待つ」ことがしばしば必要になります。夕暮れはこれを簡単にします。さまざまなメソッドを使用して、要素がページに表示されるのを待つか、特定のJavaScript式が &lt;code&gt;true&lt;/code&gt; と評価されるまで待つこともできます。</target>
        </trans-unit>
        <trans-unit id="45e677ccec4561abdeec928c2288738d1f583e95" translate="yes" xml:space="preserve">
          <source>When testing call to the global &lt;code&gt;cache&lt;/code&gt; function, you may use the &lt;code&gt;Cache::shouldReceive&lt;/code&gt; method just as if you were &lt;a href=&quot;mocking#mocking-facades&quot;&gt;testing a facade&lt;/a&gt;.</source>
          <target state="translated">グローバル &lt;code&gt;cache&lt;/code&gt; 関数の呼び出しを&lt;a href=&quot;mocking#mocking-facades&quot;&gt;テストする&lt;/a&gt;ときは、ファサードをテストする場合と同じように、 &lt;code&gt;Cache::shouldReceive&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="a879fb5da9e0f8123c074c9f2797e2b8d5418858" translate="yes" xml:space="preserve">
          <source>When testing, it can be helpful to assert that certain events were dispatched without actually triggering their listeners. Laravel's &lt;a href=&quot;mocking#event-fake&quot;&gt;built-in testing helpers&lt;/a&gt; makes it a cinch.</source>
          <target state="translated">テスト時には、実際にリスナーをトリガーすることなく特定のイベントがディスパッチされたことをアサートすると役立つ場合があります。Laravelの&lt;a href=&quot;mocking#event-fake&quot;&gt;組み込みのテストヘルパー&lt;/a&gt;は、それを簡単にします。</target>
        </trans-unit>
        <trans-unit id="ad592c5fb0da8b655064dc1f9a4b6466c974b717" translate="yes" xml:space="preserve">
          <source>When testing, remember that that Cashier itself already has a great test suite, so you should only focus on testing the subscription and payment flow of your own application and not every underlying Cashier behavior.</source>
          <target state="translated">テストを行う際には、Cashier自体が既に素晴らしいテストスイートを持っていることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="9f51875db37eb34fb69b4ffd328d97078e4182fd" translate="yes" xml:space="preserve">
          <source>When testing, you may need to insert a few records into your database before executing your test. Instead of manually specifying the value of each column when you create this test data, Laravel allows you to define a default set of attributes for each of your &lt;a href=&quot;eloquent&quot;&gt;Eloquent models&lt;/a&gt; using model factories.</source>
          <target state="translated">テストするときは、テストを実行する前に、データベースにいくつかのレコードを挿入する必要がある場合があります。このテストデータを作成するときに各列の値を手動で指定する代わりに、Laravelではモデルファクトリを使用して各&lt;a href=&quot;eloquent&quot;&gt;Eloquentモデルの&lt;/a&gt;デフォルトの属性セットを定義できます。</target>
        </trans-unit>
        <trans-unit id="3c0334a3d63f52a743121f1e734015e741d4e1e6" translate="yes" xml:space="preserve">
          <source>When testing, you may need to insert a few records into your database before executing your test. Instead of manually specifying the value of each column when you create this test data, Laravel allows you to define a default set of attributes for each of your &lt;a href=&quot;eloquent&quot;&gt;Eloquent models&lt;/a&gt; using model factories. To get started, take a look at the &lt;code&gt;database/factories/UserFactory.php&lt;/code&gt; file in your application. Out of the box, this file contains one factory definition:</source>
          <target state="translated">テスト時には、テストを実行する前に、データベースにいくつかのレコードを挿入する必要がある場合があります。このテストデータを作成するときに各列の値を手動で指定する代わりに、Laravelでは、モデルファクトリーを使用して各&lt;a href=&quot;eloquent&quot;&gt;Eloquentモデルの&lt;/a&gt;デフォルトの属性セットを定義できます。はじめに、アプリケーションの &lt;code&gt;database/factories/UserFactory.php&lt;/code&gt; ファイルを確認してください。すぐに使用できるこのファイルには、1つのファクトリー定義が含まれています。</target>
        </trans-unit>
        <trans-unit id="18605dfbf414d2ce71ab0ba28ee9ec60393ae157" translate="yes" xml:space="preserve">
          <source>When testing, you may occasionally need to modify the time returned by helpers such as &lt;code&gt;now&lt;/code&gt; or &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt;. Laravel's base feature test class now includes helpers that allow you to manipulate the current time:</source>
          <target state="translated">テストするとき、 &lt;code&gt;now&lt;/code&gt; や &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt; などのヘルパーから返される時間を変更する必要がある場合があります。Laravelの基本機能テストクラスには、現在の時刻を操作できるヘルパーが含まれるようになりました。</target>
        </trans-unit>
        <trans-unit id="0ff9f4d22bc3a97a80d04c0e9e83159b3e4b7fb7" translate="yes" xml:space="preserve">
          <source>When testing, you may occasionally need to modify the time returned by helpers such as &lt;code&gt;now&lt;/code&gt; or &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt;. Thankfully, Laravel's base feature test class includes helpers that allow you to manipulate the current time:</source>
          <target state="translated">テストするとき、 &lt;code&gt;now&lt;/code&gt; や &lt;code&gt;Illuminate\Support\Carbon::now()&lt;/code&gt; などのヘルパーから返される時間を変更する必要がある場合があります。ありがたいことに、Laravelの基本機能テストクラスには、現在の時刻を操作できるヘルパーが含まれています。</target>
        </trans-unit>
        <trans-unit id="970d26f19b3db6121d4d650d9fa03c5f92a78c3f" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;auth&lt;/code&gt; middleware detects an unauthorized user, it will redirect the user to the &lt;code&gt;login&lt;/code&gt;&lt;a href=&quot;routing#named-routes&quot;&gt;named route&lt;/a&gt;. You may modify this behavior by updating the &lt;code&gt;redirectTo&lt;/code&gt; function in your &lt;code&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt; file:</source>
          <target state="translated">ときに &lt;code&gt;auth&lt;/code&gt; ミドルウェアは、不正なユーザを検出し、それがにユーザーをリダイレクトする &lt;code&gt;login&lt;/code&gt; &lt;a href=&quot;routing#named-routes&quot;&gt;ルートの名前&lt;/a&gt;。 &lt;code&gt;app/Http/Middleware/Authenticate.php&lt;/code&gt; ファイルの &lt;code&gt;redirectTo&lt;/code&gt; 関数を更新して、この動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="6927e9f4a719ab090764b6563414ed96325c3f4d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;cache&lt;/code&gt; function is called without any arguments, it returns an instance of the &lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; implementation, allowing you to call other caching methods:</source>
          <target state="translated">ときに &lt;code&gt;cache&lt;/code&gt; 機能が引数なしで呼び出されると、それはのインスタンスを返し &lt;code&gt;Illuminate\Contracts\Cache\Factory&lt;/code&gt; あなたが他のキャッシュ方法を呼び出すことができるように、実装を：</target>
        </trans-unit>
        <trans-unit id="f97e5983ec21aef682e4dee19437164ddbb5135f" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;logoutOtherDevices&lt;/code&gt; method is invoked, the user's other sessions will be invalidated entirely, meaning they will be &quot;logged out&quot; of all guards they were previously authenticated by.</source>
          <target state="translated">とき &lt;code&gt;logoutOtherDevices&lt;/code&gt; のメソッドが呼び出され、ユーザーの他のセッションは、彼らが以前によって認証されたすべての警備員の「ログアウト」になります意味、完全に無効になります。</target>
        </trans-unit>
        <trans-unit id="8a4506bd3f2bcaabec92b890a813cc98d2844cda" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;preserveKeys&lt;/code&gt; property is set to &lt;code&gt;true&lt;/code&gt;, collection keys will be preserved:</source>
          <target state="translated">とき &lt;code&gt;preserveKeys&lt;/code&gt; のプロパティに設定されて &lt;code&gt;true&lt;/code&gt; 、収集・キーが保存されます。</target>
        </trans-unit>
        <trans-unit id="4a150d50b68b5dd86a664d159484fd6e0ae8bbc9" translate="yes" xml:space="preserve">
          <source>When the Redis broadcaster publishes an event, it will be published on the event's specified channel names and the payload will be a JSON encoded string containing the event name, a &lt;code&gt;data&lt;/code&gt; payload, and the user that generated the event's socket ID (if applicable).</source>
          <target state="translated">Redisブロードキャスターがイベントを発行すると、イベントは指定されたチャネル名で発行され、ペイロードは、イベント名、 &lt;code&gt;data&lt;/code&gt; ペイロード、およびイベントのソケットID（該当する場合）を生成したユーザーを含むJSONエンコードされた文字列になります。</target>
        </trans-unit>
        <trans-unit id="686e4a6bf4809ba17038302a4daa525c2d2af0a2" translate="yes" xml:space="preserve">
          <source>When the application should next be available.</source>
          <target state="translated">次にアプリケーションが利用できるようになるのはいつです。</target>
        </trans-unit>
        <trans-unit id="344323d682cb8cc0c9f899bf1982545dc353be11" translate="yes" xml:space="preserve">
          <source>When the application was put in maintenance mode.</source>
          <target state="translated">アプリケーションをメンテナンスモードにすると</target>
        </trans-unit>
        <trans-unit id="488b9060c48efe2f9f3131028816e44f046dc38c" translate="yes" xml:space="preserve">
          <source>When the event listener is resolved, the service container will read the type-hints on the constructor of the class, and inject the appropriate value. To learn more about registering things in the service container, check out &lt;a href=&quot;container&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">イベントリスナーが解決されると、サービスコンテナーはクラスのコンストラクターの型ヒントを読み取り、適切な値を挿入します。サービスコンテナへの登録について詳しくは&lt;a href=&quot;container&quot;&gt;、ドキュメント&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="c23a45d5c8794af9b6ffe6e2cc871f1486574413" translate="yes" xml:space="preserve">
          <source>When the mobile device uses the token to make an API request to your application, it should pass the token in the &lt;code&gt;Authorization&lt;/code&gt; header as a &lt;code&gt;Bearer&lt;/code&gt; token.</source>
          <target state="translated">モバイルデバイスがトークンを使用してアプリケーションにAPIリクエストを行う場合、モバイルデバイスは &lt;code&gt;Authorization&lt;/code&gt; ヘッダーのトークンを &lt;code&gt;Bearer&lt;/code&gt; トークンとして渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="5f8b6e745ba2d80daa8f5ba25b868f7786122b11" translate="yes" xml:space="preserve">
          <source>When the real-time facade is used, the publisher implementation will be resolved out of the service container using the portion of the interface or class name that appears after the &lt;code&gt;Facades&lt;/code&gt; prefix. When testing, we can use Laravel's built-in facade testing helpers to mock this method call:</source>
          <target state="translated">リアルタイムファサードが使用される場合、パブリッシャー実装は、 &lt;code&gt;Facades&lt;/code&gt; プレフィックスの後に表示されるインターフェイスまたはクラス名の部分を使用して、サービスコンテナーから解決されます。テスト時には、Laravelの組み込みのファサードテストヘルパーを使用して、このメソッド呼び出しを模擬できます。</target>
        </trans-unit>
        <trans-unit id="f14f8f84d1785d45a0514e55bfe9ed7ad825bb64" translate="yes" xml:space="preserve">
          <source>When this configuration option is &lt;code&gt;true&lt;/code&gt;, Scout will not remove soft deleted models from the search index. Instead, it will set a hidden &lt;code&gt;__soft_deleted&lt;/code&gt; attribute on the indexed record. Then, you may use the &lt;code&gt;withTrashed&lt;/code&gt; or &lt;code&gt;onlyTrashed&lt;/code&gt; methods to retrieve the soft deleted records when searching:</source>
          <target state="translated">この構成オプションが &lt;code&gt;true&lt;/code&gt; の場合、スカウトはソフト削除されたモデルを検索インデックスから削除しません。代わりに、インデックス付きレコードに非表示の &lt;code&gt;__soft_deleted&lt;/code&gt; 属性を設定します。次に、 &lt;code&gt;withTrashed&lt;/code&gt; または &lt;code&gt;onlyTrashed&lt;/code&gt; メソッドを使用して、検索時に一時的に削除されたレコードを取得できます。</target>
        </trans-unit>
        <trans-unit id="5440ce33fe8ac340b1479e54e8644fb75af5dc1c" translate="yes" xml:space="preserve">
          <source>When tokens have been revoked or expired, you might want to purge them from the database. Passport ships with a command that can do this for you:</source>
          <target state="translated">トークンが取り消されたり、期限切れになったりした場合は、データベースから削除した方が良いでしょう。Passport には、このようなことができるコマンドが付属しています。</target>
        </trans-unit>
        <trans-unit id="8b773bed645d2b4ac2b4f65c1235d68883d46172" translate="yes" xml:space="preserve">
          <source>When truncating a PostgreSQL database, the &lt;code&gt;CASCADE&lt;/code&gt; behavior will be applied. This means that all foreign key related records in other tables will be deleted as well.</source>
          <target state="translated">PostgreSQLデータベースを切り捨てる場合、 &lt;code&gt;CASCADE&lt;/code&gt; の動作が適用されます。これは、他のテーブルのすべての外部キー関連レコードも削除されることを意味します。</target>
        </trans-unit>
        <trans-unit id="1b041f976ae9e44b805b8454282f50cacb752aaa" translate="yes" xml:space="preserve">
          <source>When updating a &lt;code&gt;belongsTo&lt;/code&gt; relationship, you may use the &lt;code&gt;associate&lt;/code&gt; method. This method will set the foreign key on the child model:</source>
          <target state="translated">&lt;code&gt;belongsTo&lt;/code&gt; 関係を更新するときは、 &lt;code&gt;associate&lt;/code&gt; メソッドを使用できます。このメソッドは、子モデルに外部キーを設定します。</target>
        </trans-unit>
        <trans-unit id="1913d09c3c12a86264959aca973242f378ad9afe" translate="yes" xml:space="preserve">
          <source>When updating a JSON column, you should use &lt;code&gt;-&amp;gt;&lt;/code&gt; syntax to access the appropriate key in the JSON object. This operation is only supported on MySQL 5.7+:</source>
          <target state="translated">JSON列を更新するときは、 &lt;code&gt;-&amp;gt;&lt;/code&gt; 構文を使用して、JSONオブジェクトの適切なキーにアクセスする必要があります。この操作はMySQL 5.7以降でのみサポートされています。</target>
        </trans-unit>
        <trans-unit id="34bce56b04bb877046b507a8ad38bedd9c7a7f7c" translate="yes" xml:space="preserve">
          <source>When updating a JSON column, you should use &lt;code&gt;-&amp;gt;&lt;/code&gt; syntax to access the appropriate key in the JSON object. This operation is supported on MySQL 5.7+ and PostgreSQL 9.5+:</source>
          <target state="translated">JSON列を更新するときは、 &lt;code&gt;-&amp;gt;&lt;/code&gt; 構文を使用してJSONオブジェクトの適切なキーにアクセスする必要があります。この操作は、MySQL5.7以降およびPostgreSQL9.5以降でサポートされています。</target>
        </trans-unit>
        <trans-unit id="c14fa222a11fc35bdbdf128483fafed140d93574" translate="yes" xml:space="preserve">
          <source>When updating or deleting records inside the chunk callback, any changes to the primary key or foreign keys could affect the chunk query. This could potentially result in records not being included in the chunked results.</source>
          <target state="translated">チャンク コールバック内でレコードを更新または削除する際に、主キーまたは外部キーを変更すると、チャンク クエリに影響を与える可能性があります。その結果、チャンクされた結果にレコードが含まれなくなる可能性があります。</target>
        </trans-unit>
        <trans-unit id="e6eb9fa3c083d8054cf4168e7dfe04e3975ecd73" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Horizon, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/horizon/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">Horizo​​nの新しいメジャーバージョンにアップグレードするとき&lt;a href=&quot;https://github.com/laravel/horizon/blob/master/UPGRADE.md&quot;&gt;は、アップグレードガイド&lt;/a&gt;を注意深く確認することが重要です。</target>
        </trans-unit>
        <trans-unit id="5cd203c85243093773901b9d0398466a505678e4" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Passport, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/passport/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">Passportの新しいメジャーバージョンにアップグレードするとき&lt;a href=&quot;https://github.com/laravel/passport/blob/master/UPGRADE.md&quot;&gt;は、アップグレードガイド&lt;/a&gt;を注意深く確認することが重要です。</target>
        </trans-unit>
        <trans-unit id="2e2e39cc595156553d060b37d7df1789ba4f28ac" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Socialite, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/socialite/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">Socialiteの新しいメジャーバージョンにアップグレードするとき&lt;a href=&quot;https://github.com/laravel/socialite/blob/master/UPGRADE.md&quot;&gt;は、アップグレードガイド&lt;/a&gt;を注意深く確認することが重要です。</target>
        </trans-unit>
        <trans-unit id="5562574548224d99cf412a46ff14c36772cfa9b5" translate="yes" xml:space="preserve">
          <source>When upgrading to a new major version of Telescope, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/telescope/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">Telescopeの新しいメジャーバージョンにアップグレードするとき&lt;a href=&quot;https://github.com/laravel/telescope/blob/master/UPGRADE.md&quot;&gt;は、アップグレードガイド&lt;/a&gt;を注意深く確認することが重要です。</target>
        </trans-unit>
        <trans-unit id="96f6e1736f192ffbf16f8303ba1366ac3e23d462" translate="yes" xml:space="preserve">
          <source>When upgrading to a new version of Cashier, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/cashier-paddle/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">キャッシャーの新しいバージョンにアップグレードするとき&lt;a href=&quot;https://github.com/laravel/cashier-paddle/blob/master/UPGRADE.md&quot;&gt;は、アップグレードガイド&lt;/a&gt;を注意深く確認することが重要です。</target>
        </trans-unit>
        <trans-unit id="57e16f9c00c94249d576fe8cdfc7e2493ce927d5" translate="yes" xml:space="preserve">
          <source>When upgrading to a new version of Cashier, it's important that you carefully review &lt;a href=&quot;https://github.com/laravel/cashier-stripe/blob/master/UPGRADE.md&quot;&gt;the upgrade guide&lt;/a&gt;.</source>
          <target state="translated">キャッシャーの新しいバージョンにアップグレードするとき&lt;a href=&quot;https://github.com/laravel/cashier-stripe/blob/master/UPGRADE.md&quot;&gt;は、アップグレードガイド&lt;/a&gt;を注意深く確認することが重要です。</target>
        </trans-unit>
        <trans-unit id="1aceb1d4fa7b4a7b46fe4e5edd04fc97b5c88321" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt; or &lt;a href=&quot;valet&quot;&gt;Valet&lt;/a&gt;, pretty URLs will be automatically configured.</source>
          <target state="translated">&lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt;または&lt;a href=&quot;valet&quot;&gt;Valet&lt;/a&gt;を使用する場合、きれいなURLが自動的に構成されます。</target>
        </trans-unit>
        <trans-unit id="24047ad51fead7786269f4b53b38af1fb1ab633d" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;horizon&quot;&gt;Horizon&lt;/a&gt;, you should use the &lt;code&gt;horizon:clear&lt;/code&gt; command to clear jobs from the queue instead of the &lt;code&gt;queue:clear&lt;/code&gt; command.</source>
          <target state="translated">使用するときは&lt;a href=&quot;horizon&quot;&gt;地平線を&lt;/a&gt;、あなたが使用する必要があります &lt;code&gt;horizon:clear&lt;/code&gt; の代わりにキューからジョブをクリアするには、コマンドを &lt;code&gt;queue:clear&lt;/code&gt; コマンド。</target>
        </trans-unit>
        <trans-unit id="fdb363deb2068fc4b8c818dc07b73e035bc6f1eb" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;horizon&quot;&gt;Horizon&lt;/a&gt;, you should use the &lt;code&gt;horizon:forget&lt;/code&gt; command to delete a failed job instead of the &lt;code&gt;queue:forget&lt;/code&gt; command.</source>
          <target state="translated">使用するときは&lt;a href=&quot;horizon&quot;&gt;地平線を&lt;/a&gt;、あなたが使用する必要があります &lt;code&gt;horizon:forget&lt;/code&gt; するのではなく、失敗したジョブを削除するには、コマンドを &lt;code&gt;queue:forget&lt;/code&gt; コマンドを。</target>
        </trans-unit>
        <trans-unit id="ecd61bddd3a1dc42d585f8616c3054fe14e1bcdc" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;, Laravel dispatches &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; during the email verification process. If you are manually handling email verification for your application, you may wish to manually dispatch these events after verification is completed. You may attach listeners to these events in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;を使用する場合、Laravelは電子メール検証プロセス中に&lt;a href=&quot;events&quot;&gt;イベントを&lt;/a&gt;ディスパッチします。アプリケーションの電子メール検証を手動で処理している場合は、検証の完了後にこれらのイベントを手動でディスパッチすることをお勧めします。 &lt;code&gt;EventServiceProvider&lt;/code&gt; でこれらのイベントにリスナーをアタッチできます。</target>
        </trans-unit>
        <trans-unit id="6de0de645ff2c56e811a930e72310aeb6eeeb2a2" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt;, you must enable the &quot;Client Events&quot; option in the &quot;App Settings&quot; section of your &lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;application dashboard&lt;/a&gt; in order to send client events.</source>
          <target state="translated">&lt;a href=&quot;https://pusher.com&quot;&gt;プッシャー&lt;/a&gt;を使用する場合、クライアントイベントを送信するには、&lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;アプリケーションダッシュボードの&lt;/a&gt; [アプリの設定]セクションで[クライアントイベント]オプションを有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="ea7fd4c2f1b2bbf591f24dba35a9dcb49a0babfd" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;https://pusher.com/channels&quot;&gt;Pusher Channels&lt;/a&gt;, you must enable the &quot;Client Events&quot; option in the &quot;App Settings&quot; section of your &lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;application dashboard&lt;/a&gt; in order to send client events.</source>
          <target state="translated">&lt;a href=&quot;https://pusher.com/channels&quot;&gt;プッシャーチャネル&lt;/a&gt;を使用する場合、クライアントイベントを送信するには、&lt;a href=&quot;https://dashboard.pusher.com/&quot;&gt;アプリケーションダッシュボードの&lt;/a&gt;[アプリの設定]セクションで[クライアントイベント]オプションを有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="f68494c4d28c57e1e6fc1997fc79e5a3abd9315f" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;Castable&lt;/code&gt; classes, you may still provide arguments in the &lt;code&gt;$casts&lt;/code&gt; definition. The arguments will be passed directly to the caster class:</source>
          <target state="translated">&lt;code&gt;Castable&lt;/code&gt; クラスを使用する場合でも、 &lt;code&gt;$casts&lt;/code&gt; 定義で引数を指定できます。引数はキャスタークラスに直接渡されます。</target>
        </trans-unit>
        <trans-unit id="3e96dca2c345a790abda7560a20e54b18efeea10" translate="yes" xml:space="preserve">
          <source>When using Channels and &lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo&lt;/a&gt;, you should specify &lt;code&gt;pusher&lt;/code&gt; as your desired broadcaster when instantiating the Echo instance in your &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file:</source>
          <target state="translated">Channelsと&lt;a href=&quot;#installing-laravel-echo&quot;&gt;LaravelEcho&lt;/a&gt;を使用する場合、 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; ファイルでEchoインスタンスをインスタンス化するときに、目的のブロードキャスターとして &lt;code&gt;pusher&lt;/code&gt; を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="61cb3e27532ba695e24bd6bee50a914c831f2921" translate="yes" xml:space="preserve">
          <source>When using Homestead in a team setting, you may want to tweak Homestead to better fit your personal development style. You may create a &lt;code&gt;user-customizations.sh&lt;/code&gt; file in the root of your Homestead directory (The same directory containing your &lt;code&gt;Homestead.yaml&lt;/code&gt;). Within this file, you may make any customization you would like; however, the &lt;code&gt;user-customizations.sh&lt;/code&gt; should not be version controlled.</source>
          <target state="translated">チーム環境でホームステッドを使用する場合は、ホームステッドを微調整して、個人の開発スタイルに合わせることができます。Homesteadディレクトリ（ &lt;code&gt;Homestead.yaml&lt;/code&gt; を含む同じディレクトリ）のルートに &lt;code&gt;user-customizations.sh&lt;/code&gt; ファイルを作成できます。このファイル内で、必要なカスタマイズを行うことができます。ただし、 &lt;code&gt;user-customizations.sh&lt;/code&gt; はバージョン管理されるべきではありません。</target>
        </trans-unit>
        <trans-unit id="cdd7397bf10a53b326194aa43c868e38ce95696c" translate="yes" xml:space="preserve">
          <source>When using Laravel Jetstream, the Jetstream installation process will change the value of the &lt;code&gt;HOME&lt;/code&gt; constant to &lt;code&gt;/dashboard&lt;/code&gt;.</source>
          <target state="translated">Laravel Jetstreamを使用する場合、Jetstreamのインストールプロセスにより、 &lt;code&gt;HOME&lt;/code&gt; 定数の値が &lt;code&gt;/dashboard&lt;/code&gt; に変更されます。</target>
        </trans-unit>
        <trans-unit id="45dee84ffcfb56127e6e7b5e741427cf328064b0" translate="yes" xml:space="preserve">
          <source>When using NFS on Windows, you should consider installing the &lt;a href=&quot;https://github.com/winnfsd/vagrant-winnfsd&quot;&gt;vagrant-winnfsd&lt;/a&gt; plug-in. This plug-in will maintain the correct user / group permissions for files and directories within the Homestead box.</source>
          <target state="translated">WindowsでNFSを使用する場合は、&lt;a href=&quot;https://github.com/winnfsd/vagrant-winnfsd&quot;&gt;vagrant-winnfsd&lt;/a&gt;プラグインのインストールを検討する必要があります。このプラグインは、ホームステッドボックス内のファイルとディレクトリに対する正しいユーザー/グループのアクセス許可を維持します。</target>
        </trans-unit>
        <trans-unit id="6522a2d06c3352beb6a40bc917412e81cdcfced1" translate="yes" xml:space="preserve">
          <source>When using NFS, you should consider installing the &lt;a href=&quot;https://github.com/gael-ian/vagrant-bindfs&quot;&gt;vagrant-bindfs&lt;/a&gt; plug-in. This plug-in will maintain the correct user / group permissions for files and directories within the Homestead box.</source>
          <target state="translated">NFSを使用する場合、&lt;a href=&quot;https://github.com/gael-ian/vagrant-bindfs&quot;&gt;vagrant-bindfs&lt;/a&gt;プラグインのインストールを検討する必要があります。このプラグインは、ホームステッドボックス内のファイルおよびディレクトリに対する正しいユーザー/グループのアクセス許可を維持します。</target>
        </trans-unit>
        <trans-unit id="1484c73f3c1d4c1a3104cb05fbbec4cf0011594f" translate="yes" xml:space="preserve">
          <source>When using PostgreSQL the &lt;code&gt;insertGetId&lt;/code&gt; method expects the auto-incrementing column to be named &lt;code&gt;id&lt;/code&gt;. If you would like to retrieve the ID from a different &quot;sequence&quot;, you may pass the column name as the second parameter to the &lt;code&gt;insertGetId&lt;/code&gt; method.</source>
          <target state="translated">PostgreSQLを使用する場合、 &lt;code&gt;insertGetId&lt;/code&gt; メソッドは、自動インクリメント列の名前が &lt;code&gt;id&lt;/code&gt; であると想定します。別の「シーケンス」からIDを取得する場合は、列名を2番目のパラメーターとして &lt;code&gt;insertGetId&lt;/code&gt; メソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="4dd74beac11303272bc7f7e8bba0864ea85df693" translate="yes" xml:space="preserve">
          <source>When using Pusher and &lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo&lt;/a&gt;, you should specify &lt;code&gt;pusher&lt;/code&gt; as your desired broadcaster when instantiating the Echo instance in your &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file:</source>
          <target state="translated">Pusherと&lt;a href=&quot;#installing-laravel-echo&quot;&gt;Laravel Echo&lt;/a&gt;を使用する場合、 &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; ファイルでEchoインスタンスをインスタンス化するときに、目的のブロードキャスターとして &lt;code&gt;pusher&lt;/code&gt; を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c9b05bd9b613ec493e02e30023e6d99dd88d2683" translate="yes" xml:space="preserve">
          <source>When using Stripe, the &lt;code&gt;charge&lt;/code&gt; method accepts the amount you would like to charge in the &lt;strong&gt;lowest denominator of the currency used by your application&lt;/strong&gt;. However, when using Braintree, you should pass the full dollar amount to the &lt;code&gt;charge&lt;/code&gt; method:</source>
          <target state="translated">Stripeを使用する場合、 &lt;code&gt;charge&lt;/code&gt; メソッドは、&lt;strong&gt;アプリケーションで使用される通貨の最低の分母で&lt;/strong&gt;課金する金額を受け入れ&lt;strong&gt;ます&lt;/strong&gt;。ただし、Braintreeを使用する場合は、全額を &lt;code&gt;charge&lt;/code&gt; メソッドに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="3b8709feab1bd96a016534a70feb2b8815b1296a" translate="yes" xml:space="preserve">
          <source>When using a custom keyed implicit binding as a nested route parameter, Laravel will automatically scope the query to retrieve the nested model by its parent using conventions to guess the relationship name on the parent. In this case, it will be assumed that the &lt;code&gt;User&lt;/code&gt; model has a relationship named &lt;code&gt;posts&lt;/code&gt; (the plural of the route parameter name) which can be used to retrieve the &lt;code&gt;Post&lt;/code&gt; model.</source>
          <target state="translated">ネストされたルートパラメーターとしてカスタムキー付き暗黙的バインディングを使用する場合、Laravelはクエリのスコープを自動的に設定し、親の関係名を推測する規則を使用して、親によってネストされたモデルを取得します。この場合、 &lt;code&gt;User&lt;/code&gt; モデルには、 &lt;code&gt;Post&lt;/code&gt; モデルの取得に使用できる &lt;code&gt;posts&lt;/code&gt; という名前の関係（ルートパラメーター名の複数形）があると想定されます。</target>
        </trans-unit>
        <trans-unit id="2a2f1124ea2f284bd890f6886a27ff0c96b5bade" translate="yes" xml:space="preserve">
          <source>When using any tool in the &quot;real world&quot;, you feel more confident if you understand how that tool works. Application development is no different. When you understand how your development tools function, you feel more comfortable and confident using them.</source>
          <target state="translated">どんなツールでも「現実の世界」で使うときは、そのツールの仕組みを理解していれば自信がつきます。アプリケーション開発も同様です。開発ツールがどのように機能するかを理解していれば、より快適で自信を持って開発ツールを使うことができます。</target>
        </trans-unit>
        <trans-unit id="88d048fec3b9053ff80ecb7fe533eab762daa3a3" translate="yes" xml:space="preserve">
          <source>When using chained &lt;code&gt;when&lt;/code&gt; methods, the scheduled command will only execute if all &lt;code&gt;when&lt;/code&gt; conditions return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">チェーンされた &lt;code&gt;when&lt;/code&gt; メソッドを使用する場合、スケジュールされたコマンドは、すべての &lt;code&gt;when&lt;/code&gt; 条件が &lt;code&gt;true&lt;/code&gt; を返す場合にのみ実行されます。</target>
        </trans-unit>
        <trans-unit id="8e81bf67420b6c95c99b248363594ecca214fc72" translate="yes" xml:space="preserve">
          <source>When using dynamic properties, Laravel will first look for the parameter's value in the request payload. If it is not present, Laravel will search for the field in the route parameters.</source>
          <target state="translated">動的なプロパティを使用する場合、Laravelはまずリクエストのペイロードにあるパラメータの値を探します。それが存在しない場合、Laravelはルートパラメータのフィールドを探します。</target>
        </trans-unit>
        <trans-unit id="3aac47c28302ef25207a2f8c26a0a14076896fb9" translate="yes" xml:space="preserve">
          <source>When using loops you may also end the loop or skip the current iteration:</source>
          <target state="translated">ループを使用する場合は、ループを終了したり、現在の反復をスキップしたりすることもできます。</target>
        </trans-unit>
        <trans-unit id="8996ce7cf64005261674f42191374cf740335998" translate="yes" xml:space="preserve">
          <source>When using magic methods to create factory relationships, you may pass an array of attributes to override on the related models:</source>
          <target state="translated">マジックメソッドを使用してファクトリーリレーションシップを作成する場合、関連するモデルでオーバーライドする属性の配列を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="b4c0b7d7245475edf68836aeeb8ec57c828c16ba" translate="yes" xml:space="preserve">
          <source>When using multiple connections, you may access each connection via the &lt;code&gt;connection&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade. The &lt;code&gt;name&lt;/code&gt; passed to the &lt;code&gt;connection&lt;/code&gt; method should correspond to one of the connections listed in your &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="translated">複数の接続を使用する場合、 &lt;code&gt;DB&lt;/code&gt; ファサードの &lt;code&gt;connection&lt;/code&gt; 方法を介して各接続にアクセスできます。 &lt;code&gt;name&lt;/code&gt; に渡された &lt;code&gt;connection&lt;/code&gt; 方法は、お使いに記載されている接続のいずれかに対応している必要があり &lt;code&gt;config/database.php&lt;/code&gt; 設定ファイル：</target>
        </trans-unit>
        <trans-unit id="4fce4aab719e44f7672a30acf3d3e6e45be4face" translate="yes" xml:space="preserve">
          <source>When using rate limiting, the number of attempts your job will need to run successfully can be hard to determine. Therefore, it is useful to combine rate limiting with &lt;a href=&quot;#time-based-attempts&quot;&gt;time based attempts&lt;/a&gt;.</source>
          <target state="translated">レート制限を使用する場合、ジョブを正常に実行するために必要な試行回数を決定するのは難しい場合があります。したがって、レート制限と&lt;a href=&quot;#time-based-attempts&quot;&gt;時間ベースの試行&lt;/a&gt;を組み合わせると便利です。</target>
        </trans-unit>
        <trans-unit id="005905e899a962b119ad1285316c4dc3346d85a2" translate="yes" xml:space="preserve">
          <source>When using route parameters in redirect routes, the following parameters are reserved by Laravel and cannot be used: &lt;code&gt;destination&lt;/code&gt; and &lt;code&gt;status&lt;/code&gt;.</source>
          <target state="translated">リダイレクトルートでルートパラメータを使用する場合、次のパラメータはLaravelによって予約されており、使用できません： &lt;code&gt;destination&lt;/code&gt; と &lt;code&gt;status&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="32cede9dc479ae7e5cda81cd3178a4614c5b228b" translate="yes" xml:space="preserve">
          <source>When using route parameters in view routes, the following parameters are reserved by Laravel and cannot be used: &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;status&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt;.</source>
          <target state="translated">ビュールートでルートパラメータを使用する場合、次のパラメータはLaravelによって予約されており、使用できません： &lt;code&gt;view&lt;/code&gt; 、 &lt;code&gt;data&lt;/code&gt; 、 &lt;code&gt;status&lt;/code&gt; 、および &lt;code&gt;headers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3969e297196b80f1cb1c114ea0d139fccc6eb70c" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;AuthenticateSession&lt;/code&gt; middleware in combination with a custom route name for the &lt;code&gt;login&lt;/code&gt; route, you must override the &lt;code&gt;unauthenticated&lt;/code&gt; method on your application's exception handler to properly redirect users to your login page.</source>
          <target state="translated">&lt;code&gt;AuthenticateSession&lt;/code&gt; ミドルウェアを &lt;code&gt;login&lt;/code&gt; ルートのカスタムルート名と組み合わせて使用する場合、ユーザーをログインページに適切にリダイレクトするには、アプリケーションの例外ハンドラーで &lt;code&gt;unauthenticated&lt;/code&gt; れていないメソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="224c22a60896a71e6b2aa67bf0bdccbfaacc5675" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;auto&lt;/code&gt; strategy, you may define the &lt;code&gt;minProcesses&lt;/code&gt; and &lt;code&gt;maxProcesses&lt;/code&gt; configuration options to control the minimum and maximum number of processes Horizon should scale up and down to:</source>
          <target state="translated">&lt;code&gt;auto&lt;/code&gt; ストラテジーを使用する場合、 &lt;code&gt;minProcesses&lt;/code&gt; および &lt;code&gt;maxProcesses&lt;/code&gt; 構成オプションを定義して、Horizo​​nがスケールアップおよびスケールダウンするプロセスの最小数と最大数を制御できます。</target>
        </trans-unit>
        <trans-unit id="060017671d28b92f1de8c33e481a36133f145e7d" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;database&lt;/code&gt; cache driver, you will need to setup a table to contain the cache items. You'll find an example &lt;code&gt;Schema&lt;/code&gt; declaration for the table below:</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; キャッシュドライバーを使用する場合は、キャッシュアイテムを格納するテーブルを設定する必要があります。以下の表の &lt;code&gt;Schema&lt;/code&gt; 宣言の例を示します。</target>
        </trans-unit>
        <trans-unit id="43bd8864c82e9ccad39519877b117f943f9f9c7c" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;database&lt;/code&gt; cache driver, you will need to setup a table to contain the cache locks. You'll find an example &lt;code&gt;Schema&lt;/code&gt; declaration for the table below:</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; キャッシュドライバーを使用する場合は、キャッシュロックを含むテーブルを設定する必要があります。以下の表の &lt;code&gt;Schema&lt;/code&gt; 宣言の例を示します。</target>
        </trans-unit>
        <trans-unit id="4c1369a5d7b887edd8c0089a9246dd4e1584078b" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;database&lt;/code&gt; session driver, you will need to create a table to contain the session items. Below is an example &lt;code&gt;Schema&lt;/code&gt; declaration for the table:</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; セッションドライバを使用する場合、セッションアイテムを含むテーブルを作成する必要があります。以下は、テーブルの &lt;code&gt;Schema&lt;/code&gt; 宣言の例です。</target>
        </trans-unit>
        <trans-unit id="db432e3db28bc364782a402cb132e6e05220834b" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;date&lt;/code&gt; or &lt;code&gt;datetime&lt;/code&gt; cast type, you may specify the date's format. This format will be used when the &lt;a href=&quot;eloquent-serialization&quot;&gt;model is serialized to an array or JSON&lt;/a&gt;:</source>
          <target state="translated">使用している場合 &lt;code&gt;date&lt;/code&gt; や &lt;code&gt;datetime&lt;/code&gt; キャストタイプを、あなたは、日付の書式を指定することもできます。この形式は、&lt;a href=&quot;eloquent-serialization&quot;&gt;モデルが配列またはJSONにシリアル化さ&lt;/a&gt;れるときに使用されます。</target>
        </trans-unit>
        <trans-unit id="958c5b1380f26ac69564b18768c71396326d34a3" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, all file operations are relative to the &lt;code&gt;root&lt;/code&gt; directory defined in your &lt;code&gt;filesystems&lt;/code&gt; configuration file. By default, this value is set to the &lt;code&gt;storage/app&lt;/code&gt; directory. Therefore, the following method would store a file in &lt;code&gt;storage/app/file.txt&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; ドライバを使用する場合、すべてのファイル操作は、 &lt;code&gt;filesystems&lt;/code&gt; 構成ファイルで定義された &lt;code&gt;root&lt;/code&gt; ディレクトリに関連しています。デフォルトでは、この値は &lt;code&gt;storage/app&lt;/code&gt; ディレクトリに設定されています。したがって、次のメソッドはファイルを &lt;code&gt;storage/app/file.txt&lt;/code&gt; に保存します。</target>
        </trans-unit>
        <trans-unit id="975207209fb503f35b85c7445edb8e37482b448e" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, all file operations are relative to the &lt;code&gt;root&lt;/code&gt; directory defined in your configuration file. By default, this value is set to the &lt;code&gt;storage/app&lt;/code&gt; directory. Therefore, the following method would store a file in &lt;code&gt;storage/app/file.txt&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; ドライバを使用する場合、すべてのファイル操作は、構成ファイルで定義された &lt;code&gt;root&lt;/code&gt; ディレクトリを基準にしています。デフォルトでは、この値は &lt;code&gt;storage/app&lt;/code&gt; ディレクトリに設定されています。したがって、次のメソッドは &lt;code&gt;storage/app/file.txt&lt;/code&gt; にファイルを保存します。</target>
        </trans-unit>
        <trans-unit id="f40a031cef6f7515a2c4e7f970d1e576db93d0fb" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, all files that should be publicly accessible should be placed in the &lt;code&gt;storage/app/public&lt;/code&gt; directory. Furthermore, you should &lt;a href=&quot;#the-public-disk&quot;&gt;create a symbolic link&lt;/a&gt; at &lt;code&gt;public/storage&lt;/code&gt; which points to the &lt;code&gt;storage/app/public&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; ドライバーを使用する場合、パブリックにアクセスできる必要があるすべてのファイルは、 &lt;code&gt;storage/app/public&lt;/code&gt; ディレクトリに配置する必要があります。さらに、 &lt;code&gt;storage/app/public&lt;/code&gt; ディレクトリを指す&lt;a href=&quot;#the-public-disk&quot;&gt;シンボリックリンク&lt;/a&gt;を &lt;code&gt;public/storage&lt;/code&gt; に作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="60121d5a9fed079847dabfa1e29e2954d3f33bad" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;local&lt;/code&gt; driver, the return value of &lt;code&gt;url&lt;/code&gt; is not URL encoded. For this reason, we recommend always storing your files using names that will create valid URLs.</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; ドライバを使用する場合、 &lt;code&gt;url&lt;/code&gt; の戻り値はURLエンコードされません。このため、常に有効なURLを作成する名前を使用してファイルを保存することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="5d5149325692771bf45eac67e1516dc3046e2ce5" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;monolog&lt;/code&gt; driver, the &lt;code&gt;handler&lt;/code&gt; configuration option is used to specify which handler will be instantiated. Optionally, any constructor parameters the handler needs may be specified using the &lt;code&gt;handler_with&lt;/code&gt; configuration option:</source>
          <target state="translated">&lt;code&gt;monolog&lt;/code&gt; ドライバーを使用する場合、 &lt;code&gt;handler&lt;/code&gt; 構成オプションを使用して、インスタンス化するハンドラーを指定します。オプションで、ハンドラーに必要なコンストラクターパラメーターは、 &lt;code&gt;handler_with&lt;/code&gt; 構成オプションを使用して指定できます。</target>
        </trans-unit>
        <trans-unit id="21b6853c585da3785b96b5648001bc25ba342eb1" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;monolog&lt;/code&gt; driver, the &lt;code&gt;handler&lt;/code&gt; configuration option is used to specify which handler will be instantiated. Optionally, any constructor parameters the handler needs may be specified using the &lt;code&gt;with&lt;/code&gt; configuration option:</source>
          <target state="translated">&lt;code&gt;monolog&lt;/code&gt; ドライバーを使用する場合、 &lt;code&gt;handler&lt;/code&gt; 構成オプションを使用して、インスタンス化するハンドラーを指定します。オプションで、ハンドラーが必要とするコンストラクターパラメーターは、 &lt;code&gt;with&lt;/code&gt; 構成オプションを使用して指定できます。</target>
        </trans-unit>
        <trans-unit id="5baeb3a4ec8d37aa04f4500b2a756a17f5b4d5b8" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;monolog&lt;/code&gt; driver, the Monolog &lt;code&gt;LineFormatter&lt;/code&gt; will be used as the default formatter. However, you may customize the type of formatter passed to the handler using the &lt;code&gt;formatter&lt;/code&gt; and &lt;code&gt;formatter_with&lt;/code&gt; configuration options:</source>
          <target state="translated">使用している場合 &lt;code&gt;monolog&lt;/code&gt; ドライバを、モノローグ &lt;code&gt;LineFormatter&lt;/code&gt; は、デフォルトフォーマッタとして使用されます。ただし、 &lt;code&gt;formatter&lt;/code&gt; と &lt;code&gt;formatter_with&lt;/code&gt; 設定オプションを使用して、ハンドラに渡されるフォーマッタのタイプをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="088bca3fd2a3772ad5312bcbed3957b8f21e70f5" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;with&lt;/code&gt; method, be careful not to pass any reserved keywords such as &lt;code&gt;state&lt;/code&gt; or &lt;code&gt;response_type&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; メソッドを使用する場合は、 &lt;code&gt;state&lt;/code&gt; や &lt;code&gt;response_type&lt;/code&gt; などの予約済みキーワードを渡さないように注意してください。</target>
        </trans-unit>
        <trans-unit id="035bf286ac2fafb2cf3e7acbebec61e5f5df3614" translate="yes" xml:space="preserve">
          <source>When using the Algolia driver, you should configure your Algolia &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;secret&lt;/code&gt; credentials in your &lt;code&gt;config/scout.php&lt;/code&gt; configuration file. Once your credentials have been configured, you will also need to install the Algolia PHP SDK via the Composer package manager:</source>
          <target state="translated">Algoliaドライバーを使用する場合は、 &lt;code&gt;config/scout.php&lt;/code&gt; 構成ファイルでAlgolia &lt;code&gt;id&lt;/code&gt; と &lt;code&gt;secret&lt;/code&gt; 資格情報を構成する必要があります。資格情報を構成したら、Composerパッケージマネージャーを介してAlgolia PHP SDKをインストールする必要もあります。</target>
        </trans-unit>
        <trans-unit id="2e151ae4c86e4a30e0b76b511e1aab919bbaff7b" translate="yes" xml:space="preserve">
          <source>When using the Redis queue, you may use the &lt;code&gt;block_for&lt;/code&gt; configuration option to specify how long the driver should wait for a job to become available before iterating through the worker loop and re-polling the Redis database.</source>
          <target state="translated">Redisキューを使用する場合、 &lt;code&gt;block_for&lt;/code&gt; 構成オプションを使用して、ワーカーループを繰り返してRedisデータベースを再ポーリングする前に、ドライバーがジョブが使用可能になるまで待機する時間を指定できます。</target>
        </trans-unit>
        <trans-unit id="32578e7398163114d07960009102a9a691496c09" translate="yes" xml:space="preserve">
          <source>When using the password grant or client credentials grant, you may wish to authorize the token for all of the scopes supported by your application. You can do this by requesting the &lt;code&gt;*&lt;/code&gt; scope. If you request the &lt;code&gt;*&lt;/code&gt; scope, the &lt;code&gt;can&lt;/code&gt; method on the token instance will always return &lt;code&gt;true&lt;/code&gt;. This scope may only be assigned to a token that is issued using the &lt;code&gt;password&lt;/code&gt; or &lt;code&gt;client_credentials&lt;/code&gt; grant:</source>
          <target state="translated">パスワード付与またはクライアント資格情報付与を使用する場合、アプリケーションでサポートされているすべてのスコープに対してトークンを承認することをお勧めします。 &lt;code&gt;*&lt;/code&gt; スコープをリクエストすることでこれを行うことができます。 &lt;code&gt;*&lt;/code&gt; スコープをリクエストすると、トークンインスタンスの &lt;code&gt;can&lt;/code&gt; メソッドは常に &lt;code&gt;true&lt;/code&gt; を返します。このスコープは、 &lt;code&gt;password&lt;/code&gt; または &lt;code&gt;client_credentials&lt;/code&gt; 付与を使用して発行されたトークンにのみ割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="e042e11be5e4262a14b7850799d15c3fe08b23bf" translate="yes" xml:space="preserve">
          <source>When using the password grant, you may wish to authorize the token for all of the scopes supported by your application. You can do this by requesting the &lt;code&gt;*&lt;/code&gt; scope. If you request the &lt;code&gt;*&lt;/code&gt; scope, the &lt;code&gt;can&lt;/code&gt; method on the token instance will always return &lt;code&gt;true&lt;/code&gt;. This scope may only be assigned to a token that is issued using the &lt;code&gt;password&lt;/code&gt; grant:</source>
          <target state="translated">パスワード付与を使用する場合、アプリケーションでサポートされているすべてのスコープのトークンを承認することができます。これを行うには、 &lt;code&gt;*&lt;/code&gt; スコープを要求します。 &lt;code&gt;*&lt;/code&gt; スコープをリクエストすると、トークンインスタンスの &lt;code&gt;can&lt;/code&gt; メソッドは常に &lt;code&gt;true&lt;/code&gt; を返します。このスコープは、 &lt;code&gt;password&lt;/code&gt; 付与を使用して発行されるトークンにのみ割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="4122dd8f1dd7a56b5b82fbafce61e0d633d93c0c" translate="yes" xml:space="preserve">
          <source>When using the prices API, Paddle only allows to apply coupons to one-time purchase products and not to subscription plans.</source>
          <target state="translated">価格APIを使用する場合、Paddleでは、クーポンの適用は1回限りの購入商品にのみ可能で、定期購入プランには適用されません。</target>
        </trans-unit>
        <trans-unit id="0c525bae0b6eb5b0556a3b3e66a413496ee3683a" translate="yes" xml:space="preserve">
          <source>When using the scheduler, you only need to add the following Cron entry to your server. If you do not know how to add Cron entries to your server, consider using a service such as &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt; which can manage the Cron entries for you:</source>
          <target state="translated">スケジューラを使用する場合は、サーバーに次のCronエントリを追加するだけです。サーバーにCronエントリーを追加する方法がわからない場合は、Cronエントリーを管理できる&lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt;などのサービスの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="4e3391abda9e2f429dffb416ac7ca38cde1fb97f" translate="yes" xml:space="preserve">
          <source>When using this feature, you should always include the &lt;code&gt;id&lt;/code&gt; column and any relevant foreign key columns in the list of columns you wish to retrieve.</source>
          <target state="translated">この機能を使用するときは、取得する列のリストに常に &lt;code&gt;id&lt;/code&gt; 列と関連する外部キー列を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="50ce1962e60dfe805da26e6644a89cff5823d7e4" translate="yes" xml:space="preserve">
          <source>When using this feature, you should always include the &lt;code&gt;id&lt;/code&gt; column in the list of columns you wish to retrieve.</source>
          <target state="translated">この機能を使用するときは、取得する列のリストに常に &lt;code&gt;id&lt;/code&gt; 列を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="9f6c827a9584805185a2ecb1010e308e855cdeeb" translate="yes" xml:space="preserve">
          <source>When using this method of authentication, the default Laravel JavaScript scaffolding instructs Axios to always send the &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; and &lt;code&gt;X-Requested-With&lt;/code&gt; headers. However, you should be sure to include your CSRF token in a &lt;a href=&quot;csrf#csrf-x-csrf-token&quot;&gt;HTML meta tag&lt;/a&gt;:</source>
          <target state="translated">この認証方法を使用する場合、デフォルトのLaravel JavaScriptスキャフォールディングは、常に &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; および &lt;code&gt;X-Requested-With&lt;/code&gt; ヘッダーを送信するようにAxiosに指示します。ただし、&lt;a href=&quot;csrf#csrf-x-csrf-token&quot;&gt;HTMLメタタグに&lt;/a&gt; CSRFトークンを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="6d0f67e1965944881dc9d4536792d13ebcfbbda1" translate="yes" xml:space="preserve">
          <source>When using this method of authentication, you will need to ensure a valid CSRF token header is included in your requests. The default Laravel JavaScript scaffolding includes an Axios instance, which will automatically use the encrypted &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie value to send a &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; header on same-origin requests.</source>
          <target state="translated">この認証方法を使用する場合は、有効なCSRFトークンヘッダーがリクエストに含まれていることを確認する必要があります。デフォルトの &lt;code&gt;XSRF-TOKEN&lt;/code&gt; スキャフォールディングにはAxiosインスタンスが含まれています。これは、暗号化されたXSRF-TOKEN Cookie値を自動的に使用して、同一生成元のリクエストで &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; ヘッダーを送信します。</target>
        </trans-unit>
        <trans-unit id="03710a21777c297cc8f9b1dd25cd98ee4a8a60f2" translate="yes" xml:space="preserve">
          <source>When using timestamps on pivot tables, the table is required to have both &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamp columns.</source>
          <target state="translated">ピボットテーブルでタイムスタンプを使用する場合、テーブルには &lt;code&gt;created_at&lt;/code&gt; と &lt;code&gt;updated_at&lt;/code&gt; の両方のタイムスタンプ列が必要です。</target>
        </trans-unit>
        <trans-unit id="1884f13aa2df9bfb73e4a9d59650f01cb94587dd" translate="yes" xml:space="preserve">
          <source>When working with a many-to-many relationship, the &lt;code&gt;save&lt;/code&gt; method accepts an array of additional intermediate table attributes as its second argument:</source>
          <target state="translated">多対多の関係を使用する場合、 &lt;code&gt;save&lt;/code&gt; メソッドは追加の中間テーブル属性の配列を2番目の引数として受け入れます。</target>
        </trans-unit>
        <trans-unit id="e8648315aa7bbb121adb19a0757243a88b48a69e" translate="yes" xml:space="preserve">
          <source>When working with arrays, the field under validation must not have any duplicate values.</source>
          <target state="translated">配列を使用する場合、検証対象のフィールドに重複した値があってはなりません。</target>
        </trans-unit>
        <trans-unit id="6799025f3bf5fb8864a4b2cd3e82c390e9886b68" translate="yes" xml:space="preserve">
          <source>When working with forms that contain array inputs, use &quot;dot&quot; notation to access the arrays:</source>
          <target state="translated">配列入力を含むフォームを扱う際には、配列にアクセスするために &quot;ドット &quot;表記を使用します。</target>
        </trans-unit>
        <trans-unit id="5a85f5a0dc2be400e445988ef760d66c17d0a778" translate="yes" xml:space="preserve">
          <source>When writing Blade templates, you may wish to display a portion of the page only if the user is authorized to perform a given action. For example, you may wish to show an update form for a blog post only if the user can actually update the post. In this situation, you may use the &lt;code&gt;@can&lt;/code&gt; and &lt;code&gt;@cannot&lt;/code&gt; family of directives:</source>
          <target state="translated">Bladeテンプレートを作成するとき、ユーザーが特定のアクションを実行する権限を持っている場合にのみ、ページの一部を表示したい場合があります。たとえば、ユーザーが実際に投稿を更新できる場合にのみ、ブログ投稿の更新フォームを表示することができます。この状況では、ディレクティブの &lt;code&gt;@can&lt;/code&gt; および &lt;code&gt;@cannot&lt;/code&gt; ファミリーを使用できます。</target>
        </trans-unit>
        <trans-unit id="0aa36c20cce0d0c6487d4249a4bc2ef3da13f812" translate="yes" xml:space="preserve">
          <source>When writing a Laravel application, it generally does not matter if you use contracts or facades since both provide essentially equal levels of testability. However, when writing packages, your package will not typically have access to all of Laravel's testing helpers. If you would like to be able to write your package tests as if they existed inside a typical Laravel application, you may use the &lt;a href=&quot;https://github.com/orchestral/testbench&quot;&gt;Orchestral Testbench&lt;/a&gt; package.</source>
          <target state="translated">Laravelアプリケーションを作成する場合、コントラクトとファサードのどちらを使用しても、基本的に等しいレベルのテスト容易性が提供されるため、通常はどちらでも問題ありません。ただし、パッケージを作成する場合、パッケージは通常、Laravelのすべてのテストヘルパーにアクセスできません。一般的なLaravelアプリケーション内に存在するかのようにパッケージテストを記述したい場合は、&lt;a href=&quot;https://github.com/orchestral/testbench&quot;&gt;Orchestral Testbench&lt;/a&gt;パッケージを使用できます。</target>
        </trans-unit>
        <trans-unit id="792e3add795d39f86830b180ab90b6a09b743fa3" translate="yes" xml:space="preserve">
          <source>When writing a command which expects a confirmation in the form of a &quot;yes&quot; or &quot;no&quot; answer, you may utilize the &lt;code&gt;expectsConfirmation&lt;/code&gt; method:</source>
          <target state="translated">「はい」または「いいえ」の回答の形式で確認を期待するコマンドを作成する場合、 &lt;code&gt;expectsConfirmation&lt;/code&gt; メソッドを利用できます。</target>
        </trans-unit>
        <trans-unit id="4976d85ffddcbf3295e29d754443db351d9aefe0" translate="yes" xml:space="preserve">
          <source>When writing components for your own application, components are automatically discovered within the &lt;code&gt;app/View/Components&lt;/code&gt; directory and &lt;code&gt;resources/views/components&lt;/code&gt; directory.</source>
          <target state="translated">独自のアプリケーション用のコンポーネントを作成する場合、コンポーネントは &lt;code&gt;app/View/Components&lt;/code&gt; ディレクトリと &lt;code&gt;resources/views/components&lt;/code&gt; ディレクトリ内で自動的に検出されます。</target>
        </trans-unit>
        <trans-unit id="3c13554cd7d9b753d166649e0c4ffb885bcbdeed" translate="yes" xml:space="preserve">
          <source>When writing console commands, it is common to gather input from the user through arguments or options. Laravel makes it very convenient to define the input you expect from the user using the &lt;code&gt;signature&lt;/code&gt; property on your commands. The &lt;code&gt;signature&lt;/code&gt; property allows you to define the name, arguments, and options for the command in a single, expressive, route-like syntax.</source>
          <target state="translated">コンソールコマンドを記述する場合、引数またはオプションを介してユーザーからの入力を収集するのが一般的です。Laravelでは、コマンドの &lt;code&gt;signature&lt;/code&gt; プロパティを使用して、ユーザーに期待する入力を定義するのが非常に便利です。 &lt;code&gt;signature&lt;/code&gt; プロパティを使用すると、単一の、表現力、ルートのような構文でコマンドの名前、引数、およびオプションを定義することができます。</target>
        </trans-unit>
        <trans-unit id="c8e67771d3f128dd48744241bc0d69fab76ffe29" translate="yes" xml:space="preserve">
          <source>When you call the &lt;code&gt;redirect&lt;/code&gt; helper with no parameters, an instance of &lt;code&gt;Illuminate\Routing\Redirector&lt;/code&gt; is returned, allowing you to call any method on the &lt;code&gt;Redirector&lt;/code&gt; instance. For example, to generate a &lt;code&gt;RedirectResponse&lt;/code&gt; to a named route, you may use the &lt;code&gt;route&lt;/code&gt; method:</source>
          <target state="translated">パラメータなしで &lt;code&gt;redirect&lt;/code&gt; ヘルパーを呼び出すと、 &lt;code&gt;Illuminate\Routing\Redirector&lt;/code&gt; インスタンスが返され、 &lt;code&gt;Redirector&lt;/code&gt; インスタンスの任意のメソッドを呼び出すことができます。たとえば、名前付きルートへの &lt;code&gt;RedirectResponse&lt;/code&gt; を生成するには、 &lt;code&gt;route&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="4b37be7c7b323b032098f32d1e54adbd8d282290" translate="yes" xml:space="preserve">
          <source>When you execute this command, Laravel will write a &quot;schema&quot; file to your &lt;code&gt;database/schema&lt;/code&gt; directory. Now, when you attempt to migrate your database and no other migrations have been executed, Laravel will execute the schema file's SQL first. After executing the schema file's commands, Laravel will execute any remaining migrations that were not part of the schema dump.</source>
          <target state="translated">このコマンドを実行すると、Laravelは「スキーマ」ファイルを &lt;code&gt;database/schema&lt;/code&gt; ディレクトリに書き込みます。これで、データベースを移行しようとして、他の移行が実行されていない場合、Laravelは最初にスキーマファイルのSQLを実行します。スキーマファイルのコマンドを実行した後、Laravelはスキーマダンプの一部ではなかった残りの移行を実行します。</target>
        </trans-unit>
        <trans-unit id="c787b4f49b323409347db8769be4f9b1ab2a8d6b" translate="yes" xml:space="preserve">
          <source>When you have multiple plans set on a subscription the &lt;code&gt;stripe_plan&lt;/code&gt; and &lt;code&gt;quantity&lt;/code&gt; attributes on the &lt;code&gt;Subscription&lt;/code&gt; model will be &lt;code&gt;null&lt;/code&gt;. To access the individual plans, you should use the &lt;code&gt;items&lt;/code&gt; relationship available on the &lt;code&gt;Subscription&lt;/code&gt; model.</source>
          <target state="translated">サブスクリプションに複数のプランを設定している場合、 &lt;code&gt;Subscription&lt;/code&gt; モデルの &lt;code&gt;stripe_plan&lt;/code&gt; 属性と &lt;code&gt;quantity&lt;/code&gt; 属性は &lt;code&gt;null&lt;/code&gt; になります。個々のプランにアクセスするには、 &lt;code&gt;Subscription&lt;/code&gt; モデルで使用可能な &lt;code&gt;items&lt;/code&gt; 関係を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ed75b1e1ffe2c1b7a2f3ac6fa85f1ad5bef06fdb" translate="yes" xml:space="preserve">
          <source>When you initialize a Laravel Echo instance, a socket ID is assigned to the connection. If you are using &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; and &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt;, the socket ID will automatically be attached to every outgoing request as a &lt;code&gt;X-Socket-ID&lt;/code&gt; header. Then, when you call the &lt;code&gt;toOthers&lt;/code&gt; method, Laravel will extract the socket ID from the header and instruct the broadcaster to not broadcast to any connections with that socket ID.</source>
          <target state="translated">Laravel Echoインスタンスを初期化すると、ソケットIDが接続に割り当てられます。&lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt;と&lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt;を使用している場合、ソケットIDはすべての発信要求に &lt;code&gt;X-Socket-ID&lt;/code&gt; ヘッダーとして自動的に付加されます。次に、 &lt;code&gt;toOthers&lt;/code&gt; メソッドを呼び出すと、LaravelはヘッダーからソケットIDを抽出し、そのソケットIDを持つ接続にはブロードキャストしないようにブロードキャスターに指示します。</target>
        </trans-unit>
        <trans-unit id="6d5131b8b32b3766211e7b4ed7c56dbf81acec99" translate="yes" xml:space="preserve">
          <source>When you register a custom exception reporting callback using the &lt;code&gt;reportable&lt;/code&gt; method, Laravel will still log the exception using the default logging configuration for the application. If you wish to stop the propagation of the exception to the default logging stack, you may use the &lt;code&gt;stop&lt;/code&gt; method when defining your reporting callback or return &lt;code&gt;false&lt;/code&gt; from the callback:</source>
          <target state="translated">&lt;code&gt;reportable&lt;/code&gt; メソッドを使用してカスタム例外レポートコールバックを登録する場合でも、Laravelはアプリケーションのデフォルトのログ設定を使用して例外をログに記録します。デフォルトのログスタックへの例外の伝播を &lt;code&gt;stop&lt;/code&gt; する場合は、レポートコールバックを定義するときにstopメソッドを使用するか、コールバックから &lt;code&gt;false&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e6eaf2c8fc8dcff2cb8a2a58bd5e1f2dddf66b75" translate="yes" xml:space="preserve">
          <source>When you retrieve an item from the session, you may also pass a default value as the second argument to the &lt;code&gt;get&lt;/code&gt; method. This default value will be returned if the specified key does not exist in the session. If you pass a &lt;code&gt;Closure&lt;/code&gt; as the default value to the &lt;code&gt;get&lt;/code&gt; method and the requested key does not exist, the &lt;code&gt;Closure&lt;/code&gt; will be executed and its result returned:</source>
          <target state="translated">セッションからアイテムを取得するときに、2番目の引数としてデフォルト値を &lt;code&gt;get&lt;/code&gt; メソッドに渡すこともできます。このデフォルト値は、指定されたキーがセッションに存在しない場合に返されます。 &lt;code&gt;get&lt;/code&gt; メソッドにデフォルト値として &lt;code&gt;Closure&lt;/code&gt; を渡し、要求されたキーが存在しない場合、 &lt;code&gt;Closure&lt;/code&gt; が実行され、その結果が返されます。</target>
        </trans-unit>
        <trans-unit id="0c4a95aaa0dd5bd045f4e5de5a25fb047935e714" translate="yes" xml:space="preserve">
          <source>When you start a new Laravel project, error and exception handling is already configured for you. The &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; class is where all exceptions triggered by your application are logged and then rendered back to the user. We'll dive deeper into this class throughout this documentation.</source>
          <target state="translated">新しいLaravelプロジェクトを開始すると、エラーと例外処理はすでに構成されています。 &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; アプリケーションによってトリガすべての例外が記録され、その後、戻ってユーザーにレンダリングされる場所クラスです。このドキュメントでは、このクラスについて詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="8da04af1c2a8772ddf7eb3cae2e9ab1b145622d2" translate="yes" xml:space="preserve">
          <source>When you use the &lt;code&gt;loadViewsFrom&lt;/code&gt; method, Laravel actually registers two locations for your views: the application's &lt;code&gt;resources/views/vendor&lt;/code&gt; directory and the directory you specify. So, using the &lt;code&gt;courier&lt;/code&gt; example, Laravel will first check if a custom version of the view has been provided by the developer in &lt;code&gt;resources/views/vendor/courier&lt;/code&gt;. Then, if the view has not been customized, Laravel will search the package view directory you specified in your call to &lt;code&gt;loadViewsFrom&lt;/code&gt;. This makes it easy for package users to customize / override your package's views.</source>
          <target state="translated">&lt;code&gt;loadViewsFrom&lt;/code&gt; メソッドを使用すると、Laravelは実際にはビューの2つの場所を登録します。アプリケーションの &lt;code&gt;resources/views/vendor&lt;/code&gt; ディレクトリと指定したディレクトリです。したがって、 &lt;code&gt;courier&lt;/code&gt; 例を使用して、Laravelはまず、ビューのカスタムバージョンが &lt;code&gt;resources/views/vendor/courier&lt;/code&gt; で開発者から提供されているかどうかを確認します。次に、ビューがカスタマイズされていない場合、Laravelは &lt;code&gt;loadViewsFrom&lt;/code&gt; の呼び出しで指定したパッケージビューディレクトリを検索します。これにより、パッケージユーザーはパッケージのビューを簡単にカスタマイズ/オーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="9cc13b4803a1ec87f6cae3d6d25e63ac6354875d" translate="yes" xml:space="preserve">
          <source>When you're ready to deploy your Laravel application to production, there are some important things you can do to make sure your application is running as efficiently as possible. In this document, we'll cover some great starting points for making sure your Laravel application is deployed properly.</source>
          <target state="translated">Laravelアプリケーションを本番環境にデプロイする準備ができたら、アプリケーションが可能な限り効率的に動作していることを確認するために、いくつかの重要なことを行う必要があります。このドキュメントでは、Laravelアプリケーションが適切にデプロイされていることを確認するための素晴らしい出発点をいくつか紹介します。</target>
        </trans-unit>
        <trans-unit id="47fbbfb19e44d5d9e3f714f99352c688a15ae7eb" translate="yes" xml:space="preserve">
          <source>When your application is in maintenance mode, a custom view will be displayed for all requests into your application. This makes it easy to &quot;disable&quot; your application while it is updating or when you are performing maintenance. A maintenance mode check is included in the default middleware stack for your application. If the application is in maintenance mode, a &lt;code&gt;MaintenanceModeException&lt;/code&gt; will be thrown with a status code of 503.</source>
          <target state="translated">アプリケーションがメンテナンスモードの場合、アプリケーションへのすべてのリクエストに対してカスタムビューが表示されます。これにより、更新中またはメンテナンスの実行中にアプリケーションを簡単に「無効」にすることができます。メンテナンスモードチェックは、アプリケーションのデフォルトのミドルウェアスタックに含まれています。アプリケーションがメンテナンスモードの場合、ステータスコード503で &lt;code&gt;MaintenanceModeException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="2a95975a7ea0515482d09a4283e205f8bdf7fa04" translate="yes" xml:space="preserve">
          <source>When your component is rendered, you may display the contents of your component's public variables by echoing the variables by name:</source>
          <target state="translated">コンポーネントがレンダリングされたときに、変数を名前でエコーすることで、コンポーネントのパブリック変数の内容を表示することができます。</target>
        </trans-unit>
        <trans-unit id="7c8105c4e435a6b685fd63cb1690cf638601272d" translate="yes" xml:space="preserve">
          <source>When your test requires migrations, like the authentication example above, you should never use the &lt;code&gt;RefreshDatabase&lt;/code&gt; trait. The &lt;code&gt;RefreshDatabase&lt;/code&gt; trait leverages database transactions which will not be applicable across HTTP requests. Instead, use the &lt;code&gt;DatabaseMigrations&lt;/code&gt; trait:</source>
          <target state="translated">上記の認証例のように、テストで移行が必要な場合は、 &lt;code&gt;RefreshDatabase&lt;/code&gt; トレイトを使用しないでください。 &lt;code&gt;RefreshDatabase&lt;/code&gt; HTTP要求間では適用されませんトレイトレバレッジデータベーストランザクション。代わりに、 &lt;code&gt;DatabaseMigrations&lt;/code&gt; トレイトを使用します。</target>
        </trans-unit>
        <trans-unit id="8927b41637f70b1b39424c0db6bb52ea5a4ee207" translate="yes" xml:space="preserve">
          <source>Where Clauses</source>
          <target state="translated">条項</target>
        </trans-unit>
        <trans-unit id="45a28d7d2d0dd2cb9b7907b4877467fce02c6307" translate="yes" xml:space="preserve">
          <source>Where Exists Clauses</source>
          <target state="translated">存在する場所の節</target>
        </trans-unit>
        <trans-unit id="c6a57c97033ad3276ea8ba77176e146c7e9a261f" translate="yes" xml:space="preserve">
          <source>Where Is The Models Directory?</source>
          <target state="translated">モデルのディレクトリはどこにありますか?</target>
        </trans-unit>
        <trans-unit id="7d90aea7516067d74aa6f8aa3ea4345185144d10" translate="yes" xml:space="preserve">
          <source>Whether a middleware runs before or after a request depends on the middleware itself. For example, the following middleware would perform some task &lt;strong&gt;before&lt;/strong&gt; the request is handled by the application:</source>
          <target state="translated">ミドルウェアがリクエストの前または後に実行されるかどうかは、ミドルウェア自体に依存します。たとえば、次のミドルウェアは、リクエストがアプリケーションによって処理される&lt;strong&gt;前に&lt;/strong&gt;いくつかのタスクを実行します。</target>
        </trans-unit>
        <trans-unit id="9f7a25630eb4179adc804fc453752c5d62da540d" translate="yes" xml:space="preserve">
          <source>Whether the content is short.</source>
          <target state="translated">内容が短いかどうか。</target>
        </trans-unit>
        <trans-unit id="09e3af47fd3e79db546ede96c7b4d1b579dbfa72" translate="yes" xml:space="preserve">
          <source>Whether this is an even iteration through the loop.</source>
          <target state="translated">これがループを通る偶数反復であるかどうか。</target>
        </trans-unit>
        <trans-unit id="858cdbf32fe7a994509943c6b3ba4b27baba0cca" translate="yes" xml:space="preserve">
          <source>Whether this is an odd iteration through the loop.</source>
          <target state="translated">これがループを通る奇数の反復かどうか。</target>
        </trans-unit>
        <trans-unit id="f0b83a248e4a6417c2c0d8dff3e585f6dabb687a" translate="yes" xml:space="preserve">
          <source>Whether this is the first iteration through the loop.</source>
          <target state="translated">これがループの最初の反復であるかどうか。</target>
        </trans-unit>
        <trans-unit id="f70eb7c3912465a5e233f4177b665abf06b0a23f" translate="yes" xml:space="preserve">
          <source>Whether this is the last iteration through the loop.</source>
          <target state="translated">これがループを通る最後の反復かどうか。</target>
        </trans-unit>
        <trans-unit id="80db56d223d186d805865ba25df831f6e1804ab7" translate="yes" xml:space="preserve">
          <source>Whether to make the table temporary.</source>
          <target state="translated">テーブルを一時的なものにするかどうか。</target>
        </trans-unit>
        <trans-unit id="c2f093f639eff40a14afd0f1f43a1aed22b9eaff" translate="yes" xml:space="preserve">
          <source>Whether use write pdo for select.</source>
          <target state="translated">selectにwrite pdoを使用するかどうか。</target>
        </trans-unit>
        <trans-unit id="66476ef8f19664adebfa07a61854b1ed85501074" translate="yes" xml:space="preserve">
          <source>Which Branch?</source>
          <target state="translated">どこの支店?</target>
        </trans-unit>
        <trans-unit id="17255d7a182033fd562457a5d56ad2f20ccb04ea" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;$fillable&lt;/code&gt; serves as a &quot;white list&quot; of attributes that should be mass assignable, you may also choose to use &lt;code&gt;$guarded&lt;/code&gt;. The &lt;code&gt;$guarded&lt;/code&gt; property should contain an array of attributes that you do not want to be mass assignable. All other attributes not in the array will be mass assignable. So, &lt;code&gt;$guarded&lt;/code&gt; functions like a &quot;black list&quot;. Of course, you should use either &lt;code&gt;$fillable&lt;/code&gt; or &lt;code&gt;$guarded&lt;/code&gt; - not both. In the example below, all attributes &lt;strong&gt;except for &lt;code&gt;price&lt;/code&gt;&lt;/strong&gt; will be mass assignable:</source>
          <target state="translated">一方で &lt;code&gt;$fillable&lt;/code&gt; 質量割り当て可能でなければなりません属性の「ホワイトリスト」となって、あなたはまた、使用することを選択することも &lt;code&gt;$guarded&lt;/code&gt; 。 &lt;code&gt;$guarded&lt;/code&gt; プロパティを使用すると、大量の割り当て可能にしたくないという属性の配列を含める必要があります。配列にない他のすべての属性は、大量に割り当て可能です。つまり、 &lt;code&gt;$guarded&lt;/code&gt; は「ブラックリスト」のような関数です。もちろん、 &lt;code&gt;$fillable&lt;/code&gt; または &lt;code&gt;$guarded&lt;/code&gt; guardedのどちらかを使用する必要があります。両方は使用しないでください。以下の例では、&lt;strong&gt; &lt;code&gt;price&lt;/code&gt; &lt;/strong&gt;を&lt;strong&gt;除く&lt;/strong&gt;すべての属性が一括で割り当て可能です。</target>
        </trans-unit>
        <trans-unit id="2aed4accf02e625fe1315b3f0ab6be75cbac0add" translate="yes" xml:space="preserve">
          <source>While Blade provides this feature, using it frequently may be a signal that you have too much logic embedded within your template.</source>
          <target state="translated">Bladeはこの機能を提供していますが、頻繁に使用すると、テンプレート内にロジックを埋め込みすぎているというシグナルになる可能性があります。</target>
        </trans-unit>
        <trans-unit id="3b94b7745d0960b8631e85fcbe3ace61ee839af3" translate="yes" xml:space="preserve">
          <source>While Laravel does not dictate which JavaScript or CSS pre-processors you use, it does provide a basic starting point using &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt; and &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; that will be helpful for many applications. By default, Laravel uses &lt;a href=&quot;https://www.npmjs.org&quot;&gt;NPM&lt;/a&gt; to install both of these frontend packages.</source>
          <target state="translated">Laravelは、使用するJavaScriptまたはCSSプリプロセッサを指示しませんが、&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap&lt;/a&gt;と&lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt;を使用して、多くのアプリケーションに役立つ基本的な出発点を提供します。デフォルトでは、Laravelは&lt;a href=&quot;https://www.npmjs.org&quot;&gt;NPM&lt;/a&gt;を使用してこれらのフロントエンドパッケージの両方をインストールします。</target>
        </trans-unit>
        <trans-unit id="ef2ab498fc6769cc7f430cc61ac7674e52d43b9c" translate="yes" xml:space="preserve">
          <source>While building your application, you may occasionally have actions that should require the user to confirm their password before the action is performed. Laravel includes built-in middleware to make this process a breeze. Implementing this feature will require you to define two routes: one route to display a view asking the user to confirm their password, and one route to confirm that the password is valid and redirect the user to their intended destination.</source>
          <target state="translated">アプリケーションを構築している間に、アクションを実行する前にユーザーにパスワードを確認してもらう必要がある場合があります。Laravelにはこの処理を簡単にするためのミドルウェアが組み込まれています。1つはユーザーにパスワードの確認を求めるビューを表示するルート、もう1つはパスワードが有効であることを確認し、ユーザーを目的の目的地にリダイレクトするルートです。</target>
        </trans-unit>
        <trans-unit id="73cd8373457f7076bbd4e0b85064aa7782070f49" translate="yes" xml:space="preserve">
          <source>While handling an incoming request, you may access the authenticated user via the &lt;code&gt;Auth&lt;/code&gt; facade:</source>
          <target state="translated">着信要求の処理中に、 &lt;code&gt;Auth&lt;/code&gt; ファサードを介して認証されたユーザーにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="f6a04181a51071225c942d3ac82feebdaa36baeb" translate="yes" xml:space="preserve">
          <source>While in maintenance mode, Laravel will display the maintenance mode view for all application URLs the user attempts to access. If you wish, you may instruct Laravel to redirect all requests to a specific URL. This may be accomplished using the &lt;code&gt;redirect&lt;/code&gt; option. For example, you may wish to redirect all requests to the &lt;code&gt;/&lt;/code&gt; URI:</source>
          <target state="translated">メンテナンスモードでは、LaravelはユーザーがアクセスしようとするすべてのアプリケーションURLのメンテナンスモードビューを表示します。必要に応じて、すべてのリクエストを特定のURLにリダイレクトするようにLaravelに指示することができます。これは、 &lt;code&gt;redirect&lt;/code&gt; オプションを使用して実行できます。たとえば、すべてのリクエストを &lt;code&gt;/&lt;/code&gt; URIにリダイレクトしたい場合があります。</target>
        </trans-unit>
        <trans-unit id="fb1f051cfb47dfffc69e9178d4ab4f98bc199a99" translate="yes" xml:space="preserve">
          <source>While in maintenance mode, you may use the &lt;code&gt;secret&lt;/code&gt; option to specify a maintenance mode bypass token:</source>
          <target state="translated">メンテナンスモードでは、 &lt;code&gt;secret&lt;/code&gt; オプションを使用して、メンテナンスモードのバイパストークンを指定できます。</target>
        </trans-unit>
        <trans-unit id="eef2f7a197f14052fc6560df4ffa3d071341260e" translate="yes" xml:space="preserve">
          <source>While most Eloquent collection methods return a new instance of an Eloquent collection, the &lt;code&gt;pluck&lt;/code&gt;, &lt;code&gt;keys&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;, &lt;code&gt;collapse&lt;/code&gt;, &lt;code&gt;flatten&lt;/code&gt; and &lt;code&gt;flip&lt;/code&gt; methods return a &lt;a href=&quot;collections&quot;&gt;base collection&lt;/a&gt; instance. Likewise, if a &lt;code&gt;map&lt;/code&gt; operation returns a collection that does not contain any Eloquent models, it will be automatically cast to a base collection.</source>
          <target state="translated">ほとんどのEloquentコレクションメソッドはEloquentコレクションの新しいインスタンスを返しますが、 &lt;code&gt;pluck&lt;/code&gt; 、 &lt;code&gt;keys&lt;/code&gt; 、 &lt;code&gt;zip&lt;/code&gt; 、 &lt;code&gt;collapse&lt;/code&gt; 、 &lt;code&gt;flatten&lt;/code&gt; 、および &lt;code&gt;flip&lt;/code&gt; メソッドは&lt;a href=&quot;collections&quot;&gt;基本コレクション&lt;/a&gt;インスタンスを返します。同様に、 &lt;code&gt;map&lt;/code&gt; 操作がEloquentモデルを含まないコレクションを返す場合、それは自動的に基本コレクションにキャストされます。</target>
        </trans-unit>
        <trans-unit id="348c94bc88df6a4ae4554be4717014a2ad4e2291" translate="yes" xml:space="preserve">
          <source>While not strictly required to use Scout, you should strongly consider configuring a &lt;a href=&quot;queues&quot;&gt;queue driver&lt;/a&gt; before using the library. Running a queue worker will allow Scout to queue all operations that sync your model information to your search indexes, providing much better response times for your application's web interface.</source>
          <target state="translated">Scoutを使用するのに厳密に必須ではありませんが、ライブラリを使用する前に&lt;a href=&quot;queues&quot;&gt;キュードライバーの&lt;/a&gt;構成を強く検討する必要があります。キューワーカーを実行すると、Scoutはモデル情報を検索インデックスに同期するすべての操作をキューに入れ、アプリケーションのWebインターフェースの応答時間を大幅に改善できます。</target>
        </trans-unit>
        <trans-unit id="48ddd56f9a6e231b28ec09bf06984ec9bbede44d" translate="yes" xml:space="preserve">
          <source>While resources translate a single model into an array, resource collections translate a collection of models into an array. It is not absolutely necessary to define a resource collection class for each one of your model types since all resources provide a &lt;code&gt;collection&lt;/code&gt; method to generate an &quot;ad-hoc&quot; resource collection on the fly:</source>
          <target state="translated">リソースは単一のモデルを配列に変換しますが、リソースコレクションはモデルのコレクションを配列に変換します。すべてのリソースは、その場で「アドホック」リソースコレクションを生成するための &lt;code&gt;collection&lt;/code&gt; メソッドを提供するため、モデルタイプごとにリソースコレクションクラスを定義する必要はありません。</target>
        </trans-unit>
        <trans-unit id="8970eed14eb8bd493a983eb3b0caaacfac8fb563" translate="yes" xml:space="preserve">
          <source>While testing, the &lt;code&gt;Sanctum::actingAs&lt;/code&gt; method may be used to authenticate a user and specify which abilities are granted to their token:</source>
          <target state="translated">テスト中に、 &lt;code&gt;Sanctum::actingAs&lt;/code&gt; メソッドを使用して、ユーザーを認証し、トークンに付与する機能を指定できます。</target>
        </trans-unit>
        <trans-unit id="4ff2199a9c114dabc5f912ad7ed349c40a4cec00" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;each&lt;/code&gt; method calls the given callback for each item in the collection right away, the &lt;code&gt;tapEach&lt;/code&gt; method only calls the given callback as the items are being pulled out of the list one by one:</source>
          <target state="translated">一方で &lt;code&gt;each&lt;/code&gt; メソッドはすぐに、コレクション内の各アイテムの指定したコールバックを呼び出し、 &lt;code&gt;tapEach&lt;/code&gt; のアイテムが1で、リスト1の引き出されているような方法は与えられたコールバックを呼び出します。</target>
        </trans-unit>
        <trans-unit id="72fd6999c01e2ad34b06bf4430a0447529506b30" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;filter&lt;/code&gt; callback filters data for individual entries, you may use the &lt;code&gt;filterBatch&lt;/code&gt; method to register a callback that filters all data for a given request or console command. If the callback returns &lt;code&gt;true&lt;/code&gt;, all of the entries are recorded by Telescope:</source>
          <target state="translated">一方で &lt;code&gt;filter&lt;/code&gt; コールバックは、個々のエントリのデータをフィルタリングし、あなたが使用すること &lt;code&gt;filterBatch&lt;/code&gt; の指定された要求またはコンソールコマンドのすべてのデータをフィルタリングするコールバックを登録する方法を。コールバックが &lt;code&gt;true&lt;/code&gt; を返す場合、すべてのエントリがTelescopeによって記録されます。</target>
        </trans-unit>
        <trans-unit id="18db8efbc5b2962f19f9abc43ec5664dc4d5ecac" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;input&lt;/code&gt; method retrieves values from entire request payload (including the query string), the &lt;code&gt;query&lt;/code&gt; method will only retrieve values from the query string:</source>
          <target state="translated">ながら &lt;code&gt;input&lt;/code&gt; 方法は、（クエリ文字列を含む）全体の要求ペイロードから値を取得し、 &lt;code&gt;query&lt;/code&gt; 方法は、クエリ文字列から値を取得します。</target>
        </trans-unit>
        <trans-unit id="73c46ec032ad965202c61dc0d4b466a27af74713" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;input&lt;/code&gt; method retrieves values from the entire request payload (including the query string), the &lt;code&gt;query&lt;/code&gt; method will only retrieve values from the query string:</source>
          <target state="translated">ながら &lt;code&gt;input&lt;/code&gt; 方法は、（クエリ文字列を含む）全体の要求ペイロードから値を取得し、 &lt;code&gt;query&lt;/code&gt; 方法は、クエリ文字列から値を取得します。</target>
        </trans-unit>
        <trans-unit id="26948efa7cc67c3f1b9d2912661f8bae8df20721" translate="yes" xml:space="preserve">
          <source>While this code is valid, the structure of the &lt;code&gt;handle&lt;/code&gt; method becomes noisy since it is cluttered with Redis rate limiting logic. In addition, this rate limiting logic must be duplicated for any other jobs that we want to rate limit.</source>
          <target state="translated">このコードは有効ですが、 &lt;code&gt;handle&lt;/code&gt; メソッドの構造は、Redisのレート制限ロジックで雑然としているためノイズが多くなります。さらに、このレート制限ロジックは、レート制限する他のジョブと重複している必要があります。</target>
        </trans-unit>
        <trans-unit id="94252da4cd002dac9c35c12822ce732b2cee0343" translate="yes" xml:space="preserve">
          <source>While trialing and collecting payment method details up front, Paddle prevents any subscription changes such as swapping plans or updating quantities. If you want to allow a customer to swap plans during a trial the subscription must be cancelled and recreated.</source>
          <target state="translated">トライアルを行い、支払い方法の詳細を前もって収集している間、Paddleはプランの入れ替えや数量の更新などのサブスクリプションの変更を防ぎます。トライアル中に顧客がプランを交換できるようにしたい場合は、サブスクリプションをキャンセルして再作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="388db48a80bdd2f36afecf8de5947265a4847a19" translate="yes" xml:space="preserve">
          <source>While working with Cashier we recommend you also refer to Paddle's &lt;a href=&quot;https://developer.paddle.com/guides&quot;&gt;user guides&lt;/a&gt; and &lt;a href=&quot;https://developer.paddle.com/api-reference/intro&quot;&gt;API documentation&lt;/a&gt;.</source>
          <target state="translated">キャッシャーを使用する際は、Paddleの&lt;a href=&quot;https://developer.paddle.com/guides&quot;&gt;ユーザーガイド&lt;/a&gt;と&lt;a href=&quot;https://developer.paddle.com/api-reference/intro&quot;&gt;APIドキュメント&lt;/a&gt;も参照することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="c3263ee6474bc0189a33e9cf3b3cf7df16488e09" translate="yes" xml:space="preserve">
          <source>While your application is in maintenance mode, no &lt;a href=&quot;queues&quot;&gt;queued jobs&lt;/a&gt; will be handled. The jobs will continue to be handled as normal once the application is out of maintenance mode.</source>
          <target state="translated">アプリケーションがメンテナンスモードである間、&lt;a href=&quot;queues&quot;&gt;キューに入れられたジョブ&lt;/a&gt;は処理されません。アプリケーションがメンテナンスモードを終了すると、ジョブは引き続き通常どおり処理されます。</target>
        </trans-unit>
        <trans-unit id="9fc8481f8e98f789cfa820faf45077429352efa1" translate="yes" xml:space="preserve">
          <source>While your command is executing, you will obviously need to access the values for the arguments and options accepted by your command. To do so, you may use the &lt;code&gt;argument&lt;/code&gt; and &lt;code&gt;option&lt;/code&gt; methods:</source>
          <target state="translated">コマンドの実行中は、コマンドが受け入れる引数とオプションの値にアクセスする必要があることは明らかです。そのためには、 &lt;code&gt;argument&lt;/code&gt; と &lt;code&gt;option&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="a8342c13ed330ab09b6fedcb2b457b5e7e116519" translate="yes" xml:space="preserve">
          <source>WhoopsHandler</source>
          <target state="translated">WhoopsHandler</target>
        </trans-unit>
        <trans-unit id="2b7534a5342ff1d72a12f61109f6083d5575204f" translate="yes" xml:space="preserve">
          <source>WhoopsHandler (Foundation\Exceptions)</source>
          <target state="translated">WhoopsHandler (FoundationExceptions)</target>
        </trans-unit>
        <trans-unit id="922b394baa31a45941be8c5060c62134e9545195" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::directoriesExceptVendor()</source>
          <target state="translated">WhoopsHandler::directoriesExceptVendor()</target>
        </trans-unit>
        <trans-unit id="c6eba6524006ccf60161800e05a6efb5bfaee42a" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::forDebug()</source>
          <target state="translated">WhoopsHandler::forDebug()</target>
        </trans-unit>
        <trans-unit id="655639dfd77d3df9e19f85700bc94444c3195f0a" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::registerApplicationPaths()</source>
          <target state="translated">WhoopsHandler::registerApplicationPaths()</target>
        </trans-unit>
        <trans-unit id="0632e6b2726312f02ee6cbbcd6c27d6acc56d2fa" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::registerBlacklist()</source>
          <target state="translated">WhoopsHandler::registerBlacklist()</target>
        </trans-unit>
        <trans-unit id="8af9375d26e068a95bbeecd00d64c3112a1a7040" translate="yes" xml:space="preserve">
          <source>WhoopsHandler::registerEditor()</source>
          <target state="translated">WhoopsHandler::registerEditor()</target>
        </trans-unit>
        <trans-unit id="7533329b81e951b47322623b641f6f462ec5b6b3" translate="yes" xml:space="preserve">
          <source>Wildcard Event Listeners</source>
          <target state="translated">ワイルドカードイベントリスナー</target>
        </trans-unit>
        <trans-unit id="b787678841b65ab6be1b8553eaade2085596111f" translate="yes" xml:space="preserve">
          <source>Wildcard SSL</source>
          <target state="translated">ワイルドカードSSL</target>
        </trans-unit>
        <trans-unit id="1dc9d20817df4c4c0f23d475a957e54e2ba23dbc" translate="yes" xml:space="preserve">
          <source>Wildcard Subscriptions</source>
          <target state="translated">ワイルドカードの購読</target>
        </trans-unit>
        <trans-unit id="e3982a53d2b255a3d7522bb44900c219168ecb8e" translate="yes" xml:space="preserve">
          <source>Will be removed in a future Laravel version.</source>
          <target state="translated">将来のLaravelのバージョンで削除されます。</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="56103090882d5808ad3598385120c914d3c77ee4" translate="yes" xml:space="preserve">
          <source>Windows users should not use the &lt;code&gt;~/&lt;/code&gt; path syntax and instead should use the full path to their project, such as &lt;code&gt;C:\Users\user\Code\project1&lt;/code&gt;.</source>
          <target state="translated">Windowsユーザーは、 &lt;code&gt;~/&lt;/code&gt; パス構文を使用しないでください。代わりに、 &lt;code&gt;C:\Users\user\Code\project1&lt;/code&gt; などのプロジェクトへのフルパスを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d0a162f24e233795006248e6eceb7d0912e33599" translate="yes" xml:space="preserve">
          <source>Windows:</source>
          <target state="translated">Windows:</target>
        </trans-unit>
        <trans-unit id="11f85e2e9a84fe1a17f5a1b93f3d4513b411a6af" translate="yes" xml:space="preserve">
          <source>Windows: &lt;code&gt;%USERPROFILE%\AppData\Roaming\Composer\vendor\bin&lt;/code&gt;</source>
          <target state="translated">Windows： &lt;code&gt;%USERPROFILE%\AppData\Roaming\Composer\vendor\bin&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d864d109c167a76425e1d9a229f9b784d3417dcd" translate="yes" xml:space="preserve">
          <source>WipeCommand</source>
          <target state="translated">WipeCommand</target>
        </trans-unit>
        <trans-unit id="03a000aac90e8f2ecb4da4adb760bc9efc0ed6c5" translate="yes" xml:space="preserve">
          <source>WipeCommand (Database)</source>
          <target state="translated">WipeCommand (データベース)</target>
        </trans-unit>
        <trans-unit id="2525634b9fa27a5eaeddda2735fdd03b8dab63c5" translate="yes" xml:space="preserve">
          <source>WipeCommand::dropAllTables()</source>
          <target state="translated">WipeCommand::dropAllTables()</target>
        </trans-unit>
        <trans-unit id="8c7ab45e39df754c52c70c34a97c3f7fdb6a7468" translate="yes" xml:space="preserve">
          <source>WipeCommand::dropAllTypes()</source>
          <target state="translated">WipeCommand::dropAllTypes()</target>
        </trans-unit>
        <trans-unit id="2f66bc085e7e1a627d4e5b30631196899d3a4663" translate="yes" xml:space="preserve">
          <source>WipeCommand::dropAllViews()</source>
          <target state="translated">WipeCommand::dropAllViews()</target>
        </trans-unit>
        <trans-unit id="5f100c3f802a37891cb69e66414299067df17084" translate="yes" xml:space="preserve">
          <source>WipeCommand::getOptions()</source>
          <target state="translated">WipeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="69cba5155c88423262d3c4d6d03502bc5875ae77" translate="yes" xml:space="preserve">
          <source>WipeCommand::handle()</source>
          <target state="translated">WipeCommand::handle()</target>
        </trans-unit>
        <trans-unit id="f6cdf2f1377b4f1da070d015c6228f3de75910f6" translate="yes" xml:space="preserve">
          <source>With Credit Card Up Front</source>
          <target state="translated">前方にクレジットカードがある場合</target>
        </trans-unit>
        <trans-unit id="583a679104cb88f1b20e29da230b00299a9fe96f" translate="yes" xml:space="preserve">
          <source>With Payment Method Up Front</source>
          <target state="translated">お支払い方法を前払いにした場合</target>
        </trans-unit>
        <trans-unit id="18427497c463b152591bf88ca6911e9e7ea8b083" translate="yes" xml:space="preserve">
          <source>With this addition to your &lt;code&gt;webpack.mix.js&lt;/code&gt; file, Mix will no longer match any &lt;code&gt;url()&lt;/code&gt; or copy assets to your public directory. In other words, the compiled CSS will look just like how you originally typed it:</source>
          <target state="translated">この &lt;code&gt;webpack.mix.js&lt;/code&gt; ファイルへの追加により、Mixは &lt;code&gt;url()&lt;/code&gt; と一致しなくなり、アセットをパブリックディレクトリにコピーしなくなります。つまり、コンパイルされたCSSは、最初に入力した方法と同じようになります。</target>
        </trans-unit>
        <trans-unit id="f96228eccaf6f329d5c25f92f15be89fec18bc36" translate="yes" xml:space="preserve">
          <source>With this single line of code, you may now take advantage of:</source>
          <target state="translated">この一行のコードで、今すぐにでも利用できるようになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="fea6acffe87e259a90dacff8c8e0282eadd35430" translate="yes" xml:space="preserve">
          <source>WithFaker</source>
          <target state="translated">WithFaker</target>
        </trans-unit>
        <trans-unit id="d9ce4c57668fd41b5c29bd07f403151a4a3f7a5e" translate="yes" xml:space="preserve">
          <source>WithFaker (Foundation\Testing)</source>
          <target state="translated">WithFaker (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="ded64d3b2d821c90553044af2e3d008f20ea5f49" translate="yes" xml:space="preserve">
          <source>WithFaker::faker()</source>
          <target state="translated">WithFaker::faker()</target>
        </trans-unit>
        <trans-unit id="aded131891a4294d825381a0bd4c5ae5ab968b74" translate="yes" xml:space="preserve">
          <source>WithFaker::makeFaker()</source>
          <target state="translated">WithFaker::makeFaker()</target>
        </trans-unit>
        <trans-unit id="7c304dcbfd22a06c97c6e6f7753d76d681b12cc9" translate="yes" xml:space="preserve">
          <source>WithFaker::setUpFaker()</source>
          <target state="translated">WithFaker::setUpFaker()</target>
        </trans-unit>
        <trans-unit id="48c1d19901383c95d312198345b6e82b271efe7b" translate="yes" xml:space="preserve">
          <source>Within a mailable class' &lt;code&gt;build&lt;/code&gt; method, you may use the &lt;code&gt;view&lt;/code&gt; method to specify which template should be used when rendering the email's contents. Since each email typically uses a &lt;a href=&quot;blade&quot;&gt;Blade template&lt;/a&gt; to render its contents, you have the full power and convenience of the Blade templating engine when building your email's HTML:</source>
          <target state="translated">メール可能なクラスの &lt;code&gt;build&lt;/code&gt; メソッド内で、 &lt;code&gt;view&lt;/code&gt; メソッドを使用して、メールのコンテンツをレンダリングするときに使用するテンプレートを指定できます。各メールは通常、&lt;a href=&quot;blade&quot;&gt;Bladeテンプレート&lt;/a&gt;を使用してコンテンツをレンダリングするため、メールのHTMLを作成するときに、Bladeテンプレートエンジンの全機能と便利さを利用できます。</target>
        </trans-unit>
        <trans-unit id="6747d9675ebd9f5e1f14782ecab150a332f9d10e" translate="yes" xml:space="preserve">
          <source>Within a service provider, you always have access to the container via the &lt;code&gt;$this-&amp;gt;app&lt;/code&gt; property. We can register a binding using the &lt;code&gt;bind&lt;/code&gt; method, passing the class or interface name that we wish to register along with a &lt;code&gt;Closure&lt;/code&gt; that returns an instance of the class:</source>
          <target state="translated">サービスプロバイダー内では、常に &lt;code&gt;$this-&amp;gt;app&lt;/code&gt; プロパティを介してコンテナーにアクセスできます。 &lt;code&gt;bind&lt;/code&gt; メソッドを使用してバインディングを登録し、クラスのインスタンスを返す &lt;code&gt;Closure&lt;/code&gt; とともに、登録するクラスまたはインターフェースの名前を渡します。</target>
        </trans-unit>
        <trans-unit id="b6167527c55baed6217aa6e69545a373e1bccfc8" translate="yes" xml:space="preserve">
          <source>Within an event listener, you may access the &lt;code&gt;notifiable&lt;/code&gt;, &lt;code&gt;notification&lt;/code&gt;, and &lt;code&gt;channel&lt;/code&gt; properties on the event to learn more about the notification recipient or the notification itself:</source>
          <target state="translated">イベントリスナー内で、イベントの &lt;code&gt;notifiable&lt;/code&gt; 、 &lt;code&gt;notification&lt;/code&gt; 、および &lt;code&gt;channel&lt;/code&gt; プロパティにアクセスして、通知の受信者または通知自体の詳細を確認できます。</target>
        </trans-unit>
        <trans-unit id="28219899d00e79d2951ad1c31159913e70e55bd1" translate="yes" xml:space="preserve">
          <source>Within both of these methods you may use the Laravel schema builder to expressively create and modify tables. To learn about all of the methods available on the &lt;code&gt;Schema&lt;/code&gt; builder, &lt;a href=&quot;#creating-tables&quot;&gt;check out its documentation&lt;/a&gt;. For example, the following migration creates a &lt;code&gt;flights&lt;/code&gt; table:</source>
          <target state="translated">これらの両方のメソッド内で、Laravelスキーマビルダーを使用して、テーブルを明示的に作成および変更できます。 &lt;code&gt;Schema&lt;/code&gt; ビルダーで使用できるすべてのメソッドについては、&lt;a href=&quot;#creating-tables&quot;&gt;そのドキュメントを確認してください&lt;/a&gt;。たとえば、次の移行では &lt;code&gt;flights&lt;/code&gt; テーブルが作成されます。</target>
        </trans-unit>
        <trans-unit id="e83283f5c7e6ff3dec1324ea5704c72ae1ac6122" translate="yes" xml:space="preserve">
          <source>Within both of these methods you may use the Laravel schema builder to expressively create and modify tables. To learn about all of the methods available on the &lt;code&gt;Schema&lt;/code&gt; builder, &lt;a href=&quot;#creating-tables&quot;&gt;check out its documentation&lt;/a&gt;. For example, this migration example creates a &lt;code&gt;flights&lt;/code&gt; table:</source>
          <target state="translated">これらの両方のメソッド内で、Laravelスキーマビルダーを使用して、テーブルを明示的に作成および変更できます。 &lt;code&gt;Schema&lt;/code&gt; Builderで使用できるすべてのメソッドについては、&lt;a href=&quot;#creating-tables&quot;&gt;そのドキュメントを確認してください&lt;/a&gt;。たとえば、次の移行例では、 &lt;code&gt;flights&lt;/code&gt; テーブルを作成します。</target>
        </trans-unit>
        <trans-unit id="4072e2b4bfe33dad8f8ec117143a2854d1ea7955" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;DatabaseSeeder&lt;/code&gt; class, you may use the &lt;code&gt;call&lt;/code&gt; method to execute additional seed classes. Using the &lt;code&gt;call&lt;/code&gt; method allows you to break up your database seeding into multiple files so that no single seeder class becomes overwhelmingly large. Pass the name of the seeder class you wish to run:</source>
          <target state="translated">&lt;code&gt;DatabaseSeeder&lt;/code&gt; クラス内で、 &lt;code&gt;call&lt;/code&gt; メソッドを使用して追加のシードクラスを実行できます。 &lt;code&gt;call&lt;/code&gt; メソッドを使用すると、データベースのシードを複数のファイルに分割して、単一のシーダークラスが圧倒的に大きくならないようにすることができます。実行するシードクラスの名前を渡します。</target>
        </trans-unit>
        <trans-unit id="38cecc6db844791d812b59edd96474959871daac" translate="yes" xml:space="preserve">
          <source>Within the Closure, which serves as the factory definition, you may return the default test values of all attributes on the model. The Closure will receive an instance of the &lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHP library, which allows you to conveniently generate various kinds of random data for testing.</source>
          <target state="translated">ファクトリー定義として機能するクロージャー内で、モデルのすべての属性のデフォルトのテスト値を返すことができます。 Closureは&lt;a href=&quot;https://github.com/fzaninotto/Faker&quot;&gt;Faker&lt;/a&gt; PHPライブラリのインスタンスを受け取ります。これにより、テスト用にさまざまな種類のランダムデータを簡単に生成できます。</target>
        </trans-unit>
        <trans-unit id="ac61635a9bf84973d2e9e3970c12af375ccb2e7c" translate="yes" xml:space="preserve">
          <source>Without Credit Card Up Front</source>
          <target state="translated">クレジットカードのアップフロントなし</target>
        </trans-unit>
        <trans-unit id="7140780d0751593a64bd453da071949e464b5d8a" translate="yes" xml:space="preserve">
          <source>Without Payment Method Up Front</source>
          <target state="translated">前払いのお支払い方法なし</target>
        </trans-unit>
        <trans-unit id="b910306744dcdff16bb3f5ea2df65b93ae9a6b62" translate="yes" xml:space="preserve">
          <source>Without pruning, the &lt;code&gt;telescope_entries&lt;/code&gt; table can accumulate records very quickly. To mitigate this, you should schedule the &lt;code&gt;telescope:prune&lt;/code&gt; Artisan command to run daily:</source>
          <target state="translated">プルーニングを行わないと、 &lt;code&gt;telescope_entries&lt;/code&gt; テーブルはレコードを非常に迅速に蓄積できます。これを軽減するには、 &lt;code&gt;telescope:prune&lt;/code&gt; Artisanコマンドを毎日実行するようにスケジュールする必要があります。</target>
        </trans-unit>
        <trans-unit id="4df11ff8ee3b580245718abb3b6d106cd59ce60e" translate="yes" xml:space="preserve">
          <source>WithoutEvents</source>
          <target state="translated">WithoutEvents</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
