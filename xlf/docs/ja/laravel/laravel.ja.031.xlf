<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="649987909911cda41e68f9a2186c3608066d08ce" translate="yes" xml:space="preserve">
          <source>However, this middleware would perform its task &lt;strong&gt;after&lt;/strong&gt; the request is handled by the application:</source>
          <target state="translated">ただし、このミドルウェアは、リクエストがアプリケーションによって処理された&lt;strong&gt;後に&lt;/strong&gt;そのタスクを実行します。</target>
        </trans-unit>
        <trans-unit id="28e6d9f6d022c718eb261debe00c86b4dc2b25b0" translate="yes" xml:space="preserve">
          <source>However, you may also define the maximum number of seconds a job should be allowed to run on the job class itself. If the timeout is specified on the job, it will take precedence over any timeout specified on the command line:</source>
          <target state="translated">しかし、ジョブクラス自身でジョブの実行を許可する最大秒数を定義することもできます。ジョブでタイムアウトが指定された場合、コマンドラインで指定されたタイムアウトよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="ca72004f36d97017e5b369a8dcfe0fc0cff0e054" translate="yes" xml:space="preserve">
          <source>However, you may also use the &lt;code&gt;Cache&lt;/code&gt; facade, which is what we will use throughout this documentation. The &lt;code&gt;Cache&lt;/code&gt; facade provides convenient, terse access to the underlying implementations of the Laravel cache contracts:</source>
          <target state="translated">ただし、このドキュメント全体で使用する &lt;code&gt;Cache&lt;/code&gt; ファサードを使用することもできます。 &lt;code&gt;Cache&lt;/code&gt; ファサードLaravelキャッシュ契約の基本的な実装に便利な、簡潔なアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="b6a35b0dec15333050e625b216bb3dd5bc88cef6" translate="yes" xml:space="preserve">
          <source>However, you may extend Valet with your own &lt;a href=&quot;#custom-valet-drivers&quot;&gt;custom drivers&lt;/a&gt;.</source>
          <target state="translated">ただし、独自の&lt;a href=&quot;#custom-valet-drivers&quot;&gt;カスタムドライバで&lt;/a&gt; Valetを拡張できます。</target>
        </trans-unit>
        <trans-unit id="b3961c59003f85dd70e202e94a99b2afa1888c29" translate="yes" xml:space="preserve">
          <source>However, you may still have several questions regarding contracts. For example, why use interfaces at all? Isn't using interfaces more complicated? Let's distill the reasons for using interfaces to the following headings: loose coupling and simplicity.</source>
          <target state="translated">とはいえ、契約に関してはいくつかの疑問が残るかもしれません。例えば、なぜインターフェースを使うのか?インターフェースを使うともっと複雑になるのではないか?インターフェイスを使う理由を「ゆるやかな結合」と「シンプルさ」という見出しに集約してみましょう。</target>
        </trans-unit>
        <trans-unit id="db513e1313e635b0b5b99dcaf4951c206baf7e8e" translate="yes" xml:space="preserve">
          <source>However, you may take a more granular approach by defining the maximum number of attempts on the job class itself. If the maximum number of attempts is specified on the job, it will take precedence over the value provided on the command line:</source>
          <target state="translated">しかし、ジョブクラス自体に最大試行回数を定義することで、より詳細なアプローチを取ることができます。ジョブ上で最大試行回数が指定された場合、コマンドラインで指定された値よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="752195cecb6ae8bdd32cd7d522eba00d935a2e22" translate="yes" xml:space="preserve">
          <source>However, you pass a callback to the &lt;code&gt;countBy&lt;/code&gt; method to count all items by a custom value:</source>
          <target state="translated">ただし、 &lt;code&gt;countBy&lt;/code&gt; メソッドにコールバックを渡して、すべてのアイテムをカスタム値でカウントします。</target>
        </trans-unit>
        <trans-unit id="42a87b87a424b82794afa19887fea0fdd8599d8e" translate="yes" xml:space="preserve">
          <source>However, you will need to pair Passport's JSON API with your own frontend to provide a dashboard for your users to manage their clients. Below, we'll review all of the API endpoints for managing clients. For convenience, we'll use &lt;a href=&quot;https://github.com/axios/axios&quot;&gt;Axios&lt;/a&gt; to demonstrate making HTTP requests to the endpoints.</source>
          <target state="translated">ただし、ユーザーがクライアントを管理するためのダッシュボードを提供するには、PassportのJSONAPIを独自のフロントエンドとペアにする必要があります。以下では、クライアントを管理するためのすべてのAPIエンドポイントを確認します。便宜上、&lt;a href=&quot;https://github.com/axios/axios&quot;&gt;Axios&lt;/a&gt;を使用して、エンドポイントへのHTTPリクエストの作成を示します。</target>
        </trans-unit>
        <trans-unit id="5a1bbed8c0b594ca3902942a1fc40fac04272b0b" translate="yes" xml:space="preserve">
          <source>However, you will need to pair Passport's JSON API with your own frontend to provide a dashboard for your users to manage their clients. Below, we'll review all of the API endpoints for managing clients. For convenience, we'll use &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt; to demonstrate making HTTP requests to the endpoints.</source>
          <target state="translated">ただし、ユーザーがクライアントを管理するためのダッシュボードを提供するには、PassportのJSON APIを独自のフロントエンドとペアにする必要があります。以下では、クライアントを管理するためのすべてのAPIエンドポイントを確認します。便宜上、&lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt;を使用してエンドポイントへのHTTPリクエストの作成を示します。</target>
        </trans-unit>
        <trans-unit id="f508657cbc97322f52c231052c41835d65b00328" translate="yes" xml:space="preserve">
          <source>HtmlString</source>
          <target state="translated">HtmlString</target>
        </trans-unit>
        <trans-unit id="231967046268427f35f499b7be9069b6b8b81f19" translate="yes" xml:space="preserve">
          <source>HtmlString (Support)</source>
          <target state="translated">HtmlString (サポート)</target>
        </trans-unit>
        <trans-unit id="1e750a1f3b7f4bd6ac1d4c382b43fb04530bb0a9" translate="yes" xml:space="preserve">
          <source>HtmlString::__construct()</source>
          <target state="translated">HtmlString::__construct()</target>
        </trans-unit>
        <trans-unit id="de8094af22f4cf2fa39fb6e9c1a3c0d73ae876ec" translate="yes" xml:space="preserve">
          <source>HtmlString::__toString()</source>
          <target state="translated">HtmlString::__toString()</target>
        </trans-unit>
        <trans-unit id="4508936205eb0b69e52a93367888b8eb281bb455" translate="yes" xml:space="preserve">
          <source>HtmlString::isEmpty()</source>
          <target state="translated">HtmlString::isEmpty()</target>
        </trans-unit>
        <trans-unit id="dfb09119ad183b30b0a223e8343b6d6b7558f310" translate="yes" xml:space="preserve">
          <source>HtmlString::isNotEmpty()</source>
          <target state="translated">HtmlString::isNotEmpty()</target>
        </trans-unit>
        <trans-unit id="97b9e50fd97847ac58fbaa1882519e14e2379b7b" translate="yes" xml:space="preserve">
          <source>HtmlString::toHtml()</source>
          <target state="translated">HtmlString::toHtml()</target>
        </trans-unit>
        <trans-unit id="6761270eaf033bc903be24dc1ca5b83546148d17" translate="yes" xml:space="preserve">
          <source>Htmlable</source>
          <target state="translated">Htmlable</target>
        </trans-unit>
        <trans-unit id="2838367c122712fabd3bffa4a4a569f774eea6fb" translate="yes" xml:space="preserve">
          <source>Htmlable (Contracts)</source>
          <target state="translated">Htmlable (契約書)</target>
        </trans-unit>
        <trans-unit id="d8d1171394355dc61f0cd046786d93d303c8a627" translate="yes" xml:space="preserve">
          <source>Htmlable::toHtml()</source>
          <target state="translated">Htmlable::toHtml()</target>
        </trans-unit>
        <trans-unit id="fb5c6c62bf80b8c73f40fbbb8ffdc8cf06e4cb8f" translate="yes" xml:space="preserve">
          <source>Http</source>
          <target state="translated">Http</target>
        </trans-unit>
        <trans-unit id="8d81a930d16603687e7b72a4e0765216bdfa54e5" translate="yes" xml:space="preserve">
          <source>Http (Support\Facades)</source>
          <target state="translated">Http(サポート・ファケイド</target>
        </trans-unit>
        <trans-unit id="773709ba2ce23863af9fdcd25f732074a7dbda0f" translate="yes" xml:space="preserve">
          <source>Http::getFacadeAccessor()</source>
          <target state="translated">Http::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="5d1f50561157d3fd02aca0389b4218e18741f95d" translate="yes" xml:space="preserve">
          <source>HttpClientException</source>
          <target state="translated">HttpClientException</target>
        </trans-unit>
        <trans-unit id="933116c1d833ca2733912e1ea4df4d65c3ad8933" translate="yes" xml:space="preserve">
          <source>HttpClientException (Http\Client)</source>
          <target state="translated">HttpClientException (HttpClient)</target>
        </trans-unit>
        <trans-unit id="6e788520269a8d2f4bace94042d1b25ee2e6475e" translate="yes" xml:space="preserve">
          <source>HttpException</source>
          <target state="translated">HttpException</target>
        </trans-unit>
        <trans-unit id="a53e5e5993f5f356a6631f870b33c4ad649cbb67" translate="yes" xml:space="preserve">
          <source>HttpException (Foundation\Testing)</source>
          <target state="translated">HttpException (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="b2defc7d30519c5e6bf32543d0c7fad8f5febc4b" translate="yes" xml:space="preserve">
          <source>HttpExceptionInterface</source>
          <target state="translated">HttpExceptionInterface</target>
        </trans-unit>
        <trans-unit id="b78d9b4ba55ce061ceb404c95efaa0d9fc90b3fc" translate="yes" xml:space="preserve">
          <source>HttpKernelInterface</source>
          <target state="translated">HttpKernelInterface</target>
        </trans-unit>
        <trans-unit id="a97009543c98a8790f7838667b8e7f2687645264" translate="yes" xml:space="preserve">
          <source>HttpResponseException</source>
          <target state="translated">HttpResponseException</target>
        </trans-unit>
        <trans-unit id="207e13ec61c93a8f8dfefa05bac51e5f67e22b16" translate="yes" xml:space="preserve">
          <source>HttpResponseException (Http\Exceptions)</source>
          <target state="translated">HttpResponseException (HttpExceptions)</target>
        </trans-unit>
        <trans-unit id="c16d87b4f9953286408013a1df4ac8604a14a573" translate="yes" xml:space="preserve">
          <source>HttpResponseException::__construct()</source>
          <target state="translated">HttpResponseException::__construct()</target>
        </trans-unit>
        <trans-unit id="baf923b8160f898270a5cb886e86c0dc2a873ba4" translate="yes" xml:space="preserve">
          <source>HttpResponseException::getResponse()</source>
          <target state="translated">HttpResponseException::getResponse()</target>
        </trans-unit>
        <trans-unit id="e7aadcf5287187c3b235c16f747036e8aa2a16f7" translate="yes" xml:space="preserve">
          <source>Http\Client</source>
          <target state="translated">Http\Client</target>
        </trans-unit>
        <trans-unit id="6212ff17228009de59ab828dbbb8b440222e7273" translate="yes" xml:space="preserve">
          <source>Http\Concerns</source>
          <target state="translated">Http\Concerns</target>
        </trans-unit>
        <trans-unit id="a45c74f478db2752aa4eafe0eeb83c027d2a1f51" translate="yes" xml:space="preserve">
          <source>Http\Exceptions</source>
          <target state="translated">Http\Exceptions</target>
        </trans-unit>
        <trans-unit id="a45244cdf3d4f52a0cb560248cc5af2cbc345f80" translate="yes" xml:space="preserve">
          <source>Http\Middleware</source>
          <target state="translated">Http\Middleware</target>
        </trans-unit>
        <trans-unit id="dfaf67e8714c43f464c78cb6bf6099a1b548cfa2" translate="yes" xml:space="preserve">
          <source>Http\Resources</source>
          <target state="translated">Http\Resources</target>
        </trans-unit>
        <trans-unit id="415dcaf556ef379232b34288dc2f8f24d611022a" translate="yes" xml:space="preserve">
          <source>Http\Resources\Json</source>
          <target state="translated">Http\Resources\Json</target>
        </trans-unit>
        <trans-unit id="7247214858fe81783dc867ef1d8b3d5dc929c8e1" translate="yes" xml:space="preserve">
          <source>Http\Testing</source>
          <target state="translated">Http\Testing</target>
        </trans-unit>
        <trans-unit id="a38df5fc50fbd18c010f89723d32df31a2609347" translate="yes" xml:space="preserve">
          <source>Hub</source>
          <target state="translated">Hub</target>
        </trans-unit>
        <trans-unit id="e73276cd8bdfe756cae3895163c3ea2a05b79d0b" translate="yes" xml:space="preserve">
          <source>Hub (Contracts)</source>
          <target state="translated">ハブ(契約</target>
        </trans-unit>
        <trans-unit id="068aee8b9addf3049d343e2bf8eab45e2c247bf7" translate="yes" xml:space="preserve">
          <source>Hub (Pipeline)</source>
          <target state="translated">ハブ(パイプライン</target>
        </trans-unit>
        <trans-unit id="c2cf4c60bbee7b9d2f9ecc4079ba57558c41f245" translate="yes" xml:space="preserve">
          <source>Hub::__construct()</source>
          <target state="translated">Hub::__construct()</target>
        </trans-unit>
        <trans-unit id="d0bcc21f2a767828bc6e869873733597b46dcda5" translate="yes" xml:space="preserve">
          <source>Hub::defaults()</source>
          <target state="translated">Hub::defaults()</target>
        </trans-unit>
        <trans-unit id="8e62337a7b4ecf224bb834c1d18851b55d4140dd" translate="yes" xml:space="preserve">
          <source>Hub::pipe()</source>
          <target state="translated">Hub::pipe()</target>
        </trans-unit>
        <trans-unit id="0f97e35ad1a02adb318a7639bdda0e1492c0cba2" translate="yes" xml:space="preserve">
          <source>Hub::pipeline()</source>
          <target state="translated">Hub::pipeline()</target>
        </trans-unit>
        <trans-unit id="7d06254923c1e9c5cada6c9585747709cd86c695" translate="yes" xml:space="preserve">
          <source>Hydrate the pivot table relationship on the models.</source>
          <target state="translated">モデル上のピボットテーブルの関係を水和します。</target>
        </trans-unit>
        <trans-unit id="a3d8cd574c90652d229fde2effae151f3eb41250" translate="yes" xml:space="preserve">
          <source>INTEGER equivalent column.</source>
          <target state="translated">INTEGER相当の列。</target>
        </trans-unit>
        <trans-unit id="4c9c4ba968615cd9aa4d173eefb6672ba6591fa2" translate="yes" xml:space="preserve">
          <source>INVALID_PASSWORD</source>
          <target state="translated">INVALID_PASSWORD</target>
        </trans-unit>
        <trans-unit id="939c7ec1476ec865001bbc90c6f6e584d50e9039" translate="yes" xml:space="preserve">
          <source>INVALID_TOKEN</source>
          <target state="translated">INVALID_TOKEN</target>
        </trans-unit>
        <trans-unit id="262b6c6795ac56240022015031bda3de14b0f0b5" translate="yes" xml:space="preserve">
          <source>INVALID_USER</source>
          <target state="translated">INVALID_USER</target>
        </trans-unit>
        <trans-unit id="4b44d1188ba30d99644789921949fb1d575f8b1e" translate="yes" xml:space="preserve">
          <source>IP address equivalent column.</source>
          <target state="translated">IPアドレスに相当する欄。</target>
        </trans-unit>
        <trans-unit id="a68fa8efe4a09d8c0c63ae60426d9366434bccb2" translate="yes" xml:space="preserve">
          <source>IRC</source>
          <target state="translated">IRC</target>
        </trans-unit>
        <trans-unit id="7b4500b3c59c8dda5c67150809ba2da8818e1884" translate="yes" xml:space="preserve">
          <source>Identifier for the first case in switch statement.</source>
          <target state="translated">switch文の最初のケースの識別子。</target>
        </trans-unit>
        <trans-unit id="6bf160f2966ce141c1eb5ed5cc963e8219c91056" translate="yes" xml:space="preserve">
          <source>Identifying Users</source>
          <target state="translated">ユーザーの識別</target>
        </trans-unit>
        <trans-unit id="d62531d5c7342e932232b827f9dc5f4b2b8a808c" translate="yes" xml:space="preserve">
          <source>If $resource is not a file handle.</source>
          <target state="translated">リソースがファイルハンドルではない場合。</target>
        </trans-unit>
        <trans-unit id="2b368a7944001d22b1d3a0099c8957f615bc731d" translate="yes" xml:space="preserve">
          <source>If $returnResult is set to false (the default), an exception is thrown in case of a failure. null is returned otherwise.</source>
          <target state="translated">returnResult が false に設定されている場合 (デフォルト)、失敗した場合は例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="d403175948cbe3c74c6486ea6a779f22f21716e7" translate="yes" xml:space="preserve">
          <source>If $returnResult is true, the result of the evaluation is returned as a boolean value instead: true in case of success, false in case of a failure.</source>
          <target state="translated">returnResult が true の場合、評価の結果がブール値として返されます:成功した場合は true、失敗した場合は false です。</target>
        </trans-unit>
        <trans-unit id="36700c2c10655c29379465dfe1fd6e89caba46f9" translate="yes" xml:space="preserve">
          <source>If Statements</source>
          <target state="translated">ステートメントの場合</target>
        </trans-unit>
        <trans-unit id="4f9ad11882a0a777ff5f7c680d2479fab7523dc7" translate="yes" xml:space="preserve">
          <source>If Vagrant is not automatically managing your &quot;hosts&quot; file, you may need to add the new site to that file as well:</source>
          <target state="translated">Vagrantが自動的に &quot;hosts &quot;ファイルを管理していない場合は、そのファイルにも新しいサイトを追加する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="13ca6ef8e7a2e0d5bbc86cc8bd7706f2b2a61cd1" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;#registering-policies&quot;&gt;policy is registered&lt;/a&gt; for the given model, the &lt;code&gt;can&lt;/code&gt; method will automatically call the appropriate policy and return the boolean result. If no policy is registered for the model, the &lt;code&gt;can&lt;/code&gt; method will attempt to call the Closure based Gate matching the given action name.</source>
          <target state="translated">指定&lt;a href=&quot;#registering-policies&quot;&gt;さ&lt;/a&gt;れたモデルにポリシーが登録されている場合、 &lt;code&gt;can&lt;/code&gt; メソッドは適切なポリシーを自動的に呼び出し、ブール値の結果を返します。モデルにポリシーが登録されていない場合、 &lt;code&gt;can&lt;/code&gt; メソッドは、指定されたアクション名に一致するクロージャベースのゲートを呼び出そうとします。</target>
        </trans-unit>
        <trans-unit id="ab0d87f188c79fb00d5e935589de1675d560902b" translate="yes" xml:space="preserve">
          <source>If a client does not request any specific scopes, you may configure your Passport server to attach a default scope to the token using the &lt;code&gt;setDefaultScope&lt;/code&gt; method. Typically, you should call this method from the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AuthServiceProvider&lt;/code&gt;:</source>
          <target state="translated">クライアントが特定のスコープを要求しない場合は、 &lt;code&gt;setDefaultScope&lt;/code&gt; メソッドを使用して、デフォルトのスコープをトークンにアタッチするようにPassportサーバーを構成できます。通常、このメソッドは &lt;code&gt;AuthServiceProvider&lt;/code&gt; の &lt;code&gt;boot&lt;/code&gt; メソッドから呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="bd76371e7dfd9c7b77bf4b3015c44b9439c7abde" translate="yes" xml:space="preserve">
          <source>If a database column is not specified, the attribute will be used.</source>
          <target state="translated">データベースのカラムが指定されていない場合は、その属性が使用されます。</target>
        </trans-unit>
        <trans-unit id="1835c153b8f454555ebd426230a94cabfe6392fc" translate="yes" xml:space="preserve">
          <source>If a matching model instance is not found in the database, a 404 HTTP response will be automatically generated.</source>
          <target state="translated">一致するモデルインスタンスがデータベースに見つからない場合、404 HTTPレスポンスが自動的に生成されます。</target>
        </trans-unit>
        <trans-unit id="cf21f36d41e01274abbc081217b7b3608faba988" translate="yes" xml:space="preserve">
          <source>If a notification supports being sent as a Slack message, you should define a &lt;code&gt;toSlack&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a &lt;code&gt;Illuminate\Notifications\Messages\SlackMessage&lt;/code&gt; instance. Slack messages may contain text content as well as an &quot;attachment&quot; that formats additional text or an array of fields. Let's take a look at a basic &lt;code&gt;toSlack&lt;/code&gt; example:</source>
          <target state="translated">通知がSlackメッセージとしての送信をサポートしている場合は、通知クラスで &lt;code&gt;toSlack&lt;/code&gt; メソッドを定義する必要があります。このメソッドは &lt;code&gt;$notifiable&lt;/code&gt; エンティティを受け取り、 &lt;code&gt;Illuminate\Notifications\Messages\SlackMessage&lt;/code&gt; インスタンスを返す必要があります。Slackメッセージには、テキストコンテンツと、追加のテキストまたはフィールドの配列をフォーマットする「添付ファイル」が含まれる場合があります。基本的な &lt;code&gt;toSlack&lt;/code&gt; の例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="4dd368cbc42eac07c2132d3e0204749411e070db" translate="yes" xml:space="preserve">
          <source>If a notification supports being sent as a Slack message, you should define a &lt;code&gt;toSlack&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return an &lt;code&gt;Illuminate\Notifications\Messages\SlackMessage&lt;/code&gt; instance. Slack messages may contain text content as well as an &quot;attachment&quot; that formats additional text or an array of fields. Let's take a look at a basic &lt;code&gt;toSlack&lt;/code&gt; example:</source>
          <target state="translated">通知がSlackメッセージとしての送信をサポートしている場合は、通知クラスで &lt;code&gt;toSlack&lt;/code&gt; メソッドを定義する必要があります。このメソッドは &lt;code&gt;$notifiable&lt;/code&gt; エンティティを受け取り、 &lt;code&gt;Illuminate\Notifications\Messages\SlackMessage&lt;/code&gt; インスタンスを返す必要があります。Slackメッセージには、テキストコンテンツと、追加のテキストまたはフィールドの配列をフォーマットする「添付ファイル」が含まれる場合があります。基本的な &lt;code&gt;toSlack&lt;/code&gt; の例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="e8c1fdb56fd964b424295f64b6cc9452e18504c7" translate="yes" xml:space="preserve">
          <source>If a notification supports being sent as an SMS, you should define a &lt;code&gt;toNexmo&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a &lt;code&gt;Illuminate\Notifications\Messages\NexmoMessage&lt;/code&gt; instance:</source>
          <target state="translated">通知がSMSとしての送信をサポートしている場合は、通知クラスで &lt;code&gt;toNexmo&lt;/code&gt; メソッドを定義する必要があります。このメソッドは &lt;code&gt;$notifiable&lt;/code&gt; エンティティを受け取り、 &lt;code&gt;Illuminate\Notifications\Messages\NexmoMessage&lt;/code&gt; インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="3d9dbece214197814a8a0dad81aba414511f3ca9" translate="yes" xml:space="preserve">
          <source>If a notification supports being sent as an SMS, you should define a &lt;code&gt;toNexmo&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return an &lt;code&gt;Illuminate\Notifications\Messages\NexmoMessage&lt;/code&gt; instance:</source>
          <target state="translated">通知がSMSとしての送信をサポートしている場合は、通知クラスで &lt;code&gt;toNexmo&lt;/code&gt; メソッドを定義する必要があります。このメソッドは &lt;code&gt;$notifiable&lt;/code&gt; エンティティを受け取り、 &lt;code&gt;Illuminate\Notifications\Messages\NexmoMessage&lt;/code&gt; インスタンスを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="6097065d305abb9fa7bb0ab2fa997dd438787da6" translate="yes" xml:space="preserve">
          <source>If a notification supports being sent as an email, you should define a &lt;code&gt;toMail&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a &lt;code&gt;Illuminate\Notifications\Messages\MailMessage&lt;/code&gt; instance. Mail messages may contain lines of text as well as a &quot;call to action&quot;. Let's take a look at an example &lt;code&gt;toMail&lt;/code&gt; method:</source>
          <target state="translated">通知が電子メールとしての送信をサポートしている場合は、通知クラスで &lt;code&gt;toMail&lt;/code&gt; メソッドを定義する必要があります。このメソッドは &lt;code&gt;$notifiable&lt;/code&gt; エンティティを受け取り、 &lt;code&gt;Illuminate\Notifications\Messages\MailMessage&lt;/code&gt; インスタンスを返します。メールメッセージには、テキスト行と「行動を促すフレーズ」を含めることができます。 &lt;code&gt;toMail&lt;/code&gt; メソッドの例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="65200e78d1b18a50849c1919450e2937fa4aace9" translate="yes" xml:space="preserve">
          <source>If a notification supports being sent as an email, you should define a &lt;code&gt;toMail&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return an &lt;code&gt;Illuminate\Notifications\Messages\MailMessage&lt;/code&gt; instance. Mail messages may contain lines of text as well as a &quot;call to action&quot;. Let's take a look at an example &lt;code&gt;toMail&lt;/code&gt; method:</source>
          <target state="translated">通知が電子メールとしての送信をサポートしている場合は、通知クラスで &lt;code&gt;toMail&lt;/code&gt; メソッドを定義する必要があります。このメソッドは &lt;code&gt;$notifiable&lt;/code&gt; エンティティを受け取り、 &lt;code&gt;Illuminate\Notifications\Messages\MailMessage&lt;/code&gt; インスタンスを返す必要があります。メールメッセージには、「行動を促すフレーズ」だけでなく、テキスト行も含まれる場合があります。 &lt;code&gt;toMail&lt;/code&gt; メソッドの例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="13da2bf84c41187d7913ebb9442d8ef9b81ce7f5" translate="yes" xml:space="preserve">
          <source>If a notification supports being stored in a database table, you should define a &lt;code&gt;toDatabase&lt;/code&gt; or &lt;code&gt;toArray&lt;/code&gt; method on the notification class. This method will receive a &lt;code&gt;$notifiable&lt;/code&gt; entity and should return a plain PHP array. The returned array will be encoded as JSON and stored in the &lt;code&gt;data&lt;/code&gt; column of your &lt;code&gt;notifications&lt;/code&gt; table. Let's take a look at an example &lt;code&gt;toArray&lt;/code&gt; method:</source>
          <target state="translated">通知がデータベーステーブルへの格納をサポートしている場合は、通知クラスで &lt;code&gt;toDatabase&lt;/code&gt; または &lt;code&gt;toArray&lt;/code&gt; メソッドを定義する必要があります。このメソッドは &lt;code&gt;$notifiable&lt;/code&gt; エンティティを受け取り、プレーンなPHP配列を返す必要があります。返された配列はJSONとしてエンコードされ、 &lt;code&gt;notifications&lt;/code&gt; テーブルの &lt;code&gt;data&lt;/code&gt; 列に格納されます。 &lt;code&gt;toArray&lt;/code&gt; メソッドの例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="dd787e002336e55dba0b30230f069daf5b79f912" translate="yes" xml:space="preserve">
          <source>If a payment fails for a subscription, it will be marked as &lt;code&gt;past_due&lt;/code&gt;. When your subscription is in this state it will not be active until the customer has updated their payment information. You may determine if a subscription is past due using the &lt;code&gt;pastDue&lt;/code&gt; method on the subscription instance:</source>
          <target state="translated">サブスクリプションの支払いが失敗した場合、 &lt;code&gt;past_due&lt;/code&gt; としてマークされます。サブスクリプションがこの状態の場合、顧客が支払い情報を更新するまで、サブスクリプションはアクティブになりません。サブスクリプションインスタンスで &lt;code&gt;pastDue&lt;/code&gt; メソッドを使用して、サブスクリプションの期限が過ぎているかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="2f729eb96e36082f61c125794769235fc244652c" translate="yes" xml:space="preserve">
          <source>If a route is utilizing &lt;a href=&quot;#implicit-model-binding-scoping&quot;&gt;implicit binding scoping&lt;/a&gt;, the &lt;code&gt;resolveChildRouteBinding&lt;/code&gt; method will be used to resolve the child binding of the parent model:</source>
          <target state="translated">ルートが利用されている場合は&lt;a href=&quot;#implicit-model-binding-scoping&quot;&gt;、暗黙的な結合スコープを&lt;/a&gt;、 &lt;code&gt;resolveChildRouteBinding&lt;/code&gt; の方法は、親モデルの結合子を解決するために使用されます。</target>
        </trans-unit>
        <trans-unit id="baab6760f0892375833ffe57090c84876b0d9484" translate="yes" xml:space="preserve">
          <source>If a subscription requires a secondary payment action after creation the subscription will be marked as &lt;code&gt;incomplete&lt;/code&gt;. Subscription statuses are stored in the &lt;code&gt;stripe_status&lt;/code&gt; column of Cashier's &lt;code&gt;subscriptions&lt;/code&gt; database table.</source>
          <target state="translated">サブスクリプションの作成後に二次支払いアクションが必要な場合、サブスクリプションは &lt;code&gt;incomplete&lt;/code&gt; としてマークされます。サブスクリプションステータスは、キャッシャーの &lt;code&gt;subscriptions&lt;/code&gt; データベーステーブルの &lt;code&gt;stripe_status&lt;/code&gt; 列に保存されます。</target>
        </trans-unit>
        <trans-unit id="fb6e2a2475129b4ad563e75401aff29577c55173" translate="yes" xml:space="preserve">
          <source>If a user has an active subscription, you should prevent them from deleting their default payment method.</source>
          <target state="translated">ユーザーがアクティブなサブスクリプションを持っている場合は、デフォルトの支払い方法を削除できないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="e511bb7602bc995eabd6c3dd41992a37549cafe6" translate="yes" xml:space="preserve">
          <source>If a user has cancelled their subscription and you wish to resume it, use the &lt;code&gt;resume&lt;/code&gt; method. The user &lt;strong&gt;must&lt;/strong&gt; still be on their grace period in order to resume a subscription:</source>
          <target state="translated">ユーザーがサブスクリプションをキャンセルし、それを再開したい場合は、 &lt;code&gt;resume&lt;/code&gt; メソッドを使用します。サブスクリプションを再開するには、ユーザー&lt;strong&gt;は&lt;/strong&gt;引き続き猶予期間内にいる必要があります。</target>
        </trans-unit>
        <trans-unit id="e4051abfb48a56b6187864554ad6264a515799f0" translate="yes" xml:space="preserve">
          <source>If a user has two subscriptions with the same name, the most recent subscription will always be returned by the &lt;code&gt;subscription&lt;/code&gt; method. For example, a user might have two subscription records named &lt;code&gt;default&lt;/code&gt;; however, one of the subscriptions may be an old, expired subscription, while the other is the current, active subscription. The most recent subscription will always be returned while older subscriptions are kept in the database for historical review.</source>
          <target state="translated">ユーザーが同じ名前のサブスクリプションを2つ持っている場合、最新のサブスクリプションは常に &lt;code&gt;subscription&lt;/code&gt; メソッドによって返されます。たとえば、ユーザーが &lt;code&gt;default&lt;/code&gt; という名前の2つのサブスクリプションレコードを持っているとします。ただし、サブスクリプションの1つは古い期限切れのサブスクリプションであり、もう1つは現在のアクティブなサブスクリプションである可能性があります。最新のサブスクリプションは常に返されますが、古いサブスクリプションは履歴レビューのためにデータベースに保持されます。</target>
        </trans-unit>
        <trans-unit id="d3271ab9abd8514579b939de5edddf6ae8796f04" translate="yes" xml:space="preserve">
          <source>If a user is already a customer and you would like to display the prices that apply to that customer, you may do so by retrieving the prices directly from the customer instance:</source>
          <target state="translated">ユーザーがすでに顧客であり、その顧客に適用される価格を表示したい場合は、顧客インスタンスから直接価格を取得することで表示することができます。</target>
        </trans-unit>
        <trans-unit id="40e2c16cf856c60bec2ea45bc8b9fe378bb34380" translate="yes" xml:space="preserve">
          <source>If all of the requests fail, an instance of &lt;code&gt;Illuminate\Http\Client\RequestException&lt;/code&gt; will be thrown.</source>
          <target state="translated">すべてのリクエストが失敗した場合、 &lt;code&gt;Illuminate\Http\Client\RequestException&lt;/code&gt; インスタンスがスローされます。</target>
        </trans-unit>
        <trans-unit id="60e98665803571765dffdb51f6bebad6fca78ed4" translate="yes" xml:space="preserve">
          <source>If an exception is thrown while the job is being processed, the job will automatically be released back onto the queue so it may be attempted again. The job will continue to be released until it has been attempted the maximum number of times allowed by your application. The maximum number of attempts is defined by the &lt;code&gt;--tries&lt;/code&gt; switch used on the &lt;code&gt;queue:work&lt;/code&gt; Artisan command. Alternatively, the maximum number of attempts may be defined on the job class itself. More information on running the queue worker &lt;a href=&quot;#running-the-queue-worker&quot;&gt;can be found below&lt;/a&gt;.</source>
          <target state="translated">ジョブの処理中に例外がスローされた場合、ジョブは自動的にキューに戻され、再試行されます。アプリケーションで許可されている最大回数までジョブが試行されるまで、ジョブは解放され続けます。最大試行回数は、 &lt;code&gt;queue:work&lt;/code&gt; Artisanコマンドで使用される &lt;code&gt;--tries&lt;/code&gt; スイッチによって定義されます。または、最大試行回数をジョブクラス自体に定義することもできます。キューワーカーの実行の詳細については、&lt;a href=&quot;#running-the-queue-worker&quot;&gt;以下をご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="81c8f99053037bb37094ace476afa71a39b2c2db" translate="yes" xml:space="preserve">
          <source>If an unverified user attempts to access a route that has been assigned this middleware, they will automatically be redirected to the &lt;code&gt;verification.notice&lt;/code&gt;&lt;a href=&quot;routing#named-routes&quot;&gt;named route&lt;/a&gt;.</source>
          <target state="translated">未確認のユーザーがこのミドルウェアが割り当てられているルートにアクセスしようとすると、自動的に &lt;code&gt;verification.notice&lt;/code&gt; &lt;a href=&quot;routing#named-routes&quot;&gt;という名前のrouteに&lt;/a&gt;リダイレクトされます。</target>
        </trans-unit>
        <trans-unit id="85c1e47411fbf463bc881d5ad4e873f0eaa381f6" translate="yes" xml:space="preserve">
          <source>If available, Laravel automatically adds the current user's ID to every exception's log message as contextual data. You may define your own global contextual data by overriding the &lt;code&gt;context&lt;/code&gt; method of your application's &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; class. This information will be included in every exception's log message written by your application:</source>
          <target state="translated">利用可能な場合、Laravelは現在のユーザーのIDをコンテキストデータとしてすべての例外のログメッセージに自動的に追加します。アプリケーションの &lt;code&gt;App\Exceptions\Handler&lt;/code&gt; クラスの &lt;code&gt;context&lt;/code&gt; メソッドをオーバーライドすることで、独自のグローバルコンテキストデータを定義できます。この情報は、アプリケーションによって書き込まれるすべての例外のログメッセージに含まれます。</target>
        </trans-unit>
        <trans-unit id="5443a7b010433e8b23c71032754130f92e402864" translate="yes" xml:space="preserve">
          <source>If configuring Supervisor yourself sounds overwhelming, consider using &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt;, which will automatically install and configure Supervisor for your Laravel projects.</source>
          <target state="translated">自分でスーパーバイザーを構成するのが&lt;a href=&quot;https://forge.laravel.com&quot;&gt;難しい&lt;/a&gt;と感じる場合は、Laravel Forgeを使用することを検討してください。これにより、Laravelプロジェクトのスーパーバイザーが自動的にインストールおよび構成されます。</target>
        </trans-unit>
        <trans-unit id="abe1eae3d90892dd322f5a2c3366a25848c32eba" translate="yes" xml:space="preserve">
          <source>If desired, you may disable Telescope's data collection entirely using the &lt;code&gt;enabled&lt;/code&gt; configuration option:</source>
          <target state="translated">必要に応じて、 &lt;code&gt;enabled&lt;/code&gt; 構成オプションを使用して、Telescopeのデータ収集を完全に無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="8d84195fe960c012090da8c2f9ac30c833dcb1c9" translate="yes" xml:space="preserve">
          <source>If duplicate keys exist, the last matching element will be inserted into the plucked collection:</source>
          <target state="translated">重複したキーが存在する場合、最後にマッチした要素が摘み取られたコレクションに挿入されます。</target>
        </trans-unit>
        <trans-unit id="e36d9e1cea7bfa97bb88ddce0ed53d000e35eb2b" translate="yes" xml:space="preserve">
          <source>If necessary, you may also configure which &lt;a href=&quot;https://developers.sparkpost.com/api/#header-endpoints&quot;&gt;API endpoint&lt;/a&gt; should be used:</source>
          <target state="translated">必要に応じて、使用する&lt;a href=&quot;https://developers.sparkpost.com/api/#header-endpoints&quot;&gt;APIエンドポイント&lt;/a&gt;を構成することもできます。</target>
        </trans-unit>
        <trans-unit id="49b72cf2c398dc3484701809895a3de7dd45030b" translate="yes" xml:space="preserve">
          <source>If necessary, you may define the path where Passport's keys should be loaded from. You may use the &lt;code&gt;Passport::loadKeysFrom&lt;/code&gt; method to accomplish this:</source>
          <target state="translated">必要に応じて、Passportのキーをロードするパスを定義できます。これを実現するには、 &lt;code&gt;Passport::loadKeysFrom&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="b14e2390373c6abf3124dc208f2a605662aad2f6" translate="yes" xml:space="preserve">
          <source>If necessary, you may pass another Closure as the third parameter to the &lt;code&gt;when&lt;/code&gt; method. This Closure will execute if the condition parameter evaluates to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">必要に応じて、3番目のパラメーターとして別のClosureを &lt;code&gt;when&lt;/code&gt; メソッドに渡すことができます。このクロージャーは、条件パラメーターが &lt;code&gt;false&lt;/code&gt; と評価された場合に実行されます。</target>
        </trans-unit>
        <trans-unit id="c744b070b1bd7bd06c74234ec344043e0d23611d" translate="yes" xml:space="preserve">
          <source>If necessary, you may pass multiple IDs or an ID range (when using numeric IDs) to the command:</source>
          <target state="translated">必要に応じて、コマンドに複数のIDまたはID範囲(数値IDを使用する場合)を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="e600f521f043a0702c8d8ed493036540305efac3" translate="yes" xml:space="preserve">
          <source>If necessary, you may specify the disk that the file should be deleted from:</source>
          <target state="translated">必要に応じて、ファイルを削除するディスクを指定することができます。</target>
        </trans-unit>
        <trans-unit id="42bfe06fe915ba9bbff164c4b4e3f1068232618b" translate="yes" xml:space="preserve">
          <source>If necessary, you may specify the file's attachment name and additional options using the second and third arguments to the &lt;code&gt;attachFromStorage&lt;/code&gt; method:</source>
          <target state="translated">必要に応じて、 &lt;code&gt;attachFromStorage&lt;/code&gt; メソッドの2番目と3番目の引数を使用して、ファイルの添付ファイル名と追加オプションを指定できます。</target>
        </trans-unit>
        <trans-unit id="71563dd0242c1af94d3dcfbda2e9cd9e1f42ad00" translate="yes" xml:space="preserve">
          <source>If necessary, you may use the &lt;code&gt;blade&lt;/code&gt; method to evaluate and render a raw Blade string. Like the &lt;code&gt;view&lt;/code&gt; method, the &lt;code&gt;blade&lt;/code&gt; method returns an instance of &lt;code&gt;Illuminate\Testing\TestView&lt;/code&gt;:</source>
          <target state="translated">必要に応じて、 &lt;code&gt;blade&lt;/code&gt; メソッドを使用して、生のBlade文字列を評価およびレンダリングできます。 &lt;code&gt;view&lt;/code&gt; メソッドと同様に、 &lt;code&gt;blade&lt;/code&gt; メソッドは &lt;code&gt;Illuminate\Testing\TestView&lt;/code&gt; インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="396bc2b1ac12cbe25adf847db677900aca7dc910" translate="yes" xml:space="preserve">
          <source>If needed, you can customize the &lt;code&gt;laravel_token&lt;/code&gt; cookie's name using the &lt;code&gt;Passport::cookie&lt;/code&gt; method. Typically, this method should be called from the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AuthServiceProvider&lt;/code&gt;:</source>
          <target state="translated">必要に応じて、 &lt;code&gt;Passport::cookie&lt;/code&gt; メソッドを使用して &lt;code&gt;laravel_token&lt;/code&gt; cookieの名前をカスタマイズできます。通常、このメソッドは &lt;code&gt;AuthServiceProvider&lt;/code&gt; の &lt;code&gt;boot&lt;/code&gt; メソッドから呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="60825e32b02c5cb590d6ee2a1a5b7eb3131aa6ad" translate="yes" xml:space="preserve">
          <source>If needed, you may assert that a specific request was not sent using the &lt;code&gt;assertNotSent&lt;/code&gt; method:</source>
          <target state="translated">必要に応じて、 &lt;code&gt;assertNotSent&lt;/code&gt; メソッドを使用して特定の要求が送信されなかったことを表明できます。</target>
        </trans-unit>
        <trans-unit id="7c5494178879bcd070f069ea9a5d7eea30e4ae08" translate="yes" xml:space="preserve">
          <source>If needed, you may get the raw, rendered view contents by casting the &lt;code&gt;TestView&lt;/code&gt; instance to a string:</source>
          <target state="translated">必要に応じて、 &lt;code&gt;TestView&lt;/code&gt; インスタンスを文字列にキャストすることで、レンダリングされた生のビューコンテンツを取得できます。</target>
        </trans-unit>
        <trans-unit id="196d0051855418c19d86140181575c7510737244" translate="yes" xml:space="preserve">
          <source>If needed, you may pass a &lt;code&gt;$mimeType&lt;/code&gt; argument to the method to explicitly define the MIME type that should be returned by the file:</source>
          <target state="translated">必要に応じて、 &lt;code&gt;$mimeType&lt;/code&gt; 引数をメソッドに渡して、ファイルによって返されるMIMEタイプを明示的に定義できます。</target>
        </trans-unit>
        <trans-unit id="5b45f7e3772ae2a040abe2c6aeeb2896768b1d73" translate="yes" xml:space="preserve">
          <source>If needed, you may pass option values into Envoy tasks using the command line:</source>
          <target state="translated">必要に応じて、コマンドラインを使用してEnvoyタスクにオプション値を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="925853ebeb3ec5cce4048b916f110638e5844e43" translate="yes" xml:space="preserve">
          <source>If needed, you may provide an &quot;extension&quot; that will be removed from the trailing component:</source>
          <target state="translated">必要に応じて、末尾のコンポーネントから削除される「拡張子」を提供することができます。</target>
        </trans-unit>
        <trans-unit id="7b39b96d6f892703087c50943068c63671e4e6d8" translate="yes" xml:space="preserve">
          <source>If needed, you may return an array of rate limits for a given rate limiter configuration. Each rate limit will be evaluated for the route based on the order they are placed within the array:</source>
          <target state="translated">必要に応じて、指定されたレートリミッター構成のレート制限の配列を返すことができます。各レート制限は、配列内に配置された順番に基づいてルートに対して評価されます。</target>
        </trans-unit>
        <trans-unit id="6efd7307b33ad9dc3e059789cca8b882349a8883" translate="yes" xml:space="preserve">
          <source>If needed, you may specify how many minutes must pass before the &quot;without overlapping&quot; lock expires. By default, the lock will expire after 24 hours:</source>
          <target state="translated">必要に応じて、「重複なし」ロックの有効期限が切れるまでに何分かかるかを指定することができます。デフォルトでは、ロックは24時間後に有効期限が切れます。</target>
        </trans-unit>
        <trans-unit id="50bb60e719b5bb933a940abf336bd901c1c4e900" translate="yes" xml:space="preserve">
          <source>If needed, you may specify the &lt;a href=&quot;authentication&quot;&gt;authentication guard&lt;/a&gt; that should be checked when using the &lt;code&gt;@auth&lt;/code&gt; and &lt;code&gt;@guest&lt;/code&gt; directives:</source>
          <target state="translated">必要に応じて、 &lt;code&gt;@auth&lt;/code&gt; および &lt;code&gt;@guest&lt;/code&gt; ディレクティブを使用するときにチェックする必要がある&lt;a href=&quot;authentication&quot;&gt;認証ガード&lt;/a&gt;を指定できます。</target>
        </trans-unit>
        <trans-unit id="ae937c52ed7ddd257c965e1bff7fbd3d1a69ccbc" translate="yes" xml:space="preserve">
          <source>If needed, you may specify the key that should be used for the value:</source>
          <target state="translated">必要に応じて、値に使用するキーを指定することができます。</target>
        </trans-unit>
        <trans-unit id="d48ddaf63e838dadb8fc884ac8ae74ac6faa8f3f" translate="yes" xml:space="preserve">
          <source>If needed, you may specify which guard instance you would like to access:</source>
          <target state="translated">必要に応じて、アクセスしたいガードインスタンスを指定することができます。</target>
        </trans-unit>
        <trans-unit id="0bbe854360c233ebb30407c7b8f06d9339cdb53c" translate="yes" xml:space="preserve">
          <source>If needed, you may use custom error messages for validation instead of the defaults. There are several ways to specify custom messages. First, you may pass the custom messages as the third argument to the &lt;code&gt;Validator::make&lt;/code&gt; method:</source>
          <target state="translated">必要に応じて、デフォルトの代わりにカスタムエラーメッセージを使用して検証できます。カスタムメッセージを指定する方法はいくつかあります。まず、カスタムメッセージを3番目の引数として &lt;code&gt;Validator::make&lt;/code&gt; メソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="f3c381baf9ceef32ceb702d22930cf51c5a0f5c0" translate="yes" xml:space="preserve">
          <source>If needed, you may utilize &lt;a href=&quot;events#queuable-anonymous-event-listeners&quot;&gt;queueable anonymous event listeners&lt;/a&gt; when registering model events. This will instruct Laravel to execute the model event listener using the &lt;a href=&quot;queues&quot;&gt;queue&lt;/a&gt;:</source>
          <target state="translated">必要に応じて、モデルイベントを登録するときに、&lt;a href=&quot;events#queuable-anonymous-event-listeners&quot;&gt;キュー&lt;/a&gt;に入れることができる匿名イベントリスナーを利用できます。これは、&lt;a href=&quot;queues&quot;&gt;キュー&lt;/a&gt;を使用してモデルイベントリスナーを実行するようにLaravelに指示します。</target>
        </trans-unit>
        <trans-unit id="d6738cfee5f55eba901d9dbc5a3eb1a75ce92f9f" translate="yes" xml:space="preserve">
          <source>If neither of these arguments are passed, the lock will be obtained for a maximum of 10 seconds and requests will wait a maximum of 10 seconds while attempting to obtain a lock:</source>
          <target state="translated">これらの引数のどちらも渡されない場合、ロックは最大 10 秒間取得され、リクエストはロックを取得しようとしている間、最大 10 秒間待機します。</target>
        </trans-unit>
        <trans-unit id="86d70cc0f0f64ab85eb9623aa0d714f6593e1467" translate="yes" xml:space="preserve">
          <source>If neither of these drivers are available, Laravel will use the &lt;code&gt;PDO_DBLIB&lt;/code&gt; driver.</source>
          <target state="translated">これらのドライバーのどちらも使用できない場合、Laravelは &lt;code&gt;PDO_DBLIB&lt;/code&gt; ドライバーを使用します。</target>
        </trans-unit>
        <trans-unit id="c3bde9822e75ca6a6ecb3c6bf5ec635a66dd63f9" translate="yes" xml:space="preserve">
          <source>If no Closure is passed to the &lt;code&gt;tap&lt;/code&gt; function, you may call any method on the given &lt;code&gt;$value&lt;/code&gt;. The return value of the method you call will always be &lt;code&gt;$value&lt;/code&gt;, regardless of what the method actually returns in its definition. For example, the Eloquent &lt;code&gt;update&lt;/code&gt; method typically returns an integer. However, we can force the method to return the model itself by chaining the &lt;code&gt;update&lt;/code&gt; method call through the &lt;code&gt;tap&lt;/code&gt; function:</source>
          <target state="translated">クロージャーが &lt;code&gt;tap&lt;/code&gt; 関数に渡されない場合、指定された &lt;code&gt;$value&lt;/code&gt; 任意のメソッドを呼び出すことができます。呼び出すメソッドの戻り値は、メソッドがその定義で実際に返すものに関係なく、常に &lt;code&gt;$value&lt;/code&gt; になります。たとえば、Eloquent &lt;code&gt;update&lt;/code&gt; メソッドは通常、整数を返します。ただし、 &lt;code&gt;tap&lt;/code&gt; 関数を介して &lt;code&gt;update&lt;/code&gt; メソッド呼び出しをチェーンすることで、メソッドにモデル自体を強制的に返すことができます。</target>
        </trans-unit>
        <trans-unit id="0f1ff7b7b51fd1c4c5be80defb8ed5cdeb69bf52" translate="yes" xml:space="preserve">
          <source>If no callback is supplied, all entries of the collection that are equivalent to &lt;code&gt;false&lt;/code&gt; will be removed:</source>
          <target state="translated">コールバックが提供されない場合、 &lt;code&gt;false&lt;/code&gt; に相当するコレクションのすべてのエントリが削除されます。</target>
        </trans-unit>
        <trans-unit id="3995193ca9df3c5c35101c8703389d6c21108f04" translate="yes" xml:space="preserve">
          <source>If no key is given to the method, the entire array will be replaced.</source>
          <target state="translated">メソッドにキーが与えられていない場合は、配列全体が置き換えられます。</target>
        </trans-unit>
        <trans-unit id="d9ebc9552e161e0ec7cec47543f1f77fdef16226" translate="yes" xml:space="preserve">
          <source>If no matches are found, an empty collection will be returned.</source>
          <target state="translated">一致するものが見つからない場合は、空のコレクションが返されます。</target>
        </trans-unit>
        <trans-unit id="bb59ed63fac717e10799674b2850478f4d49abb7" translate="yes" xml:space="preserve">
          <source>If no path is provided to the &lt;code&gt;url&lt;/code&gt; helper, a &lt;code&gt;Illuminate\Routing\UrlGenerator&lt;/code&gt; instance is returned, allowing you to access information about the current URL:</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; ヘルパーへのパスが指定されていない場合、 &lt;code&gt;Illuminate\Routing\UrlGenerator&lt;/code&gt; インスタンスが返され、現在のURLに関する情報にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="f7ceadf62582d533a5c86ad29ce505df0d95853a" translate="yes" xml:space="preserve">
          <source>If no path is provided to the &lt;code&gt;url&lt;/code&gt; helper, an &lt;code&gt;Illuminate\Routing\UrlGenerator&lt;/code&gt; instance is returned, allowing you to access information about the current URL:</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; ヘルパーへのパスが指定されていない場合、 &lt;code&gt;Illuminate\Routing\UrlGenerator&lt;/code&gt; インスタンスが返され、現在のURLに関する情報にアクセスできるようになります。</target>
        </trans-unit>
        <trans-unit id="324f0e91608a8d6e150c3f1df5fe94884f0bcb02" translate="yes" xml:space="preserve">
          <source>If no path is provided, a &lt;code&gt;Illuminate\Routing\UrlGenerator&lt;/code&gt; instance is returned:</source>
          <target state="translated">パスが指定されていない場合、 &lt;code&gt;Illuminate\Routing\UrlGenerator&lt;/code&gt; インスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="bdc0a5ac7cf5257e6f600cfa78ef8e95eacdb478" translate="yes" xml:space="preserve">
          <source>If no path is provided, an &lt;code&gt;Illuminate\Routing\UrlGenerator&lt;/code&gt; instance is returned:</source>
          <target state="translated">パスが指定されていない場合、 &lt;code&gt;Illuminate\Routing\UrlGenerator&lt;/code&gt; インスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="d894fef51da291ee19d3a33e7a08fbf5667cbd1e" translate="yes" xml:space="preserve">
          <source>If no token is present, display the link request form.</source>
          <target state="translated">トークンがない場合は、リンク要求フォームを表示します。</target>
        </trans-unit>
        <trans-unit id="7e2799717bd7550a669888ab4e674dd867763a5e" translate="yes" xml:space="preserve">
          <source>If one of the built-in Scout search engines doesn't fit your needs, you may write your own custom engine and register it with Scout. Your engine should extend the &lt;code&gt;Laravel\Scout\Engines\Engine&lt;/code&gt; abstract class. This abstract class contains eight methods your custom engine must implement:</source>
          <target state="translated">組み込みのScout検索エンジンの1つがニーズに合わない場合は、独自のカスタムエンジンを作成して、Scoutに登録できます。エンジンは、 &lt;code&gt;Laravel\Scout\Engines\Engine&lt;/code&gt; 抽象クラスを拡張する必要があります。この抽象クラスには、カスタムエンジンが実装する必要のある8つのメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="881679a20b46ca7bc28052fa605c7dcf1830e882" translate="yes" xml:space="preserve">
          <source>If one of the built-in Scout search engines doesn't fit your needs, you may write your own custom engine and register it with Scout. Your engine should extend the &lt;code&gt;Laravel\Scout\Engines\Engine&lt;/code&gt; abstract class. This abstract class contains seven methods your custom engine must implement:</source>
          <target state="translated">組み込みのScout検索エンジンの1つがニーズに合わない場合は、独自のカスタムエンジンを作成してScoutに登録できます。エンジンは &lt;code&gt;Laravel\Scout\Engines\Engine&lt;/code&gt; 抽象クラスを拡張する必要があります。この抽象クラスには、カスタムエンジンが実装する必要のある7つのメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="10cd6bb16490216e1b473360f59f78e03fd9dc8e" translate="yes" xml:space="preserve">
          <source>If only need to limit the concurrent processing of a job, use the &lt;a href=&quot;queues#preventing-job-overlaps&quot;&gt;&lt;code&gt;WithoutOverlapping&lt;/code&gt;&lt;/a&gt; job middleware instead.</source>
          <target state="translated">ジョブの同時処理を制限するだけでよい場合は、代わりに&lt;a href=&quot;queues#preventing-job-overlaps&quot;&gt; &lt;code&gt;WithoutOverlapping&lt;/code&gt; &lt;/a&gt;ジョブミドルウェアを使用してください。</target>
        </trans-unit>
        <trans-unit id="437cd3d191e3df20f925f81c5f27d29722713a2d" translate="yes" xml:space="preserve">
          <source>If output is available from your command, you may access it in your &lt;code&gt;after&lt;/code&gt;, &lt;code&gt;onSuccess&lt;/code&gt; or &lt;code&gt;onFailure&lt;/code&gt; hooks by type-hinting an &lt;code&gt;Illuminate\Support\Stringable&lt;/code&gt; instance as &lt;code&gt;$output&lt;/code&gt; on your hook's Closure definition:</source>
          <target state="translated">コマンドから出力を利用できる場合は、フックのクロージャー定義で &lt;code&gt;Illuminate\Support\Stringable&lt;/code&gt; インスタンスを &lt;code&gt;$output&lt;/code&gt; としてタイプヒントすることにより、 &lt;code&gt;after&lt;/code&gt; 、 &lt;code&gt;onSuccess&lt;/code&gt; 、または &lt;code&gt;onFailure&lt;/code&gt; フックでアクセスできます。</target>
        </trans-unit>
        <trans-unit id="1160d56ae9e89bc84c5f40879c2950a61eec791c" translate="yes" xml:space="preserve">
          <source>If some of your attachment fields contain Markdown, you may use the &lt;code&gt;markdown&lt;/code&gt; method to instruct Slack to parse and display the given attachment fields as Markdown formatted text. The values accepted by this method are: &lt;code&gt;pretext&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, and / or &lt;code&gt;fields&lt;/code&gt;. For more information about Slack attachment formatting, check out the &lt;a href=&quot;https://api.slack.com/docs/message-formatting#message_formatting&quot;&gt;Slack API documentation&lt;/a&gt;:</source>
          <target state="translated">一部の添付ファイルフィールドにMarkdownが含まれている場合は、 &lt;code&gt;markdown&lt;/code&gt; メソッドを使用して、指定された添付ファイルフィールドをMarkdown形式のテキストとして解析および表示するようにSlackに指示できます。このメソッドで受け入れられる値は、 &lt;code&gt;pretext&lt;/code&gt; 、 &lt;code&gt;text&lt;/code&gt; 、および/または &lt;code&gt;fields&lt;/code&gt; です。Slack添付ファイルのフォーマットの詳細については、&lt;a href=&quot;https://api.slack.com/docs/message-formatting#message_formatting&quot;&gt;Slack APIのドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="e5083bf662b8ef6742a9d6e3121a15cd87eb8419" translate="yes" xml:space="preserve">
          <source>If some of your class' dependencies are not resolvable via the container, you may inject them by passing them as an associative array into the &lt;code&gt;makeWith&lt;/code&gt; method:</source>
          <target state="translated">クラスの依存関係の一部がコンテナーを介して解決できない場合は、それらを連想配列として &lt;code&gt;makeWith&lt;/code&gt; メソッドに渡すことにより、それらを注入できます。</target>
        </trans-unit>
        <trans-unit id="4bb0f52860c6a763a1602d93ed92dd8f57b67a73" translate="yes" xml:space="preserve">
          <source>If symbolic links are not working properly on your Windows machine, you may need to add the following block to your &lt;code&gt;Vagrantfile&lt;/code&gt;:</source>
          <target state="translated">Windowsマシンでシンボリックリンクが正しく機能していない場合は、次のブロックを &lt;code&gt;Vagrantfile&lt;/code&gt; に追加する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="920048cda346191519f588d99c56b1f0c4910f1c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;.htaccess&lt;/code&gt; file that ships with Laravel does not work with your Apache installation, try this alternative:</source>
          <target state="translated">Laravelに同梱されている &lt;code&gt;.htaccess&lt;/code&gt; ファイルがApacheインストールで機能しない場合は、次の方法を試してください。</target>
        </trans-unit>
        <trans-unit id="de74764c7b6a8ebdb43df5706bc25a17d086e7d3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;authorize&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;, a HTTP response with a 403 status code will automatically be returned and your controller method will not execute.</source>
          <target state="translated">&lt;code&gt;authorize&lt;/code&gt; メソッドが &lt;code&gt;false&lt;/code&gt; を返す場合、403ステータスコードを含むHTTP応答が自動的に返され、コントローラーメソッドは実行されません。</target>
        </trans-unit>
        <trans-unit id="54b9ad0d0dd53641644ba9d0065c28d2c9c58ce6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;authorize&lt;/code&gt; method returns &lt;code&gt;false&lt;/code&gt;, an HTTP response with a 403 status code will automatically be returned and your controller method will not execute.</source>
          <target state="translated">場合 &lt;code&gt;authorize&lt;/code&gt; メソッドが返す &lt;code&gt;false&lt;/code&gt; 、403のステータスコードとHTTP応答が自動的に返され、お使いのコントローラメソッドが実行されません。</target>
        </trans-unit>
        <trans-unit id="30bfc0c89fe79db7ac64d4376694b90c908df5c5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;before&lt;/code&gt; callback returns a non-null result that result will be considered the result of the check.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; コールバックがnull以外の結果を返す場合、その結果はチェックの結果と見なされます。</target>
        </trans-unit>
        <trans-unit id="1a91e04b4894b5685ce145bb956819735919d1ff" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;column&lt;/code&gt; option is not specified, the field name will be used.</source>
          <target state="translated">&lt;code&gt;column&lt;/code&gt; オプションが指定されていない場合、フィールド名が使用されます。</target>
        </trans-unit>
        <trans-unit id="dee5b6fabb74e9a3be5233f9431211aaff2f98b1" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;redirect&lt;/code&gt; option contains a relative path, it will automatically be resolved to a fully qualified URL.</source>
          <target state="translated">&lt;code&gt;redirect&lt;/code&gt; オプションに相対パスが含まれている場合は、完全修飾URLに自動的に解決されます。</target>
        </trans-unit>
        <trans-unit id="c500ae5a239870401efbb1d831d8e973bbfaeaca" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;use_wildcard&lt;/code&gt; option is set to &lt;code&gt;no&lt;/code&gt;, the wildcard certificate will be generated but will not be used:</source>
          <target state="translated">場合 &lt;code&gt;use_wildcard&lt;/code&gt; オプションに設定されていない &lt;code&gt;no&lt;/code&gt; 、ワイルドカード証明書が生成されますが、使用されません。</target>
        </trans-unit>
        <trans-unit id="fabcd1a61326784f5513f42f189a610b12b28f0d" translate="yes" xml:space="preserve">
          <source>If the Collection has fewer items than requested, the method will throw an &lt;code&gt;InvalidArgumentException&lt;/code&gt;.</source>
          <target state="translated">コレクションに含まれるアイテムの数が要求よりも少ない場合、メソッドは &lt;code&gt;InvalidArgumentException&lt;/code&gt; をスローします。</target>
        </trans-unit>
        <trans-unit id="74ab425ef6968824770717c93e4db3355b54411b" translate="yes" xml:space="preserve">
          <source>If the argument or option does not exist, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">引数またはオプションが存在しない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="f7fa20bcd1aa64624224b5f55e56c1c6f77a7dd8" translate="yes" xml:space="preserve">
          <source>If the callback never returns &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;takeWhile&lt;/code&gt; method will return all items in the collection.</source>
          <target state="translated">コールバックは決して戻らない場合 &lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;takeWhile&lt;/code&gt; の方法は、コレクション内のすべての項目を返します。</target>
        </trans-unit>
        <trans-unit id="029cbca52f385af0e0c916ebc2ab6d2d8b9627db" translate="yes" xml:space="preserve">
          <source>If the callback never returns &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;skipWhile&lt;/code&gt; method will return an empty collection.</source>
          <target state="translated">コールバックが返されたことがない場合は &lt;code&gt;true&lt;/code&gt; 、 &lt;code&gt;skipWhile&lt;/code&gt; の方法は、空のコレクションを返します。</target>
        </trans-unit>
        <trans-unit id="ecc854251faaa9995a73a31e9f34a245158891b8" translate="yes" xml:space="preserve">
          <source>If the card is verified successfully, you may pass the &lt;code&gt;paymentMethod.id&lt;/code&gt; to your Laravel application and process a &lt;a href=&quot;#simple-charge&quot;&gt;single charge&lt;/a&gt;.</source>
          <target state="translated">カードが正常に確認されたら、 &lt;code&gt;paymentMethod.id&lt;/code&gt; をLaravelアプリケーションに渡して、&lt;a href=&quot;#simple-charge&quot;&gt;1回の請求&lt;/a&gt;を処理できます。</target>
        </trans-unit>
        <trans-unit id="cfc4a9c1b34429c9798efe742f3c98ec5ce8ca48" translate="yes" xml:space="preserve">
          <source>If the collection contains arrays or objects, you can pass the key of the attributes that you wish to check for duplicate values:</source>
          <target state="translated">コレクションに配列やオブジェクトが含まれている場合は、値の重複をチェックしたい属性のキーを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="815d85f0297f220dc46c68a56de72edf0d64321b" translate="yes" xml:space="preserve">
          <source>If the collection contains nested arrays or objects, you should pass a key to use for determining which values to sum:</source>
          <target state="translated">コレクションに入れ子になった配列やオブジェクトが含まれている場合は、どの値を合計するかを決定するために使用するキーを渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="5b1f385f6a912209f3821ee2ea8486cefa42244c" translate="yes" xml:space="preserve">
          <source>If the collection contains simple strings or numeric values, pass the &quot;glue&quot; as the only argument to the method:</source>
          <target state="translated">コレクションに単純な文字列や数値が含まれている場合は、メソッドの唯一の引数として &quot;glue &quot;を渡します。</target>
        </trans-unit>
        <trans-unit id="76a40a546a4d9ba9ad66c7891ad65895151a2e1c" translate="yes" xml:space="preserve">
          <source>If the collection is empty, &lt;code&gt;every&lt;/code&gt; will return true:</source>
          <target state="translated">コレクションが空の場合、 &lt;code&gt;every&lt;/code&gt; はtrueを返します。</target>
        </trans-unit>
        <trans-unit id="c33c41f7eb4d0248322f7535a3aadcfbc04c8174" translate="yes" xml:space="preserve">
          <source>If the component class is nested deeper within the &lt;code&gt;App\View\Components&lt;/code&gt; directory, you may use the &lt;code&gt;.&lt;/code&gt; character to indicate directory nesting. For example, if we assume a component is located at &lt;code&gt;App\View\Components\Inputs\Button.php&lt;/code&gt;, we may render it like so:</source>
          <target state="translated">コンポーネントクラスが &lt;code&gt;App\View\Components&lt;/code&gt; ディレクトリ内のより深い場所にネストされている場合は、を使用できます &lt;code&gt;.&lt;/code&gt; ディレクトリのネストを示す文字。たとえば、コンポーネントが &lt;code&gt;App\View\Components\Inputs\Button.php&lt;/code&gt; にあると仮定すると、次のようにレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="14f2080d183e11992b7dc547e3fd6f4a5f29b536" translate="yes" xml:space="preserve">
          <source>If the controller method accepts route parameters, you may pass them as the second argument to the function:</source>
          <target state="translated">コントローラメソッドがルートパラメータを受け付ける場合は、関数の第2引数として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="224ebc96a6e2e638fc7fa90dd535b2a98ece1304" translate="yes" xml:space="preserve">
          <source>If the customer's subscription is not cancelled before the trial ending date they will be charged as soon as the trial expires, so you should be sure to notify your users of their trial ending date.</source>
          <target state="translated">トライアル終了日までに解約しないと、トライアルが終了した時点ですぐに課金されてしまうので、必ずユーザーにトライアル終了日を通知するようにしましょう。</target>
        </trans-unit>
        <trans-unit id="3adc052ecda072f687e7fbd3fcc914978fa096c0" translate="yes" xml:space="preserve">
          <source>If the exception is not caught, a &lt;code&gt;404&lt;/code&gt; HTTP response is automatically sent back to the user. It is not necessary to write explicit checks to return &lt;code&gt;404&lt;/code&gt; responses when using these methods:</source>
          <target state="translated">例外がキャッチされない場合は、 &lt;code&gt;404&lt;/code&gt; HTTP応答が自動的にユーザーに送信されます。これらのメソッドを使用する場合、 &lt;code&gt;404&lt;/code&gt; 応答を返すために明示的なチェックを記述する必要はありません。</target>
        </trans-unit>
        <trans-unit id="b61575234e763d0d1dc32977c8099a51475b7317" translate="yes" xml:space="preserve">
          <source>If the file has already been stored, its visibility can be retrieved and set via the &lt;code&gt;getVisibility&lt;/code&gt; and &lt;code&gt;setVisibility&lt;/code&gt; methods:</source>
          <target state="translated">ファイルがすでに保存されている場合、その可視性は &lt;code&gt;getVisibility&lt;/code&gt; および &lt;code&gt;setVisibility&lt;/code&gt; メソッドを介して取得および設定できます。</target>
        </trans-unit>
        <trans-unit id="f71ed9f9c0e7af5619d4b0ae06f4dafef5c1c43d" translate="yes" xml:space="preserve">
          <source>If the given items's keys are numeric, the values will be appended to the end of the collection:</source>
          <target state="translated">与えられた項目のキーが数値の場合、値はコレクションの最後に追加されます。</target>
        </trans-unit>
        <trans-unit id="90e3fcb35991785ad667dafc0ffe9313b99cfc18" translate="yes" xml:space="preserve">
          <source>If the given timeout is exceeded, an instance of &lt;code&gt;Illuminate\Http\Client\ConnectionException&lt;/code&gt; will be thrown.</source>
          <target state="translated">指定されたタイムアウトを超えると、 &lt;code&gt;Illuminate\Http\Client\ConnectionException&lt;/code&gt; インスタンスがスローされます。</target>
        </trans-unit>
        <trans-unit id="df6509e310754ede5d6b72603e17b3797133710c" translate="yes" xml:space="preserve">
          <source>If the given value is an interval, convert it to a DateTime instance.</source>
          <target state="translated">指定された値が間隔の場合は、DateTimeインスタンスに変換します。</target>
        </trans-unit>
        <trans-unit id="4916e9e1ff26bf7f0611e9cdde58f81595a97fea" translate="yes" xml:space="preserve">
          <source>If the given value is not an array and not null, wrap it in one.</source>
          <target state="translated">与えられた値が配列ではなく、NULLでもない場合は、それを1つにまとめます。</target>
        </trans-unit>
        <trans-unit id="9927b289881a92d8fdd151e3b867309fd6f8c02e" translate="yes" xml:space="preserve">
          <source>If the given value is not found or the callback never returns &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;skipUntil&lt;/code&gt; method will return an empty collection.</source>
          <target state="translated">指定された値が見つからない場合、またはコールバックが &lt;code&gt;true&lt;/code&gt; を返さない場合、 &lt;code&gt;skipUntil&lt;/code&gt; メソッドは空のコレクションを返します。</target>
        </trans-unit>
        <trans-unit id="849470cfdc161e424c11d567ea8b4302f0fc6df9" translate="yes" xml:space="preserve">
          <source>If the given value is not found or the callback never returns &lt;code&gt;true&lt;/code&gt;, the &lt;code&gt;takeUntil&lt;/code&gt; method will return all items in the collection.</source>
          <target state="translated">指定された値が見つからない場合、またはコールバックが &lt;code&gt;true&lt;/code&gt; を返さない場合、 &lt;code&gt;takeUntil&lt;/code&gt; メソッドはコレクション内のすべてのアイテムを返します。</target>
        </trans-unit>
        <trans-unit id="67312e2453742d53dd50df10568345a623d2a139" translate="yes" xml:space="preserve">
          <source>If the given value is null, an empty array will be returned:</source>
          <target state="translated">与えられた値が null の場合は、空の配列が返されます。</target>
        </trans-unit>
        <trans-unit id="778ba5d3b6a0009a21ba673995f3b8c8197b9cbf" translate="yes" xml:space="preserve">
          <source>If the incoming request exceeds the specified rate limit, a response with a 429 HTTP status code will be automatically returned by Laravel. If you would like to define your own response that should be returned by a rate limit, you may use the &lt;code&gt;response&lt;/code&gt; method:</source>
          <target state="translated">着信リクエストが指定されたレート制限を超えると、429HTTPステータスコードのレスポンスがLaravelから自動的に返されます。レート制限によって返される独自の応答を定義する場合は、次の &lt;code&gt;response&lt;/code&gt; 方法を使用できます。</target>
        </trans-unit>
        <trans-unit id="01731251365b274a3026bbae7d6a170f936fe02b" translate="yes" xml:space="preserve">
          <source>If the item does not exist in the cache, the &lt;code&gt;Closure&lt;/code&gt; passed to the &lt;code&gt;remember&lt;/code&gt; method will be executed and its result will be placed in the cache.</source>
          <target state="translated">アイテムがキャッシュに存在しない場合、 &lt;code&gt;remember&lt;/code&gt; メソッドに渡された &lt;code&gt;Closure&lt;/code&gt; が実行され、その結果がキャッシュに配置されます。</target>
        </trans-unit>
        <trans-unit id="93477beb58ced8a034c99236a3f85cf842ba83a6" translate="yes" xml:space="preserve">
          <source>If the lock is not available at the moment you request it, you may instruct Laravel to wait for a specified number of seconds. If the lock can not be acquired within the specified time limit, an &lt;code&gt;Illuminate\Contracts\Cache\LockTimeoutException&lt;/code&gt; will be thrown:</source>
          <target state="translated">リクエストしたときにロックが利用できない場合は、指定した秒数だけ待機するようにLaravelに指示できます。指定された制限時間内にロックを取得できない場合、 &lt;code&gt;Illuminate\Contracts\Cache\LockTimeoutException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="4f43e8f4cebbc31efd2a10295acccacc77e8bf68" translate="yes" xml:space="preserve">
          <source>If the login request is successful, you will be authenticated and subsequent requests to your API routes will automatically be authenticated via the session cookie that the Laravel backend issued to your client.</source>
          <target state="translated">ログインリクエストが成功すると認証され、その後のAPIルートへのリクエストは、Laravelバックエンドがクライアントに発行したセッションクッキーを介して自動的に認証されます。</target>
        </trans-unit>
        <trans-unit id="95957c856a12f9e262052fd02d3ee8bcde5ee6ed" translate="yes" xml:space="preserve">
          <source>If the method accepts route parameters, you may pass them as the second argument to the method:</source>
          <target state="translated">メソッドがルートパラメータを受け入れる場合は、メソッドの第2引数としてルートパラメータを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="e25fe80c1b7ea491ead1ab5ead3309caad4e61a1" translate="yes" xml:space="preserve">
          <source>If the middleware is already in the group, it will not be added again.</source>
          <target state="translated">ミドルウェアが既にグループ内にある場合は、再度追加されることはありません。</target>
        </trans-unit>
        <trans-unit id="1efdfc8faa6b393a7c0b4f1ce595d56a9fe186fa" translate="yes" xml:space="preserve">
          <source>If the named route defines parameters, you may pass the parameters as the second argument to the &lt;code&gt;route&lt;/code&gt; function. The given parameters will automatically be inserted into the URL in their correct positions:</source>
          <target state="translated">名前付きルートがパラメーターを定義している場合、そのパラメーターを2番目の引数として &lt;code&gt;route&lt;/code&gt; 関数に渡すことができます。指定されたパラメータは、正しい位置にあるURLに自動的に挿入されます。</target>
        </trans-unit>
        <trans-unit id="add6eb7aac813559ccc063ee93296f57f81b604e" translate="yes" xml:space="preserve">
          <source>If the redirect path needs custom generation logic you may define a &lt;code&gt;redirectTo&lt;/code&gt; method instead of a &lt;code&gt;redirectTo&lt;/code&gt; property:</source>
          <target state="translated">リダイレクトパスにカスタム生成ロジックが必要な場合は、 &lt;code&gt;redirectTo&lt;/code&gt; プロパティの代わりに &lt;code&gt;redirectTo&lt;/code&gt; メソッドを定義できます。</target>
        </trans-unit>
        <trans-unit id="8fbff0d1916bdb5e81f2dd3a6c00329cf4ae2b12" translate="yes" xml:space="preserve">
          <source>If the relationship's columns depend on the factory that defines it you may provide a callback which accepts the evaluated attribute array:</source>
          <target state="translated">リレーションシップのカラムがそれを定義するファクトリに依存している場合、評価された属性配列を受け取るコールバックを提供することができます。</target>
        </trans-unit>
        <trans-unit id="7fbe8d6398f9de4b4a9fc13f87ab6284adea7abb" translate="yes" xml:space="preserve">
          <source>If the requested query string value data is not present, the second argument to this method will be returned:</source>
          <target state="translated">要求されたクエリ文字列値データが存在しない場合、このメソッドの第2引数が返されます。</target>
        </trans-unit>
        <trans-unit id="d01683e361cb4681f3b318af97ff35401ea461a7" translate="yes" xml:space="preserve">
          <source>If the route accepts parameters, you may pass them as the second argument to the method:</source>
          <target state="translated">ルートがパラメータを受け入れる場合、メソッドの第2引数としてパラメータを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="5b5b506d7cfb612c296cafd2350ea84b2d2b9120" translate="yes" xml:space="preserve">
          <source>If the site already exists, make sure to run &lt;code&gt;vagrant provision&lt;/code&gt; after updating your configuration.</source>
          <target state="translated">サイトがすでに存在する場合は、構成を更新した後、必ず &lt;code&gt;vagrant provision&lt;/code&gt; を実行してください。</target>
        </trans-unit>
        <trans-unit id="4e323bc82eac9390b20863d694f93bd43e19ae11" translate="yes" xml:space="preserve">
          <source>If the specified translation key does not exist, the &lt;code&gt;trans&lt;/code&gt; function will return the given key. So, using the example above, the &lt;code&gt;trans&lt;/code&gt; function would return &lt;code&gt;messages.welcome&lt;/code&gt; if the translation key does not exist.</source>
          <target state="translated">指定された変換キーが存在しない場合、 &lt;code&gt;trans&lt;/code&gt; 関数は指定されたキーを返します。したがって、上記の例を使用すると、 &lt;code&gt;trans&lt;/code&gt; 関数は、変換キーが存在しない場合に &lt;code&gt;messages.welcome&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b902c8894d2b543c2febf82858337c6cd31057a8" translate="yes" xml:space="preserve">
          <source>If the specified translation key does not exist, the &lt;code&gt;trans_choice&lt;/code&gt; function will return the given key. So, using the example above, the &lt;code&gt;trans_choice&lt;/code&gt; function would return &lt;code&gt;messages.notifications&lt;/code&gt; if the translation key does not exist.</source>
          <target state="translated">指定された変換キーが存在しない場合、 &lt;code&gt;trans_choice&lt;/code&gt; 関数は指定されたキーを返します。したがって、上記の例を使用すると、 &lt;code&gt;trans_choice&lt;/code&gt; 関数は、変換キーが存在しない場合に &lt;code&gt;messages.notifications&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a7dfadfbb5140bd501dcdb0e499806ba7fce6177" translate="yes" xml:space="preserve">
          <source>If the specified translation string does not exist, the &lt;code&gt;__&lt;/code&gt; function will return the translation string key. So, using the example above, the &lt;code&gt;__&lt;/code&gt; function would return &lt;code&gt;messages.welcome&lt;/code&gt; if the translation string does not exist.</source>
          <target state="translated">指定した翻訳文字列が存在しない場合、 &lt;code&gt;__&lt;/code&gt; 関数は翻訳文字列キーを返します。したがって、上記の例を使用すると、翻訳文字列が存在しない場合、 &lt;code&gt;__&lt;/code&gt; 関数は &lt;code&gt;messages.welcome&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b2de419c7e613630d260894dd2a0d02e300229ef" translate="yes" xml:space="preserve">
          <source>If the specified translation string or key does not exist, the &lt;code&gt;__&lt;/code&gt; function will return the given value. So, using the example above, the &lt;code&gt;__&lt;/code&gt; function would return &lt;code&gt;messages.welcome&lt;/code&gt; if that translation key does not exist.</source>
          <target state="translated">指定された変換文字列またはキーが存在しない場合、 &lt;code&gt;__&lt;/code&gt; 関数は指定された値を返します。したがって、上記の例を使用 &lt;code&gt;messages.welcome&lt;/code&gt; 、その変換キーが存在しない場合、 &lt;code&gt;__&lt;/code&gt; 関数はmessages.welcomeを返します。</target>
        </trans-unit>
        <trans-unit id="15da85455b8414454ce889b31a5ea4e8fad90a8c" translate="yes" xml:space="preserve">
          <source>If the state parameter matches, the consumer should issue a &lt;code&gt;POST&lt;/code&gt; request to your application to request an access token. The request should include the authorization code that was issued by your application when the user approved the authorization request along with the originally generated code verifier:</source>
          <target state="translated">状態パラメーターが一致する場合、コンシューマーはアプリケーションに &lt;code&gt;POST&lt;/code&gt; リクエストを発行して、アクセストークンをリクエストする必要があります。リクエストには、ユーザーが承認リクエストを承認したときにアプリケーションによって発行された承認コードと、最初に生成されたコードベリファイアを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="5bbc84a4f241a5e6607a8d99df99d88cb9a6d049" translate="yes" xml:space="preserve">
          <source>If the storage time is not passed to the &lt;code&gt;put&lt;/code&gt; method, the item will be stored indefinitely:</source>
          <target state="translated">保存時間が &lt;code&gt;put&lt;/code&gt; メソッドに渡されない場合、アイテムは無期限に保存されます。</target>
        </trans-unit>
        <trans-unit id="f0df97183d0b64aff3b63d0206363ee2f1f90097" translate="yes" xml:space="preserve">
          <source>If the table has an auto-incrementing id, use the &lt;code&gt;insertGetId&lt;/code&gt; method to insert a record and then retrieve the ID:</source>
          <target state="translated">テーブルに自動インクリメントIDがある場合は、 &lt;code&gt;insertGetId&lt;/code&gt; メソッドを使用してレコードを挿入し、IDを取得します。</target>
        </trans-unit>
        <trans-unit id="16f3ebc0f807b3f0962962bd4064ece580c360aa" translate="yes" xml:space="preserve">
          <source>If the token, email address, and password given to the password broker are valid, the Closure passed to the &lt;code&gt;reset&lt;/code&gt; method will be invoked. Within this Closure, which receives the user instance and the plain-text password, we may update the user's password in the database.</source>
          <target state="translated">パスワードブローカーに与えられたトークン、電子メールアドレス、およびパスワードが有効である場合、 &lt;code&gt;reset&lt;/code&gt; メソッドに渡されたクロージャが呼び出されます。ユーザーインスタンスとプレーンテキストのパスワードを受け取るこのクロージャー内で、データベース内のユーザーのパスワードを更新する場合があります。</target>
        </trans-unit>
        <trans-unit id="ec99e3aa7d875072e3acd3ee4a21cbd06e42d2ca" translate="yes" xml:space="preserve">
          <source>If the trial has already expired and the customer is already being billed for the subscription, you can still offer them an extended trial. The time spent within the trial period will be deducted from the customer's next invoice.</source>
          <target state="translated">トライアルが既に期限切れで、顧客がサブスクリプションの請求を受けている場合でも、延長トライアルを提供することができます。トライアル期間内に使用された時間は、顧客の次回の請求書から差し引かれます。</target>
        </trans-unit>
        <trans-unit id="5e23b4c3f38258f2c5c041c831dc4af35f28c0eb" translate="yes" xml:space="preserve">
          <source>If the user approves the authorization request, they will be redirected back to the consuming application. The consumer should first verify the &lt;code&gt;state&lt;/code&gt; parameter against the value that was stored prior to the redirect. If the state parameter matches the consumer should issue a &lt;code&gt;POST&lt;/code&gt; request to your application to request an access token. The request should include the authorization code that was issued by your application when the user approved the authorization request. In this example, we'll use the Guzzle HTTP library to make the &lt;code&gt;POST&lt;/code&gt; request:</source>
          <target state="translated">ユーザーが承認リクエストを承認すると、ユーザーは消費アプリケーションにリダイレクトされます。コンシューマーは、最初に、リダイレクトの前に保存された値に対して &lt;code&gt;state&lt;/code&gt; パラメーターを検証する必要があります。状態パラメーターが一致する場合、コンシューマーはアプリケーションに &lt;code&gt;POST&lt;/code&gt; リクエストを発行して、アクセストークンをリクエストする必要があります。リクエストには、ユーザーが認証リクエストを承認したときにアプリケーションによって発行された認証コードを含める必要があります。この例では、GuzzleHTTPライブラリを使用して &lt;code&gt;POST&lt;/code&gt; リクエストを作成します。</target>
        </trans-unit>
        <trans-unit id="748c39163da2eb95a6d3312b2378227bfcb6eb58" translate="yes" xml:space="preserve">
          <source>If the user approves the authorization request, they will be redirected back to the consuming application. The consumer should then issue a &lt;code&gt;POST&lt;/code&gt; request to your application to request an access token. The request should include the authorization code that was issued by your application when the user approved the authorization request. In this example, we'll use the Guzzle HTTP library to make the &lt;code&gt;POST&lt;/code&gt; request:</source>
          <target state="translated">ユーザーが承認リクエストを承認すると、それらは使用するアプリケーションにリダイレクトされます。次に、コンシューマはアプリケーションに &lt;code&gt;POST&lt;/code&gt; リクエストを発行して、アクセストークンをリクエストする必要があります。リクエストには、ユーザーが承認リクエストを承認したときにアプリケーションによって発行された承認コードを含める必要があります。この例では、Guzzle HTTPライブラリを使用して &lt;code&gt;POST&lt;/code&gt; リクエストを作成します。</target>
        </trans-unit>
        <trans-unit id="c8b89f07d5fc9e002ed49aa92faed45956bbabd8" translate="yes" xml:space="preserve">
          <source>If the user approves the authorization request, they will be redirected back to the consuming application. The consumer should verify the &lt;code&gt;state&lt;/code&gt; parameter against the value that was stored prior to the redirect, as in the standard Authorization Code Grant.</source>
          <target state="translated">ユーザーが承認リクエストを承認すると、ユーザーは消費アプリケーションにリダイレクトされます。コンシューマーは、標準の認証コード付与の場合と同様に、リダイレクトの前に保存された値に対して &lt;code&gt;state&lt;/code&gt; パラメーターを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="32da1ed57fb50220528ebd9d6d658d8aa2608727" translate="yes" xml:space="preserve">
          <source>If the user cancels a subscription and then resumes that subscription before the subscription has fully expired, they will not be billed immediately. Instead, their subscription will be re-activated, and they will be billed on the original billing cycle.</source>
          <target state="translated">ユーザーがサブスクリプションをキャンセルし、サブスクリプションの有効期限が完全に切れる前にサブスクリプションを再開した場合、すぐに課金されることはありません。その代わりに、ユーザーのサブスクリプションは再アクティベートされ、元の課金サイクルで課金されます。</target>
        </trans-unit>
        <trans-unit id="08c81f54eefb51a76f872ec262148adefd012d8a" translate="yes" xml:space="preserve">
          <source>If the user is on trial, the trial period will be maintained. Also, if a &quot;quantity&quot; exists for the subscription, that quantity will also be maintained.</source>
          <target state="translated">ユーザーが試用中であれば、試用期間は維持されます。また、サブスクリプションに「数量」が存在する場合、その数量も維持されます。</target>
        </trans-unit>
        <trans-unit id="19f51ac11b3d3f77ea532de99391cb33ce7f50cc" translate="yes" xml:space="preserve">
          <source>If this Grammar supports schema changes wrapped in a transaction.</source>
          <target state="translated">この文法がトランザクションにラップされたスキーマの変更をサポートしているかどうか。</target>
        </trans-unit>
        <trans-unit id="a32923f85198720cf7e6f97279c9208615100b29" translate="yes" xml:space="preserve">
          <source>If this command fails, make sure your Vagrant installation is up to date.</source>
          <target state="translated">このコマンドが失敗した場合は、Vagrantのインストールが最新であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="5d25822aa53eb2fb1f385d5bb36cdc9a9bb8b5f4" translate="yes" xml:space="preserve">
          <source>If this job is queued with an &lt;code&gt;App\Models\Video&lt;/code&gt; instance that has an &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt;, it will automatically receive the tag &lt;code&gt;App\Models\Video:1&lt;/code&gt;. This is because Horizon will examine the job's properties for any Eloquent models. If Eloquent models are found, Horizon will intelligently tag the job using the model's class name and primary key:</source>
          <target state="translated">このジョブが &lt;code&gt;id&lt;/code&gt; が &lt;code&gt;1&lt;/code&gt; の &lt;code&gt;App\Models\Video&lt;/code&gt; インスタンスでキューに入れられている場合、タグ &lt;code&gt;App\Models\Video:1&lt;/code&gt; を自動的に受け取ります。これは、Horizo​​nがEloquentモデルのジョブのプロパティを調べるためです。Eloquentモデルが見つかった場合、Horizo​​nはモデルのクラス名と主キーを使用してジョブにインテリジェントにタグを付けます。</target>
        </trans-unit>
        <trans-unit id="9fe5f55b5001fda50b67694de8c5969827a25b5c" translate="yes" xml:space="preserve">
          <source>If this job is queued with an &lt;code&gt;App\Video&lt;/code&gt; instance that has an &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;1&lt;/code&gt;, it will automatically receive the tag &lt;code&gt;App\Video:1&lt;/code&gt;. This is because Horizon will examine the job's properties for any Eloquent models. If Eloquent models are found, Horizon will intelligently tag the job using the model's class name and primary key:</source>
          <target state="translated">このジョブが &lt;code&gt;id&lt;/code&gt; が &lt;code&gt;1&lt;/code&gt; の &lt;code&gt;App\Video&lt;/code&gt; インスタンスでキューに入れられている場合、ジョブは自動的にタグ &lt;code&gt;App\Video:1&lt;/code&gt; 受け取ります。これは、Horizo​​nがEloquentモデルのジョブのプロパティを調べるためです。Eloquentモデルが見つかった場合、Horizo​​nはモデルのクラス名と主キーを使用してジョブにインテリジェントにタグを付けます。</target>
        </trans-unit>
        <trans-unit id="23f70be5002433b0ac03d7f4a27f191b692de957" translate="yes" xml:space="preserve">
          <source>If this validation rule fails, it will produce the following error message:</source>
          <target state="translated">この検証ルールが失敗した場合、以下のようなエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="061742642b94648e0305fbe67a90ceb088547633" translate="yes" xml:space="preserve">
          <source>If validation fails, a redirect response will be generated to send the user back to their previous location. The errors will also be flashed to the session so they are available for display. If the request was an AJAX request, a HTTP response with a 422 status code will be returned to the user including a JSON representation of the validation errors.</source>
          <target state="translated">検証に失敗した場合、リダイレクトレスポンスが生成され、ユーザーを元の場所に戻します。エラーはセッションにも表示され、表示できるようになります。リクエストがAJAXリクエストであった場合、検証エラーのJSON表現を含む422のステータスコードを持つHTTPレスポンスがユーザーに返されます。</target>
        </trans-unit>
        <trans-unit id="4513c16f948c722889081323d14970ab48abb41d" translate="yes" xml:space="preserve">
          <source>If validation fails, a redirect response will be generated to send the user back to their previous location. The errors will also be flashed to the session so they are available for display. If the request was an AJAX request, an HTTP response with a 422 status code will be returned to the user including a JSON representation of the validation errors.</source>
          <target state="translated">検証に失敗した場合、リダイレクトレスポンスが生成され、ユーザーを元の場所に戻します。エラーはセッションにも表示され、表示できるようになります。リクエストがAJAXリクエストであった場合、検証エラーのJSON表現を含む422のステータスコードを持つHTTPレスポンスがユーザーに返されます。</target>
        </trans-unit>
        <trans-unit id="bf3a00517e0037ba4bf130d9e66a4e9ef9a1338b" translate="yes" xml:space="preserve">
          <source>If we assume this component is utilized like so:</source>
          <target state="translated">この部品をこのように利用すると仮定すると</target>
        </trans-unit>
        <trans-unit id="aed6bf3f88b1d8d093c3af3a04322586e5bbcaa0" translate="yes" xml:space="preserve">
          <source>If we look at that &lt;code&gt;Illuminate\Support\Facades\Cache&lt;/code&gt; class, you'll see that there is no static method &lt;code&gt;get&lt;/code&gt;:</source>
          <target state="translated">その &lt;code&gt;Illuminate\Support\Facades\Cache&lt;/code&gt; クラスを見ると、静的メソッド &lt;code&gt;get&lt;/code&gt; がないことがわかります。</target>
        </trans-unit>
        <trans-unit id="93f618ec4f19f6086e963aa192c58a56bb583150" translate="yes" xml:space="preserve">
          <source>If we're touching the parent model, touch.</source>
          <target state="translated">親モデルを触っているのであれば、触ってみてください。</target>
        </trans-unit>
        <trans-unit id="7f5f5299666468ed9759fa5eb0d01e05084f9203" translate="yes" xml:space="preserve">
          <source>If you already have a Pusher Channels or Socket.io client instance that you would like Echo to utilize, you may pass it to Echo via the &lt;code&gt;client&lt;/code&gt; configuration option:</source>
          <target state="translated">Echoで利用したいPusherChannelsまたはSocket.ioクライアントインスタンスがすでにある場合は、 &lt;code&gt;client&lt;/code&gt; 構成オプションを介してそれをEchoに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="ea995fbeaed9296c19031e9d4d1c0dbfed2f4559" translate="yes" xml:space="preserve">
          <source>If you already have a model instance, you may use the &lt;code&gt;fill&lt;/code&gt; method to populate it with an array of attributes:</source>
          <target state="translated">すでにモデルインスタンスがある場合は、 &lt;code&gt;fill&lt;/code&gt; メソッドを使用して、属性の配列を設定できます。</target>
        </trans-unit>
        <trans-unit id="574ffdc963a0406b4ab9d2d9aeac581de6101fe9" translate="yes" xml:space="preserve">
          <source>If you already have a query builder instance and you wish to add a column to its existing select clause, you may use the &lt;code&gt;addSelect&lt;/code&gt; method:</source>
          <target state="translated">クエリビルダーインスタンスが既にあり、既存の選択句に列を追加する場合は、 &lt;code&gt;addSelect&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="1455042e6daa322b8f22915362015dfba5f3fa44" translate="yes" xml:space="preserve">
          <source>If you already have a raw data string you wish to embed into an email template, you may use the &lt;code&gt;embedData&lt;/code&gt; method on the &lt;code&gt;$message&lt;/code&gt; variable:</source>
          <target state="translated">メールテンプレートに埋め込む生データ文字列がすでにある場合は、 &lt;code&gt;$message&lt;/code&gt; 変数で &lt;code&gt;embedData&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="20fe3900660b4db098d92d82bc9848c9b264c871" translate="yes" xml:space="preserve">
          <source>If you already have a valid access token for a user, you can retrieve their details using the &lt;code&gt;userFromToken&lt;/code&gt; method:</source>
          <target state="translated">ユーザーの有効なアクセストークンが既にある場合は、 &lt;code&gt;userFromToken&lt;/code&gt; メソッドを使用してユーザーの詳細を取得できます。</target>
        </trans-unit>
        <trans-unit id="3c4d07ff90589102890a940a73d135fb08811826" translate="yes" xml:space="preserve">
          <source>If you already have a valid pair of token / secret for a user, you can retrieve their details using the &lt;code&gt;userFromTokenAndSecret&lt;/code&gt; method:</source>
          <target state="translated">ユーザーの有効なトークン/シークレットのペアがすでにある場合は、 &lt;code&gt;userFromTokenAndSecret&lt;/code&gt; メソッドを使用してその詳細を取得できます。</target>
        </trans-unit>
        <trans-unit id="e9e722092c391f398e6c14b06190901a7dba5d30" translate="yes" xml:space="preserve">
          <source>If you are &quot;remembering&quot; users, you may use the &lt;code&gt;viaRemember&lt;/code&gt; method to determine if the user was authenticated using the &quot;remember me&quot; cookie:</source>
          <target state="translated">ユーザーを「記憶」している場合は、 &lt;code&gt;viaRemember&lt;/code&gt; メソッドを使用して、「記憶」Cookieを使用してユーザーが認証されたかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="3ca42ea9aa69946acaac9a9db1e4e6409dae953c" translate="yes" xml:space="preserve">
          <source>If you are accessing your application via a URL that includes the port (&lt;code&gt;127.0.0.1:8000&lt;/code&gt;), you should ensure that you include the port number with the domain.</source>
          <target state="translated">ポート（ &lt;code&gt;127.0.0.1:8000&lt;/code&gt; ）を含むURLを介してアプリケーションにアクセスしている場合は、ドメインにポート番号を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="f592cbeb4edb16d7d18696fb9dcc0b74ae5e0309" translate="yes" xml:space="preserve">
          <source>If you are adding a huge array of integer bindings to your query, the &lt;code&gt;whereIntegerInRaw&lt;/code&gt; or &lt;code&gt;whereIntegerNotInRaw&lt;/code&gt; methods may be used to greatly reduce your memory usage.</source>
          <target state="translated">クエリに整数バインディングの膨大な配列を追加する場合は、 &lt;code&gt;whereIntegerInRaw&lt;/code&gt; または &lt;code&gt;whereIntegerNotInRaw&lt;/code&gt; メソッドを使用して、メモリ使用量を大幅に削減できます。</target>
        </trans-unit>
        <trans-unit id="3a7f93f121d04777db0489ddf16779c7fe432f3e" translate="yes" xml:space="preserve">
          <source>If you are assigning the same timezone to all of your scheduled tasks, you may wish to define a &lt;code&gt;scheduleTimezone&lt;/code&gt; method in your &lt;code&gt;app/Console/Kernel.php&lt;/code&gt; file. This method should return the default timezone that should be assigned to all scheduled tasks:</source>
          <target state="translated">スケジュールされたすべてのタスクに同じタイムゾーンを割り当てる場合は、 &lt;code&gt;app/Console/Kernel.php&lt;/code&gt; ファイルで &lt;code&gt;scheduleTimezone&lt;/code&gt; メソッドを定義することをお勧めします。このメソッドは、スケジュールされたすべてのタスクに割り当てる必要があるデフォルトのタイムゾーンを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="873ca9abc9f0b6ca049eb7a36c54d695a63b93f9" translate="yes" xml:space="preserve">
          <source>If you are attempting to validate a field that should always be present but may be empty, check out &lt;a href=&quot;#a-note-on-optional-fields&quot;&gt;this note on optional fields&lt;/a&gt;</source>
          <target state="translated">常に存在しているが空である可能性のあるフィールドを検証しようとしている場合は&lt;a href=&quot;#a-note-on-optional-fields&quot;&gt;、オプションのフィールドに関するこのノートを&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="bd90620b82c17ba6b8665c59120f0f6e50efb14c" translate="yes" xml:space="preserve">
          <source>If you are broadcasting your events over &lt;a href=&quot;https://pusher.com&quot;&gt;Pusher&lt;/a&gt;, you should install the Pusher PHP SDK using the Composer package manager:</source>
          <target state="translated">&lt;a href=&quot;https://pusher.com&quot;&gt;Pusherを&lt;/a&gt;介してイベントをブロードキャストする場合は、Composerパッケージマネージャーを使用してPusher PHP SDKをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="77cfd9e5a8b535ca096e4f57f48e50d81e0b2d34" translate="yes" xml:space="preserve">
          <source>If you are broadcasting your events over &lt;a href=&quot;https://pusher.com/channels&quot;&gt;Pusher Channels&lt;/a&gt;, you should install the Pusher Channels PHP SDK using the Composer package manager:</source>
          <target state="translated">&lt;a href=&quot;https://pusher.com/channels&quot;&gt;プッシャーチャネルを&lt;/a&gt;介してイベントをブロードキャストしている場合は、Composerパッケージマネージャーを使用してプッシャーチャネルPHPSDKをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="89d9598d4b4a9a33124e3cfdee45005a1c374c06" translate="yes" xml:space="preserve">
          <source>If you are building a large application with many routes, you should make sure that you are running the &lt;code&gt;route:cache&lt;/code&gt; Artisan command during your deployment process:</source>
          <target state="translated">多くのルートを持つ大規模なアプリケーションを構築する場合は、デプロイメントプロセス中に &lt;code&gt;route:cache&lt;/code&gt; Artisanコマンドを実行していることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="6ea66aa4b43002d1797203cf64c0d97427327ce6" translate="yes" xml:space="preserve">
          <source>If you are choosing to use the &lt;code&gt;laravel/legacy-factories&lt;/code&gt; package, no changes to your factory classes are required. However, if you are upgrading your factories, you should add the &lt;code&gt;Database\Factories&lt;/code&gt; namespace to those classes.</source>
          <target state="translated">&lt;code&gt;laravel/legacy-factories&lt;/code&gt; パッケージの使用を選択した場合、ファクトリクラスを変更する必要はありません。ただし、ファクトリをアップグレードする場合は、それらのクラスに &lt;code&gt;Database\Factories&lt;/code&gt; 名前空間を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="97cda3fd4ebb519591e44a92d5d899128b684e15" translate="yes" xml:space="preserve">
          <source>If you are defining a route that redirects to another URI, you may use the &lt;code&gt;Route::redirect&lt;/code&gt; method. This method provides a convenient shortcut so that you do not have to define a full route or controller for performing a simple redirect:</source>
          <target state="translated">別のURIにリダイレクトするルートを定義している場合は、 &lt;code&gt;Route::redirect&lt;/code&gt; メソッドを使用できます。このメソッドは便利なショートカットを提供するため、単純なリダイレクトを実行するために完全なルートやコントローラーを定義する必要はありません。</target>
        </trans-unit>
        <trans-unit id="dd9748d141b0a3522dc83c78aa532e7934811d9f" translate="yes" xml:space="preserve">
          <source>If you are deploying Horizon to a live server, you should configure a process monitor to monitor the &lt;code&gt;php artisan horizon&lt;/code&gt; command and restart it if it quits unexpectedly. When deploying fresh code to your server, you will need to instruct the master Horizon process to terminate so it can be restarted by your process monitor and receive your code changes.</source>
          <target state="translated">Horizo​​nをライブサーバーにデプロイする場合は、 &lt;code&gt;php artisan horizon&lt;/code&gt; コマンドを監視するようにプロセスモニターを構成し、予期せず終了した場合に再起動する必要があります。新しいコードをサーバーにデプロイするときは、マスターHorizo​​nプロセスを終了するように指示して、プロセスモニターで再起動してコードの変更を受信できるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="d43f0c6c31350431216aa025ce415e5e945609c8" translate="yes" xml:space="preserve">
          <source>If you are deploying your application to a server that is running Nginx, you may use the following configuration file as a starting point for configuring your web server. Most likely, this file will need to be customized depending on your server's configuration. If you would like assistance in managing your server, consider using a service such as &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt;:</source>
          <target state="translated">Nginxを実行しているサーバーにアプリケーションをデプロイする場合、Webサーバーを構成するための開始点として次の構成ファイルを使用できます。ほとんどの場合、このファイルはサーバーの構成に応じてカスタマイズする必要があります。サーバー管理の支援が必要な場合は、&lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt;などのサービスの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="01e7f343678423bb90a0e44fdd16c22cb990df12" translate="yes" xml:space="preserve">
          <source>If you are developing with a team, you may wish to continue including a &lt;code&gt;.env.example&lt;/code&gt; file with your application. By putting place-holder values in the example configuration file, other developers on your team can clearly see which environment variables are needed to run your application. You may also create a &lt;code&gt;.env.testing&lt;/code&gt; file. This file will override the &lt;code&gt;.env&lt;/code&gt; file when running PHPUnit tests or executing Artisan commands with the &lt;code&gt;--env=testing&lt;/code&gt; option.</source>
          <target state="translated">チームで開発している場合は、アプリケーションに &lt;code&gt;.env.example&lt;/code&gt; ファイルを含め続けることができます。サンプル構成ファイルにプレースホルダー値を入れることにより、チームの他の開発者は、アプリケーションの実行に必要な環境変数を明確に確認できます。 &lt;code&gt;.env.testing&lt;/code&gt; ファイルを作成することもできます。PHPUnitテストの実行時、または &lt;code&gt;--env=testing&lt;/code&gt; オプションを指定したArtisanコマンドの実行時に、このファイルは &lt;code&gt;.env&lt;/code&gt; ファイルをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="8016d2a9edd4344bf68db021317e2e8979f1f3f6" translate="yes" xml:space="preserve">
          <source>If you are developing with a team, you may wish to continue including a &lt;code&gt;.env.example&lt;/code&gt; file with your application. By putting placeholder values in the example configuration file, other developers on your team can clearly see which environment variables are needed to run your application. You may also create a &lt;code&gt;.env.testing&lt;/code&gt; file. This file will override the &lt;code&gt;.env&lt;/code&gt; file when running PHPUnit tests or executing Artisan commands with the &lt;code&gt;--env=testing&lt;/code&gt; option.</source>
          <target state="translated">チームで開発している場合は、アプリケーションに &lt;code&gt;.env.example&lt;/code&gt; ファイルを引き続き含めることをお勧めします。サンプル構成ファイルにプレースホルダー値を配置することにより、チームの他の開発者は、アプリケーションを実行するために必要な環境変数を明確に確認できます。 &lt;code&gt;.env.testing&lt;/code&gt; ファイルを作成することもできます。このファイルは、PHPUnitテストを実行するとき、または &lt;code&gt;--env=testing&lt;/code&gt; オプションを指定してArtisanコマンドを実行するときに &lt;code&gt;.env&lt;/code&gt; ファイルをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="bc4eb2fd93c8e8ea471b41fd5eec08b8c0ab57af" translate="yes" xml:space="preserve">
          <source>If you are displaying JavaScript variables in a large portion of your template, you may wrap the HTML in the &lt;code&gt;@verbatim&lt;/code&gt; directive so that you do not have to prefix each Blade echo statement with an &lt;code&gt;@&lt;/code&gt; symbol:</source>
          <target state="translated">テンプレートの大部分でJavaScript変数を表示している場合は、 &lt;code&gt;@verbatim&lt;/code&gt; ディレクティブでHTMLをラップすると、各ブレードエコーステートメントに &lt;code&gt;@&lt;/code&gt; 記号を付ける必要がなくなります。</target>
        </trans-unit>
        <trans-unit id="98fdafcce07cc738c0fcd0dea9df13c27da34ddd" translate="yes" xml:space="preserve">
          <source>If you are eager loading a &lt;code&gt;MorphTo&lt;/code&gt; relationship, Eloquent will run multiple queries to fetch each different type of related model. You may target conditions to each of these queries using the &lt;code&gt;MorphTo&lt;/code&gt; relation's &lt;code&gt;constrain&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;MorphTo&lt;/code&gt; リレーションシップの読み込みに熱心な場合、Eloquentは複数のクエリを実行して、さまざまなタイプの関連モデルをそれぞれフェッチします。 &lt;code&gt;MorphTo&lt;/code&gt; リレーションの &lt;code&gt;constrain&lt;/code&gt; メソッドを使用して、これらの各クエリに条件をターゲティングできます。</target>
        </trans-unit>
        <trans-unit id="9797a572a989a44338e3af228d2e719fe6bccb60" translate="yes" xml:space="preserve">
          <source>If you are filtering the results of the &lt;code&gt;chunk&lt;/code&gt; method based on a column that you will also be updating while iterating over the results, you should use the &lt;code&gt;chunkById&lt;/code&gt; method. Using the &lt;code&gt;chunk&lt;/code&gt; method in these scenarios could lead to unexpected and inconsistent results:</source>
          <target state="translated">結果を反復処理するときにも更新する列に基づいて &lt;code&gt;chunk&lt;/code&gt; メソッドの結果をフィルタリングする場合は、 &lt;code&gt;chunkById&lt;/code&gt; メソッドを使用する必要があります。これらのシナリオで &lt;code&gt;chunk&lt;/code&gt; メソッドを使用すると、予期しない一貫性のない結果が生じる可能性があります。</target>
        </trans-unit>
        <trans-unit id="dba47dac121daca4cad1597f74d6354a811e9fc2" translate="yes" xml:space="preserve">
          <source>If you are going to pair the Redis broadcaster with a Socket.IO server, you will need to include the Socket.IO JavaScript client library in your application. You may install it via the NPM package manager:</source>
          <target state="translated">Redis ブロードキャスターと Socket.IO サーバをペアリングする場合、アプリケーションに Socket.IO JavaScript クライアントライブラリを含める必要があります。NPM パッケージマネージャからインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="179ce5d69e9b937e307bd41d4e504aa8a209100b" translate="yes" xml:space="preserve">
          <source>If you are having trouble authenticating with your application from an SPA that executes on a separate subdomain, you have likely misconfigured your CORS (Cross-Origin Resource Sharing) or session cookie settings.</source>
          <target state="translated">別のサブドメインで実行される SPA からのアプリケーションの認証に問題がある場合、CORS (Cross-Origin Resource Sharing)またはセッションクッキーの設定を誤って設定している可能性があります。</target>
        </trans-unit>
        <trans-unit id="6198c6bc5dff3bf628461fe892c876459803d214" translate="yes" xml:space="preserve">
          <source>If you are having trouble getting your Valet installation to run properly, executing the &lt;code&gt;composer global update&lt;/code&gt; command followed by &lt;code&gt;valet install&lt;/code&gt; will reset your installation and can solve a variety of problems. In rare cases it may be necessary to &quot;hard reset&quot; Valet by executing &lt;code&gt;valet uninstall --force&lt;/code&gt; followed by &lt;code&gt;valet install&lt;/code&gt;.</source>
          <target state="translated">Valetインストールを正しく実行するのに問題がある場合は、 &lt;code&gt;composer global update&lt;/code&gt; &lt;code&gt;valet install&lt;/code&gt; コマンドを実行してからvaletinstallを実行すると、インストールがリセットされ、さまざまな問題を解決できます。まれなケースでは、実行することで、「ハードリセット」バレーに必要になることがあり &lt;code&gt;valet uninstall --force&lt;/code&gt; 続い &lt;code&gt;valet install&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="94f20674cc8abc6499cdcb69983331a09adaa148" translate="yes" xml:space="preserve">
          <source>If you are implementing this interface, you should add this method to your implementation.</source>
          <target state="translated">このインターフェイスを実装している場合は、このメソッドを実装に追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="af88a7dbaa9b8c4a9cbdff5223d946f0ede2030f" translate="yes" xml:space="preserve">
          <source>If you are in a location of your code that does not have access to the &lt;code&gt;$app&lt;/code&gt; variable, you may use the global &lt;code&gt;resolve&lt;/code&gt; helper:</source>
          <target state="translated">&lt;code&gt;$app&lt;/code&gt; 変数にアクセスできないコードの場所にいる場合は、グローバル &lt;code&gt;resolve&lt;/code&gt; ヘルパーを使用できます。</target>
        </trans-unit>
        <trans-unit id="a77e21da8e5057473ff9d76315dda9214bddd7c2" translate="yes" xml:space="preserve">
          <source>If you are in a nested loop, you may access the parent loop's &lt;code&gt;$loop&lt;/code&gt; variable via the &lt;code&gt;parent&lt;/code&gt; property:</source>
          <target state="translated">ネストされたループにいる場合、 &lt;code&gt;parent&lt;/code&gt; プロパティを介して親ループの &lt;code&gt;$loop&lt;/code&gt; 変数にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="9490cb12bde1e72081fa7a38378d6dd6c7129f99" translate="yes" xml:space="preserve">
          <source>If you are installing Scout into an existing project, you may already have database records you need to import into your search driver. Scout provides an &lt;code&gt;import&lt;/code&gt; Artisan command that you may use to import all of your existing records into your search indexes:</source>
          <target state="translated">Scoutを既存のプロジェクトにインストールする場合は、検索ドライバーにインポートする必要のあるデータベースレコードが既にある可能性があります。Scoutには、既存のすべてのレコードを検索インデックスにインポートするために使用できる &lt;code&gt;import&lt;/code&gt; アーティザンコマンドが用意されています。</target>
        </trans-unit>
        <trans-unit id="f207b958f5eb6b0877101dae79c7eab7e468386f" translate="yes" xml:space="preserve">
          <source>If you are issuing personal access tokens using the &lt;code&gt;User&lt;/code&gt; model's &lt;code&gt;createToken&lt;/code&gt; method, you may pass the array of desired scopes as the second argument to the method:</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; モデルの &lt;code&gt;createToken&lt;/code&gt; メソッドを使用して個人用アクセストークンを発行する場合は、目的のスコープの配列を2番目の引数としてメソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="9d331bf3ef4825bae5d456c673e91c070af2e2ff" translate="yes" xml:space="preserve">
          <source>If you are listening for many events on a given model, you may use observers to group all of your listeners into a single class. Observer classes have method names which reflect the Eloquent events you wish to listen for. Each of these methods receives the model as their only argument. The &lt;code&gt;make:observer&lt;/code&gt; Artisan command is the easiest way to create a new observer class:</source>
          <target state="translated">特定のモデルで多くのイベントをリッスンしている場合は、オブザーバーを使用して、すべてのリスナーを1つのクラスにグループ化できます。オブザーバークラスには、リッスンするEloquentイベントを反映するメソッド名があります。これらの各メソッドは、唯一の引数としてモデルを受け取ります。 &lt;code&gt;make:observer&lt;/code&gt; 職人コマンドは、新しいオブザーバークラスを作成する最も簡単な方法です：</target>
        </trans-unit>
        <trans-unit id="da655f76bc479f6fc0bc84d5c8e0ef5c9bf86ada" translate="yes" xml:space="preserve">
          <source>If you are listening for many events on a given model, you may use observers to group all of your listeners into a single class. Observers classes have method names which reflect the Eloquent events you wish to listen for. Each of these methods receives the model as their only argument. The &lt;code&gt;make:observer&lt;/code&gt; Artisan command is the easiest way to create a new observer class:</source>
          <target state="translated">特定のモデルで多くのイベントをリッスンしている場合は、オブザーバーを使用してすべてのリスナーを1つのクラスにグループ化できます。オブザーバークラスには、リッスンするEloquentイベントを反映するメソッド名があります。これらの各メソッドは、モデルを唯一の引数として受け取ります。 &lt;code&gt;make:observer&lt;/code&gt; 職人コマンドは、新しいオブザーバークラスを作成する最も簡単な方法です：</target>
        </trans-unit>
        <trans-unit id="cd48d0d1a1c2d92f21de49f5a1724aa01f2bad06" translate="yes" xml:space="preserve">
          <source>If you are manually implementing registration within your application instead of using &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;, you should ensure that you are dispatching the &lt;code&gt;Illuminate\Auth\Events\Registered&lt;/code&gt; event after a user's registration is successful:</source>
          <target state="translated">&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;を使用する代わりに、アプリケーション内で手動で登録を実装する場合は、ユーザーの登録が成功した後に、 &lt;code&gt;Illuminate\Auth\Events\Registered&lt;/code&gt; イベントをディスパッチしていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="a171e3a48b81d227dfd2cead70659d1673aa3762" translate="yes" xml:space="preserve">
          <source>If you are manually registering Dusk's service provider, you should &lt;strong&gt;never&lt;/strong&gt; register it in your production environment, as doing so could lead to arbitrary users being able to authenticate with your application.</source>
          <target state="translated">手動で夕暮れのサービスプロバイダを登録している場合は、必要があります&lt;strong&gt;決して&lt;/strong&gt;そうすることは、任意のユーザーがアプリケーションを使用して認証することができることにつながる可能性があるとして、本番環境でそれを登録していません。</target>
        </trans-unit>
        <trans-unit id="7dd85e30da6663b081a211e972363cea48186049" translate="yes" xml:space="preserve">
          <source>If you are not going to use Passport's default migrations, you should call the &lt;code&gt;Passport::ignoreMigrations&lt;/code&gt; method in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;. You may export the default migrations using &lt;code&gt;php artisan vendor:publish --tag=passport-migrations&lt;/code&gt;.</source>
          <target state="translated">あなたはパスポートのデフォルトの移行を使用しない場合は、呼び出す必要があり &lt;code&gt;Passport::ignoreMigrations&lt;/code&gt; 中にメソッド &lt;code&gt;register&lt;/code&gt; あなたの方法 &lt;code&gt;AppServiceProvider&lt;/code&gt; 。 &lt;code&gt;php artisan vendor:publish --tag=passport-migrations&lt;/code&gt; を使用して、デフォルトのマイグレーションをエクスポートできます。</target>
        </trans-unit>
        <trans-unit id="4e9b482dc27bb0da58e3f866763994fe11ad2cb4" translate="yes" xml:space="preserve">
          <source>If you are not going to use Sanctum's default migrations, you should call the &lt;code&gt;Sanctum::ignoreMigrations&lt;/code&gt; method in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;. You may export the default migrations using &lt;code&gt;php artisan vendor:publish --tag=sanctum-migrations&lt;/code&gt;.</source>
          <target state="translated">あなたは聖域のデフォルトの移行を使用しない場合は、呼び出す必要があり &lt;code&gt;Sanctum::ignoreMigrations&lt;/code&gt; 中にメソッド &lt;code&gt;register&lt;/code&gt; あなたの方法 &lt;code&gt;AppServiceProvider&lt;/code&gt; 。 &lt;code&gt;php artisan vendor:publish --tag=sanctum-migrations&lt;/code&gt; を使用してデフォルトの移行をエクスポートできます。</target>
        </trans-unit>
        <trans-unit id="043147f91d40f0adee80f67f18220be7dfeb3989" translate="yes" xml:space="preserve">
          <source>If you are not going to use Telescope's default migrations, you should call the &lt;code&gt;Telescope::ignoreMigrations&lt;/code&gt; method in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;. You may export the default migrations using the &lt;code&gt;php artisan vendor:publish --tag=telescope-migrations&lt;/code&gt; command.</source>
          <target state="translated">あなたは望遠鏡のデフォルトの移行を使用しない場合は、呼び出す必要が &lt;code&gt;Telescope::ignoreMigrations&lt;/code&gt; 中にメソッド &lt;code&gt;register&lt;/code&gt; あなたの方法 &lt;code&gt;AppServiceProvider&lt;/code&gt; 。 &lt;code&gt;php artisan vendor:publish --tag=telescope-migrations&lt;/code&gt; コマンドを使用して、デフォルトの移行をエクスポートできます。</target>
        </trans-unit>
        <trans-unit id="fc18f4d8d08b9290c536fc8260fe9860a052f19d" translate="yes" xml:space="preserve">
          <source>If you are not using Vue and Axios, you will need to manually configure your JavaScript application to send the &lt;code&gt;X-Socket-ID&lt;/code&gt; header. You may retrieve the socket ID using the &lt;code&gt;Echo.socketId&lt;/code&gt; method:</source>
          <target state="translated">VueとAxiosを使用していない場合は、 &lt;code&gt;X-Socket-ID&lt;/code&gt; ヘッダーを送信するようにJavaScriptアプリケーションを手動で構成する必要があります。 &lt;code&gt;Echo.socketId&lt;/code&gt; メソッドを使用してソケットIDを取得できます。</target>
        </trans-unit>
        <trans-unit id="f5b111296d97b25ef59f12bf4941cd306ad65221" translate="yes" xml:space="preserve">
          <source>If you are not using a traditional relational database to store your users, you will need to extend Laravel with your own authentication user provider. We will use the &lt;code&gt;provider&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade to define a custom user provider:</source>
          <target state="translated">ユーザーを格納するために従来のリレーショナルデータベースを使用していない場合は、独自の認証ユーザープロバイダーでLaravelを拡張する必要があります。 &lt;code&gt;Auth&lt;/code&gt; ファサードの &lt;code&gt;provider&lt;/code&gt; メソッドを使用して、カスタムユーザープロバイダーを定義します。</target>
        </trans-unit>
        <trans-unit id="3ace979e969a3ceef7608a6190c2338f43da48bb" translate="yes" xml:space="preserve">
          <source>If you are not using the &quot;US&quot; &lt;a href=&quot;https://documentation.mailgun.com/en/latest/api-intro.html#mailgun-regions&quot;&gt;Mailgun region&lt;/a&gt;, you may define your region's endpoint in the &lt;code&gt;services&lt;/code&gt; configuration file:</source>
          <target state="translated">「US」&lt;a href=&quot;https://documentation.mailgun.com/en/latest/api-intro.html#mailgun-regions&quot;&gt;Mailgunリージョン&lt;/a&gt;を使用していない場合は、 &lt;code&gt;services&lt;/code&gt; 構成ファイルでリージョンのエンドポイントを定義できます。</target>
        </trans-unit>
        <trans-unit id="c6ab95e79bc46ddcc2d321c617d6a532e10feb14" translate="yes" xml:space="preserve">
          <source>If you are only creating a few sites, this generic mapping will work just fine. However, as the number of sites continue to grow, you may begin to experience performance problems. This problem can be painfully apparent on low-end machines or projects that contain a very large number of files. If you are experiencing this issue, try mapping every project to its own Vagrant folder:</source>
          <target state="translated">あなたが数サイトしか作成していない場合は、この一般的なマッピングでも問題なく動作します。しかし、サイトの数が増え続けると、パフォーマンスの問題が発生することがあります。この問題は、ローエンドのマシンや非常に多くのファイルを含むプロジェクトでは、痛いほど明らかになります。もしこの問題が発生している場合は、全てのプロジェクトを独自のVagrantフォルダにマッピングしてみてください。</target>
        </trans-unit>
        <trans-unit id="b3375997ad85d144da1fa6ca76a4691f37759063" translate="yes" xml:space="preserve">
          <source>If you are queueing mailables for delivery in the background, you should use the &lt;code&gt;assertQueued&lt;/code&gt; method instead of &lt;code&gt;assertSent&lt;/code&gt;:</source>
          <target state="translated">バックグラウンドで配信するためにメールをキューに入れる場合は、 &lt;code&gt;assertQueued&lt;/code&gt; 代わりに &lt;code&gt;assertSent&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="088c1decf89cbdd586e860b02c6b4b34d816f54d" translate="yes" xml:space="preserve">
          <source>If you are redirecting to a route with an &quot;ID&quot; parameter that is being populated from an Eloquent model, you may pass the model itself. The ID will be extracted automatically:</source>
          <target state="translated">Eloquent モデルから「ID」パラメータが設定されているルートにリダイレクトする場合は、モデル自体を渡すことができます。IDは自動的に抽出されます。</target>
        </trans-unit>
        <trans-unit id="ec884b6154f9e8862c6270cc32e6a17559370105" translate="yes" xml:space="preserve">
          <source>If you are returning a collection of resources or a paginated response, you may use the &lt;code&gt;collection&lt;/code&gt; method when creating the resource instance in your route or controller:</source>
          <target state="translated">リソースのコレクションまたはページ分割された応答を返す場合は、ルートまたはコントローラーでリソースインスタンスを作成するときに &lt;code&gt;collection&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="45f37250b8c9001b36db002a1310b2f6e75c1c1e" translate="yes" xml:space="preserve">
          <source>If you are starting a brand new application and would like to include the authentication scaffolding, you may use the &lt;code&gt;--jet&lt;/code&gt; directive when creating your application via the Laravel Installer. This command will create a new application with all of the authentication scaffolding compiled and installed:</source>
          <target state="translated">まったく新しいアプリケーションを開始していて、認証スキャフォールドを含めたい場合は、Laravelインストーラーを介してアプリケーションを作成するときに &lt;code&gt;--jet&lt;/code&gt; ディレクティブを使用できます。このコマンドは、すべての認証スキャフォールディングがコンパイルおよびインストールされた新しいアプリケーションを作成します。</target>
        </trans-unit>
        <trans-unit id="0491c48c460aa01b0e3573e5fea9fd1f26ee3a65" translate="yes" xml:space="preserve">
          <source>If you are submitting a change that will affect a compiled file, such as most of the files in &lt;code&gt;resources/css&lt;/code&gt; or &lt;code&gt;resources/js&lt;/code&gt; of the &lt;code&gt;laravel/laravel&lt;/code&gt; repository, do not commit the compiled files. Due to their large size, they cannot realistically be reviewed by a maintainer. This could be exploited as a way to inject malicious code into Laravel. In order to defensively prevent this, all compiled files will be generated and committed by Laravel maintainers.</source>
          <target state="translated">&lt;code&gt;laravel/laravel&lt;/code&gt; リポジトリの &lt;code&gt;resources/css&lt;/code&gt; または &lt;code&gt;resources/js&lt;/code&gt; にあるほとんどのファイルなど、コンパイル済みファイルに影響を与える変更を送信する場合は、コンパイル済みファイルをコミットしないでください。サイズが大きいため、メンテナが実際にレビューすることはできません。これは、悪意のあるコードをLaravelに挿入する方法として悪用される可能性があります。これを防御的に防ぐために、コンパイルされたすべてのファイルはLaravelメンテナによって生成およびコミットされます。</target>
        </trans-unit>
        <trans-unit id="979943ada1faa0605ff0e8e8f79d469196bc8361" translate="yes" xml:space="preserve">
          <source>If you are the consumer of a package and would like to disable package discovery for a package, you may list the package name in the &lt;code&gt;extra&lt;/code&gt; section of your application's &lt;code&gt;composer.json&lt;/code&gt; file:</source>
          <target state="translated">パッケージのコンシューマーであり、パッケージのパッケージ検出を無効にしたい場合は、アプリケーションの &lt;code&gt;composer.json&lt;/code&gt; ファイルの &lt;code&gt;extra&lt;/code&gt; セクションにパッケージ名をリストできます。</target>
        </trans-unit>
        <trans-unit id="249953fc4c92e89bc7d8eb7e9cef3f33e39b4310" translate="yes" xml:space="preserve">
          <source>If you are uncomfortable managing your own servers, consider using &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt;. Forge provisions PHP 7+ servers with everything you need to run modern, robust Laravel applications with Horizon.</source>
          <target state="translated">自分のサーバーの管理に不安がある場合は、&lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forgeの&lt;/a&gt;使用を検討してください。Forgeは、Horizo​​nで最新の堅牢なLaravelアプリケーションを実行するために必要なすべてを備えたPHP 7+サーバーをプロビジョニングします。</target>
        </trans-unit>
        <trans-unit id="3160c62f1bfcb9f44251943023b76a72616bc28d" translate="yes" xml:space="preserve">
          <source>If you are unsure if your feature qualifies as a major or minor, please ask Taylor Otwell in the &lt;code&gt;#internals&lt;/code&gt; channel of the &lt;a href=&quot;https://discordapp.com/invite/mPZNm7A&quot;&gt;Laravel Discord server&lt;/a&gt;.</source>
          <target state="translated">機能がメジャーかマイナーかどうかわからない場合は、&lt;a href=&quot;https://discordapp.com/invite/mPZNm7A&quot;&gt;Laravel Discordサーバーの&lt;/a&gt; &lt;code&gt;#internals&lt;/code&gt; チャネルでTaylor Otwellに質問してください。</target>
        </trans-unit>
        <trans-unit id="f94340768762cc1b3353bfa3eafb5f94558b1a06" translate="yes" xml:space="preserve">
          <source>If you are updating database records while chunking results, your chunk results could change in unexpected ways. So, when updating records while chunking, it is always best to use the &lt;code&gt;chunkById&lt;/code&gt; method instead. This method will automatically paginate the results based on the record's primary key:</source>
          <target state="translated">結果をチャンクしているときにデータベースレコードを更新している場合、チャンクの結果が予期しない方法で変更される可能性があります。したがって、チャンク中にレコードを更新する場合は、代わりに &lt;code&gt;chunkById&lt;/code&gt; メソッドを使用するのが常に最善です。このメソッドは、レコードの主キーに基づいて結果を自動的にページ分割します。</target>
        </trans-unit>
        <trans-unit id="eff31c9a70b0a8768093ced68e3d4b280676adbc" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://github.com/features/actions&quot;&gt;Github Actions&lt;/a&gt; to run your Dusk tests, you may use this configuration file as a starting point. Like TravisCI, we will use the &lt;code&gt;php artisan serve&lt;/code&gt; command to launch PHP's built-in web server:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/features/actions&quot;&gt;Githubアクション&lt;/a&gt;を使用してDuskテストを実行している場合は、この構成ファイルを開始点として使用できます。TravisCIと同様に、 &lt;code&gt;php artisan serve&lt;/code&gt; artisanserveコマンドを使用してPHPの組み込みWebサーバーを起動します。</target>
        </trans-unit>
        <trans-unit id="7f03e36ef59186cbe598c8794ac1b00e30c737b6" translate="yes" xml:space="preserve">
          <source>If you are using AWS Elastic Load Balancing, your &lt;code&gt;$headers&lt;/code&gt; value should be &lt;code&gt;Request::HEADER_X_FORWARDED_AWS_ELB&lt;/code&gt;. For more information on the constants that may be used in the &lt;code&gt;$headers&lt;/code&gt; property, check out Symfony's documentation on &lt;a href=&quot;http://symfony.com/doc/current/deployment/proxies.html&quot;&gt;trusting proxies&lt;/a&gt;.</source>
          <target state="translated">AWS Elastic Load Balancingを使用している場合、 &lt;code&gt;$headers&lt;/code&gt; 値は &lt;code&gt;Request::HEADER_X_FORWARDED_AWS_ELB&lt;/code&gt; 必要があります。 &lt;code&gt;$headers&lt;/code&gt; プロパティで使用できる定数の詳細については、Symfonyの&lt;a href=&quot;http://symfony.com/doc/current/deployment/proxies.html&quot;&gt;信頼できるプロキシ&lt;/a&gt;に関するドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="745d722eb4d4cbf93d1b50a7afc4cba06ad2d00c" translate="yes" xml:space="preserve">
          <source>If you are using AWS Elastic Load Balancing, your &lt;code&gt;$headers&lt;/code&gt; value should be &lt;code&gt;Request::HEADER_X_FORWARDED_AWS_ELB&lt;/code&gt;. For more information on the constants that may be used in the &lt;code&gt;$headers&lt;/code&gt; property, check out Symfony's documentation on &lt;a href=&quot;https://symfony.com/doc/current/deployment/proxies.html&quot;&gt;trusting proxies&lt;/a&gt;.</source>
          <target state="translated">AWS Elastic Load Balancingを使用している場合、 &lt;code&gt;$headers&lt;/code&gt; 値は &lt;code&gt;Request::HEADER_X_FORWARDED_AWS_ELB&lt;/code&gt; 必要があります。 &lt;code&gt;$headers&lt;/code&gt; プロパティで使用できる定数の詳細については、&lt;a href=&quot;https://symfony.com/doc/current/deployment/proxies.html&quot;&gt;プロキシの信頼&lt;/a&gt;に関するSymfonyのドキュメントを確認してください。</target>
        </trans-unit>
        <trans-unit id="361f5c4c3a961d456a90a59c90d2a49660f3467c" translate="yes" xml:space="preserve">
          <source>If you are using Amazon AWS or another &quot;cloud&quot; load balancer provider, you may not know the IP addresses of your actual balancers. In this case, you may use &lt;code&gt;*&lt;/code&gt; to trust all proxies:</source>
          <target state="translated">Amazon AWSまたは別の「クラウド」ロードバランサープロバイダーを使用している場合、実際のバランサーのIPアドレスがわからない場合があります。この場合、 &lt;code&gt;*&lt;/code&gt; を使用してすべてのプロキシを信頼できます。</target>
        </trans-unit>
        <trans-unit id="e8519b25d4339ce6e63ffe05d4e22a75bfbd5df4" translate="yes" xml:space="preserve">
          <source>If you are using Braintree as your billing provider, you must include a &lt;code&gt;description&lt;/code&gt; option when calling the &lt;code&gt;invoiceFor&lt;/code&gt; method:</source>
          <target state="translated">請求プロバイダーとしてBraintreeを使用している場合は、 &lt;code&gt;invoiceFor&lt;/code&gt; メソッドを呼び出すときに &lt;code&gt;description&lt;/code&gt; オプションを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="07353c47779b167f88eb87ba092af0bc42c0558c" translate="yes" xml:space="preserve">
          <source>If you are using CircleCI 1.0 to run your Dusk tests, you may use this configuration file as a starting point. Like TravisCI, we will use the &lt;code&gt;php artisan serve&lt;/code&gt; command to launch PHP's built-in web server:</source>
          <target state="translated">CircleCI 1.0を使用してDuskテストを実行している場合は、この構成ファイルを出発点として使用できます。TravisCIと同様に、 &lt;code&gt;php artisan serve&lt;/code&gt; コマンドを使用して、PHPの組み込みWebサーバーを起動します。</target>
        </trans-unit>
        <trans-unit id="43813db7001a2b113c744bec7186d8532ac46ef4" translate="yes" xml:space="preserve">
          <source>If you are using CircleCI 2.0 to run your Dusk tests, you may add these steps to your build:</source>
          <target state="translated">CircleCI 2.0を使用してDuskテストを実行している場合は、以下の手順をビルドに追加することができます。</target>
        </trans-unit>
        <trans-unit id="9e8a75c2a0c9c6360d92fdacb478f80a81ac0b3b" translate="yes" xml:space="preserve">
          <source>If you are using CircleCI to run your Dusk tests, you may use this configuration file as a starting point. Like TravisCI, we will use the &lt;code&gt;php artisan serve&lt;/code&gt; command to launch PHP's built-in web server:</source>
          <target state="translated">CircleCIを使用してDuskテストを実行している場合は、この構成ファイルを開始点として使用できます。TravisCIと同様に、 &lt;code&gt;php artisan serve&lt;/code&gt; artisanserveコマンドを使用してPHPの組み込みWebサーバーを起動します。</target>
        </trans-unit>
        <trans-unit id="8c45708aeb1dba77e9746550833ce20c317ef06f" translate="yes" xml:space="preserve">
          <source>If you are using Laravel Jetstream, rate limiting will automatically be applied to login attempts. By default, the user will not be able to login for one minute if they fail to provide the correct credentials after several attempts. The throttling is unique to the user's username / e-mail address and their IP address.</source>
          <target state="translated">Laravel Jetstreamを使用している場合は、ログイン試行に自動的にレート制限が適用されます。デフォルトでは、数回の試行で正しい認証情報を提供できなかった場合、ユーザーは1分間ログインできなくなります。絞り込みはユーザーのユーザー名/メールアドレスとIPアドレスに固有のものです。</target>
        </trans-unit>
        <trans-unit id="8f59cf4f1d6b1106634dc3e8033199a55d394aef" translate="yes" xml:space="preserve">
          <source>If you are using Laravel Passport, you should update your &lt;code&gt;laravel/passport&lt;/code&gt; dependency to &lt;code&gt;^7.0&lt;/code&gt; in your &lt;code&gt;composer.json&lt;/code&gt; file.</source>
          <target state="translated">Laravel Passportを使用している場合は、 &lt;code&gt;composer.json&lt;/code&gt; ファイルの &lt;code&gt;laravel/passport&lt;/code&gt; 依存関係を &lt;code&gt;^7.0&lt;/code&gt; に更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="9fd3c11b616776827f2bab7e0b9a77b05756871d" translate="yes" xml:space="preserve">
          <source>If you are using Laravel's built-in &lt;code&gt;LoginController&lt;/code&gt; class, the &lt;code&gt;Illuminate\Foundation\Auth\ThrottlesLogins&lt;/code&gt; trait will already be included in your controller. By default, the user will not be able to login for one minute if they fail to provide the correct credentials after several attempts. The throttling is unique to the user's username / e-mail address and their IP address.</source>
          <target state="translated">Laravelの組み込み &lt;code&gt;LoginController&lt;/code&gt; クラスを使用している場合、 &lt;code&gt;Illuminate\Foundation\Auth\ThrottlesLogins&lt;/code&gt; トレイトは既にコントローラーに含まれています。デフォルトでは、何回か試行しても正しい資格情報を提供できない場合、ユーザーは1分間ログインできません。スロットルは、ユーザーのユーザー名/電子メールアドレスとIPアドレスに固有です。</target>
        </trans-unit>
        <trans-unit id="2887e566793f1cf7f4242f1f9539ace2720c80ab" translate="yes" xml:space="preserve">
          <source>If you are using Nginx, the following directive in your site configuration will direct all requests to the &lt;code&gt;index.php&lt;/code&gt; front controller:</source>
          <target state="translated">Nginxを使用している場合、サイト構成の次のディレクティブにより、すべてのリクエストが &lt;code&gt;index.php&lt;/code&gt; フロントコントローラーに送信されます。</target>
        </trans-unit>
        <trans-unit id="fa410f54e19eea0e1836f3f60205d82cac14e4c1" translate="yes" xml:space="preserve">
          <source>If you are using PHP FastCGI, HTTP Basic authentication may not work correctly out of the box. The following lines should be added to your &lt;code&gt;.htaccess&lt;/code&gt; file:</source>
          <target state="translated">PHP FastCGIを使用している場合、そのままではHTTP基本認証が正しく機能しない可能性があります。次の行を &lt;code&gt;.htaccess&lt;/code&gt; ファイルに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="233c59d8866ebd06fecfc79bae487b2de7ee00a8" translate="yes" xml:space="preserve">
          <source>If you are using Redis, you may use the &lt;code&gt;RateLimitedWithRedis&lt;/code&gt; middleware, which is fine-tuned for Redis and more efficient than the basic rate limiting middleware.</source>
          <target state="translated">Redisを使用している場合は、 &lt;code&gt;RateLimitedWithRedis&lt;/code&gt; ミドルウェアを使用できます。これは、Redis用に微調整されており、基本的なレート制限ミドルウェアよりも効率的です。</target>
        </trans-unit>
        <trans-unit id="684c8370b083588260cbee7e6ec4968ff2c5f57b" translate="yes" xml:space="preserve">
          <source>If you are using Windows, you may need to enable hardware virtualization (VT-x). It can usually be enabled via your BIOS. If you are using Hyper-V on a UEFI system you may additionally need to disable Hyper-V in order to access VT-x.</source>
          <target state="translated">Windows を使用している場合、ハードウェア仮想化 (VT-x)を有効にする必要があるかもしれません。これは通常、BIOSを介して有効にすることができます。UEFI システムで Hyper-V を使用している場合、VT-x にアクセスするために Hyper-V を無効にする必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="b7950861dc6b2f111b1a92f6abfe651a2862422b" translate="yes" xml:space="preserve">
          <source>If you are using a Monolog handler that is capable of providing its own formatter, you may set the value of the &lt;code&gt;formatter&lt;/code&gt; configuration option to &lt;code&gt;default&lt;/code&gt;:</source>
          <target state="translated">独自のフォーマッターを提供できるMonologハンドラーを使用している場合は、 &lt;code&gt;formatter&lt;/code&gt; 構成オプションの値を &lt;code&gt;default&lt;/code&gt; に設定できます。</target>
        </trans-unit>
        <trans-unit id="e4cff8dd3e7c9013a5d779350e1d2ee1ac6a2cc9" translate="yes" xml:space="preserve">
          <source>If you are using a different JavaScript framework, you should make sure it is configured to send the &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; and &lt;code&gt;X-Requested-With&lt;/code&gt; headers with every outgoing request.</source>
          <target state="translated">別のJavaScriptフレームワークを使用している場合は、すべての発信要求で &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; および &lt;code&gt;X-Requested-With&lt;/code&gt; ヘッダーを送信するように構成されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="b335fcab97ba2f988d2dea31ffc64ec61e30f292" translate="yes" xml:space="preserve">
          <source>If you are using route model binding and would like the resource controller's methods to type-hint a model instance, you may use the &lt;code&gt;--model&lt;/code&gt; option when generating the controller:</source>
          <target state="translated">ルートモデルバインディングを使用していて、リソースコントローラーのメソッドがモデルインスタンスをタイプヒントするようにしたい場合は、コントローラーの生成時に &lt;code&gt;--model&lt;/code&gt; オプションを使用できます。</target>
        </trans-unit>
        <trans-unit id="493e9867099b1004380f8f5fe145ee99882d2935" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;blade&quot;&gt;Blade templating engine&lt;/a&gt;, you may use the &lt;code&gt;{{ }}&lt;/code&gt; syntax to echo the translation string or use the &lt;code&gt;@lang&lt;/code&gt; directive:</source>
          <target state="translated">使用している場合は&lt;a href=&quot;blade&quot;&gt;、ブレードのテンプレートエンジンを&lt;/a&gt;、あなたは使用することができます &lt;code&gt;{{ }}&lt;/code&gt; 翻訳文字列をエコーまたは使用する構文 &lt;code&gt;@lang&lt;/code&gt; ディレクティブを：</target>
        </trans-unit>
        <trans-unit id="f99ec3743dc19616e3f2ef4c532e1d47c53656ce" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;a href=&quot;homestead&quot;&gt;Homestead virtual machine&lt;/a&gt;, you should run this command from within your virtual machine.</source>
          <target state="translated">&lt;a href=&quot;homestead&quot;&gt;Homestead仮想マシン&lt;/a&gt;を使用している場合は、仮想マシン内からこのコマンドを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="3bff4fefd1f0c9c667d837a13bdfd20eaf7789e2" translate="yes" xml:space="preserve">
          <source>If you are using the &lt;code&gt;storeAs&lt;/code&gt; method, you may pass the disk name as the third argument to the method:</source>
          <target state="translated">&lt;code&gt;storeAs&lt;/code&gt; メソッドを使用している場合は、ディスク名を3番目の引数としてメソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="91506c33cbb42e48035be8e00736ae93e4f008fa" translate="yes" xml:space="preserve">
          <source>If you are using the Argon2 algorithm, the &lt;code&gt;make&lt;/code&gt; method allows you to manage the work factor of the algorithm using the &lt;code&gt;memory&lt;/code&gt;, &lt;code&gt;time&lt;/code&gt;, and &lt;code&gt;threads&lt;/code&gt; options; however, the defaults are acceptable for most applications:</source>
          <target state="translated">Argon2アルゴリズムを使用している場合、 &lt;code&gt;make&lt;/code&gt; メソッドを使用すると、 &lt;code&gt;memory&lt;/code&gt; 、 &lt;code&gt;time&lt;/code&gt; 、および &lt;code&gt;threads&lt;/code&gt; オプションを使用してアルゴリズムの作業係数を管理できます。ただし、ほとんどのアプリケーションではデフォルトで問題ありません。</target>
        </trans-unit>
        <trans-unit id="a3cacb0c8beb503d1cda4013f1afed5eb5cbd58e" translate="yes" xml:space="preserve">
          <source>If you are using the Bcrypt algorithm, the &lt;code&gt;make&lt;/code&gt; method allows you to manage the work factor of the algorithm using the &lt;code&gt;rounds&lt;/code&gt; option; however, the default is acceptable for most applications:</source>
          <target state="translated">Bcryptアルゴリズムを使用している場合、 &lt;code&gt;make&lt;/code&gt; メソッドを使用すると、 &lt;code&gt;rounds&lt;/code&gt; オプションを使用してアルゴリズムの作業係数を管理できます。ただし、ほとんどのアプリケーションではデフォルトで問題ありません。</target>
        </trans-unit>
        <trans-unit id="fc41464c5a593fc3ca21acee954fd67bc5ae8ca4" translate="yes" xml:space="preserve">
          <source>If you are using the Memcached driver, items that are stored &quot;forever&quot; may be removed when the cache reaches its size limit.</source>
          <target state="translated">Memcached ドライバを使用している場合、「永遠に」保存されているアイテムは、キャッシュのサイズが上限に達すると削除されることがあります。</target>
        </trans-unit>
        <trans-unit id="59b1471ac84ccbe595c4753ebfaf0f1e11590da4" translate="yes" xml:space="preserve">
          <source>If you are using the Redis broadcaster, you should either install the phpredis PHP extension via PECL or install the Predis library via Composer:</source>
          <target state="translated">Redis broadcaster を使用している場合は、PECL を介して phpredis PHP 拡張モジュールをインストールするか、 Composer を介して Predis ライブラリをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="2e8b57fd77daab462ddce166f2f6f22847b087fd" translate="yes" xml:space="preserve">
          <source>If you are using the Redis broadcaster, you should install the Predis library:</source>
          <target state="translated">Redis ブロードキャスターを使用している場合は、Predis ライブラリをインストールする必要があります。</target>
        </trans-unit>
        <trans-unit id="a72abe15ebdbcfa45a372d34879cafb361677e9e" translate="yes" xml:space="preserve">
          <source>If you are using the Supervisor process monitor to manage your &lt;code&gt;horizon&lt;/code&gt; process, the following configuration file should suffice:</source>
          <target state="translated">スーパーバイザプロセスモニタを使用して &lt;code&gt;horizon&lt;/code&gt; プロセスを管理している場合は、次の構成ファイルで十分です。</target>
        </trans-unit>
        <trans-unit id="f735571c56e84396579cdbb77e2c2aa71d2b5648" translate="yes" xml:space="preserve">
          <source>If you are using the built-in &lt;code&gt;LoginController&lt;/code&gt; that is shipped with Laravel, the proper logic to &quot;remember&quot; users is already implemented by the traits used by the controller.</source>
          <target state="translated">Laravelに同梱されている組み込みの &lt;code&gt;LoginController&lt;/code&gt; を使用している場合、ユーザーを「記憶」するための適切なロジックは、コントローラーが使用する特性によってすでに実装されています。</target>
        </trans-unit>
        <trans-unit id="c751090d3c692a86ed1686155d290595b5dd9710" translate="yes" xml:space="preserve">
          <source>If you are utilizing &lt;a href=&quot;controllers#resource-controllers&quot;&gt;resource controllers&lt;/a&gt;, you may make use of the &lt;code&gt;authorizeResource&lt;/code&gt; method in the controller's constructor. This method will attach the appropriate &lt;code&gt;can&lt;/code&gt; middleware definitions to the resource controller's methods.</source>
          <target state="translated">あなたが利用している場合は&lt;a href=&quot;controllers#resource-controllers&quot;&gt;、リソースコントローラを&lt;/a&gt;、あなたは使用ことがあり &lt;code&gt;authorizeResource&lt;/code&gt; のコントローラのコンストラクタでメソッドを。このメソッドは、適切な &lt;code&gt;can&lt;/code&gt; ミドルウェア定義をリソースコントローラーのメソッドにアタッチします。</target>
        </trans-unit>
        <trans-unit id="5dedd976b7ed6bb9b8a33763b2892c378be32ad5" translate="yes" xml:space="preserve">
          <source>If you are validating an array form field, you may retrieve all of the messages for each of the array elements using the &lt;code&gt;*&lt;/code&gt; character:</source>
          <target state="translated">配列フォームフィールドを検証する場合は、 &lt;code&gt;*&lt;/code&gt; 文字を使用して、配列要素ごとにすべてのメッセージを取得できます。</target>
        </trans-unit>
        <trans-unit id="f0b076b5c3725f7c74f7f76396b8965035c27506" translate="yes" xml:space="preserve">
          <source>If you are working with multiple queue connections, you may specify which connection to push a job to. To specify the connection, use the &lt;code&gt;onConnection&lt;/code&gt; method when dispatching the job:</source>
          <target state="translated">複数のキュー接続を使用している場合は、ジョブをプッシュする接続を指定できます。接続を指定するには、ジョブをディスパッチするときに &lt;code&gt;onConnection&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="1396309754a79a60a900d50567af987eb03dd2bb" translate="yes" xml:space="preserve">
          <source>If you aren't quite ready to manage your own server configuration or aren't comfortable configuring all of the various services needed to run a robust Laravel application, &lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt; is a wonderful alternative.</source>
          <target state="translated">独自のサーバー構成を管理する準備が整っていない場合、または堅牢なLaravelアプリケーションを実行するために必要なさまざまなサービスをすべて構成することに慣れていない場合、&lt;a href=&quot;https://forge.laravel.com&quot;&gt;Laravel Forge&lt;/a&gt;は素晴らしい代替手段です。</target>
        </trans-unit>
        <trans-unit id="4e57b06cdb628c624ea7149f2b84ffc87b28f8a0" translate="yes" xml:space="preserve">
          <source>If you attempt to &lt;code&gt;@include&lt;/code&gt; a view which does not exist, Laravel will throw an error. If you would like to include a view that may or may not be present, you should use the &lt;code&gt;@includeIf&lt;/code&gt; directive:</source>
          <target state="translated">存在しないビューを &lt;code&gt;@include&lt;/code&gt; しようとすると、Laravelはエラーをスローします。存在する場合と存在しない場合があるビューを含める場合は、 &lt;code&gt;@includeIf&lt;/code&gt; ディレクティブを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="2f335797f92b74d121e2901fe1c763987d9d46fc" translate="yes" xml:space="preserve">
          <source>If you change the &lt;code&gt;sites&lt;/code&gt; property after provisioning the Homestead box, you should re-run &lt;code&gt;vagrant reload --provision&lt;/code&gt; to update the Nginx configuration on the virtual machine.</source>
          <target state="translated">Homesteadボックスのプロビジョニング後に &lt;code&gt;sites&lt;/code&gt; プロパティを変更した場合は、 &lt;code&gt;vagrant reload --provision&lt;/code&gt; を再実行して、仮想マシンのNginx構成を更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="6e15c91531d9fb650a4d725277cec9629b60ef9a" translate="yes" xml:space="preserve">
          <source>If you choose to nest your controllers deeper into the &lt;code&gt;App\Http\Controllers&lt;/code&gt; directory, use the specific class name relative to the &lt;code&gt;App\Http\Controllers&lt;/code&gt; root namespace. So, if your full controller class is &lt;code&gt;App\Http\Controllers\Photos\AdminController&lt;/code&gt;, you should register routes to the controller like so:</source>
          <target state="translated">コントローラを &lt;code&gt;App\Http\Controllers&lt;/code&gt; ディレクトリのより深い場所にネストする場合は、 &lt;code&gt;App\Http\Controllers&lt;/code&gt; ルートネームスペースに関連する特定のクラス名を使用します。したがって、完全なコントローラークラスが &lt;code&gt;App\Http\Controllers\Photos\AdminController&lt;/code&gt; 場合、次のようにコントローラーへのルートを登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="ab6114b2599941def25d46ebc1409c160f3ba41f" translate="yes" xml:space="preserve">
          <source>If you choose to send the &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; header instead of &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt;, you will need to use the unencrypted token provided by &lt;code&gt;csrf_token()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; の代わりに &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; ヘッダーを送信することを選択した場合は、 &lt;code&gt;csrf_token()&lt;/code&gt; によって提供される暗号化されていないトークンを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="04ae7081e756e9794ac3a364523ce23808373ff5" translate="yes" xml:space="preserve">
          <source>If you choose to use Laravel's new &lt;a href=&quot;verification&quot;&gt;email verification services&lt;/a&gt;, you will need to add additional scaffolding to your application. First, add the &lt;code&gt;VerificationController&lt;/code&gt; to your application: &lt;a href=&quot;https://github.com/laravel/laravel/blob/master/app/Http/Controllers/Auth/VerificationController.php&quot;&gt;App\Http\Controllers\Auth\VerificationController&lt;/a&gt;.</source>
          <target state="translated">Laravelの新しい&lt;a href=&quot;verification&quot;&gt;メール検証サービス&lt;/a&gt;を使用する場合は、アプリケーションに足場を追加する必要があります。まず、アプリケーションに &lt;code&gt;VerificationController&lt;/code&gt; を追加します：&lt;a href=&quot;https://github.com/laravel/laravel/blob/master/app/Http/Controllers/Auth/VerificationController.php&quot;&gt;App \ Http \ Controllers \ Auth \ VerificationController&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a4065eba7a177c363412326f7ba0cf8b1c64f183" translate="yes" xml:space="preserve">
          <source>If you customize the broadcast name using the &lt;code&gt;broadcastAs&lt;/code&gt; method, you should make sure to register your listener with a leading &lt;code&gt;.&lt;/code&gt; character. This will instruct Echo to not prepend the application's namespace to the event:</source>
          <target state="translated">&lt;code&gt;broadcastAs&lt;/code&gt; メソッドを使用してブロードキャスト名をカスタマイズする場合は、必ずリスナーをLeadingに登録する必要があります &lt;code&gt;.&lt;/code&gt; キャラクター。これは、アプリケーションの名前空間をイベントの前に付加しないようにEchoに指示します。</target>
        </trans-unit>
        <trans-unit id="92ed01dca1f55ea83724072a32bf651538824fa5" translate="yes" xml:space="preserve">
          <source>If you define your own &lt;code&gt;setUp&lt;/code&gt; / &lt;code&gt;tearDown&lt;/code&gt; methods within a test class, be sure to call the respective &lt;code&gt;parent::setUp()&lt;/code&gt; / &lt;code&gt;parent::tearDown()&lt;/code&gt; methods on the parent class.</source>
          <target state="translated">テストクラス内で独自の &lt;code&gt;setUp&lt;/code&gt; / &lt;code&gt;tearDown&lt;/code&gt; メソッドを定義する場合は、親クラスでそれぞれの &lt;code&gt;parent::setUp()&lt;/code&gt; / &lt;code&gt;parent::tearDown()&lt;/code&gt; メソッドを必ず呼び出してください。</target>
        </trans-unit>
        <trans-unit id="b3e841e789e3b019df906c9d988b585a7233b6dd" translate="yes" xml:space="preserve">
          <source>If you define your own &lt;code&gt;setUp&lt;/code&gt; method within a test class, be sure to call &lt;code&gt;parent::setUp()&lt;/code&gt;.</source>
          <target state="translated">テストクラス内で独自の &lt;code&gt;setUp&lt;/code&gt; メソッドを定義する場合は、必ず &lt;code&gt;parent::setUp()&lt;/code&gt; を呼び出してください。</target>
        </trans-unit>
        <trans-unit id="2628d4885a090d46c99a87ea6488e841ccb6cc90" translate="yes" xml:space="preserve">
          <source>If you discover a security vulnerability within Laravel, please send an email to Taylor Otwell at &lt;a href=&quot;https://laravel.com/cdn-cgi/l/email-protection#a7d3c6decbc8d5e7cbc6d5c6d1c2cb89c4c8ca&quot;&gt;taylor@laravel.com&lt;/a&gt;. All security vulnerabilities will be promptly addressed.</source>
          <target state="translated">Laravel内にセキュリティの脆弱性を発見した場合は、テイラー&lt;a href=&quot;https://laravel.com/cdn-cgi/l/email-protection#a7d3c6decbc8d5e7cbc6d5c6d1c2cb89c4c8ca&quot;&gt;オトウェル（taylor@laravel.com）に&lt;/a&gt;電子メールを送信してください。すべてのセキュリティの脆弱性は迅速に対処されます。</target>
        </trans-unit>
        <trans-unit id="f55884cf55117fa54c15c93c982bb6e9add30692" translate="yes" xml:space="preserve">
          <source>If you discover a security vulnerability within Laravel, please send an email to Taylor Otwell at &lt;a href=&quot;https://laravel.com/cdn-cgi/l/email-protection#acd8cdd5c0c3deecc0cddecddac9c082cfc3c1&quot;&gt;taylor@laravel.com&lt;/a&gt;. All security vulnerabilities will be promptly addressed.</source>
          <target state="translated">Laravel内にセキュリティの脆弱性を発見した場合は、&lt;a href=&quot;https://laravel.com/cdn-cgi/l/email-protection#acd8cdd5c0c3deecc0cddecddac9c082cfc3c1&quot;&gt;taylor @ laravel.comの&lt;/a&gt;メールをTaylor Otwellに送信してください。すべてのセキュリティの脆弱性に迅速に対処します。</target>
        </trans-unit>
        <trans-unit id="3ee11208085aeccbf3fdcf78ae406a793b0918ff" translate="yes" xml:space="preserve">
          <source>If you do not need to add additional constraints to an Eloquent relationship query, you may access the relationship as if it were a property. For example, continuing to use our &lt;code&gt;User&lt;/code&gt; and &lt;code&gt;Post&lt;/code&gt; example models, we may access all of a user's posts like so:</source>
          <target state="translated">Eloquentリレーションシップクエリに追加の制約を追加する必要がない場合は、プロパティのようにリレーションシップにアクセスできます。たとえば、 &lt;code&gt;User&lt;/code&gt; モデルと &lt;code&gt;Post&lt;/code&gt; サンプルモデルを引き続き使用すると、次のようにユーザーのすべての投稿にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="ea34da5443acfab7316ae39e64b5e85d448fe6ea" translate="yes" xml:space="preserve">
          <source>If you do not want a file name to be automatically generated, you may use the &lt;code&gt;storeAs&lt;/code&gt; method, which accepts the path, file name, and disk name as its arguments:</source>
          <target state="translated">ファイル名を自動的に生成したくない場合は、パス、ファイル名、ディスク名を引数として受け入れる &lt;code&gt;storeAs&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="cca1a81089c92a1ff575e305b342c42fb0a641b6" translate="yes" xml:space="preserve">
          <source>If you do not want to detach existing IDs, you may use the &lt;code&gt;syncWithoutDetaching&lt;/code&gt; method:</source>
          <target state="translated">既存のIDを切り離したくない場合は、 &lt;code&gt;syncWithoutDetaching&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="60a3b7df7b53e71cb745ee827ef76d4f2237041e" translate="yes" xml:space="preserve">
          <source>If you do not want to halt the execution of your script, use the &lt;a href=&quot;#method-dump&quot;&gt;&lt;code&gt;dump&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="translated">スクリプトの実行を停止したくない場合は、代わりに&lt;a href=&quot;#method-dump&quot;&gt; &lt;code&gt;dump&lt;/code&gt; &lt;/a&gt;関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="4d83118baaadc3a861436d94ed8941863ef880b9" translate="yes" xml:space="preserve">
          <source>If you do not want to retrieve the model before deleting the record, you may use the &lt;code&gt;unsearchable&lt;/code&gt; method on an Eloquent query instance or collection:</source>
          <target state="translated">レコードを削除する前にモデルを取得したくない場合は、Eloquentクエリインスタンスまたはコレクションで検索 &lt;code&gt;unsearchable&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="f1af50e5a5a26d7551e334fd7e28edc30706d21a" translate="yes" xml:space="preserve">
          <source>If you do not want to stop executing the script, use the &lt;a href=&quot;#method-dump&quot;&gt;&lt;code&gt;dump&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">スクリプトの実行を停止したくない場合は、代わりに&lt;a href=&quot;#method-dump&quot;&gt; &lt;code&gt;dump&lt;/code&gt; &lt;/a&gt;メソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="d0d82289c8b584f13fcc9e7765142a3aa53a3b92" translate="yes" xml:space="preserve">
          <source>If you do not want to use the &lt;code&gt;validate&lt;/code&gt; method on the request, you may create a validator instance manually using the &lt;code&gt;Validator&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. The &lt;code&gt;make&lt;/code&gt; method on the facade generates a new validator instance:</source>
          <target state="translated">リクエストで &lt;code&gt;validate&lt;/code&gt; メソッドを使用したくない場合は、 &lt;code&gt;Validator&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサード&lt;/a&gt;を使用してバリデーターインスタンスを手動で作成できます。ファサードの &lt;code&gt;make&lt;/code&gt; メソッドは、新しいバリデーターインスタンスを生成します。</target>
        </trans-unit>
        <trans-unit id="70558fc5234f6fc4cc5079955f9f1d7c8dda39e1" translate="yes" xml:space="preserve">
          <source>If you don't even need an entire row, you may extract a single value from a record using the &lt;code&gt;value&lt;/code&gt; method. This method will return the value of the column directly:</source>
          <target state="translated">行全体が必要ない場合でも、 &lt;code&gt;value&lt;/code&gt; メソッドを使用してレコードから単一の値を抽出できます。このメソッドは、列の値を直接返します。</target>
        </trans-unit>
        <trans-unit id="6561012beb93d7d15cbdfdf08d683536a209dc58" translate="yes" xml:space="preserve">
          <source>If you don't want to implement the entire client management frontend yourself, you can use the &lt;a href=&quot;#frontend-quickstart&quot;&gt;frontend quickstart&lt;/a&gt; to have a fully functional frontend in a matter of minutes.</source>
          <target state="translated">クライアント管理フロントエンド全体を自分で実装したくない場合は、&lt;a href=&quot;#frontend-quickstart&quot;&gt;フロントエンドクイックスタート&lt;/a&gt;を使用して、数分で完全に機能するフロントエンドを作成できます。</target>
        </trans-unit>
        <trans-unit id="91eb6f883b200823320a0d095f699de19bc66513" translate="yes" xml:space="preserve">
          <source>If you don't want to implement the personal access token frontend yourself, you can use the &lt;a href=&quot;#frontend-quickstart&quot;&gt;frontend quickstart&lt;/a&gt; to have a fully functional frontend in a matter of minutes.</source>
          <target state="translated">パーソナルアクセストークンフロントエンドを自分で実装したくない場合は、&lt;a href=&quot;#frontend-quickstart&quot;&gt;フロントエンドクイックスタート&lt;/a&gt;を使用して、数分で完全に機能するフロントエンドを作成できます。</target>
        </trans-unit>
        <trans-unit id="27a57be3c3941f837a4c992e0c513b18421321c4" translate="yes" xml:space="preserve">
          <source>If you don't want to make use of the &quot;overlay&quot; style checkout widget, Paddle also has an option to display the widget inline. While this approach does not allow you to adjust any of the checkout's HTML fields, it allows you to embed the widget within your application.</source>
          <target state="translated">オーバーレイ」スタイルのチェックアウトウィジェットを利用したくない場合、Paddleにはインラインでウィジェットを表示するオプションもあります。この方法ではチェックアウトのHTMLフィールドを調整することはできませんが、アプリケーション内にウィジェットを埋め込むことができます。</target>
        </trans-unit>
        <trans-unit id="ef78a7565309d71f90ff34a129eb68fdb8d8a8f8" translate="yes" xml:space="preserve">
          <source>If you execute the &lt;code&gt;config:cache&lt;/code&gt; command during your deployment process, you should be sure that you are only calling the &lt;code&gt;env&lt;/code&gt; function from within your configuration files. Once the configuration has been cached, the &lt;code&gt;.env&lt;/code&gt; file will not be loaded and all calls to the &lt;code&gt;env&lt;/code&gt; function for &lt;code&gt;.env&lt;/code&gt; variables will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">デプロイメントプロセス中に &lt;code&gt;config:cache&lt;/code&gt; コマンドを実行する場合は、構成ファイル内からのみ &lt;code&gt;env&lt;/code&gt; 関数を呼び出していることを確認する必要があります。構成がキャッシュされると、 &lt;code&gt;.env&lt;/code&gt; ファイルはロードされず、 &lt;code&gt;.env&lt;/code&gt; 変数の &lt;code&gt;env&lt;/code&gt; 関数へのすべての呼び出しは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d24b7d13dc209e864f138fccd877c96e48344d54" translate="yes" xml:space="preserve">
          <source>If you execute the &lt;code&gt;config:cache&lt;/code&gt; command during your deployment process, you should be sure that you are only calling the &lt;code&gt;env&lt;/code&gt; function from within your configuration files. Once the configuration has been cached, the &lt;code&gt;.env&lt;/code&gt; file will not be loaded and all calls to the &lt;code&gt;env&lt;/code&gt; function will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">デプロイメントプロセス中に &lt;code&gt;config:cache&lt;/code&gt; コマンドを実行する場合は、構成ファイル内からのみ &lt;code&gt;env&lt;/code&gt; 関数を呼び出していることを確認してください。設定がキャッシュされると、 &lt;code&gt;.env&lt;/code&gt; ファイルはロードされず、 &lt;code&gt;env&lt;/code&gt; 関数へのすべての呼び出しは &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="a26f1b35b2440feea4e37a2775d2763fa4431452" translate="yes" xml:space="preserve">
          <source>If you had test failures the last time you ran the &lt;code&gt;dusk&lt;/code&gt; command, you may save time by re-running the failing tests first using the &lt;code&gt;dusk:fails&lt;/code&gt; command:</source>
          <target state="translated">前回 &lt;code&gt;dusk&lt;/code&gt; コマンドを実行したときにテストが失敗した場合は、まず &lt;code&gt;dusk:fails&lt;/code&gt; コマンドを使用して失敗したテストを再実行することで時間を節約できます。</target>
        </trans-unit>
        <trans-unit id="82f1bb6c59ac25ad4550dcc111e2e9eb6170560e" translate="yes" xml:space="preserve">
          <source>If you have &lt;a href=&quot;https://beyondco.de/docs/expose&quot;&gt;Expose&lt;/a&gt; installed, you can share your site by navigating to the site's directory in your terminal and running the &lt;code&gt;expose&lt;/code&gt; command. Consult the expose documentation for additional command-line parameters it supports. After sharing the site, Expose will display the sharable URL that you may use on your other devices or amongst team members.</source>
          <target state="translated">&lt;a href=&quot;https://beyondco.de/docs/expose&quot;&gt;Exposeが&lt;/a&gt;インストールされている場合は、ターミナルのサイトのディレクトリに移動して、 &lt;code&gt;expose&lt;/code&gt; コマンドを実行することでサイトを共有できます。サポートされている追加のコマンドラインパラメータについては、公開ドキュメントを参照してください。サイトを共有した後、Exposeは、他のデバイスやチームメンバー間で使用できる共有可能なURLを表示します。</target>
        </trans-unit>
        <trans-unit id="296779cd6a70a9de622a60fc64f7c2aa0c2a9a18" translate="yes" xml:space="preserve">
          <source>If you have PHP installed locally and you would like to use PHP's built-in development server to serve your application, you may use the &lt;code&gt;serve&lt;/code&gt; Artisan command. This command will start a development server at &lt;code&gt;http://localhost:8000&lt;/code&gt;:</source>
          <target state="translated">PHPがローカルにインストールされており、PHPの組み込み開発サーバーを使用してアプリケーションを提供する場合は、 &lt;code&gt;serve&lt;/code&gt; Artisanコマンドを使用できます。このコマンドは、 &lt;code&gt;http://localhost:8000&lt;/code&gt; で開発サーバーを起動します。</target>
        </trans-unit>
        <trans-unit id="a00d4528eb2a026f4c0ebfd7967671b6fdc4e36e" translate="yes" xml:space="preserve">
          <source>If you have a response instance and would like to throw an instance of &lt;code&gt;Illuminate\Http\Client\RequestException&lt;/code&gt; if the response is a client or server error, you may use the &lt;code&gt;throw&lt;/code&gt; method:</source>
          <target state="translated">応答インスタンスがあり、応答がクライアントまたはサーバーのエラーである場合に &lt;code&gt;Illuminate\Http\Client\RequestException&lt;/code&gt; インスタンスをスローしたい場合は、 &lt;code&gt;throw&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="01064801beed863de3b7fd1b11d4d594f4422853" translate="yes" xml:space="preserve">
          <source>If you have billable entities that are not users, you may also add the trait to those classes:</source>
          <target state="translated">ユーザーではない請求可能なエンティティがある場合は、それらのクラスに特徴を追加することもできます。</target>
        </trans-unit>
        <trans-unit id="f18022da5dbc86409a668f30d782f0ace6d30578" translate="yes" xml:space="preserve">
          <source>If you have customized the default theme styles used for Markdown mailable templates, you will need to re-publish and make your customizations again. The button color classes have been renamed from 'blue', 'green', and 'red' to 'primary', 'success', and 'error'.</source>
          <target state="translated">Markdownメール可能なテンプレートに使用されるデフォルトのテーマスタイルをカスタマイズした場合、再発行してカスタマイズを行う必要があります。ボタンのカラークラスは、'blue'、'green'、および'red'から'primary'、'success'、および'error'に名前が変更されました。</target>
        </trans-unit>
        <trans-unit id="bded404e6398f81c2be86cd3ace8cb0393e72781" translate="yes" xml:space="preserve">
          <source>If you have defined a many-to-many relationship that uses a custom pivot model, and that pivot model has an auto-incrementing primary key, you should ensure your custom pivot model class defines an &lt;code&gt;incrementing&lt;/code&gt; property that is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">カスタムピボットモデルを使用する多対多の関係を定義し、そのピボットモデルに自動インクリメントの主キーがある場合は、カスタムピボットモデルクラスが &lt;code&gt;true&lt;/code&gt; に設定された &lt;code&gt;incrementing&lt;/code&gt; プロパティを定義していることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="68c4780cd6a359a87c4109b9c50f60c8c2fd649d" translate="yes" xml:space="preserve">
          <source>If you have installed Homestead via your project's &lt;code&gt;composer.json&lt;/code&gt; file, you should ensure your &lt;code&gt;composer.json&lt;/code&gt; file contains &lt;code&gt;&quot;laravel/homestead&quot;: &quot;^11&quot;&lt;/code&gt; and update your dependencies:</source>
          <target state="translated">プロジェクトの &lt;code&gt;composer.json&lt;/code&gt; ファイルを介してHomesteadをインストールした場合は、 &lt;code&gt;composer.json&lt;/code&gt; ファイルに &lt;code&gt;&quot;laravel/homestead&quot;: &quot;^11&quot;&lt;/code&gt; が含まれていることを確認し、依存関係を更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="42912fec1720c79977ea0b1c42d064f503492e1f" translate="yes" xml:space="preserve">
          <source>If you have installed Homestead via your project's &lt;code&gt;composer.json&lt;/code&gt; file, you should ensure your &lt;code&gt;composer.json&lt;/code&gt; file contains &lt;code&gt;&quot;laravel/homestead&quot;: &quot;^7&quot;&lt;/code&gt; and update your dependencies:</source>
          <target state="translated">プロジェクトの &lt;code&gt;composer.json&lt;/code&gt; ファイルを介してHomesteadをインストールした場合は、 &lt;code&gt;composer.json&lt;/code&gt; ファイルに &lt;code&gt;&quot;laravel/homestead&quot;: &quot;^7&quot;&lt;/code&gt; が含まれていることを確認し、依存関係を更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="9ec618824676d4b29771e6829ad401e26f797a14" translate="yes" xml:space="preserve">
          <source>If you have mailable classes that you want to always be queued, you may implement the &lt;code&gt;ShouldQueue&lt;/code&gt; contract on the class. Now, even if you call the &lt;code&gt;send&lt;/code&gt; method when mailing, the mailable will still be queued since it implements the contract:</source>
          <target state="translated">常にキューに入れたいメール可能なクラスがある場合は、クラスに &lt;code&gt;ShouldQueue&lt;/code&gt; コントラクトを実装できます。これで、メール &lt;code&gt;send&lt;/code&gt; 時にsendメソッドを呼び出した場合でも、メール実装はコントラクトを実装しているため、引き続きキューに入れられます。</target>
        </trans-unit>
        <trans-unit id="6578a52dd97e7b3214c65ce2895b3eb7d9ef0da4" translate="yes" xml:space="preserve">
          <source>If you have multiple forms on a single page, you may wish to name the &lt;code&gt;MessageBag&lt;/code&gt; of errors, allowing you to retrieve the error messages for a specific form. Pass a name as the second argument to &lt;code&gt;withErrors&lt;/code&gt;:</source>
          <target state="translated">1つのページに複数のフォームがある場合、エラーの &lt;code&gt;MessageBag&lt;/code&gt; に名前を付けると、特定のフォームのエラーメッセージを取得できます。 &lt;code&gt;withErrors&lt;/code&gt; の2番目の引数として名前を渡します。</target>
        </trans-unit>
        <trans-unit id="d3637d6970ac00e9785bf5dc54be52236f05c255" translate="yes" xml:space="preserve">
          <source>If you have not read the &lt;a href=&quot;#concept-overview&quot;&gt;concept overview&lt;/a&gt;, you are highly encouraged to do so before proceeding with this documentation.</source>
          <target state="translated">&lt;a href=&quot;#concept-overview&quot;&gt;概念の概要を&lt;/a&gt;読んでいない場合は、このドキュメントを読む前に読むことを強くお勧めします。</target>
        </trans-unit>
        <trans-unit id="0ab77b2b41673e74e1a7e92dec40c8fd0b43e70d" translate="yes" xml:space="preserve">
          <source>If you have not run &lt;code&gt;valet secure&lt;/code&gt; on the project, you can open up network access for all non-HTTPS sites by editing the &lt;code&gt;/usr/local/etc/nginx/valet/valet.conf&lt;/code&gt; file. However, if you're serving the project site over HTTPS (you have run &lt;code&gt;valet secure&lt;/code&gt; for the site) then you should edit the &lt;code&gt;~/.config/valet/Nginx/app-name.test&lt;/code&gt; file.</source>
          <target state="translated">プロジェクトで &lt;code&gt;valet secure&lt;/code&gt; 実行していない場合は、/ &lt;code&gt;/usr/local/etc/nginx/valet/valet.conf&lt;/code&gt; valet / valet.confファイルを編集して、HTTPS以外のすべてのサイトのネットワークアクセスを開くことができます。ただし、HTTPSを介してプロジェクトサイトにサービスを提供している場合（サイトに対して &lt;code&gt;valet secure&lt;/code&gt; を実行している場合）、 &lt;code&gt;~/.config/valet/Nginx/app-name.test&lt;/code&gt; ファイルを編集する必要があります。</target>
        </trans-unit>
        <trans-unit id="b68b4227ae6146f9f64d3f0598acdb9d0d770bbd" translate="yes" xml:space="preserve">
          <source>If you have stored a file on one of your &lt;a href=&quot;filesystem&quot;&gt;filesystem disks&lt;/a&gt;, you may attach it to the email using the &lt;code&gt;attachFromStorage&lt;/code&gt; method:</source>
          <target state="translated">&lt;a href=&quot;filesystem&quot;&gt;ファイルシステムディスクの&lt;/a&gt;1つにファイルを保存している場合は、 &lt;code&gt;attachFromStorage&lt;/code&gt; メソッドを使用してファイルを電子メールに添付できます。</target>
        </trans-unit>
        <trans-unit id="20a5f14ed16884104f171f402f4d54a15d3d9fd7" translate="yes" xml:space="preserve">
          <source>If you have used a JavaScript framework such as Vue, you may be familiar with &quot;scoped slots&quot;, which allow you to access data or methods from the component within your slot. You may achieve similar behavior in Laravel by defining public methods or properties on your component and accessing the component within your slot via the &lt;code&gt;$component&lt;/code&gt; variable:</source>
          <target state="translated">VueなどのJavaScriptフレームワークを使用したことがある場合は、スロット内のコンポーネントからデータまたはメソッドにアクセスできる「スコープスロット」に精通している可能性があります。コンポーネントにパブリックメソッドまたはプロパティを定義し、 &lt;code&gt;$component&lt;/code&gt; 変数を介してスロット内のコンポーネントにアクセスすることで、Laravelで同様の動作を実現できます。</target>
        </trans-unit>
        <trans-unit id="775281108018c1f5ad0dc7f197e68c7305b03266" translate="yes" xml:space="preserve">
          <source>If you intend to make frequent updates to your application's JavaScript, you should consider extracting all of your vendor libraries into their own file. This way, a change to your application code will not affect the caching of your large &lt;code&gt;vendor.js&lt;/code&gt; file. Mix's &lt;code&gt;extract&lt;/code&gt; method makes this a breeze:</source>
          <target state="translated">アプリケーションのJavaScriptを頻繁に更新する場合は、すべてのベンダーライブラリを独自のファイルに抽出することを検討してください。このように、アプリケーションコードを変更しても、大きな &lt;code&gt;vendor.js&lt;/code&gt; ファイルのキャッシュには影響しません。Mixの &lt;code&gt;extract&lt;/code&gt; メソッドはこれを簡単にします：</target>
        </trans-unit>
        <trans-unit id="027043c94375af4aca61fd77ed0777206e531666" translate="yes" xml:space="preserve">
          <source>If you just need to retrieve a single row from the database table, you may use the &lt;code&gt;first&lt;/code&gt; method. This method will return a single &lt;code&gt;stdClass&lt;/code&gt; object:</source>
          <target state="translated">データベーステーブルから単一の行を取得するだけの場合は、 &lt;code&gt;first&lt;/code&gt; 方法を使用できます。このメソッドは、単一の &lt;code&gt;stdClass&lt;/code&gt; オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="ad054b0b9d44d975bf491052f5f10538c3afbdb9" translate="yes" xml:space="preserve">
          <source>If you need a database, try MySQL by running &lt;code&gt;brew install mysql@5.7&lt;/code&gt; on your command line. Once MySQL has been installed, you may start it using the &lt;code&gt;brew services start mysql@5.7&lt;/code&gt; command. You can then connect to the database at &lt;code&gt;127.0.0.1&lt;/code&gt; using the &lt;code&gt;root&lt;/code&gt; username and an empty string for the password.</source>
          <target state="translated">データベースが必要な場合は、コマンドラインで &lt;code&gt;brew install mysql@5.7&lt;/code&gt; を実行してMySQLを試してください。MySQLがインストールされたら、 &lt;code&gt;brew services start mysql@5.7&lt;/code&gt; コマンドを使用して開始できます。次に、 &lt;code&gt;root&lt;/code&gt; ユーザー名とパスワードに空の文字列を使用して、 &lt;code&gt;127.0.0.1&lt;/code&gt; でデータベースに接続できます。</target>
        </trans-unit>
        <trans-unit id="9beb2537969ff13774f9093eccd093cdb3499fa5" translate="yes" xml:space="preserve">
          <source>If you need control over the response's status and headers but also need to return a &lt;a href=&quot;views&quot;&gt;view&lt;/a&gt; as the response's content, you should use the &lt;code&gt;view&lt;/code&gt; method:</source>
          <target state="translated">レスポンスのステータスとヘッダーを制御する必要があるが、レスポンスのコンテンツとして&lt;a href=&quot;views&quot;&gt;ビュー&lt;/a&gt;を返す必要がある場合は、 &lt;code&gt;view&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="53c0ffd72a03df747ac90f05f17f0f567445f7c4" translate="yes" xml:space="preserve">
          <source>If you need even more power, you may use the &lt;code&gt;whereDoesntHave&lt;/code&gt; and &lt;code&gt;orWhereDoesntHave&lt;/code&gt; methods to put &quot;where&quot; conditions on your &lt;code&gt;doesntHave&lt;/code&gt; queries. These methods allow you to add customized constraints to a relationship constraint, such as checking the content of a comment:</source>
          <target state="translated">あなたも、より多くの電力を必要とする場合は、使用すること &lt;code&gt;whereDoesntHave&lt;/code&gt; と &lt;code&gt;orWhereDoesntHave&lt;/code&gt; あなたの「場所」の状態に置くためのメソッドを &lt;code&gt;doesntHave&lt;/code&gt; のクエリ。これらのメソッドを使用すると、コメントの内容を確認するなど、カスタマイズされた制約を関係制約に追加できます。</target>
        </trans-unit>
        <trans-unit id="a170eb44158091d97790d0c704630a4f3f4497ef" translate="yes" xml:space="preserve">
          <source>If you need even more power, you may use the &lt;code&gt;whereDoesntHave&lt;/code&gt; and &lt;code&gt;orWhereDoesntHave&lt;/code&gt; methods to put &quot;where&quot; conditions on your &lt;code&gt;doesntHave&lt;/code&gt; queries. These methods allows you to add customized constraints to a relationship constraint, such as checking the content of a comment:</source>
          <target state="translated">あなたも、より多くの電力を必要とする場合は、使用すること &lt;code&gt;whereDoesntHave&lt;/code&gt; と &lt;code&gt;orWhereDoesntHave&lt;/code&gt; あなたの「場所」の状態に置くためのメソッドを &lt;code&gt;doesntHave&lt;/code&gt; のクエリ。これらのメソッドを使用すると、コメントの内容のチェックなど、関係制約にカスタマイズされた制約を追加できます。</target>
        </trans-unit>
        <trans-unit id="7aa87accc3f854a35993769602b7ba4413349d0c" translate="yes" xml:space="preserve">
          <source>If you need even more power, you may use the &lt;code&gt;whereHas&lt;/code&gt; and &lt;code&gt;orWhereHas&lt;/code&gt; methods to put &quot;where&quot; conditions on your &lt;code&gt;has&lt;/code&gt; queries. These methods allow you to add customized constraints to a relationship constraint, such as checking the content of a comment:</source>
          <target state="translated">あなたも、より多くの電力を必要とする場合は、使用すること &lt;code&gt;whereHas&lt;/code&gt; と &lt;code&gt;orWhereHas&lt;/code&gt; あなたの「場所」の条件を置くためのメソッドを &lt;code&gt;has&lt;/code&gt; クエリ。これらのメソッドを使用すると、コメントの内容の確認など、カスタマイズされた制約を関係制約に追加できます。</target>
        </trans-unit>
        <trans-unit id="01a37dab2354e2eda9f80d9b487a1293fbb9b854" translate="yes" xml:space="preserve">
          <source>If you need to add additional routes to a resource controller beyond the default set of resource routes, you should define those routes before your call to &lt;code&gt;Route::resource&lt;/code&gt;; otherwise, the routes defined by the &lt;code&gt;resource&lt;/code&gt; method may unintentionally take precedence over your supplemental routes:</source>
          <target state="translated">リソースルートのデフォルトのセットを超えてリソースコントローラにルートを追加する必要がある場合は、 &lt;code&gt;Route::resource&lt;/code&gt; 呼び出す前にそれらのルートを定義する必要があります。そうしないと、 &lt;code&gt;resource&lt;/code&gt; メソッドによって定義されたルートが、補足ルートよりも意図せず優先される可能性があります。</target>
        </trans-unit>
        <trans-unit id="154265239b970b05b61297c1b574b87443e72a8d" translate="yes" xml:space="preserve">
          <source>If you need to ask the user for a simple confirmation, you may use the &lt;code&gt;confirm&lt;/code&gt; method. By default, this method will return &lt;code&gt;false&lt;/code&gt;. However, if the user enters &lt;code&gt;y&lt;/code&gt; or &lt;code&gt;yes&lt;/code&gt; in response to the prompt, the method will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">ユーザーに簡単な確認を求める必要がある場合は、 &lt;code&gt;confirm&lt;/code&gt; メソッドを使用できます。デフォルトでは、このメソッドは &lt;code&gt;false&lt;/code&gt; を返します。ただし、ユーザーがプロンプトに対して &lt;code&gt;y&lt;/code&gt; または &lt;code&gt;yes&lt;/code&gt; と入力した場合、メソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="b688489eac9d6ec6bc85d73ee513ba21579240d4" translate="yes" xml:space="preserve">
          <source>If you need to customize the format of your timestamps, set the &lt;code&gt;$dateFormat&lt;/code&gt; property on your model. This property determines how date attributes are stored in the database, as well as their format when the model is serialized to an array or JSON:</source>
          <target state="translated">タイムスタンプの形式をカスタマイズする必要がある場合は、モデルに &lt;code&gt;$dateFormat&lt;/code&gt; プロパティを設定します。このプロパティは、日付属性がデータベースに格納される方法と、モデルが配列またはJSONにシリアル化されるときの形式を決定します。</target>
        </trans-unit>
        <trans-unit id="e31840cfaa7504cc9276faf0d8d057675f42258a" translate="yes" xml:space="preserve">
          <source>If you need to customize the names of the columns used to store the timestamps, you may set the &lt;code&gt;CREATED_AT&lt;/code&gt; and &lt;code&gt;UPDATED_AT&lt;/code&gt; constants in your model:</source>
          <target state="translated">タイムスタンプの保存に使用される列の名前をカスタマイズする必要がある場合は、モデルに &lt;code&gt;CREATED_AT&lt;/code&gt; および &lt;code&gt;UPDATED_AT&lt;/code&gt; 定数を設定できます。</target>
        </trans-unit>
        <trans-unit id="889b57289332361705d2728fcb219ed27102cf59" translate="yes" xml:space="preserve">
          <source>If you need to customize the search behavior of an engine you may pass a callback as the second argument to the &lt;code&gt;search&lt;/code&gt; method. For example, you could use this callback to add geo-location data to your search options before the search query is passed to Algolia:</source>
          <target state="translated">エンジンの検索動作をカスタマイズする必要がある場合は、 &lt;code&gt;search&lt;/code&gt; メソッドの2番目の引数としてコールバックを渡すことができます。たとえば、このコールバックを使用して、検索クエリがAlgoliaに渡される前に、地理的位置データを検索オプションに追加できます。</target>
        </trans-unit>
        <trans-unit id="cc7c9b091c16bf09219560e3b006c98f0d5fe674" translate="yes" xml:space="preserve">
          <source>If you need to define an environment variable with a value that contains spaces, you may do so by enclosing the value in double quotes.</source>
          <target state="translated">スペースを含む値を持つ環境変数を定義する必要がある場合は、二重引用符で囲むことで定義することができます。</target>
        </trans-unit>
        <trans-unit id="eb7a2b72de2d59f00196275a01377de63e2b66d5" translate="yes" xml:space="preserve">
          <source>If you need to define attributes that should be set on the pivot / intermediate table linking the models, you may use the &lt;code&gt;hasAttached&lt;/code&gt; method. This method accepts an array of pivot table attribute names and values as its second argument:</source>
          <target state="translated">モデルをリンクするピボット/中間テーブルに設定する必要のある属性を定義する必要がある場合は、 &lt;code&gt;hasAttached&lt;/code&gt; メソッドを使用できます。このメソッドは、ピボットテーブルの属性名と値の配列を2番目の引数として受け入れます。</target>
        </trans-unit>
        <trans-unit id="5e3a26c189cd354a86ae2a8e6a71e400f0e51894" translate="yes" xml:space="preserve">
          <source>If you need to determine if a view exists, you may use the &lt;code&gt;View&lt;/code&gt; facade. The &lt;code&gt;exists&lt;/code&gt; method will return &lt;code&gt;true&lt;/code&gt; if the view exists:</source>
          <target state="translated">ビューが存在するかどうかを判断する必要がある場合は、 &lt;code&gt;View&lt;/code&gt; ファサードを使用できます。 &lt;code&gt;exists&lt;/code&gt; メソッドが返す &lt;code&gt;true&lt;/code&gt; ビューが存在する場合：</target>
        </trans-unit>
        <trans-unit id="c3aad5fa09505341b2203749ab485e7ebf782732" translate="yes" xml:space="preserve">
          <source>If you need to give the user a predefined set of choices, you may use the &lt;code&gt;choice&lt;/code&gt; method. You may set the array index of the default value to be returned if no option is chosen:</source>
          <target state="translated">ユーザーに定義済みの選択肢のセットを提供する必要がある場合は、 &lt;code&gt;choice&lt;/code&gt; メソッドを使用できます。オプションが選択されていない場合に返されるデフォルト値の配列インデックスを設定できます。</target>
        </trans-unit>
        <trans-unit id="dfcd781000ece1abfa37d84f13cddee376a5dc65" translate="yes" xml:space="preserve">
          <source>If you need to group an &quot;or&quot; condition within parentheses, you may pass a Closure as the first argument to the &lt;code&gt;orWhere&lt;/code&gt; method:</source>
          <target state="translated">括弧内に「or」条件をグループ化する必要がある場合は、 &lt;code&gt;orWhere&lt;/code&gt; メソッドの最初の引数としてClosureを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="8baf1dbf913a6dee50d3774c70e13d9455ae18b2" translate="yes" xml:space="preserve">
          <source>If you need to include &lt;a href=&quot;https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-email-2010-12-01.html#sendrawemail&quot;&gt;additional options&lt;/a&gt; when executing the SES &lt;code&gt;SendRawEmail&lt;/code&gt; request, you may define an &lt;code&gt;options&lt;/code&gt; array within your &lt;code&gt;ses&lt;/code&gt; configuration:</source>
          <target state="translated">SES &lt;code&gt;SendRawEmail&lt;/code&gt; リクエストを実行するときに&lt;a href=&quot;https://docs.aws.amazon.com/aws-sdk-php/v3/api/api-email-2010-12-01.html#sendrawemail&quot;&gt;追加のオプション&lt;/a&gt;を含める必要がある場合は、 &lt;code&gt;ses&lt;/code&gt; 構成内で &lt;code&gt;options&lt;/code&gt; 配列を定義できます。</target>
        </trans-unit>
        <trans-unit id="60df8347bb2f65e7b1fa5fd61df613a1a57f8678" translate="yes" xml:space="preserve">
          <source>If you need to keep your flash data around for several requests, you may use the &lt;code&gt;reflash&lt;/code&gt; method, which will keep all of the flash data for an additional request. If you only need to keep specific flash data, you may use the &lt;code&gt;keep&lt;/code&gt; method:</source>
          <target state="translated">複数のリクエストでフラッシュデータを保持する必要がある場合は、 &lt;code&gt;reflash&lt;/code&gt; メソッドを使用できます。これにより、追加のリクエストですべてのフラッシュデータが保持されます。特定のフラッシュデータのみを保持する必要がある場合は、 &lt;code&gt;keep&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="fcd2cd9e721c39e16f1f718db91a950db05a628e" translate="yes" xml:space="preserve">
          <source>If you need to log an existing user instance into your application, you may call the &lt;code&gt;login&lt;/code&gt; method with the user instance. The given object must be an implementation of the &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt;&lt;a href=&quot;contracts&quot;&gt;contract&lt;/a&gt;. Of course, the &lt;code&gt;App\User&lt;/code&gt; model included with Laravel already implements this interface:</source>
          <target state="translated">既存のユーザーインスタンスをアプリケーションに &lt;code&gt;login&lt;/code&gt; する必要がある場合は、ユーザーインスタンスを使用してloginメソッドを呼び出すことができます。指定されたオブジェクトは、の実装でなければなりません &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt; &lt;a href=&quot;contracts&quot;&gt;契約&lt;/a&gt;。もちろん、Laravelに含まれている &lt;code&gt;App\User&lt;/code&gt; モデルはすでにこのインターフェースを実装しています。</target>
        </trans-unit>
        <trans-unit id="2958a7d932003b99759e6222b9e209b0e44dc2bb" translate="yes" xml:space="preserve">
          <source>If you need to log an existing user instance into your application, you may call the &lt;code&gt;login&lt;/code&gt; method with the user instance. The given object must be an implementation of the &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt;&lt;a href=&quot;contracts&quot;&gt;contract&lt;/a&gt;. The &lt;code&gt;App\Models\User&lt;/code&gt; model included with Laravel already implements this interface. This method of authentication is useful when you already have a valid user instance, such as directly after a user registers with your application:</source>
          <target state="translated">既存のユーザーインスタンスをアプリケーションに &lt;code&gt;login&lt;/code&gt; する必要がある場合は、ユーザーインスタンスを使用してloginメソッドを呼び出すことができます。指定されたオブジェクトは、の実装でなければなりません &lt;code&gt;Illuminate\Contracts\Auth\Authenticatable&lt;/code&gt; &lt;a href=&quot;contracts&quot;&gt;契約&lt;/a&gt;。 &lt;code&gt;App\Models\User&lt;/code&gt; Laravelに含まれているモデルは、すでにこのインタフェースを実装しています。この認証方法は、ユーザーがアプリケーションに登録した直後など、すでに有効なユーザーインスタンスがある場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="d4c082a554ba587832a01d8549a3b3f14dea41d9" translate="yes" xml:space="preserve">
          <source>If you need to make assertions after a page has been reloaded, use the &lt;code&gt;waitForReload&lt;/code&gt; method:</source>
          <target state="translated">ページがリロードされた後にアサーションを作成する必要がある場合は、 &lt;code&gt;waitForReload&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="14833c146efe36097116d558c4f3c033212ca4ae" translate="yes" xml:space="preserve">
          <source>If you need to manually access the listener's underlying queue job's &lt;code&gt;delete&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt; methods, you may do so using the &lt;code&gt;Illuminate\Queue\InteractsWithQueue&lt;/code&gt; trait. This trait is imported by default on generated listeners and provides access to these methods:</source>
          <target state="translated">リスナーの基になるキュージョブの &lt;code&gt;delete&lt;/code&gt; および &lt;code&gt;release&lt;/code&gt; メソッドに手動でアクセスする必要がある場合は、 &lt;code&gt;Illuminate\Queue\InteractsWithQueue&lt;/code&gt; トレイトを使用してアクセスできます。このトレイトは、生成されたリスナーにデフォルトでインポートされ、これらのメソッドへのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="fecf1d46609f471ed523c543a0dca2811dce4ef5" translate="yes" xml:space="preserve">
          <source>If you need to override the &lt;a href=&quot;https://github.com/webpack-contrib/less-loader#options&quot;&gt;underlying Less plug-in options&lt;/a&gt;, you may pass an object as the third argument to &lt;code&gt;mix.less()&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webpack-contrib/less-loader#options&quot;&gt;基になるLessプラグインオプション&lt;/a&gt;をオーバーライドする必要がある場合は、オブジェクトを3番目の引数として &lt;code&gt;mix.less()&lt;/code&gt; に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="c42d1c046711540d6113468c9750b1b2c0c89949" translate="yes" xml:space="preserve">
          <source>If you need to overwrite the migrations that ship with the Cashier package, you can publish them using the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command:</source>
          <target state="translated">Cashierパッケージに同梱されている移行を上書きする必要がある場合は、 &lt;code&gt;vendor:publish&lt;/code&gt; publishArtisanコマンドを使用してそれらを公開できます。</target>
        </trans-unit>
        <trans-unit id="dccfbab7558899180b1b6d5626926106f85d760e" translate="yes" xml:space="preserve">
          <source>If you need to pause the test for a given number of milliseconds, use the &lt;code&gt;pause&lt;/code&gt; method:</source>
          <target state="translated">指定したミリ秒数の間テストを一時停止する必要がある場合は、 &lt;code&gt;pause&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="88a03025c7607c3c0ba68fd91638d8780fadaf89" translate="yes" xml:space="preserve">
          <source>If you need to process thousands of Eloquent records, use the &lt;code&gt;chunk&lt;/code&gt; command. The &lt;code&gt;chunk&lt;/code&gt; method will retrieve a &quot;chunk&quot; of Eloquent models, feeding them to a given &lt;code&gt;Closure&lt;/code&gt; for processing. Using the &lt;code&gt;chunk&lt;/code&gt; method will conserve memory when working with large result sets:</source>
          <target state="translated">何千ものEloquentレコードを処理する必要がある場合は、 &lt;code&gt;chunk&lt;/code&gt; コマンドを使用します。 &lt;code&gt;chunk&lt;/code&gt; メソッドは、指定されたそれらを供給し、雄弁モデルの「チャンク」を取得します &lt;code&gt;Closure&lt;/code&gt; 処理のために。 &lt;code&gt;chunk&lt;/code&gt; メソッドを使用すると、大きな結果セットを処理するときにメモリを節約できます。</target>
        </trans-unit>
        <trans-unit id="9953d9627f9bee95a5fe631565f08c50af1e482e" translate="yes" xml:space="preserve">
          <source>If you need to refund a Paddle order, you may use the &lt;code&gt;refund&lt;/code&gt; method. This method accepts the Paddle Order ID as its first argument. You may retrieve receipts for a given billable entity using the &lt;code&gt;receipts&lt;/code&gt; method:</source>
          <target state="translated">パドルの注文を返金する必要がある場合は、 &lt;code&gt;refund&lt;/code&gt; 方法を使用できます。このメソッドは、最初の引数としてPaddle OrderIDを受け入れます。 &lt;code&gt;receipts&lt;/code&gt; 方法を使用して、特定の請求可能なエンティティの領収書を取得できます。</target>
        </trans-unit>
        <trans-unit id="2e6083d454836ea01c7e647b950714cf0bb97ea6" translate="yes" xml:space="preserve">
          <source>If you need to refund a Stripe charge, you may use the &lt;code&gt;refund&lt;/code&gt; method. This method accepts the Stripe Payment Intent ID as its first argument:</source>
          <target state="translated">Stripeの料金を返金する必要がある場合は、 &lt;code&gt;refund&lt;/code&gt; 方法を使用できます。このメソッドは、最初の引数としてStripe Payment IntentIDを受け入れます。</target>
        </trans-unit>
        <trans-unit id="b97670a4c55881eaf81fdeafc2995f02453b3932" translate="yes" xml:space="preserve">
          <source>If you need to require other PHP files before your task is executed, you may use the &lt;code&gt;@include&lt;/code&gt; directive at the top of your &lt;code&gt;Envoy.blade.php&lt;/code&gt; file:</source>
          <target state="translated">タスクを実行する前に他のPHPファイルを要求する必要がある場合は、 &lt;code&gt;Envoy.blade.php&lt;/code&gt; ファイルの上部にある &lt;code&gt;@include&lt;/code&gt; ディレクティブを使用できます。</target>
        </trans-unit>
        <trans-unit id="60f37922082bad8ac67af32827b69ceddf985aa0" translate="yes" xml:space="preserve">
          <source>If you need to retrieve a subset of the input data, you may use the &lt;code&gt;only&lt;/code&gt; and &lt;code&gt;except&lt;/code&gt; methods. Both of these methods accept a single &lt;code&gt;array&lt;/code&gt; or a dynamic list of arguments:</source>
          <target state="translated">入力データのサブセットを取得する必要がある場合は、 &lt;code&gt;only&lt;/code&gt; および &lt;code&gt;except&lt;/code&gt; メソッドを使用できます。これらのメソッドはどちらも、単一の &lt;code&gt;array&lt;/code&gt; または引数の動的リストを受け入れます。</target>
        </trans-unit>
        <trans-unit id="f88beb41686ea507995354617134b74845322b0c" translate="yes" xml:space="preserve">
          <source>If you need to retrieve all of the arguments as an &lt;code&gt;array&lt;/code&gt;, call the &lt;code&gt;arguments&lt;/code&gt; method:</source>
          <target state="translated">すべての引数を &lt;code&gt;array&lt;/code&gt; として取得する必要がある場合は、 &lt;code&gt;arguments&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="0cdeb02590860b9ea1d18e8395018348b23129bb" translate="yes" xml:space="preserve">
          <source>If you need to retrieve an array of all the messages for a given field, use the &lt;code&gt;get&lt;/code&gt; method:</source>
          <target state="translated">特定のフィールドのすべてのメッセージの配列を取得する必要がある場合は、 &lt;code&gt;get&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="12a0005b5cefaf71d1d2b9a45dcb2df4ec6ebe8e" translate="yes" xml:space="preserve">
          <source>If you need to retrieve an item from the cache and then delete the item, you may use the &lt;code&gt;pull&lt;/code&gt; method. Like the &lt;code&gt;get&lt;/code&gt; method, &lt;code&gt;null&lt;/code&gt; will be returned if the item does not exist in the cache:</source>
          <target state="translated">キャッシュからアイテムを取得してから削除する必要がある場合は、 &lt;code&gt;pull&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;get&lt;/code&gt; メソッドと同様に、アイテムがキャッシュに存在しない場合は &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="084bc16473a040060e6d61fab38e3344f4df7bcd" translate="yes" xml:space="preserve">
          <source>If you need to sanitize any data from the request before you apply your validation rules, you can use the &lt;code&gt;prepareForValidation&lt;/code&gt; method:</source>
          <target state="translated">検証ルールを適用する前にリクエストのデータをサニタイズする必要がある場合は、 &lt;code&gt;prepareForValidation&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="110d967f5dc97298c96e23ead245165ffe37b093" translate="yes" xml:space="preserve">
          <source>If you need to save multiple related models, you may use the &lt;code&gt;saveMany&lt;/code&gt; method:</source>
          <target state="translated">複数の関連モデルを保存する必要がある場合は、 &lt;code&gt;saveMany&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="b4b6cebfd1ef2077dafb908e676264edbc6eaa03" translate="yes" xml:space="preserve">
          <source>If you need to set additional query constraints on the eager loading query, you may pass an array keyed by the relationships you wish to load. The array values should be &lt;code&gt;Closure&lt;/code&gt; instances which receive the query builder instance:</source>
          <target state="translated">積極的な読み込みクエリに追加のクエリ制約を設定する必要がある場合は、読み込みたい関係によってキー設定された配列を渡すことができます。配列値は、クエリビルダーインスタンスを受け取る &lt;code&gt;Closure&lt;/code&gt; インスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="67931664d2fbd5ae4c4e98cafa5ae90f0d0b7193" translate="yes" xml:space="preserve">
          <source>If you need to set additional query constraints on the eager loading query, you may pass an array keyed by the relationships you wish to load. The array values should be &lt;code&gt;Closure&lt;/code&gt; instances which receive the query instance:</source>
          <target state="translated">積極的にロードするクエリに追加のクエリ制約を設定する必要がある場合は、ロードするリレーションシップをキーとした配列を渡すことができます。配列の値は、クエリインスタンスを受け取る &lt;code&gt;Closure&lt;/code&gt; インスタンスである必要があります。</target>
        </trans-unit>
        <trans-unit id="322063742317f7a17ae1d8ef12382e695dd3d302" translate="yes" xml:space="preserve">
          <source>If you need to sort a collection of nested arrays or objects, see the &lt;a href=&quot;#method-sortby&quot;&gt;&lt;code&gt;sortBy&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#method-sortbydesc&quot;&gt;&lt;code&gt;sortByDesc&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">ネストされた配列またはオブジェクトのコレクションをソートする必要がある場合は、&lt;a href=&quot;#method-sortby&quot;&gt; &lt;code&gt;sortBy&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;#method-sortbydesc&quot;&gt; &lt;code&gt;sortByDesc&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="41231ca2087ff7342f17ee8522e87ebb2d7de4b7" translate="yes" xml:space="preserve">
          <source>If you need to sort by multiple columns, you may invoke &lt;code&gt;orderBy&lt;/code&gt; as many times as needed:</source>
          <target state="translated">複数の列で並べ替える必要がある場合は、 &lt;code&gt;orderBy&lt;/code&gt; を必要な回数だけ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="144f837a776aa329fd919ece89d3d3c4368135ca" translate="yes" xml:space="preserve">
          <source>If you need to specify additional &lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectGET.html#RESTObjectGET-requests&quot;&gt;S3 request parameters&lt;/a&gt;, you may pass the array of request parameters as the third argument to the &lt;code&gt;temporaryUrl&lt;/code&gt; method:</source>
          <target state="translated">追加の&lt;a href=&quot;https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectGET.html#RESTObjectGET-requests&quot;&gt;S3リクエストパラメーター&lt;/a&gt;を指定する必要がある場合は、リクエストパラメーターの配列を3番目の引数として &lt;code&gt;temporaryUrl&lt;/code&gt; メソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="07823b04bc4d80fd8cf08afe4d38ffa87f22f7a5" translate="yes" xml:space="preserve">
          <source>If you need to specify the value of an option that does not accept string values, such as the &lt;code&gt;--force&lt;/code&gt; flag on the &lt;code&gt;migrate:refresh&lt;/code&gt; command, you should pass &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;migrate:refresh&lt;/code&gt; コマンドの &lt;code&gt;--force&lt;/code&gt; フラグなど、文字列値を受け入れないオプションの値を指定する必要がある場合は、 &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; を渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="2bbdf2c0fa36be7737d172825c93eed8d08654f8" translate="yes" xml:space="preserve">
          <source>If you need to update an existing row in your pivot table, you may use &lt;code&gt;updateExistingPivot&lt;/code&gt; method. This method accepts the pivot record foreign key and an array of attributes to update:</source>
          <target state="translated">ピボットテーブルの既存の行を更新する必要がある場合は、 &lt;code&gt;updateExistingPivot&lt;/code&gt; メソッドを使用できます。このメソッドは、ピボットレコードの外部キーと更新する属性の配列を受け入れます。</target>
        </trans-unit>
        <trans-unit id="3fd95bb0c779c127490efbfa20778e3c282ae17c" translate="yes" xml:space="preserve">
          <source>If you need to use a custom &lt;code&gt;Collection&lt;/code&gt; object with your own extension methods, you may override the &lt;code&gt;newCollection&lt;/code&gt; method on your model:</source>
          <target state="translated">独自の拡張メソッドでカスタム &lt;code&gt;Collection&lt;/code&gt; オブジェクトを使用する必要がある場合は、モデルの &lt;code&gt;newCollection&lt;/code&gt; メソッドをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="a5c56d419b5f9e90bed94c0d7d35d82d48175003" translate="yes" xml:space="preserve">
          <source>If you need to work with thousands of database records, consider using the &lt;code&gt;chunk&lt;/code&gt; method. This method retrieves a small chunk of the results at a time and feeds each chunk into a &lt;code&gt;Closure&lt;/code&gt; for processing. This method is very useful for writing &lt;a href=&quot;artisan&quot;&gt;Artisan commands&lt;/a&gt; that process thousands of records. For example, let's work with the entire &lt;code&gt;users&lt;/code&gt; table in chunks of 100 records at a time:</source>
          <target state="translated">何千ものデータベースレコードを処理する必要がある場合は、 &lt;code&gt;chunk&lt;/code&gt; メソッドの使用を検討してください。このメソッドは、結果の小さなチャンクを一度に取得し、各チャンクを &lt;code&gt;Closure&lt;/code&gt; て処理します。この方法は、数千のレコードを処理する&lt;a href=&quot;artisan&quot;&gt;Artisanコマンド&lt;/a&gt;を作成する場合に非常に役立ちます。たとえば、一度に100レコードのチャンクで &lt;code&gt;users&lt;/code&gt; テーブル全体を操作してみましょう。</target>
        </trans-unit>
        <trans-unit id="54fba411f0c190916b069a5095542f25b8daa442" translate="yes" xml:space="preserve">
          <source>If you only need the functionality of a custom rule once throughout your application, you may use a Closure instead of a rule object. The Closure receives the attribute's name, the attribute's value, and a &lt;code&gt;$fail&lt;/code&gt; callback that should be called if validation fails:</source>
          <target state="translated">アプリケーション全体でカスタムルールの機能が1度だけ必要な場合は、ルールオブジェクトの代わりにクロージャーを使用できます。クロージャーは、属性の名前、属性の値、および検証が失敗した場合に呼び出される &lt;code&gt;$fail&lt;/code&gt; コールバックを受け取ります。</target>
        </trans-unit>
        <trans-unit id="f242c8847dc1d3e0218bd99b2f462672732d6470" translate="yes" xml:space="preserve">
          <source>If you only need to display simple &quot;Next&quot; and &quot;Previous&quot; links in your pagination view, you may use the &lt;code&gt;simplePaginate&lt;/code&gt; method to perform a more efficient query. This is very useful for large datasets when you do not need to display a link for each page number when rendering your view:</source>
          <target state="translated">ページ付けビューに単純な「次へ」および「前へ」リンクのみを表示する必要がある場合は、 &lt;code&gt;simplePaginate&lt;/code&gt; メソッドを使用してより効率的なクエリを実行できます。これは、ビューをレンダリングするときに各ページ番号のリンクを表示する必要がない大規模なデータセットで非常に役立ちます。</target>
        </trans-unit>
        <trans-unit id="4ffb71550d9a1aef717b061877be249e5d7afb47" translate="yes" xml:space="preserve">
          <source>If you only want to e-mail the output if the command fails, use the &lt;code&gt;emailOutputOnFailure&lt;/code&gt; method:</source>
          <target state="translated">コマンドが失敗した場合にのみ出力を電子メールで送信する場合は、 &lt;code&gt;emailOutputOnFailure&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="8db27fd263fab1ab8bdba5c377000ac95da4eb42" translate="yes" xml:space="preserve">
          <source>If you only want to fake event listeners for a portion of your test, you may use the &lt;code&gt;fakeFor&lt;/code&gt; method:</source>
          <target state="translated">テストの一部のイベントリスナーのみを偽造したい場合は、 &lt;code&gt;fakeFor&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="ba7706485e97a07a3494acbf086133290fe0b4e8" translate="yes" xml:space="preserve">
          <source>If you only want to fake event listeners for a specific set of events, you may pass them to the &lt;code&gt;fake&lt;/code&gt; or &lt;code&gt;fakeFor&lt;/code&gt; method:</source>
          <target state="translated">特定のイベントセットのイベントリスナーを偽造するだけの場合は、それらを &lt;code&gt;fake&lt;/code&gt; または &lt;code&gt;fakeFor&lt;/code&gt; メソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="876cc55ab38d0fd8b843f5b70ea9f3f49aef82d1" translate="yes" xml:space="preserve">
          <source>If you open the &lt;code&gt;config/app.php&lt;/code&gt; file included with Laravel, you will see a &lt;code&gt;providers&lt;/code&gt; array. These are all of the service provider classes that will be loaded for your application. Note that many of these are &quot;deferred&quot; providers, meaning they will not be loaded on every request, but only when the services they provide are actually needed.</source>
          <target state="translated">Laravelに含まれている &lt;code&gt;config/app.php&lt;/code&gt; ファイルを開くと、 &lt;code&gt;providers&lt;/code&gt; 配列が表示されます。これらは、アプリケーションにロードされるすべてのサービスプロバイダークラスです。これらの多くは「据え置き」プロバイダーであることに注意してください。つまり、すべてのリクエストで読み込まれるわけではなく、提供するサービスが実際に必要な場合にのみ読み込まれます。</target>
        </trans-unit>
        <trans-unit id="13e3517f275db5ad260ba3c0209c9ca3644d837f" translate="yes" xml:space="preserve">
          <source>If you open the &lt;code&gt;config/app.php&lt;/code&gt; file included with Laravel, you will see a &lt;code&gt;providers&lt;/code&gt; array. These are all of the service provider classes that will be loaded for your application. Of course, many of these are &quot;deferred&quot; providers, meaning they will not be loaded on every request, but only when the services they provide are actually needed.</source>
          <target state="translated">Laravelに含まれている &lt;code&gt;config/app.php&lt;/code&gt; ファイルを開くと、 &lt;code&gt;providers&lt;/code&gt; 配列が表示されます。これらは、アプリケーションに読み込まれるすべてのサービスプロバイダークラスです。もちろん、これらの多くは「据え置き」プロバイダーです。つまり、すべての要求でロードされるわけではなく、提供するサービスが実際に必要な場合にのみロードされます。</target>
        </trans-unit>
        <trans-unit id="0bd50bddd6b470cbcb1934a067b516e3d0b416a9" translate="yes" xml:space="preserve">
          <source>If you pass additional parameters in the array, those key / value pairs will automatically be added to the generated URL's query string:</source>
          <target state="translated">配列に追加のパラメータを渡すと、それらのキーと値のペアが自動的に生成された URL のクエリ文字列に追加されます。</target>
        </trans-unit>
        <trans-unit id="142ffe10cb300cc8413baf547a72b32acc0db551" translate="yes" xml:space="preserve">
          <source>If you pass an array of columns into a method that drops indexes, the conventional index name will be generated based on the table name, columns and key type:</source>
          <target state="translated">インデックスをドロップするメソッドにカラムの配列を渡すと、テーブル名、カラム、キータイプに基づいて従来のインデックス名が生成されます。</target>
        </trans-unit>
        <trans-unit id="bfe3e64946531a08dd602ee3eac16848efa80829" translate="yes" xml:space="preserve">
          <source>If you plan to have authorization logic in another part of your application, return &lt;code&gt;true&lt;/code&gt; from the &lt;code&gt;authorize&lt;/code&gt; method:</source>
          <target state="translated">アプリケーションの別の部分に承認ロジックを含める予定の場合は、 &lt;code&gt;authorize&lt;/code&gt; メソッドから &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="478419f48ebe523d1be511c643f92b8e1d122a66" translate="yes" xml:space="preserve">
          <source>If you plan to only use Telescope to assist your local development, you may install Telescope using the &lt;code&gt;--dev&lt;/code&gt; flag:</source>
          <target state="translated">ローカル開発を支援するためにTelescopeのみを使用することを計画している場合は、 &lt;code&gt;--dev&lt;/code&gt; フラグを使用してTelescopeをインストールできます。</target>
        </trans-unit>
        <trans-unit id="4925a8e67dd41b3cca8f6b189faaf010dfbbeccb" translate="yes" xml:space="preserve">
          <source>If you plan to serialize your Eloquent models containing value objects to JSON or arrays, you should implement the &lt;code&gt;Illuminate\Contracts\Support\Arrayable&lt;/code&gt; and &lt;code&gt;JsonSerializable&lt;/code&gt; interfaces on the value object.</source>
          <target state="translated">値オブジェクトを含むEloquentモデルをJSONまたは配列にシリアル化する場合は、値オブジェクトに &lt;code&gt;Illuminate\Contracts\Support\Arrayable&lt;/code&gt; および &lt;code&gt;JsonSerializable&lt;/code&gt; インターフェースを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="8cb6982a1ce14632f16295784f8968541e59bf44" translate="yes" xml:space="preserve">
          <source>If you plan to use PhpRedis extension along with the &lt;code&gt;Redis&lt;/code&gt; Facade alias, you should rename it to something else, like &lt;code&gt;RedisManager&lt;/code&gt;, to avoid a collision with the Redis class. You can do that in the aliases section of your &lt;code&gt;app.php&lt;/code&gt; config file.</source>
          <target state="translated">あなたが一緒にPhpRedis拡張子を使用する予定の場合は &lt;code&gt;Redis&lt;/code&gt; のファサードエイリアス、あなたは次のように、何か他のものに名前を変更する必要があり &lt;code&gt;RedisManager&lt;/code&gt; Redisのクラスとの衝突を避けるために、。これは、 &lt;code&gt;app.php&lt;/code&gt; 構成ファイルのエイリアスセクションで行うことができます。</target>
        </trans-unit>
        <trans-unit id="5b81d691f5b940289608e4b9907d5923d40e4530" translate="yes" xml:space="preserve">
          <source>If you plan to use the &lt;a href=&quot;queues#job-batching&quot;&gt;job batching&lt;/a&gt; features of Laravel 8.x, your &lt;code&gt;failed_jobs&lt;/code&gt; database table will need to be updated. First, a new &lt;code&gt;uuid&lt;/code&gt; column should be added to your table:</source>
          <target state="translated">Laravel 8.xの&lt;a href=&quot;queues#job-batching&quot;&gt;ジョブバッチ&lt;/a&gt;機能を使用する場合は、 &lt;code&gt;failed_jobs&lt;/code&gt; データベーステーブルを更新する必要があります。まず、新しい &lt;code&gt;uuid&lt;/code&gt; 列をテーブルに追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="f8394e0379b056a645a5b25489bbc7257e77f623" translate="yes" xml:space="preserve">
          <source>If you prefer Laravel 7.x style controller route prefixing, you may simply add the &lt;code&gt;$namespace&lt;/code&gt; property into your application's &lt;code&gt;RouteServiceProvider&lt;/code&gt;.</source>
          <target state="translated">Laravel 7.xスタイルのコントローラールートプレフィックスが必要な場合は、 &lt;code&gt;$namespace&lt;/code&gt; プロパティをアプリケーションの &lt;code&gt;RouteServiceProvider&lt;/code&gt; に追加するだけです。</target>
        </trans-unit>
        <trans-unit id="17c31cd66e3660d510f430445fe1b93e1e2043a5" translate="yes" xml:space="preserve">
          <source>If you prefer to use MariaDB instead of MySQL, you may add the &lt;code&gt;mariadb&lt;/code&gt; option to your &lt;code&gt;Homestead.yaml&lt;/code&gt; file. This option will remove MySQL and install MariaDB. MariaDB serves as a drop-in replacement for MySQL so you should still use the &lt;code&gt;mysql&lt;/code&gt; database driver in your application's database configuration:</source>
          <target state="translated">MySQLの代わりにMariaDBを使用したい場合は、 &lt;code&gt;mariadb&lt;/code&gt; オプションを &lt;code&gt;Homestead.yaml&lt;/code&gt; ファイルに追加できます。このオプションはMySQLを削除し、MariaDBをインストールします。MariaDBはMySQLのドロップイン代替品として機能するため、アプリケーションのデータベース構成で &lt;code&gt;mysql&lt;/code&gt; データベースドライバーを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="fb469d3db8e49ba5d150780974bf190155e5856b" translate="yes" xml:space="preserve">
          <source>If you prefer to use React to build your JavaScript application, Laravel makes it a cinch to swap the Vue scaffolding with React scaffolding. On any fresh Laravel application, you may use the &lt;code&gt;preset&lt;/code&gt; command with the &lt;code&gt;react&lt;/code&gt; option:</source>
          <target state="translated">JavaScriptアプリケーションを構築するためにReactを使用したい場合、LaravelはVueの足場をReactの足場と交換することを簡単にします。任意の新鮮なLaravelアプリケーションでは、あなたが使用すること &lt;code&gt;preset&lt;/code&gt; を使用してコマンドを &lt;code&gt;react&lt;/code&gt; オプション：</target>
        </trans-unit>
        <trans-unit id="47e870e1a0ebbe2d9031e536ad5801f0272351e8" translate="yes" xml:space="preserve">
          <source>If you provide an array of key / value pairs and an expiration time to the function, it will store values in the cache for the specified duration:</source>
          <target state="translated">関数にキーと値のペアの配列と有効期限を指定すると、指定した期間だけキャッシュに値を保存します。</target>
        </trans-unit>
        <trans-unit id="37ed32b978d5b9b22e10675e2f01297ef69eca00" translate="yes" xml:space="preserve">
          <source>If you require more complex logic for determining the retry delay, you may define a &lt;code&gt;backoff&lt;/code&gt; method on your queued job class:</source>
          <target state="translated">再試行遅延を決定するためにより複雑なロジックが必要な場合は、キューに入れられたジョブクラスに &lt;code&gt;backoff&lt;/code&gt; メソッドを定義できます。</target>
        </trans-unit>
        <trans-unit id="5ca47a9349f7d2674866cb22ce2eafa48ae2a889" translate="yes" xml:space="preserve">
          <source>If you require more complicated logic to determine what responses to return for certain endpoints, you may pass a callback to the &lt;code&gt;fake&lt;/code&gt; method. This callback will receive an instance of &lt;code&gt;Illuminate\Http\Client\Request&lt;/code&gt; and should return a response instance:</source>
          <target state="translated">特定のエンドポイントに対して返す応答を決定するために、より複雑なロジックが必要な場合は、コールバックを &lt;code&gt;fake&lt;/code&gt; メソッドに渡すことができます。このコールバックは、 &lt;code&gt;Illuminate\Http\Client\Request&lt;/code&gt; インスタンスを受け取り、応答インスタンスを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="b73249ece73973c607af5b9be0ceb05b8c9e6c8f" translate="yes" xml:space="preserve">
          <source>If you retrieved prices for subscription plans you can display their initial and recurring price separately:</source>
          <target state="translated">サブスクリプション プランの価格を取得した場合は、初期価格と定期価格を別々に表示することができます。</target>
        </trans-unit>
        <trans-unit id="58d4b008bbbe536529082bf0beb1ccb399f5d620" translate="yes" xml:space="preserve">
          <source>If you return a PSR-7 response instance from a route or controller, it will automatically be converted back to a Laravel response instance and be displayed by the framework.</source>
          <target state="translated">ルートやコントローラからPSR-7のレスポンスインスタンスを返すと、自動的にLaravelのレスポンスインスタンスに変換されてフレームワークに表示されます。</target>
        </trans-unit>
        <trans-unit id="388a83422b713bf10b2f388b5d49969380220f4a" translate="yes" xml:space="preserve">
          <source>If you run your migrations on multiple types of databases, consider using &lt;code&gt;DB::getDriverName()&lt;/code&gt; in your migrations to skip unsupported foreign key methods for SQLite.</source>
          <target state="translated">複数のタイプのデータベースで移行を実行する場合は、移行で &lt;code&gt;DB::getDriverName()&lt;/code&gt; を使用して、SQLiteでサポートされていない外部キーメソッドをスキップすることを検討してください。</target>
        </trans-unit>
        <trans-unit id="fddc0814088d3be7875824c811902f482100ee8d" translate="yes" xml:space="preserve">
          <source>If you specify a matching group within the expression, Laravel will return a collection of that group's matches:</source>
          <target state="translated">式の中でマッチするグループを指定すると、Laravelはそのグループのマッチのコレクションを返します。</target>
        </trans-unit>
        <trans-unit id="f0afbc46858ecd5214a2cac32739f175484d23ac" translate="yes" xml:space="preserve">
          <source>If you used the &lt;code&gt;--model&lt;/code&gt; option when generating your policy via the Artisan console, it will already contain methods for the &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; actions.</source>
          <target state="translated">Artisanコンソールを介してポリシーを生成するときに &lt;code&gt;--model&lt;/code&gt; オプションを使用した場合、ポリシーにはすでに &lt;code&gt;view&lt;/code&gt; 、 &lt;code&gt;create&lt;/code&gt; 、 &lt;code&gt;update&lt;/code&gt; 、および &lt;code&gt;delete&lt;/code&gt; アクションのメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="21f02510fc87706a96c62448f6df48afb2c26013" translate="yes" xml:space="preserve">
          <source>If you used the &lt;code&gt;--model&lt;/code&gt; option when generating your policy via the Artisan console, it will already contain methods for the &lt;code&gt;viewAny&lt;/code&gt;, &lt;code&gt;view&lt;/code&gt;, &lt;code&gt;create&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, &lt;code&gt;restore&lt;/code&gt;, and &lt;code&gt;forceDelete&lt;/code&gt; actions.</source>
          <target state="translated">Artisanコンソールを介してポリシーを生成するときに &lt;code&gt;--model&lt;/code&gt; オプションを使用した場合、 &lt;code&gt;viewAny&lt;/code&gt; 、 &lt;code&gt;view&lt;/code&gt; 、 &lt;code&gt;create&lt;/code&gt; 、 &lt;code&gt;update&lt;/code&gt; 、 &lt;code&gt;delete&lt;/code&gt; 、 &lt;code&gt;restore&lt;/code&gt; 、および &lt;code&gt;forceDelete&lt;/code&gt; アクションのメソッドがすでに含まれています。</target>
        </trans-unit>
        <trans-unit id="1651d63677b521ac36a1ec031eada3b276cdbae9" translate="yes" xml:space="preserve">
          <source>If you utilize the &lt;code&gt;php artisan down&lt;/code&gt; command during deployment, your users may still occasionally encounter errors if they access the application while your Composer dependencies or other infrastructure components are updating. This occurs because a significant part of the Laravel framework must boot in order to determine your application is in maintenance mode and render the maintenance mode view using the templating engine.</source>
          <target state="translated">デプロイ中に &lt;code&gt;php artisan down&lt;/code&gt; コマンドを使用する場合、Composerの依存関係または他のインフラストラクチャコンポーネントの更新中にユーザーがアプリケーションにアクセスすると、エラーが発生することがあります。これは、アプリケーションがメンテナンスモードにあることを確認し、テンプレートエンジンを使用してメンテナンスモードビューをレンダリングするために、Laravelフレームワークの大部分を起動する必要があるために発生します。</target>
        </trans-unit>
        <trans-unit id="4deed7abcb4a166e72847894f3956c0bd27c130a" translate="yes" xml:space="preserve">
          <source>If you want a middleware to run during every HTTP request to your application, list the middleware class in the &lt;code&gt;$middleware&lt;/code&gt; property of your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; class.</source>
          <target state="translated">アプリケーションへのすべてのHTTPリクエスト中にミドルウェアを実行する場合は、 &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; クラスの &lt;code&gt;$middleware&lt;/code&gt; プロパティにミドルウェアクラスをリストします。</target>
        </trans-unit>
        <trans-unit id="c7350cc2d65ca30bbeaa8e2b6953c63b7e7ed72f" translate="yes" xml:space="preserve">
          <source>If you want to broadcast your event using the &lt;code&gt;sync&lt;/code&gt; queue instead of the default queue driver, you can implement the &lt;code&gt;ShouldBroadcastNow&lt;/code&gt; interface instead of &lt;code&gt;ShouldBroadcast&lt;/code&gt;:</source>
          <target state="translated">デフォルトのキュードライバーではなく &lt;code&gt;sync&lt;/code&gt; キューを使用してイベントをブロードキャストする場合は、 &lt;code&gt;ShouldBroadcastNow&lt;/code&gt; 代わりに &lt;code&gt;ShouldBroadcast&lt;/code&gt; Nowインターフェイスを実装できます。</target>
        </trans-unit>
        <trans-unit id="dfe0215a5469f88a8dd057f2024207b48d2dc37a" translate="yes" xml:space="preserve">
          <source>If you want to count the number of results from a relationship without actually loading them you may use the &lt;code&gt;withCount&lt;/code&gt; method, which will place a &lt;code&gt;{relation}_count&lt;/code&gt; column on your resulting models. For example:</source>
          <target state="translated">実際にロードせずにリレーションシップからの結果の数をカウントする場合は、結果のモデルに &lt;code&gt;{relation}_count&lt;/code&gt; 列を配置する &lt;code&gt;withCount&lt;/code&gt; メソッドを使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="6c4aba924e0af6a213824172102725e1801ee337" translate="yes" xml:space="preserve">
          <source>If you want to perform a schema operation on a database connection that is not your default connection, use the &lt;code&gt;connection&lt;/code&gt; method:</source>
          <target state="translated">デフォルト接続ではないデータベース接続でスキーマ操作を実行する場合は、 &lt;code&gt;connection&lt;/code&gt; 方法を使用します。</target>
        </trans-unit>
        <trans-unit id="d58d79e01663f9d87ae42c52268cb7d66d5cb2c6" translate="yes" xml:space="preserve">
          <source>If you want to retrieve only the &quot;unread&quot; notifications, you may use the &lt;code&gt;unreadNotifications&lt;/code&gt; relationship. Again, these notifications will be sorted by the &lt;code&gt;created_at&lt;/code&gt; timestamp:</source>
          <target state="translated">「未読」通知のみを取得する場合は、 &lt;code&gt;unreadNotifications&lt;/code&gt; 関係を使用できます。繰り返しますが、これらの通知は &lt;code&gt;created_at&lt;/code&gt; タイムスタンプでソートされます。</target>
        </trans-unit>
        <trans-unit id="0b991b8cb1b12a366756b25c8e6709271a370fab" translate="yes" xml:space="preserve">
          <source>If you want to stop executing the script after dumping the collection, use the &lt;a href=&quot;#method-dd&quot;&gt;&lt;code&gt;dd&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="translated">コレクションのダンプ後にスクリプトの実行を停止する場合は、代わりに&lt;a href=&quot;#method-dd&quot;&gt; &lt;code&gt;dd&lt;/code&gt; &lt;/a&gt;メソッドを使用してください。</target>
        </trans-unit>
        <trans-unit id="e5bfd9c11261e25f62152824977cc2a34518c9f3" translate="yes" xml:space="preserve">
          <source>If you want to stop executing the script after dumping the variables, use the &lt;a href=&quot;#method-dd&quot;&gt;&lt;code&gt;dd&lt;/code&gt;&lt;/a&gt; function instead.</source>
          <target state="translated">変数のダンプ後にスクリプトの実行を停止する場合は、代わりに&lt;a href=&quot;#method-dd&quot;&gt; &lt;code&gt;dd&lt;/code&gt; &lt;/a&gt;関数を使用してください。</target>
        </trans-unit>
        <trans-unit id="49b1a0da5dcd3084ae9ee8f27815a155fd9d0e5d" translate="yes" xml:space="preserve">
          <source>If you want to swap a single plan on a subscription, you may do so using the &lt;code&gt;swap&lt;/code&gt; method on the subscription item itself. This approach is useful if you, for example, want to preserve all of the existing metadata on the subscription item.</source>
          <target state="translated">サブスクリプションで単一のプランをスワップする場合は、サブスクリプションアイテム自体で &lt;code&gt;swap&lt;/code&gt; メソッドを使用して行うことができます。このアプローチは、たとえば、サブスクリプションアイテムの既存のメタデータをすべて保持する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="672dacc30dbfb0ff1e001bf92889598ee9951337" translate="yes" xml:space="preserve">
          <source>If you want your pivot table to have automatically maintained &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps, use the &lt;code&gt;withTimestamps&lt;/code&gt; method on the relationship definition:</source>
          <target state="translated">あなたは、ピボットテーブルを自動的に維持したい場合 &lt;code&gt;created_at&lt;/code&gt; と &lt;code&gt;updated_at&lt;/code&gt; のタイムスタンプを、使用 &lt;code&gt;withTimestamps&lt;/code&gt; の関係定義のメソッドを：</target>
        </trans-unit>
        <trans-unit id="8352fd4936383006dfafde74a5e22c7cb7aa4fde" translate="yes" xml:space="preserve">
          <source>If you wish to allow other devices on your local network to access the Valet sites on your machine via your machine's IP address (eg: &lt;code&gt;192.168.1.10/app-name.test&lt;/code&gt;), you will need to manually edit the appropriate Nginx configuration file for that site to remove the restriction on the &lt;code&gt;listen&lt;/code&gt; directive by removing the &lt;code&gt;127.0.0.1:&lt;/code&gt; prefix on the directive for ports 80 and 443.</source>
          <target state="translated">ローカルネットワーク上の他のデバイスがマシンのIPアドレス（例： &lt;code&gt;192.168.1.10/app-name.test&lt;/code&gt; ）を介してマシン上のValetサイトにアクセスできるようにする場合は、適切なNginx構成ファイルを手動で編集する必要があります。そのサイトは、ポート80および443のディレクティブの &lt;code&gt;127.0.0.1:&lt;/code&gt; プレフィックスを削除することにより、 &lt;code&gt;listen&lt;/code&gt; ディレクティブの制限を削除します。</target>
        </trans-unit>
        <trans-unit id="5e96a2d5cc2cd5b4bb64aa1257d8fa9c12c43996" translate="yes" xml:space="preserve">
          <source>If you wish to append a &quot;hash fragment&quot; to the paginator's URLs, you may use the &lt;code&gt;fragment&lt;/code&gt; method. For example, to append &lt;code&gt;#foo&lt;/code&gt; to the end of each pagination link, make the following call to the &lt;code&gt;fragment&lt;/code&gt; method:</source>
          <target state="translated">ページャのURLに「ハッシュフラグメント」を追加する場合は、 &lt;code&gt;fragment&lt;/code&gt; メソッドを使用できます。たとえば、各ページネーションリンクの末尾に &lt;code&gt;#foo&lt;/code&gt; を追加するには、 &lt;code&gt;fragment&lt;/code&gt; メソッドを次のように呼び出します。</target>
        </trans-unit>
        <trans-unit id="9375ac5069b4d27791f3dc666514a4488e414096" translate="yes" xml:space="preserve">
          <source>If you wish to append all current query string values to the pagination links you may use the &lt;code&gt;withQueryString&lt;/code&gt; method:</source>
          <target state="translated">現在のすべてのクエリ文字列値をページネーションリンクに追加する場合は、 &lt;code&gt;withQueryString&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="e7b4de90cdbe3eea8edb32580a1d2e906dd43815" translate="yes" xml:space="preserve">
          <source>If you wish to cancel a subscription immediately, call the &lt;code&gt;cancelNow&lt;/code&gt; method on the user's subscription:</source>
          <target state="translated">サブスクリプションをすぐにキャンセルする場合は、ユーザーのサブスクリプションで &lt;code&gt;cancelNow&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="0437da80a8613a9967b47b7cadc2ff95225bcf5d" translate="yes" xml:space="preserve">
          <source>If you wish to cancel a subscription immediately, you may call the &lt;code&gt;cancelNow&lt;/code&gt; method on the user's subscription:</source>
          <target state="translated">サブスクリプションをすぐにキャンセルしたい場合は、ユーザーのサブスクリプションで &lt;code&gt;cancelNow&lt;/code&gt; メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="7325c7bfb6aec7d3af11b493297a2a11aed625fd" translate="yes" xml:space="preserve">
          <source>If you wish to customize the file name of the compiled CSS, you may pass a full file path as the second argument to the &lt;code&gt;less&lt;/code&gt; method:</source>
          <target state="translated">コンパイル済みCSSのファイル名をカスタマイズする場合は、 &lt;code&gt;less&lt;/code&gt; メソッドの2番目の引数として完全なファイルパスを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="200df1248e26b17b182ba63b22d6d441522fbe21" translate="yes" xml:space="preserve">
          <source>If you wish to delay the delivery of a queued email message, you may use the &lt;code&gt;later&lt;/code&gt; method. As its first argument, the &lt;code&gt;later&lt;/code&gt; method accepts a &lt;code&gt;DateTime&lt;/code&gt; instance indicating when the message should be sent:</source>
          <target state="translated">あなたがキューに入れられた電子メールメッセージの配信を延期したい場合は、使用することができ &lt;code&gt;later&lt;/code&gt; の方法を。最初の引数として、 &lt;code&gt;later&lt;/code&gt; 方法は、受け付け &lt;code&gt;DateTime&lt;/code&gt; メッセージが送信されるべきときを示すインスタンスを：</target>
        </trans-unit>
        <trans-unit id="a4d297ece2dbacdae0c3c16c77004cff812bc516" translate="yes" xml:space="preserve">
          <source>If you wish to immediately delete any overlapping jobs, you may use the &lt;code&gt;dontRelease&lt;/code&gt; method:</source>
          <target state="translated">重複するジョブをすぐに削除したい場合は、 &lt;code&gt;dontRelease&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="75066d14550d7dc0b80b43fe48a09e09ace48ffe" translate="yes" xml:space="preserve">
          <source>If you wish to truncate the entire table, which will remove all rows and reset the auto-incrementing ID to zero, you may use the &lt;code&gt;truncate&lt;/code&gt; method:</source>
          <target state="translated">すべての行を削除し、自動インクリメントIDをゼロにリセットするテーブル全体を切り捨てる場合は、 &lt;code&gt;truncate&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="6ac28ed755c6716e9fdc240cc30e3af558622f8e" translate="yes" xml:space="preserve">
          <source>If you wish to use your own resolution logic, you may use the &lt;code&gt;Route::bind&lt;/code&gt; method. The &lt;code&gt;Closure&lt;/code&gt; you pass to the &lt;code&gt;bind&lt;/code&gt; method will receive the value of the URI segment and should return the instance of the class that should be injected into the route:</source>
          <target state="translated">独自の解決ロジックを使用する場合は、 &lt;code&gt;Route::bind&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;Closure&lt;/code&gt; あなたがに渡す &lt;code&gt;bind&lt;/code&gt; メソッドは、URIセグメントの値を受け取ることになりますし、ルートに注入されなければならないクラスのインスタンスを返す必要があります：</target>
        </trans-unit>
        <trans-unit id="cec4dd101e06acef3c375edb244aa046be2f09ac" translate="yes" xml:space="preserve">
          <source>If you wish, you may also add extra conditions to the authentication query in addition to the user's e-mail and password. For example, we may verify that the user is marked as &quot;active&quot;:</source>
          <target state="translated">必要に応じて、認証クエリにユーザーの電子メールとパスワードに加えて、追加の条件を追加することもできます。例えば、ユーザが「アクティブ」とマークされているかどうかを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="c5b1a784e14cd61e9f67860963709f273e51d980" translate="yes" xml:space="preserve">
          <source>If you wish, you may also add extra conditions to the authentication query in addition to the user's e-mail and password. For example, we may verify that user is marked as &quot;active&quot;:</source>
          <target state="translated">必要に応じて、認証クエリにユーザーの電子メールとパスワードに加えて、追加の条件を追加することもできます。例えば、ユーザーが「アクティブ」とマークされていることを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="4300df6c6fe3c323516793547baa3e71944413c3" translate="yes" xml:space="preserve">
          <source>If you wish, you may define place-holders in your translation strings. All place-holders are prefixed with a &lt;code&gt;:&lt;/code&gt;. For example, you may define a welcome message with a place-holder name:</source>
          <target state="translated">必要に応じて、翻訳文字列にプレースホルダーを定義できます。すべてのプレースホルダーには、接頭辞 &lt;code&gt;:&lt;/code&gt; が付きます。たとえば、プレースホルダー名を使用してウェルカムメッセージを定義できます。</target>
        </trans-unit>
        <trans-unit id="383bfa12cd0c116116e5051d6ab836a5ab2fb8e4" translate="yes" xml:space="preserve">
          <source>If you wish, you may define placeholders in your translation strings. All placeholders are prefixed with a &lt;code&gt;:&lt;/code&gt;. For example, you may define a welcome message with a placeholder name:</source>
          <target state="translated">必要に応じて、翻訳文字列にプレースホルダーを定義できます。すべてのプレースホルダーの前には &lt;code&gt;:&lt;/code&gt; が付いています。たとえば、プレースホルダー名を使用してウェルカムメッセージを定義できます。</target>
        </trans-unit>
        <trans-unit id="8d09b56950fbaa73c2f4759d80c233c61f791d64" translate="yes" xml:space="preserve">
          <source>If you wish, you may forward additional ports to the Vagrant box, as well as specify their protocol:</source>
          <target state="translated">必要に応じて、追加のポートをVagrantボックスに転送したり、プロトコルを指定したりすることができます。</target>
        </trans-unit>
        <trans-unit id="289b4e5b61ae73180e5129c2e7199a91ceb1d394" translate="yes" xml:space="preserve">
          <source>If you would just like to concatenate some plain CSS stylesheets into a single file, you may use the &lt;code&gt;styles&lt;/code&gt; method.</source>
          <target state="translated">いくつかのプレーンCSSスタイルシートを単一のファイルに連結したいだけの場合は、 &lt;code&gt;styles&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="9e5e5419ab5ccfc5896e3d2e2f5688ebcbe82422" translate="yes" xml:space="preserve">
          <source>If you would like HTTP client to automatically retry the request if a client or server error occurs, you may use the &lt;code&gt;retry&lt;/code&gt; method. The &lt;code&gt;retry&lt;/code&gt; method accepts two arguments: the number of times the request should be attempted and the number of milliseconds that Laravel should wait in between attempts:</source>
          <target state="translated">クライアントまたはサーバーのエラーが発生した場合にHTTPクライアントが要求を自動的に再試行するようにしたい場合は、 &lt;code&gt;retry&lt;/code&gt; 方法を使用できます。 &lt;code&gt;retry&lt;/code&gt; 要求を試みるべき回数とLaravelは試行間に待機するミリ秒数：メソッドは2つの引数を指定できます。</target>
        </trans-unit>
        <trans-unit id="974943b72b9952603321a16d5bac9bfc90aba2dc" translate="yes" xml:space="preserve">
          <source>If you would like Laravel to automatically manage streaming a given file to your storage location, you may use the &lt;code&gt;putFile&lt;/code&gt; or &lt;code&gt;putFileAs&lt;/code&gt; method. This method accepts either a &lt;code&gt;Illuminate\Http\File&lt;/code&gt; or &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; instance and will automatically stream the file to your desired location:</source>
          <target state="translated">あなたはLaravelは自動的に保存場所に指定したファイルをストリーミングで管理したい場合は、使用すること &lt;code&gt;putFile&lt;/code&gt; または &lt;code&gt;putFileAs&lt;/code&gt; の方法を。このメソッドは、 &lt;code&gt;Illuminate\Http\File&lt;/code&gt; または &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; インスタンスを受け入れ、ファイルを目的の場所に自動的にストリーミングします。</target>
        </trans-unit>
        <trans-unit id="efd5499b1cefff15cf866abc28e5c9cdd9dd48b5" translate="yes" xml:space="preserve">
          <source>If you would like Laravel to automatically manage streaming a given file to your storage location, you may use the &lt;code&gt;putFile&lt;/code&gt; or &lt;code&gt;putFileAs&lt;/code&gt; method. This method accepts either an &lt;code&gt;Illuminate\Http\File&lt;/code&gt; or &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; instance and will automatically stream the file to your desired location:</source>
          <target state="translated">あなたはLaravelは自動的に保存場所に指定したファイルをストリーミングで管理したい場合は、使用すること &lt;code&gt;putFile&lt;/code&gt; または &lt;code&gt;putFileAs&lt;/code&gt; の方法を。このメソッドは、 &lt;code&gt;Illuminate\Http\File&lt;/code&gt; または &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; インスタンスのいずれかを受け入れ、ファイルを目的の場所に自動的にストリーミングします。</target>
        </trans-unit>
        <trans-unit id="d4cfcbb58ef6bfe0b1a47e832452f91fb5ae1825" translate="yes" xml:space="preserve">
          <source>If you would like a route parameter to always be constrained by a given regular expression, you may use the &lt;code&gt;pattern&lt;/code&gt; method. You should define these patterns in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;RouteServiceProvider&lt;/code&gt;:</source>
          <target state="translated">ルートパラメータが常に特定の正規表現によって制約されるようにしたい場合は、 &lt;code&gt;pattern&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;RouteServiceProvider&lt;/code&gt; の &lt;code&gt;boot&lt;/code&gt; メソッドでこれらのパターンを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="f99654da2d74fe63addf8dc3c1a31ed1dd723536" translate="yes" xml:space="preserve">
          <source>If you would like a rule object to run when an attribute is empty, you should implement the &lt;code&gt;Illuminate\Contracts\Validation\ImplicitRule&lt;/code&gt; interface. This interface serves as a &quot;marker interface&quot; for the validator; therefore, it does not contain any methods you need to implement.</source>
          <target state="translated">属性が空のときにルールオブジェクトを実行する場合は、 &lt;code&gt;Illuminate\Contracts\Validation\ImplicitRule&lt;/code&gt; インターフェイスを実装する必要があります。このインターフェースは、バリデーターの「マーカーインターフェース」として機能します。したがって、実装する必要のあるメソッドは含まれていません。</target>
        </trans-unit>
        <trans-unit id="df05038499fe23254efdeece8e9ca514440ddbae" translate="yes" xml:space="preserve">
          <source>If you would like a totally serverless, auto-scaling deployment platform tuned for Laravel, check out &lt;a href=&quot;https://vapor.laravel.com&quot;&gt;Laravel Vapor&lt;/a&gt;. Laravel Vapor is a serverless deployment platform for Laravel, powered by AWS. Launch your Laravel infrastructure on Vapor and fall in love with the scalable simplicity of serverless. Laravel Vapor is fine-tuned by Laravel's creators to work seamlessly with the framework so you can keep writing your Laravel applications exactly like you're used to.</source>
          <target state="translated">あなたはLaravel用に調整され、完全にサーバレス、自動スケーリングの展開プラットフォームをご希望の場合は、チェックアウト&lt;a href=&quot;https://vapor.laravel.com&quot;&gt;Laravel蒸気を&lt;/a&gt;。Laravel Vaporは、AWSを利用したLaravelのサーバーレスデプロイプラットフォームです。LaravelインフラストラクチャをVaporで起動し、サーバーレスのスケーラブルなシンプルさに夢中になります。Laravel Vaporは、フレームワークとシームレスに連携するようにLaravelの作成者によって微調整されているため、Laravelアプリケーションを以前とまったく同じように作成し続けることができます。</target>
        </trans-unit>
        <trans-unit id="aea595822c90a82d0817a2162f0dd2295f36c712" translate="yes" xml:space="preserve">
          <source>If you would like an attribute other than &lt;code&gt;class&lt;/code&gt; to have its values appended together, you may use the &lt;code&gt;prepends&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;class&lt;/code&gt; 以外の属性の値を一緒に追加したい場合は、 &lt;code&gt;prepends&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="e5e40a4a2022cedf978f394046cd4b1a94070e3a" translate="yes" xml:space="preserve">
          <source>If you would like model binding to use a database column other than &lt;code&gt;id&lt;/code&gt; when retrieving a given model class, you may override the &lt;code&gt;getRouteKeyName&lt;/code&gt; method on the Eloquent model:</source>
          <target state="translated">特定のモデルクラスを取得するときに、モデルバインディングで &lt;code&gt;id&lt;/code&gt; 以外のデータベース列を使用する場合は、Eloquentモデルの &lt;code&gt;getRouteKeyName&lt;/code&gt; メソッドをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="62f3527c3bb19ad27566914ef73538eaa7776d6a" translate="yes" xml:space="preserve">
          <source>If you would like model binding to use a default database column other than &lt;code&gt;id&lt;/code&gt; when retrieving a given model class, you may override the &lt;code&gt;getRouteKeyName&lt;/code&gt; method on the Eloquent model:</source>
          <target state="translated">特定のモデルクラスを取得するときに、モデルバインディングで &lt;code&gt;id&lt;/code&gt; 以外のデフォルトのデータベース列を使用する場合は、Eloquentモデルの &lt;code&gt;getRouteKeyName&lt;/code&gt; メソッドをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="6d98eeeecfaa0f7f103106394a0b9a6047209774" translate="yes" xml:space="preserve">
          <source>If you would like more information about Setup Intents and gathering customer payment details please &lt;a href=&quot;https://stripe.com/docs/payments/save-and-reuse#php&quot;&gt;review this overview provided by Stripe&lt;/a&gt;.</source>
          <target state="translated">セットアップインテントと顧客の支払いの詳細の収集について詳しく知りたい場合&lt;a href=&quot;https://stripe.com/docs/payments/save-and-reuse#php&quot;&gt;は、Stripeが提供するこの概要&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="d40c4edb83261dda53dec05a97eaa2c620de5e42" translate="yes" xml:space="preserve">
          <source>If you would like subscriptions to still be considered active when they are &lt;code&gt;past_due&lt;/code&gt;, you may use the &lt;code&gt;keepPastDueSubscriptionsActive&lt;/code&gt; method provided by Cashier. Typically, this method should be called in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">サブスクリプションが &lt;code&gt;past_due&lt;/code&gt; であってもアクティブであると見なされるようにする場合は、Cashierが提供する &lt;code&gt;keepPastDueSubscriptionsActive&lt;/code&gt; メソッドを使用できます。通常、このメソッドは &lt;code&gt;AppServiceProvider&lt;/code&gt; の &lt;code&gt;register&lt;/code&gt; メソッドで呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="6d996ada4f36db33dd8845082262d85b361b65e4" translate="yes" xml:space="preserve">
          <source>If you would like the &lt;code&gt;:attribute&lt;/code&gt; portion of your validation message to be replaced with a custom attribute name, you may specify the custom name in the &lt;code&gt;attributes&lt;/code&gt; array of your &lt;code&gt;resources/lang/xx/validation.php&lt;/code&gt; language file:</source>
          <target state="translated">検証メッセージの &lt;code&gt;:attribute&lt;/code&gt; 部分をカスタム属性名に置き換えたい場合は、 &lt;code&gt;resources/lang/xx/validation.php&lt;/code&gt; 言語ファイルの &lt;code&gt;attributes&lt;/code&gt; 配列でカスタム名を指定できます。</target>
        </trans-unit>
        <trans-unit id="6b7698eb6aa011ff499f998f85eedf1063c61947" translate="yes" xml:space="preserve">
          <source>If you would like the &lt;code&gt;:attribute&lt;/code&gt; portion of your validation message to be replaced with a custom attribute name, you may specify the custom names by overriding the &lt;code&gt;attributes&lt;/code&gt; method. This method should return an array of attribute / name pairs:</source>
          <target state="translated">検証メッセージの &lt;code&gt;:attribute&lt;/code&gt; 部分をカスタム属性名に置き換えたい場合は、 &lt;code&gt;attributes&lt;/code&gt; メソッドをオーバーライドしてカスタム名を指定できます。このメソッドは、属性と名前のペアの配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="1aee7e822655f0ec06851d95840c64ef6f4fc11d" translate="yes" xml:space="preserve">
          <source>If you would like the &lt;code&gt;schedule:run&lt;/code&gt; command to be run for a Homestead site, you may set the &lt;code&gt;schedule&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; when defining the site:</source>
          <target state="translated">ご希望の場合は &lt;code&gt;schedule:run&lt;/code&gt; ホームステッドサイトのために実行するコマンドを、あなたが設定して &lt;code&gt;schedule&lt;/code&gt; にオプションを &lt;code&gt;true&lt;/code&gt; サイトを定義する場合：</target>
        </trans-unit>
        <trans-unit id="f4018b553fbd34b244403585f301701145e68eaa" translate="yes" xml:space="preserve">
          <source>If you would like the subscription to still be considered active when it's in a &lt;code&gt;past_due&lt;/code&gt; state, you may use the &lt;code&gt;keepPastDueSubscriptionsActive&lt;/code&gt; method provided by Cashier. Typically, this method should be called in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">サブスクリプションが &lt;code&gt;past_due&lt;/code&gt; 状態のときにアクティブであると見なされるようにする場合は、Cashierが提供する &lt;code&gt;keepPastDueSubscriptionsActive&lt;/code&gt; メソッドを使用できます。通常、このメソッドは &lt;code&gt;AppServiceProvider&lt;/code&gt; の &lt;code&gt;register&lt;/code&gt; メソッドで呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="7c07675901c60116a3fdb69c26f529f07431ea2b" translate="yes" xml:space="preserve">
          <source>If you would like these computed values to be added to the array / JSON representations of your model, &lt;a href=&quot;eloquent-serialization#appending-values-to-json&quot;&gt;you will need to append them&lt;/a&gt;.</source>
          <target state="translated">これらの計算値をモデルの配列/ JSON表現&lt;a href=&quot;eloquent-serialization#appending-values-to-json&quot;&gt;に追加する場合は&lt;/a&gt;、それらを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="8cd7b2157eeb4c3c7d6a55f0d8c8e8fb75dfb1f9" translate="yes" xml:space="preserve">
          <source>If you would like to &lt;code&gt;@include&lt;/code&gt; a view depending on a given boolean condition, you may use the &lt;code&gt;@includeWhen&lt;/code&gt; directive:</source>
          <target state="translated">特定のブール条件に応じてビューを &lt;code&gt;@include&lt;/code&gt; したい場合は、 &lt;code&gt;@includeWhen&lt;/code&gt; ディレクティブを使用できます。</target>
        </trans-unit>
        <trans-unit id="150fe3e3684e892705d3ccf707077c0208472010" translate="yes" xml:space="preserve">
          <source>If you would like to &lt;code&gt;@include&lt;/code&gt; a view if a given boolean expression evaluates to &lt;code&gt;false&lt;/code&gt;, you may use the &lt;code&gt;@includeUnless&lt;/code&gt; directive:</source>
          <target state="translated">特定のブール式が &lt;code&gt;false&lt;/code&gt; と評価された場合にビューを &lt;code&gt;@include&lt;/code&gt; する場合は、 &lt;code&gt;@includeUnless&lt;/code&gt; ディレクティブを使用できます。</target>
        </trans-unit>
        <trans-unit id="b2db77b5effaf461aa1caccd4ba607de938dd5ed" translate="yes" xml:space="preserve">
          <source>If you would like to &lt;code&gt;@include&lt;/code&gt; a view if a given boolean expression evaluates to &lt;code&gt;true&lt;/code&gt;, you may use the &lt;code&gt;@includeWhen&lt;/code&gt; directive:</source>
          <target state="translated">特定のブール式が &lt;code&gt;true&lt;/code&gt; と評価された場合にビューを &lt;code&gt;@include&lt;/code&gt; する場合は、 &lt;code&gt;@includeWhen&lt;/code&gt; ディレクティブを使用できます。</target>
        </trans-unit>
        <trans-unit id="37efb431e155654ded8bd89a43a96266327efb40" translate="yes" xml:space="preserve">
          <source>If you would like to &lt;code&gt;save&lt;/code&gt; your model and all of its associated relationships, you may use the &lt;code&gt;push&lt;/code&gt; method:</source>
          <target state="translated">モデルとそれに関連するすべての関係を &lt;code&gt;save&lt;/code&gt; する場合は、 &lt;code&gt;push&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="ddb610adc130ca0f9645fb1407800a46f4fb389f" translate="yes" xml:space="preserve">
          <source>If you would like to add a collection of models to your search index via an Eloquent query, you may chain the &lt;code&gt;searchable&lt;/code&gt; method onto an Eloquent query. The &lt;code&gt;searchable&lt;/code&gt; method will &lt;a href=&quot;eloquent#chunking-results&quot;&gt;chunk the results&lt;/a&gt; of the query and add the records to your search index. Again, if you have configured Scout to use queues, all of the chunks will be added in the background by your queue workers:</source>
          <target state="translated">Eloquentクエリを介してモデルのコレクションを検索インデックスに追加する場合は、 &lt;code&gt;searchable&lt;/code&gt; メソッドをEloquentクエリにチェーンできます。 &lt;code&gt;searchable&lt;/code&gt; 方法の意志の&lt;a href=&quot;eloquent#chunking-results&quot;&gt;チャンク結果&lt;/a&gt;クエリのと検索インデックスにレコードを追加します。ここでも、キューを使用するようにScoutを構成している場合、すべてのチャンクがキューワーカーによってバックグラウンドで追加されます。</target>
        </trans-unit>
        <trans-unit id="a1c78219929a6c3bb2ffcacddb1f75e71be02df4" translate="yes" xml:space="preserve">
          <source>If you would like to add a plan with a specific quantity, you can pass the quantity as the second parameter of the &lt;code&gt;addPlan&lt;/code&gt; or &lt;code&gt;addPlanAndInvoice&lt;/code&gt; methods:</source>
          <target state="translated">特定の数量でプランを追加する場合は、 &lt;code&gt;addPlan&lt;/code&gt; または &lt;code&gt;addPlanAndInvoice&lt;/code&gt; メソッドの2番目のパラメーターとして数量を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="79b9fc7d814b19764a243d562e6fa8eb5f4c9421" translate="yes" xml:space="preserve">
          <source>If you would like to add a subscription to a customer who already has a default payment method set you can use the &lt;code&gt;add&lt;/code&gt; method when using the &lt;code&gt;newSubscription&lt;/code&gt; method:</source>
          <target state="translated">デフォルトの支払い方法がすでに設定されている顧客にサブスクリプションを &lt;code&gt;add&lt;/code&gt; する場合は、 &lt;code&gt;newSubscription&lt;/code&gt; メソッドを使用するときにaddメソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="80c6e3e9c4764612c015a7aa8415d1f09ce2f64c" translate="yes" xml:space="preserve">
          <source>If you would like to add an &quot;after&quot; hook to a form request, you may use the &lt;code&gt;withValidator&lt;/code&gt; method. This method receives the fully constructed validator, allowing you to call any of its methods before the validation rules are actually evaluated:</source>
          <target state="translated">フォームリクエストに「後」のフックを追加する場合は、 &lt;code&gt;withValidator&lt;/code&gt; メソッドを使用できます。このメソッドは完全に構築されたバリデーターを受け取り、検証ルールが実際に評価される前にそのメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="383fa1b5b5222278411548ca4c67b426ad230d24" translate="yes" xml:space="preserve">
          <source>If you would like to allow multiple redirect URLs for your client, you may specify them using a comma-delimited list when prompted for the URL by the &lt;code&gt;passport:client&lt;/code&gt; command:</source>
          <target state="translated">クライアントに複数のリダイレクトURLを許可する場合は、 &lt;code&gt;passport:client&lt;/code&gt; コマンドでURLの入力を求められたときに、コンマ区切りのリストを使用してそれらを指定できます。</target>
        </trans-unit>
        <trans-unit id="3674fa8c2e156613da3d943bc586d8bc6c850c0f" translate="yes" xml:space="preserve">
          <source>If you would like to also use the &lt;code&gt;passthrough&lt;/code&gt; option when specifying custom options, you should provide a key / value array since Cashier will automatically handle converting the array to a JSON string. In addition, the &lt;code&gt;customer_id&lt;/code&gt; passthrough option is reserved for internal Cashier usage.</source>
          <target state="translated">カスタムオプションを指定するときに &lt;code&gt;passthrough&lt;/code&gt; オプションも使用する場合は、Cashierが配列のJSON文字列への変換を自動的に処理するため、キー/値配列を指定する必要があります。さらに、 &lt;code&gt;customer_id&lt;/code&gt; パススルーオプションは、キャッシャーの内部使用のために予約されています。</target>
        </trans-unit>
        <trans-unit id="19ef25778b02080eb4dbf5be45bcd60bed5b1c7f" translate="yes" xml:space="preserve">
          <source>If you would like to append the output to a given file, you may use the &lt;code&gt;appendOutputTo&lt;/code&gt; method:</source>
          <target state="translated">特定のファイルに出力を追加する場合は、 &lt;code&gt;appendOutputTo&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="f9805d2c7dfd79904240aafd50f81bd8d72c3d65" translate="yes" xml:space="preserve">
          <source>If you would like to apply a coupon when creating the subscription, you may use the &lt;code&gt;withCoupon&lt;/code&gt; method:</source>
          <target state="translated">サブスクリプションの作成時にクーポンを適用する場合は、 &lt;code&gt;withCoupon&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="125e8538d84424dfdc4d6ad946e7aa1dfea5da90" translate="yes" xml:space="preserve">
          <source>If you would like to assign middleware to specific routes, you should first assign the middleware a key in your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file. By default, the &lt;code&gt;$routeMiddleware&lt;/code&gt; property of this class contains entries for the middleware included with Laravel. To add your own, append it to this list and assign it a key of your choosing:</source>
          <target state="translated">ミドルウェアを特定のルートに割り当てる場合は、最初にミドルウェアに &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; ファイルのキーを割り当てる必要があります。デフォルトでは、このクラスの &lt;code&gt;$routeMiddleware&lt;/code&gt; プロパティには、Laravelに含まれているミドルウェアのエントリが含まれています。独自のものを追加するには、それをこのリストに追加して、選択したキーを割り当てます。</target>
        </trans-unit>
        <trans-unit id="4ee7964e4dddd77a14fd3f92bf54a5375ad336fc" translate="yes" xml:space="preserve">
          <source>If you would like to attempt to authorize an action and automatically throw an &lt;code&gt;Illuminate\Auth\Access\AuthorizationException&lt;/code&gt; if the user is not allowed to perform the given action, you may use the &lt;code&gt;Gate::authorize&lt;/code&gt; method. Instances of &lt;code&gt;AuthorizationException&lt;/code&gt; are automatically converted to &lt;code&gt;403&lt;/code&gt; HTTP response:</source>
          <target state="translated">アクションの承認を試み、ユーザーが特定のアクションの実行を許可されていない場合に &lt;code&gt;Illuminate\Auth\Access\AuthorizationException&lt;/code&gt; を自動的にスローする場合は、 &lt;code&gt;Gate::authorize&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;AuthorizationException&lt;/code&gt; のインスタンスは、自動的に &lt;code&gt;403&lt;/code&gt; HTTP応答に変換されます。</target>
        </trans-unit>
        <trans-unit id="43f8ffe96acbc51267a65564733c484d4a71f085" translate="yes" xml:space="preserve">
          <source>If you would like to be notified when one of your queues has a long wait time, you may use the &lt;code&gt;Horizon::routeMailNotificationsTo&lt;/code&gt;, &lt;code&gt;Horizon::routeSlackNotificationsTo&lt;/code&gt;, and &lt;code&gt;Horizon::routeSmsNotificationsTo&lt;/code&gt; methods. You may call these methods from your application's &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">いずれかのキューの待機時間が長い場合に通知を &lt;code&gt;Horizon::routeMailNotificationsTo&lt;/code&gt; たい場合は、Horizo​​n :: routeMailNotificationsTo、 &lt;code&gt;Horizon::routeSlackNotificationsTo&lt;/code&gt; 、および &lt;code&gt;Horizon::routeSmsNotificationsTo&lt;/code&gt; メソッドを使用できます。これらのメソッドは、アプリケーションの &lt;code&gt;AppServiceProvider&lt;/code&gt; から呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="b9fd8eb285625c46444b3b9d37781588887b1cc6" translate="yes" xml:space="preserve">
          <source>If you would like to be notified when one of your queues has a long wait time, you may use the &lt;code&gt;Horizon::routeMailNotificationsTo&lt;/code&gt;, &lt;code&gt;Horizon::routeSlackNotificationsTo&lt;/code&gt;, and &lt;code&gt;Horizon::routeSmsNotificationsTo&lt;/code&gt; methods. You may call these methods from your application's &lt;code&gt;HorizonServiceProvider&lt;/code&gt;:</source>
          <target state="translated">キューの1つに長い待機時間があったときに通知を &lt;code&gt;Horizon::routeMailNotificationsTo&lt;/code&gt; たい場合は、Horizo​​n :: routeMailNotificationsTo、 &lt;code&gt;Horizon::routeSlackNotificationsTo&lt;/code&gt; 、および &lt;code&gt;Horizon::routeSmsNotificationsTo&lt;/code&gt; メソッドを使用できます。アプリケーションの &lt;code&gt;HorizonServiceProvider&lt;/code&gt; からこれらのメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="d22870a2eef6e8f9e64cc682ed27d2915b57227a" translate="yes" xml:space="preserve">
          <source>If you would like to be prompted for confirmation before running a given task on your servers, you should add the &lt;code&gt;confirm&lt;/code&gt; directive to your task declaration. This option is particularly useful for destructive operations:</source>
          <target state="translated">サーバーで特定のタスクを実行する前に確認を求められるようにするには、タスク宣言に &lt;code&gt;confirm&lt;/code&gt; ディレクティブを追加する必要があります。このオプションは、破壊的な操作に特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="e74c391590a69c440df59b665ca3907100155395" translate="yes" xml:space="preserve">
          <source>If you would like to begin a transaction manually and have complete control over rollbacks and commits, you may use the &lt;code&gt;beginTransaction&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade:</source>
          <target state="translated">トランザクションを手動で開始し、ロールバックとコミットを完全に制御したい場合は、 &lt;code&gt;DB&lt;/code&gt; ファサードで &lt;code&gt;beginTransaction&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="04725c1a6fac0ca54609f5006b581e1aa35424ce" translate="yes" xml:space="preserve">
          <source>If you would like to build an entirely new theme for Laravel's Markdown components, you may place a CSS file within the &lt;code&gt;html/themes&lt;/code&gt; directory. After naming and saving your CSS file, update the &lt;code&gt;theme&lt;/code&gt; option of the &lt;code&gt;mail&lt;/code&gt; configuration file to match the name of your new theme.</source>
          <target state="translated">LaravelのMarkdownコンポーネント用にまったく新しいテーマを作成したい場合は、 &lt;code&gt;html/themes&lt;/code&gt; ディレクトリ内にCSSファイルを配置できます。CSSファイルに名前を付けて保存した後、 &lt;code&gt;mail&lt;/code&gt; 構成ファイルの &lt;code&gt;theme&lt;/code&gt; オプションを更新して、新しいテーマの名前と一致させます。</target>
        </trans-unit>
        <trans-unit id="7bcb931be077e38dba55b60419f1589d708957ef" translate="yes" xml:space="preserve">
          <source>If you would like to build an entirely new theme for the Markdown components, write a new CSS file within the &lt;code&gt;html/themes&lt;/code&gt; directory and change the &lt;code&gt;theme&lt;/code&gt; option of your &lt;code&gt;mail&lt;/code&gt; configuration file.</source>
          <target state="translated">Markdownコンポーネントのまったく新しいテーマを作成する場合は、 &lt;code&gt;html/themes&lt;/code&gt; ディレクトリ内に新しいCSSファイルを記述し、 &lt;code&gt;mail&lt;/code&gt; 構成ファイルの &lt;code&gt;theme&lt;/code&gt; オプションを変更します。</target>
        </trans-unit>
        <trans-unit id="f005980e03c838cc158691b07019916142acf695" translate="yes" xml:space="preserve">
          <source>If you would like to call another console command and suppress all of its output, you may use the &lt;code&gt;callSilent&lt;/code&gt; method. The &lt;code&gt;callSilent&lt;/code&gt; method has the same signature as the &lt;code&gt;call&lt;/code&gt; method:</source>
          <target state="translated">別のコンソールコマンドを呼び出して、そのすべての出力を抑制したい場合は、 &lt;code&gt;callSilent&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;callSilent&lt;/code&gt; の方法は、同じシグネチャを持つ &lt;code&gt;call&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="957577815dad90548631b412494ad4dad4079ae4" translate="yes" xml:space="preserve">
          <source>If you would like to completely customize your Webpack configuration, copy the &lt;code&gt;node_modules/laravel-mix/setup/webpack.config.js&lt;/code&gt; file to your project's root directory. Next, point all of the &lt;code&gt;--config&lt;/code&gt; references in your &lt;code&gt;package.json&lt;/code&gt; file to the newly copied configuration file. If you choose to take this approach to customization, any future upstream updates to Mix's &lt;code&gt;webpack.config.js&lt;/code&gt; must be manually merged into your customized file.</source>
          <target state="translated">Webpack構成を完全にカスタマイズする場合は、 &lt;code&gt;node_modules/laravel-mix/setup/webpack.config.js&lt;/code&gt; ファイルをプロジェクトのルートディレクトリにコピーします。次に、 &lt;code&gt;package.json&lt;/code&gt; ファイル内のすべての &lt;code&gt;--config&lt;/code&gt; 参照が、新しくコピーされた構成ファイルを指すようにします。このアプローチをカスタマイズに使用する場合は、Mixの &lt;code&gt;webpack.config.js&lt;/code&gt; に対する今後のアップストリームの更新を、カスタマイズしたファイルに手動でマージする必要があります。</target>
        </trans-unit>
        <trans-unit id="3199188c4c4c818b8cda2e2b60656a8556bdd384" translate="yes" xml:space="preserve">
          <source>If you would like to conditionally dispatch a job, you may use the &lt;code&gt;dispatchIf&lt;/code&gt; and &lt;code&gt;dispatchUnless&lt;/code&gt; methods:</source>
          <target state="translated">あなたは条件付きで仕事を派遣したい場合は、使用すること &lt;code&gt;dispatchIf&lt;/code&gt; と &lt;code&gt;dispatchUnless&lt;/code&gt; 方法を：</target>
        </trans-unit>
        <trans-unit id="234c03ea994fe15d833d77a53b23b065a19dcfb6" translate="yes" xml:space="preserve">
          <source>If you would like to configure the failed job retry delay on a per-job basis, you may do so by defining a &lt;code&gt;backoff&lt;/code&gt; property on your queued job class:</source>
          <target state="translated">失敗したジョブの再試行遅延をジョブごとに構成する場合は、キューに入れられたジョブクラスに &lt;code&gt;backoff&lt;/code&gt; プロパティを定義することで構成できます。</target>
        </trans-unit>
        <trans-unit id="a93008174f8549b43aa9b318d19ac79eeedcc291" translate="yes" xml:space="preserve">
          <source>If you would like to construct a more complex condition for the &lt;code&gt;required_if&lt;/code&gt; rule, you may use the &lt;code&gt;Rule::requiredIf&lt;/code&gt; method. This methods accepts a boolean or a Closure. When passed a Closure, the Closure should return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; to indicate if the field under validation is required:</source>
          <target state="translated">If you would like to construct a more complex condition for the &lt;code&gt;required_if&lt;/code&gt; rule, you may use the &lt;code&gt;Rule::requiredIf&lt;/code&gt; method. This methods accepts a boolean or a Closure. When passed a Closure, the Closure should return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; to indicate if the field under validation is required:</target>
        </trans-unit>
        <trans-unit id="ddeff9c169aabd3da3ce1d9e5d68cd5d613effc8" translate="yes" xml:space="preserve">
          <source>If you would like to continue using the original auto-prefixed controller routing, you can simply set the value of the &lt;code&gt;$namespace&lt;/code&gt; property within your &lt;code&gt;RouteServiceProvider&lt;/code&gt; and update the route registrations within the &lt;code&gt;boot&lt;/code&gt; method to use the &lt;code&gt;$namespace&lt;/code&gt; property:</source>
          <target state="translated">If you would like to continue using the original auto-prefixed controller routing, you can simply set the value of the &lt;code&gt;$namespace&lt;/code&gt; property within your &lt;code&gt;RouteServiceProvider&lt;/code&gt; and update the route registrations within the &lt;code&gt;boot&lt;/code&gt; method to use the &lt;code&gt;$namespace&lt;/code&gt; property:</target>
        </trans-unit>
        <trans-unit id="1023a250d08dbba3cf4cf213cc05d03000f05665" translate="yes" xml:space="preserve">
          <source>If you would like to create a JSONP response, you may use the &lt;code&gt;json&lt;/code&gt; method in combination with the &lt;code&gt;withCallback&lt;/code&gt; method:</source>
          <target state="translated">JSONP応答を作成する場合は、 &lt;code&gt;json&lt;/code&gt; メソッドを &lt;code&gt;withCallback&lt;/code&gt; メソッドと組み合わせて使用できます。</target>
        </trans-unit>
        <trans-unit id="a123c5f6634ed37a5b5849340f4e1c2175655fd8" translate="yes" xml:space="preserve">
          <source>If you would like to create a validator instance manually but still take advantage of the automatic redirection offered by the request's &lt;code&gt;validate&lt;/code&gt; method, you may call the &lt;code&gt;validate&lt;/code&gt; method on an existing validator instance. If validation fails, the user will automatically be redirected or, in the case of an AJAX request, a JSON response will be returned:</source>
          <target state="translated">If you would like to create a validator instance manually but still take advantage of the automatic redirection offered by the request's &lt;code&gt;validate&lt;/code&gt; method, you may call the &lt;code&gt;validate&lt;/code&gt; method on an existing validator instance. If validation fails, the user will automatically be redirected or, in the case of an AJAX request, a JSON response will be returned:</target>
        </trans-unit>
        <trans-unit id="8cc00be3f7b867ec0b1ac16ce39a2d29943de49c" translate="yes" xml:space="preserve">
          <source>If you would like to create a validator instance manually but still take advantage of the automatic redirection offered by the requests's &lt;code&gt;validate&lt;/code&gt; method, you may call the &lt;code&gt;validate&lt;/code&gt; method on an existing validator instance. If validation fails, the user will automatically be redirected or, in the case of an AJAX request, a JSON response will be returned:</source>
          <target state="translated">バリデーターインスタンスを手動で作成したいが、リクエストの &lt;code&gt;validate&lt;/code&gt; メソッドによって提供される自動リダイレクトを利用したい場合は、既存のバリデーターインスタンスで &lt;code&gt;validate&lt;/code&gt; メソッドを呼び出すことができます。検証が失敗した場合、ユーザーは自動的にリダイレクトされるか、AJAXリクエストの場合はJSONレスポンスが返されます。</target>
        </trans-unit>
        <trans-unit id="878b4585baba59d2b7b2809aba31abba17045c8d" translate="yes" xml:space="preserve">
          <source>If you would like to create an on-demand logging stack consisting of multiple channels, you may use the &lt;code&gt;stack&lt;/code&gt; method:</source>
          <target state="translated">複数のチャネルで構成されるオンデマンドのロギングスタックを作成する場合は、 &lt;code&gt;stack&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="c52771888b1275d73433877297cf3a645c2f770b" translate="yes" xml:space="preserve">
          <source>If you would like to customize the authorization approval screen, you may publish Passport's views using the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command. The published views will be placed in &lt;code&gt;resources/views/vendor/passport&lt;/code&gt;:</source>
          <target state="translated">承認の承認画面をカスタマイズする場合は、 &lt;code&gt;vendor:publish&lt;/code&gt; Artisanコマンドを使用してPassportのビューを公開できます。公開されたビューは &lt;code&gt;resources/views/vendor/passport&lt;/code&gt; に配置されます：</target>
        </trans-unit>
        <trans-unit id="c8cbe33a741c502cf67ed66d76eae4a90cd5b693" translate="yes" xml:space="preserve">
          <source>If you would like to customize the format of your email's data before it is sent to the template, you may manually pass your data to the view via the &lt;code&gt;with&lt;/code&gt; method. Typically, you will still pass data via the mailable class' constructor; however, you should set this data to &lt;code&gt;protected&lt;/code&gt; or &lt;code&gt;private&lt;/code&gt; properties so the data is not automatically made available to the template. Then, when calling the &lt;code&gt;with&lt;/code&gt; method, pass an array of data that you wish to make available to the template:</source>
          <target state="translated">テンプレートに送信される前にメールのデータの形式をカスタマイズしたい場合は、 &lt;code&gt;with&lt;/code&gt; メソッドを使用してビューにデータを手動で渡すことができます。通常、メール可能なクラスのコンストラクタを介してデータを渡します。ただし、このデータを &lt;code&gt;protected&lt;/code&gt; プロパティまたは &lt;code&gt;private&lt;/code&gt; プロパティに設定して、テンプレートでデータが自動的に利用できないようにする必要があります。次に、 &lt;code&gt;with&lt;/code&gt; メソッドを呼び出すときに、テンプレートで使用できるようにするデータの配列を渡します。</target>
        </trans-unit>
        <trans-unit id="e97f444df85b482a9e9808018cc11d2f52710ecc" translate="yes" xml:space="preserve">
          <source>If you would like to customize the query executed by the validation rule, you may use the &lt;code&gt;Rule&lt;/code&gt; class to fluently define the rule. In this example, we'll also specify the validation rules as an array instead of using the &lt;code&gt;|&lt;/code&gt; character to delimit them:</source>
          <target state="translated">検証ルールによって実行されるクエリをカスタマイズする場合は、 &lt;code&gt;Rule&lt;/code&gt; クラスを使用してルールを流暢に定義できます。この例では、 &lt;code&gt;|&lt;/code&gt; を使用する代わりに、検証ルールを配列として指定します。それらを区切る文字：</target>
        </trans-unit>
        <trans-unit id="b088676703f6085b18f1e84ae5b18d04b9b4c4c9" translate="yes" xml:space="preserve">
          <source>If you would like to customize the queue connection and queue name used by an event listener, you may define &lt;code&gt;$connection&lt;/code&gt; and &lt;code&gt;$queue&lt;/code&gt; properties on your listener class:</source>
          <target state="translated">イベントリスナーが使用するキュー接続とキュー名をカスタマイズする場合は、リスナークラスで &lt;code&gt;$connection&lt;/code&gt; プロパティと &lt;code&gt;$queue&lt;/code&gt; プロパティを定義できます。</target>
        </trans-unit>
        <trans-unit id="e4ce8acdbcddfc5408bbfcbc80de9ac7c70f6200" translate="yes" xml:space="preserve">
          <source>If you would like to customize the queue connection, queue name, or queue delay time of an event listener, you may define the &lt;code&gt;$connection&lt;/code&gt;, &lt;code&gt;$queue&lt;/code&gt;, or &lt;code&gt;$delay&lt;/code&gt; properties on your listener class:</source>
          <target state="translated">If you would like to customize the queue connection, queue name, or queue delay time of an event listener, you may define the &lt;code&gt;$connection&lt;/code&gt; , &lt;code&gt;$queue&lt;/code&gt; , or &lt;code&gt;$delay&lt;/code&gt; properties on your listener class:</target>
        </trans-unit>
        <trans-unit id="04e140c1e20c65031bb9672167de017123f37291" translate="yes" xml:space="preserve">
          <source>If you would like to customize the value that is placed in the route parameter, you can specify the column in the route parameter definition (&lt;code&gt;profile/{id:slug}&lt;/code&gt;) or you can override the &lt;code&gt;getRouteKey&lt;/code&gt; method on your Eloquent model:</source>
          <target state="translated">If you would like to customize the value that is placed in the route parameter, you can specify the column in the route parameter definition ( &lt;code&gt;profile/{id:slug}&lt;/code&gt; ) or you can override the &lt;code&gt;getRouteKey&lt;/code&gt; method on your Eloquent model:</target>
        </trans-unit>
        <trans-unit id="ede5ea5f9a32cd8168db6c35b6311fc43900c001" translate="yes" xml:space="preserve">
          <source>If you would like to customize the value that is placed in the route parameter, you should override the &lt;code&gt;getRouteKey&lt;/code&gt; method on your Eloquent model:</source>
          <target state="translated">ルートパラメータに配置される値をカスタマイズする場合は、Eloquentモデルの &lt;code&gt;getRouteKey&lt;/code&gt; メソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="c420332cab852b3fcdae4b2f71f5d2ea44e058e4" translate="yes" xml:space="preserve">
          <source>If you would like to customize which channels a notifiable entity receives its broadcast notifications on, you may define a &lt;code&gt;receivesBroadcastNotificationsOn&lt;/code&gt; method on the notifiable entity:</source>
          <target state="translated">あなたは届出エンティティが上のブロードキャストの通知を受信するチャンネルをカスタマイズしたい場合は、定義すること &lt;code&gt;receivesBroadcastNotificationsOn&lt;/code&gt; の届出エンティティのメソッドを：</target>
        </trans-unit>
        <trans-unit id="3fbd56c66a478fb3a0e12f8a5880b5842fccd07e" translate="yes" xml:space="preserve">
          <source>If you would like to define a controller that only handles a single action, you may place a single &lt;code&gt;__invoke&lt;/code&gt; method on the controller:</source>
          <target state="translated">単一のアクションのみを処理するコントローラーを定義する場合は、コントローラーに単一の &lt;code&gt;__invoke&lt;/code&gt; メソッドを配置できます。</target>
        </trans-unit>
        <trans-unit id="c4bea4fb7a2fa4a2894cdcfe1602bb7979b845a7" translate="yes" xml:space="preserve">
          <source>If you would like to define a custom Valet driver for a single application, create a &lt;code&gt;LocalValetDriver.php&lt;/code&gt; in the application's root directory. Your custom driver may extend the base &lt;code&gt;ValetDriver&lt;/code&gt; class or extend an existing application specific driver such as the &lt;code&gt;LaravelValetDriver&lt;/code&gt;:</source>
          <target state="translated">単一のアプリケーションにカスタムValetドライバーを定義する場合は、アプリケーションのルートディレクトリに &lt;code&gt;LocalValetDriver.php&lt;/code&gt; を作成します。カスタムドライバは、ベースの &lt;code&gt;ValetDriver&lt;/code&gt; クラスを拡張するか、 &lt;code&gt;LaravelValetDriver&lt;/code&gt; などの既存のアプリケーション固有のドライバを拡張します。</target>
        </trans-unit>
        <trans-unit id="3e5d27aa507710010f2046617981a2fc14e458f4" translate="yes" xml:space="preserve">
          <source>If you would like to define a custom browser method that you can re-use in a variety of your tests, you may use the &lt;code&gt;macro&lt;/code&gt; method on the &lt;code&gt;Browser&lt;/code&gt; class. Typically, you should call this method from a &lt;a href=&quot;providers&quot;&gt;service provider's&lt;/a&gt;&lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">If you would like to define a custom browser method that you can re-use in a variety of your tests, you may use the &lt;code&gt;macro&lt;/code&gt; method on the &lt;code&gt;Browser&lt;/code&gt; class. Typically, you should call this method from a &lt;a href=&quot;providers&quot;&gt;service provider's&lt;/a&gt; &lt;code&gt;boot&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="2229673290b88dd2c40a9091ae9f1830ac60b744" translate="yes" xml:space="preserve">
          <source>If you would like to define a custom builder method, you may use the &lt;code&gt;macro&lt;/code&gt; method on the &lt;code&gt;Laravel\Scout\Builder&lt;/code&gt; class. Typically, &quot;macros&quot; should be defined within a &lt;a href=&quot;providers&quot;&gt;service provider's&lt;/a&gt;&lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">If you would like to define a custom builder method, you may use the &lt;code&gt;macro&lt;/code&gt; method on the &lt;code&gt;Laravel\Scout\Builder&lt;/code&gt; class. Typically, &quot;macros&quot; should be defined within a &lt;a href=&quot;providers&quot;&gt;service provider's&lt;/a&gt; &lt;code&gt;boot&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="14b120d62d71f5edd3b34c6af7d30256dbb5d69f" translate="yes" xml:space="preserve">
          <source>If you would like to define a custom model to represent the intermediate table of your relationship, you may call the &lt;code&gt;using&lt;/code&gt; method when defining the relationship. Custom many-to-many pivot models should extend the &lt;code&gt;Illuminate\Database\Eloquent\Relations\Pivot&lt;/code&gt; class while custom polymorphic many-to-many pivot models should extend the &lt;code&gt;Illuminate\Database\Eloquent\Relations\MorphPivot&lt;/code&gt; class. For example, we may define a &lt;code&gt;Role&lt;/code&gt; which uses a custom &lt;code&gt;RoleUser&lt;/code&gt; pivot model:</source>
          <target state="translated">If you would like to define a custom model to represent the intermediate table of your relationship, you may call the &lt;code&gt;using&lt;/code&gt; method when defining the relationship. Custom many-to-many pivot models should extend the &lt;code&gt;Illuminate\Database\Eloquent\Relations\Pivot&lt;/code&gt; class while custom polymorphic many-to-many pivot models should extend the &lt;code&gt;Illuminate\Database\Eloquent\Relations\MorphPivot&lt;/code&gt; class. For example, we may define a &lt;code&gt;Role&lt;/code&gt; which uses a custom &lt;code&gt;RoleUser&lt;/code&gt; pivot model:</target>
        </trans-unit>
        <trans-unit id="443fa1393674b164e3af28029741f853c7649f52" translate="yes" xml:space="preserve">
          <source>If you would like to define a custom model to represent the intermediate table of your relationship, you may call the &lt;code&gt;using&lt;/code&gt; method when defining the relationship. Custom many-to-many pivot models should extend the &lt;code&gt;Illuminate\Database\Eloquent\Relations\Pivot&lt;/code&gt; class while custom polymorphic many-to-many pivot models should extend the &lt;code&gt;Illuminate\Database\Eloquent\Relations\MorphPivot&lt;/code&gt; class. For example, we may define a &lt;code&gt;Role&lt;/code&gt; which uses a custom &lt;code&gt;UserRole&lt;/code&gt; pivot model:</source>
          <target state="translated">リレーションシップの中間テーブルを表すカスタムモデルを定義する場合は、リレーションシップを定義するときに &lt;code&gt;using&lt;/code&gt; メソッドを呼び出すことができます。カスタムの多対多のピボットモデルは &lt;code&gt;Illuminate\Database\Eloquent\Relations\Pivot&lt;/code&gt; クラスを拡張する必要がありますが、カスタムの多相多 &lt;code&gt;Illuminate\Database\Eloquent\Relations\MorphPivot&lt;/code&gt; ピボットモデルはIlluminate \ Database \ Eloquent \ Relations \ MorphPivotクラスを拡張する必要があります。たとえば、カスタムの &lt;code&gt;UserRole&lt;/code&gt; ピボットモデルを使用する &lt;code&gt;Role&lt;/code&gt; を定義できます。</target>
        </trans-unit>
        <trans-unit id="1e468c0ef7b9c1674f6f19a8767a922e33d40182" translate="yes" xml:space="preserve">
          <source>If you would like to define a custom response that you can re-use in a variety of your routes and controllers, you may use the &lt;code&gt;macro&lt;/code&gt; method on the &lt;code&gt;Response&lt;/code&gt; facade. For example, from a &lt;a href=&quot;providers&quot;&gt;service provider's&lt;/a&gt;&lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">さまざまなルートやコントローラーで再利用できるカスタム応答を定義する場合は、 &lt;code&gt;Response&lt;/code&gt; ファサードで &lt;code&gt;macro&lt;/code&gt; メソッドを使用できます。たとえば、&lt;a href=&quot;providers&quot;&gt;サービスプロバイダーの&lt;/a&gt; &lt;code&gt;boot&lt;/code&gt; 方法から：</target>
        </trans-unit>
        <trans-unit id="7814abbc503e4b4f1d4717ae186fb256d433f0f9" translate="yes" xml:space="preserve">
          <source>If you would like to define a plain-text version of your email, you may use the &lt;code&gt;text&lt;/code&gt; method. Like the &lt;code&gt;view&lt;/code&gt; method, the &lt;code&gt;text&lt;/code&gt; method accepts a template name which will be used to render the contents of the email. You are free to define both a HTML and plain-text version of your message:</source>
          <target state="translated">メールのプレーンテキストバージョンを定義する場合は、 &lt;code&gt;text&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;view&lt;/code&gt; メソッドと同様に、 &lt;code&gt;text&lt;/code&gt; メソッドは、電子メールのコンテンツをレンダリングするために使用されるテンプレート名を受け入れます。メッセージのHTMLバージョンとプレーンテキストバージョンの両方を自由に定義できます。</target>
        </trans-unit>
        <trans-unit id="a7b810e7de7e19bc0b02fd60a66ec3ac2ceb7796" translate="yes" xml:space="preserve">
          <source>If you would like to define a plain-text version of your email, you may use the &lt;code&gt;text&lt;/code&gt; method. Like the &lt;code&gt;view&lt;/code&gt; method, the &lt;code&gt;text&lt;/code&gt; method accepts a template name which will be used to render the contents of the email. You are free to define both an HTML and plain-text version of your message:</source>
          <target state="translated">If you would like to define a plain-text version of your email, you may use the &lt;code&gt;text&lt;/code&gt; method. Like the &lt;code&gt;view&lt;/code&gt; method, the &lt;code&gt;text&lt;/code&gt; method accepts a template name which will be used to render the contents of the email. You are free to define both an HTML and plain-text version of your message:</target>
        </trans-unit>
        <trans-unit id="8d4b7b0b990c18bae8e9087a8b06f5b56f2d9707" translate="yes" xml:space="preserve">
          <source>If you would like to define an entirely custom channel in which you have full control over Monolog's instantiation and configuration, you may specify a &lt;code&gt;custom&lt;/code&gt; driver type in your &lt;code&gt;config/logging.php&lt;/code&gt; configuration file. Your configuration should include a &lt;code&gt;via&lt;/code&gt; option to point to the factory class which will be invoked to create the Monolog instance:</source>
          <target state="translated">Monologのインスタンス化と構成を完全に制御できる完全にカスタムなチャネルを定義する場合は、 &lt;code&gt;config/logging.php&lt;/code&gt; 構成ファイルで &lt;code&gt;custom&lt;/code&gt; ドライバーのタイプを指定できます。設定には、Monologインスタンスを作成するために呼び出されるファクトリクラスを指す &lt;code&gt;via&lt;/code&gt; オプションが含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="0c94654a81246facc28fa5f750f4dd8999376ad3" translate="yes" xml:space="preserve">
          <source>If you would like to define arguments or options to expect array inputs, you may use the &lt;code&gt;*&lt;/code&gt; character. First, let's take a look at an example that specifies an array argument:</source>
          <target state="translated">配列入力を想定して引数またはオプションを定義する場合は、 &lt;code&gt;*&lt;/code&gt; 文字を使用できます。まず、配列引数を指定する例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="ac5b3eb872eef66a490d256f3e6882cd2122d96b" translate="yes" xml:space="preserve">
          <source>If you would like to define the default values for some of your model's attributes, you may define an &lt;code&gt;$attributes&lt;/code&gt; property on your model:</source>
          <target state="translated">If you would like to define the default values for some of your model's attributes, you may define an &lt;code&gt;$attributes&lt;/code&gt; property on your model:</target>
        </trans-unit>
        <trans-unit id="9884bc0a418f3b5c5f20716e5312337fab773e05" translate="yes" xml:space="preserve">
          <source>If you would like to define the listener's queue at runtime, you may define a &lt;code&gt;viaQueue&lt;/code&gt; method on the listener:</source>
          <target state="translated">If you would like to define the listener's queue at runtime, you may define a &lt;code&gt;viaQueue&lt;/code&gt; method on the listener:</target>
        </trans-unit>
        <trans-unit id="519c5e02b251bf04da4402ffad2055f064b36d14" translate="yes" xml:space="preserve">
          <source>If you would like to delay the delivery of the notification, you may chain the &lt;code&gt;delay&lt;/code&gt; method onto your notification instantiation:</source>
          <target state="translated">通知の配信を遅らせたい場合は、 &lt;code&gt;delay&lt;/code&gt; メソッドを通知のインスタンス化にチェーンできます。</target>
        </trans-unit>
        <trans-unit id="aecfc1bb235ebf0dab5e6bbb119ef9df03220d88" translate="yes" xml:space="preserve">
          <source>If you would like to delay the execution of a queued job, you may use the &lt;code&gt;delay&lt;/code&gt; method when dispatching a job. For example, let's specify that a job should not be available for processing until 10 minutes after it has been dispatched:</source>
          <target state="translated">キューに入れられたジョブの実行を遅らせたい場合は、ジョブをディスパッチするときに &lt;code&gt;delay&lt;/code&gt; メソッドを使用できます。たとえば、ジョブがディスパッチされてから10分経過するまでジョブを処理できないように指定します。</target>
        </trans-unit>
        <trans-unit id="a387580d345646e1d586f834e2be8422abe0d57d" translate="yes" xml:space="preserve">
          <source>If you would like to delete a failed job, you may use the &lt;code&gt;horizon:forget&lt;/code&gt; command. The &lt;code&gt;horizon:forget&lt;/code&gt; command accepts the ID of the failed job as its only argument:</source>
          <target state="translated">If you would like to delete a failed job, you may use the &lt;code&gt;horizon:forget&lt;/code&gt; command. The &lt;code&gt;horizon:forget&lt;/code&gt; command accepts the ID of the failed job as its only argument:</target>
        </trans-unit>
        <trans-unit id="f92c61106cbf0c6880d2cd57e985f48873561067" translate="yes" xml:space="preserve">
          <source>If you would like to delete a failed job, you may use the &lt;code&gt;queue:forget&lt;/code&gt; command:</source>
          <target state="translated">失敗したジョブを削除する場合は、 &lt;code&gt;queue:forget&lt;/code&gt; コマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="68f381d86d2ca753104fe290abb527b3d012f219" translate="yes" xml:space="preserve">
          <source>If you would like to delete all jobs from the default queue of the default connection, you may do so using the &lt;code&gt;queue:clear&lt;/code&gt; Artisan command:</source>
          <target state="translated">If you would like to delete all jobs from the default queue of the default connection, you may do so using the &lt;code&gt;queue:clear&lt;/code&gt; Artisan command:</target>
        </trans-unit>
        <trans-unit id="7d38a7bb8d998f38437812dc82ff4e32ae95d101" translate="yes" xml:space="preserve">
          <source>If you would like to delete all jobs from the default queue, you may do so using the &lt;code&gt;horizon:clear&lt;/code&gt; Artisan command:</source>
          <target state="translated">If you would like to delete all jobs from the default queue, you may do so using the &lt;code&gt;horizon:clear&lt;/code&gt; Artisan command:</target>
        </trans-unit>
        <trans-unit id="8006e67d6d2f8e39a0ab780a42ad7e9db80ffa6a" translate="yes" xml:space="preserve">
          <source>If you would like to deny all authorizations for a user you should return &lt;code&gt;false&lt;/code&gt; from the &lt;code&gt;before&lt;/code&gt; method. If &lt;code&gt;null&lt;/code&gt; is returned, the authorization will fall through to the policy method.</source>
          <target state="translated">ユーザーのすべての承認を拒否する場合は、 &lt;code&gt;before&lt;/code&gt; メソッドから &lt;code&gt;false&lt;/code&gt; を返す必要があります。場合は &lt;code&gt;null&lt;/code&gt; が返され、許可がポリシー・メソッドに通じ分類されます。</target>
        </trans-unit>
        <trans-unit id="29975588ff827a680a84cef92461d2dd119f3899" translate="yes" xml:space="preserve">
          <source>If you would like to designate a different file as the default pagination view, you may use the paginator's &lt;code&gt;defaultView&lt;/code&gt; and &lt;code&gt;defaultSimpleView&lt;/code&gt; methods within your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">デフォルトのページネーションのビューとして別のファイルを指定したい場合は、ページネータの使用することができます &lt;code&gt;defaultView&lt;/code&gt; と &lt;code&gt;defaultSimpleView&lt;/code&gt; あなたの中にメソッドを &lt;code&gt;AppServiceProvider&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="9220e854b0c8d39806bf85eab15009921b211d3c" translate="yes" xml:space="preserve">
          <source>If you would like to determine if a particular user is authorized to perform an action, you may use the &lt;code&gt;forUser&lt;/code&gt; method on the &lt;code&gt;Gate&lt;/code&gt; facade:</source>
          <target state="translated">特定のユーザーにアクションの実行が許可されているかどうかを確認する場合は、 &lt;code&gt;Gate&lt;/code&gt; ファサードで &lt;code&gt;forUser&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="a4646ad2061dee2a8d77964cd90a6d2500fe3770" translate="yes" xml:space="preserve">
          <source>If you would like to determine if a user is still within their trial period, you may use the &lt;code&gt;onTrial&lt;/code&gt; method. This method can be useful for displaying a warning to the user that they are still on their trial period:</source>
          <target state="translated">ユーザーがまだ試用期間内かどうかを確認する場合は、 &lt;code&gt;onTrial&lt;/code&gt; メソッドを使用できます。この方法は、まだ試用期間中であることをユーザーに警告するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="7ad7c1429d1b02f39769a784305a5bf7eb8fb2d5" translate="yes" xml:space="preserve">
          <source>If you would like to determine if a value is present on the request and is not empty, you may use the &lt;code&gt;filled&lt;/code&gt; method:</source>
          <target state="translated">リクエストに値が存在し、空でないかどうかを確認する場合は、 &lt;code&gt;filled&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="bda089bd37735451489cdfe627539242270c4021" translate="yes" xml:space="preserve">
          <source>If you would like to determine if the current request was routed to a given named route, you may use the &lt;code&gt;named&lt;/code&gt; method on a Route instance. For example, you may check the current route name from a route middleware:</source>
          <target state="translated">現在のリクエストが特定の名前付きルートにルーティングされたかどうかを確認する場合は、Routeインスタンスで &lt;code&gt;named&lt;/code&gt; メソッドを使用できます。たとえば、ルートミドルウェアから現在のルート名を確認できます。</target>
        </trans-unit>
        <trans-unit id="427313496f7da54ce5b983c424cc83148316bcab" translate="yes" xml:space="preserve">
          <source>If you would like to disable the wrapping of the outer-most resource, you may use the &lt;code&gt;withoutWrapping&lt;/code&gt; method on the base resource class. Typically, you should call this method from your &lt;code&gt;AppServiceProvider&lt;/code&gt; or another &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt; that is loaded on every request to your application:</source>
          <target state="translated">最も外側のリソースのラップを無効にしたい場合は、基本リソースクラスで &lt;code&gt;withoutWrapping&lt;/code&gt; メソッドを使用できます。通常、このメソッドは、 &lt;code&gt;AppServiceProvider&lt;/code&gt; またはアプリケーションへのリクエストごとにロードされる別の&lt;a href=&quot;providers&quot;&gt;サービスプロバイダー&lt;/a&gt;から呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="b48115dfa3c3a6c6558cf1d6213db9bfb1f11909" translate="yes" xml:space="preserve">
          <source>If you would like to disable the wrapping of the outermost resource, you may use the &lt;code&gt;withoutWrapping&lt;/code&gt; method on the base resource class. Typically, you should call this method from your &lt;code&gt;AppServiceProvider&lt;/code&gt; or another &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt; that is loaded on every request to your application:</source>
          <target state="translated">If you would like to disable the wrapping of the outermost resource, you may use the &lt;code&gt;withoutWrapping&lt;/code&gt; method on the base resource class. Typically, you should call this method from your &lt;code&gt;AppServiceProvider&lt;/code&gt; or another &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt; that is loaded on every request to your application:</target>
        </trans-unit>
        <trans-unit id="1c113122b37e7353217fcf2ae537d4450c874317" translate="yes" xml:space="preserve">
          <source>If you would like to disable this behavior, you may remove the two middleware from your application's middleware stack by removing them from the &lt;code&gt;$middleware&lt;/code&gt; property of your &lt;code&gt;App\Http\Kernel&lt;/code&gt; class.</source>
          <target state="translated">この動作を無効にする場合は、2つのミドルウェアを &lt;code&gt;App\Http\Kernel&lt;/code&gt; クラスの &lt;code&gt;$middleware&lt;/code&gt; プロパティから削除することで、アプリケーションのミドルウェアスタックから削除できます。</target>
        </trans-unit>
        <trans-unit id="652c313c69a15f0fa0e0c242ce3f3c9ae171a569" translate="yes" xml:space="preserve">
          <source>If you would like to dispatch a job immediately (synchronously), you may use the &lt;code&gt;dispatchSync&lt;/code&gt; method. When using this method, the job will not be queued and will be run immediately within the current process:</source>
          <target state="translated">If you would like to dispatch a job immediately (synchronously), you may use the &lt;code&gt;dispatchSync&lt;/code&gt; method. When using this method, the job will not be queued and will be run immediately within the current process:</target>
        </trans-unit>
        <trans-unit id="b7075e55558e513480cc342abb307934cecfc3a7" translate="yes" xml:space="preserve">
          <source>If you would like to display plain, uncolored console output, use the &lt;code&gt;line&lt;/code&gt; method:</source>
          <target state="translated">プレーンで色のないコンソール出力を表示したい場合は、次の &lt;code&gt;line&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="3c33408554e3377aad0b35c352ff825577a1b5a5" translate="yes" xml:space="preserve">
          <source>If you would like to display the integer value that was passed to the &lt;code&gt;trans_choice&lt;/code&gt; function, you may use the &lt;code&gt;:count&lt;/code&gt; placeholder:</source>
          <target state="translated">&lt;code&gt;trans_choice&lt;/code&gt; 関数に渡された整数値を表示する場合は、 &lt;code&gt;:count&lt;/code&gt; プレースホルダーを使用できます。</target>
        </trans-unit>
        <trans-unit id="35770aa6da7c87b22399746d0f70c6aded7d8b2d" translate="yes" xml:space="preserve">
          <source>If you would like to eager load a &lt;code&gt;morphTo&lt;/code&gt; relationship, as well as nested relationship counts on the various entities that may be returned by that relationship, you may use the &lt;code&gt;with&lt;/code&gt; method in combination with the &lt;code&gt;morphTo&lt;/code&gt; relationship's &lt;code&gt;morphWithCount&lt;/code&gt; method.</source>
          <target state="translated">If you would like to eager load a &lt;code&gt;morphTo&lt;/code&gt; relationship, as well as nested relationship counts on the various entities that may be returned by that relationship, you may use the &lt;code&gt;with&lt;/code&gt; method in combination with the &lt;code&gt;morphTo&lt;/code&gt; relationship's &lt;code&gt;morphWithCount&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="1ce84e0d0cf17941825915bff3c072eed0ceb27c" translate="yes" xml:space="preserve">
          <source>If you would like to eager load a &lt;code&gt;morphTo&lt;/code&gt; relationship, as well as nested relationships on the various entities that may be returned by that relationship, you may use the &lt;code&gt;loadMorph&lt;/code&gt; method.</source>
          <target state="translated">If you would like to eager load a &lt;code&gt;morphTo&lt;/code&gt; relationship, as well as nested relationships on the various entities that may be returned by that relationship, you may use the &lt;code&gt;loadMorph&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="ea520554e66705336302b99588e4f1031bc04d07" translate="yes" xml:space="preserve">
          <source>If you would like to eager load a &lt;code&gt;morphTo&lt;/code&gt; relationship, as well as nested relationships on the various entities that may be returned by that relationship, you may use the &lt;code&gt;with&lt;/code&gt; method in combination with the &lt;code&gt;morphTo&lt;/code&gt; relationship's &lt;code&gt;morphWith&lt;/code&gt; method. To help illustrate this method, let's consider the following model:</source>
          <target state="translated">If you would like to eager load a &lt;code&gt;morphTo&lt;/code&gt; relationship, as well as nested relationships on the various entities that may be returned by that relationship, you may use the &lt;code&gt;with&lt;/code&gt; method in combination with the &lt;code&gt;morphTo&lt;/code&gt; relationship's &lt;code&gt;morphWith&lt;/code&gt; method. To help illustrate this method, let's consider the following model:</target>
        </trans-unit>
        <trans-unit id="8d7b611ec43faf578bab64c416f043ffd98ed53d" translate="yes" xml:space="preserve">
          <source>If you would like to fake a sequence of responses but do not need to specify a specific URL pattern that should be faked, you may use the &lt;code&gt;Http::fakeSequence&lt;/code&gt; method:</source>
          <target state="translated">If you would like to fake a sequence of responses but do not need to specify a specific URL pattern that should be faked, you may use the &lt;code&gt;Http::fakeSequence&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="83ec58ca2de5a925c95a277c866fe5c03a213510" translate="yes" xml:space="preserve">
          <source>If you would like to generate a &lt;a href=&quot;migrations&quot;&gt;database migration&lt;/a&gt; when you generate the model, you may use the &lt;code&gt;--migration&lt;/code&gt; or &lt;code&gt;-m&lt;/code&gt; option:</source>
          <target state="translated">あなたが生成したい場合は&lt;a href=&quot;migrations&quot;&gt;、データベースの移行を&lt;/a&gt;使用すると、モデルを生成するとき、あなたは使用することができます &lt;code&gt;--migration&lt;/code&gt; または &lt;code&gt;-m&lt;/code&gt; オプションを：</target>
        </trans-unit>
        <trans-unit id="91f47600ac9839b3f7ccc87d8edb13577bed604a" translate="yes" xml:space="preserve">
          <source>If you would like to generate a &lt;code&gt;Symfony\Component\HttpFoundation\Cookie&lt;/code&gt; instance that can be given to a response instance at a later time, you may use the global &lt;code&gt;cookie&lt;/code&gt; helper. This cookie will not be sent back to the client unless it is attached to a response instance:</source>
          <target state="translated">後で応答インスタンスに &lt;code&gt;Symfony\Component\HttpFoundation\Cookie&lt;/code&gt; ことができるSymfony \ Component \ HttpFoundation \ Cookieインスタンスを生成する場合は、グローバル &lt;code&gt;cookie&lt;/code&gt; ヘルパーを使用できます。このCookieは、応答インスタンスに添付されていない限り、クライアントに送り返されません。</target>
        </trans-unit>
        <trans-unit id="701c468efc63995f491df054f0730a846390cfc0" translate="yes" xml:space="preserve">
          <source>If you would like to generate a temporary signed route URL that expires, you may use the &lt;code&gt;temporarySignedRoute&lt;/code&gt; method:</source>
          <target state="translated">期限切れの一時的な署名済みルートURLを生成する場合は、 &lt;code&gt;temporarySignedRoute&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="903dda9b08ca7831c5ad0f8b2df381ac6f4bd205" translate="yes" xml:space="preserve">
          <source>If you would like to get original name of the uploaded file, you may do so using the &lt;code&gt;getClientOriginalName&lt;/code&gt; method:</source>
          <target state="translated">If you would like to get original name of the uploaded file, you may do so using the &lt;code&gt;getClientOriginalName&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="f73edc096cb98b174efdba219dce25c2c8233887" translate="yes" xml:space="preserve">
          <source>If you would like to get the raw results before they are converted to Eloquent models, you should use the &lt;code&gt;raw&lt;/code&gt; method:</source>
          <target state="translated">Eloquentモデルに変換される前に生の結果を取得したい場合は、 &lt;code&gt;raw&lt;/code&gt; 方法を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="043974de4a476a4c50d0be001a52b3a689df524e" translate="yes" xml:space="preserve">
          <source>If you would like to grant all abilities to the token, you should include &lt;code&gt;*&lt;/code&gt; in the ability list provided to the &lt;code&gt;actingAs&lt;/code&gt; method:</source>
          <target state="translated">If you would like to grant all abilities to the token, you should include &lt;code&gt;*&lt;/code&gt; in the ability list provided to the &lt;code&gt;actingAs&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="01995b7164758789a2bd6a69e82fa59315e9954a" translate="yes" xml:space="preserve">
          <source>If you would like to handle anonymous queued listener failures, you may provide a Closure to the &lt;code&gt;catch&lt;/code&gt; method while defining the &lt;code&gt;queueable&lt;/code&gt; listener:</source>
          <target state="translated">If you would like to handle anonymous queued listener failures, you may provide a Closure to the &lt;code&gt;catch&lt;/code&gt; method while defining the &lt;code&gt;queueable&lt;/code&gt; listener:</target>
        </trans-unit>
        <trans-unit id="a171b35a65fe07fed7d6e1adbb43177bf9c9a225" translate="yes" xml:space="preserve">
          <source>If you would like to include related resources in your response, you may add them to the array returned by your &lt;code&gt;toArray&lt;/code&gt; method. In this example, we will use the &lt;code&gt;Post&lt;/code&gt; resource's &lt;code&gt;collection&lt;/code&gt; method to add the user's blog posts to the resource response:</source>
          <target state="translated">応答に関連リソースを含めたい場合は、 &lt;code&gt;toArray&lt;/code&gt; メソッドによって返された配列にそれらを追加できます。この例では、 &lt;code&gt;Post&lt;/code&gt; リソースの &lt;code&gt;collection&lt;/code&gt; メソッドを使用して、ユーザーのブログ投稿をリソースレスポンスに追加します。</target>
        </trans-unit>
        <trans-unit id="8c96f0fd22db1c54e8e40af577da91987c091c5d" translate="yes" xml:space="preserve">
          <source>If you would like to include relationships only when they have already been loaded, check out the documentation on &lt;a href=&quot;#conditional-relationships&quot;&gt;conditional relationships&lt;/a&gt;.</source>
          <target state="translated">既に読み込まれている場合にのみ関係を含める場合は、&lt;a href=&quot;#conditional-relationships&quot;&gt;条件付き関係&lt;/a&gt;に関するドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="ff79a8aa0b74d8de4e0fd6c5c21c9e04a7489775" translate="yes" xml:space="preserve">
          <source>If you would like to install a different version of ChromeDriver than what is included with Laravel Dusk, you may use the &lt;code&gt;dusk:chrome-driver&lt;/code&gt; command:</source>
          <target state="translated">If you would like to install a different version of ChromeDriver than what is included with Laravel Dusk, you may use the &lt;code&gt;dusk:chrome-driver&lt;/code&gt; command:</target>
        </trans-unit>
        <trans-unit id="f177cca973f3976b36fd7e8246da823f6cb97e13" translate="yes" xml:space="preserve">
          <source>If you would like to leave a channel and also its associated private and presence channels, you may call the &lt;code&gt;leave&lt;/code&gt; method:</source>
          <target state="translated">If you would like to leave a channel and also its associated private and presence channels, you may call the &lt;code&gt;leave&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="b3c92aea399952d3ec7a2f3382357162cd33fa0f" translate="yes" xml:space="preserve">
          <source>If you would like to limit the size of the returned slice, pass the desired size as the second argument to the method:</source>
          <target state="translated">返されるスライスのサイズを制限したい場合は、希望するサイズを第2引数としてメソッドに渡します。</target>
        </trans-unit>
        <trans-unit id="1b552473eae1b7d6365a237465ead6c558f766ce" translate="yes" xml:space="preserve">
          <source>If you would like to listen for events on a private channel, use the &lt;code&gt;private&lt;/code&gt; method instead. You may continue to chain calls to the &lt;code&gt;listen&lt;/code&gt; method to listen for multiple events on a single channel:</source>
          <target state="translated">プライベートチャネルでイベントをリッスンする場合は、代わりに &lt;code&gt;private&lt;/code&gt; メソッドを使用してください。単一のチャネルで複数のイベントをリッスンするために、 &lt;code&gt;listen&lt;/code&gt; メソッドへの呼び出しをチェーンし続けることができます。</target>
        </trans-unit>
        <trans-unit id="21e24dd9fa8c36b4bfef3419d56113bfb59c97a1" translate="yes" xml:space="preserve">
          <source>If you would like to make a &quot;one off&quot; charge against a customer, you may use the &lt;code&gt;charge&lt;/code&gt; method on a billable model instance to generate a pay link for the charge. The &lt;code&gt;charge&lt;/code&gt; method accepts the charge amount (float) as its first argument and a charge description as its second argument:</source>
          <target state="translated">If you would like to make a &quot;one off&quot; charge against a customer, you may use the &lt;code&gt;charge&lt;/code&gt; method on a billable model instance to generate a pay link for the charge. The &lt;code&gt;charge&lt;/code&gt; method accepts the charge amount (float) as its first argument and a charge description as its second argument:</target>
        </trans-unit>
        <trans-unit id="5c653530978d201589d6cfa3c9d902b592254f11" translate="yes" xml:space="preserve">
          <source>If you would like to make a &quot;one off&quot; charge against a specific product configured within Paddle, you may use the &lt;code&gt;chargeProduct&lt;/code&gt; method on a billable model instance to generate a pay link:</source>
          <target state="translated">If you would like to make a &quot;one off&quot; charge against a specific product configured within Paddle, you may use the &lt;code&gt;chargeProduct&lt;/code&gt; method on a billable model instance to generate a pay link:</target>
        </trans-unit>
        <trans-unit id="ac55512a715e92d8ceed634b4f01b4491665fe59" translate="yes" xml:space="preserve">
          <source>If you would like to make a &quot;one off&quot; charge against a subscribed customer's credit card, you may use the &lt;code&gt;charge&lt;/code&gt; method on a billable model instance.</source>
          <target state="translated">サブスクライブした顧客のクレジットカードに対して「1回限り」の請求を行う場合は、請求可能なモデルインスタンスで &lt;code&gt;charge&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="f2170b9536f7fcf511ec25a56ae1253581b8ce27" translate="yes" xml:space="preserve">
          <source>If you would like to make a &quot;one off&quot; charge against a subscribed customer's payment method, you may use the &lt;code&gt;charge&lt;/code&gt; method on a billable model instance. You'll need to &lt;a href=&quot;#storing-payment-methods&quot;&gt;provide a payment method identifier&lt;/a&gt; as the second argument:</source>
          <target state="translated">If you would like to make a &quot;one off&quot; charge against a subscribed customer's payment method, you may use the &lt;code&gt;charge&lt;/code&gt; method on a billable model instance. You'll need to &lt;a href=&quot;#storing-payment-methods&quot;&gt;provide a payment method identifier&lt;/a&gt; as the second argument:</target>
        </trans-unit>
        <trans-unit id="4f900cdf90c3fdef0814f7e08d4206db4d540d65" translate="yes" xml:space="preserve">
          <source>If you would like to make all attributes mass assignable, you may define the &lt;code&gt;$guarded&lt;/code&gt; property as an empty array:</source>
          <target state="translated">すべての属性を一括で割り当て可能にしたい場合は、 &lt;code&gt;$guarded&lt;/code&gt; プロパティを空の配列として定義できます。</target>
        </trans-unit>
        <trans-unit id="9f6a66802fc01a8eb40fe33897558e6d2c3ddc7e" translate="yes" xml:space="preserve">
          <source>If you would like to make some typically hidden attributes visible on a given model instance, you may use the &lt;code&gt;makeVisible&lt;/code&gt; method. The &lt;code&gt;makeVisible&lt;/code&gt; method returns the model instance for convenient method chaining:</source>
          <target state="translated">特定のモデルインスタンスで一般的に非表示になっている属性を表示したい場合は、 &lt;code&gt;makeVisible&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;makeVisible&lt;/code&gt; メソッドは便利なメソッドチェーンのためのモデルインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="055c0b0309f2007121809e6f22497fa40f115471" translate="yes" xml:space="preserve">
          <source>If you would like to make your views available for publishing to the application's &lt;code&gt;resources/views/vendor&lt;/code&gt; directory, you may use the service provider's &lt;code&gt;publishes&lt;/code&gt; method. The &lt;code&gt;publishes&lt;/code&gt; method accepts an array of package view paths and their desired publish locations:</source>
          <target state="translated">ビューをアプリケーションの &lt;code&gt;resources/views/vendor&lt;/code&gt; ディレクトリに &lt;code&gt;publishes&lt;/code&gt; できるようにしたい場合は、サービスプロバイダーのpublishesメソッドを使用できます。 &lt;code&gt;publishes&lt;/code&gt; 方法は、パッケージビューパスのアレイを受け入れ、それらの所望の位置を公開します。</target>
        </trans-unit>
        <trans-unit id="6b1a54deda4604275d64131ab0dc216857049660" translate="yes" xml:space="preserve">
          <source>If you would like to manually define the tags for one of your queueable objects, you may define a &lt;code&gt;tags&lt;/code&gt; method on the class:</source>
          <target state="translated">キュー可能なオブジェクトの1つのタグを手動で定義する場合は、クラスで &lt;code&gt;tags&lt;/code&gt; メソッドを定義できます。</target>
        </trans-unit>
        <trans-unit id="ed7bdaf127e4a9f766c2b6d897c10f87ea498aa7" translate="yes" xml:space="preserve">
          <source>If you would like to modify the query that is used to retrieve all of your models for batch importing, you may define a &lt;code&gt;makeAllSearchableUsing&lt;/code&gt; method on your model. This is a great place to add any eager relationship loading that may be necessary before importing your models:</source>
          <target state="translated">If you would like to modify the query that is used to retrieve all of your models for batch importing, you may define a &lt;code&gt;makeAllSearchableUsing&lt;/code&gt; method on your model. This is a great place to add any eager relationship loading that may be necessary before importing your models:</target>
        </trans-unit>
        <trans-unit id="87abfb727e32fd7ddecbdf00e1e60a3e719ef43f" translate="yes" xml:space="preserve">
          <source>If you would like to offer trial periods to your customers while still collecting payment method information up front, you should use the &lt;code&gt;trialDays&lt;/code&gt; method when creating your subscription pay links:</source>
          <target state="translated">If you would like to offer trial periods to your customers while still collecting payment method information up front, you should use the &lt;code&gt;trialDays&lt;/code&gt; method when creating your subscription pay links:</target>
        </trans-unit>
        <trans-unit id="fd1029f8c62030696d48671f6c760da567d39d70" translate="yes" xml:space="preserve">
          <source>If you would like to offer trial periods to your customers while still collecting payment method information up front, you should use the &lt;code&gt;trialDays&lt;/code&gt; method when creating your subscriptions:</source>
          <target state="translated">支払い方法情報を &lt;code&gt;trialDays&lt;/code&gt; 収集しながら、試用期間を顧客に提供したい場合は、サブスクリプションを作成するときにtrialDaysメソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="167e63eac6299be3cacb39a0d1a30a109d067aad" translate="yes" xml:space="preserve">
          <source>If you would like to offer trial periods without collecting the user's payment method information up front, you may set the &lt;code&gt;trial_ends_at&lt;/code&gt; column on the customer record attached to your user to your desired trial ending date. This is typically done during user registration:</source>
          <target state="translated">If you would like to offer trial periods without collecting the user's payment method information up front, you may set the &lt;code&gt;trial_ends_at&lt;/code&gt; column on the customer record attached to your user to your desired trial ending date. This is typically done during user registration:</target>
        </trans-unit>
        <trans-unit id="a05196ed88f3247cda0b27c2ec33c836cbd54c66" translate="yes" xml:space="preserve">
          <source>If you would like to offer trial periods without collecting the user's payment method information up front, you may set the &lt;code&gt;trial_ends_at&lt;/code&gt; column on the user record to your desired trial ending date. This is typically done during user registration:</source>
          <target state="translated">ユーザーのお支払い方法の情報を &lt;code&gt;trial_ends_at&lt;/code&gt; 収集せずに試用期間を提供したい場合は、ユーザーレコードのtrial_ends_at列を希望する試用終了日に設定できます。これは通常、ユーザー登録時に行われます。</target>
        </trans-unit>
        <trans-unit id="974bbbfe391778b14a6eb6b463431108e51fb506" translate="yes" xml:space="preserve">
          <source>If you would like to only generate the URL to the billing portal, you may use the &lt;code&gt;billingPortalUrl&lt;/code&gt; method:</source>
          <target state="translated">If you would like to only generate the URL to the billing portal, you may use the &lt;code&gt;billingPortalUrl&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="2ffa7368b8ff83860d161ded3a60f3f17acb37e2" translate="yes" xml:space="preserve">
          <source>If you would like to override some of the default values of your models, you may pass an array of values to the &lt;code&gt;make&lt;/code&gt; method. Only the specified values will be replaced while the rest of the values remain set to their default values as specified by the factory:</source>
          <target state="translated">モデルのデフォルト値の一部をオーバーライドする場合は、 &lt;code&gt;make&lt;/code&gt; メソッドに値の配列を渡すことができます。指定された値のみが置き換えられ、残りの値は工場で指定されたデフォルト値に設定されたままになります。</target>
        </trans-unit>
        <trans-unit id="dbefb7f6f59c2c7a16eed517cb80fcfdaed4c6f6" translate="yes" xml:space="preserve">
          <source>If you would like to perform a &quot;left join&quot; instead of an &quot;inner join&quot;, use the &lt;code&gt;leftJoin&lt;/code&gt; method. The &lt;code&gt;leftJoin&lt;/code&gt; method has the same signature as the &lt;code&gt;join&lt;/code&gt; method:</source>
          <target state="translated">「内部結合」の代わりに「左結合」を実行する場合は、 &lt;code&gt;leftJoin&lt;/code&gt; メソッドを使用します。 &lt;code&gt;leftJoin&lt;/code&gt; のような方法は、同じシグネチャを持つ &lt;code&gt;join&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="cdd1053a0d5d7ac2eef5b3d7e29311b5ed2b20c8" translate="yes" xml:space="preserve">
          <source>If you would like to perform a &quot;left join&quot; or &quot;right join&quot; instead of an &quot;inner join&quot;, use the &lt;code&gt;leftJoin&lt;/code&gt; or &lt;code&gt;rightJoin&lt;/code&gt; methods. These methods have the same signature as the &lt;code&gt;join&lt;/code&gt; method:</source>
          <target state="translated">If you would like to perform a &quot;left join&quot; or &quot;right join&quot; instead of an &quot;inner join&quot;, use the &lt;code&gt;leftJoin&lt;/code&gt; or &lt;code&gt;rightJoin&lt;/code&gt; methods. These methods have the same signature as the &lt;code&gt;join&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="b6f2c690a1259e7c92ed585948b8f14573749f6f" translate="yes" xml:space="preserve">
          <source>If you would like to perform multiple &quot;upserts&quot; in a single query, then you should use the &lt;code&gt;upsert&lt;/code&gt; method instead. The method's first argument consists of the values to insert or update, while the second argument lists the column(s) that uniquely identify records within the associated table. The method's third and final argument is an array of the columns that should be updated if a matching record already exists in the database. The &lt;code&gt;upsert&lt;/code&gt; method will automatically set the &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps if timestamps are enabled on the model:</source>
          <target state="translated">If you would like to perform multiple &quot;upserts&quot; in a single query, then you should use the &lt;code&gt;upsert&lt;/code&gt; method instead. The method's first argument consists of the values to insert or update, while the second argument lists the column(s) that uniquely identify records within the associated table. The method's third and final argument is an array of the columns that should be updated if a matching record already exists in the database. The &lt;code&gt;upsert&lt;/code&gt; method will automatically set the &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps if timestamps are enabled on the model:</target>
        </trans-unit>
        <trans-unit id="97b13be7c347f250c52f601a1ea3a7837ef300bc" translate="yes" xml:space="preserve">
          <source>If you would like to perform some additional logic before the exception is thrown, you may pass a Closure to the &lt;code&gt;throw&lt;/code&gt; method. The exception will be thrown automatically after the Closure is invoked, so you do not need to re-throw the exception from within the Closure:</source>
          <target state="translated">If you would like to perform some additional logic before the exception is thrown, you may pass a Closure to the &lt;code&gt;throw&lt;/code&gt; method. The exception will be thrown automatically after the Closure is invoked, so you do not need to re-throw the exception from within the Closure:</target>
        </trans-unit>
        <trans-unit id="870c58f25f2ff28b1ae334fbd1a6fb67d1322e73" translate="yes" xml:space="preserve">
          <source>If you would like to pre-define the host for file URLs generated using the &lt;code&gt;Storage&lt;/code&gt; facade, you may add a &lt;code&gt;url&lt;/code&gt; option to the disk's configuration array:</source>
          <target state="translated">If you would like to pre-define the host for file URLs generated using the &lt;code&gt;Storage&lt;/code&gt; facade, you may add a &lt;code&gt;url&lt;/code&gt; option to the disk's configuration array:</target>
        </trans-unit>
        <trans-unit id="a4b1fde44e53e873e5bea13a06794d6aab411c71" translate="yes" xml:space="preserve">
          <source>If you would like to pre-define the host for files stored on a disk using the &lt;code&gt;local&lt;/code&gt; driver, you may add a &lt;code&gt;url&lt;/code&gt; option to the disk's configuration array:</source>
          <target state="translated">&lt;code&gt;local&lt;/code&gt; ドライバを使用してディスクに保存されているファイルのホストを事前定義する場合は、ディスクの構成配列に &lt;code&gt;url&lt;/code&gt; オプションを追加できます。</target>
        </trans-unit>
        <trans-unit id="f3d1abfc82261f0fceab61726034ef4dd4828bda" translate="yes" xml:space="preserve">
          <source>If you would like to prepend content onto the beginning of a stack, you should use the &lt;code&gt;@prepend&lt;/code&gt; directive:</source>
          <target state="translated">スタックの先頭にコンテンツを &lt;code&gt;@prepend&lt;/code&gt; する場合は、@ prependディレクティブを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="55ab7645941f437cbae4de768b87c647f534fa4e" translate="yes" xml:space="preserve">
          <source>If you would like to prevent Cashier's migrations from running entirely, you may use the &lt;code&gt;ignoreMigrations&lt;/code&gt; provided by Cashier. Typically, this method should be called in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">If you would like to prevent Cashier's migrations from running entirely, you may use the &lt;code&gt;ignoreMigrations&lt;/code&gt; provided by Cashier. Typically, this method should be called in the &lt;code&gt;register&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="da21cadfa8625612c7681e8b967239b6067250aa" translate="yes" xml:space="preserve">
          <source>If you would like to provide &quot;remember me&quot; functionality in your application, you may pass a boolean value as the second argument to the &lt;code&gt;attempt&lt;/code&gt; method, which will keep the user authenticated indefinitely, or until they manually logout. Of course, your &lt;code&gt;users&lt;/code&gt; table must include the string &lt;code&gt;remember_token&lt;/code&gt; column, which will be used to store the &quot;remember me&quot; token.</source>
          <target state="translated">アプリケーションに「remember me」機能を提供する場合は、ブール値を2番目の引数として &lt;code&gt;attempt&lt;/code&gt; メソッドに渡すことができます。これにより、ユーザーが無期限に、または手動でログアウトするまで、ユーザーの認証が維持されます。もちろん、 &lt;code&gt;users&lt;/code&gt; テーブルには、「remember me」トークンを格納するために使用される文字列 &lt;code&gt;remember_token&lt;/code&gt; 列を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="aea2f4e6c729b4f4a5bd0161d3591eb74e3715aa" translate="yes" xml:space="preserve">
          <source>If you would like to provide &quot;remember me&quot; functionality in your application, you may pass a boolean value as the second argument to the &lt;code&gt;attempt&lt;/code&gt; method, which will keep the user authenticated indefinitely, or until they manually logout. Your &lt;code&gt;users&lt;/code&gt; table must include the string &lt;code&gt;remember_token&lt;/code&gt; column, which will be used to store the &quot;remember me&quot; token.</source>
          <target state="translated">If you would like to provide &quot;remember me&quot; functionality in your application, you may pass a boolean value as the second argument to the &lt;code&gt;attempt&lt;/code&gt; method, which will keep the user authenticated indefinitely, or until they manually logout. Your &lt;code&gt;users&lt;/code&gt; table must include the string &lt;code&gt;remember_token&lt;/code&gt; column, which will be used to store the &quot;remember me&quot; token.</target>
        </trans-unit>
        <trans-unit id="ff83722006e4e2d0cefcec998fb131a27334cb7d" translate="yes" xml:space="preserve">
          <source>If you would like to provide your own policy discovery logic, you may register a custom callback using the &lt;code&gt;Gate::guessPolicyNamesUsing&lt;/code&gt; method. Typically, this method should be called from the &lt;code&gt;boot&lt;/code&gt; method of your application's &lt;code&gt;AuthServiceProvider&lt;/code&gt;:</source>
          <target state="translated">If you would like to provide your own policy discovery logic, you may register a custom callback using the &lt;code&gt;Gate::guessPolicyNamesUsing&lt;/code&gt; method. Typically, this method should be called from the &lt;code&gt;boot&lt;/code&gt; method of your application's &lt;code&gt;AuthServiceProvider&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d91be89888717c06be7f404927f7718f946db9f3" translate="yes" xml:space="preserve">
          <source>If you would like to publish your package's translations to the application's &lt;code&gt;resources/lang/vendor&lt;/code&gt; directory, you may use the service provider's &lt;code&gt;publishes&lt;/code&gt; method. The &lt;code&gt;publishes&lt;/code&gt; method accepts an array of package paths and their desired publish locations. For example, to publish the translation files for the &lt;code&gt;courier&lt;/code&gt; package, you may do the following:</source>
          <target state="translated">パッケージの翻訳をアプリケーションの &lt;code&gt;resources/lang/vendor&lt;/code&gt; ディレクトリに &lt;code&gt;publishes&lt;/code&gt; する場合は、サービスプロバイダーのpublishesメソッドを使用できます。 &lt;code&gt;publishes&lt;/code&gt; 方法は、パッケージのパスの配列を受け取り、それらの所望の位置を公開します。たとえば、 &lt;code&gt;courier&lt;/code&gt; パッケージの翻訳ファイルを公開するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="15421ba4ae5373031f839694e56d856200aa7391" translate="yes" xml:space="preserve">
          <source>If you would like to quickly add an &lt;code&gt;Authorization&lt;/code&gt; bearer token header to the request, you may use the &lt;code&gt;withToken&lt;/code&gt; method:</source>
          <target state="translated">If you would like to quickly add an &lt;code&gt;Authorization&lt;/code&gt; bearer token header to the request, you may use the &lt;code&gt;withToken&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="b136d451592d28fcb1c5005c88043beb17f0556b" translate="yes" xml:space="preserve">
          <source>If you would like to rate limit your own routes, check out the &lt;a href=&quot;routing#rate-limiting&quot;&gt;rate limiting documentation&lt;/a&gt;.</source>
          <target state="translated">If you would like to rate limit your own routes, check out the &lt;a href=&quot;routing#rate-limiting&quot;&gt;rate limiting documentation&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="cea8fae799115aa48665a53652c8336ac933e318" translate="yes" xml:space="preserve">
          <source>If you would like to receive each SQL query executed by your application, you may use the &lt;code&gt;listen&lt;/code&gt; method. This method is useful for logging queries or debugging. You may register your query listener in a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;:</source>
          <target state="translated">アプリケーションによって実行される各SQLクエリを受け取りたい場合は、 &lt;code&gt;listen&lt;/code&gt; メソッドを使用できます。このメソッドは、クエリのロギングやデバッグに役立ちます。クエリリスナーを&lt;a href=&quot;providers&quot;&gt;サービスプロバイダーに&lt;/a&gt;登録できます。</target>
        </trans-unit>
        <trans-unit id="91a3a86cdd7cfadaf84bfa3677b9eeed5d06d62e" translate="yes" xml:space="preserve">
          <source>If you would like to register an event that will be called when a job fails, you may use the &lt;code&gt;Queue::failing&lt;/code&gt; method. This event is a great opportunity to notify your team via email or &lt;a href=&quot;https://www.slack.com&quot;&gt;Slack&lt;/a&gt;. For example, we may attach a callback to this event from the &lt;code&gt;AppServiceProvider&lt;/code&gt; that is included with Laravel:</source>
          <target state="translated">If you would like to register an event that will be called when a job fails, you may use the &lt;code&gt;Queue::failing&lt;/code&gt; method. This event is a great opportunity to notify your team via email or &lt;a href=&quot;https://www.slack.com&quot;&gt;Slack&lt;/a&gt;. For example, we may attach a callback to this event from the &lt;code&gt;AppServiceProvider&lt;/code&gt; that is included with Laravel:</target>
        </trans-unit>
        <trans-unit id="733ab538b1ff98831f8cbaa7c832b6a68fd5f41a" translate="yes" xml:space="preserve">
          <source>If you would like to register an event that will be called when a job fails, you may use the &lt;code&gt;Queue::failing&lt;/code&gt; method. This event is a great opportunity to notify your team via email or &lt;a href=&quot;https://www.stride.com&quot;&gt;Stride&lt;/a&gt;. For example, we may attach a callback to this event from the &lt;code&gt;AppServiceProvider&lt;/code&gt; that is included with Laravel:</source>
          <target state="translated">ジョブが失敗したときに呼び出されるイベントを登録する場合は、 &lt;code&gt;Queue::failing&lt;/code&gt; メソッドを使用できます。このイベントは、メールまたは&lt;a href=&quot;https://www.stride.com&quot;&gt;ストライドで&lt;/a&gt;チームに通知する絶好の機会です。たとえば、Laravelに含まれている &lt;code&gt;AppServiceProvider&lt;/code&gt; からこのイベントにコールバックをアタッチできます。</target>
        </trans-unit>
        <trans-unit id="2badd2842d397d1a50aac791a1aefcb409ba3ae5" translate="yes" xml:space="preserve">
          <source>If you would like to release a lock without respecting its current owner, you may use the &lt;code&gt;forceRelease&lt;/code&gt; method:</source>
          <target state="translated">If you would like to release a lock without respecting its current owner, you may use the &lt;code&gt;forceRelease&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="95356c895a10eae745423ccfeb5043886fca2b9d" translate="yes" xml:space="preserve">
          <source>If you would like to remove a global scope for a given query, you may use the &lt;code&gt;withoutGlobalScope&lt;/code&gt; method. The method accepts the class name of the global scope as its only argument:</source>
          <target state="translated">特定のクエリのグローバルスコープを削除する場合は、 &lt;code&gt;withoutGlobalScope&lt;/code&gt; メソッドを使用できます。このメソッドは、グローバルスコープのクラス名を唯一の引数として受け入れます。</target>
        </trans-unit>
        <trans-unit id="98bf441d7a97304437c7faccc761a79eb2b37223" translate="yes" xml:space="preserve">
          <source>If you would like to remove an item from the &lt;code&gt;$with&lt;/code&gt; property for a single query, you may use the &lt;code&gt;without&lt;/code&gt; method:</source>
          <target state="translated">If you would like to remove an item from the &lt;code&gt;$with&lt;/code&gt; property for a single query, you may use the &lt;code&gt;without&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="3d4033d9e1e954c0c7cece20f97bac2195e852c1" translate="yes" xml:space="preserve">
          <source>If you would like to remove several or even all of the global scopes, you may use the &lt;code&gt;withoutGlobalScopes&lt;/code&gt; method:</source>
          <target state="translated">複数またはすべてのグローバルスコープを削除する場合は、 &lt;code&gt;withoutGlobalScopes&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="73fb0f01fad59b86138c835e8622cefc6fe64080" translate="yes" xml:space="preserve">
          <source>If you would like to remove the frontend scaffolding from your application, you may use the &lt;code&gt;preset&lt;/code&gt; Artisan command. This command, when combined with the &lt;code&gt;none&lt;/code&gt; option, will remove the Bootstrap and Vue scaffolding from your application, leaving only a blank SASS file and a few common JavaScript utility libraries:</source>
          <target state="translated">アプリケーションからフロントエンドの足場を削除したい場合は、 &lt;code&gt;preset&lt;/code&gt; Artisanコマンドを使用できます。このコマンドを &lt;code&gt;none&lt;/code&gt; オプションと組み合わせると、アプリケーションからBootstrapおよびVueスキャフォールディングが削除され、空のSASSファイルといくつかの一般的なJavaScriptユーティリティライブラリのみが残ります。</target>
        </trans-unit>
        <trans-unit id="eb91002cd4e4e60df3ece9c4ed7ba31bdede6416" translate="yes" xml:space="preserve">
          <source>If you would like to retrieve a Collection containing the values of a single column, you may use the &lt;code&gt;pluck&lt;/code&gt; method. In this example, we'll retrieve a Collection of role titles:</source>
          <target state="translated">1つの列の値を含むコレクションを取得する場合は、 &lt;code&gt;pluck&lt;/code&gt; メソッドを使用できます。この例では、役割のタイトルのコレクションを取得します。</target>
        </trans-unit>
        <trans-unit id="68e5ea6b7fb0ff4f82f206d91dbdd00e18b4d2d5" translate="yes" xml:space="preserve">
          <source>If you would like to retrieve all the data in the session, you may use the &lt;code&gt;all&lt;/code&gt; method:</source>
          <target state="translated">セッションのすべてのデータを取得したい場合は、 &lt;code&gt;all&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="4454154d82dd97b42b99ac9731fa8311e5341ddd" translate="yes" xml:space="preserve">
          <source>If you would like to send data using the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; content type, you should call the &lt;code&gt;asForm&lt;/code&gt; method before making your request:</source>
          <target state="translated">If you would like to send data using the &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; content type, you should call the &lt;code&gt;asForm&lt;/code&gt; method before making your request:</target>
        </trans-unit>
        <trans-unit id="8c7785f616aa623faff27a872c4b95fd25a208f1" translate="yes" xml:space="preserve">
          <source>If you would like to send files as multi-part requests, you should call the &lt;code&gt;attach&lt;/code&gt; method before making your request. This method accepts the name of the file and its contents. Optionally, you may provide a third argument which will be considered the file's filename:</source>
          <target state="translated">If you would like to send files as multi-part requests, you should call the &lt;code&gt;attach&lt;/code&gt; method before making your request. This method accepts the name of the file and its contents. Optionally, you may provide a third argument which will be considered the file's filename:</target>
        </trans-unit>
        <trans-unit id="42ef92b2a7718cff60802c6853330757f55b6a78" translate="yes" xml:space="preserve">
          <source>If you would like to send some notifications from a phone number that is different from the phone number specified in your &lt;code&gt;config/services.php&lt;/code&gt; file, you may use the &lt;code&gt;from&lt;/code&gt; method on a &lt;code&gt;NexmoMessage&lt;/code&gt; instance:</source>
          <target state="translated">&lt;code&gt;config/services.php&lt;/code&gt; ファイルで指定された電話番号とは異なる電話番号から通知を送信したい場合は、 &lt;code&gt;NexmoMessage&lt;/code&gt; インスタンスで &lt;code&gt;from&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="8cefb5afe070ba9d04a0de67bb7a17e135fee8f1" translate="yes" xml:space="preserve">
          <source>If you would like to set a specific quantity for the plan when creating the subscription, you may use the &lt;code&gt;quantity&lt;/code&gt; method:</source>
          <target state="translated">If you would like to set a specific quantity for the plan when creating the subscription, you may use the &lt;code&gt;quantity&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="8be9cc49709e5b354184fc4ea75eaabfb920bca5" translate="yes" xml:space="preserve">
          <source>If you would like to specify a custom output path for the generated migration, you may use the &lt;code&gt;--path&lt;/code&gt; option when executing the &lt;code&gt;make:migration&lt;/code&gt; command. The given path should be relative to your application's base path.</source>
          <target state="translated">生成された移行のカスタム出力パスを指定する場合は、 &lt;code&gt;make:migration&lt;/code&gt; コマンドを実行するときに &lt;code&gt;--path&lt;/code&gt; オプションを使用できます。指定するパスは、アプリケーションのベースパスからの相対パスである必要があります。</target>
        </trans-unit>
        <trans-unit id="723fe0de30a12cecc2a4d7332dd81431e344499e" translate="yes" xml:space="preserve">
          <source>If you would like to specify a fallback URL pattern that will stub all unmatched URLs, you may use a single &lt;code&gt;*&lt;/code&gt; character:</source>
          <target state="translated">If you would like to specify a fallback URL pattern that will stub all unmatched URLs, you may use a single &lt;code&gt;*&lt;/code&gt; character:</target>
        </trans-unit>
        <trans-unit id="12ffc4099e2d89fad4252bd6ada8563881cc5b7d" translate="yes" xml:space="preserve">
          <source>If you would like to specify a specific queue that should be used for each notification channel supported by the notification, you may define a &lt;code&gt;viaQueues&lt;/code&gt; method on your notification. This method should return an array of channel name / queue name pairs:</source>
          <target state="translated">If you would like to specify a specific queue that should be used for each notification channel supported by the notification, you may define a &lt;code&gt;viaQueues&lt;/code&gt; method on your notification. This method should return an array of channel name / queue name pairs:</target>
        </trans-unit>
        <trans-unit id="33133e40da438e037302c7c044a80dcfea584354" translate="yes" xml:space="preserve">
          <source>If you would like to specify additional customer details, you may do so by passing them as the second argument to the &lt;code&gt;create&lt;/code&gt; method:</source>
          <target state="translated">追加の顧客の詳細を指定する場合は、それらを &lt;code&gt;create&lt;/code&gt; メソッドの2番目の引数として渡すことで指定できます。</target>
        </trans-unit>
        <trans-unit id="34050368611abee4841bcbbbbe753b3b231db450" translate="yes" xml:space="preserve">
          <source>If you would like to specify additional customer or subscription details, you may do so by passing them as a key / value array to the &lt;code&gt;create&lt;/code&gt; method:</source>
          <target state="translated">If you would like to specify additional customer or subscription details, you may do so by passing them as a key / value array to the &lt;code&gt;create&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="dd970e53bc2e048260160dd5f28aeeb16aee84d5" translate="yes" xml:space="preserve">
          <source>If you would like to specify additional customer or subscription details, you may do so by passing them as the second and third arguments to the &lt;code&gt;create&lt;/code&gt; method:</source>
          <target state="translated">If you would like to specify additional customer or subscription details, you may do so by passing them as the second and third arguments to the &lt;code&gt;create&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="5e6e96bf7233eeda18aaaa997e1297f6c02f9215" translate="yes" xml:space="preserve">
          <source>If you would like to specify the connection and queue that should be used for the batched jobs, you may use the &lt;code&gt;onConnection&lt;/code&gt; and &lt;code&gt;onQueue&lt;/code&gt; methods:</source>
          <target state="translated">If you would like to specify the connection and queue that should be used for the batched jobs, you may use the &lt;code&gt;onConnection&lt;/code&gt; and &lt;code&gt;onQueue&lt;/code&gt; methods:</target>
        </trans-unit>
        <trans-unit id="0326ae50c354aedd6caf425f0b3486b54c1b9587" translate="yes" xml:space="preserve">
          <source>If you would like to specify the connection and queue that should be used for the chained jobs, you may use the &lt;code&gt;onConnection&lt;/code&gt; and &lt;code&gt;onQueue&lt;/code&gt; methods. These methods specify the queue connection and queue name that should be used unless the queued job is explicitly assigned a different connection / queue:</source>
          <target state="translated">If you would like to specify the connection and queue that should be used for the chained jobs, you may use the &lt;code&gt;onConnection&lt;/code&gt; and &lt;code&gt;onQueue&lt;/code&gt; methods. These methods specify the queue connection and queue name that should be used unless the queued job is explicitly assigned a different connection / queue:</target>
        </trans-unit>
        <trans-unit id="70878f137f8743310a6d1d72390873480da7908c" translate="yes" xml:space="preserve">
          <source>If you would like to specify the default connection and queue that should be used for the chained jobs, you may use the &lt;code&gt;allOnConnection&lt;/code&gt; and &lt;code&gt;allOnQueue&lt;/code&gt; methods. These methods specify the queue connection and queue name that should be used unless the queued job is explicitly assigned a different connection / queue:</source>
          <target state="translated">あなたがチェーンジョブに使用するデフォルトの接続およびキューを指定したい場合は、使用すること &lt;code&gt;allOnConnection&lt;/code&gt; と &lt;code&gt;allOnQueue&lt;/code&gt; 方法を。これらのメソッドは、キューに接続されたジョブに明示的に別の接続/キューが割り当てられていない限り、使用するキュー接続とキュー名を指定します。</target>
        </trans-unit>
        <trans-unit id="73eedcd290290a41ef0783811a7f829a64e118cd" translate="yes" xml:space="preserve">
          <source>If you would like to stop iterating through the items, you may return &lt;code&gt;false&lt;/code&gt; from your callback:</source>
          <target state="translated">アイテムの反復処理を停止したい場合は、コールバックから &lt;code&gt;false&lt;/code&gt; を返すことができます。</target>
        </trans-unit>
        <trans-unit id="14c04116fbfcf959505a557dac843892e2031146" translate="yes" xml:space="preserve">
          <source>If you would like to swap plans and cancel any trial period the user is currently on, you may use the &lt;code&gt;skipTrial&lt;/code&gt; method:</source>
          <target state="translated">プランを交換して、ユーザーが現在使用している試用期間をキャンセルする場合は、 &lt;code&gt;skipTrial&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="4f998442c239b5f1cd7c462b655b50b109a29953" translate="yes" xml:space="preserve">
          <source>If you would like to swap plans and immediately invoice the user instead of waiting for their next billing cycle, you may use the &lt;code&gt;swapAndInvoice&lt;/code&gt; method:</source>
          <target state="translated">If you would like to swap plans and immediately invoice the user instead of waiting for their next billing cycle, you may use the &lt;code&gt;swapAndInvoice&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="775e75893d57f7f7cf362d436769b0ec21c82127" translate="yes" xml:space="preserve">
          <source>If you would like to take total control over how the container injects dependencies into the &lt;code&gt;handle&lt;/code&gt; method, you may use the container's &lt;code&gt;bindMethod&lt;/code&gt; method. The &lt;code&gt;bindMethod&lt;/code&gt; method accepts a callback which receives the job and the container. Within the callback, you are free to invoke the &lt;code&gt;handle&lt;/code&gt; method however you wish. Typically, you should call this method from a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;:</source>
          <target state="translated">If you would like to take total control over how the container injects dependencies into the &lt;code&gt;handle&lt;/code&gt; method, you may use the container's &lt;code&gt;bindMethod&lt;/code&gt; method. The &lt;code&gt;bindMethod&lt;/code&gt; method accepts a callback which receives the job and the container. Within the callback, you are free to invoke the &lt;code&gt;handle&lt;/code&gt; method however you wish. Typically, you should call this method from a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="c40d652eef0773768508fd5edcdc0aebba4fd4c4" translate="yes" xml:space="preserve">
          <source>If you would like to update quantities on individual subscription plans, you may do so using the &lt;a href=&quot;#subscription-quantity&quot;&gt;existing quantity methods&lt;/a&gt; and passing the name of the plan as an additional argument to the method:</source>
          <target state="translated">If you would like to update quantities on individual subscription plans, you may do so using the &lt;a href=&quot;#subscription-quantity&quot;&gt;existing quantity methods&lt;/a&gt; and passing the name of the plan as an additional argument to the method:</target>
        </trans-unit>
        <trans-unit id="1bce4b085ff704eb7f6894d77618ceca03ef26d0" translate="yes" xml:space="preserve">
          <source>If you would like to use &lt;a href=&quot;seeding&quot;&gt;database seeders&lt;/a&gt; to populate your database during a feature test, you may use the &lt;code&gt;seed&lt;/code&gt; method. By default, the &lt;code&gt;seed&lt;/code&gt; method will return the &lt;code&gt;DatabaseSeeder&lt;/code&gt;, which should execute all of your other seeders. Alternatively, you pass a specific seeder class name to the &lt;code&gt;seed&lt;/code&gt; method:</source>
          <target state="translated">If you would like to use &lt;a href=&quot;seeding&quot;&gt;database seeders&lt;/a&gt; to populate your database during a feature test, you may use the &lt;code&gt;seed&lt;/code&gt; method. By default, the &lt;code&gt;seed&lt;/code&gt; method will return the &lt;code&gt;DatabaseSeeder&lt;/code&gt; , which should execute all of your other seeders. Alternatively, you pass a specific seeder class name to the &lt;code&gt;seed&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="a66d80e1b625c54a6bebca25148dce75952cdf45" translate="yes" xml:space="preserve">
          <source>If you would like to use UUIDs as the primary key value of the Passport &lt;code&gt;Client&lt;/code&gt; model instead of auto-incrementing integers, please install Passport using &lt;a href=&quot;#client-uuids&quot;&gt;the &lt;code&gt;uuids&lt;/code&gt; option&lt;/a&gt;.</source>
          <target state="translated">If you would like to use UUIDs as the primary key value of the Passport &lt;code&gt;Client&lt;/code&gt; model instead of auto-incrementing integers, please install Passport using &lt;a href=&quot;#client-uuids&quot;&gt;the &lt;code&gt;uuids&lt;/code&gt; option&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="61896fd24a149de7683ab62195f08e6f444d523a" translate="yes" xml:space="preserve">
          <source>If you would like to use a &quot;where&quot; style clause on your joins, you may use the &lt;code&gt;where&lt;/code&gt; and &lt;code&gt;orWhere&lt;/code&gt; methods on a join. Instead of comparing two columns, these methods will compare the column against a value:</source>
          <target state="translated">結合で「where」スタイル句を使用する場合は、結合で &lt;code&gt;where&lt;/code&gt; および &lt;code&gt;orWhere&lt;/code&gt; メソッドを使用できます。2つの列を比較する代わりに、これらのメソッドは列を値と比較します。</target>
        </trans-unit>
        <trans-unit id="73c70179552accfc75274c285d87ec378bef2adc" translate="yes" xml:space="preserve">
          <source>If you would like to use a custom key instead of &lt;code&gt;data&lt;/code&gt;, you may define a &lt;code&gt;$wrap&lt;/code&gt; attribute on the resource class:</source>
          <target state="translated">If you would like to use a custom key instead of &lt;code&gt;data&lt;/code&gt; , you may define a &lt;code&gt;$wrap&lt;/code&gt; attribute on the resource class:</target>
        </trans-unit>
        <trans-unit id="2c41de2272cd123822f5ded33ac95e534f63e95b" translate="yes" xml:space="preserve">
          <source>If you would like to use an open source, PHP driven alternative to Pusher, check out the &lt;a href=&quot;https://github.com/beyondcode/laravel-websockets&quot;&gt;laravel-websockets&lt;/a&gt; package.</source>
          <target state="translated">If you would like to use an open source, PHP driven alternative to Pusher, check out the &lt;a href=&quot;https://github.com/beyondcode/laravel-websockets&quot;&gt;laravel-websockets&lt;/a&gt; package.</target>
        </trans-unit>
        <trans-unit id="76f205a5af6eeec5522fa9bab583b500d0897a78" translate="yes" xml:space="preserve">
          <source>If you would like to use other delivery channels such as Telegram or Pusher, check out the community driven &lt;a href=&quot;http://laravel-notification-channels.com&quot;&gt;Laravel Notification Channels website&lt;/a&gt;.</source>
          <target state="translated">TelegramやPusherなどの他の配信チャネルを使用する場合は、コミュニティ主導の&lt;a href=&quot;http://laravel-notification-channels.com&quot;&gt;Laravel通知チャネルWebサイトを&lt;/a&gt;確認してください。</target>
        </trans-unit>
        <trans-unit id="3af57e410743b4075607629b82499174d0da6577" translate="yes" xml:space="preserve">
          <source>If you would like to verify that the JSON response contains some given data at a specified path, you should use the &lt;code&gt;assertJsonPath&lt;/code&gt; method:</source>
          <target state="translated">If you would like to verify that the JSON response contains some given data at a specified path, you should use the &lt;code&gt;assertJsonPath&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="42a2d3c7e842845d5261db1323ee659b0f68b5e0" translate="yes" xml:space="preserve">
          <source>If you would like to verify that the given array is an &lt;strong&gt;exact&lt;/strong&gt; match for the JSON returned by the application, you should use the &lt;code&gt;assertExactJson&lt;/code&gt; method:</source>
          <target state="translated">指定された配列がアプリケーションから返されたJSONと&lt;strong&gt;完全に&lt;/strong&gt;一致することを確認する場合は、 &lt;code&gt;assertExactJson&lt;/code&gt; メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="eeec76dd3ad5dab88d9b2cc97dd9a53bf92dc622" translate="yes" xml:space="preserve">
          <source>If you would like your client's secrets to be hashed when stored in your database, you should call the &lt;code&gt;Passport::hashClientSecrets&lt;/code&gt; method in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">If you would like your client's secrets to be hashed when stored in your database, you should call the &lt;code&gt;Passport::hashClientSecrets&lt;/code&gt; method in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="ce6f95cae3dad1254694f4367a45a6ae77103f22" translate="yes" xml:space="preserve">
          <source>If you would not like a file name to be automatically assigned to your stored file, you may use the &lt;code&gt;storeAs&lt;/code&gt; method, which receives the path, the file name, and the (optional) disk as its arguments:</source>
          <target state="translated">保存したファイルにファイル名を自動的に割り当てたくない場合は、 &lt;code&gt;storeAs&lt;/code&gt; メソッドを使用できます。このメソッドは、パス、ファイル名、および（オプションの）ディスクを引数として受け取ります。</target>
        </trans-unit>
        <trans-unit id="067777849480b0e65851db89323b62e4d672e188" translate="yes" xml:space="preserve">
          <source>If you're combining &lt;code&gt;withCount&lt;/code&gt; with a &lt;code&gt;select&lt;/code&gt; statement, ensure that you call &lt;code&gt;withCount&lt;/code&gt; after the &lt;code&gt;select&lt;/code&gt; method:</source>
          <target state="translated">If you're combining &lt;code&gt;withCount&lt;/code&gt; with a &lt;code&gt;select&lt;/code&gt; statement, ensure that you call &lt;code&gt;withCount&lt;/code&gt; after the &lt;code&gt;select&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="a5bd380ac70ee43ed5a8ac2c2fed4292f3ab4425" translate="yes" xml:space="preserve">
          <source>If you're only performing &quot;one-off&quot; charges and do not offer subscriptions, you should not use Cashier. Instead, use the Stripe and Braintree SDKs directly.</source>
          <target state="translated">もしあなたが「1回限りの」課金のみを行っていて、サブスクリプションを提供していないのであれば、Cashierを使うべきではありません。その代わり、StripeとBraintree SDKを直接使用してください。</target>
        </trans-unit>
        <trans-unit id="012e9281b85d4a8f9efdc9720885842d889240d2" translate="yes" xml:space="preserve">
          <source>If you're using a model other than Laravel's supplied &lt;code&gt;App\Models\User&lt;/code&gt; model, you'll need to publish and alter the &lt;a href=&quot;#installation&quot;&gt;migrations&lt;/a&gt; provided to match your alternative model's table name.</source>
          <target state="translated">If you're using a model other than Laravel's supplied &lt;code&gt;App\Models\User&lt;/code&gt; model, you'll need to publish and alter the &lt;a href=&quot;#installation&quot;&gt;migrations&lt;/a&gt; provided to match your alternative model's table name.</target>
        </trans-unit>
        <trans-unit id="e7007e623ebde7b08310ad0f30ec23ff7fac3eec" translate="yes" xml:space="preserve">
          <source>If you're wondering where to put your custom cache driver code, you could create an &lt;code&gt;Extensions&lt;/code&gt; namespace within your &lt;code&gt;app&lt;/code&gt; directory. However, keep in mind that Laravel does not have a rigid application structure and you are free to organize your application according to your preferences.</source>
          <target state="translated">カスタムキャッシュドライバーのコードをどこに置くか迷っている場合は、 &lt;code&gt;app&lt;/code&gt; ディレクトリ内に &lt;code&gt;Extensions&lt;/code&gt; 名前空間を作成できます。ただし、Laravelには厳密なアプリケーション構造がないため、好みに応じてアプリケーションを自由に整理できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="cf9b475cecebccc3a82d2ebbaeec48d7554f91e5" translate="yes" xml:space="preserve">
          <source>If you've ever been confused and overwhelmed about getting started with Webpack and asset compilation, you will love Laravel Mix. However, you are not required to use it while developing your application. Of course, you are free to use any asset pipeline tool you wish, or even none at all.</source>
          <target state="translated">Webpackやアセットのコンパイルを始めることに戸惑いや圧倒されたことがある人は、Laravel Mixが大好きになるでしょう。しかし、アプリケーションを開発している間は必ず使用しなければならないわけではありません。もちろん、好きなアセットパイプラインツールを使ってもいいですし、全く使わなくても構いません。</target>
        </trans-unit>
        <trans-unit id="f39abd5d8936b90dfad88cdea4cb03762a3e40e5" translate="yes" xml:space="preserve">
          <source>If you've ever been confused and overwhelmed about getting started with Webpack and asset compilation, you will love Laravel Mix. However, you are not required to use it while developing your application; you are free to use any asset pipeline tool you wish, or even none at all.</source>
          <target state="translated">Webpackやアセットのコンパイルを始めることに戸惑いや圧倒されたことがある人は、Laravel Mixが大好きになるでしょう。しかし、アプリケーションを開発している間にLaravel Mixを使用する必要はなく、好きなアセットパイプラインツールを自由に使用することができます。</target>
        </trans-unit>
        <trans-unit id="8e92b242a0d3efb0d1b90c5c8efcde6e10127099" translate="yes" xml:space="preserve">
          <source>If your Blade components are stored in a sub-directory, you may wish to alias them for easier access. For example, imagine a Blade component that is stored at &lt;code&gt;resources/views/components/alert.blade.php&lt;/code&gt;. You may use the &lt;code&gt;component&lt;/code&gt; method to alias the component from &lt;code&gt;components.alert&lt;/code&gt; to &lt;code&gt;alert&lt;/code&gt;. Typically, this should be done in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">ブレードコンポーネントがサブディレクトリに保存されている場合は、アクセスを容易にするために、それらにエイリアスを付けることができます。たとえば、 &lt;code&gt;resources/views/components/alert.blade.php&lt;/code&gt; に保存されているブレードコンポーネントを想像してください。あなたは使用することができます &lt;code&gt;component&lt;/code&gt; からコンポーネントの別名にメソッドを &lt;code&gt;components.alert&lt;/code&gt; に &lt;code&gt;alert&lt;/code&gt; 。通常、これは &lt;code&gt;AppServiceProvider&lt;/code&gt; の &lt;code&gt;boot&lt;/code&gt; メソッドで行う必要があります。</target>
        </trans-unit>
        <trans-unit id="4b125bbd78b253795c68efdc7f4a4f3e02d786c6" translate="yes" xml:space="preserve">
          <source>If your Blade includes are stored in a subdirectory, you may wish to alias them for easier access. For example, imagine a Blade include that is stored at &lt;code&gt;resources/views/includes/input.blade.php&lt;/code&gt; with the following content:</source>
          <target state="translated">If your Blade includes are stored in a subdirectory, you may wish to alias them for easier access. For example, imagine a Blade include that is stored at &lt;code&gt;resources/views/includes/input.blade.php&lt;/code&gt; with the following content:</target>
        </trans-unit>
        <trans-unit id="ec40e40731ce3b113ae87ee049be55134b2cd1d3" translate="yes" xml:space="preserve">
          <source>If your HTTP request contains &quot;nested&quot; parameters, you may specify them in your validation rules using &quot;dot&quot; syntax:</source>
          <target state="translated">HTTP リクエストに「入れ子になった」パラメータが含まれている場合は、「ドット」構文を使用して検証ルールで指定することができます。</target>
        </trans-unit>
        <trans-unit id="1bb5f83ffe2a88871df07a874081278ed1bdc4a9" translate="yes" xml:space="preserve">
          <source>If your Mix compiled assets are deployed to a CDN separate from your application, you will need to change the base URL generated by the &lt;code&gt;mix&lt;/code&gt; function. You may do so by adding a &lt;code&gt;mix_url&lt;/code&gt; configuration option to your &lt;code&gt;config/app.php&lt;/code&gt; configuration file:</source>
          <target state="translated">If your Mix compiled assets are deployed to a CDN separate from your application, you will need to change the base URL generated by the &lt;code&gt;mix&lt;/code&gt; function. You may do so by adding a &lt;code&gt;mix_url&lt;/code&gt; configuration option to your &lt;code&gt;config/app.php&lt;/code&gt; configuration file:</target>
        </trans-unit>
        <trans-unit id="00d561b13e92ab245c3def504b57962fb01ee9bc" translate="yes" xml:space="preserve">
          <source>If your Redis queue connection uses a Redis Cluster, your queue names must contain a &lt;a href=&quot;https://redis.io/topics/cluster-spec#keys-hash-tags&quot;&gt;key hash tag&lt;/a&gt;. This is required in order to ensure all of the Redis keys for a given queue are placed into the same hash slot:</source>
          <target state="translated">Redisキュー接続がRedisクラスターを使用している場合、キュー名には&lt;a href=&quot;https://redis.io/topics/cluster-spec#keys-hash-tags&quot;&gt;キーハッシュタグ&lt;/a&gt;が含まれている必要があります。これは、特定のキューのすべてのRedisキーが同じハッシュスロットに配置されるようにするために必要です。</target>
        </trans-unit>
        <trans-unit id="8cbdd7fd4442a858ab0c70c6399b606537d7d707" translate="yes" xml:space="preserve">
          <source>If your SMS message will contain unicode characters, you should call the &lt;code&gt;unicode&lt;/code&gt; method when constructing the &lt;code&gt;NexmoMessage&lt;/code&gt; instance:</source>
          <target state="translated">SMSメッセージにUnicode文字が含まれる場合は、 &lt;code&gt;NexmoMessage&lt;/code&gt; インスタンスを作成するときに &lt;code&gt;unicode&lt;/code&gt; メソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="5e11ede82b01c0ddad5d3701d0d9ee4656e51da7" translate="yes" xml:space="preserve">
          <source>If your SPA needs to authenticate with &lt;a href=&quot;broadcasting#authorizing-channels&quot;&gt;private / presence broadcast channels&lt;/a&gt;, you should place the &lt;code&gt;Broadcast::routes&lt;/code&gt; method call within your &lt;code&gt;routes/api.php&lt;/code&gt; file:</source>
          <target state="translated">If your SPA needs to authenticate with &lt;a href=&quot;broadcasting#authorizing-channels&quot;&gt;private / presence broadcast channels&lt;/a&gt;, you should place the &lt;code&gt;Broadcast::routes&lt;/code&gt; method call within your &lt;code&gt;routes/api.php&lt;/code&gt; file:</target>
        </trans-unit>
        <trans-unit id="1be16b54e698d746964f268f2ec70ba51649d71c" translate="yes" xml:space="preserve">
          <source>If your application authenticates different types of users that perhaps use entirely different Eloquent models, you will likely need to define a guard configuration for each user provider type in your application. This allows you to protect requests intended for specific user providers. For example, given the following guard configuration the &lt;code&gt;config/auth.php&lt;/code&gt; configuration file:</source>
          <target state="translated">If your application authenticates different types of users that perhaps use entirely different Eloquent models, you will likely need to define a guard configuration for each user provider type in your application. This allows you to protect requests intended for specific user providers. For example, given the following guard configuration the &lt;code&gt;config/auth.php&lt;/code&gt; configuration file:</target>
        </trans-unit>
        <trans-unit id="cadac7dce1753ef7bd49ed1bb3cbaf11cbbb0f0c" translate="yes" xml:space="preserve">
          <source>If your application interacts with Redis, you may throttle your queued jobs by time or concurrency. This feature can be of assistance when your queued jobs are interacting with APIs that are also rate limited. For example, using the &lt;code&gt;throttle&lt;/code&gt; method, you may throttle a given type of job to only run 10 times every 60 seconds. If a lock can not be obtained, you should typically release the job back onto the queue so it can be retried later:</source>
          <target state="translated">アプリケーションがRedisとやり取りする場合、キューに入れられたジョブを時間または同時実行によって調整できます。この機能は、キューに入れられたジョブがレート制限されているAPIとやり取りしているときに役立ちます。たとえば、 &lt;code&gt;throttle&lt;/code&gt; メソッドを使用すると、特定のタイプのジョブを60秒ごとに10回だけ実行するようにスロットルできます。ロックを取得できない場合は、通常、ジョブを解放してキューに戻し、後で再試行できるようにします。</target>
        </trans-unit>
        <trans-unit id="16283861380812f8bd8df201c2c862a863c3a279" translate="yes" xml:space="preserve">
          <source>If your application interacts with multiple disks, you may use the &lt;code&gt;disk&lt;/code&gt; method on the &lt;code&gt;Storage&lt;/code&gt; facade to work with files on a particular disk:</source>
          <target state="translated">If your application interacts with multiple disks, you may use the &lt;code&gt;disk&lt;/code&gt; method on the &lt;code&gt;Storage&lt;/code&gt; facade to work with files on a particular disk:</target>
        </trans-unit>
        <trans-unit id="15bf850328e4d5931d45684e34f9eb6183c4e9a3" translate="yes" xml:space="preserve">
          <source>If your application is consuming many different channels, your &lt;code&gt;routes/channels.php&lt;/code&gt; file could become bulky. So, instead of using Closures to authorize channels, you may use channel classes. To generate a channel class, use the &lt;code&gt;make:channel&lt;/code&gt; Artisan command. This command will place a new channel class in the &lt;code&gt;App/Broadcasting&lt;/code&gt; directory.</source>
          <target state="translated">アプリケーションが多くの異なるチャネルを使用している場合、 &lt;code&gt;routes/channels.php&lt;/code&gt; ファイルが大きくなる可能性があります。したがって、チャネルを承認するためにクロージャを使用する代わりに、チャネルクラスを使用できます。チャネルクラスを生成するには、 &lt;code&gt;make:channel&lt;/code&gt; Artisanコマンドを使用します。このコマンドは、 &lt;code&gt;App/Broadcasting&lt;/code&gt; ディレクトリに新しいチャネルクラスを配置します。</target>
        </trans-unit>
        <trans-unit id="a82c5e1f660fa863ed0339a803ab847f5a20be46" translate="yes" xml:space="preserve">
          <source>If your application is exclusively using controller based routes, you should take advantage of Laravel's route cache. Using the route cache will drastically decrease the amount of time it takes to register all of your application's routes. In some cases, your route registration may even be up to 100x faster. To generate a route cache, just execute the &lt;code&gt;route:cache&lt;/code&gt; Artisan command:</source>
          <target state="translated">アプリケーションがコントローラーベースのルートのみを使用している場合は、Laravelのルートキャッシュを利用する必要があります。ルートキャッシュを使用すると、アプリケーションのすべてのルートを登録するのにかかる時間が大幅に短縮されます。場合によっては、ルート登録が最大100倍も高速になることがあります。ルートキャッシュを生成するには、 &lt;code&gt;route:cache&lt;/code&gt; Artisanコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="b9065c902a2c1693f173a825eaef9b7e7cf6d0a4" translate="yes" xml:space="preserve">
          <source>If your application is running on multiple servers, you may limit a scheduled job to only execute on a single server. For instance, assume you have a scheduled task that generates a new report every Friday night. If the task scheduler is running on three worker servers, the scheduled task will run on all three servers and generate the report three times. Not good!</source>
          <target state="translated">アプリケーションが複数のサーバ上で実行されている場合、スケジュールされたジョブを単一のサーバ上でのみ実行するように制限することができます。例えば、毎週金曜日の夜に新しいレポートを生成するスケジューリングされたタスクがあるとします。タスクスケジューラが3台のワーカーサーバ上で実行されている場合、スケジュールされたタスクは3台すべてのサーバ上で実行され、レポートを3回生成します。これは良くないですね。</target>
        </trans-unit>
        <trans-unit id="25d07475ad10d99b0add773c5af1b8c2480d5284" translate="yes" xml:space="preserve">
          <source>If your application is utilizing a cluster of Redis servers, you should define these clusters within a &lt;code&gt;clusters&lt;/code&gt; key of your Redis configuration:</source>
          <target state="translated">アプリケーションがRedisサーバーのクラスターを利用している場合は、Redis構成の &lt;code&gt;clusters&lt;/code&gt; キー内でこれらのクラスターを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="773773365823de5d350e6e26657b5221ad2a1963" translate="yes" xml:space="preserve">
          <source>If your application issues short-lived access tokens, users will need to refresh their access tokens via the refresh token that was provided to them when the access token was issued. In this example, we'll use the Guzzle HTTP library to refresh the token:</source>
          <target state="translated">アプリケーションが短命のアクセストークンを発行する場合、ユーザーはアクセストークンが発行されたときに提供されたリフレッシュトークンを使用してアクセストークンをリフレッシュする必要があります。この例では、Guzzle HTTP ライブラリを使用してトークンをリフレッシュします。</target>
        </trans-unit>
        <trans-unit id="09b24b3ce2362182501a3432005fa465221ff86d" translate="yes" xml:space="preserve">
          <source>If your application uses more than one &lt;a href=&quot;authentication#introduction&quot;&gt;authentication user provider&lt;/a&gt;, you may specify which user provider the password grant client uses by providing a &lt;code&gt;--provider&lt;/code&gt; option when creating the client via the &lt;code&gt;artisan passport:client --password&lt;/code&gt; command. The given provider name should match a valid provider defined in your &lt;code&gt;config/auth.php&lt;/code&gt; configuration file. You can then &lt;a href=&quot;#via-middleware&quot;&gt;protect your route using middleware&lt;/a&gt; to ensure that only users from the guard's specified provider are authorized.</source>
          <target state="translated">If your application uses more than one &lt;a href=&quot;authentication#introduction&quot;&gt;authentication user provider&lt;/a&gt;, you may specify which user provider the password grant client uses by providing a &lt;code&gt;--provider&lt;/code&gt; option when creating the client via the &lt;code&gt;artisan passport:client --password&lt;/code&gt; command. The given provider name should match a valid provider defined in your &lt;code&gt;config/auth.php&lt;/code&gt; configuration file. You can then &lt;a href=&quot;#via-middleware&quot;&gt;protect your route using middleware&lt;/a&gt; to ensure that only users from the guard's specified provider are authorized.</target>
        </trans-unit>
        <trans-unit id="df035e4a709a3570626f56d8a0ff1f62e6235841" translate="yes" xml:space="preserve">
          <source>If your applications interacts with multiple disks, you may use the &lt;code&gt;disk&lt;/code&gt; method on the &lt;code&gt;Storage&lt;/code&gt; facade to work with files on a particular disk:</source>
          <target state="translated">アプリケーションが複数のディスクと相互作用する場合、 &lt;code&gt;Storage&lt;/code&gt; ファサードの &lt;code&gt;disk&lt;/code&gt; メソッドを使用して、特定のディスク上のファイルを操作できます。</target>
        </trans-unit>
        <trans-unit id="a30a68b3602af79237e1711b44c128fd6c1e4886" translate="yes" xml:space="preserve">
          <source>If your business is based in Europe you will need to abide by the Strong Customer Authentication (SCA) regulations. These regulations were imposed in September 2019 by the European Union to prevent payment fraud. Luckily, Stripe and Cashier are prepared for building SCA compliant applications.</source>
          <target state="translated">ヨーロッパを拠点とするビジネスの場合は、強力顧客認証(SCA)規制を遵守する必要があります。これらの規制は、支払い詐欺を防ぐために2019年9月に欧州連合によって課されたものです。幸いなことに、StripeとCashierはSCAに準拠したアプリケーションを構築するための準備が整っています。</target>
        </trans-unit>
        <trans-unit id="7841b9cf874596ee7af1703c3f7a888cc27f839e" translate="yes" xml:space="preserve">
          <source>If your command defines an option that accepts an array, you may pass an array of values to that option:</source>
          <target state="translated">コマンドが配列を受け付けるオプションを定義している場合は、そのオプションに値の配列を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="a58b09883899c9221afd24a208155b70ae200166" translate="yes" xml:space="preserve">
          <source>If your component requires dependencies from Laravel's &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, you may list them before any of the component's data attributes and they will automatically be injected by the container:</source>
          <target state="translated">If your component requires dependencies from Laravel's &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, you may list them before any of the component's data attributes and they will automatically be injected by the container:</target>
        </trans-unit>
        <trans-unit id="672ff7eeaa885f30ba5786b245b1872d4a077220" translate="yes" xml:space="preserve">
          <source>If your controller method is also expecting input from a route parameter you should list your route parameters after your other dependencies. For example, if your route is defined like so:</source>
          <target state="translated">コントローラメソッドがルートパラメータからの入力も期待している場合は、他の依存関係の後にルートパラメータをリストアップしなければなりません。たとえば、ルートが次のように定義されているとします。</target>
        </trans-unit>
        <trans-unit id="7187000e1a07f4c5e5934110269c9787f7415ef2" translate="yes" xml:space="preserve">
          <source>If your controller method is also expecting input from a route parameter, list your route arguments after your other dependencies. For example, if your route is defined like so:</source>
          <target state="translated">コントローラメソッドがルートパラメータからの入力も期待している場合は、他の依存関係の後にルート引数をリストアップします。たとえば、ルートが次のように定義されているとします。</target>
        </trans-unit>
        <trans-unit id="56bc50c52f21ede7f0d0af18a3f572f92887e46f" translate="yes" xml:space="preserve">
          <source>If your controller route requires parameters, you may pass them as the second argument to the &lt;code&gt;action&lt;/code&gt; method:</source>
          <target state="translated">コントローラルートにパラメータが必要な場合は、 &lt;code&gt;action&lt;/code&gt; メソッドの2番目の引数としてそれらを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="d9c2855f10b2c39469f42c2afdafd9539d3dd51c" translate="yes" xml:space="preserve">
          <source>If your exception contains custom reporting logic that only occurs when certain conditions are met, you may need to instruct Laravel to report the exception using the default exception handling configuration. To accomplish this, you may return &lt;code&gt;false&lt;/code&gt; from the exception's &lt;code&gt;report&lt;/code&gt; method:</source>
          <target state="translated">If your exception contains custom reporting logic that only occurs when certain conditions are met, you may need to instruct Laravel to report the exception using the default exception handling configuration. To accomplish this, you may return &lt;code&gt;false&lt;/code&gt; from the exception's &lt;code&gt;report&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="509d5a88b7719f65c22e4c5a4ec36e722088ff9b" translate="yes" xml:space="preserve">
          <source>If your global scope is adding columns to the select clause of the query, you should use the &lt;code&gt;addSelect&lt;/code&gt; method instead of &lt;code&gt;select&lt;/code&gt;. This will prevent the unintentional replacement of the query's existing select clause.</source>
          <target state="translated">グローバルスコープがクエリのselect句に列を追加する場合は、select ではなく &lt;code&gt;addSelect&lt;/code&gt; メソッドを使用する必要があり &lt;code&gt;select&lt;/code&gt; 。これにより、クエリの既存の選択句が誤って置換されるのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="97e844343150257b6c7dd17559c189eb93cfe6e8" translate="yes" xml:space="preserve">
          <source>If your indexed models are &lt;a href=&quot;eloquent#soft-deleting&quot;&gt;soft deleting&lt;/a&gt; and you need to search your soft deleted models, set the &lt;code&gt;soft_delete&lt;/code&gt; option of the &lt;code&gt;config/scout.php&lt;/code&gt; configuration file to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">インデックス付きモデルが&lt;a href=&quot;eloquent#soft-deleting&quot;&gt;ソフト削除で&lt;/a&gt;あり、ソフト削除されたモデルを検索する必要がある場合は、 &lt;code&gt;config/scout.php&lt;/code&gt; 構成ファイルの &lt;code&gt;soft_delete&lt;/code&gt; オプションを &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="de8cd282af45d1ee9e0bdc4c1f338e168ca06953" translate="yes" xml:space="preserve">
          <source>If your intermediate table is using an accessor other than &lt;code&gt;pivot&lt;/code&gt;, you may use the &lt;code&gt;whenPivotLoadedAs&lt;/code&gt; method:</source>
          <target state="translated">中間テーブルが &lt;code&gt;pivot&lt;/code&gt; 以外の &lt;code&gt;whenPivotLoadedAs&lt;/code&gt; 使用している場合は、whenPivotLoadedAsメソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="0ad261b81dafd1452f7bea40b839d8b19362360a" translate="yes" xml:space="preserve">
          <source>If your package contains &lt;a href=&quot;blade#components&quot;&gt;view components&lt;/a&gt;, you may use the &lt;code&gt;loadViewComponentsAs&lt;/code&gt; method to inform Laravel how to load them. The &lt;code&gt;loadViewComponentsAs&lt;/code&gt; method accepts two arguments: the tag prefix for your view components and an array of your view components class. For example, if your package's prefix is &lt;code&gt;courier&lt;/code&gt; and you have &lt;code&gt;Alert&lt;/code&gt; and &lt;code&gt;Button&lt;/code&gt; view components, you would add the following to your service provider's &lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">If your package contains &lt;a href=&quot;blade#components&quot;&gt;view components&lt;/a&gt;, you may use the &lt;code&gt;loadViewComponentsAs&lt;/code&gt; method to inform Laravel how to load them. The &lt;code&gt;loadViewComponentsAs&lt;/code&gt; method accepts two arguments: the tag prefix for your view components and an array of your view components class. For example, if your package's prefix is &lt;code&gt;courier&lt;/code&gt; and you have &lt;code&gt;Alert&lt;/code&gt; and &lt;code&gt;Button&lt;/code&gt; view components, you would add the following to your service provider's &lt;code&gt;boot&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="1215a930077070494785226472c33f0f2efe0bd1" translate="yes" xml:space="preserve">
          <source>If your package contains &lt;a href=&quot;localization&quot;&gt;translation files&lt;/a&gt;, you may use the &lt;code&gt;loadTranslationsFrom&lt;/code&gt; method to inform Laravel how to load them. For example, if your package is named &lt;code&gt;courier&lt;/code&gt;, you should add the following to your service provider's &lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">パッケージに&lt;a href=&quot;localization&quot;&gt;翻訳ファイル&lt;/a&gt;が含まれている場合は、 &lt;code&gt;loadTranslationsFrom&lt;/code&gt; メソッドを使用して、それらをロードする方法をLaravelに通知できます。たとえば、パッケージの名前が &lt;code&gt;courier&lt;/code&gt; である場合、サービスプロバイダーの &lt;code&gt;boot&lt;/code&gt; メソッドに以下を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="693fb8840dc047e22e20518fdc246dcba208bc31" translate="yes" xml:space="preserve">
          <source>If your package contains &lt;a href=&quot;migrations&quot;&gt;database migrations&lt;/a&gt;, you may use the &lt;code&gt;loadMigrationsFrom&lt;/code&gt; method to inform Laravel how to load them. The &lt;code&gt;loadMigrationsFrom&lt;/code&gt; method accepts the path to your package's migrations as its only argument:</source>
          <target state="translated">パッケージに&lt;a href=&quot;migrations&quot;&gt;データベースの移行&lt;/a&gt;が含まれている場合は、 &lt;code&gt;loadMigrationsFrom&lt;/code&gt; メソッドを使用して、それらをロードする方法をLaravelに通知できます。 &lt;code&gt;loadMigrationsFrom&lt;/code&gt; の方法は、唯一の引数としてあなたのパッケージの移行へのパスを受け付けます。</target>
        </trans-unit>
        <trans-unit id="cf54ad11364cba6edafcfb614ca26b49c6b22f87" translate="yes" xml:space="preserve">
          <source>If your package contains anonymous components, they must be placed within a &lt;code&gt;components&lt;/code&gt; directory of your package's &quot;views&quot; directory (as specified by &lt;code&gt;loadViewsFrom&lt;/code&gt;). Then, you may render them by prefixing the component name with the package's view namespace:</source>
          <target state="translated">If your package contains anonymous components, they must be placed within a &lt;code&gt;components&lt;/code&gt; directory of your package's &quot;views&quot; directory (as specified by &lt;code&gt;loadViewsFrom&lt;/code&gt; ). Then, you may render them by prefixing the component name with the package's view namespace:</target>
        </trans-unit>
        <trans-unit id="f53b39a297d9cd92b98c777ade6f93edddeaba1f" translate="yes" xml:space="preserve">
          <source>If your package contains routes, you may load them using the &lt;code&gt;loadRoutesFrom&lt;/code&gt; method. This method will automatically determine if the application's routes are cached and will not load your routes file if the routes have already been cached:</source>
          <target state="translated">パッケージにルートが含まれている場合は、 &lt;code&gt;loadRoutesFrom&lt;/code&gt; メソッドを使用してルートをロードできます。このメソッドは、アプリケーションのルートがキャッシュされているかどうかを自動的に判断し、ルートがすでにキャッシュされている場合はルートファイルをロードしません。</target>
        </trans-unit>
        <trans-unit id="bc5ff9403af5b82dfef660d7ac31d3bc5c4cb21d" translate="yes" xml:space="preserve">
          <source>If your parent model does not use &lt;code&gt;id&lt;/code&gt; as its primary key, or you wish to join the child model to a different column, you may pass a third argument to the &lt;code&gt;belongsTo&lt;/code&gt; method specifying your parent table's custom key:</source>
          <target state="translated">親モデルが &lt;code&gt;id&lt;/code&gt; を主キーとして使用しない場合、または子モデルを別の列に &lt;code&gt;belongsTo&lt;/code&gt; する場合は、親テーブルのカスタムキーを指定する3番目の引数をbelongsToメソッドに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="ee15a9d8030c393d9bb9c4c1e62833077c19a19f" translate="yes" xml:space="preserve">
          <source>If your place-holder contains all capital letters, or only has its first letter capitalized, the translated value will be capitalized accordingly:</source>
          <target state="translated">プレースホルダーにすべての大文字が含まれている場合、または最初の文字だけが大文字になっている場合、翻訳された値はそれに応じて大文字になります。</target>
        </trans-unit>
        <trans-unit id="b08da48db04834fa55811b510101e8af8fce8ecd" translate="yes" xml:space="preserve">
          <source>If your placeholder contains all capital letters, or only has its first letter capitalized, the translated value will be capitalized accordingly:</source>
          <target state="translated">プレースホルダにすべての大文字が含まれている場合、または最初の文字だけが大文字になっている場合、翻訳された値はそれに応じて大文字になります。</target>
        </trans-unit>
        <trans-unit id="daad6579ba50f39a7ce46264d71a3c224e97b341" translate="yes" xml:space="preserve">
          <source>If your primary key is not an integer, you should set the protected &lt;code&gt;$keyType&lt;/code&gt; property on your model to &lt;code&gt;string&lt;/code&gt;:</source>
          <target state="translated">If your primary key is not an integer, you should set the protected &lt;code&gt;$keyType&lt;/code&gt; property on your model to &lt;code&gt;string&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a6c9ddc8a51475794f76a1a2be92e75f1faeb6d5" translate="yes" xml:space="preserve">
          <source>If your provider is &lt;strong&gt;only&lt;/strong&gt; registering bindings in the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, you may choose to defer its registration until one of the registered bindings is actually needed. Deferring the loading of such a provider will improve the performance of your application, since it is not loaded from the filesystem on every request.</source>
          <target state="translated">お使いのプロバイダがされた場合&lt;strong&gt;のみ&lt;/strong&gt;にバインディングを登録する&lt;a href=&quot;container&quot;&gt;サービスコンテナ&lt;/a&gt;は、登録済みのバインディングのいずれかが実際に必要になるまでその登録を延期することもできます。このようなプロバイダーのロードを延期すると、リクエストごとにファイルシステムからロードされるわけではないため、アプリケーションのパフォーマンスが向上します。</target>
        </trans-unit>
        <trans-unit id="0188e879e9e5b87ebb5a1a2704a1770337b6ca22" translate="yes" xml:space="preserve">
          <source>If your route has parameters, you may pass them as the second argument to the &lt;code&gt;route&lt;/code&gt; method:</source>
          <target state="translated">ルートにパラメータがある場合、それらを &lt;code&gt;route&lt;/code&gt; メソッドの2番目の引数として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="50e213b65e92c789a023e34bd2266e5cee31464a" translate="yes" xml:space="preserve">
          <source>If your route only needs to return a view, you may use the &lt;code&gt;Route::view&lt;/code&gt; method. Like the &lt;code&gt;redirect&lt;/code&gt; method, this method provides a simple shortcut so that you do not have to define a full route or controller. The &lt;code&gt;view&lt;/code&gt; method accepts a URI as its first argument and a view name as its second argument. In addition, you may provide an array of data to pass to the view as an optional third argument:</source>
          <target state="translated">ルートがビューを返すだけでよい場合は、 &lt;code&gt;Route::view&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;redirect&lt;/code&gt; メソッドと同様に、このメソッドは簡単なショートカットを提供するため、完全なルートまたはコントローラーを定義する必要はありません。 &lt;code&gt;view&lt;/code&gt; 方法は、最初の引数と第2引数としてビュー名にURIを受け付けます。さらに、オプションの3番目の引数としてビューに渡すデータの配列を提供できます。</target>
        </trans-unit>
        <trans-unit id="36c1097f632bfca74931efaed229cb5db4d73255" translate="yes" xml:space="preserve">
          <source>If your service provider registers many simple bindings, you may wish to use the &lt;code&gt;bindings&lt;/code&gt; and &lt;code&gt;singletons&lt;/code&gt; properties instead of manually registering each container binding. When the service provider is loaded by the framework, it will automatically check for these properties and register their bindings:</source>
          <target state="translated">サービスプロバイダーが多数の単純なバインディングを登録する場合、各コンテナーバインディングを手動で登録する代わりに、 &lt;code&gt;bindings&lt;/code&gt; と &lt;code&gt;singletons&lt;/code&gt; プロパティを使用することができます。フレームワークによってサービスプロバイダーが読み込まれると、サービスプロバイダーはこれらのプロパティを自動的にチェックし、それらのバインディングを登録します。</target>
        </trans-unit>
        <trans-unit id="93164b21dcdceaa0edfe6e756e930f30d21e4d67" translate="yes" xml:space="preserve">
          <source>If your sorting needs are more advanced, you may pass a callback to &lt;code&gt;sort&lt;/code&gt; with your own algorithm. Refer to the PHP documentation on &lt;a href=&quot;https://secure.php.net/manual/en/function.uasort.php#refsect1-function.uasort-parameters&quot;&gt;&lt;code&gt;uasort&lt;/code&gt;&lt;/a&gt;, which is what the collection's &lt;code&gt;sort&lt;/code&gt; method calls under the hood.</source>
          <target state="translated">ソートのニーズがさらに進んでいる場合は、コールバックを渡して独自のアルゴリズムで &lt;code&gt;sort&lt;/code&gt; することができます。コレクションの &lt;code&gt;sort&lt;/code&gt; メソッドが&lt;a href=&quot;https://secure.php.net/manual/en/function.uasort.php#refsect1-function.uasort-parameters&quot;&gt; &lt;code&gt;uasort&lt;/code&gt; &lt;/a&gt;のPHPドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="50c30aed909b06c81dd764b834fdedfbdbd29eb7" translate="yes" xml:space="preserve">
          <source>If your state requires calculation or a &lt;code&gt;$faker&lt;/code&gt; instance, you may use a Closure to calculate the state's attribute modifications:</source>
          <target state="translated">状態で計算または &lt;code&gt;$faker&lt;/code&gt; インスタンスが必要な場合は、クロージャーを使用して状態の属性の変更を計算できます。</target>
        </trans-unit>
        <trans-unit id="3d988c7b13278fb3e6131626ddb382cb2d488eb5" translate="yes" xml:space="preserve">
          <source>If your table uses a primary key column name other than &lt;code&gt;id&lt;/code&gt;, you may specify the name of the column when calling the &lt;code&gt;ignore&lt;/code&gt; method:</source>
          <target state="translated">テーブルで &lt;code&gt;id&lt;/code&gt; 以外の主キー列名を使用している場合は、 &lt;code&gt;ignore&lt;/code&gt; メソッドを呼び出すときに列の名前を指定できます。</target>
        </trans-unit>
        <trans-unit id="1c33ad426579ec627b1068a3d127b36d508107da" translate="yes" xml:space="preserve">
          <source>Ignore the given ID during the unique check.</source>
          <target state="translated">ユニークチェック中に与えられたIDを無視します。</target>
        </trans-unit>
        <trans-unit id="f2270aa724d1a24b4e9cb072395c4451e243eace" translate="yes" xml:space="preserve">
          <source>Ignore the given model during the unique check.</source>
          <target state="translated">ユニークチェック中に与えられたモデルを無視します。</target>
        </trans-unit>
        <trans-unit id="baede0a07359c08ef65e41f59bf008d0883fdad6" translate="yes" xml:space="preserve">
          <source>Ignoring Exceptions By Type</source>
          <target state="translated">タイプによる例外の無視</target>
        </trans-unit>
        <trans-unit id="90e6368d02595d71f6ccf0b52e058b2ff52eefef" translate="yes" xml:space="preserve">
          <source>Ignoring Missing Models</source>
          <target state="translated">見つからないモデルを無視する</target>
        </trans-unit>
        <trans-unit id="1526e6b93ddb847b6a3b836ee1dab53cfd48ef3c" translate="yes" xml:space="preserve">
          <source>Illuminate</source>
          <target state="translated">Illuminate</target>
        </trans-unit>
        <trans-unit id="4001a946e3d3aa242c595ea91cf8bf394eda5ded" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth</source>
          <target state="translated">Illuminate\Auth</target>
        </trans-unit>
        <trans-unit id="949ad416e1cd98a26c7106c4c3cae5ac35601f1f" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Access</source>
          <target state="translated">Illuminate\Auth\Access</target>
        </trans-unit>
        <trans-unit id="62272ccfde10eba7890eb80d8b80714aecf85a01" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\AuthManager</source>
          <target state="translated">Illuminate\Auth\AuthManager</target>
        </trans-unit>
        <trans-unit id="17e2696f1deb2dcd1dbca4c87f635600162dd933" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Console</source>
          <target state="translated">Illuminate\Auth\Console</target>
        </trans-unit>
        <trans-unit id="dce50c570d0c8880099bf81c1c7747f8efa0c44c" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Events</source>
          <target state="translated">Illuminate\Auth\Events</target>
        </trans-unit>
        <trans-unit id="fab89d4f4a4cf433eb56a2141d475a1acf17f709" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Listeners</source>
          <target state="translated">Illuminate\Auth\Listeners</target>
        </trans-unit>
        <trans-unit id="895da0bfe2192066b0d33e3b0fe8cbf93d4887b8" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Middleware</source>
          <target state="translated">Illuminate\Auth\Middleware</target>
        </trans-unit>
        <trans-unit id="72a5e80db8962cde814569399e2f2dcc4eb9db4c" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Notifications</source>
          <target state="translated">Illuminate\Auth\Notifications</target>
        </trans-unit>
        <trans-unit id="34950cb30cf3352f617558a9ad54fd5aeeb509cb" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Passwords</source>
          <target state="translated">Illuminate\Auth\Passwords</target>
        </trans-unit>
        <trans-unit id="e0ad7be146a4f90d6d6f5c2b52810d034d113e56" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Passwords\PasswordBroker</source>
          <target state="translated">Illuminate\Auth\Passwords\PasswordBroker</target>
        </trans-unit>
        <trans-unit id="42546fcbd66531bc05db683fd1cf232830162646" translate="yes" xml:space="preserve">
          <source>Illuminate\Auth\Passwords\PasswordBrokerManager</source>
          <target state="translated">Illuminate\Auth\Passwords\PasswordBrokerManager</target>
        </trans-unit>
        <trans-unit id="34325fd0e0b569c7ec32392c71468c5e62a727ae" translate="yes" xml:space="preserve">
          <source>Illuminate\Broadcasting</source>
          <target state="translated">Illuminate\Broadcasting</target>
        </trans-unit>
        <trans-unit id="64cfad805c1c17b18fc1359bbdabdb84f5df9abf" translate="yes" xml:space="preserve">
          <source>Illuminate\Broadcasting\Broadcasters</source>
          <target state="translated">Illuminate\Broadcasting\Broadcasters</target>
        </trans-unit>
        <trans-unit id="7971c695a665fa25aa8f01c25dfb9b6159e4efb0" translate="yes" xml:space="preserve">
          <source>Illuminate\Bus</source>
          <target state="translated">Illuminate\Bus</target>
        </trans-unit>
        <trans-unit id="5725d6262bd35eb85ad32608c185c03f551a22bc" translate="yes" xml:space="preserve">
          <source>Illuminate\Bus\Events</source>
          <target state="translated">Illuminate\Bus\Events</target>
        </trans-unit>
        <trans-unit id="382cdde5fc7e5fb335c8ba064e4464087527e832" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache</source>
          <target state="translated">Illuminate\Cache</target>
        </trans-unit>
        <trans-unit id="6634d3084fc51633b540ec0b5e0619ae07b47c5f" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache\CacheManager</source>
          <target state="translated">Illuminate\Cache\CacheManager</target>
        </trans-unit>
        <trans-unit id="15ab423709a7d55946cf50b4bff8e344090d6af6" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache\Console</source>
          <target state="translated">Illuminate\Cache\Console</target>
        </trans-unit>
        <trans-unit id="d9742bc8564aacde7ea1bd06cd72f63b183c0ed3" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache\Events</source>
          <target state="translated">Illuminate\Cache\Events</target>
        </trans-unit>
        <trans-unit id="30ae4c424b60a15083e9a776e8b3005e101859aa" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache\RateLimiting</source>
          <target state="translated">Illuminate\Cache\RateLimiting</target>
        </trans-unit>
        <trans-unit id="1f00dc56f9c20e5d3aba93b69f2a281965f39a77" translate="yes" xml:space="preserve">
          <source>Illuminate\Cache\Repository</source>
          <target state="translated">Illuminate\Cache\Repository</target>
        </trans-unit>
        <trans-unit id="8d49256a5450e88e87400073d6d9c261e5db9375" translate="yes" xml:space="preserve">
          <source>Illuminate\Config</source>
          <target state="translated">Illuminate\Config</target>
        </trans-unit>
        <trans-unit id="dbb4f77763d907c46c7c516634276c1814118c7b" translate="yes" xml:space="preserve">
          <source>Illuminate\Config\Repository</source>
          <target state="translated">Illuminate\Config\Repository</target>
        </trans-unit>
        <trans-unit id="6e006ed4d09a8f46309f542cff2097f77b932fe5" translate="yes" xml:space="preserve">
          <source>Illuminate\Console</source>
          <target state="translated">Illuminate\Console</target>
        </trans-unit>
        <trans-unit id="5d09f2169ee370aa8f77a4e0895b5d851c060abb" translate="yes" xml:space="preserve">
          <source>Illuminate\Console\Concerns</source>
          <target state="translated">Illuminate\Console\Concerns</target>
        </trans-unit>
        <trans-unit id="47290132b3ae6821b6693267d22a6cfdb22ce1a6" translate="yes" xml:space="preserve">
          <source>Illuminate\Console\Events</source>
          <target state="translated">Illuminate\Console\Events</target>
        </trans-unit>
        <trans-unit id="4b21f9a17d69d990abebd07f61b0bca9e249bcea" translate="yes" xml:space="preserve">
          <source>Illuminate\Console\Scheduling</source>
          <target state="translated">Illuminate\Console\Scheduling</target>
        </trans-unit>
        <trans-unit id="d92f32c809bacf1b7a540b20727b1d7199b02d64" translate="yes" xml:space="preserve">
          <source>Illuminate\Container</source>
          <target state="translated">Illuminate\Container</target>
        </trans-unit>
        <trans-unit id="1415f5c5dc4e8e992b21d1371a3b23fd9ea8b1e3" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts</source>
          <target state="translated">Illuminate\Contracts</target>
        </trans-unit>
        <trans-unit id="283be4fb754f9a2ede4f0ade7023d9bc9bdd84ba" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth</source>
          <target state="translated">Illuminate\Contracts\Auth</target>
        </trans-unit>
        <trans-unit id="38b9a8512fef8870a64603009b66c1d31eef30d5" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Access</source>
          <target state="translated">Illuminate\Contracts\Auth\Access</target>
        </trans-unit>
        <trans-unit id="ea8391be530bc3776ba8d2d5313ca8d6e97359f0" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Access\Authorizable</source>
          <target state="translated">Illuminate\Contracts\Auth\Access\Authorizable</target>
        </trans-unit>
        <trans-unit id="a5f2e6234d7b47e553a361e526bb4ae2e5e4757f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Access\Gate</source>
          <target state="translated">Illuminate\Contracts\Auth\Access\Gate</target>
        </trans-unit>
        <trans-unit id="d127689170fc96c9b7ac41733c037e9ccdc66c0b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Authenticatable</source>
          <target state="translated">Illuminate\Contracts\Auth\Authenticatable</target>
        </trans-unit>
        <trans-unit id="6ade1aa798dcc3cb6a4cbd33742a3cd47f9c27a8" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\CanResetPassword</source>
          <target state="translated">Illuminate\Contracts\Auth\CanResetPassword</target>
        </trans-unit>
        <trans-unit id="2ba8e0e33874fba9b53896bc758168661d5656b4" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Factory</source>
          <target state="translated">Illuminate\Contracts\Auth\Factory</target>
        </trans-unit>
        <trans-unit id="108159b660d144d7171a18ac50ad11a1a35848b1" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Guard</source>
          <target state="translated">Illuminate\Contracts\Auth\Guard</target>
        </trans-unit>
        <trans-unit id="b65ce7450a5723d2c3ce001c6cfe9397e12b3b3b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\Middleware</source>
          <target state="translated">Illuminate\Contracts\Auth\Middleware</target>
        </trans-unit>
        <trans-unit id="c202dddd236e8b5bbe62f1fa097fbef35e04665b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\PasswordBroker</source>
          <target state="translated">Illuminate\Contracts\Auth\PasswordBroker</target>
        </trans-unit>
        <trans-unit id="a3f46a1ecf13af12a21ea56368e49fd1826f481c" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\PasswordBrokerFactory</source>
          <target state="translated">Illuminate\Contracts\Auth\PasswordBrokerFactory</target>
        </trans-unit>
        <trans-unit id="0956d2a03fbb102f509080311d19ea36550a6b8b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\StatefulGuard</source>
          <target state="translated">Illuminate\Contracts\Auth\StatefulGuard</target>
        </trans-unit>
        <trans-unit id="8e38b73e24f53d865153cda7874116d8819e8359" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\SupportsBasicAuth</source>
          <target state="translated">Illuminate\Contracts\Auth\SupportsBasicAuth</target>
        </trans-unit>
        <trans-unit id="6dd7a8a315428a41bebd808b984051428ca20d77" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Auth\UserProvider</source>
          <target state="translated">Illuminate\Contracts\Auth\UserProvider</target>
        </trans-unit>
        <trans-unit id="0a92fa39a377f1d063af77a9af9bc1e940b6b07b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Broadcasting</source>
          <target state="translated">Illuminate\Contracts\Broadcasting</target>
        </trans-unit>
        <trans-unit id="0d8e1808599f8afe1329a0fb42e7ee2ff55def2a" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Broadcasting\Broadcaster</source>
          <target state="translated">Illuminate\Contracts\Broadcasting\Broadcaster</target>
        </trans-unit>
        <trans-unit id="fe3b296a21f36977c723d433a9b9b3726568fd43" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Broadcasting\Factory</source>
          <target state="translated">Illuminate\Contracts\Broadcasting\Factory</target>
        </trans-unit>
        <trans-unit id="0434cd8317615cb12056424574176ff65cdfd6dd" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Broadcasting\ShouldBroadcast</source>
          <target state="translated">Illuminate\Contracts\Broadcasting\ShouldBroadcast</target>
        </trans-unit>
        <trans-unit id="3b114dd1600886028c94a488862038d16317a346" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Broadcasting\ShouldBroadcastNow</source>
          <target state="translated">Illuminate\Contracts\Broadcasting\ShouldBroadcastNow</target>
        </trans-unit>
        <trans-unit id="f9aa7c8cefa4629fb42692b4352929a2e3b4fbda" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Bus</source>
          <target state="translated">Illuminate\Contracts\Bus</target>
        </trans-unit>
        <trans-unit id="d13dd47edf56922aa0b0560a423fd620748196e0" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Bus\Dispatcher</source>
          <target state="translated">Illuminate\Contracts\Bus\Dispatcher</target>
        </trans-unit>
        <trans-unit id="178fc95829ee7b4222f61a3c0bc0c363c9051904" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Bus\QueueingDispatcher</source>
          <target state="translated">Illuminate\Contracts\Bus\QueueingDispatcher</target>
        </trans-unit>
        <trans-unit id="dd1a47bac8b4ee799f8c951d00a1b996ccfdde39" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache</source>
          <target state="translated">Illuminate\Contracts\Cache</target>
        </trans-unit>
        <trans-unit id="a394e1e42d9afe834c5d4e4b3c204d2a8d01dcac" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache\Factory</source>
          <target state="translated">Illuminate\Contracts\Cache\Factory</target>
        </trans-unit>
        <trans-unit id="b4f18aed833b749b5d809ce749e994017451e48f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache\Lock</source>
          <target state="translated">Illuminate\Contracts\Cache\Lock</target>
        </trans-unit>
        <trans-unit id="0c46c8c41674169474f9fd341f0228ccaf6e3d61" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache\LockProvider</source>
          <target state="translated">Illuminate\Contracts\Cache\LockProvider</target>
        </trans-unit>
        <trans-unit id="2b184d6e2fea8c7f5e2b972774dc5b7090feb2cd" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache\Repository</source>
          <target state="translated">Illuminate\Contracts\Cache\Repository</target>
        </trans-unit>
        <trans-unit id="0571c081cdb1909163b5a3791f16554bd113019a" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cache\Store</source>
          <target state="translated">Illuminate\Contracts\Cache\Store</target>
        </trans-unit>
        <trans-unit id="7777bbb09850c10e44ac242c4d0d347515ee21be" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Config</source>
          <target state="translated">Illuminate\Contracts\Config</target>
        </trans-unit>
        <trans-unit id="a7f497bb74745ca3d65c49765e329abdbd9de1c4" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Config\Repository</source>
          <target state="translated">Illuminate\Contracts\Config\Repository</target>
        </trans-unit>
        <trans-unit id="02d3d74d73b99e673231b2de938c73c4be2c14aa" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Console</source>
          <target state="translated">Illuminate\Contracts\Console</target>
        </trans-unit>
        <trans-unit id="bd1b1c399fc4a18c0801c782a5595e8c1810f690" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Console\Application</source>
          <target state="translated">Illuminate\Contracts\Console\Application</target>
        </trans-unit>
        <trans-unit id="819d3f0dcb09c344f0d6fbe93de2459de417ada3" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Console\Kernel</source>
          <target state="translated">Illuminate\Contracts\Console\Kernel</target>
        </trans-unit>
        <trans-unit id="97ef18ff80fb716fbdb4c683bcbb2b31dbed3943" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Container</source>
          <target state="translated">Illuminate\Contracts\Container</target>
        </trans-unit>
        <trans-unit id="655a700555411ab4d992614f7a1c88ff5318be85" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Container\Container</source>
          <target state="translated">Illuminate\Contracts\Container\Container</target>
        </trans-unit>
        <trans-unit id="28a2055b5c922a6d160cbdae84e19faa820ec8a3" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cookie</source>
          <target state="translated">Illuminate\Contracts\Cookie</target>
        </trans-unit>
        <trans-unit id="a4a9b69c83b82c1c31ffcc0d026a6a9844a37989" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cookie\Factory</source>
          <target state="translated">Illuminate\Contracts\Cookie\Factory</target>
        </trans-unit>
        <trans-unit id="9fdfb61d85f1fa24005d28a41ccffc6fdab180f9" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Cookie\QueueingFactory</source>
          <target state="translated">Illuminate\Contracts\Cookie\QueueingFactory</target>
        </trans-unit>
        <trans-unit id="2e53f40b16b324fdb527a36345b21eff218f6de6" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Database</source>
          <target state="translated">Illuminate\Contracts\Database</target>
        </trans-unit>
        <trans-unit id="1d3f0c72a736abcbfec2640896c22396c59ba5ff" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Database\Eloquent</source>
          <target state="translated">Illuminate\Contracts\Database\Eloquent</target>
        </trans-unit>
        <trans-unit id="e01394987601b237dea86c259305266fafc9913b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Database\Events</source>
          <target state="translated">Illuminate\Contracts\Database\Events</target>
        </trans-unit>
        <trans-unit id="503f07c79e318a58a7763151d0ab5b2f8f1617e3" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Database\ModelIdentifier</source>
          <target state="translated">Illuminate\Contracts\Database\ModelIdentifier</target>
        </trans-unit>
        <trans-unit id="7003705ecb015e80ec990400028014a9e6fe7bd1" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Debug</source>
          <target state="translated">Illuminate\Contracts\Debug</target>
        </trans-unit>
        <trans-unit id="5fa105b8287cc6010b5cecb05c4b6fc56707ee26" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Debug\ExceptionHandler</source>
          <target state="translated">Illuminate\Contracts\Debug\ExceptionHandler</target>
        </trans-unit>
        <trans-unit id="762b1e35d1413539ce2c6f9b3dd69da1f3cfe21e" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Encryption</source>
          <target state="translated">Illuminate\Contracts\Encryption</target>
        </trans-unit>
        <trans-unit id="49d97678a172403e7b6a518fab4d8a02aecf3448" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Encryption\Encrypter</source>
          <target state="translated">Illuminate\Contracts\Encryption\Encrypter</target>
        </trans-unit>
        <trans-unit id="e4a1d0e8a46552d2bcf1f41b6f72e1b2ecb1f62e" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Events</source>
          <target state="translated">Illuminate\Contracts\Events</target>
        </trans-unit>
        <trans-unit id="38ecd2e56b791f72f4cf8e9903b244205d7817df" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Events\Dispatcher</source>
          <target state="translated">Illuminate\Contracts\Events\Dispatcher</target>
        </trans-unit>
        <trans-unit id="b8f424bf60b25406caeb119dac30135fbdb60718" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Filesystem</source>
          <target state="translated">Illuminate\Contracts\Filesystem</target>
        </trans-unit>
        <trans-unit id="b7ebfe8998a4a24896a0890e7fb13a94cc825bd4" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Filesystem\Cloud</source>
          <target state="translated">Illuminate\Contracts\Filesystem\Cloud</target>
        </trans-unit>
        <trans-unit id="e96bfe6e6638e229bc7702ca9560e23324ec7b3f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Filesystem\Factory</source>
          <target state="translated">Illuminate\Contracts\Filesystem\Factory</target>
        </trans-unit>
        <trans-unit id="36fa7356c844a879861fe10c9a383ce7472b5fb1" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Filesystem\Filesystem</source>
          <target state="translated">Illuminate\Contracts\Filesystem\Filesystem</target>
        </trans-unit>
        <trans-unit id="ee654e7837ac1ad521f42cccae585eb1528740b2" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Foundation</source>
          <target state="translated">Illuminate\Contracts\Foundation</target>
        </trans-unit>
        <trans-unit id="f49a1076f7e79eea3e2a1e30a8b540d6127d7689" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Foundation\Application</source>
          <target state="translated">Illuminate\Contracts\Foundation\Application</target>
        </trans-unit>
        <trans-unit id="a2ba43056d28c2d660b1fd87446f5841cbbf4008" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Hashing</source>
          <target state="translated">Illuminate\Contracts\Hashing</target>
        </trans-unit>
        <trans-unit id="46f9e70cf479a65506824f2e83fb866676faa0d7" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Hashing\Hasher</source>
          <target state="translated">Illuminate\Contracts\Hashing\Hasher</target>
        </trans-unit>
        <trans-unit id="6e353f4122f131db6ceddad5b272f9db9aff00bf" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Http</source>
          <target state="translated">Illuminate\Contracts\Http</target>
        </trans-unit>
        <trans-unit id="c2eaf09bb9aafdede6f8111fee9f160321816833" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Http\Kernel</source>
          <target state="translated">Illuminate\Contracts\Http\Kernel</target>
        </trans-unit>
        <trans-unit id="b52770531bfb594ce0cd80c3c4eaae02236b9554" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Mail</source>
          <target state="translated">Illuminate\Contracts\Mail</target>
        </trans-unit>
        <trans-unit id="6f2b3bf92ddff770d8c1121448c8c7cf88a8e042" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Mail\MailQueue</source>
          <target state="translated">Illuminate\Contracts\Mail\MailQueue</target>
        </trans-unit>
        <trans-unit id="b83f3a0446d03576a9f9ca845c663b8d76c6f980" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Mail\Mailable</source>
          <target state="translated">Illuminate\Contracts\Mail\Mailable</target>
        </trans-unit>
        <trans-unit id="00ee098dc8db8576475398516c2197dc3cfdcd0a" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Mail\Mailer</source>
          <target state="translated">Illuminate\Contracts\Mail\Mailer</target>
        </trans-unit>
        <trans-unit id="96df9f9a65f4b839580778b8a916417926d3801c" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Notifications</source>
          <target state="translated">Illuminate\Contracts\Notifications</target>
        </trans-unit>
        <trans-unit id="8fa4624be6f967183c19c4b946b3f7504d46afda" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Notifications\Dispatcher</source>
          <target state="translated">Illuminate\Contracts\Notifications\Dispatcher</target>
        </trans-unit>
        <trans-unit id="0e369803c991de2261184a72d8ddc0703efcfda0" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Notifications\Factory</source>
          <target state="translated">Illuminate\Contracts\Notifications\Factory</target>
        </trans-unit>
        <trans-unit id="b2c0fd9bbfb2861a4219553a2ef292df34db9234" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pagination</source>
          <target state="translated">Illuminate\Contracts\Pagination</target>
        </trans-unit>
        <trans-unit id="13990b783a4308ae04519f2c5ed9aaefee08f0cd" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pagination\LengthAwarePaginator</source>
          <target state="translated">Illuminate\Contracts\Pagination\LengthAwarePaginator</target>
        </trans-unit>
        <trans-unit id="b7b52ae8b75ccff0e395aa3aa98593bba3a04407" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pagination\Paginator</source>
          <target state="translated">Illuminate\Contracts\Pagination\Paginator</target>
        </trans-unit>
        <trans-unit id="9476860ad9829f6678a25f1522ac7e8f671199de" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pipeline</source>
          <target state="translated">Illuminate\Contracts\Pipeline</target>
        </trans-unit>
        <trans-unit id="b1204de1be9a4e966f7d798ec0e82d09990630ba" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pipeline\Hub</source>
          <target state="translated">Illuminate\Contracts\Pipeline\Hub</target>
        </trans-unit>
        <trans-unit id="667edea2b86102e4a4fb45e37cfb9d4aa55e7b51" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Pipeline\Pipeline</source>
          <target state="translated">Illuminate\Contracts\Pipeline\Pipeline</target>
        </trans-unit>
        <trans-unit id="155d11ee4214721ecd829b5a1f35acb287cff62b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue</source>
          <target state="translated">Illuminate\Contracts\Queue</target>
        </trans-unit>
        <trans-unit id="0f8bdcae0383de9aa410f7c5ec773e1907f3effe" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\EntityResolver</source>
          <target state="translated">Illuminate\Contracts\Queue\EntityResolver</target>
        </trans-unit>
        <trans-unit id="e7e1b916bfd5b6dc20bf981f0a6d84dcc717551c" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\Factory</source>
          <target state="translated">Illuminate\Contracts\Queue\Factory</target>
        </trans-unit>
        <trans-unit id="4f2ebb8a02c735bc0b7bbaf38f0ce66e65ed5d90" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\Job</source>
          <target state="translated">Illuminate\Contracts\Queue\Job</target>
        </trans-unit>
        <trans-unit id="56d130644dcb39374063110176c6a27f3659de78" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\Monitor</source>
          <target state="translated">Illuminate\Contracts\Queue\Monitor</target>
        </trans-unit>
        <trans-unit id="2cc02eaa42308446fc1960d9808cf1d6c10b4b15" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\Queue</source>
          <target state="translated">Illuminate\Contracts\Queue\Queue</target>
        </trans-unit>
        <trans-unit id="2d8c7e5d803f93d17f0bf1423b995694d697c50d" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\QueueableCollection</source>
          <target state="translated">Illuminate\Contracts\Queue\QueueableCollection</target>
        </trans-unit>
        <trans-unit id="dcf1de4dce45dd52932a8d097657aa6e53f72c4e" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\QueueableEntity</source>
          <target state="translated">Illuminate\Contracts\Queue\QueueableEntity</target>
        </trans-unit>
        <trans-unit id="a87cc82cfd15b4d913c7f804036dcfa8626c33bd" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Queue\ShouldQueue</source>
          <target state="translated">Illuminate\Contracts\Queue\ShouldQueue</target>
        </trans-unit>
        <trans-unit id="1ab26e5d7e9330af411ba0ccf11b6c61f9060359" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Redis</source>
          <target state="translated">Illuminate\Contracts\Redis</target>
        </trans-unit>
        <trans-unit id="4832d9546f5fea938ee9542ef0a82b8f6c358c0c" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Redis\Factory</source>
          <target state="translated">Illuminate\Contracts\Redis\Factory</target>
        </trans-unit>
        <trans-unit id="c2095ddfe9c36498ea6eea25b10b3e4bdb16956d" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing</source>
          <target state="translated">Illuminate\Contracts\Routing</target>
        </trans-unit>
        <trans-unit id="03cfcf1b087be5d60dbafeef33551d36e20e2e59" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing\BindingRegistrar</source>
          <target state="translated">Illuminate\Contracts\Routing\BindingRegistrar</target>
        </trans-unit>
        <trans-unit id="2ea3758b553ee5f5ba7eab10d5c1e15fe324988b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing\Registrar</source>
          <target state="translated">Illuminate\Contracts\Routing\Registrar</target>
        </trans-unit>
        <trans-unit id="c3c65799d437c9f3479b8afd8e5c295173fb663e" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing\ResponseFactory</source>
          <target state="translated">Illuminate\Contracts\Routing\ResponseFactory</target>
        </trans-unit>
        <trans-unit id="def8234e4c135051aff18ee1e36c82cd245ec0bf" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing\UrlGenerator</source>
          <target state="translated">Illuminate\Contracts\Routing\UrlGenerator</target>
        </trans-unit>
        <trans-unit id="d17029a9b67c1bc4bdda57ca353d48946f718ccb" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Routing\UrlRoutable</source>
          <target state="translated">Illuminate\Contracts\Routing\UrlRoutable</target>
        </trans-unit>
        <trans-unit id="cb415e63e894dd5625c434a2ce72a90d2ac57a0f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Session</source>
          <target state="translated">Illuminate\Contracts\Session</target>
        </trans-unit>
        <trans-unit id="ff31505899c91ae30cccec6445d03eb97d3863e5" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Session\Session</source>
          <target state="translated">Illuminate\Contracts\Session\Session</target>
        </trans-unit>
        <trans-unit id="643f107b6bf0276c7cb1bff3e70492155ef8fd46" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support</source>
          <target state="translated">Illuminate\Contracts\Support</target>
        </trans-unit>
        <trans-unit id="4201bab0ce7f6c8ddb75755a68fbb7d73720cdbc" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\Arrayable</source>
          <target state="translated">Illuminate\Contracts\Support\Arrayable</target>
        </trans-unit>
        <trans-unit id="4983564fbf23f69741ba6fa466114e5edc752a7e" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\Htmlable</source>
          <target state="translated">Illuminate\Contracts\Support\Htmlable</target>
        </trans-unit>
        <trans-unit id="88cda88d51e9f874b60a0449d1f8b82014e7126f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\Jsonable</source>
          <target state="translated">Illuminate\Contracts\Support\Jsonable</target>
        </trans-unit>
        <trans-unit id="b4f38521d130e71b6051db47f75ad2e7ddb69c01" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\MessageBag</source>
          <target state="translated">Illuminate\Contracts\Support\MessageBag</target>
        </trans-unit>
        <trans-unit id="33b4ac20af8cd13093f93352c243ac550e2c9f24" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\MessageProvider</source>
          <target state="translated">Illuminate\Contracts\Support\MessageProvider</target>
        </trans-unit>
        <trans-unit id="30ffe04f711cefe0dc15eac86f56ad5a99419f6f" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\Renderable</source>
          <target state="translated">Illuminate\Contracts\Support\Renderable</target>
        </trans-unit>
        <trans-unit id="dbde2e4e586577b95cc65bb787286d3cd776f958" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Support\Responsable</source>
          <target state="translated">Illuminate\Contracts\Support\Responsable</target>
        </trans-unit>
        <trans-unit id="c82828c5d5c89d7c92025b83ef5318f48527b562" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Translation</source>
          <target state="translated">Illuminate\Contracts\Translation</target>
        </trans-unit>
        <trans-unit id="8442a54148f6fc25116afaba0c79af4330044f52" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Translation\Loader</source>
          <target state="translated">Illuminate\Contracts\Translation\Loader</target>
        </trans-unit>
        <trans-unit id="4abf6c09b484e993be42aeae38cb591d6d4d4575" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Translation\Translator</source>
          <target state="translated">Illuminate\Contracts\Translation\Translator</target>
        </trans-unit>
        <trans-unit id="aaf0ea53b0b50f6c1d919e1efe40bcfaf54f5041" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation</source>
          <target state="translated">Illuminate\Contracts\Validation</target>
        </trans-unit>
        <trans-unit id="a098f5e36caed29af5b07f8717a070922650e403" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation\Factory</source>
          <target state="translated">Illuminate\Contracts\Validation\Factory</target>
        </trans-unit>
        <trans-unit id="0b4e34adaac533dbf5e5448924c390a51dcefcdf" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation\ImplicitRule</source>
          <target state="translated">Illuminate\Contracts\Validation\ImplicitRule</target>
        </trans-unit>
        <trans-unit id="d295f7f130199f8b2a093e81ff1e994716b7ee4b" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation\Rule</source>
          <target state="translated">Illuminate\Contracts\Validation\Rule</target>
        </trans-unit>
        <trans-unit id="092a93ddcb84be67b32b12e4db4041bd2f29648a" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation\ValidatesWhenResolved</source>
          <target state="translated">Illuminate\Contracts\Validation\ValidatesWhenResolved</target>
        </trans-unit>
        <trans-unit id="2e68d3cf72f9fb66b46f101aa3f60e72b41580e5" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\Validation\Validator</source>
          <target state="translated">Illuminate\Contracts\Validation\Validator</target>
        </trans-unit>
        <trans-unit id="e15d30d72ee5fe9a2cbc9659b240f5fa52bac3a4" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\View</source>
          <target state="translated">Illuminate\Contracts\View</target>
        </trans-unit>
        <trans-unit id="6555e4d6826eb0489c7a0c712d30c9a3eae84851" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\View\Engine</source>
          <target state="translated">Illuminate\Contracts\View\Engine</target>
        </trans-unit>
        <trans-unit id="e659e4b92de46ce67c8b69bf8331e86a54a611d0" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\View\Factory</source>
          <target state="translated">Illuminate\Contracts\View\Factory</target>
        </trans-unit>
        <trans-unit id="7138b953402698ee5c43d684275cfad7a9b527d5" translate="yes" xml:space="preserve">
          <source>Illuminate\Contracts\View\View</source>
          <target state="translated">Illuminate\Contracts\View\View</target>
        </trans-unit>
        <trans-unit id="d82d5063c7d4a2496aae9c867bf1f854d6400da5" translate="yes" xml:space="preserve">
          <source>Illuminate\Cookie</source>
          <target state="translated">Illuminate\Cookie</target>
        </trans-unit>
        <trans-unit id="075c1d67cc9da4339795a325ad385489eea42330" translate="yes" xml:space="preserve">
          <source>Illuminate\Cookie\CookieJar</source>
          <target state="translated">Illuminate\Cookie\CookieJar</target>
        </trans-unit>
        <trans-unit id="7d9c66d24af9ca9da4c4b8c751c24e9685f2114d" translate="yes" xml:space="preserve">
          <source>Illuminate\Cookie\Middleware</source>
          <target state="translated">Illuminate\Cookie\Middleware</target>
        </trans-unit>
        <trans-unit id="485a86103811fe0e91c10648bf3c68110509b7eb" translate="yes" xml:space="preserve">
          <source>Illuminate\Database</source>
          <target state="translated">Illuminate\Database</target>
        </trans-unit>
        <trans-unit id="ac43d80ead7e1f6cef11e64d6cb100d61e72c54a" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Capsule</source>
          <target state="translated">Illuminate\Database\Capsule</target>
        </trans-unit>
        <trans-unit id="45afe7c0925dff8e7a00b1882d7d1e6e7ecb8200" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Concerns</source>
          <target state="translated">Illuminate\Database\Concerns</target>
        </trans-unit>
        <trans-unit id="137849ad128d72fb6e3b49c88f69ced1f50fbcbf" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Connection</source>
          <target state="translated">Illuminate\Database\Connection</target>
        </trans-unit>
        <trans-unit id="065889ec88e25eca5587901e3462e44baf6b70c8" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Connectors</source>
          <target state="translated">Illuminate\Database\Connectors</target>
        </trans-unit>
        <trans-unit id="a9a76008bc5a63bef0cdc26c372ad3b07997c7f9" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Console</source>
          <target state="translated">Illuminate\Database\Console</target>
        </trans-unit>
        <trans-unit id="c3137881d86002f2aee5244d2115c41aa02ab3d4" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Console\Factories</source>
          <target state="translated">Illuminate\Database\Console\Factories</target>
        </trans-unit>
        <trans-unit id="52e782108b87683f0b336e134ec07479df6c9988" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Console\Migrations</source>
          <target state="translated">Illuminate\Database\Console\Migrations</target>
        </trans-unit>
        <trans-unit id="ed8a199582f415db7c36ad4da2c982e289d65d90" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Console\Seeds</source>
          <target state="translated">Illuminate\Database\Console\Seeds</target>
        </trans-unit>
        <trans-unit id="8f7d6de38d938386d87cad70f1902f08b5f8a16f" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\DatabaseManager</source>
          <target state="translated">Illuminate\Database\DatabaseManager</target>
        </trans-unit>
        <trans-unit id="03e704904221d24fda47d7abd8e1c9022ac687a5" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Eloquent</source>
          <target state="translated">Illuminate\Database\Eloquent</target>
        </trans-unit>
        <trans-unit id="af7b97abb015a13eb1ca36220e05751751240365" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Eloquent\Concerns</source>
          <target state="translated">Illuminate\Database\Eloquent\Concerns</target>
        </trans-unit>
        <trans-unit id="9b8a6a36a7030a33a8fc3593c63053451504749d" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Eloquent\Factories</source>
          <target state="translated">Illuminate\Database\Eloquent\Factories</target>
        </trans-unit>
        <trans-unit id="fc6fa08afee4422f35f26f98d9e9e18de11d01cb" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Eloquent\Relations</source>
          <target state="translated">Illuminate\Database\Eloquent\Relations</target>
        </trans-unit>
        <trans-unit id="6168b3303423b72004f94f8eeed275cbb5f3516e" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Eloquent\Relations\Concerns</source>
          <target state="translated">Illuminate\Database\Eloquent\Relations\Concerns</target>
        </trans-unit>
        <trans-unit id="3a0bbe4390beb31a5343409426dea10c41e93b02" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Events</source>
          <target state="translated">Illuminate\Database\Events</target>
        </trans-unit>
        <trans-unit id="d822375a0c6ea499a2b1e700d87ed15fca66bbd0" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Migrations</source>
          <target state="translated">Illuminate\Database\Migrations</target>
        </trans-unit>
        <trans-unit id="3a9f66fa8e41e95eb6114b988462352d653fc443" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Query</source>
          <target state="translated">Illuminate\Database\Query</target>
        </trans-unit>
        <trans-unit id="58428e7d68dd39a594220d7cce4a028bf31c13a6" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Query\Grammars</source>
          <target state="translated">Illuminate\Database\Query\Grammars</target>
        </trans-unit>
        <trans-unit id="db8943cd5bffc8881c7f8caabc1c8e2bcfb820ab" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Query\Processors</source>
          <target state="translated">Illuminate\Database\Query\Processors</target>
        </trans-unit>
        <trans-unit id="cbf0948f0025e4f8414d1e5b8aa831be1f6fff4b" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Schema</source>
          <target state="translated">Illuminate\Database\Schema</target>
        </trans-unit>
        <trans-unit id="347cf428c2f7a55fdd3c03be17a97c187e93a297" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Schema\Builder</source>
          <target state="translated">Illuminate\Database\Schema\Builder</target>
        </trans-unit>
        <trans-unit id="9cc4c6071e26037cb19b608ae601f1acc9affd52" translate="yes" xml:space="preserve">
          <source>Illuminate\Database\Schema\Grammars</source>
          <target state="translated">Illuminate\Database\Schema\Grammars</target>
        </trans-unit>
        <trans-unit id="529beafec6b2845ebf1adbd1bb5d5da5ba9c0e66" translate="yes" xml:space="preserve">
          <source>Illuminate\Encryption</source>
          <target state="translated">Illuminate\Encryption</target>
        </trans-unit>
        <trans-unit id="59dbd5da972f58554ff98fd817a3e98734018c3a" translate="yes" xml:space="preserve">
          <source>Illuminate\Encryption\Encrypter</source>
          <target state="translated">Illuminate\Encryption\Encrypter</target>
        </trans-unit>
        <trans-unit id="b2d201376495d6af0dd58d518864420b196c09a9" translate="yes" xml:space="preserve">
          <source>Illuminate\Events</source>
          <target state="translated">Illuminate\Events</target>
        </trans-unit>
        <trans-unit id="5807171f6ca650b433d48ef146954d4fe40b2867" translate="yes" xml:space="preserve">
          <source>Illuminate\Events\Dispatcher</source>
          <target state="translated">Illuminate\Events\Dispatcher</target>
        </trans-unit>
        <trans-unit id="687dbb77dfb114985a6b2f367ea40027698328c6" translate="yes" xml:space="preserve">
          <source>Illuminate\Filesystem</source>
          <target state="translated">Illuminate\Filesystem</target>
        </trans-unit>
        <trans-unit id="9fa2ea01d6574bc8012d6e60882bfc8d582f600a" translate="yes" xml:space="preserve">
          <source>Illuminate\Filesystem\Filesystem</source>
          <target state="translated">Illuminate\Filesystem\Filesystem</target>
        </trans-unit>
        <trans-unit id="589020ae55bf65cd2a6e905249156a9aba377456" translate="yes" xml:space="preserve">
          <source>Illuminate\Filesystem\FilesystemManager</source>
          <target state="translated">Illuminate\Filesystem\FilesystemManager</target>
        </trans-unit>
        <trans-unit id="eae3b27ce804029a337afe1a7f833ce2819edca6" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation</source>
          <target state="translated">Illuminate\Foundation</target>
        </trans-unit>
        <trans-unit id="762b785b624baf12b66e32b2d5ffacd9f87e1515" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Application</source>
          <target state="translated">Illuminate\Foundation\Application</target>
        </trans-unit>
        <trans-unit id="44aeeac223def71656dd1eef856c6cf4576c9e87" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Auth</source>
          <target state="translated">Illuminate\Foundation\Auth</target>
        </trans-unit>
        <trans-unit id="d250ece3feb91a177be3e4d30121448990ce4498" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Auth\Access</source>
          <target state="translated">Illuminate\Foundation\Auth\Access</target>
        </trans-unit>
        <trans-unit id="7b960e72b5ae6089c3d74fb7694428a3f983addd" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Bootstrap</source>
          <target state="translated">Illuminate\Foundation\Bootstrap</target>
        </trans-unit>
        <trans-unit id="3f9603c68f27dd40e7279727c05879b15618c431" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Bus</source>
          <target state="translated">Illuminate\Foundation\Bus</target>
        </trans-unit>
        <trans-unit id="6d4e1a7b443f117f44a4b57ebc9fa9136f2192ab" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Console</source>
          <target state="translated">Illuminate\Foundation\Console</target>
        </trans-unit>
        <trans-unit id="06bcc65445d528a3d2fb2f48aa8050ea06091ae5" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Console\Presets</source>
          <target state="translated">Illuminate\Foundation\Console\Presets</target>
        </trans-unit>
        <trans-unit id="1f76f552b2a9b82029784ffbf30a0d6a9c7988fd" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Events</source>
          <target state="translated">Illuminate\Foundation\Events</target>
        </trans-unit>
        <trans-unit id="970976110acac261dbbafc956e8a2c8bad034bbc" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Exceptions</source>
          <target state="translated">Illuminate\Foundation\Exceptions</target>
        </trans-unit>
        <trans-unit id="f4a5027e0fa5b201af8b449655c74cc78172e537" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Http</source>
          <target state="translated">Illuminate\Foundation\Http</target>
        </trans-unit>
        <trans-unit id="040bff284fe73ae90e09ab2d3c65b23df20fda6a" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Http\Events</source>
          <target state="translated">Illuminate\Foundation\Http\Events</target>
        </trans-unit>
        <trans-unit id="23da52da8a770f73d57d7324e96be507d87cdfda" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Http\Exceptions</source>
          <target state="translated">Illuminate\Foundation\Http\Exceptions</target>
        </trans-unit>
        <trans-unit id="11f4ba2f011eba2fff536d7bc19168ff979968de" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Http\Middleware</source>
          <target state="translated">Illuminate\Foundation\Http\Middleware</target>
        </trans-unit>
        <trans-unit id="3f540aa4e94db9ebf89122219a6a15e149fe37ef" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Providers</source>
          <target state="translated">Illuminate\Foundation\Providers</target>
        </trans-unit>
        <trans-unit id="247097724f8e1422953d9e2a322009dddc68cd16" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Support</source>
          <target state="translated">Illuminate\Foundation\Support</target>
        </trans-unit>
        <trans-unit id="d456f3becda9cce4168b71a717b7118bfb0e63ee" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Support\Providers</source>
          <target state="translated">Illuminate\Foundation\Support\Providers</target>
        </trans-unit>
        <trans-unit id="ecced7aaa77f307e8747316a23328fa81478088d" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Testing</source>
          <target state="translated">Illuminate\Foundation\Testing</target>
        </trans-unit>
        <trans-unit id="ca8cc7d56e5696bb54b723209b9c543fa8891842" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Testing\Concerns</source>
          <target state="translated">Illuminate\Foundation\Testing\Concerns</target>
        </trans-unit>
        <trans-unit id="ac9775cc5b6d79e0cad6f2915baa35b8351203fd" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Testing\Constraints</source>
          <target state="translated">Illuminate\Foundation\Testing\Constraints</target>
        </trans-unit>
        <trans-unit id="1d912fb2091861c3d546761423b5a526cb297185" translate="yes" xml:space="preserve">
          <source>Illuminate\Foundation\Validation</source>
          <target state="translated">Illuminate\Foundation\Validation</target>
        </trans-unit>
        <trans-unit id="015b0ed1b887eff9332acd05201ed8b447fb077d" translate="yes" xml:space="preserve">
          <source>Illuminate\Hashing</source>
          <target state="translated">Illuminate\Hashing</target>
        </trans-unit>
        <trans-unit id="d044a6c16c0e757149d8f54982f18135d934963a" translate="yes" xml:space="preserve">
          <source>Illuminate\Http</source>
          <target state="translated">Illuminate\Http</target>
        </trans-unit>
        <trans-unit id="d0b541cb737234364d4ea3d365e4795f54f345da" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Client</source>
          <target state="translated">Illuminate\Http\Client</target>
        </trans-unit>
        <trans-unit id="7a558f96810457ca2dcd1fc3b279b879ab0b0333" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Client\Factory</source>
          <target state="translated">Illuminate\Http\Client\Factory</target>
        </trans-unit>
        <trans-unit id="6ccd4a1ee6836c5883d9451dc345a23f48da1013" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Concerns</source>
          <target state="translated">Illuminate\Http\Concerns</target>
        </trans-unit>
        <trans-unit id="ded9d7213951f81619fe3b73e78bdf4d61384a53" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Exceptions</source>
          <target state="translated">Illuminate\Http\Exceptions</target>
        </trans-unit>
        <trans-unit id="a89bab0018a3f75e820665c98423f217d31a66ac" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Middleware</source>
          <target state="translated">Illuminate\Http\Middleware</target>
        </trans-unit>
        <trans-unit id="b2b3983e29d4f1d6c52f8bb25ec8226e4dcdc8be" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Request</source>
          <target state="translated">Illuminate\Http\Request</target>
        </trans-unit>
        <trans-unit id="aec982af8e53df9f3cfeef14a1959500e519cfc5" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Resources</source>
          <target state="translated">Illuminate\Http\Resources</target>
        </trans-unit>
        <trans-unit id="7e887eb6c4197c91297debb5c92f67b7d122282d" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Resources\Json</source>
          <target state="translated">Illuminate\Http\Resources\Json</target>
        </trans-unit>
        <trans-unit id="6d8e2a2dd9e9fa948c305d75f615009a11b82493" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Response</source>
          <target state="translated">Illuminate\Http\Response</target>
        </trans-unit>
        <trans-unit id="4488ace460482ed7d12e30e00a1b5e131364fdfc" translate="yes" xml:space="preserve">
          <source>Illuminate\Http\Testing</source>
          <target state="translated">Illuminate\Http\Testing</target>
        </trans-unit>
        <trans-unit id="849a3990c510bd91c65c0528d2b610561e5aa936" translate="yes" xml:space="preserve">
          <source>Illuminate\Log</source>
          <target state="translated">Illuminate\Log</target>
        </trans-unit>
        <trans-unit id="8dff5f85a76aff8135ce0c4653590d9af3ee5067" translate="yes" xml:space="preserve">
          <source>Illuminate\Log\Events</source>
          <target state="translated">Illuminate\Log\Events</target>
        </trans-unit>
        <trans-unit id="fdf7241018ae6bbc5b5d8aae6344a6cfa836e9bc" translate="yes" xml:space="preserve">
          <source>Illuminate\Log\LogManager</source>
          <target state="translated">Illuminate\Log\LogManager</target>
        </trans-unit>
        <trans-unit id="2a6c34aa61dc2dbe29132426b9ea15cd480570da" translate="yes" xml:space="preserve">
          <source>Illuminate\Log\Logger</source>
          <target state="translated">Illuminate\Log\Logger</target>
        </trans-unit>
        <trans-unit id="e2995be3e5b9482c4e4e1e0185f840f1dc52f1db" translate="yes" xml:space="preserve">
          <source>Illuminate\Mail</source>
          <target state="translated">Illuminate\Mail</target>
        </trans-unit>
        <trans-unit id="37c4d5c8de158dfa6df75617161022e94ed5084a" translate="yes" xml:space="preserve">
          <source>Illuminate\Mail\Events</source>
          <target state="translated">Illuminate\Mail\Events</target>
        </trans-unit>
        <trans-unit id="9c6c26ada18d8545e66c00571f7e0e1b64b5227b" translate="yes" xml:space="preserve">
          <source>Illuminate\Mail\Mailer</source>
          <target state="translated">Illuminate\Mail\Mailer</target>
        </trans-unit>
        <trans-unit id="5866a4cb280fbf322246bd4a1e4665b885f71516" translate="yes" xml:space="preserve">
          <source>Illuminate\Mail\Transport</source>
          <target state="translated">Illuminate\Mail\Transport</target>
        </trans-unit>
        <trans-unit id="673903a63c6bdd680b0e9bd7ff871c69bd69e12d" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications</source>
          <target state="translated">Illuminate\Notifications</target>
        </trans-unit>
        <trans-unit id="d3b4abda00af643c5b9dcb8adfe203b45687295e" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications\ChannelManager</source>
          <target state="translated">Illuminate\Notifications\ChannelManager</target>
        </trans-unit>
        <trans-unit id="6cf0b26331ff65c3d1f91c423aa57063f2c567e1" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications\Channels</source>
          <target state="translated">Illuminate\Notifications\Channels</target>
        </trans-unit>
        <trans-unit id="4d869061cc599091c2ff83bae0a815d4d356e82d" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications\Console</source>
          <target state="translated">Illuminate\Notifications\Console</target>
        </trans-unit>
        <trans-unit id="c805a27c327342f570caf1eab304f464f7d6e65c" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications\Events</source>
          <target state="translated">Illuminate\Notifications\Events</target>
        </trans-unit>
        <trans-unit id="e0710e0312a828c2f9e7b4e8849eda0cd3de8297" translate="yes" xml:space="preserve">
          <source>Illuminate\Notifications\Messages</source>
          <target state="translated">Illuminate\Notifications\Messages</target>
        </trans-unit>
        <trans-unit id="fa44d3cd0a4cbb74479c488749e244d4b4d63b31" translate="yes" xml:space="preserve">
          <source>Illuminate\Pagination</source>
          <target state="translated">Illuminate\Pagination</target>
        </trans-unit>
        <trans-unit id="a8fb42032983b6b82cd0b1ab4938e0226d3c0589" translate="yes" xml:space="preserve">
          <source>Illuminate\Pipeline</source>
          <target state="translated">Illuminate\Pipeline</target>
        </trans-unit>
        <trans-unit id="a24c953de9fc9d143031bd41c1c9e9fb807bb9c4" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue</source>
          <target state="translated">Illuminate\Queue</target>
        </trans-unit>
        <trans-unit id="575486e64eed1dfce137dbcb8fa36fb813702082" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Capsule</source>
          <target state="translated">Illuminate\Queue\Capsule</target>
        </trans-unit>
        <trans-unit id="f0265089943c94e6c5d8dc44cf3a59a9ee23f0a5" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Connectors</source>
          <target state="translated">Illuminate\Queue\Connectors</target>
        </trans-unit>
        <trans-unit id="9d05edc9c74de685f63be995a221a2676c0dc9ca" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Console</source>
          <target state="translated">Illuminate\Queue\Console</target>
        </trans-unit>
        <trans-unit id="c89c877141dffdd7580e07e50bfdeb6f4a726869" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Events</source>
          <target state="translated">Illuminate\Queue\Events</target>
        </trans-unit>
        <trans-unit id="a24c8d009cab4b2e78f20150a8067b8f9fc6a115" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Failed</source>
          <target state="translated">Illuminate\Queue\Failed</target>
        </trans-unit>
        <trans-unit id="8a4e9878d6fcf790898927fb83d34eda9f72f5be" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Jobs</source>
          <target state="translated">Illuminate\Queue\Jobs</target>
        </trans-unit>
        <trans-unit id="c4da4266402e929e467a3e724584e4808dd04159" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Middleware</source>
          <target state="translated">Illuminate\Queue\Middleware</target>
        </trans-unit>
        <trans-unit id="7dbfe69301371a1ad6068d73b0203107bbcddf1a" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\Queue</source>
          <target state="translated">Illuminate\Queue\Queue</target>
        </trans-unit>
        <trans-unit id="06cdacf690ae0ddefd0d1fb26d6b9b330b9221b2" translate="yes" xml:space="preserve">
          <source>Illuminate\Queue\QueueManager</source>
          <target state="translated">Illuminate\Queue\QueueManager</target>
        </trans-unit>
        <trans-unit id="7a67cf7f15302008eae27879da8784a598eb8d34" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis</source>
          <target state="translated">Illuminate\Redis</target>
        </trans-unit>
        <trans-unit id="d298417a6f2b1dd01555d0e57aa2ca70b07a2507" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\Connections</source>
          <target state="translated">Illuminate\Redis\Connections</target>
        </trans-unit>
        <trans-unit id="b4efe6be20221ee31c974e4a2e485c83e0c4b113" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\Connections\Connection</source>
          <target state="translated">Illuminate\Redis\Connections\Connection</target>
        </trans-unit>
        <trans-unit id="8f5c8830a7b26c155c35a985c906c4053e603d26" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\Connectors</source>
          <target state="translated">Illuminate\Redis\Connectors</target>
        </trans-unit>
        <trans-unit id="6331749eb2b72dbc188c74da12c82cf3109a998e" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\Events</source>
          <target state="translated">Illuminate\Redis\Events</target>
        </trans-unit>
        <trans-unit id="e3ad04349ae8ffcd5669b9affd4e87229149fed8" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\Limiters</source>
          <target state="translated">Illuminate\Redis\Limiters</target>
        </trans-unit>
        <trans-unit id="b2045a7d62b20387b94b7efb4b1618d0dd55f0da" translate="yes" xml:space="preserve">
          <source>Illuminate\Redis\RedisManager</source>
          <target state="translated">Illuminate\Redis\RedisManager</target>
        </trans-unit>
        <trans-unit id="59b076c1b404a9f411334857d5683d7a470d9774" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing</source>
          <target state="translated">Illuminate\Routing</target>
        </trans-unit>
        <trans-unit id="2055a8e2c15a7132bb4ec0db4b1bbe28e2a91ac8" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Console</source>
          <target state="translated">Illuminate\Routing\Console</target>
        </trans-unit>
        <trans-unit id="5cf62a13907187aca2a7db56c9bbc29e11f9b862" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Contracts</source>
          <target state="translated">Illuminate\Routing\Contracts</target>
        </trans-unit>
        <trans-unit id="ae22fa68b46e0303f35be4a54b71ec67b3bf3aa4" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Events</source>
          <target state="translated">Illuminate\Routing\Events</target>
        </trans-unit>
        <trans-unit id="82e9baf864e371356db92e2778bc8023b68a3234" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Exceptions</source>
          <target state="translated">Illuminate\Routing\Exceptions</target>
        </trans-unit>
        <trans-unit id="2db1b07296de5ba55388ff0eb08bdd477db25d9e" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Matching</source>
          <target state="translated">Illuminate\Routing\Matching</target>
        </trans-unit>
        <trans-unit id="e394ca3b939fdddb54e099bd0e1e7a9d1d04da1d" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Middleware</source>
          <target state="translated">Illuminate\Routing\Middleware</target>
        </trans-unit>
        <trans-unit id="6f57272348f4b61b5ee1bbd7854cf81960f6b0f1" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Redirector</source>
          <target state="translated">Illuminate\Routing\Redirector</target>
        </trans-unit>
        <trans-unit id="ac0336c53d50171aa6fa6b2f3a94dd97c545c2ba" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\Router</source>
          <target state="translated">Illuminate\Routing\Router</target>
        </trans-unit>
        <trans-unit id="f7815bc65e394f884c7f74f221442e49ab5a1af7" translate="yes" xml:space="preserve">
          <source>Illuminate\Routing\UrlGenerator</source>
          <target state="translated">Illuminate\Routing\UrlGenerator</target>
        </trans-unit>
        <trans-unit id="dc7acc43896991aec58aec3673d82852f34d0cad" translate="yes" xml:space="preserve">
          <source>Illuminate\Session</source>
          <target state="translated">Illuminate\Session</target>
        </trans-unit>
        <trans-unit id="1d60d0954d8175eb660c1f7375faebf003a887fc" translate="yes" xml:space="preserve">
          <source>Illuminate\Session\Console</source>
          <target state="translated">Illuminate\Session\Console</target>
        </trans-unit>
        <trans-unit id="f06d30da5ff839a174312b9eea32da5e36454629" translate="yes" xml:space="preserve">
          <source>Illuminate\Session\Middleware</source>
          <target state="translated">Illuminate\Session\Middleware</target>
        </trans-unit>
        <trans-unit id="043f84aa4b9e48f4f0e34e095a709f2874470659" translate="yes" xml:space="preserve">
          <source>Illuminate\Session\SessionManager</source>
          <target state="translated">Illuminate\Session\SessionManager</target>
        </trans-unit>
        <trans-unit id="b3594f82a2c318474602e0d71f5771ad4e5a53a7" translate="yes" xml:space="preserve">
          <source>Illuminate\Session\Store</source>
          <target state="translated">Illuminate\Session\Store</target>
        </trans-unit>
        <trans-unit id="f1e1cf387160fb189c9794a57a3f959d5f119c55" translate="yes" xml:space="preserve">
          <source>Illuminate\Support</source>
          <target state="translated">Illuminate\Support</target>
        </trans-unit>
        <trans-unit id="2f9b70309c0f0becd388b7b8ae38e82698ca5cc4" translate="yes" xml:space="preserve">
          <source>Illuminate\Support\Facades</source>
          <target state="translated">Illuminate\Support\Facades</target>
        </trans-unit>
        <trans-unit id="2dcd0fe2f0963796c65336523e825385ebafde33" translate="yes" xml:space="preserve">
          <source>Illuminate\Support\Testing</source>
          <target state="translated">Illuminate\Support\Testing</target>
        </trans-unit>
        <trans-unit id="f05cb50b9092736d43cc081d3cfeed35e6f4c28a" translate="yes" xml:space="preserve">
          <source>Illuminate\Support\Testing\Fakes</source>
          <target state="translated">Illuminate\Support\Testing\Fakes</target>
        </trans-unit>
        <trans-unit id="8e6fab5e41524c5fad96d395c8a3c720e3dcbde3" translate="yes" xml:space="preserve">
          <source>Illuminate\Support\Traits</source>
          <target state="translated">Illuminate\Support\Traits</target>
        </trans-unit>
        <trans-unit id="4fc2f674467e315777023ac3d497509230a82546" translate="yes" xml:space="preserve">
          <source>Illuminate\Testing</source>
          <target state="translated">Illuminate\Testing</target>
        </trans-unit>
        <trans-unit id="2a256e804b8e004e9fb70ef86929fe3a8edf157f" translate="yes" xml:space="preserve">
          <source>Illuminate\Testing\Constraints</source>
          <target state="translated">Illuminate\Testing\Constraints</target>
        </trans-unit>
        <trans-unit id="cc81c16893ac979b431df6aa606438fda64b4240" translate="yes" xml:space="preserve">
          <source>Illuminate\Translation</source>
          <target state="translated">Illuminate\Translation</target>
        </trans-unit>
        <trans-unit id="db966afc4753ede4f0db19f0fabcdb925b4ed54b" translate="yes" xml:space="preserve">
          <source>Illuminate\Translation\Translator</source>
          <target state="translated">Illuminate\Translation\Translator</target>
        </trans-unit>
        <trans-unit id="ab593cdecdc4d51ebc473777121daa1d840dd2d7" translate="yes" xml:space="preserve">
          <source>Illuminate\Validation</source>
          <target state="translated">Illuminate\Validation</target>
        </trans-unit>
        <trans-unit id="c970c0d7e91c5429bd563d76510f99a21709ff10" translate="yes" xml:space="preserve">
          <source>Illuminate\Validation\Concerns</source>
          <target state="translated">Illuminate\Validation\Concerns</target>
        </trans-unit>
        <trans-unit id="48cef8214cefc2e23e9abf53496ae042fa7ce85b" translate="yes" xml:space="preserve">
          <source>Illuminate\Validation\Factory</source>
          <target state="translated">Illuminate\Validation\Factory</target>
        </trans-unit>
        <trans-unit id="f7ba48893f5a67d48ecf4414d47195a5eafea0a6" translate="yes" xml:space="preserve">
          <source>Illuminate\Validation\Rules</source>
          <target state="translated">Illuminate\Validation\Rules</target>
        </trans-unit>
        <trans-unit id="ad7ace3ee91fd219b75ac926a0d5fdc7d08ea8f3" translate="yes" xml:space="preserve">
          <source>Illuminate\Validation\Validator</source>
          <target state="translated">Illuminate\Validation\Validator</target>
        </trans-unit>
        <trans-unit id="d6165e3bc2682b7cff170e2f26cf68456aa7f9cc" translate="yes" xml:space="preserve">
          <source>Illuminate\View</source>
          <target state="translated">Illuminate\View</target>
        </trans-unit>
        <trans-unit id="631bd89ffd2741d9f6696ad646ade480ceb6eefc" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Compilers</source>
          <target state="translated">Illuminate\View\Compilers</target>
        </trans-unit>
        <trans-unit id="3e4caf5bdfd85bef41d0de4143862c6f35571fe3" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Compilers\BladeCompiler</source>
          <target state="translated">Illuminate\View\Compilers\BladeCompiler</target>
        </trans-unit>
        <trans-unit id="fab05b277dca4f65ca5f631c940c4ed767206383" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Compilers\Concerns</source>
          <target state="translated">Illuminate\View\Compilers\Concerns</target>
        </trans-unit>
        <trans-unit id="dcd46b27a8ba9371b9d76399575bc09ca54bdd2d" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Concerns</source>
          <target state="translated">Illuminate\View\Concerns</target>
        </trans-unit>
        <trans-unit id="b9767b671330a19850d5e9eadc3b5fb600537479" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Engines</source>
          <target state="translated">Illuminate\View\Engines</target>
        </trans-unit>
        <trans-unit id="1d6e47ff529ae403b3fdcb8e8aeab5e6a55ea870" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Factory</source>
          <target state="translated">Illuminate\View\Factory</target>
        </trans-unit>
        <trans-unit id="6e5c2aaa6d78e27f1007c3ecb6b9a0c0dbf9f33b" translate="yes" xml:space="preserve">
          <source>Illuminate\View\Middleware</source>
          <target state="translated">Illuminate\View\Middleware</target>
        </trans-unit>
        <trans-unit id="8d0a371b86e19f3245c10d0ad8a154576fc1fb9f" translate="yes" xml:space="preserve">
          <source>Illuminate\View\View</source>
          <target state="translated">Illuminate\View\View</target>
        </trans-unit>
        <trans-unit id="2c1693c6ec2fecf9d728de3bd223d247daecfdcc" translate="yes" xml:space="preserve">
          <source>Implementing The Driver</source>
          <target state="translated">ドライバーの実装</target>
        </trans-unit>
        <trans-unit id="e5868306e35f5ed89a827d7088b357d35fdb7d9c" translate="yes" xml:space="preserve">
          <source>Implicit Binding</source>
          <target state="translated">暗黙的バインディング</target>
        </trans-unit>
        <trans-unit id="775898734f518e4c2d42c56fc79fbfdb3f8706a7" translate="yes" xml:space="preserve">
          <source>Implicit Extensions</source>
          <target state="translated">暗黙の拡張機能</target>
        </trans-unit>
        <trans-unit id="0f04d2f7f73b5b2ce9c13c0e62b8e21f7285cfa0" translate="yes" xml:space="preserve">
          <source>Implicit Grant Tokens</source>
          <target state="translated">暗黙の助成金トークン</target>
        </trans-unit>
        <trans-unit id="f5bf809ed2985d67bffc6fc756fbc29dea8db965" translate="yes" xml:space="preserve">
          <source>Implicit Rule Objects</source>
          <target state="translated">暗黙のルールオブジェクト</target>
        </trans-unit>
        <trans-unit id="0760cb30ce2ce5b6e60f9307f92f8a74f92aa9b7" translate="yes" xml:space="preserve">
          <source>ImplicitRouteBinding</source>
          <target state="translated">ImplicitRouteBinding</target>
        </trans-unit>
        <trans-unit id="db47cd33d422202d6d334622961e9c47985df790" translate="yes" xml:space="preserve">
          <source>ImplicitRouteBinding (Routing)</source>
          <target state="translated">ImplicitRouteBinding (ルーティング)</target>
        </trans-unit>
        <trans-unit id="18d267f5821c961e5dbc9140cbd62361d8c1d729" translate="yes" xml:space="preserve">
          <source>ImplicitRouteBinding::getParameterName()</source>
          <target state="translated">ImplicitRouteBinding::getParameterName()</target>
        </trans-unit>
        <trans-unit id="8aa1ead5517e036bf2e30c2ff46a2bac59e06988" translate="yes" xml:space="preserve">
          <source>ImplicitRouteBinding::resolveForRoute()</source>
          <target state="translated">ImplicitRouteBinding::resolveForRoute()</target>
        </trans-unit>
        <trans-unit id="85bd5177b9510e7ff19147bd1b10e1e84bda95cb" translate="yes" xml:space="preserve">
          <source>ImplicitRule</source>
          <target state="translated">ImplicitRule</target>
        </trans-unit>
        <trans-unit id="5759be3863d01ac1d3643359ee54161c214e9f48" translate="yes" xml:space="preserve">
          <source>ImplicitRule (Contracts)</source>
          <target state="translated">ImplicitRule (契約)</target>
        </trans-unit>
        <trans-unit id="991c54aaf20c19e06e8f23f046b9202c265bc190" translate="yes" xml:space="preserve">
          <source>Implode the attributes into a single HTML ready string.</source>
          <target state="translated">属性を一つのHTMLレディな文字列に展開します。</target>
        </trans-unit>
        <trans-unit id="ef288a92c0fd9bfb165acd45d0f1a18d948793a7" translate="yes" xml:space="preserve">
          <source>Import a database into the default &lt;code&gt;master&lt;/code&gt; lmm branch.</source>
          <target state="translated">Import a database into the default &lt;code&gt;master&lt;/code&gt; lmm branch.</target>
        </trans-unit>
        <trans-unit id="a75e15d316bee3c8715d0d4024ac787a57cd6849" translate="yes" xml:space="preserve">
          <source>Improved Maintenance Mode</source>
          <target state="translated">メンテナンスモードの改善</target>
        </trans-unit>
        <trans-unit id="c8a4829b71b55c77fd4de693f5d766ab23405d97" translate="yes" xml:space="preserve">
          <source>Improved Rate Limiting</source>
          <target state="translated">改良された速度制限</target>
        </trans-unit>
        <trans-unit id="aef36502d67b0520654deb764dd055a7e905cfdd" translate="yes" xml:space="preserve">
          <source>In</source>
          <target state="translated">In</target>
        </trans-unit>
        <trans-unit id="db7e950e3dcf61e0b5cb06087fadfde65338c335" translate="yes" xml:space="preserve">
          <source>In (Validation\Rules)</source>
          <target state="translated">In (ValidationRules)</target>
        </trans-unit>
        <trans-unit id="9cc3f729c0c688bc1842937d19c3bbbe5dc7add6" translate="yes" xml:space="preserve">
          <source>In Laravel 8, this property is set to &lt;code&gt;null&lt;/code&gt; by default. This allows your controller route declarations to use the standard PHP callable syntax, which provides better support for jumping to the controller class in many IDEs:</source>
          <target state="translated">In Laravel 8, this property is set to &lt;code&gt;null&lt;/code&gt; by default. This allows your controller route declarations to use the standard PHP callable syntax, which provides better support for jumping to the controller class in many IDEs:</target>
        </trans-unit>
        <trans-unit id="59cad59b3ed7128fdd55b14330c61de34a6ff2c4" translate="yes" xml:space="preserve">
          <source>In Laravel's Flysystem integration, &quot;visibility&quot; is an abstraction of file permissions across multiple platforms. Files may either be declared &lt;code&gt;public&lt;/code&gt; or &lt;code&gt;private&lt;/code&gt;. When a file is declared &lt;code&gt;public&lt;/code&gt;, you are indicating that the file should generally be accessible to others. For example, when using the S3 driver, you may retrieve URLs for &lt;code&gt;public&lt;/code&gt; files.</source>
          <target state="translated">LaravelのFlysystem統合では、「可視性」は、複数のプラットフォームにわたるファイル許可の抽象化です。ファイルは、 &lt;code&gt;public&lt;/code&gt; または &lt;code&gt;private&lt;/code&gt; として宣言できます。ファイルが &lt;code&gt;public&lt;/code&gt; と宣言されている場合、そのファイルは一般に他のユーザーがアクセスできる必要があることを示しています。たとえば、S3ドライバーを使用している場合、 &lt;code&gt;public&lt;/code&gt; ファイルのURLを取得できます。</target>
        </trans-unit>
        <trans-unit id="bb03e4ecd1a856c8ea0260e17944a799370cf55e" translate="yes" xml:space="preserve">
          <source>In Laravel, each notification is represented by a single class (typically stored in the &lt;code&gt;app/Notifications&lt;/code&gt; directory). Don't worry if you don't see this directory in your application, it will be created for you when you run the &lt;code&gt;make:notification&lt;/code&gt; Artisan command:</source>
          <target state="translated">Laravelでは、各通知は1つのクラスで表されます（通常は &lt;code&gt;app/Notifications&lt;/code&gt; ディレクトリに保存されます）。アプリケーションにこのディレクトリが表示されなくても心配する必要はありません。make &lt;code&gt;make:notification&lt;/code&gt; Artisanコマンドを実行すると、このディレクトリが作成されます。</target>
        </trans-unit>
        <trans-unit id="92067a03576e685b6ca57c8453d679fa5f09f34e" translate="yes" xml:space="preserve">
          <source>In Laravel, each type of email sent by your application is represented as a &quot;mailable&quot; class. These classes are stored in the &lt;code&gt;app/Mail&lt;/code&gt; directory. Don't worry if you don't see this directory in your application, since it will be generated for you when you create your first mailable class using the &lt;code&gt;make:mail&lt;/code&gt; command:</source>
          <target state="translated">Laravelでは、アプリケーションから送信される各タイプの電子メールは「メール可能な」クラスとして表されます。これらのクラスは &lt;code&gt;app/Mail&lt;/code&gt; ディレクトリに保存されます。 &lt;code&gt;make:mail&lt;/code&gt; コマンドを使用して最初のメール可能クラスを作成するときに生成されるため、アプリケーションにこのディレクトリが表示されなくても心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="155f99e724d3a80dd55ca241f812ca4bbbd58aed" translate="yes" xml:space="preserve">
          <source>In a Laravel application's &lt;code&gt;config/app.php&lt;/code&gt; configuration file, the &lt;code&gt;providers&lt;/code&gt; option defines a list of service providers that should be loaded by Laravel. When someone installs your package, you will typically want your service provider to be included in this list. Instead of requiring users to manually add your service provider to the list, you may define the provider in the &lt;code&gt;extra&lt;/code&gt; section of your package's &lt;code&gt;composer.json&lt;/code&gt; file. In addition to service providers, you may also list any &lt;a href=&quot;facades&quot;&gt;facades&lt;/a&gt; you would like to be registered:</source>
          <target state="translated">Laravelアプリケーションの &lt;code&gt;config/app.php&lt;/code&gt; 構成ファイルでは、 &lt;code&gt;providers&lt;/code&gt; オプションは、Laravelによってロードされるサービスプロバイダーのリストを定義します。誰かがあなたのパッケージをインストールするとき、あなたは通常あなたのサービスプロバイダーがこのリストに含まれることを望むでしょう。ユーザーにサービスプロバイダーをリストに手動で追加するように要求する代わりに、パッケージの &lt;code&gt;composer.json&lt;/code&gt; ファイルの &lt;code&gt;extra&lt;/code&gt; セクションでプロバイダーを定義できます。サービスプロバイダーに加えて、登録したい&lt;a href=&quot;facades&quot;&gt;ファサード&lt;/a&gt;をリストすることもできます。</target>
        </trans-unit>
        <trans-unit id="c1508fa6a2babb31d4ff995b9388b1e0859a9995" translate="yes" xml:space="preserve">
          <source>In a Laravel application, a facade is a class that provides access to an object from the container. The machinery that makes this work is in the &lt;code&gt;Facade&lt;/code&gt; class. Laravel's facades, and any custom facades you create, will extend the base &lt;code&gt;Illuminate\Support\Facades\Facade&lt;/code&gt; class.</source>
          <target state="translated">Laravelアプリケーションでは、ファサードはコンテナからオブジェクトへのアクセスを提供するクラスです。この作業を行う機械は &lt;code&gt;Facade&lt;/code&gt; クラスにあります。 Laravelのファサード、および作成したカスタムファサードは、基本の &lt;code&gt;Illuminate\Support\Facades\Facade&lt;/code&gt; クラスを拡張します。</target>
        </trans-unit>
        <trans-unit id="8315c199b393c6eeb57b61aa4facfd00b7c4c101" translate="yes" xml:space="preserve">
          <source>In a fresh Laravel application, this directory will already contain several providers. You are free to add your own providers to this directory as needed.</source>
          <target state="translated">新しいLaravelアプリケーションでは、このディレクトリにはすでにいくつかのプロバイダが含まれています。必要に応じて、このディレクトリに独自のプロバイダを追加することができます。</target>
        </trans-unit>
        <trans-unit id="44c63a72a69a725d4525da5b896a11b2733b39c3" translate="yes" xml:space="preserve">
          <source>In addition to actually removing records from your database, Eloquent can also &quot;soft delete&quot; models. When models are soft deleted, they are not actually removed from your database. Instead, a &lt;code&gt;deleted_at&lt;/code&gt; attribute is set on the model and inserted into the database. If a model has a non-null &lt;code&gt;deleted_at&lt;/code&gt; value, the model has been soft deleted. To enable soft deletes for a model, use the &lt;code&gt;Illuminate\Database\Eloquent\SoftDeletes&lt;/code&gt; trait on the model and add the &lt;code&gt;deleted_at&lt;/code&gt; column to your &lt;code&gt;$dates&lt;/code&gt; property:</source>
          <target state="translated">データベースから実際にレコードを削除するだけでなく、Eloquentはモデルを「ソフト削除」することもできます。モデルが一時的に削除されても、実際にはデータベースから削除されません。代わりに、 &lt;code&gt;deleted_at&lt;/code&gt; 属性がモデルに設定され、データベースに挿入されます。モデルにnull以外の &lt;code&gt;deleted_at&lt;/code&gt; 値がある場合、モデルは一時的に削除されています。モデルの &lt;code&gt;Illuminate\Database\Eloquent\SoftDeletes&lt;/code&gt; 的な削除を有効にするには、モデルでIlluminate \ Database \ Eloquent \ SoftDeletesトレイトを使用して、 &lt;code&gt;deleted_at&lt;/code&gt; 列を &lt;code&gt;$dates&lt;/code&gt; プロパティに追加します。</target>
        </trans-unit>
        <trans-unit id="e52c735603abc0c6fce7fdd82e14c22c89b7597d" translate="yes" xml:space="preserve">
          <source>In addition to actually removing records from your database, Eloquent can also &quot;soft delete&quot; models. When models are soft deleted, they are not actually removed from your database. Instead, a &lt;code&gt;deleted_at&lt;/code&gt; attribute is set on the model and inserted into the database. If a model has a non-null &lt;code&gt;deleted_at&lt;/code&gt; value, the model has been soft deleted. To enable soft deletes for a model, use the &lt;code&gt;Illuminate\Database\Eloquent\SoftDeletes&lt;/code&gt; trait on the model:</source>
          <target state="translated">In addition to actually removing records from your database, Eloquent can also &quot;soft delete&quot; models. When models are soft deleted, they are not actually removed from your database. Instead, a &lt;code&gt;deleted_at&lt;/code&gt; attribute is set on the model and inserted into the database. If a model has a non-null &lt;code&gt;deleted_at&lt;/code&gt; value, the model has been soft deleted. To enable soft deletes for a model, use the &lt;code&gt;Illuminate\Database\Eloquent\SoftDeletes&lt;/code&gt; trait on the model:</target>
        </trans-unit>
        <trans-unit id="a92da1f6aa7ea63709845152e3671b42ce26d924" translate="yes" xml:space="preserve">
          <source>In addition to chaining job class instances, you may also chain Closures:</source>
          <target state="translated">ジョブクラスインスタンスのチェーン化に加えて、Closuresをチェーン化することもできます。</target>
        </trans-unit>
        <trans-unit id="38d10082b362f898b56ffabcb9eb9060eb479a16" translate="yes" xml:space="preserve">
          <source>In addition to checking for the CSRF token as a POST parameter, the &lt;code&gt;VerifyCsrfToken&lt;/code&gt; middleware will also check for the &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; request header. You could, for example, store the token in a HTML &lt;code&gt;meta&lt;/code&gt; tag:</source>
          <target state="translated">CSRFトークンをPOSTパラメーターとしてチェックすることに加えて、 &lt;code&gt;VerifyCsrfToken&lt;/code&gt; ミドルウェアは &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; リクエストヘッダーもチェックします。たとえば、トークンをHTML &lt;code&gt;meta&lt;/code&gt; に保存できます。</target>
        </trans-unit>
        <trans-unit id="5fc673fd2a0e5e1e1e2cba1deb681dd5bdd520b9" translate="yes" xml:space="preserve">
          <source>In addition to checking for the CSRF token as a POST parameter, the &lt;code&gt;VerifyCsrfToken&lt;/code&gt; middleware will also check for the &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; request header. You could, for example, store the token in an HTML &lt;code&gt;meta&lt;/code&gt; tag:</source>
          <target state="translated">In addition to checking for the CSRF token as a POST parameter, the &lt;code&gt;VerifyCsrfToken&lt;/code&gt; middleware will also check for the &lt;code&gt;X-CSRF-TOKEN&lt;/code&gt; request header. You could, for example, store the token in an HTML &lt;code&gt;meta&lt;/code&gt; tag:</target>
        </trans-unit>
        <trans-unit id="9dd31d30fba4c0a6bce05e9d28154b0016841ce0" translate="yes" xml:space="preserve">
          <source>In addition to checking if the file is present, you may verify that there were no problems uploading the file via the &lt;code&gt;isValid&lt;/code&gt; method:</source>
          <target state="translated">ファイルが存在するかどうかを確認することに加えて、 &lt;code&gt;isValid&lt;/code&gt; メソッドを使用してファイルのアップロードに問題がなかったことを確認できます。</target>
        </trans-unit>
        <trans-unit id="0ec5bee9f295317d5a7c7b23e32fb252a05a1441" translate="yes" xml:space="preserve">
          <source>In addition to conditional statements, Blade provides simple directives for working with PHP's loop structures. Again, each of these directives functions identically to their PHP counterparts:</source>
          <target state="translated">条件文に加えて、Blade には PHP のループ構造を扱うためのシンプルなディレクティブが用意されています。繰り返しになりますが、これらのディレクティブはそれぞれ PHP の対応するものと同じように機能します。</target>
        </trans-unit>
        <trans-unit id="ccd6612e62614a38f52bf71c62cc5b7483eb53ab" translate="yes" xml:space="preserve">
          <source>In addition to conditionally including relationship information in your resource responses, you may conditionally include data from the intermediate tables of many-to-many relationships using the &lt;code&gt;whenPivotLoaded&lt;/code&gt; method. The &lt;code&gt;whenPivotLoaded&lt;/code&gt; method accepts the name of the pivot table as its first argument. The second argument should be a Closure that defines the value to be returned if the pivot information is available on the model:</source>
          <target state="translated">リソースレスポンスに関係情報を条件付きで含めることに加えて、 &lt;code&gt;whenPivotLoaded&lt;/code&gt; メソッドを使用して、多対多の関係の中間テーブルからのデータを条件付きで含めることができます。 &lt;code&gt;whenPivotLoaded&lt;/code&gt; 方法は、最初の引数としてピボットテーブルの名前を受け付けます。2番目の引数は、ピボット情報がモデルで利用可能な場合に返される値を定義するクロージャーである必要があります。</target>
        </trans-unit>
        <trans-unit id="870cdf239e96619c23b5baa996078a844bc74e95" translate="yes" xml:space="preserve">
          <source>In addition to conditionally loading attributes, you may conditionally include relationships on your resource responses based on if the relationship has already been loaded on the model. This allows your controller to decide which relationships should be loaded on the model and your resource can easily include them only when they have actually been loaded.</source>
          <target state="translated">条件付きで属性をロードすることに加えて、リレーションシップがすでにモデルにロードされているかどうかに基づいて、条件付きでリソースのレスポンスにリレーションシップを含めることができます。これにより、コントローラがどのリレーションシップをモデルにロードすべきかを決定し、 リソースが実際にロードされたときにのみ、簡単にそれらを含めることができます。</target>
        </trans-unit>
        <trans-unit id="a9d13f466f64bf3400c34efa9dd16e8fa4e8f783" translate="yes" xml:space="preserve">
          <source>In addition to configuring Cashier's currency, you may also specify a locale to be used when formatting money values for display on invoices. Internally, Cashier utilizes &lt;a href=&quot;https://www.php.net/manual/en/class.numberformatter.php&quot;&gt;PHP's &lt;code&gt;NumberFormatter&lt;/code&gt; class&lt;/a&gt; to set the currency locale:</source>
          <target state="translated">In addition to configuring Cashier's currency, you may also specify a locale to be used when formatting money values for display on invoices. Internally, Cashier utilizes &lt;a href=&quot;https://www.php.net/manual/en/class.numberformatter.php&quot;&gt;PHP's &lt;code&gt;NumberFormatter&lt;/code&gt; class&lt;/a&gt; to set the currency locale:</target>
        </trans-unit>
        <trans-unit id="8e35a2e3f8291967a1da91db5804c9422db4c30f" translate="yes" xml:space="preserve">
          <source>In addition to constructor injection, you may also type-hint dependencies on your controller's methods. A common use-case for method injection is injecting the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance into your controller methods:</source>
          <target state="translated">コンストラクターインジェクションに加えて、コントローラーのメソッドに対する型ヒントの依存関係も存在する可能性があります。メソッドインジェクションの一般的な使用例は、 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; インスタンスをコントローラーメソッドにインジェクトすることです。</target>
        </trans-unit>
        <trans-unit id="f49907e1643297e4a0730646264b22e3f21a1450" translate="yes" xml:space="preserve">
          <source>In addition to creating images, you may create files of any other type using the &lt;code&gt;create&lt;/code&gt; method:</source>
          <target state="translated">画像の作成に加えて、 &lt;code&gt;create&lt;/code&gt; メソッドを使用して、他のタイプのファイルを作成できます。</target>
        </trans-unit>
        <trans-unit id="7d3b9bcd7f717ca19d11546a168c78f4e21884d2" translate="yes" xml:space="preserve">
          <source>In addition to custom accessors and mutators, Eloquent can also automatically cast date fields to &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt; instances or even &lt;a href=&quot;#attribute-casting&quot;&gt;cast text fields to JSON&lt;/a&gt;.</source>
          <target state="translated">Eloquentでは、カスタムアクセサーとミューテーターに加えて、日付フィールドを&lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt;インスタンスに自動的にキャストしたり、&lt;a href=&quot;#attribute-casting&quot;&gt;テキストフィールドをJSONにキャストし&lt;/a&gt;たりすることもできます。</target>
        </trans-unit>
        <trans-unit id="ae5e59f8783e4edd39e014cf446681a37611f34e" translate="yes" xml:space="preserve">
          <source>In addition to customizing the name of the joining table, you may also customize the column names of the keys on the table by passing additional arguments to the &lt;code&gt;belongsToMany&lt;/code&gt; method. The third argument is the foreign key name of the model on which you are defining the relationship, while the fourth argument is the foreign key name of the model that you are joining to:</source>
          <target state="translated">結合するテーブルの名前をカスタマイズすることに加えて、 &lt;code&gt;belongsToMany&lt;/code&gt; メソッドに追加の引数を渡すことにより、テーブルのキーの列名をカスタマイズすることもできます。3番目の引数は、関係を定義しているモデルの外部キー名です。4番目の引数は、結合先のモデルの外部キー名です。</target>
        </trans-unit>
        <trans-unit id="f38613e5db2e6063efb637518ec27e83d30a143c" translate="yes" xml:space="preserve">
          <source>In addition to displaying output, you may also ask the user to provide input during the execution of your command. The &lt;code&gt;ask&lt;/code&gt; method will prompt the user with the given question, accept their input, and then return the user's input back to your command:</source>
          <target state="translated">出力の表示に加えて、コマンドの実行中にユーザーに入力を要求することもできます。 &lt;code&gt;ask&lt;/code&gt; 方法は、特定の質問をユーザーに求める彼らの入力を受け付け、その後、あなたのコマンドにユーザの入力背中を返します。</target>
        </trans-unit>
        <trans-unit id="f8e60330fe13511f3c4029a24557993f475badb2" translate="yes" xml:space="preserve">
          <source>In addition to facades, Laravel includes a variety of &quot;helper&quot; functions which can perform common tasks like generating views, firing events, dispatching jobs, or sending HTTP responses. Many of these helper functions perform the same function as a corresponding facade. For example, this facade call and helper call are equivalent:</source>
          <target state="translated">ファサードに加えて、Laravelにはビューの生成、イベントの実行、ジョブのディスパッチ、HTTPレスポンスの送信などの一般的なタスクを実行するための様々な「ヘルパー」関数が含まれています。これらのヘルパー関数の多くは、対応するファサードと同じ機能を実行します。例えば、このファサード呼び出しとヘルパー呼び出しは同等です。</target>
        </trans-unit>
        <trans-unit id="d6592eced6c7f8ec71fa85f95f9f46a6bf0563f5" translate="yes" xml:space="preserve">
          <source>In addition to generating resources that transform individual models, you may generate resources that are responsible for transforming collections of models. This allows your response to include links and other meta information that is relevant to an entire collection of a given resource.</source>
          <target state="translated">個々のモデルを変換するリソースの生成に加えて、モデルのコレクションの変換を担当するリソースを生成してもよい。これにより、あなたの応答に、与えられたリソースのコレクション全体に関連するリンクやその他のメタ情報を含めることができます。</target>
        </trans-unit>
        <trans-unit id="345e2578bec12e46d02910b31cc1928dbbb1c3c2" translate="yes" xml:space="preserve">
          <source>In addition to helpful methods provided to the &lt;code&gt;User&lt;/code&gt; model, Laravel provides a helpful &lt;code&gt;authorize&lt;/code&gt; method to any of your controllers which extend the &lt;code&gt;App\Http\Controllers\Controller&lt;/code&gt; base class. Like the &lt;code&gt;can&lt;/code&gt; method, this method accepts the name of the action you wish to authorize and the relevant model. If the action is not authorized, the &lt;code&gt;authorize&lt;/code&gt; method will throw an &lt;code&gt;Illuminate\Auth\Access\AuthorizationException&lt;/code&gt;, which the default Laravel exception handler will convert to an HTTP response with a &lt;code&gt;403&lt;/code&gt; status code:</source>
          <target state="translated">&lt;code&gt;User&lt;/code&gt; モデルに提供される便利なメソッドに加えて、Laravelは、 &lt;code&gt;App\Http\Controllers\Controller&lt;/code&gt; 基本クラスを拡張する任意のコントローラーに役立つ &lt;code&gt;authorize&lt;/code&gt; メソッドを提供します。 &lt;code&gt;can&lt;/code&gt; メソッドと同様に、このメソッドは、許可するアクションの名前と関連モデルを受け入れます。アクションが承認されていない場合、 &lt;code&gt;authorize&lt;/code&gt; メソッドは &lt;code&gt;Illuminate\Auth\Access\AuthorizationException&lt;/code&gt; をスローします。これは、デフォルトのLaravel例外ハンドラーが &lt;code&gt;403&lt;/code&gt; ステータスコードのHTTP応答に変換します。</target>
        </trans-unit>
        <trans-unit id="a8a8950af37e7ff50f42da5e99b979d54d26a437" translate="yes" xml:space="preserve">
          <source>In addition to inserting records into the database, the query builder can also update existing records using the &lt;code&gt;update&lt;/code&gt; method. The &lt;code&gt;update&lt;/code&gt; method, like the &lt;code&gt;insert&lt;/code&gt; method, accepts an array of column and value pairs containing the columns to be updated. You may constrain the &lt;code&gt;update&lt;/code&gt; query using &lt;code&gt;where&lt;/code&gt; clauses:</source>
          <target state="translated">In addition to inserting records into the database, the query builder can also update existing records using the &lt;code&gt;update&lt;/code&gt; method. The &lt;code&gt;update&lt;/code&gt; method, like the &lt;code&gt;insert&lt;/code&gt; method, accepts an array of column and value pairs containing the columns to be updated. You may constrain the &lt;code&gt;update&lt;/code&gt; query using &lt;code&gt;where&lt;/code&gt; clauses:</target>
        </trans-unit>
        <trans-unit id="b57fc0ff1a3e2e6daa168ba10ece36fbb4f2c6d2" translate="yes" xml:space="preserve">
          <source>In addition to optimizing the autoloader, you should always be sure to include a &lt;code&gt;composer.lock&lt;/code&gt; file in your project's source control repository. Your project's dependencies can be installed much faster when a &lt;code&gt;composer.lock&lt;/code&gt; file is present.</source>
          <target state="translated">オートローダーを最適化することに加えて、プロジェクトのソース管理リポジトリに &lt;code&gt;composer.lock&lt;/code&gt; ファイルを必ず含めるようにしてください。 &lt;code&gt;composer.lock&lt;/code&gt; ファイルが存在する場合、プロジェクトの依存関係をより速くインストールできます。</target>
        </trans-unit>
        <trans-unit id="188bdf3c42b975715ac2ff4721bcbdf3ba18b4d9" translate="yes" xml:space="preserve">
          <source>In addition to providing &lt;a href=&quot;authentication&quot;&gt;authentication&lt;/a&gt; services out of the box, Laravel also provides a simple way to authorize user actions against a given resource. Like authentication, Laravel's approach to authorization is simple, and there are two primary ways of authorizing actions: gates and policies.</source>
          <target state="translated">Laravelは、すぐに&lt;a href=&quot;authentication&quot;&gt;認証&lt;/a&gt;サービスを提供するだけでなく、特定のリソースに対するユーザーアクションを承認する簡単な方法も提供します。認証と同様に、承認に対するLaravelのアプローチは単純であり、アクションを承認するには、ゲートとポリシーという2つの主要な方法があります。</target>
        </trans-unit>
        <trans-unit id="2728b1e4fa509b23e058f85d622ab2a2ec08cc69" translate="yes" xml:space="preserve">
          <source>In addition to public variables being available to your component template, any public methods on the component may also be executed. For example, imagine a component that has a &lt;code&gt;isSelected&lt;/code&gt; method:</source>
          <target state="translated">In addition to public variables being available to your component template, any public methods on the component may also be executed. For example, imagine a component that has a &lt;code&gt;isSelected&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="bdb03d7ab60246fa976e882e8c940eff0bc6e21b" translate="yes" xml:space="preserve">
          <source>In addition to reading and writing files, Laravel can also provide information about the files themselves. For example, the &lt;code&gt;size&lt;/code&gt; method may be used to get the size of the file in bytes:</source>
          <target state="translated">Laravelはファイルの読み取りと書き込みに加えて、ファイル自体に関する情報も提供できます。たとえば、 &lt;code&gt;size&lt;/code&gt; メソッドを使用して、ファイルのサイズをバイト単位で取得できます。</target>
        </trans-unit>
        <trans-unit id="145b94691fe48e7dad2f7b127c92105b73e791f0" translate="yes" xml:space="preserve">
          <source>In addition to receiving your command's arguments and options, command Closures may also type-hint additional dependencies that you would like resolved out of the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;:</source>
          <target state="translated">コマンドクロージャは、コマンドの引数とオプションを受け取ることに加えて、&lt;a href=&quot;container&quot;&gt;サービスコンテナの&lt;/a&gt;外で解決したい追加の依存関係をタイプヒントで示す場合もあります。</target>
        </trans-unit>
        <trans-unit id="025e7c3060bcdfd4a23171aac71aeaebdc72a4f0" translate="yes" xml:space="preserve">
          <source>In addition to retrieving a collection of models, you may paginate your search results using the &lt;code&gt;paginate&lt;/code&gt; method. This method will return a &lt;code&gt;Paginator&lt;/code&gt; instance just as if you had &lt;a href=&quot;pagination&quot;&gt;paginated a traditional Eloquent query&lt;/a&gt;:</source>
          <target state="translated">モデルのコレクションを取得することに加えて、 &lt;code&gt;paginate&lt;/code&gt; メソッドを使用して検索結果にページ番号を付けることができます。このメソッドは&lt;a href=&quot;pagination&quot;&gt;、従来のEloquentクエリにページ&lt;/a&gt; &lt;code&gt;Paginator&lt;/code&gt; を付けたかのように、Paginatorインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="607fe1e8d85ed74b9418bd2a8763dfb9c12ac751" translate="yes" xml:space="preserve">
          <source>In addition to retrieving all of the records for a given table, you may also retrieve single records using &lt;code&gt;find&lt;/code&gt;, &lt;code&gt;first&lt;/code&gt;, or &lt;code&gt;firstWhere&lt;/code&gt;. Instead of returning a collection of models, these methods return a single model instance:</source>
          <target state="translated">In addition to retrieving all of the records for a given table, you may also retrieve single records using &lt;code&gt;find&lt;/code&gt; , &lt;code&gt;first&lt;/code&gt; , or &lt;code&gt;firstWhere&lt;/code&gt; . Instead of returning a collection of models, these methods return a single model instance:</target>
        </trans-unit>
        <trans-unit id="49eb756e4f64da87852280b9ab7c0a73594b162e" translate="yes" xml:space="preserve">
          <source>In addition to returning strings from your routes and controllers, you may also return arrays. The framework will automatically convert the array into a JSON response:</source>
          <target state="translated">ルートやコントローラから文字列を返すだけでなく、配列を返すこともできます。フレームワークは自動的に配列を JSON レスポンスに変換します。</target>
        </trans-unit>
        <trans-unit id="ba6f823ac9880ebcc4178107ec81e2a8a68200da" translate="yes" xml:space="preserve">
          <source>In addition to scheduling Closure calls, you may also schedule &lt;a href=&quot;artisan&quot;&gt;Artisan commands&lt;/a&gt; and operating system commands. For example, you may use the &lt;code&gt;command&lt;/code&gt; method to schedule an Artisan command using either the command's name or class:</source>
          <target state="translated">Closure呼び出しのスケジュールに加えて、&lt;a href=&quot;artisan&quot;&gt;Artisanコマンド&lt;/a&gt;とオペレーティングシステムコマンドをスケジュールすることもできます。たとえば、 &lt;code&gt;command&lt;/code&gt; メソッドを使用して、コマンドの名前またはクラスを使用してArtisanコマンドをスケジュールできます。</target>
        </trans-unit>
        <trans-unit id="bc3b00ffbd42dd67ada7e9e306286d5d49a9cc01" translate="yes" xml:space="preserve">
          <source>In addition to scheduling using Closures, you may also use &lt;a href=&quot;https://secure.php.net/manual/en/language.oop5.magic.php#object.invoke&quot;&gt;invokable objects&lt;/a&gt;. Invokable objects are simple PHP classes that contain an &lt;code&gt;__invoke&lt;/code&gt; method:</source>
          <target state="translated">In addition to scheduling using Closures, you may also use &lt;a href=&quot;https://secure.php.net/manual/en/language.oop5.magic.php#object.invoke&quot;&gt;invokable objects&lt;/a&gt;. Invokable objects are simple PHP classes that contain an &lt;code&gt;__invoke&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="0e36c597dca9ad0ec61a9f73b1bdac29c7fd8a7d" translate="yes" xml:space="preserve">
          <source>In addition to scheduling using Closures, you may also using &lt;a href=&quot;http://php.net/manual/en/language.oop5.magic.php#object.invoke&quot;&gt;invokable objects&lt;/a&gt;. Invokable objects are simple PHP classes that contain an &lt;code&gt;__invoke&lt;/code&gt; method:</source>
          <target state="translated">クロージャーを使用したスケジューリングに加えて、&lt;a href=&quot;http://php.net/manual/en/language.oop5.magic.php#object.invoke&quot;&gt;呼び出し可能なオブジェクト&lt;/a&gt;を使用することもできます。呼び出し可能なオブジェクトは、 &lt;code&gt;__invoke&lt;/code&gt; メソッドを含む単純なPHPクラスです。</target>
        </trans-unit>
        <trans-unit id="a3fecf0bbf77000d2a857a7318ad0726bea0b926" translate="yes" xml:space="preserve">
          <source>In addition to simplifying HTTP testing, Laravel provides a simple API for testing console applications that ask for user input.</source>
          <target state="translated">LaravelはHTTPテストの簡素化に加えて、ユーザーの入力を求めるコンソールアプリケーションをテストするためのシンプルなAPIを提供しています。</target>
        </trans-unit>
        <trans-unit id="b12aec219ea784510e7e975e38da0f98a729d0a0" translate="yes" xml:space="preserve">
          <source>In addition to support for &lt;a href=&quot;mail&quot;&gt;sending email&lt;/a&gt;, Laravel provides support for sending notifications across a variety of delivery channels, including mail, SMS (via &lt;a href=&quot;https://www.nexmo.com/&quot;&gt;Nexmo&lt;/a&gt;), and &lt;a href=&quot;https://slack.com&quot;&gt;Slack&lt;/a&gt;. Notifications may also be stored in a database so they may be displayed in your web interface.</source>
          <target state="translated">Laravelは、&lt;a href=&quot;mail&quot;&gt;メール送信の&lt;/a&gt;サポートに加えて、メール、SMS（&lt;a href=&quot;https://www.nexmo.com/&quot;&gt;Nexmo&lt;/a&gt;経由）、&lt;a href=&quot;https://slack.com&quot;&gt;Slack&lt;/a&gt;などのさまざまな配信チャネルを介して通知を送信するためのサポートを提供します。通知をデータベースに保存して、Webインターフェイスに表示することもできます。</target>
        </trans-unit>
        <trans-unit id="3e682637824f73ed99b65f53033ce4f672afc386" translate="yes" xml:space="preserve">
          <source>In addition to support for &lt;a href=&quot;mail&quot;&gt;sending email&lt;/a&gt;, Laravel provides support for sending notifications across a variety of delivery channels, including mail, SMS (via &lt;a href=&quot;https://www.vonage.com/communications-apis/&quot;&gt;Vonage&lt;/a&gt;, formerly known as Nexmo), and &lt;a href=&quot;https://slack.com&quot;&gt;Slack&lt;/a&gt;. Notifications may also be stored in a database so they may be displayed in your web interface.</source>
          <target state="translated">In addition to support for &lt;a href=&quot;mail&quot;&gt;sending email&lt;/a&gt;, Laravel provides support for sending notifications across a variety of delivery channels, including mail, SMS (via &lt;a href=&quot;https://www.vonage.com/communications-apis/&quot;&gt;Vonage&lt;/a&gt;, formerly known as Nexmo), and &lt;a href=&quot;https://slack.com&quot;&gt;Slack&lt;/a&gt;. Notifications may also be stored in a database so they may be displayed in your web interface.</target>
        </trans-unit>
        <trans-unit id="7b4f379369e5396aae8dc7c5a70491004656e8e0" translate="yes" xml:space="preserve">
          <source>In addition to template inheritance and displaying data, Blade also provides convenient shortcuts for common PHP control structures, such as conditional statements and loops. These shortcuts provide a very clean, terse way of working with PHP control structures, while also remaining familiar to their PHP counterparts.</source>
          <target state="translated">テンプレートの継承やデータの表示に加えて、Blade は、条件文やループなどの一般的な PHP 制御構造のための便利なショートカットも提供しています。これらのショートカットは、PHP の制御構造を使いこなすための非常にすっきりとした簡潔な方法を提供しています。</target>
        </trans-unit>
        <trans-unit id="c4de4050c04195d38e96c05237e3db3167d03606" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;phpunit&lt;/code&gt; command, you may use the &lt;code&gt;test&lt;/code&gt; Artisan command to run your tests. The Artisan test runner provides verbose test reports in order to ease development and debugging:</source>
          <target state="translated">In addition to the &lt;code&gt;phpunit&lt;/code&gt; command, you may use the &lt;code&gt;test&lt;/code&gt; Artisan command to run your tests. The Artisan test runner provides verbose test reports in order to ease development and debugging:</target>
        </trans-unit>
        <trans-unit id="aa58235aae53e56d31a96a040944a5e6e8845a40" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;saveMany&lt;/code&gt; methods, you may also use the &lt;code&gt;create&lt;/code&gt; method, which accepts an array of attributes, creates a model, and inserts it into the database. Again, the difference between &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;create&lt;/code&gt; is that &lt;code&gt;save&lt;/code&gt; accepts a full Eloquent model instance while &lt;code&gt;create&lt;/code&gt; accepts a plain PHP &lt;code&gt;array&lt;/code&gt;:</source>
          <target state="translated">加えて、 &lt;code&gt;save&lt;/code&gt; して &lt;code&gt;saveMany&lt;/code&gt; 方法、あなたはまた、使用することができます &lt;code&gt;create&lt;/code&gt; 、属性の配列を受け入れる方法を、モデルを作成し、データベースへの挿入、それを。ここでも、違い &lt;code&gt;save&lt;/code&gt; および &lt;code&gt;create&lt;/code&gt; ということです &lt;code&gt;save&lt;/code&gt; しながら、完全な雄弁モデルインスタンス受け付け &lt;code&gt;create&lt;/code&gt; プレーンなPHPの受け入れ &lt;code&gt;array&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="3f92f8d3ad80da9e98fb8b4b81792356556b0591" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;withCount&lt;/code&gt; method, Eloquent provides &lt;code&gt;withMin&lt;/code&gt;, &lt;code&gt;withMax&lt;/code&gt;, &lt;code&gt;withAvg&lt;/code&gt;, and &lt;code&gt;withSum&lt;/code&gt;. These methods will place a &lt;code&gt;{relation}_{function}_{column}&lt;/code&gt; column on your resulting models. For example:</source>
          <target state="translated">In addition to the &lt;code&gt;withCount&lt;/code&gt; method, Eloquent provides &lt;code&gt;withMin&lt;/code&gt; , &lt;code&gt;withMax&lt;/code&gt; , &lt;code&gt;withAvg&lt;/code&gt; , and &lt;code&gt;withSum&lt;/code&gt; . These methods will place a &lt;code&gt;{relation}_{function}_{column}&lt;/code&gt; column on your resulting models. For example:</target>
        </trans-unit>
        <trans-unit id="e0191097b2321ae8283a95fb778341a273e04b21" translate="yes" xml:space="preserve">
          <source>In addition to the column types listed above, there are several column &quot;modifiers&quot; you may use while adding a column to a database table. For example, to make the column &quot;nullable&quot;, you may use the &lt;code&gt;nullable&lt;/code&gt; method:</source>
          <target state="translated">上記の列タイプに加えて、データベーステーブルに列を追加するときに使用できるいくつかの列「修飾子」があります。たとえば、列を「nullable」にするには、 &lt;code&gt;nullable&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="75591e542c79c63631414d694fde549884242911" translate="yes" xml:space="preserve">
          <source>In addition to the commands provided with Artisan, you may also build your own custom commands. Commands are typically stored in the &lt;code&gt;app/Console/Commands&lt;/code&gt; directory; however, you are free to choose your own storage location as long as your commands can be loaded by Composer.</source>
          <target state="translated">Artisanで提供されるコマンドに加えて、独自のカスタムコマンドを作成することもできます。コマンドは通常 &lt;code&gt;app/Console/Commands&lt;/code&gt; ディレクトリに保存されます。ただし、コマンドをComposerでロードできる限り、独自の保存場所を自由に選択できます。</target>
        </trans-unit>
        <trans-unit id="39ede65a7682bfc030932aca5e2ca6376901402f" translate="yes" xml:space="preserve">
          <source>In addition to the conditional directives already discussed, the &lt;code&gt;@isset&lt;/code&gt; and &lt;code&gt;@empty&lt;/code&gt; directives may be used as convenient shortcuts for their respective PHP functions:</source>
          <target state="translated">すでに説明した条件付きディレクティブに加えて、 &lt;code&gt;@isset&lt;/code&gt; および &lt;code&gt;@empty&lt;/code&gt; ディレクティブは、それぞれのPHP関数の便利なショートカットとして使用できます。</target>
        </trans-unit>
        <trans-unit id="f4c783506654b670bebf417dd8b924b5b9d70a24" translate="yes" xml:space="preserve">
          <source>In addition to the data you specify, all broadcast notifications also have a &lt;code&gt;type&lt;/code&gt; field containing the full class name of the notification. If you would like to customize the notification &lt;code&gt;type&lt;/code&gt; that is provided to your JavaScript client, you may define a &lt;code&gt;broadcastType&lt;/code&gt; method on the notification class:</source>
          <target state="translated">In addition to the data you specify, all broadcast notifications also have a &lt;code&gt;type&lt;/code&gt; field containing the full class name of the notification. If you would like to customize the notification &lt;code&gt;type&lt;/code&gt; that is provided to your JavaScript client, you may define a &lt;code&gt;broadcastType&lt;/code&gt; method on the notification class:</target>
        </trans-unit>
        <trans-unit id="2e7dfb9786159d071c4fc0af06311820cce04316" translate="yes" xml:space="preserve">
          <source>In addition to the data you specify, broadcast notifications will also contain a &lt;code&gt;type&lt;/code&gt; field containing the class name of the notification.</source>
          <target state="translated">指定したデータに加えて、ブロードキャスト通知には、通知のクラス名を含む &lt;code&gt;type&lt;/code&gt; フィールドも含まれます。</target>
        </trans-unit>
        <trans-unit id="a03939d181da8df62f16d6ae74e901f434e029a4" translate="yes" xml:space="preserve">
          <source>In addition to the default &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;database&lt;/code&gt;, and &lt;code&gt;password&lt;/code&gt; server configuration options, PhpRedis supports the following additional connection parameters: &lt;code&gt;persistent&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;read_timeout&lt;/code&gt; and &lt;code&gt;timeout&lt;/code&gt;. You may add any of these options to your Redis server configuration in the &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="translated">デフォルトの &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; 、 &lt;code&gt;database&lt;/code&gt; 、および &lt;code&gt;password&lt;/code&gt; サーバー構成オプションに加えて、PhpRedisは次の追加の接続パラメーターをサポートしています： &lt;code&gt;persistent&lt;/code&gt; 、 &lt;code&gt;prefix&lt;/code&gt; 、 &lt;code&gt;read_timeout&lt;/code&gt; および &lt;code&gt;timeout&lt;/code&gt; 。これらのオプションのいずれかを、 &lt;code&gt;config/database.php&lt;/code&gt; 構成ファイルのRedisサーバー構成に追加できます。</target>
        </trans-unit>
        <trans-unit id="e834e444aacb6b1e2a8d8a83f8faa79d268be8e5" translate="yes" xml:space="preserve">
          <source>In addition to the default &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;database&lt;/code&gt;, and &lt;code&gt;password&lt;/code&gt; server configuration options, PhpRedis supports the following additional connection parameters: &lt;code&gt;persistent&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, &lt;code&gt;read_timeout&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt;, and &lt;code&gt;context&lt;/code&gt;. You may add any of these options to your Redis server configuration in the &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="translated">In addition to the default &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; , &lt;code&gt;database&lt;/code&gt; , and &lt;code&gt;password&lt;/code&gt; server configuration options, PhpRedis supports the following additional connection parameters: &lt;code&gt;persistent&lt;/code&gt; , &lt;code&gt;prefix&lt;/code&gt; , &lt;code&gt;read_timeout&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; , and &lt;code&gt;context&lt;/code&gt; . You may add any of these options to your Redis server configuration in the &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</target>
        </trans-unit>
        <trans-unit id="4cb824651cec5379b5fc8b7d4e59dc163541a1ee" translate="yes" xml:space="preserve">
          <source>In addition to the default &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;database&lt;/code&gt;, and &lt;code&gt;password&lt;/code&gt; server configuration options, Predis supports additional &lt;a href=&quot;https://github.com/nrk/predis/wiki/Connection-Parameters&quot;&gt;connection parameters&lt;/a&gt; that may be defined for each of your Redis servers. To utilize these additional configuration options, add them to your Redis server configuration in the &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="translated">デフォルトの &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; 、 &lt;code&gt;database&lt;/code&gt; 、および &lt;code&gt;password&lt;/code&gt; サーバー構成オプションに加えて、Predis は、Redisサーバーごとに定義できる追加の&lt;a href=&quot;https://github.com/nrk/predis/wiki/Connection-Parameters&quot;&gt;接続パラメーター&lt;/a&gt;をサポートしています。これらの追加の構成オプションを利用するには、 &lt;code&gt;config/database.php&lt;/code&gt; 構成ファイルのRedisサーバー構成に追加します。</target>
        </trans-unit>
        <trans-unit id="26d213f16e19f0555fbca0bfa7b5b7268c63911f" translate="yes" xml:space="preserve">
          <source>In addition to the default methods defined on pages, you may define additional methods which may be used throughout your tests. For example, let's imagine we are building a music management application. A common action for one page of the application might be to create a playlist. Instead of re-writing the logic to create a playlist in each test, you may define a &lt;code&gt;createPlaylist&lt;/code&gt; method on a page class:</source>
          <target state="translated">ページで定義されているデフォルトのメソッドに加えて、テスト全体で使用できる追加のメソッドを定義できます。たとえば、音楽管理アプリケーションを構築しているとしましょう。アプリケーションの1ページの一般的なアクションは、プレイリストの作成です。各テストでプレイリストを作成するロジックを &lt;code&gt;createPlaylist&lt;/code&gt; に、ページクラスでcreatePlaylistメソッドを定義できます。</target>
        </trans-unit>
        <trans-unit id="fc26fd414062e607344b9c4f5d198f10f71d2af4" translate="yes" xml:space="preserve">
          <source>In addition to the methods defined in the &lt;code&gt;Enumerable&lt;/code&gt; contract, the &lt;code&gt;LazyCollection&lt;/code&gt; class contains the following methods:</source>
          <target state="translated">In addition to the methods defined in the &lt;code&gt;Enumerable&lt;/code&gt; contract, the &lt;code&gt;LazyCollection&lt;/code&gt; class contains the following methods:</target>
        </trans-unit>
        <trans-unit id="d98a52030597dcd1b93cd7e5cb5c03c9267500b6" translate="yes" xml:space="preserve">
          <source>In addition to traditional polymorphic relations, you may also define &quot;many-to-many&quot; polymorphic relations. For example, a blog &lt;code&gt;Post&lt;/code&gt; and &lt;code&gt;Video&lt;/code&gt; model could share a polymorphic relation to a &lt;code&gt;Tag&lt;/code&gt; model. Using a many-to-many polymorphic relation allows you to have a single list of unique tags that are shared across blog posts and videos. First, let's examine the table structure:</source>
          <target state="translated">従来の多態関係に加えて、「多対多」の多態関係を定義することもできます。たとえば、ブログの &lt;code&gt;Post&lt;/code&gt; と &lt;code&gt;Video&lt;/code&gt; モデルは、 &lt;code&gt;Tag&lt;/code&gt; モデルと多相関係を共有できます。多対多の多相関係を使用すると、ブログの投稿や動画全体で共有される一意のタグの単一のリストを作成できます。まず、テーブルの構造を見てみましょう：</target>
        </trans-unit>
        <trans-unit id="2d635de2fae364e81cf749d3d916a3f78911e8f8" translate="yes" xml:space="preserve">
          <source>In addition to typical, form based authentication, Laravel also provides a simple, convenient way to authenticate with OAuth providers using &lt;a href=&quot;https://github.com/laravel/socialite&quot;&gt;Laravel Socialite&lt;/a&gt;. Socialite currently supports authentication with Facebook, Twitter, LinkedIn, Google, GitHub and Bitbucket.</source>
          <target state="translated">典型的な、フォームベースの認証に加えて、Laravelはまた、使用のOAuthプロバイダーを使用して認証するための便利な方法を提供し、簡単な&lt;a href=&quot;https://github.com/laravel/socialite&quot;&gt;Laravel名士を&lt;/a&gt;。Socialiteは現在、Facebook、Twitter、LinkedIn、Google、GitHub、およびBitbucketによる認証をサポートしています。</target>
        </trans-unit>
        <trans-unit id="b5f94cf10028bc93d30a33151c4cd9717359ab28" translate="yes" xml:space="preserve">
          <source>In addition to typical, form based authentication, Laravel also provides a simple, convenient way to authenticate with OAuth providers using &lt;a href=&quot;https://github.com/laravel/socialite&quot;&gt;Laravel Socialite&lt;/a&gt;. Socialite currently supports authentication with Facebook, Twitter, LinkedIn, Google, GitHub, GitLab and Bitbucket.</source>
          <target state="translated">In addition to typical, form based authentication, Laravel also provides a simple, convenient way to authenticate with OAuth providers using &lt;a href=&quot;https://github.com/laravel/socialite&quot;&gt;Laravel Socialite&lt;/a&gt;. Socialite currently supports authentication with Facebook, Twitter, LinkedIn, Google, GitHub, GitLab and Bitbucket.</target>
        </trans-unit>
        <trans-unit id="95d77040361e26995411dd94be7132037cf94f43" translate="yes" xml:space="preserve">
          <source>In addition to using the &lt;code&gt;Cache&lt;/code&gt; facade or &lt;a href=&quot;contracts&quot;&gt;cache contract&lt;/a&gt;, you may also use the global &lt;code&gt;cache&lt;/code&gt; function to retrieve and store data via the cache. When the &lt;code&gt;cache&lt;/code&gt; function is called with a single, string argument, it will return the value of the given key:</source>
          <target state="translated">使用に加えて &lt;code&gt;Cache&lt;/code&gt; ファサードや&lt;a href=&quot;contracts&quot;&gt;キャッシュ契約を&lt;/a&gt;、あなたはまた、グローバル使用可能 &lt;code&gt;cache&lt;/code&gt; キャッシュを介してデータを取得し、保存する機能を。ときに &lt;code&gt;cache&lt;/code&gt; 機能は、単一の、文字列引数で呼び出され、それが与えられたキーの値を返します。</target>
        </trans-unit>
        <trans-unit id="407410c89fb408f588f2eddedb8374f8b3cb1632" translate="yes" xml:space="preserve">
          <source>In addition, Closure based event listeners may now be marked as queueable using the &lt;code&gt;Illuminate\Events\queueable&lt;/code&gt; function:</source>
          <target state="translated">さらに、クロージャーベースのイベントリスナーは、 &lt;code&gt;Illuminate\Events\queueable&lt;/code&gt; 関数を使用してキュー可能としてマークできるようになりました。</target>
        </trans-unit>
        <trans-unit id="73a92e0af815815c383716307a6c7fbaa822e82d" translate="yes" xml:space="preserve">
          <source>In addition, Eloquent assumes that the primary key is an incrementing integer value, which means that by default the primary key will automatically be cast to an &lt;code&gt;int&lt;/code&gt;. If you wish to use a non-incrementing or a non-numeric primary key you must set the public &lt;code&gt;$incrementing&lt;/code&gt; property on your model to &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">さらに、Eloquentは、主キーが増分整数値であると想定します。これは、デフォルトで主キーが自動的に &lt;code&gt;int&lt;/code&gt; にキャストされることを意味します。非インクリメントまたは非数値の主キーを使用する場合は、モデルのパブリック &lt;code&gt;$incrementing&lt;/code&gt; プロパティを &lt;code&gt;false&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="ca21a77d226920f2d0caa2f5693c20b5abb1e93c" translate="yes" xml:space="preserve">
          <source>In addition, Eloquent assumes that the primary key is an incrementing integer value, which means that by default the primary key will be cast to an &lt;code&gt;int&lt;/code&gt; automatically. If you wish to use a non-incrementing or a non-numeric primary key you must set the public &lt;code&gt;$incrementing&lt;/code&gt; property on your model to &lt;code&gt;false&lt;/code&gt;. If your primary key is not an integer, you should set the protected &lt;code&gt;$keyType&lt;/code&gt; property on your model to &lt;code&gt;string&lt;/code&gt;.</source>
          <target state="translated">さらに、Eloquentは、主キーが増加する整数値であると想定しています。つまり、デフォルトでは、主キーは自動的に &lt;code&gt;int&lt;/code&gt; にキャストされます。非増分または非数値の主キーを使用する場合は、モデルの公開 &lt;code&gt;$incrementing&lt;/code&gt; プロパティを &lt;code&gt;false&lt;/code&gt; に設定する必要があります。主キーが整数でない場合、モデルのprotected &lt;code&gt;$keyType&lt;/code&gt; プロパティを &lt;code&gt;string&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="45cefc9b95b9d697d6109319ad2a16627cf4874f" translate="yes" xml:space="preserve">
          <source>In addition, JSON response data may be accessed as array variables on the response:</source>
          <target state="translated">また、JSON レスポンスデータは、レスポンス上の配列変数としてアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="d829f37e367148c6f97713cd101e5600123aa308" translate="yes" xml:space="preserve">
          <source>In addition, if you start ChromeDriver on a port other than 9515, you should modify the &lt;code&gt;driver&lt;/code&gt; method of the same class:</source>
          <target state="translated">さらに、9515以外のポートでChromeDriverを起動する場合は、同じクラスの &lt;code&gt;driver&lt;/code&gt; メソッドを変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="8b2bd34abcfa759b004e3a5f60ece6adebdcd973" translate="yes" xml:space="preserve">
          <source>In addition, new pivot records will receive this value.</source>
          <target state="translated">さらに、新しいピボットレコードはこの値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="6c96aa3489fc13d7a222ea35337a353c719581a1" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;Illuminate\Database\Eloquent\Collection&lt;/code&gt; class provides a superset of methods to aid with managing your model collections. Most methods return &lt;code&gt;Illuminate\Database\Eloquent\Collection&lt;/code&gt; instances; however, some methods return a base &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; instance.</source>
          <target state="translated">さらに、 &lt;code&gt;Illuminate\Database\Eloquent\Collection&lt;/code&gt; クラスは、モデルコレクションの管理を支援するメソッドのスーパーセットを提供します。ほとんどのメソッドは &lt;code&gt;Illuminate\Database\Eloquent\Collection&lt;/code&gt; インスタンスを返します。ただし、一部のメソッドはベースの &lt;code&gt;Illuminate\Support\Collection&lt;/code&gt; インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="f7283111d3874beb4705bea9014bbb2942f411cc" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;choice&lt;/code&gt; method accepts optional fourth and fifth arguments for determining the maximum number of attempts to select a valid response and whether multiple selections are permitted:</source>
          <target state="translated">さらに、 &lt;code&gt;choice&lt;/code&gt; メソッドは、有効な応答を選択するための最大試行回数と、複数の選択が許可されるかどうかを決定するためのオプションの4番目と5番目の引数を受け入れます。</target>
        </trans-unit>
        <trans-unit id="e9b532401dadd1a8e48af290963c5d0424fc3f41" translate="yes" xml:space="preserve">
          <source>In addition, the &lt;code&gt;cursor&lt;/code&gt; method was added to the contract:</source>
          <target state="translated">さらに、 &lt;code&gt;cursor&lt;/code&gt; メソッドがコントラクトに追加されました。</target>
        </trans-unit>
        <trans-unit id="631ad11bb029e56b975e5f6d446c7997abb50421" translate="yes" xml:space="preserve">
          <source>In addition, the Laravel installer has been updated to support &lt;code&gt;composer create-project&lt;/code&gt; and Laravel Jetstream. Any installer older than 4.0 will cease to work after October 2020. You should upgrade your global installer to &lt;code&gt;^4.0&lt;/code&gt; as soon as possible.</source>
          <target state="translated">さらに、Laravelインストーラーが更新され、 &lt;code&gt;composer create-project&lt;/code&gt; とLaravelJetstreamがサポートされるようになりました。4.0より古いインストーラーは、2020年10月以降は機能しなくなります。グローバルインストーラーをできるだけ早く &lt;code&gt;^4.0&lt;/code&gt; アップグレードする必要があります。</target>
        </trans-unit>
        <trans-unit id="e2d749a1c35a775f411f62633eff2566d6ae3e3a" translate="yes" xml:space="preserve">
          <source>In addition, the query builder's &lt;code&gt;orderBy&lt;/code&gt; function supports subqueries. We may use this functionality to sort all destinations based on when the last flight arrived at that destination. Again, this may be done while executing a single query against the database:</source>
          <target state="translated">さらに、クエリビルダーの &lt;code&gt;orderBy&lt;/code&gt; 関数はサブクエリをサポートします。この機能を使用して、最後のフライトが目的地に到着した日時に基づいてすべての目的地を並べ替えることができます。繰り返しますが、これはデータベースに対して単一のクエリを実行しているときに実行できます。</target>
        </trans-unit>
        <trans-unit id="5b8124890cc073907c9d878300e220c5d16be05d" translate="yes" xml:space="preserve">
          <source>In addition, using the &lt;code&gt;loadCount&lt;/code&gt; method, you may load a relationship count after the parent model has already been retrieved:</source>
          <target state="translated">さらに、 &lt;code&gt;loadCount&lt;/code&gt; メソッドを使用すると、親モデルが既に取得された後に関係カウントをロードできます。</target>
        </trans-unit>
        <trans-unit id="0c068cf7f7eaefec32a9f835e0837374956736c7" translate="yes" xml:space="preserve">
          <source>In addition, view data may be accessed as array variables on the response:</source>
          <target state="translated">さらに、ビューデータは、レスポンス上で配列変数としてアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="ebc77b4dadf5670cc9cf77300a8ad5618815c89f" translate="yes" xml:space="preserve">
          <source>In addition, when upgrading to any new Horizon version, you should re-publish Horizon's assets:</source>
          <target state="translated">また、新しい Horizon のバージョンにアップグレードする際には、Horizon のアセットを再公開する必要があります。</target>
        </trans-unit>
        <trans-unit id="a29c14746c1b31efa9bbf8e33ef33198ee9ae3f0" translate="yes" xml:space="preserve">
          <source>In addition, when upgrading to any new Telescope version, you should re-publish Telescope's assets:</source>
          <target state="translated">また、新しい望遠鏡のバージョンにアップグレードする際には、望遠鏡の資産を再公開する必要があります。</target>
        </trans-unit>
        <trans-unit id="88e0bc06173864580da40e7e98b618a6b1aa9e71" translate="yes" xml:space="preserve">
          <source>In addition, when you depend on simple interfaces, your code is easier to understand and maintain. Rather than tracking down which methods are available to you within a large, complicated class, you can refer to a simple, clean interface.</source>
          <target state="translated">さらに、シンプルなインターフェイスに依存すると、コードの理解と保守が容易になります。大きくて複雑なクラスの中でどのメソッドが利用できるかを追跡するよりも、シンプルでクリーンなインターフェースを参照することができます。</target>
        </trans-unit>
        <trans-unit id="11081d72d654fe760529dae87e6ca38a9eacade7" translate="yes" xml:space="preserve">
          <source>In addition, you can pass a third argument containing the new items to replace the items removed from the collection:</source>
          <target state="translated">さらに、コレクションから削除されたアイテムを置き換えるために、新しいアイテムを含む第3引数を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="cb91e32ab99488935a9b44ea6801f9366e196e7a" translate="yes" xml:space="preserve">
          <source>In addition, you may create a &lt;code&gt;.env.testing&lt;/code&gt; file in the root of your project. This file will override the &lt;code&gt;.env&lt;/code&gt; file when running PHPUnit tests or executing Artisan commands with the &lt;code&gt;--env=testing&lt;/code&gt; option.</source>
          <target state="translated">さらに、プロジェクトのルートに &lt;code&gt;.env.testing&lt;/code&gt; ファイルを作成できます。PHPUnitテストの実行時、または &lt;code&gt;--env=testing&lt;/code&gt; オプションを指定したArtisanコマンドの実行時に、このファイルは &lt;code&gt;.env&lt;/code&gt; ファイルをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="b51a09732cbe19c4c96fdaa54bf1747a08c3b674" translate="yes" xml:space="preserve">
          <source>In addition, you may define a global &quot;reply_to&quot; address within your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file:</source>
          <target state="translated">さらに、 &lt;code&gt;config/mail.php&lt;/code&gt; 構成ファイル内でグローバルな「reply_to」アドレスを定義できます。</target>
        </trans-unit>
        <trans-unit id="948ce3924c5025790bf07cf0d2fa8872fd6fc5d5" translate="yes" xml:space="preserve">
          <source>In addition, you may pass your own callback to determine which values of the collection to sum:</source>
          <target state="translated">さらに、コレクションのどの値を合計するかを決定するために、独自のコールバックを渡すこともできます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
