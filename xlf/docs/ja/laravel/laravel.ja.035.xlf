<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="57a971e94cf6aea48d738a3152c942d98056b210" translate="yes" xml:space="preserve">
          <source>Now that we have examined the table structure for the relationship, let's define the relationship on the &lt;code&gt;Mechanic&lt;/code&gt; model:</source>
          <target state="translated">関係のテーブル構造を調べたので、 &lt;code&gt;Mechanic&lt;/code&gt; モデルで関係を定義しましょう。</target>
        </trans-unit>
        <trans-unit id="56af95d308036077b3c8f9655a2e1e779a90933f" translate="yes" xml:space="preserve">
          <source>Now that we have explored each of the methods on the &lt;code&gt;UserProvider&lt;/code&gt;, let's take a look at the &lt;code&gt;Authenticatable&lt;/code&gt; contract. Remember, the provider should return implementations of this interface from the &lt;code&gt;retrieveById&lt;/code&gt;, &lt;code&gt;retrieveByToken&lt;/code&gt;, and &lt;code&gt;retrieveByCredentials&lt;/code&gt; methods:</source>
          <target state="translated">&lt;code&gt;UserProvider&lt;/code&gt; の各メソッドについて説明したので、 &lt;code&gt;Authenticatable&lt;/code&gt; コントラクトを見てみましょう。プロバイダーは、 &lt;code&gt;retrieveById&lt;/code&gt; 、 &lt;code&gt;retrieveByToken&lt;/code&gt; 、 &lt;code&gt;retrieveByCredentials&lt;/code&gt; メソッドからこのインターフェースの実装を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="6e45783baaaf6830cea37aae0ef8db8093abb3b8" translate="yes" xml:space="preserve">
          <source>Now that we have explored how to build &quot;has many&quot; relationships using factories, let's explore the inverse of the relationship. The &lt;code&gt;for&lt;/code&gt; method may be used to define the model that factory created models belong to. For example, we can create three &lt;code&gt;Post&lt;/code&gt; model instances that belong to a single user:</source>
          <target state="translated">工場を使用して「多くの」関係を構築する方法を検討したので、関係の逆を調べてみましょう。 &lt;code&gt;for&lt;/code&gt; 方法は、工場作成されたモデルが属するモデルを定義するために使用することができます。たとえば、1人のユーザーに属する3つの &lt;code&gt;Post&lt;/code&gt; モデルインスタンスを作成できます。</target>
        </trans-unit>
        <trans-unit id="b384223558f6f4ab76f9c27868c9b861ebe566ef" translate="yes" xml:space="preserve">
          <source>Now that we have registered the composer, the &lt;code&gt;ProfileComposer@compose&lt;/code&gt; method will be executed each time the &lt;code&gt;profile&lt;/code&gt; view is being rendered. So, let's define the composer class:</source>
          <target state="translated">コンポーザーを登録したので、 &lt;code&gt;profile&lt;/code&gt; ビューがレンダリングされるたびに &lt;code&gt;ProfileComposer@compose&lt;/code&gt; メソッドが実行されます。それでは、作曲家クラスを定義しましょう：</target>
        </trans-unit>
        <trans-unit id="9787dfcebf034062875deb728f2f915ef36e93e7" translate="yes" xml:space="preserve">
          <source>Now that you have routes and views setup for the included authentication controllers, you are ready to register and authenticate new users for your application! You may access your application in a browser since the authentication controllers already contain the logic (via their traits) to authenticate existing users and store new users in the database.</source>
          <target state="translated">これで、付属の認証コントローラ用のルートとビューの設定が完了したので、アプリケーションに新しいユーザーを登録して認証する準備が整いました! 既存のユーザーを認証したり、新しいユーザーをデータベースに保存したりするためのロジックが認証コントローラにはすでに含まれているので、ブラウザからアプリケーションにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="2090bc16f77d63141c56b9e4141525e7713e920b" translate="yes" xml:space="preserve">
          <source>Now that your application has been scaffolded for authentication, you are ready to register and authenticate! You may simply access your application in a browser since Jetstream's authentication controllers already contain the logic to authenticate existing users and store new users in the database.</source>
          <target state="translated">これで、アプリケーションが認証のために足場ができたので、登録と認証の準備が整いました。Jetstream の認証コントローラには、既存のユーザーを認証し、新しいユーザーをデータベースに保存するためのロジックがすでに含まれているため、ブラウザからアプリケーションにアクセスするだけで簡単にアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="87cfdb769b937f131c4a1a206595be9621cf693c" translate="yes" xml:space="preserve">
          <source>Now the &lt;code&gt;is_admin&lt;/code&gt; attribute will always be cast to a boolean when you access it, even if the underlying value is stored in the database as an integer:</source>
          <target state="translated">これで、基礎となる値が整数としてデータベースに格納されている場合でも、 &lt;code&gt;is_admin&lt;/code&gt; 属性にアクセスすると、常にブール値にキャストされます。</target>
        </trans-unit>
        <trans-unit id="08d8f43a24d7552f871c3e346e051c9208a1c298" translate="yes" xml:space="preserve">
          <source>Now the code is not coupled to any specific vendor, or even Laravel. Since the contracts package contains no implementation and no dependencies, you may easily write an alternative implementation of any given contract, allowing you to replace your cache implementation without modifying any of your cache consuming code.</source>
          <target state="translated">現在、コードは特定のベンダーやLaravelに結合されていません。contractsパッケージには実装や依存関係がないので、任意のコントラクトの代替実装を簡単に書くことができ、キャッシュを消費するコードを変更することなくキャッシュ実装を置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="4a275c1b6a98b2b92d8084825542ef626716cc06" translate="yes" xml:space="preserve">
          <source>Now the customer will have two plans on their &lt;code&gt;default&lt;/code&gt; subscription. Both plans will be charged for on their respective billing intervals. You can also use the &lt;code&gt;quantity&lt;/code&gt; method to indicate the specific quantity for each plan:</source>
          <target state="translated">これで、顧客は &lt;code&gt;default&lt;/code&gt; サブスクリプションに2つのプランを設定できます。どちらのプランも、それぞれの請求間隔で課金されます。 &lt;code&gt;quantity&lt;/code&gt; メソッドを使用して、各プランの特定の数量を示すこともできます。</target>
        </trans-unit>
        <trans-unit id="fa3703be78c890beae2e07d81b37af59ed94a89a" translate="yes" xml:space="preserve">
          <source>Now we are ready to fill in our &lt;code&gt;store&lt;/code&gt; method with the logic to validate the new blog post. To do this, we will use the &lt;code&gt;validate&lt;/code&gt; method provided by the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; object. If the validation rules pass, your code will keep executing normally; however, if validation fails, an exception will be thrown and the proper error response will automatically be sent back to the user. In the case of a traditional HTTP request, a redirect response will be generated, while a JSON response will be sent for AJAX requests.</source>
          <target state="translated">これで、新しいブログ投稿を検証するロジックを &lt;code&gt;store&lt;/code&gt; メソッドに入力する準備ができました。これを行うには、 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; オブジェクトによって提供される &lt;code&gt;validate&lt;/code&gt; メソッドを使用します。検証ルールに合格した場合、コードは通常どおり実行されます。ただし、検証が失敗した場合、例外がスローされ、適切なエラー応答が自動的にユーザーに送信されます。従来のHTTPリクエストの場合、リダイレクトレスポンスが生成されますが、AJAXリクエストに対してはJSONレスポンスが送信されます。</target>
        </trans-unit>
        <trans-unit id="cec6557270a58ded634446c012dc3c6488ff775f" translate="yes" xml:space="preserve">
          <source>Now we may publish messages to the channel using the &lt;code&gt;publish&lt;/code&gt; method:</source>
          <target state="translated">これで、 &lt;code&gt;publish&lt;/code&gt; メソッドを使用してメッセージをチャネルに公開できます。</target>
        </trans-unit>
        <trans-unit id="dbea68274bfe4b51d99a200235365b6848ed243d" translate="yes" xml:space="preserve">
          <source>Now you may use the &lt;code&gt;db:seed&lt;/code&gt; Artisan command to seed your database. By default, the &lt;code&gt;db:seed&lt;/code&gt; command runs the &lt;code&gt;DatabaseSeeder&lt;/code&gt; class, which may be used to call other seed classes. However, you may use the &lt;code&gt;--class&lt;/code&gt; option to specify a specific seeder class to run individually:</source>
          <target state="translated">これで、 &lt;code&gt;db:seed&lt;/code&gt; Artisanコマンドを使用してデータベースをシードできます。デフォルトでは、 &lt;code&gt;db:seed&lt;/code&gt; コマンドは &lt;code&gt;DatabaseSeeder&lt;/code&gt; クラスを実行します。これは、他のシードクラスを呼び出すために使用できます。ただし、-- &lt;code&gt;--class&lt;/code&gt; オプションを使用して、個別に実行する特定のシーダークラスを指定できます。</target>
        </trans-unit>
        <trans-unit id="8ff8115a79cd1864b15a8b2f7f06433191f9ae2b" translate="yes" xml:space="preserve">
          <source>Now your users may publish these groups separately by referencing their tag when executing the &lt;code&gt;vendor:publish&lt;/code&gt; command:</source>
          <target state="translated">これで、ユーザーは &lt;code&gt;vendor:publish&lt;/code&gt; コマンドを実行するときにタグを参照することにより、これらのグループを個別に公開できます。</target>
        </trans-unit>
        <trans-unit id="71249528caf4ceb76911edf57e21ee96b9881536" translate="yes" xml:space="preserve">
          <source>Now, let's look at an example &lt;code&gt;Flight&lt;/code&gt; model, which we will use to retrieve and store information from our &lt;code&gt;flights&lt;/code&gt; database table:</source>
          <target state="translated">ここで、 &lt;code&gt;flights&lt;/code&gt; データベーステーブルから情報を取得して格納するために使用する、 &lt;code&gt;Flight&lt;/code&gt; モデルの例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="867b1bbe414eb6decac97173d50745b5758ecdc6" translate="yes" xml:space="preserve">
          <source>Now, let's retrieve all books and their authors:</source>
          <target state="translated">では、すべての本とその著者を検索してみましょう。</target>
        </trans-unit>
        <trans-unit id="847b053272419256743d461a4f583f78ab067e06" translate="yes" xml:space="preserve">
          <source>Now, we can inject content into the named slot using the &lt;code&gt;@slot&lt;/code&gt; directive. Any content not within a &lt;code&gt;@slot&lt;/code&gt; directive will be passed to the component in the &lt;code&gt;$slot&lt;/code&gt; variable:</source>
          <target state="translated">これで、 &lt;code&gt;@slot&lt;/code&gt; ディレクティブを使用して、名前付きスロットにコンテンツを挿入できます。 &lt;code&gt;@slot&lt;/code&gt; ディレクティブ内にないコンテンツは、 &lt;code&gt;$slot&lt;/code&gt; 変数でコンポーネントに渡されます。</target>
        </trans-unit>
        <trans-unit id="35831ef9a428b00f3cb7632bde402e714c21c5cd" translate="yes" xml:space="preserve">
          <source>Now, when a request matches the specified route URI, the &lt;code&gt;show&lt;/code&gt; method on the &lt;code&gt;UserController&lt;/code&gt; class will be executed. Of course, the route parameters will also be passed to the method.</source>
          <target state="translated">これで、リクエストが指定されたルートURIと一致すると、 &lt;code&gt;UserController&lt;/code&gt; クラスの &lt;code&gt;show&lt;/code&gt; メソッドが実行されます。もちろん、ルートパラメータもメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="6d4de32cbe72280569b3639bbfd86c76ada82e16" translate="yes" xml:space="preserve">
          <source>Now, when a request matches the specified route URI, the &lt;code&gt;show&lt;/code&gt; method on the &lt;code&gt;UserController&lt;/code&gt; class will be executed. The route parameters will also be passed to the method.</source>
          <target state="translated">これで、リクエストが指定されたルートURIと一致すると、 &lt;code&gt;UserController&lt;/code&gt; クラスの &lt;code&gt;show&lt;/code&gt; メソッドが実行されます。ルートパラメータもメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="6999c45f5ec5bfaad7ada7d53bf9b5f577634b59" translate="yes" xml:space="preserve">
          <source>Now, when users of your package execute Laravel's &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command, your package's translations will be published to the specified publish location.</source>
          <target state="translated">これで、パッケージのユーザーがLaravelの &lt;code&gt;vendor:publish&lt;/code&gt; Artisanコマンドを実行すると、パッケージの翻訳が指定された発行場所に発行されます。</target>
        </trans-unit>
        <trans-unit id="66afe2fe15f4452d3630bdc4fb004471726cd97c" translate="yes" xml:space="preserve">
          <source>Now, when users of your package execute Laravel's &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command, your package's views will be copied to the specified publish location.</source>
          <target state="translated">これで、パッケージのユーザーがLaravelの &lt;code&gt;vendor:publish&lt;/code&gt; Artisanコマンドを実行すると、パッケージのビューが指定された発行場所にコピーされます。</target>
        </trans-unit>
        <trans-unit id="aa615156f728cbed20a14963071de6a77d8d4808" translate="yes" xml:space="preserve">
          <source>Now, when users of your package execute Laravel's &lt;code&gt;vendor:publish&lt;/code&gt; command, your file will be copied to the specified publish location. Of course, once your configuration has been published, its values may be accessed like any other configuration file:</source>
          <target state="translated">これで、パッケージのユーザーがLaravelの &lt;code&gt;vendor:publish&lt;/code&gt; コマンドを実行すると、ファイルが指定した発行場所にコピーされます。もちろん、設定が公開されると、その値には他の設定ファイルと同じようにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="3126cc4820d84702ff2dfdce7f5674f999f23407" translate="yes" xml:space="preserve">
          <source>Now, when users of your package execute Laravel's &lt;code&gt;vendor:publish&lt;/code&gt; command, your file will be copied to the specified publish location. Once your configuration has been published, its values may be accessed like any other configuration file:</source>
          <target state="translated">これで、パッケージのユーザーがLaravelの &lt;code&gt;vendor:publish&lt;/code&gt; コマンドを実行すると、ファイルが指定された公開場所にコピーされます。構成が公開されると、他の構成ファイルと同じようにその値にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="96f5b27bb26b073cca34658e69309ab3120a6f6c" translate="yes" xml:space="preserve">
          <source>Now, when you call the &lt;code&gt;delete&lt;/code&gt; method on the model, the &lt;code&gt;deleted_at&lt;/code&gt; column will be set to the current date and time. And, when querying a model that uses soft deletes, the soft deleted models will automatically be excluded from all query results.</source>
          <target state="translated">これで、モデルで &lt;code&gt;delete&lt;/code&gt; メソッドを呼び出すと、 &lt;code&gt;deleted_at&lt;/code&gt; 列が現在の日付と時刻に設定されます。また、一時的削除を使用するモデルをクエリすると、一時的削除されたモデルはすべてのクエリ結果から自動的に除外されます。</target>
        </trans-unit>
        <trans-unit id="e32f61e7378f4c47cca11bb4ef57c5f54ec4b2ca" translate="yes" xml:space="preserve">
          <source>Now, when you update a &lt;code&gt;Comment&lt;/code&gt;, the owning &lt;code&gt;Post&lt;/code&gt; will have its &lt;code&gt;updated_at&lt;/code&gt; column updated as well, making it more convenient to know when to invalidate a cache of the &lt;code&gt;Post&lt;/code&gt; model:</source>
          <target state="translated">そこで更新すると、 &lt;code&gt;Comment&lt;/code&gt; 、所有している &lt;code&gt;Post&lt;/code&gt; その必要があります &lt;code&gt;updated_at&lt;/code&gt; のの列がキャッシュの無効とする際に知っておくことは、より便利に、同様に更新 &lt;code&gt;Post&lt;/code&gt; モデルを：</target>
        </trans-unit>
        <trans-unit id="fc89e5621f61089729df84456b4b750624ecc075" translate="yes" xml:space="preserve">
          <source>Now, when your package's users execute the &lt;code&gt;vendor:publish&lt;/code&gt; command, your assets will be copied to the specified publish location. Since you will typically need to overwrite the assets every time the package is updated, you may use the &lt;code&gt;--force&lt;/code&gt; flag:</source>
          <target state="translated">これで、パッケージのユーザーが &lt;code&gt;vendor:publish&lt;/code&gt; コマンドを実行すると、アセットが指定された発行場所にコピーされます。通常、パッケージが更新されるたびにアセットを上書きする必要があるため、 &lt;code&gt;--force&lt;/code&gt; フラグを使用できます。</target>
        </trans-unit>
        <trans-unit id="5e5d679ab5892b9f0db4ddf7256b4e8e2380fffe" translate="yes" xml:space="preserve">
          <source>Now, whenever you interact with Cashier while testing, it will send actual API requests to your Stripe testing environment. For convenience, you should pre-fill your Stripe testing account with subscriptions / plans that you may then use during testing.</source>
          <target state="translated">さて、テスト中にキャッシャーとやりとりすると、実際のAPIリクエストをStripeのテスト環境に送信します。利便性のために、Stripeテストアカウントには、テスト中に使用できるサブスクリプションやプランを事前に入力しておくとよいでしょう。</target>
        </trans-unit>
        <trans-unit id="7cff18ad050ffd8ba56b1c0652ec01c574af4923" translate="yes" xml:space="preserve">
          <source>Now, you may pass the parameters when calling the scope:</source>
          <target state="translated">これで、スコープを呼び出すときにパラメータを渡すことができるようになりました。</target>
        </trans-unit>
        <trans-unit id="6928806b334789a6f249f9e7d906a60ac52e541e" translate="yes" xml:space="preserve">
          <source>Now, you may use this shorthand selector anywhere you would use a full CSS selector:</source>
          <target state="translated">これで、この短縮セレクタは、完全なCSSセレクタを使用する場合と同じように、どこでも使用できます。</target>
        </trans-unit>
        <trans-unit id="8d86882ceb875b31af88b925e95b06ec8bd1e047" translate="yes" xml:space="preserve">
          <source>NullBroadcaster</source>
          <target state="translated">NullBroadcaster</target>
        </trans-unit>
        <trans-unit id="496c63445a5703f519171e75365e3ece00a66100" translate="yes" xml:space="preserve">
          <source>NullBroadcaster (Broadcasting\Broadcasters)</source>
          <target state="translated">NullBroadcaster (Broadcasters)</target>
        </trans-unit>
        <trans-unit id="3d2a23ce8db72187c97885c7712e402c008bfe46" translate="yes" xml:space="preserve">
          <source>NullBroadcaster::auth()</source>
          <target state="translated">NullBroadcaster::auth()</target>
        </trans-unit>
        <trans-unit id="912e2429c98ee6b966113f81e03694614b1c4c95" translate="yes" xml:space="preserve">
          <source>NullBroadcaster::broadcast()</source>
          <target state="translated">NullBroadcaster::broadcast()</target>
        </trans-unit>
        <trans-unit id="ee3274349f3d501b01a7523fe7784006560f55b1" translate="yes" xml:space="preserve">
          <source>NullBroadcaster::validAuthenticationResponse()</source>
          <target state="translated">NullBroadcaster::validAuthenticationResponse()</target>
        </trans-unit>
        <trans-unit id="87880cb01dba14fa7d4833e1bb4d4e8b56ba8273" translate="yes" xml:space="preserve">
          <source>NullConnector</source>
          <target state="translated">NullConnector</target>
        </trans-unit>
        <trans-unit id="16657a504beeb0038fd5b418aa1e973a6239764c" translate="yes" xml:space="preserve">
          <source>NullConnector (Queue\Connectors)</source>
          <target state="translated">NullConnector (QueueConnectors)</target>
        </trans-unit>
        <trans-unit id="d781aee735720844a5b5ed686ae04663d3dd5223" translate="yes" xml:space="preserve">
          <source>NullConnector::connect()</source>
          <target state="translated">NullConnector::connect()</target>
        </trans-unit>
        <trans-unit id="60e729d7088950ae0ddaa468cd0dd4a91b590ad0" translate="yes" xml:space="preserve">
          <source>NullDispatcher</source>
          <target state="translated">NullDispatcher</target>
        </trans-unit>
        <trans-unit id="40a7953e18f3e37f2c1fad8352e338d80f462440" translate="yes" xml:space="preserve">
          <source>NullDispatcher (Events)</source>
          <target state="translated">NullDispatcher (イベント)</target>
        </trans-unit>
        <trans-unit id="29a5aa2dacc5a87fb304e8a5edeeda71d1223625" translate="yes" xml:space="preserve">
          <source>NullDispatcher::__call()</source>
          <target state="translated">NullDispatcher::__call()</target>
        </trans-unit>
        <trans-unit id="3cc46037ddfd0939191c32591c33ce87e3ef5815" translate="yes" xml:space="preserve">
          <source>NullDispatcher::__construct()</source>
          <target state="translated">NullDispatcher::__construct()</target>
        </trans-unit>
        <trans-unit id="716dba8e44fc20aa7d825542a0a6a3b09dc9bdad" translate="yes" xml:space="preserve">
          <source>NullDispatcher::dispatch()</source>
          <target state="translated">NullDispatcher::dispatch()</target>
        </trans-unit>
        <trans-unit id="06cd72f2561f4ef67db291e2a53234cd60979566" translate="yes" xml:space="preserve">
          <source>NullDispatcher::flush()</source>
          <target state="translated">NullDispatcher::flush()</target>
        </trans-unit>
        <trans-unit id="c91b3cfd449fd3a665a98cbe0abba2eaaf37b754" translate="yes" xml:space="preserve">
          <source>NullDispatcher::forget()</source>
          <target state="translated">NullDispatcher::forget()</target>
        </trans-unit>
        <trans-unit id="7c66d4419963b86843106c27184ced1746f4a221" translate="yes" xml:space="preserve">
          <source>NullDispatcher::forgetPushed()</source>
          <target state="translated">NullDispatcher::forgetPushed()</target>
        </trans-unit>
        <trans-unit id="f015bd6a5e81b117ce964c28a7a38f7b962a633a" translate="yes" xml:space="preserve">
          <source>NullDispatcher::hasListeners()</source>
          <target state="translated">NullDispatcher::hasListeners()</target>
        </trans-unit>
        <trans-unit id="6119ad81fdd8acaf76bbc498db8a89c8c0a0f7c5" translate="yes" xml:space="preserve">
          <source>NullDispatcher::listen()</source>
          <target state="translated">NullDispatcher::listen()</target>
        </trans-unit>
        <trans-unit id="2dc054f0f9ba7172cb45a089457fadc40130296a" translate="yes" xml:space="preserve">
          <source>NullDispatcher::push()</source>
          <target state="translated">NullDispatcher::push()</target>
        </trans-unit>
        <trans-unit id="a9797f6010a63c881e6c93e328a66aec286b43e0" translate="yes" xml:space="preserve">
          <source>NullDispatcher::subscribe()</source>
          <target state="translated">NullDispatcher::subscribe()</target>
        </trans-unit>
        <trans-unit id="04b503c1af42ce7267def5ee805691598ea24e86" translate="yes" xml:space="preserve">
          <source>NullDispatcher::until()</source>
          <target state="translated">NullDispatcher::until()</target>
        </trans-unit>
        <trans-unit id="257ec317d6038b486268fdaece7f094ed7f3e4c0" translate="yes" xml:space="preserve">
          <source>NullFailedJobProvider</source>
          <target state="translated">NullFailedJobProvider</target>
        </trans-unit>
        <trans-unit id="a552f5e94691838f521a4794f9828b455e247f4f" translate="yes" xml:space="preserve">
          <source>NullFailedJobProvider (Queue\Failed)</source>
          <target state="translated">NullFailedJobProvider (QueueFailed)</target>
        </trans-unit>
        <trans-unit id="97ea33c1c01460d173b8aadab87d7f2c2fba6c65" translate="yes" xml:space="preserve">
          <source>NullFailedJobProvider::all()</source>
          <target state="translated">NullFailedJobProvider::all()</target>
        </trans-unit>
        <trans-unit id="cb274c2469a21113995a8726f2d4c716d5c7b398" translate="yes" xml:space="preserve">
          <source>NullFailedJobProvider::find()</source>
          <target state="translated">NullFailedJobProvider::find()</target>
        </trans-unit>
        <trans-unit id="54de5ee49f21b09f33103bdc724ef299be786392" translate="yes" xml:space="preserve">
          <source>NullFailedJobProvider::flush()</source>
          <target state="translated">NullFailedJobProvider::flush()</target>
        </trans-unit>
        <trans-unit id="aecfbdf29ffc462430ecc0925b228a2840cdd8cc" translate="yes" xml:space="preserve">
          <source>NullFailedJobProvider::forget()</source>
          <target state="translated">NullFailedJobProvider::forget()</target>
        </trans-unit>
        <trans-unit id="78432dd712c8d724efb39b489a060779e8ed109a" translate="yes" xml:space="preserve">
          <source>NullFailedJobProvider::log()</source>
          <target state="translated">NullFailedJobProvider::log()</target>
        </trans-unit>
        <trans-unit id="26ed29b247b8d0c66b246d1eb3eff69792586a4d" translate="yes" xml:space="preserve">
          <source>NullQueue</source>
          <target state="translated">NullQueue</target>
        </trans-unit>
        <trans-unit id="814b6fd557a09c55a774ad1cad248c37d6abc4d0" translate="yes" xml:space="preserve">
          <source>NullQueue (Queue)</source>
          <target state="translated">ヌルキュー</target>
        </trans-unit>
        <trans-unit id="2c785e3135ebc7e1f604ed7b11f185c1b2e1a6b4" translate="yes" xml:space="preserve">
          <source>NullQueue::later()</source>
          <target state="translated">NullQueue::later()</target>
        </trans-unit>
        <trans-unit id="78b217909a0c09346d3a5d82fcd6bd2c09313944" translate="yes" xml:space="preserve">
          <source>NullQueue::pop()</source>
          <target state="translated">NullQueue::pop()</target>
        </trans-unit>
        <trans-unit id="2b3c11a6141c6e643081117f009925ef3e7b584e" translate="yes" xml:space="preserve">
          <source>NullQueue::push()</source>
          <target state="translated">NullQueue::push()</target>
        </trans-unit>
        <trans-unit id="06f519b803559312d8d7996e211c4c1ef069cdf8" translate="yes" xml:space="preserve">
          <source>NullQueue::pushRaw()</source>
          <target state="translated">NullQueue::pushRaw()</target>
        </trans-unit>
        <trans-unit id="289c5799e1bd0d74f4942e002343a5b72a1c38bc" translate="yes" xml:space="preserve">
          <source>NullQueue::size()</source>
          <target state="translated">NullQueue::size()</target>
        </trans-unit>
        <trans-unit id="ccc58eefc68ba5c3653697f3be9d9731ed876abd" translate="yes" xml:space="preserve">
          <source>NullSessionHandler</source>
          <target state="translated">NullSessionHandler</target>
        </trans-unit>
        <trans-unit id="53eac166f62324102d80375615624e0ad56a2cce" translate="yes" xml:space="preserve">
          <source>NullSessionHandler (Session)</source>
          <target state="translated">NullSessionHandler (Session)</target>
        </trans-unit>
        <trans-unit id="2cb121fda1bccae976923c2845738244c4b8a76b" translate="yes" xml:space="preserve">
          <source>NullSessionHandler::close()</source>
          <target state="translated">NullSessionHandler::close()</target>
        </trans-unit>
        <trans-unit id="c23d92bd78b7712f19338a9478bd622c10895431" translate="yes" xml:space="preserve">
          <source>NullSessionHandler::destroy()</source>
          <target state="translated">NullSessionHandler::destroy()</target>
        </trans-unit>
        <trans-unit id="979a14ec2d3729114908af12529926d47ddbac4d" translate="yes" xml:space="preserve">
          <source>NullSessionHandler::gc()</source>
          <target state="translated">NullSessionHandler::gc()</target>
        </trans-unit>
        <trans-unit id="1012af7c55c7fdf347f1d67096f6165acb65d292" translate="yes" xml:space="preserve">
          <source>NullSessionHandler::open()</source>
          <target state="translated">NullSessionHandler::open()</target>
        </trans-unit>
        <trans-unit id="12fc913668486f0c2b307468ee965e96cd353d91" translate="yes" xml:space="preserve">
          <source>NullSessionHandler::read()</source>
          <target state="translated">NullSessionHandler::read()</target>
        </trans-unit>
        <trans-unit id="2046c66982f080e2b4f5e9a610ab0e03c89a298a" translate="yes" xml:space="preserve">
          <source>NullSessionHandler::write()</source>
          <target state="translated">NullSessionHandler::write()</target>
        </trans-unit>
        <trans-unit id="cdbea90c5fe2d239704cfe69115fd2c7f7e0eadf" translate="yes" xml:space="preserve">
          <source>NullStore</source>
          <target state="translated">NullStore</target>
        </trans-unit>
        <trans-unit id="7ada42db5dc6f5447542dc716f1682fec122260d" translate="yes" xml:space="preserve">
          <source>NullStore (Cache)</source>
          <target state="translated">NullStore (キャッシュ)</target>
        </trans-unit>
        <trans-unit id="1a6da7fc51c18bfa506c08640571c83eae1d0b61" translate="yes" xml:space="preserve">
          <source>NullStore::decrement()</source>
          <target state="translated">NullStore::decrement()</target>
        </trans-unit>
        <trans-unit id="1c0dca327cc8779ac3ad5043ffb8bf97673ff373" translate="yes" xml:space="preserve">
          <source>NullStore::flush()</source>
          <target state="translated">NullStore::flush()</target>
        </trans-unit>
        <trans-unit id="6f1fc4efa124fe7ffd4d23a14fde0e181f1bf822" translate="yes" xml:space="preserve">
          <source>NullStore::forever()</source>
          <target state="translated">NullStore::forever()</target>
        </trans-unit>
        <trans-unit id="3d71bff8e62e990136801dc7fc0038ae4570775f" translate="yes" xml:space="preserve">
          <source>NullStore::forget()</source>
          <target state="translated">NullStore::forget()</target>
        </trans-unit>
        <trans-unit id="66e0577943f7032dd79de1c35bc30f4760c64359" translate="yes" xml:space="preserve">
          <source>NullStore::get()</source>
          <target state="translated">NullStore::get()</target>
        </trans-unit>
        <trans-unit id="2711b35613e02a64d201734a29da0b5284e9a282" translate="yes" xml:space="preserve">
          <source>NullStore::getPrefix()</source>
          <target state="translated">NullStore::getPrefix()</target>
        </trans-unit>
        <trans-unit id="f62f17f145e50a1495f7a114683089b9b50f1364" translate="yes" xml:space="preserve">
          <source>NullStore::increment()</source>
          <target state="translated">NullStore::increment()</target>
        </trans-unit>
        <trans-unit id="1f92ef0d847dd1fa1d800bf80c2d65dd33cab4f8" translate="yes" xml:space="preserve">
          <source>NullStore::lock()</source>
          <target state="translated">NullStore::lock()</target>
        </trans-unit>
        <trans-unit id="e4eae38c54fc9cc0c369b3fd3f7d414b24c60cba" translate="yes" xml:space="preserve">
          <source>NullStore::put()</source>
          <target state="translated">NullStore::put()</target>
        </trans-unit>
        <trans-unit id="0142f542eed714c05da9cbd2f73d87e684e44ca9" translate="yes" xml:space="preserve">
          <source>NullStore::restoreLock()</source>
          <target state="translated">NullStore::restoreLock()</target>
        </trans-unit>
        <trans-unit id="01535058ea1f775781f996604ad314a28dfd5471" translate="yes" xml:space="preserve">
          <source>Number of records that will be shown in the console in case of failure.</source>
          <target state="translated">障害発生時にコンソールに表示されるレコード数。</target>
        </trans-unit>
        <trans-unit id="5d4b07238ebf381ce91b676b62f22d6f1be22e6c" translate="yes" xml:space="preserve">
          <source>Objects that implement the &lt;code&gt;Castable&lt;/code&gt; interface must define a &lt;code&gt;castUsing&lt;/code&gt; method that returns the class name of the custom caster class that is responsible for casting to and from the &lt;code&gt;Castable&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;Castable&lt;/code&gt; インターフェースを実装するオブジェクトは、 &lt;code&gt;Castable&lt;/code&gt; クラスとの間のキャストを担当するカスタムキャスタークラスのクラス名を返す &lt;code&gt;castUsing&lt;/code&gt; メソッドを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="e0d49e6c2529a89add2a79cedd5038fb6fb7fa17" translate="yes" xml:space="preserve">
          <source>ObserverMakeCommand</source>
          <target state="translated">ObserverMakeCommand</target>
        </trans-unit>
        <trans-unit id="7c9fc9a292f8cba34d084f6ac2a8cd045f470f80" translate="yes" xml:space="preserve">
          <source>ObserverMakeCommand (Foundation)</source>
          <target state="translated">ObserverMakeCommand (Foundation)</target>
        </trans-unit>
        <trans-unit id="a2fdca0ca9585d254e1d4c8654f2dfe391aece56" translate="yes" xml:space="preserve">
          <source>ObserverMakeCommand::buildClass()</source>
          <target state="translated">ObserverMakeCommand::buildClass()</target>
        </trans-unit>
        <trans-unit id="f7a9895cb3d638adb8543169f6f2bbf3e7549d6b" translate="yes" xml:space="preserve">
          <source>ObserverMakeCommand::getDefaultNamespace()</source>
          <target state="translated">ObserverMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="5a56f7ee59af8f3d2aaa141abd3fc88117a45638" translate="yes" xml:space="preserve">
          <source>ObserverMakeCommand::getOptions()</source>
          <target state="translated">ObserverMakeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="7bbd4f74a05dd6e924b0d4334ab13d5995c496af" translate="yes" xml:space="preserve">
          <source>ObserverMakeCommand::getStub()</source>
          <target state="translated">ObserverMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="d769826e237f44742c5caa3ed7c947f3fb7edfda" translate="yes" xml:space="preserve">
          <source>ObserverMakeCommand::parseModel()</source>
          <target state="translated">ObserverMakeCommand::parseModel()</target>
        </trans-unit>
        <trans-unit id="c54f3297b5d8e99ab79dd05f3cc00a5ccebce1c9" translate="yes" xml:space="preserve">
          <source>ObserverMakeCommand::replaceModel()</source>
          <target state="translated">ObserverMakeCommand::replaceModel()</target>
        </trans-unit>
        <trans-unit id="297b0fade1ee2817bab32a0af655a38f891e3582" translate="yes" xml:space="preserve">
          <source>ObserverMakeCommand::resolveStubPath()</source>
          <target state="translated">ObserverMakeCommand::resolveStubPath()</target>
        </trans-unit>
        <trans-unit id="0618a214d16e39be75c6315a11d086a7dcbea1b6" translate="yes" xml:space="preserve">
          <source>Observers</source>
          <target state="translated">Observers</target>
        </trans-unit>
        <trans-unit id="b5743b1687ff2151372227f648253157529bb4b7" translate="yes" xml:space="preserve">
          <source>Obtaining A Cache Instance</source>
          <target state="translated">キャッシュ インスタンスの取得</target>
        </trans-unit>
        <trans-unit id="7303dbe1bb579f922fc898ab30ad4434d6a9c934" translate="yes" xml:space="preserve">
          <source>Obtaining Disk Instances</source>
          <target state="translated">ディスクインスタンスの取得</target>
        </trans-unit>
        <trans-unit id="b9c35abe11f11ed1abe4cd6fb4a244c710b504d4" translate="yes" xml:space="preserve">
          <source>Occasionally you may have a class that receives an array of typed objects using a variadic constructor argument:</source>
          <target state="translated">場合によっては、可変コンストラクタの引数を使用して型付きオブジェクトの配列を受け取るクラスがあるかもしれません。</target>
        </trans-unit>
        <trans-unit id="e3f2e75b5b62761bb5e838b9d443dcc91a49fc69" translate="yes" xml:space="preserve">
          <source>Occasionally you may need to specify a route parameter, but make the presence of that route parameter optional. You may do so by placing a &lt;code&gt;?&lt;/code&gt; mark after the parameter name. Make sure to give the route's corresponding variable a default value:</source>
          <target state="translated">場合によっては、ルートパラメータを指定する必要がありますが、そのルートパラメータの存在をオプションにします。あなたは置くことによってそれを行うことができますか &lt;code&gt;?&lt;/code&gt; パラメータ名の後にマークします。ルートの対応する変数にデフォルト値を指定してください：</target>
        </trans-unit>
        <trans-unit id="b0ba6e21a668d8aa69ae17f092060e09889f4bc5" translate="yes" xml:space="preserve">
          <source>Occasionally, when casting models to an array or JSON, you may wish to add attributes that do not have a corresponding column in your database. To do so, first define an &lt;a href=&quot;eloquent-mutators&quot;&gt;accessor&lt;/a&gt; for the value:</source>
          <target state="translated">場合によっては、モデルを配列またはJSONにキャストするときに、データベースに対応する列がない属性を追加することができます。そのためには、まず値の&lt;a href=&quot;eloquent-mutators&quot;&gt;アクセサー&lt;/a&gt;を定義します。</target>
        </trans-unit>
        <trans-unit id="ddbb47031d5ca7b687b657890827330609642040" translate="yes" xml:space="preserve">
          <source>Occasionally, you may need to resolve all of a certain &quot;category&quot; of binding. For example, perhaps you are building a report aggregator that receives an array of many different &lt;code&gt;Report&lt;/code&gt; interface implementations. After registering the &lt;code&gt;Report&lt;/code&gt; implementations, you can assign them a tag using the &lt;code&gt;tag&lt;/code&gt; method:</source>
          <target state="translated">場合によっては、バインディングの特定の「カテゴリ」をすべて解決する必要があります。たとえば、多くの異なる &lt;code&gt;Report&lt;/code&gt; インターフェース実装の配列を受け取るレポートアグリゲーターを構築しているとします。 &lt;code&gt;Report&lt;/code&gt; 実装を登録したら、 &lt;code&gt;tag&lt;/code&gt; メソッドを使用してタグを割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="d9083141920b923e07683782c13efde00c348f6c" translate="yes" xml:space="preserve">
          <source>Occasionally, you may need to send a mailable to a list of recipients by iterating over an array of recipients / email addresses. Since the &lt;code&gt;to&lt;/code&gt; method appends email addresses to the mailable's list of recipients, you should always re-create the mailable instance for each recipient:</source>
          <target state="translated">場合によっては、受信者/電子メールアドレスの配列を反復処理して、受信者のリストにメール可能ファイルを送信する必要があります。以来 &lt;code&gt;to&lt;/code&gt; 方法は、受信者のmailableのリストに電子メールアドレスを追加し、あなたは常に受信者ごとにmailableインスタンスを再作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="16d52f07e76161c773a3f561c018b83204731e49" translate="yes" xml:space="preserve">
          <source>Occasionally, you may need to set a custom connection for database queries made by the Validator. As seen above, setting &lt;code&gt;unique:users&lt;/code&gt; as a validation rule will use the default database connection to query the database. To override this, specify the connection and the table name using &quot;dot&quot; syntax:</source>
          <target state="translated">場合によっては、Validatorによるデータベースクエリのカスタム接続を設定する必要があります。上記のように、入力規則として &lt;code&gt;unique:users&lt;/code&gt; を設定すると、デフォルトのデータベース接続を使用してデータベースにクエリが実行されます。これをオーバーライドするには、「ドット」構文を使用して接続とテーブル名を指定します。</target>
        </trans-unit>
        <trans-unit id="b25f24679bdcd02726083d16350ce67dc3338169" translate="yes" xml:space="preserve">
          <source>Occasionally, you may need to share a piece of data with all views that are rendered by your application. You may do so using the view facade's &lt;code&gt;share&lt;/code&gt; method. Typically, you should place calls to &lt;code&gt;share&lt;/code&gt; within a service provider's &lt;code&gt;boot&lt;/code&gt; method. You are free to add them to the &lt;code&gt;AppServiceProvider&lt;/code&gt; or generate a separate service provider to house them:</source>
          <target state="translated">場合によっては、アプリケーションによってレンダリングされるすべてのビューとデータの一部を共有する必要があります。ビューファサードの &lt;code&gt;share&lt;/code&gt; メソッドを使用してこれを行うことができます。通常、サービスプロバイダーの &lt;code&gt;boot&lt;/code&gt; メソッド内で &lt;code&gt;share&lt;/code&gt; 呼び出す必要があります。それらを &lt;code&gt;AppServiceProvider&lt;/code&gt; に自由に追加するか、それらを格納する別のサービスプロバイダーを生成できます。</target>
        </trans-unit>
        <trans-unit id="7254fc2b3a6940766e20ec8518363ade4a826451" translate="yes" xml:space="preserve">
          <source>Occasionally, you may need to specify a specific database connection to be used for the &lt;code&gt;exists&lt;/code&gt; query. You can accomplish this by prepending the connection name to the table name using &quot;dot&quot; syntax:</source>
          <target state="translated">場合によっては、 &lt;code&gt;exists&lt;/code&gt; クエリに使用する特定のデータベース接続を指定する必要があります。これを行うには、「ドット」構文を使用して、接続名をテーブル名の前に付加します。</target>
        </trans-unit>
        <trans-unit id="a02eb6e4daa6a7f8f630b296d26c4a2a3f7df18b" translate="yes" xml:space="preserve">
          <source>Occasionally, you may need to write a custom cast that only transforms values that are being set on the model and does not perform any operations when attributes are being retrieved from the model. A classic example of an inbound only cast is a &quot;hashing&quot; cast. Inbound only custom casts should implement the &lt;code&gt;CastsInboundAttributes&lt;/code&gt; interface, which only requires a &lt;code&gt;set&lt;/code&gt; method to be defined.</source>
          <target state="translated">場合によっては、モデルに設定されている値のみを変換し、モデルから属性を取得するときに操作を実行しないカスタムキャストを作成する必要があります。インバウンドのみのキャストの典型的な例は、「ハッシュ」キャストです。インバウンドのみのカスタムキャストは、 &lt;code&gt;CastsInboundAttributes&lt;/code&gt; インターフェイスを実装する必要があります。これには、 &lt;code&gt;set&lt;/code&gt; メソッドを定義するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="a3e2bba2f320168c440329557292b4282ff31fb7" translate="yes" xml:space="preserve">
          <source>Occasionally, you may wish to create a Stripe customer without beginning a subscription. You may accomplish this using the &lt;code&gt;createAsStripeCustomer&lt;/code&gt; method:</source>
          <target state="translated">場合によっては、サブスクリプションを開始せずにStripeの顧客を作成したいことがあります。これは、 &lt;code&gt;createAsStripeCustomer&lt;/code&gt; メソッドを使用して実行できます。</target>
        </trans-unit>
        <trans-unit id="a6a0f871db5fee9d80a37c5a6994b6acc4c8e9d1" translate="yes" xml:space="preserve">
          <source>Occasionally, you may wish to update the Stripe customer directly with additional information. You may accomplish this using the &lt;code&gt;updateStripeCustomer&lt;/code&gt; method:</source>
          <target state="translated">場合によっては、Stripeの顧客を追加情報で直接更新したいことがあります。これは、 &lt;code&gt;updateStripeCustomer&lt;/code&gt; メソッドを使用して実行できます。</target>
        </trans-unit>
        <trans-unit id="88971d39e46977f1e10bf74c933949cc6c887e53" translate="yes" xml:space="preserve">
          <source>Occasionally, you may wish to wait for a given selector and then interact with the element matching the selector. For example, you may wish to wait until a modal window is available and then press the &quot;OK&quot; button within the modal. The &lt;code&gt;whenAvailable&lt;/code&gt; method may be used in this case. All element operations performed within the given callback will be scoped to the original selector:</source>
          <target state="translated">場合によっては、特定のセレクターを待ってから、セレクターに一致する要素とやり取りしたいことがあります。たとえば、モーダルウィンドウが利用可能になるまで待ってから、モーダル内の[OK]ボタンを押します。 &lt;code&gt;whenAvailable&lt;/code&gt; 方法は、この場合に使用することができます。指定されたコールバック内で実行されるすべての要素操作は、元のセレクターにスコープされます：</target>
        </trans-unit>
        <trans-unit id="d3bc7a530f128d4f3ba96bac9c2b4696ba1d549b" translate="yes" xml:space="preserve">
          <source>Octal representation of the cache file permissions.</source>
          <target state="translated">キャッシュファイルのパーミッションを8進数で表現します。</target>
        </trans-unit>
        <trans-unit id="4209aa2406c1319a537906f0d1ca856b354e1e64" translate="yes" xml:space="preserve">
          <source>October 5th, 2021</source>
          <target state="translated">2021年10月5日</target>
        </trans-unit>
        <trans-unit id="82ac49f4d47ae7f6d5d6d52f0c318f2273d89321" translate="yes" xml:space="preserve">
          <source>October 6th, 2020</source>
          <target state="translated">2020年10月6日</target>
        </trans-unit>
        <trans-unit id="a46fbdda26b20e1ed7963b891b4d61ca71e4ca46" translate="yes" xml:space="preserve">
          <source>OctoberCMS</source>
          <target state="translated">OctoberCMS</target>
        </trans-unit>
        <trans-unit id="05b32e5708282574fb7e4e6ca578c034c73c9f9c" translate="yes" xml:space="preserve">
          <source>Of course if you are using the &lt;a href=&quot;blade&quot;&gt;Blade templating engine&lt;/a&gt;, you may use the &lt;code&gt;{{ }}&lt;/code&gt; syntax to echo the translation string or use the &lt;code&gt;@lang&lt;/code&gt; directive:</source>
          <target state="translated">もちろん、&lt;a href=&quot;blade&quot;&gt;Bladeテンプレートエンジンを&lt;/a&gt;使用している場合は、 &lt;code&gt;{{ }}&lt;/code&gt; 構文を使用して翻訳文字列をエコーするか、 &lt;code&gt;@lang&lt;/code&gt; ディレクティブを使用できます。</target>
        </trans-unit>
        <trans-unit id="7a398c896343f9950dcfac920deb412efa8f8f1f" translate="yes" xml:space="preserve">
          <source>Of course, additional middleware can be written to perform a variety of tasks besides authentication. A CORS middleware might be responsible for adding the proper headers to all responses leaving your application. A logging middleware might log all incoming requests to your application.</source>
          <target state="translated">もちろん、認証以外にもさまざまなタスクを実行するために追加のミドルウェアを書くこともできます。CORS ミドルウェアは、アプリケーションからのすべての応答に適切なヘッダを追加する責任があるかもしれません。ロギングミドルウェアは、アプリケーションに入ってくるすべてのリクエストを記録するかもしれません。</target>
        </trans-unit>
        <trans-unit id="8595d84eb73c13e464745180399f4bd0fe341a70" translate="yes" xml:space="preserve">
          <source>Of course, all collections also serve as iterators, allowing you to loop over them as if they were simple PHP arrays:</source>
          <target state="translated">もちろん、すべてのコレクションはイテレータとしても機能するので、あたかも単純な PHP の配列であるかのようにそれらをループさせることができます。</target>
        </trans-unit>
        <trans-unit id="657296458f48b8a24405870f90ea5b211dfc5a04" translate="yes" xml:space="preserve">
          <source>Of course, as mentioned above, you may call any of the Redis commands on the &lt;code&gt;Redis&lt;/code&gt; facade. Laravel uses magic methods to pass the commands to the Redis server, so pass the arguments the Redis command expects:</source>
          <target state="translated">もちろん、上記のように、 &lt;code&gt;Redis&lt;/code&gt; ファサードで任意のRedisコマンドを呼び出すことができます。Laravelはマジックメソッドを使用してコマンドをRedisサーバーに渡すため、Redisコマンドが期待する引数を渡します。</target>
        </trans-unit>
        <trans-unit id="42f67b48728d6ced25e0fa32488356d9118b14a2" translate="yes" xml:space="preserve">
          <source>Of course, don't forget to examine any 3rd party packages consumed by your application and verify you are using the proper version for Laravel 5.7 support.</source>
          <target state="translated">もちろん、アプリケーションによって消費されるサードパーティ製のパッケージを検査し、Laravel 5.7のサポートのための適切なバージョンを使用していることを確認することを忘れないでください。</target>
        </trans-unit>
        <trans-unit id="dab856f1cc161929d5e9185a610b6c83178caad6" translate="yes" xml:space="preserve">
          <source>Of course, if you are interested in learning more about writing Vue components, you should read the &lt;a href=&quot;https://vuejs.org/guide/&quot;&gt;Vue documentation&lt;/a&gt;, which provides a thorough, easy-to-read overview of the entire Vue framework.</source>
          <target state="translated">もちろん、Vueコンポーネントの記述について詳しく知りたい場合は、&lt;a href=&quot;https://vuejs.org/guide/&quot;&gt;Vueのドキュメント&lt;/a&gt;全体を読んでください。Vueフレームワーク全体の完全で読みやすい概要が提供されています。</target>
        </trans-unit>
        <trans-unit id="6f954f1181842d2d84acf0cce73754c424ad9794" translate="yes" xml:space="preserve">
          <source>Of course, if you are using &lt;a href=&quot;controllers&quot;&gt;controllers&lt;/a&gt;, you may call the &lt;code&gt;middleware&lt;/code&gt; method from the controller's constructor instead of attaching it in the route definition directly:</source>
          <target state="translated">もちろん、&lt;a href=&quot;controllers&quot;&gt;コントローラ&lt;/a&gt;を使用している場合は、 &lt;code&gt;middleware&lt;/code&gt; メソッドをルート定義に直接アタッチする代わりに、コントローラのコンストラクタから呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="1a4de826596f0b0934c572219cb8eeef4512fe59" translate="yes" xml:space="preserve">
          <source>Of course, if you attempt to &lt;code&gt;@include&lt;/code&gt; a view which does not exist, Laravel will throw an error. If you would like to include a view that may or may not be present, you should use the &lt;code&gt;@includeIf&lt;/code&gt; directive:</source>
          <target state="translated">もちろん、存在しないビューを &lt;code&gt;@include&lt;/code&gt; しようとすると、Laravelはエラーをスローします。存在する場合と存在しない場合があるビューを含めたい場合は、 &lt;code&gt;@includeIf&lt;/code&gt; ディレクティブを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="43cafc17449545bdaaa74ed145390a2f076b60cd" translate="yes" xml:space="preserve">
          <source>Of course, if you do not need to pass a custom HTTP status code or custom headers, you should use the global &lt;code&gt;view&lt;/code&gt; helper function.</source>
          <target state="translated">もちろん、カスタムHTTPステータスコードやカスタムヘッダーを渡す必要がない場合は、グローバル &lt;code&gt;view&lt;/code&gt; ヘルパー関数を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="fac258b5c8758d38ec977b7d09f13175e87a4c87" translate="yes" xml:space="preserve">
          <source>Of course, implicit binding is also possible when using controller methods. Again, note the &lt;code&gt;{user}&lt;/code&gt; URI segment matches the &lt;code&gt;$user&lt;/code&gt; variable in the controller which contains an &lt;code&gt;App\Models\User&lt;/code&gt; type-hint:</source>
          <target state="translated">もちろん、コントローラーメソッドを使用する場合は暗黙的なバインディングも可能です。繰り返しになり &lt;code&gt;{user}&lt;/code&gt; 、{user} URIセグメントは、 &lt;code&gt;App\Models\User&lt;/code&gt; タイプヒントを含むコントローラーの &lt;code&gt;$user&lt;/code&gt; 変数と一致することに注意してください。</target>
        </trans-unit>
        <trans-unit id="68c9019dc6dc04214ab0c3cffbcb7e68bbca4c3f" translate="yes" xml:space="preserve">
          <source>Of course, in addition to inserting records into the database, the query builder can also update existing records using the &lt;code&gt;update&lt;/code&gt; method. The &lt;code&gt;update&lt;/code&gt; method, like the &lt;code&gt;insert&lt;/code&gt; method, accepts an array of column and value pairs containing the columns to be updated. You may constrain the &lt;code&gt;update&lt;/code&gt; query using &lt;code&gt;where&lt;/code&gt; clauses:</source>
          <target state="translated">もちろん、データベースにレコードを挿入するだけでなく、クエリビルダーは &lt;code&gt;update&lt;/code&gt; メソッドを使用して既存のレコードを更新することもできます。 &lt;code&gt;update&lt;/code&gt; 方法は、同様に &lt;code&gt;insert&lt;/code&gt; 方法、更新されるカラムを含むカラムと値のペアの配列を受け付けます。 &lt;code&gt;where&lt;/code&gt; 句を使用して &lt;code&gt;update&lt;/code&gt; クエリを制約できます。</target>
        </trans-unit>
        <trans-unit id="d8cda4d1c2a4100e586a5f9a465896ebbcd27215" translate="yes" xml:space="preserve">
          <source>Of course, in addition to retrieving all of the records for a given table, you may also retrieve single records using &lt;code&gt;find&lt;/code&gt; or &lt;code&gt;first&lt;/code&gt;. Instead of returning a collection of models, these methods return a single model instance:</source>
          <target state="translated">もちろん、特定のテーブルのすべてのレコードを取得するだけでなく、 &lt;code&gt;find&lt;/code&gt; または &lt;code&gt;first&lt;/code&gt; を使用して単一のレコードを取得することもできます。モデルのコレクションを返す代わりに、これらのメソッドは単一のモデルインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="6cc0ed69cad94e92eeb82caef7329ffd0c89dde7" translate="yes" xml:space="preserve">
          <source>Of course, it is common when using &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, and &lt;code&gt;PATCH&lt;/code&gt; to send additional data with your request. So, these methods accept an array of data as their second argument. By default, data will be sent using the &lt;code&gt;application/json&lt;/code&gt; content type:</source>
          <target state="translated">もちろん、 &lt;code&gt;POST&lt;/code&gt; 、 &lt;code&gt;PUT&lt;/code&gt; 、および &lt;code&gt;PATCH&lt;/code&gt; を使用して、リクエストとともに追加のデータを送信する場合は一般的です。したがって、これらのメソッドは2番目の引数としてデータの配列を受け入れます。デフォルトでは、データは &lt;code&gt;application/json&lt;/code&gt; コンテンツタイプを使用して送信されます。</target>
        </trans-unit>
        <trans-unit id="2cea78c7fcbe6d53e9ebd5b6ef009e549366473b" translate="yes" xml:space="preserve">
          <source>Of course, like all other relationship types, you may call the &lt;code&gt;roles&lt;/code&gt; method to continue chaining query constraints onto the relationship:</source>
          <target state="translated">もちろん、他のすべての関係タイプと同様に、 &lt;code&gt;roles&lt;/code&gt; メソッドを呼び出して、クエリ制約を関係にチェーンし続けることができます。</target>
        </trans-unit>
        <trans-unit id="216877635f9af609cdbb01d217cc0a87ff940495" translate="yes" xml:space="preserve">
          <source>Of course, manually creating the files for each event and listener is cumbersome. Instead, add listeners and events to your &lt;code&gt;EventServiceProvider&lt;/code&gt; and use the &lt;code&gt;event:generate&lt;/code&gt; command. This command will generate any events or listeners that are listed in your &lt;code&gt;EventServiceProvider&lt;/code&gt;. Events and listeners that already exist will be left untouched:</source>
          <target state="translated">もちろん、各イベントとリスナーのファイルを手動で作成するのは面倒です。代わりに、リスナーとイベントを &lt;code&gt;EventServiceProvider&lt;/code&gt; に追加し、 &lt;code&gt;event:generate&lt;/code&gt; コマンドを使用します。このコマンドは、 &lt;code&gt;EventServiceProvider&lt;/code&gt; にリストされているイベントまたはリスナーを生成します。すでに存在するイベントとリスナーは変更されません。</target>
        </trans-unit>
        <trans-unit id="4a14f7ce80de21741cc42c5d875c74aba5a3e0aa" translate="yes" xml:space="preserve">
          <source>Of course, manually creating the files for each event and listener is cumbersome. Instead, add listeners and events to your &lt;code&gt;EventServiceProvider&lt;/code&gt; and use the &lt;code&gt;event:generate&lt;/code&gt; command. This command will generate any events or listeners that are listed in your &lt;code&gt;EventServiceProvider&lt;/code&gt;. Of course, events and listeners that already exist will be left untouched:</source>
          <target state="translated">もちろん、各イベントとリスナーのファイルを手動で作成するのは面倒です。代わりに、リスナーとイベントを &lt;code&gt;EventServiceProvider&lt;/code&gt; に追加し、 &lt;code&gt;event:generate&lt;/code&gt; コマンドを使用します。このコマンドは、 &lt;code&gt;EventServiceProvider&lt;/code&gt; にリストされているイベントまたはリスナーを生成します。もちろん、すでに存在するイベントとリスナーはそのまま残ります。</target>
        </trans-unit>
        <trans-unit id="29fe57041bc97fd62dcb125cd2341a819b94754e" translate="yes" xml:space="preserve">
          <source>Of course, manually specifying the attributes for each model seed is cumbersome. Instead, you can use &lt;a href=&quot;database-testing#writing-factories&quot;&gt;model factories&lt;/a&gt; to conveniently generate large amounts of database records. First, review the &lt;a href=&quot;database-testing#writing-factories&quot;&gt;model factory documentation&lt;/a&gt; to learn how to define your factories.</source>
          <target state="translated">もちろん、各モデルシードの属性を手動で指定するのは面倒です。代わりに、&lt;a href=&quot;database-testing#writing-factories&quot;&gt;モデルファクトリ&lt;/a&gt;を使用して、大量のデータベースレコードを便利に生成できます。まず、&lt;a href=&quot;database-testing#writing-factories&quot;&gt;モデルファクトリのドキュメント&lt;/a&gt;を確認して、ファクトリを定義する方法を学習します。</target>
        </trans-unit>
        <trans-unit id="97e11561c1cc37c3a11dd43448ff941353d86ad1" translate="yes" xml:space="preserve">
          <source>Of course, manually specifying the attributes for each model seed is cumbersome. Instead, you can use &lt;a href=&quot;database-testing#writing-factories&quot;&gt;model factories&lt;/a&gt; to conveniently generate large amounts of database records. First, review the &lt;a href=&quot;database-testing#writing-factories&quot;&gt;model factory documentation&lt;/a&gt; to learn how to define your factories. Once you have defined your factories, you may use the &lt;code&gt;factory&lt;/code&gt; helper function to insert records into your database.</source>
          <target state="translated">もちろん、各モデルシードの属性を手動で指定するのは面倒です。代わりに、&lt;a href=&quot;database-testing#writing-factories&quot;&gt;モデルファクトリ&lt;/a&gt;を使用して、大量のデータベースレコードを簡単に生成できます。最初に、&lt;a href=&quot;database-testing#writing-factories&quot;&gt;モデルファクトリのドキュメント&lt;/a&gt;を確認して、ファクトリを定義する方法を学習します。ファクトリを定義したら、 &lt;code&gt;factory&lt;/code&gt; ヘルパー関数を使用してデータベースにレコードを挿入できます。</target>
        </trans-unit>
        <trans-unit id="be7b59b318765825938903729a0bc32872a3e956" translate="yes" xml:space="preserve">
          <source>Of course, more robust local development options are available via &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt; and &lt;a href=&quot;valet&quot;&gt;Valet&lt;/a&gt;.</source>
          <target state="translated">もちろん、より堅牢なローカル開発オプションが&lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt;と&lt;a href=&quot;valet&quot;&gt;Valetを&lt;/a&gt;介して利用可能です。</target>
        </trans-unit>
        <trans-unit id="3eeab0c5f77276007c04a25e6eea40eb24d69ffd" translate="yes" xml:space="preserve">
          <source>Of course, once a file has been stored and the symbolic link has been created, you can create a URL to the files using the &lt;code&gt;asset&lt;/code&gt; helper:</source>
          <target state="translated">もちろん、ファイルが保存されてシンボリックリンクが作成されたら、 &lt;code&gt;asset&lt;/code&gt; ヘルパーを使用してファイルへのURLを作成できます。</target>
        </trans-unit>
        <trans-unit id="57461b0928f4f6fdbc85f8c8dd3ee597cf465c30" translate="yes" xml:space="preserve">
          <source>Of course, one common use of the session is for maintaining state for the authenticated user. The &lt;code&gt;actingAs&lt;/code&gt; helper method provides a simple way to authenticate a given user as the current user. For example, we may use a &lt;a href=&quot;database-testing#writing-factories&quot;&gt;model factory&lt;/a&gt; to generate and authenticate a user:</source>
          <target state="translated">もちろん、セッションの一般的な用途の1つは、認証されたユーザーの状態を維持することです。 &lt;code&gt;actingAs&lt;/code&gt; のヘルパーメソッドは、現在のユーザーとして指定したユーザを認証するための簡単な方法を提供します。たとえば、&lt;a href=&quot;database-testing#writing-factories&quot;&gt;モデルファクトリ&lt;/a&gt;を使用してユーザーを生成および認証する場合があります。</target>
        </trans-unit>
        <trans-unit id="231232c876b7a08c5574fa9d9cd8a5693f39ed69" translate="yes" xml:space="preserve">
          <source>Of course, since all relationships also serve as query builders, you can add further constraints to which comments are retrieved by calling the &lt;code&gt;comments&lt;/code&gt; method and continuing to chain conditions onto the query:</source>
          <target state="translated">もちろん、すべての関係がクエリビルダーとしても機能するため、 &lt;code&gt;comments&lt;/code&gt; メソッドを呼び出してクエリに条件をチェーンし続けることで、コメントを取得するための制約をさらに追加できます。</target>
        </trans-unit>
        <trans-unit id="7624be75c2bca6d28c84605c37f00aa528e9b87b" translate="yes" xml:space="preserve">
          <source>Of course, sometimes it may be necessary to remove a role from a user. To remove a many-to-many relationship record, use the &lt;code&gt;detach&lt;/code&gt; method. The &lt;code&gt;detach&lt;/code&gt; method will remove the appropriate record out of the intermediate table; however, both models will remain in the database:</source>
          <target state="translated">もちろん、ユーザーからロールを削除する必要がある場合もあります。多対多の関係レコードを削除するには、 &lt;code&gt;detach&lt;/code&gt; メソッドを使用します。 &lt;code&gt;detach&lt;/code&gt; 方法は、中間テーブルから該当するレコードを削除します。ただし、両方のモデルはデータベースに残ります。</target>
        </trans-unit>
        <trans-unit id="68386dc5cd3fb77e5be221ec5ffeb2248af772e0" translate="yes" xml:space="preserve">
          <source>Of course, sometimes you will need to capture segments of the URI within your route. For example, you may need to capture a user's ID from the URL. You may do so by defining route parameters:</source>
          <target state="translated">もちろん、ルート内のURIのセグメントをキャプチャする必要がある場合もあります。たとえば、URL からユーザーの ID をキャプチャする必要があるかもしれません。これはルートパラメータを定義することで行うことができます。</target>
        </trans-unit>
        <trans-unit id="5cb9872508b17557de071e3a9b643353dc4c2822" translate="yes" xml:space="preserve">
          <source>Of course, the &lt;code&gt;GET&lt;/code&gt; route will display a form for the user to create a new blog post, while the &lt;code&gt;POST&lt;/code&gt; route will store the new blog post in the database.</source>
          <target state="translated">もちろん、 &lt;code&gt;GET&lt;/code&gt; ルートはユーザーが新しいブログ投稿を作成するためのフォームを表示しますが、 &lt;code&gt;POST&lt;/code&gt; ルートは新しいブログ投稿をデータベースに保存します。</target>
        </trans-unit>
        <trans-unit id="74bc722b21ad82624a5f5253405c6b00733092ec" translate="yes" xml:space="preserve">
          <source>Of course, the &lt;code&gt;assertDatabaseHas&lt;/code&gt; method and other helpers like it are for convenience. You are free to use any of PHPUnit's built-in assertion methods to supplement your tests.</source>
          <target state="translated">もちろん、 &lt;code&gt;assertDatabaseHas&lt;/code&gt; メソッドとそれのような他のヘルパーは便宜上のものです。テストを補足するために、PHPUnitの組み込みアサーションメソッドを自由に使用できます。</target>
        </trans-unit>
        <trans-unit id="bb6260fbd104fbccb645c57d6d2f0165625f6e85" translate="yes" xml:space="preserve">
          <source>Of course, the magic &lt;code&gt;has&lt;/code&gt; method may also be used to create polymorphic &quot;many to many&quot; relationships:</source>
          <target state="translated">もちろん、magic &lt;code&gt;has&lt;/code&gt; メソッドを使用して、多形の「多対多」の関係を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="a8e0f373fd21e4c0461aa0e5bd80e3f690524ec4" translate="yes" xml:space="preserve">
          <source>Of course, the schema builder contains a variety of column types that you may specify when building your tables:</source>
          <target state="translated">もちろん、スキーマビルダーには、テーブルを構築する際に指定できるさまざまなカラムタイプが含まれています。</target>
        </trans-unit>
        <trans-unit id="5660a2085a2f4745c19551239d710c1ae3b82ce1" translate="yes" xml:space="preserve">
          <source>Of course, there are a variety of schedules you may assign to your task:</source>
          <target state="translated">もちろん、タスクに割り当てるスケジュールは様々です。</target>
        </trans-unit>
        <trans-unit id="6c115b5221fb5b416223cc01520f21e43b971387" translate="yes" xml:space="preserve">
          <source>Of course, there are different types of packages. Some packages are stand-alone, meaning they work with any PHP framework. Carbon and Behat are examples of stand-alone packages. Any of these packages may be used with Laravel by requesting them in your &lt;code&gt;composer.json&lt;/code&gt; file.</source>
          <target state="translated">もちろん、パッケージにはさまざまなタイプがあります。一部のパッケージはスタンドアロンです。つまり、任意のPHPフレームワークで動作します。CarbonとBehatは、スタンドアロンパッケージの例です。これらのパッケージは、 &lt;code&gt;composer.json&lt;/code&gt; ファイルでリクエストすることにより、Laravelで使用できます。</target>
        </trans-unit>
        <trans-unit id="44f586cabc03716eeb5388db2a27d1a349030207" translate="yes" xml:space="preserve">
          <source>Of course, this does not allow any addition of meta data that may need to be returned with the collection. If you would like to customize the resource collection response, you may create a dedicated resource to represent the collection:</source>
          <target state="translated">もちろん、これではコレクションと一緒に返す必要のあるメタデータを追加することはできません。リソースコレクションのレスポンスをカスタマイズしたい場合は、コレクションを表す専用のリソースを作成することができます。</target>
        </trans-unit>
        <trans-unit id="7c3e1c7d018689320f2fdcbf285205a1d66b6ed7" translate="yes" xml:space="preserve">
          <source>Of course, views may also be nested within sub-directories of the &lt;code&gt;resources/views&lt;/code&gt; directory. &quot;Dot&quot; notation may be used to reference nested views. For example, if your view is stored at &lt;code&gt;resources/views/admin/profile.blade.php&lt;/code&gt;, you may reference it like so:</source>
          <target state="translated">もちろん、ビューは &lt;code&gt;resources/views&lt;/code&gt; ディレクトリのサブディレクトリ内にネストすることもできます。「ドット」表記は、ネストされたビューを参照するために使用できます。たとえば、ビューが &lt;code&gt;resources/views/admin/profile.blade.php&lt;/code&gt; に保存されている場合、次のように参照できます。</target>
        </trans-unit>
        <trans-unit id="c1bce5a4e333155c621d9427afdd7d39eb6a43a7" translate="yes" xml:space="preserve">
          <source>Of course, we need to define a route to actually handle the password reset form submission. This route will be responsible for validating the incoming request and updating the user's password in the database:</source>
          <target state="translated">もちろん、パスワードリセットフォームの送信を実際に処理するためのルートを定義する必要があります。このルートは入力されたリクエストを検証し、データベース内のユーザーのパスワードを更新します。</target>
        </trans-unit>
        <trans-unit id="3eb8d4a7d1334cda06eeb206aaa31eb2a1cfca45" translate="yes" xml:space="preserve">
          <source>Of course, when creating the table, you may use any of the schema builder's &lt;a href=&quot;#creating-columns&quot;&gt;column methods&lt;/a&gt; to define the table's columns.</source>
          <target state="translated">もちろん、テーブルを作成するときは、スキーマビルダーの&lt;a href=&quot;#creating-columns&quot;&gt;列メソッド&lt;/a&gt;のいずれかを使用してテーブルの列を定義できます。</target>
        </trans-unit>
        <trans-unit id="19ee490b47b4fd9cfbd53db6c1f0a0acfa47d715" translate="yes" xml:space="preserve">
          <source>Of course, when making a single charge against a customer's payment method we'll only need to use a payment method identifier a single time. Due to Stripe limitations, you may not use the stored default payment method of a customer for single charges. You must allow the customer to enter their payment method details using the Stripe.js library. For example, consider the following form:</source>
          <target state="translated">もちろん、顧客の支払い方法に対して1回のチャージを行う際には、支払い方法の識別子を1回だけ使用する必要があります。Stripeの制限により、単一のチャージに顧客の保存されているデフォルトの支払い方法を使用することはできません。Stripe.jsライブラリを使用して、顧客が支払い方法の詳細を入力できるようにする必要があります。例えば、次のようなフォームを考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="f9efcd23e60f2203a9e8628b8e00de22955a1adc" translate="yes" xml:space="preserve">
          <source>Of course, when using &lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt; or &lt;a href=&quot;valet&quot;&gt;Valet&lt;/a&gt;, pretty URLs will be automatically configured.</source>
          <target state="translated">もちろん、&lt;a href=&quot;homestead&quot;&gt;Homestead&lt;/a&gt;または&lt;a href=&quot;valet&quot;&gt;Valet&lt;/a&gt;を使用する場合、プリティURLは自動的に構成されます。</target>
        </trans-unit>
        <trans-unit id="b5fe114f1bc53cc833eb35929f2da619ff7fdc9b" translate="yes" xml:space="preserve">
          <source>Of course, when using the &lt;code&gt;Gate::authorize&lt;/code&gt; method to throw an &lt;code&gt;AuthorizationException&lt;/code&gt; if the action is not authorized, the error message provided by the authorization response will be propagated to the HTTP response:</source>
          <target state="translated">もちろん、アクションが承認されていない場合に &lt;code&gt;Gate::authorize&lt;/code&gt; メソッドを使用して &lt;code&gt;AuthorizationException&lt;/code&gt; をスローすると、承認応答によって提供されたエラーメッセージがHTTP応答に伝播されます。</target>
        </trans-unit>
        <trans-unit id="bda8444ebc9eb71b3ffafbb03197986c3dea578c" translate="yes" xml:space="preserve">
          <source>Of course, you are not limited to displaying the contents of the variables passed to the view. You may also echo the results of any PHP function. In fact, you can put any PHP code you wish inside of a Blade echo statement:</source>
          <target state="translated">もちろん、ビューに渡された変数の内容を表示することに限定されません。任意の PHP 関数の結果を echo することもできます。実際には、Blade の echo 文の中に任意の PHP コードを記述することができます。</target>
        </trans-unit>
        <trans-unit id="90986e395a4418cff6687c884be5b4f66a0d1a89" translate="yes" xml:space="preserve">
          <source>Of course, you are not limited to just specifying the &quot;to&quot; recipients when sending a message. You are free to set &quot;to&quot;, &quot;cc&quot;, and &quot;bcc&quot; recipients all within a single, chained method call:</source>
          <target state="translated">もちろん、メッセージを送信する際に「to」の受信者を指定するだけに限定されるわけではありません。to&quot;、&quot;cc&quot;、&quot;bcc&quot; の受信者をすべて単一の連鎖したメソッドコール内で自由に設定することができます。</target>
        </trans-unit>
        <trans-unit id="f89f43b269e337cfcaf15c137f96988551bc3666" translate="yes" xml:space="preserve">
          <source>Of course, you are not required to use the authentication controllers included with Laravel. If you choose to remove these controllers, you will need to manage user authentication using the Laravel authentication classes directly. Don't worry, it's a cinch!</source>
          <target state="translated">もちろん、Laravelに付属の認証コントローラを使用する必要はありません。これらのコントローラを削除する場合は、Laravelの認証クラスを直接使用してユーザー認証を管理する必要があります。心配しないでください。</target>
        </trans-unit>
        <trans-unit id="ccb8075e98de436e18d282ff7ef1681a46e04f10" translate="yes" xml:space="preserve">
          <source>Of course, you may &lt;code&gt;delete&lt;/code&gt; the notifications to remove them from the table entirely:</source>
          <target state="translated">もちろん、通知を削除して、テーブルから完全に &lt;code&gt;delete&lt;/code&gt; こともできます。</target>
        </trans-unit>
        <trans-unit id="e9f388e7d7db196723049c658567f415c7ca294e" translate="yes" xml:space="preserve">
          <source>Of course, you may also call this method via the &lt;code&gt;View&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;:</source>
          <target state="translated">もちろん、 &lt;code&gt;View&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサード&lt;/a&gt;からこのメソッドを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="00739379a885caf6a28ddb90424a951de8aab209" translate="yes" xml:space="preserve">
          <source>Of course, you may also loop over the collection like an array:</source>
          <target state="translated">もちろん、配列のようにコレクションをループさせることもできます。</target>
        </trans-unit>
        <trans-unit id="624d8d00b521ef4508a5abaad6667b9568921212" translate="yes" xml:space="preserve">
          <source>Of course, you may also run a delete statement on a set of models. In this example, we will delete all flights that are marked as inactive. Like mass updates, mass deletes will not fire any model events for the models that are deleted:</source>
          <target state="translated">もちろん、モデルのセットに対してdelete文を実行することもできます。この例では、非アクティブとマークされているすべてのフライトを削除します。大量更新と同様に、大量削除では、削除されたモデルのモデル・イベントは発生しません。</target>
        </trans-unit>
        <trans-unit id="0f0712f9ab765f51897b9267c337263024efb8ae" translate="yes" xml:space="preserve">
          <source>Of course, you may also type-hint any &lt;a href=&quot;contracts&quot;&gt;Laravel contract&lt;/a&gt;. If the container can resolve it, you can type-hint it. Depending on your application, injecting your dependencies into your controller may provide better testability.</source>
          <target state="translated">もちろん、&lt;a href=&quot;contracts&quot;&gt;Laravelコントラクトを&lt;/a&gt;タイプヒントで入力することもできます。コンテナがそれを解決できる場合は、タイプヒントできます。アプリケーションによっては、依存関係をコントローラーに注入すると、テスト容易性が向上する場合があります。</target>
        </trans-unit>
        <trans-unit id="b4781cddcbdab5bac5529188422cb090098f7c48" translate="yes" xml:space="preserve">
          <source>Of course, you may also use accessors to return new, computed values from existing attributes:</source>
          <target state="translated">もちろん、アクセサを使用して、既存の属性から計算された新しい値を返すこともできます。</target>
        </trans-unit>
        <trans-unit id="be632a1d9961a35e60f7ffe56d7862fefabf9282" translate="yes" xml:space="preserve">
          <source>Of course, you may also use the &lt;code&gt;putFileAs&lt;/code&gt; method on the &lt;code&gt;Storage&lt;/code&gt; facade, which will perform the same file manipulation as the example above:</source>
          <target state="translated">もちろん、 &lt;code&gt;Storage&lt;/code&gt; ファサードで &lt;code&gt;putFileAs&lt;/code&gt; メソッドを使用することもできます。これにより、上記の例と同じファイル操作が実行されます。</target>
        </trans-unit>
        <trans-unit id="020fe2a41b1448480fe1efc836c6a3e1d4bd5640" translate="yes" xml:space="preserve">
          <source>Of course, you may be wondering if this will cause your outer-most resource to be wrapped in two &lt;code&gt;data&lt;/code&gt; keys. Don't worry, Laravel will never let your resources be accidentally double-wrapped, so you don't have to be concerned about the nesting level of the resource collection you are transforming:</source>
          <target state="translated">もちろん、これによって最も外側のリソースが2つの &lt;code&gt;data&lt;/code&gt; キーにラップされるかどうか疑問に思うかもしれません。心配しないでください。Laravelがリソースを誤って二重にラップすることは決してないので、変換するリソースコレクションのネストレベルを気にする必要はありません。</target>
        </trans-unit>
        <trans-unit id="d436804dd72fa76e141c3394cfcbea0604539a3b" translate="yes" xml:space="preserve">
          <source>Of course, you may call &lt;code&gt;paginate&lt;/code&gt; after setting other constraints on the query, such as &lt;code&gt;where&lt;/code&gt; clauses:</source>
          <target state="translated">もちろん、 &lt;code&gt;where&lt;/code&gt; 句など、クエリに他の制約を設定した後で &lt;code&gt;paginate&lt;/code&gt; を呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="0b710d2b06bd4729fd77c01638d30b2fee73ccc7" translate="yes" xml:space="preserve">
          <source>Of course, you may call the &lt;code&gt;trans&lt;/code&gt; helper from your &lt;code&gt;message&lt;/code&gt; method if you would like to return an error message from your translation files:</source>
          <target state="translated">もちろん、翻訳ファイルからエラーメッセージを返したい場合は、 &lt;code&gt;message&lt;/code&gt; メソッドから &lt;code&gt;trans&lt;/code&gt; ヘルパーを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="6635bbc5357f313f0809b18def551b52dea67552" translate="yes" xml:space="preserve">
          <source>Of course, you may chain the &lt;code&gt;onConnection&lt;/code&gt; and &lt;code&gt;onQueue&lt;/code&gt; methods to specify the connection and the queue for a job:</source>
          <target state="translated">もちろん、 &lt;code&gt;onConnection&lt;/code&gt; メソッドと &lt;code&gt;onQueue&lt;/code&gt; メソッドをチェーンして、ジョブの接続とキューを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="29e57ca06771fea1913df9152c14b5c40fefcb9e" translate="yes" xml:space="preserve">
          <source>Of course, you may combine these methods with other clauses:</source>
          <target state="translated">もちろん、これらの方法を他の句と組み合わせてもよい。</target>
        </trans-unit>
        <trans-unit id="1faf365af896f62f663b304818b543ee7b1bd2bd" translate="yes" xml:space="preserve">
          <source>Of course, you may configure as many disks as you like, and may even have multiple disks that use the same driver.</source>
          <target state="translated">もちろん、好きなだけディスクを構成しても構いませんし、同じドライバを使用しているディスクが複数ある場合もあります。</target>
        </trans-unit>
        <trans-unit id="44fe13b6814d54a44f1cd69816a01e486ac54340" translate="yes" xml:space="preserve">
          <source>Of course, you may not always want to select all columns from a database table. Using the &lt;code&gt;select&lt;/code&gt; method, you can specify a custom &lt;code&gt;select&lt;/code&gt; clause for the query:</source>
          <target state="translated">もちろん、常にデータベーステーブルからすべての列を選択する必要はありません。 &lt;code&gt;select&lt;/code&gt; メソッドを使用すると、クエリのカスタム &lt;code&gt;select&lt;/code&gt; 句を指定できます。</target>
        </trans-unit>
        <trans-unit id="290d6ab70b0e9ea5805392bc8b64fea7d680899d" translate="yes" xml:space="preserve">
          <source>Of course, you may perform state manipulations on the related models. In addition, you may pass a Closure based state transformation if your state change requires access to the parent model:</source>
          <target state="translated">もちろん、関連するモデルに対して状態操作を行うことができます。さらに、状態の変更に親モデルへのアクセスが必要な場合は、Closureベースの状態変換を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="b9d1891cebd8766a490b6df58b7324c2d1a3978a" translate="yes" xml:space="preserve">
          <source>Of course, you may specify the guard instance you would like to use:</source>
          <target state="translated">もちろん、使用するガードインスタンスを指定しても構いません。</target>
        </trans-unit>
        <trans-unit id="27860044257942688340b5765f6f2ac75a2d250a" translate="yes" xml:space="preserve">
          <source>Of course, you may use a variety of other operators when writing a &lt;code&gt;where&lt;/code&gt; clause:</source>
          <target state="translated">もちろん、 &lt;code&gt;where&lt;/code&gt; 句を記述するときに、他のさまざまな演算子を使用できます。</target>
        </trans-unit>
        <trans-unit id="032f025fb1fcc09157c5a54e93ae07c53101b447" translate="yes" xml:space="preserve">
          <source>Of course, you should add the &lt;code&gt;deleted_at&lt;/code&gt; column to your database table. The Laravel &lt;a href=&quot;migrations&quot;&gt;schema builder&lt;/a&gt; contains a helper method to create this column:</source>
          <target state="translated">もちろん、 &lt;code&gt;deleted_at&lt;/code&gt; 列をデータベーステーブルに追加する必要があります。Laravel &lt;a href=&quot;migrations&quot;&gt;スキーマビルダーに&lt;/a&gt;は、この列を作成するヘルパーメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="5f9f87fc68ed0a96987ca4dee1f996eb624fe971" translate="yes" xml:space="preserve">
          <source>Of course, you will need to define routes to your controller methods:</source>
          <target state="translated">もちろん、コントローラメソッドへのルートを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="1dcc9c51d89bc9c69ca07eb96ea5514c8f781630" translate="yes" xml:space="preserve">
          <source>Off-Session Payment Notifications</source>
          <target state="translated">オフ会費のお知らせ</target>
        </trans-unit>
        <trans-unit id="f000c9e565d1b95aa0d75287a70134ec444e10ad" translate="yes" xml:space="preserve">
          <source>Off-session Payment Notifications</source>
          <target state="translated">オフ会の支払い通知</target>
        </trans-unit>
        <trans-unit id="6030bcbfbcb67b2e07d8c7e87633e599e7a1d2b5" translate="yes" xml:space="preserve">
          <source>Often, it is not entirely necessary to have both the parent and the child IDs within a URI since the child ID is already a unique identifier. When using unique identifiers such as auto-incrementing primary keys to identify your models in URI segments, you may choose to use &quot;shallow nesting&quot;:</source>
          <target state="translated">多くの場合、子IDはすでに一意の識別子であるため、URI内に親IDと子IDの両方を持つことは完全に必要ではありません。URIセグメント内でモデルを識別するために主キーを自動インクリメントするような一意の識別子を使用する場合は、&quot;浅い入れ子 &quot;を使用することを選択することができます。</target>
        </trans-unit>
        <trans-unit id="3db6115cc8c202c90ad1ad4cc4739172fa4d4ac9" translate="yes" xml:space="preserve">
          <source>Often, you will be testing pages that require authentication. You can use Dusk's &lt;code&gt;loginAs&lt;/code&gt; method in order to avoid interacting with the login screen during every test. The &lt;code&gt;loginAs&lt;/code&gt; method accepts a user ID or user model instance:</source>
          <target state="translated">多くの場合、認証が必要なページをテストします。Duskの &lt;code&gt;loginAs&lt;/code&gt; メソッドを使用して、すべてのテスト中にログイン画面と対話しないようにすることができます。 &lt;code&gt;loginAs&lt;/code&gt; の方法は、ユーザIDやユーザモデルインスタンスを受け入れ：</target>
        </trans-unit>
        <trans-unit id="0df5208f1d7c529b69f36d636ed3c1715162cb86" translate="yes" xml:space="preserve">
          <source>Often, you will need to pass additional content to your component via &quot;slots&quot;. Let's imagine that an &lt;code&gt;alert&lt;/code&gt; component we created has the following markup:</source>
          <target state="translated">多くの場合、「スロット」を介して追加のコンテンツをコンポーネントに渡す必要があります。作成した &lt;code&gt;alert&lt;/code&gt; コンポーネントに次のマークアップがあると想像してみましょう。</target>
        </trans-unit>
        <trans-unit id="3043b0ab8d94f7302a5ab9e828b6e20debb3dca5" translate="yes" xml:space="preserve">
          <source>Oh My Zsh</source>
          <target state="translated">オーマイジーシュ</target>
        </trans-unit>
        <trans-unit id="d69a8a1c3c8730526fd45dcf55c4d952afd440f7" translate="yes" xml:space="preserve">
          <source>Old Input</source>
          <target state="translated">旧入力</target>
        </trans-unit>
        <trans-unit id="446f58368c2e79d6d565a5fc4be41059bc6ee534" translate="yes" xml:space="preserve">
          <source>On clauses can be chained, e.g.</source>
          <target state="translated">オン句は連結することができます。</target>
        </trans-unit>
        <trans-unit id="095071fa8899cb7a6b2d98c8bc1a25d444a504aa" translate="yes" xml:space="preserve">
          <source>On the other hand, if your field name contains a literal period, you can explicitly prevent this from being interpreted as &quot;dot&quot; syntax by escaping the period with a backslash:</source>
          <target state="translated">一方、フィールド名にリテラルピリオドが含まれている場合は、ピリオドをバックスラッシュでエスケープすることで、これが「ドット」構文として解釈されるのを明示的に防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="13305316f18266932bf704be7ea9ccdf5a9070ce" translate="yes" xml:space="preserve">
          <source>On the other hand, other packages are specifically intended for use with Laravel. These packages may have routes, controllers, views, and configuration specifically intended to enhance a Laravel application. This guide primarily covers the development of those packages that are Laravel specific.</source>
          <target state="translated">一方で、Laravelでの使用を特に意図したパッケージもあります。これらのパッケージは、Laravelアプリケーションを強化するために特別に意図されたルート、コントローラ、ビュー、設定を持っているかもしれません。このガイドでは、主にLaravelに特化したパッケージの開発について説明します。</target>
        </trans-unit>
        <trans-unit id="f444d9bd275cb0b41e892c6573af193a9d44e582" translate="yes" xml:space="preserve">
          <source>On the payment confirmation page, the customer will be prompted to enter their credit card info again and perform any additional actions required by Stripe, such as &quot;3D Secure&quot; confirmation. After confirming their payment, the user will be redirected to the URL provided by the &lt;code&gt;redirect&lt;/code&gt; parameter specified above. Upon redirection, &lt;code&gt;message&lt;/code&gt; (string) and &lt;code&gt;success&lt;/code&gt; (integer) query string variables will be added to the URL.</source>
          <target state="translated">支払い確認ページで、顧客はクレジットカード情報を再度入力し、「3Dセキュア」確認などのStripeに必要な追加のアクションを実行するように求められます。支払いを確認した後、ユーザーは上記の &lt;code&gt;redirect&lt;/code&gt; パラメータで指定されたURLにリダイレクトされます。リダイレクト時に、 &lt;code&gt;message&lt;/code&gt; （文字列）と &lt;code&gt;success&lt;/code&gt; （整数）のクエリ文字列変数がURLに追加されます。</target>
        </trans-unit>
        <trans-unit id="ce89d278990fec50e1b9b2abf286ed1a68b7bf4f" translate="yes" xml:space="preserve">
          <source>On-Demand Notifications</source>
          <target state="translated">オンデマンド通知</target>
        </trans-unit>
        <trans-unit id="3bdea15db6e96776fa1dd73136486b4ed4f2b6a3" translate="yes" xml:space="preserve">
          <source>Once CSRF protection has been initialized, you should make a &lt;code&gt;POST&lt;/code&gt; request to the typical Laravel &lt;code&gt;/login&lt;/code&gt; route. This &lt;code&gt;/login&lt;/code&gt; route may be provided by the &lt;code&gt;laravel/jetstream&lt;/code&gt;&lt;a href=&quot;authentication#introduction&quot;&gt;authentication scaffolding&lt;/a&gt; package.</source>
          <target state="translated">CSRF保護が初期化されたら、通常のLaravel &lt;code&gt;/login&lt;/code&gt; ルートに &lt;code&gt;POST&lt;/code&gt; リクエストを送信する必要があります。この &lt;code&gt;/login&lt;/code&gt; ルートは、 &lt;code&gt;laravel/jetstream&lt;/code&gt; &lt;a href=&quot;authentication#introduction&quot;&gt;認証スキャフォールディング&lt;/a&gt;パッケージによって提供される場合があります。</target>
        </trans-unit>
        <trans-unit id="a04959bac02b1267b70a303d501037c6286f0be8" translate="yes" xml:space="preserve">
          <source>Once Dusk is installed, you should register the &lt;code&gt;Laravel\Dusk\DuskServiceProvider&lt;/code&gt; service provider. Typically, this will be done automatically via Laravel's automatic service provider registration.</source>
          <target state="translated">Duskをインストールしたら、 &lt;code&gt;Laravel\Dusk\DuskServiceProvider&lt;/code&gt; サービスプロバイダーを登録する必要があります。通常、これはLaravelの自動サービスプロバイダー登録によって自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="5940ffde6beb6c8d295a88c6a1f763cd43f07e24" translate="yes" xml:space="preserve">
          <source>Once Echo is installed, you are ready to create a fresh Echo instance in your application's JavaScript. A great place to do this is at the bottom of the &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file that is included with the Laravel framework:</source>
          <target state="translated">Echoをインストールしたら、アプリケーションのJavaScriptで新しいEchoインスタンスを作成する準備が整います。これを行うのに最適な場所は、Laravelフレームワークに含まれている &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; ファイルの最後です。</target>
        </trans-unit>
        <trans-unit id="c918f4501d29486d46a85b89de3247b33f50f561" translate="yes" xml:space="preserve">
          <source>Once Homestead has been installed, use the &lt;code&gt;make&lt;/code&gt; command to generate the &lt;code&gt;Vagrantfile&lt;/code&gt; and &lt;code&gt;Homestead.yaml&lt;/code&gt; file in your project root. The &lt;code&gt;make&lt;/code&gt; command will automatically configure the &lt;code&gt;sites&lt;/code&gt; and &lt;code&gt;folders&lt;/code&gt; directives in the &lt;code&gt;Homestead.yaml&lt;/code&gt; file.</source>
          <target state="translated">Homesteadがインストールされたら、 &lt;code&gt;make&lt;/code&gt; コマンドを使用して、プロジェクトルートに &lt;code&gt;Vagrantfile&lt;/code&gt; および &lt;code&gt;Homestead.yaml&lt;/code&gt; ファイルを生成します。 &lt;code&gt;make&lt;/code&gt; コマンドが自動的に設定されます &lt;code&gt;sites&lt;/code&gt; と &lt;code&gt;folders&lt;/code&gt; 内のディレクティブ &lt;code&gt;Homestead.yaml&lt;/code&gt; のファイルを。</target>
        </trans-unit>
        <trans-unit id="5dd240f89aebbbb6e2d5352656cc5fd0ecf9917d" translate="yes" xml:space="preserve">
          <source>Once Mailhog has been configured, you may access the Mailhog dashboard at &lt;code&gt;http://localhost:8025&lt;/code&gt;.</source>
          <target state="translated">Mailhogが構成されたら、 &lt;code&gt;http://localhost:8025&lt;/code&gt; でMailhogダッシュボードにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="326c2db1f3bfb1b515f496bab34a18c0e73de0fb" translate="yes" xml:space="preserve">
          <source>Once Valet is installed, try pinging any &lt;code&gt;*.test&lt;/code&gt; domain on your terminal using a command such as &lt;code&gt;ping foobar.test&lt;/code&gt;. If Valet is installed correctly you should see this domain responding on &lt;code&gt;127.0.0.1&lt;/code&gt;.</source>
          <target state="translated">Valetがインストールされたら、 &lt;code&gt;ping foobar.test&lt;/code&gt; などのコマンドを使用して、端末の &lt;code&gt;*.test&lt;/code&gt; ドメインにpingを実行してみてください。Valetが正しくインストールされている場合、このドメインが &lt;code&gt;127.0.0.1&lt;/code&gt; で応答するはずです。</target>
        </trans-unit>
        <trans-unit id="692ffaec797125c0a9229c0ea3e166610b6d84b2" translate="yes" xml:space="preserve">
          <source>Once Valet is installed, you're ready to start serving sites. Valet provides two commands to help you serve your Laravel sites: &lt;code&gt;park&lt;/code&gt; and &lt;code&gt;link&lt;/code&gt;.</source>
          <target state="translated">Valetがインストールされると、サイトのサービスを開始する準備が整います。Valetには、Laravelサイトへのサービス提供に役立つ2つのコマンド、 &lt;code&gt;park&lt;/code&gt; と &lt;code&gt;link&lt;/code&gt; があります。</target>
        </trans-unit>
        <trans-unit id="c8e4ad42fd0ce43179e542e002630e899fff6c48" translate="yes" xml:space="preserve">
          <source>Once VirtualBox / VMware and Vagrant have been installed, you should add the &lt;code&gt;laravel/homestead&lt;/code&gt; box to your Vagrant installation using the following command in your terminal. It will take a few minutes to download the box, depending on your Internet connection speed:</source>
          <target state="translated">VirtualBox / VMwareおよびVagrantをインストールしたら、ターミナルで次のコマンドを使用して、 &lt;code&gt;laravel/homestead&lt;/code&gt; ボックスをVagrantインストールに追加する必要があります。インターネット接続の速度にもよりますが、ボックスのダウンロードには数分かかります。</target>
        </trans-unit>
        <trans-unit id="ccbc450524261193dace54f977d27f9f5caf391d" translate="yes" xml:space="preserve">
          <source>Once a client has been created, developers may use their client ID and secret to request an authorization code and access token from your application. First, the consuming application should make a redirect request to your application's &lt;code&gt;/oauth/authorize&lt;/code&gt; route like so:</source>
          <target state="translated">クライアントが作成されると、開発者はクライアントIDとシークレットを使用して、アプリケーションから認証コードとアクセストークンをリクエストできます。まず、使用するアプリケーションは、次のようにアプリケーションの &lt;code&gt;/oauth/authorize&lt;/code&gt; ルートへのリダイレクト要求を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="fa80804607755e21dfed3821db9dda580df82e3c" translate="yes" xml:space="preserve">
          <source>Once a client has been created, you may use the client ID and the generated code verifier and code challenge to request an authorization code and access token from your application. First, the consuming application should make a redirect request to your application's &lt;code&gt;/oauth/authorize&lt;/code&gt; route:</source>
          <target state="translated">クライアントが作成されたら、クライアントIDと生成されたコードベリファイアおよびコードチャレンジを使用して、アプリケーションから認証コードとアクセストークンを要求できます。まず、消費アプリケーションは、アプリケーションの &lt;code&gt;/oauth/authorize&lt;/code&gt; ルートにリダイレクト要求を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="a8bdf39f1bad79f4f3fc870c9ea28b75efa1faaf" translate="yes" xml:space="preserve">
          <source>Once a file has been stored and the symbolic link has been created, you can create a URL to the files using the &lt;code&gt;asset&lt;/code&gt; helper:</source>
          <target state="translated">ファイルが保存され、シンボリックリンクが作成されたら、 &lt;code&gt;asset&lt;/code&gt; ヘルパーを使用してファイルへのURLを作成できます。</target>
        </trans-unit>
        <trans-unit id="d07925f5a7208c9280424a4aa5583baa7390cd2c" translate="yes" xml:space="preserve">
          <source>Once a grant has been enabled, developers may use their client ID to request an access token from your application. The consuming application should make a redirect request to your application's &lt;code&gt;/oauth/authorize&lt;/code&gt; route like so:</source>
          <target state="translated">付与が有効になると、開発者はクライアントIDを使用して、アプリケーションからアクセストークンをリクエストできます。使用するアプリケーションは、次のようにアプリケーションの &lt;code&gt;/oauth/authorize&lt;/code&gt; ルートにリダイレクト要求を行う必要があります。</target>
        </trans-unit>
        <trans-unit id="212a4c8d54d06f51e67796ed58351329f84714c2" translate="yes" xml:space="preserve">
          <source>Once a page has been configured, you may navigate to it using the &lt;code&gt;visit&lt;/code&gt; method:</source>
          <target state="translated">ページが設定されたら、 &lt;code&gt;visit&lt;/code&gt; メソッドを使用してページに移動できます。</target>
        </trans-unit>
        <trans-unit id="dcb839623a0ad795737f843b7f84387dd6703a52" translate="yes" xml:space="preserve">
          <source>Once a resource has been defined, it may be returned directly from a route or controller:</source>
          <target state="translated">リソースが定義されると、ルートやコントローラから直接返されることがあります。</target>
        </trans-unit>
        <trans-unit id="dc87536918e0608ab660c521f6884fe2807b9d2f" translate="yes" xml:space="preserve">
          <source>Once a user is subscribed to your application, you may check their subscription status using a variety of convenient methods. First, the &lt;code&gt;subscribed&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the user has an active subscription, even if the subscription is currently within its trial period:</source>
          <target state="translated">ユーザーがアプリケーションにサブスクライブすると、さまざまな便利な方法を使用してサブスクリプションステータスを確認できます。まず、サブスクリプションが現在試用期間内であっても、ユーザーがアクティブなサブスクリプションを持っている場合、 &lt;code&gt;subscribed&lt;/code&gt; メソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2d397180e6a7e55898488ff8335004201f69c827" translate="yes" xml:space="preserve">
          <source>Once a user is subscribed to your application, you may easily check their subscription status using a variety of convenient methods. First, the &lt;code&gt;subscribed&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the user has an active subscription, even if the subscription is currently within its trial period:</source>
          <target state="translated">ユーザーがアプリケーションにサブスクライブすると、さまざまな便利な方法を使用して、サブスクリプションのステータスを簡単に確認できます。まず、サブスクリプションが現在トライアル期間内であっても、ユーザーがアクティブなサブスクリプションを持っている場合、 &lt;code&gt;subscribed&lt;/code&gt; メソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="660beeec86ac8e133bd4e3f610ac3ab5d08f22e1" translate="yes" xml:space="preserve">
          <source>Once an access token authenticated request has entered your application, you may still check if the token has a given scope using the &lt;code&gt;tokenCan&lt;/code&gt; method on the authenticated &lt;code&gt;User&lt;/code&gt; instance:</source>
          <target state="translated">アクセストークンの認証済みリクエストがアプリケーションに入力された後も、認証済みの &lt;code&gt;User&lt;/code&gt; インスタンスで &lt;code&gt;tokenCan&lt;/code&gt; メソッドを使用して、トークンに特定のスコープがあるかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="62ea10406a3dbf3c3a39bdadaf70c5ffb6123eaf" translate="yes" xml:space="preserve">
          <source>Once configured, Homestead will export your databases to &lt;code&gt;mysql_backup&lt;/code&gt; and &lt;code&gt;postgres_backup&lt;/code&gt; directories when the &lt;code&gt;vagrant destroy&lt;/code&gt; command is executed. These directories can be found in the folder where you cloned Homestead or in the root of your project if you are using the &lt;a href=&quot;#per-project-installation&quot;&gt;per project installation&lt;/a&gt; method.</source>
          <target state="translated">設定が完了すると、 &lt;code&gt;mysql_backup&lt;/code&gt; &lt;code&gt;vagrant destroy&lt;/code&gt; コマンドが実行されると、Homesteadはデータベースをmysql_backupおよび &lt;code&gt;postgres_backup&lt;/code&gt; ディレクトリにエクスポートします。これらのディレクトリは、Homesteadのクローンを作成したフォルダー、またはプロジェクト&lt;a href=&quot;#per-project-installation&quot;&gt;ごとのインストール&lt;/a&gt;方法を使用している場合はプロジェクトのルートにあります。</target>
        </trans-unit>
        <trans-unit id="a12d3f159b63f10e99f98f1428f9a7ce44bce8f4" translate="yes" xml:space="preserve">
          <source>Once enabled, all of your client secrets will only be shown one time when your client is created. Since the plain-text client secret value is never stored in the database, it is not possible to recover if lost.</source>
          <target state="translated">この機能を有効にすると、クライアントが作成されたときに、すべてのクライアント秘密が一度だけ表示されます。プレーンテキストのクライアント秘密の値はデータベースに保存されないため、紛失した場合は復旧できません。</target>
        </trans-unit>
        <trans-unit id="c3ae0ebee3876aa0eae9052c00193246d1197b0c" translate="yes" xml:space="preserve">
          <source>Once installed, the &lt;code&gt;laravel new&lt;/code&gt; command will create a fresh Laravel installation in the directory you specify. For instance, &lt;code&gt;laravel new blog&lt;/code&gt; will create a directory named &lt;code&gt;blog&lt;/code&gt; containing a fresh Laravel installation with all of Laravel's dependencies already installed:</source>
          <target state="translated">インストール後、 &lt;code&gt;laravel new&lt;/code&gt; コマンドは、指定したディレクトリに新しいLaravelインストールを作成します。たとえば、 &lt;code&gt;laravel new blog&lt;/code&gt; は、Laravelのすべての依存関係がすでにインストールされている、新しいLaravelインストールを含む &lt;code&gt;blog&lt;/code&gt; という名前のディレクトリを作成します。</target>
        </trans-unit>
        <trans-unit id="9572a43a338bd7c7ac0c6c0e072ffe6dd253e6ff" translate="yes" xml:space="preserve">
          <source>Once notifications are stored in the database, you need a convenient way to access them from your notifiable entities. The &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; trait, which is included on Laravel's default &lt;code&gt;App\Models\User&lt;/code&gt; model, includes a &lt;code&gt;notifications&lt;/code&gt; Eloquent relationship that returns the notifications for the entity. To fetch notifications, you may access this method like any other Eloquent relationship. By default, notifications will be sorted by the &lt;code&gt;created_at&lt;/code&gt; timestamp:</source>
          <target state="translated">通知がデータベースに保存されたら、通知エンティティから通知にアクセスするための便利な方法が必要です。 &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; 特性、Laravelのデフォルトに含まれている &lt;code&gt;App\Models\User&lt;/code&gt; モデルは、含ま &lt;code&gt;notifications&lt;/code&gt; エンティティの通知を返す雄弁関係を。通知を取得するには、他のEloquentリレーションシップと同様にこのメソッドにアクセスできます。デフォルトでは、通知は &lt;code&gt;created_at&lt;/code&gt; タイムスタンプでソートされます。</target>
        </trans-unit>
        <trans-unit id="d8f284fca574bf32ae46c4c0fa965129ecd75e3d" translate="yes" xml:space="preserve">
          <source>Once notifications are stored in the database, you need a convenient way to access them from your notifiable entities. The &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; trait, which is included on Laravel's default &lt;code&gt;App\User&lt;/code&gt; model, includes a &lt;code&gt;notifications&lt;/code&gt; Eloquent relationship that returns the notifications for the entity. To fetch notifications, you may access this method like any other Eloquent relationship. By default, notifications will be sorted by the &lt;code&gt;created_at&lt;/code&gt; timestamp:</source>
          <target state="translated">通知がデータベースに保存されたら、通知可能なエンティティから通知にアクセスするための便利な方法が必要です。 &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; 特性、Laravelのデフォルトに含まれている &lt;code&gt;App\User&lt;/code&gt; モデルは、含ま &lt;code&gt;notifications&lt;/code&gt; エンティティの通知を返す雄弁関係を。通知を取得するには、他のEloquent関係と同様にこのメソッドにアクセスできます。デフォルトでは、通知は &lt;code&gt;created_at&lt;/code&gt; タイムスタンプでソートされます。</target>
        </trans-unit>
        <trans-unit id="6df8455cafd814ccd7c126e47b09346dfc9234d9" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;ShouldQueue&lt;/code&gt; interface has been added to your notification, you may send the notification like normal. Laravel will detect the &lt;code&gt;ShouldQueue&lt;/code&gt; interface on the class and automatically queue the delivery of the notification:</source>
          <target state="translated">いったん &lt;code&gt;ShouldQueue&lt;/code&gt; のインターフェイスは、あなたの通知に追加されている、あなたは、通常のように通知を送信することができます。Laravelはクラスの &lt;code&gt;ShouldQueue&lt;/code&gt; インターフェースを検出し、通知の配信を自動的にキューに入れます：</target>
        </trans-unit>
        <trans-unit id="9de292bacf086c79de3cdadba9de2b8ad12c9f56" translate="yes" xml:space="preserve">
          <source>Once the &lt;code&gt;User&lt;/code&gt; model is marked with the &lt;code&gt;MustVerifyEmail&lt;/code&gt; interface, newly registered users will receive an email containing a signed verification link. Once this link has been clicked, Laravel will automatically record the verification time in the database and redirect users to a location of your choosing.</source>
          <target state="translated">いったん &lt;code&gt;User&lt;/code&gt; モデルがでマークされ &lt;code&gt;MustVerifyEmail&lt;/code&gt; のインターフェース、新たに登録されたユーザーは、署名された確認用のリンクを含む電子メールを受信します。このリンクがクリックされると、Laravelは自動的に検証時間をデータベースに記録し、ユーザーを選択した場所にリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="1cdd273c18035a99a5e9bf51036902af2deeca0b" translate="yes" xml:space="preserve">
          <source>Once the application has been bootstrapped and all service providers have been registered, the &lt;code&gt;Request&lt;/code&gt; will be handed off to the router for dispatching. The router will dispatch the request to a route or controller, as well as run any route specific middleware.</source>
          <target state="translated">アプリケーションがブートストラップされ、すべてのサービスプロバイダーが登録されると、ディスパッチのために &lt;code&gt;Request&lt;/code&gt; がルーターに渡されます。ルーターはルートまたはコントローラーにリクエストをディスパッチし、ルート固有のミドルウェアを実行します。</target>
        </trans-unit>
        <trans-unit id="51719e0b1eb11a6e0159868681955e2e1d0567f7" translate="yes" xml:space="preserve">
          <source>Once the attribute has been added to the &lt;code&gt;appends&lt;/code&gt; list, it will be included in both the model's array and JSON representations. Attributes in the &lt;code&gt;appends&lt;/code&gt; array will also respect the &lt;code&gt;visible&lt;/code&gt; and &lt;code&gt;hidden&lt;/code&gt; settings configured on the model.</source>
          <target state="translated">属性が &lt;code&gt;appends&lt;/code&gt; リストに追加されると、モデルの配列とJSON表現の両方に含まれます。 &lt;code&gt;appends&lt;/code&gt; 配列の属性も、モデルで構成された &lt;code&gt;hidden&lt;/code&gt; 設定と非表示設定を尊重し &lt;code&gt;visible&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c2d93c3847d49f0a9942932a470444c27be9bac6" translate="yes" xml:space="preserve">
          <source>Once the cast is defined, you may access the &lt;code&gt;options&lt;/code&gt; attribute and it will automatically be deserialized from JSON into a PHP array. When you set the value of the &lt;code&gt;options&lt;/code&gt; attribute, the given array will automatically be serialized back into JSON for storage:</source>
          <target state="translated">キャストを定義したら、 &lt;code&gt;options&lt;/code&gt; 属性にアクセスすると、JSONからPHP配列に自動的に逆シリアル化されます。 &lt;code&gt;options&lt;/code&gt; 属性の値を設定すると、指定された配列が自動的にJSONにシリアル化されて保存されます。</target>
        </trans-unit>
        <trans-unit id="adfed835521d11b763ec98772f8d12a44a4bd928" translate="yes" xml:space="preserve">
          <source>Once the component has been aliased, you may render it using a directive:</source>
          <target state="translated">コンポーネントがエイリアスされると、ディレクティブを使ってレンダリングすることができます。</target>
        </trans-unit>
        <trans-unit id="e3d94721097daacbe43cee686ebee67b17792294" translate="yes" xml:space="preserve">
          <source>Once the component has been defined, we can easily select a date within the date picker from any test. And, if the logic necessary to select a date changes, we only need to update the component:</source>
          <target state="translated">コンポーネントが定義されると、どのテストからでも日付ピッカー内の日付を簡単に選択することができます。また、日付を選択するために必要なロジックが変更された場合は、コンポーネントを更新するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="7bb8274de910f08810e3181620aabffbd0fe6883" translate="yes" xml:space="preserve">
          <source>Once the configuration file has been created, you may update the Supervisor configuration and start the processes using the following commands:</source>
          <target state="translated">構成ファイルが作成されたら、以下のコマンドを使用してスーパバイザ構成を更新し、プロセスを開始することができます。</target>
        </trans-unit>
        <trans-unit id="3b571af2d040879b210381f3e7751f5a9861bbed" translate="yes" xml:space="preserve">
          <source>Once the custom conditional has been defined, we can easily use it on our templates:</source>
          <target state="translated">カスタム条件が定義されると、テンプレート上で簡単に使用することができます。</target>
        </trans-unit>
        <trans-unit id="e13097b5bfa9fbb7285a0dbcf1682249ec7a7699" translate="yes" xml:space="preserve">
          <source>Once the customer has been created in Stripe, you may begin a subscription at a later date. You can also use an optional &lt;code&gt;$options&lt;/code&gt; array to pass in any additional parameters which are supported by the Stripe API:</source>
          <target state="translated">Stripeで顧客が作成されたら、後日サブスクリプションを開始できます。オプションの &lt;code&gt;$options&lt;/code&gt; 配列を使用して、StripeAPIでサポートされている追加のパラメーターを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="920876c1bf0176ceff08c8546bf9d255258debc9" translate="yes" xml:space="preserve">
          <source>Once the data has been passed to the &lt;code&gt;with&lt;/code&gt; method, it will automatically be available in your view, so you may access it like you would access any other data in your Blade templates:</source>
          <target state="translated">データが &lt;code&gt;with&lt;/code&gt; メソッドに渡されると、自動的にビューで使用できるようになるため、Bladeテンプレート内の他のデータにアクセスするのと同じようにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="1fc8dacfe79bf743d9c80546b64d22846cd61c5e" translate="yes" xml:space="preserve">
          <source>Once the data has been set to a public property, it will automatically be available in your view, so you may access it like you would access any other data in your Blade templates:</source>
          <target state="translated">データがパブリック プロパティに設定されると、そのデータは自動的にビューで利用できるようになるので、Blade テンプレート内の他のデータにアクセスするのと同じようにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="a886bb0e45fb52344d4182bb818bc31a43b5f83b" translate="yes" xml:space="preserve">
          <source>Once the default value for the &lt;code&gt;locale&lt;/code&gt; parameter has been set, you are no longer required to pass its value when generating URLs via the &lt;code&gt;route&lt;/code&gt; helper.</source>
          <target state="translated">&lt;code&gt;locale&lt;/code&gt; パラメータのデフォルト値を設定すると、 &lt;code&gt;route&lt;/code&gt; ヘルパー経由でURLを生成するときにその値を渡す必要がなくなります。</target>
        </trans-unit>
        <trans-unit id="cc7313a35a6cc01cd9c0cf1f2cbc9acf7ba9328b" translate="yes" xml:space="preserve">
          <source>Once the dependencies have been installed using &lt;code&gt;npm install&lt;/code&gt;, you can compile your SASS files to plain CSS using &lt;a href=&quot;mix#working-with-stylesheets&quot;&gt;Laravel Mix&lt;/a&gt;. The &lt;code&gt;npm run dev&lt;/code&gt; command will process the instructions in your &lt;code&gt;webpack.mix.js&lt;/code&gt; file. Typically, your compiled CSS will be placed in the &lt;code&gt;public/css&lt;/code&gt; directory:</source>
          <target state="translated">&lt;code&gt;npm install&lt;/code&gt; を使用して依存関係をインストールしたら、&lt;a href=&quot;mix#working-with-stylesheets&quot;&gt;Laravel Mix&lt;/a&gt;を使用してSASSファイルをプレーンなCSSにコンパイルできます。 &lt;code&gt;npm run dev&lt;/code&gt; コマンドは、あなたの指示を処理します &lt;code&gt;webpack.mix.js&lt;/code&gt; ファイル。通常、コンパイルされたCSSは &lt;code&gt;public/css&lt;/code&gt; ディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="490ba061b4b9fff86232dbd6b72b90d5ef1ec992" translate="yes" xml:space="preserve">
          <source>Once the fresh Valet source code has been downloaded, you should run the &lt;code&gt;install&lt;/code&gt; command:</source>
          <target state="translated">新しいValetソースコードがダウンロードされたら、 &lt;code&gt;install&lt;/code&gt; コマンドを実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="f9ca789f3b84cd12b56385ac8db3c9e8aa7987c1" translate="yes" xml:space="preserve">
          <source>Once the include has been aliased, you may render it using the alias name as the Blade directive:</source>
          <target state="translated">インクルードがエイリアス化されると、Blade ディレクティブのようにエイリアス名を使ってレンダリングすることができます。</target>
        </trans-unit>
        <trans-unit id="75cb46dfea49245d3112aaf1c7c51a7c4696aade" translate="yes" xml:space="preserve">
          <source>Once the method has been defined, you may use it within any test that utilizes the page. The browser instance will automatically be passed to the page method:</source>
          <target state="translated">メソッドが定義されたら、ページを利用するあらゆるテストの中でそれを使用することができます。ブラウザのインスタンスは自動的にページメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="e10624d6b9641704ad83d48c39b53efa94cdcc92" translate="yes" xml:space="preserve">
          <source>Once the middleware has been attached to the route, you will automatically be prompted for credentials when accessing the route in your browser. By default, the &lt;code&gt;auth.basic&lt;/code&gt; middleware will use the &lt;code&gt;email&lt;/code&gt; column on the user record as the &quot;username&quot;.</source>
          <target state="translated">ミドルウェアがルートにアタッチされると、ブラウザーでルートにアクセスするときに自動的に資格情報の入力を求められます。デフォルトでは、 &lt;code&gt;auth.basic&lt;/code&gt; ミドルウェアは、ユーザーレコードの &lt;code&gt;email&lt;/code&gt; 列を「ユーザー名」として使用します。</target>
        </trans-unit>
        <trans-unit id="7c9279ac7df7155bbf80e6f3d0c070e3151c3124" translate="yes" xml:space="preserve">
          <source>Once the middleware has been defined in the HTTP kernel, you may use the &lt;code&gt;middleware&lt;/code&gt; method to assign middleware to a route:</source>
          <target state="translated">ミドルウェアがHTTPカーネルで定義されたら、 &lt;code&gt;middleware&lt;/code&gt; メソッドを使用して、ミドルウェアをルートに割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="fd4b6f07e5b48282b3eb6d824d9bba8d1dfe2dfe" translate="yes" xml:space="preserve">
          <source>Once the migrations have been created, run the &lt;code&gt;migrate&lt;/code&gt; Artisan command.</source>
          <target state="translated">マイグレーションが作成されたら、 &lt;code&gt;migrate&lt;/code&gt; Artisanコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="f7b8e0fbc399ef31096110dc7abd0bf2165fc16f" translate="yes" xml:space="preserve">
          <source>Once the packages are installed, you can use the &lt;code&gt;npm run dev&lt;/code&gt; command to &lt;a href=&quot;mix&quot;&gt;compile your assets&lt;/a&gt;. Webpack is a module bundler for modern JavaScript applications. When you run the &lt;code&gt;npm run dev&lt;/code&gt; command, Webpack will execute the instructions in your &lt;code&gt;webpack.mix.js&lt;/code&gt; file:</source>
          <target state="translated">パッケージがインストールされたら、 &lt;code&gt;npm run dev&lt;/code&gt; コマンドを使用&lt;a href=&quot;mix&quot;&gt;してアセット&lt;/a&gt;をコンパイルできます。Webpackは、最新のJavaScriptアプリケーション用のモジュールバンドルです。あなたが実行すると &lt;code&gt;npm run dev&lt;/code&gt; コマンドを、WebPACKのは、あなたの中に命令を実行します &lt;code&gt;webpack.mix.js&lt;/code&gt; ファイル：</target>
        </trans-unit>
        <trans-unit id="caf79b5a69accbb335ce5145ae3692073586ca4f" translate="yes" xml:space="preserve">
          <source>Once the pattern has been defined, it is automatically applied to all routes using that parameter name:</source>
          <target state="translated">パターンが定義されると、そのパラメータ名を使用しているすべてのルートに自動的に適用されます。</target>
        </trans-unit>
        <trans-unit id="d6e7155cfc64655f1147b819caf2a27073c359ec" translate="yes" xml:space="preserve">
          <source>Once the policy exists, it needs to be registered. The &lt;code&gt;AuthServiceProvider&lt;/code&gt; included with fresh Laravel applications contains a &lt;code&gt;policies&lt;/code&gt; property which maps your Eloquent models to their corresponding policies. Registering a policy will instruct Laravel which policy to utilize when authorizing actions against a given model:</source>
          <target state="translated">ポリシーが存在する場合は、登録する必要があります。 &lt;code&gt;AuthServiceProvider&lt;/code&gt; 新鮮Laravelアプリケーションに含まれているが含まれている &lt;code&gt;policies&lt;/code&gt; 、それらに対応する政策へのあなたの雄弁モデルをマップするプロパティを。ポリシーを登録すると、Laravelに、特定のモデルに対するアクションを承認するときに利用するポリシーが指示されます。</target>
        </trans-unit>
        <trans-unit id="26efaa0d1bd42767585ed84c265ab647c5086244" translate="yes" xml:space="preserve">
          <source>Once the policy has been registered, you may add methods for each action it authorizes. For example, let's define an &lt;code&gt;update&lt;/code&gt; method on our &lt;code&gt;PostPolicy&lt;/code&gt; which determines if a given &lt;code&gt;User&lt;/code&gt; can update a given &lt;code&gt;Post&lt;/code&gt; instance.</source>
          <target state="translated">ポリシーが登録されたら、許可するアクションごとにメソッドを追加できます。たとえば、特定の &lt;code&gt;User&lt;/code&gt; が特定の &lt;code&gt;Post&lt;/code&gt; インスタンスを更新できるかどうかを決定する &lt;code&gt;update&lt;/code&gt; メソッドを &lt;code&gt;PostPolicy&lt;/code&gt; で定義してみましょう。</target>
        </trans-unit>
        <trans-unit id="56f530c42fa4745f4f59bb4f4004da1315da770d" translate="yes" xml:space="preserve">
          <source>Once the relationship has been defined, we can access the collection of comments by accessing the &lt;code&gt;comments&lt;/code&gt; property. Remember, since Eloquent provides &quot;dynamic properties&quot;, we can access relationship methods as if they were defined as properties on the model:</source>
          <target state="translated">関係が定義されたら、 &lt;code&gt;comments&lt;/code&gt; プロパティにアクセスすることにより、コメントのコレクションにアクセスできます。Eloquentは「動的プロパティ」を提供するため、モデルのプロパティとして定義されているかのように関係メソッドにアクセスできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f4a69071bebc4cbca7624a755c1caf75f785f03d" translate="yes" xml:space="preserve">
          <source>Once the relationship has been defined, we can retrieve the &lt;code&gt;Post&lt;/code&gt; model for a &lt;code&gt;Comment&lt;/code&gt; by accessing the &lt;code&gt;post&lt;/code&gt; &quot;dynamic property&quot;:</source>
          <target state="translated">関係が定義されたら、 &lt;code&gt;post&lt;/code&gt; 「動的プロパティ」にアクセスして、 &lt;code&gt;Comment&lt;/code&gt; &lt;code&gt;Post&lt;/code&gt; モデルを取得できます。</target>
        </trans-unit>
        <trans-unit id="d13bc647ede4fa2b5cd70135b66171c888909377" translate="yes" xml:space="preserve">
          <source>Once the relationship is defined, you may access the user's roles using the &lt;code&gt;roles&lt;/code&gt; dynamic property:</source>
          <target state="translated">関係を定義したら、 &lt;code&gt;roles&lt;/code&gt; 動的プロパティを使用してユーザーの役割にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="3ef6b74718350271b5e2b2efe16ffef02fe7b9ea" translate="yes" xml:space="preserve">
          <source>Once the resource collection class has been generated, you may easily define any meta data that should be included with the response:</source>
          <target state="translated">リソースコレクションクラスが生成されたら、レスポンスに含めるべきメタデータを簡単に定義することができます。</target>
        </trans-unit>
        <trans-unit id="4ebee12e8de7cde0e32be6388f1d3daad3843b49" translate="yes" xml:space="preserve">
          <source>Once the rule has been created, we are ready to define its behavior. A rule object contains two methods: &lt;code&gt;passes&lt;/code&gt; and &lt;code&gt;message&lt;/code&gt;. The &lt;code&gt;passes&lt;/code&gt; method receives the attribute value and name, and should return &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on whether the attribute value is valid or not. The &lt;code&gt;message&lt;/code&gt; method should return the validation error message that should be used when validation fails:</source>
          <target state="translated">ルールが作成されると、その動作を定義する準備が整います。ルールオブジェクトには、 &lt;code&gt;passes&lt;/code&gt; と &lt;code&gt;message&lt;/code&gt; の 2つのメソッドが含まれています。 &lt;code&gt;passes&lt;/code&gt; 方法は属性値と名前を入力し、返す必要があり &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; 属性値が有効かどうかに依存します。 &lt;code&gt;message&lt;/code&gt; 検証が失敗したときの方法を使用する必要があります検証エラーメッセージを返す必要があります：</target>
        </trans-unit>
        <trans-unit id="4abd18329a542031403189893fc1f0b63fe2d932" translate="yes" xml:space="preserve">
          <source>Once the rule has been defined, you may attach it to a validator by passing an instance of the rule object with your other validation rules:</source>
          <target state="translated">ルールを定義したら、ルールオブジェクトのインスタンスを他のバリデーションルールと一緒に渡すことで、そのルールをバリデータにアタッチすることができます。</target>
        </trans-unit>
        <trans-unit id="ab1c3a81b0b249229873c9b55063ccc2b4fc5d4d" translate="yes" xml:space="preserve">
          <source>Once the scope has been defined, you may call the scope methods when querying the model. However, you should not include the &lt;code&gt;scope&lt;/code&gt; prefix when calling the method. You can even chain calls to various scopes, for example:</source>
          <target state="translated">スコープが定義されたら、モデルをクエリするときにスコープメソッドを呼び出すことができます。ただし、メソッドを呼び出すときに &lt;code&gt;scope&lt;/code&gt; プレフィックスを含めないでください。たとえば、さまざまなスコープへの呼び出しをチェーンすることもできます。</target>
        </trans-unit>
        <trans-unit id="8e185d691b604796a2ffe42e2c0f887c2b0beb87" translate="yes" xml:space="preserve">
          <source>Once the server has started, all calls to &lt;code&gt;dump&lt;/code&gt; will be displayed in the &lt;code&gt;dump-server&lt;/code&gt; console window instead of in your browser, allowing you to inspect the values without mangling your HTTP response output.</source>
          <target state="translated">サーバーが起動すると、 &lt;code&gt;dump&lt;/code&gt; へのすべての呼び出しがブラウザーではなく &lt;code&gt;dump-server&lt;/code&gt; コンソールウィンドウに表示されるため、HTTP応答出力を変更せずに値を検査できます。</target>
        </trans-unit>
        <trans-unit id="17710e4df85521b4d8576efdc928088b5ac1193d" translate="yes" xml:space="preserve">
          <source>Once the services have been tagged, you may easily resolve them all via the &lt;code&gt;tagged&lt;/code&gt; method:</source>
          <target state="translated">サービスにタグが付けられると、 &lt;code&gt;tagged&lt;/code&gt; メソッドを介してそれらすべてを簡単に解決できます。</target>
        </trans-unit>
        <trans-unit id="0c479a3659e2309834f7594110d1f7c5862b734b" translate="yes" xml:space="preserve">
          <source>Once the session driver has been registered, you may use the &lt;code&gt;mongo&lt;/code&gt; driver in your &lt;code&gt;config/session.php&lt;/code&gt; configuration file.</source>
          <target state="translated">セッションドライバーが登録されたら、 &lt;code&gt;config/session.php&lt;/code&gt; 設定ファイルで &lt;code&gt;mongo&lt;/code&gt; ドライバーを使用できます。</target>
        </trans-unit>
        <trans-unit id="6f3ef73857a18168c566f7b6cd4d8f08a7cfd8d6" translate="yes" xml:space="preserve">
          <source>Once the site has been added, run the &lt;code&gt;vagrant reload --provision&lt;/code&gt; command from your Homestead directory.</source>
          <target state="translated">サイトが追加されたら、Homesteadディレクトリから &lt;code&gt;vagrant reload --provision&lt;/code&gt; コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="a05778605f2c79f1ec8294fa5331a3563637ae04" translate="yes" xml:space="preserve">
          <source>Once the story has been written, you may run it just like a typical task:</source>
          <target state="translated">物語が書かれた後は、典型的なタスクのように実行しても良いでしょう。</target>
        </trans-unit>
        <trans-unit id="3f3d4da0059862bce86658e003d5fb596f250228" translate="yes" xml:space="preserve">
          <source>Once the test has been generated, you may define test methods as you normally would using PHPUnit. To run your tests, execute the &lt;code&gt;phpunit&lt;/code&gt; command from your terminal:</source>
          <target state="translated">テストが生成されたら、PHPUnitを通常使用する場合と同様にテストメソッドを定義できます。テストを実行するには、ターミナルから &lt;code&gt;phpunit&lt;/code&gt; コマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="0a1e31f19e47af162125b195e33320a36981d72a" translate="yes" xml:space="preserve">
          <source>Once the test has been generated, you may define test methods as you normally would using PHPUnit. To run your tests, execute the &lt;code&gt;phpunit&lt;/code&gt; or &lt;code&gt;artisan test&lt;/code&gt; command from your terminal:</source>
          <target state="translated">テストが生成されたら、PHPUnitを使用する場合と同じようにテストメソッドを定義できます。あなたのテストを実行するには、実行 &lt;code&gt;phpunit&lt;/code&gt; や &lt;code&gt;artisan test&lt;/code&gt; あなたの端末からのコマンドを：</target>
        </trans-unit>
        <trans-unit id="3d734eb47b263e66bc86bdf629eddd587d66abe3" translate="yes" xml:space="preserve">
          <source>Once the verbs have been customized, a resource route registration such as &lt;code&gt;Route::resource('fotos', 'PhotoController')&lt;/code&gt; will produce the following URIs:</source>
          <target state="translated">動詞がカスタマイズされると、 &lt;code&gt;Route::resource('fotos', 'PhotoController')&lt;/code&gt; などのリソースルート登録により、次のURIが生成されます。</target>
        </trans-unit>
        <trans-unit id="b90efeb604f64716d18aea350257685b9a3bbab6" translate="yes" xml:space="preserve">
          <source>Once this interface has been added to your model, newly registered users will automatically be sent an email containing an email verification link. As you can see by examining your &lt;code&gt;EventServiceProvider&lt;/code&gt;, Laravel already contains a &lt;code&gt;SendEmailVerificationNotification&lt;/code&gt;&lt;a href=&quot;events&quot;&gt;listener&lt;/a&gt; that is attached to the &lt;code&gt;Illuminate\Auth\Events\Registered&lt;/code&gt; event.</source>
          <target state="translated">このインターフェースがモデルに追加されると、新しく登録されたユーザーには、電子メール確認リンクを含む電子メールが自動的に送信されます。 &lt;code&gt;EventServiceProvider&lt;/code&gt; を調べるとわかるように、Laravelには、 &lt;code&gt;Illuminate\Auth\Events\Registered&lt;/code&gt; イベントにアタッチされた &lt;code&gt;SendEmailVerificationNotification&lt;/code&gt; &lt;a href=&quot;events&quot;&gt;リスナー&lt;/a&gt;がすでに含まれています。</target>
        </trans-unit>
        <trans-unit id="015f65ad356ec306dbdd3c08b6c27d913f155816" translate="yes" xml:space="preserve">
          <source>Once this is done, you may access the intermediate table data using the customized name:</source>
          <target state="translated">これが完了したら、カスタマイズされた名前を使用して中間テーブルデータにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="6416f57f8efff6bcc88521a9fb6e909a0fb6910c" translate="yes" xml:space="preserve">
          <source>Once we have made the attributes mass assignable, we can use the &lt;code&gt;create&lt;/code&gt; method to insert a new record in the database. The &lt;code&gt;create&lt;/code&gt; method returns the saved model instance:</source>
          <target state="translated">属性を一括割り当て可能にしたら、 &lt;code&gt;create&lt;/code&gt; メソッドを使用して、データベースに新しいレコードを挿入できます。 &lt;code&gt;create&lt;/code&gt; 方法は、保存されたモデルインスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="74f249f2aef7f53294574cdf618dbb0e540eaf09" translate="yes" xml:space="preserve">
          <source>Once you are ready to create an actual subscription for the user, you may use the &lt;code&gt;newSubscription&lt;/code&gt; method as usual:</source>
          <target state="translated">ユーザーの実際のサブスクリプションを作成する準備ができたら、通常どおり &lt;code&gt;newSubscription&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="7b4637cc28264f61912e1f4740af008cc361e934" translate="yes" xml:space="preserve">
          <source>Once you have a user instance, you can grab a few more details about the user:</source>
          <target state="translated">ユーザーのインスタンスを取得したら、ユーザーの詳細をいくつか取得することができます。</target>
        </trans-unit>
        <trans-unit id="bddbae99b69c3707dc8a69e01a6325f4f74343bb" translate="yes" xml:space="preserve">
          <source>Once you have added the &lt;code&gt;Laravel\Scout\Searchable&lt;/code&gt; trait to a model, all you need to do is &lt;code&gt;save&lt;/code&gt; a model instance and it will automatically be added to your search index. If you have configured Scout to &lt;a href=&quot;#queueing&quot;&gt;use queues&lt;/a&gt; this operation will be performed in the background by your queue worker:</source>
          <target state="translated">&lt;code&gt;Laravel\Scout\Searchable&lt;/code&gt; トレイトをモデルに追加したら、あとはモデルインスタンスを &lt;code&gt;save&lt;/code&gt; するだけで、自動的に検索インデックスに追加されます。&lt;a href=&quot;#queueing&quot;&gt;キュー&lt;/a&gt;を使用するようにScoutを構成している場合、この操作はキューワーカーによってバックグラウンドで実行されます。</target>
        </trans-unit>
        <trans-unit id="15e11915ea7f06cfcf79fb163c3312ec6f9c3c5c" translate="yes" xml:space="preserve">
          <source>Once you have assigned a name to a given route, you may use the route's name when generating URLs or redirects via the global &lt;code&gt;route&lt;/code&gt; function:</source>
          <target state="translated">特定のルートに名前を割り当てたら、グローバル &lt;code&gt;route&lt;/code&gt; 関数を介してURLまたはリダイレクトを生成するときにルートの名前を使用できます。</target>
        </trans-unit>
        <trans-unit id="84b7c96b6565fa1cf4907151315c1c69227024d4" translate="yes" xml:space="preserve">
          <source>Once you have cloned the Homestead repository, run the &lt;code&gt;bash init.sh&lt;/code&gt; command from the Homestead directory to create the &lt;code&gt;Homestead.yaml&lt;/code&gt; configuration file. The &lt;code&gt;Homestead.yaml&lt;/code&gt; file will be placed in the Homestead directory:</source>
          <target state="translated">Homesteadリポジトリを複製したら、Homesteadディレクトリから &lt;code&gt;bash init.sh&lt;/code&gt; コマンドを実行して、 &lt;code&gt;Homestead.yaml&lt;/code&gt; 構成ファイルを作成します。 &lt;code&gt;Homestead.yaml&lt;/code&gt; のファイルは、ホームステッドディレクトリに置かれます。</target>
        </trans-unit>
        <trans-unit id="48ad664c352ca50c58213132d716507539a6b7fe" translate="yes" xml:space="preserve">
          <source>Once you have completed your custom Valet driver, place it in the &lt;code&gt;~/.config/valet/Drivers&lt;/code&gt; directory using the &lt;code&gt;FrameworkValetDriver.php&lt;/code&gt; naming convention. For example, if you are writing a custom valet driver for WordPress, your file name should be &lt;code&gt;WordPressValetDriver.php&lt;/code&gt;.</source>
          <target state="translated">カスタムValetドライバーが完成したら、 &lt;code&gt;FrameworkValetDriver.php&lt;/code&gt; 命名規則を使用して &lt;code&gt;~/.config/valet/Drivers&lt;/code&gt; ディレクトリに配置します。たとえば、WordPressのカスタムバレードライバーを作成する場合、ファイル名はWordPressValetDriver.phpにする必要があり &lt;code&gt;WordPressValetDriver.php&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3681a918bc16e24c2feda3ddcb4df688ea0448b4" translate="yes" xml:space="preserve">
          <source>Once you have configured a notification to use the broadcast channel, you may listen for the broadcast events using Echo's &lt;code&gt;notification&lt;/code&gt; method. Remember, the channel name should match the class name of the entity receiving the notifications:</source>
          <target state="translated">ブロードキャストチャネルを使用するように通知を構成したら、Echoの &lt;code&gt;notification&lt;/code&gt; 方法を使用してブロードキャストイベントをリッスンできます。チャネル名は、通知を受信するエンティティのクラス名と一致する必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="31a1d0164c70d080b2f0b58553e56c9cb813baf4" translate="yes" xml:space="preserve">
          <source>Once you have configured a queue driver, set the value of the &lt;code&gt;queue&lt;/code&gt; option in your &lt;code&gt;config/scout.php&lt;/code&gt; configuration file to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="translated">キュードライバーを構成したら、 &lt;code&gt;config/scout.php&lt;/code&gt; 構成ファイルの &lt;code&gt;queue&lt;/code&gt; オプションの値を &lt;code&gt;true&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="8dbcb2242277254a95cf77047daec8886c4aabe9" translate="yes" xml:space="preserve">
          <source>Once you have configured the &lt;code&gt;custom&lt;/code&gt; channel, you're ready to define the class that will create your Monolog instance. This class only needs a single method: &lt;code&gt;__invoke&lt;/code&gt;, which should return the Monolog instance:</source>
          <target state="translated">&lt;code&gt;custom&lt;/code&gt; チャネルを構成したら、Monologインスタンスを作成するクラスを定義する準備が整います。このクラスは単一のメソッドのみを必要とします： &lt;code&gt;__invoke&lt;/code&gt; はMonologインスタンスを返します：</target>
        </trans-unit>
        <trans-unit id="8b00579996469556da8b79f5300b0750295c5ab3" translate="yes" xml:space="preserve">
          <source>Once you have configured the &lt;code&gt;tap&lt;/code&gt; option on your channel, you're ready to define the class that will customize your Monolog instance. This class only needs a single method: &lt;code&gt;__invoke&lt;/code&gt;, which receives an &lt;code&gt;Illuminate\Log\Logger&lt;/code&gt; instance. The &lt;code&gt;Illuminate\Log\Logger&lt;/code&gt; instance proxies all method calls to the underlying Monolog instance:</source>
          <target state="translated">チャネルに &lt;code&gt;tap&lt;/code&gt; オプションを設定したら、Monologインスタンスをカスタマイズするクラスを定義する準備が整います。このクラスに必要なのは、 &lt;code&gt;Illuminate\Log\Logger&lt;/code&gt; インスタンスを受け取る &lt;code&gt;__invoke&lt;/code&gt; という単一のメソッドのみです。 &lt;code&gt;Illuminate\Log\Logger&lt;/code&gt; インスタンスプロキシ基礎となるモノローグインスタンスへのすべてのメソッド呼び出し：</target>
        </trans-unit>
        <trans-unit id="0321cde90a69963b3b1638e2f348faca8dbed1da" translate="yes" xml:space="preserve">
          <source>Once you have configured your database connection, you may run queries using the &lt;code&gt;DB&lt;/code&gt; facade. The &lt;code&gt;DB&lt;/code&gt; facade provides methods for each type of query: &lt;code&gt;select&lt;/code&gt;, &lt;code&gt;update&lt;/code&gt;, &lt;code&gt;insert&lt;/code&gt;, &lt;code&gt;delete&lt;/code&gt;, and &lt;code&gt;statement&lt;/code&gt;.</source>
          <target state="translated">データベース接続を構成したら、 &lt;code&gt;DB&lt;/code&gt; ファサードを使用してクエリを実行できます。 &lt;code&gt;DB&lt;/code&gt; の：ファサードは、クエリの種類ごとに方法を提供 &lt;code&gt;select&lt;/code&gt; 、 &lt;code&gt;update&lt;/code&gt; 、 &lt;code&gt;insert&lt;/code&gt; 、 &lt;code&gt;delete&lt;/code&gt; 、および &lt;code&gt;statement&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8dd40626527e4db64d4923e386064bcfd08302cd" translate="yes" xml:space="preserve">
          <source>Once you have configured your workers in the &lt;code&gt;config/horizon.php&lt;/code&gt; configuration file, you may start Horizon using the &lt;code&gt;horizon&lt;/code&gt; Artisan command. This single command will start all of your configured workers:</source>
          <target state="translated">あなたはあなたの労働者を設定した後 &lt;code&gt;config/horizon.php&lt;/code&gt; 設定ファイルは、使用して地平線を開始すること &lt;code&gt;horizon&lt;/code&gt; 職人コマンドを。この単一のコマンドは、構成されたすべてのワーカーを開始します。</target>
        </trans-unit>
        <trans-unit id="6996bed92c8c57d20d5dd94da73a7a97368ff84a" translate="yes" xml:space="preserve">
          <source>Once you have created a model and &lt;a href=&quot;migrations#writing-migrations&quot;&gt;its associated database table&lt;/a&gt;, you are ready to start retrieving data from your database. Think of each Eloquent model as a powerful &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; allowing you to fluently query the database table associated with the model. For example:</source>
          <target state="translated">モデルと&lt;a href=&quot;migrations#writing-migrations&quot;&gt;それに関連付けられたデータベーステーブル&lt;/a&gt;を作成したら、データベースからデータを取得する準備が整います。各Eloquentモデルは、モデルに関連付けられたデータベーステーブルを流暢にクエリできる強力な&lt;a href=&quot;queries&quot;&gt;クエリビルダーと&lt;/a&gt;考えてください。例えば：</target>
        </trans-unit>
        <trans-unit id="fad591a89055392e8a6200a4ee1588daaa371051" translate="yes" xml:space="preserve">
          <source>Once you have created a password grant client, you may request an access token by issuing a &lt;code&gt;POST&lt;/code&gt; request to the &lt;code&gt;/oauth/token&lt;/code&gt; route with the user's email address and password. Remember, this route is already registered by the &lt;code&gt;Passport::routes&lt;/code&gt; method so there is no need to define it manually. If the request is successful, you will receive an &lt;code&gt;access_token&lt;/code&gt; and &lt;code&gt;refresh_token&lt;/code&gt; in the JSON response from the server:</source>
          <target state="translated">パスワード付与クライアントを作成したら、ユーザーのメールアドレスとパスワードを使用して &lt;code&gt;/oauth/token&lt;/code&gt; ルートに &lt;code&gt;POST&lt;/code&gt; リクエストを発行することにより、アクセストークンをリクエストできます。このルートは &lt;code&gt;Passport::routes&lt;/code&gt; メソッドによってすでに登録されているため、手動で定義する必要はありません。リクエストが成功した場合は、受信します &lt;code&gt;access_token&lt;/code&gt; はと &lt;code&gt;refresh_token&lt;/code&gt; サーバからのJSON応答では：</target>
        </trans-unit>
        <trans-unit id="56d4cd109045be6c25ef9f31f71d4b6e5457c66c" translate="yes" xml:space="preserve">
          <source>Once you have created a personal access client, you may issue tokens for a given user using the &lt;code&gt;createToken&lt;/code&gt; method on the &lt;code&gt;User&lt;/code&gt; model instance. The &lt;code&gt;createToken&lt;/code&gt; method accepts the name of the token as its first argument and an optional array of &lt;a href=&quot;#token-scopes&quot;&gt;scopes&lt;/a&gt; as its second argument:</source>
          <target state="translated">パーソナルアクセスクライアントを作成したら、 &lt;code&gt;User&lt;/code&gt; モデルインスタンスで &lt;code&gt;createToken&lt;/code&gt; メソッドを使用して、特定のユーザーのトークンを発行できます。 &lt;code&gt;createToken&lt;/code&gt; の方法は、最初の引数のオプション配列としてトークンの名前を受け付ける&lt;a href=&quot;#token-scopes&quot;&gt;スコープ&lt;/a&gt; 2番目の引数として。</target>
        </trans-unit>
        <trans-unit id="c1bf0f2f1e6dc254412470b7225a4ef061d6f2ca" translate="yes" xml:space="preserve">
          <source>Once you have created and registered the extension's service provider, you may use the &lt;code&gt;dropbox&lt;/code&gt; driver in your &lt;code&gt;config/filesystems.php&lt;/code&gt; configuration file.</source>
          <target state="translated">拡張機能のサービスプロバイダーを作成して登録したら、 &lt;code&gt;config/filesystems.php&lt;/code&gt; &lt;code&gt;dropbox&lt;/code&gt; 構成ファイルでdropboxドライバーを使用できます。</target>
        </trans-unit>
        <trans-unit id="0372bbd72a5b4801293e64b4ef28774369d7e653" translate="yes" xml:space="preserve">
          <source>Once you have created the service provider to register the extension, you may use the &lt;code&gt;dropbox&lt;/code&gt; driver in your &lt;code&gt;config/filesystems.php&lt;/code&gt; configuration file.</source>
          <target state="translated">拡張機能を登録するサービスプロバイダーを作成したら、 &lt;code&gt;config/filesystems.php&lt;/code&gt; 構成ファイルで &lt;code&gt;dropbox&lt;/code&gt; ドライバーを使用できます。</target>
        </trans-unit>
        <trans-unit id="b529d2a817ccd58ee6580c7565cbf666e8dfef96" translate="yes" xml:space="preserve">
          <source>Once you have defined a &lt;code&gt;newCollection&lt;/code&gt; method, you will receive an instance of your custom collection anytime Eloquent returns a &lt;code&gt;Collection&lt;/code&gt; instance of that model. If you would like to use a custom collection for every model in your application, you should override the &lt;code&gt;newCollection&lt;/code&gt; method on a base model class that is extended by all of your models.</source>
          <target state="translated">&lt;code&gt;newCollection&lt;/code&gt; メソッドを定義すると、Eloquentがそのモデルの &lt;code&gt;Collection&lt;/code&gt; インスタンスを返すたびに、カスタムコレクションのインスタンスを受け取ります。アプリケーションのすべてのモデルにカスタムコレクションを使用する場合は、すべてのモデルによって拡張される基本モデルクラスの &lt;code&gt;newCollection&lt;/code&gt; メソッドをオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="fcca71f8e09937b25f340713c0a3e65d7293360b" translate="yes" xml:space="preserve">
          <source>Once you have defined a custom cast type, you may attach it to a model attribute using its class name:</source>
          <target state="translated">カスタム・キャスト・タイプを定義したら、そのクラス名を使ってモデル属性にアタッチすることができます。</target>
        </trans-unit>
        <trans-unit id="78cb62cf54f94006e631a0c2c1a5c803e9ddf3e2" translate="yes" xml:space="preserve">
          <source>Once you have defined an event and marked it with the &lt;code&gt;ShouldBroadcast&lt;/code&gt; interface, you only need to fire the event using the &lt;code&gt;event&lt;/code&gt; function. The event dispatcher will notice that the event is marked with the &lt;code&gt;ShouldBroadcast&lt;/code&gt; interface and will queue the event for broadcasting:</source>
          <target state="translated">イベントを定義して &lt;code&gt;ShouldBroadcast&lt;/code&gt; インターフェースでマークしたら、 &lt;code&gt;event&lt;/code&gt; 関数を使用してイベントを発生させるだけです。イベントディスパッチャーは、イベントが &lt;code&gt;ShouldBroadcast&lt;/code&gt; インターフェイスでマークされていることを認識し、ブロードキャストするためにイベントをキューに入れます。</target>
        </trans-unit>
        <trans-unit id="a6b1a69f53115add8281335c0ee1706267886768" translate="yes" xml:space="preserve">
          <source>Once you have defined the routes and views to reset your user's passwords, you may access the route in your browser at &lt;code&gt;/password/reset&lt;/code&gt;. The &lt;code&gt;ForgotPasswordController&lt;/code&gt; included with the framework already includes the logic to send the password reset link e-mails, while the &lt;code&gt;ResetPasswordController&lt;/code&gt; includes the logic to reset user passwords.</source>
          <target state="translated">ユーザーのパスワードをリセットするためのルートとビューを定義したら、ブラウザーの &lt;code&gt;/password/reset&lt;/code&gt; でルートにアクセスできます。 &lt;code&gt;ForgotPasswordController&lt;/code&gt; はしながら、フレームワークはすでに、パスワードリセットのリンクを電子メールを送信するためのロジックが含まれて含まれ &lt;code&gt;ResetPasswordController&lt;/code&gt; がリセットユーザパスワードのロジックが含まれています。</target>
        </trans-unit>
        <trans-unit id="ea9a85be935d6841220fe5463b0b40499574b20c" translate="yes" xml:space="preserve">
          <source>Once you have defined your factories, you may use the global &lt;code&gt;factory&lt;/code&gt; function in your tests or seed files to generate model instances. So, let's take a look at a few examples of creating models. First, we'll use the &lt;code&gt;make&lt;/code&gt; method to create models but not save them to the database:</source>
          <target state="translated">ファクトリを定義したら、テストまたはシードファイルでグローバル &lt;code&gt;factory&lt;/code&gt; 関数を使用してモデルインスタンスを生成できます。それでは、モデルを作成するいくつかの例を見てみましょう。最初に、 &lt;code&gt;make&lt;/code&gt; メソッドを使用してモデルを作成しますが、データベースには保存しません。</target>
        </trans-unit>
        <trans-unit id="d2125ac97adb8c47a1a7b61617fe433a6d61dfa9" translate="yes" xml:space="preserve">
          <source>Once you have defined your factories, you may use the static &lt;code&gt;factory&lt;/code&gt; method provided by the &lt;code&gt;Illuminate\Database\Eloquent\Factories\HasFactory&lt;/code&gt; trait on your Eloquent models in order to instantiate a factory instance for that model:</source>
          <target state="translated">ファクトリを定義したら、そのモデルのファクトリインスタンスをインスタンス化するために、Eloquentモデルで &lt;code&gt;Illuminate\Database\Eloquent\Factories\HasFactory&lt;/code&gt; トレイトによって提供される静的 &lt;code&gt;factory&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="bc8aed3b26b4f3ab4da10a24cba3549725a2b7b1" translate="yes" xml:space="preserve">
          <source>Once you have edited the &lt;code&gt;Homestead.yaml&lt;/code&gt; to your liking, run the &lt;code&gt;vagrant up&lt;/code&gt; command from your Homestead directory. Vagrant will boot the virtual machine and automatically configure your shared folders and Nginx sites.</source>
          <target state="translated">&lt;code&gt;Homestead.yaml&lt;/code&gt; を好みに合わせて編集したら、Homesteadディレクトリから &lt;code&gt;vagrant up&lt;/code&gt; コマンドを実行します。Vagrantは仮想マシンを起動し、共有フォルダーとNginxサイトを自動的に構成します。</target>
        </trans-unit>
        <trans-unit id="589fb89a8cde69ef0fd2e39d4f4ad47de17ed97d" translate="yes" xml:space="preserve">
          <source>Once you have implemented the interface, Laravel will automatically use the preferred locale when sending mailables and notifications to the model. Therefore, there is no need to call the &lt;code&gt;locale&lt;/code&gt; method when using this interface:</source>
          <target state="translated">インターフェースを実装すると、Laravelはメール可能要素と通知をモデルに送信するときに自動的に優先ロケールを使用します。したがって、このインターフェースを使用する場合は、 &lt;code&gt;locale&lt;/code&gt; メソッドを呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="6e7eaac46fcb02f941ed3bf7520e34ae3ecc604d" translate="yes" xml:space="preserve">
          <source>Once you have implemented the interface, Laravel will automatically use the preferred locale when sending notifications and mailables to the model. Therefore, there is no need to call the &lt;code&gt;locale&lt;/code&gt; method when using this interface:</source>
          <target state="translated">インターフェースを実装すると、Laravelは通知とメールをモデルに送信するときに優先ロケールを自動的に使用します。したがって、このインターフェースを使用する場合は、 &lt;code&gt;locale&lt;/code&gt; メソッドを呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="5dd203ee3edffcd041f8ba80f44ed964bae3f630" translate="yes" xml:space="preserve">
          <source>Once you have installed and instantiated Echo, you are ready to start listening for event broadcasts. First, use the &lt;code&gt;channel&lt;/code&gt; method to retrieve an instance of a channel, then call the &lt;code&gt;listen&lt;/code&gt; method to listen for a specified event:</source>
          <target state="translated">Echoをインストールしてインスタンス化すると、イベントブロードキャストのリスニングを開始する準備が整います。まず、 &lt;code&gt;channel&lt;/code&gt; メソッドを使用してチャネルのインスタンスを取得し、次に &lt;code&gt;listen&lt;/code&gt; メソッドを呼び出して、指定されたイベントをリッスンします。</target>
        </trans-unit>
        <trans-unit id="367b0f79d7c24013cf9a54804db6b2b99d513f77" translate="yes" xml:space="preserve">
          <source>Once you have installed these libraries, you may obtain a PSR-7 request by type-hinting the request interface on your route Closure or controller method:</source>
          <target state="translated">これらのライブラリをインストールすると、ルートクロージャーまたはコントローラメソッドのリクエストインターフェースをタイプヒン トすることで、PSR-7リクエストを取得することができます。</target>
        </trans-unit>
        <trans-unit id="b931d2d38f511868539a891d04f3423dd1782e13" translate="yes" xml:space="preserve">
          <source>Once you have registered the middleware in your kernel, you may attach it to a route. If the incoming request does not have a valid signature, the middleware will automatically return a &lt;code&gt;403&lt;/code&gt; error response:</source>
          <target state="translated">カーネルにミドルウェアを登録したら、それをルートにアタッチできます。着信要求に有効な署名がない場合、ミドルウェアは自動的に &lt;code&gt;403&lt;/code&gt; エラー応答を返します。</target>
        </trans-unit>
        <trans-unit id="e145e159d7c1e36e660c4535d4fb9dfb5007cc73" translate="yes" xml:space="preserve">
          <source>Once you have registered your route, be sure to configure the webhook URL in your Braintree control panel settings.</source>
          <target state="translated">ルートを登録したら、Braintreeコントロールパネルの設定でwebhook URLを設定してください。</target>
        </trans-unit>
        <trans-unit id="a0089c38fc5b2cae2cc315ae0c42c613e948311b" translate="yes" xml:space="preserve">
          <source>Once you have registered your route, be sure to configure the webhook URL in your Stripe control panel settings.</source>
          <target state="translated">ルートを登録したら、必ずStripeコントロールパネルの設定でwebhook URLを設定してください。</target>
        </trans-unit>
        <trans-unit id="45642becaa692bbd75f7b31db22a0f9708ff1459" translate="yes" xml:space="preserve">
          <source>Once you have retrieved the results, you may display the results and render the page links using &lt;a href=&quot;blade&quot;&gt;Blade&lt;/a&gt; just as if you had paginated a traditional Eloquent query:</source>
          <target state="translated">結果を取得したら、従来のEloquentクエリにページ番号を付けたかのように、&lt;a href=&quot;blade&quot;&gt;Blade&lt;/a&gt;を使用して結果を表示し、ページリンクをレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="646f078df82db52466cd06fc5d3e71a090338593" translate="yes" xml:space="preserve">
          <source>Once you have updated your Nginx configuration, run the &lt;code&gt;valet restart&lt;/code&gt; command to apply the configuration changes.</source>
          <target state="translated">あなたはnginxの構成を更新した後、実行 &lt;code&gt;valet restart&lt;/code&gt; 設定の変更を適用するコマンドを。</target>
        </trans-unit>
        <trans-unit id="64c359b55cf660b17e0e4f1506f960873700c3d6" translate="yes" xml:space="preserve">
          <source>Once you have written your custom engine, you may register it with Scout using the &lt;code&gt;extend&lt;/code&gt; method of the Scout engine manager. You should call the &lt;code&gt;extend&lt;/code&gt; method from the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt; or any other service provider used by your application. For example, if you have written a &lt;code&gt;MySqlSearchEngine&lt;/code&gt;, you may register it like so:</source>
          <target state="translated">カスタムエンジンを作成したら、Scoutエンジンマネージャーの &lt;code&gt;extend&lt;/code&gt; メソッドを使用してそれをScoutに登録できます。あなたは呼び出す必要が &lt;code&gt;extend&lt;/code&gt; からメソッドを &lt;code&gt;boot&lt;/code&gt; あなたの方法 &lt;code&gt;AppServiceProvider&lt;/code&gt; またはアプリケーションで使用される他のサービスプロバイダ。たとえば、 &lt;code&gt;MySqlSearchEngine&lt;/code&gt; を記述した場合、次のように登録できます。</target>
        </trans-unit>
        <trans-unit id="4eeb96e2b61cd26a3b824e7467ad5e63b263ccec" translate="yes" xml:space="preserve">
          <source>Once you have written your job class, you may dispatch it using the &lt;code&gt;dispatch&lt;/code&gt; method on the job itself. The arguments passed to the &lt;code&gt;dispatch&lt;/code&gt; method will be given to the job's constructor:</source>
          <target state="translated">ジョブクラスを記述したら、ジョブ自体の &lt;code&gt;dispatch&lt;/code&gt; メソッドを使用してディスパッチできます。 &lt;code&gt;dispatch&lt;/code&gt; メソッドに渡される引数は、ジョブのコンストラクターに渡されます。</target>
        </trans-unit>
        <trans-unit id="c84ed5028edf64d06c832246300081add49030e2" translate="yes" xml:space="preserve">
          <source>Once you have written your seeder, you may need to regenerate Composer's autoloader using the &lt;code&gt;dump-autoload&lt;/code&gt; command:</source>
          <target state="translated">シーダーを作成したら、 &lt;code&gt;dump-autoload&lt;/code&gt; コマンドを使用してComposerのオートローダーを再生成する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="53ea5d7e1ed4076bae6e49ebbdee3ae913e8f03f" translate="yes" xml:space="preserve">
          <source>Once your Homestead environment is provisioned and running, you may want to add additional Nginx sites for your Laravel applications. You can run as many Laravel installations as you wish on a single Homestead environment. To add an additional site, add the site to your &lt;code&gt;Homestead.yaml&lt;/code&gt; file:</source>
          <target state="translated">Homestead環境がプロビジョニングされて実行されたら、Laravelアプリケーション用に追加のNginxサイトを追加することができます。単一のHomestead環境で、必要な数のLaravelインストールを実行できます。追加のサイトを追加するには、サイトを &lt;code&gt;Homestead.yaml&lt;/code&gt; ファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="183713380d6f48997fbcdc79a91f7ca87c641cf7" translate="yes" xml:space="preserve">
          <source>Once your component has been registered, it may be rendered using its tag alias:</source>
          <target state="translated">コンポーネントが登録されると、タグのエイリアスを使ってレンダリングすることができます。</target>
        </trans-unit>
        <trans-unit id="c48d0608230da59568fbc47fa7016f8d5ca1adaa" translate="yes" xml:space="preserve">
          <source>Once your custom authentication driver has been defined, you use it as a driver within the &lt;code&gt;guards&lt;/code&gt; configuration of your &lt;code&gt;auth.php&lt;/code&gt; configuration file:</source>
          <target state="translated">カスタム認証ドライバが定義されていたら、あなたは内のドライバーとしてそれを使用する &lt;code&gt;guards&lt;/code&gt; あなたの設定 &lt;code&gt;auth.php&lt;/code&gt; の設定ファイル：</target>
        </trans-unit>
        <trans-unit id="e6c028de64dd473adfcf52c553020ba0b3c52767" translate="yes" xml:space="preserve">
          <source>Once your custom guard has been defined, you may use this guard in the &lt;code&gt;guards&lt;/code&gt; configuration of your &lt;code&gt;auth.php&lt;/code&gt; configuration file:</source>
          <target state="translated">カスタムガードを定義したら、 &lt;code&gt;auth.php&lt;/code&gt; 構成ファイルの &lt;code&gt;guards&lt;/code&gt; 構成でこのガードを使用できます。</target>
        </trans-unit>
        <trans-unit id="169cbe782bc3c0548b23b96e8be0e7390669ef99" translate="yes" xml:space="preserve">
          <source>Once your database table and models are defined, you may access the relationships via your models. For example, to access all of the comments for a post, we can use the &lt;code&gt;comments&lt;/code&gt; dynamic property:</source>
          <target state="translated">データベーステーブルとモデルが定義されたら、モデルを介して関係にアクセスできます。たとえば、投稿のすべてのコメントにアクセスするには、 &lt;code&gt;comments&lt;/code&gt; 動的プロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="c95b862afab8ed2203a63235b2420dd93c143260" translate="yes" xml:space="preserve">
          <source>Once your database table and models are defined, you may access the relationships via your models. For example, to access all of the tags for a post, you can use the &lt;code&gt;tags&lt;/code&gt; dynamic property:</source>
          <target state="translated">データベーステーブルとモデルが定義されたら、モデルを介して関係にアクセスできます。たとえば、投稿のすべてのタグにアクセスするには、 &lt;code&gt;tags&lt;/code&gt; 動的プロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="9eea785b19889c27e22814c199352fd4affe3d6a" translate="yes" xml:space="preserve">
          <source>Once your database table and models are defined, you may access the relationships via your models. For example, to retrieve the image for a post, we can use the &lt;code&gt;image&lt;/code&gt; dynamic property:</source>
          <target state="translated">データベーステーブルとモデルが定義されると、モデルを介して関係にアクセスできます。たとえば、投稿の画像を取得するには、 &lt;code&gt;image&lt;/code&gt; 動的プロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="607a677623a10db0757e181ee67a9e5094724477" translate="yes" xml:space="preserve">
          <source>Once your driver has been implemented, you are ready to register it with the framework. To add additional drivers to Laravel's session backend, you may use the &lt;code&gt;extend&lt;/code&gt; method on the &lt;code&gt;Session&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. You should call the &lt;code&gt;extend&lt;/code&gt; method from the &lt;code&gt;boot&lt;/code&gt; method of a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;. You may do this from the existing &lt;code&gt;AppServiceProvider&lt;/code&gt; or create an entirely new provider:</source>
          <target state="translated">ドライバーが実装されたら、フレームワークにドライバーを登録する準備が整いました。Laravelのセッションバックエンドにドライバーを追加するには、 &lt;code&gt;Session&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサードの&lt;/a&gt; &lt;code&gt;extend&lt;/code&gt; メソッドを使用できます。&lt;a href=&quot;providers&quot;&gt;サービスプロバイダーの&lt;/a&gt; &lt;code&gt;boot&lt;/code&gt; メソッドから &lt;code&gt;extend&lt;/code&gt; メソッドを呼び出す必要があります。既存の &lt;code&gt;AppServiceProvider&lt;/code&gt; からこれを行うか、まったく新しいプロバイダーを作成できます。</target>
        </trans-unit>
        <trans-unit id="b38d1f7e9bd324e6efbb2c6b77a3ae18487990d5" translate="yes" xml:space="preserve">
          <source>Once your engine has been registered, you may specify it as your default Scout &lt;code&gt;driver&lt;/code&gt; in your &lt;code&gt;config/scout.php&lt;/code&gt; configuration file:</source>
          <target state="translated">エンジンが登録されたら、 &lt;code&gt;config/scout.php&lt;/code&gt; 構成ファイルでデフォルトのScout &lt;code&gt;driver&lt;/code&gt; として指定できます。</target>
        </trans-unit>
        <trans-unit id="77b01ef294c41969e6117cc6ef614db0a608d275" translate="yes" xml:space="preserve">
          <source>Once your extension is registered, update your &lt;code&gt;config/cache.php&lt;/code&gt; configuration file's &lt;code&gt;driver&lt;/code&gt; option to the name of your extension.</source>
          <target state="translated">拡張機能を登録したら、 &lt;code&gt;config/cache.php&lt;/code&gt; 構成ファイルの &lt;code&gt;driver&lt;/code&gt; オプションを拡張機能の名前に更新します。</target>
        </trans-unit>
        <trans-unit id="7a11630945c02ef8ede8137eb39c4565c7d29be1" translate="yes" xml:space="preserve">
          <source>Once your notification channel class has been defined, you may return the class name from the &lt;code&gt;via&lt;/code&gt; method of any of your notifications:</source>
          <target state="translated">通知チャネルクラスが定義されたら、通知の &lt;code&gt;via&lt;/code&gt; メソッドからクラス名を返すことができます。</target>
        </trans-unit>
        <trans-unit id="88272a48a008f5dafc0d9791efe938b6a3905b44" translate="yes" xml:space="preserve">
          <source>Once your package has been configured for discovery, Laravel will automatically register its service providers and facades when it is installed, creating a convenient installation experience for your package's users.</source>
          <target state="translated">パッケージをディスカバリー用に設定すると、Laravelはインストール時に自動的にサービスプロバイダとファサードを登録し、パッケージのユーザーに便利なインストール体験を提供します。</target>
        </trans-unit>
        <trans-unit id="efbad194bd50dc14538a464283f09e98d95eefc6" translate="yes" xml:space="preserve">
          <source>Once your package's migrations have been registered, they will automatically be run when the &lt;code&gt;php artisan migrate&lt;/code&gt; command is executed. You do not need to export them to the application's main &lt;code&gt;database/migrations&lt;/code&gt; directory.</source>
          <target state="translated">パッケージのマイグレーションが登録されると、 &lt;code&gt;php artisan migrate&lt;/code&gt; コマンドが実行されるときに自動的に実行されます。それらをアプリケーションのメイン &lt;code&gt;database/migrations&lt;/code&gt; ディレクトリにエクスポートする必要はありません。</target>
        </trans-unit>
        <trans-unit id="bcce96faf5a9fef4d0b1a74b223d0b7c60596591" translate="yes" xml:space="preserve">
          <source>Once your view components are registered in a service provider, you may reference them in your view like so:</source>
          <target state="translated">ビューのコンポーネントがサービスプロバイダに登録されると、以下のようにビュー内で参照することができます。</target>
        </trans-unit>
        <trans-unit id="d7b5b3a256fca0a6e91b4de23b29f8c39af86617" translate="yes" xml:space="preserve">
          <source>One To Many</source>
          <target state="translated">ワン・トゥ・モア</target>
        </trans-unit>
        <trans-unit id="e9d11155e59186ee93b0fde03da87ebc130b6512" translate="yes" xml:space="preserve">
          <source>One To Many (Inverse)</source>
          <target state="translated">一対多(逆</target>
        </trans-unit>
        <trans-unit id="e726520c55476217171aecaf9fda117dc3a7f737" translate="yes" xml:space="preserve">
          <source>One To Many (Polymorphic)</source>
          <target state="translated">ワン・トゥ・モア(多形</target>
        </trans-unit>
        <trans-unit id="ce638c764f774f0b2c7ce0a3d666129561c21c38" translate="yes" xml:space="preserve">
          <source>One To One</source>
          <target state="translated">マンツーマン</target>
        </trans-unit>
        <trans-unit id="51a3dc7762db6c385473f09d0581b3974117b6c4" translate="yes" xml:space="preserve">
          <source>One To One (Polymorphic)</source>
          <target state="translated">ワン・ツー・ワン(多形</target>
        </trans-unit>
        <trans-unit id="f8ed8aa878f35704080d650ebb6225c37d626996" translate="yes" xml:space="preserve">
          <source>One approach to specifying the maximum number of times a job may be attempted is via the &lt;code&gt;--tries&lt;/code&gt; switch on the Artisan command line:</source>
          <target state="translated">ジョブを試行できる最大回数を指定する1つの方法は、Artisanコマンドラインの &lt;code&gt;--tries&lt;/code&gt; スイッチを使用することです。</target>
        </trans-unit>
        <trans-unit id="6b3d2cbb022df1762da3d7d63d53c29211532d94" translate="yes" xml:space="preserve">
          <source>One common use of the session is for maintaining state for the authenticated user. The &lt;code&gt;actingAs&lt;/code&gt; helper method provides a simple way to authenticate a given user as the current user. For example, we may use a &lt;a href=&quot;database-testing#writing-factories&quot;&gt;model factory&lt;/a&gt; to generate and authenticate a user:</source>
          <target state="translated">セッションの一般的な使用法の1つは、認証されたユーザーの状態を維持することです。 &lt;code&gt;actingAs&lt;/code&gt; のヘルパーメソッドは、現在のユーザーとして指定したユーザを認証するための簡単な方法を提供します。たとえば、&lt;a href=&quot;database-testing#writing-factories&quot;&gt;モデルファクトリ&lt;/a&gt;を使用して、ユーザーを生成および認証できます。</target>
        </trans-unit>
        <trans-unit id="c492a8a1b12dd40bd5d44e94ebc0bec29ed6b1a6" translate="yes" xml:space="preserve">
          <source>One of the most important Kernel bootstrapping actions is loading the &lt;a href=&quot;providers&quot;&gt;service providers&lt;/a&gt; for your application. All of the service providers for the application are configured in the &lt;code&gt;config/app.php&lt;/code&gt; configuration file's &lt;code&gt;providers&lt;/code&gt; array. First, the &lt;code&gt;register&lt;/code&gt; method will be called on all providers, then, once all providers have been registered, the &lt;code&gt;boot&lt;/code&gt; method will be called.</source>
          <target state="translated">最も重要なカーネルブートストラップアクションの1つは、アプリケーションの&lt;a href=&quot;providers&quot;&gt;サービスプロバイダー&lt;/a&gt;をロードすることです。アプリケーションのすべてのサービスプロバイダーは、 &lt;code&gt;config/app.php&lt;/code&gt; 構成ファイルの &lt;code&gt;providers&lt;/code&gt; 配列で構成されます。最初に、すべてのプロバイダーで &lt;code&gt;register&lt;/code&gt; メソッドが呼び出され、次にすべてのプロバイダーが登録されると、 &lt;code&gt;boot&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c9a18fa98fb6e252cfef1cceda2d9a087d135cc7" translate="yes" xml:space="preserve">
          <source>One of the primary benefits of dependency injection is the ability to swap implementations of the injected class. This is useful during testing since you can inject a mock or stub and assert that various methods were called on the stub.</source>
          <target state="translated">依存性注入の主な利点の一つは、注入したクラスの実装を入れ替えることができることです。モックやスタブを注入して、さまざまなメソッドがスタブで呼び出されたことを主張できるので、これはテストの際に便利です。</target>
        </trans-unit>
        <trans-unit id="a643ad01733c71ef2a765e51399195f2958ee367" translate="yes" xml:space="preserve">
          <source>One potential downside to bundling all application-specific JavaScript with your vendor libraries is that it makes long-term caching more difficult. For example, a single update to your application code will force the browser to re-download all of your vendor libraries even if they haven't changed.</source>
          <target state="translated">すべてのアプリケーション固有の JavaScript をベンダーライブラリにバンドルすることの潜在的な欠点は、長期的なキャッシングをより困難にすることです。例えば、アプリケーションのコードを一回更新しただけで、たとえ変更がなくても、ブラウザはすべてのベンダライブラリを再ダウンロードすることを余儀なくされます。</target>
        </trans-unit>
        <trans-unit id="83eea746b0e8ff33fce14f5bcbd72c0e6100e2cd" translate="yes" xml:space="preserve">
          <source>Only To Others</source>
          <target state="translated">他の人にだけ</target>
        </trans-unit>
        <trans-unit id="948ee3edbba5f10d26d5b972f8051114d314b364" translate="yes" xml:space="preserve">
          <source>Only handle the given exceptions via the exception handler.</source>
          <target state="translated">与えられた例外は例外ハンドラを介してのみ処理します。</target>
        </trans-unit>
        <trans-unit id="6ec6356c6d86354eacc651dde3e40fc171f68135" translate="yes" xml:space="preserve">
          <source>Only handle validation exceptions via the exception handler.</source>
          <target state="translated">例外ハンドラを介した検証例外のみを処理します。</target>
        </trans-unit>
        <trans-unit id="783d7fd82a016de27a84f48526e30d86addfb867" translate="yes" xml:space="preserve">
          <source>Only include the given attribute from the attribute array.</source>
          <target state="translated">属性配列から与えられた属性のみを含める。</target>
        </trans-unit>
        <trans-unit id="9338a4919296611431099e0608e4c3a51d64bfba" translate="yes" xml:space="preserve">
          <source>Only the following column types can be &quot;changed&quot;: bigInteger, binary, boolean, date, dateTime, dateTimeTz, decimal, integer, json, longText, mediumText, smallInteger, string, text, time, unsignedBigInteger, unsignedInteger and unsignedSmallInteger.</source>
          <target state="translated">次のカラムタイプのみが「変更」できます:bigInteger、binary、boolean、date、dateTime、dateTimeTz、decimal、integer、json、longText、mediumText、smallInteger、string、text、time、unsignedBigInteger、unsignedInteger、unsignedSmallInteger。</target>
        </trans-unit>
        <trans-unit id="410cbfc673bb67a2f18129b7e781c9eaf4f861db" translate="yes" xml:space="preserve">
          <source>Only the following column types can be &quot;changed&quot;: bigInteger, binary, boolean, date, dateTime, dateTimeTz, decimal, integer, json, longText, mediumText, smallInteger, string, text, time, unsignedBigInteger, unsignedInteger, unsignedSmallInteger and uuid.</source>
          <target state="translated">次のカラムタイプのみが「変更」できます:bigInteger、binary、boolean、date、dateTime、dateTimeTz、decimal、integer、json、longText、mediumText、smallInteger、string、text、time、unsignedBigInteger、unsignedInteger、unsignedSmallInteger、およびuuid。</target>
        </trans-unit>
        <trans-unit id="3f6f4f65a5c2d22e34eeea2f07809bf79476fd3a" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;http://blog.test&lt;/code&gt; in your browser.</source>
          <target state="translated">ブラウザで &lt;code&gt;http://blog.test&lt;/code&gt; を開きます。</target>
        </trans-unit>
        <trans-unit id="3aad66359b2138f284f7b7c193ccda1cfced75c2" translate="yes" xml:space="preserve">
          <source>Open Resty</source>
          <target state="translated">オープンリスタイリング</target>
        </trans-unit>
        <trans-unit id="97cec377abbf189e791f3330222433ae7c8fd80e" translate="yes" xml:space="preserve">
          <source>OpenSSL PHP Extension</source>
          <target state="translated">OpenSSL PHP 拡張機能</target>
        </trans-unit>
        <trans-unit id="fdf5e093149fa15365c797b12b39a00d5ec3a138" translate="yes" xml:space="preserve">
          <source>Optimization</source>
          <target state="translated">Optimization</target>
        </trans-unit>
        <trans-unit id="57d3fee1738834b34737d215cafa8e090f96184d" translate="yes" xml:space="preserve">
          <source>OptimizeClearCommand</source>
          <target state="translated">OptimizeClearCommand</target>
        </trans-unit>
        <trans-unit id="004f3b0f762d02a457f18e0070cecb865d20eb03" translate="yes" xml:space="preserve">
          <source>OptimizeClearCommand (Foundation)</source>
          <target state="translated">OptimizeClearCommand (Foundation)</target>
        </trans-unit>
        <trans-unit id="c0ac703fe38cae0518c5b5476a75386329aa54b5" translate="yes" xml:space="preserve">
          <source>OptimizeClearCommand::handle()</source>
          <target state="translated">OptimizeClearCommand::handle()</target>
        </trans-unit>
        <trans-unit id="277459bf76b3500908f23b3ad6fc97409d76e160" translate="yes" xml:space="preserve">
          <source>OptimizeCommand</source>
          <target state="translated">OptimizeCommand</target>
        </trans-unit>
        <trans-unit id="89cf6733f3b5cce31d78c724e9286d076f2289ba" translate="yes" xml:space="preserve">
          <source>OptimizeCommand (Foundation)</source>
          <target state="translated">OptimizeCommand (Foundation)</target>
        </trans-unit>
        <trans-unit id="4062a04f5874695d4ad28f506ba11d033f2c9532" translate="yes" xml:space="preserve">
          <source>OptimizeCommand::handle()</source>
          <target state="translated">OptimizeCommand::handle()</target>
        </trans-unit>
        <trans-unit id="d65d683609438adb6faebad0b2d691f7b3979a5e" translate="yes" xml:space="preserve">
          <source>Optimizing Configuration Loading</source>
          <target state="translated">コンフィグレーションの読み込みを最適化</target>
        </trans-unit>
        <trans-unit id="9eddafccf6459a26ef8e98e3b8c2e82843a3ee5d" translate="yes" xml:space="preserve">
          <source>Optimizing Route Loading</source>
          <target state="translated">ルートローディングの最適化</target>
        </trans-unit>
        <trans-unit id="09d2bcfe1b58e3975786ccf5065ca664170526ef" translate="yes" xml:space="preserve">
          <source>Optimizing View Loading</source>
          <target state="translated">ビューの読み込みを最適化する</target>
        </trans-unit>
        <trans-unit id="127e92c021f22c696bd2b7bb2689201eb5e42ca9" translate="yes" xml:space="preserve">
          <source>Optimizing Views</source>
          <target state="translated">ビューの最適化</target>
        </trans-unit>
        <trans-unit id="d6adb173546faab6d04ac9bc17551a13f33aaf0a" translate="yes" xml:space="preserve">
          <source>Opting Out Of Package Discovery</source>
          <target state="translated">パッケージディスカバリーのオプトアウト</target>
        </trans-unit>
        <trans-unit id="add2890c59a6c1b97b7eead0ff3da77b5938c13d" translate="yes" xml:space="preserve">
          <source>Option Shortcuts</source>
          <target state="translated">オプションのショートカット</target>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="7d2e4859bc3992410c7c63502c7eae2c80a841fc" translate="yes" xml:space="preserve">
          <source>Optional (Support)</source>
          <target state="translated">オプション(サポート</target>
        </trans-unit>
        <trans-unit id="ddd2d4ec70a68949d8c75dd5fb57b7fa281e8e27" translate="yes" xml:space="preserve">
          <source>Optional Parameters</source>
          <target state="translated">オプションのパラメータ</target>
        </trans-unit>
        <trans-unit id="e4bb889a4d0f93d08d8ff362bd5363ca58619fda" translate="yes" xml:space="preserve">
          <source>Optional Software</source>
          <target state="translated">オプションソフトウェア</target>
        </trans-unit>
        <trans-unit id="14f61707f09982fc258894db2ba0dbbdf45dab63" translate="yes" xml:space="preserve">
          <source>Optional software is installed using the &quot;features&quot; setting in your Homestead configuration file. Most features can be enabled or disabled with a boolean value, while some features allow multiple configuration options:</source>
          <target state="translated">オプションのソフトウェアは、ホームステッドの設定ファイルの &quot;features &quot;設定を使用してインストールされます。ほとんどの機能はブール値で有効または無効にすることができますが、一部の機能では複数の設定オプションを許可しています。</target>
        </trans-unit>
        <trans-unit id="4dc6c7901f5fa1fca98d6f5841da6c008d4b7333" translate="yes" xml:space="preserve">
          <source>Optional::__call()</source>
          <target state="translated">Optional::__call()</target>
        </trans-unit>
        <trans-unit id="4ff609687da254b26637214000f727d77dd160be" translate="yes" xml:space="preserve">
          <source>Optional::__construct()</source>
          <target state="translated">Optional::__construct()</target>
        </trans-unit>
        <trans-unit id="bbcfdd550d5a5c763ba750028244f780bc4e308c" translate="yes" xml:space="preserve">
          <source>Optional::__get()</source>
          <target state="translated">Optional::__get()</target>
        </trans-unit>
        <trans-unit id="fcc1ab08d668ced95ddfa8175c1aa7dac01a42e5" translate="yes" xml:space="preserve">
          <source>Optional::__isset()</source>
          <target state="translated">Optional::__isset()</target>
        </trans-unit>
        <trans-unit id="0148d7f04040362a7844047a2c13ec2232581653" translate="yes" xml:space="preserve">
          <source>Optional::offsetExists()</source>
          <target state="translated">Optional::offsetExists()</target>
        </trans-unit>
        <trans-unit id="3745506e8aa62872cd510fa0ae2c8b777a87ca29" translate="yes" xml:space="preserve">
          <source>Optional::offsetGet()</source>
          <target state="translated">Optional::offsetGet()</target>
        </trans-unit>
        <trans-unit id="84b2004df2a43e71869c07990af96cface99449a" translate="yes" xml:space="preserve">
          <source>Optional::offsetSet()</source>
          <target state="translated">Optional::offsetSet()</target>
        </trans-unit>
        <trans-unit id="07f6f8b42b6c8086722f71273c78f38784a47bcb" translate="yes" xml:space="preserve">
          <source>Optional::offsetUnset()</source>
          <target state="translated">Optional::offsetUnset()</target>
        </trans-unit>
        <trans-unit id="32ab44bab8907bf42dde2cbdd6bc9b452525e9f3" translate="yes" xml:space="preserve">
          <source>Optionally, You may specify how many directory levels you wish to trim from the string:</source>
          <target state="translated">必要に応じて、文字列から削除するディレクトリレベルの数を指定することができます。</target>
        </trans-unit>
        <trans-unit id="165c1a233bb640ad4b932faa40912c1e1eb1e2cf" translate="yes" xml:space="preserve">
          <source>Optionally, a path to append to the app path</source>
          <target state="translated">オプションで、アプリのパスに追加するパス</target>
        </trans-unit>
        <trans-unit id="c534d0337cfaadf3b72aa4a7b01c017ed2273be8" translate="yes" xml:space="preserve">
          <source>Optionally, a path to append to the base path</source>
          <target state="translated">オプションで、ベースパスに追加するパス</target>
        </trans-unit>
        <trans-unit id="b41c833131384d7ad28d584b6067a549910a09a5" translate="yes" xml:space="preserve">
          <source>Optionally, a path to append to the bootstrap path</source>
          <target state="translated">オプションで、ブートストラップパスに追加するパス</target>
        </trans-unit>
        <trans-unit id="9c5c102f4806cbb97816e9d9a93deae1a6e1779f" translate="yes" xml:space="preserve">
          <source>Optionally, a path to append to the config path</source>
          <target state="translated">オプションで、設定パスに追加するパス</target>
        </trans-unit>
        <trans-unit id="171c4d4c4d036a3a2954a249f89653bd65f94a21" translate="yes" xml:space="preserve">
          <source>Optionally, a path to append to the database path</source>
          <target state="translated">オプションで、データベースのパスに追加するパス</target>
        </trans-unit>
        <trans-unit id="74275797cda17ec58502201f5fd410bc09b1ec61" translate="yes" xml:space="preserve">
          <source>Optionally, you may pass a comparison operator as the second parameter.</source>
          <target state="translated">オプションで、2 番目のパラメータとして比較演算子を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="981f6bff776dec09bf1d029e965764ad92482663" translate="yes" xml:space="preserve">
          <source>Options With Values</source>
          <target state="translated">値を持つオプション</target>
        </trans-unit>
        <trans-unit id="ff6ba97d71ba3730c84e2d432e3403b7ae4242a2" translate="yes" xml:space="preserve">
          <source>Options may be retrieved just as easily as arguments using the &lt;code&gt;option&lt;/code&gt; method. To retrieve all of the options as an array, call the &lt;code&gt;options&lt;/code&gt; method:</source>
          <target state="translated">オプションは、 &lt;code&gt;option&lt;/code&gt; メソッドを使用して、引数と同じくらい簡単に取得できます。すべてのオプションを配列として取得するには、 &lt;code&gt;options&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="7f84d19cd61bc8ba22d990fff1e617bf655df158" translate="yes" xml:space="preserve">
          <source>Options, like arguments, are another form of user input. Options are prefixed by two hyphens (&lt;code&gt;--&lt;/code&gt;) when they are specified on the command line. There are two types of options: those that receive a value and those that don't. Options that don't receive a value serve as a boolean &quot;switch&quot;. Let's take a look at an example of this type of option:</source>
          <target state="translated">オプションは、引数と同様に、ユーザー入力の別の形式です。オプションは、コマンドラインで指定される場合、2つのハイフン（ &lt;code&gt;--&lt;/code&gt; ）が前に付きます。オプションには2つのタイプがあります。値を受け取るオプションと受け取らないオプションです。値を受け取らないオプションは、ブール型の「スイッチ」として機能します。このタイプのオプションの例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="de6a51a14bfeec28e3705cbcea55985cd0de0b43" translate="yes" xml:space="preserve">
          <source>Or Statements</source>
          <target state="translated">またはステートメント</target>
        </trans-unit>
        <trans-unit id="6462ba904edb703e05ebb11d1a8985a91718f345" translate="yes" xml:space="preserve">
          <source>Or, if you defined the global scope using a Closure:</source>
          <target state="translated">または、クロージャーを使ってグローバルスコープを定義した場合。</target>
        </trans-unit>
        <trans-unit id="e4a79c9e967c3538e978804e2f5968c131cebda5" translate="yes" xml:space="preserve">
          <source>Or, if you would like to assert that no requests were sent, you may use the &lt;code&gt;assertNothingSent&lt;/code&gt; method:</source>
          <target state="translated">または、リクエストが送信されなかったことを表明したい場合は、 &lt;code&gt;assertNothingSent&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="7acfadaa36c539f589343f8a760309d549a3d8d9" translate="yes" xml:space="preserve">
          <source>Or, imagine you need to iterate through 10,000 Eloquent models. When using traditional Laravel collections, all 10,000 Eloquent models must be loaded into memory at the same time:</source>
          <target state="translated">あるいは、10,000個のEloquentモデルを反復処理する必要があると想像してみてください。従来のLaravelコレクションを使用する場合、10,000個のEloquentモデルを同時にメモリにロードする必要があります。</target>
        </trans-unit>
        <trans-unit id="19d1d12376b707d23a9b4ba4d6e46df7bbab717b" translate="yes" xml:space="preserve">
          <source>Or, you may determine if the application is running in a specific environment using the &lt;code&gt;@env&lt;/code&gt; directive:</source>
          <target state="translated">または、 &lt;code&gt;@env&lt;/code&gt; ディレクティブを使用して、アプリケーションが特定の環境で実行されているかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="cae63c111e17b1f7adcc01eb4f150242ff662f5b" translate="yes" xml:space="preserve">
          <source>Or, you may drag an element in a single direction:</source>
          <target state="translated">または、要素を一方向にドラッグすることもできます。</target>
        </trans-unit>
        <trans-unit id="dc5ed69914e09e7ebe77dc88ffd402a4bf0248af" translate="yes" xml:space="preserve">
          <source>Or, you may dynamically add the extra plan and its quantity using the &lt;code&gt;plan&lt;/code&gt; method:</source>
          <target state="translated">または、 &lt;code&gt;plan&lt;/code&gt; メソッドを使用して、追加のプランとその数量を動的に追加することもできます。</target>
        </trans-unit>
        <trans-unit id="1ac7a4a4a9271b381fcfc22a540c7a238ea4b665" translate="yes" xml:space="preserve">
          <source>Or, you may pass an array value which will automatically use the conventional constraint name when dropping:</source>
          <target state="translated">あるいは、ドロップ時に従来の制約名を自動的に使用する配列値を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="3ce1f78c64c981ca40b3528dfd154d1af5ea04d0" translate="yes" xml:space="preserve">
          <source>Or, you may use the &lt;code&gt;withHeaders&lt;/code&gt; method to specify an array of headers to be added to the response:</source>
          <target state="translated">または、 &lt;code&gt;withHeaders&lt;/code&gt; メソッドを使用して、応答に追加するヘッダーの配列を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="982658ed9ef001a153265c2ae6357d6ede084f63" translate="yes" xml:space="preserve">
          <source>Ordering, Grouping, Limit &amp;amp; Offset</source>
          <target state="translated">注文、グループ化、制限、オフセット</target>
        </trans-unit>
        <trans-unit id="708bbf4bb8be193a77ae6f4fc342b45d47694d3f" translate="yes" xml:space="preserve">
          <source>Ordering, Grouping, Limit, &amp;amp; Offset</source>
          <target state="translated">順序付け、グループ化、制限、およびオフセット</target>
        </trans-unit>
        <trans-unit id="a706da55ca042809d2a711a8277390f7a84e466b" translate="yes" xml:space="preserve">
          <source>Other Aggregate Functions</source>
          <target state="translated">その他の集計機能</target>
        </trans-unit>
        <trans-unit id="711f56b50b42c42736dc38d919ef7856731052be" translate="yes" xml:space="preserve">
          <source>Other Authentication Methods</source>
          <target state="translated">その他の認証方法</target>
        </trans-unit>
        <trans-unit id="54736d18d6c000ebf366f54a88706404cd31131e" translate="yes" xml:space="preserve">
          <source>Other Creation Methods</source>
          <target state="translated">その他の作成方法</target>
        </trans-unit>
        <trans-unit id="bb429c5b82118c9818e8fb4f4f68568012063ca7" translate="yes" xml:space="preserve">
          <source>Other Driver Prerequisites</source>
          <target state="translated">その他のドライバーの前提条件</target>
        </trans-unit>
        <trans-unit id="8cd3b2241218f25265f160c85439f7eacfa5eebc" translate="yes" xml:space="preserve">
          <source>Other File Information</source>
          <target state="translated">その他のファイル情報</target>
        </trans-unit>
        <trans-unit id="57df84813a2f7cfd48fe0486d548487f96419835" translate="yes" xml:space="preserve">
          <source>Other File Methods</source>
          <target state="translated">その他のファイル方法</target>
        </trans-unit>
        <trans-unit id="826878c8adef68cc8d316bcaf42eb13fee869774" translate="yes" xml:space="preserve">
          <source>Other Notification Formatting Options</source>
          <target state="translated">その他の通知フォーマットオプション</target>
        </trans-unit>
        <trans-unit id="210bb7b6c14c2cd07e14c90db438e7cfa4e10246" translate="yes" xml:space="preserve">
          <source>Other Response Types</source>
          <target state="translated">その他のレスポンスタイプ</target>
        </trans-unit>
        <trans-unit id="ae5fa9c446927217a1163250b10c7f1ff3bd7bd6" translate="yes" xml:space="preserve">
          <source>Other Valet Commands</source>
          <target state="translated">その他のバレットコマンド</target>
        </trans-unit>
        <trans-unit id="cd151cdfde5d03fce19a449e90f19a03b4971b7b" translate="yes" xml:space="preserve">
          <source>OtherDeviceLogout</source>
          <target state="translated">OtherDeviceLogout</target>
        </trans-unit>
        <trans-unit id="a20ee1204087471642de778043316a6d05be35a5" translate="yes" xml:space="preserve">
          <source>OtherDeviceLogout (Auth\Events)</source>
          <target state="translated">OtherDeviceLogout (AuthEvents)</target>
        </trans-unit>
        <trans-unit id="13a95e1ba0042c6b403f1f13e9de6e4ba84f6ebd" translate="yes" xml:space="preserve">
          <source>OtherDeviceLogout::__construct()</source>
          <target state="translated">OtherDeviceLogout::__construct()</target>
        </trans-unit>
        <trans-unit id="033de34820b406a69877e541a6a8c4d89cfd5bcc" translate="yes" xml:space="preserve">
          <source>Out of the box, Laravel comes with &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;api&lt;/code&gt; middleware groups that contain common middleware you may want to apply to your web UI and API routes:</source>
          <target state="translated">Laravelには、Web UIおよびAPIルートに適用する可能性のある一般的なミドルウェアを含む &lt;code&gt;web&lt;/code&gt; および &lt;code&gt;api&lt;/code&gt; ミドルウェアグループが付属しています。</target>
        </trans-unit>
        <trans-unit id="fa5c3fa2473c4bc7862c9e710202fe7ba2cae074" translate="yes" xml:space="preserve">
          <source>Out of the box, Valet support includes, but is not limited to:</source>
          <target state="translated">箱から出して、バレットのサポートには以下のものが含まれますが、これに限定されません。</target>
        </trans-unit>
        <trans-unit id="732410733465c2e80a5bbfe806269a8b0bd17946" translate="yes" xml:space="preserve">
          <source>Out of the box, the &lt;code&gt;web&lt;/code&gt; middleware group is automatically applied to your &lt;code&gt;routes/web.php&lt;/code&gt; file by the &lt;code&gt;RouteServiceProvider&lt;/code&gt;.</source>
          <target state="translated">箱から出して、 &lt;code&gt;web&lt;/code&gt; ミドルウェアグループが自動的に適用され &lt;code&gt;routes/web.php&lt;/code&gt; でファイル &lt;code&gt;RouteServiceProvider&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8331b8fdac1d0a8b2e5dbbe84325fffe288fa13b" translate="yes" xml:space="preserve">
          <source>OutputInterface</source>
          <target state="translated">OutputInterface</target>
        </trans-unit>
        <trans-unit id="4247ee43cbd1335b63f72b1ac799bac77acdc187" translate="yes" xml:space="preserve">
          <source>OutputInterface|null</source>
          <target state="translated">OutputInterface|null</target>
        </trans-unit>
        <trans-unit id="96a113f0b3d6ae0b36c5a571a3a2dfd07d9803bc" translate="yes" xml:space="preserve">
          <source>OutputStyle</source>
          <target state="translated">OutputStyle</target>
        </trans-unit>
        <trans-unit id="02e6cd3028c02062ddef45b083db3545020e3409" translate="yes" xml:space="preserve">
          <source>OutputStyle (Console)</source>
          <target state="translated">出力スタイル(コンソール</target>
        </trans-unit>
        <trans-unit id="efe473b2feecac35d478d4ea1058bc7935135755" translate="yes" xml:space="preserve">
          <source>OutputStyle::__construct()</source>
          <target state="translated">OutputStyle::__construct()</target>
        </trans-unit>
        <trans-unit id="fa2205df6f90c3c72452167c9ba136ba369be626" translate="yes" xml:space="preserve">
          <source>OutputStyle::isDebug()</source>
          <target state="translated">OutputStyle::isDebug()</target>
        </trans-unit>
        <trans-unit id="cc426e997c9175961dcd330f4d0240dea16eed48" translate="yes" xml:space="preserve">
          <source>OutputStyle::isQuiet()</source>
          <target state="translated">OutputStyle::isQuiet()</target>
        </trans-unit>
        <trans-unit id="5babb247bbbefb2c7f9f67912776af0c07d6942c" translate="yes" xml:space="preserve">
          <source>OutputStyle::isVerbose()</source>
          <target state="translated">OutputStyle::isVerbose()</target>
        </trans-unit>
        <trans-unit id="06b57189026722f05857adde35d1209dcb2361c5" translate="yes" xml:space="preserve">
          <source>OutputStyle::isVeryVerbose()</source>
          <target state="translated">OutputStyle::isVeryVerbose()</target>
        </trans-unit>
        <trans-unit id="6e2d12bda69bc52985afb42435592e408d3aeee8" translate="yes" xml:space="preserve">
          <source>Override a route parameter's name.</source>
          <target state="translated">ルートパラメータの名前を上書きします。</target>
        </trans-unit>
        <trans-unit id="1a5ecc7d22f228806cdd6f3c9bc951787074cbe3" translate="yes" xml:space="preserve">
          <source>Override the QueueManager to prevent circular dependency.</source>
          <target state="translated">循環依存を防ぐためにQueueManagerをオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="11a7c5dd6a0ac2eaf58b15e381b3df45f9a4a1ad" translate="yes" xml:space="preserve">
          <source>Override the route parameter names.</source>
          <target state="translated">経路パラメータ名を上書きします。</target>
        </trans-unit>
        <trans-unit id="2c197686917b87f681079e300d46c9cd7ef2df5e" translate="yes" xml:space="preserve">
          <source>Overriding Attributes</source>
          <target state="translated">オーバーライド属性</target>
        </trans-unit>
        <trans-unit id="132cece98d528e26b66655fb0c214bde28fb8520" translate="yes" xml:space="preserve">
          <source>Overriding Default Models</source>
          <target state="translated">デフォルトモデルの上書き</target>
        </trans-unit>
        <trans-unit id="0568d16c11aa1fbd3531524004241092cfda9e4d" translate="yes" xml:space="preserve">
          <source>Overriding Package Language Files</source>
          <target state="translated">パッケージ言語ファイルの上書き</target>
        </trans-unit>
        <trans-unit id="fd45062882bda197aea43afd3f9fa937faae2745" translate="yes" xml:space="preserve">
          <source>Overriding Package Views</source>
          <target state="translated">パッケージのビューを上書きする</target>
        </trans-unit>
        <trans-unit id="08ae4c719b89460ac01158ec4157b588ff8ac111" translate="yes" xml:space="preserve">
          <source>PASSWORD_RESET</source>
          <target state="translated">PASSWORD_RESET</target>
        </trans-unit>
        <trans-unit id="0fd293c5663a280057b90d59c5a6f92d052b824e" translate="yes" xml:space="preserve">
          <source>PDO</source>
          <target state="translated">PDO</target>
        </trans-unit>
        <trans-unit id="46c716421e07d5d225ef9c8fd74b3fa425748617" translate="yes" xml:space="preserve">
          <source>PDO PHP Extension</source>
          <target state="translated">PDO PHP 拡張機能</target>
        </trans-unit>
        <trans-unit id="904959da9d1cdd700305ad85c749e33df8e0dfad" translate="yes" xml:space="preserve">
          <source>PDO does not support binding column names. Therefore, you should never allow user input to dictate the column names referenced by your queries, including &quot;order by&quot; columns, etc. If you must allow the user to select certain columns to query against, always validate the column names against a white-list of allowed columns.</source>
          <target state="translated">PDO は、カラム名のバインディングをサポートしていません。そのため、&quot;order by&quot; カラムなどを含め、 クエリで参照するカラム名をユーザが指定することは絶対に避けなければなりません。クエリの対象となる特定のカラムをユーザが選択できるようにしなければならない場合は、 そのカラム名を、許可されているカラムのホワイトリストと照らし合わせて常に検証します。</target>
        </trans-unit>
        <trans-unit id="904fe583b3a14523a7a3b02d3cf8a3e8db9dcb75" translate="yes" xml:space="preserve">
          <source>PDOException</source>
          <target state="translated">PDOException</target>
        </trans-unit>
        <trans-unit id="b9e08625c922fff5d0868f981f1eda2a6407579c" translate="yes" xml:space="preserve">
          <source>PDOStatement</source>
          <target state="translated">PDOStatement</target>
        </trans-unit>
        <trans-unit id="7daf403c7589f4927632ed3b6af762a992f09b78" translate="yes" xml:space="preserve">
          <source>PHP</source>
          <target state="translated">PHP</target>
        </trans-unit>
        <trans-unit id="d62affb7a0589932470e6b631e3b159fe89b084c" translate="yes" xml:space="preserve">
          <source>PHP &amp;gt;= 7.1.3</source>
          <target state="translated">PHP&amp;gt; = 7.1.3</target>
        </trans-unit>
        <trans-unit id="a3ff01c252706d4f4d485b74cfb83870cb13bc66" translate="yes" xml:space="preserve">
          <source>PHP &amp;gt;= 7.3</source>
          <target state="translated">PHP&amp;gt; = 7.3</target>
        </trans-unit>
        <trans-unit id="d1aed3af8fea9e1131f132d8f884513eac36526d" translate="yes" xml:space="preserve">
          <source>PHP 5.6</source>
          <target state="translated">PHP 5.6</target>
        </trans-unit>
        <trans-unit id="a2c6b1148f60202b8876fd255ec24225c882d487" translate="yes" xml:space="preserve">
          <source>PHP 7.0</source>
          <target state="translated">PHP 7.0</target>
        </trans-unit>
        <trans-unit id="3ef7942a209385795dce9d9bb5cea487cd13eaa8" translate="yes" xml:space="preserve">
          <source>PHP 7.1</source>
          <target state="translated">PHP 7.1</target>
        </trans-unit>
        <trans-unit id="cb28a60e5307c0e5ce9b0aa4a473eadeddf4f565" translate="yes" xml:space="preserve">
          <source>PHP 7.2</source>
          <target state="translated">PHP 7.2</target>
        </trans-unit>
        <trans-unit id="9a36e294ca9ee8a7ec1dfb9859b4d397dc3a9453" translate="yes" xml:space="preserve">
          <source>PHP 7.3</source>
          <target state="translated">PHP 7.3</target>
        </trans-unit>
        <trans-unit id="37c98bdf87bbe536f8c9c90a41463dafae3cb21f" translate="yes" xml:space="preserve">
          <source>PHP 7.3.0 Required</source>
          <target state="translated">PHP 7.3.0必須</target>
        </trans-unit>
        <trans-unit id="4cc161e929b57c848a91456bf1d5c0804ecf6323" translate="yes" xml:space="preserve">
          <source>PHP 7.4</source>
          <target state="translated">PHP 7.4</target>
        </trans-unit>
        <trans-unit id="bfd14a809df4fb7b25d575248f378373bcb10b92" translate="yes" xml:space="preserve">
          <source>PHP Versions</source>
          <target state="translated">PHPのバージョン</target>
        </trans-unit>
        <trans-unit id="85538f4ece874dfd2badc6926b5513683ce2efba" translate="yes" xml:space="preserve">
          <source>PHP-FPM pool configuration file.</source>
          <target state="translated">PHP-FPM プール設定ファイル。</target>
        </trans-unit>
        <trans-unit id="e3c9ad7f18d8c8b4ef0746c50f604407fdc1e84b" translate="yes" xml:space="preserve">
          <source>PHPDoc</source>
          <target state="translated">PHPDoc</target>
        </trans-unit>
        <trans-unit id="885406d21e0b67e81c188e8aac4751a3ede8af09" translate="yes" xml:space="preserve">
          <source>PM2</source>
          <target state="translated">PM2</target>
        </trans-unit>
        <trans-unit id="551a473efe7a33789f6357ab1ce7928e5fa844c8" translate="yes" xml:space="preserve">
          <source>POINT equivalent column.</source>
          <target state="translated">POINT相当の列。</target>
        </trans-unit>
        <trans-unit id="5ab8f27e739ad716a5d971aee493088294787e53" translate="yes" xml:space="preserve">
          <source>POLYGON equivalent column.</source>
          <target state="translated">POLYGON相当のカラム。</target>
        </trans-unit>
        <trans-unit id="61ff81c30aa3c76e78afea62b2e3bd1dfa49e854" translate="yes" xml:space="preserve">
          <source>POST</source>
          <target state="translated">POST</target>
        </trans-unit>
        <trans-unit id="1ba9f539e88976e1911a4468208c794fa5a515c3" translate="yes" xml:space="preserve">
          <source>PSR-11</source>
          <target state="translated">PSR-11</target>
        </trans-unit>
        <trans-unit id="fd7d3124019c66e70da6e173d313dffe731261ad" translate="yes" xml:space="preserve">
          <source>PSR-7 Requests</source>
          <target state="translated">PSR-7 リクエスト</target>
        </trans-unit>
        <trans-unit id="474b22406b296c9c0323a374ec00711a72870ee7" translate="yes" xml:space="preserve">
          <source>PUT/PATCH</source>
          <target state="translated">PUT/PATCH</target>
        </trans-unit>
        <trans-unit id="1eba08f925ba672e8e0197642bf9086a37ebf655" translate="yes" xml:space="preserve">
          <source>Package Development</source>
          <target state="translated">パッケージ開発</target>
        </trans-unit>
        <trans-unit id="4bc3d9c2b12355d9081b7a9d8f9621d017378486" translate="yes" xml:space="preserve">
          <source>Package Discovery</source>
          <target state="translated">パッケージディスカバリー</target>
        </trans-unit>
        <trans-unit id="3ab84fcf4030404362eefac73c16ff8d7174f9a2" translate="yes" xml:space="preserve">
          <source>Package translations are referenced using the &lt;code&gt;package::file.line&lt;/code&gt; syntax convention. So, you may load the &lt;code&gt;courier&lt;/code&gt; package's &lt;code&gt;welcome&lt;/code&gt; line from the &lt;code&gt;messages&lt;/code&gt; file like so:</source>
          <target state="translated">パッケージ変換は、 &lt;code&gt;package::file.line&lt;/code&gt; 構文規則を使用して参照されます。したがって、次のように &lt;code&gt;messages&lt;/code&gt; ファイルから &lt;code&gt;courier&lt;/code&gt; パッケージの &lt;code&gt;welcome&lt;/code&gt; ラインをロードできます。</target>
        </trans-unit>
        <trans-unit id="3d1ef1c32d7591c913837781371cbb8c15e79cbb" translate="yes" xml:space="preserve">
          <source>Package views are referenced using the &lt;code&gt;package::view&lt;/code&gt; syntax convention. So, once your view path is registered in a service provider, you may load the &lt;code&gt;admin&lt;/code&gt; view from the &lt;code&gt;courier&lt;/code&gt; package like so:</source>
          <target state="translated">パッケージビューは、 &lt;code&gt;package::view&lt;/code&gt; 構文規則を使用して参照されます。したがって、ビューパスがサービスプロバイダーに登録されたら、次のように &lt;code&gt;courier&lt;/code&gt; パッケージから &lt;code&gt;admin&lt;/code&gt; ビューをロードできます。</target>
        </trans-unit>
        <trans-unit id="39c60c38bf50f80fbd60556a6dbaa91b9044d9fb" translate="yes" xml:space="preserve">
          <source>PackageDiscoverCommand</source>
          <target state="translated">PackageDiscoverCommand</target>
        </trans-unit>
        <trans-unit id="b27af96d684859be2756be417788cc0f0dd062e8" translate="yes" xml:space="preserve">
          <source>PackageDiscoverCommand (Foundation)</source>
          <target state="translated">PackageDiscoverCommand (Foundation)</target>
        </trans-unit>
        <trans-unit id="8e25b8f6766e04e90ce801b8466109e0ad30f8e2" translate="yes" xml:space="preserve">
          <source>PackageDiscoverCommand::handle()</source>
          <target state="translated">PackageDiscoverCommand::handle()</target>
        </trans-unit>
        <trans-unit id="30b4956bd5a193621c8f772e53e07a6012791cfe" translate="yes" xml:space="preserve">
          <source>PackageManifest</source>
          <target state="translated">PackageManifest</target>
        </trans-unit>
        <trans-unit id="03071c91dba5bf9160bb023e906a3643d2488a86" translate="yes" xml:space="preserve">
          <source>PackageManifest (Foundation)</source>
          <target state="translated">PackageManifest (Foundation)</target>
        </trans-unit>
        <trans-unit id="1946eaf7ea952f6cd57cdd347c01b401c529777c" translate="yes" xml:space="preserve">
          <source>PackageManifest::__construct()</source>
          <target state="translated">PackageManifest::__construct()</target>
        </trans-unit>
        <trans-unit id="7df903ae2b45222ee4f155daec5eeea2c319f835" translate="yes" xml:space="preserve">
          <source>PackageManifest::aliases()</source>
          <target state="translated">PackageManifest::aliases()</target>
        </trans-unit>
        <trans-unit id="5c0c7cf83d4419df84b515b3a130fccf72c953ef" translate="yes" xml:space="preserve">
          <source>PackageManifest::build()</source>
          <target state="translated">PackageManifest::build()</target>
        </trans-unit>
        <trans-unit id="35cb2062cc44ef6b866e22ec9550366a32201e6c" translate="yes" xml:space="preserve">
          <source>PackageManifest::config()</source>
          <target state="translated">PackageManifest::config()</target>
        </trans-unit>
        <trans-unit id="8814507fdce12696265a5c3a5c403936ad125c52" translate="yes" xml:space="preserve">
          <source>PackageManifest::format()</source>
          <target state="translated">PackageManifest::format()</target>
        </trans-unit>
        <trans-unit id="b733cfff5efa04f6c5c7e978c7066b612f10c752" translate="yes" xml:space="preserve">
          <source>PackageManifest::getManifest()</source>
          <target state="translated">PackageManifest::getManifest()</target>
        </trans-unit>
        <trans-unit id="ec010ede64bbb840b9aeed369feffabaf82d919b" translate="yes" xml:space="preserve">
          <source>PackageManifest::packagesToIgnore()</source>
          <target state="translated">PackageManifest::packagesToIgnore()</target>
        </trans-unit>
        <trans-unit id="f0134ca248154ce028b3d2fd5a2c3e02674a5c8c" translate="yes" xml:space="preserve">
          <source>PackageManifest::providers()</source>
          <target state="translated">PackageManifest::providers()</target>
        </trans-unit>
        <trans-unit id="b3382c0abc3310727c34e7cad01fbdcecd3acebd" translate="yes" xml:space="preserve">
          <source>PackageManifest::write()</source>
          <target state="translated">PackageManifest::write()</target>
        </trans-unit>
        <trans-unit id="458bca0e48d7bd2c0bf1b0eed8786f097e673ef4" translate="yes" xml:space="preserve">
          <source>Packages are the primary way of adding functionality to Laravel. Packages might be anything from a great way to work with dates like &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt;, or an entire BDD testing framework like &lt;a href=&quot;https://github.com/Behat/Behat&quot;&gt;Behat&lt;/a&gt;.</source>
          <target state="translated">パッケージは、Laravelに機能を追加する主要な方法です。パッケージは、&lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbonの&lt;/a&gt;ような日付を操作するための優れた方法や、&lt;a href=&quot;https://github.com/Behat/Behat&quot;&gt;Behatの&lt;/a&gt;ようなBDDテストフレームワーク全体のいずれでもかまいません。</target>
        </trans-unit>
        <trans-unit id="b9fa760746711d261416f71ea49f9ff24bfe35ad" translate="yes" xml:space="preserve">
          <source>Pad both sides of a string with another.</source>
          <target state="translated">紐の両側を別のものでパッドします。</target>
        </trans-unit>
        <trans-unit id="399852ad66f571393ffbab9e90aef24a1d412048" translate="yes" xml:space="preserve">
          <source>Pad both sides of the string with another.</source>
          <target state="translated">別の文字列の両側をパッドします。</target>
        </trans-unit>
        <trans-unit id="95490db02effaf7a16eeb5a52114294d103a1ca7" translate="yes" xml:space="preserve">
          <source>Pad collection to the specified length with a value.</source>
          <target state="translated">コレクションを値で指定した長さにパッドします。</target>
        </trans-unit>
        <trans-unit id="36be0bc1dbf3d04204fac9e844b8931f8b70e286" translate="yes" xml:space="preserve">
          <source>Pad the left side of a string with another.</source>
          <target state="translated">紐の左側を別の紐でパッドします。</target>
        </trans-unit>
        <trans-unit id="53484d489a08cde69553198b3603a7fe5d40aabf" translate="yes" xml:space="preserve">
          <source>Pad the left side of the string with another.</source>
          <target state="translated">紐の左側を別の紐でパッドします。</target>
        </trans-unit>
        <trans-unit id="aeda495d09c06093014c1a41564b157b8fba75e3" translate="yes" xml:space="preserve">
          <source>Pad the right side of a string with another.</source>
          <target state="translated">紐の右側を別の紐でパッドします。</target>
        </trans-unit>
        <trans-unit id="f4d5058ad7282458fc3c4b0b3cd9cc6f1e16a040" translate="yes" xml:space="preserve">
          <source>Pad the right side of the string with another.</source>
          <target state="translated">紐の右側を別のものでパッドします。</target>
        </trans-unit>
        <trans-unit id="0ef9bf385e0fa67704b048d17e19900fad9c04e3" translate="yes" xml:space="preserve">
          <source>Paddle JS</source>
          <target state="translated">パドルJS</target>
        </trans-unit>
        <trans-unit id="f667ada3af3c2c6f0f7906a48ac612ff61512ae9" translate="yes" xml:space="preserve">
          <source>Paddle allows you to customize prices per currency, essentially allowing you to configure different prices for different countries. Cashier Paddle allows you to retrieve all of the prices for a given product using the &lt;code&gt;productPrices&lt;/code&gt; method:</source>
          <target state="translated">パドルを使用すると、通貨ごとの価格をカスタマイズできます。基本的に、国ごとに異なる価格を構成できます。キャッシャーパドルを使用すると、 &lt;code&gt;productPrices&lt;/code&gt; メソッドを使用して、特定の製品のすべての価格を取得できます。</target>
        </trans-unit>
        <trans-unit id="556f3933e156206f28668d0ba8fc5c63993e49e4" translate="yes" xml:space="preserve">
          <source>Paddle always saves a payment method per subscription. If you want to update the default payment method for a subscription, you should first generate a subscription &quot;update URL&quot; using the &lt;code&gt;updateUrl&lt;/code&gt; method on the subscription model:</source>
          <target state="translated">Paddleは、サブスクリプションごとに常に支払い方法を保存します。サブスクリプションのデフォルトの支払い方法を更新する場合は、最初に、サブスクリプションモデルで &lt;code&gt;updateUrl&lt;/code&gt; メソッドを使用してサブスクリプションの「更新URL」を生成する必要があります。</target>
        </trans-unit>
        <trans-unit id="ba0305ef50dd79f339f230778c81834d2280218a" translate="yes" xml:space="preserve">
          <source>Paddle can notify your application of a variety of events via webhooks. By default, a route that points to Cashier's webhook controller is configured through the Cashier service provider. This controller will handle all incoming webhook requests.</source>
          <target state="translated">Paddleは、Webhookを介して様々なイベントをアプリケーションに通知することができます。デフォルトでは、Cashierのwebhookコントローラーを指すルートがCashierサービスプロバイダを通じて設定されています。このコントローラはすべての着信webhookリクエストを処理します。</target>
        </trans-unit>
        <trans-unit id="f211627b787bb04f3d09ceda73b31c3c4604e683" translate="yes" xml:space="preserve">
          <source>Paddle currently lacks a proper CRUD API so you will need to manually test your billing flow. Paddle also lacks a sandboxed developer environment so any card charges you make are live charges. In order to work around this, we recommend you use coupons with a 100% discount or free products during testing.</source>
          <target state="translated">Paddleには現在、適切なCRUD APIがないため、課金フローを手動でテストする必要があります。また、Paddleにはサンドボックス化された開発者環境がないため、あなたが行ったカードチャージはすべてライブチャージとなります。これを回避するためには、テスト中に100%割引のクーポンや無料の製品を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="44542857ced33c0b37148c972ad105f24030d425" translate="yes" xml:space="preserve">
          <source>Paddle lacks an extensive CRUD API to perform state changes. Therefore, most interactions with Paddle are done through &lt;a href=&quot;https://developer.paddle.com/guides/how-tos/checkout/paddle-checkout&quot;&gt;its checkout widget&lt;/a&gt;. Before we can display the checkout widget, we will generate a &quot;pay link&quot; using Cashier:</source>
          <target state="translated">Paddleには、状態変更を実行するための広範なCRUDAPIがありません。したがって、Paddleとのほとんどの対話は&lt;a href=&quot;https://developer.paddle.com/guides/how-tos/checkout/paddle-checkout&quot;&gt;、チェックアウトウィジェットを&lt;/a&gt;介して行われます。チェックアウトウィジェットを表示する前に、キャッシャーを使用して「支払いリンク」を生成します。</target>
        </trans-unit>
        <trans-unit id="5a98083a0d9b22af833532b2984e970d257c6161" translate="yes" xml:space="preserve">
          <source>Paddle relies on its own JavaScript library to initiate the Paddle checkout widget. You can load the JavaScript library by placing the &lt;code&gt;@paddleJS&lt;/code&gt; directive right before your application layout's closing &lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">Paddleは、独自のJavaScriptライブラリに依存して、Paddleチェックアウトウィジェットを開始します。アプリケーションレイアウトの終了 &lt;code&gt;&amp;lt;/head&amp;gt;&lt;/code&gt; タグの直前に &lt;code&gt;@paddleJS&lt;/code&gt; ディレクティブを配置することで、JavaScriptライブラリをロードできます。</target>
        </trans-unit>
        <trans-unit id="d4150789c4ff7b7ca9784591e7c4b9e0fa44ddaa" translate="yes" xml:space="preserve">
          <source>Paddle's subscriptions cannot be resumed after cancellation. If your customer wishes to resume their subscription, they will have to subscribe to a new subscription.</source>
          <target state="translated">パドルの定期購読は解約後の再開はできません。お客様が定期購読の再開を希望される場合は、新たに定期購読を申し込む必要があります。</target>
        </trans-unit>
        <trans-unit id="9cc1f13fc6e79d7c285d26ca461736745fd0809d" translate="yes" xml:space="preserve">
          <source>Page Methods</source>
          <target state="translated">ページメソッド</target>
        </trans-unit>
        <trans-unit id="600584c2d5ccb97c0c0c424d9f32d6b102fcb040" translate="yes" xml:space="preserve">
          <source>Pages</source>
          <target state="translated">Pages</target>
        </trans-unit>
        <trans-unit id="501aedd6e852bde8bf525255673c2cf44b2ec75c" translate="yes" xml:space="preserve">
          <source>Paginate the given query into a simple paginator.</source>
          <target state="translated">与えられたクエリを単純なページネーションにします。</target>
        </trans-unit>
        <trans-unit id="a909a820343a7f571148fbb34a74323ba9b5412c" translate="yes" xml:space="preserve">
          <source>Paginate the given query.</source>
          <target state="translated">与えられたクエリをページ分割します。</target>
        </trans-unit>
        <trans-unit id="569029f0a80e95e848b7349122d4d154cdccbbf3" translate="yes" xml:space="preserve">
          <source>Paginated responses always contain &lt;code&gt;meta&lt;/code&gt; and &lt;code&gt;links&lt;/code&gt; keys with information about the paginator's state:</source>
          <target state="translated">ページ分割された応答には、常に &lt;code&gt;meta&lt;/code&gt; と &lt;code&gt;links&lt;/code&gt; キーが含まれ、ページ編集者の状態に関する情報が含まれます。</target>
        </trans-unit>
        <trans-unit id="7d2ce3695b5f46478da58a8c2a42c87b482d4b1e" translate="yes" xml:space="preserve">
          <source>PaginatedResourceResponse</source>
          <target state="translated">PaginatedResourceResponse</target>
        </trans-unit>
        <trans-unit id="74930ec36069df7a7341ab4b997e31dc75c75cb0" translate="yes" xml:space="preserve">
          <source>PaginatedResourceResponse (Http\Resources)</source>
          <target state="translated">PaginatedResourceResponse (HttpResources)</target>
        </trans-unit>
        <trans-unit id="729d5d696ecaa6606b7d3a4e300c60f85cdbdc52" translate="yes" xml:space="preserve">
          <source>PaginatedResourceResponse::meta()</source>
          <target state="translated">PaginatedResourceResponse::meta()</target>
        </trans-unit>
        <trans-unit id="e497cff5252b6d83b785ae6527334c18ec78fcfa" translate="yes" xml:space="preserve">
          <source>PaginatedResourceResponse::paginationInformation()</source>
          <target state="translated">PaginatedResourceResponse::paginationInformation()</target>
        </trans-unit>
        <trans-unit id="34bbb7fba047d9def213ab05fe5440f8a41eb640" translate="yes" xml:space="preserve">
          <source>PaginatedResourceResponse::paginationLinks()</source>
          <target state="translated">PaginatedResourceResponse::paginationLinks()</target>
        </trans-unit>
        <trans-unit id="78e3ae0b22e6441ecf3440606b9cdf3a21e4ade9" translate="yes" xml:space="preserve">
          <source>PaginatedResourceResponse::toResponse()</source>
          <target state="translated">PaginatedResourceResponse::toResponse()</target>
        </trans-unit>
        <trans-unit id="8e14c0591a8e449a6083a81805d7cbc47bc1e06e" translate="yes" xml:space="preserve">
          <source>Paginating Eloquent Results</source>
          <target state="translated">エロティックな結果をページングする</target>
        </trans-unit>
        <trans-unit id="74c842840bd9ac7ab6c51228b634af887e22b80d" translate="yes" xml:space="preserve">
          <source>Paginating Query Builder Results</source>
          <target state="translated">クエリビルダの結果をページ分割</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="23f1d9cae76709c6efe8c63ab93f7f5a63894de2" translate="yes" xml:space="preserve">
          <source>Pagination Defaults</source>
          <target state="translated">ページネーションのデフォルト</target>
        </trans-unit>
        <trans-unit id="bbe8b659737ad6b0eba497cb107f46a04ccc0bd5" translate="yes" xml:space="preserve">
          <source>PaginationServiceProvider</source>
          <target state="translated">PaginationServiceProvider</target>
        </trans-unit>
        <trans-unit id="24533236e88c1d36ff37cc521374f5302ab40560" translate="yes" xml:space="preserve">
          <source>Paginator</source>
          <target state="translated">Paginator</target>
        </trans-unit>
        <trans-unit id="83499c18230cd1bcf55abc8795a3ada381dfd747" translate="yes" xml:space="preserve">
          <source>Paginator (Contracts)</source>
          <target state="translated">パジネーター(契約書</target>
        </trans-unit>
        <trans-unit id="9dcbd7bd5ae779cfd54cba051e4339ccf7609e69" translate="yes" xml:space="preserve">
          <source>Paginator (Pagination)</source>
          <target state="translated">パジネーター(パジネーション</target>
        </trans-unit>
        <trans-unit id="2d2b99984814526518fb3b37e1305f7a9ba3e062" translate="yes" xml:space="preserve">
          <source>Paginator Instance Methods</source>
          <target state="translated">Paginator インスタンスメソッド</target>
        </trans-unit>
        <trans-unit id="6100563277210e5f89a10811f8f6b09a1dbbe245" translate="yes" xml:space="preserve">
          <source>Paginator Links</source>
          <target state="translated">パジネーターリンク</target>
        </trans-unit>
        <trans-unit id="c29f5b95206187ff416044c75110fc855df76bec" translate="yes" xml:space="preserve">
          <source>Paginator::__construct()</source>
          <target state="translated">Paginator::__construct()</target>
        </trans-unit>
        <trans-unit id="ca7765f70c5da8aef85d884c3c3efc2369e083c0" translate="yes" xml:space="preserve">
          <source>Paginator::appends()</source>
          <target state="translated">Paginator::appends()</target>
        </trans-unit>
        <trans-unit id="22995051de8e3c9ab2196bb5cec6b71871119b0e" translate="yes" xml:space="preserve">
          <source>Paginator::currentPage()</source>
          <target state="translated">Paginator::currentPage()</target>
        </trans-unit>
        <trans-unit id="f6a16e105ee98edbf036dbb8c8d1eae531638bea" translate="yes" xml:space="preserve">
          <source>Paginator::firstItem()</source>
          <target state="translated">Paginator::firstItem()</target>
        </trans-unit>
        <trans-unit id="b42f7f91da876645e08f66b7060bfc4c3386c6bb" translate="yes" xml:space="preserve">
          <source>Paginator::fragment()</source>
          <target state="translated">Paginator::fragment()</target>
        </trans-unit>
        <trans-unit id="33f11889a0d66740b40dca97f4582b5b9e2ddfe9" translate="yes" xml:space="preserve">
          <source>Paginator::hasMorePages()</source>
          <target state="translated">Paginator::hasMorePages()</target>
        </trans-unit>
        <trans-unit id="3caa17d316c2b74502bba4e615271310970d5a2a" translate="yes" xml:space="preserve">
          <source>Paginator::hasMorePagesWhen()</source>
          <target state="translated">Paginator::hasMorePagesWhen()</target>
        </trans-unit>
        <trans-unit id="c62547a380037775c543a056d8d3958ac2cfc3ad" translate="yes" xml:space="preserve">
          <source>Paginator::hasPages()</source>
          <target state="translated">Paginator::hasPages()</target>
        </trans-unit>
        <trans-unit id="06998eeb976d07f79e9bd66d7d6931f4a4204f0f" translate="yes" xml:space="preserve">
          <source>Paginator::isEmpty()</source>
          <target state="translated">Paginator::isEmpty()</target>
        </trans-unit>
        <trans-unit id="6210f9929d019a7d5689b607ea451bb317e45fb5" translate="yes" xml:space="preserve">
          <source>Paginator::isNotEmpty()</source>
          <target state="translated">Paginator::isNotEmpty()</target>
        </trans-unit>
        <trans-unit id="74169534b8a288b24a36be56aabf8a795ef72a4a" translate="yes" xml:space="preserve">
          <source>Paginator::items()</source>
          <target state="translated">Paginator::items()</target>
        </trans-unit>
        <trans-unit id="7552638761eb1e4dfc21ce3329fdb183a9497f96" translate="yes" xml:space="preserve">
          <source>Paginator::jsonSerialize()</source>
          <target state="translated">Paginator::jsonSerialize()</target>
        </trans-unit>
        <trans-unit id="3f41f80ce2598ded263e7d8165045d8864dc870f" translate="yes" xml:space="preserve">
          <source>Paginator::lastItem()</source>
          <target state="translated">Paginator::lastItem()</target>
        </trans-unit>
        <trans-unit id="9aaaefeb9b58e34c3da0e8d088d6e1e689aa57a3" translate="yes" xml:space="preserve">
          <source>Paginator::links()</source>
          <target state="translated">Paginator::links()</target>
        </trans-unit>
        <trans-unit id="58647bf14ef0012e976c59f11ec219cb74ec0ca6" translate="yes" xml:space="preserve">
          <source>Paginator::nextPageUrl()</source>
          <target state="translated">Paginator::nextPageUrl()</target>
        </trans-unit>
        <trans-unit id="4c15f755aca858ed0cbc8451527524b677d95fb3" translate="yes" xml:space="preserve">
          <source>Paginator::path()</source>
          <target state="translated">Paginator::path()</target>
        </trans-unit>
        <trans-unit id="e453c8cb4313f076d6b5dcf5ea8c020a14964dd9" translate="yes" xml:space="preserve">
          <source>Paginator::perPage()</source>
          <target state="translated">Paginator::perPage()</target>
        </trans-unit>
        <trans-unit id="a96e6266f0d8aef9b08e00fa906b1bff86b15828" translate="yes" xml:space="preserve">
          <source>Paginator::previousPageUrl()</source>
          <target state="translated">Paginator::previousPageUrl()</target>
        </trans-unit>
        <trans-unit id="b64626edb6c0c962bcf6073e1813050235f47307" translate="yes" xml:space="preserve">
          <source>Paginator::render()</source>
          <target state="translated">Paginator::render()</target>
        </trans-unit>
        <trans-unit id="1c94e9f43bac1aebfd6a39ce05b4450049e1b5c8" translate="yes" xml:space="preserve">
          <source>Paginator::setCurrentPage()</source>
          <target state="translated">Paginator::setCurrentPage()</target>
        </trans-unit>
        <trans-unit id="a134be7b0dd72261ac00a119f83aeed23146da26" translate="yes" xml:space="preserve">
          <source>Paginator::setItems()</source>
          <target state="translated">Paginator::setItems()</target>
        </trans-unit>
        <trans-unit id="740be2039c4738b346c9312a30e2eead18d74eea" translate="yes" xml:space="preserve">
          <source>Paginator::toArray()</source>
          <target state="translated">Paginator::toArray()</target>
        </trans-unit>
        <trans-unit id="b8568006ef540789cc405761af8d295d9ceb1eb2" translate="yes" xml:space="preserve">
          <source>Paginator::toJson()</source>
          <target state="translated">Paginator::toJson()</target>
        </trans-unit>
        <trans-unit id="f6bac847b25a62efc8a12f32b4521d0865f6e2ca" translate="yes" xml:space="preserve">
          <source>Paginator::url()</source>
          <target state="translated">Paginator::url()</target>
        </trans-unit>
        <trans-unit id="f39e07a41f8f8596a8fca6adbed939d949a7eb49" translate="yes" xml:space="preserve">
          <source>Panel Component</source>
          <target state="translated">パネルコンポーネント</target>
        </trans-unit>
        <trans-unit id="5bbf0c6cd8643e0873517047207976f81cc0c1a9" translate="yes" xml:space="preserve">
          <source>Paradigm shifting releases are separated by many years and represent fundamental shifts in the framework's architecture and conventions. Currently, there is no paradigm shifting release under development.</source>
          <target state="translated">パラダイムシフトのリリースは何年にもわたって分離されており、フレームワークのアーキテクチャや規約の基本的な変更を表しています。現在、開発中のパラダイムシフトのリリースはありません。</target>
        </trans-unit>
        <trans-unit id="2b338af39aea20defe562c404d22d384da1fb4d9" translate="yes" xml:space="preserve">
          <source>Parallel Execution</source>
          <target state="translated">並列実行</target>
        </trans-unit>
        <trans-unit id="b7fd1146704c6ae1a802d4856549f5e70bcfbfb4" translate="yes" xml:space="preserve">
          <source>Parameter Grouping</source>
          <target state="translated">パラメータのグループ化</target>
        </trans-unit>
        <trans-unit id="92a0d27e2460f0ab044ef30d55901e65ee670224" translate="yes" xml:space="preserve">
          <source>ParameterBag</source>
          <target state="translated">ParameterBag</target>
        </trans-unit>
        <trans-unit id="83eede623b296fb979d85f37013ced4b36042c04" translate="yes" xml:space="preserve">
          <source>ParameterBag|mixed</source>
          <target state="translated">ParameterBag|mixed</target>
        </trans-unit>
        <trans-unit id="293919a1312c5bae7f8ad60e07e801845fffeb33" translate="yes" xml:space="preserve">
          <source>ParameterBag|mixed
    json(string $key = null, mixed $default = null)</source>
          <target state="translated">ParameterBag|mixed json(string $key=null,mixed $default=null)</target>
        </trans-unit>
        <trans-unit id="65e756d329a4e44bc36a0c4e5794d43e16b2816d" translate="yes" xml:space="preserve">
          <source>ParameterBag|mixed
    json(string|null $key = null, mixed $default = null)</source>
          <target state="translated">ParameterBag|mixed json(string|null $key=null,mixed $default=null)</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="d1785257a6a636f52338bf60addfbde2ce90e129" translate="yes" xml:space="preserve">
          <source>Parse a Class@method style callback into class and method.</source>
          <target state="translated">Class@method スタイルのコールバックをクラスとメソッドに解析します。</target>
        </trans-unit>
        <trans-unit id="9697de5b0e4fd40825997b552e6844c926ad4211" translate="yes" xml:space="preserve">
          <source>Parse a Class[@]method style callback into class and method.</source>
          <target state="translated">Class[@]メソッドスタイルのコールバックをクラスとメソッドにパースします。</target>
        </trans-unit>
        <trans-unit id="fc840fb23cb4ef20ac74ec73337cc375a103f7a8" translate="yes" xml:space="preserve">
          <source>Parse a class based composer name.</source>
          <target state="translated">クラスベースの作曲家名を解析します。</target>
        </trans-unit>
        <trans-unit id="0b1f24b157c7658b030c71a0a365fee1ca017678" translate="yes" xml:space="preserve">
          <source>Parse a key into namespace, group, and item.</source>
          <target state="translated">キーを名前空間、グループ、およびアイテムに解析します。</target>
        </trans-unit>
        <trans-unit id="38bdfb81695691b57789ab8dd7a687d8109a594a" translate="yes" xml:space="preserve">
          <source>Parse a list of relations into individuals.</source>
          <target state="translated">関係のリストを個人に分解します。</target>
        </trans-unit>
        <trans-unit id="59011021a66489a9a45735ffbe990d8618db4863" translate="yes" xml:space="preserve">
          <source>Parse a middleware string to get the name and parameters.</source>
          <target state="translated">ミドルウェアの文字列をパースして、名前とパラメータを取得します。</target>
        </trans-unit>
        <trans-unit id="06245b30c20d47a22f1ce415d54c73c7e8401188" translate="yes" xml:space="preserve">
          <source>Parse a parameter list.</source>
          <target state="translated">パラメータリストにパースします。</target>
        </trans-unit>
        <trans-unit id="576616a63be81cc3120c87420cc9b54fd42fd031" translate="yes" xml:space="preserve">
          <source>Parse a string based action for the &quot;uses&quot; fluent method.</source>
          <target state="translated">uses&quot; fluentメソッドの文字列ベースのアクションを解析します。</target>
        </trans-unit>
        <trans-unit id="535c62db3efee2d127c817cb6c22471e044cb76e" translate="yes" xml:space="preserve">
          <source>Parse a string based rule.</source>
          <target state="translated">文字列ベースのルールを解析します。</target>
        </trans-unit>
        <trans-unit id="b3e377280703478f00b4b5a1d9255db165f26d96" translate="yes" xml:space="preserve">
          <source>Parse an argument expression.</source>
          <target state="translated">引数式を解析します。</target>
        </trans-unit>
        <trans-unit id="1f77eb558e3d72339790f1b9c6850c0c7f2c47cd" translate="yes" xml:space="preserve">
          <source>Parse an array based rule.</source>
          <target state="translated">配列ベースのルールを解析します。</target>
        </trans-unit>
        <trans-unit id="37af83ac6793d54b88ae9ee5b8fd12bb6162a4bc" translate="yes" xml:space="preserve">
          <source>Parse an array of basic segments.</source>
          <target state="translated">基本セグメントの配列を解析します。</target>
        </trans-unit>
        <trans-unit id="b07df7d797c5cbaf550c6cc6c067a454d8dd26ec" translate="yes" xml:space="preserve">
          <source>Parse an array of namespaced segments.</source>
          <target state="translated">名前空間を持つセグメントの配列を解析します。</target>
        </trans-unit>
        <trans-unit id="a5e7f974f03ecf8ea0af3f283b16530e4e1144d2" translate="yes" xml:space="preserve">
          <source>Parse an option expression.</source>
          <target state="translated">オプション式を解析します。</target>
        </trans-unit>
        <trans-unit id="a138b6c33b0da9edecc467025b0b2ce8c46d8e67" translate="yes" xml:space="preserve">
          <source>Parse and format the given options.</source>
          <target state="translated">与えられたオプションをパースしてフォーマットします。</target>
        </trans-unit>
        <trans-unit id="085af6f372fd53dfff29f8a4f093360421f9a85b" translate="yes" xml:space="preserve">
          <source>Parse and prepare the database configuration.</source>
          <target state="translated">データベースの構成を解析して準備します。</target>
        </trans-unit>
        <trans-unit id="142246dd49dfa45eaf5b9611440b2540c0088976" translate="yes" xml:space="preserve">
          <source>Parse arguments to the where method into an array.</source>
          <target state="translated">whereメソッドの引数を配列に解析します。</target>
        </trans-unit>
        <trans-unit id="01b2b5815601ca3e88bd4faafff20e6c1ffb514c" translate="yes" xml:space="preserve">
          <source>Parse full pipe string to get name and parameters.</source>
          <target state="translated">パイプの文字列を解析して、名前とパラメータを取得します。</target>
        </trans-unit>
        <trans-unit id="4842116da7d800c5140c623de566dfe62673986f" translate="yes" xml:space="preserve">
          <source>Parse multi-part form data.</source>
          <target state="translated">複数パートのフォームデータを解析します。</target>
        </trans-unit>
        <trans-unit id="427c33c46a61c25e3439579e3a29bf97f3eb4223" translate="yes" xml:space="preserve">
          <source>Parse named parameters to $key =&amp;gt; $value items.</source>
          <target state="translated">名前付きパラメーターを$ key =&amp;gt; $ valueアイテムに解析します。</target>
        </trans-unit>
        <trans-unit id="cc7ce614eaa6a54d7285837d53dd91dc71778043" translate="yes" xml:space="preserve">
          <source>Parse the &quot;bind&quot; attributes in a given attribute string into their fully-qualified syntax.</source>
          <target state="translated">与えられた属性文字列の中の &quot;bind&quot; 属性を完全修飾された構文に解析します。</target>
        </trans-unit>
        <trans-unit id="2eecab4e012813a6d91ad02deebbaaa870e47311" translate="yes" xml:space="preserve">
          <source>Parse the Redis connection configuration.</source>
          <target state="translated">Redisの接続設定を解析します。</target>
        </trans-unit>
        <trans-unit id="9ee5e304ea55948cd2c56e629f60d1ff1d5576e1" translate="yes" xml:space="preserve">
          <source>Parse the answer that was given via the prompt.</source>
          <target state="translated">プロンプトで与えられた答えを解析します。</target>
        </trans-unit>
        <trans-unit id="c26b5d89836da87605d36fd979f72d0aa6100097" translate="yes" xml:space="preserve">
          <source>Parse the attribute bag in a given attribute string into it's fully-qualified syntax.</source>
          <target state="translated">与えられた属性文字列の属性バッグを完全修飾構文に解析します。</target>
        </trans-unit>
        <trans-unit id="a233760ed6000fc4e3201b6bedaf1fa7b46c8e13" translate="yes" xml:space="preserve">
          <source>Parse the class listener into class and method.</source>
          <target state="translated">クラスリスナーをクラスとメソッドに分解します。</target>
        </trans-unit>
        <trans-unit id="28c1dcc91b04bd3f219dbb3b9f2c8f3634879626" translate="yes" xml:space="preserve">
          <source>Parse the class name and format according to the root namespace.</source>
          <target state="translated">ルートの名前空間に応じてクラス名とフォーマットをパースします。</target>
        </trans-unit>
        <trans-unit id="5cb987843f7cc1816ba6a4b37fccc91da643981e" translate="yes" xml:space="preserve">
          <source>Parse the column list.</source>
          <target state="translated">列リストを解析します。</target>
        </trans-unit>
        <trans-unit id="d1a506a5a5507d83bb3cacb13681dda43168eb33" translate="yes" xml:space="preserve">
          <source>Parse the connection / table for the unique / exists rules.</source>
          <target state="translated">接続/テーブルを解析して、一意/存在するルールを探します。</target>
        </trans-unit>
        <trans-unit id="87c6bbfc937fd264fd4b775a775c2b4fc15b116b" translate="yes" xml:space="preserve">
          <source>Parse the connection into an array of the name and read / write type.</source>
          <target state="translated">接続を名前と読み書きタイプの配列に解析します。</target>
        </trans-unit>
        <trans-unit id="b8a9564b6665c21da291d4d492e06f66d83c0fcd" translate="yes" xml:space="preserve">
          <source>Parse the controller.</source>
          <target state="translated">コントローラを解析します。</target>
        </trans-unit>
        <trans-unit id="897400b8e49e37d21b12bf924ec451befe48f623" translate="yes" xml:space="preserve">
          <source>Parse the data array, converting dots and asterisks.</source>
          <target state="translated">データ配列を解析し、ドットとアスタリスクを変換します。</target>
        </trans-unit>
        <trans-unit id="a0cba2ec5294c2969172810c43141079a67273c7" translate="yes" xml:space="preserve">
          <source>Parse the data array, converting dots to -&amp;gt;.</source>
          <target state="translated">データ配列を解析し、ドットを-&amp;gt;に変換します。</target>
        </trans-unit>
        <trans-unit id="7edee2fe3d894c45c79d6ff3f7914b48181a8fb2" translate="yes" xml:space="preserve">
          <source>Parse the database configuration, hydrating options using a database configuration URL if possible.</source>
          <target state="translated">可能であれば、データベース構成URLを使用して、データベース構成、ハイドレーティングオプションを解析します。</target>
        </trans-unit>
        <trans-unit id="efb2c08bca66a74f31fc0fa20a49d42a3a902d40" translate="yes" xml:space="preserve">
          <source>Parse the encryption key.</source>
          <target state="translated">暗号化キーを解析します。</target>
        </trans-unit>
        <trans-unit id="0b9bcd3b4db3e21bf8dbed03b241f82f32f67bdf" translate="yes" xml:space="preserve">
          <source>Parse the failed job row.</source>
          <target state="translated">失敗したジョブ行を解析します。</target>
        </trans-unit>
        <trans-unit id="008dd2441eef7e83daae93860ec18012cf1db6d6" translate="yes" xml:space="preserve">
          <source>Parse the given Markdown text into HTML.</source>
          <target state="translated">与えられたMarkdownテキストをHTMLに解析します。</target>
        </trans-unit>
        <trans-unit id="8601a3c42766762adfeffe1c7f4983ec584f0e26" translate="yes" xml:space="preserve">
          <source>Parse the given URI.</source>
          <target state="translated">与えられたURIをパースします。</target>
        </trans-unit>
        <trans-unit id="bfa1c526de97efff6cc403a28d0957eb5a6253e9" translate="yes" xml:space="preserve">
          <source>Parse the given action into an array.</source>
          <target state="translated">与えられたアクションを配列に解析します。</target>
        </trans-unit>
        <trans-unit id="edf6a1f1df1d1e47f5f246110be9b907f57b51f4" translate="yes" xml:space="preserve">
          <source>Parse the given caster class, removing any arguments.</source>
          <target state="translated">与えられたキャスタークラスを解析し、引数を削除します。</target>
        </trans-unit>
        <trans-unit id="2374f16fb9fd3e815b624cc5fa69ee96599a3205" translate="yes" xml:space="preserve">
          <source>Parse the given console command definition into an array.</source>
          <target state="translated">与えられたコンソールコマンド定義を配列に解析します。</target>
        </trans-unit>
        <trans-unit id="54e3f8bbf749ebbc06b33df960215353936fdec1" translate="yes" xml:space="preserve">
          <source>Parse the given data into a raw array.</source>
          <target state="translated">与えられたデータを生の配列に解析します。</target>
        </trans-unit>
        <trans-unit id="68f2b083000937ce4d14864a6669bfe066754017" translate="yes" xml:space="preserve">
          <source>Parse the given errors into an appropriate value.</source>
          <target state="translated">与えられたエラーを適切な値に解析します。</target>
        </trans-unit>
        <trans-unit id="8aba731d63fda64d814b4467207903092c52a082" translate="yes" xml:space="preserve">
          <source>Parse the given event and payload and prepare them for dispatching.</source>
          <target state="translated">与えられたイベントとペイロードを解析し、ディスパッチの準備をします。</target>
        </trans-unit>
        <trans-unit id="d93c79b4f78ac5171db7cb6e9bf50b6081be110f" translate="yes" xml:space="preserve">
          <source>Parse the given header options.</source>
          <target state="translated">与えられたヘッダオプションを解析します。</target>
        </trans-unit>
        <trans-unit id="040b91d08258c035762c7b99da6e50c101a91d64" translate="yes" xml:space="preserve">
          <source>Parse the given job name into a class / method array.</source>
          <target state="translated">与えられたジョブ名をクラス/メソッドの配列に解析します。</target>
        </trans-unit>
        <trans-unit id="d35f33d996086305491b36b032fb416eeeb1fc45" translate="yes" xml:space="preserve">
          <source>Parse the given rules and merge them into current rules.</source>
          <target state="translated">与えられたルールを解析し、現在のルールにマージします。</target>
        </trans-unit>
        <trans-unit id="162ec547b65760f83ceb35dd6ea9a2292d77d115" translate="yes" xml:space="preserve">
          <source>Parse the given tap class string into a class name and arguments string.</source>
          <target state="translated">与えられたタップクラス文字列をクラス名と引数文字列に解析します。</target>
        </trans-unit>
        <trans-unit id="bdb290b0a70baa57dbe8cb0c4e781e6e89b165a4" translate="yes" xml:space="preserve">
          <source>Parse the given view name or array.</source>
          <target state="translated">指定したビュー名または配列をパースします。</target>
        </trans-unit>
        <trans-unit id="cd08af64e9652be5c8657396aee9575f6533cefd" translate="yes" xml:space="preserve">
          <source>Parse the given visibility value.</source>
          <target state="translated">与えられた可視性の値を解析します。</target>
        </trans-unit>
        <trans-unit id="1a752e1752103268845fc251b9a9efca2392f9fa" translate="yes" xml:space="preserve">
          <source>Parse the hosts configuration item into an array.</source>
          <target state="translated">hosts の設定項目を配列に解析します。</target>
        </trans-unit>
        <trans-unit id="1d5955ace81a5ae650aa70f03bd017a54d40b8ae" translate="yes" xml:space="preserve">
          <source>Parse the human-friendly rules into a full rules array for the validator.</source>
          <target state="translated">人間にやさしいルールを解析して、バリデータのための完全なルール配列にします。</target>
        </trans-unit>
        <trans-unit id="1d279fdd8ae223faab0e7be5099a788dc622142e" translate="yes" xml:space="preserve">
          <source>Parse the incoming Artisan command and its input.</source>
          <target state="translated">入力されたArtisanコマンドとその入力を解析します。</target>
        </trans-unit>
        <trans-unit id="86742289b77cea1dc244a676e1dc844d84d4039d" translate="yes" xml:space="preserve">
          <source>Parse the middleware group and format it for usage.</source>
          <target state="translated">ミドルウェアグループを解析し、使用するためにフォーマットします。</target>
        </trans-unit>
        <trans-unit id="e42c48e3a80c1a8acbe9dfdc4ef776cf2392ea81" translate="yes" xml:space="preserve">
          <source>Parse the multi-address array into the necessary format.</source>
          <target state="translated">マルチアドレス配列を必要な形式に解析します。</target>
        </trans-unit>
        <trans-unit id="b91329ccb6636a64d70d55724b48c38b00ff5766" translate="yes" xml:space="preserve">
          <source>Parse the nested relationships in a relation.</source>
          <target state="translated">関係の入れ子になった関係を解析します。</target>
        </trans-unit>
        <trans-unit id="295eab6308c7d755f54d538cab78bc0151256124" translate="yes" xml:space="preserve">
          <source>Parse the route URI and normalize / store any implicit binding fields.</source>
          <target state="translated">ルートURIを解析し、暗黙のバインディングフィールドを正規化/格納する。</target>
        </trans-unit>
        <trans-unit id="a390d8833c153ad76c233d757b408eb1dfb1512b" translate="yes" xml:space="preserve">
          <source>Parse the route action into a standard array.</source>
          <target state="translated">ルートアクションを標準の配列に解析します。</target>
        </trans-unit>
        <trans-unit id="4da282686e05e33c5d0f6e79b7248688cb29686d" translate="yes" xml:space="preserve">
          <source>Parse the string URL to an array of components.</source>
          <target state="translated">文字列 URL を解析してコンポーネントの配列にします。</target>
        </trans-unit>
        <trans-unit id="5077ade589388953efa887bbc42ebfa22a8f838b" translate="yes" xml:space="preserve">
          <source>Parse the string level into a Monolog constant.</source>
          <target state="translated">文字列レベルを Monolog 定数に解析します。</target>
        </trans-unit>
        <trans-unit id="4527bf131e74566ed0b76fa207fd812fddb286a7" translate="yes" xml:space="preserve">
          <source>Parse the subquery into SQL and bindings.</source>
          <target state="translated">サブクエリをSQLとバインディングに解析します。</target>
        </trans-unit>
        <trans-unit id="de98f73d779e6e0006e64d8fead63a792b57f367" translate="yes" xml:space="preserve">
          <source>Parse the table name and extract the schema and table.</source>
          <target state="translated">テーブル名を解析し、スキーマとテーブルを抽出します。</target>
        </trans-unit>
        <trans-unit id="b3819ee91883690875ee0accb7667b28924cb0ec" translate="yes" xml:space="preserve">
          <source>Parse the token into its token and description segments.</source>
          <target state="translated">トークンを解析して、トークンと説明のセグメントに分割します。</target>
        </trans-unit>
        <trans-unit id="87feaeb62544a1ecc3dd15fa5679d35d7c8c9d05" translate="yes" xml:space="preserve">
          <source>Parse the tokens from the template.</source>
          <target state="translated">テンプレートからトークンを解析します。</target>
        </trans-unit>
        <trans-unit id="1b3cf5033ed01a4fcbff3f2957e66cfe44af45a9" translate="yes" xml:space="preserve">
          <source>Parser</source>
          <target state="translated">Parser</target>
        </trans-unit>
        <trans-unit id="74a68b1553a16fc4ed418a135635d323370d8a0d" translate="yes" xml:space="preserve">
          <source>Parser (Console)</source>
          <target state="translated">パーサ (コンソール)</target>
        </trans-unit>
        <trans-unit id="43941883a9202b6ec87685c3b9cf9c4554fa39da" translate="yes" xml:space="preserve">
          <source>Parser::extractDescription()</source>
          <target state="translated">Parser::extractDescription()</target>
        </trans-unit>
        <trans-unit id="ce18344e1657526f9b57bdc8b4d1761bea4e55a5" translate="yes" xml:space="preserve">
          <source>Parser::name()</source>
          <target state="translated">Parser::name()</target>
        </trans-unit>
        <trans-unit id="8360858b1d61f29510e955830732f2c3d2b601b2" translate="yes" xml:space="preserve">
          <source>Parser::parameters()</source>
          <target state="translated">Parser::parameters()</target>
        </trans-unit>
        <trans-unit id="8aa41a83104496122b2b0e658b3678fe9ed9148a" translate="yes" xml:space="preserve">
          <source>Parser::parse()</source>
          <target state="translated">Parser::parse()</target>
        </trans-unit>
        <trans-unit id="7feefd93054dfb8228fa548e1cab792df9ec7d82" translate="yes" xml:space="preserve">
          <source>Parser::parseArgument()</source>
          <target state="translated">Parser::parseArgument()</target>
        </trans-unit>
        <trans-unit id="40d8e08bb865dd3e203b7ff99638921ad8766c20" translate="yes" xml:space="preserve">
          <source>Parser::parseOption()</source>
          <target state="translated">Parser::parseOption()</target>
        </trans-unit>
        <trans-unit id="425a6f86712a1dd9a8ecfec6fe0dbcfe09f57869" translate="yes" xml:space="preserve">
          <source>ParsesLogConfiguration</source>
          <target state="translated">ParsesLogConfiguration</target>
        </trans-unit>
        <trans-unit id="0dadca38d3cda55f902a61aa92072555e8f9b3f5" translate="yes" xml:space="preserve">
          <source>ParsesLogConfiguration (Log)</source>
          <target state="translated">ParsesLogConfiguration (Log)</target>
        </trans-unit>
        <trans-unit id="d165fad43c1397403e416c7cacaa77339b2e33e5" translate="yes" xml:space="preserve">
          <source>ParsesLogConfiguration::getFallbackChannelName()</source>
          <target state="translated">ParsesLogConfiguration::getFallbackChannelName()</target>
        </trans-unit>
        <trans-unit id="019a0f7b92bdfc335f4105ce8fc159180cbde7d9" translate="yes" xml:space="preserve">
          <source>ParsesLogConfiguration::level()</source>
          <target state="translated">ParsesLogConfiguration::level()</target>
        </trans-unit>
        <trans-unit id="eef9cb0bcbfdbd58bee773adeba0eeae27f626f8" translate="yes" xml:space="preserve">
          <source>ParsesLogConfiguration::parseChannel()</source>
          <target state="translated">ParsesLogConfiguration::parseChannel()</target>
        </trans-unit>
        <trans-unit id="8c2e4f201efc228b6bf4fec6434ed5f192c341e4" translate="yes" xml:space="preserve">
          <source>Partial Resource Routes</source>
          <target state="translated">部分リソースルート</target>
        </trans-unit>
        <trans-unit id="8dc1f2a1ac9c1412f967a1909f3a72cc32e914c1" translate="yes" xml:space="preserve">
          <source>Participants must ensure that their language and actions are free of personal attacks and disparaging personal remarks.</source>
          <target state="translated">参加者は、自分の言動に個人的な攻撃や中傷的な発言がないことを確認しなければなりません。</target>
        </trans-unit>
        <trans-unit id="ba16c8f68fa252776fabd9785284ed8d6a27c6f0" translate="yes" xml:space="preserve">
          <source>Participants will be tolerant of opposing views.</source>
          <target state="translated">参加者は反対意見に寛容になる。</target>
        </trans-unit>
        <trans-unit id="dd843e2f6a4970e67517951617c997caea9e150f" translate="yes" xml:space="preserve">
          <source>Partition the collection into two arrays using the given callback or key.</source>
          <target state="translated">与えられたコールバックまたはキーを使用して、コレクションを2つの配列に分割します。</target>
        </trans-unit>
        <trans-unit id="3052e0ac01e632a474f6d57c3403f414f9563410" translate="yes" xml:space="preserve">
          <source>Partition the data and extra attributes from the given array of attributes.</source>
          <target state="translated">与えられた属性の配列からデータと余分な属性を分割します。</target>
        </trans-unit>
        <trans-unit id="d63a55512eae4be355794eb5412c3a1a10b88964" translate="yes" xml:space="preserve">
          <source>Pass dynamic instance methods to the manager.</source>
          <target state="translated">動的なインスタンスメソッドをマネージャに渡します。</target>
        </trans-unit>
        <trans-unit id="309c08f0961fe21d13036ab494ec378fc2ff5aa7" translate="yes" xml:space="preserve">
          <source>Pass dynamic methods call onto Flysystem.</source>
          <target state="translated">動的メソッドの呼び出しをFlysystemに渡します。</target>
        </trans-unit>
        <trans-unit id="4207272b1b5b76c40c65f10206a446bd5d0791cf" translate="yes" xml:space="preserve">
          <source>Pass dynamic methods onto the router instance.</source>
          <target state="translated">動的メソッドをルータのインスタンスに渡します。</target>
        </trans-unit>
        <trans-unit id="961600db62941e2f81c10f8660aa000a853f846b" translate="yes" xml:space="preserve">
          <source>Pass each item in the collection to the given callback, lazily.</source>
          <target state="translated">コレクション内の各項目を、与えられたコールバックに怠惰に渡します。</target>
        </trans-unit>
        <trans-unit id="70eecb21d7bbd16bd8e64f2fc84095dcdeae65f4" translate="yes" xml:space="preserve">
          <source>Pass methods onto the default Redis connection.</source>
          <target state="translated">メソッドをデフォルトの Redis 接続に渡します。</target>
        </trans-unit>
        <trans-unit id="bfa01be63447aae79ca1412dded311ec03ed0583" translate="yes" xml:space="preserve">
          <source>Pass other method calls down to the underlying client.</source>
          <target state="translated">他のメソッドの呼び出しを、基礎となるクライアントに渡します。</target>
        </trans-unit>
        <trans-unit id="21752337512faae2613689bfbb69e0a236646191" translate="yes" xml:space="preserve">
          <source>Pass the collection into a new class.</source>
          <target state="translated">コレクションを新しいクラスに渡します。</target>
        </trans-unit>
        <trans-unit id="0ba58de808f7c9c366baee36a9cb608f09f7753f" translate="yes" xml:space="preserve">
          <source>Pass the collection to the given callback and return the result.</source>
          <target state="translated">与えられたコールバックにコレクションを渡し、結果を返します。</target>
        </trans-unit>
        <trans-unit id="8fe5c481244960cd3cbc36117f97af3b2c692346" translate="yes" xml:space="preserve">
          <source>Pass the collection to the given callback and then return it.</source>
          <target state="translated">与えられたコールバックにコレクションを渡し、それを返します。</target>
        </trans-unit>
        <trans-unit id="3628543569a861d0f7f92ad92db9e6ea2c1cabd3" translate="yes" xml:space="preserve">
          <source>Pass the enumerable to the given callback and return the result.</source>
          <target state="translated">enumerableを与えられたコールバックに渡し、結果を返します。</target>
        </trans-unit>
        <trans-unit id="af0ca4fd650ffaefa12a5f4d554eebf1d6b0351e" translate="yes" xml:space="preserve">
          <source>Pass the query to a given callback.</source>
          <target state="translated">与えられたコールバックにクエリを渡します。</target>
        </trans-unit>
        <trans-unit id="d658cc060c1016a27528c8405cc4007b5a0daf7d" translate="yes" xml:space="preserve">
          <source>Pass this lazy collection through a method on the collection class.</source>
          <target state="translated">この遅延コレクションをコレクションクラスのメソッドに渡します。</target>
        </trans-unit>
        <trans-unit id="a2eba060c91ca7e885814798a13edf8760c2ff8e" translate="yes" xml:space="preserve">
          <source>Passing Additional Data To Components</source>
          <target state="translated">追加データをコンポーネントに渡す</target>
        </trans-unit>
        <trans-unit id="54e1551b6ec30119a5cbd445bba8a082d4030297" translate="yes" xml:space="preserve">
          <source>Passing Array Values</source>
          <target state="translated">配列の値を渡す</target>
        </trans-unit>
        <trans-unit id="622824e3e89348a9411706fe778fb2a8b76dd43d" translate="yes" xml:space="preserve">
          <source>Passing Boolean Values</source>
          <target state="translated">ブール値を渡す</target>
        </trans-unit>
        <trans-unit id="d4984fb3e47004d6700fab6a243de3b19728f65c" translate="yes" xml:space="preserve">
          <source>Passing Data To Components</source>
          <target state="translated">コンポーネントへのデータの受け渡し</target>
        </trans-unit>
        <trans-unit id="b9671daf838d45a4792a556cc6878b9d595e3b4d" translate="yes" xml:space="preserve">
          <source>Passing Data To Views</source>
          <target state="translated">データをビューに渡す</target>
        </trans-unit>
        <trans-unit id="ab3fff7ca16e7d4c2e7904d4a391e6cfe8f04371" translate="yes" xml:space="preserve">
          <source>Passing The Access Token</source>
          <target state="translated">アクセス・トークンを渡す</target>
        </trans-unit>
        <trans-unit id="2b58659da00254d33c31c5f31663b45a1f4eb24c" translate="yes" xml:space="preserve">
          <source>Passing a payment method identifier directly to the &lt;code&gt;create()&lt;/code&gt; subscription method will also automatically add it to the user's stored payment methods.</source>
          <target state="translated">支払い方法識別子を &lt;code&gt;create()&lt;/code&gt; サブスクリプション方法に直接渡すと、ユーザーの保存されている支払い方法にも自動的に追加されます。</target>
        </trans-unit>
        <trans-unit id="f6eee207f853f84e4ebf99e8481f9f0db5f84944" translate="yes" xml:space="preserve">
          <source>Passport also includes a JSON API for managing authorized access tokens. You may pair this with your own frontend to offer your users a dashboard for managing access tokens. For convenience, we'll use &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt; to demonstrate making HTTP requests to the endpoints. The JSON API is guarded by the &lt;code&gt;web&lt;/code&gt; and &lt;code&gt;auth&lt;/code&gt; middleware; therefore, it may only be called from your own application.</source>
          <target state="translated">Passportには、承認されたアクセストークンを管理するためのJSONAPIも含まれています。これを独自のフロントエンドと組み合わせて、アクセストークンを管理するためのダッシュボードをユーザーに提供できます。便宜上、&lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt;を使用して、エンドポイントへのHTTPリクエストの作成を示します。JSON APIは、 &lt;code&gt;web&lt;/code&gt; および &lt;code&gt;auth&lt;/code&gt; ミドルウェアによって保護されています。したがって、独自のアプリケーションからのみ呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="fbf41b6153dd885cdbfb9d74e1c030cfb93428fb" translate="yes" xml:space="preserve">
          <source>Passport also includes a JSON API for managing personal access tokens. You may pair this with your own frontend to offer your users a dashboard for managing personal access tokens. Below, we'll review all of the API endpoints for managing personal access tokens. For convenience, we'll use &lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt; to demonstrate making HTTP requests to the endpoints.</source>
          <target state="translated">Passportには、個人のアクセストークンを管理するためのJSON APIも含まれています。これを独自のフロントエンドとペアにして、パーソナルアクセストークンを管理するためのダッシュボードをユーザーに提供できます。以下では、個人用アクセストークンを管理するためのすべてのAPIエンドポイントを確認します。便宜上、&lt;a href=&quot;https://github.com/mzabriskie/axios&quot;&gt;Axios&lt;/a&gt;を使用してエンドポイントへのHTTPリクエストの作成を示します。</target>
        </trans-unit>
        <trans-unit id="7dd8ddcb371e7d60ed9809c65c9721d97265e85f" translate="yes" xml:space="preserve">
          <source>Passport includes an &lt;a href=&quot;authentication#adding-custom-guards&quot;&gt;authentication guard&lt;/a&gt; that will validate access tokens on incoming requests. Once you have configured the &lt;code&gt;api&lt;/code&gt; guard to use the &lt;code&gt;passport&lt;/code&gt; driver, you only need to specify the &lt;code&gt;auth:api&lt;/code&gt; middleware on any routes that require a valid access token:</source>
          <target state="translated">Passportには、着信要求のアクセストークンを検証する&lt;a href=&quot;authentication#adding-custom-guards&quot;&gt;認証ガード&lt;/a&gt;が含まれています。 &lt;code&gt;passport&lt;/code&gt; ドライバーを使用するように &lt;code&gt;api&lt;/code&gt; ガードを構成したら、有効なアクセストークンを必要とするすべてのルートで &lt;code&gt;auth:api&lt;/code&gt; ミドルウェアを指定するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="91d532a009f24a5df49cd3a7a5fc2608368655cd" translate="yes" xml:space="preserve">
          <source>Passport includes two middleware that may be used to verify that an incoming request is authenticated with a token that has been granted a given scope. To get started, add the following middleware to the &lt;code&gt;$routeMiddleware&lt;/code&gt; property of your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file:</source>
          <target state="translated">Passportには2つのミドルウェアが含まれており、これらのミドルウェアを使用して、指定されたスコープが付与されたトークンで着信要求が認証されていることを確認できます。はじめに、次のミドルウェアを &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; ファイルの &lt;code&gt;$routeMiddleware&lt;/code&gt; プロパティに追加します。</target>
        </trans-unit>
        <trans-unit id="6f9e580ed5630a12016b1ee69f1e706aa68bd810" translate="yes" xml:space="preserve">
          <source>Passport is an OAuth2 authentication provider, offering a variety of OAuth2 &quot;grant types&quot; which allow you to issue various types of tokens. In general, this is a robust and complex package for API authentication. However, most applications do not require the complex features offered by the OAuth2 spec, which can be confusing for both users and developers. In addition, developers have been historically confused about how to authenticate SPA applications or mobile applications using OAuth2 authentication providers like Passport.</source>
          <target state="translated">PassportはOAuth2認証プロバイダで、様々なタイプのトークンを発行できるOAuth2の「グラントタイプ」を提供しています。一般的に、これはAPI認証のための堅牢で複雑なパッケージです。しかし、ほとんどのアプリケーションでは、OAuth2仕様が提供する複雑な機能を必要としないため、ユーザーと開発者の両方にとって混乱を招く可能性があります。さらに、開発者は歴史的に、Passport のような OAuth2 認証プロバイダを使用して SPA アプリケーションやモバイルアプリケーションを認証する方法について混乱してきました。</target>
        </trans-unit>
        <trans-unit id="9226ab8317b7303db8e49ad2b240144195050835" translate="yes" xml:space="preserve">
          <source>Passport may be chosen when your application absolutely needs all of the features provided by the OAuth2 specification.</source>
          <target state="translated">パスポートは、OAuth2仕様で提供されているすべての機能が必要な場合に選択されます。</target>
        </trans-unit>
        <trans-unit id="ad54ab488dd0939d16230efad847ce85dd89e2c7" translate="yes" xml:space="preserve">
          <source>Passport raises events when issuing access tokens and refresh tokens. You may use these events to prune or revoke other access tokens in your database. You may attach listeners to these events in your application's &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">Passportは、アクセストークンと更新トークンを発行するときにイベントを発生させます。これらのイベントを使用して、データベース内の他のアクセストークンを削除または取り消すことができます。アプリケーションの &lt;code&gt;EventServiceProvider&lt;/code&gt; でこれらのイベントにリスナーをアタッチできます。</target>
        </trans-unit>
        <trans-unit id="1047f9ec1be7041cd1f0766154984a355f148aa8" translate="yes" xml:space="preserve">
          <source>Passport ships with a JSON API that you may use to allow your users to create clients and personal access tokens. However, it can be time consuming to code a frontend to interact with these APIs. So, Passport also includes pre-built &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; components you may use as an example implementation or starting point for your own implementation.</source>
          <target state="translated">Passportには、ユーザーがクライアントと個人用アクセストークンを作成できるようにするJSON APIが同梱されています。ただし、これらのAPIと対話するようにフロントエンドをコーディングするには時間がかかる場合があります。そのため、Passportには、サンプルの実装または独自の実装の開始点として使用できるビルド済みの&lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt;コンポーネントも含まれています。</target>
        </trans-unit>
        <trans-unit id="a07619fda4bbde4e46c1b0c1495ddd73243bfb7c" translate="yes" xml:space="preserve">
          <source>Passport v10.0</source>
          <target state="translated">パスポート v10.0</target>
        </trans-unit>
        <trans-unit id="d2fd41f6fc9d4d294513f67673a269101d85cf67" translate="yes" xml:space="preserve">
          <source>Passport's &lt;code&gt;actingAs&lt;/code&gt; method may be used to specify the currently authenticated user as well as its scopes. The first argument given to the &lt;code&gt;actingAs&lt;/code&gt; method is the user instance and the second is an array of scopes that should be granted to the user's token:</source>
          <target state="translated">現在認証されているユーザーとそのスコープを指定するには、Passportの &lt;code&gt;actingAs&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;actingAs&lt;/code&gt; メソッドに渡される最初の引数はユーザーインスタンスで、2番目の引数はユーザーのトークンに付与されるスコープの配列です。</target>
        </trans-unit>
        <trans-unit id="e6eb279133177020ba49f43c35197d538d76e232" translate="yes" xml:space="preserve">
          <source>Passport's &lt;code&gt;actingAsClient&lt;/code&gt; method may be used to specify the currently authenticated client as well as its scopes. The first argument given to the &lt;code&gt;actingAsClient&lt;/code&gt; method is the client instance and the second is an array of scopes that should be granted to the client's token:</source>
          <target state="translated">Passportの &lt;code&gt;actingAsClient&lt;/code&gt; メソッドを使用して、現在認証されているクライアントとそのスコープを指定できます。 &lt;code&gt;actingAsClient&lt;/code&gt; メソッドに指定された最初の引数はクライアントインスタンスであり、2番目の引数はクライアントのトークンに付与する必要があるスコープの配列です。</target>
        </trans-unit>
        <trans-unit id="8be3c943b1609fffbfc51aad666d0a04adf83c9d" translate="yes" xml:space="preserve">
          <source>Password</source>
          <target state="translated">Password</target>
        </trans-unit>
        <trans-unit id="64043221493121b5f12ea81201fecf243031d8f9" translate="yes" xml:space="preserve">
          <source>Password (Instance)</source>
          <target state="translated">パスワード(インスタンス</target>
        </trans-unit>
        <trans-unit id="1d5a5b0323c5865ca3d0aab1bea95208d5d4fd15" translate="yes" xml:space="preserve">
          <source>Password (Support\Facades)</source>
          <target state="translated">パスワード(SupportFacades</target>
        </trans-unit>
        <trans-unit id="dd23a0118bc35710712b8a90a30c44ac76bfad10" translate="yes" xml:space="preserve">
          <source>Password Broker Customization</source>
          <target state="translated">パスワードブローカーのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="760a9906155c0def0c8c2afb835c6d05bf084520" translate="yes" xml:space="preserve">
          <source>Password Confirmation</source>
          <target state="translated">パスワードの確認</target>
        </trans-unit>
        <trans-unit id="061fe94a62748f5bad20e416c7f51b80c0c8e694" translate="yes" xml:space="preserve">
          <source>Password Grant Tokens</source>
          <target state="translated">パスワード付与トークン</target>
        </trans-unit>
        <trans-unit id="c216312044ea2d885941a00fc3b791641a8826b6" translate="yes" xml:space="preserve">
          <source>Password::getFacadeAccessor()</source>
          <target state="translated">Password::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="aa21b6e519f6229f4071c11023db1e78f4cc5d22" translate="yes" xml:space="preserve">
          <source>PasswordBroker</source>
          <target state="translated">PasswordBroker</target>
        </trans-unit>
        <trans-unit id="4b3f108a8a15bc581341d83e8f1976d8ebd92c27" translate="yes" xml:space="preserve">
          <source>PasswordBroker (Auth\Passwords)</source>
          <target state="translated">PasswordBroker (AuthPasswords)</target>
        </trans-unit>
        <trans-unit id="65a2731701bfd9ab5f479a69c9f605ce43234557" translate="yes" xml:space="preserve">
          <source>PasswordBroker (Contracts)</source>
          <target state="translated">パスワードブローカー(契約</target>
        </trans-unit>
        <trans-unit id="5696e7424089a77f0b0bba4244badee1db5998da" translate="yes" xml:space="preserve">
          <source>PasswordBroker::__construct()</source>
          <target state="translated">PasswordBroker::__construct()</target>
        </trans-unit>
        <trans-unit id="a0fb280a0e50e98bf78d691685817f0c2b9a6cc8" translate="yes" xml:space="preserve">
          <source>PasswordBroker::createToken()</source>
          <target state="translated">PasswordBroker::createToken()</target>
        </trans-unit>
        <trans-unit id="f4b8591a5c2868c002a1dede2efd2da9a1d67945" translate="yes" xml:space="preserve">
          <source>PasswordBroker::deleteToken()</source>
          <target state="translated">PasswordBroker::deleteToken()</target>
        </trans-unit>
        <trans-unit id="5455b2e860213cc73c60021f85cebd5a8dc5e4b5" translate="yes" xml:space="preserve">
          <source>PasswordBroker::getRepository()</source>
          <target state="translated">PasswordBroker::getRepository()</target>
        </trans-unit>
        <trans-unit id="fee26040f7930dbce7583d395daa686106f9141e" translate="yes" xml:space="preserve">
          <source>PasswordBroker::getUser()</source>
          <target state="translated">PasswordBroker::getUser()</target>
        </trans-unit>
        <trans-unit id="8cea83e4490374327c81146608bf405bbde429bd" translate="yes" xml:space="preserve">
          <source>PasswordBroker::reset()</source>
          <target state="translated">PasswordBroker::reset()</target>
        </trans-unit>
        <trans-unit id="168acaa66ba3f10855796f9babcff75965639e53" translate="yes" xml:space="preserve">
          <source>PasswordBroker::sendResetLink()</source>
          <target state="translated">PasswordBroker::sendResetLink()</target>
        </trans-unit>
        <trans-unit id="e0a8dddf57797e65f8fcc8f1c0391860d1c288ef" translate="yes" xml:space="preserve">
          <source>PasswordBroker::tokenExists()</source>
          <target state="translated">PasswordBroker::tokenExists()</target>
        </trans-unit>
        <trans-unit id="a3a9eac298c09b8c80de5b41be6e0d802addc1cc" translate="yes" xml:space="preserve">
          <source>PasswordBroker::validateNewPassword()</source>
          <target state="translated">PasswordBroker::validateNewPassword()</target>
        </trans-unit>
        <trans-unit id="9ad0a8da6c6eb5d75020542227fe5665ac15b413" translate="yes" xml:space="preserve">
          <source>PasswordBroker::validatePasswordWithDefaults()</source>
          <target state="translated">PasswordBroker::validatePasswordWithDefaults()</target>
        </trans-unit>
        <trans-unit id="50a10215f0d1ab9afb10796d1e0caca0369c0a4a" translate="yes" xml:space="preserve">
          <source>PasswordBroker::validateReset()</source>
          <target state="translated">PasswordBroker::validateReset()</target>
        </trans-unit>
        <trans-unit id="a876f11655999ba7d02a5b33c087a5ec42cfbdf3" translate="yes" xml:space="preserve">
          <source>PasswordBroker::validator()</source>
          <target state="translated">PasswordBroker::validator()</target>
        </trans-unit>
        <trans-unit id="9c153e46bab86229fb6e19d21edbad1ca45e3d14" translate="yes" xml:space="preserve">
          <source>PasswordBrokerFactory</source>
          <target state="translated">PasswordBrokerFactory</target>
        </trans-unit>
        <trans-unit id="70f450aa629a1034dfabfa49c47f84f9a1da156f" translate="yes" xml:space="preserve">
          <source>PasswordBrokerFactory (Contracts)</source>
          <target state="translated">PasswordBrokerFactory(契約書</target>
        </trans-unit>
        <trans-unit id="5e513c34764474b71c75203318973ffb8f25f252" translate="yes" xml:space="preserve">
          <source>PasswordBrokerFactory::broker()</source>
          <target state="translated">PasswordBrokerFactory::broker()</target>
        </trans-unit>
        <trans-unit id="b8cc5c560a9e74f5481dc2979c29ca72ee3a617c" translate="yes" xml:space="preserve">
          <source>PasswordBrokerManager</source>
          <target state="translated">PasswordBrokerManager</target>
        </trans-unit>
        <trans-unit id="477fe762e4df8146c6beeab8f810e2f69a193d9d" translate="yes" xml:space="preserve">
          <source>PasswordBrokerManager (Auth\Passwords)</source>
          <target state="translated">PasswordBrokerManager (AuthPasswords)</target>
        </trans-unit>
        <trans-unit id="2a8b53223152a300b9a92801a54de7e561dd1755" translate="yes" xml:space="preserve">
          <source>PasswordBrokerManager::__call()</source>
          <target state="translated">PasswordBrokerManager::__call()</target>
        </trans-unit>
        <trans-unit id="1c8d39d2c87da20cd09b39332142dfcd05cc8d99" translate="yes" xml:space="preserve">
          <source>PasswordBrokerManager::__construct()</source>
          <target state="translated">PasswordBrokerManager::__construct()</target>
        </trans-unit>
        <trans-unit id="ee8653c51b9132d529884444b8f7c77c405d6e15" translate="yes" xml:space="preserve">
          <source>PasswordBrokerManager::broker()</source>
          <target state="translated">PasswordBrokerManager::broker()</target>
        </trans-unit>
        <trans-unit id="b15abb3120717cdf4c00d6a7626284f85386a9eb" translate="yes" xml:space="preserve">
          <source>PasswordBrokerManager::createTokenRepository()</source>
          <target state="translated">PasswordBrokerManager::createTokenRepository()</target>
        </trans-unit>
        <trans-unit id="2d3a553be47c2301f7cfc45a854f0e8fe203e20a" translate="yes" xml:space="preserve">
          <source>PasswordBrokerManager::getConfig()</source>
          <target state="translated">PasswordBrokerManager::getConfig()</target>
        </trans-unit>
        <trans-unit id="f55292f2799b397311f1975672e90bdb9c2aba6a" translate="yes" xml:space="preserve">
          <source>PasswordBrokerManager::getDefaultDriver()</source>
          <target state="translated">PasswordBrokerManager::getDefaultDriver()</target>
        </trans-unit>
        <trans-unit id="4d4b76827b3190647ddf99aee569ec445f6bae12" translate="yes" xml:space="preserve">
          <source>PasswordBrokerManager::resolve()</source>
          <target state="translated">PasswordBrokerManager::resolve()</target>
        </trans-unit>
        <trans-unit id="5a2b1bef9edb733cd538b582c4c7006c309bd75f" translate="yes" xml:space="preserve">
          <source>PasswordBrokerManager::setDefaultDriver()</source>
          <target state="translated">PasswordBrokerManager::setDefaultDriver()</target>
        </trans-unit>
        <trans-unit id="73d417f73718be0c6a1f85508425ab291bb97f34" translate="yes" xml:space="preserve">
          <source>PasswordReset</source>
          <target state="translated">PasswordReset</target>
        </trans-unit>
        <trans-unit id="ee7d3c1ecf658216bc62a246ec2ceb1d022157fd" translate="yes" xml:space="preserve">
          <source>PasswordReset (Auth\Events)</source>
          <target state="translated">PasswordReset (AuthEvents)</target>
        </trans-unit>
        <trans-unit id="b354a87ef06483bb2821d2d453fdb7d6b9ce4885" translate="yes" xml:space="preserve">
          <source>PasswordReset::__construct()</source>
          <target state="translated">PasswordReset::__construct()</target>
        </trans-unit>
        <trans-unit id="dd5432908399aef25c892ae5e5d1b9d76ee644fe" translate="yes" xml:space="preserve">
          <source>PasswordResetServiceProvider</source>
          <target state="translated">PasswordResetServiceProvider</target>
        </trans-unit>
        <trans-unit id="d763b90feeb55b7c47eee5cb2a8a1076246459e7" translate="yes" xml:space="preserve">
          <source>PasswordResetServiceProvider (Auth\Passwords)</source>
          <target state="translated">PasswordResetServiceProvider (Auth\Passwords)</target>
        </trans-unit>
        <trans-unit id="a8a67e18ee4d315302e2a3e59a52a837b3a8faa9" translate="yes" xml:space="preserve">
          <source>PasswordResetServiceProvider::provides()</source>
          <target state="translated">PasswordResetServiceProvider::provides()</target>
        </trans-unit>
        <trans-unit id="dc3db964ce4e362678b8d6c7df471d13a7670554" translate="yes" xml:space="preserve">
          <source>PasswordResetServiceProvider::register()</source>
          <target state="translated">PasswordResetServiceProvider::register()</target>
        </trans-unit>
        <trans-unit id="a99dfddff232193104c31197fd241ea77c20552d" translate="yes" xml:space="preserve">
          <source>PasswordResetServiceProvider::registerPasswordBroker()</source>
          <target state="translated">PasswordResetServiceProvider::registerPasswordBroker()</target>
        </trans-unit>
        <trans-unit id="a4856d59f179e7d15da0e0cf7599aedbc25507f5" translate="yes" xml:space="preserve">
          <source>Past &amp;amp; Upcoming Payments</source>
          <target state="translated">過去および今後の支払い</target>
        </trans-unit>
        <trans-unit id="39fdc3168ff395d8315fd9cf1ded49d352509d0b" translate="yes" xml:space="preserve">
          <source>Past Due Status</source>
          <target state="translated">期限切れ状態</target>
        </trans-unit>
        <trans-unit id="bc9542bcb8c51a85721c7d88e5203af136f9bb1f" translate="yes" xml:space="preserve">
          <source>Path Customization</source>
          <target state="translated">パスのカスタマイズ</target>
        </trans-unit>
        <trans-unit id="13e7e11722f7d8309c367ea7823bd6cd32011ced" translate="yes" xml:space="preserve">
          <source>Paths</source>
          <target state="translated">Paths</target>
        </trans-unit>
        <trans-unit id="49776dee8534de54b26d410d494f4281fa409113" translate="yes" xml:space="preserve">
          <source>Pause the worker for the current loop.</source>
          <target state="translated">現在のループのワーカーを一時停止します。</target>
        </trans-unit>
        <trans-unit id="9ef37324469305f1974c09d9e8de12201acc420b" translate="yes" xml:space="preserve">
          <source>Pausing Indexing</source>
          <target state="translated">インデックスの一時停止</target>
        </trans-unit>
        <trans-unit id="674994ce08ecf249a714e4dd8cb7d5d56d8e4f45" translate="yes" xml:space="preserve">
          <source>Pausing Subscriptions</source>
          <target state="translated">購読の一時停止</target>
        </trans-unit>
        <trans-unit id="9764f13238175e55e59ee20c34c1b5c095c61e36" translate="yes" xml:space="preserve">
          <source>Pay Links</source>
          <target state="translated">有料リンク</target>
        </trans-unit>
        <trans-unit id="ad68e79c90152a0fc5460df3cfaa5104ad9d25fe" translate="yes" xml:space="preserve">
          <source>Payment Methods</source>
          <target state="translated">お支払い方法</target>
        </trans-unit>
        <trans-unit id="8529cdae3de0cf252f0834d88d86c57518094f22" translate="yes" xml:space="preserve">
          <source>Payment Methods For Single Charges</source>
          <target state="translated">単発料金のお支払い方法</target>
        </trans-unit>
        <trans-unit id="5ae46c8b6ee603bd092b2cb822f26d57c96b1cb3" translate="yes" xml:space="preserve">
          <source>Payment Methods For Subscriptions</source>
          <target state="translated">定期購読のお支払い方法</target>
        </trans-unit>
        <trans-unit id="8d597c60be0d21ceed10e38e399001df26a37297" translate="yes" xml:space="preserve">
          <source>Payment Succeeded</source>
          <target state="translated">支払いが成立しました。</target>
        </trans-unit>
        <trans-unit id="d6e644a137c846de962f9ac09df3cc5210ed6f43" translate="yes" xml:space="preserve">
          <source>Payment exceptions may be thrown for the following methods: &lt;code&gt;charge&lt;/code&gt;, &lt;code&gt;invoiceFor&lt;/code&gt;, and &lt;code&gt;invoice&lt;/code&gt; on the &lt;code&gt;Billable&lt;/code&gt; user. When handling subscriptions, the &lt;code&gt;create&lt;/code&gt; method on the &lt;code&gt;SubscriptionBuilder&lt;/code&gt;, and the &lt;code&gt;incrementAndInvoice&lt;/code&gt; and &lt;code&gt;swapAndInvoice&lt;/code&gt; methods on the &lt;code&gt;Subscription&lt;/code&gt; model may throw exceptions.</source>
          <target state="translated">：お支払いの例外は、次の方法のためにスローされる可能性が &lt;code&gt;charge&lt;/code&gt; 、 &lt;code&gt;invoiceFor&lt;/code&gt; 、および &lt;code&gt;invoice&lt;/code&gt; に &lt;code&gt;Billable&lt;/code&gt; ユーザー。サブスクリプションを取り扱うときは、 &lt;code&gt;create&lt;/code&gt; 上の方法を &lt;code&gt;SubscriptionBuilder&lt;/code&gt; 、そして &lt;code&gt;incrementAndInvoice&lt;/code&gt; と &lt;code&gt;swapAndInvoice&lt;/code&gt; のメソッド &lt;code&gt;Subscription&lt;/code&gt; モデルでは、例外をスローすることがあります。</target>
        </trans-unit>
        <trans-unit id="4cd9e32d66043be1c125f58f1f356610bd65e36e" translate="yes" xml:space="preserve">
          <source>Payments Requiring Additional Confirmation</source>
          <target state="translated">追加確認が必要なお支払い</target>
        </trans-unit>
        <trans-unit id="3272327b7ab16763914ea4f4ff1e279c01e9b620" translate="yes" xml:space="preserve">
          <source>PendingBatch</source>
          <target state="translated">PendingBatch</target>
        </trans-unit>
        <trans-unit id="22df317749a0aacf9dc1034245bee02a0bb165c5" translate="yes" xml:space="preserve">
          <source>PendingBatch (Bus)</source>
          <target state="translated">保留中のバッチ (バス)</target>
        </trans-unit>
        <trans-unit id="417521194927ddd6d83232a86a314442cb0b91d5" translate="yes" xml:space="preserve">
          <source>PendingBatch::__construct()</source>
          <target state="translated">PendingBatch::__construct()</target>
        </trans-unit>
        <trans-unit id="ba0cf5786405126129d5a6c48cf1e52f1fe5e8e7" translate="yes" xml:space="preserve">
          <source>PendingBatch::allowFailures()</source>
          <target state="translated">PendingBatch::allowFailures()</target>
        </trans-unit>
        <trans-unit id="78feb505070dde82bc9b50a52cd3536a48f64f57" translate="yes" xml:space="preserve">
          <source>PendingBatch::allowsFailures()</source>
          <target state="translated">PendingBatch::allowsFailures()</target>
        </trans-unit>
        <trans-unit id="91b0099ebc81b656709327f2b7fb11666d8b430a" translate="yes" xml:space="preserve">
          <source>PendingBatch::catch()</source>
          <target state="translated">PendingBatch::catch()</target>
        </trans-unit>
        <trans-unit id="69a7098d0000c3477a4f32aa7f9e637888a05aac" translate="yes" xml:space="preserve">
          <source>PendingBatch::catchCallbacks()</source>
          <target state="translated">PendingBatch::catchCallbacks()</target>
        </trans-unit>
        <trans-unit id="07e457cc4059ede1a58657562e1cb02eed628941" translate="yes" xml:space="preserve">
          <source>PendingBatch::connection()</source>
          <target state="translated">PendingBatch::connection()</target>
        </trans-unit>
        <trans-unit id="3193fb293b97651d69418399b6c572871a3f83fa" translate="yes" xml:space="preserve">
          <source>PendingBatch::dispatch()</source>
          <target state="translated">PendingBatch::dispatch()</target>
        </trans-unit>
        <trans-unit id="fc76cd0b62a0661493b75d9e7f0d7090112eede4" translate="yes" xml:space="preserve">
          <source>PendingBatch::finally()</source>
          <target state="translated">PendingBatch::finally()</target>
        </trans-unit>
        <trans-unit id="2b7622de8875508d0524c2315bb4ae98531a3c1c" translate="yes" xml:space="preserve">
          <source>PendingBatch::finallyCallbacks()</source>
          <target state="translated">PendingBatch::finallyCallbacks()</target>
        </trans-unit>
        <trans-unit id="41502e3843d76b783228a1e828fc6b9e104c9f07" translate="yes" xml:space="preserve">
          <source>PendingBatch::name()</source>
          <target state="translated">PendingBatch::name()</target>
        </trans-unit>
        <trans-unit id="8bf1654cb7ac0c89d136a8811b307a9834594b00" translate="yes" xml:space="preserve">
          <source>PendingBatch::onConnection()</source>
          <target state="translated">PendingBatch::onConnection()</target>
        </trans-unit>
        <trans-unit id="ee4c62380d91d52a263399196ff90a475614e354" translate="yes" xml:space="preserve">
          <source>PendingBatch::onQueue()</source>
          <target state="translated">PendingBatch::onQueue()</target>
        </trans-unit>
        <trans-unit id="7e3da95937481fc24498a3f0100d0c2668767936" translate="yes" xml:space="preserve">
          <source>PendingBatch::queue()</source>
          <target state="translated">PendingBatch::queue()</target>
        </trans-unit>
        <trans-unit id="83975f04b6fa61087da64c25f55cd2a6d2fafa69" translate="yes" xml:space="preserve">
          <source>PendingBatch::then()</source>
          <target state="translated">PendingBatch::then()</target>
        </trans-unit>
        <trans-unit id="5517dd7bd31e023d59be2cdcfb5b18c9b6de2268" translate="yes" xml:space="preserve">
          <source>PendingBatch::thenCallbacks()</source>
          <target state="translated">PendingBatch::thenCallbacks()</target>
        </trans-unit>
        <trans-unit id="121e0e4a3a4cbe4cde73d0929899314f1bce17ce" translate="yes" xml:space="preserve">
          <source>PendingBatchFake</source>
          <target state="translated">PendingBatchFake</target>
        </trans-unit>
        <trans-unit id="298b7fd548cef080b6ed973e0f0f639a99fba476" translate="yes" xml:space="preserve">
          <source>PendingBatchFake (Support\Testing)</source>
          <target state="translated">PendingBatchFake (SupportTesting)</target>
        </trans-unit>
        <trans-unit id="8f10e0fbdb12558371f8f921e6fd969d2d4382a2" translate="yes" xml:space="preserve">
          <source>PendingBatchFake::__construct()</source>
          <target state="translated">PendingBatchFake::__construct()</target>
        </trans-unit>
        <trans-unit id="a51b2af681ac8d18c2afe6284853989b60644df2" translate="yes" xml:space="preserve">
          <source>PendingBatchFake::dispatch()</source>
          <target state="translated">PendingBatchFake::dispatch()</target>
        </trans-unit>
        <trans-unit id="f3b4394c8d16e018a44f8ca336fe22d50c0aa437" translate="yes" xml:space="preserve">
          <source>PendingBroadcast</source>
          <target state="translated">PendingBroadcast</target>
        </trans-unit>
        <trans-unit id="9f94dca93881f3bc19788b97987dc88bf369a53a" translate="yes" xml:space="preserve">
          <source>PendingBroadcast (Broadcasting)</source>
          <target state="translated">保留中の放送(放送</target>
        </trans-unit>
        <trans-unit id="c6bb5594e1f6f4de4aec68ba88850a6ada39a24c" translate="yes" xml:space="preserve">
          <source>PendingBroadcast::__construct()</source>
          <target state="translated">PendingBroadcast::__construct()</target>
        </trans-unit>
        <trans-unit id="4bde14cbd1d3bf84abfc17a52fc86e4bfc2c9b16" translate="yes" xml:space="preserve">
          <source>PendingBroadcast::__destruct()</source>
          <target state="translated">PendingBroadcast::__destruct()</target>
        </trans-unit>
        <trans-unit id="aa0bbd86e6557ac1c84b7b9a0a1be643f6a4ded6" translate="yes" xml:space="preserve">
          <source>PendingBroadcast::toOthers()</source>
          <target state="translated">PendingBroadcast::toOthers()</target>
        </trans-unit>
        <trans-unit id="6beb8e5dd43c05f7c06f08f048934ecb096e8103" translate="yes" xml:space="preserve">
          <source>PendingChain</source>
          <target state="translated">PendingChain</target>
        </trans-unit>
        <trans-unit id="a5ed5807333403852df21808b58981476af1ec5b" translate="yes" xml:space="preserve">
          <source>PendingChain (Foundation\Bus)</source>
          <target state="translated">PendingChain (FoundationBus)</target>
        </trans-unit>
        <trans-unit id="76fa5a070e65b1a57ca02ef23eda81a379e45a2a" translate="yes" xml:space="preserve">
          <source>PendingChain::__construct()</source>
          <target state="translated">PendingChain::__construct()</target>
        </trans-unit>
        <trans-unit id="d8c698f5714c288eff35215ec694e3a35e12a72c" translate="yes" xml:space="preserve">
          <source>PendingChain::catch()</source>
          <target state="translated">PendingChain::catch()</target>
        </trans-unit>
        <trans-unit id="b86665e0671ae2249c7628070f2dea831ea20379" translate="yes" xml:space="preserve">
          <source>PendingChain::catchCallbacks()</source>
          <target state="translated">PendingChain::catchCallbacks()</target>
        </trans-unit>
        <trans-unit id="159ca9e047dc0b7fe2550ae4f77c1fc983962ca1" translate="yes" xml:space="preserve">
          <source>PendingChain::delay()</source>
          <target state="translated">PendingChain::delay()</target>
        </trans-unit>
        <trans-unit id="aee5ead4e492ebc122902f0d8499823c117304bd" translate="yes" xml:space="preserve">
          <source>PendingChain::dispatch()</source>
          <target state="translated">PendingChain::dispatch()</target>
        </trans-unit>
        <trans-unit id="ddb0047471e41fe084289ba5831c4c5170fa88f9" translate="yes" xml:space="preserve">
          <source>PendingChain::onConnection()</source>
          <target state="translated">PendingChain::onConnection()</target>
        </trans-unit>
        <trans-unit id="2356dc34c22f5ced5821a4b5ba3c698b13e226c9" translate="yes" xml:space="preserve">
          <source>PendingChain::onQueue()</source>
          <target state="translated">PendingChain::onQueue()</target>
        </trans-unit>
        <trans-unit id="d4b0a6227faeda57b9e577200c638b06f0db741f" translate="yes" xml:space="preserve">
          <source>PendingChainFake</source>
          <target state="translated">PendingChainFake</target>
        </trans-unit>
        <trans-unit id="967a885c1d0284f4e7a07e95420851360cabcea3" translate="yes" xml:space="preserve">
          <source>PendingChainFake (Support\Testing)</source>
          <target state="translated">PendingChainFake (Support_Testing)</target>
        </trans-unit>
        <trans-unit id="105657fed755906c7fb77b94bea6aa2706c987bc" translate="yes" xml:space="preserve">
          <source>PendingChainFake::__construct()</source>
          <target state="translated">PendingChainFake::__construct()</target>
        </trans-unit>
        <trans-unit id="5d48ad34e55e60c45737820741069c36f8b45674" translate="yes" xml:space="preserve">
          <source>PendingChainFake::dispatch()</source>
          <target state="translated">PendingChainFake::dispatch()</target>
        </trans-unit>
        <trans-unit id="d1ae9b10be69b3484dae43abd2b5efe5b63960c2" translate="yes" xml:space="preserve">
          <source>PendingClosureDispatch</source>
          <target state="translated">PendingClosureDispatch</target>
        </trans-unit>
        <trans-unit id="713210be37659852b52546d9e6826610057ff5f8" translate="yes" xml:space="preserve">
          <source>PendingClosureDispatch (Foundation\Bus)</source>
          <target state="translated">PendingClosureDispatch (Foundation)</target>
        </trans-unit>
        <trans-unit id="ce633d404725ab4f68677ea7cb32270a528f7c4e" translate="yes" xml:space="preserve">
          <source>PendingClosureDispatch::catch()</source>
          <target state="translated">PendingClosureDispatch::catch()</target>
        </trans-unit>
        <trans-unit id="96883e3d8dc640a7eced42063faeb4a49a93ef87" translate="yes" xml:space="preserve">
          <source>PendingCommand</source>
          <target state="translated">PendingCommand</target>
        </trans-unit>
        <trans-unit id="c6df20da91f3f602f55f1553eaca286124d970cc" translate="yes" xml:space="preserve">
          <source>PendingCommand (Foundation\Testing)</source>
          <target state="translated">PendingCommand (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="726c445e6a0d4ada36d6028ed80cb7b92fd05918" translate="yes" xml:space="preserve">
          <source>PendingCommand (Testing)</source>
          <target state="translated">PendingCommand (テスト中)</target>
        </trans-unit>
        <trans-unit id="71d86e906de05867fee40271670c16d47fca887b" translate="yes" xml:space="preserve">
          <source>PendingCommand::__construct()</source>
          <target state="translated">PendingCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="24692f3ca868a1b06d0a20659e137d355d27e0fa" translate="yes" xml:space="preserve">
          <source>PendingCommand::__destruct()</source>
          <target state="translated">PendingCommand::__destruct()</target>
        </trans-unit>
        <trans-unit id="8eeb78500c3ab794d106f87bea3268c9555698c8" translate="yes" xml:space="preserve">
          <source>PendingCommand::assertExitCode()</source>
          <target state="translated">PendingCommand::assertExitCode()</target>
        </trans-unit>
        <trans-unit id="91a6d150ea87e45c3fcbc5787b17a9f29b8a9d55" translate="yes" xml:space="preserve">
          <source>PendingCommand::doesntExpectOutput()</source>
          <target state="translated">PendingCommand::doesntExpectOutput()</target>
        </trans-unit>
        <trans-unit id="54b794cd0296ebdf0a51706d21d66918f8c57b8c" translate="yes" xml:space="preserve">
          <source>PendingCommand::execute()</source>
          <target state="translated">PendingCommand::execute()</target>
        </trans-unit>
        <trans-unit id="495c5d0563507dbcd8b75ea2a9cbd8c50a423ea2" translate="yes" xml:space="preserve">
          <source>PendingCommand::expectsChoice()</source>
          <target state="translated">PendingCommand::expectsChoice()</target>
        </trans-unit>
        <trans-unit id="1ba2d60d529c6352a19f23b644920772c678ee29" translate="yes" xml:space="preserve">
          <source>PendingCommand::expectsConfirmation()</source>
          <target state="translated">PendingCommand::expectsConfirmation()</target>
        </trans-unit>
        <trans-unit id="0176deb3b5d345292270c6ff025d21cb50525394" translate="yes" xml:space="preserve">
          <source>PendingCommand::expectsOutput()</source>
          <target state="translated">PendingCommand::expectsOutput()</target>
        </trans-unit>
        <trans-unit id="b1150a5ac7d4dc9e8463001670c2b68c847563bd" translate="yes" xml:space="preserve">
          <source>PendingCommand::expectsQuestion()</source>
          <target state="translated">PendingCommand::expectsQuestion()</target>
        </trans-unit>
        <trans-unit id="c9fb20032714551ca9b07535071c95e392960562" translate="yes" xml:space="preserve">
          <source>PendingCommand::expectsTable()</source>
          <target state="translated">PendingCommand::expectsTable()</target>
        </trans-unit>
        <trans-unit id="e3f7cd02aeb55e2216a55219cb3f997e85bc3748" translate="yes" xml:space="preserve">
          <source>PendingCommand::flushExpectations()</source>
          <target state="translated">PendingCommand::flushExpectations()</target>
        </trans-unit>
        <trans-unit id="53ffff0b3d1248b190a133383995e9ebfef578a2" translate="yes" xml:space="preserve">
          <source>PendingCommand::mockConsoleOutput()</source>
          <target state="translated">PendingCommand::mockConsoleOutput()</target>
        </trans-unit>
        <trans-unit id="0d93f91b5f2e7a20ac1c9f8d5d354472c15bcb1a" translate="yes" xml:space="preserve">
          <source>PendingCommand::run()</source>
          <target state="translated">PendingCommand::run()</target>
        </trans-unit>
        <trans-unit id="832b041a072e075ba36534fc3d53c1d09edaa5ab" translate="yes" xml:space="preserve">
          <source>PendingCommand::verifyExpectations()</source>
          <target state="translated">PendingCommand::verifyExpectations()</target>
        </trans-unit>
        <trans-unit id="fd626a583f553bd69d35603ba57b50487602bba7" translate="yes" xml:space="preserve">
          <source>PendingDispatch</source>
          <target state="translated">PendingDispatch</target>
        </trans-unit>
        <trans-unit id="2cb26b0cb9cc9da3eed89274a27e888e7925b5a8" translate="yes" xml:space="preserve">
          <source>PendingDispatch (Foundation\Bus)</source>
          <target state="translated">PendingDispatch (FoundationBus)</target>
        </trans-unit>
        <trans-unit id="b1cf9852a1534c52bf1c2ca84ba5b411f8a8d3a3" translate="yes" xml:space="preserve">
          <source>PendingDispatch::__call()</source>
          <target state="translated">PendingDispatch::__call()</target>
        </trans-unit>
        <trans-unit id="269131cc804ceef88595c80da142be1e0e095c6e" translate="yes" xml:space="preserve">
          <source>PendingDispatch::__construct()</source>
          <target state="translated">PendingDispatch::__construct()</target>
        </trans-unit>
        <trans-unit id="45b5549570d93fb989308653eac9c90f9940b070" translate="yes" xml:space="preserve">
          <source>PendingDispatch::__destruct()</source>
          <target state="translated">PendingDispatch::__destruct()</target>
        </trans-unit>
        <trans-unit id="252f427166ecfb4b37d69bf0f54750a5070abea9" translate="yes" xml:space="preserve">
          <source>PendingDispatch::afterResponse()</source>
          <target state="translated">PendingDispatch::afterResponse()</target>
        </trans-unit>
        <trans-unit id="4b3f725e5663c01aa4ab20f406d6f1b3eeae779b" translate="yes" xml:space="preserve">
          <source>PendingDispatch::allOnConnection()</source>
          <target state="translated">PendingDispatch::allOnConnection()</target>
        </trans-unit>
        <trans-unit id="64e27f4f4c9a2e7da826eb799af6e4c7d99a796c" translate="yes" xml:space="preserve">
          <source>PendingDispatch::allOnQueue()</source>
          <target state="translated">PendingDispatch::allOnQueue()</target>
        </trans-unit>
        <trans-unit id="018995b99d5c7c6de477540dc26ac29d8c001ae2" translate="yes" xml:space="preserve">
          <source>PendingDispatch::chain()</source>
          <target state="translated">PendingDispatch::chain()</target>
        </trans-unit>
        <trans-unit id="068bea9868410cb5b7c40c166b8fff299965ff7b" translate="yes" xml:space="preserve">
          <source>PendingDispatch::delay()</source>
          <target state="translated">PendingDispatch::delay()</target>
        </trans-unit>
        <trans-unit id="91ee412f437ef059d38bb468d26bc07c22a0d2ba" translate="yes" xml:space="preserve">
          <source>PendingDispatch::onConnection()</source>
          <target state="translated">PendingDispatch::onConnection()</target>
        </trans-unit>
        <trans-unit id="e63370be6e2d70cef6e713b0b21cd1cde6113f7c" translate="yes" xml:space="preserve">
          <source>PendingDispatch::onQueue()</source>
          <target state="translated">PendingDispatch::onQueue()</target>
        </trans-unit>
        <trans-unit id="81f82eabeca60acc9c514abe1f5db1dc0cb7f2eb" translate="yes" xml:space="preserve">
          <source>PendingDispatch::shouldDispatch()</source>
          <target state="translated">PendingDispatch::shouldDispatch()</target>
        </trans-unit>
        <trans-unit id="828d29647e8745962a4dea357b008a2ca876af6b" translate="yes" xml:space="preserve">
          <source>PendingMail</source>
          <target state="translated">PendingMail</target>
        </trans-unit>
        <trans-unit id="c0946abf98937095c4ad3305db742b9b03590e8b" translate="yes" xml:space="preserve">
          <source>PendingMail (Mail)</source>
          <target state="translated">ペンディングメール(メール</target>
        </trans-unit>
        <trans-unit id="cb92f46394a83479c0178bb97aab6634ab72fced" translate="yes" xml:space="preserve">
          <source>PendingMail::__construct()</source>
          <target state="translated">PendingMail::__construct()</target>
        </trans-unit>
        <trans-unit id="bafea78d37e17dbfea6a135b40933d9ac9fa468c" translate="yes" xml:space="preserve">
          <source>PendingMail::bcc()</source>
          <target state="translated">PendingMail::bcc()</target>
        </trans-unit>
        <trans-unit id="189d9352c84a242b31b795fba70436bf0fd19d74" translate="yes" xml:space="preserve">
          <source>PendingMail::cc()</source>
          <target state="translated">PendingMail::cc()</target>
        </trans-unit>
        <trans-unit id="9b43f5e7ef4b2c589dbfa018ad5aa20e83a55836" translate="yes" xml:space="preserve">
          <source>PendingMail::fill()</source>
          <target state="translated">PendingMail::fill()</target>
        </trans-unit>
        <trans-unit id="68ab3c5de358552b0a31146ff2cef67c2f3caf6a" translate="yes" xml:space="preserve">
          <source>PendingMail::later()</source>
          <target state="translated">PendingMail::later()</target>
        </trans-unit>
        <trans-unit id="47f7f23ed98ddf8f6ae156fa935bbf762109a97f" translate="yes" xml:space="preserve">
          <source>PendingMail::locale()</source>
          <target state="translated">PendingMail::locale()</target>
        </trans-unit>
        <trans-unit id="e820191906aefa929f1403c1179c257a9ca3a853" translate="yes" xml:space="preserve">
          <source>PendingMail::queue()</source>
          <target state="translated">PendingMail::queue()</target>
        </trans-unit>
        <trans-unit id="a3cba923498e4f9900a5ee56f7d430aa1818606a" translate="yes" xml:space="preserve">
          <source>PendingMail::send()</source>
          <target state="translated">PendingMail::send()</target>
        </trans-unit>
        <trans-unit id="94a6f3252c9b227a5f1998caf9d4163958c72ad6" translate="yes" xml:space="preserve">
          <source>PendingMail::sendNow()</source>
          <target state="translated">PendingMail::sendNow()</target>
        </trans-unit>
        <trans-unit id="8e2aa9ae57e42d5a603e9c92dc2111cc63efd453" translate="yes" xml:space="preserve">
          <source>PendingMail::to()</source>
          <target state="translated">PendingMail::to()</target>
        </trans-unit>
        <trans-unit id="0749f72251e942b366290ed89fdec98386f1da0e" translate="yes" xml:space="preserve">
          <source>PendingMailFake</source>
          <target state="translated">PendingMailFake</target>
        </trans-unit>
        <trans-unit id="4ab7abd72f93ed4a45cc06a122b0a4c9276de894" translate="yes" xml:space="preserve">
          <source>PendingMailFake (Support\Testing)</source>
          <target state="translated">PendingMailFake (SupportTesting)</target>
        </trans-unit>
        <trans-unit id="361bb7160e9ebcdb07330a8e66dfd1d34899bbf2" translate="yes" xml:space="preserve">
          <source>PendingMailFake::__construct()</source>
          <target state="translated">PendingMailFake::__construct()</target>
        </trans-unit>
        <trans-unit id="df931cca5f2faf75706f00782d6bda83268b2e1a" translate="yes" xml:space="preserve">
          <source>PendingMailFake::queue()</source>
          <target state="translated">PendingMailFake::queue()</target>
        </trans-unit>
        <trans-unit id="6996f0dc969aa8a59f62e9a74aa0a9ea072418a6" translate="yes" xml:space="preserve">
          <source>PendingMailFake::send()</source>
          <target state="translated">PendingMailFake::send()</target>
        </trans-unit>
        <trans-unit id="8989ca95c01c296ab9e8a4b8cde94730a81cac07" translate="yes" xml:space="preserve">
          <source>PendingMailFake::sendNow()</source>
          <target state="translated">PendingMailFake::sendNow()</target>
        </trans-unit>
        <trans-unit id="6e4dd6fd4637e315e46b48cfef2b5ddf557aadd5" translate="yes" xml:space="preserve">
          <source>PendingRequest</source>
          <target state="translated">PendingRequest</target>
        </trans-unit>
        <trans-unit id="42e92dc92cdea1af23c63cdae5e99e50293510a4" translate="yes" xml:space="preserve">
          <source>PendingRequest (Http\Client)</source>
          <target state="translated">PendingRequest (HttpClient)</target>
        </trans-unit>
        <trans-unit id="9a51536a5a802d256147c2a59d602a2c3c9d76d4" translate="yes" xml:space="preserve">
          <source>PendingRequest::__construct()</source>
          <target state="translated">PendingRequest::__construct()</target>
        </trans-unit>
        <trans-unit id="b275abc1c059f97210c11c24d75fb51d2e18e945" translate="yes" xml:space="preserve">
          <source>PendingRequest::accept()</source>
          <target state="translated">PendingRequest::accept()</target>
        </trans-unit>
        <trans-unit id="aea69b9ae5cddef35ed258e25ac3da2d5e606fc6" translate="yes" xml:space="preserve">
          <source>PendingRequest::acceptJson()</source>
          <target state="translated">PendingRequest::acceptJson()</target>
        </trans-unit>
        <trans-unit id="04899165a0746d3e7264c6e489a70b2a43c75f20" translate="yes" xml:space="preserve">
          <source>PendingRequest::asForm()</source>
          <target state="translated">PendingRequest::asForm()</target>
        </trans-unit>
        <trans-unit id="e12f5a3f47c15c054d9cfd7588cad71e5958aacf" translate="yes" xml:space="preserve">
          <source>PendingRequest::asJson()</source>
          <target state="translated">PendingRequest::asJson()</target>
        </trans-unit>
        <trans-unit id="321d725c24e37f37cf3f78e4e0b8a27515867a0e" translate="yes" xml:space="preserve">
          <source>PendingRequest::asMultipart()</source>
          <target state="translated">PendingRequest::asMultipart()</target>
        </trans-unit>
        <trans-unit id="4851ae4ec42ebb80cbbbf5fcdfdc7cfa8833b1a5" translate="yes" xml:space="preserve">
          <source>PendingRequest::attach()</source>
          <target state="translated">PendingRequest::attach()</target>
        </trans-unit>
        <trans-unit id="13db4c053173709d24ebb3876aa032ce16719002" translate="yes" xml:space="preserve">
          <source>PendingRequest::baseUrl()</source>
          <target state="translated">PendingRequest::baseUrl()</target>
        </trans-unit>
        <trans-unit id="56479c9e41032e60e5599f709a9874323e28dbbc" translate="yes" xml:space="preserve">
          <source>PendingRequest::beforeSending()</source>
          <target state="translated">PendingRequest::beforeSending()</target>
        </trans-unit>
        <trans-unit id="abc527af54a12d3c504e6b6decb8aa2dd73867ba" translate="yes" xml:space="preserve">
          <source>PendingRequest::bodyFormat()</source>
          <target state="translated">PendingRequest::bodyFormat()</target>
        </trans-unit>
        <trans-unit id="c2a313eee196fb6d7192ca9888e653b720d388b1" translate="yes" xml:space="preserve">
          <source>PendingRequest::buildBeforeSendingHandler()</source>
          <target state="translated">PendingRequest::buildBeforeSendingHandler()</target>
        </trans-unit>
        <trans-unit id="2085d2c69846d7fa45d1e90613a7a41389eefcaf" translate="yes" xml:space="preserve">
          <source>PendingRequest::buildClient()</source>
          <target state="translated">PendingRequest::buildClient()</target>
        </trans-unit>
        <trans-unit id="70b6e5477229f5fd08d6b373f0659d93f5640dc7" translate="yes" xml:space="preserve">
          <source>PendingRequest::buildHandlerStack()</source>
          <target state="translated">PendingRequest::buildHandlerStack()</target>
        </trans-unit>
        <trans-unit id="9fa7e99cfe3537690f845c24cdd9ebcbb1d26df1" translate="yes" xml:space="preserve">
          <source>PendingRequest::buildRecorderHandler()</source>
          <target state="translated">PendingRequest::buildRecorderHandler()</target>
        </trans-unit>
        <trans-unit id="1b568cfb258b6b0c666e3a9b5ce277a9ce9675ca" translate="yes" xml:space="preserve">
          <source>PendingRequest::buildStubHandler()</source>
          <target state="translated">PendingRequest::buildStubHandler()</target>
        </trans-unit>
        <trans-unit id="c3fd73b0195a79f3c0f2f75191467f517ecce24a" translate="yes" xml:space="preserve">
          <source>PendingRequest::contentType()</source>
          <target state="translated">PendingRequest::contentType()</target>
        </trans-unit>
        <trans-unit id="02fb0b33b9508e32919d955138734f333fdd7eab" translate="yes" xml:space="preserve">
          <source>PendingRequest::delete()</source>
          <target state="translated">PendingRequest::delete()</target>
        </trans-unit>
        <trans-unit id="acf162cc8c0953e2c9187c64629f7521ae12f45b" translate="yes" xml:space="preserve">
          <source>PendingRequest::get()</source>
          <target state="translated">PendingRequest::get()</target>
        </trans-unit>
        <trans-unit id="1ff51ebfcf9107f6e85a4e52c18633efdbf37186" translate="yes" xml:space="preserve">
          <source>PendingRequest::head()</source>
          <target state="translated">PendingRequest::head()</target>
        </trans-unit>
        <trans-unit id="7676c90283a7d8a5590e9a4a1d2303dc1df77819" translate="yes" xml:space="preserve">
          <source>PendingRequest::mergeOptions()</source>
          <target state="translated">PendingRequest::mergeOptions()</target>
        </trans-unit>
        <trans-unit id="ae3c4028d62528c6925005ec6a734fc658b107d8" translate="yes" xml:space="preserve">
          <source>PendingRequest::parseMultipartBodyFormat()</source>
          <target state="translated">PendingRequest::parseMultipartBodyFormat()</target>
        </trans-unit>
        <trans-unit id="679309158931dc213a32b71badd87ff1f47ac91b" translate="yes" xml:space="preserve">
          <source>PendingRequest::parseRequestData()</source>
          <target state="translated">PendingRequest::parseRequestData()</target>
        </trans-unit>
        <trans-unit id="efc24a803cdd3d26f23319acd7ca04b96cf5a223" translate="yes" xml:space="preserve">
          <source>PendingRequest::patch()</source>
          <target state="translated">PendingRequest::patch()</target>
        </trans-unit>
        <trans-unit id="9e7ee60d7ed7a35280278793dfd0b95bbb9af396" translate="yes" xml:space="preserve">
          <source>PendingRequest::post()</source>
          <target state="translated">PendingRequest::post()</target>
        </trans-unit>
        <trans-unit id="851ab64895206bb65d66046d553a2909f05b0c1a" translate="yes" xml:space="preserve">
          <source>PendingRequest::put()</source>
          <target state="translated">PendingRequest::put()</target>
        </trans-unit>
        <trans-unit id="8eedfdd4a6b770a50e503128dcd22395a75cba2f" translate="yes" xml:space="preserve">
          <source>PendingRequest::retry()</source>
          <target state="translated">PendingRequest::retry()</target>
        </trans-unit>
        <trans-unit id="2505cd3bd412f3a394b447d09c1a89234992e91e" translate="yes" xml:space="preserve">
          <source>PendingRequest::runBeforeSendingCallbacks()</source>
          <target state="translated">PendingRequest::runBeforeSendingCallbacks()</target>
        </trans-unit>
        <trans-unit id="d1ff1d9bef8664242c2ba7808312b0b3ebd6665a" translate="yes" xml:space="preserve">
          <source>PendingRequest::send()</source>
          <target state="translated">PendingRequest::send()</target>
        </trans-unit>
        <trans-unit id="b59b7f8866d683bca24d3c72ba28843322bdeec1" translate="yes" xml:space="preserve">
          <source>PendingRequest::sink()</source>
          <target state="translated">PendingRequest::sink()</target>
        </trans-unit>
        <trans-unit id="fe3dd385b810aae8a825996beba3adc26cbde661" translate="yes" xml:space="preserve">
          <source>PendingRequest::sinkStubHandler()</source>
          <target state="translated">PendingRequest::sinkStubHandler()</target>
        </trans-unit>
        <trans-unit id="c672f7d7ea863e97c7ca12f27747e1402642e6fe" translate="yes" xml:space="preserve">
          <source>PendingRequest::stub()</source>
          <target state="translated">PendingRequest::stub()</target>
        </trans-unit>
        <trans-unit id="6f5b3615fbe4339aeaef7f357692df646bd390b9" translate="yes" xml:space="preserve">
          <source>PendingRequest::timeout()</source>
          <target state="translated">PendingRequest::timeout()</target>
        </trans-unit>
        <trans-unit id="154b3de886c1f453839af4121486c6570e1f2d4a" translate="yes" xml:space="preserve">
          <source>PendingRequest::withBasicAuth()</source>
          <target state="translated">PendingRequest::withBasicAuth()</target>
        </trans-unit>
        <trans-unit id="bc74e10721bbb81c176fe8b54dfe721ddca9e832" translate="yes" xml:space="preserve">
          <source>PendingRequest::withBody()</source>
          <target state="translated">PendingRequest::withBody()</target>
        </trans-unit>
        <trans-unit id="7f3d1d54947dff30115a000f7d274f7ee51358c0" translate="yes" xml:space="preserve">
          <source>PendingRequest::withCookies()</source>
          <target state="translated">PendingRequest::withCookies()</target>
        </trans-unit>
        <trans-unit id="cdad7bac8fade397a9e4d2d9212726a2bab3aad1" translate="yes" xml:space="preserve">
          <source>PendingRequest::withDigestAuth()</source>
          <target state="translated">PendingRequest::withDigestAuth()</target>
        </trans-unit>
        <trans-unit id="beb24f18134a485dd34e6f2be2986c5ad49beee1" translate="yes" xml:space="preserve">
          <source>PendingRequest::withHeaders()</source>
          <target state="translated">PendingRequest::withHeaders()</target>
        </trans-unit>
        <trans-unit id="e6c749c8c439d256cd7984a9f5fa8d350ecadc0e" translate="yes" xml:space="preserve">
          <source>PendingRequest::withMiddleware()</source>
          <target state="translated">PendingRequest::withMiddleware()</target>
        </trans-unit>
        <trans-unit id="0cfb265b6d6e76f6fbfbce4a9a3a0fba38b047eb" translate="yes" xml:space="preserve">
          <source>PendingRequest::withOptions()</source>
          <target state="translated">PendingRequest::withOptions()</target>
        </trans-unit>
        <trans-unit id="d394b4e1eb3a7b360f6eb79de56f55aaf06a2464" translate="yes" xml:space="preserve">
          <source>PendingRequest::withToken()</source>
          <target state="translated">PendingRequest::withToken()</target>
        </trans-unit>
        <trans-unit id="de681aa9cfca24f4c14527c418613600c4542c26" translate="yes" xml:space="preserve">
          <source>PendingRequest::withUserAgent()</source>
          <target state="translated">PendingRequest::withUserAgent()</target>
        </trans-unit>
        <trans-unit id="a3860a486904e61558595ed5309f9e849b1dbd15" translate="yes" xml:space="preserve">
          <source>PendingRequest::withoutRedirecting()</source>
          <target state="translated">PendingRequest::withoutRedirecting()</target>
        </trans-unit>
        <trans-unit id="2191b98024aa6c55c90cb79d291ac1653bd1ad53" translate="yes" xml:space="preserve">
          <source>PendingRequest::withoutVerifying()</source>
          <target state="translated">PendingRequest::withoutVerifying()</target>
        </trans-unit>
        <trans-unit id="8f7cc9d5ba58f94a13465d1612c02ea31eb5dc40" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration</source>
          <target state="translated">PendingResourceRegistration</target>
        </trans-unit>
        <trans-unit id="348e679ee3e925d91ca0fd7868383f7253bc806d" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration (Routing)</source>
          <target state="translated">PendingResourceRegistration (ルーティング)</target>
        </trans-unit>
        <trans-unit id="e09e59bd80450774e380149b7e156fd530dbb3f2" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::__construct()</source>
          <target state="translated">PendingResourceRegistration::__construct()</target>
        </trans-unit>
        <trans-unit id="7ec8b05f5331d6c4a9735d81c7ab8eff4a465607" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::__destruct()</source>
          <target state="translated">PendingResourceRegistration::__destruct()</target>
        </trans-unit>
        <trans-unit id="5fb65d7f093b7a489e3b80d87d3494fc17823609" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::except()</source>
          <target state="translated">PendingResourceRegistration::except()</target>
        </trans-unit>
        <trans-unit id="cbc5dd4750bfca6e6b22d6cd9114d01b9e4f3968" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::middleware()</source>
          <target state="translated">PendingResourceRegistration::middleware()</target>
        </trans-unit>
        <trans-unit id="6d89380ad6682e986f219118d079562697996f79" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::name()</source>
          <target state="translated">PendingResourceRegistration::name()</target>
        </trans-unit>
        <trans-unit id="8260906e7ef60cda8842531d079531cc00b12bec" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::names()</source>
          <target state="translated">PendingResourceRegistration::names()</target>
        </trans-unit>
        <trans-unit id="b93dbc45e8a6024791872ae26c6baf1a22f7360e" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::only()</source>
          <target state="translated">PendingResourceRegistration::only()</target>
        </trans-unit>
        <trans-unit id="7ab675f8943a7758fd3795b4dbeb95000c39e3cf" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::parameter()</source>
          <target state="translated">PendingResourceRegistration::parameter()</target>
        </trans-unit>
        <trans-unit id="b5413a25c6bee60fbfb2f6369b8b8d29334965b7" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::parameters()</source>
          <target state="translated">PendingResourceRegistration::parameters()</target>
        </trans-unit>
        <trans-unit id="ceeedae60c4d190adbb1a1d23ab91acd309f0a3d" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::register()</source>
          <target state="translated">PendingResourceRegistration::register()</target>
        </trans-unit>
        <trans-unit id="e19f1d696ab5b85153496a0cb6f6874d2853a0eb" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::scoped()</source>
          <target state="translated">PendingResourceRegistration::scoped()</target>
        </trans-unit>
        <trans-unit id="85dbfd14dd293043bbd81e1f851a4afc915ea866" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::shallow()</source>
          <target state="translated">PendingResourceRegistration::shallow()</target>
        </trans-unit>
        <trans-unit id="62097f52121846d294ee745b645d6e5d9b225938" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::where()</source>
          <target state="translated">PendingResourceRegistration::where()</target>
        </trans-unit>
        <trans-unit id="267b1d53e2cb9359f1d0cc1ec1448ea98d59bd28" translate="yes" xml:space="preserve">
          <source>PendingResourceRegistration::withoutMiddleware()</source>
          <target state="translated">PendingResourceRegistration::withoutMiddleware()</target>
        </trans-unit>
        <trans-unit id="08814dca38e9a4072be138baa42f3cc541f6fb8b" translate="yes" xml:space="preserve">
          <source>Per Project Installation</source>
          <target state="translated">プロジェクトのインストールごとに</target>
        </trans-unit>
        <trans-unit id="823fab0700204872d084fe1692473569fc55f362" translate="yes" xml:space="preserve">
          <source>Perform a model insert operation.</source>
          <target state="translated">モデルの挿入操作を行います。</target>
        </trans-unit>
        <trans-unit id="829798069cf88f542ec82748d467217ff0adbbc5" translate="yes" xml:space="preserve">
          <source>Perform a model update operation.</source>
          <target state="translated">モデルの更新操作を行います。</target>
        </trans-unit>
        <trans-unit id="d3842f1c12e1dd875cf359a9b8b499fc9034ece1" translate="yes" xml:space="preserve">
          <source>Perform a rollback within the database.</source>
          <target state="translated">データベース内でロールバックを実行します。</target>
        </trans-unit>
        <trans-unit id="b6a6b1cb733c62305e4e09799c22ac7669c84a34" translate="yes" xml:space="preserve">
          <source>Perform a stateless HTTP Basic login attempt.</source>
          <target state="translated">ステートレス HTTP ベーシックのログイン試行を実行します。</target>
        </trans-unit>
        <trans-unit id="4686976d32a0acdfce99635e71f214eb6c571373" translate="yes" xml:space="preserve">
          <source>Perform an insert operation on the session ID.</source>
          <target state="translated">セッションIDに対して挿入操作を実行します。</target>
        </trans-unit>
        <trans-unit id="86e3d88e986a6a9b6fac7caca7058b0183cd7f94" translate="yes" xml:space="preserve">
          <source>Perform an update on all the related models.</source>
          <target state="translated">関連するすべてのモデルの更新を実行します。</target>
        </trans-unit>
        <trans-unit id="dfc9c30f7be1cc12001cd2854404f37e0b6c88f7" translate="yes" xml:space="preserve">
          <source>Perform an update operation on the session ID.</source>
          <target state="translated">セッションIDの更新操作を行います。</target>
        </trans-unit>
        <trans-unit id="af920378986ebd9f685c57f01e51c56f58b6ae04" translate="yes" xml:space="preserve">
          <source>Perform any actions required after the model boots.</source>
          <target state="translated">モデルが起動した後に必要なアクションを実行します。</target>
        </trans-unit>
        <trans-unit id="e609a2f0d6460bb8e9ecf0995e312d44e441a213" translate="yes" xml:space="preserve">
          <source>Perform any actions required before the model boots.</source>
          <target state="translated">モデルがブーツを履く前に必要なアクションを実行します。</target>
        </trans-unit>
        <trans-unit id="734e9c133fb71b413a4ae7243b09bb55142fdd71" translate="yes" xml:space="preserve">
          <source>Perform any actions that are necessary after the model is saved.</source>
          <target state="translated">モデルの保存後に必要なアクションを実行します。</target>
        </trans-unit>
        <trans-unit id="48473dd897f4dc113c2ec59c47a357485d4b7b38" translate="yes" xml:space="preserve">
          <source>Perform any final actions for the request lifecycle.</source>
          <target state="translated">リクエストライフサイクルの最終アクションを実行します。</target>
        </trans-unit>
        <trans-unit id="00b272a6e064872d35460a62599bd20654d64406" translate="yes" xml:space="preserve">
          <source>Perform the actual delete query on this model instance.</source>
          <target state="translated">このモデル・インスタンスで実際の削除クエリを実行します。</target>
        </trans-unit>
        <trans-unit id="4fa50a63199ba779e213e3aa97068a2d403d4c71" translate="yes" xml:space="preserve">
          <source>Permanently Deleting Models</source>
          <target state="translated">モデルの永久削除</target>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="translated">Permissions</target>
        </trans-unit>
        <trans-unit id="31f6102ec5c1d642279a48e81294836c07ea2ca6" translate="yes" xml:space="preserve">
          <source>Persist the cache.</source>
          <target state="translated">キャッシュを持続させます。</target>
        </trans-unit>
        <trans-unit id="d88710c5bbda00e7574579333d12012bab05e2da" translate="yes" xml:space="preserve">
          <source>Persisting Models</source>
          <target state="translated">永続的なモデル</target>
        </trans-unit>
        <trans-unit id="877840cbbb9f3c2b3245f6c73bb0f076dd8f5dad" translate="yes" xml:space="preserve">
          <source>Personal Access Tokens</source>
          <target state="translated">パーソナルアクセストークン</target>
        </trans-unit>
        <trans-unit id="c1c68d21e744aedf0bd6fd7e228ac7cab58bfb89" translate="yes" xml:space="preserve">
          <source>Personal access tokens are always long-lived. Their lifetime is not modified when using the &lt;code&gt;tokensExpireIn&lt;/code&gt; or &lt;code&gt;refreshTokensExpireIn&lt;/code&gt; methods.</source>
          <target state="translated">個人用アクセストークンは常に長寿命です。使用しているとき彼らの寿命は変更されません &lt;code&gt;tokensExpireIn&lt;/code&gt; または &lt;code&gt;refreshTokensExpireIn&lt;/code&gt; 方法を。</target>
        </trans-unit>
        <trans-unit id="d7aeaedcfd280905587ea017020fed1dca2b57e3" translate="yes" xml:space="preserve">
          <source>Pessimistic Locking</source>
          <target state="translated">悲観的なロッキング</target>
        </trans-unit>
        <trans-unit id="acc044d3ff482759e10f3208b1bebbae0828a88c" translate="yes" xml:space="preserve">
          <source>Pheanstalk</source>
          <target state="translated">Pheanstalk</target>
        </trans-unit>
        <trans-unit id="f4922b36819ded185a9e1d7a5252f6e7c353ad53" translate="yes" xml:space="preserve">
          <source>Pheanstalk
    getPheanstalk()</source>
          <target state="translated">Pheanstalk getPheanstalk()</target>
        </trans-unit>
        <trans-unit id="93a99154e961aa6f0a7f77bb41b36dd3f946b057" translate="yes" xml:space="preserve">
          <source>PhpEngine</source>
          <target state="translated">PhpEngine</target>
        </trans-unit>
        <trans-unit id="c2670a39fd3ad0ffa5189bef54b2ca7321210e45" translate="yes" xml:space="preserve">
          <source>PhpEngine (View\Engines)</source>
          <target state="translated">PhpEngine (ViewEngines)</target>
        </trans-unit>
        <trans-unit id="436a99bc2a1a6b29d576ddb5d22b466388ab2cff" translate="yes" xml:space="preserve">
          <source>PhpEngine::__construct()</source>
          <target state="translated">PhpEngine::__construct()</target>
        </trans-unit>
        <trans-unit id="1d605e812eef30bd3c1f53aabfc0b7b1da47f721" translate="yes" xml:space="preserve">
          <source>PhpEngine::evaluatePath()</source>
          <target state="translated">PhpEngine::evaluatePath()</target>
        </trans-unit>
        <trans-unit id="474beab9eba3810925778cb8cf53f120a3cf817f" translate="yes" xml:space="preserve">
          <source>PhpEngine::get()</source>
          <target state="translated">PhpEngine::get()</target>
        </trans-unit>
        <trans-unit id="6c7468a60dfffb2936c771b90afa142da970df99" translate="yes" xml:space="preserve">
          <source>PhpEngine::handleViewException()</source>
          <target state="translated">PhpEngine::handleViewException()</target>
        </trans-unit>
        <trans-unit id="b481d01e69113e5d08635f93eb190966b2e7c1f1" translate="yes" xml:space="preserve">
          <source>PhpRedis</source>
          <target state="translated">PhpRedis</target>
        </trans-unit>
        <trans-unit id="1291287410cef7ba8d964865916ad8c2d6028e5d" translate="yes" xml:space="preserve">
          <source>PhpRedisClusterConnection</source>
          <target state="translated">PhpRedisClusterConnection</target>
        </trans-unit>
        <trans-unit id="6deed49b6e71cecc3ecf1aaf93fdf0e05b837975" translate="yes" xml:space="preserve">
          <source>PhpRedisClusterConnection (Redis\Connections)</source>
          <target state="translated">PhpRedisClusterConnection (RedisConnections)</target>
        </trans-unit>
        <trans-unit id="1767f3289d24957aca8ddacdb750440d1259a266" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection</source>
          <target state="translated">PhpRedisConnection</target>
        </trans-unit>
        <trans-unit id="892c3953d7dcd895a38dbcf6ff3bfc360a7f0273" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection (Redis\Connections)</source>
          <target state="translated">PhpRedisConnection (RedisConnections)</target>
        </trans-unit>
        <trans-unit id="27919385f151dbc4616e87978349d469e9a96585" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::__call()</source>
          <target state="translated">PhpRedisConnection::__call()</target>
        </trans-unit>
        <trans-unit id="388425e8cc321834f7dccec8f972011b5c2b9eb9" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::__construct()</source>
          <target state="translated">PhpRedisConnection::__construct()</target>
        </trans-unit>
        <trans-unit id="d8609e675bac6742070d3cdc3a9402c2c1a05124" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::blpop()</source>
          <target state="translated">PhpRedisConnection::blpop()</target>
        </trans-unit>
        <trans-unit id="6eaece60af02e552d7846cecccd2587ad7d90a62" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::brpop()</source>
          <target state="translated">PhpRedisConnection::brpop()</target>
        </trans-unit>
        <trans-unit id="b6eb64fab23eb678d315cc27d3dda0abb4f41bbd" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::command()</source>
          <target state="translated">PhpRedisConnection::command()</target>
        </trans-unit>
        <trans-unit id="b105c1b106794cbd81a490e4c1218ecae753f85e" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::createSubscription()</source>
          <target state="translated">PhpRedisConnection::createSubscription()</target>
        </trans-unit>
        <trans-unit id="704101004a18bbaa3363d8f7962fb4f8ba640d78" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::disconnect()</source>
          <target state="translated">PhpRedisConnection::disconnect()</target>
        </trans-unit>
        <trans-unit id="e3f2c8d219af921d52cf5d0d998f2bfa90303623" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::eval()</source>
          <target state="translated">PhpRedisConnection::eval()</target>
        </trans-unit>
        <trans-unit id="18be6fe5924f062875053087eb182c55609ecfd1" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::evalsha()</source>
          <target state="translated">PhpRedisConnection::evalsha()</target>
        </trans-unit>
        <trans-unit id="9791602037ed784c2723696b17fc66078414be98" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::executeRaw()</source>
          <target state="translated">PhpRedisConnection::executeRaw()</target>
        </trans-unit>
        <trans-unit id="17ebfbb6e7982f8d8c0d8f8f31f07db44d464e5a" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::exists()</source>
          <target state="translated">PhpRedisConnection::exists()</target>
        </trans-unit>
        <trans-unit id="ad448612d2fec0f4d39bcf4ceb41963eb27daa1a" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::flushdb()</source>
          <target state="translated">PhpRedisConnection::flushdb()</target>
        </trans-unit>
        <trans-unit id="ffe193ca800b2958a9c65334c487076866bebe40" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::get()</source>
          <target state="translated">PhpRedisConnection::get()</target>
        </trans-unit>
        <trans-unit id="de1ab3fb3e4aeec6f7f34b14b016f408d3b5fdc5" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::hmget()</source>
          <target state="translated">PhpRedisConnection::hmget()</target>
        </trans-unit>
        <trans-unit id="354726b0383ab47f989db8212b959e4224650103" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::hmset()</source>
          <target state="translated">PhpRedisConnection::hmset()</target>
        </trans-unit>
        <trans-unit id="e59196dabe6710578b5b15fa3609e7ff8c786faf" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::hscan()</source>
          <target state="translated">PhpRedisConnection::hscan()</target>
        </trans-unit>
        <trans-unit id="56ea3b39172194afe5de1241007f9632b1ec068a" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::hsetnx()</source>
          <target state="translated">PhpRedisConnection::hsetnx()</target>
        </trans-unit>
        <trans-unit id="dde44075fe6635af9076a64febd2ec7a500c9823" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::lrem()</source>
          <target state="translated">PhpRedisConnection::lrem()</target>
        </trans-unit>
        <trans-unit id="3610e0ba8aeed29852805bed6ff38f2060b78762" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::mget()</source>
          <target state="translated">PhpRedisConnection::mget()</target>
        </trans-unit>
        <trans-unit id="6c301bca80fa5c0b13250e9299734e3c1f0c0533" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::pipeline()</source>
          <target state="translated">PhpRedisConnection::pipeline()</target>
        </trans-unit>
        <trans-unit id="ff72790d02b736229f665040a373ac061e097ccc" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::psubscribe()</source>
          <target state="translated">PhpRedisConnection::psubscribe()</target>
        </trans-unit>
        <trans-unit id="21405cc9848d96bd4bfb7ba386e907b0e1db7e74" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::scan()</source>
          <target state="translated">PhpRedisConnection::scan()</target>
        </trans-unit>
        <trans-unit id="3225b10fae3932a7fee6b6b9c9aabd90fe583788" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::set()</source>
          <target state="translated">PhpRedisConnection::set()</target>
        </trans-unit>
        <trans-unit id="eda9a3def233a3d9af3d57d09c2e10bfbdea398f" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::setnx()</source>
          <target state="translated">PhpRedisConnection::setnx()</target>
        </trans-unit>
        <trans-unit id="be9fca2072a48c4fdb561eee78d709796bea450c" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::spop()</source>
          <target state="translated">PhpRedisConnection::spop()</target>
        </trans-unit>
        <trans-unit id="18a02b9e47658a3e1a8ddfb5e8fe4d3899defee0" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::sscan()</source>
          <target state="translated">PhpRedisConnection::sscan()</target>
        </trans-unit>
        <trans-unit id="47a634573784ccd4e19066479081c2543cde9237" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::subscribe()</source>
          <target state="translated">PhpRedisConnection::subscribe()</target>
        </trans-unit>
        <trans-unit id="68b03f03fe6380eb1fb3345fdf57ad5e9f1d3c55" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::transaction()</source>
          <target state="translated">PhpRedisConnection::transaction()</target>
        </trans-unit>
        <trans-unit id="8d8fbe5e39d9905e74bf14d1459e74b7df3e8034" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::zadd()</source>
          <target state="translated">PhpRedisConnection::zadd()</target>
        </trans-unit>
        <trans-unit id="0f7b46b19a01e973bc6ca8f6d4828be1342e2f97" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::zinterstore()</source>
          <target state="translated">PhpRedisConnection::zinterstore()</target>
        </trans-unit>
        <trans-unit id="fbc23fc1bd3d0b0180cd058faae240a00c8f3a9a" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::zrangebyscore()</source>
          <target state="translated">PhpRedisConnection::zrangebyscore()</target>
        </trans-unit>
        <trans-unit id="8fc629cc79f103bcbcdad03161e504c5105142d8" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::zrevrangebyscore()</source>
          <target state="translated">PhpRedisConnection::zrevrangebyscore()</target>
        </trans-unit>
        <trans-unit id="7a44750d590f8497babe4d88d1e4669c3779d40a" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::zscan()</source>
          <target state="translated">PhpRedisConnection::zscan()</target>
        </trans-unit>
        <trans-unit id="cfffb6808b3fccb3d7a44e8cffc1242193fe84f5" translate="yes" xml:space="preserve">
          <source>PhpRedisConnection::zunionstore()</source>
          <target state="translated">PhpRedisConnection::zunionstore()</target>
        </trans-unit>
        <trans-unit id="78fabc12365a02c3efeb5bf09a3f57c8ff14babf" translate="yes" xml:space="preserve">
          <source>PhpRedisConnector</source>
          <target state="translated">PhpRedisConnector</target>
        </trans-unit>
        <trans-unit id="285b9ed9c1639ed56d583ce7cb6052df889e5fe3" translate="yes" xml:space="preserve">
          <source>PhpRedisConnector (Redis\Connectors)</source>
          <target state="translated">PhpRedisConnector (RedisConnectors)</target>
        </trans-unit>
        <trans-unit id="564d0ca9f2cb0fc81f3cf235ffd0f43745fed277" translate="yes" xml:space="preserve">
          <source>PhpRedisConnector::buildClusterConnectionString()</source>
          <target state="translated">PhpRedisConnector::buildClusterConnectionString()</target>
        </trans-unit>
        <trans-unit id="37aedf23b95d3052d4422429253985340db8d0ef" translate="yes" xml:space="preserve">
          <source>PhpRedisConnector::connect()</source>
          <target state="translated">PhpRedisConnector::connect()</target>
        </trans-unit>
        <trans-unit id="c6c3d06e1c04a1f041079553d49b044e36b69182" translate="yes" xml:space="preserve">
          <source>PhpRedisConnector::connectToCluster()</source>
          <target state="translated">PhpRedisConnector::connectToCluster()</target>
        </trans-unit>
        <trans-unit id="841648842145022778af8dfdcbd10223404e584e" translate="yes" xml:space="preserve">
          <source>PhpRedisConnector::createClient()</source>
          <target state="translated">PhpRedisConnector::createClient()</target>
        </trans-unit>
        <trans-unit id="95fc0a1eccb8f6da9c0f1e36d3d980cdc573b1f5" translate="yes" xml:space="preserve">
          <source>PhpRedisConnector::createRedisClusterInstance()</source>
          <target state="translated">PhpRedisConnector::createRedisClusterInstance()</target>
        </trans-unit>
        <trans-unit id="8a6364956491e34734c0bf43795c525a3f3debae" translate="yes" xml:space="preserve">
          <source>PhpRedisConnector::establishConnection()</source>
          <target state="translated">PhpRedisConnector::establishConnection()</target>
        </trans-unit>
        <trans-unit id="46e6681728c669831a986943ac516a40edb180e1" translate="yes" xml:space="preserve">
          <source>PhpRedisConnector::formatHost()</source>
          <target state="translated">PhpRedisConnector::formatHost()</target>
        </trans-unit>
        <trans-unit id="984a93246a2076e2eb6766b9f48b53cd070a6c4d" translate="yes" xml:space="preserve">
          <source>Pinging URLs</source>
          <target state="translated">ピンギングURL</target>
        </trans-unit>
        <trans-unit id="32b1d5a78493496dd5152fd2d504f7e21009e3f2" translate="yes" xml:space="preserve">
          <source>Pipeline</source>
          <target state="translated">Pipeline</target>
        </trans-unit>
        <trans-unit id="557b1465cc3133d27a5eda8035b8fa2a3cf23339" translate="yes" xml:space="preserve">
          <source>Pipeline (Contracts)</source>
          <target state="translated">パイプライン(契約</target>
        </trans-unit>
        <trans-unit id="03be348da40e778005c1a9ce3817bc107a98986a" translate="yes" xml:space="preserve">
          <source>Pipeline (Routing)</source>
          <target state="translated">パイプライン(ルーティング</target>
        </trans-unit>
        <trans-unit id="f9982d885fae0451ecf498121bb258c15e0107af" translate="yes" xml:space="preserve">
          <source>Pipeline::carry()</source>
          <target state="translated">Pipeline::carry()</target>
        </trans-unit>
        <trans-unit id="bdd60cf99437b6b463fb59f839cc461ca3d8d956" translate="yes" xml:space="preserve">
          <source>Pipeline::handleCarry()</source>
          <target state="translated">Pipeline::handleCarry()</target>
        </trans-unit>
        <trans-unit id="f3787d6ab74e81c07c737dcd26106ec92da49c6d" translate="yes" xml:space="preserve">
          <source>Pipeline::handleException()</source>
          <target state="translated">Pipeline::handleException()</target>
        </trans-unit>
        <trans-unit id="fd50b662be6ef1ad6cae9d8bffbbbc26f6bb9147" translate="yes" xml:space="preserve">
          <source>Pipeline::prepareDestination()</source>
          <target state="translated">Pipeline::prepareDestination()</target>
        </trans-unit>
        <trans-unit id="c6fcf35c7b777c18618a1690caa1b74eff218a52" translate="yes" xml:space="preserve">
          <source>Pipeline::send()</source>
          <target state="translated">Pipeline::send()</target>
        </trans-unit>
        <trans-unit id="0fe492b64f424fc00fe9d8c8443d4800d3566420" translate="yes" xml:space="preserve">
          <source>Pipeline::then()</source>
          <target state="translated">Pipeline::then()</target>
        </trans-unit>
        <trans-unit id="54f42e5ded7e121b8f3f90db404e2fc327de5390" translate="yes" xml:space="preserve">
          <source>Pipeline::through()</source>
          <target state="translated">Pipeline::through()</target>
        </trans-unit>
        <trans-unit id="5fd61449ad3d6d450bc2d2d96c2a3cb91834e3eb" translate="yes" xml:space="preserve">
          <source>Pipeline::via()</source>
          <target state="translated">Pipeline::via()</target>
        </trans-unit>
        <trans-unit id="6d933bb8b864fb777cd51c9d14a6b6e3fe4d6e16" translate="yes" xml:space="preserve">
          <source>PipelineServiceProvider</source>
          <target state="translated">PipelineServiceProvider</target>
        </trans-unit>
        <trans-unit id="f4d33d462cc6a387a52eb7b8ac4861b745d729cf" translate="yes" xml:space="preserve">
          <source>Pipelining Commands</source>
          <target state="translated">パイプラインコマンド</target>
        </trans-unit>
        <trans-unit id="a2e5072207af2e2dd73b9b3dfdda08ef6fceea4a" translate="yes" xml:space="preserve">
          <source>Pipelining should be used when you need to send many commands to the server in one operation. The &lt;code&gt;pipeline&lt;/code&gt; method accepts one argument: a &lt;code&gt;Closure&lt;/code&gt; that receives a Redis instance. You may issue all of your commands to this Redis instance and they will all be executed within a single operation:</source>
          <target state="translated">1回の操作で多くのコマンドをサーバーに送信する必要がある場合は、パイプライン処理を使用する必要があります。 &lt;code&gt;pipeline&lt;/code&gt; ：メソッドは一つの引数受け入れ &lt;code&gt;Closure&lt;/code&gt; Redisのインスタンスを受け取ります。すべてのコマンドをこのRedisインスタンスに発行することができ、それらはすべて単一の操作内で実行されます。</target>
        </trans-unit>
        <trans-unit id="2f0e8cf528772adb261ab74e75bc61ed839c00dd" translate="yes" xml:space="preserve">
          <source>Pipelining should be used when you need to send many commands to the server. The &lt;code&gt;pipeline&lt;/code&gt; method accepts one argument: a &lt;code&gt;Closure&lt;/code&gt; that receives a Redis instance. You may issue all of your commands to this Redis instance and they will all be streamed to the server thus providing better performance:</source>
          <target state="translated">サーバーに多くのコマンドを送信する必要がある場合は、パイプラインを使用する必要があります。 &lt;code&gt;pipeline&lt;/code&gt; ：メソッドは一つの引数受け入れ &lt;code&gt;Closure&lt;/code&gt; Redisのインスタンスを受け取ります。このRedisインスタンスにすべてのコマンドを発行すると、すべてのコマンドがサーバーにストリーミングされるため、パフォーマンスが向上します。</target>
        </trans-unit>
        <trans-unit id="9fb7e07fc55c6ba2ef45f5a138736c3426228c52" translate="yes" xml:space="preserve">
          <source>Pivot</source>
          <target state="translated">Pivot</target>
        </trans-unit>
        <trans-unit id="d8c94257324391ef8282085ad1f3e9dc89436ca2" translate="yes" xml:space="preserve">
          <source>Pivot (Database\Eloquent\Relations)</source>
          <target state="translated">Pivot (Database\\\Relations)</target>
        </trans-unit>
        <trans-unit id="bd0743fb6580971db954af2cd84a226c4ca736bc" translate="yes" xml:space="preserve">
          <source>Pivot Table Attributes</source>
          <target state="translated">ピボットテーブルの属性</target>
        </trans-unit>
        <trans-unit id="1b6d129fec8f3926f8445927de51d46b68797706" translate="yes" xml:space="preserve">
          <source>Place the column &quot;after&quot; another column (MySQL)</source>
          <target state="translated">カラムを &quot;後 &quot;に別のカラムを配置する(MySQL)</target>
        </trans-unit>
        <trans-unit id="f5ae46f5b06de97c06cb5ae719210509c3a5e5c2" translate="yes" xml:space="preserve">
          <source>Place the column &quot;first&quot; in the table (MySQL)</source>
          <target state="translated">テーブルに「最初」のカラムを配置する(MySQL</target>
        </trans-unit>
        <trans-unit id="5ba1bc782c780e39f5840e1fac080d6f93fbcedb" translate="yes" xml:space="preserve">
          <source>Plain CSS</source>
          <target state="translated">プレーンCSS</target>
        </trans-unit>
        <trans-unit id="a405a028f3cb3c61d2af742fb6b829bedf5724f9" translate="yes" xml:space="preserve">
          <source>Plain Text Emails</source>
          <target state="translated">平易なテキストメール</target>
        </trans-unit>
        <trans-unit id="32f4bdf3ee47d6da7259e0439946df5c320e328a" translate="yes" xml:space="preserve">
          <source>Plan Credit Coupon</source>
          <target state="translated">プランクレジットクーポン</target>
        </trans-unit>
        <trans-unit id="310dc8dbf043f013be3875a9a281b63a544b3b26" translate="yes" xml:space="preserve">
          <source>Please consult Paddle's &lt;a href=&quot;https://developer.paddle.com/guides/how-tos/checkout/inline-checkout&quot;&gt;guide on Inline Checkout&lt;/a&gt; as well as their &lt;a href=&quot;https://developer.paddle.com/reference/paddle-js/parameters&quot;&gt;Parameter Reference&lt;/a&gt; for further details on available options.</source>
          <target state="translated">利用可能なオプションの詳細については、&lt;a href=&quot;https://developer.paddle.com/guides/how-tos/checkout/inline-checkout&quot;&gt;インラインチェックアウトに関する&lt;/a&gt;Paddleのガイドとその&lt;a href=&quot;https://developer.paddle.com/reference/paddle-js/parameters&quot;&gt;パラメータリファレンス&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4b77e6a6d52dd2a70a94350990686563f5ec6e92" translate="yes" xml:space="preserve">
          <source>Please note that when working with multiplan subscriptions, an extra &quot;plan&quot; parameter is required for the above quantity methods.</source>
          <target state="translated">マルチプランサブスクリプションで作業する場合、上記の数量メソッドには追加の &quot;plan &quot;パラメータが必要になることに注意してください。</target>
        </trans-unit>
        <trans-unit id="38fe93b4cc74200fb4445593e62a6bd9e8163746" translate="yes" xml:space="preserve">
          <source>Pluck an array of values from an array.</source>
          <target state="translated">配列から値の配列を抜き出します。</target>
        </trans-unit>
        <trans-unit id="deece46c22e64f44a14fe2209222289025573b98" translate="yes" xml:space="preserve">
          <source>Pluralization</source>
          <target state="translated">Pluralization</target>
        </trans-unit>
        <trans-unit id="c1d31365b135175212b0cc12fc45fbf99a9ba41e" translate="yes" xml:space="preserve">
          <source>Pluralization is a complex problem, as different languages have a variety of complex rules for pluralization. By using a &quot;pipe&quot; character, you may distinguish singular and plural forms of a string:</source>
          <target state="translated">複数形化は複雑な問題で、言語によっては複数形化のためのさまざまな複雑なルールがあるからです。パイプ」という文字を使うことで、文字列の単数形と複数形を区別することができます。</target>
        </trans-unit>
        <trans-unit id="cd87c5550344bd770590eaa343dffcb71fa8f404" translate="yes" xml:space="preserve">
          <source>Pluralize the last word of an English, studly caps case string.</source>
          <target state="translated">英語の最後の単語、スタッドリーキャップの大文字小文字の文字列を複数形にします。</target>
        </trans-unit>
        <trans-unit id="315dd637236cfa845efacde719508c0d0f2854a1" translate="yes" xml:space="preserve">
          <source>Pluralizer</source>
          <target state="translated">Pluralizer</target>
        </trans-unit>
        <trans-unit id="29db07a1763df0d8766326e9991f4ff7785dc0d8" translate="yes" xml:space="preserve">
          <source>Pluralizer (Support)</source>
          <target state="translated">複数形(サポート)</target>
        </trans-unit>
        <trans-unit id="f529bef30024f85970afc865169ab4e0dcd6bb9e" translate="yes" xml:space="preserve">
          <source>Pluralizer::inflector()</source>
          <target state="translated">Pluralizer::inflector()</target>
        </trans-unit>
        <trans-unit id="558b99e846894a41ea33cd0d47886a186335c32c" translate="yes" xml:space="preserve">
          <source>Pluralizer::matchCase()</source>
          <target state="translated">Pluralizer::matchCase()</target>
        </trans-unit>
        <trans-unit id="a06d86db8e32648234b3c17f7f1777aef17567c7" translate="yes" xml:space="preserve">
          <source>Pluralizer::plural()</source>
          <target state="translated">Pluralizer::plural()</target>
        </trans-unit>
        <trans-unit id="a59deb5c7f8160911cfecb30359442c650f942d1" translate="yes" xml:space="preserve">
          <source>Pluralizer::singular()</source>
          <target state="translated">Pluralizer::singular()</target>
        </trans-unit>
        <trans-unit id="088d996565e0da5ce833ee71f0ce11109a5c72d1" translate="yes" xml:space="preserve">
          <source>Pluralizer::uncountable()</source>
          <target state="translated">Pluralizer::uncountable()</target>
        </trans-unit>
        <trans-unit id="4a172c9dda9a3272622856d2fd060a49f83894ca" translate="yes" xml:space="preserve">
          <source>Policies are classes that organize authorization logic around a particular model or resource. For example, if your application is a blog, you may have a &lt;code&gt;Post&lt;/code&gt; model and a corresponding &lt;code&gt;PostPolicy&lt;/code&gt; to authorize user actions such as creating or updating posts.</source>
          <target state="translated">ポリシーは、特定のモデルまたはリソースに関連する承認ロジックを整理するクラスです。たとえば、アプリケーションがブログの場合、投稿の作成や更新などのユーザーアクションを承認する &lt;code&gt;Post&lt;/code&gt; モデルと対応する &lt;code&gt;PostPolicy&lt;/code&gt; がある場合があります。</target>
        </trans-unit>
        <trans-unit id="b93e55ffb8909319e908216a65e21f49c18b7998" translate="yes" xml:space="preserve">
          <source>Policy Auto-Discovery</source>
          <target state="translated">ポリシー オートディスカバリー</target>
        </trans-unit>
        <trans-unit id="628c6a41f288258f9cb64c9438972319650a8128" translate="yes" xml:space="preserve">
          <source>Policy Filters</source>
          <target state="translated">ポリシーフィルタ</target>
        </trans-unit>
        <trans-unit id="2d8ad789e9a19b81b7cb1fc09cdfff11e45f5c40" translate="yes" xml:space="preserve">
          <source>Policy Method</source>
          <target state="translated">ポリシーの方法</target>
        </trans-unit>
        <trans-unit id="58c576707a4136cee61eca9a899117ce17cfca38" translate="yes" xml:space="preserve">
          <source>Policy Methods</source>
          <target state="translated">政策手法</target>
        </trans-unit>
        <trans-unit id="952b896d501dad08c26fa94e7a38a4814c1f588d" translate="yes" xml:space="preserve">
          <source>Policy Responses</source>
          <target state="translated">政策対応</target>
        </trans-unit>
        <trans-unit id="55cf069f895828daecca29fbb4330a6aa2ec8a0a" translate="yes" xml:space="preserve">
          <source>PolicyMakeCommand</source>
          <target state="translated">PolicyMakeCommand</target>
        </trans-unit>
        <trans-unit id="2c2ced7aca2841c72034a86aa834ca0958bab0f3" translate="yes" xml:space="preserve">
          <source>PolicyMakeCommand (Foundation)</source>
          <target state="translated">ポリシーメイクコマンド(財団</target>
        </trans-unit>
        <trans-unit id="32196cd17538de140143c9d292a04f9c059f26d5" translate="yes" xml:space="preserve">
          <source>PolicyMakeCommand::buildClass()</source>
          <target state="translated">PolicyMakeCommand::buildClass()</target>
        </trans-unit>
        <trans-unit id="7d19f734cf1bf395905f41ab897c3221950e66fd" translate="yes" xml:space="preserve">
          <source>PolicyMakeCommand::getDefaultNamespace()</source>
          <target state="translated">PolicyMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="7427249ab417cf523d412779a4b3aa961144ad66" translate="yes" xml:space="preserve">
          <source>PolicyMakeCommand::getOptions()</source>
          <target state="translated">PolicyMakeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="a2036ad96f8674f9e522a213e38412c107691c11" translate="yes" xml:space="preserve">
          <source>PolicyMakeCommand::getStub()</source>
          <target state="translated">PolicyMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="92f733600f4c355295a5ef3d6a6ce98be3a7ff82" translate="yes" xml:space="preserve">
          <source>PolicyMakeCommand::replaceModel()</source>
          <target state="translated">PolicyMakeCommand::replaceModel()</target>
        </trans-unit>
        <trans-unit id="f280abb15a8b5245a2cb1ba6b85a1aa893532dbe" translate="yes" xml:space="preserve">
          <source>PolicyMakeCommand::replaceUserNamespace()</source>
          <target state="translated">PolicyMakeCommand::replaceUserNamespace()</target>
        </trans-unit>
        <trans-unit id="4016216b7c41732fe7c1f9e48117f5113c73fb9e" translate="yes" xml:space="preserve">
          <source>PolicyMakeCommand::resolveStubPath()</source>
          <target state="translated">PolicyMakeCommand::resolveStubPath()</target>
        </trans-unit>
        <trans-unit id="2b981e6e0ab73006046b4139a7b540189ec5ab2c" translate="yes" xml:space="preserve">
          <source>PolicyMakeCommand::userProviderModel()</source>
          <target state="translated">PolicyMakeCommand::userProviderModel()</target>
        </trans-unit>
        <trans-unit id="3d57546601149083a71847fc9013d0ac5377fb73" translate="yes" xml:space="preserve">
          <source>Polymorphic &quot;many to many&quot; relationships may be created just like non-polymorphic &quot;many to many&quot; relationships:</source>
          <target state="translated">多相的な「多対多」の関係は、非多相的な「多対多」の関係と同じように作られるかもしれません。</target>
        </trans-unit>
        <trans-unit id="14249134fa35f833a7294a02435b6b9c45c83201" translate="yes" xml:space="preserve">
          <source>Polymorphic Many To Many Relationships</source>
          <target state="translated">多形多対多の関係</target>
        </trans-unit>
        <trans-unit id="cb8a4bd7f587975ecf5db04a1045c2fb53b843d1" translate="yes" xml:space="preserve">
          <source>Polymorphic Relations</source>
          <target state="translated">多相関係</target>
        </trans-unit>
        <trans-unit id="dd245547e9d2fe6bbf61df4fb717d0356f20d25b" translate="yes" xml:space="preserve">
          <source>Polymorphic Relationships</source>
          <target state="translated">多相関係</target>
        </trans-unit>
        <trans-unit id="5349c9017419792e5f3efe72730dd92381ee9eeb" translate="yes" xml:space="preserve">
          <source>Polymorphic relations allow a model to belong to more than one other model on a single association. For example, imagine users of your application can &quot;comment&quot; on both posts and videos. Using polymorphic relationships, you can use a single &lt;code&gt;comments&lt;/code&gt; table for both of these scenarios. First, let's examine the table structure required to build this relationship:</source>
          <target state="translated">ポリモーフィック関係により、モデルは単一の関連付けで他の複数のモデルに属することができます。たとえば、アプリケーションのユーザーが投稿と動画の両方に「コメント」できるとします。多態的な関係を使用すると、これらのシナリオの両方に単一の &lt;code&gt;comments&lt;/code&gt; テーブルを使用できます。最初に、この関係を構築するために必要なテーブル構造を調べてみましょう。</target>
        </trans-unit>
        <trans-unit id="e0fee0d4deee29e72181d9292323ec3cf973c3c1" translate="yes" xml:space="preserve">
          <source>Pop a loop from the top of the loop stack.</source>
          <target state="translated">ループスタックの上からループをポップします。</target>
        </trans-unit>
        <trans-unit id="8223eecc707ae36c584c8bc39bbc7ffce84dfb47" translate="yes" xml:space="preserve">
          <source>Pop the next job off of the queue.</source>
          <target state="translated">次のジョブをキューから取り出します。</target>
        </trans-unit>
        <trans-unit id="a20f056241bce733e8cacf302612fecab413f50d" translate="yes" xml:space="preserve">
          <source>Populate the mailable with the addresses.</source>
          <target state="translated">メーラーブルにアドレスを入力します。</target>
        </trans-unit>
        <trans-unit id="4080f6ab75309751e39a79f11a72a1b113ac730b" translate="yes" xml:space="preserve">
          <source>Populate the place-holders in the migration stub.</source>
          <target state="translated">移住スタブにプレースホルダーを入力します。</target>
        </trans-unit>
        <trans-unit id="1f211d3b7f967a8ba7bd519a6819be695833aba3" translate="yes" xml:space="preserve">
          <source>Populate the shared view error bag with the given errors.</source>
          <target state="translated">与えられたエラーで共有ビューのエラーバッグを埋めます。</target>
        </trans-unit>
        <trans-unit id="490d43044db97eb0e9dd3cbad96f2636460358df" translate="yes" xml:space="preserve">
          <source>Populating Parameters Via Eloquent Models</source>
          <target state="translated">Eloquentモデルを使用したパラメータの入力</target>
        </trans-unit>
        <trans-unit id="16c2eb4dbbcdafb15c712951d6aee1bf0a101658" translate="yes" xml:space="preserve">
          <source>Ports</source>
          <target state="translated">Ports</target>
        </trans-unit>
        <trans-unit id="e8cb69e2eb3ce0f7cb2ab24efaaced2d85aaf760" translate="yes" xml:space="preserve">
          <source>PostCSS</source>
          <target state="translated">PostCSS</target>
        </trans-unit>
        <trans-unit id="7f9dffc70b7c028542ad44f1455a0a68f48cdf68" translate="yes" xml:space="preserve">
          <source>PostTooLargeException</source>
          <target state="translated">PostTooLargeException</target>
        </trans-unit>
        <trans-unit id="56c2164658f596a40fbb66d1e53c0cb642483146" translate="yes" xml:space="preserve">
          <source>PostTooLargeException (Http\Exceptions)</source>
          <target state="translated">PostTooLargeException (HttpExceptions)</target>
        </trans-unit>
        <trans-unit id="1ec6d7d3dd82dbb1a24e1977fb658e55a29307d8" translate="yes" xml:space="preserve">
          <source>PostTooLargeException constructor.</source>
          <target state="translated">PostTooLargeException のコンストラクタです。</target>
        </trans-unit>
        <trans-unit id="5b15ace8cb748bca1d5103916678c4a28694fd90" translate="yes" xml:space="preserve">
          <source>PostTooLargeException::__construct()</source>
          <target state="translated">PostTooLargeException::__construct()</target>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="translated">PostgreSQL</target>
        </trans-unit>
        <trans-unit id="8aad1579b379c172e2f8faff47c9b47ef9d65601" translate="yes" xml:space="preserve">
          <source>PostgreSQL (9.6, 10, 11, 12)</source>
          <target state="translated">PostgreSQL (9.6,10,11,12)</target>
        </trans-unit>
        <trans-unit id="3e029e592c8c441a1fc86d959e5c62d616340941" translate="yes" xml:space="preserve">
          <source>PostgreSQL 9.4+ (&lt;a href=&quot;https://www.postgresql.org/support/versioning/&quot;&gt;Version Policy&lt;/a&gt;)</source>
          <target state="translated">PostgreSQL 9.4以降（&lt;a href=&quot;https://www.postgresql.org/support/versioning/&quot;&gt;バージョンポリシー&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="c80b0a818364d73a22fbbbff1f0383cd62bf376b" translate="yes" xml:space="preserve">
          <source>PostgreSQL Special Float Values</source>
          <target state="translated">PostgreSQL特殊フロート値</target>
        </trans-unit>
        <trans-unit id="e32e031afd6f441538a44f65e2d2d16494cde788" translate="yes" xml:space="preserve">
          <source>PostgreSQL supports the float values &lt;code&gt;Infinity&lt;/code&gt;, &lt;code&gt;-Infinity&lt;/code&gt; and &lt;code&gt;NaN&lt;/code&gt;. Prior to Laravel 5.7, these were cast to &lt;code&gt;0&lt;/code&gt; when the Eloquent casting type for the column was &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt;, or &lt;code&gt;real&lt;/code&gt;.</source>
          <target state="translated">PostgreSQLは、浮動小数点値 &lt;code&gt;Infinity&lt;/code&gt; 、 &lt;code&gt;-Infinity&lt;/code&gt; 、および &lt;code&gt;NaN&lt;/code&gt; をサポートしています。Laravel 5.7より前のバージョンでは、カラムのEloquentキャストタイプが &lt;code&gt;float&lt;/code&gt; 、 &lt;code&gt;double&lt;/code&gt; 、または &lt;code&gt;real&lt;/code&gt; の場合、これらは &lt;code&gt;0&lt;/code&gt; にキャストされていました。</target>
        </trans-unit>
        <trans-unit id="d9e6cdf7c533b0584176e133ba7580bf11881523" translate="yes" xml:space="preserve">
          <source>PostgresBuilder</source>
          <target state="translated">PostgresBuilder</target>
        </trans-unit>
        <trans-unit id="3cdcca55ce6c6349c5691bf6315da05136a1fac5" translate="yes" xml:space="preserve">
          <source>PostgresBuilder (Database\Schema)</source>
          <target state="translated">PostgresBuilder (DatabaseSchedule)</target>
        </trans-unit>
        <trans-unit id="52120a2a9c8d4a554350bc1c340b6d54f87b798d" translate="yes" xml:space="preserve">
          <source>PostgresBuilder::dropAllTables()</source>
          <target state="translated">PostgresBuilder::dropAllTables()</target>
        </trans-unit>
        <trans-unit id="6ca337016f39f02c3b8e2fe436f927566e1711a3" translate="yes" xml:space="preserve">
          <source>PostgresBuilder::dropAllTypes()</source>
          <target state="translated">PostgresBuilder::dropAllTypes()</target>
        </trans-unit>
        <trans-unit id="d8b87df4af650dff67c381b421ffdd7b2d07bb7b" translate="yes" xml:space="preserve">
          <source>PostgresBuilder::dropAllViews()</source>
          <target state="translated">PostgresBuilder::dropAllViews()</target>
        </trans-unit>
        <trans-unit id="8607a0f3a6075809b73eaddf44414d8a4cfbf160" translate="yes" xml:space="preserve">
          <source>PostgresBuilder::getAllTables()</source>
          <target state="translated">PostgresBuilder::getAllTables()</target>
        </trans-unit>
        <trans-unit id="2e42a32fe4364cbe025b82bef789458cd2677cf3" translate="yes" xml:space="preserve">
          <source>PostgresBuilder::getAllTypes()</source>
          <target state="translated">PostgresBuilder::getAllTypes()</target>
        </trans-unit>
        <trans-unit id="7a58f6ae8d256daa6e5c38bebe3cbb3f4a0dc851" translate="yes" xml:space="preserve">
          <source>PostgresBuilder::getAllViews()</source>
          <target state="translated">PostgresBuilder::getAllViews()</target>
        </trans-unit>
        <trans-unit id="539ae925c07848ace78a4aca6167ba3d76825ec2" translate="yes" xml:space="preserve">
          <source>PostgresBuilder::getColumnListing()</source>
          <target state="translated">PostgresBuilder::getColumnListing()</target>
        </trans-unit>
        <trans-unit id="48b1d6bb5b23f5055164de9dca33e82dfa56ce0f" translate="yes" xml:space="preserve">
          <source>PostgresBuilder::hasTable()</source>
          <target state="translated">PostgresBuilder::hasTable()</target>
        </trans-unit>
        <trans-unit id="adc1a14b18a350f475ffb56e2a9538b09102a661" translate="yes" xml:space="preserve">
          <source>PostgresBuilder::parseSchemaAndTable()</source>
          <target state="translated">PostgresBuilder::parseSchemaAndTable()</target>
        </trans-unit>
        <trans-unit id="2d0329ed48d583660d0c6bda5ccd83d2c13c7511" translate="yes" xml:space="preserve">
          <source>PostgresConnection</source>
          <target state="translated">PostgresConnection</target>
        </trans-unit>
        <trans-unit id="e18aa0432810b3689c11cb8b2ef55dbc68c9400a" translate="yes" xml:space="preserve">
          <source>PostgresConnection (Database)</source>
          <target state="translated">PostgresConnection(データベース</target>
        </trans-unit>
        <trans-unit id="d605b17d1a054aaff2c17cb917a8ed375e69cc91" translate="yes" xml:space="preserve">
          <source>PostgresConnection::bindValues()</source>
          <target state="translated">PostgresConnection::bindValues()</target>
        </trans-unit>
        <trans-unit id="a896e54177cec49c1d121bc8dbad1d2da0df8ada" translate="yes" xml:space="preserve">
          <source>PostgresConnection::getDefaultPostProcessor()</source>
          <target state="translated">PostgresConnection::getDefaultPostProcessor()</target>
        </trans-unit>
        <trans-unit id="91a35ffa27659dfe154a68b8743347da406bb1de" translate="yes" xml:space="preserve">
          <source>PostgresConnection::getDefaultQueryGrammar()</source>
          <target state="translated">PostgresConnection::getDefaultQueryGrammar()</target>
        </trans-unit>
        <trans-unit id="e3fb9aed74f6025c6536b81106333d6f388693a9" translate="yes" xml:space="preserve">
          <source>PostgresConnection::getDefaultSchemaGrammar()</source>
          <target state="translated">PostgresConnection::getDefaultSchemaGrammar()</target>
        </trans-unit>
        <trans-unit id="ddb7dadddf06569a7f9c1afc59643a3f33aaaccf" translate="yes" xml:space="preserve">
          <source>PostgresConnection::getDoctrineDriver()</source>
          <target state="translated">PostgresConnection::getDoctrineDriver()</target>
        </trans-unit>
        <trans-unit id="7aa4c2c6c39245449514bd1a36929ff57a971e6b" translate="yes" xml:space="preserve">
          <source>PostgresConnection::getSchemaBuilder()</source>
          <target state="translated">PostgresConnection::getSchemaBuilder()</target>
        </trans-unit>
        <trans-unit id="04d98ef9ad6f042e3f36c3d941e11711725d5089" translate="yes" xml:space="preserve">
          <source>PostgresConnection::getSchemaState()</source>
          <target state="translated">PostgresConnection::getSchemaState()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
