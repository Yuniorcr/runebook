<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="5ff2cd9cab28f5252f3d4d1ff4b3f1e9622673d2" translate="yes" xml:space="preserve">
          <source>In addition, you may return a &lt;a href=&quot;mail&quot;&gt;mailable object&lt;/a&gt; from the &lt;code&gt;toMail&lt;/code&gt; method:</source>
          <target state="translated">さらに、 &lt;code&gt;toMail&lt;/code&gt; メソッドから&lt;a href=&quot;mail&quot;&gt;メール可能なオブジェクト&lt;/a&gt;を返すこともできます。</target>
        </trans-unit>
        <trans-unit id="88bef26e55e118444f3ee4e6144be20d5030c3f3" translate="yes" xml:space="preserve">
          <source>In addition, you may return a full &lt;a href=&quot;mail&quot;&gt;mailable object&lt;/a&gt; from the &lt;code&gt;toMail&lt;/code&gt; method:</source>
          <target state="translated">さらに、 &lt;code&gt;toMail&lt;/code&gt; メソッドから完全な&lt;a href=&quot;mail&quot;&gt;メール可能なオブジェクトを&lt;/a&gt;返すことができます。</target>
        </trans-unit>
        <trans-unit id="3ab4e253f9e90ef97191ae2279f2b17e9f2526c3" translate="yes" xml:space="preserve">
          <source>In addition, you may specify how many seconds Laravel should wait before retrying a job that has failed using the &lt;code&gt;--backoff&lt;/code&gt; option. By default, a job is retried immediately:</source>
          <target state="translated">さらに、 &lt;code&gt;--backoff&lt;/code&gt; オプションを使用して、失敗したジョブを再試行する前にLaravelが待機する秒数を指定できます。デフォルトでは、ジョブはすぐに再試行されます。</target>
        </trans-unit>
        <trans-unit id="d9df1ac9ec080df44cd06e9895ee7e0dcb44e9bb" translate="yes" xml:space="preserve">
          <source>In addition, you may use any of the supported PHP versions via the CLI:</source>
          <target state="translated">さらに、サポートされている PHP のいずれかのバージョンを CLI 経由で使用することができます。</target>
        </trans-unit>
        <trans-unit id="940d35455685fcf6b53eefcf9fa8063d8d63dc4d" translate="yes" xml:space="preserve">
          <source>In addition, you may use the &lt;code&gt;loadMorphCount&lt;/code&gt; method to eager load all nested relationship counts on the various entities of the polymorphic relation if the &lt;code&gt;ActivityFeed&lt;/code&gt; models have already been retrieved:</source>
          <target state="translated">さらに、 &lt;code&gt;ActivityFeed&lt;/code&gt; モデルがすでに取得されている場合は、 &lt;code&gt;loadMorphCount&lt;/code&gt; メソッドを使用して、ポリモーフィックリレーションのさまざまなエンティティにネストされたリレーションシップカウントをすべてロードすることができます。</target>
        </trans-unit>
        <trans-unit id="7d8f0f6562c9fad583d0b9654cdb2239a30ec27b" translate="yes" xml:space="preserve">
          <source>In addition, you may wish to generate UUIDs for your existing failed jobs:</source>
          <target state="translated">さらに、既存の失敗したジョブのUUIDを生成することもできます。</target>
        </trans-unit>
        <trans-unit id="a467432d5a1926b749486c5e1d117b79b914ef2f" translate="yes" xml:space="preserve">
          <source>In addition, you should enable the &lt;code&gt;withCredentials&lt;/code&gt; option on your global &lt;code&gt;axios&lt;/code&gt; instance. Typically, this should be performed in your &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; file:</source>
          <target state="translated">また、あなたは有効にする必要があり &lt;code&gt;withCredentials&lt;/code&gt; グローバルのオプション &lt;code&gt;axios&lt;/code&gt; のインスタンスを。通常、これは &lt;code&gt;resources/js/bootstrap.js&lt;/code&gt; ファイルで実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="cb6791981c62ae200a3bfecb9d6a98ac681b5c3e" translate="yes" xml:space="preserve">
          <source>In certain cases, you may want to define a specific &quot;key&quot; that makes the job unique or you may want to specify a timeout beyond which the job no longer stays unique. To accomplish this, you may define &lt;code&gt;uniqueId&lt;/code&gt; and &lt;code&gt;uniqueFor&lt;/code&gt; properties or methods on your job class:</source>
          <target state="translated">場合によっては、ジョブを一意にする特定の「キー」を定義したり、それを超えるとジョブが一意でなくなるタイムアウトを指定したりすることができます。これを実現するために、ジョブクラスで &lt;code&gt;uniqueId&lt;/code&gt; および &lt;code&gt;uniqueFor&lt;/code&gt; プロパティまたはメソッドを定義できます。</target>
        </trans-unit>
        <trans-unit id="57c89b12c0ecc324b3ab9654104213fd8fc0ea3f" translate="yes" xml:space="preserve">
          <source>In contrast to &lt;a href=&quot;#single-charges&quot;&gt;single charges&lt;/a&gt;, this method will immediately charge the customer's stored payment method for the subscription. The charge amount is always in the currency of which the subscription currently is set to.</source>
          <target state="translated">&lt;a href=&quot;#single-charges&quot;&gt;単一の請求&lt;/a&gt;とは対照的に、この方法では、サブスクリプションに対して顧客の保存された支払い方法にすぐに請求されます。料金は常に、サブスクリプションが現在設定されている通貨で表示されます。</target>
        </trans-unit>
        <trans-unit id="c070c83638f851abcbaee55dec8d3c1e5e09c883" translate="yes" xml:space="preserve">
          <source>In contrast to Stripe, Paddle users are unique across the whole of Paddle, not unique per Paddle account. Because of this, Paddle's API's do not currently provide a method to update a user's details such as their email address. When generating pay links, Paddle identifies users using the &lt;code&gt;customer_email&lt;/code&gt; parameter. When creating a subscription, Paddle will try to match the user provided email to an existing Paddle user.</source>
          <target state="translated">Stripeとは対照的に、Paddleユーザーは、Paddleアカウントごとではなく、Paddle全体で一意です。このため、PaddleのAPIは現在、メールアドレスなどのユーザーの詳細を更新する方法を提供していません。有料リンクを生成するとき、Paddleは &lt;code&gt;customer_email&lt;/code&gt; パラメーターを使用してユーザーを識別します。サブスクリプションを作成するとき、Paddleはユーザーが提供した電子メールを既存のPaddleユーザーと照合しようとします。</target>
        </trans-unit>
        <trans-unit id="8aaebdb375ec527d7b5be490b38d3e98463668e8" translate="yes" xml:space="preserve">
          <source>In contrast, this statement would remove only caches tagged with &lt;code&gt;authors&lt;/code&gt;, so &lt;code&gt;Anne&lt;/code&gt; would be removed, but not &lt;code&gt;John&lt;/code&gt;:</source>
          <target state="translated">対照的に、このステートメントでは、 &lt;code&gt;authors&lt;/code&gt; でタグ付けされたキャッシュのみが削除されるため、 &lt;code&gt;Anne&lt;/code&gt; は削除されますが、 &lt;code&gt;John&lt;/code&gt; は削除されません。</target>
        </trans-unit>
        <trans-unit id="8a82448c31f7932c1e26db1e0369773877acb5fa" translate="yes" xml:space="preserve">
          <source>In essence, resources are simple. They only need to transform a given model into an array. So, each resource contains a &lt;code&gt;toArray&lt;/code&gt; method which translates your model's attributes into an API friendly array that can be returned to your users:</source>
          <target state="translated">本質的に、リソースは単純です。与えられたモデルを配列に変換するだけです。したがって、各リソースには、モデルの属性をユーザーに返すことができるAPIフレンドリーな配列に変換する &lt;code&gt;toArray&lt;/code&gt; メソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="38d881e39581e449a8e15c817e9449b8f069225a" translate="yes" xml:space="preserve">
          <source>In light of this behavior, there are some important things to keep in mind when using Cashier and Paddle. First, you should be aware that even though subscriptions in Cashier are tied to the same application user, &lt;strong&gt;they could be tied to different users within Paddle's internal systems&lt;/strong&gt;. Secondly, each subscription has its own connected payment method information and could also have different email addresses within Paddle's internal systems (depending on which email was assigned to the user when the subscription was created).</source>
          <target state="translated">この動作に照らして、キャッシャーとパドルを使用する際に留意すべき重要なことがいくつかあります。まず、Cashierのサブスクリプションは同じアプリケーションユーザーに&lt;strong&gt;関連付けられていますが、Paddleの内部システム内の異なるユーザーに関連付けられている可能性がある&lt;/strong&gt;ことに注意してください。次に、各サブスクリプションには独自の接続された支払い方法情報があり、Paddleの内部システム内で異なる電子メールアドレスを持つこともできます（サブスクリプションの作成時にユーザーに割り当てられた電子メールによって異なります）。</target>
        </trans-unit>
        <trans-unit id="7043ade0b8934115fb7d17f2ae03dfa4b0808920" translate="yes" xml:space="preserve">
          <source>In many modern web applications, WebSockets are used to implement realtime, live-updating user interfaces. When some data is updated on the server, a message is typically sent over a WebSocket connection to be handled by the client. This provides a more robust, efficient alternative to continually polling your application for changes.</source>
          <target state="translated">多くの最新の Web アプリケーションでは、WebSocket を使用してリアルタイムでライブアップデートを行うユーザーインターフェースを実装しています。サーバ上でデータが更新されると、通常、クライアントが処理するためのメッセージが WebSocket 接続を介して送信されます。これにより、変更のためにアプリケーションを継続的にポーリングするよりも、より堅牢で効率的な代替手段を提供します。</target>
        </trans-unit>
        <trans-unit id="c86e7d1b0f8bd2813a27bbf6bc2955a6cb8ca7c6" translate="yes" xml:space="preserve">
          <source>In most cases this won't impact applications that are being upgraded because your &lt;code&gt;RouteServiceProvider&lt;/code&gt; will still contain the &lt;code&gt;$namespace&lt;/code&gt; property with its previous value. However, if you upgrade your application by creating a brand new Laravel project, you may encounter this as a breaking change.</source>
          <target state="translated">ほとんどの場合、 &lt;code&gt;RouteServiceProvider&lt;/code&gt; には以前の値の &lt;code&gt;$namespace&lt;/code&gt; プロパティが引き続き含まれているため、これはアップグレード中のアプリケーションには影響しません。ただし、新しいLaravelプロジェクトを作成してアプリケーションをアップグレードすると、重大な変更としてこれに遭遇する可能性があります。</target>
        </trans-unit>
        <trans-unit id="710752a704aa3cb5874d2eb8a186bb31779e55c3" translate="yes" xml:space="preserve">
          <source>In most cases, you will probably specify your custom messages in a language file instead of passing them directly to the &lt;code&gt;Validator&lt;/code&gt;. To do so, add your messages to &lt;code&gt;custom&lt;/code&gt; array in the &lt;code&gt;resources/lang/xx/validation.php&lt;/code&gt; language file.</source>
          <target state="translated">ほとんどの場合、カスタムメッセージを直接 &lt;code&gt;Validator&lt;/code&gt; に渡す代わりに、おそらく言語ファイルで指定します。これを行うには、 &lt;code&gt;resources/lang/xx/validation.php&lt;/code&gt; 言語ファイルの &lt;code&gt;custom&lt;/code&gt; 配列にメッセージを追加します。</target>
        </trans-unit>
        <trans-unit id="8057495462b005a65ff7b0a98a999bad9d271553" translate="yes" xml:space="preserve">
          <source>In most situations, you likely intend to use &lt;a href=&quot;queries#parameter-grouping&quot;&gt;constraint groups&lt;/a&gt; to logically group the conditional checks between parentheses:</source>
          <target state="translated">ほとんどの場合、&lt;a href=&quot;queries#parameter-grouping&quot;&gt;制約グループ&lt;/a&gt;を使用して、括弧内の条件付きチェックを論理的にグループ化することを意図している可能性があります。</target>
        </trans-unit>
        <trans-unit id="d005364019b78dfd8ac41563121cc11e236a83cf" translate="yes" xml:space="preserve">
          <source>In order to authenticate, your SPA and API must share the same top-level domain. However, they may be placed on different subdomains.</source>
          <target state="translated">認証を行うには、SPAとAPIが同じトップレベルドメインを共有している必要があります。ただし、異なるサブドメインに配置することもできます。</target>
        </trans-unit>
        <trans-unit id="a0f6c9f35605ae02f164b10732ffb2c33df57d4d" translate="yes" xml:space="preserve">
          <source>In order to create subscriptions or perform &quot;one off&quot; charges with Stripe, you will need to store a payment method and retrieve its identifier from Stripe. The approach used to accomplish differs based on whether you plan to use the payment method for subscriptions or single charges, so we will examine both below.</source>
          <target state="translated">Stripeで定期購読を作成したり、「単発課金」を行うためには、支払い方法を保存し、その識別子をStripeから取得する必要があります。この支払い方法を定期購読に使うのか、単発課金に使うのかによって、達成するためのアプローチが異なりますので、以下ではその両方を見ていきます。</target>
        </trans-unit>
        <trans-unit id="bc06cd4f0952e5a5b1a3d1eaf40e892997f12211" translate="yes" xml:space="preserve">
          <source>In order to ensure your subdomain routes are reachable, you should register subdomain routes before registering root domain routes. This will prevent root domain routes from overwriting subdomain routes which have the same URI path.</source>
          <target state="translated">サブドメインルートが確実に到達できるようにするために、ルートドメインルートを登録する前にサブドメインルートを登録する必要があります。これにより、ルートドメインルートが同じ URI パスを持つサブドメインルートを上書きするのを防ぐことができます。</target>
        </trans-unit>
        <trans-unit id="0e8462f41ca33b426d0dce2d84bd2925fd9b3ae8" translate="yes" xml:space="preserve">
          <source>In order to make this more convenient, you may use the &lt;code&gt;mock&lt;/code&gt; method, which is provided by Laravel's base test case class:</source>
          <target state="translated">これをより便利にするために、Laravelの基本テストケースクラスによって提供される &lt;code&gt;mock&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="7f4ee05b7b4b7f0dbab22c3f34f7304075d2d194" translate="yes" xml:space="preserve">
          <source>In order to run &lt;a href=&quot;dusk&quot;&gt;Laravel Dusk&lt;/a&gt; tests within Homestead, you should enable the &lt;a href=&quot;#installing-optional-features&quot;&gt;&lt;code&gt;webdriver&lt;/code&gt; feature&lt;/a&gt; in your Homestead configuration:</source>
          <target state="translated">実行するためには&lt;a href=&quot;dusk&quot;&gt;Laravel夕暮れの&lt;/a&gt;ホームステッド内のテストを、あなたは有効にする必要があり&lt;a href=&quot;#installing-optional-features&quot;&gt; &lt;code&gt;webdriver&lt;/code&gt; をの機能を&lt;/a&gt;お使いのホームステッドの設定で：</target>
        </trans-unit>
        <trans-unit id="6dc25fbc8f94adb5da43252429cdf2e79ad3a3cb" translate="yes" xml:space="preserve">
          <source>In order to send the email when a user is registered, you should register following events and listeners in your &lt;a href=&quot;https://github.com/laravel/laravel/blob/master/app/Providers/EventServiceProvider.php&quot;&gt;App\Providers\EventServiceProvider&lt;/a&gt; class:</source>
          <target state="translated">ユーザーの登録時にメールを送信するには、次のイベントとリスナーを&lt;a href=&quot;https://github.com/laravel/laravel/blob/master/app/Providers/EventServiceProvider.php&quot;&gt;App \ Providers \ EventServiceProvider&lt;/a&gt;クラスに登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="fe535f1ce45de287f6e2ad5cac81394cd30e74d5" translate="yes" xml:space="preserve">
          <source>In order to set up the custom filesystem you will need a Flysystem adapter. Let's add a community maintained Dropbox adapter to our project:</source>
          <target state="translated">カスタムファイルシステムをセットアップするには、Flysystem アダプタが必要です。コミュニティで管理されているDropboxアダプターをプロジェクトに追加してみましょう。</target>
        </trans-unit>
        <trans-unit id="479503f250ac82906cb5f9ef5c2ec9963751bfd7" translate="yes" xml:space="preserve">
          <source>In order to test a variety of billing scenarios, such as credit card denials and failures, you may use the vast range of &lt;a href=&quot;https://stripe.com/docs/testing&quot;&gt;testing card numbers and tokens&lt;/a&gt; provided by Stripe.</source>
          <target state="translated">クレジットカードの拒否や失敗など、さまざまな請求シナリオをテストするために、Stripeが提供するさまざまな&lt;a href=&quot;https://stripe.com/docs/testing&quot;&gt;テストカード番号とトークンを&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="8ee0ee2d646ee15ce80bef9f60fa59963b6ac183" translate="yes" xml:space="preserve">
          <source>In order to use Minio you will need to adjust the S3 disk configuration in your &lt;code&gt;config/filesystems.php&lt;/code&gt; configuration file. You will need to add the &lt;code&gt;use_path_style_endpoint&lt;/code&gt; option to the disk configuration, as well as change the &lt;code&gt;url&lt;/code&gt; key to &lt;code&gt;endpoint&lt;/code&gt;:</source>
          <target state="translated">Minioを使用するには、 &lt;code&gt;config/filesystems.php&lt;/code&gt; 構成ファイルでS3ディスク構成を調整する必要があります。ディスク構成に &lt;code&gt;use_path_style_endpoint&lt;/code&gt; オプションを追加し、 &lt;code&gt;url&lt;/code&gt; キーを &lt;code&gt;endpoint&lt;/code&gt; に変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="d4a2a1c3850e2a8135c64c4e3095b52b9c6e4554" translate="yes" xml:space="preserve">
          <source>In order to use locales other than &lt;code&gt;en&lt;/code&gt;, ensure the &lt;code&gt;ext-intl&lt;/code&gt; PHP extension is installed and configured on your server.</source>
          <target state="translated">&lt;code&gt;en&lt;/code&gt; 以外のロケールを使用するには、 &lt;code&gt;ext-intl&lt;/code&gt; PHP拡張機能がサーバーにインストールおよび構成されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="03ec686aeac3fb4bc00fb711f63a57e8c2031a28" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;database&lt;/code&gt; queue driver, you will need a database table to hold the jobs. To generate a migration that creates this table, run the &lt;code&gt;queue:table&lt;/code&gt; Artisan command. Once the migration has been created, you may migrate your database using the &lt;code&gt;migrate&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;database&lt;/code&gt; キュードライバーを使用するには、ジョブを保持するデータベーステーブルが必要です。このテーブルを作成するマイグレーションを生成するには、 &lt;code&gt;queue:table&lt;/code&gt; Artisanコマンドを実行します。移行が作成されたら、 &lt;code&gt;migrate&lt;/code&gt; コマンドを使用してデータベースを移行できます。</target>
        </trans-unit>
        <trans-unit id="55ccc027947d23a9854042722204bb6441049420" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;redis&lt;/code&gt; queue driver, you should configure a Redis database connection in your &lt;code&gt;config/database.php&lt;/code&gt; configuration file.</source>
          <target state="translated">&lt;code&gt;redis&lt;/code&gt; キュードライバーを使用するには、 &lt;code&gt;config/database.php&lt;/code&gt; 設定ファイルでRedisデータベース接続を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d600376c64629a768a74f2d5606a0cff9fa397f6" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;verified&lt;/code&gt; middleware so that only verified users may access a given route, you will need to update the &lt;code&gt;$routeMiddleware&lt;/code&gt; property of your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file to include the new middleware:</source>
          <target state="translated">&lt;code&gt;verified&lt;/code&gt; ミドルウェアを使用して、検証済みのユーザーのみが特定のルートにアクセスできるようにするには、 &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; ファイルの &lt;code&gt;$routeMiddleware&lt;/code&gt; プロパティを更新して、新しいミドルウェアを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="c49768cb4c406065b8e8949ec68799dc9b7c2c15" translate="yes" xml:space="preserve">
          <source>In order to use the Passport Vue components, you must be using the &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; JavaScript framework. These components also use the Bootstrap CSS framework. However, even if you are not using these tools, the components serve as a valuable reference for your own frontend implementation.</source>
          <target state="translated">Passport Vueコンポーネントを使用するには、&lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; JavaScriptフレームワークを使用している必要があります。これらのコンポーネントは、Bootstrap CSSフレームワークも使用します。ただし、これらのツールを使用していない場合でも、コンポーネントは独自のフロントエンド実装の貴重なリファレンスとして機能します。</target>
        </trans-unit>
        <trans-unit id="7c367533374fe7dc601a45e361abbc9d82cd90bd" translate="yes" xml:space="preserve">
          <source>In other frameworks, pagination can be very painful. Laravel's paginator is integrated with the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; and &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt; and provides convenient, easy-to-use pagination of database results out of the box. By default, the HTML generated by the paginator is compatible with the &lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind CSS framework&lt;/a&gt;; however, Bootstrap views are also available.</source>
          <target state="translated">他のフレームワークでは、ページ付けは非常に苦痛になる可能性があります。Laravelのページネーションは&lt;a href=&quot;queries&quot;&gt;クエリビルダー&lt;/a&gt;および&lt;a href=&quot;eloquent&quot;&gt;EloquentORM&lt;/a&gt;と統合されており、データベース結果の便利で使いやすいページ付けをすぐに提供します。デフォルトでは、paginatorによって生成されたHTMLはTailwindCSS&lt;a href=&quot;https://tailwindcss.com/&quot;&gt;フレームワーク&lt;/a&gt;と互換性があります。ただし、ブートストラップビューも使用できます。</target>
        </trans-unit>
        <trans-unit id="8e260b43c0735fe5a065c9370ac4726b62d40ee3" translate="yes" xml:space="preserve">
          <source>In other frameworks, pagination can be very painful. Laravel's paginator is integrated with the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; and &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt; and provides convenient, easy-to-use pagination of database results out of the box. The HTML generated by the paginator is compatible with the &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap CSS framework&lt;/a&gt;.</source>
          <target state="translated">他のフレームワークでは、ページ分割は非常に苦痛になる可能性があります。Laravelのページ編集機能は、&lt;a href=&quot;queries&quot;&gt;クエリビルダー&lt;/a&gt;および&lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;と統合されており、すぐに使用できる便利で使いやすいデータベース結果のページ分割を提供します。paginatorによって生成されたHTMLは、&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap CSSフレームワーク&lt;/a&gt;と互換性があります。</target>
        </trans-unit>
        <trans-unit id="fb4ef64462c2802b01a5b8d294165754298edf9f" translate="yes" xml:space="preserve">
          <source>In other words, a blazing fast Laravel development environment that uses roughly 7 MB of RAM. Valet isn't a complete replacement for Vagrant or Homestead, but provides a great alternative if you want flexible basics, prefer extreme speed, or are working on a machine with a limited amount of RAM.</source>
          <target state="translated">言い換えれば、約7MBのRAMを使用する超高速なLaravel開発環境です。ValetはVagrantやHomesteadの完全な代替ではありませんが、柔軟性のある基本的な機能を求めている場合や、極端なスピードを求めている場合、RAMが限られたマシンで作業をしている場合には、素晴らしい代替手段となります。</target>
        </trans-unit>
        <trans-unit id="ef5f311aaf39c3e86ab46093fb659cca14be0c01" translate="yes" xml:space="preserve">
          <source>In other words, the &lt;code&gt;Paginator&lt;/code&gt; corresponds to the &lt;code&gt;simplePaginate&lt;/code&gt; method on the query builder and Eloquent, while the &lt;code&gt;LengthAwarePaginator&lt;/code&gt; corresponds to the &lt;code&gt;paginate&lt;/code&gt; method.</source>
          <target state="translated">換言すれば、 &lt;code&gt;Paginator&lt;/code&gt; に相当 &lt;code&gt;simplePaginate&lt;/code&gt; のクエリビルダと雄弁に方法、一方 &lt;code&gt;LengthAwarePaginator&lt;/code&gt; のに相当 &lt;code&gt;paginate&lt;/code&gt; 方法。</target>
        </trans-unit>
        <trans-unit id="d650a501c1ab6d513853e5a94f7f274f959f83f0" translate="yes" xml:space="preserve">
          <source>In our application, let's assume we have a page that allows users to view the shipping status for their orders. Let's also assume that a &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; event is fired when a shipping status update is processed by the application:</source>
          <target state="translated">このアプリケーションでは、ユーザーが注文の配送状況を表示できるページがあるとします。また、アプリケーションによって配送状況の更新が処理されたときに、 &lt;code&gt;ShippingStatusUpdated&lt;/code&gt; イベントが発生すると仮定します。</target>
        </trans-unit>
        <trans-unit id="b2870ae5418afab0df2b22a06dcc85ecdb1a5e80" translate="yes" xml:space="preserve">
          <source>In previous releases of Laravel, the &lt;code&gt;RouteServiceProvider&lt;/code&gt; class contained a &lt;code&gt;$namespace&lt;/code&gt; property with a value of &lt;code&gt;App\Http\Controllers&lt;/code&gt;. This value of this property was used to automatically prefix controller route declarations and controller route URL generation such as when calling the &lt;code&gt;action&lt;/code&gt; helper.</source>
          <target state="translated">Laravelの以前のリリースでは、 &lt;code&gt;RouteServiceProvider&lt;/code&gt; クラスに &lt;code&gt;App\Http\Controllers&lt;/code&gt; 値を持つ &lt;code&gt;$namespace&lt;/code&gt; プロパティが含まれていました。このプロパティのこの値は、 &lt;code&gt;action&lt;/code&gt; ヘルパーを呼び出すときなど、コントローラールート宣言とコントローラールートURL生成のプレフィックスを自動的に付けるために使用されました。</target>
        </trans-unit>
        <trans-unit id="c5ecf03c47f8cfacb7e3cc254c1fe0fa87b497a8" translate="yes" xml:space="preserve">
          <source>In previous releases of Laravel, the &lt;code&gt;RouteServiceProvider&lt;/code&gt; contained a &lt;code&gt;$namespace&lt;/code&gt; property. This property's value would automatically be prefixed onto controller route definitions and calls to the &lt;code&gt;action&lt;/code&gt; helper / &lt;code&gt;URL::action&lt;/code&gt; method. In Laravel 8.x, this property is &lt;code&gt;null&lt;/code&gt; by default. This means that no automatic namespace prefixing will be done by Laravel. Therefore, in new Laravel 8.x applications, controller route definitions should be defined using standard PHP callable syntax:</source>
          <target state="translated">Laravelの以前のリリースでは、 &lt;code&gt;RouteServiceProvider&lt;/code&gt; には &lt;code&gt;$namespace&lt;/code&gt; プロパティが含まれていました。このプロパティの値は、コントローラールート定義に自動的にプレフィックスが付けられ、 &lt;code&gt;action&lt;/code&gt; ヘルパー/ &lt;code&gt;URL::action&lt;/code&gt; メソッドが呼び出されます。 Laravel 8.xでは、このプロパティはデフォルトで &lt;code&gt;null&lt;/code&gt; です。これは、自動名前空間プレフィックスがLaravelによって実行されないことを意味します。したがって、新しいLaravel 8.xアプリケーションでは、コントローラールート定義は標準のPHP呼び出し可能構文を使用して定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="1c62aa37107e28e711c928c9222ec36d74897f1f" translate="yes" xml:space="preserve">
          <source>In previous releases of Laravel, the &lt;code&gt;php artisan down&lt;/code&gt; maintenance mode feature may be bypassed using an &quot;allow list&quot; of IP addresses that were allowed to access the application. This feature has been removed in favor of a simpler &quot;secret&quot; / token solution.</source>
          <target state="translated">Laravelの以前のリリースでは、アプリケーションへのアクセスが許可されたIPアドレスの「許可リスト」を使用 &lt;code&gt;php artisan down&lt;/code&gt; 、php職人のダウンメンテナンスモード機能をバイパスできました。この機能は削除され、より単純な「シークレット」/トークンソリューションが採用されました。</target>
        </trans-unit>
        <trans-unit id="6a3cd47f01019b5b082b694fc528aefc662f34d4" translate="yes" xml:space="preserve">
          <source>In previous versions of Laravel, authorization gates and policies automatically returned &lt;code&gt;false&lt;/code&gt; for unauthenticated visitors to your application. However, you may now allow guests to pass through authorization checks by declaring an &quot;optional&quot; type-hint or supplying a &lt;code&gt;null&lt;/code&gt; default value for the user argument definition:</source>
          <target state="translated">Laravelの以前のバージョンでは、認証ゲートとポリシーは、アプリケーションへの認証されていない訪問者に対して自動的に &lt;code&gt;false&lt;/code&gt; を返しました。ただし、「オプション」のタイプヒントを宣言するか、ユーザー引数定義に &lt;code&gt;null&lt;/code&gt; のデフォルト値を指定することで、ゲストが許可チェックを通過できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="514a63a5ef58056a11eb51ebd7256a601d6d2b16" translate="yes" xml:space="preserve">
          <source>In previous versions of Laravel, the &lt;code&gt;validate&lt;/code&gt; method did not return the correct data for nested validation rules. This has been corrected in Laravel 5.7:</source>
          <target state="translated">Laravelの以前のバージョンでは、 &lt;code&gt;validate&lt;/code&gt; メソッドはネストされた検証ルールの正しいデータを返しませんでした。これはLaravel 5.7で修正されています。</target>
        </trans-unit>
        <trans-unit id="cde56f73d48acee25f28cd3c0ef93ffd5058ffca" translate="yes" xml:space="preserve">
          <source>In production, you likely do not want the framework to scan all of your listeners on every request. Therefore, during your deployment process, you should run the &lt;code&gt;event:cache&lt;/code&gt; Artisan command to cache a manifest of all of your application's events and listeners. This manifest will be used by the framework to speed up the event registration process. The &lt;code&gt;event:clear&lt;/code&gt; command may be used to destroy the cache.</source>
          <target state="translated">本番環境では、フレームワークがすべてのリクエストですべてのリスナーをスキャンすることを望まない可能性があります。したがって、デプロイメントプロセス中に、 &lt;code&gt;event:cache&lt;/code&gt; Artisanコマンドを実行して、アプリケーションのすべてのイベントとリスナーのマニフェストをキャッシュする必要があります。このマニフェストは、イベント登録プロセスを高速化するためにフレームワークによって使用されます。 &lt;code&gt;event:clear&lt;/code&gt; コマンドは、キャッシュを破壊するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="5414be35a662257a0cf5fa95498d16464a892ec7" translate="yes" xml:space="preserve">
          <source>In response to the complexity of OAuth2 and developer confusion, we set out to build a simpler, more streamlined authentication package that could handle both first-party web requests from a web browser and API requests via tokens. This goal was realized with the release of &lt;a href=&quot;sanctum&quot;&gt;Laravel Sanctum&lt;/a&gt;, which should be considered the preferred and recommended authentication package for applications that will be offering a first-party web UI in addition to an API, or will be powered by a single-page application that exists separately from the backend Laravel application, or applications that offer a mobile client.</source>
          <target state="translated">OAuth2の複雑さと開発者の混乱に対応して、ウェブブラウザからのファーストパーティのウェブリクエストとトークンを介したAPIリクエストの両方を処理できる、よりシンプルで合理化された認証パッケージの構築に着手しました。この目標は、&lt;a href=&quot;sanctum&quot;&gt;Laravel Sanctum&lt;/a&gt;のリリースで実現されました。これは、APIに加えてファーストパーティのWeb UIを提供するアプリケーション、または単一ページのアプリケーションを利用するアプリケーションに推奨される推奨される認証パッケージと見なす必要があります。バックエンドのLaravelアプリケーション、またはモバイルクライアントを提供するアプリケーションとは別に存在します。</target>
        </trans-unit>
        <trans-unit id="4c3f929f96bec6977b9484ac2b0a0c84778ae5e9" translate="yes" xml:space="preserve">
          <source>In some situations, it's useful to embed PHP code into your views. You can use the Blade &lt;code&gt;@php&lt;/code&gt; directive to execute a block of plain PHP within your template:</source>
          <target state="translated">状況によっては、PHPコードをビューに埋め込むと便利です。Blade &lt;code&gt;@php&lt;/code&gt; ディレクティブを使用して、テンプレート内でプレーンなPHPのブロックを実行できます。</target>
        </trans-unit>
        <trans-unit id="54fe8fea5e3227081e02b41359ce281c85666670" translate="yes" xml:space="preserve">
          <source>In some situations, you may wish to run validation checks against a field &lt;strong&gt;only&lt;/strong&gt; if that field is present in the input array. To quickly accomplish this, add the &lt;code&gt;sometimes&lt;/code&gt; rule to your rule list:</source>
          <target state="translated">状況によっては、フィールドが入力配列に存在する場合に&lt;strong&gt;のみ&lt;/strong&gt;、フィールドに対して検証チェックを実行したい場合があります。これをすばやく実行するには、 &lt;code&gt;sometimes&lt;/code&gt; ルールをルールリストに追加します。</target>
        </trans-unit>
        <trans-unit id="308bca36a2638d618094c7e7b971e84968c760cc" translate="yes" xml:space="preserve">
          <source>In summary, if your application will be accessed using a browser, your application will use Laravel's built-in authentication services.</source>
          <target state="translated">要約すると、アプリケーションがブラウザを使ってアクセスする場合、アプリケーションはLaravelの組み込みの認証サービスを使用します。</target>
        </trans-unit>
        <trans-unit id="29940266577140e9609626ff8e5c16114325e1b2" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;session&lt;/code&gt; configuration file, the &lt;code&gt;connection&lt;/code&gt; option may be used to specify which Redis connection is used by the session.</source>
          <target state="translated">では &lt;code&gt;session&lt;/code&gt; コンフィギュレーション・ファイル、 &lt;code&gt;connection&lt;/code&gt; オプションは、セッションで使用されているRedisの接続を指定するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="4b4114db7494f5f3ee10842a6eac9f7f983f0c1e" translate="yes" xml:space="preserve">
          <source>In the example above, Eloquent will try to match the &lt;code&gt;post_id&lt;/code&gt; from the &lt;code&gt;Comment&lt;/code&gt; model to an &lt;code&gt;id&lt;/code&gt; on the &lt;code&gt;Post&lt;/code&gt; model. Eloquent determines the default foreign key name by examining the name of the relationship method and suffixing the method name with a &lt;code&gt;_&lt;/code&gt; followed by the name of the primary key column. However, if the foreign key on the &lt;code&gt;Comment&lt;/code&gt; model is not &lt;code&gt;post_id&lt;/code&gt;, you may pass a custom key name as the second argument to the &lt;code&gt;belongsTo&lt;/code&gt; method:</source>
          <target state="translated">上記の例では、Eloquentは &lt;code&gt;Comment&lt;/code&gt; モデルの &lt;code&gt;post_id&lt;/code&gt; を &lt;code&gt;Post&lt;/code&gt; モデルの &lt;code&gt;id&lt;/code&gt; に一致させようとします。 Eloquentは、リレーションシップメソッドの名前を調べ、メソッド名の後に &lt;code&gt;_&lt;/code&gt; を付けた後に主キー列の名前を付けることにより、デフォルトの外部キー名を決定します。ただし、 &lt;code&gt;Comment&lt;/code&gt; モデルの外部キーが &lt;code&gt;post_id&lt;/code&gt; でない場合は、カスタムキー名を &lt;code&gt;belongsTo&lt;/code&gt; メソッドの2番目の引数として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="7d4064d13dd2c6c23ef09d77de2297b667443164" translate="yes" xml:space="preserve">
          <source>In the example above, Eloquent will try to match the &lt;code&gt;user_id&lt;/code&gt; from the &lt;code&gt;Phone&lt;/code&gt; model to an &lt;code&gt;id&lt;/code&gt; on the &lt;code&gt;User&lt;/code&gt; model. Eloquent determines the default foreign key name by examining the name of the relationship method and suffixing the method name with &lt;code&gt;_id&lt;/code&gt;. However, if the foreign key on the &lt;code&gt;Phone&lt;/code&gt; model is not &lt;code&gt;user_id&lt;/code&gt;, you may pass a custom key name as the second argument to the &lt;code&gt;belongsTo&lt;/code&gt; method:</source>
          <target state="translated">上記の例では、Eloquentは &lt;code&gt;Phone&lt;/code&gt; モデルの &lt;code&gt;user_id&lt;/code&gt; を &lt;code&gt;User&lt;/code&gt; モデルの &lt;code&gt;id&lt;/code&gt; に一致させようとします。Eloquentは、リレーションシップメソッドの名前を調べ、メソッド名の後に &lt;code&gt;_id&lt;/code&gt; を付けることにより、デフォルトの外部キー名を決定します。ただし、 &lt;code&gt;Phone&lt;/code&gt; モデルの外部キーが &lt;code&gt;user_id&lt;/code&gt; でない場合は、カスタムキー名を &lt;code&gt;belongsTo&lt;/code&gt; メソッドの2番目の引数として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="932396a89f43ade24462d1f984b01e315fa64478" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;UpdateSearchIndex&lt;/code&gt; job is unique by a product ID. So, any new dispatches of the job with the same product ID will be ignored until the existing job has completed processing. In addition, if the existing job is not processed within one hour, the unique lock will be released and another job with the same unique key can be dispatched to the queue.</source>
          <target state="translated">上記の例では、 &lt;code&gt;UpdateSearchIndex&lt;/code&gt; ジョブは製品IDによって一意です。そのため、同じ製品IDを持つジョブの新しいディスパッチは、既存のジョブの処理が完了するまで無視されます。さらに、既存のジョブが1時間以内に処理されない場合、一意のロックが解放され、同じ一意のキーを持つ別のジョブをキューにディスパッチできます。</target>
        </trans-unit>
        <trans-unit id="8dffcc3a048f15655c9d51c31e4696712e1a5902" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;UpdateSearchIndex&lt;/code&gt; job is unique. So, new dispatches of the job will be ignored if another instance of the job is already on the queue and has not finished processing.</source>
          <target state="translated">上記の例では、 &lt;code&gt;UpdateSearchIndex&lt;/code&gt; ジョブは一意です。そのため、ジョブの別のインスタンスがすでにキューにあり、処理が完了していない場合、ジョブの新しいディスパッチは無視されます。</target>
        </trans-unit>
        <trans-unit id="a16dc4dd4e20c0a8d0100b865c468cd2475de713" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;email&lt;/code&gt; field will only be validated if it is present in the &lt;code&gt;$data&lt;/code&gt; array.</source>
          <target state="translated">上記の例では、 &lt;code&gt;email&lt;/code&gt; フィールドは &lt;code&gt;$data&lt;/code&gt; 配列に存在する場合にのみ検証されます。</target>
        </trans-unit>
        <trans-unit id="8db570874f2b9509d179ccc3331164264361c9dc" translate="yes" xml:space="preserve">
          <source>In the example above, the &lt;code&gt;key&lt;/code&gt; may be any string that uniquely identifies the type of job you would like to rate limit. For example, you may wish to construct the key based on the class name of the job and the IDs of the Eloquent models it operates on.</source>
          <target state="translated">上記の例では、 &lt;code&gt;key&lt;/code&gt; は、レート制限するジョブのタイプを一意に識別する任意の文字列にすることができます。たとえば、ジョブのクラス名とそれが操作するEloquentモデルのIDに基づいてキーを作成したい場合があります。</target>
        </trans-unit>
        <trans-unit id="c17627fa660219db9630df417d51dfeba134bd9e" translate="yes" xml:space="preserve">
          <source>In the example above, we are retrieving the model from the database before calling the &lt;code&gt;delete&lt;/code&gt; method. However, if you know the primary key of the model, you may delete the model without explicitly retrieving it by calling the &lt;code&gt;destroy&lt;/code&gt; method. In addition to a single primary key as its argument, the &lt;code&gt;destroy&lt;/code&gt; method will accept multiple primary keys, an array of primary keys, or a &lt;a href=&quot;collections&quot;&gt;collection&lt;/a&gt; of primary keys:</source>
          <target state="translated">上記の例では、 &lt;code&gt;delete&lt;/code&gt; メソッドを呼び出す前にデータベースからモデルを取得しています。ただし、モデルの主キーがわかっている場合は、 &lt;code&gt;destroy&lt;/code&gt; メソッドを呼び出して、モデルを明示的に取得せずにモデルを削除できます。引数としての単一の主キーに加えて、 &lt;code&gt;destroy&lt;/code&gt; メソッドは、複数の主キー、主キーの配列、または主キーの&lt;a href=&quot;collections&quot;&gt;コレクション&lt;/a&gt;を受け入れます。</target>
        </trans-unit>
        <trans-unit id="fa373ca2522dd6f61e98548506b9ec5e0bc2fed0" translate="yes" xml:space="preserve">
          <source>In the example above, we are retrieving the model from the database before calling the &lt;code&gt;delete&lt;/code&gt; method. However, if you know the primary key of the model, you may delete the model without retrieving it by calling the &lt;code&gt;destroy&lt;/code&gt; method. In addition to a single primary key as its argument, the &lt;code&gt;destroy&lt;/code&gt; method will accept multiple primary keys, an array of primary keys, or a &lt;a href=&quot;collections&quot;&gt;collection&lt;/a&gt; of primary keys:</source>
          <target state="translated">上記の例では、 &lt;code&gt;delete&lt;/code&gt; メソッドを呼び出す前にデータベースからモデルを取得しています。ただし、モデルの主キーがわかっている場合は、 &lt;code&gt;destroy&lt;/code&gt; メソッドを呼び出して、モデルを取得せずに削除できます。引数として単一の主キーに加えて、 &lt;code&gt;destroy&lt;/code&gt; メソッドは複数の主キー、主キーの配列、または主キーの&lt;a href=&quot;collections&quot;&gt;コレクション&lt;/a&gt;を受け入れます。</target>
        </trans-unit>
        <trans-unit id="499ced5540ed367190dc241ec2646b9a76539b78" translate="yes" xml:space="preserve">
          <source>In the past, you may have generated a Cron entry for each task you needed to schedule on your server. However, this can quickly become a pain, because your task schedule is no longer in source control and you must SSH into your server to add additional Cron entries.</source>
          <target state="translated">過去には、サーバ上でスケジュールする必要があるタスクごとに Cron エントリを生成していたかもしれません。しかし、これはすぐに面倒なことになります。なぜなら、タスクのスケジュールはもはやソース管理下になく、追加の Cron エントリを追加するためにはサーバに SSH 接続しなければならないからです。</target>
        </trans-unit>
        <trans-unit id="0742ab6464609f3aa0f98430a0fb6ac2bfe20748" translate="yes" xml:space="preserve">
          <source>In these examples, &lt;code&gt;email&lt;/code&gt; is not a required option, it is merely used as an example. You should use whatever column name corresponds to a &quot;username&quot; in your database.</source>
          <target state="translated">これらの例では、 &lt;code&gt;email&lt;/code&gt; は必須のオプションではなく、単に例として使用されています。データベースの「ユーザー名」に対応する列名を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="b355dc364cf53d2a449cfc343efbeb9c87edc6bc" translate="yes" xml:space="preserve">
          <source>In this class, the code is tightly coupled to a given cache implementation. It is tightly coupled because we are depending on a concrete Cache class from a package vendor. If the API of that package changes our code must change as well.</source>
          <target state="translated">このクラスでは、コードは与えられたキャッシュ実装に緊密に結合されています。パッケージ・ベンダーの具体的な Cache クラスに依存しているため、緊密に結合されています。そのパッケージの API が変更された場合、私たちのコードも変更されなければなりません。</target>
        </trans-unit>
        <trans-unit id="e84ad68ef842caca84c55e03c50f080ab009cc7a" translate="yes" xml:space="preserve">
          <source>In this example we are just sending a single line of text to Slack, which will create a message that looks like the following:</source>
          <target state="translated">この例では、1行のテキストをSlackに送信しているだけなので、以下のようなメッセージが作成されます。</target>
        </trans-unit>
        <trans-unit id="ab21dd9e452ca19af67e122107724b419cbe2939" translate="yes" xml:space="preserve">
          <source>In this example, Eloquent will only eager load posts that have not been hidden and videos have a &lt;code&gt;type&lt;/code&gt; value of &quot;educational&quot;.</source>
          <target state="translated">この例では、Eloquentは非表示にされていない投稿のみを熱心に読み込み、動画の &lt;code&gt;type&lt;/code&gt; 値は「教育的」です。</target>
        </trans-unit>
        <trans-unit id="e6fe99faef1ab5444158dcd871e6adf3eab94a6c" translate="yes" xml:space="preserve">
          <source>In this example, Eloquent will only eager load posts where the post's &lt;code&gt;title&lt;/code&gt; column contains the word &lt;code&gt;first&lt;/code&gt;. Of course, you may call other &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; methods to further customize the eager loading operation:</source>
          <target state="translated">この例では、Eloquentは、投稿の &lt;code&gt;title&lt;/code&gt; 列に &lt;code&gt;first&lt;/code&gt; という単語が含まれている投稿のみを積極的に読み込みます。もちろん、他の&lt;a href=&quot;queries&quot;&gt;クエリビルダー&lt;/a&gt;メソッドを呼び出して、積極的な読み込み操作をさらにカスタマイズすることもできます。</target>
        </trans-unit>
        <trans-unit id="1404e71fbec8af71780a94a59c7830be302b7850" translate="yes" xml:space="preserve">
          <source>In this example, Eloquent will only eager load posts where the post's &lt;code&gt;title&lt;/code&gt; column contains the word &lt;code&gt;first&lt;/code&gt;. You may call other &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; methods to further customize the eager loading operation:</source>
          <target state="translated">この例では、Eloquentは、投稿の &lt;code&gt;title&lt;/code&gt; 列に &lt;code&gt;first&lt;/code&gt; という単語が含まれている投稿のみを熱心にロードします。他の&lt;a href=&quot;queries&quot;&gt;クエリビルダー&lt;/a&gt;メソッドを呼び出して、積極的な読み込み操作をさらにカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="b59833308d8ac363d7fe83d5c2f8b222c61c0614" translate="yes" xml:space="preserve">
          <source>In this example, all notifications sent to &lt;code&gt;App\Models\User&lt;/code&gt; instances via the &lt;code&gt;broadcast&lt;/code&gt; channel would be received by the callback. A channel authorization callback for the &lt;code&gt;App.User.{id}&lt;/code&gt; channel is included in the default &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; that ships with the Laravel framework.</source>
          <target state="translated">この例では、 &lt;code&gt;broadcast&lt;/code&gt; チャネルを介して &lt;code&gt;App\Models\User&lt;/code&gt; インスタンスに送信されたすべての通知は、コールバックによって受信されます。 &lt;code&gt;App.User.{id}&lt;/code&gt; チャネルのチャネル認証コールバックは、Laravelフレームワークに付属するデフォルトの &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; に含まれています。</target>
        </trans-unit>
        <trans-unit id="1ea7c3bd4538d03bc179982ef5d539d84b287cfa" translate="yes" xml:space="preserve">
          <source>In this example, all notifications sent to &lt;code&gt;App\User&lt;/code&gt; instances via the &lt;code&gt;broadcast&lt;/code&gt; channel would be received by the callback. A channel authorization callback for the &lt;code&gt;App.User.{id}&lt;/code&gt; channel is included in the default &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; that ships with the Laravel framework.</source>
          <target state="translated">この例では、 &lt;code&gt;broadcast&lt;/code&gt; チャネルを介して &lt;code&gt;App\User&lt;/code&gt; インスタンスに送信されるすべての通知がコールバックによって受信されます。 &lt;code&gt;App.User.{id}&lt;/code&gt; チャネルのチャネル認証コールバックは、Laravelフレームワークに付属するデフォルトの &lt;code&gt;BroadcastServiceProvider&lt;/code&gt; に含まれています。</target>
        </trans-unit>
        <trans-unit id="17bd5e9027ef6615195b43c201f7c3a83fa0d857" translate="yes" xml:space="preserve">
          <source>In this example, calling &lt;code&gt;flatten&lt;/code&gt; without providing the depth would have also flattened the nested arrays, resulting in &lt;code&gt;['iPhone 6S', 'Apple', 'Galaxy S7', 'Samsung']&lt;/code&gt;. Providing a depth allows you to restrict the levels of nested arrays that will be flattened.</source>
          <target state="translated">この例では、深度を指定せずに &lt;code&gt;flatten&lt;/code&gt; を呼び出すと、ネストされた配列もフラット化され、 &lt;code&gt;['iPhone 6S', 'Apple', 'Galaxy S7', 'Samsung']&lt;/code&gt; ます。深さを指定すると、フラット化されるネストされた配列のレベルを制限できます。</target>
        </trans-unit>
        <trans-unit id="5eed32cdf0aea90369581690d4c9388f2611b359" translate="yes" xml:space="preserve">
          <source>In this example, five users will be created with an &lt;code&gt;admin&lt;/code&gt; value of &lt;code&gt;Y&lt;/code&gt; and five users will be created with an &lt;code&gt;admin&lt;/code&gt; value of &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;admin&lt;/code&gt; 値が &lt;code&gt;Y&lt;/code&gt; の5人のユーザーが作成され、 &lt;code&gt;admin&lt;/code&gt; 値が &lt;code&gt;N&lt;/code&gt; の5人のユーザーが作成されます。</target>
        </trans-unit>
        <trans-unit id="d00c8d5a6f13da758053f52e55ddde5b10fea943" translate="yes" xml:space="preserve">
          <source>In this example, if the &lt;code&gt;unique&lt;/code&gt; rule on the &lt;code&gt;title&lt;/code&gt; attribute fails, the &lt;code&gt;max&lt;/code&gt; rule will not be checked. Rules will be validated in the order they are assigned.</source>
          <target state="translated">この例では、 &lt;code&gt;title&lt;/code&gt; 属性の &lt;code&gt;unique&lt;/code&gt; ルールが失敗した場合、 &lt;code&gt;max&lt;/code&gt; ルールはチェックされません。ルールは、割り当てられた順に検証されます。</target>
        </trans-unit>
        <trans-unit id="8d1618c5c5c7dd607a3a738fab8a4590035678e4" translate="yes" xml:space="preserve">
          <source>In this example, if the relationship has not been loaded, the &lt;code&gt;posts&lt;/code&gt; key will be removed from the resource response entirely before it is sent to the client.</source>
          <target state="translated">この例では、関係がロードされていない場合、 &lt;code&gt;posts&lt;/code&gt; キーはクライアントに送信される前にリソース応答から完全に削除されます。</target>
        </trans-unit>
        <trans-unit id="6922e8fefbaa25d2c8ba4f713e171a47a8c0f1be" translate="yes" xml:space="preserve">
          <source>In this example, let's assume &lt;code&gt;Event&lt;/code&gt;, &lt;code&gt;Photo&lt;/code&gt;, and &lt;code&gt;Post&lt;/code&gt; models may create &lt;code&gt;ActivityFeed&lt;/code&gt; models. Additionally, let's assume that &lt;code&gt;Event&lt;/code&gt; models belong to a &lt;code&gt;Calendar&lt;/code&gt; model, &lt;code&gt;Photo&lt;/code&gt; models are associated with &lt;code&gt;Tag&lt;/code&gt; models, and &lt;code&gt;Post&lt;/code&gt; models belong to an &lt;code&gt;Author&lt;/code&gt; model.</source>
          <target state="translated">この例では、 &lt;code&gt;Event&lt;/code&gt; 、 &lt;code&gt;Photo&lt;/code&gt; 、および &lt;code&gt;Post&lt;/code&gt; モデルが &lt;code&gt;ActivityFeed&lt;/code&gt; モデルを作成すると仮定します。さらに、 &lt;code&gt;Event&lt;/code&gt; モデルが &lt;code&gt;Calendar&lt;/code&gt; モデルに属し、 &lt;code&gt;Photo&lt;/code&gt; モデルが &lt;code&gt;Tag&lt;/code&gt; モデルに関連付けられ、 &lt;code&gt;Post&lt;/code&gt; モデルが &lt;code&gt;Author&lt;/code&gt; モデルに属していると仮定します。</target>
        </trans-unit>
        <trans-unit id="8b3629f5a9393ecfe218803fd173c531c9e26f7d" translate="yes" xml:space="preserve">
          <source>In this example, let's assume &lt;code&gt;Photo&lt;/code&gt; and &lt;code&gt;Post&lt;/code&gt; models may create &lt;code&gt;ActivityFeed&lt;/code&gt; models. Additionally, let's assume that &lt;code&gt;Photo&lt;/code&gt; models are associated with &lt;code&gt;Tag&lt;/code&gt; models, and &lt;code&gt;Post&lt;/code&gt; models are associated with &lt;code&gt;Comment&lt;/code&gt; models.</source>
          <target state="translated">この例では、 &lt;code&gt;Photo&lt;/code&gt; モデルと &lt;code&gt;Post&lt;/code&gt; モデルが &lt;code&gt;ActivityFeed&lt;/code&gt; モデルを作成する可能性があると仮定します。さらに、 &lt;code&gt;Photo&lt;/code&gt; モデルが &lt;code&gt;Tag&lt;/code&gt; モデルに関連付けられ、 &lt;code&gt;Post&lt;/code&gt; モデルが &lt;code&gt;Comment&lt;/code&gt; モデルに関連付けられていると仮定します。</target>
        </trans-unit>
        <trans-unit id="91cd2e455a7bf3ec5aac4172a7b87f0ec72e0883" translate="yes" xml:space="preserve">
          <source>In this example, note that we were able to pass an &lt;a href=&quot;eloquent&quot;&gt;Eloquent model&lt;/a&gt; directly into the queued job's constructor. Because of the &lt;code&gt;SerializesModels&lt;/code&gt; trait that the job is using, Eloquent models and their loaded relationships will be gracefully serialized and unserialized when the job is processing. If your queued job accepts an Eloquent model in its constructor, only the identifier for the model will be serialized onto the queue. When the job is actually handled, the queue system will automatically re-retrieve the full model instance and its loaded relationships from the database. It's all totally transparent to your application and prevents issues that can arise from serializing full Eloquent model instances.</source>
          <target state="translated">この例では、&lt;a href=&quot;eloquent&quot;&gt;Eloquentモデル&lt;/a&gt;をキューに入れられたジョブのコンストラクターに直接渡すことができたことに注意してください。ジョブが使用している &lt;code&gt;SerializesModels&lt;/code&gt; 特性により、Eloquentモデルとそれらのロードされた関係は、ジョブの処理時に正常にシリアル化および非シリアル化されます。キューに入れられたジョブがコンストラクターでEloquentモデルを受け入れる場合、モデルの識別子のみがキューにシリアル化されます。ジョブが実際に処理されると、キューシステムは、完全なモデルインスタンスとそのロードされた関係をデータベースから自動的に再取得します。これはすべてアプリケーションに対して完全に透過的であり、完全なEloquentモデルインスタンスのシリアル化から発生する可能性のある問題を防ぎます。</target>
        </trans-unit>
        <trans-unit id="79d3ab1d03601e58e1892460595a8bdf2308d22a" translate="yes" xml:space="preserve">
          <source>In this example, note that we were able to pass an &lt;a href=&quot;eloquent&quot;&gt;Eloquent model&lt;/a&gt; directly into the queued job's constructor. Because of the &lt;code&gt;SerializesModels&lt;/code&gt; trait that the job is using, Eloquent models will be gracefully serialized and unserialized when the job is processing. If your queued job accepts an Eloquent model in its constructor, only the identifier for the model will be serialized onto the queue. When the job is actually handled, the queue system will automatically re-retrieve the full model instance from the database. It's all totally transparent to your application and prevents issues that can arise from serializing full Eloquent model instances.</source>
          <target state="translated">この例では、&lt;a href=&quot;eloquent&quot;&gt;Eloquentモデル&lt;/a&gt;をキュージョブのコンストラクターに直接渡すことができたことに注意してください。ジョブが使用している &lt;code&gt;SerializesModels&lt;/code&gt; トレイトのため、Eloquentモデルは、ジョブの処理中に正常にシリアル化およびシリアル化解除されます。キューに入れられたジョブがコンストラクターでEloquentモデルを受け入れる場合、モデルの識別子のみがキューにシリアル化されます。ジョブが実際に処理されると、キューシステムはデータベースから完全なモデルインスタンスを自動的に再取得します。これはすべてアプリケーションに対して完全に透過的であり、Eloquentの完全なモデルインスタンスのシリアル化から発生する可能性のある問題を防ぎます。</target>
        </trans-unit>
        <trans-unit id="c04c27920c40b1d3545c266711d9ed010b2d9359" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;--queue&lt;/code&gt; switch may be specified when calling the Artisan command. If the &lt;code&gt;--queue&lt;/code&gt; switch is passed, the value of the option will be &lt;code&gt;true&lt;/code&gt;. Otherwise, the value will be &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">この例では、Artisanコマンドを呼び出すときに &lt;code&gt;--queue&lt;/code&gt; スイッチを指定できます。場合 &lt;code&gt;--queue&lt;/code&gt; スイッチが渡され、オプションの値になります &lt;code&gt;true&lt;/code&gt; 。それ以外の場合、値は &lt;code&gt;false&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="0dce48860f3816ee07f41816e16934390f49cbd2" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;:attribute&lt;/code&gt; place-holder will be replaced by the actual name of the field under validation. You may also utilize other place-holders in validation messages. For example:</source>
          <target state="translated">この例では、 &lt;code&gt;:attribute&lt;/code&gt; プレースホルダーは、検証中のフィールドの実際の名前に置き換えられます。検証メッセージで他のプレースホルダーを利用することもできます。例えば：</target>
        </trans-unit>
        <trans-unit id="b8cdb4683e50a4310ae085b364cd7d5adac55552" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;:attribute&lt;/code&gt; placeholder will be replaced by the actual name of the field under validation. You may also utilize other placeholders in validation messages. For example:</source>
          <target state="translated">この例では、 &lt;code&gt;:attribute&lt;/code&gt; プレースホルダーは、検証中のフィールドの実際の名前に置き換えられます。検証メッセージで他のプレースホルダーを利用することもできます。例えば：</target>
        </trans-unit>
        <trans-unit id="ef0bf5dc5e5e98ecff7390e69f67c14ef0ce6f5d" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;@&lt;/code&gt; symbol will be removed by Blade; however, &lt;code&gt;{{ name }}&lt;/code&gt; expression will remain untouched by the Blade engine, allowing it to instead be rendered by your JavaScript framework.</source>
          <target state="translated">この例では、 &lt;code&gt;@&lt;/code&gt; 記号はブレードによって削除されます。ただし、 &lt;code&gt;{{ name }}&lt;/code&gt; 式はブレードエンジンに影響を受けないため、代わりにJavaScriptフレームワークによってレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="8ebad6e611f0542c43e010f57631959e0216f422" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;UserController&lt;/code&gt; needs to retrieve users from a data source. So, we will &lt;strong&gt;inject&lt;/strong&gt; a service that is able to retrieve users. In this context, our &lt;code&gt;UserRepository&lt;/code&gt; most likely uses &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; to retrieve user information from the database. However, since the repository is injected, we are able to easily swap it out with another implementation. We are also able to easily &quot;mock&quot;, or create a dummy implementation of the &lt;code&gt;UserRepository&lt;/code&gt; when testing our application.</source>
          <target state="translated">この例では、 &lt;code&gt;UserController&lt;/code&gt; がデータソースからユーザーを取得する必要があります。そこで、ユーザーを取得できるサービスを&lt;strong&gt;注入&lt;/strong&gt;します。このコンテキストでは、 &lt;code&gt;UserRepository&lt;/code&gt; はおそらく&lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt;を使用してデータベースからユーザー情報を取得します。ただし、リポジトリが挿入されているため、別の実装と簡単に入れ替えることができます。また、アプリケーションをテストするときに、簡単に「モック」したり、 &lt;code&gt;UserRepository&lt;/code&gt; のダミー実装を作成したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="c932e21f54ca1bcf8044bdb4b4b52d4310252766" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;emails:send&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt; will be run every minute if it is not already running. The &lt;code&gt;withoutOverlapping&lt;/code&gt; method is especially useful if you have tasks that vary drastically in their execution time, preventing you from predicting exactly how long a given task will take.</source>
          <target state="translated">この例では、 &lt;code&gt;emails:send&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisanコマンド&lt;/a&gt;がまだ実行されていない場合は、毎分実行されます。 &lt;code&gt;withoutOverlapping&lt;/code&gt; のあなたが与えられたタスクの所要時間を正確に予測するからあなたを防止し、その実行時間に大幅に異なるタスクを持っている場合、この方法は特に便利です。</target>
        </trans-unit>
        <trans-unit id="408984634b6aa1b5a1717afd37dcae4935f78860" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;numprocs&lt;/code&gt; directive will instruct Supervisor to run 8 &lt;code&gt;queue:work&lt;/code&gt; processes and monitor all of them, automatically restarting them if they fail. Of course, you should change the &lt;code&gt;queue:work sqs&lt;/code&gt; portion of the &lt;code&gt;command&lt;/code&gt; directive to reflect your desired queue connection.</source>
          <target state="translated">この例では、 &lt;code&gt;numprocs&lt;/code&gt; ディレクティブは、8つの &lt;code&gt;queue:work&lt;/code&gt; プロセスを実行してすべてを監視するようスーパーバイザーに指示し、失敗した場合は自動的に再起動します。もちろん、 &lt;code&gt;command&lt;/code&gt; ディレクティブの &lt;code&gt;queue:work sqs&lt;/code&gt; 部分を変更して、必要なキュー接続を反映する必要があります。</target>
        </trans-unit>
        <trans-unit id="05ff898c52e8533534cb8d1e23a3082d558f1f94" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;numprocs&lt;/code&gt; directive will instruct Supervisor to run 8 &lt;code&gt;queue:work&lt;/code&gt; processes and monitor all of them, automatically restarting them if they fail. You should change the &lt;code&gt;queue:work sqs&lt;/code&gt; portion of the &lt;code&gt;command&lt;/code&gt; directive to reflect your desired queue connection.</source>
          <target state="translated">この例では、 &lt;code&gt;numprocs&lt;/code&gt; ディレクティブは、スーパーバイザーに8つの &lt;code&gt;queue:work&lt;/code&gt; プロセスを実行し、それらすべてを監視し、失敗した場合は自動的に再起動するように指示します。 &lt;code&gt;command&lt;/code&gt; ディレクティブの &lt;code&gt;queue:work sqs&lt;/code&gt; 部分を変更して、目的のキュー接続を反映する必要があります。</target>
        </trans-unit>
        <trans-unit id="7f6d9afd2161b8d8f0724a4fa5a2570f4f38d826" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;secret&lt;/code&gt; key will only be returned in the final resource response if the authenticated user's &lt;code&gt;isAdmin&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt;. If the method returns &lt;code&gt;false&lt;/code&gt;, the &lt;code&gt;secret&lt;/code&gt; key will be removed from the resource response entirely before it is sent back to the client. The &lt;code&gt;when&lt;/code&gt; method allows you to expressively define your resources without resorting to conditional statements when building the array.</source>
          <target state="translated">この例では、認証されたユーザーの &lt;code&gt;isAdmin&lt;/code&gt; メソッドが &lt;code&gt;true&lt;/code&gt; を返した場合にのみ、最終的なリソース応答で &lt;code&gt;secret&lt;/code&gt; 鍵が返されます。メソッドが復帰した場合 &lt;code&gt;false&lt;/code&gt; 、 &lt;code&gt;secret&lt;/code&gt; 鍵は、それがクライアントに返送され、完全に前にリソース応答から削除されます。 &lt;code&gt;when&lt;/code&gt; の方法は、あなたが表情豊かに、アレイを構築する際に条件文に頼らずに自分のリソースを定義することができます。</target>
        </trans-unit>
        <trans-unit id="e64d03449b77c86a1827b5b7d672621a3ce38c55" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;setFirstNameAttribute&lt;/code&gt; function will be called with the value &lt;code&gt;Sally&lt;/code&gt;. The mutator will then apply the &lt;code&gt;strtolower&lt;/code&gt; function to the name and set its resulting value in the internal &lt;code&gt;$attributes&lt;/code&gt; array.</source>
          <target state="translated">この例では、 &lt;code&gt;setFirstNameAttribute&lt;/code&gt; 関数が値 &lt;code&gt;Sally&lt;/code&gt; で呼び出されます。次にミューテーターは &lt;code&gt;strtolower&lt;/code&gt; 関数を名前に適用し、その結果の値を内部の &lt;code&gt;$attributes&lt;/code&gt; 配列に設定します。</target>
        </trans-unit>
        <trans-unit id="80470b87222f897074811578583ee513a1d0f6cb" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;sidebar&lt;/code&gt; section is utilizing the &lt;code&gt;@parent&lt;/code&gt; directive to append (rather than overwriting) content to the layout's sidebar. The &lt;code&gt;@parent&lt;/code&gt; directive will be replaced by the content of the layout when the view is rendered.</source>
          <target state="translated">この例では、 &lt;code&gt;sidebar&lt;/code&gt; セクションは &lt;code&gt;@parent&lt;/code&gt; ディレクティブを使用して、レイアウトのサイドバーに（上書きではなく）コンテンツを追加しています。 &lt;code&gt;@parent&lt;/code&gt; のビューがレンダリングされるときディレクティブは、レイアウトの内容に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="2db7fc39c19e473a6e358fa84f7607140c6bec68" translate="yes" xml:space="preserve">
          <source>In this example, the job is released for ten seconds if the application is unable to obtain a Redis lock and will continue to be retried up to 25 times. However, the job will fail if three unhandled exceptions are thrown by the job.</source>
          <target state="translated">この例では、アプリケーションがRedisロックを取得できなかった場合、ジョブは10秒間解放され、最大25回まで再試行され続けます。しかし、ジョブによって3つの未処理の例外が投げられた場合、ジョブは失敗します。</target>
        </trans-unit>
        <trans-unit id="4f24299ecfe690d1ac8f7b68de13e93f550323a7" translate="yes" xml:space="preserve">
          <source>In this example, the only argument passed to the &lt;code&gt;paginate&lt;/code&gt; method is the number of items you would like displayed &quot;per page&quot;. In this case, let's specify that we would like to display &lt;code&gt;15&lt;/code&gt; items per page:</source>
          <target state="translated">この例では、 &lt;code&gt;paginate&lt;/code&gt; メソッドに渡される唯一の引数は、「ページごと」に表示するアイテムの数です。この場合、ページごとに &lt;code&gt;15&lt;/code&gt; 項目を表示するように指定します。</target>
        </trans-unit>
        <trans-unit id="294cf6c5faa854b02b152515e47f8c4080c92f42" translate="yes" xml:space="preserve">
          <source>In this example, the user may pass a value for the option like so:</source>
          <target state="translated">この例では、ユーザは以下のようにオプションに値を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="f917f182027ac94bf72b5a7df0a4ba77a33635dd" translate="yes" xml:space="preserve">
          <source>In this example, we are specifying that the &lt;code&gt;publish_at&lt;/code&gt; field may be either &lt;code&gt;null&lt;/code&gt; or a valid date representation. If the &lt;code&gt;nullable&lt;/code&gt; modifier is not added to the rule definition, the validator would consider &lt;code&gt;null&lt;/code&gt; an invalid date.</source>
          <target state="translated">この例では、 &lt;code&gt;publish_at&lt;/code&gt; フィールドが &lt;code&gt;null&lt;/code&gt; または有効な日付表現のいずれかになるように指定しています。 &lt;code&gt;nullable&lt;/code&gt; 修飾子がルール定義に追加されていない場合、バリデーターは &lt;code&gt;null&lt;/code&gt; を無効な日付と見なします。</target>
        </trans-unit>
        <trans-unit id="7645e6fd1e91dfad4e70083d2e092be76ea5b9c0" translate="yes" xml:space="preserve">
          <source>In this example, we assign the &lt;code&gt;name&lt;/code&gt; parameter from the incoming HTTP request to the &lt;code&gt;name&lt;/code&gt; attribute of the &lt;code&gt;App\Flight&lt;/code&gt; model instance. When we call the &lt;code&gt;save&lt;/code&gt; method, a record will be inserted into the database. The &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps will automatically be set when the &lt;code&gt;save&lt;/code&gt; method is called, so there is no need to set them manually.</source>
          <target state="translated">この例では、着信HTTPリクエストからの &lt;code&gt;name&lt;/code&gt; パラメーターを &lt;code&gt;App\Flight&lt;/code&gt; モデルインスタンスの &lt;code&gt;name&lt;/code&gt; 属性に割り当てます。 &lt;code&gt;save&lt;/code&gt; メソッドを呼び出すと、レコードがデータベースに挿入されます。 &lt;code&gt;created_at&lt;/code&gt; と &lt;code&gt;updated_at&lt;/code&gt; のタイムスタンプが自動的に設定されます &lt;code&gt;save&lt;/code&gt; メソッドが呼び出されるので、手動で設定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="678e580504eabf6d006ae5c37d68d358be33db0e" translate="yes" xml:space="preserve">
          <source>In this example, we assign the &lt;code&gt;name&lt;/code&gt; parameter from the incoming HTTP request to the &lt;code&gt;name&lt;/code&gt; attribute of the &lt;code&gt;App\Models\Flight&lt;/code&gt; model instance. When we call the &lt;code&gt;save&lt;/code&gt; method, a record will be inserted into the database. The &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps will automatically be set when the &lt;code&gt;save&lt;/code&gt; method is called, so there is no need to set them manually.</source>
          <target state="translated">この例では、着信HTTPリクエストからの &lt;code&gt;name&lt;/code&gt; パラメーターを &lt;code&gt;App\Models\Flight&lt;/code&gt; モデルインスタンスの &lt;code&gt;name&lt;/code&gt; 属性に割り当てます。 &lt;code&gt;save&lt;/code&gt; メソッドを呼び出すと、レコードがデータベースに挿入されます。 &lt;code&gt;created_at&lt;/code&gt; と &lt;code&gt;updated_at&lt;/code&gt; のタイムスタンプが自動的に設定されます &lt;code&gt;save&lt;/code&gt; メソッドが呼び出されるので、手動で設定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="7b409a867b088dba02674a12d19ff62006e3cba6" translate="yes" xml:space="preserve">
          <source>In this example, we register a greeting, a line of text, a call to action, and then another line of text. These methods provided by the &lt;code&gt;MailMessage&lt;/code&gt; object make it simple and fast to format small transactional emails. The mail channel will then translate the message components into a nice, responsive HTML email template with a plain-text counterpart. Here is an example of an email generated by the &lt;code&gt;mail&lt;/code&gt; channel:</source>
          <target state="translated">この例では、挨拶、テキストの行、行動を促すフレーズ、次に別のテキストの行を登録します。 &lt;code&gt;MailMessage&lt;/code&gt; オブジェクトによって提供されるこれらのメソッドにより、小さなトランザクションメールを簡単かつ迅速にフォーマットできます。メールチャネルは、メッセージコンポーネントをプレーンテキストの対応する見栄えのよいHTMLメールテンプレートに変換します。 &lt;code&gt;mail&lt;/code&gt; チャネルによって生成されたメールの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="55dd4321c0759a519afbc6bc62fb828fc475d0b1" translate="yes" xml:space="preserve">
          <source>In this example, we used a traditional form to send data to the application. However, many applications use AJAX requests. When using the &lt;code&gt;validate&lt;/code&gt; method during an AJAX request, Laravel will not generate a redirect response. Instead, Laravel generates a JSON response containing all of the validation errors. This JSON response will be sent with a 422 HTTP status code.</source>
          <target state="translated">この例では、従来のフォームを使用してデータをアプリケーションに送信しました。ただし、多くのアプリケーションはAJAX要求を使用します。AJAXリクエスト中に &lt;code&gt;validate&lt;/code&gt; メソッドを使用すると、Laravelはリダイレクト応答を生成しません。代わりに、Laravelはすべての検証エラーを含むJSON応答を生成します。このJSON応答は、422 HTTPステータスコードで送信されます。</target>
        </trans-unit>
        <trans-unit id="4f8fa72d734a9abb5456764c3e324b63deff21a3" translate="yes" xml:space="preserve">
          <source>In this example, we will use the &lt;code&gt;LoadImportBatch&lt;/code&gt; job to hydrate the batch with additional jobs. To accomplish this, we may use the &lt;code&gt;add&lt;/code&gt; method on the batch instance that can be accessed within the job:</source>
          <target state="translated">この例では、 &lt;code&gt;LoadImportBatch&lt;/code&gt; ジョブを使用して、追加のジョブでバッチをハイドレイトします。これを実現するために、ジョブ内でアクセスできるバッチインスタンスで &lt;code&gt;add&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="3c8df09327d1a61c868a95781417326ce057d315" translate="yes" xml:space="preserve">
          <source>In this example, we'll attach a relation to some created models. When using the &lt;code&gt;create&lt;/code&gt; method to create multiple models, an Eloquent &lt;a href=&quot;eloquent-collections&quot;&gt;collection instance&lt;/a&gt; is returned, allowing you to use any of the convenient functions provided by the collection, such as &lt;code&gt;each&lt;/code&gt;:</source>
          <target state="translated">この例では、作成されたいくつかのモデルにリレーションをアタッチします。使用する場合は &lt;code&gt;create&lt;/code&gt; 、複数のモデルを作成する方法を、雄弁の&lt;a href=&quot;eloquent-collections&quot;&gt;コレクション・インスタンスは&lt;/a&gt;など、あなたがコレクションが提供する便利な機能のいずれかを使用することができ、返される &lt;code&gt;each&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="48aa07114d1dbabd827aec6417e740a6ed152a8b" translate="yes" xml:space="preserve">
          <source>In this example, we're passing the &lt;code&gt;can&lt;/code&gt; middleware two arguments. The first is the name of the action we wish to authorize and the second is the route parameter we wish to pass to the policy method. In this case, since we are using &lt;a href=&quot;routing#implicit-binding&quot;&gt;implicit model binding&lt;/a&gt;, a &lt;code&gt;Post&lt;/code&gt; model will be passed to the policy method. If the user is not authorized to perform the given action, a HTTP response with a &lt;code&gt;403&lt;/code&gt; status code will be generated by the middleware.</source>
          <target state="translated">この例では、 &lt;code&gt;can&lt;/code&gt; ミドルウェアに2つの引数を渡しています。 1つ目は承認するアクションの名前で、2つ目はポリシーメソッドに渡すルートパラメータです。この場合、&lt;a href=&quot;routing#implicit-binding&quot;&gt;暗黙的なモデルバインディング&lt;/a&gt;を使用しているため、 &lt;code&gt;Post&lt;/code&gt; モデルがポリシーメソッドに渡されます。ユーザーが所定のアクションを実行することを許可されていない場合、ミドルウェアによって &lt;code&gt;403&lt;/code&gt; ステータスコードを含むHTTP応答が生成されます。</target>
        </trans-unit>
        <trans-unit id="08778dad2ada2362b8a924bce70cc333b3eeb4af" translate="yes" xml:space="preserve">
          <source>In this example, we're passing the &lt;code&gt;can&lt;/code&gt; middleware two arguments. The first is the name of the action we wish to authorize and the second is the route parameter we wish to pass to the policy method. In this case, since we are using &lt;a href=&quot;routing#implicit-binding&quot;&gt;implicit model binding&lt;/a&gt;, a &lt;code&gt;Post&lt;/code&gt; model will be passed to the policy method. If the user is not authorized to perform the given action, an HTTP response with a &lt;code&gt;403&lt;/code&gt; status code will be generated by the middleware.</source>
          <target state="translated">この例では、 &lt;code&gt;can&lt;/code&gt; ミドルウェアに2つの引数を渡します。 1つ目は、承認するアクションの名前であり、2つ目は、ポリシーメソッドに渡すルートパラメーターです。この場合、&lt;a href=&quot;routing#implicit-binding&quot;&gt;暗黙的なモデルバインディング&lt;/a&gt;を使用しているため、 &lt;code&gt;Post&lt;/code&gt; モデルがポリシーメソッドに渡されます。ユーザーが特定のアクションを実行する権限を持っていない場合、ミドルウェアによって &lt;code&gt;403&lt;/code&gt; ステータスコードのHTTP応答が生成されます。</target>
        </trans-unit>
        <trans-unit id="31cf8434e7fd0b7b62c51b005cf3d7214d24fc05" translate="yes" xml:space="preserve">
          <source>In this overview you will learn how to write your own service providers and register them with your Laravel application.</source>
          <target state="translated">この概要では、独自のサービスプロバイダを書き、Laravelアプリケーションに登録する方法を学びます。</target>
        </trans-unit>
        <trans-unit id="0a371cb1ae5274fad95e57ac9993ae7c792d4583" translate="yes" xml:space="preserve">
          <source>In web applications, one of the most common use-cases for storing files is storing user uploaded files such as profile pictures, photos, and documents. Laravel makes it very easy to store uploaded files using the &lt;code&gt;store&lt;/code&gt; method on an uploaded file instance. Call the &lt;code&gt;store&lt;/code&gt; method with the path at which you wish to store the uploaded file:</source>
          <target state="translated">Webアプリケーションでは、ファイルを保存する最も一般的なユースケースの1つは、ユーザーがアップロードしたファイル（プロフィール写真、写真、ドキュメントなど）を保存することです。Laravelを使用すると、アップロードされたファイルインスタンスで &lt;code&gt;store&lt;/code&gt; メソッドを使用して、アップロードされたファイルを非常に簡単に保存できます。アップロードしたファイルを保存するパスを指定して、 &lt;code&gt;store&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="ce954e9a3774e22208ca0f27349cf1a8281d83fc" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;auth.php&lt;/code&gt; configuration file, you may configure multiple &quot;guards&quot;, which may be used to define authentication behavior for multiple user tables. You can customize the included &lt;code&gt;ResetPasswordController&lt;/code&gt; to use the guard of your choice by overriding the &lt;code&gt;guard&lt;/code&gt; method on the controller. This method should return a guard instance:</source>
          <target state="translated">あなたに &lt;code&gt;auth.php&lt;/code&gt; の設定ファイルは、複数のユーザーテーブルの認証動作を定義するために使用することができる複数の「ガード」を、設定することができます。付属の &lt;code&gt;ResetPasswordController&lt;/code&gt; をカスタマイズして、コントローラーの &lt;code&gt;guard&lt;/code&gt; メソッドをオーバーライドすることにより、選択したガードを使用できます。このメソッドは、ガードインスタンスを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="243a61a48b1464612ee3b00761d5251a4d87ad3f" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;auth.php&lt;/code&gt; configuration file, you may configure multiple password &quot;brokers&quot;, which may be used to reset passwords on multiple user tables. You can customize the included &lt;code&gt;ForgotPasswordController&lt;/code&gt; and &lt;code&gt;ResetPasswordController&lt;/code&gt; to use the broker of your choice by overriding the &lt;code&gt;broker&lt;/code&gt; method:</source>
          <target state="translated">あなたに &lt;code&gt;auth.php&lt;/code&gt; の設定ファイルは、複数のユーザテーブルのパスワードをリセットするために使用することができる複数のパスワード「ブローカー」を、設定することができます。付属の &lt;code&gt;ForgotPasswordController&lt;/code&gt; と &lt;code&gt;ResetPasswordController&lt;/code&gt; をカスタマイズして、 &lt;code&gt;broker&lt;/code&gt; メソッドをオーバーライドすることにより、選択したブローカーを使用できます。</target>
        </trans-unit>
        <trans-unit id="1524288543700d7d9e32205b8fd0adb4e8cf8ac1" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;config/queue.php&lt;/code&gt; configuration file, each queue connection defines a &lt;code&gt;retry_after&lt;/code&gt; option. This option specifies how many seconds the queue connection should wait before retrying a job that is being processed. For example, if the value of &lt;code&gt;retry_after&lt;/code&gt; is set to &lt;code&gt;90&lt;/code&gt;, the job will be released back onto the queue if it has been processing for 90 seconds without being deleted. Typically, you should set the &lt;code&gt;retry_after&lt;/code&gt; value to the maximum number of seconds your jobs should reasonably take to complete processing.</source>
          <target state="translated">あなたには &lt;code&gt;config/queue.php&lt;/code&gt; コンフィギュレーションファイル、各キューの接続が定義されて &lt;code&gt;retry_after&lt;/code&gt; のオプションを選択します。このオプションは、処理中のジョブを再試行する前にキュー接続が待機する秒数を指定します。たとえば、 &lt;code&gt;retry_after&lt;/code&gt; の値が &lt;code&gt;90&lt;/code&gt; に設定されている場合、ジョブが削除されずに90秒間処理されていれば、ジョブはキューに解放されます。通常、 &lt;code&gt;retry_after&lt;/code&gt; 値は、ジョブが処理を完了するために合理的にかかる最大秒数に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e4a5eae4878fa1d29183fea69ff2e42fec94a9e1" translate="yes" xml:space="preserve">
          <source>In::__construct()</source>
          <target state="translated">In::__construct()</target>
        </trans-unit>
        <trans-unit id="1ada18d61a4a2f9d0f12e01cd177a5007beeb936" translate="yes" xml:space="preserve">
          <source>In::__toString()</source>
          <target state="translated">In::__toString()</target>
        </trans-unit>
        <trans-unit id="58d35338f404b009e6738d9ccfd1d1a2d15ccef2" translate="yes" xml:space="preserve">
          <source>Inbound Casting</source>
          <target state="translated">インバウンドキャスティング</target>
        </trans-unit>
        <trans-unit id="58f82d0812f7117dc6f2e8f0a267abdc22110de3" translate="yes" xml:space="preserve">
          <source>Included Software</source>
          <target state="translated">付属ソフトウェア</target>
        </trans-unit>
        <trans-unit id="53bed8a85a2245a3110061dfbda8a710ae7bac44" translate="yes" xml:space="preserve">
          <source>Including Soft Deleted Models</source>
          <target state="translated">ソフト削除モデルを含む</target>
        </trans-unit>
        <trans-unit id="60b4bee006119a74c478faf1735ae28fd427a1da" translate="yes" xml:space="preserve">
          <source>Including Sub-Views</source>
          <target state="translated">サブビューを含む</target>
        </trans-unit>
        <trans-unit id="d55523b6934eda41c1a887a706c9dbafac336890" translate="yes" xml:space="preserve">
          <source>Including Subviews</source>
          <target state="translated">サブビューを含む</target>
        </trans-unit>
        <trans-unit id="f7b9e8b49f6a6e1cedd1a5680b32d57c92cfa1af" translate="yes" xml:space="preserve">
          <source>Incomplete and Past Due State</source>
          <target state="translated">不完全かつ期限切れの状態</target>
        </trans-unit>
        <trans-unit id="4b44b11a923654fa4809062da63045c2734dc139" translate="yes" xml:space="preserve">
          <source>Incomplete and Past Due Status</source>
          <target state="translated">未完成と期限切れのステータス</target>
        </trans-unit>
        <trans-unit id="4e6b64578fe784042a30fcd187761db768f450bb" translate="yes" xml:space="preserve">
          <source>Increment &amp;amp; Decrement</source>
          <target state="translated">インクリメントとデクリメント</target>
        </trans-unit>
        <trans-unit id="fa191665f5515d240421d27bb3fcd2dc3616e350" translate="yes" xml:space="preserve">
          <source>Increment / Decrement Events</source>
          <target state="translated">インクリメント/デクリメントイベント</target>
        </trans-unit>
        <trans-unit id="8ed656d77828bd104d07eefa11edb709fd88fd24" translate="yes" xml:space="preserve">
          <source>Increment a column's value by a given amount.</source>
          <target state="translated">列の値を指定した量だけインクリメントします。</target>
        </trans-unit>
        <trans-unit id="a4483e397144f43243f9e02d68088cac7428c934" translate="yes" xml:space="preserve">
          <source>Increment or decrement an item in the cache.</source>
          <target state="translated">キャッシュ内のアイテムを増加または減少させます。</target>
        </trans-unit>
        <trans-unit id="63e69a8aa2f845e89302c9269a68f4d89a5c6271" translate="yes" xml:space="preserve">
          <source>Increment or decrement the given attribute using the custom cast class.</source>
          <target state="translated">カスタム・キャスト・クラスを使用して、与えられた属性をインクリメントまたはデクリメントします。</target>
        </trans-unit>
        <trans-unit id="9d0e8b6df8d036844b32b7dfbf8c6e2bf60687fa" translate="yes" xml:space="preserve">
          <source>Increment the attribute.</source>
          <target state="translated">属性をインクリメントします。</target>
        </trans-unit>
        <trans-unit id="f31526e48256ed6e974c64a774df5e928fac32d3" translate="yes" xml:space="preserve">
          <source>Increment the counter for a given key for a given decay time.</source>
          <target state="translated">指定された減衰時間の間、指定されたキーのカウンタをインクリメントします。</target>
        </trans-unit>
        <trans-unit id="f8ad60ae4fc0d1de2038ac3781d68abdc7001a21" translate="yes" xml:space="preserve">
          <source>Increment the failed jobs for the batch.</source>
          <target state="translated">バッチの失敗したジョブを増加させます。</target>
        </trans-unit>
        <trans-unit id="74a7a5ac36856023c6f877a164006194f1934cf0" translate="yes" xml:space="preserve">
          <source>Increment the login attempts for the user.</source>
          <target state="translated">ユーザーのログイン試行回数を増やします。</target>
        </trans-unit>
        <trans-unit id="b2bc3ea2a13350bb4bfb5ddd0834d26e0d26a359" translate="yes" xml:space="preserve">
          <source>Increment the number of times the job has been attempted.</source>
          <target state="translated">ジョブの試行回数を増加させます。</target>
        </trans-unit>
        <trans-unit id="4a0b0dc6d6546e3695a3c0b6d4e3cdbeb46b3952" translate="yes" xml:space="preserve">
          <source>Increment the rendering counter.</source>
          <target state="translated">レンダリングカウンタをインクリメントします。</target>
        </trans-unit>
        <trans-unit id="3a235ff37d4244756ff4c714a1b9764197ffe1f6" translate="yes" xml:space="preserve">
          <source>Increment the top loop's indices.</source>
          <target state="translated">トップループのインデックスを増加させます。</target>
        </trans-unit>
        <trans-unit id="a439d26591740d32b31969595500806375aba35a" translate="yes" xml:space="preserve">
          <source>Increment the total number of failed jobs for the batch.</source>
          <target state="translated">バッチの失敗したジョブの総数を増加させます。</target>
        </trans-unit>
        <trans-unit id="f986cf6a49bd05aefb40d42397f685e22e1be162" translate="yes" xml:space="preserve">
          <source>Increment the total number of jobs within the batch.</source>
          <target state="translated">バッチ内のジョブの総数を増加させます。</target>
        </trans-unit>
        <trans-unit id="fbf36fd3c20d20f78788a458b293e1b64728b151" translate="yes" xml:space="preserve">
          <source>Increment the underlying attribute value and sync with original.</source>
          <target state="translated">基礎となる属性値をインクリメントし、元の属性値と同期させます。</target>
        </trans-unit>
        <trans-unit id="bd462300156b4c9217ac341bce7277930e8c13a9" translate="yes" xml:space="preserve">
          <source>Increment the value of an item in the cache.</source>
          <target state="translated">キャッシュ内のアイテムの値を増加させます。</target>
        </trans-unit>
        <trans-unit id="71eddc5157e377fc43bbc60eca7ecaa1eacf91ab" translate="yes" xml:space="preserve">
          <source>Increment the value of an item in the session.</source>
          <target state="translated">セッション内の項目の値を増加させます。</target>
        </trans-unit>
        <trans-unit id="9b9529aa83638faa3de648e21f86dbd495a97d46" translate="yes" xml:space="preserve">
          <source>Incrementing / Decrementing Values</source>
          <target state="translated">値の増加・減少</target>
        </trans-unit>
        <trans-unit id="0ffcc65e726c58fe174e651b450b752578d81c56" translate="yes" xml:space="preserve">
          <source>Index Lengths &amp;amp; MySQL / MariaDB</source>
          <target state="translated">インデックスの長さとMySQL / MariaDB</target>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="9951861c21df18489a5872209655d6f9039b5e2a" translate="yes" xml:space="preserve">
          <source>Indexing</source>
          <target state="translated">Indexing</target>
        </trans-unit>
        <trans-unit id="8483f571e1531b3290891a35fc6218a587d0b11e" translate="yes" xml:space="preserve">
          <source>Indicate if any records have been modified.</source>
          <target state="translated">変更されたレコードがあるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="c75ba7263fda8c4703639bf91fa85e1de8b70652" translate="yes" xml:space="preserve">
          <source>Indicate if the job should be deleted when models are missing.</source>
          <target state="translated">モデルが見つからない場合にジョブを削除するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="9d490e7c187516a679ff603fed4da08be329f2ad" translate="yes" xml:space="preserve">
          <source>Indicate that Bootstrap 3 styling should be used for generated links.</source>
          <target state="translated">生成されたリンクにBootstrap 3のスタイリングが使用されるべきであることを示します。</target>
        </trans-unit>
        <trans-unit id="6c8baee9a5295601bd3ee26237ac09ce57bd6d55" translate="yes" xml:space="preserve">
          <source>Indicate that Bootstrap 4 styling should be used for generated links.</source>
          <target state="translated">生成されたリンクにBootstrap 4のスタイリングが使用されるべきであることを示します。</target>
        </trans-unit>
        <trans-unit id="dc666b601a907c58901dff78b5f48f193e8d27ee" translate="yes" xml:space="preserve">
          <source>Indicate that JSON should be returned by the server.</source>
          <target state="translated">サーバーからJSONを返すことを示します。</target>
        </trans-unit>
        <trans-unit id="e14099e5f79897f9fb8684ed157319131fed828c" translate="yes" xml:space="preserve">
          <source>Indicate that TLS certificates should not be verified.</source>
          <target state="translated">TLS 証明書を検証すべきでないことを示します。</target>
        </trans-unit>
        <trans-unit id="be6f6f35ddd40965dbfe2c7aba39fefd9cc6383e" translate="yes" xml:space="preserve">
          <source>Indicate that Tailwind styling should be used for generated links.</source>
          <target state="translated">生成されたリンクに Tailwind スタイリングを使用することを示します。</target>
        </trans-unit>
        <trans-unit id="ffa82fbcb81dc3f49b93ad51b27a94fc36625c55" translate="yes" xml:space="preserve">
          <source>Indicate that UUIDs should be created normally and not using a custom factory.</source>
          <target state="translated">UUIDはカスタムファクトリーを使用せず、通常通りに作成されるべきであることを示します。</target>
        </trans-unit>
        <trans-unit id="e087772aa6d05920f69ab7e9bb06710c2f45245a" translate="yes" xml:space="preserve">
          <source>Indicate that all current query parameters should be appended to pagination links.</source>
          <target state="translated">現在のすべてのクエリパラメータをページネーションリンクに追加することを示します。</target>
        </trans-unit>
        <trans-unit id="05615977eaca254a2335536086b493be1e10d5c6" translate="yes" xml:space="preserve">
          <source>Indicate that an attribute should be excluded when another attribute does not have a given value.</source>
          <target state="translated">他の属性が与えられた値を持たない場合に、ある属性を除外すべきであることを示す。</target>
        </trans-unit>
        <trans-unit id="58d2a776bf19081104fb5a6766249cd9291d4275" translate="yes" xml:space="preserve">
          <source>Indicate that an attribute should be excluded when another attribute has a given value.</source>
          <target state="translated">他の属性が与えられた値を持っている場合に、ある属性を除外することを示します。</target>
        </trans-unit>
        <trans-unit id="2e241f9779fde71119bf6589c8d65195fc52689f" translate="yes" xml:space="preserve">
          <source>Indicate that an attribute should be excluded when another attribute is missing.</source>
          <target state="translated">他の属性が欠落している場合に、ある属性を除外することを示す。</target>
        </trans-unit>
        <trans-unit id="4ca1c58cc5ed4e953c80b359923e907137bd573c" translate="yes" xml:space="preserve">
          <source>Indicate that component tags should not be compiled.</source>
          <target state="translated">コンポーネントタグをコンパイルしないことを示します。</target>
        </trans-unit>
        <trans-unit id="c144d7d541a0534ac245dd5880232d12fc8bdf2e" translate="yes" xml:space="preserve">
          <source>Indicate that deletes should be restricted.</source>
          <target state="translated">削除を制限する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="c51a2adc4cf13ed7e1355275aa57a83244c9aa4c" translate="yes" xml:space="preserve">
          <source>Indicate that deletes should cascade.</source>
          <target state="translated">削除をカスケードすることを示します。</target>
        </trans-unit>
        <trans-unit id="d1ba22701329de7a93d5b76c6f84ee35819ca0b7" translate="yes" xml:space="preserve">
          <source>Indicate that deletes should set the foreign key value to null.</source>
          <target state="translated">外部キーの値を NULL に設定する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="dcf7467594edce389bbf39cb17f7fb260a922167" translate="yes" xml:space="preserve">
          <source>Indicate that redirects should not be followed.</source>
          <target state="translated">リダイレクトに従うべきではないことを示します。</target>
        </trans-unit>
        <trans-unit id="67404d5e5eca7f8f47dc04835e5a1ec8417dc844" translate="yes" xml:space="preserve">
          <source>Indicate that report handling should stop after invoking this callback.</source>
          <target state="translated">このコールバックを呼び出した後、レポート処理を停止することを示します。</target>
        </trans-unit>
        <trans-unit id="41b0be9ee962f8db51f8203f5d8b124a8abfb99f" translate="yes" xml:space="preserve">
          <source>Indicate that the batch should not be cancelled when a job within the batch fails.</source>
          <target state="translated">バッチ内のジョブが失敗した場合、バッチをキャンセルしないことを示します。</target>
        </trans-unit>
        <trans-unit id="ef204fe2afff27b8b6860a52ea7f6bf460a736e4" translate="yes" xml:space="preserve">
          <source>Indicate that the given column and foreign key should be dropped.</source>
          <target state="translated">与えられた列と外部キーを削除することを示します。</target>
        </trans-unit>
        <trans-unit id="e320d89cffa329dcddb7488c45d10128f3fffbe9" translate="yes" xml:space="preserve">
          <source>Indicate that the given columns should be dropped.</source>
          <target state="translated">与えられた列を削除することを示します。</target>
        </trans-unit>
        <trans-unit id="3ada10c8d8018395aa0924361528092dbeda3713" translate="yes" xml:space="preserve">
          <source>Indicate that the given columns should be renamed.</source>
          <target state="translated">与えられた列の名前を変更する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="7fd25c21f3b4c9b05a5ea5e606ae548cf5e36fb2" translate="yes" xml:space="preserve">
          <source>Indicate that the given exception type should not be reported.</source>
          <target state="translated">与えられた例外の種類を報告しないことを示します。</target>
        </trans-unit>
        <trans-unit id="112b10887f4cab70e2e100e41903ee856a026a10" translate="yes" xml:space="preserve">
          <source>Indicate that the given foreign key should be dropped.</source>
          <target state="translated">与えられた外部キーを削除することを示します。</target>
        </trans-unit>
        <trans-unit id="6bb761eb2d7f273838ee8e95a1facc47cdd0f842" translate="yes" xml:space="preserve">
          <source>Indicate that the given index should be dropped.</source>
          <target state="translated">指定されたインデックスを削除することを示します。</target>
        </trans-unit>
        <trans-unit id="557da3914113389329c23c0c7e75a3509252cbe4" translate="yes" xml:space="preserve">
          <source>Indicate that the given indexes should be renamed.</source>
          <target state="translated">与えられたインデックスの名前を変更することを示します。</target>
        </trans-unit>
        <trans-unit id="1d0d2405deb02fb2261e398f8b6a274cb11bad52" translate="yes" xml:space="preserve">
          <source>Indicate that the given primary key should be dropped.</source>
          <target state="translated">与えられた主キーを削除することを示します。</target>
        </trans-unit>
        <trans-unit id="2f8bc6bf350ef412195675e4686b69f2a66a88bd" translate="yes" xml:space="preserve">
          <source>Indicate that the given spatial index should be dropped.</source>
          <target state="translated">与えられた空間インデックスを削除することを示す。</target>
        </trans-unit>
        <trans-unit id="d949705ca337b2f864b4225ea7f476d1d27c8791" translate="yes" xml:space="preserve">
          <source>Indicate that the given unique key should be dropped.</source>
          <target state="translated">与えられた一意のキーを削除することを示します。</target>
        </trans-unit>
        <trans-unit id="f262c51707494abffa59ee777d59f772cf5d1c17" translate="yes" xml:space="preserve">
          <source>Indicate that the job should be dispatched after the response is sent to the browser.</source>
          <target state="translated">レスポンスがブラウザに送信された後にジョブをディスパッチすべきであることを示します。</target>
        </trans-unit>
        <trans-unit id="8e0577ff1f7edce5a456615ad7bed1d5349acb5d" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about a successful operation.</source>
          <target state="translated">通知が成功した操作についての情報を与えることを示します。</target>
        </trans-unit>
        <trans-unit id="da6af317c9fa4c9319a160c096ecfec447a033ed" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about a warning.</source>
          <target state="translated">通知が警告についての情報を与えることを示します。</target>
        </trans-unit>
        <trans-unit id="b1e4d3b4f57c6d9fb779163ae917292d46144143" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about an error.</source>
          <target state="translated">通知がエラーに関する情報を提供することを示します。</target>
        </trans-unit>
        <trans-unit id="5b2b50614f4011aa2604723ef4a696a347592e6f" translate="yes" xml:space="preserve">
          <source>Indicate that the notification gives information about an operation.</source>
          <target state="translated">通知が操作に関する情報を与えることを示します。</target>
        </trans-unit>
        <trans-unit id="ac57105d7d241e2eb1c1898210eabdff5eb3cd61" translate="yes" xml:space="preserve">
          <source>Indicate that the polymorphic columns should be dropped.</source>
          <target state="translated">ポリモーフィックカラムを削除することを示します。</target>
        </trans-unit>
        <trans-unit id="627637fc17d47b8baf22e3828d1909d19fbc71c2" translate="yes" xml:space="preserve">
          <source>Indicate that the remember token column should be dropped.</source>
          <target state="translated">リメンバートークンの列を削除することを示します。</target>
        </trans-unit>
        <trans-unit id="39a5f14fdcdaea8f599a51820ae6e2998ba6ea3a" translate="yes" xml:space="preserve">
          <source>Indicate that the resource routes should be scoped using the given binding fields.</source>
          <target state="translated">与えられたバインディングフィールドを使用してリソースルートをスコープする必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="9df2ac18ac1000d164eb60cdcb8be932d44f1103" translate="yes" xml:space="preserve">
          <source>Indicate that the resource routes should have &quot;shallow&quot; nesting.</source>
          <target state="translated">リソースルートが「浅い」入れ子を持つべきであることを示す。</target>
        </trans-unit>
        <trans-unit id="ecc2bd3df3398642668d30aacc0038b7382ecd23" translate="yes" xml:space="preserve">
          <source>Indicate that the soft delete column should be dropped.</source>
          <target state="translated">ソフト削除列を削除することを示します。</target>
        </trans-unit>
        <trans-unit id="d0bfc941b3431df313279c6889590a8c140773d3" translate="yes" xml:space="preserve">
          <source>Indicate that the table needs to be created.</source>
          <target state="translated">テーブルを作成する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="e7f5fb99242137a5e0630403eb90fc3240cc3109" translate="yes" xml:space="preserve">
          <source>Indicate that the table needs to be temporary.</source>
          <target state="translated">テーブルを一時的に使用する必要があることを示します。</target>
        </trans-unit>
        <trans-unit id="eb7351a1657aa0fd057a74106c77f627c3dd99d0" translate="yes" xml:space="preserve">
          <source>Indicate that the table should be dropped if it exists.</source>
          <target state="translated">テーブルが存在する場合には、そのテーブルを削除することを示します。</target>
        </trans-unit>
        <trans-unit id="af6ac437c589e85bac0e93716f54f3baaa3f57bc" translate="yes" xml:space="preserve">
          <source>Indicate that the table should be dropped.</source>
          <target state="translated">テーブルを削除することを示します。</target>
        </trans-unit>
        <trans-unit id="e5abf3c41c3fc2b34e76227860f1ff41f954e811" translate="yes" xml:space="preserve">
          <source>Indicate that the timestamp columns should be dropped.</source>
          <target state="translated">タイムスタンプ列を削除することを示します。</target>
        </trans-unit>
        <trans-unit id="4b36ef8c9f345cfe86b1623563e6add1d83ce5e8" translate="yes" xml:space="preserve">
          <source>Indicate that this sequence has depleted all of its responses.</source>
          <target state="translated">この配列がすべての応答を枯渇させたことを示す。</target>
        </trans-unit>
        <trans-unit id="03481c1a347955bb9122ad1768a627dfe5159dca" translate="yes" xml:space="preserve">
          <source>Indicate that trashed &quot;through&quot; parents should be included in the query.</source>
          <target state="translated">トラッシュされた &quot;スルー &quot;親がクエリに含まれるべきであることを示します。</target>
        </trans-unit>
        <trans-unit id="14f8054fc901f629bea44f1e98f52135736e4f08" translate="yes" xml:space="preserve">
          <source>Indicate that updates should cascade.</source>
          <target state="translated">更新がカスケードすることを示します。</target>
        </trans-unit>
        <trans-unit id="113faba1c21b38f7743ddc166b86a0d7c6a129e9" translate="yes" xml:space="preserve">
          <source>Indicate the request contains JSON.</source>
          <target state="translated">リクエストにJSONが含まれていることを示します。</target>
        </trans-unit>
        <trans-unit id="07351eac88876a1622ad4b0b6941f008456196c4" translate="yes" xml:space="preserve">
          <source>Indicate the request contains form parameters.</source>
          <target state="translated">リクエストにフォームパラメータが含まれていることを示します。</target>
        </trans-unit>
        <trans-unit id="2b2ef28c4f2532a8b319afd97e227f6cbcf7966d" translate="yes" xml:space="preserve">
          <source>Indicate the request is a multi-part form request.</source>
          <target state="translated">リクエストが複数パートのフォームリクエストであることを示します。</target>
        </trans-unit>
        <trans-unit id="2ae38d43604dfa013aa8ee4959fcd61cbfc488ae" translate="yes" xml:space="preserve">
          <source>Indicate the type of content that should be returned by the server.</source>
          <target state="translated">サーバーが返すべきコンテンツの種類を示します。</target>
        </trans-unit>
        <trans-unit id="2a763d0e93c73448bd86c91b372947c88d47a418" translate="yes" xml:space="preserve">
          <source>Indicated whether JSON requests should be performed &quot;with credentials&quot; (cookies).</source>
          <target state="translated">JSONリクエストを「資格情報付き」(クッキー)で実行するかどうかを示しました。</target>
        </trans-unit>
        <trans-unit id="8b75f3bd4244116a0614819b622bc1e5f7f0d048" translate="yes" xml:space="preserve">
          <source>Indicates if APCu is supported.</source>
          <target state="translated">APCuがサポートされているかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="b609b93f002b1b303ac64c439e3805d4ce73a5d3" translate="yes" xml:space="preserve">
          <source>Indicates if a default model instance should be used.</source>
          <target state="translated">デフォルトのモデルインスタンスを使用するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="dfa33171d5ceabaf04509ff62bae5837e829ca47" translate="yes" xml:space="preserve">
          <source>Indicates if a loader has been registered.</source>
          <target state="translated">ローダが登録されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="15fa47fb192181b642e894e6fe76d4b50962320a" translate="yes" xml:space="preserve">
          <source>Indicates if a token user retrieval has been attempted.</source>
          <target state="translated">トークンユーザーの検索が試みられたかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="cb718ef70fef92bf120ffde300c81e490e1f0558" translate="yes" xml:space="preserve">
          <source>Indicates if all existing request query parameters should be added to pagination links.</source>
          <target state="translated">既存のすべてのリクエストクエリパラメータをページネーションリンクに追加すべきかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="ac55f3a642a77e844031c2e87682e8d4bf06452f" translate="yes" xml:space="preserve">
          <source>Indicates if all mass assignment is enabled.</source>
          <target state="translated">すべてのマスアサインが有効になっているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="8dc592b8177120b66cfff59fca8225fb1cb601b1" translate="yes" xml:space="preserve">
          <source>Indicates if changes have been made to the database.</source>
          <target state="translated">データベースに変更が加えられたかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="a76dad66d6fa3a9ad7ddb044c7fbd6f1d60ee922" translate="yes" xml:space="preserve">
          <source>Indicates if channel names and usernames should be linked.</source>
          <target state="translated">チャンネル名とユーザー名をリンクするかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="dc247c517304146a3d214cb451b872f24ce471a4" translate="yes" xml:space="preserve">
          <source>Indicates if component tags should be compiled.</source>
          <target state="translated">コンポーネントタグをコンパイルするかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="cc542ec4c7c7ffad005cee1757a452248c921031" translate="yes" xml:space="preserve">
          <source>Indicates if cookies should be serialized.</source>
          <target state="translated">クッキーをシリアル化するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="67a420a672e545baa9fc00cdd20e49a510ec9878" translate="yes" xml:space="preserve">
          <source>Indicates if loading of the provider is deferred.</source>
          <target state="translated">プロバイダの読み込みが延期されるかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="5841da76043aa9e63b02883f22fd8ad97dc10135" translate="yes" xml:space="preserve">
          <source>Indicates if messages should bubble up to other channels after being handled</source>
          <target state="translated">メッセージが処理された後に、他のチャンネルにメッセージがバブリングされるかどうかを示す</target>
        </trans-unit>
        <trans-unit id="fcc194793cca58bae58a76bd957768b37edff984" translate="yes" xml:space="preserve">
          <source>Indicates if reporting should stop after invoking this handler.</source>
          <target state="translated">このハンドラを呼び出した後に報告を停止するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="5d1855d85a525f5669e8b8706d039295eecffde8" translate="yes" xml:space="preserve">
          <source>Indicates if the API token is hashed in storage.</source>
          <target state="translated">API トークンがストレージでハッシュ化されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="819c4958958edfa0bbf7b31d90c4efb66287ebaf" translate="yes" xml:space="preserve">
          <source>Indicates if the Closure commands have been loaded.</source>
          <target state="translated">クロージャーコマンドがロードされているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="13b41f05162327c1cf5f7cf0d9922770a8a87777" translate="yes" xml:space="preserve">
          <source>Indicates if the IDs are auto-incrementing.</source>
          <target state="translated">ID が自動インクリメントされているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="7135809d359a24e84a441a0ae83db49705955e70" translate="yes" xml:space="preserve">
          <source>Indicates if the application has &quot;booted&quot;.</source>
          <target state="translated">アプリケーションが「起動」したかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="1d44b3cbe4d8057b9d243e8e40788a4cf6d8ae4e" translate="yes" xml:space="preserve">
          <source>Indicates if the application has been bootstrapped before.</source>
          <target state="translated">アプリケーションが以前にブートストラップされたことがあるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="340a34361513364fc424fffd24ff92b7bea9c047" translate="yes" xml:space="preserve">
          <source>Indicates if the application is running in the console.</source>
          <target state="translated">アプリケーションがコンソールで実行されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="9eb8b8a5862269bf4227f6af5653b861847edd72" translate="yes" xml:space="preserve">
          <source>Indicates if the command should not overlap itself.</source>
          <target state="translated">コマンド自体をオーバーラップさせてはいけないかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="58ac1184783289f0ac5debf2cd33efcd4921df34" translate="yes" xml:space="preserve">
          <source>Indicates if the command should only be allowed to run on one server for each cron expression.</source>
          <target state="translated">各cron式に対して、コマンドの実行を1つのサーバーでのみ許可するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="565f31d9388a1d02ca012e569ab58580cf4da075" translate="yes" xml:space="preserve">
          <source>Indicates if the command should run in background.</source>
          <target state="translated">コマンドをバックグラウンドで実行するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="8a4a1918ce4c55f26322059bd89ab12935d25c6f" translate="yes" xml:space="preserve">
          <source>Indicates if the command should run in maintenance mode.</source>
          <target state="translated">コマンドをメンテナンスモードで実行するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="a43b217aec07fa5a89ffee749c58eeff5c226dc2" translate="yes" xml:space="preserve">
          <source>Indicates if the connection is in a &quot;dry run&quot;.</source>
          <target state="translated">接続が「ドライラン」状態であるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="ed1fbdbb5048963f325bea6d681c41f3daa62eb4" translate="yes" xml:space="preserve">
          <source>Indicates if the console output should be mocked.</source>
          <target state="translated">コンソール出力をモックするかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="e695e026b018540bce1a901a66b2e9d6823b3347" translate="yes" xml:space="preserve">
          <source>Indicates if the factory is recording requests and responses.</source>
          <target state="translated">工場がリクエストとレスポンスを記録しているかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="403b48d11a6e5a77b0f2b63992d16ecaaccc834e" translate="yes" xml:space="preserve">
          <source>Indicates if the file is locked.</source>
          <target state="translated">ファイルがロックされているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="892dc9d8cd9b81d8991db91c318a4859a14b7083" translate="yes" xml:space="preserve">
          <source>Indicates if the job has been deleted.</source>
          <target state="translated">ジョブが削除されたかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="e20b6b5356745e78630f408c8ab27daf2954aa35" translate="yes" xml:space="preserve">
          <source>Indicates if the job has been released.</source>
          <target state="translated">ジョブが解放されたかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="9e68cbe84b56cd5b885475b54f4a63d5487d00ab" translate="yes" xml:space="preserve">
          <source>Indicates if the job has failed.</source>
          <target state="translated">ジョブが失敗したかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="d7559b3eda4d457fc4f106104bcb302bcc868010" translate="yes" xml:space="preserve">
          <source>Indicates if the job should be dispatched immediately after sending the response.</source>
          <target state="translated">応答を送信した後、すぐにジョブをディスパッチすべきかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="5b86e491eae66b5170e88ca91e0553f6dbb2a40e" translate="yes" xml:space="preserve">
          <source>Indicates if the job should be released if the limit is exceeded.</source>
          <target state="translated">制限を超えた場合にジョブを解放するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="3340d89ad8eb36d670dfa98adeff0595ca2a4f62" translate="yes" xml:space="preserve">
          <source>Indicates if the loader has been registered.</source>
          <target state="translated">ローダが登録されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="4ac0249fffae29d58d7b021bad38afd4078a3300" translate="yes" xml:space="preserve">
          <source>Indicates if the logout method has been called.</source>
          <target state="translated">ログアウトメソッドが呼び出されたかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="f367df1017ac91611daa45498899270bab608080" translate="yes" xml:space="preserve">
          <source>Indicates if the model exists.</source>
          <target state="translated">モデルが存在するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="bcf154256b9fd60f98c1d6a17ed80a897c61dc6e" translate="yes" xml:space="preserve">
          <source>Indicates if the model is currently force deleting.</source>
          <target state="translated">モデルが現在強制削除されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="b1b48fe4ab3d5c140c347e94e6a20510ed95bbb3" translate="yes" xml:space="preserve">
          <source>Indicates if the model should be timestamped.</source>
          <target state="translated">モデルにタイムスタンプが必要かどうかを示します。</target>
        </trans-unit>
        <trans-unit id="be575b0b97eb6a237dfc953b5230a095df6911dc" translate="yes" xml:space="preserve">
          <source>Indicates if the model was inserted during the current request lifecycle.</source>
          <target state="translated">現在のリクエストのライフサイクル中にモデルが挿入されたかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="52c8605087f21ee16ca99bcba7b76e22eb3ed92f" translate="yes" xml:space="preserve">
          <source>Indicates if the putenv adapter is enabled.</source>
          <target state="translated">putenv アダプタが有効かどうかを示します。</target>
        </trans-unit>
        <trans-unit id="29ff77e90fdbaa03314d41d8247ff07b803991b8" translate="yes" xml:space="preserve">
          <source>Indicates if the query returns distinct results.</source>
          <target state="translated">クエリが異なる結果を返すかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="b39233bce7ddbe2ade17f48712d40fa8471f265d" translate="yes" xml:space="preserve">
          <source>Indicates if the relation is adding constraints.</source>
          <target state="translated">関係が制約を追加しているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="a51ca035e76c480a09537be58c8a846b75f66450" translate="yes" xml:space="preserve">
          <source>Indicates if the session was handled for the current request.</source>
          <target state="translated">現在のリクエストに対してセッションが処理されたかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="162686c761b2e881cb137365290dc2683b4dc9d5" translate="yes" xml:space="preserve">
          <source>Indicates if the test database has been migrated.</source>
          <target state="translated">テストデータベースが移行されたかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="dec7d2d46b3099ffe3e897c5a889b0f16580d847" translate="yes" xml:space="preserve">
          <source>Indicates if the user should be &quot;remembered&quot;.</source>
          <target state="translated">ユーザーを「記憶」するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="3fb38195c439ccb852a08619e7d39677e98e564c" translate="yes" xml:space="preserve">
          <source>Indicates if the user was authenticated via a recaller cookie.</source>
          <target state="translated">ユーザーがリコールクッキーで認証されたかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="1854bf2fb3f390c4b98fdccfec02cffd2823ee95" translate="yes" xml:space="preserve">
          <source>Indicates if the validation callback failed.</source>
          <target state="translated">バリデーションコールバックが失敗したかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="f1a2b5f7ba4b36cda36543ac5b784fa1ab8bcc67" translate="yes" xml:space="preserve">
          <source>Indicates if the worker is paused.</source>
          <target state="translated">ワーカーが一時停止しているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="82e76773bd21735ae1e08b04f2e5b1496605c500" translate="yes" xml:space="preserve">
          <source>Indicates if the worker should exit.</source>
          <target state="translated">ワーカーが終了すべきかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="2ba3b3d7c679296cd6c7797bf4bc14db1850700f" translate="yes" xml:space="preserve">
          <source>Indicates if the worker should run in maintenance mode.</source>
          <target state="translated">ワーカーをメンテナンスモードで実行するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="80560e08b095aff8b7f03378d1b05fbc762cd0c1" translate="yes" xml:space="preserve">
          <source>Indicates if the worker should stop when queue is empty.</source>
          <target state="translated">キューが空の場合にワーカーを停止するかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="93b051ca49a10f714bc7748d070e9fcfa4881cb3" translate="yes" xml:space="preserve">
          <source>Indicates if timestamps are available on the pivot table.</source>
          <target state="translated">ピボットテーブルでタイムスタンプが利用可能かどうかを示します。</target>
        </trans-unit>
        <trans-unit id="6dd36391a6f5f4ec07bed551cfcd041b2d67d72a" translate="yes" xml:space="preserve">
          <source>Indicates if values are serialized within the store.</source>
          <target state="translated">値がストア内でシリアル化されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="866c5d8efaeab8573c7d32d672f3a420d05e9bb4" translate="yes" xml:space="preserve">
          <source>Indicates if we are connecting the inverse of the relation.</source>
          <target state="translated">関係の逆数を接続しているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="41a7bde03aecf02a5191da75c71e0eea0ebe796a" translate="yes" xml:space="preserve">
          <source>Indicates if we have made it through the base setUp function.</source>
          <target state="translated">基本的な setUp 関数を通過したかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="7f5c97f92fc127e78082913eefaac1bccb2654b6" translate="yes" xml:space="preserve">
          <source>Indicates if you want a preview of links inlined in the message.</source>
          <target state="translated">メッセージにインラインでリンクのプレビューを表示するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="452ec2ae5b8ed0872328b75cd150c60e7ef4df78" translate="yes" xml:space="preserve">
          <source>Indicates if you want a preview of links to media inlined in the message.</source>
          <target state="translated">メッセージにインライン化されたメディアへのリンクのプレビューを表示するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="2888d135a9ac5791f1ce6a18b7322a348e9d45ca" translate="yes" xml:space="preserve">
          <source>Indicates that invoking this sequence when it is empty should throw an exception.</source>
          <target state="translated">空の場合にこのシーケンスを呼び出すと例外が発生することを示します。</target>
        </trans-unit>
        <trans-unit id="7021f48ad1fdb91349daf79d434d2d24d98a5aee" translate="yes" xml:space="preserve">
          <source>Indicates that the content should not be displayed side-by-side with other fields.</source>
          <target state="translated">コンテンツを他のフィールドと並べて表示しないことを示します。</target>
        </trans-unit>
        <trans-unit id="44835b5829fb62a516331f4c5aebe6f7d823f97b" translate="yes" xml:space="preserve">
          <source>Indicates the maximum number of seconds the route should acquire a session lock for.</source>
          <target state="translated">ルートがセッションロックを取得する最大秒数を示す。</target>
        </trans-unit>
        <trans-unit id="0f8bf721db9b2d4e03ea72fe5eaf2e5f04528f10" translate="yes" xml:space="preserve">
          <source>Indicates the maximum number of seconds the route should wait while attempting to acquire a session lock.</source>
          <target state="translated">セッションロックの取得を試みる間、ルートが待機すべき最大秒数を示す。</target>
        </trans-unit>
        <trans-unit id="3a75d29baa4ca9045f6e2f61a052765c804d8e95" translate="yes" xml:space="preserve">
          <source>Indicates whether attributes are snake cased on arrays.</source>
          <target state="translated">属性が配列上でスネークケース化されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="021f1d172785ea703ad03e50deabaed4544bc566" translate="yes" xml:space="preserve">
          <source>Indicates whether cookies should be encrypted.</source>
          <target state="translated">クッキーを暗号化するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="a16faa3c1d6dacc090a913e7e789bc7418e94ba4" translate="yes" xml:space="preserve">
          <source>Indicates whether event dispatcher is set on connections.</source>
          <target state="translated">イベントディスパッチャがコネクションに設定されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="ff3d9cec077c7c930832e674bc382f06989ca453" translate="yes" xml:space="preserve">
          <source>Indicates whether output should be appended.</source>
          <target state="translated">出力を付加するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="3bddb38e25ccad4ba110959670b4967d79e93614" translate="yes" xml:space="preserve">
          <source>Indicates whether queries are being logged.</source>
          <target state="translated">クエリがログに記録されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="dd852f8da51b3c6a04e372f940d4a99086e687a6" translate="yes" xml:space="preserve">
          <source>Indicates whether redirects should be followed.</source>
          <target state="translated">リダイレクトに従うべきかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="39c92eca3ac205ae6a2b649a414032405ef1dc4d" translate="yes" xml:space="preserve">
          <source>Indicates whether row locking is being used.</source>
          <target state="translated">行ロックが使用されているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="cc0e78afad07d9f83d97fd67a5fe23eb02a7de8e" translate="yes" xml:space="preserve">
          <source>Indicates whether the XSRF-TOKEN cookie should be set on the response.</source>
          <target state="translated">XSRF-TOKENクッキーが応答に設定されるべきかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="2ec05d38d59abfcd0682bfe74d12cd0608a832c2" translate="yes" xml:space="preserve">
          <source>Indicates whether the command should be shown in the Artisan command list.</source>
          <target state="translated">Artisanコマンドリストにコマンドを表示するかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="ae697a9155e1429115ee9e96e14c6a57e5f18536" translate="yes" xml:space="preserve">
          <source>Indicates whether the response was allowed.</source>
          <target state="translated">応答が許可されたかどうかを示す。</target>
        </trans-unit>
        <trans-unit id="5e5d16fa9ab7dc7d8f3ad2f0b57dfcbf0993df52" translate="yes" xml:space="preserve">
          <source>Indicates whether the route is a fallback route.</source>
          <target state="translated">経路がフォールバック経路であるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="3153b46f7f7c8a145502271c8b1c6d361e0086f1" translate="yes" xml:space="preserve">
          <source>Indicates whether to perform an algorithm check.</source>
          <target state="translated">アルゴリズムチェックを行うかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="fd38d68253cb7dc7fc9c7701dedf10d7453ef61d" translate="yes" xml:space="preserve">
          <source>Indicates whether we are using Memcached version &amp;gt;= 3.0.0.</source>
          <target state="translated">Memcachedバージョン&amp;gt; = 3.0.0を使用しているかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="5a6bdab0c6db458e90545a059bae821391f2bc1c" translate="yes" xml:space="preserve">
          <source>Inflector</source>
          <target state="translated">Inflector</target>
        </trans-unit>
        <trans-unit id="9f7c854197e661a6800daddc6a8b6911d9a29a38" translate="yes" xml:space="preserve">
          <source>InfluxDB</source>
          <target state="translated">InfluxDB</target>
        </trans-unit>
        <trans-unit id="a9e84908272d623f45fae558d1c743f47b960f52" translate="yes" xml:space="preserve">
          <source>Informal discussion regarding bugs, new features, and implementation of existing features takes place in the &lt;code&gt;#internals&lt;/code&gt; channel of the &lt;a href=&quot;https://discordapp.com/invite/mPZNm7A&quot;&gt;Laravel Discord server&lt;/a&gt;. Taylor Otwell, the maintainer of Laravel, is typically present in the channel on weekdays from 8am-5pm (UTC-06:00 or America/Chicago), and sporadically present in the channel at other times.</source>
          <target state="translated">バグ、新機能、および既存の機能の実装に関する非公式の議論は、&lt;a href=&quot;https://discordapp.com/invite/mPZNm7A&quot;&gt;Laravel Discordサーバーの&lt;/a&gt; &lt;code&gt;#internals&lt;/code&gt; チャネルで行われます。LaravelのメンテナーであるTaylor Otwellは通常、平日の午前8時から午後5時（UTC-06：00またはアメリカ/シカゴ）にチャネルに存在し、他の時間にはチャネルに散発的に存在します。</target>
        </trans-unit>
        <trans-unit id="8385ff66d554caecf61d776861ff14ab31d43d19" translate="yes" xml:space="preserve">
          <source>Initialize and gather data for given attribute.</source>
          <target state="translated">与えられた属性のデータを初期化して収集します。</target>
        </trans-unit>
        <trans-unit id="92763003104ff1d8cbb8c24372263a0f19803de4" translate="yes" xml:space="preserve">
          <source>Initialize any initializable traits on the model.</source>
          <target state="translated">モデル上の初期化可能な形質をすべて初期化します。</target>
        </trans-unit>
        <trans-unit id="2c52da5df92e4ef81f1c65f96d2e742faafa8348" translate="yes" xml:space="preserve">
          <source>Initialize the relation on a set of models.</source>
          <target state="translated">モデルの集合に関係を初期化します。</target>
        </trans-unit>
        <trans-unit id="96a8678ebb7d7383a04e4ea619c1e4a1ba9d3083" translate="yes" xml:space="preserve">
          <source>Initialize the soft deleting trait for an instance.</source>
          <target state="translated">インスタンスのソフト削除形質を初期化します。</target>
        </trans-unit>
        <trans-unit id="1dfc4f26b2c8c5782cda7a79143f3cf06a563e03" translate="yes" xml:space="preserve">
          <source>Initiate a mock expectation on the facade.</source>
          <target state="translated">ファサードでの模擬期待を開始します。</target>
        </trans-unit>
        <trans-unit id="cd233f82131fbf7acdaa84d728be5291f4386bdd" translate="yes" xml:space="preserve">
          <source>Initiate a partial mock on the facade.</source>
          <target state="translated">ファサードの部分的なモックを開始します。</target>
        </trans-unit>
        <trans-unit id="731c60a23f2dec14bd1ae30968b39619a8efba83" translate="yes" xml:space="preserve">
          <source>Inject inline content into a section.</source>
          <target state="translated">セクションにインラインコンテンツを挿入します。</target>
        </trans-unit>
        <trans-unit id="2cd33da5ea0644ecad822cd6eeb2c97bc15a95bc" translate="yes" xml:space="preserve">
          <source>Injecting a publisher implementation into the method allows us to easily test the method in isolation since we can mock the injected publisher. However, it requires us to always pass a publisher instance each time we call the &lt;code&gt;publish&lt;/code&gt; method. Using real-time facades, we can maintain the same testability while not being required to explicitly pass a &lt;code&gt;Publisher&lt;/code&gt; instance. To generate a real-time facade, prefix the namespace of the imported class with &lt;code&gt;Facades&lt;/code&gt;:</source>
          <target state="translated">パブリッシャー実装をメソッドに注入すると、注入されたパブリッシャーを模擬できるため、メソッドを単独で簡単にテストできます。ただし、 &lt;code&gt;publish&lt;/code&gt; メソッドを呼び出すたびに、常にパブリッシャーインスタンスを渡す必要があります。リアルタイムのファサードを使用すると、 &lt;code&gt;Publisher&lt;/code&gt; インスタンスを明示的に渡す必要がなくても、同じテスト容易性を維持できます。リアルタイムのファサードを生成するには、インポートされたクラスの名前空間に &lt;code&gt;Facades&lt;/code&gt; というプレフィックスを付けます。</target>
        </trans-unit>
        <trans-unit id="d2860d2edae8411abdfa46d50321f29af97f5353" translate="yes" xml:space="preserve">
          <source>Inline Attachments</source>
          <target state="translated">インラインアタッチメント</target>
        </trans-unit>
        <trans-unit id="36a4601e59dc171b426449958f741d724bb73bda" translate="yes" xml:space="preserve">
          <source>Inline Checkout</source>
          <target state="translated">インラインチェックアウト</target>
        </trans-unit>
        <trans-unit id="c9402db94e5a66e761ad94ef127ef14bd9bb7904" translate="yes" xml:space="preserve">
          <source>Inline Checkout Without Pay Links</source>
          <target state="translated">有料リンクなしのインラインチェックアウト</target>
        </trans-unit>
        <trans-unit id="0b54bcc30ccf857e807d934b6a73a17ddab2549d" translate="yes" xml:space="preserve">
          <source>Inline Component Views</source>
          <target state="translated">インラインコンポーネントビュー</target>
        </trans-unit>
        <trans-unit id="c873c2bd8f9cfed52f04b4c27cf706523f809dab" translate="yes" xml:space="preserve">
          <source>Inner Join Clause</source>
          <target state="translated">インナージョイン節</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="d3c0b0a046955869eb5bc4ca617d5af2783792f2" translate="yes" xml:space="preserve">
          <source>Input (Support\Facades)</source>
          <target state="translated">入力(SupportFacades)</target>
        </trans-unit>
        <trans-unit id="ef6caaf1ffac65c55e3879237f23b9e4cd5b35fe" translate="yes" xml:space="preserve">
          <source>Input Arrays</source>
          <target state="translated">入力配列</target>
        </trans-unit>
        <trans-unit id="40c12599fca3ae01774b7e21ce28b44be9649a39" translate="yes" xml:space="preserve">
          <source>Input Descriptions</source>
          <target state="translated">入力の説明</target>
        </trans-unit>
        <trans-unit id="9406d091f0ebc551b72ab17d3bfc0d682fcdac2d" translate="yes" xml:space="preserve">
          <source>Input Trimming &amp;amp; Normalization</source>
          <target state="translated">入力のトリミングと正規化</target>
        </trans-unit>
        <trans-unit id="d1d256c1c254179d60f7fbc672a72f1269b8acec" translate="yes" xml:space="preserve">
          <source>Input::get()</source>
          <target state="translated">Input::get()</target>
        </trans-unit>
        <trans-unit id="b344d1376af5b9748c1d185628f25d6bd5a0d4c1" translate="yes" xml:space="preserve">
          <source>Input::getFacadeAccessor()</source>
          <target state="translated">Input::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="045c55dbf354c1b52c8c6faa021bac809f3caea8" translate="yes" xml:space="preserve">
          <source>InputArgument</source>
          <target state="translated">InputArgument</target>
        </trans-unit>
        <trans-unit id="78defe704adfd4c9b269b546b93b72acbfc14c61" translate="yes" xml:space="preserve">
          <source>InputDefinition</source>
          <target state="translated">InputDefinition</target>
        </trans-unit>
        <trans-unit id="19b5be82bdfcdb06329fa85529e8a15629e22c27" translate="yes" xml:space="preserve">
          <source>InputInterface</source>
          <target state="translated">InputInterface</target>
        </trans-unit>
        <trans-unit id="d893e20cecb319b7ceb0fa864838de1756cd03ae" translate="yes" xml:space="preserve">
          <source>InputInterface|null</source>
          <target state="translated">InputInterface|null</target>
        </trans-unit>
        <trans-unit id="48a7b2c749b08c7d5dddff2f201247dd77db5e7c" translate="yes" xml:space="preserve">
          <source>InputOption</source>
          <target state="translated">InputOption</target>
        </trans-unit>
        <trans-unit id="ee17e0b3e84879c29adf8278e863f21acbb03fb7" translate="yes" xml:space="preserve">
          <source>Insert a new record and get the value of the primary key.</source>
          <target state="translated">新しいレコードを挿入し、主キーの値を取得します。</target>
        </trans-unit>
        <trans-unit id="cf003bd6a0b82747f7a97a56acf1261baa054669" translate="yes" xml:space="preserve">
          <source>Insert a new record into the database.</source>
          <target state="translated">データベースに新しいレコードを挿入します。</target>
        </trans-unit>
        <trans-unit id="297b7f2701b357bd686e8180d8917d3c69c35069" translate="yes" xml:space="preserve">
          <source>Insert new records into the database while ignoring errors.</source>
          <target state="translated">エラーを無視して新しいレコードをデータベースに挿入します。</target>
        </trans-unit>
        <trans-unit id="262ca5f28fa5dcde617585afbd23937aad412a67" translate="yes" xml:space="preserve">
          <source>Insert new records into the database.</source>
          <target state="translated">新しいレコードをデータベースに挿入します。</target>
        </trans-unit>
        <trans-unit id="98679e10212e48196c959dcf393406d3d1409316" translate="yes" xml:space="preserve">
          <source>Insert new records into the table using a subquery.</source>
          <target state="translated">サブクエリを使用してテーブルに新しいレコードを挿入します。</target>
        </trans-unit>
        <trans-unit id="227801121e43773d99b501ef7a4f8a6ce387cf3d" translate="yes" xml:space="preserve">
          <source>Insert new records or update the existing ones.</source>
          <target state="translated">新しいレコードを挿入したり、既存のレコードを更新したりします。</target>
        </trans-unit>
        <trans-unit id="50e972838d08d5113447c0c6127a9b113adbf2e7" translate="yes" xml:space="preserve">
          <source>Insert or update a record matching the attributes, and fill it with values.</source>
          <target state="translated">属性に一致するレコードを挿入または更新し、値で埋めます。</target>
        </trans-unit>
        <trans-unit id="ccfb8a9bcad170de1a780c42634e84dcfa38cac8" translate="yes" xml:space="preserve">
          <source>Insert the given attributes and set the ID on the model.</source>
          <target state="translated">与えられた属性を挿入し、モデルにIDを設定します。</target>
        </trans-unit>
        <trans-unit id="6ff88f326f9f738ad51a90eb5bca1b7f4896d368" translate="yes" xml:space="preserve">
          <source>Inserting &amp;amp; Updating Models</source>
          <target state="translated">モデルの挿入と更新</target>
        </trans-unit>
        <trans-unit id="70c0b395778fb131601982dd08cbfec3005d2903" translate="yes" xml:space="preserve">
          <source>Inserting &amp;amp; Updating Related Models</source>
          <target state="translated">関連モデルの挿入と更新</target>
        </trans-unit>
        <trans-unit id="08711e711134e579523d56126b09874d8022e4b2" translate="yes" xml:space="preserve">
          <source>Inserts</source>
          <target state="translated">Inserts</target>
        </trans-unit>
        <trans-unit id="3808eba16022189d40950556dae74983790a0446" translate="yes" xml:space="preserve">
          <source>Inspect the user for the given ability.</source>
          <target state="translated">与えられた能力についてユーザーを検査します。</target>
        </trans-unit>
        <trans-unit id="0a37eb8e61d995bd56e6e7f437e03dcdc082d154" translate="yes" xml:space="preserve">
          <source>Inspecting Batches</source>
          <target state="translated">バッチの検査</target>
        </trans-unit>
        <trans-unit id="e5983c208eea9b024a512072f9c8e2a9b5712290" translate="yes" xml:space="preserve">
          <source>Inspecting Requests</source>
          <target state="translated">検査依頼</target>
        </trans-unit>
        <trans-unit id="6488d4279a5b8a7b44ee864228907e04a748e9bf" translate="yes" xml:space="preserve">
          <source>Inspecting The Current Route</source>
          <target state="translated">現在のルートの検査</target>
        </trans-unit>
        <trans-unit id="3276864f6fe0efa8acdac21d8b15d80f9e87c6f2" translate="yes" xml:space="preserve">
          <source>Inspiring</source>
          <target state="translated">Inspiring</target>
        </trans-unit>
        <trans-unit id="0ed5f53a38f523924ab9530f173e3c2a78e0e599" translate="yes" xml:space="preserve">
          <source>Inspiring (Foundation)</source>
          <target state="translated">インスピレーション(財団</target>
        </trans-unit>
        <trans-unit id="4af180ae9fa7cee9d0bec19dfab1c815898a7d16" translate="yes" xml:space="preserve">
          <source>Inspiring::quote()</source>
          <target state="translated">Inspiring::quote()</target>
        </trans-unit>
        <trans-unit id="9edfcb9dacd45979d43e5ae2bcfd057cbb4e66f0" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt;をインストールします。</target>
        </trans-unit>
        <trans-unit id="897c5a2a06cb8191603b3512b107f35b6db41731" translate="yes" xml:space="preserve">
          <source>Install PHP 7.2 using Homebrew via &lt;code&gt;brew install php@7.2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew install php@7.2&lt;/code&gt; からHomebrewを使用してPHP 7.2をインストールします。</target>
        </trans-unit>
        <trans-unit id="e2b148ca8dcab3453b29bbb12a882921d85a2cf9" translate="yes" xml:space="preserve">
          <source>Install PHP 7.4 using Homebrew via &lt;code&gt;brew install php&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew install php&lt;/code&gt; installphpを介してHomebrewを使用してPHP7.4をインストールします。</target>
        </trans-unit>
        <trans-unit id="baae91e6ded067391ed44172908a88d959d65d62" translate="yes" xml:space="preserve">
          <source>Install Valet with Composer via &lt;code&gt;composer global require laravel/valet&lt;/code&gt;. Make sure the &lt;code&gt;~/.composer/vendor/bin&lt;/code&gt; directory is in your system's &quot;PATH&quot;.</source>
          <target state="translated">&lt;code&gt;composer global require laravel/valet&lt;/code&gt; を使用してCompeterで Valetをインストールします。 &lt;code&gt;~/.composer/vendor/bin&lt;/code&gt; ディレクトリがシステムの「パス」にあることを確認してください。</target>
        </trans-unit>
        <trans-unit id="a3658a472e6a2a836171a10aac7e03a42549413d" translate="yes" xml:space="preserve">
          <source>Install or update &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; to the latest version using &lt;code&gt;brew update&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;brew update&lt;/code&gt; を使用して、&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;をインストールまたは最新バージョンに更新します。</target>
        </trans-unit>
        <trans-unit id="88e47fa1555bdc515ccf1fd2b810c438a10ce5ac" translate="yes" xml:space="preserve">
          <source>Install or update &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; to the latest version using &lt;code&gt;brew update&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://brew.sh/&quot;&gt;brewupdate&lt;/a&gt;を使用してHomebrewをインストールまたは最新バージョンに &lt;code&gt;brew update&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="d271bdec9cde71cbe43f164c7ddb9d0550bc38cd" translate="yes" xml:space="preserve">
          <source>Install the &quot;bootstrap&quot; preset.</source>
          <target state="translated">bootstrap」プリセットをインストールします。</target>
        </trans-unit>
        <trans-unit id="98530e0334027aab3e1335716bac94052c70a6d4" translate="yes" xml:space="preserve">
          <source>Install the &quot;fresh&quot; preset.</source>
          <target state="translated">フレッシュ」プリセットをインストールします。</target>
        </trans-unit>
        <trans-unit id="90d988b9f14832669437497e55ebfab2aed8258c" translate="yes" xml:space="preserve">
          <source>Install the &quot;react&quot; preset.</source>
          <target state="translated">react」プリセットをインストールします。</target>
        </trans-unit>
        <trans-unit id="8de358d119d672d2a6b3a389715ddf35b82a3fa1" translate="yes" xml:space="preserve">
          <source>Install the &quot;vue&quot; preset.</source>
          <target state="translated">vue」プリセットをインストールします。</target>
        </trans-unit>
        <trans-unit id="758df3820b1409a7d49229d6f0a11aba19f1661d" translate="yes" xml:space="preserve">
          <source>Install the preset.</source>
          <target state="translated">プリセットをインストールします。</target>
        </trans-unit>
        <trans-unit id="ed7eb98d2c806fc160d8c641965c8debdc638e79" translate="yes" xml:space="preserve">
          <source>InstallCommand</source>
          <target state="translated">InstallCommand</target>
        </trans-unit>
        <trans-unit id="eaaa29840cfff317f93a4a21104e061b53b536dd" translate="yes" xml:space="preserve">
          <source>InstallCommand (Database\Console\Migrations)</source>
          <target state="translated">InstallCommand (DatabaseConsoleMigrations)</target>
        </trans-unit>
        <trans-unit id="8cbadbb1ffc18db2915f926e682e2c52de7f4fa4" translate="yes" xml:space="preserve">
          <source>InstallCommand::__construct()</source>
          <target state="translated">InstallCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="93570189f4a930672844bb349f457f5f438b846e" translate="yes" xml:space="preserve">
          <source>InstallCommand::getOptions()</source>
          <target state="translated">InstallCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="8ba537ff9f686df0bd626acd9c77ebcf570ce612" translate="yes" xml:space="preserve">
          <source>InstallCommand::handle()</source>
          <target state="translated">InstallCommand::handle()</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="e83e28708cd23339caf94328691639920f4b9816" translate="yes" xml:space="preserve">
          <source>Installation &amp;amp; Setup</source>
          <target state="translated">インストールとセットアップ</target>
        </trans-unit>
        <trans-unit id="13f00d4e2b6347fad203982cbfeab54d37ad1dfd" translate="yes" xml:space="preserve">
          <source>Installing Elasticsearch</source>
          <target state="translated">Elasticsearchのインストール</target>
        </trans-unit>
        <trans-unit id="0bfa14f4b8bb5440b71e8d6c87064732f4a5ccf1" translate="yes" xml:space="preserve">
          <source>Installing Homestead</source>
          <target state="translated">ホームステッドの設置</target>
        </trans-unit>
        <trans-unit id="64ae52712817ec555dcde4692af98c6962ca70e6" translate="yes" xml:space="preserve">
          <source>Installing Laravel</source>
          <target state="translated">Laravelのインストール</target>
        </trans-unit>
        <trans-unit id="92f85750e91e1b17bed4e411bbc85a55d250619f" translate="yes" xml:space="preserve">
          <source>Installing Laravel Echo</source>
          <target state="translated">Laravel Echoのインストール</target>
        </trans-unit>
        <trans-unit id="7361d7112d92cc8976242d28b36ebef58b7add8f" translate="yes" xml:space="preserve">
          <source>Installing MariaDB</source>
          <target state="translated">ストレージMariaDB</target>
        </trans-unit>
        <trans-unit id="eda82d53eddeff2d648d07ceb4266a4e684fe260" translate="yes" xml:space="preserve">
          <source>Installing MongoDB</source>
          <target state="translated">ストレージMongoDB</target>
        </trans-unit>
        <trans-unit id="deb001a86942aeba7d26c68a380d364500e8d27e" translate="yes" xml:space="preserve">
          <source>Installing Neo4j</source>
          <target state="translated">Neo4jに乗り込む</target>
        </trans-unit>
        <trans-unit id="9217fb1d718bb6a45f35f2a0995df763f527da1d" translate="yes" xml:space="preserve">
          <source>Installing Node</source>
          <target state="translated">ノードのインストール</target>
        </trans-unit>
        <trans-unit id="c3b5987a300323f29bb4ffba34dbfd72fbf82d1b" translate="yes" xml:space="preserve">
          <source>Installing Only In Specific Environments</source>
          <target state="translated">特定の環境にのみインストールする</target>
        </trans-unit>
        <trans-unit id="11bedb6544071b050d446fce665ed79b2ebff04f" translate="yes" xml:space="preserve">
          <source>Installing Optional Features</source>
          <target state="translated">オプション機能のインストール</target>
        </trans-unit>
        <trans-unit id="c3bbd5ce7f2ed13063a18f9155f09df015ea1778" translate="yes" xml:space="preserve">
          <source>Installing Supervisor</source>
          <target state="translated">設置監督者</target>
        </trans-unit>
        <trans-unit id="26ba2154d7b533aa06082e0b156589a890aa12a7" translate="yes" xml:space="preserve">
          <source>Installing The Homestead Vagrant Box</source>
          <target state="translated">ホームステッドバグラントボックスの設置</target>
        </trans-unit>
        <trans-unit id="92031ea5329a0f43fcf6765ee6a0b2618ae67f5c" translate="yes" xml:space="preserve">
          <source>Instantiate a concrete instance of the given type.</source>
          <target state="translated">与えられた型の具体的なインスタンスをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="75c80a720b39c9b0a8a6daf3895f3ad30a49307f" translate="yes" xml:space="preserve">
          <source>Instantiate a new BelongsTo relationship.</source>
          <target state="translated">新しい BelongsTo リレーションシップをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="f20826ede7ae47f03b2958c81da787cab9263534" translate="yes" xml:space="preserve">
          <source>Instantiate a new BelongsToMany relationship.</source>
          <target state="translated">新しい BelongsToMany リレーションシップのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="d292543bf2dc2542c50e47ba20184fad0edf804c" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasMany relationship.</source>
          <target state="translated">新しい HasMany リレーションシップをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="04310e3b0a45c18875ca066d3438566b004d7ddf" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasManyThrough relationship.</source>
          <target state="translated">新しい HasManyThrough リレーションシップをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="efb0896947b903f9d945640014d35ff9ae44a3de" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasOne relationship.</source>
          <target state="translated">新しい HasOne リレーションシップをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="ab7cdddede4ec14d97b7e31bcbcd3983630c2f87" translate="yes" xml:space="preserve">
          <source>Instantiate a new HasOneThrough relationship.</source>
          <target state="translated">新しい HasOneThrough リレーションシップをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="3c6019933a04df3f4946f4f9bcccbdb43cf8b6f6" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphMany relationship.</source>
          <target state="translated">新しいMorphManyリレーションシップをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="709ee4400d2ae67167319bd5751a90075fd6de15" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphOne relationship.</source>
          <target state="translated">新しい MorphOne リレーションシップのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="4e8a430610207b9750f9e9cb6a3e267e59f9b883" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphTo relationship.</source>
          <target state="translated">新しい MorphTo リレーションシップをインスタンス化します。</target>
        </trans-unit>
        <trans-unit id="39391c1d9aa4c0c53005fcf35a8c8725d55d220a" translate="yes" xml:space="preserve">
          <source>Instantiate a new MorphToMany relationship.</source>
          <target state="translated">新しい MorphToMany リレーションシップのインスタンスを作成します。</target>
        </trans-unit>
        <trans-unit id="47b79289794345ba4fa3810cd704a80a169d4323" translate="yes" xml:space="preserve">
          <source>Instead of attaching the custom cast to your model, you may alternatively attach a class that implements the &lt;code&gt;Illuminate\Contracts\Database\Eloquent\Castable&lt;/code&gt; interface:</source>
          <target state="translated">カスタムキャストをモデルにアタッチする代わりに、 &lt;code&gt;Illuminate\Contracts\Database\Eloquent\Castable&lt;/code&gt; インターフェイスを実装するクラスをアタッチすることもできます。</target>
        </trans-unit>
        <trans-unit id="94ba07cf74cc844a0d76d9937c196e2a4f9cf358" translate="yes" xml:space="preserve">
          <source>Instead of defining all of your request handling logic as Closures in route files, you may wish to organize this behavior using Controller classes. Controllers can group related request handling logic into a single class. Controllers are stored in the &lt;code&gt;app/Http/Controllers&lt;/code&gt; directory.</source>
          <target state="translated">すべてのリクエスト処理ロジックをルートファイルのクロージャとして定義する代わりに、コントローラクラスを使用してこの動作を整理したい場合があります。コントローラは、関連するリクエスト処理ロジックを単一のクラスにグループ化できます。コントローラは &lt;code&gt;app/Http/Controllers&lt;/code&gt; ディレクトリに保存されます。</target>
        </trans-unit>
        <trans-unit id="13c0dfbcf0ca21de4be6416c023fc8a2a9761fee" translate="yes" xml:space="preserve">
          <source>Instead of defining the &quot;lines&quot; of text in the notification class, you may use the &lt;code&gt;view&lt;/code&gt; method to specify a custom template that should be used to render the notification email:</source>
          <target state="translated">通知クラスでテキストの「行」を定義する代わりに、 &lt;code&gt;view&lt;/code&gt; メソッドを使用して、通知メールのレンダリングに使用するカスタムテンプレートを指定できます。</target>
        </trans-unit>
        <trans-unit id="f223cf54b8d7c9ffb137ce8246e723910f3817b5" translate="yes" xml:space="preserve">
          <source>Instead of dispatching a job class to the queue, you may also dispatch a Closure. This is great for quick, simple tasks that need to be executed outside of the current request cycle. When dispatching Closures to the queue, the Closure's code contents is cryptographically signed so it can not be modified in transit:</source>
          <target state="translated">ジョブクラスをキューにディスパッチする代わりに、Closure をディスパッチすることもできます。これは、現在のリクエストサイクルの外で実行される必要がある、迅速でシンプルなタスクに最適です。キューにClosureをディスパッチする際、Closureのコード内容は暗号化されているので、 トランジット中に変更されることはありません。</target>
        </trans-unit>
        <trans-unit id="af79ac5efb4e2e09724e7e36f8803ada1471b731" translate="yes" xml:space="preserve">
          <source>Instead of displaying &lt;code&gt;cc&lt;/code&gt; as the payment type value, you may specify a custom value representation in your &lt;code&gt;validation&lt;/code&gt; language file by defining a &lt;code&gt;values&lt;/code&gt; array:</source>
          <target state="translated">支払いタイプの値として &lt;code&gt;cc&lt;/code&gt; を表示する代わりに、 &lt;code&gt;values&lt;/code&gt; 配列を定義することにより、 &lt;code&gt;validation&lt;/code&gt; 言語ファイルでカスタム値表現を指定できます。</target>
        </trans-unit>
        <trans-unit id="c681102d82ec52c3e6e46654ded18822fde36a5b" translate="yes" xml:space="preserve">
          <source>Instead of installing Homestead globally and sharing the same Homestead box across all of your projects, you may instead configure a Homestead instance for each project you manage. Installing Homestead per project may be beneficial if you wish to ship a &lt;code&gt;Vagrantfile&lt;/code&gt; with your project, allowing others working on the project to &lt;code&gt;vagrant up&lt;/code&gt;.</source>
          <target state="translated">ホームステッドをグローバルにインストールし、すべてのプロジェクトで同じホームステッドボックスを共有する代わりに、管理するプロジェクトごとにホームステッドインスタンスを構成できます。あなたが出荷したい場合は、プロジェクトごとにホームステッドをインストールすることは有益かもしれ &lt;code&gt;Vagrantfile&lt;/code&gt; をプロジェクトに取り組んで他の人がすることができ、あなたのプロジェクトに &lt;code&gt;vagrant up&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40b3e22c17968dc8fa7933cee6b779c453a6030a" translate="yes" xml:space="preserve">
          <source>Instead of making a lot of &lt;code&gt;instanceof&lt;/code&gt; checks in your &lt;code&gt;report&lt;/code&gt; method, consider using &lt;a href=&quot;errors#renderable-exceptions&quot;&gt;reportable exceptions&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;report&lt;/code&gt; メソッドで多くの &lt;code&gt;instanceof&lt;/code&gt; チェックを行う代わりに、レポート&lt;a href=&quot;errors#renderable-exceptions&quot;&gt;可能な例外の&lt;/a&gt;使用を検討してください</target>
        </trans-unit>
        <trans-unit id="72f785d06b7a55498354dbf97344b3f977312b83" translate="yes" xml:space="preserve">
          <source>Instead of manually registering model policies, Laravel can auto-discover policies as long as the model and policy follow standard Laravel naming conventions. Specifically, the policies must be in a &lt;code&gt;Policies&lt;/code&gt; directory at or above the directory that contains your models. So, for example, the models may be placed in the &lt;code&gt;app/Models&lt;/code&gt; directory while the policies may be placed in the &lt;code&gt;app/Policies&lt;/code&gt; directory. In this situation, Laravel will check for policies in &lt;code&gt;app/Models/Policies&lt;/code&gt; then &lt;code&gt;app/Policies&lt;/code&gt;. In addition, the policy name must match the model name and have a &lt;code&gt;Policy&lt;/code&gt; suffix. So, a &lt;code&gt;User&lt;/code&gt; model would correspond to a &lt;code&gt;UserPolicy&lt;/code&gt; class.</source>
          <target state="translated">モデルポリシーを手動で登録する代わりに、モデルとポリシーが標準のLaravel命名規則に従っている限り、Laravelはポリシーを自動検出できます。具体的には、ポリシーは、モデルを含むディレクトリ以上の &lt;code&gt;Policies&lt;/code&gt; ディレクトリにある必要があります。したがって、たとえば、モデルは &lt;code&gt;app/Models&lt;/code&gt; ディレクトリに配置され、 &lt;code&gt;app/Policies&lt;/code&gt; はapp / Policiesディレクトリに配置される場合があります。この状況では、Laravelは &lt;code&gt;app/Models/Policies&lt;/code&gt; でポリシーをチェックし、次に &lt;code&gt;app/Policies&lt;/code&gt; でチェックします。さらに、ポリシー名はモデル名と一致し、 &lt;code&gt;Policy&lt;/code&gt; サフィックスが付いている必要があります。したがって、 &lt;code&gt;User&lt;/code&gt; モデルは &lt;code&gt;UserPolicy&lt;/code&gt; クラスに対応します。</target>
        </trans-unit>
        <trans-unit id="9db8eeaccf9e7233eec61739837cc4c16b29de39" translate="yes" xml:space="preserve">
          <source>Instead of only accepting strings, Laravel's URL generator now accepts &quot;callable&quot; syntax when generating URLs to controller actions:</source>
          <target state="translated">LaravelのURLジェネレーターは文字列のみを受け入れるのではなく、コントローラアクションへのURLを生成する際に &quot;callable &quot;構文を受け入れるようになりました。</target>
        </trans-unit>
        <trans-unit id="492ef4fa69b0adf6f5bd706a4bef393088c79576" translate="yes" xml:space="preserve">
          <source>Instead of passing a date string to be evaluated by &lt;code&gt;strtotime&lt;/code&gt;, you may specify another field to compare against the date:</source>
          <target state="translated">&lt;code&gt;strtotime&lt;/code&gt; によって評価される日付文字列を渡す代わりに、日付と比較する別のフィールドを指定できます。</target>
        </trans-unit>
        <trans-unit id="ed7af8f449d6b1f9413ef7ac09d52f941afc462c" translate="yes" xml:space="preserve">
          <source>Instead of passing a string &lt;code&gt;key&lt;/code&gt;, you may pass a callback. The callback should return the value you wish to key the group by:</source>
          <target state="translated">文字列 &lt;code&gt;key&lt;/code&gt; を渡す代わりに、コールバックを渡すことができます。コールバックは、グループにキーを設定したい値を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="921bd5ff3bb7fd43d6168504132ad69fd27a7b40" translate="yes" xml:space="preserve">
          <source>Instead of passing an array of possible polymorphic models, you may provide &lt;code&gt;*&lt;/code&gt; as a wildcard and let Laravel retrieve all the possible polymorphic types from the database. Laravel will execute an additional query in order to perform this operation:</source>
          <target state="translated">可能なポリモーフィックモデルの配列を渡す代わりに、ワイルドカードとして &lt;code&gt;*&lt;/code&gt; を指定し、Laravelにデータベースからすべての可能なポリモーフィックタイプを取得させることができます。Laravelは、この操作を実行するために追加のクエリを実行します。</target>
        </trans-unit>
        <trans-unit id="2816a56652e49c0cecf9d66d6498649b8f7f45d7" translate="yes" xml:space="preserve">
          <source>Instead of passing the model key's value to the &lt;code&gt;ignore&lt;/code&gt; method, you may pass the entire model instance. Laravel will automatically extract the key from the model:</source>
          <target state="translated">モデルキーの値を &lt;code&gt;ignore&lt;/code&gt; メソッドに渡す代わりに、モデルインスタンス全体を渡すことができます。Laravelはモデルからキーを自動的に抽出します：</target>
        </trans-unit>
        <trans-unit id="c7b678e7d561f60816bae1b72d917cfb815fd8fa" translate="yes" xml:space="preserve">
          <source>Instead of passing the number of minutes as an integer, you may also pass a &lt;code&gt;DateTime&lt;/code&gt; instance representing the expiration time of the cached item:</source>
          <target state="translated">分数を整数として渡す代わりに、キャッシュされたアイテムの有効期限を表す &lt;code&gt;DateTime&lt;/code&gt; インスタンスを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="ddfb176da9311325c3e091a13cc3951c720f462b" translate="yes" xml:space="preserve">
          <source>Instead of passing the number of seconds as an integer, you may also pass a &lt;code&gt;DateTime&lt;/code&gt; instance representing the expiration time of the cached item:</source>
          <target state="translated">秒数を整数として渡す代わりに、キャッシュされたアイテムの有効期限を表す &lt;code&gt;DateTime&lt;/code&gt; インスタンスを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="f1f65ccd66e7b9e15241cd72a550601c12e75e3e" translate="yes" xml:space="preserve">
          <source>Instead of passing the raw contents of a file, you may also pass a stream resource:</source>
          <target state="translated">ファイルの生の内容を渡す代わりに、ストリームリソースを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="05bbe87bcf0171303a45fae2a95003eba96be99a" translate="yes" xml:space="preserve">
          <source>Instead of rate limiting in the handle method, we could define a job middleware that handles rate limiting. Laravel does not have a default location for job middleware, so you are welcome to place job middleware anywhere in your application. In this example, we will place the middleware in a &lt;code&gt;app/Jobs/Middleware&lt;/code&gt; directory:</source>
          <target state="translated">handleメソッドでレート制限を行う代わりに、レート制限を処理するジョブミドルウェアを定義できます。 Laravelにはジョブミドルウェアのデフォルトの場所がないため、アプリケーションのどこにでもジョブミドルウェアを配置できます。この例では、ミドルウェアを &lt;code&gt;app/Jobs/Middleware&lt;/code&gt; ディレクトリに配置します。</target>
        </trans-unit>
        <trans-unit id="d76f1c763308e82bbf3581ba430589e159a67123" translate="yes" xml:space="preserve">
          <source>Instead of registering events and listeners manually in the &lt;code&gt;$listen&lt;/code&gt; array of the &lt;code&gt;EventServiceProvider&lt;/code&gt;, you can enable automatic event discovery. When event discovery is enabled, Laravel will automatically find and register your events and listeners by scanning your application's &lt;code&gt;Listeners&lt;/code&gt; directory. In addition, any explicitly defined events listed in the &lt;code&gt;EventServiceProvider&lt;/code&gt; will still be registered.</source>
          <target state="translated">&lt;code&gt;EventServiceProvider&lt;/code&gt; の &lt;code&gt;$listen&lt;/code&gt; 配列にイベントとリスナーを手動で登録する代わりに、自動イベント検出を有効にすることができます。イベント検出が有効になっている場合、Laravelはアプリケーションの &lt;code&gt;Listeners&lt;/code&gt; ディレクトリをスキャンすることにより、イベントとリスナーを自動的に検出して登録します。さらに、 &lt;code&gt;EventServiceProvider&lt;/code&gt; にリストされている明示的に定義されたイベントは引き続き登録されます。</target>
        </trans-unit>
        <trans-unit id="8ad2c28990210c7ce94ec9d92d28b9782d4d4ff9" translate="yes" xml:space="preserve">
          <source>Instead of sending your emails, the &lt;code&gt;log&lt;/code&gt; mail driver will write all email messages to your log files for inspection. For more information on configuring your application per environment, check out the &lt;a href=&quot;configuration#environment-configuration&quot;&gt;configuration documentation&lt;/a&gt;.</source>
          <target state="translated">電子メールを送信する代わりに、 &lt;code&gt;log&lt;/code&gt; メールドライバーは、すべての電子メールメッセージを検査のためにログファイルに書き込みます。環境ごとにアプリケーションを構成する方法の詳細については、&lt;a href=&quot;configuration#environment-configuration&quot;&gt;構成のドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="977c7f9bd00c7a8fc96527669b40b1c3f0d415b8" translate="yes" xml:space="preserve">
          <source>Instead of specifying the table name directly, you may specify the Eloquent model which should be used to determine the table name:</source>
          <target state="translated">テーブル名を直接指定するのではなく、テーブル名を決定するために使用するべきEloquentモデルを指定することができます。</target>
        </trans-unit>
        <trans-unit id="cf9b28a3a0bf189f42cde36d317300e64f8504b3" translate="yes" xml:space="preserve">
          <source>Instead of type-checking exceptions in the exception handler's &lt;code&gt;report&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt; methods, you may define &lt;code&gt;report&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt; methods directly on your custom exception. When these methods exist, they will be called automatically by the framework:</source>
          <target state="translated">例外ハンドラの &lt;code&gt;report&lt;/code&gt; と &lt;code&gt;render&lt;/code&gt; メソッドで例外を型チェックする代わりに、カスタム例外で &lt;code&gt;report&lt;/code&gt; と &lt;code&gt;render&lt;/code&gt; メソッドを直接定義できます。これらのメソッドが存在する場合、それらはフレームワークによって自動的に呼び出されます。</target>
        </trans-unit>
        <trans-unit id="03665fb2772aac633f1ec77619f8364479cac6ff" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;?&lt;/code&gt; to represent your parameter bindings, you may execute a query using named bindings:</source>
          <target state="translated">代わりに &lt;code&gt;?&lt;/code&gt; パラメータバインディングを表すには、名前付きバインディングを使用してクエリを実行します。</target>
        </trans-unit>
        <trans-unit id="f67a280274c72a307542b65147dba2392db2fcb9" translate="yes" xml:space="preserve">
          <source>Instead of using &lt;code&gt;DB::raw&lt;/code&gt;, you may also use the following methods to insert a raw expression into various parts of your query.</source>
          <target state="translated">&lt;code&gt;DB::raw&lt;/code&gt; を使用する代わりに、次のメソッドを使用して、生の式をクエリのさまざまな部分に挿入することもできます。</target>
        </trans-unit>
        <trans-unit id="2b25f639a775c6930564fb8527f1d02a34809356" translate="yes" xml:space="preserve">
          <source>Instead of using custom event classes, you may register Closures that execute when various model events are fired. Typically, you should register these Closures in the &lt;code&gt;booted&lt;/code&gt; method of your model:</source>
          <target state="translated">カスタムイベントクラスを使用する代わりに、さまざまなモデルイベントが発生したときに実行されるクロージャを登録できます。通常、これらのクロージャをモデルの &lt;code&gt;booted&lt;/code&gt; メソッドに登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="9982e67ac1fba2a43f5d6bed781b76a1c353a6dc" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;code&gt;count&lt;/code&gt; method to determine if any records exist that match your query's constraints, you may use the &lt;code&gt;exists&lt;/code&gt; and &lt;code&gt;doesntExist&lt;/code&gt; methods:</source>
          <target state="translated">代わりに使用しての &lt;code&gt;count&lt;/code&gt; すべてのレコードはそれがあなたのクエリの制約に一致が存在する場合は、あなたが使用することを決定するための方法を &lt;code&gt;exists&lt;/code&gt; と &lt;code&gt;doesntExist&lt;/code&gt; 方法を：</target>
        </trans-unit>
        <trans-unit id="e01ac035cbd4692a740131fc6136bafd24e6918a" translate="yes" xml:space="preserve">
          <source>Instead, the &lt;code&gt;Cache&lt;/code&gt; facade extends the base &lt;code&gt;Facade&lt;/code&gt; class and defines the method &lt;code&gt;getFacadeAccessor()&lt;/code&gt;. This method's job is to return the name of a service container binding. When a user references any static method on the &lt;code&gt;Cache&lt;/code&gt; facade, Laravel resolves the &lt;code&gt;cache&lt;/code&gt; binding from the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; and runs the requested method (in this case, &lt;code&gt;get&lt;/code&gt;) against that object.</source>
          <target state="translated">代わりに、 &lt;code&gt;Cache&lt;/code&gt; ファサードは基本 &lt;code&gt;Facade&lt;/code&gt; クラスを拡張し、メソッド &lt;code&gt;getFacadeAccessor()&lt;/code&gt; を定義します。このメソッドの仕事は、サービスコンテナーバインディングの名前を返すことです。ユーザーが &lt;code&gt;Cache&lt;/code&gt; ファサードの静的メソッドを参照すると、Laravel は&lt;a href=&quot;container&quot;&gt;サービスコンテナー&lt;/a&gt;からの &lt;code&gt;cache&lt;/code&gt; バインディングを解決し、そのオブジェクトに対して要求されたメソッド（この場合は &lt;code&gt;get&lt;/code&gt; ）を実行します。</target>
        </trans-unit>
        <trans-unit id="6adf9e98e6f59fb3faf8a3ed9eb86a39bf448ce6" translate="yes" xml:space="preserve">
          <source>Instead, you may use the &quot;input&quot; method.</source>
          <target state="translated">その代わりに、「入力」という方法を使っても良いでしょう。</target>
        </trans-unit>
        <trans-unit id="5533fd2ae269ffec5ff40e8ec9c81ff86a38ca11" translate="yes" xml:space="preserve">
          <source>Interacting With Elements</source>
          <target state="translated">要素との相互作用</target>
        </trans-unit>
        <trans-unit id="258ed0ea001125d961292c47b027c771144fc53c" translate="yes" xml:space="preserve">
          <source>Interacting With Redis</source>
          <target state="translated">Redis との対話</target>
        </trans-unit>
        <trans-unit id="05edba8c3cc401f5ff4c56bcc50d0490d590b443" translate="yes" xml:space="preserve">
          <source>Interacting With Time</source>
          <target state="translated">時間との対話</target>
        </trans-unit>
        <trans-unit id="5208ad1ae3a6eb5c915999d32887c6bc6529ad5d" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication</source>
          <target state="translated">InteractsWithAuthentication</target>
        </trans-unit>
        <trans-unit id="6d94284d4887b51a9672a05997291a172ace0291" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication (Foundation\Testing)</source>
          <target state="translated">InteractsWithAuthentication (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="ce1de8824fa15e1882856b6d1c4c0b1ee2bfdb3b" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::actingAs()</source>
          <target state="translated">InteractsWithAuthentication::actingAs()</target>
        </trans-unit>
        <trans-unit id="0a2669864c8d4f934006ac3a97b186f4bc9578bb" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertAuthenticated()</source>
          <target state="translated">InteractsWithAuthentication::assertAuthenticated()</target>
        </trans-unit>
        <trans-unit id="325e29554aa61008ac1d9dfb13468a8e8994c3f8" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertAuthenticatedAs()</source>
          <target state="translated">InteractsWithAuthentication::assertAuthenticatedAs()</target>
        </trans-unit>
        <trans-unit id="1a43b091763948cefb3d9f5bce6654c6fd70146f" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertCredentials()</source>
          <target state="translated">InteractsWithAuthentication::assertCredentials()</target>
        </trans-unit>
        <trans-unit id="faf3466b39f295c01e8fee1845c21a6f18b283ae" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertGuest()</source>
          <target state="translated">InteractsWithAuthentication::assertGuest()</target>
        </trans-unit>
        <trans-unit id="e2c7d59a8e739196af1be67906cb6fa49d9297d9" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::assertInvalidCredentials()</source>
          <target state="translated">InteractsWithAuthentication::assertInvalidCredentials()</target>
        </trans-unit>
        <trans-unit id="8df71f5670b0cee46b7885c100f5340d620167e1" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::be()</source>
          <target state="translated">InteractsWithAuthentication::be()</target>
        </trans-unit>
        <trans-unit id="0d8675af6e539ca0f61415badf937b0c05fef720" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::hasCredentials()</source>
          <target state="translated">InteractsWithAuthentication::hasCredentials()</target>
        </trans-unit>
        <trans-unit id="f658503c0ee5d9afa4729786ada2b02f002b41ea" translate="yes" xml:space="preserve">
          <source>InteractsWithAuthentication::isAuthenticated()</source>
          <target state="translated">InteractsWithAuthentication::isAuthenticated()</target>
        </trans-unit>
        <trans-unit id="cf06743b45cf13ca0f6324368c091fec2b61bec7" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole</source>
          <target state="translated">InteractsWithConsole</target>
        </trans-unit>
        <trans-unit id="b9f380e5d35557dbe6d97090e49cd4df031bf8e5" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole (Foundation\Testing)</source>
          <target state="translated">InteractsWithConsole (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="51a8d361533ad412d5751a909037e242959c5ffb" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole::artisan()</source>
          <target state="translated">InteractsWithConsole::artisan()</target>
        </trans-unit>
        <trans-unit id="4a007c45602238484bcd15423fe0ec41bc05e1f4" translate="yes" xml:space="preserve">
          <source>InteractsWithConsole::withoutMockingConsoleOutput()</source>
          <target state="translated">InteractsWithConsole::withoutMockingConsoleOutput()</target>
        </trans-unit>
        <trans-unit id="0553e525a501d376bacf32ae252947a23901d1b2" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer</source>
          <target state="translated">InteractsWithContainer</target>
        </trans-unit>
        <trans-unit id="2744897d02d5707a563d26fb6faf5ad08c9830c9" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer (Foundation\Testing)</source>
          <target state="translated">InteractsWithContainer (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="2e44662ab68bcd5700164d4ef9339b5bbc1e7ad3" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::instance()</source>
          <target state="translated">InteractsWithContainer::instance()</target>
        </trans-unit>
        <trans-unit id="0b22da1f910f3234c2e90753fccaef7ba5fdb3c1" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::mock()</source>
          <target state="translated">InteractsWithContainer::mock()</target>
        </trans-unit>
        <trans-unit id="15e959b180902ecf0c8ae2fe9777cf05a05a55fb" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::partialMock()</source>
          <target state="translated">InteractsWithContainer::partialMock()</target>
        </trans-unit>
        <trans-unit id="9a8cb25a166f4eb5a6ddcbe9da82c41636010347" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::spy()</source>
          <target state="translated">InteractsWithContainer::spy()</target>
        </trans-unit>
        <trans-unit id="7364aa9dc5ebcd1f0b61b11e0666f946ab45b3fb" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::swap()</source>
          <target state="translated">InteractsWithContainer::swap()</target>
        </trans-unit>
        <trans-unit id="e0287fe8b49faf077261de99bf1dd435b5f89360" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::withMix()</source>
          <target state="translated">InteractsWithContainer::withMix()</target>
        </trans-unit>
        <trans-unit id="23e3b523dc8fdffe87b5c5aa8a769950b6ee51ec" translate="yes" xml:space="preserve">
          <source>InteractsWithContainer::withoutMix()</source>
          <target state="translated">InteractsWithContainer::withoutMix()</target>
        </trans-unit>
        <trans-unit id="1e8035c63d3e1f3bddddc4c9dd961c40af546557" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes</source>
          <target state="translated">InteractsWithContentTypes</target>
        </trans-unit>
        <trans-unit id="f2e322961c0fddd4adc98fb01ded7c5d5933819a" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes (Http\Concerns)</source>
          <target state="translated">InteractsWithContentTypes (HttpConcerns)</target>
        </trans-unit>
        <trans-unit id="e4626a5ddaf18becc01b1fb69694e465693801ac" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::accepts()</source>
          <target state="translated">InteractsWithContentTypes::accepts()</target>
        </trans-unit>
        <trans-unit id="9e78a798924c325bb1bb35d18bc84e2214cdf83b" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::acceptsAnyContentType()</source>
          <target state="translated">InteractsWithContentTypes::acceptsAnyContentType()</target>
        </trans-unit>
        <trans-unit id="6796bf7bb73ca93d7bd36c885ff042bb22f10aa4" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::acceptsHtml()</source>
          <target state="translated">InteractsWithContentTypes::acceptsHtml()</target>
        </trans-unit>
        <trans-unit id="6c2dc9846006d2bace893a049e5f5b17f687352c" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::acceptsJson()</source>
          <target state="translated">InteractsWithContentTypes::acceptsJson()</target>
        </trans-unit>
        <trans-unit id="28e530f140eb07023ca924bf42b8f14cae775d4c" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::expectsJson()</source>
          <target state="translated">InteractsWithContentTypes::expectsJson()</target>
        </trans-unit>
        <trans-unit id="714aa83d1e896b9e23aaa8024c8be222f75fe4c9" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::format()</source>
          <target state="translated">InteractsWithContentTypes::format()</target>
        </trans-unit>
        <trans-unit id="e8db62bc5d03cb76eec4d2bb2458043b7b802a44" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::isJson()</source>
          <target state="translated">InteractsWithContentTypes::isJson()</target>
        </trans-unit>
        <trans-unit id="d68c62868bcea6ffb20ad2175a7607c0c7fe9c33" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::matchesType()</source>
          <target state="translated">InteractsWithContentTypes::matchesType()</target>
        </trans-unit>
        <trans-unit id="61eaf943e5142d2727a5a5c62628a4d00df54011" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::prefers()</source>
          <target state="translated">InteractsWithContentTypes::prefers()</target>
        </trans-unit>
        <trans-unit id="015b74944c9f7b8450404de9bd3c1c7f9a398423" translate="yes" xml:space="preserve">
          <source>InteractsWithContentTypes::wantsJson()</source>
          <target state="translated">InteractsWithContentTypes::wantsJson()</target>
        </trans-unit>
        <trans-unit id="45b8626a21b1d5db76ad9a494a5da34b1af60768" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase</source>
          <target state="translated">InteractsWithDatabase</target>
        </trans-unit>
        <trans-unit id="867d7a167db93df852e4c82db44a29773861ac1b" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase (Foundation\Testing)</source>
          <target state="translated">InteractsWithDatabase (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="0c4de7869b15f8577ab1205bffcfda5ffb73b890" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertDatabaseCount()</source>
          <target state="translated">InteractsWithDatabase::assertDatabaseCount()</target>
        </trans-unit>
        <trans-unit id="d785d0f07b90d59c1b84c44d98ab2a89fa545485" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertDatabaseHas()</source>
          <target state="translated">InteractsWithDatabase::assertDatabaseHas()</target>
        </trans-unit>
        <trans-unit id="57aac12ce263bb81dd014966f6154ee9ffbfb135" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertDatabaseMissing()</source>
          <target state="translated">InteractsWithDatabase::assertDatabaseMissing()</target>
        </trans-unit>
        <trans-unit id="9c8a6bed94f3647946a3a839a484a1ac6d5c78e8" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertDeleted()</source>
          <target state="translated">InteractsWithDatabase::assertDeleted()</target>
        </trans-unit>
        <trans-unit id="6e3d741c6059a5786b731bbcfa5280d232a7b09c" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::assertSoftDeleted()</source>
          <target state="translated">InteractsWithDatabase::assertSoftDeleted()</target>
        </trans-unit>
        <trans-unit id="8507c2948cd3c9927e1c43065f158afa2fb9cb37" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::castAsJson()</source>
          <target state="translated">InteractsWithDatabase::castAsJson()</target>
        </trans-unit>
        <trans-unit id="7aa2f7a6193a6e26b9e57fa2ec27a245bd2a3b5e" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::getConnection()</source>
          <target state="translated">InteractsWithDatabase::getConnection()</target>
        </trans-unit>
        <trans-unit id="8551aa5eb7e9387196088d394b42abb335739400" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::isSoftDeletableModel()</source>
          <target state="translated">InteractsWithDatabase::isSoftDeletableModel()</target>
        </trans-unit>
        <trans-unit id="324c284d734adefdf43568804d0039d65c201029" translate="yes" xml:space="preserve">
          <source>InteractsWithDatabase::seed()</source>
          <target state="translated">InteractsWithDatabase::seed()</target>
        </trans-unit>
        <trans-unit id="4e7aa7f89ad581019b8a2acfb6671ba5acd3c5e4" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling</source>
          <target state="translated">InteractsWithExceptionHandling</target>
        </trans-unit>
        <trans-unit id="ea98e9adf4ee61d770dd042f8585f4f0ec18451e" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling (Foundation\Testing)</source>
          <target state="translated">InteractsWithExceptionHandling (Foundation)</target>
        </trans-unit>
        <trans-unit id="1415481f21a1bb96af0a173e8d9528abfa793edf" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::__construct()</source>
          <target state="translated">InteractsWithExceptionHandling::__construct()</target>
        </trans-unit>
        <trans-unit id="95029dafefd16a8ca00665ea9967216eca5b7703" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::handleExceptions()</source>
          <target state="translated">InteractsWithExceptionHandling::handleExceptions()</target>
        </trans-unit>
        <trans-unit id="57e6124d91d03c29571ca0822da133ed3b75e9de" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::handleValidationExceptions()</source>
          <target state="translated">InteractsWithExceptionHandling::handleValidationExceptions()</target>
        </trans-unit>
        <trans-unit id="7cfa9e6d3be667cd88edd9c6b2a1da6b65ff4565" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::render()</source>
          <target state="translated">InteractsWithExceptionHandling::render()</target>
        </trans-unit>
        <trans-unit id="ae34255541abe1fbe03d2215ec5d9298c58324b7" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::renderForConsole()</source>
          <target state="translated">InteractsWithExceptionHandling::renderForConsole()</target>
        </trans-unit>
        <trans-unit id="9f8d9e48d64fe578d8a514d506ee1afe10bc4703" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::report()</source>
          <target state="translated">InteractsWithExceptionHandling::report()</target>
        </trans-unit>
        <trans-unit id="f2e2a83720679c332b3ba5e6d445fa1520fb08c6" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::shouldReport()</source>
          <target state="translated">InteractsWithExceptionHandling::shouldReport()</target>
        </trans-unit>
        <trans-unit id="991a1a1845a448adc2fd585af4570e92b0aa8857" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::withExceptionHandling()</source>
          <target state="translated">InteractsWithExceptionHandling::withExceptionHandling()</target>
        </trans-unit>
        <trans-unit id="f7814cd711adb8372c5aedea71b2cb41b50b74b1" translate="yes" xml:space="preserve">
          <source>InteractsWithExceptionHandling::withoutExceptionHandling()</source>
          <target state="translated">InteractsWithExceptionHandling::withoutExceptionHandling()</target>
        </trans-unit>
        <trans-unit id="200bb9607e1b595f81ca7a117d1666123dcddfc0" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData</source>
          <target state="translated">InteractsWithFlashData</target>
        </trans-unit>
        <trans-unit id="236415ccc7a831fbb02081d7abf8486c2ef2b562" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData (Http\Concerns)</source>
          <target state="translated">InteractsWithFlashData (HttpConcerns)</target>
        </trans-unit>
        <trans-unit id="859bb18b919dc4284f1dfe187f78e06e3dc5b177" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flash()</source>
          <target state="translated">InteractsWithFlashData::flash()</target>
        </trans-unit>
        <trans-unit id="3829138af66cd2c09f5e42dccf603e50e3719c9e" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flashExcept()</source>
          <target state="translated">InteractsWithFlashData::flashExcept()</target>
        </trans-unit>
        <trans-unit id="8f0734d0caa0dd27c5692ab8922cc86d189552eb" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flashOnly()</source>
          <target state="translated">InteractsWithFlashData::flashOnly()</target>
        </trans-unit>
        <trans-unit id="7952382948560d3fc2b32810f0c2dd577658ea80" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::flush()</source>
          <target state="translated">InteractsWithFlashData::flush()</target>
        </trans-unit>
        <trans-unit id="7b2fb03ae708848d96feb2ec27ed3e6f13cb0992" translate="yes" xml:space="preserve">
          <source>InteractsWithFlashData::old()</source>
          <target state="translated">InteractsWithFlashData::old()</target>
        </trans-unit>
        <trans-unit id="be689f1c02cc59c377d5fb0d6c85824772e262c6" translate="yes" xml:space="preserve">
          <source>InteractsWithIO</source>
          <target state="translated">InteractsWithIO</target>
        </trans-unit>
        <trans-unit id="8cf597c033641dfbbc0435cc8741ecd303fd5dc3" translate="yes" xml:space="preserve">
          <source>InteractsWithIO (Console\Concerns)</source>
          <target state="translated">InteractsWithIO (ConsoleConcerns)</target>
        </trans-unit>
        <trans-unit id="5b05540d961d951a64abc40f244996633199dab5" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::alert()</source>
          <target state="translated">InteractsWithIO::alert()</target>
        </trans-unit>
        <trans-unit id="8bd3a00fa1dd117457181d79ca90b40ad61b3976" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::anticipate()</source>
          <target state="translated">InteractsWithIO::anticipate()</target>
        </trans-unit>
        <trans-unit id="1f3bcefbe8700c5ef551db76fa881bdce6dbf670" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::argument()</source>
          <target state="translated">InteractsWithIO::argument()</target>
        </trans-unit>
        <trans-unit id="512745f89d4ec4c3a8d8865209b6893d1cb2da46" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::arguments()</source>
          <target state="translated">InteractsWithIO::arguments()</target>
        </trans-unit>
        <trans-unit id="315feb0d4eef07e07fa6c4052dca1311771f2a99" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::ask()</source>
          <target state="translated">InteractsWithIO::ask()</target>
        </trans-unit>
        <trans-unit id="b3128db58ca1ed8f6ef37a2f464d646b08d83b86" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::askWithCompletion()</source>
          <target state="translated">InteractsWithIO::askWithCompletion()</target>
        </trans-unit>
        <trans-unit id="dd49090c982d7f983356ed2296399eeaa37c9f72" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::choice()</source>
          <target state="translated">InteractsWithIO::choice()</target>
        </trans-unit>
        <trans-unit id="f023b9f1713f0e8871aa11a1fb74843332ada307" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::comment()</source>
          <target state="translated">InteractsWithIO::comment()</target>
        </trans-unit>
        <trans-unit id="0369f427e6ee4fadce105c6ffde28cb89446d747" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::confirm()</source>
          <target state="translated">InteractsWithIO::confirm()</target>
        </trans-unit>
        <trans-unit id="0ec026382943e9d8ebd1393652abcf5dac15b374" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::error()</source>
          <target state="translated">InteractsWithIO::error()</target>
        </trans-unit>
        <trans-unit id="c441b18717f642678fcdd46e32ae2b1405afd785" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::getOutput()</source>
          <target state="translated">InteractsWithIO::getOutput()</target>
        </trans-unit>
        <trans-unit id="5c9aaaaabc29cc09d6d8a108df1b507f085a5406" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::hasArgument()</source>
          <target state="translated">InteractsWithIO::hasArgument()</target>
        </trans-unit>
        <trans-unit id="9cd8ea0e65cb5c5c99dbd5966b08251ebc0c1e31" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::hasOption()</source>
          <target state="translated">InteractsWithIO::hasOption()</target>
        </trans-unit>
        <trans-unit id="1fec64539f2269c2ed900b800332aee7be5b5783" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::info()</source>
          <target state="translated">InteractsWithIO::info()</target>
        </trans-unit>
        <trans-unit id="64078c3a5c4275befb9723cc8c4dedc405c132e9" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::line()</source>
          <target state="translated">InteractsWithIO::line()</target>
        </trans-unit>
        <trans-unit id="bbd046f3da1f636f0d37de1b3b5ccebd552f4f4c" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::newLine()</source>
          <target state="translated">InteractsWithIO::newLine()</target>
        </trans-unit>
        <trans-unit id="164bc2e3acd2a3b011ba006907c7227dbd7ff49e" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::option()</source>
          <target state="translated">InteractsWithIO::option()</target>
        </trans-unit>
        <trans-unit id="d996803b72fa9ee6523c0c7b551b84f42f65acfa" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::options()</source>
          <target state="translated">InteractsWithIO::options()</target>
        </trans-unit>
        <trans-unit id="93c94dd982bff186425ca5e32d969f1475a3bf2f" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::parseVerbosity()</source>
          <target state="translated">InteractsWithIO::parseVerbosity()</target>
        </trans-unit>
        <trans-unit id="b9be4a0dd9f03c0181b38244ae7f6e94ecff4d60" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::question()</source>
          <target state="translated">InteractsWithIO::question()</target>
        </trans-unit>
        <trans-unit id="0e529b767bdead422a4dc6af2e791efe3d24ff54" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::secret()</source>
          <target state="translated">InteractsWithIO::secret()</target>
        </trans-unit>
        <trans-unit id="f711ee75d9afc0619054cb0cdb7a6869635a7a88" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::setInput()</source>
          <target state="translated">InteractsWithIO::setInput()</target>
        </trans-unit>
        <trans-unit id="eb995bbb36ea1e362086f02b5377e316e041fb51" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::setOutput()</source>
          <target state="translated">InteractsWithIO::setOutput()</target>
        </trans-unit>
        <trans-unit id="7862d9369fa5056f48a5e79b3871cd1ba6893261" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::setVerbosity()</source>
          <target state="translated">InteractsWithIO::setVerbosity()</target>
        </trans-unit>
        <trans-unit id="61073ab28dc6bc014207dc844475eab1eae81a4a" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::table()</source>
          <target state="translated">InteractsWithIO::table()</target>
        </trans-unit>
        <trans-unit id="c0bd41b7c075ad831fe85ed2e7d05f6891647fa0" translate="yes" xml:space="preserve">
          <source>InteractsWithIO::warn()</source>
          <target state="translated">InteractsWithIO::warn()</target>
        </trans-unit>
        <trans-unit id="3463848544c69e1747e10b9b4c31355df449ba4b" translate="yes" xml:space="preserve">
          <source>InteractsWithInput</source>
          <target state="translated">InteractsWithInput</target>
        </trans-unit>
        <trans-unit id="7cb32b43d7f37c300510da227ecba616e1ad0773" translate="yes" xml:space="preserve">
          <source>InteractsWithInput (Http\Concerns)</source>
          <target state="translated">InteractsWithInput (HttpConcerns)</target>
        </trans-unit>
        <trans-unit id="9666a7bd318ea73aca3c0daf660534dafdbfe030" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::all()</source>
          <target state="translated">InteractsWithInput::all()</target>
        </trans-unit>
        <trans-unit id="e8457a8e693abcbff2ea66090e004b2452d67f18" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::allFiles()</source>
          <target state="translated">InteractsWithInput::allFiles()</target>
        </trans-unit>
        <trans-unit id="7f045e3517ad1788a7eccc682e261817e664e7b3" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::anyFilled()</source>
          <target state="translated">InteractsWithInput::anyFilled()</target>
        </trans-unit>
        <trans-unit id="b9ef067b0b4ec2403f4c79d27812d091c64b1273" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::bearerToken()</source>
          <target state="translated">InteractsWithInput::bearerToken()</target>
        </trans-unit>
        <trans-unit id="7f47639e69dff380f30fd16761abf8ff4c0ff366" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::boolean()</source>
          <target state="translated">InteractsWithInput::boolean()</target>
        </trans-unit>
        <trans-unit id="a50d73880de79e05f481c087b31e155c86a12a83" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::convertUploadedFiles()</source>
          <target state="translated">InteractsWithInput::convertUploadedFiles()</target>
        </trans-unit>
        <trans-unit id="d5a5cc0587af8396444a6dd68b8840bc7082f08e" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::cookie()</source>
          <target state="translated">InteractsWithInput::cookie()</target>
        </trans-unit>
        <trans-unit id="8e741c4f47d98a9a9801f0c57a17c5a9b9c79567" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::except()</source>
          <target state="translated">InteractsWithInput::except()</target>
        </trans-unit>
        <trans-unit id="ade098659d30325d4f925bf7052cc6ddb02a0689" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::exists()</source>
          <target state="translated">InteractsWithInput::exists()</target>
        </trans-unit>
        <trans-unit id="e355d6e906282b31de998efb4d146b3ba3224b21" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::file()</source>
          <target state="translated">InteractsWithInput::file()</target>
        </trans-unit>
        <trans-unit id="cb225b01fd7a4f99ebb0e4c454ccc20e608d5072" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::filled()</source>
          <target state="translated">InteractsWithInput::filled()</target>
        </trans-unit>
        <trans-unit id="62a51d357ae9417facc8506040a28b12ebfd0caf" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::has()</source>
          <target state="translated">InteractsWithInput::has()</target>
        </trans-unit>
        <trans-unit id="6825f0fdfae8451d3e83f1614736513aa6247955" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasAny()</source>
          <target state="translated">InteractsWithInput::hasAny()</target>
        </trans-unit>
        <trans-unit id="bacffccdfb15ede1fbb9c560d0301ea45e45f317" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasCookie()</source>
          <target state="translated">InteractsWithInput::hasCookie()</target>
        </trans-unit>
        <trans-unit id="bcd63b9309ed3d47619479d06479907bf29718f0" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasFile()</source>
          <target state="translated">InteractsWithInput::hasFile()</target>
        </trans-unit>
        <trans-unit id="75d636800a02c27f17db3e8df72750c9f4e2041c" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::hasHeader()</source>
          <target state="translated">InteractsWithInput::hasHeader()</target>
        </trans-unit>
        <trans-unit id="083d7c766efeb282de04a0567be4ecac92f48c29" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::header()</source>
          <target state="translated">InteractsWithInput::header()</target>
        </trans-unit>
        <trans-unit id="899ef68aea5b384b7bf533c7d536d72076d5a615" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::input()</source>
          <target state="translated">InteractsWithInput::input()</target>
        </trans-unit>
        <trans-unit id="23a2d64fdde65488235c0c953b5f302d566f1cd3" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::isEmptyString()</source>
          <target state="translated">InteractsWithInput::isEmptyString()</target>
        </trans-unit>
        <trans-unit id="285a05e26a2fce2813e8203ba7630f1d2825c1d8" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::isNotFilled()</source>
          <target state="translated">InteractsWithInput::isNotFilled()</target>
        </trans-unit>
        <trans-unit id="c0be9a60df6cc5e111810deb08933efc57d4a94f" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::isValidFile()</source>
          <target state="translated">InteractsWithInput::isValidFile()</target>
        </trans-unit>
        <trans-unit id="d8ff77c91b05931fe13aea92e2260c2e9963d143" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::keys()</source>
          <target state="translated">InteractsWithInput::keys()</target>
        </trans-unit>
        <trans-unit id="8da353b31951ce4fc580bc0df6f97c06f77a2753" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::missing()</source>
          <target state="translated">InteractsWithInput::missing()</target>
        </trans-unit>
        <trans-unit id="61c0587b0cdcc8bfaf248f7b6090ceafb8628b20" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::only()</source>
          <target state="translated">InteractsWithInput::only()</target>
        </trans-unit>
        <trans-unit id="38e06ffc03b31aa16baa778feefcc797ec9677ec" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::post()</source>
          <target state="translated">InteractsWithInput::post()</target>
        </trans-unit>
        <trans-unit id="ba837406d9d4e732845bd52204ccc2866104b1c8" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::query()</source>
          <target state="translated">InteractsWithInput::query()</target>
        </trans-unit>
        <trans-unit id="9efa439cf5ad5e3cb3583adbfec8cebd574c6ced" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::retrieveItem()</source>
          <target state="translated">InteractsWithInput::retrieveItem()</target>
        </trans-unit>
        <trans-unit id="bb2f1dd6ca79a16b6c01d5cdcd22c29095691ed1" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::server()</source>
          <target state="translated">InteractsWithInput::server()</target>
        </trans-unit>
        <trans-unit id="073580d618375af772a2be3dac6748f31f53ae13" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::whenFilled()</source>
          <target state="translated">InteractsWithInput::whenFilled()</target>
        </trans-unit>
        <trans-unit id="0272b4d6df5816ccd6815f0d22795d55359a6ef9" translate="yes" xml:space="preserve">
          <source>InteractsWithInput::whenHas()</source>
          <target state="translated">InteractsWithInput::whenHas()</target>
        </trans-unit>
        <trans-unit id="a6ab49c106e83b3fa9a946dd5900d43d36e5c5f3" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable</source>
          <target state="translated">InteractsWithPivotTable</target>
        </trans-unit>
        <trans-unit id="5798305ed6dda3ceb15d1c999a90eaf498c20595" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable (Database\Eloquent\Relations)</source>
          <target state="translated">InteractsWithPivotTable (Database\Eloquent\Relations)</target>
        </trans-unit>
        <trans-unit id="7b36e26f4336d8b972896d026d025a60b8f499b1" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::addTimestampsToAttachment()</source>
          <target state="translated">InteractsWithPivotTable::addTimestampsToAttachment()</target>
        </trans-unit>
        <trans-unit id="f7f699f34fa616ec4b7e81464122a1175054569c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::attach()</source>
          <target state="translated">InteractsWithPivotTable::attach()</target>
        </trans-unit>
        <trans-unit id="d67e2ac5839b243f0ae128af5d7c25aad8f2ab03" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::attachNew()</source>
          <target state="translated">InteractsWithPivotTable::attachNew()</target>
        </trans-unit>
        <trans-unit id="cdd7e7d9bcd566ba77144b4c0a8b71a7efff070f" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::attachUsingCustomClass()</source>
          <target state="translated">InteractsWithPivotTable::attachUsingCustomClass()</target>
        </trans-unit>
        <trans-unit id="f4f26273b6e7bc1d096e5bb8f4b7397341e76414" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::baseAttachRecord()</source>
          <target state="translated">InteractsWithPivotTable::baseAttachRecord()</target>
        </trans-unit>
        <trans-unit id="c8e9372d6da03717b537b263b4cd5ed96ad8f832" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::castAttributes()</source>
          <target state="translated">InteractsWithPivotTable::castAttributes()</target>
        </trans-unit>
        <trans-unit id="22802fbb55338a716ef550369e5007bcd46381fb" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::castKey()</source>
          <target state="translated">InteractsWithPivotTable::castKey()</target>
        </trans-unit>
        <trans-unit id="b74a43fad64ba458c09e7c2c2dbf75a4b7f74ba3" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::castKeys()</source>
          <target state="translated">InteractsWithPivotTable::castKeys()</target>
        </trans-unit>
        <trans-unit id="597d11a2cf4296de5dd1df0a12792b244fa80357" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::detach()</source>
          <target state="translated">InteractsWithPivotTable::detach()</target>
        </trans-unit>
        <trans-unit id="2a6784a75e5b091d436f2841556258e926d41972" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::detachUsingCustomClass()</source>
          <target state="translated">InteractsWithPivotTable::detachUsingCustomClass()</target>
        </trans-unit>
        <trans-unit id="1aa62238767c15485b2979d4cbce2697bcdd318a" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::extractAttachIdAndAttributes()</source>
          <target state="translated">InteractsWithPivotTable::extractAttachIdAndAttributes()</target>
        </trans-unit>
        <trans-unit id="68d734f44d35844a5c084da95f93d6d703eeeb4c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::formatAttachRecord()</source>
          <target state="translated">InteractsWithPivotTable::formatAttachRecord()</target>
        </trans-unit>
        <trans-unit id="63f15c83241780b5466ad2cd1cc53d13d73df7c1" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::formatAttachRecords()</source>
          <target state="translated">InteractsWithPivotTable::formatAttachRecords()</target>
        </trans-unit>
        <trans-unit id="471f4f4c7a1e5229f4a0e25add23c2301b1e8b1d" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::formatRecordsList()</source>
          <target state="translated">InteractsWithPivotTable::formatRecordsList()</target>
        </trans-unit>
        <trans-unit id="bba1c63b32f43de97f6303282cdadc3544d78d96" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::getCurrentlyAttachedPivots()</source>
          <target state="translated">InteractsWithPivotTable::getCurrentlyAttachedPivots()</target>
        </trans-unit>
        <trans-unit id="37a98c579e872841756ea0a9df62c95f730b6952" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::getTypeSwapValue()</source>
          <target state="translated">InteractsWithPivotTable::getTypeSwapValue()</target>
        </trans-unit>
        <trans-unit id="ba0324a3e971977075e4b1f54a754c822c62acab" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::hasPivotColumn()</source>
          <target state="translated">InteractsWithPivotTable::hasPivotColumn()</target>
        </trans-unit>
        <trans-unit id="ce2c590f6ff3736aad0db15a8ad9b4206089ff4f" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newExistingPivot()</source>
          <target state="translated">InteractsWithPivotTable::newExistingPivot()</target>
        </trans-unit>
        <trans-unit id="7799a328f9cbced0158c3dbe79eec1f4ddb24ade" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivot()</source>
          <target state="translated">InteractsWithPivotTable::newPivot()</target>
        </trans-unit>
        <trans-unit id="380d306d13455c9bb41c0c9aca35fcfeb56bb0fc" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivotQuery()</source>
          <target state="translated">InteractsWithPivotTable::newPivotQuery()</target>
        </trans-unit>
        <trans-unit id="81ac6ae23bde5770e15092ca7a04979931a142f5" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivotStatement()</source>
          <target state="translated">InteractsWithPivotTable::newPivotStatement()</target>
        </trans-unit>
        <trans-unit id="6f6adb044422d9b20f18680a853176c591ed6a0d" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::newPivotStatementForId()</source>
          <target state="translated">InteractsWithPivotTable::newPivotStatementForId()</target>
        </trans-unit>
        <trans-unit id="23807fe2755f90f43fbd8d00998bf61a043ab19b" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::parseId()</source>
          <target state="translated">InteractsWithPivotTable::parseId()</target>
        </trans-unit>
        <trans-unit id="a73c1e55edaf18e9cf53c4a153a9b282ff297faa" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::parseIds()</source>
          <target state="translated">InteractsWithPivotTable::parseIds()</target>
        </trans-unit>
        <trans-unit id="c6167fcb905959462f7b272923d86c925524c2a4" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::sync()</source>
          <target state="translated">InteractsWithPivotTable::sync()</target>
        </trans-unit>
        <trans-unit id="c70231c1c7021414349ad0dae2589a0388ece35c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::syncWithoutDetaching()</source>
          <target state="translated">InteractsWithPivotTable::syncWithoutDetaching()</target>
        </trans-unit>
        <trans-unit id="a5359081c2408c266952a3c0aeff541a2d45395a" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::toggle()</source>
          <target state="translated">InteractsWithPivotTable::toggle()</target>
        </trans-unit>
        <trans-unit id="8cf0085a3571b2f4e08ab404dd835633a267d51c" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::updateExistingPivot()</source>
          <target state="translated">InteractsWithPivotTable::updateExistingPivot()</target>
        </trans-unit>
        <trans-unit id="2a402db926dfc8799bbe68ad079036dfaf8115bb" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::updateExistingPivotUsingCustomClass()</source>
          <target state="translated">InteractsWithPivotTable::updateExistingPivotUsingCustomClass()</target>
        </trans-unit>
        <trans-unit id="585d435754610a4cf48673b14a011803bcb98cc3" translate="yes" xml:space="preserve">
          <source>InteractsWithPivotTable::withPivot()</source>
          <target state="translated">InteractsWithPivotTable::withPivot()</target>
        </trans-unit>
        <trans-unit id="a6561cccf999a06bd2c6d2f3d72f1f25ecb2b586" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue</source>
          <target state="translated">InteractsWithQueue</target>
        </trans-unit>
        <trans-unit id="cf7882e33f9e31307d033ba6a60b8e7ea313bc5a" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue (Queue)</source>
          <target state="translated">InteractsWithQueue</target>
        </trans-unit>
        <trans-unit id="2dd5c728457dd966f4fd40b0291d0ba939d9c5bb" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::attempts()</source>
          <target state="translated">InteractsWithQueue::attempts()</target>
        </trans-unit>
        <trans-unit id="d82bf59d95627835cd0f227fb3463165a3d4ee06" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::delete()</source>
          <target state="translated">InteractsWithQueue::delete()</target>
        </trans-unit>
        <trans-unit id="f107c0f298cc7732c769b671d7fdde042adefb28" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::fail()</source>
          <target state="translated">InteractsWithQueue::fail()</target>
        </trans-unit>
        <trans-unit id="5e92fe3e1ad8a6df3b55fa8e1823e4a1f3b4e1cd" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::release()</source>
          <target state="translated">InteractsWithQueue::release()</target>
        </trans-unit>
        <trans-unit id="04058e5f34567f025485692a30ff822efb94fae3" translate="yes" xml:space="preserve">
          <source>InteractsWithQueue::setJob()</source>
          <target state="translated">InteractsWithQueue::setJob()</target>
        </trans-unit>
        <trans-unit id="075f4c562c9acff361fcc7636cf7c63ac22e5d7d" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis</source>
          <target state="translated">InteractsWithRedis</target>
        </trans-unit>
        <trans-unit id="aa384a6e5877cb2948541657386166ba84f5910b" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis (Foundation\Testing)</source>
          <target state="translated">InteractsWithRedis (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="64087781479700075d3bdf2d29650734401351b5" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::ifRedisAvailable()</source>
          <target state="translated">InteractsWithRedis::ifRedisAvailable()</target>
        </trans-unit>
        <trans-unit id="5b02061e017e9d0c6dda3045ac939b9529ab59a7" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::redisDriverProvider()</source>
          <target state="translated">InteractsWithRedis::redisDriverProvider()</target>
        </trans-unit>
        <trans-unit id="82e3bebdc2360ceeabecaf2233f17e7a78544a73" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::setUpRedis()</source>
          <target state="translated">InteractsWithRedis::setUpRedis()</target>
        </trans-unit>
        <trans-unit id="700250ca509439e5624d6ada5a9e37a033a1f671" translate="yes" xml:space="preserve">
          <source>InteractsWithRedis::tearDownRedis()</source>
          <target state="translated">InteractsWithRedis::tearDownRedis()</target>
        </trans-unit>
        <trans-unit id="cef32600894f63811db7a9816f8ea7584e7a3701" translate="yes" xml:space="preserve">
          <source>InteractsWithSession</source>
          <target state="translated">InteractsWithSession</target>
        </trans-unit>
        <trans-unit id="e98f049902312ae4ad0f011ee0aebb475dd4d364" translate="yes" xml:space="preserve">
          <source>InteractsWithSession (Foundation\Testing)</source>
          <target state="translated">InteractsWithSession (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="98a2598d3e81ccd79603ac9d917d6be35a89605c" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::flushSession()</source>
          <target state="translated">InteractsWithSession::flushSession()</target>
        </trans-unit>
        <trans-unit id="daef403552d186720fe905310c6cc0b2fa17ce5d" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::session()</source>
          <target state="translated">InteractsWithSession::session()</target>
        </trans-unit>
        <trans-unit id="e1e4856c50049eaf1f01a49f606cfd80b6d9add7" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::startSession()</source>
          <target state="translated">InteractsWithSession::startSession()</target>
        </trans-unit>
        <trans-unit id="e510f678f68c26a0d56ccc3caca720196efe5b4e" translate="yes" xml:space="preserve">
          <source>InteractsWithSession::withSession()</source>
          <target state="translated">InteractsWithSession::withSession()</target>
        </trans-unit>
        <trans-unit id="515a3a2edfbce6087a33ece40bde4373887339d7" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets</source>
          <target state="translated">InteractsWithSockets</target>
        </trans-unit>
        <trans-unit id="88f72c7feed94fdc3af0b4dc8dee96472f84b4e7" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets (Broadcasting)</source>
          <target state="translated">InteractsWithSockets (ブロードキャスト)</target>
        </trans-unit>
        <trans-unit id="ae19fe5dfe3884db9ede059bd85a88a111e29b62" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets::broadcastToEveryone()</source>
          <target state="translated">InteractsWithSockets::broadcastToEveryone()</target>
        </trans-unit>
        <trans-unit id="5c1ae33285b385102a4e8fa1a40312369fc6c26b" translate="yes" xml:space="preserve">
          <source>InteractsWithSockets::dontBroadcastToCurrentUser()</source>
          <target state="translated">InteractsWithSockets::dontBroadcastToCurrentUser()</target>
        </trans-unit>
        <trans-unit id="2a6a09ba9950665622f7c6efd9b582db2d2683b1" translate="yes" xml:space="preserve">
          <source>InteractsWithTime</source>
          <target state="translated">InteractsWithTime</target>
        </trans-unit>
        <trans-unit id="4763ff63ef6c3ec5701f5cd9a46abf6989ffcf9d" translate="yes" xml:space="preserve">
          <source>InteractsWithTime (Foundation\Testing)</source>
          <target state="translated">InteractsWithTime (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="ebf9ebbf8607069b36fc67662cab27a971cff708" translate="yes" xml:space="preserve">
          <source>InteractsWithTime (Support)</source>
          <target state="translated">InteractsWithTime (サポート)</target>
        </trans-unit>
        <trans-unit id="5ca12bb493e3ed68a7989a84f6eb0ee09e23ec5c" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::availableAt()</source>
          <target state="translated">InteractsWithTime::availableAt()</target>
        </trans-unit>
        <trans-unit id="910ac0fb6ace928c2f8ecf4b19e569752b839128" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::currentTime()</source>
          <target state="translated">InteractsWithTime::currentTime()</target>
        </trans-unit>
        <trans-unit id="8933e5f1fe5173f021e43db7bc069a0e36a806b6" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::parseDateInterval()</source>
          <target state="translated">InteractsWithTime::parseDateInterval()</target>
        </trans-unit>
        <trans-unit id="af948cf95aa754955899817bf7b886c1ccce4789" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::secondsUntil()</source>
          <target state="translated">InteractsWithTime::secondsUntil()</target>
        </trans-unit>
        <trans-unit id="258e4adedfa4278d4e57bb15922ff0876233f2b0" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::travel()</source>
          <target state="translated">InteractsWithTime::travel()</target>
        </trans-unit>
        <trans-unit id="ef6b89296dd9c4a4d4f0b65af088dd0576097653" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::travelBack()</source>
          <target state="translated">InteractsWithTime::travelBack()</target>
        </trans-unit>
        <trans-unit id="92979bd1ee6a825c3b514f3d0f7e3c6633f821cc" translate="yes" xml:space="preserve">
          <source>InteractsWithTime::travelTo()</source>
          <target state="translated">InteractsWithTime::travelTo()</target>
        </trans-unit>
        <trans-unit id="808f7ee657e560e63d638d6bd59e0a4d6fc7f8aa" translate="yes" xml:space="preserve">
          <source>InteractsWithViews</source>
          <target state="translated">InteractsWithViews</target>
        </trans-unit>
        <trans-unit id="97a7d3d30f9c89e29acf90aa989dab11e71144bc" translate="yes" xml:space="preserve">
          <source>InteractsWithViews (Foundation\Testing)</source>
          <target state="translated">InteractsWithViews (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="1bcc002d20cd3a4132bcdaae2bd536c53ebe47c2" translate="yes" xml:space="preserve">
          <source>InteractsWithViews::blade()</source>
          <target state="translated">InteractsWithViews::blade()</target>
        </trans-unit>
        <trans-unit id="55ddde479ceabd8a5437a938b649431df4c68543" translate="yes" xml:space="preserve">
          <source>InteractsWithViews::component()</source>
          <target state="translated">InteractsWithViews::component()</target>
        </trans-unit>
        <trans-unit id="ed74187c9adbb19a351ea3f148b14adce8df7493" translate="yes" xml:space="preserve">
          <source>InteractsWithViews::view()</source>
          <target state="translated">InteractsWithViews::view()</target>
        </trans-unit>
        <trans-unit id="368de53eda5ef7fa65549f776f25d93652558756" translate="yes" xml:space="preserve">
          <source>InteractsWithViews::withViewErrors()</source>
          <target state="translated">InteractsWithViews::withViewErrors()</target>
        </trans-unit>
        <trans-unit id="9ddb06d19375212386c26d830f63ad8db1410da7" translate="yes" xml:space="preserve">
          <source>Intercepting Gate Checks</source>
          <target state="translated">ゲートチェックの傍受</target>
        </trans-unit>
        <trans-unit id="40476a98686d7c9da59c960e19503022f2a672d5" translate="yes" xml:space="preserve">
          <source>Interesting events.</source>
          <target state="translated">おもしろいイベント。</target>
        </trans-unit>
        <trans-unit id="b356313f979923fc829adb909098ed26a5a01aff" translate="yes" xml:space="preserve">
          <source>Interfaces</source>
          <target state="translated">Interfaces</target>
        </trans-unit>
        <trans-unit id="9456ea079c8532bea600841beb7bd0492dbf2a4f" translate="yes" xml:space="preserve">
          <source>Internally, Cashier will use the user's &lt;a href=&quot;#customer-defaults&quot;&gt;&lt;code&gt;paddleCountry&lt;/code&gt; method&lt;/a&gt; to retrieve the prices in their currency. So, for example, a user living in the United States will see prices in USD while a user in Belgium will see prices in EUR. If no matching currency can be found the default currency of the product will be used. You can customize all prices of a product or subscription plan in the Paddle control panel.</source>
          <target state="translated">内部的には、キャッシャーはユーザーの&lt;a href=&quot;#customer-defaults&quot;&gt; &lt;code&gt;paddleCountry&lt;/code&gt; メソッド&lt;/a&gt;を使用して、通貨で価格を取得します。したがって、たとえば、米国に住んでいるユーザーには米ドルでの価格が表示され、ベルギーに住んでいるユーザーにはユーロでの価格が表示されます。一致する通貨が見つからない場合は、製品のデフォルト通貨が使用されます。パドルコントロールパネルで、製品またはサブスクリプションプランのすべての価格をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="9d7fd095f0b16c0fe802bb3bed97f67ebedf3b31" translate="yes" xml:space="preserve">
          <source>Internally, this rule uses the PHP &lt;code&gt;preg_match&lt;/code&gt; function. The pattern specified should obey the same formatting required by &lt;code&gt;preg_match&lt;/code&gt; and thus also include valid delimiters. For example: &lt;code&gt;'email' =&amp;gt; 'not_regex:/^.+$/i'&lt;/code&gt;.</source>
          <target state="translated">内部的には、このルールはPHPの &lt;code&gt;preg_match&lt;/code&gt; 関数を使用します。指定されたパターンは、 &lt;code&gt;preg_match&lt;/code&gt; で必要とされるのと同じフォーマットに従う必要があるため、有効な区切り文字も含まれている必要があります。例： &lt;code&gt;'email' =&amp;gt; 'not_regex:/^.+$/i'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c632fec3f45ac8b54f91b4a4d6fa855d1c422171" translate="yes" xml:space="preserve">
          <source>Internally, this rule uses the PHP &lt;code&gt;preg_match&lt;/code&gt; function. The pattern specified should obey the same formatting required by &lt;code&gt;preg_match&lt;/code&gt; and thus also include valid delimiters. For example: &lt;code&gt;'email' =&amp;gt; 'regex:/^.+@.+$/i'&lt;/code&gt;.</source>
          <target state="translated">内部的には、このルールはPHPの &lt;code&gt;preg_match&lt;/code&gt; 関数を使用します。指定するパターンは、 &lt;code&gt;preg_match&lt;/code&gt; で必要な同じフォーマットに従う必要があり、有効な区切り文字も含まれている必要があります。例： &lt;code&gt;'email' =&amp;gt; 'regex:/^.+@.+$/i'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f54b5d08b9e7e9575b4cb09d85028b44cacc36cb" translate="yes" xml:space="preserve">
          <source>Intersect the collection with the given items by key.</source>
          <target state="translated">与えられた項目とコレクションをキーで交差させます。</target>
        </trans-unit>
        <trans-unit id="6ac5f15a9f88cf3506ff885f7cc498184f0cea7a" translate="yes" xml:space="preserve">
          <source>Intersect the collection with the given items.</source>
          <target state="translated">与えられたアイテムとコレクションを交差させます。</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="474abcfe06fcebaf10100258687c39dc09eb6846" translate="yes" xml:space="preserve">
          <source>InvalidArgumentException</source>
          <target state="translated">InvalidArgumentException</target>
        </trans-unit>
        <trans-unit id="d62d63ff5ca5eef376269316ee2d5a50c094bfb6" translate="yes" xml:space="preserve">
          <source>InvalidCastException</source>
          <target state="translated">InvalidCastException</target>
        </trans-unit>
        <trans-unit id="150e1de14156c595a916e2b9e874fceb14b1be4f" translate="yes" xml:space="preserve">
          <source>InvalidCastException (Database\Eloquent)</source>
          <target state="translated">InvalidCastException (DatabaseEloquent)</target>
        </trans-unit>
        <trans-unit id="e79c6b5e96c8a52d3f4891a000919e6328083f52" translate="yes" xml:space="preserve">
          <source>InvalidCastException::__construct()</source>
          <target state="translated">InvalidCastException::__construct()</target>
        </trans-unit>
        <trans-unit id="06f63dc4209f5306ed965df4441893bba4e2ef30" translate="yes" xml:space="preserve">
          <source>InvalidCountException</source>
          <target state="translated">InvalidCountException</target>
        </trans-unit>
        <trans-unit id="4039c6ec9661ed789fc1c6a8b0ad2e8ae8f55bff" translate="yes" xml:space="preserve">
          <source>InvalidEmail|null</source>
          <target state="translated">InvalidEmail|null</target>
        </trans-unit>
        <trans-unit id="0df22225c4945d09af4eb584da2fcb8d31e2ccda" translate="yes" xml:space="preserve">
          <source>InvalidEmail|null
    getError()</source>
          <target state="translated">InvalidEmail|null getError()</target>
        </trans-unit>
        <trans-unit id="5f3a43daa9cc6840f4c9a4cfd7689356c7c6d3a0" translate="yes" xml:space="preserve">
          <source>InvalidFileException</source>
          <target state="translated">InvalidFileException</target>
        </trans-unit>
        <trans-unit id="70e975ae436dffc4aaf8bb3938a256cfd6cda7be" translate="yes" xml:space="preserve">
          <source>InvalidPayloadException</source>
          <target state="translated">InvalidPayloadException</target>
        </trans-unit>
        <trans-unit id="23e6e2430796e298723e193487e67abe48c8fc17" translate="yes" xml:space="preserve">
          <source>InvalidPayloadException (Queue)</source>
          <target state="translated">InvalidPayloadException (Queue)</target>
        </trans-unit>
        <trans-unit id="04ecaeb42bf4e3b97734d54543ad9fcf10de6054" translate="yes" xml:space="preserve">
          <source>InvalidPayloadException::__construct()</source>
          <target state="translated">InvalidPayloadException::__construct()</target>
        </trans-unit>
        <trans-unit id="e55cc8a9619d144e386961fd900a69d72ce9b44c" translate="yes" xml:space="preserve">
          <source>InvalidSignatureException</source>
          <target state="translated">InvalidSignatureException</target>
        </trans-unit>
        <trans-unit id="de07016d07471deddaf32d16913e1b24358beaac" translate="yes" xml:space="preserve">
          <source>InvalidSignatureException (Routing\Exceptions)</source>
          <target state="translated">InvalidSignatureException (RoutingExceptions)</target>
        </trans-unit>
        <trans-unit id="fef721e0a975c7fe3a84dfe4009967bd269810d9" translate="yes" xml:space="preserve">
          <source>InvalidSignatureException::__construct()</source>
          <target state="translated">InvalidSignatureException::__construct()</target>
        </trans-unit>
        <trans-unit id="14d5a0cd53c6fd6943f6f29dfdacf8a1439b7b65" translate="yes" xml:space="preserve">
          <source>Invalidate other sessions for the current user.</source>
          <target state="translated">現在のユーザーの他のセッションを無効にします。</target>
        </trans-unit>
        <trans-unit id="25818764123575f6e7e9d85b4af887a1989685e8" translate="yes" xml:space="preserve">
          <source>Invalidating Sessions On Other Devices</source>
          <target state="translated">他のデバイスでセッションを無効にする</target>
        </trans-unit>
        <trans-unit id="35f8f37b92ae06da1cbb06dd1617d767c1b6ea72" translate="yes" xml:space="preserve">
          <source>Invoices</source>
          <target state="translated">Invoices</target>
        </trans-unit>
        <trans-unit id="3ad6eec66469e4fd1e65f8079631eafba172bd8a" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable</source>
          <target state="translated">InvokableComponentVariable</target>
        </trans-unit>
        <trans-unit id="5b3e825340e5d2d98cca8d2caf84df5c59c1e2c8" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable (View)</source>
          <target state="translated">InvokableComponentVariable (ビュー)</target>
        </trans-unit>
        <trans-unit id="030b9ed0a45219354952c344d99e7744bba0e509" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::__call()</source>
          <target state="translated">InvokableComponentVariable::__call()</target>
        </trans-unit>
        <trans-unit id="9cf335e52941ddd7c657a25922be2b225614e776" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::__construct()</source>
          <target state="translated">InvokableComponentVariable::__construct()</target>
        </trans-unit>
        <trans-unit id="d1c6a4e72d04a52165e50dba5458ce4baa21974e" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::__get()</source>
          <target state="translated">InvokableComponentVariable::__get()</target>
        </trans-unit>
        <trans-unit id="bbde130ea14488cd319785e018fdedc4e685ae75" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::__invoke()</source>
          <target state="translated">InvokableComponentVariable::__invoke()</target>
        </trans-unit>
        <trans-unit id="046731adc8900b8b720f83fc9cceb516f24355f0" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::__toString()</source>
          <target state="translated">InvokableComponentVariable::__toString()</target>
        </trans-unit>
        <trans-unit id="f816e374eb6eb3f2516785366fea974406d6c8d8" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::getIterator()</source>
          <target state="translated">InvokableComponentVariable::getIterator()</target>
        </trans-unit>
        <trans-unit id="2c5fcd0482ec0a45aa6083fed13b12bed7134ca7" translate="yes" xml:space="preserve">
          <source>InvokableComponentVariable::resolveDisplayableValue()</source>
          <target state="translated">InvokableComponentVariable::resolveDisplayableValue()</target>
        </trans-unit>
        <trans-unit id="944b4cf34fa6d724152dea86b1c57d1d52d8768c" translate="yes" xml:space="preserve">
          <source>Invoke a batch callback handler.</source>
          <target state="translated">バッチコールバックハンドラを呼び出します。</target>
        </trans-unit>
        <trans-unit id="4a0d1386fc0adbdc9d113ab1da2673c7ed709286" translate="yes" xml:space="preserve">
          <source>Invoke all of the chain's failed job callbacks.</source>
          <target state="translated">チェーンの失敗したジョブのコールバックをすべて呼び出します。</target>
        </trans-unit>
        <trans-unit id="fa4dcffa5113b00526bb461d85972bcbadda899d" translate="yes" xml:space="preserve">
          <source>Invoke the controller method.</source>
          <target state="translated">コントローラメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="3d8d6a09991887b0bab1c5fb6d9dbd0e6eed4fd5" translate="yes" xml:space="preserve">
          <source>Invoke the handler.</source>
          <target state="translated">ハンドラを呼び出します。</target>
        </trans-unit>
        <trans-unit id="aa0f380fd09b0ea6272931573fcf45863845bd05" translate="yes" xml:space="preserve">
          <source>InvokeQueuedClosure</source>
          <target state="translated">InvokeQueuedClosure</target>
        </trans-unit>
        <trans-unit id="dfd38ed1a502254a91304f8f69696ff20856f5a2" translate="yes" xml:space="preserve">
          <source>InvokeQueuedClosure (Events)</source>
          <target state="translated">InvokeQueuedClosure (イベント)</target>
        </trans-unit>
        <trans-unit id="a91eb7463121ac91f4e867d559c9ac8d0d719ba6" translate="yes" xml:space="preserve">
          <source>InvokeQueuedClosure::failed()</source>
          <target state="translated">InvokeQueuedClosure::failed()</target>
        </trans-unit>
        <trans-unit id="745e1733de14a0942ed88ae34481ab57dad623ff" translate="yes" xml:space="preserve">
          <source>InvokeQueuedClosure::handle()</source>
          <target state="translated">InvokeQueuedClosure::handle()</target>
        </trans-unit>
        <trans-unit id="b2bc0cf95cbc7cc0a7a624977d1d5c033b6af394" translate="yes" xml:space="preserve">
          <source>Is Doctrine available?</source>
          <target state="translated">ドクトリンは利用できますか?</target>
        </trans-unit>
        <trans-unit id="d0ec01ce86e1148025f5f436a27df8102e4839d1" translate="yes" xml:space="preserve">
          <source>Is the given string surrounded by the given character?</source>
          <target state="translated">与えられた文字列は与えられた文字で囲まれていますか?</target>
        </trans-unit>
        <trans-unit id="c749c655de7afa0e449cb96ad7228488ec9f8052" translate="yes" xml:space="preserve">
          <source>Issue a DELETE request to the given URL.</source>
          <target state="translated">指定した URL に対して DELETE リクエストを発行します。</target>
        </trans-unit>
        <trans-unit id="50c3de76b5a71d99ee1dd8beb91b4ccc718e3acf" translate="yes" xml:space="preserve">
          <source>Issue a GET request to the given URL.</source>
          <target state="translated">指定したURLへのGETリクエストを発行します。</target>
        </trans-unit>
        <trans-unit id="469671265bff5cde4132f200aae5edde16345710" translate="yes" xml:space="preserve">
          <source>Issue a HEAD request to the given URL.</source>
          <target state="translated">指定したURLにHEADリクエストを発行します。</target>
        </trans-unit>
        <trans-unit id="767ebf78ea25fafa6ca940cd0e2000ae9fc94825" translate="yes" xml:space="preserve">
          <source>Issue a PATCH request to the given URL.</source>
          <target state="translated">指定されたURLにPATCHリクエストを発行します。</target>
        </trans-unit>
        <trans-unit id="13b6612d9881fcd5534ed4d7cff5908504677b0f" translate="yes" xml:space="preserve">
          <source>Issue a POST request to the given URL.</source>
          <target state="translated">指定したURLにPOSTリクエストを発行します。</target>
        </trans-unit>
        <trans-unit id="dd6f488d318a993a600e8bb788976776f7574574" translate="yes" xml:space="preserve">
          <source>Issue a PUT request to the given URL.</source>
          <target state="translated">指定したURLにPUTリクエストを発行します。</target>
        </trans-unit>
        <trans-unit id="fd5efea845dc3ed137b82d0d94c1d545e5ccb5ad" translate="yes" xml:space="preserve">
          <source>Issuing API Tokens</source>
          <target state="translated">API トークンの発行</target>
        </trans-unit>
        <trans-unit id="d0c213054bf824d45c2718ca3d566dae68e73b26" translate="yes" xml:space="preserve">
          <source>Issuing Access Tokens</source>
          <target state="translated">アクセストークンの発行</target>
        </trans-unit>
        <trans-unit id="ac32c207edd753e66f3b4d678c70c48bd6e31398" translate="yes" xml:space="preserve">
          <source>It is cumbersome to always pass the &lt;code&gt;locale&lt;/code&gt; every time you call the &lt;code&gt;route&lt;/code&gt; helper. So, you may use the &lt;code&gt;URL::defaults&lt;/code&gt; method to define a default value for this parameter that will always be applied during the current request. You may wish to call this method from a &lt;a href=&quot;middleware#assigning-middleware-to-routes&quot;&gt;route middleware&lt;/a&gt; so that you have access to the current request:</source>
          <target state="translated">&lt;code&gt;route&lt;/code&gt; ヘルパーを呼び出すたびに常に &lt;code&gt;locale&lt;/code&gt; 渡すのは面倒です。そのため、 &lt;code&gt;URL::defaults&lt;/code&gt; メソッドを使用して、現在のリクエスト中に常に適用されるこのパラメーターのデフォルト値を定義できます。現在のリクエストにアクセスできるように、&lt;a href=&quot;middleware#assigning-middleware-to-routes&quot;&gt;ルートミドルウェア&lt;/a&gt;からこのメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="b37687e785e8ae6a694d7943786467fa93ba720d" translate="yes" xml:space="preserve">
          <source>It is often helpful to have different configuration values based on the environment where the application is running. For example, you may wish to use a different cache driver locally than you do on your production server.</source>
          <target state="translated">アプリケーションが実行されている環境に応じて異なる設定値を持つことは、しばしば有用です。例えば、本番サーバとは異なるキャッシュドライバをローカルで使用したい場合があります。</target>
        </trans-unit>
        <trans-unit id="41661ecfc5041c9a4d7e97ac604361646c6f8f28" translate="yes" xml:space="preserve">
          <source>It is often useful to reset your database after each test so that data from a previous test does not interfere with subsequent tests. The &lt;code&gt;RefreshDatabase&lt;/code&gt; trait takes the most optimal approach to migrating your test database depending on if you are using an in-memory database or a traditional database. Use the trait on your test class and everything will be handled for you:</source>
          <target state="translated">以前のテストからのデータが後続のテストに干渉しないように、各テストの後にデータベースをリセットすると便利なことがよくあります。 &lt;code&gt;RefreshDatabase&lt;/code&gt; の特性を使用すると、インメモリ・データベースや従来のデータベースを使用している場合に応じて、テストデータベースの移行に最適なアプローチを採用しています。テストクラスで特性を使用すると、すべてが処理されます。</target>
        </trans-unit>
        <trans-unit id="887bcf7788afbd082f50871c6d07e622f30f4f28" translate="yes" xml:space="preserve">
          <source>It is perfectly fine to use Sanctum only for API token authentication or only for SPA authentication. Just because you use Sanctum does not mean you are required to use both features it offers.</source>
          <target state="translated">APIトークン認証にのみSanctumを使用しても、SPA認証にのみ使用しても全く問題ありません。Sanctumを使用しているからといって、Sanctumが提供する両方の機能を使用しなければならないというわけではありません。</target>
        </trans-unit>
        <trans-unit id="a7038df1f7c26d40910033e1cc458309d5cec5a1" translate="yes" xml:space="preserve">
          <source>It is very important to note that we did not need to specify the full controller namespace when defining the controller route. Since the &lt;code&gt;RouteServiceProvider&lt;/code&gt; loads your route files within a route group that contains the namespace, we only specified the portion of the class name that comes after the &lt;code&gt;App\Http\Controllers&lt;/code&gt; portion of the namespace.</source>
          <target state="translated">コントローラルートを定義するときに、完全なコントローラ名前空間を指定する必要がなかったことに注意することは非常に重要です。 &lt;code&gt;RouteServiceProvider&lt;/code&gt; は、名前空間を含むルートグループ内にルートファイルをロードするため、名前空間の &lt;code&gt;App\Http\Controllers&lt;/code&gt; 部分の後に続くクラス名の部分のみを指定しました。</target>
        </trans-unit>
        <trans-unit id="5b39f96a31b34993e3f76d4de2a0e018d6187e39" translate="yes" xml:space="preserve">
          <source>It's best to envision middleware as a series of &quot;layers&quot; HTTP requests must pass through before they hit your application. Each layer can examine the request and even reject it entirely.</source>
          <target state="translated">ミドルウェアは、HTTP リクエストがアプリケーションに到達する前に通過しなければならない一連の「レイヤー」として想定するのがベストです。各レイヤーはリクエストを検査したり、完全に拒否したりすることができます。</target>
        </trans-unit>
        <trans-unit id="9a035e8c94497b222365e77324f10d4581ae1c7d" translate="yes" xml:space="preserve">
          <source>Items not found in the cache will have a null value.</source>
          <target state="translated">キャッシュに見つからなかった項目は、NULL値を持つことになります。</target>
        </trans-unit>
        <trans-unit id="1fb7e44d0f21152c7a147c841b758453f7e0cef7" translate="yes" xml:space="preserve">
          <source>Iterate through registered plugins and execute plugins' methods.</source>
          <target state="translated">登録されているプラグインを反復処理し、プラグインのメソッドを実行します。</target>
        </trans-unit>
        <trans-unit id="c8d1981a59e491448ff84cec967f357e23d7a3da" translate="yes" xml:space="preserve">
          <source>JSON API</source>
          <target state="translated">JSON API</target>
        </trans-unit>
        <trans-unit id="9ab298721be5a406b1f264fb4a0b13d86d0a5531" translate="yes" xml:space="preserve">
          <source>JSON PHP Extension</source>
          <target state="translated">JSON PHP 拡張機能</target>
        </trans-unit>
        <trans-unit id="565022c0f2b484f49110f22aedc82f84cd16fb86" translate="yes" xml:space="preserve">
          <source>JSON Responses</source>
          <target state="translated">JSON レスポンス</target>
        </trans-unit>
        <trans-unit id="063f5b40cca4895106081e6e0436fc09b19afbfb" translate="yes" xml:space="preserve">
          <source>JSON Where Clauses</source>
          <target state="translated">JSON どこの節</target>
        </trans-unit>
        <trans-unit id="79c59c0317652386105b23d857967c130e0e0589" translate="yes" xml:space="preserve">
          <source>JSON equivalent column.</source>
          <target state="translated">JSON相当のカラム。</target>
        </trans-unit>
        <trans-unit id="770d99157b721430193360cf5e11fb14d8bad3d3" translate="yes" xml:space="preserve">
          <source>JSONB equivalent column.</source>
          <target state="translated">JSONB相当のカラム。</target>
        </trans-unit>
        <trans-unit id="39a74d46ff0229b00d90fbd74074cefd45f28b74" translate="yes" xml:space="preserve">
          <source>January 24th, 2017</source>
          <target state="translated">2017年1月24日</target>
        </trans-unit>
        <trans-unit id="e9e805134cafdef4bd85338d5ebcc7630cfdd370" translate="yes" xml:space="preserve">
          <source>January 24th, 2018</source>
          <target state="translated">2018年1月24日</target>
        </trans-unit>
        <trans-unit id="68ef4374f2d4a9c0c258d3898ad40c4ba443343d" translate="yes" xml:space="preserve">
          <source>Jar::forever()</source>
          <target state="translated">Jar::forever()</target>
        </trans-unit>
        <trans-unit id="39caa569565af369dbeddc9d5cdcb966c317a86e" translate="yes" xml:space="preserve">
          <source>Jar::forget()</source>
          <target state="translated">Jar::forget()</target>
        </trans-unit>
        <trans-unit id="0dc56ebdd0a2830587337b52886d7ac9f98d3826" translate="yes" xml:space="preserve">
          <source>Jar::getPathAndDomain()</source>
          <target state="translated">Jar::getPathAndDomain()</target>
        </trans-unit>
        <trans-unit id="ada11e91a518838d2d938a007bfb05b49158f1c3" translate="yes" xml:space="preserve">
          <source>Jar::getQueuedCookies()</source>
          <target state="translated">Jar::getQueuedCookies()</target>
        </trans-unit>
        <trans-unit id="a92a5033725726c45ad1f6ea1cc810d2ee019586" translate="yes" xml:space="preserve">
          <source>Jar::hasQueued()</source>
          <target state="translated">Jar::hasQueued()</target>
        </trans-unit>
        <trans-unit id="defd48ac7f86fca2b7c03166bfd58d5b7f6986a9" translate="yes" xml:space="preserve">
          <source>Jar::make()</source>
          <target state="translated">Jar::make()</target>
        </trans-unit>
        <trans-unit id="1c635ed171917550165c2e8363800a0ad3a71aaa" translate="yes" xml:space="preserve">
          <source>Jar::queue()</source>
          <target state="translated">Jar::queue()</target>
        </trans-unit>
        <trans-unit id="836242169a75fa6147d31cc733de002299f701b7" translate="yes" xml:space="preserve">
          <source>Jar::queued()</source>
          <target state="translated">Jar::queued()</target>
        </trans-unit>
        <trans-unit id="6c363679d1bbe8e5de54963054b73571885161c3" translate="yes" xml:space="preserve">
          <source>Jar::setDefaultPathAndDomain()</source>
          <target state="translated">Jar::setDefaultPathAndDomain()</target>
        </trans-unit>
        <trans-unit id="9d45b9bb0b7905a9907ce66c7f128913ebc7274a" translate="yes" xml:space="preserve">
          <source>Jar::unqueue()</source>
          <target state="translated">Jar::unqueue()</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="ea9212f85e861b1c00fc2f1eb1fe9581fdf49d6e" translate="yes" xml:space="preserve">
          <source>JavaScript &amp;amp; CSS Scaffolding</source>
          <target state="translated">JavaScriptとCSSの足場</target>
        </trans-unit>
        <trans-unit id="55e89944ea4c8b4d99b6cbca13e35f91996d40bb" translate="yes" xml:space="preserve">
          <source>JavaScript Dialogs</source>
          <target state="translated">JavaScript ダイヤルグ</target>
        </trans-unit>
        <trans-unit id="eac057cc6bd4aa893b9b18fbbacc8fd0ac031c03" translate="yes" xml:space="preserve">
          <source>Jetstream is designed using &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt; and offers your choice of &lt;a href=&quot;https://laravel-livewire.com&quot;&gt;Livewire&lt;/a&gt; or &lt;a href=&quot;https://inertiajs.com&quot;&gt;Inertia&lt;/a&gt; scaffolding.</source>
          <target state="translated">Jetstreamは&lt;a href=&quot;https://tailwindcss.com&quot;&gt;TailwindCSS&lt;/a&gt;を使用して設計されており、&lt;a href=&quot;https://laravel-livewire.com&quot;&gt;Livewire&lt;/a&gt;または&lt;a href=&quot;https://inertiajs.com&quot;&gt;Inertiaの&lt;/a&gt;スキャフォールディングを選択できます。</target>
        </trans-unit>
        <trans-unit id="9d030054bc6f1d835cd3c379ee1b0b74dd49381c" translate="yes" xml:space="preserve">
          <source>Jetstream will also create a &lt;code&gt;resources/views/layouts&lt;/code&gt; directory containing a base layout for your application. All of these views use the &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt; framework, but you are free to customize them however you wish.</source>
          <target state="translated">Jetstreamは、アプリケーションの基本レイアウトを含む &lt;code&gt;resources/views/layouts&lt;/code&gt; ディレクトリも作成します。これらのビューはすべて&lt;a href=&quot;https://tailwindcss.com&quot;&gt;TailwindCSS&lt;/a&gt;フレームワークを使用していますが、自由にカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="984512ca0af6c846a106b53df5519ac7fc8e764d" translate="yes" xml:space="preserve">
          <source>Jigsaw</source>
          <target state="translated">Jigsaw</target>
        </trans-unit>
        <trans-unit id="30c8cb83b9acd93beaa32086336c36cb77c065d9" translate="yes" xml:space="preserve">
          <source>Job</source>
          <target state="translated">Job</target>
        </trans-unit>
        <trans-unit id="8e778a2df1e76eaf04e88c068026d8fc7317f388" translate="yes" xml:space="preserve">
          <source>Job
    getPheanstalkJob()</source>
          <target state="translated">ジョブ getPheanstalkJob()</target>
        </trans-unit>
        <trans-unit id="cf69eb83ca1b54393067180dc3fd154a489774cf" translate="yes" xml:space="preserve">
          <source>Job (Contracts)</source>
          <target state="translated">仕事(契約</target>
        </trans-unit>
        <trans-unit id="52ac3e7900f792b437fa8f18ddfd069df8bf8462" translate="yes" xml:space="preserve">
          <source>Job (Queue\Jobs)</source>
          <target state="translated">Job (QueueJobs)</target>
        </trans-unit>
        <trans-unit id="3f6d769add06986ae7ac4abd5329b0d2fa967588" translate="yes" xml:space="preserve">
          <source>Job Batching</source>
          <target state="translated">ジョブのバッチ処理</target>
        </trans-unit>
        <trans-unit id="dd9b5761a4c2eb4c07230ab8d0ae2f3a3cb3bb06" translate="yes" xml:space="preserve">
          <source>Job Chaining</source>
          <target state="translated">ジョブチェーン</target>
        </trans-unit>
        <trans-unit id="460bc12837b10f2a75abb16e30585827ceb62246" translate="yes" xml:space="preserve">
          <source>Job Events</source>
          <target state="translated">お仕事イベント</target>
        </trans-unit>
        <trans-unit id="0f8b021e68b3ae2a2d4752698b0db775fd4daf46" translate="yes" xml:space="preserve">
          <source>Job Expiration</source>
          <target state="translated">仕事の期限</target>
        </trans-unit>
        <trans-unit id="d50e263289cf9cdb14e74dd9d5397b3eee3cc7da" translate="yes" xml:space="preserve">
          <source>Job Expirations &amp;amp; Timeouts</source>
          <target state="translated">ジョブの有効期限とタイムアウト</target>
        </trans-unit>
        <trans-unit id="9748a48cab311915c2f609f5f3c55768fa228467" translate="yes" xml:space="preserve">
          <source>Job Middleware</source>
          <target state="translated">ジョブミドルウェア</target>
        </trans-unit>
        <trans-unit id="fd5cacebc7529bd929258ed7f69291be49fdfe99" translate="yes" xml:space="preserve">
          <source>Job Trimming</source>
          <target state="translated">ジョブトリミング</target>
        </trans-unit>
        <trans-unit id="b7ee86a15b07f7a2c372b5737848901b00efea62" translate="yes" xml:space="preserve">
          <source>Job Watcher</source>
          <target state="translated">ジョブウォッチャー</target>
        </trans-unit>
        <trans-unit id="1421df66c02256efa3150544c542b407fdc4e052" translate="yes" xml:space="preserve">
          <source>Job chaining allows you to specify a list of queued jobs that should be run in sequence after the primary job has executed successfully. If one job in the sequence fails, the rest of the jobs will not be run. To execute a queued job chain, you may use the &lt;code&gt;chain&lt;/code&gt; method provided by the &lt;code&gt;Bus&lt;/code&gt; facade:</source>
          <target state="translated">ジョブチェーンを使用すると、プライマリジョブが正常に実行された後に順番に実行する必要があるキューに入れられたジョブのリストを指定できます。シーケンス内の1つのジョブが失敗した場合、残りのジョブは実行されません。キューに入れられたジョブチェーンを実行するには、 &lt;code&gt;Bus&lt;/code&gt; ファサードが提供する &lt;code&gt;chain&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="f312a0cfc810775918dd2d377a729d8e86afc0be" translate="yes" xml:space="preserve">
          <source>Job chaining allows you to specify a list of queued jobs that should be run in sequence. If one job in the sequence fails, the rest of the jobs will not be run. To execute a queued job chain, you may use the &lt;code&gt;withChain&lt;/code&gt; method on any of your dispatchable jobs:</source>
          <target state="translated">ジョブチェーンを使用すると、順番に実行する必要があるキューに入れられたジョブのリストを指定できます。シーケンス内の1つのジョブが失敗した場合、残りのジョブは実行されません。キューに入れられたジョブチェーンを実行するには、ディスパッチ可能な任意のジョブで &lt;code&gt;withChain&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="922dea61fde0392b19983ba8d4d759dd551b7674" translate="yes" xml:space="preserve">
          <source>Job classes are very simple, normally containing only a &lt;code&gt;handle&lt;/code&gt; method which is called when the job is processed by the queue. To get started, let's take a look at an example job class. In this example, we'll pretend we manage a podcast publishing service and need to process the uploaded podcast files before they are published:</source>
          <target state="translated">ジョブクラスは非常に単純で、通常、ジョブがキューによって処理されるときに呼び出される &lt;code&gt;handle&lt;/code&gt; メソッドのみを含みます。はじめに、ジョブクラスの例を見てみましょう。この例では、ポッドキャスト公開サービスを管理しており、アップロードされたポッドキャストファイルを公開する前に処理する必要があるとします。</target>
        </trans-unit>
        <trans-unit id="80a520b1e1791b77ee06d10495c05d49c60f2dd2" translate="yes" xml:space="preserve">
          <source>Job middleware allow you to wrap custom logic around the execution of queued jobs, reducing boilerplate in the jobs themselves. For example, consider the following &lt;code&gt;handle&lt;/code&gt; method which leverages Laravel's Redis rate limiting features to allow only one job to process every five seconds:</source>
          <target state="translated">ジョブミドルウェアを使用すると、キューに入れられたジョブの実行にカスタムロジックをラップして、ジョブ自体の定型文を減らすことができます。たとえば、LaravelのRedisレート制限機能を利用して、5秒ごとに1つのジョブのみを処理できるようにする次の &lt;code&gt;handle&lt;/code&gt; メソッドについて考えてみます。</target>
        </trans-unit>
        <trans-unit id="49cf604f420a87839abbf9fe9fc6d06d0be06b3d" translate="yes" xml:space="preserve">
          <source>Job stubs may be customized using &lt;a href=&quot;artisan#stub-customization&quot;&gt;stub publishing&lt;/a&gt;</source>
          <target state="translated">ジョブスタブは、&lt;a href=&quot;artisan#stub-customization&quot;&gt;スタブパブリッシング&lt;/a&gt;を使用してカスタマイズできます</target>
        </trans-unit>
        <trans-unit id="969bfb0661fcc6c8175e129098b6e7d344ea58d2" translate="yes" xml:space="preserve">
          <source>Job::attempts()</source>
          <target state="translated">Job::attempts()</target>
        </trans-unit>
        <trans-unit id="3f6ef17729cf756b1d0e64f45fe041b276da10fb" translate="yes" xml:space="preserve">
          <source>Job::backoff()</source>
          <target state="translated">Job::backoff()</target>
        </trans-unit>
        <trans-unit id="5eedc6a95b944c6bd1a54080699d698437fb22aa" translate="yes" xml:space="preserve">
          <source>Job::delete()</source>
          <target state="translated">Job::delete()</target>
        </trans-unit>
        <trans-unit id="ab60442db6f3c79e3207d6f05285c1fa105dd22c" translate="yes" xml:space="preserve">
          <source>Job::fail()</source>
          <target state="translated">Job::fail()</target>
        </trans-unit>
        <trans-unit id="460f463b540f5dcba516da5c23a78536d06498b6" translate="yes" xml:space="preserve">
          <source>Job::failed()</source>
          <target state="translated">Job::failed()</target>
        </trans-unit>
        <trans-unit id="73245797c15cdb6c736ed82aba2a1495c8271f63" translate="yes" xml:space="preserve">
          <source>Job::fire()</source>
          <target state="translated">Job::fire()</target>
        </trans-unit>
        <trans-unit id="1daa8e5e9f08c51c39787e1e7025fe5485a86d58" translate="yes" xml:space="preserve">
          <source>Job::getConnectionName()</source>
          <target state="translated">Job::getConnectionName()</target>
        </trans-unit>
        <trans-unit id="487cf738ea370b478620d3393412d34af70474fb" translate="yes" xml:space="preserve">
          <source>Job::getContainer()</source>
          <target state="translated">Job::getContainer()</target>
        </trans-unit>
        <trans-unit id="92131d8221234f44c879c8334787db786880ae48" translate="yes" xml:space="preserve">
          <source>Job::getJobId()</source>
          <target state="translated">Job::getJobId()</target>
        </trans-unit>
        <trans-unit id="f6ee9b899a4f6c590c8acd5c4ac1fac13c5cabad" translate="yes" xml:space="preserve">
          <source>Job::getName()</source>
          <target state="translated">Job::getName()</target>
        </trans-unit>
        <trans-unit id="21d451a45de4ac6c62c2eb3a53ce2e5ff343e5ae" translate="yes" xml:space="preserve">
          <source>Job::getQueue()</source>
          <target state="translated">Job::getQueue()</target>
        </trans-unit>
        <trans-unit id="e42135f41d3696e44b618e94d747ed1cc8b6bb4b" translate="yes" xml:space="preserve">
          <source>Job::getRawBody()</source>
          <target state="translated">Job::getRawBody()</target>
        </trans-unit>
        <trans-unit id="a8d7ab45be2ec3a093fe38f7f4a08564a1c43525" translate="yes" xml:space="preserve">
          <source>Job::getResolvedJob()</source>
          <target state="translated">Job::getResolvedJob()</target>
        </trans-unit>
        <trans-unit id="2875d7f52b06f2e7440f4fc6381602600e0c0430" translate="yes" xml:space="preserve">
          <source>Job::hasFailed()</source>
          <target state="translated">Job::hasFailed()</target>
        </trans-unit>
        <trans-unit id="23fa301688eaaa1243632d63108bc02409a8f4a7" translate="yes" xml:space="preserve">
          <source>Job::isDeleted()</source>
          <target state="translated">Job::isDeleted()</target>
        </trans-unit>
        <trans-unit id="dfa3ced177e49d674e5a870d3853cc5ccd434d37" translate="yes" xml:space="preserve">
          <source>Job::isDeletedOrReleased()</source>
          <target state="translated">Job::isDeletedOrReleased()</target>
        </trans-unit>
        <trans-unit id="1a1400ac325397d86567858570765895781d0eb7" translate="yes" xml:space="preserve">
          <source>Job::isReleased()</source>
          <target state="translated">Job::isReleased()</target>
        </trans-unit>
        <trans-unit id="d41a90fff9f816c7c0fa370877da76e01b1dc5b7" translate="yes" xml:space="preserve">
          <source>Job::markAsFailed()</source>
          <target state="translated">Job::markAsFailed()</target>
        </trans-unit>
        <trans-unit id="91e23612ada938218dd551aba1061ff9b5b7313f" translate="yes" xml:space="preserve">
          <source>Job::maxExceptions()</source>
          <target state="translated">Job::maxExceptions()</target>
        </trans-unit>
        <trans-unit id="2d0cd04100ad77e943ba5cdf3434f1d6ee895f1d" translate="yes" xml:space="preserve">
          <source>Job::maxTries()</source>
          <target state="translated">Job::maxTries()</target>
        </trans-unit>
        <trans-unit id="680711024e196db9ccb1ef11f61a3992aff6d2e1" translate="yes" xml:space="preserve">
          <source>Job::payload()</source>
          <target state="translated">Job::payload()</target>
        </trans-unit>
        <trans-unit id="84a18021a46cb346038c674630c0086bd100706d" translate="yes" xml:space="preserve">
          <source>Job::release()</source>
          <target state="translated">Job::release()</target>
        </trans-unit>
        <trans-unit id="e9ba7b35acdf3e2f82e5b6751ec32b48f78904d9" translate="yes" xml:space="preserve">
          <source>Job::resolve()</source>
          <target state="translated">Job::resolve()</target>
        </trans-unit>
        <trans-unit id="fffb56968ccb0379077c4c87b23714f4480d7eda" translate="yes" xml:space="preserve">
          <source>Job::resolveName()</source>
          <target state="translated">Job::resolveName()</target>
        </trans-unit>
        <trans-unit id="efa7f72e1b4b0584c9a3cc08618fbd96efcc26e5" translate="yes" xml:space="preserve">
          <source>Job::retryUntil()</source>
          <target state="translated">Job::retryUntil()</target>
        </trans-unit>
        <trans-unit id="9bc91d6fb11d2b5987f15cc34c8abe51119c5a29" translate="yes" xml:space="preserve">
          <source>Job::timeout()</source>
          <target state="translated">Job::timeout()</target>
        </trans-unit>
        <trans-unit id="1688901e3dac9ed35b35d3758b46548f8bd47892" translate="yes" xml:space="preserve">
          <source>Job::timeoutAt()</source>
          <target state="translated">Job::timeoutAt()</target>
        </trans-unit>
        <trans-unit id="5566f1de79967ca57cb4ee0793645480b58c6a29" translate="yes" xml:space="preserve">
          <source>Job::uuid()</source>
          <target state="translated">Job::uuid()</target>
        </trans-unit>
        <trans-unit id="c4e805ab1d6951395b62c34176b98e3ba13a298e" translate="yes" xml:space="preserve">
          <source>JobExceptionOccurred</source>
          <target state="translated">JobExceptionOccurred</target>
        </trans-unit>
        <trans-unit id="543a3fa32251346c08806b69cb4a33cce80c3dc2" translate="yes" xml:space="preserve">
          <source>JobExceptionOccurred (Queue\Events)</source>
          <target state="translated">JobExceptionOccurred (QueueEvents)</target>
        </trans-unit>
        <trans-unit id="4b239a9483183b306fe7d0390d5e692dd408bb12" translate="yes" xml:space="preserve">
          <source>JobExceptionOccurred::__construct()</source>
          <target state="translated">JobExceptionOccurred::__construct()</target>
        </trans-unit>
        <trans-unit id="3fd4dca33b1d997e07b9fdd671d7a8b1a283e9fc" translate="yes" xml:space="preserve">
          <source>JobFailed</source>
          <target state="translated">JobFailed</target>
        </trans-unit>
        <trans-unit id="ee651a7c32028e519426347ff6e2e2bc71d3ea26" translate="yes" xml:space="preserve">
          <source>JobFailed (Queue\Events)</source>
          <target state="translated">JobFailed (QueueEvents)</target>
        </trans-unit>
        <trans-unit id="4018885c11778fd0bb6337e0a6c21d2ffcf3a4d5" translate="yes" xml:space="preserve">
          <source>JobFailed::__construct()</source>
          <target state="translated">JobFailed::__construct()</target>
        </trans-unit>
        <trans-unit id="2221c5357fcf9989b525838657f610de06b45873" translate="yes" xml:space="preserve">
          <source>JobMakeCommand</source>
          <target state="translated">JobMakeCommand</target>
        </trans-unit>
        <trans-unit id="395bab2de83c094dc3025b49a741af4d8e8bf53d" translate="yes" xml:space="preserve">
          <source>JobMakeCommand (Foundation)</source>
          <target state="translated">ジョブメイクコマンド(基礎</target>
        </trans-unit>
        <trans-unit id="92dcaf9eb20e24139b3fd5af6c4107d877fcd0b5" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::getDefaultNamespace()</source>
          <target state="translated">JobMakeCommand::getDefaultNamespace()</target>
        </trans-unit>
        <trans-unit id="bdb9ab38e679fb4b66f106a487ae6fd69d46fd71" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::getOptions()</source>
          <target state="translated">JobMakeCommand::getOptions()</target>
        </trans-unit>
        <trans-unit id="07bcc8653e018ac437b489e42c14fc0d817b8ca5" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::getStub()</source>
          <target state="translated">JobMakeCommand::getStub()</target>
        </trans-unit>
        <trans-unit id="3981ebbb7f4bc3b3603be9de501bd0fdaa04ca31" translate="yes" xml:space="preserve">
          <source>JobMakeCommand::resolveStubPath()</source>
          <target state="translated">JobMakeCommand::resolveStubPath()</target>
        </trans-unit>
        <trans-unit id="f1f568f7bbb3aae07f923667c832d60a1e42728a" translate="yes" xml:space="preserve">
          <source>JobName</source>
          <target state="translated">JobName</target>
        </trans-unit>
        <trans-unit id="9bc19cd9ee40392f36cb941e252d9561e737394d" translate="yes" xml:space="preserve">
          <source>JobName (Queue\Jobs)</source>
          <target state="translated">JobName (QueueJobs)</target>
        </trans-unit>
        <trans-unit id="5502481894fa38641cf46f7606b4f844c9347513" translate="yes" xml:space="preserve">
          <source>JobName::parse()</source>
          <target state="translated">JobName::parse()</target>
        </trans-unit>
        <trans-unit id="99fadcbd57d6e001dbcb009bded456db3d88b2db" translate="yes" xml:space="preserve">
          <source>JobName::resolve()</source>
          <target state="translated">JobName::resolve()</target>
        </trans-unit>
        <trans-unit id="12399cd6dda72b0830e44ffe2e95e08f57fbc308" translate="yes" xml:space="preserve">
          <source>JobProcessed</source>
          <target state="translated">JobProcessed</target>
        </trans-unit>
        <trans-unit id="6f502b84b4f76a03d05a1d33039f6bec30af0e28" translate="yes" xml:space="preserve">
          <source>JobProcessed (Queue\Events)</source>
          <target state="translated">JobProcessed (QueueEvents)</target>
        </trans-unit>
        <trans-unit id="d6bcd48823a842511cc1115374d8e26deebd7749" translate="yes" xml:space="preserve">
          <source>JobProcessed::__construct()</source>
          <target state="translated">JobProcessed::__construct()</target>
        </trans-unit>
        <trans-unit id="76485ed4552b9b0efc36b64fc73035109d19230b" translate="yes" xml:space="preserve">
          <source>JobProcessing</source>
          <target state="translated">JobProcessing</target>
        </trans-unit>
        <trans-unit id="5eeff561360add95937d66365093910077c68a17" translate="yes" xml:space="preserve">
          <source>JobProcessing (Queue\Events)</source>
          <target state="translated">ジョブ処理 (QueueEvents)</target>
        </trans-unit>
        <trans-unit id="b2ee2cd703692da6c030c1b39b873254d589a7cd" translate="yes" xml:space="preserve">
          <source>JobProcessing::__construct()</source>
          <target state="translated">JobProcessing::__construct()</target>
        </trans-unit>
        <trans-unit id="065a09b776a55fb5cccb0afad520689d58a1e6a0" translate="yes" xml:space="preserve">
          <source>Join all items from the collection using a string. The final items can use a separate glue string.</source>
          <target state="translated">コレクションのすべてのアイテムをひもを使って結合します。最終的なアイテムには、別ののり文字列を使用することができます。</target>
        </trans-unit>
        <trans-unit id="8468dd2fe9999a77c67f7a39273b321e20bc2717" translate="yes" xml:space="preserve">
          <source>JoinClause</source>
          <target state="translated">JoinClause</target>
        </trans-unit>
        <trans-unit id="2eedfefd68562c3e7edc72607c8f5dc815d77372" translate="yes" xml:space="preserve">
          <source>JoinClause (Database\Query)</source>
          <target state="translated">JoinClause (DatabaseQuery)</target>
        </trans-unit>
        <trans-unit id="b0eb2c475d95ed2b64f4d5af699bc1f5be726822" translate="yes" xml:space="preserve">
          <source>JoinClause::__construct()</source>
          <target state="translated">JoinClause::__construct()</target>
        </trans-unit>
        <trans-unit id="8f6aedffe27dd68a4ebb13ff4b18dfa660e2403b" translate="yes" xml:space="preserve">
          <source>JoinClause::forSubQuery()</source>
          <target state="translated">JoinClause::forSubQuery()</target>
        </trans-unit>
        <trans-unit id="c95f4fb255d7ee96a962c63c149221b43c37e8fd" translate="yes" xml:space="preserve">
          <source>JoinClause::newParentQuery()</source>
          <target state="translated">JoinClause::newParentQuery()</target>
        </trans-unit>
        <trans-unit id="f3fb37d881c38b83541cf573e34948099a142d5a" translate="yes" xml:space="preserve">
          <source>JoinClause::newQuery()</source>
          <target state="translated">JoinClause::newQuery()</target>
        </trans-unit>
        <trans-unit id="2d8a49584491a6ed38c7aca67486bd5781b58db9" translate="yes" xml:space="preserve">
          <source>JoinClause::on()</source>
          <target state="translated">JoinClause::on()</target>
        </trans-unit>
        <trans-unit id="23e7ee6d19eaeb77cf3862b8d06bdf3b12a7843f" translate="yes" xml:space="preserve">
          <source>JoinClause::orOn()</source>
          <target state="translated">JoinClause::orOn()</target>
        </trans-unit>
        <trans-unit id="aa20e8f265cf7079d0b22a260325ac4770660c99" translate="yes" xml:space="preserve">
          <source>Joining Presence Channels</source>
          <target state="translated">プレゼンスチャンネルへの参加</target>
        </trans-unit>
        <trans-unit id="36cb6826dbbbacc9f0915d9e44ccb82925b04c72" translate="yes" xml:space="preserve">
          <source>Joins</source>
          <target state="translated">Joins</target>
        </trans-unit>
        <trans-unit id="ec11658474cfe99e7b124c4ba9c07ef816b7be5f" translate="yes" xml:space="preserve">
          <source>Joomla</source>
          <target state="translated">Joomla</target>
        </trans-unit>
        <trans-unit id="99813e1a2b0f7c0f04aa6e1090672b3f50117938" translate="yes" xml:space="preserve">
          <source>JsonEncodingException</source>
          <target state="translated">JsonEncodingException</target>
        </trans-unit>
        <trans-unit id="a9faf297a6fe3264efa89ee8a9865d11864ad639" translate="yes" xml:space="preserve">
          <source>JsonEncodingException (Database\Eloquent)</source>
          <target state="translated">JsonEncodingException (DatabaseE\loquent)</target>
        </trans-unit>
        <trans-unit id="7c87fb038ba5a9cd493b76faa2e57ce3fff5269c" translate="yes" xml:space="preserve">
          <source>JsonEncodingException::forAttribute()</source>
          <target state="translated">JsonEncodingException::forAttribute()</target>
        </trans-unit>
        <trans-unit id="2a2dcb6800fff1b1c038e06e3e162a96a3c44eb6" translate="yes" xml:space="preserve">
          <source>JsonEncodingException::forModel()</source>
          <target state="translated">JsonEncodingException::forModel()</target>
        </trans-unit>
        <trans-unit id="0e73ca4d08f3a479b5b8b79e249fcec3632fb6b7" translate="yes" xml:space="preserve">
          <source>JsonEncodingException::forResource()</source>
          <target state="translated">JsonEncodingException::forResource()</target>
        </trans-unit>
        <trans-unit id="811b2e01179acfc1d29028fa7de74789cef4b689" translate="yes" xml:space="preserve">
          <source>JsonExpression</source>
          <target state="translated">JsonExpression</target>
        </trans-unit>
        <trans-unit id="d9e009a9d830cf15f58eb7411290b206f394e404" translate="yes" xml:space="preserve">
          <source>JsonExpression (Database\Query)</source>
          <target state="translated">JsonExpression (DatabaseQuery)</target>
        </trans-unit>
        <trans-unit id="8066a3e6fd649ecb30a2e4671bf8e697a2eec3a3" translate="yes" xml:space="preserve">
          <source>JsonExpression::__construct()</source>
          <target state="translated">JsonExpression::__construct()</target>
        </trans-unit>
        <trans-unit id="312c1f4bed83dc044e52bd8aecb32f6b6efaab15" translate="yes" xml:space="preserve">
          <source>JsonExpression::getJsonBindingParameter()</source>
          <target state="translated">JsonExpression::getJsonBindingParameter()</target>
        </trans-unit>
        <trans-unit id="8a9f62d49faaaad7bcfe259ddafb5477dcb99115" translate="yes" xml:space="preserve">
          <source>JsonResource</source>
          <target state="translated">JsonResource</target>
        </trans-unit>
        <trans-unit id="bf0ff8436f323d1d952c09b688d3dfc5c5251e86" translate="yes" xml:space="preserve">
          <source>JsonResource (Http\Resources)</source>
          <target state="translated">JsonResource (HttpResources)</target>
        </trans-unit>
        <trans-unit id="6533be4a32a650fa0bdc811ec0c897164869a4cb" translate="yes" xml:space="preserve">
          <source>JsonResource::__construct()</source>
          <target state="translated">JsonResource::__construct()</target>
        </trans-unit>
        <trans-unit id="36e595c5a2b2b6b3c0b4451e783bd17d8fb48351" translate="yes" xml:space="preserve">
          <source>JsonResource::additional()</source>
          <target state="translated">JsonResource::additional()</target>
        </trans-unit>
        <trans-unit id="743c7175374efbeebd2d505c887ae53e43621a0d" translate="yes" xml:space="preserve">
          <source>JsonResource::collection()</source>
          <target state="translated">JsonResource::collection()</target>
        </trans-unit>
        <trans-unit id="56c7a655b44f963a5c3ee0dc035916a2c5c57f23" translate="yes" xml:space="preserve">
          <source>JsonResource::jsonSerialize()</source>
          <target state="translated">JsonResource::jsonSerialize()</target>
        </trans-unit>
        <trans-unit id="7a446a2f361f48e7ef0766eb734c049db329a508" translate="yes" xml:space="preserve">
          <source>JsonResource::make()</source>
          <target state="translated">JsonResource::make()</target>
        </trans-unit>
        <trans-unit id="451e1c230878fdff2ecd344374174371527c4f18" translate="yes" xml:space="preserve">
          <source>JsonResource::resolve()</source>
          <target state="translated">JsonResource::resolve()</target>
        </trans-unit>
        <trans-unit id="8262608145b81bc51ae3a3b310daf50142302340" translate="yes" xml:space="preserve">
          <source>JsonResource::response()</source>
          <target state="translated">JsonResource::response()</target>
        </trans-unit>
        <trans-unit id="a85fb48abffd75ae92ed24b0ecb6b32bf42ce91a" translate="yes" xml:space="preserve">
          <source>JsonResource::toArray()</source>
          <target state="translated">JsonResource::toArray()</target>
        </trans-unit>
        <trans-unit id="25a483e5cd88aeaceddb9179218914474d4e9b41" translate="yes" xml:space="preserve">
          <source>JsonResource::toJson()</source>
          <target state="translated">JsonResource::toJson()</target>
        </trans-unit>
        <trans-unit id="735cbf412dee8a2ebe1621a5a49af85e5f79cb70" translate="yes" xml:space="preserve">
          <source>JsonResource::toResponse()</source>
          <target state="translated">JsonResource::toResponse()</target>
        </trans-unit>
        <trans-unit id="b8c4a4f350e8cc1fae7b286e42b33ab92abed612" translate="yes" xml:space="preserve">
          <source>JsonResource::with()</source>
          <target state="translated">JsonResource::with()</target>
        </trans-unit>
        <trans-unit id="e157bfa7bbb009829940291984e2eda177cb14f4" translate="yes" xml:space="preserve">
          <source>JsonResource::withResponse()</source>
          <target state="translated">JsonResource::withResponse()</target>
        </trans-unit>
        <trans-unit id="7080c5f67d99cb8d3be0210b2f687340441ec230" translate="yes" xml:space="preserve">
          <source>JsonResource::withoutWrapping()</source>
          <target state="translated">JsonResource::withoutWrapping()</target>
        </trans-unit>
        <trans-unit id="e29d637f2ea2ae0743c485a4e9ebe196b0544779" translate="yes" xml:space="preserve">
          <source>JsonResource::wrap()</source>
          <target state="translated">JsonResource::wrap()</target>
        </trans-unit>
        <trans-unit id="0ffa6db4b15f44f2c0dcd68335b85b11487d0c19" translate="yes" xml:space="preserve">
          <source>JsonResponse</source>
          <target state="translated">JsonResponse</target>
        </trans-unit>
        <trans-unit id="5f7d2ea3adbfeed4911e46f1127dae50ca162a14" translate="yes" xml:space="preserve">
          <source>JsonResponse (Http)</source>
          <target state="translated">JsonResponse (Http)</target>
        </trans-unit>
        <trans-unit id="6dafed5d1d729ea609c27f120b758441014cc6ed" translate="yes" xml:space="preserve">
          <source>JsonResponse::__construct()</source>
          <target state="translated">JsonResponse::__construct()</target>
        </trans-unit>
        <trans-unit id="83c9dab0fa0c94b2a8b637eb42ad47fde02bc4cf" translate="yes" xml:space="preserve">
          <source>JsonResponse::getData()</source>
          <target state="translated">JsonResponse::getData()</target>
        </trans-unit>
        <trans-unit id="6608c1faeb2595bc2ea11d52ec8594986029b97d" translate="yes" xml:space="preserve">
          <source>JsonResponse::hasEncodingOption()</source>
          <target state="translated">JsonResponse::hasEncodingOption()</target>
        </trans-unit>
        <trans-unit id="175705571fb8db66a0958a229025bd7b07744c4a" translate="yes" xml:space="preserve">
          <source>JsonResponse::hasValidJson()</source>
          <target state="translated">JsonResponse::hasValidJson()</target>
        </trans-unit>
        <trans-unit id="aad944b08f736de0c13780f317832c183971d61c" translate="yes" xml:space="preserve">
          <source>JsonResponse::setData()</source>
          <target state="translated">JsonResponse::setData()</target>
        </trans-unit>
        <trans-unit id="3a3138b26d6ebac6f7fba182cc6680f7ab6ae1ae" translate="yes" xml:space="preserve">
          <source>JsonResponse::setEncodingOptions()</source>
          <target state="translated">JsonResponse::setEncodingOptions()</target>
        </trans-unit>
        <trans-unit id="08716af7c24682942e947acbb9089020d5168b42" translate="yes" xml:space="preserve">
          <source>JsonResponse::withCallback()</source>
          <target state="translated">JsonResponse::withCallback()</target>
        </trans-unit>
        <trans-unit id="2ca1074e61f234f7ed88d910cce0126247cf865e" translate="yes" xml:space="preserve">
          <source>Jsonable</source>
          <target state="translated">Jsonable</target>
        </trans-unit>
        <trans-unit id="bf1070ce011474911ca16c4d8a842423c0ee4ae9" translate="yes" xml:space="preserve">
          <source>Jsonable (Contracts)</source>
          <target state="translated">Jsonable (契約書)</target>
        </trans-unit>
        <trans-unit id="e0818c1d20000521d27b09893b891d43676afe9c" translate="yes" xml:space="preserve">
          <source>Jsonable::toJson()</source>
          <target state="translated">Jsonable::toJson()</target>
        </trans-unit>
        <trans-unit id="656be1f7b067c1f222f3e00c88f45d0bf0d942d6" translate="yes" xml:space="preserve">
          <source>July 24th, 2017</source>
          <target state="translated">2017年7月24日</target>
        </trans-unit>
        <trans-unit id="919cbf9d66b6f8d79b01878d384ddf253a2d0a26" translate="yes" xml:space="preserve">
          <source>June 21st, 2016</source>
          <target state="translated">2016年6月21日</target>
        </trans-unit>
        <trans-unit id="cd81b82eed519d3094b1c5e674ccdaef43c52979" translate="yes" xml:space="preserve">
          <source>June 9th, 2015</source>
          <target state="translated">2015年6月9日に</target>
        </trans-unit>
        <trans-unit id="32f0e08b1188a643f527d26dbefb68c8ee0f8e64" translate="yes" xml:space="preserve">
          <source>June 9th, 2017</source>
          <target state="translated">2017年6月9日</target>
        </trans-unit>
        <trans-unit id="14d1d7aee95173705eff451c40974d84092451c6" translate="yes" xml:space="preserve">
          <source>June 9th, 2018</source>
          <target state="translated">2018年6月9日</target>
        </trans-unit>
        <trans-unit id="b4200d59bfef2b7b2c4438ce8be7ed39e56ecf60" translate="yes" xml:space="preserve">
          <source>Just before the view is rendered, the composer's &lt;code&gt;compose&lt;/code&gt; method is called with the &lt;code&gt;Illuminate\View\View&lt;/code&gt; instance. You may use the &lt;code&gt;with&lt;/code&gt; method to bind data to the view.</source>
          <target state="translated">ビューがレンダリングされる直前に、コンポーザーの &lt;code&gt;compose&lt;/code&gt; メソッドが &lt;code&gt;Illuminate\View\View&lt;/code&gt; インスタンスで呼び出されます。 &lt;code&gt;with&lt;/code&gt; メソッドを使用して、データをビューにバインドできます。</target>
        </trans-unit>
        <trans-unit id="d89ae689a0f8f705a7e17031f805c0b403593f94" translate="yes" xml:space="preserve">
          <source>Just like HTTP routes, channel routes may also take advantage of implicit and explicit &lt;a href=&quot;routing#route-model-binding&quot;&gt;route model binding&lt;/a&gt;. For example, instead of receiving the string or numeric order ID, you may request an actual &lt;code&gt;Order&lt;/code&gt; model instance:</source>
          <target state="translated">HTTPルートと同様に、チャネルルートも暗黙的および明示的な&lt;a href=&quot;routing#route-model-binding&quot;&gt;ルートモデルバインディングを利用でき&lt;/a&gt;ます。たとえば、文字列または数値の注文IDを受け取る代わりに、実際の &lt;code&gt;Order&lt;/code&gt; モデルインスタンスをリクエストできます。</target>
        </trans-unit>
        <trans-unit id="63265dc144907e3afa04d5c20a82e1f05d97f0ff" translate="yes" xml:space="preserve">
          <source>KEYS - The keys that represent available slots ARGV[1] - The limiter name ARGV[2] - The number of seconds the slot should be reserved</source>
          <target state="translated">KEYS-利用可能なスロットを表すキー ARGV[1]-リミッター名 ARGV[2]-スロットを予約する秒数</target>
        </trans-unit>
        <trans-unit id="01345a07eb46eeb08d7085a02d9c68f5efe0b630" translate="yes" xml:space="preserve">
          <source>KEYS - The keys that represent available slots ARGV[1] - The limiter name ARGV[2] - The number of seconds the slot should be reserved ARGV[3] - The unique identifier for this lock</source>
          <target state="translated">KEYS-利用可能なスロットを表すキー ARGV[1]-リミッター名 ARGV[2]-スロットを予約すべき秒数 ARGV[3]-このロックの一意の識別子 ARGV[3]-このロックの一意の識別子</target>
        </trans-unit>
        <trans-unit id="7fcc4160d899fe747e00a88b6f53871dd5ade945" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The &quot;delayed&quot; queue we release jobs onto, for example: queues:foo:delayed KEYS[2] - The queue the jobs are currently on, for example: queues:foo:reserved ARGV[1] - The raw payload of the job to add to the &quot;delayed&quot; queue ARGV[2] - The UNIX timestamp at which the job should become available</source>
          <target state="translated">KEYS[1]-ジョブを解放する &quot;delayed&quot; キュー、例:queues:foo:delayed KEYS[2]-ジョブが現在乗っているキュー、例:queues:foo:reserved ARGV[1]-&quot;delayed&quot; キューに追加するジョブの生のペイロード ARGV[2]-ジョブが利用可能になる UNIX タイムスタンプ</target>
        </trans-unit>
        <trans-unit id="3f6c770f2d3a5e6c0a94af408a31363229407d35" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The limiter name ARGV[1] - Current time in microseconds ARGV[2] - Current time in seconds ARGV[3] - Duration of the bucket ARGV[4] - Allowed number of tasks</source>
          <target state="translated">KEYS[1]-リミッター名 ARGV[1]-現在の時刻(マイクロ秒単位)ARGV[2]-現在の時刻(秒単位)ARGV[3]-バケットの持続時間 ARGV[4]-許容されるタスク数</target>
        </trans-unit>
        <trans-unit id="2010d43a39b0e94a68662ebba082004338f0a8b5" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The name of the lock ARGV[1] - The owner key of the lock instance trying to release it</source>
          <target state="translated">KEYS[1]-ロックの名前 ARGV[1]-ロックを解放しようとしているロックインスタンスのオーナーキー。</target>
        </trans-unit>
        <trans-unit id="2f1e6fbc0c3a1c87e357a5ea6a1b7095aa8eedfa" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The name of the lock ARGV[1] - The unique identifier for this lock</source>
          <target state="translated">KEYS[1]-ロックの名前 ARGV[1]-このロックの一意の識別子。</target>
        </trans-unit>
        <trans-unit id="43060ca0789b1fe8b940f1d272db02f599f00b8c" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The name of the primary queue KEYS[2] - The name of the &quot;delayed&quot; queue KEYS[3] - The name of the &quot;reserved&quot; queue</source>
          <target state="translated">KEYS[1]-プライマリキューの名前 KEYS[2]-&quot;delayed&quot; キューの名前 KEYS[3]-&quot;reserved&quot; キューの名前</target>
        </trans-unit>
        <trans-unit id="1a1292f7aa384bf160e3cdc6015f860521722233" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The name of the primary queue KEYS[2] - The name of the &quot;delayed&quot; queue KEYS[3] - The name of the &quot;reserved&quot; queue KEYS[4] - The name of the &quot;notify&quot; queue</source>
          <target state="translated">KEYS[1]-プライマリキューの名前 KEYS[2]-遅延キューの名前 KEYS[3]-予約キューの名前 KEYS[4]-通知キューの名前</target>
        </trans-unit>
        <trans-unit id="6b767214b9ba9c0eeeec600f3bea6c5475230399" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue to pop jobs from, for example: queues:foo KEYS[2] - The queue to place reserved jobs on, for example: queues:foo:reserved ARGV[1] - The time at which the reserved job will expire</source>
          <target state="translated">KEYS[1]-ジョブを投入するキュー,例えば queues:foo KEYS[2]-予約されたジョブを投入するキュー,例えば queues:foo:reserved ARGV[1]-予約されたジョブが終了する時刻.</target>
        </trans-unit>
        <trans-unit id="7231e5bcf4d5fe3fe324434832a3c9d6ac6f3483" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue to pop jobs from, for example: queues:foo KEYS[2] - The queue to place reserved jobs on, for example: queues:foo:reserved KEYS[3] - The notify queue ARGV[1] - The time at which the reserved job will expire</source>
          <target state="translated">KEYS[1]-ジョブを投入するキュー,例えば queues:foo KEYS[2]-予約されたジョブを投入するキュー,例えば queues:foo:reserved KEYS[3]-通知キュー ARGV[1]-予約されたジョブが終了する時間.</target>
        </trans-unit>
        <trans-unit id="ef7ee8e8b2f1e6c2a9a37d41c88977e1e913275a" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue to push the job onto, for example: queues:foo KEYS[2] - The notification list fot the queue we are pushing jobs onto, for example: queues:foo:notify ARGV[1] - The job payload</source>
          <target state="translated">KEYS[1]-ジョブをプッシュするキュー,例えば queues:foo KEYS[2]-ジョブをプッシュするキューの通知リスト,例えば queues:foo:notify ARGV[1]-ジョブのペイロード.</target>
        </trans-unit>
        <trans-unit id="bfe15a0a1fb9d5d2947c802a3137908ff54653e7" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue we are removing jobs from, for example: queues:foo:reserved KEYS[2] - The queue we are moving jobs to, for example: queues:foo ARGV[1] - The current UNIX timestamp</source>
          <target state="translated">KEYS[1]-ジョブを削除するキュー、例えば queues:foo:reserved KEYS[2]-ジョブを移動させるキュー、例えば queues:foo ARGV[1]-現在の UNIX タイムスタンプ</target>
        </trans-unit>
        <trans-unit id="292d6485dc58173936c59307300deec7b383cfa7" translate="yes" xml:space="preserve">
          <source>KEYS[1] - The queue we are removing jobs from, for example: queues:foo:reserved KEYS[2] - The queue we are moving jobs to, for example: queues:foo KEYS[3] - The notification list for the queue we are moving jobs to, for example queues:foo:notify ARGV[1] - The current UNIX timestamp</source>
          <target state="translated">KEYS[1]-ジョブを削除するキュー,例えば queues:foo:reserved KEYS[2]-ジョブを移動させるキュー,例えば queues:foo KEYS[3]-ジョブを移動させるキューの通知リスト,例えば queues:foo:notify ARGV[1]-現在の UNIX タイムスタンプ.</target>
        </trans-unit>
        <trans-unit id="913305b0b0d858cc87a22b16642d2a969b0cff82" translate="yes" xml:space="preserve">
          <source>Katana</source>
          <target state="translated">Katana</target>
        </trans-unit>
        <trans-unit id="7558734a8f08a433995abe8d660ee66e74777b96" translate="yes" xml:space="preserve">
          <source>Keep in mind that most response methods are chainable, allowing for the fluent construction of response instances. For example, you may use the &lt;code&gt;header&lt;/code&gt; method to add a series of headers to the response before sending it back to the user:</source>
          <target state="translated">ほとんどの応答メソッドは連鎖可能であり、応答インスタンスの流暢な構築を可能にすることに注意してください。たとえば、 &lt;code&gt;header&lt;/code&gt; メソッドを使用して、ユーザーに返送する前に一連のヘッダーを応答に追加できます。</target>
        </trans-unit>
        <trans-unit id="74808d3df030e992e7b9444241625147986487c1" translate="yes" xml:space="preserve">
          <source>Kernel</source>
          <target state="translated">Kernel</target>
        </trans-unit>
        <trans-unit id="86e10cfdc61e63c1f8809f3611afe3a913a4dfaf" translate="yes" xml:space="preserve">
          <source>Kernel (Contracts)</source>
          <target state="translated">カーネル(契約</target>
        </trans-unit>
        <trans-unit id="e1ac901c4a47e89bae12b2f8406192a2404f1d19" translate="yes" xml:space="preserve">
          <source>Kernel (Foundation)</source>
          <target state="translated">カーネル(基盤)</target>
        </trans-unit>
        <trans-unit id="92d9efc540e89fd56fa51375b884f858f23c9937" translate="yes" xml:space="preserve">
          <source>Kernel (Foundation\Http)</source>
          <target state="translated">カーネル(FoundationHttp)</target>
        </trans-unit>
        <trans-unit id="ab56a2eda2ac35fedd9a65272adb2b571bb26186" translate="yes" xml:space="preserve">
          <source>Kernel::__construct()</source>
          <target state="translated">Kernel::__construct()</target>
        </trans-unit>
        <trans-unit id="2f4daf56ba340265296d20213183e21756f48358" translate="yes" xml:space="preserve">
          <source>Kernel::all()</source>
          <target state="translated">Kernel::all()</target>
        </trans-unit>
        <trans-unit id="ebc451311d039479fcd84374583f0f684b6a3c63" translate="yes" xml:space="preserve">
          <source>Kernel::appendMiddlewareToGroup()</source>
          <target state="translated">Kernel::appendMiddlewareToGroup()</target>
        </trans-unit>
        <trans-unit id="6be786203545bb18024d4efab38df912685f738a" translate="yes" xml:space="preserve">
          <source>Kernel::appendToMiddlewarePriority()</source>
          <target state="translated">Kernel::appendToMiddlewarePriority()</target>
        </trans-unit>
        <trans-unit id="79759990eca956507e0517785afe542ba497ae00" translate="yes" xml:space="preserve">
          <source>Kernel::bootstrap()</source>
          <target state="translated">Kernel::bootstrap()</target>
        </trans-unit>
        <trans-unit id="9d8b1ff48b418951dad2345a40fab64946b23a23" translate="yes" xml:space="preserve">
          <source>Kernel::bootstrappers()</source>
          <target state="translated">Kernel::bootstrappers()</target>
        </trans-unit>
        <trans-unit id="df99a3f6ee1a3de3582d59a186ac7a7caa198590" translate="yes" xml:space="preserve">
          <source>Kernel::call()</source>
          <target state="translated">Kernel::call()</target>
        </trans-unit>
        <trans-unit id="c74c2983a9455c587714c541e0275fc127253409" translate="yes" xml:space="preserve">
          <source>Kernel::command()</source>
          <target state="translated">Kernel::command()</target>
        </trans-unit>
        <trans-unit id="71f4cc47c98758bf0a749fa34ae994f4aacf17cd" translate="yes" xml:space="preserve">
          <source>Kernel::commands()</source>
          <target state="translated">Kernel::commands()</target>
        </trans-unit>
        <trans-unit id="12d04169c3fe065207ccc2068ef7702e251c0245" translate="yes" xml:space="preserve">
          <source>Kernel::defineConsoleSchedule()</source>
          <target state="translated">Kernel::defineConsoleSchedule()</target>
        </trans-unit>
        <trans-unit id="ec5c895aa624134b57fa7a46b081bff8c110f454" translate="yes" xml:space="preserve">
          <source>Kernel::dispatchToRouter()</source>
          <target state="translated">Kernel::dispatchToRouter()</target>
        </trans-unit>
        <trans-unit id="1cbf2db098c3d08e0cb5f8225daa393cfa7275a4" translate="yes" xml:space="preserve">
          <source>Kernel::gatherRouteMiddleware()</source>
          <target state="translated">Kernel::gatherRouteMiddleware()</target>
        </trans-unit>
        <trans-unit id="0d4baeedee28f161712906453c52988e607676b6" translate="yes" xml:space="preserve">
          <source>Kernel::getApplication()</source>
          <target state="translated">Kernel::getApplication()</target>
        </trans-unit>
        <trans-unit id="5273b498ae2fa568b898c35567e60634ba4732c7" translate="yes" xml:space="preserve">
          <source>Kernel::getArtisan()</source>
          <target state="translated">Kernel::getArtisan()</target>
        </trans-unit>
        <trans-unit id="081ae5cdb1f4f5725c7312527bdbbf547be9ca74" translate="yes" xml:space="preserve">
          <source>Kernel::getMiddlewareGroups()</source>
          <target state="translated">Kernel::getMiddlewareGroups()</target>
        </trans-unit>
        <trans-unit id="db06a6be3d15dc176151758110f804d137daf7c5" translate="yes" xml:space="preserve">
          <source>Kernel::getRouteMiddleware()</source>
          <target state="translated">Kernel::getRouteMiddleware()</target>
        </trans-unit>
        <trans-unit id="f4c70739f828c2ce450eb2d7e68c8ec74c48369e" translate="yes" xml:space="preserve">
          <source>Kernel::handle()</source>
          <target state="translated">Kernel::handle()</target>
        </trans-unit>
        <trans-unit id="158dff28a1597378bcc930649eb4e163a1f322f4" translate="yes" xml:space="preserve">
          <source>Kernel::hasMiddleware()</source>
          <target state="translated">Kernel::hasMiddleware()</target>
        </trans-unit>
        <trans-unit id="a5900df465b80c2b2af4c6a46b5098137ff27ba1" translate="yes" xml:space="preserve">
          <source>Kernel::load()</source>
          <target state="translated">Kernel::load()</target>
        </trans-unit>
        <trans-unit id="f7504bd021df8fc8d1865dccf690f8bbc521b427" translate="yes" xml:space="preserve">
          <source>Kernel::output()</source>
          <target state="translated">Kernel::output()</target>
        </trans-unit>
        <trans-unit id="b142117176bdf97b7bea64697613b6fc44fa574e" translate="yes" xml:space="preserve">
          <source>Kernel::parseMiddleware()</source>
          <target state="translated">Kernel::parseMiddleware()</target>
        </trans-unit>
        <trans-unit id="05d774f1101fd0b6bd85f3995325fbc0490c84b1" translate="yes" xml:space="preserve">
          <source>Kernel::prependMiddleware()</source>
          <target state="translated">Kernel::prependMiddleware()</target>
        </trans-unit>
        <trans-unit id="6d296cb40137b688d1c45097e37602e6f5b1466e" translate="yes" xml:space="preserve">
          <source>Kernel::prependMiddlewareToGroup()</source>
          <target state="translated">Kernel::prependMiddlewareToGroup()</target>
        </trans-unit>
        <trans-unit id="d4c011caafa508ea26507f4f69a2d89ad2ff1f89" translate="yes" xml:space="preserve">
          <source>Kernel::prependToMiddlewarePriority()</source>
          <target state="translated">Kernel::prependToMiddlewarePriority()</target>
        </trans-unit>
        <trans-unit id="53ffc27f65e3372c4f3b1937c00016003c645c3f" translate="yes" xml:space="preserve">
          <source>Kernel::pushMiddleware()</source>
          <target state="translated">Kernel::pushMiddleware()</target>
        </trans-unit>
        <trans-unit id="e8e3f21ae4033f4e7cd4d97110a82c73831d4aab" translate="yes" xml:space="preserve">
          <source>Kernel::queue()</source>
          <target state="translated">Kernel::queue()</target>
        </trans-unit>
        <trans-unit id="b0b52cbeae696880fa2faf7fc90d0bb35a062df1" translate="yes" xml:space="preserve">
          <source>Kernel::registerCommand()</source>
          <target state="translated">Kernel::registerCommand()</target>
        </trans-unit>
        <trans-unit id="b8cef619377fea191daba496718c486ac21c7c1c" translate="yes" xml:space="preserve">
          <source>Kernel::renderException()</source>
          <target state="translated">Kernel::renderException()</target>
        </trans-unit>
        <trans-unit id="214f0ca94256914f4fd9546705a1bcd0b5a47dcc" translate="yes" xml:space="preserve">
          <source>Kernel::reportException()</source>
          <target state="translated">Kernel::reportException()</target>
        </trans-unit>
        <trans-unit id="1df80bd14d0de26a223b9f237e6c5322ee4db527" translate="yes" xml:space="preserve">
          <source>Kernel::schedule()</source>
          <target state="translated">Kernel::schedule()</target>
        </trans-unit>
        <trans-unit id="d9cca197c5052f388fa8449447e1a6d1e77e90b8" translate="yes" xml:space="preserve">
          <source>Kernel::scheduleCache()</source>
          <target state="translated">Kernel::scheduleCache()</target>
        </trans-unit>
        <trans-unit id="c04a97cd6d6e6a9e05f79d16cd39f44ff0534616" translate="yes" xml:space="preserve">
          <source>Kernel::scheduleTimezone()</source>
          <target state="translated">Kernel::scheduleTimezone()</target>
        </trans-unit>
        <trans-unit id="0f8947639139eb71f3cf0fd662cecdf229e3a736" translate="yes" xml:space="preserve">
          <source>Kernel::sendRequestThroughRouter()</source>
          <target state="translated">Kernel::sendRequestThroughRouter()</target>
        </trans-unit>
        <trans-unit id="07c25448ce20403587774ed962918cb5ce9a173f" translate="yes" xml:space="preserve">
          <source>Kernel::setArtisan()</source>
          <target state="translated">Kernel::setArtisan()</target>
        </trans-unit>
        <trans-unit id="8c63527a39a2ba04e964df674a8ac8132e616f4a" translate="yes" xml:space="preserve">
          <source>Kernel::syncMiddlewareToRouter()</source>
          <target state="translated">Kernel::syncMiddlewareToRouter()</target>
        </trans-unit>
        <trans-unit id="65357f39adf91c65feefb9b9fc87de53784a9cfb" translate="yes" xml:space="preserve">
          <source>Kernel::terminate()</source>
          <target state="translated">Kernel::terminate()</target>
        </trans-unit>
        <trans-unit id="146222f9669544040c3f999bacb88c95c5efe9ca" translate="yes" xml:space="preserve">
          <source>Kernel::terminateMiddleware()</source>
          <target state="translated">Kernel::terminateMiddleware()</target>
        </trans-unit>
        <trans-unit id="316e3616e1c6f94c56aba74bbee07ed40242f04e" translate="yes" xml:space="preserve">
          <source>Key / File Conflicts</source>
          <target state="translated">キー/ファイルの競合</target>
        </trans-unit>
        <trans-unit id="ad6e6aa82ee776b4c0b8d1d39a35f83ea53e50c4" translate="yes" xml:space="preserve">
          <source>Key an associative array by a field or using a callback.</source>
          <target state="translated">フィールドまたはコールバックを使用して連想配列をキーにします。</target>
        </trans-unit>
        <trans-unit id="3478d2b6419d817fe0a38a96786cd92f627981ee" translate="yes" xml:space="preserve">
          <source>KeyForgotten</source>
          <target state="translated">KeyForgotten</target>
        </trans-unit>
        <trans-unit id="cc9c3d21fc7325f4491511f42bcf0f7a35f8a78e" translate="yes" xml:space="preserve">
          <source>KeyForgotten (Cache\Events)</source>
          <target state="translated">KeyForgotten (CacheEvents)</target>
        </trans-unit>
        <trans-unit id="72519e9cc0a02681b1c017645bed03c271d0f022" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand</source>
          <target state="translated">KeyGenerateCommand</target>
        </trans-unit>
        <trans-unit id="3a84b356c3ccc05fe3ace8905d95c5000c73d5f6" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand (Foundation)</source>
          <target state="translated">KeyGenerateCommand (Foundation)</target>
        </trans-unit>
        <trans-unit id="8214c9e67b883832aef50e5ce31fd9b866b06c0c" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::generateRandomKey()</source>
          <target state="translated">KeyGenerateCommand::generateRandomKey()</target>
        </trans-unit>
        <trans-unit id="df66f5722f9548d9a4a495d7e16a48dc406ccfb5" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::handle()</source>
          <target state="translated">KeyGenerateCommand::handle()</target>
        </trans-unit>
        <trans-unit id="adcf8e7a89959ee5c8b989fc9d07992790dcc852" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::keyReplacementPattern()</source>
          <target state="translated">KeyGenerateCommand::keyReplacementPattern()</target>
        </trans-unit>
        <trans-unit id="0721d8efc7b7987502aacbeae82c54b2c8608def" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::setKeyInEnvironmentFile()</source>
          <target state="translated">KeyGenerateCommand::setKeyInEnvironmentFile()</target>
        </trans-unit>
        <trans-unit id="2592f374bd11343b68bc3b52b34a4acb46409123" translate="yes" xml:space="preserve">
          <source>KeyGenerateCommand::writeNewEnvironmentFileWith()</source>
          <target state="translated">KeyGenerateCommand::writeNewEnvironmentFileWith()</target>
        </trans-unit>
        <trans-unit id="b0fdeb74247d886c908667c3cb0e64fe302e2d08" translate="yes" xml:space="preserve">
          <source>KeyWritten</source>
          <target state="translated">KeyWritten</target>
        </trans-unit>
        <trans-unit id="d2276767dc2aca4c0611f0c925e97325cb2b0c1d" translate="yes" xml:space="preserve">
          <source>KeyWritten (Cache\Events)</source>
          <target state="translated">KeyWritten (CacheEvents)</target>
        </trans-unit>
        <trans-unit id="c0d86865e71b355418eb2d4a7d42974bcbb85e10" translate="yes" xml:space="preserve">
          <source>KeyWritten::__construct()</source>
          <target state="translated">KeyWritten::__construct()</target>
        </trans-unit>
        <trans-unit id="cba8ddc5884a500606a59bdf9f014a6821ae2a55" translate="yes" xml:space="preserve">
          <source>Kill the process.</source>
          <target state="translated">プロセスを殺す。</target>
        </trans-unit>
        <trans-unit id="841935e1ecb1a09aa7c0cf551d23ebf57fa0239e" translate="yes" xml:space="preserve">
          <source>Kirby</source>
          <target state="translated">Kirby</target>
        </trans-unit>
        <trans-unit id="e048fd121d36d52d9b005a05a25bffe850a1a70a" translate="yes" xml:space="preserve">
          <source>LINESTRING equivalent column.</source>
          <target state="translated">LINESTRING等価列。</target>
        </trans-unit>
        <trans-unit id="da943ffa11a09eba4de9bf0947fb0f90130279ab" translate="yes" xml:space="preserve">
          <source>LONGTEXT equivalent column.</source>
          <target state="translated">LONGTEXT相当のカラム。</target>
        </trans-unit>
        <trans-unit id="769c96075047fae57552577a9a43bb6ecdf288f5" translate="yes" xml:space="preserve">
          <source>Lang</source>
          <target state="translated">Lang</target>
        </trans-unit>
        <trans-unit id="1ccebe10a10c153e3ca56b41f3a02faa7d3b24f5" translate="yes" xml:space="preserve">
          <source>Lang (Support\Facades)</source>
          <target state="translated">Lang (SupportFacades)</target>
        </trans-unit>
        <trans-unit id="c82c37cd108c59b6f8cd67ffe9479bba17fa935a" translate="yes" xml:space="preserve">
          <source>Lang::getFacadeAccessor()</source>
          <target state="translated">Lang::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="a81dc2433d03d0d120699c6886be74bfb75a5897" translate="yes" xml:space="preserve">
          <source>Laracasts Forums</source>
          <target state="translated">ララカーストフォーラム</target>
        </trans-unit>
        <trans-unit id="271124d94f955ff5afb80bd3db0303c1c33e9829" translate="yes" xml:space="preserve">
          <source>Larachat</source>
          <target state="translated">Larachat</target>
        </trans-unit>
        <trans-unit id="e31cfe3eb5d13086108730689c08cf77e07a5481" translate="yes" xml:space="preserve">
          <source>Laravel</source>
          <target state="translated">Laravel</target>
        </trans-unit>
        <trans-unit id="902f71cfe5c8e2dc8334d52dcc4d2a07b82c71ca" translate="yes" xml:space="preserve">
          <source>Laravel 5.7</source>
          <target state="translated">Laravel 5.7</target>
        </trans-unit>
        <trans-unit id="036312081986f72d6c770d1cbe9385d32eafcb8b" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 allows you to control how many additional links are displayed on each side of the paginator's URL &quot;window&quot;. By default, three links are displayed on each side of the primary paginator links. However, you may control this number using the &lt;code&gt;onEachSide&lt;/code&gt; method:</source>
          <target state="translated">Laravel 5.7では、ページ編集者のURL「ウィンドウ」の両側に表示される追加リンクの数を制御できます。デフォルトでは、主なページネーションリンクの両側に3つのリンクが表示されます。ただし、 &lt;code&gt;onEachSide&lt;/code&gt; メソッドを使用してこの数を制御できます。</target>
        </trans-unit>
        <trans-unit id="3e810633db5a2ff11766c32f8d773b2066943490" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 allows you to easily &quot;mock&quot; user input for your console commands using the &lt;code&gt;expectsQuestion&lt;/code&gt; method. In addition, you may specify the exit code and text that you expect to be output by the console command using the &lt;code&gt;assertExitCode&lt;/code&gt; and &lt;code&gt;expectsOutput&lt;/code&gt; methods. For example, consider the following console command:</source>
          <target state="translated">Laravel 5.7では、 &lt;code&gt;expectsQuestion&lt;/code&gt; メソッドを使用して、コンソールコマンドのユーザー入力を簡単に「模擬」できます。また、あなたが使ってコンソールコマンドで出力されることを期待していること終了コードとテキストを指定することができ &lt;code&gt;assertExitCode&lt;/code&gt; と &lt;code&gt;expectsOutput&lt;/code&gt; 方法を。たとえば、次のコンソールコマンドを考えてみます。</target>
        </trans-unit>
        <trans-unit id="dcde1734048ab37ac1702169084c73acdc953321" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 continues the improvements made in Laravel 5.6 by introducing &lt;a href=&quot;https://nova.laravel.com&quot;&gt;Laravel Nova&lt;/a&gt;, optional email verification to the authentication scaffolding, support for guest users in authorization gates and policies, console testing improvements, Symfony &lt;code&gt;dump-server&lt;/code&gt; integration, localizable notifications, and a variety of other bug fixes and usability improvements.</source>
          <target state="translated">Laravel 5.7は、&lt;a href=&quot;https://nova.laravel.com&quot;&gt;Laravel Novaを&lt;/a&gt;導入することにより、Laravel 5.6で行われた改善を継続します。オプションで、認証スキャフォールディングへのメール検証、承認ゲートとポリシーでのゲストユーザーのサポート、コンソールテストの改善、Symfony &lt;code&gt;dump-server&lt;/code&gt; 統合、ローカライズ可能な通知、およびその他のさまざまなバグ修正とユーザビリティの改善。</target>
        </trans-unit>
        <trans-unit id="b0cb411b4f2a056d1796bd94cb29732c37a77940" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 introduces optional email verification to the authentication scaffolding included with the framework. To accommodate this feature, an &lt;code&gt;email_verified_at&lt;/code&gt; timestamp column has been added to the default &lt;code&gt;users&lt;/code&gt; table migration that is included with the framework.</source>
          <target state="translated">Laravel 5.7では、フレームワークに含まれている認証スキャフォールディングにオプションの電子メール検証が導入されています。この機能に対応するために、フレームワークに含まれているデフォルトの &lt;code&gt;users&lt;/code&gt; テーブルの移行に &lt;code&gt;email_verified_at&lt;/code&gt; タイムスタンプ列が追加されました。</target>
        </trans-unit>
        <trans-unit id="fecb868cb396fa00c27ae92fd87a67ebc56226eb" translate="yes" xml:space="preserve">
          <source>Laravel 5.7 offers integration with Symfony's &lt;code&gt;dump-server&lt;/code&gt; command via &lt;a href=&quot;https://github.com/beyondcode/laravel-dump-server&quot;&gt;a package by Marcel Pociot&lt;/a&gt;. To get started, run the &lt;code&gt;dump-server&lt;/code&gt; Artisan command:</source>
          <target state="translated">Laravel 5.7は&lt;a href=&quot;https://github.com/beyondcode/laravel-dump-server&quot;&gt;、Marcel Pociotによるパッケージ&lt;/a&gt;を介してSymfonyの &lt;code&gt;dump-server&lt;/code&gt; コマンドとの統合を提供します。開始するには、 &lt;code&gt;dump-server&lt;/code&gt; Artisanコマンドを実行します。</target>
        </trans-unit>
        <trans-unit id="d7f3ec58067e6777c38aa5621955f95bcec2474d" translate="yes" xml:space="preserve">
          <source>Laravel 8</source>
          <target state="translated">Laravel 8</target>
        </trans-unit>
        <trans-unit id="80ba65e1f21e2c022308a6d04ffea00dc0d24543" translate="yes" xml:space="preserve">
          <source>Laravel 8 continues the improvements made in Laravel 7.x by introducing Laravel Jetstream, model factory classes, migration squashing, job batching, improved rate limiting, queue improvements, dynamic Blade components, Tailwind pagination views, time testing helpers, improvements to &lt;code&gt;artisan serve&lt;/code&gt;, event listener improvements, and a variety of other bug fixes and usability improvements.</source>
          <target state="translated">Laravel 8は、Laravel Jetstream、モデルファクトリクラス、移行スカッシュ、ジョブバッチ処理、レート制限の改善、キューの改善、動的ブレードコンポーネント、Tailwindページネーションビュー、時間テストヘルパー、 &lt;code&gt;artisan serve&lt;/code&gt; 改善を導入することにより、Laravel7.xで行われた改善を継続します。イベントリスナーの改善、およびその他のさまざまなバグ修正と使いやすさの改善。</target>
        </trans-unit>
        <trans-unit id="46cbecd8c61a9190b6721ed95c4e139b3e0cc706" translate="yes" xml:space="preserve">
          <source>Laravel Application</source>
          <target state="translated">Laravelのアプリケーション</target>
        </trans-unit>
        <trans-unit id="914fa57baae34b06ca80f5c139347d15d08b5566" translate="yes" xml:space="preserve">
          <source>Laravel Art</source>
          <target state="translated">Laravelのアート</target>
        </trans-unit>
        <trans-unit id="b44663c9252ba53d55e3aaaeddd64714121fab68" translate="yes" xml:space="preserve">
          <source>Laravel Cashier</source>
          <target state="translated">ララベルのキャッシャー</target>
        </trans-unit>
        <trans-unit id="a3ca9fd52f94ea571943968546a6b8a7ac09abd6" translate="yes" xml:space="preserve">
          <source>Laravel Cashier Paddle</source>
          <target state="translated">ララベルキャッシャーパドル</target>
        </trans-unit>
        <trans-unit id="74e427d36dc41cecff1a9a470423292a733d2f7e" translate="yes" xml:space="preserve">
          <source>Laravel Cashier Paddle provides an expressive, fluent interface to &lt;a href=&quot;https://paddle.com&quot;&gt;Paddle's&lt;/a&gt; subscription billing services. It handles almost all of the boilerplate subscription billing code you are dreading. In addition to basic subscription management, Cashier can handle: coupons, swapping subscription, subscription &quot;quantities&quot;, cancellation grace periods, and more.</source>
          <target state="translated">Laravel Cashier Paddleは、&lt;a href=&quot;https://paddle.com&quot;&gt;Paddleの&lt;/a&gt;サブスクリプション課金サービスへの表現力豊かで流暢なインターフェースを提供します。それはあなたが恐れている定型的なサブスクリプション請求コードのほとんどすべてを処理します。基本的なサブスクリプション管理に加えて、キャッシャーは、クーポン、スワッピングサブスクリプション、サブスクリプションの「数量」、キャンセル猶予期間などを処理できます。</target>
        </trans-unit>
        <trans-unit id="6cc8565ec5192698a3f07cd52a221bd7c09e4b6b" translate="yes" xml:space="preserve">
          <source>Laravel Cashier Stripe</source>
          <target state="translated">ララベルキャッシャーストライプ</target>
        </trans-unit>
        <trans-unit id="6004e25a139ac001eb2fd37d3cce0161326d13bb" translate="yes" xml:space="preserve">
          <source>Laravel Cashier for Braintree</source>
          <target state="translated">ブレインツリーのLaravelキャッシャー</target>
        </trans-unit>
        <trans-unit id="9bf428eaf46107babfc26892ab9aa77788aa3eb2" translate="yes" xml:space="preserve">
          <source>Laravel Cashier provides an expressive, fluent interface to &lt;a href=&quot;https://stripe.com&quot;&gt;Stripe's&lt;/a&gt; and &lt;a href=&quot;https://www.braintreepayments.com&quot;&gt;Braintree's&lt;/a&gt; subscription billing services. It handles almost all of the boilerplate subscription billing code you are dreading writing. In addition to basic subscription management, Cashier can handle coupons, swapping subscription, subscription &quot;quantities&quot;, cancellation grace periods, and even generate invoice PDFs.</source>
          <target state="translated">Laravel Cashierは、&lt;a href=&quot;https://stripe.com&quot;&gt;Stripe&lt;/a&gt;と&lt;a href=&quot;https://www.braintreepayments.com&quot;&gt;Braintreeの&lt;/a&gt;サブスクリプション請求サービスに表現力豊かで流暢なインターフェースを提供します。それはあなたが書いているのを恐れているボイラープレート購読請求コードのほとんどすべてを処理します。キャッシャーは、基本的なサブスクリプション管理に加えて、クーポン、サブスクリプションの交換、サブスクリプションの「数量」、キャンセルの猶予期間を処理し、請求書PDFを生成することもできます。</target>
        </trans-unit>
        <trans-unit id="a4d51f3afa38e8ae1fd6618f5e03e72d1282aa21" translate="yes" xml:space="preserve">
          <source>Laravel Cashier provides an expressive, fluent interface to &lt;a href=&quot;https://stripe.com&quot;&gt;Stripe's&lt;/a&gt; subscription billing services. It handles almost all of the boilerplate subscription billing code you are dreading writing. In addition to basic subscription management, Cashier can handle coupons, swapping subscription, subscription &quot;quantities&quot;, cancellation grace periods, and even generate invoice PDFs.</source>
          <target state="translated">Laravel Cashierは、&lt;a href=&quot;https://stripe.com&quot;&gt;Stripeの&lt;/a&gt;サブスクリプション課金サービスへの表現力豊かで流暢なインターフェースを提供します。それはあなたが書くことを恐れている定型的なサブスクリプション請求コードのほとんどすべてを処理します。キャッシャーは、基本的なサブスクリプション管理に加えて、クーポン、サブスクリプションの交換、サブスクリプションの「数量」、キャンセルの猶予期間を処理し、請求書のPDFを生成することもできます。</target>
        </trans-unit>
        <trans-unit id="c6f26c9ef1ac0cd62ab5e99290dd43754e637649" translate="yes" xml:space="preserve">
          <source>Laravel Documentation</source>
          <target state="translated">Laravelのドキュメント</target>
        </trans-unit>
        <trans-unit id="75a39e3830657d022b47e95b5bab7634ae6eb367" translate="yes" xml:space="preserve">
          <source>Laravel Dusk</source>
          <target state="translated">ララベルの夕暮れ</target>
        </trans-unit>
        <trans-unit id="94f79c81502626882f071d63e0357190eeea91e9" translate="yes" xml:space="preserve">
          <source>Laravel Dusk provides an expressive, easy-to-use browser automation and testing API. By default, Dusk does not require you to install JDK or Selenium on your machine. Instead, Dusk uses a standalone &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/home&quot;&gt;ChromeDriver&lt;/a&gt; installation. However, you are free to utilize any other Selenium compatible driver you wish.</source>
          <target state="translated">Laravel Duskは、表現力豊かで使いやすいブラウザの自動化とテストAPIを提供します。Duskのデフォルトでは、マシンにJDKまたはSeleniumをインストールする必要はありません。代わりに、Duskはスタンドアロンの&lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/home&quot;&gt;ChromeDriver&lt;/a&gt;インストールを使用します。ただし、必要に応じて他のSelenium互換ドライバを自由に利用できます。</target>
        </trans-unit>
        <trans-unit id="0ba50192d9b01a89f651acfa57a1d9f6e2d72a8f" translate="yes" xml:space="preserve">
          <source>Laravel Echo</source>
          <target state="translated">ララベルエコー</target>
        </trans-unit>
        <trans-unit id="2dc8903016c63bd6db221025cbc4b6a58a657418" translate="yes" xml:space="preserve">
          <source>Laravel Echo is a JavaScript library that makes it painless to subscribe to channels and listen for events broadcast by Laravel. You may install Echo via the NPM package manager. In this example, we will also install the &lt;code&gt;pusher-js&lt;/code&gt; package since we will be using the Pusher Channels broadcaster:</source>
          <target state="translated">Laravel Echoは、チャンネルをサブスクライブしたり、Laravelによってブロードキャストされたイベントを聞いたりするのを簡単にするJavaScriptライブラリです。 NPMパッケージマネージャーを介してEchoをインストールできます。この例では、Pusher Channelsブロードキャスターを使用するため、 &lt;code&gt;pusher-js&lt;/code&gt; パッケージもインストールします。</target>
        </trans-unit>
        <trans-unit id="0545a256a935263ebb9f729daaaabbffb45ba99e" translate="yes" xml:space="preserve">
          <source>Laravel Echo is a JavaScript library that makes it painless to subscribe to channels and listen for events broadcast by Laravel. You may install Echo via the NPM package manager. In this example, we will also install the &lt;code&gt;pusher-js&lt;/code&gt; package since we will be using the Pusher broadcaster:</source>
          <target state="translated">Laravel EchoはJavaScriptライブラリで、チャンネル登録やLaravelによるブロードキャストイベントのリスニングを簡単に行うことができます。EchoはNPMパッケージマネージャーからインストールできます。この例では、Pusherブロードキャスターを使用するため、 &lt;code&gt;pusher-js&lt;/code&gt; パッケージもインストールします。</target>
        </trans-unit>
        <trans-unit id="0b676284b2192c9060cbc8d9a4e4bdc89d6228b9" translate="yes" xml:space="preserve">
          <source>Laravel Envoy</source>
          <target state="translated">Laravel Envoy</target>
        </trans-unit>
        <trans-unit id="961e56c4f87d78aa00777b98b50434f971f93e39" translate="yes" xml:space="preserve">
          <source>Laravel Forge can create servers on various infrastructure providers such as DigitalOcean, Linode, AWS, and more. In addition, Forge installs and manages all of the tools needed to build robust Laravel applications, such as Nginx, MySQL, Redis, Memcached, Beanstalk, and more.</source>
          <target state="translated">Laravel Forgeは、DigitalOcean、Linode、AWSなどの様々なインフラプロバイダ上にサーバーを作成することができます。さらに、ForgeはNginx、MySQL、Redis、Memcached、Beanstalkなど、堅牢なLaravelアプリケーションを構築するために必要なすべてのツールをインストールして管理します。</target>
        </trans-unit>
        <trans-unit id="4d00973c2780970bab71d03023a6d01cf75061e7" translate="yes" xml:space="preserve">
          <source>Laravel Fortify is a headless authentication backend for Laravel that implements many of the features found in this documentation, including cookie-based authentication as well as other features such as two-factor authentication and email verification. Laravel Jetstream is a UI that consumes and exposes Fortify's authentication services with a beautiful, modern UI powered by &lt;a href=&quot;https://tailwindcss.com&quot;&gt;Tailwind CSS&lt;/a&gt;, &lt;a href=&quot;https://laravel-livewire.com&quot;&gt;Laravel Livewire&lt;/a&gt;, and / or &lt;a href=&quot;https://inertiajs.com&quot;&gt;Inertia.js&lt;/a&gt;. Laravel Jetstream, in addition to offering browser-based cookie authentication, includes built-in integration with Laravel Sanctum to offer API token authentication. Laravel's API authentication offerings are discussed below.</source>
          <target state="translated">Laravel Fortifyは、Laravelのヘッドレス認証バックエンドであり、Cookieベースの認証や、2要素認証や電子メール検証などの他の機能など、このドキュメントに記載されている機能の多くを実装しています。 Laravel Jetstreamは、&lt;a href=&quot;https://inertiajs.com&quot;&gt;Tailwind &lt;/a&gt;&lt;a href=&quot;https://tailwindcss.com&quot;&gt;CSS&lt;/a&gt;、&lt;a href=&quot;https://laravel-livewire.com&quot;&gt;Laravel Livewire&lt;/a&gt;、および/またはInertia.jsを搭載した美しくモダンなUIを使用して、Fortifyの認証サービスを利用および公開するUIです。 Laravel Jetstreamは、ブラウザーベースのCookie認証を提供することに加えて、APIトークン認証を提供するためのLaravelSanctumとの組み込み統合を含みます。 LaravelのAPI認証製品について以下で説明します。</target>
        </trans-unit>
        <trans-unit id="d16a4484bd4f20a2d3eecc3c12054c897df861fd" translate="yes" xml:space="preserve">
          <source>Laravel Framework</source>
          <target state="translated">Laravelフレームワーク</target>
        </trans-unit>
        <trans-unit id="8a326fbf15fc3140677ebeee315232d095fdba65" translate="yes" xml:space="preserve">
          <source>Laravel Homestead</source>
          <target state="translated">ララベルホームステッド</target>
        </trans-unit>
        <trans-unit id="78d0aaa06bd54efe39d9f43ed90a03b16bcce25b" translate="yes" xml:space="preserve">
          <source>Laravel Homestead Build Scripts</source>
          <target state="translated">Laravelのホームステッドビルドスクリプト</target>
        </trans-unit>
        <trans-unit id="627a5d09bf3106ed29d9a934169a3fa33027a42a" translate="yes" xml:space="preserve">
          <source>Laravel Homestead is an official, pre-packaged Vagrant box that provides you a wonderful development environment without requiring you to install PHP, a web server, and any other server software on your local machine. No more worrying about messing up your operating system! Vagrant boxes are completely disposable. If something goes wrong, you can destroy and re-create the box in minutes!</source>
          <target state="translated">Laravel Homesteadは、ローカルマシンにPHPやWebサーバーなどのサーバーソフトをインストールする必要がなく、素晴らしい開発環境を提供してくれる公式のプリパッケージVagrantボックスです。もうOSを台無しにする心配はありません! Vagrantボックスは完全に使い捨てです。何か問題が起きても、数分でボックスを破棄して作り直すことができます!</target>
        </trans-unit>
        <trans-unit id="51fb81eb322f7245c32af66e128b99bc2e012f71" translate="yes" xml:space="preserve">
          <source>Laravel Horizon</source>
          <target state="translated">ララベルホライゾン</target>
        </trans-unit>
        <trans-unit id="970e7a870221b3eadd2ca663ed2bfb12fd867149" translate="yes" xml:space="preserve">
          <source>Laravel Jetstream</source>
          <target state="translated">Laravel ジェットストリーム</target>
        </trans-unit>
        <trans-unit id="8345819947a17ecc93637eab47154c3013b4be58" translate="yes" xml:space="preserve">
          <source>Laravel Mix</source>
          <target state="translated">ララベルミックス</target>
        </trans-unit>
        <trans-unit id="6c7873a657fabdbbd8fd485c16224ab5edfcc5a3" translate="yes" xml:space="preserve">
          <source>Laravel Nova</source>
          <target state="translated">ララベルノヴァ</target>
        </trans-unit>
        <trans-unit id="b07391682104453d6fc2ec8b3a03bd5facbd6ce5" translate="yes" xml:space="preserve">
          <source>Laravel Passport</source>
          <target state="translated">ララベルパスポート</target>
        </trans-unit>
        <trans-unit id="ac92bdd344f4ba5b41cc85e1c75455376101542e" translate="yes" xml:space="preserve">
          <source>Laravel REPL</source>
          <target state="translated">Laravel REPL</target>
        </trans-unit>
        <trans-unit id="e4d30790606b3b56daac3c474bf624946dc27801" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum</source>
          <target state="translated">ララベルサンクタム</target>
        </trans-unit>
        <trans-unit id="983c91e9d97454e4b31cabb4807525cfa966dcdc" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum exists to solve two separate problems.</source>
          <target state="translated">Laravel Sanctumは2つの別々の問題を解決するために存在します。</target>
        </trans-unit>
        <trans-unit id="0e18e22492f68c714f345b4d7c555fea2d245a78" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum is a hybrid web / API authentication package that can manage your application's entire authentication process. This is possible because when Sanctum based applications receive a request, Sanctum will first determine if the request includes a session cookie that references an authenticated session. Sanctum accomplishes this by calling Laravel's built-in authentication services which we discussed earlier. If the request is not being authenticated via a session cookie, Sanctum will inspect the request for an API token. If an API token is present, Sanctum will authenticate the request using that token. To learn more about this process, please consult Sanctum's &lt;a href=&quot;sanctum#how-it-works&quot;&gt;&quot;how it works&quot;&lt;/a&gt; documentation.</source>
          <target state="translated">Laravel Sanctumは、アプリケーションの認証プロセス全体を管理できるWeb / APIハイブリッド認証パッケージです。これが可能なのは、Sanctumベースのアプリケーションがリクエストを受信すると、Sanctumは最初に、認証されたセッションを参照するセッションCookieがリクエストに含まれているかどうかを判断するためです。 Sanctumは、前に説明したLaravelの組み込み認証サービスを呼び出すことでこれを実現します。リクエストがセッションCookieを介して認証されていない場合、SanctumはリクエストのAPIトークンを検査します。 APIトークンが存在する場合、Sanctumはそのトークンを使用してリクエストを認証します。このプロセスの詳細については、Sanctumの&lt;a href=&quot;sanctum#how-it-works&quot;&gt;「仕組み」の&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="9c9b2f96c2cc08bef7b90e0cd3c8dd6d9042669c" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum is the API package we have chosen to include with the &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt; authentication scaffolding because we believe it is the best fit for the majority of web application's authentication needs.</source>
          <target state="translated">Laravel Sanctumは、&lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;認証スキャフォールディングに含めることを選択したAPIパッケージです。これは、Webアプリケーションの認証ニーズの大部分に最適であると確信しているためです。</target>
        </trans-unit>
        <trans-unit id="fccaa94f9ef3901e6ec5a93f9440f98353f1def0" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum offers this feature by storing user API tokens in a single database table and authenticating incoming requests via the &lt;code&gt;Authorization&lt;/code&gt; header which should contain a valid API token.</source>
          <target state="translated">Laravel Sanctumは、ユーザーAPIトークンを単一のデータベーステーブルに格納し、有効なAPIトークンを含む必要がある &lt;code&gt;Authorization&lt;/code&gt; ヘッダーを介して着信リクエストを認証することにより、この機能を提供します。</target>
        </trans-unit>
        <trans-unit id="0f23e2fdf5d4c591346b56e1b29a6f4496d96f02" translate="yes" xml:space="preserve">
          <source>Laravel Sanctum provides a featherweight authentication system for SPAs (single page applications), mobile applications, and simple, token based APIs. Sanctum allows each user of your application to generate multiple API tokens for their account. These tokens may be granted abilities / scopes which specify which actions the tokens are allowed to perform.</source>
          <target state="translated">Laravel Sanctumは、SPA(シングルページアプリケーション)、モバイルアプリケーション、シンプルなトークンベースのAPI用のフェザー級認証システムです。Sanctumは、アプリケーションの各ユーザーがアカウント用に複数のAPIトークンを生成することを可能にします。これらのトークンは、トークンが実行することができるアクションを指定する能力/スコープを付与することができます。</target>
        </trans-unit>
        <trans-unit id="fd02bd410a136f60131beb3beb8a81d9e3ad7ba6" translate="yes" xml:space="preserve">
          <source>Laravel Scout</source>
          <target state="translated">ララベルスカウト</target>
        </trans-unit>
        <trans-unit id="d961dc7abd234e4fed4f04d1c44b67e1595df2d3" translate="yes" xml:space="preserve">
          <source>Laravel Scout provides a simple, driver based solution for adding full-text search to your &lt;a href=&quot;eloquent&quot;&gt;Eloquent models&lt;/a&gt;. Using model observers, Scout will automatically keep your search indexes in sync with your Eloquent records.</source>
          <target state="translated">Laravel Scoutは、&lt;a href=&quot;eloquent&quot;&gt;Eloquentモデルに&lt;/a&gt;全文検索を追加するためのシンプルなドライバーベースのソリューションを提供します。Scoutはモデルオブザーバーを使用して、検索インデックスをEloquentレコードと自動的に同期させます。</target>
        </trans-unit>
        <trans-unit id="01a9cb16b341be7fb519b72c2da79b5667020042" translate="yes" xml:space="preserve">
          <source>Laravel Socialite</source>
          <target state="translated">ララベル社交界</target>
        </trans-unit>
        <trans-unit id="9aa3c72bdbc91dbf0870b4f840f9bf9b52c319a9" translate="yes" xml:space="preserve">
          <source>Laravel Telescope</source>
          <target state="translated">ララベル望遠鏡</target>
        </trans-unit>
        <trans-unit id="64e8a550c9b129843911123e1a26dea469435f65" translate="yes" xml:space="preserve">
          <source>Laravel Telescope is an elegant debug assistant for the Laravel framework. Telescope provides insight into the requests coming into your application, exceptions, log entries, database queries, queued jobs, mail, notifications, cache operations, scheduled tasks, variable dumps and more. Telescope makes a wonderful companion to your local Laravel development environment.</source>
          <target state="translated">Laravel Telescopeは、Laravelフレームワークのためのエレガントなデバッグアシスタントです。Telescopeは、アプリケーションに入ってくるリクエスト、例外、ログエントリ、データベースクエリ、キューイングされたジョブ、メール、通知、キャッシュ操作、スケジュールされたタスク、変数ダンプなどの情報を提供します。Telescopeは、ローカルのLaravel開発環境の素晴らしい仲間になります。</target>
        </trans-unit>
        <trans-unit id="f362a21ba1f11df8fcc97e79c0cf0db2aaabf9e6" translate="yes" xml:space="preserve">
          <source>Laravel Tinker is a powerful REPL for the Laravel framework, powered by the &lt;a href=&quot;https://github.com/bobthecow/psysh&quot;&gt;PsySH&lt;/a&gt; package.</source>
          <target state="translated">Laravel Tinkerは、&lt;a href=&quot;https://github.com/bobthecow/psysh&quot;&gt;PsySH&lt;/a&gt;パッケージを搭載したLaravelフレームワークの強力なREPLです。</target>
        </trans-unit>
        <trans-unit id="a1fd655aeab7e7788a761b601549884a582cef95" translate="yes" xml:space="preserve">
          <source>Laravel Valet</source>
          <target state="translated">ララベルバレット</target>
        </trans-unit>
        <trans-unit id="04d9177c39871bb87b059f06e3d717263f199670" translate="yes" xml:space="preserve">
          <source>Laravel Valet configures your Mac to always run &lt;a href=&quot;https://www.nginx.com/&quot;&gt;Nginx&lt;/a&gt; in the background when your machine starts. Then, using &lt;a href=&quot;https://en.wikipedia.org/wiki/Dnsmasq&quot;&gt;DnsMasq&lt;/a&gt;, Valet proxies all requests on the &lt;code&gt;*.test&lt;/code&gt; domain to point to sites installed on your local machine.</source>
          <target state="translated">Laravel Valetは、マシンの起動時に常にバックグラウンドで&lt;a href=&quot;https://www.nginx.com/&quot;&gt;Nginx&lt;/a&gt;を実行するようにMacを構成します。次に、&lt;a href=&quot;https://en.wikipedia.org/wiki/Dnsmasq&quot;&gt;DnsMasq&lt;/a&gt;を使用して、Valetは &lt;code&gt;*.test&lt;/code&gt; ドメイン上のすべてのリクエストをプロキシし、ローカルマシンにインストールされているサイトをポイントします。</target>
        </trans-unit>
        <trans-unit id="42d006af8bf7ca86e7ddb3073eb1717ff6d9ec54" translate="yes" xml:space="preserve">
          <source>Laravel Vapor</source>
          <target state="translated">ララベルベーパー</target>
        </trans-unit>
        <trans-unit id="6fa903b5dceb2844b8c366e162ce1155bcb4660b" translate="yes" xml:space="preserve">
          <source>Laravel Website</source>
          <target state="translated">Laravelのウェブサイト</target>
        </trans-unit>
        <trans-unit id="5c73154dee763c54fdef04b7fe91b7de8041f0e6" translate="yes" xml:space="preserve">
          <source>Laravel allows you to easily &quot;mock&quot; user input for your console commands using the &lt;code&gt;expectsQuestion&lt;/code&gt; method. In addition, you may specify the exit code and text that you expect to be output by the console command using the &lt;code&gt;assertExitCode&lt;/code&gt; and &lt;code&gt;expectsOutput&lt;/code&gt; methods. For example, consider the following console command:</source>
          <target state="translated">Laravelでは、 &lt;code&gt;expectsQuestion&lt;/code&gt; メソッドを使用して、コンソールコマンドのユーザー入力を簡単に「模擬」できます。また、あなたが使ってコンソールコマンドで出力されることを期待していること終了コードとテキストを指定することができ &lt;code&gt;assertExitCode&lt;/code&gt; と &lt;code&gt;expectsOutput&lt;/code&gt; 方法を。たとえば、次のコンソールコマンドを考えてみます。</target>
        </trans-unit>
        <trans-unit id="1d223f4f5e13461f32e8bd1239a73dd40f1a9b2e" translate="yes" xml:space="preserve">
          <source>Laravel allows you to easily create &quot;signed&quot; URLs to named routes. These URLs have a &quot;signature&quot; hash appended to the query string which allows Laravel to verify that the URL has not been modified since it was created. Signed URLs are especially useful for routes that are publicly accessible yet need a layer of protection against URL manipulation.</source>
          <target state="translated">Laravelでは、名前付きルートへの &quot;署名付き &quot;URLを簡単に作成することができます。これらのURLは、クエリ文字列に &quot;署名 &quot;ハッシュが付加されており、URLが作成されてから変更されていないことをLaravelが確認することができます。署名付きURLは、一般にアクセス可能なルートで、URL操作に対する保護層が必要な場合に特に便利です。</target>
        </trans-unit>
        <trans-unit id="1ebd1eff7627fc6be1770447cddab88aaae86148" translate="yes" xml:space="preserve">
          <source>Laravel allows you to keep input from one request during the next request. This feature is particularly useful for re-populating forms after detecting validation errors. However, if you are using Laravel's included &lt;a href=&quot;validation&quot;&gt;validation features&lt;/a&gt;, it is unlikely you will need to manually use these methods, as some of Laravel's built-in validation facilities will call them automatically.</source>
          <target state="translated">Laravelでは、次のリクエストの間、1つのリクエストからの入力を維持できます。この機能は、検証エラーを検出した後にフォームを再入力する場合に特に役立ちます。ただし、Laravelに含まれている&lt;a href=&quot;validation&quot;&gt;検証機能&lt;/a&gt;を使用している場合は、Laravelの組み込み検証機能の一部が自動的に呼び出すため、これらのメソッドを手動で使用する必要はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="5ae22418221c91125ca6200c0be78f028d4c33e1" translate="yes" xml:space="preserve">
          <source>Laravel allows you to render a view in isolation without making a simulated HTTP request to the application. To accomplish this, you may use the &lt;code&gt;view&lt;/code&gt; method within your test. The &lt;code&gt;view&lt;/code&gt; method accepts the view name and an optional array of data. The method returns an instance of &lt;code&gt;Illuminate\Testing\TestView&lt;/code&gt;, which offers several methods to conveniently make assertions about the view's contents:</source>
          <target state="translated">Laravelを使用すると、アプリケーションに対してシミュレートされたHTTPリクエストを行うことなく、ビューを分離してレンダリングできます。これを実現するには、テスト内で &lt;code&gt;view&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;view&lt;/code&gt; 方法は、ビュー名とデータの任意の配列を受け付けます。このメソッドは、 &lt;code&gt;Illuminate\Testing\TestView&lt;/code&gt; インスタンスを返します。これは、ビューのコンテンツに関するアサーションを簡単に作成するためのいくつかのメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="b216d9c161fb28cfb3f64a82e02eed7c7198fde1" translate="yes" xml:space="preserve">
          <source>Laravel allows you to send mailables in a locale other than the current language, and will even remember this locale if the mail is queued.</source>
          <target state="translated">Laravelでは、現在の言語以外のロケールでメールを送信することができ、メールがキューに入っている場合でもこのロケールを記憶します。</target>
        </trans-unit>
        <trans-unit id="4681842d02c90594d2dc45e644fb19ea07ea1d03" translate="yes" xml:space="preserve">
          <source>Laravel allows you to send notifications in a locale other than the current language, and will even remember this locale if the notification is queued.</source>
          <target state="translated">Laravelでは、現在の言語以外のロケールで通知を送信することができ、通知がキューに入っている場合でも、このロケールを記憶してくれます。</target>
        </trans-unit>
        <trans-unit id="34457ac8f7afe7b5abb571d99130354a05bec332" translate="yes" xml:space="preserve">
          <source>Laravel already makes it easy to perform authentication via traditional login forms, but what about APIs? APIs typically use tokens to authenticate users and do not maintain session state between requests. Laravel makes API authentication a breeze using Laravel Passport, which provides a full OAuth2 server implementation for your Laravel application in a matter of minutes. Passport is built on top of the &lt;a href=&quot;https://github.com/thephpleague/oauth2-server&quot;&gt;League OAuth2 server&lt;/a&gt; that is maintained by Andy Millington and Simon Hamp.</source>
          <target state="translated">Laravelでは、従来のログインフォームを使用して認証を簡単に実行できますが、APIについてはどうでしょうか。APIは通常、トークンを使用してユーザーを認証し、リクエスト間のセッション状態を維持しません。Laravelは、Laravel Passportを使用してAPI認証を簡単にします。これにより、わずか数分でLaravelアプリケーションに完全なOAuth2サーバー実装が提供されます。Passportは、Andy MillingtonとSimon Hampが管理する&lt;a href=&quot;https://github.com/thephpleague/oauth2-server&quot;&gt;League OAuth2サーバーの&lt;/a&gt;上に構築されています。</target>
        </trans-unit>
        <trans-unit id="57591fd919b5e754243d68f16eb966b8dc82277a" translate="yes" xml:space="preserve">
          <source>Laravel also provides a global &lt;code&gt;old&lt;/code&gt; helper. If you are displaying old input within a &lt;a href=&quot;blade&quot;&gt;Blade template&lt;/a&gt;, it is more convenient to use the &lt;code&gt;old&lt;/code&gt; helper. If no old input exists for the given field, &lt;code&gt;null&lt;/code&gt; will be returned:</source>
          <target state="translated">Laravelは、グローバルな &lt;code&gt;old&lt;/code&gt; ヘルパーも提供します。&lt;a href=&quot;blade&quot;&gt;Bladeテンプレート&lt;/a&gt;内に古い入力を表示している場合は、 &lt;code&gt;old&lt;/code&gt; ヘルパーを使用する方が便利です。指定されたフィールドに古い入力が存在しない場合は、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="d3ebaea6660561899f643c68c594b9010b4be520" translate="yes" xml:space="preserve">
          <source>Laravel also provides a mechanism for invalidating and &quot;logging out&quot; a user's sessions that are active on other devices without invalidating the session on their current device. Before getting started, you should make sure that the &lt;code&gt;Illuminate\Session\Middleware\AuthenticateSession&lt;/code&gt; middleware is present and un-commented in your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; class' &lt;code&gt;web&lt;/code&gt; middleware group:</source>
          <target state="translated">Laravelは、現在のデバイスのセッションを無効にすることなく、他のデバイスでアクティブなユーザーのセッションを無効にして「ログアウト」するメカニズムも提供します。始める前に、 &lt;code&gt;Illuminate\Session\Middleware\AuthenticateSession&lt;/code&gt; ミドルウェアが &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; クラスの &lt;code&gt;web&lt;/code&gt; ミドルウェアグループに存在し、コメント化されていないことを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="035ed208e689b9fd47c985e8287a59ec34362c04" translate="yes" xml:space="preserve">
          <source>Laravel also provides a mechanism for invalidating and &quot;logging out&quot; a user's sessions that are active on other devices without invalidating the session on their current device. This feature is typically utilized when a user is changing or updating their password and you would like to invalidate sessions on other devices while keeping the current device authenticated.</source>
          <target state="translated">Laravelには、現在のデバイスのセッションを無効にすることなく、他のデバイスでアクティブになっているユーザーのセッションを無効にしたり、「ログアウト」したりする仕組みもあります。この機能は通常、ユーザーがパスワードを変更したり更新したりしているときに、現在のデバイスの認証を維持したまま他のデバイスのセッションを無効にしたい場合に利用されます。</target>
        </trans-unit>
        <trans-unit id="420b4b7b18a9359f0c1415d983f8e1fcc2f6837c" translate="yes" xml:space="preserve">
          <source>Laravel also provides a variety of authentication related assertions for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; feature tests:</source>
          <target state="translated">Laravelは、&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;機能テスト用のさまざまな認証関連のアサーションも提供します。</target>
        </trans-unit>
        <trans-unit id="090a11fabb69540daf71a4fcd5e5536a5c40e4fb" translate="yes" xml:space="preserve">
          <source>Laravel also provides a variety of authentication related assertions for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; tests:</source>
          <target state="translated">Laravelは、&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;テスト用の認証関連のさまざまなアサーションも提供します。</target>
        </trans-unit>
        <trans-unit id="9518bca7a05a8ef7c85bb2199394345d4255be7f" translate="yes" xml:space="preserve">
          <source>Laravel also provides several helpers for testing JSON APIs and their responses. For example, the &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, &lt;code&gt;patch&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; methods may be used to issue requests with various HTTP verbs. You may also easily pass data and headers to these methods. To get started, let's write a test to make a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/user&lt;/code&gt; and assert that the expected data was returned:</source>
          <target state="translated">Laravelは、JSON APIとその応答をテストするためのいくつかのヘルパーも提供します。たとえば、 &lt;code&gt;json&lt;/code&gt; 、 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;post&lt;/code&gt; 、 &lt;code&gt;put&lt;/code&gt; 、 &lt;code&gt;patch&lt;/code&gt; 、および &lt;code&gt;delete&lt;/code&gt; メソッドを使用して、さまざまなHTTP動詞でリクエストを発行できます。これらのメソッドにデータとヘッダーを簡単に渡すこともできます。はじめに、 &lt;code&gt;/user&lt;/code&gt; に &lt;code&gt;POST&lt;/code&gt; リクエストを送信し、予期したデータが返されたことをアサートするテストを作成しましょう。</target>
        </trans-unit>
        <trans-unit id="12c97696b354b856b7a0a82b775ee865f00cb81a" translate="yes" xml:space="preserve">
          <source>Laravel also provides several helpers for testing JSON APIs and their responses. For example, the &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;getJson&lt;/code&gt;, &lt;code&gt;postJson&lt;/code&gt;, &lt;code&gt;putJson&lt;/code&gt;, &lt;code&gt;patchJson&lt;/code&gt;, &lt;code&gt;deleteJson&lt;/code&gt;, and &lt;code&gt;optionsJson&lt;/code&gt; methods may be used to issue JSON requests with various HTTP verbs. You may also easily pass data and headers to these methods. To get started, let's write a test to make a &lt;code&gt;POST&lt;/code&gt; request to &lt;code&gt;/user&lt;/code&gt; and assert that the expected data was returned:</source>
          <target state="translated">Laravelは、JSONAPIとその応答をテストするためのいくつかのヘルパーも提供します。たとえば、 &lt;code&gt;json&lt;/code&gt; 、 &lt;code&gt;getJson&lt;/code&gt; 、 &lt;code&gt;postJson&lt;/code&gt; 、 &lt;code&gt;putJson&lt;/code&gt; 、 &lt;code&gt;patchJson&lt;/code&gt; 、 &lt;code&gt;deleteJson&lt;/code&gt; 、および &lt;code&gt;optionsJson&lt;/code&gt; メソッドを使用して、さまざまなHTTP動詞でJSONリクエストを発行できます。これらのメソッドにデータとヘッダーを簡単に渡すこともできます。開始するには、 &lt;code&gt;/user&lt;/code&gt; に &lt;code&gt;POST&lt;/code&gt; リクエストを送信し、期待されるデータが返されたことを表明するテストを作成しましょう。</target>
        </trans-unit>
        <trans-unit id="311c09e12baed9df1efd9622e0f3908f17462e35" translate="yes" xml:space="preserve">
          <source>Laravel also provides support for creating foreign key constraints, which are used to force referential integrity at the database level. For example, let's define a &lt;code&gt;user_id&lt;/code&gt; column on the &lt;code&gt;posts&lt;/code&gt; table that references the &lt;code&gt;id&lt;/code&gt; column on a &lt;code&gt;users&lt;/code&gt; table:</source>
          <target state="translated">Laravelは、データベースレベルで参照整合性を強制するために使用される外部キー制約の作成もサポートしています。たとえば、 &lt;code&gt;users&lt;/code&gt; テーブルの &lt;code&gt;id&lt;/code&gt; 列を参照する、 &lt;code&gt;posts&lt;/code&gt; テーブルの &lt;code&gt;user_id&lt;/code&gt; 列を定義してみましょう。</target>
        </trans-unit>
        <trans-unit id="bc6148d4e6c8f1e9dbfbbb7cb09b7fdff4c7b5d0" translate="yes" xml:space="preserve">
          <source>Laravel also supports querying JSON column types on databases that provide support for JSON column types. Currently, this includes MySQL 5.7, PostgreSQL, SQL Server 2016, and SQLite 3.9.0 (with the &lt;a href=&quot;https://www.sqlite.org/json1.html&quot;&gt;JSON1 extension&lt;/a&gt;). To query a JSON column, use the &lt;code&gt;-&amp;gt;&lt;/code&gt; operator:</source>
          <target state="translated">Laravelは、JSON列タイプのサポートを提供するデータベースでのJSON列タイプのクエリもサポートしています。現在、これにはMySQL 5.7、PostgreSQL、SQL Server 2016、およびSQLite 3.9.0（&lt;a href=&quot;https://www.sqlite.org/json1.html&quot;&gt;JSON1拡張機能付き&lt;/a&gt;）が含まれます。JSON列をクエリするには、 &lt;code&gt;-&amp;gt;&lt;/code&gt; 演算子を使用します。</target>
        </trans-unit>
        <trans-unit id="6e5e727d6f90abca80217055da4dbba6b8610972" translate="yes" xml:space="preserve">
          <source>Laravel also supports sending shortcode notifications, which are pre-defined message templates in your Nexmo account. You may specify the type of notification (&lt;code&gt;alert&lt;/code&gt;, &lt;code&gt;2fa&lt;/code&gt;, or &lt;code&gt;marketing&lt;/code&gt;), as well as the custom values that will populate the template:</source>
          <target state="translated">Laravelは、Nexmoアカウントで事前定義されたメッセージテンプレートであるショートコード通知の送信もサポートしています。通知のタイプ（ &lt;code&gt;alert&lt;/code&gt; 、 &lt;code&gt;2fa&lt;/code&gt; 、または &lt;code&gt;marketing&lt;/code&gt; ）、およびテンプレートに入力するカスタム値を指定できます。</target>
        </trans-unit>
        <trans-unit id="15a217ae853dbe737b1a777dc33f4e8890cd2593" translate="yes" xml:space="preserve">
          <source>Laravel and its other first-party packages follow &lt;a href=&quot;https://semver.org&quot;&gt;Semantic Versioning&lt;/a&gt;. Major framework releases are released every six months (~March and ~September), while minor and patch releases may be released as often as every week. Minor and patch releases should &lt;strong&gt;never&lt;/strong&gt; contain breaking changes.</source>
          <target state="translated">Laravelとその他のファーストパーティパッケージは、&lt;a href=&quot;https://semver.org&quot;&gt;SemanticVersioningに&lt;/a&gt;従います。メジャーフレームワークリリースは6か月ごと（〜3月と〜9月）にリリースされますが、マイナーリリースとパッチリリースは毎週の頻度でリリースされる可能性があります。マイナーリリースとパッチリリースには、重大な変更が含まれていてはなり&lt;strong&gt;ません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="8537f1d72bf731d0ba371629a40461a2f5b7f2b4" translate="yes" xml:space="preserve">
          <source>Laravel automatically generates a CSRF &quot;token&quot; for each active user session managed by the application. This token is used to verify that the authenticated user is the one actually making the requests to the application.</source>
          <target state="translated">Laravelは、アプリケーションが管理するアクティブなユーザーセッションごとに、自動的にCSRFの「トークン」を生成します。このトークンは、認証されたユーザーが実際にアプリケーションにリクエストを行っているユーザーであることを確認するために使用されます。</target>
        </trans-unit>
        <trans-unit id="88f3f6b0f236c92a59e7860e78cb2b1ff104fb5f" translate="yes" xml:space="preserve">
          <source>Laravel automatically regenerates the session ID during authentication if you are using &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Laravel Jetstream&lt;/a&gt;; however, if you need to manually regenerate the session ID, you may use the &lt;code&gt;regenerate&lt;/code&gt; method.</source>
          <target state="translated">Laravel &lt;a href=&quot;https://jetstream.laravel.com&quot;&gt;Jetstream&lt;/a&gt;を使用している場合、Laravelは認証中にセッションIDを自動的に再生成します。ただし、セッションIDを手動で再生成する必要がある場合は、 &lt;code&gt;regenerate&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="ee873bef5585ceef4a06f5b4dd7da35ad048a05c" translate="yes" xml:space="preserve">
          <source>Laravel automatically regenerates the session ID during authentication if you are using the built-in &lt;code&gt;LoginController&lt;/code&gt;; however, if you need to manually regenerate the session ID, you may use the &lt;code&gt;regenerate&lt;/code&gt; method.</source>
          <target state="translated">組み込みの &lt;code&gt;LoginController&lt;/code&gt; を使用している場合、Laravelは認証中にセッションIDを自動的に再生成します。ただし、セッションIDを手動で再生成する必要がある場合は、 &lt;code&gt;regenerate&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="ad52d22456ca17e2e3ad52c39cc195d27feba834" translate="yes" xml:space="preserve">
          <source>Laravel automatically resolves Eloquent models defined in routes or controller actions whose type-hinted variable names match a route segment name. For example:</source>
          <target state="translated">Laravelは、ルートやコントローラアクションで定義されたEloquentモデルを自動的に解決します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="d2799a48df47ca3ad650201bf387f5eaf9833694" translate="yes" xml:space="preserve">
          <source>Laravel can automatically respond to CORS OPTIONS requests with values that you configure. All CORS settings may be configured in your &lt;code&gt;cors&lt;/code&gt; configuration file and OPTIONS requests will automatically be handled by the &lt;code&gt;HandleCors&lt;/code&gt; middleware that is included by default in your global middleware stack.</source>
          <target state="translated">Laravelは、設定した値を使用してCORSOPTIONSリクエストに自動的に応答できます。すべてのCORS設定は &lt;code&gt;cors&lt;/code&gt; 構成ファイルで構成でき、OPTIONSリクエストは、グローバルミドルウェアスタックにデフォルトで含まれている &lt;code&gt;HandleCors&lt;/code&gt; ミドルウェアによって自動的に処理されます。</target>
        </trans-unit>
        <trans-unit id="96f94abe13225590555229493828e7e13c34b2c4" translate="yes" xml:space="preserve">
          <source>Laravel compiles and stores a list of all of the services supplied by deferred service providers, along with the name of its service provider class. Then, only when you attempt to resolve one of these services does Laravel load the service provider.</source>
          <target state="translated">Laravelは、遅延サービスプロバイダが提供するすべてのサービスのリストを、サービスプロバイダクラスの名前とともにコンパイルして保存します。そして、これらのサービスの1つを解決しようとしたときにのみ、Laravelはサービスプロバイダをロードします。</target>
        </trans-unit>
        <trans-unit id="f3e9a9f1ad23d6355e885b80980744718eae2abb" translate="yes" xml:space="preserve">
          <source>Laravel does not require you to use a specific JavaScript framework or library to build your applications. In fact, you don't have to use JavaScript at all. However, Laravel does include some basic scaffolding to make it easier to get started writing modern JavaScript using the &lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt; library. Vue provides an expressive API for building robust JavaScript applications using components. As with CSS, we may use Laravel Mix to easily compile JavaScript components into a single, browser-ready JavaScript file.</source>
          <target state="translated">Laravelでは、特定のJavaScriptフレームワークまたはライブラリを使用してアプリケーションを構築する必要はありません。実際、JavaScriptを使用する必要はまったくありません。ただし、Laravelには、&lt;a href=&quot;https://vuejs.org&quot;&gt;Vue&lt;/a&gt;ライブラリを使用して最新のJavaScriptの作成を開始しやすくするための基本的な足場が含まれています。Vueは、コンポーネントを使用して堅牢なJavaScriptアプリケーションを構築するための表現力豊かなAPIを提供します。CSSと同様に、Laravel Mixを使用して、JavaScriptコンポーネントを1つのブラウザー対応のJavaScriptファイルに簡単にコンパイルできます。</target>
        </trans-unit>
        <trans-unit id="7831887dc6f96758be5c834c7aa76196e21a0571" translate="yes" xml:space="preserve">
          <source>Laravel does not ship with a directory to contain your extensions. You are free to place them anywhere you like. In this example, we have created an &lt;code&gt;Extensions&lt;/code&gt; directory to house the &lt;code&gt;MongoSessionHandler&lt;/code&gt;.</source>
          <target state="translated">Laravelには、拡張機能を含むディレクトリは付属していません。好きな場所に自由に配置できます。この例では、 &lt;code&gt;MongoSessionHandler&lt;/code&gt; を格納する &lt;code&gt;Extensions&lt;/code&gt; ディレクトリを作成しました。</target>
        </trans-unit>
        <trans-unit id="d781fc115c46b5117e4a3034ab71c9e67e60a53c" translate="yes" xml:space="preserve">
          <source>Laravel extends the &lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt; date library in order to provide convenient customization of Carbon's JSON serialization format. To customize how all Carbon dates throughout your application are serialized, use the &lt;code&gt;Carbon::serializeUsing&lt;/code&gt; method. The &lt;code&gt;serializeUsing&lt;/code&gt; method accepts a Closure which returns a string representation of the date for JSON serialization:</source>
          <target state="translated">Laravelは、&lt;a href=&quot;https://github.com/briannesbitt/Carbon&quot;&gt;Carbon&lt;/a&gt;のJSONシリアル化フォーマットを簡単にカスタマイズできるように、Carbon日付ライブラリを拡張しています。アプリケーション全体のすべてのCarbonの日付をシリアル化する方法をカスタマイズするには、 &lt;code&gt;Carbon::serializeUsing&lt;/code&gt; メソッドを使用します。 &lt;code&gt;serializeUsing&lt;/code&gt; の方法は、JSONシリアル化のための日付の文字列表現を返すクロージャを受け付けます。</target>
        </trans-unit>
        <trans-unit id="2d7ea2d500078bc7da625bc5a0df7a6c475434d0" translate="yes" xml:space="preserve">
          <source>Laravel finds event listeners by scanning the listener classes using reflection. When Laravel finds any listener class method that begins with &lt;code&gt;handle&lt;/code&gt;, Laravel will register those methods as event listeners for the event that is type-hinted in the method's signature:</source>
          <target state="translated">Laravelは、リフレクションを使用してリスナークラスをスキャンすることにより、イベントリスナーを見つけます。Laravelが &lt;code&gt;handle&lt;/code&gt; で始まるリスナークラスメソッドを見つけると、Laravelはそれらのメソッドをメソッドのシグネチャでタイプヒントされたイベントのイベントリスナーとして登録します。</target>
        </trans-unit>
        <trans-unit id="83d4dd7ef333f99c97d82464dbfbaccdd5a8b243" translate="yes" xml:space="preserve">
          <source>Laravel fires two events during the process of sending mail messages. The &lt;code&gt;MessageSending&lt;/code&gt; event is fired prior to a message being sent, while the &lt;code&gt;MessageSent&lt;/code&gt; event is fired after a message has been sent. Remember, these events are fired when the mail is being &lt;em&gt;sent&lt;/em&gt;, not when it is queued. You may register an event listener for this event in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">Laravelは、メールメッセージの送信プロセス中に2つのイベントを発生させます。 &lt;code&gt;MessageSending&lt;/code&gt; の間、イベントは、送信されたメッセージの前に解雇された &lt;code&gt;MessageSent&lt;/code&gt; のメッセージが送信された後にイベントが発生しています。これらのイベントは、メールがキューに入れられたときではなく、&lt;em&gt;送信&lt;/em&gt;さ&lt;em&gt;れた&lt;/em&gt;ときに発生します。このイベントのイベントリスナーを &lt;code&gt;EventServiceProvider&lt;/code&gt; に登録できます。</target>
        </trans-unit>
        <trans-unit id="d8979d6e2a86cfe856be433091cf030a9bd6fe30" translate="yes" xml:space="preserve">
          <source>Laravel follows the &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md&quot;&gt;PSR-2&lt;/a&gt; coding standard and the &lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&quot;&gt;PSR-4&lt;/a&gt; autoloading standard.</source>
          <target state="translated">Laravelは&lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-2-coding-style-guide.md&quot;&gt;PSR-2&lt;/a&gt;コーディング標準と&lt;a href=&quot;https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-4-autoloader.md&quot;&gt;PSR-4&lt;/a&gt;オートローディング標準に従います。</target>
        </trans-unit>
        <trans-unit id="2a95a243e593544d7126faf4cd88dd2764947649" translate="yes" xml:space="preserve">
          <source>Laravel has a variety of built-in, helpful cast types; however, you may occasionally need to define your own cast types. You may accomplish this by defining a class that implements the &lt;code&gt;CastsAttributes&lt;/code&gt; interface.</source>
          <target state="translated">Laravelには、さまざまな組み込みの便利なキャストタイプがあります。ただし、独自のキャストタイプを定義する必要がある場合があります。これは、 &lt;code&gt;CastsAttributes&lt;/code&gt; インターフェイスを実装するクラスを定義することで実現できます。</target>
        </trans-unit>
        <trans-unit id="05c030ec16a38d916386981b350838e6c439e28c" translate="yes" xml:space="preserve">
          <source>Laravel includes &lt;code&gt;Auth\ForgotPasswordController&lt;/code&gt; and &lt;code&gt;Auth\ResetPasswordController&lt;/code&gt; classes that contains the logic necessary to e-mail password reset links and reset user passwords. All of the routes needed to perform password resets may be generated using the &lt;code&gt;make:auth&lt;/code&gt; Artisan command:</source>
          <target state="translated">Laravelには &lt;code&gt;Auth\ForgotPasswordController&lt;/code&gt; クラスと &lt;code&gt;Auth\ResetPasswordController&lt;/code&gt; クラスが含まれており、パスワードリセットリンクを電子メールで送信し、ユーザーパスワードをリセットするために必要なロジックが含まれています。パスワードのリセットを実行するために必要なすべてのルートは、 &lt;code&gt;make:auth&lt;/code&gt; Artisanコマンドを使用して生成できます。</target>
        </trans-unit>
        <trans-unit id="80802a01befb1e960e81a9905bdc163393f3d5ed" translate="yes" xml:space="preserve">
          <source>Laravel includes a &lt;a href=&quot;middleware&quot;&gt;middleware&lt;/a&gt; to rate limit access to routes within your application. To get started, assign the &lt;code&gt;throttle&lt;/code&gt; middleware to a route or a group of routes. The &lt;code&gt;throttle&lt;/code&gt; middleware accepts two parameters that determine the maximum number of requests that can be made in a given number of minutes. For example, let's specify that an authenticated user may access the following group of routes 60 times per minute:</source>
          <target state="translated">Laravelには、アプリケーション内のルートへのアクセスをレート制限する&lt;a href=&quot;middleware&quot;&gt;ミドルウェア&lt;/a&gt;が含まれています。開始するには、 &lt;code&gt;throttle&lt;/code&gt; ミドルウェアをルートまたはルートのグループに割り当てます。 &lt;code&gt;throttle&lt;/code&gt; ミドルウェアは、分の所定の数にすることができる要求の最大数を決定する2つのパラメータを受け付けます。たとえば、認証されたユーザーが次のルートのグループに1分あたり60回アクセスできるように指定します。</target>
        </trans-unit>
        <trans-unit id="d9549ef6d20772478450a24c77d78868f6b90bc9" translate="yes" xml:space="preserve">
          <source>Laravel includes a &lt;code&gt;WithoutOverlapping&lt;/code&gt; middleware that allows you to prevent job overlaps based on an arbitrary key. This can be helpful when a queued job is modifying a resource that should only be modified by one job at a time.</source>
          <target state="translated">Laravelには、任意のキーに基づいてジョブの重複を防ぐことができる &lt;code&gt;WithoutOverlapping&lt;/code&gt; ミドルウェアが含まれています。これは、キューに入れられたジョブが、一度に1つのジョブによってのみ変更する必要があるリソースを変更している場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="83f184753d97b65bfbd48f5a7311fe23a8673a49" translate="yes" xml:space="preserve">
          <source>Laravel includes a &lt;code&gt;cache.headers&lt;/code&gt; middleware, which may be used to quickly set the &lt;code&gt;Cache-Control&lt;/code&gt; header for a group of routes. If &lt;code&gt;etag&lt;/code&gt; is specified in the list of directives, an MD5 hash of the response content will automatically be set as the ETag identifier:</source>
          <target state="translated">Laravelには &lt;code&gt;cache.headers&lt;/code&gt; ミドルウェアが含まれており、ルートグループの &lt;code&gt;Cache-Control&lt;/code&gt; ヘッダーをすばやく設定するために使用できます。ディレクティブのリストで &lt;code&gt;etag&lt;/code&gt; が指定されている場合、応答コンテンツのMD5ハッシュがETag識別子として自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="faf8f96d8df48bbd90b99eace5d49d83cbfcd985" translate="yes" xml:space="preserve">
          <source>Laravel includes a &lt;code&gt;public/.htaccess&lt;/code&gt; file that is used to provide URLs without the &lt;code&gt;index.php&lt;/code&gt; front controller in the path. Before serving Laravel with Apache, be sure to enable the &lt;code&gt;mod_rewrite&lt;/code&gt; module so the &lt;code&gt;.htaccess&lt;/code&gt; file will be honored by the server.</source>
          <target state="translated">Laravelには、パスに &lt;code&gt;index.php&lt;/code&gt; フロントコントローラーなしでURLを提供するために使用される &lt;code&gt;public/.htaccess&lt;/code&gt; ファイルが含まれています。ApacheでLaravelを提供する前に、必ず &lt;code&gt;mod_rewrite&lt;/code&gt; モジュールを有効にして、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルがサーバーで受け入れられるようにしてください。</target>
        </trans-unit>
        <trans-unit id="866600cbbab686b290a4d35b7589d09292189281" translate="yes" xml:space="preserve">
          <source>Laravel includes a middleware that can authorize actions before the incoming request even reaches your routes or controllers. By default, the &lt;code&gt;Illuminate\Auth\Middleware\Authorize&lt;/code&gt; middleware is assigned the &lt;code&gt;can&lt;/code&gt; key in your &lt;code&gt;App\Http\Kernel&lt;/code&gt; class. Let's explore an example of using the &lt;code&gt;can&lt;/code&gt; middleware to authorize that a user can update a blog post:</source>
          <target state="translated">Laravelには、着信リクエストがルートやコントローラーに到達する前にアクションを承認できるミドルウェアが含まれています。デフォルトでは、 &lt;code&gt;Illuminate\Auth\Middleware\Authorize&lt;/code&gt; ミドルウェアには、 &lt;code&gt;App\Http\Kernel&lt;/code&gt; クラスの &lt;code&gt;can&lt;/code&gt; キーが割り当てられています。 &lt;code&gt;can&lt;/code&gt; ミドルウェアを使用して、ユーザーがブログ投稿を更新できることを承認する例を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="b1d157cc7590aa93405075d52848233afe3ca9ad" translate="yes" xml:space="preserve">
          <source>Laravel includes a queue worker that will process new jobs as they are pushed onto the queue. You may run the worker using the &lt;code&gt;queue:work&lt;/code&gt; Artisan command. Note that once the &lt;code&gt;queue:work&lt;/code&gt; command has started, it will continue to run until it is manually stopped or you close your terminal:</source>
          <target state="translated">Laravelには、新しいジョブがキューにプッシュされるときに処理するキューワーカーが含まれています。 &lt;code&gt;queue:work&lt;/code&gt; Artisanコマンドを使用してワーカーを実行できます。 &lt;code&gt;queue:work&lt;/code&gt; コマンドが開始されると、手動で停止されるか、ターミナルを閉じるまで実行され続けることに注意してください。</target>
        </trans-unit>
        <trans-unit id="46374e0ff8c121d5b4c3778a695a71d64bbf04e8" translate="yes" xml:space="preserve">
          <source>Laravel includes a simple method of seeding your database with test data using seed classes. All seed classes are stored in the &lt;code&gt;database/seeders&lt;/code&gt; directory. Seed classes may have any name you wish, but probably should follow some sensible convention, such as &lt;code&gt;UserSeeder&lt;/code&gt;, etc. By default, a &lt;code&gt;DatabaseSeeder&lt;/code&gt; class is defined for you. From this class, you may use the &lt;code&gt;call&lt;/code&gt; method to run other seed classes, allowing you to control the seeding order.</source>
          <target state="translated">Laravelには、シードクラスを使用してデータベースにテストデータをシードする簡単な方法が含まれています。すべてのシードクラスは、 &lt;code&gt;database/seeders&lt;/code&gt; ディレクトリに保存されます。シードクラスには任意の名前を付けることができますが、 &lt;code&gt;UserSeeder&lt;/code&gt; などの適切な規則に従う必要があります。デフォルトでは、 &lt;code&gt;DatabaseSeeder&lt;/code&gt; クラスが定義されています。このクラスから、 &lt;code&gt;call&lt;/code&gt; メソッドを使用して他のシードクラスを実行し、シードの順序を制御できます。</target>
        </trans-unit>
        <trans-unit id="d35fb8a6f7b51b85989430d716d987a63a1527aa" translate="yes" xml:space="preserve">
          <source>Laravel includes a simple method of seeding your database with test data using seed classes. All seed classes are stored in the &lt;code&gt;database/seeds&lt;/code&gt; directory. Seed classes may have any name you wish, but probably should follow some sensible convention, such as &lt;code&gt;UsersTableSeeder&lt;/code&gt;, etc. By default, a &lt;code&gt;DatabaseSeeder&lt;/code&gt; class is defined for you. From this class, you may use the &lt;code&gt;call&lt;/code&gt; method to run other seed classes, allowing you to control the seeding order.</source>
          <target state="translated">Laravelには、シードクラスを使用してデータベースにテストデータをシードする簡単な方法が含まれています。すべてのシードクラスは、 &lt;code&gt;database/seeds&lt;/code&gt; ディレクトリに格納されます。シードクラスには任意の名前を付けることができますが、おそらく &lt;code&gt;UsersTableSeeder&lt;/code&gt; などの実用的な規則に従う必要があります。デフォルトでは、 &lt;code&gt;DatabaseSeeder&lt;/code&gt; クラスが定義されています。このクラスから、 &lt;code&gt;call&lt;/code&gt; メソッドを使用して他のシードクラスを実行し、シード順序を制御できます。</target>
        </trans-unit>
        <trans-unit id="caac93a00e688aa26d2df844b90526017d226508" translate="yes" xml:space="preserve">
          <source>Laravel includes a variety of global &quot;helper&quot; PHP functions. Many of these functions are used by the framework itself; however, you are free to use them in your own applications if you find them convenient.</source>
          <target state="translated">Laravelには、様々なグローバルな「ヘルパー」PHP関数が含まれています。これらの関数の多くはフレームワーク自体で使用されていますが、便利だと思うのであれば、自分のアプリケーションで自由に使用することができます。</target>
        </trans-unit>
        <trans-unit id="82881d0fe76861282efd89d2995a79d64da10780" translate="yes" xml:space="preserve">
          <source>Laravel includes built-in authentication and session services which are typically accessed via the &lt;code&gt;Auth&lt;/code&gt; and &lt;code&gt;Session&lt;/code&gt; facades. These features provide cookie based authentication for requests that are initiated from web browsers. They provide methods that allow you to verify a user's credentials and authenticate the user. In addition, these services will automatically store the proper data in the user's session and issue the proper session cookie. A discussion of how to use these services is contained within this documentation.</source>
          <target state="translated">Laravelには、通常 &lt;code&gt;Auth&lt;/code&gt; ファサードと &lt;code&gt;Session&lt;/code&gt; ファサードを介してアクセスされる組み込みの認証サービスとセッションサービスが含まれています。これらの機能は、Webブラウザーから開始された要求に対してCookieベースの認証を提供します。これらは、ユーザーの資格情報を確認し、ユーザーを認証できるようにするメソッドを提供します。さらに、これらのサービスは自動的に適切なデータをユーザーのセッションに保存し、適切なセッションCookieを発行します。これらのサービスの使用方法に関する説明は、このドキュメントに含まれています。</target>
        </trans-unit>
        <trans-unit id="107f4170f17c1c08eb59a81f344801b50a1ea7e7" translate="yes" xml:space="preserve">
          <source>Laravel includes pagination views built using &lt;a href=&quot;https://getbootstrap.com/&quot;&gt;Bootstrap CSS&lt;/a&gt;. To use these views instead of the default Tailwind views, you may call the paginator's &lt;code&gt;useBootstrap&lt;/code&gt; method within your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">Laravelには、&lt;a href=&quot;https://getbootstrap.com/&quot;&gt;BootstrapCSS&lt;/a&gt;を使用して構築されたページネーションビューが含まれています。デフォルト追い風ビューの代わりにこれらのビューを使用するには、ページネータの呼び出すことができ &lt;code&gt;useBootstrap&lt;/code&gt; のあなたの中にメソッドを &lt;code&gt;AppServiceProvider&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="64c7b1c4353d2c8d07fe970cb60c3dae14bfd796" translate="yes" xml:space="preserve">
          <source>Laravel includes powerful and customizable rate limiting services that you may utilize to restrict the amount of traffic for a given route or group of routes. To get started, you should define rate limiter configurations that meet your application's needs. Typically, this may be done in your application's &lt;code&gt;RouteServiceProvider&lt;/code&gt;.</source>
          <target state="translated">Laravelには、特定のルートまたはルートのグループのトラフィック量を制限するために利用できる、強力でカスタマイズ可能なレート制限サービスが含まれています。開始するには、アプリケーションのニーズを満たすレートリミッター構成を定義する必要があります。通常、これはアプリケーションの &lt;code&gt;RouteServiceProvider&lt;/code&gt; で実行できます。</target>
        </trans-unit>
        <trans-unit id="0128eb57cf73312a7b756da6f1d62baf9e99174d" translate="yes" xml:space="preserve">
          <source>Laravel includes the &lt;code&gt;Auth\VerificationController&lt;/code&gt; class that contains the necessary logic to send verification links and verify emails. To register the necessary routes for this controller, pass the &lt;code&gt;verify&lt;/code&gt; option to the &lt;code&gt;Auth::routes&lt;/code&gt; method:</source>
          <target state="translated">Laravelには、 &lt;code&gt;Auth\VerificationController&lt;/code&gt; リンクを送信し、電子メールを検証するために必要なロジックを含むAuth \ VerificationControllerクラスが含まれています。このコントローラに必要なルートを登録するには、 &lt;code&gt;verify&lt;/code&gt; オプションを &lt;code&gt;Auth::routes&lt;/code&gt; メソッドに渡します。</target>
        </trans-unit>
        <trans-unit id="745107d905a4a05be840c88bdb0871dcff8af1ae" translate="yes" xml:space="preserve">
          <source>Laravel is a trademark of Taylor Otwell.</source>
          <target state="translated">LaravelはTaylor Otwellの商標です。</target>
        </trans-unit>
        <trans-unit id="159fe08378b4f4e2f0475d80c917a7b34e6b3b22" translate="yes" xml:space="preserve">
          <source>Laravel is built with testing in mind. In fact, support for testing with PHPUnit is included out of the box and a &lt;code&gt;phpunit.xml&lt;/code&gt; file is already set up for your application. The framework also ships with convenient helper methods that allow you to expressively test your applications.</source>
          <target state="translated">Laravelはテストを念頭に置いて構築されています。実際、PHPUnitを使用したテストのサポートは &lt;code&gt;phpunit.xml&lt;/code&gt; で含まれており、phpunit.xmlファイルはすでにアプリケーション用に設定されています。フレームワークには、アプリケーションを表現的にテストできる便利なヘルパーメソッドも付属しています。</target>
        </trans-unit>
        <trans-unit id="aea55fbb9dcce2b9efd0103e51f29c9070352274" translate="yes" xml:space="preserve">
          <source>Laravel makes implementing authentication very simple. In fact, almost everything is configured for you out of the box. The authentication configuration file is located at &lt;code&gt;config/auth.php&lt;/code&gt;, which contains several well documented options for tweaking the behavior of the authentication services.</source>
          <target state="translated">Laravelは、認証の実装を非常に簡単にします。実際、ほとんどすべてがすぐに使用できるように構成されています。認証設定ファイルは &lt;code&gt;config/auth.php&lt;/code&gt; にあります。このファイルには、認証サービスの動作を調整するための十分に文書化されたいくつかのオプションが含まれています。</target>
        </trans-unit>
        <trans-unit id="5b812924523bca089a1698d22dda2fbfa37bde8d" translate="yes" xml:space="preserve">
          <source>Laravel makes interacting with databases extremely simple across a variety of database backends using either raw SQL, the &lt;a href=&quot;queries&quot;&gt;fluent query builder&lt;/a&gt;, and the &lt;a href=&quot;eloquent&quot;&gt;Eloquent ORM&lt;/a&gt;. Currently, Laravel supports four databases:</source>
          <target state="translated">Laravelは、生のSQL、&lt;a href=&quot;queries&quot;&gt;Fluent Query Builder&lt;/a&gt;、&lt;a href=&quot;eloquent&quot;&gt;Eloquent ORMの&lt;/a&gt;いずれかを使用して、さまざまなデータベースバックエンドでデータベースとの対話を非常に簡単にします。現在、Laravelは4つのデータベースをサポートしています。</target>
        </trans-unit>
        <trans-unit id="d417c7557e9543920faf8a80bfb5d1dd3a29cea6" translate="yes" xml:space="preserve">
          <source>Laravel makes it easy to display custom error pages for various HTTP status codes. For example, if you wish to customize the error page for 404 HTTP status codes, create a &lt;code&gt;resources/views/errors/404.blade.php&lt;/code&gt;. This file will be served on all 404 errors generated by your application. The views within this directory should be named to match the HTTP status code they correspond to. The &lt;code&gt;HttpException&lt;/code&gt; instance raised by the &lt;code&gt;abort&lt;/code&gt; function will be passed to the view as an &lt;code&gt;$exception&lt;/code&gt; variable:</source>
          <target state="translated">Laravelを使用すると、さまざまなHTTPステータスコードのカスタムエラーページを簡単に表示できます。たとえば、404 HTTPステータスコードのエラーページをカスタマイズする場合は、 &lt;code&gt;resources/views/errors/404.blade.php&lt;/code&gt; を作成します。このファイルは、アプリケーションによって生成されたすべての404エラーで提供されます。このディレクトリ内のビューには、対応するHTTPステータスコードと一致する名前を付ける必要があります。 &lt;code&gt;HttpException&lt;/code&gt; が提起したインスタンス &lt;code&gt;abort&lt;/code&gt; 機能は、としてビューに渡されます &lt;code&gt;$exception&lt;/code&gt; 変数：</target>
        </trans-unit>
        <trans-unit id="de476072ff6a38125ea369318cae8be99e455f3b" translate="yes" xml:space="preserve">
          <source>Laravel makes it easy to protect your application from &lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;cross-site request forgery&lt;/a&gt; (CSRF) attacks. Cross-site request forgeries are a type of malicious exploit whereby unauthorized commands are performed on behalf of an authenticated user.</source>
          <target state="translated">Laravelを使用すると、&lt;a href=&quot;https://en.wikipedia.org/wiki/Cross-site_request_forgery&quot;&gt;クロスサイトリクエストフォージェリ&lt;/a&gt;（CSRF）攻撃からアプリケーションを簡単に保護できます。クロスサイトリクエストフォージェリは、認証されたユーザーに代わって不正なコマンドが実行される悪意のある悪用の一種です。</target>
        </trans-unit>
        <trans-unit id="130ce7ff7020afba7f0913844babb3ee6ec322d2" translate="yes" xml:space="preserve">
          <source>Laravel needs almost no other configuration out of the box. You are free to get started developing! However, you may wish to review the &lt;code&gt;config/app.php&lt;/code&gt; file and its documentation. It contains several options such as &lt;code&gt;timezone&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; that you may wish to change according to your application.</source>
          <target state="translated">Laravelは、箱から出してすぐに他の構成をほとんど必要としません。開発を始めるのは自由です！ただし、 &lt;code&gt;config/app.php&lt;/code&gt; ファイルとそのドキュメントを確認することもできます。 &lt;code&gt;timezone&lt;/code&gt; や &lt;code&gt;locale&lt;/code&gt; など、アプリケーションに応じて変更したいオプションがいくつか含まれています。</target>
        </trans-unit>
        <trans-unit id="7bb8c2527b9f6e79aac1af2ce34cc440fa5579f6" translate="yes" xml:space="preserve">
          <source>Laravel now allows you to send notifications in a locale other than the current language, and will even remember this locale if the notification is queued.</source>
          <target state="translated">Laravelでは、現在の言語以外のロケールで通知を送信できるようになりました。</target>
        </trans-unit>
        <trans-unit id="0dd05a2588652165e30f64d82062155164f3c8bd" translate="yes" xml:space="preserve">
          <source>Laravel now offers Horizon, a beautiful dashboard and configuration system for your Redis powered queues. Check out the full &lt;a href=&quot;horizon&quot;&gt;Horizon documentation&lt;/a&gt; for more information.</source>
          <target state="translated">Laravelは、Horizo​​n、Redis搭載キュー用の美しいダッシュボードおよび構成システムを提供しています。詳細については、&lt;a href=&quot;horizon&quot;&gt;Horizo​​n&lt;/a&gt;の完全なドキュメントを確認してください。</target>
        </trans-unit>
        <trans-unit id="4bf1c4203af57f1e157e5a9647a95c28f5e4347f" translate="yes" xml:space="preserve">
          <source>Laravel offers several packages related to authentication. Before continuing, we'll review the general authentication ecosystem in Laravel and discuss each package's intended purpose.</source>
          <target state="translated">Laravelには認証に関連したいくつかのパッケージがあります。続ける前に、Laravelの一般的な認証エコシステムをおさらいし、各パッケージの意図する目的について説明します。</target>
        </trans-unit>
        <trans-unit id="50baf218e59e369ed84a8be6653fe3d647995653" translate="yes" xml:space="preserve">
          <source>Laravel provides a clean, simple API over the popular &lt;a href=&quot;https://swiftmailer.symfony.com/&quot;&gt;SwiftMailer&lt;/a&gt; library with drivers for SMTP, Mailgun, Postmark, Amazon SES, and &lt;code&gt;sendmail&lt;/code&gt;, allowing you to quickly get started sending mail through a local or cloud based service of your choice.</source>
          <target state="translated">Laravelは、SMTP、Mailgun、Postmark、Amazon SES、 &lt;code&gt;sendmail&lt;/code&gt; 用のドライバーを備えた人気の&lt;a href=&quot;https://swiftmailer.symfony.com/&quot;&gt;SwiftMailer&lt;/a&gt;ライブラリ上にクリーンでシンプルなAPIを提供し、選択したローカルまたはクラウドベースのサービスを介してメールの送信をすばやく開始できるようにします。</target>
        </trans-unit>
        <trans-unit id="b3aa3b4e113225fd27a3d53d90a6666ab9e105dc" translate="yes" xml:space="preserve">
          <source>Laravel provides a clean, simple API over the popular &lt;a href=&quot;https://swiftmailer.symfony.com/&quot;&gt;SwiftMailer&lt;/a&gt; library with drivers for SMTP, Mailgun, SparkPost, Amazon SES, PHP's &lt;code&gt;mail&lt;/code&gt; function, and &lt;code&gt;sendmail&lt;/code&gt;, allowing you to quickly get started sending mail through a local or cloud based service of your choice.</source>
          <target state="translated">Laravelは、SMTP、Mailgun、SparkPost、Amazon SES、PHPの &lt;code&gt;mail&lt;/code&gt; 機能、および &lt;code&gt;sendmail&lt;/code&gt; のドライバーを備えた一般的な&lt;a href=&quot;https://swiftmailer.symfony.com/&quot;&gt;SwiftMailer&lt;/a&gt;ライブラリを介して、クリーンでシンプルなAPI を提供します。これにより、選択したローカルまたはクラウドベースのサービスを通じてメールの送信をすばやく開始できます。</target>
        </trans-unit>
        <trans-unit id="b39f18b52756f4c0208b4a2ae469e24f331d5299" translate="yes" xml:space="preserve">
          <source>Laravel provides a convenient interface to the Redis &lt;code&gt;publish&lt;/code&gt; and &lt;code&gt;subscribe&lt;/code&gt; commands. These Redis commands allow you to listen for messages on a given &quot;channel&quot;. You may publish messages to the channel from another application, or even using another programming language, allowing easy communication between applications and processes.</source>
          <target state="translated">Laravelは、Redisの &lt;code&gt;publish&lt;/code&gt; および &lt;code&gt;subscribe&lt;/code&gt; コマンドへの便利なインターフェイスを提供します。これらのRedisコマンドを使用すると、特定の「チャネル」でメッセージをリッスンできます。別のアプリケーションから、または別のプログラミング言語を使用して、メッセージをチャネルにパブリッシュして、アプリケーションとプロセス間の通信を容易にすることができます。</target>
        </trans-unit>
        <trans-unit id="f93392b2439ecea411f5390bb38e41b2291a9ae6" translate="yes" xml:space="preserve">
          <source>Laravel provides a convenient way to &lt;a href=&quot;scheduling&quot;&gt;schedule Cron jobs&lt;/a&gt; by scheduling a single &lt;code&gt;schedule:run&lt;/code&gt; Artisan command to be run every minute. The &lt;code&gt;schedule:run&lt;/code&gt; command will examine the job schedule defined in your &lt;code&gt;App\Console\Kernel&lt;/code&gt; class to determine which jobs should be run.</source>
          <target state="translated">Laravelは、単一の &lt;code&gt;schedule:run&lt;/code&gt; Artisanコマンドを毎分実行するようにスケジュールすることにより、&lt;a href=&quot;scheduling&quot;&gt;cronジョブ&lt;/a&gt;をスケジュールする便利な方法を提供します。 &lt;code&gt;schedule:run&lt;/code&gt; コマンドは、あなたの中で定義されたジョブのスケジュールについて検討する &lt;code&gt;App\Console\Kernel&lt;/code&gt; ジョブを実行すべきかを決定するためにクラスを。</target>
        </trans-unit>
        <trans-unit id="6c9a36161b4f92e85347df6335f4c48e840ae2c4" translate="yes" xml:space="preserve">
          <source>Laravel provides a powerful filesystem abstraction thanks to the wonderful &lt;a href=&quot;https://github.com/thephpleague/flysystem&quot;&gt;Flysystem&lt;/a&gt; PHP package by Frank de Jonge. The Laravel Flysystem integration provides simple to use drivers for working with local filesystems and Amazon S3. Even better, it's amazingly simple to switch between these storage options as the API remains the same for each system.</source>
          <target state="translated">Laravelは、Frank &lt;a href=&quot;https://github.com/thephpleague/flysystem&quot;&gt;deJonge&lt;/a&gt;による素晴らしいFlysystemPHPパッケージのおかげで、強力なファイルシステムの抽象化を提供します。Laravel Flysystem統合は、ローカルファイルシステムとAmazonS3を操作するための使いやすいドライバーを提供します。さらに良いことに、APIは各システムで同じままであるため、これらのストレージオプションを切り替えるのは驚くほど簡単です。</target>
        </trans-unit>
        <trans-unit id="12a705905639d623c82b18c5c6933a3ec66136ea" translate="yes" xml:space="preserve">
          <source>Laravel provides a powerful filesystem abstraction thanks to the wonderful &lt;a href=&quot;https://github.com/thephpleague/flysystem&quot;&gt;Flysystem&lt;/a&gt; PHP package by Frank de Jonge. The Laravel Flysystem integration provides simple to use drivers for working with local filesystems, Amazon S3, and Rackspace Cloud Storage. Even better, it's amazingly simple to switch between these storage options as the API remains the same for each system.</source>
          <target state="translated">Laravelは、Frank de Jongeによる素晴らしい&lt;a href=&quot;https://github.com/thephpleague/flysystem&quot;&gt;Flysystem&lt;/a&gt; PHPパッケージのおかげで、強力なファイルシステムの抽象化を提供します。Laravel Flysystem統合は、ローカルファイルシステム、Amazon S3、Rackspace Cloud Storageを操作するための使いやすいドライバーを提供します。さらに良いことに、APIは各システムで同じなので、これらのストレージオプションを切り替えるのは驚くほど簡単です。</target>
        </trans-unit>
        <trans-unit id="7d628c4bcdd1eedc9d614fd86efa7e472d45e40a" translate="yes" xml:space="preserve">
          <source>Laravel provides a quick way to scaffold all of the routes and views you need for authentication using one simple command:</source>
          <target state="translated">Laravelは、認証に必要なすべてのルートやビューを、1つのシンプルなコマンドを使って簡単に足場にする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="fd33212ed653b11f6893f6a09ba79bca90e6a772" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of custom assertion methods for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; feature tests. These assertions may be accessed on the response that is returned from the &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; test methods:</source>
          <target state="translated">Laravelは、&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;機能テスト用のさまざまなカスタムアサーションメソッドを提供します。これらのアサーションは、 &lt;code&gt;json&lt;/code&gt; 、 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;post&lt;/code&gt; 、 &lt;code&gt;put&lt;/code&gt; 、および &lt;code&gt;delete&lt;/code&gt; テストメソッドから返される応答でアクセスできます。</target>
        </trans-unit>
        <trans-unit id="a82ee3e6c12ae77e511ce6216faa0630491a5166" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of custom assertion methods for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; tests. These assertions may be accessed on the response that is returned from the &lt;code&gt;json&lt;/code&gt;, &lt;code&gt;get&lt;/code&gt;, &lt;code&gt;post&lt;/code&gt;, &lt;code&gt;put&lt;/code&gt;, and &lt;code&gt;delete&lt;/code&gt; test methods:</source>
          <target state="translated">Laravelは、&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;テスト用にさまざまなカスタムアサーションメソッドを提供します。これらのアサーションは、 &lt;code&gt;json&lt;/code&gt; 、 &lt;code&gt;get&lt;/code&gt; 、 &lt;code&gt;post&lt;/code&gt; 、 &lt;code&gt;put&lt;/code&gt; 、および &lt;code&gt;delete&lt;/code&gt; テストメソッドから返される応答でアクセスできます。</target>
        </trans-unit>
        <trans-unit id="20a7a760646b374a74c40602326bbfe95c444580" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of helpful tools to make it easier to test your database driven applications. First, you may use the &lt;code&gt;assertDatabaseHas&lt;/code&gt; helper to assert that data exists in the database matching a given set of criteria. For example, if you would like to verify that there is a record in the &lt;code&gt;users&lt;/code&gt; table with the &lt;code&gt;email&lt;/code&gt; value of &lt;code&gt;sally@example.com&lt;/code&gt;, you can do the following:</source>
          <target state="translated">Laravelは、データベース駆動型アプリケーションのテストを容易にするさまざまな便利なツールを提供しています。まず、 &lt;code&gt;assertDatabaseHas&lt;/code&gt; ヘルパーを使用して、指定された一連の基準に一致するデータがデータベースに存在することをアサートできます。たとえば、 &lt;code&gt;users&lt;/code&gt; テーブルに &lt;code&gt;email&lt;/code&gt; 値が &lt;code&gt;sally@example.com&lt;/code&gt; のレコードがあることを確認する場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="d8a4cfdca813c133097c6572fbf7ff4af7596bb9" translate="yes" xml:space="preserve">
          <source>Laravel provides a variety of helpful validation rules; however, you may wish to specify some of your own. One method of registering custom validation rules is using rule objects. To generate a new rule object, you may use the &lt;code&gt;make:rule&lt;/code&gt; Artisan command. Let's use this command to generate a rule that verifies a string is uppercase. Laravel will place the new rule in the &lt;code&gt;app/Rules&lt;/code&gt; directory:</source>
          <target state="translated">Laravelは、さまざまな有用な検証ルールを提供します。ただし、独自のものを指定することもできます。カスタム検証ルールを登録する1つの方法は、ルールオブジェクトを使用することです。新しいルールオブジェクトを生成するには、 &lt;code&gt;make:rule&lt;/code&gt; Artisanコマンドを使用できます。このコマンドを使用して、文字列が大文字であることを確認するルールを生成してみましょう。Laravelは &lt;code&gt;app/Rules&lt;/code&gt; ディレクトリに新しいルールを配置します。</target>
        </trans-unit>
        <trans-unit id="2f392ecfbeaffefcd9cca1ab1c6a0fa43866cbfb" translate="yes" xml:space="preserve">
          <source>Laravel provides a very fluent API for making HTTP requests to your application and examining the output. For example, take a look at the feature test defined below:</source>
          <target state="translated">Laravelは、アプリケーションにHTTPリクエストを行い、その出力を調べるための非常に流暢なAPIを提供しています。例えば、以下に定義されている機能テストを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="b622b692e4fa7baafaf1f9eec256d966ec4e8874" translate="yes" xml:space="preserve">
          <source>Laravel provides a very fluent API for making HTTP requests to your application and examining the output. For example, take a look at the test defined below:</source>
          <target state="translated">Laravelは、アプリケーションにHTTPリクエストを行い、その出力を調べるための非常に流暢なAPIを提供しています。例えば、以下に定義されているテストを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="c0440fe4780c891a1f13dedb0f7ceb95a4f74412" translate="yes" xml:space="preserve">
          <source>Laravel provides an expressive, minimal API around the &lt;a href=&quot;http://docs.guzzlephp.org/en/stable/&quot;&gt;Guzzle HTTP client&lt;/a&gt;, allowing you to quickly make outgoing HTTP requests to communicate with other web applications. Laravel's wrapper around Guzzle is focused on its most common use cases and a wonderful developer experience.</source>
          <target state="translated">Laravelは、&lt;a href=&quot;http://docs.guzzlephp.org/en/stable/&quot;&gt;Guzzle HTTPクライアントの&lt;/a&gt;周りに表現力豊かで最小限のAPIを提供し、他のWebアプリケーションと通信するために発信HTTP要求をすばやく行うことができます。LaravelのGuzzleのラッパーは、その最も一般的なユースケースと素晴らしい開発者エクスペリエンスに焦点を当てています。</target>
        </trans-unit>
        <trans-unit id="aa48c0c930d739065f257c85f56b477e40d18be0" translate="yes" xml:space="preserve">
          <source>Laravel provides an expressive, unified API for various caching backends. The cache configuration is located at &lt;code&gt;config/cache.php&lt;/code&gt;. In this file you may specify which cache driver you would like to be used by default throughout your application. Laravel supports popular caching backends like &lt;a href=&quot;https://memcached.org&quot;&gt;Memcached&lt;/a&gt; and &lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt; out of the box.</source>
          <target state="translated">Laravelは、さまざまなキャッシングバックエンド用の表現力豊かな統合APIを提供します。キャッシュ構成は &lt;code&gt;config/cache.php&lt;/code&gt; にあります。このファイルでは、アプリケーション全体でデフォルトで使用するキャッシュドライバーを指定できます。Laravelは、&lt;a href=&quot;https://memcached.org&quot;&gt;Memcached&lt;/a&gt;や&lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt;などの一般的なキャッシングバックエンドをそのままサポートします。</target>
        </trans-unit>
        <trans-unit id="d06f596d1d83aabeadd2058c90ab91150dbe4d67" translate="yes" xml:space="preserve">
          <source>Laravel provides helpers for mocking events, jobs, and facades out of the box. These helpers primarily provide a convenience layer over Mockery so you do not have to manually make complicated Mockery method calls. Of course, you are free to use &lt;a href=&quot;http://docs.mockery.io/en/latest/&quot;&gt;Mockery&lt;/a&gt; or PHPUnit to create your own mocks or spies.</source>
          <target state="translated">Laravelは、イベント、ジョブ、ファサードを模倣するためのヘルパーを提供します。これらのヘルパーは主にMockery上に便利なレイヤーを提供するため、複雑なMockeryメソッド呼び出しを手動で行う必要はありません。もちろん、&lt;a href=&quot;http://docs.mockery.io/en/latest/&quot;&gt;Mockery&lt;/a&gt;またはPHPUnitを自由に使用して、独自のモックまたはスパイを作成できます。</target>
        </trans-unit>
        <trans-unit id="a07e54339dbbb742799bd0e946c0c542040eafe7" translate="yes" xml:space="preserve">
          <source>Laravel provides helpers for mocking events, jobs, and facades out of the box. These helpers primarily provide a convenience layer over Mockery so you do not have to manually make complicated Mockery method calls. You can also use &lt;a href=&quot;http://docs.mockery.io/en/latest/&quot;&gt;Mockery&lt;/a&gt; or PHPUnit to create your own mocks or spies.</source>
          <target state="translated">Laravelは、イベント、仕事、ファサードをすぐにモックするためのヘルパーを提供します。これらのヘルパーは主にMockeryの便利なレイヤーを提供するため、複雑なMockeryメソッド呼び出しを手動で行う必要はありません。&lt;a href=&quot;http://docs.mockery.io/en/latest/&quot;&gt;Mockery&lt;/a&gt;またはPHPUnitを使用して、独自のモックまたはスパイを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="ad5793678fae7e5ef41fc2210097a8d167a30ba0" translate="yes" xml:space="preserve">
          <source>Laravel provides several database assertions for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; feature tests:</source>
          <target state="translated">Laravelは、&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;機能テスト用にいくつかのデータベースアサーションを提供します。</target>
        </trans-unit>
        <trans-unit id="71cb1a8ba3fbce028b34fa92b6e850eff88beeaf" translate="yes" xml:space="preserve">
          <source>Laravel provides several database assertions for your &lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt; tests:</source>
          <target state="translated">Laravelは、&lt;a href=&quot;https://phpunit.de/&quot;&gt;PHPUnit&lt;/a&gt;テスト用にいくつかのデータベースアサーションを提供します。</target>
        </trans-unit>
        <trans-unit id="af03cc72a8b223d72a4e9e3e587c5f00bcbd661a" translate="yes" xml:space="preserve">
          <source>Laravel provides several different approaches to validate your application's incoming data. By default, Laravel's base controller class uses a &lt;code&gt;ValidatesRequests&lt;/code&gt; trait which provides a convenient method to validate incoming HTTP request with a variety of powerful validation rules.</source>
          <target state="translated">Laravelは、アプリケーションの受信データを検証するためのいくつかの異なるアプローチを提供します。デフォルトでは、Laravelのベースコントローラークラスは &lt;code&gt;ValidatesRequests&lt;/code&gt; トレイトを使用します。これは、さまざまな強力な検証ルールで着信HTTPリクエストを検証する便利な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="26edf87f826c62658d2b8d7e730c5dfd79566de3" translate="yes" xml:space="preserve">
          <source>Laravel provides several different approaches to validate your application's incoming data. By default, Laravel's base controller class uses a &lt;code&gt;ValidatesRequests&lt;/code&gt; trait which provides a convenient method to validate incoming HTTP requests with a variety of powerful validation rules.</source>
          <target state="translated">Laravelは、アプリケーションの受信データを検証するためのいくつかの異なるアプローチを提供します。デフォルトでは、Laravelの基本コントローラークラスは &lt;code&gt;ValidatesRequests&lt;/code&gt; トレイトを使用します。これは、さまざまな強力な検証ルールを使用して着信HTTPリクエストを検証するための便利なメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="377d4ec0047e492ddfb45dce90bd33c1e922d0c8" translate="yes" xml:space="preserve">
          <source>Laravel provides several helpers for working with the session during HTTP testing. First, you may set the session data to a given array using the &lt;code&gt;withSession&lt;/code&gt; method. This is useful for loading the session with data before issuing a request to your application:</source>
          <target state="translated">Laravelは、HTTPテスト中にセッションを操作するためのいくつかのヘルパーを提供します。まず、 &lt;code&gt;withSession&lt;/code&gt; メソッドを使用して、セッションデータを特定の配列に設定できます。これは、アプリケーションにリクエストを発行する前に、セッションにデータをロードするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="71e9b55859defa1b2f53a05b5bf3dcd3292455c4" translate="yes" xml:space="preserve">
          <source>Laravel provides several helpers to assist you in generating URLs for your application. Of course, these are mainly helpful when building links in your templates and API responses, or when generating redirect responses to another part of your application.</source>
          <target state="translated">Laravelには、アプリケーションのURLを生成するためのヘルパーがいくつか用意されています。もちろん、これらは主にテンプレートやAPIレスポンスでリンクを構築したり、アプリケーションの別の部分へのリダイレクトレスポンスを生成する際に役立ちます。</target>
        </trans-unit>
        <trans-unit id="e85a80906235f0cfa9a94309ddad8112fee9ac04" translate="yes" xml:space="preserve">
          <source>Laravel provides several helpers to assist you in generating URLs for your application. These are mainly helpful when building links in your templates and API responses, or when generating redirect responses to another part of your application.</source>
          <target state="translated">Laravelには、アプリケーションのURLを生成するためのヘルパーがいくつか用意されています。これらは主にテンプレートやAPIレスポンスでリンクを構築したり、アプリケーションの別の部分へのリダイレクトレスポンスを生成する際に役立ちます。</target>
        </trans-unit>
        <trans-unit id="2993aeac35e30aa21d4bfad9fad4830935a0b664" translate="yes" xml:space="preserve">
          <source>Laravel provides two optional packages to assist you in managing API tokens and authenticating requests made with API tokens: &lt;a href=&quot;passport&quot;&gt;Passport&lt;/a&gt; and &lt;a href=&quot;sanctum&quot;&gt;Sanctum&lt;/a&gt;. Please note that these libraries and Laravel's built-in cookie based authentication libraries are not mutually exclusive. These libraries primarily focus on API token authentication while the built-in authentication services focus on cookie based browser authentication. Many applications will use both Laravel's built-in cookie based authentication services and one of Laravel's API authentication packages.</source>
          <target state="translated">Laravelは、APIトークンの管理とAPIトークンで行われたリクエストの認証を支援する2つのオプションパッケージ、&lt;a href=&quot;passport&quot;&gt;Passport&lt;/a&gt;と&lt;a href=&quot;sanctum&quot;&gt;Sanctumを提供してい&lt;/a&gt;ます。これらのライブラリとLaravelの組み込みのCookieベースの認証ライブラリは相互に排他的ではないことに注意してください。これらのライブラリは主にAPIトークン認証に重点を置いていますが、組み込みの認証サービスはCookieベースのブラウザ認証に重点を置いています。多くのアプリケーションは、Laravelの組み込みCookieベースの認証サービスとLaravelのAPI認証パッケージの1つを使用します。</target>
        </trans-unit>
        <trans-unit id="a86338e33d89f0009dba25428ea9492ac45b732b" translate="yes" xml:space="preserve">
          <source>Laravel queues provide a unified API across a variety of different queue backends, such as Beanstalk, Amazon SQS, Redis, or even a relational database. Queues allow you to defer the processing of a time consuming task, such as sending an email, until a later time. Deferring these time consuming tasks drastically speeds up web requests to your application.</source>
          <target state="translated">Laravelのキューは、Beanstalk、Amazon SQS、Redis、さらにはリレーショナルデータベースなど、さまざまな異なるキューのバックエンドにまたがって統一されたAPIを提供します。キューを利用することで、メール送信などの時間のかかるタスクの処理を後回しにすることができます。このような時間のかかるタスクを先延ばしにすることで、アプリケーションへのウェブリクエストを大幅に高速化することができます。</target>
        </trans-unit>
        <trans-unit id="1d0a79c12a5991755c509a170f887ba1338bacde" translate="yes" xml:space="preserve">
          <source>Laravel raises a variety of &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; during the authentication process. You may attach listeners to these events in your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">Laravelは、認証プロセス中にさまざまな&lt;a href=&quot;events&quot;&gt;イベントを発生&lt;/a&gt;させます。 &lt;code&gt;EventServiceProvider&lt;/code&gt; でこれらのイベントにリスナーをアタッチできます。</target>
        </trans-unit>
        <trans-unit id="4d86064b0b803e795d6c60896fba5073102086a7" translate="yes" xml:space="preserve">
          <source>Laravel resource routing assigns the typical &quot;CRUD&quot; routes to a controller with a single line of code. For example, you may wish to create a controller that handles all HTTP requests for &quot;photos&quot; stored by your application. Using the &lt;code&gt;make:controller&lt;/code&gt; Artisan command, we can quickly create such a controller:</source>
          <target state="translated">Laravelリソースルーティングは、1行のコードでコントローラーに典型的な「CRUD」ルートを割り当てます。たとえば、アプリケーションに保存されている「写真」に対するすべてのHTTPリクエストを処理するコントローラーを作成したい場合があります。 &lt;code&gt;make:controller&lt;/code&gt; Artisanコマンドを使用すると、このようなコントローラーをすばやく作成できます。</target>
        </trans-unit>
        <trans-unit id="db3eb07a9ad4e6572d97643516cd64bcf4c0d76f" translate="yes" xml:space="preserve">
          <source>Laravel ships with a handful of notification channels, but you may want to write your own drivers to deliver notifications via other channels. Laravel makes it simple. To get started, define a class that contains a &lt;code&gt;send&lt;/code&gt; method. The method should receive two arguments: a &lt;code&gt;$notifiable&lt;/code&gt; and a &lt;code&gt;$notification&lt;/code&gt;:</source>
          <target state="translated">Laravelには少数の通知チャネルが付属していますが、他のチャネルを介して通知を配信する独自​​のドライバーを作成することもできます。 Laravelはそれを簡単にします。はじめに、 &lt;code&gt;send&lt;/code&gt; メソッドを含むクラスを定義します。メソッドは2つの引数を受け取る必要があります： &lt;code&gt;$notifiable&lt;/code&gt; と &lt;code&gt;$notification&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="e0967b9c078669e6f3dfcad765e4b4d835880a7e" translate="yes" xml:space="preserve">
          <source>Laravel ships with several pre-built authentication controllers, which are located in the &lt;code&gt;App\Http\Controllers\Auth&lt;/code&gt; namespace. The &lt;code&gt;RegisterController&lt;/code&gt; handles new user registration, the &lt;code&gt;LoginController&lt;/code&gt; handles authentication, the &lt;code&gt;ForgotPasswordController&lt;/code&gt; handles e-mailing links for resetting passwords, and the &lt;code&gt;ResetPasswordController&lt;/code&gt; contains the logic to reset passwords. Each of these controllers uses a trait to include their necessary methods. For many applications, you will not need to modify these controllers at all.</source>
          <target state="translated">Laravelには、 &lt;code&gt;App\Http\Controllers\Auth&lt;/code&gt; 名前空間にある事前構築された認証コントローラーがいくつか付属しています。 &lt;code&gt;RegisterController&lt;/code&gt; ハンドル新規ユーザ登録、 &lt;code&gt;LoginController&lt;/code&gt; のハンドル認証、 &lt;code&gt;ForgotPasswordController&lt;/code&gt; のパスワードのリセット用のハンドルの電子メール送信リンク、および &lt;code&gt;ResetPasswordController&lt;/code&gt; は、パスワードをリセットするためのロジックが含まれています。これらの各コントローラーは、必要なメソッドを含めるために特性を使用します。多くのアプリケーションでは、これらのコントローラーを変更する必要はまったくありません。</target>
        </trans-unit>
        <trans-unit id="0751568484da6d817711054f3c59c31c7a20e1b7" translate="yes" xml:space="preserve">
          <source>Laravel should always be served out of the root of the &quot;web directory&quot; configured for your web server. You should not attempt to serve a Laravel application out of a subdirectory of the &quot;web directory&quot;. Attempting to do so could expose sensitive files present within your application.</source>
          <target state="translated">Laravelは、常にウェブサーバーに設定された &quot;ウェブディレクトリ &quot;のルートから提供されるべきです。Laravelアプリケーションを &quot;webディレクトリ &quot;のサブディレクトリから提供しようとしてはいけません。そうしようとすると、アプリケーション内の機密ファイルを公開してしまう可能性があります。</target>
        </trans-unit>
        <trans-unit id="57254b3de147ca512d02857930002d1f6e752499" translate="yes" xml:space="preserve">
          <source>Laravel stores the current CSRF token in a &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie that is included with each response generated by the framework. You can use the cookie value to set the &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; request header.</source>
          <target state="translated">Laravelは、現在のCSRFトークンを、フレームワークによって生成される各応答に含まれる &lt;code&gt;XSRF-TOKEN&lt;/code&gt; Cookieに格納します。cookie値を使用して、 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 要求ヘッダーを設定できます。</target>
        </trans-unit>
        <trans-unit id="1a63de9b15d640e432d497dcf31c52becd0f5144" translate="yes" xml:space="preserve">
          <source>Laravel stores the current CSRF token in an encrypted &lt;code&gt;XSRF-TOKEN&lt;/code&gt; cookie that is included with each response generated by the framework. You can use the cookie value to set the &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; request header.</source>
          <target state="translated">Laravelは、フレームワークによって生成された各応答に含まれる暗号化された &lt;code&gt;XSRF-TOKEN&lt;/code&gt; Cookieに現在のCSRFトークンを保存します。cookie値を使用して、 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; リクエストヘッダーを設定できます。</target>
        </trans-unit>
        <trans-unit id="e111384157619ddaf66dd2a6b3b996f4fa547577" translate="yes" xml:space="preserve">
          <source>Laravel strives to make the entire PHP development experience delightful, including your local development environment. &lt;a href=&quot;https://www.vagrantup.com&quot;&gt;Vagrant&lt;/a&gt; provides a simple, elegant way to manage and provision Virtual Machines.</source>
          <target state="translated">Laravelは、ローカル開発環境を含め、PHP開発エクスペリエンス全体を楽しいものにするよう努めています。&lt;a href=&quot;https://www.vagrantup.com&quot;&gt;Vagrant&lt;/a&gt;は、仮想マシンを管理およびプロビジョニングするためのシンプルでエレガントな方法を提供します。</target>
        </trans-unit>
        <trans-unit id="9fde55e089473ffd4742bea37479382b607a39e6" translate="yes" xml:space="preserve">
          <source>Laravel uses the &lt;code&gt;utf8mb4&lt;/code&gt; character set by default, which includes support for storing &quot;emojis&quot; in the database. If you are running a version of MySQL older than the 5.7.7 release or MariaDB older than the 10.2.2 release, you may need to manually configure the default string length generated by migrations in order for MySQL to create indexes for them. You may configure this by calling the &lt;code&gt;Schema::defaultStringLength&lt;/code&gt; method within your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">Laravelはデフォルトで &lt;code&gt;utf8mb4&lt;/code&gt; 文字セットを使用します。これには、データベースに「絵文字」を格納するためのサポートが含まれます。5.7.7リリースより前のバージョンのMySQLまたは10.2.2リリースより前のMariaDBを実行している場合、MySQLがインデックスを作成するために、移行によって生成されるデフォルトの文字列長を手動で構成する必要がある場合があります。 &lt;code&gt;AppServiceProvider&lt;/code&gt; 内の &lt;code&gt;Schema::defaultStringLength&lt;/code&gt; メソッドを呼び出すことで、これを構成できます。</target>
        </trans-unit>
        <trans-unit id="dd39d25a1a91914d88e412fe36c4da95f698f7df" translate="yes" xml:space="preserve">
          <source>Laravel utilizes &lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt; to manage its dependencies. So, before using Laravel, make sure you have Composer installed on your machine.</source>
          <target state="translated">Laravelは、依存関係を管理するために&lt;a href=&quot;https://getcomposer.org&quot;&gt;Composer&lt;/a&gt;を利用します。したがって、Laravelを使用する前に、Composerがマシンにインストールされていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="dc27ae0969e14d1eaa465c5a3dfe3f5cb9144c62" translate="yes" xml:space="preserve">
          <source>Laravel will automatically generate a reasonable index name, but you may pass a second argument to the method to specify the name yourself:</source>
          <target state="translated">Laravelは自動的に合理的なインデックス名を生成してくれますが、第2引数をメソッドに渡して自分で指定することもできます。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
