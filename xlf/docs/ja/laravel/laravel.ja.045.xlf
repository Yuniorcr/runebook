<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="49d0d44ddb1ebfcda0145fab96d0c5174a88f710" translate="yes" xml:space="preserve">
          <source>WithoutEvents (Foundation\Testing)</source>
          <target state="translated">WithoutEvents (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="5ccaa1f30c0e25fabcd822b4c443b5961116622e" translate="yes" xml:space="preserve">
          <source>WithoutEvents::disableEventsForAllTests()</source>
          <target state="translated">WithoutEvents::disableEventsForAllTests()</target>
        </trans-unit>
        <trans-unit id="769732825bfc4a79eb8091e0cac27d7dcaa739ce" translate="yes" xml:space="preserve">
          <source>WithoutMiddleware</source>
          <target state="translated">WithoutMiddleware</target>
        </trans-unit>
        <trans-unit id="7fd06907c7b6cca217664a812fb2786b7edc790f" translate="yes" xml:space="preserve">
          <source>WithoutMiddleware (Foundation\Testing)</source>
          <target state="translated">WithoutMiddleware (FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="021a29bbd9ad429fc63a65edd0bb35e8d32e9baf" translate="yes" xml:space="preserve">
          <source>WithoutMiddleware::disableMiddlewareForAllTests()</source>
          <target state="translated">WithoutMiddleware::disableMiddlewareForAllTests()</target>
        </trans-unit>
        <trans-unit id="29432987c01979db5203a4a0ff4fae0505a4f4ca" translate="yes" xml:space="preserve">
          <source>WithoutOverlapping</source>
          <target state="translated">WithoutOverlapping</target>
        </trans-unit>
        <trans-unit id="e4b1b9dff02a7550f67f0acc5c2aa0e1de66fb0e" translate="yes" xml:space="preserve">
          <source>WithoutOverlapping (Queue\Middleware)</source>
          <target state="translated">WithoutOverlapping (QueueMiddleware)</target>
        </trans-unit>
        <trans-unit id="dbb6cd79a6fe7e8fda6481f219ac3aa6bf9d40fa" translate="yes" xml:space="preserve">
          <source>WithoutOverlapping::__construct()</source>
          <target state="translated">WithoutOverlapping::__construct()</target>
        </trans-unit>
        <trans-unit id="3a851a191719544372b6c6101f329a81386403b7" translate="yes" xml:space="preserve">
          <source>WithoutOverlapping::dontRelease()</source>
          <target state="translated">WithoutOverlapping::dontRelease()</target>
        </trans-unit>
        <trans-unit id="42b39c093a78e2c89437eb2dd3f53a8bde66a16e" translate="yes" xml:space="preserve">
          <source>WithoutOverlapping::expireAfter()</source>
          <target state="translated">WithoutOverlapping::expireAfter()</target>
        </trans-unit>
        <trans-unit id="467e1867fc894f66b24413b578f414815242c90e" translate="yes" xml:space="preserve">
          <source>WithoutOverlapping::getLockKey()</source>
          <target state="translated">WithoutOverlapping::getLockKey()</target>
        </trans-unit>
        <trans-unit id="0a7a83170909092d625b68a602bbc71766ba9f3a" translate="yes" xml:space="preserve">
          <source>WithoutOverlapping::handle()</source>
          <target state="translated">WithoutOverlapping::handle()</target>
        </trans-unit>
        <trans-unit id="2336ae10feb59ae33641641fc97798d7acb57134" translate="yes" xml:space="preserve">
          <source>WithoutOverlapping::releaseAfter()</source>
          <target state="translated">WithoutOverlapping::releaseAfter()</target>
        </trans-unit>
        <trans-unit id="1c891d17830d0942b8f091ae003887e3fd4a2233" translate="yes" xml:space="preserve">
          <source>WithoutOverlapping::withPrefix()</source>
          <target state="translated">WithoutOverlapping::withPrefix()</target>
        </trans-unit>
        <trans-unit id="577ac1a18e05636244b642116532cc61a963dfce" translate="yes" xml:space="preserve">
          <source>WordPress</source>
          <target state="translated">WordPress</target>
        </trans-unit>
        <trans-unit id="04181bb74c5fdef8d94b6263e1e7a284a73bbc85" translate="yes" xml:space="preserve">
          <source>WorkCommand</source>
          <target state="translated">WorkCommand</target>
        </trans-unit>
        <trans-unit id="98ef15da06f32e73ccf4be3d6809a9bec1f38b92" translate="yes" xml:space="preserve">
          <source>WorkCommand (Queue)</source>
          <target state="translated">ワークコマンド(キュー</target>
        </trans-unit>
        <trans-unit id="46362fe509188835d9ce9043d48e461bf047f3b5" translate="yes" xml:space="preserve">
          <source>WorkCommand::__construct()</source>
          <target state="translated">WorkCommand::__construct()</target>
        </trans-unit>
        <trans-unit id="298ebbff254c1ee2fc419b06adaee27bb4144c9e" translate="yes" xml:space="preserve">
          <source>WorkCommand::downForMaintenance()</source>
          <target state="translated">WorkCommand::downForMaintenance()</target>
        </trans-unit>
        <trans-unit id="1cf0c668bdaad0bdbcfeeafe4a4ba801728e2445" translate="yes" xml:space="preserve">
          <source>WorkCommand::gatherWorkerOptions()</source>
          <target state="translated">WorkCommand::gatherWorkerOptions()</target>
        </trans-unit>
        <trans-unit id="e33c3713edf64c046d6a36600b490cbe0ef1f7cd" translate="yes" xml:space="preserve">
          <source>WorkCommand::getQueue()</source>
          <target state="translated">WorkCommand::getQueue()</target>
        </trans-unit>
        <trans-unit id="42a0751588b3717556c774461f8aefcc85cd0c23" translate="yes" xml:space="preserve">
          <source>WorkCommand::handle()</source>
          <target state="translated">WorkCommand::handle()</target>
        </trans-unit>
        <trans-unit id="3828bbe3cb6ac718fa53e98ad5d2482c33f7bc6a" translate="yes" xml:space="preserve">
          <source>WorkCommand::listenForEvents()</source>
          <target state="translated">WorkCommand::listenForEvents()</target>
        </trans-unit>
        <trans-unit id="03c2edff43e1fdb66a9c110f41221ecf5f3fd7bc" translate="yes" xml:space="preserve">
          <source>WorkCommand::logFailedJob()</source>
          <target state="translated">WorkCommand::logFailedJob()</target>
        </trans-unit>
        <trans-unit id="99f2c07801194352ae8b7b8762bc23565be90698" translate="yes" xml:space="preserve">
          <source>WorkCommand::runWorker()</source>
          <target state="translated">WorkCommand::runWorker()</target>
        </trans-unit>
        <trans-unit id="98901d85f5462e9ebd8dfc3acfab518d8167e343" translate="yes" xml:space="preserve">
          <source>WorkCommand::writeOutput()</source>
          <target state="translated">WorkCommand::writeOutput()</target>
        </trans-unit>
        <trans-unit id="41d9d307e77294e702bc9c27a5cde4b6f25d0db7" translate="yes" xml:space="preserve">
          <source>WorkCommand::writeStatus()</source>
          <target state="translated">WorkCommand::writeStatus()</target>
        </trans-unit>
        <trans-unit id="99edd8c8e615e373739d2cdd38a8942b8a573113" translate="yes" xml:space="preserve">
          <source>Worker</source>
          <target state="translated">Worker</target>
        </trans-unit>
        <trans-unit id="acf6a42651f7fd6af562dd08843ca8ce4b01ad9f" translate="yes" xml:space="preserve">
          <source>Worker (Queue)</source>
          <target state="translated">作業員(キュー)</target>
        </trans-unit>
        <trans-unit id="23bcb7a2b68fd57a2301326bc3b4b95e8afb36f6" translate="yes" xml:space="preserve">
          <source>Worker Sleep Duration</source>
          <target state="translated">労働者の睡眠時間</target>
        </trans-unit>
        <trans-unit id="2ff64de4dae5bc0fb5436654c47a1cf900bb139b" translate="yes" xml:space="preserve">
          <source>Worker Timeouts</source>
          <target state="translated">ワーカーのタイムアウト</target>
        </trans-unit>
        <trans-unit id="04d9228d88ce34e541b41c04d7eafec61de3b27a" translate="yes" xml:space="preserve">
          <source>Worker::__construct()</source>
          <target state="translated">Worker::__construct()</target>
        </trans-unit>
        <trans-unit id="b7ff88359eb11bf9f047dad3a2e217a4213c3834" translate="yes" xml:space="preserve">
          <source>Worker::calculateBackoff()</source>
          <target state="translated">Worker::calculateBackoff()</target>
        </trans-unit>
        <trans-unit id="f64efbe1f879fe6de38f6f5ff98cb8e6508799de" translate="yes" xml:space="preserve">
          <source>Worker::daemon()</source>
          <target state="translated">Worker::daemon()</target>
        </trans-unit>
        <trans-unit id="a9dc622f25b29538450669439e20c9f46671e111" translate="yes" xml:space="preserve">
          <source>Worker::daemonShouldRun()</source>
          <target state="translated">Worker::daemonShouldRun()</target>
        </trans-unit>
        <trans-unit id="d1ec63272fb0917f8bfd5604bd2e87b7d901d0b9" translate="yes" xml:space="preserve">
          <source>Worker::failJob()</source>
          <target state="translated">Worker::failJob()</target>
        </trans-unit>
        <trans-unit id="3bc192a4548818c49c39912e28afcd6cde7f58c0" translate="yes" xml:space="preserve">
          <source>Worker::getManager()</source>
          <target state="translated">Worker::getManager()</target>
        </trans-unit>
        <trans-unit id="9d8aed3bb7630eb44bd296d61d0e2704d936cf32" translate="yes" xml:space="preserve">
          <source>Worker::getNextJob()</source>
          <target state="translated">Worker::getNextJob()</target>
        </trans-unit>
        <trans-unit id="45596eda2a3230d3bdfab1f0e332d23f4c09471f" translate="yes" xml:space="preserve">
          <source>Worker::getTimestampOfLastQueueRestart()</source>
          <target state="translated">Worker::getTimestampOfLastQueueRestart()</target>
        </trans-unit>
        <trans-unit id="2bce0338afa1797fd1b92b6f94a0629ce23287fa" translate="yes" xml:space="preserve">
          <source>Worker::handleJobException()</source>
          <target state="translated">Worker::handleJobException()</target>
        </trans-unit>
        <trans-unit id="08e6198369e1bc932e43649d02c7b19df0bf3568" translate="yes" xml:space="preserve">
          <source>Worker::kill()</source>
          <target state="translated">Worker::kill()</target>
        </trans-unit>
        <trans-unit id="32a6f340bd98c4d07cc9f10c8a2773a639017655" translate="yes" xml:space="preserve">
          <source>Worker::listenForSignals()</source>
          <target state="translated">Worker::listenForSignals()</target>
        </trans-unit>
        <trans-unit id="c6d99aa597060fa0b6be896f3b6d6379bd30c5e2" translate="yes" xml:space="preserve">
          <source>Worker::markJobAsFailedIfAlreadyExceedsMaxAttempts()</source>
          <target state="translated">Worker::markJobAsFailedIfAlreadyExceedsMaxAttempts()</target>
        </trans-unit>
        <trans-unit id="dd2c0e19d26c58eb9cfdbe95a9fa19117162d120" translate="yes" xml:space="preserve">
          <source>Worker::markJobAsFailedIfWillExceedMaxAttempts()</source>
          <target state="translated">Worker::markJobAsFailedIfWillExceedMaxAttempts()</target>
        </trans-unit>
        <trans-unit id="b2129a76354db040af54dabe8c370ed76b579d79" translate="yes" xml:space="preserve">
          <source>Worker::markJobAsFailedIfWillExceedMaxExceptions()</source>
          <target state="translated">Worker::markJobAsFailedIfWillExceedMaxExceptions()</target>
        </trans-unit>
        <trans-unit id="f49d0a2da90778585efbb36bee86c26cd44c23b7" translate="yes" xml:space="preserve">
          <source>Worker::maxAttemptsExceededException()</source>
          <target state="translated">Worker::maxAttemptsExceededException()</target>
        </trans-unit>
        <trans-unit id="203825337d964c1a6876ae26d8b0d1949097de95" translate="yes" xml:space="preserve">
          <source>Worker::memoryExceeded()</source>
          <target state="translated">Worker::memoryExceeded()</target>
        </trans-unit>
        <trans-unit id="da84bb6e36b2a7c19e3ebd1f2d2b804280e6ce20" translate="yes" xml:space="preserve">
          <source>Worker::pauseWorker()</source>
          <target state="translated">Worker::pauseWorker()</target>
        </trans-unit>
        <trans-unit id="ebd2ca8ea72a57608c560453d75fcd0432e2044a" translate="yes" xml:space="preserve">
          <source>Worker::popUsing()</source>
          <target state="translated">Worker::popUsing()</target>
        </trans-unit>
        <trans-unit id="a9a6022fac9c0badb17efd944592bd1bc2efd939" translate="yes" xml:space="preserve">
          <source>Worker::process()</source>
          <target state="translated">Worker::process()</target>
        </trans-unit>
        <trans-unit id="b488a1896329b71d42c353a339f3dcc5cbebbde4" translate="yes" xml:space="preserve">
          <source>Worker::queueShouldRestart()</source>
          <target state="translated">Worker::queueShouldRestart()</target>
        </trans-unit>
        <trans-unit id="c986ebcbd6ab628b3db803233adf9d292c376f57" translate="yes" xml:space="preserve">
          <source>Worker::raiseAfterJobEvent()</source>
          <target state="translated">Worker::raiseAfterJobEvent()</target>
        </trans-unit>
        <trans-unit id="e7a05c1a44dfc985d0d2ca890a0fdb4457c722e9" translate="yes" xml:space="preserve">
          <source>Worker::raiseBeforeJobEvent()</source>
          <target state="translated">Worker::raiseBeforeJobEvent()</target>
        </trans-unit>
        <trans-unit id="b30d8f42bc0eded2686dd3fd14af354c31144e49" translate="yes" xml:space="preserve">
          <source>Worker::raiseExceptionOccurredJobEvent()</source>
          <target state="translated">Worker::raiseExceptionOccurredJobEvent()</target>
        </trans-unit>
        <trans-unit id="5ec328af29c5c05c304eeeb5f16e217090e9160a" translate="yes" xml:space="preserve">
          <source>Worker::registerTimeoutHandler()</source>
          <target state="translated">Worker::registerTimeoutHandler()</target>
        </trans-unit>
        <trans-unit id="b84e871f73334082b979df11c057bf1edf99daad" translate="yes" xml:space="preserve">
          <source>Worker::resetTimeoutHandler()</source>
          <target state="translated">Worker::resetTimeoutHandler()</target>
        </trans-unit>
        <trans-unit id="d4384766330a8e4c504fbc17e53a243e1652c596" translate="yes" xml:space="preserve">
          <source>Worker::runJob()</source>
          <target state="translated">Worker::runJob()</target>
        </trans-unit>
        <trans-unit id="aee5afb12002dcffbb896cd5ad9793c560b3f783" translate="yes" xml:space="preserve">
          <source>Worker::runNextJob()</source>
          <target state="translated">Worker::runNextJob()</target>
        </trans-unit>
        <trans-unit id="a9327d2161f8a5447fd244663a64f805e2265ffa" translate="yes" xml:space="preserve">
          <source>Worker::setCache()</source>
          <target state="translated">Worker::setCache()</target>
        </trans-unit>
        <trans-unit id="bf3b251dbdd451886681d7651b8c8c6615e34471" translate="yes" xml:space="preserve">
          <source>Worker::setManager()</source>
          <target state="translated">Worker::setManager()</target>
        </trans-unit>
        <trans-unit id="ce7bc221a33e8e7041a4241e5e4e6778a4ed6e24" translate="yes" xml:space="preserve">
          <source>Worker::setName()</source>
          <target state="translated">Worker::setName()</target>
        </trans-unit>
        <trans-unit id="04fc485336622bb8b40cf831c487f7c10dec57d1" translate="yes" xml:space="preserve">
          <source>Worker::sleep()</source>
          <target state="translated">Worker::sleep()</target>
        </trans-unit>
        <trans-unit id="edf59b3c7f79963eb36411e6c54f57ff6b6b3485" translate="yes" xml:space="preserve">
          <source>Worker::stop()</source>
          <target state="translated">Worker::stop()</target>
        </trans-unit>
        <trans-unit id="adab4c7d741a37dd8e1b2d6786df8b1a50cc3b4c" translate="yes" xml:space="preserve">
          <source>Worker::stopIfNecessary()</source>
          <target state="translated">Worker::stopIfNecessary()</target>
        </trans-unit>
        <trans-unit id="44f3be1ff430d09ebcdc034fbc56244a913dd3ed" translate="yes" xml:space="preserve">
          <source>Worker::stopWorkerIfLostConnection()</source>
          <target state="translated">Worker::stopWorkerIfLostConnection()</target>
        </trans-unit>
        <trans-unit id="3d555ccd076730f0427825bd59571fc0a3f589ad" translate="yes" xml:space="preserve">
          <source>Worker::supportsAsyncSignals()</source>
          <target state="translated">Worker::supportsAsyncSignals()</target>
        </trans-unit>
        <trans-unit id="1d9a3a9a92c3e01656e376ab418ab2f5a246d385" translate="yes" xml:space="preserve">
          <source>Worker::timeoutForJob()</source>
          <target state="translated">Worker::timeoutForJob()</target>
        </trans-unit>
        <trans-unit id="2c80abf6e395bd6f326cb30a261f19ee445cba02" translate="yes" xml:space="preserve">
          <source>WorkerOptions</source>
          <target state="translated">WorkerOptions</target>
        </trans-unit>
        <trans-unit id="2dfafd1f25279872281338c9eccf40cb7cad403e" translate="yes" xml:space="preserve">
          <source>WorkerOptions (Queue)</source>
          <target state="translated">WorkerOptions (Queue)</target>
        </trans-unit>
        <trans-unit id="1efb16cf1aeca0ff90043792de669adb637ade99" translate="yes" xml:space="preserve">
          <source>WorkerOptions::__construct()</source>
          <target state="translated">WorkerOptions::__construct()</target>
        </trans-unit>
        <trans-unit id="7ac47a82aad44739274182f74c57efad5c7d5713" translate="yes" xml:space="preserve">
          <source>WorkerStopping</source>
          <target state="translated">WorkerStopping</target>
        </trans-unit>
        <trans-unit id="0423e1ef38f63dd52464fd8a7a94c7f5b212ae5b" translate="yes" xml:space="preserve">
          <source>WorkerStopping (Queue\Events)</source>
          <target state="translated">WorkerStopping (QueueEvents)</target>
        </trans-unit>
        <trans-unit id="79a940d258d61387a61b8ec254d7e1688e80b476" translate="yes" xml:space="preserve">
          <source>WorkerStopping::__construct()</source>
          <target state="translated">WorkerStopping::__construct()</target>
        </trans-unit>
        <trans-unit id="8456c21c6493209df61d89e322dc918ac8b2a539" translate="yes" xml:space="preserve">
          <source>Working With Error Messages</source>
          <target state="translated">エラーメッセージの処理</target>
        </trans-unit>
        <trans-unit id="d142bccd8adf534bf7480145dda7522b9a0c9342" translate="yes" xml:space="preserve">
          <source>Working With JavaScript</source>
          <target state="translated">JavaScriptでの作業</target>
        </trans-unit>
        <trans-unit id="2a1ee088b004cb73af97ea7bcd33facfcca8e835" translate="yes" xml:space="preserve">
          <source>Working With Stylesheets</source>
          <target state="translated">スタイルシートを使った作業</target>
        </trans-unit>
        <trans-unit id="18880e3bc567c27aa67a9e971231a688a9e1b33b" translate="yes" xml:space="preserve">
          <source>Wormhole</source>
          <target state="translated">Wormhole</target>
        </trans-unit>
        <trans-unit id="e719e80408dad2deee220774ec22b4129809bcb3" translate="yes" xml:space="preserve">
          <source>Wormhole (Foundation\Testing)</source>
          <target state="translated">ワームホール(FoundationTesting)</target>
        </trans-unit>
        <trans-unit id="f362db685362b2ad811c4c8fb55a7a7221038544" translate="yes" xml:space="preserve">
          <source>Wormhole::__construct()</source>
          <target state="translated">Wormhole::__construct()</target>
        </trans-unit>
        <trans-unit id="787bf682bb39564bf9a4068de62039149b14632f" translate="yes" xml:space="preserve">
          <source>Wormhole::days()</source>
          <target state="translated">Wormhole::days()</target>
        </trans-unit>
        <trans-unit id="5b2e6aa020acd28c1cf713d22f2ba9e1ef483c7c" translate="yes" xml:space="preserve">
          <source>Wormhole::handleCallback()</source>
          <target state="translated">Wormhole::handleCallback()</target>
        </trans-unit>
        <trans-unit id="ead5070dc031be305466782acd5b9f9b81adf406" translate="yes" xml:space="preserve">
          <source>Wormhole::hours()</source>
          <target state="translated">Wormhole::hours()</target>
        </trans-unit>
        <trans-unit id="2f99ad965802dba2ce7e8db508ae4fb2fd783ba8" translate="yes" xml:space="preserve">
          <source>Wormhole::milliseconds()</source>
          <target state="translated">Wormhole::milliseconds()</target>
        </trans-unit>
        <trans-unit id="6c32b40fe2dcf208f6820d69a74cbb1cd161e54b" translate="yes" xml:space="preserve">
          <source>Wormhole::minutes()</source>
          <target state="translated">Wormhole::minutes()</target>
        </trans-unit>
        <trans-unit id="0b03ae2fa48d39f77f69b986251da10d316574e1" translate="yes" xml:space="preserve">
          <source>Wormhole::seconds()</source>
          <target state="translated">Wormhole::seconds()</target>
        </trans-unit>
        <trans-unit id="b933333b7dc08c2c7c9179d39a93e81adeaaea75" translate="yes" xml:space="preserve">
          <source>Wormhole::weeks()</source>
          <target state="translated">Wormhole::weeks()</target>
        </trans-unit>
        <trans-unit id="2f79a58519ef07521828933f5f5a0f9054984967" translate="yes" xml:space="preserve">
          <source>Wormhole::years()</source>
          <target state="translated">Wormhole::years()</target>
        </trans-unit>
        <trans-unit id="15936218ddca3ec28e40e6c1403c7d5cc5de944a" translate="yes" xml:space="preserve">
          <source>Wrap a single string in keyword identifiers.</source>
          <target state="translated">キーワード識別子で1つの文字列をラップします。</target>
        </trans-unit>
        <trans-unit id="03441c2c7343a8a3a299891bff4677f4a5800b77" translate="yes" xml:space="preserve">
          <source>Wrap a table in keyword identifiers.</source>
          <target state="translated">テーブルをキーワード識別子で囲みます。</target>
        </trans-unit>
        <trans-unit id="7a281bb60d0ca48fa0a8e35a6d52d62b49a6f5cd" translate="yes" xml:space="preserve">
          <source>Wrap a union subquery in parentheses.</source>
          <target state="translated">ユニオン副問い合わせを括弧で囲みます。</target>
        </trans-unit>
        <trans-unit id="65dd44493dea595d599997207177225e518246ba" translate="yes" xml:space="preserve">
          <source>Wrap a value in keyword identifiers.</source>
          <target state="translated">キーワード識別子で値をラップします。</target>
        </trans-unit>
        <trans-unit id="f16cad6c50d6e46a4fe12c1f25bd86d1461422aa" translate="yes" xml:space="preserve">
          <source>Wrap a value that has an alias.</source>
          <target state="translated">エイリアスを持つ値をラップします。</target>
        </trans-unit>
        <trans-unit id="4f1e18a66a6497bd8fa74f1f4c8a471b6b80bf4b" translate="yes" xml:space="preserve">
          <source>Wrap an array of values.</source>
          <target state="translated">値の配列をラップします。</target>
        </trans-unit>
        <trans-unit id="013e70e7846d58900256a01a0214f788a8e6ef15" translate="yes" xml:space="preserve">
          <source>Wrap the attributes of the give JSON path.</source>
          <target state="translated">与えられたJSONパスの属性をラップします。</target>
        </trans-unit>
        <trans-unit id="7b57b5642ffa535fd218c752501d1bf8b0cc4956" translate="yes" xml:space="preserve">
          <source>Wrap the given JSON boolean value.</source>
          <target state="translated">与えられたJSONのブール値をラップします。</target>
        </trans-unit>
        <trans-unit id="ad636fd60cd875cfe1badf1b17bd1327b47ce24e" translate="yes" xml:space="preserve">
          <source>Wrap the given JSON path.</source>
          <target state="translated">与えられたJSONパスをラップします。</target>
        </trans-unit>
        <trans-unit id="b935fe4e65cd77e7ca155c7f4b39dc189538713a" translate="yes" xml:space="preserve">
          <source>Wrap the given JSON selector for boolean values.</source>
          <target state="translated">与えられたJSONセレクタをブール値用にラップします。</target>
        </trans-unit>
        <trans-unit id="68746472396ce319f482056a4698f2fe686b3ffb" translate="yes" xml:space="preserve">
          <source>Wrap the given JSON selector.</source>
          <target state="translated">与えられたJSONセレクタをラップします。</target>
        </trans-unit>
        <trans-unit id="070d6350ab5f3dbd040c732eed1a98cd5b0c29f7" translate="yes" xml:space="preserve">
          <source>Wrap the given closure such that its dependencies will be injected when executed.</source>
          <target state="translated">実行時に依存関係が注入されるように、与えられたクロージャをラップします。</target>
        </trans-unit>
        <trans-unit id="c18c5d79646598bcf3bbc8c2edbeee1212f7dab5" translate="yes" xml:space="preserve">
          <source>Wrap the given data if necessary.</source>
          <target state="translated">必要に応じて、与えられたデータをラップします。</target>
        </trans-unit>
        <trans-unit id="542418ffeeead578ea1994bcb74190a881a4ddd2" translate="yes" xml:space="preserve">
          <source>Wrap the given value in a collection if applicable.</source>
          <target state="translated">該当する場合は、与えられた値をコレクションでラップします。</target>
        </trans-unit>
        <trans-unit id="4540ffe9494fa8fa1ab07e2da6bd54ae43077e2f" translate="yes" xml:space="preserve">
          <source>Wrap the given value segments.</source>
          <target state="translated">与えられた値のセグメントをラップします。</target>
        </trans-unit>
        <trans-unit id="3a3d3b411daae8b537b9eea19cb5870cab5a1048" translate="yes" xml:space="preserve">
          <source>Wrap the notifiable(s) in a collection.</source>
          <target state="translated">通知可能なものをコレクションでラップします。</target>
        </trans-unit>
        <trans-unit id="e79ee418058bc1e3b4f079255a7262fcfd035e32" translate="yes" xml:space="preserve">
          <source>Wrapping Nested Resources</source>
          <target state="translated">入れ子になったリソースのラッピング</target>
        </trans-unit>
        <trans-unit id="18a4bb57dd4926ee5cdde4331dd9bd25fda18162" translate="yes" xml:space="preserve">
          <source>Write a blank line.</source>
          <target state="translated">空行を書きます。</target>
        </trans-unit>
        <trans-unit id="3edd74a2037c70071e7c78529974a193ffe4a77f" translate="yes" xml:space="preserve">
          <source>Write a message to the log.</source>
          <target state="translated">ログにメッセージを書き込む。</target>
        </trans-unit>
        <trans-unit id="e3b2b03835cc401625d68d5e4df59c5b1eee2cd2" translate="yes" xml:space="preserve">
          <source>Write a new environment file with the given key.</source>
          <target state="translated">与えられたキーで新しい環境ファイルを書き込みます。</target>
        </trans-unit>
        <trans-unit id="5f81b8c96b886b76b0f5600db7f841f09a8e676f" translate="yes" xml:space="preserve">
          <source>Write a new file using a stream.</source>
          <target state="translated">ストリームを使って新しいファイルを書きます。</target>
        </trans-unit>
        <trans-unit id="e90c4eb610d4e8bc61c1e8ebd005384a56ea2fe0" translate="yes" xml:space="preserve">
          <source>Write a note to the conosle's output.</source>
          <target state="translated">コノスレの出力にメモを書く。</target>
        </trans-unit>
        <trans-unit id="89b020e9fd17b90d67c8608ccda808303d60fa4f" translate="yes" xml:space="preserve">
          <source>Write a note to the console's output.</source>
          <target state="translated">コンソールの出力にメモを書きます。</target>
        </trans-unit>
        <trans-unit id="e28f33fc96753f30eeb77c5eefc80d1b20040811" translate="yes" xml:space="preserve">
          <source>Write a status message to the console.</source>
          <target state="translated">コンソールにステータスメッセージを書き込みます。</target>
        </trans-unit>
        <trans-unit id="137a8d880ed7cc4e987a30f0fa7eb195dafb7b73" translate="yes" xml:space="preserve">
          <source>Write a string as comment output.</source>
          <target state="translated">コメント出力として文字列を書きます。</target>
        </trans-unit>
        <trans-unit id="0c2bafae4e56fd799049c0f35dc7a4cc9756fcac" translate="yes" xml:space="preserve">
          <source>Write a string as error output.</source>
          <target state="translated">エラー出力として文字列を書きます。</target>
        </trans-unit>
        <trans-unit id="4dd3184bcd9d74196a97e27d7755a1a9b2cc4b40" translate="yes" xml:space="preserve">
          <source>Write a string as information output.</source>
          <target state="translated">情報出力として文字列を書きます。</target>
        </trans-unit>
        <trans-unit id="2292ad58b50c97c524a37c9019f5c1e6f76ace3f" translate="yes" xml:space="preserve">
          <source>Write a string as question output.</source>
          <target state="translated">質問出力として文字列を書きます。</target>
        </trans-unit>
        <trans-unit id="097d49fa8dde58080223b337c77865fc82d9429c" translate="yes" xml:space="preserve">
          <source>Write a string as standard output.</source>
          <target state="translated">標準出力として文字列を書きます。</target>
        </trans-unit>
        <trans-unit id="b55a62ac484c7e3851e66ebfaeefd7ebfb09b239" translate="yes" xml:space="preserve">
          <source>Write a string as warning output.</source>
          <target state="translated">警告出力として文字列を書きます。</target>
        </trans-unit>
        <trans-unit id="b672205ebdbc2e7bd00a694f7bea3931eae4b666" translate="yes" xml:space="preserve">
          <source>Write a string in an alert box.</source>
          <target state="translated">アラートボックスに文字列を書く。</target>
        </trans-unit>
        <trans-unit id="29496254c8dd488f50b10e25972075ed7587bea3" translate="yes" xml:space="preserve">
          <source>Write the Markdown template for the mailable.</source>
          <target state="translated">メール便用のMarkdownテンプレートを書きます。</target>
        </trans-unit>
        <trans-unit id="538f67c613abd4fe6289b6560a4bf726430f8e87" translate="yes" xml:space="preserve">
          <source>Write the contents of a file, replacing it atomically if it already exists.</source>
          <target state="translated">ファイルの内容を書き込み、既に存在する場合はアトミックに置き換えます。</target>
        </trans-unit>
        <trans-unit id="94bdb2fa1b97c88cb03f3daf3df398c3f39087fd" translate="yes" xml:space="preserve">
          <source>Write the contents of a file.</source>
          <target state="translated">ファイルの内容を書き込みます。</target>
        </trans-unit>
        <trans-unit id="2ca2530f8645177e9a173aa96316e9326f80956b" translate="yes" xml:space="preserve">
          <source>Write the error information to the screen and exit.</source>
          <target state="translated">エラー情報を画面に書き込んで終了します。</target>
        </trans-unit>
        <trans-unit id="2c9e9692f5a5ab59a003b262b778fb938bfadf9d" translate="yes" xml:space="preserve">
          <source>Write the given manifest array to disk.</source>
          <target state="translated">指定されたマニフェスト配列をディスクに書き込みます。</target>
        </trans-unit>
        <trans-unit id="9b3c95680b03fc6cc182e6245d5b63b44507ed1c" translate="yes" xml:space="preserve">
          <source>Write the migration file to disk.</source>
          <target state="translated">マイグレーションファイルをディスクに書き込みます。</target>
        </trans-unit>
        <trans-unit id="eea24875a89bd9d207f8f6eba7689fe83aa4ee4d" translate="yes" xml:space="preserve">
          <source>Write the service manifest file to disk.</source>
          <target state="translated">サービス マニフェスト ファイルをディスクに書き込みます。</target>
        </trans-unit>
        <trans-unit id="28adce8f8a931b861fec76434a91dcc8806839ae" translate="yes" xml:space="preserve">
          <source>Write the status output for the queue worker.</source>
          <target state="translated">キューワーカーのステータス出力を書き込みます。</target>
        </trans-unit>
        <trans-unit id="e845ccbe6ad550b13f6b7b65c2882f3ca15587ba" translate="yes" xml:space="preserve">
          <source>Write the stubs for the Sass and JavaScript files.</source>
          <target state="translated">SassファイルとJavaScriptファイルのスタブを書きます。</target>
        </trans-unit>
        <trans-unit id="616f5677e55bc733443e0bcb7586366d4601e586" translate="yes" xml:space="preserve">
          <source>Write the view for the component.</source>
          <target state="translated">コンポーネントのビューを書きます。</target>
        </trans-unit>
        <trans-unit id="57c1c31f743fca807cc5d3081e8535663465c9c6" translate="yes" xml:space="preserve">
          <source>Write to the file.</source>
          <target state="translated">ファイルに書き込みます。</target>
        </trans-unit>
        <trans-unit id="a88c191a1a4440cd6b4f0557214d859eacb7a194" translate="yes" xml:space="preserve">
          <source>Writing CSS</source>
          <target state="translated">CSSの記述</target>
        </trans-unit>
        <trans-unit id="b0e177ff6d61e7a769b5e1e808bebf52c28e8b79" translate="yes" xml:space="preserve">
          <source>Writing Commands</source>
          <target state="translated">コマンドの書き込み</target>
        </trans-unit>
        <trans-unit id="c2d356e1bcf5c54232db6abceebaa3e10f4016be" translate="yes" xml:space="preserve">
          <source>Writing Event Subscribers</source>
          <target state="translated">ライティングイベントの購読者</target>
        </trans-unit>
        <trans-unit id="c8214d93f1f9bbd38ca94c034d86a1d673cac5ef" translate="yes" xml:space="preserve">
          <source>Writing Factories</source>
          <target state="translated">ライティングファクトリー</target>
        </trans-unit>
        <trans-unit id="b54819c3802e654455512b46bedf367a75565be6" translate="yes" xml:space="preserve">
          <source>Writing Gates</source>
          <target state="translated">ライティングゲート</target>
        </trans-unit>
        <trans-unit id="95f873bcd09394b45da6bd73d09b4283685d3f22" translate="yes" xml:space="preserve">
          <source>Writing Global Scopes</source>
          <target state="translated">グローバルスコープの書き方</target>
        </trans-unit>
        <trans-unit id="8c3115c76be1a7856a21f408244275a9e45d5094" translate="yes" xml:space="preserve">
          <source>Writing JavaScript</source>
          <target state="translated">JavaScriptの書き方</target>
        </trans-unit>
        <trans-unit id="b72df461b0c8d9a3f9beb4bcb90ae63cd4e9d665" translate="yes" xml:space="preserve">
          <source>Writing Log Messages</source>
          <target state="translated">ログメッセージの書き込み</target>
        </trans-unit>
        <trans-unit id="de1d7da75f668d033ffe3a7489e475ed0f68d4ae" translate="yes" xml:space="preserve">
          <source>Writing Mailables</source>
          <target state="translated">メール便の書き方</target>
        </trans-unit>
        <trans-unit id="d33de6858b4d72e97694c0757d4e180e32eecf63" translate="yes" xml:space="preserve">
          <source>Writing Markdown Messages</source>
          <target state="translated">Markdownメッセージの書き込み</target>
        </trans-unit>
        <trans-unit id="aa6c464445e64b1fd19fceb3008840a88cbfa756" translate="yes" xml:space="preserve">
          <source>Writing Output</source>
          <target state="translated">書き込み出力</target>
        </trans-unit>
        <trans-unit id="0945ee68fe6ae5c959204f11302e20ddb27ccc69" translate="yes" xml:space="preserve">
          <source>Writing Policies</source>
          <target state="translated">ライティングポリシー</target>
        </trans-unit>
        <trans-unit id="2e3c62c82fa3872f547dfe5e36f2184ee767f85a" translate="yes" xml:space="preserve">
          <source>Writing Resources</source>
          <target state="translated">ライティングリソース</target>
        </trans-unit>
        <trans-unit id="35a936061c6c7d37c0ef114f08eb5be0b939f203" translate="yes" xml:space="preserve">
          <source>Writing Seeders</source>
          <target state="translated">ライティングシーダー</target>
        </trans-unit>
        <trans-unit id="ab42e9fb8fa35615d1a64ffdd8104092ea480efe" translate="yes" xml:space="preserve">
          <source>Writing Service Providers</source>
          <target state="translated">ライティングサービスプロバイダ</target>
        </trans-unit>
        <trans-unit id="c0e16a3a295f83a0eec88991be1cae3f283a3f61" translate="yes" xml:space="preserve">
          <source>Writing Tasks</source>
          <target state="translated">ライティングタスク</target>
        </trans-unit>
        <trans-unit id="b26fb8aab79835cb23aff91b6cbb712bab956c00" translate="yes" xml:space="preserve">
          <source>Writing The Driver</source>
          <target state="translated">ドライバーの書き方</target>
        </trans-unit>
        <trans-unit id="35a00e63a29bb0738dcedfcd69c6da0ad08e9da2" translate="yes" xml:space="preserve">
          <source>Writing The Engine</source>
          <target state="translated">エンジンの書き方</target>
        </trans-unit>
        <trans-unit id="387dca313a1f8b64166e874b053ed7d3c1031b4b" translate="yes" xml:space="preserve">
          <source>Writing The Message</source>
          <target state="translated">メッセージを書く</target>
        </trans-unit>
        <trans-unit id="6e89fe86b2fe1e3fdb55eee67dc40fcc2d9243f4" translate="yes" xml:space="preserve">
          <source>Writing The Validation Logic</source>
          <target state="translated">バリデーションロジックの記述</target>
        </trans-unit>
        <trans-unit id="2f6cf0c8730c8f7c884a912cbe4e410abbe76746" translate="yes" xml:space="preserve">
          <source>Writing To Specific Channels</source>
          <target state="translated">特定のチャンネルへの書き込み</target>
        </trans-unit>
        <trans-unit id="df96033382e820ef882a98a099844d06507e5cd2" translate="yes" xml:space="preserve">
          <source>Writing Vue Components</source>
          <target state="translated">Vueコンポーネントの書き込み</target>
        </trans-unit>
        <trans-unit id="50e90ca4ac914e81eaf32a8480f0f11bd08be51c" translate="yes" xml:space="preserve">
          <source>Writing a global scope is simple. Define a class that implements the &lt;code&gt;Illuminate\Database\Eloquent\Scope&lt;/code&gt; interface. This interface requires you to implement one method: &lt;code&gt;apply&lt;/code&gt;. The &lt;code&gt;apply&lt;/code&gt; method may add &lt;code&gt;where&lt;/code&gt; constraints to the query as needed:</source>
          <target state="translated">グローバルスコープの記述は簡単です。 &lt;code&gt;Illuminate\Database\Eloquent\Scope&lt;/code&gt; インターフェースを実装するクラスを定義します。このインターフェースでは、メソッド &lt;code&gt;apply&lt;/code&gt; を実装する必要があります。 &lt;code&gt;apply&lt;/code&gt; 方法は、追加することができます &lt;code&gt;where&lt;/code&gt; 必要に応じてクエリに制約を：</target>
        </trans-unit>
        <trans-unit id="2c3d214482ed4068cbb58998f97054285742a53d" translate="yes" xml:space="preserve">
          <source>X-CSRF-TOKEN</source>
          <target state="translated">X-CSRF-TOKEN</target>
        </trans-unit>
        <trans-unit id="b67346b381a711963c8ca8951337e7720f74a756" translate="yes" xml:space="preserve">
          <source>X-CSRF-Token</source>
          <target state="translated">X-CSRF-Token</target>
        </trans-unit>
        <trans-unit id="84e6e98f12d823413254fa440c550f1453db0950" translate="yes" xml:space="preserve">
          <source>X-XSRF-TOKEN</source>
          <target state="translated">X-XSRF-TOKEN</target>
        </trans-unit>
        <trans-unit id="7bd49232d6cae13bce81dc84a6debf188168f0c8" translate="yes" xml:space="preserve">
          <source>X-XSRF-Token</source>
          <target state="translated">X-XSRF-Token</target>
        </trans-unit>
        <trans-unit id="68c8c20a3313c0b199c080d8d60fb3de68a958a5" translate="yes" xml:space="preserve">
          <source>XHProf / Tideways / XHGui</source>
          <target state="translated">XHProf/Tideways/XHGui</target>
        </trans-unit>
        <trans-unit id="eb3c349cae2b4d22022a24569ddd414df98ae5a4" translate="yes" xml:space="preserve">
          <source>XML PHP Extension</source>
          <target state="translated">XML PHP 拡張機能</target>
        </trans-unit>
        <trans-unit id="7543ba4469ea015abaf3cf17366029042bea848e" translate="yes" xml:space="preserve">
          <source>Xdebug</source>
          <target state="translated">Xdebug</target>
        </trans-unit>
        <trans-unit id="629c8f6a13f7f6ea5bf2db8bec8681fb1df89b24" translate="yes" xml:space="preserve">
          <source>Xdebug causes PHP to run significantly slower. To disable Xdebug, run &lt;code&gt;sudo phpdismod xdebug&lt;/code&gt; within your Vagrant box and restart the FPM service.</source>
          <target state="translated">Xdebugを使用すると、PHPの実行速度が大幅に低下します。Xdebugを無効にするには、Vagrantボックス内で &lt;code&gt;sudo phpdismod xdebug&lt;/code&gt; を実行し、FPMサービスを再起動します。</target>
        </trans-unit>
        <trans-unit id="d52dca5298cf2768382134244c4fe437f1553ced" translate="yes" xml:space="preserve">
          <source>YEAR equivalent column.</source>
          <target state="translated">年相当の欄。</target>
        </trans-unit>
        <trans-unit id="94f0ae3cf1b937d52d445c99c9d895cfda75e6bb" translate="yes" xml:space="preserve">
          <source>You are able to use any of the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; methods on the relationship, so be sure to explore the query builder documentation to learn about all of the methods that are available to you.</source>
          <target state="translated">リレーションシップで任意の&lt;a href=&quot;queries&quot;&gt;クエリビルダー&lt;/a&gt;メソッドを使用できるため、クエリビルダーのドキュメントを参照して、使用可能なすべてのメソッドについて確認してください。</target>
        </trans-unit>
        <trans-unit id="9a9e1ca367fa3249b3f3a2db570b8ace59b3a0ce" translate="yes" xml:space="preserve">
          <source>You are free to define other testing environment configuration values as necessary. The &lt;code&gt;testing&lt;/code&gt; environment variables may be configured in the &lt;code&gt;phpunit.xml&lt;/code&gt; file, but make sure to clear your configuration cache using the &lt;code&gt;config:clear&lt;/code&gt; Artisan command before running your tests!</source>
          <target state="translated">必要に応じて、他のテスト環境構成値を自由に定義できます。 &lt;code&gt;testing&lt;/code&gt; 環境変数はで構成することができる &lt;code&gt;phpunit.xml&lt;/code&gt; のファイルが、使用して、コンフィギュレーションキャッシュをクリアすることを確認してください &lt;code&gt;config:clear&lt;/code&gt; 職人コマンドテストを実行する前に！</target>
        </trans-unit>
        <trans-unit id="03e7b815538aeeb9bad9e42712a46ba46344fee2" translate="yes" xml:space="preserve">
          <source>You are free to extend the &lt;code&gt;PersonalAccessToken&lt;/code&gt; model used internally by Sanctum:</source>
          <target state="translated">Sanctumが内部で使用する &lt;code&gt;PersonalAccessToken&lt;/code&gt; モデルを自由に拡張できます。</target>
        </trans-unit>
        <trans-unit id="9f98c7f310789b2c56fcc3467e460ce4c6558989" translate="yes" xml:space="preserve">
          <source>You are free to extend the models used internally by Passport:</source>
          <target state="translated">Passport が内部で使用しているモデルを自由に拡張することができます。</target>
        </trans-unit>
        <trans-unit id="1e13f21b863309c5847075a12e9d1b736d8ce233" translate="yes" xml:space="preserve">
          <source>You are free to write your own &lt;code&gt;/login&lt;/code&gt; endpoint; however, you should ensure that it authenticates the user using the standard, &lt;a href=&quot;authentication#authenticating-users&quot;&gt;session based authentication services that Laravel provides&lt;/a&gt;.</source>
          <target state="translated">独自の &lt;code&gt;/login&lt;/code&gt; エンドポイントを自由に作成できます。ただし、&lt;a href=&quot;authentication#authenticating-users&quot;&gt;Laravelが提供&lt;/a&gt;する標準のセッションベースの認証サービスを使用してユーザーを認証することを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="27cc3a146303e83799a31b3351b0362a32c1d269" translate="yes" xml:space="preserve">
          <source>You are not limited to casting values to primitive types. You may also cast values to objects. Defining custom casts that cast values to objects is very similar to casting to primitive types; however, the &lt;code&gt;set&lt;/code&gt; method should return an array of key / value pairs that will be used to set raw, storable values on the model.</source>
          <target state="translated">値をプリミティブ型にキャストすることに限定されません。オブジェクトに値をキャストすることもできます。オブジェクトに値をキャストするカスタムキャストの定義は、プリミティブ型へのキャストと非常によく似ています。ただし、 &lt;code&gt;set&lt;/code&gt; メソッドは、モデルに未加工の保存可能な値を設定するために使用されるキーと値のペアの配列を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="6cffaa7bf76ee3c0b83c8f3d88571668d76adf5d" translate="yes" xml:space="preserve">
          <source>You are not limited to displaying the contents of the variables passed to the view. You may also echo the results of any PHP function. In fact, you can put any PHP code you wish inside of a Blade echo statement:</source>
          <target state="translated">ビューに渡された変数の内容を表示することに限定されません。任意の PHP 関数の結果を echo することもできます。実際には、Blade の echo 文の中に任意の PHP コードを記述することができます。</target>
        </trans-unit>
        <trans-unit id="88f73667b6c2ad3e09673c8940e91e866cd0f92a" translate="yes" xml:space="preserve">
          <source>You are not limited to just specifying the &quot;to&quot; recipients when sending a message. You are free to set &quot;to&quot;, &quot;cc&quot;, and &quot;bcc&quot; recipients all within a single, chained method call:</source>
          <target state="translated">メッセージを送信する際に「to」の受信者を指定するだけには制限されません。to&quot;、&quot;cc&quot;、&quot;bcc&quot; の受信者をすべて単一の連鎖したメソッドコール内で自由に設定できます。</target>
        </trans-unit>
        <trans-unit id="e332babed20956c1c0d387e0e5b46298998d16a9" translate="yes" xml:space="preserve">
          <source>You are not required to use the authentication scaffolding included with Laravel Jetstream. If you choose to not use this scaffolding, you will need to manage user authentication using the Laravel authentication classes directly. Don't worry, it's a cinch!</source>
          <target state="translated">Laravel Jetstreamに含まれる認証の足場を使用する必要はありません。この足場を使用しない場合は、Laravelの認証クラスを直接使用してユーザー認証を管理する必要があります。心配しないでください。</target>
        </trans-unit>
        <trans-unit id="f1e307be38649e2439bdd7efb7376ff3e8ab25cd" translate="yes" xml:space="preserve">
          <source>You can SSH into your virtual machine by issuing the &lt;code&gt;vagrant ssh&lt;/code&gt; terminal command from your Homestead directory.</source>
          <target state="translated">ホームステッドディレクトリから &lt;code&gt;vagrant ssh&lt;/code&gt; terminalコマンドを発行して、仮想マシンにSSHで接続できます。</target>
        </trans-unit>
        <trans-unit id="aa8b06be0e6fbb782ba15ca176b55093a222d7c5" translate="yes" xml:space="preserve">
          <source>You can also &lt;a href=&quot;https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink#price-overrides&quot;&gt;override prices per currency&lt;/a&gt; using Paddle's dynamic pricing matching system. To do so, pass an array of prices instead of a fixed amount:</source>
          <target state="translated">Paddleの動的価格マッチングシステムを使用して、&lt;a href=&quot;https://developer.paddle.com/api-reference/product-api/pay-links/createpaylink#price-overrides&quot;&gt;通貨ごとの価格を上書き&lt;/a&gt;することもできます。これを行うには、固定金額ではなく一連の価格を渡します。</target>
        </trans-unit>
        <trans-unit id="8419d954e7b551d2a0c8608c84cc0e37488779b2" translate="yes" xml:space="preserve">
          <source>You can also filter the results returned by &lt;code&gt;belongsToMany&lt;/code&gt; using the &lt;code&gt;wherePivot&lt;/code&gt; and &lt;code&gt;wherePivotIn&lt;/code&gt; methods when defining the relationship:</source>
          <target state="translated">また、返された結果フィルタリングすることができ &lt;code&gt;belongsToMany&lt;/code&gt; を使用して &lt;code&gt;wherePivot&lt;/code&gt; をして &lt;code&gt;wherePivotIn&lt;/code&gt; 方法は、関係を定義する場合：</target>
        </trans-unit>
        <trans-unit id="1801f4cca1a9f85e18d6702e1f85aa2c847cd1af" translate="yes" xml:space="preserve">
          <source>You can also filter the results returned by &lt;code&gt;belongsToMany&lt;/code&gt; using the &lt;code&gt;wherePivot&lt;/code&gt;, &lt;code&gt;wherePivotIn&lt;/code&gt;, and &lt;code&gt;wherePivotNotIn&lt;/code&gt; methods when defining the relationship:</source>
          <target state="translated">また、返された結果フィルタリングすることができ &lt;code&gt;belongsToMany&lt;/code&gt; 使用 &lt;code&gt;wherePivot&lt;/code&gt; 、 &lt;code&gt;wherePivotIn&lt;/code&gt; 、および &lt;code&gt;wherePivotNotIn&lt;/code&gt; 方法の関係を定義する際に：</target>
        </trans-unit>
        <trans-unit id="994d76bb9426c8cc8ce56b5a1bd05d55f65ff162" translate="yes" xml:space="preserve">
          <source>You can also pass an array of metadata using the &lt;code&gt;withMetadata&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;withMetadata&lt;/code&gt; メソッドを使用してメタデータの配列を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="de471d293aa7d7bf4aebccc74999e9c7eef3274d" translate="yes" xml:space="preserve">
          <source>You can also pass your own callback to determine how to sort the collection values:</source>
          <target state="translated">コレクションの値をどのように並べ替えるかを決めるために、独自のコールバックを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="b6ef6f141fcba9b1932390d04d985536e980c300" translate="yes" xml:space="preserve">
          <source>You can also retrieve a specific payment method that is owned by the Billable model using the &lt;code&gt;findPaymentMethod&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;findPaymentMethod&lt;/code&gt; メソッドを使用して、Billableモデルが所有する特定の支払い方法を取得することもできます。</target>
        </trans-unit>
        <trans-unit id="aca6e9eb7e507a14f70e1de8c95023c689a5b31d" translate="yes" xml:space="preserve">
          <source>You can also retrieve a specific plan using the &lt;code&gt;findItemOrFail&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;findItemOrFail&lt;/code&gt; メソッドを使用して特定のプランを取得することもできます。</target>
        </trans-unit>
        <trans-unit id="116965c3187b530e488101ac51c489325bec1cde" translate="yes" xml:space="preserve">
          <source>You can also run a delete statement on a set of models. In this example, we will delete all flights that are marked as inactive. Like mass updates, mass deletes will not fire any model events for the models that are deleted:</source>
          <target state="translated">また、モデルのセットに対してdelete文を実行することもできます。この例では、非アクティブとマークされているすべてのフライトを削除します。大量更新と同様に、大量削除では、削除されたモデルのモデル・イベントは発生しません。</target>
        </trans-unit>
        <trans-unit id="e305d62a8009cf284aec9cbd6482811b48938ecc" translate="yes" xml:space="preserve">
          <source>You can also specify subscription item options. For example, you may need to specify the subscription plan quantities:</source>
          <target state="translated">サブスクリプション項目のオプションを指定することもできます。たとえば、サブスクリプション プランの数量を指定する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="bad9cd8744e219cef47e8c97d068d6ee6f358278" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;assertDatabaseMissing&lt;/code&gt; helper to assert that data does not exist in the database.</source>
          <target state="translated">また、 &lt;code&gt;assertDatabaseMissing&lt;/code&gt; ヘルパーを使用して、データベースにデータが存在しないことを表明することもできます。</target>
        </trans-unit>
        <trans-unit id="90cffa55d112d8096a02bf3f713fb2252077492a" translate="yes" xml:space="preserve">
          <source>You can combine &lt;code&gt;using&lt;/code&gt; and &lt;code&gt;withPivot&lt;/code&gt; in order to retrieve columns from the intermediate table. For example, you may retrieve the &lt;code&gt;created_by&lt;/code&gt; and &lt;code&gt;updated_by&lt;/code&gt; columns from the &lt;code&gt;RoleUser&lt;/code&gt; pivot table by passing the column names to the &lt;code&gt;withPivot&lt;/code&gt; method:</source>
          <target state="translated">中間テーブルから列を取得するために、 &lt;code&gt;using&lt;/code&gt; と &lt;code&gt;withPivot&lt;/code&gt; を組み合わせることができます。たとえば、あなたが検索してもよい &lt;code&gt;created_by&lt;/code&gt; と &lt;code&gt;updated_by&lt;/code&gt; から列を &lt;code&gt;RoleUser&lt;/code&gt; のに列名を渡すことで、ピボットテーブル &lt;code&gt;withPivot&lt;/code&gt; の方法：</target>
        </trans-unit>
        <trans-unit id="44f56e0dd222fa8b268184deddc37915c2f40918" translate="yes" xml:space="preserve">
          <source>You can configure the asset URL host by setting the &lt;code&gt;ASSET_URL&lt;/code&gt; variable in your &lt;code&gt;.env&lt;/code&gt; file. This can be useful if you host your assets on an external service like Amazon S3:</source>
          <target state="translated">&lt;code&gt;.env&lt;/code&gt; ファイルで &lt;code&gt;ASSET_URL&lt;/code&gt; 変数を設定することにより、アセットURLホストを構成できます。これは、AmazonS3などの外部サービスでアセットをホストする場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="3264d9c0867a44b0ae7cbfbdf08b11c99a940ed5" translate="yes" xml:space="preserve">
          <source>You can define a route to this controller action like so:</source>
          <target state="translated">このコントローラアクションへのルートを以下のように定義することができます。</target>
        </trans-unit>
        <trans-unit id="07ee2e8dbc898ebce02a857bcd41cdf2610e04c6" translate="yes" xml:space="preserve">
          <source>You can force a script to run locally by specifying the server's IP address as &lt;code&gt;127.0.0.1&lt;/code&gt;:</source>
          <target state="translated">サーバーのIPアドレスを &lt;code&gt;127.0.0.1&lt;/code&gt; と指定することで、スクリプトを強制的にローカルで実行できます。</target>
        </trans-unit>
        <trans-unit id="19648875c233ac695f1322621f3f015085c0ab88" translate="yes" xml:space="preserve">
          <source>You can instruct Dusk to type slowly using the &lt;code&gt;typeSlowly&lt;/code&gt; method. By default, Dusk will pause for 100 milliseconds between key presses. To customize the amount of time between key presses, you may pass the appropriate number of milliseconds as the second argument to the method:</source>
          <target state="translated">&lt;code&gt;typeSlowly&lt;/code&gt; メソッドを使用して、ゆっくりと入力するようにDuskに指示できます。デフォルトでは、Duskはキーを押す間で100ミリ秒一時停止します。キーを押す間隔をカスタマイズするには、メソッドの2番目の引数として適切なミリ秒数を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="a412d91bb26e2c0b8623226bf8666e5523e0a4d8" translate="yes" xml:space="preserve">
          <source>You can manually specify a table name by defining a &lt;code&gt;table&lt;/code&gt; property on your model:</source>
          <target state="translated">モデルで &lt;code&gt;table&lt;/code&gt; プロパティを定義することにより、テーブル名を手動で指定できます。</target>
        </trans-unit>
        <trans-unit id="f48eddda1c82497c3db75f25427ad2bef80517d3" translate="yes" xml:space="preserve">
          <source>You can modify the HTML and plain-text template used by mail notifications by publishing the notification package's resources. After running this command, the mail notification templates will be located in the &lt;code&gt;resources/views/vendor/notifications&lt;/code&gt; directory:</source>
          <target state="translated">通知パッケージのリソースを公開することにより、メール通知で使用されるHTMLおよびプレーンテキストテンプレートを変更できます。このコマンドを実行すると、メール通知テンプレートが &lt;code&gt;resources/views/vendor/notifications&lt;/code&gt; ディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="fcecbbc7b5269d5858f78e3ad1e4e3ed049d5121" translate="yes" xml:space="preserve">
          <source>You can optionally also override the default, built-in webhook route by setting the &lt;code&gt;CASHIER_WEBHOOK&lt;/code&gt; env variable in your &lt;code&gt;.env&lt;/code&gt; file. This value should be the full URL to your webhook route and needs to match the URL set in your Paddle control panel:</source>
          <target state="translated">オプションで、 &lt;code&gt;.env&lt;/code&gt; ファイルで &lt;code&gt;CASHIER_WEBHOOK&lt;/code&gt; env変数を設定することにより、デフォルトの組み込みWebhookルートをオーバーライドすることもできます。この値は、Webhookルートへの完全なURLである必要があり、Paddleコントロールパネルで設定されたURLと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="ebf82dc40ccdf860bb2c10c6d7f912c0c0de965f" translate="yes" xml:space="preserve">
          <source>You can overwrite all existing scopes using the &lt;code&gt;setScopes&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;setScopes&lt;/code&gt; メソッドを使用して、既存のすべてのスコープを上書きできます。</target>
        </trans-unit>
        <trans-unit id="7ceda01aa3161fbfca7623663d70efb1c97aa0c8" translate="yes" xml:space="preserve">
          <source>You can publish Tinker's configuration file using the &lt;code&gt;vendor:publish&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;vendor:publish&lt;/code&gt; コマンドを使用して、Tinkerの構成ファイルを公開できます。</target>
        </trans-unit>
        <trans-unit id="28f554ff136b3b6214572828108ea65f22b860f6" translate="yes" xml:space="preserve">
          <source>You can query the table to display the notifications in your application's user interface. But, before you can do that, you will need to create a database table to hold your notifications. You may use the &lt;code&gt;notifications:table&lt;/code&gt; command to generate a migration with the proper table schema:</source>
          <target state="translated">テーブルをクエリして、アプリケーションのユーザーインターフェイスに通知を表示できます。ただし、その前に、通知を保持するデータベーステーブルを作成する必要があります。あなたは使用することができ &lt;code&gt;notifications:table&lt;/code&gt; 適切なテーブルスキーマでの移行を生成するためのコマンドを：</target>
        </trans-unit>
        <trans-unit id="415fade708166d245f52e7adbc42f84401a6ed83" translate="yes" xml:space="preserve">
          <source>You can refresh models using the &lt;code&gt;fresh&lt;/code&gt; and &lt;code&gt;refresh&lt;/code&gt; methods. The &lt;code&gt;fresh&lt;/code&gt; method will re-retrieve the model from the database. The existing model instance will not be affected:</source>
          <target state="translated">&lt;code&gt;fresh&lt;/code&gt; メソッドと &lt;code&gt;refresh&lt;/code&gt; メソッドを使用してモデルを更新できます。 &lt;code&gt;fresh&lt;/code&gt; 方法は、データベースからモデルを再取得します。既存のモデルインスタンスは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="0e0b68b68406905c8334fa9aca4bd53f8afd04a2" translate="yes" xml:space="preserve">
          <source>You can retrieve a customer by their Stripe ID using the &lt;code&gt;Cashier::findBillable&lt;/code&gt; method. This will return an instance of the Billable model:</source>
          <target state="translated">&lt;code&gt;Cashier::findBillable&lt;/code&gt; メソッドを使用して、StripeIDで顧客を取得できます。これにより、Billableモデルのインスタンスが返されます。</target>
        </trans-unit>
        <trans-unit id="248791fc58c58c80032e1d1b1b7b58343c419707" translate="yes" xml:space="preserve">
          <source>You can rollback the transaction via the &lt;code&gt;rollBack&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;rollBack&lt;/code&gt; メソッドを使用してトランザクションをロールバックできます。</target>
        </trans-unit>
        <trans-unit id="0855b435d8410e58bdcdf35314f169c7b41f7cab" translate="yes" xml:space="preserve">
          <source>You can set global environment variables by adding them to your &lt;code&gt;Homestead.yaml&lt;/code&gt; file:</source>
          <target state="translated">グローバル環境変数は、 &lt;code&gt;Homestead.yaml&lt;/code&gt; ファイルに追加することで設定できます。</target>
        </trans-unit>
        <trans-unit id="30cfb67d2cf77aea34c4c3a17fb1ae2c2fda2274" translate="yes" xml:space="preserve">
          <source>You can set the Faker locale by adding a &lt;code&gt;faker_locale&lt;/code&gt; option to your &lt;code&gt;config/app.php&lt;/code&gt; configuration file.</source>
          <target state="translated">Fakerロケールを設定するには、 &lt;code&gt;config/app.php&lt;/code&gt; 構成ファイルに &lt;code&gt;faker_locale&lt;/code&gt; オプションを追加します。</target>
        </trans-unit>
        <trans-unit id="532e7ec43437b144a5fb583942291b4d3d025d4c" translate="yes" xml:space="preserve">
          <source>You can set the visibility when setting the file via the &lt;code&gt;put&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;put&lt;/code&gt; メソッドを使用してファイルを設定するときに、可視性を設定できます。</target>
        </trans-unit>
        <trans-unit id="8e5b39ec88ac57c80c947836c83a1098347a1bfc" translate="yes" xml:space="preserve">
          <source>You can update Homestead in two simple steps. First, you should update the Vagrant box using the &lt;code&gt;vagrant box update&lt;/code&gt; command:</source>
          <target state="translated">Homesteadは2つの簡単なステップで更新できます。まず、 &lt;code&gt;vagrant box update&lt;/code&gt; コマンドを使用してVagrant boxを更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="2dab14c8f7598d1d88515bec8dafede5db886b06" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;valet link&lt;/code&gt; to serve the same project from multiple (sub)domains. To add a subdomain or another domain to your project run &lt;code&gt;valet link subdomain.app-name&lt;/code&gt; from the project folder.</source>
          <target state="translated">&lt;code&gt;valet link&lt;/code&gt; を使用して、複数の（サブ）ドメインから同じプロジェクトを提供できます。サブドメインまたは別のドメインをプロジェクトに追加するには、プロジェクトフォルダーから &lt;code&gt;valet link subdomain.app-name&lt;/code&gt; を実行します。</target>
        </trans-unit>
        <trans-unit id="2da9208d44cac598276910a050caf011d6359335" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;$refundRequestId&lt;/code&gt; as a reference for the refund when contacting Paddle support.</source>
          <target state="translated">Paddleサポートに連絡するときは、 &lt;code&gt;$refundRequestId&lt;/code&gt; を払い戻しの参照として使用できます。</target>
        </trans-unit>
        <trans-unit id="3d2ee86de3372b65961cb6ba6bf03d348bb966c6" translate="yes" xml:space="preserve">
          <source>You can write your own Valet &quot;driver&quot; to serve PHP applications running on another framework or CMS that is not natively supported by Valet. When you install Valet, a &lt;code&gt;~/.config/valet/Drivers&lt;/code&gt; directory is created which contains a &lt;code&gt;SampleValetDriver.php&lt;/code&gt; file. This file contains a sample driver implementation to demonstrate how to write a custom driver. Writing a driver only requires you to implement three methods: &lt;code&gt;serves&lt;/code&gt;, &lt;code&gt;isStaticFile&lt;/code&gt;, and &lt;code&gt;frontControllerPath&lt;/code&gt;.</source>
          <target state="translated">独自のValet &quot;ドライバー&quot;を作成して、Valetでネイティブにサポートされていない別のフレームワークまたはCMSで実行されているPHPアプリケーションにサービスを提供できます。 Valetをインストールすると、 &lt;code&gt;SampleValetDriver.php&lt;/code&gt; ファイルを含む &lt;code&gt;~/.config/valet/Drivers&lt;/code&gt; ディレクトリが作成されます。このファイルには、カスタムドライバーの作成方法を示すサンプルドライバー実装が含まれています。ドライバーを作成するに &lt;code&gt;serves&lt;/code&gt; 、 &lt;code&gt;isStaticFile&lt;/code&gt; 、isStaticFile、および &lt;code&gt;frontControllerPath&lt;/code&gt; の 3つのメソッドを実装するだけで済みます。</target>
        </trans-unit>
        <trans-unit id="7d7f79b5fcbbb0896c9ffedef20500ea8dc2cc39" translate="yes" xml:space="preserve">
          <source>You could also find the composer's global installation path by running &lt;code&gt;composer global about&lt;/code&gt; and looking up from the first line.</source>
          <target state="translated">また、composer &lt;code&gt;composer global about&lt;/code&gt; を実行し、最初の行から検索することで、composerのグローバルインストールパスを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="b71173405a72e3302400e2f7c152c419b79952a7" translate="yes" xml:space="preserve">
          <source>You do not need to choose between exclusively using gates or exclusively using policies when building an application. Most applications will most likely contain a mixture of gates and policies, and that is perfectly fine! Gates are most applicable to actions which are not related to any model or resource, such as viewing an administrator dashboard. In contrast, policies should be used when you wish to authorize an action for a particular model or resource.</source>
          <target state="translated">アプリケーションを構築する際に、ゲートのみを使用するか、ポリシーのみを使用するかを選択する必要はありません。ほとんどのアプリケーションは、ゲートとポリシーの混合物を含む可能性が高いですが、これは完全に問題ありません。ゲートは、管理者のダッシュボードを表示するなど、モデルやリソースに関係のないアクションに最も適しています。対照的に、ポリシーは、特定のモデルやリソースに対するアクションを承認したい場合に使用します。</target>
        </trans-unit>
        <trans-unit id="efdfbeff38a172e94871d595055ca69234f299f6" translate="yes" xml:space="preserve">
          <source>You have total freedom to determine how your resource's relationships are wrapped. If you would like all resource collections to be wrapped in a &lt;code&gt;data&lt;/code&gt; key, regardless of their nesting, you should define a resource collection class for each resource and return the collection within a &lt;code&gt;data&lt;/code&gt; key.</source>
          <target state="translated">リソースの関係をどのようにラップするかを自由に決定できます。入れ子に関係なく、すべてのリソースコレクションを &lt;code&gt;data&lt;/code&gt; キーでラップする場合は、各リソースのリソースコレクションクラスを定義し、 &lt;code&gt;data&lt;/code&gt; キー内でコレクションを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="bfa2147bd999c0b8a4e0bf3e64f0fe452e6c25b6" translate="yes" xml:space="preserve">
          <source>You may &quot;revoke&quot; tokens by deleting them from your database using the &lt;code&gt;tokens&lt;/code&gt; relationship that is provided by the &lt;code&gt;HasApiTokens&lt;/code&gt; trait:</source>
          <target state="translated">&lt;code&gt;HasApiTokens&lt;/code&gt; トレイトによって提供される &lt;code&gt;tokens&lt;/code&gt; 関係を使用して、データベースからトークンを削除することにより、トークンを「取り消す」ことができます。</target>
        </trans-unit>
        <trans-unit id="297d67a09e74f5ddffd392e24dd3c13439ace99f" translate="yes" xml:space="preserve">
          <source>You may &lt;code&gt;delete&lt;/code&gt; the notifications to remove them from the table entirely:</source>
          <target state="translated">通知を削除して、テーブルから完全に &lt;code&gt;delete&lt;/code&gt; ことができます。</target>
        </trans-unit>
        <trans-unit id="ec50fd1a4e329fff176e0d2b92df6fb5fca80672" translate="yes" xml:space="preserve">
          <source>You may &lt;code&gt;dispatch&lt;/code&gt; a Closure and chain the &lt;code&gt;afterResponse&lt;/code&gt; method onto the helper to execute a Closure after the response has been sent to the browser:</source>
          <target state="translated">あなたはあり &lt;code&gt;dispatch&lt;/code&gt; 閉鎖やチェーンを &lt;code&gt;afterResponse&lt;/code&gt; のレスポンスがブラウザに送信された後に閉鎖を実行するためにヘルパーにする方法：</target>
        </trans-unit>
        <trans-unit id="726b3e968aef26562326d75523e5cdd3d13e8f97" translate="yes" xml:space="preserve">
          <source>You may access all of the user's tokens using the &lt;code&gt;tokens&lt;/code&gt; Eloquent relationship provided by the &lt;code&gt;HasApiTokens&lt;/code&gt; trait:</source>
          <target state="translated">あなたは、使用してユーザーのトークンのすべてのアクセスも &lt;code&gt;tokens&lt;/code&gt; によって提供雄弁関係 &lt;code&gt;HasApiTokens&lt;/code&gt; 形質を：</target>
        </trans-unit>
        <trans-unit id="d83802d3667d34c2ae9d540dfa773f2072906b57" translate="yes" xml:space="preserve">
          <source>You may access the authenticated user via the &lt;code&gt;Auth&lt;/code&gt; facade:</source>
          <target state="translated">&lt;code&gt;Auth&lt;/code&gt; ファサードを介して認証済みユーザーにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="44510618c7d8c649074cd9eafeaa8649e4963717" translate="yes" xml:space="preserve">
          <source>You may access the options in your tasks via Blade's &quot;echo&quot; syntax. Of course, you may also use &lt;code&gt;if&lt;/code&gt; statements and loops within your tasks. For example, let's verify the presence of the &lt;code&gt;$branch&lt;/code&gt; variable before executing the &lt;code&gt;git pull&lt;/code&gt; command:</source>
          <target state="translated">ブレードの「エコー」構文を使用して、タスクのオプションにアクセスできます。もちろん、タスク内で &lt;code&gt;if&lt;/code&gt; ステートメントとループを使用することもできます。たとえば、 &lt;code&gt;git pull&lt;/code&gt; コマンドを実行する前に、 &lt;code&gt;$branch&lt;/code&gt; 変数の存在を確認してみましょう。</target>
        </trans-unit>
        <trans-unit id="3c1d054fbd69da1652b52b575b33d309599d249b" translate="yes" xml:space="preserve">
          <source>You may access the options in your tasks via Blade's &quot;echo&quot; syntax. You may also use &lt;code&gt;if&lt;/code&gt; statements and loops within your tasks. For example, let's verify the presence of the &lt;code&gt;$branch&lt;/code&gt; variable before executing the &lt;code&gt;git pull&lt;/code&gt; command:</source>
          <target state="translated">ブレードの「エコー」構文を介して、タスクのオプションにアクセスできます。タスク内で &lt;code&gt;if&lt;/code&gt; ステートメントとループを使用することもできます。たとえば、 &lt;code&gt;git pull&lt;/code&gt; コマンドを実行する前に、 &lt;code&gt;$branch&lt;/code&gt; 変数の存在を確認しましょう。</target>
        </trans-unit>
        <trans-unit id="485684ad5f42f9604487215e70c3df2dfb47f076" translate="yes" xml:space="preserve">
          <source>You may access uploaded files from a &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance using the &lt;code&gt;file&lt;/code&gt; method or using dynamic properties. The &lt;code&gt;file&lt;/code&gt; method returns an instance of the &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; class, which extends the PHP &lt;code&gt;SplFileInfo&lt;/code&gt; class and provides a variety of methods for interacting with the file:</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; メソッドまたは動的プロパティを使用して、 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; インスタンスからアップロードされたファイルにアクセスできます。 &lt;code&gt;file&lt;/code&gt; 方法は、インスタンス返し &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; PHP拡張するクラス、 &lt;code&gt;SplFileInfo&lt;/code&gt; をするクラスを、ファイルと対話するための様々な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="052bfcef2ae628c7c3a36449058bfe49c2b5c367" translate="yes" xml:space="preserve">
          <source>You may access uploaded files from an &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance using the &lt;code&gt;file&lt;/code&gt; method or using dynamic properties. The &lt;code&gt;file&lt;/code&gt; method returns an instance of the &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; class, which extends the PHP &lt;code&gt;SplFileInfo&lt;/code&gt; class and provides a variety of methods for interacting with the file:</source>
          <target state="translated">&lt;code&gt;file&lt;/code&gt; メソッドまたは動的プロパティを使用して、 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; インスタンスからアップロードされたファイルにアクセスできます。 &lt;code&gt;file&lt;/code&gt; 方法は、インスタンス返し &lt;code&gt;Illuminate\Http\UploadedFile&lt;/code&gt; PHP拡張するクラス、 &lt;code&gt;SplFileInfo&lt;/code&gt; をするクラスを、ファイルと対話するための様々な方法を提供します。</target>
        </trans-unit>
        <trans-unit id="51193e2787cfa0934ccd634d241d5e0d8f6271a7" translate="yes" xml:space="preserve">
          <source>You may add Bash aliases to your Homestead machine by modifying the &lt;code&gt;aliases&lt;/code&gt; file within your Homestead directory:</source>
          <target state="translated">ホームステッドディレクトリ内の &lt;code&gt;aliases&lt;/code&gt; ファイルを変更して、ホームステッドマシンにBashエイリアスを追加できます。</target>
        </trans-unit>
        <trans-unit id="34ea4c93db36a1585a6506617698c89e64d43d2f" translate="yes" xml:space="preserve">
          <source>You may add a set of &lt;a href=&quot;#job-chaining&quot;&gt;chained jobs&lt;/a&gt; within a batch by placing the chained jobs within an array. For example, we may execute two job chains in parallel. Since the two chains are batched, we will be able to inspect the batch completion progress as a whole:</source>
          <target state="translated">連鎖ジョブを配列内に配置することにより、&lt;a href=&quot;#job-chaining&quot;&gt;連鎖ジョブの&lt;/a&gt;セットをバッチ内に追加できます。たとえば、2つのジョブチェーンを並行して実行する場合があります。2つのチェーンがバッチ処理されているため、バッチ完了の進行状況を全体として検査できます。</target>
        </trans-unit>
        <trans-unit id="15c803a3faed41f7681659cc123ffa5222d241c9" translate="yes" xml:space="preserve">
          <source>You may add additional Nginx &lt;code&gt;fastcgi_param&lt;/code&gt; values to your site via the &lt;code&gt;params&lt;/code&gt; site directive. For example, we'll add a &lt;code&gt;FOO&lt;/code&gt; parameter with a value of &lt;code&gt;BAR&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; サイトディレクティブを使用して、サイトにNginx &lt;code&gt;fastcgi_param&lt;/code&gt; 値を追加できます。たとえば、値が &lt;code&gt;BAR&lt;/code&gt; の &lt;code&gt;FOO&lt;/code&gt; パラメータを追加します。</target>
        </trans-unit>
        <trans-unit id="c40a7b1a5b0aa708992ac0eccc0a648287838a6c" translate="yes" xml:space="preserve">
          <source>You may add items to the cache by passing an array of key / value pairs to the function. You should also pass the number of minutes or duration the cached value should be considered valid:</source>
          <target state="translated">この関数にキーと値のペアの配列を渡すことで、キャッシュにアイテムを追加することができます。また、キャッシュされた値が有効であるとみなされる時間や分数も渡さなければなりません。</target>
        </trans-unit>
        <trans-unit id="fc94979912f57922ebfeae7cbc91ca1beb29d9cb" translate="yes" xml:space="preserve">
          <source>You may add items to the cache by passing an array of key / value pairs to the function. You should also pass the number of seconds or duration the cached value should be considered valid:</source>
          <target state="translated">この関数にキーと値のペアの配列を渡すことで、キャッシュにアイテムを追加することができます。また、キャッシュされた値が有効であるとみなされる秒数や期間も渡さなければなりません。</target>
        </trans-unit>
        <trans-unit id="c223bf50b98d691113161bb8040dabc6dbe7e53d" translate="yes" xml:space="preserve">
          <source>You may add the &quot;counts&quot; for multiple relations as well as add constraints to the queries:</source>
          <target state="translated">複数のリレーションの「カウント」を追加したり、クエリに制約を追加したりすることができます。</target>
        </trans-unit>
        <trans-unit id="21b87f0d83361b5d32ba4ec46c8ac8f3c42e0df1" translate="yes" xml:space="preserve">
          <source>You may also access the raw, underlying PDO instance using the &lt;code&gt;getPdo&lt;/code&gt; method on a connection instance:</source>
          <target state="translated">また、接続インスタンスで &lt;code&gt;getPdo&lt;/code&gt; メソッドを使用して、基になる未加工のPDOインスタンスにアクセスすることもできます。</target>
        </trans-unit>
        <trans-unit id="4ad50e021fcfe02c967e2f6d20f439cb84c8b042" translate="yes" xml:space="preserve">
          <source>You may also access user input using dynamic properties on the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance. For example, if one of your application's forms contains a &lt;code&gt;name&lt;/code&gt; field, you may access the value of the field like so:</source>
          <target state="translated">また、 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; インスタンスの動的プロパティを使用してユーザー入力にアクセスすることもできます。たとえば、アプリケーションのフォームの1つに &lt;code&gt;name&lt;/code&gt; フィールドが含まれている場合、次のようにフィールドの値にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="69eef4797c9908579e36f1c9dac5e958914aacfb" translate="yes" xml:space="preserve">
          <source>You may also add &quot;attachments&quot; to Slack messages. Attachments provide richer formatting options than simple text messages. In this example, we will send an error notification about an exception that occurred in an application, including a link to view more details about the exception:</source>
          <target state="translated">Slackのメッセージに「添付ファイル」を追加することもできます。添付ファイルは、単純なテキストメッセージよりも豊富なフォーマットオプションを提供します。この例では、アプリケーションで発生した例外に関するエラー通知を送信します。</target>
        </trans-unit>
        <trans-unit id="656188acb7c89fb03ab54440afd59f92a741f733" translate="yes" xml:space="preserve">
          <source>You may also add top-level data when constructing resource instances in your route or controller. The &lt;code&gt;additional&lt;/code&gt; method, which is available on all resources, accepts an array of data that should be added to the resource response:</source>
          <target state="translated">ルートまたはコントローラーでリソースインスタンスを構築するときに、トップレベルのデータを追加することもできます。 &lt;code&gt;additional&lt;/code&gt; すべてのリソース上で利用可能である方法は、リソース応答に追加されるべきデータの配列を受け入れ：</target>
        </trans-unit>
        <trans-unit id="6c513b4cc21cc44033ed780b3b29cb24e110e8fd" translate="yes" xml:space="preserve">
          <source>You may also alias the relationship count result, allowing multiple counts on the same relationship:</source>
          <target state="translated">また、リレーションシップのカウント結果をエイリアスにして、同じリレーションシップに対して複数のカウントを許可することもできます。</target>
        </trans-unit>
        <trans-unit id="db72b9cf13438b172585e3dad0ed77698dddd554" translate="yes" xml:space="preserve">
          <source>You may also apply any of your &lt;a href=&quot;#factory-states&quot;&gt;states&lt;/a&gt; to the models. If you would like to apply multiple state transformations to the models, you may simply call state methods directly:</source>
          <target state="translated">また、任意の&lt;a href=&quot;#factory-states&quot;&gt;状態&lt;/a&gt;をモデルに適用することもできます。モデルに複数の状態変換を適用する場合は、状態メソッドを直接呼び出すだけです。</target>
        </trans-unit>
        <trans-unit id="4abc640f76740defc05cd471662ae28fcf2ea34b" translate="yes" xml:space="preserve">
          <source>You may also apply any of your &lt;a href=&quot;#factory-states&quot;&gt;states&lt;/a&gt; to the models. If you would like to apply multiple state transformations to the models, you should specify the name of each state you would like to apply:</source>
          <target state="translated">また、モデルに任意の&lt;a href=&quot;#factory-states&quot;&gt;状態&lt;/a&gt;を適用することもできます。複数の状態変換をモデルに適用する場合は、適用する各状態の名前を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="063dca384c8a77fa6950f6897c791fff82d01d79" translate="yes" xml:space="preserve">
          <source>You may also assign multiple middleware to the route:</source>
          <target state="translated">また、ルートに複数のミドルウェアを割り当てることもできます。</target>
        </trans-unit>
        <trans-unit id="ddc0672d879baae9858e752670b79e368c03399d" translate="yes" xml:space="preserve">
          <source>You may also attach relationships to models using Closure attributes in your factory definitions. For example, if you would like to create a new &lt;code&gt;User&lt;/code&gt; instance when creating a &lt;code&gt;Post&lt;/code&gt;, you may do the following:</source>
          <target state="translated">ファクトリー定義のクロージャー属性を使用してモデルに関係をアタッチすることもできます。たとえば、 &lt;code&gt;Post&lt;/code&gt; を作成するときに新しい &lt;code&gt;User&lt;/code&gt; インスタンスを作成したい場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="ba04010082880577835dbd43702eeeecd8e8e15b" translate="yes" xml:space="preserve">
          <source>You may also bind an existing object instance into the container using the &lt;code&gt;instance&lt;/code&gt; method. The given instance will always be returned on subsequent calls into the container:</source>
          <target state="translated">&lt;code&gt;instance&lt;/code&gt; メソッドを使用して、既存のオブジェクトインスタンスをコンテナにバインドすることもできます。指定されたインスタンスは、コンテナへの後続の呼び出しで常に返されます。</target>
        </trans-unit>
        <trans-unit id="6507b0530fa531414724f8fd5b6bd8eb30eca5a6" translate="yes" xml:space="preserve">
          <source>You may also call the &lt;code&gt;find&lt;/code&gt; method with an array of primary keys, which will return a collection of the matching records:</source>
          <target state="translated">また、一致するレコードのコレクションを返す主キーの配列を使用して &lt;code&gt;find&lt;/code&gt; メソッドを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="e29613e4097fb577fdfe07449922e3a630f9308a" translate="yes" xml:space="preserve">
          <source>You may also call the &lt;code&gt;first&lt;/code&gt; method with no arguments to get the first element in the collection. If the collection is empty, &lt;code&gt;null&lt;/code&gt; is returned:</source>
          <target state="translated">コレクションの最初の要素を取得するために、引数なしで &lt;code&gt;first&lt;/code&gt; メソッドを呼び出すこともできます。コレクションが空の場合、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="79ad45557ee552f4412b695d82675a80e854dc73" translate="yes" xml:space="preserve">
          <source>You may also call the &lt;code&gt;firstWhere&lt;/code&gt; method with an operator:</source>
          <target state="translated">演算子を使用して &lt;code&gt;firstWhere&lt;/code&gt; メソッドを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="3965e728be5f185b0b841a3a54df423c152cf9be" translate="yes" xml:space="preserve">
          <source>You may also call the &lt;code&gt;last&lt;/code&gt; method with no arguments to get the last element in the collection. If the collection is empty, &lt;code&gt;null&lt;/code&gt; is returned:</source>
          <target state="translated">コレクションの最後の要素を取得するために、引数なしで &lt;code&gt;last&lt;/code&gt; メソッドを呼び出すこともできます。コレクションが空の場合、 &lt;code&gt;null&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="e2a415118f2d1459b53db3c35f1be8b80bd12438" translate="yes" xml:space="preserve">
          <source>You may also call the &lt;code&gt;putFile&lt;/code&gt; method on the &lt;code&gt;Storage&lt;/code&gt; facade to perform the same file manipulation as the example above:</source>
          <target state="translated">&lt;code&gt;Storage&lt;/code&gt; ファサードで &lt;code&gt;putFile&lt;/code&gt; メソッドを呼び出して、上記の例と同じファイル操作を実行することもできます。</target>
        </trans-unit>
        <trans-unit id="987a2b06f89ad0c44b36298455876c8985d92cea" translate="yes" xml:space="preserve">
          <source>You may also call this method via the &lt;code&gt;View&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサードを&lt;/a&gt;介してこのメ​​ソッドを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="b1627c5d7a1be7bf30b5b7022309b3b14ffc4766" translate="yes" xml:space="preserve">
          <source>You may also change the plans attached to a multiplan subscription. For example, imagine you're on a &lt;code&gt;basic-plan&lt;/code&gt; subscription with a &lt;code&gt;chat-plan&lt;/code&gt; add-on and you want to upgrade to the &lt;code&gt;pro-plan&lt;/code&gt; plan:</source>
          <target state="translated">マルチプランサブスクリプションに添付されているプラ​​ンを変更することもできます。たとえば、 &lt;code&gt;chat-plan&lt;/code&gt; アドオンを使用した &lt;code&gt;basic-plan&lt;/code&gt; サブスクリプションを利用していて、 &lt;code&gt;pro-plan&lt;/code&gt; プランにアップグレードしたいとします。</target>
        </trans-unit>
        <trans-unit id="1eb68bb58176da3970c7347ab8ca77b39733bc60" translate="yes" xml:space="preserve">
          <source>You may also choose to display prices after a coupon reduction. When calling the &lt;code&gt;productPrices&lt;/code&gt; method, coupons may be passed as a comma delimited string:</source>
          <target state="translated">クーポンの割引後に価格を表示することもできます。 &lt;code&gt;productPrices&lt;/code&gt; メソッドを呼び出すと、クーポンはコンマ区切りの文字列として渡される場合があります。</target>
        </trans-unit>
        <trans-unit id="b330c71be88d71799ea705b4d55a3e0fbd2b24da" translate="yes" xml:space="preserve">
          <source>You may also come across situations where you want to update an existing model or create a new model if none exists. Laravel provides an &lt;code&gt;updateOrCreate&lt;/code&gt; method to do this in one step. Like the &lt;code&gt;firstOrCreate&lt;/code&gt; method, &lt;code&gt;updateOrCreate&lt;/code&gt; persists the model, so there's no need to call &lt;code&gt;save()&lt;/code&gt;:</source>
          <target state="translated">また、既存のモデルを更新したい場合や、存在しない場合に新しいモデルを作成したい場合もあります。Laravelは、これを1つのステップで実行するための &lt;code&gt;updateOrCreate&lt;/code&gt; メソッドを提供します。同様 &lt;code&gt;firstOrCreate&lt;/code&gt; 方法、 &lt;code&gt;updateOrCreate&lt;/code&gt; はとてもコールする必要はありません、モデルを持続する &lt;code&gt;save()&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4a6e782a935dbd68ac22dd4645a0b81fad8a3ef7" translate="yes" xml:space="preserve">
          <source>You may also configure a &lt;a href=&quot;scheduling&quot;&gt;scheduled job&lt;/a&gt; in your console &lt;code&gt;Kernel&lt;/code&gt; class to automatically prune your tokens on a schedule:</source>
          <target state="translated">コンソールの &lt;code&gt;Kernel&lt;/code&gt; クラスで&lt;a href=&quot;scheduling&quot;&gt;スケジュールされたジョブ&lt;/a&gt;を構成して、スケジュールに従ってトークンを自動的にプルーニングすることもできます。</target>
        </trans-unit>
        <trans-unit id="3f6b7805211264241ca4af6fc1be43dcd65475dc" translate="yes" xml:space="preserve">
          <source>You may also convert entire &lt;a href=&quot;eloquent-collections&quot;&gt;collections&lt;/a&gt; of models to arrays:</source>
          <target state="translated">モデルの&lt;a href=&quot;eloquent-collections&quot;&gt;コレクション&lt;/a&gt;全体を配列に変換することもできます。</target>
        </trans-unit>
        <trans-unit id="65ab7d8d46231effe00ffbe086acf4e078576314" translate="yes" xml:space="preserve">
          <source>You may also create a Collection of many models or create models of a given type:</source>
          <target state="translated">また、多くのモデルのコレクションを作成したり、所定のタイプのモデルを作成したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="ba5f6a86e8d85e79456bc4c471d3e4d82ce77fba" translate="yes" xml:space="preserve">
          <source>You may also create additional factory files for each model for better organization. For example, you could create &lt;code&gt;UserFactory.php&lt;/code&gt; and &lt;code&gt;CommentFactory.php&lt;/code&gt; files within your &lt;code&gt;database/factories&lt;/code&gt; directory. All of the files within the &lt;code&gt;factories&lt;/code&gt; directory will automatically be loaded by Laravel.</source>
          <target state="translated">より良い組織化のために、各モデルに追加のファクトリファイルを作成することもできます。たとえば、 &lt;code&gt;database/factories&lt;/code&gt; ディレクトリ内に &lt;code&gt;UserFactory.php&lt;/code&gt; および &lt;code&gt;CommentFactory.php&lt;/code&gt; ファイルを作成できます。 &lt;code&gt;factories&lt;/code&gt; ディレクトリ内のすべてのファイルは、Laravelによって自動的にロードされます。</target>
        </trans-unit>
        <trans-unit id="826b3bba8812a9acb7c5e5c8cdde96cafb5bb18e" translate="yes" xml:space="preserve">
          <source>You may also customize the &quot;guard&quot; that is used to authenticate and register users. To get started, define a &lt;code&gt;guard&lt;/code&gt; method on your &lt;code&gt;LoginController&lt;/code&gt;, &lt;code&gt;RegisterController&lt;/code&gt;, and &lt;code&gt;ResetPasswordController&lt;/code&gt;. The method should return a guard instance:</source>
          <target state="translated">ユーザーの認証と登録に使用される「ガード」をカスタマイズすることもできます。はじめに、 &lt;code&gt;LoginController&lt;/code&gt; 、 &lt;code&gt;RegisterController&lt;/code&gt; 、および &lt;code&gt;ResetPasswordController&lt;/code&gt; に &lt;code&gt;guard&lt;/code&gt; メソッドを定義します。メソッドはガードインスタンスを返す必要があります。</target>
        </trans-unit>
        <trans-unit id="e59fabe2bc87aa959e6b9c19e348c74c6cfd2922" translate="yes" xml:space="preserve">
          <source>You may also define a &lt;code&gt;retryUntil&lt;/code&gt; method on your queued event listeners.</source>
          <target state="translated">キューに入れられたイベントリスナーで &lt;code&gt;retryUntil&lt;/code&gt; メソッドを定義することもできます。</target>
        </trans-unit>
        <trans-unit id="11e950e6690b2d5058efdd5e908749e656e52159" translate="yes" xml:space="preserve">
          <source>You may also define callbacks for &lt;a href=&quot;#factory-states&quot;&gt;factory states&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;#factory-states&quot;&gt;ファクトリー状態の&lt;/a&gt;コールバックを定義することもできます：</target>
        </trans-unit>
        <trans-unit id="c13c73e0825871ca3da37f97d4f204c58a103acf" translate="yes" xml:space="preserve">
          <source>You may also define multiple Gate abilities at once using the &lt;code&gt;resource&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;resource&lt;/code&gt; メソッドを使用して、一度に複数のゲート機能を定義することもできます。</target>
        </trans-unit>
        <trans-unit id="b83a98779b0264b3a868c946519c77b054446ac5" translate="yes" xml:space="preserve">
          <source>You may also define place-holder attributes in pluralization strings. These place-holders may be replaced by passing an array as the third argument to the &lt;code&gt;trans_choice&lt;/code&gt; function:</source>
          <target state="translated">複数形文字列にプレースホルダー属性を定義することもできます。これらのプレースホルダーは、 &lt;code&gt;trans_choice&lt;/code&gt; 関数の3番目の引数として配列を渡すことで置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="8e220c4203fd8a29a64991ab12016e4e2a7cbe08" translate="yes" xml:space="preserve">
          <source>You may also define placeholder attributes in pluralization strings. These placeholders may be replaced by passing an array as the third argument to the &lt;code&gt;trans_choice&lt;/code&gt; function:</source>
          <target state="translated">複数化文字列でプレースホルダー属性を定義することもできます。これらのプレースホルダーは、 &lt;code&gt;trans_choice&lt;/code&gt; 関数の3番目の引数として配列を渡すことで置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="7309e5d341811f3d3c6476265dba562e010665ff" translate="yes" xml:space="preserve">
          <source>You may also determine if a user has any authorization ability from a given list of abilities. To accomplish this, use the &lt;code&gt;@canany&lt;/code&gt; directive:</source>
          <target state="translated">また、特定の能力リストから、ユーザーが承認能力を持っているかどうかを判断することもできます。これを実現するには、 &lt;code&gt;@canany&lt;/code&gt; ディレクティブを使用します。</target>
        </trans-unit>
        <trans-unit id="2fd6342744cef0239e18ed20584be19febfd71b3" translate="yes" xml:space="preserve">
          <source>You may also determine if a user has cancelled their subscription, but are still on their &quot;grace period&quot; until the subscription fully expires. For example, if a user cancels a subscription on March 5th that was originally scheduled to expire on March 10th, the user is on their &quot;grace period&quot; until March 10th. Note that the &lt;code&gt;subscribed&lt;/code&gt; method still returns &lt;code&gt;true&lt;/code&gt; during this time:</source>
          <target state="translated">また、ユーザーがサブスクリプションをキャンセルしたが、サブスクリプションが完全に期限切れになるまで「猶予期間」が続いているかどうかを確認することもできます。たとえば、3月10日に期限が切れるように予定されていたサブスクリプションを3月5日にキャンセルした場合、そのユーザーは3月10日まで「猶予期間」になります。この間も、 &lt;code&gt;subscribed&lt;/code&gt; メソッドは &lt;code&gt;true&lt;/code&gt; を返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="3423c316610d0b2cdfbdb57cebc073c393697810" translate="yes" xml:space="preserve">
          <source>You may also display the net price (excludes tax) and display the tax amount separately:</source>
          <target state="translated">また、純額(税抜)を表示し、税額を別途表示することもできます。</target>
        </trans-unit>
        <trans-unit id="87f17732eb8fa5a3c1f3a5a2ddef31ca016fd670" translate="yes" xml:space="preserve">
          <source>You may also generate redirects to &lt;a href=&quot;controllers&quot;&gt;controller actions&lt;/a&gt;. To do so, pass the controller and action name to the &lt;code&gt;action&lt;/code&gt; method. Remember, you do not need to specify the full namespace to the controller since Laravel's &lt;code&gt;RouteServiceProvider&lt;/code&gt; will automatically set the base controller namespace:</source>
          <target state="translated">&lt;a href=&quot;controllers&quot;&gt;コントローラアクション&lt;/a&gt;へのリダイレクトを生成することもできます。これを行うには、コントローラーとアクション名を &lt;code&gt;action&lt;/code&gt; メソッドに渡します。Laravelの &lt;code&gt;RouteServiceProvider&lt;/code&gt; が自動的に基本コントローラーの名前空間を設定するため、コントローラーに完全な名前空間を指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="fb246b05f8e708583fbe8d5114e4e52e941d2295" translate="yes" xml:space="preserve">
          <source>You may also generate redirects to &lt;a href=&quot;controllers&quot;&gt;controller actions&lt;/a&gt;. To do so, pass the controller and action name to the &lt;code&gt;action&lt;/code&gt; method:</source>
          <target state="translated">&lt;a href=&quot;controllers&quot;&gt;コントローラアクション&lt;/a&gt;へのリダイレクトを生成することもできます。これを行うには、コントローラーとアクション名を &lt;code&gt;action&lt;/code&gt; メソッドに渡します。</target>
        </trans-unit>
        <trans-unit id="dd630e7f750dd4279c640ffaed3dd2e38b0ad211" translate="yes" xml:space="preserve">
          <source>You may also import other Envoy files so their stories and tasks are added to yours. After they have been imported, you may execute the tasks in those files as if they were defined in your own. You should use the &lt;code&gt;@import&lt;/code&gt; directive at the top of your &lt;code&gt;Envoy.blade.php&lt;/code&gt; file:</source>
          <target state="translated">他のEnvoyファイルをインポートして、それらのストーリーとタスクを自分のものに追加することもできます。それらがインポートされた後、それらがあなた自身で定義されたかのようにそれらのファイルのタスクを実行することができます。 &lt;code&gt;Envoy.blade.php&lt;/code&gt; ファイルの先頭にある &lt;code&gt;@import&lt;/code&gt; ディレクティブを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="ac39d3823b41d4b26aff20605f76762638c99728" translate="yes" xml:space="preserve">
          <source>You may also include the condition with the directive declaration in one line:</source>
          <target state="translated">また、一行にディレクティブの宣言と一緒に条件を入れても良いでしょう。</target>
        </trans-unit>
        <trans-unit id="f4e645e149c0aa1594a440c793f893166b9c2c8b" translate="yes" xml:space="preserve">
          <source>You may also install additional Stylus plug-ins, such as &lt;a href=&quot;https://github.com/jescalan/rupture&quot;&gt;Rupture&lt;/a&gt;. First, install the plug-in in question through NPM (&lt;code&gt;npm install rupture&lt;/code&gt;) and then require it in your call to &lt;code&gt;mix.stylus()&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jescalan/rupture&quot;&gt;Rupture&lt;/a&gt;などの追加のStylusプラグインをインストールすることもできます。まず、問題のプラグインをNPMを介して &lt;code&gt;npm install rupture&lt;/code&gt; （npm install rupture）、次に &lt;code&gt;mix.stylus()&lt;/code&gt; の呼び出しでそれを要求します。</target>
        </trans-unit>
        <trans-unit id="75a7b0470f6edd65e16753c2976befe025802bb7" translate="yes" xml:space="preserve">
          <source>You may also loop over the collection like an array:</source>
          <target state="translated">配列のようにコレクションをループさせることもできます。</target>
        </trans-unit>
        <trans-unit id="7ce575fd65734991e3bde7678dac555c3d5f50e9" translate="yes" xml:space="preserve">
          <source>You may also make arguments optional and define default values for arguments:</source>
          <target state="translated">また、引数をオプションにしたり、引数のデフォルト値を定義したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="a1b85ab9e91a9122cb3809eafdc21c7a294774d7" translate="yes" xml:space="preserve">
          <source>You may also manually register commands by adding its class name to the &lt;code&gt;$commands&lt;/code&gt; property of your &lt;code&gt;app/Console/Kernel.php&lt;/code&gt; file. When Artisan boots, all the commands listed in this property will be resolved by the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; and registered with Artisan:</source>
          <target state="translated">&lt;code&gt;app/Console/Kernel.php&lt;/code&gt; ファイルの &lt;code&gt;$commands&lt;/code&gt; プロパティにクラス名を追加して、コマンドを手動で登録することもできます。Artisanが起動すると、このプロパティにリストされているすべてのコマンドが&lt;a href=&quot;container&quot;&gt;サービスコンテナ&lt;/a&gt;によって解決され、Artisanに登録されます。</target>
        </trans-unit>
        <trans-unit id="e3e386f3ec90fbddd5e04809a715a333fafc4409" translate="yes" xml:space="preserve">
          <source>You may also merge your own package configuration file with the application's published copy. This will allow your users to define only the options they actually want to override in the published copy of the configuration. To merge the configurations, use the &lt;code&gt;mergeConfigFrom&lt;/code&gt; method within your service provider's &lt;code&gt;register&lt;/code&gt; method:</source>
          <target state="translated">独自のパッケージ構成ファイルをアプリケーションの公開済みコピーとマージすることもできます。これにより、ユーザーは、構成の公開されたコピーで実際にオーバーライドするオプションのみを定義できます。構成をマージするには、サービスプロバイダーの &lt;code&gt;register&lt;/code&gt; メソッド内で &lt;code&gt;mergeConfigFrom&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="23f1e44e208c4685d19be911136ccc53e9f05eb1" translate="yes" xml:space="preserve">
          <source>You may also optionally specify a specific amount to refund as well as a reason for the refund:</source>
          <target state="translated">また、オプションで返金額と返金理由を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="012eb33564a239f898ef4bdec944263466878d49" translate="yes" xml:space="preserve">
          <source>You may also paginate &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; queries. In this example, we will paginate the &lt;code&gt;User&lt;/code&gt; model with &lt;code&gt;15&lt;/code&gt; items per page. As you can see, the syntax is nearly identical to paginating query builder results:</source>
          <target state="translated">&lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt;クエリにページ番号を付けることもできます。この例では、ページごとに &lt;code&gt;15&lt;/code&gt; の項目を持つ &lt;code&gt;User&lt;/code&gt; モデルにページ番号を付けます。ご覧のとおり、構文はクエリビルダーの結果のページ分割とほぼ同じです。</target>
        </trans-unit>
        <trans-unit id="7adb16e0ea73253b174decf0ee93d62b320e5f6d" translate="yes" xml:space="preserve">
          <source>You may also pass a callback to the method. The callback should return the value to key the collection by:</source>
          <target state="translated">メソッドにコールバックを渡すこともできます。コールバックはコレクションのキーとなる値を返します。</target>
        </trans-unit>
        <trans-unit id="9ca9ff8b6598b9b4b7d3cab7355401542fb8f2cc" translate="yes" xml:space="preserve">
          <source>You may also pass a class and method to the &lt;code&gt;extend&lt;/code&gt; method instead of a Closure:</source>
          <target state="translated">Closureの代わりに、クラスとメソッドを &lt;code&gt;extend&lt;/code&gt; メソッドに渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="868e472609fd382c71896f30ac5d7af65245c452" translate="yes" xml:space="preserve">
          <source>You may also pass a comparison operator to the method:</source>
          <target state="translated">メソッドに比較演算子を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="4ca4771d0bcec1b06ffeaffb65bf8e7caa68fed6" translate="yes" xml:space="preserve">
          <source>You may also pass a fourth argument to the &lt;code&gt;@each&lt;/code&gt; directive. This argument determines the view that will be rendered if the given array is empty.</source>
          <target state="translated">&lt;code&gt;@each&lt;/code&gt; ディレクティブに4番目の引数を渡すこともできます。この引数は、指定された配列が空の場合にレンダリングされるビューを決定します。</target>
        </trans-unit>
        <trans-unit id="bb2c002d685b28e370a00fa1750c67e447b6c652" translate="yes" xml:space="preserve">
          <source>You may also pass a key / value pair to the &lt;code&gt;contains&lt;/code&gt; method, which will determine if the given pair exists in the collection:</source>
          <target state="translated">また、キーと値のペアを &lt;code&gt;contains&lt;/code&gt; メソッドに渡すこともできます。これにより、指定したペアがコレクションに存在するかどうかが判断されます。</target>
        </trans-unit>
        <trans-unit id="8754cac8d946d37fd31c726b5289cc35174639f1" translate="yes" xml:space="preserve">
          <source>You may also pass a negative integer to take the specified amount of items from the end of the collection:</source>
          <target state="translated">また、負の整数を渡して、指定した量のアイテムをコレクションの最後から取ることもできます。</target>
        </trans-unit>
        <trans-unit id="0e2fd41b8b97262e5418a575266caf90218ad08d" translate="yes" xml:space="preserve">
          <source>You may also pass a second argument to change the string that will be appended to the end:</source>
          <target state="translated">また、第2引数を渡して、最後に付加される文字列を変更することもできます。</target>
        </trans-unit>
        <trans-unit id="ccc5479050adf1fdd9a2bc7ad2efd6eefedb9333" translate="yes" xml:space="preserve">
          <source>You may also pass a second argument to set the key of the prepended item:</source>
          <target state="translated">また、第2引数を渡して、前に追加した項目のキーを設定することもできます。</target>
        </trans-unit>
        <trans-unit id="f31e182f923ec1720730e2b3f7cc6219b295f948" translate="yes" xml:space="preserve">
          <source>You may also pass a second argument to the &lt;code&gt;rescue&lt;/code&gt; function. This argument will be the &quot;default&quot; value that should be returned if an exception occurs while executing the Closure:</source>
          <target state="translated">また、2番目の引数を &lt;code&gt;rescue&lt;/code&gt; 関数に渡すこともできます。この引数は、クロージャーの実行中に例外が発生した場合に返される「デフォルト」の値になります。</target>
        </trans-unit>
        <trans-unit id="6e2fe448b1d1492432ac9f59a2ab5f54974b878b" translate="yes" xml:space="preserve">
          <source>You may also pass a simple value to the &lt;code&gt;skipUntil&lt;/code&gt; method to skip all items until the given value is found:</source>
          <target state="translated">また、 &lt;code&gt;skipUntil&lt;/code&gt; メソッドに単純な値を渡して、指定された値が見つかるまですべてのアイテムをスキップすることもできます。</target>
        </trans-unit>
        <trans-unit id="759dde8942cea198f5894e0de2ac1c27c1ba60f8" translate="yes" xml:space="preserve">
          <source>You may also pass a simple value to the &lt;code&gt;takeUntil&lt;/code&gt; method to get the items until the given value is found:</source>
          <target state="translated">単純な値を &lt;code&gt;takeUntil&lt;/code&gt; メソッドに渡して、指定された値が見つかるまでアイテムを取得することもできます。</target>
        </trans-unit>
        <trans-unit id="8411806ad84560611fc41b782c2c9b22933cdfac" translate="yes" xml:space="preserve">
          <source>You may also pass a third argument to change the string that will be appended to the end:</source>
          <target state="translated">また、第三引数を渡して、最後に付加される文字列を変更することもできます。</target>
        </trans-unit>
        <trans-unit id="1d7b7e496186855f0715b9b31532ea1a89fdddae" translate="yes" xml:space="preserve">
          <source>You may also pass additional intermediate table values with the IDs:</source>
          <target state="translated">また、追加の中間テーブル値をIDで渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="0cf45eacfbda303913da681f61b445354dc4a792" translate="yes" xml:space="preserve">
          <source>You may also pass an array of conditions to the &lt;code&gt;where&lt;/code&gt; function:</source>
          <target state="translated">条件の配列を &lt;code&gt;where&lt;/code&gt; 関数に渡すこともできます：</target>
        </trans-unit>
        <trans-unit id="06fe5590409c98db2fbd917a07c4fcce14fec407" translate="yes" xml:space="preserve">
          <source>You may also pass an array of values to determine if the given string contains any of the values:</source>
          <target state="translated">また、値の配列を渡して、与えられた文字列がいずれかの値を含んでいるかどうかを判断することもできます。</target>
        </trans-unit>
        <trans-unit id="a7be16ba03c5c0502c5e7ec5659244669e8126fc" translate="yes" xml:space="preserve">
          <source>You may also pass an array of values to determine if the given string ends with any of the given values:</source>
          <target state="translated">また、値の配列を渡して、与えられた文字列が与えられた値のいずれかで終わるかどうかを判断することもできます。</target>
        </trans-unit>
        <trans-unit id="2c0e2da8ee247e40e0701a7c0de2c430f3128013" translate="yes" xml:space="preserve">
          <source>You may also pass any options supported by Vagrant's &lt;a href=&quot;https://www.vagrantup.com/docs/synced-folders/basic_usage.html&quot;&gt;Synced Folders&lt;/a&gt; by listing them under the &lt;code&gt;options&lt;/code&gt; key:</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; キーの下にリストすることで、Vagrantの&lt;a href=&quot;https://www.vagrantup.com/docs/synced-folders/basic_usage.html&quot;&gt;同期フォルダーで&lt;/a&gt;サポートされているオプションを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="031f4f8df3e1c99d3ba6e5056047af265d534b78" translate="yes" xml:space="preserve">
          <source>You may also pass arguments to the &lt;code&gt;environment&lt;/code&gt; method to check if the environment matches a given value. The method will return &lt;code&gt;true&lt;/code&gt; if the environment matches any of the given values:</source>
          <target state="translated">また、 &lt;code&gt;environment&lt;/code&gt; メソッドに引数を渡して、環境が特定の値と一致するかどうかを確認することもできます。環境が指定された値のいずれかに一致する場合、メソッドは &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="8ea8a5b3ea693d236dedc4c3ac10b0f07258b676" translate="yes" xml:space="preserve">
          <source>You may also pass the custom attributes as the fourth argument to the &lt;code&gt;Validator::make&lt;/code&gt; method:</source>
          <target state="translated">カスタム属性を4番目の引数として &lt;code&gt;Validator::make&lt;/code&gt; メソッドに渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="96ab3691eaed517caa15cda7ec3c3cf829a7b624" translate="yes" xml:space="preserve">
          <source>You may also pass your own callback to determine item uniqueness:</source>
          <target state="translated">アイテムの一意性を判断するために、独自のコールバックを渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="fb384c1922d4e3e4d97d6a0b3ded0e1685b29139" translate="yes" xml:space="preserve">
          <source>You may also pause and continue specific Horizon supervisors (worker groups) using the &lt;code&gt;horizon:pause-supervisor&lt;/code&gt; and &lt;code&gt;horizon:continue-supervisor&lt;/code&gt; Artisan commands:</source>
          <target state="translated">また、 &lt;code&gt;horizon:pause-supervisor&lt;/code&gt; および &lt;code&gt;horizon:continue-supervisor&lt;/code&gt; Artisanコマンドを使用して、特定のHorizo​​nスーパーバイザー（ワーカーグループ）を一時停止して続行することもできます。</target>
        </trans-unit>
        <trans-unit id="3b6fcd93dccd08542f882578e627a6b6b14f2d00" translate="yes" xml:space="preserve">
          <source>You may also provide &lt;code&gt;message&lt;/code&gt; and &lt;code&gt;retry&lt;/code&gt; options to the &lt;code&gt;down&lt;/code&gt; command. The &lt;code&gt;message&lt;/code&gt; value may be used to display or log a custom message, while the &lt;code&gt;retry&lt;/code&gt; value will be set as the &lt;code&gt;Retry-After&lt;/code&gt; HTTP header's value:</source>
          <target state="translated">また、 &lt;code&gt;down&lt;/code&gt; コマンドに &lt;code&gt;message&lt;/code&gt; と &lt;code&gt;retry&lt;/code&gt; オプションを提供することもできます。 &lt;code&gt;message&lt;/code&gt; ながら値を、表示またはカスタムメッセージをログするために使用することができる &lt;code&gt;retry&lt;/code&gt; 値として設定される &lt;code&gt;Retry-After&lt;/code&gt; HTTPヘッダの値。</target>
        </trans-unit>
        <trans-unit id="f7dd908664168a6266029d0a91bca2414a301042" translate="yes" xml:space="preserve">
          <source>You may also provide a &lt;code&gt;retry&lt;/code&gt; option to the &lt;code&gt;down&lt;/code&gt; command, which will be set as the &lt;code&gt;Retry-After&lt;/code&gt; HTTP header's value:</source>
          <target state="translated">また、 &lt;code&gt;down&lt;/code&gt; コマンドに &lt;code&gt;retry&lt;/code&gt; オプションを指定することもできます。これは、 &lt;code&gt;Retry-After&lt;/code&gt; AfterHTTPヘッダーの値として設定されます。</target>
        </trans-unit>
        <trans-unit id="9608a9df38112dbac52f0fef1187a51c0d463a9f" translate="yes" xml:space="preserve">
          <source>You may also provide the &lt;code&gt;connection&lt;/code&gt; argument and &lt;code&gt;queue&lt;/code&gt; option to delete jobs from a specific connection and queue:</source>
          <target state="translated">特定の接続とキューからジョブを削除するために、 &lt;code&gt;connection&lt;/code&gt; 引数と &lt;code&gt;queue&lt;/code&gt; オプションを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="878630264e9007cb629ef835ac1814b4d989deeb" translate="yes" xml:space="preserve">
          <source>You may also provide the &lt;code&gt;queue&lt;/code&gt; option to delete jobs from a specific queue:</source>
          <target state="translated">特定のキューからジョブを削除するための &lt;code&gt;queue&lt;/code&gt; オプションを提供することもできます。</target>
        </trans-unit>
        <trans-unit id="c9327bf3a25821c3454aa204e23bc7c3f396c6e4" translate="yes" xml:space="preserve">
          <source>You may also provide the exception's message and custom response headers that should be sent to the browser:</source>
          <target state="translated">また、ブラウザに送信されるべき例外のメッセージとカスタム応答ヘッダーを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="615124635cebb5a1c235448dd17226852ab5a619" translate="yes" xml:space="preserve">
          <source>You may also provide the exception's response text and custom response headers:</source>
          <target state="translated">また、例外の応答テキストとカスタム応答ヘッダを提供することもできます。</target>
        </trans-unit>
        <trans-unit id="f853580acf59b47796245f227633a337988b8c8f" translate="yes" xml:space="preserve">
          <source>You may also reference actions with a &quot;callable&quot; array syntax:</source>
          <target state="translated">呼び出し可能な」配列構文でアクションを参照することもできます。</target>
        </trans-unit>
        <trans-unit id="8ade34adb0acfceb0a553a640fd0b55e6dab9136" translate="yes" xml:space="preserve">
          <source>You may also remove items by providing a zero or negative TTL:</source>
          <target state="translated">また、ゼロまたはマイナスのTTLを指定してアイテムを削除することもできます。</target>
        </trans-unit>
        <trans-unit id="6bceae545bedab5f1cdccd3c3fd347eb9808ec15" translate="yes" xml:space="preserve">
          <source>You may also retrieve all of the input data as an &lt;code&gt;array&lt;/code&gt; using the &lt;code&gt;all&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;all&lt;/code&gt; メソッドを使用して、すべての入力データを &lt;code&gt;array&lt;/code&gt; として取得することもできます。</target>
        </trans-unit>
        <trans-unit id="33f3eed099ebc207a8ef07dccdf6443edfa21c82" translate="yes" xml:space="preserve">
          <source>You may also retrieve the owner of a polymorphic relation from the polymorphic model by accessing the name of the method that performs the call to &lt;code&gt;morphTo&lt;/code&gt;. In our case, that is the &lt;code&gt;commentable&lt;/code&gt; method on the &lt;code&gt;Comment&lt;/code&gt; model. So, we will access that method as a dynamic property:</source>
          <target state="translated">また、 &lt;code&gt;morphTo&lt;/code&gt; の呼び出しを実行するメソッドの名前にアクセスして、多態性モデルから多態性リレーションの所有者を取得することもできます。我々の場合には、それがある &lt;code&gt;commentable&lt;/code&gt; 上のメソッド &lt;code&gt;Comment&lt;/code&gt; モデル。したがって、そのメソッドに動的プロパティとしてアクセスします。</target>
        </trans-unit>
        <trans-unit id="028863ce611249a9ba46ecd7e5395a2af279b648" translate="yes" xml:space="preserve">
          <source>You may also retrieve the owner of a polymorphic relation from the polymorphic model by accessing the name of the method that performs the call to &lt;code&gt;morphedByMany&lt;/code&gt;. In our case, that is the &lt;code&gt;posts&lt;/code&gt; or &lt;code&gt;videos&lt;/code&gt; methods on the &lt;code&gt;Tag&lt;/code&gt; model. So, you will access those methods as dynamic properties:</source>
          <target state="translated">&lt;code&gt;morphedByMany&lt;/code&gt; の呼び出しを実行するメソッドの名前にアクセスして、多態性モデルから多態性リレーションの所有者を取得することもできます。私たちの場合、それは &lt;code&gt;Tag&lt;/code&gt; モデルの &lt;code&gt;posts&lt;/code&gt; または &lt;code&gt;videos&lt;/code&gt; メソッドです。したがって、これらのメソッドに動的プロパティとしてアクセスします。</target>
        </trans-unit>
        <trans-unit id="77b3f6cf51f987b8939e521eed785c66d8a4e688" translate="yes" xml:space="preserve">
          <source>You may also retrieve the parent from the polymorphic model by accessing the name of the method that performs the call to &lt;code&gt;morphTo&lt;/code&gt;. In our case, that is the &lt;code&gt;imageable&lt;/code&gt; method on the &lt;code&gt;Image&lt;/code&gt; model. So, we will access that method as a dynamic property:</source>
          <target state="translated">&lt;code&gt;morphTo&lt;/code&gt; の呼び出しを実行するメソッドの名前にアクセスして、ポリモーフィックモデルから親を取得することもできます。私たちの場合、それは &lt;code&gt;Image&lt;/code&gt; モデルの &lt;code&gt;imageable&lt;/code&gt; 方法です。したがって、動的プロパティとしてそのメソッドにアクセスします。</target>
        </trans-unit>
        <trans-unit id="6dffdc97d622a29d10ebf1c36d27f77a6a0ae489" translate="yes" xml:space="preserve">
          <source>You may also seed your database using the &lt;code&gt;migrate:fresh&lt;/code&gt; command, which will drop all tables and re-run all of your migrations. This command is useful for completely re-building your database:</source>
          <target state="translated">また、 &lt;code&gt;migrate:fresh&lt;/code&gt; コマンドを使用してデータベースをシードすることもできます。これにより、すべてのテーブルが削除され、すべての移行が再実行されます。このコマンドは、データベースを完全に再構築するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="bbbf73aaf52fc2d9c6af338388d5228abb229fdf" translate="yes" xml:space="preserve">
          <source>You may also seed your database using the &lt;code&gt;migrate:refresh&lt;/code&gt; command, which will also rollback and re-run all of your migrations. This command is useful for completely re-building your database:</source>
          <target state="translated">また、 &lt;code&gt;migrate:refresh&lt;/code&gt; コマンドを使用してデータベースをシードすることもできます。これにより、すべての移行がロールバックされ、再実行されます。このコマンドは、データベースを完全に再構築するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="944ffa6a007798618f1570cf8e7a06cdd689b189" translate="yes" xml:space="preserve">
          <source>You may also set the &lt;code&gt;host&lt;/code&gt; option to a UNIX socket path. If you do this, the &lt;code&gt;port&lt;/code&gt; option should be set to &lt;code&gt;0&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; オプションをUNIXソケットパスに設定することもできます。これを行う場合、 &lt;code&gt;port&lt;/code&gt; オプションを &lt;code&gt;0&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="2f3a657a1b3f9c3178ce299020f7d13cfb5bd73d" translate="yes" xml:space="preserve">
          <source>You may also sort the array by the results of the given Closure:</source>
          <target state="translated">また、与えられたClosureの結果で配列をソートすることもできます。</target>
        </trans-unit>
        <trans-unit id="e3d15535a7a1afd312fd055e441d3e30c142ee51" translate="yes" xml:space="preserve">
          <source>You may also specify a custom key column for the returned Collection:</source>
          <target state="translated">返されたコレクションのカスタムキー列を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="1f721bade9de905343cef7c3734c96b0e99ebadb" translate="yes" xml:space="preserve">
          <source>You may also specify additional columns to update during the operation:</source>
          <target state="translated">また、操作中に更新する列を追加で指定することもできます。</target>
        </trans-unit>
        <trans-unit id="1ff0d0b0a46d1ed6d2a9e6a779ef0a2e6cda11a6" translate="yes" xml:space="preserve">
          <source>You may also specify additional query constraints by customizing the query using the &lt;code&gt;where&lt;/code&gt; method. For example, let's add a constraint that verifies the &lt;code&gt;account_id&lt;/code&gt; is &lt;code&gt;1&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; メソッドを使用してクエリをカスタマイズすることにより、追加のクエリ制約を指定することもできます。たとえば、 &lt;code&gt;account_id&lt;/code&gt; が &lt;code&gt;1&lt;/code&gt; であることを確認する制約を追加してみましょう。</target>
        </trans-unit>
        <trans-unit id="dfd1fa9c2ae1025a6bfe1c60f0a62dfa983c274d" translate="yes" xml:space="preserve">
          <source>You may also specify an operator and count to further customize the query:</source>
          <target state="translated">クエリをさらにカスタマイズするために、演算子やカウントを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="c36b61ce8bdc698f6ad92e9044637e381dffd1a7" translate="yes" xml:space="preserve">
          <source>You may also specify how you wish the resulting collection to be keyed:</source>
          <target state="translated">また、結果として得られるコレクションをどのようにキーにするかを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="7cb21c9402a1866e54fd195c4beb06693983dccd" translate="yes" xml:space="preserve">
          <source>You may also specify how you wish the resulting list to be keyed:</source>
          <target state="translated">また、結果のリストをどのようにキーにするかを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="56e98f3b45ceb74be2f3d36a9806637d9b842ced" translate="yes" xml:space="preserve">
          <source>You may also specify more advanced join clauses. To get started, pass a &lt;code&gt;Closure&lt;/code&gt; as the second argument into the &lt;code&gt;join&lt;/code&gt; method. The &lt;code&gt;Closure&lt;/code&gt; will receive a &lt;code&gt;JoinClause&lt;/code&gt; object which allows you to specify constraints on the &lt;code&gt;join&lt;/code&gt; clause:</source>
          <target state="translated">より高度な結合句を指定することもできます。開始するには、2番目の引数として &lt;code&gt;Closure&lt;/code&gt; を &lt;code&gt;join&lt;/code&gt; メソッドに渡します。 &lt;code&gt;Closure&lt;/code&gt; 受信します &lt;code&gt;JoinClause&lt;/code&gt; のあなたは上の制約を指定できるようにするオブジェクト &lt;code&gt;join&lt;/code&gt; 句を：</target>
        </trans-unit>
        <trans-unit id="0acad84fd59816d1a52ec52b799d04040da29066" translate="yes" xml:space="preserve">
          <source>You may also specify route names for controller actions:</source>
          <target state="translated">コントローラアクションのルート名を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="5b7e5a51c77da79cad0422679aff807a9740a7d6" translate="yes" xml:space="preserve">
          <source>You may also specify the connection or queue the Artisan command should be dispatched to:</source>
          <target state="translated">また、Artisanコマンドがディスパッチされるべき接続やキューを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="4252a4ea5b916a6cbeb11dc05c3d3ae411aa826a" translate="yes" xml:space="preserve">
          <source>You may also specify the desired action for the &quot;on delete&quot; and &quot;on update&quot; properties of the constraint:</source>
          <target state="translated">また、制約の &quot;on delete&quot; および &quot;on update&quot; プロパティに必要なアクションを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="65c892e92c00057f70a03a688fee9d4af1e577d4" translate="yes" xml:space="preserve">
          <source>You may also specify the number of items to return as an optional second argument. Note that providing this argument will return an array, even if only one item is desired:</source>
          <target state="translated">オプションの第二引数として、返す項目の数を指定することもできます。この引数を指定すると、1つの項目だけを返したい場合でも、配列を返すことに注意してください。</target>
        </trans-unit>
        <trans-unit id="89f131d0f3765d3d23d8d4d82f35df8036bf03aa" translate="yes" xml:space="preserve">
          <source>You may also specify which guard should be used to authenticate the given user by passing the guard name as the second argument to the &lt;code&gt;actingAs&lt;/code&gt; method:</source>
          <target state="translated">また、 &lt;code&gt;actingAs&lt;/code&gt; メソッドの2番目の引数としてガード名を渡すことで、特定のユーザーの認証に使用するガードを指定することもできます。</target>
        </trans-unit>
        <trans-unit id="fed4ace54ff9d4f2c052590dfa90a463eaa41d5f" translate="yes" xml:space="preserve">
          <source>You may also specify which queue connection the worker should utilize. The connection name passed to the &lt;code&gt;work&lt;/code&gt; command should correspond to one of the connections defined in your &lt;code&gt;config/queue.php&lt;/code&gt; configuration file:</source>
          <target state="translated">ワーカーが使用するキュー接続を指定することもできます。 &lt;code&gt;work&lt;/code&gt; コマンドに渡される接続名は、 &lt;code&gt;config/queue.php&lt;/code&gt; 構成ファイルで定義されている接続の1つに対応している必要があります。</target>
        </trans-unit>
        <trans-unit id="a816deb77a454292ed347997341872f5f734afee" translate="yes" xml:space="preserve">
          <source>You may also type-hint any &lt;a href=&quot;contracts&quot;&gt;Laravel contract&lt;/a&gt;. If the container can resolve it, you can type-hint it. Depending on your application, injecting your dependencies into your controller may provide better testability.</source>
          <target state="translated">&lt;a href=&quot;contracts&quot;&gt;Laravelコントラクトを&lt;/a&gt;タイプヒントすることもできます。コンテナがそれを解決できる場合は、タイプヒントを入力できます。アプリケーションによっては、依存関係をコントローラーに注入すると、テスト容易性が向上する場合があります。</target>
        </trans-unit>
        <trans-unit id="d19f3fa8c5d915a4092ed9adf14edf6b464f8078" translate="yes" xml:space="preserve">
          <source>You may also type-hint the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; class on a route Closure. The service container will automatically inject the incoming request into the Closure when it is executed:</source>
          <target state="translated">ルートクロージャの &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; クラスのタイプヒントを入力することもできます。サービスコンテナーは、実行時に着信リクエストをクロージャーに自動的に挿入します。</target>
        </trans-unit>
        <trans-unit id="c8109096430244635306866c65db1f8baebc3078" translate="yes" xml:space="preserve">
          <source>You may also update the default CLI version by issuing the following commands from within your Homestead virtual machine:</source>
          <target state="translated">また、Homestead仮想マシン内から以下のコマンドを発行することで、デフォルトのCLIバージョンを更新することができます。</target>
        </trans-unit>
        <trans-unit id="8611d28091bdebc648909cd499e9e9a7057ba646" translate="yes" xml:space="preserve">
          <source>You may also use Composer to keep your Envoy installation up to date. Issuing the &lt;code&gt;composer global update&lt;/code&gt; command will update all of your globally installed Composer packages:</source>
          <target state="translated">また、Composerを使用して、Envoyインストールを最新の状態に保つこともできます。 &lt;code&gt;composer global update&lt;/code&gt; コマンドを発行すると、グローバルにインストールされたすべてのComposerパッケージが更新されます。</target>
        </trans-unit>
        <trans-unit id="9a8ce478cf20a696aebf31b9858f1a77baf51dc5" translate="yes" xml:space="preserve">
          <source>You may also use HTTP Basic Authentication without setting a user identifier cookie in the session, which is particularly useful for API authentication. To do so, &lt;a href=&quot;middleware&quot;&gt;define a middleware&lt;/a&gt; that calls the &lt;code&gt;onceBasic&lt;/code&gt; method. If no response is returned by the &lt;code&gt;onceBasic&lt;/code&gt; method, the request may be passed further into the application:</source>
          <target state="translated">セッションでユーザー識別子Cookieを設定せずにHTTP基本認証を使用することもできます。これは、API認証に特に役立ちます。そのためには、 &lt;code&gt;onceBasic&lt;/code&gt; メソッドを呼び出す&lt;a href=&quot;middleware&quot;&gt;ミドルウェア&lt;/a&gt;を定義します。 &lt;code&gt;onceBasic&lt;/code&gt; メソッドによって応答が返されない場合、リクエストはさらにアプリケーションに渡される可能性があります。</target>
        </trans-unit>
        <trans-unit id="77e68f9d05d39027a0eb7c47471d6ffe5ecc0181" translate="yes" xml:space="preserve">
          <source>You may also use a mass-update query to mark all of the notifications as read without retrieving them from the database:</source>
          <target state="translated">mass-updateクエリを使用して、データベースから取得せずにすべての通知を既読としてマークすることもできます。</target>
        </trans-unit>
        <trans-unit id="f162de2d63fd2a865eb52c299a5666472f1361ef" translate="yes" xml:space="preserve">
          <source>You may also use accessors to return new, computed values from existing attributes:</source>
          <target state="translated">また、アクセサを使用して、既存の属性から計算された新しい値を返すこともできます。</target>
        </trans-unit>
        <trans-unit id="f36313a21c1f483b55a70343ebfce71f248c18b9" translate="yes" xml:space="preserve">
          <source>You may also use an image as your logo instead of an emoji:</source>
          <target state="translated">また、絵文字ではなく画像をロゴとして使用することもできます。</target>
        </trans-unit>
        <trans-unit id="45124a7edc45e0164696ba10f3043da3e85ccce4" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;@error&lt;/code&gt;&lt;a href=&quot;blade&quot;&gt;Blade&lt;/a&gt; directive to quickly check if validation error messages exist for a given attribute. Within an &lt;code&gt;@error&lt;/code&gt; directive, you may echo the &lt;code&gt;$message&lt;/code&gt; variable to display the error message:</source>
          <target state="translated">&lt;code&gt;@error&lt;/code&gt; &lt;a href=&quot;blade&quot;&gt;Blade&lt;/a&gt;ディレクティブを使用して、特定の属性に検証エラーメッセージが存在するかどうかをすばやく確認することもできます。 &lt;code&gt;@error&lt;/code&gt; ディレクティブ内で、 &lt;code&gt;$message&lt;/code&gt; 変数をエコーしてエラーメッセージを表示できます。</target>
        </trans-unit>
        <trans-unit id="f9038f5c9749faa0e40075d6327b0b044cbbdf76" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;charge&lt;/code&gt; method without an underlying customer or user:</source>
          <target state="translated">基礎となる顧客またはユーザーなしで &lt;code&gt;charge&lt;/code&gt; 方法を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="03112b8bccd3327fc4a2a52ca3222088604d58e8" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;sum&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, and other &lt;a href=&quot;queries#aggregates&quot;&gt;aggregate methods&lt;/a&gt; provided by the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt;. These methods return the appropriate scalar value instead of a full model instance:</source>
          <target state="translated">&lt;a href=&quot;queries&quot;&gt;クエリビルダー&lt;/a&gt;によって提供される &lt;code&gt;count&lt;/code&gt; 、 &lt;code&gt;sum&lt;/code&gt; 、 &lt;code&gt;max&lt;/code&gt; 、およびその他の&lt;a href=&quot;queries#aggregates&quot;&gt;集計メソッドを&lt;/a&gt;使用することもできます。これらのメソッドは、完全なモデルインスタンスの代わりに適切なスカラー値を返します。</target>
        </trans-unit>
        <trans-unit id="d6c9a7a87ae41fe32f0497345c9b2cf3c1742bab" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;create&lt;/code&gt; method to save a new model in a single line. The inserted model instance will be returned to you from the method. However, before doing so, you will need to specify either a &lt;code&gt;fillable&lt;/code&gt; or &lt;code&gt;guarded&lt;/code&gt; attribute on the model, as all Eloquent models protect against mass-assignment by default.</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; メソッドを使用して、新しいモデルを1行で保存することもできます。挿入されたモデルインスタンスは、メソッドから返されます。ただし、そうする前に、すべてのEloquentモデルがデフォルトで大量割り当てから保護するため、モデルに入力 &lt;code&gt;fillable&lt;/code&gt; 属性または &lt;code&gt;guarded&lt;/code&gt; された属性を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="3ead10c12028171e29bab68b37d5cc28151083c9" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;findOrNew&lt;/code&gt;, &lt;code&gt;firstOrNew&lt;/code&gt;, &lt;code&gt;firstOrCreate&lt;/code&gt; and &lt;code&gt;updateOrCreate&lt;/code&gt; methods to &lt;a href=&quot;eloquent#other-creation-methods&quot;&gt;create and update models on relationships&lt;/a&gt;.</source>
          <target state="translated">また、 &lt;code&gt;findOrNew&lt;/code&gt; 、 &lt;code&gt;firstOrNew&lt;/code&gt; 、 &lt;code&gt;firstOrCreate&lt;/code&gt; 、および &lt;code&gt;updateOrCreate&lt;/code&gt; メソッドを&lt;a href=&quot;eloquent#other-creation-methods&quot;&gt;使用して、関係のモデル&lt;/a&gt;を作成および更新することもできます。</target>
        </trans-unit>
        <trans-unit id="c77c0c28b171cc456bcfac78665fd0d6bf542b1a" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;flashOnly&lt;/code&gt; and &lt;code&gt;flashExcept&lt;/code&gt; methods to flash a subset of the request data to the session. These methods are useful for keeping sensitive information such as passwords out of the session:</source>
          <target state="translated">また、使用すること &lt;code&gt;flashOnly&lt;/code&gt; と &lt;code&gt;flashExcept&lt;/code&gt; セッションへの要求データのサブセットをフラッシュする方法を。これらのメソッドは、パスワードなどの機密情報をセッションから除外するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="7ca5fbdeb0e825502b9cb29868141d2bb2ce2b13" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;onGenericTrial&lt;/code&gt; method if you wish to know specifically that the user is within their &quot;generic&quot; trial period and has not created an actual subscription yet:</source>
          <target state="translated">ユーザーが「一般的な」試用期間内であり、実際のサブスクリプションをまだ作成していないことを明確に知りたい場合は、 &lt;code&gt;onGenericTrial&lt;/code&gt; メソッドを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="d59fa021b2dbdf98cd23028213845a313fdb7a3c" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;php artisan cache:table&lt;/code&gt; Artisan command to generate a migration with the proper schema.</source>
          <target state="translated">&lt;code&gt;php artisan cache:table&lt;/code&gt; Artisanコマンドを使用して、適切なスキーマで移行を生成することもできます。</target>
        </trans-unit>
        <trans-unit id="108373327106156d2164672768be98eacf8daee5" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;putFileAs&lt;/code&gt; method on the &lt;code&gt;Storage&lt;/code&gt; facade, which will perform the same file manipulation as the example above:</source>
          <target state="translated">&lt;code&gt;Storage&lt;/code&gt; ファサードで &lt;code&gt;putFileAs&lt;/code&gt; メソッドを使用することもできます。これにより、上記の例と同じファイル操作が実行されます。</target>
        </trans-unit>
        <trans-unit id="6e0bb9f753ce09c7fd071b2732e3a4fb881f40ba" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;restore&lt;/code&gt; method in a query to quickly restore multiple models. Again, like other &quot;mass&quot; operations, this will not fire any model events for the models that are restored:</source>
          <target state="translated">クエリで &lt;code&gt;restore&lt;/code&gt; メソッドを使用して、複数のモデルをすばやく復元することもできます。繰り返しになりますが、他の「大量」操作と同様に、これは復元されたモデルのモデルイベントを起動しません。</target>
        </trans-unit>
        <trans-unit id="593f11441ebb7aac62827517ebd3becf0a876179" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;searchable&lt;/code&gt; method on an Eloquent query to update a collection of models. If the models do not exist in your search index, they will be created:</source>
          <target state="translated">Eloquentクエリで &lt;code&gt;searchable&lt;/code&gt; メソッドを使用して、モデルのコレクションを更新することもできます。モデルが検索インデックスに存在しない場合は、作成されます。</target>
        </trans-unit>
        <trans-unit id="87da4070a625e519e48f6455bad39dc002c62459" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;simplePaginate&lt;/code&gt; method when paginating Eloquent models:</source>
          <target state="translated">Eloquentモデルにページ &lt;code&gt;simplePaginate&lt;/code&gt; ときに、simplePaginateメソッドを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="1bfb32ad235c444f9be739ca75aa369b65473ef5" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;sync&lt;/code&gt; method to construct many-to-many associations. The &lt;code&gt;sync&lt;/code&gt; method accepts an array of IDs to place on the intermediate table. Any IDs that are not in the given array will be removed from the intermediate table. So, after this operation is complete, only the IDs in the given array will exist in the intermediate table:</source>
          <target state="translated">また、 &lt;code&gt;sync&lt;/code&gt; メソッドを使用して、多対多の関連付けを構築することもできます。 &lt;code&gt;sync&lt;/code&gt; 方法は、中間テーブル上の場所へのIDの配列を受け付けます。指定された配列にないIDはすべて中間テーブルから削除されます。したがって、この操作が完了すると、指定された配列のIDのみが中間テーブルに存在します。</target>
        </trans-unit>
        <trans-unit id="1062aef0c7dde0db81ec6960bfb435d2030290c7" translate="yes" xml:space="preserve">
          <source>You may also use the &lt;code&gt;updateStripeSubscription&lt;/code&gt; method to update the Stripe subscription directly:</source>
          <target state="translated">&lt;code&gt;updateStripeSubscription&lt;/code&gt; メソッドを使用して、Stripeサブスクリプションを直接更新することもできます。</target>
        </trans-unit>
        <trans-unit id="7d542335ec86c8c4f0e4c1e0d8d62a1be0a67271" translate="yes" xml:space="preserve">
          <source>You may also use the global &lt;code&gt;session&lt;/code&gt; PHP function to retrieve and store data in the session. When the &lt;code&gt;session&lt;/code&gt; helper is called with a single, string argument, it will return the value of that session key. When the helper is called with an array of key / value pairs, those values will be stored in the session:</source>
          <target state="translated">また、グローバル &lt;code&gt;session&lt;/code&gt; PHP関数を使用して、セッションのデータを取得および保存することもできます。ときに &lt;code&gt;session&lt;/code&gt; ヘルパーは、単一の、文字列引数で呼び出され、そのセッションキーの値を返します。キー/値のペアの配列でヘルパーが呼び出されると、それらの値はセッションに格納されます：</target>
        </trans-unit>
        <trans-unit id="d569c306bc6c1ab2b3107f582ab6f120bba4a7f8" translate="yes" xml:space="preserve">
          <source>You may also validate each element of an array. For example, to validate that each e-mail in a given array input field is unique, you may do the following:</source>
          <target state="translated">配列の各要素を検証することもできます。例えば、与えられた配列の入力フィールドの各電子メールが一意であることを検証するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="3e2eee3a87fcdfc204518bc111be0ffc29e953f6" translate="yes" xml:space="preserve">
          <source>You may also wait for a named route's location:</source>
          <target state="translated">また、指定されたルートの場所を待つこともできます。</target>
        </trans-unit>
        <trans-unit id="8b65956d1d8bacc6ca0d5495d3b0f94ee0dbe3d4" translate="yes" xml:space="preserve">
          <source>You may also wait until the given selector is missing from the page:</source>
          <target state="translated">また、与えられたセレクターがページから消えてしまうまで待つこともできます。</target>
        </trans-unit>
        <trans-unit id="dd2846867dd13d0bef489a549710b92bbbea1156" translate="yes" xml:space="preserve">
          <source>You may also wait until the selector contains the given text:</source>
          <target state="translated">また、セレクタに与えられたテキストが含まれるまで待つこともできます。</target>
        </trans-unit>
        <trans-unit id="729c4537fe3ccd88b3771796155af9e8faa92e1f" translate="yes" xml:space="preserve">
          <source>You may also want to configure a few additional components of Laravel, such as:</source>
          <target state="translated">など、Laravelの追加コンポーネントをいくつか設定しておくとよいでしょう。</target>
        </trans-unit>
        <trans-unit id="df46bf721b96a7689f533afd170ae4a5e56be2fe" translate="yes" xml:space="preserve">
          <source>You may always pass a paginator instance to the &lt;code&gt;collection&lt;/code&gt; method of a resource or to a custom resource collection:</source>
          <target state="translated">リソースの &lt;code&gt;collection&lt;/code&gt; メソッドまたはカスタムリソースコレクションにいつでもpaginatorインスタンスを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="13d58c8c35a11a8954c71b6c9961b80c3108089f" translate="yes" xml:space="preserve">
          <source>You may append to the query string of pagination links using the &lt;code&gt;appends&lt;/code&gt; method. For example, to append &lt;code&gt;sort=votes&lt;/code&gt; to each pagination link, you should make the following call to &lt;code&gt;appends&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;appends&lt;/code&gt; メソッドを使用して、ページネーションリンクのクエリ文字列に追加できます。たとえば、各ページネーションリンクに &lt;code&gt;sort=votes&lt;/code&gt; を &lt;code&gt;appends&lt;/code&gt; するには、appendsに対して次の呼び出しを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="a32f89ffb7d0e7afabafd62e09aac722d8559a08" translate="yes" xml:space="preserve">
          <source>You may assert on the state of the Vue component like so:</source>
          <target state="translated">このようにVueコンポーネントの状態をアサートすることができます。</target>
        </trans-unit>
        <trans-unit id="b50f6f90f99812eaa72282348f64d359918d4294" translate="yes" xml:space="preserve">
          <source>You may assign default values to options by specifying the default value after the option name. If no option value is passed by the user, the default value will be used:</source>
          <target state="translated">オプシ ョ ン名の後にデフ ォル ト 値を指定する こ と で、 オプシ ョ ンにデフ ォル ト 値を代入する こ と がで き ます。ユーザーがオプションの値を渡さなかった場合は、デフォルト値が使用されます。</target>
        </trans-unit>
        <trans-unit id="bf8e5ac3dbd4c63108ec70c30fa2eafff1ef5574" translate="yes" xml:space="preserve">
          <source>You may assign descriptions to input arguments and options by separating the parameter from the description using a colon. If you need a little extra room to define your command, feel free to spread the definition across multiple lines:</source>
          <target state="translated">コロンを使ってパラメータと説明を区切ることで、入力引数やオプションに説明を割り当てることができます。コマンドを定義するために少し余裕が必要な場合は、定義を複数行に渡って自由に広げることができます。</target>
        </trans-unit>
        <trans-unit id="68cc9eb49aad4056ed6cda090a72d07975ef364a" translate="yes" xml:space="preserve">
          <source>You may assign middleware to a subset of controller actions; however, it may indicate your controller is growing too large. Instead, consider breaking your controller into multiple, smaller controllers.</source>
          <target state="translated">コントローラのアクションのサブセットにミドルウェアを割り当てることができますが、コントローラが大きくなりすぎていることを示している可能性があります。その代わりに、コントローラを複数の小さなコントローラに分割することを検討してください。</target>
        </trans-unit>
        <trans-unit id="f2b10a544d33d7593d52b84925deaa1160b49d2b" translate="yes" xml:space="preserve">
          <source>You may attach a cookie to an outgoing &lt;code&gt;Illuminate\Http\Response&lt;/code&gt; instance using the &lt;code&gt;cookie&lt;/code&gt; method. You should pass the name, value, and number of minutes the cookie should be considered valid to this method:</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; メソッドを使用して、発信 &lt;code&gt;Illuminate\Http\Response&lt;/code&gt; インスタンスにcookieを添付できます。名前、値、およびCookieが有効と見なされる分数をこのメソッドに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="1346639be658f9c92ab8f264fe1abaad3a590cb4" translate="yes" xml:space="preserve">
          <source>You may attach a view composer to multiple views at once by passing an array of views as the first argument to the &lt;code&gt;composer&lt;/code&gt; method:</source>
          <target state="translated">ビューの配列を &lt;code&gt;composer&lt;/code&gt; メソッドの最初の引数として渡すことにより、ビューコンポーザーを一度に複数のビューにアタッチできます。</target>
        </trans-unit>
        <trans-unit id="a7a656e3cbf47cd22265ae5e040e67873d192e05" translate="yes" xml:space="preserve">
          <source>You may attach relationships to models in your factory definitions. For example, if you would like to create a new &lt;code&gt;User&lt;/code&gt; instance when creating a &lt;code&gt;Post&lt;/code&gt;, you may do the following:</source>
          <target state="translated">ファクトリ定義のモデルに関係を添付できます。たとえば、 &lt;code&gt;Post&lt;/code&gt; 作成するときに新しい &lt;code&gt;User&lt;/code&gt; インスタンスを作成する場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="c3d3e6393e5b09216ad00972cb9ae80da7839377" translate="yes" xml:space="preserve">
          <source>You may authorize multiple actions at a time with the &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;none&lt;/code&gt; methods:</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; または &lt;code&gt;none&lt;/code&gt; メソッドを使用して、一度に複数のアクションを許可できます。</target>
        </trans-unit>
        <trans-unit id="08fba1e60b59f3fc99a9f7f869c99a898219c1d0" translate="yes" xml:space="preserve">
          <source>You may be wondering if this will cause your outermost resource to be wrapped in two &lt;code&gt;data&lt;/code&gt; keys. Don't worry, Laravel will never let your resources be accidentally double-wrapped, so you don't have to be concerned about the nesting level of the resource collection you are transforming:</source>
          <target state="translated">これにより、最も外側のリソースが2つの &lt;code&gt;data&lt;/code&gt; キーにラップされるかどうか疑問に思われるかもしれません。心配しないでください。Laravelが誤ってリソースを二重にラップすることは決してないので、変換するリソースコレクションのネストレベルについて心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="2c0e3712672d6d1a4420790187f9f28d966f9353" translate="yes" xml:space="preserve">
          <source>You may begin searching a model using the &lt;code&gt;search&lt;/code&gt; method. The search method accepts a single string that will be used to search your models. You should then chain the &lt;code&gt;get&lt;/code&gt; method onto the search query to retrieve the Eloquent models that match the given search query:</source>
          <target state="translated">&lt;code&gt;search&lt;/code&gt; メソッドを使用してモデルの検索を開始できます。searchメソッドは、モデルの検索に使用される単一の文字列を受け入れます。次に、 &lt;code&gt;get&lt;/code&gt; メソッドを検索クエリにチェーンして、指定された検索クエリに一致するEloquentモデルを取得する必要があります。</target>
        </trans-unit>
        <trans-unit id="eb6b2979219e592c5af610cd246a1ed0eca6b313" translate="yes" xml:space="preserve">
          <source>You may call &lt;code&gt;paginate&lt;/code&gt; after setting other constraints on the query, such as &lt;code&gt;where&lt;/code&gt; clauses:</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 句など、クエリに他の制約を設定した後、 &lt;code&gt;paginate&lt;/code&gt; を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="c34ce65138f4a835aec93e497c122633acbd6d50" translate="yes" xml:space="preserve">
          <source>You may call the &lt;code&gt;input&lt;/code&gt; method without any arguments in order to retrieve all of the input values as an associative array:</source>
          <target state="translated">すべての入力値を連想配列として取得するために、引数なしで &lt;code&gt;input&lt;/code&gt; メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="ff5c8c9e82dacd4dd0db05ed2f28e5064506116c" translate="yes" xml:space="preserve">
          <source>You may call the &lt;code&gt;query&lt;/code&gt; method without any arguments in order to retrieve all of the query string values as an associative array:</source>
          <target state="translated">すべてのクエリ文字列値を連想配列として取得するために、引数なしで &lt;code&gt;query&lt;/code&gt; メソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="9830467cf2127a04c384171b6fbd2c68d387ec47" translate="yes" xml:space="preserve">
          <source>You may call the &lt;code&gt;trans&lt;/code&gt; helper from your &lt;code&gt;message&lt;/code&gt; method if you would like to return an error message from your translation files:</source>
          <target state="translated">翻訳ファイルからエラーメッセージを返したい場合は、 &lt;code&gt;message&lt;/code&gt; メソッドから &lt;code&gt;trans&lt;/code&gt; ヘルパーを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="d72566071d0425c5de424979cb9d437a73448166" translate="yes" xml:space="preserve">
          <source>You may chain the &lt;code&gt;onConnection&lt;/code&gt; and &lt;code&gt;onQueue&lt;/code&gt; methods to specify the connection and the queue for a job:</source>
          <target state="translated">&lt;code&gt;onConnection&lt;/code&gt; メソッドと &lt;code&gt;onQueue&lt;/code&gt; メソッドをチェーンして、ジョブの接続とキューを指定できます。</target>
        </trans-unit>
        <trans-unit id="cb108fde8e3c82c24a14f6ec7637616a9a1813cd" translate="yes" xml:space="preserve">
          <source>You may chain where constraints together as well as add &lt;code&gt;or&lt;/code&gt; clauses to the query. The &lt;code&gt;orWhere&lt;/code&gt; method accepts the same arguments as the &lt;code&gt;where&lt;/code&gt; method:</source>
          <target state="translated">where制約を一緒に連鎖させ &lt;code&gt;or&lt;/code&gt; 、クエリにor句を追加したりできます。 &lt;code&gt;orWhere&lt;/code&gt; の方法は、同じ引数を受け付け &lt;code&gt;where&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="11459a87049d4fa84759f66f232abcd727108ef5" translate="yes" xml:space="preserve">
          <source>You may check for the existence of a table or column using the &lt;code&gt;hasTable&lt;/code&gt; and &lt;code&gt;hasColumn&lt;/code&gt; methods:</source>
          <target state="translated">あなたは使用して、テーブルまたは列の存在を確認することが &lt;code&gt;hasTable&lt;/code&gt; と &lt;code&gt;hasColumn&lt;/code&gt; 方法を：</target>
        </trans-unit>
        <trans-unit id="8cc6f50f09a11c669bfba6ee89325d933f0326aa" translate="yes" xml:space="preserve">
          <source>You may check if a section has content using the &lt;code&gt;@hasSection&lt;/code&gt; directive:</source>
          <target state="translated">&lt;code&gt;@hasSection&lt;/code&gt; ディレクティブを使用して、セクションにコンテンツがあるかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="0b3064854ee97178d250e21bc1c4351a916193f6" translate="yes" xml:space="preserve">
          <source>You may check if the application is running in the production environment using the &lt;code&gt;@production&lt;/code&gt; directive:</source>
          <target state="translated">&lt;code&gt;@production&lt;/code&gt; ディレクティブを使用して、アプリケーションが本番環境で実行されているかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="586dc3f304bf7d524e95fb09c15287b3f4bba611" translate="yes" xml:space="preserve">
          <source>You may check the current status of the Horizon process using the &lt;code&gt;horizon:status&lt;/code&gt; Artisan command:</source>
          <target state="translated">&lt;code&gt;horizon:status&lt;/code&gt; Artisanコマンドを使用して、Horizo​​nプロセスの現在のステータスを確認できます。</target>
        </trans-unit>
        <trans-unit id="f0c005fd247f1805e32406c84b52a6c6549cd022" translate="yes" xml:space="preserve">
          <source>You may choose to define how many trial days your plan's receive in the Paddle dashboard or always pass them explicitly using Cashier. If you choose to define your plan's trial days in Paddle you should be aware that new subscriptions, including new subscriptions for a customer that had a subscription in the past, will always receive a trial period unless you explicitly call the &lt;code&gt;trialDays(0)&lt;/code&gt; method.</source>
          <target state="translated">プランが受け取るトライアル日数をパドルダッシュボードで定義するか、常にキャッシャーを使用して明示的に渡すかを選択できます。Paddleでプランの試用日を定義することを選択した場合、過去にサブスクリプションを持っていた顧客の新しいサブスクリプションを含む新しいサブスクリプションは、 &lt;code&gt;trialDays(0)&lt;/code&gt; メソッドを明示的に呼び出さない限り、常に試用期間を受け取ることに注意してください。</target>
        </trans-unit>
        <trans-unit id="66ae39e116234493eba6a6611833b081f0e4e5b6" translate="yes" xml:space="preserve">
          <source>You may choose to define how many trial days your plan's receive in the Stripe dashboard or always pass them explicitly using Cashier. If you choose to define your plan's trial days in Stripe you should be aware that new subscriptions, including new subscriptions for a customer that had a subscription in the past, will always receive a trial period unless you explicitly call the &lt;code&gt;trialDays(0)&lt;/code&gt; method.</source>
          <target state="translated">プランが受け取るトライアル日数をStripeダッシュボードで定義するか、常にキャッシャーを使用して明示的に渡すかを選択できます。Stripeでプランの試用日を定義することを選択した場合、過去にサブスクリプションを持っていた顧客の新しいサブスクリプションを含む新しいサブスクリプションは、明示的に &lt;code&gt;trialDays(0)&lt;/code&gt; メソッドを呼び出さない限り、常に試用期間を受け取ることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a16f23e82debe9d4a4f0ef8d691d40d455f1b0c6" translate="yes" xml:space="preserve">
          <source>You may clear the entire cache using the &lt;code&gt;flush&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;flush&lt;/code&gt; メソッドを使用して、キャッシュ全体をクリアできます。</target>
        </trans-unit>
        <trans-unit id="d5d2a089f46db747c6d62aa0c99d5bbe4d93d09d" translate="yes" xml:space="preserve">
          <source>You may clear the value of an input using the &lt;code&gt;clear&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;clear&lt;/code&gt; メソッドを使用して、入力の値をクリアできます。</target>
        </trans-unit>
        <trans-unit id="89da36ac1c4d05a57a7eed88c3a9b8f3f4cb9013" translate="yes" xml:space="preserve">
          <source>You may combine loops and includes into one line with Blade's &lt;code&gt;@each&lt;/code&gt; directive:</source>
          <target state="translated">ループとインクルードを組み合わせて、Bladeの &lt;code&gt;@each&lt;/code&gt; ディレクティブで1行にすることができます。</target>
        </trans-unit>
        <trans-unit id="874320f032af8bf0f7059fff2b633244ba77461a" translate="yes" xml:space="preserve">
          <source>You may combine these methods with other clauses:</source>
          <target state="translated">これらの方法を他の句と組み合わせてもよい。</target>
        </trans-unit>
        <trans-unit id="350bcc730417f7a550c7f85295129eff7c9aa400" translate="yes" xml:space="preserve">
          <source>You may configure a &quot;fallback language&quot;, which will be used when the active language does not contain a given translation string. Like the default language, the fallback language is also configured in the &lt;code&gt;config/app.php&lt;/code&gt; configuration file:</source>
          <target state="translated">「フォールバック言語」を設定できます。これは、アクティブな言語に特定の翻訳文字列が含まれていない場合に使用されます。デフォルト言語と同様に、フォールバック言語も &lt;code&gt;config/app.php&lt;/code&gt; 構成ファイルで構成されます。</target>
        </trans-unit>
        <trans-unit id="c4ee402a97d2150690b0eeadb2f224fd62f388a1" translate="yes" xml:space="preserve">
          <source>You may configure additional symbolic links in your &lt;code&gt;filesystems&lt;/code&gt; configuration file. Each of the configured links will be created when you run the &lt;code&gt;storage:link&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;filesystems&lt;/code&gt; 構成ファイルで追加のシンボリックリンクを構成できます。 &lt;code&gt;storage:link&lt;/code&gt; コマンドを実行すると、構成された各リンクが作成されます。</target>
        </trans-unit>
        <trans-unit id="63f3607394b393cf67bace9a6cfec975870a88e2" translate="yes" xml:space="preserve">
          <source>You may configure as many disks as you like, and may even have multiple disks that use the same driver.</source>
          <target state="translated">好きなだけディスクを設定することができ、同じドライバを使用しているディスクが複数ある場合もあります。</target>
        </trans-unit>
        <trans-unit id="390a122619e2cfeaba2e04d92e7cb7db461375aa" translate="yes" xml:space="preserve">
          <source>You may configure how many seconds are considered a &quot;long wait&quot; within your &lt;code&gt;config/horizon.php&lt;/code&gt; configuration file. The &lt;code&gt;waits&lt;/code&gt; configuration option within this file allows you to control the long wait threshold for each connection / queue combination:</source>
          <target state="translated">&lt;code&gt;config/horizon.php&lt;/code&gt; 設定ファイルで、「長い待機」と見なされる秒数を設定できます。このファイル内の &lt;code&gt;waits&lt;/code&gt; 構成オプションを使用すると、接続/キューの組み合わせごとに長時間待機しきい値を制御できます。</target>
        </trans-unit>
        <trans-unit id="ac2f5caa359475b4fe38b6b188d50e2278051fa0" translate="yes" xml:space="preserve">
          <source>You may constrain the format of your route parameters using the &lt;code&gt;where&lt;/code&gt; method on a route instance. The &lt;code&gt;where&lt;/code&gt; method accepts the name of the parameter and a regular expression defining how the parameter should be constrained:</source>
          <target state="translated">ルートインスタンスの &lt;code&gt;where&lt;/code&gt; メソッドを使用して、ルートパラメータの形式を制約できます。 &lt;code&gt;where&lt;/code&gt; メソッドは、パラメータとパラメータを制約する方法を定義する正規表現の名前を受け付けます。</target>
        </trans-unit>
        <trans-unit id="585291480002c99785331201937b3b6556a07812" translate="yes" xml:space="preserve">
          <source>You may construct &lt;code&gt;if&lt;/code&gt; statements using the &lt;code&gt;@if&lt;/code&gt;, &lt;code&gt;@elseif&lt;/code&gt;, &lt;code&gt;@else&lt;/code&gt;, and &lt;code&gt;@endif&lt;/code&gt; directives. These directives function identically to their PHP counterparts:</source>
          <target state="translated">&lt;code&gt;@if&lt;/code&gt; 、 &lt;code&gt;@elseif&lt;/code&gt; 、 &lt;code&gt;@else&lt;/code&gt; 、および &lt;code&gt;@endif&lt;/code&gt; ディレクティブを使用して &lt;code&gt;if&lt;/code&gt; ステートメントを作成できます。これらのディレクティブは、対応するPHPと同じように機能します。</target>
        </trans-unit>
        <trans-unit id="d97d9c059f29fbc7edad63c1252be9d0db731fa6" translate="yes" xml:space="preserve">
          <source>You may continue to define additional methods on the policy as needed for the various actions it authorizes. For example, you might define &lt;code&gt;view&lt;/code&gt; or &lt;code&gt;delete&lt;/code&gt; methods to authorize various &lt;code&gt;Post&lt;/code&gt; actions, but remember you are free to give your policy methods any name you like.</source>
          <target state="translated">許可するさまざまなアクションの必要に応じて、ポリシーに追加のメソッドを定義し続けることができます。たとえば、さまざまな &lt;code&gt;Post&lt;/code&gt; アクションを承認 &lt;code&gt;delete&lt;/code&gt; ための &lt;code&gt;view&lt;/code&gt; または削除メソッドを定義する場合がありますが、ポリシーメソッドには好きな名前を自由に付けることができます。</target>
        </trans-unit>
        <trans-unit id="96115908070ae873b4a5906c27d4933aeb0ae6c1" translate="yes" xml:space="preserve">
          <source>You may control how many additional links are displayed on each side of the paginator's URL &quot;window&quot;. By default, three links are displayed on each side of the primary paginator links. However, you may control this number using the &lt;code&gt;onEachSide&lt;/code&gt; method:</source>
          <target state="translated">ページ編集者のURL「ウィンドウ」の両側に表示される追加リンクの数を制御できます。デフォルトでは、主なページネーションリンクの両側に3つのリンクが表示されます。ただし、 &lt;code&gt;onEachSide&lt;/code&gt; メソッドを使用してこの数を制御できます。</target>
        </trans-unit>
        <trans-unit id="560aadf789108ce756f52881410a68af92edfd33" translate="yes" xml:space="preserve">
          <source>You may create a collection of many models using the &lt;code&gt;count&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; メソッドを使用して、多くのモデルのコレクションを作成できます。</target>
        </trans-unit>
        <trans-unit id="07beda226ff607db1b118e1e7ae5735d2b4dd4f4" translate="yes" xml:space="preserve">
          <source>You may create an unsaved copy of a model instance using the &lt;code&gt;replicate&lt;/code&gt; method. This is particularly useful when you have model instances that share many of the same attributes:</source>
          <target state="translated">&lt;code&gt;replicate&lt;/code&gt; メソッドを使用して、モデルインスタンスの保存されていないコピーを作成できます。これは、同じ属性の多くを共有するモデルインスタンスがある場合に特に役立ちます。</target>
        </trans-unit>
        <trans-unit id="e1928a6ceb9d5db103764bfb2fa603e82bb5e877" translate="yes" xml:space="preserve">
          <source>You may customize the default maintenance mode template by defining your own template at &lt;code&gt;resources/views/errors/503.blade.php&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;resources/views/errors/503.blade.php&lt;/code&gt; で独自のテンプレートを定義することにより、デフォルトのメンテナンスモードテンプレートをカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="18eee00ba15be2c92e32201b5c32b58bb4098148" translate="yes" xml:space="preserve">
          <source>You may customize the default serialization format by overriding the &lt;code&gt;serializeDate&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;serializeDate&lt;/code&gt; メソッドをオーバーライドすることにより、デフォルトのシリアル化形式をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="25a1eb9b3703a4100a06de3b09d1ead9f0d53d51" translate="yes" xml:space="preserve">
          <source>You may customize the error messages used by the form request by overriding the &lt;code&gt;messages&lt;/code&gt; method. This method should return an array of attribute / rule pairs and their corresponding error messages:</source>
          <target state="translated">&lt;code&gt;messages&lt;/code&gt; メソッドをオーバーライドすることにより、フォーム要求で使用されるエラーメッセージをカスタマイズできます。このメソッドは、属性/ルールのペアとそれに対応するエラーメッセージの配列を返します。</target>
        </trans-unit>
        <trans-unit id="35736895873da5cd547dc4ac4cf21cd7b3094fc5" translate="yes" xml:space="preserve">
          <source>You may customize the password reset link URL using the &lt;code&gt;createUrlUsing&lt;/code&gt; method provided by the &lt;code&gt;ResetPassword&lt;/code&gt; notification class. This method accepts a Closure which receives the user instance that is receiving the notification as well as the password reset link token. Typically, you should call this method from a service provider's &lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;ResetPassword&lt;/code&gt; 通知クラスによって提供される &lt;code&gt;createUrlUsing&lt;/code&gt; メソッドを使用して、パスワードリセットリンクURLをカスタマイズできます。このメソッドは、通知を受信して​​いるユーザーインスタンスとパスワードリセットリンクトークンを受信するクロージャを受け入れます。通常、このメソッドはサービスプロバイダーの &lt;code&gt;boot&lt;/code&gt; メソッドから呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="340620b1ee224f3b636b090ff8159cd3e5bf7d8c" translate="yes" xml:space="preserve">
          <source>You may customize the serialization format of individual Eloquent date attributes by specifying the date format in the &lt;a href=&quot;eloquent-mutators#attribute-casting&quot;&gt;cast declaration&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;eloquent-mutators#attribute-casting&quot;&gt;キャスト宣言&lt;/a&gt;で日付形式を指定することにより、個々のEloquent日付属性のシリアル化形式をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="f215a353cef095a7f1cf39c6696c06c1b1a0f531" translate="yes" xml:space="preserve">
          <source>You may customize your queue worker even further by only processing particular queues for a given connection. For example, if all of your emails are processed in an &lt;code&gt;emails&lt;/code&gt; queue on your &lt;code&gt;redis&lt;/code&gt; queue connection, you may issue the following command to start a worker that only processes only that queue:</source>
          <target state="translated">特定の接続の特定のキューのみを処理することにより、キューワーカーをさらにカスタマイズできます。たとえば、すべてのメールが &lt;code&gt;redis&lt;/code&gt; キュー接続の &lt;code&gt;emails&lt;/code&gt; キューで処理される場合、次のコマンドを発行して、そのキューのみを処理するワーカーを起動できます。</target>
        </trans-unit>
        <trans-unit id="3a04c642b485058f3da9217af5c2d8bbf8262f05" translate="yes" xml:space="preserve">
          <source>You may customize your queue worker even further by only processing particular queues for a given connection. For example, if all of your emails are processed in an &lt;code&gt;emails&lt;/code&gt; queue on your &lt;code&gt;redis&lt;/code&gt; queue connection, you may issue the following command to start a worker that only processes that queue:</source>
          <target state="translated">特定の接続の特定のキューのみを処理することで、キューワーカーをさらにカスタマイズできます。たとえば、すべてのメールが &lt;code&gt;redis&lt;/code&gt; キュー接続の &lt;code&gt;emails&lt;/code&gt; キューで処理される場合、次のコマンドを発行して、そのキューのみを処理するワーカーを起動できます。</target>
        </trans-unit>
        <trans-unit id="9a7bcb036c76f6b6dc9aee6b1f056b8b4cd1c452" translate="yes" xml:space="preserve">
          <source>You may decrypt values using the &lt;code&gt;decrypt&lt;/code&gt; helper. If the value can not be properly decrypted, such as when the MAC is invalid, an &lt;code&gt;Illuminate\Contracts\Encryption\DecryptException&lt;/code&gt; will be thrown:</source>
          <target state="translated">&lt;code&gt;decrypt&lt;/code&gt; ヘルパーを使用して値を解読できます。MACが無効な場合など、値を適切に復号化できない場合、 &lt;code&gt;Illuminate\Contracts\Encryption\DecryptException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="5d14b650d488966025245d0f5701b986978a3650" translate="yes" xml:space="preserve">
          <source>You may decrypt values using the &lt;code&gt;decryptString&lt;/code&gt; method of the &lt;code&gt;Crypt&lt;/code&gt; facade. If the value can not be properly decrypted, such as when the MAC is invalid, an &lt;code&gt;Illuminate\Contracts\Encryption\DecryptException&lt;/code&gt; will be thrown:</source>
          <target state="translated">&lt;code&gt;Crypt&lt;/code&gt; ファサードの &lt;code&gt;decryptString&lt;/code&gt; メソッドを使用して値を復号化できます。MACが無効な場合など、値を適切に復号化できない場合、 &lt;code&gt;Illuminate\Contracts\Encryption\DecryptException&lt;/code&gt; がスローされます。</target>
        </trans-unit>
        <trans-unit id="b85e27fa55a0a6eed6aa0f7d2676725c3c182013" translate="yes" xml:space="preserve">
          <source>You may define a &lt;code&gt;failed&lt;/code&gt; method directly on your job class, allowing you to perform job specific clean-up when a failure occurs. This is the perfect location to send an alert to your users or revert any actions performed by the job. The &lt;code&gt;Exception&lt;/code&gt; that caused the job to fail will be passed to the &lt;code&gt;failed&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;failed&lt;/code&gt; メソッドをジョブクラスに直接定義して、障害が発生したときにジョブ固有のクリーンアップを実行できるようにすることができます。これは、ユーザーにアラートを送信したり、ジョブによって実行されたアクションを元に戻したりするのに最適な場所です。 &lt;code&gt;Exception&lt;/code&gt; ジョブが失敗する原因に渡されます &lt;code&gt;failed&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="5202edd2d927c83f1e01a18355d27a7abe1905bb" translate="yes" xml:space="preserve">
          <source>You may define a &lt;code&gt;failed&lt;/code&gt; method directly on your job class, allowing you to perform job specific clean-up when a failure occurs. This is the perfect location to send an alert to your users or revert any actions performed by the job. The &lt;code&gt;Throwable&lt;/code&gt; exception that caused the job to fail will be passed to the &lt;code&gt;failed&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;failed&lt;/code&gt; メソッドをジョブクラスに直接定義して、失敗が発生したときにジョブ固有のクリーンアップを実行できるようにすることができます。これは、ユーザーにアラートを送信したり、ジョブによって実行されたアクションを元に戻したりするのに最適な場所です。 &lt;code&gt;Throwable&lt;/code&gt; に渡されますが失敗するジョブを原因となった例外 &lt;code&gt;failed&lt;/code&gt; 方法：</target>
        </trans-unit>
        <trans-unit id="ba78328c0061d2e504cb3d0cdd8a695cccaa9af5" translate="yes" xml:space="preserve">
          <source>You may define all of your scheduled tasks in the &lt;code&gt;schedule&lt;/code&gt; method of the &lt;code&gt;App\Console\Kernel&lt;/code&gt; class. To get started, let's look at an example of scheduling a task. In this example, we will schedule a &lt;code&gt;Closure&lt;/code&gt; to be called every day at midnight. Within the &lt;code&gt;Closure&lt;/code&gt; we will execute a database query to clear a table:</source>
          <target state="translated">&lt;code&gt;App\Console\Kernel&lt;/code&gt; クラスの &lt;code&gt;schedule&lt;/code&gt; メソッドで、スケジュールされたすべてのタスクを定義できます。はじめに、タスクのスケジュールの例を見てみましょう。この例では、 &lt;code&gt;Closure&lt;/code&gt; が毎日真夜中に呼び出されるようにスケジュールします。 &lt;code&gt;Closure&lt;/code&gt; 内で、データベースクエリを実行してテーブルをクリアします。</target>
        </trans-unit>
        <trans-unit id="9161b9935978515eac4310f4963dd5d158591e55" translate="yes" xml:space="preserve">
          <source>You may define as many route parameters as required by your route:</source>
          <target state="translated">ルートによって必要な数だけルートパラメータを定義することができます。</target>
        </trans-unit>
        <trans-unit id="bd6beee691752225fca9ed5a84d2f6a0c6bf2edd" translate="yes" xml:space="preserve">
          <source>You may define the content of the named slot using the &lt;code&gt;x-slot&lt;/code&gt; tag. Any content not within an &lt;code&gt;x-slot&lt;/code&gt; tag will be passed to the component in the &lt;code&gt;$slot&lt;/code&gt; variable:</source>
          <target state="translated">&lt;code&gt;x-slot&lt;/code&gt; タグを使用して、名前付きスロットのコンテンツを定義できます。 &lt;code&gt;x-slot&lt;/code&gt; タグ内にないコンテンツは、 &lt;code&gt;$slot&lt;/code&gt; 変数のコンポーネントに渡されます。</target>
        </trans-unit>
        <trans-unit id="f4543e5205fe028df72d57fa30c3f893714eb3c1" translate="yes" xml:space="preserve">
          <source>You may define your API's scopes using the &lt;code&gt;Passport::tokensCan&lt;/code&gt; method in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AuthServiceProvider&lt;/code&gt;. The &lt;code&gt;tokensCan&lt;/code&gt; method accepts an array of scope names and scope descriptions. The scope description may be anything you wish and will be displayed to users on the authorization approval screen:</source>
          <target state="translated">あなたは使用して、APIのスコープを定義することができ &lt;code&gt;Passport::tokensCan&lt;/code&gt; 方法を &lt;code&gt;boot&lt;/code&gt; あなたの方法 &lt;code&gt;AuthServiceProvider&lt;/code&gt; 。 &lt;code&gt;tokensCan&lt;/code&gt; 方法は、スコープ名およびスコープ記述の配列を受け付けます。スコープの説明は自由に設定でき、承認の承認画面でユーザーに表示されます。</target>
        </trans-unit>
        <trans-unit id="ed5a05c3c6f55ddeaee204c893ac6583a9446a32" translate="yes" xml:space="preserve">
          <source>You may define your own authentication guards using the &lt;code&gt;extend&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. You should place this call to &lt;code&gt;extend&lt;/code&gt; within a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;. Since Laravel already ships with an &lt;code&gt;AuthServiceProvider&lt;/code&gt;, we can place the code in that provider:</source>
          <target state="translated">&lt;code&gt;Auth&lt;/code&gt; ファサードの &lt;code&gt;extend&lt;/code&gt; メソッドを使用して、独自の認証ガードを定義できます。&lt;a href=&quot;providers&quot;&gt;サービスプロバイダー&lt;/a&gt;内で &lt;code&gt;extend&lt;/code&gt; は、この呼び出しを行う必要があります。Laravelにはすでに &lt;code&gt;AuthServiceProvider&lt;/code&gt; が付属しているため、コードをそのプロバイダーに配置できます。</target>
        </trans-unit>
        <trans-unit id="9e3a7c5dee94d7640efae5697d03dbe0e7448a67" translate="yes" xml:space="preserve">
          <source>You may determine if a file is present on the request using the &lt;code&gt;hasFile&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;hasFile&lt;/code&gt; メソッドを使用して、リクエストにファイルが存在するかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="9aa725e1173c686ae4e51a612c3672d9ba92c3f1" translate="yes" xml:space="preserve">
          <source>You may determine if a given scope has been defined using the &lt;code&gt;hasScope&lt;/code&gt; method:</source>
          <target state="translated">特定のスコープが &lt;code&gt;hasScope&lt;/code&gt; メソッドを使用して定義されているかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="9720124140762a971dc4384f568ee254150df438" translate="yes" xml:space="preserve">
          <source>You may determine if a user has cancelled their subscription but are still on their &quot;grace period&quot; using the &lt;code&gt;onGracePeriod&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;onGracePeriod&lt;/code&gt; メソッドを使用して、ユーザーがサブスクリプションをキャンセルしたが、まだ「猶予期間」にあるかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="8f23945815f710c1d23992cacd5d8524f8fbc802" translate="yes" xml:space="preserve">
          <source>You may determine if a user has paused their subscription but are still on their &quot;grace period&quot; using the &lt;code&gt;onPausedGracePeriod&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;onPausedGracePeriod&lt;/code&gt; メソッドを使用して、ユーザーがサブスクリプションを一時停止したが、まだ「猶予期間」にあるかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="b2de95fa7492f158645af105564d7b2058624863" translate="yes" xml:space="preserve">
          <source>You may determine if the user is within their trial period using either the &lt;code&gt;onTrial&lt;/code&gt; method of the user instance or the &lt;code&gt;onTrial&lt;/code&gt; method of the subscription instance. The two examples below have identical behavior:</source>
          <target state="translated">ユーザーインスタンスの &lt;code&gt;onTrial&lt;/code&gt; メソッドまたはサブスクリプションインスタンスの &lt;code&gt;onTrial&lt;/code&gt; メソッドのいずれかを使用して、ユーザーが試用期間内にあるかどうかを判断できます。以下の2つの例の動作は同じです。</target>
        </trans-unit>
        <trans-unit id="e975bfac238f74ee4f6e59e2ebb57baf801164a5" translate="yes" xml:space="preserve">
          <source>You may determine if the user is within their trial period using either the &lt;code&gt;onTrial&lt;/code&gt; method of the user instance, or the &lt;code&gt;onTrial&lt;/code&gt; method of the subscription instance. The two examples below are identical:</source>
          <target state="translated">ユーザーがいずれかを使用して自分の試用期間内である場合は、決定することができる &lt;code&gt;onTrial&lt;/code&gt; ユーザーインスタンスの方法、または &lt;code&gt;onTrial&lt;/code&gt; サブスクリプション・インスタンスのメソッドを。以下の2つの例は同じです。</target>
        </trans-unit>
        <trans-unit id="f703885c281db53fc690d59abc5a344aec01339a" translate="yes" xml:space="preserve">
          <source>You may determine the morph alias of a given model at runtime using the &lt;code&gt;getMorphClass&lt;/code&gt; method. Conversely, you may determine the fully-qualified class name associated with a morph alias using the &lt;code&gt;Relation::getMorphedModel&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;getMorphClass&lt;/code&gt; メソッドを使用して、実行時に特定のモデルのモーフエイリアスを決定できます。逆に、 &lt;code&gt;Relation::getMorphedModel&lt;/code&gt; メソッドを使用して、モーフエイリアスに関連付けられた完全修飾クラス名を決定することもできます。</target>
        </trans-unit>
        <trans-unit id="ca03fd0ec63970d4202d9aa4b8723d0337f0e6ee" translate="yes" xml:space="preserve">
          <source>You may disable package discovery for all packages using the &lt;code&gt;*&lt;/code&gt; character inside of your application's &lt;code&gt;dont-discover&lt;/code&gt; directive:</source>
          <target state="translated">アプリケーションの &lt;code&gt;dont-discover&lt;/code&gt; ディレクティブ内で &lt;code&gt;*&lt;/code&gt; 文字を使用して、すべてのパッケージのパッケージ検出を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="bfc5f6889ffdaeac9871851c6fd2863141fee4fc" translate="yes" xml:space="preserve">
          <source>You may disable the default &lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt; timestamps by setting the public &lt;code&gt;$timestamps&lt;/code&gt; property of your model to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">モデルのパブリック &lt;code&gt;$timestamps&lt;/code&gt; プロパティを &lt;code&gt;false&lt;/code&gt; に設定することにより、デフォルトの &lt;code&gt;created_at&lt;/code&gt; および &lt;code&gt;updated_at&lt;/code&gt; タイムスタンプを無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="14d344935f09dad738035082a1f755e2d1948003" translate="yes" xml:space="preserve">
          <source>You may display data passed to your Blade views by wrapping the variable in curly braces. For example, given the following route:</source>
          <target state="translated">Blade ビューに渡されたデータは、変数を中括弧で囲むことで表示することができます。例えば、次のようなルートを指定したとします。</target>
        </trans-unit>
        <trans-unit id="b07e5b2978f7c6bb243de9a976a271af935d8a9f" translate="yes" xml:space="preserve">
          <source>You may display the contents of the &lt;code&gt;name&lt;/code&gt; variable like so:</source>
          <target state="translated">次のように、 &lt;code&gt;name&lt;/code&gt; 変数の内容を表示できます。</target>
        </trans-unit>
        <trans-unit id="422c641f3cf11afbaeff81ea728b535c939442ce" translate="yes" xml:space="preserve">
          <source>You may display the original listed prices (without coupon discounts) using the &lt;code&gt;listPrice&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;listPrice&lt;/code&gt; メソッドを使用して、元の表示価格（クーポン割引なし）を表示できます。</target>
        </trans-unit>
        <trans-unit id="c6aef2d9316edc0ded4173fcc21c4ba27ef03800" translate="yes" xml:space="preserve">
          <source>You may drop multiple columns from a table by passing an array of column names to the &lt;code&gt;dropColumn&lt;/code&gt; method:</source>
          <target state="translated">列名の配列を &lt;code&gt;dropColumn&lt;/code&gt; メソッドに渡すことで、テーブルから複数の列を削除できます。</target>
        </trans-unit>
        <trans-unit id="fd19c968e9f42f7cb282dd50ee91126e89bbd3cf" translate="yes" xml:space="preserve">
          <source>You may easily access your configuration values using the global &lt;code&gt;config&lt;/code&gt; helper function from anywhere in your application. The configuration values may be accessed using &quot;dot&quot; syntax, which includes the name of the file and option you wish to access. A default value may also be specified and will be returned if the configuration option does not exist:</source>
          <target state="translated">あなたは簡単にグローバル使用して設定値にアクセスすることができる。 &lt;code&gt;config&lt;/code&gt; アプリケーション内のどこからでもヘルパー関数を。構成値には、ファイルの名前とアクセスしたいオプションを含む「ドット」構文を使用してアクセスできます。デフォルト値も指定でき、構成オプションが存在しない場合に返されます。</target>
        </trans-unit>
        <trans-unit id="8ceaa36340f65761c4cdb5c7c4ed740996a42152" translate="yes" xml:space="preserve">
          <source>You may easily check for the existence of a table or column using the &lt;code&gt;hasTable&lt;/code&gt; and &lt;code&gt;hasColumn&lt;/code&gt; methods:</source>
          <target state="translated">あなたは簡単に使用して、テーブルまたは列の存在を確認することが &lt;code&gt;hasTable&lt;/code&gt; と &lt;code&gt;hasColumn&lt;/code&gt; 方法を：</target>
        </trans-unit>
        <trans-unit id="3587035cfcd506db19865c4bf299bfb2d5e56cc2" translate="yes" xml:space="preserve">
          <source>You may easily configure &quot;exponential&quot; backoffs by returning an array of backoff values from the &lt;code&gt;backoff&lt;/code&gt; method. In this example, the retry delay will be 1 seconds for the first retry, 5 seconds for the second retry, and 10 seconds for the third retry:</source>
          <target state="translated">&lt;code&gt;backoff&lt;/code&gt; メソッドからバックオフ値の配列を返すことにより、「指数」バックオフを簡単に構成できます。この例では、再試行の遅​​延は、最初の再試行で1秒、2回目の再試行で5秒、3回目の再試行で10秒になります。</target>
        </trans-unit>
        <trans-unit id="9563bcbe0ac81dc1f181a07610e609a395a0115a" translate="yes" xml:space="preserve">
          <source>You may easily modify the notification class used to send the password reset link to the user. To get started, override the &lt;code&gt;sendPasswordResetNotification&lt;/code&gt; method on your &lt;code&gt;User&lt;/code&gt; model. Within this method, you may send the notification using any notification class you choose. The password reset &lt;code&gt;$token&lt;/code&gt; is the first argument received by the method:</source>
          <target state="translated">パスワードリセットリンクをユーザーに送信するために使用される通知クラスを簡単に変更できます。はじめに、 &lt;code&gt;User&lt;/code&gt; モデルの &lt;code&gt;sendPasswordResetNotification&lt;/code&gt; メソッドをオーバーライドします。このメソッド内では、選択した通知クラスを使用して通知を送信できます。パスワードリセット &lt;code&gt;$token&lt;/code&gt; は、メソッドが受け取る最初の引数です。</target>
        </trans-unit>
        <trans-unit id="438d16845a19de666b37dafa7850a9a7306e2779" translate="yes" xml:space="preserve">
          <source>You may easily retrieve an array of a billable model's invoices using the &lt;code&gt;invoices&lt;/code&gt; method:</source>
          <target state="translated">あなたは簡単に使用して請求可能なモデルの請求書の配列を検索することができる &lt;code&gt;invoices&lt;/code&gt; 方法を：</target>
        </trans-unit>
        <trans-unit id="d0efbb265bc48148178ae45dccf2fbf9deeb7505" translate="yes" xml:space="preserve">
          <source>You may easily retrieve an array of a billable model's receipts using the &lt;code&gt;receipts&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;receipts&lt;/code&gt; メソッドを使用して、請求可能なモデルの領収書の配列を簡単に取得できます。</target>
        </trans-unit>
        <trans-unit id="fbc1659004f38b9d29e3fe37cf4f61d8da46854f" translate="yes" xml:space="preserve">
          <source>You may enable or disable foreign key constraints within your migrations by using the following methods:</source>
          <target state="translated">以下の方法を使用して、マイグレーション内の外部キー制約を有効または無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="531282b0faad003570e2b358f341341c7b6d8943" translate="yes" xml:space="preserve">
          <source>You may encrypt a value using the &lt;code&gt;encrypt&lt;/code&gt; helper. All encrypted values are encrypted using OpenSSL and the &lt;code&gt;AES-256-CBC&lt;/code&gt; cipher. Furthermore, all encrypted values are signed with a message authentication code (MAC) to detect any modifications to the encrypted string:</source>
          <target state="translated">&lt;code&gt;encrypt&lt;/code&gt; ヘルパーを使用して値を暗号化できます。すべての暗号化された値は、OpenSSLおよび &lt;code&gt;AES-256-CBC&lt;/code&gt; 暗号を使用して暗号化されます。さらに、すべての暗号化された値はメッセージ認証コード（MAC）で署名され、暗号化された文字列への変更を検出します。</target>
        </trans-unit>
        <trans-unit id="9fc87cace6fdd1f93df3d0c9ccbbd09dce069a27" translate="yes" xml:space="preserve">
          <source>You may encrypt a value using the &lt;code&gt;encryptString&lt;/code&gt; method of the &lt;code&gt;Crypt&lt;/code&gt; facade. All encrypted values are encrypted using OpenSSL and the &lt;code&gt;AES-256-CBC&lt;/code&gt; cipher. Furthermore, all encrypted values are signed with a message authentication code (MAC) to detect any modifications to the encrypted string:</source>
          <target state="translated">&lt;code&gt;Crypt&lt;/code&gt; ファサードの &lt;code&gt;encryptString&lt;/code&gt; メソッドを使用して値を暗号化できます。暗号化された値はすべて、OpenSSLと &lt;code&gt;AES-256-CBC&lt;/code&gt; 暗号を使用して暗号化されます。さらに、暗号化されたすべての値は、暗号化された文字列への変更を検出するためにメッセージ認証コード（MAC）で署名されます。</target>
        </trans-unit>
        <trans-unit id="5a76f9f0bae209a3e3986463f8f6e8f45ad9f7db" translate="yes" xml:space="preserve">
          <source>You may even create more complex pluralization rules which specify translation strings for multiple number ranges:</source>
          <target state="translated">複数の数値範囲の変換文字列を指定する、より複雑な複数化ルールを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="9326f46d2761e1f6b858b246c1c57558834821ac" translate="yes" xml:space="preserve">
          <source>You may even insert several records into the table with a single call to &lt;code&gt;insert&lt;/code&gt; by passing an array of arrays. Each array represents a row to be inserted into the table:</source>
          <target state="translated">配列の配列を渡して &lt;code&gt;insert&lt;/code&gt; 1回呼び出すだけで、テーブルに複数のレコードを挿入することもできます。各配列は、テーブルに挿入される行を表します。</target>
        </trans-unit>
        <trans-unit id="456fc405c6c5204e11098fefb90b8005f15ef258" translate="yes" xml:space="preserve">
          <source>You may even pass a &lt;code&gt;Closure&lt;/code&gt; as the default value. The result of the &lt;code&gt;Closure&lt;/code&gt; will be returned if the specified item does not exist in the cache. Passing a Closure allows you to defer the retrieval of default values from a database or other external service:</source>
          <target state="translated">デフォルト値として &lt;code&gt;Closure&lt;/code&gt; を渡すこともできます。指定されたアイテムがキャッシュに存在しない場合、 &lt;code&gt;Closure&lt;/code&gt; の結果が返されます。クロージャーを渡すと、データベースまたは他の外部サービスからのデフォルト値の取得を延期できます。</target>
        </trans-unit>
        <trans-unit id="e8ae896204ddd0d56bd523be285c470b9945a5ed" translate="yes" xml:space="preserve">
          <source>You may even pass a callback as the default value. The result of the callback will be returned if the specified key does not exist:</source>
          <target state="translated">デフォルト値としてコールバックを渡すこともできます。指定したキーが存在しない場合は、コールバックの結果が返されます。</target>
        </trans-unit>
        <trans-unit id="7120cffd702c645f303765889badb65d66aacd88" translate="yes" xml:space="preserve">
          <source>You may even pass an array of columns to an index method to create a compound (or composite) index:</source>
          <target state="translated">インデックスメソッドに列の配列を渡して複合(または複合)インデックスを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="971dee2a5d224f2a98a9976fbb271665b5686ea0" translate="yes" xml:space="preserve">
          <source>You may even register listeners using the &lt;code&gt;*&lt;/code&gt; as a wildcard parameter, allowing you to catch multiple events on the same listener. Wildcard listeners receive the event name as their first argument, and the entire event data array as their second argument:</source>
          <target state="translated">&lt;code&gt;*&lt;/code&gt; をワイルドカードパラメータとして使用してリスナーを登録することもできます。これにより、同じリスナーで複数のイベントをキャッチできます。ワイルドカードリスナーは、最初の引数としてイベント名を受け取り、2番目の引数としてイベントデータ配列全体を受け取ります。</target>
        </trans-unit>
        <trans-unit id="29283c0e866a2226c2aa5cc8d912db938d0e0637" translate="yes" xml:space="preserve">
          <source>You may even send a &quot;hot key&quot; to the primary CSS selector that contains your application:</source>
          <target state="translated">アプリケーションを含むプライマリ CSS セレクタに「ホットキー」を送ることもできます。</target>
        </trans-unit>
        <trans-unit id="0ea1b4d1b237c9c688ff5013e2f89c72528ac207" translate="yes" xml:space="preserve">
          <source>You may execute this method from your component template by invoking the variable matching the name of the method:</source>
          <target state="translated">このメソッドの名前に一致する変数を呼び出すことで、コンポーネントテンプレートからこのメソッドを実行することができます。</target>
        </trans-unit>
        <trans-unit id="77c99f0f0c859c40d3a7a45fbd0e092e5699349b" translate="yes" xml:space="preserve">
          <source>You may export all of the Markdown mail components to your own application for customization. To export the components, use the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command to publish the &lt;code&gt;laravel-mail&lt;/code&gt; asset tag:</source>
          <target state="translated">すべてのMarkdownメールコンポーネントを独自のアプリケーションにエクスポートしてカスタマイズできます。コンポーネントをエクスポートするには、 &lt;code&gt;vendor:publish&lt;/code&gt; Artisanコマンドを使用して、 &lt;code&gt;laravel-mail&lt;/code&gt; アセットタグを公​​開します。</target>
        </trans-unit>
        <trans-unit id="0c34a757d993570d8b3af7d0b5135bb5c26de976" translate="yes" xml:space="preserve">
          <source>You may export all of the Markdown notification components to your own application for customization. To export the components, use the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command to publish the &lt;code&gt;laravel-mail&lt;/code&gt; asset tag:</source>
          <target state="translated">すべてのMarkdown通知コンポーネントを独自のアプリケーションにエクスポートしてカスタマイズできます。コンポーネントをエクスポートするには、 &lt;code&gt;vendor:publish&lt;/code&gt; Artisanコマンドを使用して、 &lt;code&gt;laravel-mail&lt;/code&gt; アセットタグを公​​開します。</target>
        </trans-unit>
        <trans-unit id="b5e0e824efe4de99ac19c5fd5e2eac17e7667bb7" translate="yes" xml:space="preserve">
          <source>You may extend Homestead using the &lt;code&gt;after.sh&lt;/code&gt; script in the root of your Homestead directory. Within this file, you may add any shell commands that are necessary to properly configure and customize your virtual machine.</source>
          <target state="translated">Homesteadディレクトリのルートにある &lt;code&gt;after.sh&lt;/code&gt; スクリプトを使用してHomesteadを拡張できます。このファイル内に、仮想マシンを適切に構成およびカスタマイズするために必要なシェルコマンドを追加できます。</target>
        </trans-unit>
        <trans-unit id="54474be2e9e891c8c18eb0ef5c1059b99c6d5b80" translate="yes" xml:space="preserve">
          <source>You may filter attributes using the &lt;code&gt;filter&lt;/code&gt; method. This method accepts a Closure which should return &lt;code&gt;true&lt;/code&gt; if you wish to retain the attribute in the attribute bag:</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; メソッドを使用して属性をフィルタリングできます。このメソッドは、属性を属性バッグに保持する場合に &lt;code&gt;true&lt;/code&gt; を返す必要があるクロージャを受け入れます。</target>
        </trans-unit>
        <trans-unit id="917d87b5d628eb0c115dbfb4a5d0530d8ae7c626" translate="yes" xml:space="preserve">
          <source>You may filter the data that is recorded by Telescope via the &lt;code&gt;filter&lt;/code&gt; callback that is registered in your &lt;code&gt;TelescopeServiceProvider&lt;/code&gt;. By default, this callback records all data in the &lt;code&gt;local&lt;/code&gt; environment and exceptions, failed jobs, scheduled tasks, and data with monitored tags in all other environments:</source>
          <target state="translated">あなたは経由望遠鏡によって記録されたデータフィルタリングすることができる &lt;code&gt;filter&lt;/code&gt; あなたに登録されたコールバック &lt;code&gt;TelescopeServiceProvider&lt;/code&gt; を。デフォルトでは、このコールバックは、 &lt;code&gt;local&lt;/code&gt; 環境のすべてのデータと、例外、失敗したジョブ、スケジュールされたタスク、および他のすべての環境の監視対象タグ付きのデータを記録します。</target>
        </trans-unit>
        <trans-unit id="948affc4d71d47d9e93e3e78bdef571b225c5cc0" translate="yes" xml:space="preserve">
          <source>You may find it helpful to review the implementations of these methods on the &lt;code&gt;Laravel\Scout\Engines\AlgoliaEngine&lt;/code&gt; class. This class will provide you with a good starting point for learning how to implement each of these methods in your own engine.</source>
          <target state="translated">&lt;code&gt;Laravel\Scout\Engines\AlgoliaEngine&lt;/code&gt; クラスでこれらのメソッドの実装を確認すると役立つ場合があります。このクラスは、独自のエンジンでこれらの各メソッドを実装する方法を学ぶための良い出発点を提供します。</target>
        </trans-unit>
        <trans-unit id="2ad0db0f38b5a146e8ba1d8cc56d5b88f0bfe28e" translate="yes" xml:space="preserve">
          <source>You may find that in certain environments Webpack isn't updating when your files change. If this is the case on your system, consider using the &lt;code&gt;watch-poll&lt;/code&gt; command:</source>
          <target state="translated">特定の環境では、ファイルが変更されてもWebpackが更新されないことがあります。これがシステムに当てはまる場合は、 &lt;code&gt;watch-poll&lt;/code&gt; コマンドの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="2cde37de01f703788a75877201d19bf457818b47" translate="yes" xml:space="preserve">
          <source>You may find the following directory and file information helpful while troubleshooting issues with your Valet environment:</source>
          <target state="translated">バレット環境の問題をトラブルシューティングする際には、以下のディレクトリおよびファイル情報が参考になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="73e727714ed00ac3feacf40ea5571d9b07863845" translate="yes" xml:space="preserve">
          <source>You may flush all items that are assigned a tag or list of tags. For example, this statement would remove all caches tagged with either &lt;code&gt;people&lt;/code&gt;, &lt;code&gt;authors&lt;/code&gt;, or both. So, both &lt;code&gt;Anne&lt;/code&gt; and &lt;code&gt;John&lt;/code&gt; would be removed from the cache:</source>
          <target state="translated">タグまたはタグのリストが割り当てられているすべてのアイテムをフラッシュできます。たとえば、次のステートメントは、 &lt;code&gt;people&lt;/code&gt; 、 &lt;code&gt;authors&lt;/code&gt; 、またはその両方でタグ付けされたすべてのキャッシュを削除します。したがって、 &lt;code&gt;Anne&lt;/code&gt; と &lt;code&gt;John&lt;/code&gt; の両方がキャッシュから削除されます。</target>
        </trans-unit>
        <trans-unit id="b298ff19cabc2aba0b717d46da70225b72cda415" translate="yes" xml:space="preserve">
          <source>You may generate a policy using the &lt;code&gt;make:policy&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;artisan command&lt;/a&gt;. The generated policy will be placed in the &lt;code&gt;app/Policies&lt;/code&gt; directory. If this directory does not exist in your application, Laravel will create it for you:</source>
          <target state="translated">&lt;code&gt;make:policy&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;artisanコマンド&lt;/a&gt;を使用してポリシーを生成できます。生成された &lt;code&gt;app/Policies&lt;/code&gt; はapp / Policiesディレクトリに配置されます。このディレクトリがアプリケーションに存在しない場合、Laravelが作成します。</target>
        </trans-unit>
        <trans-unit id="d9f3235092baec8ce9ff9200db57e30bf87e6fce" translate="yes" xml:space="preserve">
          <source>You may generate an invokable controller by using the &lt;code&gt;--invokable&lt;/code&gt; option of the &lt;code&gt;make:controller&lt;/code&gt; Artisan command:</source>
          <target state="translated">&lt;code&gt;make:controller&lt;/code&gt; Artisanコマンドの &lt;code&gt;--invokable&lt;/code&gt; オプションを使用して、呼び出し可能なコントローラーを生成できます。</target>
        </trans-unit>
        <trans-unit id="6bfb89cdc3df627a2931686ae20be37737d97539" translate="yes" xml:space="preserve">
          <source>You may generate various other types of classes when generating a model, such as factories, seeders, and controllers. In addition, these options may be combined to create multiple classes at once:</source>
          <target state="translated">モデルを生成する際に、工場、シーダ、コントローラなど、他にも様々なタイプのクラスを生成してもよい。さらに、これらのオプションを組み合わせて、一度に複数のクラスを生成することもできます。</target>
        </trans-unit>
        <trans-unit id="c03b019a80b829ec9f15a357de698e3b7cfc2ff8" translate="yes" xml:space="preserve">
          <source>You may get a Redis instance by calling the &lt;code&gt;Redis::connection&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;Redis::connection&lt;/code&gt; メソッドを呼び出すと、Redisインスタンスを取得できます。</target>
        </trans-unit>
        <trans-unit id="b1139de3d7c029033fcbfee960e4e9c65cb22914" translate="yes" xml:space="preserve">
          <source>You may gracefully terminate the master Horizon process on your machine using the &lt;code&gt;horizon:terminate&lt;/code&gt; Artisan command. Any jobs that Horizon is currently processing will be completed and then Horizon will exit:</source>
          <target state="translated">&lt;code&gt;horizon:terminate&lt;/code&gt; Artisanコマンドを使用して、マシン上のマスターHorizo​​nプロセスを正常に終了できます。Horizo​​nが現在処理しているジョブはすべて完了し、Horizo​​nは終了します。</target>
        </trans-unit>
        <trans-unit id="366f0d5fed562c3beb60d08617667b36e39c3988" translate="yes" xml:space="preserve">
          <source>You may hash a password by calling the &lt;code&gt;make&lt;/code&gt; method on the &lt;code&gt;Hash&lt;/code&gt; facade:</source>
          <target state="translated">&lt;code&gt;Hash&lt;/code&gt; ファサードの &lt;code&gt;make&lt;/code&gt; メソッドを呼び出して、パスワードをハッシュできます。</target>
        </trans-unit>
        <trans-unit id="852fa71624591a28bc33ca971a80b41717cb13a0" translate="yes" xml:space="preserve">
          <source>You may have noticed in the examples above that we did not specify the full namespace for the event classes. This is because Echo will automatically assume the events are located in the &lt;code&gt;App\Events&lt;/code&gt; namespace. However, you may configure the root namespace when you instantiate Echo by passing a &lt;code&gt;namespace&lt;/code&gt; configuration option:</source>
          <target state="translated">上記の例では、イベントクラスに完全な名前空間を指定していないことに気付いたかもしれません。これは、Echoが自動的にイベントが &lt;code&gt;App\Events&lt;/code&gt; 名前空間にあると想定するためです。ただし、 &lt;code&gt;namespace&lt;/code&gt; 構成オプションを渡してEchoをインスタンス化するときに、ルート名前空間を構成できます。</target>
        </trans-unit>
        <trans-unit id="3779bdbb0746df419c224901775abf813908b9d3" translate="yes" xml:space="preserve">
          <source>You may inject environment variables into Mix by prefixing a key in your &lt;code&gt;.env&lt;/code&gt; file with &lt;code&gt;MIX_&lt;/code&gt;:</source>
          <target state="translated">あなたは、あなたの重要付けることによってミックスに環境変数を注入することができる &lt;code&gt;.env&lt;/code&gt; でファイル &lt;code&gt;MIX_&lt;/code&gt; を：</target>
        </trans-unit>
        <trans-unit id="10f956df9ab744487271efbec0366cb873cca5d9" translate="yes" xml:space="preserve">
          <source>You may install Homestead by cloning the repository onto your host machine. Consider cloning the repository into a &lt;code&gt;Homestead&lt;/code&gt; folder within your &quot;home&quot; directory, as the Homestead box will serve as the host to all of your Laravel projects:</source>
          <target state="translated">リポジトリをホストマシンに複製することで、Homesteadをインストールできます。ホームステッドボックスはすべてのLaravelプロジェクトのホストとして機能するため、リポジトリを「ホーム」ディレクトリ内の &lt;code&gt;Homestead&lt;/code&gt; フォルダに複製することを検討してください。</target>
        </trans-unit>
        <trans-unit id="5b2efd29ae9d9cb541d48f3ddcbfad5ce0f17204" translate="yes" xml:space="preserve">
          <source>You may install Homestead by cloning the repository. Consider cloning the repository into a &lt;code&gt;Homestead&lt;/code&gt; folder within your &quot;home&quot; directory, as the Homestead box will serve as the host to all of your Laravel projects:</source>
          <target state="translated">リポジトリを複製することでHomesteadをインストールできます。ホームステッドボックスがすべてのLaravelプロジェクトのホストとして機能するため、リポジトリを「ホーム」ディレクトリ内の &lt;code&gt;Homestead&lt;/code&gt; フォルダに複製することを検討してください。</target>
        </trans-unit>
        <trans-unit id="2fbbb79c8db263685e35a40d6a1f8f4f15d99a84" translate="yes" xml:space="preserve">
          <source>You may install Laravel Sanctum via Composer:</source>
          <target state="translated">Composer経由でLaravel Sanctumをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="fbc7ef925bc7e2fe4da97d2de022486a24c93dd7" translate="yes" xml:space="preserve">
          <source>You may instruct a single model instance to append attributes using the &lt;code&gt;append&lt;/code&gt; method. Or, you may use the &lt;code&gt;setAppends&lt;/code&gt; method to override the entire array of appended properties for a given model instance:</source>
          <target state="translated">&lt;code&gt;append&lt;/code&gt; メソッドを使用して、単一のモデルインスタンスに属性を追加するように指示できます。または、 &lt;code&gt;setAppends&lt;/code&gt; メソッドを使用して、特定のモデルインスタンスに追加されたプロパティの配列全体をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="dac876359970a9cbd7051d7f55df51254c8455dd" translate="yes" xml:space="preserve">
          <source>You may interact with Redis by calling various methods on the &lt;code&gt;Redis&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. The &lt;code&gt;Redis&lt;/code&gt; facade supports dynamic methods, meaning you may call any &lt;a href=&quot;https://redis.io/commands&quot;&gt;Redis command&lt;/a&gt; on the facade and the command will be passed directly to Redis. In this example, we will call the Redis &lt;code&gt;GET&lt;/code&gt; command by calling the &lt;code&gt;get&lt;/code&gt; method on the &lt;code&gt;Redis&lt;/code&gt; facade:</source>
          <target state="translated">&lt;code&gt;Redis&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサードの&lt;/a&gt;さまざまなメソッドを呼び出すことにより、Redisを操作できます。 &lt;code&gt;Redis&lt;/code&gt; ののファサードは、あなたがどの呼び出すことを意味し、動的メソッドをサポートしている&lt;a href=&quot;https://redis.io/commands&quot;&gt;のRedisコマンドを&lt;/a&gt;正面にして、コマンドはRedisのに直接渡されます。この例では、 &lt;code&gt;Redis&lt;/code&gt; ファサードの &lt;code&gt;get&lt;/code&gt; メソッドを呼び出して、Redis &lt;code&gt;GET&lt;/code&gt; コマンドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="39264ae1ec6a16c04fc722653d8daa80a8c542d8" translate="yes" xml:space="preserve">
          <source>You may listen for the join event via Echo's &lt;code&gt;listen&lt;/code&gt; method:</source>
          <target state="translated">Echoの &lt;code&gt;listen&lt;/code&gt; メソッドを介してjoinイベントをリッスンできます：</target>
        </trans-unit>
        <trans-unit id="6e915bcfe766cb023ec25ac8d7bcf3f43da29935" translate="yes" xml:space="preserve">
          <source>You may navigate &quot;back&quot; and &quot;forward&quot; using the &lt;code&gt;back&lt;/code&gt; and &lt;code&gt;forward&lt;/code&gt; methods:</source>
          <target state="translated">&lt;code&gt;back&lt;/code&gt; および &lt;code&gt;forward&lt;/code&gt; メソッドを使用して、「戻る」および「進む」をナビゲートできます。</target>
        </trans-unit>
        <trans-unit id="7fa9703c8a0a3c5b12496650ac631a8587a60776" translate="yes" xml:space="preserve">
          <source>You may not always need every column from the relationships you are retrieving. For this reason, Eloquent allows you to specify which columns of the relationship you would like to retrieve:</source>
          <target state="translated">検索するリレーションシップのすべての列が必ずしも必要とは限りません。そのため、Eloquentでは、取得したいリレーションシップのどの列を指定するかを指定することができます。</target>
        </trans-unit>
        <trans-unit id="f2e4b2a2ae48df803f337a14387af91ac58e18ff" translate="yes" xml:space="preserve">
          <source>You may not always want to select all columns from a database table. Using the &lt;code&gt;select&lt;/code&gt; method, you can specify a custom &lt;code&gt;select&lt;/code&gt; clause for the query:</source>
          <target state="translated">データベーステーブルからすべての列を選択する必要があるとは限りません。 &lt;code&gt;select&lt;/code&gt; メソッドを使用して、クエリのカスタム &lt;code&gt;select&lt;/code&gt; 句を指定できます。</target>
        </trans-unit>
        <trans-unit id="0c790138467948ac72e03d092bd878076aeb0fe9" translate="yes" xml:space="preserve">
          <source>You may not remove the last plan on a subscription. Instead, you should simply cancel the subscription.</source>
          <target state="translated">サブスクリプションの最後のプランを削除することはできません。その代わりに、単にサブスクリプションをキャンセルする必要があります。</target>
        </trans-unit>
        <trans-unit id="15a96903840b1496823709c7a2fdd087253812c6" translate="yes" xml:space="preserve">
          <source>You may occasionally need to execute assertions outside of the current scope. You may use the &lt;code&gt;elsewhere&lt;/code&gt; method to accomplish this:</source>
          <target state="translated">現在のスコープ外でアサーションを実行する必要がある場合があります。これを実現するには、 &lt;code&gt;elsewhere&lt;/code&gt; 方法を使用できます。</target>
        </trans-unit>
        <trans-unit id="49d4b89140196f0db102e7931041ea02fa9b1828" translate="yes" xml:space="preserve">
          <source>You may occasionally wish to not validate a given field if another field has a given value. You may accomplish this using the &lt;code&gt;exclude_if&lt;/code&gt; validation rule. In this example, the &lt;code&gt;appointment_date&lt;/code&gt; and &lt;code&gt;doctor_name&lt;/code&gt; fields will not be validated if the &lt;code&gt;has_appointment&lt;/code&gt; field has a value of &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">別のフィールドに特定の値がある場合、特定のフィールドを検証したくない場合があります。これは、 &lt;code&gt;exclude_if&lt;/code&gt; 検証ルールを使用して実行できます。この例では、 &lt;code&gt;appointment_date&lt;/code&gt; と &lt;code&gt;doctor_name&lt;/code&gt; 場合のフィールドが検証されることはありません &lt;code&gt;has_appointment&lt;/code&gt; のフィールドには値がある &lt;code&gt;false&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="26251bfd3f81adaa1effe1ee907462218da837b9" translate="yes" xml:space="preserve">
          <source>You may occasionally wish to temporarily &quot;mute&quot; all events fired by a model. You may achieve this using the &lt;code&gt;withoutEvents&lt;/code&gt; method. The &lt;code&gt;withoutEvents&lt;/code&gt; method accepts a Closure as its only argument. Any code executed within this Closure will not fire model events. For example, the following will fetch and delete an &lt;code&gt;App\Models\User&lt;/code&gt; instance without firing any model events. Any value returned by the given Closure will be returned by the &lt;code&gt;withoutEvents&lt;/code&gt; method:</source>
          <target state="translated">モデルによって発生したすべてのイベントを一時的に「ミュート」したい場合があります。これは、 &lt;code&gt;withoutEvents&lt;/code&gt; メソッドを使用して実現できます。 &lt;code&gt;withoutEvents&lt;/code&gt; の方法は、唯一の引数としてクロージャを受け入れます。このクロージャー内で実行されたコードは、モデルイベントを発生させません。たとえば、次の例では、モデルイベントを発生させずに、 &lt;code&gt;App\Models\User&lt;/code&gt; インスタンスをフェッチして削除します。指定されたClosureによって返される値は、 &lt;code&gt;withoutEvents&lt;/code&gt; メソッドによって返されます。</target>
        </trans-unit>
        <trans-unit id="9b444c5a8743fe046bc9b747efe032b21361bfa5" translate="yes" xml:space="preserve">
          <source>You may omit the component parameters if it has no additional slots:</source>
          <target state="translated">追加スロットがない場合は、コンポーネントパラメータを省略することができます。</target>
        </trans-unit>
        <trans-unit id="4088b05d1c18cacdf88f31541fae4941c6cadd24" translate="yes" xml:space="preserve">
          <source>You may only add jobs to a batch from within a job that belongs to the same batch.</source>
          <target state="translated">バッチにジョブを追加できるのは、同じバッチに属するジョブの中からのみです。</target>
        </trans-unit>
        <trans-unit id="56af21c8f7803fab59797145573b8e7b89661285" translate="yes" xml:space="preserve">
          <source>You may optionally pass a default value as the second argument:</source>
          <target state="translated">2 番目の引数にデフォルト値を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="526b094c2adb620e883eff2cad28e0b859dc27c9" translate="yes" xml:space="preserve">
          <source>You may optionally pass an integer to &lt;code&gt;random&lt;/code&gt; to specify how many items you would like to randomly retrieve. A collection of items is always returned when explicitly passing the number of items you wish to receive:</source>
          <target state="translated">オプションで整数を &lt;code&gt;random&lt;/code&gt; に渡して、ランダムに取得するアイテムの数を指定できます。受け取りたいアイテムの数を明示的に渡すと、常にアイテムのコレクションが返されます。</target>
        </trans-unit>
        <trans-unit id="bbe57394d9d124a7a5b1230a76f485e04e3a166b" translate="yes" xml:space="preserve">
          <source>You may optionally pass an offset as the second argument:</source>
          <target state="translated">オプションで、第二引数にオフセットを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="0612007070d62b3e6cfc1bef2e140d1325bacc01" translate="yes" xml:space="preserve">
          <source>You may optionally pass the function a &quot;depth&quot; argument:</source>
          <target state="translated">この関数には、オプションで &quot;depth&quot; 引数を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="5dbbbfcf4115cfd443bbab3e275337fcc2c92eb9" translate="yes" xml:space="preserve">
          <source>You may override attributes on the model by passing an array of attributes to the &lt;code&gt;create&lt;/code&gt; method:</source>
          <target state="translated">属性の配列を &lt;code&gt;create&lt;/code&gt; メソッドに渡すことにより、モデルの属性をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="819143c81c3b1ac4856524271b93e7d274eeda18" translate="yes" xml:space="preserve">
          <source>You may override attributes on the model by passing an array to the &lt;code&gt;create&lt;/code&gt; method:</source>
          <target state="translated">配列を &lt;code&gt;create&lt;/code&gt; メソッドに渡すことで、モデルの属性をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="b5fa38b7cfa14454e583e69fa3b2bc592d4a9789" translate="yes" xml:space="preserve">
          <source>You may override the default model route keys by passing an array to the &lt;code&gt;scoped&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;scoped&lt;/code&gt; メソッドに配列を渡すことで、デフォルトのモデルルートキーをオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="1250189a31fa5fdd3b3b5ebc7f47731e58708c80" translate="yes" xml:space="preserve">
          <source>You may pass &lt;a href=&quot;validation#named-error-bags&quot;&gt;the name of a specific error bag&lt;/a&gt; as the second parameter to the &lt;code&gt;@error&lt;/code&gt; directive to retrieve validation error messages on pages containing multiple forms:</source>
          <target state="translated">あなたは渡すことができ&lt;a href=&quot;validation#named-error-bags&quot;&gt;、特定のエラー・バッグの名前を&lt;/a&gt;2番目のパラメータとして &lt;code&gt;@error&lt;/code&gt; の複数のフォームを含むページ上の検証エラーメッセージを取得するためのディレクティブ：</target>
        </trans-unit>
        <trans-unit id="2b7b5d60f058f1deaa5cc4859c1796946dac7258" translate="yes" xml:space="preserve">
          <source>You may pass a class or interface name to resolve it from the container:</source>
          <target state="translated">クラス名やインターフェース名を渡してコンテナから解決することができます。</target>
        </trans-unit>
        <trans-unit id="023f1c2fa520ac2c538b9dee0623a2d01855aa04" translate="yes" xml:space="preserve">
          <source>You may pass a default value as the second argument to the &lt;code&gt;input&lt;/code&gt; method. This value will be returned if the requested input value is not present on the request:</source>
          <target state="translated">&lt;code&gt;input&lt;/code&gt; メソッドの2番目の引数としてデフォルト値を渡すことができます。この値は、要求された入力値が要求に存在しない場合に返されます。</target>
        </trans-unit>
        <trans-unit id="35328b5291c375d46d0ea8e5733b52c439804d29" translate="yes" xml:space="preserve">
          <source>You may pass a second argument to limit the size of the resulting chunk:</source>
          <target state="translated">結果として得られるチャンクのサイズを制限するために、第二引数を渡すことができます。</target>
        </trans-unit>
        <trans-unit id="228c66d84cde55554e44f8d62f2795e042a70d72" translate="yes" xml:space="preserve">
          <source>You may pass additional parameters to the share command, such as &lt;code&gt;valet share --region=eu&lt;/code&gt;. For more information, consult the &lt;a href=&quot;https://ngrok.com/docs&quot;&gt;ngrok documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;valet share --region=eu&lt;/code&gt; など、追加のパラメーターをshareコマンドに渡すことができます。詳細については、&lt;a href=&quot;https://ngrok.com/docs&quot;&gt;ngrokのドキュメントを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ae77e061ebc45b69a24d8da673cda3470e541401" translate="yes" xml:space="preserve">
          <source>You may pass another Closure as the third parameter to the &lt;code&gt;when&lt;/code&gt; method. This Closure will execute if the first parameter evaluates as &lt;code&gt;false&lt;/code&gt;. To illustrate how this feature may be used, we will use it to configure the default sorting of a query:</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; メソッドの3番目のパラメーターとして別のクロージャーを渡すことができます。このクロージャーは、最初のパラメーターが &lt;code&gt;false&lt;/code&gt; と評価された場合に実行されます。この機能の使用方法を説明するために、この機能を使用してクエリのデフォルトのソートを構成します。</target>
        </trans-unit>
        <trans-unit id="6468767a3afd6aaf57e807b1b1a49ebe49b0c0a0" translate="yes" xml:space="preserve">
          <source>You may pass data to Blade components using HTML attributes. Hard-coded, primitive values may be passed to the component using simple HTML attributes. PHP expressions and variables should be passed to the component via attributes that use the &lt;code&gt;:&lt;/code&gt; character as a prefix:</source>
          <target state="translated">HTML属性を使用してBladeコンポーネントにデータを渡すことができます。ハードコードされたプリミティブ値は、単純なHTML属性を使用してコンポーネントに渡すことができます。PHPの式と変数は、プレフィックスとして &lt;code&gt;:&lt;/code&gt; 文字を使用する属性を介してコンポーネントに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="0f7a7410a022bc65a542e491f8f59cf0b9e01810" translate="yes" xml:space="preserve">
          <source>You may pass either a string (proxy) or object (BrowserSync settings) to this method. Next, start Webpack's dev server using the &lt;code&gt;npm run watch&lt;/code&gt; command. Now, when you modify a script or PHP file, watch as the browser instantly refreshes the page to reflect your changes.</source>
          <target state="translated">このメソッドには、文字列（プロキシ）またはオブジェクト（BrowserSync設定）のいずれかを渡すことができます。次に、 &lt;code&gt;npm run watch&lt;/code&gt; コマンドを使用してWebpackの開発サーバーを起動します。これで、スクリプトまたはPHPファイルを変更するときに、ブラウザがページを即座に更新して変更を反映していることを確認してください。</target>
        </trans-unit>
        <trans-unit id="d4075d365f56cba74b6c5a6a4ed5d4c36b0402f8" translate="yes" xml:space="preserve">
          <source>You may pass multiple arguments to the &lt;code&gt;groupBy&lt;/code&gt; method to group by multiple columns:</source>
          <target state="translated">&lt;code&gt;groupBy&lt;/code&gt; メソッドに複数の引数を渡して、複数の列でグループ化できます。</target>
        </trans-unit>
        <trans-unit id="ba49c8616301f5454b8d503868b71f65f9ed3bad" translate="yes" xml:space="preserve">
          <source>You may pause the Horizon process and instruct it to continue processing jobs using the &lt;code&gt;horizon:pause&lt;/code&gt; and &lt;code&gt;horizon:continue&lt;/code&gt; Artisan commands:</source>
          <target state="translated">Horizo​​nプロセスを一時停止し、 &lt;code&gt;horizon:pause&lt;/code&gt; および &lt;code&gt;horizon:continue&lt;/code&gt; Artisanコマンドを使用してジョブの処理を続行するように指示できます。</target>
        </trans-unit>
        <trans-unit id="116f64d33620d0950d8db7815500ff3119dd2322" translate="yes" xml:space="preserve">
          <source>You may propose new features or improvements of existing Laravel behavior in the Laravel Ideas &lt;a href=&quot;https://github.com/laravel/ideas/issues&quot;&gt;issue board&lt;/a&gt;. If you propose a new feature, please be willing to implement at least some of the code that would be needed to complete the feature.</source>
          <target state="translated">Laravelアイデア&lt;a href=&quot;https://github.com/laravel/ideas/issues&quot;&gt;発行ボード&lt;/a&gt;で、新しい機能や既存のLaravel動作の改善を提案できます。新しい機能を提案する場合は、その機能を完了するために必要なコードの少なくとも一部を実装してもかまいません。</target>
        </trans-unit>
        <trans-unit id="4eec1ee60157eda5f6c51bcb50e4032a7339f027" translate="yes" xml:space="preserve">
          <source>You may provide a Closure based state transformation if your state change requires access to the parent model:</source>
          <target state="translated">状態の変更で親モデルへのアクセスが必要な場合は、Closureベースの状態変換を提供することができます。</target>
        </trans-unit>
        <trans-unit id="061bfe377f2e215e005a5569867aa1854fd38e8a" translate="yes" xml:space="preserve">
          <source>You may provide a Closure based state transformation if your state change requires access to the related model:</source>
          <target state="translated">状態の変更が関連モデルへのアクセスを必要とする場合は、Closureベースの状態変換を提供することができます。</target>
        </trans-unit>
        <trans-unit id="370554da8640ca38c5b499f85574ee8dddfed17d" translate="yes" xml:space="preserve">
          <source>You may provide an integer as a second argument to the function to retrieve the singular or plural form of the string:</source>
          <target state="translated">文字列の単数形または複数形を取得するために、関数の第二引数に整数を指定することができます。</target>
        </trans-unit>
        <trans-unit id="3c2df5f428571705559df0ed0e706637b7f2198a" translate="yes" xml:space="preserve">
          <source>You may provide one of the following as the channel argument:</source>
          <target state="translated">チャンネルの引数として以下のいずれかを指定することができます。</target>
        </trans-unit>
        <trans-unit id="30fb2ba95bf84cf6d5790d93c1784781c4c653e9" translate="yes" xml:space="preserve">
          <source>You may publish Laravel's error page templates using the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command. Once the templates have been published, you may customize them to your liking:</source>
          <target state="translated">&lt;code&gt;vendor:publish&lt;/code&gt; publishArtisanコマンドを使用してLaravelのエラーページテンプレートを公開できます。テンプレートが公開されたら、好みに合わせてカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="f563741d2c0590ffe83f72440cb761a24b38e0b8" translate="yes" xml:space="preserve">
          <source>You may push to a stack as many times as needed. To render the complete stack contents, pass the name of the stack to the &lt;code&gt;@stack&lt;/code&gt; directive:</source>
          <target state="translated">必要に応じて何回でもスタックにプッシュできます。完全なスタックコンテンツをレンダリングするには、スタックの名前を &lt;code&gt;@stack&lt;/code&gt; ディレクティブに渡します。</target>
        </trans-unit>
        <trans-unit id="88a614f47edab57dfaa8e6163dd64c7a2c62c029" translate="yes" xml:space="preserve">
          <source>You may query the &lt;code&gt;posts&lt;/code&gt; relationship and add additional constraints to the relationship like so:</source>
          <target state="translated">次のように、 &lt;code&gt;posts&lt;/code&gt; 関係をクエリして、関係に制約を追加できます。</target>
        </trans-unit>
        <trans-unit id="8536b6d252b0de284a747642922a06d90f47bc81" translate="yes" xml:space="preserve">
          <source>You may register many API resource controllers at once by passing an array to the &lt;code&gt;apiResources&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;apiResources&lt;/code&gt; メソッドに配列を渡すことにより、一度に多くのAPIリソースコントローラーを登録できます。</target>
        </trans-unit>
        <trans-unit id="22bf7781ae4bafaf07663887368a9af89536bf93" translate="yes" xml:space="preserve">
          <source>You may register many resource controllers at once by passing an array to the &lt;code&gt;resources&lt;/code&gt; method:</source>
          <target state="translated">配列を &lt;code&gt;resources&lt;/code&gt; メソッドに渡すことで、一度に多くのリソースコントローラーを登録できます。</target>
        </trans-unit>
        <trans-unit id="2e58598233a69e903d0189e32b0dc05fbe634776" translate="yes" xml:space="preserve">
          <source>You may register the &lt;code&gt;morphMap&lt;/code&gt; in the &lt;code&gt;boot&lt;/code&gt; function of your &lt;code&gt;AppServiceProvider&lt;/code&gt; or create a separate service provider if you wish.</source>
          <target state="translated">あなたは登録すること &lt;code&gt;morphMap&lt;/code&gt; をして &lt;code&gt;boot&lt;/code&gt; あなたの機能 &lt;code&gt;AppServiceProvider&lt;/code&gt; または必要に応じて別のサービスプロバイダを作成します。</target>
        </trans-unit>
        <trans-unit id="fd631e9bfaf2df0322f7e8d7867a69ed63002453" translate="yes" xml:space="preserve">
          <source>You may remove a cookie by expiring it via the &lt;code&gt;forget&lt;/code&gt; method of the &lt;code&gt;Cookie&lt;/code&gt; facade:</source>
          <target state="translated">&lt;code&gt;Cookie&lt;/code&gt; ファサードの &lt;code&gt;forget&lt;/code&gt; メソッドを使用して、Cookieを期限切れにすることでCookieを削除できます。</target>
        </trans-unit>
        <trans-unit id="84f7d9335053f1c4d17ad674d61b3178464a04a0" translate="yes" xml:space="preserve">
          <source>You may remove a proxy using the &lt;code&gt;unproxy&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;unproxy&lt;/code&gt; コマンドを使用してプロキシを削除できます。</target>
        </trans-unit>
        <trans-unit id="5c2731e3ec1ad3a6ae944e2fdc5926bd0bcdadb9" translate="yes" xml:space="preserve">
          <source>You may remove items from the cache using the &lt;code&gt;forget&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;forget&lt;/code&gt; メソッドを使用して、キャッシュからアイテムを削除できます。</target>
        </trans-unit>
        <trans-unit id="53412088fc27b1d9ed070c5d901bbb4390c4b7b2" translate="yes" xml:space="preserve">
          <source>You may remove plans from subscriptions using the &lt;code&gt;removePlan&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;removePlan&lt;/code&gt; メソッドを使用して、サブスクリプションからプランを削除できます。</target>
        </trans-unit>
        <trans-unit id="425be7fcbb5e84cf5a7fec865cd85ae90ca9764c" translate="yes" xml:space="preserve">
          <source>You may retrieve lines from language files using the &lt;code&gt;__&lt;/code&gt; helper function. The &lt;code&gt;__&lt;/code&gt; method accepts the file and key of the translation string as its first argument. For example, let's retrieve the &lt;code&gt;welcome&lt;/code&gt; translation string from the &lt;code&gt;resources/lang/messages.php&lt;/code&gt; language file:</source>
          <target state="translated">&lt;code&gt;__&lt;/code&gt; ヘルパー関数を使用して、言語ファイルから行を取得できます。 &lt;code&gt;__&lt;/code&gt; 方法は、最初の引数として翻訳文字列のファイルとキーを受け付けます。たとえば、 &lt;code&gt;resources/lang/messages.php&lt;/code&gt; 言語ファイルから &lt;code&gt;welcome&lt;/code&gt; 翻訳文字列を取得してみましょう。</target>
        </trans-unit>
        <trans-unit id="c90f45fde1533b7ab2d9c8deda1deda19b14e764" translate="yes" xml:space="preserve">
          <source>You may revoke a token by using the &lt;code&gt;revokeAccessToken&lt;/code&gt; method on the &lt;code&gt;TokenRepository&lt;/code&gt;. You may revoke a token's refresh tokens using the &lt;code&gt;revokeRefreshTokensByAccessTokenId&lt;/code&gt; method on the &lt;code&gt;RefreshTokenRepository&lt;/code&gt;:</source>
          <target state="translated">あなたは使用してトークンを取り消すことができる &lt;code&gt;revokeAccessToken&lt;/code&gt; の上の方法を &lt;code&gt;TokenRepository&lt;/code&gt; 。あなたは、使用してトークンのリフレッシュトークンを取り消すことができる &lt;code&gt;revokeRefreshTokensByAccessTokenId&lt;/code&gt; の上の方法を &lt;code&gt;RefreshTokenRepository&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="006c7730168ed962590a45101e9df2d300318344" translate="yes" xml:space="preserve">
          <source>You may roll back &amp;amp; re-migrate a limited number of migrations by providing the &lt;code&gt;step&lt;/code&gt; option to the &lt;code&gt;refresh&lt;/code&gt; command. For example, the following command will roll back &amp;amp; re-migrate the last five migrations:</source>
          <target state="translated">&lt;code&gt;refresh&lt;/code&gt; コマンドに &lt;code&gt;step&lt;/code&gt; オプションを指定することにより、限られた数の移行をロールバックおよび再移行できます。たとえば、次のコマンドは、最後の5つの移行をロールバックして再移行します。</target>
        </trans-unit>
        <trans-unit id="baa87db12ebf6d3c5c5c7f3240a8bbdd23c5150a" translate="yes" xml:space="preserve">
          <source>You may roll back a limited number of migrations by providing the &lt;code&gt;step&lt;/code&gt; option to the &lt;code&gt;rollback&lt;/code&gt; command. For example, the following command will roll back the last five migrations:</source>
          <target state="translated">&lt;code&gt;rollback&lt;/code&gt; コマンドに &lt;code&gt;step&lt;/code&gt; オプションを指定することにより、限られた数の移行をロールバックできます。たとえば、次のコマンドは最後の5つの移行をロールバックします。</target>
        </trans-unit>
        <trans-unit id="026336307b25f7c8e98b2422e2f8514e66a3d028" translate="yes" xml:space="preserve">
          <source>You may rollback &amp;amp; re-migrate a limited number of migrations by providing the &lt;code&gt;step&lt;/code&gt; option to the &lt;code&gt;refresh&lt;/code&gt; command. For example, the following command will rollback &amp;amp; re-migrate the last five migrations:</source>
          <target state="translated">&lt;code&gt;refresh&lt;/code&gt; コマンドに &lt;code&gt;step&lt;/code&gt; オプションを指定することで、限られた数の移行をロールバックして再移行できます。たとえば、次のコマンドは、最後の5つの移行をロールバックして再移行します。</target>
        </trans-unit>
        <trans-unit id="818978557688c87d70aa25f70314ead3c2e5e4de" translate="yes" xml:space="preserve">
          <source>You may rollback a limited number of migrations by providing the &lt;code&gt;step&lt;/code&gt; option to the &lt;code&gt;rollback&lt;/code&gt; command. For example, the following command will rollback the last five migrations:</source>
          <target state="translated">&lt;code&gt;rollback&lt;/code&gt; コマンドに &lt;code&gt;step&lt;/code&gt; オプションを指定することにより、限られた数の移行をロールバックできます。たとえば、次のコマンドは最後の5つの移行をロールバックします。</target>
        </trans-unit>
        <trans-unit id="8580d0a9d44bfa2974031073d0f6a413f1802e6d" translate="yes" xml:space="preserve">
          <source>You may run the &lt;code&gt;passport:install&lt;/code&gt; command with the &lt;code&gt;--uuids&lt;/code&gt; option present. This flag will instruct Passport that you would like to use UUIDs instead of auto-incrementing integers as the Passport &lt;code&gt;Client&lt;/code&gt; model's primary key values. After running the &lt;code&gt;passport:install&lt;/code&gt; command with the &lt;code&gt;--uuids&lt;/code&gt; option, you will be given additional instructions regarding disabling Passport's default migrations:</source>
          <target state="translated">&lt;code&gt;--uuids&lt;/code&gt; オプションを指定して &lt;code&gt;passport:install&lt;/code&gt; コマンドを実行できます。このフラグは、Passport &lt;code&gt;Client&lt;/code&gt; モデルの主キー値として整数を自動インクリメントする代わりにUUIDを使用することをPassportに指示します。 &lt;code&gt;--uuids&lt;/code&gt; オプションを指定して &lt;code&gt;passport:install&lt;/code&gt; コマンドを実行すると、Passportのデフォルトの移行を無効にするための追加の手順が表示されます。</target>
        </trans-unit>
        <trans-unit id="0ea20637541522de38e5ece89fdcdff32ef908f2" translate="yes" xml:space="preserve">
          <source>You may select a random option by omitting the second parameter:</source>
          <target state="translated">2 番目のパラメータを省略して、ランダムなオプションを選択することができます。</target>
        </trans-unit>
        <trans-unit id="f883e24518c72d9c703042ba1837fc911bd8be6c" translate="yes" xml:space="preserve">
          <source>You may set configuration variables at runtime by passing an array of key / value pairs:</source>
          <target state="translated">キーと値のペアの配列を渡すことで、実行時に設定変数を設定することができます。</target>
        </trans-unit>
        <trans-unit id="e188a785aad541b45fb0f669bbc6966c6a04a83c" translate="yes" xml:space="preserve">
          <source>You may set values by passing an array of key / value pairs to the function:</source>
          <target state="translated">キーと値のペアの配列を関数に渡すことで、値を設定することができます。</target>
        </trans-unit>
        <trans-unit id="4df802ff290e0af3dcd8e33f786ff14e0d04de8b" translate="yes" xml:space="preserve">
          <source>You may specify a dynamic request maximum based on an attribute of the authenticated &lt;code&gt;User&lt;/code&gt; model. For example, if your &lt;code&gt;User&lt;/code&gt; model contains a &lt;code&gt;rate_limit&lt;/code&gt; attribute, you may pass the name of the attribute to the &lt;code&gt;throttle&lt;/code&gt; middleware so that it is used to calculate the maximum request count:</source>
          <target state="translated">認証された &lt;code&gt;User&lt;/code&gt; モデルの属性に基づいて、動的リクエストの最大値を指定できます。たとえば、 &lt;code&gt;User&lt;/code&gt; モデルに &lt;code&gt;rate_limit&lt;/code&gt; 属性が含まれている場合、属性の名前を &lt;code&gt;throttle&lt;/code&gt; ミドルウェアに渡して、最大リクエスト数の計算に使用することができます。</target>
        </trans-unit>
        <trans-unit id="e56c6f9574c488e8623663486ac434b357f320d6" translate="yes" xml:space="preserve">
          <source>You may specify a plain-text view for the mail message by passing the view name as the second element of an array that is given to the &lt;code&gt;view&lt;/code&gt; method of the &lt;code&gt;MailMessage&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;MailMessage&lt;/code&gt; の &lt;code&gt;view&lt;/code&gt; メソッドに与えられる配列の2番目の要素としてビュー名を渡すことにより、メールメッセージのプレーンテキストビューを指定できます。</target>
        </trans-unit>
        <trans-unit id="df192d6f1cade43bdd531d9935fe8158ff32849b" translate="yes" xml:space="preserve">
          <source>You may specify a supported version of Elasticsearch, which may be a major version or an exact version number (major.minor.patch). The default installation will create a cluster named 'homestead'. You should never give Elasticsearch more than half of the operating system's memory, so make sure your Homestead machine has at least twice the Elasticsearch allocation.</source>
          <target state="translated">Elasticsearchのサポートされているバージョンを指定することができ、メジャーバージョンか正確なバージョン番号(major.minor.patch)を指定することができます。デフォルトのインストールでは、'hometead'という名前のクラスタが作成されます。Elasticsearchにオペレーティングシステムのメモリの半分以上を与えてはいけないので、Homesteadマシンには最低でも2倍のElasticsearchが割り当てられていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="57c8fad2d6cb5f2c4c55c29e3d1b7ca57656ae02" translate="yes" xml:space="preserve">
          <source>You may specify additional &lt;a href=&quot;http://docs.guzzlephp.org/en/stable/request-options.html&quot;&gt;Guzzle request options&lt;/a&gt; using the &lt;code&gt;withOptions&lt;/code&gt; method. The &lt;code&gt;withOptions&lt;/code&gt; method accepts an array of key / value pairs:</source>
          <target state="translated">&lt;code&gt;withOptions&lt;/code&gt; メソッドを使用して、追加の&lt;a href=&quot;http://docs.guzzlephp.org/en/stable/request-options.html&quot;&gt;Guzzleリクエストオプション&lt;/a&gt;を指定できます。 &lt;code&gt;withOptions&lt;/code&gt; 方法は、キー/値のペアの配列を受け入れ：</target>
        </trans-unit>
        <trans-unit id="cacc44ca5c7d507359608ad272b9d9f6f3cddacf" translate="yes" xml:space="preserve">
          <source>You may specify basic and digest authentication credentials using the &lt;code&gt;withBasicAuth&lt;/code&gt; and &lt;code&gt;withDigestAuth&lt;/code&gt; methods, respectively:</source>
          <target state="translated">あなたは基本的に指定して使用して認証資格情報をダイジェストも &lt;code&gt;withBasicAuth&lt;/code&gt; と &lt;code&gt;withDigestAuth&lt;/code&gt; それぞれのメソッドを：</target>
        </trans-unit>
        <trans-unit id="5950cfb1d6cf3bc931d22ec9f1fb0c9b8538651b" translate="yes" xml:space="preserve">
          <source>You may specify how many models to retrieve per page by passing the amount as the first argument to the &lt;code&gt;paginate&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;paginate&lt;/code&gt; メソッドの最初の引数として金額を渡すことで、ページごとに取得するモデルの数を指定できます。</target>
        </trans-unit>
        <trans-unit id="5ee8ad570c60cf7a0e2e81b56afdd550be909da3" translate="yes" xml:space="preserve">
          <source>You may specify the guard instance you would like to use:</source>
          <target state="translated">使用するガードインスタンスを指定することができます。</target>
        </trans-unit>
        <trans-unit id="10a95feb414b344d5909ec474b6aee6037cfad6c" translate="yes" xml:space="preserve">
          <source>You may specify which attributes should be considered data variables using the &lt;code&gt;@props&lt;/code&gt; directive at the top of your component's Blade template. All other attributes on the component will be available via the component's attribute bag. If you wish to give a data variable a default value, you may specify the variable's name as the array key and the default value as the array value:</source>
          <target state="translated">コンポーネントのBladeテンプレートの上部にある &lt;code&gt;@props&lt;/code&gt; ディレクティブを使用して、データ変数と見なす属性を指定できます。コンポーネント上の他のすべての属性は、コンポーネントの属性バッグを介して利用できます。データ変数にデフォルト値を指定する場合は、変数の名前を配列キーとして指定し、デフォルト値を配列値として指定できます。</target>
        </trans-unit>
        <trans-unit id="3e048d0acc85b10e70a45e6362a4fc55c340f5ec" translate="yes" xml:space="preserve">
          <source>You may specify which guard instance you would like to utilize using the &lt;code&gt;guard&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. This allows you to manage authentication for separate parts of your application using entirely separate authenticatable models or user tables.</source>
          <target state="translated">&lt;code&gt;Auth&lt;/code&gt; ファサードの &lt;code&gt;guard&lt;/code&gt; メソッドを使用して、使用するガードインスタンスを指定できます。これにより、完全に別個の認証可能なモデルまたはユーザーテーブルを使用して、アプリケーションの別個の部分の認証を管理できます。</target>
        </trans-unit>
        <trans-unit id="20e2e23051072be86c7b6d433995bfa7f59036ae" translate="yes" xml:space="preserve">
          <source>You may still type-hint the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; and access your &lt;code&gt;id&lt;/code&gt; parameter by defining your controller method as follows:</source>
          <target state="translated">次のようにコントローラーメソッドを定義することで、 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; タイプヒントを引き続き入力し、 &lt;code&gt;id&lt;/code&gt; パラメーターにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="e94f29593cb7bfb6fe2bc24c791545c2463fd1e0" translate="yes" xml:space="preserve">
          <source>You may still type-hint the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; and access your route parameter &lt;code&gt;id&lt;/code&gt; by defining your controller method as follows:</source>
          <target state="translated">次のようにコントローラーメソッドを定義することで、 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; タイプヒントを引き続き行い、ルートパラメーター &lt;code&gt;id&lt;/code&gt; アクセスできます。</target>
        </trans-unit>
        <trans-unit id="08c7bc86768838d05016f6f0ab426ef2c45ea9fe" translate="yes" xml:space="preserve">
          <source>You may stop further chunks from being processed by returning &lt;code&gt;false&lt;/code&gt; from the &lt;code&gt;Closure&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Closure&lt;/code&gt; から &lt;code&gt;false&lt;/code&gt; を返すことで、それ以上のチャンクの処理を停止できます。</target>
        </trans-unit>
        <trans-unit id="8b949bd895dbf0b760caed2c4d5604098503b549" translate="yes" xml:space="preserve">
          <source>You may stop iterating through the items by returning &lt;code&gt;false&lt;/code&gt; from the callback:</source>
          <target state="translated">コールバックから &lt;code&gt;false&lt;/code&gt; を返すことで、アイテムの反復処理を停止できます。</target>
        </trans-unit>
        <trans-unit id="8275d3323f06cdea517a845bbdbb74db61fd31f7" translate="yes" xml:space="preserve">
          <source>You may test this command with the following test which utilizes the &lt;code&gt;expectsQuestion&lt;/code&gt;, &lt;code&gt;expectsOutput&lt;/code&gt;, and &lt;code&gt;assertExitCode&lt;/code&gt; methods:</source>
          <target state="translated">&lt;code&gt;expectsQuestion&lt;/code&gt; 、 &lt;code&gt;expectsOutput&lt;/code&gt; 、および &lt;code&gt;assertExitCode&lt;/code&gt; メソッドを利用する次のテストでこのコマンドをテストできます。</target>
        </trans-unit>
        <trans-unit id="70dd7daa22a72959c28cbeddc719b78859133061" translate="yes" xml:space="preserve">
          <source>You may then access the named &lt;code&gt;MessageBag&lt;/code&gt; instance from the &lt;code&gt;$errors&lt;/code&gt; variable:</source>
          <target state="translated">次に、 &lt;code&gt;$errors&lt;/code&gt; 変数から名前付きの &lt;code&gt;MessageBag&lt;/code&gt; インスタンスにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="85902157f19d8d87b51c07ccc76b166bf90275f1" translate="yes" xml:space="preserve">
          <source>You may then attach the rate limiter to your backup job using the &lt;code&gt;RateLimited&lt;/code&gt; middleware. Each time the job exceeds the rate limit, this middleware will release the job back to the queue with an appropriate delay based on the rate limit duration.</source>
          <target state="translated">次に、 &lt;code&gt;RateLimited&lt;/code&gt; ミドルウェアを使用して、バックアップジョブにレートリミッターをアタッチできます。ジョブがレート制限を超えるたびに、このミドルウェアは、レート制限期間に基づいて適切な遅延でジョブをキューに戻します。</target>
        </trans-unit>
        <trans-unit id="c085532b370c1629d7b330fc68f611bf2056b634" translate="yes" xml:space="preserve">
          <source>You may type-hint any dependencies you need within the &lt;code&gt;authorize&lt;/code&gt; method's signature. They will automatically be resolved via the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;authorize&lt;/code&gt; メソッドのシグネチャ内で必要な依存関係をタイプヒントで入力できます。Laravel &lt;a href=&quot;container&quot;&gt;サービスコンテナを&lt;/a&gt;介して自動的に解決されます。</target>
        </trans-unit>
        <trans-unit id="d7b704a44f804893f7df0e75b1d20d5cfaab16fa" translate="yes" xml:space="preserve">
          <source>You may type-hint any dependencies you need within the &lt;code&gt;rules&lt;/code&gt; method's signature. They will automatically be resolved via the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;rules&lt;/code&gt; メソッドのシグネチャ内で必要な依存関係をタイプヒントで入力できます。Laravel &lt;a href=&quot;container&quot;&gt;サービスコンテナを&lt;/a&gt;介して自動的に解決されます。</target>
        </trans-unit>
        <trans-unit id="56ba9ed74e8b422c49d3ae348fbe2581a80d5cdc" translate="yes" xml:space="preserve">
          <source>You may type-hint any dependencies you need within the &lt;code&gt;run&lt;/code&gt; method's signature. They will automatically be resolved via the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;run&lt;/code&gt; メソッドのシグネチャ内で必要な依存関係をタイプヒントで入力できます。Laravel &lt;a href=&quot;container&quot;&gt;サービスコンテナを&lt;/a&gt;介して自動的に解決されます。</target>
        </trans-unit>
        <trans-unit id="1088f6a0f49652be29ebd78cb69a0fee930d7daf" translate="yes" xml:space="preserve">
          <source>You may type-hint any required dependencies of the &lt;code&gt;report&lt;/code&gt; method and they will automatically be injected into the method by Laravel's &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;report&lt;/code&gt; メソッドの必要な依存関係をタイプヒントすると、Laravelの&lt;a href=&quot;container&quot;&gt;サービスコンテナ&lt;/a&gt;によってメソッドに自動的に挿入されます。</target>
        </trans-unit>
        <trans-unit id="9ebf0dba12d29ab1ef8bf15e2887ea5d0d37985f" translate="yes" xml:space="preserve">
          <source>You may type-hint dependencies for your service provider's &lt;code&gt;boot&lt;/code&gt; method. The &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt; will automatically inject any dependencies you need:</source>
          <target state="translated">サービスプロバイダーの &lt;code&gt;boot&lt;/code&gt; 方法の依存関係をタイプヒントすることができます。&lt;a href=&quot;container&quot;&gt;サービスコンテナは、&lt;/a&gt;自動的にあなたが必要なすべての依存関係を注入します。</target>
        </trans-unit>
        <trans-unit id="17bd7cf0ab135694a4da7a71f69469626a51c8f3" translate="yes" xml:space="preserve">
          <source>You may update your Valet installation using the &lt;code&gt;composer global update&lt;/code&gt; command in your terminal. After upgrading, it is good practice to run the &lt;code&gt;valet install&lt;/code&gt; command so Valet can make additional upgrades to your configuration files if necessary.</source>
          <target state="translated">端末で &lt;code&gt;composer global update&lt;/code&gt; コマンドを使用して、Valetインストールを更新できます。アップグレード後、 &lt;code&gt;valet install&lt;/code&gt; 必要に応じて構成ファイルをさらにアップグレードできるように、valet installコマンドを実行することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="2b4a1eea7cea23fd97388c5ba77b2e3af2a98bf3" translate="yes" xml:space="preserve">
          <source>You may use &quot;dot&quot; notation to execute a query against a nested relationship. For example, the following query will retrieve all posts that do not have comments and posts that have comments from authors that are not banned:</source>
          <target state="translated">入れ子になった関係に対してクエリを実行するには、&quot;ドット &quot;表記を使用することができます。例えば、以下のクエリは、コメントを持たない投稿と、禁止されていない著者のコメントを持つ投稿をすべて取得します。</target>
        </trans-unit>
        <trans-unit id="e5e18b7bf5e972b0bb70992d78484ce66b7716c3" translate="yes" xml:space="preserve">
          <source>You may use &quot;dot&quot; notation to execute a query against a nested relationship. For example, the following query will retrieve all posts with comments from authors that are not banned:</source>
          <target state="translated">入れ子になった関係に対してクエリを実行するには、&quot;ドット &quot;表記を使用することができます。例えば、以下のクエリは、禁止されていない著者からのコメントを持つすべての投稿を取得します。</target>
        </trans-unit>
        <trans-unit id="252e4f58dbf6879e2e5bf21e01266d0b1ab1663a" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;https://stripe.com/docs/stripe-cli&quot;&gt;the Stripe CLI&lt;/a&gt; to help test webhooks during local development.</source>
          <target state="translated">&lt;a href=&quot;https://stripe.com/docs/stripe-cli&quot;&gt;Stripe CLI&lt;/a&gt;を使用して、ローカル開発中にWebhookをテストできます。</target>
        </trans-unit>
        <trans-unit id="a8c21b403523c54219fafced94927a417bc7018e" translate="yes" xml:space="preserve">
          <source>You may use &lt;a href=&quot;valet#sharing-sites&quot;&gt;Valet's &lt;code&gt;share&lt;/code&gt; command&lt;/a&gt; to help test webhooks during local development.</source>
          <target state="translated">&lt;a href=&quot;valet#sharing-sites&quot;&gt;Valetの &lt;code&gt;share&lt;/code&gt; コマンド&lt;/a&gt;を使用して、ローカル開発中にWebhookをテストできます。</target>
        </trans-unit>
        <trans-unit id="0400b9f40a8e6f9a7225aaae3f3c137e060c777e" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;whereJsonContains&lt;/code&gt; to query JSON arrays (not supported on SQLite):</source>
          <target state="translated">あなたは使用することができます &lt;code&gt;whereJsonContains&lt;/code&gt; JSONアレイ（SQLiteの上ではサポートされません）を照会します：</target>
        </trans-unit>
        <trans-unit id="49c2c502e940ea537eb6ee31d621393242a25a93" translate="yes" xml:space="preserve">
          <source>You may use &lt;code&gt;whereJsonLength&lt;/code&gt; to query JSON arrays by their length:</source>
          <target state="translated">あなたは使用することができます &lt;code&gt;whereJsonLength&lt;/code&gt; その長さによってJSON配列を照会します：</target>
        </trans-unit>
        <trans-unit id="7e3af7054906a94ca3b3783c8ac30c1f0308944c" translate="yes" xml:space="preserve">
          <source>You may use Artisan's &lt;code&gt;dump-server&lt;/code&gt; command to intercept all &lt;code&gt;dump&lt;/code&gt; calls and display them in your console window instead of your browser.</source>
          <target state="translated">Artisanの &lt;code&gt;dump-server&lt;/code&gt; コマンドを使用して、すべての &lt;code&gt;dump&lt;/code&gt; 呼び出しをインターセプトし、ブラウザではなくコンソールウィンドウに表示できます。</target>
        </trans-unit>
        <trans-unit id="2fe5d31a0399bbe78f104c139398a96fcf8dc283" translate="yes" xml:space="preserve">
          <source>You may use Composer to install Horizon into your Laravel project:</source>
          <target state="translated">Composerを使って、LaravelプロジェクトにHorizonをインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="a1642e699a395cc2a0084953cfcee9e0ff42ab15" translate="yes" xml:space="preserve">
          <source>You may use Composer to install Telescope into your Laravel project:</source>
          <target state="translated">Composerを使って、TelescopeをLaravelプロジェクトにインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="f3cf3ce8d39bd358fd57f524021ea689806796c5" translate="yes" xml:space="preserve">
          <source>You may use Sanctum tokens to authenticate your mobile application's requests to your API. The process for authenticating mobile application requests is similar to authenticating third-party API requests; however, there are small differences in how you will issue the API tokens.</source>
          <target state="translated">Sanctum トークンを使用して、モバイルアプリケーションの API へのリクエストを認証することができます。モバイルアプリケーションのリクエストを認証するプロセスは、サードパーティの API リクエストを認証するのと似ていますが、API トークンを発行する方法には若干の違いがあります。</target>
        </trans-unit>
        <trans-unit id="6040fab5a0d6ba885e5b6082c5500b04189b0ccb" translate="yes" xml:space="preserve">
          <source>You may use a variety of other operators when writing a &lt;code&gt;where&lt;/code&gt; clause:</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 句を作成するときは、他のさまざまな演算子を使用できます。</target>
        </trans-unit>
        <trans-unit id="6eb5d2b448acd5d8522f9b996fef64e8a58acc45" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;$type&lt;/code&gt; parameter to add different constraints depending on the related model:</source>
          <target state="translated">&lt;code&gt;$type&lt;/code&gt; パラメーターを使用して、関連するモデルに応じて異なる制約を追加できます。</target>
        </trans-unit>
        <trans-unit id="7f81211564c4252e169c58be8f25af277a01b43c" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;.&lt;/code&gt; character to indicate if a component is nested deeper inside the &lt;code&gt;components&lt;/code&gt; directory. For example, assuming the component is defined at &lt;code&gt;resources/views/components/inputs/button.blade.php&lt;/code&gt;, you may render it like so:</source>
          <target state="translated">を使用できます &lt;code&gt;.&lt;/code&gt; コンポーネントが &lt;code&gt;components&lt;/code&gt; ディレクトリ内のより深い場所にネストされているかどうかを示す文字。たとえば、コンポーネントが &lt;code&gt;resources/views/components/inputs/button.blade.php&lt;/code&gt; で定義されていると仮定すると、次のようにレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="928621560a2a9b1524b8e1deca2f111aaa36518f" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;@method&lt;/code&gt; Blade directive to generate the &lt;code&gt;_method&lt;/code&gt; input:</source>
          <target state="translated">あなたは使用することができます &lt;code&gt;@method&lt;/code&gt; 生成するブレードディレクティブを &lt;code&gt;_method&lt;/code&gt; 入力：</target>
        </trans-unit>
        <trans-unit id="4ea3d753360406427c5d7e243ed05ff085679ba6" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;Mail&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent mail from being sent. You may then assert that &lt;a href=&quot;mail&quot;&gt;mailables&lt;/a&gt; were sent to users and even inspect the data they received. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="translated">&lt;code&gt;Mail&lt;/code&gt; ファサードの &lt;code&gt;fake&lt;/code&gt; 方法を使用して、メールが送信されないようにすることができます。次に、&lt;a href=&quot;mail&quot;&gt;郵送物&lt;/a&gt;がユーザーに送信されたと断言し、受信したデータを検査することもできます。偽物を使用する場合、テスト対象のコードが実行された後にアサーションが作成されます。</target>
        </trans-unit>
        <trans-unit id="075667148b2a4e5778f8269b41eef0e6602fd43e" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;Notification&lt;/code&gt; facade's &lt;code&gt;fake&lt;/code&gt; method to prevent notifications from being sent. You may then assert that &lt;a href=&quot;notifications&quot;&gt;notifications&lt;/a&gt; were sent to users and even inspect the data they received. When using fakes, assertions are made after the code under test is executed:</source>
          <target state="translated">通知が送信されないようにするには、 &lt;code&gt;Notification&lt;/code&gt; ファサードの &lt;code&gt;fake&lt;/code&gt; メソッドを使用できます。次に、&lt;a href=&quot;notifications&quot;&gt;通知&lt;/a&gt;がユーザーに送信されたことをアサートし、ユーザーが受信したデータを検査することもできます。偽物を使用する場合、テスト対象のコードが実行された後にアサーションが作成されます。</target>
        </trans-unit>
        <trans-unit id="78af318cf4d19a695cc73763f19af24a6c3fcada" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;Route::permanentRedirect&lt;/code&gt; method to return a &lt;code&gt;301&lt;/code&gt; status code:</source>
          <target state="translated">&lt;code&gt;Route::permanentRedirect&lt;/code&gt; メソッドを使用して &lt;code&gt;301&lt;/code&gt; ステータスコードを返すことができます。</target>
        </trans-unit>
        <trans-unit id="86de1001f2dc7f3b76c250531a7bb5c362684f1d" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;after&lt;/code&gt; method to define a callback to be executed after all other authorization checks:</source>
          <target state="translated">&lt;code&gt;after&lt;/code&gt; メソッドを使用して、他のすべての承認チェックの後に実行されるコールバックを定義できます。</target>
        </trans-unit>
        <trans-unit id="0ff3365f286a8f0252509e7dd64545589d0b484f" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;after&lt;/code&gt; method to define a callback to be executed after every authorization check. However, you may not modify the result of the authorization check from an &lt;code&gt;after&lt;/code&gt; callback:</source>
          <target state="translated">すべての承認チェックの後に実行されるコールバックを定義するには、 &lt;code&gt;after&lt;/code&gt; メソッドを使用できます。ただし、 &lt;code&gt;after&lt;/code&gt; コールバックから承認チェックの結果を変更することはできません。</target>
        </trans-unit>
        <trans-unit id="2eadad036c05af2f4cfb9904b06c9b2236a84df0" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;appendSlowly&lt;/code&gt; method to append text slowly:</source>
          <target state="translated">&lt;code&gt;appendSlowly&lt;/code&gt; メソッドを使用して、テキストをゆっくりと追加できます。</target>
        </trans-unit>
        <trans-unit id="de4737eb5145f8103aa49805ac026f09b7f39cb0" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;asStripeCustomer&lt;/code&gt; method if you want to return the customer object if the billable entity is already a customer within Stripe:</source>
          <target state="translated">請求可能なエンティティがすでにStripe内の顧客である場合に顧客オブジェクトを返したい場合は、 &lt;code&gt;asStripeCustomer&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="8057c820e70443cf4b479ebf89674464359ad592" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;component&lt;/code&gt; method to evaluate and render a blade component. Like the &lt;code&gt;view&lt;/code&gt; method, the &lt;code&gt;component&lt;/code&gt; method returns an instance of &lt;code&gt;Illuminate\Testing\TestView&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;component&lt;/code&gt; メソッドを使用して、ブレードコンポーネントを評価およびレンダリングできます。 &lt;code&gt;view&lt;/code&gt; メソッドと同様に、 &lt;code&gt;component&lt;/code&gt; メソッドは &lt;code&gt;Illuminate\Testing\TestView&lt;/code&gt; インスタンスを返します。</target>
        </trans-unit>
        <trans-unit id="a61fd8c61b48b28e3ab93bc477f8e53052ec3c14" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;cookie&lt;/code&gt; method to get or set an encrypted cookie's value:</source>
          <target state="translated">&lt;code&gt;cookie&lt;/code&gt; メソッドを使用して、暗号化されたcookieの値を取得または設定できます。</target>
        </trans-unit>
        <trans-unit id="afb30236b2f63ac1839bb288a75882e5ffd82d5e" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;createMany&lt;/code&gt; method to create multiple related models:</source>
          <target state="translated">&lt;code&gt;createMany&lt;/code&gt; メソッドを使用して、複数の関連モデルを作成できます。</target>
        </trans-unit>
        <trans-unit id="023833e0f74ebe42187910762a167c196d29825b" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;current&lt;/code&gt;, &lt;code&gt;currentRouteName&lt;/code&gt;, and &lt;code&gt;currentRouteAction&lt;/code&gt; methods on the &lt;code&gt;Route&lt;/code&gt; facade to access information about the route handling the incoming request:</source>
          <target state="translated">&lt;code&gt;Route&lt;/code&gt; ファサードの &lt;code&gt;current&lt;/code&gt; 、 &lt;code&gt;currentRouteName&lt;/code&gt; 、および &lt;code&gt;currentRouteAction&lt;/code&gt; メソッドを使用して、着信要求を処理するルートに関する情報にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="8de7f07fdd007a5bf5050aca05377aa2bc33353a" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;db:seed&lt;/code&gt; Artisan command to seed your database. By default, the &lt;code&gt;db:seed&lt;/code&gt; command runs the &lt;code&gt;DatabaseSeeder&lt;/code&gt; class, which may be used to call other seed classes. However, you may use the &lt;code&gt;--class&lt;/code&gt; option to specify a specific seeder class to run individually:</source>
          <target state="translated">&lt;code&gt;db:seed&lt;/code&gt; Artisanコマンドを使用して、データベースにシードを設定できます。デフォルトでは、 &lt;code&gt;db:seed&lt;/code&gt; コマンドは &lt;code&gt;DatabaseSeeder&lt;/code&gt; クラスを実行します。これは、他のシードクラスを呼び出すために使用できます。ただし、 &lt;code&gt;--class&lt;/code&gt; オプションを使用して、個別に実行する特定のシーダークラスを指定できます。</target>
        </trans-unit>
        <trans-unit id="8383e5802e91b1e8d053f8d59a99a773cd3e20df" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;dd&lt;/code&gt; or &lt;code&gt;dump&lt;/code&gt; methods while building a query to dump the query bindings and SQL. The &lt;code&gt;dd&lt;/code&gt; method will display the debug information and then stop executing the request. The &lt;code&gt;dump&lt;/code&gt; method will display the debug information but allow the request to keep executing:</source>
          <target state="translated">クエリの作成中に &lt;code&gt;dd&lt;/code&gt; メソッドまたは &lt;code&gt;dump&lt;/code&gt; メソッドを使用して、クエリバインディングとSQLをダンプできます。 &lt;code&gt;dd&lt;/code&gt; 方法は、デバッグ情報を表示し、要求の実行を停止します。 &lt;code&gt;dump&lt;/code&gt; メソッドは、デバッグ情報を表示しますが、要求が実行維持することができます：</target>
        </trans-unit>
        <trans-unit id="8dfcecc0a04416ac8bf871b7d59488a909a1294d" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;deleteCookie&lt;/code&gt; method to delete the given cookie:</source>
          <target state="translated">&lt;code&gt;deleteCookie&lt;/code&gt; メソッドを使用して、指定されたCookieを削除できます。</target>
        </trans-unit>
        <trans-unit id="eff1321a7b3fd6658abf0ce1063c4a3ac5af09c8" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;findInvoice&lt;/code&gt; method to retrieve a specific invoice:</source>
          <target state="translated">あなたは使用することができます &lt;code&gt;findInvoice&lt;/code&gt; の特定の請求書を取得する方法を：</target>
        </trans-unit>
        <trans-unit id="7f035a0a0d5f800a7d59ff303ae5f5d534f5393a" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;from&lt;/code&gt; and &lt;code&gt;to&lt;/code&gt; methods to customize the sender and recipient. The &lt;code&gt;from&lt;/code&gt; method accepts a username and emoji identifier, while the &lt;code&gt;to&lt;/code&gt; method accepts a channel or username:</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; メソッドと &lt;code&gt;to&lt;/code&gt; メソッドを使用して、送信者と受信者をカスタマイズできます。 &lt;code&gt;from&lt;/code&gt; ながらこの方法は、ユーザ名と絵文字識別子を受け付ける &lt;code&gt;to&lt;/code&gt; の方法は、チャネルまたはユーザ名を受け付けます。</target>
        </trans-unit>
        <trans-unit id="b9fc8f15e094f525aeb8de4f6b69d9e3bd0572e7" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;getLocale&lt;/code&gt; and &lt;code&gt;isLocale&lt;/code&gt; methods on the &lt;code&gt;App&lt;/code&gt; facade to determine the current locale or check if the locale is a given value:</source>
          <target state="translated">&lt;code&gt;App&lt;/code&gt; ファサードの &lt;code&gt;getLocale&lt;/code&gt; メソッドと &lt;code&gt;isLocale&lt;/code&gt; メソッドを使用して、現在のロケールを確認したり、ロケールが指定された値かどうかを確認したりできます。</target>
        </trans-unit>
        <trans-unit id="64886d30a321653c80d4606411d14795f34a95da" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;include&lt;/code&gt; method to alias the include from &lt;code&gt;includes.input&lt;/code&gt; to &lt;code&gt;input&lt;/code&gt;. Typically, this should be done in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; メソッドを使用して、 &lt;code&gt;includes.input&lt;/code&gt; から &lt;code&gt;input&lt;/code&gt; へのincludeのエイリアスを作成できます。通常、これは &lt;code&gt;AppServiceProvider&lt;/code&gt; の &lt;code&gt;boot&lt;/code&gt; メソッドで実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a47b51841e2bcde81aa3c957219a7d2e4a5ba58" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;inputValue&lt;/code&gt; method to get the &quot;value&quot; of an input element that has a given field name:</source>
          <target state="translated">&lt;code&gt;inputValue&lt;/code&gt; メソッドを使用して、指定されたフィールド名を持つ入力要素の「値」を取得できます。</target>
        </trans-unit>
        <trans-unit id="df4e2f81280d312515eb099b33c66249b71b6c00" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;joinSub&lt;/code&gt;, &lt;code&gt;leftJoinSub&lt;/code&gt;, and &lt;code&gt;rightJoinSub&lt;/code&gt; methods to join a query to a sub-query. Each of these methods receive three arguments: the sub-query, its table alias, and a Closure that defines the related columns:</source>
          <target state="translated">あなたは使用することができます &lt;code&gt;joinSub&lt;/code&gt; 、 &lt;code&gt;leftJoinSub&lt;/code&gt; 、および &lt;code&gt;rightJoinSub&lt;/code&gt; のサブクエリにクエリを参加させる方法を。これらの各メソッドは3つの引数を受け取ります。サブクエリ、そのテーブルエイリアス、および関連する列を定義するクロージャーです。</target>
        </trans-unit>
        <trans-unit id="647613259337b69d008b8216e6bcc52582175137" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;joinSub&lt;/code&gt;, &lt;code&gt;leftJoinSub&lt;/code&gt;, and &lt;code&gt;rightJoinSub&lt;/code&gt; methods to join a query to a subquery. Each of these methods receive three arguments: the subquery, its table alias, and a Closure that defines the related columns:</source>
          <target state="translated">あなたは使用することができます &lt;code&gt;joinSub&lt;/code&gt; 、 &lt;code&gt;leftJoinSub&lt;/code&gt; 、および &lt;code&gt;rightJoinSub&lt;/code&gt; のサブクエリにクエリを参加させる方法を。これらの各メソッドは、サブクエリ、そのテーブルエイリアス、および関連する列を定義するクロージャの3つの引数を受け取ります。</target>
        </trans-unit>
        <trans-unit id="b79a40143561c04fc75096fa4e2a726381d21c2f" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;lastPayment&lt;/code&gt; and &lt;code&gt;nextPayment&lt;/code&gt; methods to display a customer's past or upcoming payments for recurring subscriptions:</source>
          <target state="translated">あなたは使用することができ &lt;code&gt;lastPayment&lt;/code&gt; と &lt;code&gt;nextPayment&lt;/code&gt; サブスクリプションを繰り返しため、顧客の過去や今後の支払いを表示する方法を：</target>
        </trans-unit>
        <trans-unit id="b3709c4bff425553538640677f2b7eaeb1bcd020" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;make:policy&lt;/code&gt; command with the &lt;code&gt;--model&lt;/code&gt; option to quickly generate a policy class for a given model: &lt;code&gt;php artisan make:policy PostPolicy --model=Post&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;make:policy&lt;/code&gt; コマンドを &lt;code&gt;--model&lt;/code&gt; オプションとともに使用して、特定のモデルのポリシークラスをすばやく生成できます： &lt;code&gt;php artisan make:policy PostPolicy --model=Post&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e60f43264d4b413e1c1d5a1d08e5889f0e3c71a" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;make&lt;/code&gt; method to resolve a class instance out of the container. The &lt;code&gt;make&lt;/code&gt; method accepts the name of the class or interface you wish to resolve:</source>
          <target state="translated">&lt;code&gt;make&lt;/code&gt; メソッドを使用して、コンテナからクラスインスタンスを解決できます。 &lt;code&gt;make&lt;/code&gt; 方法は、あなたが解決したいクラスやインタフェースの名前を受け付けます。</target>
        </trans-unit>
        <trans-unit id="8f9d7334be91f3c297d8c44ef463d6b104c3a4b1" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;move&lt;/code&gt; method to move the browser window to a different position on your screen:</source>
          <target state="translated">&lt;code&gt;move&lt;/code&gt; メソッドを使用して、ブラウザウィンドウを画面上の別の位置に移動できます。</target>
        </trans-unit>
        <trans-unit id="9414c2f71dcbf8f3f8d64224df4cafa4d0e3ba03" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;newLine&lt;/code&gt; method to display a blank line:</source>
          <target state="translated">&lt;code&gt;newLine&lt;/code&gt; メソッドを使用して、空白行を表示できます。</target>
        </trans-unit>
        <trans-unit id="889514f5e36cf7aa3d3b8e3ce7d2fb6bd8d4ed03" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;once&lt;/code&gt; method to log a user into the application for a single request. No sessions or cookies will be utilized, which means this method may be helpful when building a stateless API:</source>
          <target state="translated">&lt;code&gt;once&lt;/code&gt; メソッドを使用して、1回のリクエストでユーザーをアプリケーションにログインできます。セッションやCookieは使用されません。つまり、このメソッドはステートレスAPIを構築するときに役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="fb49def633b1c0f9504dcebcb593dbd4d2fba701" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;partialMock&lt;/code&gt; method when you only need to mock a few methods of an object. The methods that are not mocked will be executed normally when called:</source>
          <target state="translated">オブジェクトのいくつかのメソッドのみをモックする必要がある場合は、 &lt;code&gt;partialMock&lt;/code&gt; メソッドを使用できます。モックされていないメソッドは、呼び出されたときに通常どおり実行されます。</target>
        </trans-unit>
        <trans-unit id="9b9adf941d77a66bcf0de69576154b4ef60f48d9" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;path&lt;/code&gt; method to get the path for a given file. If you are using the &lt;code&gt;local&lt;/code&gt; driver, this will return the absolute path to the file. If you are using the &lt;code&gt;s3&lt;/code&gt; driver, this method will return the relative path to the file in the S3 bucket:</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; メソッドを使用して、特定のファイルのパスを取得できます。 &lt;code&gt;local&lt;/code&gt; ドライバを使用している場合、これはファイルへの絶対パスを返します。 &lt;code&gt;s3&lt;/code&gt; ドライバーを使用している場合、このメソッドはS3バケット内のファイルへの相対パスを返します。</target>
        </trans-unit>
        <trans-unit id="d8b9d179aafa4145d40e0052a7052b53a3903686" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;plainCookie&lt;/code&gt; method to get or set an unencrypted cookie's value:</source>
          <target state="translated">&lt;code&gt;plainCookie&lt;/code&gt; メソッドを使用して、暗号化されていないCookieの値を取得または設定できます。</target>
        </trans-unit>
        <trans-unit id="b90247a5fd98f958edde9740a0e84fe4bf9b73c2" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;proxies&lt;/code&gt; command to list all site configuration that are proxied:</source>
          <target state="translated">&lt;code&gt;proxies&lt;/code&gt; コマンドを使用して、プロキシされるすべてのサイト構成を一覧表示できます。</target>
        </trans-unit>
        <trans-unit id="498e3b5ee5b060ffc33de4be2dd041114b3224e9" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;put&lt;/code&gt; method on the &lt;code&gt;Cache&lt;/code&gt; facade to store items in the cache. When you place an item in the cache, you need to specify the number of minutes for which the value should be cached:</source>
          <target state="translated">&lt;code&gt;Cache&lt;/code&gt; ファサードの &lt;code&gt;put&lt;/code&gt; メソッドを使用して、アイテムをキャッシュに保存できます。アイテムをキャッシュに配置するときは、値をキャッシュする分数を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e7bac5a4cb0f791a90823b2ebffa115cdb65c58a" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;put&lt;/code&gt; method on the &lt;code&gt;Cache&lt;/code&gt; facade to store items in the cache:</source>
          <target state="translated">&lt;code&gt;Cache&lt;/code&gt; ファサードの &lt;code&gt;put&lt;/code&gt; メソッドを使用して、アイテムをキャッシュに保存できます。</target>
        </trans-unit>
        <trans-unit id="d2fd767a266c06021269df6173d9c90fbca926d3" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;refresh&lt;/code&gt; method to refresh the page:</source>
          <target state="translated">&lt;code&gt;refresh&lt;/code&gt; メソッドを使用して、ページを更新できます。</target>
        </trans-unit>
        <trans-unit id="59a339d78d53d867cacf570d5d10872ec690e76a" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;rememberForever&lt;/code&gt; method to retrieve an item from the cache or store it forever:</source>
          <target state="translated">&lt;code&gt;rememberForever&lt;/code&gt; メソッドを使用して、キャッシュからアイテムを取得するか、アイテムを永久に保存できます。</target>
        </trans-unit>
        <trans-unit id="5ab2eaf7c837f8cc36ec13877916e3ac08d6fe47" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;resize&lt;/code&gt; method to adjust the size of the browser window:</source>
          <target state="translated">&lt;code&gt;resize&lt;/code&gt; メソッドを使用して、ブラウザウィンドウのサイズを調整できます。</target>
        </trans-unit>
        <trans-unit id="6a44ecc1fccc21efa513e1fc891c9ec107a896d4" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;resolveRelationUsing&lt;/code&gt; method to define relations between Eloquent models at runtime. While not typically recommended for normal application development, this may occasionally be useful when developing Laravel packages:</source>
          <target state="translated">&lt;code&gt;resolveRelationUsing&lt;/code&gt; メソッドを使用して、実行時にEloquentモデル間の関係を定義できます。通常のアプリケーション開発には通常推奨されませんが、これはLaravelパッケージを開発するときに役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="246c3b2042240ac169ffb27e0d177b0848243dda" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;route:clear&lt;/code&gt; command to clear the route cache:</source>
          <target state="translated">&lt;code&gt;route:clear&lt;/code&gt; コマンドを使用して、ルートキャッシュをクリアできます。</target>
        </trans-unit>
        <trans-unit id="0d15e9e0179d06f56bce5bc45e91b5539fb4e302" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;screenshot&lt;/code&gt; method to take a screenshot and store it with the given filename. All screenshots will be stored within the &lt;code&gt;tests/Browser/screenshots&lt;/code&gt; directory:</source>
          <target state="translated">&lt;code&gt;screenshot&lt;/code&gt; メソッドを使用してスクリーンショットを撮り、指定されたファイル名で保存できます。すべてのスクリーンショットは、 &lt;code&gt;tests/Browser/screenshots&lt;/code&gt; ディレクトリに保存されます。</target>
        </trans-unit>
        <trans-unit id="829750dfc989460c4a1aea38bcc139b10a83483e" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;script&lt;/code&gt; method to execute JavaScript within the browser:</source>
          <target state="translated">あなたは使用することができ &lt;code&gt;script&lt;/code&gt; ブラウザ内でJavaScriptを実行する方法を：</target>
        </trans-unit>
        <trans-unit id="0947804c3611eea90eef6432840856319960121c" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;sectionMissing&lt;/code&gt; directive to determine if a section does not have content:</source>
          <target state="translated">&lt;code&gt;sectionMissing&lt;/code&gt; ディレクティブを使用して、セクションにコンテンツがないかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="8a8baea37ee74ea7dca11bd5766b2019ddaa6454" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;seeLink&lt;/code&gt; method to determine if a link that has the given display text is visible on the page:</source>
          <target state="translated">&lt;code&gt;seeLink&lt;/code&gt; メソッドを使用して、指定された表示テキストを持つリンクがページに表示されているかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="88a34c6deb45ab761ae2d54bd2e2faaf89e7b82b" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;session:table&lt;/code&gt; Artisan command to generate this migration:</source>
          <target state="translated">このマイグレーションを生成するには、 &lt;code&gt;session:table&lt;/code&gt; Artisanコマンドを使用できます。</target>
        </trans-unit>
        <trans-unit id="0408f3c783454cfa2badad77a5c8021e2fa0cf27" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;storeConsoleLog&lt;/code&gt; method to write the console output to disk with the given filename. Console output will be stored within the &lt;code&gt;tests/Browser/console&lt;/code&gt; directory:</source>
          <target state="translated">&lt;code&gt;storeConsoleLog&lt;/code&gt; メソッドを使用して、指定されたファイル名でコンソール出力をディスクに書き込むことができます。コンソール出力は、 &lt;code&gt;tests/Browser/console&lt;/code&gt; ディレクトリに保存されます。</target>
        </trans-unit>
        <trans-unit id="e4d7374399a91af81385013dad39da28e38ba879" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;storeSource&lt;/code&gt; method to write the page's current source to disk with the given filename. The page source will be stored within the &lt;code&gt;tests/Browser/source&lt;/code&gt; directory:</source>
          <target state="translated">&lt;code&gt;storeSource&lt;/code&gt; メソッドを使用して、ページの現在のソースを指定されたファイル名でディスクに書き込むことができます。ページソースは、 &lt;code&gt;tests/Browser/source&lt;/code&gt; ディレクトリ内に保存されます。</target>
        </trans-unit>
        <trans-unit id="7a575dbc2ad35fddfc83d6e78d72b89c16feac66" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;table&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade to begin a query. The &lt;code&gt;table&lt;/code&gt; method returns a fluent query builder instance for the given table, allowing you to chain more constraints onto the query and then finally get the results using the &lt;code&gt;get&lt;/code&gt; method:</source>
          <target state="translated">クエリを開始するには、 &lt;code&gt;DB&lt;/code&gt; ファサードの &lt;code&gt;table&lt;/code&gt; メソッドを使用できます。 &lt;code&gt;table&lt;/code&gt; メソッドは、クエリにチェーン複数の制約にあなたをできるように、与えられたテーブルの流暢なクエリビルダインスタンスを返し、最後に使用して結果を得る &lt;code&gt;get&lt;/code&gt; メソッドを：</target>
        </trans-unit>
        <trans-unit id="0aa66c8fe39bd7557fe59eab5e103f74f5a75414" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;transaction&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade to run a set of operations within a database transaction. If an exception is thrown within the transaction &lt;code&gt;Closure&lt;/code&gt;, the transaction will automatically be rolled back. If the &lt;code&gt;Closure&lt;/code&gt; executes successfully, the transaction will automatically be committed. You don't need to worry about manually rolling back or committing while using the &lt;code&gt;transaction&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;DB&lt;/code&gt; ファサードの &lt;code&gt;transaction&lt;/code&gt; メソッドを使用して、データベーストランザクション内で一連の操作を実行できます。トランザクション &lt;code&gt;Closure&lt;/code&gt; 内で例外がスローされた場合、トランザクションは自動的にロールバックされます。場合は &lt;code&gt;Closure&lt;/code&gt; 正常に実行され、トランザクションが自動的にコミットされます。 &lt;code&gt;transaction&lt;/code&gt; メソッドの使用中に手動でロールバックまたはコミットすることを心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="cf09b870c019c9677dece6884c973593440dafa7" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;url&lt;/code&gt; method to get the URL for the given file. If you are using the &lt;code&gt;local&lt;/code&gt; driver, this will typically just prepend &lt;code&gt;/storage&lt;/code&gt; to the given path and return a relative URL to the file. If you are using the &lt;code&gt;s3&lt;/code&gt; driver, the fully qualified remote URL will be returned:</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; メソッドを使用して、指定されたファイルのURLを取得できます。 &lt;code&gt;local&lt;/code&gt; ドライバーを使用している場合、これは通常、指定されたパスの前に &lt;code&gt;/storage&lt;/code&gt; を追加し、ファイルへの相対URLを返します。 &lt;code&gt;s3&lt;/code&gt; ドライバーを使用している場合は、完全修飾リモートURLが返されます。</target>
        </trans-unit>
        <trans-unit id="2e91591d9ed84d21ceed84391a7032d2e7d39d13" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;url&lt;/code&gt; method to get the URL for the given file. If you are using the &lt;code&gt;local&lt;/code&gt; driver, this will typically just prepend &lt;code&gt;/storage&lt;/code&gt; to the given path and return a relative URL to the file. If you are using the &lt;code&gt;s3&lt;/code&gt; or &lt;code&gt;rackspace&lt;/code&gt; driver, the fully qualified remote URL will be returned:</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; メソッドを使用して、特定のファイルのURLを取得できます。 &lt;code&gt;local&lt;/code&gt; ドライバを使用している場合、これは通常、指定されたパスの前に &lt;code&gt;/storage&lt;/code&gt; を付加し、ファイルへの相対URLを返します。 &lt;code&gt;s3&lt;/code&gt; または &lt;code&gt;rackspace&lt;/code&gt; ドライバーを使用している場合、完全修飾リモートURLが返されます。</target>
        </trans-unit>
        <trans-unit id="af7112e5a7b0bf69e5bee0511f61105bbc1d809a" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;validateWithBag&lt;/code&gt; method to store the error messages in a &lt;a href=&quot;#named-error-bags&quot;&gt;named error bag&lt;/a&gt; if validation fails:</source>
          <target state="translated">検証が失敗した場合は、 &lt;code&gt;validateWithBag&lt;/code&gt; メソッドを使用して、&lt;a href=&quot;#named-error-bags&quot;&gt;名前付きエラーバッグに&lt;/a&gt;エラーメッセージを保存できます。</target>
        </trans-unit>
        <trans-unit id="34cac904b751b77c75b4873b562d7d4ef5fa0e35" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;validateWithBag&lt;/code&gt; method to validate a request and store any error messages within a &lt;a href=&quot;#named-error-bags&quot;&gt;named error bag&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;validateWithBag&lt;/code&gt; メソッドを使用して、リクエストを検証し、&lt;a href=&quot;#named-error-bags&quot;&gt;名前付きエラーバッグ&lt;/a&gt;内にエラーメッセージを保存できます。</target>
        </trans-unit>
        <trans-unit id="06a3eb82a3632a58c88833200e948c0a99b64238" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;view:clear&lt;/code&gt; command to clear the view cache:</source>
          <target state="translated">&lt;code&gt;view:clear&lt;/code&gt; コマンドを使用して、ビューキャッシュをクリアできます。</target>
        </trans-unit>
        <trans-unit id="51a74f2064f10df0301c45f635296585de15aac1" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;visitRoute&lt;/code&gt; method to navigate to a named route:</source>
          <target state="translated">&lt;code&gt;visitRoute&lt;/code&gt; メソッドを使用して、名前付きルートに移動できます。</target>
        </trans-unit>
        <trans-unit id="d6de676faee2bc3ef0d3e2442925217a6e360ad7" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;waitUntilMissingText&lt;/code&gt; method to wait until the displayed text has been removed from the page:</source>
          <target state="translated">&lt;code&gt;waitUntilMissingText&lt;/code&gt; メソッドを使用して、表示されたテキストがページから削除されるまで待つことができます。</target>
        </trans-unit>
        <trans-unit id="7365e4105b357cbb92b6059894f1fd75923e1f51" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;where&lt;/code&gt; method on a query builder instance to add &lt;code&gt;where&lt;/code&gt; clauses to the query. The most basic call to &lt;code&gt;where&lt;/code&gt; requires three arguments. The first argument is the name of the column. The second argument is an operator, which can be any of the database's supported operators. Finally, the third argument is the value to evaluate against the column.</source>
          <target state="translated">クエリビルダーインスタンス &lt;code&gt;where&lt;/code&gt; メソッドを使用して、クエリに &lt;code&gt;where&lt;/code&gt; 句を追加できます。 &lt;code&gt;where&lt;/code&gt; の最も基本的な呼び出しには3つの引数が必要です。最初の引数は列の名前です。2番目の引数は演算子で、データベースでサポートされている任意の演算子を使用できます。最後に、3番目の引数は、列に対して評価する値です。</target>
        </trans-unit>
        <trans-unit id="e64087a242a54e8bacd7a7181c11d2920c7cf8dd" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;withBody&lt;/code&gt; method if you would like to provide a raw request body when making a request:</source>
          <target state="translated">リクエストを行うときに生のリクエスト本文を提供する場合は、 &lt;code&gt;withBody&lt;/code&gt; メソッドを使用できます。</target>
        </trans-unit>
        <trans-unit id="fa5f9720cb34a8f19a7dc756f7027d2cb49aa90b" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;withCookie&lt;/code&gt; or &lt;code&gt;withCookies&lt;/code&gt; methods to set cookie values before making a request. The &lt;code&gt;withCookie&lt;/code&gt; method accepts a cookie name and value as its two arguments, while the &lt;code&gt;withCookies&lt;/code&gt; method accepts an array of name / value pairs:</source>
          <target state="translated">&lt;code&gt;withCookie&lt;/code&gt; または &lt;code&gt;withCookies&lt;/code&gt; メソッドを使用して、リクエストを行う前にCookie値を設定できます。 &lt;code&gt;withCookie&lt;/code&gt; のながら方法は、その2つの引数としてクッキーの名前と値を受け取り &lt;code&gt;withCookies&lt;/code&gt; の方法は、名前/値のペアの配列を受け入れ：</target>
        </trans-unit>
        <trans-unit id="099ffb1d0f33106df699443bf7c73e157c809a47" translate="yes" xml:space="preserve">
          <source>You may use the &lt;code&gt;withHeaders&lt;/code&gt; method to customize the request's headers before it is sent to the application. This allows you to add any custom headers you would like to the request:</source>
          <target state="translated">アプリケーションに送信される前に、 &lt;code&gt;withHeaders&lt;/code&gt; メソッドを使用してリクエストのヘッダーをカスタマイズできます。これにより、リクエストに必要なカスタムヘッダーを追加できます。</target>
        </trans-unit>
        <trans-unit id="79fe84e1cc7912794cab521dbdad67325935c82f" translate="yes" xml:space="preserve">
          <source>You may use the following commands on the schema builder to define the table's options:</source>
          <target state="translated">テーブルのオプションを定義するには、スキーマビルダーで以下のコマンドを使用することができます。</target>
        </trans-unit>
        <trans-unit id="a93ce245294a8f7234a85dfa17b9b21e7b23e83b" translate="yes" xml:space="preserve">
          <source>You may want to publish groups of package assets and resources separately. For instance, you might want to allow your users to publish your package's configuration files without being forced to publish your package's assets. You may do this by &quot;tagging&quot; them when calling the &lt;code&gt;publishes&lt;/code&gt; method from a package's service provider. For example, let's use tags to define two publish groups in the &lt;code&gt;boot&lt;/code&gt; method of a package service provider:</source>
          <target state="translated">パッケージアセットとリソースのグループを別々に公開することもできます。たとえば、パッケージのアセットを公開せずにユーザーがパッケージの設定ファイルを公開できるようにすることができます。これを行うには、パッケージのサービスプロバイダーから &lt;code&gt;publishes&lt;/code&gt; メソッドを呼び出すときにタグを付けます。たとえば、タグを使用して、パッケージサービスプロバイダーの &lt;code&gt;boot&lt;/code&gt; メソッドで2つの発行グループを定義してみましょう。</target>
        </trans-unit>
        <trans-unit id="ca405b5c22c216a0892e9712a1e03d6d96fbaa35" translate="yes" xml:space="preserve">
          <source>You may wish to create a &lt;code&gt;resources/views/emails&lt;/code&gt; directory to house all of your email templates; however, you are free to place them wherever you wish within your &lt;code&gt;resources/views&lt;/code&gt; directory.</source>
          <target state="translated">すべてのメールテンプレートを &lt;code&gt;resources/views/emails&lt;/code&gt; するresources / views / emailsディレクトリを作成することもできます。ただし、 &lt;code&gt;resources/views&lt;/code&gt; ディレクトリ内の任意の場所に自由に配置できます。</target>
        </trans-unit>
        <trans-unit id="259e9429cb79355c8fa2ae62547e5ca49d4a7940" translate="yes" xml:space="preserve">
          <source>You may write information to the logs using the &lt;code&gt;Log&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. As previously mentioned, the logger provides the eight logging levels defined in the &lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC 5424 specification&lt;/a&gt;: &lt;strong&gt;emergency&lt;/strong&gt;, &lt;strong&gt;alert&lt;/strong&gt;, &lt;strong&gt;critical&lt;/strong&gt;, &lt;strong&gt;error&lt;/strong&gt;, &lt;strong&gt;warning&lt;/strong&gt;, &lt;strong&gt;notice&lt;/strong&gt;, &lt;strong&gt;info&lt;/strong&gt; and &lt;strong&gt;debug&lt;/strong&gt;:</source>
          <target state="translated">&lt;code&gt;Log&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;ファサード&lt;/a&gt;を使用して、ログに情報を書き込むことができます。前述のように、ロガーは&lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC 5424仕様で&lt;/a&gt;定義されている8つのロギングレベルを提供します：&lt;strong&gt;緊急&lt;/strong&gt;、&lt;strong&gt;アラート&lt;/strong&gt;、&lt;strong&gt;クリティカル&lt;/strong&gt;、&lt;strong&gt;エラー&lt;/strong&gt;、&lt;strong&gt;警告&lt;/strong&gt;、&lt;strong&gt;通知&lt;/strong&gt;、&lt;strong&gt;情報&lt;/strong&gt;、&lt;strong&gt;デバッグ&lt;/strong&gt;：</target>
        </trans-unit>
        <trans-unit id="4dda4033e41e9c016511a3a555f5da76e351b4dd" translate="yes" xml:space="preserve">
          <source>You must add the &quot;domains&quot; for your Nginx sites to the &lt;code&gt;hosts&lt;/code&gt; file on your machine. The &lt;code&gt;hosts&lt;/code&gt; file will redirect requests for your Homestead sites into your Homestead machine. On Mac and Linux, this file is located at &lt;code&gt;/etc/hosts&lt;/code&gt;. On Windows, it is located at &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt;. The lines you add to this file will look like the following:</source>
          <target state="translated">Nginxサイトの「ドメイン」をマシンの &lt;code&gt;hosts&lt;/code&gt; ファイルに追加する必要があります。 &lt;code&gt;hosts&lt;/code&gt; ファイルには、あなたのホームステッドのマシンにあなたのホームステッドサイトの要求をリダイレクトします。 MacおよびLinuxでは、このファイルは &lt;code&gt;/etc/hosts&lt;/code&gt; にあります。 Windowsでは、 &lt;code&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt; 。このファイルに追加する行は、次のようになります。</target>
        </trans-unit>
        <trans-unit id="0e117c5414a496708b24682d4a5f87a137cbf6ee" translate="yes" xml:space="preserve">
          <source>You only need to place items in the &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; arrays if you wish to override the values from the main array. So, in this case, &lt;code&gt;192.168.1.1&lt;/code&gt; will be used as the host for the &quot;read&quot; connection, while &lt;code&gt;192.168.1.2&lt;/code&gt; will be used for the &quot;write&quot; connection. The database credentials, prefix, character set, and all other options in the main &lt;code&gt;mysql&lt;/code&gt; array will be shared across both connections.</source>
          <target state="translated">メイン配列の値をオーバーライドする場合は、 &lt;code&gt;read&lt;/code&gt; 配列と &lt;code&gt;write&lt;/code&gt; 配列に項目を配置するだけです。したがって、この場合、 &lt;code&gt;192.168.1.1&lt;/code&gt; は「読み取り」接続のホストとして使用され、 &lt;code&gt;192.168.1.2&lt;/code&gt; は「書き込み」接続のホストとして使用されます。データベースの資格情報、プレフィックス、文字セット、およびメインの &lt;code&gt;mysql&lt;/code&gt; アレイ内の他のすべてのオプションは、両方の接続で共有されます。</target>
        </trans-unit>
        <trans-unit id="33c9a301d89ef6c6cc0d3e1ba9debde3eeeed2f3" translate="yes" xml:space="preserve">
          <source>You only need to place items in the &lt;code&gt;read&lt;/code&gt; and &lt;code&gt;write&lt;/code&gt; arrays if you wish to override the values from the main array. So, in this case, &lt;code&gt;192.168.1.1&lt;/code&gt; will be used as the host for the &quot;read&quot; connection, while &lt;code&gt;192.168.1.3&lt;/code&gt; will be used for the &quot;write&quot; connection. The database credentials, prefix, character set, and all other options in the main &lt;code&gt;mysql&lt;/code&gt; array will be shared across both connections.</source>
          <target state="translated">メイン配列の値をオーバーライドする場合にのみ、 &lt;code&gt;read&lt;/code&gt; 配列と &lt;code&gt;write&lt;/code&gt; 配列に項目を配置する必要があります。したがって、この場合、 &lt;code&gt;192.168.1.1&lt;/code&gt; は「読み取り」接続のホストとして使用され、 &lt;code&gt;192.168.1.3&lt;/code&gt; は「書き込み」接続に使用されます。データベースの資格情報、プレフィックス、文字セット、およびメイン &lt;code&gt;mysql&lt;/code&gt; アレイ内の他のすべてのオプションは、両方の接続で共有されます。</target>
        </trans-unit>
        <trans-unit id="a982cc96fa9cb09f8836924621df7e8f15831848" translate="yes" xml:space="preserve">
          <source>You should also add the &lt;code&gt;deleted_at&lt;/code&gt; column to your database table. The Laravel &lt;a href=&quot;migrations&quot;&gt;schema builder&lt;/a&gt; contains a helper method to create this column:</source>
          <target state="translated">また、 &lt;code&gt;deleted_at&lt;/code&gt; 列をデータベーステーブルに追加する必要があります。Laravel&lt;a href=&quot;migrations&quot;&gt;スキーマビルダーに&lt;/a&gt;は、この列を作成するためのヘルパーメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="3efcffb0b3741d3ccbace96d047d8ddfbcd1f5b3" translate="yes" xml:space="preserve">
          <source>You should also prevent the Telescope package from being &lt;a href=&quot;packages#package-discovery&quot;&gt;auto-discovered&lt;/a&gt; by adding the following to your &lt;code&gt;composer.json&lt;/code&gt; file:</source>
          <target state="translated">また、 &lt;code&gt;composer.json&lt;/code&gt; ファイルに以下を追加して、Telescopeパッケージが&lt;a href=&quot;packages#package-discovery&quot;&gt;自動検出さ&lt;/a&gt;れないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="d562e49da57b08dc40b7d6d99c2e74526ac0a35a" translate="yes" xml:space="preserve">
          <source>You should always group &lt;code&gt;orWhere&lt;/code&gt; calls in order to avoid unexpected behavior when global scopes are applied.</source>
          <target state="translated">グローバルスコープが適用されるときの予期しない動作を回避するために、常に &lt;code&gt;orWhere&lt;/code&gt; 呼び出しをグループ化する必要があります。</target>
        </trans-unit>
        <trans-unit id="7e8e36955021106b13f1d0a45784b86c816db59d" translate="yes" xml:space="preserve">
          <source>You should always map individual projects to their own folder mapping instead of mapping your entire &lt;code&gt;~/code&lt;/code&gt; folder. When you map a folder the virtual machine must keep track of all disk IO for &lt;em&gt;every&lt;/em&gt; file in the folder. This leads to performance issues if you have a large number of files in a folder.</source>
          <target state="translated">&lt;code&gt;~/code&lt;/code&gt; フォルダー全体をマッピングするのではなく、常に個々のプロジェクトを独自のフォルダーマッピングにマッピングする必要があります。フォルダをマップする場合、仮想マシンはフォルダ内の&lt;em&gt;すべての&lt;/em&gt;ファイルのすべてのディスクIOを追跡する必要があります。これにより、フォルダ内に多数のファイルがある場合、パフォーマンスの問題が発生します。</target>
        </trans-unit>
        <trans-unit id="e04b790be99708471282b091d9a7298880d0c00d" translate="yes" xml:space="preserve">
          <source>You should avoid using the &lt;code&gt;__DIR__&lt;/code&gt; and &lt;code&gt;__FILE__&lt;/code&gt; constants in your Blade views, since they will refer to the location of the cached, compiled view.</source>
          <target state="translated">キャッシュされたコンパイル済みビューの場所を参照するため、ブレードビューで &lt;code&gt;__DIR__&lt;/code&gt; および &lt;code&gt;__FILE__&lt;/code&gt; 定数を使用しないでください。</target>
        </trans-unit>
        <trans-unit id="7833ae38f99b736a11197e6a36a80bba1fdf2d1b" translate="yes" xml:space="preserve">
          <source>You should check out a tagged version of Homestead since the &lt;code&gt;master&lt;/code&gt; branch may not always be stable. You can find the latest stable version on the &lt;a href=&quot;https://github.com/laravel/homestead/releases&quot;&gt;GitHub Release Page&lt;/a&gt;. Alternatively, you may checkout the &lt;code&gt;release&lt;/code&gt; branch which always contains the latest stable release:</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; ブランチが常に安定しているとは限らないため、タグ付きバージョンのHomesteadを確認する必要があります。最新の安定バージョンは&lt;a href=&quot;https://github.com/laravel/homestead/releases&quot;&gt;GitHubリリースページにあり&lt;/a&gt;ます。または、常に最新の安定版リリースが含まれている &lt;code&gt;release&lt;/code&gt; ブランチをチェックアウトすることもできます。</target>
        </trans-unit>
        <trans-unit id="1636f24bba7def3b58966361d3a3959c8a896df2" translate="yes" xml:space="preserve">
          <source>You should check out a tagged version of Homestead since the &lt;code&gt;master&lt;/code&gt; branch may not always be stable. You can find the latest stable version on the &lt;a href=&quot;https://github.com/laravel/homestead/releases&quot;&gt;GitHub Release Page&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; ブランチは常に安定しているとは限らないため、タグ付きバージョンのHomesteadをチェックアウトする必要があります。&lt;a href=&quot;https://github.com/laravel/homestead/releases&quot;&gt;GitHubリリースページで&lt;/a&gt;最新の安定バージョンを見つけることができます。</target>
        </trans-unit>
        <trans-unit id="3d4ccc9621a0dd8c9bc4e580227e861414043fb5" translate="yes" xml:space="preserve">
          <source>You should commit your database schema file to source control so that other new developers on your team may quickly create your application's initial database structure.</source>
          <target state="translated">あなたのチームの他の新しい開発者がアプリケーションの初期データベース構造を素早く作成できるように、データベーススキーマファイルをソースコントロールにコミットする必要があります。</target>
        </trans-unit>
        <trans-unit id="3c796c5c8678285c248de161317c3ef5228a5d1e" translate="yes" xml:space="preserve">
          <source>You should define the component's required data in its class constructor. All public properties on a component will automatically be made available to the component's view. It is not necessary to pass the data to the view from the component's &lt;code&gt;render&lt;/code&gt; method:</source>
          <target state="translated">コンポーネントの必要なデータは、そのクラスコンストラクターで定義する必要があります。コンポーネントのすべてのパブリックプロパティは、コンポーネントのビューで自動的に使用可能になります。コンポーネントの &lt;code&gt;render&lt;/code&gt; メソッドからビューにデータを渡す必要はありません。</target>
        </trans-unit>
        <trans-unit id="e94f4ba3873a0d079035838de948d4264a9869df" translate="yes" xml:space="preserve">
          <source>You should ensure that any route that performs an action that should require recent password confirmation is assigned the &lt;code&gt;password.confirm&lt;/code&gt; middleware. This middleware is included with the default installation of Laravel and will automatically store the user's intended destination in the session so that the user may be redirected to that location after confirming their password. After storing the user's intended destination in the session, the middleware will redirect the user to the &lt;code&gt;password.confirm&lt;/code&gt;&lt;a href=&quot;routing#named-routes&quot;&gt;named route&lt;/a&gt;:</source>
          <target state="translated">最近のパスワード確認を必要とするアクションを実行するルートには、 &lt;code&gt;password.confirm&lt;/code&gt; ミドルウェアが割り当てられていることを確認する必要があります。このミドルウェアはLaravelのデフォルトのインストールに含まれており、ユーザーがパスワードを確認した後にその場所にリダイレクトされるように、ユーザーの意図した宛先をセッションに自動的に保存します。ユーザーの意図した宛先をセッションに保存した後、ミドルウェアはユーザーを &lt;code&gt;password.confirm&lt;/code&gt; &lt;a href=&quot;routing#named-routes&quot;&gt;名前付きルートに&lt;/a&gt;リダイレクトします。</target>
        </trans-unit>
        <trans-unit id="cce8107e02c7068963de3af4c3cc35f968ed71ea" translate="yes" xml:space="preserve">
          <source>You should ensure that the &lt;code&gt;CreateFreshApiToken&lt;/code&gt; middleware is the last middleware listed in your middleware stack.</source>
          <target state="translated">You should ensure that the &lt;code&gt;CreateFreshApiToken&lt;/code&gt; middleware is the last middleware listed in your middleware stack.</target>
        </trans-unit>
        <trans-unit id="d372ce01fb0f42817fcc28a9bba002a7697a4d60" translate="yes" xml:space="preserve">
          <source>You should ensure that the &lt;code&gt;environments&lt;/code&gt; portion of your &lt;code&gt;horizon&lt;/code&gt; configuration file contains an entry for each environment on which you plan to run Horizon.</source>
          <target state="translated">You should ensure that the &lt;code&gt;environments&lt;/code&gt; portion of your &lt;code&gt;horizon&lt;/code&gt; configuration file contains an entry for each environment on which you plan to run Horizon.</target>
        </trans-unit>
        <trans-unit id="fbc5371629b2abe24b2392eea825a7fb67382c1d" translate="yes" xml:space="preserve">
          <source>You should ensure that the value of &lt;code&gt;stopwaitsecs&lt;/code&gt; is greater than the number of seconds consumed by your longest running job. Otherwise, Supervisor may kill the job before it is finished processing.</source>
          <target state="translated">You should ensure that the value of &lt;code&gt;stopwaitsecs&lt;/code&gt; is greater than the number of seconds consumed by your longest running job. Otherwise, Supervisor may kill the job before it is finished processing.</target>
        </trans-unit>
        <trans-unit id="1a25ba1e12c997b9cba5d0f0d2cb99569efc710e" translate="yes" xml:space="preserve">
          <source>You should ensure that your application's CORS configuration is returning the &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; header with a value of &lt;code&gt;True&lt;/code&gt; by setting the &lt;code&gt;supports_credentials&lt;/code&gt; option within your application's &lt;code&gt;cors&lt;/code&gt; configuration file to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">You should ensure that your application's CORS configuration is returning the &lt;code&gt;Access-Control-Allow-Credentials&lt;/code&gt; header with a value of &lt;code&gt;True&lt;/code&gt; by setting the &lt;code&gt;supports_credentials&lt;/code&gt; option within your application's &lt;code&gt;cors&lt;/code&gt; configuration file to &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3421cf8887cf013b592502bdefa1ca0ff5a0601b" translate="yes" xml:space="preserve">
          <source>You should ensure that your queue connection is set to &lt;code&gt;redis&lt;/code&gt; in your &lt;code&gt;queue&lt;/code&gt; configuration file.</source>
          <target state="translated">You should ensure that your queue connection is set to &lt;code&gt;redis&lt;/code&gt; in your &lt;code&gt;queue&lt;/code&gt; configuration file.</target>
        </trans-unit>
        <trans-unit id="7ce8d0b8f24929ba598d5a06f38e684ae40bf48c" translate="yes" xml:space="preserve">
          <source>You should ensure you change your &lt;code&gt;APP_ENV&lt;/code&gt; environment variable to &lt;code&gt;production&lt;/code&gt; in your production environment. Otherwise, your Telescope installation will be publicly available.</source>
          <target state="translated">You should ensure you change your &lt;code&gt;APP_ENV&lt;/code&gt; environment variable to &lt;code&gt;production&lt;/code&gt; in your production environment. Otherwise, your Telescope installation will be publicly available.</target>
        </trans-unit>
        <trans-unit id="dd30a4f348a14d6f4fb4f25c6d3b95293cceb49b" translate="yes" xml:space="preserve">
          <source>You should never mount &lt;code&gt;.&lt;/code&gt; (the current directory) when using Homestead. This causes Vagrant to not map the current folder to &lt;code&gt;/vagrant&lt;/code&gt; and will break optional features and cause unexpected results while provisioning.</source>
          <target state="translated">You should never mount &lt;code&gt;.&lt;/code&gt; (the current directory) when using Homestead. This causes Vagrant to not map the current folder to &lt;code&gt;/vagrant&lt;/code&gt; and will break optional features and cause unexpected results while provisioning.</target>
        </trans-unit>
        <trans-unit id="1ef2ebc386c2f00c4d41af245e8c414ae4c9fa57" translate="yes" xml:space="preserve">
          <source>You should never pass any user controlled request input into the &lt;code&gt;ignore&lt;/code&gt; method. Instead, you should only pass a system generated unique ID such as an auto-incrementing ID or UUID from an Eloquent model instance. Otherwise, your application will be vulnerable to an SQL injection attack.</source>
          <target state="translated">You should never pass any user controlled request input into the &lt;code&gt;ignore&lt;/code&gt; method. Instead, you should only pass a system generated unique ID such as an auto-incrementing ID or UUID from an Eloquent model instance. Otherwise, your application will be vulnerable to an SQL injection attack.</target>
        </trans-unit>
        <trans-unit id="3de0ed989ca1955866beb4b3b2b671443a9e4b89" translate="yes" xml:space="preserve">
          <source>You should not define Closures in your configuration files. They can not be serialized correctly when users execute the &lt;code&gt;config:cache&lt;/code&gt; Artisan command.</source>
          <target state="translated">構成ファイルでクロージャを定義しないでください。ユーザーが &lt;code&gt;config:cache&lt;/code&gt; Artisanコマンドを実行すると、これらは正しくシリアル化できません。</target>
        </trans-unit>
        <trans-unit id="59ae92c7ad53b4ce46c1d0b59edb72e20b28ef51" translate="yes" xml:space="preserve">
          <source>You should not define translation string keys that conflict with other translation file names. For example, translating &lt;code&gt;__('Action')&lt;/code&gt; for the &quot;NL&quot; locale while a &lt;code&gt;nl/action.php&lt;/code&gt; file exists but a &lt;code&gt;nl.json&lt;/code&gt; file does not exist will result in the translator returning the contents of &lt;code&gt;nl/action.php&lt;/code&gt;.</source>
          <target state="translated">You should not define translation string keys that conflict with other translation file names. For example, translating &lt;code&gt;__('Action')&lt;/code&gt; for the &quot;NL&quot; locale while a &lt;code&gt;nl/action.php&lt;/code&gt; file exists but a &lt;code&gt;nl.json&lt;/code&gt; file does not exist will result in the translator returning the contents of &lt;code&gt;nl/action.php&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dbc29b66e53078bab243902e4d5f1679f796ca69" translate="yes" xml:space="preserve">
          <source>You should not mock the &lt;code&gt;Request&lt;/code&gt; facade. Instead, pass the input you desire into the HTTP helper methods such as &lt;code&gt;get&lt;/code&gt; and &lt;code&gt;post&lt;/code&gt; when running your test. Likewise, instead of mocking the &lt;code&gt;Config&lt;/code&gt; facade, call the &lt;code&gt;Config::set&lt;/code&gt; method in your tests.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; ファサードをモック化しないでください。代わりに、テストの実行時に、必要な入力を &lt;code&gt;get&lt;/code&gt; や &lt;code&gt;post&lt;/code&gt; などのHTTPヘルパーメソッドに渡します。同様に、 &lt;code&gt;Config&lt;/code&gt; ファサードをモックする代わりに、テストで &lt;code&gt;Config::set&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="afdad27975ad542c24ec3c8ac517bcc08c36b505" translate="yes" xml:space="preserve">
          <source>You should not use API tokens to authenticate your own first-party SPA. Instead, use Sanctum's built-in &lt;a href=&quot;#spa-authentication&quot;&gt;SPA authentication&lt;/a&gt;.</source>
          <target state="translated">You should not use API tokens to authenticate your own first-party SPA. Instead, use Sanctum's built-in &lt;a href=&quot;#spa-authentication&quot;&gt;SPA authentication&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="18b699f500e8150a0d595f3a1038a3cefe8a14e3" translate="yes" xml:space="preserve">
          <source>You should only use the &lt;code&gt;@json&lt;/code&gt; directive to render existing variables as JSON. The Blade templating is based on regular expressions and attempts to pass a complex expression to the directive may cause unexpected failures.</source>
          <target state="translated">You should only use the &lt;code&gt;@json&lt;/code&gt; directive to render existing variables as JSON. The Blade templating is based on regular expressions and attempts to pass a complex expression to the directive may cause unexpected failures.</target>
        </trans-unit>
        <trans-unit id="32568d0eb8997613cca7c93e6e05e09215bc122f" translate="yes" xml:space="preserve">
          <source>You should only use these non-standard ports when connecting to the databases from your host machine. You will use the default 3306 and 5432 ports in your Laravel database configuration file since Laravel is running &lt;em&gt;within&lt;/em&gt; the virtual machine.</source>
          <target state="translated">ホストマシンからデータベースに接続する場合にのみ、これらの非標準ポートを使用する必要があります。Laravelは仮想マシン&lt;em&gt;内&lt;/em&gt;で実行さ&lt;em&gt;れ&lt;/em&gt;ているため、Laravelデータベース構成ファイルではデフォルトの3306および5432ポートを使用します。</target>
        </trans-unit>
        <trans-unit id="b6a8a0056b786da2d5690cd2b643ae8769bd24d2" translate="yes" xml:space="preserve">
          <source>You should typically run the &lt;code&gt;php artisan config:cache&lt;/code&gt; command as part of your production deployment routine. The command should not be run during local development as configuration options will frequently need to be changed during the course of your application's development.</source>
          <target state="translated">通常、 &lt;code&gt;php artisan config:cache&lt;/code&gt; コマンドを本番デプロイメントルーチンの一部として実行する必要があります。アプリケーションの開発中に構成オプションを頻繁に変更する必要があるため、ローカル開発中にコマンドを実行しないでください。</target>
        </trans-unit>
        <trans-unit id="69f7ec130cdcc574a15c7c039a8a016e7bba605a" translate="yes" xml:space="preserve">
          <source>You should use the &lt;code&gt;has&lt;/code&gt; method to determine if a value is present on the request. The &lt;code&gt;has&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the value is present on the request:</source>
          <target state="translated">&lt;code&gt;has&lt;/code&gt; メソッドを使用して、リクエストに値が存在するかどうかを確認する必要があります。 &lt;code&gt;has&lt;/code&gt; メソッドが返す &lt;code&gt;true&lt;/code&gt; 値がリクエストに存在する場合：</target>
        </trans-unit>
        <trans-unit id="287c6e9cfa5264a782af665236445449e239db30" translate="yes" xml:space="preserve">
          <source>You will also need the verification view stub. This view should be placed at &lt;code&gt;resources/views/auth/verify.blade.php&lt;/code&gt;. You may obtain the view's contents &lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Auth/Console/stubs/make/views/auth/verify.stub&quot;&gt;on GitHub&lt;/a&gt;.</source>
          <target state="translated">検証ビューのスタブも必要です。このビューは、 &lt;code&gt;resources/views/auth/verify.blade.php&lt;/code&gt; に配置する必要があります。ビューのコンテンツ&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Auth/Console/stubs/make/views/auth/verify.stub&quot;&gt;はGitHubで&lt;/a&gt;取得できます。</target>
        </trans-unit>
        <trans-unit id="1c97bea7a8468a6a9492b68040137e48ce0563b4" translate="yes" xml:space="preserve">
          <source>You will also need to configure an &lt;a href=&quot;https://api.slack.com/incoming-webhooks&quot;&gt;&quot;Incoming Webhook&quot;&lt;/a&gt; integration for your Slack team. This integration will provide you with a URL you may use when &lt;a href=&quot;#routing-slack-notifications&quot;&gt;routing Slack notifications&lt;/a&gt;.</source>
          <target state="translated">また、Slackチームの&lt;a href=&quot;https://api.slack.com/incoming-webhooks&quot;&gt;「着信Webhook」&lt;/a&gt;統合を構成する必要があります。この統合により、&lt;a href=&quot;#routing-slack-notifications&quot;&gt;Slack通知のルーティングに&lt;/a&gt;使用できるURLが提供されます。</target>
        </trans-unit>
        <trans-unit id="0f9a596bf00e8c53c7129773ab038fdfc08ddafb" translate="yes" xml:space="preserve">
          <source>You will also need to configure an &lt;a href=&quot;https://slack.com/apps/A0F7XDUAZ-incoming-webhooks&quot;&gt;&quot;Incoming Webhook&quot;&lt;/a&gt; integration for your Slack team. This integration will provide you with a URL you may use when &lt;a href=&quot;#routing-slack-notifications&quot;&gt;routing Slack notifications&lt;/a&gt;.</source>
          <target state="translated">You will also need to configure an &lt;a href=&quot;https://slack.com/apps/A0F7XDUAZ-incoming-webhooks&quot;&gt;&quot;Incoming Webhook&quot;&lt;/a&gt; integration for your Slack team. This integration will provide you with a URL you may use when &lt;a href=&quot;#routing-slack-notifications&quot;&gt;routing Slack notifications&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="12334753dffbb456a55514c57df917838afa05cf" translate="yes" xml:space="preserve">
          <source>You will also need to define an error message for your custom rule. You can do so either using an inline custom message array or by adding an entry in the validation language file. This message should be placed in the first level of the array, not within the &lt;code&gt;custom&lt;/code&gt; array, which is only for attribute-specific error messages:</source>
          <target state="translated">また、カスタムルールのエラーメッセージを定義する必要があります。インラインのカスタムメッセージ配列を使用するか、検証言語ファイルにエントリを追加することで、これを行うことができます。このメッセージは、 &lt;code&gt;custom&lt;/code&gt; 配列内ではなく、配列の最初のレベルに配置する必要があります。これは、属性固有のエラーメッセージ専用です。</target>
        </trans-unit>
        <trans-unit id="8348b2e350aa3310fc2bd526c5dc35ff90c07440" translate="yes" xml:space="preserve">
          <source>You will also need to modify your &lt;code&gt;App\User&lt;/code&gt; model to implement the &lt;code&gt;MustVerifyEmail&lt;/code&gt; contract:</source>
          <target state="translated">&lt;code&gt;MustVerifyEmail&lt;/code&gt; コントラクトを実装するには、 &lt;code&gt;App\User&lt;/code&gt; モデルを変更する必要もあります。</target>
        </trans-unit>
        <trans-unit id="7e2ed6d8cda127c9f4bc08a60bf0a6c144da172a" translate="yes" xml:space="preserve">
          <source>You will need to define routes to your controller methods:</source>
          <target state="translated">コントローラメソッドへのルートを定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="c4210b47ca2be44ce12f70626c40f05476532707" translate="yes" xml:space="preserve">
          <source>You will often be generating URLs using the primary key of &lt;a href=&quot;eloquent&quot;&gt;Eloquent models&lt;/a&gt;. For this reason, you may pass Eloquent models as parameter values. The &lt;code&gt;route&lt;/code&gt; helper will automatically extract the model's primary key:</source>
          <target state="translated">&lt;a href=&quot;eloquent&quot;&gt;Eloquentモデルの&lt;/a&gt;主キーを使用してURLを生成することがよくあります。このため、Eloquentモデルをパラメーター値として渡すことができます。 &lt;code&gt;route&lt;/code&gt; ヘルパーは自動的にモデルの主キーを抽出します。</target>
        </trans-unit>
        <trans-unit id="b5066f03e9fc1f35499d1db3caf8ccb095b67be0" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;.env&lt;/code&gt; file should not be committed to your application's source control, since each developer / server using your application could require a different environment configuration. Furthermore, this would be a security risk in the event an intruder gains access to your source control repository, since any sensitive credentials would get exposed.</source>
          <target state="translated">あなたの &lt;code&gt;.env&lt;/code&gt; のアプリケーションを使用して、各開発者/サーバが別の環境設定が必要な可能性があるため、ファイルは、アプリケーションのソース管理にコミットすべきではありません。さらに、機密情報が公開されるため、侵入者がソース管理リポジトリにアクセスした場合、これはセキュリティリスクになります。</target>
        </trans-unit>
        <trans-unit id="6abd83cd7979070d290dcb155cfc0e84d6323587" translate="yes" xml:space="preserve">
          <source>Your custom session driver should implement the &lt;code&gt;SessionHandlerInterface&lt;/code&gt;. This interface contains just a few simple methods we need to implement. A stubbed MongoDB implementation looks something like this:</source>
          <target state="translated">カスタムセッションドライバーは &lt;code&gt;SessionHandlerInterface&lt;/code&gt; を実装する必要があります。このインターフェースには、実装する必要があるいくつかの単純なメソッドが含まれています。スタブ化されたMongoDB実装は次のようになります。</target>
        </trans-unit>
        <trans-unit id="fb68f4f18695cb3e41395c71014c9c4f7788e522" translate="yes" xml:space="preserve">
          <source>Your event listeners may also type-hint any dependencies they need on their constructors. All event listeners are resolved via the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;, so dependencies will be injected automatically.</source>
          <target state="translated">また、イベントリスナーは、コンストラクターに必要な依存関係をタイプヒントで示す場合もあります。すべてのイベントリスナーはLaravel &lt;a href=&quot;container&quot;&gt;サービスコンテナ&lt;/a&gt;を介して解決されるため、依存関係は自動的に挿入されます。</target>
        </trans-unit>
        <trans-unit id="973836488770486d0863512dda034dab3ea41099" translate="yes" xml:space="preserve">
          <source>Your event must use the &lt;code&gt;Illuminate\Broadcasting\InteractsWithSockets&lt;/code&gt; trait in order to call the &lt;code&gt;toOthers&lt;/code&gt; method.</source>
          <target state="translated">イベントは、 &lt;code&gt;toOthers&lt;/code&gt; メソッドを呼び出すために &lt;code&gt;Illuminate\Broadcasting\InteractsWithSockets&lt;/code&gt; トレイトを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="6b92d792d20facbfcdd136cca4987e9902269aaa" translate="yes" xml:space="preserve">
          <source>Your package may have assets such as JavaScript, CSS, and images. To publish these assets to the application's &lt;code&gt;public&lt;/code&gt; directory, use the service provider's &lt;code&gt;publishes&lt;/code&gt; method. In this example, we will also add a &lt;code&gt;public&lt;/code&gt; asset group tag, which may be used to publish groups of related assets:</source>
          <target state="translated">パッケージには、JavaScript、CSS、画像などのアセットが含まれている場合があります。これらのアセットをアプリケーションの &lt;code&gt;public&lt;/code&gt; ディレクトリに公開するには、サービスプロバイダーの &lt;code&gt;publishes&lt;/code&gt; メソッドを使用します。この例では、関連するアセットのグループを公開するために使用できる &lt;code&gt;public&lt;/code&gt; アセットグループタグも追加します。</target>
        </trans-unit>
        <trans-unit id="7efe04d154690d59fee701c927b41acd844f8a1f" translate="yes" xml:space="preserve">
          <source>Zend</source>
          <target state="translated">Zend</target>
        </trans-unit>
        <trans-unit id="062e2ee2d262ecd2240ecf44fc5bf3c3f32d9e32" translate="yes" xml:space="preserve">
          <source>Zend Z-Ray</source>
          <target state="translated">ゼンド・ズレイ</target>
        </trans-unit>
        <trans-unit id="97e3dcfee88568ccfa73748cf5f0bca6ba6c715f" translate="yes" xml:space="preserve">
          <source>Zip the collection together with one or more arrays.</source>
          <target state="translated">コレクションを1つ以上の配列と一緒にZIPします。</target>
        </trans-unit>
        <trans-unit id="cfee675a504bb4d63e08844965191948a09ed016" translate="yes" xml:space="preserve">
          <source>[optional]</source>
          <target state="translated">[optional]</target>
        </trans-unit>
        <trans-unit id="0ba6871c0ed772fb683441aa622557bc320f0fa7" translate="yes" xml:space="preserve">
          <source>\Access</source>
          <target state="translated">\Access</target>
        </trans-unit>
        <trans-unit id="b598b7d0022ee9a8e972b2c4f568544f878a172e" translate="yes" xml:space="preserve">
          <source>\Auth\Access</source>
          <target state="translated">\Auth\Access</target>
        </trans-unit>
        <trans-unit id="6be1ff5f0034a3fd89f2d8c62ea875d1563ffa37" translate="yes" xml:space="preserve">
          <source>\Auth\Middleware</source>
          <target state="translated">\Auth\Middleware</target>
        </trans-unit>
        <trans-unit id="26619c95c499698e6156670334f5a7e16f5663ec" translate="yes" xml:space="preserve">
          <source>\Bootstrap</source>
          <target state="translated">\Bootstrap</target>
        </trans-unit>
        <trans-unit id="dbb80745726a624e054f010f13bd671879bd3d13" translate="yes" xml:space="preserve">
          <source>\Broadcasters</source>
          <target state="translated">\Broadcasters</target>
        </trans-unit>
        <trans-unit id="fb743f45af77798d1c24be40af0bafa61edf9c12" translate="yes" xml:space="preserve">
          <source>\Broadcasting</source>
          <target state="translated">\Broadcasting</target>
        </trans-unit>
        <trans-unit id="937fc6f93cb70822e247f9e93f2e11901cedcff5" translate="yes" xml:space="preserve">
          <source>\Cache</source>
          <target state="translated">\Cache</target>
        </trans-unit>
        <trans-unit id="3ad94d0d8bc5acb848a681fc131b712d07243e03" translate="yes" xml:space="preserve">
          <source>\Capsule</source>
          <target state="translated">\Capsule</target>
        </trans-unit>
        <trans-unit id="112e795778ca7eb400701f612dd59b7ab9c06276" translate="yes" xml:space="preserve">
          <source>\Channels</source>
          <target state="translated">\Channels</target>
        </trans-unit>
        <trans-unit id="fff0a81a8b9083ad2c7ee8372d277943d250d5b6" translate="yes" xml:space="preserve">
          <source>\Client</source>
          <target state="translated">\Client</target>
        </trans-unit>
        <trans-unit id="2b85c2f3133a1f29292ecbea04e0f7a6d38620d3" translate="yes" xml:space="preserve">
          <source>\Compilers</source>
          <target state="translated">\Compilers</target>
        </trans-unit>
        <trans-unit id="aefd9a6967f9f5a1517b6a37d2c8c4992672fb27" translate="yes" xml:space="preserve">
          <source>\Concerns</source>
          <target state="translated">\Concerns</target>
        </trans-unit>
        <trans-unit id="d4c47abccd0c7169d451b154a94a9b31f4d83416" translate="yes" xml:space="preserve">
          <source>\Config</source>
          <target state="translated">\Config</target>
        </trans-unit>
        <trans-unit id="5ffc087e85b22502788a86be338750dafab11a2a" translate="yes" xml:space="preserve">
          <source>\Connections</source>
          <target state="translated">\Connections</target>
        </trans-unit>
        <trans-unit id="fefc81114041cb4dbce93e1d86332fb92f741f80" translate="yes" xml:space="preserve">
          <source>\Connectors</source>
          <target state="translated">\Connectors</target>
        </trans-unit>
        <trans-unit id="c49053b354ff161d3cf09d0b08eb969a45c62f63" translate="yes" xml:space="preserve">
          <source>\Console</source>
          <target state="translated">\Console</target>
        </trans-unit>
        <trans-unit id="d46548433a8d754cd390c1dcf4ed79744f41514e" translate="yes" xml:space="preserve">
          <source>\Console\Factories</source>
          <target state="translated">\Console\Factories</target>
        </trans-unit>
        <trans-unit id="951aa0658b3f5217048fb02250d70d0004fd22bf" translate="yes" xml:space="preserve">
          <source>\Console\Migrations</source>
          <target state="translated">\Console\Migrations</target>
        </trans-unit>
        <trans-unit id="0da665f1de44d6e161238432c20d3760c73427e3" translate="yes" xml:space="preserve">
          <source>\Console\Presets</source>
          <target state="translated">\Console\Presets</target>
        </trans-unit>
        <trans-unit id="9fded808d8f76c1b850fed1cc1d6c8df988b3a8a" translate="yes" xml:space="preserve">
          <source>\Console\Seeds</source>
          <target state="translated">\Console\Seeds</target>
        </trans-unit>
        <trans-unit id="8be6e554b7d90b3f283a80f051c97952f1938dbd" translate="yes" xml:space="preserve">
          <source>\Constraints</source>
          <target state="translated">\Constraints</target>
        </trans-unit>
        <trans-unit id="5fbd55fc05ed74db0714c8ab8d5fce3bbd0acd79" translate="yes" xml:space="preserve">
          <source>\Container</source>
          <target state="translated">\Container</target>
        </trans-unit>
        <trans-unit id="26649016374836d678b4e100b9e9eee2691c8de3" translate="yes" xml:space="preserve">
          <source>\Contracts</source>
          <target state="translated">\Contracts</target>
        </trans-unit>
        <trans-unit id="f766f349fe09ccd62d041b0f2d7721c2cf0b149e" translate="yes" xml:space="preserve">
          <source>\Cookie</source>
          <target state="translated">\Cookie</target>
        </trans-unit>
        <trans-unit id="5bd3af0ae22b94b23b9419db6ce5cd51165d378c" translate="yes" xml:space="preserve">
          <source>\Database</source>
          <target state="translated">\Database</target>
        </trans-unit>
        <trans-unit id="beac46f4735612fed126bae6dfcefc1460931aea" translate="yes" xml:space="preserve">
          <source>\Database\Eloquent</source>
          <target state="translated">\Database\Eloquent</target>
        </trans-unit>
        <trans-unit id="cdd49957d5ff8627a2f4f25742bf98a6c88f0e4d" translate="yes" xml:space="preserve">
          <source>\Database\Events</source>
          <target state="translated">\Database\Events</target>
        </trans-unit>
        <trans-unit id="d3a36ccabd7479e3b308fa0630230430e9e7f3d0" translate="yes" xml:space="preserve">
          <source>\Debug</source>
          <target state="translated">\Debug</target>
        </trans-unit>
        <trans-unit id="251d6b3bf07d3e5eb9165b381bc25f42802fa03d" translate="yes" xml:space="preserve">
          <source>\Eloquent</source>
          <target state="translated">\Eloquent</target>
        </trans-unit>
        <trans-unit id="d791876b61d8034fb70cd6453a584302eebd9bd4" translate="yes" xml:space="preserve">
          <source>\Encryption</source>
          <target state="translated">\Encryption</target>
        </trans-unit>
        <trans-unit id="13f52b32f0b24a945e152680909a438142640477" translate="yes" xml:space="preserve">
          <source>\Engines</source>
          <target state="translated">\Engines</target>
        </trans-unit>
        <trans-unit id="2592bea1dec2a094c4866c2ae36713ff9151ec3c" translate="yes" xml:space="preserve">
          <source>\Events</source>
          <target state="translated">\Events</target>
        </trans-unit>
        <trans-unit id="dc5480484cbaf465e208c61c0eec83855e55a171" translate="yes" xml:space="preserve">
          <source>\Exceptions</source>
          <target state="translated">\Exceptions</target>
        </trans-unit>
        <trans-unit id="92d1bf2719418e850647515e7f644eb08250c4d6" translate="yes" xml:space="preserve">
          <source>\Facades</source>
          <target state="translated">\Facades</target>
        </trans-unit>
        <trans-unit id="82e8538b53d35be8dbeaa8eee773dbfda3c567c4" translate="yes" xml:space="preserve">
          <source>\Factories</source>
          <target state="translated">\Factories</target>
        </trans-unit>
        <trans-unit id="279a2ced33cbfe8c8e1a9f17af6a12661b8a996f" translate="yes" xml:space="preserve">
          <source>\Failed</source>
          <target state="translated">\Failed</target>
        </trans-unit>
        <trans-unit id="6222860b7c343d7ed373aee88e853630f35a7242" translate="yes" xml:space="preserve">
          <source>\Fakes</source>
          <target state="translated">\Fakes</target>
        </trans-unit>
        <trans-unit id="a2fbed259e48c5acfe9253e3705a7c871e9f12b3" translate="yes" xml:space="preserve">
          <source>\Filesystem</source>
          <target state="translated">\Filesystem</target>
        </trans-unit>
        <trans-unit id="7a429c99545bc43778d2bcb7d5332c8e135461df" translate="yes" xml:space="preserve">
          <source>\Foundation</source>
          <target state="translated">\Foundation</target>
        </trans-unit>
        <trans-unit id="4cadb6da059b71ec198ad02469f67e591a1022ea" translate="yes" xml:space="preserve">
          <source>\Grammars</source>
          <target state="translated">\Grammars</target>
        </trans-unit>
        <trans-unit id="145a9dff67e0a6c3afb960abbc6ee67b28e04491" translate="yes" xml:space="preserve">
          <source>\Hashing</source>
          <target state="translated">\Hashing</target>
        </trans-unit>
        <trans-unit id="4de7d953c6264ef364bedfd1eedd007c5acfdbf9" translate="yes" xml:space="preserve">
          <source>\Limiters</source>
          <target state="translated">\Limiters</target>
        </trans-unit>
        <trans-unit id="3a20e64f4e2c4bd9c79d3d11d47bdc17df119b05" translate="yes" xml:space="preserve">
          <source>\Listeners</source>
          <target state="translated">\Listeners</target>
        </trans-unit>
        <trans-unit id="ddb6447856921fd4dc5122c178126f973e110efc" translate="yes" xml:space="preserve">
          <source>\Matching</source>
          <target state="translated">\Matching</target>
        </trans-unit>
        <trans-unit id="88645e05a89cd1f1ba4b41fbe7ce7c52a99bc676" translate="yes" xml:space="preserve">
          <source>\Messages</source>
          <target state="translated">\Messages</target>
        </trans-unit>
        <trans-unit id="8545f988d1190368e7993e4597eda2c855fe2c64" translate="yes" xml:space="preserve">
          <source>\Middleware</source>
          <target state="translated">\Middleware</target>
        </trans-unit>
        <trans-unit id="90d2e257c9cbb12e275de6b4695e6ed489ae7fa2" translate="yes" xml:space="preserve">
          <source>\Migrations</source>
          <target state="translated">\Migrations</target>
        </trans-unit>
        <trans-unit id="f9f443908a4a2606785870f9246c7810c10a8a15" translate="yes" xml:space="preserve">
          <source>\Notifications</source>
          <target state="translated">\Notifications</target>
        </trans-unit>
        <trans-unit id="8e9d97da6d3e93838ebd93ee01df95d03cf0fe2f" translate="yes" xml:space="preserve">
          <source>\Pagination</source>
          <target state="translated">\Pagination</target>
        </trans-unit>
        <trans-unit id="9449d7bc1496b079dc105a2bb90a23868871eef5" translate="yes" xml:space="preserve">
          <source>\Passwords</source>
          <target state="translated">\Passwords</target>
        </trans-unit>
        <trans-unit id="8c1b8d8ac63b4733e7168301612c1c303e577aa5" translate="yes" xml:space="preserve">
          <source>\Pipeline</source>
          <target state="translated">\Pipeline</target>
        </trans-unit>
        <trans-unit id="8a083991630b258aecf4adaa97ab165de2ee2c0c" translate="yes" xml:space="preserve">
          <source>\Processors</source>
          <target state="translated">\Processors</target>
        </trans-unit>
        <trans-unit id="07459f1277e9be76ada98cafb3721142c275580e" translate="yes" xml:space="preserve">
          <source>\Providers</source>
          <target state="translated">\Providers</target>
        </trans-unit>
        <trans-unit id="8a24ae83de88f3acf417c71fee1179060afc27d1" translate="yes" xml:space="preserve">
          <source>\Query</source>
          <target state="translated">\Query</target>
        </trans-unit>
        <trans-unit id="ccddb2fd8459c3397fe20544c0b8182c8c627d50" translate="yes" xml:space="preserve">
          <source>\Queue</source>
          <target state="translated">\Queue</target>
        </trans-unit>
        <trans-unit id="a908d752cd495cabca82c7662e973d638753cb5e" translate="yes" xml:space="preserve">
          <source>\RateLimiting</source>
          <target state="translated">\RateLimiting</target>
        </trans-unit>
        <trans-unit id="df8091b0f5c218d6dd4cfc5cfaff7e45c0734235" translate="yes" xml:space="preserve">
          <source>\Redis</source>
          <target state="translated">\Redis</target>
        </trans-unit>
        <trans-unit id="85a2931c017d90c06e59408d6fb5ee74fea7e2ea" translate="yes" xml:space="preserve">
          <source>\Relations</source>
          <target state="translated">\Relations</target>
        </trans-unit>
        <trans-unit id="b55d0266f1228aa4da47662ea43957ddd399b306" translate="yes" xml:space="preserve">
          <source>\Resources</source>
          <target state="translated">\Resources</target>
        </trans-unit>
        <trans-unit id="642e4d07a145d209944de8009030df54be218e3b" translate="yes" xml:space="preserve">
          <source>\Routing</source>
          <target state="translated">\Routing</target>
        </trans-unit>
        <trans-unit id="7d5ada57b2d96eb493c182f16e6c79de658e30f9" translate="yes" xml:space="preserve">
          <source>\Rules</source>
          <target state="translated">\Rules</target>
        </trans-unit>
        <trans-unit id="4fb572c90de215bd6552660870772007b63d74b8" translate="yes" xml:space="preserve">
          <source>\Scheduling</source>
          <target state="translated">\Scheduling</target>
        </trans-unit>
        <trans-unit id="bebc9976b546f56ca1cf3efdf1f78d968e22e124" translate="yes" xml:space="preserve">
          <source>\Schema</source>
          <target state="translated">\Schema</target>
        </trans-unit>
        <trans-unit id="9128cfc999080b9b9ff7f3dc03b68ddca0f9515d" translate="yes" xml:space="preserve">
          <source>\Session</source>
          <target state="translated">\Session</target>
        </trans-unit>
        <trans-unit id="0d2c1cab19ff77633fa1625c3ce0f894a47962b8" translate="yes" xml:space="preserve">
          <source>\Support</source>
          <target state="translated">\Support</target>
        </trans-unit>
        <trans-unit id="8b84ea53b5c4cdb92fb38ecb00d66cf4ecd28881" translate="yes" xml:space="preserve">
          <source>\Testing</source>
          <target state="translated">\Testing</target>
        </trans-unit>
        <trans-unit id="e0ebe0992004d0fec4c8dd7c9e0089abf0a931f6" translate="yes" xml:space="preserve">
          <source>\Traits</source>
          <target state="translated">\Traits</target>
        </trans-unit>
        <trans-unit id="11adb627429f76a7850587dea7721208659366c8" translate="yes" xml:space="preserve">
          <source>\Translation</source>
          <target state="translated">\Translation</target>
        </trans-unit>
        <trans-unit id="e8a36b2116b89881366f2959ccd8faa052546ba3" translate="yes" xml:space="preserve">
          <source>\Transport</source>
          <target state="translated">\Transport</target>
        </trans-unit>
        <trans-unit id="9c0bf8c334a65f249258e4656c9100eff86eb99c" translate="yes" xml:space="preserve">
          <source>\Validation</source>
          <target state="translated">\Validation</target>
        </trans-unit>
        <trans-unit id="cb74c2310cda2eb9cf234e19e7e8c0f39a6f5f83" translate="yes" xml:space="preserve">
          <source>__call()</source>
          <target state="translated">__call()</target>
        </trans-unit>
        <trans-unit id="dcd5ce41cc846c4e80e4d2251af2fc2013ab66d3" translate="yes" xml:space="preserve">
          <source>__construct()</source>
          <target state="translated">__construct()</target>
        </trans-unit>
        <trans-unit id="f0f746b526913ea5dccf86f1c3822bb0c6fb9049" translate="yes" xml:space="preserve">
          <source>__construct(&lt;a href=&quot;../contracts/cache/repository&quot;&gt;Repository&lt;/a&gt; $repository, string $key = 'flysystem', int|null $expire = null)</source>
          <target state="translated">__construct（&lt;a href=&quot;../contracts/cache/repository&quot;&gt;リポジトリ&lt;/a&gt; $ repository、文字列$ key = 'flysystem'、int | null $ expire = null）</target>
        </trans-unit>
        <trans-unit id="6f89b8767f337aec4ba653185b734b416bc312cc" translate="yes" xml:space="preserve">
          <source>__construct(&lt;a href=&quot;batchfactory&quot;&gt;BatchFactory&lt;/a&gt; $factory, &lt;a href=&quot;../database/connection&quot;&gt;Connection&lt;/a&gt; $connection, string $table)</source>
          <target state="translated">__construct(&lt;a href=&quot;batchfactory&quot;&gt;BatchFactory&lt;/a&gt; $factory, &lt;a href=&quot;../database/connection&quot;&gt;Connection&lt;/a&gt; $connection, string $table)</target>
        </trans-unit>
        <trans-unit id="bc9a41a470b9c53d56af51020ec9aafd8ebb04bb" translate="yes" xml:space="preserve">
          <source>__get()</source>
          <target state="translated">__get()</target>
        </trans-unit>
        <trans-unit id="52237b9179b440b1c7b340ae2694a21b38e4491b" translate="yes" xml:space="preserve">
          <source>__isset()</source>
          <target state="translated">__isset()</target>
        </trans-unit>
        <trans-unit id="0f7791df0fd45b677d99fd35f9de1ea59337fd26" translate="yes" xml:space="preserve">
          <source>__set()</source>
          <target state="translated">__set()</target>
        </trans-unit>
        <trans-unit id="334dc8d8f34d10c4b7a768f2205229c02c62e022" translate="yes" xml:space="preserve">
          <source>__toString()</source>
          <target state="translated">__toString()</target>
        </trans-unit>
        <trans-unit id="3b50a08e62f19274ed399a32915bea0c2bf16196" translate="yes" xml:space="preserve">
          <source>__unset()</source>
          <target state="translated">__unset()</target>
        </trans-unit>
        <trans-unit id="8b14c5012f9166b813e9fd35d178e86e729dcfa1" translate="yes" xml:space="preserve">
          <source>able::__call()</source>
          <target state="translated">able::__call()</target>
        </trans-unit>
        <trans-unit id="b5af93e56708f35ef7cbfaea6be5f34df01d102c" translate="yes" xml:space="preserve">
          <source>able::addressesToArray()</source>
          <target state="translated">able::addressesToArray()</target>
        </trans-unit>
        <trans-unit id="658b02fe76dd66f2c60ff1a7b1b3925d3c491f89" translate="yes" xml:space="preserve">
          <source>able::attach()</source>
          <target state="translated">able::attach()</target>
        </trans-unit>
        <trans-unit id="8677f3ebf80c6ea3e0f6f9154761b433ed5e967e" translate="yes" xml:space="preserve">
          <source>able::attachData()</source>
          <target state="translated">able::attachData()</target>
        </trans-unit>
        <trans-unit id="50a8ad564e5f7fe439f0938c99443d99f57b4977" translate="yes" xml:space="preserve">
          <source>able::attachFromStorage()</source>
          <target state="translated">able::attachFromStorage()</target>
        </trans-unit>
        <trans-unit id="e5c65d58b5e7585b9d8f945a377e5c9d33fe7137" translate="yes" xml:space="preserve">
          <source>able::attachFromStorageDisk()</source>
          <target state="translated">able::attachFromStorageDisk()</target>
        </trans-unit>
        <trans-unit id="ec92959648de2c750ff5a6d6fefbc5fd430cfe84" translate="yes" xml:space="preserve">
          <source>able::bcc()</source>
          <target state="translated">able::bcc()</target>
        </trans-unit>
        <trans-unit id="ef4911a4d665598945a7fd1ab9e17894f54d6b65" translate="yes" xml:space="preserve">
          <source>able::buildAttachments()</source>
          <target state="translated">able::buildAttachments()</target>
        </trans-unit>
        <trans-unit id="6e08ec70f4c2fb9d7517c938726e5baa4fe26c51" translate="yes" xml:space="preserve">
          <source>able::buildDiskAttachments()</source>
          <target state="translated">able::buildDiskAttachments()</target>
        </trans-unit>
        <trans-unit id="d02eb946df498a79ce5a46bd57f5a7f2889a1641" translate="yes" xml:space="preserve">
          <source>able::buildFrom()</source>
          <target state="translated">able::buildFrom()</target>
        </trans-unit>
        <trans-unit id="4cff9a28ea222aca3db37089c286934c60d8c32f" translate="yes" xml:space="preserve">
          <source>able::buildMarkdownText()</source>
          <target state="translated">able::buildMarkdownText()</target>
        </trans-unit>
        <trans-unit id="52518dccdca939860c2d7956c2e851372be3804d" translate="yes" xml:space="preserve">
          <source>able::buildMarkdownView()</source>
          <target state="translated">able::buildMarkdownView()</target>
        </trans-unit>
        <trans-unit id="8e8ffb213dbd187a97a31929458614b85d815460" translate="yes" xml:space="preserve">
          <source>able::buildRecipients()</source>
          <target state="translated">able::buildRecipients()</target>
        </trans-unit>
        <trans-unit id="10b96179ba2b7390476f94e9843f536a4cbcac41" translate="yes" xml:space="preserve">
          <source>able::buildSubject()</source>
          <target state="translated">able::buildSubject()</target>
        </trans-unit>
        <trans-unit id="876d2d8f3ffd144bf2cfd2f259082b0529eac69b" translate="yes" xml:space="preserve">
          <source>able::buildView()</source>
          <target state="translated">able::buildView()</target>
        </trans-unit>
        <trans-unit id="98e2f6bf816e7758dae0cf24b5cb694975213f94" translate="yes" xml:space="preserve">
          <source>able::buildViewData()</source>
          <target state="translated">able::buildViewData()</target>
        </trans-unit>
        <trans-unit id="876daa72bcd930f7bcf6ba0d3e17d048fb5a5fd8" translate="yes" xml:space="preserve">
          <source>able::buildViewDataUsing()</source>
          <target state="translated">able::buildViewDataUsing()</target>
        </trans-unit>
        <trans-unit id="d90711a2e6099b3b9d17e05870389841ba9ecd05" translate="yes" xml:space="preserve">
          <source>able::cc()</source>
          <target state="translated">able::cc()</target>
        </trans-unit>
        <trans-unit id="62c2a3a2f6846d4306ad6eaf749ea6434e33cd84" translate="yes" xml:space="preserve">
          <source>able::from()</source>
          <target state="translated">able::from()</target>
        </trans-unit>
        <trans-unit id="026f7bd0e23db1769ca5536e80a2401784bdade3" translate="yes" xml:space="preserve">
          <source>able::hasBcc()</source>
          <target state="translated">able::hasBcc()</target>
        </trans-unit>
        <trans-unit id="d0f19874d4b51e0cbda38635c605114d4f43efc9" translate="yes" xml:space="preserve">
          <source>able::hasCc()</source>
          <target state="translated">able::hasCc()</target>
        </trans-unit>
        <trans-unit id="cacb5e021b29a327da0332d47421103c462b9288" translate="yes" xml:space="preserve">
          <source>able::hasFrom()</source>
          <target state="translated">able::hasFrom()</target>
        </trans-unit>
        <trans-unit id="2b4da08c07e5f914143defdbf0aa574bb867e53a" translate="yes" xml:space="preserve">
          <source>able::hasRecipient()</source>
          <target state="translated">able::hasRecipient()</target>
        </trans-unit>
        <trans-unit id="8c72f984b8cb67ef1a4944ab1778066ac34af316" translate="yes" xml:space="preserve">
          <source>able::hasReplyTo()</source>
          <target state="translated">able::hasReplyTo()</target>
        </trans-unit>
        <trans-unit id="e5a3c41116b41111160a0f54d7cf49360fc54c3b" translate="yes" xml:space="preserve">
          <source>able::hasTo()</source>
          <target state="translated">able::hasTo()</target>
        </trans-unit>
        <trans-unit id="69bf5b98a5c7befbe4cb900e5ca8dcbca5fb5261" translate="yes" xml:space="preserve">
          <source>able::html()</source>
          <target state="translated">able::html()</target>
        </trans-unit>
        <trans-unit id="2b1b91081df6d4bd8a5e36fb56a0f67d6e2047c7" translate="yes" xml:space="preserve">
          <source>able::later()</source>
          <target state="translated">able::later()</target>
        </trans-unit>
        <trans-unit id="c8cbe0054ff7f512abb88637ebb9874533ede892" translate="yes" xml:space="preserve">
          <source>able::locale()</source>
          <target state="translated">able::locale()</target>
        </trans-unit>
        <trans-unit id="df544d26bc2ae20830d61214c2722d39788b9cf9" translate="yes" xml:space="preserve">
          <source>able::mailer()</source>
          <target state="translated">able::mailer()</target>
        </trans-unit>
        <trans-unit id="2870adcfb8542dfdcd0edf47a0da8c9c13f635ab" translate="yes" xml:space="preserve">
          <source>able::markdown()</source>
          <target state="translated">able::markdown()</target>
        </trans-unit>
        <trans-unit id="ab80f4a9d3ec4a9cde927c0d160fee151ce77989" translate="yes" xml:space="preserve">
          <source>able::newQueuedJob()</source>
          <target state="translated">able::newQueuedJob()</target>
        </trans-unit>
        <trans-unit id="4e229c0a6539ab0e2cd67de8c21f8a8f2ee3f51c" translate="yes" xml:space="preserve">
          <source>able::normalizeRecipient()</source>
          <target state="translated">able::normalizeRecipient()</target>
        </trans-unit>
        <trans-unit id="9c05effaba0bd538128d00242dc92f1c9619fa83" translate="yes" xml:space="preserve">
          <source>able::priority()</source>
          <target state="translated">able::priority()</target>
        </trans-unit>
        <trans-unit id="740a2f614eb7ace6661413a2d4c9b424ea796526" translate="yes" xml:space="preserve">
          <source>able::queue()</source>
          <target state="translated">able::queue()</target>
        </trans-unit>
        <trans-unit id="7dd42552cecb271797bbcb2b765da212a89d6b34" translate="yes" xml:space="preserve">
          <source>able::render()</source>
          <target state="translated">able::render()</target>
        </trans-unit>
        <trans-unit id="1ca8f6cf43c571918f8f30c52d0801774400b214" translate="yes" xml:space="preserve">
          <source>able::replyTo()</source>
          <target state="translated">able::replyTo()</target>
        </trans-unit>
        <trans-unit id="fd97d2d1690ce72787e08a4a21baa6e5a81fd727" translate="yes" xml:space="preserve">
          <source>able::runCallbacks()</source>
          <target state="translated">able::runCallbacks()</target>
        </trans-unit>
        <trans-unit id="df09a3b1224ff043732b2ee7724e532fb6e9c538" translate="yes" xml:space="preserve">
          <source>able::send()</source>
          <target state="translated">able::send()</target>
        </trans-unit>
        <trans-unit id="5cc6c86e0fa11c2174e1c8c3f1b2b66ad1b064d8" translate="yes" xml:space="preserve">
          <source>able::setAddress()</source>
          <target state="translated">able::setAddress()</target>
        </trans-unit>
        <trans-unit id="233cb59c2cc5eb8ab8bcee7b1c4fa0c361a74e85" translate="yes" xml:space="preserve">
          <source>able::subject()</source>
          <target state="translated">able::subject()</target>
        </trans-unit>
        <trans-unit id="1c1ddba0001ef4a70f986bcc3e25e3e2f6a158f0" translate="yes" xml:space="preserve">
          <source>able::text()</source>
          <target state="translated">able::text()</target>
        </trans-unit>
        <trans-unit id="212e0e084e1ddffb10bae167cda33c1cb6fe8bc8" translate="yes" xml:space="preserve">
          <source>able::to()</source>
          <target state="translated">able::to()</target>
        </trans-unit>
        <trans-unit id="96d49d1dc47d5d09569946a101dbb2d428a997ca" translate="yes" xml:space="preserve">
          <source>able::view()</source>
          <target state="translated">able::view()</target>
        </trans-unit>
        <trans-unit id="85d4ea4a41f9b8bf1fd86fb07de877423c89e276" translate="yes" xml:space="preserve">
          <source>able::when()</source>
          <target state="translated">able::when()</target>
        </trans-unit>
        <trans-unit id="8bd273c7cec2925dfef5d97b56d313b07ef7cd1f" translate="yes" xml:space="preserve">
          <source>able::with()</source>
          <target state="translated">able::with()</target>
        </trans-unit>
        <trans-unit id="4cdefa325be08cb0c3a169808f113ff3af9e2bc1" translate="yes" xml:space="preserve">
          <source>able::withSwiftMessage()</source>
          <target state="translated">able::withSwiftMessage()</target>
        </trans-unit>
        <trans-unit id="cecbf2401f7803ca40eb0e87c1513e3626bc556e" translate="yes" xml:space="preserve">
          <source>abstract                &lt;a href=&quot;../contracts/view/view&quot;&gt;View&lt;/a&gt;|&lt;a href=&quot;../contracts/support/htmlable&quot;&gt;Htmlable&lt;/a&gt;|&lt;a href=&quot;https://www.php.net/Closure&quot;&gt;Closure&lt;/a&gt;|string
    render()</source>
          <target state="translated">abstract &lt;a href=&quot;../contracts/view/view&quot;&gt;View&lt;/a&gt;|&lt;a href=&quot;../contracts/support/htmlable&quot;&gt;Htmlable&lt;/a&gt;|&lt;a href=&quot;https://www.php.net/Closure&quot;&gt;Closure&lt;/a&gt;|string render()</target>
        </trans-unit>
        <trans-unit id="5bff189f4104dbb9d013463a03ef8c93542bddc1" translate="yes" xml:space="preserve">
          <source>abstract                HttpKernelInterface
    createApplication()</source>
          <target state="translated">抽象 HttpKernelInterface createApplication()</target>
        </trans-unit>
        <trans-unit id="85cc8b64a8bce6a0276e0ecb45703762cd920ec6" translate="yes" xml:space="preserve">
          <source>abstract                array
    definition()</source>
          <target state="translated">抽象配列定義</target>
        </trans-unit>
        <trans-unit id="33afb9de2a2f034287b7dcf3490ee83e78854dcb" translate="yes" xml:space="preserve">
          <source>abstract                array
    hosts()</source>
          <target state="translated">抽象配列hosts()</target>
        </trans-unit>
        <trans-unit id="920f7d3a614c06cef6461e7081ff370a7fc73657" translate="yes" xml:space="preserve">
          <source>abstract                array
    initRelation(array $models, string $relation)</source>
          <target state="translated">抽象的な配列 initRelation(array $models,string $relation)</target>
        </trans-unit>
        <trans-unit id="55e127596a9823306f4822e0c0d223d34e32b5a8" translate="yes" xml:space="preserve">
          <source>abstract                array
    match(array $models, &lt;a href=&quot;../collection&quot;&gt;Collection&lt;/a&gt; $results, string $relation)</source>
          <target state="translated">抽象配列の一致（配列$モデル、&lt;a href=&quot;../collection&quot;&gt;コレクション&lt;/a&gt; $結果、文字列$関係）</target>
        </trans-unit>
        <trans-unit id="2785c48c66de2ff1830d6aef1bb14d430b84f33d" translate="yes" xml:space="preserve">
          <source>abstract                bool
    acquire()</source>
          <target state="translated">抽象的なbool acquire()</target>
        </trans-unit>
        <trans-unit id="89e5b2fe2abcc10c9f78b7c03ac872a81b86ebbd" translate="yes" xml:space="preserve">
          <source>abstract                mixed
    getParentKey()</source>
          <target state="translated">抽象的な混合物の getParentKey()</target>
        </trans-unit>
        <trans-unit id="4f73537a9c461118bdf6e817da1254d9ade4883f" translate="yes" xml:space="preserve">
          <source>abstract                mixed
    getResults()</source>
          <target state="translated">抽象的な混合物の getResults()</target>
        </trans-unit>
        <trans-unit id="8b58eacfc589dd8324c51f990107e18cf838a30d" translate="yes" xml:space="preserve">
          <source>abstract                string
    getDefaultDriver()</source>
          <target state="translated">抽象文字列 getDefaultDriver()</target>
        </trans-unit>
        <trans-unit id="78270067ae8c92aaa8cf4ab36efa6729a4bd00ef" translate="yes" xml:space="preserve">
          <source>abstract                string
    getJobId()</source>
          <target state="translated">抽象的な文字列 getJobId()</target>
        </trans-unit>
        <trans-unit id="2918cbaf19d9c39644ae8c64c1e9f4f10dace37b" translate="yes" xml:space="preserve">
          <source>abstract                string
    getRawBody()</source>
          <target state="translated">抽象的な文字列 getRawBody()</target>
        </trans-unit>
        <trans-unit id="6dcb295f067c2d42b25676b3ec74f7fde3236542" translate="yes" xml:space="preserve">
          <source>abstract                void
    addConstraints()</source>
          <target state="translated">抽象的な void addConstraints()</target>
        </trans-unit>
        <trans-unit id="bfdb2e979d1e68e86eb04fd9cd44ab014a568fbb" translate="yes" xml:space="preserve">
          <source>abstract                void
    addEagerConstraints(array $models)</source>
          <target state="translated">抽象的な void addEagerConstraints(array $models)</target>
        </trans-unit>
        <trans-unit id="1f4b3695ff34f2cc21875ee0255327dab97ab6ae" translate="yes" xml:space="preserve">
          <source>abstract                void
    createSubscription(array|string $channels, &lt;a href=&quot;http://php.net/Closure&quot;&gt;Closure&lt;/a&gt; $callback, string $method = 'subscribe')</source>
          <target state="translated">抽象void createSubscription（array | string $ channels、&lt;a href=&quot;http://php.net/Closure&quot;&gt;Closure&lt;/a&gt; $ callback、string $ method = 'subscribe'）</target>
        </trans-unit>
        <trans-unit id="6dfdcbfaadeca3a17e25aeb44ef7448c4ccdf927" translate="yes" xml:space="preserve">
          <source>abstract                void
    createSubscription(array|string $channels, &lt;a href=&quot;https://www.php.net/Closure&quot;&gt;Closure&lt;/a&gt; $callback, string $method = 'subscribe')</source>
          <target state="translated">abstract void createSubscription(array|string $channels, &lt;a href=&quot;https://www.php.net/Closure&quot;&gt;Closure&lt;/a&gt; $callback, string $method = 'subscribe')</target>
        </trans-unit>
        <trans-unit id="c3d248bb4a9c0aceb8cee55607c205b01df46636" translate="yes" xml:space="preserve">
          <source>abstract                void
    dump(&lt;a href=&quot;../connection&quot;&gt;Connection&lt;/a&gt; $connection, string $path)</source>
          <target state="translated">abstract void dump(&lt;a href=&quot;../connection&quot;&gt;Connection&lt;/a&gt; $connection, string $path)</target>
        </trans-unit>
        <trans-unit id="d0b58076e6375a9e1f330980c50715b153b7cde2" translate="yes" xml:space="preserve">
          <source>abstract                void
    load(string $path)</source>
          <target state="translated">抽象的な void load(string $path)</target>
        </trans-unit>
        <trans-unit id="2973ac655947686f6f75294f01a5c8d239fdcfc4" translate="yes" xml:space="preserve">
          <source>abstract                void
    release()</source>
          <target state="translated">抽象的なボイドリリース()</target>
        </trans-unit>
        <trans-unit id="82c5d4a26597450ca8ee285bdd854eda647a069f" translate="yes" xml:space="preserve">
          <source>abstract        protected        &lt;a href=&quot;../../model&quot;&gt;Model&lt;/a&gt;
    newRelatedInstanceFor(&lt;a href=&quot;../../model&quot;&gt;Model&lt;/a&gt; $parent)</source>
          <target state="translated">抽象保護 &lt;a href=&quot;../../model&quot;&gt;モデル&lt;/a&gt; newRelatedInstanceFor（&lt;a href=&quot;../../model&quot;&gt;モデル&lt;/a&gt; $ parent）</target>
        </trans-unit>
        <trans-unit id="1840a7e46f0e106b06c3672542b2c6c972f362d2" translate="yes" xml:space="preserve">
          <source>abstract        protected        &lt;a href=&quot;../model&quot;&gt;Model&lt;/a&gt;
    newRelatedInstanceFor(&lt;a href=&quot;../model&quot;&gt;Model&lt;/a&gt; $parent)</source>
          <target state="translated">抽象保護 &lt;a href=&quot;../model&quot;&gt;モデル&lt;/a&gt; newRelatedInstanceFor（&lt;a href=&quot;../model&quot;&gt;モデル&lt;/a&gt; $ parent）</target>
        </trans-unit>
        <trans-unit id="0a0e728c9e4ac21968ca98028f87d9234155455a" translate="yes" xml:space="preserve">
          <source>abstract        protected        Command
    resolveCommand(Command|string $command)</source>
          <target state="translated">abstract protected Command resolveCommand(Command|string $command)</target>
        </trans-unit>
        <trans-unit id="407d602dcdfb6187debed2abb950e38ac59a3488" translate="yes" xml:space="preserve">
          <source>abstract        protected        mixed
    getRelatedKeyFrom(&lt;a href=&quot;../../model&quot;&gt;Model&lt;/a&gt; $model)</source>
          <target state="translated">abstract protected mixed getRelatedKeyFrom(&lt;a href=&quot;../../model&quot;&gt;Model&lt;/a&gt; $model)</target>
        </trans-unit>
        <trans-unit id="91ac3115d29c296b98d834238545ca7f1327c72f" translate="yes" xml:space="preserve">
          <source>abstract        protected        mixed
    getRelatedKeyFrom(&lt;a href=&quot;../model&quot;&gt;Model&lt;/a&gt; $model)</source>
          <target state="translated">abstract protected mixed getRelatedKeyFrom(&lt;a href=&quot;../model&quot;&gt;Model&lt;/a&gt; $model)</target>
        </trans-unit>
        <trans-unit id="efc76e14db7be04902c2c5ddf8cf0d7b818b231b" translate="yes" xml:space="preserve">
          <source>abstract        protected        string
    getCurrentOwner()</source>
          <target state="translated">抽象的な保護された文字列 getCurrentOwner()</target>
        </trans-unit>
        <trans-unit id="ee9ca40626c52b92c517a7203f0547ade5f858df" translate="yes" xml:space="preserve">
          <source>abstract        protected        string
    getFallbackChannelName()</source>
          <target state="translated">抽象的な保護された文字列 getFallbackChannelName()</target>
        </trans-unit>
        <trans-unit id="128b3fbe2e2b2c1d2e19d781deccd193b4effab6" translate="yes" xml:space="preserve">
          <source>abstract        protected        string
    getStub()</source>
          <target state="translated">抽象的な保護された文字列 getStub()</target>
        </trans-unit>
        <trans-unit id="df6cceffb2a448649be2ee241970c37e9415ebee" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;AbstractHasher&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Hashing/AbstractHasher.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;AbstractHasher&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Hashing/AbstractHasher.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ef66321a8d9592db0653bea0421d287c45c9a70e" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;AbstractHasher&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Hashing/AbstractHasher.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;AbstractHasher&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Hashing/AbstractHasher.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="cfe6175dffaca64abf849c2efa820354a84dbb7c" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;AbstractPaginator&lt;/strong&gt; implements &lt;a href=&quot;../contracts/support/htmlable&quot;&gt;Htmlable&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Pagination/AbstractPaginator.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;AbstractPaginator&lt;/strong&gt;は&lt;a href=&quot;../contracts/support/htmlable&quot;&gt;Htmlableを&lt;/a&gt;実装します（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Pagination/AbstractPaginator.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="2b66cbb8ee3ceac640d38be40fd7bfdb45a65f0b" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;AbstractPaginator&lt;/strong&gt; implements &lt;a href=&quot;../contracts/support/htmlable&quot;&gt;Htmlable&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Pagination/AbstractPaginator.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;AbstractPaginator&lt;/strong&gt; implements &lt;a href=&quot;../contracts/support/htmlable&quot;&gt;Htmlable&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Pagination/AbstractPaginator.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="b368bbe20172b129e47b3323f9bdf37b4714d1ed" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;AbstractRouteCollection&lt;/strong&gt; implements &lt;a href=&quot;https://www.php.net/Countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;https://www.php.net/IteratorAggregate&quot;&gt;IteratorAggregate&lt;/a&gt;, &lt;a href=&quot;routecollectioninterface&quot;&gt;RouteCollectionInterface&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Routing/AbstractRouteCollection.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;AbstractRouteCollection&lt;/strong&gt; implements &lt;a href=&quot;https://www.php.net/Countable&quot;&gt;Countable&lt;/a&gt;, &lt;a href=&quot;https://www.php.net/IteratorAggregate&quot;&gt;IteratorAggregate&lt;/a&gt;, &lt;a href=&quot;routecollectioninterface&quot;&gt;RouteCollectionInterface&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Routing/AbstractRouteCollection.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="3bcd37ded4c85acbdec8be1c76f9d8cec4263db7" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Assert&lt;/strong&gt; extends Assert (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Testing/Assert.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Assert&lt;/strong&gt; extends Assert (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Testing/Assert.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="5711436a37b635149e069edf6541a0b4a1104dc1" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Broadcaster&lt;/strong&gt; implements &lt;a href=&quot;../../contracts/broadcasting/broadcaster&quot;&gt;Broadcaster&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Broadcasting/Broadcasters/Broadcaster.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;ブロード&lt;/strong&gt;実装&lt;a href=&quot;../../contracts/broadcasting/broadcaster&quot;&gt;ブロード&lt;/a&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Broadcasting/Broadcasters/Broadcaster.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="2aae525d9d62017c3b61a503b66887ac799acfe1" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Broadcaster&lt;/strong&gt; implements &lt;a href=&quot;../../contracts/broadcasting/broadcaster&quot;&gt;Broadcaster&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Broadcasting/Broadcasters/Broadcaster.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Broadcaster&lt;/strong&gt; implements &lt;a href=&quot;../../contracts/broadcasting/broadcaster&quot;&gt;Broadcaster&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Broadcasting/Broadcasters/Broadcaster.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="1581e737d9e75e8ed1a5e1c4547eeb4c3a91a647" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;CacheEvent&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Cache/Events/CacheEvent.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;CacheEvent&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Cache/Events/CacheEvent.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="d7aa21bd27d5346f8a06532bf2570cc65b91f5ae" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;CacheEvent&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Cache/Events/CacheEvent.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;CacheEvent&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Cache/Events/CacheEvent.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="b66d01f89ffbd6cc0699359c6ad7d4c5fc720f42" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Compiler&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/View/Compilers/Compiler.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;コンパイラ&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/View/Compilers/Compiler.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="2dfda2b571fcb8532a55818eb805a546c63e3dd9" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Compiler&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/View/Compilers/Compiler.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Compiler&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/View/Compilers/Compiler.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="82bfdaba3f539ba12d6ec9ab12783c059b2a3207" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Component&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/View/Component.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Component&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/View/Component.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="c085db2cfe1b40b6c2daffc85e657c71d3611b82" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Connection&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Redis/Connections/Connection.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Connection&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Redis/Connections/Connection.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="84116626d193ca63555bee6eab77452e9a9cff3e" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Connection&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Redis/Connections/Connection.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Connection&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Redis/Connections/Connection.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="8a8ee72f5efcb10c933b7121edb12019fd04d928" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;ConnectionEvent&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Events/ConnectionEvent.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;ConnectionEvent&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Events/ConnectionEvent.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="e9fd54e6788c5d73327c87bf763180bffd0274cc" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;ConnectionEvent&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Events/ConnectionEvent.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;ConnectionEvent&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Events/ConnectionEvent.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="8af51ad7a5f90308607e6c281da2d6b3a273f6a6" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Controller&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Routing/Controller.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Controller&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Routing/Controller.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="06301d5b553d96bfc9fb9fa721514bb34a63efc0" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Controller&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Routing/Controller.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Controller&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Routing/Controller.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="2fffe401d70e2b8d07b23c23adb18e2249fb87ba" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Engine&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/View/Engines/Engine.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Engine&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/View/Engines/Engine.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="1fe4f91c5c9b999eb29112b1cbe9b52c7e600671" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Engine&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/View/Engines/Engine.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Engine&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/View/Engines/Engine.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="1791c768962e63b3c61f07791de9d2b4cfad1eb5" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Facade&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Support/Facades/Facade.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Facade&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Support/Facades/Facade.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="6ae7fdece5eaa203880849321b4a2920a5f38f8f" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Facade&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Support/Facades/Facade.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Facade&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Support/Facades/Facade.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="8dcb1c605379998cda89e154247f0a97e982b588" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Factory&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Eloquent/Factories/Factory.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Factory&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Eloquent/Factories/Factory.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f8be6a921a98694308ffedafc9491873baac709f" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;GeneratorCommand&lt;/strong&gt; extends &lt;a href=&quot;command&quot;&gt;Command&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Console/GeneratorCommand.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;GeneratorCommand&lt;/strong&gt; extends &lt;a href=&quot;command&quot;&gt;Command&lt;/a&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Console/GeneratorCommand.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f3bf60d7fac608d9415ed4b5b758aa06e94b0650" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;GeneratorCommand&lt;/strong&gt; extends &lt;a href=&quot;command&quot;&gt;Command&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Console/GeneratorCommand.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;GeneratorCommand&lt;/strong&gt; extends &lt;a href=&quot;command&quot;&gt;Command&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Console/GeneratorCommand.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="9fbeefa934b662ab3a220078d1a4143622955dd5" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Grammar&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Grammar.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Grammar&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Grammar.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="6038469db0dc0721f7ff93d0f7d351ed73f59cc6" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Grammar&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Grammar.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Grammar&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Grammar.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="b8c89157799971bbd444b154441097183b741bbc" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Grammar&lt;/strong&gt; extends &lt;a href=&quot;../../grammar&quot;&gt;Grammar&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Schema/Grammars/Grammar.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;文法は&lt;/strong&gt;拡張&lt;a href=&quot;../../grammar&quot;&gt;文法&lt;/a&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Schema/Grammars/Grammar.php&quot;&gt;ソースを表示します&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="2b70bf0ab31c916a2332dbddc8e2cba32a9ff67f" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Grammar&lt;/strong&gt; extends &lt;a href=&quot;../../grammar&quot;&gt;Grammar&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Schema/Grammars/Grammar.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Grammar&lt;/strong&gt; extends &lt;a href=&quot;../../grammar&quot;&gt;Grammar&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Schema/Grammars/Grammar.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="55e3975af6859db1952ee8925cadcfa50094600e" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;HasOneOrMany&lt;/strong&gt; extends &lt;a href=&quot;relation&quot;&gt;Relation&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Eloquent/Relations/HasOneOrMany.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;HasOneOrMany&lt;/strong&gt;は&lt;a href=&quot;relation&quot;&gt;Relationを&lt;/a&gt;拡張し&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Eloquent/Relations/HasOneOrMany.php&quot;&gt;ます&lt;/a&gt;（ソースを表示）</target>
        </trans-unit>
        <trans-unit id="fd3113d830abf7bf69e9994b22bc5b1ddbcc533a" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;HasOneOrMany&lt;/strong&gt; extends &lt;a href=&quot;relation&quot;&gt;Relation&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Eloquent/Relations/HasOneOrMany.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;HasOneOrMany&lt;/strong&gt; extends &lt;a href=&quot;relation&quot;&gt;Relation&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Eloquent/Relations/HasOneOrMany.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="5334c96621dd97c66b1b905a5d04eb8671d13f2d" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Job&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Queue/Jobs/Job.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Job&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Queue/Jobs/Job.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="7f5d8af96cd45edf8c58e2e1fb2868f2b11cdc6f" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Job&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Queue/Jobs/Job.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Job&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Queue/Jobs/Job.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="2e0f28b61d758584ea36c4d946389fd62b01cf8f" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Lock&lt;/strong&gt; implements &lt;a href=&quot;../contracts/cache/lock&quot;&gt;Lock&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Cache/Lock.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;のロック&lt;/strong&gt;を実装&lt;a href=&quot;../contracts/cache/lock&quot;&gt;ロック&lt;/a&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Cache/Lock.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="2f6bf904febb3892207d97f4169df6f72222b0e8" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Lock&lt;/strong&gt; implements &lt;a href=&quot;../contracts/cache/lock&quot;&gt;Lock&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Cache/Lock.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Lock&lt;/strong&gt; implements &lt;a href=&quot;../contracts/cache/lock&quot;&gt;Lock&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Cache/Lock.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="65d10ff8d29e0e44c100e3ea93c625ce6760bde6" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Manager&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Support/Manager.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;マネージャー&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Support/Manager.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="54b710612417d3c7a04fda893429d566317b6373" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Manager&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Support/Manager.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Manager&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Support/Manager.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="ec2e554a3d206dece482ce094007eef57a5ad1a1" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Migration&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Migrations/Migration.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Migration&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Migrations/Migration.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="ec61265f00493affa22ae677bad7228899080102" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Migration&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Migrations/Migration.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Migration&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Migrations/Migration.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="4ead7c7d89f7d7fd1f764c9c1ce3824f2252e728" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;MigrationEvent&lt;/strong&gt; implements &lt;a href=&quot;../../contracts/database/events/migrationevent&quot;&gt;MigrationEvent&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Events/MigrationEvent.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;MigrationEvent&lt;/strong&gt; implements &lt;a href=&quot;../../contracts/database/events/migrationevent&quot;&gt;MigrationEvent&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Events/MigrationEvent.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="f6899e8d8c052a3120a553b9542604a5e583bee7" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Model&lt;/strong&gt; implements &lt;a href=&quot;../../contracts/support/arrayable&quot;&gt;Arrayable&lt;/a&gt;, &lt;a href=&quot;https://www.php.net/ArrayAccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;../../contracts/support/jsonable&quot;&gt;Jsonable&lt;/a&gt;, &lt;a href=&quot;https://www.php.net/JsonSerializable&quot;&gt;JsonSerializable&lt;/a&gt;, &lt;a href=&quot;../../contracts/queue/queueableentity&quot;&gt;QueueableEntity&lt;/a&gt;, &lt;a href=&quot;../../contracts/routing/urlroutable&quot;&gt;UrlRoutable&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Eloquent/Model.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Model&lt;/strong&gt; implements &lt;a href=&quot;../../contracts/support/arrayable&quot;&gt;Arrayable&lt;/a&gt;, &lt;a href=&quot;https://www.php.net/ArrayAccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;../../contracts/support/jsonable&quot;&gt;Jsonable&lt;/a&gt;, &lt;a href=&quot;https://www.php.net/JsonSerializable&quot;&gt;JsonSerializable&lt;/a&gt;, &lt;a href=&quot;../../contracts/queue/queueableentity&quot;&gt;QueueableEntity&lt;/a&gt;, &lt;a href=&quot;../../contracts/routing/urlroutable&quot;&gt;UrlRoutable&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Eloquent/Model.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="c65a8fca1ad0ef670a878cd8a6f63ce00d65f123" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Model&lt;/strong&gt; implements &lt;a href=&quot;http://php.net/ArrayAccess&quot;&gt;ArrayAccess&lt;/a&gt;, &lt;a href=&quot;../../contracts/support/arrayable&quot;&gt;Arrayable&lt;/a&gt;, &lt;a href=&quot;../../contracts/support/jsonable&quot;&gt;Jsonable&lt;/a&gt;, &lt;a href=&quot;http://php.net/JsonSerializable&quot;&gt;JsonSerializable&lt;/a&gt;, &lt;a href=&quot;../../contracts/queue/queueableentity&quot;&gt;QueueableEntity&lt;/a&gt;, &lt;a href=&quot;../../contracts/routing/urlroutable&quot;&gt;UrlRoutable&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Eloquent/Model.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;モデル&lt;/strong&gt;は、&lt;a href=&quot;http://php.net/ArrayAccess&quot;&gt;ArrayAccess&lt;/a&gt;、&lt;a href=&quot;../../contracts/support/arrayable&quot;&gt;Arrayable&lt;/a&gt;、&lt;a href=&quot;../../contracts/support/jsonable&quot;&gt;Jsonable&lt;/a&gt;、&lt;a href=&quot;http://php.net/JsonSerializable&quot;&gt;JsonSerializable&lt;/a&gt;、&lt;a href=&quot;../../contracts/queue/queueableentity&quot;&gt;QueueableEntity&lt;/a&gt;、&lt;a href=&quot;../../contracts/routing/urlroutable&quot;&gt;UrlRoutableを実装します&lt;/a&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Eloquent/Model.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="f2e834930acb6bd21c7bed9791f43000ba627f9a" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;MorphOneOrMany&lt;/strong&gt; extends &lt;a href=&quot;hasoneormany&quot;&gt;HasOneOrMany&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Eloquent/Relations/MorphOneOrMany.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;MorphOneOrMany&lt;/strong&gt;は&lt;strong&gt;HasOneOrManyを&lt;/strong&gt;拡張し&lt;a href=&quot;hasoneormany&quot;&gt;ます&lt;/a&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Eloquent/Relations/MorphOneOrMany.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="34ac95dd1a9f5bc94c5c4c016a6acb2f2d3ef79e" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;MorphOneOrMany&lt;/strong&gt; extends &lt;a href=&quot;hasoneormany&quot;&gt;HasOneOrMany&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Eloquent/Relations/MorphOneOrMany.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;MorphOneOrMany&lt;/strong&gt; extends &lt;a href=&quot;hasoneormany&quot;&gt;HasOneOrMany&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Eloquent/Relations/MorphOneOrMany.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="aeb1c2d34afe40afa1ae5e677e5c63072f44020f" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Queue&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Queue/Queue.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Queue&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Queue/Queue.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a068d60a3529ddfb564b0c7f2312ae8a221210b5" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Queue&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Queue/Queue.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Queue&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Queue/Queue.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="83284e0d1627ef2e3953819a36483b16e7d92c46" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Relation&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Eloquent/Relations/Relation.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Relation&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Eloquent/Relations/Relation.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="49708a0acc515f13b31bc1da1f9ba15fd2a018e4" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Relation&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Eloquent/Relations/Relation.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Relation&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Eloquent/Relations/Relation.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="0543c21c2d8c80fe390afa55c68b19047804333c" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;SchemaState&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Schema/SchemaState.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;SchemaState&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Schema/SchemaState.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="aefc94a32fc379aad7c3aa3776066e1b1cde22b5" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Seeder&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Seeder.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Seeder&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Database/Seeder.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="a2958e521684b78a92c2f2cc20587ad3d0308ddf" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Seeder&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Seeder.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Seeder&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Database/Seeder.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="91e02fb40dcf006cb2ee235005cab56a82ad23e4" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;ServiceProvider&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Support/ServiceProvider.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;ServiceProvider&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Support/ServiceProvider.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="1a6d314085e4bfca8bfaf1b21fa42cb4613e719b" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;ServiceProvider&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Support/ServiceProvider.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;ServiceProvider&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Support/ServiceProvider.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="c319e97aff66dcff24589676b83cfb974d1cf789" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;TaggableStore&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Cache/TaggableStore.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;TaggableStore&lt;/strong&gt;（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Cache/TaggableStore.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="4a3baacfa1223dbf75cdb2bc6c9e61ba108c0ed2" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;TaggableStore&lt;/strong&gt; implements &lt;a href=&quot;../contracts/cache/store&quot;&gt;Store&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Cache/TaggableStore.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;TaggableStore&lt;/strong&gt; implements &lt;a href=&quot;../contracts/cache/store&quot;&gt;Store&lt;/a&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Cache/TaggableStore.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="07e5e33caa1502c43b5e097ae3c1cf8aa13eae31" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;TestCase&lt;/strong&gt; extends TestCase (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Foundation/Testing/TestCase.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;TestCase&lt;/strong&gt;は&lt;strong&gt;TestCaseを&lt;/strong&gt;拡張し&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Foundation/Testing/TestCase.php&quot;&gt;ます&lt;/a&gt;（ソースを表示）</target>
        </trans-unit>
        <trans-unit id="e4a15371b83a47345a67071b43fb10ec25754f81" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;TestCase&lt;/strong&gt; extends TestCase (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Foundation/Testing/TestCase.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;TestCase&lt;/strong&gt; extends TestCase (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Foundation/Testing/TestCase.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="18ac2ef6f3feebf91eafa6ee9d639c3f10f8de59" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Transport&lt;/strong&gt; implements Swift_Transport (&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Mail/Transport/Transport.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">抽象クラス&lt;strong&gt;Transport&lt;/strong&gt;はSwift_Transportを実装します（&lt;a href=&quot;https://github.com/laravel/framework/blob/5.7/src/Illuminate/Mail/Transport/Transport.php&quot;&gt;ソースを表示&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="11f518a4ee7f0f92d8dcc897aa9e430a18bd3909" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;Transport&lt;/strong&gt; implements Swift_Transport (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Mail/Transport/Transport.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;Transport&lt;/strong&gt; implements Swift_Transport (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Mail/Transport/Transport.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="2c0d1bd5b15330b31ed1aa57d010aa7ccc94d865" translate="yes" xml:space="preserve">
          <source>abstract class &lt;strong&gt;TrustHosts&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Http/Middleware/TrustHosts.php&quot;&gt;View source&lt;/a&gt;)</source>
          <target state="translated">abstract class &lt;strong&gt;TrustHosts&lt;/strong&gt; (&lt;a href=&quot;https://github.com/laravel/framework/blob/8.x/src/Illuminate/Http/Middleware/TrustHosts.php&quot;&gt;View source&lt;/a&gt;)</target>
        </trans-unit>
        <trans-unit id="51c817ab85e3c10c1544cbe74ec1106357ad59f5" translate="yes" xml:space="preserve">
          <source>accepted</source>
          <target state="translated">accepted</target>
        </trans-unit>
        <trans-unit id="08109e5786d96bd8ee6c05fcae6b1f4184373ea0" translate="yes" xml:space="preserve">
          <source>active_url</source>
          <target state="translated">active_url</target>
        </trans-unit>
        <trans-unit id="6dfc1d082955dc0749941a45530df9a2ad8ca004" translate="yes" xml:space="preserve">
          <source>addContextualBinding()</source>
          <target state="translated">addContextualBinding()</target>
        </trans-unit>
        <trans-unit id="98247547c09317b3676ae322fca53f893fd8a95b" translate="yes" xml:space="preserve">
          <source>after:&lt;em&gt;date&lt;/em&gt;</source>
          <target state="translated">after:&lt;em&gt;date&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b91e91e78694eee22998a3168ba2fc212dd064fb" translate="yes" xml:space="preserve">
          <source>afterResolving()</source>
          <target state="translated">afterResolving()</target>
        </trans-unit>
        <trans-unit id="9578edc90afef3d4b41b34e4aafeaba2ffc05c02" translate="yes" xml:space="preserve">
          <source>after_or_equal:&lt;em&gt;date&lt;/em&gt;</source>
          <target state="translated">after_or_equal:&lt;em&gt;date&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cbf19201a62534bec9f921923c84b9d2e9fcc957" translate="yes" xml:space="preserve">
          <source>alias()</source>
          <target state="translated">alias()</target>
        </trans-unit>
        <trans-unit id="e8c09071f48c8ac63958f97a1038b74c4fcbac85" translate="yes" xml:space="preserve">
          <source>allFiles()</source>
          <target state="translated">allFiles()</target>
        </trans-unit>
        <trans-unit id="be76331b95dfc399cd776d2fc68021e0db03cc4f" translate="yes" xml:space="preserve">
          <source>alpha</source>
          <target state="translated">alpha</target>
        </trans-unit>
        <trans-unit id="0300f944b59df632796a621ca7575f2c6b9f4561" translate="yes" xml:space="preserve">
          <source>alpha_dash</source>
          <target state="translated">alpha_dash</target>
        </trans-unit>
        <trans-unit id="b5cbfbfc2f47084c6b870c6ea05c5bff35d859c6" translate="yes" xml:space="preserve">
          <source>alpha_num</source>
          <target state="translated">alpha_num</target>
        </trans-unit>
        <trans-unit id="c6e5ddfc97bd1bb7077dc4d13bebe28b3b535f24" translate="yes" xml:space="preserve">
          <source>append()</source>
          <target state="translated">append()</target>
        </trans-unit>
        <trans-unit id="19edc1210777ba4d45049c29280d9cc5e1064c25" translate="yes" xml:space="preserve">
          <source>array</source>
          <target state="translated">array</target>
        </trans-unit>
        <trans-unit id="95b111cf810d761d3f0c73db99a681ab8f0b2637" translate="yes" xml:space="preserve">
          <source>array
    __serialize()</source>
          <target state="translated">配列 __serialize()</target>
        </trans-unit>
        <trans-unit id="05b0cf2ee5ea5c87b3510de91bb5ad7cc4ffae59" translate="yes" xml:space="preserve">
          <source>array
    __sleep()</source>
          <target state="translated">配列 __sleep()</target>
        </trans-unit>
        <trans-unit id="8323d0b9945d59c3ce1c70fea67e4cad1f0d6fb4" translate="yes" xml:space="preserve">
          <source>array
    __unserialize(array $values)</source>
          <target state="translated">配列 __unserialize(array $values)</target>
        </trans-unit>
        <trans-unit id="b8c59fe2fe53d2e35ece93d324e4018b7b14748b" translate="yes" xml:space="preserve">
          <source>array
    abilities()</source>
          <target state="translated">アレイアビリティ()</target>
        </trans-unit>
        <trans-unit id="4de8d6f524e9a2438637dcd70a57a1e729e4d651" translate="yes" xml:space="preserve">
          <source>array
    aliases()</source>
          <target state="translated">配列エイリアス()</target>
        </trans-unit>
        <trans-unit id="62c7c2da9a180c97586fe3b31d916d86c2949c36" translate="yes" xml:space="preserve">
          <source>array
    all()</source>
          <target state="translated">アレイオール()</target>
        </trans-unit>
        <trans-unit id="5bc7fc1ca60b9d6ac8f66b637f4617c710c05eae" translate="yes" xml:space="preserve">
          <source>array
    all(array|mixed $keys = null)</source>
          <target state="translated">配列 all(array|mixed $keys=null)</target>
        </trans-unit>
        <trans-unit id="ea4995328c01f248922b5c3de74d1dee2c40ba35" translate="yes" xml:space="preserve">
          <source>array
    all(array|mixed|null $keys = null)</source>
          <target state="translated">配列 all(array|mixed|null $keys=null)</target>
        </trans-unit>
        <trans-unit id="05d347bc640f0664f17c86c32bd7699ae269a2cb" translate="yes" xml:space="preserve">
          <source>array
    all(string $format = null)</source>
          <target state="translated">配列 all(文字列 $format=null)</target>
        </trans-unit>
        <trans-unit id="d802cad1dff9e85e4435095016eded10eb1af2b8" translate="yes" xml:space="preserve">
          <source>array
    all(string|null $format = null)</source>
          <target state="translated">配列 all(string|null $format=null)</target>
        </trans-unit>
        <trans-unit id="b3469c9a4b5655f5a1e609a7c6d9387ad7f6ff7e" translate="yes" xml:space="preserve">
          <source>array
    allDirectories(string|null $directory = null)</source>
          <target state="translated">配列 allDirectories(string|null $directory=null)</target>
        </trans-unit>
        <trans-unit id="08fc6c9a31854452aa77aec8cfdc2da8eefae815" translate="yes" xml:space="preserve">
          <source>array
    allFiles()</source>
          <target state="translated">配列 allFiles()</target>
        </trans-unit>
        <trans-unit id="23e15490923a91a2de02d419d239459601588cf8" translate="yes" xml:space="preserve">
          <source>array
    allFiles(string|null $directory = null)</source>
          <target state="translated">配列 allFiles(string|null $directory=null)</target>
        </trans-unit>
        <trans-unit id="36c69ea49a56e191a0f9c7c29267cb90f257c2b7" translate="yes" xml:space="preserve">
          <source>array
    arguments()</source>
          <target state="translated">配列引数()</target>
        </trans-unit>
        <trans-unit id="9821ec89593e0bbfb8d649bca2ad39eac5a9bfa8" translate="yes" xml:space="preserve">
          <source>array
    attributes()</source>
          <target state="translated">配列属性()</target>
        </trans-unit>
        <trans-unit id="89203949cd2b34b6d5a533dbf410c80eb9a9efae" translate="yes" xml:space="preserve">
          <source>array
    attributesFor(&lt;a href=&quot;../model&quot;&gt;Model&lt;/a&gt; $model)</source>
          <target state="translated">array attributesFor(&lt;a href=&quot;../model&quot;&gt;Model&lt;/a&gt; $model)</target>
        </trans-unit>
        <trans-unit id="e665fe0e3dd1e7aa290ef1978f28342525b1f0cf" translate="yes" xml:space="preserve">
          <source>array
    attributesToArray()</source>
          <target state="translated">配列の attributesToArray()</target>
        </trans-unit>
        <trans-unit id="0037447b9cb2db5646d3e15a3c3e209bc899fb02" translate="yes" xml:space="preserve">
          <source>array
    autoIncrementingStartingValues()</source>
          <target state="translated">配列オートインクリメント開始値()</target>
        </trans-unit>
        <trans-unit id="ae3b357828de37f6517593b53c85fdb3548ca067" translate="yes" xml:space="preserve">
          <source>array
    availableDrivers()</source>
          <target state="translated">配列 availableDrivers()</target>
        </trans-unit>
        <trans-unit id="fa6d8650584eaa8f65266755b4dd77b575ab2489" translate="yes" xml:space="preserve">
          <source>array
    bindingFields()</source>
          <target state="translated">配列 bindingFields()</target>
        </trans-unit>
        <trans-unit id="9a0b10588b8eb590b797bd5095bb5174f2bbfe64" translate="yes" xml:space="preserve">
          <source>array
    broadcastOn()</source>
          <target state="translated">配列ブロードキャストオン()</target>
        </trans-unit>
        <trans-unit id="a6c90e81293231550f9a8411bb2448e31723d3b6" translate="yes" xml:space="preserve">
          <source>array
    broadcastWith()</source>
          <target state="translated">アレイブロードキャストウィズ()</target>
        </trans-unit>
        <trans-unit id="1cd17de4bf2d528bca1d4ca3b8c736037f352787" translate="yes" xml:space="preserve">
          <source>array
    buildViewData()</source>
          <target state="translated">配列 buildViewData()</target>
        </trans-unit>
        <trans-unit id="671ea61d1074043645053dbba7a8c1f91c93bc72" translate="yes" xml:space="preserve">
          <source>array
    catchCallbacks()</source>
          <target state="translated">配列 catchCallbacks()</target>
        </trans-unit>
        <trans-unit id="0b9a3f2e53af9cfd784ca3aa3bcef8b08f154cf6" translate="yes" xml:space="preserve">
          <source>array
    cleanBindings(array $bindings)</source>
          <target state="translated">配列 cleanBindings(array $bindings)</target>
        </trans-unit>
        <trans-unit id="02557842fc74fb2e68d508fd20824ebf683fb334" translate="yes" xml:space="preserve">
          <source>array
    compile()</source>
          <target state="translated">配列コンパイル()</target>
        </trans-unit>
        <trans-unit id="28e4654f6c97fe80a7079bae802969c00a819ec7" translate="yes" xml:space="preserve">
          <source>array
    compileAdd(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint, &lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $command)</source>
          <target state="translated">配列compileAdd（&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $ blueprint、&lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $ command）</target>
        </trans-unit>
        <trans-unit id="012145aa956d4fffa2334c70f03fc4460ebfe39b" translate="yes" xml:space="preserve">
          <source>array
    compileAutoIncrementStartingValues(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint)</source>
          <target state="translated">array compileAutoIncrementStartingValues(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint)</target>
        </trans-unit>
        <trans-unit id="73324bce1e665d77624653f5b736878e77a2792a" translate="yes" xml:space="preserve">
          <source>array
    compileChange(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint, &lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $command, &lt;a href=&quot;../../connection&quot;&gt;Connection&lt;/a&gt; $connection)</source>
          <target state="translated">配列compileChange（&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $ blueprint、&lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $ command、&lt;a href=&quot;../../connection&quot;&gt;Connection&lt;/a&gt; $ connection）</target>
        </trans-unit>
        <trans-unit id="b5ac20aabc3407b12fee9fcf81e5a90ab139bcf0" translate="yes" xml:space="preserve">
          <source>array
    compileCreate(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint, &lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $command)</source>
          <target state="translated">array compileCreate(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint, &lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $command)</target>
        </trans-unit>
        <trans-unit id="994a186a7c3986b69fe542e6cc91b1f6c044d44f" translate="yes" xml:space="preserve">
          <source>array
    compileCreate(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint, &lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $command, &lt;a href=&quot;../../connection&quot;&gt;Connection&lt;/a&gt; $connection)</source>
          <target state="translated">array compileCreate(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint, &lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $command, &lt;a href=&quot;../../connection&quot;&gt;Connection&lt;/a&gt; $connection)</target>
        </trans-unit>
        <trans-unit id="2fa591a25a4f6bb0eb967183ee9b9cc0c43d9af2" translate="yes" xml:space="preserve">
          <source>array
    compileDropColumn(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint, &lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $command, &lt;a href=&quot;../../connection&quot;&gt;Connection&lt;/a&gt; $connection)</source>
          <target state="translated">配列compileDropColumn（&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $ blueprint、&lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $ command、&lt;a href=&quot;../../connection&quot;&gt;Connection&lt;/a&gt; $ connection）</target>
        </trans-unit>
        <trans-unit id="f15f81dd51be3d985dd554c0a051245e0eefc7ac" translate="yes" xml:space="preserve">
          <source>array
    compileRenameColumn(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint, &lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $command, &lt;a href=&quot;../../connection&quot;&gt;Connection&lt;/a&gt; $connection)</source>
          <target state="translated">配列compileRenameColumn（&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $ blueprint、&lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $ command、&lt;a href=&quot;../../connection&quot;&gt;Connection&lt;/a&gt; $ connection）</target>
        </trans-unit>
        <trans-unit id="c7be7266d157c76d3d30f13af2e21bfd55ba9dd8" translate="yes" xml:space="preserve">
          <source>array
    compileRenameIndex(&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $blueprint, &lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $command, &lt;a href=&quot;../../connection&quot;&gt;Connection&lt;/a&gt; $connection)</source>
          <target state="translated">配列compileRenameIndex（&lt;a href=&quot;../blueprint&quot;&gt;Blueprint&lt;/a&gt; $ blueprint、&lt;a href=&quot;../../../support/fluent&quot;&gt;Fluent&lt;/a&gt; $ command、&lt;a href=&quot;../../connection&quot;&gt;Connection&lt;/a&gt; $ connection）</target>
        </trans-unit>
        <trans-unit id="7657c724d0c5d65b763785b6ba92d288b4f2e61c" translate="yes" xml:space="preserve">
          <source>array
    compileTruncate(&lt;a href=&quot;../builder&quot;&gt;Builder&lt;/a&gt; $query)</source>
          <target state="translated">配列compileTruncate（&lt;a href=&quot;../builder&quot;&gt;ビルダー&lt;/a&gt; $クエリ）</target>
        </trans-unit>
        <trans-unit id="85a4de3854ed2c11d5dfa2318c97c509662f433b" translate="yes" xml:space="preserve">
          <source>array
    composer(array|string $views, &lt;a href=&quot;http://php.net/Closure&quot;&gt;Closure&lt;/a&gt;|string $callback)</source>
          <target state="translated">array composer（array | string $ views、&lt;a href=&quot;http://php.net/Closure&quot;&gt;Closure&lt;/a&gt; | string $ callback）</target>
        </trans-unit>
        <trans-unit id="f3e7115bb59ed05abce27bbdc6519dc89fdba169" translate="yes" xml:space="preserve">
          <source>array
    composer(array|string $views, &lt;a href=&quot;https://www.php.net/Closure&quot;&gt;Closure&lt;/a&gt;|string $callback)</source>
          <target state="translated">array composer(array|string $views, &lt;a href=&quot;https://www.php.net/Closure&quot;&gt;Closure&lt;/a&gt;|string $callback)</target>
        </trans-unit>
        <trans-unit id="ca5a6c7d5e11001f89b5919598272c07efd1c8bf" translate="yes" xml:space="preserve">
          <source>array
    composers(array $composers)</source>
          <target state="translated">array composers(array $composers)</target>
        </trans-unit>
        <trans-unit id="bacea346d842ea05bdc3586d1cc6fb1be858a289" translate="yes" xml:space="preserve">
          <source>array
    config(string $key)</source>
          <target state="translated">配列 config(string $key)</target>
        </trans-unit>
        <trans-unit id="fef7c801a5637aced5cc591f0198c1166a32e0c5" translate="yes" xml:space="preserve">
          <source>array
    connections()</source>
          <target state="translated">配列接続()</target>
        </trans-unit>
        <trans-unit id="84714c0444883ab1d2b9acbf1cf608078435b23c" translate="yes" xml:space="preserve">
          <source>array
    controllerMiddleware()</source>
          <target state="translated">配列 controllerMiddleware()</target>
        </trans-unit>
        <trans-unit id="b54eb954b6ae28f5d0751d4a651a8ce8d8c7a48f" translate="yes" xml:space="preserve">
          <source>array
    createMany(array $records, array $joinings = [])</source>
          <target state="translated">配列 createMany(array $records,array $joinings=[])</target>
        </trans-unit>
        <trans-unit id="4619317434005f9fdb59b24c56eaa217881e3237" translate="yes" xml:space="preserve">
          <source>array
    createMany(iterable $records, array $joinings = [])</source>
          <target state="translated">配列 createMany(反復可能な $records,配列 $joinings=[])</target>
        </trans-unit>
        <trans-unit id="b18d7c58fef52edf938c84f665cf64f2f21826ac" translate="yes" xml:space="preserve">
          <source>array
    creator(array|string $views, &lt;a href=&quot;http://php.net/Closure&quot;&gt;Closure&lt;/a&gt;|string $callback)</source>
          <target state="translated">配列作成者（配列|文字列$ビュー、&lt;a href=&quot;http://php.net/Closure&quot;&gt;クロージャ&lt;/a&gt; |文字列$コールバック）</target>
        </trans-unit>
        <trans-unit id="c8c01e27d6c7daa0056f36200fc03b36536cd42d" translate="yes" xml:space="preserve">
          <source>array
    creator(array|string $views, &lt;a href=&quot;https://www.php.net/Closure&quot;&gt;Closure&lt;/a&gt;|string $callback)</source>
          <target state="translated">array creator(array|string $views, &lt;a href=&quot;https://www.php.net/Closure&quot;&gt;Closure&lt;/a&gt;|string $callback)</target>
        </trans-unit>
        <trans-unit id="2f4443116b9edbf75289266b099f192e7a2cf612" translate="yes" xml:space="preserve">
          <source>array
    data()</source>
          <target state="translated">配列データ()</target>
        </trans-unit>
        <trans-unit id="bce9b0bda1167f344e7a570355f5a7299a85de54" translate="yes" xml:space="preserve">
          <source>array
    directories(string $directory)</source>
          <target state="translated">配列ディレクトリ(文字列 $ディレクトリ)</target>
        </trans-unit>
        <trans-unit id="528c9a0b0cf7d707c6a7537887c2033fd501d17f" translate="yes" xml:space="preserve">
          <source>array
    directories(string|null $directory = null, bool $recursive = false)</source>
          <target state="translated">ディレクトリの配列(string|null $directory=null,bool $recursive=false)</target>
        </trans-unit>
        <trans-unit id="8577959cfd251f65ac8b133b3ae9d03bdc4e4e7b" translate="yes" xml:space="preserve">
          <source>array
    discoverEvents()</source>
          <target state="translated">配列 discoverEvents()</target>
        </trans-unit>
        <trans-unit id="6a973a25eada8e6e0ccf0e6e7b21f880b48c139d" translate="yes" xml:space="preserve">
          <source>array
    eagerLoadRelations(array $models)</source>
          <target state="translated">array eagerLoadRelations(array $models)</target>
        </trans-unit>
        <trans-unit id="f2518a9032d2db2807b56556a4ce60042448a0cb" translate="yes" xml:space="preserve">
          <source>array
    errors()</source>
          <target state="translated">配列エラー()</target>
        </trans-unit>
        <trans-unit id="f447844fd17f0742cf71089cdca1ff48c0375d9d" translate="yes" xml:space="preserve">
          <source>array
    except(array|mixed $keys)</source>
          <target state="translated">配列 except(array|mixed $keys)</target>
        </trans-unit>
        <trans-unit id="425f3bd65fc1cc747be2dcfae777cdefe0648dba" translate="yes" xml:space="preserve">
          <source>array
    excludedMiddleware()</source>
          <target state="translated">配列 excludedMiddleware()</target>
        </trans-unit>
        <trans-unit id="9a9a536f329c21288a277f92cbe230c20f6fee75" translate="yes" xml:space="preserve">
          <source>array
    failed()</source>
          <target state="translated">配列の失敗()</target>
        </trans-unit>
        <trans-unit id="5334d7a3c5eab2d715ba652d94daf894e1db5581" translate="yes" xml:space="preserve">
          <source>array
    failures()</source>
          <target state="translated">配列の失敗()</target>
        </trans-unit>
        <trans-unit id="1eb62a229dfe40a640d7200d21e8a21537d9db5e" translate="yes" xml:space="preserve">
          <source>array
    files(string|null $directory = null, bool $recursive = false)</source>
          <target state="translated">配列ファイル(string|null $directory=null,bool $recursive=false)</target>
        </trans-unit>
        <trans-unit id="81fe4913cb82863c5780498c37d3b399879f9970" translate="yes" xml:space="preserve">
          <source>array
    finallyCallbacks()</source>
          <target state="translated">配列 finallyCallbacks()</target>
        </trans-unit>
        <trans-unit id="d1fd61e99b1270d91728c4704349035b4f64ba9c" translate="yes" xml:space="preserve">
          <source>array
    formatParameters(mixed|array $parameters)</source>
          <target state="translated">array formatParameters(mixed|array $parameters)</target>
        </trans-unit>
        <trans-unit id="ab7698437a3e25eda6b52c0d8556d74e03d3ef87" translate="yes" xml:space="preserve">
          <source>array
    gatherData()</source>
          <target state="translated">配列 gatherData()</target>
        </trans-unit>
        <trans-unit id="054c13b9254ed25145f1adc930e41b7a18075fe0" translate="yes" xml:space="preserve">
          <source>array
    gatherMiddleware()</source>
          <target state="translated">配列 gatherMiddleware()</target>
        </trans-unit>
        <trans-unit id="ccc0b37ea9a677466384899cf720d57f340d22de" translate="yes" xml:space="preserve">
          <source>array
    gatherRouteMiddleware(&lt;a href=&quot;route&quot;&gt;Route&lt;/a&gt; $route)</source>
          <target state="translated">配列gatherRouteMiddleware（&lt;a href=&quot;route&quot;&gt;ルート&lt;/a&gt; $ route）</target>
        </trans-unit>
        <trans-unit id="0c40a2d8246b6003806ceb7833197c6dbeaeebd4" translate="yes" xml:space="preserve">
          <source>array
    get()</source>
          <target state="translated">配列get()</target>
        </trans-unit>
        <trans-unit id="c2d11b5a3900d6001272bed9dfd8fbd8c19aaef6" translate="yes" xml:space="preserve">
          <source>array
    get(string $key, string $format = null)</source>
          <target state="translated">配列 get(string $key,string $format=null)</target>
        </trans-unit>
        <trans-unit id="601689fa97df02a3955638476d6e28f720a34173" translate="yes" xml:space="preserve">
          <source>array
    get(string $key, string|null $format = null)</source>
          <target state="translated">配列 get(string $key,string|null $format=null)</target>
        </trans-unit>
        <trans-unit id="dbbe9413d9a423f8e86c96a36a2553c81dd318e3" translate="yes" xml:space="preserve">
          <source>array
    get(string|null $method = null)</source>
          <target state="translated">配列 get(string|null $method=null)</target>
        </trans-unit>
        <trans-unit id="90a242f350c1b624cbd8a42239f000a6ea73b1a7" translate="yes" xml:space="preserve">
          <source>array
    getAdjacentUrlRange(int $onEachSide)</source>
          <target state="translated">配列 getAdjacentUrlRange(int $onEachSide)</target>
        </trans-unit>
        <trans-unit id="c5f5b89fa1cdf0fccab5235d4c4a9d59e2c7e372" translate="yes" xml:space="preserve">
          <source>array
    getAliases()</source>
          <target state="translated">配列 getAliases()</target>
        </trans-unit>
        <trans-unit id="3db4b80a698eca7baab26bf18f609e368e0a17db" translate="yes" xml:space="preserve">
          <source>array
    getAllTypes()</source>
          <target state="translated">配列 getAllTypes()</target>
        </trans-unit>
        <trans-unit id="678547f63d13c65dd990a82a5d7e328d7774f1ed" translate="yes" xml:space="preserve">
          <source>array
    getAllViews()</source>
          <target state="translated">配列 getAllViews()</target>
        </trans-unit>
        <trans-unit id="3f9bf1079a84a21b6a9d3f0f598707dc4bfb61a7" translate="yes" xml:space="preserve">
          <source>array
    getAttributes()</source>
          <target state="translated">配列 getAttributes()</target>
        </trans-unit>
        <trans-unit id="e2b2d0e452bcc4482263cb5b7ba21756f8a06ea3" translate="yes" xml:space="preserve">
          <source>array
    getBags()</source>
          <target state="translated">配列 getBags()</target>
        </trans-unit>
        <trans-unit id="1952bd98c3eaf9b9d5416d147f77900d9e9e1d14" translate="yes" xml:space="preserve">
          <source>array
    getBindings()</source>
          <target state="translated">配列 getBindings()</target>
        </trans-unit>
        <trans-unit id="8f3399c6251a410b42b6dda9c9d9d2dad796bd26" translate="yes" xml:space="preserve">
          <source>array
    getCasts()</source>
          <target state="translated">配列 getCasts()</target>
        </trans-unit>
        <trans-unit id="1f2e5135b214a5006639acf0f1a5ea89a9600702" translate="yes" xml:space="preserve">
          <source>array
    getChanges()</source>
          <target state="translated">配列 getChanges()</target>
        </trans-unit>
        <trans-unit id="c5db6fd2f8f65051c5528dc8a39df8e2b28ad834" translate="yes" xml:space="preserve">
          <source>array
    getChannels()</source>
          <target state="translated">配列 getChannels()</target>
        </trans-unit>
        <trans-unit id="b9d6dca73239e8064c101d98d19ea65ee835926f" translate="yes" xml:space="preserve">
          <source>array
    getClassComponentAliases()</source>
          <target state="translated">配列 getClassComponentAliases()</target>
        </trans-unit>
        <trans-unit id="a8d47b2a9733bbb85f005639d2bae7a0c0af965f" translate="yes" xml:space="preserve">
          <source>array
    getClassComponentNamespaces()</source>
          <target state="translated">配列 getClassComponentNamespaces()</target>
        </trans-unit>
        <trans-unit id="7a6031d30bd4b9ba287ced886571b0ff73e96eb5" translate="yes" xml:space="preserve">
          <source>array
    getColumnListing(string $table)</source>
          <target state="translated">配列 getColumnListing(string $table)</target>
        </trans-unit>
        <trans-unit id="022fde7422ca7daf04c490f5d9be12cd483cfbfd" translate="yes" xml:space="preserve">
          <source>array
    getConnections()</source>
          <target state="translated">配列 getConnections()</target>
        </trans-unit>
        <trans-unit id="897fe5d213f5b85189c770c3f6a3a60c2de3bf39" translate="yes" xml:space="preserve">
          <source>array
    getCustomDirectives()</source>
          <target state="translated">配列 getCustomDirectives()</target>
        </trans-unit>
        <trans-unit id="5f7f4ba4f91bb9c4353dcfd70ba279ab32328826" translate="yes" xml:space="preserve">
          <source>array
    getData()</source>
          <target state="translated">配列 getData()</target>
        </trans-unit>
        <trans-unit id="75c82fd4440bb3220aac98389fceb9f8a83d1d21" translate="yes" xml:space="preserve">
          <source>array
    getDates()</source>
          <target state="translated">配列 getDates()</target>
        </trans-unit>
        <trans-unit id="76f288ecf6ec235adc93120ba46ca65e0ba33829" translate="yes" xml:space="preserve">
          <source>array
    getDefaultOptions()</source>
          <target state="translated">配列 getDefaultOptions()</target>
        </trans-unit>
        <trans-unit id="b112277f3f0cf25d969d9f9d46e85436d29b2b4d" translate="yes" xml:space="preserve">
          <source>array
    getDefaultParameters()</source>
          <target state="translated">配列 getDefaultParameters()</target>
        </trans-unit>
        <trans-unit id="52e122e509d77582bc8e7566ef7faa87fdbb4b69" translate="yes" xml:space="preserve">
          <source>array
    getDeferredServices()</source>
          <target state="translated">配列 getDeferredServices()</target>
        </trans-unit>
        <trans-unit id="215a772bb479eca399bdeb2708f21768a2f8ca5b" translate="yes" xml:space="preserve">
          <source>array
    getDictionary()</source>
          <target state="translated">配列 getDictionary()</target>
        </trans-unit>
        <trans-unit id="b90168a418b06d7cab9c5b9c9439a509b3517d00" translate="yes" xml:space="preserve">
          <source>array
    getDictionary(&lt;a href=&quot;http://php.net/ArrayAccess&quot;&gt;ArrayAccess&lt;/a&gt;|array|null $items = null)</source>
          <target state="translated">配列getDictionary（&lt;a href=&quot;http://php.net/ArrayAccess&quot;&gt;ArrayAccess&lt;/a&gt; | array | null $ items = null）</target>
        </trans-unit>
        <trans-unit id="41c49cdbbdc19de1b3351df92db1d4bb23952285" translate="yes" xml:space="preserve">
          <source>array
    getDictionary(&lt;a href=&quot;https://www.php.net/ArrayAccess&quot;&gt;ArrayAccess&lt;/a&gt;|array|null $items = null)</source>
          <target state="translated">array getDictionary(&lt;a href=&quot;https://www.php.net/ArrayAccess&quot;&gt;ArrayAccess&lt;/a&gt;|array|null $items = null)</target>
        </trans-unit>
        <trans-unit id="33a4c9e443d2ca49e1c28951ff009a9ecdd0ffbe" translate="yes" xml:space="preserve">
          <source>array
    getDirty()</source>
          <target state="translated">配列 getDirty()</target>
        </trans-unit>
        <trans-unit id="1c80bdcc32fa4ea41cc441c80e44a626f6a035a8" translate="yes" xml:space="preserve">
          <source>array
    getDrivers()</source>
          <target state="translated">配列 getDrivers()</target>
        </trans-unit>
        <trans-unit id="523e7b50c6ad612ffe9d2b4940a8c98419a7d013" translate="yes" xml:space="preserve">
          <source>array
    getEagerLoads()</source>
          <target state="translated">配列 getEagerLoads()</target>
        </trans-unit>
        <trans-unit id="282307b3efe7751ab9914d5a3be708759f43ddc9" translate="yes" xml:space="preserve">
          <source>array
    getEvents()</source>
          <target state="translated">配列 getEvents()</target>
        </trans-unit>
        <trans-unit id="dcd29b82f134865becf8fed5cced80893051ce02" translate="yes" xml:space="preserve">
          <source>array
    getExtensions()</source>
          <target state="translated">配列 getExtensions()</target>
        </trans-unit>
        <trans-unit id="32b4fab1de95418d6fa425a8686a5577f6b12276" translate="yes" xml:space="preserve">
          <source>array
    getFillable()</source>
          <target state="translated">配列 getFillable()</target>
        </trans-unit>
        <trans-unit id="539a3312b1f13d7db21876a23306061168931fcc" translate="yes" xml:space="preserve">
          <source>array
    getFinish()</source>
          <target state="translated">配列 getFinish()</target>
        </trans-unit>
        <trans-unit id="8ef18e3f6da47cdae9575dc164a4324117082f68" translate="yes" xml:space="preserve">
          <source>array
    getFluentCommands()</source>
          <target state="translated">配列 getFluentCommands()</target>
        </trans-unit>
        <trans-unit id="ea4101c9f1afda4c3ec1b3d695ae1929a43ee6c0" translate="yes" xml:space="preserve">
          <source>array
    getGlobalScopes()</source>
          <target state="translated">配列 getGlobalScopes()</target>
        </trans-unit>
        <trans-unit id="61a3e6ac55874e4bda8c41c90fbc763cb75a25ff" translate="yes" xml:space="preserve">
          <source>array
    getGroupStack()</source>
          <target state="translated">配列 getGroupStack()</target>
        </trans-unit>
        <trans-unit id="748e42420acd5122eb176c6a79ea188cd2f8029f" translate="yes" xml:space="preserve">
          <source>array
    getGuarded()</source>
          <target state="translated">配列 getGuarded()</target>
        </trans-unit>
        <trans-unit id="c94badd44df9ce924f4528fcb336ad5bd15b3bdb" translate="yes" xml:space="preserve">
          <source>array
    getHidden()</source>
          <target state="translated">配列 getHidden()</target>
        </trans-unit>
        <trans-unit id="313acdde0604c9a7d72315496045aa66657f0f6a" translate="yes" xml:space="preserve">
          <source>array
    getHints()</source>
          <target state="translated">配列 getHints()</target>
        </trans-unit>
        <trans-unit id="e768830d20393fe97878e9ad6129dda868ce5d48" translate="yes" xml:space="preserve">
          <source>array
    getLast()</source>
          <target state="translated">配列 getLast()</target>
        </trans-unit>
        <trans-unit id="a5664f618a20b74908b2151a1401b14f84541c3a" translate="yes" xml:space="preserve">
          <source>array
    getListeners(string $eventName)</source>
          <target state="translated">配列 getListeners(string $eventName)</target>
        </trans-unit>
        <trans-unit id="d52bddf4ca2f62987ce6ae515e6fa4352eab5224" translate="yes" xml:space="preserve">
          <source>array
    getLoadedProviders()</source>
          <target state="translated">配列 getLoadedProviders()</target>
        </trans-unit>
        <trans-unit id="85cfed1c86171cd75e96b84d428be323d2f07647" translate="yes" xml:space="preserve">
          <source>array
    getLoopStack()</source>
          <target state="translated">配列 getLoopStack()</target>
        </trans-unit>
        <trans-unit id="2272a2bfc5aa584e122a663b3d59c25fd124a951" translate="yes" xml:space="preserve">
          <source>array
    getMany(array $keys)</source>
          <target state="translated">配列 getMany(配列 $keys)</target>
        </trans-unit>
        <trans-unit id="511beb4766482119d6ced146d463c7087342f7f8" translate="yes" xml:space="preserve">
          <source>array
    getMessages()</source>
          <target state="translated">配列 getMessages()</target>
        </trans-unit>
        <trans-unit id="ac288ed0a96ee19b05273565ab2432d205307583" translate="yes" xml:space="preserve">
          <source>array
    getMiddleware()</source>
          <target state="translated">配列 getMiddleware()</target>
        </trans-unit>
        <trans-unit id="55af5f9c5e0d15310b5cb51d56367718869b95d8" translate="yes" xml:space="preserve">
          <source>array
    getMiddleware(&lt;a href=&quot;../controller&quot;&gt;Controller&lt;/a&gt; $controller, string $method)</source>
          <target state="translated">array getMiddleware（&lt;a href=&quot;../controller&quot;&gt;Controller&lt;/a&gt; $ controller、string $ method）</target>
        </trans-unit>
        <trans-unit id="1dadf82127602a2e331258bc898eea9baa1a1e90" translate="yes" xml:space="preserve">
          <source>array
    getMiddleware(&lt;a href=&quot;controller&quot;&gt;Controller&lt;/a&gt; $controller, string $method)</source>
          <target state="translated">array getMiddleware（&lt;a href=&quot;controller&quot;&gt;Controller&lt;/a&gt; $ controller、string $ method）</target>
        </trans-unit>
        <trans-unit id="9f957ef60030888a51433e507e5c5e30d8dd0f2e" translate="yes" xml:space="preserve">
          <source>array
    getMiddlewareGroups()</source>
          <target state="translated">配列 getMiddlewareGroups()</target>
        </trans-unit>
        <trans-unit id="b3d2eff511f70cb367f32129b903111af000919a" translate="yes" xml:space="preserve">
          <source>array
    getMigrationBatches()</source>
          <target state="translated">配列 getMigrationBatches()</target>
        </trans-unit>
        <trans-unit id="ce826d9891953c7cf0d5041ae9134c88db552ea1" translate="yes" xml:space="preserve">
          <source>array
    getMigrationFiles(string|array $paths)</source>
          <target state="translated">配列 getMigrationFiles(string|array $paths)</target>
        </trans-unit>
        <trans-unit id="90c6014ecadaa6534c9ee45e64506f57e69ffee2" translate="yes" xml:space="preserve">
          <source>array
    getMigrations(int $steps)</source>
          <target state="translated">配列 getMigrations(int $steps)</target>
        </trans-unit>
        <trans-unit id="739678a661ab9fa1db3b2c2af80145efc3fcc17e" translate="yes" xml:space="preserve">
          <source>array
    getMutatedAttributes()</source>
          <target state="translated">配列 getMutatedAttributes()</target>
        </trans-unit>
        <trans-unit id="978b91010dbcf5dfa31f6ce69eecf7bb53159f6c" translate="yes" xml:space="preserve">
          <source>array
    getNames()</source>
          <target state="translated">配列 getNames()</target>
        </trans-unit>
        <trans-unit id="16079a33f47cc2bd81c469328b28ffb74406edd0" translate="yes" xml:space="preserve">
          <source>array
    getObservableEvents()</source>
          <target state="translated">配列 getObservableEvents()</target>
        </trans-unit>
        <trans-unit id="c0f42f4c1a4d445cf21801f681cad42e919ffcb4" translate="yes" xml:space="preserve">
          <source>array
    getOperators()</source>
          <target state="translated">配列 getOperators()</target>
        </trans-unit>
        <trans-unit id="ff8ae12545ccc412ff626acf385c3d78ef4d42c5" translate="yes" xml:space="preserve">
          <source>array
    getOptions()</source>
          <target state="translated">配列 getOptions()</target>
        </trans-unit>
        <trans-unit id="8106878eff58c767bab1c849ec4edb1a759c68cd" translate="yes" xml:space="preserve">
          <source>array
    getOptions(array $config)</source>
          <target state="translated">配列 getOptions(配列 $config)</target>
        </trans-unit>
        <trans-unit id="324f9639571ca6d4aa37476dcc06ae521c4861ea" translate="yes" xml:space="preserve">
          <source>array
    getPaths()</source>
          <target state="translated">配列 getPaths()</target>
        </trans-unit>
        <trans-unit id="2db4be1b63b4e08cd6ad36accca94b11c35700fb" translate="yes" xml:space="preserve">
          <source>array
    getPatterns()</source>
          <target state="translated">配列 getPatterns()</target>
        </trans-unit>
        <trans-unit id="af31568aea963470a4a86e1bd812dd01e3db575c" translate="yes" xml:space="preserve">
          <source>array
    getPivotColumns()</source>
          <target state="translated">配列 getPivotColumns()</target>
        </trans-unit>
        <trans-unit id="04a0f2102eca313b7b84c7ee4edc27c5f0b5b6ad" translate="yes" xml:space="preserve">
          <source>array
    getProviders(&lt;a href=&quot;../../support/serviceprovider&quot;&gt;ServiceProvider&lt;/a&gt;|string $provider)</source>
          <target state="translated">array getProviders(&lt;a href=&quot;../../support/serviceprovider&quot;&gt;ServiceProvider&lt;/a&gt;|string $provider)</target>
        </trans-unit>
        <trans-unit id="74251898346b8e6e10b030d5513eb95dd65baaee" translate="yes" xml:space="preserve">
          <source>array
    getProviders(&lt;a href=&quot;../support/serviceprovider&quot;&gt;ServiceProvider&lt;/a&gt;|string $provider)</source>
          <target state="translated">配列getProviders（&lt;a href=&quot;../support/serviceprovider&quot;&gt;ServiceProvider&lt;/a&gt; | string $ provider）</target>
        </trans-unit>
        <trans-unit id="9a7d1946ad98660aec17bfefe6c797618ce783b2" translate="yes" xml:space="preserve">
          <source>array
    getQueryLog()</source>
          <target state="translated">配列 getQueryLog()</target>
        </trans-unit>
        <trans-unit id="733dc4a7b4c991eb09ff6e2aa0ced60e4353971f" translate="yes" xml:space="preserve">
          <source>array
    getQueueableIds()</source>
          <target state="translated">配列 getQueueableIds()</target>
        </trans-unit>
        <trans-unit id="c1680279f6e692a31e4003e08ea5e8fe4b0e22e2" translate="yes" xml:space="preserve">
          <source>array
    getQueueableRelations()</source>
          <target state="translated">配列 getQueueableRelations()</target>
        </trans-unit>
        <trans-unit id="99af9d7ff8a414e02da7ac213740d333cbf6b9ca" translate="yes" xml:space="preserve">
          <source>array
    getQueuedCookies()</source>
          <target state="translated">配列 getQueuedCookies()</target>
        </trans-unit>
        <trans-unit id="39fadbe4985f37b534868593b3443396fc50229c" translate="yes" xml:space="preserve">
          <source>array
    getRan()</source>
          <target state="translated">配列 getRan()</target>
        </trans-unit>
        <trans-unit id="90877a8438d6c8e58302c66839348b1ef63f974b" translate="yes" xml:space="preserve">
          <source>array
    getRawBindings()</source>
          <target state="translated">配列 getRawBindings()</target>
        </trans-unit>
        <trans-unit id="198f369b734bd21d8c7d24b475d939e16b1440eb" translate="yes" xml:space="preserve">
          <source>array
    getRelations()</source>
          <target state="translated">配列 getRelations()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
