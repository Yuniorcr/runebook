<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="vulkan">
    <body>
      <group id="vulkan">
        <trans-unit id="2afdc9f5f9839a580986a1592d2ebc7c1dc70447" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flags&lt;/code&gt; contains the &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; flag, and &lt;code&gt;basePipelineIndex&lt;/code&gt; is -1, &lt;code&gt;basePipelineHandle&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid handle to a compute &lt;code&gt;VkPipeline&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;flags&lt;/code&gt; 含まれてい &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; のフラグを、そして &lt;code&gt;basePipelineIndex&lt;/code&gt; は -1で、 &lt;code&gt;basePipelineHandle&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;計算に有効なハンドルで &lt;code&gt;VkPipeline&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bdd32fc21b0bc9b8c72f5a2b27c3cc7ba2f9f53" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flags&lt;/code&gt; contains the &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; flag, and &lt;code&gt;basePipelineIndex&lt;/code&gt; is -1, &lt;code&gt;basePipelineHandle&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid handle to a graphics &lt;code&gt;VkPipeline&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;flags&lt;/code&gt; 含まれてい &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; のフラグを、そして &lt;code&gt;basePipelineIndex&lt;/code&gt; は -1で、 &lt;code&gt;basePipelineHandle&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;グラフィックスへの有効なハンドルで &lt;code&gt;VkPipeline&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb441c682a989edd6b4a9fd7d3157ec839be563c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flags&lt;/code&gt; contains the &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; flag, and &lt;code&gt;basePipelineIndex&lt;/code&gt; is not -1, &lt;code&gt;basePipelineHandle&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;</source>
          <target state="translated">場合は &lt;code&gt;flags&lt;/code&gt; 含まれてい &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; のフラグを、そして &lt;code&gt;basePipelineIndex&lt;/code&gt; がない-1、 &lt;code&gt;basePipelineHandle&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b1fe5e52cff6a537adc020be1195120d8cf619b2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flags&lt;/code&gt; does not contain &lt;code&gt;VK_SPARSE_MEMORY_BIND_METADATA_BIT&lt;/code&gt;, the binding range &lt;strong&gt;must&lt;/strong&gt; be within the range [0,&lt;a href=&quot;#VkMemoryRequirements&quot;&gt;VkMemoryRequirements&lt;/a&gt;::&lt;code&gt;size&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;VK_SPARSE_MEMORY_BIND_METADATA_BIT&lt;/code&gt; が含まれていない場合、バインディング範囲&lt;strong&gt;は&lt;/strong&gt; [0、&lt;a href=&quot;#VkMemoryRequirements&quot;&gt;VkMemoryRequirements&lt;/a&gt; :: &lt;code&gt;size&lt;/code&gt; ）の範囲内である&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="94268edcaf668999c8167f59b7ca4f77eb80f457" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;flags&lt;/code&gt; includes &lt;code&gt;VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT&lt;/code&gt;, then the attachment is treated as if it shares physical memory with another attachment in the same render pass. This information limits the ability of the implementation to reorder certain operations (like layout transitions and the &lt;code&gt;loadOp&lt;/code&gt;) such that it is not improperly reordered against other uses of the same physical memory via a different attachment. This is described in more detail below.</source>
          <target state="translated">場合 &lt;code&gt;flags&lt;/code&gt; 含ま &lt;code&gt;VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT&lt;/code&gt; を、次いで、アタッチメントは、それが同じレンダリングパスで別のアタッチメントとの物理的なメモリを共有するかのように扱われます。この情報は、特定の操作（レイアウト遷移や &lt;code&gt;loadOp&lt;/code&gt; など）を並べ替える実装の機能を制限し、別のアタッチメントを介した同じ物理メモリの他の使用に対して不適切に並べ替えられないようにします。これについては、以下で詳しく説明します。</target>
        </trans-unit>
        <trans-unit id="d6b10dd68a3df228657883a5b0e34a7a202190bc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is a block-compression format, then buffers &lt;strong&gt;must&lt;/strong&gt; not support any features for the format.</source>
          <target state="translated">場合 &lt;code&gt;format&lt;/code&gt; 、ブロック圧縮形式である場合、バッファは&lt;strong&gt;必要があります&lt;/strong&gt;形式のいずれかの機能をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="6526e4fca135f9aa0c3be198a5e40bb1e4e29a87" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;format&lt;/code&gt; is not a supported image format, or if the combination of &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; is not supported for images, then &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; returns &lt;code&gt;VK_ERROR_FORMAT_NOT_SUPPORTED&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; がサポートされている画像フォーマットではない場合、または &lt;code&gt;format&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、 &lt;code&gt;tiling&lt;/code&gt; 、 &lt;code&gt;usage&lt;/code&gt; 、および &lt;code&gt;flags&lt;/code&gt; の組み合わせが画像でサポートされていない場合、 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; は &lt;code&gt;VK_ERROR_FORMAT_NOT_SUPPORTED&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="87d47979360797f9db0a28ad75085364eb22255a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;framebuffer&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;framebuffer&lt;/code&gt; が有効なハンドルである場合は、 &lt;code&gt;device&lt;/code&gt; から作成、割り当て、または取得されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="36ec1f3989f7b905b99cb3ce6e3bea90bec5bd34" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;framebuffer&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;framebuffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkFramebuffer&lt;/code&gt; handle</source>
          <target state="translated">場合は &lt;code&gt;framebuffer&lt;/code&gt; ない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;framebuffer&lt;/code&gt; &lt;strong&gt;必要があります&lt;/strong&gt;有効で &lt;code&gt;VkFramebuffer&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="4d662441c88392b2f9b891edcc8482065a17ba6d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; has a depth/stencil format with both depth and stencil components, then &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;subresourceRange&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; include both &lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; and &lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; 深度およびステンシル成分の両方を有する深さ/ステンシルフォーマットを有する、その後 &lt;code&gt;aspectMask&lt;/code&gt; のメンバー &lt;code&gt;subresourceRange&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;両方含む &lt;code&gt;VK_IMAGE_ASPECT_DEPTH_BIT&lt;/code&gt; と &lt;code&gt;VK_IMAGE_ASPECT_STENCIL_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="22a602a4ba75b76cd3e93f68666c62c4d78df7e2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; が有効なハンドルである場合、画像は &lt;code&gt;device&lt;/code&gt; から作成、割り当て、または取得されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="c2c5b908c4bc4f73a0d295ec52c14c9ac235a87f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; is non-sparse then it &lt;strong&gt;must&lt;/strong&gt; be bound completely and contiguously to a single &lt;code&gt;VkDeviceMemory&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; が非スパースの場合は、1つの &lt;code&gt;VkDeviceMemory&lt;/code&gt; オブジェクトに完全かつ連続的にバインドする&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="709ff55637659c48eee8c92c6059c88f437a777c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkImage&lt;/code&gt; handle</source>
          <target state="translated">場合は &lt;code&gt;image&lt;/code&gt; ない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;有効で &lt;code&gt;VkImage&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="cd3a0342165216859b73c0fa40fd15976b6b367f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for color attachments, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; 用いて作成された &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; と &lt;code&gt;usage&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;ことによって指定されるように、色の添付のためにサポートさ &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 用のフラグ &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値の &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05dd84b825445a79b30621d2370418a9afabe44f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for depth/stencil attachments, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; 用いて作成された &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; と &lt;code&gt;usage&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;ことによって指定されるように、深さ/ステンシル添付のためにサポートさ &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 用のフラグ &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値の &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68510d590e49ff75c23b0cf18defe6b675503f63" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for sampled images, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; 用いて作成された &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; と &lt;code&gt;usage&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; を、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;ことによって指定されるように、サンプリングされた画像のためにサポートさ &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; 用のフラグ &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値の &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5fb67a6acaa120becf2167fa69866784b43566ad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for storage images, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; 用いて作成された &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; と &lt;code&gt;usage&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt; を、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;ことによって指定されるように、保存画像のためにサポートさ &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; 用のフラグ &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値の &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa699a29d8b5d1c56667ef84a54b7f3dd8e64d56" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be format that has at least one supported feature bit present in the value of &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; 使用して作成された &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;の値に少なくとも1つのサポートされた機能ビット存在持つフォーマットである &lt;code&gt;VkFormatProperties&lt;/code&gt; を :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d016a518998bf6ade4849b823ed7ccc1c5951d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for color attachments, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; 用いて作成された &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; と &lt;code&gt;usage&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;ことによって指定されるように、色の添付のためにサポートさ &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 用のフラグ &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値の &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20d21570d48f1ad2ba072355d48b11b18b4b1d34" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for depth/stencil attachments, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; 用いて作成された &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; と &lt;code&gt;usage&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;ことによって指定されるように、深さ/ステンシル添付のためにサポートさ &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 用のフラグ &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値の &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76d498a5585df689eb0ecdfdde088d54f278396a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for sampled images, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; 用いて作成された &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; と &lt;code&gt;usage&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; を、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;ことによって指定されるように、サンプリングされた画像のためにサポートさ &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; 用のフラグ &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値の &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="916911a48b114ff8f5c464c73c21bb2013725bcf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported for storage images, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; 用いて作成された &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; と &lt;code&gt;usage&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt; を、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;ことによって指定されるように、保存画像のためにサポートさ &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; 用のフラグ &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値の &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="caf8f7a7a3cd1072beb9095a5b430fddaea1c7b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be format that has at least one supported feature bit present in the value of &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; が &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; で作成された場合、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VkFormatProperties&lt;/code&gt; の値に少なくとも1つのサポートされている機能ビットが存在するフォーマットである&lt;strong&gt;必要&lt;/strong&gt;があります:: 同じ値の &lt;code&gt;format&lt;/code&gt; 持つ &lt;code&gt;optimalTilingFeatures&lt;/code&gt; によって返される &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="29bf89052a966dcb125474079b8bdc7559320ccd" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with a sharing mode of &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;, &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; and &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; both be &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; が &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; の共有モードで作成された場合、 &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; と &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;どちらも &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt; である&lt;strong&gt;必要が&lt;/strong&gt;あります</target>
        </trans-unit>
        <trans-unit id="a0ffb5134fc86a2f0f83d99f935c208ac159fc8f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with a sharing mode of &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt;, &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; and &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; either both be &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;, or both be a valid queue family (see &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-queueprops&quot;&gt;html/vkspec.html#devsandqueues-queueprops&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; が &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt; の共有モードで作成された場合、 &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; および &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、両方が &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt; であるか、または両方が有効なキューファミリである必要があります（&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-queueprops&quot;&gt;html / vkspec.html＃devsandqueues-queuepropsを参照&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="7d7bde11f000421f0a865adbe2f9228e223970c7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with a sharing mode of &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt;, and &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; and &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; are not &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;, at least one of them &lt;strong&gt;must&lt;/strong&gt; be the same as the family of the queue that will execute this barrier</source>
          <target state="translated">場合は &lt;code&gt;image&lt;/code&gt; 共有モードで作成された &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt; 、そして &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; と &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; はありません &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt; 、それらの少なくとも一つが&lt;strong&gt;しなければならない&lt;/strong&gt;。この障壁を実行しますキューの家族と同じであること</target>
        </trans-unit>
        <trans-unit id="91203b3732e28c2d54555e7a5da367fca1362c5b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with the &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; flag, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;can&lt;/strong&gt; be different from the image&amp;rsquo;s format, but if they are not equal they &lt;strong&gt;must&lt;/strong&gt; be &lt;em&gt;compatible&lt;/em&gt;. Image format compatibility is defined in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-formats-compatibility-classes&quot;&gt;Format Compatibility Classes&lt;/a&gt; section. Views of compatible formats will have the same mapping between texel coordinates and memory locations irrespective of the &lt;code&gt;format&lt;/code&gt;, with only the interpretation of the bit pattern changing.</source>
          <target state="translated">場合は &lt;code&gt;image&lt;/code&gt; 使用して作成された &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; のフラグ、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;でき&lt;/strong&gt;、画像のフォーマットとは異なることが、彼らは、彼らが等しくない場合に&lt;strong&gt;しなければならない&lt;/strong&gt;こと&lt;em&gt;の互換性&lt;/em&gt;。画像形式の互換性は、「&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-formats-compatibility-classes&quot;&gt;形式の互換性クラス」&lt;/a&gt;セクションで定義されています。互換性のあるフォーマットのビューは、 &lt;code&gt;format&lt;/code&gt; に関係なく、テクセル座標とメモリ位置の間で同じマッピングを持ち、ビットパターンの解釈のみが変化します。</target>
        </trans-unit>
        <trans-unit id="9fbae1e6663e7915acc1fe3b708275cbc842d6a3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was created with the &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; flag, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be compatible with the &lt;code&gt;format&lt;/code&gt; used to create &lt;code&gt;image&lt;/code&gt;, as defined in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-formats-compatibility-classes&quot;&gt;Format Compatibility Classes&lt;/a&gt;</source>
          <target state="translated">場合は &lt;code&gt;image&lt;/code&gt; 使用して作成された &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; のフラグ、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;との互換性がある &lt;code&gt;format&lt;/code&gt; 作成するために使用される &lt;code&gt;image&lt;/code&gt; で定義され、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-formats-compatibility-classes&quot;&gt;フォーマットの互換性クラス&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="be78940e7bce60efd4e6172142c7297bbe0acfef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was not created with &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; then &lt;code&gt;viewType&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt; or &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; が &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; で作成されていない場合、 &lt;code&gt;viewType&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt; または &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt; であってはなり&lt;strong&gt;ませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="c73590a7ae472ad71eb585217ca27b348860c349" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;image&lt;/code&gt; was not created with the &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; flag, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be identical to the &lt;code&gt;format&lt;/code&gt; used to create &lt;code&gt;image&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;image&lt;/code&gt; で作成されていない &lt;code&gt;VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT&lt;/code&gt; のフラグ、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;と同一である &lt;code&gt;format&lt;/code&gt; を作成するために使用される &lt;code&gt;image&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="655b64ab0c5dd20a68eab0e67a7aa49698f0d5f1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageBindCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pImageBinds&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;imageBindCount&lt;/code&gt; valid &lt;code&gt;VkSparseImageMemoryBindInfo&lt;/code&gt; structures</source>
          <target state="translated">場合 &lt;code&gt;imageBindCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pImageBinds&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;imageBindCount&lt;/code&gt; 有効 &lt;code&gt;VkSparseImageMemoryBindInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="469f85624b56db0eb1a8bb56d19eb2c71106c1e6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageMemoryBarrierCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;imageMemoryBarrierCount&lt;/code&gt; valid &lt;code&gt;VkImageMemoryBarrier&lt;/code&gt; structures</source>
          <target state="translated">場合 &lt;code&gt;imageMemoryBarrierCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;imageMemoryBarrierCount&lt;/code&gt; 有効 &lt;code&gt;VkImageMemoryBarrier&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="8787fcc42b81dae679fcee3a6b5b723a4287faba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageOpaqueBindCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pImageOpaqueBinds&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;imageOpaqueBindCount&lt;/code&gt; valid &lt;code&gt;VkSparseImageOpaqueMemoryBindInfo&lt;/code&gt; structures</source>
          <target state="translated">場合 &lt;code&gt;imageOpaqueBindCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pImageOpaqueBinds&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;imageOpaqueBindCount&lt;/code&gt; 有効 &lt;code&gt;VkSparseImageOpaqueMemoryBindInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="7c9081aa69255d2ceffa59607e396e0dd38c3450" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxImageDimension1D&lt;/code&gt;, or &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxExtent.width&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure) - whichever is higher</source>
          <target state="translated">場合 &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 、 &lt;code&gt;extent.width&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;未満又は等しいこと &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxImageDimension1D&lt;/code&gt; 、又は &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxExtent.width&lt;/code&gt; （によって返される &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; と &lt;code&gt;format&lt;/code&gt; 、 &lt;code&gt;imageType&lt;/code&gt; 、 &lt;code&gt;tiling&lt;/code&gt; 、 &lt;code&gt;usage&lt;/code&gt; 、および &lt;code&gt;flags&lt;/code&gt; 、この構造のものに等しいです） -どちらか高い方</target>
        </trans-unit>
        <trans-unit id="1a32bcfa391a5b4002e29c4247fdfcb7ddc7e260" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5da21c6988da23a254eba6335fa2a23db38cd7b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, both &lt;code&gt;extent.height&lt;/code&gt; and &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 、両方 &lt;code&gt;extent.height&lt;/code&gt; と &lt;code&gt;extent.depth&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69f7491e2261a16dc0a0ab7520b8f1a34c69be14" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt; and &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal and &lt;code&gt;arrayLayers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than or equal to 6</source>
          <target state="translated">場合 &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; と &lt;code&gt;flags&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; は、 &lt;code&gt;extent.width&lt;/code&gt; と &lt;code&gt;extent.height&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;等しくなると &lt;code&gt;arrayLayers&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;以上6に等しくなります</target>
        </trans-unit>
        <trans-unit id="fd7f9a4ad14a26f1deae3d88454df37b9f2d601f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt; and &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxImageDimensionCube&lt;/code&gt;, or &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxExtent.width&lt;/code&gt;/height (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure) - whichever is higher</source>
          <target state="translated">場合 &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; と &lt;code&gt;flags&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; を、 &lt;code&gt;extent.width&lt;/code&gt; と &lt;code&gt;extent.height&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;未満又は等しいこと &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxImageDimensionCube&lt;/code&gt; 、又は &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxExtent.width&lt;/code&gt; /身長（によって返される &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; と &lt;code&gt;format&lt;/code&gt; 、 &lt;code&gt;imageType&lt;/code&gt; 、 &lt;code&gt;tiling&lt;/code&gt; 、 &lt;code&gt;usage&lt;/code&gt; 、およびこの構造の &lt;code&gt;flags&lt;/code&gt; と等しいフラグ）-どちらか高い方</target>
        </trans-unit>
        <trans-unit id="47204cac8e2808373a2cf7fe6260136512f55675" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; does not contain &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt; and &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxImageDimension2D&lt;/code&gt;, or &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxExtent.width&lt;/code&gt;/height (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure) - whichever is higher</source>
          <target state="translated">場合 &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; と &lt;code&gt;flags&lt;/code&gt; 含まれていない &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; を、 &lt;code&gt;extent.width&lt;/code&gt; と &lt;code&gt;extent.height&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;未満であるか、または等しい &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxImageDimension2D&lt;/code&gt; 、又は &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxExtent.width&lt;/code&gt; で返される（/高 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; と &lt;code&gt;format&lt;/code&gt; 、 &lt;code&gt;imageType&lt;/code&gt; 、 &lt;code&gt;tiling&lt;/code&gt; 、 &lt;code&gt;usage&lt;/code&gt; 、およびこの構造の &lt;code&gt;flags&lt;/code&gt; と等しいフラグ）-どちらか高い方</target>
        </trans-unit>
        <trans-unit id="8ba6aecfbf8778e575c860374c8821c79d7be814" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、 &lt;code&gt;extent.depth&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="04c28de959e81236f0fb6a32b0c98e24bfc06cdb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt;, &lt;code&gt;arrayLayers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; 、 &lt;code&gt;arrayLayers&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6acc9b47f2b791178140688c6de5728437351550" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt;, &lt;code&gt;extent.height&lt;/code&gt; and &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxImageDimension3D&lt;/code&gt;, or &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxExtent.width&lt;/code&gt;/height/depth (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure) - whichever is higher</source>
          <target state="translated">場合 &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; 、 &lt;code&gt;extent.width&lt;/code&gt; 、 &lt;code&gt;extent.height&lt;/code&gt; と &lt;code&gt;extent.depth&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;未満又は等しいこと &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxImageDimension3D&lt;/code&gt; 、又は &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxExtent.width&lt;/code&gt; /高さ/深さ（によって返される &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; と &lt;code&gt;format&lt;/code&gt; 、 &lt;code&gt;imageType&lt;/code&gt; 、 &lt;code&gt;tiling&lt;/code&gt; 、 &lt;code&gt;usage&lt;/code&gt; 、およびこの構造の &lt;code&gt;flags&lt;/code&gt; と等しいフラグ）-どちらか高い方</target>
        </trans-unit>
        <trans-unit id="6792c28f33e8538b9ea0ad9954bdc1bd1ddb0bf7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageView&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;imageView&lt;/code&gt; が有効なハンドルである場合は、 &lt;code&gt;device&lt;/code&gt; から作成、割り当て、または取得されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6563992c5f16d9cc4e1fd36efb5e2373753f52a8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;imageView&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;imageView&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkImageView&lt;/code&gt; handle</source>
          <target state="translated">場合 &lt;code&gt;imageView&lt;/code&gt; ない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;imageView&lt;/code&gt; &lt;strong&gt;必要があります&lt;/strong&gt;有効で &lt;code&gt;VkImageView&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="3ac56b22df2f1eba07211dd4be9c473b4f109d3d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialDataSize&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pInitialData&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;initialDataSize&lt;/code&gt; bytes</source>
          <target state="translated">場合 &lt;code&gt;initialDataSize&lt;/code&gt; はない &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pInitialData&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;の配列へのポインタである &lt;code&gt;initialDataSize&lt;/code&gt; バイト</target>
        </trans-unit>
        <trans-unit id="76895055b0cfd759dbf2bd3dc669a8b0acf0c96f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialDataSize&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pInitialData&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been retrieved from a previous call to &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;initialDataSize&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pInitialData&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;の以前の呼び出しから取得されています &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="327661d4b2c47c7c938b652f22378ee6dc616088" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;initialDataSize&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; be equal to the size of &lt;code&gt;pInitialData&lt;/code&gt;, as returned by &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt; when &lt;code&gt;pInitialData&lt;/code&gt; was originally retrieved</source>
          <target state="translated">場合 &lt;code&gt;initialDataSize&lt;/code&gt; はない &lt;code&gt;0&lt;/code&gt; 、それが&lt;strong&gt;なければならない&lt;/strong&gt;の大きさと等しくなるよう &lt;code&gt;pInitialData&lt;/code&gt; によって返される、 &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt; 場合 &lt;code&gt;pInitialData&lt;/code&gt; が元々検索されました</target>
        </trans-unit>
        <trans-unit id="de83bb42cdb8dbd77ce76aecb288a70c72f6baef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;inputAttachmentCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pInputAttachments&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;inputAttachmentCount&lt;/code&gt; valid &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures</source>
          <target state="translated">場合 &lt;code&gt;inputAttachmentCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pInputAttachments&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;inputAttachmentCount&lt;/code&gt; 有効 &lt;code&gt;VkAttachmentReference&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="0d7d8e4147c03eecd6f3ab685835c220ca8a84fa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;instance&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;instance&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkInstance&lt;/code&gt; handle</source>
          <target state="translated">場合は &lt;code&gt;instance&lt;/code&gt; ない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;instance&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;有効で &lt;code&gt;VkInstance&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="8a876847e232217e54c091837ac81d04ad7f3bd2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;logicOpEnable&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;logicOp&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;a href=&quot;#VkLogicOp&quot;&gt;VkLogicOp&lt;/a&gt; value</source>
          <target state="translated">場合 &lt;code&gt;logicOpEnable&lt;/code&gt; がある &lt;code&gt;VK_TRUE&lt;/code&gt; 、 &lt;code&gt;logicOp&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効で&lt;a href=&quot;#VkLogicOp&quot;&gt;VkLogicOp&lt;/a&gt;値</target>
        </trans-unit>
        <trans-unit id="5453c8142ab07b3f802da000bef608b22d8686f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;mapEntryCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pMapEntries&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;mapEntryCount&lt;/code&gt; valid &lt;code&gt;VkSpecializationMapEntry&lt;/code&gt; structures</source>
          <target state="translated">場合 &lt;code&gt;mapEntryCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pMapEntries&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;mapEntryCount&lt;/code&gt; 有効 &lt;code&gt;VkSpecializationMapEntry&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="9b192879eb3ec84d9edfc23d30ca45289e07717a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memory&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;memory&lt;/code&gt; が有効なハンドルである場合は、 &lt;code&gt;device&lt;/code&gt; から作成、割り当て、または取得されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="c0354e975881e43105f8ace23791a829b1f21b19" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memory&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;memory&lt;/code&gt; and &lt;code&gt;memoryOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; match the memory requirements of the resource, as described in section &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-association&quot;&gt;html/vkspec.html#resources-association&lt;/a&gt;</source>
          <target state="translated">場合は &lt;code&gt;memory&lt;/code&gt; ない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;memory&lt;/code&gt; および &lt;code&gt;memoryOffset&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;のセクションで説明したように、リソースのメモリ要件に合致&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-association&quot;&gt;HTML / vkspec.html＃リソース会合&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="705bea1531db743d3f1cbebf7c05c018db563064" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memory&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;memory&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkDeviceMemory&lt;/code&gt; handle</source>
          <target state="translated">場合は &lt;code&gt;memory&lt;/code&gt; ない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;memory&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;有効で &lt;code&gt;VkDeviceMemory&lt;/code&gt; ハンドル</target>
        </trans-unit>
        <trans-unit id="c8e8b088a15d14fa78cce225bd5e1a8bdae849d7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memory&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;memory&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not have been created with a memory type that reports &lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt; bit set</source>
          <target state="translated">場合は &lt;code&gt;memory&lt;/code&gt; ない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;memory&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;報告メモリタイプを使用して作成されていない &lt;code&gt;VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT&lt;/code&gt; がセットビット</target>
        </trans-unit>
        <trans-unit id="b3155b99fc0510638fd99c6055d9430708064b42" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;memoryBarrierCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;memoryBarrierCount&lt;/code&gt; valid &lt;code&gt;VkMemoryBarrier&lt;/code&gt; structures</source>
          <target state="translated">場合 &lt;code&gt;memoryBarrierCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pMemoryBarriers&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;memoryBarrierCount&lt;/code&gt; 有効 &lt;code&gt;VkMemoryBarrier&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="4f55e412f7d96a3061a898b58a1576a462190761" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;oldLayout&lt;/code&gt; is not equal to &lt;code&gt;newLayout&lt;/code&gt;, then the memory barrier defines an &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-image-layout-transitions&quot;&gt;image layout transition&lt;/a&gt; for the specified image subresource range.</source>
          <target state="translated">場合 &lt;code&gt;oldLayout&lt;/code&gt; が等しくない &lt;code&gt;newLayout&lt;/code&gt; 、メモリバリアは定義&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-image-layout-transitions&quot;&gt;画像レイアウト移行&lt;/a&gt;指定された画像サブリソース範囲のを。</target>
        </trans-unit>
        <trans-unit id="bd34f1225339f746b578dbb1393620eb2c46edea" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pAllocator&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;pAllocator&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;pAllocator&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効なへのポインタである &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="afb27ff8f07a2cfa4c573f71385b0415ea5a6606" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pApplicationInfo&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pApplicationInfo&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkApplicationInfo&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;pApplicationInfo&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;pApplicationInfo&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効なへのポインタである &lt;code&gt;VkApplicationInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="1bf99137c04d2828ed3a8ea5217673d4bdb8088b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pApplicationName&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pApplicationName&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a null-terminated UTF-8 string</source>
          <target state="translated">場合 &lt;code&gt;pApplicationName&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;pApplicationName&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ヌル終端UTF-8文字列であります</target>
        </trans-unit>
        <trans-unit id="4adeea073037e39cb389c3da9713e2d15d03b1e6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pCode&lt;/code&gt; declares any of the capabilities that are listed as not required by the implementation, the relevant feature &lt;strong&gt;must&lt;/strong&gt; be enabled, as listed in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#spirvenv-capabilities-table&quot;&gt;SPIR-V Environment&lt;/a&gt; appendix</source>
          <target state="translated">&lt;code&gt;pCode&lt;/code&gt; が実装に不要と記載されている機能のいずれかを宣言する場合、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#spirvenv-capabilities-table&quot;&gt;SPIR-V環境の&lt;/a&gt;付録に記載されているように、関連する機能を有効にする&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="5d5e4b60aa1137524792b595e49b147934b3de8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pData&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the maximum size of the data that &lt;strong&gt;can&lt;/strong&gt; be retrieved from the pipeline cache, in bytes, is returned in &lt;code&gt;pDataSize&lt;/code&gt;. Otherwise, &lt;code&gt;pDataSize&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the size of the buffer, in bytes, pointed to by &lt;code&gt;pData&lt;/code&gt;, and on return the variable is overwritten with the amount of data actually written to &lt;code&gt;pData&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pData&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; の場合、パイプラインキャッシュから取得&lt;strong&gt;できる&lt;/strong&gt;データの最大サイズ（バイト単位）が &lt;code&gt;pDataSize&lt;/code&gt; に返されます。そうでなければ、 &lt;code&gt;pDataSize&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;で指さ、バイト単位で、バッファのサイズにユーザによって変数セットを指し &lt;code&gt;pData&lt;/code&gt; を、リターンに変数が実際に書き込まれるデータの量を上書きする &lt;code&gt;pData&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="c268ed5bfba26ffc34f3e0ca2b4e127a2cb3cd29" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pDataSize&lt;/code&gt; is less than the maximum size that &lt;strong&gt;can&lt;/strong&gt; be retrieved by the pipeline cache, at most &lt;code&gt;pDataSize&lt;/code&gt; bytes will be written to &lt;code&gt;pData&lt;/code&gt;, and &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt; will return &lt;code&gt;VK_INCOMPLETE&lt;/code&gt;. Any data written to &lt;code&gt;pData&lt;/code&gt; is valid and &lt;strong&gt;can&lt;/strong&gt; be provided as the &lt;code&gt;pInitialData&lt;/code&gt; member of the &lt;code&gt;VkPipelineCacheCreateInfo&lt;/code&gt; structure passed to &lt;code&gt;vkCreatePipelineCache&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;pDataSize&lt;/code&gt; が少ない最大サイズよりもある&lt;strong&gt;ことができ&lt;/strong&gt;、パイプラインキャッシュによって取得され、最大で &lt;code&gt;pDataSize&lt;/code&gt; バイトはに書き込まれます &lt;code&gt;pData&lt;/code&gt; を、そして &lt;code&gt;vkGetPipelineCacheData&lt;/code&gt; が返されます &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; を。 &lt;code&gt;pData&lt;/code&gt; に書き込まれたデータはすべて有効であり、 &lt;code&gt;VkPipelineCacheCreateInfo&lt;/code&gt; 渡される &lt;code&gt;vkCreatePipelineCache&lt;/code&gt; 構造の &lt;code&gt;pInitialData&lt;/code&gt; メンバーとして提供&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="cf6165b835c209239173e548b0c17f093d3fb3b7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pDataSize&lt;/code&gt; is less than what is necessary to store this header, nothing will be written to &lt;code&gt;pData&lt;/code&gt; and zero will be written to &lt;code&gt;pDataSize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pDataSize&lt;/code&gt; がこのヘッダーを格納するために必要なものより小さい場合、pDataには何も書き込まれず、 &lt;code&gt;pData&lt;/code&gt; Sizeにはゼロが書き込まれ &lt;code&gt;pDataSize&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ede48e8f4820ef654ca8605142ed27b2b9bb9441" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pDepthStencilAttachment&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkAttachmentReference&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効なへのポインタである &lt;code&gt;VkAttachmentReference&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="a2828c50afaed410c863128886e1bd4af2b405e7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; is not &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; and any attachments in &lt;code&gt;pColorAttachments&lt;/code&gt; are not &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;, they &lt;strong&gt;must&lt;/strong&gt; have the same sample count</source>
          <target state="translated">場合 &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; がされていない &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; とのいずれかの添付ファイル &lt;code&gt;pColorAttachments&lt;/code&gt; がされていない &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; 、彼らが&lt;strong&gt;しなければならない&lt;/strong&gt;同じサンプル数を持っています</target>
        </trans-unit>
        <trans-unit id="c162a54f5c0e1c374e6cb530c152ab7bc06a6588" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pDynamicState&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pDynamicState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineDynamicStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;pDynamicState&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;pDynamicState&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効なへのポインタである &lt;code&gt;VkPipelineDynamicStateCreateInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="6e53e84a8774324df1d559830cb534dac29e86ef" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pEnabledFeatures&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pEnabledFeatures&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;pEnabledFeatures&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;pEnabledFeatures&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効なへのポインタである &lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="d5245a93fd77b45f2fdb11922575975a42e04639" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pEngineName&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pEngineName&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a null-terminated UTF-8 string</source>
          <target state="translated">場合 &lt;code&gt;pEngineName&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;pEngineName&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ヌル終端UTF-8文字列であります</target>
        </trans-unit>
        <trans-unit id="34e116f58ebc0a12379cb8e17373cedc9c02233e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pEvents&lt;/code&gt; includes one or more events that will be signaled by &lt;code&gt;vkSetEvent&lt;/code&gt; after &lt;code&gt;commandBuffer&lt;/code&gt; has been submitted to a queue, then &lt;code&gt;vkCmdWaitEvents&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be called inside a render pass instance</source>
          <target state="translated">場合 &lt;code&gt;pEvents&lt;/code&gt; がによって通知される1つ以上のイベントが含ま &lt;code&gt;vkSetEvent&lt;/code&gt; 後 &lt;code&gt;commandBuffer&lt;/code&gt; がキューに登録されましたが、その後、 &lt;code&gt;vkCmdWaitEvents&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;レンダーパスインスタンス内部で呼び出されません</target>
        </trans-unit>
        <trans-unit id="a78254cb10e3d03e778330f65e7d9801f82022ec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pLayerName&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pLayerName&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a null-terminated UTF-8 string</source>
          <target state="translated">場合は &lt;code&gt;pLayerName&lt;/code&gt; ない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;pLayerName&lt;/code&gt; &lt;strong&gt;必要があり&lt;/strong&gt;、NULLで終了するUTF-8文字列であります</target>
        </trans-unit>
        <trans-unit id="28dafc84b0582e51bed9045362efbdbde3f0f2eb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pOriginal&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then &lt;code&gt;pfnReallocation&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; behave equivalently to a call to &lt;a href=&quot;#PFN_vkAllocationFunction&quot;&gt;PFN_vkAllocationFunction&lt;/a&gt; with the same parameter values (without &lt;code&gt;pOriginal&lt;/code&gt;).</source>
          <target state="translated">場合 &lt;code&gt;pOriginal&lt;/code&gt; がある &lt;code&gt;NULL&lt;/code&gt; 、その後 &lt;code&gt;pfnReallocation&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の呼び出しと等価に振る舞う&lt;a href=&quot;#PFN_vkAllocationFunction&quot;&gt;PFN_vkAllocationFunction&lt;/a&gt;（ない同じパラメータ値と &lt;code&gt;pOriginal&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="d3fdeeb5c10628e29c9e996a8c4d5f06dd502054" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pOriginal&lt;/code&gt; is non-&lt;code&gt;NULL&lt;/code&gt;, the implementation &lt;strong&gt;must&lt;/strong&gt; ensure that &lt;code&gt;alignment&lt;/code&gt; is equal to the &lt;code&gt;alignment&lt;/code&gt; used to originally allocate &lt;code&gt;pOriginal&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;pOriginal&lt;/code&gt; が非ある &lt;code&gt;NULL&lt;/code&gt; 、実装が&lt;strong&gt;なければならない&lt;/strong&gt;ことを保証 &lt;code&gt;alignment&lt;/code&gt; に等しい &lt;code&gt;alignment&lt;/code&gt; 元々割り当てに使用 &lt;code&gt;pOriginal&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="c4ddb06297fba3d6c9032052243c3ad8690ce415" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pPhysicalDevices&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of physical devices available is returned in &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt;. Otherwise, &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pPhysicalDevices&lt;/code&gt; array, and on return the variable is overwritten with the number of handles actually written to &lt;code&gt;pPhysicalDevices&lt;/code&gt;. If &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; is less than the number of physical devices available, at most &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; structures will be written. If &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; is smaller than the number of physical devices available, &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; will be returned instead of &lt;code&gt;VK_SUCCESS&lt;/code&gt;, to indicate that not all the available physical devices were returned.</source>
          <target state="translated">&lt;code&gt;pPhysicalDevices&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; の場合、使用可能な物理デバイスの数が &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; に返されます。それ以外の場合、 &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、ユーザーが &lt;code&gt;pPhysicalDevices&lt;/code&gt; 配列の要素の数に設定した変数を指す&lt;strong&gt;必要が&lt;/strong&gt;あり、戻り時に、変数は実際に &lt;code&gt;pPhysicalDevices&lt;/code&gt; に書き込まれたハンドルの数で上書きされます。場合 &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; が最大で使用可能な物理デバイスの数よりも少ない &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; の構造書き込まれます。 &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; が使用可能な物理デバイスの数より小さい場合、 &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; &lt;code&gt;VK_SUCCESS&lt;/code&gt; の代わりに返され、使用可能なすべての物理デバイスが返されなかったことを示します。</target>
        </trans-unit>
        <trans-unit id="d29f23404131ef20d869ce35dfd78a048c3093cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pProperties&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of extensions properties available is returned in &lt;code&gt;pPropertyCount&lt;/code&gt;. Otherwise, &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pProperties&lt;/code&gt; array, and on return the variable is overwritten with the number of structures actually written to &lt;code&gt;pProperties&lt;/code&gt;. If &lt;code&gt;pPropertyCount&lt;/code&gt; is less than the number of extension properties available, at most &lt;code&gt;pPropertyCount&lt;/code&gt; structures will be written. If &lt;code&gt;pPropertyCount&lt;/code&gt; is smaller than the number of extensions available, &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; will be returned instead of &lt;code&gt;VK_SUCCESS&lt;/code&gt;, to indicate that not all the available properties were returned.</source>
          <target state="translated">&lt;code&gt;pProperties&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; の場合、使用可能な拡張プロパティの数が &lt;code&gt;pPropertyCount&lt;/code&gt; に返されます。それ以外の場合、 &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、ユーザーが &lt;code&gt;pProperties&lt;/code&gt; 配列の要素の数に設定した変数を指す&lt;strong&gt;必要が&lt;/strong&gt;あり、戻り時に、変数は実際に &lt;code&gt;pProperties&lt;/code&gt; に書き込まれた構造の数で上書きされます。場合 &lt;code&gt;pPropertyCount&lt;/code&gt; がほとんどで入手可能な拡張プロパティの数よりも少ない &lt;code&gt;pPropertyCount&lt;/code&gt; の構造書き込まれます。 &lt;code&gt;pPropertyCount&lt;/code&gt; が利用可能な拡張の数よりも小さい場合、 &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; が返されます。 &lt;code&gt;VK_SUCCESS&lt;/code&gt; 、利用可能なすべてのプロパティが返されなかったことを示します。</target>
        </trans-unit>
        <trans-unit id="69ffbf0a68d3e52f9397641c4fbfaaa9e81e61ba" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pProperties&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of layer properties available is returned in &lt;code&gt;pPropertyCount&lt;/code&gt;. Otherwise, &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pProperties&lt;/code&gt; array, and on return the variable is overwritten with the number of structures actually written to &lt;code&gt;pProperties&lt;/code&gt;. If &lt;code&gt;pPropertyCount&lt;/code&gt; is less than the number of layer properties available, at most &lt;code&gt;pPropertyCount&lt;/code&gt; structures will be written. If &lt;code&gt;pPropertyCount&lt;/code&gt; is smaller than the number of layers available, &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; will be returned instead of &lt;code&gt;VK_SUCCESS&lt;/code&gt;, to indicate that not all the available layer properties were returned.</source>
          <target state="translated">&lt;code&gt;pProperties&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; の場合、使用可能なレイヤープロパティの数が &lt;code&gt;pPropertyCount&lt;/code&gt; に返されます。それ以外の場合、 &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、ユーザーが &lt;code&gt;pProperties&lt;/code&gt; 配列の要素の数に設定した変数を指す&lt;strong&gt;必要が&lt;/strong&gt;あり、戻り時に、変数は実際に &lt;code&gt;pProperties&lt;/code&gt; に書き込まれた構造の数で上書きされます。場合 &lt;code&gt;pPropertyCount&lt;/code&gt; がほとんどで入手可能なレイヤプロパティの数よりも少ない &lt;code&gt;pPropertyCount&lt;/code&gt; の構造書き込まれます。 &lt;code&gt;pPropertyCount&lt;/code&gt; が利用可能なレイヤーの数よりも小さい場合、 &lt;code&gt;VK_INCOMPLETE&lt;/code&gt; が返されます。 &lt;code&gt;VK_SUCCESS&lt;/code&gt; 、使用可能なすべてのレイヤープロパティが返されなかったことを示します。</target>
        </trans-unit>
        <trans-unit id="3803b16ef528e0e7585ebb523bba238237223a02" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pProperties&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of sparse format properties available is returned in &lt;code&gt;pPropertyCount&lt;/code&gt;. Otherwise, &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pProperties&lt;/code&gt; array, and on return the variable is overwritten with the number of structures actually written to &lt;code&gt;pProperties&lt;/code&gt;. If &lt;code&gt;pPropertyCount&lt;/code&gt; is less than the number of sparse format properties available, at most &lt;code&gt;pPropertyCount&lt;/code&gt; structures will be written.</source>
          <target state="translated">&lt;code&gt;pProperties&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; の場合、使用可能なスパースフォーマットプロパティの数が &lt;code&gt;pPropertyCount&lt;/code&gt; に返されます。それ以外の場合、 &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、ユーザーが &lt;code&gt;pProperties&lt;/code&gt; 配列の要素数に設定した変数を指す&lt;strong&gt;必要が&lt;/strong&gt;あり、戻り時に、変数は実際に &lt;code&gt;pProperties&lt;/code&gt; に書き込まれた構造体の数で上書きされます。場合 &lt;code&gt;pPropertyCount&lt;/code&gt; は、最大で可能なスパース形式のプロパティの数、より少ない &lt;code&gt;pPropertyCount&lt;/code&gt; の構造が書き込まれます。</target>
        </trans-unit>
        <trans-unit id="8a1e8547822f420f7b662e78f9360ed6d49e75e5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of queue families available is returned in &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt;. Otherwise, &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; array, and on return the variable is overwritten with the number of structures actually written to &lt;code&gt;pQueueFamilyProperties&lt;/code&gt;. If &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; is less than the number of queue families available, at most &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; structures will be written.</source>
          <target state="translated">&lt;code&gt;pQueueFamilyProperties&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; の場合、使用可能なキューファミリの数が &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; に返されます。それ以外の場合、 &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、ユーザーが &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; 配列の要素の数に設定した変数を指す&lt;strong&gt;必要が&lt;/strong&gt;あり、戻り時に、変数は実際に &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; に書き込まれた構造の数で上書きされます。場合 &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; がほとんどで、利用可能キュー家族の数よりも少ない &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; の構造書き込まれます。</target>
        </trans-unit>
        <trans-unit id="d6a61c8f411b9499a186e3a39db51b17f2f6d678" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pResolveAttachments&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, for each resolve attachment that does not have the value &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;, the corresponding color attachment &lt;strong&gt;must&lt;/strong&gt; not have the value &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pResolveAttachments&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; でない場合、値 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; を持たない解決の添付ファイルごとに、対応する色の添付ファイルに値 &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; があっては&lt;strong&gt;なりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="fed082c6ee28bf8a79ef0a715771ac0211ff864f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pResolveAttachments&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, the sample count of each element of &lt;code&gt;pColorAttachments&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be anything other than &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;pResolveAttachments&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、の各要素のサンプル数 &lt;code&gt;pColorAttachments&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;以外何もすることが &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d8a1f6ba6f7b8fc846befe2e6693efc1f7f8416e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pSampleMask&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pSampleMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of \(\lceil{\mathit{rasterizationSamples} \over 32}\rceil\) &lt;code&gt;VkSampleMask&lt;/code&gt; values</source>
          <target state="translated">場合 &lt;code&gt;pSampleMask&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;pSampleMask&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;（\ lceil {\ mathit {rasterizationSamples} \ 32上} \ rceil \）\の配列へのポインタである &lt;code&gt;VkSampleMask&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="adcbd2f93cae55f38abc9cd723b9339a40ce5220" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; is &lt;code&gt;NULL&lt;/code&gt;, then the number of sparse memory requirements available is returned in &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt;. Otherwise, &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; point to a variable set by the user to the number of elements in the &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; array, and on return the variable is overwritten with the number of structures actually written to &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt;. If &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; is less than the number of sparse memory requirements available, at most &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; structures will be written.</source>
          <target state="translated">&lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; の場合、使用可能なスパースメモリ要件の数が &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; に返されます。それ以外の場合、 &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、ユーザーが &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; 配列の要素の数に設定した変数を指す&lt;strong&gt;必要が&lt;/strong&gt;あり、戻り時に、変数は実際に &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; に書き込まれた構造体の数で上書きされます。場合 &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; がほとんどで入手可能なスパースメモリ要件の数、より少ない &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; の構造書き込まれます。</target>
        </trans-unit>
        <trans-unit id="eb3f577bfc3106b4f325f3622aa3a0fd0975900a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pSpecializationInfo&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pSpecializationInfo&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkSpecializationInfo&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;pSpecializationInfo&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、 &lt;code&gt;pSpecializationInfo&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効なへのポインタである &lt;code&gt;VkSpecializationInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="1a7d26ead84a57c1b198f2d9cd849b58fdd65412" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a fragment shader stage and a geometry shader stage, and the fragment shader code reads from an input variable that is decorated with &lt;code&gt;PrimitiveID&lt;/code&gt;, then the geometry shader code &lt;strong&gt;must&lt;/strong&gt; write to a matching output variable, decorated with &lt;code&gt;PrimitiveID&lt;/code&gt;, in all execution paths</source>
          <target state="translated">もし &lt;code&gt;pStages&lt;/code&gt; がフラグメントシェーダステージを含み、ジオメトリシェーダステージと、フラグメントシェーダコードを用いて装飾された入力変数から読み出し &lt;code&gt;PrimitiveID&lt;/code&gt; 、次にジオメトリシェーダコードが&lt;strong&gt;なければならない&lt;/strong&gt;で飾らマッチング出力変数への書き込み &lt;code&gt;PrimitiveID&lt;/code&gt; すべての実行パスにおいて、</target>
        </trans-unit>
        <trans-unit id="cb19585720d0f53bc6a9f47b1a01caedfa4e7faa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a fragment shader stage, its shader code &lt;strong&gt;must&lt;/strong&gt; not read from any input attachment that is defined as &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; in &lt;code&gt;subpass&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; にフラグメントシェーダーステージが含まれている場合、そのシェーダーコード&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;subpass&lt;/code&gt; &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; として定義されている入力アタッチメントから読み取っては&lt;strong&gt;なりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="213003591c9726b8d96fe3269ef35d40298ac3b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a geometry shader stage, and also includes tessellation shader stages, its shader code &lt;strong&gt;must&lt;/strong&gt; contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies an input primitive type that is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution&quot;&gt;compatible&lt;/a&gt; with the primitive topology that is output by the tessellation stages</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; にジオメトリシェーダーステージが含まれ、テッセレーションシェーダーステージも含まれる場合、そのシェーダーコードに&lt;strong&gt;は&lt;/strong&gt;、テッセレーションステージによって出力されるプリミティブトポロジと&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution&quot;&gt;互換性の&lt;/a&gt;ある入力プリミティブタイプを指定する &lt;code&gt;OpExecutionMode&lt;/code&gt; 命令が含まれている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="eb8a7b796bbee8c06d1c62be97220e1414bb0297" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a geometry shader stage, and does not include any tessellation shader stages, its shader code &lt;strong&gt;must&lt;/strong&gt; contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies an input primitive type that is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution&quot;&gt;compatible&lt;/a&gt; with the primitive topology specified in &lt;code&gt;pInputAssembly&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;pStages&lt;/code&gt; は、ジオメトリシェーダステージを含み、任意のテッセレーションシェーダステージを含んでいない、そのシェーダコードが&lt;strong&gt;なければならない&lt;/strong&gt;含む &lt;code&gt;OpExecutionMode&lt;/code&gt; の指示をすることを指定された入力プリミティブ型&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#shaders-geometry-execution&quot;&gt;互換性&lt;/a&gt;で指定されたプリミティブトポロジーと &lt;code&gt;pInputAssembly&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffa5c1b756e6b407c6873938c09e46f11847b30b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a tessellation control shader stage and a tessellation evaluation shader stage, &lt;code&gt;pTessellationState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineTessellationStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;pStages&lt;/code&gt; はテッセレーション制御シェーダステージとテッセレーション評価シェーダステージを含む、 &lt;code&gt;pTessellationState&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;有効へのポインタである &lt;code&gt;VkPipelineTessellationStateCreateInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="11667038bd54bf1a284d2b65cc83153e3ace7d8e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a tessellation control shader stage, it &lt;strong&gt;must&lt;/strong&gt; include a tessellation evaluation shader stage</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; にテッセレーション制御シェーダーステージが含まれている場合、テッセレーション評価シェーダーステージが含まれている&lt;strong&gt;必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="5bb0f8793e17212ab38eb23e9f17a21076afd3b3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes a tessellation evaluation shader stage, it &lt;strong&gt;must&lt;/strong&gt; include a tessellation control shader stage</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; にテッセレーション評価シェーダーステージが含まれる場合、テッセレーション制御シェーダーステージを含める&lt;strong&gt;必要があり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="78e5025e82088855d10a1ef954ee73c284187d76" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes tessellation shader stages, and the shader code of both contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies the out patch size in the pipeline, they &lt;strong&gt;must&lt;/strong&gt; both specify the same patch size</source>
          <target state="translated">場合 &lt;code&gt;pStages&lt;/code&gt; は、テッセレーションシェーダステージを備えており、両方のシェーダコードが含まれている &lt;code&gt;OpExecutionMode&lt;/code&gt; の指定パイプラインのうちのパッチのサイズは、彼らがいることを指示&lt;strong&gt;しなければならない&lt;/strong&gt;の両方に同じパッチのサイズを指定します</target>
        </trans-unit>
        <trans-unit id="0005c332bde3a464753ffa0190fac02f633464b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes tessellation shader stages, and the shader code of both stages contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies the type of subdivision in the pipeline, they &lt;strong&gt;must&lt;/strong&gt; both specify the same subdivision mode</source>
          <target state="translated">場合 &lt;code&gt;pStages&lt;/code&gt; は、テッセレーションシェーダステージを備えており、両方のステージのシェーダコードが含まれている &lt;code&gt;OpExecutionMode&lt;/code&gt; のパイプラインの細分化の種類を指定する命令を、彼らが&lt;strong&gt;しなければならない&lt;/strong&gt;同じ細分化モードを指定し、両方の</target>
        </trans-unit>
        <trans-unit id="53ac0926d13c197b37aaee0fccff625ee4aa432c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes tessellation shader stages, the &lt;code&gt;topology&lt;/code&gt; member of &lt;code&gt;pInputAssembly&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;pStages&lt;/code&gt; は、テッセレーションシェーダステージを含み、 &lt;code&gt;topology&lt;/code&gt; のメンバー &lt;code&gt;pInputAssembly&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="52833750bd46512d2b92fafa95eed4601178f6b3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes tessellation shader stages, the shader code of at least one stage &lt;strong&gt;must&lt;/strong&gt; contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies the output patch size in the pipeline</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; にテッセレーションシェーダーステージが含まれている場合、少なくとも1つのステージのシェーダーコードには、パイプラインの出力パッチサイズを指定する &lt;code&gt;OpExecutionMode&lt;/code&gt; 命令が含まれている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7ceca0a7d060c9252f8d0038b3deeae591af9fa5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pStages&lt;/code&gt; includes tessellation shader stages, the shader code of at least one stage &lt;strong&gt;must&lt;/strong&gt; contain an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies the type of subdivision in the pipeline</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; にテッセレーションシェーダーステージが含まれている場合、少なくとも1つのステージのシェーダーコードには、パイプライン内のサブディビジョンのタイプを指定する &lt;code&gt;OpExecutionMode&lt;/code&gt; 命令が含まれている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="300a07bf2e2f2f3d2c3bfdc070739b0d770e166b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pfnAllocation&lt;/code&gt; is unable to allocate the requested memory, it &lt;strong&gt;must&lt;/strong&gt; return &lt;code&gt;NULL&lt;/code&gt;. If the allocation was successful, it &lt;strong&gt;must&lt;/strong&gt; return a valid pointer to memory allocation containing at least &lt;code&gt;size&lt;/code&gt; bytes, and with the pointer value being a multiple of &lt;code&gt;alignment&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;pfnAllocation&lt;/code&gt; が要求されたメモリを割り当てることができない場合、 &lt;code&gt;NULL&lt;/code&gt; を返す&lt;strong&gt;必要があり&lt;/strong&gt;ます。割り当てが成功した場合、少なくとも &lt;code&gt;size&lt;/code&gt; バイトを含み、ポインタ値が &lt;code&gt;alignment&lt;/code&gt; の倍数であるメモリ割り当てへの有効なポインタを返す&lt;strong&gt;必要が&lt;/strong&gt;あります。</target>
        </trans-unit>
        <trans-unit id="83a506a319b17911a2776da4addfa9a1b9cff263" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pfnAllocation&lt;/code&gt; returns &lt;code&gt;NULL&lt;/code&gt;, and if the implementation is unable to continue correct processing of the current command without the requested allocation, it &lt;strong&gt;must&lt;/strong&gt; treat this as a run-time error, and generate &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; at the appropriate time for the command in which the condition was detected, as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-errorcodes&quot;&gt;Return Codes&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;pfnAllocation&lt;/code&gt; は返す &lt;code&gt;NULL&lt;/code&gt; を、実装が要求された割り当てずに現在のコマンドの正しい処理を継続できない場合、それは&lt;strong&gt;しなければならない&lt;/strong&gt;実行時エラーとして扱い、そして生成 &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; を条件にしているコマンドのための適切な時期に検出されます。&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#fundamentals-errorcodes&quot;&gt;「リターンコード」を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ffe7fcd07be5d918a42aeda8864417b7ec77f249" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipeline&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;pipeline&lt;/code&gt; 有効なハンドルで、それが&lt;strong&gt;なければなりません&lt;/strong&gt;、作成された割り当てられた、またはから取り出された &lt;code&gt;device&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dd1e093825aae98411e5c75bc5bce2a22367e3c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipeline&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;pipeline&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkPipeline&lt;/code&gt; handle</source>
          <target state="translated">場合は &lt;code&gt;pipeline&lt;/code&gt; ない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;pipeline&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;有効で &lt;code&gt;VkPipeline&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="153c798bd7e80fb9a1cc81610dd910ee4eca6c9b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineBindPoint&lt;/code&gt; is &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt;, &lt;code&gt;pipeline&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a compute pipeline</source>
          <target state="translated">場合 &lt;code&gt;pipelineBindPoint&lt;/code&gt; がある &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; 、 &lt;code&gt;pipeline&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;計算パイプラインも</target>
        </trans-unit>
        <trans-unit id="e65fb2b6ffea4264715efda66841377dd8c6d045" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineBindPoint&lt;/code&gt; is &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt;, the &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support compute operations</source>
          <target state="translated">場合 &lt;code&gt;pipelineBindPoint&lt;/code&gt; がある &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; 、 &lt;code&gt;VkCommandPool&lt;/code&gt; こと &lt;code&gt;commandBuffer&lt;/code&gt; はから割り当てられた&lt;strong&gt;必須の&lt;/strong&gt;サポートコンピューティング事業</target>
        </trans-unit>
        <trans-unit id="d94dfd102a7fe218368fba9a33854bf43d38f7c8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineBindPoint&lt;/code&gt; is &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt;, &lt;code&gt;pipeline&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a graphics pipeline</source>
          <target state="translated">場合 &lt;code&gt;pipelineBindPoint&lt;/code&gt; がある &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 、 &lt;code&gt;pipeline&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;グラフィックスパイプラインこと</target>
        </trans-unit>
        <trans-unit id="79745d136782dffd9e87c80e9ea1d76d57a37904" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineBindPoint&lt;/code&gt; is &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt;, the &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics operations</source>
          <target state="translated">場合 &lt;code&gt;pipelineBindPoint&lt;/code&gt; がある &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 、 &lt;code&gt;VkCommandPool&lt;/code&gt; こと &lt;code&gt;commandBuffer&lt;/code&gt; はから割り当てられた&lt;strong&gt;必須の&lt;/strong&gt;サポートグラフィックス操作</target>
        </trans-unit>
        <trans-unit id="91e6247dcaccbe1690e5c7ce77c176eb3cfcd4b5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineCache&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;pipelineCache&lt;/code&gt; が有効なハンドルで、それが&lt;strong&gt;なければなりません&lt;/strong&gt;、作成された割り当てられた、またはから取り出された &lt;code&gt;device&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55aa495075c0d9098dea18ae49c7747449e50822" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineCache&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;pipelineCache&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkPipelineCache&lt;/code&gt; handle</source>
          <target state="translated">場合 &lt;code&gt;pipelineCache&lt;/code&gt; がない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;pipelineCache&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効で &lt;code&gt;VkPipelineCache&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="7330ebc0d76fccefa3d8e5f30ef5bf6c1ab56477" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineLayout&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;pipelineLayout&lt;/code&gt; が有効なハンドルで、それが&lt;strong&gt;なければなりません&lt;/strong&gt;、作成された割り当てられた、またはから取り出された &lt;code&gt;device&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b32aad41399cfbd52b5a3d8b48e3948f0aed9be0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pipelineLayout&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;pipelineLayout&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkPipelineLayout&lt;/code&gt; handle</source>
          <target state="translated">場合 &lt;code&gt;pipelineLayout&lt;/code&gt; がない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;pipelineLayout&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効で &lt;code&gt;VkPipelineLayout&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="e6c32346272df58ab1d1e9b0b89d995b751b681c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;preserveAttachmentCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pPreserveAttachments&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;preserveAttachmentCount&lt;/code&gt;&lt;code&gt;uint32_t&lt;/code&gt; values</source>
          <target state="translated">&lt;code&gt;preserveAttachmentCount&lt;/code&gt; が &lt;code&gt;0&lt;/code&gt; でない場合、 &lt;code&gt;pPreserveAttachments&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;preserveAttachmentCount&lt;/code&gt; &lt;code&gt;uint32_t&lt;/code&gt; 値の配列へのポインタで&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2b4de6164b1178a7cc5c35bcd7f277b6299f29d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;pushConstantRangeCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pPushConstantRanges&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pushConstantRangeCount&lt;/code&gt; valid &lt;code&gt;VkPushConstantRange&lt;/code&gt; structures</source>
          <target state="translated">場合 &lt;code&gt;pushConstantRangeCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pPushConstantRanges&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;pushConstantRangeCount&lt;/code&gt; 有効 &lt;code&gt;VkPushConstantRange&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="f4ad28afe112ed8d3e1165be5d8e5b2a56e3f211" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;queryPool&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;queryPool&lt;/code&gt; が有効なハンドルで、それが&lt;strong&gt;なければなりません&lt;/strong&gt;、作成された割り当てられた、またはから取り出された &lt;code&gt;device&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df624fc3c9a3ca3bd7c06e66de993662fa456314" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;queryPool&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;queryPool&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkQueryPool&lt;/code&gt; handle</source>
          <target state="translated">場合 &lt;code&gt;queryPool&lt;/code&gt; がない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;queryPool&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効で &lt;code&gt;VkQueryPool&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="fc4e80608676bfa3839089a81b68a5edd01bfdfa" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;queryType&lt;/code&gt; is &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt;, &lt;code&gt;pipelineStatistics&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid combination of &lt;a href=&quot;#VkQueryPipelineStatisticFlagBits&quot;&gt;VkQueryPipelineStatisticFlagBits&lt;/a&gt; values</source>
          <target state="translated">&lt;code&gt;queryType&lt;/code&gt; が &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; の場合、 &lt;code&gt;pipelineStatistics&lt;/code&gt; は&lt;a href=&quot;#VkQueryPipelineStatisticFlagBits&quot;&gt;VkQueryPipelineStatisticFlagBits&lt;/a&gt;値の有効な組み合わせである&lt;strong&gt;必要&lt;/strong&gt;があります</target>
        </trans-unit>
        <trans-unit id="062c47aadf45ed8ae37a3e498e3ebaa4d83d54de" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt; divided by the element size of &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxTexelBufferElements&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;range&lt;/code&gt; に等しくない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;range&lt;/code&gt; の要素のサイズで割った &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;未満であるか、または等しい &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxTexelBufferElements&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18209f5bbd843ce50954c0c6fd2d76a4a4cee89f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the element size of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;range&lt;/code&gt; 等しくない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;range&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;の素子サイズの倍数で &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6464284a8211bbac6c292ea5a546f35dff72c004" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;range&lt;/code&gt; に等しくない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;range&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;よりも大きく &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="85c4a0c27ceb639c505406805e6b3f3ded8e776a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;range&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;buffer&lt;/code&gt; minus &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;range&lt;/code&gt; に等しくない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;range&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;未満であるかのサイズに等しい &lt;code&gt;buffer&lt;/code&gt; マイナス &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb601e80277926542492492065c28f52577758e7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;range&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, the sum of &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;range&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; が &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; と等しくない場合、 &lt;code&gt;offset&lt;/code&gt; と &lt;code&gt;range&lt;/code&gt; 合計は &lt;code&gt;buffer&lt;/code&gt; のサイズ以下で&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a65de0ab2f8072caf3955bc8c4ef35a66b1ecddb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;renderPass&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;renderPass&lt;/code&gt; が有効なハンドルで、それが&lt;strong&gt;なければなりません&lt;/strong&gt;、作成された割り当てられた、またはから取り出された &lt;code&gt;device&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="275fe845105cc67a32e7dba319813f55a65a2f0d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;renderPass&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;renderPass&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkRenderPass&lt;/code&gt; handle</source>
          <target state="translated">場合 &lt;code&gt;renderPass&lt;/code&gt; がない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;renderPass&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効で &lt;code&gt;VkRenderPass&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="c36d1568d390e977c6aace1b44e74c2e249ac9cf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;robustBufferAccess&lt;/code&gt; is not enabled, out of bounds accesses &lt;strong&gt;may&lt;/strong&gt; corrupt any memory within the process and cause undefined behavior up to and including application termination.</source>
          <target state="translated">&lt;code&gt;robustBufferAccess&lt;/code&gt; が有効になっていない場合、範囲外のアクセス&lt;strong&gt;は&lt;/strong&gt;プロセス内のメモリを破壊し、アプリケーションの終了までの未定義の動作を引き起こす可能性があります。</target>
        </trans-unit>
        <trans-unit id="3737725490e838b34ad6849d25eff798626d077a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sampler&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;sampler&lt;/code&gt; 有効なハンドルで、それが&lt;strong&gt;なければなりません&lt;/strong&gt;、作成された割り当てられた、またはから取り出された &lt;code&gt;device&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e357190d526fbbb656f4a22f0fcef2f17d283b8d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sampler&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;sampler&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkSampler&lt;/code&gt; handle</source>
          <target state="translated">場合 &lt;code&gt;sampler&lt;/code&gt; ない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;sampler&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;有効で &lt;code&gt;VkSampler&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="c6c917d9762a763255446685be227d581f031636" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;samples&lt;/code&gt; is not &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, and &lt;code&gt;mipLevels&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">場合に &lt;code&gt;samples&lt;/code&gt; ない &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt; 、 &lt;code&gt;imageType&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;こと &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; は、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;含まれてい &lt;code&gt;VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT&lt;/code&gt; を、 &lt;code&gt;tiling&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 、及び &lt;code&gt;mipLevels&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;と等しくなる &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="622fbf4139dbe05ef04be95046b07c95761146c5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;semaphore&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;semaphore&lt;/code&gt; が有効なハンドルである場合、セマフォは &lt;code&gt;device&lt;/code&gt; から作成、割り当て、または取得されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="1ea5f5dd7ebae6132e1524a9a04f13436d8db52e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;semaphore&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;semaphore&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkSemaphore&lt;/code&gt; handle</source>
          <target state="translated">場合 &lt;code&gt;semaphore&lt;/code&gt; ない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;semaphore&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;有効で &lt;code&gt;VkSemaphore&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="b4727b777295167d0a0ca0a100dcf9b245785ef2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;setLayoutCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;setLayoutCount&lt;/code&gt; valid &lt;code&gt;VkDescriptorSetLayout&lt;/code&gt; handles</source>
          <target state="translated">&lt;code&gt;setLayoutCount&lt;/code&gt; が &lt;code&gt;0&lt;/code&gt; でない場合、 &lt;code&gt;pSetLayouts&lt;/code&gt; は &lt;code&gt;setLayoutCount&lt;/code&gt; の有効な &lt;code&gt;VkDescriptorSetLayout&lt;/code&gt; ハンドルの配列へのポインタで&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e5586cedc1b99dbef66f7d21dbc3aa8050a6c247" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;shaderModule&lt;/code&gt; is a valid handle, it &lt;strong&gt;must&lt;/strong&gt; have been created, allocated, or retrieved from &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;shaderModule&lt;/code&gt; が有効なハンドルである場合は、 &lt;code&gt;device&lt;/code&gt; から作成、割り当て、または取得されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="a4138315de047300d0e6e1f3040a99831549f44b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;shaderModule&lt;/code&gt; is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, &lt;code&gt;shaderModule&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;code&gt;VkShaderModule&lt;/code&gt; handle</source>
          <target state="translated">場合 &lt;code&gt;shaderModule&lt;/code&gt; がない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;、 &lt;code&gt;shaderModule&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効で &lt;code&gt;VkShaderModule&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="8fb2a2d4b7cd5350c6daeb68edda0270f5e2d7b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sharingMode&lt;/code&gt; is &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;, &lt;code&gt;pQueueFamilyIndices&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;queueFamilyIndexCount&lt;/code&gt;&lt;code&gt;uint32_t&lt;/code&gt; values</source>
          <target state="translated">場合 &lt;code&gt;sharingMode&lt;/code&gt; がある &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; 、 &lt;code&gt;pQueueFamilyIndices&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;の配列へのポインタである &lt;code&gt;queueFamilyIndexCount&lt;/code&gt; 用 &lt;code&gt;uint32_t&lt;/code&gt; 値</target>
        </trans-unit>
        <trans-unit id="4afca4c5c4a5e2d04c1de1e86322c58ac4c98d9e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sharingMode&lt;/code&gt; is &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;, &lt;code&gt;queueFamilyIndexCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;sharingMode&lt;/code&gt; がある &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; 、 &lt;code&gt;queueFamilyIndexCount&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;よりも大きい &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6fff539995d9897ce9a43f9b68e9b7d5a874db9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;sharingMode&lt;/code&gt; is &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;, each element of &lt;code&gt;pQueueFamilyIndices&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be unique and &lt;strong&gt;must&lt;/strong&gt; be less than &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; returned by &lt;a href=&quot;#vkGetPhysicalDeviceQueueFamilyProperties&quot;&gt;vkGetPhysicalDeviceQueueFamilyProperties&lt;/a&gt; for the &lt;code&gt;physicalDevice&lt;/code&gt; that was used to create &lt;code&gt;device&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;sharingMode&lt;/code&gt; がある &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; 、の各要素 &lt;code&gt;pQueueFamilyIndices&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;一意であると&lt;strong&gt;しなければならない&lt;/strong&gt;よりも少ないこと &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; がで返さ&lt;a href=&quot;#vkGetPhysicalDeviceQueueFamilyProperties&quot;&gt;vkGetPhysicalDeviceQueueFamilyProperties&lt;/a&gt;のために &lt;code&gt;physicalDevice&lt;/code&gt; の作成に使用された &lt;code&gt;device&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1ade03a815b28bc25229d1f193bb2de9b3ff3295" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;signalSemaphoreCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pSignalSemaphores&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;signalSemaphoreCount&lt;/code&gt; valid &lt;code&gt;VkSemaphore&lt;/code&gt; handles</source>
          <target state="translated">場合 &lt;code&gt;signalSemaphoreCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pSignalSemaphores&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;signalSemaphoreCount&lt;/code&gt; 有効 &lt;code&gt;VkSemaphore&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="ba4de3ca6f3e990e5bb5d52f0f8084869618250a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be within the currently mapped range of &lt;code&gt;memory&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; が &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; と等しい場合、 &lt;code&gt;offset&lt;/code&gt; は現在マップされている &lt;code&gt;memory&lt;/code&gt; 範囲内である&lt;strong&gt;必要&lt;/strong&gt;があります</target>
        </trans-unit>
        <trans-unit id="83baa27d95429da4f64c25163d16d23d5a48297f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, the end of the current mapping of &lt;code&gt;memory&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;nonCoherentAtomSize&lt;/code&gt; bytes from the beginning of the memory object.</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; が &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; と等しい場合、 &lt;code&gt;memory&lt;/code&gt; の現在のマッピングの最後は、メモリオブジェクトの先頭からの &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;nonCoherentAtomSize&lt;/code&gt; バイトの倍数である&lt;strong&gt;必要&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="cb388f6eb586cb54178b72666a25831a965945bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; specify a range contained within the currently mapped range of &lt;code&gt;memory&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;size&lt;/code&gt; に等しくない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;offset&lt;/code&gt; と &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;の現在マッピングされた範囲内に含まれる範囲を指定 &lt;code&gt;memory&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68b79a1e21b8ebddebf20d0a97ada18f9b031ed8" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of &lt;code&gt;4&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;size&lt;/code&gt; 等しくない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;の倍数である &lt;code&gt;4&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9cd031978c758143979d340abf2a92e403a97d69" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;size&lt;/code&gt; 等しくない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;よりも大きい &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5068a323fdf2f68f9c3c42efa9ad5c5e0e2f3243" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to than the size of &lt;code&gt;buffer&lt;/code&gt; minus &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;size&lt;/code&gt; に等しくない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;未満又は等しいサイズよりも &lt;code&gt;buffer&lt;/code&gt; マイナス &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8192f3bc9447ff760e8000e9d3e05a3786778eec" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;dstBuffer&lt;/code&gt; minus &lt;code&gt;dstOffset&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;size&lt;/code&gt; 等しくされていない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;未満であるかの大きさに等しい &lt;code&gt;dstBuffer&lt;/code&gt; マイナス &lt;code&gt;dstOffset&lt;/code&gt; コピー</target>
        </trans-unit>
        <trans-unit id="75330f62bbef69e255a5ea813f689b3e8a838835" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of the &lt;code&gt;memory&lt;/code&gt; minus &lt;code&gt;offset&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;size&lt;/code&gt; に等しくない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;未満であるかのサイズに等しい &lt;code&gt;memory&lt;/code&gt; マイナス &lt;code&gt;offset&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5350cb8e2ad2c14fd2839c8059f2181a3ace86a1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is not equal to &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; either be a multiple of &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;nonCoherentAtomSize&lt;/code&gt;, or &lt;code&gt;offset&lt;/code&gt; plus &lt;code&gt;size&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; equal the size of &lt;code&gt;memory&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;size&lt;/code&gt; 等しくない &lt;code&gt;VK_WHOLE_SIZE&lt;/code&gt; 、 &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;のいずれかの倍数で &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;nonCoherentAtomSize&lt;/code&gt; 、または &lt;code&gt;offset&lt;/code&gt; プラス &lt;code&gt;size&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;の大きさと等しく &lt;code&gt;memory&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4dbdc8e1811726d2151c3403e5c798079659f06b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;size&lt;/code&gt; is zero, then &lt;code&gt;pfnReallocation&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; behave equivalently to a call to &lt;a href=&quot;#PFN_vkFreeFunction&quot;&gt;PFN_vkFreeFunction&lt;/a&gt; with the same &lt;code&gt;pUserData&lt;/code&gt; parameter value, and &lt;code&gt;pMemory&lt;/code&gt; equal to &lt;code&gt;pOriginal&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;size&lt;/code&gt; ゼロであり、その後 &lt;code&gt;pfnReallocation&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;の呼び出しと同等に挙動&lt;a href=&quot;#PFN_vkFreeFunction&quot;&gt;PFN_vkFreeFunction&lt;/a&gt;同じと &lt;code&gt;pUserData&lt;/code&gt; のパラメータ値、及び &lt;code&gt;pMemory&lt;/code&gt; は等しい &lt;code&gt;pOriginal&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cf291902a931747df9a3f6c891b499706f41aaed" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcBuffer&lt;/code&gt; is non-sparse then it &lt;strong&gt;must&lt;/strong&gt; be bound completely and contiguously to a single &lt;code&gt;VkDeviceMemory&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;srcBuffer&lt;/code&gt; が非スパースの場合は、単一の &lt;code&gt;VkDeviceMemory&lt;/code&gt; オブジェクトに完全かつ連続的にバインドする&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="fb91b7d3ce7d9cb1f3d3b39810ef42c6cc93eb92" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcImage&lt;/code&gt; is non-sparse then it &lt;strong&gt;must&lt;/strong&gt; be bound completely and contiguously to a single &lt;code&gt;VkDeviceMemory&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;srcImage&lt;/code&gt; がスパースでない場合は、1つの &lt;code&gt;VkDeviceMemory&lt;/code&gt; オブジェクトに完全かつ連続的にバインドする&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="a0e06b8fba3356608eb9f9039d3707df94d7b228" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcImage&lt;/code&gt; was created with a depth/stencil format, &lt;code&gt;filter&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;srcImage&lt;/code&gt; が深度/ステンシル形式で作成された場合、 &lt;code&gt;filter&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt; で&lt;strong&gt;なければなりませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="6bc5b1d084e318ee3b1585c3047a0e6056a66fd4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; is not equal to &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt;, and &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; is equal to the current queue family, then the memory barrier defines a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers-release&quot;&gt;queue family release operation&lt;/a&gt; for the specified buffer range, and the second access scope includes no access, as if &lt;code&gt;dstAccessMask&lt;/code&gt; was &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; が等しくない &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; 、及び &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; は、現在のキューのファミリーに等しい、メモリバリアは定義&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers-release&quot;&gt;キューファミリー解除操作を&lt;/a&gt;指定されたバッファ領域のため、およびあるかのように第二のアクセス範囲は、全くアクセスを含まない &lt;code&gt;dstAccessMask&lt;/code&gt; があった &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8bcfc93911c3dd8c779a6a290100ddd630eff2c9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; is not equal to &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt;, and &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; is equal to the current queue family, then the memory barrier defines a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers-release&quot;&gt;queue family release operation&lt;/a&gt; for the specified image subresource range, and the second access scope includes no access, as if &lt;code&gt;dstAccessMask&lt;/code&gt; was &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; が等しくない &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; 、及び &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; は、現在のキューのファミリーに等しい、メモリバリアは定義&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers-release&quot;&gt;キューファミリーレリーズ操作を&lt;/a&gt;指定された画像サブリソース範囲に対して、およびあるかのように第二のアクセス範囲は、全くアクセスを含まない &lt;code&gt;dstAccessMask&lt;/code&gt; があった &lt;code&gt;0&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c1c2e43230d9c591238c84f5389159dbc0a813af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSet&lt;/code&gt; is equal to &lt;code&gt;dstSet&lt;/code&gt;, then the source and destination ranges of descriptors &lt;strong&gt;must&lt;/strong&gt; not overlap, where the ranges &lt;strong&gt;may&lt;/strong&gt; include array elements from consecutive bindings as described by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;html/vkspec.html#descriptorsets-updates-consecutive&lt;/a&gt;</source>
          <target state="translated">場合 &lt;code&gt;srcSet&lt;/code&gt; がに等しい &lt;code&gt;dstSet&lt;/code&gt; 、次に記述子の送信元および宛先の範囲が&lt;strong&gt;なければならない&lt;/strong&gt;範囲があり、重なってい&lt;strong&gt;てもよい&lt;/strong&gt;によって記載されるように連続するバインディングから配列要素を含む&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;HTML / vkspec.html＃descriptorsets-更新、連続&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9f07c4a81ca9f9a0bea0bb52245c5c2a103aba2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSubpass&lt;/code&gt; is equal to &lt;code&gt;VK_SUBPASS_EXTERNAL&lt;/code&gt;, the first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scope&lt;/a&gt; includes commands submitted to the queue before the render pass instance began. Otherwise, the first set of commands includes all commands submitted as part of the subpass instance identified by &lt;code&gt;srcSubpass&lt;/code&gt; and any load, store or multisample resolve operations on attachments used in &lt;code&gt;srcSubpass&lt;/code&gt;. In either case, the first synchronization scope is limited to operations on the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;source stage mask&lt;/a&gt; specified by &lt;code&gt;srcStageMask&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;srcSubpass&lt;/code&gt; がに等しい &lt;code&gt;VK_SUBPASS_EXTERNAL&lt;/code&gt; 、最初&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;の同期範囲は、&lt;/a&gt;レンダーパスのインスタンスが開始される前にキューに登録コマンドが含まれています。それ以外の場合、最初のコマンドセットには、 &lt;code&gt;srcSubpass&lt;/code&gt; によって識別されるサブパスインスタンスの一部として送信されたすべてのコマンドと、 &lt;code&gt;srcSubpass&lt;/code&gt; で使用されるアタッチメントに対するロード、ストア、またはマルチサンプルの解決操作が含まれます。どちらの場合も、最初の同期スコープは、 &lt;code&gt;srcStageMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;ソースステージマスク&lt;/a&gt;によって決定されるパイプラインステージでの操作に制限されます。</target>
        </trans-unit>
        <trans-unit id="d19d8edab63e16ac7f6f9e2fda1a61a776c79a66" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSubpass&lt;/code&gt; is equal to &lt;code&gt;dstSubpass&lt;/code&gt; and not all of the stages in &lt;code&gt;srcStageMask&lt;/code&gt; and &lt;code&gt;dstStageMask&lt;/code&gt; are &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-framebuffer-regions&quot;&gt;framebuffer-space stages&lt;/a&gt;, the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically latest&lt;/a&gt; pipeline stage in &lt;code&gt;srcStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically earlier&lt;/a&gt; than or equal to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically earliest&lt;/a&gt; pipeline stage in &lt;code&gt;dstStageMask&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;srcSubpass&lt;/code&gt; がに等しい &lt;code&gt;dstSubpass&lt;/code&gt; 全てにおけるステージのではなく &lt;code&gt;srcStageMask&lt;/code&gt; と &lt;code&gt;dstStageMask&lt;/code&gt; ある&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-framebuffer-regions&quot;&gt;フレームバッファ・スペース・ステージ&lt;/a&gt;、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;論理的に最新&lt;/a&gt;のパイプラインのステージ &lt;code&gt;srcStageMask&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;論理的に以前&lt;/a&gt;よりか等しい&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;論理的に最も初期&lt;/a&gt;のパイプラインのステージ &lt;code&gt;dstStageMask&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eeaab6a9e6b95fcd6597a5a895785078ad946840" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSubpass&lt;/code&gt; is equal to &lt;code&gt;dstSubpass&lt;/code&gt; then the &lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependency&lt;/a&gt; describes a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-barriers-subpass-self-dependencies&quot;&gt;subpass self-dependency&lt;/a&gt;, and only constrains the pipeline barriers allowed within a subpass instance. Otherwise, when a render pass instance which includes a subpass dependency is submitted to a queue, it defines a memory dependency between the subpasses identified by &lt;code&gt;srcSubpass&lt;/code&gt; and &lt;code&gt;dstSubpass&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;srcSubpass&lt;/code&gt; がに等しい &lt;code&gt;dstSubpass&lt;/code&gt; 次いで&lt;a href=&quot;#VkSubpassDependency&quot;&gt;VkSubpassDependencyは&lt;/a&gt;説明&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-barriers-subpass-self-dependencies&quot;&gt;subpass自己依存し&lt;/a&gt;、そしてのみsubpassインスタンス内で許容パイプライン障壁を制約します。それ以外の場合、サブパスの依存関係を含むレンダーパスインスタンスがキューに送信されると、 &lt;code&gt;srcSubpass&lt;/code&gt; と &lt;code&gt;dstSubpass&lt;/code&gt; で識別されるサブパス間のメモリ依存関係が定義されます。</target>
        </trans-unit>
        <trans-unit id="978a929a9112561f6136620a5377b29577d82714" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSubpass&lt;/code&gt; is equal to &lt;code&gt;dstSubpass&lt;/code&gt;, &lt;code&gt;srcStageMask&lt;/code&gt; and &lt;code&gt;dstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only contain one of &lt;code&gt;VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_VERTEX_INPUT_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_VERTEX_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt;, &lt;code&gt;VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT&lt;/code&gt;, or &lt;code&gt;VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;srcSubpass&lt;/code&gt; がに等しい &lt;code&gt;dstSubpass&lt;/code&gt; 、 &lt;code&gt;srcStageMask&lt;/code&gt; と &lt;code&gt;dstStageMask&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;唯一のいずれかが含まれ &lt;code&gt;VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT&lt;/code&gt; 、 &lt;code&gt;VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT&lt;/code&gt; 、 &lt;code&gt;VK_PIPELINE_STAGE_VERTEX_INPUT_BIT&lt;/code&gt; 、 &lt;code&gt;VK_PIPELINE_STAGE_VERTEX_SHADER_BIT&lt;/code&gt; 、 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; 、 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt; 、 &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt; 、 &lt;code&gt;VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT&lt;/code&gt; 、 &lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt; を、 &lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt; 、 &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; 、 &lt;code&gt;VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT&lt;/code&gt; 、または &lt;code&gt;VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f501e61ce1770c956aa3132270d802ffe6de6ee3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;srcSubpass&lt;/code&gt; is not &lt;code&gt;VK_SUBPASS_EXTERNAL&lt;/code&gt;, &lt;code&gt;srcStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not include &lt;code&gt;VK_PIPELINE_STAGE_HOST_BIT&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;srcSubpass&lt;/code&gt; がない &lt;code&gt;VK_SUBPASS_EXTERNAL&lt;/code&gt; 、 &lt;code&gt;srcStageMask&lt;/code&gt; は&lt;strong&gt;必要があります&lt;/strong&gt;含まれていませ &lt;code&gt;VK_PIPELINE_STAGE_HOST_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="5025b47f7e7b9b794b1f35b6c63948847ac7e0c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_FRAGMENT_BIT&lt;/code&gt;, and the identified entry point writes to &lt;code&gt;FragDepth&lt;/code&gt; in any execution path, it &lt;strong&gt;must&lt;/strong&gt; write to &lt;code&gt;FragDepth&lt;/code&gt; in all execution paths</source>
          <target state="translated">場合は &lt;code&gt;stage&lt;/code&gt; あり &lt;code&gt;VK_SHADER_STAGE_FRAGMENT_BIT&lt;/code&gt; 、および識別されたエントリポイントがに書き込み &lt;code&gt;FragDepth&lt;/code&gt; 任意の実行パスで、それが&lt;strong&gt;なければなりません&lt;/strong&gt;に書き込む &lt;code&gt;FragDepth&lt;/code&gt; すべての実行パスに</target>
        </trans-unit>
        <trans-unit id="d4d1a85cda4e9a8a005025571770f85ff5f1bd3b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_FRAGMENT_BIT&lt;/code&gt;, the identified entry point &lt;strong&gt;must&lt;/strong&gt; not include any output variables in its interface decorated with &lt;code&gt;CullDistance&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;stage&lt;/code&gt; ある &lt;code&gt;VK_SHADER_STAGE_FRAGMENT_BIT&lt;/code&gt; 、特定されたエントリポイントが&lt;strong&gt;なければなりません&lt;/strong&gt;が飾られ、そのインタフェース内の任意の出力変数が含まれていませ &lt;code&gt;CullDistance&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19af5ab2cdea1da8ccecbc47b5668432b1d53523" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;, and the identified entry point writes to &lt;code&gt;Layer&lt;/code&gt; for any primitive, it &lt;strong&gt;must&lt;/strong&gt; write the same value to &lt;code&gt;Layer&lt;/code&gt; for all vertices of a given primitive</source>
          <target state="translated">もし &lt;code&gt;stage&lt;/code&gt; あり &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt; 、および識別されたエントリポイントがに書き込み &lt;code&gt;Layer&lt;/code&gt; の任意のプリミティブのために、それは&lt;strong&gt;しなければならない&lt;/strong&gt;のと同じ値を書き込む &lt;code&gt;Layer&lt;/code&gt; 指定されたプリミティブのすべての頂点のために</target>
        </trans-unit>
        <trans-unit id="96b678b2769b81fb70880249cf761e75525a3991" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;, and the identified entry point writes to &lt;code&gt;ViewportIndex&lt;/code&gt; for any primitive, it &lt;strong&gt;must&lt;/strong&gt; write the same value to &lt;code&gt;ViewportIndex&lt;/code&gt; for all vertices of a given primitive</source>
          <target state="translated">もし &lt;code&gt;stage&lt;/code&gt; あり &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt; 、および識別されたエントリポイントがに書き込み &lt;code&gt;ViewportIndex&lt;/code&gt; 任意のプリミティブのために、それは&lt;strong&gt;しなければならない&lt;/strong&gt;のと同じ値を書き込む &lt;code&gt;ViewportIndex&lt;/code&gt; 指定されたプリミティブのすべての頂点のために</target>
        </trans-unit>
        <trans-unit id="5cc35bec0c0c8211a5be73f9baefe47b0800c9b7" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;, the identified entry point &lt;strong&gt;must&lt;/strong&gt; have an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies a maximum output vertex count that is greater than &lt;code&gt;0&lt;/code&gt; and less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxGeometryOutputVertices&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;stage&lt;/code&gt; ある &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt; 、識別されたエントリポイントが&lt;strong&gt;なければならない&lt;/strong&gt;持っ &lt;code&gt;OpExecutionMode&lt;/code&gt; のより大きい指定最大出力頂点数、その命令を &lt;code&gt;0&lt;/code&gt; 未満または等しい &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxGeometryOutputVertices&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3123aa202dae40e344cf98021c261fd3c1688b1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;, the identified entry point &lt;strong&gt;must&lt;/strong&gt; have an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies an invocation count that is greater than &lt;code&gt;0&lt;/code&gt; and less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxGeometryShaderInvocations&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;stage&lt;/code&gt; ある &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt; 、特定されたエントリポイントが&lt;strong&gt;なければなりません&lt;/strong&gt;持っている &lt;code&gt;OpExecutionMode&lt;/code&gt; の指示をすることを指定しますより大きいです呼び出し回数 &lt;code&gt;0&lt;/code&gt; 未満か等しい &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxGeometryShaderInvocations&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14336233f83a1a875d7ef4782f9c637f4a415fb1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT&lt;/code&gt; or &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT&lt;/code&gt;, and the identified entry point has an &lt;code&gt;OpExecutionMode&lt;/code&gt; instruction that specifies a patch size with &lt;code&gt;OutputVertices&lt;/code&gt;, the patch size &lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt; and less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxTessellationPatchSize&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;stage&lt;/code&gt; ある &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT&lt;/code&gt; 又は &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT&lt;/code&gt; 、および識別されたエントリポイントが有する &lt;code&gt;OpExecutionMode&lt;/code&gt; の指定とパッチサイズことを指示 &lt;code&gt;OutputVertices&lt;/code&gt; は、パッチサイズが&lt;strong&gt;なければならない&lt;/strong&gt;よりも大きくすることが &lt;code&gt;0&lt;/code&gt; 未満又は等しい &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; を :: &lt;code&gt;maxTessellationPatchSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fcf6aab237a51f7f3f6be89c221ac939f001cb6f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;stage&lt;/code&gt; is &lt;code&gt;VK_SHADER_STAGE_VERTEX_BIT&lt;/code&gt;, the identified entry point &lt;strong&gt;must&lt;/strong&gt; not include any input variable in its interface that is decorated with &lt;code&gt;CullDistance&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;stage&lt;/code&gt; ある &lt;code&gt;VK_SHADER_STAGE_VERTEX_BIT&lt;/code&gt; 、識別されたエントリポイントが&lt;strong&gt;なければならない&lt;/strong&gt;で装飾され、そのインターフェイスに任意の入力変数が含まれない &lt;code&gt;CullDistance&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ddfe64a877c66cbff31b0ef967ab689fd04daa94" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;submitCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pSubmits&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;submitCount&lt;/code&gt; valid &lt;code&gt;VkSubmitInfo&lt;/code&gt; structures</source>
          <target state="translated">場合 &lt;code&gt;submitCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pSubmits&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;submitCount&lt;/code&gt; 有効 &lt;code&gt;VkSubmitInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="8b22f8ce469128faaf2105600af1b9bab5f34e7a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subpass&lt;/code&gt; does not use any color and/or depth/stencil attachments, then the &lt;code&gt;rasterizationSamples&lt;/code&gt; member of &lt;code&gt;pMultisampleState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; follow the rules for a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-noattachments&quot;&gt;zero-attachment subpass&lt;/a&gt;</source>
          <target state="translated">場合 &lt;code&gt;subpass&lt;/code&gt; は、任意の色および/または深さ/ステンシルアタッチメントを使用しない場合、 &lt;code&gt;rasterizationSamples&lt;/code&gt; のメンバー &lt;code&gt;pMultisampleState&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;ための規則従う&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-noattachments&quot;&gt;ゼロ取付subpassを&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="80062285e79829a64633dcf028bade488b30164d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subpass&lt;/code&gt; uses color and/or depth/stencil attachments, then the &lt;code&gt;rasterizationSamples&lt;/code&gt; member of &lt;code&gt;pMultisampleState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be the same as the sample count for those subpass attachments</source>
          <target state="translated">場合 &lt;code&gt;subpass&lt;/code&gt; は、色および/または深さ/ステンシルアタッチメントを使用して、その後、 &lt;code&gt;rasterizationSamples&lt;/code&gt; のメンバー &lt;code&gt;pMultisampleState&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ものをsubpass添付のサンプル数と同じであること</target>
        </trans-unit>
        <trans-unit id="d45245f5d72b2a93dc45eb463d64bbfb427b9f9b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;layerCount&lt;/code&gt; is not &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt;, &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;layerCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be non-zero and &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;layerCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the &lt;code&gt;arrayLayers&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">場合 &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;layerCount&lt;/code&gt; がない &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt; 、 &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;layerCount&lt;/code&gt; は&lt;strong&gt;必要があり&lt;/strong&gt;、非ゼロであると &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;layerCount&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;よりも小さい又は等しい &lt;code&gt;arrayLayers&lt;/code&gt; で指定&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;ときに &lt;code&gt;image&lt;/code&gt; 作成されました</target>
        </trans-unit>
        <trans-unit id="43e4d55f3b317a61219dffabf0c886f8f743508f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;levelCount&lt;/code&gt; is not &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt;, &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;levelCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be non-zero and &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;baseMipLevel&lt;/code&gt; + &lt;code&gt;subresourceRange&lt;/code&gt;::&lt;code&gt;levelCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the &lt;code&gt;mipLevels&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">場合 &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;levelCount&lt;/code&gt; はない &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt; 、 &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;levelCount&lt;/code&gt; は&lt;strong&gt;必要があり&lt;/strong&gt;、非ゼロであると &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;baseMipLevel&lt;/code&gt; + &lt;code&gt;subresourceRange&lt;/code&gt; :: &lt;code&gt;levelCount&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;未満又は等しいこと &lt;code&gt;mipLevels&lt;/code&gt; で指定&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;ときに &lt;code&gt;image&lt;/code&gt; 作成されました</target>
        </trans-unit>
        <trans-unit id="7c08fecc0a33ce2cdc8681c05d96b4ef8778a607" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a format that has at least one supported feature bit present in the value of &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;tiling&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;の値に少なくとも1つのサポートされた機能ビット存在持つフォーマットである &lt;code&gt;VkFormatProperties&lt;/code&gt; を :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b50aa038d71c9a45af8aa2db0d76bf884dec7ab" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;tiling&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 、そして &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; （で返される &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt; ）が含まれていません &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="0408c48825b4f934b6d3194548586c61bda074f6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;tiling&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 、そして &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; （で返される &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt; ）が含まれていません &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="f8479c7b8afd50ca3481781981a5f9b841d0fd14" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;tiling&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 、そして &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; （で返される &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt; ）が含まれていません &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; を、 &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="ad8ec6ae153d14c693bb0295d05ea3e12c923416" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;tiling&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; 、そして &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; （で返される &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt; ）が含まれていません &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; を、 &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="c01c4f2f6043a75ee3727652f8b9ddddf2319e37" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, &lt;code&gt;format&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a format that has at least one supported feature bit present in the value of &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;tiling&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 、 &lt;code&gt;format&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;の値に少なくとも1つのサポートされた機能ビット存在持つフォーマットである &lt;code&gt;VkFormatProperties&lt;/code&gt; を :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2249b8c6490e0ede46732558ea7e24acfedc9b51" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;tiling&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 、そして &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; （で返される &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt; ）が含まれていません &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="80d814f06f90bdc8262c0e4a58793a2f0ba72e48" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;tiling&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 、そして &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; （で返される &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt; ）が含まれていません &lt;code&gt;VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="01ea73ea010f32c9a2c10914801d55d5474d2a4b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;tiling&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 、そして &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; （で返される &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt; ）が含まれていません &lt;code&gt;VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT&lt;/code&gt; を、 &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="4486968e83939391a7139547743ff61c4923a03b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tiling&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;, and &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; with the same value of &lt;code&gt;format&lt;/code&gt;) does not include &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;tiling&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; 、そして &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; （で返される &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt; の同じ値を持つ &lt;code&gt;format&lt;/code&gt; ）が含まれていません &lt;code&gt;VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT&lt;/code&gt; を、 &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="61138376fa0dd3280f0894ce7bb28042836b562f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is zero, then &lt;code&gt;vkWaitForFences&lt;/code&gt; does not wait, but simply returns the current state of the fences. &lt;code&gt;VK_TIMEOUT&lt;/code&gt; will be returned in this case if the condition is not satisfied, even though no actual wait was performed.</source>
          <target state="translated">場合は &lt;code&gt;timeout&lt;/code&gt; ゼロである、そして &lt;code&gt;vkWaitForFences&lt;/code&gt; は待ちませんが、単にフェンスの現在の状態を返します。この場合、実際の待機が行われていなくても、条件が満たされない場合は &lt;code&gt;VK_TIMEOUT&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="a3db896b36e9a6285762adc1bc77a9e4b9a98ce6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;topology&lt;/code&gt; is &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_POINT_LIST&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY&lt;/code&gt; or &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;, &lt;code&gt;primitiveRestartEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;topology&lt;/code&gt; ある &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_POINT_LIST&lt;/code&gt; 、 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST&lt;/code&gt; 、 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST&lt;/code&gt; 、 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY&lt;/code&gt; 、 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY&lt;/code&gt; または &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt; 、 &lt;code&gt;primitiveRestartEnable&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2513b26f83f775149353507c10c5b4c7d9eeb526" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;addressModeU&lt;/code&gt; and &lt;code&gt;addressModeV&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; each be either &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt; or &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; がある &lt;code&gt;VK_TRUE&lt;/code&gt; 、 &lt;code&gt;addressModeU&lt;/code&gt; と &lt;code&gt;addressModeV&lt;/code&gt; &lt;strong&gt;必要があり&lt;/strong&gt;、それぞれのいずれかになり &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt; または &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6f6ed384594ec3af9530c2a5ca0e0212a819ca93" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;anisotropyEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; がある &lt;code&gt;VK_TRUE&lt;/code&gt; 、 &lt;code&gt;anisotropyEnable&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="108b578ae950a46d15d7e7ca762da489b503505d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;compareEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; がある &lt;code&gt;VK_TRUE&lt;/code&gt; 、 &lt;code&gt;compareEnable&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="711b08667e8fbbb426c788633d42154f9a952707" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;minFilter&lt;/code&gt; and &lt;code&gt;magFilter&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal</source>
          <target state="translated">場合 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; がある &lt;code&gt;VK_TRUE&lt;/code&gt; 、 &lt;code&gt;minFilter&lt;/code&gt; と &lt;code&gt;magFilter&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;等しくなります</target>
        </trans-unit>
        <trans-unit id="f56cb764b4003309184b0eac5046487f1a152a1a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;minLod&lt;/code&gt; and &lt;code&gt;maxLod&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be zero</source>
          <target state="translated">場合 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; がある &lt;code&gt;VK_TRUE&lt;/code&gt; 、 &lt;code&gt;minLod&lt;/code&gt; と &lt;code&gt;maxLod&lt;/code&gt; &lt;strong&gt;必要があります&lt;/strong&gt;ゼロに</target>
        </trans-unit>
        <trans-unit id="8fe3ddf5707902c32840189beed374864037170c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, &lt;code&gt;mipmapMode&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;unnormalizedCoordinates&lt;/code&gt; がある &lt;code&gt;VK_TRUE&lt;/code&gt; 、 &lt;code&gt;mipmapMode&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f99bff9d113353f8f3202309087c84060f88aca4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;usage&lt;/code&gt; includes &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt;, or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxFramebufferHeight&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;usage&lt;/code&gt; 含まれ &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; 、または &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;extent.height&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;未満か等しいこと &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxFramebufferHeight&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8afa752821d12a83edcd945d128877706a235bb5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;usage&lt;/code&gt; includes &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt;, or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;extent.width&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxFramebufferWidth&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;usage&lt;/code&gt; 含まれ &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; 、または &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;extent.width&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;未満であるかに等しい &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxFramebufferWidth&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eccc97274f3941607f668346c19f8e36741764af" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;usage&lt;/code&gt; includes &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; also contain at least one of &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;usage&lt;/code&gt; 含まれ &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; を、 &lt;code&gt;usage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;もの少なくとも一方に含まれている &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 、または &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="76393a083820885cf9ce4be3c6742d3a66f99a9a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;usage&lt;/code&gt; includes &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt;, then bits other than &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt;, and &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be set</source>
          <target state="translated">場合 &lt;code&gt;usage&lt;/code&gt; 含ま &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; を、次いで以外のビット &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; 、及び &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;設定しません</target>
        </trans-unit>
        <trans-unit id="d4ed83503aa522c07cf2654c843e82263f3f3fa5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vertexAttributeDescriptionCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pVertexAttributeDescriptions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;vertexAttributeDescriptionCount&lt;/code&gt; valid &lt;code&gt;VkVertexInputAttributeDescription&lt;/code&gt; structures</source>
          <target state="translated">場合 &lt;code&gt;vertexAttributeDescriptionCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pVertexAttributeDescriptions&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;vertexAttributeDescriptionCount&lt;/code&gt; 有効 &lt;code&gt;VkVertexInputAttributeDescription&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="f6d2eef7dc4d5a6dffbdabdbf4523a5aedb58b50" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vertexBindingDescriptionCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pVertexBindingDescriptions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;vertexBindingDescriptionCount&lt;/code&gt; valid &lt;code&gt;VkVertexInputBindingDescription&lt;/code&gt; structures</source>
          <target state="translated">場合 &lt;code&gt;vertexBindingDescriptionCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pVertexBindingDescriptions&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;vertexBindingDescriptionCount&lt;/code&gt; 有効 &lt;code&gt;VkVertexInputBindingDescription&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="085cb7c0494557371c697180db36c0d656e2a28c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is being called within a render pass instance, and any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was recorded with &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt;::&lt;code&gt;framebuffer&lt;/code&gt; not equal to &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, that &lt;code&gt;VkFramebuffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; match the &lt;code&gt;VkFramebuffer&lt;/code&gt; used in the current render pass instance</source>
          <target state="translated">場合 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; は、レンダーパスインスタンス内で呼び出され、そして任意の所与の要素 &lt;code&gt;pCommandBuffers&lt;/code&gt; を用いて記録した &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt; :: &lt;code&gt;framebuffer&lt;/code&gt; に等しくない&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;こと、 &lt;code&gt;VkFramebuffer&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;一致 &lt;code&gt;VkFramebuffer&lt;/code&gt; がパス・インスタンスをレンダリング現在のに使用</target>
        </trans-unit>
        <trans-unit id="c3d9ff9407f5087bff0177127505f82279c8de9d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is being called within a render pass instance, any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been recorded with &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt;::&lt;code&gt;subpass&lt;/code&gt; set to the index of the subpass which the given command buffer will be executed in</source>
          <target state="translated">場合 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; は、レンダーパスインスタンス内で呼び出されている、任意の所与の要素 &lt;code&gt;pCommandBuffers&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;と記録されている &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt; :: &lt;code&gt;subpass&lt;/code&gt; 与えられたコマンドバッファに実行されるsubpassのインデックスに設定</target>
        </trans-unit>
        <trans-unit id="fcb7ec537ca482ef38a23f3ba4a1ace8650d1ca3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is being called within a render pass instance, any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; は、レンダーパスのインスタンス内で呼び出されている、のいずれかの特定の要素 &lt;code&gt;pCommandBuffers&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;と記録されている &lt;code&gt;VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57cda5e75741ca2d535ab2110353f810b5b060ae" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is being called within a render pass instance, that render pass instance &lt;strong&gt;must&lt;/strong&gt; have been begun with the &lt;code&gt;contents&lt;/code&gt; parameter of &lt;code&gt;vkCmdBeginRenderPass&lt;/code&gt; set to &lt;code&gt;VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; をレンダリングすること、レンダーパスインスタンス内で呼び出されているパスのインスタンスが&lt;strong&gt;なければなりません&lt;/strong&gt;で始まっされている &lt;code&gt;contents&lt;/code&gt; のパラメータ &lt;code&gt;vkCmdBeginRenderPass&lt;/code&gt; のにセット &lt;code&gt;VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3204c63d8fb1d44b1b8e72e64dc84a3e442bb5c0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is being called within a render pass instance, the render passes specified in the pname::pBeginInfo::&lt;code&gt;pInheritanceInfo&lt;/code&gt;::&lt;code&gt;renderPass&lt;/code&gt; members of the &lt;a href=&quot;#vkBeginCommandBuffer&quot;&gt;vkBeginCommandBuffer&lt;/a&gt; commands used to begin recording each element of &lt;code&gt;pCommandBuffers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-compatibility&quot;&gt;compatible&lt;/a&gt; with the current render pass.</source>
          <target state="translated">場合 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; は、レンダーパスインスタンス内で呼び出され、PNAMEで指定されたパスをレンダリング:: pBeginInfo :: &lt;code&gt;pInheritanceInfo&lt;/code&gt; :: &lt;code&gt;renderPass&lt;/code&gt; 用のメンバー&lt;a href=&quot;#vkBeginCommandBuffer&quot;&gt;vkBeginCommandBufferは、&lt;/a&gt;各要素の記録を開始するためのコマンド &lt;code&gt;pCommandBuffers&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;ことが&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-compatibility&quot;&gt;互換性の&lt;/a&gt;パスを描画する電流です。</target>
        </trans-unit>
        <trans-unit id="b8d113f2af6d5779e85b36754769afcc60f77e2c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; is not being called within a render pass instance, any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not have been recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdExecuteCommands&lt;/code&gt; は、レンダーパスインスタンス内で呼び出されていない、のいずれかの特定の要素 &lt;code&gt;pCommandBuffers&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;と記録されていない &lt;code&gt;VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d18f309a67a1f502982000697b4d2be78757756c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, &lt;code&gt;bufferMemoryBarrierCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; は、レンダーパスのインスタンス内で呼び出され、 &lt;code&gt;bufferMemoryBarrierCount&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6512310347911f642cfb78cd99ba1d56f27e4d72" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, &lt;code&gt;dependencyFlags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to the &lt;code&gt;dependencyFlags&lt;/code&gt; member of that instance of &lt;code&gt;VkSubpassDependency&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; は、レンダーパスインスタンス内と呼ばれ、 &lt;code&gt;dependencyFlags&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;に等しいこと &lt;code&gt;dependencyFlags&lt;/code&gt; 用のそのインスタンスのメンバ &lt;code&gt;VkSubpassDependency&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c930c1c7a76400675434eb1cef20d73cf78c891b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, &lt;code&gt;dstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; contain a subset of the bit values in the &lt;code&gt;dstStageMask&lt;/code&gt; member of that instance of &lt;code&gt;VkSubpassDependency&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; は、レンダーパスインスタンス内と呼ばれ、 &lt;code&gt;dstStageMask&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;でビット値の部分集合を含む &lt;code&gt;dstStageMask&lt;/code&gt; 用のそのインスタンスのメンバ &lt;code&gt;VkSubpassDependency&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="199c7cd0622fec5b7294f194c934d0f79513aa78" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, &lt;code&gt;srcStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; contain a subset of the bit values in the &lt;code&gt;srcStageMask&lt;/code&gt; member of that instance of &lt;code&gt;VkSubpassDependency&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; は、レンダーパスインスタンス内と呼ばれ、 &lt;code&gt;srcStageMask&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;でビット値の部分集合を含む &lt;code&gt;srcStageMask&lt;/code&gt; 用のそのインスタンスのメンバ &lt;code&gt;VkSubpassDependency&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83b5fdd568a0864780640f1adb86b1951b7f80d4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;dstAccessMask&lt;/code&gt; of any element of &lt;code&gt;pMemoryBarriers&lt;/code&gt; or &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; contain a subset of the bit values the &lt;code&gt;dstAccessMask&lt;/code&gt; member of that instance of &lt;code&gt;VkSubpassDependency&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; をレンダーパスインスタンス内と呼ばれ、 &lt;code&gt;dstAccessMask&lt;/code&gt; の任意の要素の &lt;code&gt;pMemoryBarriers&lt;/code&gt; 又は &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;ビット値のサブセットを含む &lt;code&gt;dstAccessMask&lt;/code&gt; 用のそのインスタンスのメンバ &lt;code&gt;VkSubpassDependency&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="8f65cae104b834670d471e2fc0456c256a18668b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;image&lt;/code&gt; member of any element of &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to one of the elements of &lt;code&gt;pAttachments&lt;/code&gt; that the current &lt;code&gt;framebuffer&lt;/code&gt; was created with, that is also referred to by one of the elements of the &lt;code&gt;pColorAttachments&lt;/code&gt;, &lt;code&gt;pResolveAttachments&lt;/code&gt; or &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; members of the &lt;code&gt;VkSubpassDescription&lt;/code&gt; instance that the current subpass was created with</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; は、レンダーパスインスタンス内と呼ばれる、 &lt;code&gt;image&lt;/code&gt; の任意の要素のメンバ &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;の要素の1つに等しいこと &lt;code&gt;pAttachments&lt;/code&gt; 電流が &lt;code&gt;framebuffer&lt;/code&gt; もの要素の一つによって参照さで作成された、 &lt;code&gt;pColorAttachments&lt;/code&gt; 、現在のサブパスが作成された &lt;code&gt;VkSubpassDescription&lt;/code&gt; インスタンスの &lt;code&gt;pResolveAttachments&lt;/code&gt; または &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; メンバー</target>
        </trans-unit>
        <trans-unit id="54cee90fa7c58a8e7869dd93e95d6d9957e1cc05" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;oldLayout&lt;/code&gt; and &lt;code&gt;newLayout&lt;/code&gt; members of an element of &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; は、レンダーパスインスタンス内と呼ばれ、 &lt;code&gt;oldLayout&lt;/code&gt; と &lt;code&gt;newLayout&lt;/code&gt; の要素のメンバー &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;等しくなります</target>
        </trans-unit>
        <trans-unit id="3b8486a88cb06fd5bd87e3b155894aad3ecead69" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;oldLayout&lt;/code&gt; and &lt;code&gt;newLayout&lt;/code&gt; members of any element of &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to the &lt;code&gt;layout&lt;/code&gt; member of an element of the &lt;code&gt;pColorAttachments&lt;/code&gt;, &lt;code&gt;pResolveAttachments&lt;/code&gt; or &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; members of the &lt;code&gt;VkSubpassDescription&lt;/code&gt; instance that the current subpass was created with, that refers to the same &lt;code&gt;image&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; は、レンダーパスインスタンス内と呼ばれ、 &lt;code&gt;oldLayout&lt;/code&gt; と &lt;code&gt;newLayout&lt;/code&gt; の任意の要素のメンバー &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;に等しくなる &lt;code&gt;layout&lt;/code&gt; の要素のメンバー &lt;code&gt;pColorAttachments&lt;/code&gt; 、 &lt;code&gt;pResolveAttachments&lt;/code&gt; 又は &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; 用の部材 &lt;code&gt;VkSubpassDescription&lt;/code&gt; の、電流subpassを用いて作成されたインスタンス同じ &lt;code&gt;image&lt;/code&gt; を参照している</target>
        </trans-unit>
        <trans-unit id="ccb5f6010747a8bba76ea9fa7c8f2550938312a2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;srcAccessMask&lt;/code&gt; of any element of &lt;code&gt;pMemoryBarriers&lt;/code&gt; or &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; contain a subset of the bit values the &lt;code&gt;srcAccessMask&lt;/code&gt; member of that instance of &lt;code&gt;VkSubpassDependency&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; をレンダーパスインスタンス内と呼ばれ、 &lt;code&gt;srcAccessMask&lt;/code&gt; の任意の要素の &lt;code&gt;pMemoryBarriers&lt;/code&gt; 又は &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;ビット値のサブセットを含む &lt;code&gt;srcAccessMask&lt;/code&gt; 用のそのインスタンスのメンバ &lt;code&gt;VkSubpassDependency&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="81907ad2b178f8232733b6594f0961729a99d44d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; and &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; members of any element of &lt;code&gt;pImageMemoryBarriers&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; は、レンダーパスのインスタンス内で呼び出され、 &lt;code&gt;srcQueueFamilyIndex&lt;/code&gt; と &lt;code&gt;dstQueueFamilyIndex&lt;/code&gt; の任意の要素のメンバー &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_QUEUE_FAMILY_IGNORED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98c9cdacb5b17edf3d64241b62c5fe3e289f06bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; is called within a render pass instance, the render pass &lt;strong&gt;must&lt;/strong&gt; have been created with a &lt;code&gt;VkSubpassDependency&lt;/code&gt; instance in &lt;code&gt;pDependencies&lt;/code&gt; that expresses a dependency from the current subpass to itself.</source>
          <target state="translated">場合 &lt;code&gt;vkCmdPipelineBarrier&lt;/code&gt; は、レンダーパスのインスタンス内で呼び出され、レンダーパスを&lt;strong&gt;しなければならない&lt;/strong&gt;で作成された &lt;code&gt;VkSubpassDependency&lt;/code&gt; の中にインスタンス &lt;code&gt;pDependencies&lt;/code&gt; 自体に現在subpassからの依存関係を表現します。</target>
        </trans-unit>
        <trans-unit id="cc2ff27b19967673439541c2ee14ceab0dc43c97" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;vkQueueSubmit&lt;/code&gt; fails, it &lt;strong&gt;may&lt;/strong&gt; return &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; or &lt;code&gt;VK_ERROR_OUT_OF_DEVICE_MEMORY&lt;/code&gt;. If it does, the implementation &lt;strong&gt;must&lt;/strong&gt; ensure that the state and contents of any resources or synchronization primitives referenced by the submitted command buffers and any semaphores referenced by &lt;code&gt;pSubmits&lt;/code&gt; is unaffected by the call or its failure. If &lt;code&gt;vkQueueSubmit&lt;/code&gt; fails in such a way that the implementation &lt;strong&gt;can&lt;/strong&gt; not make that guarantee, the implementation &lt;strong&gt;must&lt;/strong&gt; return &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt;. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;Lost Device&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;vkQueueSubmit&lt;/code&gt; が失敗し、それが&lt;strong&gt;可能&lt;/strong&gt;返し &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; または &lt;code&gt;VK_ERROR_OUT_OF_DEVICE_MEMORY&lt;/code&gt; を。その場合、実装&lt;strong&gt;は&lt;/strong&gt;、送信されたコマンドバッファーによって参照されるリソースまたは同期プリミティブの状態と内容、および &lt;code&gt;pSubmits&lt;/code&gt; によって参照されるすべてのセマフォが、呼び出しまたはその障害の影響を受けないようにする必要があります。実装&lt;strong&gt;が&lt;/strong&gt;保証&lt;strong&gt;でき&lt;/strong&gt;ないような方法で &lt;code&gt;vkQueueSubmit&lt;/code&gt; が失敗した場合、実装&lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt; を返す&lt;strong&gt;必要があり&lt;/strong&gt;ます。&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;紛失したデバイスを&lt;/a&gt;参照してください。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="33e70716fa1d63522a4508b003d9161ddc9613b4" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;waitSemaphoreCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pWaitDstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;waitSemaphoreCount&lt;/code&gt; valid combinations of &lt;a href=&quot;#VkPipelineStageFlagBits&quot;&gt;VkPipelineStageFlagBits&lt;/a&gt; values</source>
          <target state="translated">場合 &lt;code&gt;waitSemaphoreCount&lt;/code&gt; はない &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pWaitDstStageMask&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;の配列へのポインタである &lt;code&gt;waitSemaphoreCount&lt;/code&gt; の有効な組み合わせ&lt;a href=&quot;#VkPipelineStageFlagBits&quot;&gt;VkPipelineStageFlagBitsの&lt;/a&gt;値</target>
        </trans-unit>
        <trans-unit id="19465c7c52f90de4332d6cc36b1c1eee4b3de2f2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;waitSemaphoreCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;pWaitSemaphores&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;waitSemaphoreCount&lt;/code&gt; valid &lt;code&gt;VkSemaphore&lt;/code&gt; handles</source>
          <target state="translated">場合 &lt;code&gt;waitSemaphoreCount&lt;/code&gt; はないが &lt;code&gt;0&lt;/code&gt; 、 &lt;code&gt;pWaitSemaphores&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の配列へのポインタであること &lt;code&gt;waitSemaphoreCount&lt;/code&gt; 有効 &lt;code&gt;VkSemaphore&lt;/code&gt; のハンドル</target>
        </trans-unit>
        <trans-unit id="9cbfd38bfb5b87e0d2ee3823e1818a736e2deee7" translate="yes" xml:space="preserve">
          <source>If a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-submission&quot;&gt;queue submission&lt;/a&gt; command is pending execution, then the value returned by this command &lt;strong&gt;may&lt;/strong&gt; immediately be out of date.</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-submission&quot;&gt;キュー送信&lt;/a&gt;コマンドが実行を保留している場合、このコマンドによって返される値&lt;strong&gt;は&lt;/strong&gt;すぐに古くなる&lt;strong&gt;可能性&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="6f9cf351f5c3755123b896350b8d03e03e2c272b" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;constantID&lt;/code&gt; value is not a specialization constant ID used in the shader, that map entry does not affect the behavior of the pipeline.</source>
          <target state="translated">&lt;code&gt;constantID&lt;/code&gt; 値がシェーダーで使用される特殊化定数IDでない場合、そのマップエントリはパイプラインの動作に影響しません。</target>
        </trans-unit>
        <trans-unit id="b29059c1c42f54180fd3c67843e4b1002651000b" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;vkCmdSetEvent&lt;/code&gt; or &lt;code&gt;vkCmdResetEvent&lt;/code&gt; command is in a command buffer that is in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;, then the value returned by this command &lt;strong&gt;may&lt;/strong&gt; immediately be out of date.</source>
          <target state="translated">場合 &lt;code&gt;vkCmdSetEvent&lt;/code&gt; 又は &lt;code&gt;vkCmdResetEvent&lt;/code&gt; コマンドが入っているコマンドバッファにある&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;保留状態&lt;/a&gt;は、このコマンドで返される値は、&lt;strong&gt;できる&lt;/strong&gt;直ちに古い可能。</target>
        </trans-unit>
        <trans-unit id="4087d9917a55012385634e32766b34ba5823281a" translate="yes" xml:space="preserve">
          <source>If a SPIR-V &lt;code&gt;OpLoad&lt;/code&gt; instruction loads a structure and the tail end of the structure is out of bounds, then all members of the structure are considered out of bounds even if the members at the end are not statically used.</source>
          <target state="translated">SPIR-V &lt;code&gt;OpLoad&lt;/code&gt; 命令が構造体をロードし、構造体の末尾が範囲外の場合、末尾のメンバーが静的に使用されていなくても、構造体のすべてのメンバーは範囲外と見なされます。</target>
        </trans-unit>
        <trans-unit id="3f44fab511959c076685fa827fd2cbe63fe906e0" translate="yes" xml:space="preserve">
          <source>If a command returns a run time error, it will leave any result pointers unmodified, unless other behavior is explicitly defined in the specification.</source>
          <target state="translated">コマンドが実行時エラーを返した場合、仕様で他の動作が明示的に定義されていない限り、結果ポインタは変更されないままになります。</target>
        </trans-unit>
        <trans-unit id="a07e5bc4f64e9b2b6220af23bcc5f6f1312d5843" translate="yes" xml:space="preserve">
          <source>If a descriptor pool has not had any descriptor sets freed since it was created or most recently reset then fragmentation &lt;strong&gt;must&lt;/strong&gt; not cause an allocation failure (note that this is always the case for a pool created without the &lt;code&gt;VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT&lt;/code&gt; bit set). Additionally, if all sets allocated from the pool since it was created or most recently reset use the same number of descriptors (of each type) and the requested allocation also uses that same number of descriptors (of each type), then fragmentation &lt;strong&gt;must&lt;/strong&gt; not cause an allocation failure.</source>
          <target state="translated">記述子プールが作成された後、または最後にリセットされた後に記述子セットが解放されていない場合は、断片化によって割り当てエラーが発生しては&lt;strong&gt;なりませ&lt;/strong&gt;ん（これは、 &lt;code&gt;VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT&lt;/code&gt; ビットセットなしで作成されたプールの場合に常に当てはまります）。さらに、プールが作成されたとき、または最後にリセットされた後にプールから割り当てられたすべてのセットが、（各タイプの）同じ数の記述子を使用し、要求された割り当ても同じ数の（各タイプの）記述子を使用する場合、断片化&lt;strong&gt;が&lt;/strong&gt;原因であってはなり&lt;strong&gt;ませ&lt;/strong&gt;ん。割り当ての失敗。</target>
        </trans-unit>
        <trans-unit id="6c77db8c3ac81fea4d8729b6d99717d30b6a3fc5" translate="yes" xml:space="preserve">
          <source>If a memory object does not have the &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; property, then &lt;a href=&quot;#vkFlushMappedMemoryRanges&quot;&gt;vkFlushMappedMemoryRanges&lt;/a&gt;&lt;strong&gt;must&lt;/strong&gt; be called in order to guarantee that writes to the memory object from the host are made visible to the &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;access type&lt;/a&gt;, where it &lt;strong&gt;can&lt;/strong&gt; be further made available to the device by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;synchronization commands&lt;/a&gt;. Similarly, &lt;a href=&quot;#vkInvalidateMappedMemoryRanges&quot;&gt;vkInvalidateMappedMemoryRanges&lt;/a&gt;&lt;strong&gt;must&lt;/strong&gt; be called to guarantee that writes which are visible to the &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;access type&lt;/a&gt; are made visible to host operations.</source>
          <target state="translated">メモリオブジェクトが持っていない場合 &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; のプロパティを、そして&lt;a href=&quot;#vkFlushMappedMemoryRanges&quot;&gt;vkFlushMappedMemoryRangesは&lt;/a&gt;&lt;strong&gt;しなければならない&lt;/strong&gt;ホストからのメモリオブジェクトへの書き込みがで参照できるようになっていることを保証するために呼び出すことが &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;アクセスタイプ&lt;/a&gt;には、&lt;strong&gt;することができ&lt;/strong&gt;、さらにによってデバイスに利用できるように&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;同期コマンド&lt;/a&gt;。同様に、&lt;a href=&quot;#vkInvalidateMappedMemoryRanges&quot;&gt;vkInvalidateMappedMemoryRangesを&lt;/a&gt;&lt;strong&gt;しなければならない&lt;/strong&gt;に見える書き込みことを保証するために呼び出される &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt; の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;アクセスタイプは、&lt;/a&gt;ホスト・オペレーションに見える作られています。</target>
        </trans-unit>
        <trans-unit id="dfc0a6089dc982b1c583cc52d81036601b699cd5" translate="yes" xml:space="preserve">
          <source>If a memory object is mapped at the time it is freed, it is implicitly unmapped.</source>
          <target state="translated">解放時にメモリオブジェクトがマッピングされている場合は、暗黙のうちにマッピングされていないことになります。</target>
        </trans-unit>
        <trans-unit id="4d1a8fa76db38e3020cf24dab9f78abeab7f903a" translate="yes" xml:space="preserve">
          <source>If a pipeline has &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; enabled, implementations &lt;strong&gt;may&lt;/strong&gt; discard primitives after the final vertex processing stage. As a result, if &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; is enabled, the clipping input and output primitives counters &lt;strong&gt;may&lt;/strong&gt; not be incremented.</source>
          <target state="translated">パイプラインで &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; が有効になっている&lt;strong&gt;場合&lt;/strong&gt;、実装&lt;strong&gt;は&lt;/strong&gt;最後の頂点処理ステージの後にプリミティブを破棄する&lt;strong&gt;可能性があり&lt;/strong&gt;ます。その結果、 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; が有効になっている場合、クリッピング入力および出力プリミティブカウンター&lt;strong&gt;は&lt;/strong&gt;インクリメントされない&lt;strong&gt;可能性&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="3321ca6a4f8aa85b8194bbfaf8e8dfb9c15cc8dd" translate="yes" xml:space="preserve">
          <source>If a shader stage is not included in &lt;code&gt;stageFlags&lt;/code&gt;, then a resource &lt;strong&gt;must&lt;/strong&gt; not be accessed from that stage via this binding within any pipeline using the set layout. Other than input attachments which are limited to the fragment shader, there are no limitations on what combinations of stages &lt;strong&gt;can&lt;/strong&gt; be used by a descriptor binding, and in particular a binding &lt;strong&gt;can&lt;/strong&gt; be used by both graphics stages and the compute stage.</source>
          <target state="translated">シェーダーステージが &lt;code&gt;stageFlags&lt;/code&gt; に含まれていない場合、セットレイアウトを使用するパイプライン内のこのバインディングを介して、そのステージからリソースにアクセスしてはなり&lt;strong&gt;ませ&lt;/strong&gt;ん。フラグメントシェーダーに制限される入力アタッチメント以外に、記述子バインディングで使用&lt;strong&gt;できる&lt;/strong&gt;ステージの組み合わせに制限はありません。特に、グラフィックステージと計算ステージの両方でバインディング&lt;strong&gt;を&lt;/strong&gt;使用&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="95e1cbaccd9f779662e9504a9bb29ab9a3ac2284" translate="yes" xml:space="preserve">
          <source>If a vertex input attribute is out of bounds, it will be assigned one of the following values:</source>
          <target state="translated">頂点の入力属性が範囲外の場合、以下のいずれかの値が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="b275caa8a795761dcdc3c5aa5c04d30ac7b5ab3b" translate="yes" xml:space="preserve">
          <source>If an allocation fails due to fragmentation, an indeterminate error is returned with an unspecified error code. Any returned error other than &lt;code&gt;VK_ERROR_FRAGMENTED_POOL&lt;/code&gt; does not imply its usual meaning: applications &lt;strong&gt;should&lt;/strong&gt; assume that the allocation failed due to fragmentation, and create a new descriptor pool.</source>
          <target state="translated">断片化が原因で割り当てが失敗した場合、不特定のエラーが未指定のエラーコードとともに返されます。 &lt;code&gt;VK_ERROR_FRAGMENTED_POOL&lt;/code&gt; 以外の返され​​たエラーは、通常の意味を意味するものではありません。アプリケーション&lt;strong&gt;は&lt;/strong&gt;、断片化のために割り当てが失敗したと想定し、新しい記述子プールを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="a147fd213b2c3079da16e655a5eceeb556b3051c" translate="yes" xml:space="preserve">
          <source>If an allocation failure occurs due to fragmentation, an application &lt;strong&gt;can&lt;/strong&gt; create an additional descriptor pool to perform further descriptor set allocations.</source>
          <target state="translated">断片化が原因で割り当てエラーが発生した場合、アプリケーション&lt;strong&gt;は&lt;/strong&gt;追加の記述子プールを作成して、さらに記述子セットの割り当てを実行&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c15fe9f0f6e672d2ff49f5239919d745315d83e1" translate="yes" xml:space="preserve">
          <source>If an allocation is associated with an object of type &lt;code&gt;VkPipelineCache&lt;/code&gt;, the allocator will use the &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_CACHE&lt;/code&gt; allocation scope. The most specific allocator available is used (pipeline cache, else device, else instance). Else,</source>
          <target state="translated">割り当てが &lt;code&gt;VkPipelineCache&lt;/code&gt; タイプのオブジェクトに関連付けられている場合、アロケータは &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_CACHE&lt;/code&gt; 割り当てスコープを使用します。使用可能な最も具体的なアロケータが使用されます（パイプラインキャッシュ、その他のデバイス、その他のインスタンス）。そうしないと、</target>
        </trans-unit>
        <trans-unit id="bfe2cd5536dc7e68a1d8f459249c46805a85a64a" translate="yes" xml:space="preserve">
          <source>If an allocation is scoped to the duration of a command, the allocator will use the &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_COMMAND&lt;/code&gt; allocation scope. The most specific allocator available is used: if the object being created or manipulated has an allocator, that object&amp;rsquo;s allocator will be used, else if the parent &lt;code&gt;VkDevice&lt;/code&gt; has an allocator it will be used, else if the parent &lt;code&gt;VkInstance&lt;/code&gt; has an allocator it will be used. Else,</source>
          <target state="translated">割り当てのスコープがコマンドの期間である場合、アロケータは &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_COMMAND&lt;/code&gt; 割り当てスコープを使用します。使用可能な最も具体的なアロケータが使用されます。作成または操作されるオブジェクトにアロケータがある場合、そのオブジェクトのアロケータが使用されます。それ以外の場合、親 &lt;code&gt;VkDevice&lt;/code&gt; にアロケータがある場合、それが使用されます。それ以外の場合、親 &lt;code&gt;VkInstance&lt;/code&gt; にアロケータがある場合は、中古。そうしないと、</target>
        </trans-unit>
        <trans-unit id="947edaf735b5b5a43855ae9b09c23bf124bcc335" translate="yes" xml:space="preserve">
          <source>If an allocation is scoped to the lifetime of a device, the allocator will use an allocation scope of &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_DEVICE&lt;/code&gt;. The most specific allocator available is used (device, else instance). Else,</source>
          <target state="translated">割り当てのスコープがデバイスの有効期間である場合、アロケータは &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_DEVICE&lt;/code&gt; の割り当てスコープを使用します。利用可能な最も具体的なアロケータが使用されます（デバイス、その他のインスタンス）。そうしないと、</target>
        </trans-unit>
        <trans-unit id="e3dc8f936c204065d6ae4da9cf943af308f752b9" translate="yes" xml:space="preserve">
          <source>If an allocation is scoped to the lifetime of an object, that object is being created or manipulated by the command, and that object&amp;rsquo;s type is not &lt;code&gt;VkDevice&lt;/code&gt; or &lt;code&gt;VkInstance&lt;/code&gt;, the allocator will use an allocation scope of &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_OBJECT&lt;/code&gt;. The most specific allocator available is used (object, else device, else instance). Else,</source>
          <target state="translated">割り当てのスコープがオブジェクトの存続期間であり、そのオブジェクトがコマンドによって作成または操作されており、そのオブジェクトのタイプが &lt;code&gt;VkDevice&lt;/code&gt; または &lt;code&gt;VkInstance&lt;/code&gt; でない場合、アロケーターは &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_OBJECT&lt;/code&gt; の割り当てスコープを使用します。使用可能な最も具体的なアロケータが使用されます（オブジェクト、その他のデバイス、その他のインスタンス）。そうしないと、</target>
        </trans-unit>
        <trans-unit id="7fa6f6674cb2d42993d01519fdad36cdea0d9fc6" translate="yes" xml:space="preserve">
          <source>If an attachment is not used by any subpass, then &lt;code&gt;loadOp&lt;/code&gt;, &lt;code&gt;storeOp&lt;/code&gt;, &lt;code&gt;stencilStoreOp&lt;/code&gt;, and &lt;code&gt;stencilLoadOp&lt;/code&gt; are ignored, and the attachment&amp;rsquo;s memory contents will not be modified by execution of a render pass instance.</source>
          <target state="translated">アタッチメントがどのサブパスでも使用されていない場合、 &lt;code&gt;loadOp&lt;/code&gt; 、 &lt;code&gt;storeOp&lt;/code&gt; 、 &lt;code&gt;stencilStoreOp&lt;/code&gt; 、および &lt;code&gt;stencilLoadOp&lt;/code&gt; は無視され、アタッチメントのメモリの内容はレンダーパスインスタンスの実行によって変更されません。</target>
        </trans-unit>
        <trans-unit id="548259c80fb7f01c58e015505b7d6442aead3c5e" translate="yes" xml:space="preserve">
          <source>If an implementation exposes any queue family that supports graphics operations, at least one queue family of at least one physical device exposed by the implementation &lt;strong&gt;must&lt;/strong&gt; support both graphics and compute operations.</source>
          <target state="translated">実装がグラフィックス操作をサポートするキューファミリーを公開する場合、実装によって公開される少なくとも1つの物理デバイスの少なくとも1つのキューファミリーが、グラフィックス操作と計算操作の両方をサポートする&lt;strong&gt;必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ab69aefba277b76152225269d668444f1ddcf956" translate="yes" xml:space="preserve">
          <source>If an implementation is unable to detect completion and latch the timer at any specific stage of the pipeline, it &lt;strong&gt;may&lt;/strong&gt; instead do so at any logically later stage.</source>
          <target state="translated">実装が完了したことを検出し、パイプラインの任意の特定の段階でタイマーをラッチすることができない場合、それは&lt;strong&gt;可能&lt;/strong&gt;代わりに任意の論理的に後の段階で行ってください。</target>
        </trans-unit>
        <trans-unit id="74dd40e71b6cf47179f8c066ba845e9b3559cbf9" translate="yes" xml:space="preserve">
          <source>If any &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-secondary&quot;&gt;secondary command buffers recorded&lt;/a&gt; into any given element of the &lt;code&gt;pCommandBuffers&lt;/code&gt; member of any element of &lt;code&gt;pSubmits&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; not be in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;.</source>
          <target state="translated">もしあれば&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-secondary&quot;&gt;、記録二コマンドバッファ&lt;/a&gt;の任意の要素に &lt;code&gt;pCommandBuffers&lt;/code&gt; の任意の要素のメンバー &lt;code&gt;pSubmits&lt;/code&gt; を用いて記録されていない &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; 、それが&lt;strong&gt;なければならない&lt;/strong&gt;とすることはない&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;保留状態&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f757c47e5bbb66f789f1db4e9387d28e16ab68d5" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used to sample from any &lt;code&gt;VkImage&lt;/code&gt; with a &lt;code&gt;VkImageView&lt;/code&gt; of the type &lt;code&gt;VK_IMAGE_VIEW_TYPE_3D&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D_ARRAY&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D_ARRAY&lt;/code&gt; or &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;, in any shader stage</source>
          <target state="translated">もしあれば &lt;code&gt;VkSampler&lt;/code&gt; のによりシェーダからアクセスされるオブジェクト &lt;code&gt;VkPipeline&lt;/code&gt; 現在に結合 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; が非正規化座標を使用して、それが&lt;strong&gt;なければならない&lt;/strong&gt;任意の試料に使用されない &lt;code&gt;VkImage&lt;/code&gt; と &lt;code&gt;VkImageView&lt;/code&gt; タイプの &lt;code&gt;VK_IMAGE_VIEW_TYPE_3D&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D_ARRAY&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D_ARRAY&lt;/code&gt; 又は &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt; 任意シェーダで、ステージ</target>
        </trans-unit>
        <trans-unit id="58ef70d9cfa0658ba32ab2371b5c9f087a6fda50" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used with any of the SPIR-V &lt;code&gt;OpImageSample*&lt;/code&gt; or &lt;code&gt;OpImageSparseSample*&lt;/code&gt; instructions that includes a LOD bias or any offset values, in any shader stage</source>
          <target state="translated">もしあれば &lt;code&gt;VkSampler&lt;/code&gt; のによりシェーダからアクセスされるオブジェクト &lt;code&gt;VkPipeline&lt;/code&gt; 現在に結合 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; が非正規化座標を使用して、それが&lt;strong&gt;なければならない&lt;/strong&gt; SPIR-Vのいずれかと共に使用されていない &lt;code&gt;OpImageSample*&lt;/code&gt; 又は &lt;code&gt;OpImageSparseSample*&lt;/code&gt; で、LODバイアスまたは任意のオフセット値を含む命令シェーダーステージ</target>
        </trans-unit>
        <trans-unit id="3b869c9aa0e2194b0870b697da74ffbe6071e0ac" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used with any of the SPIR-V &lt;code&gt;OpImageSample*&lt;/code&gt; or &lt;code&gt;OpImageSparseSample*&lt;/code&gt; instructions with &lt;code&gt;ImplicitLod&lt;/code&gt;, &lt;code&gt;Dref&lt;/code&gt; or &lt;code&gt;Proj&lt;/code&gt; in their name, in any shader stage</source>
          <target state="translated">どんな場合 &lt;code&gt;VkSampler&lt;/code&gt; のでシェーダからアクセスされているオブジェクト &lt;code&gt;VkPipeline&lt;/code&gt; 現在にバインド &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; は、非正規化座標を使用して、それが&lt;strong&gt;なければなりません&lt;/strong&gt; SPIR-Vのいずれかと共に使用されていない &lt;code&gt;OpImageSample*&lt;/code&gt; または &lt;code&gt;OpImageSparseSample*&lt;/code&gt; と指示 &lt;code&gt;ImplicitLod&lt;/code&gt; 、 &lt;code&gt;Dref&lt;/code&gt; のか、 &lt;code&gt;Proj&lt;/code&gt; で、自分の名前でシェーダーステージ</target>
        </trans-unit>
        <trans-unit id="67f7684d31e48a087c5589168bc747d1e1f7b102" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used to sample from any &lt;code&gt;VkImage&lt;/code&gt; with a &lt;code&gt;VkImageView&lt;/code&gt; of the type &lt;code&gt;VK_IMAGE_VIEW_TYPE_3D&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D_ARRAY&lt;/code&gt;, &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D_ARRAY&lt;/code&gt; or &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;, in any shader stage</source>
          <target state="translated">もしあれば &lt;code&gt;VkSampler&lt;/code&gt; のによりシェーダからアクセスされるオブジェクト &lt;code&gt;VkPipeline&lt;/code&gt; 現在に結合 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; が非正規化座標を使用して、それが&lt;strong&gt;なければならない&lt;/strong&gt;任意の試料に使用されない &lt;code&gt;VkImage&lt;/code&gt; と &lt;code&gt;VkImageView&lt;/code&gt; タイプの &lt;code&gt;VK_IMAGE_VIEW_TYPE_3D&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D_ARRAY&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D_ARRAY&lt;/code&gt; 又は &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt; 任意シェーダで、ステージ</target>
        </trans-unit>
        <trans-unit id="397a16dd37d9f3ba5ba8ef7759c8f454db35847b" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used with any of the SPIR-V &lt;code&gt;OpImageSample*&lt;/code&gt; or &lt;code&gt;OpImageSparseSample*&lt;/code&gt; instructions that includes a LOD bias or any offset values, in any shader stage</source>
          <target state="translated">もしあれば &lt;code&gt;VkSampler&lt;/code&gt; のによりシェーダからアクセスされるオブジェクト &lt;code&gt;VkPipeline&lt;/code&gt; 現在に結合 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; が非正規化座標を使用して、それが&lt;strong&gt;なければならない&lt;/strong&gt; SPIR-Vのいずれかと共に使用されていない &lt;code&gt;OpImageSample*&lt;/code&gt; 又は &lt;code&gt;OpImageSparseSample*&lt;/code&gt; で、LODバイアスまたは任意のオフセット値を含む命令シェーダーステージ</target>
        </trans-unit>
        <trans-unit id="1f63dde241ca9cfcc0fc17ee175d682ab6c6c7a0" translate="yes" xml:space="preserve">
          <source>If any &lt;code&gt;VkSampler&lt;/code&gt; object that is accessed from a shader by the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; uses unnormalized coordinates, it &lt;strong&gt;must&lt;/strong&gt; not be used with any of the SPIR-V &lt;code&gt;OpImageSample*&lt;/code&gt; or &lt;code&gt;OpImageSparseSample*&lt;/code&gt; instructions with &lt;code&gt;ImplicitLod&lt;/code&gt;, &lt;code&gt;Dref&lt;/code&gt; or &lt;code&gt;Proj&lt;/code&gt; in their name, in any shader stage</source>
          <target state="translated">もしあれば &lt;code&gt;VkSampler&lt;/code&gt; のによりシェーダからアクセスされるオブジェクト &lt;code&gt;VkPipeline&lt;/code&gt; 現在に結合 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; が非正規化座標を使用して、それが&lt;strong&gt;なければならない&lt;/strong&gt; SPIR-Vのいずれかと共に使用されていない &lt;code&gt;OpImageSample*&lt;/code&gt; 又は &lt;code&gt;OpImageSparseSample*&lt;/code&gt; と指示 &lt;code&gt;ImplicitLod&lt;/code&gt; 、 &lt;code&gt;Dref&lt;/code&gt; のか、 &lt;code&gt;Proj&lt;/code&gt; で、自分の名前でシェーダーステージ</target>
        </trans-unit>
        <trans-unit id="9885a0da1f092334a7366cd50419bebf80892b7e" translate="yes" xml:space="preserve">
          <source>If any attachment is used as both an input attachment and a color or depth/stencil attachment, then each use &lt;strong&gt;must&lt;/strong&gt; use the same &lt;code&gt;layout&lt;/code&gt;</source>
          <target state="translated">いずれかのアタッチメントを入力アタッチメントと色または深度/ステンシルアタッチメントの両方として使用する場合、それぞれの使用&lt;strong&gt;は&lt;/strong&gt;場合、使用に同じ &lt;code&gt;layout&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa4f0b7da72314b226b4678f866459839dc96d13" translate="yes" xml:space="preserve">
          <source>If any buffer access in a given SPIR-V block is determined to be out of bounds, then any other access of the same type (load, store, or atomic) in the same SPIR-V block that accesses an address less than 16 bytes away from the out of bounds address &lt;strong&gt;may&lt;/strong&gt; also be considered out of bounds.</source>
          <target state="translated">特定のSPIR-Vブロック内のバッファーアクセスが範囲外であると判断された場合、16バイト未満のアドレスにアクセスする同じSPIR-Vブロック内の同じタイプ（ロード、ストア、またはアトミック）の他のアクセス範囲外のアドレスから &lt;strong&gt;場合&lt;/strong&gt;も、範囲外と見なされます。</target>
        </trans-unit>
        <trans-unit id="e3af454561e4d47a8e1af7668e19523068aae402" translate="yes" xml:space="preserve">
          <source>If any command buffer submitted to this queue is in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;executable state&lt;/a&gt;, it is moved to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;. Once execution of all submissions of a command buffer complete, it moves from the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;, back to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;executable state&lt;/a&gt;. If a command buffer was recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT&lt;/code&gt; flag, it instead moves back to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;invalid state&lt;/a&gt;.</source>
          <target state="translated">このキューに送信されたコマンドバッファが&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;実行可能状態の&lt;/a&gt;場合、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;保留状態に&lt;/a&gt;移行します。コマンドバッファのすべての送信の実行が完了すると、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;保留状態&lt;/a&gt;から&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;実行可能状態に&lt;/a&gt;戻ります。コマンドバッファが &lt;code&gt;VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT&lt;/code&gt; フラグで記録された場合、代わりに&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;無効な状態にます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a959d05e9b9cad4bf668c393ec34df070d2c7043" translate="yes" xml:space="preserve">
          <source>If any element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; flag, and it was recorded into any other primary command buffer which is currently in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;executable or recording state&lt;/a&gt;, that primary command buffer becomes &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;invalid&lt;/a&gt;.</source>
          <target state="translated">いずれかの要素場合 &lt;code&gt;pCommandBuffers&lt;/code&gt; を用いて記録されなかった &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; のフラグ、およびそれに現在ある他の主要コマンドバッファに記録された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;実行可能ファイルまたは記録状態&lt;/a&gt;の一次コマンドバッファになること、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;無効&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="654a82f1ff93b1461fc0aca56d8f77ce403a517a" translate="yes" xml:space="preserve">
          <source>If any element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; flag, and it was recorded into any other primary command buffer, that primary command buffer &lt;strong&gt;must&lt;/strong&gt; not be in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;</source>
          <target state="translated">いずれかの要素場合 &lt;code&gt;pCommandBuffers&lt;/code&gt; を用いて記録されなかった &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; のフラグ、それは、他の一次のコマンドバッファに記録されたプライマリーコマンドバッファその&lt;strong&gt;マスト&lt;/strong&gt;とすることはない&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;保留状態&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c06c57883b1e81598da5eae4e5ed1425f5f17c2" translate="yes" xml:space="preserve">
          <source>If any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; flag, it &lt;strong&gt;must&lt;/strong&gt; not appear more than once in &lt;code&gt;pCommandBuffers&lt;/code&gt;.</source>
          <target state="translated">任意の要素場合 &lt;code&gt;pCommandBuffers&lt;/code&gt; がで記録されなかった &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; のフラグ、それは&lt;strong&gt;しなければならない&lt;/strong&gt;で複数回表示されませ &lt;code&gt;pCommandBuffers&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45a40c78303bf823ef077174f6bce61cbc32510e" translate="yes" xml:space="preserve">
          <source>If any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; flag, it &lt;strong&gt;must&lt;/strong&gt; not be in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;.</source>
          <target state="translated">任意の所与の要素場合 &lt;code&gt;pCommandBuffers&lt;/code&gt; を用いて記録されなかった &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; のフラグ、それが&lt;strong&gt;なければならない&lt;/strong&gt;とすることはない&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;保留状態&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2bee1558a561460f1b7d739e968a7e6eeed4725a" translate="yes" xml:space="preserve">
          <source>If any given element of &lt;code&gt;pCommandBuffers&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; flag, it &lt;strong&gt;must&lt;/strong&gt; not have already been recorded to &lt;code&gt;commandBuffer&lt;/code&gt;.</source>
          <target state="translated">任意の要素場合 &lt;code&gt;pCommandBuffers&lt;/code&gt; がで記録されなかった &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; のフラグ、それが&lt;strong&gt;なければなりません&lt;/strong&gt;、既にに記録されていない &lt;code&gt;commandBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6c65c8f7813079f5ca6b3f4a4a1f6299ad0cead" translate="yes" xml:space="preserve">
          <source>If any given element of the &lt;code&gt;pCommandBuffers&lt;/code&gt; member of any element of &lt;code&gt;pSubmits&lt;/code&gt; was not recorded with the &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; not be in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;.</source>
          <target state="translated">任意の要素場合 &lt;code&gt;pCommandBuffers&lt;/code&gt; の任意の要素のメンバー &lt;code&gt;pSubmits&lt;/code&gt; がで記録されなかった &lt;code&gt;VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT&lt;/code&gt; 、それが&lt;strong&gt;なければなりません&lt;/strong&gt;は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;保留状態&lt;/a&gt;であってはん。</target>
        </trans-unit>
        <trans-unit id="12549e256554e905116aa01eb111aa8e504bcb07" translate="yes" xml:space="preserve">
          <source>If any input attachments are &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;, then any pipelines bound during the subpass &lt;strong&gt;must&lt;/strong&gt; not access those input attachments from the fragment shader</source>
          <target state="translated">入力添付ファイルが &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; の場合、サブパス中にバインドされたパイプライン&lt;strong&gt;&lt;/strong&gt;は、フラグメントシェーダーからこれらの入力アタッチメントにアクセスして&lt;strong&gt;ませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="aecd21d787561cdac3cd83cb0b7c395a6c5b19a9" translate="yes" xml:space="preserve">
          <source>If any member of &lt;code&gt;pFences&lt;/code&gt; is already in the unsignaled state when &lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt; is executed, then &lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt; has no effect on that fence.</source>
          <target state="translated">&lt;a href=&quot;#vkResetFences&quot;&gt;vkResetFences&lt;/a&gt;が実行されたときに、pFencesのいずれかのメンバーがすでに &lt;code&gt;pFences&lt;/code&gt; れていない状態にある場合、&lt;a href=&quot;#vkResetFences&quot;&gt; vkResetFencesは&lt;/a&gt;そのフェンスに影響を及ぼしません。</target>
        </trans-unit>
        <trans-unit id="3b0f0d5d1e413896923a2e538540f999a66625ec" translate="yes" xml:space="preserve">
          <source>If any of &lt;code&gt;addressModeU&lt;/code&gt;, &lt;code&gt;addressModeV&lt;/code&gt; or &lt;code&gt;addressModeW&lt;/code&gt; are &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt;, &lt;code&gt;borderColor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid &lt;a href=&quot;#VkBorderColor&quot;&gt;VkBorderColor&lt;/a&gt; value</source>
          <target state="translated">&lt;code&gt;addressModeU&lt;/code&gt; 、 &lt;code&gt;addressModeV&lt;/code&gt; 、または &lt;code&gt;addressModeW&lt;/code&gt; のいずれかが &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER&lt;/code&gt; である場合、 &lt;code&gt;borderColor&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;有効である&lt;strong&gt;必要&lt;/strong&gt;があります&lt;a href=&quot;#VkBorderColor&quot;&gt; VkBorderColor&lt;/a&gt;値であるます</target>
        </trans-unit>
        <trans-unit id="231252ad1d02e8be77bbcac42ced849e74176b72" translate="yes" xml:space="preserve">
          <source>If any of &lt;code&gt;extent.width&lt;/code&gt;, &lt;code&gt;extent.height&lt;/code&gt;, or &lt;code&gt;extent.depth&lt;/code&gt; are greater than the equivalently named members of &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxImageDimension3D&lt;/code&gt;, &lt;code&gt;mipLevels&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkImageFormatProperties&lt;/code&gt;::&lt;code&gt;maxMipLevels&lt;/code&gt; (as returned by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; with &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; equal to those in this structure)</source>
          <target state="translated">任意の場合 &lt;code&gt;extent.width&lt;/code&gt; 、 &lt;code&gt;extent.height&lt;/code&gt; 、又は &lt;code&gt;extent.depth&lt;/code&gt; はの等価名前メンバーより大きい &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxImageDimension3D&lt;/code&gt; 、 &lt;code&gt;mipLevels&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;未満又は等しいこと &lt;code&gt;VkImageFormatProperties&lt;/code&gt; :: &lt;code&gt;maxMipLevels&lt;/code&gt; で返される（ &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; と &lt;code&gt;format&lt;/code&gt; 、 &lt;code&gt;imageType&lt;/code&gt; 、 &lt;code&gt;tiling&lt;/code&gt; 、 &lt;code&gt;usage&lt;/code&gt; 、および &lt;code&gt;flags&lt;/code&gt; は、この構造のものと同じです）</target>
        </trans-unit>
        <trans-unit id="5c2b1cf49a82beacdc3babdbcb621672777242b3" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; members of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is not &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt;, then each such &lt;code&gt;initialLayout&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to the current layout of the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;</source>
          <target state="translated">いずれかの場合 &lt;code&gt;initialLayout&lt;/code&gt; 用のメンバー &lt;code&gt;VkAttachmentDescription&lt;/code&gt; の中で指定された通過レンダリング作成時に構造が指定 &lt;code&gt;renderPass&lt;/code&gt; 用の部材 &lt;code&gt;pRenderPassBegin&lt;/code&gt; れない &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; 、各そのような &lt;code&gt;initialLayout&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;で指定されたフレームバッファの対応する取付画像サブリソースの現在のレイアウトに等しくなります &lt;code&gt;framebuffer&lt;/code&gt; &lt;code&gt;pRenderPassBegin&lt;/code&gt; のメンバー</target>
        </trans-unit>
        <trans-unit id="1abdb81f27d8e164a2d6e34742ce3368442d9b80" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; or &lt;code&gt;finalLayout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures or the &lt;code&gt;layout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL&lt;/code&gt; then the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">任意の場合 &lt;code&gt;initialLayout&lt;/code&gt; 又は &lt;code&gt;finalLayout&lt;/code&gt; のメンバー &lt;code&gt;VkAttachmentDescription&lt;/code&gt; の構造または &lt;code&gt;layout&lt;/code&gt; のメンバー &lt;code&gt;VkAttachmentReference&lt;/code&gt; の中で指定された通過レンダリング作成時に構造が指定さ &lt;code&gt;renderPass&lt;/code&gt; 用の部材 &lt;code&gt;pRenderPassBegin&lt;/code&gt; さ &lt;code&gt;VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL&lt;/code&gt; をその後に指定されたフレームバッファの対応する取付画像サブリソース &lt;code&gt;framebuffer&lt;/code&gt; のメンバーを &lt;code&gt;pRenderPassBegin&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; を設定し</target>
        </trans-unit>
        <trans-unit id="c77672399b27fc9ac5d44e1bb040d056c3bb29ef" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; or &lt;code&gt;finalLayout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures or the &lt;code&gt;layout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL&lt;/code&gt; or &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; then the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">任意の場合 &lt;code&gt;initialLayout&lt;/code&gt; 又は &lt;code&gt;finalLayout&lt;/code&gt; のメンバー &lt;code&gt;VkAttachmentDescription&lt;/code&gt; の構造または &lt;code&gt;layout&lt;/code&gt; のメンバー &lt;code&gt;VkAttachmentReference&lt;/code&gt; の中で指定された通過レンダリング作成時に構造が指定さ &lt;code&gt;renderPass&lt;/code&gt; のメンバー &lt;code&gt;pRenderPassBegin&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL&lt;/code&gt; 又は &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; その後に指定されたフレームバッファの対応する取付画像サブリソース &lt;code&gt;framebuffer&lt;/code&gt; &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; セットのメンバー &lt;code&gt;pRenderPassBegin&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;で作成されました</target>
        </trans-unit>
        <trans-unit id="3d533c57f5f6565fc79d39467e183d2a2c7be8c7" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; or &lt;code&gt;finalLayout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures or the &lt;code&gt;layout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL&lt;/code&gt; then the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">任意の場合 &lt;code&gt;initialLayout&lt;/code&gt; 又は &lt;code&gt;finalLayout&lt;/code&gt; のメンバー &lt;code&gt;VkAttachmentDescription&lt;/code&gt; の構造または &lt;code&gt;layout&lt;/code&gt; のメンバー &lt;code&gt;VkAttachmentReference&lt;/code&gt; の中で指定された通過レンダリング作成時に構造が指定さ &lt;code&gt;renderPass&lt;/code&gt; 用の部材 &lt;code&gt;pRenderPassBegin&lt;/code&gt; さ &lt;code&gt;VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL&lt;/code&gt; をその後に指定されたフレームバッファの対応する取付画像サブリソース &lt;code&gt;framebuffer&lt;/code&gt; のメンバーを &lt;code&gt;pRenderPassBegin&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; または &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; で作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます設定</target>
        </trans-unit>
        <trans-unit id="4ab70f466c36ce5127a3f106d06a73496bfb97e6" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; or &lt;code&gt;finalLayout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures or the &lt;code&gt;layout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL&lt;/code&gt; then the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; set</source>
          <target state="translated">任意の場合 &lt;code&gt;initialLayout&lt;/code&gt; 又は &lt;code&gt;finalLayout&lt;/code&gt; のメンバー &lt;code&gt;VkAttachmentDescription&lt;/code&gt; の構造または &lt;code&gt;layout&lt;/code&gt; のメンバー &lt;code&gt;VkAttachmentReference&lt;/code&gt; の中で指定された通過レンダリング作成時に構造が指定さ &lt;code&gt;renderPass&lt;/code&gt; 用の部材 &lt;code&gt;pRenderPassBegin&lt;/code&gt; さ &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL&lt;/code&gt; をその後に指定されたフレームバッファの対応する取付画像サブリソース &lt;code&gt;framebuffer&lt;/code&gt; のメンバーを &lt;code&gt;pRenderPassBegin&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;で作成された &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; 設定し</target>
        </trans-unit>
        <trans-unit id="5305deb202180d717ad266514bd4aad80565ff6e" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;initialLayout&lt;/code&gt; or &lt;code&gt;finalLayout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures or the &lt;code&gt;layout&lt;/code&gt; member of the &lt;code&gt;VkAttachmentReference&lt;/code&gt; structures specified when creating the render pass specified in the &lt;code&gt;renderPass&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL&lt;/code&gt; then the corresponding attachment image subresource of the framebuffer specified in the &lt;code&gt;framebuffer&lt;/code&gt; member of &lt;code&gt;pRenderPassBegin&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; set</source>
          <target state="translated">任意の場合 &lt;code&gt;initialLayout&lt;/code&gt; 又は &lt;code&gt;finalLayout&lt;/code&gt; のメンバー &lt;code&gt;VkAttachmentDescription&lt;/code&gt; の構造または &lt;code&gt;layout&lt;/code&gt; のメンバー &lt;code&gt;VkAttachmentReference&lt;/code&gt; の中で指定された通過レンダリング作成時に構造が指定さ &lt;code&gt;renderPass&lt;/code&gt; 用の部材 &lt;code&gt;pRenderPassBegin&lt;/code&gt; さ &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL&lt;/code&gt; をその後に指定されたフレームバッファの対応する取付画像サブリソース &lt;code&gt;framebuffer&lt;/code&gt; のメンバーを &lt;code&gt;pRenderPassBegin&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;で作成された &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; 設定し</target>
        </trans-unit>
        <trans-unit id="0148f704015f23d4df0dc715e04efbeb2c70079a" translate="yes" xml:space="preserve">
          <source>If any of the bits &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;, &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;, or &lt;code&gt;VK_IMAGE_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt; are set, &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not also be set.</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 、 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; 、または &lt;code&gt;VK_IMAGE_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt; のいずれかのビットが設定されている場合、 &lt;code&gt;VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;にも設定されません。</target>
        </trans-unit>
        <trans-unit id="4ae63bd5cde694200ed125fd89960b61f43f2a24" translate="yes" xml:space="preserve">
          <source>If any of the sets being bound include dynamic uniform or storage buffers, then &lt;code&gt;pDynamicOffsets&lt;/code&gt; includes one element for each array element in each dynamic descriptor type binding in each set. Values are taken from &lt;code&gt;pDynamicOffsets&lt;/code&gt; in an order such that all entries for set N come before set N+1; within a set, entries are ordered by the binding numbers in the descriptor set layouts; and within a binding array, elements are in order. &lt;code&gt;dynamicOffsetCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; equal the total number of dynamic descriptors in the sets being bound.</source>
          <target state="translated">バインドされているセットのいずれかに動的なユニフォームまたはストレージバッファーが含まれている場合、 &lt;code&gt;pDynamicOffsets&lt;/code&gt; には、各セットの各動的記述子タイプバインディングの各配列要素に1つの要素が含まれます。値は、セットNのすべてのエントリがセットN + 1の前に来るような順序で &lt;code&gt;pDynamicOffsets&lt;/code&gt; から取得されます。セット内では、エントリは記述子セットレイアウトのバインディング番号で並べられます。バインディング配列内では、要素は順番に並んでいます。 &lt;code&gt;dynamicOffsetCount&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、バインドされるセット内の動的記述子の総数と等しく。</target>
        </trans-unit>
        <trans-unit id="5fd348f32058ed2eb19cad51f7414a5dff93ab02" translate="yes" xml:space="preserve">
          <source>If any two subpasses operate on attachments with overlapping ranges of the same &lt;code&gt;VkDeviceMemory&lt;/code&gt; object, and at least one subpass writes to that area of &lt;code&gt;VkDeviceMemory&lt;/code&gt;, a subpass dependency &lt;strong&gt;must&lt;/strong&gt; be included (either directly or via some intermediate subpasses) between them</source>
          <target state="translated">2 つのサブパスが同じ &lt;code&gt;VkDeviceMemory&lt;/code&gt; オブジェクトの重複する範囲を持つアタッチメントで動作し、少なくとも1つのサブパスが &lt;code&gt;VkDeviceMemory&lt;/code&gt; のその領域に書き込む場合、サブパスの依存関係をそれらの間に（直接またはいくつかの中間サブパスを介して）含める&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="6283bff285e02c629dd47b46ed5b85cbdfcd0c4d" translate="yes" xml:space="preserve">
          <source>If at least one vertex of the input primitive lies inside the clipping volume, the counter is incremented by one or more.</source>
          <target state="translated">入力プリミティブの少なくとも 1 つの頂点がクリッピングボリューム内にある場合、カウンタは 1 つ以上インクリメントされます。</target>
        </trans-unit>
        <trans-unit id="e3e243733eb75c471d9ffa24e4003d91c42f1e23" translate="yes" xml:space="preserve">
          <source>If device loss occurs (see &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;Lost Device&lt;/a&gt;) before the timeout has expired, &lt;code&gt;vkWaitForFences&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; return in finite time with either &lt;code&gt;VK_SUCCESS&lt;/code&gt; or &lt;code&gt;VK_DEVICE_LOST&lt;/code&gt;.</source>
          <target state="translated">デバイスの損失が発生した場合（参照&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;紛失したデバイスを&lt;/a&gt;タイムアウトが経過する前に、） &lt;code&gt;vkWaitForFences&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;のいずれかで有限の時間に戻る &lt;code&gt;VK_SUCCESS&lt;/code&gt; または &lt;code&gt;VK_DEVICE_LOST&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="0a7b93c5125a9f239b221b47fb098724d7b8b8a4" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">いずれかの場合 &lt;code&gt;oldLayout&lt;/code&gt; または &lt;code&gt;newLayout&lt;/code&gt; がある &lt;code&gt;VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL&lt;/code&gt; その後、 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;で作成された &lt;code&gt;VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT&lt;/code&gt; セット</target>
        </trans-unit>
        <trans-unit id="3e062bf5cf02a8bbfe17c445a678e1ccf656716e" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">いずれかの場合 &lt;code&gt;oldLayout&lt;/code&gt; または &lt;code&gt;newLayout&lt;/code&gt; がある &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL&lt;/code&gt; その後、 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;で作成された &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; セット</target>
        </trans-unit>
        <trans-unit id="dc16023738da3c60f71e0c4c4af58a711960659e" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">いずれかの場合 &lt;code&gt;oldLayout&lt;/code&gt; または &lt;code&gt;newLayout&lt;/code&gt; がある &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; その後、 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;で作成された &lt;code&gt;VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT&lt;/code&gt; セット</target>
        </trans-unit>
        <trans-unit id="9a84522f99a3f957d5c7c0b6d3d575ec2c277b89" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; or &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; set</source>
          <target state="translated">いずれかの場合 &lt;code&gt;oldLayout&lt;/code&gt; または &lt;code&gt;newLayout&lt;/code&gt; がある &lt;code&gt;VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL&lt;/code&gt; その後、 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;で作成された &lt;code&gt;VK_IMAGE_USAGE_SAMPLED_BIT&lt;/code&gt; または &lt;code&gt;VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT&lt;/code&gt; セット</target>
        </trans-unit>
        <trans-unit id="34f9ecb75bd34ded21dcd62bfb565cd57b629355" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; set</source>
          <target state="translated">いずれかの場合 &lt;code&gt;oldLayout&lt;/code&gt; または &lt;code&gt;newLayout&lt;/code&gt; がある &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL&lt;/code&gt; その後、 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;で作成された &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_DST_BIT&lt;/code&gt; セット</target>
        </trans-unit>
        <trans-unit id="1344282c088503e695174d47f4c647525e985b4c" translate="yes" xml:space="preserve">
          <source>If either &lt;code&gt;oldLayout&lt;/code&gt; or &lt;code&gt;newLayout&lt;/code&gt; is &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL&lt;/code&gt; then &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; have been created with &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; set</source>
          <target state="translated">いずれかの場合 &lt;code&gt;oldLayout&lt;/code&gt; または &lt;code&gt;newLayout&lt;/code&gt; がある &lt;code&gt;VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL&lt;/code&gt; その後、 &lt;code&gt;image&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;で作成された &lt;code&gt;VK_IMAGE_USAGE_TRANSFER_SRC_BIT&lt;/code&gt; セット</target>
        </trans-unit>
        <trans-unit id="b86307d3aa001c5d575c1b42e8db4b7419b3cc4e" translate="yes" xml:space="preserve">
          <source>If either of &lt;code&gt;pfnInternalAllocation&lt;/code&gt; or &lt;code&gt;pfnInternalFree&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, both &lt;strong&gt;must&lt;/strong&gt; be valid callbacks</source>
          <target state="translated">いずれかの場合 &lt;code&gt;pfnInternalAllocation&lt;/code&gt; か &lt;code&gt;pfnInternalFree&lt;/code&gt; がない &lt;code&gt;NULL&lt;/code&gt; 、両方が&lt;strong&gt;なければなりません&lt;/strong&gt;、有効なコールバックも</target>
        </trans-unit>
        <trans-unit id="1aee68bcd44fde9f982f69dc1933fce71fd8a4fd" translate="yes" xml:space="preserve">
          <source>If either of &lt;code&gt;srcImage&lt;/code&gt; or &lt;code&gt;dstImage&lt;/code&gt; was created with a depth/stencil format, the other &lt;strong&gt;must&lt;/strong&gt; have exactly the same format</source>
          <target state="translated">&lt;code&gt;srcImage&lt;/code&gt; または &lt;code&gt;dstImage&lt;/code&gt; のいずれかが深度/ステンシル形式で作成された場合、もう一方はまったく同じ形式で&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a7dbd465c4e840b81df6a4b6b2b55bd00e86206" translate="yes" xml:space="preserve">
          <source>If either of &lt;code&gt;srcImage&lt;/code&gt; or &lt;code&gt;dstImage&lt;/code&gt; was created with a signed integer &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, the other &lt;strong&gt;must&lt;/strong&gt; also have been created with a signed integer &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;srcImage&lt;/code&gt; または &lt;code&gt;dstImage&lt;/code&gt; のいずれかが符号付き整数&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;で作成された場合、もう一方も符号付き整数&lt;a href=&quot;#VkFormat&quot;&gt;VkFormatで&lt;/a&gt;作成されている&lt;strong&gt;必要が&lt;/strong&gt;あります。</target>
        </trans-unit>
        <trans-unit id="5f9b29cd6edaa3bea1c98d54a698cb1dc570eb00" translate="yes" xml:space="preserve">
          <source>If either of &lt;code&gt;srcImage&lt;/code&gt; or &lt;code&gt;dstImage&lt;/code&gt; was created with an unsigned integer &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;, the other &lt;strong&gt;must&lt;/strong&gt; also have been created with an unsigned integer &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;srcImage&lt;/code&gt; または &lt;code&gt;dstImage&lt;/code&gt; のいずれかが符号なし整数&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;で作成された場合、もう一方も符号なし整数&lt;a href=&quot;#VkFormat&quot;&gt;VkFormatで&lt;/a&gt;作成されている&lt;strong&gt;必要が&lt;/strong&gt;あります。</target>
        </trans-unit>
        <trans-unit id="e45ff6670dcb9d8847472be2d590a7a5da96aac0" translate="yes" xml:space="preserve">
          <source>If either of the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; or &lt;code&gt;dstImage&lt;/code&gt; parameters are of &lt;a href=&quot;#VkImageType&quot;&gt;VkImageType&lt;/a&gt;&lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt;, the &lt;code&gt;baseArrayLayer&lt;/code&gt; and &lt;code&gt;layerCount&lt;/code&gt; members of both &lt;code&gt;srcSubresource&lt;/code&gt; and &lt;code&gt;dstSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;, respectively</source>
          <target state="translated">呼び出しコマンドの &lt;code&gt;srcImage&lt;/code&gt; または &lt;code&gt;dstImage&lt;/code&gt; パラメーターのいずれかが&lt;a href=&quot;#VkImageType&quot;&gt;VkImageType &lt;/a&gt; &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; である場合、 &lt;code&gt;baseArrayLayer&lt;/code&gt; および &lt;code&gt;layerCount&lt;/code&gt; の両方の &lt;code&gt;srcSubresource&lt;/code&gt; および &lt;code&gt;dstSubresource&lt;/code&gt; メンバーは、それぞれ &lt;code&gt;0&lt;/code&gt; および &lt;code&gt;1&lt;/code&gt; で&lt;strong&gt;なければなりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="ead68b86880e27eaeba799db5f15fa268485c9e8" translate="yes" xml:space="preserve">
          <source>If multiple &lt;code&gt;VkDescriptorPoolSize&lt;/code&gt; structures appear in the &lt;code&gt;pPoolSizes&lt;/code&gt; array then the pool will be created with enough storage for the total number of descriptors of each type.</source>
          <target state="translated">複数の &lt;code&gt;VkDescriptorPoolSize&lt;/code&gt; 構造が &lt;code&gt;pPoolSizes&lt;/code&gt; 配列に表示される場合、プールは、各タイプの記述子の総数に十分なストレージで作成されます。</target>
        </trans-unit>
        <trans-unit id="611a36b9a86ca5bd0b9575d048f206ea33a6991c" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;buffer&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; が提供されなかった時に &lt;code&gt;buffer&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d860cbed380b9b1c0b6371b27a4843c1fb79cd20" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;bufferView&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;bufferView&lt;/code&gt; が作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6af912fcb2d37426aa57a0e10a8f789fdb0aed86" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;commandPool&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;commandPool&lt;/code&gt; が作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f96ca67412eca85fe9efb228077c1664df849baa" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;descriptorPool&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;descriptorPool&lt;/code&gt; が作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f11cfcca3eb498f8b9143fe4ac1deefd6b503ea2" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;descriptorSetLayout&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;descriptorSetLayout&lt;/code&gt; が作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfa3560cf0b7946080cedfe2bf19c7814295afbb" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;device&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; が提供されなかったとき &lt;code&gt;device&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="447c081043a5019bf4ab882afd54507a018c35ef" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;event&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; が提供されなかった時に &lt;code&gt;event&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5a58417319f29675e303d72863ca1c172317ff71" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;fence&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;fence&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="acb7684df3b05554e7a3fd66177c6708fef02cf3" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;framebuffer&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;framebuffer&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c322ed965cd889df307b5caaf8c3929096f10191" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;image&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;image&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="60d2e24c828f353144df8d55555e02e6c392c3f6" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;imageView&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;imageView&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0bb002dc5fc93f68fa26b7054bdf5c0362d32cea" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;instance&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;instance&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2dac316c2314ba87dc4a0c54372487d77090189e" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;pipeline&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;pipeline&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0e5d0323f1547f1e160709af9c60e7be0647ce1b" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;pipelineCache&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;pipelineCache&lt;/code&gt; が作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc5c86238fab88bdc569b87b3ae8d452305f46be" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;pipelineLayout&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;pipelineLayout&lt;/code&gt; が作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eb3017d255a45986bf0188eab49704d936356e9e" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;queryPool&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;queryPool&lt;/code&gt; が作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ee0fc24eb866dd9d739b9da0e10b14faeb32d85" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;renderPass&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;renderPass&lt;/code&gt; が作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6ec5109e5eb44b8023977a1bb224047a254ddf3" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;sampler&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; が提供されなかったとき、 &lt;code&gt;sampler&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d13f89c72359065eeb422aa7befe83a0ad735fda" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;semaphore&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;semaphore&lt;/code&gt; 作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="199b4f37001ed5b016d5dee45e393aff8f499147" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; were provided when &lt;code&gt;shaderModule&lt;/code&gt; was created, &lt;code&gt;pAllocator&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;NULL&lt;/code&gt;</source>
          <target state="translated">何場合 &lt;code&gt;VkAllocationCallbacks&lt;/code&gt; がときに提供されなかった &lt;code&gt;shaderModule&lt;/code&gt; が作成された、 &lt;code&gt;pAllocator&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;NULL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0a0d481884ac52ec9c10a45c803d438c3bdad1d" translate="yes" xml:space="preserve">
          <source>If no bits are set in &lt;code&gt;flags&lt;/code&gt;, and all requested queries are in the available state, results are written as an array of 32-bit unsigned integer values. The behavior when not all queries are available, is described &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-wait-bit-not-set&quot;&gt;below&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; にビットが設定されておらず、要求されたすべてのクエリが利用可能な状態にある場合、結果は32ビットの符号なし整数値の配列として書き込まれます。すべてのクエリを使用できない場合の動作を&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-wait-bit-not-set&quot;&gt;以下に&lt;/a&gt;説明します。</target>
        </trans-unit>
        <trans-unit id="08c0b3f0795dd32d65ed3356cbe299d40888c697" translate="yes" xml:space="preserve">
          <source>If no bits are set in &lt;code&gt;flags&lt;/code&gt;, results for all requested queries in the available state are written as 32-bit unsigned integer values, and nothing is written for queries in the unavailable state.</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; にビットが設定されていない場合、利用可能な状態で要求されたすべてのクエリの結果は32ビットの符号なし整数値として書き込まれ、利用不可の状態のクエリでは何も書き込まれません。</target>
        </trans-unit>
        <trans-unit id="2cf0621523d8b65efaee0e910f7c70ec2a47cb52" translate="yes" xml:space="preserve">
          <source>If no depth buffer is present, r is undefined.</source>
          <target state="translated">深度バッファが存在しない場合、r は未定義です。</target>
        </trans-unit>
        <trans-unit id="c2f712b93dc942ce61a9cc633185bc883c43daa3" translate="yes" xml:space="preserve">
          <source>If no element of the &lt;code&gt;pDynamicStates&lt;/code&gt; member of &lt;code&gt;pDynamicState&lt;/code&gt; is &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt;, and the &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; member of &lt;code&gt;pDepthStencil&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, the &lt;code&gt;minDepthBounds&lt;/code&gt; and &lt;code&gt;maxDepthBounds&lt;/code&gt; members of &lt;code&gt;pDepthStencil&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt;, inclusive</source>
          <target state="translated">いかなる要素場合 &lt;code&gt;pDynamicStates&lt;/code&gt; のメンバー &lt;code&gt;pDynamicState&lt;/code&gt; はしない &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; 、及び &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; のメンバー &lt;code&gt;pDepthStencil&lt;/code&gt; がある &lt;code&gt;VK_TRUE&lt;/code&gt; 、 &lt;code&gt;minDepthBounds&lt;/code&gt; 及び &lt;code&gt;maxDepthBounds&lt;/code&gt; のメンバー &lt;code&gt;pDepthStencil&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;の間で &lt;code&gt;0.0&lt;/code&gt; と &lt;code&gt;1.0&lt;/code&gt; 、包括的な</target>
        </trans-unit>
        <trans-unit id="7992cb9a7f3ba36755f5fb5804cb7ceb8d86801e" translate="yes" xml:space="preserve">
          <source>If no element of the &lt;code&gt;pDynamicStates&lt;/code&gt; member of &lt;code&gt;pDynamicState&lt;/code&gt; is &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt;, the &lt;code&gt;pScissors&lt;/code&gt; member of &lt;code&gt;pViewportState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pViewportState&lt;/code&gt;::&lt;code&gt;scissorCount&lt;/code&gt;&lt;code&gt;VkRect2D&lt;/code&gt; structures</source>
          <target state="translated">のない要素場合 &lt;code&gt;pDynamicStates&lt;/code&gt; のメンバー &lt;code&gt;pDynamicState&lt;/code&gt; はありません &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; 、 &lt;code&gt;pScissors&lt;/code&gt; のメンバー &lt;code&gt;pViewportState&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;の配列へのポインタである &lt;code&gt;pViewportState&lt;/code&gt; :: &lt;code&gt;scissorCount&lt;/code&gt; &lt;code&gt;VkRect2D&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="25bc3bf52dcbe37ecd9f865915172756584a3477" translate="yes" xml:space="preserve">
          <source>If no element of the &lt;code&gt;pDynamicStates&lt;/code&gt; member of &lt;code&gt;pDynamicState&lt;/code&gt; is &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt;, the &lt;code&gt;pViewports&lt;/code&gt; member of &lt;code&gt;pViewportState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pViewportState&lt;/code&gt;::&lt;code&gt;viewportCount&lt;/code&gt;&lt;code&gt;VkViewport&lt;/code&gt; structures</source>
          <target state="translated">いかなる要素場合 &lt;code&gt;pDynamicStates&lt;/code&gt; のメンバー &lt;code&gt;pDynamicState&lt;/code&gt; はしない &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; 、 &lt;code&gt;pViewports&lt;/code&gt; のメンバー &lt;code&gt;pViewportState&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;の配列へのポインタである &lt;code&gt;pViewportState&lt;/code&gt; :: &lt;code&gt;viewportCount&lt;/code&gt; &lt;code&gt;VkViewport&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="8eea36eb9ec6fe0a5913c655be7596290db5c201" translate="yes" xml:space="preserve">
          <source>If no format feature flags are supported, then the only possible use would be image transfers - which alone are not useful. As such, if no format feature flags are supported, the format itself is not supported, and images of that format cannot be created.</source>
          <target state="translated">フォーマット機能フラグがサポートされていない場合、使用可能なのは画像の転送だけであり、それだけでは役に立ちません。このように、フォーマット機能フラグがサポートされていない場合、そのフォーマット自体がサポートされておらず、そのフォーマットの画像を作成することができません。</target>
        </trans-unit>
        <trans-unit id="ead417d6c56baefbc026877b1d703810fedd61b9" translate="yes" xml:space="preserve">
          <source>If rasterization is not disabled and &lt;code&gt;subpass&lt;/code&gt; uses a depth/stencil attachment in &lt;code&gt;renderpass&lt;/code&gt; that has a layout of &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; in the &lt;code&gt;VkAttachmentReference&lt;/code&gt; defined by &lt;code&gt;subpass&lt;/code&gt;, the &lt;code&gt;depthWriteEnable&lt;/code&gt; member of &lt;code&gt;pDepthStencilState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">ラスタライズが無効になっておらず、 &lt;code&gt;subpass&lt;/code&gt; が &lt;code&gt;renderpass&lt;/code&gt; 深度/ステンシルアタッチメントを使用し、 &lt;code&gt;subpass&lt;/code&gt; によって定義された &lt;code&gt;VkAttachmentReference&lt;/code&gt; に &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; のレイアウトがある場合、 &lt;code&gt;depthWriteEnable&lt;/code&gt; のメンバー &lt;code&gt;pDepthStencilState&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c1f715373edf5ac883a7904779508216bce55f6" translate="yes" xml:space="preserve">
          <source>If rasterization is not disabled and &lt;code&gt;subpass&lt;/code&gt; uses a depth/stencil attachment in &lt;code&gt;renderpass&lt;/code&gt; that has a layout of &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; in the &lt;code&gt;VkAttachmentReference&lt;/code&gt; defined by &lt;code&gt;subpass&lt;/code&gt;, the &lt;code&gt;failOp&lt;/code&gt;, &lt;code&gt;passOp&lt;/code&gt; and &lt;code&gt;depthFailOp&lt;/code&gt; members of each of the &lt;code&gt;front&lt;/code&gt; and &lt;code&gt;back&lt;/code&gt; members of &lt;code&gt;pDepthStencilState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_STENCIL_OP_KEEP&lt;/code&gt;</source>
          <target state="translated">ラスタライゼーションが無効になっておらず、 &lt;code&gt;subpass&lt;/code&gt; が &lt;code&gt;renderpass&lt;/code&gt; 深度/ステンシルアタッチメントを使用する場合、 &lt;code&gt;subpass&lt;/code&gt; で定義された &lt;code&gt;VkAttachmentReference&lt;/code&gt; に &lt;code&gt;VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL&lt;/code&gt; のレイアウトがあり、各 &lt;code&gt;front&lt;/code&gt; &lt;code&gt;failOp&lt;/code&gt; 、 &lt;code&gt;passOp&lt;/code&gt; 、 &lt;code&gt;depthFailOp&lt;/code&gt; メンバーと &lt;code&gt;back&lt;/code&gt; のメンバー &lt;code&gt;pDepthStencilState&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;こと &lt;code&gt;VK_STENCIL_OP_KEEP&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="906d6c3e271b3a87401342b38e86942431f543f9" translate="yes" xml:space="preserve">
          <source>If rasterization is not disabled and the subpass uses color attachments, the &lt;code&gt;attachmentCount&lt;/code&gt; member of &lt;code&gt;pColorBlendState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be equal to the &lt;code&gt;colorAttachmentCount&lt;/code&gt; used to create &lt;code&gt;subpass&lt;/code&gt;</source>
          <target state="translated">ラスタライゼーションが無効ではなく、サブパスがカラーアタッチメントを使用する場合、 &lt;code&gt;pColorBlendState&lt;/code&gt; の &lt;code&gt;attachmentCount&lt;/code&gt; メンバーは、 &lt;code&gt;subpass&lt;/code&gt; 作成に使用される &lt;code&gt;colorAttachmentCount&lt;/code&gt; と等しい&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62b08239cf239fe8158ecbbb47036c4eebcc1c02" translate="yes" xml:space="preserve">
          <source>If rasterization is not disabled and the subpass uses color attachments, then for each color attachment in the subpass the &lt;code&gt;blendEnable&lt;/code&gt; member of the corresponding element of the &lt;code&gt;pAttachment&lt;/code&gt; member of &lt;code&gt;pColorBlendState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt; if the &lt;code&gt;format&lt;/code&gt; of the attachment does not support color blend operations, as specified by the &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT&lt;/code&gt; flag in &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;linearTilingFeatures&lt;/code&gt; or &lt;code&gt;VkFormatProperties&lt;/code&gt;::&lt;code&gt;optimalTilingFeatures&lt;/code&gt; returned by &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt;</source>
          <target state="translated">ラスタライズが無効ではないとsubpass色アタッチメントを使用する場合、subpassの各色の結合のため &lt;code&gt;blendEnable&lt;/code&gt; の対応する要素のメンバ &lt;code&gt;pAttachment&lt;/code&gt; のメンバー &lt;code&gt;pColorBlendState&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt; 場合 &lt;code&gt;format&lt;/code&gt; 付着があるカラーブレンド操作をサポートしていませんで指定された &lt;code&gt;VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT&lt;/code&gt; の中フラグ &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;linearTilingFeatures&lt;/code&gt; または &lt;code&gt;VkFormatProperties&lt;/code&gt; :: &lt;code&gt;optimalTilingFeatures&lt;/code&gt; によって返さ &lt;code&gt;vkGetPhysicalDeviceFormatProperties&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b9b3f8fcb8e9e334dfe0e57955140abc897f270" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;layerCount&lt;/code&gt; member of any element of the &lt;code&gt;pRanges&lt;/code&gt; array is not &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; be non-zero and &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;layerCount&lt;/code&gt; for that element of the &lt;code&gt;pRanges&lt;/code&gt; array &lt;strong&gt;must&lt;/strong&gt; be less than or equal to the &lt;code&gt;arrayLayers&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">&lt;code&gt;pRanges&lt;/code&gt; 配列のいずれかの要素の&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;layerCount&lt;/code&gt; メンバーがVK_REMAINING_ARRAY_LAYERSでない &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt; 、それ&lt;strong&gt;は&lt;/strong&gt;非ゼロである&lt;strong&gt;必要&lt;/strong&gt;があり、 &lt;code&gt;pRanges&lt;/code&gt; 配列のその要素の&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;layerCount&lt;/code&gt; は以下で&lt;strong&gt;なければなりません&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt; &lt;code&gt;arrayLayers&lt;/code&gt; &lt;code&gt;image&lt;/code&gt; 作成時に&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfoで&lt;/a&gt;指定</target>
        </trans-unit>
        <trans-unit id="cde5730f20a274fb72adbbc8221f7e48cd139a7c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;levelCount&lt;/code&gt; member of any element of the &lt;code&gt;pRanges&lt;/code&gt; array is not &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; be non-zero and &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;baseMipLevel&lt;/code&gt; + &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;levelCount&lt;/code&gt; for that element of the &lt;code&gt;pRanges&lt;/code&gt; array &lt;strong&gt;must&lt;/strong&gt; be less than or equal to the &lt;code&gt;mipLevels&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">場合&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;levelCount&lt;/code&gt; の任意の要素のメンバ &lt;code&gt;pRanges&lt;/code&gt; のアレイではない &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt; 、それが&lt;strong&gt;なければならない&lt;/strong&gt;非ゼロであると&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;baseMipLevel&lt;/code&gt; + &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;levelCount&lt;/code&gt; のその要素の &lt;code&gt;pRanges&lt;/code&gt; のアレイ&lt;strong&gt;なければならない&lt;/strong&gt;未満であるか、または等しい &lt;code&gt;mipLevels&lt;/code&gt; &lt;code&gt;image&lt;/code&gt; 作成時に&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfoで&lt;/a&gt;指定</target>
        </trans-unit>
        <trans-unit id="c322bee62d2ddab575cb8eedb3f410b49779209d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-alphaToOne&quot;&gt;alpha to one&lt;/a&gt; feature is not enabled, &lt;code&gt;alphaToOneEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-alphaToOne&quot;&gt;1つのにアルファ&lt;/a&gt;の機能が有効になっていない、 &lt;code&gt;alphaToOneEnable&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e74c3a5e60f215935ffc3c377bcfbd0b388639c4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthBiasClamp&quot;&gt;depth bias clamping&lt;/a&gt; feature is not enabled, &lt;code&gt;depthBiasClamp&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;.0</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthBiasClamp&quot;&gt;深度バイアスクランプ&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;depthBiasClamp&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; 0.0</target>
        </trans-unit>
        <trans-unit id="111fa9c31716ee62155af018d21c603e686048fa" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthBounds&quot;&gt;depth bounds testing&lt;/a&gt; feature is not enabled, &lt;code&gt;depthBoundsTestEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthBounds&quot;&gt;深度境界テスト&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a69f88fe8ec2f5761a31f7ef324e627f43f05c11" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthClamp&quot;&gt;depth clamping&lt;/a&gt; feature is not enabled, &lt;code&gt;depthClampEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-depthClamp&quot;&gt;深度クランプ&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;depthClampEnable&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e3c3b720441771f315c83d3478425685d9c9c102" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstance&lt;/a&gt; feature is not enabled, &lt;code&gt;firstInstance&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">場合&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstanceの&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;firstInstance&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f83507eed2d3301eb58e45221fa6e3f0ef7f149b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstance&lt;/a&gt; feature is not enabled, all the &lt;code&gt;firstInstance&lt;/code&gt; members of the &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; structures accessed by this command &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">場合&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstanceの&lt;/a&gt;機能が有効になっていない、すべての &lt;code&gt;firstInstance&lt;/code&gt; ののメンバー &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; このコマンドによってアクセスされるVkDrawIndexedIndirectCommand構造の &lt;code&gt;0&lt;/code&gt; で&lt;strong&gt;なければなりませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="1354c50e94216304305ded432a53e97614d06bc7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstance&lt;/a&gt; feature is not enabled, all the &lt;code&gt;firstInstance&lt;/code&gt; members of the &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; structures accessed by this command &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">場合&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-drawIndirectFirstInstance&quot;&gt;drawIndirectFirstInstanceの&lt;/a&gt;機能が有効になっていない、すべての &lt;code&gt;firstInstance&lt;/code&gt; ののメンバー &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; このコマンドによってアクセスされる構造体の &lt;code&gt;0&lt;/code&gt; で&lt;strong&gt;なければなりませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="8f0264df51a2711dcf38106020a288c82ca69cfb" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;dual source blending&lt;/a&gt; feature is not enabled, &lt;code&gt;dstAlphaBlendFactor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt;, or &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;、デュアルソースブレンディング&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;dstAlphaBlendFactor&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt; 、 &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt; 、 &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt; 、または &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9399ef63b292131208e0c466d2e2cd29b4caa38" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;dual source blending&lt;/a&gt; feature is not enabled, &lt;code&gt;dstColorBlendFactor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt;, or &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;、デュアルソースブレンディング&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;dstColorBlendFactor&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt; 、 &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt; 、 &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt; 、または &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="66f09929cd587a67783121ca5a46955bb490bff9" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;dual source blending&lt;/a&gt; feature is not enabled, &lt;code&gt;srcAlphaBlendFactor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt;, or &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;、デュアルソースブレンディング&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;srcAlphaBlendFactor&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt; 、 &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt; 、 &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt; 、または &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="743dc0434ed8b15c73fb865dd987f6cf1afa8bd0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;dual source blending&lt;/a&gt; feature is not enabled, &lt;code&gt;srcColorBlendFactor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt;, &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt;, or &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-dualSrcBlend&quot;&gt;、デュアルソースブレンディング&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;srcColorBlendFactor&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_BLEND_FACTOR_SRC1_COLOR&lt;/code&gt; 、 &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR&lt;/code&gt; 、 &lt;code&gt;VK_BLEND_FACTOR_SRC1_ALPHA&lt;/code&gt; 、または &lt;code&gt;VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3eecd3ac20fad078ce9999b199347a3e3e7ca857" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-fillModeNonSolid&quot;&gt;non-solid fill modes&lt;/a&gt; feature is not enabled, &lt;code&gt;polygonMode&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_POLYGON_MODE_FILL&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-fillModeNonSolid&quot;&gt;非固体フィルモードの&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;polygonMode&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_POLYGON_MODE_FILL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5c39634f095fb8b79889c60c2856a8925675e267" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;dstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;ジオメトリシェーダの&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;dstStageMask&lt;/code&gt; は&lt;strong&gt;必要があります&lt;/strong&gt;含まれていませ &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="c3f64537a90f5b9cd09adc8159ae24f62cc2fbb4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;srcStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;ジオメトリシェーダの&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;srcStageMask&lt;/code&gt; は&lt;strong&gt;必要があります&lt;/strong&gt;含まれていませ &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="11f94679d6572582496dcfcaaef787d34e434a3f" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;stage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;ジオメトリシェーダの&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;stage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_SHADER_STAGE_GEOMETRY_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2222eb78bb78f60bfacc69f4a5d07811f88c6ada" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;stageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;ジオメトリシェーダー&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;stageMask&lt;/code&gt; &lt;strong&gt;必要があります&lt;/strong&gt;含まれていませ &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="8829eaee3fa05e48052f4bcac998e1cff2909463" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;topology&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be any of &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY&lt;/code&gt;, &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY&lt;/code&gt; or &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;ジオメトリシェーダの&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;topology&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;のではない &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY&lt;/code&gt; 、 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY&lt;/code&gt; 、 &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY&lt;/code&gt; をまたは &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="2424fae2965d8ea9aec66da276ef89395741f37d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;geometry shaders&lt;/a&gt; feature is not enabled, any given element of &lt;code&gt;pWaitDstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-geometryShader&quot;&gt;ジオメトリシェーダの&lt;/a&gt;機能が有効になっていない、のいずれかの特定の要素 &lt;code&gt;pWaitDstStageMask&lt;/code&gt; が&lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="acc0990b0b710a9702f1027bde60787124f25cf6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-imageCubeArray&quot;&gt;image cubemap arrays&lt;/a&gt; feature is not enabled, &lt;code&gt;viewType&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-imageCubeArray&quot;&gt;、画像キューブマップアレイ&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;viewType&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_IMAGE_VIEW_TYPE_CUBE_ARRAY&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="642f76aea901257d2f8c127bcc400900583677f3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-independentBlend&quot;&gt;independent blending&lt;/a&gt; feature is not enabled, all elements of &lt;code&gt;pAttachments&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be identical</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-independentBlend&quot;&gt;独立したブレンディング&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;pAttachments&lt;/code&gt; のすべての要素は同一である&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="76a2a550f29516665dd2f547e5140c600dbacdcf" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;inherited queries&lt;/a&gt; feature is enabled, &lt;code&gt;queryFlags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a valid combination of &lt;a href=&quot;#VkQueryControlFlagBits&quot;&gt;VkQueryControlFlagBits&lt;/a&gt; values</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;継承されたクエリの&lt;/a&gt;機能が有効になっている、 &lt;code&gt;queryFlags&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;の有効な組み合わせで&lt;a href=&quot;#VkQueryControlFlagBits&quot;&gt;VkQueryControlFlagBitsの&lt;/a&gt;値</target>
        </trans-unit>
        <trans-unit id="40cc5527e27bed4ccb3e6f99182e68a84c7fd397" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;inherited queries&lt;/a&gt; feature is not enabled, &lt;code&gt;commandBuffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not have any queries &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;active&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;継承されたクエリ&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;commandBuffer&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;アクティブ&lt;/a&gt;なクエリを持っていては&lt;strong&gt;なりませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="e4fda0ad23fe8e80b4168f8bd91aaa802554c9f7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;inherited queries&lt;/a&gt; feature is not enabled, &lt;code&gt;occlusionQueryEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-inheritedQueries&quot;&gt;継承されたクエリ&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;occlusionQueryEnable&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;VK_FALSE&lt;/code&gt; であるがます</target>
        </trans-unit>
        <trans-unit id="8135bd89da71d581208c0179d5a77f5ee478c849" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-logicOp&quot;&gt;logic operations&lt;/a&gt; feature is not enabled, &lt;code&gt;logicOpEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-logicOp&quot;&gt;論理演算の&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;logicOpEnable&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2d92ff8a68ccbf68f3a6edbc5116d4e6898e6907" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiDrawIndirect&quot;&gt;multi-draw indirect&lt;/a&gt; feature is not enabled, &lt;code&gt;drawCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiDrawIndirect&quot;&gt;、マルチ描く間接的な&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;drawCount&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; または &lt;code&gt;1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="55d6971adae1dbde505f966300f98e01810d2ea0" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;multiple viewports&lt;/a&gt; feature is not enabled, &lt;code&gt;firstScissor&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;複数のビューポート&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;firstScissor&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;0&lt;/code&gt; で&lt;strong&gt;なければなりませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="ca06b6bc4dc7e431cf51fb6837b610da2d557d7d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;multiple viewports&lt;/a&gt; feature is not enabled, &lt;code&gt;firstViewport&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;複数のビューポート&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;firstViewport&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;0&lt;/code&gt; で&lt;strong&gt;なければなりませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="c95f8419faa39e7564e1fc7713850ebf6cb8a01e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;multiple viewports&lt;/a&gt; feature is not enabled, &lt;code&gt;scissorCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;複数のビューポート&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;scissorCount&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;1&lt;/code&gt; でん</target>
        </trans-unit>
        <trans-unit id="cbc7ca33404faeaf98946afcde84b0f5ed36de75" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;multiple viewports&lt;/a&gt; feature is not enabled, &lt;code&gt;viewportCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-multiViewport&quot;&gt;複数のビューポート&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;viewportCount&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;1&lt;/code&gt; で&lt;strong&gt;なければなりませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="49baf291469b002195a5b1676488d74ce73aff0b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-occlusionQueryPrecise&quot;&gt;precise occlusion queries&lt;/a&gt; feature is not enabled, or the &lt;code&gt;queryType&lt;/code&gt; used to create &lt;code&gt;queryPool&lt;/code&gt; was not &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_QUERY_CONTROL_PRECISE_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-occlusionQueryPrecise&quot;&gt;、正確なオクルージョンクエリの&lt;/a&gt;機能が有効になっていない、または &lt;code&gt;queryType&lt;/code&gt; 作成するために使用される &lt;code&gt;queryPool&lt;/code&gt; はありませんでした &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt; 、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_QUERY_CONTROL_PRECISE_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="ac0fb9e57efd62ce19829e3d042ceabf17eace05" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-pipelineStatisticsQuery&quot;&gt;pipeline statistics queries&lt;/a&gt; feature is not enabled, &lt;code&gt;pipelineStatistics&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-pipelineStatisticsQuery&quot;&gt;パイプラインの統計クエリ&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;pipelineStatistics&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="27ac77ecf0a40b8c619b6c439706756befd672d7" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-pipelineStatisticsQuery&quot;&gt;pipeline statistics queries&lt;/a&gt; feature is not enabled, &lt;code&gt;queryType&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-pipelineStatisticsQuery&quot;&gt;パイプラインの統計クエリ&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;queryType&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9976ffac3cde217487b7c0840f0991867d992a3a" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;robust buffer access&lt;/a&gt; feature is not enabled, and any shader stage in the &lt;code&gt;VkPipeline&lt;/code&gt; object currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; accesses a storage buffer, it &lt;strong&gt;must&lt;/strong&gt; not access values outside of the range of that buffer specified in the currently bound descriptor set</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;堅牢なバッファアクセス&lt;/a&gt;機能が有効になっていない、とのいずれかのシェーダーのステージ &lt;code&gt;VkPipeline&lt;/code&gt; の現在にバインドされたオブジェクト &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; は、蓄積バッファにアクセスし、それが&lt;strong&gt;なければならない&lt;/strong&gt;現在バインドされた記述子セットに指定されているバッファの範囲外ではないアクセス値</target>
        </trans-unit>
        <trans-unit id="c5b1897e901ec1ad8154314904868053b2bfb7df" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;robust buffer access&lt;/a&gt; feature is not enabled, and any shader stage in the &lt;code&gt;VkPipeline&lt;/code&gt; object currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; accesses a uniform buffer, it &lt;strong&gt;must&lt;/strong&gt; not access values outside of the range of that buffer specified in the currently bound descriptor set</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;堅牢なバッファアクセス&lt;/a&gt;機能が有効になっていない、とのいずれかのシェーダーのステージ &lt;code&gt;VkPipeline&lt;/code&gt; の現在にバインドされたオブジェクト &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; が均一なバッファをアクセスし、それが&lt;strong&gt;なければならない&lt;/strong&gt;現在バインドされた記述子セットに指定されているバッファの範囲外ではないアクセス値</target>
        </trans-unit>
        <trans-unit id="254463d35a32fa2db64de805248156bf3f0aade4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;robust buffer access&lt;/a&gt; feature is not enabled, and any shader stage in the &lt;code&gt;VkPipeline&lt;/code&gt; object currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; accesses a storage buffer, it &lt;strong&gt;must&lt;/strong&gt; not access values outside of the range of that buffer specified in the currently bound descriptor set</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;堅牢なバッファアクセス&lt;/a&gt;機能が有効になっていない、とのいずれかのシェーダーのステージ &lt;code&gt;VkPipeline&lt;/code&gt; の現在にバインドされたオブジェクト &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; は、蓄積バッファにアクセスし、それが&lt;strong&gt;なければならない&lt;/strong&gt;現在バインドされた記述子セットに指定されているバッファの範囲外ではないアクセス値</target>
        </trans-unit>
        <trans-unit id="93a1c0f79f8814aa2b27367e321dc7a54cf0ac35" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;robust buffer access&lt;/a&gt; feature is not enabled, and any shader stage in the &lt;code&gt;VkPipeline&lt;/code&gt; object currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; accesses a uniform buffer, it &lt;strong&gt;must&lt;/strong&gt; not access values outside of the range of that buffer specified in the currently bound descriptor set</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-robustBufferAccess&quot;&gt;堅牢なバッファアクセス&lt;/a&gt;機能が有効になっていない、とのいずれかのシェーダーのステージ &lt;code&gt;VkPipeline&lt;/code&gt; の現在にバインドされたオブジェクト &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; が均一なバッファをアクセスし、それが&lt;strong&gt;なければならない&lt;/strong&gt;現在バインドされた記述子セットに指定されているバッファの範囲外ではないアクセス値</target>
        </trans-unit>
        <trans-unit id="b6d313b54b0c268a28329b648ea0051fd9291336" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sampleRateShading&quot;&gt;sample rate shading&lt;/a&gt; feature is not enabled, &lt;code&gt;sampleShadingEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sampleRateShading&quot;&gt;、サンプルレートシェーディング&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;sampleShadingEnable&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd88a091d5f18c889fe4617022650e067e37466e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-samplerAnisotropy&quot;&gt;anisotropic sampling&lt;/a&gt; feature is not enabled, &lt;code&gt;anisotropyEnable&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_FALSE&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-samplerAnisotropy&quot;&gt;、異方性サンプリング&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;anisotropyEnable&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_FALSE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e116085a28a475b6b7b8a01b18447a02493c9ca4" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-shaderStorageImageMultisample&quot;&gt;multisampled storage images&lt;/a&gt; feature is not enabled, and &lt;code&gt;usage&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt;, &lt;code&gt;samples&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-shaderStorageImageMultisample&quot;&gt;マルチサンプリングストレージ・イメージの&lt;/a&gt;機能が有効とされていない &lt;code&gt;usage&lt;/code&gt; 含まれている &lt;code&gt;VK_IMAGE_USAGE_STORAGE_BIT&lt;/code&gt; を、 &lt;code&gt;samples&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d4710bdff50f1bfa4ea823ddfbc81d807f86a38" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseBinding&quot;&gt;sparse bindings&lt;/a&gt; feature is not enabled, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseBinding&quot;&gt;まばらなバインディング&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="ff39ea7a9f52b0403e3ff2895549297b5f56feef" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseBinding&quot;&gt;sparse bindings&lt;/a&gt; feature is not enabled, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseBinding&quot;&gt;まばらなバインディング&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="b68c26b3cce7b6902b2787419155b4b275e4605c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency16Samples&quot;&gt;sparse residency for images with 16 samples&lt;/a&gt; feature is not enabled, &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, and &lt;code&gt;samples&lt;/code&gt; is &lt;code&gt;VK_SAMPLE_COUNT_16_BIT&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency16Samples&quot;&gt;16個のサンプルの画像のためのまばらな居住&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;imageType&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、および &lt;code&gt;samples&lt;/code&gt; ある &lt;code&gt;VK_SAMPLE_COUNT_16_BIT&lt;/code&gt; 、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="ee87026f9f203addcce6784d2657f3c53fbd9e01" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency2Samples&quot;&gt;sparse residency for images with 2 samples&lt;/a&gt; feature is not enabled, &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, and &lt;code&gt;samples&lt;/code&gt; is &lt;code&gt;VK_SAMPLE_COUNT_2_BIT&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency2Samples&quot;&gt;2つのサンプルの画像のためのまばらな居住&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;imageType&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、および &lt;code&gt;samples&lt;/code&gt; ある &lt;code&gt;VK_SAMPLE_COUNT_2_BIT&lt;/code&gt; 、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="7a058c348e7d93ffee7f4b05429d9bfa6622ee3b" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency4Samples&quot;&gt;sparse residency for images with 4 samples&lt;/a&gt; feature is not enabled, &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, and &lt;code&gt;samples&lt;/code&gt; is &lt;code&gt;VK_SAMPLE_COUNT_4_BIT&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency4Samples&quot;&gt;4つのサンプルの画像のためのまばらな居住&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;imageType&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、および &lt;code&gt;samples&lt;/code&gt; ある &lt;code&gt;VK_SAMPLE_COUNT_4_BIT&lt;/code&gt; 、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="928829923b0924897ae34d6620eb28f38834533e" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency8Samples&quot;&gt;sparse residency for images with 8 samples&lt;/a&gt; feature is not enabled, &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, and &lt;code&gt;samples&lt;/code&gt; is &lt;code&gt;VK_SAMPLE_COUNT_8_BIT&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidency8Samples&quot;&gt;8つのサンプルの画像のためのまばらな居住&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;imageType&lt;/code&gt; あり &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、および &lt;code&gt;samples&lt;/code&gt; ある &lt;code&gt;VK_SAMPLE_COUNT_8_BIT&lt;/code&gt; 、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="4c8caca774f68c5bc255e8d90916b18401a2edc2" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyAliased&quot;&gt;sparse aliased residency&lt;/a&gt; feature is not enabled, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_BUFFER_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyAliased&quot;&gt;まばらなエイリアス居住&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_BUFFER_CREATE_SPARSE_ALIASED_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="abe86865e94e013dcb0b1d387383e4a801830dbe" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyAliased&quot;&gt;sparse aliased residency&lt;/a&gt; feature is not enabled, and if any other resources are bound to ranges of &lt;code&gt;memory&lt;/code&gt;, the range of &lt;code&gt;memory&lt;/code&gt; being bound &lt;strong&gt;must&lt;/strong&gt; not overlap with those bound ranges</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyAliased&quot;&gt;まばらなエイリアス居住&lt;/a&gt;機能が有効になっていない、と他のリソースがの範囲にバインドされている場合は &lt;code&gt;memory&lt;/code&gt; の範囲 &lt;code&gt;memory&lt;/code&gt; 拘束されるもので&lt;strong&gt;なければなら&lt;/strong&gt;ない重複これらのバウンドの範囲で</target>
        </trans-unit>
        <trans-unit id="777c2bc5485606611dbbf897703e99ac36f599f6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyBuffer&quot;&gt;sparse buffer residency&lt;/a&gt; feature is not enabled, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyBuffer&quot;&gt;まばらなバッファ在留&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="f113fe7cfbcdea104a60b571e967536758182d1c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyImage2D&quot;&gt;sparse residency for 2D images&lt;/a&gt; feature is not enabled, and &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyImage2D&quot;&gt;2D画像のためのまばらな居住&lt;/a&gt;機能が有効になっていない、と &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="b52ef39bb86caf8cfc0a9946ef66fc267d004f28" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyImage3D&quot;&gt;sparse residency for 3D images&lt;/a&gt; feature is not enabled, and &lt;code&gt;imageType&lt;/code&gt; is &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-sparseResidencyImage3D&quot;&gt;3D画像のためのまばらな居住&lt;/a&gt;機能が有効になっていない、と &lt;code&gt;imageType&lt;/code&gt; ある &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; 、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="12c2011bb0f0a27036433c03249d65b59a4697f5" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;dstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; or &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;テッセレーションシェーダー&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; または &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt; を含めることは &lt;code&gt;dstStageMask&lt;/code&gt; &lt;strong&gt;ませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="9de6ba9c7d0df84ae8b633875121c7b1d550263c" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;srcStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; or &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;テッセレーションシェーダー&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; または &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt; を含めることは &lt;code&gt;srcStageMask&lt;/code&gt; &lt;strong&gt;ませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="c1e6a29d44f85aeb2041108e7f79a226f043ea98" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;stage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT&lt;/code&gt; or &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT&lt;/code&gt;</source>
          <target state="translated">場合&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;テッセレーションシェーダの&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;stage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT&lt;/code&gt; または &lt;code&gt;VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="003014ad3484009e363b86365c75c24feb7bfa48" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;stageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; or &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;テッセレーションシェーダー&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; または &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt; を含めることは &lt;code&gt;stageMask&lt;/code&gt; &lt;strong&gt;ませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="79198eb82f89d22b8c5a9b967eb9889f00f07905" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, &lt;code&gt;topology&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;</source>
          <target state="translated">場合&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;テッセレーションシェーダの&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;topology&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="651b627e9edbd9fba4d7fcaa061ed73e93a1e4c3" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;tessellation shaders&lt;/a&gt; feature is not enabled, any given element of &lt;code&gt;pWaitDstStageMask&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; or &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-tessellationShader&quot;&gt;テッセレーションシェーダー&lt;/a&gt;機能が有効になっていない場合、 &lt;code&gt;pWaitDstStageMask&lt;/code&gt; の特定の要素に &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT&lt;/code&gt; または &lt;code&gt;VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT&lt;/code&gt; を含めることはでき&lt;strong&gt;ませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="543d33885af8c35c64bce4b6c18500952460bca6" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-variableMultisampleRate&quot;&gt;variable multisample rate&lt;/a&gt; feature is not supported, &lt;code&gt;pipeline&lt;/code&gt; is a graphics pipeline, the current subpass has no attachments, and this is not the first call to this function with a graphics pipeline after transitioning to the current subpass, then the sample count specified by this pipeline &lt;strong&gt;must&lt;/strong&gt; match that set in the previous pipeline</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-variableMultisampleRate&quot;&gt;可変マルチサンプルレート&lt;/a&gt;機能がサポートされていない場合、 &lt;code&gt;pipeline&lt;/code&gt; はグラフィックパイプラインであり、現在のサブパスにはアタッチメントがありません。これは、現在のサブパスへの移行後のグラフィックパイプラインによるこの関数の最初の呼び出しではなく、このパイプラインは、前のパイプラインで設定されたものと一致する&lt;strong&gt;必要があります&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7c1c7925ef357111382dbac5c793739145039c7d" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-wideLines&quot;&gt;wide lines&lt;/a&gt; feature is not enabled, &lt;code&gt;lineWidth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">場合は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features-wideLines&quot;&gt;幅の広いラインの&lt;/a&gt;機能が有効になっていない、 &lt;code&gt;lineWidth&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="058f43071b879c61f844c58982641dec0e041deb" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;VkPipeline&lt;/code&gt; object currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; requires any dynamic state, that state &lt;strong&gt;must&lt;/strong&gt; have been set on the current command buffer</source>
          <target state="translated">場合 &lt;code&gt;VkPipeline&lt;/code&gt; の現在にバインドされたオブジェクト &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; は、状態がいることを、任意の動的な状態を必要と&lt;strong&gt;しなければならない&lt;/strong&gt;現在のコマンドバッファに設定されています</target>
        </trans-unit>
        <trans-unit id="64bab4816c128dab4befd6e7e2e34b1d90450c84" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;aspectMask&lt;/code&gt; member of any given element of &lt;code&gt;pAttachments&lt;/code&gt; contains &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt;, the &lt;code&gt;colorAttachment&lt;/code&gt; member of those elements &lt;strong&gt;must&lt;/strong&gt; refer to a valid color attachment in the current subpass</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; の任意の要素のaspectMaskメンバーに &lt;code&gt;pAttachments&lt;/code&gt; が含まれている &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt; 、それらの要素の &lt;code&gt;colorAttachment&lt;/code&gt; メンバーは、現在のサブパスの有効な色の添付を参照する&lt;strong&gt;必要があり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="5221731fc27ca4fbe651ea6acc0e4a5b242f594a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;attachment&lt;/code&gt; member of any element of &lt;code&gt;pInputAttachments&lt;/code&gt;, &lt;code&gt;pColorAttachments&lt;/code&gt;, &lt;code&gt;pResolveAttachments&lt;/code&gt; or &lt;code&gt;pDepthStencilAttachment&lt;/code&gt;, or any element of &lt;code&gt;pPreserveAttachments&lt;/code&gt; in any given element of &lt;code&gt;pSubpasses&lt;/code&gt; is not &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;, it &lt;strong&gt;must&lt;/strong&gt; be less than &lt;code&gt;attachmentCount&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;attachment&lt;/code&gt; の任意の要素のメンバー &lt;code&gt;pInputAttachments&lt;/code&gt; 、 &lt;code&gt;pColorAttachments&lt;/code&gt; 、 &lt;code&gt;pResolveAttachments&lt;/code&gt; 又は &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; 、または任意の要素 &lt;code&gt;pPreserveAttachments&lt;/code&gt; の任意の要素に &lt;code&gt;pSubpasses&lt;/code&gt; がない &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt; 、それが&lt;strong&gt;なければならない&lt;/strong&gt;未満である &lt;code&gt;attachmentCount&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b18d3acdaa06d2007dfedeb9dd2ffce4f81ba23" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;attachment&lt;/code&gt; member of any element of &lt;code&gt;pInputAttachments&lt;/code&gt;, &lt;code&gt;pColorAttachments&lt;/code&gt;, &lt;code&gt;pResolveAttachments&lt;/code&gt; or &lt;code&gt;pDepthStencilAttachment&lt;/code&gt;, or the attachment indexed by any element of &lt;code&gt;pPreserveAttachments&lt;/code&gt; in any given element of &lt;code&gt;pSubpasses&lt;/code&gt; is bound to a range of a &lt;code&gt;VkDeviceMemory&lt;/code&gt; object that overlaps with any other attachment in any subpass (including the same subpass), the &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structures describing them &lt;strong&gt;must&lt;/strong&gt; include &lt;code&gt;VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT&lt;/code&gt; in &lt;code&gt;flags&lt;/code&gt;</source>
          <target state="translated">もし &lt;code&gt;attachment&lt;/code&gt; の任意の要素のメンバー &lt;code&gt;pInputAttachments&lt;/code&gt; 、 &lt;code&gt;pColorAttachments&lt;/code&gt; 、 &lt;code&gt;pResolveAttachments&lt;/code&gt; 又は &lt;code&gt;pDepthStencilAttachment&lt;/code&gt; 、または任意の要素によって索引付けアタッチメント &lt;code&gt;pPreserveAttachments&lt;/code&gt; の任意の要素に &lt;code&gt;pSubpasses&lt;/code&gt; はの範囲にバインドされ &lt;code&gt;VkDeviceMemory&lt;/code&gt; その任意subpassにおける任意の他のアタッチメントとの重なりが（オブジェクト同じサブパスを含む）、それらを記述する &lt;code&gt;VkAttachmentDescription&lt;/code&gt; 構造体は &lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT&lt;/code&gt; を含める&lt;strong&gt;必要があり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="a85f3733573f67982c06ef8869ac164641d4a2df" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;dstBinding&lt;/code&gt; has fewer than &lt;code&gt;descriptorCount&lt;/code&gt; array elements remaining starting from &lt;code&gt;dstArrayElement&lt;/code&gt;, then the remainder will be used to update the subsequent binding - &lt;code&gt;dstBinding&lt;/code&gt;+1 starting at array element zero. If a binding has a &lt;code&gt;descriptorCount&lt;/code&gt; of zero, it is skipped. This behavior applies recursively, with the update affecting consecutive bindings as needed to update all &lt;code&gt;descriptorCount&lt;/code&gt; descriptors.</source>
          <target state="translated">場合 &lt;code&gt;dstBinding&lt;/code&gt; がより少ない有する &lt;code&gt;descriptorCount&lt;/code&gt; のから始まる残りの配列要素 &lt;code&gt;dstArrayElement&lt;/code&gt; - 、その後、残りの部分は、後続のバインディング更新するために使用される &lt;code&gt;dstBinding&lt;/code&gt; +1が配列要素ゼロから始まります。バインディングの &lt;code&gt;descriptorCount&lt;/code&gt; がゼロの場合、そのバインディングはスキップされます。この動作は再帰的に適用され、更新は、必要に応じてすべての &lt;code&gt;descriptorCount&lt;/code&gt; 記述子を更新するために連続したバインディングに影響します。</target>
        </trans-unit>
        <trans-unit id="9b30366086b8ca074a7ccc4cb0efb13dbebd4066" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;dstSet&lt;/code&gt; member of any given element of &lt;code&gt;pDescriptorWrites&lt;/code&gt; or &lt;code&gt;pDescriptorCopies&lt;/code&gt; is bound, accessed, or modified by any command that was recorded to a command buffer which is currently in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;recording or executable state&lt;/a&gt;, that command buffer becomes &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;invalid&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pDescriptorWrites&lt;/code&gt; または &lt;code&gt;pDescriptorCopies&lt;/code&gt; の特定の要素の &lt;code&gt;dstSet&lt;/code&gt; メンバーが、現在&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;記録または実行可能な状態&lt;/a&gt;にあるコマンドバッファーに記録されたコマンドによってバインド、アクセス、または変更されると、そのコマンドバッファーは&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;無効に&lt;/a&gt;なります。</target>
        </trans-unit>
        <trans-unit id="3393dfa6818e1df0e7af55979bc9e3a2718ebe77" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flags&lt;/code&gt; member of &lt;code&gt;pCreateInfo&lt;/code&gt; includes &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;, creating this &lt;code&gt;VkBuffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not cause the total required sparse memory for all currently valid sparse resources on the device to exceed &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;sparseAddressSpaceSize&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;flags&lt;/code&gt; のメンバー &lt;code&gt;pCreateInfo&lt;/code&gt; が含ま &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 、この作成 &lt;code&gt;VkBuffer&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;合計が超過するデバイス上のすべての現在有効なまばらなリソースのためのスパースメモリを必要はありませ &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; を :: &lt;code&gt;sparseAddressSpaceSize&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="3b13418e7f8c7c3a44c96305f01be41cdeab9e0b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flags&lt;/code&gt; member of &lt;code&gt;pCreateInfo&lt;/code&gt; includes &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt;, creating this &lt;code&gt;VkImage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not cause the total required sparse memory for all currently valid sparse resources on the device to exceed &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;sparseAddressSpaceSize&lt;/code&gt;</source>
          <target state="translated">場合は &lt;code&gt;flags&lt;/code&gt; のメンバー &lt;code&gt;pCreateInfo&lt;/code&gt; が含ま &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; 、この作成 &lt;code&gt;VkImage&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;合計が超過するデバイス上のすべての現在有効なまばらなリソースのためのスパースメモリを必要はありませ &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; を :: &lt;code&gt;sparseAddressSpaceSize&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="467f63f021e4dbb163eeb41cc3d6996090813a54" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flags&lt;/code&gt; member of any given element of &lt;code&gt;pCreateInfos&lt;/code&gt; contains the &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; flag, and the &lt;code&gt;basePipelineIndex&lt;/code&gt; member of that same element is not &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;basePipelineIndex&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than the index into &lt;code&gt;pCreateInfos&lt;/code&gt; that corresponds to that element</source>
          <target state="translated">&lt;code&gt;pCreateInfos&lt;/code&gt; の任意の要素の &lt;code&gt;flags&lt;/code&gt; メンバーに &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; フラグが含まれ、同じ要素の &lt;code&gt;basePipelineIndex&lt;/code&gt; メンバーが &lt;code&gt;-1&lt;/code&gt; で&lt;strong&gt;ない&lt;/strong&gt;場合、 &lt;code&gt;basePipelineIndex&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、その要素に対応する &lt;code&gt;pCreateInfos&lt;/code&gt; へのインデックスより小さく&lt;strong&gt;なければなりません。&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="68c395ff3073504a29223b5980d1b3b4c3e653f6" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;flags&lt;/code&gt; member of any given element of &lt;code&gt;pCreateInfos&lt;/code&gt; contains the &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; flag, the base pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT&lt;/code&gt; flag set</source>
          <target state="translated">&lt;code&gt;pCreateInfos&lt;/code&gt; の特定の要素の &lt;code&gt;flags&lt;/code&gt; メンバーに &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; フラグが含まれている場合、ベースパイプラインは &lt;code&gt;VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT&lt;/code&gt; フラグセットを使用して作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="72f52b497ba4f01e5c7c76b04f2f0c77be248cc5" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;queryType&lt;/code&gt; of the pool is &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt; and &lt;code&gt;flags&lt;/code&gt; contains &lt;code&gt;VK_QUERY_CONTROL_PRECISE_BIT&lt;/code&gt;, an implementation &lt;strong&gt;must&lt;/strong&gt; return a result that matches the actual number of samples passed. This is described in more detail in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-occlusion&quot;&gt;Occlusion Queries&lt;/a&gt;.</source>
          <target state="translated">場合 &lt;code&gt;queryType&lt;/code&gt; プールのです &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt; と &lt;code&gt;flags&lt;/code&gt; 含まれている &lt;code&gt;VK_QUERY_CONTROL_PRECISE_BIT&lt;/code&gt; を、実装が&lt;strong&gt;しなければならない&lt;/strong&gt;渡されたサンプルの実際の数と一致する結果を返します。これについては、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-occlusion&quot;&gt;オクルージョンクエリで&lt;/a&gt;詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="8fc16055ec6d5098a39a55af925d9389814e04de" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;queryType&lt;/code&gt; used to create &lt;code&gt;queryPool&lt;/code&gt; was &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt;, the &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics operations</source>
          <target state="translated">場合 &lt;code&gt;queryType&lt;/code&gt; 作成するために使用される &lt;code&gt;queryPool&lt;/code&gt; た &lt;code&gt;VK_QUERY_TYPE_OCCLUSION&lt;/code&gt; を、 &lt;code&gt;VkCommandPool&lt;/code&gt; があること &lt;code&gt;commandBuffer&lt;/code&gt; から割り当てられた&lt;strong&gt;必須の&lt;/strong&gt;サポートグラフィックス操作</target>
        </trans-unit>
        <trans-unit id="2057c23d2f041eb5914063614bf8ee200dffb978" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;queryType&lt;/code&gt; used to create &lt;code&gt;queryPool&lt;/code&gt; was &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; and any of the &lt;code&gt;pipelineStatistics&lt;/code&gt; indicate compute operations, the &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support compute operations</source>
          <target state="translated">場合 &lt;code&gt;queryType&lt;/code&gt; 作成するために使用される &lt;code&gt;queryPool&lt;/code&gt; はし &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; はとの任意の &lt;code&gt;pipelineStatistics&lt;/code&gt; は、コンピューティングの操作を示し、 &lt;code&gt;VkCommandPool&lt;/code&gt; こと &lt;code&gt;commandBuffer&lt;/code&gt; はから割り当てられた&lt;strong&gt;必須の&lt;/strong&gt;サポートコンピューティング事業</target>
        </trans-unit>
        <trans-unit id="148d9622bbefcf3103c86a91718547300cd96a7d" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;queryType&lt;/code&gt; used to create &lt;code&gt;queryPool&lt;/code&gt; was &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; and any of the &lt;code&gt;pipelineStatistics&lt;/code&gt; indicate graphics operations, the &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics operations</source>
          <target state="translated">場合 &lt;code&gt;queryType&lt;/code&gt; 作成するために使用される &lt;code&gt;queryPool&lt;/code&gt; をした &lt;code&gt;VK_QUERY_TYPE_PIPELINE_STATISTICS&lt;/code&gt; との任意の &lt;code&gt;pipelineStatistics&lt;/code&gt; グラフィックス操作を示し、 &lt;code&gt;VkCommandPool&lt;/code&gt; こと &lt;code&gt;commandBuffer&lt;/code&gt; がから割り当てられた&lt;strong&gt;必須&lt;/strong&gt;のサポートグラフィックス操作</target>
        </trans-unit>
        <trans-unit id="65b6a57b19b5e0db26179fa2021c7e0590ae6f2e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;queryType&lt;/code&gt; used to create &lt;code&gt;queryPool&lt;/code&gt; was &lt;code&gt;VK_QUERY_TYPE_TIMESTAMP&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not contain &lt;code&gt;VK_QUERY_RESULT_PARTIAL_BIT&lt;/code&gt;</source>
          <target state="translated">場合 &lt;code&gt;queryType&lt;/code&gt; 作成するために使用される &lt;code&gt;queryPool&lt;/code&gt; がいた &lt;code&gt;VK_QUERY_TYPE_TIMESTAMP&lt;/code&gt; 、 &lt;code&gt;flags&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;含まれていませ &lt;code&gt;VK_QUERY_RESULT_PARTIAL_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="40f59cfa6de4c114163064bf3b2996abe5184a45" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; member of &lt;code&gt;pRasterizationState&lt;/code&gt; is &lt;code&gt;VK_FALSE&lt;/code&gt;, &lt;code&gt;pMultisampleState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineMultisampleStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; のメンバー &lt;code&gt;pRasterizationState&lt;/code&gt; がある &lt;code&gt;VK_FALSE&lt;/code&gt; 、 &lt;code&gt;pMultisampleState&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効なへのポインタである &lt;code&gt;VkPipelineMultisampleStateCreateInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="46033b1a6716ca3e1be34e9aee0f8fe0a0af36fd" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; member of &lt;code&gt;pRasterizationState&lt;/code&gt; is &lt;code&gt;VK_FALSE&lt;/code&gt;, &lt;code&gt;pViewportState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; のメンバー &lt;code&gt;pRasterizationState&lt;/code&gt; がある &lt;code&gt;VK_FALSE&lt;/code&gt; 、 &lt;code&gt;pViewportState&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効なへのポインタである &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="f244ad19fad3cdf035d3d03bc47c32c280ed3757" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; member of &lt;code&gt;pRasterizationState&lt;/code&gt; is &lt;code&gt;VK_FALSE&lt;/code&gt;, and &lt;code&gt;subpass&lt;/code&gt; uses a depth/stencil attachment, &lt;code&gt;pDepthStencilState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; のメンバー &lt;code&gt;pRasterizationState&lt;/code&gt; がある &lt;code&gt;VK_FALSE&lt;/code&gt; 、及び &lt;code&gt;subpass&lt;/code&gt; は深さ/ステンシルアタッチメントを使用して、 &lt;code&gt;pDepthStencilState&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;有効へのポインタである &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="d8dd793918a179bd3bfe14999cf12ffc472dbc83" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; member of &lt;code&gt;pRasterizationState&lt;/code&gt; is &lt;code&gt;VK_FALSE&lt;/code&gt;, and &lt;code&gt;subpass&lt;/code&gt; uses color attachments, &lt;code&gt;pColorBlendState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to a valid &lt;code&gt;VkPipelineColorBlendStateCreateInfo&lt;/code&gt; structure</source>
          <target state="translated">場合 &lt;code&gt;rasterizerDiscardEnable&lt;/code&gt; のメンバー &lt;code&gt;pRasterizationState&lt;/code&gt; があり &lt;code&gt;VK_FALSE&lt;/code&gt; 、そして &lt;code&gt;subpass&lt;/code&gt; は色の添付ファイルを使用して、 &lt;code&gt;pColorBlendState&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;有効なへのポインタである &lt;code&gt;VkPipelineColorBlendStateCreateInfo&lt;/code&gt; の構造</target>
        </trans-unit>
        <trans-unit id="0d7b5a8df2463c554aac8c986aaaa49d4815c2e2" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;topology&lt;/code&gt; member of &lt;code&gt;pInputAssembly&lt;/code&gt; is &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt;, &lt;code&gt;pStages&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; include tessellation shader stages</source>
          <target state="translated">場合は &lt;code&gt;topology&lt;/code&gt; のメンバー &lt;code&gt;pInputAssembly&lt;/code&gt; がある &lt;code&gt;VK_PRIMITIVE_TOPOLOGY_PATCH_LIST&lt;/code&gt; 、 &lt;code&gt;pStages&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;テッセレーションシェーダステージを含みます</target>
        </trans-unit>
        <trans-unit id="c1fffc1dd2b73a9a1bd6971ef57790e95e102ad9" translate="yes" xml:space="preserve">
          <source>If the VK_KHR_sampler_mirror_clamp_to_edge extension is not enabled, &lt;code&gt;addressModeU&lt;/code&gt;, &lt;code&gt;addressModeV&lt;/code&gt; and &lt;code&gt;addressModeW&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE&lt;/code&gt;</source>
          <target state="translated">VK_KHR_sampler_mirror_clamp_to_edge拡張機能が有効になっていない場合、 &lt;code&gt;addressModeU&lt;/code&gt; 、 &lt;code&gt;addressModeV&lt;/code&gt; 、および &lt;code&gt;addressModeW&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE&lt;/code&gt; であってはなり&lt;strong&gt;ませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="7bdb5b4920f4b2e5b0ac1c1d4a2752fec288fd51" translate="yes" xml:space="preserve">
          <source>If the allocation is scoped to the lifetime of an instance and the instance has an allocator, its allocator will be used with an allocation scope of &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE&lt;/code&gt;.</source>
          <target state="translated">割り当てのスコープがインスタンスの有効期間に設定されていて、インスタンスにアロケーターがある場合、そのアロケーターは &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE&lt;/code&gt; の割り当てスコープで使用されます。</target>
        </trans-unit>
        <trans-unit id="c2a401949e633bfe2b9e2c1bab2fbf8f1b2f3858" translate="yes" xml:space="preserve">
          <source>If the attachment uses a color format, then &lt;code&gt;loadOp&lt;/code&gt; and &lt;code&gt;storeOp&lt;/code&gt; are used, and &lt;code&gt;stencilLoadOp&lt;/code&gt; and &lt;code&gt;stencilStoreOp&lt;/code&gt; are ignored. If the format has depth and/or stencil components, &lt;code&gt;loadOp&lt;/code&gt; and &lt;code&gt;storeOp&lt;/code&gt; apply only to the depth data, while &lt;code&gt;stencilLoadOp&lt;/code&gt; and &lt;code&gt;stencilStoreOp&lt;/code&gt; define how the stencil data is handled. &lt;code&gt;loadOp&lt;/code&gt; and &lt;code&gt;stencilLoadOp&lt;/code&gt; define the &lt;em&gt;load operations&lt;/em&gt; that execute as part of the first subpass that uses the attachment. &lt;code&gt;storeOp&lt;/code&gt; and &lt;code&gt;stencilStoreOp&lt;/code&gt; define the &lt;em&gt;store operations&lt;/em&gt; that execute as part of the last subpass that uses the attachment.</source>
          <target state="translated">添付ファイルがカラー形式を使用する場合、 &lt;code&gt;loadOp&lt;/code&gt; と &lt;code&gt;storeOp&lt;/code&gt; が使用され、 &lt;code&gt;stencilLoadOp&lt;/code&gt; と &lt;code&gt;stencilStoreOp&lt;/code&gt; は無視されます。フォーマットに深度および/またはステンシルコンポーネントがある場合、 &lt;code&gt;loadOp&lt;/code&gt; および &lt;code&gt;storeOp&lt;/code&gt; は深度データにのみ適用され、 &lt;code&gt;stencilLoadOp&lt;/code&gt; および &lt;code&gt;stencilStoreOp&lt;/code&gt; はステンシルデータの処理方法を定義します。 &lt;code&gt;loadOp&lt;/code&gt; と &lt;code&gt;stencilLoadOp&lt;/code&gt; は、アタッチメントを使用する最初のサブパスの一部として実行される&lt;em&gt;ロード操作&lt;/em&gt;を定義し&lt;em&gt;ます&lt;/em&gt;。 &lt;code&gt;storeOp&lt;/code&gt; と &lt;code&gt;stencilStoreOp&lt;/code&gt; は&lt;em&gt;ストア操作を&lt;/em&gt;定義します&lt;em&gt;&lt;/em&gt; アタッチメントを使用する最後のサブパスの一部として実行されます。</target>
        </trans-unit>
        <trans-unit id="9d6d883eddd92b58ec8f36f24493c1ab7858954f" translate="yes" xml:space="preserve">
          <source>If the bound pipeline state object was not created with the &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; dynamic state enabled, viewport transformation parameters are specified using the &lt;code&gt;pViewports&lt;/code&gt; member of &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; in the pipeline state object. If the pipeline state object was created with the &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; dynamic state enabled, the viewport transformation parameters are dynamically set and changed with the command:</source>
          <target state="translated">バインドされたパイプライン状態オブジェクトが &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; 動的状態を有効にして作成されなかった場合、ビューポート変換パラメーターは、パイプライン状態オブジェクトの &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; の &lt;code&gt;pViewports&lt;/code&gt; メンバーを使用して指定されます。パイプライン状態オブジェクトが &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; 動的状態を有効にして作成された場合、ビューポート変換パラメーターは次のコマンドで動的に設定および変更されます。</target>
        </trans-unit>
        <trans-unit id="591c0ea04c37d0a378da3e0f4b1b8881bfb6bd53" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;bufferImageHeight&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block height</source>
          <target state="translated">呼び出しコマンドの &lt;code&gt;VkImage&lt;/code&gt; パラメータが圧縮形式の画像である場合、 &lt;code&gt;bufferImageHeight&lt;/code&gt; は圧縮テクセルブロックの高さの倍数である&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="60d7aa1073a5fe011b61e825245ccd4b45b3ea42" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;bufferOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block size in bytes</source>
          <target state="translated">呼び出しコマンドの &lt;code&gt;VkImage&lt;/code&gt; パラメータが圧縮形式の画像の場合、 &lt;code&gt;bufferOffset&lt;/code&gt; はバイト単位の圧縮テクセルブロックサイズの倍数である&lt;strong&gt;必要&lt;/strong&gt;があります</target>
        </trans-unit>
        <trans-unit id="1af2c2aee14bad79e1c61088e87b2afb3770a91c" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;bufferRowLength&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block width</source>
          <target state="translated">呼び出しコマンドの &lt;code&gt;VkImage&lt;/code&gt; パラメータが圧縮形式の画像である場合、 &lt;code&gt;bufferRowLength&lt;/code&gt; は圧縮テクセルブロック幅の倍数である&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="23701ab6c6205224ba990c32877dd814689c4dc1" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;imageExtent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block depth or (&lt;code&gt;imageExtent.depth&lt;/code&gt; + &lt;code&gt;imageOffset.z&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the image subresource depth</source>
          <target state="translated">呼び出しコマンドの場合 &lt;code&gt;VkImage&lt;/code&gt; のパラメータは、圧縮形式の画像であり、 &lt;code&gt;imageExtent.depth&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;圧縮テクセルブロック深さの倍数であるか（ &lt;code&gt;imageExtent.depth&lt;/code&gt; + &lt;code&gt;imageOffset.z&lt;/code&gt; ）&lt;strong&gt;しなければならない&lt;/strong&gt;画像のサブリソースの深さに等しいです</target>
        </trans-unit>
        <trans-unit id="1e626badebf41bf554c7b43f0faeba14f8d2b44f" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;imageExtent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block height or (&lt;code&gt;imageExtent.height&lt;/code&gt; + &lt;code&gt;imageOffset.y&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the image subresource height</source>
          <target state="translated">呼び出しコマンドの場合 &lt;code&gt;VkImage&lt;/code&gt; のパラメータは、圧縮形式の画像であり、 &lt;code&gt;imageExtent.height&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;圧縮テクセルブロック高さの倍数であるか（ &lt;code&gt;imageExtent.height&lt;/code&gt; + &lt;code&gt;imageOffset.y&lt;/code&gt; ）&lt;strong&gt;しなければならない&lt;/strong&gt;画像のサブリソースの高さに等しいです</target>
        </trans-unit>
        <trans-unit id="703e95163a04ae17f7ba38ce1ba6a00d6de9dbc4" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, &lt;code&gt;imageExtent.width&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block width or (&lt;code&gt;imageExtent.width&lt;/code&gt; + &lt;code&gt;imageOffset.x&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the image subresource width</source>
          <target state="translated">呼び出しコマンドの場合 &lt;code&gt;VkImage&lt;/code&gt; のパラメータは、圧縮形式の画像であり、 &lt;code&gt;imageExtent.width&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;圧縮テクセルブロック幅の倍数であるか（ &lt;code&gt;imageExtent.width&lt;/code&gt; + &lt;code&gt;imageOffset.x&lt;/code&gt; ）&lt;strong&gt;しなければならない&lt;/strong&gt;画像のサブリソースの幅に等しいです</target>
        </trans-unit>
        <trans-unit id="4a03cf2147807d4604496760d90135e2b39c629c" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is a compressed format image, all members of &lt;code&gt;imageOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the corresponding dimensions of the compressed texel block</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;VkImage&lt;/code&gt; のパラメータは、圧縮形式の画像で、すべてのメンバー &lt;code&gt;imageOffset&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;圧縮テクセルブロックの対応する寸法の倍数であります</target>
        </trans-unit>
        <trans-unit id="686c38f80d660b5dcfdb4a0e83ba3d3533a27a14" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter is of &lt;a href=&quot;#VkImageType&quot;&gt;VkImageType&lt;/a&gt;&lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt;, the &lt;code&gt;baseArrayLayer&lt;/code&gt; and &lt;code&gt;layerCount&lt;/code&gt; members of &lt;code&gt;imageSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;, respectively</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;VkImage&lt;/code&gt; のパラメータがあるの&lt;a href=&quot;#VkImageType&quot;&gt;VkImageType &lt;/a&gt; &lt;code&gt;VK_IMAGE_TYPE_3D&lt;/code&gt; 、 &lt;code&gt;baseArrayLayer&lt;/code&gt; と &lt;code&gt;layerCount&lt;/code&gt; のメンバー &lt;code&gt;imageSubresource&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;1&lt;/code&gt; をそれぞれ、</target>
        </trans-unit>
        <trans-unit id="f55f5338587eabd6cd16d07e867c7ca1537fbe5c" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block depth or (&lt;code&gt;extent.depth&lt;/code&gt; + &lt;code&gt;dstOffset.z&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the destination image subresource depth</source>
          <target state="translated">呼び出しコマンドの場合 &lt;code&gt;dstImage&lt;/code&gt; は、圧縮形式の画像であり、 &lt;code&gt;extent.depth&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;圧縮テクセルブロック深さの倍数であるか（ &lt;code&gt;extent.depth&lt;/code&gt; + &lt;code&gt;dstOffset.z&lt;/code&gt; ）&lt;strong&gt;しなければならない&lt;/strong&gt;宛先画像サブリソースの深さに等しいです</target>
        </trans-unit>
        <trans-unit id="b28c87379364451f3b36fd916fb19672798e576b" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block height or (&lt;code&gt;extent.height&lt;/code&gt; + &lt;code&gt;dstOffset.y&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the destination image subresource height</source>
          <target state="translated">呼び出しコマンドの場合 &lt;code&gt;dstImage&lt;/code&gt; は、圧縮形式の画像であり、 &lt;code&gt;extent.height&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;圧縮テクセルブロック高さの倍数であるか（ &lt;code&gt;extent.height&lt;/code&gt; + &lt;code&gt;dstOffset.y&lt;/code&gt; ）&lt;strong&gt;必要があり&lt;/strong&gt;、宛先画像のサブリソースの高さに等しいです</target>
        </trans-unit>
        <trans-unit id="558f4178cb281a334328854e8fe68b57bca8675b" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.width&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block width or (&lt;code&gt;extent.width&lt;/code&gt; + &lt;code&gt;dstOffset.x&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the destination image subresource width</source>
          <target state="translated">呼び出しコマンドの場合 &lt;code&gt;dstImage&lt;/code&gt; は、圧縮形式の画像であり、 &lt;code&gt;extent.width&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;圧縮テクセルブロック幅の倍数であるか（ &lt;code&gt;extent.width&lt;/code&gt; + &lt;code&gt;dstOffset.x&lt;/code&gt; ）&lt;strong&gt;しなければならない&lt;/strong&gt;宛先画像サブリソースの幅に等しく</target>
        </trans-unit>
        <trans-unit id="37257d546c948d2d9c18e6a044099d7f80698167" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is a compressed format image, all members of &lt;code&gt;dstOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the corresponding dimensions of the compressed texel block</source>
          <target state="translated">呼び出しコマンドの &lt;code&gt;dstImage&lt;/code&gt; が圧縮形式の画像である場合、 &lt;code&gt;dstOffset&lt;/code&gt; のすべてのメンバーは、圧縮テクセルブロックの対応する次元の倍数で&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9455a7d009d517ac3180616cfaad8477dd105ad" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, then &lt;code&gt;dstOffset.z&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;dstImage&lt;/code&gt; は型である &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; または &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、そして &lt;code&gt;dstOffset.z&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;extent.depth&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="44c28b8ea4e4d17994c48d3100770ed83bc9bd50" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, then &lt;code&gt;dstOffset&lt;/code&gt;[0].z &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;dstOffset&lt;/code&gt;[1].z &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;dstImage&lt;/code&gt; は型である &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; または &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、その後、 &lt;code&gt;dstOffset&lt;/code&gt; コピー [0] .Zは&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;dstOffset&lt;/code&gt; コピー [1] .Z &lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e40041487982469956890c22c93b0a6084dee44e" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, then &lt;code&gt;dstOffset.y&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;dstImage&lt;/code&gt; は型である &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 、そして &lt;code&gt;dstOffset.y&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;extent.height&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7fa06638e6154a12f148b5e22df2be92e83ae0ee" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, then &lt;code&gt;dstOffset&lt;/code&gt;[0].y &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;dstOffset&lt;/code&gt;[1].y &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">呼び出しコマンドの &lt;code&gt;dstImage&lt;/code&gt; のタイプが &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; の場合、 &lt;code&gt;dstOffset&lt;/code&gt; [0] .y &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;0&lt;/code&gt; で&lt;strong&gt;なければなら&lt;/strong&gt;ず、 &lt;code&gt;dstOffset&lt;/code&gt; [1] .y &lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;1&lt;/code&gt; で&lt;strong&gt;なければなりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="ecae3faffc478a83471ae040ebc177c4aac060ab" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; (&lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;) or &lt;code&gt;dstImage&lt;/code&gt; (&lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;) is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, then &lt;code&gt;imageOffset.z&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;imageExtent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;srcImage&lt;/code&gt; （&lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;）または &lt;code&gt;dstImage&lt;/code&gt; （&lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImageが&lt;/a&gt;）型である &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; または &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、そして &lt;code&gt;imageOffset.z&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;imageExtent.depth&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="160bca763ff6693059f878b1712333bd87ccb2dc" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; (&lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;) or &lt;code&gt;dstImage&lt;/code&gt; (&lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImage&lt;/a&gt;) is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, then &lt;code&gt;imageOffset.y&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;imageExtent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;srcImage&lt;/code&gt; （&lt;a href=&quot;#vkCmdCopyImageToBuffer&quot;&gt;vkCmdCopyImageToBuffer&lt;/a&gt;）または &lt;code&gt;dstImage&lt;/code&gt; （&lt;a href=&quot;#vkCmdCopyBufferToImage&quot;&gt;vkCmdCopyBufferToImageが&lt;/a&gt;）型である &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 、そして &lt;code&gt;imageOffset.y&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;imageExtent.height&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5567e2b0f4a76520483994e2358ab39b4b54c554" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block depth or (&lt;code&gt;extent.depth&lt;/code&gt; + &lt;code&gt;srcOffset.z&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the source image subresource depth</source>
          <target state="translated">呼び出しコマンドの場合 &lt;code&gt;srcImage&lt;/code&gt; は、圧縮形式の画像であり、 &lt;code&gt;extent.depth&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;圧縮テクセルブロック深さの倍数であるか（ &lt;code&gt;extent.depth&lt;/code&gt; + &lt;code&gt;srcOffset.z&lt;/code&gt; ）&lt;strong&gt;必要があり&lt;/strong&gt;、ソース画像のサブリソースの深さに等しいです</target>
        </trans-unit>
        <trans-unit id="08826b9a0454d1444b02409ba43dc97bf6518f35" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block height or (&lt;code&gt;extent.height&lt;/code&gt; + &lt;code&gt;srcOffset.y&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the source image subresource height</source>
          <target state="translated">呼び出しコマンドの場合 &lt;code&gt;srcImage&lt;/code&gt; は、圧縮形式の画像であり、 &lt;code&gt;extent.height&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;圧縮テクセルブロック高さの倍数であるか（ &lt;code&gt;extent.height&lt;/code&gt; + &lt;code&gt;srcOffset.y&lt;/code&gt; ）&lt;strong&gt;必要があり&lt;/strong&gt;、ソース画像のサブリソースの高さに等しいです</target>
        </trans-unit>
        <trans-unit id="8f1e1cbfa4f41d360486748ed78ba7ac901ed3a0" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is a compressed format image, &lt;code&gt;extent.width&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the compressed texel block width or (&lt;code&gt;extent.width&lt;/code&gt; + &lt;code&gt;srcOffset.x&lt;/code&gt;) &lt;strong&gt;must&lt;/strong&gt; equal the source image subresource width</source>
          <target state="translated">呼び出しコマンドの場合 &lt;code&gt;srcImage&lt;/code&gt; は、圧縮形式の画像であり、 &lt;code&gt;extent.width&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;圧縮テクセルブロック幅の倍数であるか（ &lt;code&gt;extent.width&lt;/code&gt; + &lt;code&gt;srcOffset.x&lt;/code&gt; ）&lt;strong&gt;必要があり&lt;/strong&gt;、ソース画像のサブリソースの幅に等しいです</target>
        </trans-unit>
        <trans-unit id="369bd7459e6f62e7684e73ccb2fd8bd92139e025" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is a compressed format image, all members of &lt;code&gt;srcOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the corresponding dimensions of the compressed texel block</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;srcImage&lt;/code&gt; は、圧縮形式の画像で、すべてのメンバー &lt;code&gt;srcOffset&lt;/code&gt; が&lt;strong&gt;しなければならない&lt;/strong&gt;圧縮テクセルブロックの対応する寸法の倍数であります</target>
        </trans-unit>
        <trans-unit id="f5c9232a301c3208501435016df280b93d724335" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, then &lt;code&gt;srcOffset.z&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;extent.depth&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;srcImage&lt;/code&gt; は型である &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; または &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、そして &lt;code&gt;srcOffset.z&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;extent.depth&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="432e50e60947120bfd350d7c26390b4e0b405c30" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt;, then &lt;code&gt;srcOffset&lt;/code&gt;[0].z &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;srcOffset&lt;/code&gt;[1].z &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;srcImage&lt;/code&gt; は型である &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; または &lt;code&gt;VK_IMAGE_TYPE_2D&lt;/code&gt; 、その後、 &lt;code&gt;srcOffset&lt;/code&gt; [0] .Z &lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;srcOffset&lt;/code&gt; [1] .Zは&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ee19b183d3171b3939afe3de9df8ca8befd003a5" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, then &lt;code&gt;srcOffset.y&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;extent.height&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;srcImage&lt;/code&gt; は型である &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 、そして &lt;code&gt;srcOffset.y&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;extent.height&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="405058af1517bb50ac0495c0c8bd96aab7a71553" translate="yes" xml:space="preserve">
          <source>If the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt; is of type &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;, then &lt;code&gt;srcOffset&lt;/code&gt;[0].y &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;srcOffset&lt;/code&gt;[1].y &lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">呼び出すコマンドの場合 &lt;code&gt;srcImage&lt;/code&gt; は型である &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 、その後、 &lt;code&gt;srcOffset&lt;/code&gt; [0] .Yは&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;0&lt;/code&gt; と &lt;code&gt;srcOffset&lt;/code&gt; [1] .Yは&lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;1&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf4a55559aa630c9aa682af6666bb5a7a055ab92" translate="yes" xml:space="preserve">
          <source>If the color attachment is fixed-point, the components of the source and destination values and blend factors are each clamped to [0,1] or [-1,1] respectively for an unsigned normalized or signed normalized color attachment prior to evaluating the blend operations. If the color attachment is floating-point, no clamping occurs.</source>
          <target state="translated">カラーアタッチが固定小数点の場合、ブレンド操作を評価する前に、ソース値とデスティネーション値の成分とブレンド係数は、符号なし正規化カラーアタッチまたは符号付き正規化カラーアタッチに対して、それぞれ[0,1]または[-1,1]にクランプされます。色添付が浮動小数点の場合は、 ク ラ ン プは発生しません。</target>
        </trans-unit>
        <trans-unit id="2f123ea92e7fe5a38a517ad65da6cc63a69b952d" translate="yes" xml:space="preserve">
          <source>If the combination of parameters to &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; is not supported by the implementation for use in &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;, then all members of &lt;code&gt;VkImageFormatProperties&lt;/code&gt; will be filled with zero.</source>
          <target state="translated">パラメータの組み合わせた場合 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; がで使用するための実装によってサポートされていない&lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;、その後のすべてのメンバー &lt;code&gt;VkImageFormatProperties&lt;/code&gt; はゼロで埋められます。</target>
        </trans-unit>
        <trans-unit id="17d3fe4116924c0d1ab46071ae6259b22aa06281" translate="yes" xml:space="preserve">
          <source>If the command buffer is a secondary command buffer, then the &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt; structure defines any state that will be inherited from the primary command buffer:</source>
          <target state="translated">コマンドバッファーがセカンダリコマンドバッファーの場合、 &lt;code&gt;VkCommandBufferInheritanceInfo&lt;/code&gt; 構造体は、プライマリコマンドバッファーから継承される状態を定義します。</target>
        </trans-unit>
        <trans-unit id="7fbdc6a1bf61a0b220886f009d0fcdac7f7ff364" translate="yes" xml:space="preserve">
          <source>If the condition is satisfied when &lt;code&gt;vkWaitForFences&lt;/code&gt; is called, then &lt;code&gt;vkWaitForFences&lt;/code&gt; returns immediately. If the condition is not satisfied at the time &lt;code&gt;vkWaitForFences&lt;/code&gt; is called, then &lt;code&gt;vkWaitForFences&lt;/code&gt; will block and wait up to &lt;code&gt;timeout&lt;/code&gt; nanoseconds for the condition to become satisfied.</source>
          <target state="translated">&lt;code&gt;vkWaitForFences&lt;/code&gt; が呼び出されたときに条件が満たされた場合、 &lt;code&gt;vkWaitForFences&lt;/code&gt; はすぐに戻ります。 &lt;code&gt;vkWaitForFences&lt;/code&gt; が呼び出されたときに条件が満たされていない場合、 &lt;code&gt;vkWaitForFences&lt;/code&gt; はブロックし、条件が満たされるまで &lt;code&gt;timeout&lt;/code&gt; ナノ秒待機します。</target>
        </trans-unit>
        <trans-unit id="0907f380eda9db7f403dfa3058b160282a70609c" translate="yes" xml:space="preserve">
          <source>If the depth bias clamping feature is not enabled, no element of the &lt;code&gt;pDynamicStates&lt;/code&gt; member of &lt;code&gt;pDynamicState&lt;/code&gt; is &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BIAS&lt;/code&gt;, and the &lt;code&gt;depthBiasEnable&lt;/code&gt; member of &lt;code&gt;pDepthStencil&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, the &lt;code&gt;depthBiasClamp&lt;/code&gt; member of &lt;code&gt;pDepthStencil&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;0.0&lt;/code&gt;</source>
          <target state="translated">深度バイアスクランプ機能が有効になっていない場合、何の要素 &lt;code&gt;pDynamicStates&lt;/code&gt; のメンバー &lt;code&gt;pDynamicState&lt;/code&gt; はしない &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BIAS&lt;/code&gt; 、及び &lt;code&gt;depthBiasEnable&lt;/code&gt; のメンバー &lt;code&gt;pDepthStencil&lt;/code&gt; がある &lt;code&gt;VK_TRUE&lt;/code&gt; 、 &lt;code&gt;depthBiasClamp&lt;/code&gt; のメンバー &lt;code&gt;pDepthStencil&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;ことが &lt;code&gt;0.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f058a2a2aa22a20c91a022522aadf832544f9fe0" translate="yes" xml:space="preserve">
          <source>If the device has been lost (see &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;Lost Device&lt;/a&gt;), &lt;code&gt;vkGetFenceStatus&lt;/code&gt;&lt;strong&gt;may&lt;/strong&gt; return any of the above status codes. If the device has been lost and &lt;code&gt;vkGetFenceStatus&lt;/code&gt; is called repeatedly, it will eventually return either &lt;code&gt;VK_SUCCESS&lt;/code&gt; or &lt;code&gt;VK_DEVICE_LOST&lt;/code&gt;.</source>
          <target state="translated">デバイスが紛失した場合（&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;デバイスの&lt;/a&gt;紛失を参照）、 &lt;code&gt;vkGetFenceStatus&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;上記のステータスコードのいずれかを返すことがあります。デバイスが失われ、 &lt;code&gt;vkGetFenceStatus&lt;/code&gt; が繰り返し呼び出された場合、最終的に &lt;code&gt;VK_SUCCESS&lt;/code&gt; または &lt;code&gt;VK_DEVICE_LOST&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="d01918c259e473d8f1cb2dc1b35329a5203ed530" translate="yes" xml:space="preserve">
          <source>If the first use of an attachment in this render pass is as an input attachment, and the attachment is not also used as a color or depth/stencil attachment in the same subpass, then &lt;code&gt;loadOp&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_ATTACHMENT_LOAD_OP_CLEAR&lt;/code&gt;</source>
          <target state="translated">このレンダーパスでのアタッチメントの最初の使用が入力アタッチメントであり、アタッチメントが同じサブパスで色または深度/ステンシルアタッチメントとしても使用されていない場合、 &lt;code&gt;loadOp&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;VK_ATTACHMENT_LOAD_OP_CLEARであって&lt;strong&gt;はなり&lt;/strong&gt;ません &lt;code&gt;VK_ATTACHMENT_LOAD_OP_CLEAR&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8f56bb7fcfdd8706662318cb4c950eb165576478" translate="yes" xml:space="preserve">
          <source>If the format being queried is a depth/stencil format, this bit only indicates that the depth aspect (not the stencil aspect) of an image of this format supports linear filtering, and that linear filtering of the depth aspect is supported whether depth compare is enabled in the sampler or not. If this bit is not present, linear filtering with depth compare disabled is unsupported and linear filtering with depth compare enabled is supported, but &lt;strong&gt;may&lt;/strong&gt; compute the filtered value in an implementation-dependent manner which differs from the normal rules of linear filtering. The resulting value &lt;strong&gt;must&lt;/strong&gt; be in the range [0,1] and &lt;strong&gt;should&lt;/strong&gt; be proportional to, or a weighted average of, the number of comparison passes or failures.</source>
          <target state="translated">照会されるフォーマットが深度/ステンシルフォーマットである場合、このビットは、このフォーマットの画像の深度アスペクト（ステンシルアスペクトではない）が線形フィルタリングをサポートし、深度比較の有無にかかわらず深度アスペクトの線形フィルタリングがサポートされることを示すだけです。サンプラーで有効かどうか。このビットが存在しない場合、深度比較を無効にした線形フィルタリングはサポートされず、深度比較を有効にした線形フィルタリングはサポートされますが、線形フィルタリングの通常のルールとは異なる実装依存の方法でフィルター値を計算する&lt;strong&gt;場合&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。得られた値が&lt;strong&gt;なければならない&lt;/strong&gt;範囲[0,1]にあると&lt;strong&gt;すべきである&lt;/strong&gt;に比例する、または比較パスまたは失敗の数、の加重平均です。</target>
        </trans-unit>
        <trans-unit id="6d2bbc4ce5ee19f1e6fef23c05c140fc65281314" translate="yes" xml:space="preserve">
          <source>If the format of the image corresponding to the parameters is one of the block-compressed formats then for the purposes of the above calculations the granularity &lt;strong&gt;must&lt;/strong&gt; be scaled up by the compressed texel block dimensions.</source>
          <target state="translated">パラメータに対応する画像の形式がブロック圧縮形式の1つである場合、上記の計算の目的で、圧縮テクセルブロックの次元によって粒度を拡大する&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="708689f31f433200b206ca7c5c602da099057268" translate="yes" xml:space="preserve">
          <source>If the identified entry point includes any variable in its interface that is declared with the &lt;code&gt;ClipDistance&lt;/code&gt;&lt;code&gt;BuiltIn&lt;/code&gt; decoration, that variable &lt;strong&gt;must&lt;/strong&gt; not have an array size greater than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxClipDistances&lt;/code&gt;</source>
          <target state="translated">識別されたエントリポイントに、 &lt;code&gt;ClipDistance&lt;/code&gt; &lt;code&gt;BuiltIn&lt;/code&gt; デコレーションで宣言されているインターフェイスの変数が含まれている場合、その変数の配列サイズは &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxClipDistances&lt;/code&gt; より大きくては&lt;strong&gt;なりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="10f138f46b9b8fbb350a345ea32606783ac97570" translate="yes" xml:space="preserve">
          <source>If the identified entry point includes any variable in its interface that is declared with the &lt;code&gt;CullDistance&lt;/code&gt;&lt;code&gt;BuiltIn&lt;/code&gt; decoration, that variable &lt;strong&gt;must&lt;/strong&gt; not have an array size greater than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxCullDistances&lt;/code&gt;</source>
          <target state="translated">識別されたエントリポイントに、 &lt;code&gt;CullDistance&lt;/code&gt; &lt;code&gt;BuiltIn&lt;/code&gt; デコレーションで宣言されたインターフェイス内の変数が含まれている場合、その変数の配列サイズは &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxCullDistances&lt;/code&gt; を超えては&lt;strong&gt;なりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="2f519428d547e30a00af217f6928edd99475c0fc" translate="yes" xml:space="preserve">
          <source>If the identified entry point includes any variable in its interface that is declared with the &lt;code&gt;SampleMask&lt;/code&gt;&lt;code&gt;BuiltIn&lt;/code&gt; decoration, that variable &lt;strong&gt;must&lt;/strong&gt; not have an array size greater than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxSampleMaskWords&lt;/code&gt;</source>
          <target state="translated">識別されたエントリ・ポイントを使用して宣言され、そのインタフェースにおける任意の変数が含まれている場合 &lt;code&gt;SampleMask&lt;/code&gt; &lt;code&gt;BuiltIn&lt;/code&gt; 装飾を、その変数は&lt;strong&gt;しなければならない&lt;/strong&gt;よりも、アレイのサイズも大きくありませ &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxSampleMaskWords&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="5cf5b4cb98b9fe266905a4f2e86c2917aa4b8f13" translate="yes" xml:space="preserve">
          <source>If the identified entry point includes any variables in its interface that are declared with the &lt;code&gt;ClipDistance&lt;/code&gt; or &lt;code&gt;CullDistance&lt;/code&gt;&lt;code&gt;BuiltIn&lt;/code&gt; decoration, those variables &lt;strong&gt;must&lt;/strong&gt; not have array sizes which sum to more than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxCombinedClipAndCullDistances&lt;/code&gt;</source>
          <target state="translated">識別されたエントリポイントに、 &lt;code&gt;ClipDistance&lt;/code&gt; または &lt;code&gt;CullDistance&lt;/code&gt; &lt;code&gt;BuiltIn&lt;/code&gt; デコレーションで宣言されたインターフェイスの変数が含まれている場合、それらの変数&lt;strong&gt;は&lt;/strong&gt;、合計が &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxCombinedClipAndCullDistances&lt;/code&gt; を超える配列サイズであっては&lt;strong&gt;なりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="ed706c543a884fdff902df4b0c356594632cf44f" translate="yes" xml:space="preserve">
          <source>If the image has more than one sample, the same value is written to all samples for any pixels being cleared.</source>
          <target state="translated">画像に複数のサンプルがある場合は、クリアされたピクセルのすべてのサンプルに同じ値が書き込まれます。</target>
        </trans-unit>
        <trans-unit id="d2f83731eb00d7a5a5dafcb9e34360bb94fe469b" translate="yes" xml:space="preserve">
          <source>If the image was not created with &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; then &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; will be set to zero and &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; will not be written to.</source>
          <target state="translated">画像を使用して作成されていない場合は &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; 、その後 &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; はゼロに設定され、 &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; はに書き込まれません。</target>
        </trans-unit>
        <trans-unit id="94874d7411130a1cc5b254dc2cce99a51d64ba63" translate="yes" xml:space="preserve">
          <source>If the implementation is able to continue correct processing of the current command without the requested allocation, then it &lt;strong&gt;may&lt;/strong&gt; do so, and &lt;strong&gt;must&lt;/strong&gt; not generate &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; as a result of this failed allocation.</source>
          <target state="translated">実装が要求された割り当てなしで現在のコマンドの正しい処理を続行できる場合、それ&lt;strong&gt;は可能で&lt;/strong&gt;あり、この失敗した割り当ての結果として &lt;code&gt;VK_ERROR_OUT_OF_HOST_MEMORY&lt;/code&gt; を生成してはなり&lt;strong&gt;ませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="88ba7c7344f17960f0ca2d73eb06020e7abe1e28" translate="yes" xml:space="preserve">
          <source>If the memory object does have the &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; property flag, writes to the memory object from the host are automatically made visible to the &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;access type&lt;/a&gt;. Similarly, writes made visible to the &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;access type&lt;/a&gt; are automatically made visible to the host.</source>
          <target state="translated">メモリオブジェクトに &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; プロパティフラグがある場合、ホストからのメモリオブジェクトへの書き込みは、 &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;アクセスタイプで&lt;/a&gt;自動的に認識されます。同様に、 &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt; &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-types&quot;&gt;アクセスタイプに&lt;/a&gt;可視化された書き込みは、ホストに自動的に可視化されます。</target>
        </trans-unit>
        <trans-unit id="1394c86c935c7f455dfbfe34cea1bee8811c6136" translate="yes" xml:space="preserve">
          <source>If the pipeline state object is created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK&lt;/code&gt; dynamic state enabled, then to dynamically set the stencil compare mask call:</source>
          <target state="translated">パイプライン状態オブジェクトが &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK&lt;/code&gt; 動的状態を有効にして作成されている場合、ステンシル比較マスク呼び出しを動的に設定するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="3bd8608fd4f878f9931bb51353a0401c875a6309" translate="yes" xml:space="preserve">
          <source>If the pipeline state object is created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_REFERENCE&lt;/code&gt; dynamic state enabled, then to dynamically set the stencil reference value call:</source>
          <target state="translated">&lt;code&gt;VK_DYNAMIC_STATE_STENCIL_REFERENCE&lt;/code&gt; 動的状態を有効にしてパイプライン状態オブジェクトを作成する場合、ステンシル参照値の呼び出しを動的に設定するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="8b2e875072383c99541d763643de36cdede794b5" translate="yes" xml:space="preserve">
          <source>If the pipeline state object is created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_WRITE_MASK&lt;/code&gt; dynamic state enabled, then to dynamically set the stencil write mask call:</source>
          <target state="translated">パイプライン状態オブジェクトが &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_WRITE_MASK&lt;/code&gt; 動的状態を有効にして作成されている場合、ステンシル書き込みマスク呼び出しを動的に設定するには：</target>
        </trans-unit>
        <trans-unit id="21513b189f372be2a856b4bedd845527e56c317e" translate="yes" xml:space="preserve">
          <source>If the specified timeout period expires before the condition is satisfied, &lt;code&gt;vkWaitForFences&lt;/code&gt; returns &lt;code&gt;VK_TIMEOUT&lt;/code&gt;. If the condition is satisfied before &lt;code&gt;timeout&lt;/code&gt; nanoseconds has expired, &lt;code&gt;vkWaitForFences&lt;/code&gt; returns &lt;code&gt;VK_SUCCESS&lt;/code&gt;.</source>
          <target state="translated">条件が満たされる前に指定されたタイムアウト期間が満了すると、 &lt;code&gt;vkWaitForFences&lt;/code&gt; は &lt;code&gt;VK_TIMEOUT&lt;/code&gt; を返します。 &lt;code&gt;timeout&lt;/code&gt; ナノ秒が経過する前に条件が満たされた場合、 &lt;code&gt;vkWaitForFences&lt;/code&gt; は &lt;code&gt;VK_SUCCESS&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="d8b7d3c4890171f8822925870249ee5722f9b96f" translate="yes" xml:space="preserve">
          <source>If the stencil test fails, the sample&amp;rsquo;s coverage bit is cleared in the fragment. If there is no stencil framebuffer attachment, stencil modification &lt;strong&gt;cannot&lt;/strong&gt; occur, and it is as if the stencil tests always pass.</source>
          <target state="translated">ステンシルテストが失敗すると、フラグメントのサンプルのカバレッジビットがクリアされます。ステンシルフレームバッファがアタッチされていない場合、ステンシルの変更&lt;strong&gt;は&lt;/strong&gt;発生&lt;strong&gt;せず&lt;/strong&gt;、ステンシルテストは常にパスするかのようになります。</target>
        </trans-unit>
        <trans-unit id="3f95650742d86a041a1880f8296f735ceb2e0c1b" translate="yes" xml:space="preserve">
          <source>If the stencil test passes, the &lt;code&gt;writeMask&lt;/code&gt; member of the &lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt; structures controls how the updated stencil value is written to the stencil framebuffer attachment.</source>
          <target state="translated">ステンシルテストに合格すると、&lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt;構造体の &lt;code&gt;writeMask&lt;/code&gt; メンバーが、更新されたステンシル値がステンシルフレームバッファーアタッチメントに書き込まれる方法を制御します。</target>
        </trans-unit>
        <trans-unit id="1ae2725fba86f90060ec41a69c258441ca5c4a24" translate="yes" xml:space="preserve">
          <source>If the the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter&amp;rsquo;s format is not a depth/stencil format, then &lt;code&gt;bufferOffset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a multiple of the format&amp;rsquo;s element size</source>
          <target state="translated">呼び出し元のコマンドの &lt;code&gt;VkImage&lt;/code&gt; パラメータの形式が深度/ステンシル形式では&lt;strong&gt;ない&lt;/strong&gt;場合、 &lt;code&gt;bufferOffset&lt;/code&gt; は形式の要素サイズの倍数である&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="e7f06fac0c1cddf9b5428aa9a81918d081c606dd" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pDataSize&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pData&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pData&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pDataSize&lt;/code&gt; bytes</source>
          <target state="translated">&lt;code&gt;pDataSize&lt;/code&gt; によって参照される値が &lt;code&gt;0&lt;/code&gt; ではなく、 &lt;code&gt;pData&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; で&lt;strong&gt;ない&lt;/strong&gt;場合、 &lt;code&gt;pData&lt;/code&gt; は &lt;code&gt;pDataSize&lt;/code&gt; バイトの配列へのポインタで&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="25568656307073e6522ffc92dfbea75618f7430b" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pPhysicalDevices&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pPhysicalDevices&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt;&lt;code&gt;VkPhysicalDevice&lt;/code&gt; handles</source>
          <target state="translated">&lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; によって参照される値が &lt;code&gt;0&lt;/code&gt; ではなく、 &lt;code&gt;pPhysicalDevices&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; で&lt;strong&gt;ない&lt;/strong&gt;場合、 &lt;code&gt;pPhysicalDevices&lt;/code&gt; は &lt;code&gt;pPhysicalDeviceCount&lt;/code&gt; &lt;code&gt;VkPhysicalDevice&lt;/code&gt; ハンドルの配列へのポインタで&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd807452626bfe7b2ca78aad0271f244449daea0" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pPropertyCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pProperties&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pProperties&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;code&gt;VkExtensionProperties&lt;/code&gt; structures</source>
          <target state="translated">&lt;code&gt;pPropertyCount&lt;/code&gt; によって参照される値が &lt;code&gt;0&lt;/code&gt; ではなく、 &lt;code&gt;pProperties&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; で&lt;strong&gt;ない&lt;/strong&gt;場合、 &lt;code&gt;pProperties&lt;/code&gt; は &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;code&gt;VkExtensionProperties&lt;/code&gt; 構造の配列へのポインターである&lt;strong&gt;必要&lt;/strong&gt;があります</target>
        </trans-unit>
        <trans-unit id="4e3979be2fc9cdc2dd1b757b50227cb79ffe7f6b" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pPropertyCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pProperties&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pProperties&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;code&gt;VkLayerProperties&lt;/code&gt; structures</source>
          <target state="translated">&lt;code&gt;pPropertyCount&lt;/code&gt; によって参照される値が &lt;code&gt;0&lt;/code&gt; ではなく、 &lt;code&gt;pProperties&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; で&lt;strong&gt;ない&lt;/strong&gt;場合、 &lt;code&gt;pProperties&lt;/code&gt; は &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;code&gt;VkLayerProperties&lt;/code&gt; 構造の配列へのポインターである&lt;strong&gt;必要&lt;/strong&gt;があります</target>
        </trans-unit>
        <trans-unit id="1cb56b4065fbae60f3f4908c086f0586b66673e4" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pPropertyCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pProperties&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pProperties&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pPropertyCount&lt;/code&gt;&lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; structures</source>
          <target state="translated">&lt;code&gt;pPropertyCount&lt;/code&gt; によって参照される値が &lt;code&gt;0&lt;/code&gt; ではなく、 &lt;code&gt;pProperties&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; で&lt;strong&gt;ない&lt;/strong&gt;場合、 &lt;code&gt;pProperties&lt;/code&gt; は &lt;code&gt;pPropertyCount&lt;/code&gt; &lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; 構造の配列へのポインタである&lt;strong&gt;必要&lt;/strong&gt;があります</target>
        </trans-unit>
        <trans-unit id="8228854d1863f05f1534a9b0baf89ccd6922136d" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pQueueFamilyProperties&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt;&lt;code&gt;VkQueueFamilyProperties&lt;/code&gt; structures</source>
          <target state="translated">&lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; によって参照される値が &lt;code&gt;0&lt;/code&gt; ではなく、 &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; で&lt;strong&gt;ない&lt;/strong&gt;場合、 &lt;code&gt;pQueueFamilyProperties&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;pQueueFamilyPropertyCount&lt;/code&gt; &lt;code&gt;VkQueueFamilyProperties&lt;/code&gt; 構造の配列へのポインタである&lt;strong&gt;必要&lt;/strong&gt;があります</target>
        </trans-unit>
        <trans-unit id="54046ebcc97e7ae2b4124937e1b1502a1a24a1f1" translate="yes" xml:space="preserve">
          <source>If the value referenced by &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; is not &lt;code&gt;0&lt;/code&gt;, and &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; is not &lt;code&gt;NULL&lt;/code&gt;, &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a pointer to an array of &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt;&lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; structures</source>
          <target state="translated">&lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; によって参照される値が &lt;code&gt;0&lt;/code&gt; ではなく、 &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; で&lt;strong&gt;ない&lt;/strong&gt;場合、 &lt;code&gt;pSparseMemoryRequirements&lt;/code&gt; &lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;pSparseMemoryRequirementCount&lt;/code&gt; &lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; 構造体の配列へのポインタで&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a0a7dfe4815abbae2e5a5f5b8e448c9d236c0a1b" translate="yes" xml:space="preserve">
          <source>If the vendor of the physical device has a valid PCI vendor ID issued by &lt;a href=&quot;https://pcisig.com/&quot;&gt;PCI-SIG&lt;/a&gt;, that ID &lt;strong&gt;should&lt;/strong&gt; be used to construct &lt;code&gt;vendorID&lt;/code&gt; as described above for PCI-based implementations. Implementations that do not return a PCI vendor ID in &lt;code&gt;vendorID&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; return a valid Khronos vendor ID, obtained as described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vulkan-styleguide&quot;&gt;Vulkan Documentation and Extensions&lt;/a&gt; document in the section &amp;ldquo;Registering a Vendor ID with Khronos&amp;rdquo;. Khronos vendor IDs are allocated starting at 0x10000, to distinguish them from the PCI vendor ID namespace.</source>
          <target state="translated">物理デバイスのベンダーが&lt;a href=&quot;https://pcisig.com/&quot;&gt;PCI-SIG&lt;/a&gt;によって発行された有効なPCIベンダーIDを持っている場合、そのID &lt;strong&gt;を&lt;/strong&gt;使用して、PCIベースの実装について上記で説明したように &lt;code&gt;vendorID&lt;/code&gt; を構築する&lt;strong&gt;必要&lt;/strong&gt;があります。 &lt;code&gt;vendorID&lt;/code&gt; で PCIベンダーIDを返さない実装は、「KhronosでのベンダーIDの登録」の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vulkan-styleguide&quot;&gt;Vulkan Documentation and Extensions&lt;/a&gt;ドキュメントで説明されているように取得した有効なKhronosベンダーIDを返す&lt;strong&gt;必要があり&lt;/strong&gt;ます。 KhronosベンダーIDは、PCIベンダーID名前空間と区別するために、0x10000から割り当てられます。</target>
        </trans-unit>
        <trans-unit id="0d5463c7a76983c1077e07d34fa03527edb8f918" translate="yes" xml:space="preserve">
          <source>If the wide lines feature is not enabled, and no element of the &lt;code&gt;pDynamicStates&lt;/code&gt; member of &lt;code&gt;pDynamicState&lt;/code&gt; is &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt;, the &lt;code&gt;lineWidth&lt;/code&gt; member of &lt;code&gt;pRasterizationState&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">幅の広いライン機能が有効になっていない、とのどの要素場合 &lt;code&gt;pDynamicStates&lt;/code&gt; のメンバー &lt;code&gt;pDynamicState&lt;/code&gt; はありません &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; 、 &lt;code&gt;lineWidth&lt;/code&gt; のメンバー &lt;code&gt;pRasterizationState&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことが &lt;code&gt;1.0&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="73c8518bfc4366e501489a6f8a21715ef69fe57a" translate="yes" xml:space="preserve">
          <source>If there was an error during recording, the application will be notified by an unsuccessful return code returned by &lt;code&gt;vkEndCommandBuffer&lt;/code&gt;. If the application wishes to further use the command buffer, the command buffer &lt;strong&gt;must&lt;/strong&gt; be reset. The command buffer &lt;strong&gt;must&lt;/strong&gt; have been in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;recording state&lt;/a&gt;, and is moved to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;executable state&lt;/a&gt;.</source>
          <target state="translated">記録中にエラーが発生した場合、 &lt;code&gt;vkEndCommandBuffer&lt;/code&gt; によって返された失敗した戻りコードによってアプリケーションに通知されます。アプリケーションがコマンドバッファをさらに使用する場合は、コマンドバッファをリセットする&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。コマンドバッファは&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;記録状態&lt;/a&gt;で&lt;strong&gt;なければならず&lt;/strong&gt;、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;実行可能状態に&lt;/a&gt;移行します。</target>
        </trans-unit>
        <trans-unit id="ae9a2543c02df9b741b548479bd8c55c951fb755" translate="yes" xml:space="preserve">
          <source>If this function fails and &lt;code&gt;pOriginal&lt;/code&gt; is non-&lt;code&gt;NULL&lt;/code&gt; the application &lt;strong&gt;must&lt;/strong&gt; not free the old allocation.</source>
          <target state="translated">この関数が失敗し、 &lt;code&gt;pOriginal&lt;/code&gt; が &lt;code&gt;NULL&lt;/code&gt; で&lt;strong&gt;ない&lt;/strong&gt;場合、アプリケーションは古い割り当てを解放しては&lt;strong&gt;なりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="56540e8d9a562b8ccfdd00041da2a9b42c1a9291" translate="yes" xml:space="preserve">
          <source>Image formats which &lt;strong&gt;can&lt;/strong&gt; be passed to, and &lt;strong&gt;may&lt;/strong&gt; be returned from Vulkan commands, are:</source>
          <target state="translated">Vulkanコマンドに渡す&lt;strong&gt;こと&lt;/strong&gt;が&lt;strong&gt;でき&lt;/strong&gt;、Vulkanコマンドから返される&lt;strong&gt;可能性&lt;/strong&gt;がある画像形式は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="dc7aea89ea7b1285bdebb8b6dce382d81c351c02" translate="yes" xml:space="preserve">
          <source>Image objects are not directly accessed by pipeline shaders for reading or writing image data. Instead, &lt;em&gt;image views&lt;/em&gt; representing contiguous ranges of the image subresources and containing additional metadata are used for that purpose. Views &lt;strong&gt;must&lt;/strong&gt; be created on images of compatible types, and &lt;strong&gt;must&lt;/strong&gt; represent a valid subset of image subresources.</source>
          <target state="translated">画像オブジェクトは、画像データの読み取りまたは書き込みのためにパイプラインシェーダーによって直接アクセスされません。代わりに、&lt;em&gt;画像&lt;/em&gt;サブリソースの連続した範囲を表し、追加のメタデータを含む&lt;em&gt;画像ビュー&lt;/em&gt;がその目的で使用されます。ビューは互換性のあるタイプのイメージ上に作成する&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;、イメージサブリソースの有効なサブセットを表す&lt;strong&gt;必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="81ddf6753fd0aad180f22e26cf6048ae03bf23cf" translate="yes" xml:space="preserve">
          <source>Image parameters</source>
          <target state="translated">画像パラメータ</target>
        </trans-unit>
        <trans-unit id="0afd8402ae9d964414342afe8732cb509d669cba" translate="yes" xml:space="preserve">
          <source>Image subresources used as attachments &lt;strong&gt;must&lt;/strong&gt; not be accessed in any other way for the duration of a render pass instance.</source>
          <target state="translated">アタッチメントとして使用される画像サブリソースは、レンダーパスインスタンスの期間中、他の方法でアクセスしてはなり&lt;strong&gt;ませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="6ec2c6fc56f7ada1535d1030947efe7b79df32fc" translate="yes" xml:space="preserve">
          <source>Image subresources used as attachments in the current render pass &lt;strong&gt;must&lt;/strong&gt; not be accessed in any way other than as an attachment by this command.</source>
          <target state="translated">現在のレンダーパスでアタッチメントとして使用されている画像サブリソースには、このコマンドによるアタッチメント以外の方法でアクセスしないで&lt;strong&gt;ください&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="7b81ccc95283a87443226d3c08a0517e515b981d" translate="yes" xml:space="preserve">
          <source>Image views are represented by &lt;code&gt;VkImageView&lt;/code&gt; handles:</source>
          <target state="translated">画像ビューは &lt;code&gt;VkImageView&lt;/code&gt; ハンドルで表されます：</target>
        </trans-unit>
        <trans-unit id="38b1c7b31c65affa0e0f560ec0798cc62c3f8279" translate="yes" xml:space="preserve">
          <source>Images are represented by &lt;code&gt;VkImage&lt;/code&gt; handles:</source>
          <target state="translated">画像は &lt;code&gt;VkImage&lt;/code&gt; ハンドルで表されます：</target>
        </trans-unit>
        <trans-unit id="ed88f13607e3c1609e3b6dbec1311e457c0b4ecf" translate="yes" xml:space="preserve">
          <source>Images created with &lt;code&gt;tiling&lt;/code&gt; equal to &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; have further restrictions on their limits and capabilities compared to images created with &lt;code&gt;tiling&lt;/code&gt; equal to &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt;. Creation of images with tiling &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt;&lt;strong&gt;may&lt;/strong&gt; not be supported unless other parameters meet all of the constraints:</source>
          <target state="translated">&lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; と等しい &lt;code&gt;tiling&lt;/code&gt; 作成された画像は、 &lt;code&gt;VK_IMAGE_TILING_OPTIMAL&lt;/code&gt; と等しい &lt;code&gt;tiling&lt;/code&gt; 作成された画像と比較して、制限と機能にさらに制限があります。タイリングと画像の作成 &lt;code&gt;VK_IMAGE_TILING_LINEAR&lt;/code&gt; が&lt;strong&gt;あり&lt;/strong&gt;、他のパラメータがすべての制約を満たしていない限り、サポートされません。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fc45e1c0d35af06285aca40db6402e506931b9fd" translate="yes" xml:space="preserve">
          <source>Images represent multidimensional - up to 3 - arrays of data which &lt;strong&gt;can&lt;/strong&gt; be used for various purposes (e.g. attachments, textures), by binding them to a graphics or compute pipeline via descriptor sets, or by directly specifying them as parameters to certain commands.</source>
          <target state="translated">画像は、3次元までの多次元データ配列を表します。これらは、記述子セットを介してグラフィックスまたは計算パイプラインにバインドするか、特定のコマンドのパラメーターとして直接指定することにより、さまざまな目的（アタッチメント、テクスチャなど）に使用&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c56b53cd8ccdf0e63a7b6e70c8e74861b2788035" translate="yes" xml:space="preserve">
          <source>Images still require a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-image-layouts&quot;&gt;layout transition&lt;/a&gt; from &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; or &lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt; before being used on the first queue.</source>
          <target state="translated">画像は、最初のキューで使用される前に、 &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; または &lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt; からの&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-image-layouts&quot;&gt;レイアウトの移行が&lt;/a&gt;引き続き必要です。</target>
        </trans-unit>
        <trans-unit id="7d6b1993bf2454d104ce5f3aac73fe0d26abe907" translate="yes" xml:space="preserve">
          <source>Implementations &lt;strong&gt;may&lt;/strong&gt; support additional limits and capabilities beyond those listed above.</source>
          <target state="translated">実装&lt;strong&gt;は、&lt;/strong&gt;上記の制限を超える追加の制限と機能をサポートする&lt;strong&gt;場合が&lt;/strong&gt;あります。</target>
        </trans-unit>
        <trans-unit id="c184b611d1e020755822644bc18e37ed11616280" translate="yes" xml:space="preserve">
          <source>Implementations &lt;strong&gt;should&lt;/strong&gt; make every effort to limit any critical sections to the actual accesses to the cache, which is expected to be significantly shorter than the duration of the &lt;code&gt;vkCreateGraphicsPipelines&lt;/code&gt; and &lt;code&gt;vkCreateComputePipelines&lt;/code&gt; commands.</source>
          <target state="translated">実装で&lt;strong&gt;は&lt;/strong&gt;、重要なセクションをキャッシュへの実際のアクセスに制限するためにあらゆる努力を &lt;code&gt;vkCreateGraphicsPipelines&lt;/code&gt; あります。これは、 &lt;code&gt;vkCreateComputePipelines&lt;/code&gt; コマンドとvkCreateComputePipelinesコマンドの継続時間よりも大幅に短いことが予想されます。</target>
        </trans-unit>
        <trans-unit id="c74baf1fbeea0b9a62e010e6276e264826269db6" translate="yes" xml:space="preserve">
          <source>In order to support systems with multiple Vulkan implementations comprising heterogeneous collections of hardware and software, the function pointers returned by &lt;code&gt;vkGetInstanceProcAddr&lt;/code&gt;&lt;strong&gt;may&lt;/strong&gt; point to dispatch code, which calls a different real implementation for different &lt;code&gt;VkDevice&lt;/code&gt; objects (and objects created from them). The overhead of this internal dispatch &lt;strong&gt;can&lt;/strong&gt; be avoided by obtaining device-specific function pointers for any commands that use a device or device-child object as their dispatchable object. Such function pointers &lt;strong&gt;can&lt;/strong&gt; be obtained with the command:</source>
          <target state="translated">ハードウェアとソフトウェアの異種のコレクションで構成される複数のVulkan実装を備えたシステムをサポートするために、 &lt;code&gt;vkGetInstanceProcAddr&lt;/code&gt; によって返される関数ポインターは、異なる &lt;code&gt;VkDevice&lt;/code&gt; オブジェクト（およびそれらから作成されたオブジェクト）の異なる実際の実装を呼び出すディスパッチコードを指す&lt;strong&gt;場合が&lt;/strong&gt;あります。この内部ディスパッチのオーバーヘッドは、デバイスまたはデバイスの子オブジェクトをディスパッチ可能なオブジェクトとして使用するコマンドのデバイス固有の関数ポインターを取得する&lt;strong&gt;こと&lt;/strong&gt;で回避&lt;strong&gt;でき&lt;/strong&gt;ます。このような関数ポインター&lt;strong&gt;は&lt;/strong&gt;、次のコマンドで取得&lt;strong&gt;でき&lt;/strong&gt;ます。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6e2634175a4dc089b48d2a1466c33732fa955c6" translate="yes" xml:space="preserve">
          <source>In this table, the following conventions are used:</source>
          <target state="translated">この表では、以下の規約を使用しています。</target>
        </trans-unit>
        <trans-unit id="c9c8d2c9a6af8b07da14869e39d7e5e1844a6c1c" translate="yes" xml:space="preserve">
          <source>Information about the descriptor set layout is passed in an instance of the &lt;code&gt;VkDescriptorSetLayoutCreateInfo&lt;/code&gt; structure:</source>
          <target state="translated">記述子セットのレイアウトに関する情報は、 &lt;code&gt;VkDescriptorSetLayoutCreateInfo&lt;/code&gt; 構造のインスタンスで渡されます。</target>
        </trans-unit>
        <trans-unit id="45fca81be8a6e01915813868a52d5a423c24224c" translate="yes" xml:space="preserve">
          <source>Information about the layout of the image subresource is returned in a &lt;code&gt;VkSubresourceLayout&lt;/code&gt; structure:</source>
          <target state="translated">画像 &lt;code&gt;VkSubresourceLayout&lt;/code&gt; リソースのレイアウトに関する情報は、VkSubresourceLayout構造で返されます。</target>
        </trans-unit>
        <trans-unit id="8deed4efac89dc1076983f50d9dda54976214d59" translate="yes" xml:space="preserve">
          <source>Inside</source>
          <target state="translated">Inside</target>
        </trans-unit>
        <trans-unit id="13cd833744334ee496db672981052ffca5b15e53" translate="yes" xml:space="preserve">
          <source>Instances are represented by &lt;code&gt;VkInstance&lt;/code&gt; handles:</source>
          <target state="translated">インスタンスは &lt;code&gt;VkInstance&lt;/code&gt; ハンドルで表されます：</target>
        </trans-unit>
        <trans-unit id="07bafcbf8e3c88748cd64d44a8336fceaa34634c" translate="yes" xml:space="preserve">
          <source>Integer formats &lt;strong&gt;can&lt;/strong&gt; only be converted to other integer formats with the same signedness.</source>
          <target state="translated">整数形式&lt;strong&gt;は&lt;/strong&gt;、同じ符号付きの他の整数形式にのみ変換&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="958696b9ed9d82ed397c31de385f2e526bade09f" translate="yes" xml:space="preserve">
          <source>It is an application error to call &lt;code&gt;vkMapMemory&lt;/code&gt; on a memory object that is already mapped.</source>
          <target state="translated">すでにマップされているメモリオブジェクトで &lt;code&gt;vkMapMemory&lt;/code&gt; を呼び出すのはアプリケーションエラーです。</target>
        </trans-unit>
        <trans-unit id="e542ca6dc31d6447047a27c0a75533ab68120d44" translate="yes" xml:space="preserve">
          <source>It is important for the application developer to become meticulously familiar with all of the mechanisms described in the chapter on &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;Synchronization and Cache Control&lt;/a&gt; as they are crucial to maintaining memory access ordering.</source>
          <target state="translated">アプリケーション開発者は、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;同期とキャッシュ制御の&lt;/a&gt;章で説明されているすべてのメカニズムに細心の注意を払うことが重要です。これらのメカニズムは、メモリアクセスの順序を維持するために重要です。</target>
        </trans-unit>
        <trans-unit id="3029f703d75931fe83308f2d109490fa01906890" translate="yes" xml:space="preserve">
          <source>It is legal for a subpass to use no color or depth/stencil attachments, and rather use shader side effects such as image stores and atomics to produce an output. In this case, the subpass continues to use the &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;layers&lt;/code&gt; of the framebuffer to define the dimensions of the rendering area, and the &lt;code&gt;rasterizationSamples&lt;/code&gt; from each pipeline&amp;rsquo;s &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt; to define the number of samples used in rasterization; however, if &lt;a href=&quot;#VkPhysicalDeviceFeatures&quot;&gt;VkPhysicalDeviceFeatures&lt;/a&gt;::&lt;code&gt;variableMultisampleRate&lt;/code&gt; is &lt;code&gt;VK_FALSE&lt;/code&gt;, then all pipelines to be bound with a given zero-attachment subpass &lt;strong&gt;must&lt;/strong&gt; have the same value for &lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt;::&lt;code&gt;rasterizationSamples&lt;/code&gt;.</source>
          <target state="translated">サブパスが色や深度/ステンシルのアタッチメントを使用せず、イメージストアやアトミックなどのシェーダーの副作用を使用して出力を生成することは正当です。この場合、subpassを使用し続け &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;height&lt;/code&gt; 、及び &lt;code&gt;layers&lt;/code&gt; 描画領域の大きさ、及び定義するためにフレームバッファのを &lt;code&gt;rasterizationSamples&lt;/code&gt; 各パイプラインのより&lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfoを&lt;/a&gt;ラスタライズに使用されるサンプルの数を定義します。ただし、&lt;a href=&quot;#VkPhysicalDeviceFeatures&quot;&gt;VkPhysicalDeviceFeatures&lt;/a&gt; :: &lt;code&gt;variableMultisampleRate&lt;/code&gt; が &lt;code&gt;VK_FALSE&lt;/code&gt; の場合、指定されたゼロ接続サブパスにバインドされるすべてのパイプライン&lt;strong&gt;は、&lt;/strong&gt;同じ値持つ&lt;a href=&quot;#VkPipelineMultisampleStateCreateInfo&quot;&gt;VkPipelineMultisampleStateCreateInfo&lt;/a&gt; :: &lt;code&gt;rasterizationSamples&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="1b82ed9d94c1ada5d7e07e124a1f64adcbf1f82f" translate="yes" xml:space="preserve">
          <source>It is legal for an implementation to report a larger value in &lt;code&gt;VkMemoryRequirements&lt;/code&gt;::&lt;code&gt;size&lt;/code&gt; than would be obtained by adding together memory sizes for all &lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; returned by &lt;code&gt;vkGetImageSparseMemoryRequirements&lt;/code&gt;. This &lt;strong&gt;may&lt;/strong&gt; occur when the hardware requires unused padding in the address range describing the resource.</source>
          <target state="translated">&lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; によって返されるすべてのVkSparseImageMemoryRequirementsのメモリサイズを合計することで得られる値よりも大きい値を &lt;code&gt;VkMemoryRequirements&lt;/code&gt; :: &lt;code&gt;size&lt;/code&gt; で報告することは、実装にとって &lt;code&gt;vkGetImageSparseMemoryRequirements&lt;/code&gt; です。これ&lt;strong&gt;は&lt;/strong&gt;、ハードウェアがリソースを記述するアドレス範囲で未使用のパディングを必要とする&lt;strong&gt;場合に&lt;/strong&gt;発生する&lt;strong&gt;可能性&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63e2a26ecc7423e3bb35c40f316eb6d208a8297a" translate="yes" xml:space="preserve">
          <source>It is valid to set both &lt;code&gt;VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT&lt;/code&gt; and &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt;. This allows a pipeline to be both a parent and possibly a child in a pipeline hierarchy. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-pipeline-derivatives&quot;&gt;Pipeline Derivatives&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT&lt;/code&gt; と &lt;code&gt;VK_PIPELINE_CREATE_DERIVATIVE_BIT&lt;/code&gt; の両方を設定することは有効です。これにより、パイプラインは、パイプライン階層の親であり、子である可能性があります。詳細については、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-pipeline-derivatives&quot;&gt;パイプラインデリバティブ&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="211ec93f0374b890f6c782dc446be9c882960bbc" translate="yes" xml:space="preserve">
          <source>Layout transitions that are performed via image memory barriers execute in their entirety in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;submission order&lt;/a&gt;, relative to other image layout transitions submitted to the same queue, including those performed by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;render passes&lt;/a&gt;. In effect there is an implicit execution dependency from each such layout transition to all layout transitions previously submitted to the same queue.</source>
          <target state="translated">画像メモリバリアを介して実行されるレイアウト遷移は、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass&quot;&gt;レンダーパス&lt;/a&gt;によって実行されるものも含め、同じキューに送信される他の画像レイアウト遷移と比較して、全体が送信&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;順&lt;/a&gt;に実行されます。実際には、そのような各レイアウト遷移から、以前に同じキューに送信されたすべてのレイアウト遷移への暗黙的な実行依存関係があります。</target>
        </trans-unit>
        <trans-unit id="a9ce522cb0a03624969154fd5e6aceacb8a3f714" translate="yes" xml:space="preserve">
          <source>Licensed under the Creative Commons Attribution 4.0 International License.</source>
          <target state="translated">クリエイティブ・コモンズ表示4.0国際ライセンスの下でライセンスされています。</target>
        </trans-unit>
        <trans-unit id="c2a0c893019e3e3d26689e1a93c0a0ec482ff903" translate="yes" xml:space="preserve">
          <source>Logical devices are represented by &lt;code&gt;VkDevice&lt;/code&gt; handles:</source>
          <target state="translated">論理デバイスは &lt;code&gt;VkDevice&lt;/code&gt; ハンドルで表されます。</target>
        </trans-unit>
        <trans-unit id="e22d4798fb728af4e1e14a5af6f163593cf02105" translate="yes" xml:space="preserve">
          <source>Logical operations are controlled by the &lt;code&gt;logicOpEnable&lt;/code&gt; and &lt;code&gt;logicOp&lt;/code&gt; members of &lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt;. If &lt;code&gt;logicOpEnable&lt;/code&gt; is &lt;code&gt;VK_TRUE&lt;/code&gt;, then a logical operation selected by &lt;code&gt;logicOp&lt;/code&gt; is applied between each color attachment and the fragment&amp;rsquo;s corresponding output value, and blending of all attachments is treated as if it were disabled. Any attachments using color formats for which logical operations are not supported simply pass through the color values unmodified. The logical operation is applied independently for each of the red, green, blue, and alpha components. The &lt;code&gt;logicOp&lt;/code&gt; is selected from the following operations:</source>
          <target state="translated">論理演算は、によって制御され &lt;code&gt;logicOpEnable&lt;/code&gt; と &lt;code&gt;logicOp&lt;/code&gt; のメンバー&lt;a href=&quot;#VkPipelineColorBlendStateCreateInfo&quot;&gt;VkPipelineColorBlendStateCreateInfo&lt;/a&gt;。場合 &lt;code&gt;logicOpEnable&lt;/code&gt; がある &lt;code&gt;VK_TRUE&lt;/code&gt; 、その後で選択された論理演算 &lt;code&gt;logicOp&lt;/code&gt; は、各色の付着および断片の対応する出力値との間に印加され、それが無効であるかのようにすべての添付ファイルのブレンドが治療されます。論理演算がサポートされていないカラー形式を使用する添付ファイルは、変更されずに単にカラー値を通過します。論理演算は、赤、緑、青、アルファの各コンポーネントに個別に適用されます。 &lt;code&gt;logicOp&lt;/code&gt; は、以下の操作から選択されます。</target>
        </trans-unit>
        <trans-unit id="088e0e8e8f032365941bd93c8844c6b3d25b44ce" translate="yes" xml:space="preserve">
          <source>Mapping non-coherent memory does not implicitly invalidate the mapped memory, and device writes that have not been invalidated &lt;strong&gt;must&lt;/strong&gt; be made visible before the host reads or overwrites them.</source>
          <target state="translated">非コヒーレントメモリをマッピングしても、マップされたメモリが暗黙的に無効になることはありません。無効化されていないデバイスの書き込みは、ホストがそれらを読み取るか上書きする前に可視にする&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ea92b6b03a8c8ec828084da110ee37b8b1e229aa" translate="yes" xml:space="preserve">
          <source>Mapping of OpenGL to Vulkan filter modes</source>
          <target state="translated">OpenGLからVulkanフィルタモードへのマッピング</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="1cb449c1126609b4b41e1d87f65f0d7cd19b49b9" translate="yes" xml:space="preserve">
          <source>Members</source>
          <target state="translated">Members</target>
        </trans-unit>
        <trans-unit id="d4040e7237109fa0399aceefd8371df89689f06c" translate="yes" xml:space="preserve">
          <source>Members of &lt;code&gt;VkDescriptorImageInfo&lt;/code&gt; that are not used in an update (as described above) are ignored.</source>
          <target state="translated">（上記のように）更新で使用されない &lt;code&gt;VkDescriptorImageInfo&lt;/code&gt; のメンバーは無視されます。</target>
        </trans-unit>
        <trans-unit id="584c3f218214226a92f9fe0a54eb0fd316f70f2f" translate="yes" xml:space="preserve">
          <source>Memory &lt;strong&gt;can&lt;/strong&gt; be bound to sparse image blocks of &lt;code&gt;VkImage&lt;/code&gt; objects created with the &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; flag using the following structure:</source>
          <target state="translated">次の構造を使用して、 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT&lt;/code&gt; フラグで作成された &lt;code&gt;VkImage&lt;/code&gt; オブジェクトのスパースイメージブロックにメモリ&lt;strong&gt;を&lt;/strong&gt;バインド&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6556bcdcbaccd429b8497e030af13546ac4a42a4" translate="yes" xml:space="preserve">
          <source>Memory in Vulkan &lt;strong&gt;can&lt;/strong&gt; be accessed from within shader invocations and via some fixed-function stages of the pipeline. The &lt;em&gt;access type&lt;/em&gt; is a function of the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets&quot;&gt;descriptor type&lt;/a&gt; used, or how a fixed-function stage accesses memory. Each access type corresponds to a bit flag in &lt;a href=&quot;#VkAccessFlagBits&quot;&gt;VkAccessFlagBits&lt;/a&gt;.</source>
          <target state="translated">バルカンのメモリは&lt;strong&gt;でき&lt;/strong&gt;シェーダ呼び出しの中から、パイプラインの一部の固定機能ステージを介してアクセスされます。&lt;em&gt;アクセスタイプは、&lt;/em&gt;の関数である&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets&quot;&gt;記述子タイプ&lt;/a&gt;に使用、または固定機能ステージは、メモリにアクセスする方法。各アクセスタイプは、&lt;a href=&quot;#VkAccessFlagBits&quot;&gt;VkAccessFlagBitsの&lt;/a&gt;ビットフラグに対応しています。</target>
        </trans-unit>
        <trans-unit id="74e7bbd2e6d083718e31c1d69bd679284fff4db7" translate="yes" xml:space="preserve">
          <source>Memory is bound to &lt;code&gt;VkBuffer&lt;/code&gt; objects created with the &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; flag using the following structure:</source>
          <target state="translated">メモリは、次の構造を使用して、 &lt;code&gt;VK_BUFFER_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; フラグで作成された &lt;code&gt;VkBuffer&lt;/code&gt; オブジェクトにバインドされます。</target>
        </trans-unit>
        <trans-unit id="e55e44500b7e8d75dce7c9cf5be86d00e2541fa2" translate="yes" xml:space="preserve">
          <source>Memory is bound to opaque regions of &lt;code&gt;VkImage&lt;/code&gt; objects created with the &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; flag using the following structure:</source>
          <target state="translated">メモリは、次の構造を使用して、 &lt;code&gt;VK_IMAGE_CREATE_SPARSE_BINDING_BIT&lt;/code&gt; フラグで作成された &lt;code&gt;VkImage&lt;/code&gt; オブジェクトの不透明な領域にバインドされます。</target>
        </trans-unit>
        <trans-unit id="39f516e96cf5dd8a70936206ff781f81265b1094" translate="yes" xml:space="preserve">
          <source>Memory objects are represented by &lt;code&gt;VkDeviceMemory&lt;/code&gt; handles:</source>
          <target state="translated">メモリオブジェクトは、 &lt;code&gt;VkDeviceMemory&lt;/code&gt; ハンドルで表されます。</target>
        </trans-unit>
        <trans-unit id="6bcab1625fbddfba636187b4a8dcb0be1460eaf5" translate="yes" xml:space="preserve">
          <source>Memory types are ordered in the list such that X is assigned a lesser &lt;code&gt;memoryTypeIndex&lt;/code&gt; than Y if (X &amp;le; Y) &amp;and; &amp;not; (Y &amp;le; X) according to the preorder. Note that the list of all allowed memory property flag combinations above satisfies this preorder, but other orders would as well. The goal of this ordering is to enable applications to use a simple search loop in selecting the proper memory type, along the lines of:</source>
          <target state="translated">メモリタイプは、（ &lt;code&gt;memoryTypeIndex&lt;/code&gt; （Y&amp;le;X）の場合、XがYよりも小さいmemoryTypeIndexに割り当てられるように、リスト内で並べ替えられます。上記の許可されたすべてのメモリプロパティフラグの組み合わせのリストは、この事前注文を満たしていますが、他の注文も同様です。この順序付けの目的は、アプリケーションが適切なメモリタイプを選択する際に単純な検索ループを使用できるようにすることです。</target>
        </trans-unit>
        <trans-unit id="a7b93d2128e820f861fc8dfccd9f5521e89ad21f" translate="yes" xml:space="preserve">
          <source>Mode</source>
          <target state="translated">Mode</target>
        </trans-unit>
        <trans-unit id="9fb598360964c636bfba410a029c41e6b74d6ad1" translate="yes" xml:space="preserve">
          <source>Most Vulkan commands operate on a single object, or there is a sole object that is being created or manipulated. When an allocation uses an allocation scope of &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_OBJECT&lt;/code&gt; or &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_CACHE&lt;/code&gt;, the allocation is scoped to the object being created or manipulated.</source>
          <target state="translated">ほとんどのVulkanコマンドは単一のオブジェクトを操作するか、作成または操作されている唯一のオブジェクトがあります。割り当てが &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_OBJECT&lt;/code&gt; または &lt;code&gt;VK_SYSTEM_ALLOCATION_SCOPE_CACHE&lt;/code&gt; の割り当てスコープを使用する場合、割り当ては、作成または操作されるオブジェクトにスコープされます。</target>
        </trans-unit>
        <trans-unit id="de2a91e902f73caf1a035d332dfb2473c3e864dc" translate="yes" xml:space="preserve">
          <source>Most Vulkan handle types, such as &lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;, are non-dispatchable.</source>
          <target state="translated">&lt;a href=&quot;#VkBuffer&quot;&gt;VkBuffer&lt;/a&gt;などのほとんどのVulkanハンドルタイプはディスパッチできません。</target>
        </trans-unit>
        <trans-unit id="5ffd69dabb1b2e1c3dc54acbdbc711cd9064a869" translate="yes" xml:space="preserve">
          <source>Moving to the next subpass automatically performs any multisample resolve operations in the subpass being ended. End-of-subpass multisample resolves are treated as color attachment writes for the purposes of synchronization. That is, they are considered to execute in the &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; pipeline stage and their writes are synchronized with &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt;. Synchronization between rendering within a subpass and any resolve operations at the end of the subpass occurs automatically, without need for explicit dependencies or pipeline barriers. However, if the resolve attachment is also used in a different subpass, an explicit dependency is needed.</source>
          <target state="translated">次のサブパスに移動すると、終了するサブパスでマルチサンプル解決操作が自動的に実行されます。サブパスの終わりのマルチサンプル解決は、同期の目的でカラーアタッチメント書き込みとして扱われます。つまり、これらは &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; パイプラインステージで実行されると見なされ、その書き込みは &lt;code&gt;VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT&lt;/code&gt; と同期されます。サブパス内のレンダリングとサブパスの最後の解決操作の間の同期は、明示的な依存関係やパイプラインバリアを必要とせずに自動的に行われます。ただし、解決アタッチメントが別のサブパスでも使用されている場合は、明示的な依存関係が必要です。</target>
        </trans-unit>
        <trans-unit id="375f8fc6ea9ee0181fac651e1cd70252a35dca5b" translate="yes" xml:space="preserve">
          <source>Multiple aspects are returned for depth/stencil images that are implemented as separate planes by the implementation. The depth and stencil data planes each have unique &lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; data.</source>
          <target state="translated">実装によって個別のプレーンとして実装された深度/ステンシルイメージに対して、複数のアスペクトが返されます。深度およびステンシルデータプレーンには、それぞれ固有の &lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; データがあります。</target>
        </trans-unit>
        <trans-unit id="1957527a6f5f2b2cab857137e1f1ad146b105ee3" translate="yes" xml:space="preserve">
          <source>Multiple logical devices &lt;strong&gt;can&lt;/strong&gt; be created from the same physical device. Logical device creation &lt;strong&gt;may&lt;/strong&gt; fail due to lack of device-specific resources (in addition to the other errors). If that occurs, &lt;code&gt;vkCreateDevice&lt;/code&gt; will return &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt;.</source>
          <target state="translated">同じ物理デバイスから複数の論理デバイス&lt;strong&gt;を&lt;/strong&gt;作成&lt;strong&gt;でき&lt;/strong&gt;ます。（他のエラーに加えて）デバイス固有のリソースの不足により、論理デバイスの作成&lt;strong&gt;が&lt;/strong&gt;失敗する場合があります。その場合、 &lt;code&gt;vkCreateDevice&lt;/code&gt; はVK_ERROR_TOO_MANY_OBJECTSを返し &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="edc73e41a0147fbaf61d930aeee9419e9909b970" translate="yes" xml:space="preserve">
          <source>No cross-references are available</source>
          <target state="translated">相互参照はありません</target>
        </trans-unit>
        <trans-unit id="4072aa7bf6f2ea46b2dc24ad89b9a74423c8b2d5" translate="yes" xml:space="preserve">
          <source>No format conversion is supported between depth/stencil images. The formats &lt;strong&gt;must&lt;/strong&gt; match.</source>
          <target state="translated">深度/ステンシルイメージ間のフォーマット変換はサポートされていません。フォーマット&lt;strong&gt;は&lt;/strong&gt;一致する&lt;strong&gt;必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="31d5650a41f96c9dfbc78cc8a8785c8c336b6319" translate="yes" xml:space="preserve">
          <source>No memory barriers are needed between &lt;code&gt;vkCmdClearAttachments&lt;/code&gt; and preceding or subsequent draw or attachment clear commands in the same subpass.</source>
          <target state="translated">同じサブパス内の &lt;code&gt;vkCmdClearAttachments&lt;/code&gt; と先行または後続の描画またはアタッチメントのクリアコマンドの間にメモリバリアは必要ありません。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="a71ee7b038fc978127bca3eb9d094ef88d1d3de3" translate="yes" xml:space="preserve">
          <source>Note that using a &lt;code&gt;maxLod&lt;/code&gt; of zero would cause &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;magnification&lt;/a&gt; to always be performed, and the &lt;code&gt;magFilter&lt;/code&gt; to always be used. This is valid, just not an exact match for OpenGL behavior. Clamping the maximum LOD to 0.25 allows the &amp;lambda; value to be non-zero and minification to be performed, while still always rounding down to the base level. If the &lt;code&gt;minFilter&lt;/code&gt; and &lt;code&gt;magFilter&lt;/code&gt; are equal, then using a &lt;code&gt;maxLod&lt;/code&gt; of zero also works.</source>
          <target state="translated">ゼロの &lt;code&gt;maxLod&lt;/code&gt; を使用すると、常に&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;拡大&lt;/a&gt;が実行され、 &lt;code&gt;magFilter&lt;/code&gt; が常に使用されることに注意してください。これは有効ですが、OpenGLの動作と完全に一致するわけではありません。最大LODを0.25にクランプすると、&amp;lambda;の値がゼロ以外になり、最小化が実行されますが、常にベースレベルに切り捨てられます。場合 &lt;code&gt;minFilter&lt;/code&gt; と &lt;code&gt;magFilter&lt;/code&gt; は等しく、その後使用 &lt;code&gt;maxLod&lt;/code&gt; ゼロのも働きます。</target>
        </trans-unit>
        <trans-unit id="7c1dc45f2b802c8cb8e237b3e14cecc219666107" translate="yes" xml:space="preserve">
          <source>Note: Some implementations will default to shader state if this member does not match.</source>
          <target state="translated">注意:一部の実装では、このメンバが一致しない場合、シェーダの状態がデフォルトになります。</target>
        </trans-unit>
        <trans-unit id="25b0c518c1db54503a1eda0c84458e75867bb5fa" translate="yes" xml:space="preserve">
          <source>Object Handles</source>
          <target state="translated">オブジェクトハンドル</target>
        </trans-unit>
        <trans-unit id="ce667716547fa82bc8795ad7ef205e9410193ed0" translate="yes" xml:space="preserve">
          <source>Offset</source>
          <target state="translated">Offset</target>
        </trans-unit>
        <trans-unit id="9d928d1908ece5763519358c1fd3c69933e1b4bf" translate="yes" xml:space="preserve">
          <source>Once a pipeline has been created, it &lt;strong&gt;can&lt;/strong&gt; be bound to the command buffer using the command:</source>
          <target state="translated">パイプラインが作成されたら、次のコマンドを使用してコマンドバッファーにバインド&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2a1208fdc5f4c6cb373dbd49c2d4e1842477ca9e" translate="yes" xml:space="preserve">
          <source>Once a query is ended the query &lt;strong&gt;must&lt;/strong&gt; finish in finite time, unless the state of the query is changed using other commands, e.g. by issuing a reset of the query.</source>
          <target state="translated">クエリが終了すると、クエリのリセットを発行するなど、他のコマンドを使用してクエリの状態を変更しない限り、クエリは有限時間で終了する&lt;strong&gt;必要&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="fff73ba35611844509e435e22a9813a71dbc2084" translate="yes" xml:space="preserve">
          <source>Once a shader module has been created, any entry points it contains &lt;strong&gt;can&lt;/strong&gt; be used in pipeline shader stages as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-compute&quot;&gt;Compute Pipelines&lt;/a&gt; and &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-graphics&quot;&gt;Graphics Pipelines&lt;/a&gt;.</source>
          <target state="translated">シェーダーモジュールが作成されると、そこに含まれるエントリポイントをパイプラインシェーダーステージで使用&lt;strong&gt;でき&lt;/strong&gt;ます（「パイプラインの&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-compute&quot;&gt;計算&lt;/a&gt;と&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-graphics&quot;&gt;グラフィックパイプライン」を参照）&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09186b594997f20c440e6c606b9ce19b5a68d0d9" translate="yes" xml:space="preserve">
          <source>Once allocated, descriptor sets &lt;strong&gt;can&lt;/strong&gt; be updated with a combination of write and copy operations. To update descriptor sets, call:</source>
          <target state="translated">割り当てが完了すると、ディスクリプタセット&lt;strong&gt;は&lt;/strong&gt;、書き込み操作とコピー操作を組み合わせて更新&lt;strong&gt;でき&lt;/strong&gt;ます。記述子セットを更新するには、次を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a3ebfd88cd8fc0e9ef55b8c531fb6c472e792a53" translate="yes" xml:space="preserve">
          <source>Once bound, a descriptor set affects rendering of subsequent graphics or compute commands in the command buffer until a different set is bound to the same set number, or else until the set is disturbed as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-compatibility&quot;&gt;Pipeline Layout Compatibility&lt;/a&gt;.</source>
          <target state="translated">バインドされると、記述子セットは、異なるセットが同じセット番号にバインドされるまで、または&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-compatibility&quot;&gt;パイプラインレイアウトの互換性で&lt;/a&gt;説明されているようにセットが乱されるまで、コマンドバッファー内の後続のグラフィックスまたは計算コマンドのレンダリングに影響します。</target>
        </trans-unit>
        <trans-unit id="847966dc1bdc1c6e8ab07e943882489732ba20cf" translate="yes" xml:space="preserve">
          <source>Once bound, a pipeline binding affects subsequent graphics or compute commands in the command buffer until a different pipeline is bound to the bind point. The pipeline bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; controls the behavior of &lt;a href=&quot;#vkCmdDispatch&quot;&gt;vkCmdDispatch&lt;/a&gt; and &lt;a href=&quot;#vkCmdDispatchIndirect&quot;&gt;vkCmdDispatchIndirect&lt;/a&gt;. The pipeline bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; controls the behavior of &lt;a href=&quot;#vkCmdDraw&quot;&gt;vkCmdDraw&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndexed&quot;&gt;vkCmdDrawIndexed&lt;/a&gt;, &lt;a href=&quot;#vkCmdDrawIndirect&quot;&gt;vkCmdDrawIndirect&lt;/a&gt;, and &lt;a href=&quot;#vkCmdDrawIndexedIndirect&quot;&gt;vkCmdDrawIndexedIndirect&lt;/a&gt;. No other commands are affected by the pipeline state.</source>
          <target state="translated">バインドされると、パイプラインバインディングは、別のパイプラインがバインドポイントにバインドされるまで、コマンドバッファー内の後続のグラフィックスまたは計算コマンドに影響を与えます。 &lt;code&gt;VK_PIPELINE_BIND_POINT_COMPUTE&lt;/code&gt; にバインドされたパイプラインは、&lt;a href=&quot;#vkCmdDispatch&quot;&gt;vkCmdDispatch&lt;/a&gt;および&lt;a href=&quot;#vkCmdDispatchIndirect&quot;&gt;vkCmdDispatchIndirectの&lt;/a&gt;動作を制御します。 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; にバインドされたパイプラインは、&lt;a href=&quot;#vkCmdDraw&quot;&gt;vkCmdDraw&lt;/a&gt;、&lt;a href=&quot;#vkCmdDrawIndexed&quot;&gt;vkCmdDrawIndexed&lt;/a&gt;、&lt;a href=&quot;#vkCmdDrawIndirect&quot;&gt;vkCmdDrawIndirect&lt;/a&gt;、および&lt;a href=&quot;#vkCmdDrawIndexedIndirect&quot;&gt;vkCmdDrawIndexedIndirect&lt;/a&gt;の動作を制御します。他のコマンドはパイプラインの状態の影響を受けません。</target>
        </trans-unit>
        <trans-unit id="4965c4b40c00711ccc4aba8a055d515228540865" translate="yes" xml:space="preserve">
          <source>Once created, a pipeline cache &lt;strong&gt;can&lt;/strong&gt; be passed to the &lt;code&gt;vkCreateGraphicsPipelines&lt;/code&gt; and &lt;code&gt;vkCreateComputePipelines&lt;/code&gt; commands. If the pipeline cache passed into these commands is not &lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;, the implementation will query it for possible reuse opportunities and update it with new content. The use of the pipeline cache object in these commands is internally synchronized, and the same pipeline cache object &lt;strong&gt;can&lt;/strong&gt; be used in multiple threads simultaneously.</source>
          <target state="translated">作成した後は、パイプライン・キャッシュが&lt;strong&gt;可能&lt;/strong&gt;に渡され &lt;code&gt;vkCreateGraphicsPipelines&lt;/code&gt; と &lt;code&gt;vkCreateComputePipelines&lt;/code&gt; のコマンド。これらのコマンドに渡されたパイプラインキャッシュが&lt;a href=&quot;#VK_NULL_HANDLE&quot;&gt;VK_NULL_HANDLE&lt;/a&gt;でない場合、実装は再利用の可能性についてクエリを実行し、新しいコンテンツで更新します。これらのコマンドでのパイプラインキャッシュオブジェクトの使用は内部的に同期され、同じパイプラインキャッシュオブジェクトを複数のスレッドで同時に使用&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2ea5ba6c3e4f3c8706ba3083086e2c2921654543" translate="yes" xml:space="preserve">
          <source>Once the contents of an attachment become undefined in subpass &lt;strong&gt;S&lt;/strong&gt;, they remain undefined for subpasses in subpass dependency chains starting with subpass &lt;strong&gt;S&lt;/strong&gt; until they are written again. However, they remain valid for subpasses in other subpass dependency chains starting with subpass &lt;strong&gt;S&lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt; if those subpasses use or preserve the attachment.</source>
          <target state="translated">アタッチメントの内容がサブパス&lt;strong&gt;S&lt;/strong&gt;で未定義になると、それらが再度書き込まれるまで、サブパス&lt;strong&gt;Sで&lt;/strong&gt;始まるサブパス依存関係チェーンのサブパスに対して未定義のままになります。ただし、これらのサブパスがアタッチメントを使用または保持している場合、サブパス&lt;strong&gt;S &lt;sub&gt;1で&lt;/sub&gt;&lt;/strong&gt;始まる他のサブパス依存関係チェーンのサブパスに対しては有効です。</target>
        </trans-unit>
        <trans-unit id="fbd2d6f3d71e555a3df68816f77996beae4536c2" translate="yes" xml:space="preserve">
          <source>Once the orientation of triangles is determined, they are culled according to the &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;::&lt;code&gt;cullMode&lt;/code&gt; property of the currently active pipeline. Possible values are:</source>
          <target state="translated">三角形の方向が決定されると、それらは現在アクティブなパイプラインの&lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt; :: &lt;code&gt;cullMode&lt;/code&gt; プロパティに従ってカリングされます。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="19e278dc971c80ae5679ac5fc2ed32eade32ae2d" translate="yes" xml:space="preserve">
          <source>Once the source and destination blend factors have been selected, they along with the source and destination components are passed to the blending operations. RGB and alpha components &lt;strong&gt;can&lt;/strong&gt; use different operations. Possible values of &lt;a href=&quot;#VkBlendOp&quot;&gt;VkBlendOp&lt;/a&gt;, specifying the operations, are:</source>
          <target state="translated">ソースと宛先のブレンド係数が選択されると、それらはソースと宛先のコンポーネントとともにブレンド操作に渡されます。RGBおよびアルファコンポーネント&lt;strong&gt;は&lt;/strong&gt;異なる演算&lt;strong&gt;を&lt;/strong&gt;使用&lt;strong&gt;でき&lt;/strong&gt;ます。操作を指定する&lt;a href=&quot;#VkBlendOp&quot;&gt;VkBlendOpの&lt;/a&gt;可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cdb181b1917416479c4abab65f39edb8bbdafa17" translate="yes" xml:space="preserve">
          <source>Only one of &lt;code&gt;pImageInfo&lt;/code&gt;, &lt;code&gt;pBufferInfo&lt;/code&gt;, or &lt;code&gt;pTexelBufferView&lt;/code&gt; members is used according to the descriptor type specified in the &lt;code&gt;descriptorType&lt;/code&gt; member of the containing &lt;code&gt;VkWriteDescriptorSet&lt;/code&gt; structure, as specified below.</source>
          <target state="translated">&lt;code&gt;pImageInfo&lt;/code&gt; 示すように、含まれている &lt;code&gt;VkWriteDescriptorSet&lt;/code&gt; 構造体の &lt;code&gt;descriptorType&lt;/code&gt; メンバーで指定された記述子タイプに従って、pImageInfo、 &lt;code&gt;pBufferInfo&lt;/code&gt; 、または &lt;code&gt;pTexelBufferView&lt;/code&gt; メンバーの1 つのみが使用されます。</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="5003bfd94c3da2ddd802162c03d7700d6fbe5e7d" translate="yes" xml:space="preserve">
          <source>Otherwise an implementation will allocate memory through an alternative mechanism that is unspecified.</source>
          <target state="translated">そうでない場合は、実装は不特定の代替メカニズムを使ってメモリを割り当てます。</target>
        </trans-unit>
        <trans-unit id="4b490826635035295b80d1095244d3d154d5ba32" translate="yes" xml:space="preserve">
          <source>Otherwise, the counter is incremented by zero or more.</source>
          <target state="translated">それ以外の場合は、カウンタが0以上インクリメントされます。</target>
        </trans-unit>
        <trans-unit id="9df574100a2071d4e544e88390c44053b7b4fc93" translate="yes" xml:space="preserve">
          <source>Otherwise, the line width is set by calling &lt;code&gt;vkCmdSetLineWidth&lt;/code&gt;:</source>
          <target state="translated">それ以外の場合、線幅は &lt;code&gt;vkCmdSetLineWidth&lt;/code&gt; を呼び出して設定されます。</target>
        </trans-unit>
        <trans-unit id="6071415d975ac5454c7882e8ba8d2ce7b3a385c1" translate="yes" xml:space="preserve">
          <source>Otherwise, to dynamically set and change the blend constant, call:</source>
          <target state="translated">それ以外の場合は、ブレンド定数を動的に設定したり変更したりするには、コールします。</target>
        </trans-unit>
        <trans-unit id="4a925b0f4f83525d4f42d82a3f2aa2d5ed2ae603" translate="yes" xml:space="preserve">
          <source>Out of memory errors do not damage any currently existing Vulkan objects. Objects that have already been successfully created &lt;strong&gt;can&lt;/strong&gt; still be used by the application.</source>
          <target state="translated">メモリ不足エラーは、現在存在しているVulkanオブジェクトに損傷を与えません。すでに正常に作成されたオブジェクトは、引き続きアプリケーションで使用&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="404b141df9bcae25c9956c2c2d089393661f836b" translate="yes" xml:space="preserve">
          <source>Out-of-bounds atomics &lt;strong&gt;may&lt;/strong&gt; modify values within the memory range(s) bound to the buffer, but &lt;strong&gt;must&lt;/strong&gt; not modify any other memory, and return an undefined value.</source>
          <target state="translated">範囲外のアトミック&lt;strong&gt;は&lt;/strong&gt;、バッファにバインドされたメモリ範囲内の値を変更できますが、他のメモリを変更して&lt;strong&gt;はなら&lt;/strong&gt;ず、未定義の値を返す&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="d8876391b621655e779ba6e4af0e1bcf6a09ddc6" translate="yes" xml:space="preserve">
          <source>Out-of-bounds buffer loads will return any of the following values:</source>
          <target state="translated">アウトオブバウンズバッファロードは、以下のいずれかの値を返します。</target>
        </trans-unit>
        <trans-unit id="35c4eb67b67e136b99bae8c66e353bcc9499cfd1" translate="yes" xml:space="preserve">
          <source>Out-of-bounds writes &lt;strong&gt;may&lt;/strong&gt; modify values within the memory range(s) bound to the buffer, but &lt;strong&gt;must&lt;/strong&gt; not modify any other memory.</source>
          <target state="translated">範囲外の書き込み&lt;strong&gt;は&lt;/strong&gt;、バッファにバインドされたメモリ範囲内の値を変更する場合が&lt;strong&gt;あり&lt;/strong&gt;ますが、他のメモリを変更して&lt;strong&gt;はなりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="b7efb76a74598f9f246f303d790fc5073191889d" translate="yes" xml:space="preserve">
          <source>Outside</source>
          <target state="translated">Outside</target>
        </trans-unit>
        <trans-unit id="98f005cca3748f1d422239557995a36c39f9750c" translate="yes" xml:space="preserve">
          <source>PFN_vkAllocationFunction - Application-defined memory allocation function</source>
          <target state="translated">PFN_vkAllocationFunction-アプリケーション定義のメモリ割り当て関数.</target>
        </trans-unit>
        <trans-unit id="cf99e588bfeb565e4ad2afb77a88fa6fbdd8d077" translate="yes" xml:space="preserve">
          <source>PFN_vkAllocationFunction(3)</source>
          <target state="translated">PFN_vkAllocationFunction(3)</target>
        </trans-unit>
        <trans-unit id="a96c98dbb5073e4075c5489c7a0e16679ca6fc02" translate="yes" xml:space="preserve">
          <source>PFN_vkFreeFunction - Application-defined memory free function</source>
          <target state="translated">PFN_vkFreeFunction-アプリケーション定義のメモリ解放関数.</target>
        </trans-unit>
        <trans-unit id="c223ad0cad2796c92fa438b14b325e78c8efa0f1" translate="yes" xml:space="preserve">
          <source>PFN_vkFreeFunction(3)</source>
          <target state="translated">PFN_vkFreeFunction(3)</target>
        </trans-unit>
        <trans-unit id="0dc17b74dddc957f332c25a9e302ca1ad2a82db5" translate="yes" xml:space="preserve">
          <source>PFN_vkInternalAllocationNotification - Application-defined memory allocation notification function</source>
          <target state="translated">PFN_vkInternalAllocationNotification-アプリケーション定義のメモリ割り当て通知機能</target>
        </trans-unit>
        <trans-unit id="be173227812acd4badbec2a976d3aa7ffd67a366" translate="yes" xml:space="preserve">
          <source>PFN_vkInternalAllocationNotification(3)</source>
          <target state="translated">PFN_vkInternalAllocationNotification(3)</target>
        </trans-unit>
        <trans-unit id="0a833a79f8589e98cb93eb4e8243bed22f0103f0" translate="yes" xml:space="preserve">
          <source>PFN_vkInternalFreeNotification - Application-defined memory free notification function</source>
          <target state="translated">PFN_vkInternalFreeNotification-アプリケーション定義のメモリ解放通知関数</target>
        </trans-unit>
        <trans-unit id="b167cabb347cf03fe7f776eb6caed1cbb80222f5" translate="yes" xml:space="preserve">
          <source>PFN_vkInternalFreeNotification(3)</source>
          <target state="translated">PFN_vkInternalFreeNotification(3)</target>
        </trans-unit>
        <trans-unit id="3933bdd6b222083665e4f9258512b4a2d65e82e4" translate="yes" xml:space="preserve">
          <source>PFN_vkReallocationFunction - Application-defined memory reallocation function</source>
          <target state="translated">PFN_vkReallocationFunction-アプリケーション定義のメモリ再割り当て関数.</target>
        </trans-unit>
        <trans-unit id="c4dcf233c2b3204f177d33e50ae7e818f3564a3c" translate="yes" xml:space="preserve">
          <source>PFN_vkReallocationFunction(3)</source>
          <target state="translated">PFN_vkReallocationFunction(3)</target>
        </trans-unit>
        <trans-unit id="c21d38d270b0abd492e0636618983996c7ce636c" translate="yes" xml:space="preserve">
          <source>PFN_vkVoidFunction - Dummy function pointer type returned by queries</source>
          <target state="translated">PFN_vkVoidFunction-クエリによって返されるダミー関数ポインタの型.</target>
        </trans-unit>
        <trans-unit id="f881db55849ec572c6df800e7e9c3d68dcdb53fe" translate="yes" xml:space="preserve">
          <source>PFN_vkVoidFunction(3)</source>
          <target state="translated">PFN_vkVoidFunction(3)</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="c2dc50c9ba7624d2e0385fba982c4c65b155ad77" translate="yes" xml:space="preserve">
          <source>Performance-critical commands generally do not have return codes. If a run time error occurs in such commands, the implementation will defer reporting the error until a specified point. For commands that record into command buffers (&lt;code&gt;vkCmd*&lt;/code&gt;) run time errors are reported by &lt;code&gt;vkEndCommandBuffer&lt;/code&gt;.</source>
          <target state="translated">通常、パフォーマンスが重要なコマンドには戻りコードがありません。このようなコマンドで実行時エラーが発生した場合、実装は指定されたポイントまでエラーの報告を延期します。コマンドバッファー（ &lt;code&gt;vkCmd*&lt;/code&gt; ）に記録するコマンドの場合、ランタイムエラーは &lt;code&gt;vkEndCommandBuffer&lt;/code&gt; によって報告されます。</target>
        </trans-unit>
        <trans-unit id="89d1eb1bb0ffac331d140d5ab0fb09530b43d2f6" translate="yes" xml:space="preserve">
          <source>Physical devices are represented by &lt;code&gt;VkPhysicalDevice&lt;/code&gt; handles:</source>
          <target state="translated">物理デバイスは &lt;code&gt;VkPhysicalDevice&lt;/code&gt; ハンドルで表されます：</target>
        </trans-unit>
        <trans-unit id="dcf6901798d7a92cc7c2fd7c970d73630d8a5707" translate="yes" xml:space="preserve">
          <source>Pipeline Type</source>
          <target state="translated">パイプラインタイプ</target>
        </trans-unit>
        <trans-unit id="736e52cb366c0485215c5ce5b04d323e5b685380" translate="yes" xml:space="preserve">
          <source>Pipeline cache objects &lt;strong&gt;can&lt;/strong&gt; be merged using the command:</source>
          <target state="translated">パイプラインキャッシュオブジェクト&lt;strong&gt;は&lt;/strong&gt;、次のコマンドを使用してマージ&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="533d75593ccf045730391f172b61a9a4c82a7a4d" translate="yes" xml:space="preserve">
          <source>Pipeline cache objects allow the result of pipeline construction to be reused between pipelines and between runs of an application. Reuse between pipelines is achieved by passing the same pipeline cache object when creating multiple related pipelines. Reuse across runs of an application is achieved by retrieving pipeline cache contents in one run of an application, saving the contents, and using them to preinitialize a pipeline cache on a subsequent run. The contents of the pipeline cache objects are managed by the implementation. Applications &lt;strong&gt;can&lt;/strong&gt; manage the host memory consumed by a pipeline cache object and control the amount of data retrieved from a pipeline cache object.</source>
          <target state="translated">パイプラインキャッシュオブジェクトを使用すると、パイプライン構築の結果をパイプライン間およびアプリケーションの実行間で再利用できます。パイプライン間の再利用は、複数の関連するパイプラインを作成するときに同じパイプラインキャッシュオブジェクトを渡すことによって実現されます。アプリケーションの実行全体での再利用は、アプリケーションの1回の実行でパイプラインキャッシュのコンテンツを取得し、コンテンツを保存し、それらを使用して次の実行でパイプラインキャッシュを事前初期化することで実現されます。パイプラインキャッシュオブジェクトの内容は、実装によって管理されます。アプリケーション&lt;strong&gt;は&lt;/strong&gt;、パイプラインキャッシュオブジェクトによって消費されるホストメモリ&lt;strong&gt;を&lt;/strong&gt;管理し、パイプラインキャッシュオブジェクトから取得されるデータの量を制御できます。</target>
        </trans-unit>
        <trans-unit id="751ae5b56ae15ee44718f40db7f933ce7a80a0f4" translate="yes" xml:space="preserve">
          <source>Pipeline cache objects are represented by &lt;code&gt;VkPipelineCache&lt;/code&gt; handles:</source>
          <target state="translated">パイプラインキャッシュオブジェクトは、 &lt;code&gt;VkPipelineCache&lt;/code&gt; ハンドルで表されます。</target>
        </trans-unit>
        <trans-unit id="c94f9ab768f70b545f69ac3ebc7b291c1682b364" translate="yes" xml:space="preserve">
          <source>Pipeline layout objects are represented by &lt;code&gt;VkPipelineLayout&lt;/code&gt; handles:</source>
          <target state="translated">パイプラインレイアウトオブジェクトは、 &lt;code&gt;VkPipelineLayout&lt;/code&gt; ハンドルによって表されます。</target>
        </trans-unit>
        <trans-unit id="aa28ec835f4baaeef20fd0f5807c5bb12f0e3ba7" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt;::&lt;code&gt;loadOp&lt;/code&gt; and &lt;code&gt;stencilLoadOp&lt;/code&gt;, specifying how the contents of the attachment are treated, are:</source>
          <target state="translated">&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt; :: &lt;code&gt;loadOp&lt;/code&gt; および &lt;code&gt;stencilLoadOp&lt;/code&gt; の可能な値は、添付ファイルのコンテンツの処理方法を指定します。</target>
        </trans-unit>
        <trans-unit id="48e2175d98f8146cbbd1ccb29ea534d0f10836f1" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt;::&lt;code&gt;storeOp&lt;/code&gt; and &lt;code&gt;stencilStoreOp&lt;/code&gt;, specifying how the contents of the attachment are treated, are:</source>
          <target state="translated">添付ファイルのコンテンツの処理方法を指定する&lt;a href=&quot;#VkAttachmentDescription&quot;&gt;VkAttachmentDescription&lt;/a&gt; :: &lt;code&gt;storeOp&lt;/code&gt; および &lt;code&gt;stencilStoreOp&lt;/code&gt; の可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="872dba75ec83312d85258077f0407aba893ab1f7" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkCommandBufferAllocateInfo&quot;&gt;VkCommandBufferAllocateInfo&lt;/a&gt;::&lt;code&gt;flags&lt;/code&gt;, specifying the command buffer level, are:</source>
          <target state="translated">コマンドバッファレベルを指定する&lt;a href=&quot;#VkCommandBufferAllocateInfo&quot;&gt;VkCommandBufferAllocateInfo&lt;/a&gt; :: &lt;code&gt;flags&lt;/code&gt; の可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="15d80b579dd6b29f9d09f2e4a542f4bee53c216b" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;::&lt;code&gt;imageType&lt;/code&gt;, specifying the basic dimensionality of an image, are:</source>
          <target state="translated">&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; :: &lt;code&gt;imageType&lt;/code&gt; の可能な値は、画像の基本的な次元を指定します：</target>
        </trans-unit>
        <trans-unit id="e658478121399c9cee4d22776fdd24bbaad5f8dd" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;::&lt;code&gt;tiling&lt;/code&gt;, specifying the tiling arrangement of data elements in an image, are:</source>
          <target state="translated">画像内のデータ要素のタイリング配置を指定する&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; :: &lt;code&gt;tiling&lt;/code&gt; の可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3472adc60019ec88bdedc899b48d34302ffb427a" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkQueryPoolCreateInfo&quot;&gt;VkQueryPoolCreateInfo&lt;/a&gt;::&lt;code&gt;queryType&lt;/code&gt;, specifying the type of queries managed by the pool, are:</source>
          <target state="translated">&lt;a href=&quot;#VkQueryPoolCreateInfo&quot;&gt;VkQueryPoolCreateInfo&lt;/a&gt; :: &lt;code&gt;queryType&lt;/code&gt; の可能な値は、プールによって管理されるクエリのタイプを指定します：</target>
        </trans-unit>
        <trans-unit id="325dc7d4f369a127c6a18ddba1ceec92b4c7361c" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;::&lt;code&gt;borderColor&lt;/code&gt;, specifying the border color used for texture lookups, are:</source>
          <target state="translated">&lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; :: &lt;code&gt;borderColor&lt;/code&gt; の可能な値は、テクスチャルックアップに使用される境界線の色を指定します。</target>
        </trans-unit>
        <trans-unit id="67cf4b87b3d0ebae4dcb435fd2d6d4f1a069f4b9" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#VkVertexInputBindingDescription&quot;&gt;VkVertexInputBindingDescription&lt;/a&gt;::&lt;code&gt;inputRate&lt;/code&gt;, specifying the rate at which vertex attributes are pulled from buffers, are:</source>
          <target state="translated">&lt;a href=&quot;#VkVertexInputBindingDescription&quot;&gt;VkVertexInputBindingDescription&lt;/a&gt; :: &lt;code&gt;inputRate&lt;/code&gt; の可能な値は、頂点属性がバッファーからプルされる速度を指定します：</target>
        </trans-unit>
        <trans-unit id="0ce794c0d55efc3a17e309868ce7fe2076ed9af3" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#vkCmdBeginRenderPass&quot;&gt;vkCmdBeginRenderPass&lt;/a&gt;::&lt;code&gt;contents&lt;/code&gt;, specifying how the commands in the first subpass will be provided, are:</source>
          <target state="translated">最初のサブパスのコマンドがどのように提供されるかを指定する&lt;a href=&quot;#vkCmdBeginRenderPass&quot;&gt;vkCmdBeginRenderPass&lt;/a&gt; :: &lt;code&gt;contents&lt;/code&gt; の可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="464de956a38bdfc6a97d76b20032cd5973274948" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt;::&lt;code&gt;indexType&lt;/code&gt;, specifying the size of indices, are:</source>
          <target state="translated">インデックスのサイズを指定する&lt;a href=&quot;#vkCmdBindIndexBuffer&quot;&gt;vkCmdBindIndexBuffer&lt;/a&gt; :: &lt;code&gt;indexType&lt;/code&gt; の可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="823e3f19189a88816b4274a732a6a554c432e8fa" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;a href=&quot;#vkCmdBindPipeline&quot;&gt;vkCmdBindPipeline&lt;/a&gt;::&lt;code&gt;pipelineBindPoint&lt;/code&gt;, specifying the bind point of a pipeline object, are:</source>
          <target state="translated">パイプラインオブジェクトのバインドポイントを指定する&lt;a href=&quot;#vkCmdBindPipeline&quot;&gt;vkCmdBindPipeline&lt;/a&gt; :: &lt;code&gt;pipelineBindPoint&lt;/code&gt; の可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="80870cec54d70e2b07c3137f824ea53ea0d00781" translate="yes" xml:space="preserve">
          <source>Possible values of &lt;code&gt;minImageTransferGranularity&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;minImageTransferGranularity&lt;/code&gt; の可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e8ff2e2c8d74cc92b1471f53f25a99f62645770c" translate="yes" xml:space="preserve">
          <source>Possible values of VkStencilOpState::&lt;code&gt;compareOp&lt;/code&gt;, specifying the stencil comparison function, are:</source>
          <target state="translated">ステンシル比較関数を指定するVkStencilOpState :: &lt;code&gt;compareOp&lt;/code&gt; の可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="98208b8dbde05437fcf5398427669bfb3e1bdce2" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;::&lt;code&gt;polygonMode&lt;/code&gt; property of the currently active pipeline, specifying the method of rasterization for polygons, are:</source>
          <target state="translated">ポリゴンのラスタライズ方法を指定する、現在アクティブなパイプラインの&lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt; :: &lt;code&gt;polygonMode&lt;/code&gt; プロパティの可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="90062fcf92a6566ebe8df3b9a5855285cf8c0ae0" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;::&lt;code&gt;addressMode&lt;/code&gt;* parameters, specifying the behavior of sampling with coordinates outside the range [0,1] for the respective u, v, or w coordinate as defined in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-wrapping-operation&quot;&gt;Wrapping Operation&lt;/a&gt; section, are:</source>
          <target state="translated">&lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VrSamplerCreateInfo&lt;/a&gt; :: &lt;code&gt;addressMode&lt;/code&gt; *パラメータの可能な値は、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-wrapping-operation&quot;&gt;ラッピング操作の&lt;/a&gt;セクションで定義されているように、それぞれのu、v、またはw座標の範囲[0,1]の外側の座標でのサンプリングの動作を指定します。</target>
        </trans-unit>
        <trans-unit id="ffb26ba9fc0a5b9add232f85cd09cf3d9b9737c3" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;::&lt;code&gt;magFilter&lt;/code&gt; and &lt;code&gt;minFilter&lt;/code&gt; parameters, specifying filters used for texture lookups, are:</source>
          <target state="translated">テクスチャルックアップに使用されるフィルターを指定する&lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; :: &lt;code&gt;magFilter&lt;/code&gt; および &lt;code&gt;minFilter&lt;/code&gt; パラメーターの可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="519e9494c43a124109cd42ea56657536ec94fe18" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt;::&lt;code&gt;mipmapMode&lt;/code&gt;, specifying the mipmap mode used for texture lookups, are:</source>
          <target state="translated">テクスチャルックアップに使用されるミップマップモードを指定する&lt;a href=&quot;#VkSamplerCreateInfo&quot;&gt;VkSamplerCreateInfo&lt;/a&gt; :: &lt;code&gt;mipmapMode&lt;/code&gt; の可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="20a01be1a06626e33b548f708e1af96f08c32dfb" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;code&gt;failOp&lt;/code&gt;, &lt;code&gt;passOp&lt;/code&gt;, and &lt;code&gt;depthFailOp&lt;/code&gt; members of &lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt;, specifying what happens to the stored stencil value if this or certain subsequent tests fail or pass, are:</source>
          <target state="translated">可能な値 &lt;code&gt;failOp&lt;/code&gt; 、 &lt;code&gt;passOp&lt;/code&gt; 、及び &lt;code&gt;depthFailOp&lt;/code&gt; 用のメンバー&lt;a href=&quot;#VkStencilOpState&quot;&gt;VkStencilOpState&lt;/a&gt;、この又は特定の後続のテストが失敗するか、またはパスがある場合、格納されたステンシル値がどうなるかを指定します。</target>
        </trans-unit>
        <trans-unit id="e901d9074d46f1041fd55dd4a04ce03fea167038" translate="yes" xml:space="preserve">
          <source>Possible values of the &lt;code&gt;flags&lt;/code&gt; member of &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; and &lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfo&lt;/a&gt;, specifying how a pipeline is created, are:</source>
          <target state="translated">&lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt;および&lt;a href=&quot;#VkComputePipelineCreateInfo&quot;&gt;VkComputePipelineCreateInfoの&lt;/a&gt; &lt;code&gt;flags&lt;/code&gt; メンバーの可能な値は、パイプラインの作成方法を指定します。</target>
        </trans-unit>
        <trans-unit id="dabbf4a23c20846772bb2c3a8a1be6df779b1396" translate="yes" xml:space="preserve">
          <source>Possible values of the members of &lt;a href=&quot;#VkComponentMapping&quot;&gt;VkComponentMapping&lt;/a&gt;, specifying the component values placed in each component of the output vector, are:</source>
          <target state="translated">出力ベクトルの各コンポーネントに配置されるコンポーネント値を指定する&lt;a href=&quot;#VkComponentMapping&quot;&gt;VkComponentMapping&lt;/a&gt;のメンバーの可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="8e97d3876c89c0193ae5aa1071665ab860982909" translate="yes" xml:space="preserve">
          <source>Possible values of the second group of four bytes in the header returned by &lt;a href=&quot;#vkGetPipelineCacheData&quot;&gt;vkGetPipelineCacheData&lt;/a&gt;, encoding the pipeline cache version, are:</source>
          <target state="translated">パイプラインキャッシュバージョンをエンコードする、&lt;a href=&quot;#vkGetPipelineCacheData&quot;&gt;vkGetPipelineCacheData&lt;/a&gt;によって返されるヘッダーの4バイトの2番目のグループの可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a9a96ec019494d5b8b041c1d2468061ae66e35d5" translate="yes" xml:space="preserve">
          <source>Primary</source>
          <target state="translated">Primary</target>
        </trans-unit>
        <trans-unit id="6494e5e67ef2e1017abc99786e54979d0531a8e9" translate="yes" xml:space="preserve">
          <source>Push constants represent a high speed path to modify constant data in pipelines that is expected to outperform memory-backed resource updates.</source>
          <target state="translated">プッシュ定数は、パイプライン内の定数データを変更するための高速パスを表し、メモリバックアップされたリソース更新よりも優れた性能が期待されています。</target>
        </trans-unit>
        <trans-unit id="e6932d084c70b708967c0a9ce888626651eed1c5" translate="yes" xml:space="preserve">
          <source>Queries are managed using &lt;em&gt;query pool&lt;/em&gt; objects. Each query pool is a collection of a specific number of queries of a particular type.</source>
          <target state="translated">クエリは、&lt;em&gt;クエリプール&lt;/em&gt;オブジェクトを使用して管理されます。各クエリプールは、特定のタイプの特定数のクエリのコレクションです。</target>
        </trans-unit>
        <trans-unit id="405eac455e30ced015c459b7bd40e581c63c254c" translate="yes" xml:space="preserve">
          <source>Query pools are represented by &lt;code&gt;VkQueryPool&lt;/code&gt; handles:</source>
          <target state="translated">クエリプールは、 &lt;code&gt;VkQueryPool&lt;/code&gt; ハンドルで表されます。</target>
        </trans-unit>
        <trans-unit id="42f1973dc7dedafa2dad2b6b3beddd4e6d4d91cd" translate="yes" xml:space="preserve">
          <source>Queues are represented by &lt;code&gt;VkQueue&lt;/code&gt; handles:</source>
          <target state="translated">キューは &lt;code&gt;VkQueue&lt;/code&gt; ハンドルで表されます：</target>
        </trans-unit>
        <trans-unit id="a2023e982b3996bdcebed6e8b177c4fae57b60f1" translate="yes" xml:space="preserve">
          <source>Queues supporting graphics and/or compute operations &lt;strong&gt;must&lt;/strong&gt; report (1,1,1) in &lt;code&gt;minImageTransferGranularity&lt;/code&gt;, meaning that there are no additional restrictions on the granularity of image transfer operations for these queues. Other queues supporting image transfer operations are only &lt;strong&gt;required&lt;/strong&gt; to support whole mip level transfers, thus &lt;code&gt;minImageTransferGranularity&lt;/code&gt; for queues belonging to such queue families &lt;strong&gt;may&lt;/strong&gt; be (0,0,0).</source>
          <target state="translated">グラフィックスおよび/または計算操作をサポートするキューは、 &lt;code&gt;minImageTransferGranularity&lt;/code&gt; で（1,1,1）を報告する&lt;strong&gt;必要&lt;/strong&gt;があります。つまり、これらのキューの画像転送操作の粒度に追加の制限はありません。イメージ転送操作をサポートする他のキューは、ミップレベルの転送全体をサポートするためにのみ&lt;strong&gt;必要である&lt;/strong&gt;ため、そのようなキューファミリーに属するキューの &lt;code&gt;minImageTransferGranularity&lt;/code&gt; は（0,0,0）になる&lt;strong&gt;場合&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b79e00f9362238b2b786fd62ee2d68330a74f5aa" translate="yes" xml:space="preserve">
          <source>R = R&lt;sub&gt;d&lt;/sub&gt; &amp;times; D&lt;sub&gt;r&lt;/sub&gt; - R&lt;sub&gt;s0&lt;/sub&gt; &amp;times; S&lt;sub&gt;r&lt;/sub&gt;</source>
          <target state="translated">R = R &lt;sub&gt;d&lt;/sub&gt; &amp;times;D &lt;sub&gt;r&lt;/sub&gt; -R &lt;sub&gt;s0&lt;/sub&gt; &amp;times;S &lt;sub&gt;r&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="5d72bde2bb2027522eff90ff13a01dc700d82dc0" translate="yes" xml:space="preserve">
          <source>R = R&lt;sub&gt;s0&lt;/sub&gt; &amp;times; S&lt;sub&gt;r&lt;/sub&gt; + R&lt;sub&gt;d&lt;/sub&gt; &amp;times; D&lt;sub&gt;r&lt;/sub&gt;</source>
          <target state="translated">R = R &lt;sub&gt;s0&lt;/sub&gt; &amp;times;S &lt;sub&gt;r&lt;/sub&gt; + R &lt;sub&gt;d&lt;/sub&gt; &amp;times;D &lt;sub&gt;r&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="541ddae78f9326fae191c0813c30a03451658fd3" translate="yes" xml:space="preserve">
          <source>R = R&lt;sub&gt;s0&lt;/sub&gt; &amp;times; S&lt;sub&gt;r&lt;/sub&gt; - R&lt;sub&gt;d&lt;/sub&gt; &amp;times; D&lt;sub&gt;r&lt;/sub&gt;</source>
          <target state="translated">R = R &lt;sub&gt;s0&lt;/sub&gt; &amp;times;S &lt;sub&gt;r&lt;/sub&gt; -R &lt;sub&gt;d&lt;/sub&gt; &amp;times;D &lt;sub&gt;r&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="903b87da3367a87b4418488f7c352f5512c9ab51" translate="yes" xml:space="preserve">
          <source>R = max(R&lt;sub&gt;s0&lt;/sub&gt;,R&lt;sub&gt;d&lt;/sub&gt;)</source>
          <target state="translated">R = max（R &lt;sub&gt;s0&lt;/sub&gt;、R &lt;sub&gt;d&lt;/sub&gt;）</target>
        </trans-unit>
        <trans-unit id="30f6402df32410d0245d87d08ea9fd2d5e27d538" translate="yes" xml:space="preserve">
          <source>R = min(R&lt;sub&gt;s0&lt;/sub&gt;,R&lt;sub&gt;d&lt;/sub&gt;)</source>
          <target state="translated">R = min（R &lt;sub&gt;s0&lt;/sub&gt;、R &lt;sub&gt;d&lt;/sub&gt;）</target>
        </trans-unit>
        <trans-unit id="41093711e07a6a995d19ad0de7c1c812aa975ae9" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;c&lt;/sub&gt;,G&lt;sub&gt;c&lt;/sub&gt;,B&lt;sub&gt;c&lt;/sub&gt; and A&lt;sub&gt;c&lt;/sub&gt; represent the blend constant R, G, B, and A components, respectively.</source>
          <target state="translated">R &lt;sub&gt;c&lt;/sub&gt;、G &lt;sub&gt;c&lt;/sub&gt;、B &lt;sub&gt;c&lt;/sub&gt;、およびA &lt;sub&gt;c&lt;/sub&gt;は、それぞれブレンド定数R、G、B、およびAコンポーネントを表します。</target>
        </trans-unit>
        <trans-unit id="dcb36067343b917d6a26a4a272e4095a400971f2" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;d&lt;/sub&gt;, G&lt;sub&gt;d&lt;/sub&gt;, B&lt;sub&gt;d&lt;/sub&gt; and A&lt;sub&gt;d&lt;/sub&gt; represent the R, G, B, and A components of the destination color. That is, the color currently in the corresponding color attachment for this fragment/sample.</source>
          <target state="translated">R &lt;sub&gt;d&lt;/sub&gt;、G &lt;sub&gt;d&lt;/sub&gt;、B &lt;sub&gt;d&lt;/sub&gt;、およびA &lt;sub&gt;d&lt;/sub&gt;は、デスティネーションカラーのR、G、B、およびAコンポーネントを表します。つまり、このフラグメント/サンプルの対応するカラーアタッチメントに現在ある色。</target>
        </trans-unit>
        <trans-unit id="6bc6a07cd4772de29ef4220bac4e62cdcfd2db80" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;d&lt;/sub&gt;,G&lt;sub&gt;d&lt;/sub&gt;,B&lt;sub&gt;d&lt;/sub&gt; and A&lt;sub&gt;d&lt;/sub&gt; represent the R, G, B, and A components of the destination color. That is, the color currently in the corresponding color attachment for this fragment/sample.</source>
          <target state="translated">R &lt;sub&gt;d&lt;/sub&gt;、G &lt;sub&gt;d&lt;/sub&gt;、B &lt;sub&gt;d&lt;/sub&gt;およびA &lt;sub&gt;d&lt;/sub&gt;は、デスティネーションカラーのR、G、B、およびAコンポーネントを表します。つまり、このフラグメント/サンプルの対応するカラーアタッチメントに現在ある色。</target>
        </trans-unit>
        <trans-unit id="6055fd0ae08f2f92ad8f15578c98a87ac6104d8e" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;s0&lt;/sub&gt;, G&lt;sub&gt;s0&lt;/sub&gt;, B&lt;sub&gt;s0&lt;/sub&gt; and A&lt;sub&gt;s0&lt;/sub&gt; represent the first source color R, G, B, and A components, respectively.</source>
          <target state="translated">R &lt;sub&gt;s0&lt;/sub&gt;、G &lt;sub&gt;s0&lt;/sub&gt;、B &lt;sub&gt;s0&lt;/sub&gt;、およびA &lt;sub&gt;s0&lt;/sub&gt;は、最初のソースカラーのR、G、B、およびAコンポーネントをそれぞれ表します。</target>
        </trans-unit>
        <trans-unit id="9eb2dffc9a63ae4cadfc67e309e845ca3139cdde" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;s0&lt;/sub&gt;,G&lt;sub&gt;s0&lt;/sub&gt;,B&lt;sub&gt;s0&lt;/sub&gt; and A&lt;sub&gt;s0&lt;/sub&gt; represent the first source color R, G, B, and A components, respectively, for the fragment output location corresponding to the color attachment being blended.</source>
          <target state="translated">R &lt;sub&gt;s0&lt;/sub&gt;、G &lt;sub&gt;s0&lt;/sub&gt;、B &lt;sub&gt;s0&lt;/sub&gt;およびA &lt;sub&gt;s0&lt;/sub&gt;は、ブレンドされるカラーアタッチメントに対応するフラグメント出力場所の最初のソースカラーR、G、B、およびAコンポーネントをそれぞれ表します。</target>
        </trans-unit>
        <trans-unit id="7bd987507e4810feb58da0028a40db64b3f86c61" translate="yes" xml:space="preserve">
          <source>R&lt;sub&gt;s1&lt;/sub&gt;,G&lt;sub&gt;s1&lt;/sub&gt;,B&lt;sub&gt;s1&lt;/sub&gt; and A&lt;sub&gt;s1&lt;/sub&gt; represent the second source color R, G, B, and A components, respectively, used in dual source blending modes, for the fragment output location corresponding to the color attachment being blended.</source>
          <target state="translated">R &lt;sub&gt;s1&lt;/sub&gt;、G &lt;sub&gt;s1&lt;/sub&gt;、B &lt;sub&gt;s1&lt;/sub&gt;およびA &lt;sub&gt;s1&lt;/sub&gt;は、ブレンドされるカラーアタッチメントに対応するフラグメント出力場所に対して、デュアルソースブレンドモードで使用される2番目のソースカラーR、G、B、Aコンポーネントをそれぞれ表します。</target>
        </trans-unit>
        <trans-unit id="32b12811dec521407d505d082316c80efec8882d" translate="yes" xml:space="preserve">
          <source>RGB Blend Factors (S&lt;sub&gt;r&lt;/sub&gt;,S&lt;sub&gt;g&lt;/sub&gt;,S&lt;sub&gt;b&lt;/sub&gt;) or (D&lt;sub&gt;r&lt;/sub&gt;,D&lt;sub&gt;g&lt;/sub&gt;,D&lt;sub&gt;b&lt;/sub&gt;)</source>
          <target state="translated">RGBブレンド係数（S &lt;sub&gt;r&lt;/sub&gt;、S &lt;sub&gt;g&lt;/sub&gt;、S &lt;sub&gt;b&lt;/sub&gt;）または（D &lt;sub&gt;r&lt;/sub&gt;、D &lt;sub&gt;g&lt;/sub&gt;、D &lt;sub&gt;b&lt;/sub&gt;）</target>
        </trans-unit>
        <trans-unit id="370cad40414ecb914eb5de3cebbd4a023f87d88c" translate="yes" xml:space="preserve">
          <source>RGB Components</source>
          <target state="translated">RGBコンポーネント</target>
        </trans-unit>
        <trans-unit id="5fdc6a02fc8d3e3a68fd0a8279ebcaba5c6b825f" translate="yes" xml:space="preserve">
          <source>Ranges of buffers and image subresources of image objects created using &lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only be accessed by queues from the queue families specified through the &lt;code&gt;queueFamilyIndexCount&lt;/code&gt; and &lt;code&gt;pQueueFamilyIndices&lt;/code&gt; members of the corresponding create info structures.</source>
          <target state="translated">&lt;code&gt;VK_SHARING_MODE_CONCURRENT&lt;/code&gt; を使用して作成された画像オブジェクトのバッファーおよび画像サブリソースの範囲には、対応する作成情報構造の &lt;code&gt;queueFamilyIndexCount&lt;/code&gt; および &lt;code&gt;pQueueFamilyIndices&lt;/code&gt; メンバーを通じて指定されたキューファミリーのキューからのみアクセスする&lt;strong&gt;必要&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="46d1764eb2bce7a26ef267ad99994d7581714f9f" translate="yes" xml:space="preserve">
          <source>Ranges of buffers and image subresources of image objects created using &lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only be accessed by queues in the same queue family at any given time. In order for a different queue family to be able to interpret the memory contents of a range or image subresource, the application &lt;strong&gt;must&lt;/strong&gt; perform a &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers&quot;&gt;queue family ownership transfer&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VK_SHARING_MODE_EXCLUSIVE&lt;/code&gt; を使用して作成されたイメージオブジェクトのバッファおよびイメージサブリソースの範囲には、常に同じキューファミリのキューのみがアクセスする&lt;strong&gt;必要&lt;/strong&gt;があります。別のキューファミリが範囲またはイメージサブリソースのメモリの内容を解釈できるようにするには、アプリケーションで&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-queue-transfers&quot;&gt;キューファミリの所有権の転送を&lt;/a&gt;実行する&lt;strong&gt;必要&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="bb55598a799c6dc14ac6f5511a072f986028960b" translate="yes" xml:space="preserve">
          <source>Rectangles are used to describe a specified rectangular region of pixels within an image or framebuffer. Rectangles include both an offset and an extent of the same dimensionality, as described above. Two-dimensional rectangles are defined by the structure</source>
          <target state="translated">矩形は、画像またはフレームバッファ内のピクセルの指定された矩形領域を記述するために使用されます。矩形は、上述したように、同一次元のオフセットとエクステントの両方を含みます。二次元の矩形は、次のような構造で定義されます。</target>
        </trans-unit>
        <trans-unit id="f16748ad587919cfdb51f89929df3bfe53c3caa4" translate="yes" xml:space="preserve">
          <source>Render Pass Scope</source>
          <target state="translated">レンダーパスの範囲</target>
        </trans-unit>
        <trans-unit id="b0052913cd9a63d50436b184181efe571d9edb20" translate="yes" xml:space="preserve">
          <source>Render passes are represented by &lt;code&gt;VkRenderPass&lt;/code&gt; handles:</source>
          <target state="translated">レンダーパスは &lt;code&gt;VkRenderPass&lt;/code&gt; ハンドルで表されます。</target>
        </trans-unit>
        <trans-unit id="6321a081af4e30de7dc33639cde2f200dd4fed52" translate="yes" xml:space="preserve">
          <source>Render passes operate in conjunction with &lt;em&gt;framebuffers&lt;/em&gt;. Framebuffers represent a collection of specific memory attachments that a render pass instance uses.</source>
          <target state="translated">レンダーパスは、&lt;em&gt;フレームバッファ&lt;/em&gt;と連動して機能します。フレームバッファは、レンダーパスインスタンスが使用する特定のメモリアタッチメントのコレクションを表します。</target>
        </trans-unit>
        <trans-unit id="a751ea66f504c0018d8354be8014ccbb188e73b5" translate="yes" xml:space="preserve">
          <source>Resetting a command pool recycles all of the resources from all of the command buffers allocated from the command pool back to the command pool. All command buffers that have been allocated from the command pool are put in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;initial state&lt;/a&gt;.</source>
          <target state="translated">コマンドプールをリセットすると、コマンドプールから割り当てられたすべてのコマンドバッファーのすべてのリソースがコマンドプールにリサイクルされます。コマンドプールから割り当てられたすべてのコマンドバッファは、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;初期状態になり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0a3d85c63500389439de4ffe980966faf0012c83" translate="yes" xml:space="preserve">
          <source>Resetting a descriptor pool recycles all of the resources from all of the descriptor sets allocated from the descriptor pool back to the descriptor pool, and the descriptor sets are implicitly freed.</source>
          <target state="translated">ディスクリプタプールをリセットすると、ディスクリプタプールから割り当てられたすべてのディスクリプタセットからのリソースがすべてディスクリプタプールにリサイクルされ、ディスクリプタセットは暗黙のうちに解放されます。</target>
        </trans-unit>
        <trans-unit id="f26e4ddcd779e0ff1d608fbc41a8e53dd1eb3909" translate="yes" xml:space="preserve">
          <source>Resolves are done layer by layer starting with &lt;code&gt;baseArrayLayer&lt;/code&gt; member of &lt;code&gt;srcSubresource&lt;/code&gt; for the source and &lt;code&gt;dstSubresource&lt;/code&gt; for the destination. &lt;code&gt;layerCount&lt;/code&gt; layers are resolved to the destination image.</source>
          <target state="translated">解決さが始まる層毎に行われる &lt;code&gt;baseArrayLayer&lt;/code&gt; のメンバー &lt;code&gt;srcSubresource&lt;/code&gt; 源とするため &lt;code&gt;dstSubresource&lt;/code&gt; 宛先の。 &lt;code&gt;layerCount&lt;/code&gt; レイヤーは宛先イメージに解決されます。</target>
        </trans-unit>
        <trans-unit id="e031e223512bf43c9a34b7730c010ea3489679d5" translate="yes" xml:space="preserve">
          <source>Restarting the assembly of primitives discards the most recent index values if those elements formed an incomplete primitive, and restarts the primitive assembly using the subsequent indices, but only assembling the immediately following element through the end of the originally specified elements. The primitive restart index value comparison is performed before adding the &lt;code&gt;vertexOffset&lt;/code&gt; value to the index value.</source>
          <target state="translated">プリミティブのアセンブリを再起動すると、それらの要素が不完全なプリミティブを形成した場合、最新のインデックス値が破棄され、後続のインデックスを使用してプリミティブアセンブリが再起動されますが、最初に指定された要素の終わりまで直後の要素のみがアセンブルされます。インデックス値に &lt;code&gt;vertexOffset&lt;/code&gt; 値を追加する前に、プリミティブな再起動インデックス値の比較が実行されます。</target>
        </trans-unit>
        <trans-unit id="2990d745269c93c4307be5199105ba4db52fb4f8" translate="yes" xml:space="preserve">
          <source>Return Codes</source>
          <target state="translated">リターンコード</target>
        </trans-unit>
        <trans-unit id="03087aeb540494affd09664d2dd5c836a9e1eebd" translate="yes" xml:space="preserve">
          <source>Run time error codes are returned when a command needs to communicate a failure that could only be detected at run time. All run time error codes are negative values.</source>
          <target state="translated">実行時エラーコードは、コマンドが実行時にしか検出できなかった障害を通信する必要がある場合に返されます。すべての実行時エラーコードは負の値です。</target>
        </trans-unit>
        <trans-unit id="82718830066416e1e4d6604e30d026b103c6d77c" translate="yes" xml:space="preserve">
          <source>S&lt;sub&gt;r&lt;/sub&gt;, S&lt;sub&gt;g&lt;/sub&gt;, S&lt;sub&gt;b&lt;/sub&gt; and S&lt;sub&gt;a&lt;/sub&gt; represent the source blend factor R, G, B, and A components, respectively.</source>
          <target state="translated">S &lt;sub&gt;r&lt;/sub&gt;、S &lt;sub&gt;g&lt;/sub&gt;、S &lt;sub&gt;b&lt;/sub&gt;、およびS &lt;sub&gt;a&lt;/sub&gt;は、それぞれソースブレンドファクターのR、G、B、およびAコンポーネントを表します。</target>
        </trans-unit>
        <trans-unit id="5e7bef6429a6c8fdf454fdc90380e3ad5a3e7f32" translate="yes" xml:space="preserve">
          <source>SPARSE_BINDING</source>
          <target state="translated">SPARSE_BINDING</target>
        </trans-unit>
        <trans-unit id="ba32a67865588081b30edc5d0fa29932fa917d6c" translate="yes" xml:space="preserve">
          <source>Samplers are represented by &lt;code&gt;VkSampler&lt;/code&gt; handles:</source>
          <target state="translated">サンプラーは &lt;code&gt;VkSampler&lt;/code&gt; ハンドルで表されます。</target>
        </trans-unit>
        <trans-unit id="2393e5ca7e23d4e6b269ecc8ac08cf4d08845bda" translate="yes" xml:space="preserve">
          <source>Satisfying this guarantee &lt;strong&gt;may&lt;/strong&gt; require careful ordering by the application, e.g. to read the availability status before reading the results.</source>
          <target state="translated">この保証を満たすには、結果を読み取る前に可用性ステータスを読み取るなど、アプリケーションによる注意深い注文&lt;strong&gt;が&lt;/strong&gt;必要になる&lt;strong&gt;場合が&lt;/strong&gt;あります。</target>
        </trans-unit>
        <trans-unit id="025de599ea0a6262eeb4ea073413e273d0ea875b" translate="yes" xml:space="preserve">
          <source>Secondary</source>
          <target state="translated">Secondary</target>
        </trans-unit>
        <trans-unit id="2fd635ab66f97d4369ec3a93b2e97e7238594654" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-sparseresourcefeatures&quot;&gt;Sparse Resource Features&lt;/a&gt; and &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features&quot;&gt;Physical Device Features&lt;/a&gt; for details of the sparse memory features supported on a device.</source>
          <target state="translated">参照&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-sparseresourcefeatures&quot;&gt;スパースリソースが機能&lt;/a&gt;し、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-features&quot;&gt;物理デバイスが機能&lt;/a&gt;スパースメモリの詳細については、デバイス上でサポートされている機能します。</target>
        </trans-unit>
        <trans-unit id="b6cfb646b30502aa6034a94081097b066feae135" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-sparseresourcefeatures&quot;&gt;Sparse Resource Features&lt;/a&gt; and &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-physicalfeatures&quot;&gt;Sparse Physical Device Features&lt;/a&gt; for more details.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-sparseresourcefeatures&quot;&gt;スパースリソース機能&lt;/a&gt;および&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#sparsememory-physicalfeatures&quot;&gt;スパース物理デバイス機能&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">も参照してください。</target>
        </trans-unit>
        <trans-unit id="b6f5fac8b9a508b0a07b8b3c614feaca73f97698" translate="yes" xml:space="preserve">
          <source>Semaphores are a synchronization primitive that &lt;strong&gt;can&lt;/strong&gt; be used to insert a dependency between batches submitted to queues. Semaphores have two states - signaled and unsignaled. The state of a semaphore &lt;strong&gt;can&lt;/strong&gt; be signaled after execution of a batch of commands is completed. A batch &lt;strong&gt;can&lt;/strong&gt; wait for a semaphore to become signaled before it begins execution, and the semaphore is also unsignaled before the batch begins execution.</source>
          <target state="translated">セマフォは、キューに送信されたバッチ間の依存関係を挿入するために使用&lt;strong&gt;できる&lt;/strong&gt;同期プリミティブです。セマフォには2つの状態があります-信号ありと信号なし。コマンドのバッチの実行が完了した後、セマフォの状態を通知&lt;strong&gt;でき&lt;/strong&gt;ます。バッチ&lt;strong&gt;は&lt;/strong&gt;、セマフォがシグナル化されるのを待ってから実行を開始できます。また、セマフォは、バッチが実行を開始する前にシグナル化されません。</target>
        </trans-unit>
        <trans-unit id="efe35ecb9d649ab5ed42f6929c922bbe3a40f48e" translate="yes" xml:space="preserve">
          <source>Semaphores are represented by &lt;code&gt;VkSemaphore&lt;/code&gt; handles:</source>
          <target state="translated">セマフォは &lt;code&gt;VkSemaphore&lt;/code&gt; ハンドルで表されます。</target>
        </trans-unit>
        <trans-unit id="c3af2061e3e115110eb69727aba2fb4f4f00b1ea" translate="yes" xml:space="preserve">
          <source>Setting the identity swizzle on a component is equivalent to setting the identity mapping on that component. That is:</source>
          <target state="translated">コンポーネントに ID スイズルを設定することは、そのコンポーネントに ID マッピングを設定することと同じです。つまり</target>
        </trans-unit>
        <trans-unit id="3a3b7ecf447ba8b681f779eae2a065ba1ef8b498" translate="yes" xml:space="preserve">
          <source>Several of the synchronization commands include pipeline stage parameters, restricting the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scopes&lt;/a&gt; for that command to just those stages. This allows fine grained control over the exact execution dependencies and accesses performed by action commands. Implementations &lt;strong&gt;should&lt;/strong&gt; use these pipeline stages to avoid unnecessary stalls or cache flushing.</source>
          <target state="translated">いくつかの同期コマンドにはパイプラインステージパラメーターが含まれており、そのコマンドの&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同期スコープ&lt;/a&gt;をそれらのステージのみに制限しています。これにより、正確な実行依存関係とアクションコマンドによって実行されるアクセスをきめ細かく制御できます。実装で&lt;strong&gt;は&lt;/strong&gt;、これらのパイプラインステージを使用して、不要なストールやキャッシュのフラッシュを回避する必要があります。</target>
        </trans-unit>
        <trans-unit id="d30c200a960bfb05ea60fc1803b313155597c1b2" translate="yes" xml:space="preserve">
          <source>Shader modules are represented by &lt;code&gt;VkShaderModule&lt;/code&gt; handles:</source>
          <target state="translated">シェーダーモジュールは、 &lt;code&gt;VkShaderModule&lt;/code&gt; ハンドルで表されます。</target>
        </trans-unit>
        <trans-unit id="1dea6d0ea1c073deb15edd9efa11a7e7fbe3f60b" translate="yes" xml:space="preserve">
          <source>Signed and unsigned integers are converted by first clamping to the representable range of the destination format, then casting the value.</source>
          <target state="translated">符号付き整数と符号なし整数は、最初に変換先のフォーマットの表現可能な範囲にクランプしてから値をキャストすることで変換されます。</target>
        </trans-unit>
        <trans-unit id="4aee7a097d1f9d034d85844a5d1c09cf73419867" translate="yes" xml:space="preserve">
          <source>Similarly, if &lt;code&gt;VK_QUERY_RESULT_WITH_AVAILABILITY_BIT&lt;/code&gt; is set and &lt;code&gt;VK_QUERY_RESULT_WAIT_BIT&lt;/code&gt; is not set, the availability is guaranteed to reflect the most recent use of the query on the same queue, assuming that the query is not being simultaneously used by other queues. As with &lt;code&gt;vkGetQueryPoolResults&lt;/code&gt;, implementations &lt;strong&gt;must&lt;/strong&gt; guarantee that if they return a non-zero availability value, then the numerical results are valid.</source>
          <target state="translated">同様に、 &lt;code&gt;VK_QUERY_RESULT_WITH_AVAILABILITY_BIT&lt;/code&gt; が設定されており、 &lt;code&gt;VK_QUERY_RESULT_WAIT_BIT&lt;/code&gt; が設定されていない場合、クエリが他のキューで同時に使用されていないことを前提として、同じキューでのクエリの最新の使用を反映した可用性が保証されます。 &lt;code&gt;vkGetQueryPoolResults&lt;/code&gt; と同様に、実装&lt;strong&gt;は&lt;/strong&gt;、ゼロ以外の可用性値を返す場合、数値結果が有効であることを保証する&lt;strong&gt;必要&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="306dd1890484b05617d071e006ab602814a3f655" translate="yes" xml:space="preserve">
          <source>Similarly, if the &lt;code&gt;dstImage&lt;/code&gt; is compressed, then:</source>
          <target state="translated">同様に、 &lt;code&gt;dstImage&lt;/code&gt; が圧縮されている場合：</target>
        </trans-unit>
        <trans-unit id="ea85c2d12a72bf589f721946f0c5256792a825f8" translate="yes" xml:space="preserve">
          <source>Since &lt;a href=&quot;#VkSampler&quot;&gt;VkSampler&lt;/a&gt; is a non-dispatchable handle type, implementations &lt;strong&gt;may&lt;/strong&gt; return the same handle for sampler state vectors that are identical. In such cases, all such objects would only count once against the &lt;code&gt;maxSamplerAllocationCount&lt;/code&gt; limit.</source>
          <target state="translated">以来&lt;a href=&quot;#VkSampler&quot;&gt;VkSamplerが&lt;/a&gt;ディスパッチ不能ハンドル型で、実装が&lt;strong&gt;できる&lt;/strong&gt;同一であるサンプラ状態ベクトルに対して同一のハンドルを返します。そのような場合、そのようなオブジェクトはすべて、 &lt;code&gt;maxSamplerAllocationCount&lt;/code&gt; 制限に対して1回だけカウントされます。</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="7d1ec4d40756e14dc53e222c8bd15d258bd2edd3" translate="yes" xml:space="preserve">
          <source>Some of the image creation parameters are inherited by the view. The remaining parameters are contained in the &lt;code&gt;pCreateInfo&lt;/code&gt;.</source>
          <target state="translated">一部の画像作成パラメーターはビューに継承されます。残りのパラメータは &lt;code&gt;pCreateInfo&lt;/code&gt; に含まれています。</target>
        </trans-unit>
        <trans-unit id="a942835b55f2b912cc313f91ad3da7e6a13ccf4f" translate="yes" xml:space="preserve">
          <source>Some platforms &lt;strong&gt;may&lt;/strong&gt; have a limit on the maximum size of a single allocation. For example, certain systems &lt;strong&gt;may&lt;/strong&gt; fail to create allocations with a size greater than or equal to 4GB. Such a limit is implementation-dependent, and if such a failure occurs then the error &lt;code&gt;VK_ERROR_OUT_OF_DEVICE_MEMORY&lt;/code&gt;&lt;strong&gt;should&lt;/strong&gt; be returned.</source>
          <target state="translated">一部のプラットフォームでは、単一の割り当ての最大サイズに制限がある&lt;strong&gt;場合&lt;/strong&gt;があります。たとえば、特定のシステムで&lt;strong&gt;は&lt;/strong&gt;、サイズが4GB以上の割り当てを作成&lt;strong&gt;でき&lt;/strong&gt;ない場合があります。そのような制限は、実装依存であり、そのような失敗はエラー次に発生した場合 &lt;code&gt;VK_ERROR_OUT_OF_DEVICE_MEMORY&lt;/code&gt; は&lt;strong&gt;べき&lt;/strong&gt;返されます。</target>
        </trans-unit>
        <trans-unit id="1ea7471f263b29f9c66b3d3679203876d4e410c8" translate="yes" xml:space="preserve">
          <source>Some synchronization commands take sets of access types as parameters to define the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scopes&lt;/a&gt; of a memory dependency. If a synchronization command includes a source access mask, its first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; only includes accesses via the access types specified in that mask. Similarly, if a synchronization command includes a destination access mask, its second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; only includes accesses via the access types specified in that mask.</source>
          <target state="translated">一部の同期コマンドは、メモリ依存関係の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;を定義するパラメータとしてアクセスタイプのセットを受け取ります。同期コマンドにソースアクセスマスクが含まれている場合、その最初の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープに&lt;/a&gt;は、そのマスクで指定されたアクセスタイプを介したアクセスのみが含まれます。同様に、同期コマンドに宛先アクセスマスクが含まれている場合、その2番目の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープに&lt;/a&gt;は、そのマスクで指定されたアクセスタイプを介したアクセスのみが含まれます。</target>
        </trans-unit>
        <trans-unit id="c42adf00966f25b49fa92fb2afd3fca201de4e36" translate="yes" xml:space="preserve">
          <source>Specifying the exact framebuffer that the secondary command buffer will be executed with &lt;strong&gt;may&lt;/strong&gt; result in better performance at command buffer execution time.</source>
          <target state="translated">セカンダリコマンドバッファが実行される正確なフレームバッファを指定すると、コマンドバッファの実行時にパフォーマンスが向上する&lt;strong&gt;場合があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="c64b6d8ab6a3167af6b211df05198e555a8951eb" translate="yes" xml:space="preserve">
          <source>Structures</source>
          <target state="translated">Structures</target>
        </trans-unit>
        <trans-unit id="093b6cd6e09a681f50b3995205ca4c104c2807de" translate="yes" xml:space="preserve">
          <source>Submission can be a high overhead operation, and applications &lt;strong&gt;should&lt;/strong&gt; attempt to batch work together into as few calls to &lt;code&gt;vkQueueSubmit&lt;/code&gt; as possible.</source>
          <target state="translated">&lt;code&gt;vkQueueSubmit&lt;/code&gt; はオーバーヘッドの大きい操作になる可能性があり、アプリケーションは、vkQueueSubmitへの呼び出しをできるだけ少なくするように、バッチ処理を一緒に試みる&lt;strong&gt;べき&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="d5ee48f4626430b4b0eb9ccf81cb61818a482854" translate="yes" xml:space="preserve">
          <source>Subpass dependencies are not affected by the render area, and apply to the entire image subresources attached to the framebuffer as specified in the description of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-layout-transitions&quot;&gt;automatic layout transitions&lt;/a&gt;. Similarly, pipeline barriers are valid even if their effect extends outside the render area.</source>
          <target state="translated">サブパスの依存関係はレンダリング領域の影響を受けず、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-layout-transitions&quot;&gt;自動レイアウト遷移の&lt;/a&gt;説明で指定されているように、フレームバッファーにアタッチされている画像サブリソース全体に適用されます。同様に、パイプラインバリアは、その効果がレンダー領域の外側にまで及んでいる場合でも有効です。</target>
        </trans-unit>
        <trans-unit id="42a8f651d79fd005eeac0612df6442b983a01184" translate="yes" xml:space="preserve">
          <source>Success</source>
          <target state="translated">Success</target>
        </trans-unit>
        <trans-unit id="316d63bf521d1a2129970b36cde68883e6a77699" translate="yes" xml:space="preserve">
          <source>Success Codes</source>
          <target state="translated">サクセスコード</target>
        </trans-unit>
        <trans-unit id="a2cbc439c9045c310d0fbcdb653addfdbdfa2620" translate="yes" xml:space="preserve">
          <source>Successful completion codes are returned when a command needs to communicate success or status information. All successful completion codes are non-negative values.</source>
          <target state="translated">成功完了コードは、コマンドが成功またはステータス情報を伝える必要がある場合に返されます。すべての成功完了コードは非負の値です。</target>
        </trans-unit>
        <trans-unit id="2616ff87cadf2d1f2a5fbb2b55015289cefbb3de" translate="yes" xml:space="preserve">
          <source>Supported Queue Types</source>
          <target state="translated">サポートされているキューの種類</target>
        </trans-unit>
        <trans-unit id="0e3be3a65e844f516e59412e57af5f7f89c0d712" translate="yes" xml:space="preserve">
          <source>Supported pipeline stages</source>
          <target state="translated">サポートされているパイプラインステージ</target>
        </trans-unit>
        <trans-unit id="b816729f8cfd7023f87362593c8e3c3fbd97648d" translate="yes" xml:space="preserve">
          <source>Table 1. vkGetDeviceProcAddr behavior</source>
          <target state="translated">表 1.vkGetDeviceProcAddr の動作</target>
        </trans-unit>
        <trans-unit id="1742582516ee749eb727849e027891cfe1a77eef" translate="yes" xml:space="preserve">
          <source>Table 10. Component Mappings Equivalent To &lt;code&gt;VK_COMPONENT_SWIZZLE_IDENTITY&lt;/code&gt;</source>
          <target state="translated">表10. &lt;code&gt;VK_COMPONENT_SWIZZLE_IDENTITY&lt;/code&gt; と同等のコンポーネントマッピング</target>
        </trans-unit>
        <trans-unit id="9fbe1b1057482bc8e2a9980a7c41d7c4a596b876" translate="yes" xml:space="preserve">
          <source>Table 11. Logical Operations</source>
          <target state="translated">表 11.論理演算</target>
        </trans-unit>
        <trans-unit id="94c6f5ef7cbcf5e2cb167fba793a72eb265e9bdb" translate="yes" xml:space="preserve">
          <source>Table 12. VkObjectType and Vulkan Handle Relationship</source>
          <target state="translated">表 12.VkObjectTypeとVulkanハンドルの関係</target>
        </trans-unit>
        <trans-unit id="2da473c4731f212bf8417ecf4c08b8b5cbdfcf56" translate="yes" xml:space="preserve">
          <source>Table 2. Event Object Status Codes</source>
          <target state="translated">表 2.イベントオブジェクトのステータスコード</target>
        </trans-unit>
        <trans-unit id="1aa4e565052de4bba04bce9edf26f02647537fe1" translate="yes" xml:space="preserve">
          <source>Table 3. Fence Object Status Codes</source>
          <target state="translated">表 3.フェンスオブジェクトのステータスコード</target>
        </trans-unit>
        <trans-unit id="8feca90e7fe13b94e3d4bcd2ed60c473e4bd60ba" translate="yes" xml:space="preserve">
          <source>Table 4. vkGetInstanceProcAddr behavior</source>
          <target state="translated">表 4.vkGetInstanceProcAddr の動作</target>
        </trans-unit>
        <trans-unit id="831ab4f5641d496e5ca0390d0fad229c67d29c93" translate="yes" xml:space="preserve">
          <source>Table 5. Layout for pipeline cache header version &lt;code&gt;VK_PIPELINE_CACHE_HEADER_VERSION_ONE&lt;/code&gt;</source>
          <target state="translated">表5.パイプラインキャッシュヘッダーバージョン &lt;code&gt;VK_PIPELINE_CACHE_HEADER_VERSION_ONE&lt;/code&gt; のレイアウト</target>
        </trans-unit>
        <trans-unit id="27ac27c0ffded35668d9f9c30dc98d9ca91d7138" translate="yes" xml:space="preserve">
          <source>Table 6. Image and image view parameter compatibility requirements</source>
          <target state="translated">表 6.画像と画像ビューのパラメータの互換性要件</target>
        </trans-unit>
        <trans-unit id="a0e73cb6a2b5d98ea6c4ec60f77d7f24de613510" translate="yes" xml:space="preserve">
          <source>Table 7. Supported access types</source>
          <target state="translated">表7.サポートされているアクセスタイプ</target>
        </trans-unit>
        <trans-unit id="61ae5d5ec9f9ba465bb08753341fb2a6d8837356" translate="yes" xml:space="preserve">
          <source>Table 8. Blend Factors</source>
          <target state="translated">表8.ブレンド要因</target>
        </trans-unit>
        <trans-unit id="2562fae0aad0eb791e709b85fdaa591a529ad966" translate="yes" xml:space="preserve">
          <source>Table 9. Basic Blend Operations</source>
          <target state="translated">表 9.基本的なブレンド操作</target>
        </trans-unit>
        <trans-unit id="260d031c0a011609575545b5de3494526dfad1dd" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt;::&lt;code&gt;binding&lt;/code&gt; members of the elements of the &lt;code&gt;pBindings&lt;/code&gt; array &lt;strong&gt;must&lt;/strong&gt; each have different values.</source>
          <target state="translated">&lt;a href=&quot;#VkDescriptorSetLayoutBinding&quot;&gt;VkDescriptorSetLayoutBinding&lt;/a&gt; :: &lt;code&gt;binding&lt;/code&gt; の要素のメンバー &lt;code&gt;pBindings&lt;/code&gt; のアレイは、&lt;strong&gt;必要があり&lt;/strong&gt;、それぞれ異なる値を有します。</target>
        </trans-unit>
        <trans-unit id="f6a78099cc4a599ed528b4deb0bc5cbb7a7ef457" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt; of each of &lt;code&gt;srcImage&lt;/code&gt; and &lt;code&gt;dstImage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be compatible, as defined &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies-images-format-compatibility&quot;&gt;below&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#VkFormat&quot;&gt;VkFormat&lt;/a&gt;のそれぞれの &lt;code&gt;srcImage&lt;/code&gt; と &lt;code&gt;dstImage&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;定義されるように、互換性が&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#copies-images-format-compatibility&quot;&gt;以下&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b935630130d371037fdd72c3f5fdc89b4b3a3b67" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfo&lt;/a&gt; structure includes an array of shader create info structures containing all the desired active shader stages, as well as creation info to define all relevant fixed-function stages, and a pipeline layout.</source>
          <target state="translated">&lt;a href=&quot;#VkGraphicsPipelineCreateInfo&quot;&gt;VkGraphicsPipelineCreateInfoの&lt;/a&gt;構造は、シェーダのアレイすべての関連する固定機能ステージを定義するために必要なすべてのアクティブなシェーダステージを含む情報構造、ならびに作成情報を作成し、パイプラインのレイアウトを含みます。</target>
        </trans-unit>
        <trans-unit id="b3d2dd2bfa113e06cd0fb91fac058c399de965ca" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;baseArrayLayer&lt;/code&gt; members of the elements of the &lt;code&gt;pRanges&lt;/code&gt; array &lt;strong&gt;must&lt;/strong&gt; each be less than the &lt;code&gt;arrayLayers&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;baseArrayLayer&lt;/code&gt; 用の要素のメンバー &lt;code&gt;pRanges&lt;/code&gt; のアレイが&lt;strong&gt;なければならない&lt;/strong&gt;各未満で &lt;code&gt;arrayLayers&lt;/code&gt; で指定&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt;ときに &lt;code&gt;image&lt;/code&gt; 作成されました</target>
        </trans-unit>
        <trans-unit id="fcb0dc656b86663f74dcbe4af9207f17c955e6ea" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt;::&lt;code&gt;baseMipLevel&lt;/code&gt; members of the elements of the &lt;code&gt;pRanges&lt;/code&gt; array &lt;strong&gt;must&lt;/strong&gt; each be less than the &lt;code&gt;mipLevels&lt;/code&gt; specified in &lt;a href=&quot;#VkImageCreateInfo&quot;&gt;VkImageCreateInfo&lt;/a&gt; when &lt;code&gt;image&lt;/code&gt; was created</source>
          <target state="translated">&lt;code&gt;pRanges&lt;/code&gt; 配列の要素の&lt;a href=&quot;#VkImageSubresourceRange&quot;&gt;VkImageSubresourceRange&lt;/a&gt; :: &lt;code&gt;baseMipLevel&lt;/code&gt; メンバーは、 &lt;code&gt;image&lt;/code&gt; が作成されたときに &lt;code&gt;mipLevels&lt;/code&gt; 指定された&lt;a href=&quot;#VkImageCreateInfo&quot;&gt;mipLevels&lt;/a&gt;よりも小さい&lt;strong&gt;必要があり&lt;/strong&gt;ます&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f0f3ef181c371f4e9ec190ba0e88c81584aa554a" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkObjectType&quot;&gt;VkObjectType&lt;/a&gt; enumeration defines values, each of which corresponds to a specific Vulkan handle type. These values &lt;strong&gt;can&lt;/strong&gt; be used to associate debug information with a particular type of object through one or more extensions.</source>
          <target state="translated">&lt;a href=&quot;#VkObjectType&quot;&gt;VkObjectTypeの&lt;/a&gt;特定バルカンハンドルタイプに対応するそれぞれが列挙定義値、。これらの値&lt;strong&gt;は&lt;/strong&gt;、1つ以上の拡張機能を使用して、デバッグ情報を特定のタイプのオブジェクトに関連付けるために使用&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="ec89ee4fbea8f53b65a7c304310ea1b4361a8e21" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfo&lt;/a&gt; structure is defined as:</source>
          <target state="translated">&lt;a href=&quot;#VkPipelineLayoutCreateInfo&quot;&gt;VkPipelineLayoutCreateInfoの&lt;/a&gt;構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="e3b8bcbf9952df3464fa48ae305b76482e3a723d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#vkQueueSubmit&quot;&gt;vkQueueSubmit&lt;/a&gt; command &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-host-writes&quot;&gt;automatically guarantees that host writes flushed to &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; are made available&lt;/a&gt; if they were flushed before the command executed, so in most cases an explicit memory barrier is not needed for this case. In the few circumstances where a submit does not occur between the host write and the device read access, writes &lt;strong&gt;can&lt;/strong&gt; be made available by using an explicit memory barrier.</source>
          <target state="translated">&lt;a href=&quot;#vkQueueSubmit&quot;&gt;vkQueueSubmitの&lt;/a&gt;コマンドは、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-host-writes&quot;&gt;自動的にホスト書き込みはにフラッシュされることを保証 &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; が利用できるようになり&lt;/a&gt;、彼らはそうほとんどの場合、明示的なメモリバリアは、この場合には必要とされない、実行したコマンドの前にフラッシュされた場合。ホストの書き込みとデバイスの読み取りアクセスの間にサブミットが発生しないいくつかの状況では、明示的なメモリバリアを使用して書き込みを&lt;strong&gt;利用できる&lt;/strong&gt;ように&lt;strong&gt;すること&lt;/strong&gt;ができます。</target>
        </trans-unit>
        <trans-unit id="847c30607b15a6350eaf5a0a8774fdb2b7f94ab9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#memory-device&quot;&gt;Device Memory&lt;/a&gt; section describes memory properties queried from the physical device.</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#memory-device&quot;&gt;デバイスメモリ&lt;/a&gt;セクションは、物理デバイスから照会記憶特性を記載しています。</target>
        </trans-unit>
        <trans-unit id="8d34aa9fff7ba1ac43b0f4969108a4e7eb9cbec0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-available-and-visible&quot;&gt;availability and visibility operations&lt;/a&gt; defined by a subpass dependency affect the execution of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-layout-transitions&quot;&gt;image layout transitions&lt;/a&gt; within the render pass.</source>
          <target state="translated">&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-available-and-visible&quot;&gt;可用性と可視性オペレーション&lt;/a&gt; subpass依存性によって定義されるの実行に影響を与える&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-layout-transitions&quot;&gt;画像レイアウト移行&lt;/a&gt;レンダリングパス内を。</target>
        </trans-unit>
        <trans-unit id="58cbce4bb72c06ae6ab939ee38b65227a8044f9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkApplicationInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkApplicationInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="131b4be23ee3eb73500763ec1557135c1db7f7d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkAttachmentDescription&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkAttachmentDescription&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="2e6a54f7c6cdcb88f967df54dcfaf0dd4273404d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkAttachmentReference&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkAttachmentReference&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="224f0f88fa0d8e5c0760bcaca4a4d580b11a62f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkBindSparseInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkBindSparseInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="bcb88f2ebb7fb99282d531d233b4c1e2f99a62b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkBufferCopy&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkBufferCopy&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="c76ea7967eceab6014aeaa4f3c529fe1692e4264" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkBufferCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkBufferCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="6ba59eaded72202eeafd207ef9e896d9de40407c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkBufferMemoryBarrier&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkBufferMemoryBarrier&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="54032f1c63408d6dcecf68bafe3abbfb59147a2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkBufferViewCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkBufferViewCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="ea2d47c8d5630f363f75f6923a280ce6f6c79fa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkClearAttachment&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkClearAttachment&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="0c3032c2477cc4fc38f136f26c0b73ea22020b58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkClearColorValue&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkClearColorValue&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="2a6845b989d4701b83c4cc982433ff8e04c1a805" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkClearDepthStencilValue&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkClearDepthStencilValue&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="b34daebae4dd88a7f31773618688710822b7c368" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkClearRect&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkClearRect&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="4460eb00c02e69c2eee107a625fe338b1efcd6ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkClearValue&lt;/code&gt; union is defined as:</source>
          <target state="translated">&lt;code&gt;VkClearValue&lt;/code&gt; の労働組合は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="696cc15e6b77a4144383d42237dd4e023a4807da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandBufferAllocateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkCommandBufferAllocateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="df36512a90c6ebeeb6b5b3e76bf2e86a41b37779" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandBufferBeginInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkCommandBufferBeginInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="748e587ce04a8d7aa4500ac778fbd75f66727716" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support compute operations</source>
          <target state="translated">&lt;code&gt;VkCommandPool&lt;/code&gt; こと &lt;code&gt;commandBuffer&lt;/code&gt; がから割り当てられた&lt;strong&gt;必須&lt;/strong&gt;のサポートコンピューティング事業</target>
        </trans-unit>
        <trans-unit id="99c7c33ddbe73576107c3d3ee6c071ea459a9498" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics operations</source>
          <target state="translated">&lt;code&gt;VkCommandPool&lt;/code&gt; こと &lt;code&gt;commandBuffer&lt;/code&gt; がから割り当てられた&lt;strong&gt;必須の&lt;/strong&gt;サポートグラフィックス操作</target>
        </trans-unit>
        <trans-unit id="6124495af689e32e1c22e44381bf0b7caa5acbd4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics or compute operations</source>
          <target state="translated">&lt;code&gt;VkCommandPool&lt;/code&gt; こと &lt;code&gt;commandBuffer&lt;/code&gt; がから割り当てられた&lt;strong&gt;必須の&lt;/strong&gt;サポートグラフィックスや計算の操作</target>
        </trans-unit>
        <trans-unit id="182448d0ac8823ad1d731cbdc148d348eb770d9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support graphics, or compute operations</source>
          <target state="translated">&lt;code&gt;VkCommandPool&lt;/code&gt; こと &lt;code&gt;commandBuffer&lt;/code&gt; はから割り当てられた&lt;strong&gt;必須の&lt;/strong&gt;サポートグラフィック、または演算動作</target>
        </trans-unit>
        <trans-unit id="247194d6c9c09e3a7508b0f909a4d0ae45017991" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPool&lt;/code&gt; that &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from &lt;strong&gt;must&lt;/strong&gt; support transfer, graphics, or compute operations</source>
          <target state="translated">&lt;code&gt;VkCommandPool&lt;/code&gt; こと &lt;code&gt;commandBuffer&lt;/code&gt; がから割り当てられた&lt;strong&gt;必須の&lt;/strong&gt;サポート転送、グラフィックス、またはコンピューティング事業</target>
        </trans-unit>
        <trans-unit id="e2ad496765f25b942a71b7931ee4e14f2a93b7d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCommandPoolCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkCommandPoolCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="0fb925689a4f8769913a439d47518973d9a7f905" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkComponentMapping&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkComponentMapping&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="786c2dfe65d8d6fa6f3b907c82ea5af2d26c0788" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkComputePipelineCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkComputePipelineCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="5b9c5d6e3f91422a6be1107053e17bbc9e74b07e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkCopyDescriptorSet&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkCopyDescriptorSet&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="bc2bac80cbd95ff18f31389120c00b3451c0d80f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDescriptorBufferInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkDescriptorBufferInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="9c1cfee713c724e59b533700a56180f1d88e08d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDescriptorImageInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkDescriptorImageInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="acf81da1d784d8708d95dcd4cc15c96092326bbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDescriptorPoolSize&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkDescriptorPoolSize&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="163d4f309e1f35b8c8dfb3346b335c9e40215175" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDescriptorSetAllocateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkDescriptorSetAllocateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="389952baae652dbd578f630eaf36433720bb0b61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDescriptorSetLayoutBinding&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkDescriptorSetLayoutBinding&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="9966dc243cff5bd8ef790797a34466da99abcb9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDeviceCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkDeviceCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="29da10b5e17156b0e0e645a42b89f915fd00b09a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDeviceQueueCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkDeviceQueueCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="2f4144f99670654008e5d5bf931a64f593392fda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="10f95a83cce2a1a6f3a271641c0540a64e809020" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="739ad2f55fb00003d439ae52e24a98985b555c39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="fdee65628dbaaae8cf71a150817f6194fe90fa5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkEventCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkEventCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="8fe73e96b56f10b3b350fabea454d9c8200d16d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkExtensionProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkExtensionProperties&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="09c4dd843909908c4354a452392808d237f3149d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkFenceCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkFenceCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="518b030fbb1280e2ab5ebcf4febf8a09089c7339" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkFormatProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkFormatProperties&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="7d9758a1bba8e46faba332fc6071722c8572b260" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkFramebufferCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkFramebufferCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="c6a3751614085c89999095cc97205e1e155b8927" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="ac118a4da7fb9cf4b68347228b13838ca0a6cb72" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageBlit&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkImageBlit&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="d777ef0576281bdf7a5b6f803971cb0efbf23ca7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageCopy&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkImageCopy&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="991c6f02e9cabe044ce306003e6151d59cebe0d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkImageCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="435a665e34eb28f0d26891cfa3ee1b15b4ad9e2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageFormatProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkImageFormatProperties&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="63462cf771fed6a50e682fb9bd8cd1a364e6c81d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageMemoryBarrier&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkImageMemoryBarrier&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="668d55cc4f4f9d568862c7d8d396c605c32284c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageResolve&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkImageResolve&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="26cc8d4eb90a3288910860973593054e09811851" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageSubresource&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkImageSubresource&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="44875c039fd0d1b9273acbbf7ab4d2f19b90b8ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageSubresourceLayers&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkImageSubresourceLayers&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="28ded60cba790410f21b5914c08b1decc8973e62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageSubresourceRange&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkImageSubresourceRange&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="9e7dcdc4fea4b6b9c75e25570fda184bd218208c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkImageViewCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkImageViewCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="2b5bc8ba0af3918a7e83283293b48fc5f1f82ff9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkInstanceCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkInstanceCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="2a51dc9fdc8714489f134df1aadfd3aa743b679e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkLayerProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkLayerProperties&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="44842a4d5af7b1972ceced0461683feacbee64a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMappedMemoryRange&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkMappedMemoryRange&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="25534c3c23e6738152d5ca5ca8d7df08e9a3e77b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMemoryAllocateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkMemoryAllocateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="a0222a61cf02852e7f44d46f6c8e443327114224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMemoryBarrier&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkMemoryBarrier&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="dbba01f1c5af0aac9fd20a9650394109ff04f7ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMemoryHeap&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkMemoryHeap&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="1792755b145743041dffbd10007bb986b54c12cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMemoryRequirements&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkMemoryRequirements&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="0929e33e54a09be6012d7bbc0e4bb0b72d137eb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkMemoryType&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkMemoryType&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="f616221081ff53b744f8f24f0602285fba7457ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="401180f2feecbe16e5a412f7d51d07b2f95b44a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="622b4d81ad990ce16b109ad912e02926432d68ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceMemoryProperties&lt;/code&gt; structure describes a number of &lt;em&gt;memory heaps&lt;/em&gt; as well as a number of &lt;em&gt;memory types&lt;/em&gt; that &lt;strong&gt;can&lt;/strong&gt; be used to access memory allocated in those heaps. Each heap describes a memory resource of a particular size, and each memory type describes a set of memory properties (e.g. host cached vs uncached) that &lt;strong&gt;can&lt;/strong&gt; be used with a given memory heap. Allocations using a particular memory type will consume resources from the heap indicated by that memory type&amp;rsquo;s heap index. More than one memory type &lt;strong&gt;may&lt;/strong&gt; share each heap, and the heaps and memory types provide a mechanism to advertise an accurate size of the physical memory resources while allowing the memory to be used with a variety of different properties.</source>
          <target state="translated">&lt;code&gt;VkPhysicalDeviceMemoryProperties&lt;/code&gt; の構造は、多数の説明&lt;em&gt;メモリヒープ&lt;/em&gt;ならびに多数の&lt;em&gt;メモリタイプ&lt;/em&gt;&lt;strong&gt;ができ&lt;/strong&gt;、それらのヒープに割り当てられたアクセスメモリに使用されています。各ヒープは特定のサイズのメモリリソースを記述し、各メモリタイプは特定のメモリヒープで使用&lt;strong&gt;できる&lt;/strong&gt;メモリプロパティのセット（たとえば、キャッシュされたホストとキャッシュされていないホスト）を記述します。特定のメモリタイプを使用する割り当ては、そのメモリタイプのヒープインデックスで示されるヒープからリソースを消費します。複数のメモリタイプ&lt;strong&gt;が&lt;/strong&gt; 各ヒープを共有します。ヒープとメモリタイプは、物理メモリリソースの正確なサイズをアドバタイズするメカニズムを提供すると同時に、メモリをさまざまな異なるプロパティで使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="3856adc0a32bcea44208f6dd47cb1f3b3aa31212" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceMemoryProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPhysicalDeviceMemoryProperties&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="10315218c47d5ae1e186650f6f32a9b83de2571e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPhysicalDeviceProperties&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="136ee89a5f22c25a105c31669fe930182dbae59f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPhysicalDeviceSparseProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPhysicalDeviceSparseProperties&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="dcd9322c8393e8011eb660aa085f43b581c03602" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineCacheCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineCacheCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="0604dfba983332b87e1a93a183957d7d709c94e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineColorBlendAttachmentState&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineColorBlendAttachmentState&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="df528cbcc50122d077aae56c081522f898a8f0cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineColorBlendStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineColorBlendStateCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="7a745c1ec7e4284c96d8925f41c46354cce91cc8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineDepthStencilStateCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="3905a5b7c17ab91a93f3b7e33464927718983f1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineDynamicStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineDynamicStateCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="53a9553127226655b1efe0ad4bd80a322dc8dcbb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineMultisampleStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineMultisampleStateCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="58ca0c78871eb695131ee434ce2e0ddcf1d5a4f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineRasterizationStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineRasterizationStateCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="68bde8ef80f7aa913f9ba509648949c445482e14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineShaderStageCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineShaderStageCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="712f2cc0f913c50c142e9059f51e0068096f4259" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineTessellationStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineTessellationStateCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="5e26dc90e366138b8bbbcf9a76cd423a302bb837" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineVertexInputStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineVertexInputStateCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="a105bcf6810a6c66b3e290590875bd943031f5df" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPipelineViewportStateCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="db771ac4b29ed4b4f42a78d3b115bd64dda34002" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkPushConstantRange&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkPushConstantRange&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="69aef621905902df33cf4ab952a85b0d23e1c492" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkQueryPoolCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkQueryPoolCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="e0899881be8a96b7c5317bc2f1a7b16fb5e54987" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkQueueFamilyProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkQueueFamilyProperties&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="8785e79fb90816cd873daf908840f5b636c48311" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkRenderPassBeginInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkRenderPassBeginInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="71ec2bb8c5547f727b140ec79c8c660fb7347da9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkRenderPassCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkRenderPassCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="ddbed6f13311007846b8e0ea47417c7d5287d57a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSamplerCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSamplerCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="f9a5d80b1ad778d43e0676943fe0cb3a09e6b17b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSemaphoreCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSemaphoreCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="ab818bb4ebad0369b6906cdf1c8dedce77c3f486" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkShaderModuleCreateInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkShaderModuleCreateInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="be253d71ae41fea6256d0e9cb568d913278d09f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSparseImageFormatProperties&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="c2a72db3192d9c41852e08fb11e65059a67a20c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSparseImageMemoryBind&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSparseImageMemoryBind&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="7c5073880061f7ee490cb16ef5f25b2c10d00bb2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSparseImageMemoryRequirements&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="33521c532563d6bd06bdf750a5f873739258cb05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSparseMemoryBind&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSparseMemoryBind&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="9a6547af51fe52815fcb1453a77a8fbc530b3263" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSpecializationInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSpecializationInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="0af5bf0aa7a5a6f6fee49e9f4f7acf0a1df2efd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSpecializationMapEntry&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSpecializationMapEntry&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="130616dd57d3c59a7ccf1b1ff317316aece7d0ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkStencilOpState&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkStencilOpState&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="07b4e8d803aca132fc35c11869168ac725cf64a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSubmitInfo&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSubmitInfo&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="100c116d18035cac7f1b4e7c3418890144324902" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSubpassDependency&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSubpassDependency&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="b2d60e81c4ec56731a57f63516f46a8bfc6caebc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkSubpassDescription&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkSubpassDescription&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="ebaf5a64cabbe7667b16607561f7978ee655c696" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkVertexInputAttributeDescription&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkVertexInputAttributeDescription&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="8f2e2fab820610881a7d0c63ae4e5f916590a39b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkVertexInputBindingDescription&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkVertexInputBindingDescription&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="62b963678c895ec8bd972bc92913c3af5fc151bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkViewport&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkViewport&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="c8f3cb12fc2d3c1662e8d57f72acf8e65a61c45f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;VkWriteDescriptorSet&lt;/code&gt; structure is defined as:</source>
          <target state="translated">&lt;code&gt;VkWriteDescriptorSet&lt;/code&gt; の構造は次のように定義されています。</target>
        </trans-unit>
        <trans-unit id="a6cda091bf55776b730ca1302cc01ae2ec1419fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;allocationType&lt;/code&gt; parameter to the &lt;code&gt;pfnInternalAllocation&lt;/code&gt; and &lt;code&gt;pfnInternalFree&lt;/code&gt; functions &lt;strong&gt;may&lt;/strong&gt; be one of the following values:</source>
          <target state="translated">&lt;code&gt;allocationType&lt;/code&gt; 用のパラメータ &lt;code&gt;pfnInternalAllocation&lt;/code&gt; と &lt;code&gt;pfnInternalFree&lt;/code&gt; 関数が&lt;strong&gt;できる&lt;/strong&gt;次の値のいずれかです。</target>
        </trans-unit>
        <trans-unit id="9208fb7d824f2e25273322b1c289f85a81d56011" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;dstSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; specify aspects present in the calling command&amp;rsquo;s &lt;code&gt;dstImage&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; のメンバー &lt;code&gt;dstSubresource&lt;/code&gt; が&lt;strong&gt;なければなりません&lt;/strong&gt;呼び出すコマンドの中に存在側面指定 &lt;code&gt;dstImage&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="e89b27277fa7d3c762a21d5045eda290d8437f41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;imageSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only have a single bit set</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; のメンバー &lt;code&gt;imageSubresource&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;単一ビットのみが設定されています</target>
        </trans-unit>
        <trans-unit id="cd0aabac8c1f4e57c6070b383db299c7ed9dfbdb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;imageSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; specify aspects present in the calling command&amp;rsquo;s &lt;code&gt;VkImage&lt;/code&gt; parameter</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; のメンバー &lt;code&gt;imageSubresource&lt;/code&gt; が&lt;strong&gt;なければなりません&lt;/strong&gt;呼び出すコマンドの中に存在側面指定 &lt;code&gt;VkImage&lt;/code&gt; パラメータを</target>
        </trans-unit>
        <trans-unit id="7ef69911448032b954a590d8b4ab46709f1b1c4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;pSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only have a single bit set</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; のメンバー &lt;code&gt;pSubresource&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;単一ビットのみが設定されています</target>
        </trans-unit>
        <trans-unit id="1a2ac50691da602236abc3c316dc40d476d6e9e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;srcSubresource&lt;/code&gt; and &lt;code&gt;dstSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; match</source>
          <target state="translated">&lt;code&gt;srcSubresource&lt;/code&gt; と &lt;code&gt;dstSubresource&lt;/code&gt; の &lt;code&gt;aspectMask&lt;/code&gt; メンバーは一致する&lt;strong&gt;必要があります&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7739efe6f8515d6be193287a2510c512ba32dd5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;srcSubresource&lt;/code&gt; and &lt;code&gt;dstSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; only contain &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; のメンバー &lt;code&gt;srcSubresource&lt;/code&gt; と &lt;code&gt;dstSubresource&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;だけ含まれている &lt;code&gt;VK_IMAGE_ASPECT_COLOR_BIT&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="c8a668103a793a4c5f78621bfeabb92ee8fb0192" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aspectMask&lt;/code&gt; member of &lt;code&gt;srcSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; specify aspects present in the calling command&amp;rsquo;s &lt;code&gt;srcImage&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;aspectMask&lt;/code&gt; のメンバー &lt;code&gt;srcSubresource&lt;/code&gt; が&lt;strong&gt;なければなりません&lt;/strong&gt;呼び出すコマンドの中に存在側面指定 &lt;code&gt;srcImage&lt;/code&gt; を</target>
        </trans-unit>
        <trans-unit id="0ffd43a312df9c04539b119b8f8063686f366931" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attachment&lt;/code&gt; member of any element of &lt;code&gt;pPreserveAttachments&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attachment&lt;/code&gt; の任意の要素のメンバー &lt;code&gt;pPreserveAttachments&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a658f5616ac7579cb84d2327bd4afb667045174" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;components&lt;/code&gt; member is of type &lt;a href=&quot;#VkComponentMapping&quot;&gt;VkComponentMapping&lt;/a&gt;, and describes a remapping from components of the image to components of the vector returned by shader image instructions. This remapping &lt;strong&gt;must&lt;/strong&gt; be identity for storage image descriptors, input attachment descriptors, and framebuffer attachments.</source>
          <target state="translated">&lt;code&gt;components&lt;/code&gt; 部材は、型であり&lt;a href=&quot;#VkComponentMapping&quot;&gt;VkComponentMapping&lt;/a&gt;、およびシェーダ画像命令によって返されるベクトルの成分への画像の構成要素から再マッピングを記述する。この再マッピング&lt;strong&gt;は&lt;/strong&gt;、ストレージイメージ記述子、入力アタッチメント記述子、およびフレームバッファアタッチメントのIDである&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="5022ba94cb8f1cb9169875c347c47ef768a718c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dstOffset&lt;/code&gt; member of a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than the size of &lt;code&gt;dstBuffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;dstOffset&lt;/code&gt; コピーの所与の要素のメンバ &lt;code&gt;pRegions&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;の大きさよりも小さく &lt;code&gt;dstBuffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4179b26376c3717ac1687e25b940341b2d51085a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dstSet&lt;/code&gt; member of any given element of &lt;code&gt;pDescriptorWrites&lt;/code&gt; or &lt;code&gt;pDescriptorCopies&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be used by any command that was recorded to a command buffer which is in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;pending state&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;pDescriptorWrites&lt;/code&gt; または &lt;code&gt;pDescriptorCopies&lt;/code&gt; の特定の要素の &lt;code&gt;dstSet&lt;/code&gt; メンバーは、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#commandbuffers-lifecycle&quot;&gt;保留状態の&lt;/a&gt;コマンドバッファーに記録されたコマンドで使用しないで&lt;strong&gt;ください&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cf3ac74c25ae62b8a50f87e93a803a9a7382aec8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt; parameters correspond to parameters that would be consumed by &lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt; (as members of &lt;code&gt;VkImageCreateInfo&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、 &lt;code&gt;tiling&lt;/code&gt; 、 &lt;code&gt;usage&lt;/code&gt; 、および &lt;code&gt;flags&lt;/code&gt; のパラメータは、によって消費されるパラメータに対応する&lt;a href=&quot;#vkCreateImage&quot;&gt;vkCreateImage&lt;/a&gt;（のメンバーとして &lt;code&gt;VkImageCreateInfo&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="1ce207943cad80baf419b1027cf8041ba094f6bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;layerCount&lt;/code&gt; member of &lt;code&gt;srcSubresource&lt;/code&gt; and &lt;code&gt;dstSubresource&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; match</source>
          <target state="translated">&lt;code&gt;srcSubresource&lt;/code&gt; と &lt;code&gt;dstSubresource&lt;/code&gt; の &lt;code&gt;layerCount&lt;/code&gt; メンバーは一致する&lt;strong&gt;必要があります&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e8d416b6dd2086a1ff80cbb1a61027d4220f4baa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; member of any given element of &lt;code&gt;pMapEntries&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than &lt;code&gt;dataSize&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; の任意の要素のメンバ &lt;code&gt;pMapEntries&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;よりも小さい &lt;code&gt;dataSize&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a195e5a4b60dd6f929c9d741bef093a8ae1ff241" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queue&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; support sparse binding operations</source>
          <target state="translated">&lt;code&gt;queue&lt;/code&gt; &lt;strong&gt;なければなりません&lt;/strong&gt;スパース結合操作をサポート</target>
        </trans-unit>
        <trans-unit id="7bec009564a27ca8c448cae5fc259332e4497907" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queueFamilyIndex&lt;/code&gt; member of any given element of &lt;code&gt;pQueueCreateInfos&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be unique within &lt;code&gt;pQueueCreateInfos&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;queueFamilyIndex&lt;/code&gt; のの任意の要素のメンバー &lt;code&gt;pQueueCreateInfos&lt;/code&gt; は、&lt;strong&gt;必要があります&lt;/strong&gt;内で一意である &lt;code&gt;pQueueCreateInfos&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5ad1795334fdbcef4a2616878687ac5356f416ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; member of a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pRegions&lt;/code&gt; の指定された要素の &lt;code&gt;size&lt;/code&gt; メンバーは &lt;code&gt;0&lt;/code&gt; より大きく&lt;strong&gt;なければなりません&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="06fa7f4c2f577925722d6b841abcf5e2e8def858" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; member of a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;dstBuffer&lt;/code&gt; minus &lt;code&gt;dstOffset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pRegions&lt;/code&gt; の特定の要素の &lt;code&gt;size&lt;/code&gt; メンバーは、 &lt;code&gt;dstBuffer&lt;/code&gt; から &lt;code&gt;dstOffset&lt;/code&gt; を引いた値以下で&lt;strong&gt;なければなりません。&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="baa59e566284f2915b55fbe4ee5d5502f87b84c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; member of a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;srcBuffer&lt;/code&gt; minus &lt;code&gt;srcOffset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pRegions&lt;/code&gt; の特定の要素の &lt;code&gt;size&lt;/code&gt; メンバーは、 &lt;code&gt;srcBuffer&lt;/code&gt; から &lt;code&gt;srcOffset&lt;/code&gt; を引いた値以下で&lt;strong&gt;なければなりません。&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ea198012feca8b705519f06a5c3ab91c0ad4e205" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; member of the &lt;code&gt;VkMemoryRequirements&lt;/code&gt; structure returned from a call to &lt;code&gt;vkGetBufferMemoryRequirements&lt;/code&gt; with &lt;code&gt;buffer&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;memory&lt;/code&gt; minus &lt;code&gt;memoryOffset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;buffer&lt;/code&gt; を &lt;code&gt;vkGetBufferMemoryRequirements&lt;/code&gt; したvkGetBufferMemoryRequirementsの呼び出しから返される &lt;code&gt;VkMemoryRequirements&lt;/code&gt; 構造体の &lt;code&gt;size&lt;/code&gt; メンバーは、 &lt;code&gt;memory&lt;/code&gt; のサイズから &lt;code&gt;memoryOffset&lt;/code&gt; を引いた値以下で&lt;strong&gt;なければなりません。&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c9a29a2a7cff8c5858ab31f947fce664e5d3355e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; member of the &lt;code&gt;VkMemoryRequirements&lt;/code&gt; structure returned from a call to &lt;code&gt;vkGetImageMemoryRequirements&lt;/code&gt; with &lt;code&gt;image&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;memory&lt;/code&gt; minus &lt;code&gt;memoryOffset&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 付きの &lt;code&gt;vkGetImageMemoryRequirements&lt;/code&gt; の呼び出しから返される &lt;code&gt;VkMemoryRequirements&lt;/code&gt; 構造体の &lt;code&gt;size&lt;/code&gt; メンバーは、 &lt;code&gt;memory&lt;/code&gt; のサイズから &lt;code&gt;memoryOffset&lt;/code&gt; を引いた値以下で&lt;strong&gt;なければなりません。&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9669ae793ae82330efaddc4f1b6d2fa46b88c9f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;srcOffset&lt;/code&gt; member of a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than the size of &lt;code&gt;srcBuffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;srcOffset&lt;/code&gt; の所与の要素のメンバ &lt;code&gt;pRegions&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;の大きさよりも小さく &lt;code&gt;srcBuffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="81e0298bb5065344438754e72da780e874a08bda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;srcStageMask&lt;/code&gt; and &lt;code&gt;dstStageMask&lt;/code&gt; members of any element of the &lt;code&gt;pDependencies&lt;/code&gt; member of &lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfo&lt;/a&gt; used to create &lt;code&gt;renderpass&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported by the capabilities of the queue family identified by the &lt;code&gt;queueFamilyIndex&lt;/code&gt; member of the &lt;a href=&quot;#VkCommandPoolCreateInfo&quot;&gt;VkCommandPoolCreateInfo&lt;/a&gt; used to create the command pool which &lt;code&gt;commandBuffer&lt;/code&gt; was allocated from.</source>
          <target state="translated">&lt;code&gt;srcStageMask&lt;/code&gt; と &lt;code&gt;dstStageMask&lt;/code&gt; の任意の要素のメンバー &lt;code&gt;pDependencies&lt;/code&gt; のメンバー&lt;a href=&quot;#VkRenderPassCreateInfo&quot;&gt;VkRenderPassCreateInfoを&lt;/a&gt;作成するために使用される &lt;code&gt;renderpass&lt;/code&gt; を&lt;strong&gt;しなければならない&lt;/strong&gt;ことで識別されるキューファミリの機能によってサポートされる &lt;code&gt;queueFamilyIndex&lt;/code&gt; のメンバー&lt;a href=&quot;#VkCommandPoolCreateInfo&quot;&gt;VkCommandPoolCreateInfo&lt;/a&gt;コマンドプールの作成に使用さ &lt;code&gt;commandBuffer&lt;/code&gt; がから割り当てられたが。</target>
        </trans-unit>
        <trans-unit id="b99262b28fb7dccc209dbd02b496d24c845e46c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stage&lt;/code&gt; member of &lt;code&gt;stage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_SHADER_STAGE_COMPUTE_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;stage&lt;/code&gt; のメンバー &lt;code&gt;stage&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;こと &lt;code&gt;VK_SHADER_STAGE_COMPUTE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2131814b7a766b5bdad85ee3d3e6b699bb3d4ee1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stage&lt;/code&gt; member of any given element of &lt;code&gt;pStages&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_SHADER_STAGE_COMPUTE_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;stage&lt;/code&gt; の任意の要素のメンバ &lt;code&gt;pStages&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;ことはない &lt;code&gt;VK_SHADER_STAGE_COMPUTE_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5d8427f84a2a5c1038381fe9e7a78f48c0f2f554" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stage&lt;/code&gt; member of each element of &lt;code&gt;pStages&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be unique</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; の各要素の &lt;code&gt;stage&lt;/code&gt; メンバーは一意である&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c92a170278fc9e2375a9c31f51c31e661dcc7123" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stage&lt;/code&gt; member of one element of &lt;code&gt;pStages&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;code&gt;VK_SHADER_STAGE_VERTEX_BIT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;stage&lt;/code&gt; の一つの要素のメンバー &lt;code&gt;pStages&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;こと &lt;code&gt;VK_SHADER_STAGE_VERTEX_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de59a62f2f7bb4d74251ebbbc8a205285ce0a8b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vendorID&lt;/code&gt; and &lt;code&gt;deviceID&lt;/code&gt; fields are provided to allow applications to adapt to device characteristics that are not adequately exposed by other Vulkan queries. These &lt;strong&gt;may&lt;/strong&gt; include performance profiles, hardware errata, or other characteristics. In PCI-based implementations, the low sixteen bits of &lt;code&gt;vendorID&lt;/code&gt; and &lt;code&gt;deviceID&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; contain (respectively) the PCI vendor and device IDs associated with the hardware device, and the remaining bits &lt;strong&gt;must&lt;/strong&gt; be set to zero. In non-PCI implementations, the choice of what values to return &lt;strong&gt;may&lt;/strong&gt; be dictated by operating system or platform policies. It is otherwise at the discretion of the implementer, subject to the following constraints and guidelines:</source>
          <target state="translated">&lt;code&gt;vendorID&lt;/code&gt; と &lt;code&gt;deviceID&lt;/code&gt; のフィールドは、アプリケーションが適切に他のバルカンクエリによって露出されていないデバイスの特性に適合することを可能にするために提供されます。これらに&lt;strong&gt;は&lt;/strong&gt;、パフォーマンスプロファイル、ハードウェアエラッタ、またはその他の特性&lt;strong&gt;が&lt;/strong&gt;含まれる&lt;strong&gt;場合が&lt;/strong&gt;あります。PCIベースの実装では、 &lt;code&gt;vendorID&lt;/code&gt; と &lt;code&gt;deviceID&lt;/code&gt; の下位16ビットに、ハードウェアデバイスに関連付けられたPCIベンダーIDとデバイスIDが（それぞれ）含まれている&lt;strong&gt;必要&lt;/strong&gt;があり、残りのビット&lt;strong&gt;は&lt;/strong&gt;ゼロに設定する&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。非PCIの実装では、どのような値の選択は、返される&lt;strong&gt;月を&lt;/strong&gt;オペレーティングシステムまたはプラットフォームのポリシーによって決定されます。それ以外の場合は、次の制約およびガイドラインに従って、実装者の裁量に任されます。</target>
        </trans-unit>
        <trans-unit id="098acafb535ec82abe3012050d1ddeb9d907617a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;viewType&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be either &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D&lt;/code&gt; or &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;viewType&lt;/code&gt; &lt;strong&gt;しなければならない&lt;/strong&gt;のいずれかになり &lt;code&gt;VK_IMAGE_VIEW_TYPE_1D&lt;/code&gt; または &lt;code&gt;VK_IMAGE_VIEW_TYPE_2D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b631d0fa293d233953fa510afeb1f8cfbceacecb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vkCmdClearAttachments&lt;/code&gt; command is not affected by the bound pipeline state.</source>
          <target state="translated">&lt;code&gt;vkCmdClearAttachments&lt;/code&gt; のコマンドは、バインドされたパイプライン状態に影響されません。</target>
        </trans-unit>
        <trans-unit id="2bea4edeeb2adeeb9646a6a6a2589e895a239096" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;depth&lt;/code&gt; members of a &lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt; parameter &lt;strong&gt;must&lt;/strong&gt; always match the width, height, and depth of the image subresource corresponding to the parameter, respectively.</source>
          <target state="translated">&lt;a href=&quot;#VkExtent3D&quot;&gt;VkExtent3D&lt;/a&gt;パラメーターの &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;height&lt;/code&gt; 、および &lt;code&gt;depth&lt;/code&gt; メンバーは、それぞれ、パラメーターに対応する画像サブリソースの幅、高さ、および深さと常に一致している&lt;strong&gt;必要&lt;/strong&gt;があります。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0635954591f6bf9ebe5b5db6f4150676dfdbb8fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; members of &lt;code&gt;offset&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than or equal to &lt;code&gt;0&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; の &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; メンバーは &lt;code&gt;0&lt;/code&gt; 以上で&lt;strong&gt;なければなりません&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c535841c90dccbb28542ab36ddf70b40c863195f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; members of a &lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt; parameter &lt;strong&gt;must&lt;/strong&gt; always be zero.</source>
          <target state="translated">&lt;a href=&quot;#VkOffset3D&quot;&gt;VkOffset3D&lt;/a&gt;パラメーターの &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; 、および &lt;code&gt;z&lt;/code&gt; メンバーは、常にゼロで&lt;strong&gt;なければなりません&lt;/strong&gt;。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="93bc96eebd3423677fc3784258f8ff1eae3acfdd" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;binding range&lt;/em&gt; [&lt;code&gt;resourceOffset&lt;/code&gt;, &lt;code&gt;resourceOffset&lt;/code&gt; + &lt;code&gt;size&lt;/code&gt;) has different constraints based on &lt;code&gt;flags&lt;/code&gt;. If &lt;code&gt;flags&lt;/code&gt; contains &lt;code&gt;VK_SPARSE_MEMORY_BIND_METADATA_BIT&lt;/code&gt;, the binding range &lt;strong&gt;must&lt;/strong&gt; be within the mip tail region of the metadata aspect. This metadata region is defined by:</source>
          <target state="translated">&lt;em&gt;結合範囲&lt;/em&gt; [ &lt;code&gt;resourceOffset&lt;/code&gt; 、 &lt;code&gt;resourceOffset&lt;/code&gt; +の &lt;code&gt;size&lt;/code&gt; ）に基づいて、異なる制約有する &lt;code&gt;flags&lt;/code&gt; 。 &lt;code&gt;flags&lt;/code&gt; に &lt;code&gt;VK_SPARSE_MEMORY_BIND_METADATA_BIT&lt;/code&gt; が含まれている場合、バインディング範囲はメタデータアスペクトのミップテール領域内にある&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。このメタデータ領域は、次によって定義されます。</target>
        </trans-unit>
        <trans-unit id="22aa6e117b686a7c031d033f6507c3c8e014fa61" translate="yes" xml:space="preserve">
          <source>The above also applies when &lt;code&gt;VK_QUERY_RESULT_WAIT_BIT&lt;/code&gt; is used in combination with &lt;code&gt;VK_QUERY_RESULT_WITH_AVAILABILITY_BIT&lt;/code&gt;. In this case, the returned availability status &lt;strong&gt;may&lt;/strong&gt; reflect the result of a previous use of the query unless the &lt;code&gt;vkCmdResetQueryPool&lt;/code&gt; command has been executed since the last use of the query.</source>
          <target state="translated">上記の場合にも適用される &lt;code&gt;VK_QUERY_RESULT_WAIT_BIT&lt;/code&gt; はと組み合わせて使用される &lt;code&gt;VK_QUERY_RESULT_WITH_AVAILABILITY_BIT&lt;/code&gt; 。この場合、返された可用性ステータスが&lt;strong&gt;あり&lt;/strong&gt;場合を除き、クエリの以前の使用の結果を反映 &lt;code&gt;vkCmdResetQueryPool&lt;/code&gt; のコマンドは、クエリの最後に使用してから実行されています。</target>
        </trans-unit>
        <trans-unit id="cf89bfed9ea09ce48da4c21e3ce94056c57420ac" translate="yes" xml:space="preserve">
          <source>The above guarantee avoids a potential memory corruption in scenarios where host writes to a mapped memory object have not been flushed before the memory is unmapped (or freed), and the virtual address range is subsequently reused for a different mapping (or memory allocation).</source>
          <target state="translated">上記の保証は、マップされたメモリオブジェクトへのホストの書き込みが、メモリがアンマップ(または解放)される前にフラッシュされておらず、仮想アドレス範囲がその後に別のマッピング(またはメモリ割り当て)のために再利用されるシナリオでの潜在的なメモリ破損を回避します。</target>
        </trans-unit>
        <trans-unit id="56daef2d3a345c981074d0521a3db38efd169062" translate="yes" xml:space="preserve">
          <source>The above layout definition allows the descriptor bindings to be specified sparsely such that not all binding numbers between 0 and the maximum binding number need to be specified in the &lt;code&gt;pBindings&lt;/code&gt; array. Bindings that are not specified have a &lt;code&gt;descriptorCount&lt;/code&gt; and &lt;code&gt;stageFlags&lt;/code&gt; of zero, and the &lt;code&gt;descriptorType&lt;/code&gt; is treated as undefined. However, all binding numbers between 0 and the maximum binding number in the &lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt;::&lt;code&gt;pBindings&lt;/code&gt; array &lt;strong&gt;may&lt;/strong&gt; consume memory in the descriptor set layout even if not all descriptor bindings are used, though it &lt;strong&gt;should&lt;/strong&gt; not consume additional memory from the descriptor pool.</source>
          <target state="translated">上記のレイアウト定義では、0から最大バインディング番号までのすべてのバインディング番号を &lt;code&gt;pBindings&lt;/code&gt; 配列で指定する必要がないように、記述子バインディングをまばらに指定できます。指定されていないバインディングの &lt;code&gt;descriptorCount&lt;/code&gt; および &lt;code&gt;stageFlags&lt;/code&gt; はゼロであり、 &lt;code&gt;descriptorType&lt;/code&gt; は未定義として扱われます。ただし、0と&lt;a href=&quot;#VkDescriptorSetLayoutCreateInfo&quot;&gt;VkDescriptorSetLayoutCreateInfo&lt;/a&gt; :: &lt;code&gt;pBindings&lt;/code&gt; 配列の最大バインディング番号の間のすべてのバインディング番号は、すべての記述子バインディングが使用されていなくても、記述子セットレイアウトのメモリを消費する&lt;strong&gt;可能性が&lt;/strong&gt;ありますが、記述子プールから追加のメモリを消費する&lt;strong&gt;べきで&lt;/strong&gt;はあり&lt;strong&gt;ませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="80cb686d3f7b8d3d2a7c9259bbdd943307d90e08" translate="yes" xml:space="preserve">
          <source>The absolute value of &lt;code&gt;mipLodBias&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxSamplerLodBias&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;mipLodBias&lt;/code&gt; の絶対値は &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxSamplerLodBias&lt;/code&gt; 以下で&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="acea91dc9ebaac70dd26e5b7789fd22f7fc73c17" translate="yes" xml:space="preserve">
          <source>The allocated descriptor sets are returned in &lt;code&gt;pDescriptorSets&lt;/code&gt;.</source>
          <target state="translated">割り当てられた記述子セットは &lt;code&gt;pDescriptorSets&lt;/code&gt; に返されます。</target>
        </trans-unit>
        <trans-unit id="710d39fa7e15c8f09a8933107fedfa184e5e96eb" translate="yes" xml:space="preserve">
          <source>The attachment is not used or preserved in subpass &lt;strong&gt;S&lt;/strong&gt;.</source>
          <target state="translated">アタッチメントはサブパス&lt;strong&gt;S&lt;/strong&gt;で使用または保持されません。</target>
        </trans-unit>
        <trans-unit id="9b505f0513266dbafc4a3eb5b69b264af27413db" translate="yes" xml:space="preserve">
          <source>The attachment is used as a color, depth/stencil, or resolve attachment in any subpass in the render pass.</source>
          <target state="translated">アタッチメントは、レンダーパス内の任意のサブパスで、カラー、デプス/ステンシル、またはリゾルブのいずれかのアタッチメントとして使用されます。</target>
        </trans-unit>
        <trans-unit id="a6a0f359d66b01efceb00826f885257f4c5b9851" translate="yes" xml:space="preserve">
          <source>The bias value o for a polygon is</source>
          <target state="translated">ポリゴンのバイアス値 o は</target>
        </trans-unit>
        <trans-unit id="aa5717c4b74219f0b6297b247fb605cb3fb4ff46" translate="yes" xml:space="preserve">
          <source>The blending operation produces a new set of values R, G, B and A, which are written to the framebuffer attachment. If blending is not enabled for this attachment, then R, G, B and A are assigned R&lt;sub&gt;s0&lt;/sub&gt;, G&lt;sub&gt;s0&lt;/sub&gt;, B&lt;sub&gt;s0&lt;/sub&gt; and A&lt;sub&gt;s0&lt;/sub&gt;, respectively.</source>
          <target state="translated">ブレンド操作により、R、G、B、およびAの新しいセットが生成され、これらはフレームバッファーのアタッチメントに書き込まれます。このアタッチメントでブレンディングが有効になっていない場合、R、G、B、AにはそれぞれR &lt;sub&gt;s0&lt;/sub&gt;、G &lt;sub&gt;s0&lt;/sub&gt;、B &lt;sub&gt;s0&lt;/sub&gt;、A &lt;sub&gt;s0&lt;/sub&gt;が割り当てられます。</target>
        </trans-unit>
        <trans-unit id="565496b76a3aa0506509ae2ced78c3cc7301c7f4" translate="yes" xml:space="preserve">
          <source>The buffer region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;dstBuffer&lt;/code&gt;</source>
          <target state="translated">所与の要素で指定されたバッファ領域 &lt;code&gt;pRegions&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;内に含まれている領域である &lt;code&gt;dstBuffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="86296d853eed9afa2ea25b351f82b90c9ff01780" translate="yes" xml:space="preserve">
          <source>The buffer region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;srcBuffer&lt;/code&gt;</source>
          <target state="translated">所与の要素で指定されたバッファ領域 &lt;code&gt;pRegions&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;内に含まれている領域である &lt;code&gt;srcBuffer&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f019de8b8f115f7409d4cc544afe149fa8d33df" translate="yes" xml:space="preserve">
          <source>The color write mask operation is applied regardless of whether blending is enabled.</source>
          <target state="translated">カラーライトマスク操作は、ブレンディングが有効かどうかに関係なく適用されます。</target>
        </trans-unit>
        <trans-unit id="12d74f95e1e366bc99f8bb0f59524468df0c88e4" translate="yes" xml:space="preserve">
          <source>The combination of &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;imageType&lt;/code&gt;, &lt;code&gt;tiling&lt;/code&gt;, &lt;code&gt;usage&lt;/code&gt;, and &lt;code&gt;flags&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be supported, as indicated by a &lt;code&gt;VK_SUCCESS&lt;/code&gt; return value from &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; invoked with the same values passed to the corresponding parameters.</source>
          <target state="translated">対応するパラメーターに渡された同じ値で呼び出された &lt;code&gt;VK_SUCCESS&lt;/code&gt; からの &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; 戻り値によって示されるように、 &lt;code&gt;format&lt;/code&gt; 、 &lt;code&gt;imageType&lt;/code&gt; 、 &lt;code&gt;tiling&lt;/code&gt; 、 &lt;code&gt;usage&lt;/code&gt; 、および &lt;code&gt;flags&lt;/code&gt; の組み合わせがサポートされている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="00f46cc5ae868f238e8b29b2f3b4e69fd8dad4bf" translate="yes" xml:space="preserve">
          <source>The command pool&amp;rsquo;s queue family &lt;strong&gt;must&lt;/strong&gt; support a non-zero &lt;code&gt;timestampValidBits&lt;/code&gt;</source>
          <target state="translated">コマンドプールのキューファミリ&lt;strong&gt;は&lt;/strong&gt;、ゼロ以外の &lt;code&gt;timestampValidBits&lt;/code&gt; サポートする&lt;strong&gt;必要があり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="c2eb3c0c02419238d4ae7042a76a78181edb689e" translate="yes" xml:space="preserve">
          <source>The conditions leading to an optimal &lt;code&gt;renderArea&lt;/code&gt; are:</source>
          <target state="translated">最適な &lt;code&gt;renderArea&lt;/code&gt; につながる条件は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="50cb7c27ca8d62fb8fe3f0b869c6048232e2ce62" translate="yes" xml:space="preserve">
          <source>The contents of an attachment within the render area become undefined at the start of a subpass &lt;strong&gt;S&lt;/strong&gt; if all of the following conditions are true:</source>
          <target state="translated">次の条件がすべて当てはまる場合、レンダーエリア内のアタッチメントの内容は、サブパス&lt;strong&gt;Sの&lt;/strong&gt;開始時に未定義になります。</target>
        </trans-unit>
        <trans-unit id="a81b652043754cc83df106b77ecdb9353fb11230" translate="yes" xml:space="preserve">
          <source>The created descriptor pool is returned in &lt;code&gt;pDescriptorPool&lt;/code&gt;.</source>
          <target state="translated">作成された記述子プールは &lt;code&gt;pDescriptorPool&lt;/code&gt; に返されます。</target>
        </trans-unit>
        <trans-unit id="c756ee750341c4330bf0825cc0ec5072a4791252" translate="yes" xml:space="preserve">
          <source>The current render pass &lt;strong&gt;must&lt;/strong&gt; be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-compatibility&quot;&gt;compatible&lt;/a&gt; with the &lt;code&gt;renderPass&lt;/code&gt; member of the &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; structure specified when creating the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt;.</source>
          <target state="translated">電流パスをレンダリング&lt;strong&gt;しなければならない&lt;/strong&gt;ことが&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#renderpass-compatibility&quot;&gt;互換性&lt;/a&gt;を有する &lt;code&gt;renderPass&lt;/code&gt; のメンバー &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; の作成時に構造が指定 &lt;code&gt;VkPipeline&lt;/code&gt; 現在に結合 &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="b523df2a28c7478cef06a2fb3291fd00d2d3a575" translate="yes" xml:space="preserve">
          <source>The current subpass index &lt;strong&gt;must&lt;/strong&gt; be equal to the number of subpasses in the render pass minus one</source>
          <target state="translated">現在のサブパスインデックスは、レンダーパス内のサブパスの数から1を引いた数に等しく&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a83e57eda77585091f28f607f26e101161189cf2" translate="yes" xml:space="preserve">
          <source>The current subpass index &lt;strong&gt;must&lt;/strong&gt; be less than the number of subpasses in the render pass minus one</source>
          <target state="translated">現在のサブパスインデックスは、レンダーパス内のサブパスの数から1を引いた値よりも小さく&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b97b5e972908be5dcd30074a9cd15f959831395c" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_BLEND_CONSTANTS&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">現在バインドされているグラフィックスパイプライン&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VK_DYNAMIC_STATE_BLEND_CONSTANTS&lt;/code&gt; 動的状態を有効にして作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="35ecdff218ae9491544c29302f00f3c55f7f4e92" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BIAS&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">現在バインドされているグラフィックスパイプライン&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BIAS&lt;/code&gt; 動的状態を有効にして作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="a4e8acb181b547d821366967d07461678b13b736" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">現在バインドされているグラフィックパイプライン&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; 動的状態を有効にして作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="15942d1ea9b7ed8626bf0053742c26b804840926" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">現在バインドされているグラフィックスパイプライン&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; 動的状態を有効にして作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="9b23210ee9f0b7a0c91428b46063dc08a54f0775" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">現在バインドされているグラフィックスパイプライン&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; 動的状態を有効にして作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="db4d20d8da07c85e1330290da187eb65d77d7f8a" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">現在バインドされているグラフィックスパイプライン&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK&lt;/code&gt; 動的状態を有効にして作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="09c254f63a832e7453a4d843cd3f7ac08a60c41d" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_REFERENCE&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">現在バインドされているグラフィックスパイプライン&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_REFERENCE&lt;/code&gt; 動的状態を有効にして作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="88d292a68900a85230c2c67d1f7b53571615fb90" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_WRITE_MASK&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">現在バインドされているグラフィックスパイプライン&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VK_DYNAMIC_STATE_STENCIL_WRITE_MASK&lt;/code&gt; 動的状態を有効にして作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="30b15ce9e6e3d2a0477f955a8c618f174e78b8ff" translate="yes" xml:space="preserve">
          <source>The currently bound graphics pipeline &lt;strong&gt;must&lt;/strong&gt; have been created with the &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; dynamic state enabled</source>
          <target state="translated">現在バインドされているグラフィックスパイプライン&lt;strong&gt;は&lt;/strong&gt;、 &lt;code&gt;VK_DYNAMIC_STATE_VIEWPORT&lt;/code&gt; 動的状態を有効にして作成されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="db8a84e06d4430264416004b8e4c0843b3045a85" translate="yes" xml:space="preserve">
          <source>The definition of &lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt; is:</source>
          <target state="translated">&lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt;の定義は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="cfe93afb35386af9625bca9df468f2cf686963f7" translate="yes" xml:space="preserve">
          <source>The depth bounds test conditionally disables coverage of a sample based on the outcome of a comparison between the value z&lt;sub&gt;a&lt;/sub&gt; in the depth attachment at location (x&lt;sub&gt;f&lt;/sub&gt;,y&lt;sub&gt;f&lt;/sub&gt;) (for the appropriate sample) and a range of values. The test is enabled or disabled by the &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; member of &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;: If the pipeline state object is created without the &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; dynamic state enabled then the range of values used in the depth bounds test are defined by the &lt;code&gt;minDepthBounds&lt;/code&gt; and &lt;code&gt;maxDepthBounds&lt;/code&gt; members of the &lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt; structure. Otherwise, to dynamically set the depth bounds range values call:</source>
          <target state="translated">深度境界テストでは、位置（x &lt;sub&gt;f&lt;/sub&gt;、y &lt;sub&gt;f&lt;/sub&gt;）の深度アタッチメントの値z &lt;sub&gt;a&lt;/sub&gt;（適切なサンプル）と値の範囲との比較の結果に基づいて、条件付きでサンプルのカバレッジを無効にします。試験はによって有効または無効にされ &lt;code&gt;depthBoundsTestEnable&lt;/code&gt; のメンバー&lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;：パイプライン状態オブジェクトをせずに作成された場合 &lt;code&gt;VK_DYNAMIC_STATE_DEPTH_BOUNDS&lt;/code&gt; の動的状態深度境界テストで使用される値の範囲によって定義され、次いで有効 &lt;code&gt;minDepthBounds&lt;/code&gt; と &lt;code&gt;maxDepthBounds&lt;/code&gt; のメンバー&lt;a href=&quot;#VkPipelineDepthStencilStateCreateInfo&quot;&gt;VkPipelineDepthStencilStateCreateInfo&lt;/a&gt;&lt;sub&gt;&lt;/sub&gt;&lt;sub&gt;&lt;/sub&gt;構造。それ以外の場合、深度境界範囲の値を動的に設定するには、次を呼び出します。</target>
        </trans-unit>
        <trans-unit id="e41c7161827f899f311a2e5859f58e0b3a33000f" translate="yes" xml:space="preserve">
          <source>The depth values of all fragments generated by the rasterization of a polygon &lt;strong&gt;can&lt;/strong&gt; be offset by a single value that is computed for that polygon. This behavior is controlled by the &lt;code&gt;depthBiasEnable&lt;/code&gt;, &lt;code&gt;depthBiasConstantFactor&lt;/code&gt;, &lt;code&gt;depthBiasClamp&lt;/code&gt;, and &lt;code&gt;depthBiasSlopeFactor&lt;/code&gt; members of &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;, or by the corresponding parameters to the &lt;code&gt;vkCmdSetDepthBias&lt;/code&gt; command if depth bias state is dynamic.</source>
          <target state="translated">ポリゴンのラスタライズによって生成されるすべてのフラグメントの深度値は、そのポリゴンに対して計算される単一の値によってオフセット&lt;strong&gt;でき&lt;/strong&gt;ます。この現象は、によって制御される &lt;code&gt;depthBiasEnable&lt;/code&gt; 、 &lt;code&gt;depthBiasConstantFactor&lt;/code&gt; 、 &lt;code&gt;depthBiasClamp&lt;/code&gt; 、及び &lt;code&gt;depthBiasSlopeFactor&lt;/code&gt; 用のメンバー&lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;、またはそれに対応するパラメータによって &lt;code&gt;vkCmdSetDepthBias&lt;/code&gt; 深度バイアス状態が動的である場合は、コマンド。</target>
        </trans-unit>
        <trans-unit id="a5425ef20d59c0a9036bace40c57cd217d1c9cc0" translate="yes" xml:space="preserve">
          <source>The descriptor set contents bound by a call to &lt;code&gt;vkCmdBindDescriptorSets&lt;/code&gt;&lt;strong&gt;may&lt;/strong&gt; be consumed during host execution of the command, or during shader execution of the resulting draws, or any time in between. Thus, the contents &lt;strong&gt;must&lt;/strong&gt; not be altered (overwritten by an update command, or freed) between when the command is recorded and when the command completes executing on the queue. The contents of &lt;code&gt;pDynamicOffsets&lt;/code&gt; are consumed immediately during execution of &lt;code&gt;vkCmdBindDescriptorSets&lt;/code&gt;. Once all pending uses have completed, it is legal to update and reuse a descriptor set.</source>
          <target state="translated">&lt;code&gt;vkCmdBindDescriptorSets&lt;/code&gt; の呼び出しによってバインドされた記述子セットの内容は、コマンドのホスト実行中、または結果の描画のシェーダー実行中、またはその間のいつでも消費される&lt;strong&gt;可能性&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。したがって、コマンドが記録されてから、コマンドがキューでの実行を完了するまでの間、内容を変更（更新コマンドで上書き、または解放）しては&lt;strong&gt;なりませ&lt;/strong&gt;ん。内容 &lt;code&gt;pDynamicOffsets&lt;/code&gt; は、実行中に、すぐに消費されている &lt;code&gt;vkCmdBindDescriptorSets&lt;/code&gt; 。保留中の使用がすべて完了したら、記述子セットを更新して再利用することが合法です。</target>
        </trans-unit>
        <trans-unit id="aea000d1fdd9247f509123a494a5b76770e7469b" translate="yes" xml:space="preserve">
          <source>The destination region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;dstImage&lt;/code&gt;</source>
          <target state="translated">所与の要素によって指定された宛先領域 &lt;code&gt;pRegions&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;内に含まれている領域である &lt;code&gt;dstImage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa509db1bafcc77f4615a0c63ca921a0db9a046e" translate="yes" xml:space="preserve">
          <source>The details of the merge operation are implementation dependent, but implementations &lt;strong&gt;should&lt;/strong&gt; merge the contents of the specified pipelines and prune duplicate entries.</source>
          <target state="translated">マージ操作の詳細は実装に依存しますが、実装は指定されたパイプラインの内容をマージし、重複するエントリをプルーニングする&lt;strong&gt;必要&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="1488e0aea1834f68f8a9f1b9bc881fefc6fef565" translate="yes" xml:space="preserve">
          <source>The device has been lost. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;Lost Device&lt;/a&gt;.</source>
          <target state="translated">デバイスが紛失しました。&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#devsandqueues-lost-device&quot;&gt;紛失したデバイスを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="382f5e2cfd135b2147657b9579d44f1365f64c13" translate="yes" xml:space="preserve">
          <source>The effective offset used for dynamic uniform and storage buffer bindings is the sum of the relative offset taken from &lt;code&gt;pDynamicOffsets&lt;/code&gt;, and the base address of the buffer plus base offset in the descriptor set. The length of the dynamic uniform and storage buffer bindings is the buffer range as specified in the descriptor set.</source>
          <target state="translated">動的な均一およびストレージバッファーバインディングに使用される有効なオフセットは、 &lt;code&gt;pDynamicOffsets&lt;/code&gt; から取得した相対オフセットと、バッファーのベースアドレスと記述子セットのベースオフセットの合計です。動的なユニフォームおよびストレージバッファーバインディングの長さは、記述子セットで指定されたバッファー範囲です。</target>
        </trans-unit>
        <trans-unit id="c678a8ed2a8ebdb69e8ccabf05f91ff6439cc752" translate="yes" xml:space="preserve">
          <source>The elements of the sample mask array are of type &lt;code&gt;VkSampleMask&lt;/code&gt;, each representing 32 bits of coverage information:</source>
          <target state="translated">サンプルマスク配列の要素は &lt;code&gt;VkSampleMask&lt;/code&gt; 型で、それぞれが32ビットのカバレッジ情報を表します。</target>
        </trans-unit>
        <trans-unit id="0dfb1028299f1ad35aa097a44ef59c28589e3f02" translate="yes" xml:space="preserve">
          <source>The equivalent to &lt;code&gt;newLayout&lt;/code&gt; is the attachment&amp;rsquo;s layout according to the subpass description for &lt;code&gt;dstSubpass&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;newLayout&lt;/code&gt; に相当するのは、dstSubpassのサブパスの説明によるアタッチメントのレイアウト &lt;code&gt;dstSubpass&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ede059e8d00eb9bd9d71af3a314286f9b8949d16" translate="yes" xml:space="preserve">
          <source>The equivalent to &lt;code&gt;oldLayout&lt;/code&gt; is the attachment&amp;rsquo;s layout according to the subpass description for &lt;code&gt;srcSubpass&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;oldLayout&lt;/code&gt; に相当するのは、srcSubpassのサブパスの説明によるアタッチメントのレイアウト &lt;code&gt;srcSubpass&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d6e7639cbfe2fcd1c2eb8819c9d33d36a596d133" translate="yes" xml:space="preserve">
          <source>The event specified by &lt;code&gt;event&lt;/code&gt; is signaled.</source>
          <target state="translated">eventで指定された &lt;code&gt;event&lt;/code&gt; が通知されます。</target>
        </trans-unit>
        <trans-unit id="e9cafdd1b0b8f15c2a15b98715b015b1e9e5bd6d" translate="yes" xml:space="preserve">
          <source>The event specified by &lt;code&gt;event&lt;/code&gt; is unsignaled.</source>
          <target state="translated">eventで指定された &lt;code&gt;event&lt;/code&gt; は通知されません。</target>
        </trans-unit>
        <trans-unit id="65fd257ce7422e177bd432e60ee56ddc16f07848" translate="yes" xml:space="preserve">
          <source>The exact image view type is partially implicit, based on the image&amp;rsquo;s type and sample count, as well as the view creation parameters as described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-image-views-compatibility&quot;&gt;image view compatibility table&lt;/a&gt; for &lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageView&lt;/a&gt;. This table also shows which SPIR-V &lt;code&gt;OpTypeImage&lt;/code&gt;&lt;code&gt;Dim&lt;/code&gt; and &lt;code&gt;Arrayed&lt;/code&gt; parameters correspond to each image view type.</source>
          <target state="translated">正確なイメージビュータイプは、イメージのタイプとサンプル数、および&lt;a href=&quot;#vkCreateImageView&quot;&gt;vkCreateImageViewの&lt;/a&gt;&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#resources-image-views-compatibility&quot;&gt;イメージビュー互換性テーブル&lt;/a&gt;で説明されているビュー作成パラメーターに基づいて、部分的に暗黙的です。この表は、各画像ビュータイプに対応するSPIR-V &lt;code&gt;OpTypeImage&lt;/code&gt; &lt;code&gt;Dim&lt;/code&gt; および &lt;code&gt;Arrayed&lt;/code&gt; パラメーターも示しています。</target>
        </trans-unit>
        <trans-unit id="d838b31a1114821e01aa666eead8d7ced1ed8285" translate="yes" xml:space="preserve">
          <source>The fence specified by &lt;code&gt;fence&lt;/code&gt; is signaled.</source>
          <target state="translated">fenceによって指定された &lt;code&gt;fence&lt;/code&gt; が通知されます。</target>
        </trans-unit>
        <trans-unit id="edc73308b803087d7dc3897a77cef8cbe639790c" translate="yes" xml:space="preserve">
          <source>The fence specified by &lt;code&gt;fence&lt;/code&gt; is unsignaled.</source>
          <target state="translated">fenceによって指定された &lt;code&gt;fence&lt;/code&gt; は信号が送られていません。</target>
        </trans-unit>
        <trans-unit id="d00b25d47ef03526f1da69bb81bc43cf61e6d9b3" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access in the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;source stage mask&lt;/a&gt; specified by &lt;code&gt;srcStageMask&lt;/code&gt;. It is also limited to access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;source access mask&lt;/a&gt; specified by &lt;code&gt;srcAccessMask&lt;/code&gt;.</source>
          <target state="translated">最初の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;は、 &lt;code&gt;srcStageMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;ソースステージマスク&lt;/a&gt;によって決定されるパイプラインステージでのアクセスに制限されています。また、 &lt;code&gt;srcAccessMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;ソースアクセスマスクの&lt;/a&gt;アクセスタイプに限定されます。</target>
        </trans-unit>
        <trans-unit id="0dd28dd06912021101bc65025a2011470efbf7e3" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access in the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;source stage mask&lt;/a&gt; specified by &lt;code&gt;srcStageMask&lt;/code&gt;. Within that, the first access scope only includes the first access scopes defined by elements of the &lt;code&gt;pMemoryBarriers&lt;/code&gt;, &lt;code&gt;pBufferMemoryBarriers&lt;/code&gt; and &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; arrays, which each define a set of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers&quot;&gt;memory barriers&lt;/a&gt;. If no memory barriers are specified, then the first access scope includes no accesses.</source>
          <target state="translated">最初の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;は、 &lt;code&gt;srcStageMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;ソースステージマスク&lt;/a&gt;によって決定されるパイプラインステージでのアクセスに制限されています。その中で、最初のアクセススコープには、 &lt;code&gt;pMemoryBarriers&lt;/code&gt; 、 &lt;code&gt;pBufferMemoryBarriers&lt;/code&gt; 、および &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; 配列の要素によって定義された最初のアクセススコープのみが含まれ、それぞれが一連の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers&quot;&gt;メモリバリアを&lt;/a&gt;定義します。メモリバリアが指定されていない場合、最初のアクセススコープにはアクセスが含まれません。</target>
        </trans-unit>
        <trans-unit id="e492da86eede953cfa6a34c65b9acbf693f0d25b" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access to memory through the specified buffer range, via access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;source access mask&lt;/a&gt; specified by &lt;code&gt;srcAccessMask&lt;/code&gt;. If &lt;code&gt;srcAccessMask&lt;/code&gt; includes &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt;, memory writes performed by that access type are also made visible, as that access type is not performed through a resource.</source>
          <target state="translated">最初の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;は、 &lt;code&gt;srcAccessMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;ソースアクセスマスクの&lt;/a&gt;アクセスタイプを介した、指定されたバッファー範囲を介したメモリへのアクセスに制限されています。場合 &lt;code&gt;srcAccessMask&lt;/code&gt; が含ま &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; を、メモリへの書き込みは、そのアクセスタイプによって実行されるアクセスタイプがリソースを介して行われていないとしても、可視化されています。</target>
        </trans-unit>
        <trans-unit id="9247f95b382b547d5c431d1543727dd6f02b99ae" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access to memory through the specified image subresource range, via access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;source access mask&lt;/a&gt; specified by &lt;code&gt;srcAccessMask&lt;/code&gt;. If &lt;code&gt;srcAccessMask&lt;/code&gt; includes &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt;, memory writes performed by that access type are also made visible, as that access type is not performed through a resource.</source>
          <target state="translated">最初の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;は、 &lt;code&gt;srcAccessMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;ソースアクセスマスクの&lt;/a&gt;アクセスタイプを介した、指定されたイメージサブリソース範囲を介したメモリへのアクセスに制限されています。場合 &lt;code&gt;srcAccessMask&lt;/code&gt; が含ま &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; を、メモリへの書き込みは、そのアクセスタイプによって実行されるアクセスタイプがリソースを介して行われていないとしても、可視化されています。</target>
        </trans-unit>
        <trans-unit id="1abeefbc36a3864c139f34e0e0319c20852afa1b" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;source access mask&lt;/a&gt; specified by &lt;code&gt;srcAccessMask&lt;/code&gt;.</source>
          <target state="translated">最初の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;は、 &lt;code&gt;srcAccessMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;ソースアクセスマスクの&lt;/a&gt;アクセスタイプに制限されています。</target>
        </trans-unit>
        <trans-unit id="7b60353fa8805fa41f7ddc5f7b05159d0fb40a24" translate="yes" xml:space="preserve">
          <source>The first &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scope&lt;/a&gt; includes every command previously submitted to the same queue, including those in the same command buffer and batch. The synchronization scope is limited to operations on the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;source stage mask&lt;/a&gt; specified by &lt;code&gt;stageMask&lt;/code&gt;.</source>
          <target state="translated">最初の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同期スコープに&lt;/a&gt;は、以前に同じキューに送信されたすべてのコマンドが含まれます。これには、同じコマンドバッファーとバッチ内のコマンドも含まれます。同期スコープは、 &lt;code&gt;stageMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;ソースステージマスク&lt;/a&gt;によって決定されるパイプラインステージでの操作に制限されます。</target>
        </trans-unit>
        <trans-unit id="9882c112cd2476eacde68f380835624749568289" translate="yes" xml:space="preserve">
          <source>The first four bytes encode the length of the entire pipeline header, in bytes. This value includes all fields in the header including the pipeline cache version field and the size of the length field.</source>
          <target state="translated">最初の 4 バイトは、パイプラインヘッダー全体の長さをバイト単位でエンコードします。この値には、パイプラインキャッシュのバージョンフィールドと長さフィールドのサイズを含むヘッダー内のすべてのフィールドが含まれます。</target>
        </trans-unit>
        <trans-unit id="e5cf8c105b1ba372cb813ecaa7b2b837623dfbe2" translate="yes" xml:space="preserve">
          <source>The first step of polygon rasterization is to determine whether the triangle is &lt;em&gt;back-facing&lt;/em&gt; or &lt;em&gt;front-facing&lt;/em&gt;. This determination is made based on the sign of the (clipped or unclipped) polygon&amp;rsquo;s area computed in framebuffer coordinates. One way to compute this area is:</source>
          <target state="translated">ポリゴンのラスタライズの最初のステップは、三角形が&lt;em&gt;背面&lt;/em&gt;か&lt;em&gt;前面&lt;/em&gt;かを決定することです。この決定は、フレームバッファー座標で計算された（クリップされた、またはクリップされていない）ポリゴンの領域の符号に基づいて行われます。この領域を計算する1つの方法は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="226d5138064ec81a9e29b2c08e1448b087198c8b" translate="yes" xml:space="preserve">
          <source>The first synchronization scope only includes event signal operations that operate on members of &lt;code&gt;pEvents&lt;/code&gt;, and the operations that happened-before the event signal operations. Event signal operations performed by &lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt; that were previously submitted to the same queue are included in the first synchronization scope, if the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically latest&lt;/a&gt; pipeline stage in their &lt;code&gt;stageMask&lt;/code&gt; parameter is &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically earlier&lt;/a&gt; than or equal to the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;logically latest&lt;/a&gt; pipeline stage in &lt;code&gt;srcStageMask&lt;/code&gt;. Event signal operations performed by &lt;a href=&quot;#vkSetEvent&quot;&gt;vkSetEvent&lt;/a&gt; are only included in the first synchronization scope if &lt;code&gt;VK_PIPELINE_STAGE_HOST_BIT&lt;/code&gt; is included in &lt;code&gt;srcStageMask&lt;/code&gt;.</source>
          <target state="translated">最初の同期スコープには、 &lt;code&gt;pEvents&lt;/code&gt; のメンバーを操作するイベント信号操作と、イベント信号操作の前に発生した操作のみが含まれます。実行されるイベント信号操作&lt;a href=&quot;#vkCmdSetEvent&quot;&gt;vkCmdSetEvent&lt;/a&gt;場合、以前に同じキューに提出された、第1の同期範囲に含まれる&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;論理最新&lt;/a&gt;それらのパイプラインステージ &lt;code&gt;stageMask&lt;/code&gt; のパラメータであり&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;、論理的に、以前&lt;/a&gt;に比べて等しいか&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-order&quot;&gt;、論理的に最新&lt;/a&gt;のパイプラインステージ &lt;code&gt;srcStageMask&lt;/code&gt; 。&lt;a href=&quot;#vkSetEvent&quot;&gt;vkSetEvent&lt;/a&gt;によって実行されるイベント信号操作は、VK_PIPELINE_STAGE_HOST_BITの場合、最初の同期スコープにのみ含まれ &lt;code&gt;VK_PIPELINE_STAGE_HOST_BIT&lt;/code&gt; &lt;code&gt;srcStageMask&lt;/code&gt; に含まれています。</target>
        </trans-unit>
        <trans-unit id="209d85e794f8ee6dafb8b2b39e6c6f87b0930ab1" translate="yes" xml:space="preserve">
          <source>The first vertex index is at an offset of &lt;code&gt;firstIndex&lt;/code&gt; * &lt;code&gt;indexSize&lt;/code&gt; + &lt;code&gt;offset&lt;/code&gt; within the currently bound index buffer, where &lt;code&gt;offset&lt;/code&gt; is the offset specified by &lt;code&gt;vkCmdBindIndexBuffer&lt;/code&gt; and &lt;code&gt;indexSize&lt;/code&gt; is the byte size of the type specified by &lt;code&gt;indexType&lt;/code&gt;. Subsequent index values are retrieved from consecutive locations in the index buffer. Indices are first compared to the primitive restart value, then zero extended to 32 bits (if the &lt;code&gt;indexType&lt;/code&gt; is &lt;code&gt;VK_INDEX_TYPE_UINT16&lt;/code&gt;) and have &lt;code&gt;vertexOffset&lt;/code&gt; added to them, before being supplied as the &lt;code&gt;vertexIndex&lt;/code&gt; value.</source>
          <target state="translated">最初の頂点インデックスは、オフセットである &lt;code&gt;firstIndex&lt;/code&gt; * &lt;code&gt;indexSize&lt;/code&gt; + &lt;code&gt;offset&lt;/code&gt; 現在バインドされているインデックスバッファ内 &lt;code&gt;offset&lt;/code&gt; によって指定されたオフセットで &lt;code&gt;vkCmdBindIndexBuffer&lt;/code&gt; と &lt;code&gt;indexSize&lt;/code&gt; がで指定されたタイプのバイトサイズである &lt;code&gt;indexType&lt;/code&gt; 。後続のインデックス値は、インデックスバッファ内の連続した場所から取得されます。インデックスは最初にプリミティブリスタート値と比較され、次にゼロが32ビットに拡張され（ &lt;code&gt;indexType&lt;/code&gt; が &lt;code&gt;VK_INDEX_TYPE_UINT16&lt;/code&gt; の場合）、 &lt;code&gt;vertexIndex&lt;/code&gt; 値として提供される前に、それらに &lt;code&gt;vertexOffset&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="991b1d3304070211ebd8bee1a42b0cc6edfaf3b0" translate="yes" xml:space="preserve">
          <source>The floating-point viewport bounds are represented with an &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-viewportSubPixelBits&quot;&gt;implementation-dependent precision&lt;/a&gt;.</source>
          <target state="translated">浮動小数点ビューポートの境界は、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-viewportSubPixelBits&quot;&gt;実装に依存する精度で&lt;/a&gt;表されます。</target>
        </trans-unit>
        <trans-unit id="cd1d8138f684f4b42c62c0e61b0a0709ff681bf3" translate="yes" xml:space="preserve">
          <source>The following bits &lt;strong&gt;may&lt;/strong&gt; be set in &lt;code&gt;bufferFeatures&lt;/code&gt;, specifying that the features are supported by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkBuffer&quot;&gt;buffers&lt;/a&gt; or &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkBufferView&quot;&gt;buffer views&lt;/a&gt; created with the queried &lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt;::&lt;code&gt;format&lt;/code&gt;:</source>
          <target state="translated">次のビット&lt;strong&gt;が&lt;/strong&gt; &lt;code&gt;bufferFeatures&lt;/code&gt; で設定され、クエリされた&lt;a href=&quot;#vkGetPhysicalDeviceProperties&quot;&gt;vkGetPhysicalDeviceProperties&lt;/a&gt; :: &lt;code&gt;format&lt;/code&gt; 作成された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkBuffer&quot;&gt;バッファー&lt;/a&gt;または&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkBufferView&quot;&gt;バッファービューで&lt;/a&gt;機能がサポートされることを指定します。</target>
        </trans-unit>
        <trans-unit id="4ef3009d4b093b8b62b75a7072a32392af20ca1d" translate="yes" xml:space="preserve">
          <source>The following bits &lt;strong&gt;may&lt;/strong&gt; be set in &lt;code&gt;linearTilingFeatures&lt;/code&gt; and &lt;code&gt;optimalTilingFeatures&lt;/code&gt;, specifying that the features are supported by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkImage&quot;&gt;images&lt;/a&gt; or &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkImageView&quot;&gt;image views&lt;/a&gt; created with the queried &lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt;::&lt;code&gt;format&lt;/code&gt;:</source>
          <target state="translated">次のビットが&lt;strong&gt;できる&lt;/strong&gt;に設定さ &lt;code&gt;linearTilingFeatures&lt;/code&gt; と &lt;code&gt;optimalTilingFeatures&lt;/code&gt; 機能によりサポートされていることを指定して、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkImage&quot;&gt;画像&lt;/a&gt;又は&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#VkImageView&quot;&gt;画像ビューの&lt;/a&gt;照会を使用して作成&lt;a href=&quot;#vkGetPhysicalDeviceFormatProperties&quot;&gt;vkGetPhysicalDeviceFormatProperties&lt;/a&gt; :: &lt;code&gt;format&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="bd1f625cbc9aa7c902aedf2870a8d2cf96df52f1" translate="yes" xml:space="preserve">
          <source>The following filtering and conversion rules apply:</source>
          <target state="translated">以下のフィルタリングおよび変換ルールが適用されます。</target>
        </trans-unit>
        <trans-unit id="cae5ac67a733200806eb81fde4ed63ac0ed45839" translate="yes" xml:space="preserve">
          <source>The formats of &lt;code&gt;srcImage&lt;/code&gt; and &lt;code&gt;dstImage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be compatible. Formats are considered compatible if their element size is the same between both formats. For example, &lt;code&gt;VK_FORMAT_R8G8B8A8_UNORM&lt;/code&gt; is compatible with &lt;code&gt;VK_FORMAT_R32_UINT&lt;/code&gt; because both texels are 4 bytes in size. Depth/stencil formats &lt;strong&gt;must&lt;/strong&gt; match exactly.</source>
          <target state="translated">&lt;code&gt;srcImage&lt;/code&gt; と &lt;code&gt;dstImage&lt;/code&gt; のフォーマットは互換性が&lt;strong&gt;なければなりませ&lt;/strong&gt;ん。要素のサイズが両方の形式で同じである場合、形式は互換性があると見なされます。例えば、 &lt;code&gt;VK_FORMAT_R8G8B8A8_UNORM&lt;/code&gt; は互換性があり &lt;code&gt;VK_FORMAT_R32_UINT&lt;/code&gt; 両方テクセルのサイズが4バイトであるからです。深度/ステンシルのフォーマット&lt;strong&gt;は&lt;/strong&gt;正確に一致する&lt;strong&gt;必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="04adf0d7f1a5f2426d3d8f06212b1af0c925fb2b" translate="yes" xml:space="preserve">
          <source>The four array elements of the clear color map to R, G, B, and A components of image formats, in order.</source>
          <target state="translated">画像フォーマットのR、G、B、Aの各構成要素へのクリアカラーマップの4つの配列要素を順に示します。</target>
        </trans-unit>
        <trans-unit id="a35b898f1e242dcd8c287423a0b0a63288499113" translate="yes" xml:space="preserve">
          <source>The framebuffer depth coordinate &lt;code&gt;z&lt;/code&gt;&lt;sub&gt;f&lt;/sub&gt;&lt;strong&gt;may&lt;/strong&gt; be represented using either a fixed-point or floating-point representation. However, a floating-point representation &lt;strong&gt;must&lt;/strong&gt; be used if the depth/stencil attachment has a floating-point depth component. If an m-bit fixed-point representation is used, we assume that it represents each value \(\frac{k}{2^m - 1}\), where k &amp;isin; { 0, 1, &amp;hellip;​, 2&lt;sup&gt;m&lt;/sup&gt;-1 }, as k (e.g. 1.0 is represented in binary as a string of all ones).</source>
          <target state="translated">フレームバッファの深度座標 &lt;code&gt;z&lt;/code&gt; &lt;sub&gt;f &lt;/sub&gt;&lt;strong&gt;は&lt;/strong&gt;、固定小数点または浮動小数点表現を使用して表す&lt;strong&gt;こと&lt;/strong&gt;が&lt;strong&gt;でき&lt;/strong&gt;ます。ただし、深度/ステンシルアタッチメントに浮動小数点深度コンポーネントがある場合は、浮動小数点表現を使用する&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。mビットの固定小数点表現を使用する場合、我々はそれが各値（\ \ FRAC {K} {2 ^ M - 1} \）を表すと仮定し、ここで、k&amp;isin;{0、1、...、2 &lt;sup&gt;M&lt;/sup&gt; - 1}、kとして（たとえば、1.0はすべて1の文字列としてバイナリで表されます）。</target>
        </trans-unit>
        <trans-unit id="5cbf55345bdb079a7ed741287eac1621828d53c6" translate="yes" xml:space="preserve">
          <source>The functions &lt;strong&gt;must&lt;/strong&gt; not use offsets.</source>
          <target state="translated">関数&lt;strong&gt;は&lt;/strong&gt;オフセットを使用して&lt;strong&gt;はなりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="94407d47d1ad9d03bb3c6a49b92c83d857c2c4cc" translate="yes" xml:space="preserve">
          <source>The functions &lt;strong&gt;must&lt;/strong&gt; not use projection.</source>
          <target state="translated">関数&lt;strong&gt;は&lt;/strong&gt;プロジェクションを使用して&lt;strong&gt;はなりませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="c34e2145e54dd65f98a2cefdff1129eef069a554" translate="yes" xml:space="preserve">
          <source>The image layout of each image subresource &lt;strong&gt;must&lt;/strong&gt; be well-defined at each point in the image subresource&amp;rsquo;s lifetime. This means that when performing a layout transition on the image subresource, the old layout value &lt;strong&gt;must&lt;/strong&gt; either equal the current layout of the image subresource (at the time the transition executes), or else be &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; (implying that the contents of the image subresource need not be preserved). The new layout used in a transition &lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; or &lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt;.</source>
          <target state="translated">各画像サブリソースの画像レイアウトは、画像サブリソースのライフタイムの各ポイントで明確に定義されている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。つまり、画像サブリソースでレイアウト遷移を実行する場合、古いレイアウト値は、画像サブリソースの現在のレイアウト（遷移の実行時）に等しいか、または &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; で&lt;strong&gt;なければなりません&lt;/strong&gt;（画像サブリソースのコンテンツが必要であることを意味します）。保存されません）。遷移で使用される新しいレイアウトは &lt;code&gt;VK_IMAGE_LAYOUT_UNDEFINED&lt;/code&gt; または &lt;code&gt;VK_IMAGE_LAYOUT_PREINITIALIZED&lt;/code&gt; であってはなり&lt;strong&gt;ませ&lt;/strong&gt;ん。</target>
        </trans-unit>
        <trans-unit id="2c5f1c20b719b66c6c83edc199dc2b044d8a1ebc" translate="yes" xml:space="preserve">
          <source>The image region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;dstImage&lt;/code&gt;</source>
          <target state="translated">所与の要素によって指定された画像領域 &lt;code&gt;pRegions&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;内に含まれている領域である &lt;code&gt;dstImage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="892ac42f1e7b7aceb128464b30a7eeb57420eedb" translate="yes" xml:space="preserve">
          <source>The image region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;srcImage&lt;/code&gt;</source>
          <target state="translated">所与の要素によって指定された画像領域 &lt;code&gt;pRegions&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;内に含まれている領域である &lt;code&gt;srcImage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3ede74731e52c6a1967502c1cc7f16d29ef00b4f" translate="yes" xml:space="preserve">
          <source>The image view &lt;strong&gt;must&lt;/strong&gt; have a single layer and a single mip level.</source>
          <target state="translated">画像ビューは、&lt;strong&gt;必要があり&lt;/strong&gt;、単層及び単一のMIPレベルを有します。</target>
        </trans-unit>
        <trans-unit id="c15cd9e119bbc69cabd2468d1d58352a3bf63a07" translate="yes" xml:space="preserve">
          <source>The implementation &lt;strong&gt;may&lt;/strong&gt; update the commitment at any time, and the value returned by this query &lt;strong&gt;may&lt;/strong&gt; be out of date.</source>
          <target state="translated">実装&lt;strong&gt;は&lt;/strong&gt;いつでもコミットメントを更新する&lt;strong&gt;可能性が&lt;/strong&gt;あり、このクエリによって返される値は古くなっている&lt;strong&gt;可能性&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="9a97052903fd73a84d038a3ddccbc30dcd8095bb" translate="yes" xml:space="preserve">
          <source>The implementation guarantees to allocate any committed memory from the heapIndex indicated by the memory type that the memory object was created with.</source>
          <target state="translated">この実装は、メモリオブジェクトが作成されたメモリタイプが示す heapIndex からコミットされたメモリを割り当てることを保証します。</target>
        </trans-unit>
        <trans-unit id="19b2e86ba5bb4b04756279e82d8c41a7f822004c" translate="yes" xml:space="preserve">
          <source>The intent of the &lt;code&gt;viewportBoundsRange&lt;/code&gt; limit is to allow a maximum sized viewport to be arbitrarily shifted relative to the output target as long as at least some portion intersects. This would give a bounds limit of [-&lt;code&gt;size&lt;/code&gt; + 1, 2 &amp;times; &lt;code&gt;size&lt;/code&gt; - 1] which would allow all possible non-empty-set intersections of the output target and the viewport. Since these numbers are typically powers of two, picking the signed number range using the smallest possible number of bits ends up with the specified range.</source>
          <target state="translated">&lt;code&gt;viewportBoundsRange&lt;/code&gt; 制限の目的は、少なくとも一部が交差している限り、最大サイズのビューポートを出力ターゲットに対して任意にシフトできるようにすることです。これにより、[- &lt;code&gt;size&lt;/code&gt; + 1、2&amp;times; &lt;code&gt;size&lt;/code&gt; -1]の境界制限が与えられ、出力ターゲットとビューポートの空でないセットのすべての可能な交差が許可されます。これらの数値は通常2の累乗であるため、可能な限り最小のビット数を使用して符号付き数値範囲を選択すると、指定された範囲になります。</target>
        </trans-unit>
        <trans-unit id="01c644decf9778ee405c3f7c2b0b19933a5a310a" translate="yes" xml:space="preserve">
          <source>The interpretation of the sign of a is determined by the &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;::&lt;code&gt;frontFace&lt;/code&gt; property of the currently active pipeline. Possible values are:</source>
          <target state="translated">aの符号の解釈は、現在アクティブなパイプラインの&lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt; :: &lt;code&gt;frontFace&lt;/code&gt; プロパティによって決定されます。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="75dbbbf2271598e9e3e9f03d07ff97c2ebc46d6e" translate="yes" xml:space="preserve">
          <source>The layers [&lt;code&gt;baseArrayLayer&lt;/code&gt;, &lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;code&gt;layerCount&lt;/code&gt;) counting from the base layer of the attachment image view are cleared.</source>
          <target state="translated">添付画像ビューのベースレイヤーから数えたレイヤー[ &lt;code&gt;baseArrayLayer&lt;/code&gt; 、 &lt;code&gt;baseArrayLayer&lt;/code&gt; + &lt;code&gt;layerCount&lt;/code&gt; ）はクリアされます。</target>
        </trans-unit>
        <trans-unit id="a522dd3a9e2bec0bfdbcca03c0a13cd6e00d81e8" translate="yes" xml:space="preserve">
          <source>The layers specified by a given element of &lt;code&gt;pRects&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be contained within every attachment that &lt;code&gt;pAttachments&lt;/code&gt; refers to</source>
          <target state="translated">&lt;code&gt;pRects&lt;/code&gt; の特定の要素によって指定されたレイヤーは、 &lt;code&gt;pAttachments&lt;/code&gt; が参照するすべてのアタッチメント内に含まれている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="9e3fdd959cb433bb8274942cbab7498212e6f1f5" translate="yes" xml:space="preserve">
          <source>The least significant s bits of &lt;code&gt;writeMask&lt;/code&gt;, where s is the number of bits in the stencil framebuffer attachment, specify an integer mask. Where a 1 appears in this mask, the corresponding bit in the stencil value in the depth/stencil attachment is written; where a 0 appears, the bit is not written. The &lt;code&gt;writeMask&lt;/code&gt; value uses either the front-facing or back-facing state based on the facingness of the fragment. Fragments generated by front-facing primitives use the front mask and fragments generated by back-facing primitives use the back mask.</source>
          <target state="translated">&lt;code&gt;writeMask&lt;/code&gt; の最下位sビット（sはステンシルフレームバッファーアタッチメントのビット数）で、整数マスクを指定します。このマスクに1が表示される場合、深度/ステンシルアタッチメントのステンシル値の対応するビットが書き込まれます。 0が表示される場合、ビットは書き込まれません。 &lt;code&gt;writeMask&lt;/code&gt; の断片のfacingnessに基づく値が使用前向き又は後向き状態のいずれか。前面プリミティブによって生成されたフラグメントは前面マスクを使用し、背面プリミティブによって生成されたフラグメントは背面マスクを使用します。</target>
        </trans-unit>
        <trans-unit id="fa20fe39416a6a68c7f67744c98d8433a97b537c" translate="yes" xml:space="preserve">
          <source>The lifetime of each of these objects is bound by the lifetime of the &lt;code&gt;VkDevice&lt;/code&gt; object. Therefore, to avoid resource leaks, it is critical that an application explicitly free all of these resources prior to calling &lt;code&gt;vkDestroyDevice&lt;/code&gt;.</source>
          <target state="translated">これらの各オブジェクトの寿命は、 &lt;code&gt;VkDevice&lt;/code&gt; オブジェクトの寿命によって制限されます。したがって、リソースリークを回避するには、アプリケーションが &lt;code&gt;vkDestroyDevice&lt;/code&gt; を呼び出す前にこれらのリソースをすべて明示的に解放することが重要です。</target>
        </trans-unit>
        <trans-unit id="cc45a5dee0c4acaae7037b99992ba48c0a396491" translate="yes" xml:space="preserve">
          <source>The limitations on an image format that are reported by &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; have the following property: if &lt;code&gt;usage1&lt;/code&gt; and &lt;code&gt;usage2&lt;/code&gt; of type &lt;a href=&quot;#VkImageUsageFlags&quot;&gt;VkImageUsageFlags&lt;/a&gt; are such that the bits set in &lt;code&gt;usage1&lt;/code&gt; are a subset of the bits set in &lt;code&gt;usage2&lt;/code&gt;, and &lt;code&gt;flags1&lt;/code&gt; and &lt;code&gt;flags2&lt;/code&gt; of type &lt;a href=&quot;#VkImageCreateFlags&quot;&gt;VkImageCreateFlags&lt;/a&gt; are such that the bits set in &lt;code&gt;flags1&lt;/code&gt; are a subset of the bits set in &lt;code&gt;flags2&lt;/code&gt;, then the limitations for &lt;code&gt;usage1&lt;/code&gt; and &lt;code&gt;flags1&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be no more strict than the limitations for &lt;code&gt;usage2&lt;/code&gt; and &lt;code&gt;flags2&lt;/code&gt;, for all values of &lt;code&gt;format&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;tiling&lt;/code&gt;.</source>
          <target state="translated">報告されている画像フォーマットの制限 &lt;code&gt;vkGetPhysicalDeviceImageFormatProperties&lt;/code&gt; は以下の特性を有する：場合 &lt;code&gt;usage1&lt;/code&gt; と &lt;code&gt;usage2&lt;/code&gt; 型の&lt;a href=&quot;#VkImageUsageFlags&quot;&gt;VkImageUsageFlagsは&lt;/a&gt;ようなものであるに設定されたビットこと &lt;code&gt;usage1&lt;/code&gt; はに設定されたビットのサブセットで &lt;code&gt;usage2&lt;/code&gt; 、及び &lt;code&gt;flags1&lt;/code&gt; と &lt;code&gt;flags2&lt;/code&gt; 型の&lt;a href=&quot;#VkImageCreateFlags&quot;&gt;VkImageCreateFlags&lt;/a&gt;ようになっています設定されたビットこと &lt;code&gt;flags1&lt;/code&gt; がで設定されたビットのサブセットである &lt;code&gt;flags2&lt;/code&gt; 、その後の制限 &lt;code&gt;usage1&lt;/code&gt; と &lt;code&gt;flags1&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;の制限よりも厳しくしない &lt;code&gt;usage2&lt;/code&gt; そして &lt;code&gt;flags2&lt;/code&gt; のすべての値に対して、 &lt;code&gt;format&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、および &lt;code&gt;tiling&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a09d5f518198a7cce50d94354298702d1f57a8a" translate="yes" xml:space="preserve">
          <source>The line width is specified by the &lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt;::&lt;code&gt;lineWidth&lt;/code&gt; property of the currently active pipeline, if the pipeline was not created with &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; enabled.</source>
          <target state="translated">パイプラインが &lt;code&gt;VK_DYNAMIC_STATE_LINE_WIDTH&lt;/code&gt; を有効にして作成されていない場合、ライン幅は、現在アクティブなパイプラインの&lt;a href=&quot;#VkPipelineRasterizationStateCreateInfo&quot;&gt;VkPipelineRasterizationStateCreateInfo&lt;/a&gt; :: &lt;code&gt;lineWidth&lt;/code&gt; プロパティによって指定されます。</target>
        </trans-unit>
        <trans-unit id="21c35b4cd4f78eec84ee719ba63db9d6e71098ff" translate="yes" xml:space="preserve">
          <source>The list of available layers may change at any time due to actions outside of the Vulkan implementation, so two calls to &lt;code&gt;vkEnumerateInstanceLayerProperties&lt;/code&gt; with the same parameters &lt;strong&gt;may&lt;/strong&gt; return different results, or retrieve different &lt;code&gt;pPropertyCount&lt;/code&gt; values or &lt;code&gt;pProperties&lt;/code&gt; contents. Once an instance has been created, the layers enabled for that instance will continue to be enabled and valid for the lifetime of that instance, even if some of them become unavailable for future instances.</source>
          <target state="translated">利用可能なレイヤーのリストは、Vulkan実装の外部のアクションによりいつでも変更される可能性があるため、同じパラメーターで &lt;code&gt;vkEnumerateInstanceLayerProperties&lt;/code&gt; を2回呼び出すと、異なる結果&lt;strong&gt;が&lt;/strong&gt;返されるか、異なる &lt;code&gt;pPropertyCount&lt;/code&gt; 値または &lt;code&gt;pProperties&lt;/code&gt; のコンテンツが取得される場合があります。インスタンスが作成されると、そのインスタンスで有効になっているレイヤーは、一部のレイヤーが将来のインスタンスで使用できなくなる場合でも、そのインスタンスの存続期間中は引き続き有効で有効です。</target>
        </trans-unit>
        <trans-unit id="d310f949025d9c3b6e405c6130bf52ef1570b7a8" translate="yes" xml:space="preserve">
          <source>The list of layers enumerated by &lt;code&gt;vkEnumerateDeviceLayerProperties&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be exactly the sequence of layers enabled for the instance. The members of &lt;code&gt;VkLayerProperties&lt;/code&gt; for each enumerated layer &lt;strong&gt;must&lt;/strong&gt; be the same as the properties when the layer was enumerated by &lt;code&gt;vkEnumerateInstanceLayerProperties&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;vkEnumerateDeviceLayerProperties&lt;/code&gt; によって列挙されるレイヤーのリストは、インスタンスで有効になっているレイヤーのシーケンスと完全に一致している&lt;strong&gt;必要&lt;/strong&gt;があります。列挙された各レイヤーの &lt;code&gt;VkLayerProperties&lt;/code&gt; のメンバーは、レイヤーが &lt;code&gt;vkEnumerateInstanceLayerProperties&lt;/code&gt; によって列挙されたときのプロパティと同じである&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c54041801eda282f39fd289fd982911bd81cd6a9" translate="yes" xml:space="preserve">
          <source>The load operation for each sample in an attachment happens-before any recorded command which accesses the sample in the first subpass where the attachment is used. Load operations for attachments with a depth/stencil format execute in the &lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt; pipeline stage. Load operations for attachments with a color format execute in the &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; pipeline stage.</source>
          <target state="translated">添付ファイルの各サンプルの読み込み操作は、添付ファイルが使用される最初のサブパスのサンプルにアクセスする記録されたコマンドの前に発生します。深度/ステンシル形式の添付ファイルの読み込み操作は、 &lt;code&gt;VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT&lt;/code&gt; パイプラインステージで実行されます。色形式の添付ファイルの読み込み操作は、 &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; で実行されますパイプラインステージでます。</target>
        </trans-unit>
        <trans-unit id="c5d36db236467e630781781820ef25da66dc89f9" translate="yes" xml:space="preserve">
          <source>The logical operations supported by Vulkan are summarized in the following table in which</source>
          <target state="translated">Vulkanでサポートされている論理操作は以下の表にまとめられています。</target>
        </trans-unit>
        <trans-unit id="b21dc053bc23767c6ac2408bd1ce4520f8987da2" translate="yes" xml:space="preserve">
          <source>The loop will find the first supported memory type that has all bits requested in &lt;code&gt;properties&lt;/code&gt; set. If there is no exact match, it will find a closest match (i.e. a memory type with the fewest additional bits set), which has some additional bits set but which are not detrimental to the behaviors requested by &lt;code&gt;properties&lt;/code&gt;. The application &lt;strong&gt;can&lt;/strong&gt; first search for the optimal properties, e.g. a memory type that is device-local or supports coherent cached accesses, as appropriate for the intended usage, and if such a memory type is not present &lt;strong&gt;can&lt;/strong&gt; fallback to searching for a less optimal but guaranteed set of properties such as &quot;0&quot; or &quot;host-visible and coherent&quot;.</source>
          <target state="translated">ループは、 &lt;code&gt;properties&lt;/code&gt; セットで要求されたすべてのビットを持つ最初のサポートされているメモリタイプを見つけます。完全一致がない場合は、最も近い一致（つまり、追加ビットセットが最も少ないメモリタイプ）が検索され &lt;code&gt;properties&lt;/code&gt; 。追加ビットセットがいくつかありますが、プロパティによって要求される動作に悪影響はありません。アプリケーション&lt;strong&gt;は、&lt;/strong&gt;最初に最適なプロパティを検索&lt;strong&gt;でき&lt;/strong&gt;ます。たとえば、意図した使用法に応じて、デバイスローカルまたはコヒーレントキャッシュアクセスをサポートするメモリタイプを検索します。そのようなメモリタイプが存在しない場合、最適ではない&lt;strong&gt;が&lt;/strong&gt;、検索にフォールバック&lt;strong&gt;でき&lt;/strong&gt;ます。 「0」または「ホストから見える一貫性のある」などの保証されたプロパティのセット。</target>
        </trans-unit>
        <trans-unit id="995eda1a70ec08ec89320329b625b396e654f896" translate="yes" xml:space="preserve">
          <source>The maximum binding number specified &lt;strong&gt;should&lt;/strong&gt; be as compact as possible to avoid wasted memory.</source>
          <target state="translated">指定された最大バインディング数&lt;strong&gt;は&lt;/strong&gt;、メモリの浪費を避けるために、できるだけコンパクトにする必要があります。</target>
        </trans-unit>
        <trans-unit id="616d28f646176989bd55e2bd369eb2ba19eb70c8" translate="yes" xml:space="preserve">
          <source>The maximum depth slope m of a triangle is</source>
          <target state="translated">三角形の最大深さの傾きmは</target>
        </trans-unit>
        <trans-unit id="ff4cba9613e626822043f05bf920927c34eec76f" translate="yes" xml:space="preserve">
          <source>The maximum number of sampler objects which &lt;strong&gt;can&lt;/strong&gt; be simultaneously created on a device is implementation-dependent and specified by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxSamplerAllocationCount&quot;&gt;&lt;code&gt;maxSamplerAllocationCount&lt;/code&gt;&lt;/a&gt; member of the &lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt; structure. If &lt;code&gt;maxSamplerAllocationCount&lt;/code&gt; is exceeded, &lt;code&gt;vkCreateSampler&lt;/code&gt; will return &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt;.</source>
          <target state="translated">デバイスで同時に作成&lt;strong&gt;できる&lt;/strong&gt;サンプラーオブジェクトの最大数は実装に依存し、&lt;a href=&quot;#VkPhysicalDeviceLimits&quot;&gt;VkPhysicalDeviceLimits&lt;/a&gt;構造体の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxSamplerAllocationCount&quot;&gt; &lt;code&gt;maxSamplerAllocationCount&lt;/code&gt; &lt;/a&gt;メンバーによって指定されます。場合 &lt;code&gt;maxSamplerAllocationCount&lt;/code&gt; を超えて、 &lt;code&gt;vkCreateSampler&lt;/code&gt; が返されます &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="90cd38f4b464a3432f018619ea0071c10e747e97" translate="yes" xml:space="preserve">
          <source>The members of &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt; have the same meaning as the corresponding parameters of &lt;a href=&quot;#vkCmdDispatch&quot;&gt;vkCmdDispatch&lt;/a&gt;.</source>
          <target state="translated">メンバー &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt; は、対応するパラメータと同じ意味を持っている&lt;a href=&quot;#vkCmdDispatch&quot;&gt;vkCmdDispatch&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="14baae74c405bc18501d4ba5cc537cdc44a0a87b" translate="yes" xml:space="preserve">
          <source>The members of &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; have the same meaning as the similarly named parameters of &lt;a href=&quot;#vkCmdDrawIndexed&quot;&gt;vkCmdDrawIndexed&lt;/a&gt;.</source>
          <target state="translated">メンバー &lt;code&gt;VkDrawIndexedIndirectCommand&lt;/code&gt; はの同様の名前のパラメータと同じ意味を持っている&lt;a href=&quot;#vkCmdDrawIndexed&quot;&gt;vkCmdDrawIndexed&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="3288d42822a2455af438790164fcffae8eb874ec" translate="yes" xml:space="preserve">
          <source>The members of &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; have the same meaning as the similarly named parameters of &lt;a href=&quot;#vkCmdDraw&quot;&gt;vkCmdDraw&lt;/a&gt;.</source>
          <target state="translated">メンバー &lt;code&gt;VkDrawIndirectCommand&lt;/code&gt; はの同様の名前のパラメータと同じ意味を持っている&lt;a href=&quot;#vkCmdDraw&quot;&gt;vkCmdDraw&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c97573a7af91d954ed4268af359c5e58ef05a387" translate="yes" xml:space="preserve">
          <source>The members of the &lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; structure describe the following features:</source>
          <target state="translated">&lt;code&gt;VkPhysicalDeviceFeatures&lt;/code&gt; 構造体のメンバーは、次の機能を記述します：</target>
        </trans-unit>
        <trans-unit id="505119ad4d2e5684e52a41f2bba617951853b92f" translate="yes" xml:space="preserve">
          <source>The memory types are sorted according to a preorder which serves to aid in easily selecting an appropriate memory type. Given two memory types X and Y, the preorder defines X &amp;le; Y if:</source>
          <target state="translated">メモリタイプは、適切なメモリタイプを簡単に選択するのに役立つプレオーダーに従ってソートされます。2つのメモリタイプXとYが与えられた場合、次の場合、プレオーダーはX&amp;le;Yを定義します。</target>
        </trans-unit>
        <trans-unit id="80605179896eebbaf6d577b8d97722595f0a8318" translate="yes" xml:space="preserve">
          <source>The minimum resolvable difference r is an implementation-dependent parameter that depends on the depth buffer representation. It is the smallest difference in framebuffer coordinate z values that is guaranteed to remain distinct throughout polygon rasterization and in the depth buffer. All pairs of fragments generated by the rasterization of two polygons with otherwise identical vertices, but &lt;code&gt;z&lt;/code&gt;&lt;sub&gt;f&lt;/sub&gt; values that differ by $r$, will have distinct depth values.</source>
          <target state="translated">解決可能な最小の差rは、深度バッファーの表現に依存する実装依存のパラメーターです。これは、ポリゴンのラスタライズ全体と深度バッファー全体で異なることが保証されている、フレームバッファーの座標z値の最小の違いです。他の点では同一の頂点を持つ2つのポリゴンのラスタライズによって生成されたフラグメントのすべてのペアですが、$ r $が異なる &lt;code&gt;z&lt;/code&gt; &lt;sub&gt;f&lt;/sub&gt;値は、異なる深度値を持ちます。</target>
        </trans-unit>
        <trans-unit id="47cb5d8e8308ace41c4e8bbb0d7a80b52a8a959b" translate="yes" xml:space="preserve">
          <source>The next four bytes encode the pipeline cache version, as described for &lt;a href=&quot;#VkPipelineCacheHeaderVersion&quot;&gt;VkPipelineCacheHeaderVersion&lt;/a&gt;. A consumer of the pipeline cache &lt;strong&gt;should&lt;/strong&gt; use the cache version to interpret the remainder of the cache header.</source>
          <target state="translated">次の4バイトは、&lt;a href=&quot;#VkPipelineCacheHeaderVersion&quot;&gt;VkPipelineCacheHeaderVersionで&lt;/a&gt;説明されているように、パイプラインキャッシュバージョンをエンコードします。パイプラインキャッシュのコンシューマーは、キャッシュバージョンを使用して、残りのキャッシュヘッダーを解釈する&lt;strong&gt;必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="8afa81f4b8f83682ea74a96c252fe19922dd6416" translate="yes" xml:space="preserve">
          <source>The number of currently valid memory objects, allocated from &lt;code&gt;device&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; be less than &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxMemoryAllocationCount&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;device&lt;/code&gt; から割り当てられた、現在有効なメモリオブジェクトの数は、 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxMemoryAllocationCount&lt;/code&gt; 未満である&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="27bcba543f3b8fcaa92f36b0ac111deedee57783" translate="yes" xml:space="preserve">
          <source>The number of memory heaps is given by &lt;code&gt;memoryHeapCount&lt;/code&gt; and is less than or equal to &lt;code&gt;VK_MAX_MEMORY_HEAPS&lt;/code&gt;. Each heap is described by an element of the &lt;code&gt;memoryHeaps&lt;/code&gt; array, as a &lt;code&gt;VkMemoryHeap&lt;/code&gt; structure. The number of memory types available across all memory heaps is given by &lt;code&gt;memoryTypeCount&lt;/code&gt; and is less than or equal to &lt;code&gt;VK_MAX_MEMORY_TYPES&lt;/code&gt;. Each memory type is described by an element of the &lt;code&gt;memoryTypes&lt;/code&gt; array, as a &lt;code&gt;VkMemoryType&lt;/code&gt; structure.</source>
          <target state="translated">メモリヒープの数は、 &lt;code&gt;memoryHeapCount&lt;/code&gt; によって指定され、VK_MAX_MEMORY_HEAPS以下 &lt;code&gt;VK_MAX_MEMORY_HEAPS&lt;/code&gt; 。各ヒープは、 &lt;code&gt;memoryHeaps&lt;/code&gt; 配列の要素によって &lt;code&gt;VkMemoryHeap&lt;/code&gt; 構造体として記述されます。すべてのメモリヒープで使用できるメモリタイプの数は、 &lt;code&gt;memoryTypeCount&lt;/code&gt; で指定され、VK_MAX_MEMORY_TYPES以下 &lt;code&gt;VK_MAX_MEMORY_TYPES&lt;/code&gt; 。各メモリタイプは、 &lt;code&gt;memoryTypes&lt;/code&gt; 配列の要素によって &lt;code&gt;VkMemoryType&lt;/code&gt; 構造体として記述されます。</target>
        </trans-unit>
        <trans-unit id="b29e231064fb1df3c6fab2d55c43140a54071327" translate="yes" xml:space="preserve">
          <source>The number of mipmap levels and array layers &lt;strong&gt;must&lt;/strong&gt; be a subset of the image subresources in the image. If an application wants to use all mip levels or layers in an image after the &lt;code&gt;baseMipLevel&lt;/code&gt; or &lt;code&gt;baseArrayLayer&lt;/code&gt;, it &lt;strong&gt;can&lt;/strong&gt; set &lt;code&gt;levelCount&lt;/code&gt; and &lt;code&gt;layerCount&lt;/code&gt; to the special values &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt; and &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt; without knowing the exact number of mip levels or layers.</source>
          <target state="translated">ミップマップレベルと配列層の数は、イメージ内のイメージサブリソースのサブセットである&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。アプリケーションが後の画像中の全てのミップレベルまたは層を使用したい場合 &lt;code&gt;baseMipLevel&lt;/code&gt; 又は &lt;code&gt;baseArrayLayer&lt;/code&gt; 、それが&lt;strong&gt;でき&lt;/strong&gt;セット &lt;code&gt;levelCount&lt;/code&gt; と &lt;code&gt;layerCount&lt;/code&gt; を特別な値に &lt;code&gt;VK_REMAINING_MIP_LEVELS&lt;/code&gt; と &lt;code&gt;VK_REMAINING_ARRAY_LAYERS&lt;/code&gt; MIPレベルまたは層の正確な数を知ることなく。</target>
        </trans-unit>
        <trans-unit id="6ed39edae73d76ac42d8a69ae041c1fcc20f53bc" translate="yes" xml:space="preserve">
          <source>The only dispatchable handle types are those related to device and instance management, such as &lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;.</source>
          <target state="translated">ディスパッチ可能なハンドルタイプは、&lt;a href=&quot;#VkDevice&quot;&gt;VkDevice&lt;/a&gt;などのデバイスとインスタンスの管理に関連するものだけです。</target>
        </trans-unit>
        <trans-unit id="afd8787b69bad10b575fb80b4dfa15422c680947" translate="yes" xml:space="preserve">
          <source>The operations described by &lt;code&gt;pDescriptorWrites&lt;/code&gt; are performed first, followed by the operations described by &lt;code&gt;pDescriptorCopies&lt;/code&gt;. Within each array, the operations are performed in the order they appear in the array.</source>
          <target state="translated">&lt;code&gt;pDescriptorWrites&lt;/code&gt; によって記述される操作が最初に実行され、その後にpDescriptorCopiesによって記述される操作が実行され &lt;code&gt;pDescriptorCopies&lt;/code&gt; 。各配列内では、操作は配列に表示される順序で実行されます。</target>
        </trans-unit>
        <trans-unit id="923e10c411c35319f50e382bd9bf0fb30ed088b5" translate="yes" xml:space="preserve">
          <source>The order that batches appear in &lt;code&gt;pSubmits&lt;/code&gt; is used to determine &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;submission order&lt;/a&gt;, and thus all the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-implicit&quot;&gt;implicit ordering guarantees&lt;/a&gt; that respect it. Other than these implicit ordering guarantees and any &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;explicit synchronization primitives&lt;/a&gt;, these batches &lt;strong&gt;may&lt;/strong&gt; overlap or otherwise execute out of order.</source>
          <target state="translated">バッチが &lt;code&gt;pSubmits&lt;/code&gt; に現れる順序は、送信&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;順序&lt;/a&gt;を決定するために使用されます。したがって、それを尊重するすべての&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-implicit&quot;&gt;暗黙的な順序付けが保証され&lt;/a&gt;ます。これらの暗黙的な順序の保証と&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;明示的な同期プリミティブ以外に&lt;/a&gt;、これらのバッチ&lt;strong&gt;は&lt;/strong&gt;重複するか、そうでなければ順序が狂って実行される&lt;strong&gt;可能性&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="03caeed9e9b76b5e07d7a14fe5121cbd51f413da" translate="yes" xml:space="preserve">
          <source>The order that command buffers appear in &lt;code&gt;pCommandBuffers&lt;/code&gt; is used to determine &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;submission order&lt;/a&gt;, and thus all the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-implicit&quot;&gt;implicit ordering guarantees&lt;/a&gt; that respect it. Other than these implicit ordering guarantees and any &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;explicit synchronization primitives&lt;/a&gt;, these command buffers &lt;strong&gt;may&lt;/strong&gt; overlap or otherwise execute out of order.</source>
          <target state="translated">コマンドバッファが &lt;code&gt;pCommandBuffers&lt;/code&gt; に表示される順序は、送信&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-submission-order&quot;&gt;順序&lt;/a&gt;を決定するために使用されます。したがって、すべての&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-implicit&quot;&gt;暗黙的な順序は&lt;/a&gt;、それを尊重します。これらの暗黙的な順序の保証と&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization&quot;&gt;明示的な同期プリミティブ以外に&lt;/a&gt;、これらのコマンドバッファー&lt;strong&gt;は&lt;/strong&gt;重複するか、そうでなければ順序が狂って実行される&lt;strong&gt;可能性&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="c29e914c1a526cfa427002d4f1bffe096286e626" translate="yes" xml:space="preserve">
          <source>The parameters &lt;code&gt;basePipelineHandle&lt;/code&gt; and &lt;code&gt;basePipelineIndex&lt;/code&gt; are described in more detail in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-pipeline-derivatives&quot;&gt;Pipeline Derivatives&lt;/a&gt;.</source>
          <target state="translated">パラメータ &lt;code&gt;basePipelineHandle&lt;/code&gt; および &lt;code&gt;basePipelineIndex&lt;/code&gt; については、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#pipelines-pipeline-derivatives&quot;&gt;パイプラインデリバティブで&lt;/a&gt;詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="d286c2ef5a6ff8aab82721babd54208fe2849c02" translate="yes" xml:space="preserve">
          <source>The physical device type is advertised for informational purposes only, and does not directly affect the operation of the system. However, the device type &lt;strong&gt;may&lt;/strong&gt; correlate with other advertised properties or capabilities of the system, such as how many memory heaps there are.</source>
          <target state="translated">物理デバイスタイプは情報提供のみを目的としてアドバタイズされ、システムの動作には直接影響しません。ただし、デバイスタイプ&lt;strong&gt;は&lt;/strong&gt;、メモリヒープの数など、システムの他のアドバタイズされたプロパティまたは機能と相関する&lt;strong&gt;場合&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="4b29bf4b5e836d9f3d51dfcbe4523a7f092a970b" translate="yes" xml:space="preserve">
          <source>The physical device types which &lt;strong&gt;may&lt;/strong&gt; be returned in &lt;a href=&quot;#VkPhysicalDeviceProperties&quot;&gt;VkPhysicalDeviceProperties&lt;/a&gt;::&lt;code&gt;deviceType&lt;/code&gt; are:</source>
          <target state="translated">&lt;a href=&quot;#VkPhysicalDeviceProperties&quot;&gt;VkPhysicalDeviceProperties&lt;/a&gt; :: &lt;code&gt;deviceType&lt;/code&gt; で返される&lt;strong&gt;可能性の&lt;/strong&gt;ある物理デバイスタイプは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="2aedfd5cc6c8d033512036428a65bf9e6126a794" translate="yes" xml:space="preserve">
          <source>The pointer was formed by &lt;code&gt;OpImageTexelPointer&lt;/code&gt; and the coordinate is less than zero or greater than or equal to the number of whole elements in the bound range.</source>
          <target state="translated">ポインターは &lt;code&gt;OpImageTexelPointer&lt;/code&gt; によって形成され、座標はゼロ未満か、バインドされた範囲内の要素全体の数以上です。</target>
        </trans-unit>
        <trans-unit id="7563ec807a5ce8fbc00db84f7c5f303c0cb1bc99" translate="yes" xml:space="preserve">
          <source>The pointer was not formed by &lt;code&gt;OpImageTexelPointer&lt;/code&gt; and the object pointed to is not wholly contained within the bound range.</source>
          <target state="translated">ポインタは &lt;code&gt;OpImageTexelPointer&lt;/code&gt; によって形成されておらず、ポイントされたオブジェクトは完全にバインドされた範囲内に含まれていません。</target>
        </trans-unit>
        <trans-unit id="49873c50bc0914c555ae9d7b4a97c8c756d0bcf2" translate="yes" xml:space="preserve">
          <source>The primitives are drawn &lt;code&gt;instanceCount&lt;/code&gt; times with &lt;code&gt;instanceIndex&lt;/code&gt; starting with &lt;code&gt;firstInstance&lt;/code&gt; and increasing sequentially for each instance. The assembled primitives execute the currently bound graphics pipeline.</source>
          <target state="translated">プリミティブが描かれ &lt;code&gt;instanceCount&lt;/code&gt; で回 &lt;code&gt;instanceIndex&lt;/code&gt; が始まる &lt;code&gt;firstInstance&lt;/code&gt; とインスタンスごとに順次増加させます。組み立てられたプリミティブは、現在バインドされているグラフィックスパイプラインを実行します。</target>
        </trans-unit>
        <trans-unit id="7ee888620b6d92a077de76e1d5068b36fde50c6b" translate="yes" xml:space="preserve">
          <source>The query identified by &lt;code&gt;queryPool&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be &lt;em&gt;unavailable&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;queryPool&lt;/code&gt; および &lt;code&gt;query&lt;/code&gt; によって識別されるクエリ&lt;strong&gt;は&lt;/strong&gt;&lt;em&gt;使用不可で&lt;/em&gt;&lt;strong&gt;なければ&lt;/strong&gt;なり&lt;em&gt;ません&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="430d591cef795a700ee99c31e8cc8ed1982e478a" translate="yes" xml:space="preserve">
          <source>The query identified by &lt;code&gt;queryPool&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be unavailable</source>
          <target state="translated">&lt;code&gt;queryPool&lt;/code&gt; および &lt;code&gt;query&lt;/code&gt; によって識別されるクエリ&lt;strong&gt;は&lt;/strong&gt;使用不可で&lt;strong&gt;なければ&lt;/strong&gt;なりません</target>
        </trans-unit>
        <trans-unit id="ad5e6bc01d4d93e1a1cd00b9aa7aeb82fea70e11" translate="yes" xml:space="preserve">
          <source>The query identified by &lt;code&gt;queryPool&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; currently be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;active&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;queryPool&lt;/code&gt; と &lt;code&gt;query&lt;/code&gt; によって識別されるクエリ&lt;strong&gt;は、&lt;/strong&gt;現在&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;アクティブである&lt;/a&gt;&lt;strong&gt;必要が&lt;/strong&gt;あります</target>
        </trans-unit>
        <trans-unit id="3233e363b802b9b2b1809e9837a046e991315b65" translate="yes" xml:space="preserve">
          <source>The query identified by &lt;code&gt;queryPool&lt;/code&gt; and &lt;code&gt;query&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; currently not be &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;active&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;queryPool&lt;/code&gt; および &lt;code&gt;query&lt;/code&gt; によって識別されるクエリ&lt;strong&gt;は、&lt;/strong&gt;現在&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-active&quot;&gt;アクティブであっ&lt;/a&gt;てはなりません</target>
        </trans-unit>
        <trans-unit id="5b44d5ff466b2f60d67cd23579b98ad22895fe39" translate="yes" xml:space="preserve">
          <source>The reason for this is that &lt;code&gt;VK_ERROR_FRAGMENTED_POOL&lt;/code&gt; was only added in a later revision of the 1.0 specification, and so drivers &lt;strong&gt;may&lt;/strong&gt; return other errors if they were written against earlier revisions. To ensure full compatibility with earlier patch revisions, these other errors are allowed.</source>
          <target state="translated">これは、 &lt;code&gt;VK_ERROR_FRAGMENTED_POOL&lt;/code&gt; が1.0仕様の新しいリビジョンでのみ追加されたため、以前のリビジョンに対して作成されたドライバー&lt;strong&gt;が&lt;/strong&gt;他のエラーを返す&lt;strong&gt;可能性がある&lt;/strong&gt;ためです。以前のパッチリビジョンとの完全な互換性を確保するために、これらの他のエラーが許可されます。</target>
        </trans-unit>
        <trans-unit id="2126729d905952e983f7920ee9d94d7f708f7295" translate="yes" xml:space="preserve">
          <source>The rectangular region specified by a given element of &lt;code&gt;pRects&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be contained within the render area of the current render pass instance</source>
          <target state="translated">&lt;code&gt;pRects&lt;/code&gt; の特定の要素によって指定された長方形の領域は、現在のレンダーパスインスタンスのレンダー領域内に含まれている&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="4200034de68fd5520125f42b1ee9a4d95d814549" translate="yes" xml:space="preserve">
          <source>The result of the logical operation is then written to the color attachment as controlled by the component write mask, described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-blendoperations&quot;&gt;Blend Operations&lt;/a&gt;.</source>
          <target state="translated">論理演算の結果は、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#framebuffer-blendoperations&quot;&gt;ブレンド操作&lt;/a&gt;で説明されているように、コンポーネントの書き込みマスクによって制御されているカラーアタッチメントに書き込まれます。</target>
        </trans-unit>
        <trans-unit id="db6f7cce4f2f127b3b9fefdf00e19fa12cf8c56a" translate="yes" xml:space="preserve">
          <source>The returned function pointer &lt;strong&gt;must&lt;/strong&gt; only be called with a dispatchable object (the first parameter) that is &lt;code&gt;device&lt;/code&gt; or a child of &lt;code&gt;device&lt;/code&gt;. e.g. &lt;code&gt;VkDevice&lt;/code&gt;, &lt;code&gt;VkQueue&lt;/code&gt;, or &lt;code&gt;VkCommandBuffer&lt;/code&gt;.</source>
          <target state="translated">返された関数ポインタは、 &lt;code&gt;device&lt;/code&gt; またはdeviceの子であるディスパッチ可能なオブジェクト（最初のパラメータ）でのみ呼び出す&lt;strong&gt;必要&lt;/strong&gt;があり &lt;code&gt;device&lt;/code&gt; 。たとえば、 &lt;code&gt;VkDevice&lt;/code&gt; 、 &lt;code&gt;VkQueue&lt;/code&gt; 、または &lt;code&gt;VkCommandBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bd45dc9f64b345f7fd207bc4f48316aa0f73700c" translate="yes" xml:space="preserve">
          <source>The returned function pointer &lt;strong&gt;must&lt;/strong&gt; only be called with a dispatchable object (the first parameter) that is &lt;code&gt;instance&lt;/code&gt; or a child of &lt;code&gt;instance&lt;/code&gt;. e.g. &lt;code&gt;VkInstance&lt;/code&gt;, &lt;code&gt;VkPhysicalDevice&lt;/code&gt;, &lt;code&gt;VkDevice&lt;/code&gt;, &lt;code&gt;VkQueue&lt;/code&gt;, or &lt;code&gt;VkCommandBuffer&lt;/code&gt;.</source>
          <target state="translated">返された関数ポインタは、 &lt;code&gt;instance&lt;/code&gt; またはinstanceの子であるディスパッチ可能なオブジェクト（最初のパラメータ）でのみ呼び出す&lt;strong&gt;必要&lt;/strong&gt;があり &lt;code&gt;instance&lt;/code&gt; 。例： &lt;code&gt;VkInstance&lt;/code&gt; 、 &lt;code&gt;VkPhysicalDevice&lt;/code&gt; 、 &lt;code&gt;VkDevice&lt;/code&gt; 、 &lt;code&gt;VkQueue&lt;/code&gt; 、または &lt;code&gt;VkCommandBuffer&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9fd911007c0fdb04b2f83ca2b1124bd0986a6634" translate="yes" xml:space="preserve">
          <source>The returned function pointer is of type &lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt;, and must be cast to the type of the command being queried.</source>
          <target state="translated">返される関数ポインターは&lt;a href=&quot;#PFN_vkVoidFunction&quot;&gt;PFN_vkVoidFunction&lt;/a&gt;型であり、照会されるコマンドの型にキャストする必要があります。</target>
        </trans-unit>
        <trans-unit id="c1c1de13ce5bddf5b6ad23affdd8d8c409e5bda8" translate="yes" xml:space="preserve">
          <source>The sample count of &lt;code&gt;srcImage&lt;/code&gt; and &lt;code&gt;dstImage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; both be equal to &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</source>
          <target state="translated">サンプル数 &lt;code&gt;srcImage&lt;/code&gt; と &lt;code&gt;dstImage&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の両方に等しくなるよう &lt;code&gt;VK_SAMPLE_COUNT_1_BIT&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ab936da7e0b1451d7368652115d97a099afc3ff5" translate="yes" xml:space="preserve">
          <source>The sample count of &lt;code&gt;srcImage&lt;/code&gt; and &lt;code&gt;dstImage&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; match</source>
          <target state="translated">&lt;code&gt;srcImage&lt;/code&gt; と &lt;code&gt;dstImage&lt;/code&gt; のサンプル数は一致する&lt;strong&gt;必要があります&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e6f7bcb4e74f258f6406ced05cf0d3f99cfa7146" translate="yes" xml:space="preserve">
          <source>The scale is determined from the source and destination regions, and applied to the offset coordinates:</source>
          <target state="translated">縮尺は、送信元領域と送信先領域から決定され、オフセット座標に適用されます。</target>
        </trans-unit>
        <trans-unit id="f77ed02958b74de8f16df0a47b32cd8d259a46c5" translate="yes" xml:space="preserve">
          <source>The scissor rectangles taken from element i of &lt;code&gt;pScissors&lt;/code&gt; replace the current state for the scissor index &lt;code&gt;firstScissor&lt;/code&gt; + i, for i in [0, &lt;code&gt;scissorCount&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;pScissors&lt;/code&gt; の要素iから取得されたシザーの長方形は、シザーインデックス &lt;code&gt;firstScissor&lt;/code&gt; + i の現在の状態を、[0、 &lt;code&gt;scissorCount&lt;/code&gt; ）のiに置き換えます。</target>
        </trans-unit>
        <trans-unit id="c91ad6cb250a76e2fc75486a4945727818d0d4f5" translate="yes" xml:space="preserve">
          <source>The scissor test determines if a fragment&amp;rsquo;s framebuffer coordinates (x&lt;sub&gt;f&lt;/sub&gt;,y&lt;sub&gt;f&lt;/sub&gt;) lie within the scissor rectangle corresponding to the viewport index (see &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vertexpostproc-viewport&quot;&gt;Controlling the Viewport&lt;/a&gt;) used by the primitive that generated the fragment. If the pipeline state object is created without &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; enabled then the scissor rectangles are set by the &lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt; state of the pipeline state object. Otherwise, to dynamically set the scissor rectangles call:</source>
          <target state="translated">シザーテストでは、フラグメントのフレームバッファー座標（x &lt;sub&gt;f&lt;/sub&gt;、y &lt;sub&gt;f&lt;/sub&gt;）が、フラグメントを生成したプリミティブが使用するビューポートインデックス（ビューポートの&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#vertexpostproc-viewport&quot;&gt;制御を&lt;/a&gt;参照）に対応するシザー長方形内にあるかどうかを判断します。 &lt;code&gt;VK_DYNAMIC_STATE_SCISSOR&lt;/code&gt; を有効にせずにパイプライン状態オブジェクトが作成された場合、はさみ長方形は、パイプライン状態オブジェクトの&lt;a href=&quot;#VkPipelineViewportStateCreateInfo&quot;&gt;VkPipelineViewportStateCreateInfo&lt;/a&gt;状態によって設定されます。それ以外の場合、はさみ長方形を動的に設定するには、以下を呼び出します。</target>
        </trans-unit>
        <trans-unit id="d3dace0daa14b4695fc932e3ffc3350a20e7fb12" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access in the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;destination stage mask&lt;/a&gt; specified by &lt;code&gt;dstStageMask&lt;/code&gt;. It is also limited to access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;destination access mask&lt;/a&gt; specified by &lt;code&gt;dstAccessMask&lt;/code&gt;.</source>
          <target state="translated">2番目の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;は、 &lt;code&gt;dstStageMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;宛先ステージマスク&lt;/a&gt;によって決定されるパイプラインステージでのアクセスに制限されます。また、 &lt;code&gt;dstAccessMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;宛先アクセスマスクの&lt;/a&gt;アクセスタイプに制限されます。</target>
        </trans-unit>
        <trans-unit id="b99dd47d746ccb730cbe645c82cd7850c934c379" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access in the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;destination stage mask&lt;/a&gt; specified by &lt;code&gt;dstStageMask&lt;/code&gt;. Within that, the second access scope only includes the second access scopes defined by elements of the &lt;code&gt;pMemoryBarriers&lt;/code&gt;, &lt;code&gt;pBufferMemoryBarriers&lt;/code&gt; and &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; arrays, which each define a set of &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers&quot;&gt;memory barriers&lt;/a&gt;. If no memory barriers are specified, then the second access scope includes no accesses.</source>
          <target state="translated">2番目の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;は、 &lt;code&gt;dstStageMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;宛先ステージマスク&lt;/a&gt;によって決定されるパイプラインステージでのアクセスに制限されます。その中で、2番目のアクセススコープには、 &lt;code&gt;pMemoryBarriers&lt;/code&gt; 、 &lt;code&gt;pBufferMemoryBarriers&lt;/code&gt; 、および &lt;code&gt;pImageMemoryBarriers&lt;/code&gt; 配列の要素によって定義される2番目のアクセススコープのみが含まれ、それぞれが一連の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-memory-barriers&quot;&gt;メモリバリアを&lt;/a&gt;定義します。メモリバリアが指定されていない場合、2番目のアクセススコープにはアクセスが含まれません。</target>
        </trans-unit>
        <trans-unit id="fc7c155367c0099bc4aa84a2f3c60853d1681f42" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access to memory through the specified buffer range, via access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;destination access mask&lt;/a&gt;. specified by &lt;code&gt;dstAccessMask&lt;/code&gt;. If &lt;code&gt;dstAccessMask&lt;/code&gt; includes &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; or &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt;, available memory writes are also made visible to accesses of those types, as those access types are not performed through a resource.</source>
          <target state="translated">2番目の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;は、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;宛先アクセスマスクの&lt;/a&gt;アクセスタイプを介した、指定されたバッファー範囲を介したメモリへのアクセスに制限されます。 &lt;code&gt;dstAccessMask&lt;/code&gt; によって指定されます。場合 &lt;code&gt;dstAccessMask&lt;/code&gt; が含ま &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; 又は &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt; 、利用可能なメモリ書き込みをそれらのアクセス・タイプがリソースを介して行われていないとしても、これらのタイプのアクセスに可視化されます。</target>
        </trans-unit>
        <trans-unit id="ef1f1867fa5701d6392b224ff4b170caeb03301a" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access to memory through the specified image subresource range, via access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;destination access mask&lt;/a&gt; specified by &lt;code&gt;dstAccessMask&lt;/code&gt;. If &lt;code&gt;dstAccessMask&lt;/code&gt; includes &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; or &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt;, available memory writes are also made visible to accesses of those types, as those access types are not performed through a resource.</source>
          <target state="translated">2番目の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;は、 &lt;code&gt;dstAccessMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;宛先アクセスマスクの&lt;/a&gt;アクセスタイプを介して、指定されたイメージサブリソース範囲を介したメモリへのアクセスに制限されます。場合 &lt;code&gt;dstAccessMask&lt;/code&gt; が含ま &lt;code&gt;VK_ACCESS_HOST_WRITE_BIT&lt;/code&gt; 又は &lt;code&gt;VK_ACCESS_HOST_READ_BIT&lt;/code&gt; 、利用可能なメモリ書き込みをそれらのアクセス・タイプがリソースを介して行われていないとしても、これらのタイプのアクセスに可視化されます。</target>
        </trans-unit>
        <trans-unit id="0ebc13b7458fc7093cba09856ed2df90a8027b44" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;access scope&lt;/a&gt; is limited to access types in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;destination access mask&lt;/a&gt; specified by &lt;code&gt;dstAccessMask&lt;/code&gt;.</source>
          <target state="translated">2番目の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-access-scopes&quot;&gt;アクセススコープ&lt;/a&gt;は、 &lt;code&gt;dstAccessMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-access-masks&quot;&gt;宛先アクセスマスクの&lt;/a&gt;アクセスタイプに制限されます。</target>
        </trans-unit>
        <trans-unit id="edf250044701e0102ab5fc067cb966a3b7a7bb9c" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scope&lt;/a&gt; includes commands subsequently submitted to the same queue, including those in the same command buffer and batch. The second synchronization scope is limited to operations on the pipeline stages determined by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;destination stage mask&lt;/a&gt; specified by &lt;code&gt;dstStageMask&lt;/code&gt;.</source>
          <target state="translated">2番目の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同期スコープに&lt;/a&gt;は、その後同じキューに送信されたコマンドが含まれます（同じコマンドバッファーとバッチ内のコマンドも含まれます）。2番目の同期スコープは、 &lt;code&gt;dstStageMask&lt;/code&gt; で指定された&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-pipeline-stages-masks&quot;&gt;宛先ステージマスク&lt;/a&gt;によって決定されるパイプラインステージでの操作に限定されます。</target>
        </trans-unit>
        <trans-unit id="d3b2329c9134a6aee655f819cc2b5cfa24df21ce" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scope&lt;/a&gt; includes only the event signal operation.</source>
          <target state="translated">2番目の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同期スコープに&lt;/a&gt;は、イベント信号操作のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="763906953af3e55966376dcd24325fc2ccb59335" translate="yes" xml:space="preserve">
          <source>The second &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;synchronization scope&lt;/a&gt; includes only the event unsignal operation.</source>
          <target state="translated">2番目の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#synchronization-dependencies-scopes&quot;&gt;同期スコープに&lt;/a&gt;は、イベントのシグナル解除操作のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="7cd4060403b4ff3a8b122d708ab8b089fe571de0" translate="yes" xml:space="preserve">
          <source>The semantics of each basic blend operations is described in the table below:</source>
          <target state="translated">各基本的なブレンド操作のセマンティクスは、以下の表に記載されています。</target>
        </trans-unit>
        <trans-unit id="e8892a0b1601a4f9d21fb53fc1687b6610d2c23e" translate="yes" xml:space="preserve">
          <source>The semantics of each enum value is described in the table below:</source>
          <target state="translated">各列挙値のセマンティクスは以下の表に記載されています。</target>
        </trans-unit>
        <trans-unit id="8c6a1582a51b9ea7d750fdf47704c8dbdd236ba6" translate="yes" xml:space="preserve">
          <source>The set of image layouts consists of:</source>
          <target state="translated">画像レイアウトのセットで構成されています。</target>
        </trans-unit>
        <trans-unit id="3b32dbfd2c6a44920e5605ee12a4af65fcb696ce" translate="yes" xml:space="preserve">
          <source>The shader code for the entry point identified by &lt;code&gt;stage&lt;/code&gt; and the rest of the state identified by this structure &lt;strong&gt;must&lt;/strong&gt; adhere to the pipeline linking rules described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#interfaces&quot;&gt;Shader Interfaces&lt;/a&gt; chapter</source>
          <target state="translated">&lt;code&gt;stage&lt;/code&gt; によって識別されるエントリポイントのシェーダーコードと、この構造によって識別される残りの状態は、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#interfaces&quot;&gt;シェーダーインターフェイスの&lt;/a&gt;章で説明されているパイプラインリンクルールに準拠している&lt;strong&gt;必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c8cfae3588ecb602ed7a1ab2b9d73ea1b385c061" translate="yes" xml:space="preserve">
          <source>The shader code for the entry points identified by &lt;code&gt;pStages&lt;/code&gt;, and the rest of the state identified by this structure &lt;strong&gt;must&lt;/strong&gt; adhere to the pipeline linking rules described in the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#interfaces&quot;&gt;Shader Interfaces&lt;/a&gt; chapter</source>
          <target state="translated">&lt;code&gt;pStages&lt;/code&gt; によって識別されるエントリポイントのシェーダーコード、およびこの構造体によって識別される残りの状態は、&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#interfaces&quot;&gt;シェーダーインターフェイスの&lt;/a&gt;章で説明されているパイプラインリンクルールに準拠している&lt;strong&gt;必要があり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="c7f1cbd9e0348a475e312987798722e1a3b0eb22" translate="yes" xml:space="preserve">
          <source>The source and destination color and alpha blending factors are selected from the enum:</source>
          <target state="translated">ソースとデスティネーションの色とアルファのブレンド係数は、列挙されたものから選択されます。</target>
        </trans-unit>
        <trans-unit id="b522a21c376c1a0ecbd2e79ab5378e25fd271d3f" translate="yes" xml:space="preserve">
          <source>The source data is copied from the user pointer to the command buffer when the command is called.</source>
          <target state="translated">ソースデータは、コマンドが呼び出されたときに、ユーザポインタからコマンドバッファにコピーされます。</target>
        </trans-unit>
        <trans-unit id="1a94de5215b14a644477f7d31140e0ca4a5a2d9f" translate="yes" xml:space="preserve">
          <source>The source of different pieces of dynamic state is specified by the &lt;a href=&quot;#VkPipelineDynamicStateCreateInfo&quot;&gt;VkPipelineDynamicStateCreateInfo&lt;/a&gt;::&lt;code&gt;pDynamicStates&lt;/code&gt; property of the currently active pipeline, each of whose elements &lt;strong&gt;must&lt;/strong&gt; be one of the values:</source>
          <target state="translated">動的な状態のさまざまな部分のソースは、現在アクティブなパイプラインの&lt;a href=&quot;#VkPipelineDynamicStateCreateInfo&quot;&gt;VkPipelineDynamicStateCreateInfo&lt;/a&gt; :: &lt;code&gt;pDynamicStates&lt;/code&gt; プロパティによって指定されます。各要素は値の1つで&lt;strong&gt;なければなりません&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="69d3c0da5eb9fa0268cb2df40c394a5112b59d15" translate="yes" xml:space="preserve">
          <source>The source region specified by a given element of &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be a region that is contained within &lt;code&gt;srcImage&lt;/code&gt;</source>
          <target state="translated">所与の要素によって指定されたソース領域 &lt;code&gt;pRegions&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;内に含まれている領域である &lt;code&gt;srcImage&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="71a3c2e2bee66fcefcf53d67b0e491e39df8bd61" translate="yes" xml:space="preserve">
          <source>The state of an event &lt;strong&gt;can&lt;/strong&gt; be updated by the host. The state of the event is immediately changed, and subsequent calls to &lt;code&gt;vkGetEventStatus&lt;/code&gt; will return the new state. If an event is already in the requested state, then updating it to the same state has no effect.</source>
          <target state="translated">イベントの状態は、ホストによって更新&lt;strong&gt;でき&lt;/strong&gt;ます。イベントの状態はすぐに変更され、その後の &lt;code&gt;vkGetEventStatus&lt;/code&gt; の呼び出しは新しい状態を返します。イベントがすでに要求された状態にある場合、それを同じ状態に更新しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="4d7f805e8c5bfc2834ddc4ee5bc4a6b6effa5f2b" translate="yes" xml:space="preserve">
          <source>The store operation for each sample in an attachment happens-after any recorded command which accesses the sample in the last subpass where the attachment is used. Store operations for attachments with a depth/stencil format execute in the &lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt; pipeline stage. Store operations for attachments with a color format execute in the &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; pipeline stage.</source>
          <target state="translated">添付ファイル内の各サンプルの保存操作は、添付ファイルが使用される最後のサブパスのサンプルにアクセスする記録されたコマンドの後に発生します。深度/ステンシル形式の添付ファイルのストア操作は、 &lt;code&gt;VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT&lt;/code&gt; パイプラインステージで実行されます。色形式の添付ファイルのストア操作は、 &lt;code&gt;VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT&lt;/code&gt; パイプラインステージで実行されます。</target>
        </trans-unit>
        <trans-unit id="571fb5eb8f896875413b8722503ba0ea02d2304c" translate="yes" xml:space="preserve">
          <source>The subpass index for a render pass begins at zero when &lt;code&gt;vkCmdBeginRenderPass&lt;/code&gt; is recorded, and increments each time &lt;code&gt;vkCmdNextSubpass&lt;/code&gt; is recorded.</source>
          <target state="translated">レンダリングパスのsubpass指数は場合ゼロで始まり &lt;code&gt;vkCmdBeginRenderPass&lt;/code&gt; が記録され、各時間増分 &lt;code&gt;vkCmdNextSubpass&lt;/code&gt; が記録されます。</target>
        </trans-unit>
        <trans-unit id="78cbedae7eff7e1c78b5e082f2b9f59dadc76495" translate="yes" xml:space="preserve">
          <source>The subpass index of the current render pass &lt;strong&gt;must&lt;/strong&gt; be equal to the &lt;code&gt;subpass&lt;/code&gt; member of the &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; structure specified when creating the &lt;code&gt;VkPipeline&lt;/code&gt; currently bound to &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt;.</source>
          <target state="translated">現在のレンダーパスのサブパスインデックスは、現在 &lt;code&gt;VkPipeline&lt;/code&gt; バインドされている &lt;code&gt;VK_PIPELINE_BIND_POINT_GRAPHICS&lt;/code&gt; 作成するときに指定された &lt;code&gt;VkGraphicsPipelineCreateInfo&lt;/code&gt; 構造の &lt;code&gt;subpass&lt;/code&gt; メンバーと同じである&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="62e13cfa8ec21e55e0ce7f689c2da516fdc67daf" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;dstArrayElement&lt;/code&gt; and &lt;code&gt;descriptorCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the number of array elements in the descriptor set binding specified by &lt;code&gt;dstBinding&lt;/code&gt;, and all applicable consecutive bindings, as described by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;html/vkspec.html#descriptorsets-updates-consecutive&lt;/a&gt;</source>
          <target state="translated">和 &lt;code&gt;dstArrayElement&lt;/code&gt; と &lt;code&gt;descriptorCount&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;未満であるかによって指定されたバインディング記述子セット内の配列要素の数に等しい &lt;code&gt;dstBinding&lt;/code&gt; によって記載されているように、およびすべての適用可能な連続バインディング&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;HTML / vkspec.html＃descriptorsets-更新、連続&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9057fb32871648932a205ef00133a2b3720c496f" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;firstBinding&lt;/code&gt; and &lt;code&gt;bindingCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxVertexInputBindings&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;firstBinding&lt;/code&gt; と &lt;code&gt;bindingCount&lt;/code&gt; の合計は、 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxVertexInputBindings&lt;/code&gt; 以下で&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="abc205b0a3acfac7059c1540de2a6021a9045809" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;firstQuery&lt;/code&gt; and &lt;code&gt;queryCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the number of queries in &lt;code&gt;queryPool&lt;/code&gt;</source>
          <target state="translated">和 &lt;code&gt;firstQuery&lt;/code&gt; と &lt;code&gt;queryCount&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;未満であるかにおけるクエリの数に等しい &lt;code&gt;queryPool&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff52456a9b01355b3a52e39ddc54232f335fea5d" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;firstScissor&lt;/code&gt; and &lt;code&gt;scissorCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxViewports&lt;/code&gt;, inclusive</source>
          <target state="translated">&lt;code&gt;firstScissor&lt;/code&gt; と &lt;code&gt;scissorCount&lt;/code&gt; の合計は、 &lt;code&gt;1&lt;/code&gt; から &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; の間で&lt;strong&gt;なければなりません&lt;/strong&gt; :: &lt;code&gt;maxViewports&lt;/code&gt; を含む</target>
        </trans-unit>
        <trans-unit id="45ca7c0c2638c9e3617956385b2f6f174633eb5f" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;firstSet&lt;/code&gt; and &lt;code&gt;descriptorSetCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPipelineLayoutCreateInfo&lt;/code&gt;::&lt;code&gt;setLayoutCount&lt;/code&gt; provided when &lt;code&gt;layout&lt;/code&gt; was created</source>
          <target state="translated">&lt;code&gt;firstSet&lt;/code&gt; と &lt;code&gt;descriptorSetCount&lt;/code&gt; の合計は、 &lt;code&gt;layout&lt;/code&gt; 作成時に提供された &lt;code&gt;VkPipelineLayoutCreateInfo&lt;/code&gt; :: &lt;code&gt;setLayoutCount&lt;/code&gt; 以下である&lt;strong&gt;必要&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="2312970c6208088685318526a4f42e88d84a0df1" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;firstViewport&lt;/code&gt; and &lt;code&gt;viewportCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxViewports&lt;/code&gt;, inclusive</source>
          <target state="translated">合計 &lt;code&gt;firstViewport&lt;/code&gt; と &lt;code&gt;viewportCount&lt;/code&gt; は&lt;strong&gt;しなければならない&lt;/strong&gt;の間で &lt;code&gt;1&lt;/code&gt; と &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxViewports&lt;/code&gt; 、包括的</target>
        </trans-unit>
        <trans-unit id="c5a1d0ba29469047ebdcebfccee04109c0988830" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;offset&lt;/code&gt; and the address of the range of &lt;code&gt;VkDeviceMemory&lt;/code&gt; object that is backing &lt;code&gt;buffer&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; be a multiple of the type indicated by &lt;code&gt;indexType&lt;/code&gt;</source>
          <target state="translated">和 &lt;code&gt;offset&lt;/code&gt; の範囲のアドレス &lt;code&gt;VkDeviceMemory&lt;/code&gt; を支持しているオブジェクト &lt;code&gt;buffer&lt;/code&gt; 、&lt;strong&gt;必要があり&lt;/strong&gt;によって示さタイプの倍数で &lt;code&gt;indexType&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="06dbe14d7b39184cea1a929f5687227ae6c1ddce" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;offset&lt;/code&gt; and the size of &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the size of &lt;code&gt;buffer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;offset&lt;/code&gt; と &lt;code&gt;VkDispatchIndirectCommand&lt;/code&gt; のサイズの合計は、 &lt;code&gt;buffer&lt;/code&gt; のサイズ以下で&lt;strong&gt;なければなりません&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="64d346396f7baca56e7ceb3febcee28cca03fd45" translate="yes" xml:space="preserve">
          <source>The sum of &lt;code&gt;srcArrayElement&lt;/code&gt; and &lt;code&gt;descriptorCount&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to the number of array elements in the descriptor set binding specified by &lt;code&gt;srcBinding&lt;/code&gt;, and all applicable consecutive bindings, as described by &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;html/vkspec.html#descriptorsets-updates-consecutive&lt;/a&gt;</source>
          <target state="translated">和 &lt;code&gt;srcArrayElement&lt;/code&gt; と &lt;code&gt;descriptorCount&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;未満であるかによって指定されたバインディング記述子セット内の配列要素の数に等しい &lt;code&gt;srcBinding&lt;/code&gt; によって記載されているように、およびすべての適用可能な連続バインディング&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#descriptorsets-updates-consecutive&quot;&gt;HTML / vkspec.html＃descriptorsets-更新、連続&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e26f24a4e4dc6c8c1fe1975c53ce82836d67723" translate="yes" xml:space="preserve">
          <source>The table below defines the various use cases for &lt;code&gt;vkGetDeviceProcAddr&lt;/code&gt; and expected return value for each case.</source>
          <target state="translated">次の表は、 &lt;code&gt;vkGetDeviceProcAddr&lt;/code&gt; のさまざまな使用事例と、各事例の予期される戻り値を定義しています。</target>
        </trans-unit>
        <trans-unit id="df1a71d984c186f762bdd4ff2a2a5d958262df34" translate="yes" xml:space="preserve">
          <source>The table below defines the various use cases for &lt;code&gt;vkGetInstanceProcAddr&lt;/code&gt; and expected return value (&quot;fp&quot; is function pointer) for each case.</source>
          <target state="translated">次の表は、 &lt;code&gt;vkGetInstanceProcAddr&lt;/code&gt; のさまざまな使用例と、それぞれの期待される戻り値（ &quot;fp&quot;は関数ポインター）を定義しています。</target>
        </trans-unit>
        <trans-unit id="73a2eba7b03c376fc2d08adedf571829aab3ab4d" translate="yes" xml:space="preserve">
          <source>The total number of descriptors of the type &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt;, &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE&lt;/code&gt;, and &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER&lt;/code&gt; accessible to any given shader stage across all elements of &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxPerStageDescriptorSampledImages&lt;/code&gt;</source>
          <target state="translated">タイプの記述子の総数 &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt; 、 &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE&lt;/code&gt; 、及び &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER&lt;/code&gt; のすべての要素を横切る任意のシェーダステージにアクセス可能 &lt;code&gt;pSetLayouts&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;未満又は等しいこと &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxPerStageDescriptorSampledImages&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="da28eea927b9b94b4c73b38585008493b00ffa0f" translate="yes" xml:space="preserve">
          <source>The total number of descriptors of the type &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLER&lt;/code&gt; and &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt; accessible to any given shader stage across all elements of &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxPerStageDescriptorSamplers&lt;/code&gt;</source>
          <target state="translated">タイプの記述子の総数 &lt;code&gt;VK_DESCRIPTOR_TYPE_SAMPLER&lt;/code&gt; と &lt;code&gt;VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER&lt;/code&gt; のすべての要素を横切る任意のシェーダ段へのアクセス &lt;code&gt;pSetLayouts&lt;/code&gt; が&lt;strong&gt;なければならない&lt;/strong&gt;未満又は等しいこと &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxPerStageDescriptorSamplers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd07bd25e13e1e05df6857fcf3663988f0c412a1" translate="yes" xml:space="preserve">
          <source>The total number of descriptors of the type &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER&lt;/code&gt; and &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC&lt;/code&gt; accessible to any given shader stage across all elements of &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxPerStageDescriptorStorageBuffers&lt;/code&gt;</source>
          <target state="translated">タイプの記述子の総数 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER&lt;/code&gt; と &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC&lt;/code&gt; のすべての要素を横切る任意のシェーダステージがアクセス &lt;code&gt;pSetLayouts&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;未満又は等しいこと &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxPerStageDescriptorStorageBuffers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7bc6c3471db4af2f1b67376be436315e72e243e" translate="yes" xml:space="preserve">
          <source>The total number of descriptors of the type &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_IMAGE&lt;/code&gt;, and &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; accessible to any given shader stage across all elements of &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxPerStageDescriptorStorageImages&lt;/code&gt;</source>
          <target state="translated">総型の記述子の数 &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_IMAGE&lt;/code&gt; 、及び &lt;code&gt;VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER&lt;/code&gt; は、すべての要素間で任意のシェーダステージがアクセス &lt;code&gt;pSetLayouts&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;未満であるか、または等しい &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxPerStageDescriptorStorageImages&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="98823483c874132230a59f0813a8217a3259cbf1" translate="yes" xml:space="preserve">
          <source>The total number of descriptors of the type &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER&lt;/code&gt; and &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC&lt;/code&gt; accessible to any given shader stage across all elements of &lt;code&gt;pSetLayouts&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; be less than or equal to &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt;::&lt;code&gt;maxPerStageDescriptorUniformBuffers&lt;/code&gt;</source>
          <target state="translated">タイプの記述子の総数 &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER&lt;/code&gt; と &lt;code&gt;VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC&lt;/code&gt; のすべての要素を横切る任意のシェーダステージがアクセス &lt;code&gt;pSetLayouts&lt;/code&gt; &lt;strong&gt;なければならない&lt;/strong&gt;未満又は等しいこと &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; :: &lt;code&gt;maxPerStageDescriptorUniformBuffers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="10e64105c33717fc834a14842b5619c6f4426a6f" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;pfnAllocation&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;pfnAllocation&lt;/code&gt; のタイプは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="74afb14243a14484f0d4c36e3e767bae8f081301" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;pfnFree&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;pfnFree&lt;/code&gt; のタイプは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="dc2a415f63963012a8eecebeccd1ff40bcbc0188" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;pfnInternalAllocation&lt;/code&gt; is:</source>
          <target state="translated">のタイプ &lt;code&gt;pfnInternalAllocation&lt;/code&gt; 次のとおりです。</target>
        </trans-unit>
        <trans-unit id="72abb1776911c614fb6ab9f6cab4cbf592215c8b" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;pfnInternalFree&lt;/code&gt; is:</source>
          <target state="translated">のタイプ &lt;code&gt;pfnInternalFree&lt;/code&gt; 次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9c60019ea65453837ee5e5f1bcec37f92616b0a0" translate="yes" xml:space="preserve">
          <source>The type of &lt;code&gt;pfnReallocation&lt;/code&gt; is:</source>
          <target state="translated">のタイプ &lt;code&gt;pfnReallocation&lt;/code&gt; 次のとおりです。</target>
        </trans-unit>
        <trans-unit id="59cd79e18995e4deaf4b4fd9748c608440046c7e" translate="yes" xml:space="preserve">
          <source>The type of descriptors in a descriptor set is specified by &lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt;::&lt;code&gt;descriptorType&lt;/code&gt;, which &lt;strong&gt;must&lt;/strong&gt; be one of the values:</source>
          <target state="translated">記述子セット内の記述子のタイプは、&lt;a href=&quot;#VkWriteDescriptorSet&quot;&gt;VkWriteDescriptorSet&lt;/a&gt; :: &lt;code&gt;descriptorType&lt;/code&gt; によって指定されます。。これ&lt;strong&gt;は&lt;/strong&gt;、次のいずれかの値である&lt;strong&gt;必要&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="5ccc184a1d6b413579807169c7b54d56d1ea69a5" translate="yes" xml:space="preserve">
          <source>The type(s) of device access supported by each layout are:</source>
          <target state="translated">各レイアウトでサポートされているデバイスアクセスのタイプは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="d6f5ae2f24710b4be9e153e5537d4e160df65f8d" translate="yes" xml:space="preserve">
          <source>The types of image views that &lt;strong&gt;can&lt;/strong&gt; be created are:</source>
          <target state="translated">その画像ビューのタイプ &lt;strong&gt;&lt;/strong&gt;作成&lt;strong&gt;できる&lt;/strong&gt;は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="15839dad587dcadf748ff272d001ad48771f0c2c" translate="yes" xml:space="preserve">
          <source>The union of all destination regions, specified by the elements of &lt;code&gt;pRegions&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; not overlap in memory with any texel that &lt;strong&gt;may&lt;/strong&gt; be sampled during the blit operation</source>
          <target state="translated">要素で指定されたすべての宛先領域の和集合、 &lt;code&gt;pRegions&lt;/code&gt; 、&lt;strong&gt;必見&lt;/strong&gt;、ブリット操作中にサンプリングされる&lt;strong&gt;可能性の&lt;/strong&gt;あるテクセルとメモリ内で重複してん</target>
        </trans-unit>
        <trans-unit id="a6b5b4840159247d367192ba9d6d452ac2feba0b" translate="yes" xml:space="preserve">
          <source>The union of all source regions, and the union of all destination regions, specified by the elements of &lt;code&gt;pRegions&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; not overlap in memory</source>
          <target state="translated">すべてのソース領域の結合、およびすべての宛先領域の &lt;code&gt;pRegions&lt;/code&gt; の要素によって指定されます、メモリ内で重複しては&lt;strong&gt;なりませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="096529af4db29185292b78396a0e7b4b8777c5d2" translate="yes" xml:space="preserve">
          <source>The union of the source regions, and the union of the destination regions, specified by the elements of &lt;code&gt;pRegions&lt;/code&gt;, &lt;strong&gt;must&lt;/strong&gt; not overlap in memory</source>
          <target state="translated">&lt;code&gt;pRegions&lt;/code&gt; の要素で指定された、ソース領域のユニオンと宛先領域のユニオンメモリ内で重複しては&lt;strong&gt;なりませ&lt;/strong&gt;ん</target>
        </trans-unit>
        <trans-unit id="d42bbfb89ea8b8eb7f36264990a8ec44b6898bb4" translate="yes" xml:space="preserve">
          <source>The value of any element of the &lt;code&gt;pPreserveAttachments&lt;/code&gt; member in any given element of &lt;code&gt;pSubpasses&lt;/code&gt;&lt;strong&gt;must&lt;/strong&gt; not be &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</source>
          <target state="translated">任意の要素の値 &lt;code&gt;pPreserveAttachments&lt;/code&gt; の任意の所与の要素のメンバ &lt;code&gt;pSubpasses&lt;/code&gt; の&lt;strong&gt;マスト&lt;/strong&gt;ことはない &lt;code&gt;VK_ATTACHMENT_UNUSED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1d0487f48776f79b21686dce41b643930ac5f98d" translate="yes" xml:space="preserve">
          <source>The value returned in &lt;code&gt;minImageTransferGranularity&lt;/code&gt; has a unit of compressed texel blocks for images having a block-compressed format, and a unit of texels otherwise.</source>
          <target state="translated">返される値 &lt;code&gt;minImageTransferGranularity&lt;/code&gt; に、ブロック圧縮形式の画像の場合は圧縮テクセルブロックの単位が含まれ、それ以外の場合はテクセルの単位が含まれます。</target>
        </trans-unit>
        <trans-unit id="724ad04584feac74dfe1c61d6cc20e929683540d" translate="yes" xml:space="preserve">
          <source>The values taken from elements i of &lt;code&gt;pBuffers&lt;/code&gt; and &lt;code&gt;pOffsets&lt;/code&gt; replace the current state for the vertex input binding &lt;code&gt;firstBinding&lt;/code&gt; + i, for i in [0, &lt;code&gt;bindingCount&lt;/code&gt;). The vertex input binding is updated to start at the offset indicated by &lt;code&gt;pOffsets&lt;/code&gt;[i] from the start of the buffer &lt;code&gt;pBuffers&lt;/code&gt;[i]. All vertex input attributes that use each of these bindings will use these updated addresses in their address calculations for subsequent draw commands.</source>
          <target state="translated">&lt;code&gt;pBuffers&lt;/code&gt; と &lt;code&gt;pOffsets&lt;/code&gt; の要素iから取得した値は、頂点入力バインディング &lt;code&gt;firstBinding&lt;/code&gt; + i の現在の状態を置き換えます（i in [0、 &lt;code&gt;bindingCount&lt;/code&gt; ））。頂点入力バインディングは、 &lt;code&gt;pOffsets&lt;/code&gt; で示されるオフセットで開始するように更新されます、バッファ &lt;code&gt;pBuffers&lt;/code&gt; [i]の先頭から [i]でます。これらの各バインディングを使用するすべての頂点入力属性は、以降の描画コマンドのアドレス計算でこれらの更新されたアドレスを使用します。</target>
        </trans-unit>
        <trans-unit id="8074beb33e3f67407fcbb037b008601b118eaed2" translate="yes" xml:space="preserve">
          <source>The vendor of the physical device is responsible for selecting &lt;code&gt;deviceID&lt;/code&gt;. The value selected &lt;strong&gt;should&lt;/strong&gt; uniquely identify both the device version and any major configuration options (for example, core count in the case of multicore devices). The same device ID &lt;strong&gt;should&lt;/strong&gt; be used for all physical implementations of that device version and configuration. For example, all uses of a specific silicon IP GPU version and configuration &lt;strong&gt;should&lt;/strong&gt; use the same device ID, even if those uses occur in different SoCs.</source>
          <target state="translated">物理デバイスのベンダーは、 &lt;code&gt;deviceID&lt;/code&gt; の選択を担当します。選択した値は、デバイスのバージョンと主要な構成オプション（たとえば、マルチコアデバイスの場合はコア数）の両方&lt;strong&gt;を&lt;/strong&gt;一意に識別する必要があります。同じデバイスID &lt;strong&gt;は&lt;/strong&gt;、そのデバイスバージョンと構成のすべての物理的な実装に使用する&lt;strong&gt;必要&lt;/strong&gt;があります。たとえば、特定のシリコンIP GPUバージョンと構成のすべての使用は、それらの使用が異なるSoCで発生する場合でも、同じデバイスIDを使用する&lt;strong&gt;必要&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="03c8491a1f46be021902bb20b2a9b054a007d7aa" translate="yes" xml:space="preserve">
          <source>The viewport parameters shown in the above equations are found from these values as</source>
          <target state="translated">上記の式で示されるビューポートパラメータは、これらの値から次のように求められる。</target>
        </trans-unit>
        <trans-unit id="9e85e05c1ae03c2860baeff2e63a80e7d1069141" translate="yes" xml:space="preserve">
          <source>The viewport parameters taken from element i of &lt;code&gt;pViewports&lt;/code&gt; replace the current state for the viewport index &lt;code&gt;firstViewport&lt;/code&gt; + i, for i in [0, &lt;code&gt;viewportCount&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;pViewports&lt;/code&gt; の要素iから取得したビューポートパラメータは、ビューポートインデックス &lt;code&gt;firstViewport&lt;/code&gt; + i の現在の状態を[0、 &lt;code&gt;viewportCount&lt;/code&gt; ）のiに置き換えます。</target>
        </trans-unit>
        <trans-unit id="6bda13f6f3ff148e89a26736d0e16306772da2a7" translate="yes" xml:space="preserve">
          <source>The vulkan.h header allows the &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; definition to be overridden by the application. If &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; is already defined when the vulkan.h header is compiled the default definition is skipped. This allows the application to define a binary-compatible custom handle which &lt;strong&gt;may&lt;/strong&gt; provide more type-safety or other features needed by the application. Behavior is undefined if the application defines a non-binary-compatible handle and &lt;strong&gt;may&lt;/strong&gt; result in memory corruption or application termination. Binary compatibility is platform dependent so the application &lt;strong&gt;must&lt;/strong&gt; be careful if it overrides the default &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; definition.</source>
          <target state="translated">vulkan.hヘッダーを使用すると、 &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; 定義をアプリケーションでオーバーライドできます。場合 &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; が vulkan.hヘッダがコンパイルされたときにすでに定義されているデフォルトの定義はスキップされます。これは、アプリケーションがバイナリ互換カスタムハンドル定義することを可能にする&lt;strong&gt;ことができる&lt;/strong&gt;より多くの型の安全性やアプリケーションが必要とする他の機能を提供します。アプリケーションが非バイナリ互換ハンドルを定義している場合の動作は定義されておらず、メモリの破損やアプリケーションの終了を&lt;strong&gt;引き起こす可能&lt;/strong&gt;性があります。バイナリ互換性はプラットフォームに依存するため、デフォルトの &lt;code&gt;VK_DEFINE_NON_DISPATCHABLE_HANDLE&lt;/code&gt; 定義をオーバーライドする場合、アプリケーション&lt;strong&gt;は&lt;/strong&gt;注意する&lt;strong&gt;必要&lt;/strong&gt;があります。</target>
        </trans-unit>
        <trans-unit id="ce506fa7bdefd4ca123101b400a2ca3505f2d370" translate="yes" xml:space="preserve">
          <source>The width and height of the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxViewportDimensions&quot;&gt;implementation-dependent maximum viewport dimensions&lt;/a&gt;&lt;strong&gt;must&lt;/strong&gt; be greater than or equal to the width and height of the largest image which &lt;strong&gt;can&lt;/strong&gt; be created and attached to a framebuffer.</source>
          <target state="translated">幅と高さの&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxViewportDimensions&quot;&gt;実装に依存最大ビューポートの寸法が&lt;/a&gt;&lt;strong&gt;なければならない&lt;/strong&gt;よりも大きいかまたはその最大画像の幅と高さと等しくなります&lt;strong&gt;ができる&lt;/strong&gt;作成し、フレームバッファに結合させること。</target>
        </trans-unit>
        <trans-unit id="040b2047602bbe78894ff5fe5f325295655cc7ef" translate="yes" xml:space="preserve">
          <source>There &lt;strong&gt;may&lt;/strong&gt; be a performance cost for using a render area smaller than the framebuffer, unless it matches the render area granularity for the render pass.</source>
          <target state="translated">そこ &lt;strong&gt;&lt;/strong&gt;レンダーパスのレンダーエリアの粒度と一致しない限り、フレームバッファーよりも小さいレンダーエリアを使用すると、パフォーマンスが低下&lt;strong&gt;する可能性&lt;/strong&gt;がます。</target>
        </trans-unit>
        <trans-unit id="4271f85a7276cbd7d7052446e1917ac6c4b355b3" translate="yes" xml:space="preserve">
          <source>There &lt;strong&gt;must&lt;/strong&gt; be at least one memory type with both the &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; and &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; bits set in its &lt;code&gt;propertyFlags&lt;/code&gt;. There &lt;strong&gt;must&lt;/strong&gt; be at least one memory type with the &lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; bit set in its &lt;code&gt;propertyFlags&lt;/code&gt;.</source>
          <target state="translated">存在&lt;strong&gt;しなければならない&lt;/strong&gt;の両方と少なくとも一つのメモリタイプで &lt;code&gt;VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT&lt;/code&gt; と &lt;code&gt;VK_MEMORY_PROPERTY_HOST_COHERENT_BIT&lt;/code&gt; その中で設定されたビット &lt;code&gt;propertyFlags&lt;/code&gt; 。そこ&lt;strong&gt;なければならない&lt;/strong&gt;との少なくとも一つのメモリタイプである &lt;code&gt;VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT&lt;/code&gt; のその内のビットセット &lt;code&gt;propertyFlags&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1ec91d30ad7b14cac0056aefe7f90430deecf1aa" translate="yes" xml:space="preserve">
          <source>There are no Vulkan filter modes that directly correspond to OpenGL minification filters of &lt;code&gt;GL_LINEAR&lt;/code&gt; or &lt;code&gt;GL_NEAREST&lt;/code&gt;, but they &lt;strong&gt;can&lt;/strong&gt; be emulated using &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt;, &lt;code&gt;minLod&lt;/code&gt; = 0, and &lt;code&gt;maxLod&lt;/code&gt; = 0.25, and using &lt;code&gt;minFilter&lt;/code&gt; = &lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt; or &lt;code&gt;minFilter&lt;/code&gt; = &lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt;, respectively.</source>
          <target state="translated">&lt;code&gt;GL_LINEAR&lt;/code&gt; または &lt;code&gt;GL_NEAREST&lt;/code&gt; の OpenGL縮小フィルターに直接対応するVulkanフィルターモードはありませんが、これら&lt;strong&gt;は&lt;/strong&gt; &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt; 、 &lt;code&gt;minLod&lt;/code&gt; = 0、および &lt;code&gt;maxLod&lt;/code&gt; = 0.25を使用して、そしてそれぞれ &lt;code&gt;minFilter&lt;/code&gt; = &lt;code&gt;VK_FILTER_LINEAR&lt;/code&gt; または &lt;code&gt;minFilter&lt;/code&gt; = &lt;code&gt;VK_FILTER_NEAREST&lt;/code&gt; を使用してエミュレート&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="e17c8ac309406162c75b6dc324975ff41ab69834" translate="yes" xml:space="preserve">
          <source>There is a subpass &lt;strong&gt;S&lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt; that uses or preserves the attachment, and a subpass dependency from &lt;strong&gt;S&lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt; to &lt;strong&gt;S&lt;/strong&gt;.</source>
          <target state="translated">アタッチメントを使用または保持するサブパス&lt;strong&gt;S &lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt;と、&lt;strong&gt;S &lt;sub&gt;1&lt;/sub&gt;&lt;/strong&gt;から&lt;strong&gt;S&lt;/strong&gt;へのサブパス依存関係があります。</target>
        </trans-unit>
        <trans-unit id="3c78d23ea75b660fd0da3e971315140a57998cb0" translate="yes" xml:space="preserve">
          <source>There is an implementation-dependent maximum number of memory allocations which &lt;strong&gt;can&lt;/strong&gt; be simultaneously created on a device. This is specified by the &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxMemoryAllocationCount&quot;&gt;&lt;code&gt;maxMemoryAllocationCount&lt;/code&gt;&lt;/a&gt; member of the &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; structure. If &lt;code&gt;maxMemoryAllocationCount&lt;/code&gt; is exceeded, &lt;code&gt;vkAllocateMemory&lt;/code&gt; will return &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt;.</source>
          <target state="translated">デバイスで同時に作成&lt;strong&gt;できる&lt;/strong&gt;メモリ割り当ての実装に依存する最大数があります。これは、 &lt;code&gt;VkPhysicalDeviceLimits&lt;/code&gt; 構造体の&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#features-limits-maxMemoryAllocationCount&quot;&gt; &lt;code&gt;maxMemoryAllocationCount&lt;/code&gt; &lt;/a&gt;メンバーによって指定されます。場合 &lt;code&gt;maxMemoryAllocationCount&lt;/code&gt; を超えて、 &lt;code&gt;vkAllocateMemory&lt;/code&gt; が返されます &lt;code&gt;VK_ERROR_TOO_MANY_OBJECTS&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="2a491cfb6bfe3594f50c4f122eda503e38e7c1ce" translate="yes" xml:space="preserve">
          <source>There is no global state in Vulkan and all per-application state is stored in a &lt;code&gt;VkInstance&lt;/code&gt; object. Creating a &lt;code&gt;VkInstance&lt;/code&gt; object initializes the Vulkan library and allows the application to pass information about itself to the implementation.</source>
          <target state="translated">Vulkanにはグローバル状態はなく、アプリケーションごとの状態はすべて &lt;code&gt;VkInstance&lt;/code&gt; オブジェクトに格納されます。 &lt;code&gt;VkInstance&lt;/code&gt; オブジェクトを作成すると、Vulkanライブラリが初期化され、アプリケーションはそれ自体に関する情報を実装に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="4930b91363d357418428590b9f803dd9ce553156" translate="yes" xml:space="preserve">
          <source>There is no mechanism to query the size of an image before creating it, to compare that size against &lt;code&gt;maxResourceSize&lt;/code&gt;. If an application attempts to create an image that exceeds this limit, the creation will fail or the image will be invalid. While the advertised limit &lt;strong&gt;must&lt;/strong&gt; be at least 2&lt;sup&gt;31&lt;/sup&gt;, it &lt;strong&gt;may&lt;/strong&gt; not be possible to create an image that approaches that size, particularly for &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt;.</source>
          <target state="translated">イメージのサイズを &lt;code&gt;maxResourceSize&lt;/code&gt; と比較するために、イメージを作成する前にそのサイズを照会するメカニズムはありません。アプリケーションがこの制限を超えるイメージを作成しようとすると、作成が失敗するか、イメージが無効になります。アドバタイズ制限はながら&lt;strong&gt;なければならない&lt;/strong&gt;少なくとも2である&lt;sup&gt;31&lt;/sup&gt;は、&lt;strong&gt;できる&lt;/strong&gt;特にため、そのサイズに近づく画像を作成することができない &lt;code&gt;VK_IMAGE_TYPE_1D&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="24099cf06b9bee682799be8656a40584d910789b" translate="yes" xml:space="preserve">
          <source>These base coordinates are then offset by the first destination offset:</source>
          <target state="translated">そして、これらの基準座標は、最初の宛先オフセットによってオフセットされます。</target>
        </trans-unit>
        <trans-unit id="64489f90cc2dbb129e55b12499f631e51dc21349" translate="yes" xml:space="preserve">
          <source>These colors are described in detail in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-replacement&quot;&gt;Texel Replacement&lt;/a&gt;.</source>
          <target state="translated">これらの色については、「&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-replacement&quot;&gt;テクセル置換」&lt;/a&gt;で詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="4b0159a534c33a379dbb07b20b6029b7fa6019f8" translate="yes" xml:space="preserve">
          <source>These coordinates are used to sample from the source image, as described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures&quot;&gt;Image Operations chapter&lt;/a&gt;, with the filter mode equal to that of &lt;code&gt;filter&lt;/code&gt;, a mipmap mode of &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt; and an address mode of &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt;. Implementations &lt;strong&gt;must&lt;/strong&gt; clamp at the edge of the source image, and &lt;strong&gt;may&lt;/strong&gt; additionally clamp to the edge of the source region.</source>
          <target state="translated">記載されているように、これらの座標は、ソース画像からサンプリングするために使用される&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures&quot;&gt;画像操作の章&lt;/a&gt;と同等のフィルタモードと、 &lt;code&gt;filter&lt;/code&gt; のミップマップモード &lt;code&gt;VK_SAMPLER_MIPMAP_MODE_NEAREST&lt;/code&gt; とのアドレスモード &lt;code&gt;VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE&lt;/code&gt; 。実装はソース画像の端でクランプする&lt;strong&gt;必要があり&lt;/strong&gt;、さらにソース領域の端でクランプする&lt;strong&gt;こともでき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6eb39edba45f12d3132f8aa5cbf785899d220c1e" translate="yes" xml:space="preserve">
          <source>These filters are described in detail in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;Texel Filtering&lt;/a&gt;.</source>
          <target state="translated">これらのフィルターについては、「&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;テクセルフィルタリング」&lt;/a&gt;で詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="30692e1c13ededaacad9c849877c962c162e6d06" translate="yes" xml:space="preserve">
          <source>These modes affect only the final rasterization of polygons: in particular, a polygon&amp;rsquo;s vertices are shaded and the polygon is clipped and possibly culled before these modes are applied.</source>
          <target state="translated">これらのモードは、ポリゴンの最終的なラスタライズのみに影響します。特に、これらのモードが適用される前に、ポリゴンの頂点がシェーディングされ、ポリゴンがクリップされ、場合によってはカリングされます。</target>
        </trans-unit>
        <trans-unit id="3103d3743b08f0841d7a1150bfefa9da4df3a9e8" translate="yes" xml:space="preserve">
          <source>These modes are described in detail in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;Texel Filtering&lt;/a&gt;.</source>
          <target state="translated">これらのモードについては、「&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#textures-texel-filtering&quot;&gt;テクセルフィルタリング」&lt;/a&gt;で詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="0b91338e13062917fd8d49405c7110cff3ee2556" translate="yes" xml:space="preserve">
          <source>These values are intended to measure relative statistics on one implementation. Various device architectures will count these values differently. Any or all counters &lt;strong&gt;may&lt;/strong&gt; be affected by the issues described in &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-undefined&quot;&gt;Query Operation&lt;/a&gt;.</source>
          <target state="translated">これらの値は、1つの実装の相対的な統計を測定することを目的としています。さまざまなデバイスアーキテクチャでは、これらの値のカウント方法が異なります。&lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/html/vkspec.html#queries-operation-undefined&quot;&gt;クエリ操作で&lt;/a&gt;説明されている問題により、一部またはすべてのカウンター&lt;strong&gt;が&lt;/strong&gt;影響を受ける&lt;strong&gt;可能性&lt;/strong&gt;が&lt;strong&gt;あり&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="0432ad8ea9ac8a6371af658f747f0b1aaa984c75" translate="yes" xml:space="preserve">
          <source>This allows the last compressed texel block of the image in each non-multiple dimension to be included as a source or destination of the copy.</source>
          <target state="translated">これにより、非多重次元ごとに画像の最後の圧縮されたテクセルブロックをコピーのソースまたはデスティネーションとして含めることができる。</target>
        </trans-unit>
        <trans-unit id="32d67a6a010db08cb7cbee09ae62081cc40d2d31" translate="yes" xml:space="preserve">
          <source>This command &lt;strong&gt;must&lt;/strong&gt; only be called inside of a render pass instance</source>
          <target state="translated">このコマンドは、レンダーパスインスタンス内でのみ呼び出す&lt;strong&gt;必要があり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="10ae78c7bb735edd8cb22a9c1f299d658706e238" translate="yes" xml:space="preserve">
          <source>This command &lt;strong&gt;must&lt;/strong&gt; only be called outside of a render pass instance</source>
          <target state="translated">このコマンドは、レンダーパスインスタンスの外部でのみ呼び出す&lt;strong&gt;必要があり&lt;/strong&gt;ます</target>
        </trans-unit>
        <trans-unit id="8d7c911fa9621656f34fe4b77934410504543a23" translate="yes" xml:space="preserve">
          <source>This is a purely informational callback.</source>
          <target state="translated">これは純粋に情報提供のためのコールバックです。</target>
        </trans-unit>
        <trans-unit id="793f467b177506a6a7574bbd94cdd31a9c25fac5" translate="yes" xml:space="preserve">
          <source>This macro &lt;strong&gt;can&lt;/strong&gt; be used when constructing the &lt;a href=&quot;#VkApplicationInfo&quot;&gt;VkApplicationInfo&lt;/a&gt;::&lt;code&gt;apiVersion&lt;/code&gt; parameter passed to &lt;a href=&quot;#vkCreateInstance&quot;&gt;vkCreateInstance&lt;/a&gt;.</source>
          <target state="translated">このマクロ&lt;strong&gt;は&lt;/strong&gt;、&lt;a href=&quot;#VkApplicationInfo&quot;&gt;vkCreateInstanceに&lt;/a&gt;渡される&lt;a href=&quot;#vkCreateInstance&quot;&gt;VkApplicationInfo&lt;/a&gt; :: &lt;code&gt;apiVersion&lt;/code&gt; パラメータを作成するときに使用&lt;strong&gt;でき&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="50967c23579778cdefd5f4195f1eb73b55ca84fd" translate="yes" xml:space="preserve">
          <source>This page is a generated document. Fixes and changes should be made to the generator scripts, not directly.</source>
          <target state="translated">このページは生成されたドキュメントです。修正や変更は、直接ではなくジェネレータースクリプトに行う必要があります。</target>
        </trans-unit>
        <trans-unit id="6d3744f49fa1443c89fc0da04c14165ba6ad90b5" translate="yes" xml:space="preserve">
          <source>This restriction means that the render pass has full knowledge of all uses of all of the attachments, so that the implementation is able to make correct decisions about when and how to perform layout transitions, when to overlap execution of subpasses, etc.</source>
          <target state="translated">この制限は、レンダーパスが添付ファイルのすべての用途を完全に把握していることを意味し、レイアウト遷移をいつどのように実行するか、サブパスの実行をいつオーバーラップさせるかなどについて、実装が正しい判断を下せるようにすることを意味します。</target>
        </trans-unit>
        <trans-unit id="9e067e5b5d2e5eca5086fe9127c97682f7d58459" translate="yes" xml:space="preserve">
          <source>This union is used where part of the API requires either color or depth/stencil clear values, depending on the attachment, and defines the initial clear values in the &lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt; structure.</source>
          <target state="translated">このユニオンは、アタッチメントに応じて、APIの一部で色または深度/ステンシルのクリア値が必要な場合に使用され、&lt;a href=&quot;#VkRenderPassBeginInfo&quot;&gt;VkRenderPassBeginInfo&lt;/a&gt;構造体で初期クリア値を定義します。</target>
        </trans-unit>
        <trans-unit id="1aef8c9e8eb1d7a90f50e9c1bb403a8a1e0b0c50" translate="yes" xml:space="preserve">
          <source>To allocate command buffers, call:</source>
          <target state="translated">コマンドバッファを割り当てるには、コールします。</target>
        </trans-unit>
        <trans-unit id="6b20f0130ba0fad974419761771dd338c83d125f" translate="yes" xml:space="preserve">
          <source>To allocate descriptor sets from a descriptor pool, call:</source>
          <target state="translated">ディスクリプタプールからディスクリプタセットを割り当てるには、以下を呼び出します。</target>
        </trans-unit>
        <trans-unit id="7555a11fd062095e524fdcd196228de29092ef32" translate="yes" xml:space="preserve">
          <source>To allocate memory objects, call:</source>
          <target state="translated">メモリオブジェクトを割り当てるには、呼び出します。</target>
        </trans-unit>
        <trans-unit id="615fa4d5583c87e1142196c86fca2bb07b45f3d0" translate="yes" xml:space="preserve">
          <source>To attach memory to a buffer object, call:</source>
          <target state="translated">バッファオブジェクトにメモリをアタッチするには、コールします。</target>
        </trans-unit>
        <trans-unit id="1680ffc10a228e8d720ed08f1d0a6ac879f906ec" translate="yes" xml:space="preserve">
          <source>To attach memory to an image object, call:</source>
          <target state="translated">画像オブジェクトにメモリをアタッチするには、呼び出します。</target>
        </trans-unit>
        <trans-unit id="64bb1b826b19b78c84ee3ba86a477a2da0851b25" translate="yes" xml:space="preserve">
          <source>To begin a query, call:</source>
          <target state="translated">クエリを開始するには、コールします。</target>
        </trans-unit>
        <trans-unit id="b07c2355a44ca6f58bf6f9651f07d0c919fadc56" translate="yes" xml:space="preserve">
          <source>To begin a render pass instance, call:</source>
          <target state="translated">レンダーパスのインスタンスを開始するには、コールします。</target>
        </trans-unit>
        <trans-unit id="3be0ac278e471208630efa76c88eabcf7de66de9" translate="yes" xml:space="preserve">
          <source>To begin recording a command buffer, call:</source>
          <target state="translated">コマンドバッファの記録を開始するには、コールします。</target>
        </trans-unit>
        <trans-unit id="d4d1f168cdf034a59fa62e8bc357fc21b96758a2" translate="yes" xml:space="preserve">
          <source>To bind an index buffer to a command buffer, call:</source>
          <target state="translated">インデックスバッファをコマンドバッファにバインドするには、コールします。</target>
        </trans-unit>
        <trans-unit id="50690f60e769e7d7103105681eedbdb23e0c5852" translate="yes" xml:space="preserve">
          <source>To bind one or more descriptor sets to a command buffer, call:</source>
          <target state="translated">1つ以上の記述子セットをコマンドバッファにバインドするには、コールします。</target>
        </trans-unit>
        <trans-unit id="9c435bacd4629dc2424dc087cc97c57e3973d0aa" translate="yes" xml:space="preserve">
          <source>To bind vertex buffers to a command buffer for use in subsequent draw commands, call:</source>
          <target state="translated">頂点バッファを後続の描画コマンドで使用するためのコマンドバッファにバインドするには、コールします。</target>
        </trans-unit>
        <trans-unit id="c2358f12c919badc0c2a67faadde0e585f56ee3b" translate="yes" xml:space="preserve">
          <source>To clear buffer data, call:</source>
          <target state="translated">バッファデータをクリアするには、コールします。</target>
        </trans-unit>
        <trans-unit id="c81cf0b6a2a2ea9a0db02d18d3d242030ac0980f" translate="yes" xml:space="preserve">
          <source>To clear one or more regions of color and depth/stencil attachments inside a render pass instance, call:</source>
          <target state="translated">レンダー パス インスタンス内のカラーおよび深度/ステンシル アタッチメントの 1 つ以上の領域をクリアするには、コールします。</target>
        </trans-unit>
        <trans-unit id="365bbb3cb0968432e53d6db60cf89d26201849fa" translate="yes" xml:space="preserve">
          <source>To clear one or more subranges of a color image, call:</source>
          <target state="translated">カラー画像の1つ以上のサブ領域をクリアするには、呼び出します。</target>
        </trans-unit>
        <trans-unit id="09d300f6450259928de5529ab2f3bf4c3ab3d28e" translate="yes" xml:space="preserve">
          <source>To clear one or more subranges of a depth/stencil image, call:</source>
          <target state="translated">デプス/ステンシル画像の1つ以上のサブレンジをクリアするには、コールします。</target>
        </trans-unit>
        <trans-unit id="b80336cb92cd34caa26bd8321f4908bee7c34c15" translate="yes" xml:space="preserve">
          <source>To complete recording of a command buffer, call:</source>
          <target state="translated">コマンドバッファの記録を完了するには、コールします。</target>
        </trans-unit>
        <trans-unit id="bee9945ea5e072bbed6272da07073b91d4a45af0" translate="yes" xml:space="preserve">
          <source>To copy both the depth and stencil aspects of a depth/stencil format, two entries in &lt;code&gt;pRegions&lt;/code&gt;&lt;strong&gt;can&lt;/strong&gt; be used, where one specifies the depth aspect in &lt;code&gt;imageSubresource&lt;/code&gt;, and the other specifies the stencil aspect.</source>
          <target state="translated">深度/ステンシルフォーマットの深度とステンシルの両方のアスペクトをコピーするには、 &lt;code&gt;pRegions&lt;/code&gt; の 2つのエントリを使用&lt;strong&gt;でき&lt;/strong&gt;ます。1つは &lt;code&gt;imageSubresource&lt;/code&gt; で深度のアスペクトを指定し、もう1つはステンシルアスペクトを指定します。</target>
        </trans-unit>
        <trans-unit id="8332f4221e849dd84bc88daa0d2c27c0e53a95ea" translate="yes" xml:space="preserve">
          <source>To copy data between buffer objects, call:</source>
          <target state="translated">バッファオブジェクト間でデータをコピーするには、コールします。</target>
        </trans-unit>
        <trans-unit id="d672dfee89874e29ce6332ba8b462934c390bb05" translate="yes" xml:space="preserve">
          <source>To copy data between image objects, call:</source>
          <target state="translated">イメージオブジェクト間でデータをコピーするには、呼び出します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
